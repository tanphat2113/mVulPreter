digraph "0_Chrome_9c90f2cec381a0460e3879eb8efd14bac4488dbe" {
"1000200" [label="(MethodReturn,void)"];
"1000117" [label="(Call,(!widget_->IsMinimized() ||\n       requested_state != ash::WindowStateType::kMinimized) &&\n      bounds_changed_callback_)"];
"1000118" [label="(Call,!widget_->IsMinimized() ||\n       requested_state != ash::WindowStateType::kMinimized)"];
"1000119" [label="(Call,!widget_->IsMinimized())"];
"1000120" [label="(Call,widget_->IsMinimized())"];
"1000123" [label="(Identifier,ash::WindowStateType::kMinimized)"];
"1000121" [label="(Call,requested_state != ash::WindowStateType::kMinimized)"];
"1000122" [label="(Identifier,requested_state)"];
"1000124" [label="(Identifier,bounds_changed_callback_)"];
"1000127" [label="(Call,* frame_view = GetFrameView())"];
"1000128" [label="(Identifier,frame_view)"];
"1000129" [label="(Call,GetFrameView())"];
"1000131" [label="(Call,becoming_snapped =\n        requested_state == ash::WindowStateType::kLeftSnapped ||\n        requested_state == ash::WindowStateType::kRightSnapped)"];
"1000132" [label="(Identifier,becoming_snapped)"];
"1000136" [label="(Identifier,ash::WindowStateType::kLeftSnapped)"];
"1000133" [label="(Call,requested_state == ash::WindowStateType::kLeftSnapped ||\n        requested_state == ash::WindowStateType::kRightSnapped)"];
"1000134" [label="(Call,requested_state == ash::WindowStateType::kLeftSnapped)"];
"1000135" [label="(Identifier,requested_state)"];
"1000139" [label="(Identifier,ash::WindowStateType::kRightSnapped)"];
"1000137" [label="(Call,requested_state == ash::WindowStateType::kRightSnapped)"];
"1000138" [label="(Identifier,requested_state)"];
"1000141" [label="(Call,is_tablet_mode =\n        WMHelper::GetInstance()->IsTabletModeWindowManagerEnabled())"];
"1000142" [label="(Identifier,is_tablet_mode)"];
"1000143" [label="(Call,WMHelper::GetInstance()->IsTabletModeWindowManagerEnabled())"];
"1000101" [label="(MethodParameterIn,ash::WindowStateType current_state)"];
"1000311" [label="(MethodParameterOut,ash::WindowStateType current_state)"];
"1000145" [label="(Call,client_bounds =\n        becoming_snapped && is_tablet_mode\n            ? window_bounds\n            : frame_view->GetClientBoundsForWindowBounds(window_bounds))"];
"1000146" [label="(Identifier,client_bounds)"];
"1000150" [label="(Identifier,is_tablet_mode)"];
"1000147" [label="(Call,becoming_snapped && is_tablet_mode\n            ? window_bounds\n            : frame_view->GetClientBoundsForWindowBounds(window_bounds))"];
"1000148" [label="(Call,becoming_snapped && is_tablet_mode)"];
"1000149" [label="(Identifier,becoming_snapped)"];
"1000151" [label="(Identifier,window_bounds)"];
"1000152" [label="(Call,frame_view->GetClientBoundsForWindowBounds(window_bounds))"];
"1000153" [label="(Identifier,window_bounds)"];
"1000155" [label="(Call,current_size = frame_view->GetBoundsForClientView().size())"];
"1000156" [label="(Identifier,current_size)"];
"1000157" [label="(Call,frame_view->GetBoundsForClientView().size())"];
"1000161" [label="(Call,client_bounds.size() != current_size &&\n                     !widget_->IsMaximized() && !widget_->IsFullscreen())"];
"1000162" [label="(Call,client_bounds.size() != current_size)"];
"1000163" [label="(Call,client_bounds.size())"];
"1000164" [label="(Identifier,current_size)"];
"1000159" [label="(Call,is_resize = client_bounds.size() != current_size &&\n                     !widget_->IsMaximized() && !widget_->IsFullscreen())"];
"1000160" [label="(Identifier,is_resize)"];
"1000165" [label="(Call,!widget_->IsMaximized() && !widget_->IsFullscreen())"];
"1000166" [label="(Call,!widget_->IsMaximized())"];
"1000167" [label="(Call,widget_->IsMaximized())"];
"1000168" [label="(Call,!widget_->IsFullscreen())"];
"1000169" [label="(Call,widget_->IsFullscreen())"];
"1000171" [label="(Identifier,current_state)"];
"1000170" [label="(Call,bounds_changed_callback_.Run(current_state, requested_state, display_id,\n                                 client_bounds, is_resize, bounds_change))"];
"1000172" [label="(Identifier,requested_state)"];
"1000173" [label="(Identifier,display_id)"];
"1000174" [label="(Identifier,client_bounds)"];
"1000175" [label="(Identifier,is_resize)"];
"1000176" [label="(Identifier,bounds_change)"];
"1000102" [label="(MethodParameterIn,ash::WindowStateType requested_state)"];
"1000312" [label="(MethodParameterOut,ash::WindowStateType requested_state)"];
"1000179" [label="(Identifier,window_state)"];
"1000180" [label="(Call,GetWindowState())"];
"1000125" [label="(Block,)"];
"1000178" [label="(Call,* window_state = GetWindowState())"];
"1000181" [label="(ControlStructure,if (server_reparent_window_ &&\n        window_state->GetDisplay().id() != display_id))"];
"1000182" [label="(Call,server_reparent_window_ &&\n        window_state->GetDisplay().id() != display_id)"];
"1000183" [label="(Identifier,server_reparent_window_)"];
"1000186" [label="(Identifier,display_id)"];
"1000184" [label="(Call,window_state->GetDisplay().id() != display_id)"];
"1000185" [label="(Call,window_state->GetDisplay().id())"];
"1000190" [label="(Call,container_id = window_state->window()->parent()->id())"];
"1000191" [label="(Identifier,container_id)"];
"1000192" [label="(Call,window_state->window()->parent()->id())"];
"1000194" [label="(Call,* new_parent =\n          ash::Shell::GetRootWindowControllerWithDisplayId(display_id)\n              ->GetContainer(container_id))"];
"1000195" [label="(Identifier,new_parent)"];
"1000187" [label="(Block,)"];
"1000196" [label="(Call,ash::Shell::GetRootWindowControllerWithDisplayId(display_id)\n              ->GetContainer(container_id))"];
"1000197" [label="(Identifier,container_id)"];
"1000199" [label="(Call,window_state->window())"];
"1000198" [label="(Call,new_parent->AddChild(window_state->window()))"];
"1000103" [label="(MethodParameterIn,int64_t display_id)"];
"1000313" [label="(MethodParameterOut,int64_t display_id)"];
"1000104" [label="(MethodParameterIn,const gfx::Rect& window_bounds)"];
"1000314" [label="(MethodParameterOut,const gfx::Rect& window_bounds)"];
"1000106" [label="(Block,)"];
"1000105" [label="(MethodParameterIn,int bounds_change)"];
"1000315" [label="(MethodParameterOut,int bounds_change)"];
"1000107" [label="(ControlStructure,if (ignore_bounds_change_request_))"];
"1000108" [label="(Identifier,ignore_bounds_change_request_)"];
"1000109" [label="(Return,return;)"];
"1000110" [label="(ControlStructure,if (!geometry().IsEmpty() && !window_bounds.IsEmpty() &&\n      (!widget_->IsMinimized() ||\n       requested_state != ash::WindowStateType::kMinimized) &&\n      bounds_changed_callback_))"];
"1000114" [label="(Call,!window_bounds.IsEmpty() &&\n      (!widget_->IsMinimized() ||\n       requested_state != ash::WindowStateType::kMinimized) &&\n      bounds_changed_callback_)"];
"1000115" [label="(Call,!window_bounds.IsEmpty())"];
"1000116" [label="(Call,window_bounds.IsEmpty())"];
"1000111" [label="(Call,!geometry().IsEmpty() && !window_bounds.IsEmpty() &&\n      (!widget_->IsMinimized() ||\n       requested_state != ash::WindowStateType::kMinimized) &&\n      bounds_changed_callback_)"];
"1000112" [label="(Call,!geometry().IsEmpty())"];
"1000113" [label="(Call,geometry().IsEmpty())"];
"1000200" -> "1000100"  [label="AST: "];
"1000200" -> "1000109"  [label="CFG: "];
"1000200" -> "1000198"  [label="CFG: "];
"1000200" -> "1000182"  [label="CFG: "];
"1000200" -> "1000111"  [label="CFG: "];
"1000170" -> "1000200"  [label="DDG: requested_state"];
"1000170" -> "1000200"  [label="DDG: bounds_change"];
"1000170" -> "1000200"  [label="DDG: display_id"];
"1000170" -> "1000200"  [label="DDG: current_state"];
"1000170" -> "1000200"  [label="DDG: bounds_changed_callback_.Run(current_state, requested_state, display_id,\n                                 client_bounds, is_resize, bounds_change)"];
"1000170" -> "1000200"  [label="DDG: client_bounds"];
"1000170" -> "1000200"  [label="DDG: is_resize"];
"1000184" -> "1000200"  [label="DDG: window_state->GetDisplay().id()"];
"1000184" -> "1000200"  [label="DDG: display_id"];
"1000147" -> "1000200"  [label="DDG: window_bounds"];
"1000147" -> "1000200"  [label="DDG: frame_view->GetClientBoundsForWindowBounds(window_bounds)"];
"1000147" -> "1000200"  [label="DDG: becoming_snapped && is_tablet_mode"];
"1000155" -> "1000200"  [label="DDG: frame_view->GetBoundsForClientView().size()"];
"1000105" -> "1000200"  [label="DDG: bounds_change"];
"1000111" -> "1000200"  [label="DDG: !window_bounds.IsEmpty() &&\n      (!widget_->IsMinimized() ||\n       requested_state != ash::WindowStateType::kMinimized) &&\n      bounds_changed_callback_"];
"1000111" -> "1000200"  [label="DDG: !geometry().IsEmpty()"];
"1000111" -> "1000200"  [label="DDG: !geometry().IsEmpty() && !window_bounds.IsEmpty() &&\n      (!widget_->IsMinimized() ||\n       requested_state != ash::WindowStateType::kMinimized) &&\n      bounds_changed_callback_"];
"1000117" -> "1000200"  [label="DDG: !widget_->IsMinimized() ||\n       requested_state != ash::WindowStateType::kMinimized"];
"1000117" -> "1000200"  [label="DDG: bounds_changed_callback_"];
"1000127" -> "1000200"  [label="DDG: frame_view"];
"1000127" -> "1000200"  [label="DDG: GetFrameView()"];
"1000118" -> "1000200"  [label="DDG: !widget_->IsMinimized()"];
"1000118" -> "1000200"  [label="DDG: requested_state != ash::WindowStateType::kMinimized"];
"1000182" -> "1000200"  [label="DDG: server_reparent_window_ &&\n        window_state->GetDisplay().id() != display_id"];
"1000182" -> "1000200"  [label="DDG: window_state->GetDisplay().id() != display_id"];
"1000182" -> "1000200"  [label="DDG: server_reparent_window_"];
"1000114" -> "1000200"  [label="DDG: (!widget_->IsMinimized() ||\n       requested_state != ash::WindowStateType::kMinimized) &&\n      bounds_changed_callback_"];
"1000114" -> "1000200"  [label="DDG: !window_bounds.IsEmpty()"];
"1000165" -> "1000200"  [label="DDG: !widget_->IsFullscreen()"];
"1000165" -> "1000200"  [label="DDG: !widget_->IsMaximized()"];
"1000162" -> "1000200"  [label="DDG: current_size"];
"1000162" -> "1000200"  [label="DDG: client_bounds.size()"];
"1000168" -> "1000200"  [label="DDG: widget_->IsFullscreen()"];
"1000178" -> "1000200"  [label="DDG: window_state"];
"1000178" -> "1000200"  [label="DDG: GetWindowState()"];
"1000104" -> "1000200"  [label="DDG: window_bounds"];
"1000121" -> "1000200"  [label="DDG: ash::WindowStateType::kMinimized"];
"1000121" -> "1000200"  [label="DDG: requested_state"];
"1000137" -> "1000200"  [label="DDG: ash::WindowStateType::kRightSnapped"];
"1000194" -> "1000200"  [label="DDG: new_parent"];
"1000194" -> "1000200"  [label="DDG: ash::Shell::GetRootWindowControllerWithDisplayId(display_id)\n              ->GetContainer(container_id)"];
"1000103" -> "1000200"  [label="DDG: display_id"];
"1000166" -> "1000200"  [label="DDG: widget_->IsMaximized()"];
"1000133" -> "1000200"  [label="DDG: requested_state == ash::WindowStateType::kLeftSnapped"];
"1000133" -> "1000200"  [label="DDG: requested_state == ash::WindowStateType::kRightSnapped"];
"1000148" -> "1000200"  [label="DDG: becoming_snapped"];
"1000148" -> "1000200"  [label="DDG: is_tablet_mode"];
"1000131" -> "1000200"  [label="DDG: requested_state == ash::WindowStateType::kLeftSnapped ||\n        requested_state == ash::WindowStateType::kRightSnapped"];
"1000102" -> "1000200"  [label="DDG: requested_state"];
"1000196" -> "1000200"  [label="DDG: container_id"];
"1000198" -> "1000200"  [label="DDG: window_state->window()"];
"1000198" -> "1000200"  [label="DDG: new_parent->AddChild(window_state->window())"];
"1000112" -> "1000200"  [label="DDG: geometry().IsEmpty()"];
"1000101" -> "1000200"  [label="DDG: current_state"];
"1000119" -> "1000200"  [label="DDG: widget_->IsMinimized()"];
"1000141" -> "1000200"  [label="DDG: WMHelper::GetInstance()->IsTabletModeWindowManagerEnabled()"];
"1000134" -> "1000200"  [label="DDG: ash::WindowStateType::kLeftSnapped"];
"1000161" -> "1000200"  [label="DDG: client_bounds.size() != current_size"];
"1000161" -> "1000200"  [label="DDG: !widget_->IsMaximized() && !widget_->IsFullscreen()"];
"1000145" -> "1000200"  [label="DDG: becoming_snapped && is_tablet_mode\n            ? window_bounds\n            : frame_view->GetClientBoundsForWindowBounds(window_bounds)"];
"1000115" -> "1000200"  [label="DDG: window_bounds.IsEmpty()"];
"1000190" -> "1000200"  [label="DDG: window_state->window()->parent()->id()"];
"1000159" -> "1000200"  [label="DDG: client_bounds.size() != current_size &&\n                     !widget_->IsMaximized() && !widget_->IsFullscreen()"];
"1000109" -> "1000200"  [label="DDG: <RET>"];
"1000117" -> "1000114"  [label="AST: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000117" -> "1000124"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000124" -> "1000117"  [label="AST: "];
"1000114" -> "1000117"  [label="CFG: "];
"1000117" -> "1000200"  [label="DDG: !widget_->IsMinimized() ||\n       requested_state != ash::WindowStateType::kMinimized"];
"1000117" -> "1000200"  [label="DDG: bounds_changed_callback_"];
"1000117" -> "1000114"  [label="DDG: !widget_->IsMinimized() ||\n       requested_state != ash::WindowStateType::kMinimized"];
"1000117" -> "1000114"  [label="DDG: bounds_changed_callback_"];
"1000118" -> "1000117"  [label="DDG: !widget_->IsMinimized()"];
"1000118" -> "1000117"  [label="DDG: requested_state != ash::WindowStateType::kMinimized"];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000118" -> "1000121"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000121" -> "1000118"  [label="AST: "];
"1000124" -> "1000118"  [label="CFG: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000118" -> "1000200"  [label="DDG: !widget_->IsMinimized()"];
"1000118" -> "1000200"  [label="DDG: requested_state != ash::WindowStateType::kMinimized"];
"1000118" -> "1000117"  [label="DDG: !widget_->IsMinimized()"];
"1000118" -> "1000117"  [label="DDG: requested_state != ash::WindowStateType::kMinimized"];
"1000119" -> "1000118"  [label="DDG: widget_->IsMinimized()"];
"1000121" -> "1000118"  [label="DDG: requested_state"];
"1000121" -> "1000118"  [label="DDG: ash::WindowStateType::kMinimized"];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000122" -> "1000119"  [label="CFG: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000200"  [label="DDG: widget_->IsMinimized()"];
"1000119" -> "1000118"  [label="DDG: widget_->IsMinimized()"];
"1000120" -> "1000119"  [label="AST: "];
"1000120" -> "1000115"  [label="CFG: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000122"  [label="CFG: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000121" -> "1000118"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000118" -> "1000121"  [label="CFG: "];
"1000121" -> "1000200"  [label="DDG: ash::WindowStateType::kMinimized"];
"1000121" -> "1000200"  [label="DDG: requested_state"];
"1000121" -> "1000118"  [label="DDG: requested_state"];
"1000121" -> "1000118"  [label="DDG: ash::WindowStateType::kMinimized"];
"1000102" -> "1000121"  [label="DDG: requested_state"];
"1000121" -> "1000134"  [label="DDG: requested_state"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000119"  [label="CFG: "];
"1000123" -> "1000122"  [label="CFG: "];
"1000124" -> "1000117"  [label="AST: "];
"1000124" -> "1000118"  [label="CFG: "];
"1000117" -> "1000124"  [label="CFG: "];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000132" -> "1000127"  [label="CFG: "];
"1000127" -> "1000200"  [label="DDG: frame_view"];
"1000127" -> "1000200"  [label="DDG: GetFrameView()"];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000111"  [label="CFG: "];
"1000129" -> "1000128"  [label="CFG: "];
"1000129" -> "1000127"  [label="AST: "];
"1000129" -> "1000128"  [label="CFG: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000131" -> "1000125"  [label="AST: "];
"1000131" -> "1000133"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="AST: "];
"1000142" -> "1000131"  [label="CFG: "];
"1000131" -> "1000200"  [label="DDG: requested_state == ash::WindowStateType::kLeftSnapped ||\n        requested_state == ash::WindowStateType::kRightSnapped"];
"1000133" -> "1000131"  [label="DDG: requested_state == ash::WindowStateType::kLeftSnapped"];
"1000133" -> "1000131"  [label="DDG: requested_state == ash::WindowStateType::kRightSnapped"];
"1000131" -> "1000148"  [label="DDG: becoming_snapped"];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000127"  [label="CFG: "];
"1000135" -> "1000132"  [label="CFG: "];
"1000136" -> "1000134"  [label="AST: "];
"1000136" -> "1000135"  [label="CFG: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000133" -> "1000131"  [label="AST: "];
"1000133" -> "1000134"  [label="CFG: "];
"1000133" -> "1000137"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000137" -> "1000133"  [label="AST: "];
"1000131" -> "1000133"  [label="CFG: "];
"1000133" -> "1000200"  [label="DDG: requested_state == ash::WindowStateType::kLeftSnapped"];
"1000133" -> "1000200"  [label="DDG: requested_state == ash::WindowStateType::kRightSnapped"];
"1000133" -> "1000131"  [label="DDG: requested_state == ash::WindowStateType::kLeftSnapped"];
"1000133" -> "1000131"  [label="DDG: requested_state == ash::WindowStateType::kRightSnapped"];
"1000134" -> "1000133"  [label="DDG: requested_state"];
"1000134" -> "1000133"  [label="DDG: ash::WindowStateType::kLeftSnapped"];
"1000137" -> "1000133"  [label="DDG: requested_state"];
"1000137" -> "1000133"  [label="DDG: ash::WindowStateType::kRightSnapped"];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000138" -> "1000134"  [label="CFG: "];
"1000133" -> "1000134"  [label="CFG: "];
"1000134" -> "1000200"  [label="DDG: ash::WindowStateType::kLeftSnapped"];
"1000134" -> "1000133"  [label="DDG: requested_state"];
"1000134" -> "1000133"  [label="DDG: ash::WindowStateType::kLeftSnapped"];
"1000121" -> "1000134"  [label="DDG: requested_state"];
"1000102" -> "1000134"  [label="DDG: requested_state"];
"1000134" -> "1000137"  [label="DDG: requested_state"];
"1000134" -> "1000170"  [label="DDG: requested_state"];
"1000135" -> "1000134"  [label="AST: "];
"1000135" -> "1000132"  [label="CFG: "];
"1000136" -> "1000135"  [label="CFG: "];
"1000139" -> "1000137"  [label="AST: "];
"1000139" -> "1000138"  [label="CFG: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000137" -> "1000133"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000133" -> "1000137"  [label="CFG: "];
"1000137" -> "1000200"  [label="DDG: ash::WindowStateType::kRightSnapped"];
"1000137" -> "1000133"  [label="DDG: requested_state"];
"1000137" -> "1000133"  [label="DDG: ash::WindowStateType::kRightSnapped"];
"1000134" -> "1000137"  [label="DDG: requested_state"];
"1000102" -> "1000137"  [label="DDG: requested_state"];
"1000137" -> "1000170"  [label="DDG: requested_state"];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000134"  [label="CFG: "];
"1000139" -> "1000138"  [label="CFG: "];
"1000141" -> "1000125"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000146" -> "1000141"  [label="CFG: "];
"1000141" -> "1000200"  [label="DDG: WMHelper::GetInstance()->IsTabletModeWindowManagerEnabled()"];
"1000141" -> "1000148"  [label="DDG: is_tablet_mode"];
"1000142" -> "1000141"  [label="AST: "];
"1000142" -> "1000131"  [label="CFG: "];
"1000143" -> "1000142"  [label="CFG: "];
"1000143" -> "1000141"  [label="AST: "];
"1000143" -> "1000142"  [label="CFG: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000200"  [label="DDG: current_state"];
"1000101" -> "1000170"  [label="DDG: current_state"];
"1000311" -> "1000100"  [label="AST: "];
"1000145" -> "1000125"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000156" -> "1000145"  [label="CFG: "];
"1000145" -> "1000200"  [label="DDG: becoming_snapped && is_tablet_mode\n            ? window_bounds\n            : frame_view->GetClientBoundsForWindowBounds(window_bounds)"];
"1000152" -> "1000145"  [label="DDG: window_bounds"];
"1000104" -> "1000145"  [label="DDG: window_bounds"];
"1000145" -> "1000170"  [label="DDG: client_bounds"];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000141"  [label="CFG: "];
"1000149" -> "1000146"  [label="CFG: "];
"1000150" -> "1000148"  [label="AST: "];
"1000150" -> "1000149"  [label="CFG: "];
"1000148" -> "1000150"  [label="CFG: "];
"1000147" -> "1000145"  [label="AST: "];
"1000147" -> "1000151"  [label="CFG: "];
"1000147" -> "1000152"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000151" -> "1000147"  [label="AST: "];
"1000152" -> "1000147"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000147" -> "1000200"  [label="DDG: window_bounds"];
"1000147" -> "1000200"  [label="DDG: frame_view->GetClientBoundsForWindowBounds(window_bounds)"];
"1000147" -> "1000200"  [label="DDG: becoming_snapped && is_tablet_mode"];
"1000152" -> "1000147"  [label="DDG: window_bounds"];
"1000104" -> "1000147"  [label="DDG: window_bounds"];
"1000148" -> "1000147"  [label="AST: "];
"1000148" -> "1000149"  [label="CFG: "];
"1000148" -> "1000150"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000150" -> "1000148"  [label="AST: "];
"1000151" -> "1000148"  [label="CFG: "];
"1000153" -> "1000148"  [label="CFG: "];
"1000148" -> "1000200"  [label="DDG: becoming_snapped"];
"1000148" -> "1000200"  [label="DDG: is_tablet_mode"];
"1000131" -> "1000148"  [label="DDG: becoming_snapped"];
"1000141" -> "1000148"  [label="DDG: is_tablet_mode"];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000146"  [label="CFG: "];
"1000150" -> "1000149"  [label="CFG: "];
"1000148" -> "1000149"  [label="CFG: "];
"1000151" -> "1000147"  [label="AST: "];
"1000151" -> "1000148"  [label="CFG: "];
"1000147" -> "1000151"  [label="CFG: "];
"1000152" -> "1000147"  [label="AST: "];
"1000152" -> "1000153"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000147" -> "1000152"  [label="CFG: "];
"1000152" -> "1000145"  [label="DDG: window_bounds"];
"1000152" -> "1000147"  [label="DDG: window_bounds"];
"1000104" -> "1000152"  [label="DDG: window_bounds"];
"1000153" -> "1000152"  [label="AST: "];
"1000153" -> "1000148"  [label="CFG: "];
"1000152" -> "1000153"  [label="CFG: "];
"1000155" -> "1000125"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000157" -> "1000155"  [label="AST: "];
"1000160" -> "1000155"  [label="CFG: "];
"1000155" -> "1000200"  [label="DDG: frame_view->GetBoundsForClientView().size()"];
"1000155" -> "1000162"  [label="DDG: current_size"];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000145"  [label="CFG: "];
"1000157" -> "1000156"  [label="CFG: "];
"1000157" -> "1000155"  [label="AST: "];
"1000157" -> "1000156"  [label="CFG: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000161" -> "1000159"  [label="AST: "];
"1000161" -> "1000162"  [label="CFG: "];
"1000161" -> "1000165"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000165" -> "1000161"  [label="AST: "];
"1000159" -> "1000161"  [label="CFG: "];
"1000161" -> "1000200"  [label="DDG: client_bounds.size() != current_size"];
"1000161" -> "1000200"  [label="DDG: !widget_->IsMaximized() && !widget_->IsFullscreen()"];
"1000161" -> "1000159"  [label="DDG: client_bounds.size() != current_size"];
"1000161" -> "1000159"  [label="DDG: !widget_->IsMaximized() && !widget_->IsFullscreen()"];
"1000162" -> "1000161"  [label="DDG: client_bounds.size()"];
"1000162" -> "1000161"  [label="DDG: current_size"];
"1000165" -> "1000161"  [label="DDG: !widget_->IsMaximized()"];
"1000165" -> "1000161"  [label="DDG: !widget_->IsFullscreen()"];
"1000162" -> "1000161"  [label="AST: "];
"1000162" -> "1000164"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000164" -> "1000162"  [label="AST: "];
"1000167" -> "1000162"  [label="CFG: "];
"1000161" -> "1000162"  [label="CFG: "];
"1000162" -> "1000200"  [label="DDG: current_size"];
"1000162" -> "1000200"  [label="DDG: client_bounds.size()"];
"1000162" -> "1000161"  [label="DDG: client_bounds.size()"];
"1000162" -> "1000161"  [label="DDG: current_size"];
"1000155" -> "1000162"  [label="DDG: current_size"];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000160"  [label="CFG: "];
"1000164" -> "1000163"  [label="CFG: "];
"1000164" -> "1000162"  [label="AST: "];
"1000164" -> "1000163"  [label="CFG: "];
"1000162" -> "1000164"  [label="CFG: "];
"1000159" -> "1000125"  [label="AST: "];
"1000159" -> "1000161"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000161" -> "1000159"  [label="AST: "];
"1000171" -> "1000159"  [label="CFG: "];
"1000159" -> "1000200"  [label="DDG: client_bounds.size() != current_size &&\n                     !widget_->IsMaximized() && !widget_->IsFullscreen()"];
"1000161" -> "1000159"  [label="DDG: client_bounds.size() != current_size"];
"1000161" -> "1000159"  [label="DDG: !widget_->IsMaximized() && !widget_->IsFullscreen()"];
"1000159" -> "1000170"  [label="DDG: is_resize"];
"1000160" -> "1000159"  [label="AST: "];
"1000160" -> "1000155"  [label="CFG: "];
"1000163" -> "1000160"  [label="CFG: "];
"1000165" -> "1000161"  [label="AST: "];
"1000165" -> "1000166"  [label="CFG: "];
"1000165" -> "1000168"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000168" -> "1000165"  [label="AST: "];
"1000161" -> "1000165"  [label="CFG: "];
"1000165" -> "1000200"  [label="DDG: !widget_->IsFullscreen()"];
"1000165" -> "1000200"  [label="DDG: !widget_->IsMaximized()"];
"1000165" -> "1000161"  [label="DDG: !widget_->IsMaximized()"];
"1000165" -> "1000161"  [label="DDG: !widget_->IsFullscreen()"];
"1000166" -> "1000165"  [label="DDG: widget_->IsMaximized()"];
"1000168" -> "1000165"  [label="DDG: widget_->IsFullscreen()"];
"1000166" -> "1000165"  [label="AST: "];
"1000166" -> "1000167"  [label="CFG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000169" -> "1000166"  [label="CFG: "];
"1000165" -> "1000166"  [label="CFG: "];
"1000166" -> "1000200"  [label="DDG: widget_->IsMaximized()"];
"1000166" -> "1000165"  [label="DDG: widget_->IsMaximized()"];
"1000167" -> "1000166"  [label="AST: "];
"1000167" -> "1000162"  [label="CFG: "];
"1000166" -> "1000167"  [label="CFG: "];
"1000168" -> "1000165"  [label="AST: "];
"1000168" -> "1000169"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000165" -> "1000168"  [label="CFG: "];
"1000168" -> "1000200"  [label="DDG: widget_->IsFullscreen()"];
"1000168" -> "1000165"  [label="DDG: widget_->IsFullscreen()"];
"1000169" -> "1000168"  [label="AST: "];
"1000169" -> "1000166"  [label="CFG: "];
"1000168" -> "1000169"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000171" -> "1000159"  [label="CFG: "];
"1000172" -> "1000171"  [label="CFG: "];
"1000170" -> "1000125"  [label="AST: "];
"1000170" -> "1000176"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000173" -> "1000170"  [label="AST: "];
"1000174" -> "1000170"  [label="AST: "];
"1000175" -> "1000170"  [label="AST: "];
"1000176" -> "1000170"  [label="AST: "];
"1000179" -> "1000170"  [label="CFG: "];
"1000170" -> "1000200"  [label="DDG: requested_state"];
"1000170" -> "1000200"  [label="DDG: bounds_change"];
"1000170" -> "1000200"  [label="DDG: display_id"];
"1000170" -> "1000200"  [label="DDG: current_state"];
"1000170" -> "1000200"  [label="DDG: bounds_changed_callback_.Run(current_state, requested_state, display_id,\n                                 client_bounds, is_resize, bounds_change)"];
"1000170" -> "1000200"  [label="DDG: client_bounds"];
"1000170" -> "1000200"  [label="DDG: is_resize"];
"1000101" -> "1000170"  [label="DDG: current_state"];
"1000134" -> "1000170"  [label="DDG: requested_state"];
"1000137" -> "1000170"  [label="DDG: requested_state"];
"1000102" -> "1000170"  [label="DDG: requested_state"];
"1000103" -> "1000170"  [label="DDG: display_id"];
"1000145" -> "1000170"  [label="DDG: client_bounds"];
"1000159" -> "1000170"  [label="DDG: is_resize"];
"1000105" -> "1000170"  [label="DDG: bounds_change"];
"1000170" -> "1000184"  [label="DDG: display_id"];
"1000172" -> "1000170"  [label="AST: "];
"1000172" -> "1000171"  [label="CFG: "];
"1000173" -> "1000172"  [label="CFG: "];
"1000173" -> "1000170"  [label="AST: "];
"1000173" -> "1000172"  [label="CFG: "];
"1000174" -> "1000173"  [label="CFG: "];
"1000174" -> "1000170"  [label="AST: "];
"1000174" -> "1000173"  [label="CFG: "];
"1000175" -> "1000174"  [label="CFG: "];
"1000175" -> "1000170"  [label="AST: "];
"1000175" -> "1000174"  [label="CFG: "];
"1000176" -> "1000175"  [label="CFG: "];
"1000176" -> "1000170"  [label="AST: "];
"1000176" -> "1000175"  [label="CFG: "];
"1000170" -> "1000176"  [label="CFG: "];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000200"  [label="DDG: requested_state"];
"1000102" -> "1000121"  [label="DDG: requested_state"];
"1000102" -> "1000134"  [label="DDG: requested_state"];
"1000102" -> "1000137"  [label="DDG: requested_state"];
"1000102" -> "1000170"  [label="DDG: requested_state"];
"1000312" -> "1000100"  [label="AST: "];
"1000179" -> "1000178"  [label="AST: "];
"1000179" -> "1000170"  [label="CFG: "];
"1000180" -> "1000179"  [label="CFG: "];
"1000180" -> "1000178"  [label="AST: "];
"1000180" -> "1000179"  [label="CFG: "];
"1000178" -> "1000180"  [label="CFG: "];
"1000125" -> "1000110"  [label="AST: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000130" -> "1000125"  [label="AST: "];
"1000131" -> "1000125"  [label="AST: "];
"1000140" -> "1000125"  [label="AST: "];
"1000141" -> "1000125"  [label="AST: "];
"1000144" -> "1000125"  [label="AST: "];
"1000145" -> "1000125"  [label="AST: "];
"1000154" -> "1000125"  [label="AST: "];
"1000155" -> "1000125"  [label="AST: "];
"1000158" -> "1000125"  [label="AST: "];
"1000159" -> "1000125"  [label="AST: "];
"1000170" -> "1000125"  [label="AST: "];
"1000177" -> "1000125"  [label="AST: "];
"1000178" -> "1000125"  [label="AST: "];
"1000181" -> "1000125"  [label="AST: "];
"1000178" -> "1000125"  [label="AST: "];
"1000178" -> "1000180"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000180" -> "1000178"  [label="AST: "];
"1000183" -> "1000178"  [label="CFG: "];
"1000178" -> "1000200"  [label="DDG: window_state"];
"1000178" -> "1000200"  [label="DDG: GetWindowState()"];
"1000181" -> "1000125"  [label="AST: "];
"1000182" -> "1000181"  [label="AST: "];
"1000187" -> "1000181"  [label="AST: "];
"1000182" -> "1000181"  [label="AST: "];
"1000182" -> "1000183"  [label="CFG: "];
"1000182" -> "1000184"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000184" -> "1000182"  [label="AST: "];
"1000191" -> "1000182"  [label="CFG: "];
"1000200" -> "1000182"  [label="CFG: "];
"1000182" -> "1000200"  [label="DDG: server_reparent_window_ &&\n        window_state->GetDisplay().id() != display_id"];
"1000182" -> "1000200"  [label="DDG: window_state->GetDisplay().id() != display_id"];
"1000182" -> "1000200"  [label="DDG: server_reparent_window_"];
"1000184" -> "1000182"  [label="DDG: window_state->GetDisplay().id()"];
"1000184" -> "1000182"  [label="DDG: display_id"];
"1000183" -> "1000182"  [label="AST: "];
"1000183" -> "1000178"  [label="CFG: "];
"1000185" -> "1000183"  [label="CFG: "];
"1000182" -> "1000183"  [label="CFG: "];
"1000186" -> "1000184"  [label="AST: "];
"1000186" -> "1000185"  [label="CFG: "];
"1000184" -> "1000186"  [label="CFG: "];
"1000184" -> "1000182"  [label="AST: "];
"1000184" -> "1000186"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000186" -> "1000184"  [label="AST: "];
"1000182" -> "1000184"  [label="CFG: "];
"1000184" -> "1000200"  [label="DDG: window_state->GetDisplay().id()"];
"1000184" -> "1000200"  [label="DDG: display_id"];
"1000184" -> "1000182"  [label="DDG: window_state->GetDisplay().id()"];
"1000184" -> "1000182"  [label="DDG: display_id"];
"1000170" -> "1000184"  [label="DDG: display_id"];
"1000103" -> "1000184"  [label="DDG: display_id"];
"1000185" -> "1000184"  [label="AST: "];
"1000185" -> "1000183"  [label="CFG: "];
"1000186" -> "1000185"  [label="CFG: "];
"1000190" -> "1000187"  [label="AST: "];
"1000190" -> "1000192"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000192" -> "1000190"  [label="AST: "];
"1000195" -> "1000190"  [label="CFG: "];
"1000190" -> "1000200"  [label="DDG: window_state->window()->parent()->id()"];
"1000190" -> "1000196"  [label="DDG: container_id"];
"1000191" -> "1000190"  [label="AST: "];
"1000191" -> "1000182"  [label="CFG: "];
"1000192" -> "1000191"  [label="CFG: "];
"1000192" -> "1000190"  [label="AST: "];
"1000192" -> "1000191"  [label="CFG: "];
"1000190" -> "1000192"  [label="CFG: "];
"1000194" -> "1000187"  [label="AST: "];
"1000194" -> "1000196"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000196" -> "1000194"  [label="AST: "];
"1000199" -> "1000194"  [label="CFG: "];
"1000194" -> "1000200"  [label="DDG: new_parent"];
"1000194" -> "1000200"  [label="DDG: ash::Shell::GetRootWindowControllerWithDisplayId(display_id)\n              ->GetContainer(container_id)"];
"1000196" -> "1000194"  [label="DDG: container_id"];
"1000195" -> "1000194"  [label="AST: "];
"1000195" -> "1000190"  [label="CFG: "];
"1000197" -> "1000195"  [label="CFG: "];
"1000187" -> "1000181"  [label="AST: "];
"1000188" -> "1000187"  [label="AST: "];
"1000189" -> "1000187"  [label="AST: "];
"1000190" -> "1000187"  [label="AST: "];
"1000193" -> "1000187"  [label="AST: "];
"1000194" -> "1000187"  [label="AST: "];
"1000198" -> "1000187"  [label="AST: "];
"1000196" -> "1000194"  [label="AST: "];
"1000196" -> "1000197"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000194" -> "1000196"  [label="CFG: "];
"1000196" -> "1000200"  [label="DDG: container_id"];
"1000196" -> "1000194"  [label="DDG: container_id"];
"1000190" -> "1000196"  [label="DDG: container_id"];
"1000197" -> "1000196"  [label="AST: "];
"1000197" -> "1000195"  [label="CFG: "];
"1000196" -> "1000197"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000199" -> "1000194"  [label="CFG: "];
"1000198" -> "1000199"  [label="CFG: "];
"1000198" -> "1000187"  [label="AST: "];
"1000198" -> "1000199"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="CFG: "];
"1000198" -> "1000200"  [label="DDG: window_state->window()"];
"1000198" -> "1000200"  [label="DDG: new_parent->AddChild(window_state->window())"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000200"  [label="DDG: display_id"];
"1000103" -> "1000170"  [label="DDG: display_id"];
"1000103" -> "1000184"  [label="DDG: display_id"];
"1000313" -> "1000100"  [label="AST: "];
"1000104" -> "1000100"  [label="AST: "];
"1000104" -> "1000200"  [label="DDG: window_bounds"];
"1000104" -> "1000145"  [label="DDG: window_bounds"];
"1000104" -> "1000147"  [label="DDG: window_bounds"];
"1000104" -> "1000152"  [label="DDG: window_bounds"];
"1000314" -> "1000100"  [label="AST: "];
"1000106" -> "1000100"  [label="AST: "];
"1000107" -> "1000106"  [label="AST: "];
"1000110" -> "1000106"  [label="AST: "];
"1000105" -> "1000100"  [label="AST: "];
"1000105" -> "1000200"  [label="DDG: bounds_change"];
"1000105" -> "1000170"  [label="DDG: bounds_change"];
"1000315" -> "1000100"  [label="AST: "];
"1000107" -> "1000106"  [label="AST: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000100"  [label="CFG: "];
"1000109" -> "1000108"  [label="CFG: "];
"1000113" -> "1000108"  [label="CFG: "];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000108"  [label="CFG: "];
"1000200" -> "1000109"  [label="CFG: "];
"1000109" -> "1000200"  [label="DDG: <RET>"];
"1000110" -> "1000106"  [label="AST: "];
"1000111" -> "1000110"  [label="AST: "];
"1000125" -> "1000110"  [label="AST: "];
"1000114" -> "1000111"  [label="AST: "];
"1000114" -> "1000115"  [label="CFG: "];
"1000114" -> "1000117"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000117" -> "1000114"  [label="AST: "];
"1000111" -> "1000114"  [label="CFG: "];
"1000114" -> "1000200"  [label="DDG: (!widget_->IsMinimized() ||\n       requested_state != ash::WindowStateType::kMinimized) &&\n      bounds_changed_callback_"];
"1000114" -> "1000200"  [label="DDG: !window_bounds.IsEmpty()"];
"1000114" -> "1000111"  [label="DDG: !window_bounds.IsEmpty()"];
"1000114" -> "1000111"  [label="DDG: (!widget_->IsMinimized() ||\n       requested_state != ash::WindowStateType::kMinimized) &&\n      bounds_changed_callback_"];
"1000115" -> "1000114"  [label="DDG: window_bounds.IsEmpty()"];
"1000117" -> "1000114"  [label="DDG: !widget_->IsMinimized() ||\n       requested_state != ash::WindowStateType::kMinimized"];
"1000117" -> "1000114"  [label="DDG: bounds_changed_callback_"];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000120" -> "1000115"  [label="CFG: "];
"1000114" -> "1000115"  [label="CFG: "];
"1000115" -> "1000200"  [label="DDG: window_bounds.IsEmpty()"];
"1000115" -> "1000114"  [label="DDG: window_bounds.IsEmpty()"];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000112"  [label="CFG: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000112"  [label="CFG: "];
"1000111" -> "1000114"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000114" -> "1000111"  [label="AST: "];
"1000128" -> "1000111"  [label="CFG: "];
"1000200" -> "1000111"  [label="CFG: "];
"1000111" -> "1000200"  [label="DDG: !window_bounds.IsEmpty() &&\n      (!widget_->IsMinimized() ||\n       requested_state != ash::WindowStateType::kMinimized) &&\n      bounds_changed_callback_"];
"1000111" -> "1000200"  [label="DDG: !geometry().IsEmpty()"];
"1000111" -> "1000200"  [label="DDG: !geometry().IsEmpty() && !window_bounds.IsEmpty() &&\n      (!widget_->IsMinimized() ||\n       requested_state != ash::WindowStateType::kMinimized) &&\n      bounds_changed_callback_"];
"1000112" -> "1000111"  [label="DDG: geometry().IsEmpty()"];
"1000114" -> "1000111"  [label="DDG: !window_bounds.IsEmpty()"];
"1000114" -> "1000111"  [label="DDG: (!widget_->IsMinimized() ||\n       requested_state != ash::WindowStateType::kMinimized) &&\n      bounds_changed_callback_"];
"1000112" -> "1000111"  [label="AST: "];
"1000112" -> "1000113"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000116" -> "1000112"  [label="CFG: "];
"1000111" -> "1000112"  [label="CFG: "];
"1000112" -> "1000200"  [label="DDG: geometry().IsEmpty()"];
"1000112" -> "1000111"  [label="DDG: geometry().IsEmpty()"];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000108"  [label="CFG: "];
"1000112" -> "1000113"  [label="CFG: "];
}
