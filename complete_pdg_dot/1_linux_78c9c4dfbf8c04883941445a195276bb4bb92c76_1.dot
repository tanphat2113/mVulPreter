digraph "1_linux_78c9c4dfbf8c04883941445a195276bb4bb92c76_1" {
"1000134" [label="(MethodReturn,static void)"];
"1000101" [label="(MethodParameterIn,struct k_itimer *timr)"];
"1000186" [label="(MethodParameterOut,struct k_itimer *timr)"];
"1000131" [label="(FieldIdentifier,it_interval)"];
"1000129" [label="(Call,timr->it_interval)"];
"1000130" [label="(Identifier,timr)"];
"1000133" [label="(Identifier,timer)"];
"1000132" [label="(Call,hrtimer_restart(timer))"];
"1000102" [label="(Block,)"];
"1000104" [label="(Call,*timer = &timr->it.real.timer)"];
"1000105" [label="(Identifier,timer)"];
"1000106" [label="(Call,&timr->it.real.timer)"];
"1000107" [label="(Call,timr->it.real.timer)"];
"1000108" [label="(Call,timr->it.real)"];
"1000109" [label="(Call,timr->it)"];
"1000110" [label="(Identifier,timr)"];
"1000111" [label="(FieldIdentifier,it)"];
"1000112" [label="(FieldIdentifier,real)"];
"1000113" [label="(FieldIdentifier,timer)"];
"1000118" [label="(FieldIdentifier,it_interval)"];
"1000114" [label="(ControlStructure,if (!timr->it_interval))"];
"1000115" [label="(Call,!timr->it_interval)"];
"1000116" [label="(Call,timr->it_interval)"];
"1000117" [label="(Identifier,timr)"];
"1000119" [label="(Return,return;)"];
"1000120" [label="(Call,timr->it_overrun += (unsigned int) hrtimer_forward(timer,\n\t\t\t\t\t\ttimer->base->get_time(),\n\t\t\t\t\t\ttimr->it_interval))"];
"1000121" [label="(Call,timr->it_overrun)"];
"1000122" [label="(Identifier,timr)"];
"1000124" [label="(Call,(unsigned int) hrtimer_forward(timer,\n\t\t\t\t\t\ttimer->base->get_time(),\n\t\t\t\t\t\ttimr->it_interval))"];
"1000126" [label="(Call,hrtimer_forward(timer,\n\t\t\t\t\t\ttimer->base->get_time(),\n\t\t\t\t\t\ttimr->it_interval))"];
"1000127" [label="(Identifier,timer)"];
"1000123" [label="(FieldIdentifier,it_overrun)"];
"1000128" [label="(Call,timer->base->get_time())"];
"1000134" -> "1000100"  [label="AST: "];
"1000134" -> "1000119"  [label="CFG: "];
"1000134" -> "1000132"  [label="CFG: "];
"1000124" -> "1000134"  [label="DDG: hrtimer_forward(timer,\n\t\t\t\t\t\ttimer->base->get_time(),\n\t\t\t\t\t\ttimr->it_interval)"];
"1000104" -> "1000134"  [label="DDG: timer"];
"1000104" -> "1000134"  [label="DDG: &timr->it.real.timer"];
"1000132" -> "1000134"  [label="DDG: hrtimer_restart(timer)"];
"1000132" -> "1000134"  [label="DDG: timer"];
"1000126" -> "1000134"  [label="DDG: timr->it_interval"];
"1000126" -> "1000134"  [label="DDG: timer->base->get_time()"];
"1000115" -> "1000134"  [label="DDG: timr->it_interval"];
"1000115" -> "1000134"  [label="DDG: !timr->it_interval"];
"1000120" -> "1000134"  [label="DDG: (unsigned int) hrtimer_forward(timer,\n\t\t\t\t\t\ttimer->base->get_time(),\n\t\t\t\t\t\ttimr->it_interval)"];
"1000120" -> "1000134"  [label="DDG: timr->it_overrun"];
"1000101" -> "1000134"  [label="DDG: timr"];
"1000119" -> "1000134"  [label="DDG: <RET>"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000134"  [label="DDG: timr"];
"1000186" -> "1000100"  [label="AST: "];
"1000131" -> "1000129"  [label="AST: "];
"1000131" -> "1000130"  [label="CFG: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000129" -> "1000126"  [label="AST: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000129"  [label="AST: "];
"1000126" -> "1000129"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000128"  [label="CFG: "];
"1000131" -> "1000130"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000120"  [label="CFG: "];
"1000132" -> "1000133"  [label="CFG: "];
"1000132" -> "1000102"  [label="AST: "];
"1000132" -> "1000133"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="CFG: "];
"1000132" -> "1000134"  [label="DDG: hrtimer_restart(timer)"];
"1000132" -> "1000134"  [label="DDG: timer"];
"1000126" -> "1000132"  [label="DDG: timer"];
"1000102" -> "1000100"  [label="AST: "];
"1000103" -> "1000102"  [label="AST: "];
"1000104" -> "1000102"  [label="AST: "];
"1000114" -> "1000102"  [label="AST: "];
"1000120" -> "1000102"  [label="AST: "];
"1000132" -> "1000102"  [label="AST: "];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1000106"  [label="CFG: "];
"1000105" -> "1000104"  [label="AST: "];
"1000106" -> "1000104"  [label="AST: "];
"1000117" -> "1000104"  [label="CFG: "];
"1000104" -> "1000134"  [label="DDG: timer"];
"1000104" -> "1000134"  [label="DDG: &timr->it.real.timer"];
"1000104" -> "1000126"  [label="DDG: timer"];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000100"  [label="CFG: "];
"1000110" -> "1000105"  [label="CFG: "];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000104" -> "1000106"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000113"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000113" -> "1000107"  [label="AST: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000112"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000112" -> "1000108"  [label="AST: "];
"1000113" -> "1000108"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000112" -> "1000109"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000105"  [label="CFG: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000112" -> "1000108"  [label="AST: "];
"1000112" -> "1000109"  [label="CFG: "];
"1000108" -> "1000112"  [label="CFG: "];
"1000113" -> "1000107"  [label="AST: "];
"1000113" -> "1000108"  [label="CFG: "];
"1000107" -> "1000113"  [label="CFG: "];
"1000118" -> "1000116"  [label="AST: "];
"1000118" -> "1000117"  [label="CFG: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000114" -> "1000102"  [label="AST: "];
"1000115" -> "1000114"  [label="AST: "];
"1000119" -> "1000114"  [label="AST: "];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000119" -> "1000115"  [label="CFG: "];
"1000122" -> "1000115"  [label="CFG: "];
"1000115" -> "1000134"  [label="DDG: timr->it_interval"];
"1000115" -> "1000134"  [label="DDG: !timr->it_interval"];
"1000115" -> "1000126"  [label="DDG: timr->it_interval"];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1000104"  [label="CFG: "];
"1000118" -> "1000117"  [label="CFG: "];
"1000119" -> "1000114"  [label="AST: "];
"1000119" -> "1000115"  [label="CFG: "];
"1000134" -> "1000119"  [label="CFG: "];
"1000119" -> "1000134"  [label="DDG: <RET>"];
"1000120" -> "1000102"  [label="AST: "];
"1000120" -> "1000124"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000124" -> "1000120"  [label="AST: "];
"1000133" -> "1000120"  [label="CFG: "];
"1000120" -> "1000134"  [label="DDG: (unsigned int) hrtimer_forward(timer,\n\t\t\t\t\t\ttimer->base->get_time(),\n\t\t\t\t\t\ttimr->it_interval)"];
"1000120" -> "1000134"  [label="DDG: timr->it_overrun"];
"1000124" -> "1000120"  [label="DDG: hrtimer_forward(timer,\n\t\t\t\t\t\ttimer->base->get_time(),\n\t\t\t\t\t\ttimr->it_interval)"];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000125" -> "1000121"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000115"  [label="CFG: "];
"1000123" -> "1000122"  [label="CFG: "];
"1000124" -> "1000120"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000120" -> "1000124"  [label="CFG: "];
"1000124" -> "1000134"  [label="DDG: hrtimer_forward(timer,\n\t\t\t\t\t\ttimer->base->get_time(),\n\t\t\t\t\t\ttimr->it_interval)"];
"1000124" -> "1000120"  [label="DDG: hrtimer_forward(timer,\n\t\t\t\t\t\ttimer->base->get_time(),\n\t\t\t\t\t\ttimr->it_interval)"];
"1000126" -> "1000124"  [label="DDG: timer"];
"1000126" -> "1000124"  [label="DDG: timer->base->get_time()"];
"1000126" -> "1000124"  [label="DDG: timr->it_interval"];
"1000126" -> "1000124"  [label="AST: "];
"1000126" -> "1000129"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000128" -> "1000126"  [label="AST: "];
"1000129" -> "1000126"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000126" -> "1000134"  [label="DDG: timr->it_interval"];
"1000126" -> "1000134"  [label="DDG: timer->base->get_time()"];
"1000126" -> "1000124"  [label="DDG: timer"];
"1000126" -> "1000124"  [label="DDG: timer->base->get_time()"];
"1000126" -> "1000124"  [label="DDG: timr->it_interval"];
"1000104" -> "1000126"  [label="DDG: timer"];
"1000115" -> "1000126"  [label="DDG: timr->it_interval"];
"1000126" -> "1000132"  [label="DDG: timer"];
"1000127" -> "1000126"  [label="AST: "];
"1000127" -> "1000125"  [label="CFG: "];
"1000128" -> "1000127"  [label="CFG: "];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000122"  [label="CFG: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000128" -> "1000126"  [label="AST: "];
"1000128" -> "1000127"  [label="CFG: "];
"1000130" -> "1000128"  [label="CFG: "];
}
