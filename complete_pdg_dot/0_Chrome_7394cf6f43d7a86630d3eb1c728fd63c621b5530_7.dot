digraph "0_Chrome_7394cf6f43d7a86630d3eb1c728fd63c621b5530_7" {
"1000156" [label="(MethodReturn,void)"];
"1000103" [label="(MethodParameterIn,DiscardReason reason)"];
"1000239" [label="(MethodParameterOut,DiscardReason reason)"];
"1000104" [label="(Block,)"];
"1000129" [label="(Call,ExpectCanDiscardFalseTrivialAllReasons(first_lifecycle_unit))"];
"1000130" [label="(Identifier,first_lifecycle_unit)"];
"1000134" [label="(Identifier,source_)"];
"1000133" [label="(Call,other_tab_strip_model.AddObserver(source_))"];
"1000136" [label="(Call,CreateTestWebContents())"];
"1000135" [label="(Call,other_tab_strip_model.AppendWebContents(CreateTestWebContents(),\n                                             /*foreground=*/true))"];
"1000137" [label="(Identifier,true)"];
"1000106" [label="(Call,* first_lifecycle_unit = nullptr)"];
"1000107" [label="(Identifier,first_lifecycle_unit)"];
"1000108" [label="(Identifier,nullptr)"];
"1000138" [label="(Call,other_tab_strip_model.AppendWebContents(std::move(owned_contents), false))"];
"1000139" [label="(Call,std::move(owned_contents))"];
"1000140" [label="(Identifier,owned_contents)"];
"1000141" [label="(Identifier,false)"];
"1000143" [label="(Identifier,first_lifecycle_unit)"];
"1000142" [label="(Call,ExpectCanDiscardTrueAllReasons(first_lifecycle_unit))"];
"1000145" [label="(Identifier,LifecycleUnitState::ACTIVE)"];
"1000146" [label="(Call,first_lifecycle_unit->GetState())"];
"1000144" [label="(Call,EXPECT_EQ(LifecycleUnitState::ACTIVE, first_lifecycle_unit->GetState()))"];
"1000148" [label="(Identifier,reason)"];
"1000147" [label="(Call,first_lifecycle_unit->Discard(reason))"];
"1000150" [label="(Call,&tab_observer_)"];
"1000151" [label="(Identifier,tab_observer_)"];
"1000149" [label="(Call,testing::Mock::VerifyAndClear(&tab_observer_))"];
"1000152" [label="(Call,TransitionFromPendingDiscardToDiscardedIfNeeded(reason,\n                                                     first_lifecycle_unit))"];
"1000153" [label="(Identifier,reason)"];
"1000110" [label="(Call,* second_lifecycle_unit = nullptr)"];
"1000111" [label="(Identifier,second_lifecycle_unit)"];
"1000112" [label="(Identifier,nullptr)"];
"1000154" [label="(Identifier,first_lifecycle_unit)"];
"1000155" [label="(Block,)"];
"1000114" [label="(Identifier,true)"];
"1000113" [label="(Call,CreateTwoTabs(true /* focus_tab_strip */, &first_lifecycle_unit,\n                  &second_lifecycle_unit))"];
"1000115" [label="(Call,&first_lifecycle_unit)"];
"1000116" [label="(Identifier,first_lifecycle_unit)"];
"1000117" [label="(Call,&second_lifecycle_unit)"];
"1000118" [label="(Identifier,second_lifecycle_unit)"];
"1000120" [label="(Identifier,first_lifecycle_unit)"];
"1000119" [label="(Call,ExpectCanDiscardTrueAllReasons(first_lifecycle_unit))"];
"1000124" [label="(Call,content::WebContents> owned_contents)"];
"1000125" [label="(Identifier,content::WebContents)"];
"1000121" [label="(Call,std::unique_ptr<content::WebContents> owned_contents =\n        tab_strip_model_->DetachWebContentsAt(0))"];
"1000122" [label="(Call,std::unique_ptr<content::WebContents> owned_contents)"];
"1000123" [label="(Identifier,std::unique_ptr)"];
"1000126" [label="(Identifier,owned_contents)"];
"1000128" [label="(Literal,0)"];
"1000127" [label="(Call,tab_strip_model_->DetachWebContentsAt(0))"];
"1000156" -> "1000102"  [label="AST: "];
"1000156" -> "1000152"  [label="CFG: "];
"1000113" -> "1000156"  [label="DDG: &second_lifecycle_unit"];
"1000113" -> "1000156"  [label="DDG: &first_lifecycle_unit"];
"1000113" -> "1000156"  [label="DDG: CreateTwoTabs(true /* focus_tab_strip */, &first_lifecycle_unit,\n                  &second_lifecycle_unit)"];
"1000142" -> "1000156"  [label="DDG: ExpectCanDiscardTrueAllReasons(first_lifecycle_unit)"];
"1000124" -> "1000156"  [label="DDG: content::WebContents"];
"1000149" -> "1000156"  [label="DDG: testing::Mock::VerifyAndClear(&tab_observer_)"];
"1000149" -> "1000156"  [label="DDG: &tab_observer_"];
"1000152" -> "1000156"  [label="DDG: first_lifecycle_unit"];
"1000152" -> "1000156"  [label="DDG: TransitionFromPendingDiscardToDiscardedIfNeeded(reason,\n                                                     first_lifecycle_unit)"];
"1000152" -> "1000156"  [label="DDG: reason"];
"1000138" -> "1000156"  [label="DDG: other_tab_strip_model.AppendWebContents(std::move(owned_contents), false)"];
"1000138" -> "1000156"  [label="DDG: false"];
"1000138" -> "1000156"  [label="DDG: std::move(owned_contents)"];
"1000144" -> "1000156"  [label="DDG: first_lifecycle_unit->GetState()"];
"1000144" -> "1000156"  [label="DDG: EXPECT_EQ(LifecycleUnitState::ACTIVE, first_lifecycle_unit->GetState())"];
"1000144" -> "1000156"  [label="DDG: LifecycleUnitState::ACTIVE"];
"1000122" -> "1000156"  [label="DDG: content::WebContents> owned_contents"];
"1000122" -> "1000156"  [label="DDG: std::unique_ptr"];
"1000139" -> "1000156"  [label="DDG: owned_contents"];
"1000129" -> "1000156"  [label="DDG: ExpectCanDiscardFalseTrivialAllReasons(first_lifecycle_unit)"];
"1000103" -> "1000156"  [label="DDG: reason"];
"1000133" -> "1000156"  [label="DDG: source_"];
"1000133" -> "1000156"  [label="DDG: other_tab_strip_model.AddObserver(source_)"];
"1000121" -> "1000156"  [label="DDG: tab_strip_model_->DetachWebContentsAt(0)"];
"1000121" -> "1000156"  [label="DDG: std::unique_ptr<content::WebContents> owned_contents"];
"1000110" -> "1000156"  [label="DDG: nullptr"];
"1000110" -> "1000156"  [label="DDG: second_lifecycle_unit"];
"1000135" -> "1000156"  [label="DDG: other_tab_strip_model.AppendWebContents(CreateTestWebContents(),\n                                             /*foreground=*/true)"];
"1000135" -> "1000156"  [label="DDG: CreateTestWebContents()"];
"1000135" -> "1000156"  [label="DDG: true"];
"1000147" -> "1000156"  [label="DDG: first_lifecycle_unit->Discard(reason)"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000156"  [label="DDG: reason"];
"1000103" -> "1000147"  [label="DDG: reason"];
"1000103" -> "1000152"  [label="DDG: reason"];
"1000239" -> "1000102"  [label="AST: "];
"1000104" -> "1000102"  [label="AST: "];
"1000105" -> "1000104"  [label="AST: "];
"1000106" -> "1000104"  [label="AST: "];
"1000109" -> "1000104"  [label="AST: "];
"1000110" -> "1000104"  [label="AST: "];
"1000113" -> "1000104"  [label="AST: "];
"1000119" -> "1000104"  [label="AST: "];
"1000121" -> "1000104"  [label="AST: "];
"1000129" -> "1000104"  [label="AST: "];
"1000131" -> "1000104"  [label="AST: "];
"1000132" -> "1000104"  [label="AST: "];
"1000133" -> "1000104"  [label="AST: "];
"1000135" -> "1000104"  [label="AST: "];
"1000138" -> "1000104"  [label="AST: "];
"1000142" -> "1000104"  [label="AST: "];
"1000144" -> "1000104"  [label="AST: "];
"1000147" -> "1000104"  [label="AST: "];
"1000149" -> "1000104"  [label="AST: "];
"1000152" -> "1000104"  [label="AST: "];
"1000155" -> "1000104"  [label="AST: "];
"1000129" -> "1000104"  [label="AST: "];
"1000129" -> "1000130"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000134" -> "1000129"  [label="CFG: "];
"1000129" -> "1000156"  [label="DDG: ExpectCanDiscardFalseTrivialAllReasons(first_lifecycle_unit)"];
"1000119" -> "1000129"  [label="DDG: first_lifecycle_unit"];
"1000129" -> "1000142"  [label="DDG: first_lifecycle_unit"];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000121"  [label="CFG: "];
"1000129" -> "1000130"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000129"  [label="CFG: "];
"1000133" -> "1000134"  [label="CFG: "];
"1000133" -> "1000104"  [label="AST: "];
"1000133" -> "1000134"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000136" -> "1000133"  [label="CFG: "];
"1000133" -> "1000156"  [label="DDG: source_"];
"1000133" -> "1000156"  [label="DDG: other_tab_strip_model.AddObserver(source_)"];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000133"  [label="CFG: "];
"1000137" -> "1000136"  [label="CFG: "];
"1000135" -> "1000104"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000140" -> "1000135"  [label="CFG: "];
"1000135" -> "1000156"  [label="DDG: other_tab_strip_model.AppendWebContents(CreateTestWebContents(),\n                                             /*foreground=*/true)"];
"1000135" -> "1000156"  [label="DDG: CreateTestWebContents()"];
"1000135" -> "1000156"  [label="DDG: true"];
"1000113" -> "1000135"  [label="DDG: true"];
"1000137" -> "1000135"  [label="AST: "];
"1000137" -> "1000136"  [label="CFG: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000108" -> "1000106"  [label="AST: "];
"1000111" -> "1000106"  [label="CFG: "];
"1000106" -> "1000119"  [label="DDG: first_lifecycle_unit"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000102"  [label="CFG: "];
"1000108" -> "1000107"  [label="CFG: "];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000107"  [label="CFG: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000138" -> "1000104"  [label="AST: "];
"1000138" -> "1000141"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000141" -> "1000138"  [label="AST: "];
"1000143" -> "1000138"  [label="CFG: "];
"1000138" -> "1000156"  [label="DDG: other_tab_strip_model.AppendWebContents(std::move(owned_contents), false)"];
"1000138" -> "1000156"  [label="DDG: false"];
"1000138" -> "1000156"  [label="DDG: std::move(owned_contents)"];
"1000139" -> "1000138"  [label="DDG: owned_contents"];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000140"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="CFG: "];
"1000139" -> "1000156"  [label="DDG: owned_contents"];
"1000139" -> "1000138"  [label="DDG: owned_contents"];
"1000124" -> "1000139"  [label="DDG: owned_contents"];
"1000140" -> "1000139"  [label="AST: "];
"1000140" -> "1000135"  [label="CFG: "];
"1000139" -> "1000140"  [label="CFG: "];
"1000141" -> "1000138"  [label="AST: "];
"1000141" -> "1000139"  [label="CFG: "];
"1000138" -> "1000141"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000138"  [label="CFG: "];
"1000142" -> "1000143"  [label="CFG: "];
"1000142" -> "1000104"  [label="AST: "];
"1000142" -> "1000143"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000145" -> "1000142"  [label="CFG: "];
"1000142" -> "1000156"  [label="DDG: ExpectCanDiscardTrueAllReasons(first_lifecycle_unit)"];
"1000129" -> "1000142"  [label="DDG: first_lifecycle_unit"];
"1000142" -> "1000152"  [label="DDG: first_lifecycle_unit"];
"1000145" -> "1000144"  [label="AST: "];
"1000145" -> "1000142"  [label="CFG: "];
"1000146" -> "1000145"  [label="CFG: "];
"1000146" -> "1000144"  [label="AST: "];
"1000146" -> "1000145"  [label="CFG: "];
"1000144" -> "1000146"  [label="CFG: "];
"1000144" -> "1000104"  [label="AST: "];
"1000144" -> "1000146"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000146" -> "1000144"  [label="AST: "];
"1000148" -> "1000144"  [label="CFG: "];
"1000144" -> "1000156"  [label="DDG: first_lifecycle_unit->GetState()"];
"1000144" -> "1000156"  [label="DDG: EXPECT_EQ(LifecycleUnitState::ACTIVE, first_lifecycle_unit->GetState())"];
"1000144" -> "1000156"  [label="DDG: LifecycleUnitState::ACTIVE"];
"1000148" -> "1000147"  [label="AST: "];
"1000148" -> "1000144"  [label="CFG: "];
"1000147" -> "1000148"  [label="CFG: "];
"1000147" -> "1000104"  [label="AST: "];
"1000147" -> "1000148"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000151" -> "1000147"  [label="CFG: "];
"1000147" -> "1000156"  [label="DDG: first_lifecycle_unit->Discard(reason)"];
"1000103" -> "1000147"  [label="DDG: reason"];
"1000147" -> "1000152"  [label="DDG: reason"];
"1000150" -> "1000149"  [label="AST: "];
"1000150" -> "1000151"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000151" -> "1000147"  [label="CFG: "];
"1000150" -> "1000151"  [label="CFG: "];
"1000149" -> "1000104"  [label="AST: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000153" -> "1000149"  [label="CFG: "];
"1000149" -> "1000156"  [label="DDG: testing::Mock::VerifyAndClear(&tab_observer_)"];
"1000149" -> "1000156"  [label="DDG: &tab_observer_"];
"1000152" -> "1000104"  [label="AST: "];
"1000152" -> "1000154"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000156" -> "1000152"  [label="CFG: "];
"1000152" -> "1000156"  [label="DDG: first_lifecycle_unit"];
"1000152" -> "1000156"  [label="DDG: TransitionFromPendingDiscardToDiscardedIfNeeded(reason,\n                                                     first_lifecycle_unit)"];
"1000152" -> "1000156"  [label="DDG: reason"];
"1000147" -> "1000152"  [label="DDG: reason"];
"1000103" -> "1000152"  [label="DDG: reason"];
"1000142" -> "1000152"  [label="DDG: first_lifecycle_unit"];
"1000153" -> "1000152"  [label="AST: "];
"1000153" -> "1000149"  [label="CFG: "];
"1000154" -> "1000153"  [label="CFG: "];
"1000110" -> "1000104"  [label="AST: "];
"1000110" -> "1000112"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000112" -> "1000110"  [label="AST: "];
"1000114" -> "1000110"  [label="CFG: "];
"1000110" -> "1000156"  [label="DDG: nullptr"];
"1000110" -> "1000156"  [label="DDG: second_lifecycle_unit"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000106"  [label="CFG: "];
"1000112" -> "1000111"  [label="CFG: "];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000111"  [label="CFG: "];
"1000110" -> "1000112"  [label="CFG: "];
"1000154" -> "1000152"  [label="AST: "];
"1000154" -> "1000153"  [label="CFG: "];
"1000152" -> "1000154"  [label="CFG: "];
"1000155" -> "1000104"  [label="AST: "];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000110"  [label="CFG: "];
"1000116" -> "1000114"  [label="CFG: "];
"1000113" -> "1000104"  [label="AST: "];
"1000113" -> "1000117"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000117" -> "1000113"  [label="AST: "];
"1000120" -> "1000113"  [label="CFG: "];
"1000113" -> "1000156"  [label="DDG: &second_lifecycle_unit"];
"1000113" -> "1000156"  [label="DDG: &first_lifecycle_unit"];
"1000113" -> "1000156"  [label="DDG: CreateTwoTabs(true /* focus_tab_strip */, &first_lifecycle_unit,\n                  &second_lifecycle_unit)"];
"1000113" -> "1000135"  [label="DDG: true"];
"1000115" -> "1000113"  [label="AST: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000118" -> "1000115"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000114"  [label="CFG: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000117" -> "1000113"  [label="AST: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000113" -> "1000117"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000115"  [label="CFG: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000120" -> "1000113"  [label="CFG: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000119" -> "1000104"  [label="AST: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000123" -> "1000119"  [label="CFG: "];
"1000106" -> "1000119"  [label="DDG: first_lifecycle_unit"];
"1000119" -> "1000129"  [label="DDG: first_lifecycle_unit"];
"1000124" -> "1000122"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000124" -> "1000156"  [label="DDG: content::WebContents"];
"1000124" -> "1000122"  [label="DDG: content::WebContents"];
"1000124" -> "1000122"  [label="DDG: owned_contents"];
"1000124" -> "1000139"  [label="DDG: owned_contents"];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000123"  [label="CFG: "];
"1000126" -> "1000125"  [label="CFG: "];
"1000121" -> "1000104"  [label="AST: "];
"1000121" -> "1000127"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000127" -> "1000121"  [label="AST: "];
"1000130" -> "1000121"  [label="CFG: "];
"1000121" -> "1000156"  [label="DDG: tab_strip_model_->DetachWebContentsAt(0)"];
"1000121" -> "1000156"  [label="DDG: std::unique_ptr<content::WebContents> owned_contents"];
"1000127" -> "1000121"  [label="DDG: 0"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000128" -> "1000122"  [label="CFG: "];
"1000122" -> "1000156"  [label="DDG: content::WebContents> owned_contents"];
"1000122" -> "1000156"  [label="DDG: std::unique_ptr"];
"1000124" -> "1000122"  [label="DDG: content::WebContents"];
"1000124" -> "1000122"  [label="DDG: owned_contents"];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000119"  [label="CFG: "];
"1000125" -> "1000123"  [label="CFG: "];
"1000126" -> "1000124"  [label="AST: "];
"1000126" -> "1000125"  [label="CFG: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000122"  [label="CFG: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000127" -> "1000121"  [label="AST: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000121" -> "1000127"  [label="CFG: "];
"1000127" -> "1000121"  [label="DDG: 0"];
}
