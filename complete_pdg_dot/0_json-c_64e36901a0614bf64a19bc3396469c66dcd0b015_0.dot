digraph "0_json-c_64e36901a0614bf64a19bc3396469c66dcd0b015_0" {
"1000140" [label="(MethodReturn,unsigned long)"];
"1000103" [label="(MethodParameterIn,const void *k)"];
"1000189" [label="(MethodParameterOut,const void *k)"];
"1000124" [label="(Call,__sync_val_compare_and_swap(&random_seed, -1, seed))"];
"1000125" [label="(Call,&random_seed)"];
"1000126" [label="(Identifier,random_seed)"];
"1000127" [label="(Call,-1)"];
"1000128" [label="(Literal,1)"];
"1000129" [label="(Identifier,seed)"];
"1000130" [label="(Return,return hashlittle((const char*)k, strlen((const char*)k), random_seed);)"];
"1000132" [label="(Call,(const char*)k)"];
"1000134" [label="(Identifier,k)"];
"1000135" [label="(Call,strlen((const char*)k))"];
"1000136" [label="(Call,(const char*)k)"];
"1000138" [label="(Identifier,k)"];
"1000139" [label="(Identifier,random_seed)"];
"1000131" [label="(Call,hashlittle((const char*)k, strlen((const char*)k), random_seed))"];
"1000104" [label="(Block,)"];
"1000106" [label="(Call,random_seed = -1)"];
"1000107" [label="(Identifier,random_seed)"];
"1000108" [label="(Call,-1)"];
"1000109" [label="(Literal,1)"];
"1000110" [label="(ControlStructure,if (random_seed == -1))"];
"1000113" [label="(Call,-1)"];
"1000114" [label="(Literal,1)"];
"1000111" [label="(Call,random_seed == -1)"];
"1000112" [label="(Identifier,random_seed)"];
"1000115" [label="(Block,)"];
"1000119" [label="(Call,seed = json_c_get_random_seed())"];
"1000120" [label="(Identifier,seed)"];
"1000121" [label="(Call,json_c_get_random_seed())"];
"1000117" [label="(ControlStructure,while ((seed = json_c_get_random_seed()) == -1))"];
"1000122" [label="(Call,-1)"];
"1000123" [label="(Literal,1)"];
"1000118" [label="(Call,(seed = json_c_get_random_seed()) == -1)"];
"1000140" -> "1000102"  [label="AST: "];
"1000140" -> "1000130"  [label="CFG: "];
"1000124" -> "1000140"  [label="DDG: &random_seed"];
"1000124" -> "1000140"  [label="DDG: -1"];
"1000124" -> "1000140"  [label="DDG: seed"];
"1000124" -> "1000140"  [label="DDG: __sync_val_compare_and_swap(&random_seed, -1, seed)"];
"1000119" -> "1000140"  [label="DDG: json_c_get_random_seed()"];
"1000118" -> "1000140"  [label="DDG: (seed = json_c_get_random_seed()) == -1"];
"1000136" -> "1000140"  [label="DDG: k"];
"1000111" -> "1000140"  [label="DDG: random_seed == -1"];
"1000111" -> "1000140"  [label="DDG: -1"];
"1000131" -> "1000140"  [label="DDG: (const char*)k"];
"1000131" -> "1000140"  [label="DDG: random_seed"];
"1000131" -> "1000140"  [label="DDG: strlen((const char*)k)"];
"1000131" -> "1000140"  [label="DDG: hashlittle((const char*)k, strlen((const char*)k), random_seed)"];
"1000103" -> "1000140"  [label="DDG: k"];
"1000130" -> "1000140"  [label="DDG: <RET>"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000140"  [label="DDG: k"];
"1000103" -> "1000132"  [label="DDG: k"];
"1000103" -> "1000136"  [label="DDG: k"];
"1000189" -> "1000102"  [label="AST: "];
"1000124" -> "1000115"  [label="AST: "];
"1000124" -> "1000129"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000127" -> "1000124"  [label="AST: "];
"1000129" -> "1000124"  [label="AST: "];
"1000133" -> "1000124"  [label="CFG: "];
"1000124" -> "1000140"  [label="DDG: &random_seed"];
"1000124" -> "1000140"  [label="DDG: -1"];
"1000124" -> "1000140"  [label="DDG: seed"];
"1000124" -> "1000140"  [label="DDG: __sync_val_compare_and_swap(&random_seed, -1, seed)"];
"1000127" -> "1000124"  [label="DDG: 1"];
"1000119" -> "1000124"  [label="DDG: seed"];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000126"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000128" -> "1000125"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000118"  [label="CFG: "];
"1000125" -> "1000126"  [label="CFG: "];
"1000127" -> "1000124"  [label="AST: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="CFG: "];
"1000127" -> "1000124"  [label="DDG: 1"];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000125"  [label="CFG: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000129" -> "1000124"  [label="AST: "];
"1000129" -> "1000127"  [label="CFG: "];
"1000124" -> "1000129"  [label="CFG: "];
"1000130" -> "1000104"  [label="AST: "];
"1000130" -> "1000131"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000140" -> "1000130"  [label="CFG: "];
"1000130" -> "1000140"  [label="DDG: <RET>"];
"1000131" -> "1000130"  [label="DDG: hashlittle((const char*)k, strlen((const char*)k), random_seed)"];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000134"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="AST: "];
"1000137" -> "1000132"  [label="CFG: "];
"1000132" -> "1000131"  [label="DDG: k"];
"1000103" -> "1000132"  [label="DDG: k"];
"1000132" -> "1000136"  [label="DDG: k"];
"1000134" -> "1000132"  [label="AST: "];
"1000134" -> "1000133"  [label="CFG: "];
"1000132" -> "1000134"  [label="CFG: "];
"1000135" -> "1000131"  [label="AST: "];
"1000135" -> "1000136"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000139" -> "1000135"  [label="CFG: "];
"1000135" -> "1000131"  [label="DDG: (const char*)k"];
"1000136" -> "1000135"  [label="DDG: k"];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000138"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000135" -> "1000136"  [label="CFG: "];
"1000136" -> "1000140"  [label="DDG: k"];
"1000136" -> "1000135"  [label="DDG: k"];
"1000132" -> "1000136"  [label="DDG: k"];
"1000103" -> "1000136"  [label="DDG: k"];
"1000138" -> "1000136"  [label="AST: "];
"1000138" -> "1000137"  [label="CFG: "];
"1000136" -> "1000138"  [label="CFG: "];
"1000139" -> "1000131"  [label="AST: "];
"1000139" -> "1000135"  [label="CFG: "];
"1000131" -> "1000139"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000139"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000135" -> "1000131"  [label="AST: "];
"1000139" -> "1000131"  [label="AST: "];
"1000130" -> "1000131"  [label="CFG: "];
"1000131" -> "1000140"  [label="DDG: (const char*)k"];
"1000131" -> "1000140"  [label="DDG: random_seed"];
"1000131" -> "1000140"  [label="DDG: strlen((const char*)k)"];
"1000131" -> "1000140"  [label="DDG: hashlittle((const char*)k, strlen((const char*)k), random_seed)"];
"1000131" -> "1000130"  [label="DDG: hashlittle((const char*)k, strlen((const char*)k), random_seed)"];
"1000132" -> "1000131"  [label="DDG: k"];
"1000135" -> "1000131"  [label="DDG: (const char*)k"];
"1000111" -> "1000131"  [label="DDG: random_seed"];
"1000104" -> "1000102"  [label="AST: "];
"1000105" -> "1000104"  [label="AST: "];
"1000106" -> "1000104"  [label="AST: "];
"1000110" -> "1000104"  [label="AST: "];
"1000130" -> "1000104"  [label="AST: "];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000108" -> "1000106"  [label="AST: "];
"1000112" -> "1000106"  [label="CFG: "];
"1000108" -> "1000106"  [label="DDG: 1"];
"1000106" -> "1000111"  [label="DDG: random_seed"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000102"  [label="CFG: "];
"1000109" -> "1000107"  [label="CFG: "];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000109"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000108" -> "1000106"  [label="DDG: 1"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000107"  [label="CFG: "];
"1000108" -> "1000109"  [label="CFG: "];
"1000110" -> "1000104"  [label="AST: "];
"1000111" -> "1000110"  [label="AST: "];
"1000115" -> "1000110"  [label="AST: "];
"1000113" -> "1000111"  [label="AST: "];
"1000113" -> "1000114"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000111" -> "1000113"  [label="CFG: "];
"1000113" -> "1000111"  [label="DDG: 1"];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000112"  [label="CFG: "];
"1000113" -> "1000114"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000113"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000113" -> "1000111"  [label="AST: "];
"1000120" -> "1000111"  [label="CFG: "];
"1000133" -> "1000111"  [label="CFG: "];
"1000111" -> "1000140"  [label="DDG: random_seed == -1"];
"1000111" -> "1000140"  [label="DDG: -1"];
"1000106" -> "1000111"  [label="DDG: random_seed"];
"1000113" -> "1000111"  [label="DDG: 1"];
"1000111" -> "1000131"  [label="DDG: random_seed"];
"1000112" -> "1000111"  [label="AST: "];
"1000112" -> "1000106"  [label="CFG: "];
"1000114" -> "1000112"  [label="CFG: "];
"1000115" -> "1000110"  [label="AST: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000124" -> "1000115"  [label="AST: "];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000123" -> "1000119"  [label="CFG: "];
"1000119" -> "1000140"  [label="DDG: json_c_get_random_seed()"];
"1000119" -> "1000118"  [label="DDG: seed"];
"1000119" -> "1000124"  [label="DDG: seed"];
"1000120" -> "1000119"  [label="AST: "];
"1000120" -> "1000111"  [label="CFG: "];
"1000121" -> "1000120"  [label="CFG: "];
"1000121" -> "1000119"  [label="AST: "];
"1000121" -> "1000120"  [label="CFG: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000117" -> "1000115"  [label="AST: "];
"1000118" -> "1000117"  [label="AST: "];
"1000122" -> "1000118"  [label="AST: "];
"1000122" -> "1000123"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000118" -> "1000122"  [label="CFG: "];
"1000122" -> "1000118"  [label="DDG: 1"];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000119"  [label="CFG: "];
"1000122" -> "1000123"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000122"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000122" -> "1000118"  [label="AST: "];
"1000126" -> "1000118"  [label="CFG: "];
"1000118" -> "1000140"  [label="DDG: (seed = json_c_get_random_seed()) == -1"];
"1000119" -> "1000118"  [label="DDG: seed"];
"1000122" -> "1000118"  [label="DDG: 1"];
}
