digraph "1_Chrome_fae4d7b7d7e5c8a04a8b7a3258c0fc8362afa24c" {
"1000152" [label="(MethodReturn,bool)"];
"1000120" [label="(Call,& url = image->CachedImage()->GetResponse().Url())"];
"1000121" [label="(Identifier,url)"];
"1000122" [label="(Call,image->CachedImage()->GetResponse().Url())"];
"1000123" [label="(ControlStructure,if (url.IsNull() || url.IsEmpty() || !url.IsValid()))"];
"1000126" [label="(Call,url.IsEmpty() || !url.IsValid())"];
"1000127" [label="(Call,url.IsEmpty())"];
"1000128" [label="(Call,!url.IsValid())"];
"1000129" [label="(Call,url.IsValid())"];
"1000130" [label="(Block,)"];
"1000124" [label="(Call,url.IsNull() || url.IsEmpty() || !url.IsValid())"];
"1000125" [label="(Call,url.IsNull())"];
"1000132" [label="(Identifier,GL_INVALID_VALUE)"];
"1000131" [label="(Call,SynthesizeGLError(GL_INVALID_VALUE, function_name, \"invalid image\"))"];
"1000133" [label="(Identifier,function_name)"];
"1000134" [label="(Literal,\"invalid image\")"];
"1000136" [label="(Identifier,false)"];
"1000135" [label="(Return,return false;)"];
"1000139" [label="(Identifier,image)"];
"1000137" [label="(ControlStructure,if (WouldTaintOrigin(image, security_origin)))"];
"1000140" [label="(Identifier,security_origin)"];
"1000141" [label="(Block,)"];
"1000138" [label="(Call,WouldTaintOrigin(image, security_origin))"];
"1000143" [label="(Call,\"The cross-origin image at \" +\n                                       url.ElidedString() +\n                                       \" may not be loaded.\")"];
"1000144" [label="(Literal,\"The cross-origin image at \")"];
"1000142" [label="(Call,exception_state.ThrowSecurityError(\"The cross-origin image at \" +\n                                       url.ElidedString() +\n                                       \" may not be loaded.\"))"];
"1000145" [label="(Call,url.ElidedString() +\n                                       \" may not be loaded.\")"];
"1000146" [label="(Call,url.ElidedString())"];
"1000147" [label="(Literal,\" may not be loaded.\")"];
"1000101" [label="(MethodParameterIn,const SecurityOrigin* security_origin)"];
"1000215" [label="(MethodParameterOut,const SecurityOrigin* security_origin)"];
"1000149" [label="(Identifier,false)"];
"1000148" [label="(Return,return false;)"];
"1000151" [label="(Identifier,true)"];
"1000150" [label="(Return,return true;)"];
"1000102" [label="(MethodParameterIn,const char* function_name)"];
"1000216" [label="(MethodParameterOut,const char* function_name)"];
"1000103" [label="(MethodParameterIn,HTMLImageElement* image)"];
"1000217" [label="(MethodParameterOut,HTMLImageElement* image)"];
"1000105" [label="(Block,)"];
"1000104" [label="(MethodParameterIn,ExceptionState& exception_state)"];
"1000218" [label="(MethodParameterOut,ExceptionState& exception_state)"];
"1000110" [label="(Call,!image->CachedImage())"];
"1000111" [label="(Call,image->CachedImage())"];
"1000106" [label="(ControlStructure,if (!image || !image->CachedImage()))"];
"1000112" [label="(Block,)"];
"1000107" [label="(Call,!image || !image->CachedImage())"];
"1000108" [label="(Call,!image)"];
"1000109" [label="(Identifier,image)"];
"1000114" [label="(Identifier,GL_INVALID_VALUE)"];
"1000113" [label="(Call,SynthesizeGLError(GL_INVALID_VALUE, function_name, \"no image\"))"];
"1000115" [label="(Identifier,function_name)"];
"1000116" [label="(Literal,\"no image\")"];
"1000118" [label="(Identifier,false)"];
"1000117" [label="(Return,return false;)"];
"1000152" -> "1000100"  [label="AST: "];
"1000152" -> "1000117"  [label="CFG: "];
"1000152" -> "1000135"  [label="CFG: "];
"1000152" -> "1000148"  [label="CFG: "];
"1000152" -> "1000150"  [label="CFG: "];
"1000124" -> "1000152"  [label="DDG: url.IsEmpty() || !url.IsValid()"];
"1000124" -> "1000152"  [label="DDG: url.IsNull()"];
"1000124" -> "1000152"  [label="DDG: url.IsNull() || url.IsEmpty() || !url.IsValid()"];
"1000142" -> "1000152"  [label="DDG: exception_state.ThrowSecurityError(\\"The cross-origin image at \\" +\n                                       url.ElidedString() +\n                                       \\" may not be loaded.\\")"];
"1000142" -> "1000152"  [label="DDG: \\"The cross-origin image at \\" +\n                                       url.ElidedString() +\n                                       \\" may not be loaded.\\""];
"1000107" -> "1000152"  [label="DDG: !image"];
"1000107" -> "1000152"  [label="DDG: !image || !image->CachedImage()"];
"1000107" -> "1000152"  [label="DDG: !image->CachedImage()"];
"1000104" -> "1000152"  [label="DDG: exception_state"];
"1000113" -> "1000152"  [label="DDG: GL_INVALID_VALUE"];
"1000113" -> "1000152"  [label="DDG: function_name"];
"1000113" -> "1000152"  [label="DDG: SynthesizeGLError(GL_INVALID_VALUE, function_name, \\"no image\\")"];
"1000138" -> "1000152"  [label="DDG: security_origin"];
"1000138" -> "1000152"  [label="DDG: image"];
"1000138" -> "1000152"  [label="DDG: WouldTaintOrigin(image, security_origin)"];
"1000126" -> "1000152"  [label="DDG: url.IsEmpty()"];
"1000126" -> "1000152"  [label="DDG: !url.IsValid()"];
"1000145" -> "1000152"  [label="DDG: url.ElidedString()"];
"1000110" -> "1000152"  [label="DDG: image->CachedImage()"];
"1000108" -> "1000152"  [label="DDG: image"];
"1000131" -> "1000152"  [label="DDG: GL_INVALID_VALUE"];
"1000131" -> "1000152"  [label="DDG: function_name"];
"1000131" -> "1000152"  [label="DDG: SynthesizeGLError(GL_INVALID_VALUE, function_name, \\"invalid image\\")"];
"1000128" -> "1000152"  [label="DDG: url.IsValid()"];
"1000103" -> "1000152"  [label="DDG: image"];
"1000120" -> "1000152"  [label="DDG: url"];
"1000120" -> "1000152"  [label="DDG: image->CachedImage()->GetResponse().Url()"];
"1000102" -> "1000152"  [label="DDG: function_name"];
"1000101" -> "1000152"  [label="DDG: security_origin"];
"1000143" -> "1000152"  [label="DDG: url.ElidedString() +\n                                       \\" may not be loaded.\\""];
"1000135" -> "1000152"  [label="DDG: <RET>"];
"1000117" -> "1000152"  [label="DDG: <RET>"];
"1000148" -> "1000152"  [label="DDG: <RET>"];
"1000150" -> "1000152"  [label="DDG: <RET>"];
"1000120" -> "1000105"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000122" -> "1000120"  [label="AST: "];
"1000125" -> "1000120"  [label="CFG: "];
"1000120" -> "1000152"  [label="DDG: url"];
"1000120" -> "1000152"  [label="DDG: image->CachedImage()->GetResponse().Url()"];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000107"  [label="CFG: "];
"1000122" -> "1000121"  [label="CFG: "];
"1000122" -> "1000120"  [label="AST: "];
"1000122" -> "1000121"  [label="CFG: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000123" -> "1000105"  [label="AST: "];
"1000124" -> "1000123"  [label="AST: "];
"1000130" -> "1000123"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000126" -> "1000127"  [label="CFG: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000128" -> "1000126"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000126" -> "1000152"  [label="DDG: url.IsEmpty()"];
"1000126" -> "1000152"  [label="DDG: !url.IsValid()"];
"1000126" -> "1000124"  [label="DDG: url.IsEmpty()"];
"1000126" -> "1000124"  [label="DDG: !url.IsValid()"];
"1000128" -> "1000126"  [label="DDG: url.IsValid()"];
"1000127" -> "1000126"  [label="AST: "];
"1000127" -> "1000125"  [label="CFG: "];
"1000129" -> "1000127"  [label="CFG: "];
"1000126" -> "1000127"  [label="CFG: "];
"1000128" -> "1000126"  [label="AST: "];
"1000128" -> "1000129"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000128" -> "1000152"  [label="DDG: url.IsValid()"];
"1000128" -> "1000126"  [label="DDG: url.IsValid()"];
"1000129" -> "1000128"  [label="AST: "];
"1000129" -> "1000127"  [label="CFG: "];
"1000128" -> "1000129"  [label="CFG: "];
"1000130" -> "1000123"  [label="AST: "];
"1000131" -> "1000130"  [label="AST: "];
"1000135" -> "1000130"  [label="AST: "];
"1000124" -> "1000123"  [label="AST: "];
"1000124" -> "1000125"  [label="CFG: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000132" -> "1000124"  [label="CFG: "];
"1000139" -> "1000124"  [label="CFG: "];
"1000124" -> "1000152"  [label="DDG: url.IsEmpty() || !url.IsValid()"];
"1000124" -> "1000152"  [label="DDG: url.IsNull()"];
"1000124" -> "1000152"  [label="DDG: url.IsNull() || url.IsEmpty() || !url.IsValid()"];
"1000126" -> "1000124"  [label="DDG: url.IsEmpty()"];
"1000126" -> "1000124"  [label="DDG: !url.IsValid()"];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000120"  [label="CFG: "];
"1000127" -> "1000125"  [label="CFG: "];
"1000124" -> "1000125"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000124"  [label="CFG: "];
"1000133" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000134"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="AST: "];
"1000134" -> "1000131"  [label="AST: "];
"1000136" -> "1000131"  [label="CFG: "];
"1000131" -> "1000152"  [label="DDG: GL_INVALID_VALUE"];
"1000131" -> "1000152"  [label="DDG: function_name"];
"1000131" -> "1000152"  [label="DDG: SynthesizeGLError(GL_INVALID_VALUE, function_name, \\"invalid image\\")"];
"1000102" -> "1000131"  [label="DDG: function_name"];
"1000133" -> "1000131"  [label="AST: "];
"1000133" -> "1000132"  [label="CFG: "];
"1000134" -> "1000133"  [label="CFG: "];
"1000134" -> "1000131"  [label="AST: "];
"1000134" -> "1000133"  [label="CFG: "];
"1000131" -> "1000134"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000131"  [label="CFG: "];
"1000135" -> "1000136"  [label="CFG: "];
"1000136" -> "1000135"  [label="DDG: false"];
"1000135" -> "1000130"  [label="AST: "];
"1000135" -> "1000136"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000152" -> "1000135"  [label="CFG: "];
"1000135" -> "1000152"  [label="DDG: <RET>"];
"1000136" -> "1000135"  [label="DDG: false"];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000124"  [label="CFG: "];
"1000140" -> "1000139"  [label="CFG: "];
"1000137" -> "1000105"  [label="AST: "];
"1000138" -> "1000137"  [label="AST: "];
"1000141" -> "1000137"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000140" -> "1000139"  [label="CFG: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000141" -> "1000137"  [label="AST: "];
"1000142" -> "1000141"  [label="AST: "];
"1000148" -> "1000141"  [label="AST: "];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000144" -> "1000138"  [label="CFG: "];
"1000151" -> "1000138"  [label="CFG: "];
"1000138" -> "1000152"  [label="DDG: security_origin"];
"1000138" -> "1000152"  [label="DDG: image"];
"1000138" -> "1000152"  [label="DDG: WouldTaintOrigin(image, security_origin)"];
"1000108" -> "1000138"  [label="DDG: image"];
"1000103" -> "1000138"  [label="DDG: image"];
"1000101" -> "1000138"  [label="DDG: security_origin"];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000145" -> "1000143"  [label="AST: "];
"1000142" -> "1000143"  [label="CFG: "];
"1000143" -> "1000152"  [label="DDG: url.ElidedString() +\n                                       \\" may not be loaded.\\""];
"1000144" -> "1000143"  [label="AST: "];
"1000144" -> "1000138"  [label="CFG: "];
"1000146" -> "1000144"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000142" -> "1000143"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000149" -> "1000142"  [label="CFG: "];
"1000142" -> "1000152"  [label="DDG: exception_state.ThrowSecurityError(\\"The cross-origin image at \\" +\n                                       url.ElidedString() +\n                                       \\" may not be loaded.\\")"];
"1000142" -> "1000152"  [label="DDG: \\"The cross-origin image at \\" +\n                                       url.ElidedString() +\n                                       \\" may not be loaded.\\""];
"1000145" -> "1000143"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000145" -> "1000152"  [label="DDG: url.ElidedString()"];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000144"  [label="CFG: "];
"1000147" -> "1000146"  [label="CFG: "];
"1000147" -> "1000145"  [label="AST: "];
"1000147" -> "1000146"  [label="CFG: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000152"  [label="DDG: security_origin"];
"1000101" -> "1000138"  [label="DDG: security_origin"];
"1000215" -> "1000100"  [label="AST: "];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000142"  [label="CFG: "];
"1000148" -> "1000149"  [label="CFG: "];
"1000149" -> "1000148"  [label="DDG: false"];
"1000148" -> "1000141"  [label="AST: "];
"1000148" -> "1000149"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000152" -> "1000148"  [label="CFG: "];
"1000148" -> "1000152"  [label="DDG: <RET>"];
"1000149" -> "1000148"  [label="DDG: false"];
"1000151" -> "1000150"  [label="AST: "];
"1000151" -> "1000138"  [label="CFG: "];
"1000150" -> "1000151"  [label="CFG: "];
"1000151" -> "1000150"  [label="DDG: true"];
"1000150" -> "1000105"  [label="AST: "];
"1000150" -> "1000151"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="CFG: "];
"1000150" -> "1000152"  [label="DDG: <RET>"];
"1000151" -> "1000150"  [label="DDG: true"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000152"  [label="DDG: function_name"];
"1000102" -> "1000113"  [label="DDG: function_name"];
"1000102" -> "1000131"  [label="DDG: function_name"];
"1000216" -> "1000100"  [label="AST: "];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000152"  [label="DDG: image"];
"1000103" -> "1000108"  [label="DDG: image"];
"1000103" -> "1000138"  [label="DDG: image"];
"1000217" -> "1000100"  [label="AST: "];
"1000105" -> "1000100"  [label="AST: "];
"1000106" -> "1000105"  [label="AST: "];
"1000119" -> "1000105"  [label="AST: "];
"1000120" -> "1000105"  [label="AST: "];
"1000123" -> "1000105"  [label="AST: "];
"1000137" -> "1000105"  [label="AST: "];
"1000150" -> "1000105"  [label="AST: "];
"1000104" -> "1000100"  [label="AST: "];
"1000104" -> "1000152"  [label="DDG: exception_state"];
"1000218" -> "1000100"  [label="AST: "];
"1000110" -> "1000107"  [label="AST: "];
"1000110" -> "1000111"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000107" -> "1000110"  [label="CFG: "];
"1000110" -> "1000152"  [label="DDG: image->CachedImage()"];
"1000110" -> "1000107"  [label="DDG: image->CachedImage()"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000108"  [label="CFG: "];
"1000110" -> "1000111"  [label="CFG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000107" -> "1000106"  [label="AST: "];
"1000112" -> "1000106"  [label="AST: "];
"1000112" -> "1000106"  [label="AST: "];
"1000113" -> "1000112"  [label="AST: "];
"1000117" -> "1000112"  [label="AST: "];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000108"  [label="CFG: "];
"1000107" -> "1000110"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000110" -> "1000107"  [label="AST: "];
"1000114" -> "1000107"  [label="CFG: "];
"1000121" -> "1000107"  [label="CFG: "];
"1000107" -> "1000152"  [label="DDG: !image"];
"1000107" -> "1000152"  [label="DDG: !image || !image->CachedImage()"];
"1000107" -> "1000152"  [label="DDG: !image->CachedImage()"];
"1000108" -> "1000107"  [label="DDG: image"];
"1000110" -> "1000107"  [label="DDG: image->CachedImage()"];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000109"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000111" -> "1000108"  [label="CFG: "];
"1000107" -> "1000108"  [label="CFG: "];
"1000108" -> "1000152"  [label="DDG: image"];
"1000108" -> "1000107"  [label="DDG: image"];
"1000103" -> "1000108"  [label="DDG: image"];
"1000108" -> "1000138"  [label="DDG: image"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000100"  [label="CFG: "];
"1000108" -> "1000109"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000107"  [label="CFG: "];
"1000115" -> "1000114"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000116"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000116" -> "1000113"  [label="AST: "];
"1000118" -> "1000113"  [label="CFG: "];
"1000113" -> "1000152"  [label="DDG: GL_INVALID_VALUE"];
"1000113" -> "1000152"  [label="DDG: function_name"];
"1000113" -> "1000152"  [label="DDG: SynthesizeGLError(GL_INVALID_VALUE, function_name, \\"no image\\")"];
"1000102" -> "1000113"  [label="DDG: function_name"];
"1000115" -> "1000113"  [label="AST: "];
"1000115" -> "1000114"  [label="CFG: "];
"1000116" -> "1000115"  [label="CFG: "];
"1000116" -> "1000113"  [label="AST: "];
"1000116" -> "1000115"  [label="CFG: "];
"1000113" -> "1000116"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000113"  [label="CFG: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000118" -> "1000117"  [label="DDG: false"];
"1000117" -> "1000112"  [label="AST: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000152" -> "1000117"  [label="CFG: "];
"1000117" -> "1000152"  [label="DDG: <RET>"];
"1000118" -> "1000117"  [label="DDG: false"];
}
