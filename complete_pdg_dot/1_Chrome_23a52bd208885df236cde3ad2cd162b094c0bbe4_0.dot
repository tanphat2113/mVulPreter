digraph "1_Chrome_23a52bd208885df236cde3ad2cd162b094c0bbe4_0" {
"1000177" [label="(MethodReturn,bool)"];
"1000119" [label="(Identifier,true)"];
"1000118" [label="(Return,return true;)"];
"1000121" [label="(Call,resource_root_relative_path =\n      resource_url.path().empty() ? \"\" : resource_url.path().substr(1))"];
"1000122" [label="(Identifier,resource_root_relative_path)"];
"1000125" [label="(Literal,\"\")"];
"1000126" [label="(Call,resource_url.path().substr(1))"];
"1000123" [label="(Call,resource_url.path().empty() ? \"\" : resource_url.path().substr(1))"];
"1000124" [label="(Call,resource_url.path().empty())"];
"1000127" [label="(Literal,1)"];
"1000128" [label="(ControlStructure,if (extension->is_hosted_app() &&\n      !extension->icons().ContainsPath(resource_root_relative_path)))"];
"1000129" [label="(Call,extension->is_hosted_app() &&\n      !extension->icons().ContainsPath(resource_root_relative_path))"];
"1000130" [label="(Call,extension->is_hosted_app())"];
"1000133" [label="(Identifier,resource_root_relative_path)"];
"1000131" [label="(Call,!extension->icons().ContainsPath(resource_root_relative_path))"];
"1000134" [label="(Block,)"];
"1000132" [label="(Call,extension->icons().ContainsPath(resource_root_relative_path))"];
"1000138" [label="(Call,\"Denying load of \" << resource_url.spec() << \" from \"\n               << \"hosted app.\")"];
"1000139" [label="(Literal,\"Denying load of \")"];
"1000135" [label="(Call,LOG(ERROR) << \"Denying load of \" << resource_url.spec() << \" from \"\n               << \"hosted app.\")"];
"1000136" [label="(Call,LOG(ERROR))"];
"1000140" [label="(Call,resource_url.spec() << \" from \"\n               << \"hosted app.\")"];
"1000141" [label="(Call,resource_url.spec())"];
"1000142" [label="(Call,\" from \"\n               << \"hosted app.\")"];
"1000143" [label="(Literal,\" from \")"];
"1000137" [label="(Identifier,ERROR)"];
"1000144" [label="(Literal,\"hosted app.\")"];
"1000146" [label="(Identifier,false)"];
"1000145" [label="(Return,return false;)"];
"1000101" [label="(MethodParameterIn,const GURL& resource_url)"];
"1000268" [label="(MethodParameterOut,const GURL& resource_url)"];
"1000147" [label="(ControlStructure,if (!CommandLine::ForCurrentProcess()->HasSwitch(\n           switches::kDisableExtensionsResourceWhitelist) &&\n       !frame_url.is_empty() &&\n       !frame_url.SchemeIs(chrome::kExtensionScheme) &&\n       !extension->IsResourceWebAccessible(resource_url.path())))"];
"1000148" [label="(Call,!CommandLine::ForCurrentProcess()->HasSwitch(\n           switches::kDisableExtensionsResourceWhitelist) &&\n       !frame_url.is_empty() &&\n       !frame_url.SchemeIs(chrome::kExtensionScheme) &&\n       !extension->IsResourceWebAccessible(resource_url.path()))"];
"1000149" [label="(Call,!CommandLine::ForCurrentProcess()->HasSwitch(\n           switches::kDisableExtensionsResourceWhitelist))"];
"1000150" [label="(Call,CommandLine::ForCurrentProcess()->HasSwitch(\n           switches::kDisableExtensionsResourceWhitelist))"];
"1000151" [label="(Identifier,switches::kDisableExtensionsResourceWhitelist)"];
"1000152" [label="(Call,!frame_url.is_empty() &&\n       !frame_url.SchemeIs(chrome::kExtensionScheme) &&\n       !extension->IsResourceWebAccessible(resource_url.path()))"];
"1000153" [label="(Call,!frame_url.is_empty())"];
"1000154" [label="(Call,frame_url.is_empty())"];
"1000158" [label="(Identifier,chrome::kExtensionScheme)"];
"1000155" [label="(Call,!frame_url.SchemeIs(chrome::kExtensionScheme) &&\n       !extension->IsResourceWebAccessible(resource_url.path()))"];
"1000156" [label="(Call,!frame_url.SchemeIs(chrome::kExtensionScheme))"];
"1000157" [label="(Call,frame_url.SchemeIs(chrome::kExtensionScheme))"];
"1000161" [label="(Call,resource_url.path())"];
"1000162" [label="(Block,)"];
"1000159" [label="(Call,!extension->IsResourceWebAccessible(resource_url.path()))"];
"1000160" [label="(Call,extension->IsResourceWebAccessible(resource_url.path()))"];
"1000166" [label="(Call,\"Denying load of \" << resource_url.spec() << \" which \"\n                << \"is not a web accessible resource.\")"];
"1000167" [label="(Literal,\"Denying load of \")"];
"1000168" [label="(Call,resource_url.spec() << \" which \"\n                << \"is not a web accessible resource.\")"];
"1000169" [label="(Call,resource_url.spec())"];
"1000163" [label="(Call,LOG(ERROR) << \"Denying load of \" << resource_url.spec() << \" which \"\n                << \"is not a web accessible resource.\")"];
"1000164" [label="(Call,LOG(ERROR))"];
"1000170" [label="(Call,\" which \"\n                << \"is not a web accessible resource.\")"];
"1000171" [label="(Literal,\" which \")"];
"1000165" [label="(Identifier,ERROR)"];
"1000172" [label="(Literal,\"is not a web accessible resource.\")"];
"1000102" [label="(MethodParameterIn,const GURL& frame_url)"];
"1000269" [label="(MethodParameterOut,const GURL& frame_url)"];
"1000174" [label="(Identifier,false)"];
"1000173" [label="(Return,return false;)"];
"1000175" [label="(Return,return true;)"];
"1000176" [label="(Identifier,true)"];
"1000104" [label="(Block,)"];
"1000103" [label="(MethodParameterIn,const ExtensionSet* loaded_extensions)"];
"1000270" [label="(MethodParameterOut,const ExtensionSet* loaded_extensions)"];
"1000105" [label="(Call,CHECK(resource_url.SchemeIs(chrome::kExtensionScheme)))"];
"1000107" [label="(Identifier,chrome::kExtensionScheme)"];
"1000106" [label="(Call,resource_url.SchemeIs(chrome::kExtensionScheme))"];
"1000109" [label="(Call,* extension =\n      loaded_extensions->GetExtensionOrAppByURL(ExtensionURLInfo(resource_url)))"];
"1000110" [label="(Identifier,extension)"];
"1000112" [label="(Call,ExtensionURLInfo(resource_url))"];
"1000111" [label="(Call,loaded_extensions->GetExtensionOrAppByURL(ExtensionURLInfo(resource_url)))"];
"1000113" [label="(Identifier,resource_url)"];
"1000117" [label="(Block,)"];
"1000114" [label="(ControlStructure,if (!extension))"];
"1000115" [label="(Call,!extension)"];
"1000116" [label="(Identifier,extension)"];
"1000177" -> "1000100"  [label="AST: "];
"1000177" -> "1000118"  [label="CFG: "];
"1000177" -> "1000145"  [label="CFG: "];
"1000177" -> "1000173"  [label="CFG: "];
"1000177" -> "1000175"  [label="CFG: "];
"1000145" -> "1000177"  [label="DDG: <RET>"];
"1000173" -> "1000177"  [label="DDG: <RET>"];
"1000118" -> "1000177"  [label="DDG: <RET>"];
"1000175" -> "1000177"  [label="DDG: <RET>"];
"1000155" -> "1000177"  [label="DDG: !extension->IsResourceWebAccessible(resource_url.path())"];
"1000155" -> "1000177"  [label="DDG: !frame_url.SchemeIs(chrome::kExtensionScheme)"];
"1000140" -> "1000177"  [label="DDG: \\" from \\"\n               << \\"hosted app.\\""];
"1000140" -> "1000177"  [label="DDG: resource_url.spec()"];
"1000168" -> "1000177"  [label="DDG: resource_url.spec()"];
"1000168" -> "1000177"  [label="DDG: \\" which \\"\n                << \\"is not a web accessible resource.\\""];
"1000156" -> "1000177"  [label="DDG: frame_url.SchemeIs(chrome::kExtensionScheme)"];
"1000105" -> "1000177"  [label="DDG: CHECK(resource_url.SchemeIs(chrome::kExtensionScheme))"];
"1000105" -> "1000177"  [label="DDG: resource_url.SchemeIs(chrome::kExtensionScheme)"];
"1000159" -> "1000177"  [label="DDG: extension->IsResourceWebAccessible(resource_url.path())"];
"1000152" -> "1000177"  [label="DDG: !frame_url.is_empty()"];
"1000152" -> "1000177"  [label="DDG: !frame_url.SchemeIs(chrome::kExtensionScheme) &&\n       !extension->IsResourceWebAccessible(resource_url.path())"];
"1000153" -> "1000177"  [label="DDG: frame_url.is_empty()"];
"1000163" -> "1000177"  [label="DDG: LOG(ERROR) << \\"Denying load of \\" << resource_url.spec() << \\" which \\"\n                << \\"is not a web accessible resource.\\""];
"1000163" -> "1000177"  [label="DDG: LOG(ERROR)"];
"1000163" -> "1000177"  [label="DDG: \\"Denying load of \\" << resource_url.spec() << \\" which \\"\n                << \\"is not a web accessible resource.\\""];
"1000166" -> "1000177"  [label="DDG: resource_url.spec() << \\" which \\"\n                << \\"is not a web accessible resource.\\""];
"1000129" -> "1000177"  [label="DDG: extension->is_hosted_app()"];
"1000129" -> "1000177"  [label="DDG: extension->is_hosted_app() &&\n      !extension->icons().ContainsPath(resource_root_relative_path)"];
"1000129" -> "1000177"  [label="DDG: !extension->icons().ContainsPath(resource_root_relative_path)"];
"1000123" -> "1000177"  [label="DDG: resource_url.path().substr(1)"];
"1000123" -> "1000177"  [label="DDG: resource_url.path().empty()"];
"1000106" -> "1000177"  [label="DDG: chrome::kExtensionScheme"];
"1000150" -> "1000177"  [label="DDG: switches::kDisableExtensionsResourceWhitelist"];
"1000121" -> "1000177"  [label="DDG: resource_url.path().empty() ? \\"\\" : resource_url.path().substr(1)"];
"1000121" -> "1000177"  [label="DDG: resource_root_relative_path"];
"1000131" -> "1000177"  [label="DDG: extension->icons().ContainsPath(resource_root_relative_path)"];
"1000138" -> "1000177"  [label="DDG: resource_url.spec() << \\" from \\"\n               << \\"hosted app.\\""];
"1000148" -> "1000177"  [label="DDG: !frame_url.is_empty() &&\n       !frame_url.SchemeIs(chrome::kExtensionScheme) &&\n       !extension->IsResourceWebAccessible(resource_url.path())"];
"1000148" -> "1000177"  [label="DDG: !CommandLine::ForCurrentProcess()->HasSwitch(\n           switches::kDisableExtensionsResourceWhitelist)"];
"1000148" -> "1000177"  [label="DDG: !CommandLine::ForCurrentProcess()->HasSwitch(\n           switches::kDisableExtensionsResourceWhitelist) &&\n       !frame_url.is_empty() &&\n       !frame_url.SchemeIs(chrome::kExtensionScheme) &&\n       !extension->IsResourceWebAccessible(resource_url.path())"];
"1000157" -> "1000177"  [label="DDG: chrome::kExtensionScheme"];
"1000103" -> "1000177"  [label="DDG: loaded_extensions"];
"1000115" -> "1000177"  [label="DDG: !extension"];
"1000115" -> "1000177"  [label="DDG: extension"];
"1000132" -> "1000177"  [label="DDG: resource_root_relative_path"];
"1000102" -> "1000177"  [label="DDG: frame_url"];
"1000111" -> "1000177"  [label="DDG: ExtensionURLInfo(resource_url)"];
"1000135" -> "1000177"  [label="DDG: LOG(ERROR) << \\"Denying load of \\" << resource_url.spec() << \\" from \\"\n               << \\"hosted app.\\""];
"1000135" -> "1000177"  [label="DDG: LOG(ERROR)"];
"1000135" -> "1000177"  [label="DDG: \\"Denying load of \\" << resource_url.spec() << \\" from \\"\n               << \\"hosted app.\\""];
"1000112" -> "1000177"  [label="DDG: resource_url"];
"1000101" -> "1000177"  [label="DDG: resource_url"];
"1000149" -> "1000177"  [label="DDG: CommandLine::ForCurrentProcess()->HasSwitch(\n           switches::kDisableExtensionsResourceWhitelist)"];
"1000109" -> "1000177"  [label="DDG: loaded_extensions->GetExtensionOrAppByURL(ExtensionURLInfo(resource_url))"];
"1000160" -> "1000177"  [label="DDG: resource_url.path()"];
"1000136" -> "1000177"  [label="DDG: ERROR"];
"1000164" -> "1000177"  [label="DDG: ERROR"];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000115"  [label="CFG: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="DDG: true"];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000177" -> "1000118"  [label="CFG: "];
"1000118" -> "1000177"  [label="DDG: <RET>"];
"1000119" -> "1000118"  [label="DDG: true"];
"1000121" -> "1000104"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000130" -> "1000121"  [label="CFG: "];
"1000121" -> "1000177"  [label="DDG: resource_url.path().empty() ? \\"\\" : resource_url.path().substr(1)"];
"1000121" -> "1000177"  [label="DDG: resource_root_relative_path"];
"1000126" -> "1000121"  [label="DDG: 1"];
"1000121" -> "1000132"  [label="DDG: resource_root_relative_path"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000115"  [label="CFG: "];
"1000124" -> "1000122"  [label="CFG: "];
"1000125" -> "1000123"  [label="AST: "];
"1000125" -> "1000124"  [label="CFG: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000126" -> "1000123"  [label="AST: "];
"1000126" -> "1000127"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000123" -> "1000126"  [label="CFG: "];
"1000126" -> "1000121"  [label="DDG: 1"];
"1000126" -> "1000123"  [label="DDG: 1"];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000123" -> "1000126"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000126" -> "1000123"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000123" -> "1000177"  [label="DDG: resource_url.path().substr(1)"];
"1000123" -> "1000177"  [label="DDG: resource_url.path().empty()"];
"1000126" -> "1000123"  [label="DDG: 1"];
"1000124" -> "1000123"  [label="AST: "];
"1000124" -> "1000122"  [label="CFG: "];
"1000125" -> "1000124"  [label="CFG: "];
"1000127" -> "1000124"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000127" -> "1000124"  [label="CFG: "];
"1000126" -> "1000127"  [label="CFG: "];
"1000128" -> "1000104"  [label="AST: "];
"1000129" -> "1000128"  [label="AST: "];
"1000134" -> "1000128"  [label="AST: "];
"1000129" -> "1000128"  [label="AST: "];
"1000129" -> "1000130"  [label="CFG: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000129"  [label="AST: "];
"1000137" -> "1000129"  [label="CFG: "];
"1000151" -> "1000129"  [label="CFG: "];
"1000129" -> "1000177"  [label="DDG: extension->is_hosted_app()"];
"1000129" -> "1000177"  [label="DDG: extension->is_hosted_app() &&\n      !extension->icons().ContainsPath(resource_root_relative_path)"];
"1000129" -> "1000177"  [label="DDG: !extension->icons().ContainsPath(resource_root_relative_path)"];
"1000131" -> "1000129"  [label="DDG: extension->icons().ContainsPath(resource_root_relative_path)"];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000121"  [label="CFG: "];
"1000133" -> "1000130"  [label="CFG: "];
"1000129" -> "1000130"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000130"  [label="CFG: "];
"1000132" -> "1000133"  [label="CFG: "];
"1000131" -> "1000129"  [label="AST: "];
"1000131" -> "1000132"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000131" -> "1000177"  [label="DDG: extension->icons().ContainsPath(resource_root_relative_path)"];
"1000131" -> "1000129"  [label="DDG: extension->icons().ContainsPath(resource_root_relative_path)"];
"1000132" -> "1000131"  [label="DDG: resource_root_relative_path"];
"1000134" -> "1000128"  [label="AST: "];
"1000135" -> "1000134"  [label="AST: "];
"1000145" -> "1000134"  [label="AST: "];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000133"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000131" -> "1000132"  [label="CFG: "];
"1000132" -> "1000177"  [label="DDG: resource_root_relative_path"];
"1000132" -> "1000131"  [label="DDG: resource_root_relative_path"];
"1000121" -> "1000132"  [label="DDG: resource_root_relative_path"];
"1000138" -> "1000135"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000135" -> "1000138"  [label="CFG: "];
"1000138" -> "1000177"  [label="DDG: resource_url.spec() << \\" from \\"\n               << \\"hosted app.\\""];
"1000138" -> "1000135"  [label="DDG: \\"Denying load of \\""];
"1000138" -> "1000135"  [label="DDG: resource_url.spec() << \\" from \\"\n               << \\"hosted app.\\""];
"1000140" -> "1000138"  [label="DDG: resource_url.spec()"];
"1000140" -> "1000138"  [label="DDG: \\" from \\"\n               << \\"hosted app.\\""];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000136"  [label="CFG: "];
"1000141" -> "1000139"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000135" -> "1000138"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000138" -> "1000135"  [label="AST: "];
"1000146" -> "1000135"  [label="CFG: "];
"1000135" -> "1000177"  [label="DDG: LOG(ERROR) << \\"Denying load of \\" << resource_url.spec() << \\" from \\"\n               << \\"hosted app.\\""];
"1000135" -> "1000177"  [label="DDG: LOG(ERROR)"];
"1000135" -> "1000177"  [label="DDG: \\"Denying load of \\" << resource_url.spec() << \\" from \\"\n               << \\"hosted app.\\""];
"1000136" -> "1000135"  [label="DDG: ERROR"];
"1000138" -> "1000135"  [label="DDG: \\"Denying load of \\""];
"1000138" -> "1000135"  [label="DDG: resource_url.spec() << \\" from \\"\n               << \\"hosted app.\\""];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000137"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000139" -> "1000136"  [label="CFG: "];
"1000136" -> "1000177"  [label="DDG: ERROR"];
"1000136" -> "1000135"  [label="DDG: ERROR"];
"1000140" -> "1000138"  [label="AST: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000142" -> "1000140"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000140" -> "1000177"  [label="DDG: \\" from \\"\n               << \\"hosted app.\\""];
"1000140" -> "1000177"  [label="DDG: resource_url.spec()"];
"1000140" -> "1000138"  [label="DDG: resource_url.spec()"];
"1000140" -> "1000138"  [label="DDG: \\" from \\"\n               << \\"hosted app.\\""];
"1000142" -> "1000140"  [label="DDG: \\" from \\""];
"1000142" -> "1000140"  [label="DDG: \\"hosted app.\\""];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000139"  [label="CFG: "];
"1000143" -> "1000141"  [label="CFG: "];
"1000142" -> "1000140"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000142" -> "1000140"  [label="DDG: \\" from \\""];
"1000142" -> "1000140"  [label="DDG: \\"hosted app.\\""];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000141"  [label="CFG: "];
"1000144" -> "1000143"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000137" -> "1000129"  [label="CFG: "];
"1000136" -> "1000137"  [label="CFG: "];
"1000144" -> "1000142"  [label="AST: "];
"1000144" -> "1000143"  [label="CFG: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000135"  [label="CFG: "];
"1000145" -> "1000146"  [label="CFG: "];
"1000146" -> "1000145"  [label="DDG: false"];
"1000145" -> "1000134"  [label="AST: "];
"1000145" -> "1000146"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000177" -> "1000145"  [label="CFG: "];
"1000145" -> "1000177"  [label="DDG: <RET>"];
"1000146" -> "1000145"  [label="DDG: false"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000177"  [label="DDG: resource_url"];
"1000101" -> "1000112"  [label="DDG: resource_url"];
"1000268" -> "1000100"  [label="AST: "];
"1000147" -> "1000104"  [label="AST: "];
"1000148" -> "1000147"  [label="AST: "];
"1000162" -> "1000147"  [label="AST: "];
"1000148" -> "1000147"  [label="AST: "];
"1000148" -> "1000149"  [label="CFG: "];
"1000148" -> "1000152"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000152" -> "1000148"  [label="AST: "];
"1000165" -> "1000148"  [label="CFG: "];
"1000176" -> "1000148"  [label="CFG: "];
"1000148" -> "1000177"  [label="DDG: !frame_url.is_empty() &&\n       !frame_url.SchemeIs(chrome::kExtensionScheme) &&\n       !extension->IsResourceWebAccessible(resource_url.path())"];
"1000148" -> "1000177"  [label="DDG: !CommandLine::ForCurrentProcess()->HasSwitch(\n           switches::kDisableExtensionsResourceWhitelist)"];
"1000148" -> "1000177"  [label="DDG: !CommandLine::ForCurrentProcess()->HasSwitch(\n           switches::kDisableExtensionsResourceWhitelist) &&\n       !frame_url.is_empty() &&\n       !frame_url.SchemeIs(chrome::kExtensionScheme) &&\n       !extension->IsResourceWebAccessible(resource_url.path())"];
"1000149" -> "1000148"  [label="DDG: CommandLine::ForCurrentProcess()->HasSwitch(\n           switches::kDisableExtensionsResourceWhitelist)"];
"1000152" -> "1000148"  [label="DDG: !frame_url.is_empty()"];
"1000152" -> "1000148"  [label="DDG: !frame_url.SchemeIs(chrome::kExtensionScheme) &&\n       !extension->IsResourceWebAccessible(resource_url.path())"];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000154" -> "1000149"  [label="CFG: "];
"1000148" -> "1000149"  [label="CFG: "];
"1000149" -> "1000177"  [label="DDG: CommandLine::ForCurrentProcess()->HasSwitch(\n           switches::kDisableExtensionsResourceWhitelist)"];
"1000149" -> "1000148"  [label="DDG: CommandLine::ForCurrentProcess()->HasSwitch(\n           switches::kDisableExtensionsResourceWhitelist)"];
"1000150" -> "1000149"  [label="DDG: switches::kDisableExtensionsResourceWhitelist"];
"1000150" -> "1000149"  [label="AST: "];
"1000150" -> "1000151"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000150" -> "1000177"  [label="DDG: switches::kDisableExtensionsResourceWhitelist"];
"1000150" -> "1000149"  [label="DDG: switches::kDisableExtensionsResourceWhitelist"];
"1000151" -> "1000150"  [label="AST: "];
"1000151" -> "1000129"  [label="CFG: "];
"1000150" -> "1000151"  [label="CFG: "];
"1000152" -> "1000148"  [label="AST: "];
"1000152" -> "1000153"  [label="CFG: "];
"1000152" -> "1000155"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000155" -> "1000152"  [label="AST: "];
"1000148" -> "1000152"  [label="CFG: "];
"1000152" -> "1000177"  [label="DDG: !frame_url.is_empty()"];
"1000152" -> "1000177"  [label="DDG: !frame_url.SchemeIs(chrome::kExtensionScheme) &&\n       !extension->IsResourceWebAccessible(resource_url.path())"];
"1000152" -> "1000148"  [label="DDG: !frame_url.is_empty()"];
"1000152" -> "1000148"  [label="DDG: !frame_url.SchemeIs(chrome::kExtensionScheme) &&\n       !extension->IsResourceWebAccessible(resource_url.path())"];
"1000153" -> "1000152"  [label="DDG: frame_url.is_empty()"];
"1000155" -> "1000152"  [label="DDG: !frame_url.SchemeIs(chrome::kExtensionScheme)"];
"1000155" -> "1000152"  [label="DDG: !extension->IsResourceWebAccessible(resource_url.path())"];
"1000153" -> "1000152"  [label="AST: "];
"1000153" -> "1000154"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000158" -> "1000153"  [label="CFG: "];
"1000152" -> "1000153"  [label="CFG: "];
"1000153" -> "1000177"  [label="DDG: frame_url.is_empty()"];
"1000153" -> "1000152"  [label="DDG: frame_url.is_empty()"];
"1000154" -> "1000153"  [label="AST: "];
"1000154" -> "1000149"  [label="CFG: "];
"1000153" -> "1000154"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000158" -> "1000153"  [label="CFG: "];
"1000157" -> "1000158"  [label="CFG: "];
"1000155" -> "1000152"  [label="AST: "];
"1000155" -> "1000156"  [label="CFG: "];
"1000155" -> "1000159"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000159" -> "1000155"  [label="AST: "];
"1000152" -> "1000155"  [label="CFG: "];
"1000155" -> "1000177"  [label="DDG: !extension->IsResourceWebAccessible(resource_url.path())"];
"1000155" -> "1000177"  [label="DDG: !frame_url.SchemeIs(chrome::kExtensionScheme)"];
"1000155" -> "1000152"  [label="DDG: !frame_url.SchemeIs(chrome::kExtensionScheme)"];
"1000155" -> "1000152"  [label="DDG: !extension->IsResourceWebAccessible(resource_url.path())"];
"1000156" -> "1000155"  [label="DDG: frame_url.SchemeIs(chrome::kExtensionScheme)"];
"1000159" -> "1000155"  [label="DDG: extension->IsResourceWebAccessible(resource_url.path())"];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000157"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000161" -> "1000156"  [label="CFG: "];
"1000155" -> "1000156"  [label="CFG: "];
"1000156" -> "1000177"  [label="DDG: frame_url.SchemeIs(chrome::kExtensionScheme)"];
"1000156" -> "1000155"  [label="DDG: frame_url.SchemeIs(chrome::kExtensionScheme)"];
"1000157" -> "1000156"  [label="DDG: chrome::kExtensionScheme"];
"1000157" -> "1000156"  [label="AST: "];
"1000157" -> "1000158"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000156" -> "1000157"  [label="CFG: "];
"1000157" -> "1000177"  [label="DDG: chrome::kExtensionScheme"];
"1000157" -> "1000156"  [label="DDG: chrome::kExtensionScheme"];
"1000106" -> "1000157"  [label="DDG: chrome::kExtensionScheme"];
"1000161" -> "1000160"  [label="AST: "];
"1000161" -> "1000156"  [label="CFG: "];
"1000160" -> "1000161"  [label="CFG: "];
"1000162" -> "1000147"  [label="AST: "];
"1000163" -> "1000162"  [label="AST: "];
"1000173" -> "1000162"  [label="AST: "];
"1000159" -> "1000155"  [label="AST: "];
"1000159" -> "1000160"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000155" -> "1000159"  [label="CFG: "];
"1000159" -> "1000177"  [label="DDG: extension->IsResourceWebAccessible(resource_url.path())"];
"1000159" -> "1000155"  [label="DDG: extension->IsResourceWebAccessible(resource_url.path())"];
"1000160" -> "1000159"  [label="DDG: resource_url.path()"];
"1000160" -> "1000159"  [label="AST: "];
"1000160" -> "1000161"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000159" -> "1000160"  [label="CFG: "];
"1000160" -> "1000177"  [label="DDG: resource_url.path()"];
"1000160" -> "1000159"  [label="DDG: resource_url.path()"];
"1000166" -> "1000163"  [label="AST: "];
"1000166" -> "1000168"  [label="CFG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000168" -> "1000166"  [label="AST: "];
"1000163" -> "1000166"  [label="CFG: "];
"1000166" -> "1000177"  [label="DDG: resource_url.spec() << \\" which \\"\n                << \\"is not a web accessible resource.\\""];
"1000166" -> "1000163"  [label="DDG: \\"Denying load of \\""];
"1000166" -> "1000163"  [label="DDG: resource_url.spec() << \\" which \\"\n                << \\"is not a web accessible resource.\\""];
"1000168" -> "1000166"  [label="DDG: resource_url.spec()"];
"1000168" -> "1000166"  [label="DDG: \\" which \\"\n                << \\"is not a web accessible resource.\\""];
"1000167" -> "1000166"  [label="AST: "];
"1000167" -> "1000164"  [label="CFG: "];
"1000169" -> "1000167"  [label="CFG: "];
"1000168" -> "1000166"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000166" -> "1000168"  [label="CFG: "];
"1000168" -> "1000177"  [label="DDG: resource_url.spec()"];
"1000168" -> "1000177"  [label="DDG: \\" which \\"\n                << \\"is not a web accessible resource.\\""];
"1000168" -> "1000166"  [label="DDG: resource_url.spec()"];
"1000168" -> "1000166"  [label="DDG: \\" which \\"\n                << \\"is not a web accessible resource.\\""];
"1000170" -> "1000168"  [label="DDG: \\" which \\""];
"1000170" -> "1000168"  [label="DDG: \\"is not a web accessible resource.\\""];
"1000169" -> "1000168"  [label="AST: "];
"1000169" -> "1000167"  [label="CFG: "];
"1000171" -> "1000169"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000166"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000166" -> "1000163"  [label="AST: "];
"1000174" -> "1000163"  [label="CFG: "];
"1000163" -> "1000177"  [label="DDG: LOG(ERROR) << \\"Denying load of \\" << resource_url.spec() << \\" which \\"\n                << \\"is not a web accessible resource.\\""];
"1000163" -> "1000177"  [label="DDG: LOG(ERROR)"];
"1000163" -> "1000177"  [label="DDG: \\"Denying load of \\" << resource_url.spec() << \\" which \\"\n                << \\"is not a web accessible resource.\\""];
"1000164" -> "1000163"  [label="DDG: ERROR"];
"1000166" -> "1000163"  [label="DDG: \\"Denying load of \\""];
"1000166" -> "1000163"  [label="DDG: resource_url.spec() << \\" which \\"\n                << \\"is not a web accessible resource.\\""];
"1000164" -> "1000163"  [label="AST: "];
"1000164" -> "1000165"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000167" -> "1000164"  [label="CFG: "];
"1000164" -> "1000177"  [label="DDG: ERROR"];
"1000164" -> "1000163"  [label="DDG: ERROR"];
"1000170" -> "1000168"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000170" -> "1000168"  [label="DDG: \\" which \\""];
"1000170" -> "1000168"  [label="DDG: \\"is not a web accessible resource.\\""];
"1000171" -> "1000170"  [label="AST: "];
"1000171" -> "1000169"  [label="CFG: "];
"1000172" -> "1000171"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000165" -> "1000148"  [label="CFG: "];
"1000164" -> "1000165"  [label="CFG: "];
"1000172" -> "1000170"  [label="AST: "];
"1000172" -> "1000171"  [label="CFG: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000177"  [label="DDG: frame_url"];
"1000269" -> "1000100"  [label="AST: "];
"1000174" -> "1000173"  [label="AST: "];
"1000174" -> "1000163"  [label="CFG: "];
"1000173" -> "1000174"  [label="CFG: "];
"1000174" -> "1000173"  [label="DDG: false"];
"1000173" -> "1000162"  [label="AST: "];
"1000173" -> "1000174"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000177" -> "1000173"  [label="CFG: "];
"1000173" -> "1000177"  [label="DDG: <RET>"];
"1000174" -> "1000173"  [label="DDG: false"];
"1000175" -> "1000104"  [label="AST: "];
"1000175" -> "1000176"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000177" -> "1000175"  [label="CFG: "];
"1000175" -> "1000177"  [label="DDG: <RET>"];
"1000176" -> "1000175"  [label="DDG: true"];
"1000176" -> "1000175"  [label="AST: "];
"1000176" -> "1000148"  [label="CFG: "];
"1000175" -> "1000176"  [label="CFG: "];
"1000176" -> "1000175"  [label="DDG: true"];
"1000104" -> "1000100"  [label="AST: "];
"1000105" -> "1000104"  [label="AST: "];
"1000108" -> "1000104"  [label="AST: "];
"1000109" -> "1000104"  [label="AST: "];
"1000114" -> "1000104"  [label="AST: "];
"1000120" -> "1000104"  [label="AST: "];
"1000121" -> "1000104"  [label="AST: "];
"1000128" -> "1000104"  [label="AST: "];
"1000147" -> "1000104"  [label="AST: "];
"1000175" -> "1000104"  [label="AST: "];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000177"  [label="DDG: loaded_extensions"];
"1000270" -> "1000100"  [label="AST: "];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000106"  [label="CFG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000110" -> "1000105"  [label="CFG: "];
"1000105" -> "1000177"  [label="DDG: CHECK(resource_url.SchemeIs(chrome::kExtensionScheme))"];
"1000105" -> "1000177"  [label="DDG: resource_url.SchemeIs(chrome::kExtensionScheme)"];
"1000106" -> "1000105"  [label="DDG: chrome::kExtensionScheme"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000100"  [label="CFG: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000105" -> "1000106"  [label="CFG: "];
"1000106" -> "1000177"  [label="DDG: chrome::kExtensionScheme"];
"1000106" -> "1000105"  [label="DDG: chrome::kExtensionScheme"];
"1000106" -> "1000157"  [label="DDG: chrome::kExtensionScheme"];
"1000109" -> "1000104"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000116" -> "1000109"  [label="CFG: "];
"1000109" -> "1000177"  [label="DDG: loaded_extensions->GetExtensionOrAppByURL(ExtensionURLInfo(resource_url))"];
"1000111" -> "1000109"  [label="DDG: ExtensionURLInfo(resource_url)"];
"1000109" -> "1000115"  [label="DDG: extension"];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000105"  [label="CFG: "];
"1000113" -> "1000110"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000112" -> "1000113"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000111" -> "1000112"  [label="CFG: "];
"1000112" -> "1000177"  [label="DDG: resource_url"];
"1000112" -> "1000111"  [label="DDG: resource_url"];
"1000101" -> "1000112"  [label="DDG: resource_url"];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000112"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000111" -> "1000177"  [label="DDG: ExtensionURLInfo(resource_url)"];
"1000111" -> "1000109"  [label="DDG: ExtensionURLInfo(resource_url)"];
"1000112" -> "1000111"  [label="DDG: resource_url"];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000110"  [label="CFG: "];
"1000112" -> "1000113"  [label="CFG: "];
"1000117" -> "1000114"  [label="AST: "];
"1000118" -> "1000117"  [label="AST: "];
"1000114" -> "1000104"  [label="AST: "];
"1000115" -> "1000114"  [label="AST: "];
"1000117" -> "1000114"  [label="AST: "];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000119" -> "1000115"  [label="CFG: "];
"1000122" -> "1000115"  [label="CFG: "];
"1000115" -> "1000177"  [label="DDG: !extension"];
"1000115" -> "1000177"  [label="DDG: extension"];
"1000109" -> "1000115"  [label="DDG: extension"];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000109"  [label="CFG: "];
"1000115" -> "1000116"  [label="CFG: "];
}
