digraph "1_Chrome_8353baf8d1504dbdd4ad7584ff2466de657521cd_0" {
"1000134" [label="(MethodReturn,bool)"];
"1000101" [label="(MethodParameterIn,const SecureContextCheck privilegeContextCheck)"];
"1000182" [label="(MethodParameterOut,const SecureContextCheck privilegeContextCheck)"];
"1000119" [label="(Call,* parent = m_frame ? m_frame->tree().parent() : nullptr)"];
"1000120" [label="(Identifier,parent)"];
"1000121" [label="(Call,m_frame ? m_frame->tree().parent() : nullptr)"];
"1000122" [label="(Identifier,m_frame)"];
"1000123" [label="(Call,m_frame->tree().parent())"];
"1000124" [label="(Identifier,nullptr)"];
"1000117" [label="(Block,)"];
"1000126" [label="(Call,parent && !parent->canHaveSecureChild())"];
"1000127" [label="(Identifier,parent)"];
"1000128" [label="(Call,!parent->canHaveSecureChild())"];
"1000129" [label="(Call,parent->canHaveSecureChild())"];
"1000125" [label="(ControlStructure,if (parent && !parent->canHaveSecureChild()))"];
"1000130" [label="(Return,return false;)"];
"1000131" [label="(Identifier,false)"];
"1000133" [label="(Identifier,true)"];
"1000132" [label="(Return,return true;)"];
"1000102" [label="(Block,)"];
"1000103" [label="(ControlStructure,if (!getSecurityOrigin()->isPotentiallyTrustworthy()))"];
"1000104" [label="(Call,!getSecurityOrigin()->isPotentiallyTrustworthy())"];
"1000105" [label="(Call,getSecurityOrigin()->isPotentiallyTrustworthy())"];
"1000107" [label="(Identifier,false)"];
"1000106" [label="(Return,return false;)"];
"1000108" [label="(ControlStructure,if (SchemeRegistry::schemeShouldBypassSecureContextCheck(getSecurityOrigin()->protocol())))"];
"1000110" [label="(Call,getSecurityOrigin()->protocol())"];
"1000109" [label="(Call,SchemeRegistry::schemeShouldBypassSecureContextCheck(getSecurityOrigin()->protocol()))"];
"1000112" [label="(Identifier,true)"];
"1000111" [label="(Return,return true;)"];
"1000116" [label="(Identifier,StandardSecureContextCheck)"];
"1000113" [label="(ControlStructure,if (privilegeContextCheck == StandardSecureContextCheck))"];
"1000114" [label="(Call,privilegeContextCheck == StandardSecureContextCheck)"];
"1000115" [label="(Identifier,privilegeContextCheck)"];
"1000134" -> "1000100"  [label="AST: "];
"1000134" -> "1000106"  [label="CFG: "];
"1000134" -> "1000111"  [label="CFG: "];
"1000134" -> "1000130"  [label="CFG: "];
"1000134" -> "1000132"  [label="CFG: "];
"1000111" -> "1000134"  [label="DDG: <RET>"];
"1000106" -> "1000134"  [label="DDG: <RET>"];
"1000126" -> "1000134"  [label="DDG: parent && !parent->canHaveSecureChild()"];
"1000126" -> "1000134"  [label="DDG: parent"];
"1000126" -> "1000134"  [label="DDG: !parent->canHaveSecureChild()"];
"1000104" -> "1000134"  [label="DDG: !getSecurityOrigin()->isPotentiallyTrustworthy()"];
"1000104" -> "1000134"  [label="DDG: getSecurityOrigin()->isPotentiallyTrustworthy()"];
"1000114" -> "1000134"  [label="DDG: privilegeContextCheck == StandardSecureContextCheck"];
"1000114" -> "1000134"  [label="DDG: StandardSecureContextCheck"];
"1000114" -> "1000134"  [label="DDG: privilegeContextCheck"];
"1000121" -> "1000134"  [label="DDG: m_frame->tree().parent()"];
"1000121" -> "1000134"  [label="DDG: m_frame"];
"1000121" -> "1000134"  [label="DDG: nullptr"];
"1000128" -> "1000134"  [label="DDG: parent->canHaveSecureChild()"];
"1000109" -> "1000134"  [label="DDG: SchemeRegistry::schemeShouldBypassSecureContextCheck(getSecurityOrigin()->protocol())"];
"1000109" -> "1000134"  [label="DDG: getSecurityOrigin()->protocol()"];
"1000119" -> "1000134"  [label="DDG: m_frame ? m_frame->tree().parent() : nullptr"];
"1000101" -> "1000134"  [label="DDG: privilegeContextCheck"];
"1000132" -> "1000134"  [label="DDG: <RET>"];
"1000130" -> "1000134"  [label="DDG: <RET>"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000134"  [label="DDG: privilegeContextCheck"];
"1000101" -> "1000114"  [label="DDG: privilegeContextCheck"];
"1000182" -> "1000100"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000127" -> "1000119"  [label="CFG: "];
"1000119" -> "1000134"  [label="DDG: m_frame ? m_frame->tree().parent() : nullptr"];
"1000119" -> "1000126"  [label="DDG: parent"];
"1000120" -> "1000119"  [label="AST: "];
"1000120" -> "1000114"  [label="CFG: "];
"1000122" -> "1000120"  [label="CFG: "];
"1000121" -> "1000119"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000121" -> "1000124"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000124" -> "1000121"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000121" -> "1000134"  [label="DDG: m_frame->tree().parent()"];
"1000121" -> "1000134"  [label="DDG: m_frame"];
"1000121" -> "1000134"  [label="DDG: nullptr"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000120"  [label="CFG: "];
"1000123" -> "1000122"  [label="CFG: "];
"1000124" -> "1000122"  [label="CFG: "];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000122"  [label="CFG: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000124" -> "1000121"  [label="AST: "];
"1000124" -> "1000122"  [label="CFG: "];
"1000121" -> "1000124"  [label="CFG: "];
"1000117" -> "1000113"  [label="AST: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000125" -> "1000117"  [label="AST: "];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000127"  [label="CFG: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000128" -> "1000126"  [label="AST: "];
"1000131" -> "1000126"  [label="CFG: "];
"1000133" -> "1000126"  [label="CFG: "];
"1000126" -> "1000134"  [label="DDG: parent && !parent->canHaveSecureChild()"];
"1000126" -> "1000134"  [label="DDG: parent"];
"1000126" -> "1000134"  [label="DDG: !parent->canHaveSecureChild()"];
"1000119" -> "1000126"  [label="DDG: parent"];
"1000128" -> "1000126"  [label="DDG: parent->canHaveSecureChild()"];
"1000127" -> "1000126"  [label="AST: "];
"1000127" -> "1000119"  [label="CFG: "];
"1000129" -> "1000127"  [label="CFG: "];
"1000126" -> "1000127"  [label="CFG: "];
"1000128" -> "1000126"  [label="AST: "];
"1000128" -> "1000129"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000128" -> "1000134"  [label="DDG: parent->canHaveSecureChild()"];
"1000128" -> "1000126"  [label="DDG: parent->canHaveSecureChild()"];
"1000129" -> "1000128"  [label="AST: "];
"1000129" -> "1000127"  [label="CFG: "];
"1000128" -> "1000129"  [label="CFG: "];
"1000125" -> "1000117"  [label="AST: "];
"1000126" -> "1000125"  [label="AST: "];
"1000130" -> "1000125"  [label="AST: "];
"1000130" -> "1000125"  [label="AST: "];
"1000130" -> "1000131"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000134" -> "1000130"  [label="CFG: "];
"1000130" -> "1000134"  [label="DDG: <RET>"];
"1000131" -> "1000130"  [label="DDG: false"];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000126"  [label="CFG: "];
"1000130" -> "1000131"  [label="CFG: "];
"1000131" -> "1000130"  [label="DDG: false"];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000126"  [label="CFG: "];
"1000133" -> "1000114"  [label="CFG: "];
"1000132" -> "1000133"  [label="CFG: "];
"1000133" -> "1000132"  [label="DDG: true"];
"1000132" -> "1000102"  [label="AST: "];
"1000132" -> "1000133"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="CFG: "];
"1000132" -> "1000134"  [label="DDG: <RET>"];
"1000133" -> "1000132"  [label="DDG: true"];
"1000102" -> "1000100"  [label="AST: "];
"1000103" -> "1000102"  [label="AST: "];
"1000108" -> "1000102"  [label="AST: "];
"1000113" -> "1000102"  [label="AST: "];
"1000132" -> "1000102"  [label="AST: "];
"1000103" -> "1000102"  [label="AST: "];
"1000104" -> "1000103"  [label="AST: "];
"1000106" -> "1000103"  [label="AST: "];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000105"  [label="CFG: "];
"1000105" -> "1000104"  [label="AST: "];
"1000107" -> "1000104"  [label="CFG: "];
"1000110" -> "1000104"  [label="CFG: "];
"1000104" -> "1000134"  [label="DDG: !getSecurityOrigin()->isPotentiallyTrustworthy()"];
"1000104" -> "1000134"  [label="DDG: getSecurityOrigin()->isPotentiallyTrustworthy()"];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000100"  [label="CFG: "];
"1000104" -> "1000105"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000104"  [label="CFG: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000107" -> "1000106"  [label="DDG: false"];
"1000106" -> "1000103"  [label="AST: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000134" -> "1000106"  [label="CFG: "];
"1000106" -> "1000134"  [label="DDG: <RET>"];
"1000107" -> "1000106"  [label="DDG: false"];
"1000108" -> "1000102"  [label="AST: "];
"1000109" -> "1000108"  [label="AST: "];
"1000111" -> "1000108"  [label="AST: "];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000104"  [label="CFG: "];
"1000109" -> "1000110"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000110"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000112" -> "1000109"  [label="CFG: "];
"1000115" -> "1000109"  [label="CFG: "];
"1000109" -> "1000134"  [label="DDG: SchemeRegistry::schemeShouldBypassSecureContextCheck(getSecurityOrigin()->protocol())"];
"1000109" -> "1000134"  [label="DDG: getSecurityOrigin()->protocol()"];
"1000112" -> "1000111"  [label="AST: "];
"1000112" -> "1000109"  [label="CFG: "];
"1000111" -> "1000112"  [label="CFG: "];
"1000112" -> "1000111"  [label="DDG: true"];
"1000111" -> "1000108"  [label="AST: "];
"1000111" -> "1000112"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000134" -> "1000111"  [label="CFG: "];
"1000111" -> "1000134"  [label="DDG: <RET>"];
"1000112" -> "1000111"  [label="DDG: true"];
"1000116" -> "1000114"  [label="AST: "];
"1000116" -> "1000115"  [label="CFG: "];
"1000114" -> "1000116"  [label="CFG: "];
"1000113" -> "1000102"  [label="AST: "];
"1000114" -> "1000113"  [label="AST: "];
"1000117" -> "1000113"  [label="AST: "];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000116"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000120" -> "1000114"  [label="CFG: "];
"1000133" -> "1000114"  [label="CFG: "];
"1000114" -> "1000134"  [label="DDG: privilegeContextCheck == StandardSecureContextCheck"];
"1000114" -> "1000134"  [label="DDG: StandardSecureContextCheck"];
"1000114" -> "1000134"  [label="DDG: privilegeContextCheck"];
"1000101" -> "1000114"  [label="DDG: privilegeContextCheck"];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000109"  [label="CFG: "];
"1000116" -> "1000115"  [label="CFG: "];
}
