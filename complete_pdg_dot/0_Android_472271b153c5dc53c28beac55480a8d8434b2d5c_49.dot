digraph "0_Android_472271b153c5dc53c28beac55480a8d8434b2d5c_49" {
"1000116" [label="(MethodReturn,static void)"];
"1000101" [label="(MethodParameterIn,const void *data)"];
"1000143" [label="(MethodParameterOut,const void *data)"];
"1000102" [label="(MethodParameterIn,size_t length)"];
"1000144" [label="(MethodParameterOut,size_t length)"];
"1000103" [label="(Block,)"];
"1000107" [label="(Identifier,INVALID_FD)"];
"1000104" [label="(ControlStructure,if (logfile_fd != INVALID_FD))"];
"1000105" [label="(Call,logfile_fd != INVALID_FD)"];
"1000106" [label="(Identifier,logfile_fd)"];
"1000109" [label="(Call,write(logfile_fd, data, length))"];
"1000110" [label="(Identifier,logfile_fd)"];
"1000108" [label="(Call,TEMP_FAILURE_RETRY(write(logfile_fd, data, length)))"];
"1000111" [label="(Identifier,data)"];
"1000112" [label="(Identifier,length)"];
"1000114" [label="(Identifier,data)"];
"1000115" [label="(Identifier,length)"];
"1000113" [label="(Call,btsnoop_net_write(data, length))"];
"1000116" -> "1000100"  [label="AST: "];
"1000116" -> "1000113"  [label="CFG: "];
"1000108" -> "1000116"  [label="DDG: TEMP_FAILURE_RETRY(write(logfile_fd, data, length))"];
"1000108" -> "1000116"  [label="DDG: write(logfile_fd, data, length)"];
"1000105" -> "1000116"  [label="DDG: INVALID_FD"];
"1000105" -> "1000116"  [label="DDG: logfile_fd != INVALID_FD"];
"1000105" -> "1000116"  [label="DDG: logfile_fd"];
"1000113" -> "1000116"  [label="DDG: data"];
"1000113" -> "1000116"  [label="DDG: length"];
"1000113" -> "1000116"  [label="DDG: btsnoop_net_write(data, length)"];
"1000102" -> "1000116"  [label="DDG: length"];
"1000101" -> "1000116"  [label="DDG: data"];
"1000109" -> "1000116"  [label="DDG: logfile_fd"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000116"  [label="DDG: data"];
"1000101" -> "1000109"  [label="DDG: data"];
"1000101" -> "1000113"  [label="DDG: data"];
"1000143" -> "1000100"  [label="AST: "];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000116"  [label="DDG: length"];
"1000102" -> "1000109"  [label="DDG: length"];
"1000102" -> "1000113"  [label="DDG: length"];
"1000144" -> "1000100"  [label="AST: "];
"1000103" -> "1000100"  [label="AST: "];
"1000104" -> "1000103"  [label="AST: "];
"1000113" -> "1000103"  [label="AST: "];
"1000107" -> "1000105"  [label="AST: "];
"1000107" -> "1000106"  [label="CFG: "];
"1000105" -> "1000107"  [label="CFG: "];
"1000104" -> "1000103"  [label="AST: "];
"1000105" -> "1000104"  [label="AST: "];
"1000108" -> "1000104"  [label="AST: "];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000107"  [label="CFG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000107" -> "1000105"  [label="AST: "];
"1000110" -> "1000105"  [label="CFG: "];
"1000114" -> "1000105"  [label="CFG: "];
"1000105" -> "1000116"  [label="DDG: INVALID_FD"];
"1000105" -> "1000116"  [label="DDG: logfile_fd != INVALID_FD"];
"1000105" -> "1000116"  [label="DDG: logfile_fd"];
"1000105" -> "1000109"  [label="DDG: logfile_fd"];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000100"  [label="CFG: "];
"1000107" -> "1000106"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000112"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000112" -> "1000109"  [label="AST: "];
"1000108" -> "1000109"  [label="CFG: "];
"1000109" -> "1000116"  [label="DDG: logfile_fd"];
"1000109" -> "1000108"  [label="DDG: logfile_fd"];
"1000109" -> "1000108"  [label="DDG: data"];
"1000109" -> "1000108"  [label="DDG: length"];
"1000105" -> "1000109"  [label="DDG: logfile_fd"];
"1000101" -> "1000109"  [label="DDG: data"];
"1000102" -> "1000109"  [label="DDG: length"];
"1000109" -> "1000113"  [label="DDG: data"];
"1000109" -> "1000113"  [label="DDG: length"];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000105"  [label="CFG: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000108" -> "1000104"  [label="AST: "];
"1000108" -> "1000109"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000114" -> "1000108"  [label="CFG: "];
"1000108" -> "1000116"  [label="DDG: TEMP_FAILURE_RETRY(write(logfile_fd, data, length))"];
"1000108" -> "1000116"  [label="DDG: write(logfile_fd, data, length)"];
"1000109" -> "1000108"  [label="DDG: logfile_fd"];
"1000109" -> "1000108"  [label="DDG: data"];
"1000109" -> "1000108"  [label="DDG: length"];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000112" -> "1000111"  [label="CFG: "];
"1000112" -> "1000109"  [label="AST: "];
"1000112" -> "1000111"  [label="CFG: "];
"1000109" -> "1000112"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000108"  [label="CFG: "];
"1000114" -> "1000105"  [label="CFG: "];
"1000115" -> "1000114"  [label="CFG: "];
"1000115" -> "1000113"  [label="AST: "];
"1000115" -> "1000114"  [label="CFG: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000113" -> "1000103"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000116" -> "1000113"  [label="CFG: "];
"1000113" -> "1000116"  [label="DDG: data"];
"1000113" -> "1000116"  [label="DDG: length"];
"1000113" -> "1000116"  [label="DDG: btsnoop_net_write(data, length)"];
"1000109" -> "1000113"  [label="DDG: data"];
"1000109" -> "1000113"  [label="DDG: length"];
"1000101" -> "1000113"  [label="DDG: data"];
"1000102" -> "1000113"  [label="DDG: length"];
}
