digraph "1_linux_6e94e0cfb0887e4013b3b930fa6ab1fe6bb6ba91_4" {
"1000223" [label="(MethodReturn,RET)"];
"1000103" [label="(MethodParameterIn,struct ip6t_entry *e)"];
"1000318" [label="(MethodParameterOut,struct ip6t_entry *e)"];
"1000113" [label="(Block,)"];
"1000115" [label="(Literal,\"Bad offset %p\n\")"];
"1000114" [label="(Call,duprintf(\"Bad offset %p\n\", e))"];
"1000116" [label="(Identifier,e)"];
"1000118" [label="(Call,-EINVAL)"];
"1000119" [label="(Identifier,EINVAL)"];
"1000117" [label="(Return,return -EINVAL;)"];
"1000120" [label="(ControlStructure,if (e->next_offset\n\t    < sizeof(struct ip6t_entry) + sizeof(struct xt_entry_target)))"];
"1000121" [label="(Call,e->next_offset\n\t    < sizeof(struct ip6t_entry) + sizeof(struct xt_entry_target))"];
"1000122" [label="(Call,e->next_offset)"];
"1000123" [label="(Identifier,e)"];
"1000124" [label="(FieldIdentifier,next_offset)"];
"1000128" [label="(Call,sizeof(struct xt_entry_target))"];
"1000130" [label="(Block,)"];
"1000125" [label="(Call,sizeof(struct ip6t_entry) + sizeof(struct xt_entry_target))"];
"1000126" [label="(Call,sizeof(struct ip6t_entry))"];
"1000104" [label="(MethodParameterIn,struct xt_table_info *newinfo)"];
"1000319" [label="(MethodParameterOut,struct xt_table_info *newinfo)"];
"1000132" [label="(Literal,\"checking: element %p size %u\n\")"];
"1000131" [label="(Call,duprintf(\"checking: element %p size %u\n\",\n\t\t\t e, e->next_offset))"];
"1000136" [label="(FieldIdentifier,next_offset)"];
"1000133" [label="(Identifier,e)"];
"1000134" [label="(Call,e->next_offset)"];
"1000135" [label="(Identifier,e)"];
"1000139" [label="(Identifier,EINVAL)"];
"1000137" [label="(Return,return -EINVAL;)"];
"1000138" [label="(Call,-EINVAL)"];
"1000140" [label="(Call,err = check_entry(e))"];
"1000141" [label="(Identifier,err)"];
"1000143" [label="(Identifier,e)"];
"1000142" [label="(Call,check_entry(e))"];
"1000144" [label="(ControlStructure,if (err))"];
"1000145" [label="(Identifier,err)"];
"1000146" [label="(Return,return err;)"];
"1000147" [label="(Identifier,err)"];
"1000105" [label="(MethodParameterIn,const unsigned char *base)"];
"1000320" [label="(MethodParameterOut,const unsigned char *base)"];
"1000148" [label="(ControlStructure,for (h = 0; h < NF_INET_NUMHOOKS; h++))"];
"1000151" [label="(Literal,0)"];
"1000152" [label="(Call,h < NF_INET_NUMHOOKS)"];
"1000153" [label="(Identifier,h)"];
"1000154" [label="(Identifier,NF_INET_NUMHOOKS)"];
"1000155" [label="(Call,h++)"];
"1000156" [label="(Identifier,h)"];
"1000157" [label="(Block,)"];
"1000149" [label="(Call,h = 0)"];
"1000150" [label="(Identifier,h)"];
"1000158" [label="(ControlStructure,if (!(valid_hooks & (1 << h))))"];
"1000162" [label="(Call,1 << h)"];
"1000163" [label="(Literal,1)"];
"1000164" [label="(Identifier,h)"];
"1000159" [label="(Call,!(valid_hooks & (1 << h)))"];
"1000160" [label="(Call,valid_hooks & (1 << h))"];
"1000161" [label="(Identifier,valid_hooks)"];
"1000165" [label="(ControlStructure,continue;)"];
"1000166" [label="(ControlStructure,if ((unsigned char *)e - base == hook_entries[h]))"];
"1000171" [label="(Identifier,e)"];
"1000172" [label="(Identifier,base)"];
"1000173" [label="(Call,hook_entries[h])"];
"1000174" [label="(Identifier,hook_entries)"];
"1000175" [label="(Identifier,h)"];
"1000167" [label="(Call,(unsigned char *)e - base == hook_entries[h])"];
"1000168" [label="(Call,(unsigned char *)e - base)"];
"1000169" [label="(Call,(unsigned char *)e)"];
"1000180" [label="(FieldIdentifier,hook_entry)"];
"1000181" [label="(Identifier,h)"];
"1000182" [label="(Call,hook_entries[h])"];
"1000183" [label="(Identifier,hook_entries)"];
"1000176" [label="(Call,newinfo->hook_entry[h] = hook_entries[h])"];
"1000177" [label="(Call,newinfo->hook_entry[h])"];
"1000178" [label="(Call,newinfo->hook_entry)"];
"1000179" [label="(Identifier,newinfo)"];
"1000184" [label="(Identifier,h)"];
"1000185" [label="(ControlStructure,if ((unsigned char *)e - base == underflows[h]))"];
"1000190" [label="(Identifier,e)"];
"1000191" [label="(Identifier,base)"];
"1000192" [label="(Call,underflows[h])"];
"1000193" [label="(Identifier,underflows)"];
"1000194" [label="(Identifier,h)"];
"1000195" [label="(Block,)"];
"1000186" [label="(Call,(unsigned char *)e - base == underflows[h])"];
"1000187" [label="(Call,(unsigned char *)e - base)"];
"1000188" [label="(Call,(unsigned char *)e)"];
"1000199" [label="(Identifier,e)"];
"1000200" [label="(Block,)"];
"1000196" [label="(ControlStructure,if (!check_underflow(e)))"];
"1000197" [label="(Call,!check_underflow(e))"];
"1000198" [label="(Call,check_underflow(e))"];
"1000202" [label="(Literal,\"Underflows must be unconditional and \"\n\t\t\t\t       \"use the STANDARD target with \"\n\t\t\t\t       \"ACCEPT/DROP\n\")"];
"1000201" [label="(Call,pr_err(\"Underflows must be unconditional and \"\n\t\t\t\t       \"use the STANDARD target with \"\n\t\t\t\t       \"ACCEPT/DROP\n\"))"];
"1000106" [label="(MethodParameterIn,const unsigned char *limit)"];
"1000321" [label="(MethodParameterOut,const unsigned char *limit)"];
"1000204" [label="(Call,-EINVAL)"];
"1000205" [label="(Identifier,EINVAL)"];
"1000203" [label="(Return,return -EINVAL;)"];
"1000210" [label="(FieldIdentifier,underflow)"];
"1000211" [label="(Identifier,h)"];
"1000212" [label="(Call,underflows[h])"];
"1000213" [label="(Identifier,underflows)"];
"1000206" [label="(Call,newinfo->underflow[h] = underflows[h])"];
"1000207" [label="(Call,newinfo->underflow[h])"];
"1000208" [label="(Call,newinfo->underflow)"];
"1000209" [label="(Identifier,newinfo)"];
"1000214" [label="(Identifier,h)"];
"1000215" [label="(Block,)"];
"1000216" [label="(Call,e->comefrom = 0)"];
"1000217" [label="(Call,e->comefrom)"];
"1000218" [label="(Identifier,e)"];
"1000220" [label="(Literal,0)"];
"1000219" [label="(FieldIdentifier,comefrom)"];
"1000221" [label="(Return,return 0;)"];
"1000222" [label="(Literal,0)"];
"1000107" [label="(MethodParameterIn,const unsigned int *hook_entries)"];
"1000322" [label="(MethodParameterOut,const unsigned int *hook_entries)"];
"1000108" [label="(MethodParameterIn,const unsigned int *underflows)"];
"1000323" [label="(MethodParameterOut,const unsigned int *underflows)"];
"1000109" [label="(MethodParameterIn,unsigned int valid_hooks)"];
"1000324" [label="(MethodParameterOut,unsigned int valid_hooks)"];
"1000110" [label="(Block,)"];
"1000223" -> "1000102"  [label="AST: "];
"1000223" -> "1000117"  [label="CFG: "];
"1000223" -> "1000137"  [label="CFG: "];
"1000223" -> "1000146"  [label="CFG: "];
"1000223" -> "1000203"  [label="CFG: "];
"1000223" -> "1000221"  [label="CFG: "];
"1000137" -> "1000223"  [label="DDG: <RET>"];
"1000146" -> "1000223"  [label="DDG: <RET>"];
"1000108" -> "1000223"  [label="DDG: underflows"];
"1000107" -> "1000223"  [label="DDG: hook_entries"];
"1000188" -> "1000223"  [label="DDG: e"];
"1000104" -> "1000223"  [label="DDG: newinfo"];
"1000105" -> "1000223"  [label="DDG: base"];
"1000118" -> "1000223"  [label="DDG: -EINVAL"];
"1000118" -> "1000223"  [label="DDG: EINVAL"];
"1000131" -> "1000223"  [label="DDG: e"];
"1000131" -> "1000223"  [label="DDG: e->next_offset"];
"1000131" -> "1000223"  [label="DDG: duprintf(\\"checking: element %p size %u\n\\",\n\t\t\t e, e->next_offset)"];
"1000167" -> "1000223"  [label="DDG: hook_entries[h]"];
"1000167" -> "1000223"  [label="DDG: (unsigned char *)e - base == hook_entries[h]"];
"1000176" -> "1000223"  [label="DDG: newinfo->hook_entry[h]"];
"1000176" -> "1000223"  [label="DDG: hook_entries[h]"];
"1000160" -> "1000223"  [label="DDG: 1 << h"];
"1000160" -> "1000223"  [label="DDG: valid_hooks"];
"1000187" -> "1000223"  [label="DDG: (unsigned char *)e"];
"1000187" -> "1000223"  [label="DDG: base"];
"1000159" -> "1000223"  [label="DDG: !(valid_hooks & (1 << h))"];
"1000159" -> "1000223"  [label="DDG: valid_hooks & (1 << h)"];
"1000162" -> "1000223"  [label="DDG: h"];
"1000186" -> "1000223"  [label="DDG: (unsigned char *)e - base == underflows[h]"];
"1000186" -> "1000223"  [label="DDG: (unsigned char *)e - base"];
"1000186" -> "1000223"  [label="DDG: underflows[h]"];
"1000140" -> "1000223"  [label="DDG: check_entry(e)"];
"1000140" -> "1000223"  [label="DDG: err"];
"1000121" -> "1000223"  [label="DDG: sizeof(struct ip6t_entry) + sizeof(struct xt_entry_target)"];
"1000121" -> "1000223"  [label="DDG: e->next_offset\n\t    < sizeof(struct ip6t_entry) + sizeof(struct xt_entry_target)"];
"1000121" -> "1000223"  [label="DDG: e->next_offset"];
"1000201" -> "1000223"  [label="DDG: pr_err(\\"Underflows must be unconditional and \\"\n\t\t\t\t       \\"use the STANDARD target with \\"\n\t\t\t\t       \\"ACCEPT/DROP\n\\")"];
"1000216" -> "1000223"  [label="DDG: e->comefrom"];
"1000114" -> "1000223"  [label="DDG: duprintf(\\"Bad offset %p\n\\", e)"];
"1000114" -> "1000223"  [label="DDG: e"];
"1000138" -> "1000223"  [label="DDG: EINVAL"];
"1000138" -> "1000223"  [label="DDG: -EINVAL"];
"1000152" -> "1000223"  [label="DDG: h < NF_INET_NUMHOOKS"];
"1000152" -> "1000223"  [label="DDG: h"];
"1000152" -> "1000223"  [label="DDG: NF_INET_NUMHOOKS"];
"1000103" -> "1000223"  [label="DDG: e"];
"1000206" -> "1000223"  [label="DDG: newinfo->underflow[h]"];
"1000206" -> "1000223"  [label="DDG: underflows[h]"];
"1000197" -> "1000223"  [label="DDG: !check_underflow(e)"];
"1000197" -> "1000223"  [label="DDG: check_underflow(e)"];
"1000198" -> "1000223"  [label="DDG: e"];
"1000142" -> "1000223"  [label="DDG: e"];
"1000204" -> "1000223"  [label="DDG: EINVAL"];
"1000204" -> "1000223"  [label="DDG: -EINVAL"];
"1000106" -> "1000223"  [label="DDG: limit"];
"1000109" -> "1000223"  [label="DDG: valid_hooks"];
"1000221" -> "1000223"  [label="DDG: <RET>"];
"1000203" -> "1000223"  [label="DDG: <RET>"];
"1000117" -> "1000223"  [label="DDG: <RET>"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000223"  [label="DDG: e"];
"1000103" -> "1000114"  [label="DDG: e"];
"1000318" -> "1000102"  [label="AST: "];
"1000113" -> "1000110"  [label="AST: "];
"1000114" -> "1000113"  [label="AST: "];
"1000117" -> "1000113"  [label="AST: "];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000102"  [label="CFG: "];
"1000116" -> "1000115"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000116"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000119" -> "1000114"  [label="CFG: "];
"1000114" -> "1000223"  [label="DDG: duprintf(\\"Bad offset %p\n\\", e)"];
"1000114" -> "1000223"  [label="DDG: e"];
"1000103" -> "1000114"  [label="DDG: e"];
"1000116" -> "1000114"  [label="AST: "];
"1000116" -> "1000115"  [label="CFG: "];
"1000114" -> "1000116"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000118" -> "1000223"  [label="DDG: -EINVAL"];
"1000118" -> "1000223"  [label="DDG: EINVAL"];
"1000118" -> "1000117"  [label="DDG: -EINVAL"];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000114"  [label="CFG: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000117" -> "1000113"  [label="AST: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000223" -> "1000117"  [label="CFG: "];
"1000117" -> "1000223"  [label="DDG: <RET>"];
"1000118" -> "1000117"  [label="DDG: -EINVAL"];
"1000120" -> "1000110"  [label="AST: "];
"1000121" -> "1000120"  [label="AST: "];
"1000130" -> "1000120"  [label="AST: "];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000125"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000125" -> "1000121"  [label="AST: "];
"1000132" -> "1000121"  [label="CFG: "];
"1000141" -> "1000121"  [label="CFG: "];
"1000121" -> "1000223"  [label="DDG: sizeof(struct ip6t_entry) + sizeof(struct xt_entry_target)"];
"1000121" -> "1000223"  [label="DDG: e->next_offset\n\t    < sizeof(struct ip6t_entry) + sizeof(struct xt_entry_target)"];
"1000121" -> "1000223"  [label="DDG: e->next_offset"];
"1000121" -> "1000131"  [label="DDG: e->next_offset"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000127" -> "1000122"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000123"  [label="CFG: "];
"1000124" -> "1000122"  [label="AST: "];
"1000124" -> "1000123"  [label="CFG: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000128" -> "1000125"  [label="AST: "];
"1000128" -> "1000129"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000125" -> "1000128"  [label="CFG: "];
"1000130" -> "1000120"  [label="AST: "];
"1000131" -> "1000130"  [label="AST: "];
"1000137" -> "1000130"  [label="AST: "];
"1000125" -> "1000121"  [label="AST: "];
"1000125" -> "1000128"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000128" -> "1000125"  [label="AST: "];
"1000121" -> "1000125"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000127"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000129" -> "1000126"  [label="CFG: "];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1000223"  [label="DDG: newinfo"];
"1000319" -> "1000102"  [label="AST: "];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000121"  [label="CFG: "];
"1000133" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000134"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="AST: "];
"1000134" -> "1000131"  [label="AST: "];
"1000139" -> "1000131"  [label="CFG: "];
"1000131" -> "1000223"  [label="DDG: e"];
"1000131" -> "1000223"  [label="DDG: e->next_offset"];
"1000131" -> "1000223"  [label="DDG: duprintf(\\"checking: element %p size %u\n\\",\n\t\t\t e, e->next_offset)"];
"1000121" -> "1000131"  [label="DDG: e->next_offset"];
"1000136" -> "1000134"  [label="AST: "];
"1000136" -> "1000135"  [label="CFG: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000133" -> "1000131"  [label="AST: "];
"1000133" -> "1000132"  [label="CFG: "];
"1000135" -> "1000133"  [label="CFG: "];
"1000134" -> "1000131"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000131" -> "1000134"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000135" -> "1000133"  [label="CFG: "];
"1000136" -> "1000135"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000131"  [label="CFG: "];
"1000138" -> "1000139"  [label="CFG: "];
"1000137" -> "1000130"  [label="AST: "];
"1000137" -> "1000138"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000223" -> "1000137"  [label="CFG: "];
"1000137" -> "1000223"  [label="DDG: <RET>"];
"1000138" -> "1000137"  [label="DDG: -EINVAL"];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000139"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000137" -> "1000138"  [label="CFG: "];
"1000138" -> "1000223"  [label="DDG: EINVAL"];
"1000138" -> "1000223"  [label="DDG: -EINVAL"];
"1000138" -> "1000137"  [label="DDG: -EINVAL"];
"1000140" -> "1000110"  [label="AST: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000142" -> "1000140"  [label="AST: "];
"1000145" -> "1000140"  [label="CFG: "];
"1000140" -> "1000223"  [label="DDG: check_entry(e)"];
"1000140" -> "1000223"  [label="DDG: err"];
"1000142" -> "1000140"  [label="DDG: e"];
"1000140" -> "1000146"  [label="DDG: err"];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000121"  [label="CFG: "];
"1000143" -> "1000141"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000141"  [label="CFG: "];
"1000142" -> "1000143"  [label="CFG: "];
"1000142" -> "1000140"  [label="AST: "];
"1000142" -> "1000143"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000142" -> "1000223"  [label="DDG: e"];
"1000142" -> "1000140"  [label="DDG: e"];
"1000142" -> "1000169"  [label="DDG: e"];
"1000144" -> "1000110"  [label="AST: "];
"1000145" -> "1000144"  [label="AST: "];
"1000146" -> "1000144"  [label="AST: "];
"1000145" -> "1000144"  [label="AST: "];
"1000145" -> "1000140"  [label="CFG: "];
"1000147" -> "1000145"  [label="CFG: "];
"1000150" -> "1000145"  [label="CFG: "];
"1000146" -> "1000144"  [label="AST: "];
"1000146" -> "1000147"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000223" -> "1000146"  [label="CFG: "];
"1000146" -> "1000223"  [label="DDG: <RET>"];
"1000147" -> "1000146"  [label="DDG: err"];
"1000140" -> "1000146"  [label="DDG: err"];
"1000147" -> "1000146"  [label="AST: "];
"1000147" -> "1000145"  [label="CFG: "];
"1000146" -> "1000147"  [label="CFG: "];
"1000147" -> "1000146"  [label="DDG: err"];
"1000105" -> "1000102"  [label="AST: "];
"1000105" -> "1000223"  [label="DDG: base"];
"1000320" -> "1000102"  [label="AST: "];
"1000148" -> "1000110"  [label="AST: "];
"1000149" -> "1000148"  [label="AST: "];
"1000152" -> "1000148"  [label="AST: "];
"1000155" -> "1000148"  [label="AST: "];
"1000157" -> "1000148"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000151" -> "1000150"  [label="CFG: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000152" -> "1000148"  [label="AST: "];
"1000152" -> "1000154"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000161" -> "1000152"  [label="CFG: "];
"1000218" -> "1000152"  [label="CFG: "];
"1000152" -> "1000223"  [label="DDG: h < NF_INET_NUMHOOKS"];
"1000152" -> "1000223"  [label="DDG: h"];
"1000152" -> "1000223"  [label="DDG: NF_INET_NUMHOOKS"];
"1000149" -> "1000152"  [label="DDG: h"];
"1000155" -> "1000152"  [label="DDG: h"];
"1000152" -> "1000162"  [label="DDG: h"];
"1000153" -> "1000152"  [label="AST: "];
"1000153" -> "1000149"  [label="CFG: "];
"1000153" -> "1000155"  [label="CFG: "];
"1000154" -> "1000153"  [label="CFG: "];
"1000154" -> "1000152"  [label="AST: "];
"1000154" -> "1000153"  [label="CFG: "];
"1000152" -> "1000154"  [label="CFG: "];
"1000155" -> "1000148"  [label="AST: "];
"1000155" -> "1000156"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000153" -> "1000155"  [label="CFG: "];
"1000155" -> "1000152"  [label="DDG: h"];
"1000162" -> "1000155"  [label="DDG: h"];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000165"  [label="CFG: "];
"1000156" -> "1000206"  [label="CFG: "];
"1000156" -> "1000186"  [label="CFG: "];
"1000155" -> "1000156"  [label="CFG: "];
"1000157" -> "1000148"  [label="AST: "];
"1000158" -> "1000157"  [label="AST: "];
"1000166" -> "1000157"  [label="AST: "];
"1000185" -> "1000157"  [label="AST: "];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000153" -> "1000149"  [label="CFG: "];
"1000149" -> "1000152"  [label="DDG: h"];
"1000150" -> "1000149"  [label="AST: "];
"1000150" -> "1000145"  [label="CFG: "];
"1000151" -> "1000150"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000158"  [label="AST: "];
"1000165" -> "1000158"  [label="AST: "];
"1000162" -> "1000160"  [label="AST: "];
"1000162" -> "1000164"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000164" -> "1000162"  [label="AST: "];
"1000160" -> "1000162"  [label="CFG: "];
"1000162" -> "1000223"  [label="DDG: h"];
"1000162" -> "1000155"  [label="DDG: h"];
"1000162" -> "1000160"  [label="DDG: 1"];
"1000162" -> "1000160"  [label="DDG: h"];
"1000152" -> "1000162"  [label="DDG: h"];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000161"  [label="CFG: "];
"1000164" -> "1000163"  [label="CFG: "];
"1000164" -> "1000162"  [label="AST: "];
"1000164" -> "1000163"  [label="CFG: "];
"1000162" -> "1000164"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000159" -> "1000160"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000165" -> "1000159"  [label="CFG: "];
"1000170" -> "1000159"  [label="CFG: "];
"1000159" -> "1000223"  [label="DDG: !(valid_hooks & (1 << h))"];
"1000159" -> "1000223"  [label="DDG: valid_hooks & (1 << h)"];
"1000160" -> "1000159"  [label="DDG: valid_hooks"];
"1000160" -> "1000159"  [label="DDG: 1 << h"];
"1000160" -> "1000159"  [label="AST: "];
"1000160" -> "1000162"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000162" -> "1000160"  [label="AST: "];
"1000159" -> "1000160"  [label="CFG: "];
"1000160" -> "1000223"  [label="DDG: 1 << h"];
"1000160" -> "1000223"  [label="DDG: valid_hooks"];
"1000160" -> "1000159"  [label="DDG: valid_hooks"];
"1000160" -> "1000159"  [label="DDG: 1 << h"];
"1000162" -> "1000160"  [label="DDG: 1"];
"1000162" -> "1000160"  [label="DDG: h"];
"1000161" -> "1000160"  [label="AST: "];
"1000161" -> "1000152"  [label="CFG: "];
"1000163" -> "1000161"  [label="CFG: "];
"1000165" -> "1000158"  [label="AST: "];
"1000165" -> "1000159"  [label="CFG: "];
"1000156" -> "1000165"  [label="CFG: "];
"1000166" -> "1000157"  [label="AST: "];
"1000167" -> "1000166"  [label="AST: "];
"1000176" -> "1000166"  [label="AST: "];
"1000171" -> "1000169"  [label="AST: "];
"1000171" -> "1000170"  [label="CFG: "];
"1000169" -> "1000171"  [label="CFG: "];
"1000172" -> "1000168"  [label="AST: "];
"1000172" -> "1000169"  [label="CFG: "];
"1000168" -> "1000172"  [label="CFG: "];
"1000173" -> "1000167"  [label="AST: "];
"1000173" -> "1000175"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000175" -> "1000173"  [label="AST: "];
"1000167" -> "1000173"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000174" -> "1000168"  [label="CFG: "];
"1000175" -> "1000174"  [label="CFG: "];
"1000175" -> "1000173"  [label="AST: "];
"1000175" -> "1000174"  [label="CFG: "];
"1000173" -> "1000175"  [label="CFG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000167" -> "1000173"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000173" -> "1000167"  [label="AST: "];
"1000179" -> "1000167"  [label="CFG: "];
"1000189" -> "1000167"  [label="CFG: "];
"1000167" -> "1000223"  [label="DDG: hook_entries[h]"];
"1000167" -> "1000223"  [label="DDG: (unsigned char *)e - base == hook_entries[h]"];
"1000168" -> "1000167"  [label="DDG: (unsigned char *)e"];
"1000168" -> "1000167"  [label="DDG: base"];
"1000167" -> "1000176"  [label="DDG: hook_entries[h]"];
"1000168" -> "1000167"  [label="AST: "];
"1000168" -> "1000172"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000172" -> "1000168"  [label="AST: "];
"1000174" -> "1000168"  [label="CFG: "];
"1000168" -> "1000167"  [label="DDG: (unsigned char *)e"];
"1000168" -> "1000167"  [label="DDG: base"];
"1000169" -> "1000168"  [label="DDG: e"];
"1000187" -> "1000168"  [label="DDG: base"];
"1000168" -> "1000187"  [label="DDG: base"];
"1000169" -> "1000168"  [label="AST: "];
"1000169" -> "1000171"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000171" -> "1000169"  [label="AST: "];
"1000172" -> "1000169"  [label="CFG: "];
"1000169" -> "1000168"  [label="DDG: e"];
"1000188" -> "1000169"  [label="DDG: e"];
"1000198" -> "1000169"  [label="DDG: e"];
"1000142" -> "1000169"  [label="DDG: e"];
"1000169" -> "1000188"  [label="DDG: e"];
"1000180" -> "1000178"  [label="AST: "];
"1000180" -> "1000179"  [label="CFG: "];
"1000178" -> "1000180"  [label="CFG: "];
"1000181" -> "1000177"  [label="AST: "];
"1000181" -> "1000178"  [label="CFG: "];
"1000177" -> "1000181"  [label="CFG: "];
"1000182" -> "1000176"  [label="AST: "];
"1000182" -> "1000184"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000184" -> "1000182"  [label="AST: "];
"1000176" -> "1000182"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000183" -> "1000177"  [label="CFG: "];
"1000184" -> "1000183"  [label="CFG: "];
"1000176" -> "1000166"  [label="AST: "];
"1000176" -> "1000182"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000182" -> "1000176"  [label="AST: "];
"1000189" -> "1000176"  [label="CFG: "];
"1000176" -> "1000223"  [label="DDG: newinfo->hook_entry[h]"];
"1000176" -> "1000223"  [label="DDG: hook_entries[h]"];
"1000167" -> "1000176"  [label="DDG: hook_entries[h]"];
"1000177" -> "1000176"  [label="AST: "];
"1000177" -> "1000181"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000181" -> "1000177"  [label="AST: "];
"1000183" -> "1000177"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000178" -> "1000180"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000180" -> "1000178"  [label="AST: "];
"1000181" -> "1000178"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000179" -> "1000167"  [label="CFG: "];
"1000180" -> "1000179"  [label="CFG: "];
"1000184" -> "1000182"  [label="AST: "];
"1000184" -> "1000183"  [label="CFG: "];
"1000182" -> "1000184"  [label="CFG: "];
"1000185" -> "1000157"  [label="AST: "];
"1000186" -> "1000185"  [label="AST: "];
"1000195" -> "1000185"  [label="AST: "];
"1000190" -> "1000188"  [label="AST: "];
"1000190" -> "1000189"  [label="CFG: "];
"1000188" -> "1000190"  [label="CFG: "];
"1000191" -> "1000187"  [label="AST: "];
"1000191" -> "1000188"  [label="CFG: "];
"1000187" -> "1000191"  [label="CFG: "];
"1000192" -> "1000186"  [label="AST: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000194" -> "1000192"  [label="AST: "];
"1000186" -> "1000192"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000193" -> "1000187"  [label="CFG: "];
"1000194" -> "1000193"  [label="CFG: "];
"1000194" -> "1000192"  [label="AST: "];
"1000194" -> "1000193"  [label="CFG: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000195" -> "1000185"  [label="AST: "];
"1000196" -> "1000195"  [label="AST: "];
"1000206" -> "1000195"  [label="AST: "];
"1000186" -> "1000185"  [label="AST: "];
"1000186" -> "1000192"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000192" -> "1000186"  [label="AST: "];
"1000199" -> "1000186"  [label="CFG: "];
"1000156" -> "1000186"  [label="CFG: "];
"1000186" -> "1000223"  [label="DDG: (unsigned char *)e - base == underflows[h]"];
"1000186" -> "1000223"  [label="DDG: (unsigned char *)e - base"];
"1000186" -> "1000223"  [label="DDG: underflows[h]"];
"1000187" -> "1000186"  [label="DDG: (unsigned char *)e"];
"1000187" -> "1000186"  [label="DDG: base"];
"1000186" -> "1000206"  [label="DDG: underflows[h]"];
"1000187" -> "1000186"  [label="AST: "];
"1000187" -> "1000191"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000191" -> "1000187"  [label="AST: "];
"1000193" -> "1000187"  [label="CFG: "];
"1000187" -> "1000223"  [label="DDG: (unsigned char *)e"];
"1000187" -> "1000223"  [label="DDG: base"];
"1000187" -> "1000168"  [label="DDG: base"];
"1000187" -> "1000186"  [label="DDG: (unsigned char *)e"];
"1000187" -> "1000186"  [label="DDG: base"];
"1000188" -> "1000187"  [label="DDG: e"];
"1000168" -> "1000187"  [label="DDG: base"];
"1000188" -> "1000187"  [label="AST: "];
"1000188" -> "1000190"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000188"  [label="AST: "];
"1000191" -> "1000188"  [label="CFG: "];
"1000188" -> "1000223"  [label="DDG: e"];
"1000188" -> "1000169"  [label="DDG: e"];
"1000188" -> "1000187"  [label="DDG: e"];
"1000169" -> "1000188"  [label="DDG: e"];
"1000188" -> "1000198"  [label="DDG: e"];
"1000199" -> "1000198"  [label="AST: "];
"1000199" -> "1000186"  [label="CFG: "];
"1000198" -> "1000199"  [label="CFG: "];
"1000200" -> "1000196"  [label="AST: "];
"1000201" -> "1000200"  [label="AST: "];
"1000203" -> "1000200"  [label="AST: "];
"1000196" -> "1000195"  [label="AST: "];
"1000197" -> "1000196"  [label="AST: "];
"1000200" -> "1000196"  [label="AST: "];
"1000197" -> "1000196"  [label="AST: "];
"1000197" -> "1000198"  [label="CFG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000202" -> "1000197"  [label="CFG: "];
"1000209" -> "1000197"  [label="CFG: "];
"1000197" -> "1000223"  [label="DDG: !check_underflow(e)"];
"1000197" -> "1000223"  [label="DDG: check_underflow(e)"];
"1000198" -> "1000197"  [label="DDG: e"];
"1000198" -> "1000197"  [label="AST: "];
"1000198" -> "1000199"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000197" -> "1000198"  [label="CFG: "];
"1000198" -> "1000223"  [label="DDG: e"];
"1000198" -> "1000169"  [label="DDG: e"];
"1000198" -> "1000197"  [label="DDG: e"];
"1000188" -> "1000198"  [label="DDG: e"];
"1000202" -> "1000201"  [label="AST: "];
"1000202" -> "1000197"  [label="CFG: "];
"1000201" -> "1000202"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000201" -> "1000202"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000205" -> "1000201"  [label="CFG: "];
"1000201" -> "1000223"  [label="DDG: pr_err(\\"Underflows must be unconditional and \\"\n\t\t\t\t       \\"use the STANDARD target with \\"\n\t\t\t\t       \\"ACCEPT/DROP\n\\")"];
"1000106" -> "1000102"  [label="AST: "];
"1000106" -> "1000223"  [label="DDG: limit"];
"1000321" -> "1000102"  [label="AST: "];
"1000204" -> "1000203"  [label="AST: "];
"1000204" -> "1000205"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000203" -> "1000204"  [label="CFG: "];
"1000204" -> "1000223"  [label="DDG: EINVAL"];
"1000204" -> "1000223"  [label="DDG: -EINVAL"];
"1000204" -> "1000203"  [label="DDG: -EINVAL"];
"1000205" -> "1000204"  [label="AST: "];
"1000205" -> "1000201"  [label="CFG: "];
"1000204" -> "1000205"  [label="CFG: "];
"1000203" -> "1000200"  [label="AST: "];
"1000203" -> "1000204"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000223" -> "1000203"  [label="CFG: "];
"1000203" -> "1000223"  [label="DDG: <RET>"];
"1000204" -> "1000203"  [label="DDG: -EINVAL"];
"1000210" -> "1000208"  [label="AST: "];
"1000210" -> "1000209"  [label="CFG: "];
"1000208" -> "1000210"  [label="CFG: "];
"1000211" -> "1000207"  [label="AST: "];
"1000211" -> "1000208"  [label="CFG: "];
"1000207" -> "1000211"  [label="CFG: "];
"1000212" -> "1000206"  [label="AST: "];
"1000212" -> "1000214"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000214" -> "1000212"  [label="AST: "];
"1000206" -> "1000212"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000213" -> "1000207"  [label="CFG: "];
"1000214" -> "1000213"  [label="CFG: "];
"1000206" -> "1000195"  [label="AST: "];
"1000206" -> "1000212"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000212" -> "1000206"  [label="AST: "];
"1000156" -> "1000206"  [label="CFG: "];
"1000206" -> "1000223"  [label="DDG: newinfo->underflow[h]"];
"1000206" -> "1000223"  [label="DDG: underflows[h]"];
"1000186" -> "1000206"  [label="DDG: underflows[h]"];
"1000207" -> "1000206"  [label="AST: "];
"1000207" -> "1000211"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000211" -> "1000207"  [label="AST: "];
"1000213" -> "1000207"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000208" -> "1000210"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000210" -> "1000208"  [label="AST: "];
"1000211" -> "1000208"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000209" -> "1000197"  [label="CFG: "];
"1000210" -> "1000209"  [label="CFG: "];
"1000214" -> "1000212"  [label="AST: "];
"1000214" -> "1000213"  [label="CFG: "];
"1000212" -> "1000214"  [label="CFG: "];
"1000215" -> "1000110"  [label="AST: "];
"1000216" -> "1000110"  [label="AST: "];
"1000216" -> "1000220"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000220" -> "1000216"  [label="AST: "];
"1000222" -> "1000216"  [label="CFG: "];
"1000216" -> "1000223"  [label="DDG: e->comefrom"];
"1000217" -> "1000216"  [label="AST: "];
"1000217" -> "1000219"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000219" -> "1000217"  [label="AST: "];
"1000220" -> "1000217"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000218" -> "1000152"  [label="CFG: "];
"1000219" -> "1000218"  [label="CFG: "];
"1000220" -> "1000216"  [label="AST: "];
"1000220" -> "1000217"  [label="CFG: "];
"1000216" -> "1000220"  [label="CFG: "];
"1000219" -> "1000217"  [label="AST: "];
"1000219" -> "1000218"  [label="CFG: "];
"1000217" -> "1000219"  [label="CFG: "];
"1000221" -> "1000110"  [label="AST: "];
"1000221" -> "1000222"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="CFG: "];
"1000221" -> "1000223"  [label="DDG: <RET>"];
"1000222" -> "1000221"  [label="DDG: 0"];
"1000222" -> "1000221"  [label="AST: "];
"1000222" -> "1000216"  [label="CFG: "];
"1000221" -> "1000222"  [label="CFG: "];
"1000222" -> "1000221"  [label="DDG: 0"];
"1000107" -> "1000102"  [label="AST: "];
"1000107" -> "1000223"  [label="DDG: hook_entries"];
"1000322" -> "1000102"  [label="AST: "];
"1000108" -> "1000102"  [label="AST: "];
"1000108" -> "1000223"  [label="DDG: underflows"];
"1000323" -> "1000102"  [label="AST: "];
"1000109" -> "1000102"  [label="AST: "];
"1000109" -> "1000223"  [label="DDG: valid_hooks"];
"1000324" -> "1000102"  [label="AST: "];
"1000110" -> "1000102"  [label="AST: "];
"1000111" -> "1000110"  [label="AST: "];
"1000112" -> "1000110"  [label="AST: "];
"1000113" -> "1000110"  [label="AST: "];
"1000120" -> "1000110"  [label="AST: "];
"1000140" -> "1000110"  [label="AST: "];
"1000144" -> "1000110"  [label="AST: "];
"1000148" -> "1000110"  [label="AST: "];
"1000215" -> "1000110"  [label="AST: "];
"1000216" -> "1000110"  [label="AST: "];
"1000221" -> "1000110"  [label="AST: "];
}
