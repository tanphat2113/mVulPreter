digraph "1_Chrome_8cfe2463cec6835c7b0b73dcb2ab2edaf035e3f9_5" {
"1000143" [label="(MethodReturn,void)"];
"1000101" [label="(MethodParameterIn,const std::string& suffix)"];
"1000197" [label="(MethodParameterOut,const std::string& suffix)"];
"1000117" [label="(Identifier,false)"];
"1000118" [label="(Literal,\"Invalid URL.\")"];
"1000116" [label="(Call,std::move(callback).Run(false, \"Invalid URL.\"))"];
"1000119" [label="(Return,return;)"];
"1000121" [label="(Call,* app_instance =\n      arc::ArcServiceManager::Get()\n          ? ARC_GET_INSTANCE_FOR_METHOD(\n                arc::ArcServiceManager::Get()->arc_bridge_service()->app(),\n                LaunchIntent)\n          : nullptr)"];
"1000122" [label="(Identifier,app_instance)"];
"1000123" [label="(Call,arc::ArcServiceManager::Get()\n          ? ARC_GET_INSTANCE_FOR_METHOD(\n                arc::ArcServiceManager::Get()->arc_bridge_service()->app(),\n                LaunchIntent)\n          : nullptr)"];
"1000124" [label="(Call,arc::ArcServiceManager::Get())"];
"1000125" [label="(Call,ARC_GET_INSTANCE_FOR_METHOD(\n                arc::ArcServiceManager::Get()->arc_bridge_service()->app(),\n                LaunchIntent))"];
"1000126" [label="(Call,arc::ArcServiceManager::Get()->arc_bridge_service()->app())"];
"1000127" [label="(Identifier,LaunchIntent)"];
"1000128" [label="(Identifier,nullptr)"];
"1000102" [label="(MethodParameterIn,LaunchHomeUrlCallback callback)"];
"1000198" [label="(MethodParameterOut,LaunchHomeUrlCallback callback)"];
"1000103" [label="(Block,)"];
"1000129" [label="(ControlStructure,if (!app_instance))"];
"1000132" [label="(Block,)"];
"1000130" [label="(Call,!app_instance)"];
"1000131" [label="(Identifier,app_instance)"];
"1000134" [label="(Identifier,false)"];
"1000135" [label="(Literal,\"ARC bridge not available.\")"];
"1000133" [label="(Call,std::move(callback).Run(false, \"ARC bridge not available.\"))"];
"1000136" [label="(Return,return;)"];
"1000137" [label="(Call,app_instance->LaunchIntent(url.spec(), display::kDefaultDisplayId))"];
"1000138" [label="(Call,url.spec())"];
"1000139" [label="(Identifier,display::kDefaultDisplayId)"];
"1000141" [label="(Identifier,true)"];
"1000140" [label="(Call,std::move(callback).Run(true, base::nullopt))"];
"1000142" [label="(Identifier,base::nullopt)"];
"1000106" [label="(Block,)"];
"1000104" [label="(ControlStructure,if (url_prefix_.empty()))"];
"1000105" [label="(Call,url_prefix_.empty())"];
"1000108" [label="(Identifier,false)"];
"1000109" [label="(Literal,\"No URL prefix.\")"];
"1000107" [label="(Call,std::move(callback).Run(false, \"No URL prefix.\"))"];
"1000110" [label="(Return,return;)"];
"1000112" [label="(ControlStructure,if (!url.is_valid()))"];
"1000115" [label="(Block,)"];
"1000113" [label="(Call,!url.is_valid())"];
"1000114" [label="(Call,url.is_valid())"];
"1000143" -> "1000100"  [label="AST: "];
"1000143" -> "1000110"  [label="CFG: "];
"1000143" -> "1000119"  [label="CFG: "];
"1000143" -> "1000136"  [label="CFG: "];
"1000143" -> "1000140"  [label="CFG: "];
"1000136" -> "1000143"  [label="DDG: <RET>"];
"1000119" -> "1000143"  [label="DDG: <RET>"];
"1000116" -> "1000143"  [label="DDG: false"];
"1000116" -> "1000143"  [label="DDG: std::move(callback).Run(false, \\"Invalid URL.\\")"];
"1000140" -> "1000143"  [label="DDG: base::nullopt"];
"1000140" -> "1000143"  [label="DDG: std::move(callback).Run(true, base::nullopt)"];
"1000140" -> "1000143"  [label="DDG: true"];
"1000123" -> "1000143"  [label="DDG: ARC_GET_INSTANCE_FOR_METHOD(\n                arc::ArcServiceManager::Get()->arc_bridge_service()->app(),\n                LaunchIntent)"];
"1000123" -> "1000143"  [label="DDG: nullptr"];
"1000123" -> "1000143"  [label="DDG: arc::ArcServiceManager::Get()"];
"1000107" -> "1000143"  [label="DDG: false"];
"1000107" -> "1000143"  [label="DDG: std::move(callback).Run(false, \\"No URL prefix.\\")"];
"1000105" -> "1000143"  [label="DDG: url_prefix_.empty()"];
"1000113" -> "1000143"  [label="DDG: url.is_valid()"];
"1000113" -> "1000143"  [label="DDG: !url.is_valid()"];
"1000133" -> "1000143"  [label="DDG: false"];
"1000133" -> "1000143"  [label="DDG: std::move(callback).Run(false, \\"ARC bridge not available.\\")"];
"1000125" -> "1000143"  [label="DDG: LaunchIntent"];
"1000125" -> "1000143"  [label="DDG: arc::ArcServiceManager::Get()->arc_bridge_service()->app()"];
"1000137" -> "1000143"  [label="DDG: app_instance->LaunchIntent(url.spec(), display::kDefaultDisplayId)"];
"1000137" -> "1000143"  [label="DDG: display::kDefaultDisplayId"];
"1000137" -> "1000143"  [label="DDG: url.spec()"];
"1000130" -> "1000143"  [label="DDG: !app_instance"];
"1000130" -> "1000143"  [label="DDG: app_instance"];
"1000121" -> "1000143"  [label="DDG: arc::ArcServiceManager::Get()\n          ? ARC_GET_INSTANCE_FOR_METHOD(\n                arc::ArcServiceManager::Get()->arc_bridge_service()->app(),\n                LaunchIntent)\n          : nullptr"];
"1000102" -> "1000143"  [label="DDG: callback"];
"1000101" -> "1000143"  [label="DDG: suffix"];
"1000110" -> "1000143"  [label="DDG: <RET>"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000143"  [label="DDG: suffix"];
"1000197" -> "1000100"  [label="AST: "];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1000113"  [label="CFG: "];
"1000118" -> "1000117"  [label="CFG: "];
"1000118" -> "1000116"  [label="AST: "];
"1000118" -> "1000117"  [label="CFG: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000119" -> "1000116"  [label="CFG: "];
"1000116" -> "1000143"  [label="DDG: false"];
"1000116" -> "1000143"  [label="DDG: std::move(callback).Run(false, \\"Invalid URL.\\")"];
"1000119" -> "1000115"  [label="AST: "];
"1000119" -> "1000116"  [label="CFG: "];
"1000143" -> "1000119"  [label="CFG: "];
"1000119" -> "1000143"  [label="DDG: <RET>"];
"1000121" -> "1000103"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000131" -> "1000121"  [label="CFG: "];
"1000121" -> "1000143"  [label="DDG: arc::ArcServiceManager::Get()\n          ? ARC_GET_INSTANCE_FOR_METHOD(\n                arc::ArcServiceManager::Get()->arc_bridge_service()->app(),\n                LaunchIntent)\n          : nullptr"];
"1000125" -> "1000121"  [label="DDG: arc::ArcServiceManager::Get()->arc_bridge_service()->app()"];
"1000125" -> "1000121"  [label="DDG: LaunchIntent"];
"1000121" -> "1000130"  [label="DDG: app_instance"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000113"  [label="CFG: "];
"1000124" -> "1000122"  [label="CFG: "];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000123" -> "1000128"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000128" -> "1000123"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000123" -> "1000143"  [label="DDG: ARC_GET_INSTANCE_FOR_METHOD(\n                arc::ArcServiceManager::Get()->arc_bridge_service()->app(),\n                LaunchIntent)"];
"1000123" -> "1000143"  [label="DDG: nullptr"];
"1000123" -> "1000143"  [label="DDG: arc::ArcServiceManager::Get()"];
"1000125" -> "1000123"  [label="DDG: arc::ArcServiceManager::Get()->arc_bridge_service()->app()"];
"1000125" -> "1000123"  [label="DDG: LaunchIntent"];
"1000124" -> "1000123"  [label="AST: "];
"1000124" -> "1000122"  [label="CFG: "];
"1000126" -> "1000124"  [label="CFG: "];
"1000128" -> "1000124"  [label="CFG: "];
"1000125" -> "1000123"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000125" -> "1000143"  [label="DDG: LaunchIntent"];
"1000125" -> "1000143"  [label="DDG: arc::ArcServiceManager::Get()->arc_bridge_service()->app()"];
"1000125" -> "1000121"  [label="DDG: arc::ArcServiceManager::Get()->arc_bridge_service()->app()"];
"1000125" -> "1000121"  [label="DDG: LaunchIntent"];
"1000125" -> "1000123"  [label="DDG: arc::ArcServiceManager::Get()->arc_bridge_service()->app()"];
"1000125" -> "1000123"  [label="DDG: LaunchIntent"];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000124"  [label="CFG: "];
"1000127" -> "1000126"  [label="CFG: "];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1000126"  [label="CFG: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000128" -> "1000123"  [label="AST: "];
"1000128" -> "1000124"  [label="CFG: "];
"1000123" -> "1000128"  [label="CFG: "];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000143"  [label="DDG: callback"];
"1000198" -> "1000100"  [label="AST: "];
"1000103" -> "1000100"  [label="AST: "];
"1000104" -> "1000103"  [label="AST: "];
"1000111" -> "1000103"  [label="AST: "];
"1000112" -> "1000103"  [label="AST: "];
"1000120" -> "1000103"  [label="AST: "];
"1000121" -> "1000103"  [label="AST: "];
"1000129" -> "1000103"  [label="AST: "];
"1000137" -> "1000103"  [label="AST: "];
"1000140" -> "1000103"  [label="AST: "];
"1000129" -> "1000103"  [label="AST: "];
"1000130" -> "1000129"  [label="AST: "];
"1000132" -> "1000129"  [label="AST: "];
"1000132" -> "1000129"  [label="AST: "];
"1000133" -> "1000132"  [label="AST: "];
"1000136" -> "1000132"  [label="AST: "];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000131"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000134" -> "1000130"  [label="CFG: "];
"1000138" -> "1000130"  [label="CFG: "];
"1000130" -> "1000143"  [label="DDG: !app_instance"];
"1000130" -> "1000143"  [label="DDG: app_instance"];
"1000121" -> "1000130"  [label="DDG: app_instance"];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000121"  [label="CFG: "];
"1000130" -> "1000131"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000130"  [label="CFG: "];
"1000135" -> "1000134"  [label="CFG: "];
"1000135" -> "1000133"  [label="AST: "];
"1000135" -> "1000134"  [label="CFG: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000136" -> "1000133"  [label="CFG: "];
"1000133" -> "1000143"  [label="DDG: false"];
"1000133" -> "1000143"  [label="DDG: std::move(callback).Run(false, \\"ARC bridge not available.\\")"];
"1000136" -> "1000132"  [label="AST: "];
"1000136" -> "1000133"  [label="CFG: "];
"1000143" -> "1000136"  [label="CFG: "];
"1000136" -> "1000143"  [label="DDG: <RET>"];
"1000137" -> "1000103"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000141" -> "1000137"  [label="CFG: "];
"1000137" -> "1000143"  [label="DDG: app_instance->LaunchIntent(url.spec(), display::kDefaultDisplayId)"];
"1000137" -> "1000143"  [label="DDG: display::kDefaultDisplayId"];
"1000137" -> "1000143"  [label="DDG: url.spec()"];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000130"  [label="CFG: "];
"1000139" -> "1000138"  [label="CFG: "];
"1000139" -> "1000137"  [label="AST: "];
"1000139" -> "1000138"  [label="CFG: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000137"  [label="CFG: "];
"1000142" -> "1000141"  [label="CFG: "];
"1000140" -> "1000103"  [label="AST: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000142" -> "1000140"  [label="AST: "];
"1000143" -> "1000140"  [label="CFG: "];
"1000140" -> "1000143"  [label="DDG: base::nullopt"];
"1000140" -> "1000143"  [label="DDG: std::move(callback).Run(true, base::nullopt)"];
"1000140" -> "1000143"  [label="DDG: true"];
"1000142" -> "1000140"  [label="AST: "];
"1000142" -> "1000141"  [label="CFG: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000106" -> "1000104"  [label="AST: "];
"1000107" -> "1000106"  [label="AST: "];
"1000110" -> "1000106"  [label="AST: "];
"1000104" -> "1000103"  [label="AST: "];
"1000105" -> "1000104"  [label="AST: "];
"1000106" -> "1000104"  [label="AST: "];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000100"  [label="CFG: "];
"1000108" -> "1000105"  [label="CFG: "];
"1000114" -> "1000105"  [label="CFG: "];
"1000105" -> "1000143"  [label="DDG: url_prefix_.empty()"];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000105"  [label="CFG: "];
"1000109" -> "1000108"  [label="CFG: "];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000108"  [label="CFG: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000110" -> "1000107"  [label="CFG: "];
"1000107" -> "1000143"  [label="DDG: false"];
"1000107" -> "1000143"  [label="DDG: std::move(callback).Run(false, \\"No URL prefix.\\")"];
"1000110" -> "1000106"  [label="AST: "];
"1000110" -> "1000107"  [label="CFG: "];
"1000143" -> "1000110"  [label="CFG: "];
"1000110" -> "1000143"  [label="DDG: <RET>"];
"1000112" -> "1000103"  [label="AST: "];
"1000113" -> "1000112"  [label="AST: "];
"1000115" -> "1000112"  [label="AST: "];
"1000115" -> "1000112"  [label="AST: "];
"1000116" -> "1000115"  [label="AST: "];
"1000119" -> "1000115"  [label="AST: "];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000114"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000117" -> "1000113"  [label="CFG: "];
"1000122" -> "1000113"  [label="CFG: "];
"1000113" -> "1000143"  [label="DDG: url.is_valid()"];
"1000113" -> "1000143"  [label="DDG: !url.is_valid()"];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000105"  [label="CFG: "];
"1000113" -> "1000114"  [label="CFG: "];
}
