digraph "1_Chrome_fec26ff33bf372476a70326f3669a35f34a9d474_1" {
"1000152" [label="(MethodReturn,bool)"];
"1000101" [label="(MethodParameterIn,const GURL& initial_url)"];
"1000225" [label="(MethodParameterOut,const GURL& initial_url)"];
"1000133" [label="(Call,initial_origin.is_valid() &&\n             initial_origin.SchemeIsHTTPOrHTTPS())"];
"1000134" [label="(Call,initial_origin.is_valid())"];
"1000131" [label="(ControlStructure,else)"];
"1000132" [label="(ControlStructure,if (initial_origin.is_valid() &&\n             initial_origin.SchemeIsHTTPOrHTTPS()))"];
"1000135" [label="(Call,initial_origin.SchemeIsHTTPOrHTTPS())"];
"1000138" [label="(Call,origin = url::Origin::Create(initial_origin))"];
"1000139" [label="(Identifier,origin)"];
"1000140" [label="(Call,url::Origin::Create(initial_origin))"];
"1000136" [label="(Block,)"];
"1000141" [label="(Identifier,initial_origin)"];
"1000143" [label="(Call,prediction->requests.begin())"];
"1000142" [label="(Call,prediction->requests.emplace(prediction->requests.begin(), initial_origin,\n                                 kMinSockets,\n                                 net::NetworkIsolationKey(origin, origin)))"];
"1000144" [label="(Identifier,initial_origin)"];
"1000145" [label="(Identifier,kMinSockets)"];
"1000146" [label="(Call,net::NetworkIsolationKey(origin, origin))"];
"1000147" [label="(Identifier,origin)"];
"1000148" [label="(Identifier,origin)"];
"1000150" [label="(Call,!prediction->requests.empty())"];
"1000151" [label="(Call,prediction->requests.empty())"];
"1000149" [label="(Return,return !prediction->requests.empty();)"];
"1000102" [label="(MethodParameterIn,PreconnectPrediction* prediction)"];
"1000226" [label="(MethodParameterOut,PreconnectPrediction* prediction)"];
"1000103" [label="(Block,)"];
"1000107" [label="(Call,initial_url.GetOrigin())"];
"1000105" [label="(Call,initial_origin = initial_url.GetOrigin())"];
"1000106" [label="(Identifier,initial_origin)"];
"1000109" [label="(Call,kMinSockets = 2)"];
"1000110" [label="(Identifier,kMinSockets)"];
"1000111" [label="(Literal,2)"];
"1000112" [label="(ControlStructure,if (!prediction->requests.empty() &&\n       prediction->requests.front().origin == initial_origin))"];
"1000113" [label="(Call,!prediction->requests.empty() &&\n       prediction->requests.front().origin == initial_origin)"];
"1000114" [label="(Call,!prediction->requests.empty())"];
"1000115" [label="(Call,prediction->requests.empty())"];
"1000119" [label="(FieldIdentifier,origin)"];
"1000120" [label="(Identifier,initial_origin)"];
"1000121" [label="(Block,)"];
"1000116" [label="(Call,prediction->requests.front().origin == initial_origin)"];
"1000117" [label="(Call,prediction->requests.front().origin)"];
"1000118" [label="(Call,prediction->requests.front())"];
"1000125" [label="(FieldIdentifier,num_sockets)"];
"1000122" [label="(Call,prediction->requests.front().num_sockets =\n         std::max(prediction->requests.front().num_sockets, kMinSockets))"];
"1000123" [label="(Call,prediction->requests.front().num_sockets)"];
"1000124" [label="(Call,prediction->requests.front())"];
"1000127" [label="(Call,prediction->requests.front().num_sockets)"];
"1000128" [label="(Call,prediction->requests.front())"];
"1000129" [label="(FieldIdentifier,num_sockets)"];
"1000130" [label="(Identifier,kMinSockets)"];
"1000126" [label="(Call,std::max(prediction->requests.front().num_sockets, kMinSockets))"];
"1000152" -> "1000100"  [label="AST: "];
"1000152" -> "1000149"  [label="CFG: "];
"1000116" -> "1000152"  [label="DDG: prediction->requests.front().origin"];
"1000116" -> "1000152"  [label="DDG: initial_origin"];
"1000142" -> "1000152"  [label="DDG: prediction->requests.emplace(prediction->requests.begin(), initial_origin,\n                                 kMinSockets,\n                                 net::NetworkIsolationKey(origin, origin))"];
"1000142" -> "1000152"  [label="DDG: net::NetworkIsolationKey(origin, origin)"];
"1000142" -> "1000152"  [label="DDG: initial_origin"];
"1000142" -> "1000152"  [label="DDG: prediction->requests.begin()"];
"1000142" -> "1000152"  [label="DDG: kMinSockets"];
"1000122" -> "1000152"  [label="DDG: prediction->requests.front().num_sockets"];
"1000122" -> "1000152"  [label="DDG: std::max(prediction->requests.front().num_sockets, kMinSockets)"];
"1000138" -> "1000152"  [label="DDG: url::Origin::Create(initial_origin)"];
"1000146" -> "1000152"  [label="DDG: origin"];
"1000150" -> "1000152"  [label="DDG: !prediction->requests.empty()"];
"1000150" -> "1000152"  [label="DDG: prediction->requests.empty()"];
"1000126" -> "1000152"  [label="DDG: kMinSockets"];
"1000105" -> "1000152"  [label="DDG: initial_url.GetOrigin()"];
"1000105" -> "1000152"  [label="DDG: initial_origin"];
"1000133" -> "1000152"  [label="DDG: initial_origin.is_valid()"];
"1000133" -> "1000152"  [label="DDG: initial_origin.is_valid() &&\n             initial_origin.SchemeIsHTTPOrHTTPS()"];
"1000133" -> "1000152"  [label="DDG: initial_origin.SchemeIsHTTPOrHTTPS()"];
"1000102" -> "1000152"  [label="DDG: prediction"];
"1000113" -> "1000152"  [label="DDG: !prediction->requests.empty() &&\n       prediction->requests.front().origin == initial_origin"];
"1000113" -> "1000152"  [label="DDG: prediction->requests.front().origin == initial_origin"];
"1000101" -> "1000152"  [label="DDG: initial_url"];
"1000109" -> "1000152"  [label="DDG: kMinSockets"];
"1000149" -> "1000152"  [label="DDG: <RET>"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000152"  [label="DDG: initial_url"];
"1000225" -> "1000100"  [label="AST: "];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000134"  [label="CFG: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000139" -> "1000133"  [label="CFG: "];
"1000151" -> "1000133"  [label="CFG: "];
"1000133" -> "1000152"  [label="DDG: initial_origin.is_valid()"];
"1000133" -> "1000152"  [label="DDG: initial_origin.is_valid() &&\n             initial_origin.SchemeIsHTTPOrHTTPS()"];
"1000133" -> "1000152"  [label="DDG: initial_origin.SchemeIsHTTPOrHTTPS()"];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000113"  [label="CFG: "];
"1000135" -> "1000134"  [label="CFG: "];
"1000133" -> "1000134"  [label="CFG: "];
"1000131" -> "1000112"  [label="AST: "];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000132"  [label="AST: "];
"1000136" -> "1000132"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000135" -> "1000134"  [label="CFG: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000138" -> "1000136"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000143" -> "1000138"  [label="CFG: "];
"1000138" -> "1000152"  [label="DDG: url::Origin::Create(initial_origin)"];
"1000140" -> "1000138"  [label="DDG: initial_origin"];
"1000138" -> "1000146"  [label="DDG: origin"];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000133"  [label="CFG: "];
"1000141" -> "1000139"  [label="CFG: "];
"1000140" -> "1000138"  [label="AST: "];
"1000140" -> "1000141"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000140" -> "1000138"  [label="DDG: initial_origin"];
"1000116" -> "1000140"  [label="DDG: initial_origin"];
"1000105" -> "1000140"  [label="DDG: initial_origin"];
"1000140" -> "1000142"  [label="DDG: initial_origin"];
"1000136" -> "1000132"  [label="AST: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000142" -> "1000136"  [label="AST: "];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000139"  [label="CFG: "];
"1000140" -> "1000141"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000138"  [label="CFG: "];
"1000144" -> "1000143"  [label="CFG: "];
"1000142" -> "1000136"  [label="AST: "];
"1000142" -> "1000146"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000145" -> "1000142"  [label="AST: "];
"1000146" -> "1000142"  [label="AST: "];
"1000151" -> "1000142"  [label="CFG: "];
"1000142" -> "1000152"  [label="DDG: prediction->requests.emplace(prediction->requests.begin(), initial_origin,\n                                 kMinSockets,\n                                 net::NetworkIsolationKey(origin, origin))"];
"1000142" -> "1000152"  [label="DDG: net::NetworkIsolationKey(origin, origin)"];
"1000142" -> "1000152"  [label="DDG: initial_origin"];
"1000142" -> "1000152"  [label="DDG: prediction->requests.begin()"];
"1000142" -> "1000152"  [label="DDG: kMinSockets"];
"1000140" -> "1000142"  [label="DDG: initial_origin"];
"1000109" -> "1000142"  [label="DDG: kMinSockets"];
"1000146" -> "1000142"  [label="DDG: origin"];
"1000144" -> "1000142"  [label="AST: "];
"1000144" -> "1000143"  [label="CFG: "];
"1000145" -> "1000144"  [label="CFG: "];
"1000145" -> "1000142"  [label="AST: "];
"1000145" -> "1000144"  [label="CFG: "];
"1000147" -> "1000145"  [label="CFG: "];
"1000146" -> "1000142"  [label="AST: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000142" -> "1000146"  [label="CFG: "];
"1000146" -> "1000152"  [label="DDG: origin"];
"1000146" -> "1000142"  [label="DDG: origin"];
"1000138" -> "1000146"  [label="DDG: origin"];
"1000147" -> "1000146"  [label="AST: "];
"1000147" -> "1000145"  [label="CFG: "];
"1000148" -> "1000147"  [label="CFG: "];
"1000148" -> "1000146"  [label="AST: "];
"1000148" -> "1000147"  [label="CFG: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000150" -> "1000151"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000150" -> "1000152"  [label="DDG: !prediction->requests.empty()"];
"1000150" -> "1000152"  [label="DDG: prediction->requests.empty()"];
"1000150" -> "1000149"  [label="DDG: !prediction->requests.empty()"];
"1000151" -> "1000150"  [label="AST: "];
"1000151" -> "1000122"  [label="CFG: "];
"1000151" -> "1000142"  [label="CFG: "];
"1000151" -> "1000133"  [label="CFG: "];
"1000150" -> "1000151"  [label="CFG: "];
"1000149" -> "1000103"  [label="AST: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000152" -> "1000149"  [label="CFG: "];
"1000149" -> "1000152"  [label="DDG: <RET>"];
"1000150" -> "1000149"  [label="DDG: !prediction->requests.empty()"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000152"  [label="DDG: prediction"];
"1000226" -> "1000100"  [label="AST: "];
"1000103" -> "1000100"  [label="AST: "];
"1000104" -> "1000103"  [label="AST: "];
"1000105" -> "1000103"  [label="AST: "];
"1000108" -> "1000103"  [label="AST: "];
"1000109" -> "1000103"  [label="AST: "];
"1000112" -> "1000103"  [label="AST: "];
"1000149" -> "1000103"  [label="AST: "];
"1000107" -> "1000105"  [label="AST: "];
"1000107" -> "1000106"  [label="CFG: "];
"1000105" -> "1000107"  [label="CFG: "];
"1000105" -> "1000103"  [label="AST: "];
"1000105" -> "1000107"  [label="CFG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000107" -> "1000105"  [label="AST: "];
"1000110" -> "1000105"  [label="CFG: "];
"1000105" -> "1000152"  [label="DDG: initial_url.GetOrigin()"];
"1000105" -> "1000152"  [label="DDG: initial_origin"];
"1000105" -> "1000116"  [label="DDG: initial_origin"];
"1000105" -> "1000140"  [label="DDG: initial_origin"];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000100"  [label="CFG: "];
"1000107" -> "1000106"  [label="CFG: "];
"1000109" -> "1000103"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000115" -> "1000109"  [label="CFG: "];
"1000109" -> "1000152"  [label="DDG: kMinSockets"];
"1000109" -> "1000126"  [label="DDG: kMinSockets"];
"1000109" -> "1000142"  [label="DDG: kMinSockets"];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000105"  [label="CFG: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000112" -> "1000103"  [label="AST: "];
"1000113" -> "1000112"  [label="AST: "];
"1000121" -> "1000112"  [label="AST: "];
"1000131" -> "1000112"  [label="AST: "];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000114"  [label="CFG: "];
"1000113" -> "1000116"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000116" -> "1000113"  [label="AST: "];
"1000124" -> "1000113"  [label="CFG: "];
"1000134" -> "1000113"  [label="CFG: "];
"1000113" -> "1000152"  [label="DDG: !prediction->requests.empty() &&\n       prediction->requests.front().origin == initial_origin"];
"1000113" -> "1000152"  [label="DDG: prediction->requests.front().origin == initial_origin"];
"1000114" -> "1000113"  [label="DDG: prediction->requests.empty()"];
"1000116" -> "1000113"  [label="DDG: prediction->requests.front().origin"];
"1000116" -> "1000113"  [label="DDG: initial_origin"];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000115"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000118" -> "1000114"  [label="CFG: "];
"1000113" -> "1000114"  [label="CFG: "];
"1000114" -> "1000113"  [label="DDG: prediction->requests.empty()"];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000109"  [label="CFG: "];
"1000114" -> "1000115"  [label="CFG: "];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000118"  [label="CFG: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000120" -> "1000116"  [label="AST: "];
"1000120" -> "1000117"  [label="CFG: "];
"1000116" -> "1000120"  [label="CFG: "];
"1000121" -> "1000112"  [label="AST: "];
"1000122" -> "1000121"  [label="AST: "];
"1000116" -> "1000113"  [label="AST: "];
"1000116" -> "1000120"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000120" -> "1000116"  [label="AST: "];
"1000113" -> "1000116"  [label="CFG: "];
"1000116" -> "1000152"  [label="DDG: prediction->requests.front().origin"];
"1000116" -> "1000152"  [label="DDG: initial_origin"];
"1000116" -> "1000113"  [label="DDG: prediction->requests.front().origin"];
"1000116" -> "1000113"  [label="DDG: initial_origin"];
"1000105" -> "1000116"  [label="DDG: initial_origin"];
"1000116" -> "1000140"  [label="DDG: initial_origin"];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000120" -> "1000117"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000114"  [label="CFG: "];
"1000119" -> "1000118"  [label="CFG: "];
"1000125" -> "1000123"  [label="AST: "];
"1000125" -> "1000124"  [label="CFG: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000126"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000126" -> "1000122"  [label="AST: "];
"1000151" -> "1000122"  [label="CFG: "];
"1000122" -> "1000152"  [label="DDG: prediction->requests.front().num_sockets"];
"1000122" -> "1000152"  [label="DDG: std::max(prediction->requests.front().num_sockets, kMinSockets)"];
"1000126" -> "1000122"  [label="DDG: prediction->requests.front().num_sockets"];
"1000126" -> "1000122"  [label="DDG: kMinSockets"];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000128" -> "1000123"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000124" -> "1000113"  [label="CFG: "];
"1000125" -> "1000124"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000130" -> "1000127"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000123"  [label="CFG: "];
"1000129" -> "1000128"  [label="CFG: "];
"1000129" -> "1000127"  [label="AST: "];
"1000129" -> "1000128"  [label="CFG: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000130" -> "1000126"  [label="AST: "];
"1000130" -> "1000127"  [label="CFG: "];
"1000126" -> "1000130"  [label="CFG: "];
"1000126" -> "1000122"  [label="AST: "];
"1000126" -> "1000130"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000130" -> "1000126"  [label="AST: "];
"1000122" -> "1000126"  [label="CFG: "];
"1000126" -> "1000152"  [label="DDG: kMinSockets"];
"1000126" -> "1000122"  [label="DDG: prediction->requests.front().num_sockets"];
"1000126" -> "1000122"  [label="DDG: kMinSockets"];
"1000109" -> "1000126"  [label="DDG: kMinSockets"];
}
