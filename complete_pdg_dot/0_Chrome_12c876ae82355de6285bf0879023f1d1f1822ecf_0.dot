digraph "0_Chrome_12c876ae82355de6285bf0879023f1d1f1822ecf_0" {
"1000142" [label="(MethodReturn,RET)"];
"1000123" [label="(Identifier,video_capture_provider)"];
"1000122" [label="(Call,std::move(video_capture_provider))"];
"1000124" [label="(Call,browser_content_client_ =\n        std::make_unique<TestBrowserClient>(media_observer_.get()))"];
"1000125" [label="(Identifier,browser_content_client_)"];
"1000128" [label="(Call,TestBrowserClient>(media_observer_.get()))"];
"1000129" [label="(Identifier,TestBrowserClient)"];
"1000130" [label="(Call,media_observer_.get())"];
"1000126" [label="(Call,std::make_unique<TestBrowserClient>(media_observer_.get()))"];
"1000127" [label="(Identifier,std::make_unique)"];
"1000132" [label="(Call,browser_content_client_.get())"];
"1000131" [label="(Call,SetBrowserClientForTesting(browser_content_client_.get()))"];
"1000133" [label="(Call,base::RunLoop().RunUntilIdle())"];
"1000134" [label="(Block,)"];
"1000101" [label="(Block,)"];
"1000135" [label="(Call,std::vector<media::VideoCaptureDeviceInfo> stub_results)"];
"1000136" [label="(Identifier,std::vector)"];
"1000137" [label="(Call,media::VideoCaptureDeviceInfo> stub_results)"];
"1000138" [label="(Identifier,media::VideoCaptureDeviceInfo)"];
"1000139" [label="(Identifier,stub_results)"];
"1000140" [label="(Call,base::ResetAndReturn(&result_callback).Run(stub_results))"];
"1000141" [label="(Identifier,stub_results)"];
"1000102" [label="(Call,audio_system_ =\n        std::make_unique<media::AudioSystemImpl>(audio_manager_.get()))"];
"1000103" [label="(Identifier,audio_system_)"];
"1000106" [label="(Call,media::AudioSystemImpl>(audio_manager_.get()))"];
"1000107" [label="(Identifier,media::AudioSystemImpl)"];
"1000108" [label="(Call,audio_manager_.get())"];
"1000104" [label="(Call,std::make_unique<media::AudioSystemImpl>(audio_manager_.get()))"];
"1000105" [label="(Identifier,std::make_unique)"];
"1000111" [label="(Call,video_capture_provider.get())"];
"1000109" [label="(Call,video_capture_provider_ = video_capture_provider.get())"];
"1000110" [label="(Identifier,video_capture_provider_)"];
"1000114" [label="(Call,std::make_unique<MediaStreamManager>(\n         audio_system_.get(), audio_manager_->GetTaskRunner(),\n         std::move(video_capture_provider)))"];
"1000115" [label="(Identifier,std::make_unique)"];
"1000116" [label="(Call,MediaStreamManager>(\n         audio_system_.get(), audio_manager_->GetTaskRunner(),\n         std::move(video_capture_provider)))"];
"1000117" [label="(Identifier,MediaStreamManager)"];
"1000112" [label="(Call,media_stream_manager_ = std::make_unique<MediaStreamManager>(\n         audio_system_.get(), audio_manager_->GetTaskRunner(),\n         std::move(video_capture_provider)))"];
"1000113" [label="(Identifier,media_stream_manager_)"];
"1000120" [label="(Block,)"];
"1000121" [label="(Call,audio_manager_->GetTaskRunner())"];
"1000118" [label="(Block,)"];
"1000119" [label="(Call,audio_system_.get())"];
"1000142" -> "1000100"  [label="AST: "];
"1000142" -> "1000140"  [label="CFG: "];
"1000116" -> "1000142"  [label="DDG: MediaStreamManager"];
"1000124" -> "1000142"  [label="DDG: browser_content_client_"];
"1000124" -> "1000142"  [label="DDG: std::make_unique<TestBrowserClient>(media_observer_.get())"];
"1000106" -> "1000142"  [label="DDG: audio_manager_.get()"];
"1000106" -> "1000142"  [label="DDG: media::AudioSystemImpl"];
"1000102" -> "1000142"  [label="DDG: std::make_unique<media::AudioSystemImpl>(audio_manager_.get())"];
"1000102" -> "1000142"  [label="DDG: audio_system_"];
"1000112" -> "1000142"  [label="DDG: std::make_unique<MediaStreamManager>(\n         audio_system_.get(), audio_manager_->GetTaskRunner(),\n         std::move(video_capture_provider))"];
"1000112" -> "1000142"  [label="DDG: media_stream_manager_"];
"1000140" -> "1000142"  [label="DDG: base::ResetAndReturn(&result_callback).Run(stub_results)"];
"1000140" -> "1000142"  [label="DDG: stub_results"];
"1000121" -> "1000142"  [label="DDG: audio_manager_->GetTaskRunner()"];
"1000126" -> "1000142"  [label="DDG: std::make_unique"];
"1000126" -> "1000142"  [label="DDG: TestBrowserClient>(media_observer_.get())"];
"1000119" -> "1000142"  [label="DDG: audio_system_.get()"];
"1000128" -> "1000142"  [label="DDG: media_observer_.get()"];
"1000128" -> "1000142"  [label="DDG: TestBrowserClient"];
"1000122" -> "1000142"  [label="DDG: video_capture_provider"];
"1000122" -> "1000142"  [label="DDG: std::move(video_capture_provider)"];
"1000131" -> "1000142"  [label="DDG: browser_content_client_.get()"];
"1000131" -> "1000142"  [label="DDG: SetBrowserClientForTesting(browser_content_client_.get())"];
"1000133" -> "1000142"  [label="DDG: base::RunLoop().RunUntilIdle()"];
"1000135" -> "1000142"  [label="DDG: std::vector<media::VideoCaptureDeviceInfo> stub_results"];
"1000135" -> "1000142"  [label="DDG: std::vector"];
"1000135" -> "1000142"  [label="DDG: media::VideoCaptureDeviceInfo> stub_results"];
"1000109" -> "1000142"  [label="DDG: video_capture_provider_"];
"1000109" -> "1000142"  [label="DDG: video_capture_provider.get()"];
"1000137" -> "1000142"  [label="DDG: media::VideoCaptureDeviceInfo"];
"1000114" -> "1000142"  [label="DDG: MediaStreamManager>(\n         audio_system_.get(), audio_manager_->GetTaskRunner(),\n         std::move(video_capture_provider))"];
"1000104" -> "1000142"  [label="DDG: media::AudioSystemImpl>(audio_manager_.get())"];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000121"  [label="CFG: "];
"1000122" -> "1000123"  [label="CFG: "];
"1000122" -> "1000120"  [label="AST: "];
"1000122" -> "1000123"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000116" -> "1000122"  [label="CFG: "];
"1000122" -> "1000142"  [label="DDG: video_capture_provider"];
"1000122" -> "1000142"  [label="DDG: std::move(video_capture_provider)"];
"1000124" -> "1000101"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000132" -> "1000124"  [label="CFG: "];
"1000124" -> "1000142"  [label="DDG: browser_content_client_"];
"1000124" -> "1000142"  [label="DDG: std::make_unique<TestBrowserClient>(media_observer_.get())"];
"1000126" -> "1000124"  [label="DDG: std::make_unique"];
"1000126" -> "1000124"  [label="DDG: TestBrowserClient>(media_observer_.get())"];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000112"  [label="CFG: "];
"1000127" -> "1000125"  [label="CFG: "];
"1000128" -> "1000126"  [label="AST: "];
"1000128" -> "1000130"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000128"  [label="AST: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000128" -> "1000142"  [label="DDG: media_observer_.get()"];
"1000128" -> "1000142"  [label="DDG: TestBrowserClient"];
"1000128" -> "1000126"  [label="DDG: TestBrowserClient"];
"1000128" -> "1000126"  [label="DDG: media_observer_.get()"];
"1000129" -> "1000128"  [label="AST: "];
"1000129" -> "1000127"  [label="CFG: "];
"1000130" -> "1000129"  [label="CFG: "];
"1000130" -> "1000128"  [label="AST: "];
"1000130" -> "1000129"  [label="CFG: "];
"1000128" -> "1000130"  [label="CFG: "];
"1000126" -> "1000124"  [label="AST: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000128" -> "1000126"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000126" -> "1000142"  [label="DDG: std::make_unique"];
"1000126" -> "1000142"  [label="DDG: TestBrowserClient>(media_observer_.get())"];
"1000126" -> "1000124"  [label="DDG: std::make_unique"];
"1000126" -> "1000124"  [label="DDG: TestBrowserClient>(media_observer_.get())"];
"1000114" -> "1000126"  [label="DDG: std::make_unique"];
"1000128" -> "1000126"  [label="DDG: TestBrowserClient"];
"1000128" -> "1000126"  [label="DDG: media_observer_.get()"];
"1000127" -> "1000126"  [label="AST: "];
"1000127" -> "1000125"  [label="CFG: "];
"1000129" -> "1000127"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000124"  [label="CFG: "];
"1000131" -> "1000132"  [label="CFG: "];
"1000131" -> "1000101"  [label="AST: "];
"1000131" -> "1000132"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="CFG: "];
"1000131" -> "1000142"  [label="DDG: browser_content_client_.get()"];
"1000131" -> "1000142"  [label="DDG: SetBrowserClientForTesting(browser_content_client_.get())"];
"1000133" -> "1000101"  [label="AST: "];
"1000133" -> "1000131"  [label="CFG: "];
"1000136" -> "1000133"  [label="CFG: "];
"1000133" -> "1000142"  [label="DDG: base::RunLoop().RunUntilIdle()"];
"1000134" -> "1000101"  [label="AST: "];
"1000135" -> "1000134"  [label="AST: "];
"1000140" -> "1000134"  [label="AST: "];
"1000101" -> "1000100"  [label="AST: "];
"1000102" -> "1000101"  [label="AST: "];
"1000109" -> "1000101"  [label="AST: "];
"1000112" -> "1000101"  [label="AST: "];
"1000124" -> "1000101"  [label="AST: "];
"1000131" -> "1000101"  [label="AST: "];
"1000133" -> "1000101"  [label="AST: "];
"1000134" -> "1000101"  [label="AST: "];
"1000135" -> "1000134"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000141" -> "1000135"  [label="CFG: "];
"1000135" -> "1000142"  [label="DDG: std::vector<media::VideoCaptureDeviceInfo> stub_results"];
"1000135" -> "1000142"  [label="DDG: std::vector"];
"1000135" -> "1000142"  [label="DDG: media::VideoCaptureDeviceInfo> stub_results"];
"1000137" -> "1000135"  [label="DDG: media::VideoCaptureDeviceInfo"];
"1000137" -> "1000135"  [label="DDG: stub_results"];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000133"  [label="CFG: "];
"1000138" -> "1000136"  [label="CFG: "];
"1000137" -> "1000135"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000137" -> "1000142"  [label="DDG: media::VideoCaptureDeviceInfo"];
"1000137" -> "1000135"  [label="DDG: media::VideoCaptureDeviceInfo"];
"1000137" -> "1000135"  [label="DDG: stub_results"];
"1000137" -> "1000140"  [label="DDG: stub_results"];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000136"  [label="CFG: "];
"1000139" -> "1000138"  [label="CFG: "];
"1000139" -> "1000137"  [label="AST: "];
"1000139" -> "1000138"  [label="CFG: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000140" -> "1000134"  [label="AST: "];
"1000140" -> "1000141"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000142" -> "1000140"  [label="CFG: "];
"1000140" -> "1000142"  [label="DDG: base::ResetAndReturn(&result_callback).Run(stub_results)"];
"1000140" -> "1000142"  [label="DDG: stub_results"];
"1000137" -> "1000140"  [label="DDG: stub_results"];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000135"  [label="CFG: "];
"1000140" -> "1000141"  [label="CFG: "];
"1000102" -> "1000101"  [label="AST: "];
"1000102" -> "1000104"  [label="CFG: "];
"1000103" -> "1000102"  [label="AST: "];
"1000104" -> "1000102"  [label="AST: "];
"1000110" -> "1000102"  [label="CFG: "];
"1000102" -> "1000142"  [label="DDG: std::make_unique<media::AudioSystemImpl>(audio_manager_.get())"];
"1000102" -> "1000142"  [label="DDG: audio_system_"];
"1000104" -> "1000102"  [label="DDG: std::make_unique"];
"1000104" -> "1000102"  [label="DDG: media::AudioSystemImpl>(audio_manager_.get())"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000100"  [label="CFG: "];
"1000105" -> "1000103"  [label="CFG: "];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000108" -> "1000106"  [label="AST: "];
"1000104" -> "1000106"  [label="CFG: "];
"1000106" -> "1000142"  [label="DDG: audio_manager_.get()"];
"1000106" -> "1000142"  [label="DDG: media::AudioSystemImpl"];
"1000106" -> "1000104"  [label="DDG: media::AudioSystemImpl"];
"1000106" -> "1000104"  [label="DDG: audio_manager_.get()"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000105"  [label="CFG: "];
"1000108" -> "1000107"  [label="CFG: "];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000107"  [label="CFG: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1000106"  [label="CFG: "];
"1000105" -> "1000104"  [label="AST: "];
"1000106" -> "1000104"  [label="AST: "];
"1000102" -> "1000104"  [label="CFG: "];
"1000104" -> "1000142"  [label="DDG: media::AudioSystemImpl>(audio_manager_.get())"];
"1000104" -> "1000102"  [label="DDG: std::make_unique"];
"1000104" -> "1000102"  [label="DDG: media::AudioSystemImpl>(audio_manager_.get())"];
"1000106" -> "1000104"  [label="DDG: media::AudioSystemImpl"];
"1000106" -> "1000104"  [label="DDG: audio_manager_.get()"];
"1000104" -> "1000114"  [label="DDG: std::make_unique"];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000103"  [label="CFG: "];
"1000107" -> "1000105"  [label="CFG: "];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000109" -> "1000101"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000113" -> "1000109"  [label="CFG: "];
"1000109" -> "1000142"  [label="DDG: video_capture_provider_"];
"1000109" -> "1000142"  [label="DDG: video_capture_provider.get()"];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000102"  [label="CFG: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000114" -> "1000112"  [label="AST: "];
"1000114" -> "1000116"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000114" -> "1000142"  [label="DDG: MediaStreamManager>(\n         audio_system_.get(), audio_manager_->GetTaskRunner(),\n         std::move(video_capture_provider))"];
"1000114" -> "1000112"  [label="DDG: std::make_unique"];
"1000114" -> "1000112"  [label="DDG: MediaStreamManager>(\n         audio_system_.get(), audio_manager_->GetTaskRunner(),\n         std::move(video_capture_provider))"];
"1000104" -> "1000114"  [label="DDG: std::make_unique"];
"1000116" -> "1000114"  [label="DDG: MediaStreamManager"];
"1000114" -> "1000126"  [label="DDG: std::make_unique"];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000113"  [label="CFG: "];
"1000117" -> "1000115"  [label="CFG: "];
"1000116" -> "1000114"  [label="AST: "];
"1000116" -> "1000122"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000114" -> "1000116"  [label="CFG: "];
"1000116" -> "1000142"  [label="DDG: MediaStreamManager"];
"1000116" -> "1000114"  [label="DDG: MediaStreamManager"];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1000115"  [label="CFG: "];
"1000119" -> "1000117"  [label="CFG: "];
"1000112" -> "1000101"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000125" -> "1000112"  [label="CFG: "];
"1000112" -> "1000142"  [label="DDG: std::make_unique<MediaStreamManager>(\n         audio_system_.get(), audio_manager_->GetTaskRunner(),\n         std::move(video_capture_provider))"];
"1000112" -> "1000142"  [label="DDG: media_stream_manager_"];
"1000114" -> "1000112"  [label="DDG: std::make_unique"];
"1000114" -> "1000112"  [label="DDG: MediaStreamManager>(\n         audio_system_.get(), audio_manager_->GetTaskRunner(),\n         std::move(video_capture_provider))"];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000109"  [label="CFG: "];
"1000115" -> "1000113"  [label="CFG: "];
"1000120" -> "1000118"  [label="AST: "];
"1000121" -> "1000120"  [label="AST: "];
"1000122" -> "1000120"  [label="AST: "];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000119"  [label="CFG: "];
"1000123" -> "1000121"  [label="CFG: "];
"1000121" -> "1000142"  [label="DDG: audio_manager_->GetTaskRunner()"];
"1000118" -> "1000116"  [label="AST: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="AST: "];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000117"  [label="CFG: "];
"1000121" -> "1000119"  [label="CFG: "];
"1000119" -> "1000142"  [label="DDG: audio_system_.get()"];
}
