digraph "1_Chrome_33827275411b33371e7bb750cce20f11de85002d_11" {
"1000143" [label="(MethodReturn,void)"];
"1000101" [label="(MethodParameterIn,Node& node_to_be_removed)"];
"1000184" [label="(MethodParameterOut,Node& node_to_be_removed)"];
"1000102" [label="(Block,)"];
"1000134" [label="(Identifier,old_base)"];
"1000130" [label="(ControlStructure,if (new_base == old_base && new_extent == old_extent))"];
"1000135" [label="(Call,new_extent == old_extent)"];
"1000136" [label="(Identifier,new_extent)"];
"1000137" [label="(Identifier,old_extent)"];
"1000131" [label="(Call,new_base == old_base && new_extent == old_extent)"];
"1000132" [label="(Call,new_base == old_base)"];
"1000133" [label="(Identifier,new_base)"];
"1000138" [label="(Return,return;)"];
"1000141" [label="(Call,SelectionInDOMTree::Builder()\n                    .SetBaseAndExtent(new_base, new_extent)\n                   .SetIsHandleVisible(selection_.IsHandleVisible())\n                    .Build())"];
"1000139" [label="(Call,selection_ = SelectionInDOMTree::Builder()\n                    .SetBaseAndExtent(new_base, new_extent)\n                   .SetIsHandleVisible(selection_.IsHandleVisible())\n                    .Build())"];
"1000140" [label="(Identifier,selection_)"];
"1000142" [label="(Call,MarkCacheDirty())"];
"1000103" [label="(ControlStructure,if (selection_.IsNone()))"];
"1000104" [label="(Call,selection_.IsNone())"];
"1000105" [label="(Return,return;)"];
"1000107" [label="(Call,old_base = selection_.base_)"];
"1000108" [label="(Identifier,old_base)"];
"1000109" [label="(Call,selection_.base_)"];
"1000110" [label="(Identifier,selection_)"];
"1000111" [label="(FieldIdentifier,base_)"];
"1000113" [label="(Call,old_extent = selection_.extent_)"];
"1000114" [label="(Identifier,old_extent)"];
"1000115" [label="(Call,selection_.extent_)"];
"1000116" [label="(Identifier,selection_)"];
"1000117" [label="(FieldIdentifier,extent_)"];
"1000119" [label="(Call,& new_base =\n      ComputePositionForNodeRemoval(old_base, node_to_be_removed))"];
"1000120" [label="(Identifier,new_base)"];
"1000122" [label="(Identifier,old_base)"];
"1000123" [label="(Identifier,node_to_be_removed)"];
"1000121" [label="(Call,ComputePositionForNodeRemoval(old_base, node_to_be_removed))"];
"1000125" [label="(Call,& new_extent =\n      ComputePositionForNodeRemoval(old_extent, node_to_be_removed))"];
"1000126" [label="(Identifier,new_extent)"];
"1000128" [label="(Identifier,old_extent)"];
"1000129" [label="(Identifier,node_to_be_removed)"];
"1000127" [label="(Call,ComputePositionForNodeRemoval(old_extent, node_to_be_removed))"];
"1000143" -> "1000100"  [label="AST: "];
"1000143" -> "1000105"  [label="CFG: "];
"1000143" -> "1000138"  [label="CFG: "];
"1000143" -> "1000142"  [label="CFG: "];
"1000125" -> "1000143"  [label="DDG: new_extent"];
"1000125" -> "1000143"  [label="DDG: ComputePositionForNodeRemoval(old_extent, node_to_be_removed)"];
"1000142" -> "1000143"  [label="DDG: MarkCacheDirty()"];
"1000104" -> "1000143"  [label="DDG: selection_.IsNone()"];
"1000139" -> "1000143"  [label="DDG: selection_"];
"1000139" -> "1000143"  [label="DDG: SelectionInDOMTree::Builder()\n                    .SetBaseAndExtent(new_base, new_extent)\n                   .SetIsHandleVisible(selection_.IsHandleVisible())\n                    .Build()"];
"1000132" -> "1000143"  [label="DDG: new_base"];
"1000132" -> "1000143"  [label="DDG: old_base"];
"1000135" -> "1000143"  [label="DDG: new_extent"];
"1000135" -> "1000143"  [label="DDG: old_extent"];
"1000127" -> "1000143"  [label="DDG: old_extent"];
"1000127" -> "1000143"  [label="DDG: node_to_be_removed"];
"1000131" -> "1000143"  [label="DDG: new_base == old_base && new_extent == old_extent"];
"1000131" -> "1000143"  [label="DDG: new_base == old_base"];
"1000131" -> "1000143"  [label="DDG: new_extent == old_extent"];
"1000113" -> "1000143"  [label="DDG: selection_.extent_"];
"1000119" -> "1000143"  [label="DDG: ComputePositionForNodeRemoval(old_base, node_to_be_removed)"];
"1000101" -> "1000143"  [label="DDG: node_to_be_removed"];
"1000107" -> "1000143"  [label="DDG: selection_.base_"];
"1000138" -> "1000143"  [label="DDG: <RET>"];
"1000105" -> "1000143"  [label="DDG: <RET>"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000143"  [label="DDG: node_to_be_removed"];
"1000101" -> "1000121"  [label="DDG: node_to_be_removed"];
"1000101" -> "1000127"  [label="DDG: node_to_be_removed"];
"1000184" -> "1000100"  [label="AST: "];
"1000102" -> "1000100"  [label="AST: "];
"1000103" -> "1000102"  [label="AST: "];
"1000106" -> "1000102"  [label="AST: "];
"1000107" -> "1000102"  [label="AST: "];
"1000112" -> "1000102"  [label="AST: "];
"1000113" -> "1000102"  [label="AST: "];
"1000118" -> "1000102"  [label="AST: "];
"1000119" -> "1000102"  [label="AST: "];
"1000124" -> "1000102"  [label="AST: "];
"1000125" -> "1000102"  [label="AST: "];
"1000130" -> "1000102"  [label="AST: "];
"1000139" -> "1000102"  [label="AST: "];
"1000142" -> "1000102"  [label="AST: "];
"1000134" -> "1000132"  [label="AST: "];
"1000134" -> "1000133"  [label="CFG: "];
"1000132" -> "1000134"  [label="CFG: "];
"1000130" -> "1000102"  [label="AST: "];
"1000131" -> "1000130"  [label="AST: "];
"1000138" -> "1000130"  [label="AST: "];
"1000135" -> "1000131"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000131" -> "1000135"  [label="CFG: "];
"1000135" -> "1000143"  [label="DDG: new_extent"];
"1000135" -> "1000143"  [label="DDG: old_extent"];
"1000135" -> "1000131"  [label="DDG: new_extent"];
"1000135" -> "1000131"  [label="DDG: old_extent"];
"1000125" -> "1000135"  [label="DDG: new_extent"];
"1000127" -> "1000135"  [label="DDG: old_extent"];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000132"  [label="CFG: "];
"1000137" -> "1000136"  [label="CFG: "];
"1000137" -> "1000135"  [label="AST: "];
"1000137" -> "1000136"  [label="CFG: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000132"  [label="CFG: "];
"1000131" -> "1000135"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000135" -> "1000131"  [label="AST: "];
"1000138" -> "1000131"  [label="CFG: "];
"1000140" -> "1000131"  [label="CFG: "];
"1000131" -> "1000143"  [label="DDG: new_base == old_base && new_extent == old_extent"];
"1000131" -> "1000143"  [label="DDG: new_base == old_base"];
"1000131" -> "1000143"  [label="DDG: new_extent == old_extent"];
"1000132" -> "1000131"  [label="DDG: new_base"];
"1000132" -> "1000131"  [label="DDG: old_base"];
"1000135" -> "1000131"  [label="DDG: new_extent"];
"1000135" -> "1000131"  [label="DDG: old_extent"];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000134"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="AST: "];
"1000136" -> "1000132"  [label="CFG: "];
"1000131" -> "1000132"  [label="CFG: "];
"1000132" -> "1000143"  [label="DDG: new_base"];
"1000132" -> "1000143"  [label="DDG: old_base"];
"1000132" -> "1000131"  [label="DDG: new_base"];
"1000132" -> "1000131"  [label="DDG: old_base"];
"1000119" -> "1000132"  [label="DDG: new_base"];
"1000121" -> "1000132"  [label="DDG: old_base"];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000125"  [label="CFG: "];
"1000134" -> "1000133"  [label="CFG: "];
"1000138" -> "1000130"  [label="AST: "];
"1000138" -> "1000131"  [label="CFG: "];
"1000143" -> "1000138"  [label="CFG: "];
"1000138" -> "1000143"  [label="DDG: <RET>"];
"1000141" -> "1000139"  [label="AST: "];
"1000141" -> "1000140"  [label="CFG: "];
"1000139" -> "1000141"  [label="CFG: "];
"1000139" -> "1000102"  [label="AST: "];
"1000139" -> "1000141"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="AST: "];
"1000142" -> "1000139"  [label="CFG: "];
"1000139" -> "1000143"  [label="DDG: selection_"];
"1000139" -> "1000143"  [label="DDG: SelectionInDOMTree::Builder()\n                    .SetBaseAndExtent(new_base, new_extent)\n                   .SetIsHandleVisible(selection_.IsHandleVisible())\n                    .Build()"];
"1000140" -> "1000139"  [label="AST: "];
"1000140" -> "1000131"  [label="CFG: "];
"1000141" -> "1000140"  [label="CFG: "];
"1000142" -> "1000102"  [label="AST: "];
"1000142" -> "1000139"  [label="CFG: "];
"1000143" -> "1000142"  [label="CFG: "];
"1000142" -> "1000143"  [label="DDG: MarkCacheDirty()"];
"1000103" -> "1000102"  [label="AST: "];
"1000104" -> "1000103"  [label="AST: "];
"1000105" -> "1000103"  [label="AST: "];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000100"  [label="CFG: "];
"1000105" -> "1000104"  [label="CFG: "];
"1000108" -> "1000104"  [label="CFG: "];
"1000104" -> "1000143"  [label="DDG: selection_.IsNone()"];
"1000105" -> "1000103"  [label="AST: "];
"1000105" -> "1000104"  [label="CFG: "];
"1000143" -> "1000105"  [label="CFG: "];
"1000105" -> "1000143"  [label="DDG: <RET>"];
"1000107" -> "1000102"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000114" -> "1000107"  [label="CFG: "];
"1000107" -> "1000143"  [label="DDG: selection_.base_"];
"1000107" -> "1000121"  [label="DDG: old_base"];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000104"  [label="CFG: "];
"1000110" -> "1000108"  [label="CFG: "];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000108"  [label="CFG: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000113" -> "1000102"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000120" -> "1000113"  [label="CFG: "];
"1000113" -> "1000143"  [label="DDG: selection_.extent_"];
"1000113" -> "1000127"  [label="DDG: old_extent"];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000107"  [label="CFG: "];
"1000116" -> "1000114"  [label="CFG: "];
"1000115" -> "1000113"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000114"  [label="CFG: "];
"1000117" -> "1000116"  [label="CFG: "];
"1000117" -> "1000115"  [label="AST: "];
"1000117" -> "1000116"  [label="CFG: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000119" -> "1000102"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000126" -> "1000119"  [label="CFG: "];
"1000119" -> "1000143"  [label="DDG: ComputePositionForNodeRemoval(old_base, node_to_be_removed)"];
"1000121" -> "1000119"  [label="DDG: old_base"];
"1000121" -> "1000119"  [label="DDG: node_to_be_removed"];
"1000119" -> "1000132"  [label="DDG: new_base"];
"1000120" -> "1000119"  [label="AST: "];
"1000120" -> "1000113"  [label="CFG: "];
"1000122" -> "1000120"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000120"  [label="CFG: "];
"1000123" -> "1000122"  [label="CFG: "];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000122"  [label="CFG: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000121" -> "1000119"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000121" -> "1000119"  [label="DDG: old_base"];
"1000121" -> "1000119"  [label="DDG: node_to_be_removed"];
"1000107" -> "1000121"  [label="DDG: old_base"];
"1000101" -> "1000121"  [label="DDG: node_to_be_removed"];
"1000121" -> "1000127"  [label="DDG: node_to_be_removed"];
"1000121" -> "1000132"  [label="DDG: old_base"];
"1000125" -> "1000102"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000133" -> "1000125"  [label="CFG: "];
"1000125" -> "1000143"  [label="DDG: new_extent"];
"1000125" -> "1000143"  [label="DDG: ComputePositionForNodeRemoval(old_extent, node_to_be_removed)"];
"1000127" -> "1000125"  [label="DDG: old_extent"];
"1000127" -> "1000125"  [label="DDG: node_to_be_removed"];
"1000125" -> "1000135"  [label="DDG: new_extent"];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000119"  [label="CFG: "];
"1000128" -> "1000126"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000126"  [label="CFG: "];
"1000129" -> "1000128"  [label="CFG: "];
"1000129" -> "1000127"  [label="AST: "];
"1000129" -> "1000128"  [label="CFG: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000127" -> "1000143"  [label="DDG: old_extent"];
"1000127" -> "1000143"  [label="DDG: node_to_be_removed"];
"1000127" -> "1000125"  [label="DDG: old_extent"];
"1000127" -> "1000125"  [label="DDG: node_to_be_removed"];
"1000113" -> "1000127"  [label="DDG: old_extent"];
"1000121" -> "1000127"  [label="DDG: node_to_be_removed"];
"1000101" -> "1000127"  [label="DDG: node_to_be_removed"];
"1000127" -> "1000135"  [label="DDG: old_extent"];
}
