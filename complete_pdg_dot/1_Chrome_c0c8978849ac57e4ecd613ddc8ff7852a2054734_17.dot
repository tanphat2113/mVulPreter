digraph "1_Chrome_c0c8978849ac57e4ecd613ddc8ff7852a2054734_17" {
"1000135" [label="(MethodReturn,void)"];
"1000121" [label="(Call,OrientationEulerAnglesFusionAlgorithmUsingQuaternion>(\n            false /* absolute */))"];
"1000122" [label="(Identifier,OrientationEulerAnglesFusionAlgorithmUsingQuaternion)"];
"1000119" [label="(Call,std::make_unique<OrientationEulerAnglesFusionAlgorithmUsingQuaternion>(\n            false /* absolute */))"];
"1000120" [label="(Identifier,std::make_unique)"];
"1000123" [label="(Identifier,false)"];
"1000125" [label="(Call,std::move(mapping))"];
"1000124" [label="(Call,PlatformSensorFusion::Create(std::move(mapping), this,\n                                  std::move(sensor_fusion_algorithm), callback))"];
"1000126" [label="(Identifier,mapping)"];
"1000127" [label="(Identifier,this)"];
"1000128" [label="(Call,std::move(sensor_fusion_algorithm))"];
"1000129" [label="(Identifier,sensor_fusion_algorithm)"];
"1000130" [label="(Identifier,callback)"];
"1000132" [label="(Block,)"];
"1000131" [label="(ControlStructure,else)"];
"1000134" [label="(Identifier,nullptr)"];
"1000133" [label="(Call,callback.Run(nullptr))"];
"1000102" [label="(MethodParameterIn,JNIEnv* env)"];
"1000184" [label="(MethodParameterOut,JNIEnv* env)"];
"1000103" [label="(MethodParameterIn,mojo::ScopedSharedBufferMapping mapping)"];
"1000185" [label="(MethodParameterOut,mojo::ScopedSharedBufferMapping mapping)"];
"1000105" [label="(Block,)"];
"1000104" [label="(MethodParameterIn,const CreateSensorCallback& callback)"];
"1000186" [label="(MethodParameterOut,const CreateSensorCallback& callback)"];
"1000109" [label="(Call,Java_PlatformSensorProvider_hasSensorType(\n           env, j_object_,\n          static_cast<jint>(\n              mojom::SensorType::RELATIVE_ORIENTATION_QUATERNION)))"];
"1000106" [label="(ControlStructure,if (static_cast<bool>(Java_PlatformSensorProvider_hasSensorType(\n           env, j_object_,\n          static_cast<jint>(\n              mojom::SensorType::RELATIVE_ORIENTATION_QUATERNION)))))"];
"1000107" [label="(Call,static_cast<bool>(Java_PlatformSensorProvider_hasSensorType(\n           env, j_object_,\n          static_cast<jint>(\n              mojom::SensorType::RELATIVE_ORIENTATION_QUATERNION))))"];
"1000110" [label="(Identifier,env)"];
"1000111" [label="(Identifier,j_object_)"];
"1000112" [label="(Call,static_cast<jint>(\n              mojom::SensorType::RELATIVE_ORIENTATION_QUATERNION))"];
"1000114" [label="(Identifier,mojom::SensorType::RELATIVE_ORIENTATION_QUATERNION)"];
"1000115" [label="(Block,)"];
"1000117" [label="(Call,sensor_fusion_algorithm =\n        std::make_unique<OrientationEulerAnglesFusionAlgorithmUsingQuaternion>(\n            false /* absolute */))"];
"1000118" [label="(Identifier,sensor_fusion_algorithm)"];
"1000135" -> "1000101"  [label="AST: "];
"1000135" -> "1000124"  [label="CFG: "];
"1000135" -> "1000133"  [label="CFG: "];
"1000124" -> "1000135"  [label="DDG: std::move(mapping)"];
"1000124" -> "1000135"  [label="DDG: this"];
"1000124" -> "1000135"  [label="DDG: std::move(sensor_fusion_algorithm)"];
"1000124" -> "1000135"  [label="DDG: PlatformSensorFusion::Create(std::move(mapping), this,\n                                  std::move(sensor_fusion_algorithm), callback)"];
"1000124" -> "1000135"  [label="DDG: callback"];
"1000107" -> "1000135"  [label="DDG: static_cast<bool>(Java_PlatformSensorProvider_hasSensorType(\n           env, j_object_,\n          static_cast<jint>(\n              mojom::SensorType::RELATIVE_ORIENTATION_QUATERNION)))"];
"1000107" -> "1000135"  [label="DDG: Java_PlatformSensorProvider_hasSensorType(\n           env, j_object_,\n          static_cast<jint>(\n              mojom::SensorType::RELATIVE_ORIENTATION_QUATERNION))"];
"1000104" -> "1000135"  [label="DDG: callback"];
"1000112" -> "1000135"  [label="DDG: mojom::SensorType::RELATIVE_ORIENTATION_QUATERNION"];
"1000121" -> "1000135"  [label="DDG: false"];
"1000121" -> "1000135"  [label="DDG: OrientationEulerAnglesFusionAlgorithmUsingQuaternion"];
"1000119" -> "1000135"  [label="DDG: OrientationEulerAnglesFusionAlgorithmUsingQuaternion>(\n            false /* absolute */)"];
"1000119" -> "1000135"  [label="DDG: std::make_unique"];
"1000117" -> "1000135"  [label="DDG: std::make_unique<OrientationEulerAnglesFusionAlgorithmUsingQuaternion>(\n            false /* absolute */)"];
"1000109" -> "1000135"  [label="DDG: j_object_"];
"1000109" -> "1000135"  [label="DDG: static_cast<jint>(\n              mojom::SensorType::RELATIVE_ORIENTATION_QUATERNION)"];
"1000109" -> "1000135"  [label="DDG: env"];
"1000125" -> "1000135"  [label="DDG: mapping"];
"1000128" -> "1000135"  [label="DDG: sensor_fusion_algorithm"];
"1000103" -> "1000135"  [label="DDG: mapping"];
"1000133" -> "1000135"  [label="DDG: nullptr"];
"1000133" -> "1000135"  [label="DDG: callback.Run(nullptr)"];
"1000102" -> "1000135"  [label="DDG: env"];
"1000121" -> "1000119"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000121" -> "1000135"  [label="DDG: false"];
"1000121" -> "1000135"  [label="DDG: OrientationEulerAnglesFusionAlgorithmUsingQuaternion"];
"1000121" -> "1000119"  [label="DDG: OrientationEulerAnglesFusionAlgorithmUsingQuaternion"];
"1000121" -> "1000119"  [label="DDG: false"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000120"  [label="CFG: "];
"1000123" -> "1000122"  [label="CFG: "];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000119" -> "1000135"  [label="DDG: OrientationEulerAnglesFusionAlgorithmUsingQuaternion>(\n            false /* absolute */)"];
"1000119" -> "1000135"  [label="DDG: std::make_unique"];
"1000119" -> "1000117"  [label="DDG: std::make_unique"];
"1000119" -> "1000117"  [label="DDG: OrientationEulerAnglesFusionAlgorithmUsingQuaternion>(\n            false /* absolute */)"];
"1000121" -> "1000119"  [label="DDG: OrientationEulerAnglesFusionAlgorithmUsingQuaternion"];
"1000121" -> "1000119"  [label="DDG: false"];
"1000120" -> "1000119"  [label="AST: "];
"1000120" -> "1000118"  [label="CFG: "];
"1000122" -> "1000120"  [label="CFG: "];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000122"  [label="CFG: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000126"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="CFG: "];
"1000125" -> "1000135"  [label="DDG: mapping"];
"1000125" -> "1000124"  [label="DDG: mapping"];
"1000103" -> "1000125"  [label="DDG: mapping"];
"1000124" -> "1000115"  [label="AST: "];
"1000124" -> "1000130"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000127" -> "1000124"  [label="AST: "];
"1000128" -> "1000124"  [label="AST: "];
"1000130" -> "1000124"  [label="AST: "];
"1000135" -> "1000124"  [label="CFG: "];
"1000124" -> "1000135"  [label="DDG: std::move(mapping)"];
"1000124" -> "1000135"  [label="DDG: this"];
"1000124" -> "1000135"  [label="DDG: std::move(sensor_fusion_algorithm)"];
"1000124" -> "1000135"  [label="DDG: PlatformSensorFusion::Create(std::move(mapping), this,\n                                  std::move(sensor_fusion_algorithm), callback)"];
"1000124" -> "1000135"  [label="DDG: callback"];
"1000125" -> "1000124"  [label="DDG: mapping"];
"1000128" -> "1000124"  [label="DDG: sensor_fusion_algorithm"];
"1000104" -> "1000124"  [label="DDG: callback"];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000117"  [label="CFG: "];
"1000125" -> "1000126"  [label="CFG: "];
"1000127" -> "1000124"  [label="AST: "];
"1000127" -> "1000125"  [label="CFG: "];
"1000129" -> "1000127"  [label="CFG: "];
"1000128" -> "1000124"  [label="AST: "];
"1000128" -> "1000129"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000128"  [label="CFG: "];
"1000128" -> "1000135"  [label="DDG: sensor_fusion_algorithm"];
"1000128" -> "1000124"  [label="DDG: sensor_fusion_algorithm"];
"1000117" -> "1000128"  [label="DDG: sensor_fusion_algorithm"];
"1000129" -> "1000128"  [label="AST: "];
"1000129" -> "1000127"  [label="CFG: "];
"1000128" -> "1000129"  [label="CFG: "];
"1000130" -> "1000124"  [label="AST: "];
"1000130" -> "1000128"  [label="CFG: "];
"1000124" -> "1000130"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000132"  [label="AST: "];
"1000131" -> "1000106"  [label="AST: "];
"1000132" -> "1000131"  [label="AST: "];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000107"  [label="CFG: "];
"1000133" -> "1000134"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000134"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="CFG: "];
"1000133" -> "1000135"  [label="DDG: nullptr"];
"1000133" -> "1000135"  [label="DDG: callback.Run(nullptr)"];
"1000102" -> "1000101"  [label="AST: "];
"1000102" -> "1000135"  [label="DDG: env"];
"1000102" -> "1000109"  [label="DDG: env"];
"1000184" -> "1000101"  [label="AST: "];
"1000103" -> "1000101"  [label="AST: "];
"1000103" -> "1000135"  [label="DDG: mapping"];
"1000103" -> "1000125"  [label="DDG: mapping"];
"1000185" -> "1000101"  [label="AST: "];
"1000105" -> "1000101"  [label="AST: "];
"1000106" -> "1000105"  [label="AST: "];
"1000104" -> "1000101"  [label="AST: "];
"1000104" -> "1000135"  [label="DDG: callback"];
"1000104" -> "1000124"  [label="DDG: callback"];
"1000186" -> "1000101"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000112"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000112" -> "1000109"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000109" -> "1000135"  [label="DDG: j_object_"];
"1000109" -> "1000135"  [label="DDG: static_cast<jint>(\n              mojom::SensorType::RELATIVE_ORIENTATION_QUATERNION)"];
"1000109" -> "1000135"  [label="DDG: env"];
"1000109" -> "1000107"  [label="DDG: env"];
"1000109" -> "1000107"  [label="DDG: j_object_"];
"1000109" -> "1000107"  [label="DDG: static_cast<jint>(\n              mojom::SensorType::RELATIVE_ORIENTATION_QUATERNION)"];
"1000102" -> "1000109"  [label="DDG: env"];
"1000112" -> "1000109"  [label="DDG: mojom::SensorType::RELATIVE_ORIENTATION_QUATERNION"];
"1000106" -> "1000105"  [label="AST: "];
"1000107" -> "1000106"  [label="AST: "];
"1000115" -> "1000106"  [label="AST: "];
"1000131" -> "1000106"  [label="AST: "];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000118" -> "1000107"  [label="CFG: "];
"1000134" -> "1000107"  [label="CFG: "];
"1000107" -> "1000135"  [label="DDG: static_cast<bool>(Java_PlatformSensorProvider_hasSensorType(\n           env, j_object_,\n          static_cast<jint>(\n              mojom::SensorType::RELATIVE_ORIENTATION_QUATERNION)))"];
"1000107" -> "1000135"  [label="DDG: Java_PlatformSensorProvider_hasSensorType(\n           env, j_object_,\n          static_cast<jint>(\n              mojom::SensorType::RELATIVE_ORIENTATION_QUATERNION))"];
"1000109" -> "1000107"  [label="DDG: env"];
"1000109" -> "1000107"  [label="DDG: j_object_"];
"1000109" -> "1000107"  [label="DDG: static_cast<jint>(\n              mojom::SensorType::RELATIVE_ORIENTATION_QUATERNION)"];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000108"  [label="CFG: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000113" -> "1000111"  [label="CFG: "];
"1000112" -> "1000109"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000109" -> "1000112"  [label="CFG: "];
"1000112" -> "1000135"  [label="DDG: mojom::SensorType::RELATIVE_ORIENTATION_QUATERNION"];
"1000112" -> "1000109"  [label="DDG: mojom::SensorType::RELATIVE_ORIENTATION_QUATERNION"];
"1000114" -> "1000112"  [label="AST: "];
"1000114" -> "1000113"  [label="CFG: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000115" -> "1000106"  [label="AST: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000124" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000126" -> "1000117"  [label="CFG: "];
"1000117" -> "1000135"  [label="DDG: std::make_unique<OrientationEulerAnglesFusionAlgorithmUsingQuaternion>(\n            false /* absolute */)"];
"1000119" -> "1000117"  [label="DDG: std::make_unique"];
"1000119" -> "1000117"  [label="DDG: OrientationEulerAnglesFusionAlgorithmUsingQuaternion>(\n            false /* absolute */)"];
"1000117" -> "1000128"  [label="DDG: sensor_fusion_algorithm"];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000107"  [label="CFG: "];
"1000120" -> "1000118"  [label="CFG: "];
}
