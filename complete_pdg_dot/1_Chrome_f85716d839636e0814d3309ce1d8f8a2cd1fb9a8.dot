digraph "1_Chrome_f85716d839636e0814d3309ce1d8f8a2cd1fb9a8" {
"1000136" [label="(MethodReturn,LayoutUnit)"];
"1000121" [label="(Call,single_strip_block_size =\n      NGFragment(space.GetWritingMode(), result->PhysicalFragment())\n          .BlockSize())"];
"1000122" [label="(Identifier,single_strip_block_size)"];
"1000123" [label="(Call,NGFragment(space.GetWritingMode(), result->PhysicalFragment())\n          .BlockSize())"];
"1000125" [label="(Call,block_size = LayoutUnit::FromFloatCeil(\n      single_strip_block_size.ToFloat() / static_cast<float>(column_count)))"];
"1000126" [label="(Identifier,block_size)"];
"1000127" [label="(Call,LayoutUnit::FromFloatCeil(\n      single_strip_block_size.ToFloat() / static_cast<float>(column_count)))"];
"1000130" [label="(Call,static_cast<float>(column_count))"];
"1000128" [label="(Call,single_strip_block_size.ToFloat() / static_cast<float>(column_count))"];
"1000129" [label="(Call,single_strip_block_size.ToFloat())"];
"1000132" [label="(Identifier,column_count)"];
"1000133" [label="(Return,return ConstrainColumnBlockSize(block_size);)"];
"1000135" [label="(Identifier,block_size)"];
"1000134" [label="(Call,ConstrainColumnBlockSize(block_size))"];
"1000101" [label="(MethodParameterIn,const LogicalSize& column_size)"];
"1000189" [label="(MethodParameterOut,const LogicalSize& column_size)"];
"1000103" [label="(Block,)"];
"1000102" [label="(MethodParameterIn,int column_count)"];
"1000190" [label="(MethodParameterOut,int column_count)"];
"1000105" [label="(Call,space = CreateConstraintSpaceForBalancing(column_size))"];
"1000106" [label="(Identifier,space)"];
"1000107" [label="(Call,CreateConstraintSpaceForBalancing(column_size))"];
"1000108" [label="(Identifier,column_size)"];
"1000110" [label="(Call,fragment_geometry =\n      CalculateInitialFragmentGeometry(space, Node()))"];
"1000111" [label="(Identifier,fragment_geometry)"];
"1000113" [label="(Identifier,space)"];
"1000114" [label="(Call,Node())"];
"1000112" [label="(Call,CalculateInitialFragmentGeometry(space, Node()))"];
"1000115" [label="(Block,)"];
"1000117" [label="(Call,result = balancing_algorithm.Layout())"];
"1000118" [label="(Identifier,result)"];
"1000119" [label="(Call,balancing_algorithm.Layout())"];
"1000136" -> "1000100"  [label="AST: "];
"1000136" -> "1000133"  [label="CFG: "];
"1000128" -> "1000136"  [label="DDG: static_cast<float>(column_count)"];
"1000128" -> "1000136"  [label="DDG: single_strip_block_size.ToFloat()"];
"1000107" -> "1000136"  [label="DDG: column_size"];
"1000105" -> "1000136"  [label="DDG: CreateConstraintSpaceForBalancing(column_size)"];
"1000112" -> "1000136"  [label="DDG: Node()"];
"1000112" -> "1000136"  [label="DDG: space"];
"1000125" -> "1000136"  [label="DDG: LayoutUnit::FromFloatCeil(\n      single_strip_block_size.ToFloat() / static_cast<float>(column_count))"];
"1000117" -> "1000136"  [label="DDG: result"];
"1000117" -> "1000136"  [label="DDG: balancing_algorithm.Layout()"];
"1000121" -> "1000136"  [label="DDG: single_strip_block_size"];
"1000121" -> "1000136"  [label="DDG: NGFragment(space.GetWritingMode(), result->PhysicalFragment())\n          .BlockSize()"];
"1000127" -> "1000136"  [label="DDG: single_strip_block_size.ToFloat() / static_cast<float>(column_count)"];
"1000110" -> "1000136"  [label="DDG: fragment_geometry"];
"1000110" -> "1000136"  [label="DDG: CalculateInitialFragmentGeometry(space, Node())"];
"1000130" -> "1000136"  [label="DDG: column_count"];
"1000134" -> "1000136"  [label="DDG: ConstrainColumnBlockSize(block_size)"];
"1000134" -> "1000136"  [label="DDG: block_size"];
"1000102" -> "1000136"  [label="DDG: column_count"];
"1000101" -> "1000136"  [label="DDG: column_size"];
"1000133" -> "1000136"  [label="DDG: <RET>"];
"1000121" -> "1000103"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000126" -> "1000121"  [label="CFG: "];
"1000121" -> "1000136"  [label="DDG: single_strip_block_size"];
"1000121" -> "1000136"  [label="DDG: NGFragment(space.GetWritingMode(), result->PhysicalFragment())\n          .BlockSize()"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000117"  [label="CFG: "];
"1000123" -> "1000122"  [label="CFG: "];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000122"  [label="CFG: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000125" -> "1000103"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000135" -> "1000125"  [label="CFG: "];
"1000125" -> "1000136"  [label="DDG: LayoutUnit::FromFloatCeil(\n      single_strip_block_size.ToFloat() / static_cast<float>(column_count))"];
"1000127" -> "1000125"  [label="DDG: single_strip_block_size.ToFloat() / static_cast<float>(column_count)"];
"1000125" -> "1000134"  [label="DDG: block_size"];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000121"  [label="CFG: "];
"1000129" -> "1000126"  [label="CFG: "];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000127" -> "1000136"  [label="DDG: single_strip_block_size.ToFloat() / static_cast<float>(column_count)"];
"1000127" -> "1000125"  [label="DDG: single_strip_block_size.ToFloat() / static_cast<float>(column_count)"];
"1000128" -> "1000127"  [label="DDG: single_strip_block_size.ToFloat()"];
"1000128" -> "1000127"  [label="DDG: static_cast<float>(column_count)"];
"1000130" -> "1000128"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000128" -> "1000130"  [label="CFG: "];
"1000130" -> "1000136"  [label="DDG: column_count"];
"1000130" -> "1000128"  [label="DDG: column_count"];
"1000102" -> "1000130"  [label="DDG: column_count"];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000130"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000128"  [label="AST: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000136"  [label="DDG: static_cast<float>(column_count)"];
"1000128" -> "1000136"  [label="DDG: single_strip_block_size.ToFloat()"];
"1000128" -> "1000127"  [label="DDG: single_strip_block_size.ToFloat()"];
"1000128" -> "1000127"  [label="DDG: static_cast<float>(column_count)"];
"1000130" -> "1000128"  [label="DDG: column_count"];
"1000129" -> "1000128"  [label="AST: "];
"1000129" -> "1000126"  [label="CFG: "];
"1000131" -> "1000129"  [label="CFG: "];
"1000132" -> "1000130"  [label="AST: "];
"1000132" -> "1000131"  [label="CFG: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000133" -> "1000103"  [label="AST: "];
"1000133" -> "1000134"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000136" -> "1000133"  [label="CFG: "];
"1000133" -> "1000136"  [label="DDG: <RET>"];
"1000134" -> "1000133"  [label="DDG: ConstrainColumnBlockSize(block_size)"];
"1000135" -> "1000134"  [label="AST: "];
"1000135" -> "1000125"  [label="CFG: "];
"1000134" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000135"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000133" -> "1000134"  [label="CFG: "];
"1000134" -> "1000136"  [label="DDG: ConstrainColumnBlockSize(block_size)"];
"1000134" -> "1000136"  [label="DDG: block_size"];
"1000134" -> "1000133"  [label="DDG: ConstrainColumnBlockSize(block_size)"];
"1000125" -> "1000134"  [label="DDG: block_size"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000136"  [label="DDG: column_size"];
"1000101" -> "1000107"  [label="DDG: column_size"];
"1000189" -> "1000100"  [label="AST: "];
"1000103" -> "1000100"  [label="AST: "];
"1000104" -> "1000103"  [label="AST: "];
"1000105" -> "1000103"  [label="AST: "];
"1000109" -> "1000103"  [label="AST: "];
"1000110" -> "1000103"  [label="AST: "];
"1000115" -> "1000103"  [label="AST: "];
"1000116" -> "1000103"  [label="AST: "];
"1000117" -> "1000103"  [label="AST: "];
"1000120" -> "1000103"  [label="AST: "];
"1000121" -> "1000103"  [label="AST: "];
"1000124" -> "1000103"  [label="AST: "];
"1000125" -> "1000103"  [label="AST: "];
"1000133" -> "1000103"  [label="AST: "];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000136"  [label="DDG: column_count"];
"1000102" -> "1000130"  [label="DDG: column_count"];
"1000190" -> "1000100"  [label="AST: "];
"1000105" -> "1000103"  [label="AST: "];
"1000105" -> "1000107"  [label="CFG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000107" -> "1000105"  [label="AST: "];
"1000111" -> "1000105"  [label="CFG: "];
"1000105" -> "1000136"  [label="DDG: CreateConstraintSpaceForBalancing(column_size)"];
"1000107" -> "1000105"  [label="DDG: column_size"];
"1000105" -> "1000112"  [label="DDG: space"];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000100"  [label="CFG: "];
"1000108" -> "1000106"  [label="CFG: "];
"1000107" -> "1000105"  [label="AST: "];
"1000107" -> "1000108"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000105" -> "1000107"  [label="CFG: "];
"1000107" -> "1000136"  [label="DDG: column_size"];
"1000107" -> "1000105"  [label="DDG: column_size"];
"1000101" -> "1000107"  [label="DDG: column_size"];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000106"  [label="CFG: "];
"1000107" -> "1000108"  [label="CFG: "];
"1000110" -> "1000103"  [label="AST: "];
"1000110" -> "1000112"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000112" -> "1000110"  [label="AST: "];
"1000118" -> "1000110"  [label="CFG: "];
"1000110" -> "1000136"  [label="DDG: fragment_geometry"];
"1000110" -> "1000136"  [label="DDG: CalculateInitialFragmentGeometry(space, Node())"];
"1000112" -> "1000110"  [label="DDG: space"];
"1000112" -> "1000110"  [label="DDG: Node()"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000105"  [label="CFG: "];
"1000113" -> "1000111"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000111"  [label="CFG: "];
"1000114" -> "1000113"  [label="CFG: "];
"1000114" -> "1000112"  [label="AST: "];
"1000114" -> "1000113"  [label="CFG: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000110" -> "1000112"  [label="CFG: "];
"1000112" -> "1000136"  [label="DDG: Node()"];
"1000112" -> "1000136"  [label="DDG: space"];
"1000112" -> "1000110"  [label="DDG: space"];
"1000112" -> "1000110"  [label="DDG: Node()"];
"1000105" -> "1000112"  [label="DDG: space"];
"1000115" -> "1000103"  [label="AST: "];
"1000117" -> "1000103"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000122" -> "1000117"  [label="CFG: "];
"1000117" -> "1000136"  [label="DDG: result"];
"1000117" -> "1000136"  [label="DDG: balancing_algorithm.Layout()"];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000110"  [label="CFG: "];
"1000119" -> "1000118"  [label="CFG: "];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000118"  [label="CFG: "];
"1000117" -> "1000119"  [label="CFG: "];
}
