digraph "0_Chrome_0fb75f1e468fe9054be3b3d3d5b9bf9a66e4199d_1" {
"1000142" [label="(MethodReturn,void)"];
"1000117" [label="(Call,module_handles[max_stack_size] = {0})"];
"1000118" [label="(Identifier,module_handles)"];
"1000122" [label="(Call,SuspendThreadAndRecordStack(thread_handle_.Get(),\n                                                thread_stack_base_address_,\n                                                stack_copy_buffer_.get(),\n                                                kStackCopyBufferSize,\n                                                 max_stack_size,\n                                                 instruction_pointers))"];
"1000123" [label="(Call,thread_handle_.Get())"];
"1000120" [label="(Call,stack_depth = SuspendThreadAndRecordStack(thread_handle_.Get(),\n                                                thread_stack_base_address_,\n                                                stack_copy_buffer_.get(),\n                                                kStackCopyBufferSize,\n                                                 max_stack_size,\n                                                 instruction_pointers))"];
"1000121" [label="(Identifier,stack_depth)"];
"1000124" [label="(Identifier,thread_stack_base_address_)"];
"1000125" [label="(Call,stack_copy_buffer_.get())"];
"1000126" [label="(Identifier,kStackCopyBufferSize)"];
"1000127" [label="(Identifier,max_stack_size)"];
"1000128" [label="(Identifier,instruction_pointers)"];
"1000129" [label="(Call,FindModuleHandlesForAddresses(instruction_pointers, module_handles,\n                                stack_depth))"];
"1000130" [label="(Identifier,instruction_pointers)"];
"1000131" [label="(Identifier,module_handles)"];
"1000132" [label="(Identifier,stack_depth)"];
"1000102" [label="(Block,)"];
"1000101" [label="(MethodParameterIn,StackSamplingProfiler::Sample* sample)"];
"1000198" [label="(MethodParameterOut,StackSamplingProfiler::Sample* sample)"];
"1000134" [label="(Identifier,instruction_pointers)"];
"1000133" [label="(Call,CopyToSample(instruction_pointers, module_handles, stack_depth, sample,\n               current_modules_))"];
"1000135" [label="(Identifier,module_handles)"];
"1000136" [label="(Identifier,stack_depth)"];
"1000137" [label="(Identifier,sample)"];
"1000138" [label="(Identifier,current_modules_)"];
"1000139" [label="(Call,FreeModuleHandles(stack_depth, module_handles))"];
"1000140" [label="(Identifier,stack_depth)"];
"1000141" [label="(Identifier,module_handles)"];
"1000104" [label="(Identifier,current_modules_)"];
"1000103" [label="(Call,DCHECK(current_modules_))"];
"1000105" [label="(ControlStructure,if (!stack_copy_buffer_))"];
"1000106" [label="(Call,!stack_copy_buffer_)"];
"1000107" [label="(Identifier,stack_copy_buffer_)"];
"1000108" [label="(Return,return;)"];
"1000110" [label="(Call,max_stack_size = 64)"];
"1000111" [label="(Identifier,max_stack_size)"];
"1000112" [label="(Literal,64)"];
"1000114" [label="(Call,* instruction_pointers[max_stack_size] = {0})"];
"1000115" [label="(Identifier,instruction_pointers)"];
"1000142" -> "1000100"  [label="AST: "];
"1000142" -> "1000108"  [label="CFG: "];
"1000142" -> "1000139"  [label="CFG: "];
"1000108" -> "1000142"  [label="DDG: <RET>"];
"1000122" -> "1000142"  [label="DDG: kStackCopyBufferSize"];
"1000122" -> "1000142"  [label="DDG: stack_copy_buffer_.get()"];
"1000122" -> "1000142"  [label="DDG: max_stack_size"];
"1000122" -> "1000142"  [label="DDG: thread_stack_base_address_"];
"1000122" -> "1000142"  [label="DDG: thread_handle_.Get()"];
"1000106" -> "1000142"  [label="DDG: stack_copy_buffer_"];
"1000106" -> "1000142"  [label="DDG: !stack_copy_buffer_"];
"1000103" -> "1000142"  [label="DDG: current_modules_"];
"1000103" -> "1000142"  [label="DDG: DCHECK(current_modules_)"];
"1000139" -> "1000142"  [label="DDG: stack_depth"];
"1000139" -> "1000142"  [label="DDG: module_handles"];
"1000139" -> "1000142"  [label="DDG: FreeModuleHandles(stack_depth, module_handles)"];
"1000133" -> "1000142"  [label="DDG: CopyToSample(instruction_pointers, module_handles, stack_depth, sample,\n               current_modules_)"];
"1000133" -> "1000142"  [label="DDG: current_modules_"];
"1000133" -> "1000142"  [label="DDG: instruction_pointers"];
"1000133" -> "1000142"  [label="DDG: sample"];
"1000120" -> "1000142"  [label="DDG: SuspendThreadAndRecordStack(thread_handle_.Get(),\n                                                thread_stack_base_address_,\n                                                stack_copy_buffer_.get(),\n                                                kStackCopyBufferSize,\n                                                 max_stack_size,\n                                                 instruction_pointers)"];
"1000129" -> "1000142"  [label="DDG: FindModuleHandlesForAddresses(instruction_pointers, module_handles,\n                                stack_depth)"];
"1000101" -> "1000142"  [label="DDG: sample"];
"1000117" -> "1000102"  [label="AST: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000121" -> "1000117"  [label="CFG: "];
"1000117" -> "1000129"  [label="DDG: module_handles"];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000114"  [label="CFG: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000122" -> "1000120"  [label="AST: "];
"1000122" -> "1000128"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000125" -> "1000122"  [label="AST: "];
"1000126" -> "1000122"  [label="AST: "];
"1000127" -> "1000122"  [label="AST: "];
"1000128" -> "1000122"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000122" -> "1000142"  [label="DDG: kStackCopyBufferSize"];
"1000122" -> "1000142"  [label="DDG: stack_copy_buffer_.get()"];
"1000122" -> "1000142"  [label="DDG: max_stack_size"];
"1000122" -> "1000142"  [label="DDG: thread_stack_base_address_"];
"1000122" -> "1000142"  [label="DDG: thread_handle_.Get()"];
"1000122" -> "1000120"  [label="DDG: instruction_pointers"];
"1000122" -> "1000120"  [label="DDG: thread_handle_.Get()"];
"1000122" -> "1000120"  [label="DDG: kStackCopyBufferSize"];
"1000122" -> "1000120"  [label="DDG: max_stack_size"];
"1000122" -> "1000120"  [label="DDG: thread_stack_base_address_"];
"1000122" -> "1000120"  [label="DDG: stack_copy_buffer_.get()"];
"1000110" -> "1000122"  [label="DDG: max_stack_size"];
"1000114" -> "1000122"  [label="DDG: instruction_pointers"];
"1000122" -> "1000129"  [label="DDG: instruction_pointers"];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000121"  [label="CFG: "];
"1000124" -> "1000123"  [label="CFG: "];
"1000120" -> "1000102"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000122" -> "1000120"  [label="AST: "];
"1000130" -> "1000120"  [label="CFG: "];
"1000120" -> "1000142"  [label="DDG: SuspendThreadAndRecordStack(thread_handle_.Get(),\n                                                thread_stack_base_address_,\n                                                stack_copy_buffer_.get(),\n                                                kStackCopyBufferSize,\n                                                 max_stack_size,\n                                                 instruction_pointers)"];
"1000122" -> "1000120"  [label="DDG: instruction_pointers"];
"1000122" -> "1000120"  [label="DDG: thread_handle_.Get()"];
"1000122" -> "1000120"  [label="DDG: kStackCopyBufferSize"];
"1000122" -> "1000120"  [label="DDG: max_stack_size"];
"1000122" -> "1000120"  [label="DDG: thread_stack_base_address_"];
"1000122" -> "1000120"  [label="DDG: stack_copy_buffer_.get()"];
"1000120" -> "1000129"  [label="DDG: stack_depth"];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000117"  [label="CFG: "];
"1000123" -> "1000121"  [label="CFG: "];
"1000124" -> "1000122"  [label="AST: "];
"1000124" -> "1000123"  [label="CFG: "];
"1000125" -> "1000124"  [label="CFG: "];
"1000125" -> "1000122"  [label="AST: "];
"1000125" -> "1000124"  [label="CFG: "];
"1000126" -> "1000125"  [label="CFG: "];
"1000126" -> "1000122"  [label="AST: "];
"1000126" -> "1000125"  [label="CFG: "];
"1000127" -> "1000126"  [label="CFG: "];
"1000127" -> "1000122"  [label="AST: "];
"1000127" -> "1000126"  [label="CFG: "];
"1000128" -> "1000127"  [label="CFG: "];
"1000128" -> "1000122"  [label="AST: "];
"1000128" -> "1000127"  [label="CFG: "];
"1000122" -> "1000128"  [label="CFG: "];
"1000129" -> "1000102"  [label="AST: "];
"1000129" -> "1000132"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000129"  [label="AST: "];
"1000132" -> "1000129"  [label="AST: "];
"1000134" -> "1000129"  [label="CFG: "];
"1000129" -> "1000142"  [label="DDG: FindModuleHandlesForAddresses(instruction_pointers, module_handles,\n                                stack_depth)"];
"1000122" -> "1000129"  [label="DDG: instruction_pointers"];
"1000117" -> "1000129"  [label="DDG: module_handles"];
"1000120" -> "1000129"  [label="DDG: stack_depth"];
"1000129" -> "1000133"  [label="DDG: instruction_pointers"];
"1000129" -> "1000133"  [label="DDG: module_handles"];
"1000129" -> "1000133"  [label="DDG: stack_depth"];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000120"  [label="CFG: "];
"1000131" -> "1000130"  [label="CFG: "];
"1000131" -> "1000129"  [label="AST: "];
"1000131" -> "1000130"  [label="CFG: "];
"1000132" -> "1000131"  [label="CFG: "];
"1000132" -> "1000129"  [label="AST: "];
"1000132" -> "1000131"  [label="CFG: "];
"1000129" -> "1000132"  [label="CFG: "];
"1000102" -> "1000100"  [label="AST: "];
"1000103" -> "1000102"  [label="AST: "];
"1000105" -> "1000102"  [label="AST: "];
"1000109" -> "1000102"  [label="AST: "];
"1000110" -> "1000102"  [label="AST: "];
"1000113" -> "1000102"  [label="AST: "];
"1000114" -> "1000102"  [label="AST: "];
"1000116" -> "1000102"  [label="AST: "];
"1000117" -> "1000102"  [label="AST: "];
"1000119" -> "1000102"  [label="AST: "];
"1000120" -> "1000102"  [label="AST: "];
"1000129" -> "1000102"  [label="AST: "];
"1000133" -> "1000102"  [label="AST: "];
"1000139" -> "1000102"  [label="AST: "];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000142"  [label="DDG: sample"];
"1000101" -> "1000133"  [label="DDG: sample"];
"1000198" -> "1000100"  [label="AST: "];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000129"  [label="CFG: "];
"1000135" -> "1000134"  [label="CFG: "];
"1000133" -> "1000102"  [label="AST: "];
"1000133" -> "1000138"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000136" -> "1000133"  [label="AST: "];
"1000137" -> "1000133"  [label="AST: "];
"1000138" -> "1000133"  [label="AST: "];
"1000140" -> "1000133"  [label="CFG: "];
"1000133" -> "1000142"  [label="DDG: CopyToSample(instruction_pointers, module_handles, stack_depth, sample,\n               current_modules_)"];
"1000133" -> "1000142"  [label="DDG: current_modules_"];
"1000133" -> "1000142"  [label="DDG: instruction_pointers"];
"1000133" -> "1000142"  [label="DDG: sample"];
"1000129" -> "1000133"  [label="DDG: instruction_pointers"];
"1000129" -> "1000133"  [label="DDG: module_handles"];
"1000129" -> "1000133"  [label="DDG: stack_depth"];
"1000101" -> "1000133"  [label="DDG: sample"];
"1000103" -> "1000133"  [label="DDG: current_modules_"];
"1000133" -> "1000139"  [label="DDG: stack_depth"];
"1000133" -> "1000139"  [label="DDG: module_handles"];
"1000135" -> "1000133"  [label="AST: "];
"1000135" -> "1000134"  [label="CFG: "];
"1000136" -> "1000135"  [label="CFG: "];
"1000136" -> "1000133"  [label="AST: "];
"1000136" -> "1000135"  [label="CFG: "];
"1000137" -> "1000136"  [label="CFG: "];
"1000137" -> "1000133"  [label="AST: "];
"1000137" -> "1000136"  [label="CFG: "];
"1000138" -> "1000137"  [label="CFG: "];
"1000138" -> "1000133"  [label="AST: "];
"1000138" -> "1000137"  [label="CFG: "];
"1000133" -> "1000138"  [label="CFG: "];
"1000139" -> "1000102"  [label="AST: "];
"1000139" -> "1000141"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="AST: "];
"1000142" -> "1000139"  [label="CFG: "];
"1000139" -> "1000142"  [label="DDG: stack_depth"];
"1000139" -> "1000142"  [label="DDG: module_handles"];
"1000139" -> "1000142"  [label="DDG: FreeModuleHandles(stack_depth, module_handles)"];
"1000133" -> "1000139"  [label="DDG: stack_depth"];
"1000133" -> "1000139"  [label="DDG: module_handles"];
"1000140" -> "1000139"  [label="AST: "];
"1000140" -> "1000133"  [label="CFG: "];
"1000141" -> "1000140"  [label="CFG: "];
"1000141" -> "1000139"  [label="AST: "];
"1000141" -> "1000140"  [label="CFG: "];
"1000139" -> "1000141"  [label="CFG: "];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000100"  [label="CFG: "];
"1000103" -> "1000104"  [label="CFG: "];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000104"  [label="CFG: "];
"1000104" -> "1000103"  [label="AST: "];
"1000107" -> "1000103"  [label="CFG: "];
"1000103" -> "1000142"  [label="DDG: current_modules_"];
"1000103" -> "1000142"  [label="DDG: DCHECK(current_modules_)"];
"1000103" -> "1000133"  [label="DDG: current_modules_"];
"1000105" -> "1000102"  [label="AST: "];
"1000106" -> "1000105"  [label="AST: "];
"1000108" -> "1000105"  [label="AST: "];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000108" -> "1000106"  [label="CFG: "];
"1000111" -> "1000106"  [label="CFG: "];
"1000106" -> "1000142"  [label="DDG: stack_copy_buffer_"];
"1000106" -> "1000142"  [label="DDG: !stack_copy_buffer_"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000103"  [label="CFG: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000108" -> "1000105"  [label="AST: "];
"1000108" -> "1000106"  [label="CFG: "];
"1000142" -> "1000108"  [label="CFG: "];
"1000108" -> "1000142"  [label="DDG: <RET>"];
"1000110" -> "1000102"  [label="AST: "];
"1000110" -> "1000112"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000112" -> "1000110"  [label="AST: "];
"1000115" -> "1000110"  [label="CFG: "];
"1000110" -> "1000122"  [label="DDG: max_stack_size"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000106"  [label="CFG: "];
"1000112" -> "1000111"  [label="CFG: "];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000111"  [label="CFG: "];
"1000110" -> "1000112"  [label="CFG: "];
"1000114" -> "1000102"  [label="AST: "];
"1000114" -> "1000115"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000118" -> "1000114"  [label="CFG: "];
"1000114" -> "1000122"  [label="DDG: instruction_pointers"];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000110"  [label="CFG: "];
"1000114" -> "1000115"  [label="CFG: "];
}
