digraph "0_linux_23adbe12ef7d3d4195e80800ab36b37bee28cd03_1" {
"1000129" [label="(MethodReturn,bool)"];
"1000101" [label="(MethodParameterIn,const struct inode *inode)"];
"1000172" [label="(MethodParameterOut,const struct inode *inode)"];
"1000126" [label="(Identifier,true)"];
"1000125" [label="(Return,return true;)"];
"1000127" [label="(Return,return false;)"];
"1000128" [label="(Identifier,false)"];
"1000102" [label="(Block,)"];
"1000106" [label="(Call,current_fsuid())"];
"1000104" [label="(ControlStructure,if (uid_eq(current_fsuid(), inode->i_uid)))"];
"1000107" [label="(Call,inode->i_uid)"];
"1000108" [label="(Identifier,inode)"];
"1000109" [label="(FieldIdentifier,i_uid)"];
"1000105" [label="(Call,uid_eq(current_fsuid(), inode->i_uid))"];
"1000111" [label="(Identifier,true)"];
"1000110" [label="(Return,return true;)"];
"1000112" [label="(Call,ns = current_user_ns())"];
"1000113" [label="(Identifier,ns)"];
"1000114" [label="(Call,current_user_ns())"];
"1000115" [label="(ControlStructure,if (ns_capable(ns, CAP_FOWNER) && kuid_has_mapping(ns, inode->i_uid)))"];
"1000118" [label="(Identifier,ns)"];
"1000119" [label="(Identifier,CAP_FOWNER)"];
"1000120" [label="(Call,kuid_has_mapping(ns, inode->i_uid))"];
"1000116" [label="(Call,ns_capable(ns, CAP_FOWNER) && kuid_has_mapping(ns, inode->i_uid))"];
"1000117" [label="(Call,ns_capable(ns, CAP_FOWNER))"];
"1000121" [label="(Identifier,ns)"];
"1000122" [label="(Call,inode->i_uid)"];
"1000123" [label="(Identifier,inode)"];
"1000124" [label="(FieldIdentifier,i_uid)"];
"1000129" -> "1000100"  [label="AST: "];
"1000129" -> "1000110"  [label="CFG: "];
"1000129" -> "1000125"  [label="CFG: "];
"1000129" -> "1000127"  [label="CFG: "];
"1000110" -> "1000129"  [label="DDG: <RET>"];
"1000127" -> "1000129"  [label="DDG: <RET>"];
"1000125" -> "1000129"  [label="DDG: <RET>"];
"1000116" -> "1000129"  [label="DDG: ns_capable(ns, CAP_FOWNER)"];
"1000116" -> "1000129"  [label="DDG: ns_capable(ns, CAP_FOWNER) && kuid_has_mapping(ns, inode->i_uid)"];
"1000116" -> "1000129"  [label="DDG: kuid_has_mapping(ns, inode->i_uid)"];
"1000105" -> "1000129"  [label="DDG: inode->i_uid"];
"1000105" -> "1000129"  [label="DDG: uid_eq(current_fsuid(), inode->i_uid)"];
"1000105" -> "1000129"  [label="DDG: current_fsuid()"];
"1000112" -> "1000129"  [label="DDG: current_user_ns()"];
"1000120" -> "1000129"  [label="DDG: ns"];
"1000120" -> "1000129"  [label="DDG: inode->i_uid"];
"1000117" -> "1000129"  [label="DDG: ns"];
"1000117" -> "1000129"  [label="DDG: CAP_FOWNER"];
"1000101" -> "1000129"  [label="DDG: inode"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000129"  [label="DDG: inode"];
"1000172" -> "1000100"  [label="AST: "];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000116"  [label="CFG: "];
"1000125" -> "1000126"  [label="CFG: "];
"1000126" -> "1000125"  [label="DDG: true"];
"1000125" -> "1000115"  [label="AST: "];
"1000125" -> "1000126"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000129" -> "1000125"  [label="CFG: "];
"1000125" -> "1000129"  [label="DDG: <RET>"];
"1000126" -> "1000125"  [label="DDG: true"];
"1000127" -> "1000102"  [label="AST: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="CFG: "];
"1000127" -> "1000129"  [label="DDG: <RET>"];
"1000128" -> "1000127"  [label="DDG: false"];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000116"  [label="CFG: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000127"  [label="DDG: false"];
"1000102" -> "1000100"  [label="AST: "];
"1000103" -> "1000102"  [label="AST: "];
"1000104" -> "1000102"  [label="AST: "];
"1000112" -> "1000102"  [label="AST: "];
"1000115" -> "1000102"  [label="AST: "];
"1000127" -> "1000102"  [label="AST: "];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000100"  [label="CFG: "];
"1000108" -> "1000106"  [label="CFG: "];
"1000104" -> "1000102"  [label="AST: "];
"1000105" -> "1000104"  [label="AST: "];
"1000110" -> "1000104"  [label="AST: "];
"1000107" -> "1000105"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000105" -> "1000107"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000106"  [label="CFG: "];
"1000109" -> "1000108"  [label="CFG: "];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000108"  [label="CFG: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000107"  [label="CFG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000107" -> "1000105"  [label="AST: "];
"1000111" -> "1000105"  [label="CFG: "];
"1000113" -> "1000105"  [label="CFG: "];
"1000105" -> "1000129"  [label="DDG: inode->i_uid"];
"1000105" -> "1000129"  [label="DDG: uid_eq(current_fsuid(), inode->i_uid)"];
"1000105" -> "1000129"  [label="DDG: current_fsuid()"];
"1000105" -> "1000120"  [label="DDG: inode->i_uid"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000105"  [label="CFG: "];
"1000110" -> "1000111"  [label="CFG: "];
"1000111" -> "1000110"  [label="DDG: true"];
"1000110" -> "1000104"  [label="AST: "];
"1000110" -> "1000111"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000129" -> "1000110"  [label="CFG: "];
"1000110" -> "1000129"  [label="DDG: <RET>"];
"1000111" -> "1000110"  [label="DDG: true"];
"1000112" -> "1000102"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000118" -> "1000112"  [label="CFG: "];
"1000112" -> "1000129"  [label="DDG: current_user_ns()"];
"1000112" -> "1000117"  [label="DDG: ns"];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000105"  [label="CFG: "];
"1000114" -> "1000113"  [label="CFG: "];
"1000114" -> "1000112"  [label="AST: "];
"1000114" -> "1000113"  [label="CFG: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000115" -> "1000102"  [label="AST: "];
"1000116" -> "1000115"  [label="AST: "];
"1000125" -> "1000115"  [label="AST: "];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000112"  [label="CFG: "];
"1000119" -> "1000118"  [label="CFG: "];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000118"  [label="CFG: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000120" -> "1000116"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000122" -> "1000120"  [label="AST: "];
"1000116" -> "1000120"  [label="CFG: "];
"1000120" -> "1000129"  [label="DDG: ns"];
"1000120" -> "1000129"  [label="DDG: inode->i_uid"];
"1000120" -> "1000116"  [label="DDG: ns"];
"1000120" -> "1000116"  [label="DDG: inode->i_uid"];
"1000117" -> "1000120"  [label="DDG: ns"];
"1000105" -> "1000120"  [label="DDG: inode->i_uid"];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000117"  [label="CFG: "];
"1000116" -> "1000120"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000120" -> "1000116"  [label="AST: "];
"1000126" -> "1000116"  [label="CFG: "];
"1000128" -> "1000116"  [label="CFG: "];
"1000116" -> "1000129"  [label="DDG: ns_capable(ns, CAP_FOWNER)"];
"1000116" -> "1000129"  [label="DDG: ns_capable(ns, CAP_FOWNER) && kuid_has_mapping(ns, inode->i_uid)"];
"1000116" -> "1000129"  [label="DDG: kuid_has_mapping(ns, inode->i_uid)"];
"1000117" -> "1000116"  [label="DDG: ns"];
"1000117" -> "1000116"  [label="DDG: CAP_FOWNER"];
"1000120" -> "1000116"  [label="DDG: ns"];
"1000120" -> "1000116"  [label="DDG: inode->i_uid"];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000121" -> "1000117"  [label="CFG: "];
"1000116" -> "1000117"  [label="CFG: "];
"1000117" -> "1000129"  [label="DDG: ns"];
"1000117" -> "1000129"  [label="DDG: CAP_FOWNER"];
"1000117" -> "1000116"  [label="DDG: ns"];
"1000117" -> "1000116"  [label="DDG: CAP_FOWNER"];
"1000112" -> "1000117"  [label="DDG: ns"];
"1000117" -> "1000120"  [label="DDG: ns"];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000117"  [label="CFG: "];
"1000123" -> "1000121"  [label="CFG: "];
"1000122" -> "1000120"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000121"  [label="CFG: "];
"1000124" -> "1000123"  [label="CFG: "];
"1000124" -> "1000122"  [label="AST: "];
"1000124" -> "1000123"  [label="CFG: "];
"1000122" -> "1000124"  [label="CFG: "];
}
