digraph "0_Chrome_33827275411b33371e7bb750cce20f11de85002d_9" {
"1000206" [label="(MethodReturn,void)"];
"1000113" [label="(Call,& base_position =\n      original_base_in_flat_tree_.GetPosition())"];
"1000114" [label="(Identifier,base_position)"];
"1000115" [label="(Call,original_base_in_flat_tree_.GetPosition())"];
"1000117" [label="(Call,& original_base =\n      base_position.IsConnected() ? CreateVisiblePosition(base_position)\n                                  : VisiblePositionInFlatTree())"];
"1000118" [label="(Identifier,original_base)"];
"1000121" [label="(Call,CreateVisiblePosition(base_position))"];
"1000122" [label="(Identifier,base_position)"];
"1000119" [label="(Call,base_position.IsConnected() ? CreateVisiblePosition(base_position)\n                                  : VisiblePositionInFlatTree())"];
"1000120" [label="(Call,base_position.IsConnected())"];
"1000123" [label="(Call,VisiblePositionInFlatTree())"];
"1000125" [label="(Call,& base =\n      original_base.IsNotNull() ? original_base\n                                : CreateVisiblePosition(new_selection.Base()))"];
"1000126" [label="(Identifier,base)"];
"1000129" [label="(Identifier,original_base)"];
"1000127" [label="(Call,original_base.IsNotNull() ? original_base\n                                : CreateVisiblePosition(new_selection.Base()))"];
"1000128" [label="(Call,original_base.IsNotNull())"];
"1000130" [label="(Call,CreateVisiblePosition(new_selection.Base()))"];
"1000131" [label="(Call,new_selection.Base())"];
"1000133" [label="(Call,& extent =\n      CreateVisiblePosition(new_selection.Extent()))"];
"1000134" [label="(Identifier,extent)"];
"1000136" [label="(Call,new_selection.Extent())"];
"1000135" [label="(Call,CreateVisiblePosition(new_selection.Extent()))"];
"1000101" [label="(MethodParameterIn,const SelectionInFlatTree& passed_selection)"];
"1000351" [label="(MethodParameterOut,const SelectionInFlatTree& passed_selection)"];
"1000138" [label="(Call,& adjusted_selection =\n      endpoints_adjustment_mode == kAdjustEndpointsAtBidiBoundary\n          ? AdjustEndpointsAtBidiBoundary(base, extent)\n          : SelectionInFlatTree::Builder()\n                .SetBaseAndExtent(base.DeepEquivalent(),\n                                  extent.DeepEquivalent())\n                .Build())"];
"1000139" [label="(Identifier,adjusted_selection)"];
"1000143" [label="(Identifier,kAdjustEndpointsAtBidiBoundary)"];
"1000140" [label="(Call,endpoints_adjustment_mode == kAdjustEndpointsAtBidiBoundary\n          ? AdjustEndpointsAtBidiBoundary(base, extent)\n          : SelectionInFlatTree::Builder()\n                .SetBaseAndExtent(base.DeepEquivalent(),\n                                  extent.DeepEquivalent())\n                .Build())"];
"1000141" [label="(Call,endpoints_adjustment_mode == kAdjustEndpointsAtBidiBoundary)"];
"1000142" [label="(Identifier,endpoints_adjustment_mode)"];
"1000144" [label="(Call,AdjustEndpointsAtBidiBoundary(base, extent))"];
"1000145" [label="(Identifier,base)"];
"1000146" [label="(Identifier,extent)"];
"1000147" [label="(Call,SelectionInFlatTree::Builder()\n                .SetBaseAndExtent(base.DeepEquivalent(),\n                                  extent.DeepEquivalent())\n                .Build())"];
"1000149" [label="(ControlStructure,if (adjusted_selection.Base() != base.DeepEquivalent() ||\n      adjusted_selection.Extent() != extent.DeepEquivalent()))"];
"1000153" [label="(Call,base.DeepEquivalent())"];
"1000150" [label="(Call,adjusted_selection.Base() != base.DeepEquivalent() ||\n      adjusted_selection.Extent() != extent.DeepEquivalent())"];
"1000151" [label="(Call,adjusted_selection.Base() != base.DeepEquivalent())"];
"1000152" [label="(Call,adjusted_selection.Base())"];
"1000102" [label="(MethodParameterIn,TextGranularity granularity)"];
"1000352" [label="(MethodParameterOut,TextGranularity granularity)"];
"1000156" [label="(Call,extent.DeepEquivalent())"];
"1000154" [label="(Call,adjusted_selection.Extent() != extent.DeepEquivalent())"];
"1000155" [label="(Call,adjusted_selection.Extent())"];
"1000157" [label="(Block,)"];
"1000160" [label="(Call,base.ToPositionWithAffinity())"];
"1000158" [label="(Call,original_base_in_flat_tree_ = base.ToPositionWithAffinity())"];
"1000159" [label="(Identifier,original_base_in_flat_tree_)"];
"1000162" [label="(Call,&GetDocument())"];
"1000163" [label="(Call,GetDocument())"];
"1000161" [label="(Call,SetContext(&GetDocument()))"];
"1000165" [label="(Call,adjusted_selection.Base())"];
"1000164" [label="(Call,builder.SetBaseAndExtent(adjusted_selection.Base(),\n                             adjusted_selection.Extent()))"];
"1000166" [label="(Call,adjusted_selection.Extent())"];
"1000169" [label="(Call,original_base.IsNotNull())"];
"1000167" [label="(ControlStructure,else)"];
"1000170" [label="(Block,)"];
"1000168" [label="(ControlStructure,if (original_base.IsNotNull()))"];
"1000171" [label="(ControlStructure,if (CreateVisiblePosition(\n            Selection().ComputeVisibleSelectionInFlatTree().Base())\n            .DeepEquivalent() ==\n        CreateVisiblePosition(new_selection.Base()).DeepEquivalent()))"];
"1000172" [label="(Call,CreateVisiblePosition(\n            Selection().ComputeVisibleSelectionInFlatTree().Base())\n            .DeepEquivalent() ==\n        CreateVisiblePosition(new_selection.Base()).DeepEquivalent())"];
"1000173" [label="(Call,CreateVisiblePosition(\n            Selection().ComputeVisibleSelectionInFlatTree().Base())\n            .DeepEquivalent())"];
"1000175" [label="(Block,)"];
"1000174" [label="(Call,CreateVisiblePosition(new_selection.Base()).DeepEquivalent())"];
"1000103" [label="(MethodParameterIn,EndPointsAdjustmentMode endpoints_adjustment_mode)"];
"1000353" [label="(MethodParameterOut,EndPointsAdjustmentMode endpoints_adjustment_mode)"];
"1000177" [label="(Call,original_base.DeepEquivalent())"];
"1000176" [label="(Call,builder.SetBaseAndExtent(original_base.DeepEquivalent(),\n                               new_selection.Extent()))"];
"1000178" [label="(Call,new_selection.Extent())"];
"1000181" [label="(Call,PositionInFlatTreeWithAffinity())"];
"1000179" [label="(Call,original_base_in_flat_tree_ = PositionInFlatTreeWithAffinity())"];
"1000180" [label="(Identifier,original_base_in_flat_tree_)"];
"1000183" [label="(Call,& selection_in_flat_tree = builder.Build())"];
"1000184" [label="(Identifier,selection_in_flat_tree)"];
"1000185" [label="(Call,builder.Build())"];
"1000187" [label="(Call,should_show_handle =\n      handle_visibility == HandleVisibility::kVisible)"];
"1000188" [label="(Identifier,should_show_handle)"];
"1000191" [label="(Identifier,HandleVisibility::kVisible)"];
"1000189" [label="(Call,handle_visibility == HandleVisibility::kVisible)"];
"1000190" [label="(Identifier,handle_visibility)"];
"1000192" [label="(ControlStructure,if (Selection().ComputeVisibleSelectionInFlatTree() ==\n           CreateVisibleSelection(selection_in_flat_tree) &&\n      Selection().IsHandleVisible() == should_show_handle))"];
"1000193" [label="(Call,Selection().ComputeVisibleSelectionInFlatTree() ==\n           CreateVisibleSelection(selection_in_flat_tree) &&\n      Selection().IsHandleVisible() == should_show_handle)"];
"1000194" [label="(Call,Selection().ComputeVisibleSelectionInFlatTree() ==\n           CreateVisibleSelection(selection_in_flat_tree))"];
"1000195" [label="(Call,Selection().ComputeVisibleSelectionInFlatTree())"];
"1000104" [label="(MethodParameterIn,HandleVisibility handle_visibility)"];
"1000354" [label="(MethodParameterOut,HandleVisibility handle_visibility)"];
"1000105" [label="(Block,)"];
"1000196" [label="(Call,CreateVisibleSelection(selection_in_flat_tree))"];
"1000197" [label="(Identifier,selection_in_flat_tree)"];
"1000200" [label="(Identifier,should_show_handle)"];
"1000198" [label="(Call,Selection().IsHandleVisible() == should_show_handle)"];
"1000199" [label="(Call,Selection().IsHandleVisible())"];
"1000201" [label="(Return,return;)"];
"1000202" [label="(Call,Selection().SetSelection(\n       ConvertToSelectionInDOMTree(selection_in_flat_tree),\n      SetSelectionData::Builder()\n          .SetShouldCloseTyping(true)\n           .SetShouldClearTypingStyle(true)\n           .SetCursorAlignOnScroll(CursorAlignOnScroll::kIfNeeded)\n           .SetGranularity(granularity)\n          .SetShouldShowHandle(should_show_handle)\n           .Build()))"];
"1000204" [label="(Identifier,selection_in_flat_tree)"];
"1000203" [label="(Call,ConvertToSelectionInDOMTree(selection_in_flat_tree))"];
"1000205" [label="(Call,SetSelectionData::Builder()\n          .SetShouldCloseTyping(true)\n           .SetShouldClearTypingStyle(true)\n           .SetCursorAlignOnScroll(CursorAlignOnScroll::kIfNeeded)\n           .SetGranularity(granularity)\n          .SetShouldShowHandle(should_show_handle)\n           .Build())"];
"1000106" [label="(Call,GetDocument().UpdateStyleAndLayoutIgnorePendingStylesheets())"];
"1000108" [label="(Call,& new_selection =\n      CreateVisibleSelection(passed_selection))"];
"1000109" [label="(Identifier,new_selection)"];
"1000111" [label="(Identifier,passed_selection)"];
"1000110" [label="(Call,CreateVisibleSelection(passed_selection))"];
"1000206" -> "1000100"  [label="AST: "];
"1000206" -> "1000201"  [label="CFG: "];
"1000206" -> "1000202"  [label="CFG: "];
"1000183" -> "1000206"  [label="DDG: builder.Build()"];
"1000150" -> "1000206"  [label="DDG: adjusted_selection.Base() != base.DeepEquivalent()"];
"1000150" -> "1000206"  [label="DDG: adjusted_selection.Extent() != extent.DeepEquivalent()"];
"1000150" -> "1000206"  [label="DDG: adjusted_selection.Base() != base.DeepEquivalent() ||\n      adjusted_selection.Extent() != extent.DeepEquivalent()"];
"1000198" -> "1000206"  [label="DDG: should_show_handle"];
"1000198" -> "1000206"  [label="DDG: Selection().IsHandleVisible()"];
"1000179" -> "1000206"  [label="DDG: PositionInFlatTreeWithAffinity()"];
"1000179" -> "1000206"  [label="DDG: original_base_in_flat_tree_"];
"1000176" -> "1000206"  [label="DDG: builder.SetBaseAndExtent(original_base.DeepEquivalent(),\n                               new_selection.Extent())"];
"1000176" -> "1000206"  [label="DDG: new_selection.Extent()"];
"1000176" -> "1000206"  [label="DDG: original_base.DeepEquivalent()"];
"1000158" -> "1000206"  [label="DDG: original_base_in_flat_tree_"];
"1000158" -> "1000206"  [label="DDG: base.ToPositionWithAffinity()"];
"1000187" -> "1000206"  [label="DDG: should_show_handle"];
"1000187" -> "1000206"  [label="DDG: handle_visibility == HandleVisibility::kVisible"];
"1000127" -> "1000206"  [label="DDG: CreateVisiblePosition(new_selection.Base())"];
"1000127" -> "1000206"  [label="DDG: original_base"];
"1000127" -> "1000206"  [label="DDG: original_base.IsNotNull()"];
"1000164" -> "1000206"  [label="DDG: builder.SetBaseAndExtent(adjusted_selection.Base(),\n                             adjusted_selection.Extent())"];
"1000164" -> "1000206"  [label="DDG: adjusted_selection.Extent()"];
"1000164" -> "1000206"  [label="DDG: adjusted_selection.Base()"];
"1000125" -> "1000206"  [label="DDG: base"];
"1000125" -> "1000206"  [label="DDG: original_base.IsNotNull() ? original_base\n                                : CreateVisiblePosition(new_selection.Base())"];
"1000172" -> "1000206"  [label="DDG: CreateVisiblePosition(\n            Selection().ComputeVisibleSelectionInFlatTree().Base())\n            .DeepEquivalent() ==\n        CreateVisiblePosition(new_selection.Base()).DeepEquivalent()"];
"1000172" -> "1000206"  [label="DDG: CreateVisiblePosition(\n            Selection().ComputeVisibleSelectionInFlatTree().Base())\n            .DeepEquivalent()"];
"1000172" -> "1000206"  [label="DDG: CreateVisiblePosition(new_selection.Base()).DeepEquivalent()"];
"1000141" -> "1000206"  [label="DDG: endpoints_adjustment_mode"];
"1000141" -> "1000206"  [label="DDG: kAdjustEndpointsAtBidiBoundary"];
"1000193" -> "1000206"  [label="DDG: Selection().ComputeVisibleSelectionInFlatTree() ==\n           CreateVisibleSelection(selection_in_flat_tree)"];
"1000193" -> "1000206"  [label="DDG: Selection().ComputeVisibleSelectionInFlatTree() ==\n           CreateVisibleSelection(selection_in_flat_tree) &&\n      Selection().IsHandleVisible() == should_show_handle"];
"1000193" -> "1000206"  [label="DDG: Selection().IsHandleVisible() == should_show_handle"];
"1000169" -> "1000206"  [label="DDG: original_base.IsNotNull()"];
"1000189" -> "1000206"  [label="DDG: handle_visibility"];
"1000189" -> "1000206"  [label="DDG: HandleVisibility::kVisible"];
"1000104" -> "1000206"  [label="DDG: handle_visibility"];
"1000113" -> "1000206"  [label="DDG: base_position"];
"1000113" -> "1000206"  [label="DDG: original_base_in_flat_tree_.GetPosition()"];
"1000119" -> "1000206"  [label="DDG: VisiblePositionInFlatTree()"];
"1000119" -> "1000206"  [label="DDG: CreateVisiblePosition(base_position)"];
"1000119" -> "1000206"  [label="DDG: base_position.IsConnected()"];
"1000140" -> "1000206"  [label="DDG: endpoints_adjustment_mode == kAdjustEndpointsAtBidiBoundary"];
"1000140" -> "1000206"  [label="DDG: AdjustEndpointsAtBidiBoundary(base, extent)"];
"1000140" -> "1000206"  [label="DDG: SelectionInFlatTree::Builder()\n                .SetBaseAndExtent(base.DeepEquivalent(),\n                                  extent.DeepEquivalent())\n                .Build()"];
"1000138" -> "1000206"  [label="DDG: adjusted_selection"];
"1000138" -> "1000206"  [label="DDG: endpoints_adjustment_mode == kAdjustEndpointsAtBidiBoundary\n          ? AdjustEndpointsAtBidiBoundary(base, extent)\n          : SelectionInFlatTree::Builder()\n                .SetBaseAndExtent(base.DeepEquivalent(),\n                                  extent.DeepEquivalent())\n                .Build()"];
"1000194" -> "1000206"  [label="DDG: Selection().ComputeVisibleSelectionInFlatTree()"];
"1000194" -> "1000206"  [label="DDG: CreateVisibleSelection(selection_in_flat_tree)"];
"1000151" -> "1000206"  [label="DDG: adjusted_selection.Base()"];
"1000151" -> "1000206"  [label="DDG: base.DeepEquivalent()"];
"1000154" -> "1000206"  [label="DDG: adjusted_selection.Extent()"];
"1000154" -> "1000206"  [label="DDG: extent.DeepEquivalent()"];
"1000133" -> "1000206"  [label="DDG: extent"];
"1000133" -> "1000206"  [label="DDG: CreateVisiblePosition(new_selection.Extent())"];
"1000103" -> "1000206"  [label="DDG: endpoints_adjustment_mode"];
"1000202" -> "1000206"  [label="DDG: ConvertToSelectionInDOMTree(selection_in_flat_tree)"];
"1000202" -> "1000206"  [label="DDG: SetSelectionData::Builder()\n          .SetShouldCloseTyping(true)\n           .SetShouldClearTypingStyle(true)\n           .SetCursorAlignOnScroll(CursorAlignOnScroll::kIfNeeded)\n           .SetGranularity(granularity)\n          .SetShouldShowHandle(should_show_handle)\n           .Build()"];
"1000202" -> "1000206"  [label="DDG: Selection().SetSelection(\n       ConvertToSelectionInDOMTree(selection_in_flat_tree),\n      SetSelectionData::Builder()\n          .SetShouldCloseTyping(true)\n           .SetShouldClearTypingStyle(true)\n           .SetCursorAlignOnScroll(CursorAlignOnScroll::kIfNeeded)\n           .SetGranularity(granularity)\n          .SetShouldShowHandle(should_show_handle)\n           .Build())"];
"1000102" -> "1000206"  [label="DDG: granularity"];
"1000196" -> "1000206"  [label="DDG: selection_in_flat_tree"];
"1000101" -> "1000206"  [label="DDG: passed_selection"];
"1000108" -> "1000206"  [label="DDG: CreateVisibleSelection(passed_selection)"];
"1000108" -> "1000206"  [label="DDG: new_selection"];
"1000135" -> "1000206"  [label="DDG: new_selection.Extent()"];
"1000121" -> "1000206"  [label="DDG: base_position"];
"1000144" -> "1000206"  [label="DDG: base"];
"1000144" -> "1000206"  [label="DDG: extent"];
"1000117" -> "1000206"  [label="DDG: base_position.IsConnected() ? CreateVisiblePosition(base_position)\n                                  : VisiblePositionInFlatTree()"];
"1000161" -> "1000206"  [label="DDG: &GetDocument()"];
"1000161" -> "1000206"  [label="DDG: SetContext(&GetDocument())"];
"1000110" -> "1000206"  [label="DDG: passed_selection"];
"1000106" -> "1000206"  [label="DDG: GetDocument().UpdateStyleAndLayoutIgnorePendingStylesheets()"];
"1000203" -> "1000206"  [label="DDG: selection_in_flat_tree"];
"1000130" -> "1000206"  [label="DDG: new_selection.Base()"];
"1000201" -> "1000206"  [label="DDG: <RET>"];
"1000113" -> "1000105"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000118" -> "1000113"  [label="CFG: "];
"1000113" -> "1000206"  [label="DDG: base_position"];
"1000113" -> "1000206"  [label="DDG: original_base_in_flat_tree_.GetPosition()"];
"1000113" -> "1000121"  [label="DDG: base_position"];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000108"  [label="CFG: "];
"1000115" -> "1000114"  [label="CFG: "];
"1000115" -> "1000113"  [label="AST: "];
"1000115" -> "1000114"  [label="CFG: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000117" -> "1000105"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000126" -> "1000117"  [label="CFG: "];
"1000117" -> "1000206"  [label="DDG: base_position.IsConnected() ? CreateVisiblePosition(base_position)\n                                  : VisiblePositionInFlatTree()"];
"1000121" -> "1000117"  [label="DDG: base_position"];
"1000117" -> "1000125"  [label="DDG: original_base"];
"1000117" -> "1000127"  [label="DDG: original_base"];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000113"  [label="CFG: "];
"1000120" -> "1000118"  [label="CFG: "];
"1000121" -> "1000119"  [label="AST: "];
"1000121" -> "1000122"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000121" -> "1000206"  [label="DDG: base_position"];
"1000121" -> "1000117"  [label="DDG: base_position"];
"1000121" -> "1000119"  [label="DDG: base_position"];
"1000113" -> "1000121"  [label="DDG: base_position"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000120"  [label="CFG: "];
"1000121" -> "1000122"  [label="CFG: "];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000119" -> "1000123"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000123" -> "1000119"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000119" -> "1000206"  [label="DDG: VisiblePositionInFlatTree()"];
"1000119" -> "1000206"  [label="DDG: CreateVisiblePosition(base_position)"];
"1000119" -> "1000206"  [label="DDG: base_position.IsConnected()"];
"1000121" -> "1000119"  [label="DDG: base_position"];
"1000120" -> "1000119"  [label="AST: "];
"1000120" -> "1000118"  [label="CFG: "];
"1000122" -> "1000120"  [label="CFG: "];
"1000123" -> "1000120"  [label="CFG: "];
"1000123" -> "1000119"  [label="AST: "];
"1000123" -> "1000120"  [label="CFG: "];
"1000119" -> "1000123"  [label="CFG: "];
"1000125" -> "1000105"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000134" -> "1000125"  [label="CFG: "];
"1000125" -> "1000206"  [label="DDG: base"];
"1000125" -> "1000206"  [label="DDG: original_base.IsNotNull() ? original_base\n                                : CreateVisiblePosition(new_selection.Base())"];
"1000117" -> "1000125"  [label="DDG: original_base"];
"1000130" -> "1000125"  [label="DDG: new_selection.Base()"];
"1000125" -> "1000144"  [label="DDG: base"];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000117"  [label="CFG: "];
"1000128" -> "1000126"  [label="CFG: "];
"1000129" -> "1000127"  [label="AST: "];
"1000129" -> "1000128"  [label="CFG: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000127" -> "1000130"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000130" -> "1000127"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000127" -> "1000206"  [label="DDG: CreateVisiblePosition(new_selection.Base())"];
"1000127" -> "1000206"  [label="DDG: original_base"];
"1000127" -> "1000206"  [label="DDG: original_base.IsNotNull()"];
"1000117" -> "1000127"  [label="DDG: original_base"];
"1000130" -> "1000127"  [label="DDG: new_selection.Base()"];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000126"  [label="CFG: "];
"1000129" -> "1000128"  [label="CFG: "];
"1000131" -> "1000128"  [label="CFG: "];
"1000130" -> "1000127"  [label="AST: "];
"1000130" -> "1000131"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000127" -> "1000130"  [label="CFG: "];
"1000130" -> "1000206"  [label="DDG: new_selection.Base()"];
"1000130" -> "1000125"  [label="DDG: new_selection.Base()"];
"1000130" -> "1000127"  [label="DDG: new_selection.Base()"];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000128"  [label="CFG: "];
"1000130" -> "1000131"  [label="CFG: "];
"1000133" -> "1000105"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000139" -> "1000133"  [label="CFG: "];
"1000133" -> "1000206"  [label="DDG: extent"];
"1000133" -> "1000206"  [label="DDG: CreateVisiblePosition(new_selection.Extent())"];
"1000135" -> "1000133"  [label="DDG: new_selection.Extent()"];
"1000133" -> "1000144"  [label="DDG: extent"];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000125"  [label="CFG: "];
"1000136" -> "1000134"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000134"  [label="CFG: "];
"1000135" -> "1000136"  [label="CFG: "];
"1000135" -> "1000133"  [label="AST: "];
"1000135" -> "1000136"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000135" -> "1000206"  [label="DDG: new_selection.Extent()"];
"1000135" -> "1000133"  [label="DDG: new_selection.Extent()"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000206"  [label="DDG: passed_selection"];
"1000101" -> "1000110"  [label="DDG: passed_selection"];
"1000351" -> "1000100"  [label="AST: "];
"1000138" -> "1000105"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000152" -> "1000138"  [label="CFG: "];
"1000138" -> "1000206"  [label="DDG: adjusted_selection"];
"1000138" -> "1000206"  [label="DDG: endpoints_adjustment_mode == kAdjustEndpointsAtBidiBoundary\n          ? AdjustEndpointsAtBidiBoundary(base, extent)\n          : SelectionInFlatTree::Builder()\n                .SetBaseAndExtent(base.DeepEquivalent(),\n                                  extent.DeepEquivalent())\n                .Build()"];
"1000144" -> "1000138"  [label="DDG: base"];
"1000144" -> "1000138"  [label="DDG: extent"];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000133"  [label="CFG: "];
"1000142" -> "1000139"  [label="CFG: "];
"1000143" -> "1000141"  [label="AST: "];
"1000143" -> "1000142"  [label="CFG: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000140" -> "1000138"  [label="AST: "];
"1000140" -> "1000144"  [label="CFG: "];
"1000140" -> "1000147"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000144" -> "1000140"  [label="AST: "];
"1000147" -> "1000140"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000140" -> "1000206"  [label="DDG: endpoints_adjustment_mode == kAdjustEndpointsAtBidiBoundary"];
"1000140" -> "1000206"  [label="DDG: AdjustEndpointsAtBidiBoundary(base, extent)"];
"1000140" -> "1000206"  [label="DDG: SelectionInFlatTree::Builder()\n                .SetBaseAndExtent(base.DeepEquivalent(),\n                                  extent.DeepEquivalent())\n                .Build()"];
"1000144" -> "1000140"  [label="DDG: base"];
"1000144" -> "1000140"  [label="DDG: extent"];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000145" -> "1000141"  [label="CFG: "];
"1000147" -> "1000141"  [label="CFG: "];
"1000141" -> "1000206"  [label="DDG: endpoints_adjustment_mode"];
"1000141" -> "1000206"  [label="DDG: kAdjustEndpointsAtBidiBoundary"];
"1000103" -> "1000141"  [label="DDG: endpoints_adjustment_mode"];
"1000142" -> "1000141"  [label="AST: "];
"1000142" -> "1000139"  [label="CFG: "];
"1000143" -> "1000142"  [label="CFG: "];
"1000144" -> "1000140"  [label="AST: "];
"1000144" -> "1000146"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000146" -> "1000144"  [label="AST: "];
"1000140" -> "1000144"  [label="CFG: "];
"1000144" -> "1000206"  [label="DDG: base"];
"1000144" -> "1000206"  [label="DDG: extent"];
"1000144" -> "1000138"  [label="DDG: base"];
"1000144" -> "1000138"  [label="DDG: extent"];
"1000144" -> "1000140"  [label="DDG: base"];
"1000144" -> "1000140"  [label="DDG: extent"];
"1000125" -> "1000144"  [label="DDG: base"];
"1000133" -> "1000144"  [label="DDG: extent"];
"1000145" -> "1000144"  [label="AST: "];
"1000145" -> "1000141"  [label="CFG: "];
"1000146" -> "1000145"  [label="CFG: "];
"1000146" -> "1000144"  [label="AST: "];
"1000146" -> "1000145"  [label="CFG: "];
"1000144" -> "1000146"  [label="CFG: "];
"1000147" -> "1000140"  [label="AST: "];
"1000147" -> "1000141"  [label="CFG: "];
"1000140" -> "1000147"  [label="CFG: "];
"1000149" -> "1000105"  [label="AST: "];
"1000150" -> "1000149"  [label="AST: "];
"1000157" -> "1000149"  [label="AST: "];
"1000167" -> "1000149"  [label="AST: "];
"1000153" -> "1000151"  [label="AST: "];
"1000153" -> "1000152"  [label="CFG: "];
"1000151" -> "1000153"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000150" -> "1000151"  [label="CFG: "];
"1000150" -> "1000154"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000154" -> "1000150"  [label="AST: "];
"1000159" -> "1000150"  [label="CFG: "];
"1000169" -> "1000150"  [label="CFG: "];
"1000150" -> "1000206"  [label="DDG: adjusted_selection.Base() != base.DeepEquivalent()"];
"1000150" -> "1000206"  [label="DDG: adjusted_selection.Extent() != extent.DeepEquivalent()"];
"1000150" -> "1000206"  [label="DDG: adjusted_selection.Base() != base.DeepEquivalent() ||\n      adjusted_selection.Extent() != extent.DeepEquivalent()"];
"1000151" -> "1000150"  [label="DDG: adjusted_selection.Base()"];
"1000151" -> "1000150"  [label="DDG: base.DeepEquivalent()"];
"1000154" -> "1000150"  [label="DDG: adjusted_selection.Extent()"];
"1000154" -> "1000150"  [label="DDG: extent.DeepEquivalent()"];
"1000151" -> "1000150"  [label="AST: "];
"1000151" -> "1000153"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000153" -> "1000151"  [label="AST: "];
"1000155" -> "1000151"  [label="CFG: "];
"1000150" -> "1000151"  [label="CFG: "];
"1000151" -> "1000206"  [label="DDG: adjusted_selection.Base()"];
"1000151" -> "1000206"  [label="DDG: base.DeepEquivalent()"];
"1000151" -> "1000150"  [label="DDG: adjusted_selection.Base()"];
"1000151" -> "1000150"  [label="DDG: base.DeepEquivalent()"];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000138"  [label="CFG: "];
"1000153" -> "1000152"  [label="CFG: "];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000206"  [label="DDG: granularity"];
"1000352" -> "1000100"  [label="AST: "];
"1000156" -> "1000154"  [label="AST: "];
"1000156" -> "1000155"  [label="CFG: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000154" -> "1000150"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000156" -> "1000154"  [label="AST: "];
"1000150" -> "1000154"  [label="CFG: "];
"1000154" -> "1000206"  [label="DDG: adjusted_selection.Extent()"];
"1000154" -> "1000206"  [label="DDG: extent.DeepEquivalent()"];
"1000154" -> "1000150"  [label="DDG: adjusted_selection.Extent()"];
"1000154" -> "1000150"  [label="DDG: extent.DeepEquivalent()"];
"1000155" -> "1000154"  [label="AST: "];
"1000155" -> "1000151"  [label="CFG: "];
"1000156" -> "1000155"  [label="CFG: "];
"1000157" -> "1000149"  [label="AST: "];
"1000158" -> "1000157"  [label="AST: "];
"1000161" -> "1000157"  [label="AST: "];
"1000164" -> "1000157"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000160" -> "1000159"  [label="CFG: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000163" -> "1000158"  [label="CFG: "];
"1000158" -> "1000206"  [label="DDG: original_base_in_flat_tree_"];
"1000158" -> "1000206"  [label="DDG: base.ToPositionWithAffinity()"];
"1000159" -> "1000158"  [label="AST: "];
"1000159" -> "1000150"  [label="CFG: "];
"1000160" -> "1000159"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000162" -> "1000163"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000161" -> "1000162"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000158"  [label="CFG: "];
"1000162" -> "1000163"  [label="CFG: "];
"1000161" -> "1000157"  [label="AST: "];
"1000161" -> "1000162"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000165" -> "1000161"  [label="CFG: "];
"1000161" -> "1000206"  [label="DDG: &GetDocument()"];
"1000161" -> "1000206"  [label="DDG: SetContext(&GetDocument())"];
"1000165" -> "1000164"  [label="AST: "];
"1000165" -> "1000161"  [label="CFG: "];
"1000166" -> "1000165"  [label="CFG: "];
"1000164" -> "1000157"  [label="AST: "];
"1000164" -> "1000166"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000166" -> "1000164"  [label="AST: "];
"1000184" -> "1000164"  [label="CFG: "];
"1000164" -> "1000206"  [label="DDG: builder.SetBaseAndExtent(adjusted_selection.Base(),\n                             adjusted_selection.Extent())"];
"1000164" -> "1000206"  [label="DDG: adjusted_selection.Extent()"];
"1000164" -> "1000206"  [label="DDG: adjusted_selection.Base()"];
"1000166" -> "1000164"  [label="AST: "];
"1000166" -> "1000165"  [label="CFG: "];
"1000164" -> "1000166"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000169" -> "1000150"  [label="CFG: "];
"1000173" -> "1000169"  [label="CFG: "];
"1000184" -> "1000169"  [label="CFG: "];
"1000169" -> "1000206"  [label="DDG: original_base.IsNotNull()"];
"1000167" -> "1000149"  [label="AST: "];
"1000168" -> "1000167"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000171" -> "1000170"  [label="AST: "];
"1000179" -> "1000170"  [label="AST: "];
"1000168" -> "1000167"  [label="AST: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000171"  [label="AST: "];
"1000175" -> "1000171"  [label="AST: "];
"1000172" -> "1000171"  [label="AST: "];
"1000172" -> "1000174"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000174" -> "1000172"  [label="AST: "];
"1000177" -> "1000172"  [label="CFG: "];
"1000180" -> "1000172"  [label="CFG: "];
"1000172" -> "1000206"  [label="DDG: CreateVisiblePosition(\n            Selection().ComputeVisibleSelectionInFlatTree().Base())\n            .DeepEquivalent() ==\n        CreateVisiblePosition(new_selection.Base()).DeepEquivalent()"];
"1000172" -> "1000206"  [label="DDG: CreateVisiblePosition(\n            Selection().ComputeVisibleSelectionInFlatTree().Base())\n            .DeepEquivalent()"];
"1000172" -> "1000206"  [label="DDG: CreateVisiblePosition(new_selection.Base()).DeepEquivalent()"];
"1000173" -> "1000172"  [label="AST: "];
"1000173" -> "1000169"  [label="CFG: "];
"1000174" -> "1000173"  [label="CFG: "];
"1000175" -> "1000171"  [label="AST: "];
"1000176" -> "1000175"  [label="AST: "];
"1000174" -> "1000172"  [label="AST: "];
"1000174" -> "1000173"  [label="CFG: "];
"1000172" -> "1000174"  [label="CFG: "];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000206"  [label="DDG: endpoints_adjustment_mode"];
"1000103" -> "1000141"  [label="DDG: endpoints_adjustment_mode"];
"1000353" -> "1000100"  [label="AST: "];
"1000177" -> "1000176"  [label="AST: "];
"1000177" -> "1000172"  [label="CFG: "];
"1000178" -> "1000177"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000176" -> "1000178"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000178" -> "1000176"  [label="AST: "];
"1000180" -> "1000176"  [label="CFG: "];
"1000176" -> "1000206"  [label="DDG: builder.SetBaseAndExtent(original_base.DeepEquivalent(),\n                               new_selection.Extent())"];
"1000176" -> "1000206"  [label="DDG: new_selection.Extent()"];
"1000176" -> "1000206"  [label="DDG: original_base.DeepEquivalent()"];
"1000178" -> "1000176"  [label="AST: "];
"1000178" -> "1000177"  [label="CFG: "];
"1000176" -> "1000178"  [label="CFG: "];
"1000181" -> "1000179"  [label="AST: "];
"1000181" -> "1000180"  [label="CFG: "];
"1000179" -> "1000181"  [label="CFG: "];
"1000179" -> "1000170"  [label="AST: "];
"1000179" -> "1000181"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000181" -> "1000179"  [label="AST: "];
"1000184" -> "1000179"  [label="CFG: "];
"1000179" -> "1000206"  [label="DDG: PositionInFlatTreeWithAffinity()"];
"1000179" -> "1000206"  [label="DDG: original_base_in_flat_tree_"];
"1000180" -> "1000179"  [label="AST: "];
"1000180" -> "1000176"  [label="CFG: "];
"1000180" -> "1000172"  [label="CFG: "];
"1000181" -> "1000180"  [label="CFG: "];
"1000183" -> "1000105"  [label="AST: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000185" -> "1000183"  [label="AST: "];
"1000188" -> "1000183"  [label="CFG: "];
"1000183" -> "1000206"  [label="DDG: builder.Build()"];
"1000183" -> "1000196"  [label="DDG: selection_in_flat_tree"];
"1000184" -> "1000183"  [label="AST: "];
"1000184" -> "1000164"  [label="CFG: "];
"1000184" -> "1000179"  [label="CFG: "];
"1000184" -> "1000169"  [label="CFG: "];
"1000185" -> "1000184"  [label="CFG: "];
"1000185" -> "1000183"  [label="AST: "];
"1000185" -> "1000184"  [label="CFG: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000187" -> "1000105"  [label="AST: "];
"1000187" -> "1000189"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000189" -> "1000187"  [label="AST: "];
"1000195" -> "1000187"  [label="CFG: "];
"1000187" -> "1000206"  [label="DDG: should_show_handle"];
"1000187" -> "1000206"  [label="DDG: handle_visibility == HandleVisibility::kVisible"];
"1000189" -> "1000187"  [label="DDG: handle_visibility"];
"1000189" -> "1000187"  [label="DDG: HandleVisibility::kVisible"];
"1000187" -> "1000198"  [label="DDG: should_show_handle"];
"1000188" -> "1000187"  [label="AST: "];
"1000188" -> "1000183"  [label="CFG: "];
"1000190" -> "1000188"  [label="CFG: "];
"1000191" -> "1000189"  [label="AST: "];
"1000191" -> "1000190"  [label="CFG: "];
"1000189" -> "1000191"  [label="CFG: "];
"1000189" -> "1000187"  [label="AST: "];
"1000189" -> "1000191"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000191" -> "1000189"  [label="AST: "];
"1000187" -> "1000189"  [label="CFG: "];
"1000189" -> "1000206"  [label="DDG: handle_visibility"];
"1000189" -> "1000206"  [label="DDG: HandleVisibility::kVisible"];
"1000189" -> "1000187"  [label="DDG: handle_visibility"];
"1000189" -> "1000187"  [label="DDG: HandleVisibility::kVisible"];
"1000104" -> "1000189"  [label="DDG: handle_visibility"];
"1000190" -> "1000189"  [label="AST: "];
"1000190" -> "1000188"  [label="CFG: "];
"1000191" -> "1000190"  [label="CFG: "];
"1000192" -> "1000105"  [label="AST: "];
"1000193" -> "1000192"  [label="AST: "];
"1000201" -> "1000192"  [label="AST: "];
"1000193" -> "1000192"  [label="AST: "];
"1000193" -> "1000194"  [label="CFG: "];
"1000193" -> "1000198"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000198" -> "1000193"  [label="AST: "];
"1000201" -> "1000193"  [label="CFG: "];
"1000204" -> "1000193"  [label="CFG: "];
"1000193" -> "1000206"  [label="DDG: Selection().ComputeVisibleSelectionInFlatTree() ==\n           CreateVisibleSelection(selection_in_flat_tree)"];
"1000193" -> "1000206"  [label="DDG: Selection().ComputeVisibleSelectionInFlatTree() ==\n           CreateVisibleSelection(selection_in_flat_tree) &&\n      Selection().IsHandleVisible() == should_show_handle"];
"1000193" -> "1000206"  [label="DDG: Selection().IsHandleVisible() == should_show_handle"];
"1000194" -> "1000193"  [label="DDG: Selection().ComputeVisibleSelectionInFlatTree()"];
"1000194" -> "1000193"  [label="DDG: CreateVisibleSelection(selection_in_flat_tree)"];
"1000198" -> "1000193"  [label="DDG: Selection().IsHandleVisible()"];
"1000198" -> "1000193"  [label="DDG: should_show_handle"];
"1000194" -> "1000193"  [label="AST: "];
"1000194" -> "1000196"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000196" -> "1000194"  [label="AST: "];
"1000199" -> "1000194"  [label="CFG: "];
"1000193" -> "1000194"  [label="CFG: "];
"1000194" -> "1000206"  [label="DDG: Selection().ComputeVisibleSelectionInFlatTree()"];
"1000194" -> "1000206"  [label="DDG: CreateVisibleSelection(selection_in_flat_tree)"];
"1000194" -> "1000193"  [label="DDG: Selection().ComputeVisibleSelectionInFlatTree()"];
"1000194" -> "1000193"  [label="DDG: CreateVisibleSelection(selection_in_flat_tree)"];
"1000196" -> "1000194"  [label="DDG: selection_in_flat_tree"];
"1000195" -> "1000194"  [label="AST: "];
"1000195" -> "1000187"  [label="CFG: "];
"1000197" -> "1000195"  [label="CFG: "];
"1000104" -> "1000100"  [label="AST: "];
"1000104" -> "1000206"  [label="DDG: handle_visibility"];
"1000104" -> "1000189"  [label="DDG: handle_visibility"];
"1000354" -> "1000100"  [label="AST: "];
"1000105" -> "1000100"  [label="AST: "];
"1000106" -> "1000105"  [label="AST: "];
"1000107" -> "1000105"  [label="AST: "];
"1000108" -> "1000105"  [label="AST: "];
"1000112" -> "1000105"  [label="AST: "];
"1000113" -> "1000105"  [label="AST: "];
"1000116" -> "1000105"  [label="AST: "];
"1000117" -> "1000105"  [label="AST: "];
"1000124" -> "1000105"  [label="AST: "];
"1000125" -> "1000105"  [label="AST: "];
"1000132" -> "1000105"  [label="AST: "];
"1000133" -> "1000105"  [label="AST: "];
"1000137" -> "1000105"  [label="AST: "];
"1000138" -> "1000105"  [label="AST: "];
"1000148" -> "1000105"  [label="AST: "];
"1000149" -> "1000105"  [label="AST: "];
"1000182" -> "1000105"  [label="AST: "];
"1000183" -> "1000105"  [label="AST: "];
"1000186" -> "1000105"  [label="AST: "];
"1000187" -> "1000105"  [label="AST: "];
"1000192" -> "1000105"  [label="AST: "];
"1000202" -> "1000105"  [label="AST: "];
"1000196" -> "1000194"  [label="AST: "];
"1000196" -> "1000197"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000194" -> "1000196"  [label="CFG: "];
"1000196" -> "1000206"  [label="DDG: selection_in_flat_tree"];
"1000196" -> "1000194"  [label="DDG: selection_in_flat_tree"];
"1000183" -> "1000196"  [label="DDG: selection_in_flat_tree"];
"1000196" -> "1000203"  [label="DDG: selection_in_flat_tree"];
"1000197" -> "1000196"  [label="AST: "];
"1000197" -> "1000195"  [label="CFG: "];
"1000196" -> "1000197"  [label="CFG: "];
"1000200" -> "1000198"  [label="AST: "];
"1000200" -> "1000199"  [label="CFG: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000198" -> "1000193"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000193" -> "1000198"  [label="CFG: "];
"1000198" -> "1000206"  [label="DDG: should_show_handle"];
"1000198" -> "1000206"  [label="DDG: Selection().IsHandleVisible()"];
"1000198" -> "1000193"  [label="DDG: Selection().IsHandleVisible()"];
"1000198" -> "1000193"  [label="DDG: should_show_handle"];
"1000187" -> "1000198"  [label="DDG: should_show_handle"];
"1000199" -> "1000198"  [label="AST: "];
"1000199" -> "1000194"  [label="CFG: "];
"1000200" -> "1000199"  [label="CFG: "];
"1000201" -> "1000192"  [label="AST: "];
"1000201" -> "1000193"  [label="CFG: "];
"1000206" -> "1000201"  [label="CFG: "];
"1000201" -> "1000206"  [label="DDG: <RET>"];
"1000202" -> "1000105"  [label="AST: "];
"1000202" -> "1000205"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000205" -> "1000202"  [label="AST: "];
"1000206" -> "1000202"  [label="CFG: "];
"1000202" -> "1000206"  [label="DDG: ConvertToSelectionInDOMTree(selection_in_flat_tree)"];
"1000202" -> "1000206"  [label="DDG: SetSelectionData::Builder()\n          .SetShouldCloseTyping(true)\n           .SetShouldClearTypingStyle(true)\n           .SetCursorAlignOnScroll(CursorAlignOnScroll::kIfNeeded)\n           .SetGranularity(granularity)\n          .SetShouldShowHandle(should_show_handle)\n           .Build()"];
"1000202" -> "1000206"  [label="DDG: Selection().SetSelection(\n       ConvertToSelectionInDOMTree(selection_in_flat_tree),\n      SetSelectionData::Builder()\n          .SetShouldCloseTyping(true)\n           .SetShouldClearTypingStyle(true)\n           .SetCursorAlignOnScroll(CursorAlignOnScroll::kIfNeeded)\n           .SetGranularity(granularity)\n          .SetShouldShowHandle(should_show_handle)\n           .Build())"];
"1000203" -> "1000202"  [label="DDG: selection_in_flat_tree"];
"1000204" -> "1000203"  [label="AST: "];
"1000204" -> "1000193"  [label="CFG: "];
"1000203" -> "1000204"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000203" -> "1000204"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000203"  [label="CFG: "];
"1000203" -> "1000206"  [label="DDG: selection_in_flat_tree"];
"1000203" -> "1000202"  [label="DDG: selection_in_flat_tree"];
"1000196" -> "1000203"  [label="DDG: selection_in_flat_tree"];
"1000205" -> "1000202"  [label="AST: "];
"1000205" -> "1000203"  [label="CFG: "];
"1000202" -> "1000205"  [label="CFG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000100"  [label="CFG: "];
"1000109" -> "1000106"  [label="CFG: "];
"1000106" -> "1000206"  [label="DDG: GetDocument().UpdateStyleAndLayoutIgnorePendingStylesheets()"];
"1000108" -> "1000105"  [label="AST: "];
"1000108" -> "1000110"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000110" -> "1000108"  [label="AST: "];
"1000114" -> "1000108"  [label="CFG: "];
"1000108" -> "1000206"  [label="DDG: CreateVisibleSelection(passed_selection)"];
"1000108" -> "1000206"  [label="DDG: new_selection"];
"1000110" -> "1000108"  [label="DDG: passed_selection"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000106"  [label="CFG: "];
"1000111" -> "1000109"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000109"  [label="CFG: "];
"1000110" -> "1000111"  [label="CFG: "];
"1000110" -> "1000108"  [label="AST: "];
"1000110" -> "1000111"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000108" -> "1000110"  [label="CFG: "];
"1000110" -> "1000206"  [label="DDG: passed_selection"];
"1000110" -> "1000108"  [label="DDG: passed_selection"];
"1000101" -> "1000110"  [label="DDG: passed_selection"];
}
