digraph "1_linux_6e5714eaf77d79ae1c8b47e3e040ff5411b717ec_8" {
"1000162" [label="(MethodReturn,__u32)"];
"1000102" [label="(MethodParameterIn,__be32 *saddr)"];
"1000246" [label="(MethodParameterOut,__be32 *saddr)"];
"1000103" [label="(MethodParameterIn,__be32 *daddr)"];
"1000247" [label="(MethodParameterOut,__be32 *daddr)"];
"1000113" [label="(Call,memcpy(hash, saddr, 16))"];
"1000115" [label="(Identifier,saddr)"];
"1000116" [label="(Literal,16)"];
"1000114" [label="(Identifier,hash)"];
"1000117" [label="(Call,hash[4] = ((__force u16)sport << 16) + (__force u16)dport)"];
"1000118" [label="(Call,hash[4])"];
"1000119" [label="(Identifier,hash)"];
"1000121" [label="(Call,((__force u16)sport << 16) + (__force u16)dport)"];
"1000122" [label="(Call,(__force u16)sport << 16)"];
"1000123" [label="(Call,(__force u16)sport)"];
"1000125" [label="(Identifier,sport)"];
"1000126" [label="(Literal,16)"];
"1000127" [label="(Call,(__force u16)dport)"];
"1000129" [label="(Identifier,dport)"];
"1000120" [label="(Literal,4)"];
"1000130" [label="(Call,memcpy(&hash[5], keyptr->secret, sizeof(__u32) * 7))"];
"1000134" [label="(Literal,5)"];
"1000135" [label="(Call,keyptr->secret)"];
"1000136" [label="(Identifier,keyptr)"];
"1000137" [label="(FieldIdentifier,secret)"];
"1000138" [label="(Call,sizeof(__u32) * 7)"];
"1000139" [label="(Call,sizeof(__u32))"];
"1000140" [label="(Identifier,__u32)"];
"1000141" [label="(Literal,7)"];
"1000131" [label="(Call,&hash[5])"];
"1000132" [label="(Call,hash[5])"];
"1000133" [label="(Identifier,hash)"];
"1000142" [label="(Call,seq = twothirdsMD4Transform((const __u32 *)daddr, hash) & HASH_MASK)"];
"1000143" [label="(Identifier,seq)"];
"1000146" [label="(Call,(const __u32 *)daddr)"];
"1000148" [label="(Identifier,daddr)"];
"1000149" [label="(Identifier,hash)"];
"1000150" [label="(Identifier,HASH_MASK)"];
"1000144" [label="(Call,twothirdsMD4Transform((const __u32 *)daddr, hash) & HASH_MASK)"];
"1000145" [label="(Call,twothirdsMD4Transform((const __u32 *)daddr, hash))"];
"1000151" [label="(Call,seq += keyptr->count)"];
"1000152" [label="(Identifier,seq)"];
"1000155" [label="(FieldIdentifier,count)"];
"1000153" [label="(Call,keyptr->count)"];
"1000154" [label="(Identifier,keyptr)"];
"1000156" [label="(Call,seq += ktime_to_ns(ktime_get_real()))"];
"1000157" [label="(Identifier,seq)"];
"1000159" [label="(Call,ktime_get_real())"];
"1000158" [label="(Call,ktime_to_ns(ktime_get_real()))"];
"1000160" [label="(Return,return seq;)"];
"1000161" [label="(Identifier,seq)"];
"1000105" [label="(MethodParameterIn,__be16 dport)"];
"1000249" [label="(MethodParameterOut,__be16 dport)"];
"1000104" [label="(MethodParameterIn,__be16 sport)"];
"1000248" [label="(MethodParameterOut,__be16 sport)"];
"1000106" [label="(Block,)"];
"1000110" [label="(Call,*keyptr = get_keyptr())"];
"1000111" [label="(Identifier,keyptr)"];
"1000112" [label="(Call,get_keyptr())"];
"1000162" -> "1000101"  [label="AST: "];
"1000162" -> "1000160"  [label="CFG: "];
"1000130" -> "1000162"  [label="DDG: memcpy(&hash[5], keyptr->secret, sizeof(__u32) * 7)"];
"1000130" -> "1000162"  [label="DDG: &hash[5]"];
"1000130" -> "1000162"  [label="DDG: keyptr->secret"];
"1000130" -> "1000162"  [label="DDG: sizeof(__u32) * 7"];
"1000123" -> "1000162"  [label="DDG: sport"];
"1000156" -> "1000162"  [label="DDG: seq"];
"1000156" -> "1000162"  [label="DDG: ktime_to_ns(ktime_get_real())"];
"1000104" -> "1000162"  [label="DDG: sport"];
"1000105" -> "1000162"  [label="DDG: dport"];
"1000139" -> "1000162"  [label="DDG: __u32"];
"1000117" -> "1000162"  [label="DDG: hash[4]"];
"1000117" -> "1000162"  [label="DDG: ((__force u16)sport << 16) + (__force u16)dport"];
"1000144" -> "1000162"  [label="DDG: HASH_MASK"];
"1000144" -> "1000162"  [label="DDG: twothirdsMD4Transform((const __u32 *)daddr, hash)"];
"1000145" -> "1000162"  [label="DDG: (const __u32 *)daddr"];
"1000145" -> "1000162"  [label="DDG: hash"];
"1000110" -> "1000162"  [label="DDG: keyptr"];
"1000110" -> "1000162"  [label="DDG: get_keyptr()"];
"1000158" -> "1000162"  [label="DDG: ktime_get_real()"];
"1000122" -> "1000162"  [label="DDG: (__force u16)sport"];
"1000127" -> "1000162"  [label="DDG: dport"];
"1000142" -> "1000162"  [label="DDG: twothirdsMD4Transform((const __u32 *)daddr, hash) & HASH_MASK"];
"1000103" -> "1000162"  [label="DDG: daddr"];
"1000113" -> "1000162"  [label="DDG: saddr"];
"1000113" -> "1000162"  [label="DDG: memcpy(hash, saddr, 16)"];
"1000146" -> "1000162"  [label="DDG: daddr"];
"1000121" -> "1000162"  [label="DDG: (__force u16)dport"];
"1000121" -> "1000162"  [label="DDG: (__force u16)sport << 16"];
"1000151" -> "1000162"  [label="DDG: keyptr->count"];
"1000102" -> "1000162"  [label="DDG: saddr"];
"1000160" -> "1000162"  [label="DDG: <RET>"];
"1000102" -> "1000101"  [label="AST: "];
"1000102" -> "1000162"  [label="DDG: saddr"];
"1000102" -> "1000113"  [label="DDG: saddr"];
"1000246" -> "1000101"  [label="AST: "];
"1000103" -> "1000101"  [label="AST: "];
"1000103" -> "1000162"  [label="DDG: daddr"];
"1000103" -> "1000146"  [label="DDG: daddr"];
"1000247" -> "1000101"  [label="AST: "];
"1000113" -> "1000106"  [label="AST: "];
"1000113" -> "1000116"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000116" -> "1000113"  [label="AST: "];
"1000119" -> "1000113"  [label="CFG: "];
"1000113" -> "1000162"  [label="DDG: saddr"];
"1000113" -> "1000162"  [label="DDG: memcpy(hash, saddr, 16)"];
"1000102" -> "1000113"  [label="DDG: saddr"];
"1000113" -> "1000145"  [label="DDG: hash"];
"1000115" -> "1000113"  [label="AST: "];
"1000115" -> "1000114"  [label="CFG: "];
"1000116" -> "1000115"  [label="CFG: "];
"1000116" -> "1000113"  [label="AST: "];
"1000116" -> "1000115"  [label="CFG: "];
"1000113" -> "1000116"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000110"  [label="CFG: "];
"1000115" -> "1000114"  [label="CFG: "];
"1000117" -> "1000106"  [label="AST: "];
"1000117" -> "1000121"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000121" -> "1000117"  [label="AST: "];
"1000133" -> "1000117"  [label="CFG: "];
"1000117" -> "1000162"  [label="DDG: hash[4]"];
"1000117" -> "1000162"  [label="DDG: ((__force u16)sport << 16) + (__force u16)dport"];
"1000122" -> "1000117"  [label="DDG: (__force u16)sport"];
"1000122" -> "1000117"  [label="DDG: 16"];
"1000127" -> "1000117"  [label="DDG: dport"];
"1000117" -> "1000145"  [label="DDG: hash[4]"];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="AST: "];
"1000124" -> "1000118"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000113"  [label="CFG: "];
"1000120" -> "1000119"  [label="CFG: "];
"1000121" -> "1000117"  [label="AST: "];
"1000121" -> "1000127"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000127" -> "1000121"  [label="AST: "];
"1000117" -> "1000121"  [label="CFG: "];
"1000121" -> "1000162"  [label="DDG: (__force u16)dport"];
"1000121" -> "1000162"  [label="DDG: (__force u16)sport << 16"];
"1000122" -> "1000121"  [label="DDG: (__force u16)sport"];
"1000122" -> "1000121"  [label="DDG: 16"];
"1000127" -> "1000121"  [label="DDG: dport"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000126"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000126" -> "1000122"  [label="AST: "];
"1000128" -> "1000122"  [label="CFG: "];
"1000122" -> "1000162"  [label="DDG: (__force u16)sport"];
"1000122" -> "1000117"  [label="DDG: (__force u16)sport"];
"1000122" -> "1000117"  [label="DDG: 16"];
"1000122" -> "1000121"  [label="DDG: (__force u16)sport"];
"1000122" -> "1000121"  [label="DDG: 16"];
"1000123" -> "1000122"  [label="DDG: sport"];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000126" -> "1000123"  [label="CFG: "];
"1000123" -> "1000162"  [label="DDG: sport"];
"1000123" -> "1000122"  [label="DDG: sport"];
"1000104" -> "1000123"  [label="DDG: sport"];
"1000125" -> "1000123"  [label="AST: "];
"1000125" -> "1000124"  [label="CFG: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000126" -> "1000122"  [label="AST: "];
"1000126" -> "1000123"  [label="CFG: "];
"1000122" -> "1000126"  [label="CFG: "];
"1000127" -> "1000121"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000121" -> "1000127"  [label="CFG: "];
"1000127" -> "1000162"  [label="DDG: dport"];
"1000127" -> "1000117"  [label="DDG: dport"];
"1000127" -> "1000121"  [label="DDG: dport"];
"1000105" -> "1000127"  [label="DDG: dport"];
"1000129" -> "1000127"  [label="AST: "];
"1000129" -> "1000128"  [label="CFG: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000120" -> "1000118"  [label="AST: "];
"1000120" -> "1000119"  [label="CFG: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000130" -> "1000106"  [label="AST: "];
"1000130" -> "1000138"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000135" -> "1000130"  [label="AST: "];
"1000138" -> "1000130"  [label="AST: "];
"1000143" -> "1000130"  [label="CFG: "];
"1000130" -> "1000162"  [label="DDG: memcpy(&hash[5], keyptr->secret, sizeof(__u32) * 7)"];
"1000130" -> "1000162"  [label="DDG: &hash[5]"];
"1000130" -> "1000162"  [label="DDG: keyptr->secret"];
"1000130" -> "1000162"  [label="DDG: sizeof(__u32) * 7"];
"1000138" -> "1000130"  [label="DDG: 7"];
"1000134" -> "1000132"  [label="AST: "];
"1000134" -> "1000133"  [label="CFG: "];
"1000132" -> "1000134"  [label="CFG: "];
"1000135" -> "1000130"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000140" -> "1000135"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000131"  [label="CFG: "];
"1000137" -> "1000136"  [label="CFG: "];
"1000137" -> "1000135"  [label="AST: "];
"1000137" -> "1000136"  [label="CFG: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000138" -> "1000130"  [label="AST: "];
"1000138" -> "1000141"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000141" -> "1000138"  [label="AST: "];
"1000130" -> "1000138"  [label="CFG: "];
"1000138" -> "1000130"  [label="DDG: 7"];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000140"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="CFG: "];
"1000139" -> "1000162"  [label="DDG: __u32"];
"1000140" -> "1000139"  [label="AST: "];
"1000140" -> "1000135"  [label="CFG: "];
"1000139" -> "1000140"  [label="CFG: "];
"1000141" -> "1000138"  [label="AST: "];
"1000141" -> "1000139"  [label="CFG: "];
"1000138" -> "1000141"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000132"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000136" -> "1000131"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000134"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="AST: "];
"1000131" -> "1000132"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000117"  [label="CFG: "];
"1000134" -> "1000133"  [label="CFG: "];
"1000142" -> "1000106"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000152" -> "1000142"  [label="CFG: "];
"1000142" -> "1000162"  [label="DDG: twothirdsMD4Transform((const __u32 *)daddr, hash) & HASH_MASK"];
"1000144" -> "1000142"  [label="DDG: twothirdsMD4Transform((const __u32 *)daddr, hash)"];
"1000144" -> "1000142"  [label="DDG: HASH_MASK"];
"1000142" -> "1000151"  [label="DDG: seq"];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000130"  [label="CFG: "];
"1000147" -> "1000143"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000149" -> "1000146"  [label="CFG: "];
"1000146" -> "1000162"  [label="DDG: daddr"];
"1000146" -> "1000145"  [label="DDG: daddr"];
"1000103" -> "1000146"  [label="DDG: daddr"];
"1000148" -> "1000146"  [label="AST: "];
"1000148" -> "1000147"  [label="CFG: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000149" -> "1000145"  [label="AST: "];
"1000149" -> "1000146"  [label="CFG: "];
"1000145" -> "1000149"  [label="CFG: "];
"1000150" -> "1000144"  [label="AST: "];
"1000150" -> "1000145"  [label="CFG: "];
"1000144" -> "1000150"  [label="CFG: "];
"1000144" -> "1000142"  [label="AST: "];
"1000144" -> "1000150"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000150" -> "1000144"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000144" -> "1000162"  [label="DDG: HASH_MASK"];
"1000144" -> "1000162"  [label="DDG: twothirdsMD4Transform((const __u32 *)daddr, hash)"];
"1000144" -> "1000142"  [label="DDG: twothirdsMD4Transform((const __u32 *)daddr, hash)"];
"1000144" -> "1000142"  [label="DDG: HASH_MASK"];
"1000145" -> "1000144"  [label="DDG: (const __u32 *)daddr"];
"1000145" -> "1000144"  [label="DDG: hash"];
"1000145" -> "1000144"  [label="AST: "];
"1000145" -> "1000149"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000149" -> "1000145"  [label="AST: "];
"1000150" -> "1000145"  [label="CFG: "];
"1000145" -> "1000162"  [label="DDG: (const __u32 *)daddr"];
"1000145" -> "1000162"  [label="DDG: hash"];
"1000145" -> "1000144"  [label="DDG: (const __u32 *)daddr"];
"1000145" -> "1000144"  [label="DDG: hash"];
"1000146" -> "1000145"  [label="DDG: daddr"];
"1000113" -> "1000145"  [label="DDG: hash"];
"1000117" -> "1000145"  [label="DDG: hash[4]"];
"1000151" -> "1000106"  [label="AST: "];
"1000151" -> "1000153"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000153" -> "1000151"  [label="AST: "];
"1000157" -> "1000151"  [label="CFG: "];
"1000151" -> "1000162"  [label="DDG: keyptr->count"];
"1000142" -> "1000151"  [label="DDG: seq"];
"1000151" -> "1000156"  [label="DDG: seq"];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000142"  [label="CFG: "];
"1000154" -> "1000152"  [label="CFG: "];
"1000155" -> "1000153"  [label="AST: "];
"1000155" -> "1000154"  [label="CFG: "];
"1000153" -> "1000155"  [label="CFG: "];
"1000153" -> "1000151"  [label="AST: "];
"1000153" -> "1000155"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000155" -> "1000153"  [label="AST: "];
"1000151" -> "1000153"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000154" -> "1000152"  [label="CFG: "];
"1000155" -> "1000154"  [label="CFG: "];
"1000156" -> "1000106"  [label="AST: "];
"1000156" -> "1000158"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000158" -> "1000156"  [label="AST: "];
"1000161" -> "1000156"  [label="CFG: "];
"1000156" -> "1000162"  [label="DDG: seq"];
"1000156" -> "1000162"  [label="DDG: ktime_to_ns(ktime_get_real())"];
"1000158" -> "1000156"  [label="DDG: ktime_get_real()"];
"1000151" -> "1000156"  [label="DDG: seq"];
"1000156" -> "1000160"  [label="DDG: seq"];
"1000157" -> "1000156"  [label="AST: "];
"1000157" -> "1000151"  [label="CFG: "];
"1000159" -> "1000157"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000159" -> "1000157"  [label="CFG: "];
"1000158" -> "1000159"  [label="CFG: "];
"1000158" -> "1000156"  [label="AST: "];
"1000158" -> "1000159"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000156" -> "1000158"  [label="CFG: "];
"1000158" -> "1000162"  [label="DDG: ktime_get_real()"];
"1000158" -> "1000156"  [label="DDG: ktime_get_real()"];
"1000160" -> "1000106"  [label="AST: "];
"1000160" -> "1000161"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000162" -> "1000160"  [label="CFG: "];
"1000160" -> "1000162"  [label="DDG: <RET>"];
"1000161" -> "1000160"  [label="DDG: seq"];
"1000156" -> "1000160"  [label="DDG: seq"];
"1000161" -> "1000160"  [label="AST: "];
"1000161" -> "1000156"  [label="CFG: "];
"1000160" -> "1000161"  [label="CFG: "];
"1000161" -> "1000160"  [label="DDG: seq"];
"1000105" -> "1000101"  [label="AST: "];
"1000105" -> "1000162"  [label="DDG: dport"];
"1000105" -> "1000127"  [label="DDG: dport"];
"1000249" -> "1000101"  [label="AST: "];
"1000104" -> "1000101"  [label="AST: "];
"1000104" -> "1000162"  [label="DDG: sport"];
"1000104" -> "1000123"  [label="DDG: sport"];
"1000248" -> "1000101"  [label="AST: "];
"1000106" -> "1000101"  [label="AST: "];
"1000107" -> "1000106"  [label="AST: "];
"1000108" -> "1000106"  [label="AST: "];
"1000109" -> "1000106"  [label="AST: "];
"1000110" -> "1000106"  [label="AST: "];
"1000113" -> "1000106"  [label="AST: "];
"1000117" -> "1000106"  [label="AST: "];
"1000130" -> "1000106"  [label="AST: "];
"1000142" -> "1000106"  [label="AST: "];
"1000151" -> "1000106"  [label="AST: "];
"1000156" -> "1000106"  [label="AST: "];
"1000160" -> "1000106"  [label="AST: "];
"1000110" -> "1000106"  [label="AST: "];
"1000110" -> "1000112"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000112" -> "1000110"  [label="AST: "];
"1000114" -> "1000110"  [label="CFG: "];
"1000110" -> "1000162"  [label="DDG: keyptr"];
"1000110" -> "1000162"  [label="DDG: get_keyptr()"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000101"  [label="CFG: "];
"1000112" -> "1000111"  [label="CFG: "];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000111"  [label="CFG: "];
"1000110" -> "1000112"  [label="CFG: "];
}
