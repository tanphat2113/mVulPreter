digraph "0_Chrome_33827275411b33371e7bb750cce20f11de85002d_3" {
"1000138" [label="(MethodReturn,void)"];
"1000101" [label="(MethodParameterIn,const VisiblePosition& base_position)"];
"1000197" [label="(MethodParameterOut,const VisiblePosition& base_position)"];
"1000109" [label="(ControlStructure,if (new_selection.IsNone()))"];
"1000110" [label="(Call,new_selection.IsNone())"];
"1000111" [label="(Return,return;)"];
"1000113" [label="(Call,& visible_selection =\n      CreateVisibleSelectionWithGranularity(new_selection, granularity))"];
"1000114" [label="(Identifier,visible_selection)"];
"1000116" [label="(Identifier,new_selection)"];
"1000117" [label="(Identifier,granularity)"];
"1000115" [label="(Call,CreateVisibleSelectionWithGranularity(new_selection, granularity))"];
"1000118" [label="(ControlStructure,if (visible_selection.IsNone()))"];
"1000119" [label="(Call,visible_selection.IsNone())"];
"1000120" [label="(Return,return;)"];
"1000102" [label="(MethodParameterIn,const VisiblePosition& extent_position)"];
"1000198" [label="(MethodParameterOut,const VisiblePosition& extent_position)"];
"1000122" [label="(ControlStructure,if (visible_selection.IsBaseFirst()))"];
"1000124" [label="(Block,)"];
"1000123" [label="(Call,visible_selection.IsBaseFirst())"];
"1000126" [label="(Call,visible_selection.Start())"];
"1000125" [label="(Call,builder.SetBaseAndExtent(visible_selection.Start(),\n                             visible_selection.End()))"];
"1000127" [label="(Call,visible_selection.End())"];
"1000128" [label="(ControlStructure,else)"];
"1000129" [label="(Block,)"];
"1000131" [label="(Call,visible_selection.End())"];
"1000130" [label="(Call,builder.SetBaseAndExtent(visible_selection.End(),\n                              visible_selection.Start()))"];
"1000132" [label="(Call,visible_selection.Start())"];
"1000134" [label="(Call,visible_selection.Affinity())"];
"1000133" [label="(Call,builder.SetAffinity(visible_selection.Affinity()))"];
"1000136" [label="(Call,builder.Build())"];
"1000135" [label="(Call,SetSelection(builder.Build(), SetSelectionData::Builder()\n                                     .SetShouldCloseTyping(true)\n                                     .SetShouldClearTypingStyle(true)\n                                     .SetGranularity(granularity)\n                                    .SetShouldShowHandle(IsHandleVisible())\n                                     .Build()))"];
"1000137" [label="(Call,SetSelectionData::Builder()\n                                     .SetShouldCloseTyping(true)\n                                     .SetShouldClearTypingStyle(true)\n                                     .SetGranularity(granularity)\n                                    .SetShouldShowHandle(IsHandleVisible())\n                                     .Build())"];
"1000103" [label="(MethodParameterIn,TextGranularity granularity)"];
"1000199" [label="(MethodParameterOut,TextGranularity granularity)"];
"1000104" [label="(Block,)"];
"1000106" [label="(Call,new_selection =\n      SelectionInDOMTree::Builder()\n           .SetBaseAndExtentDeprecated(base_position.DeepEquivalent(),\n                                       extent_position.DeepEquivalent())\n           .SetAffinity(base_position.Affinity())\n           .Build())"];
"1000107" [label="(Identifier,new_selection)"];
"1000108" [label="(Call,SelectionInDOMTree::Builder()\n           .SetBaseAndExtentDeprecated(base_position.DeepEquivalent(),\n                                       extent_position.DeepEquivalent())\n           .SetAffinity(base_position.Affinity())\n           .Build())"];
"1000138" -> "1000100"  [label="AST: "];
"1000138" -> "1000111"  [label="CFG: "];
"1000138" -> "1000120"  [label="CFG: "];
"1000138" -> "1000135"  [label="CFG: "];
"1000111" -> "1000138"  [label="DDG: <RET>"];
"1000120" -> "1000138"  [label="DDG: <RET>"];
"1000115" -> "1000138"  [label="DDG: granularity"];
"1000115" -> "1000138"  [label="DDG: new_selection"];
"1000125" -> "1000138"  [label="DDG: builder.SetBaseAndExtent(visible_selection.Start(),\n                             visible_selection.End())"];
"1000125" -> "1000138"  [label="DDG: visible_selection.End()"];
"1000125" -> "1000138"  [label="DDG: visible_selection.Start()"];
"1000106" -> "1000138"  [label="DDG: SelectionInDOMTree::Builder()\n           .SetBaseAndExtentDeprecated(base_position.DeepEquivalent(),\n                                       extent_position.DeepEquivalent())\n           .SetAffinity(base_position.Affinity())\n           .Build()"];
"1000106" -> "1000138"  [label="DDG: new_selection"];
"1000113" -> "1000138"  [label="DDG: visible_selection"];
"1000113" -> "1000138"  [label="DDG: CreateVisibleSelectionWithGranularity(new_selection, granularity)"];
"1000135" -> "1000138"  [label="DDG: builder.Build()"];
"1000135" -> "1000138"  [label="DDG: SetSelection(builder.Build(), SetSelectionData::Builder()\n                                     .SetShouldCloseTyping(true)\n                                     .SetShouldClearTypingStyle(true)\n                                     .SetGranularity(granularity)\n                                    .SetShouldShowHandle(IsHandleVisible())\n                                     .Build())"];
"1000135" -> "1000138"  [label="DDG: SetSelectionData::Builder()\n                                     .SetShouldCloseTyping(true)\n                                     .SetShouldClearTypingStyle(true)\n                                     .SetGranularity(granularity)\n                                    .SetShouldShowHandle(IsHandleVisible())\n                                     .Build()"];
"1000119" -> "1000138"  [label="DDG: visible_selection.IsNone()"];
"1000130" -> "1000138"  [label="DDG: visible_selection.End()"];
"1000130" -> "1000138"  [label="DDG: builder.SetBaseAndExtent(visible_selection.End(),\n                              visible_selection.Start())"];
"1000130" -> "1000138"  [label="DDG: visible_selection.Start()"];
"1000123" -> "1000138"  [label="DDG: visible_selection.IsBaseFirst()"];
"1000103" -> "1000138"  [label="DDG: granularity"];
"1000133" -> "1000138"  [label="DDG: visible_selection.Affinity()"];
"1000133" -> "1000138"  [label="DDG: builder.SetAffinity(visible_selection.Affinity())"];
"1000102" -> "1000138"  [label="DDG: extent_position"];
"1000101" -> "1000138"  [label="DDG: base_position"];
"1000110" -> "1000138"  [label="DDG: new_selection.IsNone()"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000138"  [label="DDG: base_position"];
"1000197" -> "1000100"  [label="AST: "];
"1000109" -> "1000104"  [label="AST: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000106"  [label="CFG: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000114" -> "1000110"  [label="CFG: "];
"1000110" -> "1000138"  [label="DDG: new_selection.IsNone()"];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000138" -> "1000111"  [label="CFG: "];
"1000111" -> "1000138"  [label="DDG: <RET>"];
"1000113" -> "1000104"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000119" -> "1000113"  [label="CFG: "];
"1000113" -> "1000138"  [label="DDG: visible_selection"];
"1000113" -> "1000138"  [label="DDG: CreateVisibleSelectionWithGranularity(new_selection, granularity)"];
"1000115" -> "1000113"  [label="DDG: new_selection"];
"1000115" -> "1000113"  [label="DDG: granularity"];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000110"  [label="CFG: "];
"1000116" -> "1000114"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000114"  [label="CFG: "];
"1000117" -> "1000116"  [label="CFG: "];
"1000117" -> "1000115"  [label="AST: "];
"1000117" -> "1000116"  [label="CFG: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000115" -> "1000113"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000115" -> "1000138"  [label="DDG: granularity"];
"1000115" -> "1000138"  [label="DDG: new_selection"];
"1000115" -> "1000113"  [label="DDG: new_selection"];
"1000115" -> "1000113"  [label="DDG: granularity"];
"1000106" -> "1000115"  [label="DDG: new_selection"];
"1000103" -> "1000115"  [label="DDG: granularity"];
"1000118" -> "1000104"  [label="AST: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="AST: "];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000113"  [label="CFG: "];
"1000120" -> "1000119"  [label="CFG: "];
"1000123" -> "1000119"  [label="CFG: "];
"1000119" -> "1000138"  [label="DDG: visible_selection.IsNone()"];
"1000120" -> "1000118"  [label="AST: "];
"1000120" -> "1000119"  [label="CFG: "];
"1000138" -> "1000120"  [label="CFG: "];
"1000120" -> "1000138"  [label="DDG: <RET>"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000138"  [label="DDG: extent_position"];
"1000198" -> "1000100"  [label="AST: "];
"1000122" -> "1000104"  [label="AST: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000128" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000125" -> "1000124"  [label="AST: "];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000119"  [label="CFG: "];
"1000126" -> "1000123"  [label="CFG: "];
"1000131" -> "1000123"  [label="CFG: "];
"1000123" -> "1000138"  [label="DDG: visible_selection.IsBaseFirst()"];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000123"  [label="CFG: "];
"1000127" -> "1000126"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000134" -> "1000125"  [label="CFG: "];
"1000125" -> "1000138"  [label="DDG: builder.SetBaseAndExtent(visible_selection.Start(),\n                             visible_selection.End())"];
"1000125" -> "1000138"  [label="DDG: visible_selection.End()"];
"1000125" -> "1000138"  [label="DDG: visible_selection.Start()"];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1000126"  [label="CFG: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000128" -> "1000122"  [label="AST: "];
"1000129" -> "1000128"  [label="AST: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000123"  [label="CFG: "];
"1000132" -> "1000131"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000134" -> "1000130"  [label="CFG: "];
"1000130" -> "1000138"  [label="DDG: visible_selection.End()"];
"1000130" -> "1000138"  [label="DDG: builder.SetBaseAndExtent(visible_selection.End(),\n                              visible_selection.Start())"];
"1000130" -> "1000138"  [label="DDG: visible_selection.Start()"];
"1000132" -> "1000130"  [label="AST: "];
"1000132" -> "1000131"  [label="CFG: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000125"  [label="CFG: "];
"1000134" -> "1000130"  [label="CFG: "];
"1000133" -> "1000134"  [label="CFG: "];
"1000133" -> "1000104"  [label="AST: "];
"1000133" -> "1000134"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000136" -> "1000133"  [label="CFG: "];
"1000133" -> "1000138"  [label="DDG: visible_selection.Affinity()"];
"1000133" -> "1000138"  [label="DDG: builder.SetAffinity(visible_selection.Affinity())"];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000133"  [label="CFG: "];
"1000137" -> "1000136"  [label="CFG: "];
"1000135" -> "1000104"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000138" -> "1000135"  [label="CFG: "];
"1000135" -> "1000138"  [label="DDG: builder.Build()"];
"1000135" -> "1000138"  [label="DDG: SetSelection(builder.Build(), SetSelectionData::Builder()\n                                     .SetShouldCloseTyping(true)\n                                     .SetShouldClearTypingStyle(true)\n                                     .SetGranularity(granularity)\n                                    .SetShouldShowHandle(IsHandleVisible())\n                                     .Build())"];
"1000135" -> "1000138"  [label="DDG: SetSelectionData::Builder()\n                                     .SetShouldCloseTyping(true)\n                                     .SetShouldClearTypingStyle(true)\n                                     .SetGranularity(granularity)\n                                    .SetShouldShowHandle(IsHandleVisible())\n                                     .Build()"];
"1000137" -> "1000135"  [label="AST: "];
"1000137" -> "1000136"  [label="CFG: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000138"  [label="DDG: granularity"];
"1000103" -> "1000115"  [label="DDG: granularity"];
"1000199" -> "1000100"  [label="AST: "];
"1000104" -> "1000100"  [label="AST: "];
"1000105" -> "1000104"  [label="AST: "];
"1000106" -> "1000104"  [label="AST: "];
"1000109" -> "1000104"  [label="AST: "];
"1000112" -> "1000104"  [label="AST: "];
"1000113" -> "1000104"  [label="AST: "];
"1000118" -> "1000104"  [label="AST: "];
"1000121" -> "1000104"  [label="AST: "];
"1000122" -> "1000104"  [label="AST: "];
"1000133" -> "1000104"  [label="AST: "];
"1000135" -> "1000104"  [label="AST: "];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000108" -> "1000106"  [label="AST: "];
"1000110" -> "1000106"  [label="CFG: "];
"1000106" -> "1000138"  [label="DDG: SelectionInDOMTree::Builder()\n           .SetBaseAndExtentDeprecated(base_position.DeepEquivalent(),\n                                       extent_position.DeepEquivalent())\n           .SetAffinity(base_position.Affinity())\n           .Build()"];
"1000106" -> "1000138"  [label="DDG: new_selection"];
"1000106" -> "1000115"  [label="DDG: new_selection"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000100"  [label="CFG: "];
"1000108" -> "1000107"  [label="CFG: "];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000107"  [label="CFG: "];
"1000106" -> "1000108"  [label="CFG: "];
}
