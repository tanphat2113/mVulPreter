digraph "0_Chrome_244c78b3f737f2cacab2d212801b0524cbcc3a7b_3" {
"1000113" [label="(JumpTarget,case TOKEN_TYPE_OAUTH:)"];
"1000115" [label="(Identifier,token)"];
"1000114" [label="(Call,device_data_store_->SetOAuthToken(token))"];
"1000116" [label="(ControlStructure,break;)"];
"1000117" [label="(JumpTarget,case TOKEN_TYPE_GAIA:)"];
"1000119" [label="(Identifier,token)"];
"1000118" [label="(Call,device_data_store_->SetGaiaToken(token))"];
"1000120" [label="(ControlStructure,break;)"];
"1000121" [label="(JumpTarget,default:)"];
"1000124" [label="(Call,\"Invalid token type \" << token_type)"];
"1000125" [label="(Literal,\"Invalid token type \")"];
"1000126" [label="(Identifier,token_type)"];
"1000122" [label="(Call,NOTREACHED() << \"Invalid token type \" << token_type)"];
"1000123" [label="(Call,NOTREACHED())"];
"1000127" [label="(MethodReturn,void)"];
"1000101" [label="(MethodParameterIn,const std::string& owner_email)"];
"1000156" [label="(MethodParameterOut,const std::string& owner_email)"];
"1000102" [label="(MethodParameterIn,const std::string& token)"];
"1000157" [label="(MethodParameterOut,const std::string& token)"];
"1000104" [label="(Block,)"];
"1000103" [label="(MethodParameterIn,TokenType token_type)"];
"1000158" [label="(MethodParameterOut,TokenType token_type)"];
"1000105" [label="(ControlStructure,if (device_data_store_.get()))"];
"1000107" [label="(Block,)"];
"1000106" [label="(Call,device_data_store_.get())"];
"1000109" [label="(Identifier,owner_email)"];
"1000108" [label="(Call,device_data_store_->set_user_name(owner_email))"];
"1000111" [label="(Identifier,token_type)"];
"1000112" [label="(Block,)"];
"1000110" [label="(ControlStructure,switch (token_type))"];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000111"  [label="CFG: "];
"1000115" -> "1000113"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000113"  [label="CFG: "];
"1000114" -> "1000115"  [label="CFG: "];
"1000114" -> "1000112"  [label="AST: "];
"1000114" -> "1000115"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="CFG: "];
"1000114" -> "1000127"  [label="DDG: device_data_store_->SetOAuthToken(token)"];
"1000114" -> "1000127"  [label="DDG: token"];
"1000102" -> "1000114"  [label="DDG: token"];
"1000116" -> "1000112"  [label="AST: "];
"1000116" -> "1000114"  [label="CFG: "];
"1000127" -> "1000116"  [label="CFG: "];
"1000117" -> "1000112"  [label="AST: "];
"1000117" -> "1000111"  [label="CFG: "];
"1000119" -> "1000117"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000117"  [label="CFG: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000118" -> "1000112"  [label="AST: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="CFG: "];
"1000118" -> "1000127"  [label="DDG: device_data_store_->SetGaiaToken(token)"];
"1000118" -> "1000127"  [label="DDG: token"];
"1000102" -> "1000118"  [label="DDG: token"];
"1000120" -> "1000112"  [label="AST: "];
"1000120" -> "1000118"  [label="CFG: "];
"1000127" -> "1000120"  [label="CFG: "];
"1000121" -> "1000112"  [label="AST: "];
"1000121" -> "1000111"  [label="CFG: "];
"1000123" -> "1000121"  [label="CFG: "];
"1000124" -> "1000122"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000124" -> "1000127"  [label="DDG: token_type"];
"1000124" -> "1000122"  [label="DDG: \\"Invalid token type \\""];
"1000124" -> "1000122"  [label="DDG: token_type"];
"1000103" -> "1000124"  [label="DDG: token_type"];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000123"  [label="CFG: "];
"1000126" -> "1000125"  [label="CFG: "];
"1000126" -> "1000124"  [label="AST: "];
"1000126" -> "1000125"  [label="CFG: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000122" -> "1000112"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000127" -> "1000122"  [label="CFG: "];
"1000122" -> "1000127"  [label="DDG: NOTREACHED()"];
"1000122" -> "1000127"  [label="DDG: NOTREACHED() << \\"Invalid token type \\" << token_type"];
"1000122" -> "1000127"  [label="DDG: \\"Invalid token type \\" << token_type"];
"1000124" -> "1000122"  [label="DDG: \\"Invalid token type \\""];
"1000124" -> "1000122"  [label="DDG: token_type"];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000121"  [label="CFG: "];
"1000125" -> "1000123"  [label="CFG: "];
"1000127" -> "1000100"  [label="AST: "];
"1000127" -> "1000116"  [label="CFG: "];
"1000127" -> "1000120"  [label="CFG: "];
"1000127" -> "1000122"  [label="CFG: "];
"1000127" -> "1000106"  [label="CFG: "];
"1000124" -> "1000127"  [label="DDG: token_type"];
"1000108" -> "1000127"  [label="DDG: device_data_store_->set_user_name(owner_email)"];
"1000108" -> "1000127"  [label="DDG: owner_email"];
"1000114" -> "1000127"  [label="DDG: device_data_store_->SetOAuthToken(token)"];
"1000114" -> "1000127"  [label="DDG: token"];
"1000122" -> "1000127"  [label="DDG: NOTREACHED()"];
"1000122" -> "1000127"  [label="DDG: NOTREACHED() << \\"Invalid token type \\" << token_type"];
"1000122" -> "1000127"  [label="DDG: \\"Invalid token type \\" << token_type"];
"1000103" -> "1000127"  [label="DDG: token_type"];
"1000118" -> "1000127"  [label="DDG: device_data_store_->SetGaiaToken(token)"];
"1000118" -> "1000127"  [label="DDG: token"];
"1000102" -> "1000127"  [label="DDG: token"];
"1000101" -> "1000127"  [label="DDG: owner_email"];
"1000106" -> "1000127"  [label="DDG: device_data_store_.get()"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000127"  [label="DDG: owner_email"];
"1000101" -> "1000108"  [label="DDG: owner_email"];
"1000156" -> "1000100"  [label="AST: "];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000127"  [label="DDG: token"];
"1000102" -> "1000114"  [label="DDG: token"];
"1000102" -> "1000118"  [label="DDG: token"];
"1000157" -> "1000100"  [label="AST: "];
"1000104" -> "1000100"  [label="AST: "];
"1000105" -> "1000104"  [label="AST: "];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000127"  [label="DDG: token_type"];
"1000103" -> "1000124"  [label="DDG: token_type"];
"1000158" -> "1000100"  [label="AST: "];
"1000105" -> "1000104"  [label="AST: "];
"1000106" -> "1000105"  [label="AST: "];
"1000107" -> "1000105"  [label="AST: "];
"1000107" -> "1000105"  [label="AST: "];
"1000108" -> "1000107"  [label="AST: "];
"1000110" -> "1000107"  [label="AST: "];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000100"  [label="CFG: "];
"1000109" -> "1000106"  [label="CFG: "];
"1000127" -> "1000106"  [label="CFG: "];
"1000106" -> "1000127"  [label="DDG: device_data_store_.get()"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000106"  [label="CFG: "];
"1000108" -> "1000109"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000109"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000111" -> "1000108"  [label="CFG: "];
"1000108" -> "1000127"  [label="DDG: device_data_store_->set_user_name(owner_email)"];
"1000108" -> "1000127"  [label="DDG: owner_email"];
"1000101" -> "1000108"  [label="DDG: owner_email"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000108"  [label="CFG: "];
"1000113" -> "1000111"  [label="CFG: "];
"1000117" -> "1000111"  [label="CFG: "];
"1000121" -> "1000111"  [label="CFG: "];
"1000112" -> "1000110"  [label="AST: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000116" -> "1000112"  [label="AST: "];
"1000117" -> "1000112"  [label="AST: "];
"1000118" -> "1000112"  [label="AST: "];
"1000120" -> "1000112"  [label="AST: "];
"1000121" -> "1000112"  [label="AST: "];
"1000122" -> "1000112"  [label="AST: "];
"1000110" -> "1000107"  [label="AST: "];
"1000111" -> "1000110"  [label="AST: "];
"1000112" -> "1000110"  [label="AST: "];
}
