digraph "0_linux_234f3ce485d54017f15cf5e0699cff4100121601_3" {
"1000149" [label="(MethodReturn,static int)"];
"1000101" [label="(MethodParameterIn,struct x86_emulate_ctxt *ctxt)"];
"1000231" [label="(MethodParameterOut,struct x86_emulate_ctxt *ctxt)"];
"1000147" [label="(Return,return rc;)"];
"1000148" [label="(Identifier,rc)"];
"1000102" [label="(Block,)"];
"1000106" [label="(Identifier,X86EMUL_CONTINUE)"];
"1000104" [label="(Call,rc = X86EMUL_CONTINUE)"];
"1000105" [label="(Identifier,rc)"];
"1000107" [label="(Call,register_address_increment(ctxt, reg_rmw(ctxt, VCPU_REGS_RCX), -1))"];
"1000108" [label="(Identifier,ctxt)"];
"1000109" [label="(Call,reg_rmw(ctxt, VCPU_REGS_RCX))"];
"1000110" [label="(Identifier,ctxt)"];
"1000111" [label="(Identifier,VCPU_REGS_RCX)"];
"1000112" [label="(Call,-1)"];
"1000113" [label="(Literal,1)"];
"1000114" [label="(ControlStructure,if ((address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX)) != 0) &&\n \t    (ctxt->b == 0xe2 || test_cc(ctxt->b ^ 0x5, ctxt->eflags))))"];
"1000118" [label="(Identifier,ctxt)"];
"1000119" [label="(Call,reg_read(ctxt, VCPU_REGS_RCX))"];
"1000120" [label="(Identifier,ctxt)"];
"1000121" [label="(Identifier,VCPU_REGS_RCX)"];
"1000115" [label="(Call,(address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX)) != 0) &&\n \t    (ctxt->b == 0xe2 || test_cc(ctxt->b ^ 0x5, ctxt->eflags)))"];
"1000122" [label="(Literal,0)"];
"1000116" [label="(Call,address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX)) != 0)"];
"1000117" [label="(Call,address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX)))"];
"1000127" [label="(FieldIdentifier,b)"];
"1000128" [label="(Literal,0xe2)"];
"1000129" [label="(Call,test_cc(ctxt->b ^ 0x5, ctxt->eflags))"];
"1000130" [label="(Call,ctxt->b ^ 0x5)"];
"1000131" [label="(Call,ctxt->b)"];
"1000132" [label="(Identifier,ctxt)"];
"1000133" [label="(FieldIdentifier,b)"];
"1000134" [label="(Literal,0x5)"];
"1000135" [label="(Call,ctxt->eflags)"];
"1000136" [label="(Identifier,ctxt)"];
"1000137" [label="(FieldIdentifier,eflags)"];
"1000123" [label="(Call,ctxt->b == 0xe2 || test_cc(ctxt->b ^ 0x5, ctxt->eflags))"];
"1000124" [label="(Call,ctxt->b == 0xe2)"];
"1000125" [label="(Call,ctxt->b)"];
"1000126" [label="(Identifier,ctxt)"];
"1000141" [label="(Identifier,ctxt)"];
"1000138" [label="(Call,rc = jmp_rel(ctxt, ctxt->src.val))"];
"1000139" [label="(Identifier,rc)"];
"1000142" [label="(Call,ctxt->src.val)"];
"1000143" [label="(Call,ctxt->src)"];
"1000144" [label="(Identifier,ctxt)"];
"1000145" [label="(FieldIdentifier,src)"];
"1000146" [label="(FieldIdentifier,val)"];
"1000140" [label="(Call,jmp_rel(ctxt, ctxt->src.val))"];
"1000149" -> "1000100"  [label="AST: "];
"1000149" -> "1000147"  [label="CFG: "];
"1000147" -> "1000149"  [label="DDG: <RET>"];
"1000116" -> "1000149"  [label="DDG: address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX))"];
"1000129" -> "1000149"  [label="DDG: ctxt->b ^ 0x5"];
"1000129" -> "1000149"  [label="DDG: ctxt->eflags"];
"1000140" -> "1000149"  [label="DDG: ctxt->src.val"];
"1000140" -> "1000149"  [label="DDG: ctxt"];
"1000124" -> "1000149"  [label="DDG: ctxt->b"];
"1000107" -> "1000149"  [label="DDG: register_address_increment(ctxt, reg_rmw(ctxt, VCPU_REGS_RCX), -1)"];
"1000107" -> "1000149"  [label="DDG: -1"];
"1000107" -> "1000149"  [label="DDG: reg_rmw(ctxt, VCPU_REGS_RCX)"];
"1000104" -> "1000149"  [label="DDG: rc"];
"1000104" -> "1000149"  [label="DDG: X86EMUL_CONTINUE"];
"1000138" -> "1000149"  [label="DDG: jmp_rel(ctxt, ctxt->src.val)"];
"1000138" -> "1000149"  [label="DDG: rc"];
"1000123" -> "1000149"  [label="DDG: test_cc(ctxt->b ^ 0x5, ctxt->eflags)"];
"1000123" -> "1000149"  [label="DDG: ctxt->b == 0xe2"];
"1000117" -> "1000149"  [label="DDG: ctxt"];
"1000117" -> "1000149"  [label="DDG: reg_read(ctxt, VCPU_REGS_RCX)"];
"1000115" -> "1000149"  [label="DDG: address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX)) != 0"];
"1000115" -> "1000149"  [label="DDG: ctxt->b == 0xe2 || test_cc(ctxt->b ^ 0x5, ctxt->eflags)"];
"1000115" -> "1000149"  [label="DDG: (address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX)) != 0) &&\n \t    (ctxt->b == 0xe2 || test_cc(ctxt->b ^ 0x5, ctxt->eflags))"];
"1000119" -> "1000149"  [label="DDG: VCPU_REGS_RCX"];
"1000101" -> "1000149"  [label="DDG: ctxt"];
"1000130" -> "1000149"  [label="DDG: ctxt->b"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000149"  [label="DDG: ctxt"];
"1000101" -> "1000107"  [label="DDG: ctxt"];
"1000101" -> "1000109"  [label="DDG: ctxt"];
"1000101" -> "1000117"  [label="DDG: ctxt"];
"1000101" -> "1000119"  [label="DDG: ctxt"];
"1000101" -> "1000140"  [label="DDG: ctxt"];
"1000231" -> "1000100"  [label="AST: "];
"1000147" -> "1000102"  [label="AST: "];
"1000147" -> "1000148"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="CFG: "];
"1000147" -> "1000149"  [label="DDG: <RET>"];
"1000148" -> "1000147"  [label="DDG: rc"];
"1000104" -> "1000147"  [label="DDG: rc"];
"1000138" -> "1000147"  [label="DDG: rc"];
"1000148" -> "1000147"  [label="AST: "];
"1000148" -> "1000138"  [label="CFG: "];
"1000148" -> "1000115"  [label="CFG: "];
"1000147" -> "1000148"  [label="CFG: "];
"1000148" -> "1000147"  [label="DDG: rc"];
"1000102" -> "1000100"  [label="AST: "];
"1000103" -> "1000102"  [label="AST: "];
"1000104" -> "1000102"  [label="AST: "];
"1000107" -> "1000102"  [label="AST: "];
"1000114" -> "1000102"  [label="AST: "];
"1000147" -> "1000102"  [label="AST: "];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000105"  [label="CFG: "];
"1000104" -> "1000106"  [label="CFG: "];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1000106"  [label="CFG: "];
"1000105" -> "1000104"  [label="AST: "];
"1000106" -> "1000104"  [label="AST: "];
"1000108" -> "1000104"  [label="CFG: "];
"1000104" -> "1000149"  [label="DDG: rc"];
"1000104" -> "1000149"  [label="DDG: X86EMUL_CONTINUE"];
"1000104" -> "1000147"  [label="DDG: rc"];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000100"  [label="CFG: "];
"1000106" -> "1000105"  [label="CFG: "];
"1000107" -> "1000102"  [label="AST: "];
"1000107" -> "1000112"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000112" -> "1000107"  [label="AST: "];
"1000118" -> "1000107"  [label="CFG: "];
"1000107" -> "1000149"  [label="DDG: register_address_increment(ctxt, reg_rmw(ctxt, VCPU_REGS_RCX), -1)"];
"1000107" -> "1000149"  [label="DDG: -1"];
"1000107" -> "1000149"  [label="DDG: reg_rmw(ctxt, VCPU_REGS_RCX)"];
"1000109" -> "1000107"  [label="DDG: ctxt"];
"1000109" -> "1000107"  [label="DDG: VCPU_REGS_RCX"];
"1000101" -> "1000107"  [label="DDG: ctxt"];
"1000112" -> "1000107"  [label="DDG: 1"];
"1000107" -> "1000119"  [label="DDG: ctxt"];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000104"  [label="CFG: "];
"1000110" -> "1000108"  [label="CFG: "];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000113" -> "1000109"  [label="CFG: "];
"1000109" -> "1000107"  [label="DDG: ctxt"];
"1000109" -> "1000107"  [label="DDG: VCPU_REGS_RCX"];
"1000101" -> "1000109"  [label="DDG: ctxt"];
"1000109" -> "1000119"  [label="DDG: VCPU_REGS_RCX"];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000108"  [label="CFG: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000112" -> "1000107"  [label="AST: "];
"1000112" -> "1000113"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000107" -> "1000112"  [label="CFG: "];
"1000112" -> "1000107"  [label="DDG: 1"];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000109"  [label="CFG: "];
"1000112" -> "1000113"  [label="CFG: "];
"1000114" -> "1000102"  [label="AST: "];
"1000115" -> "1000114"  [label="AST: "];
"1000138" -> "1000114"  [label="AST: "];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000107"  [label="CFG: "];
"1000120" -> "1000118"  [label="CFG: "];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000119" -> "1000149"  [label="DDG: VCPU_REGS_RCX"];
"1000119" -> "1000117"  [label="DDG: ctxt"];
"1000119" -> "1000117"  [label="DDG: VCPU_REGS_RCX"];
"1000107" -> "1000119"  [label="DDG: ctxt"];
"1000101" -> "1000119"  [label="DDG: ctxt"];
"1000109" -> "1000119"  [label="DDG: VCPU_REGS_RCX"];
"1000120" -> "1000119"  [label="AST: "];
"1000120" -> "1000118"  [label="CFG: "];
"1000121" -> "1000120"  [label="CFG: "];
"1000121" -> "1000119"  [label="AST: "];
"1000121" -> "1000120"  [label="CFG: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000115" -> "1000123"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000123" -> "1000115"  [label="AST: "];
"1000139" -> "1000115"  [label="CFG: "];
"1000148" -> "1000115"  [label="CFG: "];
"1000115" -> "1000149"  [label="DDG: address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX)) != 0"];
"1000115" -> "1000149"  [label="DDG: ctxt->b == 0xe2 || test_cc(ctxt->b ^ 0x5, ctxt->eflags)"];
"1000115" -> "1000149"  [label="DDG: (address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX)) != 0) &&\n \t    (ctxt->b == 0xe2 || test_cc(ctxt->b ^ 0x5, ctxt->eflags))"];
"1000116" -> "1000115"  [label="DDG: address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX))"];
"1000116" -> "1000115"  [label="DDG: 0"];
"1000123" -> "1000115"  [label="DDG: ctxt->b == 0xe2"];
"1000123" -> "1000115"  [label="DDG: test_cc(ctxt->b ^ 0x5, ctxt->eflags)"];
"1000122" -> "1000116"  [label="AST: "];
"1000122" -> "1000117"  [label="CFG: "];
"1000116" -> "1000122"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000122"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000122" -> "1000116"  [label="AST: "];
"1000126" -> "1000116"  [label="CFG: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000116" -> "1000149"  [label="DDG: address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX))"];
"1000116" -> "1000115"  [label="DDG: address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX))"];
"1000116" -> "1000115"  [label="DDG: 0"];
"1000117" -> "1000116"  [label="DDG: ctxt"];
"1000117" -> "1000116"  [label="DDG: reg_read(ctxt, VCPU_REGS_RCX)"];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000122" -> "1000117"  [label="CFG: "];
"1000117" -> "1000149"  [label="DDG: ctxt"];
"1000117" -> "1000149"  [label="DDG: reg_read(ctxt, VCPU_REGS_RCX)"];
"1000117" -> "1000116"  [label="DDG: ctxt"];
"1000117" -> "1000116"  [label="DDG: reg_read(ctxt, VCPU_REGS_RCX)"];
"1000119" -> "1000117"  [label="DDG: ctxt"];
"1000119" -> "1000117"  [label="DDG: VCPU_REGS_RCX"];
"1000101" -> "1000117"  [label="DDG: ctxt"];
"1000117" -> "1000140"  [label="DDG: ctxt"];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1000126"  [label="CFG: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000128" -> "1000124"  [label="AST: "];
"1000128" -> "1000125"  [label="CFG: "];
"1000124" -> "1000128"  [label="CFG: "];
"1000129" -> "1000123"  [label="AST: "];
"1000129" -> "1000135"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000135" -> "1000129"  [label="AST: "];
"1000123" -> "1000129"  [label="CFG: "];
"1000129" -> "1000149"  [label="DDG: ctxt->b ^ 0x5"];
"1000129" -> "1000149"  [label="DDG: ctxt->eflags"];
"1000129" -> "1000123"  [label="DDG: ctxt->b ^ 0x5"];
"1000129" -> "1000123"  [label="DDG: ctxt->eflags"];
"1000130" -> "1000129"  [label="DDG: ctxt->b"];
"1000130" -> "1000129"  [label="DDG: 0x5"];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000134"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000134" -> "1000130"  [label="AST: "];
"1000136" -> "1000130"  [label="CFG: "];
"1000130" -> "1000149"  [label="DDG: ctxt->b"];
"1000130" -> "1000129"  [label="DDG: ctxt->b"];
"1000130" -> "1000129"  [label="DDG: 0x5"];
"1000124" -> "1000130"  [label="DDG: ctxt->b"];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000133"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="AST: "];
"1000134" -> "1000131"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000124"  [label="CFG: "];
"1000133" -> "1000132"  [label="CFG: "];
"1000133" -> "1000131"  [label="AST: "];
"1000133" -> "1000132"  [label="CFG: "];
"1000131" -> "1000133"  [label="CFG: "];
"1000134" -> "1000130"  [label="AST: "];
"1000134" -> "1000131"  [label="CFG: "];
"1000130" -> "1000134"  [label="CFG: "];
"1000135" -> "1000129"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000129" -> "1000135"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000130"  [label="CFG: "];
"1000137" -> "1000136"  [label="CFG: "];
"1000137" -> "1000135"  [label="AST: "];
"1000137" -> "1000136"  [label="CFG: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000123" -> "1000115"  [label="AST: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000123" -> "1000129"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000129" -> "1000123"  [label="AST: "];
"1000115" -> "1000123"  [label="CFG: "];
"1000123" -> "1000149"  [label="DDG: test_cc(ctxt->b ^ 0x5, ctxt->eflags)"];
"1000123" -> "1000149"  [label="DDG: ctxt->b == 0xe2"];
"1000123" -> "1000115"  [label="DDG: ctxt->b == 0xe2"];
"1000123" -> "1000115"  [label="DDG: test_cc(ctxt->b ^ 0x5, ctxt->eflags)"];
"1000124" -> "1000123"  [label="DDG: ctxt->b"];
"1000124" -> "1000123"  [label="DDG: 0xe2"];
"1000129" -> "1000123"  [label="DDG: ctxt->b ^ 0x5"];
"1000129" -> "1000123"  [label="DDG: ctxt->eflags"];
"1000124" -> "1000123"  [label="AST: "];
"1000124" -> "1000128"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000128" -> "1000124"  [label="AST: "];
"1000132" -> "1000124"  [label="CFG: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000149"  [label="DDG: ctxt->b"];
"1000124" -> "1000123"  [label="DDG: ctxt->b"];
"1000124" -> "1000123"  [label="DDG: 0xe2"];
"1000124" -> "1000130"  [label="DDG: ctxt->b"];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000128" -> "1000125"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000116"  [label="CFG: "];
"1000127" -> "1000126"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000139"  [label="CFG: "];
"1000144" -> "1000141"  [label="CFG: "];
"1000138" -> "1000114"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000148" -> "1000138"  [label="CFG: "];
"1000138" -> "1000149"  [label="DDG: jmp_rel(ctxt, ctxt->src.val)"];
"1000138" -> "1000149"  [label="DDG: rc"];
"1000140" -> "1000138"  [label="DDG: ctxt"];
"1000140" -> "1000138"  [label="DDG: ctxt->src.val"];
"1000138" -> "1000147"  [label="DDG: rc"];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000115"  [label="CFG: "];
"1000141" -> "1000139"  [label="CFG: "];
"1000142" -> "1000140"  [label="AST: "];
"1000142" -> "1000146"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000146" -> "1000142"  [label="AST: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000145" -> "1000143"  [label="AST: "];
"1000146" -> "1000143"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000144" -> "1000141"  [label="CFG: "];
"1000145" -> "1000144"  [label="CFG: "];
"1000145" -> "1000143"  [label="AST: "];
"1000145" -> "1000144"  [label="CFG: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000146" -> "1000142"  [label="AST: "];
"1000146" -> "1000143"  [label="CFG: "];
"1000142" -> "1000146"  [label="CFG: "];
"1000140" -> "1000138"  [label="AST: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000142" -> "1000140"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000140" -> "1000149"  [label="DDG: ctxt->src.val"];
"1000140" -> "1000149"  [label="DDG: ctxt"];
"1000140" -> "1000138"  [label="DDG: ctxt"];
"1000140" -> "1000138"  [label="DDG: ctxt->src.val"];
"1000117" -> "1000140"  [label="DDG: ctxt"];
"1000101" -> "1000140"  [label="DDG: ctxt"];
}
