digraph "0_Chrome_fcd3a7a671ecf2d5f46ea34787d27507a914d2f5" {
"1000197" [label="(MethodReturn,void)"];
"1000103" [label="(MethodParameterIn,const DoInitializeOptions& options)"];
"1000309" [label="(MethodParameterOut,const DoInitializeOptions& options)"];
"1000104" [label="(Block,)"];
"1000124" [label="(Call,file_util::CreateDirectory(sync_data_folder_path_))"];
"1000125" [label="(Identifier,sync_data_folder_path_)"];
"1000122" [label="(Call,success = file_util::CreateDirectory(sync_data_folder_path_))"];
"1000123" [label="(Identifier,success)"];
"1000126" [label="(Call,DCHECK(success))"];
"1000127" [label="(Identifier,success)"];
"1000130" [label="(Identifier,registrar_)"];
"1000128" [label="(Call,DCHECK(!registrar_))"];
"1000129" [label="(Call,!registrar_)"];
"1000133" [label="(Call,options.registrar)"];
"1000134" [label="(Identifier,options)"];
"1000131" [label="(Call,registrar_ = options.registrar)"];
"1000132" [label="(Identifier,registrar_)"];
"1000135" [label="(FieldIdentifier,registrar)"];
"1000136" [label="(Call,DCHECK(registrar_))"];
"1000137" [label="(Identifier,registrar_)"];
"1000138" [label="(Call,sync_manager_.reset(new sync_api::SyncManager(name_)))"];
"1000139" [label="(Call,new sync_api::SyncManager(name_))"];
"1000140" [label="(Identifier,sync_api::SyncManager)"];
"1000141" [label="(Call,sync_manager_->AddObserver(this))"];
"1000142" [label="(Identifier,this)"];
"1000145" [label="(Call,sync_manager_->Init(\n      sync_data_folder_path_,\n      options.event_handler,\n      options.service_url.host() + options.service_url.path(),\n      options.service_url.EffectiveIntPort(),\n      options.service_url.SchemeIsSecure(),\n      BrowserThread::GetBlockingPool(),\n      options.make_http_bridge_factory_fn.Run(),\n      options.registrar /* as ModelSafeWorkerRegistrar */,\n      options.extensions_activity_monitor,\n       options.registrar /* as SyncManager::ChangeDelegate */,\n       MakeUserAgentForSyncApi(),\n       options.credentials,\n       new BridgedSyncNotifier(\n           options.chrome_sync_notification_bridge,\n           options.sync_notifier_factory->CreateSyncNotifier()),\n      options.restored_key_for_bootstrapping,\n      options.testing_mode,\n      &encryptor_,\n      options.unrecoverable_error_handler,\n      options.report_unrecoverable_error_function))"];
"1000143" [label="(Call,success = sync_manager_->Init(\n      sync_data_folder_path_,\n      options.event_handler,\n      options.service_url.host() + options.service_url.path(),\n      options.service_url.EffectiveIntPort(),\n      options.service_url.SchemeIsSecure(),\n      BrowserThread::GetBlockingPool(),\n      options.make_http_bridge_factory_fn.Run(),\n      options.registrar /* as ModelSafeWorkerRegistrar */,\n      options.extensions_activity_monitor,\n       options.registrar /* as SyncManager::ChangeDelegate */,\n       MakeUserAgentForSyncApi(),\n       options.credentials,\n       new BridgedSyncNotifier(\n           options.chrome_sync_notification_bridge,\n           options.sync_notifier_factory->CreateSyncNotifier()),\n      options.restored_key_for_bootstrapping,\n      options.testing_mode,\n      &encryptor_,\n      options.unrecoverable_error_handler,\n      options.report_unrecoverable_error_function))"];
"1000144" [label="(Identifier,success)"];
"1000107" [label="(Identifier,sync_loop_)"];
"1000105" [label="(Call,DCHECK(!sync_loop_))"];
"1000106" [label="(Call,!sync_loop_)"];
"1000146" [label="(Identifier,sync_data_folder_path_)"];
"1000149" [label="(FieldIdentifier,event_handler)"];
"1000147" [label="(Call,options.event_handler)"];
"1000148" [label="(Identifier,options)"];
"1000152" [label="(Call,options.service_url.path())"];
"1000150" [label="(Call,options.service_url.host() + options.service_url.path())"];
"1000151" [label="(Call,options.service_url.host())"];
"1000153" [label="(Call,options.service_url.EffectiveIntPort())"];
"1000154" [label="(Call,options.service_url.SchemeIsSecure())"];
"1000155" [label="(Call,BrowserThread::GetBlockingPool())"];
"1000156" [label="(Call,options.make_http_bridge_factory_fn.Run())"];
"1000159" [label="(FieldIdentifier,registrar)"];
"1000157" [label="(Call,options.registrar)"];
"1000158" [label="(Identifier,options)"];
"1000162" [label="(FieldIdentifier,extensions_activity_monitor)"];
"1000160" [label="(Call,options.extensions_activity_monitor)"];
"1000161" [label="(Identifier,options)"];
"1000165" [label="(FieldIdentifier,registrar)"];
"1000163" [label="(Call,options.registrar)"];
"1000164" [label="(Identifier,options)"];
"1000110" [label="(Call,options.sync_loop)"];
"1000111" [label="(Identifier,options)"];
"1000108" [label="(Call,sync_loop_ = options.sync_loop)"];
"1000109" [label="(Identifier,sync_loop_)"];
"1000112" [label="(FieldIdentifier,sync_loop)"];
"1000166" [label="(Call,MakeUserAgentForSyncApi())"];
"1000169" [label="(FieldIdentifier,credentials)"];
"1000167" [label="(Call,options.credentials)"];
"1000168" [label="(Identifier,options)"];
"1000171" [label="(Identifier,BridgedSyncNotifier)"];
"1000170" [label="(Call,new BridgedSyncNotifier(\n           options.chrome_sync_notification_bridge,\n           options.sync_notifier_factory->CreateSyncNotifier()))"];
"1000174" [label="(FieldIdentifier,restored_key_for_bootstrapping)"];
"1000172" [label="(Call,options.restored_key_for_bootstrapping)"];
"1000173" [label="(Identifier,options)"];
"1000177" [label="(FieldIdentifier,testing_mode)"];
"1000175" [label="(Call,options.testing_mode)"];
"1000176" [label="(Identifier,options)"];
"1000178" [label="(Call,&encryptor_)"];
"1000179" [label="(Identifier,encryptor_)"];
"1000182" [label="(FieldIdentifier,unrecoverable_error_handler)"];
"1000180" [label="(Call,options.unrecoverable_error_handler)"];
"1000181" [label="(Identifier,options)"];
"1000185" [label="(FieldIdentifier,report_unrecoverable_error_function)"];
"1000183" [label="(Call,options.report_unrecoverable_error_function)"];
"1000184" [label="(Identifier,options)"];
"1000113" [label="(Call,DCHECK(sync_loop_))"];
"1000114" [label="(Identifier,sync_loop_)"];
"1000189" [label="(Call,!success)"];
"1000190" [label="(Identifier,success)"];
"1000186" [label="(Call,LOG_IF(ERROR, !success) << \"Syncapi initialization failed!\")"];
"1000187" [label="(Call,LOG_IF(ERROR, !success))"];
"1000191" [label="(Literal,\"Syncapi initialization failed!\")"];
"1000188" [label="(Identifier,ERROR)"];
"1000192" [label="(ControlStructure,if (CommandLine::ForCurrentProcess()->HasSwitch(\n          switches::kSyncThrowUnrecoverableError)))"];
"1000193" [label="(Call,CommandLine::ForCurrentProcess()->HasSwitch(\n          switches::kSyncThrowUnrecoverableError))"];
"1000194" [label="(Identifier,switches::kSyncThrowUnrecoverableError)"];
"1000195" [label="(Block,)"];
"1000196" [label="(Call,sync_manager_->ThrowUnrecoverableError())"];
"1000118" [label="(FieldIdentifier,delete_sync_data_folder)"];
"1000115" [label="(ControlStructure,if (options.delete_sync_data_folder))"];
"1000119" [label="(Block,)"];
"1000116" [label="(Call,options.delete_sync_data_folder)"];
"1000117" [label="(Identifier,options)"];
"1000120" [label="(Call,DeleteSyncDataFolder())"];
"1000197" -> "1000102"  [label="AST: "];
"1000197" -> "1000196"  [label="CFG: "];
"1000197" -> "1000193"  [label="CFG: "];
"1000193" -> "1000197"  [label="DDG: switches::kSyncThrowUnrecoverableError"];
"1000193" -> "1000197"  [label="DDG: CommandLine::ForCurrentProcess()->HasSwitch(\n          switches::kSyncThrowUnrecoverableError)"];
"1000150" -> "1000197"  [label="DDG: options.service_url.host()"];
"1000150" -> "1000197"  [label="DDG: options.service_url.path()"];
"1000189" -> "1000197"  [label="DDG: success"];
"1000145" -> "1000197"  [label="DDG: options.registrar"];
"1000145" -> "1000197"  [label="DDG: options.unrecoverable_error_handler"];
"1000145" -> "1000197"  [label="DDG: options.service_url.EffectiveIntPort()"];
"1000145" -> "1000197"  [label="DDG: options.service_url.SchemeIsSecure()"];
"1000145" -> "1000197"  [label="DDG: &encryptor_"];
"1000145" -> "1000197"  [label="DDG: options.restored_key_for_bootstrapping"];
"1000145" -> "1000197"  [label="DDG: options.extensions_activity_monitor"];
"1000145" -> "1000197"  [label="DDG: MakeUserAgentForSyncApi()"];
"1000145" -> "1000197"  [label="DDG: BrowserThread::GetBlockingPool()"];
"1000145" -> "1000197"  [label="DDG: options.credentials"];
"1000145" -> "1000197"  [label="DDG: new BridgedSyncNotifier(\n           options.chrome_sync_notification_bridge,\n           options.sync_notifier_factory->CreateSyncNotifier())"];
"1000145" -> "1000197"  [label="DDG: options.service_url.host() + options.service_url.path()"];
"1000145" -> "1000197"  [label="DDG: options.make_http_bridge_factory_fn.Run()"];
"1000145" -> "1000197"  [label="DDG: sync_data_folder_path_"];
"1000145" -> "1000197"  [label="DDG: options.event_handler"];
"1000145" -> "1000197"  [label="DDG: options.report_unrecoverable_error_function"];
"1000145" -> "1000197"  [label="DDG: options.testing_mode"];
"1000105" -> "1000197"  [label="DDG: DCHECK(!sync_loop_)"];
"1000105" -> "1000197"  [label="DDG: !sync_loop_"];
"1000187" -> "1000197"  [label="DDG: ERROR"];
"1000187" -> "1000197"  [label="DDG: !success"];
"1000186" -> "1000197"  [label="DDG: LOG_IF(ERROR, !success) << \\"Syncapi initialization failed!\\""];
"1000186" -> "1000197"  [label="DDG: LOG_IF(ERROR, !success)"];
"1000126" -> "1000197"  [label="DDG: DCHECK(success)"];
"1000141" -> "1000197"  [label="DDG: this"];
"1000141" -> "1000197"  [label="DDG: sync_manager_->AddObserver(this)"];
"1000113" -> "1000197"  [label="DDG: sync_loop_"];
"1000113" -> "1000197"  [label="DDG: DCHECK(sync_loop_)"];
"1000138" -> "1000197"  [label="DDG: new sync_api::SyncManager(name_)"];
"1000138" -> "1000197"  [label="DDG: sync_manager_.reset(new sync_api::SyncManager(name_))"];
"1000139" -> "1000197"  [label="DDG: sync_api::SyncManager"];
"1000128" -> "1000197"  [label="DDG: !registrar_"];
"1000128" -> "1000197"  [label="DDG: DCHECK(!registrar_)"];
"1000103" -> "1000197"  [label="DDG: options"];
"1000108" -> "1000197"  [label="DDG: options.sync_loop"];
"1000120" -> "1000197"  [label="DDG: DeleteSyncDataFolder()"];
"1000136" -> "1000197"  [label="DDG: DCHECK(registrar_)"];
"1000136" -> "1000197"  [label="DDG: registrar_"];
"1000143" -> "1000197"  [label="DDG: sync_manager_->Init(\n      sync_data_folder_path_,\n      options.event_handler,\n      options.service_url.host() + options.service_url.path(),\n      options.service_url.EffectiveIntPort(),\n      options.service_url.SchemeIsSecure(),\n      BrowserThread::GetBlockingPool(),\n      options.make_http_bridge_factory_fn.Run(),\n      options.registrar /* as ModelSafeWorkerRegistrar */,\n      options.extensions_activity_monitor,\n       options.registrar /* as SyncManager::ChangeDelegate */,\n       MakeUserAgentForSyncApi(),\n       options.credentials,\n       new BridgedSyncNotifier(\n           options.chrome_sync_notification_bridge,\n           options.sync_notifier_factory->CreateSyncNotifier()),\n      options.restored_key_for_bootstrapping,\n      options.testing_mode,\n      &encryptor_,\n      options.unrecoverable_error_handler,\n      options.report_unrecoverable_error_function)"];
"1000170" -> "1000197"  [label="DDG: BridgedSyncNotifier"];
"1000196" -> "1000197"  [label="DDG: sync_manager_->ThrowUnrecoverableError()"];
"1000122" -> "1000197"  [label="DDG: file_util::CreateDirectory(sync_data_folder_path_)"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000197"  [label="DDG: options"];
"1000103" -> "1000108"  [label="DDG: options"];
"1000103" -> "1000131"  [label="DDG: options"];
"1000103" -> "1000145"  [label="DDG: options"];
"1000309" -> "1000102"  [label="AST: "];
"1000104" -> "1000102"  [label="AST: "];
"1000105" -> "1000104"  [label="AST: "];
"1000108" -> "1000104"  [label="AST: "];
"1000113" -> "1000104"  [label="AST: "];
"1000115" -> "1000104"  [label="AST: "];
"1000121" -> "1000104"  [label="AST: "];
"1000122" -> "1000104"  [label="AST: "];
"1000126" -> "1000104"  [label="AST: "];
"1000128" -> "1000104"  [label="AST: "];
"1000131" -> "1000104"  [label="AST: "];
"1000136" -> "1000104"  [label="AST: "];
"1000138" -> "1000104"  [label="AST: "];
"1000141" -> "1000104"  [label="AST: "];
"1000143" -> "1000104"  [label="AST: "];
"1000186" -> "1000104"  [label="AST: "];
"1000192" -> "1000104"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000124" -> "1000125"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000124" -> "1000122"  [label="DDG: sync_data_folder_path_"];
"1000124" -> "1000145"  [label="DDG: sync_data_folder_path_"];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000123"  [label="CFG: "];
"1000124" -> "1000125"  [label="CFG: "];
"1000122" -> "1000104"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000127" -> "1000122"  [label="CFG: "];
"1000122" -> "1000197"  [label="DDG: file_util::CreateDirectory(sync_data_folder_path_)"];
"1000124" -> "1000122"  [label="DDG: sync_data_folder_path_"];
"1000122" -> "1000126"  [label="DDG: success"];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000120"  [label="CFG: "];
"1000123" -> "1000116"  [label="CFG: "];
"1000125" -> "1000123"  [label="CFG: "];
"1000126" -> "1000104"  [label="AST: "];
"1000126" -> "1000127"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000130" -> "1000126"  [label="CFG: "];
"1000126" -> "1000197"  [label="DDG: DCHECK(success)"];
"1000122" -> "1000126"  [label="DDG: success"];
"1000127" -> "1000126"  [label="AST: "];
"1000127" -> "1000122"  [label="CFG: "];
"1000126" -> "1000127"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000126"  [label="CFG: "];
"1000129" -> "1000130"  [label="CFG: "];
"1000128" -> "1000104"  [label="AST: "];
"1000128" -> "1000129"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000132" -> "1000128"  [label="CFG: "];
"1000128" -> "1000197"  [label="DDG: !registrar_"];
"1000128" -> "1000197"  [label="DDG: DCHECK(!registrar_)"];
"1000129" -> "1000128"  [label="DDG: registrar_"];
"1000129" -> "1000128"  [label="AST: "];
"1000129" -> "1000130"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000128" -> "1000129"  [label="CFG: "];
"1000129" -> "1000128"  [label="DDG: registrar_"];
"1000133" -> "1000131"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000131" -> "1000133"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000132"  [label="CFG: "];
"1000135" -> "1000134"  [label="CFG: "];
"1000131" -> "1000104"  [label="AST: "];
"1000131" -> "1000133"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="AST: "];
"1000137" -> "1000131"  [label="CFG: "];
"1000103" -> "1000131"  [label="DDG: options"];
"1000131" -> "1000136"  [label="DDG: registrar_"];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000128"  [label="CFG: "];
"1000134" -> "1000132"  [label="CFG: "];
"1000135" -> "1000133"  [label="AST: "];
"1000135" -> "1000134"  [label="CFG: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000136" -> "1000104"  [label="AST: "];
"1000136" -> "1000137"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000140" -> "1000136"  [label="CFG: "];
"1000136" -> "1000197"  [label="DDG: DCHECK(registrar_)"];
"1000136" -> "1000197"  [label="DDG: registrar_"];
"1000131" -> "1000136"  [label="DDG: registrar_"];
"1000137" -> "1000136"  [label="AST: "];
"1000137" -> "1000131"  [label="CFG: "];
"1000136" -> "1000137"  [label="CFG: "];
"1000138" -> "1000104"  [label="AST: "];
"1000138" -> "1000139"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000142" -> "1000138"  [label="CFG: "];
"1000138" -> "1000197"  [label="DDG: new sync_api::SyncManager(name_)"];
"1000138" -> "1000197"  [label="DDG: sync_manager_.reset(new sync_api::SyncManager(name_))"];
"1000139" -> "1000138"  [label="DDG: sync_api::SyncManager"];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000140"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000138" -> "1000139"  [label="CFG: "];
"1000139" -> "1000197"  [label="DDG: sync_api::SyncManager"];
"1000139" -> "1000138"  [label="DDG: sync_api::SyncManager"];
"1000140" -> "1000139"  [label="AST: "];
"1000140" -> "1000136"  [label="CFG: "];
"1000139" -> "1000140"  [label="CFG: "];
"1000141" -> "1000104"  [label="AST: "];
"1000141" -> "1000142"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000144" -> "1000141"  [label="CFG: "];
"1000141" -> "1000197"  [label="DDG: this"];
"1000141" -> "1000197"  [label="DDG: sync_manager_->AddObserver(this)"];
"1000142" -> "1000141"  [label="AST: "];
"1000142" -> "1000138"  [label="CFG: "];
"1000141" -> "1000142"  [label="CFG: "];
"1000145" -> "1000143"  [label="AST: "];
"1000145" -> "1000183"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000150" -> "1000145"  [label="AST: "];
"1000153" -> "1000145"  [label="AST: "];
"1000154" -> "1000145"  [label="AST: "];
"1000155" -> "1000145"  [label="AST: "];
"1000156" -> "1000145"  [label="AST: "];
"1000157" -> "1000145"  [label="AST: "];
"1000160" -> "1000145"  [label="AST: "];
"1000163" -> "1000145"  [label="AST: "];
"1000166" -> "1000145"  [label="AST: "];
"1000167" -> "1000145"  [label="AST: "];
"1000170" -> "1000145"  [label="AST: "];
"1000172" -> "1000145"  [label="AST: "];
"1000175" -> "1000145"  [label="AST: "];
"1000178" -> "1000145"  [label="AST: "];
"1000180" -> "1000145"  [label="AST: "];
"1000183" -> "1000145"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000145" -> "1000197"  [label="DDG: options.registrar"];
"1000145" -> "1000197"  [label="DDG: options.unrecoverable_error_handler"];
"1000145" -> "1000197"  [label="DDG: options.service_url.EffectiveIntPort()"];
"1000145" -> "1000197"  [label="DDG: options.service_url.SchemeIsSecure()"];
"1000145" -> "1000197"  [label="DDG: &encryptor_"];
"1000145" -> "1000197"  [label="DDG: options.restored_key_for_bootstrapping"];
"1000145" -> "1000197"  [label="DDG: options.extensions_activity_monitor"];
"1000145" -> "1000197"  [label="DDG: MakeUserAgentForSyncApi()"];
"1000145" -> "1000197"  [label="DDG: BrowserThread::GetBlockingPool()"];
"1000145" -> "1000197"  [label="DDG: options.credentials"];
"1000145" -> "1000197"  [label="DDG: new BridgedSyncNotifier(\n           options.chrome_sync_notification_bridge,\n           options.sync_notifier_factory->CreateSyncNotifier())"];
"1000145" -> "1000197"  [label="DDG: options.service_url.host() + options.service_url.path()"];
"1000145" -> "1000197"  [label="DDG: options.make_http_bridge_factory_fn.Run()"];
"1000145" -> "1000197"  [label="DDG: sync_data_folder_path_"];
"1000145" -> "1000197"  [label="DDG: options.event_handler"];
"1000145" -> "1000197"  [label="DDG: options.report_unrecoverable_error_function"];
"1000145" -> "1000197"  [label="DDG: options.testing_mode"];
"1000145" -> "1000143"  [label="DDG: options.service_url.EffectiveIntPort()"];
"1000145" -> "1000143"  [label="DDG: options.event_handler"];
"1000145" -> "1000143"  [label="DDG: sync_data_folder_path_"];
"1000145" -> "1000143"  [label="DDG: options.restored_key_for_bootstrapping"];
"1000145" -> "1000143"  [label="DDG: BrowserThread::GetBlockingPool()"];
"1000145" -> "1000143"  [label="DDG: new BridgedSyncNotifier(\n           options.chrome_sync_notification_bridge,\n           options.sync_notifier_factory->CreateSyncNotifier())"];
"1000145" -> "1000143"  [label="DDG: options.make_http_bridge_factory_fn.Run()"];
"1000145" -> "1000143"  [label="DDG: options.credentials"];
"1000145" -> "1000143"  [label="DDG: &encryptor_"];
"1000145" -> "1000143"  [label="DDG: options.report_unrecoverable_error_function"];
"1000145" -> "1000143"  [label="DDG: MakeUserAgentForSyncApi()"];
"1000145" -> "1000143"  [label="DDG: options.testing_mode"];
"1000145" -> "1000143"  [label="DDG: options.extensions_activity_monitor"];
"1000145" -> "1000143"  [label="DDG: options.registrar"];
"1000145" -> "1000143"  [label="DDG: options.service_url.host() + options.service_url.path()"];
"1000145" -> "1000143"  [label="DDG: options.unrecoverable_error_handler"];
"1000145" -> "1000143"  [label="DDG: options.service_url.SchemeIsSecure()"];
"1000124" -> "1000145"  [label="DDG: sync_data_folder_path_"];
"1000103" -> "1000145"  [label="DDG: options"];
"1000170" -> "1000145"  [label="DDG: BridgedSyncNotifier"];
"1000143" -> "1000104"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000145" -> "1000143"  [label="AST: "];
"1000188" -> "1000143"  [label="CFG: "];
"1000143" -> "1000197"  [label="DDG: sync_manager_->Init(\n      sync_data_folder_path_,\n      options.event_handler,\n      options.service_url.host() + options.service_url.path(),\n      options.service_url.EffectiveIntPort(),\n      options.service_url.SchemeIsSecure(),\n      BrowserThread::GetBlockingPool(),\n      options.make_http_bridge_factory_fn.Run(),\n      options.registrar /* as ModelSafeWorkerRegistrar */,\n      options.extensions_activity_monitor,\n       options.registrar /* as SyncManager::ChangeDelegate */,\n       MakeUserAgentForSyncApi(),\n       options.credentials,\n       new BridgedSyncNotifier(\n           options.chrome_sync_notification_bridge,\n           options.sync_notifier_factory->CreateSyncNotifier()),\n      options.restored_key_for_bootstrapping,\n      options.testing_mode,\n      &encryptor_,\n      options.unrecoverable_error_handler,\n      options.report_unrecoverable_error_function)"];
"1000145" -> "1000143"  [label="DDG: options.service_url.EffectiveIntPort()"];
"1000145" -> "1000143"  [label="DDG: options.event_handler"];
"1000145" -> "1000143"  [label="DDG: sync_data_folder_path_"];
"1000145" -> "1000143"  [label="DDG: options.restored_key_for_bootstrapping"];
"1000145" -> "1000143"  [label="DDG: BrowserThread::GetBlockingPool()"];
"1000145" -> "1000143"  [label="DDG: new BridgedSyncNotifier(\n           options.chrome_sync_notification_bridge,\n           options.sync_notifier_factory->CreateSyncNotifier())"];
"1000145" -> "1000143"  [label="DDG: options.make_http_bridge_factory_fn.Run()"];
"1000145" -> "1000143"  [label="DDG: options.credentials"];
"1000145" -> "1000143"  [label="DDG: &encryptor_"];
"1000145" -> "1000143"  [label="DDG: options.report_unrecoverable_error_function"];
"1000145" -> "1000143"  [label="DDG: MakeUserAgentForSyncApi()"];
"1000145" -> "1000143"  [label="DDG: options.testing_mode"];
"1000145" -> "1000143"  [label="DDG: options.extensions_activity_monitor"];
"1000145" -> "1000143"  [label="DDG: options.registrar"];
"1000145" -> "1000143"  [label="DDG: options.service_url.host() + options.service_url.path()"];
"1000145" -> "1000143"  [label="DDG: options.unrecoverable_error_handler"];
"1000145" -> "1000143"  [label="DDG: options.service_url.SchemeIsSecure()"];
"1000143" -> "1000189"  [label="DDG: success"];
"1000144" -> "1000143"  [label="AST: "];
"1000144" -> "1000141"  [label="CFG: "];
"1000146" -> "1000144"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000102"  [label="CFG: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000106"  [label="CFG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000109" -> "1000105"  [label="CFG: "];
"1000105" -> "1000197"  [label="DDG: DCHECK(!sync_loop_)"];
"1000105" -> "1000197"  [label="DDG: !sync_loop_"];
"1000106" -> "1000105"  [label="DDG: sync_loop_"];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000105" -> "1000106"  [label="CFG: "];
"1000106" -> "1000105"  [label="DDG: sync_loop_"];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000144"  [label="CFG: "];
"1000148" -> "1000146"  [label="CFG: "];
"1000149" -> "1000147"  [label="AST: "];
"1000149" -> "1000148"  [label="CFG: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000147" -> "1000145"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000151" -> "1000147"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000148" -> "1000146"  [label="CFG: "];
"1000149" -> "1000148"  [label="CFG: "];
"1000152" -> "1000150"  [label="AST: "];
"1000152" -> "1000151"  [label="CFG: "];
"1000150" -> "1000152"  [label="CFG: "];
"1000150" -> "1000145"  [label="AST: "];
"1000150" -> "1000152"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="AST: "];
"1000153" -> "1000150"  [label="CFG: "];
"1000150" -> "1000197"  [label="DDG: options.service_url.host()"];
"1000150" -> "1000197"  [label="DDG: options.service_url.path()"];
"1000151" -> "1000150"  [label="AST: "];
"1000151" -> "1000147"  [label="CFG: "];
"1000152" -> "1000151"  [label="CFG: "];
"1000153" -> "1000145"  [label="AST: "];
"1000153" -> "1000150"  [label="CFG: "];
"1000154" -> "1000153"  [label="CFG: "];
"1000154" -> "1000145"  [label="AST: "];
"1000154" -> "1000153"  [label="CFG: "];
"1000155" -> "1000154"  [label="CFG: "];
"1000155" -> "1000145"  [label="AST: "];
"1000155" -> "1000154"  [label="CFG: "];
"1000156" -> "1000155"  [label="CFG: "];
"1000156" -> "1000145"  [label="AST: "];
"1000156" -> "1000155"  [label="CFG: "];
"1000158" -> "1000156"  [label="CFG: "];
"1000159" -> "1000157"  [label="AST: "];
"1000159" -> "1000158"  [label="CFG: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000157" -> "1000145"  [label="AST: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000161" -> "1000157"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000158" -> "1000156"  [label="CFG: "];
"1000159" -> "1000158"  [label="CFG: "];
"1000162" -> "1000160"  [label="AST: "];
"1000162" -> "1000161"  [label="CFG: "];
"1000160" -> "1000162"  [label="CFG: "];
"1000160" -> "1000145"  [label="AST: "];
"1000160" -> "1000162"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000162" -> "1000160"  [label="AST: "];
"1000164" -> "1000160"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000161" -> "1000157"  [label="CFG: "];
"1000162" -> "1000161"  [label="CFG: "];
"1000165" -> "1000163"  [label="AST: "];
"1000165" -> "1000164"  [label="CFG: "];
"1000163" -> "1000165"  [label="CFG: "];
"1000163" -> "1000145"  [label="AST: "];
"1000163" -> "1000165"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000165" -> "1000163"  [label="AST: "];
"1000166" -> "1000163"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000164" -> "1000160"  [label="CFG: "];
"1000165" -> "1000164"  [label="CFG: "];
"1000110" -> "1000108"  [label="AST: "];
"1000110" -> "1000112"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000112" -> "1000110"  [label="AST: "];
"1000108" -> "1000110"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000109"  [label="CFG: "];
"1000112" -> "1000111"  [label="CFG: "];
"1000108" -> "1000104"  [label="AST: "];
"1000108" -> "1000110"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000110" -> "1000108"  [label="AST: "];
"1000114" -> "1000108"  [label="CFG: "];
"1000108" -> "1000197"  [label="DDG: options.sync_loop"];
"1000103" -> "1000108"  [label="DDG: options"];
"1000108" -> "1000113"  [label="DDG: sync_loop_"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000105"  [label="CFG: "];
"1000111" -> "1000109"  [label="CFG: "];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000111"  [label="CFG: "];
"1000110" -> "1000112"  [label="CFG: "];
"1000166" -> "1000145"  [label="AST: "];
"1000166" -> "1000163"  [label="CFG: "];
"1000168" -> "1000166"  [label="CFG: "];
"1000169" -> "1000167"  [label="AST: "];
"1000169" -> "1000168"  [label="CFG: "];
"1000167" -> "1000169"  [label="CFG: "];
"1000167" -> "1000145"  [label="AST: "];
"1000167" -> "1000169"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000169" -> "1000167"  [label="AST: "];
"1000171" -> "1000167"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000168" -> "1000166"  [label="CFG: "];
"1000169" -> "1000168"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000171" -> "1000167"  [label="CFG: "];
"1000170" -> "1000171"  [label="CFG: "];
"1000170" -> "1000145"  [label="AST: "];
"1000170" -> "1000171"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000173" -> "1000170"  [label="CFG: "];
"1000170" -> "1000197"  [label="DDG: BridgedSyncNotifier"];
"1000170" -> "1000145"  [label="DDG: BridgedSyncNotifier"];
"1000174" -> "1000172"  [label="AST: "];
"1000174" -> "1000173"  [label="CFG: "];
"1000172" -> "1000174"  [label="CFG: "];
"1000172" -> "1000145"  [label="AST: "];
"1000172" -> "1000174"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000174" -> "1000172"  [label="AST: "];
"1000176" -> "1000172"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000173" -> "1000170"  [label="CFG: "];
"1000174" -> "1000173"  [label="CFG: "];
"1000177" -> "1000175"  [label="AST: "];
"1000177" -> "1000176"  [label="CFG: "];
"1000175" -> "1000177"  [label="CFG: "];
"1000175" -> "1000145"  [label="AST: "];
"1000175" -> "1000177"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000177" -> "1000175"  [label="AST: "];
"1000179" -> "1000175"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000176" -> "1000172"  [label="CFG: "];
"1000177" -> "1000176"  [label="CFG: "];
"1000178" -> "1000145"  [label="AST: "];
"1000178" -> "1000179"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000181" -> "1000178"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000179" -> "1000175"  [label="CFG: "];
"1000178" -> "1000179"  [label="CFG: "];
"1000182" -> "1000180"  [label="AST: "];
"1000182" -> "1000181"  [label="CFG: "];
"1000180" -> "1000182"  [label="CFG: "];
"1000180" -> "1000145"  [label="AST: "];
"1000180" -> "1000182"  [label="CFG: "];
"1000181" -> "1000180"  [label="AST: "];
"1000182" -> "1000180"  [label="AST: "];
"1000184" -> "1000180"  [label="CFG: "];
"1000181" -> "1000180"  [label="AST: "];
"1000181" -> "1000178"  [label="CFG: "];
"1000182" -> "1000181"  [label="CFG: "];
"1000185" -> "1000183"  [label="AST: "];
"1000185" -> "1000184"  [label="CFG: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000183" -> "1000145"  [label="AST: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000185" -> "1000183"  [label="AST: "];
"1000145" -> "1000183"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000184" -> "1000180"  [label="CFG: "];
"1000185" -> "1000184"  [label="CFG: "];
"1000113" -> "1000104"  [label="AST: "];
"1000113" -> "1000114"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000117" -> "1000113"  [label="CFG: "];
"1000113" -> "1000197"  [label="DDG: sync_loop_"];
"1000113" -> "1000197"  [label="DDG: DCHECK(sync_loop_)"];
"1000108" -> "1000113"  [label="DDG: sync_loop_"];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000108"  [label="CFG: "];
"1000113" -> "1000114"  [label="CFG: "];
"1000189" -> "1000187"  [label="AST: "];
"1000189" -> "1000190"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000187" -> "1000189"  [label="CFG: "];
"1000189" -> "1000197"  [label="DDG: success"];
"1000189" -> "1000187"  [label="DDG: success"];
"1000143" -> "1000189"  [label="DDG: success"];
"1000190" -> "1000189"  [label="AST: "];
"1000190" -> "1000188"  [label="CFG: "];
"1000189" -> "1000190"  [label="CFG: "];
"1000186" -> "1000104"  [label="AST: "];
"1000186" -> "1000191"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000191" -> "1000186"  [label="AST: "];
"1000194" -> "1000186"  [label="CFG: "];
"1000186" -> "1000197"  [label="DDG: LOG_IF(ERROR, !success) << \\"Syncapi initialization failed!\\""];
"1000186" -> "1000197"  [label="DDG: LOG_IF(ERROR, !success)"];
"1000187" -> "1000186"  [label="DDG: ERROR"];
"1000187" -> "1000186"  [label="DDG: !success"];
"1000187" -> "1000186"  [label="AST: "];
"1000187" -> "1000189"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000189" -> "1000187"  [label="AST: "];
"1000191" -> "1000187"  [label="CFG: "];
"1000187" -> "1000197"  [label="DDG: ERROR"];
"1000187" -> "1000197"  [label="DDG: !success"];
"1000187" -> "1000186"  [label="DDG: ERROR"];
"1000187" -> "1000186"  [label="DDG: !success"];
"1000189" -> "1000187"  [label="DDG: success"];
"1000191" -> "1000186"  [label="AST: "];
"1000191" -> "1000187"  [label="CFG: "];
"1000186" -> "1000191"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000188" -> "1000143"  [label="CFG: "];
"1000190" -> "1000188"  [label="CFG: "];
"1000192" -> "1000104"  [label="AST: "];
"1000193" -> "1000192"  [label="AST: "];
"1000195" -> "1000192"  [label="AST: "];
"1000193" -> "1000192"  [label="AST: "];
"1000193" -> "1000194"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000196" -> "1000193"  [label="CFG: "];
"1000197" -> "1000193"  [label="CFG: "];
"1000193" -> "1000197"  [label="DDG: switches::kSyncThrowUnrecoverableError"];
"1000193" -> "1000197"  [label="DDG: CommandLine::ForCurrentProcess()->HasSwitch(\n          switches::kSyncThrowUnrecoverableError)"];
"1000194" -> "1000193"  [label="AST: "];
"1000194" -> "1000186"  [label="CFG: "];
"1000193" -> "1000194"  [label="CFG: "];
"1000195" -> "1000192"  [label="AST: "];
"1000196" -> "1000195"  [label="AST: "];
"1000196" -> "1000195"  [label="AST: "];
"1000196" -> "1000193"  [label="CFG: "];
"1000197" -> "1000196"  [label="CFG: "];
"1000196" -> "1000197"  [label="DDG: sync_manager_->ThrowUnrecoverableError()"];
"1000118" -> "1000116"  [label="AST: "];
"1000118" -> "1000117"  [label="CFG: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000115" -> "1000104"  [label="AST: "];
"1000116" -> "1000115"  [label="AST: "];
"1000119" -> "1000115"  [label="AST: "];
"1000119" -> "1000115"  [label="AST: "];
"1000120" -> "1000119"  [label="AST: "];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000120" -> "1000116"  [label="CFG: "];
"1000123" -> "1000116"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1000113"  [label="CFG: "];
"1000118" -> "1000117"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000120" -> "1000116"  [label="CFG: "];
"1000123" -> "1000120"  [label="CFG: "];
"1000120" -> "1000197"  [label="DDG: DeleteSyncDataFolder()"];
}
