digraph "1_linux_54d83fc74aa9ec72794373cb47432c5f7fb1a309_7" {
"1000113" [label="(MethodReturn,static inline bool)"];
"1000101" [label="(MethodParameterIn,const struct ipt_ip *ip)"];
"1000139" [label="(MethodParameterOut,const struct ipt_ip *ip)"];
"1000102" [label="(Block,)"];
"1000104" [label="(Return,return memcmp(ip, &uncond, sizeof(uncond)) == 0;)"];
"1000107" [label="(Identifier,ip)"];
"1000108" [label="(Call,&uncond)"];
"1000109" [label="(Identifier,uncond)"];
"1000110" [label="(Call,sizeof(uncond))"];
"1000111" [label="(Identifier,uncond)"];
"1000112" [label="(Literal,0)"];
"1000105" [label="(Call,memcmp(ip, &uncond, sizeof(uncond)) == 0)"];
"1000106" [label="(Call,memcmp(ip, &uncond, sizeof(uncond)))"];
"1000113" -> "1000100"  [label="AST: "];
"1000113" -> "1000104"  [label="CFG: "];
"1000106" -> "1000113"  [label="DDG: &uncond"];
"1000106" -> "1000113"  [label="DDG: ip"];
"1000105" -> "1000113"  [label="DDG: memcmp(ip, &uncond, sizeof(uncond)) == 0"];
"1000105" -> "1000113"  [label="DDG: memcmp(ip, &uncond, sizeof(uncond))"];
"1000110" -> "1000113"  [label="DDG: uncond"];
"1000101" -> "1000113"  [label="DDG: ip"];
"1000104" -> "1000113"  [label="DDG: <RET>"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000113"  [label="DDG: ip"];
"1000101" -> "1000106"  [label="DDG: ip"];
"1000139" -> "1000100"  [label="AST: "];
"1000102" -> "1000100"  [label="AST: "];
"1000103" -> "1000102"  [label="AST: "];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1000105"  [label="CFG: "];
"1000105" -> "1000104"  [label="AST: "];
"1000113" -> "1000104"  [label="CFG: "];
"1000104" -> "1000113"  [label="DDG: <RET>"];
"1000105" -> "1000104"  [label="DDG: memcmp(ip, &uncond, sizeof(uncond)) == 0"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000100"  [label="CFG: "];
"1000109" -> "1000107"  [label="CFG: "];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000109"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000111" -> "1000108"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000107"  [label="CFG: "];
"1000108" -> "1000109"  [label="CFG: "];
"1000110" -> "1000106"  [label="AST: "];
"1000110" -> "1000111"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000106" -> "1000110"  [label="CFG: "];
"1000110" -> "1000113"  [label="DDG: uncond"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000108"  [label="CFG: "];
"1000110" -> "1000111"  [label="CFG: "];
"1000112" -> "1000105"  [label="AST: "];
"1000112" -> "1000106"  [label="CFG: "];
"1000105" -> "1000112"  [label="CFG: "];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000112"  [label="CFG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000112" -> "1000105"  [label="AST: "];
"1000104" -> "1000105"  [label="CFG: "];
"1000105" -> "1000113"  [label="DDG: memcmp(ip, &uncond, sizeof(uncond)) == 0"];
"1000105" -> "1000113"  [label="DDG: memcmp(ip, &uncond, sizeof(uncond))"];
"1000105" -> "1000104"  [label="DDG: memcmp(ip, &uncond, sizeof(uncond)) == 0"];
"1000106" -> "1000105"  [label="DDG: ip"];
"1000106" -> "1000105"  [label="DDG: &uncond"];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000110"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000108" -> "1000106"  [label="AST: "];
"1000110" -> "1000106"  [label="AST: "];
"1000112" -> "1000106"  [label="CFG: "];
"1000106" -> "1000113"  [label="DDG: &uncond"];
"1000106" -> "1000113"  [label="DDG: ip"];
"1000106" -> "1000105"  [label="DDG: ip"];
"1000106" -> "1000105"  [label="DDG: &uncond"];
"1000101" -> "1000106"  [label="DDG: ip"];
}
