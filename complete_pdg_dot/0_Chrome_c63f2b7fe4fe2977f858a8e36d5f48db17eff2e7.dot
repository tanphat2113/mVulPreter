digraph "0_Chrome_c63f2b7fe4fe2977f858a8e36d5f48db17eff2e7" {
"1000111" [label="(MethodReturn,void)"];
"1000101" [label="(Block,)"];
"1000106" [label="(Call,EXPECT_CALL(*mock_speech_synthesis_library_, IsSpeaking())\n      .WillOnce(Return(true))\n      .RetiresOnSaturation())"];
"1000107" [label="(Call,EXPECT_CALL(*mock_speech_synthesis_library_, StopSpeaking())\n       .WillOnce(Return(true))\n       .RetiresOnSaturation())"];
"1000108" [label="(Call,EXPECT_CALL(*mock_speech_synthesis_library_, SetSpeakProperties(_))\n      .WillOnce(Return(true))\n      .RetiresOnSaturation())"];
"1000109" [label="(Call,EXPECT_CALL(*mock_speech_synthesis_library_, Speak(_))\n       .WillOnce(Return(true))\n       .RetiresOnSaturation())"];
"1000110" [label="(Call,EXPECT_CALL(*mock_speech_synthesis_library_, IsSpeaking())\n      .WillOnce(Return(true))\n      .WillOnce(Return(true))\n      .WillOnce(Return(false))\n      .RetiresOnSaturation())"];
"1000103" [label="(Call,EXPECT_CALL(*mock_speech_synthesis_library_, StopSpeaking())\n       .WillOnce(Return(true))\n       .RetiresOnSaturation())"];
"1000104" [label="(Call,EXPECT_CALL(*mock_speech_synthesis_library_, SetSpeakProperties(_))\n      .WillOnce(Return(true))\n      .RetiresOnSaturation())"];
"1000105" [label="(Call,EXPECT_CALL(*mock_speech_synthesis_library_, Speak(_))\n       .WillOnce(Return(true))\n       .RetiresOnSaturation())"];
"1000111" -> "1000100"  [label="AST: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000108" -> "1000111"  [label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, SetSpeakProperties(_))\n      .WillOnce(Return(true))\n      .RetiresOnSaturation()"];
"1000107" -> "1000111"  [label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, StopSpeaking())\n       .WillOnce(Return(true))\n       .RetiresOnSaturation()"];
"1000110" -> "1000111"  [label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, IsSpeaking())\n      .WillOnce(Return(true))\n      .WillOnce(Return(true))\n      .WillOnce(Return(false))\n      .RetiresOnSaturation()"];
"1000106" -> "1000111"  [label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, IsSpeaking())\n      .WillOnce(Return(true))\n      .RetiresOnSaturation()"];
"1000109" -> "1000111"  [label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, Speak(_))\n       .WillOnce(Return(true))\n       .RetiresOnSaturation()"];
"1000101" -> "1000100"  [label="AST: "];
"1000102" -> "1000101"  [label="AST: "];
"1000103" -> "1000101"  [label="AST: "];
"1000104" -> "1000101"  [label="AST: "];
"1000105" -> "1000101"  [label="AST: "];
"1000106" -> "1000101"  [label="AST: "];
"1000107" -> "1000101"  [label="AST: "];
"1000108" -> "1000101"  [label="AST: "];
"1000109" -> "1000101"  [label="AST: "];
"1000110" -> "1000101"  [label="AST: "];
"1000106" -> "1000101"  [label="AST: "];
"1000106" -> "1000105"  [label="CFG: "];
"1000107" -> "1000106"  [label="CFG: "];
"1000106" -> "1000111"  [label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, IsSpeaking())\n      .WillOnce(Return(true))\n      .RetiresOnSaturation()"];
"1000107" -> "1000101"  [label="AST: "];
"1000107" -> "1000106"  [label="CFG: "];
"1000108" -> "1000107"  [label="CFG: "];
"1000107" -> "1000111"  [label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, StopSpeaking())\n       .WillOnce(Return(true))\n       .RetiresOnSaturation()"];
"1000108" -> "1000101"  [label="AST: "];
"1000108" -> "1000107"  [label="CFG: "];
"1000109" -> "1000108"  [label="CFG: "];
"1000108" -> "1000111"  [label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, SetSpeakProperties(_))\n      .WillOnce(Return(true))\n      .RetiresOnSaturation()"];
"1000109" -> "1000101"  [label="AST: "];
"1000109" -> "1000108"  [label="CFG: "];
"1000110" -> "1000109"  [label="CFG: "];
"1000109" -> "1000111"  [label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, Speak(_))\n       .WillOnce(Return(true))\n       .RetiresOnSaturation()"];
"1000110" -> "1000101"  [label="AST: "];
"1000110" -> "1000109"  [label="CFG: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000110" -> "1000111"  [label="DDG: EXPECT_CALL(*mock_speech_synthesis_library_, IsSpeaking())\n      .WillOnce(Return(true))\n      .WillOnce(Return(true))\n      .WillOnce(Return(false))\n      .RetiresOnSaturation()"];
"1000103" -> "1000101"  [label="AST: "];
"1000103" -> "1000100"  [label="CFG: "];
"1000104" -> "1000103"  [label="CFG: "];
"1000104" -> "1000101"  [label="AST: "];
"1000104" -> "1000103"  [label="CFG: "];
"1000105" -> "1000104"  [label="CFG: "];
"1000105" -> "1000101"  [label="AST: "];
"1000105" -> "1000104"  [label="CFG: "];
"1000106" -> "1000105"  [label="CFG: "];
}
