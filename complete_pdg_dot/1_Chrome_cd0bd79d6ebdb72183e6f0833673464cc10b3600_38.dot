digraph "1_Chrome_cd0bd79d6ebdb72183e6f0833673464cc10b3600_38" {
"1000127" [label="(MethodReturn,static void)"];
"1000101" [label="(MethodParameterIn,const TransportDIB::Handle& handle_in)"];
"1000173" [label="(MethodParameterOut,const TransportDIB::Handle& handle_in)"];
"1000103" [label="(Block,)"];
"1000102" [label="(MethodParameterIn,TransportDIB::Handle* handle_out)"];
"1000174" [label="(MethodParameterOut,TransportDIB::Handle* handle_out)"];
"1000109" [label="(FieldIdentifier,fd)"];
"1000104" [label="(ControlStructure,if ((handle_out->fd = HANDLE_EINTR(dup(handle_in.fd))) < 0))"];
"1000110" [label="(Call,HANDLE_EINTR(dup(handle_in.fd)))"];
"1000111" [label="(Call,dup(handle_in.fd))"];
"1000112" [label="(Call,handle_in.fd)"];
"1000113" [label="(Identifier,handle_in)"];
"1000114" [label="(FieldIdentifier,fd)"];
"1000115" [label="(Literal,0)"];
"1000105" [label="(Call,(handle_out->fd = HANDLE_EINTR(dup(handle_in.fd))) < 0)"];
"1000116" [label="(Block,)"];
"1000106" [label="(Call,handle_out->fd = HANDLE_EINTR(dup(handle_in.fd)))"];
"1000107" [label="(Call,handle_out->fd)"];
"1000108" [label="(Identifier,handle_out)"];
"1000120" [label="(Literal,\"dup()\")"];
"1000117" [label="(Call,PLOG(ERROR) << \"dup()\")"];
"1000118" [label="(Call,PLOG(ERROR))"];
"1000119" [label="(Identifier,ERROR)"];
"1000121" [label="(Return,return;)"];
"1000125" [label="(FieldIdentifier,auto_close)"];
"1000126" [label="(Identifier,true)"];
"1000122" [label="(Call,handle_out->auto_close = true)"];
"1000123" [label="(Call,handle_out->auto_close)"];
"1000124" [label="(Identifier,handle_out)"];
"1000127" -> "1000100"  [label="AST: "];
"1000127" -> "1000121"  [label="CFG: "];
"1000127" -> "1000122"  [label="CFG: "];
"1000117" -> "1000127"  [label="DDG: PLOG(ERROR) << \\"dup()\\""];
"1000117" -> "1000127"  [label="DDG: PLOG(ERROR)"];
"1000122" -> "1000127"  [label="DDG: true"];
"1000122" -> "1000127"  [label="DDG: handle_out->auto_close"];
"1000106" -> "1000127"  [label="DDG: handle_out->fd"];
"1000106" -> "1000127"  [label="DDG: HANDLE_EINTR(dup(handle_in.fd))"];
"1000105" -> "1000127"  [label="DDG: (handle_out->fd = HANDLE_EINTR(dup(handle_in.fd))) < 0"];
"1000118" -> "1000127"  [label="DDG: ERROR"];
"1000110" -> "1000127"  [label="DDG: dup(handle_in.fd)"];
"1000102" -> "1000127"  [label="DDG: handle_out"];
"1000111" -> "1000127"  [label="DDG: handle_in.fd"];
"1000101" -> "1000127"  [label="DDG: handle_in"];
"1000121" -> "1000127"  [label="DDG: <RET>"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000127"  [label="DDG: handle_in"];
"1000101" -> "1000111"  [label="DDG: handle_in"];
"1000173" -> "1000100"  [label="AST: "];
"1000103" -> "1000100"  [label="AST: "];
"1000104" -> "1000103"  [label="AST: "];
"1000122" -> "1000103"  [label="AST: "];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000127"  [label="DDG: handle_out"];
"1000174" -> "1000100"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000108"  [label="CFG: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000104" -> "1000103"  [label="AST: "];
"1000105" -> "1000104"  [label="AST: "];
"1000116" -> "1000104"  [label="AST: "];
"1000110" -> "1000106"  [label="AST: "];
"1000110" -> "1000111"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000106" -> "1000110"  [label="CFG: "];
"1000110" -> "1000127"  [label="DDG: dup(handle_in.fd)"];
"1000110" -> "1000105"  [label="DDG: dup(handle_in.fd)"];
"1000110" -> "1000106"  [label="DDG: dup(handle_in.fd)"];
"1000111" -> "1000110"  [label="DDG: handle_in.fd"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000112"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000110" -> "1000111"  [label="CFG: "];
"1000111" -> "1000127"  [label="DDG: handle_in.fd"];
"1000111" -> "1000110"  [label="DDG: handle_in.fd"];
"1000101" -> "1000111"  [label="DDG: handle_in"];
"1000112" -> "1000111"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000111" -> "1000112"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000107"  [label="CFG: "];
"1000114" -> "1000113"  [label="CFG: "];
"1000114" -> "1000112"  [label="AST: "];
"1000114" -> "1000113"  [label="CFG: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000115" -> "1000105"  [label="AST: "];
"1000115" -> "1000106"  [label="CFG: "];
"1000105" -> "1000115"  [label="CFG: "];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000115"  [label="CFG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000115" -> "1000105"  [label="AST: "];
"1000119" -> "1000105"  [label="CFG: "];
"1000124" -> "1000105"  [label="CFG: "];
"1000105" -> "1000127"  [label="DDG: (handle_out->fd = HANDLE_EINTR(dup(handle_in.fd))) < 0"];
"1000106" -> "1000105"  [label="DDG: handle_out->fd"];
"1000110" -> "1000105"  [label="DDG: dup(handle_in.fd)"];
"1000116" -> "1000104"  [label="AST: "];
"1000117" -> "1000116"  [label="AST: "];
"1000121" -> "1000116"  [label="AST: "];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000110"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000110" -> "1000106"  [label="AST: "];
"1000115" -> "1000106"  [label="CFG: "];
"1000106" -> "1000127"  [label="DDG: handle_out->fd"];
"1000106" -> "1000127"  [label="DDG: HANDLE_EINTR(dup(handle_in.fd))"];
"1000106" -> "1000105"  [label="DDG: handle_out->fd"];
"1000110" -> "1000106"  [label="DDG: dup(handle_in.fd)"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000113" -> "1000107"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000100"  [label="CFG: "];
"1000109" -> "1000108"  [label="CFG: "];
"1000120" -> "1000117"  [label="AST: "];
"1000120" -> "1000118"  [label="CFG: "];
"1000117" -> "1000120"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1000120"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000120" -> "1000117"  [label="AST: "];
"1000121" -> "1000117"  [label="CFG: "];
"1000117" -> "1000127"  [label="DDG: PLOG(ERROR) << \\"dup()\\""];
"1000117" -> "1000127"  [label="DDG: PLOG(ERROR)"];
"1000118" -> "1000117"  [label="DDG: ERROR"];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="CFG: "];
"1000118" -> "1000127"  [label="DDG: ERROR"];
"1000118" -> "1000117"  [label="DDG: ERROR"];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000105"  [label="CFG: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000121" -> "1000116"  [label="AST: "];
"1000121" -> "1000117"  [label="CFG: "];
"1000127" -> "1000121"  [label="CFG: "];
"1000121" -> "1000127"  [label="DDG: <RET>"];
"1000125" -> "1000123"  [label="AST: "];
"1000125" -> "1000124"  [label="CFG: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000126" -> "1000122"  [label="AST: "];
"1000126" -> "1000123"  [label="CFG: "];
"1000122" -> "1000126"  [label="CFG: "];
"1000122" -> "1000103"  [label="AST: "];
"1000122" -> "1000126"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000126" -> "1000122"  [label="AST: "];
"1000127" -> "1000122"  [label="CFG: "];
"1000122" -> "1000127"  [label="DDG: true"];
"1000122" -> "1000127"  [label="DDG: handle_out->auto_close"];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000126" -> "1000123"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000124" -> "1000105"  [label="CFG: "];
"1000125" -> "1000124"  [label="CFG: "];
}
