digraph "1_Chrome_d193f6bb5aa5bdc05e07f314abacf7d7bc466d3d" {
"1000174" [label="(MethodReturn,void)"];
"1000101" [label="(MethodParameterIn,LayerImpl* base_layer)"];
"1000296" [label="(MethodParameterOut,LayerImpl* base_layer)"];
"1000102" [label="(Block,)"];
"1000130" [label="(Call,update_source_frame_number_ == source_frame_number)"];
"1000131" [label="(Identifier,update_source_frame_number_)"];
"1000128" [label="(Call,DCHECK_IMPLIES(update_source_frame_number_ == source_frame_number,\n                 impl_bounds == recording_source_bounds)\n      << \" bounds \" << impl_bounds.ToString() << \" recording source \"\n      << recording_source_bounds.ToString())"];
"1000129" [label="(Call,DCHECK_IMPLIES(update_source_frame_number_ == source_frame_number,\n                 impl_bounds == recording_source_bounds))"];
"1000132" [label="(Identifier,source_frame_number)"];
"1000133" [label="(Call,impl_bounds == recording_source_bounds)"];
"1000134" [label="(Identifier,impl_bounds)"];
"1000135" [label="(Identifier,recording_source_bounds)"];
"1000138" [label="(Call,impl_bounds.ToString() << \" recording source \"\n      << recording_source_bounds.ToString())"];
"1000139" [label="(Call,impl_bounds.ToString())"];
"1000140" [label="(Call,\" recording source \"\n      << recording_source_bounds.ToString())"];
"1000141" [label="(Literal,\" recording source \")"];
"1000136" [label="(Call,\" bounds \" << impl_bounds.ToString() << \" recording source \"\n      << recording_source_bounds.ToString())"];
"1000137" [label="(Literal,\" bounds \")"];
"1000142" [label="(Call,recording_source_bounds.ToString())"];
"1000143" [label="(ControlStructure,if (update_source_frame_number_ != source_frame_number &&\n      recording_source_bounds != impl_bounds))"];
"1000147" [label="(Identifier,source_frame_number)"];
"1000144" [label="(Call,update_source_frame_number_ != source_frame_number &&\n      recording_source_bounds != impl_bounds)"];
"1000145" [label="(Call,update_source_frame_number_ != source_frame_number)"];
"1000146" [label="(Identifier,update_source_frame_number_)"];
"1000150" [label="(Identifier,impl_bounds)"];
"1000151" [label="(Block,)"];
"1000148" [label="(Call,recording_source_bounds != impl_bounds)"];
"1000149" [label="(Identifier,recording_source_bounds)"];
"1000152" [label="(Call,recording_source_->SetEmptyBounds())"];
"1000104" [label="(Identifier,base_layer)"];
"1000103" [label="(Call,Layer::PushPropertiesTo(base_layer))"];
"1000153" [label="(Call,layer_impl->SetNearestNeighbor(nearest_neighbor_))"];
"1000154" [label="(Identifier,nearest_neighbor_)"];
"1000156" [label="(Call,raster_source =\n      recording_source_->CreateRasterSource())"];
"1000157" [label="(Identifier,raster_source)"];
"1000158" [label="(Call,recording_source_->CreateRasterSource())"];
"1000159" [label="(Call,raster_source->SetBackgoundColor(SafeOpaqueBackgroundColor()))"];
"1000160" [label="(Call,SafeOpaqueBackgroundColor())"];
"1000161" [label="(Call,raster_source->SetRequiresClear(!contents_opaque() &&\n                                  !client_->FillsBoundsCompletely()))"];
"1000162" [label="(Call,!contents_opaque() &&\n                                  !client_->FillsBoundsCompletely())"];
"1000163" [label="(Call,!contents_opaque())"];
"1000164" [label="(Call,contents_opaque())"];
"1000165" [label="(Call,!client_->FillsBoundsCompletely())"];
"1000166" [label="(Call,client_->FillsBoundsCompletely())"];
"1000167" [label="(Call,layer_impl->UpdateRasterSource(raster_source, &recording_invalidation_,\n                                 nullptr))"];
"1000168" [label="(Identifier,raster_source)"];
"1000169" [label="(Call,&recording_invalidation_)"];
"1000170" [label="(Identifier,recording_invalidation_)"];
"1000171" [label="(Identifier,nullptr)"];
"1000172" [label="(Call,DCHECK(recording_invalidation_.IsEmpty()))"];
"1000173" [label="(Call,recording_invalidation_.IsEmpty())"];
"1000106" [label="(Call,* layer_impl = static_cast<PictureLayerImpl*>(base_layer))"];
"1000107" [label="(Identifier,layer_impl)"];
"1000108" [label="(Call,static_cast<PictureLayerImpl*>(base_layer))"];
"1000110" [label="(Identifier,base_layer)"];
"1000112" [label="(Call,layer_impl->is_mask_)"];
"1000113" [label="(Identifier,layer_impl)"];
"1000111" [label="(Call,DCHECK_EQ(layer_impl->is_mask_, is_mask_))"];
"1000114" [label="(FieldIdentifier,is_mask_)"];
"1000115" [label="(Identifier,is_mask_)"];
"1000119" [label="(Call,layer_tree_host()->source_frame_number())"];
"1000117" [label="(Call,source_frame_number = layer_tree_host()->source_frame_number())"];
"1000118" [label="(Identifier,source_frame_number)"];
"1000121" [label="(Call,impl_bounds = layer_impl->bounds())"];
"1000122" [label="(Identifier,impl_bounds)"];
"1000123" [label="(Call,layer_impl->bounds())"];
"1000125" [label="(Call,recording_source_bounds = recording_source_->GetSize())"];
"1000126" [label="(Identifier,recording_source_bounds)"];
"1000127" [label="(Call,recording_source_->GetSize())"];
"1000174" -> "1000100"  [label="AST: "];
"1000174" -> "1000172"  [label="CFG: "];
"1000106" -> "1000174"  [label="DDG: static_cast<PictureLayerImpl*>(base_layer)"];
"1000106" -> "1000174"  [label="DDG: layer_impl"];
"1000167" -> "1000174"  [label="DDG: &recording_invalidation_"];
"1000167" -> "1000174"  [label="DDG: raster_source"];
"1000167" -> "1000174"  [label="DDG: layer_impl->UpdateRasterSource(raster_source, &recording_invalidation_,\n                                 nullptr)"];
"1000167" -> "1000174"  [label="DDG: nullptr"];
"1000159" -> "1000174"  [label="DDG: SafeOpaqueBackgroundColor()"];
"1000159" -> "1000174"  [label="DDG: raster_source->SetBackgoundColor(SafeOpaqueBackgroundColor())"];
"1000153" -> "1000174"  [label="DDG: nearest_neighbor_"];
"1000153" -> "1000174"  [label="DDG: layer_impl->SetNearestNeighbor(nearest_neighbor_)"];
"1000148" -> "1000174"  [label="DDG: impl_bounds"];
"1000148" -> "1000174"  [label="DDG: recording_source_bounds"];
"1000117" -> "1000174"  [label="DDG: layer_tree_host()->source_frame_number()"];
"1000162" -> "1000174"  [label="DDG: !client_->FillsBoundsCompletely()"];
"1000162" -> "1000174"  [label="DDG: !contents_opaque()"];
"1000129" -> "1000174"  [label="DDG: update_source_frame_number_ == source_frame_number"];
"1000129" -> "1000174"  [label="DDG: impl_bounds == recording_source_bounds"];
"1000163" -> "1000174"  [label="DDG: contents_opaque()"];
"1000172" -> "1000174"  [label="DDG: DCHECK(recording_invalidation_.IsEmpty())"];
"1000172" -> "1000174"  [label="DDG: recording_invalidation_.IsEmpty()"];
"1000140" -> "1000174"  [label="DDG: recording_source_bounds.ToString()"];
"1000121" -> "1000174"  [label="DDG: layer_impl->bounds()"];
"1000138" -> "1000174"  [label="DDG: impl_bounds.ToString()"];
"1000138" -> "1000174"  [label="DDG: \\" recording source \\"\n      << recording_source_bounds.ToString()"];
"1000165" -> "1000174"  [label="DDG: client_->FillsBoundsCompletely()"];
"1000152" -> "1000174"  [label="DDG: recording_source_->SetEmptyBounds()"];
"1000128" -> "1000174"  [label="DDG: DCHECK_IMPLIES(update_source_frame_number_ == source_frame_number,\n                 impl_bounds == recording_source_bounds)"];
"1000128" -> "1000174"  [label="DDG: \\" bounds \\" << impl_bounds.ToString() << \\" recording source \\"\n      << recording_source_bounds.ToString()"];
"1000128" -> "1000174"  [label="DDG: DCHECK_IMPLIES(update_source_frame_number_ == source_frame_number,\n                 impl_bounds == recording_source_bounds)\n      << \\" bounds \\" << impl_bounds.ToString() << \\" recording source \\"\n      << recording_source_bounds.ToString()"];
"1000144" -> "1000174"  [label="DDG: update_source_frame_number_ != source_frame_number &&\n      recording_source_bounds != impl_bounds"];
"1000144" -> "1000174"  [label="DDG: recording_source_bounds != impl_bounds"];
"1000144" -> "1000174"  [label="DDG: update_source_frame_number_ != source_frame_number"];
"1000133" -> "1000174"  [label="DDG: impl_bounds"];
"1000133" -> "1000174"  [label="DDG: recording_source_bounds"];
"1000156" -> "1000174"  [label="DDG: recording_source_->CreateRasterSource()"];
"1000103" -> "1000174"  [label="DDG: Layer::PushPropertiesTo(base_layer)"];
"1000111" -> "1000174"  [label="DDG: is_mask_"];
"1000111" -> "1000174"  [label="DDG: layer_impl->is_mask_"];
"1000111" -> "1000174"  [label="DDG: DCHECK_EQ(layer_impl->is_mask_, is_mask_)"];
"1000125" -> "1000174"  [label="DDG: recording_source_->GetSize()"];
"1000101" -> "1000174"  [label="DDG: base_layer"];
"1000108" -> "1000174"  [label="DDG: base_layer"];
"1000136" -> "1000174"  [label="DDG: impl_bounds.ToString() << \\" recording source \\"\n      << recording_source_bounds.ToString()"];
"1000161" -> "1000174"  [label="DDG: !contents_opaque() &&\n                                  !client_->FillsBoundsCompletely()"];
"1000161" -> "1000174"  [label="DDG: raster_source->SetRequiresClear(!contents_opaque() &&\n                                  !client_->FillsBoundsCompletely())"];
"1000145" -> "1000174"  [label="DDG: update_source_frame_number_"];
"1000145" -> "1000174"  [label="DDG: source_frame_number"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000174"  [label="DDG: base_layer"];
"1000101" -> "1000103"  [label="DDG: base_layer"];
"1000101" -> "1000108"  [label="DDG: base_layer"];
"1000296" -> "1000100"  [label="AST: "];
"1000102" -> "1000100"  [label="AST: "];
"1000103" -> "1000102"  [label="AST: "];
"1000105" -> "1000102"  [label="AST: "];
"1000106" -> "1000102"  [label="AST: "];
"1000111" -> "1000102"  [label="AST: "];
"1000116" -> "1000102"  [label="AST: "];
"1000117" -> "1000102"  [label="AST: "];
"1000120" -> "1000102"  [label="AST: "];
"1000121" -> "1000102"  [label="AST: "];
"1000124" -> "1000102"  [label="AST: "];
"1000125" -> "1000102"  [label="AST: "];
"1000128" -> "1000102"  [label="AST: "];
"1000143" -> "1000102"  [label="AST: "];
"1000153" -> "1000102"  [label="AST: "];
"1000155" -> "1000102"  [label="AST: "];
"1000156" -> "1000102"  [label="AST: "];
"1000159" -> "1000102"  [label="AST: "];
"1000161" -> "1000102"  [label="AST: "];
"1000167" -> "1000102"  [label="AST: "];
"1000172" -> "1000102"  [label="AST: "];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000134" -> "1000130"  [label="CFG: "];
"1000130" -> "1000129"  [label="DDG: update_source_frame_number_"];
"1000130" -> "1000129"  [label="DDG: source_frame_number"];
"1000117" -> "1000130"  [label="DDG: source_frame_number"];
"1000130" -> "1000145"  [label="DDG: update_source_frame_number_"];
"1000130" -> "1000145"  [label="DDG: source_frame_number"];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000125"  [label="CFG: "];
"1000132" -> "1000131"  [label="CFG: "];
"1000128" -> "1000102"  [label="AST: "];
"1000128" -> "1000136"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000136" -> "1000128"  [label="AST: "];
"1000146" -> "1000128"  [label="CFG: "];
"1000128" -> "1000174"  [label="DDG: DCHECK_IMPLIES(update_source_frame_number_ == source_frame_number,\n                 impl_bounds == recording_source_bounds)"];
"1000128" -> "1000174"  [label="DDG: \\" bounds \\" << impl_bounds.ToString() << \\" recording source \\"\n      << recording_source_bounds.ToString()"];
"1000128" -> "1000174"  [label="DDG: DCHECK_IMPLIES(update_source_frame_number_ == source_frame_number,\n                 impl_bounds == recording_source_bounds)\n      << \\" bounds \\" << impl_bounds.ToString() << \\" recording source \\"\n      << recording_source_bounds.ToString()"];
"1000129" -> "1000128"  [label="DDG: update_source_frame_number_ == source_frame_number"];
"1000129" -> "1000128"  [label="DDG: impl_bounds == recording_source_bounds"];
"1000136" -> "1000128"  [label="DDG: \\" bounds \\""];
"1000136" -> "1000128"  [label="DDG: impl_bounds.ToString() << \\" recording source \\"\n      << recording_source_bounds.ToString()"];
"1000129" -> "1000128"  [label="AST: "];
"1000129" -> "1000133"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000133" -> "1000129"  [label="AST: "];
"1000137" -> "1000129"  [label="CFG: "];
"1000129" -> "1000174"  [label="DDG: update_source_frame_number_ == source_frame_number"];
"1000129" -> "1000174"  [label="DDG: impl_bounds == recording_source_bounds"];
"1000129" -> "1000128"  [label="DDG: update_source_frame_number_ == source_frame_number"];
"1000129" -> "1000128"  [label="DDG: impl_bounds == recording_source_bounds"];
"1000130" -> "1000129"  [label="DDG: update_source_frame_number_"];
"1000130" -> "1000129"  [label="DDG: source_frame_number"];
"1000133" -> "1000129"  [label="DDG: impl_bounds"];
"1000133" -> "1000129"  [label="DDG: recording_source_bounds"];
"1000132" -> "1000130"  [label="AST: "];
"1000132" -> "1000131"  [label="CFG: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000133" -> "1000129"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000129" -> "1000133"  [label="CFG: "];
"1000133" -> "1000174"  [label="DDG: impl_bounds"];
"1000133" -> "1000174"  [label="DDG: recording_source_bounds"];
"1000133" -> "1000129"  [label="DDG: impl_bounds"];
"1000133" -> "1000129"  [label="DDG: recording_source_bounds"];
"1000121" -> "1000133"  [label="DDG: impl_bounds"];
"1000125" -> "1000133"  [label="DDG: recording_source_bounds"];
"1000133" -> "1000148"  [label="DDG: recording_source_bounds"];
"1000133" -> "1000148"  [label="DDG: impl_bounds"];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000130"  [label="CFG: "];
"1000135" -> "1000134"  [label="CFG: "];
"1000135" -> "1000133"  [label="AST: "];
"1000135" -> "1000134"  [label="CFG: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000138" -> "1000136"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000136" -> "1000138"  [label="CFG: "];
"1000138" -> "1000174"  [label="DDG: impl_bounds.ToString()"];
"1000138" -> "1000174"  [label="DDG: \\" recording source \\"\n      << recording_source_bounds.ToString()"];
"1000138" -> "1000136"  [label="DDG: impl_bounds.ToString()"];
"1000138" -> "1000136"  [label="DDG: \\" recording source \\"\n      << recording_source_bounds.ToString()"];
"1000140" -> "1000138"  [label="DDG: \\" recording source \\""];
"1000140" -> "1000138"  [label="DDG: recording_source_bounds.ToString()"];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000137"  [label="CFG: "];
"1000141" -> "1000139"  [label="CFG: "];
"1000140" -> "1000138"  [label="AST: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000142" -> "1000140"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000140" -> "1000174"  [label="DDG: recording_source_bounds.ToString()"];
"1000140" -> "1000138"  [label="DDG: \\" recording source \\""];
"1000140" -> "1000138"  [label="DDG: recording_source_bounds.ToString()"];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000139"  [label="CFG: "];
"1000142" -> "1000141"  [label="CFG: "];
"1000136" -> "1000128"  [label="AST: "];
"1000136" -> "1000138"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000128" -> "1000136"  [label="CFG: "];
"1000136" -> "1000174"  [label="DDG: impl_bounds.ToString() << \\" recording source \\"\n      << recording_source_bounds.ToString()"];
"1000136" -> "1000128"  [label="DDG: \\" bounds \\""];
"1000136" -> "1000128"  [label="DDG: impl_bounds.ToString() << \\" recording source \\"\n      << recording_source_bounds.ToString()"];
"1000138" -> "1000136"  [label="DDG: impl_bounds.ToString()"];
"1000138" -> "1000136"  [label="DDG: \\" recording source \\"\n      << recording_source_bounds.ToString()"];
"1000137" -> "1000136"  [label="AST: "];
"1000137" -> "1000129"  [label="CFG: "];
"1000139" -> "1000137"  [label="CFG: "];
"1000142" -> "1000140"  [label="AST: "];
"1000142" -> "1000141"  [label="CFG: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000143" -> "1000102"  [label="AST: "];
"1000144" -> "1000143"  [label="AST: "];
"1000151" -> "1000143"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000147" -> "1000146"  [label="CFG: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000144" -> "1000145"  [label="CFG: "];
"1000144" -> "1000148"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000148" -> "1000144"  [label="AST: "];
"1000152" -> "1000144"  [label="CFG: "];
"1000154" -> "1000144"  [label="CFG: "];
"1000144" -> "1000174"  [label="DDG: update_source_frame_number_ != source_frame_number &&\n      recording_source_bounds != impl_bounds"];
"1000144" -> "1000174"  [label="DDG: recording_source_bounds != impl_bounds"];
"1000144" -> "1000174"  [label="DDG: update_source_frame_number_ != source_frame_number"];
"1000145" -> "1000144"  [label="DDG: update_source_frame_number_"];
"1000145" -> "1000144"  [label="DDG: source_frame_number"];
"1000148" -> "1000144"  [label="DDG: recording_source_bounds"];
"1000148" -> "1000144"  [label="DDG: impl_bounds"];
"1000145" -> "1000144"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000149" -> "1000145"  [label="CFG: "];
"1000144" -> "1000145"  [label="CFG: "];
"1000145" -> "1000174"  [label="DDG: update_source_frame_number_"];
"1000145" -> "1000174"  [label="DDG: source_frame_number"];
"1000145" -> "1000144"  [label="DDG: update_source_frame_number_"];
"1000145" -> "1000144"  [label="DDG: source_frame_number"];
"1000130" -> "1000145"  [label="DDG: update_source_frame_number_"];
"1000130" -> "1000145"  [label="DDG: source_frame_number"];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000128"  [label="CFG: "];
"1000147" -> "1000146"  [label="CFG: "];
"1000150" -> "1000148"  [label="AST: "];
"1000150" -> "1000149"  [label="CFG: "];
"1000148" -> "1000150"  [label="CFG: "];
"1000151" -> "1000143"  [label="AST: "];
"1000152" -> "1000151"  [label="AST: "];
"1000148" -> "1000144"  [label="AST: "];
"1000148" -> "1000150"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000150" -> "1000148"  [label="AST: "];
"1000144" -> "1000148"  [label="CFG: "];
"1000148" -> "1000174"  [label="DDG: impl_bounds"];
"1000148" -> "1000174"  [label="DDG: recording_source_bounds"];
"1000148" -> "1000144"  [label="DDG: recording_source_bounds"];
"1000148" -> "1000144"  [label="DDG: impl_bounds"];
"1000133" -> "1000148"  [label="DDG: recording_source_bounds"];
"1000133" -> "1000148"  [label="DDG: impl_bounds"];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000145"  [label="CFG: "];
"1000150" -> "1000149"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000144"  [label="CFG: "];
"1000154" -> "1000152"  [label="CFG: "];
"1000152" -> "1000174"  [label="DDG: recording_source_->SetEmptyBounds()"];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000100"  [label="CFG: "];
"1000103" -> "1000104"  [label="CFG: "];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000104"  [label="CFG: "];
"1000104" -> "1000103"  [label="AST: "];
"1000107" -> "1000103"  [label="CFG: "];
"1000103" -> "1000174"  [label="DDG: Layer::PushPropertiesTo(base_layer)"];
"1000101" -> "1000103"  [label="DDG: base_layer"];
"1000103" -> "1000108"  [label="DDG: base_layer"];
"1000153" -> "1000102"  [label="AST: "];
"1000153" -> "1000154"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000157" -> "1000153"  [label="CFG: "];
"1000153" -> "1000174"  [label="DDG: nearest_neighbor_"];
"1000153" -> "1000174"  [label="DDG: layer_impl->SetNearestNeighbor(nearest_neighbor_)"];
"1000154" -> "1000153"  [label="AST: "];
"1000154" -> "1000152"  [label="CFG: "];
"1000154" -> "1000144"  [label="CFG: "];
"1000153" -> "1000154"  [label="CFG: "];
"1000156" -> "1000102"  [label="AST: "];
"1000156" -> "1000158"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000158" -> "1000156"  [label="AST: "];
"1000160" -> "1000156"  [label="CFG: "];
"1000156" -> "1000174"  [label="DDG: recording_source_->CreateRasterSource()"];
"1000156" -> "1000167"  [label="DDG: raster_source"];
"1000157" -> "1000156"  [label="AST: "];
"1000157" -> "1000153"  [label="CFG: "];
"1000158" -> "1000157"  [label="CFG: "];
"1000158" -> "1000156"  [label="AST: "];
"1000158" -> "1000157"  [label="CFG: "];
"1000156" -> "1000158"  [label="CFG: "];
"1000159" -> "1000102"  [label="AST: "];
"1000159" -> "1000160"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000164" -> "1000159"  [label="CFG: "];
"1000159" -> "1000174"  [label="DDG: SafeOpaqueBackgroundColor()"];
"1000159" -> "1000174"  [label="DDG: raster_source->SetBackgoundColor(SafeOpaqueBackgroundColor())"];
"1000160" -> "1000159"  [label="AST: "];
"1000160" -> "1000156"  [label="CFG: "];
"1000159" -> "1000160"  [label="CFG: "];
"1000161" -> "1000102"  [label="AST: "];
"1000161" -> "1000162"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000168" -> "1000161"  [label="CFG: "];
"1000161" -> "1000174"  [label="DDG: !contents_opaque() &&\n                                  !client_->FillsBoundsCompletely()"];
"1000161" -> "1000174"  [label="DDG: raster_source->SetRequiresClear(!contents_opaque() &&\n                                  !client_->FillsBoundsCompletely())"];
"1000162" -> "1000161"  [label="DDG: !contents_opaque()"];
"1000162" -> "1000161"  [label="DDG: !client_->FillsBoundsCompletely()"];
"1000162" -> "1000161"  [label="AST: "];
"1000162" -> "1000163"  [label="CFG: "];
"1000162" -> "1000165"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000165" -> "1000162"  [label="AST: "];
"1000161" -> "1000162"  [label="CFG: "];
"1000162" -> "1000174"  [label="DDG: !client_->FillsBoundsCompletely()"];
"1000162" -> "1000174"  [label="DDG: !contents_opaque()"];
"1000162" -> "1000161"  [label="DDG: !contents_opaque()"];
"1000162" -> "1000161"  [label="DDG: !client_->FillsBoundsCompletely()"];
"1000163" -> "1000162"  [label="DDG: contents_opaque()"];
"1000165" -> "1000162"  [label="DDG: client_->FillsBoundsCompletely()"];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000164"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000166" -> "1000163"  [label="CFG: "];
"1000162" -> "1000163"  [label="CFG: "];
"1000163" -> "1000174"  [label="DDG: contents_opaque()"];
"1000163" -> "1000162"  [label="DDG: contents_opaque()"];
"1000164" -> "1000163"  [label="AST: "];
"1000164" -> "1000159"  [label="CFG: "];
"1000163" -> "1000164"  [label="CFG: "];
"1000165" -> "1000162"  [label="AST: "];
"1000165" -> "1000166"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000162" -> "1000165"  [label="CFG: "];
"1000165" -> "1000174"  [label="DDG: client_->FillsBoundsCompletely()"];
"1000165" -> "1000162"  [label="DDG: client_->FillsBoundsCompletely()"];
"1000166" -> "1000165"  [label="AST: "];
"1000166" -> "1000163"  [label="CFG: "];
"1000165" -> "1000166"  [label="CFG: "];
"1000167" -> "1000102"  [label="AST: "];
"1000167" -> "1000171"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000169" -> "1000167"  [label="AST: "];
"1000171" -> "1000167"  [label="AST: "];
"1000173" -> "1000167"  [label="CFG: "];
"1000167" -> "1000174"  [label="DDG: &recording_invalidation_"];
"1000167" -> "1000174"  [label="DDG: raster_source"];
"1000167" -> "1000174"  [label="DDG: layer_impl->UpdateRasterSource(raster_source, &recording_invalidation_,\n                                 nullptr)"];
"1000167" -> "1000174"  [label="DDG: nullptr"];
"1000156" -> "1000167"  [label="DDG: raster_source"];
"1000168" -> "1000167"  [label="AST: "];
"1000168" -> "1000161"  [label="CFG: "];
"1000170" -> "1000168"  [label="CFG: "];
"1000169" -> "1000167"  [label="AST: "];
"1000169" -> "1000170"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000171" -> "1000169"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000170" -> "1000168"  [label="CFG: "];
"1000169" -> "1000170"  [label="CFG: "];
"1000171" -> "1000167"  [label="AST: "];
"1000171" -> "1000169"  [label="CFG: "];
"1000167" -> "1000171"  [label="CFG: "];
"1000172" -> "1000102"  [label="AST: "];
"1000172" -> "1000173"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000174" -> "1000172"  [label="CFG: "];
"1000172" -> "1000174"  [label="DDG: DCHECK(recording_invalidation_.IsEmpty())"];
"1000172" -> "1000174"  [label="DDG: recording_invalidation_.IsEmpty()"];
"1000173" -> "1000172"  [label="AST: "];
"1000173" -> "1000167"  [label="CFG: "];
"1000172" -> "1000173"  [label="CFG: "];
"1000106" -> "1000102"  [label="AST: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000108" -> "1000106"  [label="AST: "];
"1000113" -> "1000106"  [label="CFG: "];
"1000106" -> "1000174"  [label="DDG: static_cast<PictureLayerImpl*>(base_layer)"];
"1000106" -> "1000174"  [label="DDG: layer_impl"];
"1000108" -> "1000106"  [label="DDG: base_layer"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000103"  [label="CFG: "];
"1000109" -> "1000107"  [label="CFG: "];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000110"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000110" -> "1000108"  [label="AST: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000108" -> "1000174"  [label="DDG: base_layer"];
"1000108" -> "1000106"  [label="DDG: base_layer"];
"1000103" -> "1000108"  [label="DDG: base_layer"];
"1000101" -> "1000108"  [label="DDG: base_layer"];
"1000110" -> "1000108"  [label="AST: "];
"1000110" -> "1000109"  [label="CFG: "];
"1000108" -> "1000110"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000115" -> "1000112"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000106"  [label="CFG: "];
"1000114" -> "1000113"  [label="CFG: "];
"1000111" -> "1000102"  [label="AST: "];
"1000111" -> "1000115"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000115" -> "1000111"  [label="AST: "];
"1000118" -> "1000111"  [label="CFG: "];
"1000111" -> "1000174"  [label="DDG: is_mask_"];
"1000111" -> "1000174"  [label="DDG: layer_impl->is_mask_"];
"1000111" -> "1000174"  [label="DDG: DCHECK_EQ(layer_impl->is_mask_, is_mask_)"];
"1000114" -> "1000112"  [label="AST: "];
"1000114" -> "1000113"  [label="CFG: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000115" -> "1000111"  [label="AST: "];
"1000115" -> "1000112"  [label="CFG: "];
"1000111" -> "1000115"  [label="CFG: "];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000118"  [label="CFG: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000117" -> "1000102"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000122" -> "1000117"  [label="CFG: "];
"1000117" -> "1000174"  [label="DDG: layer_tree_host()->source_frame_number()"];
"1000117" -> "1000130"  [label="DDG: source_frame_number"];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000111"  [label="CFG: "];
"1000119" -> "1000118"  [label="CFG: "];
"1000121" -> "1000102"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000126" -> "1000121"  [label="CFG: "];
"1000121" -> "1000174"  [label="DDG: layer_impl->bounds()"];
"1000121" -> "1000133"  [label="DDG: impl_bounds"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000117"  [label="CFG: "];
"1000123" -> "1000122"  [label="CFG: "];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000122"  [label="CFG: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000125" -> "1000102"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000131" -> "1000125"  [label="CFG: "];
"1000125" -> "1000174"  [label="DDG: recording_source_->GetSize()"];
"1000125" -> "1000133"  [label="DDG: recording_source_bounds"];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000121"  [label="CFG: "];
"1000127" -> "1000126"  [label="CFG: "];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1000126"  [label="CFG: "];
"1000125" -> "1000127"  [label="CFG: "];
}
