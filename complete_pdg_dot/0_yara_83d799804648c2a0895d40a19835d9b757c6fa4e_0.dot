digraph "0_yara_83d799804648c2a0895d40a19835d9b757c6fa4e_0" {
"1000151" [label="(MethodReturn,int)"];
"1000102" [label="(MethodParameterIn,uint8_t* re_code)"];
"1000273" [label="(MethodParameterOut,uint8_t* re_code)"];
"1000129" [label="(Call,-1)"];
"1000130" [label="(Literal,1)"];
"1000127" [label="(Call,result = -1)"];
"1000128" [label="(Identifier,result)"];
"1000103" [label="(MethodParameterIn,uint8_t* input_data)"];
"1000274" [label="(MethodParameterOut,uint8_t* input_data)"];
"1000132" [label="(Call,(bytes_matched >= max_bytes_matched) || \\n          (character_size == 2 && *(input + 1) != 0))"];
"1000133" [label="(Call,bytes_matched >= max_bytes_matched)"];
"1000134" [label="(Identifier,bytes_matched)"];
"1000135" [label="(Identifier,max_bytes_matched)"];
"1000131" [label="(ControlStructure,if ((bytes_matched >= max_bytes_matched) || \\n          (character_size == 2 && *(input + 1) != 0)))"];
"1000136" [label="(Call,character_size == 2 && *(input + 1) != 0)"];
"1000137" [label="(Call,character_size == 2)"];
"1000138" [label="(Identifier,character_size)"];
"1000139" [label="(Literal,2)"];
"1000140" [label="(Call,*(input + 1) != 0)"];
"1000141" [label="(Call,*(input + 1))"];
"1000142" [label="(Call,input + 1)"];
"1000143" [label="(Identifier,input)"];
"1000144" [label="(Literal,1)"];
"1000145" [label="(Literal,0)"];
"1000146" [label="(Block,)"];
"1000149" [label="(Identifier,ACTION_KILL)"];
"1000147" [label="(Call,action = ACTION_KILL)"];
"1000148" [label="(Identifier,action)"];
"1000104" [label="(MethodParameterIn,size_t input_forwards_size)"];
"1000275" [label="(MethodParameterOut,size_t input_forwards_size)"];
"1000150" [label="(ControlStructure,break;)"];
"1000105" [label="(MethodParameterIn,size_t input_backwards_size)"];
"1000276" [label="(MethodParameterOut,size_t input_backwards_size)"];
"1000106" [label="(MethodParameterIn,int flags)"];
"1000277" [label="(MethodParameterOut,int flags)"];
"1000107" [label="(MethodParameterIn,RE_MATCH_CALLBACK_FUNC callback)"];
"1000278" [label="(MethodParameterOut,RE_MATCH_CALLBACK_FUNC callback)"];
"1000108" [label="(MethodParameterIn,void* callback_args)"];
"1000279" [label="(MethodParameterOut,void* callback_args)"];
"1000109" [label="(Block,)"];
"1000151" -> "1000101"  [label="AST: "];
"1000151" -> "1000132"  [label="CFG: "];
"1000108" -> "1000151"  [label="DDG: callback_args"];
"1000107" -> "1000151"  [label="DDG: callback"];
"1000104" -> "1000151"  [label="DDG: input_forwards_size"];
"1000105" -> "1000151"  [label="DDG: input_backwards_size"];
"1000136" -> "1000151"  [label="DDG: *(input + 1) != 0"];
"1000136" -> "1000151"  [label="DDG: character_size == 2"];
"1000133" -> "1000151"  [label="DDG: max_bytes_matched"];
"1000133" -> "1000151"  [label="DDG: bytes_matched"];
"1000132" -> "1000151"  [label="DDG: (bytes_matched >= max_bytes_matched) || \\n          (character_size == 2 && *(input + 1) != 0)"];
"1000132" -> "1000151"  [label="DDG: bytes_matched >= max_bytes_matched"];
"1000132" -> "1000151"  [label="DDG: character_size == 2 && *(input + 1) != 0"];
"1000140" -> "1000151"  [label="DDG: *(input + 1)"];
"1000127" -> "1000151"  [label="DDG: -1"];
"1000127" -> "1000151"  [label="DDG: result"];
"1000103" -> "1000151"  [label="DDG: input_data"];
"1000102" -> "1000151"  [label="DDG: re_code"];
"1000142" -> "1000151"  [label="DDG: input"];
"1000137" -> "1000151"  [label="DDG: character_size"];
"1000106" -> "1000151"  [label="DDG: flags"];
"1000102" -> "1000101"  [label="AST: "];
"1000102" -> "1000151"  [label="DDG: re_code"];
"1000273" -> "1000101"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000129" -> "1000130"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000129" -> "1000127"  [label="DDG: 1"];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000128"  [label="CFG: "];
"1000129" -> "1000130"  [label="CFG: "];
"1000127" -> "1000109"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000134" -> "1000127"  [label="CFG: "];
"1000127" -> "1000151"  [label="DDG: -1"];
"1000127" -> "1000151"  [label="DDG: result"];
"1000129" -> "1000127"  [label="DDG: 1"];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000101"  [label="CFG: "];
"1000130" -> "1000128"  [label="CFG: "];
"1000103" -> "1000101"  [label="AST: "];
"1000103" -> "1000151"  [label="DDG: input_data"];
"1000274" -> "1000101"  [label="AST: "];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000133"  [label="CFG: "];
"1000132" -> "1000136"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000136" -> "1000132"  [label="AST: "];
"1000148" -> "1000132"  [label="CFG: "];
"1000151" -> "1000132"  [label="CFG: "];
"1000132" -> "1000151"  [label="DDG: (bytes_matched >= max_bytes_matched) || \\n          (character_size == 2 && *(input + 1) != 0)"];
"1000132" -> "1000151"  [label="DDG: bytes_matched >= max_bytes_matched"];
"1000132" -> "1000151"  [label="DDG: character_size == 2 && *(input + 1) != 0"];
"1000133" -> "1000132"  [label="DDG: bytes_matched"];
"1000133" -> "1000132"  [label="DDG: max_bytes_matched"];
"1000136" -> "1000132"  [label="DDG: character_size == 2"];
"1000136" -> "1000132"  [label="DDG: *(input + 1) != 0"];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000138" -> "1000133"  [label="CFG: "];
"1000132" -> "1000133"  [label="CFG: "];
"1000133" -> "1000151"  [label="DDG: max_bytes_matched"];
"1000133" -> "1000151"  [label="DDG: bytes_matched"];
"1000133" -> "1000132"  [label="DDG: bytes_matched"];
"1000133" -> "1000132"  [label="DDG: max_bytes_matched"];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000127"  [label="CFG: "];
"1000135" -> "1000134"  [label="CFG: "];
"1000135" -> "1000133"  [label="AST: "];
"1000135" -> "1000134"  [label="CFG: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000131" -> "1000109"  [label="AST: "];
"1000132" -> "1000131"  [label="AST: "];
"1000146" -> "1000131"  [label="AST: "];
"1000136" -> "1000132"  [label="AST: "];
"1000136" -> "1000137"  [label="CFG: "];
"1000136" -> "1000140"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000140" -> "1000136"  [label="AST: "];
"1000132" -> "1000136"  [label="CFG: "];
"1000136" -> "1000151"  [label="DDG: *(input + 1) != 0"];
"1000136" -> "1000151"  [label="DDG: character_size == 2"];
"1000136" -> "1000132"  [label="DDG: character_size == 2"];
"1000136" -> "1000132"  [label="DDG: *(input + 1) != 0"];
"1000137" -> "1000136"  [label="DDG: character_size"];
"1000137" -> "1000136"  [label="DDG: 2"];
"1000140" -> "1000136"  [label="DDG: *(input + 1)"];
"1000140" -> "1000136"  [label="DDG: 0"];
"1000137" -> "1000136"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000143" -> "1000137"  [label="CFG: "];
"1000136" -> "1000137"  [label="CFG: "];
"1000137" -> "1000151"  [label="DDG: character_size"];
"1000137" -> "1000136"  [label="DDG: character_size"];
"1000137" -> "1000136"  [label="DDG: 2"];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000133"  [label="CFG: "];
"1000139" -> "1000138"  [label="CFG: "];
"1000139" -> "1000137"  [label="AST: "];
"1000139" -> "1000138"  [label="CFG: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000140" -> "1000136"  [label="AST: "];
"1000140" -> "1000145"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000145" -> "1000140"  [label="AST: "];
"1000136" -> "1000140"  [label="CFG: "];
"1000140" -> "1000151"  [label="DDG: *(input + 1)"];
"1000140" -> "1000136"  [label="DDG: *(input + 1)"];
"1000140" -> "1000136"  [label="DDG: 0"];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000142"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000145" -> "1000141"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000141" -> "1000142"  [label="CFG: "];
"1000142" -> "1000151"  [label="DDG: input"];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000137"  [label="CFG: "];
"1000144" -> "1000143"  [label="CFG: "];
"1000144" -> "1000142"  [label="AST: "];
"1000144" -> "1000143"  [label="CFG: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000145" -> "1000140"  [label="AST: "];
"1000145" -> "1000141"  [label="CFG: "];
"1000140" -> "1000145"  [label="CFG: "];
"1000146" -> "1000131"  [label="AST: "];
"1000147" -> "1000146"  [label="AST: "];
"1000150" -> "1000146"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000149" -> "1000148"  [label="CFG: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000150" -> "1000147"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000148" -> "1000132"  [label="CFG: "];
"1000149" -> "1000148"  [label="CFG: "];
"1000104" -> "1000101"  [label="AST: "];
"1000104" -> "1000151"  [label="DDG: input_forwards_size"];
"1000275" -> "1000101"  [label="AST: "];
"1000150" -> "1000146"  [label="AST: "];
"1000150" -> "1000147"  [label="CFG: "];
"1000105" -> "1000101"  [label="AST: "];
"1000105" -> "1000151"  [label="DDG: input_backwards_size"];
"1000276" -> "1000101"  [label="AST: "];
"1000106" -> "1000101"  [label="AST: "];
"1000106" -> "1000151"  [label="DDG: flags"];
"1000277" -> "1000101"  [label="AST: "];
"1000107" -> "1000101"  [label="AST: "];
"1000107" -> "1000151"  [label="DDG: callback"];
"1000278" -> "1000101"  [label="AST: "];
"1000108" -> "1000101"  [label="AST: "];
"1000108" -> "1000151"  [label="DDG: callback_args"];
"1000279" -> "1000101"  [label="AST: "];
"1000109" -> "1000101"  [label="AST: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000112" -> "1000109"  [label="AST: "];
"1000113" -> "1000109"  [label="AST: "];
"1000114" -> "1000109"  [label="AST: "];
"1000115" -> "1000109"  [label="AST: "];
"1000116" -> "1000109"  [label="AST: "];
"1000117" -> "1000109"  [label="AST: "];
"1000118" -> "1000109"  [label="AST: "];
"1000119" -> "1000109"  [label="AST: "];
"1000120" -> "1000109"  [label="AST: "];
"1000121" -> "1000109"  [label="AST: "];
"1000122" -> "1000109"  [label="AST: "];
"1000123" -> "1000109"  [label="AST: "];
"1000124" -> "1000109"  [label="AST: "];
"1000125" -> "1000109"  [label="AST: "];
"1000126" -> "1000109"  [label="AST: "];
"1000127" -> "1000109"  [label="AST: "];
"1000131" -> "1000109"  [label="AST: "];
}
