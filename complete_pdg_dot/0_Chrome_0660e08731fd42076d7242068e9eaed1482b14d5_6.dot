digraph "0_Chrome_0660e08731fd42076d7242068e9eaed1482b14d5_6" {
"1000133" [label="(Call,origin = url::Origin::Create(document_url))"];
"1000134" [label="(Identifier,origin)"];
"1000135" [label="(Call,url::Origin::Create(document_url))"];
"1000136" [label="(Identifier,document_url)"];
"1000138" [label="(Call,origin_url = origin.GetURL())"];
"1000139" [label="(Identifier,origin_url)"];
"1000140" [label="(Call,origin.GetURL())"];
"1000147" [label="(Identifier,Manifest::COMPONENT)"];
"1000143" [label="(ControlStructure,if (location_ != Manifest::COMPONENT &&\n        IsPolicyBlockedHostUnsafe(origin_url)))"];
"1000144" [label="(Call,location_ != Manifest::COMPONENT &&\n        IsPolicyBlockedHostUnsafe(origin_url))"];
"1000145" [label="(Call,location_ != Manifest::COMPONENT)"];
"1000146" [label="(Identifier,location_)"];
"1000149" [label="(Identifier,origin_url)"];
"1000150" [label="(Block,)"];
"1000148" [label="(Call,IsPolicyBlockedHostUnsafe(origin_url))"];
"1000152" [label="(Identifier,error)"];
"1000151" [label="(ControlStructure,if (error))"];
"1000156" [label="(Identifier,extension_misc::kPolicyBlockedScripting)"];
"1000153" [label="(Call,*error = extension_misc::kPolicyBlockedScripting)"];
"1000154" [label="(Call,*error)"];
"1000155" [label="(Identifier,error)"];
"1000158" [label="(Identifier,false)"];
"1000157" [label="(Return,return false;)"];
"1000284" [label="(MethodReturn,bool)"];
"1000160" [label="(Call,* tab_permissions = GetTabSpecificPermissions(tab_id))"];
"1000161" [label="(Identifier,tab_permissions)"];
"1000162" [label="(Call,GetTabSpecificPermissions(tab_id))"];
"1000163" [label="(Identifier,tab_id)"];
"1000166" [label="(Call,tab_permissions &&\n                     tab_permissions->HasAPIPermission(APIPermission::kTab))"];
"1000167" [label="(Identifier,tab_permissions)"];
"1000164" [label="(Call,has_active_tab = tab_permissions &&\n                     tab_permissions->HasAPIPermission(APIPermission::kTab))"];
"1000165" [label="(Identifier,has_active_tab)"];
"1000168" [label="(Call,tab_permissions->HasAPIPermission(APIPermission::kTab))"];
"1000169" [label="(Identifier,APIPermission::kTab)"];
"1000141" [label="(Block,)"];
"1000171" [label="(Call,has_all_urls =\n         active_permissions_unsafe_->explicit_hosts().ContainsPattern(all_urls))"];
"1000172" [label="(Identifier,has_all_urls)"];
"1000174" [label="(Identifier,all_urls)"];
"1000173" [label="(Call,active_permissions_unsafe_->explicit_hosts().ContainsPattern(all_urls))"];
"1000177" [label="(Call,active_permissions_unsafe_->HasAPIPermission(\n        APIPermission::kPageCapture))"];
"1000175" [label="(Call,has_page_capture = active_permissions_unsafe_->HasAPIPermission(\n        APIPermission::kPageCapture))"];
"1000176" [label="(Identifier,has_page_capture)"];
"1000115" [label="(MethodParameterIn,const GURL& document_url)"];
"1000392" [label="(MethodParameterOut,const GURL& document_url)"];
"1000178" [label="(Identifier,APIPermission::kPageCapture)"];
"1000180" [label="(ControlStructure,if (capture_requirement == CaptureRequirement::kActiveTabOrAllUrls))"];
"1000183" [label="(Identifier,CaptureRequirement::kActiveTabOrAllUrls)"];
"1000181" [label="(Call,capture_requirement == CaptureRequirement::kActiveTabOrAllUrls)"];
"1000182" [label="(Identifier,capture_requirement)"];
"1000184" [label="(Block,)"];
"1000189" [label="(Call,!has_all_urls)"];
"1000190" [label="(Identifier,has_all_urls)"];
"1000185" [label="(ControlStructure,if (!has_active_tab && !has_all_urls))"];
"1000191" [label="(Block,)"];
"1000186" [label="(Call,!has_active_tab && !has_all_urls)"];
"1000187" [label="(Call,!has_active_tab)"];
"1000188" [label="(Identifier,has_active_tab)"];
"1000193" [label="(Identifier,error)"];
"1000192" [label="(ControlStructure,if (error))"];
"1000197" [label="(Identifier,manifest_errors::kAllURLOrActiveTabNeeded)"];
"1000194" [label="(Call,*error = manifest_errors::kAllURLOrActiveTabNeeded)"];
"1000195" [label="(Call,*error)"];
"1000196" [label="(Identifier,error)"];
"1000199" [label="(Identifier,false)"];
"1000198" [label="(Return,return false;)"];
"1000116" [label="(MethodParameterIn,int tab_id)"];
"1000393" [label="(MethodParameterOut,int tab_id)"];
"1000203" [label="(Identifier,origin_url)"];
"1000204" [label="(Identifier,tab_id)"];
"1000200" [label="(ControlStructure,if (GetPageAccess(origin_url, tab_id, &access_error) ==\n        PageAccess::kAllowed))"];
"1000205" [label="(Call,&access_error)"];
"1000206" [label="(Identifier,access_error)"];
"1000201" [label="(Call,GetPageAccess(origin_url, tab_id, &access_error) ==\n        PageAccess::kAllowed)"];
"1000202" [label="(Call,GetPageAccess(origin_url, tab_id, &access_error))"];
"1000207" [label="(Identifier,PageAccess::kAllowed)"];
"1000209" [label="(Identifier,true)"];
"1000208" [label="(Return,return true;)"];
"1000117" [label="(MethodParameterIn,std::string* error)"];
"1000394" [label="(MethodParameterOut,std::string* error)"];
"1000210" [label="(ControlStructure,else)"];
"1000211" [label="(Block,)"];
"1000213" [label="(Identifier,CaptureRequirement::kPageCapture)"];
"1000212" [label="(Call,DCHECK_EQ(CaptureRequirement::kPageCapture, capture_requirement))"];
"1000214" [label="(Identifier,capture_requirement)"];
"1000218" [label="(Block,)"];
"1000215" [label="(ControlStructure,if (!has_page_capture))"];
"1000216" [label="(Call,!has_page_capture)"];
"1000217" [label="(Identifier,has_page_capture)"];
"1000220" [label="(Identifier,error)"];
"1000219" [label="(ControlStructure,if (error))"];
"1000224" [label="(Identifier,manifest_errors::kPageCaptureNeeded)"];
"1000221" [label="(Call,*error = manifest_errors::kPageCaptureNeeded)"];
"1000222" [label="(Call,*error)"];
"1000223" [label="(Identifier,error)"];
"1000229" [label="(Identifier,url::kHttpScheme)"];
"1000225" [label="(ControlStructure,if ((origin_url.SchemeIs(url::kHttpScheme) ||\n         origin_url.SchemeIs(url::kHttpsScheme)) &&\n        !origin.IsSameOriginWith(url::Origin::Create(\n            ExtensionsClient::Get()->GetWebstoreBaseURL()))))"];
"1000226" [label="(Call,(origin_url.SchemeIs(url::kHttpScheme) ||\n         origin_url.SchemeIs(url::kHttpsScheme)) &&\n        !origin.IsSameOriginWith(url::Origin::Create(\n            ExtensionsClient::Get()->GetWebstoreBaseURL())))"];
"1000227" [label="(Call,origin_url.SchemeIs(url::kHttpScheme) ||\n         origin_url.SchemeIs(url::kHttpsScheme))"];
"1000228" [label="(Call,origin_url.SchemeIs(url::kHttpScheme))"];
"1000118" [label="(MethodParameterIn,CaptureRequirement capture_requirement)"];
"1000395" [label="(MethodParameterOut,CaptureRequirement capture_requirement)"];
"1000119" [label="(Block,)"];
"1000231" [label="(Identifier,url::kHttpsScheme)"];
"1000230" [label="(Call,origin_url.SchemeIs(url::kHttpsScheme))"];
"1000234" [label="(Call,url::Origin::Create(\n            ExtensionsClient::Get()->GetWebstoreBaseURL()))"];
"1000232" [label="(Call,!origin.IsSameOriginWith(url::Origin::Create(\n            ExtensionsClient::Get()->GetWebstoreBaseURL())))"];
"1000233" [label="(Call,origin.IsSameOriginWith(url::Origin::Create(\n            ExtensionsClient::Get()->GetWebstoreBaseURL())))"];
"1000235" [label="(Call,ExtensionsClient::Get()->GetWebstoreBaseURL())"];
"1000236" [label="(Block,)"];
"1000238" [label="(Identifier,true)"];
"1000237" [label="(Return,return true;)"];
"1000123" [label="(Identifier,false)"];
"1000121" [label="(Call,has_active_tab = false)"];
"1000122" [label="(Identifier,has_active_tab)"];
"1000242" [label="(Identifier,extension_id_)"];
"1000239" [label="(ControlStructure,if (origin_url.host() == extension_id_))"];
"1000240" [label="(Call,origin_url.host() == extension_id_)"];
"1000241" [label="(Call,origin_url.host())"];
"1000244" [label="(Identifier,true)"];
"1000243" [label="(Return,return true;)"];
"1000246" [label="(Call,allowed_with_active_tab =\n      origin_url.SchemeIs(content::kChromeUIScheme) ||\n      origin_url.SchemeIs(kExtensionScheme) ||\n      document_url.SchemeIs(url::kDataScheme) ||\n      origin.IsSameOriginWith(\n          url::Origin::Create(ExtensionsClient::Get()->GetWebstoreBaseURL())))"];
"1000247" [label="(Identifier,allowed_with_active_tab)"];
"1000250" [label="(Identifier,content::kChromeUIScheme)"];
"1000248" [label="(Call,origin_url.SchemeIs(content::kChromeUIScheme) ||\n      origin_url.SchemeIs(kExtensionScheme) ||\n      document_url.SchemeIs(url::kDataScheme) ||\n      origin.IsSameOriginWith(\n          url::Origin::Create(ExtensionsClient::Get()->GetWebstoreBaseURL())))"];
"1000249" [label="(Call,origin_url.SchemeIs(content::kChromeUIScheme))"];
"1000253" [label="(Identifier,kExtensionScheme)"];
"1000251" [label="(Call,origin_url.SchemeIs(kExtensionScheme) ||\n      document_url.SchemeIs(url::kDataScheme) ||\n      origin.IsSameOriginWith(\n          url::Origin::Create(ExtensionsClient::Get()->GetWebstoreBaseURL())))"];
"1000252" [label="(Call,origin_url.SchemeIs(kExtensionScheme))"];
"1000256" [label="(Identifier,url::kDataScheme)"];
"1000254" [label="(Call,document_url.SchemeIs(url::kDataScheme) ||\n      origin.IsSameOriginWith(\n          url::Origin::Create(ExtensionsClient::Get()->GetWebstoreBaseURL())))"];
"1000255" [label="(Call,document_url.SchemeIs(url::kDataScheme))"];
"1000127" [label="(Identifier,false)"];
"1000125" [label="(Call,has_all_urls = false)"];
"1000126" [label="(Identifier,has_all_urls)"];
"1000257" [label="(Call,origin.IsSameOriginWith(\n          url::Origin::Create(ExtensionsClient::Get()->GetWebstoreBaseURL())))"];
"1000258" [label="(Call,url::Origin::Create(ExtensionsClient::Get()->GetWebstoreBaseURL()))"];
"1000259" [label="(Call,ExtensionsClient::Get()->GetWebstoreBaseURL())"];
"1000260" [label="(ControlStructure,if (!allowed_with_active_tab))"];
"1000263" [label="(Block,)"];
"1000261" [label="(Call,!allowed_with_active_tab)"];
"1000262" [label="(Identifier,allowed_with_active_tab)"];
"1000264" [label="(ControlStructure,if (error))"];
"1000265" [label="(Identifier,error)"];
"1000269" [label="(Identifier,access_error)"];
"1000266" [label="(Call,*error = access_error)"];
"1000267" [label="(Call,*error)"];
"1000268" [label="(Identifier,error)"];
"1000271" [label="(Identifier,false)"];
"1000270" [label="(Return,return false;)"];
"1000272" [label="(ControlStructure,if (has_active_tab))"];
"1000273" [label="(Identifier,has_active_tab)"];
"1000275" [label="(Identifier,true)"];
"1000274" [label="(Return,return true;)"];
"1000131" [label="(Identifier,false)"];
"1000129" [label="(Call,has_page_capture = false)"];
"1000130" [label="(Identifier,has_page_capture)"];
"1000276" [label="(ControlStructure,if (error))"];
"1000277" [label="(Identifier,error)"];
"1000281" [label="(Identifier,manifest_errors::kActiveTabPermissionNotGranted)"];
"1000278" [label="(Call,*error = manifest_errors::kActiveTabPermissionNotGranted)"];
"1000279" [label="(Call,*error)"];
"1000280" [label="(Identifier,error)"];
"1000282" [label="(Return,return false;)"];
"1000283" [label="(Identifier,false)"];
"1000133" -> "1000119"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000139" -> "1000133"  [label="CFG: "];
"1000133" -> "1000284"  [label="DDG: origin"];
"1000133" -> "1000284"  [label="DDG: url::Origin::Create(document_url)"];
"1000135" -> "1000133"  [label="DDG: document_url"];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000129"  [label="CFG: "];
"1000136" -> "1000134"  [label="CFG: "];
"1000135" -> "1000133"  [label="AST: "];
"1000135" -> "1000136"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000135" -> "1000284"  [label="DDG: document_url"];
"1000135" -> "1000133"  [label="DDG: document_url"];
"1000115" -> "1000135"  [label="DDG: document_url"];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000134"  [label="CFG: "];
"1000135" -> "1000136"  [label="CFG: "];
"1000138" -> "1000119"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000146" -> "1000138"  [label="CFG: "];
"1000138" -> "1000284"  [label="DDG: origin_url"];
"1000138" -> "1000284"  [label="DDG: origin.GetURL()"];
"1000138" -> "1000148"  [label="DDG: origin_url"];
"1000138" -> "1000202"  [label="DDG: origin_url"];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000133"  [label="CFG: "];
"1000140" -> "1000139"  [label="CFG: "];
"1000140" -> "1000138"  [label="AST: "];
"1000140" -> "1000139"  [label="CFG: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000147" -> "1000145"  [label="AST: "];
"1000147" -> "1000146"  [label="CFG: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000143" -> "1000141"  [label="AST: "];
"1000144" -> "1000143"  [label="AST: "];
"1000150" -> "1000143"  [label="AST: "];
"1000144" -> "1000143"  [label="AST: "];
"1000144" -> "1000145"  [label="CFG: "];
"1000144" -> "1000148"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000148" -> "1000144"  [label="AST: "];
"1000152" -> "1000144"  [label="CFG: "];
"1000161" -> "1000144"  [label="CFG: "];
"1000144" -> "1000284"  [label="DDG: location_ != Manifest::COMPONENT &&\n        IsPolicyBlockedHostUnsafe(origin_url)"];
"1000144" -> "1000284"  [label="DDG: IsPolicyBlockedHostUnsafe(origin_url)"];
"1000144" -> "1000284"  [label="DDG: location_ != Manifest::COMPONENT"];
"1000145" -> "1000144"  [label="DDG: location_"];
"1000145" -> "1000144"  [label="DDG: Manifest::COMPONENT"];
"1000148" -> "1000144"  [label="DDG: origin_url"];
"1000145" -> "1000144"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000149" -> "1000145"  [label="CFG: "];
"1000144" -> "1000145"  [label="CFG: "];
"1000145" -> "1000284"  [label="DDG: location_"];
"1000145" -> "1000284"  [label="DDG: Manifest::COMPONENT"];
"1000145" -> "1000144"  [label="DDG: location_"];
"1000145" -> "1000144"  [label="DDG: Manifest::COMPONENT"];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000138"  [label="CFG: "];
"1000147" -> "1000146"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000145"  [label="CFG: "];
"1000148" -> "1000149"  [label="CFG: "];
"1000150" -> "1000143"  [label="AST: "];
"1000151" -> "1000150"  [label="AST: "];
"1000157" -> "1000150"  [label="AST: "];
"1000148" -> "1000144"  [label="AST: "];
"1000148" -> "1000149"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000144" -> "1000148"  [label="CFG: "];
"1000148" -> "1000284"  [label="DDG: origin_url"];
"1000148" -> "1000144"  [label="DDG: origin_url"];
"1000138" -> "1000148"  [label="DDG: origin_url"];
"1000148" -> "1000202"  [label="DDG: origin_url"];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000144"  [label="CFG: "];
"1000155" -> "1000152"  [label="CFG: "];
"1000158" -> "1000152"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000151"  [label="AST: "];
"1000153" -> "1000151"  [label="AST: "];
"1000156" -> "1000153"  [label="AST: "];
"1000156" -> "1000154"  [label="CFG: "];
"1000153" -> "1000156"  [label="CFG: "];
"1000153" -> "1000151"  [label="AST: "];
"1000153" -> "1000156"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000156" -> "1000153"  [label="AST: "];
"1000158" -> "1000153"  [label="CFG: "];
"1000153" -> "1000284"  [label="DDG: *error"];
"1000153" -> "1000284"  [label="DDG: extension_misc::kPolicyBlockedScripting"];
"1000154" -> "1000153"  [label="AST: "];
"1000154" -> "1000155"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000156" -> "1000154"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000155" -> "1000152"  [label="CFG: "];
"1000154" -> "1000155"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000158" -> "1000153"  [label="CFG: "];
"1000158" -> "1000152"  [label="CFG: "];
"1000157" -> "1000158"  [label="CFG: "];
"1000158" -> "1000157"  [label="DDG: false"];
"1000157" -> "1000150"  [label="AST: "];
"1000157" -> "1000158"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000284" -> "1000157"  [label="CFG: "];
"1000157" -> "1000284"  [label="DDG: <RET>"];
"1000158" -> "1000157"  [label="DDG: false"];
"1000284" -> "1000114"  [label="AST: "];
"1000284" -> "1000157"  [label="CFG: "];
"1000284" -> "1000198"  [label="CFG: "];
"1000284" -> "1000208"  [label="CFG: "];
"1000284" -> "1000237"  [label="CFG: "];
"1000284" -> "1000243"  [label="CFG: "];
"1000284" -> "1000270"  [label="CFG: "];
"1000284" -> "1000274"  [label="CFG: "];
"1000284" -> "1000282"  [label="CFG: "];
"1000198" -> "1000284"  [label="DDG: <RET>"];
"1000208" -> "1000284"  [label="DDG: <RET>"];
"1000282" -> "1000284"  [label="DDG: <RET>"];
"1000243" -> "1000284"  [label="DDG: <RET>"];
"1000232" -> "1000284"  [label="DDG: origin.IsSameOriginWith(url::Origin::Create(\n            ExtensionsClient::Get()->GetWebstoreBaseURL()))"];
"1000216" -> "1000284"  [label="DDG: !has_page_capture"];
"1000216" -> "1000284"  [label="DDG: has_page_capture"];
"1000254" -> "1000284"  [label="DDG: document_url.SchemeIs(url::kDataScheme)"];
"1000254" -> "1000284"  [label="DDG: origin.IsSameOriginWith(\n          url::Origin::Create(ExtensionsClient::Get()->GetWebstoreBaseURL()))"];
"1000226" -> "1000284"  [label="DDG: (origin_url.SchemeIs(url::kHttpScheme) ||\n         origin_url.SchemeIs(url::kHttpsScheme)) &&\n        !origin.IsSameOriginWith(url::Origin::Create(\n            ExtensionsClient::Get()->GetWebstoreBaseURL()))"];
"1000226" -> "1000284"  [label="DDG: origin_url.SchemeIs(url::kHttpScheme) ||\n         origin_url.SchemeIs(url::kHttpsScheme)"];
"1000226" -> "1000284"  [label="DDG: !origin.IsSameOriginWith(url::Origin::Create(\n            ExtensionsClient::Get()->GetWebstoreBaseURL()))"];
"1000138" -> "1000284"  [label="DDG: origin_url"];
"1000138" -> "1000284"  [label="DDG: origin.GetURL()"];
"1000181" -> "1000284"  [label="DDG: capture_requirement == CaptureRequirement::kActiveTabOrAllUrls"];
"1000181" -> "1000284"  [label="DDG: capture_requirement"];
"1000181" -> "1000284"  [label="DDG: CaptureRequirement::kActiveTabOrAllUrls"];
"1000258" -> "1000284"  [label="DDG: ExtensionsClient::Get()->GetWebstoreBaseURL()"];
"1000246" -> "1000284"  [label="DDG: origin_url.SchemeIs(content::kChromeUIScheme) ||\n      origin_url.SchemeIs(kExtensionScheme) ||\n      document_url.SchemeIs(url::kDataScheme) ||\n      origin.IsSameOriginWith(\n          url::Origin::Create(ExtensionsClient::Get()->GetWebstoreBaseURL()))"];
"1000117" -> "1000284"  [label="DDG: error"];
"1000187" -> "1000284"  [label="DDG: has_active_tab"];
"1000177" -> "1000284"  [label="DDG: APIPermission::kPageCapture"];
"1000166" -> "1000284"  [label="DDG: tab_permissions->HasAPIPermission(APIPermission::kTab)"];
"1000166" -> "1000284"  [label="DDG: tab_permissions"];
"1000129" -> "1000284"  [label="DDG: has_page_capture"];
"1000129" -> "1000284"  [label="DDG: false"];
"1000186" -> "1000284"  [label="DDG: !has_active_tab && !has_all_urls"];
"1000186" -> "1000284"  [label="DDG: !has_active_tab"];
"1000186" -> "1000284"  [label="DDG: !has_all_urls"];
"1000125" -> "1000284"  [label="DDG: has_all_urls"];
"1000171" -> "1000284"  [label="DDG: has_all_urls"];
"1000171" -> "1000284"  [label="DDG: active_permissions_unsafe_->explicit_hosts().ContainsPattern(all_urls)"];
"1000248" -> "1000284"  [label="DDG: origin_url.SchemeIs(kExtensionScheme) ||\n      document_url.SchemeIs(url::kDataScheme) ||\n      origin.IsSameOriginWith(\n          url::Origin::Create(ExtensionsClient::Get()->GetWebstoreBaseURL()))"];
"1000248" -> "1000284"  [label="DDG: origin_url.SchemeIs(content::kChromeUIScheme)"];
"1000201" -> "1000284"  [label="DDG: GetPageAccess(origin_url, tab_id, &access_error) ==\n        PageAccess::kAllowed"];
"1000201" -> "1000284"  [label="DDG: PageAccess::kAllowed"];
"1000201" -> "1000284"  [label="DDG: GetPageAccess(origin_url, tab_id, &access_error)"];
"1000252" -> "1000284"  [label="DDG: kExtensionScheme"];
"1000168" -> "1000284"  [label="DDG: APIPermission::kTab"];
"1000234" -> "1000284"  [label="DDG: ExtensionsClient::Get()->GetWebstoreBaseURL()"];
"1000189" -> "1000284"  [label="DDG: has_all_urls"];
"1000240" -> "1000284"  [label="DDG: origin_url.host() == extension_id_"];
"1000240" -> "1000284"  [label="DDG: extension_id_"];
"1000240" -> "1000284"  [label="DDG: origin_url.host()"];
"1000227" -> "1000284"  [label="DDG: origin_url.SchemeIs(url::kHttpScheme)"];
"1000227" -> "1000284"  [label="DDG: origin_url.SchemeIs(url::kHttpsScheme)"];
"1000212" -> "1000284"  [label="DDG: capture_requirement"];
"1000212" -> "1000284"  [label="DDG: DCHECK_EQ(CaptureRequirement::kPageCapture, capture_requirement)"];
"1000212" -> "1000284"  [label="DDG: CaptureRequirement::kPageCapture"];
"1000251" -> "1000284"  [label="DDG: document_url.SchemeIs(url::kDataScheme) ||\n      origin.IsSameOriginWith(\n          url::Origin::Create(ExtensionsClient::Get()->GetWebstoreBaseURL()))"];
"1000251" -> "1000284"  [label="DDG: origin_url.SchemeIs(kExtensionScheme)"];
"1000194" -> "1000284"  [label="DDG: *error"];
"1000194" -> "1000284"  [label="DDG: manifest_errors::kAllURLOrActiveTabNeeded"];
"1000266" -> "1000284"  [label="DDG: access_error"];
"1000266" -> "1000284"  [label="DDG: *error"];
"1000164" -> "1000284"  [label="DDG: tab_permissions &&\n                     tab_permissions->HasAPIPermission(APIPermission::kTab)"];
"1000164" -> "1000284"  [label="DDG: has_active_tab"];
"1000228" -> "1000284"  [label="DDG: url::kHttpScheme"];
"1000144" -> "1000284"  [label="DDG: location_ != Manifest::COMPONENT &&\n        IsPolicyBlockedHostUnsafe(origin_url)"];
"1000144" -> "1000284"  [label="DDG: IsPolicyBlockedHostUnsafe(origin_url)"];
"1000144" -> "1000284"  [label="DDG: location_ != Manifest::COMPONENT"];
"1000133" -> "1000284"  [label="DDG: origin"];
"1000133" -> "1000284"  [label="DDG: url::Origin::Create(document_url)"];
"1000202" -> "1000284"  [label="DDG: origin_url"];
"1000202" -> "1000284"  [label="DDG: &access_error"];
"1000202" -> "1000284"  [label="DDG: tab_id"];
"1000115" -> "1000284"  [label="DDG: document_url"];
"1000221" -> "1000284"  [label="DDG: *error"];
"1000221" -> "1000284"  [label="DDG: manifest_errors::kPageCaptureNeeded"];
"1000148" -> "1000284"  [label="DDG: origin_url"];
"1000257" -> "1000284"  [label="DDG: url::Origin::Create(ExtensionsClient::Get()->GetWebstoreBaseURL())"];
"1000175" -> "1000284"  [label="DDG: has_page_capture"];
"1000175" -> "1000284"  [label="DDG: active_permissions_unsafe_->HasAPIPermission(\n        APIPermission::kPageCapture)"];
"1000118" -> "1000284"  [label="DDG: capture_requirement"];
"1000230" -> "1000284"  [label="DDG: url::kHttpsScheme"];
"1000261" -> "1000284"  [label="DDG: allowed_with_active_tab"];
"1000261" -> "1000284"  [label="DDG: !allowed_with_active_tab"];
"1000153" -> "1000284"  [label="DDG: *error"];
"1000153" -> "1000284"  [label="DDG: extension_misc::kPolicyBlockedScripting"];
"1000278" -> "1000284"  [label="DDG: manifest_errors::kActiveTabPermissionNotGranted"];
"1000278" -> "1000284"  [label="DDG: *error"];
"1000233" -> "1000284"  [label="DDG: url::Origin::Create(\n            ExtensionsClient::Get()->GetWebstoreBaseURL())"];
"1000135" -> "1000284"  [label="DDG: document_url"];
"1000121" -> "1000284"  [label="DDG: has_active_tab"];
"1000249" -> "1000284"  [label="DDG: content::kChromeUIScheme"];
"1000255" -> "1000284"  [label="DDG: url::kDataScheme"];
"1000162" -> "1000284"  [label="DDG: tab_id"];
"1000160" -> "1000284"  [label="DDG: GetTabSpecificPermissions(tab_id)"];
"1000145" -> "1000284"  [label="DDG: location_"];
"1000145" -> "1000284"  [label="DDG: Manifest::COMPONENT"];
"1000116" -> "1000284"  [label="DDG: tab_id"];
"1000173" -> "1000284"  [label="DDG: all_urls"];
"1000157" -> "1000284"  [label="DDG: <RET>"];
"1000270" -> "1000284"  [label="DDG: <RET>"];
"1000274" -> "1000284"  [label="DDG: <RET>"];
"1000237" -> "1000284"  [label="DDG: <RET>"];
"1000160" -> "1000141"  [label="AST: "];
"1000160" -> "1000162"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000162" -> "1000160"  [label="AST: "];
"1000165" -> "1000160"  [label="CFG: "];
"1000160" -> "1000284"  [label="DDG: GetTabSpecificPermissions(tab_id)"];
"1000162" -> "1000160"  [label="DDG: tab_id"];
"1000160" -> "1000166"  [label="DDG: tab_permissions"];
"1000161" -> "1000160"  [label="AST: "];
"1000161" -> "1000144"  [label="CFG: "];
"1000163" -> "1000161"  [label="CFG: "];
"1000162" -> "1000160"  [label="AST: "];
"1000162" -> "1000163"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000160" -> "1000162"  [label="CFG: "];
"1000162" -> "1000284"  [label="DDG: tab_id"];
"1000162" -> "1000160"  [label="DDG: tab_id"];
"1000116" -> "1000162"  [label="DDG: tab_id"];
"1000162" -> "1000202"  [label="DDG: tab_id"];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000161"  [label="CFG: "];
"1000162" -> "1000163"  [label="CFG: "];
"1000166" -> "1000164"  [label="AST: "];
"1000166" -> "1000167"  [label="CFG: "];
"1000166" -> "1000168"  [label="CFG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000168" -> "1000166"  [label="AST: "];
"1000164" -> "1000166"  [label="CFG: "];
"1000166" -> "1000284"  [label="DDG: tab_permissions->HasAPIPermission(APIPermission::kTab)"];
"1000166" -> "1000284"  [label="DDG: tab_permissions"];
"1000166" -> "1000164"  [label="DDG: tab_permissions"];
"1000166" -> "1000164"  [label="DDG: tab_permissions->HasAPIPermission(APIPermission::kTab)"];
"1000160" -> "1000166"  [label="DDG: tab_permissions"];
"1000168" -> "1000166"  [label="DDG: APIPermission::kTab"];
"1000167" -> "1000166"  [label="AST: "];
"1000167" -> "1000165"  [label="CFG: "];
"1000169" -> "1000167"  [label="CFG: "];
"1000166" -> "1000167"  [label="CFG: "];
"1000164" -> "1000141"  [label="AST: "];
"1000164" -> "1000166"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000166" -> "1000164"  [label="AST: "];
"1000172" -> "1000164"  [label="CFG: "];
"1000164" -> "1000284"  [label="DDG: tab_permissions &&\n                     tab_permissions->HasAPIPermission(APIPermission::kTab)"];
"1000164" -> "1000284"  [label="DDG: has_active_tab"];
"1000166" -> "1000164"  [label="DDG: tab_permissions"];
"1000166" -> "1000164"  [label="DDG: tab_permissions->HasAPIPermission(APIPermission::kTab)"];
"1000164" -> "1000187"  [label="DDG: has_active_tab"];
"1000165" -> "1000164"  [label="AST: "];
"1000165" -> "1000160"  [label="CFG: "];
"1000167" -> "1000165"  [label="CFG: "];
"1000168" -> "1000166"  [label="AST: "];
"1000168" -> "1000169"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000166" -> "1000168"  [label="CFG: "];
"1000168" -> "1000284"  [label="DDG: APIPermission::kTab"];
"1000168" -> "1000166"  [label="DDG: APIPermission::kTab"];
"1000169" -> "1000168"  [label="AST: "];
"1000169" -> "1000167"  [label="CFG: "];
"1000168" -> "1000169"  [label="CFG: "];
"1000141" -> "1000119"  [label="AST: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000159" -> "1000141"  [label="AST: "];
"1000160" -> "1000141"  [label="AST: "];
"1000164" -> "1000141"  [label="AST: "];
"1000170" -> "1000141"  [label="AST: "];
"1000171" -> "1000141"  [label="AST: "];
"1000175" -> "1000141"  [label="AST: "];
"1000171" -> "1000141"  [label="AST: "];
"1000171" -> "1000173"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="AST: "];
"1000176" -> "1000171"  [label="CFG: "];
"1000171" -> "1000284"  [label="DDG: has_all_urls"];
"1000171" -> "1000284"  [label="DDG: active_permissions_unsafe_->explicit_hosts().ContainsPattern(all_urls)"];
"1000173" -> "1000171"  [label="DDG: all_urls"];
"1000171" -> "1000189"  [label="DDG: has_all_urls"];
"1000172" -> "1000171"  [label="AST: "];
"1000172" -> "1000164"  [label="CFG: "];
"1000174" -> "1000172"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000174" -> "1000172"  [label="CFG: "];
"1000173" -> "1000174"  [label="CFG: "];
"1000173" -> "1000171"  [label="AST: "];
"1000173" -> "1000174"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000171" -> "1000173"  [label="CFG: "];
"1000173" -> "1000284"  [label="DDG: all_urls"];
"1000173" -> "1000171"  [label="DDG: all_urls"];
"1000177" -> "1000175"  [label="AST: "];
"1000177" -> "1000178"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000175" -> "1000177"  [label="CFG: "];
"1000177" -> "1000284"  [label="DDG: APIPermission::kPageCapture"];
"1000177" -> "1000175"  [label="DDG: APIPermission::kPageCapture"];
"1000175" -> "1000141"  [label="AST: "];
"1000175" -> "1000177"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000177" -> "1000175"  [label="AST: "];
"1000182" -> "1000175"  [label="CFG: "];
"1000175" -> "1000284"  [label="DDG: has_page_capture"];
"1000175" -> "1000284"  [label="DDG: active_permissions_unsafe_->HasAPIPermission(\n        APIPermission::kPageCapture)"];
"1000177" -> "1000175"  [label="DDG: APIPermission::kPageCapture"];
"1000175" -> "1000216"  [label="DDG: has_page_capture"];
"1000176" -> "1000175"  [label="AST: "];
"1000176" -> "1000171"  [label="CFG: "];
"1000178" -> "1000176"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000284"  [label="DDG: document_url"];
"1000115" -> "1000135"  [label="DDG: document_url"];
"1000392" -> "1000114"  [label="AST: "];
"1000178" -> "1000177"  [label="AST: "];
"1000178" -> "1000176"  [label="CFG: "];
"1000177" -> "1000178"  [label="CFG: "];
"1000180" -> "1000119"  [label="AST: "];
"1000181" -> "1000180"  [label="AST: "];
"1000184" -> "1000180"  [label="AST: "];
"1000210" -> "1000180"  [label="AST: "];
"1000183" -> "1000181"  [label="AST: "];
"1000183" -> "1000182"  [label="CFG: "];
"1000181" -> "1000183"  [label="CFG: "];
"1000181" -> "1000180"  [label="AST: "];
"1000181" -> "1000183"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000183" -> "1000181"  [label="AST: "];
"1000188" -> "1000181"  [label="CFG: "];
"1000213" -> "1000181"  [label="CFG: "];
"1000181" -> "1000284"  [label="DDG: capture_requirement == CaptureRequirement::kActiveTabOrAllUrls"];
"1000181" -> "1000284"  [label="DDG: capture_requirement"];
"1000181" -> "1000284"  [label="DDG: CaptureRequirement::kActiveTabOrAllUrls"];
"1000118" -> "1000181"  [label="DDG: capture_requirement"];
"1000181" -> "1000212"  [label="DDG: capture_requirement"];
"1000182" -> "1000181"  [label="AST: "];
"1000182" -> "1000175"  [label="CFG: "];
"1000183" -> "1000182"  [label="CFG: "];
"1000184" -> "1000180"  [label="AST: "];
"1000185" -> "1000184"  [label="AST: "];
"1000200" -> "1000184"  [label="AST: "];
"1000189" -> "1000186"  [label="AST: "];
"1000189" -> "1000190"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000186" -> "1000189"  [label="CFG: "];
"1000189" -> "1000284"  [label="DDG: has_all_urls"];
"1000189" -> "1000186"  [label="DDG: has_all_urls"];
"1000171" -> "1000189"  [label="DDG: has_all_urls"];
"1000190" -> "1000189"  [label="AST: "];
"1000190" -> "1000187"  [label="CFG: "];
"1000189" -> "1000190"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000186" -> "1000185"  [label="AST: "];
"1000191" -> "1000185"  [label="AST: "];
"1000191" -> "1000185"  [label="AST: "];
"1000192" -> "1000191"  [label="AST: "];
"1000198" -> "1000191"  [label="AST: "];
"1000186" -> "1000185"  [label="AST: "];
"1000186" -> "1000187"  [label="CFG: "];
"1000186" -> "1000189"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000189" -> "1000186"  [label="AST: "];
"1000193" -> "1000186"  [label="CFG: "];
"1000203" -> "1000186"  [label="CFG: "];
"1000186" -> "1000284"  [label="DDG: !has_active_tab && !has_all_urls"];
"1000186" -> "1000284"  [label="DDG: !has_active_tab"];
"1000186" -> "1000284"  [label="DDG: !has_all_urls"];
"1000187" -> "1000186"  [label="DDG: has_active_tab"];
"1000189" -> "1000186"  [label="DDG: has_all_urls"];
"1000187" -> "1000186"  [label="AST: "];
"1000187" -> "1000188"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000190" -> "1000187"  [label="CFG: "];
"1000186" -> "1000187"  [label="CFG: "];
"1000187" -> "1000284"  [label="DDG: has_active_tab"];
"1000187" -> "1000186"  [label="DDG: has_active_tab"];
"1000164" -> "1000187"  [label="DDG: has_active_tab"];
"1000188" -> "1000187"  [label="AST: "];
"1000188" -> "1000181"  [label="CFG: "];
"1000187" -> "1000188"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000193" -> "1000186"  [label="CFG: "];
"1000196" -> "1000193"  [label="CFG: "];
"1000199" -> "1000193"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000193" -> "1000192"  [label="AST: "];
"1000194" -> "1000192"  [label="AST: "];
"1000197" -> "1000194"  [label="AST: "];
"1000197" -> "1000195"  [label="CFG: "];
"1000194" -> "1000197"  [label="CFG: "];
"1000194" -> "1000192"  [label="AST: "];
"1000194" -> "1000197"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000197" -> "1000194"  [label="AST: "];
"1000199" -> "1000194"  [label="CFG: "];
"1000194" -> "1000284"  [label="DDG: *error"];
"1000194" -> "1000284"  [label="DDG: manifest_errors::kAllURLOrActiveTabNeeded"];
"1000195" -> "1000194"  [label="AST: "];
"1000195" -> "1000196"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000197" -> "1000195"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000196" -> "1000193"  [label="CFG: "];
"1000195" -> "1000196"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000199" -> "1000194"  [label="CFG: "];
"1000199" -> "1000193"  [label="CFG: "];
"1000198" -> "1000199"  [label="CFG: "];
"1000199" -> "1000198"  [label="DDG: false"];
"1000198" -> "1000191"  [label="AST: "];
"1000198" -> "1000199"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000284" -> "1000198"  [label="CFG: "];
"1000198" -> "1000284"  [label="DDG: <RET>"];
"1000199" -> "1000198"  [label="DDG: false"];
"1000116" -> "1000114"  [label="AST: "];
"1000116" -> "1000284"  [label="DDG: tab_id"];
"1000116" -> "1000162"  [label="DDG: tab_id"];
"1000116" -> "1000202"  [label="DDG: tab_id"];
"1000393" -> "1000114"  [label="AST: "];
"1000203" -> "1000202"  [label="AST: "];
"1000203" -> "1000186"  [label="CFG: "];
"1000204" -> "1000203"  [label="CFG: "];
"1000204" -> "1000202"  [label="AST: "];
"1000204" -> "1000203"  [label="CFG: "];
"1000206" -> "1000204"  [label="CFG: "];
"1000200" -> "1000184"  [label="AST: "];
"1000201" -> "1000200"  [label="AST: "];
"1000208" -> "1000200"  [label="AST: "];
"1000205" -> "1000202"  [label="AST: "];
"1000205" -> "1000206"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000202" -> "1000205"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000206" -> "1000204"  [label="CFG: "];
"1000205" -> "1000206"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000201" -> "1000207"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000207" -> "1000201"  [label="AST: "];
"1000209" -> "1000201"  [label="CFG: "];
"1000241" -> "1000201"  [label="CFG: "];
"1000201" -> "1000284"  [label="DDG: GetPageAccess(origin_url, tab_id, &access_error) ==\n        PageAccess::kAllowed"];
"1000201" -> "1000284"  [label="DDG: PageAccess::kAllowed"];
"1000201" -> "1000284"  [label="DDG: GetPageAccess(origin_url, tab_id, &access_error)"];
"1000202" -> "1000201"  [label="DDG: origin_url"];
"1000202" -> "1000201"  [label="DDG: tab_id"];
"1000202" -> "1000201"  [label="DDG: &access_error"];
"1000202" -> "1000201"  [label="AST: "];
"1000202" -> "1000205"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000205" -> "1000202"  [label="AST: "];
"1000207" -> "1000202"  [label="CFG: "];
"1000202" -> "1000284"  [label="DDG: origin_url"];
"1000202" -> "1000284"  [label="DDG: &access_error"];
"1000202" -> "1000284"  [label="DDG: tab_id"];
"1000202" -> "1000201"  [label="DDG: origin_url"];
"1000202" -> "1000201"  [label="DDG: tab_id"];
"1000202" -> "1000201"  [label="DDG: &access_error"];
"1000138" -> "1000202"  [label="DDG: origin_url"];
"1000148" -> "1000202"  [label="DDG: origin_url"];
"1000162" -> "1000202"  [label="DDG: tab_id"];
"1000116" -> "1000202"  [label="DDG: tab_id"];
"1000207" -> "1000201"  [label="AST: "];
"1000207" -> "1000202"  [label="CFG: "];
"1000201" -> "1000207"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000209" -> "1000201"  [label="CFG: "];
"1000208" -> "1000209"  [label="CFG: "];
"1000209" -> "1000208"  [label="DDG: true"];
"1000208" -> "1000200"  [label="AST: "];
"1000208" -> "1000209"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000284" -> "1000208"  [label="CFG: "];
"1000208" -> "1000284"  [label="DDG: <RET>"];
"1000209" -> "1000208"  [label="DDG: true"];
"1000117" -> "1000114"  [label="AST: "];
"1000117" -> "1000284"  [label="DDG: error"];
"1000394" -> "1000114"  [label="AST: "];
"1000210" -> "1000180"  [label="AST: "];
"1000211" -> "1000210"  [label="AST: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000211"  [label="AST: "];
"1000215" -> "1000211"  [label="AST: "];
"1000225" -> "1000211"  [label="AST: "];
"1000213" -> "1000212"  [label="AST: "];
"1000213" -> "1000181"  [label="CFG: "];
"1000214" -> "1000213"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000212" -> "1000214"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000214" -> "1000212"  [label="AST: "];
"1000217" -> "1000212"  [label="CFG: "];
"1000212" -> "1000284"  [label="DDG: capture_requirement"];
"1000212" -> "1000284"  [label="DDG: DCHECK_EQ(CaptureRequirement::kPageCapture, capture_requirement)"];
"1000212" -> "1000284"  [label="DDG: CaptureRequirement::kPageCapture"];
"1000181" -> "1000212"  [label="DDG: capture_requirement"];
"1000118" -> "1000212"  [label="DDG: capture_requirement"];
"1000214" -> "1000212"  [label="AST: "];
"1000214" -> "1000213"  [label="CFG: "];
"1000212" -> "1000214"  [label="CFG: "];
"1000218" -> "1000215"  [label="AST: "];
"1000219" -> "1000218"  [label="AST: "];
"1000215" -> "1000211"  [label="AST: "];
"1000216" -> "1000215"  [label="AST: "];
"1000218" -> "1000215"  [label="AST: "];
"1000216" -> "1000215"  [label="AST: "];
"1000216" -> "1000217"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000220" -> "1000216"  [label="CFG: "];
"1000229" -> "1000216"  [label="CFG: "];
"1000216" -> "1000284"  [label="DDG: !has_page_capture"];
"1000216" -> "1000284"  [label="DDG: has_page_capture"];
"1000175" -> "1000216"  [label="DDG: has_page_capture"];
"1000217" -> "1000216"  [label="AST: "];
"1000217" -> "1000212"  [label="CFG: "];
"1000216" -> "1000217"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000220" -> "1000216"  [label="CFG: "];
"1000223" -> "1000220"  [label="CFG: "];
"1000229" -> "1000220"  [label="CFG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000220" -> "1000219"  [label="AST: "];
"1000221" -> "1000219"  [label="AST: "];
"1000224" -> "1000221"  [label="AST: "];
"1000224" -> "1000222"  [label="CFG: "];
"1000221" -> "1000224"  [label="CFG: "];
"1000221" -> "1000219"  [label="AST: "];
"1000221" -> "1000224"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000224" -> "1000221"  [label="AST: "];
"1000229" -> "1000221"  [label="CFG: "];
"1000221" -> "1000284"  [label="DDG: *error"];
"1000221" -> "1000284"  [label="DDG: manifest_errors::kPageCaptureNeeded"];
"1000222" -> "1000221"  [label="AST: "];
"1000222" -> "1000223"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000224" -> "1000222"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000223" -> "1000220"  [label="CFG: "];
"1000222" -> "1000223"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000229" -> "1000221"  [label="CFG: "];
"1000229" -> "1000220"  [label="CFG: "];
"1000229" -> "1000216"  [label="CFG: "];
"1000228" -> "1000229"  [label="CFG: "];
"1000225" -> "1000211"  [label="AST: "];
"1000226" -> "1000225"  [label="AST: "];
"1000236" -> "1000225"  [label="AST: "];
"1000226" -> "1000225"  [label="AST: "];
"1000226" -> "1000227"  [label="CFG: "];
"1000226" -> "1000232"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000232" -> "1000226"  [label="AST: "];
"1000238" -> "1000226"  [label="CFG: "];
"1000241" -> "1000226"  [label="CFG: "];
"1000226" -> "1000284"  [label="DDG: (origin_url.SchemeIs(url::kHttpScheme) ||\n         origin_url.SchemeIs(url::kHttpsScheme)) &&\n        !origin.IsSameOriginWith(url::Origin::Create(\n            ExtensionsClient::Get()->GetWebstoreBaseURL()))"];
"1000226" -> "1000284"  [label="DDG: origin_url.SchemeIs(url::kHttpScheme) ||\n         origin_url.SchemeIs(url::kHttpsScheme)"];
"1000226" -> "1000284"  [label="DDG: !origin.IsSameOriginWith(url::Origin::Create(\n            ExtensionsClient::Get()->GetWebstoreBaseURL()))"];
"1000227" -> "1000226"  [label="DDG: origin_url.SchemeIs(url::kHttpScheme)"];
"1000227" -> "1000226"  [label="DDG: origin_url.SchemeIs(url::kHttpsScheme)"];
"1000232" -> "1000226"  [label="DDG: origin.IsSameOriginWith(url::Origin::Create(\n            ExtensionsClient::Get()->GetWebstoreBaseURL()))"];
"1000227" -> "1000226"  [label="AST: "];
"1000227" -> "1000228"  [label="CFG: "];
"1000227" -> "1000230"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000230" -> "1000227"  [label="AST: "];
"1000235" -> "1000227"  [label="CFG: "];
"1000226" -> "1000227"  [label="CFG: "];
"1000227" -> "1000284"  [label="DDG: origin_url.SchemeIs(url::kHttpScheme)"];
"1000227" -> "1000284"  [label="DDG: origin_url.SchemeIs(url::kHttpsScheme)"];
"1000227" -> "1000226"  [label="DDG: origin_url.SchemeIs(url::kHttpScheme)"];
"1000227" -> "1000226"  [label="DDG: origin_url.SchemeIs(url::kHttpsScheme)"];
"1000228" -> "1000227"  [label="DDG: url::kHttpScheme"];
"1000230" -> "1000227"  [label="DDG: url::kHttpsScheme"];
"1000228" -> "1000227"  [label="AST: "];
"1000228" -> "1000229"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000231" -> "1000228"  [label="CFG: "];
"1000227" -> "1000228"  [label="CFG: "];
"1000228" -> "1000284"  [label="DDG: url::kHttpScheme"];
"1000228" -> "1000227"  [label="DDG: url::kHttpScheme"];
"1000118" -> "1000114"  [label="AST: "];
"1000118" -> "1000284"  [label="DDG: capture_requirement"];
"1000118" -> "1000181"  [label="DDG: capture_requirement"];
"1000118" -> "1000212"  [label="DDG: capture_requirement"];
"1000395" -> "1000114"  [label="AST: "];
"1000119" -> "1000114"  [label="AST: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000124" -> "1000119"  [label="AST: "];
"1000125" -> "1000119"  [label="AST: "];
"1000128" -> "1000119"  [label="AST: "];
"1000129" -> "1000119"  [label="AST: "];
"1000132" -> "1000119"  [label="AST: "];
"1000133" -> "1000119"  [label="AST: "];
"1000137" -> "1000119"  [label="AST: "];
"1000138" -> "1000119"  [label="AST: "];
"1000141" -> "1000119"  [label="AST: "];
"1000179" -> "1000119"  [label="AST: "];
"1000180" -> "1000119"  [label="AST: "];
"1000239" -> "1000119"  [label="AST: "];
"1000245" -> "1000119"  [label="AST: "];
"1000246" -> "1000119"  [label="AST: "];
"1000260" -> "1000119"  [label="AST: "];
"1000272" -> "1000119"  [label="AST: "];
"1000276" -> "1000119"  [label="AST: "];
"1000282" -> "1000119"  [label="AST: "];
"1000231" -> "1000230"  [label="AST: "];
"1000231" -> "1000228"  [label="CFG: "];
"1000230" -> "1000231"  [label="CFG: "];
"1000230" -> "1000227"  [label="AST: "];
"1000230" -> "1000231"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000227" -> "1000230"  [label="CFG: "];
"1000230" -> "1000284"  [label="DDG: url::kHttpsScheme"];
"1000230" -> "1000227"  [label="DDG: url::kHttpsScheme"];
"1000234" -> "1000233"  [label="AST: "];
"1000234" -> "1000235"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000233" -> "1000234"  [label="CFG: "];
"1000234" -> "1000284"  [label="DDG: ExtensionsClient::Get()->GetWebstoreBaseURL()"];
"1000234" -> "1000233"  [label="DDG: ExtensionsClient::Get()->GetWebstoreBaseURL()"];
"1000232" -> "1000226"  [label="AST: "];
"1000232" -> "1000233"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000226" -> "1000232"  [label="CFG: "];
"1000232" -> "1000284"  [label="DDG: origin.IsSameOriginWith(url::Origin::Create(\n            ExtensionsClient::Get()->GetWebstoreBaseURL()))"];
"1000232" -> "1000226"  [label="DDG: origin.IsSameOriginWith(url::Origin::Create(\n            ExtensionsClient::Get()->GetWebstoreBaseURL()))"];
"1000233" -> "1000232"  [label="DDG: url::Origin::Create(\n            ExtensionsClient::Get()->GetWebstoreBaseURL())"];
"1000233" -> "1000232"  [label="AST: "];
"1000233" -> "1000234"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000232" -> "1000233"  [label="CFG: "];
"1000233" -> "1000284"  [label="DDG: url::Origin::Create(\n            ExtensionsClient::Get()->GetWebstoreBaseURL())"];
"1000233" -> "1000232"  [label="DDG: url::Origin::Create(\n            ExtensionsClient::Get()->GetWebstoreBaseURL())"];
"1000234" -> "1000233"  [label="DDG: ExtensionsClient::Get()->GetWebstoreBaseURL()"];
"1000235" -> "1000234"  [label="AST: "];
"1000235" -> "1000227"  [label="CFG: "];
"1000234" -> "1000235"  [label="CFG: "];
"1000236" -> "1000225"  [label="AST: "];
"1000237" -> "1000236"  [label="AST: "];
"1000238" -> "1000237"  [label="AST: "];
"1000238" -> "1000226"  [label="CFG: "];
"1000237" -> "1000238"  [label="CFG: "];
"1000238" -> "1000237"  [label="DDG: true"];
"1000237" -> "1000236"  [label="AST: "];
"1000237" -> "1000238"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000284" -> "1000237"  [label="CFG: "];
"1000237" -> "1000284"  [label="DDG: <RET>"];
"1000238" -> "1000237"  [label="DDG: true"];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000122"  [label="CFG: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000121" -> "1000119"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000126" -> "1000121"  [label="CFG: "];
"1000121" -> "1000284"  [label="DDG: has_active_tab"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000114"  [label="CFG: "];
"1000123" -> "1000122"  [label="CFG: "];
"1000242" -> "1000240"  [label="AST: "];
"1000242" -> "1000241"  [label="CFG: "];
"1000240" -> "1000242"  [label="CFG: "];
"1000239" -> "1000119"  [label="AST: "];
"1000240" -> "1000239"  [label="AST: "];
"1000243" -> "1000239"  [label="AST: "];
"1000240" -> "1000239"  [label="AST: "];
"1000240" -> "1000242"  [label="CFG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000242" -> "1000240"  [label="AST: "];
"1000244" -> "1000240"  [label="CFG: "];
"1000247" -> "1000240"  [label="CFG: "];
"1000240" -> "1000284"  [label="DDG: origin_url.host() == extension_id_"];
"1000240" -> "1000284"  [label="DDG: extension_id_"];
"1000240" -> "1000284"  [label="DDG: origin_url.host()"];
"1000241" -> "1000240"  [label="AST: "];
"1000241" -> "1000201"  [label="CFG: "];
"1000241" -> "1000226"  [label="CFG: "];
"1000242" -> "1000241"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000244" -> "1000240"  [label="CFG: "];
"1000243" -> "1000244"  [label="CFG: "];
"1000244" -> "1000243"  [label="DDG: true"];
"1000243" -> "1000239"  [label="AST: "];
"1000243" -> "1000244"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000284" -> "1000243"  [label="CFG: "];
"1000243" -> "1000284"  [label="DDG: <RET>"];
"1000244" -> "1000243"  [label="DDG: true"];
"1000246" -> "1000119"  [label="AST: "];
"1000246" -> "1000248"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000248" -> "1000246"  [label="AST: "];
"1000262" -> "1000246"  [label="CFG: "];
"1000246" -> "1000284"  [label="DDG: origin_url.SchemeIs(content::kChromeUIScheme) ||\n      origin_url.SchemeIs(kExtensionScheme) ||\n      document_url.SchemeIs(url::kDataScheme) ||\n      origin.IsSameOriginWith(\n          url::Origin::Create(ExtensionsClient::Get()->GetWebstoreBaseURL()))"];
"1000248" -> "1000246"  [label="DDG: origin_url.SchemeIs(content::kChromeUIScheme)"];
"1000248" -> "1000246"  [label="DDG: origin_url.SchemeIs(kExtensionScheme) ||\n      document_url.SchemeIs(url::kDataScheme) ||\n      origin.IsSameOriginWith(\n          url::Origin::Create(ExtensionsClient::Get()->GetWebstoreBaseURL()))"];
"1000246" -> "1000261"  [label="DDG: allowed_with_active_tab"];
"1000247" -> "1000246"  [label="AST: "];
"1000247" -> "1000240"  [label="CFG: "];
"1000250" -> "1000247"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000250" -> "1000247"  [label="CFG: "];
"1000249" -> "1000250"  [label="CFG: "];
"1000248" -> "1000246"  [label="AST: "];
"1000248" -> "1000249"  [label="CFG: "];
"1000248" -> "1000251"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000251" -> "1000248"  [label="AST: "];
"1000246" -> "1000248"  [label="CFG: "];
"1000248" -> "1000284"  [label="DDG: origin_url.SchemeIs(kExtensionScheme) ||\n      document_url.SchemeIs(url::kDataScheme) ||\n      origin.IsSameOriginWith(\n          url::Origin::Create(ExtensionsClient::Get()->GetWebstoreBaseURL()))"];
"1000248" -> "1000284"  [label="DDG: origin_url.SchemeIs(content::kChromeUIScheme)"];
"1000248" -> "1000246"  [label="DDG: origin_url.SchemeIs(content::kChromeUIScheme)"];
"1000248" -> "1000246"  [label="DDG: origin_url.SchemeIs(kExtensionScheme) ||\n      document_url.SchemeIs(url::kDataScheme) ||\n      origin.IsSameOriginWith(\n          url::Origin::Create(ExtensionsClient::Get()->GetWebstoreBaseURL()))"];
"1000249" -> "1000248"  [label="DDG: content::kChromeUIScheme"];
"1000251" -> "1000248"  [label="DDG: origin_url.SchemeIs(kExtensionScheme)"];
"1000251" -> "1000248"  [label="DDG: document_url.SchemeIs(url::kDataScheme) ||\n      origin.IsSameOriginWith(\n          url::Origin::Create(ExtensionsClient::Get()->GetWebstoreBaseURL()))"];
"1000249" -> "1000248"  [label="AST: "];
"1000249" -> "1000250"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000253" -> "1000249"  [label="CFG: "];
"1000248" -> "1000249"  [label="CFG: "];
"1000249" -> "1000284"  [label="DDG: content::kChromeUIScheme"];
"1000249" -> "1000248"  [label="DDG: content::kChromeUIScheme"];
"1000253" -> "1000252"  [label="AST: "];
"1000253" -> "1000249"  [label="CFG: "];
"1000252" -> "1000253"  [label="CFG: "];
"1000251" -> "1000248"  [label="AST: "];
"1000251" -> "1000252"  [label="CFG: "];
"1000251" -> "1000254"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000254" -> "1000251"  [label="AST: "];
"1000248" -> "1000251"  [label="CFG: "];
"1000251" -> "1000284"  [label="DDG: document_url.SchemeIs(url::kDataScheme) ||\n      origin.IsSameOriginWith(\n          url::Origin::Create(ExtensionsClient::Get()->GetWebstoreBaseURL()))"];
"1000251" -> "1000284"  [label="DDG: origin_url.SchemeIs(kExtensionScheme)"];
"1000251" -> "1000248"  [label="DDG: origin_url.SchemeIs(kExtensionScheme)"];
"1000251" -> "1000248"  [label="DDG: document_url.SchemeIs(url::kDataScheme) ||\n      origin.IsSameOriginWith(\n          url::Origin::Create(ExtensionsClient::Get()->GetWebstoreBaseURL()))"];
"1000252" -> "1000251"  [label="DDG: kExtensionScheme"];
"1000254" -> "1000251"  [label="DDG: document_url.SchemeIs(url::kDataScheme)"];
"1000254" -> "1000251"  [label="DDG: origin.IsSameOriginWith(\n          url::Origin::Create(ExtensionsClient::Get()->GetWebstoreBaseURL()))"];
"1000252" -> "1000251"  [label="AST: "];
"1000252" -> "1000253"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000256" -> "1000252"  [label="CFG: "];
"1000251" -> "1000252"  [label="CFG: "];
"1000252" -> "1000284"  [label="DDG: kExtensionScheme"];
"1000252" -> "1000251"  [label="DDG: kExtensionScheme"];
"1000256" -> "1000255"  [label="AST: "];
"1000256" -> "1000252"  [label="CFG: "];
"1000255" -> "1000256"  [label="CFG: "];
"1000254" -> "1000251"  [label="AST: "];
"1000254" -> "1000255"  [label="CFG: "];
"1000254" -> "1000257"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000257" -> "1000254"  [label="AST: "];
"1000251" -> "1000254"  [label="CFG: "];
"1000254" -> "1000284"  [label="DDG: document_url.SchemeIs(url::kDataScheme)"];
"1000254" -> "1000284"  [label="DDG: origin.IsSameOriginWith(\n          url::Origin::Create(ExtensionsClient::Get()->GetWebstoreBaseURL()))"];
"1000254" -> "1000251"  [label="DDG: document_url.SchemeIs(url::kDataScheme)"];
"1000254" -> "1000251"  [label="DDG: origin.IsSameOriginWith(\n          url::Origin::Create(ExtensionsClient::Get()->GetWebstoreBaseURL()))"];
"1000255" -> "1000254"  [label="DDG: url::kDataScheme"];
"1000257" -> "1000254"  [label="DDG: url::Origin::Create(ExtensionsClient::Get()->GetWebstoreBaseURL())"];
"1000255" -> "1000254"  [label="AST: "];
"1000255" -> "1000256"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000259" -> "1000255"  [label="CFG: "];
"1000254" -> "1000255"  [label="CFG: "];
"1000255" -> "1000284"  [label="DDG: url::kDataScheme"];
"1000255" -> "1000254"  [label="DDG: url::kDataScheme"];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1000126"  [label="CFG: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000125" -> "1000119"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000130" -> "1000125"  [label="CFG: "];
"1000125" -> "1000284"  [label="DDG: has_all_urls"];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000121"  [label="CFG: "];
"1000127" -> "1000126"  [label="CFG: "];
"1000257" -> "1000254"  [label="AST: "];
"1000257" -> "1000258"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000254" -> "1000257"  [label="CFG: "];
"1000257" -> "1000284"  [label="DDG: url::Origin::Create(ExtensionsClient::Get()->GetWebstoreBaseURL())"];
"1000257" -> "1000254"  [label="DDG: url::Origin::Create(ExtensionsClient::Get()->GetWebstoreBaseURL())"];
"1000258" -> "1000257"  [label="DDG: ExtensionsClient::Get()->GetWebstoreBaseURL()"];
"1000258" -> "1000257"  [label="AST: "];
"1000258" -> "1000259"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000257" -> "1000258"  [label="CFG: "];
"1000258" -> "1000284"  [label="DDG: ExtensionsClient::Get()->GetWebstoreBaseURL()"];
"1000258" -> "1000257"  [label="DDG: ExtensionsClient::Get()->GetWebstoreBaseURL()"];
"1000259" -> "1000258"  [label="AST: "];
"1000259" -> "1000255"  [label="CFG: "];
"1000258" -> "1000259"  [label="CFG: "];
"1000260" -> "1000119"  [label="AST: "];
"1000261" -> "1000260"  [label="AST: "];
"1000263" -> "1000260"  [label="AST: "];
"1000263" -> "1000260"  [label="AST: "];
"1000264" -> "1000263"  [label="AST: "];
"1000270" -> "1000263"  [label="AST: "];
"1000261" -> "1000260"  [label="AST: "];
"1000261" -> "1000262"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000265" -> "1000261"  [label="CFG: "];
"1000273" -> "1000261"  [label="CFG: "];
"1000261" -> "1000284"  [label="DDG: allowed_with_active_tab"];
"1000261" -> "1000284"  [label="DDG: !allowed_with_active_tab"];
"1000246" -> "1000261"  [label="DDG: allowed_with_active_tab"];
"1000262" -> "1000261"  [label="AST: "];
"1000262" -> "1000246"  [label="CFG: "];
"1000261" -> "1000262"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000264"  [label="AST: "];
"1000266" -> "1000264"  [label="AST: "];
"1000265" -> "1000264"  [label="AST: "];
"1000265" -> "1000261"  [label="CFG: "];
"1000268" -> "1000265"  [label="CFG: "];
"1000271" -> "1000265"  [label="CFG: "];
"1000269" -> "1000266"  [label="AST: "];
"1000269" -> "1000267"  [label="CFG: "];
"1000266" -> "1000269"  [label="CFG: "];
"1000266" -> "1000264"  [label="AST: "];
"1000266" -> "1000269"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000269" -> "1000266"  [label="AST: "];
"1000271" -> "1000266"  [label="CFG: "];
"1000266" -> "1000284"  [label="DDG: access_error"];
"1000266" -> "1000284"  [label="DDG: *error"];
"1000267" -> "1000266"  [label="AST: "];
"1000267" -> "1000268"  [label="CFG: "];
"1000268" -> "1000267"  [label="AST: "];
"1000269" -> "1000267"  [label="CFG: "];
"1000268" -> "1000267"  [label="AST: "];
"1000268" -> "1000265"  [label="CFG: "];
"1000267" -> "1000268"  [label="CFG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000271" -> "1000266"  [label="CFG: "];
"1000271" -> "1000265"  [label="CFG: "];
"1000270" -> "1000271"  [label="CFG: "];
"1000271" -> "1000270"  [label="DDG: false"];
"1000270" -> "1000263"  [label="AST: "];
"1000270" -> "1000271"  [label="CFG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000284" -> "1000270"  [label="CFG: "];
"1000270" -> "1000284"  [label="DDG: <RET>"];
"1000271" -> "1000270"  [label="DDG: false"];
"1000272" -> "1000119"  [label="AST: "];
"1000273" -> "1000272"  [label="AST: "];
"1000274" -> "1000272"  [label="AST: "];
"1000273" -> "1000272"  [label="AST: "];
"1000273" -> "1000261"  [label="CFG: "];
"1000275" -> "1000273"  [label="CFG: "];
"1000277" -> "1000273"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000275" -> "1000273"  [label="CFG: "];
"1000274" -> "1000275"  [label="CFG: "];
"1000275" -> "1000274"  [label="DDG: true"];
"1000274" -> "1000272"  [label="AST: "];
"1000274" -> "1000275"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000284" -> "1000274"  [label="CFG: "];
"1000274" -> "1000284"  [label="DDG: <RET>"];
"1000275" -> "1000274"  [label="DDG: true"];
"1000131" -> "1000129"  [label="AST: "];
"1000131" -> "1000130"  [label="CFG: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000129" -> "1000119"  [label="AST: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000129"  [label="AST: "];
"1000134" -> "1000129"  [label="CFG: "];
"1000129" -> "1000284"  [label="DDG: has_page_capture"];
"1000129" -> "1000284"  [label="DDG: false"];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000125"  [label="CFG: "];
"1000131" -> "1000130"  [label="CFG: "];
"1000276" -> "1000119"  [label="AST: "];
"1000277" -> "1000276"  [label="AST: "];
"1000278" -> "1000276"  [label="AST: "];
"1000277" -> "1000276"  [label="AST: "];
"1000277" -> "1000273"  [label="CFG: "];
"1000280" -> "1000277"  [label="CFG: "];
"1000283" -> "1000277"  [label="CFG: "];
"1000281" -> "1000278"  [label="AST: "];
"1000281" -> "1000279"  [label="CFG: "];
"1000278" -> "1000281"  [label="CFG: "];
"1000278" -> "1000276"  [label="AST: "];
"1000278" -> "1000281"  [label="CFG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000281" -> "1000278"  [label="AST: "];
"1000283" -> "1000278"  [label="CFG: "];
"1000278" -> "1000284"  [label="DDG: manifest_errors::kActiveTabPermissionNotGranted"];
"1000278" -> "1000284"  [label="DDG: *error"];
"1000279" -> "1000278"  [label="AST: "];
"1000279" -> "1000280"  [label="CFG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000281" -> "1000279"  [label="CFG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000280" -> "1000277"  [label="CFG: "];
"1000279" -> "1000280"  [label="CFG: "];
"1000282" -> "1000119"  [label="AST: "];
"1000282" -> "1000283"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000284" -> "1000282"  [label="CFG: "];
"1000282" -> "1000284"  [label="DDG: <RET>"];
"1000283" -> "1000282"  [label="DDG: false"];
"1000283" -> "1000282"  [label="AST: "];
"1000283" -> "1000278"  [label="CFG: "];
"1000283" -> "1000277"  [label="CFG: "];
"1000282" -> "1000283"  [label="CFG: "];
"1000283" -> "1000282"  [label="DDG: false"];
}
