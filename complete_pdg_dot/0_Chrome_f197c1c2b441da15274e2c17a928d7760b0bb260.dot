digraph "0_Chrome_f197c1c2b441da15274e2c17a928d7760b0bb260" {
"1000137" [label="(MethodReturn,void)"];
"1000103" [label="(Block,)"];
"1000116" [label="(Call,blink::WebLeakDetector::Create(this))"];
"1000117" [label="(Identifier,this)"];
"1000115" [label="(Call,base::WrapUnique(blink::WebLeakDetector::Create(this)))"];
"1000118" [label="(Call,leak_detector->PrepareForLeakDetection(view_->GetWebView()->MainFrame()))"];
"1000119" [label="(Call,view_->GetWebView()->MainFrame())"];
"1000122" [label="(Identifier,nullptr)"];
"1000120" [label="(Call,view_ = nullptr)"];
"1000121" [label="(Identifier,view_)"];
"1000123" [label="(Call,mock_process_.reset())"];
"1000124" [label="(Call,RenderThreadImpl::SetRendererBlinkPlatformImplForTesting(nullptr))"];
"1000125" [label="(Identifier,nullptr)"];
"1000126" [label="(Call,base::RunLoop().RunUntilIdle())"];
"1000104" [label="(Call,base::RunLoop().RunUntilIdle())"];
"1000127" [label="(Call,ClearDWriteFontProxySenderForTesting())"];
"1000128" [label="(Call,autorelease_pool_.reset())"];
"1000129" [label="(Call,leak_detector->CollectGarbageAndReport())"];
"1000130" [label="(Call,blink_platform_impl_.Shutdown())"];
"1000131" [label="(Call,platform_->PlatformUninitialize())"];
"1000132" [label="(Call,platform_.reset())"];
"1000133" [label="(Call,params_.reset())"];
"1000134" [label="(Call,command_line_.reset())"];
"1000135" [label="(Call,test_io_thread_.reset())"];
"1000136" [label="(Call,ipc_support_.reset())"];
"1000106" [label="(Call,RenderView::ForEach(&closing_visitor))"];
"1000107" [label="(Call,&closing_visitor)"];
"1000108" [label="(Identifier,closing_visitor)"];
"1000112" [label="(Call,blink::WebLeakDetector> leak_detector)"];
"1000113" [label="(Identifier,blink::WebLeakDetector)"];
"1000109" [label="(Call,std::unique_ptr<blink::WebLeakDetector> leak_detector =\n       base::WrapUnique(blink::WebLeakDetector::Create(this)))"];
"1000110" [label="(Call,std::unique_ptr<blink::WebLeakDetector> leak_detector)"];
"1000111" [label="(Identifier,std::unique_ptr)"];
"1000114" [label="(Identifier,leak_detector)"];
"1000137" -> "1000102"  [label="AST: "];
"1000137" -> "1000136"  [label="CFG: "];
"1000116" -> "1000137"  [label="DDG: this"];
"1000124" -> "1000137"  [label="DDG: nullptr"];
"1000124" -> "1000137"  [label="DDG: RenderThreadImpl::SetRendererBlinkPlatformImplForTesting(nullptr)"];
"1000106" -> "1000137"  [label="DDG: &closing_visitor"];
"1000106" -> "1000137"  [label="DDG: RenderView::ForEach(&closing_visitor)"];
"1000112" -> "1000137"  [label="DDG: leak_detector"];
"1000112" -> "1000137"  [label="DDG: blink::WebLeakDetector"];
"1000127" -> "1000137"  [label="DDG: ClearDWriteFontProxySenderForTesting()"];
"1000118" -> "1000137"  [label="DDG: leak_detector->PrepareForLeakDetection(view_->GetWebView()->MainFrame())"];
"1000118" -> "1000137"  [label="DDG: view_->GetWebView()->MainFrame()"];
"1000136" -> "1000137"  [label="DDG: ipc_support_.reset()"];
"1000128" -> "1000137"  [label="DDG: autorelease_pool_.reset()"];
"1000130" -> "1000137"  [label="DDG: blink_platform_impl_.Shutdown()"];
"1000126" -> "1000137"  [label="DDG: base::RunLoop().RunUntilIdle()"];
"1000123" -> "1000137"  [label="DDG: mock_process_.reset()"];
"1000132" -> "1000137"  [label="DDG: platform_.reset()"];
"1000129" -> "1000137"  [label="DDG: leak_detector->CollectGarbageAndReport()"];
"1000134" -> "1000137"  [label="DDG: command_line_.reset()"];
"1000109" -> "1000137"  [label="DDG: base::WrapUnique(blink::WebLeakDetector::Create(this))"];
"1000109" -> "1000137"  [label="DDG: std::unique_ptr<blink::WebLeakDetector> leak_detector"];
"1000120" -> "1000137"  [label="DDG: view_"];
"1000133" -> "1000137"  [label="DDG: params_.reset()"];
"1000110" -> "1000137"  [label="DDG: blink::WebLeakDetector> leak_detector"];
"1000110" -> "1000137"  [label="DDG: std::unique_ptr"];
"1000135" -> "1000137"  [label="DDG: test_io_thread_.reset()"];
"1000115" -> "1000137"  [label="DDG: blink::WebLeakDetector::Create(this)"];
"1000131" -> "1000137"  [label="DDG: platform_->PlatformUninitialize()"];
"1000103" -> "1000102"  [label="AST: "];
"1000104" -> "1000103"  [label="AST: "];
"1000105" -> "1000103"  [label="AST: "];
"1000106" -> "1000103"  [label="AST: "];
"1000109" -> "1000103"  [label="AST: "];
"1000118" -> "1000103"  [label="AST: "];
"1000120" -> "1000103"  [label="AST: "];
"1000123" -> "1000103"  [label="AST: "];
"1000124" -> "1000103"  [label="AST: "];
"1000126" -> "1000103"  [label="AST: "];
"1000127" -> "1000103"  [label="AST: "];
"1000128" -> "1000103"  [label="AST: "];
"1000129" -> "1000103"  [label="AST: "];
"1000130" -> "1000103"  [label="AST: "];
"1000131" -> "1000103"  [label="AST: "];
"1000132" -> "1000103"  [label="AST: "];
"1000133" -> "1000103"  [label="AST: "];
"1000134" -> "1000103"  [label="AST: "];
"1000135" -> "1000103"  [label="AST: "];
"1000136" -> "1000103"  [label="AST: "];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000117"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000116" -> "1000137"  [label="DDG: this"];
"1000116" -> "1000115"  [label="DDG: this"];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1000110"  [label="CFG: "];
"1000116" -> "1000117"  [label="CFG: "];
"1000115" -> "1000109"  [label="AST: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000109" -> "1000115"  [label="CFG: "];
"1000115" -> "1000137"  [label="DDG: blink::WebLeakDetector::Create(this)"];
"1000115" -> "1000109"  [label="DDG: blink::WebLeakDetector::Create(this)"];
"1000116" -> "1000115"  [label="DDG: this"];
"1000118" -> "1000103"  [label="AST: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000121" -> "1000118"  [label="CFG: "];
"1000118" -> "1000137"  [label="DDG: leak_detector->PrepareForLeakDetection(view_->GetWebView()->MainFrame())"];
"1000118" -> "1000137"  [label="DDG: view_->GetWebView()->MainFrame()"];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000109"  [label="CFG: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000122" -> "1000120"  [label="AST: "];
"1000122" -> "1000121"  [label="CFG: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000120" -> "1000103"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000122" -> "1000120"  [label="AST: "];
"1000123" -> "1000120"  [label="CFG: "];
"1000120" -> "1000137"  [label="DDG: view_"];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000118"  [label="CFG: "];
"1000122" -> "1000121"  [label="CFG: "];
"1000123" -> "1000103"  [label="AST: "];
"1000123" -> "1000120"  [label="CFG: "];
"1000125" -> "1000123"  [label="CFG: "];
"1000123" -> "1000137"  [label="DDG: mock_process_.reset()"];
"1000124" -> "1000103"  [label="AST: "];
"1000124" -> "1000125"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="CFG: "];
"1000124" -> "1000137"  [label="DDG: nullptr"];
"1000124" -> "1000137"  [label="DDG: RenderThreadImpl::SetRendererBlinkPlatformImplForTesting(nullptr)"];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000123"  [label="CFG: "];
"1000124" -> "1000125"  [label="CFG: "];
"1000126" -> "1000103"  [label="AST: "];
"1000126" -> "1000124"  [label="CFG: "];
"1000127" -> "1000126"  [label="CFG: "];
"1000126" -> "1000137"  [label="DDG: base::RunLoop().RunUntilIdle()"];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000102"  [label="CFG: "];
"1000108" -> "1000104"  [label="CFG: "];
"1000127" -> "1000103"  [label="AST: "];
"1000127" -> "1000126"  [label="CFG: "];
"1000128" -> "1000127"  [label="CFG: "];
"1000127" -> "1000137"  [label="DDG: ClearDWriteFontProxySenderForTesting()"];
"1000128" -> "1000103"  [label="AST: "];
"1000128" -> "1000127"  [label="CFG: "];
"1000129" -> "1000128"  [label="CFG: "];
"1000128" -> "1000137"  [label="DDG: autorelease_pool_.reset()"];
"1000129" -> "1000103"  [label="AST: "];
"1000129" -> "1000128"  [label="CFG: "];
"1000130" -> "1000129"  [label="CFG: "];
"1000129" -> "1000137"  [label="DDG: leak_detector->CollectGarbageAndReport()"];
"1000130" -> "1000103"  [label="AST: "];
"1000130" -> "1000129"  [label="CFG: "];
"1000131" -> "1000130"  [label="CFG: "];
"1000130" -> "1000137"  [label="DDG: blink_platform_impl_.Shutdown()"];
"1000131" -> "1000103"  [label="AST: "];
"1000131" -> "1000130"  [label="CFG: "];
"1000132" -> "1000131"  [label="CFG: "];
"1000131" -> "1000137"  [label="DDG: platform_->PlatformUninitialize()"];
"1000132" -> "1000103"  [label="AST: "];
"1000132" -> "1000131"  [label="CFG: "];
"1000133" -> "1000132"  [label="CFG: "];
"1000132" -> "1000137"  [label="DDG: platform_.reset()"];
"1000133" -> "1000103"  [label="AST: "];
"1000133" -> "1000132"  [label="CFG: "];
"1000134" -> "1000133"  [label="CFG: "];
"1000133" -> "1000137"  [label="DDG: params_.reset()"];
"1000134" -> "1000103"  [label="AST: "];
"1000134" -> "1000133"  [label="CFG: "];
"1000135" -> "1000134"  [label="CFG: "];
"1000134" -> "1000137"  [label="DDG: command_line_.reset()"];
"1000135" -> "1000103"  [label="AST: "];
"1000135" -> "1000134"  [label="CFG: "];
"1000136" -> "1000135"  [label="CFG: "];
"1000135" -> "1000137"  [label="DDG: test_io_thread_.reset()"];
"1000136" -> "1000103"  [label="AST: "];
"1000136" -> "1000135"  [label="CFG: "];
"1000137" -> "1000136"  [label="CFG: "];
"1000136" -> "1000137"  [label="DDG: ipc_support_.reset()"];
"1000106" -> "1000103"  [label="AST: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000111" -> "1000106"  [label="CFG: "];
"1000106" -> "1000137"  [label="DDG: &closing_visitor"];
"1000106" -> "1000137"  [label="DDG: RenderView::ForEach(&closing_visitor)"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000108"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000104"  [label="CFG: "];
"1000107" -> "1000108"  [label="CFG: "];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000110" -> "1000112"  [label="CFG: "];
"1000112" -> "1000137"  [label="DDG: leak_detector"];
"1000112" -> "1000137"  [label="DDG: blink::WebLeakDetector"];
"1000112" -> "1000110"  [label="DDG: blink::WebLeakDetector"];
"1000112" -> "1000110"  [label="DDG: leak_detector"];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000111"  [label="CFG: "];
"1000114" -> "1000113"  [label="CFG: "];
"1000109" -> "1000103"  [label="AST: "];
"1000109" -> "1000115"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000115" -> "1000109"  [label="AST: "];
"1000119" -> "1000109"  [label="CFG: "];
"1000109" -> "1000137"  [label="DDG: base::WrapUnique(blink::WebLeakDetector::Create(this))"];
"1000109" -> "1000137"  [label="DDG: std::unique_ptr<blink::WebLeakDetector> leak_detector"];
"1000115" -> "1000109"  [label="DDG: blink::WebLeakDetector::Create(this)"];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000112"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000112" -> "1000110"  [label="AST: "];
"1000117" -> "1000110"  [label="CFG: "];
"1000110" -> "1000137"  [label="DDG: blink::WebLeakDetector> leak_detector"];
"1000110" -> "1000137"  [label="DDG: std::unique_ptr"];
"1000112" -> "1000110"  [label="DDG: blink::WebLeakDetector"];
"1000112" -> "1000110"  [label="DDG: leak_detector"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000106"  [label="CFG: "];
"1000113" -> "1000111"  [label="CFG: "];
"1000114" -> "1000112"  [label="AST: "];
"1000114" -> "1000113"  [label="CFG: "];
"1000112" -> "1000114"  [label="CFG: "];
}
