digraph "0_Chrome_dc5edc9c05901feeac616c075d0337e634f3a02a_0" {
"1000156" [label="(MethodReturn,static void)"];
"1000101" [label="(MethodParameterIn,time_t input)"];
"1000238" [label="(MethodParameterOut,time_t input)"];
"1000102" [label="(MethodParameterIn,struct tm* output)"];
"1000239" [label="(MethodParameterOut,struct tm* output)"];
"1000124" [label="(Call,r = base::UnixDomainSocket::SendRecvMsg(\n       GetSandboxFD(), reply_buf, sizeof(reply_buf), NULL, request))"];
"1000125" [label="(Identifier,r)"];
"1000126" [label="(Call,base::UnixDomainSocket::SendRecvMsg(\n       GetSandboxFD(), reply_buf, sizeof(reply_buf), NULL, request))"];
"1000128" [label="(Identifier,reply_buf)"];
"1000129" [label="(Call,sizeof(reply_buf))"];
"1000130" [label="(Identifier,reply_buf)"];
"1000131" [label="(Identifier,NULL)"];
"1000132" [label="(Identifier,request)"];
"1000127" [label="(Call,GetSandboxFD())"];
"1000136" [label="(Call,-1)"];
"1000137" [label="(Literal,1)"];
"1000138" [label="(Block,)"];
"1000133" [label="(ControlStructure,if (r == -1))"];
"1000134" [label="(Call,r == -1)"];
"1000135" [label="(Identifier,r)"];
"1000139" [label="(Return,return;)"];
"1000103" [label="(MethodParameterIn,char* timezone_out)"];
"1000240" [label="(MethodParameterOut,char* timezone_out)"];
"1000142" [label="(ControlStructure,if (!ReadTimeStruct(&iter, output, timezone_out, timezone_out_len)))"];
"1000145" [label="(Call,&iter)"];
"1000146" [label="(Identifier,iter)"];
"1000147" [label="(Identifier,output)"];
"1000148" [label="(Identifier,timezone_out)"];
"1000149" [label="(Identifier,timezone_out_len)"];
"1000143" [label="(Call,!ReadTimeStruct(&iter, output, timezone_out, timezone_out_len))"];
"1000144" [label="(Call,ReadTimeStruct(&iter, output, timezone_out, timezone_out_len))"];
"1000150" [label="(Block,)"];
"1000152" [label="(Identifier,output)"];
"1000153" [label="(Literal,0)"];
"1000154" [label="(Call,sizeof(struct tm))"];
"1000151" [label="(Call,memset(output, 0, sizeof(struct tm)))"];
"1000104" [label="(MethodParameterIn,size_t timezone_out_len)"];
"1000241" [label="(MethodParameterOut,size_t timezone_out_len)"];
"1000105" [label="(Block,)"];
"1000108" [label="(Identifier,LinuxSandbox::METHOD_LOCALTIME)"];
"1000107" [label="(Call,request.WriteInt(LinuxSandbox::METHOD_LOCALTIME))"];
"1000109" [label="(Call,request.WriteString(\n       std::string(reinterpret_cast<char*>(&input), sizeof(input))))"];
"1000111" [label="(Call,reinterpret_cast<char*>(&input))"];
"1000113" [label="(Call,&input)"];
"1000114" [label="(Identifier,input)"];
"1000115" [label="(Call,sizeof(input))"];
"1000116" [label="(Identifier,input)"];
"1000110" [label="(Call,std::string(reinterpret_cast<char*>(&input), sizeof(input)))"];
"1000119" [label="(Literal,0)"];
"1000117" [label="(Call,memset(output, 0, sizeof(struct tm)))"];
"1000120" [label="(Call,sizeof(struct tm))"];
"1000118" [label="(Identifier,output)"];
"1000156" -> "1000100"  [label="AST: "];
"1000156" -> "1000139"  [label="CFG: "];
"1000156" -> "1000151"  [label="CFG: "];
"1000156" -> "1000143"  [label="CFG: "];
"1000139" -> "1000156"  [label="DDG: <RET>"];
"1000117" -> "1000156"  [label="DDG: memset(output, 0, sizeof(struct tm))"];
"1000117" -> "1000156"  [label="DDG: output"];
"1000124" -> "1000156"  [label="DDG: base::UnixDomainSocket::SendRecvMsg(\n       GetSandboxFD(), reply_buf, sizeof(reply_buf), NULL, request)"];
"1000107" -> "1000156"  [label="DDG: LinuxSandbox::METHOD_LOCALTIME"];
"1000107" -> "1000156"  [label="DDG: request.WriteInt(LinuxSandbox::METHOD_LOCALTIME)"];
"1000104" -> "1000156"  [label="DDG: timezone_out_len"];
"1000126" -> "1000156"  [label="DDG: request"];
"1000126" -> "1000156"  [label="DDG: GetSandboxFD()"];
"1000126" -> "1000156"  [label="DDG: reply_buf"];
"1000126" -> "1000156"  [label="DDG: NULL"];
"1000151" -> "1000156"  [label="DDG: output"];
"1000151" -> "1000156"  [label="DDG: memset(output, 0, sizeof(struct tm))"];
"1000102" -> "1000156"  [label="DDG: output"];
"1000109" -> "1000156"  [label="DDG: request.WriteString(\n       std::string(reinterpret_cast<char*>(&input), sizeof(input)))"];
"1000109" -> "1000156"  [label="DDG: std::string(reinterpret_cast<char*>(&input), sizeof(input))"];
"1000103" -> "1000156"  [label="DDG: timezone_out"];
"1000143" -> "1000156"  [label="DDG: ReadTimeStruct(&iter, output, timezone_out, timezone_out_len)"];
"1000143" -> "1000156"  [label="DDG: !ReadTimeStruct(&iter, output, timezone_out, timezone_out_len)"];
"1000134" -> "1000156"  [label="DDG: r == -1"];
"1000134" -> "1000156"  [label="DDG: r"];
"1000134" -> "1000156"  [label="DDG: -1"];
"1000144" -> "1000156"  [label="DDG: timezone_out_len"];
"1000144" -> "1000156"  [label="DDG: timezone_out"];
"1000144" -> "1000156"  [label="DDG: &iter"];
"1000144" -> "1000156"  [label="DDG: output"];
"1000111" -> "1000156"  [label="DDG: &input"];
"1000101" -> "1000156"  [label="DDG: input"];
"1000110" -> "1000156"  [label="DDG: reinterpret_cast<char*>(&input)"];
"1000115" -> "1000156"  [label="DDG: input"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000156"  [label="DDG: input"];
"1000101" -> "1000110"  [label="DDG: input"];
"1000101" -> "1000115"  [label="DDG: input"];
"1000238" -> "1000100"  [label="AST: "];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000156"  [label="DDG: output"];
"1000102" -> "1000117"  [label="DDG: output"];
"1000102" -> "1000144"  [label="DDG: output"];
"1000102" -> "1000151"  [label="DDG: output"];
"1000239" -> "1000100"  [label="AST: "];
"1000124" -> "1000105"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000135" -> "1000124"  [label="CFG: "];
"1000124" -> "1000156"  [label="DDG: base::UnixDomainSocket::SendRecvMsg(\n       GetSandboxFD(), reply_buf, sizeof(reply_buf), NULL, request)"];
"1000126" -> "1000124"  [label="DDG: GetSandboxFD()"];
"1000126" -> "1000124"  [label="DDG: request"];
"1000126" -> "1000124"  [label="DDG: reply_buf"];
"1000126" -> "1000124"  [label="DDG: NULL"];
"1000124" -> "1000134"  [label="DDG: r"];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000117"  [label="CFG: "];
"1000127" -> "1000125"  [label="CFG: "];
"1000126" -> "1000124"  [label="AST: "];
"1000126" -> "1000132"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000128" -> "1000126"  [label="AST: "];
"1000129" -> "1000126"  [label="AST: "];
"1000131" -> "1000126"  [label="AST: "];
"1000132" -> "1000126"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000126" -> "1000156"  [label="DDG: request"];
"1000126" -> "1000156"  [label="DDG: GetSandboxFD()"];
"1000126" -> "1000156"  [label="DDG: reply_buf"];
"1000126" -> "1000156"  [label="DDG: NULL"];
"1000126" -> "1000124"  [label="DDG: GetSandboxFD()"];
"1000126" -> "1000124"  [label="DDG: request"];
"1000126" -> "1000124"  [label="DDG: reply_buf"];
"1000126" -> "1000124"  [label="DDG: NULL"];
"1000128" -> "1000126"  [label="AST: "];
"1000128" -> "1000127"  [label="CFG: "];
"1000130" -> "1000128"  [label="CFG: "];
"1000129" -> "1000126"  [label="AST: "];
"1000129" -> "1000130"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000129"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000128"  [label="CFG: "];
"1000129" -> "1000130"  [label="CFG: "];
"1000131" -> "1000126"  [label="AST: "];
"1000131" -> "1000129"  [label="CFG: "];
"1000132" -> "1000131"  [label="CFG: "];
"1000132" -> "1000126"  [label="AST: "];
"1000132" -> "1000131"  [label="CFG: "];
"1000126" -> "1000132"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000127" -> "1000125"  [label="CFG: "];
"1000128" -> "1000127"  [label="CFG: "];
"1000136" -> "1000134"  [label="AST: "];
"1000136" -> "1000137"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000136" -> "1000134"  [label="DDG: 1"];
"1000137" -> "1000136"  [label="AST: "];
"1000137" -> "1000135"  [label="CFG: "];
"1000136" -> "1000137"  [label="CFG: "];
"1000138" -> "1000133"  [label="AST: "];
"1000139" -> "1000138"  [label="AST: "];
"1000133" -> "1000105"  [label="AST: "];
"1000134" -> "1000133"  [label="AST: "];
"1000138" -> "1000133"  [label="AST: "];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000139" -> "1000134"  [label="CFG: "];
"1000146" -> "1000134"  [label="CFG: "];
"1000134" -> "1000156"  [label="DDG: r == -1"];
"1000134" -> "1000156"  [label="DDG: r"];
"1000134" -> "1000156"  [label="DDG: -1"];
"1000124" -> "1000134"  [label="DDG: r"];
"1000136" -> "1000134"  [label="DDG: 1"];
"1000135" -> "1000134"  [label="AST: "];
"1000135" -> "1000124"  [label="CFG: "];
"1000137" -> "1000135"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000134"  [label="CFG: "];
"1000156" -> "1000139"  [label="CFG: "];
"1000139" -> "1000156"  [label="DDG: <RET>"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000156"  [label="DDG: timezone_out"];
"1000103" -> "1000144"  [label="DDG: timezone_out"];
"1000240" -> "1000100"  [label="AST: "];
"1000142" -> "1000105"  [label="AST: "];
"1000143" -> "1000142"  [label="AST: "];
"1000150" -> "1000142"  [label="AST: "];
"1000145" -> "1000144"  [label="AST: "];
"1000145" -> "1000146"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000134"  [label="CFG: "];
"1000145" -> "1000146"  [label="CFG: "];
"1000147" -> "1000144"  [label="AST: "];
"1000147" -> "1000145"  [label="CFG: "];
"1000148" -> "1000147"  [label="CFG: "];
"1000148" -> "1000144"  [label="AST: "];
"1000148" -> "1000147"  [label="CFG: "];
"1000149" -> "1000148"  [label="CFG: "];
"1000149" -> "1000144"  [label="AST: "];
"1000149" -> "1000148"  [label="CFG: "];
"1000144" -> "1000149"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000144"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000152" -> "1000143"  [label="CFG: "];
"1000156" -> "1000143"  [label="CFG: "];
"1000143" -> "1000156"  [label="DDG: ReadTimeStruct(&iter, output, timezone_out, timezone_out_len)"];
"1000143" -> "1000156"  [label="DDG: !ReadTimeStruct(&iter, output, timezone_out, timezone_out_len)"];
"1000144" -> "1000143"  [label="DDG: &iter"];
"1000144" -> "1000143"  [label="DDG: output"];
"1000144" -> "1000143"  [label="DDG: timezone_out"];
"1000144" -> "1000143"  [label="DDG: timezone_out_len"];
"1000144" -> "1000143"  [label="AST: "];
"1000144" -> "1000149"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000147" -> "1000144"  [label="AST: "];
"1000148" -> "1000144"  [label="AST: "];
"1000149" -> "1000144"  [label="AST: "];
"1000143" -> "1000144"  [label="CFG: "];
"1000144" -> "1000156"  [label="DDG: timezone_out_len"];
"1000144" -> "1000156"  [label="DDG: timezone_out"];
"1000144" -> "1000156"  [label="DDG: &iter"];
"1000144" -> "1000156"  [label="DDG: output"];
"1000144" -> "1000143"  [label="DDG: &iter"];
"1000144" -> "1000143"  [label="DDG: output"];
"1000144" -> "1000143"  [label="DDG: timezone_out"];
"1000144" -> "1000143"  [label="DDG: timezone_out_len"];
"1000117" -> "1000144"  [label="DDG: output"];
"1000102" -> "1000144"  [label="DDG: output"];
"1000103" -> "1000144"  [label="DDG: timezone_out"];
"1000104" -> "1000144"  [label="DDG: timezone_out_len"];
"1000144" -> "1000151"  [label="DDG: output"];
"1000150" -> "1000142"  [label="AST: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000143"  [label="CFG: "];
"1000153" -> "1000152"  [label="CFG: "];
"1000153" -> "1000151"  [label="AST: "];
"1000153" -> "1000152"  [label="CFG: "];
"1000155" -> "1000153"  [label="CFG: "];
"1000154" -> "1000151"  [label="AST: "];
"1000154" -> "1000155"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000151" -> "1000154"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000151" -> "1000154"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000153" -> "1000151"  [label="AST: "];
"1000154" -> "1000151"  [label="AST: "];
"1000156" -> "1000151"  [label="CFG: "];
"1000151" -> "1000156"  [label="DDG: output"];
"1000151" -> "1000156"  [label="DDG: memset(output, 0, sizeof(struct tm))"];
"1000144" -> "1000151"  [label="DDG: output"];
"1000102" -> "1000151"  [label="DDG: output"];
"1000104" -> "1000100"  [label="AST: "];
"1000104" -> "1000156"  [label="DDG: timezone_out_len"];
"1000104" -> "1000144"  [label="DDG: timezone_out_len"];
"1000241" -> "1000100"  [label="AST: "];
"1000105" -> "1000100"  [label="AST: "];
"1000106" -> "1000105"  [label="AST: "];
"1000107" -> "1000105"  [label="AST: "];
"1000109" -> "1000105"  [label="AST: "];
"1000117" -> "1000105"  [label="AST: "];
"1000122" -> "1000105"  [label="AST: "];
"1000123" -> "1000105"  [label="AST: "];
"1000124" -> "1000105"  [label="AST: "];
"1000133" -> "1000105"  [label="AST: "];
"1000140" -> "1000105"  [label="AST: "];
"1000141" -> "1000105"  [label="AST: "];
"1000142" -> "1000105"  [label="AST: "];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000100"  [label="CFG: "];
"1000107" -> "1000108"  [label="CFG: "];
"1000107" -> "1000105"  [label="AST: "];
"1000107" -> "1000108"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000112" -> "1000107"  [label="CFG: "];
"1000107" -> "1000156"  [label="DDG: LinuxSandbox::METHOD_LOCALTIME"];
"1000107" -> "1000156"  [label="DDG: request.WriteInt(LinuxSandbox::METHOD_LOCALTIME)"];
"1000109" -> "1000105"  [label="AST: "];
"1000109" -> "1000110"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000118" -> "1000109"  [label="CFG: "];
"1000109" -> "1000156"  [label="DDG: request.WriteString(\n       std::string(reinterpret_cast<char*>(&input), sizeof(input)))"];
"1000109" -> "1000156"  [label="DDG: std::string(reinterpret_cast<char*>(&input), sizeof(input))"];
"1000110" -> "1000109"  [label="DDG: reinterpret_cast<char*>(&input)"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000113"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000113" -> "1000111"  [label="AST: "];
"1000116" -> "1000111"  [label="CFG: "];
"1000111" -> "1000156"  [label="DDG: &input"];
"1000111" -> "1000110"  [label="DDG: &input"];
"1000113" -> "1000111"  [label="AST: "];
"1000113" -> "1000114"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000111" -> "1000113"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000112"  [label="CFG: "];
"1000113" -> "1000114"  [label="CFG: "];
"1000115" -> "1000110"  [label="AST: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000110" -> "1000115"  [label="CFG: "];
"1000115" -> "1000156"  [label="DDG: input"];
"1000101" -> "1000115"  [label="DDG: input"];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000111"  [label="CFG: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000115"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000115" -> "1000110"  [label="AST: "];
"1000109" -> "1000110"  [label="CFG: "];
"1000110" -> "1000156"  [label="DDG: reinterpret_cast<char*>(&input)"];
"1000110" -> "1000109"  [label="DDG: reinterpret_cast<char*>(&input)"];
"1000111" -> "1000110"  [label="DDG: &input"];
"1000101" -> "1000110"  [label="DDG: input"];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000118"  [label="CFG: "];
"1000121" -> "1000119"  [label="CFG: "];
"1000117" -> "1000105"  [label="AST: "];
"1000117" -> "1000120"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000120" -> "1000117"  [label="AST: "];
"1000125" -> "1000117"  [label="CFG: "];
"1000117" -> "1000156"  [label="DDG: memset(output, 0, sizeof(struct tm))"];
"1000117" -> "1000156"  [label="DDG: output"];
"1000102" -> "1000117"  [label="DDG: output"];
"1000117" -> "1000144"  [label="DDG: output"];
"1000120" -> "1000117"  [label="AST: "];
"1000120" -> "1000121"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000117" -> "1000120"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000109"  [label="CFG: "];
"1000119" -> "1000118"  [label="CFG: "];
}
