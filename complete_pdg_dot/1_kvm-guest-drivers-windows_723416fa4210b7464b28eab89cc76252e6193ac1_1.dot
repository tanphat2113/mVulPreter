digraph "1_kvm-guest-drivers-windows_723416fa4210b7464b28eab89cc76252e6193ac1_1" {
"1000140" [label="(MethodReturn,USHORT)"];
"1000101" [label="(MethodParameterIn,PVOID PacketData)"];
"1000194" [label="(MethodParameterOut,PVOID PacketData)"];
"1000102" [label="(MethodParameterIn,ULONG IpHeaderOffset)"];
"1000195" [label="(MethodParameterOut,ULONG IpHeaderOffset)"];
"1000128" [label="(ControlStructure,else)"];
"1000129" [label="(Block,)"];
"1000131" [label="(Literal,0)"];
"1000132" [label="(Block,)"];
"1000133" [label="(Literal,\"[%s] ERROR: NOT an IP packet - expected troubles!\n\")"];
"1000134" [label="(Identifier,__FUNCTION__)"];
"1000130" [label="(Call,DPrintf(0, (\"[%s] ERROR: NOT an IP packet - expected troubles!\n\", __FUNCTION__)))"];
"1000137" [label="(Literal,0)"];
"1000135" [label="(Call,Res = 0)"];
"1000136" [label="(Identifier,Res)"];
"1000139" [label="(Identifier,Res)"];
"1000138" [label="(Return,return Res;)"];
"1000103" [label="(Block,)"];
"1000106" [label="(Call,ppr = ParaNdis_ReviewIPPacket(RtlOffsetToPointer(PacketData, IpHeaderOffset),\n                                       GetDataLength(), __FUNCTION__))"];
"1000107" [label="(Identifier,ppr)"];
"1000108" [label="(Call,ParaNdis_ReviewIPPacket(RtlOffsetToPointer(PacketData, IpHeaderOffset),\n                                       GetDataLength(), __FUNCTION__))"];
"1000109" [label="(Call,RtlOffsetToPointer(PacketData, IpHeaderOffset))"];
"1000110" [label="(Identifier,PacketData)"];
"1000111" [label="(Identifier,IpHeaderOffset)"];
"1000112" [label="(Call,GetDataLength())"];
"1000113" [label="(Identifier,__FUNCTION__)"];
"1000118" [label="(FieldIdentifier,ipStatus)"];
"1000119" [label="(Identifier,ppresNotIP)"];
"1000114" [label="(ControlStructure,if (ppr.ipStatus != ppresNotIP))"];
"1000115" [label="(Call,ppr.ipStatus != ppresNotIP)"];
"1000116" [label="(Call,ppr.ipStatus)"];
"1000117" [label="(Identifier,ppr)"];
"1000120" [label="(Block,)"];
"1000121" [label="(Call,USHORT>(IpHeaderOffset + ppr.ipHeaderSize))"];
"1000122" [label="(Identifier,USHORT)"];
"1000123" [label="(Call,IpHeaderOffset + ppr.ipHeaderSize)"];
"1000124" [label="(Identifier,IpHeaderOffset)"];
"1000125" [label="(Call,ppr.ipHeaderSize)"];
"1000126" [label="(Identifier,ppr)"];
"1000127" [label="(FieldIdentifier,ipHeaderSize)"];
"1000140" -> "1000100"  [label="AST: "];
"1000140" -> "1000138"  [label="CFG: "];
"1000130" -> "1000140"  [label="DDG: DPrintf(0, (\\"[%s] ERROR: NOT an IP packet - expected troubles!\n\\", __FUNCTION__))"];
"1000123" -> "1000140"  [label="DDG: ppr.ipHeaderSize"];
"1000123" -> "1000140"  [label="DDG: IpHeaderOffset"];
"1000106" -> "1000140"  [label="DDG: ParaNdis_ReviewIPPacket(RtlOffsetToPointer(PacketData, IpHeaderOffset),\n                                       GetDataLength(), __FUNCTION__)"];
"1000106" -> "1000140"  [label="DDG: ppr"];
"1000121" -> "1000140"  [label="DDG: IpHeaderOffset + ppr.ipHeaderSize"];
"1000121" -> "1000140"  [label="DDG: USHORT>(IpHeaderOffset + ppr.ipHeaderSize)"];
"1000121" -> "1000140"  [label="DDG: USHORT"];
"1000115" -> "1000140"  [label="DDG: ppresNotIP"];
"1000115" -> "1000140"  [label="DDG: ppr.ipStatus != ppresNotIP"];
"1000115" -> "1000140"  [label="DDG: ppr.ipStatus"];
"1000102" -> "1000140"  [label="DDG: IpHeaderOffset"];
"1000108" -> "1000140"  [label="DDG: GetDataLength()"];
"1000108" -> "1000140"  [label="DDG: __FUNCTION__"];
"1000108" -> "1000140"  [label="DDG: RtlOffsetToPointer(PacketData, IpHeaderOffset)"];
"1000101" -> "1000140"  [label="DDG: PacketData"];
"1000109" -> "1000140"  [label="DDG: PacketData"];
"1000109" -> "1000140"  [label="DDG: IpHeaderOffset"];
"1000135" -> "1000140"  [label="DDG: Res"];
"1000138" -> "1000140"  [label="DDG: <RET>"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000140"  [label="DDG: PacketData"];
"1000101" -> "1000109"  [label="DDG: PacketData"];
"1000194" -> "1000100"  [label="AST: "];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000140"  [label="DDG: IpHeaderOffset"];
"1000102" -> "1000109"  [label="DDG: IpHeaderOffset"];
"1000102" -> "1000121"  [label="DDG: IpHeaderOffset"];
"1000102" -> "1000123"  [label="DDG: IpHeaderOffset"];
"1000195" -> "1000100"  [label="AST: "];
"1000128" -> "1000114"  [label="AST: "];
"1000129" -> "1000128"  [label="AST: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000129"  [label="AST: "];
"1000135" -> "1000129"  [label="AST: "];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000115"  [label="CFG: "];
"1000133" -> "1000131"  [label="CFG: "];
"1000132" -> "1000130"  [label="AST: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="AST: "];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000131"  [label="CFG: "];
"1000134" -> "1000133"  [label="CFG: "];
"1000134" -> "1000132"  [label="AST: "];
"1000134" -> "1000133"  [label="CFG: "];
"1000130" -> "1000134"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000134"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000136" -> "1000130"  [label="CFG: "];
"1000130" -> "1000140"  [label="DDG: DPrintf(0, (\\"[%s] ERROR: NOT an IP packet - expected troubles!\n\\", __FUNCTION__))"];
"1000137" -> "1000135"  [label="AST: "];
"1000137" -> "1000136"  [label="CFG: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000135" -> "1000129"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000139" -> "1000135"  [label="CFG: "];
"1000135" -> "1000140"  [label="DDG: Res"];
"1000135" -> "1000138"  [label="DDG: Res"];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000130"  [label="CFG: "];
"1000137" -> "1000136"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000121"  [label="CFG: "];
"1000139" -> "1000135"  [label="CFG: "];
"1000138" -> "1000139"  [label="CFG: "];
"1000139" -> "1000138"  [label="DDG: Res"];
"1000138" -> "1000103"  [label="AST: "];
"1000138" -> "1000139"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="CFG: "];
"1000138" -> "1000140"  [label="DDG: <RET>"];
"1000139" -> "1000138"  [label="DDG: Res"];
"1000135" -> "1000138"  [label="DDG: Res"];
"1000103" -> "1000100"  [label="AST: "];
"1000104" -> "1000103"  [label="AST: "];
"1000105" -> "1000103"  [label="AST: "];
"1000106" -> "1000103"  [label="AST: "];
"1000114" -> "1000103"  [label="AST: "];
"1000138" -> "1000103"  [label="AST: "];
"1000106" -> "1000103"  [label="AST: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000108" -> "1000106"  [label="AST: "];
"1000117" -> "1000106"  [label="CFG: "];
"1000106" -> "1000140"  [label="DDG: ParaNdis_ReviewIPPacket(RtlOffsetToPointer(PacketData, IpHeaderOffset),\n                                       GetDataLength(), __FUNCTION__)"];
"1000106" -> "1000140"  [label="DDG: ppr"];
"1000108" -> "1000106"  [label="DDG: RtlOffsetToPointer(PacketData, IpHeaderOffset)"];
"1000108" -> "1000106"  [label="DDG: GetDataLength()"];
"1000108" -> "1000106"  [label="DDG: __FUNCTION__"];
"1000106" -> "1000115"  [label="DDG: ppr"];
"1000106" -> "1000121"  [label="DDG: ppr"];
"1000106" -> "1000123"  [label="DDG: ppr"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000100"  [label="CFG: "];
"1000110" -> "1000107"  [label="CFG: "];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000113"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000112" -> "1000108"  [label="AST: "];
"1000113" -> "1000108"  [label="AST: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000108" -> "1000140"  [label="DDG: GetDataLength()"];
"1000108" -> "1000140"  [label="DDG: __FUNCTION__"];
"1000108" -> "1000140"  [label="DDG: RtlOffsetToPointer(PacketData, IpHeaderOffset)"];
"1000108" -> "1000106"  [label="DDG: RtlOffsetToPointer(PacketData, IpHeaderOffset)"];
"1000108" -> "1000106"  [label="DDG: GetDataLength()"];
"1000108" -> "1000106"  [label="DDG: __FUNCTION__"];
"1000109" -> "1000108"  [label="DDG: PacketData"];
"1000109" -> "1000108"  [label="DDG: IpHeaderOffset"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000112" -> "1000109"  [label="CFG: "];
"1000109" -> "1000140"  [label="DDG: PacketData"];
"1000109" -> "1000140"  [label="DDG: IpHeaderOffset"];
"1000109" -> "1000108"  [label="DDG: PacketData"];
"1000109" -> "1000108"  [label="DDG: IpHeaderOffset"];
"1000101" -> "1000109"  [label="DDG: PacketData"];
"1000102" -> "1000109"  [label="DDG: IpHeaderOffset"];
"1000109" -> "1000121"  [label="DDG: IpHeaderOffset"];
"1000109" -> "1000123"  [label="DDG: IpHeaderOffset"];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000107"  [label="CFG: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000112" -> "1000108"  [label="AST: "];
"1000112" -> "1000109"  [label="CFG: "];
"1000113" -> "1000112"  [label="CFG: "];
"1000113" -> "1000108"  [label="AST: "];
"1000113" -> "1000112"  [label="CFG: "];
"1000108" -> "1000113"  [label="CFG: "];
"1000118" -> "1000116"  [label="AST: "];
"1000118" -> "1000117"  [label="CFG: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000119" -> "1000115"  [label="AST: "];
"1000119" -> "1000116"  [label="CFG: "];
"1000115" -> "1000119"  [label="CFG: "];
"1000114" -> "1000103"  [label="AST: "];
"1000115" -> "1000114"  [label="AST: "];
"1000120" -> "1000114"  [label="AST: "];
"1000128" -> "1000114"  [label="AST: "];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000119"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000119" -> "1000115"  [label="AST: "];
"1000122" -> "1000115"  [label="CFG: "];
"1000131" -> "1000115"  [label="CFG: "];
"1000115" -> "1000140"  [label="DDG: ppresNotIP"];
"1000115" -> "1000140"  [label="DDG: ppr.ipStatus != ppresNotIP"];
"1000115" -> "1000140"  [label="DDG: ppr.ipStatus"];
"1000106" -> "1000115"  [label="DDG: ppr"];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000119" -> "1000116"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1000106"  [label="CFG: "];
"1000118" -> "1000117"  [label="CFG: "];
"1000120" -> "1000114"  [label="AST: "];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000139" -> "1000121"  [label="CFG: "];
"1000121" -> "1000140"  [label="DDG: IpHeaderOffset + ppr.ipHeaderSize"];
"1000121" -> "1000140"  [label="DDG: USHORT>(IpHeaderOffset + ppr.ipHeaderSize)"];
"1000121" -> "1000140"  [label="DDG: USHORT"];
"1000109" -> "1000121"  [label="DDG: IpHeaderOffset"];
"1000102" -> "1000121"  [label="DDG: IpHeaderOffset"];
"1000106" -> "1000121"  [label="DDG: ppr"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000115"  [label="CFG: "];
"1000124" -> "1000122"  [label="CFG: "];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000123" -> "1000140"  [label="DDG: ppr.ipHeaderSize"];
"1000123" -> "1000140"  [label="DDG: IpHeaderOffset"];
"1000109" -> "1000123"  [label="DDG: IpHeaderOffset"];
"1000102" -> "1000123"  [label="DDG: IpHeaderOffset"];
"1000106" -> "1000123"  [label="DDG: ppr"];
"1000124" -> "1000123"  [label="AST: "];
"1000124" -> "1000122"  [label="CFG: "];
"1000126" -> "1000124"  [label="CFG: "];
"1000125" -> "1000123"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000124"  [label="CFG: "];
"1000127" -> "1000126"  [label="CFG: "];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1000126"  [label="CFG: "];
"1000125" -> "1000127"  [label="CFG: "];
}
