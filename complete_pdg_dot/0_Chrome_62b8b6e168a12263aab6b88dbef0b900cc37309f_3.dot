digraph "0_Chrome_62b8b6e168a12263aab6b88dbef0b900cc37309f_3" {
"1000231" [label="(MethodReturn,void)"];
"1000101" [label="(MethodParameterIn,const display::Display& display)"];
"1000364" [label="(MethodParameterOut,const display::Display& display)"];
"1000102" [label="(Block,)"];
"1000125" [label="(Call,* ash_host =\n        AddWindowTreeHostForDisplay(display, AshWindowTreeHostInitParams()))"];
"1000126" [label="(Identifier,ash_host)"];
"1000128" [label="(Identifier,display)"];
"1000129" [label="(Call,AshWindowTreeHostInitParams())"];
"1000127" [label="(Call,AddWindowTreeHostForDisplay(display, AshWindowTreeHostInitParams()))"];
"1000130" [label="(Call,RootWindowController::CreateForSecondaryDisplay(ash_host))"];
"1000131" [label="(Identifier,ash_host)"];
"1000132" [label="(Call,Shell::GetInstance()->magnification_controller()->SwitchTargetRootWindow(\n         ash_host->AsWindowTreeHost()->window(), false))"];
"1000134" [label="(Identifier,false)"];
"1000133" [label="(Call,ash_host->AsWindowTreeHost()->window())"];
"1000135" [label="(Call,Shell::GetInstance()\n         ->partial_magnification_controller()\n        ->SwitchTargetRootWindowIfNeeded(\n            ash_host->AsWindowTreeHost()->window()))"];
"1000136" [label="(Call,ash_host->AsWindowTreeHost()->window())"];
"1000138" [label="(Call,* to_delete = primary_tree_host_for_replace_)"];
"1000139" [label="(Identifier,to_delete)"];
"1000140" [label="(Identifier,primary_tree_host_for_replace_)"];
"1000143" [label="(Identifier,nullptr)"];
"1000141" [label="(Call,primary_tree_host_for_replace_ = nullptr)"];
"1000142" [label="(Identifier,primary_tree_host_for_replace_)"];
"1000145" [label="(Call,* old_tray =\n        GetRootWindowController(to_delete->AsWindowTreeHost()->window())\n            ->GetSystemTray())"];
"1000146" [label="(Identifier,old_tray)"];
"1000147" [label="(Call,GetRootWindowController(to_delete->AsWindowTreeHost()->window())\n            ->GetSystemTray())"];
"1000149" [label="(Call,* new_tray =\n        ash::Shell::GetInstance()->GetPrimarySystemTray())"];
"1000150" [label="(Identifier,new_tray)"];
"1000117" [label="(Block,)"];
"1000151" [label="(Call,ash::Shell::GetInstance()->GetPrimarySystemTray())"];
"1000152" [label="(ControlStructure,if (old_tray->GetWidget()->IsVisible()))"];
"1000154" [label="(Block,)"];
"1000153" [label="(Call,old_tray->GetWidget()->IsVisible())"];
"1000103" [label="(ControlStructure,if (primary_tree_host_for_replace_ &&\n      (GetRootWindowSettings(GetWindow(primary_tree_host_for_replace_))\n               ->display_id == DisplayManager::kUnifiedDisplayId ||\n       display.id() == DisplayManager::kUnifiedDisplayId)))"];
"1000104" [label="(Call,primary_tree_host_for_replace_ &&\n      (GetRootWindowSettings(GetWindow(primary_tree_host_for_replace_))\n               ->display_id == DisplayManager::kUnifiedDisplayId ||\n       display.id() == DisplayManager::kUnifiedDisplayId))"];
"1000105" [label="(Identifier,primary_tree_host_for_replace_)"];
"1000156" [label="(Identifier,true)"];
"1000155" [label="(Call,new_tray->SetVisible(true))"];
"1000157" [label="(Call,new_tray->GetWidget()->Show())"];
"1000159" [label="(Identifier,to_delete)"];
"1000158" [label="(Call,DeleteHost(to_delete))"];
"1000160" [label="(Block,)"];
"1000161" [label="(Return,return pair.second == to_delete;)"];
"1000162" [label="(Call,pair.second == to_delete)"];
"1000163" [label="(Call,pair.second)"];
"1000164" [label="(Identifier,pair)"];
"1000165" [label="(FieldIdentifier,second)"];
"1000166" [label="(Identifier,to_delete)"];
"1000110" [label="(Call,GetWindow(primary_tree_host_for_replace_))"];
"1000111" [label="(Identifier,primary_tree_host_for_replace_)"];
"1000106" [label="(Call,GetRootWindowSettings(GetWindow(primary_tree_host_for_replace_))\n               ->display_id == DisplayManager::kUnifiedDisplayId ||\n       display.id() == DisplayManager::kUnifiedDisplayId)"];
"1000107" [label="(Call,GetRootWindowSettings(GetWindow(primary_tree_host_for_replace_))\n               ->display_id == DisplayManager::kUnifiedDisplayId)"];
"1000108" [label="(Call,GetRootWindowSettings(GetWindow(primary_tree_host_for_replace_))\n               ->display_id)"];
"1000109" [label="(Call,GetRootWindowSettings(GetWindow(primary_tree_host_for_replace_)))"];
"1000168" [label="(Call,iter == window_tree_hosts_.end())"];
"1000169" [label="(Identifier,iter)"];
"1000170" [label="(Call,window_tree_hosts_.end())"];
"1000167" [label="(Call,DCHECK(iter == window_tree_hosts_.end()))"];
"1000171" [label="(ControlStructure,else)"];
"1000173" [label="(Identifier,primary_tree_host_for_replace_)"];
"1000172" [label="(ControlStructure,if (primary_tree_host_for_replace_))"];
"1000176" [label="(Call,window_tree_hosts_.empty())"];
"1000175" [label="(Call,DCHECK(window_tree_hosts_.empty()))"];
"1000179" [label="(Call,display.id())"];
"1000177" [label="(Call,primary_display_id = display.id())"];
"1000178" [label="(Identifier,primary_display_id)"];
"1000183" [label="(Call,display.id())"];
"1000184" [label="(Identifier,primary_tree_host_for_replace_)"];
"1000180" [label="(Call,window_tree_hosts_[display.id()] = primary_tree_host_for_replace_)"];
"1000181" [label="(Call,window_tree_hosts_[display.id()])"];
"1000182" [label="(Identifier,window_tree_hosts_)"];
"1000188" [label="(Call,GetWindow(primary_tree_host_for_replace_))"];
"1000189" [label="(Identifier,primary_tree_host_for_replace_)"];
"1000185" [label="(Call,GetRootWindowSettings(GetWindow(primary_tree_host_for_replace_))\n        ->display_id = display.id())"];
"1000186" [label="(Call,GetRootWindowSettings(GetWindow(primary_tree_host_for_replace_))\n        ->display_id)"];
"1000187" [label="(Call,GetRootWindowSettings(GetWindow(primary_tree_host_for_replace_)))"];
"1000112" [label="(FieldIdentifier,display_id)"];
"1000113" [label="(Identifier,DisplayManager::kUnifiedDisplayId)"];
"1000190" [label="(FieldIdentifier,display_id)"];
"1000191" [label="(Call,display.id())"];
"1000194" [label="(Identifier,nullptr)"];
"1000192" [label="(Call,primary_tree_host_for_replace_ = nullptr)"];
"1000193" [label="(Identifier,primary_tree_host_for_replace_)"];
"1000196" [label="(Call,& display_info =\n        GetDisplayManager()->GetDisplayInfo(display.id()))"];
"1000197" [label="(Identifier,display_info)"];
"1000199" [label="(Call,display.id())"];
"1000198" [label="(Call,GetDisplayManager()->GetDisplayInfo(display.id()))"];
"1000201" [label="(Call,* ash_host = window_tree_hosts_[display.id()])"];
"1000202" [label="(Identifier,ash_host)"];
"1000203" [label="(Call,window_tree_hosts_[display.id()])"];
"1000204" [label="(Identifier,window_tree_hosts_)"];
"1000174" [label="(Block,)"];
"1000205" [label="(Call,display.id())"];
"1000206" [label="(Call,ash_host->AsWindowTreeHost()->SetBounds(display_info.bounds_in_native()))"];
"1000207" [label="(Call,display_info.bounds_in_native())"];
"1000209" [label="(Identifier,ash_host)"];
"1000208" [label="(Call,SetDisplayPropertiesOnHost(ash_host, display))"];
"1000210" [label="(Identifier,display)"];
"1000211" [label="(ControlStructure,else)"];
"1000216" [label="(Identifier,display::Display::kInvalidDisplayID)"];
"1000213" [label="(ControlStructure,if (primary_display_id == display::Display::kInvalidDisplayID))"];
"1000214" [label="(Call,primary_display_id == display::Display::kInvalidDisplayID)"];
"1000215" [label="(Identifier,primary_display_id)"];
"1000219" [label="(Call,display.id())"];
"1000217" [label="(Call,primary_display_id = display.id())"];
"1000218" [label="(Identifier,primary_display_id)"];
"1000116" [label="(Identifier,DisplayManager::kUnifiedDisplayId)"];
"1000114" [label="(Call,display.id() == DisplayManager::kUnifiedDisplayId)"];
"1000115" [label="(Call,display.id())"];
"1000221" [label="(Call,!window_tree_hosts_.empty())"];
"1000222" [label="(Call,window_tree_hosts_.empty())"];
"1000220" [label="(Call,DCHECK(!window_tree_hosts_.empty()))"];
"1000224" [label="(Call,* ash_host =\n        AddWindowTreeHostForDisplay(display, AshWindowTreeHostInitParams()))"];
"1000225" [label="(Identifier,ash_host)"];
"1000212" [label="(Block,)"];
"1000227" [label="(Identifier,display)"];
"1000228" [label="(Call,AshWindowTreeHostInitParams())"];
"1000226" [label="(Call,AddWindowTreeHostForDisplay(display, AshWindowTreeHostInitParams()))"];
"1000229" [label="(Call,RootWindowController::CreateForSecondaryDisplay(ash_host))"];
"1000230" [label="(Identifier,ash_host)"];
"1000119" [label="(Identifier,display::Display::kInvalidDisplayID)"];
"1000118" [label="(Call,DCHECK_EQ(display::Display::kInvalidDisplayID, primary_display_id))"];
"1000120" [label="(Identifier,primary_display_id)"];
"1000123" [label="(Call,display.id())"];
"1000121" [label="(Call,primary_display_id = display.id())"];
"1000122" [label="(Identifier,primary_display_id)"];
"1000231" -> "1000100"  [label="AST: "];
"1000231" -> "1000161"  [label="CFG: "];
"1000231" -> "1000167"  [label="CFG: "];
"1000231" -> "1000208"  [label="CFG: "];
"1000231" -> "1000229"  [label="CFG: "];
"1000161" -> "1000231"  [label="DDG: <RET>"];
"1000168" -> "1000231"  [label="DDG: iter"];
"1000168" -> "1000231"  [label="DDG: window_tree_hosts_.end()"];
"1000104" -> "1000231"  [label="DDG: primary_tree_host_for_replace_ &&\n      (GetRootWindowSettings(GetWindow(primary_tree_host_for_replace_))\n               ->display_id == DisplayManager::kUnifiedDisplayId ||\n       display.id() == DisplayManager::kUnifiedDisplayId)"];
"1000104" -> "1000231"  [label="DDG: primary_tree_host_for_replace_"];
"1000104" -> "1000231"  [label="DDG: GetRootWindowSettings(GetWindow(primary_tree_host_for_replace_))\n               ->display_id == DisplayManager::kUnifiedDisplayId ||\n       display.id() == DisplayManager::kUnifiedDisplayId"];
"1000162" -> "1000231"  [label="DDG: to_delete"];
"1000162" -> "1000231"  [label="DDG: pair.second"];
"1000162" -> "1000231"  [label="DDG: pair.second == to_delete"];
"1000118" -> "1000231"  [label="DDG: DCHECK_EQ(display::Display::kInvalidDisplayID, primary_display_id)"];
"1000118" -> "1000231"  [label="DDG: display::Display::kInvalidDisplayID"];
"1000196" -> "1000231"  [label="DDG: display_info"];
"1000196" -> "1000231"  [label="DDG: GetDisplayManager()->GetDisplayInfo(display.id())"];
"1000187" -> "1000231"  [label="DDG: GetWindow(primary_tree_host_for_replace_)"];
"1000177" -> "1000231"  [label="DDG: primary_display_id"];
"1000167" -> "1000231"  [label="DDG: iter == window_tree_hosts_.end()"];
"1000167" -> "1000231"  [label="DDG: DCHECK(iter == window_tree_hosts_.end())"];
"1000130" -> "1000231"  [label="DDG: RootWindowController::CreateForSecondaryDisplay(ash_host)"];
"1000130" -> "1000231"  [label="DDG: ash_host"];
"1000185" -> "1000231"  [label="DDG: GetRootWindowSettings(GetWindow(primary_tree_host_for_replace_))\n        ->display_id"];
"1000141" -> "1000231"  [label="DDG: primary_tree_host_for_replace_"];
"1000141" -> "1000231"  [label="DDG: nullptr"];
"1000220" -> "1000231"  [label="DDG: !window_tree_hosts_.empty()"];
"1000220" -> "1000231"  [label="DDG: DCHECK(!window_tree_hosts_.empty())"];
"1000192" -> "1000231"  [label="DDG: nullptr"];
"1000192" -> "1000231"  [label="DDG: primary_tree_host_for_replace_"];
"1000226" -> "1000231"  [label="DDG: display"];
"1000226" -> "1000231"  [label="DDG: AshWindowTreeHostInitParams()"];
"1000107" -> "1000231"  [label="DDG: GetRootWindowSettings(GetWindow(primary_tree_host_for_replace_))\n               ->display_id"];
"1000107" -> "1000231"  [label="DDG: DisplayManager::kUnifiedDisplayId"];
"1000208" -> "1000231"  [label="DDG: ash_host"];
"1000208" -> "1000231"  [label="DDG: display"];
"1000208" -> "1000231"  [label="DDG: SetDisplayPropertiesOnHost(ash_host, display)"];
"1000106" -> "1000231"  [label="DDG: GetRootWindowSettings(GetWindow(primary_tree_host_for_replace_))\n               ->display_id == DisplayManager::kUnifiedDisplayId"];
"1000106" -> "1000231"  [label="DDG: display.id() == DisplayManager::kUnifiedDisplayId"];
"1000149" -> "1000231"  [label="DDG: ash::Shell::GetInstance()->GetPrimarySystemTray()"];
"1000149" -> "1000231"  [label="DDG: new_tray"];
"1000214" -> "1000231"  [label="DDG: display::Display::kInvalidDisplayID"];
"1000214" -> "1000231"  [label="DDG: primary_display_id == display::Display::kInvalidDisplayID"];
"1000214" -> "1000231"  [label="DDG: primary_display_id"];
"1000157" -> "1000231"  [label="DDG: new_tray->GetWidget()->Show()"];
"1000224" -> "1000231"  [label="DDG: AddWindowTreeHostForDisplay(display, AshWindowTreeHostInitParams())"];
"1000217" -> "1000231"  [label="DDG: display.id()"];
"1000217" -> "1000231"  [label="DDG: primary_display_id"];
"1000206" -> "1000231"  [label="DDG: ash_host->AsWindowTreeHost()->SetBounds(display_info.bounds_in_native())"];
"1000206" -> "1000231"  [label="DDG: display_info.bounds_in_native()"];
"1000121" -> "1000231"  [label="DDG: display.id()"];
"1000121" -> "1000231"  [label="DDG: primary_display_id"];
"1000132" -> "1000231"  [label="DDG: Shell::GetInstance()->magnification_controller()->SwitchTargetRootWindow(\n         ash_host->AsWindowTreeHost()->window(), false)"];
"1000132" -> "1000231"  [label="DDG: false"];
"1000229" -> "1000231"  [label="DDG: RootWindowController::CreateForSecondaryDisplay(ash_host)"];
"1000229" -> "1000231"  [label="DDG: ash_host"];
"1000127" -> "1000231"  [label="DDG: AshWindowTreeHostInitParams()"];
"1000127" -> "1000231"  [label="DDG: display"];
"1000155" -> "1000231"  [label="DDG: new_tray->SetVisible(true)"];
"1000155" -> "1000231"  [label="DDG: true"];
"1000158" -> "1000231"  [label="DDG: DeleteHost(to_delete)"];
"1000114" -> "1000231"  [label="DDG: display.id()"];
"1000114" -> "1000231"  [label="DDG: DisplayManager::kUnifiedDisplayId"];
"1000201" -> "1000231"  [label="DDG: window_tree_hosts_[display.id()]"];
"1000221" -> "1000231"  [label="DDG: window_tree_hosts_.empty()"];
"1000175" -> "1000231"  [label="DDG: window_tree_hosts_.empty()"];
"1000175" -> "1000231"  [label="DDG: DCHECK(window_tree_hosts_.empty())"];
"1000125" -> "1000231"  [label="DDG: AddWindowTreeHostForDisplay(display, AshWindowTreeHostInitParams())"];
"1000153" -> "1000231"  [label="DDG: old_tray->GetWidget()->IsVisible()"];
"1000135" -> "1000231"  [label="DDG: Shell::GetInstance()\n         ->partial_magnification_controller()\n        ->SwitchTargetRootWindowIfNeeded(\n            ash_host->AsWindowTreeHost()->window())"];
"1000135" -> "1000231"  [label="DDG: ash_host->AsWindowTreeHost()->window()"];
"1000101" -> "1000231"  [label="DDG: display"];
"1000109" -> "1000231"  [label="DDG: GetWindow(primary_tree_host_for_replace_)"];
"1000145" -> "1000231"  [label="DDG: old_tray"];
"1000145" -> "1000231"  [label="DDG: GetRootWindowController(to_delete->AsWindowTreeHost()->window())\n            ->GetSystemTray()"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000231"  [label="DDG: display"];
"1000101" -> "1000127"  [label="DDG: display"];
"1000101" -> "1000208"  [label="DDG: display"];
"1000101" -> "1000226"  [label="DDG: display"];
"1000364" -> "1000100"  [label="AST: "];
"1000102" -> "1000100"  [label="AST: "];
"1000103" -> "1000102"  [label="AST: "];
"1000125" -> "1000117"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000131" -> "1000125"  [label="CFG: "];
"1000125" -> "1000231"  [label="DDG: AddWindowTreeHostForDisplay(display, AshWindowTreeHostInitParams())"];
"1000127" -> "1000125"  [label="DDG: display"];
"1000127" -> "1000125"  [label="DDG: AshWindowTreeHostInitParams()"];
"1000125" -> "1000130"  [label="DDG: ash_host"];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000121"  [label="CFG: "];
"1000128" -> "1000126"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000126"  [label="CFG: "];
"1000129" -> "1000128"  [label="CFG: "];
"1000129" -> "1000127"  [label="AST: "];
"1000129" -> "1000128"  [label="CFG: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000127" -> "1000231"  [label="DDG: AshWindowTreeHostInitParams()"];
"1000127" -> "1000231"  [label="DDG: display"];
"1000127" -> "1000125"  [label="DDG: display"];
"1000127" -> "1000125"  [label="DDG: AshWindowTreeHostInitParams()"];
"1000101" -> "1000127"  [label="DDG: display"];
"1000130" -> "1000117"  [label="AST: "];
"1000130" -> "1000131"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000133" -> "1000130"  [label="CFG: "];
"1000130" -> "1000231"  [label="DDG: RootWindowController::CreateForSecondaryDisplay(ash_host)"];
"1000130" -> "1000231"  [label="DDG: ash_host"];
"1000125" -> "1000130"  [label="DDG: ash_host"];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000125"  [label="CFG: "];
"1000130" -> "1000131"  [label="CFG: "];
"1000132" -> "1000117"  [label="AST: "];
"1000132" -> "1000134"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="AST: "];
"1000136" -> "1000132"  [label="CFG: "];
"1000132" -> "1000231"  [label="DDG: Shell::GetInstance()->magnification_controller()->SwitchTargetRootWindow(\n         ash_host->AsWindowTreeHost()->window(), false)"];
"1000132" -> "1000231"  [label="DDG: false"];
"1000134" -> "1000132"  [label="AST: "];
"1000134" -> "1000133"  [label="CFG: "];
"1000132" -> "1000134"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000130"  [label="CFG: "];
"1000134" -> "1000133"  [label="CFG: "];
"1000135" -> "1000117"  [label="AST: "];
"1000135" -> "1000136"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000139" -> "1000135"  [label="CFG: "];
"1000135" -> "1000231"  [label="DDG: Shell::GetInstance()\n         ->partial_magnification_controller()\n        ->SwitchTargetRootWindowIfNeeded(\n            ash_host->AsWindowTreeHost()->window())"];
"1000135" -> "1000231"  [label="DDG: ash_host->AsWindowTreeHost()->window()"];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000132"  [label="CFG: "];
"1000135" -> "1000136"  [label="CFG: "];
"1000138" -> "1000117"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000142" -> "1000138"  [label="CFG: "];
"1000104" -> "1000138"  [label="DDG: primary_tree_host_for_replace_"];
"1000138" -> "1000158"  [label="DDG: to_delete"];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000135"  [label="CFG: "];
"1000140" -> "1000139"  [label="CFG: "];
"1000140" -> "1000138"  [label="AST: "];
"1000140" -> "1000139"  [label="CFG: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000143" -> "1000141"  [label="AST: "];
"1000143" -> "1000142"  [label="CFG: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000141" -> "1000117"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000146" -> "1000141"  [label="CFG: "];
"1000141" -> "1000231"  [label="DDG: primary_tree_host_for_replace_"];
"1000141" -> "1000231"  [label="DDG: nullptr"];
"1000142" -> "1000141"  [label="AST: "];
"1000142" -> "1000138"  [label="CFG: "];
"1000143" -> "1000142"  [label="CFG: "];
"1000145" -> "1000117"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000150" -> "1000145"  [label="CFG: "];
"1000145" -> "1000231"  [label="DDG: old_tray"];
"1000145" -> "1000231"  [label="DDG: GetRootWindowController(to_delete->AsWindowTreeHost()->window())\n            ->GetSystemTray()"];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000141"  [label="CFG: "];
"1000147" -> "1000146"  [label="CFG: "];
"1000147" -> "1000145"  [label="AST: "];
"1000147" -> "1000146"  [label="CFG: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000149" -> "1000117"  [label="AST: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000153" -> "1000149"  [label="CFG: "];
"1000149" -> "1000231"  [label="DDG: ash::Shell::GetInstance()->GetPrimarySystemTray()"];
"1000149" -> "1000231"  [label="DDG: new_tray"];
"1000150" -> "1000149"  [label="AST: "];
"1000150" -> "1000145"  [label="CFG: "];
"1000151" -> "1000150"  [label="CFG: "];
"1000117" -> "1000103"  [label="AST: "];
"1000118" -> "1000117"  [label="AST: "];
"1000121" -> "1000117"  [label="AST: "];
"1000124" -> "1000117"  [label="AST: "];
"1000125" -> "1000117"  [label="AST: "];
"1000130" -> "1000117"  [label="AST: "];
"1000132" -> "1000117"  [label="AST: "];
"1000135" -> "1000117"  [label="AST: "];
"1000137" -> "1000117"  [label="AST: "];
"1000138" -> "1000117"  [label="AST: "];
"1000141" -> "1000117"  [label="AST: "];
"1000144" -> "1000117"  [label="AST: "];
"1000145" -> "1000117"  [label="AST: "];
"1000148" -> "1000117"  [label="AST: "];
"1000149" -> "1000117"  [label="AST: "];
"1000152" -> "1000117"  [label="AST: "];
"1000158" -> "1000117"  [label="AST: "];
"1000160" -> "1000117"  [label="AST: "];
"1000167" -> "1000117"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000151" -> "1000150"  [label="CFG: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000152" -> "1000117"  [label="AST: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000155" -> "1000154"  [label="AST: "];
"1000157" -> "1000154"  [label="AST: "];
"1000153" -> "1000152"  [label="AST: "];
"1000153" -> "1000149"  [label="CFG: "];
"1000156" -> "1000153"  [label="CFG: "];
"1000159" -> "1000153"  [label="CFG: "];
"1000153" -> "1000231"  [label="DDG: old_tray->GetWidget()->IsVisible()"];
"1000103" -> "1000102"  [label="AST: "];
"1000104" -> "1000103"  [label="AST: "];
"1000117" -> "1000103"  [label="AST: "];
"1000171" -> "1000103"  [label="AST: "];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000105"  [label="CFG: "];
"1000104" -> "1000106"  [label="CFG: "];
"1000105" -> "1000104"  [label="AST: "];
"1000106" -> "1000104"  [label="AST: "];
"1000119" -> "1000104"  [label="CFG: "];
"1000173" -> "1000104"  [label="CFG: "];
"1000104" -> "1000231"  [label="DDG: primary_tree_host_for_replace_ &&\n      (GetRootWindowSettings(GetWindow(primary_tree_host_for_replace_))\n               ->display_id == DisplayManager::kUnifiedDisplayId ||\n       display.id() == DisplayManager::kUnifiedDisplayId)"];
"1000104" -> "1000231"  [label="DDG: primary_tree_host_for_replace_"];
"1000104" -> "1000231"  [label="DDG: GetRootWindowSettings(GetWindow(primary_tree_host_for_replace_))\n               ->display_id == DisplayManager::kUnifiedDisplayId ||\n       display.id() == DisplayManager::kUnifiedDisplayId"];
"1000110" -> "1000104"  [label="DDG: primary_tree_host_for_replace_"];
"1000106" -> "1000104"  [label="DDG: GetRootWindowSettings(GetWindow(primary_tree_host_for_replace_))\n               ->display_id == DisplayManager::kUnifiedDisplayId"];
"1000106" -> "1000104"  [label="DDG: display.id() == DisplayManager::kUnifiedDisplayId"];
"1000104" -> "1000138"  [label="DDG: primary_tree_host_for_replace_"];
"1000104" -> "1000180"  [label="DDG: primary_tree_host_for_replace_"];
"1000104" -> "1000188"  [label="DDG: primary_tree_host_for_replace_"];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000100"  [label="CFG: "];
"1000111" -> "1000105"  [label="CFG: "];
"1000104" -> "1000105"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000153"  [label="CFG: "];
"1000155" -> "1000156"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000155" -> "1000156"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000157" -> "1000155"  [label="CFG: "];
"1000155" -> "1000231"  [label="DDG: new_tray->SetVisible(true)"];
"1000155" -> "1000231"  [label="DDG: true"];
"1000157" -> "1000154"  [label="AST: "];
"1000157" -> "1000155"  [label="CFG: "];
"1000159" -> "1000157"  [label="CFG: "];
"1000157" -> "1000231"  [label="DDG: new_tray->GetWidget()->Show()"];
"1000159" -> "1000158"  [label="AST: "];
"1000159" -> "1000157"  [label="CFG: "];
"1000159" -> "1000153"  [label="CFG: "];
"1000158" -> "1000159"  [label="CFG: "];
"1000158" -> "1000117"  [label="AST: "];
"1000158" -> "1000159"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000164" -> "1000158"  [label="CFG: "];
"1000158" -> "1000231"  [label="DDG: DeleteHost(to_delete)"];
"1000138" -> "1000158"  [label="DDG: to_delete"];
"1000158" -> "1000162"  [label="DDG: to_delete"];
"1000160" -> "1000117"  [label="AST: "];
"1000161" -> "1000160"  [label="AST: "];
"1000161" -> "1000160"  [label="AST: "];
"1000161" -> "1000162"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000231" -> "1000161"  [label="CFG: "];
"1000161" -> "1000231"  [label="DDG: <RET>"];
"1000162" -> "1000161"  [label="DDG: pair.second == to_delete"];
"1000162" -> "1000161"  [label="AST: "];
"1000162" -> "1000166"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000166" -> "1000162"  [label="AST: "];
"1000161" -> "1000162"  [label="CFG: "];
"1000162" -> "1000231"  [label="DDG: to_delete"];
"1000162" -> "1000231"  [label="DDG: pair.second"];
"1000162" -> "1000231"  [label="DDG: pair.second == to_delete"];
"1000162" -> "1000161"  [label="DDG: pair.second == to_delete"];
"1000158" -> "1000162"  [label="DDG: to_delete"];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000165"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000165" -> "1000163"  [label="AST: "];
"1000166" -> "1000163"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000164" -> "1000158"  [label="CFG: "];
"1000165" -> "1000164"  [label="CFG: "];
"1000165" -> "1000163"  [label="AST: "];
"1000165" -> "1000164"  [label="CFG: "];
"1000163" -> "1000165"  [label="CFG: "];
"1000166" -> "1000162"  [label="AST: "];
"1000166" -> "1000163"  [label="CFG: "];
"1000162" -> "1000166"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000111"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000109" -> "1000110"  [label="CFG: "];
"1000110" -> "1000104"  [label="DDG: primary_tree_host_for_replace_"];
"1000110" -> "1000109"  [label="DDG: primary_tree_host_for_replace_"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000105"  [label="CFG: "];
"1000110" -> "1000111"  [label="CFG: "];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000106" -> "1000114"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000114" -> "1000106"  [label="AST: "];
"1000104" -> "1000106"  [label="CFG: "];
"1000106" -> "1000231"  [label="DDG: GetRootWindowSettings(GetWindow(primary_tree_host_for_replace_))\n               ->display_id == DisplayManager::kUnifiedDisplayId"];
"1000106" -> "1000231"  [label="DDG: display.id() == DisplayManager::kUnifiedDisplayId"];
"1000106" -> "1000104"  [label="DDG: GetRootWindowSettings(GetWindow(primary_tree_host_for_replace_))\n               ->display_id == DisplayManager::kUnifiedDisplayId"];
"1000106" -> "1000104"  [label="DDG: display.id() == DisplayManager::kUnifiedDisplayId"];
"1000107" -> "1000106"  [label="DDG: GetRootWindowSettings(GetWindow(primary_tree_host_for_replace_))\n               ->display_id"];
"1000107" -> "1000106"  [label="DDG: DisplayManager::kUnifiedDisplayId"];
"1000114" -> "1000106"  [label="DDG: display.id()"];
"1000114" -> "1000106"  [label="DDG: DisplayManager::kUnifiedDisplayId"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000113"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000113" -> "1000107"  [label="AST: "];
"1000115" -> "1000107"  [label="CFG: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000107" -> "1000231"  [label="DDG: GetRootWindowSettings(GetWindow(primary_tree_host_for_replace_))\n               ->display_id"];
"1000107" -> "1000231"  [label="DDG: DisplayManager::kUnifiedDisplayId"];
"1000107" -> "1000106"  [label="DDG: GetRootWindowSettings(GetWindow(primary_tree_host_for_replace_))\n               ->display_id"];
"1000107" -> "1000106"  [label="DDG: DisplayManager::kUnifiedDisplayId"];
"1000107" -> "1000114"  [label="DDG: DisplayManager::kUnifiedDisplayId"];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000112"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000112" -> "1000108"  [label="AST: "];
"1000113" -> "1000108"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000110"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000112" -> "1000109"  [label="CFG: "];
"1000109" -> "1000231"  [label="DDG: GetWindow(primary_tree_host_for_replace_)"];
"1000110" -> "1000109"  [label="DDG: primary_tree_host_for_replace_"];
"1000168" -> "1000167"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000167" -> "1000168"  [label="CFG: "];
"1000168" -> "1000231"  [label="DDG: iter"];
"1000168" -> "1000231"  [label="DDG: window_tree_hosts_.end()"];
"1000168" -> "1000167"  [label="DDG: iter"];
"1000168" -> "1000167"  [label="DDG: window_tree_hosts_.end()"];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000169"  [label="CFG: "];
"1000170" -> "1000168"  [label="AST: "];
"1000170" -> "1000169"  [label="CFG: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000167" -> "1000117"  [label="AST: "];
"1000167" -> "1000168"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000231" -> "1000167"  [label="CFG: "];
"1000167" -> "1000231"  [label="DDG: iter == window_tree_hosts_.end()"];
"1000167" -> "1000231"  [label="DDG: DCHECK(iter == window_tree_hosts_.end())"];
"1000168" -> "1000167"  [label="DDG: iter"];
"1000168" -> "1000167"  [label="DDG: window_tree_hosts_.end()"];
"1000171" -> "1000103"  [label="AST: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000172"  [label="AST: "];
"1000173" -> "1000104"  [label="CFG: "];
"1000176" -> "1000173"  [label="CFG: "];
"1000215" -> "1000173"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000172"  [label="AST: "];
"1000174" -> "1000172"  [label="AST: "];
"1000211" -> "1000172"  [label="AST: "];
"1000176" -> "1000175"  [label="AST: "];
"1000176" -> "1000173"  [label="CFG: "];
"1000175" -> "1000176"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000175" -> "1000176"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000178" -> "1000175"  [label="CFG: "];
"1000175" -> "1000231"  [label="DDG: window_tree_hosts_.empty()"];
"1000175" -> "1000231"  [label="DDG: DCHECK(window_tree_hosts_.empty())"];
"1000179" -> "1000177"  [label="AST: "];
"1000179" -> "1000178"  [label="CFG: "];
"1000177" -> "1000179"  [label="CFG: "];
"1000177" -> "1000174"  [label="AST: "];
"1000177" -> "1000179"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000179" -> "1000177"  [label="AST: "];
"1000182" -> "1000177"  [label="CFG: "];
"1000177" -> "1000231"  [label="DDG: primary_display_id"];
"1000178" -> "1000177"  [label="AST: "];
"1000178" -> "1000175"  [label="CFG: "];
"1000179" -> "1000178"  [label="CFG: "];
"1000183" -> "1000181"  [label="AST: "];
"1000183" -> "1000182"  [label="CFG: "];
"1000181" -> "1000183"  [label="CFG: "];
"1000184" -> "1000180"  [label="AST: "];
"1000184" -> "1000181"  [label="CFG: "];
"1000180" -> "1000184"  [label="CFG: "];
"1000180" -> "1000174"  [label="AST: "];
"1000180" -> "1000184"  [label="CFG: "];
"1000181" -> "1000180"  [label="AST: "];
"1000184" -> "1000180"  [label="AST: "];
"1000189" -> "1000180"  [label="CFG: "];
"1000104" -> "1000180"  [label="DDG: primary_tree_host_for_replace_"];
"1000180" -> "1000201"  [label="DDG: window_tree_hosts_[display.id()]"];
"1000181" -> "1000180"  [label="AST: "];
"1000181" -> "1000183"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000183" -> "1000181"  [label="AST: "];
"1000184" -> "1000181"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000182" -> "1000177"  [label="CFG: "];
"1000183" -> "1000182"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000188" -> "1000189"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000187" -> "1000188"  [label="CFG: "];
"1000188" -> "1000187"  [label="DDG: primary_tree_host_for_replace_"];
"1000104" -> "1000188"  [label="DDG: primary_tree_host_for_replace_"];
"1000189" -> "1000188"  [label="AST: "];
"1000189" -> "1000180"  [label="CFG: "];
"1000188" -> "1000189"  [label="CFG: "];
"1000185" -> "1000174"  [label="AST: "];
"1000185" -> "1000191"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000191" -> "1000185"  [label="AST: "];
"1000193" -> "1000185"  [label="CFG: "];
"1000185" -> "1000231"  [label="DDG: GetRootWindowSettings(GetWindow(primary_tree_host_for_replace_))\n        ->display_id"];
"1000186" -> "1000185"  [label="AST: "];
"1000186" -> "1000190"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000190" -> "1000186"  [label="AST: "];
"1000191" -> "1000186"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000187" -> "1000188"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000190" -> "1000187"  [label="CFG: "];
"1000187" -> "1000231"  [label="DDG: GetWindow(primary_tree_host_for_replace_)"];
"1000188" -> "1000187"  [label="DDG: primary_tree_host_for_replace_"];
"1000112" -> "1000108"  [label="AST: "];
"1000112" -> "1000109"  [label="CFG: "];
"1000108" -> "1000112"  [label="CFG: "];
"1000113" -> "1000107"  [label="AST: "];
"1000113" -> "1000108"  [label="CFG: "];
"1000107" -> "1000113"  [label="CFG: "];
"1000190" -> "1000186"  [label="AST: "];
"1000190" -> "1000187"  [label="CFG: "];
"1000186" -> "1000190"  [label="CFG: "];
"1000191" -> "1000185"  [label="AST: "];
"1000191" -> "1000186"  [label="CFG: "];
"1000185" -> "1000191"  [label="CFG: "];
"1000194" -> "1000192"  [label="AST: "];
"1000194" -> "1000193"  [label="CFG: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000192" -> "1000174"  [label="AST: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000194" -> "1000192"  [label="AST: "];
"1000197" -> "1000192"  [label="CFG: "];
"1000192" -> "1000231"  [label="DDG: nullptr"];
"1000192" -> "1000231"  [label="DDG: primary_tree_host_for_replace_"];
"1000193" -> "1000192"  [label="AST: "];
"1000193" -> "1000185"  [label="CFG: "];
"1000194" -> "1000193"  [label="CFG: "];
"1000196" -> "1000174"  [label="AST: "];
"1000196" -> "1000198"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000198" -> "1000196"  [label="AST: "];
"1000202" -> "1000196"  [label="CFG: "];
"1000196" -> "1000231"  [label="DDG: display_info"];
"1000196" -> "1000231"  [label="DDG: GetDisplayManager()->GetDisplayInfo(display.id())"];
"1000198" -> "1000196"  [label="DDG: display.id()"];
"1000197" -> "1000196"  [label="AST: "];
"1000197" -> "1000192"  [label="CFG: "];
"1000199" -> "1000197"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000199" -> "1000197"  [label="CFG: "];
"1000198" -> "1000199"  [label="CFG: "];
"1000198" -> "1000196"  [label="AST: "];
"1000198" -> "1000199"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000196" -> "1000198"  [label="CFG: "];
"1000198" -> "1000196"  [label="DDG: display.id()"];
"1000201" -> "1000174"  [label="AST: "];
"1000201" -> "1000203"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000203" -> "1000201"  [label="AST: "];
"1000207" -> "1000201"  [label="CFG: "];
"1000201" -> "1000231"  [label="DDG: window_tree_hosts_[display.id()]"];
"1000180" -> "1000201"  [label="DDG: window_tree_hosts_[display.id()]"];
"1000201" -> "1000208"  [label="DDG: ash_host"];
"1000202" -> "1000201"  [label="AST: "];
"1000202" -> "1000196"  [label="CFG: "];
"1000204" -> "1000202"  [label="CFG: "];
"1000203" -> "1000201"  [label="AST: "];
"1000203" -> "1000205"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000203"  [label="AST: "];
"1000201" -> "1000203"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000204" -> "1000202"  [label="CFG: "];
"1000205" -> "1000204"  [label="CFG: "];
"1000174" -> "1000172"  [label="AST: "];
"1000175" -> "1000174"  [label="AST: "];
"1000177" -> "1000174"  [label="AST: "];
"1000180" -> "1000174"  [label="AST: "];
"1000185" -> "1000174"  [label="AST: "];
"1000192" -> "1000174"  [label="AST: "];
"1000195" -> "1000174"  [label="AST: "];
"1000196" -> "1000174"  [label="AST: "];
"1000200" -> "1000174"  [label="AST: "];
"1000201" -> "1000174"  [label="AST: "];
"1000206" -> "1000174"  [label="AST: "];
"1000208" -> "1000174"  [label="AST: "];
"1000205" -> "1000203"  [label="AST: "];
"1000205" -> "1000204"  [label="CFG: "];
"1000203" -> "1000205"  [label="CFG: "];
"1000206" -> "1000174"  [label="AST: "];
"1000206" -> "1000207"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000209" -> "1000206"  [label="CFG: "];
"1000206" -> "1000231"  [label="DDG: ash_host->AsWindowTreeHost()->SetBounds(display_info.bounds_in_native())"];
"1000206" -> "1000231"  [label="DDG: display_info.bounds_in_native()"];
"1000207" -> "1000206"  [label="AST: "];
"1000207" -> "1000201"  [label="CFG: "];
"1000206" -> "1000207"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000209" -> "1000206"  [label="CFG: "];
"1000210" -> "1000209"  [label="CFG: "];
"1000208" -> "1000174"  [label="AST: "];
"1000208" -> "1000210"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000210" -> "1000208"  [label="AST: "];
"1000231" -> "1000208"  [label="CFG: "];
"1000208" -> "1000231"  [label="DDG: ash_host"];
"1000208" -> "1000231"  [label="DDG: display"];
"1000208" -> "1000231"  [label="DDG: SetDisplayPropertiesOnHost(ash_host, display)"];
"1000201" -> "1000208"  [label="DDG: ash_host"];
"1000101" -> "1000208"  [label="DDG: display"];
"1000210" -> "1000208"  [label="AST: "];
"1000210" -> "1000209"  [label="CFG: "];
"1000208" -> "1000210"  [label="CFG: "];
"1000211" -> "1000172"  [label="AST: "];
"1000212" -> "1000211"  [label="AST: "];
"1000216" -> "1000214"  [label="AST: "];
"1000216" -> "1000215"  [label="CFG: "];
"1000214" -> "1000216"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000214" -> "1000213"  [label="AST: "];
"1000217" -> "1000213"  [label="AST: "];
"1000214" -> "1000213"  [label="AST: "];
"1000214" -> "1000216"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000216" -> "1000214"  [label="AST: "];
"1000218" -> "1000214"  [label="CFG: "];
"1000222" -> "1000214"  [label="CFG: "];
"1000214" -> "1000231"  [label="DDG: display::Display::kInvalidDisplayID"];
"1000214" -> "1000231"  [label="DDG: primary_display_id == display::Display::kInvalidDisplayID"];
"1000214" -> "1000231"  [label="DDG: primary_display_id"];
"1000215" -> "1000214"  [label="AST: "];
"1000215" -> "1000173"  [label="CFG: "];
"1000216" -> "1000215"  [label="CFG: "];
"1000219" -> "1000217"  [label="AST: "];
"1000219" -> "1000218"  [label="CFG: "];
"1000217" -> "1000219"  [label="CFG: "];
"1000217" -> "1000213"  [label="AST: "];
"1000217" -> "1000219"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000219" -> "1000217"  [label="AST: "];
"1000222" -> "1000217"  [label="CFG: "];
"1000217" -> "1000231"  [label="DDG: display.id()"];
"1000217" -> "1000231"  [label="DDG: primary_display_id"];
"1000218" -> "1000217"  [label="AST: "];
"1000218" -> "1000214"  [label="CFG: "];
"1000219" -> "1000218"  [label="CFG: "];
"1000116" -> "1000114"  [label="AST: "];
"1000116" -> "1000115"  [label="CFG: "];
"1000114" -> "1000116"  [label="CFG: "];
"1000114" -> "1000106"  [label="AST: "];
"1000114" -> "1000116"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000106" -> "1000114"  [label="CFG: "];
"1000114" -> "1000231"  [label="DDG: display.id()"];
"1000114" -> "1000231"  [label="DDG: DisplayManager::kUnifiedDisplayId"];
"1000114" -> "1000106"  [label="DDG: display.id()"];
"1000114" -> "1000106"  [label="DDG: DisplayManager::kUnifiedDisplayId"];
"1000107" -> "1000114"  [label="DDG: DisplayManager::kUnifiedDisplayId"];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000107"  [label="CFG: "];
"1000116" -> "1000115"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000221" -> "1000222"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000220" -> "1000221"  [label="CFG: "];
"1000221" -> "1000231"  [label="DDG: window_tree_hosts_.empty()"];
"1000221" -> "1000220"  [label="DDG: window_tree_hosts_.empty()"];
"1000222" -> "1000221"  [label="AST: "];
"1000222" -> "1000217"  [label="CFG: "];
"1000222" -> "1000214"  [label="CFG: "];
"1000221" -> "1000222"  [label="CFG: "];
"1000220" -> "1000212"  [label="AST: "];
"1000220" -> "1000221"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000225" -> "1000220"  [label="CFG: "];
"1000220" -> "1000231"  [label="DDG: !window_tree_hosts_.empty()"];
"1000220" -> "1000231"  [label="DDG: DCHECK(!window_tree_hosts_.empty())"];
"1000221" -> "1000220"  [label="DDG: window_tree_hosts_.empty()"];
"1000224" -> "1000212"  [label="AST: "];
"1000224" -> "1000226"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000230" -> "1000224"  [label="CFG: "];
"1000224" -> "1000231"  [label="DDG: AddWindowTreeHostForDisplay(display, AshWindowTreeHostInitParams())"];
"1000226" -> "1000224"  [label="DDG: display"];
"1000226" -> "1000224"  [label="DDG: AshWindowTreeHostInitParams()"];
"1000224" -> "1000229"  [label="DDG: ash_host"];
"1000225" -> "1000224"  [label="AST: "];
"1000225" -> "1000220"  [label="CFG: "];
"1000227" -> "1000225"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000213" -> "1000212"  [label="AST: "];
"1000220" -> "1000212"  [label="AST: "];
"1000223" -> "1000212"  [label="AST: "];
"1000224" -> "1000212"  [label="AST: "];
"1000229" -> "1000212"  [label="AST: "];
"1000227" -> "1000226"  [label="AST: "];
"1000227" -> "1000225"  [label="CFG: "];
"1000228" -> "1000227"  [label="CFG: "];
"1000228" -> "1000226"  [label="AST: "];
"1000228" -> "1000227"  [label="CFG: "];
"1000226" -> "1000228"  [label="CFG: "];
"1000226" -> "1000224"  [label="AST: "];
"1000226" -> "1000228"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000228" -> "1000226"  [label="AST: "];
"1000224" -> "1000226"  [label="CFG: "];
"1000226" -> "1000231"  [label="DDG: display"];
"1000226" -> "1000231"  [label="DDG: AshWindowTreeHostInitParams()"];
"1000226" -> "1000224"  [label="DDG: display"];
"1000226" -> "1000224"  [label="DDG: AshWindowTreeHostInitParams()"];
"1000101" -> "1000226"  [label="DDG: display"];
"1000229" -> "1000212"  [label="AST: "];
"1000229" -> "1000230"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000231" -> "1000229"  [label="CFG: "];
"1000229" -> "1000231"  [label="DDG: RootWindowController::CreateForSecondaryDisplay(ash_host)"];
"1000229" -> "1000231"  [label="DDG: ash_host"];
"1000224" -> "1000229"  [label="DDG: ash_host"];
"1000230" -> "1000229"  [label="AST: "];
"1000230" -> "1000224"  [label="CFG: "];
"1000229" -> "1000230"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000104"  [label="CFG: "];
"1000120" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="AST: "];
"1000122" -> "1000118"  [label="CFG: "];
"1000118" -> "1000231"  [label="DDG: DCHECK_EQ(display::Display::kInvalidDisplayID, primary_display_id)"];
"1000118" -> "1000231"  [label="DDG: display::Display::kInvalidDisplayID"];
"1000120" -> "1000118"  [label="AST: "];
"1000120" -> "1000119"  [label="CFG: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000122"  [label="CFG: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000121" -> "1000117"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000126" -> "1000121"  [label="CFG: "];
"1000121" -> "1000231"  [label="DDG: display.id()"];
"1000121" -> "1000231"  [label="DDG: primary_display_id"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000118"  [label="CFG: "];
"1000123" -> "1000122"  [label="CFG: "];
}
