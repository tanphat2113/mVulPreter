digraph "0_Chrome_fec26ff33bf372476a70326f3669a35f34a9d474_14" {
"1000212" [label="(MethodReturn,bool)"];
"1000126" [label="(Call,GetRedirectEndpointsForPreconnect(\n      url_origin, *host_redirect_data_, prediction))"];
"1000124" [label="(Call,has_any_prediction = GetRedirectEndpointsForPreconnect(\n      url_origin, *host_redirect_data_, prediction))"];
"1000125" [label="(Identifier,has_any_prediction)"];
"1000128" [label="(Call,*host_redirect_data_)"];
"1000129" [label="(Identifier,host_redirect_data_)"];
"1000130" [label="(Identifier,prediction)"];
"1000127" [label="(Identifier,url_origin)"];
"1000131" [label="(ControlStructure,if (!GetRedirectOrigin(url_origin, *host_redirect_data_, &redirect_origin)))"];
"1000134" [label="(Identifier,url_origin)"];
"1000135" [label="(Call,*host_redirect_data_)"];
"1000136" [label="(Identifier,host_redirect_data_)"];
"1000137" [label="(Call,&redirect_origin)"];
"1000132" [label="(Call,!GetRedirectOrigin(url_origin, *host_redirect_data_, &redirect_origin))"];
"1000138" [label="(Identifier,redirect_origin)"];
"1000133" [label="(Call,GetRedirectOrigin(url_origin, *host_redirect_data_, &redirect_origin))"];
"1000139" [label="(Block,)"];
"1000141" [label="(Identifier,has_any_prediction)"];
"1000140" [label="(Return,return has_any_prediction;)"];
"1000143" [label="(ControlStructure,if (!origin_data_->TryGetData(redirect_origin.host(), &data)))"];
"1000146" [label="(Call,redirect_origin.host())"];
"1000147" [label="(Call,&data)"];
"1000148" [label="(Identifier,data)"];
"1000144" [label="(Call,!origin_data_->TryGetData(redirect_origin.host(), &data))"];
"1000149" [label="(Block,)"];
"1000145" [label="(Call,origin_data_->TryGetData(redirect_origin.host(), &data))"];
"1000151" [label="(Identifier,has_any_prediction)"];
"1000150" [label="(Return,return has_any_prediction;)"];
"1000101" [label="(MethodParameterIn,const GURL& url)"];
"1000335" [label="(MethodParameterOut,const GURL& url)"];
"1000154" [label="(Block,)"];
"1000152" [label="(ControlStructure,if (prediction))"];
"1000153" [label="(Identifier,prediction)"];
"1000158" [label="(FieldIdentifier,host)"];
"1000159" [label="(Call,redirect_origin.host())"];
"1000155" [label="(Call,prediction->host = redirect_origin.host())"];
"1000156" [label="(Call,prediction->host)"];
"1000157" [label="(Identifier,prediction)"];
"1000163" [label="(FieldIdentifier,is_redirected)"];
"1000164" [label="(Call,redirect_origin != url_origin)"];
"1000165" [label="(Identifier,redirect_origin)"];
"1000160" [label="(Call,prediction->is_redirected = (redirect_origin != url_origin))"];
"1000161" [label="(Call,prediction->is_redirected)"];
"1000162" [label="(Identifier,prediction)"];
"1000166" [label="(Identifier,url_origin)"];
"1000102" [label="(MethodParameterIn,PreconnectPrediction* prediction)"];
"1000336" [label="(MethodParameterOut,PreconnectPrediction* prediction)"];
"1000103" [label="(Block,)"];
"1000168" [label="(JumpTarget,origin :)"];
"1000171" [label="(Call,confidence = static_cast<float>(origin.number_of_hits()) /\n                       (origin.number_of_hits() + origin.number_of_misses()))"];
"1000172" [label="(Identifier,confidence)"];
"1000173" [label="(Call,static_cast<float>(origin.number_of_hits()) /\n                       (origin.number_of_hits() + origin.number_of_misses()))"];
"1000174" [label="(Call,static_cast<float>(origin.number_of_hits()))"];
"1000169" [label="(Block,)"];
"1000176" [label="(Call,origin.number_of_hits())"];
"1000177" [label="(Call,origin.number_of_hits() + origin.number_of_misses())"];
"1000178" [label="(Call,origin.number_of_hits())"];
"1000179" [label="(Call,origin.number_of_misses())"];
"1000183" [label="(Identifier,kMinOriginConfidenceToTriggerPreresolve)"];
"1000180" [label="(ControlStructure,if (confidence < kMinOriginConfidenceToTriggerPreresolve))"];
"1000181" [label="(Call,confidence < kMinOriginConfidenceToTriggerPreresolve)"];
"1000182" [label="(Identifier,confidence)"];
"1000184" [label="(ControlStructure,continue;)"];
"1000187" [label="(Identifier,true)"];
"1000185" [label="(Call,has_any_prediction = true)"];
"1000186" [label="(Identifier,has_any_prediction)"];
"1000190" [label="(Block,)"];
"1000188" [label="(ControlStructure,if (prediction))"];
"1000189" [label="(Identifier,prediction)"];
"1000192" [label="(Call,confidence > kMinOriginConfidenceToTriggerPreconnect)"];
"1000193" [label="(Identifier,confidence)"];
"1000194" [label="(Identifier,kMinOriginConfidenceToTriggerPreconnect)"];
"1000195" [label="(Block,)"];
"1000191" [label="(ControlStructure,if (confidence > kMinOriginConfidenceToTriggerPreconnect))"];
"1000196" [label="(Call,prediction->requests.emplace_back(\n            url::Origin::Create(GURL(origin.origin())), 1,\n            network_isolation_key))"];
"1000107" [label="(Identifier,prediction)"];
"1000104" [label="(Call,DCHECK(!prediction || prediction->requests.empty()))"];
"1000108" [label="(Call,prediction->requests.empty())"];
"1000105" [label="(Call,!prediction || prediction->requests.empty())"];
"1000106" [label="(Call,!prediction)"];
"1000197" [label="(Call,url::Origin::Create(GURL(origin.origin())))"];
"1000198" [label="(Call,GURL(origin.origin()))"];
"1000199" [label="(Call,origin.origin())"];
"1000200" [label="(Literal,1)"];
"1000201" [label="(Identifier,network_isolation_key)"];
"1000203" [label="(Block,)"];
"1000202" [label="(ControlStructure,else)"];
"1000204" [label="(Call,prediction->requests.emplace_back(\n            url::Origin::Create(GURL(origin.origin())), 0,\n            network_isolation_key))"];
"1000205" [label="(Call,url::Origin::Create(GURL(origin.origin())))"];
"1000206" [label="(Call,GURL(origin.origin()))"];
"1000207" [label="(Call,origin.origin())"];
"1000208" [label="(Literal,0)"];
"1000209" [label="(Identifier,network_isolation_key)"];
"1000109" [label="(Call,DCHECK_CURRENTLY_ON(BrowserThread::UI))"];
"1000110" [label="(Identifier,BrowserThread::UI)"];
"1000210" [label="(Return,return has_any_prediction;)"];
"1000211" [label="(Identifier,has_any_prediction)"];
"1000111" [label="(ControlStructure,if (initialization_state_ != INITIALIZED))"];
"1000114" [label="(Identifier,INITIALIZED)"];
"1000112" [label="(Call,initialization_state_ != INITIALIZED)"];
"1000113" [label="(Identifier,initialization_state_)"];
"1000116" [label="(Identifier,false)"];
"1000115" [label="(Return,return false;)"];
"1000118" [label="(Call,url_origin = url::Origin::Create(url))"];
"1000119" [label="(Identifier,url_origin)"];
"1000120" [label="(Call,url::Origin::Create(url))"];
"1000121" [label="(Identifier,url)"];
"1000212" -> "1000100"  [label="AST: "];
"1000212" -> "1000115"  [label="CFG: "];
"1000212" -> "1000140"  [label="CFG: "];
"1000212" -> "1000150"  [label="CFG: "];
"1000212" -> "1000210"  [label="CFG: "];
"1000140" -> "1000212"  [label="DDG: <RET>"];
"1000210" -> "1000212"  [label="DDG: <RET>"];
"1000115" -> "1000212"  [label="DDG: <RET>"];
"1000150" -> "1000212"  [label="DDG: <RET>"];
"1000185" -> "1000212"  [label="DDG: true"];
"1000185" -> "1000212"  [label="DDG: has_any_prediction"];
"1000106" -> "1000212"  [label="DDG: prediction"];
"1000104" -> "1000212"  [label="DDG: !prediction || prediction->requests.empty()"];
"1000104" -> "1000212"  [label="DDG: DCHECK(!prediction || prediction->requests.empty())"];
"1000164" -> "1000212"  [label="DDG: url_origin"];
"1000164" -> "1000212"  [label="DDG: redirect_origin"];
"1000181" -> "1000212"  [label="DDG: confidence < kMinOriginConfidenceToTriggerPreresolve"];
"1000181" -> "1000212"  [label="DDG: confidence"];
"1000181" -> "1000212"  [label="DDG: kMinOriginConfidenceToTriggerPreresolve"];
"1000120" -> "1000212"  [label="DDG: url"];
"1000206" -> "1000212"  [label="DDG: origin.origin()"];
"1000173" -> "1000212"  [label="DDG: origin.number_of_hits() + origin.number_of_misses()"];
"1000173" -> "1000212"  [label="DDG: static_cast<float>(origin.number_of_hits())"];
"1000155" -> "1000212"  [label="DDG: prediction->host"];
"1000155" -> "1000212"  [label="DDG: redirect_origin.host()"];
"1000204" -> "1000212"  [label="DDG: url::Origin::Create(GURL(origin.origin()))"];
"1000204" -> "1000212"  [label="DDG: network_isolation_key"];
"1000204" -> "1000212"  [label="DDG: prediction->requests.emplace_back(\n            url::Origin::Create(GURL(origin.origin())), 0,\n            network_isolation_key)"];
"1000177" -> "1000212"  [label="DDG: origin.number_of_hits()"];
"1000177" -> "1000212"  [label="DDG: origin.number_of_misses()"];
"1000126" -> "1000212"  [label="DDG: prediction"];
"1000160" -> "1000212"  [label="DDG: redirect_origin != url_origin"];
"1000160" -> "1000212"  [label="DDG: prediction->is_redirected"];
"1000124" -> "1000212"  [label="DDG: GetRedirectEndpointsForPreconnect(\n      url_origin, *host_redirect_data_, prediction)"];
"1000124" -> "1000212"  [label="DDG: has_any_prediction"];
"1000192" -> "1000212"  [label="DDG: kMinOriginConfidenceToTriggerPreconnect"];
"1000192" -> "1000212"  [label="DDG: confidence"];
"1000192" -> "1000212"  [label="DDG: confidence > kMinOriginConfidenceToTriggerPreconnect"];
"1000196" -> "1000212"  [label="DDG: network_isolation_key"];
"1000196" -> "1000212"  [label="DDG: url::Origin::Create(GURL(origin.origin()))"];
"1000196" -> "1000212"  [label="DDG: prediction->requests.emplace_back(\n            url::Origin::Create(GURL(origin.origin())), 1,\n            network_isolation_key)"];
"1000105" -> "1000212"  [label="DDG: prediction->requests.empty()"];
"1000105" -> "1000212"  [label="DDG: !prediction"];
"1000112" -> "1000212"  [label="DDG: INITIALIZED"];
"1000112" -> "1000212"  [label="DDG: initialization_state_ != INITIALIZED"];
"1000112" -> "1000212"  [label="DDG: initialization_state_"];
"1000205" -> "1000212"  [label="DDG: GURL(origin.origin())"];
"1000132" -> "1000212"  [label="DDG: !GetRedirectOrigin(url_origin, *host_redirect_data_, &redirect_origin)"];
"1000132" -> "1000212"  [label="DDG: GetRedirectOrigin(url_origin, *host_redirect_data_, &redirect_origin)"];
"1000144" -> "1000212"  [label="DDG: !origin_data_->TryGetData(redirect_origin.host(), &data)"];
"1000144" -> "1000212"  [label="DDG: origin_data_->TryGetData(redirect_origin.host(), &data)"];
"1000133" -> "1000212"  [label="DDG: url_origin"];
"1000133" -> "1000212"  [label="DDG: *host_redirect_data_"];
"1000133" -> "1000212"  [label="DDG: &redirect_origin"];
"1000102" -> "1000212"  [label="DDG: prediction"];
"1000198" -> "1000212"  [label="DDG: origin.origin()"];
"1000101" -> "1000212"  [label="DDG: url"];
"1000109" -> "1000212"  [label="DDG: BrowserThread::UI"];
"1000109" -> "1000212"  [label="DDG: DCHECK_CURRENTLY_ON(BrowserThread::UI)"];
"1000118" -> "1000212"  [label="DDG: url::Origin::Create(url)"];
"1000171" -> "1000212"  [label="DDG: static_cast<float>(origin.number_of_hits()) /\n                       (origin.number_of_hits() + origin.number_of_misses())"];
"1000145" -> "1000212"  [label="DDG: redirect_origin.host()"];
"1000145" -> "1000212"  [label="DDG: &data"];
"1000197" -> "1000212"  [label="DDG: GURL(origin.origin())"];
"1000126" -> "1000124"  [label="AST: "];
"1000126" -> "1000130"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000128" -> "1000126"  [label="AST: "];
"1000130" -> "1000126"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000126" -> "1000212"  [label="DDG: prediction"];
"1000126" -> "1000124"  [label="DDG: url_origin"];
"1000126" -> "1000124"  [label="DDG: *host_redirect_data_"];
"1000126" -> "1000124"  [label="DDG: prediction"];
"1000118" -> "1000126"  [label="DDG: url_origin"];
"1000106" -> "1000126"  [label="DDG: prediction"];
"1000102" -> "1000126"  [label="DDG: prediction"];
"1000126" -> "1000133"  [label="DDG: url_origin"];
"1000126" -> "1000133"  [label="DDG: *host_redirect_data_"];
"1000124" -> "1000103"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000134" -> "1000124"  [label="CFG: "];
"1000124" -> "1000212"  [label="DDG: GetRedirectEndpointsForPreconnect(\n      url_origin, *host_redirect_data_, prediction)"];
"1000124" -> "1000212"  [label="DDG: has_any_prediction"];
"1000126" -> "1000124"  [label="DDG: url_origin"];
"1000126" -> "1000124"  [label="DDG: *host_redirect_data_"];
"1000126" -> "1000124"  [label="DDG: prediction"];
"1000124" -> "1000140"  [label="DDG: has_any_prediction"];
"1000124" -> "1000150"  [label="DDG: has_any_prediction"];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000118"  [label="CFG: "];
"1000127" -> "1000125"  [label="CFG: "];
"1000128" -> "1000126"  [label="AST: "];
"1000128" -> "1000129"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000128"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000129" -> "1000127"  [label="CFG: "];
"1000128" -> "1000129"  [label="CFG: "];
"1000130" -> "1000126"  [label="AST: "];
"1000130" -> "1000128"  [label="CFG: "];
"1000126" -> "1000130"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000127" -> "1000125"  [label="CFG: "];
"1000129" -> "1000127"  [label="CFG: "];
"1000131" -> "1000103"  [label="AST: "];
"1000132" -> "1000131"  [label="AST: "];
"1000139" -> "1000131"  [label="AST: "];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000124"  [label="CFG: "];
"1000136" -> "1000134"  [label="CFG: "];
"1000135" -> "1000133"  [label="AST: "];
"1000135" -> "1000136"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000138" -> "1000135"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000134"  [label="CFG: "];
"1000135" -> "1000136"  [label="CFG: "];
"1000137" -> "1000133"  [label="AST: "];
"1000137" -> "1000138"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000133" -> "1000137"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000133"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000141" -> "1000132"  [label="CFG: "];
"1000146" -> "1000132"  [label="CFG: "];
"1000132" -> "1000212"  [label="DDG: !GetRedirectOrigin(url_origin, *host_redirect_data_, &redirect_origin)"];
"1000132" -> "1000212"  [label="DDG: GetRedirectOrigin(url_origin, *host_redirect_data_, &redirect_origin)"];
"1000133" -> "1000132"  [label="DDG: url_origin"];
"1000133" -> "1000132"  [label="DDG: *host_redirect_data_"];
"1000133" -> "1000132"  [label="DDG: &redirect_origin"];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000135"  [label="CFG: "];
"1000137" -> "1000138"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000137"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000137" -> "1000133"  [label="AST: "];
"1000132" -> "1000133"  [label="CFG: "];
"1000133" -> "1000212"  [label="DDG: url_origin"];
"1000133" -> "1000212"  [label="DDG: *host_redirect_data_"];
"1000133" -> "1000212"  [label="DDG: &redirect_origin"];
"1000133" -> "1000132"  [label="DDG: url_origin"];
"1000133" -> "1000132"  [label="DDG: *host_redirect_data_"];
"1000133" -> "1000132"  [label="DDG: &redirect_origin"];
"1000126" -> "1000133"  [label="DDG: url_origin"];
"1000126" -> "1000133"  [label="DDG: *host_redirect_data_"];
"1000133" -> "1000164"  [label="DDG: url_origin"];
"1000139" -> "1000131"  [label="AST: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000132"  [label="CFG: "];
"1000140" -> "1000141"  [label="CFG: "];
"1000141" -> "1000140"  [label="DDG: has_any_prediction"];
"1000140" -> "1000139"  [label="AST: "];
"1000140" -> "1000141"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000212" -> "1000140"  [label="CFG: "];
"1000140" -> "1000212"  [label="DDG: <RET>"];
"1000141" -> "1000140"  [label="DDG: has_any_prediction"];
"1000124" -> "1000140"  [label="DDG: has_any_prediction"];
"1000143" -> "1000103"  [label="AST: "];
"1000144" -> "1000143"  [label="AST: "];
"1000149" -> "1000143"  [label="AST: "];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000132"  [label="CFG: "];
"1000148" -> "1000146"  [label="CFG: "];
"1000147" -> "1000145"  [label="AST: "];
"1000147" -> "1000148"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000148" -> "1000146"  [label="CFG: "];
"1000147" -> "1000148"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000144" -> "1000145"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000151" -> "1000144"  [label="CFG: "];
"1000153" -> "1000144"  [label="CFG: "];
"1000144" -> "1000212"  [label="DDG: !origin_data_->TryGetData(redirect_origin.host(), &data)"];
"1000144" -> "1000212"  [label="DDG: origin_data_->TryGetData(redirect_origin.host(), &data)"];
"1000145" -> "1000144"  [label="DDG: redirect_origin.host()"];
"1000145" -> "1000144"  [label="DDG: &data"];
"1000149" -> "1000143"  [label="AST: "];
"1000150" -> "1000149"  [label="AST: "];
"1000145" -> "1000144"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000144" -> "1000145"  [label="CFG: "];
"1000145" -> "1000212"  [label="DDG: redirect_origin.host()"];
"1000145" -> "1000212"  [label="DDG: &data"];
"1000145" -> "1000144"  [label="DDG: redirect_origin.host()"];
"1000145" -> "1000144"  [label="DDG: &data"];
"1000151" -> "1000150"  [label="AST: "];
"1000151" -> "1000144"  [label="CFG: "];
"1000150" -> "1000151"  [label="CFG: "];
"1000151" -> "1000150"  [label="DDG: has_any_prediction"];
"1000150" -> "1000149"  [label="AST: "];
"1000150" -> "1000151"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000212" -> "1000150"  [label="CFG: "];
"1000150" -> "1000212"  [label="DDG: <RET>"];
"1000151" -> "1000150"  [label="DDG: has_any_prediction"];
"1000124" -> "1000150"  [label="DDG: has_any_prediction"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000212"  [label="DDG: url"];
"1000101" -> "1000120"  [label="DDG: url"];
"1000335" -> "1000100"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000155" -> "1000154"  [label="AST: "];
"1000160" -> "1000154"  [label="AST: "];
"1000152" -> "1000103"  [label="AST: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000153" -> "1000152"  [label="AST: "];
"1000153" -> "1000144"  [label="CFG: "];
"1000157" -> "1000153"  [label="CFG: "];
"1000168" -> "1000153"  [label="CFG: "];
"1000158" -> "1000156"  [label="AST: "];
"1000158" -> "1000157"  [label="CFG: "];
"1000156" -> "1000158"  [label="CFG: "];
"1000159" -> "1000155"  [label="AST: "];
"1000159" -> "1000156"  [label="CFG: "];
"1000155" -> "1000159"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000155" -> "1000159"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000159" -> "1000155"  [label="AST: "];
"1000162" -> "1000155"  [label="CFG: "];
"1000155" -> "1000212"  [label="DDG: prediction->host"];
"1000155" -> "1000212"  [label="DDG: redirect_origin.host()"];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000158"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000158" -> "1000156"  [label="AST: "];
"1000159" -> "1000156"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000157" -> "1000153"  [label="CFG: "];
"1000158" -> "1000157"  [label="CFG: "];
"1000163" -> "1000161"  [label="AST: "];
"1000163" -> "1000162"  [label="CFG: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000164" -> "1000160"  [label="AST: "];
"1000164" -> "1000166"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000166" -> "1000164"  [label="AST: "];
"1000160" -> "1000164"  [label="CFG: "];
"1000164" -> "1000212"  [label="DDG: url_origin"];
"1000164" -> "1000212"  [label="DDG: redirect_origin"];
"1000164" -> "1000160"  [label="DDG: redirect_origin"];
"1000164" -> "1000160"  [label="DDG: url_origin"];
"1000133" -> "1000164"  [label="DDG: url_origin"];
"1000165" -> "1000164"  [label="AST: "];
"1000165" -> "1000161"  [label="CFG: "];
"1000166" -> "1000165"  [label="CFG: "];
"1000160" -> "1000154"  [label="AST: "];
"1000160" -> "1000164"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000164" -> "1000160"  [label="AST: "];
"1000168" -> "1000160"  [label="CFG: "];
"1000160" -> "1000212"  [label="DDG: redirect_origin != url_origin"];
"1000160" -> "1000212"  [label="DDG: prediction->is_redirected"];
"1000164" -> "1000160"  [label="DDG: redirect_origin"];
"1000164" -> "1000160"  [label="DDG: url_origin"];
"1000161" -> "1000160"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000165" -> "1000161"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000162" -> "1000155"  [label="CFG: "];
"1000163" -> "1000162"  [label="CFG: "];
"1000166" -> "1000164"  [label="AST: "];
"1000166" -> "1000165"  [label="CFG: "];
"1000164" -> "1000166"  [label="CFG: "];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000212"  [label="DDG: prediction"];
"1000102" -> "1000106"  [label="DDG: prediction"];
"1000102" -> "1000126"  [label="DDG: prediction"];
"1000336" -> "1000100"  [label="AST: "];
"1000103" -> "1000100"  [label="AST: "];
"1000104" -> "1000103"  [label="AST: "];
"1000109" -> "1000103"  [label="AST: "];
"1000111" -> "1000103"  [label="AST: "];
"1000117" -> "1000103"  [label="AST: "];
"1000118" -> "1000103"  [label="AST: "];
"1000122" -> "1000103"  [label="AST: "];
"1000123" -> "1000103"  [label="AST: "];
"1000124" -> "1000103"  [label="AST: "];
"1000131" -> "1000103"  [label="AST: "];
"1000142" -> "1000103"  [label="AST: "];
"1000143" -> "1000103"  [label="AST: "];
"1000152" -> "1000103"  [label="AST: "];
"1000167" -> "1000103"  [label="AST: "];
"1000168" -> "1000103"  [label="AST: "];
"1000169" -> "1000103"  [label="AST: "];
"1000210" -> "1000103"  [label="AST: "];
"1000168" -> "1000103"  [label="AST: "];
"1000168" -> "1000160"  [label="CFG: "];
"1000168" -> "1000153"  [label="CFG: "];
"1000172" -> "1000168"  [label="CFG: "];
"1000171" -> "1000169"  [label="AST: "];
"1000171" -> "1000173"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="AST: "];
"1000182" -> "1000171"  [label="CFG: "];
"1000171" -> "1000212"  [label="DDG: static_cast<float>(origin.number_of_hits()) /\n                       (origin.number_of_hits() + origin.number_of_misses())"];
"1000173" -> "1000171"  [label="DDG: static_cast<float>(origin.number_of_hits())"];
"1000173" -> "1000171"  [label="DDG: origin.number_of_hits() + origin.number_of_misses()"];
"1000171" -> "1000181"  [label="DDG: confidence"];
"1000172" -> "1000171"  [label="AST: "];
"1000172" -> "1000168"  [label="CFG: "];
"1000175" -> "1000172"  [label="CFG: "];
"1000173" -> "1000171"  [label="AST: "];
"1000173" -> "1000177"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000177" -> "1000173"  [label="AST: "];
"1000171" -> "1000173"  [label="CFG: "];
"1000173" -> "1000212"  [label="DDG: origin.number_of_hits() + origin.number_of_misses()"];
"1000173" -> "1000212"  [label="DDG: static_cast<float>(origin.number_of_hits())"];
"1000173" -> "1000171"  [label="DDG: static_cast<float>(origin.number_of_hits())"];
"1000173" -> "1000171"  [label="DDG: origin.number_of_hits() + origin.number_of_misses()"];
"1000174" -> "1000173"  [label="DDG: origin.number_of_hits()"];
"1000174" -> "1000173"  [label="AST: "];
"1000174" -> "1000176"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000176" -> "1000174"  [label="AST: "];
"1000178" -> "1000174"  [label="CFG: "];
"1000174" -> "1000173"  [label="DDG: origin.number_of_hits()"];
"1000169" -> "1000103"  [label="AST: "];
"1000170" -> "1000169"  [label="AST: "];
"1000171" -> "1000169"  [label="AST: "];
"1000180" -> "1000169"  [label="AST: "];
"1000185" -> "1000169"  [label="AST: "];
"1000188" -> "1000169"  [label="AST: "];
"1000176" -> "1000174"  [label="AST: "];
"1000176" -> "1000175"  [label="CFG: "];
"1000174" -> "1000176"  [label="CFG: "];
"1000177" -> "1000173"  [label="AST: "];
"1000177" -> "1000179"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000179" -> "1000177"  [label="AST: "];
"1000173" -> "1000177"  [label="CFG: "];
"1000177" -> "1000212"  [label="DDG: origin.number_of_hits()"];
"1000177" -> "1000212"  [label="DDG: origin.number_of_misses()"];
"1000178" -> "1000177"  [label="AST: "];
"1000178" -> "1000174"  [label="CFG: "];
"1000179" -> "1000178"  [label="CFG: "];
"1000179" -> "1000177"  [label="AST: "];
"1000179" -> "1000178"  [label="CFG: "];
"1000177" -> "1000179"  [label="CFG: "];
"1000183" -> "1000181"  [label="AST: "];
"1000183" -> "1000182"  [label="CFG: "];
"1000181" -> "1000183"  [label="CFG: "];
"1000180" -> "1000169"  [label="AST: "];
"1000181" -> "1000180"  [label="AST: "];
"1000184" -> "1000180"  [label="AST: "];
"1000181" -> "1000180"  [label="AST: "];
"1000181" -> "1000183"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000183" -> "1000181"  [label="AST: "];
"1000184" -> "1000181"  [label="CFG: "];
"1000186" -> "1000181"  [label="CFG: "];
"1000181" -> "1000212"  [label="DDG: confidence < kMinOriginConfidenceToTriggerPreresolve"];
"1000181" -> "1000212"  [label="DDG: confidence"];
"1000181" -> "1000212"  [label="DDG: kMinOriginConfidenceToTriggerPreresolve"];
"1000171" -> "1000181"  [label="DDG: confidence"];
"1000181" -> "1000192"  [label="DDG: confidence"];
"1000182" -> "1000181"  [label="AST: "];
"1000182" -> "1000171"  [label="CFG: "];
"1000183" -> "1000182"  [label="CFG: "];
"1000184" -> "1000180"  [label="AST: "];
"1000184" -> "1000181"  [label="CFG: "];
"1000187" -> "1000185"  [label="AST: "];
"1000187" -> "1000186"  [label="CFG: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000185" -> "1000169"  [label="AST: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="AST: "];
"1000189" -> "1000185"  [label="CFG: "];
"1000185" -> "1000212"  [label="DDG: true"];
"1000185" -> "1000212"  [label="DDG: has_any_prediction"];
"1000185" -> "1000210"  [label="DDG: has_any_prediction"];
"1000186" -> "1000185"  [label="AST: "];
"1000186" -> "1000181"  [label="CFG: "];
"1000187" -> "1000186"  [label="CFG: "];
"1000190" -> "1000188"  [label="AST: "];
"1000191" -> "1000190"  [label="AST: "];
"1000188" -> "1000169"  [label="AST: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000188"  [label="AST: "];
"1000189" -> "1000188"  [label="AST: "];
"1000189" -> "1000185"  [label="CFG: "];
"1000193" -> "1000189"  [label="CFG: "];
"1000211" -> "1000189"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000194" -> "1000192"  [label="AST: "];
"1000199" -> "1000192"  [label="CFG: "];
"1000207" -> "1000192"  [label="CFG: "];
"1000192" -> "1000212"  [label="DDG: kMinOriginConfidenceToTriggerPreconnect"];
"1000192" -> "1000212"  [label="DDG: confidence"];
"1000192" -> "1000212"  [label="DDG: confidence > kMinOriginConfidenceToTriggerPreconnect"];
"1000181" -> "1000192"  [label="DDG: confidence"];
"1000193" -> "1000192"  [label="AST: "];
"1000193" -> "1000189"  [label="CFG: "];
"1000194" -> "1000193"  [label="CFG: "];
"1000194" -> "1000192"  [label="AST: "];
"1000194" -> "1000193"  [label="CFG: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000195" -> "1000191"  [label="AST: "];
"1000196" -> "1000195"  [label="AST: "];
"1000191" -> "1000190"  [label="AST: "];
"1000192" -> "1000191"  [label="AST: "];
"1000195" -> "1000191"  [label="AST: "];
"1000202" -> "1000191"  [label="AST: "];
"1000196" -> "1000195"  [label="AST: "];
"1000196" -> "1000201"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000200" -> "1000196"  [label="AST: "];
"1000201" -> "1000196"  [label="AST: "];
"1000211" -> "1000196"  [label="CFG: "];
"1000196" -> "1000212"  [label="DDG: network_isolation_key"];
"1000196" -> "1000212"  [label="DDG: url::Origin::Create(GURL(origin.origin()))"];
"1000196" -> "1000212"  [label="DDG: prediction->requests.emplace_back(\n            url::Origin::Create(GURL(origin.origin())), 1,\n            network_isolation_key)"];
"1000197" -> "1000196"  [label="DDG: GURL(origin.origin())"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000100"  [label="CFG: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000105"  [label="CFG: "];
"1000105" -> "1000104"  [label="AST: "];
"1000110" -> "1000104"  [label="CFG: "];
"1000104" -> "1000212"  [label="DDG: !prediction || prediction->requests.empty()"];
"1000104" -> "1000212"  [label="DDG: DCHECK(!prediction || prediction->requests.empty())"];
"1000105" -> "1000104"  [label="DDG: !prediction"];
"1000105" -> "1000104"  [label="DDG: prediction->requests.empty()"];
"1000108" -> "1000105"  [label="AST: "];
"1000108" -> "1000106"  [label="CFG: "];
"1000105" -> "1000108"  [label="CFG: "];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000106"  [label="CFG: "];
"1000105" -> "1000108"  [label="CFG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000108" -> "1000105"  [label="AST: "];
"1000104" -> "1000105"  [label="CFG: "];
"1000105" -> "1000212"  [label="DDG: prediction->requests.empty()"];
"1000105" -> "1000212"  [label="DDG: !prediction"];
"1000105" -> "1000104"  [label="DDG: !prediction"];
"1000105" -> "1000104"  [label="DDG: prediction->requests.empty()"];
"1000106" -> "1000105"  [label="DDG: prediction"];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000108" -> "1000106"  [label="CFG: "];
"1000105" -> "1000106"  [label="CFG: "];
"1000106" -> "1000212"  [label="DDG: prediction"];
"1000106" -> "1000105"  [label="DDG: prediction"];
"1000102" -> "1000106"  [label="DDG: prediction"];
"1000106" -> "1000126"  [label="DDG: prediction"];
"1000197" -> "1000196"  [label="AST: "];
"1000197" -> "1000198"  [label="CFG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000200" -> "1000197"  [label="CFG: "];
"1000197" -> "1000212"  [label="DDG: GURL(origin.origin())"];
"1000197" -> "1000196"  [label="DDG: GURL(origin.origin())"];
"1000198" -> "1000197"  [label="DDG: origin.origin()"];
"1000198" -> "1000197"  [label="AST: "];
"1000198" -> "1000199"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000197" -> "1000198"  [label="CFG: "];
"1000198" -> "1000212"  [label="DDG: origin.origin()"];
"1000198" -> "1000197"  [label="DDG: origin.origin()"];
"1000199" -> "1000198"  [label="AST: "];
"1000199" -> "1000192"  [label="CFG: "];
"1000198" -> "1000199"  [label="CFG: "];
"1000200" -> "1000196"  [label="AST: "];
"1000200" -> "1000197"  [label="CFG: "];
"1000201" -> "1000200"  [label="CFG: "];
"1000201" -> "1000196"  [label="AST: "];
"1000201" -> "1000200"  [label="CFG: "];
"1000196" -> "1000201"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000203"  [label="AST: "];
"1000202" -> "1000191"  [label="AST: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000203"  [label="AST: "];
"1000204" -> "1000209"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000208" -> "1000204"  [label="AST: "];
"1000209" -> "1000204"  [label="AST: "];
"1000211" -> "1000204"  [label="CFG: "];
"1000204" -> "1000212"  [label="DDG: url::Origin::Create(GURL(origin.origin()))"];
"1000204" -> "1000212"  [label="DDG: network_isolation_key"];
"1000204" -> "1000212"  [label="DDG: prediction->requests.emplace_back(\n            url::Origin::Create(GURL(origin.origin())), 0,\n            network_isolation_key)"];
"1000205" -> "1000204"  [label="DDG: GURL(origin.origin())"];
"1000205" -> "1000204"  [label="AST: "];
"1000205" -> "1000206"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000208" -> "1000205"  [label="CFG: "];
"1000205" -> "1000212"  [label="DDG: GURL(origin.origin())"];
"1000205" -> "1000204"  [label="DDG: GURL(origin.origin())"];
"1000206" -> "1000205"  [label="DDG: origin.origin()"];
"1000206" -> "1000205"  [label="AST: "];
"1000206" -> "1000207"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000205" -> "1000206"  [label="CFG: "];
"1000206" -> "1000212"  [label="DDG: origin.origin()"];
"1000206" -> "1000205"  [label="DDG: origin.origin()"];
"1000207" -> "1000206"  [label="AST: "];
"1000207" -> "1000192"  [label="CFG: "];
"1000206" -> "1000207"  [label="CFG: "];
"1000208" -> "1000204"  [label="AST: "];
"1000208" -> "1000205"  [label="CFG: "];
"1000209" -> "1000208"  [label="CFG: "];
"1000209" -> "1000204"  [label="AST: "];
"1000209" -> "1000208"  [label="CFG: "];
"1000204" -> "1000209"  [label="CFG: "];
"1000109" -> "1000103"  [label="AST: "];
"1000109" -> "1000110"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000113" -> "1000109"  [label="CFG: "];
"1000109" -> "1000212"  [label="DDG: BrowserThread::UI"];
"1000109" -> "1000212"  [label="DDG: DCHECK_CURRENTLY_ON(BrowserThread::UI)"];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000104"  [label="CFG: "];
"1000109" -> "1000110"  [label="CFG: "];
"1000210" -> "1000103"  [label="AST: "];
"1000210" -> "1000211"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="CFG: "];
"1000210" -> "1000212"  [label="DDG: <RET>"];
"1000211" -> "1000210"  [label="DDG: has_any_prediction"];
"1000185" -> "1000210"  [label="DDG: has_any_prediction"];
"1000211" -> "1000210"  [label="AST: "];
"1000211" -> "1000196"  [label="CFG: "];
"1000211" -> "1000204"  [label="CFG: "];
"1000211" -> "1000189"  [label="CFG: "];
"1000210" -> "1000211"  [label="CFG: "];
"1000211" -> "1000210"  [label="DDG: has_any_prediction"];
"1000111" -> "1000103"  [label="AST: "];
"1000112" -> "1000111"  [label="AST: "];
"1000115" -> "1000111"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000114" -> "1000113"  [label="CFG: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000116" -> "1000112"  [label="CFG: "];
"1000119" -> "1000112"  [label="CFG: "];
"1000112" -> "1000212"  [label="DDG: INITIALIZED"];
"1000112" -> "1000212"  [label="DDG: initialization_state_ != INITIALIZED"];
"1000112" -> "1000212"  [label="DDG: initialization_state_"];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000109"  [label="CFG: "];
"1000114" -> "1000113"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000112"  [label="CFG: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000116" -> "1000115"  [label="DDG: false"];
"1000115" -> "1000111"  [label="AST: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000212" -> "1000115"  [label="CFG: "];
"1000115" -> "1000212"  [label="DDG: <RET>"];
"1000116" -> "1000115"  [label="DDG: false"];
"1000118" -> "1000103"  [label="AST: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="AST: "];
"1000125" -> "1000118"  [label="CFG: "];
"1000118" -> "1000212"  [label="DDG: url::Origin::Create(url)"];
"1000120" -> "1000118"  [label="DDG: url"];
"1000118" -> "1000126"  [label="DDG: url_origin"];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000112"  [label="CFG: "];
"1000121" -> "1000119"  [label="CFG: "];
"1000120" -> "1000118"  [label="AST: "];
"1000120" -> "1000121"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000120" -> "1000212"  [label="DDG: url"];
"1000120" -> "1000118"  [label="DDG: url"];
"1000101" -> "1000120"  [label="DDG: url"];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000119"  [label="CFG: "];
"1000120" -> "1000121"  [label="CFG: "];
}
