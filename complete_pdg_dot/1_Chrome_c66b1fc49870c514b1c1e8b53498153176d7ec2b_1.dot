digraph "1_Chrome_c66b1fc49870c514b1c1e8b53498153176d7ec2b_1" {
"1000129" [label="(MethodReturn,void)"];
"1000115" [label="(Call,GetMultiProfilePolicy(user, &is_user_allowed, &policy))"];
"1000116" [label="(Identifier,user)"];
"1000117" [label="(Call,&is_user_allowed)"];
"1000118" [label="(Identifier,is_user_allowed)"];
"1000119" [label="(Call,&policy)"];
"1000120" [label="(Identifier,policy)"];
"1000121" [label="(Call,user_dict->SetBoolean(kKeyMultiProfilesAllowed, is_user_allowed))"];
"1000122" [label="(Identifier,kKeyMultiProfilesAllowed)"];
"1000123" [label="(Identifier,is_user_allowed)"];
"1000124" [label="(Call,user_dict->SetInteger(kKeyMultiProfilesPolicy, static_cast<int>(policy)))"];
"1000125" [label="(Identifier,kKeyMultiProfilesPolicy)"];
"1000126" [label="(Call,static_cast<int>(policy))"];
"1000128" [label="(Identifier,policy)"];
"1000101" [label="(MethodParameterIn,user_manager::User* user)"];
"1000166" [label="(MethodParameterOut,user_manager::User* user)"];
"1000102" [label="(MethodParameterIn,base::DictionaryValue* user_dict)"];
"1000167" [label="(MethodParameterOut,base::DictionaryValue* user_dict)"];
"1000104" [label="(Block,)"];
"1000103" [label="(MethodParameterIn,bool is_signin_to_add)"];
"1000168" [label="(MethodParameterOut,bool is_signin_to_add)"];
"1000108" [label="(Block,)"];
"1000105" [label="(ControlStructure,if (!is_signin_to_add))"];
"1000106" [label="(Call,!is_signin_to_add)"];
"1000107" [label="(Identifier,is_signin_to_add)"];
"1000110" [label="(Identifier,kKeyMultiProfilesAllowed)"];
"1000109" [label="(Call,user_dict->SetBoolean(kKeyMultiProfilesAllowed, true))"];
"1000111" [label="(Identifier,true)"];
"1000112" [label="(Return,return;)"];
"1000129" -> "1000100"  [label="AST: "];
"1000129" -> "1000112"  [label="CFG: "];
"1000129" -> "1000124"  [label="CFG: "];
"1000112" -> "1000129"  [label="DDG: <RET>"];
"1000115" -> "1000129"  [label="DDG: &is_user_allowed"];
"1000115" -> "1000129"  [label="DDG: &policy"];
"1000115" -> "1000129"  [label="DDG: GetMultiProfilePolicy(user, &is_user_allowed, &policy)"];
"1000115" -> "1000129"  [label="DDG: user"];
"1000124" -> "1000129"  [label="DDG: static_cast<int>(policy)"];
"1000124" -> "1000129"  [label="DDG: kKeyMultiProfilesPolicy"];
"1000124" -> "1000129"  [label="DDG: user_dict->SetInteger(kKeyMultiProfilesPolicy, static_cast<int>(policy))"];
"1000106" -> "1000129"  [label="DDG: is_signin_to_add"];
"1000106" -> "1000129"  [label="DDG: !is_signin_to_add"];
"1000121" -> "1000129"  [label="DDG: is_user_allowed"];
"1000121" -> "1000129"  [label="DDG: kKeyMultiProfilesAllowed"];
"1000121" -> "1000129"  [label="DDG: user_dict->SetBoolean(kKeyMultiProfilesAllowed, is_user_allowed)"];
"1000103" -> "1000129"  [label="DDG: is_signin_to_add"];
"1000102" -> "1000129"  [label="DDG: user_dict"];
"1000126" -> "1000129"  [label="DDG: policy"];
"1000101" -> "1000129"  [label="DDG: user"];
"1000109" -> "1000129"  [label="DDG: kKeyMultiProfilesAllowed"];
"1000109" -> "1000129"  [label="DDG: true"];
"1000109" -> "1000129"  [label="DDG: user_dict->SetBoolean(kKeyMultiProfilesAllowed, true)"];
"1000115" -> "1000104"  [label="AST: "];
"1000115" -> "1000119"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000119" -> "1000115"  [label="AST: "];
"1000122" -> "1000115"  [label="CFG: "];
"1000115" -> "1000129"  [label="DDG: &is_user_allowed"];
"1000115" -> "1000129"  [label="DDG: &policy"];
"1000115" -> "1000129"  [label="DDG: GetMultiProfilePolicy(user, &is_user_allowed, &policy)"];
"1000115" -> "1000129"  [label="DDG: user"];
"1000101" -> "1000115"  [label="DDG: user"];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000106"  [label="CFG: "];
"1000118" -> "1000116"  [label="CFG: "];
"1000117" -> "1000115"  [label="AST: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000120" -> "1000117"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000116"  [label="CFG: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000119" -> "1000115"  [label="AST: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000115" -> "1000119"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000120" -> "1000117"  [label="CFG: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000121" -> "1000104"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000125" -> "1000121"  [label="CFG: "];
"1000121" -> "1000129"  [label="DDG: is_user_allowed"];
"1000121" -> "1000129"  [label="DDG: kKeyMultiProfilesAllowed"];
"1000121" -> "1000129"  [label="DDG: user_dict->SetBoolean(kKeyMultiProfilesAllowed, is_user_allowed)"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000115"  [label="CFG: "];
"1000123" -> "1000122"  [label="CFG: "];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000122"  [label="CFG: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000124" -> "1000104"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000129" -> "1000124"  [label="CFG: "];
"1000124" -> "1000129"  [label="DDG: static_cast<int>(policy)"];
"1000124" -> "1000129"  [label="DDG: kKeyMultiProfilesPolicy"];
"1000124" -> "1000129"  [label="DDG: user_dict->SetInteger(kKeyMultiProfilesPolicy, static_cast<int>(policy))"];
"1000126" -> "1000124"  [label="DDG: policy"];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000121"  [label="CFG: "];
"1000127" -> "1000125"  [label="CFG: "];
"1000126" -> "1000124"  [label="AST: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000128" -> "1000126"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000126" -> "1000129"  [label="DDG: policy"];
"1000126" -> "1000124"  [label="DDG: policy"];
"1000128" -> "1000126"  [label="AST: "];
"1000128" -> "1000127"  [label="CFG: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000129"  [label="DDG: user"];
"1000101" -> "1000115"  [label="DDG: user"];
"1000166" -> "1000100"  [label="AST: "];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000129"  [label="DDG: user_dict"];
"1000167" -> "1000100"  [label="AST: "];
"1000104" -> "1000100"  [label="AST: "];
"1000105" -> "1000104"  [label="AST: "];
"1000113" -> "1000104"  [label="AST: "];
"1000114" -> "1000104"  [label="AST: "];
"1000115" -> "1000104"  [label="AST: "];
"1000121" -> "1000104"  [label="AST: "];
"1000124" -> "1000104"  [label="AST: "];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000129"  [label="DDG: is_signin_to_add"];
"1000103" -> "1000106"  [label="DDG: is_signin_to_add"];
"1000168" -> "1000100"  [label="AST: "];
"1000108" -> "1000105"  [label="AST: "];
"1000109" -> "1000108"  [label="AST: "];
"1000112" -> "1000108"  [label="AST: "];
"1000105" -> "1000104"  [label="AST: "];
"1000106" -> "1000105"  [label="AST: "];
"1000108" -> "1000105"  [label="AST: "];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000110" -> "1000106"  [label="CFG: "];
"1000116" -> "1000106"  [label="CFG: "];
"1000106" -> "1000129"  [label="DDG: is_signin_to_add"];
"1000106" -> "1000129"  [label="DDG: !is_signin_to_add"];
"1000103" -> "1000106"  [label="DDG: is_signin_to_add"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000100"  [label="CFG: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000106"  [label="CFG: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000112" -> "1000109"  [label="CFG: "];
"1000109" -> "1000129"  [label="DDG: kKeyMultiProfilesAllowed"];
"1000109" -> "1000129"  [label="DDG: true"];
"1000109" -> "1000129"  [label="DDG: user_dict->SetBoolean(kKeyMultiProfilesAllowed, true)"];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000112" -> "1000108"  [label="AST: "];
"1000112" -> "1000109"  [label="CFG: "];
"1000129" -> "1000112"  [label="CFG: "];
"1000112" -> "1000129"  [label="DDG: <RET>"];
}
