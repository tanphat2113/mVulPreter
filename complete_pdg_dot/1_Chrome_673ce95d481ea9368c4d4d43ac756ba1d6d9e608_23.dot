digraph "1_Chrome_673ce95d481ea9368c4d4d43ac756ba1d6d9e608_23" {
"1000131" [label="(MethodReturn,void)"];
"1000127" [label="(Call,vea_->UseOutputBitstreamBuffer(buffer.id(), std::move(buffer_handle)))"];
"1000128" [label="(Call,buffer.id())"];
"1000129" [label="(Call,std::move(buffer_handle))"];
"1000130" [label="(Identifier,buffer_handle)"];
"1000103" [label="(Block,)"];
"1000102" [label="(MethodParameterIn,const BitstreamBuffer& buffer)"];
"1000181" [label="(MethodParameterOut,const BitstreamBuffer& buffer)"];
"1000107" [label="(Call,__func__ << \" buffer.id()= \" << buffer.id()\n            << \" buffer.size()= \" << buffer.size() << \"B\")"];
"1000108" [label="(Identifier,__func__)"];
"1000104" [label="(Call,DVLOG(2) << __func__ << \" buffer.id()= \" << buffer.id()\n            << \" buffer.size()= \" << buffer.size() << \"B\")"];
"1000105" [label="(Call,DVLOG(2))"];
"1000109" [label="(Call,\" buffer.id()= \" << buffer.id()\n            << \" buffer.size()= \" << buffer.size() << \"B\")"];
"1000110" [label="(Literal,\" buffer.id()= \")"];
"1000111" [label="(Call,buffer.id()\n            << \" buffer.size()= \" << buffer.size() << \"B\")"];
"1000112" [label="(Call,buffer.id())"];
"1000106" [label="(Literal,2)"];
"1000113" [label="(Call,\" buffer.size()= \" << buffer.size() << \"B\")"];
"1000114" [label="(Literal,\" buffer.size()= \")"];
"1000115" [label="(Call,buffer.size() << \"B\")"];
"1000116" [label="(Call,buffer.size())"];
"1000117" [label="(Literal,\"B\")"];
"1000118" [label="(Call,DCHECK_CALLED_ON_VALID_SEQUENCE(sequence_checker_))"];
"1000119" [label="(Identifier,sequence_checker_)"];
"1000121" [label="(Call,buffer_handle = mojo::WrapSharedMemoryHandle(\n      buffer.handle().Duplicate(), buffer.size(), true /* read_only */))"];
"1000122" [label="(Identifier,buffer_handle)"];
"1000123" [label="(Call,mojo::WrapSharedMemoryHandle(\n      buffer.handle().Duplicate(), buffer.size(), true /* read_only */))"];
"1000125" [label="(Call,buffer.size())"];
"1000126" [label="(Identifier,true)"];
"1000124" [label="(Call,buffer.handle().Duplicate())"];
"1000131" -> "1000101"  [label="AST: "];
"1000131" -> "1000127"  [label="CFG: "];
"1000123" -> "1000131"  [label="DDG: buffer.size()"];
"1000123" -> "1000131"  [label="DDG: buffer.handle().Duplicate()"];
"1000123" -> "1000131"  [label="DDG: true"];
"1000107" -> "1000131"  [label="DDG: __func__"];
"1000107" -> "1000131"  [label="DDG: \\" buffer.id()= \\" << buffer.id()\n            << \\" buffer.size()= \\" << buffer.size() << \\"B\\""];
"1000104" -> "1000131"  [label="DDG: __func__ << \\" buffer.id()= \\" << buffer.id()\n            << \\" buffer.size()= \\" << buffer.size() << \\"B\\""];
"1000104" -> "1000131"  [label="DDG: DVLOG(2) << __func__ << \\" buffer.id()= \\" << buffer.id()\n            << \\" buffer.size()= \\" << buffer.size() << \\"B\\""];
"1000104" -> "1000131"  [label="DDG: DVLOG(2)"];
"1000121" -> "1000131"  [label="DDG: mojo::WrapSharedMemoryHandle(\n      buffer.handle().Duplicate(), buffer.size(), true /* read_only */)"];
"1000127" -> "1000131"  [label="DDG: std::move(buffer_handle)"];
"1000127" -> "1000131"  [label="DDG: vea_->UseOutputBitstreamBuffer(buffer.id(), std::move(buffer_handle))"];
"1000127" -> "1000131"  [label="DDG: buffer.id()"];
"1000118" -> "1000131"  [label="DDG: DCHECK_CALLED_ON_VALID_SEQUENCE(sequence_checker_)"];
"1000118" -> "1000131"  [label="DDG: sequence_checker_"];
"1000102" -> "1000131"  [label="DDG: buffer"];
"1000111" -> "1000131"  [label="DDG: \\" buffer.size()= \\" << buffer.size() << \\"B\\""];
"1000109" -> "1000131"  [label="DDG: buffer.id()\n            << \\" buffer.size()= \\" << buffer.size() << \\"B\\""];
"1000129" -> "1000131"  [label="DDG: buffer_handle"];
"1000113" -> "1000131"  [label="DDG: buffer.size() << \\"B\\""];
"1000127" -> "1000103"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000131" -> "1000127"  [label="CFG: "];
"1000127" -> "1000131"  [label="DDG: std::move(buffer_handle)"];
"1000127" -> "1000131"  [label="DDG: vea_->UseOutputBitstreamBuffer(buffer.id(), std::move(buffer_handle))"];
"1000127" -> "1000131"  [label="DDG: buffer.id()"];
"1000129" -> "1000127"  [label="DDG: buffer_handle"];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000121"  [label="CFG: "];
"1000130" -> "1000128"  [label="CFG: "];
"1000129" -> "1000127"  [label="AST: "];
"1000129" -> "1000130"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000129" -> "1000131"  [label="DDG: buffer_handle"];
"1000129" -> "1000127"  [label="DDG: buffer_handle"];
"1000121" -> "1000129"  [label="DDG: buffer_handle"];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000128"  [label="CFG: "];
"1000129" -> "1000130"  [label="CFG: "];
"1000103" -> "1000101"  [label="AST: "];
"1000104" -> "1000103"  [label="AST: "];
"1000118" -> "1000103"  [label="AST: "];
"1000120" -> "1000103"  [label="AST: "];
"1000121" -> "1000103"  [label="AST: "];
"1000127" -> "1000103"  [label="AST: "];
"1000102" -> "1000101"  [label="AST: "];
"1000102" -> "1000131"  [label="DDG: buffer"];
"1000181" -> "1000101"  [label="AST: "];
"1000107" -> "1000104"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000104" -> "1000107"  [label="CFG: "];
"1000107" -> "1000131"  [label="DDG: __func__"];
"1000107" -> "1000131"  [label="DDG: \\" buffer.id()= \\" << buffer.id()\n            << \\" buffer.size()= \\" << buffer.size() << \\"B\\""];
"1000107" -> "1000104"  [label="DDG: __func__"];
"1000107" -> "1000104"  [label="DDG: \\" buffer.id()= \\" << buffer.id()\n            << \\" buffer.size()= \\" << buffer.size() << \\"B\\""];
"1000109" -> "1000107"  [label="DDG: \\" buffer.id()= \\""];
"1000109" -> "1000107"  [label="DDG: buffer.id()\n            << \\" buffer.size()= \\" << buffer.size() << \\"B\\""];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000105"  [label="CFG: "];
"1000110" -> "1000108"  [label="CFG: "];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000107"  [label="CFG: "];
"1000105" -> "1000104"  [label="AST: "];
"1000107" -> "1000104"  [label="AST: "];
"1000119" -> "1000104"  [label="CFG: "];
"1000104" -> "1000131"  [label="DDG: __func__ << \\" buffer.id()= \\" << buffer.id()\n            << \\" buffer.size()= \\" << buffer.size() << \\"B\\""];
"1000104" -> "1000131"  [label="DDG: DVLOG(2) << __func__ << \\" buffer.id()= \\" << buffer.id()\n            << \\" buffer.size()= \\" << buffer.size() << \\"B\\""];
"1000104" -> "1000131"  [label="DDG: DVLOG(2)"];
"1000105" -> "1000104"  [label="DDG: 2"];
"1000107" -> "1000104"  [label="DDG: __func__"];
"1000107" -> "1000104"  [label="DDG: \\" buffer.id()= \\" << buffer.id()\n            << \\" buffer.size()= \\" << buffer.size() << \\"B\\""];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000106"  [label="CFG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000108" -> "1000105"  [label="CFG: "];
"1000105" -> "1000104"  [label="DDG: 2"];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000109" -> "1000131"  [label="DDG: buffer.id()\n            << \\" buffer.size()= \\" << buffer.size() << \\"B\\""];
"1000109" -> "1000107"  [label="DDG: \\" buffer.id()= \\""];
"1000109" -> "1000107"  [label="DDG: buffer.id()\n            << \\" buffer.size()= \\" << buffer.size() << \\"B\\""];
"1000111" -> "1000109"  [label="DDG: buffer.id()"];
"1000111" -> "1000109"  [label="DDG: \\" buffer.size()= \\" << buffer.size() << \\"B\\""];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000108"  [label="CFG: "];
"1000112" -> "1000110"  [label="CFG: "];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000113"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000113" -> "1000111"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000111" -> "1000131"  [label="DDG: \\" buffer.size()= \\" << buffer.size() << \\"B\\""];
"1000111" -> "1000109"  [label="DDG: buffer.id()"];
"1000111" -> "1000109"  [label="DDG: \\" buffer.size()= \\" << buffer.size() << \\"B\\""];
"1000113" -> "1000111"  [label="DDG: \\" buffer.size()= \\""];
"1000113" -> "1000111"  [label="DDG: buffer.size() << \\"B\\""];
"1000112" -> "1000111"  [label="AST: "];
"1000112" -> "1000110"  [label="CFG: "];
"1000114" -> "1000112"  [label="CFG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000101"  [label="CFG: "];
"1000105" -> "1000106"  [label="CFG: "];
"1000113" -> "1000111"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000111" -> "1000113"  [label="CFG: "];
"1000113" -> "1000131"  [label="DDG: buffer.size() << \\"B\\""];
"1000113" -> "1000111"  [label="DDG: \\" buffer.size()= \\""];
"1000113" -> "1000111"  [label="DDG: buffer.size() << \\"B\\""];
"1000115" -> "1000113"  [label="DDG: buffer.size()"];
"1000115" -> "1000113"  [label="DDG: \\"B\\""];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000112"  [label="CFG: "];
"1000116" -> "1000114"  [label="CFG: "];
"1000115" -> "1000113"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000115" -> "1000113"  [label="DDG: buffer.size()"];
"1000115" -> "1000113"  [label="DDG: \\"B\\""];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000114"  [label="CFG: "];
"1000117" -> "1000116"  [label="CFG: "];
"1000117" -> "1000115"  [label="AST: "];
"1000117" -> "1000116"  [label="CFG: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000118" -> "1000103"  [label="AST: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000122" -> "1000118"  [label="CFG: "];
"1000118" -> "1000131"  [label="DDG: DCHECK_CALLED_ON_VALID_SEQUENCE(sequence_checker_)"];
"1000118" -> "1000131"  [label="DDG: sequence_checker_"];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000104"  [label="CFG: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000121" -> "1000103"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000128" -> "1000121"  [label="CFG: "];
"1000121" -> "1000131"  [label="DDG: mojo::WrapSharedMemoryHandle(\n      buffer.handle().Duplicate(), buffer.size(), true /* read_only */)"];
"1000123" -> "1000121"  [label="DDG: buffer.handle().Duplicate()"];
"1000123" -> "1000121"  [label="DDG: buffer.size()"];
"1000123" -> "1000121"  [label="DDG: true"];
"1000121" -> "1000129"  [label="DDG: buffer_handle"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000118"  [label="CFG: "];
"1000124" -> "1000122"  [label="CFG: "];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000126"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000126" -> "1000123"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000123" -> "1000131"  [label="DDG: buffer.size()"];
"1000123" -> "1000131"  [label="DDG: buffer.handle().Duplicate()"];
"1000123" -> "1000131"  [label="DDG: true"];
"1000123" -> "1000121"  [label="DDG: buffer.handle().Duplicate()"];
"1000123" -> "1000121"  [label="DDG: buffer.size()"];
"1000123" -> "1000121"  [label="DDG: true"];
"1000125" -> "1000123"  [label="AST: "];
"1000125" -> "1000124"  [label="CFG: "];
"1000126" -> "1000125"  [label="CFG: "];
"1000126" -> "1000123"  [label="AST: "];
"1000126" -> "1000125"  [label="CFG: "];
"1000123" -> "1000126"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000124" -> "1000122"  [label="CFG: "];
"1000125" -> "1000124"  [label="CFG: "];
}
