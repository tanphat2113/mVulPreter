digraph "1_profanity_8e75437a7e43d4c55e861691f74892e666e29b0b_0" {
"1000124" [label="(MethodReturn,RET)"];
"1000101" [label="(MethodParameterIn,void **state)"];
"1000157" [label="(MethodParameterOut,void **state)"];
"1000109" [label="(Call,stbbr_send(\n        \"<presence to='stabber@localhost' from='buddy1@localhost/mobile'>\"\n            \"<priority>10</priority>\"\n            \"<status>On my mobile</status>\"\n        \"</presence>\"\n    ))"];
"1000110" [label="(Literal,\"<presence to='stabber@localhost' from='buddy1@localhost/mobile'>\"\n            \"<priority>10</priority>\"\n            \"<status>On my mobile</status>\"\n        \"</presence>\")"];
"1000112" [label="(Call,prof_output_exact(\"Buddy1 (mobile) is online, \\"On my mobile\\"\"))"];
"1000113" [label="(Literal,\"Buddy1 (mobile) is online, \\"On my mobile\\"\")"];
"1000111" [label="(Call,assert_true(prof_output_exact(\"Buddy1 (mobile) is online, \\"On my mobile\\"\")))"];
"1000115" [label="(Literal,\"/msg Buddy1\")"];
"1000114" [label="(Call,prof_input(\"/msg Buddy1\"))"];
"1000117" [label="(Call,prof_output_exact(\"unencrypted\"))"];
"1000118" [label="(Literal,\"unencrypted\")"];
"1000116" [label="(Call,assert_true(prof_output_exact(\"unencrypted\")))"];
"1000102" [label="(Block,)"];
"1000119" [label="(Call,stbbr_send(\n        \"<message type='chat' to='stabber@localhost/profanity' from='buddy1@localhost'>\"\n             \"<received xmlns='urn:xmpp:carbons:2'>\"\n                 \"<forwarded xmlns='urn:xmpp:forward:0'>\"\n                     \"<message id='prof_msg_7' xmlns='jabber:client' type='chat' lang='en' to='stabber@localhost/profanity' from='buddy1@localhost/mobile'>\"\n                        \"<body>test carbon from recipient</body>\"\n                    \"</message>\"\n                \"</forwarded>\"\n            \"</received>\"\n        \"</message>\"\n    ))"];
"1000120" [label="(Literal,\"<message type='chat' to='stabber@localhost/profanity' from='buddy1@localhost'>\"\n             \"<received xmlns='urn:xmpp:carbons:2'>\"\n                 \"<forwarded xmlns='urn:xmpp:forward:0'>\"\n                     \"<message id='prof_msg_7' xmlns='jabber:client' type='chat' lang='en' to='stabber@localhost/profanity' from='buddy1@localhost/mobile'>\"\n                        \"<body>test carbon from recipient</body>\"\n                    \"</message>\"\n                \"</forwarded>\"\n            \"</received>\"\n        \"</message>\")"];
"1000104" [label="(Literal,\"/carbons on\")"];
"1000103" [label="(Call,prof_input(\"/carbons on\"))"];
"1000122" [label="(Call,prof_output_regex(\"Buddy1/mobile: .+test carbon from recipient\"))"];
"1000123" [label="(Literal,\"Buddy1/mobile: .+test carbon from recipient\")"];
"1000121" [label="(Call,assert_true(prof_output_regex(\"Buddy1/mobile: .+test carbon from recipient\")))"];
"1000105" [label="(Call,prof_connect())"];
"1000107" [label="(Call,stbbr_received(\n        \"<iq id='*' type='set'><enable xmlns='urn:xmpp:carbons:2'/></iq>\"\n    ))"];
"1000106" [label="(Call,assert_true(stbbr_received(\n        \"<iq id='*' type='set'><enable xmlns='urn:xmpp:carbons:2'/></iq>\"\n    )))"];
"1000108" [label="(Literal,\"<iq id='*' type='set'><enable xmlns='urn:xmpp:carbons:2'/></iq>\")"];
"1000124" -> "1000100"  [label="AST: "];
"1000124" -> "1000121"  [label="CFG: "];
"1000101" -> "1000100"  [label="AST: "];
"1000157" -> "1000100"  [label="AST: "];
"1000109" -> "1000102"  [label="AST: "];
"1000109" -> "1000110"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000113" -> "1000109"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000106"  [label="CFG: "];
"1000109" -> "1000110"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000112" -> "1000113"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000111" -> "1000112"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000109"  [label="CFG: "];
"1000112" -> "1000113"  [label="CFG: "];
"1000111" -> "1000102"  [label="AST: "];
"1000111" -> "1000112"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000115" -> "1000111"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000111"  [label="CFG: "];
"1000114" -> "1000115"  [label="CFG: "];
"1000114" -> "1000102"  [label="AST: "];
"1000114" -> "1000115"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000118" -> "1000114"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000116" -> "1000117"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000114"  [label="CFG: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000116" -> "1000102"  [label="AST: "];
"1000116" -> "1000117"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000120" -> "1000116"  [label="CFG: "];
"1000102" -> "1000100"  [label="AST: "];
"1000103" -> "1000102"  [label="AST: "];
"1000105" -> "1000102"  [label="AST: "];
"1000106" -> "1000102"  [label="AST: "];
"1000109" -> "1000102"  [label="AST: "];
"1000111" -> "1000102"  [label="AST: "];
"1000114" -> "1000102"  [label="AST: "];
"1000116" -> "1000102"  [label="AST: "];
"1000119" -> "1000102"  [label="AST: "];
"1000121" -> "1000102"  [label="AST: "];
"1000119" -> "1000102"  [label="AST: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000123" -> "1000119"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000120" -> "1000116"  [label="CFG: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000100"  [label="CFG: "];
"1000103" -> "1000104"  [label="CFG: "];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000104"  [label="CFG: "];
"1000104" -> "1000103"  [label="AST: "];
"1000105" -> "1000103"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000123"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000121" -> "1000122"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000119"  [label="CFG: "];
"1000122" -> "1000123"  [label="CFG: "];
"1000121" -> "1000102"  [label="AST: "];
"1000121" -> "1000122"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000124" -> "1000121"  [label="CFG: "];
"1000105" -> "1000102"  [label="AST: "];
"1000105" -> "1000103"  [label="CFG: "];
"1000108" -> "1000105"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000108"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000106" -> "1000102"  [label="AST: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000110" -> "1000106"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000105"  [label="CFG: "];
"1000107" -> "1000108"  [label="CFG: "];
}
