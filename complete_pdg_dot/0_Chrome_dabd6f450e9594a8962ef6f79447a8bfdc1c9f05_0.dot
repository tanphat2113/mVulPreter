digraph "0_Chrome_dabd6f450e9594a8962ef6f79447a8bfdc1c9f05_0" {
"1000151" [label="(MethodReturn,void)"];
"1000101" [label="(MethodParameterIn,int max_width)"];
"1000240" [label="(MethodParameterOut,int max_width)"];
"1000102" [label="(Block,)"];
"1000128" [label="(Call,std::max(label_width, font_.GetStringWidth(*iter)))"];
"1000129" [label="(Identifier,label_width)"];
"1000126" [label="(Call,label_width = std::max(label_width, font_.GetStringWidth(*iter)))"];
"1000127" [label="(Identifier,label_width)"];
"1000130" [label="(Call,font_.GetStringWidth(*iter))"];
"1000131" [label="(Call,*iter)"];
"1000132" [label="(Identifier,iter)"];
"1000135" [label="(Call,GetInsets().width())"];
"1000133" [label="(Call,label_width += GetInsets().width())"];
"1000134" [label="(Identifier,label_width)"];
"1000139" [label="(Literal,0)"];
"1000136" [label="(ControlStructure,if (max_width > 0))"];
"1000137" [label="(Call,max_width > 0)"];
"1000138" [label="(Identifier,max_width)"];
"1000142" [label="(Call,std::min(label_width, max_width))"];
"1000143" [label="(Identifier,label_width)"];
"1000140" [label="(Call,label_width = std::min(label_width, max_width))"];
"1000141" [label="(Identifier,label_width)"];
"1000144" [label="(Identifier,max_width)"];
"1000146" [label="(Call,x())"];
"1000147" [label="(Call,y())"];
"1000145" [label="(Call,SetBounds(x(), y(), label_width, 0))"];
"1000148" [label="(Identifier,label_width)"];
"1000149" [label="(Literal,0)"];
"1000150" [label="(Call,SizeToPreferredSize())"];
"1000104" [label="(Identifier,is_multi_line_)"];
"1000103" [label="(Call,DCHECK(is_multi_line_))"];
"1000106" [label="(Call,base::SplitString(text_, '\n', &lines))"];
"1000107" [label="(Identifier,text_)"];
"1000108" [label="(Literal,'\n')"];
"1000109" [label="(Call,&lines)"];
"1000110" [label="(Identifier,lines)"];
"1000114" [label="(Literal,0)"];
"1000112" [label="(Call,label_width = 0)"];
"1000113" [label="(Identifier,label_width)"];
"1000115" [label="(ControlStructure,for (std::vector<string16>::const_iterator iter = lines.begin();\n        iter != lines.end(); ++iter))"];
"1000117" [label="(Call,iter = lines.begin())"];
"1000118" [label="(Identifier,iter)"];
"1000119" [label="(Call,lines.begin())"];
"1000122" [label="(Call,lines.end())"];
"1000123" [label="(Call,++iter)"];
"1000124" [label="(Identifier,iter)"];
"1000125" [label="(Block,)"];
"1000120" [label="(Call,iter != lines.end())"];
"1000121" [label="(Identifier,iter)"];
"1000151" -> "1000100"  [label="AST: "];
"1000151" -> "1000150"  [label="CFG: "];
"1000140" -> "1000151"  [label="DDG: std::min(label_width, max_width)"];
"1000106" -> "1000151"  [label="DDG: text_"];
"1000106" -> "1000151"  [label="DDG: base::SplitString(text_, '\n', &lines)"];
"1000106" -> "1000151"  [label="DDG: &lines"];
"1000103" -> "1000151"  [label="DDG: is_multi_line_"];
"1000103" -> "1000151"  [label="DDG: DCHECK(is_multi_line_)"];
"1000120" -> "1000151"  [label="DDG: iter"];
"1000120" -> "1000151"  [label="DDG: iter != lines.end()"];
"1000120" -> "1000151"  [label="DDG: lines.end()"];
"1000145" -> "1000151"  [label="DDG: label_width"];
"1000145" -> "1000151"  [label="DDG: x()"];
"1000145" -> "1000151"  [label="DDG: y()"];
"1000145" -> "1000151"  [label="DDG: SetBounds(x(), y(), label_width, 0)"];
"1000150" -> "1000151"  [label="DDG: SizeToPreferredSize()"];
"1000117" -> "1000151"  [label="DDG: lines.begin()"];
"1000130" -> "1000151"  [label="DDG: *iter"];
"1000128" -> "1000151"  [label="DDG: font_.GetStringWidth(*iter)"];
"1000142" -> "1000151"  [label="DDG: max_width"];
"1000133" -> "1000151"  [label="DDG: GetInsets().width()"];
"1000101" -> "1000151"  [label="DDG: max_width"];
"1000126" -> "1000151"  [label="DDG: std::max(label_width, font_.GetStringWidth(*iter))"];
"1000137" -> "1000151"  [label="DDG: max_width"];
"1000137" -> "1000151"  [label="DDG: max_width > 0"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000151"  [label="DDG: max_width"];
"1000101" -> "1000137"  [label="DDG: max_width"];
"1000101" -> "1000142"  [label="DDG: max_width"];
"1000240" -> "1000100"  [label="AST: "];
"1000102" -> "1000100"  [label="AST: "];
"1000103" -> "1000102"  [label="AST: "];
"1000105" -> "1000102"  [label="AST: "];
"1000106" -> "1000102"  [label="AST: "];
"1000111" -> "1000102"  [label="AST: "];
"1000112" -> "1000102"  [label="AST: "];
"1000115" -> "1000102"  [label="AST: "];
"1000133" -> "1000102"  [label="AST: "];
"1000136" -> "1000102"  [label="AST: "];
"1000145" -> "1000102"  [label="AST: "];
"1000150" -> "1000102"  [label="AST: "];
"1000128" -> "1000126"  [label="AST: "];
"1000128" -> "1000130"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000128"  [label="AST: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000128" -> "1000151"  [label="DDG: font_.GetStringWidth(*iter)"];
"1000128" -> "1000126"  [label="DDG: label_width"];
"1000128" -> "1000126"  [label="DDG: font_.GetStringWidth(*iter)"];
"1000126" -> "1000128"  [label="DDG: label_width"];
"1000112" -> "1000128"  [label="DDG: label_width"];
"1000130" -> "1000128"  [label="DDG: *iter"];
"1000129" -> "1000128"  [label="AST: "];
"1000129" -> "1000127"  [label="CFG: "];
"1000132" -> "1000129"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000128" -> "1000126"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000126" -> "1000151"  [label="DDG: std::max(label_width, font_.GetStringWidth(*iter))"];
"1000128" -> "1000126"  [label="DDG: label_width"];
"1000128" -> "1000126"  [label="DDG: font_.GetStringWidth(*iter)"];
"1000126" -> "1000128"  [label="DDG: label_width"];
"1000126" -> "1000133"  [label="DDG: label_width"];
"1000127" -> "1000126"  [label="AST: "];
"1000127" -> "1000120"  [label="CFG: "];
"1000129" -> "1000127"  [label="CFG: "];
"1000130" -> "1000128"  [label="AST: "];
"1000130" -> "1000131"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000128" -> "1000130"  [label="CFG: "];
"1000130" -> "1000151"  [label="DDG: *iter"];
"1000130" -> "1000128"  [label="DDG: *iter"];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000132"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000130" -> "1000131"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000129"  [label="CFG: "];
"1000131" -> "1000132"  [label="CFG: "];
"1000135" -> "1000133"  [label="AST: "];
"1000135" -> "1000134"  [label="CFG: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000133" -> "1000102"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000138" -> "1000133"  [label="CFG: "];
"1000133" -> "1000151"  [label="DDG: GetInsets().width()"];
"1000126" -> "1000133"  [label="DDG: label_width"];
"1000112" -> "1000133"  [label="DDG: label_width"];
"1000133" -> "1000142"  [label="DDG: label_width"];
"1000133" -> "1000145"  [label="DDG: label_width"];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000120"  [label="CFG: "];
"1000135" -> "1000134"  [label="CFG: "];
"1000139" -> "1000137"  [label="AST: "];
"1000139" -> "1000138"  [label="CFG: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000136" -> "1000102"  [label="AST: "];
"1000137" -> "1000136"  [label="AST: "];
"1000140" -> "1000136"  [label="AST: "];
"1000137" -> "1000136"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000141" -> "1000137"  [label="CFG: "];
"1000146" -> "1000137"  [label="CFG: "];
"1000137" -> "1000151"  [label="DDG: max_width"];
"1000137" -> "1000151"  [label="DDG: max_width > 0"];
"1000101" -> "1000137"  [label="DDG: max_width"];
"1000137" -> "1000142"  [label="DDG: max_width"];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000133"  [label="CFG: "];
"1000139" -> "1000138"  [label="CFG: "];
"1000142" -> "1000140"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000142" -> "1000151"  [label="DDG: max_width"];
"1000142" -> "1000140"  [label="DDG: label_width"];
"1000142" -> "1000140"  [label="DDG: max_width"];
"1000133" -> "1000142"  [label="DDG: label_width"];
"1000137" -> "1000142"  [label="DDG: max_width"];
"1000101" -> "1000142"  [label="DDG: max_width"];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000141"  [label="CFG: "];
"1000144" -> "1000143"  [label="CFG: "];
"1000140" -> "1000136"  [label="AST: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000142" -> "1000140"  [label="AST: "];
"1000146" -> "1000140"  [label="CFG: "];
"1000140" -> "1000151"  [label="DDG: std::min(label_width, max_width)"];
"1000142" -> "1000140"  [label="DDG: label_width"];
"1000142" -> "1000140"  [label="DDG: max_width"];
"1000140" -> "1000145"  [label="DDG: label_width"];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000137"  [label="CFG: "];
"1000143" -> "1000141"  [label="CFG: "];
"1000144" -> "1000142"  [label="AST: "];
"1000144" -> "1000143"  [label="CFG: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000140"  [label="CFG: "];
"1000146" -> "1000137"  [label="CFG: "];
"1000147" -> "1000146"  [label="CFG: "];
"1000147" -> "1000145"  [label="AST: "];
"1000147" -> "1000146"  [label="CFG: "];
"1000148" -> "1000147"  [label="CFG: "];
"1000145" -> "1000102"  [label="AST: "];
"1000145" -> "1000149"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000148" -> "1000145"  [label="AST: "];
"1000149" -> "1000145"  [label="AST: "];
"1000150" -> "1000145"  [label="CFG: "];
"1000145" -> "1000151"  [label="DDG: label_width"];
"1000145" -> "1000151"  [label="DDG: x()"];
"1000145" -> "1000151"  [label="DDG: y()"];
"1000145" -> "1000151"  [label="DDG: SetBounds(x(), y(), label_width, 0)"];
"1000140" -> "1000145"  [label="DDG: label_width"];
"1000133" -> "1000145"  [label="DDG: label_width"];
"1000148" -> "1000145"  [label="AST: "];
"1000148" -> "1000147"  [label="CFG: "];
"1000149" -> "1000148"  [label="CFG: "];
"1000149" -> "1000145"  [label="AST: "];
"1000149" -> "1000148"  [label="CFG: "];
"1000145" -> "1000149"  [label="CFG: "];
"1000150" -> "1000102"  [label="AST: "];
"1000150" -> "1000145"  [label="CFG: "];
"1000151" -> "1000150"  [label="CFG: "];
"1000150" -> "1000151"  [label="DDG: SizeToPreferredSize()"];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000100"  [label="CFG: "];
"1000103" -> "1000104"  [label="CFG: "];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000104"  [label="CFG: "];
"1000104" -> "1000103"  [label="AST: "];
"1000107" -> "1000103"  [label="CFG: "];
"1000103" -> "1000151"  [label="DDG: is_multi_line_"];
"1000103" -> "1000151"  [label="DDG: DCHECK(is_multi_line_)"];
"1000106" -> "1000102"  [label="AST: "];
"1000106" -> "1000109"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000108" -> "1000106"  [label="AST: "];
"1000109" -> "1000106"  [label="AST: "];
"1000113" -> "1000106"  [label="CFG: "];
"1000106" -> "1000151"  [label="DDG: text_"];
"1000106" -> "1000151"  [label="DDG: base::SplitString(text_, '\n', &lines)"];
"1000106" -> "1000151"  [label="DDG: &lines"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000103"  [label="CFG: "];
"1000108" -> "1000107"  [label="CFG: "];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000107"  [label="CFG: "];
"1000110" -> "1000108"  [label="CFG: "];
"1000109" -> "1000106"  [label="AST: "];
"1000109" -> "1000110"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000106" -> "1000109"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000108"  [label="CFG: "];
"1000109" -> "1000110"  [label="CFG: "];
"1000114" -> "1000112"  [label="AST: "];
"1000114" -> "1000113"  [label="CFG: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000112" -> "1000102"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000118" -> "1000112"  [label="CFG: "];
"1000112" -> "1000128"  [label="DDG: label_width"];
"1000112" -> "1000133"  [label="DDG: label_width"];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000106"  [label="CFG: "];
"1000114" -> "1000113"  [label="CFG: "];
"1000115" -> "1000102"  [label="AST: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000120" -> "1000115"  [label="AST: "];
"1000123" -> "1000115"  [label="AST: "];
"1000125" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000121" -> "1000117"  [label="CFG: "];
"1000117" -> "1000151"  [label="DDG: lines.begin()"];
"1000117" -> "1000120"  [label="DDG: iter"];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000112"  [label="CFG: "];
"1000119" -> "1000118"  [label="CFG: "];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000118"  [label="CFG: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000122" -> "1000120"  [label="AST: "];
"1000122" -> "1000121"  [label="CFG: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000123" -> "1000115"  [label="AST: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000123" -> "1000120"  [label="DDG: iter"];
"1000120" -> "1000123"  [label="DDG: iter"];
"1000124" -> "1000123"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000125" -> "1000115"  [label="AST: "];
"1000126" -> "1000125"  [label="AST: "];
"1000120" -> "1000115"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000122" -> "1000120"  [label="AST: "];
"1000127" -> "1000120"  [label="CFG: "];
"1000134" -> "1000120"  [label="CFG: "];
"1000120" -> "1000151"  [label="DDG: iter"];
"1000120" -> "1000151"  [label="DDG: iter != lines.end()"];
"1000120" -> "1000151"  [label="DDG: lines.end()"];
"1000117" -> "1000120"  [label="DDG: iter"];
"1000123" -> "1000120"  [label="DDG: iter"];
"1000120" -> "1000123"  [label="DDG: iter"];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000117"  [label="CFG: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="CFG: "];
}
