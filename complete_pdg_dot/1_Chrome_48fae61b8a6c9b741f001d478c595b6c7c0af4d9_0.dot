digraph "1_Chrome_48fae61b8a6c9b741f001d478c595b6c7c0af4d9_0" {
"1000156" [label="(MethodReturn,bool)"];
"1000101" [label="(MethodParameterIn,sandbox::TargetPolicy* policy)"];
"1000223" [label="(MethodParameterOut,sandbox::TargetPolicy* policy)"];
"1000102" [label="(Block,)"];
"1000113" [label="(Identifier,sandbox::SBOX_ALL_OK)"];
"1000110" [label="(ControlStructure,if (result != sandbox::SBOX_ALL_OK))"];
"1000111" [label="(Call,result != sandbox::SBOX_ALL_OK)"];
"1000112" [label="(Identifier,result)"];
"1000115" [label="(Identifier,false)"];
"1000114" [label="(Return,return false;)"];
"1000116" [label="(Call,policy->SetJobLevel(sandbox::JOB_LOCKDOWN, 0))"];
"1000117" [label="(Identifier,sandbox::JOB_LOCKDOWN)"];
"1000118" [label="(Literal,0)"];
"1000120" [label="(Call,initial_token = sandbox::USER_UNPROTECTED)"];
"1000121" [label="(Identifier,initial_token)"];
"1000122" [label="(Identifier,sandbox::USER_UNPROTECTED)"];
"1000123" [label="(ControlStructure,if (base::win::GetVersion() > base::win::VERSION_XP))"];
"1000126" [label="(Identifier,base::win::VERSION_XP)"];
"1000127" [label="(Block,)"];
"1000124" [label="(Call,base::win::GetVersion() > base::win::VERSION_XP)"];
"1000125" [label="(Call,base::win::GetVersion())"];
"1000130" [label="(Identifier,sandbox::USER_RESTRICTED_SAME_ACCESS)"];
"1000128" [label="(Call,initial_token = sandbox::USER_RESTRICTED_SAME_ACCESS)"];
"1000129" [label="(Identifier,initial_token)"];
"1000132" [label="(Identifier,initial_token)"];
"1000131" [label="(Call,policy->SetTokenLevel(initial_token, sandbox::USER_LOCKDOWN))"];
"1000133" [label="(Identifier,sandbox::USER_LOCKDOWN)"];
"1000134" [label="(Call,policy->SetDelayedIntegrityLevel(sandbox::INTEGRITY_LEVEL_LOW))"];
"1000135" [label="(Identifier,sandbox::INTEGRITY_LEVEL_LOW)"];
"1000139" [label="(Call,!CommandLine::ForCurrentProcess()->HasSwitch(\n                         switches::kDisableAltWinstation))"];
"1000140" [label="(Call,CommandLine::ForCurrentProcess()->HasSwitch(\n                         switches::kDisableAltWinstation))"];
"1000137" [label="(Call,use_winsta = !CommandLine::ForCurrentProcess()->HasSwitch(\n                         switches::kDisableAltWinstation))"];
"1000138" [label="(Identifier,use_winsta)"];
"1000141" [label="(Identifier,switches::kDisableAltWinstation)"];
"1000142" [label="(ControlStructure,if (sandbox::SBOX_ALL_OK !=  policy->SetAlternateDesktop(use_winsta)))"];
"1000145" [label="(Call,policy->SetAlternateDesktop(use_winsta))"];
"1000146" [label="(Identifier,use_winsta)"];
"1000143" [label="(Call,sandbox::SBOX_ALL_OK !=  policy->SetAlternateDesktop(use_winsta))"];
"1000144" [label="(Identifier,sandbox::SBOX_ALL_OK)"];
"1000147" [label="(Block,)"];
"1000151" [label="(Literal,\"Failed to apply desktop security to the renderer\")"];
"1000148" [label="(Call,DLOG(WARNING) << \"Failed to apply desktop security to the renderer\")"];
"1000149" [label="(Call,DLOG(WARNING))"];
"1000150" [label="(Identifier,WARNING)"];
"1000152" [label="(Call,AddGenericDllEvictionPolicy(policy))"];
"1000153" [label="(Identifier,policy)"];
"1000154" [label="(Return,return true;)"];
"1000155" [label="(Identifier,true)"];
"1000107" [label="(Identifier,sandbox::SBOX_ALL_OK)"];
"1000104" [label="(ControlStructure,if (result != sandbox::SBOX_ALL_OK))"];
"1000105" [label="(Call,result != sandbox::SBOX_ALL_OK)"];
"1000106" [label="(Identifier,result)"];
"1000109" [label="(Identifier,false)"];
"1000108" [label="(Return,return false;)"];
"1000156" -> "1000100"  [label="AST: "];
"1000156" -> "1000108"  [label="CFG: "];
"1000156" -> "1000114"  [label="CFG: "];
"1000156" -> "1000154"  [label="CFG: "];
"1000108" -> "1000156"  [label="DDG: <RET>"];
"1000116" -> "1000156"  [label="DDG: sandbox::JOB_LOCKDOWN"];
"1000116" -> "1000156"  [label="DDG: policy->SetJobLevel(sandbox::JOB_LOCKDOWN, 0)"];
"1000124" -> "1000156"  [label="DDG: base::win::GetVersion()"];
"1000124" -> "1000156"  [label="DDG: base::win::VERSION_XP"];
"1000124" -> "1000156"  [label="DDG: base::win::GetVersion() > base::win::VERSION_XP"];
"1000105" -> "1000156"  [label="DDG: sandbox::SBOX_ALL_OK"];
"1000105" -> "1000156"  [label="DDG: result != sandbox::SBOX_ALL_OK"];
"1000105" -> "1000156"  [label="DDG: result"];
"1000152" -> "1000156"  [label="DDG: policy"];
"1000152" -> "1000156"  [label="DDG: AddGenericDllEvictionPolicy(policy)"];
"1000149" -> "1000156"  [label="DDG: WARNING"];
"1000145" -> "1000156"  [label="DDG: use_winsta"];
"1000128" -> "1000156"  [label="DDG: sandbox::USER_RESTRICTED_SAME_ACCESS"];
"1000131" -> "1000156"  [label="DDG: initial_token"];
"1000131" -> "1000156"  [label="DDG: sandbox::USER_LOCKDOWN"];
"1000131" -> "1000156"  [label="DDG: policy->SetTokenLevel(initial_token, sandbox::USER_LOCKDOWN)"];
"1000140" -> "1000156"  [label="DDG: switches::kDisableAltWinstation"];
"1000137" -> "1000156"  [label="DDG: !CommandLine::ForCurrentProcess()->HasSwitch(\n                         switches::kDisableAltWinstation)"];
"1000139" -> "1000156"  [label="DDG: CommandLine::ForCurrentProcess()->HasSwitch(\n                         switches::kDisableAltWinstation)"];
"1000143" -> "1000156"  [label="DDG: sandbox::SBOX_ALL_OK"];
"1000143" -> "1000156"  [label="DDG: sandbox::SBOX_ALL_OK !=  policy->SetAlternateDesktop(use_winsta)"];
"1000143" -> "1000156"  [label="DDG: policy->SetAlternateDesktop(use_winsta)"];
"1000134" -> "1000156"  [label="DDG: policy->SetDelayedIntegrityLevel(sandbox::INTEGRITY_LEVEL_LOW)"];
"1000134" -> "1000156"  [label="DDG: sandbox::INTEGRITY_LEVEL_LOW"];
"1000148" -> "1000156"  [label="DDG: DLOG(WARNING)"];
"1000148" -> "1000156"  [label="DDG: DLOG(WARNING) << \\"Failed to apply desktop security to the renderer\\""];
"1000111" -> "1000156"  [label="DDG: result"];
"1000111" -> "1000156"  [label="DDG: sandbox::SBOX_ALL_OK"];
"1000111" -> "1000156"  [label="DDG: result != sandbox::SBOX_ALL_OK"];
"1000101" -> "1000156"  [label="DDG: policy"];
"1000120" -> "1000156"  [label="DDG: sandbox::USER_UNPROTECTED"];
"1000114" -> "1000156"  [label="DDG: <RET>"];
"1000154" -> "1000156"  [label="DDG: <RET>"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000156"  [label="DDG: policy"];
"1000101" -> "1000152"  [label="DDG: policy"];
"1000223" -> "1000100"  [label="AST: "];
"1000102" -> "1000100"  [label="AST: "];
"1000103" -> "1000102"  [label="AST: "];
"1000104" -> "1000102"  [label="AST: "];
"1000110" -> "1000102"  [label="AST: "];
"1000116" -> "1000102"  [label="AST: "];
"1000119" -> "1000102"  [label="AST: "];
"1000120" -> "1000102"  [label="AST: "];
"1000123" -> "1000102"  [label="AST: "];
"1000131" -> "1000102"  [label="AST: "];
"1000134" -> "1000102"  [label="AST: "];
"1000136" -> "1000102"  [label="AST: "];
"1000137" -> "1000102"  [label="AST: "];
"1000142" -> "1000102"  [label="AST: "];
"1000152" -> "1000102"  [label="AST: "];
"1000154" -> "1000102"  [label="AST: "];
"1000113" -> "1000111"  [label="AST: "];
"1000113" -> "1000112"  [label="CFG: "];
"1000111" -> "1000113"  [label="CFG: "];
"1000110" -> "1000102"  [label="AST: "];
"1000111" -> "1000110"  [label="AST: "];
"1000114" -> "1000110"  [label="AST: "];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000113"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000113" -> "1000111"  [label="AST: "];
"1000115" -> "1000111"  [label="CFG: "];
"1000117" -> "1000111"  [label="CFG: "];
"1000111" -> "1000156"  [label="DDG: result"];
"1000111" -> "1000156"  [label="DDG: sandbox::SBOX_ALL_OK"];
"1000111" -> "1000156"  [label="DDG: result != sandbox::SBOX_ALL_OK"];
"1000105" -> "1000111"  [label="DDG: result"];
"1000105" -> "1000111"  [label="DDG: sandbox::SBOX_ALL_OK"];
"1000111" -> "1000143"  [label="DDG: sandbox::SBOX_ALL_OK"];
"1000112" -> "1000111"  [label="AST: "];
"1000112" -> "1000105"  [label="CFG: "];
"1000113" -> "1000112"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000111"  [label="CFG: "];
"1000114" -> "1000115"  [label="CFG: "];
"1000115" -> "1000114"  [label="DDG: false"];
"1000114" -> "1000110"  [label="AST: "];
"1000114" -> "1000115"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000156" -> "1000114"  [label="CFG: "];
"1000114" -> "1000156"  [label="DDG: <RET>"];
"1000115" -> "1000114"  [label="DDG: false"];
"1000116" -> "1000102"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000121" -> "1000116"  [label="CFG: "];
"1000116" -> "1000156"  [label="DDG: sandbox::JOB_LOCKDOWN"];
"1000116" -> "1000156"  [label="DDG: policy->SetJobLevel(sandbox::JOB_LOCKDOWN, 0)"];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1000111"  [label="CFG: "];
"1000118" -> "1000117"  [label="CFG: "];
"1000118" -> "1000116"  [label="AST: "];
"1000118" -> "1000117"  [label="CFG: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000120" -> "1000102"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000122" -> "1000120"  [label="AST: "];
"1000125" -> "1000120"  [label="CFG: "];
"1000120" -> "1000156"  [label="DDG: sandbox::USER_UNPROTECTED"];
"1000120" -> "1000131"  [label="DDG: initial_token"];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000116"  [label="CFG: "];
"1000122" -> "1000121"  [label="CFG: "];
"1000122" -> "1000120"  [label="AST: "];
"1000122" -> "1000121"  [label="CFG: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000123" -> "1000102"  [label="AST: "];
"1000124" -> "1000123"  [label="AST: "];
"1000127" -> "1000123"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000126" -> "1000125"  [label="CFG: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000127" -> "1000123"  [label="AST: "];
"1000128" -> "1000127"  [label="AST: "];
"1000124" -> "1000123"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000129" -> "1000124"  [label="CFG: "];
"1000132" -> "1000124"  [label="CFG: "];
"1000124" -> "1000156"  [label="DDG: base::win::GetVersion()"];
"1000124" -> "1000156"  [label="DDG: base::win::VERSION_XP"];
"1000124" -> "1000156"  [label="DDG: base::win::GetVersion() > base::win::VERSION_XP"];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000120"  [label="CFG: "];
"1000126" -> "1000125"  [label="CFG: "];
"1000130" -> "1000128"  [label="AST: "];
"1000130" -> "1000129"  [label="CFG: "];
"1000128" -> "1000130"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000130"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000128"  [label="AST: "];
"1000132" -> "1000128"  [label="CFG: "];
"1000128" -> "1000156"  [label="DDG: sandbox::USER_RESTRICTED_SAME_ACCESS"];
"1000128" -> "1000131"  [label="DDG: initial_token"];
"1000129" -> "1000128"  [label="AST: "];
"1000129" -> "1000124"  [label="CFG: "];
"1000130" -> "1000129"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000128"  [label="CFG: "];
"1000132" -> "1000124"  [label="CFG: "];
"1000133" -> "1000132"  [label="CFG: "];
"1000131" -> "1000102"  [label="AST: "];
"1000131" -> "1000133"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="AST: "];
"1000135" -> "1000131"  [label="CFG: "];
"1000131" -> "1000156"  [label="DDG: initial_token"];
"1000131" -> "1000156"  [label="DDG: sandbox::USER_LOCKDOWN"];
"1000131" -> "1000156"  [label="DDG: policy->SetTokenLevel(initial_token, sandbox::USER_LOCKDOWN)"];
"1000128" -> "1000131"  [label="DDG: initial_token"];
"1000120" -> "1000131"  [label="DDG: initial_token"];
"1000133" -> "1000131"  [label="AST: "];
"1000133" -> "1000132"  [label="CFG: "];
"1000131" -> "1000133"  [label="CFG: "];
"1000134" -> "1000102"  [label="AST: "];
"1000134" -> "1000135"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000138" -> "1000134"  [label="CFG: "];
"1000134" -> "1000156"  [label="DDG: policy->SetDelayedIntegrityLevel(sandbox::INTEGRITY_LEVEL_LOW)"];
"1000134" -> "1000156"  [label="DDG: sandbox::INTEGRITY_LEVEL_LOW"];
"1000135" -> "1000134"  [label="AST: "];
"1000135" -> "1000131"  [label="CFG: "];
"1000134" -> "1000135"  [label="CFG: "];
"1000139" -> "1000137"  [label="AST: "];
"1000139" -> "1000140"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000139" -> "1000156"  [label="DDG: CommandLine::ForCurrentProcess()->HasSwitch(\n                         switches::kDisableAltWinstation)"];
"1000139" -> "1000137"  [label="DDG: CommandLine::ForCurrentProcess()->HasSwitch(\n                         switches::kDisableAltWinstation)"];
"1000140" -> "1000139"  [label="DDG: switches::kDisableAltWinstation"];
"1000140" -> "1000139"  [label="AST: "];
"1000140" -> "1000141"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000139" -> "1000140"  [label="CFG: "];
"1000140" -> "1000156"  [label="DDG: switches::kDisableAltWinstation"];
"1000140" -> "1000139"  [label="DDG: switches::kDisableAltWinstation"];
"1000137" -> "1000102"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000144" -> "1000137"  [label="CFG: "];
"1000137" -> "1000156"  [label="DDG: !CommandLine::ForCurrentProcess()->HasSwitch(\n                         switches::kDisableAltWinstation)"];
"1000139" -> "1000137"  [label="DDG: CommandLine::ForCurrentProcess()->HasSwitch(\n                         switches::kDisableAltWinstation)"];
"1000137" -> "1000145"  [label="DDG: use_winsta"];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000134"  [label="CFG: "];
"1000141" -> "1000138"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000138"  [label="CFG: "];
"1000140" -> "1000141"  [label="CFG: "];
"1000142" -> "1000102"  [label="AST: "];
"1000143" -> "1000142"  [label="AST: "];
"1000147" -> "1000142"  [label="AST: "];
"1000145" -> "1000143"  [label="AST: "];
"1000145" -> "1000146"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000145" -> "1000156"  [label="DDG: use_winsta"];
"1000145" -> "1000143"  [label="DDG: use_winsta"];
"1000137" -> "1000145"  [label="DDG: use_winsta"];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000144"  [label="CFG: "];
"1000145" -> "1000146"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000145" -> "1000143"  [label="AST: "];
"1000150" -> "1000143"  [label="CFG: "];
"1000153" -> "1000143"  [label="CFG: "];
"1000143" -> "1000156"  [label="DDG: sandbox::SBOX_ALL_OK"];
"1000143" -> "1000156"  [label="DDG: sandbox::SBOX_ALL_OK !=  policy->SetAlternateDesktop(use_winsta)"];
"1000143" -> "1000156"  [label="DDG: policy->SetAlternateDesktop(use_winsta)"];
"1000111" -> "1000143"  [label="DDG: sandbox::SBOX_ALL_OK"];
"1000145" -> "1000143"  [label="DDG: use_winsta"];
"1000144" -> "1000143"  [label="AST: "];
"1000144" -> "1000137"  [label="CFG: "];
"1000146" -> "1000144"  [label="CFG: "];
"1000147" -> "1000142"  [label="AST: "];
"1000148" -> "1000147"  [label="AST: "];
"1000151" -> "1000148"  [label="AST: "];
"1000151" -> "1000149"  [label="CFG: "];
"1000148" -> "1000151"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000148" -> "1000151"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000151" -> "1000148"  [label="AST: "];
"1000153" -> "1000148"  [label="CFG: "];
"1000148" -> "1000156"  [label="DDG: DLOG(WARNING)"];
"1000148" -> "1000156"  [label="DDG: DLOG(WARNING) << \\"Failed to apply desktop security to the renderer\\""];
"1000149" -> "1000148"  [label="DDG: WARNING"];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="CFG: "];
"1000149" -> "1000156"  [label="DDG: WARNING"];
"1000149" -> "1000148"  [label="DDG: WARNING"];
"1000150" -> "1000149"  [label="AST: "];
"1000150" -> "1000143"  [label="CFG: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000152" -> "1000102"  [label="AST: "];
"1000152" -> "1000153"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000155" -> "1000152"  [label="CFG: "];
"1000152" -> "1000156"  [label="DDG: policy"];
"1000152" -> "1000156"  [label="DDG: AddGenericDllEvictionPolicy(policy)"];
"1000101" -> "1000152"  [label="DDG: policy"];
"1000153" -> "1000152"  [label="AST: "];
"1000153" -> "1000148"  [label="CFG: "];
"1000153" -> "1000143"  [label="CFG: "];
"1000152" -> "1000153"  [label="CFG: "];
"1000154" -> "1000102"  [label="AST: "];
"1000154" -> "1000155"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000156" -> "1000154"  [label="CFG: "];
"1000154" -> "1000156"  [label="DDG: <RET>"];
"1000155" -> "1000154"  [label="DDG: true"];
"1000155" -> "1000154"  [label="AST: "];
"1000155" -> "1000152"  [label="CFG: "];
"1000154" -> "1000155"  [label="CFG: "];
"1000155" -> "1000154"  [label="DDG: true"];
"1000107" -> "1000105"  [label="AST: "];
"1000107" -> "1000106"  [label="CFG: "];
"1000105" -> "1000107"  [label="CFG: "];
"1000104" -> "1000102"  [label="AST: "];
"1000105" -> "1000104"  [label="AST: "];
"1000108" -> "1000104"  [label="AST: "];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000107"  [label="CFG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000107" -> "1000105"  [label="AST: "];
"1000109" -> "1000105"  [label="CFG: "];
"1000112" -> "1000105"  [label="CFG: "];
"1000105" -> "1000156"  [label="DDG: sandbox::SBOX_ALL_OK"];
"1000105" -> "1000156"  [label="DDG: result != sandbox::SBOX_ALL_OK"];
"1000105" -> "1000156"  [label="DDG: result"];
"1000105" -> "1000111"  [label="DDG: result"];
"1000105" -> "1000111"  [label="DDG: sandbox::SBOX_ALL_OK"];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000100"  [label="CFG: "];
"1000107" -> "1000106"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000105"  [label="CFG: "];
"1000108" -> "1000109"  [label="CFG: "];
"1000109" -> "1000108"  [label="DDG: false"];
"1000108" -> "1000104"  [label="AST: "];
"1000108" -> "1000109"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000156" -> "1000108"  [label="CFG: "];
"1000108" -> "1000156"  [label="DDG: <RET>"];
"1000109" -> "1000108"  [label="DDG: false"];
}
