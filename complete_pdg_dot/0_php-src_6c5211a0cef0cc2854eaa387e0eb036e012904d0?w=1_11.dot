digraph "0_php-src_6c5211a0cef0cc2854eaa387e0eb036e012904d0?w=1_11" {
"1000138" [label="(MethodReturn,RET)"];
"1000101" [label="(MethodParameterIn,mcrypt_module_get_supported_key_sizes)"];
"1000193" [label="(MethodParameterOut,mcrypt_module_get_supported_key_sizes)"];
"1000120" [label="(ControlStructure,for (i = 0; i < count; i++))"];
"1000123" [label="(Literal,0)"];
"1000124" [label="(Call,i < count)"];
"1000125" [label="(Identifier,i)"];
"1000126" [label="(Identifier,count)"];
"1000127" [label="(Call,i++)"];
"1000128" [label="(Identifier,i)"];
"1000129" [label="(Block,)"];
"1000121" [label="(Call,i = 0)"];
"1000122" [label="(Identifier,i)"];
"1000131" [label="(Identifier,return_value)"];
"1000130" [label="(Call,add_index_long(return_value, i, key_sizes[i]))"];
"1000132" [label="(Identifier,i)"];
"1000133" [label="(Call,key_sizes[i])"];
"1000134" [label="(Identifier,key_sizes)"];
"1000135" [label="(Identifier,i)"];
"1000136" [label="(Call,mcrypt_free(key_sizes))"];
"1000137" [label="(Identifier,key_sizes)"];
"1000102" [label="(Block,)"];
"1000107" [label="(Literal,0)"];
"1000105" [label="(Call,count = 0)"];
"1000106" [label="(Identifier,count)"];
"1000109" [label="(Call,(algorithms_dir)\n \tarray_init(return_value))"];
"1000112" [label="(Identifier,return_value)"];
"1000111" [label="(Call,array_init(return_value))"];
"1000113" [label="(Call,key_sizes = mcrypt_module_get_algo_supported_key_sizes(module, dir, &count))"];
"1000114" [label="(Identifier,key_sizes)"];
"1000115" [label="(Call,mcrypt_module_get_algo_supported_key_sizes(module, dir, &count))"];
"1000116" [label="(Identifier,module)"];
"1000117" [label="(Identifier,dir)"];
"1000118" [label="(Call,&count)"];
"1000119" [label="(Identifier,count)"];
"1000138" -> "1000100"  [label="AST: "];
"1000138" -> "1000136"  [label="CFG: "];
"1000115" -> "1000138"  [label="DDG: dir"];
"1000115" -> "1000138"  [label="DDG: &count"];
"1000115" -> "1000138"  [label="DDG: module"];
"1000124" -> "1000138"  [label="DDG: i"];
"1000124" -> "1000138"  [label="DDG: count"];
"1000124" -> "1000138"  [label="DDG: i < count"];
"1000136" -> "1000138"  [label="DDG: mcrypt_free(key_sizes)"];
"1000136" -> "1000138"  [label="DDG: key_sizes"];
"1000130" -> "1000138"  [label="DDG: add_index_long(return_value, i, key_sizes[i])"];
"1000130" -> "1000138"  [label="DDG: key_sizes[i]"];
"1000130" -> "1000138"  [label="DDG: return_value"];
"1000113" -> "1000138"  [label="DDG: mcrypt_module_get_algo_supported_key_sizes(module, dir, &count)"];
"1000111" -> "1000138"  [label="DDG: return_value"];
"1000101" -> "1000138"  [label="DDG: <anonymous>"];
"1000109" -> "1000138"  [label="DDG: array_init(return_value)"];
"1000109" -> "1000138"  [label="DDG: (algorithms_dir)\n \tarray_init(return_value)"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000138"  [label="DDG: <anonymous>"];
"1000193" -> "1000100"  [label="AST: "];
"1000120" -> "1000102"  [label="AST: "];
"1000121" -> "1000120"  [label="AST: "];
"1000124" -> "1000120"  [label="AST: "];
"1000127" -> "1000120"  [label="AST: "];
"1000129" -> "1000120"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000122"  [label="CFG: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000124" -> "1000120"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000131" -> "1000124"  [label="CFG: "];
"1000137" -> "1000124"  [label="CFG: "];
"1000124" -> "1000138"  [label="DDG: i"];
"1000124" -> "1000138"  [label="DDG: count"];
"1000124" -> "1000138"  [label="DDG: i < count"];
"1000121" -> "1000124"  [label="DDG: i"];
"1000127" -> "1000124"  [label="DDG: i"];
"1000105" -> "1000124"  [label="DDG: count"];
"1000124" -> "1000130"  [label="DDG: i"];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000121"  [label="CFG: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="CFG: "];
"1000126" -> "1000124"  [label="AST: "];
"1000126" -> "1000125"  [label="CFG: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000127" -> "1000120"  [label="AST: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000127" -> "1000124"  [label="DDG: i"];
"1000130" -> "1000127"  [label="DDG: i"];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000130"  [label="CFG: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000129" -> "1000120"  [label="AST: "];
"1000130" -> "1000129"  [label="AST: "];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000125" -> "1000121"  [label="CFG: "];
"1000121" -> "1000124"  [label="DDG: i"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000113"  [label="CFG: "];
"1000123" -> "1000122"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000124"  [label="CFG: "];
"1000132" -> "1000131"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000133"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000133" -> "1000130"  [label="AST: "];
"1000128" -> "1000130"  [label="CFG: "];
"1000130" -> "1000138"  [label="DDG: add_index_long(return_value, i, key_sizes[i])"];
"1000130" -> "1000138"  [label="DDG: key_sizes[i]"];
"1000130" -> "1000138"  [label="DDG: return_value"];
"1000130" -> "1000127"  [label="DDG: i"];
"1000111" -> "1000130"  [label="DDG: return_value"];
"1000124" -> "1000130"  [label="DDG: i"];
"1000113" -> "1000130"  [label="DDG: key_sizes"];
"1000130" -> "1000136"  [label="DDG: key_sizes[i]"];
"1000132" -> "1000130"  [label="AST: "];
"1000132" -> "1000131"  [label="CFG: "];
"1000134" -> "1000132"  [label="CFG: "];
"1000133" -> "1000130"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000130" -> "1000133"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000132"  [label="CFG: "];
"1000135" -> "1000134"  [label="CFG: "];
"1000135" -> "1000133"  [label="AST: "];
"1000135" -> "1000134"  [label="CFG: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000136" -> "1000102"  [label="AST: "];
"1000136" -> "1000137"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="CFG: "];
"1000136" -> "1000138"  [label="DDG: mcrypt_free(key_sizes)"];
"1000136" -> "1000138"  [label="DDG: key_sizes"];
"1000113" -> "1000136"  [label="DDG: key_sizes"];
"1000130" -> "1000136"  [label="DDG: key_sizes[i]"];
"1000137" -> "1000136"  [label="AST: "];
"1000137" -> "1000124"  [label="CFG: "];
"1000136" -> "1000137"  [label="CFG: "];
"1000102" -> "1000100"  [label="AST: "];
"1000103" -> "1000102"  [label="AST: "];
"1000104" -> "1000102"  [label="AST: "];
"1000105" -> "1000102"  [label="AST: "];
"1000108" -> "1000102"  [label="AST: "];
"1000109" -> "1000102"  [label="AST: "];
"1000113" -> "1000102"  [label="AST: "];
"1000120" -> "1000102"  [label="AST: "];
"1000136" -> "1000102"  [label="AST: "];
"1000107" -> "1000105"  [label="AST: "];
"1000107" -> "1000106"  [label="CFG: "];
"1000105" -> "1000107"  [label="CFG: "];
"1000105" -> "1000102"  [label="AST: "];
"1000105" -> "1000107"  [label="CFG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000107" -> "1000105"  [label="AST: "];
"1000110" -> "1000105"  [label="CFG: "];
"1000105" -> "1000124"  [label="DDG: count"];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000100"  [label="CFG: "];
"1000107" -> "1000106"  [label="CFG: "];
"1000109" -> "1000102"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000114" -> "1000109"  [label="CFG: "];
"1000109" -> "1000138"  [label="DDG: array_init(return_value)"];
"1000109" -> "1000138"  [label="DDG: (algorithms_dir)\n \tarray_init(return_value)"];
"1000111" -> "1000109"  [label="DDG: return_value"];
"1000112" -> "1000111"  [label="AST: "];
"1000112" -> "1000110"  [label="CFG: "];
"1000111" -> "1000112"  [label="CFG: "];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000112"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000111" -> "1000138"  [label="DDG: return_value"];
"1000111" -> "1000109"  [label="DDG: return_value"];
"1000111" -> "1000130"  [label="DDG: return_value"];
"1000113" -> "1000102"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000122" -> "1000113"  [label="CFG: "];
"1000113" -> "1000138"  [label="DDG: mcrypt_module_get_algo_supported_key_sizes(module, dir, &count)"];
"1000115" -> "1000113"  [label="DDG: module"];
"1000115" -> "1000113"  [label="DDG: dir"];
"1000115" -> "1000113"  [label="DDG: &count"];
"1000113" -> "1000130"  [label="DDG: key_sizes"];
"1000113" -> "1000136"  [label="DDG: key_sizes"];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000109"  [label="CFG: "];
"1000116" -> "1000114"  [label="CFG: "];
"1000115" -> "1000113"  [label="AST: "];
"1000115" -> "1000118"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000118" -> "1000115"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000115" -> "1000138"  [label="DDG: dir"];
"1000115" -> "1000138"  [label="DDG: &count"];
"1000115" -> "1000138"  [label="DDG: module"];
"1000115" -> "1000113"  [label="DDG: module"];
"1000115" -> "1000113"  [label="DDG: dir"];
"1000115" -> "1000113"  [label="DDG: &count"];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000114"  [label="CFG: "];
"1000117" -> "1000116"  [label="CFG: "];
"1000117" -> "1000115"  [label="AST: "];
"1000117" -> "1000116"  [label="CFG: "];
"1000119" -> "1000117"  [label="CFG: "];
"1000118" -> "1000115"  [label="AST: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000115" -> "1000118"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000117"  [label="CFG: "];
"1000118" -> "1000119"  [label="CFG: "];
}
