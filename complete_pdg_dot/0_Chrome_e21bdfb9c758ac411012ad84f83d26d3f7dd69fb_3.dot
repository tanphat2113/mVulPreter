digraph "0_Chrome_e21bdfb9c758ac411012ad84f83d26d3f7dd69fb_3" {
"1000309" [label="(MethodReturn,scoped_refptr<PermissionSet>)"];
"1000127" [label="(Call,permissions_list->end())"];
"1000128" [label="(Block,)"];
"1000125" [label="(Call,it != permissions_list->end())"];
"1000126" [label="(Identifier,it)"];
"1000130" [label="(Call,it->find(kDelimiter) != std::string::npos)"];
"1000131" [label="(Call,it->find(kDelimiter))"];
"1000132" [label="(Identifier,kDelimiter)"];
"1000133" [label="(Identifier,std::string::npos)"];
"1000129" [label="(ControlStructure,if (it->find(kDelimiter) != std::string::npos))"];
"1000136" [label="(Call,delimiter = it->find(kDelimiter))"];
"1000137" [label="(Identifier,delimiter)"];
"1000138" [label="(Call,it->find(kDelimiter))"];
"1000139" [label="(Identifier,kDelimiter)"];
"1000141" [label="(Call,permission_name = it->substr(0, delimiter))"];
"1000142" [label="(Identifier,permission_name)"];
"1000143" [label="(Call,it->substr(0, delimiter))"];
"1000144" [label="(Literal,0)"];
"1000145" [label="(Identifier,delimiter)"];
"1000147" [label="(Call,permission_arg = it->substr(delimiter + 1))"];
"1000148" [label="(Identifier,permission_arg)"];
"1000149" [label="(Call,it->substr(delimiter + 1))"];
"1000150" [label="(Call,delimiter + 1)"];
"1000151" [label="(Identifier,delimiter)"];
"1000152" [label="(Literal,1)"];
"1000155" [label="(Call,base::Value> permission_json(\n            base::JSONReader::Read(permission_arg)))"];
"1000156" [label="(Identifier,base::Value)"];
"1000157" [label="(Call,permission_json(\n            base::JSONReader::Read(permission_arg)))"];
"1000153" [label="(Call,scoped_ptr<base::Value> permission_json(\n            base::JSONReader::Read(permission_arg)))"];
"1000154" [label="(Identifier,scoped_ptr)"];
"1000158" [label="(Call,base::JSONReader::Read(permission_arg))"];
"1000159" [label="(Identifier,permission_arg)"];
"1000161" [label="(Call,!permission_json.get())"];
"1000162" [label="(Call,permission_json.get())"];
"1000163" [label="(Block,)"];
"1000160" [label="(ControlStructure,if (!permission_json.get()))"];
"1000164" [label="(Call,*error = ErrorUtils::FormatErrorMessage(kInvalidParameter, *it))"];
"1000165" [label="(Call,*error)"];
"1000166" [label="(Identifier,error)"];
"1000167" [label="(Call,ErrorUtils::FormatErrorMessage(kInvalidParameter, *it))"];
"1000168" [label="(Identifier,kInvalidParameter)"];
"1000169" [label="(Call,*it)"];
"1000170" [label="(Identifier,it)"];
"1000101" [label="(MethodParameterIn,const Permissions& permissions)"];
"1000462" [label="(MethodParameterOut,const Permissions& permissions)"];
"1000171" [label="(Return,return NULL;)"];
"1000172" [label="(Identifier,NULL)"];
"1000174" [label="(Call,* permission = NULL)"];
"1000175" [label="(Identifier,permission)"];
"1000176" [label="(Identifier,NULL)"];
"1000178" [label="(Call,* bluetooth_device_permission_info =\n            info->GetByID(APIPermission::kBluetoothDevice))"];
"1000179" [label="(Identifier,bluetooth_device_permission_info)"];
"1000180" [label="(Call,info->GetByID(APIPermission::kBluetoothDevice))"];
"1000181" [label="(Identifier,APIPermission::kBluetoothDevice)"];
"1000183" [label="(Call,* usb_device_permission_info =\n            info->GetByID(APIPermission::kUsbDevice))"];
"1000184" [label="(Identifier,usb_device_permission_info)"];
"1000134" [label="(Block,)"];
"1000185" [label="(Call,info->GetByID(APIPermission::kUsbDevice))"];
"1000186" [label="(Identifier,APIPermission::kUsbDevice)"];
"1000188" [label="(Call,permission_name == bluetooth_device_permission_info->name())"];
"1000189" [label="(Identifier,permission_name)"];
"1000190" [label="(Call,bluetooth_device_permission_info->name())"];
"1000191" [label="(Block,)"];
"1000187" [label="(ControlStructure,if (permission_name == bluetooth_device_permission_info->name()))"];
"1000102" [label="(MethodParameterIn,bool allow_file_access)"];
"1000463" [label="(MethodParameterOut,bool allow_file_access)"];
"1000192" [label="(Call,permission = new BluetoothDevicePermission(\n              bluetooth_device_permission_info))"];
"1000193" [label="(Identifier,permission)"];
"1000194" [label="(Call,new BluetoothDevicePermission(\n              bluetooth_device_permission_info))"];
"1000195" [label="(Identifier,BluetoothDevicePermission)"];
"1000196" [label="(ControlStructure,else)"];
"1000197" [label="(ControlStructure,if (permission_name == usb_device_permission_info->name()))"];
"1000198" [label="(Call,permission_name == usb_device_permission_info->name())"];
"1000199" [label="(Identifier,permission_name)"];
"1000200" [label="(Call,usb_device_permission_info->name())"];
"1000201" [label="(Block,)"];
"1000202" [label="(Call,permission = new UsbDevicePermission(usb_device_permission_info))"];
"1000203" [label="(Identifier,permission)"];
"1000204" [label="(Call,new UsbDevicePermission(usb_device_permission_info))"];
"1000205" [label="(Identifier,UsbDevicePermission)"];
"1000206" [label="(ControlStructure,else)"];
"1000207" [label="(Block,)"];
"1000208" [label="(Call,*error = kUnsupportedPermissionId)"];
"1000209" [label="(Call,*error)"];
"1000210" [label="(Identifier,error)"];
"1000211" [label="(Identifier,kUnsupportedPermissionId)"];
"1000212" [label="(Return,return NULL;)"];
"1000213" [label="(Identifier,NULL)"];
"1000215" [label="(Identifier,permission)"];
"1000214" [label="(Call,CHECK(permission))"];
"1000104" [label="(Block,)"];
"1000103" [label="(MethodParameterIn,std::string* error)"];
"1000464" [label="(MethodParameterOut,std::string* error)"];
"1000217" [label="(Call,!permission->FromValue(permission_json.get()))"];
"1000218" [label="(Call,permission->FromValue(permission_json.get()))"];
"1000219" [label="(Call,permission_json.get())"];
"1000220" [label="(Block,)"];
"1000216" [label="(ControlStructure,if (!permission->FromValue(permission_json.get())))"];
"1000221" [label="(Call,*error = ErrorUtils::FormatErrorMessage(kInvalidParameter, *it))"];
"1000222" [label="(Call,*error)"];
"1000223" [label="(Identifier,error)"];
"1000224" [label="(Call,ErrorUtils::FormatErrorMessage(kInvalidParameter, *it))"];
"1000225" [label="(Identifier,kInvalidParameter)"];
"1000226" [label="(Call,*it)"];
"1000227" [label="(Identifier,it)"];
"1000228" [label="(Return,return NULL;)"];
"1000229" [label="(Identifier,NULL)"];
"1000231" [label="(Identifier,permission)"];
"1000230" [label="(Call,apis.insert(permission))"];
"1000232" [label="(ControlStructure,else)"];
"1000235" [label="(Call,* permission_info = info->GetByName(*it))"];
"1000236" [label="(Identifier,permission_info)"];
"1000237" [label="(Call,info->GetByName(*it))"];
"1000238" [label="(Call,*it)"];
"1000239" [label="(Identifier,it)"];
"1000233" [label="(Block,)"];
"1000241" [label="(Call,!permission_info)"];
"1000242" [label="(Identifier,permission_info)"];
"1000243" [label="(Block,)"];
"1000240" [label="(ControlStructure,if (!permission_info))"];
"1000244" [label="(Call,*error = ErrorUtils::FormatErrorMessage(\n              kUnknownPermissionError, *it))"];
"1000245" [label="(Call,*error)"];
"1000246" [label="(Identifier,error)"];
"1000247" [label="(Call,ErrorUtils::FormatErrorMessage(\n              kUnknownPermissionError, *it))"];
"1000248" [label="(Identifier,kUnknownPermissionError)"];
"1000249" [label="(Call,*it)"];
"1000250" [label="(Identifier,it)"];
"1000251" [label="(Return,return NULL;)"];
"1000252" [label="(Identifier,NULL)"];
"1000254" [label="(Call,permission_info->id())"];
"1000253" [label="(Call,apis.insert(permission_info->id()))"];
"1000256" [label="(ControlStructure,if (permissions.origins.get()))"];
"1000257" [label="(Call,permissions.origins.get())"];
"1000258" [label="(Block,)"];
"1000260" [label="(Call,it = permissions.origins->begin())"];
"1000261" [label="(Identifier,it)"];
"1000262" [label="(Call,permissions.origins->begin())"];
"1000109" [label="(Call,std::string>* permissions_list)"];
"1000110" [label="(Identifier,std::string)"];
"1000111" [label="(Call,* permissions_list)"];
"1000112" [label="(Identifier,permissions_list)"];
"1000106" [label="(Call,std::vector<std::string>* permissions_list = permissions.permissions.get())"];
"1000107" [label="(Call,std::vector<std::string>* permissions_list)"];
"1000108" [label="(Identifier,std::vector)"];
"1000113" [label="(Call,permissions.permissions.get())"];
"1000265" [label="(Call,permissions.origins->end())"];
"1000263" [label="(Call,it != permissions.origins->end())"];
"1000264" [label="(Identifier,it)"];
"1000268" [label="(Call,allowed_schemes = Extension::kValidHostPermissionSchemes)"];
"1000269" [label="(Identifier,allowed_schemes)"];
"1000270" [label="(Identifier,Extension::kValidHostPermissionSchemes)"];
"1000272" [label="(Call,!allow_file_access)"];
"1000273" [label="(Identifier,allow_file_access)"];
"1000271" [label="(ControlStructure,if (!allow_file_access))"];
"1000276" [label="(Identifier,~URLPattern::SCHEME_FILE)"];
"1000274" [label="(Call,allowed_schemes &= ~URLPattern::SCHEME_FILE)"];
"1000275" [label="(Identifier,allowed_schemes)"];
"1000279" [label="(Call,parse_result = origin.Parse(*it))"];
"1000280" [label="(Identifier,parse_result)"];
"1000281" [label="(Call,origin.Parse(*it))"];
"1000282" [label="(Call,*it)"];
"1000283" [label="(Identifier,it)"];
"1000266" [label="(Block,)"];
"1000285" [label="(Call,URLPattern::PARSE_SUCCESS != parse_result)"];
"1000286" [label="(Identifier,URLPattern::PARSE_SUCCESS)"];
"1000287" [label="(Identifier,parse_result)"];
"1000288" [label="(Block,)"];
"1000284" [label="(ControlStructure,if (URLPattern::PARSE_SUCCESS != parse_result))"];
"1000291" [label="(Identifier,error)"];
"1000292" [label="(Call,ErrorUtils::FormatErrorMessage(\n            kInvalidOrigin,\n            *it,\n            URLPattern::GetParseResultString(parse_result)))"];
"1000289" [label="(Call,*error = ErrorUtils::FormatErrorMessage(\n            kInvalidOrigin,\n            *it,\n            URLPattern::GetParseResultString(parse_result)))"];
"1000290" [label="(Call,*error)"];
"1000293" [label="(Identifier,kInvalidOrigin)"];
"1000294" [label="(Call,*it)"];
"1000295" [label="(Identifier,it)"];
"1000114" [label="(ControlStructure,if (permissions_list))"];
"1000115" [label="(Identifier,permissions_list)"];
"1000296" [label="(Call,URLPattern::GetParseResultString(parse_result))"];
"1000297" [label="(Identifier,parse_result)"];
"1000299" [label="(Identifier,NULL)"];
"1000298" [label="(Return,return NULL;)"];
"1000301" [label="(Identifier,origin)"];
"1000300" [label="(Call,origins.AddPattern(origin))"];
"1000302" [label="(Return,return scoped_refptr<PermissionSet>(\n      new PermissionSet(apis, origins, URLPatternSet()));)"];
"1000305" [label="(Call,PermissionSet>(\n      new PermissionSet(apis, origins, URLPatternSet())))"];
"1000306" [label="(Identifier,PermissionSet)"];
"1000303" [label="(Call,scoped_refptr<PermissionSet>(\n      new PermissionSet(apis, origins, URLPatternSet())))"];
"1000304" [label="(Identifier,scoped_refptr)"];
"1000308" [label="(Identifier,PermissionSet)"];
"1000307" [label="(Call,new PermissionSet(apis, origins, URLPatternSet()))"];
"1000118" [label="(Call,* info = PermissionsInfo::GetInstance())"];
"1000119" [label="(Identifier,info)"];
"1000120" [label="(Call,PermissionsInfo::GetInstance())"];
"1000116" [label="(Block,)"];
"1000122" [label="(Call,it = permissions_list->begin())"];
"1000123" [label="(Identifier,it)"];
"1000124" [label="(Call,permissions_list->begin())"];
"1000309" -> "1000100"  [label="AST: "];
"1000309" -> "1000171"  [label="CFG: "];
"1000309" -> "1000212"  [label="CFG: "];
"1000309" -> "1000228"  [label="CFG: "];
"1000309" -> "1000251"  [label="CFG: "];
"1000309" -> "1000298"  [label="CFG: "];
"1000309" -> "1000302"  [label="CFG: "];
"1000228" -> "1000309"  [label="DDG: <RET>"];
"1000302" -> "1000309"  [label="DDG: <RET>"];
"1000183" -> "1000309"  [label="DDG: info->GetByID(APIPermission::kUsbDevice)"];
"1000183" -> "1000309"  [label="DDG: usb_device_permission_info"];
"1000247" -> "1000309"  [label="DDG: kUnknownPermissionError"];
"1000247" -> "1000309"  [label="DDG: *it"];
"1000158" -> "1000309"  [label="DDG: permission_arg"];
"1000188" -> "1000309"  [label="DDG: permission_name == bluetooth_device_permission_info->name()"];
"1000188" -> "1000309"  [label="DDG: bluetooth_device_permission_info->name()"];
"1000188" -> "1000309"  [label="DDG: permission_name"];
"1000167" -> "1000309"  [label="DDG: kInvalidParameter"];
"1000167" -> "1000309"  [label="DDG: *it"];
"1000130" -> "1000309"  [label="DDG: it->find(kDelimiter) != std::string::npos"];
"1000130" -> "1000309"  [label="DDG: std::string::npos"];
"1000130" -> "1000309"  [label="DDG: it->find(kDelimiter)"];
"1000285" -> "1000309"  [label="DDG: URLPattern::PARSE_SUCCESS"];
"1000285" -> "1000309"  [label="DDG: URLPattern::PARSE_SUCCESS != parse_result"];
"1000285" -> "1000309"  [label="DDG: parse_result"];
"1000185" -> "1000309"  [label="DDG: APIPermission::kUsbDevice"];
"1000125" -> "1000309"  [label="DDG: it"];
"1000125" -> "1000309"  [label="DDG: it != permissions_list->end()"];
"1000125" -> "1000309"  [label="DDG: permissions_list->end()"];
"1000141" -> "1000309"  [label="DDG: permission_name"];
"1000141" -> "1000309"  [label="DDG: it->substr(0, delimiter)"];
"1000224" -> "1000309"  [label="DDG: kInvalidParameter"];
"1000224" -> "1000309"  [label="DDG: *it"];
"1000192" -> "1000309"  [label="DDG: new BluetoothDevicePermission(\n              bluetooth_device_permission_info)"];
"1000289" -> "1000309"  [label="DDG: ErrorUtils::FormatErrorMessage(\n            kInvalidOrigin,\n            *it,\n            URLPattern::GetParseResultString(parse_result))"];
"1000289" -> "1000309"  [label="DDG: *error"];
"1000107" -> "1000309"  [label="DDG: std::vector"];
"1000107" -> "1000309"  [label="DDG: std::string>* permissions_list"];
"1000235" -> "1000309"  [label="DDG: info->GetByName(*it)"];
"1000208" -> "1000309"  [label="DDG: *error"];
"1000208" -> "1000309"  [label="DDG: kUnsupportedPermissionId"];
"1000281" -> "1000309"  [label="DDG: *it"];
"1000106" -> "1000309"  [label="DDG: std::vector<std::string>* permissions_list"];
"1000106" -> "1000309"  [label="DDG: permissions.permissions.get()"];
"1000292" -> "1000309"  [label="DDG: *it"];
"1000292" -> "1000309"  [label="DDG: kInvalidOrigin"];
"1000292" -> "1000309"  [label="DDG: URLPattern::GetParseResultString(parse_result)"];
"1000150" -> "1000309"  [label="DDG: delimiter"];
"1000274" -> "1000309"  [label="DDG: allowed_schemes"];
"1000274" -> "1000309"  [label="DDG: allowed_schemes &= ~URLPattern::SCHEME_FILE"];
"1000274" -> "1000309"  [label="DDG: ~URLPattern::SCHEME_FILE"];
"1000253" -> "1000309"  [label="DDG: apis.insert(permission_info->id())"];
"1000253" -> "1000309"  [label="DDG: permission_info->id()"];
"1000303" -> "1000309"  [label="DDG: scoped_refptr"];
"1000303" -> "1000309"  [label="DDG: scoped_refptr<PermissionSet>(\n      new PermissionSet(apis, origins, URLPatternSet()))"];
"1000303" -> "1000309"  [label="DDG: PermissionSet>(\n      new PermissionSet(apis, origins, URLPatternSet()))"];
"1000198" -> "1000309"  [label="DDG: usb_device_permission_info->name()"];
"1000198" -> "1000309"  [label="DDG: permission_name"];
"1000198" -> "1000309"  [label="DDG: permission_name == usb_device_permission_info->name()"];
"1000155" -> "1000309"  [label="DDG: permission_json(\n            base::JSONReader::Read(permission_arg))"];
"1000155" -> "1000309"  [label="DDG: base::Value"];
"1000178" -> "1000309"  [label="DDG: bluetooth_device_permission_info"];
"1000178" -> "1000309"  [label="DDG: info->GetByID(APIPermission::kBluetoothDevice)"];
"1000218" -> "1000309"  [label="DDG: permission_json.get()"];
"1000217" -> "1000309"  [label="DDG: !permission->FromValue(permission_json.get())"];
"1000217" -> "1000309"  [label="DDG: permission->FromValue(permission_json.get())"];
"1000237" -> "1000309"  [label="DDG: *it"];
"1000214" -> "1000309"  [label="DDG: CHECK(permission)"];
"1000214" -> "1000309"  [label="DDG: permission"];
"1000305" -> "1000309"  [label="DDG: new PermissionSet(apis, origins, URLPatternSet())"];
"1000305" -> "1000309"  [label="DDG: PermissionSet"];
"1000131" -> "1000309"  [label="DDG: kDelimiter"];
"1000138" -> "1000309"  [label="DDG: kDelimiter"];
"1000268" -> "1000309"  [label="DDG: allowed_schemes"];
"1000268" -> "1000309"  [label="DDG: Extension::kValidHostPermissionSchemes"];
"1000194" -> "1000309"  [label="DDG: BluetoothDevicePermission"];
"1000263" -> "1000309"  [label="DDG: permissions.origins->end()"];
"1000263" -> "1000309"  [label="DDG: it != permissions.origins->end()"];
"1000263" -> "1000309"  [label="DDG: it"];
"1000153" -> "1000309"  [label="DDG: base::Value> permission_json(\n            base::JSONReader::Read(permission_arg))"];
"1000153" -> "1000309"  [label="DDG: scoped_ptr<base::Value> permission_json(\n            base::JSONReader::Read(permission_arg))"];
"1000153" -> "1000309"  [label="DDG: scoped_ptr"];
"1000164" -> "1000309"  [label="DDG: ErrorUtils::FormatErrorMessage(kInvalidParameter, *it)"];
"1000164" -> "1000309"  [label="DDG: *error"];
"1000157" -> "1000309"  [label="DDG: base::JSONReader::Read(permission_arg)"];
"1000103" -> "1000309"  [label="DDG: error"];
"1000180" -> "1000309"  [label="DDG: APIPermission::kBluetoothDevice"];
"1000300" -> "1000309"  [label="DDG: origin"];
"1000300" -> "1000309"  [label="DDG: origins.AddPattern(origin)"];
"1000221" -> "1000309"  [label="DDG: *error"];
"1000221" -> "1000309"  [label="DDG: ErrorUtils::FormatErrorMessage(kInvalidParameter, *it)"];
"1000147" -> "1000309"  [label="DDG: it->substr(delimiter + 1)"];
"1000174" -> "1000309"  [label="DDG: NULL"];
"1000174" -> "1000309"  [label="DDG: permission"];
"1000230" -> "1000309"  [label="DDG: permission"];
"1000230" -> "1000309"  [label="DDG: apis.insert(permission)"];
"1000102" -> "1000309"  [label="DDG: allow_file_access"];
"1000296" -> "1000309"  [label="DDG: parse_result"];
"1000260" -> "1000309"  [label="DDG: permissions.origins->begin()"];
"1000272" -> "1000309"  [label="DDG: allow_file_access"];
"1000272" -> "1000309"  [label="DDG: !allow_file_access"];
"1000101" -> "1000309"  [label="DDG: permissions"];
"1000279" -> "1000309"  [label="DDG: origin.Parse(*it)"];
"1000109" -> "1000309"  [label="DDG: std::string"];
"1000109" -> "1000309"  [label="DDG: * permissions_list"];
"1000118" -> "1000309"  [label="DDG: PermissionsInfo::GetInstance()"];
"1000118" -> "1000309"  [label="DDG: info"];
"1000241" -> "1000309"  [label="DDG: permission_info"];
"1000241" -> "1000309"  [label="DDG: !permission_info"];
"1000149" -> "1000309"  [label="DDG: delimiter + 1"];
"1000257" -> "1000309"  [label="DDG: permissions.origins.get()"];
"1000136" -> "1000309"  [label="DDG: it->find(kDelimiter)"];
"1000204" -> "1000309"  [label="DDG: UsbDevicePermission"];
"1000244" -> "1000309"  [label="DDG: *error"];
"1000244" -> "1000309"  [label="DDG: ErrorUtils::FormatErrorMessage(\n              kUnknownPermissionError, *it)"];
"1000161" -> "1000309"  [label="DDG: permission_json.get()"];
"1000161" -> "1000309"  [label="DDG: !permission_json.get()"];
"1000122" -> "1000309"  [label="DDG: permissions_list->begin()"];
"1000202" -> "1000309"  [label="DDG: new UsbDevicePermission(usb_device_permission_info)"];
"1000298" -> "1000309"  [label="DDG: <RET>"];
"1000251" -> "1000309"  [label="DDG: <RET>"];
"1000171" -> "1000309"  [label="DDG: <RET>"];
"1000212" -> "1000309"  [label="DDG: <RET>"];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1000126"  [label="CFG: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000128" -> "1000116"  [label="AST: "];
"1000129" -> "1000128"  [label="AST: "];
"1000125" -> "1000116"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000132" -> "1000125"  [label="CFG: "];
"1000125" -> "1000309"  [label="DDG: it"];
"1000125" -> "1000309"  [label="DDG: it != permissions_list->end()"];
"1000125" -> "1000309"  [label="DDG: permissions_list->end()"];
"1000122" -> "1000125"  [label="DDG: it"];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000122"  [label="CFG: "];
"1000127" -> "1000126"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000133"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000133" -> "1000130"  [label="AST: "];
"1000137" -> "1000130"  [label="CFG: "];
"1000236" -> "1000130"  [label="CFG: "];
"1000130" -> "1000309"  [label="DDG: it->find(kDelimiter) != std::string::npos"];
"1000130" -> "1000309"  [label="DDG: std::string::npos"];
"1000130" -> "1000309"  [label="DDG: it->find(kDelimiter)"];
"1000131" -> "1000130"  [label="DDG: kDelimiter"];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000132"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="CFG: "];
"1000131" -> "1000309"  [label="DDG: kDelimiter"];
"1000131" -> "1000130"  [label="DDG: kDelimiter"];
"1000131" -> "1000138"  [label="DDG: kDelimiter"];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000125"  [label="CFG: "];
"1000131" -> "1000132"  [label="CFG: "];
"1000133" -> "1000130"  [label="AST: "];
"1000133" -> "1000131"  [label="CFG: "];
"1000130" -> "1000133"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000129"  [label="AST: "];
"1000134" -> "1000129"  [label="AST: "];
"1000232" -> "1000129"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000136" -> "1000138"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000142" -> "1000136"  [label="CFG: "];
"1000136" -> "1000309"  [label="DDG: it->find(kDelimiter)"];
"1000138" -> "1000136"  [label="DDG: kDelimiter"];
"1000136" -> "1000143"  [label="DDG: delimiter"];
"1000137" -> "1000136"  [label="AST: "];
"1000137" -> "1000130"  [label="CFG: "];
"1000139" -> "1000137"  [label="CFG: "];
"1000138" -> "1000136"  [label="AST: "];
"1000138" -> "1000139"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000136" -> "1000138"  [label="CFG: "];
"1000138" -> "1000309"  [label="DDG: kDelimiter"];
"1000138" -> "1000136"  [label="DDG: kDelimiter"];
"1000131" -> "1000138"  [label="DDG: kDelimiter"];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000137"  [label="CFG: "];
"1000138" -> "1000139"  [label="CFG: "];
"1000141" -> "1000134"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000148" -> "1000141"  [label="CFG: "];
"1000141" -> "1000309"  [label="DDG: permission_name"];
"1000141" -> "1000309"  [label="DDG: it->substr(0, delimiter)"];
"1000143" -> "1000141"  [label="DDG: 0"];
"1000143" -> "1000141"  [label="DDG: delimiter"];
"1000141" -> "1000188"  [label="DDG: permission_name"];
"1000142" -> "1000141"  [label="AST: "];
"1000142" -> "1000136"  [label="CFG: "];
"1000144" -> "1000142"  [label="CFG: "];
"1000143" -> "1000141"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000145" -> "1000143"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000143" -> "1000141"  [label="DDG: 0"];
"1000143" -> "1000141"  [label="DDG: delimiter"];
"1000136" -> "1000143"  [label="DDG: delimiter"];
"1000143" -> "1000149"  [label="DDG: delimiter"];
"1000143" -> "1000150"  [label="DDG: delimiter"];
"1000144" -> "1000143"  [label="AST: "];
"1000144" -> "1000142"  [label="CFG: "];
"1000145" -> "1000144"  [label="CFG: "];
"1000145" -> "1000143"  [label="AST: "];
"1000145" -> "1000144"  [label="CFG: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000147" -> "1000134"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000154" -> "1000147"  [label="CFG: "];
"1000147" -> "1000309"  [label="DDG: it->substr(delimiter + 1)"];
"1000149" -> "1000147"  [label="DDG: delimiter + 1"];
"1000147" -> "1000158"  [label="DDG: permission_arg"];
"1000148" -> "1000147"  [label="AST: "];
"1000148" -> "1000141"  [label="CFG: "];
"1000151" -> "1000148"  [label="CFG: "];
"1000149" -> "1000147"  [label="AST: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000149" -> "1000309"  [label="DDG: delimiter + 1"];
"1000149" -> "1000147"  [label="DDG: delimiter + 1"];
"1000143" -> "1000149"  [label="DDG: delimiter"];
"1000150" -> "1000149"  [label="AST: "];
"1000150" -> "1000152"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="AST: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000150" -> "1000309"  [label="DDG: delimiter"];
"1000143" -> "1000150"  [label="DDG: delimiter"];
"1000151" -> "1000150"  [label="AST: "];
"1000151" -> "1000148"  [label="CFG: "];
"1000152" -> "1000151"  [label="CFG: "];
"1000152" -> "1000150"  [label="AST: "];
"1000152" -> "1000151"  [label="CFG: "];
"1000150" -> "1000152"  [label="CFG: "];
"1000155" -> "1000153"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000157" -> "1000155"  [label="AST: "];
"1000153" -> "1000155"  [label="CFG: "];
"1000155" -> "1000309"  [label="DDG: permission_json(\n            base::JSONReader::Read(permission_arg))"];
"1000155" -> "1000309"  [label="DDG: base::Value"];
"1000155" -> "1000153"  [label="DDG: base::Value"];
"1000155" -> "1000153"  [label="DDG: permission_json(\n            base::JSONReader::Read(permission_arg))"];
"1000157" -> "1000155"  [label="DDG: base::JSONReader::Read(permission_arg)"];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000154"  [label="CFG: "];
"1000159" -> "1000156"  [label="CFG: "];
"1000157" -> "1000155"  [label="AST: "];
"1000157" -> "1000158"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000157" -> "1000309"  [label="DDG: base::JSONReader::Read(permission_arg)"];
"1000157" -> "1000155"  [label="DDG: base::JSONReader::Read(permission_arg)"];
"1000158" -> "1000157"  [label="DDG: permission_arg"];
"1000153" -> "1000134"  [label="AST: "];
"1000153" -> "1000155"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000155" -> "1000153"  [label="AST: "];
"1000162" -> "1000153"  [label="CFG: "];
"1000153" -> "1000309"  [label="DDG: base::Value> permission_json(\n            base::JSONReader::Read(permission_arg))"];
"1000153" -> "1000309"  [label="DDG: scoped_ptr<base::Value> permission_json(\n            base::JSONReader::Read(permission_arg))"];
"1000153" -> "1000309"  [label="DDG: scoped_ptr"];
"1000155" -> "1000153"  [label="DDG: base::Value"];
"1000155" -> "1000153"  [label="DDG: permission_json(\n            base::JSONReader::Read(permission_arg))"];
"1000154" -> "1000153"  [label="AST: "];
"1000154" -> "1000147"  [label="CFG: "];
"1000156" -> "1000154"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000158" -> "1000159"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000157" -> "1000158"  [label="CFG: "];
"1000158" -> "1000309"  [label="DDG: permission_arg"];
"1000158" -> "1000157"  [label="DDG: permission_arg"];
"1000147" -> "1000158"  [label="DDG: permission_arg"];
"1000159" -> "1000158"  [label="AST: "];
"1000159" -> "1000156"  [label="CFG: "];
"1000158" -> "1000159"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000161" -> "1000162"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000166" -> "1000161"  [label="CFG: "];
"1000175" -> "1000161"  [label="CFG: "];
"1000161" -> "1000309"  [label="DDG: permission_json.get()"];
"1000161" -> "1000309"  [label="DDG: !permission_json.get()"];
"1000162" -> "1000161"  [label="AST: "];
"1000162" -> "1000153"  [label="CFG: "];
"1000161" -> "1000162"  [label="CFG: "];
"1000163" -> "1000160"  [label="AST: "];
"1000164" -> "1000163"  [label="AST: "];
"1000171" -> "1000163"  [label="AST: "];
"1000160" -> "1000134"  [label="AST: "];
"1000161" -> "1000160"  [label="AST: "];
"1000163" -> "1000160"  [label="AST: "];
"1000164" -> "1000163"  [label="AST: "];
"1000164" -> "1000167"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000167" -> "1000164"  [label="AST: "];
"1000172" -> "1000164"  [label="CFG: "];
"1000164" -> "1000309"  [label="DDG: ErrorUtils::FormatErrorMessage(kInvalidParameter, *it)"];
"1000164" -> "1000309"  [label="DDG: *error"];
"1000167" -> "1000164"  [label="DDG: kInvalidParameter"];
"1000167" -> "1000164"  [label="DDG: *it"];
"1000165" -> "1000164"  [label="AST: "];
"1000165" -> "1000166"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000168" -> "1000165"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000166" -> "1000161"  [label="CFG: "];
"1000165" -> "1000166"  [label="CFG: "];
"1000167" -> "1000164"  [label="AST: "];
"1000167" -> "1000169"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000169" -> "1000167"  [label="AST: "];
"1000164" -> "1000167"  [label="CFG: "];
"1000167" -> "1000309"  [label="DDG: kInvalidParameter"];
"1000167" -> "1000309"  [label="DDG: *it"];
"1000167" -> "1000164"  [label="DDG: kInvalidParameter"];
"1000167" -> "1000164"  [label="DDG: *it"];
"1000168" -> "1000167"  [label="AST: "];
"1000168" -> "1000165"  [label="CFG: "];
"1000170" -> "1000168"  [label="CFG: "];
"1000169" -> "1000167"  [label="AST: "];
"1000169" -> "1000170"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000167" -> "1000169"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000170" -> "1000168"  [label="CFG: "];
"1000169" -> "1000170"  [label="CFG: "];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000309"  [label="DDG: permissions"];
"1000462" -> "1000100"  [label="AST: "];
"1000171" -> "1000163"  [label="AST: "];
"1000171" -> "1000172"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000309" -> "1000171"  [label="CFG: "];
"1000171" -> "1000309"  [label="DDG: <RET>"];
"1000172" -> "1000171"  [label="DDG: NULL"];
"1000172" -> "1000171"  [label="AST: "];
"1000172" -> "1000164"  [label="CFG: "];
"1000171" -> "1000172"  [label="CFG: "];
"1000172" -> "1000171"  [label="DDG: NULL"];
"1000174" -> "1000134"  [label="AST: "];
"1000174" -> "1000176"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000176" -> "1000174"  [label="AST: "];
"1000179" -> "1000174"  [label="CFG: "];
"1000174" -> "1000309"  [label="DDG: NULL"];
"1000174" -> "1000309"  [label="DDG: permission"];
"1000175" -> "1000174"  [label="AST: "];
"1000175" -> "1000161"  [label="CFG: "];
"1000176" -> "1000175"  [label="CFG: "];
"1000176" -> "1000174"  [label="AST: "];
"1000176" -> "1000175"  [label="CFG: "];
"1000174" -> "1000176"  [label="CFG: "];
"1000178" -> "1000134"  [label="AST: "];
"1000178" -> "1000180"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000180" -> "1000178"  [label="AST: "];
"1000184" -> "1000178"  [label="CFG: "];
"1000178" -> "1000309"  [label="DDG: bluetooth_device_permission_info"];
"1000178" -> "1000309"  [label="DDG: info->GetByID(APIPermission::kBluetoothDevice)"];
"1000180" -> "1000178"  [label="DDG: APIPermission::kBluetoothDevice"];
"1000179" -> "1000178"  [label="AST: "];
"1000179" -> "1000174"  [label="CFG: "];
"1000181" -> "1000179"  [label="CFG: "];
"1000180" -> "1000178"  [label="AST: "];
"1000180" -> "1000181"  [label="CFG: "];
"1000181" -> "1000180"  [label="AST: "];
"1000178" -> "1000180"  [label="CFG: "];
"1000180" -> "1000309"  [label="DDG: APIPermission::kBluetoothDevice"];
"1000180" -> "1000178"  [label="DDG: APIPermission::kBluetoothDevice"];
"1000181" -> "1000180"  [label="AST: "];
"1000181" -> "1000179"  [label="CFG: "];
"1000180" -> "1000181"  [label="CFG: "];
"1000183" -> "1000134"  [label="AST: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000185" -> "1000183"  [label="AST: "];
"1000189" -> "1000183"  [label="CFG: "];
"1000183" -> "1000309"  [label="DDG: info->GetByID(APIPermission::kUsbDevice)"];
"1000183" -> "1000309"  [label="DDG: usb_device_permission_info"];
"1000185" -> "1000183"  [label="DDG: APIPermission::kUsbDevice"];
"1000184" -> "1000183"  [label="AST: "];
"1000184" -> "1000178"  [label="CFG: "];
"1000186" -> "1000184"  [label="CFG: "];
"1000134" -> "1000129"  [label="AST: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000140" -> "1000134"  [label="AST: "];
"1000141" -> "1000134"  [label="AST: "];
"1000146" -> "1000134"  [label="AST: "];
"1000147" -> "1000134"  [label="AST: "];
"1000153" -> "1000134"  [label="AST: "];
"1000160" -> "1000134"  [label="AST: "];
"1000173" -> "1000134"  [label="AST: "];
"1000174" -> "1000134"  [label="AST: "];
"1000177" -> "1000134"  [label="AST: "];
"1000178" -> "1000134"  [label="AST: "];
"1000182" -> "1000134"  [label="AST: "];
"1000183" -> "1000134"  [label="AST: "];
"1000187" -> "1000134"  [label="AST: "];
"1000214" -> "1000134"  [label="AST: "];
"1000216" -> "1000134"  [label="AST: "];
"1000230" -> "1000134"  [label="AST: "];
"1000185" -> "1000183"  [label="AST: "];
"1000185" -> "1000186"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000185" -> "1000309"  [label="DDG: APIPermission::kUsbDevice"];
"1000185" -> "1000183"  [label="DDG: APIPermission::kUsbDevice"];
"1000186" -> "1000185"  [label="AST: "];
"1000186" -> "1000184"  [label="CFG: "];
"1000185" -> "1000186"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000188" -> "1000190"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000188"  [label="AST: "];
"1000193" -> "1000188"  [label="CFG: "];
"1000199" -> "1000188"  [label="CFG: "];
"1000188" -> "1000309"  [label="DDG: permission_name == bluetooth_device_permission_info->name()"];
"1000188" -> "1000309"  [label="DDG: bluetooth_device_permission_info->name()"];
"1000188" -> "1000309"  [label="DDG: permission_name"];
"1000141" -> "1000188"  [label="DDG: permission_name"];
"1000188" -> "1000198"  [label="DDG: permission_name"];
"1000189" -> "1000188"  [label="AST: "];
"1000189" -> "1000183"  [label="CFG: "];
"1000190" -> "1000189"  [label="CFG: "];
"1000190" -> "1000188"  [label="AST: "];
"1000190" -> "1000189"  [label="CFG: "];
"1000188" -> "1000190"  [label="CFG: "];
"1000191" -> "1000187"  [label="AST: "];
"1000192" -> "1000191"  [label="AST: "];
"1000187" -> "1000134"  [label="AST: "];
"1000188" -> "1000187"  [label="AST: "];
"1000191" -> "1000187"  [label="AST: "];
"1000196" -> "1000187"  [label="AST: "];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000309"  [label="DDG: allow_file_access"];
"1000102" -> "1000272"  [label="DDG: allow_file_access"];
"1000463" -> "1000100"  [label="AST: "];
"1000192" -> "1000191"  [label="AST: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000194" -> "1000192"  [label="AST: "];
"1000215" -> "1000192"  [label="CFG: "];
"1000192" -> "1000309"  [label="DDG: new BluetoothDevicePermission(\n              bluetooth_device_permission_info)"];
"1000194" -> "1000192"  [label="DDG: BluetoothDevicePermission"];
"1000192" -> "1000214"  [label="DDG: permission"];
"1000193" -> "1000192"  [label="AST: "];
"1000193" -> "1000188"  [label="CFG: "];
"1000195" -> "1000193"  [label="CFG: "];
"1000194" -> "1000192"  [label="AST: "];
"1000194" -> "1000195"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000194" -> "1000309"  [label="DDG: BluetoothDevicePermission"];
"1000194" -> "1000192"  [label="DDG: BluetoothDevicePermission"];
"1000195" -> "1000194"  [label="AST: "];
"1000195" -> "1000193"  [label="CFG: "];
"1000194" -> "1000195"  [label="CFG: "];
"1000196" -> "1000187"  [label="AST: "];
"1000197" -> "1000196"  [label="AST: "];
"1000197" -> "1000196"  [label="AST: "];
"1000198" -> "1000197"  [label="AST: "];
"1000201" -> "1000197"  [label="AST: "];
"1000206" -> "1000197"  [label="AST: "];
"1000198" -> "1000197"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000203" -> "1000198"  [label="CFG: "];
"1000210" -> "1000198"  [label="CFG: "];
"1000198" -> "1000309"  [label="DDG: usb_device_permission_info->name()"];
"1000198" -> "1000309"  [label="DDG: permission_name"];
"1000198" -> "1000309"  [label="DDG: permission_name == usb_device_permission_info->name()"];
"1000188" -> "1000198"  [label="DDG: permission_name"];
"1000199" -> "1000198"  [label="AST: "];
"1000199" -> "1000188"  [label="CFG: "];
"1000200" -> "1000199"  [label="CFG: "];
"1000200" -> "1000198"  [label="AST: "];
"1000200" -> "1000199"  [label="CFG: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000201" -> "1000197"  [label="AST: "];
"1000202" -> "1000201"  [label="AST: "];
"1000202" -> "1000201"  [label="AST: "];
"1000202" -> "1000204"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000215" -> "1000202"  [label="CFG: "];
"1000202" -> "1000309"  [label="DDG: new UsbDevicePermission(usb_device_permission_info)"];
"1000204" -> "1000202"  [label="DDG: UsbDevicePermission"];
"1000202" -> "1000214"  [label="DDG: permission"];
"1000203" -> "1000202"  [label="AST: "];
"1000203" -> "1000198"  [label="CFG: "];
"1000205" -> "1000203"  [label="CFG: "];
"1000204" -> "1000202"  [label="AST: "];
"1000204" -> "1000205"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000202" -> "1000204"  [label="CFG: "];
"1000204" -> "1000309"  [label="DDG: UsbDevicePermission"];
"1000204" -> "1000202"  [label="DDG: UsbDevicePermission"];
"1000205" -> "1000204"  [label="AST: "];
"1000205" -> "1000203"  [label="CFG: "];
"1000204" -> "1000205"  [label="CFG: "];
"1000206" -> "1000197"  [label="AST: "];
"1000207" -> "1000206"  [label="AST: "];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000207"  [label="AST: "];
"1000212" -> "1000207"  [label="AST: "];
"1000208" -> "1000207"  [label="AST: "];
"1000208" -> "1000211"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000211" -> "1000208"  [label="AST: "];
"1000213" -> "1000208"  [label="CFG: "];
"1000208" -> "1000309"  [label="DDG: *error"];
"1000208" -> "1000309"  [label="DDG: kUnsupportedPermissionId"];
"1000209" -> "1000208"  [label="AST: "];
"1000209" -> "1000210"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000211" -> "1000209"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000210" -> "1000198"  [label="CFG: "];
"1000209" -> "1000210"  [label="CFG: "];
"1000211" -> "1000208"  [label="AST: "];
"1000211" -> "1000209"  [label="CFG: "];
"1000208" -> "1000211"  [label="CFG: "];
"1000212" -> "1000207"  [label="AST: "];
"1000212" -> "1000213"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000309" -> "1000212"  [label="CFG: "];
"1000212" -> "1000309"  [label="DDG: <RET>"];
"1000213" -> "1000212"  [label="DDG: NULL"];
"1000213" -> "1000212"  [label="AST: "];
"1000213" -> "1000208"  [label="CFG: "];
"1000212" -> "1000213"  [label="CFG: "];
"1000213" -> "1000212"  [label="DDG: NULL"];
"1000215" -> "1000214"  [label="AST: "];
"1000215" -> "1000192"  [label="CFG: "];
"1000215" -> "1000202"  [label="CFG: "];
"1000214" -> "1000215"  [label="CFG: "];
"1000214" -> "1000134"  [label="AST: "];
"1000214" -> "1000215"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000219" -> "1000214"  [label="CFG: "];
"1000214" -> "1000309"  [label="DDG: CHECK(permission)"];
"1000214" -> "1000309"  [label="DDG: permission"];
"1000202" -> "1000214"  [label="DDG: permission"];
"1000192" -> "1000214"  [label="DDG: permission"];
"1000214" -> "1000230"  [label="DDG: permission"];
"1000104" -> "1000100"  [label="AST: "];
"1000105" -> "1000104"  [label="AST: "];
"1000106" -> "1000104"  [label="AST: "];
"1000114" -> "1000104"  [label="AST: "];
"1000255" -> "1000104"  [label="AST: "];
"1000256" -> "1000104"  [label="AST: "];
"1000302" -> "1000104"  [label="AST: "];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000309"  [label="DDG: error"];
"1000464" -> "1000100"  [label="AST: "];
"1000217" -> "1000216"  [label="AST: "];
"1000217" -> "1000218"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000223" -> "1000217"  [label="CFG: "];
"1000231" -> "1000217"  [label="CFG: "];
"1000217" -> "1000309"  [label="DDG: !permission->FromValue(permission_json.get())"];
"1000217" -> "1000309"  [label="DDG: permission->FromValue(permission_json.get())"];
"1000218" -> "1000217"  [label="DDG: permission_json.get()"];
"1000218" -> "1000217"  [label="AST: "];
"1000218" -> "1000219"  [label="CFG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000217" -> "1000218"  [label="CFG: "];
"1000218" -> "1000309"  [label="DDG: permission_json.get()"];
"1000218" -> "1000217"  [label="DDG: permission_json.get()"];
"1000219" -> "1000218"  [label="AST: "];
"1000219" -> "1000214"  [label="CFG: "];
"1000218" -> "1000219"  [label="CFG: "];
"1000220" -> "1000216"  [label="AST: "];
"1000221" -> "1000220"  [label="AST: "];
"1000228" -> "1000220"  [label="AST: "];
"1000216" -> "1000134"  [label="AST: "];
"1000217" -> "1000216"  [label="AST: "];
"1000220" -> "1000216"  [label="AST: "];
"1000221" -> "1000220"  [label="AST: "];
"1000221" -> "1000224"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000224" -> "1000221"  [label="AST: "];
"1000229" -> "1000221"  [label="CFG: "];
"1000221" -> "1000309"  [label="DDG: *error"];
"1000221" -> "1000309"  [label="DDG: ErrorUtils::FormatErrorMessage(kInvalidParameter, *it)"];
"1000224" -> "1000221"  [label="DDG: kInvalidParameter"];
"1000224" -> "1000221"  [label="DDG: *it"];
"1000222" -> "1000221"  [label="AST: "];
"1000222" -> "1000223"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000225" -> "1000222"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000223" -> "1000217"  [label="CFG: "];
"1000222" -> "1000223"  [label="CFG: "];
"1000224" -> "1000221"  [label="AST: "];
"1000224" -> "1000226"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000221" -> "1000224"  [label="CFG: "];
"1000224" -> "1000309"  [label="DDG: kInvalidParameter"];
"1000224" -> "1000309"  [label="DDG: *it"];
"1000224" -> "1000221"  [label="DDG: kInvalidParameter"];
"1000224" -> "1000221"  [label="DDG: *it"];
"1000225" -> "1000224"  [label="AST: "];
"1000225" -> "1000222"  [label="CFG: "];
"1000227" -> "1000225"  [label="CFG: "];
"1000226" -> "1000224"  [label="AST: "];
"1000226" -> "1000227"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000224" -> "1000226"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000227" -> "1000225"  [label="CFG: "];
"1000226" -> "1000227"  [label="CFG: "];
"1000228" -> "1000220"  [label="AST: "];
"1000228" -> "1000229"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000309" -> "1000228"  [label="CFG: "];
"1000228" -> "1000309"  [label="DDG: <RET>"];
"1000229" -> "1000228"  [label="DDG: NULL"];
"1000229" -> "1000228"  [label="AST: "];
"1000229" -> "1000221"  [label="CFG: "];
"1000228" -> "1000229"  [label="CFG: "];
"1000229" -> "1000228"  [label="DDG: NULL"];
"1000231" -> "1000230"  [label="AST: "];
"1000231" -> "1000217"  [label="CFG: "];
"1000230" -> "1000231"  [label="CFG: "];
"1000230" -> "1000134"  [label="AST: "];
"1000230" -> "1000231"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000257" -> "1000230"  [label="CFG: "];
"1000230" -> "1000309"  [label="DDG: permission"];
"1000230" -> "1000309"  [label="DDG: apis.insert(permission)"];
"1000214" -> "1000230"  [label="DDG: permission"];
"1000232" -> "1000129"  [label="AST: "];
"1000233" -> "1000232"  [label="AST: "];
"1000235" -> "1000233"  [label="AST: "];
"1000235" -> "1000237"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="AST: "];
"1000242" -> "1000235"  [label="CFG: "];
"1000235" -> "1000309"  [label="DDG: info->GetByName(*it)"];
"1000237" -> "1000235"  [label="DDG: *it"];
"1000235" -> "1000241"  [label="DDG: permission_info"];
"1000236" -> "1000235"  [label="AST: "];
"1000236" -> "1000130"  [label="CFG: "];
"1000239" -> "1000236"  [label="CFG: "];
"1000237" -> "1000235"  [label="AST: "];
"1000237" -> "1000238"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000235" -> "1000237"  [label="CFG: "];
"1000237" -> "1000309"  [label="DDG: *it"];
"1000237" -> "1000235"  [label="DDG: *it"];
"1000237" -> "1000247"  [label="DDG: *it"];
"1000237" -> "1000281"  [label="DDG: *it"];
"1000238" -> "1000237"  [label="AST: "];
"1000238" -> "1000239"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000237" -> "1000238"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000239" -> "1000236"  [label="CFG: "];
"1000238" -> "1000239"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000234" -> "1000233"  [label="AST: "];
"1000235" -> "1000233"  [label="AST: "];
"1000240" -> "1000233"  [label="AST: "];
"1000253" -> "1000233"  [label="AST: "];
"1000241" -> "1000240"  [label="AST: "];
"1000241" -> "1000242"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000246" -> "1000241"  [label="CFG: "];
"1000254" -> "1000241"  [label="CFG: "];
"1000241" -> "1000309"  [label="DDG: permission_info"];
"1000241" -> "1000309"  [label="DDG: !permission_info"];
"1000235" -> "1000241"  [label="DDG: permission_info"];
"1000242" -> "1000241"  [label="AST: "];
"1000242" -> "1000235"  [label="CFG: "];
"1000241" -> "1000242"  [label="CFG: "];
"1000243" -> "1000240"  [label="AST: "];
"1000244" -> "1000243"  [label="AST: "];
"1000251" -> "1000243"  [label="AST: "];
"1000240" -> "1000233"  [label="AST: "];
"1000241" -> "1000240"  [label="AST: "];
"1000243" -> "1000240"  [label="AST: "];
"1000244" -> "1000243"  [label="AST: "];
"1000244" -> "1000247"  [label="CFG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000247" -> "1000244"  [label="AST: "];
"1000252" -> "1000244"  [label="CFG: "];
"1000244" -> "1000309"  [label="DDG: *error"];
"1000244" -> "1000309"  [label="DDG: ErrorUtils::FormatErrorMessage(\n              kUnknownPermissionError, *it)"];
"1000247" -> "1000244"  [label="DDG: kUnknownPermissionError"];
"1000247" -> "1000244"  [label="DDG: *it"];
"1000245" -> "1000244"  [label="AST: "];
"1000245" -> "1000246"  [label="CFG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000248" -> "1000245"  [label="CFG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000246" -> "1000241"  [label="CFG: "];
"1000245" -> "1000246"  [label="CFG: "];
"1000247" -> "1000244"  [label="AST: "];
"1000247" -> "1000249"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000249" -> "1000247"  [label="AST: "];
"1000244" -> "1000247"  [label="CFG: "];
"1000247" -> "1000309"  [label="DDG: kUnknownPermissionError"];
"1000247" -> "1000309"  [label="DDG: *it"];
"1000247" -> "1000244"  [label="DDG: kUnknownPermissionError"];
"1000247" -> "1000244"  [label="DDG: *it"];
"1000237" -> "1000247"  [label="DDG: *it"];
"1000248" -> "1000247"  [label="AST: "];
"1000248" -> "1000245"  [label="CFG: "];
"1000250" -> "1000248"  [label="CFG: "];
"1000249" -> "1000247"  [label="AST: "];
"1000249" -> "1000250"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000247" -> "1000249"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000250" -> "1000248"  [label="CFG: "];
"1000249" -> "1000250"  [label="CFG: "];
"1000251" -> "1000243"  [label="AST: "];
"1000251" -> "1000252"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000309" -> "1000251"  [label="CFG: "];
"1000251" -> "1000309"  [label="DDG: <RET>"];
"1000252" -> "1000251"  [label="DDG: NULL"];
"1000252" -> "1000251"  [label="AST: "];
"1000252" -> "1000244"  [label="CFG: "];
"1000251" -> "1000252"  [label="CFG: "];
"1000252" -> "1000251"  [label="DDG: NULL"];
"1000254" -> "1000253"  [label="AST: "];
"1000254" -> "1000241"  [label="CFG: "];
"1000253" -> "1000254"  [label="CFG: "];
"1000253" -> "1000233"  [label="AST: "];
"1000253" -> "1000254"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000257" -> "1000253"  [label="CFG: "];
"1000253" -> "1000309"  [label="DDG: apis.insert(permission_info->id())"];
"1000253" -> "1000309"  [label="DDG: permission_info->id()"];
"1000256" -> "1000104"  [label="AST: "];
"1000257" -> "1000256"  [label="AST: "];
"1000258" -> "1000256"  [label="AST: "];
"1000257" -> "1000256"  [label="AST: "];
"1000257" -> "1000230"  [label="CFG: "];
"1000257" -> "1000253"  [label="CFG: "];
"1000257" -> "1000115"  [label="CFG: "];
"1000261" -> "1000257"  [label="CFG: "];
"1000304" -> "1000257"  [label="CFG: "];
"1000257" -> "1000309"  [label="DDG: permissions.origins.get()"];
"1000258" -> "1000256"  [label="AST: "];
"1000259" -> "1000258"  [label="AST: "];
"1000260" -> "1000258"  [label="AST: "];
"1000263" -> "1000258"  [label="AST: "];
"1000266" -> "1000258"  [label="AST: "];
"1000260" -> "1000258"  [label="AST: "];
"1000260" -> "1000262"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000262" -> "1000260"  [label="AST: "];
"1000264" -> "1000260"  [label="CFG: "];
"1000260" -> "1000309"  [label="DDG: permissions.origins->begin()"];
"1000260" -> "1000263"  [label="DDG: it"];
"1000261" -> "1000260"  [label="AST: "];
"1000261" -> "1000257"  [label="CFG: "];
"1000262" -> "1000261"  [label="CFG: "];
"1000262" -> "1000260"  [label="AST: "];
"1000262" -> "1000261"  [label="CFG: "];
"1000260" -> "1000262"  [label="CFG: "];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000109" -> "1000309"  [label="DDG: std::string"];
"1000109" -> "1000309"  [label="DDG: * permissions_list"];
"1000109" -> "1000107"  [label="DDG: std::string"];
"1000109" -> "1000107"  [label="DDG: * permissions_list"];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000108"  [label="CFG: "];
"1000112" -> "1000110"  [label="CFG: "];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000112"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000112" -> "1000110"  [label="CFG: "];
"1000111" -> "1000112"  [label="CFG: "];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000113"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000113" -> "1000106"  [label="AST: "];
"1000115" -> "1000106"  [label="CFG: "];
"1000106" -> "1000309"  [label="DDG: std::vector<std::string>* permissions_list"];
"1000106" -> "1000309"  [label="DDG: permissions.permissions.get()"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000113" -> "1000107"  [label="CFG: "];
"1000107" -> "1000309"  [label="DDG: std::vector"];
"1000107" -> "1000309"  [label="DDG: std::string>* permissions_list"];
"1000109" -> "1000107"  [label="DDG: std::string"];
"1000109" -> "1000107"  [label="DDG: * permissions_list"];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000100"  [label="CFG: "];
"1000110" -> "1000108"  [label="CFG: "];
"1000113" -> "1000106"  [label="AST: "];
"1000113" -> "1000107"  [label="CFG: "];
"1000106" -> "1000113"  [label="CFG: "];
"1000265" -> "1000263"  [label="AST: "];
"1000265" -> "1000264"  [label="CFG: "];
"1000263" -> "1000265"  [label="CFG: "];
"1000263" -> "1000258"  [label="AST: "];
"1000263" -> "1000265"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000263"  [label="AST: "];
"1000269" -> "1000263"  [label="CFG: "];
"1000263" -> "1000309"  [label="DDG: permissions.origins->end()"];
"1000263" -> "1000309"  [label="DDG: it != permissions.origins->end()"];
"1000263" -> "1000309"  [label="DDG: it"];
"1000260" -> "1000263"  [label="DDG: it"];
"1000264" -> "1000263"  [label="AST: "];
"1000264" -> "1000260"  [label="CFG: "];
"1000265" -> "1000264"  [label="CFG: "];
"1000268" -> "1000266"  [label="AST: "];
"1000268" -> "1000270"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000270" -> "1000268"  [label="AST: "];
"1000273" -> "1000268"  [label="CFG: "];
"1000268" -> "1000309"  [label="DDG: allowed_schemes"];
"1000268" -> "1000309"  [label="DDG: Extension::kValidHostPermissionSchemes"];
"1000268" -> "1000274"  [label="DDG: allowed_schemes"];
"1000269" -> "1000268"  [label="AST: "];
"1000269" -> "1000263"  [label="CFG: "];
"1000270" -> "1000269"  [label="CFG: "];
"1000270" -> "1000268"  [label="AST: "];
"1000270" -> "1000269"  [label="CFG: "];
"1000268" -> "1000270"  [label="CFG: "];
"1000272" -> "1000271"  [label="AST: "];
"1000272" -> "1000273"  [label="CFG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000275" -> "1000272"  [label="CFG: "];
"1000280" -> "1000272"  [label="CFG: "];
"1000272" -> "1000309"  [label="DDG: allow_file_access"];
"1000272" -> "1000309"  [label="DDG: !allow_file_access"];
"1000102" -> "1000272"  [label="DDG: allow_file_access"];
"1000273" -> "1000272"  [label="AST: "];
"1000273" -> "1000268"  [label="CFG: "];
"1000272" -> "1000273"  [label="CFG: "];
"1000271" -> "1000266"  [label="AST: "];
"1000272" -> "1000271"  [label="AST: "];
"1000274" -> "1000271"  [label="AST: "];
"1000276" -> "1000274"  [label="AST: "];
"1000276" -> "1000275"  [label="CFG: "];
"1000274" -> "1000276"  [label="CFG: "];
"1000274" -> "1000271"  [label="AST: "];
"1000274" -> "1000276"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000276" -> "1000274"  [label="AST: "];
"1000280" -> "1000274"  [label="CFG: "];
"1000274" -> "1000309"  [label="DDG: allowed_schemes"];
"1000274" -> "1000309"  [label="DDG: allowed_schemes &= ~URLPattern::SCHEME_FILE"];
"1000274" -> "1000309"  [label="DDG: ~URLPattern::SCHEME_FILE"];
"1000268" -> "1000274"  [label="DDG: allowed_schemes"];
"1000275" -> "1000274"  [label="AST: "];
"1000275" -> "1000272"  [label="CFG: "];
"1000276" -> "1000275"  [label="CFG: "];
"1000279" -> "1000266"  [label="AST: "];
"1000279" -> "1000281"  [label="CFG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000281" -> "1000279"  [label="AST: "];
"1000286" -> "1000279"  [label="CFG: "];
"1000279" -> "1000309"  [label="DDG: origin.Parse(*it)"];
"1000281" -> "1000279"  [label="DDG: *it"];
"1000279" -> "1000285"  [label="DDG: parse_result"];
"1000280" -> "1000279"  [label="AST: "];
"1000280" -> "1000274"  [label="CFG: "];
"1000280" -> "1000272"  [label="CFG: "];
"1000283" -> "1000280"  [label="CFG: "];
"1000281" -> "1000279"  [label="AST: "];
"1000281" -> "1000282"  [label="CFG: "];
"1000282" -> "1000281"  [label="AST: "];
"1000279" -> "1000281"  [label="CFG: "];
"1000281" -> "1000309"  [label="DDG: *it"];
"1000281" -> "1000279"  [label="DDG: *it"];
"1000237" -> "1000281"  [label="DDG: *it"];
"1000281" -> "1000292"  [label="DDG: *it"];
"1000282" -> "1000281"  [label="AST: "];
"1000282" -> "1000283"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000281" -> "1000282"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000283" -> "1000280"  [label="CFG: "];
"1000282" -> "1000283"  [label="CFG: "];
"1000266" -> "1000258"  [label="AST: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="AST: "];
"1000271" -> "1000266"  [label="AST: "];
"1000277" -> "1000266"  [label="AST: "];
"1000278" -> "1000266"  [label="AST: "];
"1000279" -> "1000266"  [label="AST: "];
"1000284" -> "1000266"  [label="AST: "];
"1000300" -> "1000266"  [label="AST: "];
"1000285" -> "1000284"  [label="AST: "];
"1000285" -> "1000287"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000285"  [label="AST: "];
"1000291" -> "1000285"  [label="CFG: "];
"1000301" -> "1000285"  [label="CFG: "];
"1000285" -> "1000309"  [label="DDG: URLPattern::PARSE_SUCCESS"];
"1000285" -> "1000309"  [label="DDG: URLPattern::PARSE_SUCCESS != parse_result"];
"1000285" -> "1000309"  [label="DDG: parse_result"];
"1000279" -> "1000285"  [label="DDG: parse_result"];
"1000285" -> "1000296"  [label="DDG: parse_result"];
"1000286" -> "1000285"  [label="AST: "];
"1000286" -> "1000279"  [label="CFG: "];
"1000287" -> "1000286"  [label="CFG: "];
"1000287" -> "1000285"  [label="AST: "];
"1000287" -> "1000286"  [label="CFG: "];
"1000285" -> "1000287"  [label="CFG: "];
"1000288" -> "1000284"  [label="AST: "];
"1000289" -> "1000288"  [label="AST: "];
"1000298" -> "1000288"  [label="AST: "];
"1000284" -> "1000266"  [label="AST: "];
"1000285" -> "1000284"  [label="AST: "];
"1000288" -> "1000284"  [label="AST: "];
"1000291" -> "1000290"  [label="AST: "];
"1000291" -> "1000285"  [label="CFG: "];
"1000290" -> "1000291"  [label="CFG: "];
"1000292" -> "1000289"  [label="AST: "];
"1000292" -> "1000296"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000294" -> "1000292"  [label="AST: "];
"1000296" -> "1000292"  [label="AST: "];
"1000289" -> "1000292"  [label="CFG: "];
"1000292" -> "1000309"  [label="DDG: *it"];
"1000292" -> "1000309"  [label="DDG: kInvalidOrigin"];
"1000292" -> "1000309"  [label="DDG: URLPattern::GetParseResultString(parse_result)"];
"1000292" -> "1000289"  [label="DDG: kInvalidOrigin"];
"1000292" -> "1000289"  [label="DDG: *it"];
"1000292" -> "1000289"  [label="DDG: URLPattern::GetParseResultString(parse_result)"];
"1000281" -> "1000292"  [label="DDG: *it"];
"1000296" -> "1000292"  [label="DDG: parse_result"];
"1000289" -> "1000288"  [label="AST: "];
"1000289" -> "1000292"  [label="CFG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000292" -> "1000289"  [label="AST: "];
"1000299" -> "1000289"  [label="CFG: "];
"1000289" -> "1000309"  [label="DDG: ErrorUtils::FormatErrorMessage(\n            kInvalidOrigin,\n            *it,\n            URLPattern::GetParseResultString(parse_result))"];
"1000289" -> "1000309"  [label="DDG: *error"];
"1000292" -> "1000289"  [label="DDG: kInvalidOrigin"];
"1000292" -> "1000289"  [label="DDG: *it"];
"1000292" -> "1000289"  [label="DDG: URLPattern::GetParseResultString(parse_result)"];
"1000290" -> "1000289"  [label="AST: "];
"1000290" -> "1000291"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000293" -> "1000290"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000293" -> "1000290"  [label="CFG: "];
"1000295" -> "1000293"  [label="CFG: "];
"1000294" -> "1000292"  [label="AST: "];
"1000294" -> "1000295"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000297" -> "1000294"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000295" -> "1000293"  [label="CFG: "];
"1000294" -> "1000295"  [label="CFG: "];
"1000114" -> "1000104"  [label="AST: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000106"  [label="CFG: "];
"1000119" -> "1000115"  [label="CFG: "];
"1000257" -> "1000115"  [label="CFG: "];
"1000296" -> "1000292"  [label="AST: "];
"1000296" -> "1000297"  [label="CFG: "];
"1000297" -> "1000296"  [label="AST: "];
"1000292" -> "1000296"  [label="CFG: "];
"1000296" -> "1000309"  [label="DDG: parse_result"];
"1000296" -> "1000292"  [label="DDG: parse_result"];
"1000285" -> "1000296"  [label="DDG: parse_result"];
"1000297" -> "1000296"  [label="AST: "];
"1000297" -> "1000294"  [label="CFG: "];
"1000296" -> "1000297"  [label="CFG: "];
"1000299" -> "1000298"  [label="AST: "];
"1000299" -> "1000289"  [label="CFG: "];
"1000298" -> "1000299"  [label="CFG: "];
"1000299" -> "1000298"  [label="DDG: NULL"];
"1000298" -> "1000288"  [label="AST: "];
"1000298" -> "1000299"  [label="CFG: "];
"1000299" -> "1000298"  [label="AST: "];
"1000309" -> "1000298"  [label="CFG: "];
"1000298" -> "1000309"  [label="DDG: <RET>"];
"1000299" -> "1000298"  [label="DDG: NULL"];
"1000301" -> "1000300"  [label="AST: "];
"1000301" -> "1000285"  [label="CFG: "];
"1000300" -> "1000301"  [label="CFG: "];
"1000300" -> "1000266"  [label="AST: "];
"1000300" -> "1000301"  [label="CFG: "];
"1000301" -> "1000300"  [label="AST: "];
"1000304" -> "1000300"  [label="CFG: "];
"1000300" -> "1000309"  [label="DDG: origin"];
"1000300" -> "1000309"  [label="DDG: origins.AddPattern(origin)"];
"1000302" -> "1000104"  [label="AST: "];
"1000302" -> "1000303"  [label="CFG: "];
"1000303" -> "1000302"  [label="AST: "];
"1000309" -> "1000302"  [label="CFG: "];
"1000302" -> "1000309"  [label="DDG: <RET>"];
"1000303" -> "1000302"  [label="DDG: scoped_refptr<PermissionSet>(\n      new PermissionSet(apis, origins, URLPatternSet()))"];
"1000305" -> "1000303"  [label="AST: "];
"1000305" -> "1000307"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000307" -> "1000305"  [label="AST: "];
"1000303" -> "1000305"  [label="CFG: "];
"1000305" -> "1000309"  [label="DDG: new PermissionSet(apis, origins, URLPatternSet())"];
"1000305" -> "1000309"  [label="DDG: PermissionSet"];
"1000305" -> "1000303"  [label="DDG: PermissionSet"];
"1000305" -> "1000303"  [label="DDG: new PermissionSet(apis, origins, URLPatternSet())"];
"1000307" -> "1000305"  [label="DDG: PermissionSet"];
"1000306" -> "1000305"  [label="AST: "];
"1000306" -> "1000304"  [label="CFG: "];
"1000308" -> "1000306"  [label="CFG: "];
"1000303" -> "1000302"  [label="AST: "];
"1000303" -> "1000305"  [label="CFG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000305" -> "1000303"  [label="AST: "];
"1000302" -> "1000303"  [label="CFG: "];
"1000303" -> "1000309"  [label="DDG: scoped_refptr"];
"1000303" -> "1000309"  [label="DDG: scoped_refptr<PermissionSet>(\n      new PermissionSet(apis, origins, URLPatternSet()))"];
"1000303" -> "1000309"  [label="DDG: PermissionSet>(\n      new PermissionSet(apis, origins, URLPatternSet()))"];
"1000303" -> "1000302"  [label="DDG: scoped_refptr<PermissionSet>(\n      new PermissionSet(apis, origins, URLPatternSet()))"];
"1000305" -> "1000303"  [label="DDG: PermissionSet"];
"1000305" -> "1000303"  [label="DDG: new PermissionSet(apis, origins, URLPatternSet())"];
"1000304" -> "1000303"  [label="AST: "];
"1000304" -> "1000300"  [label="CFG: "];
"1000304" -> "1000257"  [label="CFG: "];
"1000306" -> "1000304"  [label="CFG: "];
"1000308" -> "1000307"  [label="AST: "];
"1000308" -> "1000306"  [label="CFG: "];
"1000307" -> "1000308"  [label="CFG: "];
"1000307" -> "1000305"  [label="AST: "];
"1000307" -> "1000308"  [label="CFG: "];
"1000308" -> "1000307"  [label="AST: "];
"1000305" -> "1000307"  [label="CFG: "];
"1000307" -> "1000305"  [label="DDG: PermissionSet"];
"1000118" -> "1000116"  [label="AST: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="AST: "];
"1000123" -> "1000118"  [label="CFG: "];
"1000118" -> "1000309"  [label="DDG: PermissionsInfo::GetInstance()"];
"1000118" -> "1000309"  [label="DDG: info"];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000115"  [label="CFG: "];
"1000120" -> "1000119"  [label="CFG: "];
"1000120" -> "1000118"  [label="AST: "];
"1000120" -> "1000119"  [label="CFG: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000116" -> "1000114"  [label="AST: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000121" -> "1000116"  [label="AST: "];
"1000122" -> "1000116"  [label="AST: "];
"1000125" -> "1000116"  [label="AST: "];
"1000128" -> "1000116"  [label="AST: "];
"1000122" -> "1000116"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000126" -> "1000122"  [label="CFG: "];
"1000122" -> "1000309"  [label="DDG: permissions_list->begin()"];
"1000122" -> "1000125"  [label="DDG: it"];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000118"  [label="CFG: "];
"1000124" -> "1000123"  [label="CFG: "];
"1000124" -> "1000122"  [label="AST: "];
"1000124" -> "1000123"  [label="CFG: "];
"1000122" -> "1000124"  [label="CFG: "];
}
