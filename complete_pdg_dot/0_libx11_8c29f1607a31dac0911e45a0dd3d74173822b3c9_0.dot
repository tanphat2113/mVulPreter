digraph "0_libx11_8c29f1607a31dac0911e45a0dd3d74173822b3c9_0" {
"1000122" [label="(MethodReturn,RET)"];
"1000101" [label="(MethodParameterIn,register Display *dpy)"];
"1000157" [label="(MethodParameterOut,register Display *dpy)"];
"1000114" [label="(Call,_XReply (dpy, (xReply *)&rep, 0, xFalse))"];
"1000115" [label="(Identifier,dpy)"];
"1000116" [label="(Call,(xReply *)&rep)"];
"1000118" [label="(Call,&rep)"];
"1000119" [label="(Identifier,rep)"];
"1000120" [label="(Literal,0)"];
"1000121" [label="(Identifier,xFalse)"];
"1000112" [label="(Call,(void) _XReply (dpy, (xReply *)&rep, 0, xFalse))"];
"1000102" [label="(Block,)"];
"1000108" [label="(Identifier,dpy)"];
"1000107" [label="(Call,LockDisplay(dpy))"];
"1000110" [label="(Identifier,GetModifierMapping)"];
"1000111" [label="(Identifier,req)"];
"1000109" [label="(Call,GetEmptyReq(GetModifierMapping, req))"];
"1000122" -> "1000100"  [label="AST: "];
"1000122" -> "1000112"  [label="CFG: "];
"1000107" -> "1000122"  [label="DDG: LockDisplay(dpy)"];
"1000112" -> "1000122"  [label="DDG: _XReply (dpy, (xReply *)&rep, 0, xFalse)"];
"1000112" -> "1000122"  [label="DDG: (void) _XReply (dpy, (xReply *)&rep, 0, xFalse)"];
"1000116" -> "1000122"  [label="DDG: &rep"];
"1000109" -> "1000122"  [label="DDG: GetEmptyReq(GetModifierMapping, req)"];
"1000109" -> "1000122"  [label="DDG: GetModifierMapping"];
"1000109" -> "1000122"  [label="DDG: req"];
"1000114" -> "1000122"  [label="DDG: dpy"];
"1000114" -> "1000122"  [label="DDG: xFalse"];
"1000114" -> "1000122"  [label="DDG: (xReply *)&rep"];
"1000101" -> "1000122"  [label="DDG: dpy"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000122"  [label="DDG: dpy"];
"1000101" -> "1000107"  [label="DDG: dpy"];
"1000101" -> "1000114"  [label="DDG: dpy"];
"1000157" -> "1000100"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000114" -> "1000121"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000120" -> "1000114"  [label="AST: "];
"1000121" -> "1000114"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000114" -> "1000122"  [label="DDG: dpy"];
"1000114" -> "1000122"  [label="DDG: xFalse"];
"1000114" -> "1000122"  [label="DDG: (xReply *)&rep"];
"1000114" -> "1000112"  [label="DDG: dpy"];
"1000114" -> "1000112"  [label="DDG: (xReply *)&rep"];
"1000114" -> "1000112"  [label="DDG: 0"];
"1000114" -> "1000112"  [label="DDG: xFalse"];
"1000107" -> "1000114"  [label="DDG: dpy"];
"1000101" -> "1000114"  [label="DDG: dpy"];
"1000116" -> "1000114"  [label="DDG: &rep"];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000113"  [label="CFG: "];
"1000117" -> "1000115"  [label="CFG: "];
"1000116" -> "1000114"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000120" -> "1000116"  [label="CFG: "];
"1000116" -> "1000122"  [label="DDG: &rep"];
"1000116" -> "1000114"  [label="DDG: &rep"];
"1000118" -> "1000116"  [label="AST: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000117"  [label="CFG: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000120" -> "1000114"  [label="AST: "];
"1000120" -> "1000116"  [label="CFG: "];
"1000121" -> "1000120"  [label="CFG: "];
"1000121" -> "1000114"  [label="AST: "];
"1000121" -> "1000120"  [label="CFG: "];
"1000114" -> "1000121"  [label="CFG: "];
"1000112" -> "1000102"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000122" -> "1000112"  [label="CFG: "];
"1000112" -> "1000122"  [label="DDG: _XReply (dpy, (xReply *)&rep, 0, xFalse)"];
"1000112" -> "1000122"  [label="DDG: (void) _XReply (dpy, (xReply *)&rep, 0, xFalse)"];
"1000114" -> "1000112"  [label="DDG: dpy"];
"1000114" -> "1000112"  [label="DDG: (xReply *)&rep"];
"1000114" -> "1000112"  [label="DDG: 0"];
"1000114" -> "1000112"  [label="DDG: xFalse"];
"1000102" -> "1000100"  [label="AST: "];
"1000103" -> "1000102"  [label="AST: "];
"1000104" -> "1000102"  [label="AST: "];
"1000105" -> "1000102"  [label="AST: "];
"1000106" -> "1000102"  [label="AST: "];
"1000107" -> "1000102"  [label="AST: "];
"1000109" -> "1000102"  [label="AST: "];
"1000112" -> "1000102"  [label="AST: "];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000100"  [label="CFG: "];
"1000107" -> "1000108"  [label="CFG: "];
"1000107" -> "1000102"  [label="AST: "];
"1000107" -> "1000108"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000110" -> "1000107"  [label="CFG: "];
"1000107" -> "1000122"  [label="DDG: LockDisplay(dpy)"];
"1000101" -> "1000107"  [label="DDG: dpy"];
"1000107" -> "1000114"  [label="DDG: dpy"];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000107"  [label="CFG: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000109" -> "1000102"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000113" -> "1000109"  [label="CFG: "];
"1000109" -> "1000122"  [label="DDG: GetEmptyReq(GetModifierMapping, req)"];
"1000109" -> "1000122"  [label="DDG: GetModifierMapping"];
"1000109" -> "1000122"  [label="DDG: req"];
}
