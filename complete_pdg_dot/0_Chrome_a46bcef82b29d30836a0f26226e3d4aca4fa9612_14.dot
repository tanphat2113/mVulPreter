digraph "0_Chrome_a46bcef82b29d30836a0f26226e3d4aca4fa9612_14" {
"1000162" [label="(MethodReturn,void)"];
"1000101" [label="(Block,)"];
"1000121" [label="(Call,access_verifier_.get())"];
"1000120" [label="(Call,DCHECK(access_verifier_.get()))"];
"1000125" [label="(Identifier,kInitial)"];
"1000122" [label="(ControlStructure,if (state_ != kInitial))"];
"1000123" [label="(Call,state_ != kInitial)"];
"1000124" [label="(Identifier,state_)"];
"1000126" [label="(Return,return;)"];
"1000129" [label="(Identifier,kStarted)"];
"1000127" [label="(Call,state_ = kStarted)"];
"1000128" [label="(Identifier,state_)"];
"1000133" [label="(ControlStructure,if (!config_->GetString(kXmppLoginConfigPath, &xmpp_login) ||\n      !config_->GetString(kXmppAuthTokenConfigPath, &xmpp_auth_token) ||\n      !config_->GetString(kXmppAuthServiceConfigPath, &xmpp_auth_service)))"];
"1000137" [label="(Identifier,kXmppLoginConfigPath)"];
"1000138" [label="(Call,&xmpp_login)"];
"1000139" [label="(Identifier,xmpp_login)"];
"1000134" [label="(Call,!config_->GetString(kXmppLoginConfigPath, &xmpp_login) ||\n      !config_->GetString(kXmppAuthTokenConfigPath, &xmpp_auth_token) ||\n      !config_->GetString(kXmppAuthServiceConfigPath, &xmpp_auth_service))"];
"1000135" [label="(Call,!config_->GetString(kXmppLoginConfigPath, &xmpp_login))"];
"1000136" [label="(Call,config_->GetString(kXmppLoginConfigPath, &xmpp_login))"];
"1000102" [label="(ControlStructure,if (!context_->network_message_loop()->BelongsToCurrentThread()))"];
"1000103" [label="(Call,!context_->network_message_loop()->BelongsToCurrentThread())"];
"1000105" [label="(Block,)"];
"1000104" [label="(Call,context_->network_message_loop()->BelongsToCurrentThread())"];
"1000143" [label="(Identifier,kXmppAuthTokenConfigPath)"];
"1000144" [label="(Call,&xmpp_auth_token)"];
"1000145" [label="(Identifier,xmpp_auth_token)"];
"1000140" [label="(Call,!config_->GetString(kXmppAuthTokenConfigPath, &xmpp_auth_token) ||\n      !config_->GetString(kXmppAuthServiceConfigPath, &xmpp_auth_service))"];
"1000141" [label="(Call,!config_->GetString(kXmppAuthTokenConfigPath, &xmpp_auth_token))"];
"1000142" [label="(Call,config_->GetString(kXmppAuthTokenConfigPath, &xmpp_auth_token))"];
"1000148" [label="(Identifier,kXmppAuthServiceConfigPath)"];
"1000149" [label="(Call,&xmpp_auth_service)"];
"1000150" [label="(Identifier,xmpp_auth_service)"];
"1000146" [label="(Call,!config_->GetString(kXmppAuthServiceConfigPath, &xmpp_auth_service))"];
"1000147" [label="(Call,config_->GetString(kXmppAuthServiceConfigPath, &xmpp_auth_service))"];
"1000151" [label="(Block,)"];
"1000155" [label="(Literal,\"XMPP credentials are not defined in the config.\")"];
"1000152" [label="(Call,LOG(ERROR) << \"XMPP credentials are not defined in the config.\")"];
"1000153" [label="(Call,LOG(ERROR))"];
"1000154" [label="(Identifier,ERROR)"];
"1000156" [label="(Return,return;)"];
"1000157" [label="(Call,signal_strategy_.reset(\n      new XmppSignalStrategy(context_->jingle_thread(), xmpp_login,\n                             xmpp_auth_token,\n                             xmpp_auth_service)))"];
"1000159" [label="(Identifier,XmppSignalStrategy)"];
"1000158" [label="(Call,new XmppSignalStrategy(context_->jingle_thread(), xmpp_login,\n                             xmpp_auth_token,\n                             xmpp_auth_service))"];
"1000106" [label="(Call,context_->network_message_loop()->PostTask(\n        FROM_HERE, base::Bind(&ChromotingHost::Start, this)))"];
"1000160" [label="(Call,signal_strategy_->Init(this))"];
"1000161" [label="(Identifier,this)"];
"1000108" [label="(Call,base::Bind(&ChromotingHost::Start, this))"];
"1000109" [label="(Call,&ChromotingHost::Start)"];
"1000110" [label="(Identifier,ChromotingHost::Start)"];
"1000111" [label="(Identifier,this)"];
"1000107" [label="(Identifier,FROM_HERE)"];
"1000112" [label="(Return,return;)"];
"1000116" [label="(Literal,\"Starting host\")"];
"1000113" [label="(Call,LOG(INFO) << \"Starting host\")"];
"1000114" [label="(Call,LOG(INFO))"];
"1000115" [label="(Identifier,INFO)"];
"1000119" [label="(Call,signal_strategy_.get())"];
"1000117" [label="(Call,DCHECK(!signal_strategy_.get()))"];
"1000118" [label="(Call,!signal_strategy_.get())"];
"1000162" -> "1000100"  [label="AST: "];
"1000162" -> "1000112"  [label="CFG: "];
"1000162" -> "1000126"  [label="CFG: "];
"1000162" -> "1000156"  [label="CFG: "];
"1000162" -> "1000160"  [label="CFG: "];
"1000126" -> "1000162"  [label="DDG: <RET>"];
"1000141" -> "1000162"  [label="DDG: config_->GetString(kXmppAuthTokenConfigPath, &xmpp_auth_token)"];
"1000123" -> "1000162"  [label="DDG: kInitial"];
"1000123" -> "1000162"  [label="DDG: state_"];
"1000123" -> "1000162"  [label="DDG: state_ != kInitial"];
"1000106" -> "1000162"  [label="DDG: base::Bind(&ChromotingHost::Start, this)"];
"1000106" -> "1000162"  [label="DDG: FROM_HERE"];
"1000106" -> "1000162"  [label="DDG: context_->network_message_loop()->PostTask(\n        FROM_HERE, base::Bind(&ChromotingHost::Start, this))"];
"1000157" -> "1000162"  [label="DDG: signal_strategy_.reset(\n      new XmppSignalStrategy(context_->jingle_thread(), xmpp_login,\n                             xmpp_auth_token,\n                             xmpp_auth_service))"];
"1000157" -> "1000162"  [label="DDG: new XmppSignalStrategy(context_->jingle_thread(), xmpp_login,\n                             xmpp_auth_token,\n                             xmpp_auth_service)"];
"1000103" -> "1000162"  [label="DDG: context_->network_message_loop()->BelongsToCurrentThread()"];
"1000103" -> "1000162"  [label="DDG: !context_->network_message_loop()->BelongsToCurrentThread()"];
"1000117" -> "1000162"  [label="DDG: !signal_strategy_.get()"];
"1000117" -> "1000162"  [label="DDG: DCHECK(!signal_strategy_.get())"];
"1000153" -> "1000162"  [label="DDG: ERROR"];
"1000118" -> "1000162"  [label="DDG: signal_strategy_.get()"];
"1000140" -> "1000162"  [label="DDG: !config_->GetString(kXmppAuthServiceConfigPath, &xmpp_auth_service)"];
"1000140" -> "1000162"  [label="DDG: !config_->GetString(kXmppAuthTokenConfigPath, &xmpp_auth_token)"];
"1000158" -> "1000162"  [label="DDG: XmppSignalStrategy"];
"1000113" -> "1000162"  [label="DDG: LOG(INFO)"];
"1000113" -> "1000162"  [label="DDG: LOG(INFO) << \\"Starting host\\""];
"1000160" -> "1000162"  [label="DDG: signal_strategy_->Init(this)"];
"1000160" -> "1000162"  [label="DDG: this"];
"1000134" -> "1000162"  [label="DDG: !config_->GetString(kXmppAuthTokenConfigPath, &xmpp_auth_token) ||\n      !config_->GetString(kXmppAuthServiceConfigPath, &xmpp_auth_service)"];
"1000134" -> "1000162"  [label="DDG: !config_->GetString(kXmppLoginConfigPath, &xmpp_login) ||\n      !config_->GetString(kXmppAuthTokenConfigPath, &xmpp_auth_token) ||\n      !config_->GetString(kXmppAuthServiceConfigPath, &xmpp_auth_service)"];
"1000134" -> "1000162"  [label="DDG: !config_->GetString(kXmppLoginConfigPath, &xmpp_login)"];
"1000152" -> "1000162"  [label="DDG: LOG(ERROR) << \\"XMPP credentials are not defined in the config.\\""];
"1000152" -> "1000162"  [label="DDG: LOG(ERROR)"];
"1000127" -> "1000162"  [label="DDG: kStarted"];
"1000127" -> "1000162"  [label="DDG: state_"];
"1000142" -> "1000162"  [label="DDG: &xmpp_auth_token"];
"1000142" -> "1000162"  [label="DDG: kXmppAuthTokenConfigPath"];
"1000114" -> "1000162"  [label="DDG: INFO"];
"1000120" -> "1000162"  [label="DDG: access_verifier_.get()"];
"1000120" -> "1000162"  [label="DDG: DCHECK(access_verifier_.get())"];
"1000147" -> "1000162"  [label="DDG: &xmpp_auth_service"];
"1000147" -> "1000162"  [label="DDG: kXmppAuthServiceConfigPath"];
"1000135" -> "1000162"  [label="DDG: config_->GetString(kXmppLoginConfigPath, &xmpp_login)"];
"1000136" -> "1000162"  [label="DDG: &xmpp_login"];
"1000136" -> "1000162"  [label="DDG: kXmppLoginConfigPath"];
"1000146" -> "1000162"  [label="DDG: config_->GetString(kXmppAuthServiceConfigPath, &xmpp_auth_service)"];
"1000108" -> "1000162"  [label="DDG: this"];
"1000108" -> "1000162"  [label="DDG: &ChromotingHost::Start"];
"1000112" -> "1000162"  [label="DDG: <RET>"];
"1000156" -> "1000162"  [label="DDG: <RET>"];
"1000101" -> "1000100"  [label="AST: "];
"1000102" -> "1000101"  [label="AST: "];
"1000113" -> "1000101"  [label="AST: "];
"1000117" -> "1000101"  [label="AST: "];
"1000120" -> "1000101"  [label="AST: "];
"1000122" -> "1000101"  [label="AST: "];
"1000127" -> "1000101"  [label="AST: "];
"1000130" -> "1000101"  [label="AST: "];
"1000131" -> "1000101"  [label="AST: "];
"1000132" -> "1000101"  [label="AST: "];
"1000133" -> "1000101"  [label="AST: "];
"1000157" -> "1000101"  [label="AST: "];
"1000160" -> "1000101"  [label="AST: "];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000117"  [label="CFG: "];
"1000120" -> "1000121"  [label="CFG: "];
"1000120" -> "1000101"  [label="AST: "];
"1000120" -> "1000121"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000124" -> "1000120"  [label="CFG: "];
"1000120" -> "1000162"  [label="DDG: access_verifier_.get()"];
"1000120" -> "1000162"  [label="DDG: DCHECK(access_verifier_.get())"];
"1000125" -> "1000123"  [label="AST: "];
"1000125" -> "1000124"  [label="CFG: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000122" -> "1000101"  [label="AST: "];
"1000123" -> "1000122"  [label="AST: "];
"1000126" -> "1000122"  [label="AST: "];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000126" -> "1000123"  [label="CFG: "];
"1000128" -> "1000123"  [label="CFG: "];
"1000123" -> "1000162"  [label="DDG: kInitial"];
"1000123" -> "1000162"  [label="DDG: state_"];
"1000123" -> "1000162"  [label="DDG: state_ != kInitial"];
"1000124" -> "1000123"  [label="AST: "];
"1000124" -> "1000120"  [label="CFG: "];
"1000125" -> "1000124"  [label="CFG: "];
"1000126" -> "1000122"  [label="AST: "];
"1000126" -> "1000123"  [label="CFG: "];
"1000162" -> "1000126"  [label="CFG: "];
"1000126" -> "1000162"  [label="DDG: <RET>"];
"1000129" -> "1000127"  [label="AST: "];
"1000129" -> "1000128"  [label="CFG: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000127" -> "1000101"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000137" -> "1000127"  [label="CFG: "];
"1000127" -> "1000162"  [label="DDG: kStarted"];
"1000127" -> "1000162"  [label="DDG: state_"];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000123"  [label="CFG: "];
"1000129" -> "1000128"  [label="CFG: "];
"1000133" -> "1000101"  [label="AST: "];
"1000134" -> "1000133"  [label="AST: "];
"1000151" -> "1000133"  [label="AST: "];
"1000137" -> "1000136"  [label="AST: "];
"1000137" -> "1000127"  [label="CFG: "];
"1000139" -> "1000137"  [label="CFG: "];
"1000138" -> "1000136"  [label="AST: "];
"1000138" -> "1000139"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000136" -> "1000138"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000137"  [label="CFG: "];
"1000138" -> "1000139"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000135"  [label="CFG: "];
"1000134" -> "1000140"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000140" -> "1000134"  [label="AST: "];
"1000154" -> "1000134"  [label="CFG: "];
"1000159" -> "1000134"  [label="CFG: "];
"1000134" -> "1000162"  [label="DDG: !config_->GetString(kXmppAuthTokenConfigPath, &xmpp_auth_token) ||\n      !config_->GetString(kXmppAuthServiceConfigPath, &xmpp_auth_service)"];
"1000134" -> "1000162"  [label="DDG: !config_->GetString(kXmppLoginConfigPath, &xmpp_login) ||\n      !config_->GetString(kXmppAuthTokenConfigPath, &xmpp_auth_token) ||\n      !config_->GetString(kXmppAuthServiceConfigPath, &xmpp_auth_service)"];
"1000134" -> "1000162"  [label="DDG: !config_->GetString(kXmppLoginConfigPath, &xmpp_login)"];
"1000135" -> "1000134"  [label="DDG: config_->GetString(kXmppLoginConfigPath, &xmpp_login)"];
"1000140" -> "1000134"  [label="DDG: !config_->GetString(kXmppAuthTokenConfigPath, &xmpp_auth_token)"];
"1000140" -> "1000134"  [label="DDG: !config_->GetString(kXmppAuthServiceConfigPath, &xmpp_auth_service)"];
"1000135" -> "1000134"  [label="AST: "];
"1000135" -> "1000136"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000143" -> "1000135"  [label="CFG: "];
"1000134" -> "1000135"  [label="CFG: "];
"1000135" -> "1000162"  [label="DDG: config_->GetString(kXmppLoginConfigPath, &xmpp_login)"];
"1000135" -> "1000134"  [label="DDG: config_->GetString(kXmppLoginConfigPath, &xmpp_login)"];
"1000136" -> "1000135"  [label="DDG: kXmppLoginConfigPath"];
"1000136" -> "1000135"  [label="DDG: &xmpp_login"];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000138"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000135" -> "1000136"  [label="CFG: "];
"1000136" -> "1000162"  [label="DDG: &xmpp_login"];
"1000136" -> "1000162"  [label="DDG: kXmppLoginConfigPath"];
"1000136" -> "1000135"  [label="DDG: kXmppLoginConfigPath"];
"1000136" -> "1000135"  [label="DDG: &xmpp_login"];
"1000102" -> "1000101"  [label="AST: "];
"1000103" -> "1000102"  [label="AST: "];
"1000105" -> "1000102"  [label="AST: "];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000104"  [label="CFG: "];
"1000104" -> "1000103"  [label="AST: "];
"1000107" -> "1000103"  [label="CFG: "];
"1000115" -> "1000103"  [label="CFG: "];
"1000103" -> "1000162"  [label="DDG: context_->network_message_loop()->BelongsToCurrentThread()"];
"1000103" -> "1000162"  [label="DDG: !context_->network_message_loop()->BelongsToCurrentThread()"];
"1000105" -> "1000102"  [label="AST: "];
"1000106" -> "1000105"  [label="AST: "];
"1000112" -> "1000105"  [label="AST: "];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000100"  [label="CFG: "];
"1000103" -> "1000104"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000135"  [label="CFG: "];
"1000145" -> "1000143"  [label="CFG: "];
"1000144" -> "1000142"  [label="AST: "];
"1000144" -> "1000145"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000145" -> "1000143"  [label="CFG: "];
"1000144" -> "1000145"  [label="CFG: "];
"1000140" -> "1000134"  [label="AST: "];
"1000140" -> "1000141"  [label="CFG: "];
"1000140" -> "1000146"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000146" -> "1000140"  [label="AST: "];
"1000134" -> "1000140"  [label="CFG: "];
"1000140" -> "1000162"  [label="DDG: !config_->GetString(kXmppAuthServiceConfigPath, &xmpp_auth_service)"];
"1000140" -> "1000162"  [label="DDG: !config_->GetString(kXmppAuthTokenConfigPath, &xmpp_auth_token)"];
"1000140" -> "1000134"  [label="DDG: !config_->GetString(kXmppAuthTokenConfigPath, &xmpp_auth_token)"];
"1000140" -> "1000134"  [label="DDG: !config_->GetString(kXmppAuthServiceConfigPath, &xmpp_auth_service)"];
"1000141" -> "1000140"  [label="DDG: config_->GetString(kXmppAuthTokenConfigPath, &xmpp_auth_token)"];
"1000146" -> "1000140"  [label="DDG: config_->GetString(kXmppAuthServiceConfigPath, &xmpp_auth_service)"];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000142"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000148" -> "1000141"  [label="CFG: "];
"1000140" -> "1000141"  [label="CFG: "];
"1000141" -> "1000162"  [label="DDG: config_->GetString(kXmppAuthTokenConfigPath, &xmpp_auth_token)"];
"1000141" -> "1000140"  [label="DDG: config_->GetString(kXmppAuthTokenConfigPath, &xmpp_auth_token)"];
"1000142" -> "1000141"  [label="DDG: kXmppAuthTokenConfigPath"];
"1000142" -> "1000141"  [label="DDG: &xmpp_auth_token"];
"1000142" -> "1000141"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000141" -> "1000142"  [label="CFG: "];
"1000142" -> "1000162"  [label="DDG: &xmpp_auth_token"];
"1000142" -> "1000162"  [label="DDG: kXmppAuthTokenConfigPath"];
"1000142" -> "1000141"  [label="DDG: kXmppAuthTokenConfigPath"];
"1000142" -> "1000141"  [label="DDG: &xmpp_auth_token"];
"1000148" -> "1000147"  [label="AST: "];
"1000148" -> "1000141"  [label="CFG: "];
"1000150" -> "1000148"  [label="CFG: "];
"1000149" -> "1000147"  [label="AST: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000150" -> "1000148"  [label="CFG: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000146" -> "1000140"  [label="AST: "];
"1000146" -> "1000147"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000140" -> "1000146"  [label="CFG: "];
"1000146" -> "1000162"  [label="DDG: config_->GetString(kXmppAuthServiceConfigPath, &xmpp_auth_service)"];
"1000146" -> "1000140"  [label="DDG: config_->GetString(kXmppAuthServiceConfigPath, &xmpp_auth_service)"];
"1000147" -> "1000146"  [label="DDG: kXmppAuthServiceConfigPath"];
"1000147" -> "1000146"  [label="DDG: &xmpp_auth_service"];
"1000147" -> "1000146"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000146" -> "1000147"  [label="CFG: "];
"1000147" -> "1000162"  [label="DDG: &xmpp_auth_service"];
"1000147" -> "1000162"  [label="DDG: kXmppAuthServiceConfigPath"];
"1000147" -> "1000146"  [label="DDG: kXmppAuthServiceConfigPath"];
"1000147" -> "1000146"  [label="DDG: &xmpp_auth_service"];
"1000151" -> "1000133"  [label="AST: "];
"1000152" -> "1000151"  [label="AST: "];
"1000156" -> "1000151"  [label="AST: "];
"1000155" -> "1000152"  [label="AST: "];
"1000155" -> "1000153"  [label="CFG: "];
"1000152" -> "1000155"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000155"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000155" -> "1000152"  [label="AST: "];
"1000156" -> "1000152"  [label="CFG: "];
"1000152" -> "1000162"  [label="DDG: LOG(ERROR) << \\"XMPP credentials are not defined in the config.\\""];
"1000152" -> "1000162"  [label="DDG: LOG(ERROR)"];
"1000153" -> "1000152"  [label="DDG: ERROR"];
"1000153" -> "1000152"  [label="AST: "];
"1000153" -> "1000154"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000155" -> "1000153"  [label="CFG: "];
"1000153" -> "1000162"  [label="DDG: ERROR"];
"1000153" -> "1000152"  [label="DDG: ERROR"];
"1000154" -> "1000153"  [label="AST: "];
"1000154" -> "1000134"  [label="CFG: "];
"1000153" -> "1000154"  [label="CFG: "];
"1000156" -> "1000151"  [label="AST: "];
"1000156" -> "1000152"  [label="CFG: "];
"1000162" -> "1000156"  [label="CFG: "];
"1000156" -> "1000162"  [label="DDG: <RET>"];
"1000157" -> "1000101"  [label="AST: "];
"1000157" -> "1000158"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000161" -> "1000157"  [label="CFG: "];
"1000157" -> "1000162"  [label="DDG: signal_strategy_.reset(\n      new XmppSignalStrategy(context_->jingle_thread(), xmpp_login,\n                             xmpp_auth_token,\n                             xmpp_auth_service))"];
"1000157" -> "1000162"  [label="DDG: new XmppSignalStrategy(context_->jingle_thread(), xmpp_login,\n                             xmpp_auth_token,\n                             xmpp_auth_service)"];
"1000158" -> "1000157"  [label="DDG: XmppSignalStrategy"];
"1000159" -> "1000158"  [label="AST: "];
"1000159" -> "1000134"  [label="CFG: "];
"1000158" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000158" -> "1000159"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000157" -> "1000158"  [label="CFG: "];
"1000158" -> "1000162"  [label="DDG: XmppSignalStrategy"];
"1000158" -> "1000157"  [label="DDG: XmppSignalStrategy"];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000108" -> "1000106"  [label="AST: "];
"1000112" -> "1000106"  [label="CFG: "];
"1000106" -> "1000162"  [label="DDG: base::Bind(&ChromotingHost::Start, this)"];
"1000106" -> "1000162"  [label="DDG: FROM_HERE"];
"1000106" -> "1000162"  [label="DDG: context_->network_message_loop()->PostTask(\n        FROM_HERE, base::Bind(&ChromotingHost::Start, this))"];
"1000108" -> "1000106"  [label="DDG: &ChromotingHost::Start"];
"1000108" -> "1000106"  [label="DDG: this"];
"1000160" -> "1000101"  [label="AST: "];
"1000160" -> "1000161"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000162" -> "1000160"  [label="CFG: "];
"1000160" -> "1000162"  [label="DDG: signal_strategy_->Init(this)"];
"1000160" -> "1000162"  [label="DDG: this"];
"1000161" -> "1000160"  [label="AST: "];
"1000161" -> "1000157"  [label="CFG: "];
"1000160" -> "1000161"  [label="CFG: "];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000111"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000111" -> "1000108"  [label="AST: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000108" -> "1000162"  [label="DDG: this"];
"1000108" -> "1000162"  [label="DDG: &ChromotingHost::Start"];
"1000108" -> "1000106"  [label="DDG: &ChromotingHost::Start"];
"1000108" -> "1000106"  [label="DDG: this"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000110"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000107"  [label="CFG: "];
"1000109" -> "1000110"  [label="CFG: "];
"1000111" -> "1000108"  [label="AST: "];
"1000111" -> "1000109"  [label="CFG: "];
"1000108" -> "1000111"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000103"  [label="CFG: "];
"1000110" -> "1000107"  [label="CFG: "];
"1000112" -> "1000105"  [label="AST: "];
"1000112" -> "1000106"  [label="CFG: "];
"1000162" -> "1000112"  [label="CFG: "];
"1000112" -> "1000162"  [label="DDG: <RET>"];
"1000116" -> "1000113"  [label="AST: "];
"1000116" -> "1000114"  [label="CFG: "];
"1000113" -> "1000116"  [label="CFG: "];
"1000113" -> "1000101"  [label="AST: "];
"1000113" -> "1000116"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000116" -> "1000113"  [label="AST: "];
"1000119" -> "1000113"  [label="CFG: "];
"1000113" -> "1000162"  [label="DDG: LOG(INFO)"];
"1000113" -> "1000162"  [label="DDG: LOG(INFO) << \\"Starting host\\""];
"1000114" -> "1000113"  [label="DDG: INFO"];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000115"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="CFG: "];
"1000114" -> "1000162"  [label="DDG: INFO"];
"1000114" -> "1000113"  [label="DDG: INFO"];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000103"  [label="CFG: "];
"1000114" -> "1000115"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000113"  [label="CFG: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000117" -> "1000101"  [label="AST: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000121" -> "1000117"  [label="CFG: "];
"1000117" -> "1000162"  [label="DDG: !signal_strategy_.get()"];
"1000117" -> "1000162"  [label="DDG: DCHECK(!signal_strategy_.get())"];
"1000118" -> "1000117"  [label="DDG: signal_strategy_.get()"];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000118" -> "1000162"  [label="DDG: signal_strategy_.get()"];
"1000118" -> "1000117"  [label="DDG: signal_strategy_.get()"];
}
