digraph "0_Chrome_fec26ff33bf372476a70326f3669a35f34a9d474_9" {
"1000159" [label="(MethodReturn,void)"];
"1000101" [label="(MethodParameterIn,const GURL& url)"];
"1000243" [label="(MethodParameterOut,const GURL& url)"];
"1000129" [label="(Call,* info = iterator_and_whether_inserted.first->second.get())"];
"1000130" [label="(Identifier,info)"];
"1000131" [label="(Call,iterator_and_whether_inserted.first->second.get())"];
"1000134" [label="(Call,request_it = requests.begin())"];
"1000135" [label="(Identifier,request_it)"];
"1000136" [label="(Call,requests.begin())"];
"1000132" [label="(ControlStructure,for (auto request_it = requests.begin(); request_it != requests.end();\n        ++request_it))"];
"1000137" [label="(Call,request_it != requests.end())"];
"1000138" [label="(Identifier,request_it)"];
"1000139" [label="(Call,requests.end())"];
"1000141" [label="(Identifier,request_it)"];
"1000140" [label="(Call,++request_it)"];
"1000144" [label="(Call,job_id = preresolve_jobs_.Add(\n         std::make_unique<PreresolveJob>(std::move(*request_it), info)))"];
"1000145" [label="(Identifier,job_id)"];
"1000146" [label="(Call,preresolve_jobs_.Add(\n         std::make_unique<PreresolveJob>(std::move(*request_it), info)))"];
"1000142" [label="(Block,)"];
"1000149" [label="(Call,PreresolveJob>(std::move(*request_it), info))"];
"1000150" [label="(Identifier,PreresolveJob)"];
"1000151" [label="(Block,)"];
"1000152" [label="(Call,std::move(*request_it))"];
"1000153" [label="(Call,*request_it)"];
"1000154" [label="(Identifier,request_it)"];
"1000155" [label="(Identifier,info)"];
"1000147" [label="(Call,std::make_unique<PreresolveJob>(std::move(*request_it), info))"];
"1000148" [label="(Identifier,std::make_unique)"];
"1000157" [label="(Identifier,job_id)"];
"1000156" [label="(Call,queued_jobs_.push_back(job_id))"];
"1000158" [label="(Call,TryToLaunchPreresolveJobs())"];
"1000102" [label="(MethodParameterIn,std::vector<PreconnectRequest> requests)"];
"1000244" [label="(MethodParameterOut,std::vector<PreconnectRequest> requests)"];
"1000103" [label="(Block,)"];
"1000104" [label="(Call,DCHECK_CURRENTLY_ON(content::BrowserThread::UI))"];
"1000105" [label="(Identifier,content::BrowserThread::UI)"];
"1000107" [label="(Call,host = url.host())"];
"1000108" [label="(Identifier,host)"];
"1000109" [label="(Call,url.host())"];
"1000110" [label="(ControlStructure,if (preresolve_info_.find(host) != preresolve_info_.end()))"];
"1000113" [label="(Identifier,host)"];
"1000114" [label="(Call,preresolve_info_.end())"];
"1000111" [label="(Call,preresolve_info_.find(host) != preresolve_info_.end())"];
"1000112" [label="(Call,preresolve_info_.find(host))"];
"1000115" [label="(Return,return;)"];
"1000119" [label="(Call,preresolve_info_.emplace(\n      host, std::make_unique<PreresolveInfo>(url, requests.size())))"];
"1000117" [label="(Call,iterator_and_whether_inserted = preresolve_info_.emplace(\n      host, std::make_unique<PreresolveInfo>(url, requests.size())))"];
"1000118" [label="(Identifier,iterator_and_whether_inserted)"];
"1000121" [label="(Call,std::make_unique<PreresolveInfo>(url, requests.size()))"];
"1000122" [label="(Identifier,std::make_unique)"];
"1000123" [label="(Call,PreresolveInfo>(url, requests.size()))"];
"1000124" [label="(Identifier,PreresolveInfo)"];
"1000125" [label="(Block,)"];
"1000126" [label="(Identifier,url)"];
"1000127" [label="(Call,requests.size())"];
"1000120" [label="(Identifier,host)"];
"1000159" -> "1000100"  [label="AST: "];
"1000159" -> "1000115"  [label="CFG: "];
"1000159" -> "1000158"  [label="CFG: "];
"1000129" -> "1000159"  [label="DDG: info"];
"1000129" -> "1000159"  [label="DDG: iterator_and_whether_inserted.first->second.get()"];
"1000156" -> "1000159"  [label="DDG: job_id"];
"1000156" -> "1000159"  [label="DDG: queued_jobs_.push_back(job_id)"];
"1000104" -> "1000159"  [label="DDG: DCHECK_CURRENTLY_ON(content::BrowserThread::UI)"];
"1000104" -> "1000159"  [label="DDG: content::BrowserThread::UI"];
"1000111" -> "1000159"  [label="DDG: preresolve_info_.end()"];
"1000111" -> "1000159"  [label="DDG: preresolve_info_.find(host)"];
"1000111" -> "1000159"  [label="DDG: preresolve_info_.find(host) != preresolve_info_.end()"];
"1000119" -> "1000159"  [label="DDG: std::make_unique<PreresolveInfo>(url, requests.size())"];
"1000119" -> "1000159"  [label="DDG: host"];
"1000117" -> "1000159"  [label="DDG: iterator_and_whether_inserted"];
"1000117" -> "1000159"  [label="DDG: preresolve_info_.emplace(\n      host, std::make_unique<PreresolveInfo>(url, requests.size()))"];
"1000149" -> "1000159"  [label="DDG: PreresolveJob"];
"1000144" -> "1000159"  [label="DDG: preresolve_jobs_.Add(\n         std::make_unique<PreresolveJob>(std::move(*request_it), info))"];
"1000121" -> "1000159"  [label="DDG: PreresolveInfo>(url, requests.size())"];
"1000121" -> "1000159"  [label="DDG: std::make_unique"];
"1000137" -> "1000159"  [label="DDG: requests.end()"];
"1000137" -> "1000159"  [label="DDG: request_it"];
"1000137" -> "1000159"  [label="DDG: request_it != requests.end()"];
"1000152" -> "1000159"  [label="DDG: std::move(*request_it)"];
"1000152" -> "1000159"  [label="DDG: *request_it"];
"1000158" -> "1000159"  [label="DDG: TryToLaunchPreresolveJobs()"];
"1000147" -> "1000159"  [label="DDG: PreresolveJob>(std::move(*request_it), info)"];
"1000147" -> "1000159"  [label="DDG: std::make_unique"];
"1000127" -> "1000159"  [label="DDG: requests.size()"];
"1000102" -> "1000159"  [label="DDG: requests"];
"1000112" -> "1000159"  [label="DDG: host"];
"1000101" -> "1000159"  [label="DDG: url"];
"1000134" -> "1000159"  [label="DDG: requests.begin()"];
"1000146" -> "1000159"  [label="DDG: std::make_unique<PreresolveJob>(std::move(*request_it), info)"];
"1000107" -> "1000159"  [label="DDG: url.host()"];
"1000123" -> "1000159"  [label="DDG: PreresolveInfo"];
"1000115" -> "1000159"  [label="DDG: <RET>"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000159"  [label="DDG: url"];
"1000243" -> "1000100"  [label="AST: "];
"1000129" -> "1000103"  [label="AST: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000129"  [label="AST: "];
"1000135" -> "1000129"  [label="CFG: "];
"1000129" -> "1000159"  [label="DDG: info"];
"1000129" -> "1000159"  [label="DDG: iterator_and_whether_inserted.first->second.get()"];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000117"  [label="CFG: "];
"1000131" -> "1000130"  [label="CFG: "];
"1000131" -> "1000129"  [label="AST: "];
"1000131" -> "1000130"  [label="CFG: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000134" -> "1000132"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000138" -> "1000134"  [label="CFG: "];
"1000134" -> "1000159"  [label="DDG: requests.begin()"];
"1000134" -> "1000137"  [label="DDG: request_it"];
"1000135" -> "1000134"  [label="AST: "];
"1000135" -> "1000129"  [label="CFG: "];
"1000136" -> "1000135"  [label="CFG: "];
"1000136" -> "1000134"  [label="AST: "];
"1000136" -> "1000135"  [label="CFG: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000132" -> "1000103"  [label="AST: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="AST: "];
"1000137" -> "1000132"  [label="AST: "];
"1000140" -> "1000132"  [label="AST: "];
"1000142" -> "1000132"  [label="AST: "];
"1000137" -> "1000132"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000145" -> "1000137"  [label="CFG: "];
"1000158" -> "1000137"  [label="CFG: "];
"1000137" -> "1000159"  [label="DDG: requests.end()"];
"1000137" -> "1000159"  [label="DDG: request_it"];
"1000137" -> "1000159"  [label="DDG: request_it != requests.end()"];
"1000140" -> "1000137"  [label="DDG: request_it"];
"1000134" -> "1000137"  [label="DDG: request_it"];
"1000137" -> "1000140"  [label="DDG: request_it"];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000134"  [label="CFG: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="CFG: "];
"1000139" -> "1000137"  [label="AST: "];
"1000139" -> "1000138"  [label="CFG: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000156"  [label="CFG: "];
"1000140" -> "1000141"  [label="CFG: "];
"1000140" -> "1000132"  [label="AST: "];
"1000140" -> "1000141"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000140" -> "1000137"  [label="DDG: request_it"];
"1000137" -> "1000140"  [label="DDG: request_it"];
"1000144" -> "1000142"  [label="AST: "];
"1000144" -> "1000146"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000146" -> "1000144"  [label="AST: "];
"1000157" -> "1000144"  [label="CFG: "];
"1000144" -> "1000159"  [label="DDG: preresolve_jobs_.Add(\n         std::make_unique<PreresolveJob>(std::move(*request_it), info))"];
"1000146" -> "1000144"  [label="DDG: std::make_unique<PreresolveJob>(std::move(*request_it), info)"];
"1000144" -> "1000156"  [label="DDG: job_id"];
"1000145" -> "1000144"  [label="AST: "];
"1000145" -> "1000137"  [label="CFG: "];
"1000148" -> "1000145"  [label="CFG: "];
"1000146" -> "1000144"  [label="AST: "];
"1000146" -> "1000147"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000144" -> "1000146"  [label="CFG: "];
"1000146" -> "1000159"  [label="DDG: std::make_unique<PreresolveJob>(std::move(*request_it), info)"];
"1000146" -> "1000144"  [label="DDG: std::make_unique<PreresolveJob>(std::move(*request_it), info)"];
"1000147" -> "1000146"  [label="DDG: std::make_unique"];
"1000147" -> "1000146"  [label="DDG: PreresolveJob>(std::move(*request_it), info)"];
"1000142" -> "1000132"  [label="AST: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000156" -> "1000142"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000149" -> "1000155"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000149" -> "1000159"  [label="DDG: PreresolveJob"];
"1000149" -> "1000147"  [label="DDG: PreresolveJob"];
"1000150" -> "1000149"  [label="AST: "];
"1000150" -> "1000148"  [label="CFG: "];
"1000154" -> "1000150"  [label="CFG: "];
"1000151" -> "1000149"  [label="AST: "];
"1000152" -> "1000151"  [label="AST: "];
"1000155" -> "1000151"  [label="AST: "];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000153"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000155" -> "1000152"  [label="CFG: "];
"1000152" -> "1000159"  [label="DDG: std::move(*request_it)"];
"1000152" -> "1000159"  [label="DDG: *request_it"];
"1000153" -> "1000152"  [label="AST: "];
"1000153" -> "1000154"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000152" -> "1000153"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000154" -> "1000150"  [label="CFG: "];
"1000153" -> "1000154"  [label="CFG: "];
"1000155" -> "1000151"  [label="AST: "];
"1000155" -> "1000152"  [label="CFG: "];
"1000149" -> "1000155"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000146" -> "1000147"  [label="CFG: "];
"1000147" -> "1000159"  [label="DDG: PreresolveJob>(std::move(*request_it), info)"];
"1000147" -> "1000159"  [label="DDG: std::make_unique"];
"1000147" -> "1000146"  [label="DDG: std::make_unique"];
"1000147" -> "1000146"  [label="DDG: PreresolveJob>(std::move(*request_it), info)"];
"1000121" -> "1000147"  [label="DDG: std::make_unique"];
"1000149" -> "1000147"  [label="DDG: PreresolveJob"];
"1000148" -> "1000147"  [label="AST: "];
"1000148" -> "1000145"  [label="CFG: "];
"1000150" -> "1000148"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000157" -> "1000144"  [label="CFG: "];
"1000156" -> "1000157"  [label="CFG: "];
"1000156" -> "1000142"  [label="AST: "];
"1000156" -> "1000157"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000141" -> "1000156"  [label="CFG: "];
"1000156" -> "1000159"  [label="DDG: job_id"];
"1000156" -> "1000159"  [label="DDG: queued_jobs_.push_back(job_id)"];
"1000144" -> "1000156"  [label="DDG: job_id"];
"1000158" -> "1000103"  [label="AST: "];
"1000158" -> "1000137"  [label="CFG: "];
"1000159" -> "1000158"  [label="CFG: "];
"1000158" -> "1000159"  [label="DDG: TryToLaunchPreresolveJobs()"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000159"  [label="DDG: requests"];
"1000244" -> "1000100"  [label="AST: "];
"1000103" -> "1000100"  [label="AST: "];
"1000104" -> "1000103"  [label="AST: "];
"1000106" -> "1000103"  [label="AST: "];
"1000107" -> "1000103"  [label="AST: "];
"1000110" -> "1000103"  [label="AST: "];
"1000116" -> "1000103"  [label="AST: "];
"1000117" -> "1000103"  [label="AST: "];
"1000128" -> "1000103"  [label="AST: "];
"1000129" -> "1000103"  [label="AST: "];
"1000132" -> "1000103"  [label="AST: "];
"1000158" -> "1000103"  [label="AST: "];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000105"  [label="CFG: "];
"1000105" -> "1000104"  [label="AST: "];
"1000108" -> "1000104"  [label="CFG: "];
"1000104" -> "1000159"  [label="DDG: DCHECK_CURRENTLY_ON(content::BrowserThread::UI)"];
"1000104" -> "1000159"  [label="DDG: content::BrowserThread::UI"];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000100"  [label="CFG: "];
"1000104" -> "1000105"  [label="CFG: "];
"1000107" -> "1000103"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000113" -> "1000107"  [label="CFG: "];
"1000107" -> "1000159"  [label="DDG: url.host()"];
"1000107" -> "1000112"  [label="DDG: host"];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000104"  [label="CFG: "];
"1000109" -> "1000108"  [label="CFG: "];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000108"  [label="CFG: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000110" -> "1000103"  [label="AST: "];
"1000111" -> "1000110"  [label="AST: "];
"1000115" -> "1000110"  [label="AST: "];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000107"  [label="CFG: "];
"1000112" -> "1000113"  [label="CFG: "];
"1000114" -> "1000111"  [label="AST: "];
"1000114" -> "1000112"  [label="CFG: "];
"1000111" -> "1000114"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000114"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000114" -> "1000111"  [label="AST: "];
"1000115" -> "1000111"  [label="CFG: "];
"1000118" -> "1000111"  [label="CFG: "];
"1000111" -> "1000159"  [label="DDG: preresolve_info_.end()"];
"1000111" -> "1000159"  [label="DDG: preresolve_info_.find(host)"];
"1000111" -> "1000159"  [label="DDG: preresolve_info_.find(host) != preresolve_info_.end()"];
"1000112" -> "1000111"  [label="DDG: host"];
"1000112" -> "1000111"  [label="AST: "];
"1000112" -> "1000113"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="CFG: "];
"1000112" -> "1000159"  [label="DDG: host"];
"1000112" -> "1000111"  [label="DDG: host"];
"1000107" -> "1000112"  [label="DDG: host"];
"1000112" -> "1000119"  [label="DDG: host"];
"1000115" -> "1000110"  [label="AST: "];
"1000115" -> "1000111"  [label="CFG: "];
"1000159" -> "1000115"  [label="CFG: "];
"1000115" -> "1000159"  [label="DDG: <RET>"];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000119" -> "1000159"  [label="DDG: std::make_unique<PreresolveInfo>(url, requests.size())"];
"1000119" -> "1000159"  [label="DDG: host"];
"1000119" -> "1000117"  [label="DDG: host"];
"1000119" -> "1000117"  [label="DDG: std::make_unique<PreresolveInfo>(url, requests.size())"];
"1000112" -> "1000119"  [label="DDG: host"];
"1000121" -> "1000119"  [label="DDG: std::make_unique"];
"1000121" -> "1000119"  [label="DDG: PreresolveInfo>(url, requests.size())"];
"1000117" -> "1000103"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000130" -> "1000117"  [label="CFG: "];
"1000117" -> "1000159"  [label="DDG: iterator_and_whether_inserted"];
"1000117" -> "1000159"  [label="DDG: preresolve_info_.emplace(\n      host, std::make_unique<PreresolveInfo>(url, requests.size()))"];
"1000119" -> "1000117"  [label="DDG: host"];
"1000119" -> "1000117"  [label="DDG: std::make_unique<PreresolveInfo>(url, requests.size())"];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000111"  [label="CFG: "];
"1000120" -> "1000118"  [label="CFG: "];
"1000121" -> "1000119"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000121" -> "1000159"  [label="DDG: PreresolveInfo>(url, requests.size())"];
"1000121" -> "1000159"  [label="DDG: std::make_unique"];
"1000121" -> "1000119"  [label="DDG: std::make_unique"];
"1000121" -> "1000119"  [label="DDG: PreresolveInfo>(url, requests.size())"];
"1000123" -> "1000121"  [label="DDG: PreresolveInfo"];
"1000121" -> "1000147"  [label="DDG: std::make_unique"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000120"  [label="CFG: "];
"1000124" -> "1000122"  [label="CFG: "];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000127"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000123" -> "1000159"  [label="DDG: PreresolveInfo"];
"1000123" -> "1000121"  [label="DDG: PreresolveInfo"];
"1000124" -> "1000123"  [label="AST: "];
"1000124" -> "1000122"  [label="CFG: "];
"1000126" -> "1000124"  [label="CFG: "];
"1000125" -> "1000123"  [label="AST: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000124"  [label="CFG: "];
"1000127" -> "1000126"  [label="CFG: "];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1000126"  [label="CFG: "];
"1000123" -> "1000127"  [label="CFG: "];
"1000127" -> "1000159"  [label="DDG: requests.size()"];
"1000120" -> "1000119"  [label="AST: "];
"1000120" -> "1000118"  [label="CFG: "];
"1000122" -> "1000120"  [label="CFG: "];
}
