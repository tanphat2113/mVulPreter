digraph "0_Chrome_a3b76c8c13ea6b228122440f48c61b66d20443dd" {
"1000133" [label="(MethodReturn,void)"];
"1000101" [label="(Block,)"];
"1000122" [label="(Identifier,kHostInitializationFailed)"];
"1000121" [label="(Call,Shutdown(kHostInitializationFailed))"];
"1000123" [label="(Return,return;)"];
"1000126" [label="(Call,protocol::AuthenticatorFactory> factory(\n        new protocol::Me2MeHostAuthenticatorFactory(\n            local_certificate, *key_pair_.private_key(), host_secret_hash_)))"];
"1000127" [label="(Identifier,protocol::AuthenticatorFactory)"];
"1000124" [label="(Call,scoped_ptr<protocol::AuthenticatorFactory> factory(\n        new protocol::Me2MeHostAuthenticatorFactory(\n            local_certificate, *key_pair_.private_key(), host_secret_hash_)))"];
"1000125" [label="(Identifier,scoped_ptr)"];
"1000128" [label="(Call,factory(\n        new protocol::Me2MeHostAuthenticatorFactory(\n            local_certificate, *key_pair_.private_key(), host_secret_hash_)))"];
"1000130" [label="(Identifier,protocol::Me2MeHostAuthenticatorFactory)"];
"1000129" [label="(Call,new protocol::Me2MeHostAuthenticatorFactory(\n            local_certificate, *key_pair_.private_key(), host_secret_hash_))"];
"1000132" [label="(Call,factory.Pass())"];
"1000131" [label="(Call,host_->SetAuthenticatorFactory(factory.Pass()))"];
"1000103" [label="(Call,context_->network_task_runner()->BelongsToCurrentThread())"];
"1000102" [label="(Call,DCHECK(context_->network_task_runner()->BelongsToCurrentThread()))"];
"1000108" [label="(Identifier,shutting_down_)"];
"1000104" [label="(ControlStructure,if (!host_ || shutting_down_))"];
"1000105" [label="(Call,!host_ || shutting_down_)"];
"1000106" [label="(Call,!host_)"];
"1000107" [label="(Identifier,host_)"];
"1000109" [label="(Return,return;)"];
"1000111" [label="(Call,local_certificate = key_pair_.GenerateCertificate())"];
"1000112" [label="(Identifier,local_certificate)"];
"1000113" [label="(Call,key_pair_.GenerateCertificate())"];
"1000116" [label="(Block,)"];
"1000114" [label="(ControlStructure,if (local_certificate.empty()))"];
"1000115" [label="(Call,local_certificate.empty())"];
"1000119" [label="(Identifier,ERROR)"];
"1000120" [label="(Literal,\"Failed to generate host certificate.\")"];
"1000117" [label="(Call,LOG(ERROR) << \"Failed to generate host certificate.\")"];
"1000118" [label="(Call,LOG(ERROR))"];
"1000133" -> "1000100"  [label="AST: "];
"1000133" -> "1000109"  [label="CFG: "];
"1000133" -> "1000123"  [label="CFG: "];
"1000133" -> "1000131"  [label="CFG: "];
"1000117" -> "1000133"  [label="DDG: LOG(ERROR) << \\"Failed to generate host certificate.\\""];
"1000117" -> "1000133"  [label="DDG: LOG(ERROR)"];
"1000124" -> "1000133"  [label="DDG: scoped_ptr"];
"1000124" -> "1000133"  [label="DDG: protocol::AuthenticatorFactory> factory(\n        new protocol::Me2MeHostAuthenticatorFactory(\n            local_certificate, *key_pair_.private_key(), host_secret_hash_))"];
"1000124" -> "1000133"  [label="DDG: scoped_ptr<protocol::AuthenticatorFactory> factory(\n        new protocol::Me2MeHostAuthenticatorFactory(\n            local_certificate, *key_pair_.private_key(), host_secret_hash_))"];
"1000105" -> "1000133"  [label="DDG: shutting_down_"];
"1000105" -> "1000133"  [label="DDG: !host_ || shutting_down_"];
"1000105" -> "1000133"  [label="DDG: !host_"];
"1000106" -> "1000133"  [label="DDG: host_"];
"1000131" -> "1000133"  [label="DDG: factory.Pass()"];
"1000131" -> "1000133"  [label="DDG: host_->SetAuthenticatorFactory(factory.Pass())"];
"1000126" -> "1000133"  [label="DDG: protocol::AuthenticatorFactory"];
"1000126" -> "1000133"  [label="DDG: factory(\n        new protocol::Me2MeHostAuthenticatorFactory(\n            local_certificate, *key_pair_.private_key(), host_secret_hash_))"];
"1000111" -> "1000133"  [label="DDG: key_pair_.GenerateCertificate()"];
"1000111" -> "1000133"  [label="DDG: local_certificate"];
"1000121" -> "1000133"  [label="DDG: kHostInitializationFailed"];
"1000121" -> "1000133"  [label="DDG: Shutdown(kHostInitializationFailed)"];
"1000118" -> "1000133"  [label="DDG: ERROR"];
"1000129" -> "1000133"  [label="DDG: protocol::Me2MeHostAuthenticatorFactory"];
"1000128" -> "1000133"  [label="DDG: new protocol::Me2MeHostAuthenticatorFactory(\n            local_certificate, *key_pair_.private_key(), host_secret_hash_)"];
"1000102" -> "1000133"  [label="DDG: context_->network_task_runner()->BelongsToCurrentThread()"];
"1000102" -> "1000133"  [label="DDG: DCHECK(context_->network_task_runner()->BelongsToCurrentThread())"];
"1000115" -> "1000133"  [label="DDG: local_certificate.empty()"];
"1000109" -> "1000133"  [label="DDG: <RET>"];
"1000123" -> "1000133"  [label="DDG: <RET>"];
"1000101" -> "1000100"  [label="AST: "];
"1000102" -> "1000101"  [label="AST: "];
"1000104" -> "1000101"  [label="AST: "];
"1000110" -> "1000101"  [label="AST: "];
"1000111" -> "1000101"  [label="AST: "];
"1000114" -> "1000101"  [label="AST: "];
"1000124" -> "1000101"  [label="AST: "];
"1000131" -> "1000101"  [label="AST: "];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000117"  [label="CFG: "];
"1000121" -> "1000122"  [label="CFG: "];
"1000121" -> "1000116"  [label="AST: "];
"1000121" -> "1000122"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="CFG: "];
"1000121" -> "1000133"  [label="DDG: kHostInitializationFailed"];
"1000121" -> "1000133"  [label="DDG: Shutdown(kHostInitializationFailed)"];
"1000123" -> "1000116"  [label="AST: "];
"1000123" -> "1000121"  [label="CFG: "];
"1000133" -> "1000123"  [label="CFG: "];
"1000123" -> "1000133"  [label="DDG: <RET>"];
"1000126" -> "1000124"  [label="AST: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000128" -> "1000126"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000126" -> "1000133"  [label="DDG: protocol::AuthenticatorFactory"];
"1000126" -> "1000133"  [label="DDG: factory(\n        new protocol::Me2MeHostAuthenticatorFactory(\n            local_certificate, *key_pair_.private_key(), host_secret_hash_))"];
"1000126" -> "1000124"  [label="DDG: protocol::AuthenticatorFactory"];
"1000126" -> "1000124"  [label="DDG: factory(\n        new protocol::Me2MeHostAuthenticatorFactory(\n            local_certificate, *key_pair_.private_key(), host_secret_hash_))"];
"1000128" -> "1000126"  [label="DDG: new protocol::Me2MeHostAuthenticatorFactory(\n            local_certificate, *key_pair_.private_key(), host_secret_hash_)"];
"1000127" -> "1000126"  [label="AST: "];
"1000127" -> "1000125"  [label="CFG: "];
"1000130" -> "1000127"  [label="CFG: "];
"1000124" -> "1000101"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000132" -> "1000124"  [label="CFG: "];
"1000124" -> "1000133"  [label="DDG: scoped_ptr"];
"1000124" -> "1000133"  [label="DDG: protocol::AuthenticatorFactory> factory(\n        new protocol::Me2MeHostAuthenticatorFactory(\n            local_certificate, *key_pair_.private_key(), host_secret_hash_))"];
"1000124" -> "1000133"  [label="DDG: scoped_ptr<protocol::AuthenticatorFactory> factory(\n        new protocol::Me2MeHostAuthenticatorFactory(\n            local_certificate, *key_pair_.private_key(), host_secret_hash_))"];
"1000126" -> "1000124"  [label="DDG: protocol::AuthenticatorFactory"];
"1000126" -> "1000124"  [label="DDG: factory(\n        new protocol::Me2MeHostAuthenticatorFactory(\n            local_certificate, *key_pair_.private_key(), host_secret_hash_))"];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000115"  [label="CFG: "];
"1000127" -> "1000125"  [label="CFG: "];
"1000128" -> "1000126"  [label="AST: "];
"1000128" -> "1000129"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000128" -> "1000133"  [label="DDG: new protocol::Me2MeHostAuthenticatorFactory(\n            local_certificate, *key_pair_.private_key(), host_secret_hash_)"];
"1000128" -> "1000126"  [label="DDG: new protocol::Me2MeHostAuthenticatorFactory(\n            local_certificate, *key_pair_.private_key(), host_secret_hash_)"];
"1000129" -> "1000128"  [label="DDG: protocol::Me2MeHostAuthenticatorFactory"];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000127"  [label="CFG: "];
"1000129" -> "1000130"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000129" -> "1000130"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000128" -> "1000129"  [label="CFG: "];
"1000129" -> "1000133"  [label="DDG: protocol::Me2MeHostAuthenticatorFactory"];
"1000129" -> "1000128"  [label="DDG: protocol::Me2MeHostAuthenticatorFactory"];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000124"  [label="CFG: "];
"1000131" -> "1000132"  [label="CFG: "];
"1000131" -> "1000101"  [label="AST: "];
"1000131" -> "1000132"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="CFG: "];
"1000131" -> "1000133"  [label="DDG: factory.Pass()"];
"1000131" -> "1000133"  [label="DDG: host_->SetAuthenticatorFactory(factory.Pass())"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000100"  [label="CFG: "];
"1000102" -> "1000103"  [label="CFG: "];
"1000102" -> "1000101"  [label="AST: "];
"1000102" -> "1000103"  [label="CFG: "];
"1000103" -> "1000102"  [label="AST: "];
"1000107" -> "1000102"  [label="CFG: "];
"1000102" -> "1000133"  [label="DDG: context_->network_task_runner()->BelongsToCurrentThread()"];
"1000102" -> "1000133"  [label="DDG: DCHECK(context_->network_task_runner()->BelongsToCurrentThread())"];
"1000108" -> "1000105"  [label="AST: "];
"1000108" -> "1000106"  [label="CFG: "];
"1000105" -> "1000108"  [label="CFG: "];
"1000104" -> "1000101"  [label="AST: "];
"1000105" -> "1000104"  [label="AST: "];
"1000109" -> "1000104"  [label="AST: "];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000106"  [label="CFG: "];
"1000105" -> "1000108"  [label="CFG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000108" -> "1000105"  [label="AST: "];
"1000109" -> "1000105"  [label="CFG: "];
"1000112" -> "1000105"  [label="CFG: "];
"1000105" -> "1000133"  [label="DDG: shutting_down_"];
"1000105" -> "1000133"  [label="DDG: !host_ || shutting_down_"];
"1000105" -> "1000133"  [label="DDG: !host_"];
"1000106" -> "1000105"  [label="DDG: host_"];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000108" -> "1000106"  [label="CFG: "];
"1000105" -> "1000106"  [label="CFG: "];
"1000106" -> "1000133"  [label="DDG: host_"];
"1000106" -> "1000105"  [label="DDG: host_"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000102"  [label="CFG: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000109" -> "1000104"  [label="AST: "];
"1000109" -> "1000105"  [label="CFG: "];
"1000133" -> "1000109"  [label="CFG: "];
"1000109" -> "1000133"  [label="DDG: <RET>"];
"1000111" -> "1000101"  [label="AST: "];
"1000111" -> "1000113"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000113" -> "1000111"  [label="AST: "];
"1000115" -> "1000111"  [label="CFG: "];
"1000111" -> "1000133"  [label="DDG: key_pair_.GenerateCertificate()"];
"1000111" -> "1000133"  [label="DDG: local_certificate"];
"1000112" -> "1000111"  [label="AST: "];
"1000112" -> "1000105"  [label="CFG: "];
"1000113" -> "1000112"  [label="CFG: "];
"1000113" -> "1000111"  [label="AST: "];
"1000113" -> "1000112"  [label="CFG: "];
"1000111" -> "1000113"  [label="CFG: "];
"1000116" -> "1000114"  [label="AST: "];
"1000117" -> "1000116"  [label="AST: "];
"1000121" -> "1000116"  [label="AST: "];
"1000123" -> "1000116"  [label="AST: "];
"1000114" -> "1000101"  [label="AST: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000111"  [label="CFG: "];
"1000119" -> "1000115"  [label="CFG: "];
"1000125" -> "1000115"  [label="CFG: "];
"1000115" -> "1000133"  [label="DDG: local_certificate.empty()"];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000115"  [label="CFG: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000120" -> "1000117"  [label="AST: "];
"1000120" -> "1000118"  [label="CFG: "];
"1000117" -> "1000120"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1000120"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000120" -> "1000117"  [label="AST: "];
"1000122" -> "1000117"  [label="CFG: "];
"1000117" -> "1000133"  [label="DDG: LOG(ERROR) << \\"Failed to generate host certificate.\\""];
"1000117" -> "1000133"  [label="DDG: LOG(ERROR)"];
"1000118" -> "1000117"  [label="DDG: ERROR"];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="CFG: "];
"1000118" -> "1000133"  [label="DDG: ERROR"];
"1000118" -> "1000117"  [label="DDG: ERROR"];
}
