digraph "0_Chrome_3ff403eecdd23a39853a4ebca52023fbba6c5d00_4" {
"1000147" [label="(MethodReturn,bool)"];
"1000101" [label="(Block,)"];
"1000113" [label="(Identifier,false)"];
"1000112" [label="(Return,return false;)"];
"1000117" [label="(Call,delegate_->active_run_loops_)"];
"1000118" [label="(Identifier,delegate_)"];
"1000119" [label="(FieldIdentifier,active_run_loops_)"];
"1000115" [label="(Call,& active_run_loops_ = delegate_->active_run_loops_)"];
"1000116" [label="(Identifier,active_run_loops_)"];
"1000120" [label="(Call,active_run_loops_.push(this))"];
"1000121" [label="(Identifier,this)"];
"1000123" [label="(Call,is_nested = active_run_loops_.size() > 1)"];
"1000124" [label="(Identifier,is_nested)"];
"1000125" [label="(Call,active_run_loops_.size() > 1)"];
"1000126" [label="(Call,active_run_loops_.size())"];
"1000127" [label="(Literal,1)"];
"1000130" [label="(Block,)"];
"1000128" [label="(ControlStructure,if (is_nested))"];
"1000129" [label="(Identifier,is_nested)"];
"1000132" [label="(Call,delegate_->allow_nesting_)"];
"1000133" [label="(Identifier,delegate_)"];
"1000134" [label="(FieldIdentifier,allow_nesting_)"];
"1000131" [label="(Call,CHECK(delegate_->allow_nesting_))"];
"1000135" [label="(JumpTarget,observer :)"];
"1000102" [label="(Call,DCHECK_CALLED_ON_VALID_SEQUENCE(sequence_checker_))"];
"1000103" [label="(Identifier,sequence_checker_)"];
"1000136" [label="(Call,observer.OnBeginNestedRunLoop())"];
"1000140" [label="(Identifier,Type::kNestableTasksAllowed)"];
"1000137" [label="(ControlStructure,if (type_ == Type::kNestableTasksAllowed))"];
"1000138" [label="(Call,type_ == Type::kNestableTasksAllowed)"];
"1000139" [label="(Identifier,type_)"];
"1000141" [label="(Call,delegate_->EnsureWorkScheduled())"];
"1000144" [label="(Identifier,true)"];
"1000142" [label="(Call,running_ = true)"];
"1000143" [label="(Identifier,running_)"];
"1000145" [label="(Return,return true;)"];
"1000146" [label="(Identifier,true)"];
"1000106" [label="(Identifier,run_called_)"];
"1000104" [label="(Call,DCHECK(!run_called_))"];
"1000105" [label="(Call,!run_called_)"];
"1000109" [label="(Identifier,true)"];
"1000107" [label="(Call,run_called_ = true)"];
"1000108" [label="(Identifier,run_called_)"];
"1000110" [label="(ControlStructure,if (quit_called_))"];
"1000111" [label="(Identifier,quit_called_)"];
"1000147" -> "1000100"  [label="AST: "];
"1000147" -> "1000112"  [label="CFG: "];
"1000147" -> "1000145"  [label="CFG: "];
"1000145" -> "1000147"  [label="DDG: <RET>"];
"1000115" -> "1000147"  [label="DDG: delegate_->active_run_loops_"];
"1000115" -> "1000147"  [label="DDG: active_run_loops_"];
"1000125" -> "1000147"  [label="DDG: active_run_loops_.size()"];
"1000123" -> "1000147"  [label="DDG: active_run_loops_.size() > 1"];
"1000123" -> "1000147"  [label="DDG: is_nested"];
"1000107" -> "1000147"  [label="DDG: run_called_"];
"1000107" -> "1000147"  [label="DDG: true"];
"1000104" -> "1000147"  [label="DDG: DCHECK(!run_called_)"];
"1000104" -> "1000147"  [label="DDG: !run_called_"];
"1000138" -> "1000147"  [label="DDG: Type::kNestableTasksAllowed"];
"1000138" -> "1000147"  [label="DDG: type_ == Type::kNestableTasksAllowed"];
"1000138" -> "1000147"  [label="DDG: type_"];
"1000102" -> "1000147"  [label="DDG: DCHECK_CALLED_ON_VALID_SEQUENCE(sequence_checker_)"];
"1000102" -> "1000147"  [label="DDG: sequence_checker_"];
"1000120" -> "1000147"  [label="DDG: active_run_loops_.push(this)"];
"1000120" -> "1000147"  [label="DDG: this"];
"1000131" -> "1000147"  [label="DDG: delegate_->allow_nesting_"];
"1000131" -> "1000147"  [label="DDG: CHECK(delegate_->allow_nesting_)"];
"1000141" -> "1000147"  [label="DDG: delegate_->EnsureWorkScheduled()"];
"1000142" -> "1000147"  [label="DDG: true"];
"1000142" -> "1000147"  [label="DDG: running_"];
"1000136" -> "1000147"  [label="DDG: observer.OnBeginNestedRunLoop()"];
"1000112" -> "1000147"  [label="DDG: <RET>"];
"1000101" -> "1000100"  [label="AST: "];
"1000102" -> "1000101"  [label="AST: "];
"1000104" -> "1000101"  [label="AST: "];
"1000107" -> "1000101"  [label="AST: "];
"1000110" -> "1000101"  [label="AST: "];
"1000114" -> "1000101"  [label="AST: "];
"1000115" -> "1000101"  [label="AST: "];
"1000120" -> "1000101"  [label="AST: "];
"1000122" -> "1000101"  [label="AST: "];
"1000123" -> "1000101"  [label="AST: "];
"1000128" -> "1000101"  [label="AST: "];
"1000142" -> "1000101"  [label="AST: "];
"1000145" -> "1000101"  [label="AST: "];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000111"  [label="CFG: "];
"1000112" -> "1000113"  [label="CFG: "];
"1000113" -> "1000112"  [label="DDG: false"];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000113"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000147" -> "1000112"  [label="CFG: "];
"1000112" -> "1000147"  [label="DDG: <RET>"];
"1000113" -> "1000112"  [label="DDG: false"];
"1000117" -> "1000115"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000116"  [label="CFG: "];
"1000119" -> "1000118"  [label="CFG: "];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000118"  [label="CFG: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000115" -> "1000101"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000121" -> "1000115"  [label="CFG: "];
"1000115" -> "1000147"  [label="DDG: delegate_->active_run_loops_"];
"1000115" -> "1000147"  [label="DDG: active_run_loops_"];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000111"  [label="CFG: "];
"1000118" -> "1000116"  [label="CFG: "];
"1000120" -> "1000101"  [label="AST: "];
"1000120" -> "1000121"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000124" -> "1000120"  [label="CFG: "];
"1000120" -> "1000147"  [label="DDG: active_run_loops_.push(this)"];
"1000120" -> "1000147"  [label="DDG: this"];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000115"  [label="CFG: "];
"1000120" -> "1000121"  [label="CFG: "];
"1000123" -> "1000101"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000129" -> "1000123"  [label="CFG: "];
"1000123" -> "1000147"  [label="DDG: active_run_loops_.size() > 1"];
"1000123" -> "1000147"  [label="DDG: is_nested"];
"1000125" -> "1000123"  [label="DDG: active_run_loops_.size()"];
"1000125" -> "1000123"  [label="DDG: 1"];
"1000124" -> "1000123"  [label="AST: "];
"1000124" -> "1000120"  [label="CFG: "];
"1000126" -> "1000124"  [label="CFG: "];
"1000125" -> "1000123"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000125" -> "1000147"  [label="DDG: active_run_loops_.size()"];
"1000125" -> "1000123"  [label="DDG: active_run_loops_.size()"];
"1000125" -> "1000123"  [label="DDG: 1"];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000124"  [label="CFG: "];
"1000127" -> "1000126"  [label="CFG: "];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1000126"  [label="CFG: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000130" -> "1000128"  [label="AST: "];
"1000131" -> "1000130"  [label="AST: "];
"1000135" -> "1000130"  [label="AST: "];
"1000136" -> "1000130"  [label="AST: "];
"1000137" -> "1000130"  [label="AST: "];
"1000128" -> "1000101"  [label="AST: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000128"  [label="AST: "];
"1000129" -> "1000128"  [label="AST: "];
"1000129" -> "1000123"  [label="CFG: "];
"1000133" -> "1000129"  [label="CFG: "];
"1000143" -> "1000129"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000134"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="AST: "];
"1000131" -> "1000132"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000129"  [label="CFG: "];
"1000134" -> "1000133"  [label="CFG: "];
"1000134" -> "1000132"  [label="AST: "];
"1000134" -> "1000133"  [label="CFG: "];
"1000132" -> "1000134"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000132"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000135" -> "1000131"  [label="CFG: "];
"1000131" -> "1000147"  [label="DDG: delegate_->allow_nesting_"];
"1000131" -> "1000147"  [label="DDG: CHECK(delegate_->allow_nesting_)"];
"1000135" -> "1000130"  [label="AST: "];
"1000135" -> "1000131"  [label="CFG: "];
"1000136" -> "1000135"  [label="CFG: "];
"1000102" -> "1000101"  [label="AST: "];
"1000102" -> "1000103"  [label="CFG: "];
"1000103" -> "1000102"  [label="AST: "];
"1000106" -> "1000102"  [label="CFG: "];
"1000102" -> "1000147"  [label="DDG: DCHECK_CALLED_ON_VALID_SEQUENCE(sequence_checker_)"];
"1000102" -> "1000147"  [label="DDG: sequence_checker_"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000100"  [label="CFG: "];
"1000102" -> "1000103"  [label="CFG: "];
"1000136" -> "1000130"  [label="AST: "];
"1000136" -> "1000135"  [label="CFG: "];
"1000139" -> "1000136"  [label="CFG: "];
"1000136" -> "1000147"  [label="DDG: observer.OnBeginNestedRunLoop()"];
"1000140" -> "1000138"  [label="AST: "];
"1000140" -> "1000139"  [label="CFG: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000137" -> "1000130"  [label="AST: "];
"1000138" -> "1000137"  [label="AST: "];
"1000141" -> "1000137"  [label="AST: "];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000141" -> "1000138"  [label="CFG: "];
"1000143" -> "1000138"  [label="CFG: "];
"1000138" -> "1000147"  [label="DDG: Type::kNestableTasksAllowed"];
"1000138" -> "1000147"  [label="DDG: type_ == Type::kNestableTasksAllowed"];
"1000138" -> "1000147"  [label="DDG: type_"];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000136"  [label="CFG: "];
"1000140" -> "1000139"  [label="CFG: "];
"1000141" -> "1000137"  [label="AST: "];
"1000141" -> "1000138"  [label="CFG: "];
"1000143" -> "1000141"  [label="CFG: "];
"1000141" -> "1000147"  [label="DDG: delegate_->EnsureWorkScheduled()"];
"1000144" -> "1000142"  [label="AST: "];
"1000144" -> "1000143"  [label="CFG: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000142" -> "1000101"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000146" -> "1000142"  [label="CFG: "];
"1000142" -> "1000147"  [label="DDG: true"];
"1000142" -> "1000147"  [label="DDG: running_"];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000141"  [label="CFG: "];
"1000143" -> "1000138"  [label="CFG: "];
"1000143" -> "1000129"  [label="CFG: "];
"1000144" -> "1000143"  [label="CFG: "];
"1000145" -> "1000101"  [label="AST: "];
"1000145" -> "1000146"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="CFG: "];
"1000145" -> "1000147"  [label="DDG: <RET>"];
"1000146" -> "1000145"  [label="DDG: true"];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000142"  [label="CFG: "];
"1000145" -> "1000146"  [label="CFG: "];
"1000146" -> "1000145"  [label="DDG: true"];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000102"  [label="CFG: "];
"1000105" -> "1000106"  [label="CFG: "];
"1000104" -> "1000101"  [label="AST: "];
"1000104" -> "1000105"  [label="CFG: "];
"1000105" -> "1000104"  [label="AST: "];
"1000108" -> "1000104"  [label="CFG: "];
"1000104" -> "1000147"  [label="DDG: DCHECK(!run_called_)"];
"1000104" -> "1000147"  [label="DDG: !run_called_"];
"1000105" -> "1000104"  [label="DDG: run_called_"];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000106"  [label="CFG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000104" -> "1000105"  [label="CFG: "];
"1000105" -> "1000104"  [label="DDG: run_called_"];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000108"  [label="CFG: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000107" -> "1000101"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000111" -> "1000107"  [label="CFG: "];
"1000107" -> "1000147"  [label="DDG: run_called_"];
"1000107" -> "1000147"  [label="DDG: true"];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000104"  [label="CFG: "];
"1000109" -> "1000108"  [label="CFG: "];
"1000110" -> "1000101"  [label="AST: "];
"1000111" -> "1000110"  [label="AST: "];
"1000112" -> "1000110"  [label="AST: "];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000107"  [label="CFG: "];
"1000113" -> "1000111"  [label="CFG: "];
"1000116" -> "1000111"  [label="CFG: "];
}
