digraph "1_Chrome_f96f1f27d9bc16b1a045c4fb5c8a8a82f73ece59" {
"1000246" [label="(MethodReturn,bool)"];
"1000101" [label="(MethodParameterIn,WebRtcAudioRendererSource* source)"];
"1000387" [label="(MethodParameterOut,WebRtcAudioRendererSource* source)"];
"1000102" [label="(Block,)"];
"1000123" [label="(Call,GetAudioOutputSampleRate())"];
"1000121" [label="(Call,sample_rate = GetAudioOutputSampleRate())"];
"1000122" [label="(Identifier,sample_rate)"];
"1000127" [label="(Call,\"Audio output hardware sample rate: \" << sample_rate)"];
"1000128" [label="(Literal,\"Audio output hardware sample rate: \")"];
"1000124" [label="(Call,DVLOG(1) << \"Audio output hardware sample rate: \" << sample_rate)"];
"1000125" [label="(Call,DVLOG(1))"];
"1000129" [label="(Identifier,sample_rate)"];
"1000126" [label="(Literal,1)"];
"1000130" [label="(Call,UMA_HISTOGRAM_ENUMERATION(\"WebRTC.AudioOutputSampleRate\",\n                            sample_rate, media::kUnexpectedAudioSampleRate))"];
"1000131" [label="(Literal,\"WebRTC.AudioOutputSampleRate\")"];
"1000132" [label="(Identifier,sample_rate)"];
"1000133" [label="(Identifier,media::kUnexpectedAudioSampleRate)"];
"1000137" [label="(Call,&kValidOutputRates[0])"];
"1000138" [label="(Call,kValidOutputRates[0])"];
"1000139" [label="(Identifier,kValidOutputRates)"];
"1000134" [label="(ControlStructure,if (std::find(&kValidOutputRates[0],\n                &kValidOutputRates[0] + arraysize(kValidOutputRates),\n                sample_rate) ==\n                    &kValidOutputRates[arraysize(kValidOutputRates)]))"];
"1000140" [label="(Literal,0)"];
"1000135" [label="(Call,std::find(&kValidOutputRates[0],\n                &kValidOutputRates[0] + arraysize(kValidOutputRates),\n                sample_rate) ==\n                    &kValidOutputRates[arraysize(kValidOutputRates)])"];
"1000136" [label="(Call,std::find(&kValidOutputRates[0],\n                &kValidOutputRates[0] + arraysize(kValidOutputRates),\n                sample_rate))"];
"1000141" [label="(Call,&kValidOutputRates[0] + arraysize(kValidOutputRates))"];
"1000142" [label="(Call,&kValidOutputRates[0])"];
"1000143" [label="(Call,kValidOutputRates[0])"];
"1000144" [label="(Identifier,kValidOutputRates)"];
"1000145" [label="(Literal,0)"];
"1000146" [label="(Call,arraysize(kValidOutputRates))"];
"1000147" [label="(Identifier,kValidOutputRates)"];
"1000148" [label="(Identifier,sample_rate)"];
"1000149" [label="(Call,&kValidOutputRates[arraysize(kValidOutputRates)])"];
"1000150" [label="(Call,kValidOutputRates[arraysize(kValidOutputRates)])"];
"1000151" [label="(Identifier,kValidOutputRates)"];
"1000152" [label="(Call,arraysize(kValidOutputRates))"];
"1000153" [label="(Identifier,kValidOutputRates)"];
"1000154" [label="(Block,)"];
"1000158" [label="(Call,sample_rate << \" is not a supported output rate.\")"];
"1000159" [label="(Identifier,sample_rate)"];
"1000160" [label="(Literal,\" is not a supported output rate.\")"];
"1000155" [label="(Call,DLOG(ERROR) << sample_rate << \" is not a supported output rate.\")"];
"1000156" [label="(Call,DLOG(ERROR))"];
"1000157" [label="(Identifier,ERROR)"];
"1000162" [label="(Identifier,false)"];
"1000161" [label="(Return,return false;)"];
"1000164" [label="(Call,channel_layout = media::CHANNEL_LAYOUT_STEREO)"];
"1000165" [label="(Identifier,channel_layout)"];
"1000166" [label="(Identifier,media::CHANNEL_LAYOUT_STEREO)"];
"1000170" [label="(Literal,0)"];
"1000168" [label="(Call,buffer_size = 0)"];
"1000169" [label="(Identifier,buffer_size)"];
"1000173" [label="(Identifier,media::CHANNEL_LAYOUT_STEREO)"];
"1000171" [label="(Call,channel_layout = media::CHANNEL_LAYOUT_STEREO)"];
"1000172" [label="(Identifier,channel_layout)"];
"1000105" [label="(Identifier,state_)"];
"1000104" [label="(Call,DCHECK_EQ(state_, UNINITIALIZED))"];
"1000106" [label="(Identifier,UNINITIALIZED)"];
"1000174" [label="(ControlStructure,if (sample_rate == 96000 || sample_rate == 48000))"];
"1000178" [label="(Literal,96000)"];
"1000179" [label="(Call,sample_rate == 48000)"];
"1000180" [label="(Identifier,sample_rate)"];
"1000181" [label="(Literal,48000)"];
"1000182" [label="(Block,)"];
"1000175" [label="(Call,sample_rate == 96000 || sample_rate == 48000)"];
"1000176" [label="(Call,sample_rate == 96000)"];
"1000177" [label="(Identifier,sample_rate)"];
"1000185" [label="(Call,sample_rate / 100)"];
"1000186" [label="(Identifier,sample_rate)"];
"1000187" [label="(Literal,100)"];
"1000183" [label="(Call,buffer_size = (sample_rate / 100))"];
"1000184" [label="(Identifier,buffer_size)"];
"1000188" [label="(ControlStructure,else)"];
"1000189" [label="(Block,)"];
"1000192" [label="(Call,2 * 440)"];
"1000193" [label="(Literal,2)"];
"1000194" [label="(Literal,440)"];
"1000190" [label="(Call,buffer_size = 2 * 440)"];
"1000191" [label="(Identifier,buffer_size)"];
"1000195" [label="(ControlStructure,if (base::win::GetVersion() < base::win::VERSION_VISTA))"];
"1000198" [label="(Identifier,base::win::VERSION_VISTA)"];
"1000199" [label="(Block,)"];
"1000196" [label="(Call,base::win::GetVersion() < base::win::VERSION_VISTA)"];
"1000197" [label="(Call,base::win::GetVersion())"];
"1000202" [label="(Call,3 * buffer_size)"];
"1000203" [label="(Literal,3)"];
"1000204" [label="(Identifier,buffer_size)"];
"1000200" [label="(Call,buffer_size = 3 * buffer_size)"];
"1000201" [label="(Identifier,buffer_size)"];
"1000107" [label="(Call,DCHECK(source))"];
"1000108" [label="(Identifier,source)"];
"1000208" [label="(Call,\"Extending the output buffer size by a factor of three \"\n                  << \"since Windows XP has been detected.\")"];
"1000209" [label="(Literal,\"Extending the output buffer size by a factor of three \")"];
"1000205" [label="(Call,DLOG(WARNING) << \"Extending the output buffer size by a factor of three \"\n                  << \"since Windows XP has been detected.\")"];
"1000206" [label="(Call,DLOG(WARNING))"];
"1000207" [label="(Identifier,WARNING)"];
"1000210" [label="(Literal,\"since Windows XP has been detected.\")"];
"1000111" [label="(Identifier,sink_)"];
"1000109" [label="(Call,DCHECK(!sink_))"];
"1000110" [label="(Call,!sink_)"];
"1000114" [label="(Identifier,source_)"];
"1000112" [label="(Call,DCHECK(!source_))"];
"1000113" [label="(Call,!source_)"];
"1000212" [label="(Identifier,media::AudioParameters::AUDIO_PCM_LOW_LATENCY)"];
"1000211" [label="(Call,params_.Reset(media::AudioParameters::AUDIO_PCM_LOW_LATENCY, channel_layout,\n                sample_rate, 16, buffer_size))"];
"1000213" [label="(Identifier,channel_layout)"];
"1000214" [label="(Identifier,sample_rate)"];
"1000215" [label="(Literal,16)"];
"1000216" [label="(Identifier,buffer_size)"];
"1000218" [label="(Call,new int16[params_.frames_per_buffer() * params_.channels()])"];
"1000217" [label="(Call,buffer_.reset(new int16[params_.frames_per_buffer() * params_.channels()]))"];
"1000219" [label="(Identifier,int16)"];
"1000222" [label="(Identifier,source)"];
"1000220" [label="(Call,source_ = source)"];
"1000221" [label="(Identifier,source_)"];
"1000223" [label="(Call,source->SetRenderFormat(params_))"];
"1000224" [label="(Identifier,params_)"];
"1000225" [label="(Call,sink_->Initialize(params_, this))"];
"1000226" [label="(Identifier,params_)"];
"1000227" [label="(Identifier,this)"];
"1000228" [label="(Call,sink_->SetSourceRenderView(source_render_view_id_))"];
"1000229" [label="(Identifier,source_render_view_id_)"];
"1000230" [label="(Call,sink_->Start())"];
"1000233" [label="(Identifier,PAUSED)"];
"1000231" [label="(Call,state_ = PAUSED)"];
"1000232" [label="(Identifier,state_)"];
"1000234" [label="(Call,UMA_HISTOGRAM_ENUMERATION(\"WebRTC.AudioOutputChannelLayout\",\n                            channel_layout, media::CHANNEL_LAYOUT_MAX))"];
"1000235" [label="(Literal,\"WebRTC.AudioOutputChannelLayout\")"];
"1000236" [label="(Identifier,channel_layout)"];
"1000237" [label="(Identifier,media::CHANNEL_LAYOUT_MAX)"];
"1000238" [label="(Call,UMA_HISTOGRAM_ENUMERATION(\"WebRTC.AudioOutputFramesPerBuffer\",\n                            buffer_size, kUnexpectedAudioBufferSize))"];
"1000239" [label="(Literal,\"WebRTC.AudioOutputFramesPerBuffer\")"];
"1000240" [label="(Identifier,buffer_size)"];
"1000241" [label="(Identifier,kUnexpectedAudioBufferSize)"];
"1000242" [label="(Call,AddHistogramFramesPerBuffer(buffer_size))"];
"1000243" [label="(Identifier,buffer_size)"];
"1000117" [label="(Call,AudioDeviceFactory::NewOutputDevice())"];
"1000115" [label="(Call,sink_ = AudioDeviceFactory::NewOutputDevice())"];
"1000116" [label="(Identifier,sink_)"];
"1000244" [label="(Return,return true;)"];
"1000245" [label="(Identifier,true)"];
"1000118" [label="(Call,DCHECK(sink_))"];
"1000119" [label="(Identifier,sink_)"];
"1000246" -> "1000100"  [label="AST: "];
"1000246" -> "1000161"  [label="CFG: "];
"1000246" -> "1000244"  [label="CFG: "];
"1000244" -> "1000246"  [label="DDG: <RET>"];
"1000161" -> "1000246"  [label="DDG: <RET>"];
"1000225" -> "1000246"  [label="DDG: sink_->Initialize(params_, this)"];
"1000225" -> "1000246"  [label="DDG: this"];
"1000225" -> "1000246"  [label="DDG: params_"];
"1000183" -> "1000246"  [label="DDG: sample_rate / 100"];
"1000211" -> "1000246"  [label="DDG: media::AudioParameters::AUDIO_PCM_LOW_LATENCY"];
"1000211" -> "1000246"  [label="DDG: sample_rate"];
"1000211" -> "1000246"  [label="DDG: params_.Reset(media::AudioParameters::AUDIO_PCM_LOW_LATENCY, channel_layout,\n                sample_rate, 16, buffer_size)"];
"1000155" -> "1000246"  [label="DDG: DLOG(ERROR)"];
"1000155" -> "1000246"  [label="DDG: DLOG(ERROR) << sample_rate << \\" is not a supported output rate.\\""];
"1000155" -> "1000246"  [label="DDG: sample_rate << \\" is not a supported output rate.\\""];
"1000158" -> "1000246"  [label="DDG: sample_rate"];
"1000115" -> "1000246"  [label="DDG: AudioDeviceFactory::NewOutputDevice()"];
"1000130" -> "1000246"  [label="DDG: UMA_HISTOGRAM_ENUMERATION(\\"WebRTC.AudioOutputSampleRate\\",\n                            sample_rate, media::kUnexpectedAudioSampleRate)"];
"1000130" -> "1000246"  [label="DDG: media::kUnexpectedAudioSampleRate"];
"1000220" -> "1000246"  [label="DDG: source_"];
"1000220" -> "1000246"  [label="DDG: source"];
"1000124" -> "1000246"  [label="DDG: DVLOG(1)"];
"1000124" -> "1000246"  [label="DDG: \\"Audio output hardware sample rate: \\" << sample_rate"];
"1000124" -> "1000246"  [label="DDG: DVLOG(1) << \\"Audio output hardware sample rate: \\" << sample_rate"];
"1000223" -> "1000246"  [label="DDG: source->SetRenderFormat(params_)"];
"1000107" -> "1000246"  [label="DDG: source"];
"1000107" -> "1000246"  [label="DDG: DCHECK(source)"];
"1000234" -> "1000246"  [label="DDG: media::CHANNEL_LAYOUT_MAX"];
"1000234" -> "1000246"  [label="DDG: channel_layout"];
"1000234" -> "1000246"  [label="DDG: UMA_HISTOGRAM_ENUMERATION(\\"WebRTC.AudioOutputChannelLayout\\",\n                            channel_layout, media::CHANNEL_LAYOUT_MAX)"];
"1000231" -> "1000246"  [label="DDG: PAUSED"];
"1000231" -> "1000246"  [label="DDG: state_"];
"1000156" -> "1000246"  [label="DDG: ERROR"];
"1000175" -> "1000246"  [label="DDG: sample_rate == 48000"];
"1000175" -> "1000246"  [label="DDG: sample_rate == 96000"];
"1000175" -> "1000246"  [label="DDG: sample_rate == 96000 || sample_rate == 48000"];
"1000104" -> "1000246"  [label="DDG: DCHECK_EQ(state_, UNINITIALIZED)"];
"1000104" -> "1000246"  [label="DDG: state_"];
"1000104" -> "1000246"  [label="DDG: UNINITIALIZED"];
"1000218" -> "1000246"  [label="DDG: int16"];
"1000217" -> "1000246"  [label="DDG: buffer_.reset(new int16[params_.frames_per_buffer() * params_.channels()])"];
"1000217" -> "1000246"  [label="DDG: new int16[params_.frames_per_buffer() * params_.channels()]"];
"1000228" -> "1000246"  [label="DDG: sink_->SetSourceRenderView(source_render_view_id_)"];
"1000228" -> "1000246"  [label="DDG: source_render_view_id_"];
"1000238" -> "1000246"  [label="DDG: UMA_HISTOGRAM_ENUMERATION(\\"WebRTC.AudioOutputFramesPerBuffer\\",\n                            buffer_size, kUnexpectedAudioBufferSize)"];
"1000238" -> "1000246"  [label="DDG: kUnexpectedAudioBufferSize"];
"1000113" -> "1000246"  [label="DDG: source_"];
"1000205" -> "1000246"  [label="DDG: DLOG(WARNING)"];
"1000205" -> "1000246"  [label="DDG: \\"Extending the output buffer size by a factor of three \\"\n                  << \\"since Windows XP has been detected.\\""];
"1000205" -> "1000246"  [label="DDG: DLOG(WARNING) << \\"Extending the output buffer size by a factor of three \\"\n                  << \\"since Windows XP has been detected.\\""];
"1000121" -> "1000246"  [label="DDG: GetAudioOutputSampleRate()"];
"1000136" -> "1000246"  [label="DDG: &kValidOutputRates[0] + arraysize(kValidOutputRates)"];
"1000136" -> "1000246"  [label="DDG: &kValidOutputRates[0]"];
"1000135" -> "1000246"  [label="DDG: &kValidOutputRates[arraysize(kValidOutputRates)]"];
"1000135" -> "1000246"  [label="DDG: std::find(&kValidOutputRates[0],\n                &kValidOutputRates[0] + arraysize(kValidOutputRates),\n                sample_rate) ==\n                    &kValidOutputRates[arraysize(kValidOutputRates)]"];
"1000135" -> "1000246"  [label="DDG: std::find(&kValidOutputRates[0],\n                &kValidOutputRates[0] + arraysize(kValidOutputRates),\n                sample_rate)"];
"1000206" -> "1000246"  [label="DDG: WARNING"];
"1000152" -> "1000246"  [label="DDG: kValidOutputRates"];
"1000118" -> "1000246"  [label="DDG: DCHECK(sink_)"];
"1000118" -> "1000246"  [label="DDG: sink_"];
"1000112" -> "1000246"  [label="DDG: DCHECK(!source_)"];
"1000112" -> "1000246"  [label="DDG: !source_"];
"1000196" -> "1000246"  [label="DDG: base::win::GetVersion()"];
"1000196" -> "1000246"  [label="DDG: base::win::GetVersion() < base::win::VERSION_VISTA"];
"1000196" -> "1000246"  [label="DDG: base::win::VERSION_VISTA"];
"1000101" -> "1000246"  [label="DDG: source"];
"1000109" -> "1000246"  [label="DDG: !sink_"];
"1000109" -> "1000246"  [label="DDG: DCHECK(!sink_)"];
"1000171" -> "1000246"  [label="DDG: media::CHANNEL_LAYOUT_STEREO"];
"1000230" -> "1000246"  [label="DDG: sink_->Start()"];
"1000242" -> "1000246"  [label="DDG: AddHistogramFramesPerBuffer(buffer_size)"];
"1000242" -> "1000246"  [label="DDG: buffer_size"];
"1000190" -> "1000246"  [label="DDG: 2 * 440"];
"1000200" -> "1000246"  [label="DDG: 3 * buffer_size"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000246"  [label="DDG: source"];
"1000101" -> "1000107"  [label="DDG: source"];
"1000101" -> "1000220"  [label="DDG: source"];
"1000387" -> "1000100"  [label="AST: "];
"1000102" -> "1000100"  [label="AST: "];
"1000103" -> "1000102"  [label="AST: "];
"1000104" -> "1000102"  [label="AST: "];
"1000107" -> "1000102"  [label="AST: "];
"1000109" -> "1000102"  [label="AST: "];
"1000112" -> "1000102"  [label="AST: "];
"1000115" -> "1000102"  [label="AST: "];
"1000118" -> "1000102"  [label="AST: "];
"1000120" -> "1000102"  [label="AST: "];
"1000121" -> "1000102"  [label="AST: "];
"1000124" -> "1000102"  [label="AST: "];
"1000130" -> "1000102"  [label="AST: "];
"1000134" -> "1000102"  [label="AST: "];
"1000163" -> "1000102"  [label="AST: "];
"1000164" -> "1000102"  [label="AST: "];
"1000167" -> "1000102"  [label="AST: "];
"1000168" -> "1000102"  [label="AST: "];
"1000171" -> "1000102"  [label="AST: "];
"1000174" -> "1000102"  [label="AST: "];
"1000195" -> "1000102"  [label="AST: "];
"1000211" -> "1000102"  [label="AST: "];
"1000217" -> "1000102"  [label="AST: "];
"1000220" -> "1000102"  [label="AST: "];
"1000223" -> "1000102"  [label="AST: "];
"1000225" -> "1000102"  [label="AST: "];
"1000228" -> "1000102"  [label="AST: "];
"1000230" -> "1000102"  [label="AST: "];
"1000231" -> "1000102"  [label="AST: "];
"1000234" -> "1000102"  [label="AST: "];
"1000238" -> "1000102"  [label="AST: "];
"1000242" -> "1000102"  [label="AST: "];
"1000244" -> "1000102"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000122"  [label="CFG: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000121" -> "1000102"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000126" -> "1000121"  [label="CFG: "];
"1000121" -> "1000246"  [label="DDG: GetAudioOutputSampleRate()"];
"1000121" -> "1000127"  [label="DDG: sample_rate"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000118"  [label="CFG: "];
"1000123" -> "1000122"  [label="CFG: "];
"1000127" -> "1000124"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000124" -> "1000127"  [label="CFG: "];
"1000127" -> "1000124"  [label="DDG: \\"Audio output hardware sample rate: \\""];
"1000127" -> "1000124"  [label="DDG: sample_rate"];
"1000121" -> "1000127"  [label="DDG: sample_rate"];
"1000127" -> "1000130"  [label="DDG: sample_rate"];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000125"  [label="CFG: "];
"1000129" -> "1000128"  [label="CFG: "];
"1000124" -> "1000102"  [label="AST: "];
"1000124" -> "1000127"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000127" -> "1000124"  [label="AST: "];
"1000131" -> "1000124"  [label="CFG: "];
"1000124" -> "1000246"  [label="DDG: DVLOG(1)"];
"1000124" -> "1000246"  [label="DDG: \\"Audio output hardware sample rate: \\" << sample_rate"];
"1000124" -> "1000246"  [label="DDG: DVLOG(1) << \\"Audio output hardware sample rate: \\" << sample_rate"];
"1000125" -> "1000124"  [label="DDG: 1"];
"1000127" -> "1000124"  [label="DDG: \\"Audio output hardware sample rate: \\""];
"1000127" -> "1000124"  [label="DDG: sample_rate"];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000126"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000128" -> "1000125"  [label="CFG: "];
"1000125" -> "1000124"  [label="DDG: 1"];
"1000129" -> "1000127"  [label="AST: "];
"1000129" -> "1000128"  [label="CFG: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000121"  [label="CFG: "];
"1000125" -> "1000126"  [label="CFG: "];
"1000130" -> "1000102"  [label="AST: "];
"1000130" -> "1000133"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000133" -> "1000130"  [label="AST: "];
"1000139" -> "1000130"  [label="CFG: "];
"1000130" -> "1000246"  [label="DDG: UMA_HISTOGRAM_ENUMERATION(\\"WebRTC.AudioOutputSampleRate\\",\n                            sample_rate, media::kUnexpectedAudioSampleRate)"];
"1000130" -> "1000246"  [label="DDG: media::kUnexpectedAudioSampleRate"];
"1000127" -> "1000130"  [label="DDG: sample_rate"];
"1000130" -> "1000136"  [label="DDG: sample_rate"];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000124"  [label="CFG: "];
"1000132" -> "1000131"  [label="CFG: "];
"1000132" -> "1000130"  [label="AST: "];
"1000132" -> "1000131"  [label="CFG: "];
"1000133" -> "1000132"  [label="CFG: "];
"1000133" -> "1000130"  [label="AST: "];
"1000133" -> "1000132"  [label="CFG: "];
"1000130" -> "1000133"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000137" -> "1000138"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000144" -> "1000137"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000137" -> "1000138"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000130"  [label="CFG: "];
"1000140" -> "1000139"  [label="CFG: "];
"1000134" -> "1000102"  [label="AST: "];
"1000135" -> "1000134"  [label="AST: "];
"1000154" -> "1000134"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000140" -> "1000139"  [label="CFG: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000135" -> "1000149"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000149" -> "1000135"  [label="AST: "];
"1000157" -> "1000135"  [label="CFG: "];
"1000165" -> "1000135"  [label="CFG: "];
"1000135" -> "1000246"  [label="DDG: &kValidOutputRates[arraysize(kValidOutputRates)]"];
"1000135" -> "1000246"  [label="DDG: std::find(&kValidOutputRates[0],\n                &kValidOutputRates[0] + arraysize(kValidOutputRates),\n                sample_rate) ==\n                    &kValidOutputRates[arraysize(kValidOutputRates)]"];
"1000135" -> "1000246"  [label="DDG: std::find(&kValidOutputRates[0],\n                &kValidOutputRates[0] + arraysize(kValidOutputRates),\n                sample_rate)"];
"1000136" -> "1000135"  [label="DDG: &kValidOutputRates[0]"];
"1000136" -> "1000135"  [label="DDG: &kValidOutputRates[0] + arraysize(kValidOutputRates)"];
"1000136" -> "1000135"  [label="DDG: sample_rate"];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000148"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000141" -> "1000136"  [label="AST: "];
"1000148" -> "1000136"  [label="AST: "];
"1000151" -> "1000136"  [label="CFG: "];
"1000136" -> "1000246"  [label="DDG: &kValidOutputRates[0] + arraysize(kValidOutputRates)"];
"1000136" -> "1000246"  [label="DDG: &kValidOutputRates[0]"];
"1000136" -> "1000135"  [label="DDG: &kValidOutputRates[0]"];
"1000136" -> "1000135"  [label="DDG: &kValidOutputRates[0] + arraysize(kValidOutputRates)"];
"1000136" -> "1000135"  [label="DDG: sample_rate"];
"1000146" -> "1000136"  [label="DDG: kValidOutputRates"];
"1000130" -> "1000136"  [label="DDG: sample_rate"];
"1000136" -> "1000158"  [label="DDG: sample_rate"];
"1000136" -> "1000176"  [label="DDG: sample_rate"];
"1000141" -> "1000136"  [label="AST: "];
"1000141" -> "1000146"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000146" -> "1000141"  [label="AST: "];
"1000148" -> "1000141"  [label="CFG: "];
"1000146" -> "1000141"  [label="DDG: kValidOutputRates"];
"1000142" -> "1000141"  [label="AST: "];
"1000142" -> "1000143"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000147" -> "1000142"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000145" -> "1000143"  [label="AST: "];
"1000142" -> "1000143"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000144" -> "1000137"  [label="CFG: "];
"1000145" -> "1000144"  [label="CFG: "];
"1000145" -> "1000143"  [label="AST: "];
"1000145" -> "1000144"  [label="CFG: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000146" -> "1000141"  [label="AST: "];
"1000146" -> "1000147"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000141" -> "1000146"  [label="CFG: "];
"1000146" -> "1000136"  [label="DDG: kValidOutputRates"];
"1000146" -> "1000141"  [label="DDG: kValidOutputRates"];
"1000146" -> "1000152"  [label="DDG: kValidOutputRates"];
"1000147" -> "1000146"  [label="AST: "];
"1000147" -> "1000142"  [label="CFG: "];
"1000146" -> "1000147"  [label="CFG: "];
"1000148" -> "1000136"  [label="AST: "];
"1000148" -> "1000141"  [label="CFG: "];
"1000136" -> "1000148"  [label="CFG: "];
"1000149" -> "1000135"  [label="AST: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000135" -> "1000149"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000150" -> "1000152"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="AST: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000151" -> "1000136"  [label="CFG: "];
"1000153" -> "1000151"  [label="CFG: "];
"1000152" -> "1000150"  [label="AST: "];
"1000152" -> "1000153"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000150" -> "1000152"  [label="CFG: "];
"1000152" -> "1000246"  [label="DDG: kValidOutputRates"];
"1000146" -> "1000152"  [label="DDG: kValidOutputRates"];
"1000153" -> "1000152"  [label="AST: "];
"1000153" -> "1000151"  [label="CFG: "];
"1000152" -> "1000153"  [label="CFG: "];
"1000154" -> "1000134"  [label="AST: "];
"1000155" -> "1000154"  [label="AST: "];
"1000161" -> "1000154"  [label="AST: "];
"1000158" -> "1000155"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000155" -> "1000158"  [label="CFG: "];
"1000158" -> "1000246"  [label="DDG: sample_rate"];
"1000158" -> "1000155"  [label="DDG: sample_rate"];
"1000158" -> "1000155"  [label="DDG: \\" is not a supported output rate.\\""];
"1000136" -> "1000158"  [label="DDG: sample_rate"];
"1000159" -> "1000158"  [label="AST: "];
"1000159" -> "1000156"  [label="CFG: "];
"1000160" -> "1000159"  [label="CFG: "];
"1000160" -> "1000158"  [label="AST: "];
"1000160" -> "1000159"  [label="CFG: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000155" -> "1000158"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000158" -> "1000155"  [label="AST: "];
"1000162" -> "1000155"  [label="CFG: "];
"1000155" -> "1000246"  [label="DDG: DLOG(ERROR)"];
"1000155" -> "1000246"  [label="DDG: DLOG(ERROR) << sample_rate << \\" is not a supported output rate.\\""];
"1000155" -> "1000246"  [label="DDG: sample_rate << \\" is not a supported output rate.\\""];
"1000156" -> "1000155"  [label="DDG: ERROR"];
"1000158" -> "1000155"  [label="DDG: sample_rate"];
"1000158" -> "1000155"  [label="DDG: \\" is not a supported output rate.\\""];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000157"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000159" -> "1000156"  [label="CFG: "];
"1000156" -> "1000246"  [label="DDG: ERROR"];
"1000156" -> "1000155"  [label="DDG: ERROR"];
"1000157" -> "1000156"  [label="AST: "];
"1000157" -> "1000135"  [label="CFG: "];
"1000156" -> "1000157"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000162" -> "1000155"  [label="CFG: "];
"1000161" -> "1000162"  [label="CFG: "];
"1000162" -> "1000161"  [label="DDG: false"];
"1000161" -> "1000154"  [label="AST: "];
"1000161" -> "1000162"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000246" -> "1000161"  [label="CFG: "];
"1000161" -> "1000246"  [label="DDG: <RET>"];
"1000162" -> "1000161"  [label="DDG: false"];
"1000164" -> "1000102"  [label="AST: "];
"1000164" -> "1000166"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000166" -> "1000164"  [label="AST: "];
"1000169" -> "1000164"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000165" -> "1000135"  [label="CFG: "];
"1000166" -> "1000165"  [label="CFG: "];
"1000166" -> "1000164"  [label="AST: "];
"1000166" -> "1000165"  [label="CFG: "];
"1000164" -> "1000166"  [label="CFG: "];
"1000170" -> "1000168"  [label="AST: "];
"1000170" -> "1000169"  [label="CFG: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000168" -> "1000102"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000172" -> "1000168"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000169" -> "1000164"  [label="CFG: "];
"1000170" -> "1000169"  [label="CFG: "];
"1000173" -> "1000171"  [label="AST: "];
"1000173" -> "1000172"  [label="CFG: "];
"1000171" -> "1000173"  [label="CFG: "];
"1000171" -> "1000102"  [label="AST: "];
"1000171" -> "1000173"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="AST: "];
"1000177" -> "1000171"  [label="CFG: "];
"1000171" -> "1000246"  [label="DDG: media::CHANNEL_LAYOUT_STEREO"];
"1000171" -> "1000211"  [label="DDG: channel_layout"];
"1000172" -> "1000171"  [label="AST: "];
"1000172" -> "1000168"  [label="CFG: "];
"1000173" -> "1000172"  [label="CFG: "];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000100"  [label="CFG: "];
"1000106" -> "1000105"  [label="CFG: "];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1000106"  [label="CFG: "];
"1000105" -> "1000104"  [label="AST: "];
"1000106" -> "1000104"  [label="AST: "];
"1000108" -> "1000104"  [label="CFG: "];
"1000104" -> "1000246"  [label="DDG: DCHECK_EQ(state_, UNINITIALIZED)"];
"1000104" -> "1000246"  [label="DDG: state_"];
"1000104" -> "1000246"  [label="DDG: UNINITIALIZED"];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000105"  [label="CFG: "];
"1000104" -> "1000106"  [label="CFG: "];
"1000174" -> "1000102"  [label="AST: "];
"1000175" -> "1000174"  [label="AST: "];
"1000182" -> "1000174"  [label="AST: "];
"1000188" -> "1000174"  [label="AST: "];
"1000178" -> "1000176"  [label="AST: "];
"1000178" -> "1000177"  [label="CFG: "];
"1000176" -> "1000178"  [label="CFG: "];
"1000179" -> "1000175"  [label="AST: "];
"1000179" -> "1000181"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000181" -> "1000179"  [label="AST: "];
"1000175" -> "1000179"  [label="CFG: "];
"1000179" -> "1000175"  [label="DDG: sample_rate"];
"1000179" -> "1000175"  [label="DDG: 48000"];
"1000176" -> "1000179"  [label="DDG: sample_rate"];
"1000179" -> "1000185"  [label="DDG: sample_rate"];
"1000179" -> "1000211"  [label="DDG: sample_rate"];
"1000180" -> "1000179"  [label="AST: "];
"1000180" -> "1000176"  [label="CFG: "];
"1000181" -> "1000180"  [label="CFG: "];
"1000181" -> "1000179"  [label="AST: "];
"1000181" -> "1000180"  [label="CFG: "];
"1000179" -> "1000181"  [label="CFG: "];
"1000182" -> "1000174"  [label="AST: "];
"1000183" -> "1000182"  [label="AST: "];
"1000175" -> "1000174"  [label="AST: "];
"1000175" -> "1000176"  [label="CFG: "];
"1000175" -> "1000179"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000179" -> "1000175"  [label="AST: "];
"1000184" -> "1000175"  [label="CFG: "];
"1000191" -> "1000175"  [label="CFG: "];
"1000175" -> "1000246"  [label="DDG: sample_rate == 48000"];
"1000175" -> "1000246"  [label="DDG: sample_rate == 96000"];
"1000175" -> "1000246"  [label="DDG: sample_rate == 96000 || sample_rate == 48000"];
"1000176" -> "1000175"  [label="DDG: sample_rate"];
"1000176" -> "1000175"  [label="DDG: 96000"];
"1000179" -> "1000175"  [label="DDG: sample_rate"];
"1000179" -> "1000175"  [label="DDG: 48000"];
"1000176" -> "1000175"  [label="AST: "];
"1000176" -> "1000178"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000178" -> "1000176"  [label="AST: "];
"1000180" -> "1000176"  [label="CFG: "];
"1000175" -> "1000176"  [label="CFG: "];
"1000176" -> "1000175"  [label="DDG: sample_rate"];
"1000176" -> "1000175"  [label="DDG: 96000"];
"1000136" -> "1000176"  [label="DDG: sample_rate"];
"1000176" -> "1000179"  [label="DDG: sample_rate"];
"1000176" -> "1000185"  [label="DDG: sample_rate"];
"1000176" -> "1000211"  [label="DDG: sample_rate"];
"1000177" -> "1000176"  [label="AST: "];
"1000177" -> "1000171"  [label="CFG: "];
"1000178" -> "1000177"  [label="CFG: "];
"1000185" -> "1000183"  [label="AST: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="AST: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000185" -> "1000183"  [label="DDG: sample_rate"];
"1000185" -> "1000183"  [label="DDG: 100"];
"1000179" -> "1000185"  [label="DDG: sample_rate"];
"1000176" -> "1000185"  [label="DDG: sample_rate"];
"1000185" -> "1000211"  [label="DDG: sample_rate"];
"1000186" -> "1000185"  [label="AST: "];
"1000186" -> "1000184"  [label="CFG: "];
"1000187" -> "1000186"  [label="CFG: "];
"1000187" -> "1000185"  [label="AST: "];
"1000187" -> "1000186"  [label="CFG: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000185" -> "1000183"  [label="AST: "];
"1000197" -> "1000183"  [label="CFG: "];
"1000183" -> "1000246"  [label="DDG: sample_rate / 100"];
"1000185" -> "1000183"  [label="DDG: sample_rate"];
"1000185" -> "1000183"  [label="DDG: 100"];
"1000183" -> "1000202"  [label="DDG: buffer_size"];
"1000183" -> "1000211"  [label="DDG: buffer_size"];
"1000184" -> "1000183"  [label="AST: "];
"1000184" -> "1000175"  [label="CFG: "];
"1000186" -> "1000184"  [label="CFG: "];
"1000188" -> "1000174"  [label="AST: "];
"1000189" -> "1000188"  [label="AST: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000189"  [label="AST: "];
"1000192" -> "1000190"  [label="AST: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000194" -> "1000192"  [label="AST: "];
"1000190" -> "1000192"  [label="CFG: "];
"1000192" -> "1000190"  [label="DDG: 2"];
"1000192" -> "1000190"  [label="DDG: 440"];
"1000193" -> "1000192"  [label="AST: "];
"1000193" -> "1000191"  [label="CFG: "];
"1000194" -> "1000193"  [label="CFG: "];
"1000194" -> "1000192"  [label="AST: "];
"1000194" -> "1000193"  [label="CFG: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000190" -> "1000192"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000192" -> "1000190"  [label="AST: "];
"1000197" -> "1000190"  [label="CFG: "];
"1000190" -> "1000246"  [label="DDG: 2 * 440"];
"1000192" -> "1000190"  [label="DDG: 2"];
"1000192" -> "1000190"  [label="DDG: 440"];
"1000190" -> "1000202"  [label="DDG: buffer_size"];
"1000190" -> "1000211"  [label="DDG: buffer_size"];
"1000191" -> "1000190"  [label="AST: "];
"1000191" -> "1000175"  [label="CFG: "];
"1000193" -> "1000191"  [label="CFG: "];
"1000195" -> "1000102"  [label="AST: "];
"1000196" -> "1000195"  [label="AST: "];
"1000199" -> "1000195"  [label="AST: "];
"1000198" -> "1000196"  [label="AST: "];
"1000198" -> "1000197"  [label="CFG: "];
"1000196" -> "1000198"  [label="CFG: "];
"1000199" -> "1000195"  [label="AST: "];
"1000200" -> "1000199"  [label="AST: "];
"1000205" -> "1000199"  [label="AST: "];
"1000196" -> "1000195"  [label="AST: "];
"1000196" -> "1000198"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000198" -> "1000196"  [label="AST: "];
"1000201" -> "1000196"  [label="CFG: "];
"1000212" -> "1000196"  [label="CFG: "];
"1000196" -> "1000246"  [label="DDG: base::win::GetVersion()"];
"1000196" -> "1000246"  [label="DDG: base::win::GetVersion() < base::win::VERSION_VISTA"];
"1000196" -> "1000246"  [label="DDG: base::win::VERSION_VISTA"];
"1000197" -> "1000196"  [label="AST: "];
"1000197" -> "1000183"  [label="CFG: "];
"1000197" -> "1000190"  [label="CFG: "];
"1000198" -> "1000197"  [label="CFG: "];
"1000202" -> "1000200"  [label="AST: "];
"1000202" -> "1000204"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000200" -> "1000202"  [label="CFG: "];
"1000202" -> "1000200"  [label="DDG: 3"];
"1000202" -> "1000200"  [label="DDG: buffer_size"];
"1000183" -> "1000202"  [label="DDG: buffer_size"];
"1000190" -> "1000202"  [label="DDG: buffer_size"];
"1000203" -> "1000202"  [label="AST: "];
"1000203" -> "1000201"  [label="CFG: "];
"1000204" -> "1000203"  [label="CFG: "];
"1000204" -> "1000202"  [label="AST: "];
"1000204" -> "1000203"  [label="CFG: "];
"1000202" -> "1000204"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000200" -> "1000202"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000202" -> "1000200"  [label="AST: "];
"1000207" -> "1000200"  [label="CFG: "];
"1000200" -> "1000246"  [label="DDG: 3 * buffer_size"];
"1000202" -> "1000200"  [label="DDG: 3"];
"1000202" -> "1000200"  [label="DDG: buffer_size"];
"1000200" -> "1000211"  [label="DDG: buffer_size"];
"1000201" -> "1000200"  [label="AST: "];
"1000201" -> "1000196"  [label="CFG: "];
"1000203" -> "1000201"  [label="CFG: "];
"1000107" -> "1000102"  [label="AST: "];
"1000107" -> "1000108"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000111" -> "1000107"  [label="CFG: "];
"1000107" -> "1000246"  [label="DDG: source"];
"1000107" -> "1000246"  [label="DDG: DCHECK(source)"];
"1000101" -> "1000107"  [label="DDG: source"];
"1000107" -> "1000220"  [label="DDG: source"];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000104"  [label="CFG: "];
"1000107" -> "1000108"  [label="CFG: "];
"1000208" -> "1000205"  [label="AST: "];
"1000208" -> "1000210"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000210" -> "1000208"  [label="AST: "];
"1000205" -> "1000208"  [label="CFG: "];
"1000208" -> "1000205"  [label="DDG: \\"Extending the output buffer size by a factor of three \\""];
"1000208" -> "1000205"  [label="DDG: \\"since Windows XP has been detected.\\""];
"1000209" -> "1000208"  [label="AST: "];
"1000209" -> "1000206"  [label="CFG: "];
"1000210" -> "1000209"  [label="CFG: "];
"1000205" -> "1000199"  [label="AST: "];
"1000205" -> "1000208"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000208" -> "1000205"  [label="AST: "];
"1000212" -> "1000205"  [label="CFG: "];
"1000205" -> "1000246"  [label="DDG: DLOG(WARNING)"];
"1000205" -> "1000246"  [label="DDG: \\"Extending the output buffer size by a factor of three \\"\n                  << \\"since Windows XP has been detected.\\""];
"1000205" -> "1000246"  [label="DDG: DLOG(WARNING) << \\"Extending the output buffer size by a factor of three \\"\n                  << \\"since Windows XP has been detected.\\""];
"1000206" -> "1000205"  [label="DDG: WARNING"];
"1000208" -> "1000205"  [label="DDG: \\"Extending the output buffer size by a factor of three \\""];
"1000208" -> "1000205"  [label="DDG: \\"since Windows XP has been detected.\\""];
"1000206" -> "1000205"  [label="AST: "];
"1000206" -> "1000207"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000209" -> "1000206"  [label="CFG: "];
"1000206" -> "1000246"  [label="DDG: WARNING"];
"1000206" -> "1000205"  [label="DDG: WARNING"];
"1000207" -> "1000206"  [label="AST: "];
"1000207" -> "1000200"  [label="CFG: "];
"1000206" -> "1000207"  [label="CFG: "];
"1000210" -> "1000208"  [label="AST: "];
"1000210" -> "1000209"  [label="CFG: "];
"1000208" -> "1000210"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000107"  [label="CFG: "];
"1000110" -> "1000111"  [label="CFG: "];
"1000109" -> "1000102"  [label="AST: "];
"1000109" -> "1000110"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000114" -> "1000109"  [label="CFG: "];
"1000109" -> "1000246"  [label="DDG: !sink_"];
"1000109" -> "1000246"  [label="DDG: DCHECK(!sink_)"];
"1000110" -> "1000109"  [label="DDG: sink_"];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000111"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000109" -> "1000110"  [label="CFG: "];
"1000110" -> "1000109"  [label="DDG: sink_"];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000109"  [label="CFG: "];
"1000113" -> "1000114"  [label="CFG: "];
"1000112" -> "1000102"  [label="AST: "];
"1000112" -> "1000113"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000116" -> "1000112"  [label="CFG: "];
"1000112" -> "1000246"  [label="DDG: DCHECK(!source_)"];
"1000112" -> "1000246"  [label="DDG: !source_"];
"1000113" -> "1000112"  [label="DDG: source_"];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000114"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000112" -> "1000113"  [label="CFG: "];
"1000113" -> "1000246"  [label="DDG: source_"];
"1000113" -> "1000112"  [label="DDG: source_"];
"1000212" -> "1000211"  [label="AST: "];
"1000212" -> "1000205"  [label="CFG: "];
"1000212" -> "1000196"  [label="CFG: "];
"1000213" -> "1000212"  [label="CFG: "];
"1000211" -> "1000102"  [label="AST: "];
"1000211" -> "1000216"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000213" -> "1000211"  [label="AST: "];
"1000214" -> "1000211"  [label="AST: "];
"1000215" -> "1000211"  [label="AST: "];
"1000216" -> "1000211"  [label="AST: "];
"1000219" -> "1000211"  [label="CFG: "];
"1000211" -> "1000246"  [label="DDG: media::AudioParameters::AUDIO_PCM_LOW_LATENCY"];
"1000211" -> "1000246"  [label="DDG: sample_rate"];
"1000211" -> "1000246"  [label="DDG: params_.Reset(media::AudioParameters::AUDIO_PCM_LOW_LATENCY, channel_layout,\n                sample_rate, 16, buffer_size)"];
"1000171" -> "1000211"  [label="DDG: channel_layout"];
"1000185" -> "1000211"  [label="DDG: sample_rate"];
"1000179" -> "1000211"  [label="DDG: sample_rate"];
"1000176" -> "1000211"  [label="DDG: sample_rate"];
"1000200" -> "1000211"  [label="DDG: buffer_size"];
"1000183" -> "1000211"  [label="DDG: buffer_size"];
"1000190" -> "1000211"  [label="DDG: buffer_size"];
"1000211" -> "1000234"  [label="DDG: channel_layout"];
"1000211" -> "1000238"  [label="DDG: buffer_size"];
"1000213" -> "1000211"  [label="AST: "];
"1000213" -> "1000212"  [label="CFG: "];
"1000214" -> "1000213"  [label="CFG: "];
"1000214" -> "1000211"  [label="AST: "];
"1000214" -> "1000213"  [label="CFG: "];
"1000215" -> "1000214"  [label="CFG: "];
"1000215" -> "1000211"  [label="AST: "];
"1000215" -> "1000214"  [label="CFG: "];
"1000216" -> "1000215"  [label="CFG: "];
"1000216" -> "1000211"  [label="AST: "];
"1000216" -> "1000215"  [label="CFG: "];
"1000211" -> "1000216"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000218" -> "1000219"  [label="CFG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000217" -> "1000218"  [label="CFG: "];
"1000218" -> "1000246"  [label="DDG: int16"];
"1000218" -> "1000217"  [label="DDG: int16"];
"1000217" -> "1000102"  [label="AST: "];
"1000217" -> "1000218"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000221" -> "1000217"  [label="CFG: "];
"1000217" -> "1000246"  [label="DDG: buffer_.reset(new int16[params_.frames_per_buffer() * params_.channels()])"];
"1000217" -> "1000246"  [label="DDG: new int16[params_.frames_per_buffer() * params_.channels()]"];
"1000218" -> "1000217"  [label="DDG: int16"];
"1000219" -> "1000218"  [label="AST: "];
"1000219" -> "1000211"  [label="CFG: "];
"1000218" -> "1000219"  [label="CFG: "];
"1000222" -> "1000220"  [label="AST: "];
"1000222" -> "1000221"  [label="CFG: "];
"1000220" -> "1000222"  [label="CFG: "];
"1000220" -> "1000102"  [label="AST: "];
"1000220" -> "1000222"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000222" -> "1000220"  [label="AST: "];
"1000224" -> "1000220"  [label="CFG: "];
"1000220" -> "1000246"  [label="DDG: source_"];
"1000220" -> "1000246"  [label="DDG: source"];
"1000107" -> "1000220"  [label="DDG: source"];
"1000101" -> "1000220"  [label="DDG: source"];
"1000221" -> "1000220"  [label="AST: "];
"1000221" -> "1000217"  [label="CFG: "];
"1000222" -> "1000221"  [label="CFG: "];
"1000223" -> "1000102"  [label="AST: "];
"1000223" -> "1000224"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000226" -> "1000223"  [label="CFG: "];
"1000223" -> "1000246"  [label="DDG: source->SetRenderFormat(params_)"];
"1000223" -> "1000225"  [label="DDG: params_"];
"1000224" -> "1000223"  [label="AST: "];
"1000224" -> "1000220"  [label="CFG: "];
"1000223" -> "1000224"  [label="CFG: "];
"1000225" -> "1000102"  [label="AST: "];
"1000225" -> "1000227"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000227" -> "1000225"  [label="AST: "];
"1000229" -> "1000225"  [label="CFG: "];
"1000225" -> "1000246"  [label="DDG: sink_->Initialize(params_, this)"];
"1000225" -> "1000246"  [label="DDG: this"];
"1000225" -> "1000246"  [label="DDG: params_"];
"1000223" -> "1000225"  [label="DDG: params_"];
"1000226" -> "1000225"  [label="AST: "];
"1000226" -> "1000223"  [label="CFG: "];
"1000227" -> "1000226"  [label="CFG: "];
"1000227" -> "1000225"  [label="AST: "];
"1000227" -> "1000226"  [label="CFG: "];
"1000225" -> "1000227"  [label="CFG: "];
"1000228" -> "1000102"  [label="AST: "];
"1000228" -> "1000229"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000230" -> "1000228"  [label="CFG: "];
"1000228" -> "1000246"  [label="DDG: sink_->SetSourceRenderView(source_render_view_id_)"];
"1000228" -> "1000246"  [label="DDG: source_render_view_id_"];
"1000229" -> "1000228"  [label="AST: "];
"1000229" -> "1000225"  [label="CFG: "];
"1000228" -> "1000229"  [label="CFG: "];
"1000230" -> "1000102"  [label="AST: "];
"1000230" -> "1000228"  [label="CFG: "];
"1000232" -> "1000230"  [label="CFG: "];
"1000230" -> "1000246"  [label="DDG: sink_->Start()"];
"1000233" -> "1000231"  [label="AST: "];
"1000233" -> "1000232"  [label="CFG: "];
"1000231" -> "1000233"  [label="CFG: "];
"1000231" -> "1000102"  [label="AST: "];
"1000231" -> "1000233"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000233" -> "1000231"  [label="AST: "];
"1000235" -> "1000231"  [label="CFG: "];
"1000231" -> "1000246"  [label="DDG: PAUSED"];
"1000231" -> "1000246"  [label="DDG: state_"];
"1000232" -> "1000231"  [label="AST: "];
"1000232" -> "1000230"  [label="CFG: "];
"1000233" -> "1000232"  [label="CFG: "];
"1000234" -> "1000102"  [label="AST: "];
"1000234" -> "1000237"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000236" -> "1000234"  [label="AST: "];
"1000237" -> "1000234"  [label="AST: "];
"1000239" -> "1000234"  [label="CFG: "];
"1000234" -> "1000246"  [label="DDG: media::CHANNEL_LAYOUT_MAX"];
"1000234" -> "1000246"  [label="DDG: channel_layout"];
"1000234" -> "1000246"  [label="DDG: UMA_HISTOGRAM_ENUMERATION(\\"WebRTC.AudioOutputChannelLayout\\",\n                            channel_layout, media::CHANNEL_LAYOUT_MAX)"];
"1000211" -> "1000234"  [label="DDG: channel_layout"];
"1000235" -> "1000234"  [label="AST: "];
"1000235" -> "1000231"  [label="CFG: "];
"1000236" -> "1000235"  [label="CFG: "];
"1000236" -> "1000234"  [label="AST: "];
"1000236" -> "1000235"  [label="CFG: "];
"1000237" -> "1000236"  [label="CFG: "];
"1000237" -> "1000234"  [label="AST: "];
"1000237" -> "1000236"  [label="CFG: "];
"1000234" -> "1000237"  [label="CFG: "];
"1000238" -> "1000102"  [label="AST: "];
"1000238" -> "1000241"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="AST: "];
"1000241" -> "1000238"  [label="AST: "];
"1000243" -> "1000238"  [label="CFG: "];
"1000238" -> "1000246"  [label="DDG: UMA_HISTOGRAM_ENUMERATION(\\"WebRTC.AudioOutputFramesPerBuffer\\",\n                            buffer_size, kUnexpectedAudioBufferSize)"];
"1000238" -> "1000246"  [label="DDG: kUnexpectedAudioBufferSize"];
"1000211" -> "1000238"  [label="DDG: buffer_size"];
"1000238" -> "1000242"  [label="DDG: buffer_size"];
"1000239" -> "1000238"  [label="AST: "];
"1000239" -> "1000234"  [label="CFG: "];
"1000240" -> "1000239"  [label="CFG: "];
"1000240" -> "1000238"  [label="AST: "];
"1000240" -> "1000239"  [label="CFG: "];
"1000241" -> "1000240"  [label="CFG: "];
"1000241" -> "1000238"  [label="AST: "];
"1000241" -> "1000240"  [label="CFG: "];
"1000238" -> "1000241"  [label="CFG: "];
"1000242" -> "1000102"  [label="AST: "];
"1000242" -> "1000243"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000245" -> "1000242"  [label="CFG: "];
"1000242" -> "1000246"  [label="DDG: AddHistogramFramesPerBuffer(buffer_size)"];
"1000242" -> "1000246"  [label="DDG: buffer_size"];
"1000238" -> "1000242"  [label="DDG: buffer_size"];
"1000243" -> "1000242"  [label="AST: "];
"1000243" -> "1000238"  [label="CFG: "];
"1000242" -> "1000243"  [label="CFG: "];
"1000117" -> "1000115"  [label="AST: "];
"1000117" -> "1000116"  [label="CFG: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000115" -> "1000102"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000119" -> "1000115"  [label="CFG: "];
"1000115" -> "1000246"  [label="DDG: AudioDeviceFactory::NewOutputDevice()"];
"1000115" -> "1000118"  [label="DDG: sink_"];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000112"  [label="CFG: "];
"1000117" -> "1000116"  [label="CFG: "];
"1000244" -> "1000102"  [label="AST: "];
"1000244" -> "1000245"  [label="CFG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000246" -> "1000244"  [label="CFG: "];
"1000244" -> "1000246"  [label="DDG: <RET>"];
"1000245" -> "1000244"  [label="DDG: true"];
"1000245" -> "1000244"  [label="AST: "];
"1000245" -> "1000242"  [label="CFG: "];
"1000244" -> "1000245"  [label="CFG: "];
"1000245" -> "1000244"  [label="DDG: true"];
"1000118" -> "1000102"  [label="AST: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000122" -> "1000118"  [label="CFG: "];
"1000118" -> "1000246"  [label="DDG: DCHECK(sink_)"];
"1000118" -> "1000246"  [label="DDG: sink_"];
"1000115" -> "1000118"  [label="DDG: sink_"];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000115"  [label="CFG: "];
"1000118" -> "1000119"  [label="CFG: "];
}
