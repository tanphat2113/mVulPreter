digraph "1_Chrome_f9b56bc54fdff5981dba39a707489c3ca9980fac_1" {
"1000148" [label="(MethodReturn,bool)"];
"1000101" [label="(MethodParameterIn,base::StringPiece16 hostname)"];
"1000228" [label="(MethodParameterOut,base::StringPiece16 hostname)"];
"1000102" [label="(Block,)"];
"1000131" [label="(Call,uspoof_getSkeletonUnicodeString(checker_, 0, ustr_host, ustr_skeleton,\n                                  &status))"];
"1000132" [label="(Identifier,checker_)"];
"1000133" [label="(Literal,0)"];
"1000134" [label="(Identifier,ustr_host)"];
"1000135" [label="(Identifier,ustr_skeleton)"];
"1000136" [label="(Call,&status)"];
"1000137" [label="(Identifier,status)"];
"1000140" [label="(Identifier,status)"];
"1000138" [label="(ControlStructure,if (U_FAILURE(status)))"];
"1000139" [label="(Call,U_FAILURE(status))"];
"1000142" [label="(Identifier,false)"];
"1000141" [label="(Return,return false;)"];
"1000144" [label="(Return,return LookupMatchInTopDomains(ustr_skeleton.toUTF8String(skeleton));)"];
"1000146" [label="(Call,ustr_skeleton.toUTF8String(skeleton))"];
"1000147" [label="(Identifier,skeleton)"];
"1000145" [label="(Call,LookupMatchInTopDomains(ustr_skeleton.toUTF8String(skeleton)))"];
"1000104" [label="(Call,hostname_length = hostname.length() - (hostname.back() == '.' ? 1 : 0))"];
"1000105" [label="(Identifier,hostname_length)"];
"1000106" [label="(Call,hostname.length() - (hostname.back() == '.' ? 1 : 0))"];
"1000107" [label="(Call,hostname.length())"];
"1000108" [label="(Call,hostname.back() == '.' ? 1 : 0)"];
"1000109" [label="(Call,hostname.back() == '.')"];
"1000110" [label="(Call,hostname.back())"];
"1000111" [label="(Literal,'.')"];
"1000112" [label="(Literal,1)"];
"1000113" [label="(Literal,0)"];
"1000115" [label="(ControlStructure,if (lgc_letters_n_ascii_.span(ustr_host, 0, USET_SPAN_CONTAINED) ==\n      ustr_host.length()))"];
"1000118" [label="(Identifier,ustr_host)"];
"1000119" [label="(Literal,0)"];
"1000120" [label="(Identifier,USET_SPAN_CONTAINED)"];
"1000116" [label="(Call,lgc_letters_n_ascii_.span(ustr_host, 0, USET_SPAN_CONTAINED) ==\n      ustr_host.length())"];
"1000117" [label="(Call,lgc_letters_n_ascii_.span(ustr_host, 0, USET_SPAN_CONTAINED))"];
"1000121" [label="(Call,ustr_host.length())"];
"1000122" [label="(Call,diacritic_remover_.get()->transliterate(ustr_host))"];
"1000123" [label="(Identifier,ustr_host)"];
"1000124" [label="(Call,extra_confusable_mapper_.get()->transliterate(ustr_host))"];
"1000125" [label="(Identifier,ustr_host)"];
"1000127" [label="(Call,status = U_ZERO_ERROR)"];
"1000128" [label="(Identifier,status)"];
"1000129" [label="(Identifier,U_ZERO_ERROR)"];
"1000148" -> "1000100"  [label="AST: "];
"1000148" -> "1000141"  [label="CFG: "];
"1000148" -> "1000144"  [label="CFG: "];
"1000144" -> "1000148"  [label="DDG: <RET>"];
"1000116" -> "1000148"  [label="DDG: lgc_letters_n_ascii_.span(ustr_host, 0, USET_SPAN_CONTAINED)"];
"1000116" -> "1000148"  [label="DDG: ustr_host.length()"];
"1000116" -> "1000148"  [label="DDG: lgc_letters_n_ascii_.span(ustr_host, 0, USET_SPAN_CONTAINED) ==\n      ustr_host.length()"];
"1000106" -> "1000148"  [label="DDG: hostname.back() == '.' ? 1 : 0"];
"1000106" -> "1000148"  [label="DDG: hostname.length()"];
"1000104" -> "1000148"  [label="DDG: hostname_length"];
"1000104" -> "1000148"  [label="DDG: hostname.length() - (hostname.back() == '.' ? 1 : 0)"];
"1000139" -> "1000148"  [label="DDG: status"];
"1000139" -> "1000148"  [label="DDG: U_FAILURE(status)"];
"1000145" -> "1000148"  [label="DDG: ustr_skeleton.toUTF8String(skeleton)"];
"1000145" -> "1000148"  [label="DDG: LookupMatchInTopDomains(ustr_skeleton.toUTF8String(skeleton))"];
"1000131" -> "1000148"  [label="DDG: checker_"];
"1000131" -> "1000148"  [label="DDG: ustr_host"];
"1000131" -> "1000148"  [label="DDG: ustr_skeleton"];
"1000131" -> "1000148"  [label="DDG: &status"];
"1000131" -> "1000148"  [label="DDG: uspoof_getSkeletonUnicodeString(checker_, 0, ustr_host, ustr_skeleton,\n                                  &status)"];
"1000127" -> "1000148"  [label="DDG: U_ZERO_ERROR"];
"1000101" -> "1000148"  [label="DDG: hostname"];
"1000109" -> "1000148"  [label="DDG: hostname.back()"];
"1000117" -> "1000148"  [label="DDG: USET_SPAN_CONTAINED"];
"1000122" -> "1000148"  [label="DDG: diacritic_remover_.get()->transliterate(ustr_host)"];
"1000146" -> "1000148"  [label="DDG: skeleton"];
"1000108" -> "1000148"  [label="DDG: hostname.back() == '.'"];
"1000124" -> "1000148"  [label="DDG: extra_confusable_mapper_.get()->transliterate(ustr_host)"];
"1000141" -> "1000148"  [label="DDG: <RET>"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000148"  [label="DDG: hostname"];
"1000228" -> "1000100"  [label="AST: "];
"1000102" -> "1000100"  [label="AST: "];
"1000103" -> "1000102"  [label="AST: "];
"1000104" -> "1000102"  [label="AST: "];
"1000114" -> "1000102"  [label="AST: "];
"1000115" -> "1000102"  [label="AST: "];
"1000124" -> "1000102"  [label="AST: "];
"1000126" -> "1000102"  [label="AST: "];
"1000127" -> "1000102"  [label="AST: "];
"1000130" -> "1000102"  [label="AST: "];
"1000131" -> "1000102"  [label="AST: "];
"1000138" -> "1000102"  [label="AST: "];
"1000143" -> "1000102"  [label="AST: "];
"1000144" -> "1000102"  [label="AST: "];
"1000131" -> "1000102"  [label="AST: "];
"1000131" -> "1000136"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="AST: "];
"1000134" -> "1000131"  [label="AST: "];
"1000135" -> "1000131"  [label="AST: "];
"1000136" -> "1000131"  [label="AST: "];
"1000140" -> "1000131"  [label="CFG: "];
"1000131" -> "1000148"  [label="DDG: checker_"];
"1000131" -> "1000148"  [label="DDG: ustr_host"];
"1000131" -> "1000148"  [label="DDG: ustr_skeleton"];
"1000131" -> "1000148"  [label="DDG: &status"];
"1000131" -> "1000148"  [label="DDG: uspoof_getSkeletonUnicodeString(checker_, 0, ustr_host, ustr_skeleton,\n                                  &status)"];
"1000124" -> "1000131"  [label="DDG: ustr_host"];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000127"  [label="CFG: "];
"1000133" -> "1000132"  [label="CFG: "];
"1000133" -> "1000131"  [label="AST: "];
"1000133" -> "1000132"  [label="CFG: "];
"1000134" -> "1000133"  [label="CFG: "];
"1000134" -> "1000131"  [label="AST: "];
"1000134" -> "1000133"  [label="CFG: "];
"1000135" -> "1000134"  [label="CFG: "];
"1000135" -> "1000131"  [label="AST: "];
"1000135" -> "1000134"  [label="CFG: "];
"1000137" -> "1000135"  [label="CFG: "];
"1000136" -> "1000131"  [label="AST: "];
"1000136" -> "1000137"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000131" -> "1000136"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000137" -> "1000135"  [label="CFG: "];
"1000136" -> "1000137"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000140" -> "1000131"  [label="CFG: "];
"1000139" -> "1000140"  [label="CFG: "];
"1000138" -> "1000102"  [label="AST: "];
"1000139" -> "1000138"  [label="AST: "];
"1000141" -> "1000138"  [label="AST: "];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000140"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000142" -> "1000139"  [label="CFG: "];
"1000147" -> "1000139"  [label="CFG: "];
"1000139" -> "1000148"  [label="DDG: status"];
"1000139" -> "1000148"  [label="DDG: U_FAILURE(status)"];
"1000127" -> "1000139"  [label="DDG: status"];
"1000142" -> "1000141"  [label="AST: "];
"1000142" -> "1000139"  [label="CFG: "];
"1000141" -> "1000142"  [label="CFG: "];
"1000142" -> "1000141"  [label="DDG: false"];
"1000141" -> "1000138"  [label="AST: "];
"1000141" -> "1000142"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000148" -> "1000141"  [label="CFG: "];
"1000141" -> "1000148"  [label="DDG: <RET>"];
"1000142" -> "1000141"  [label="DDG: false"];
"1000144" -> "1000102"  [label="AST: "];
"1000144" -> "1000145"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000148" -> "1000144"  [label="CFG: "];
"1000144" -> "1000148"  [label="DDG: <RET>"];
"1000145" -> "1000144"  [label="DDG: LookupMatchInTopDomains(ustr_skeleton.toUTF8String(skeleton))"];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000147"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000145" -> "1000146"  [label="CFG: "];
"1000146" -> "1000148"  [label="DDG: skeleton"];
"1000146" -> "1000145"  [label="DDG: skeleton"];
"1000147" -> "1000146"  [label="AST: "];
"1000147" -> "1000139"  [label="CFG: "];
"1000146" -> "1000147"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000145" -> "1000146"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000144" -> "1000145"  [label="CFG: "];
"1000145" -> "1000148"  [label="DDG: ustr_skeleton.toUTF8String(skeleton)"];
"1000145" -> "1000148"  [label="DDG: LookupMatchInTopDomains(ustr_skeleton.toUTF8String(skeleton))"];
"1000145" -> "1000144"  [label="DDG: LookupMatchInTopDomains(ustr_skeleton.toUTF8String(skeleton))"];
"1000146" -> "1000145"  [label="DDG: skeleton"];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1000106"  [label="CFG: "];
"1000105" -> "1000104"  [label="AST: "];
"1000106" -> "1000104"  [label="AST: "];
"1000118" -> "1000104"  [label="CFG: "];
"1000104" -> "1000148"  [label="DDG: hostname_length"];
"1000104" -> "1000148"  [label="DDG: hostname.length() - (hostname.back() == '.' ? 1 : 0)"];
"1000106" -> "1000104"  [label="DDG: hostname.length()"];
"1000106" -> "1000104"  [label="DDG: hostname.back() == '.' ? 1 : 0"];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000100"  [label="CFG: "];
"1000107" -> "1000105"  [label="CFG: "];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000108" -> "1000106"  [label="AST: "];
"1000104" -> "1000106"  [label="CFG: "];
"1000106" -> "1000148"  [label="DDG: hostname.back() == '.' ? 1 : 0"];
"1000106" -> "1000148"  [label="DDG: hostname.length()"];
"1000106" -> "1000104"  [label="DDG: hostname.length()"];
"1000106" -> "1000104"  [label="DDG: hostname.back() == '.' ? 1 : 0"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000105"  [label="CFG: "];
"1000110" -> "1000107"  [label="CFG: "];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000112"  [label="CFG: "];
"1000108" -> "1000113"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000112" -> "1000108"  [label="AST: "];
"1000113" -> "1000108"  [label="AST: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000108" -> "1000148"  [label="DDG: hostname.back() == '.'"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000112" -> "1000109"  [label="CFG: "];
"1000113" -> "1000109"  [label="CFG: "];
"1000109" -> "1000148"  [label="DDG: hostname.back()"];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000107"  [label="CFG: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000110"  [label="CFG: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000112" -> "1000108"  [label="AST: "];
"1000112" -> "1000109"  [label="CFG: "];
"1000108" -> "1000112"  [label="CFG: "];
"1000113" -> "1000108"  [label="AST: "];
"1000113" -> "1000109"  [label="CFG: "];
"1000108" -> "1000113"  [label="CFG: "];
"1000115" -> "1000102"  [label="AST: "];
"1000116" -> "1000115"  [label="AST: "];
"1000122" -> "1000115"  [label="AST: "];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000104"  [label="CFG: "];
"1000119" -> "1000118"  [label="CFG: "];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000118"  [label="CFG: "];
"1000120" -> "1000119"  [label="CFG: "];
"1000120" -> "1000117"  [label="AST: "];
"1000120" -> "1000119"  [label="CFG: "];
"1000117" -> "1000120"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000121"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000121" -> "1000116"  [label="AST: "];
"1000123" -> "1000116"  [label="CFG: "];
"1000125" -> "1000116"  [label="CFG: "];
"1000116" -> "1000148"  [label="DDG: lgc_letters_n_ascii_.span(ustr_host, 0, USET_SPAN_CONTAINED)"];
"1000116" -> "1000148"  [label="DDG: ustr_host.length()"];
"1000116" -> "1000148"  [label="DDG: lgc_letters_n_ascii_.span(ustr_host, 0, USET_SPAN_CONTAINED) ==\n      ustr_host.length()"];
"1000117" -> "1000116"  [label="DDG: ustr_host"];
"1000117" -> "1000116"  [label="DDG: 0"];
"1000117" -> "1000116"  [label="DDG: USET_SPAN_CONTAINED"];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1000120"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000120" -> "1000117"  [label="AST: "];
"1000121" -> "1000117"  [label="CFG: "];
"1000117" -> "1000148"  [label="DDG: USET_SPAN_CONTAINED"];
"1000117" -> "1000116"  [label="DDG: ustr_host"];
"1000117" -> "1000116"  [label="DDG: 0"];
"1000117" -> "1000116"  [label="DDG: USET_SPAN_CONTAINED"];
"1000117" -> "1000122"  [label="DDG: ustr_host"];
"1000117" -> "1000124"  [label="DDG: ustr_host"];
"1000121" -> "1000116"  [label="AST: "];
"1000121" -> "1000117"  [label="CFG: "];
"1000116" -> "1000121"  [label="CFG: "];
"1000122" -> "1000115"  [label="AST: "];
"1000122" -> "1000123"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000125" -> "1000122"  [label="CFG: "];
"1000122" -> "1000148"  [label="DDG: diacritic_remover_.get()->transliterate(ustr_host)"];
"1000117" -> "1000122"  [label="DDG: ustr_host"];
"1000122" -> "1000124"  [label="DDG: ustr_host"];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000116"  [label="CFG: "];
"1000122" -> "1000123"  [label="CFG: "];
"1000124" -> "1000102"  [label="AST: "];
"1000124" -> "1000125"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000128" -> "1000124"  [label="CFG: "];
"1000124" -> "1000148"  [label="DDG: extra_confusable_mapper_.get()->transliterate(ustr_host)"];
"1000122" -> "1000124"  [label="DDG: ustr_host"];
"1000117" -> "1000124"  [label="DDG: ustr_host"];
"1000124" -> "1000131"  [label="DDG: ustr_host"];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000122"  [label="CFG: "];
"1000125" -> "1000116"  [label="CFG: "];
"1000124" -> "1000125"  [label="CFG: "];
"1000127" -> "1000102"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000132" -> "1000127"  [label="CFG: "];
"1000127" -> "1000148"  [label="DDG: U_ZERO_ERROR"];
"1000127" -> "1000139"  [label="DDG: status"];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000124"  [label="CFG: "];
"1000129" -> "1000128"  [label="CFG: "];
"1000129" -> "1000127"  [label="AST: "];
"1000129" -> "1000128"  [label="CFG: "];
"1000127" -> "1000129"  [label="CFG: "];
}
