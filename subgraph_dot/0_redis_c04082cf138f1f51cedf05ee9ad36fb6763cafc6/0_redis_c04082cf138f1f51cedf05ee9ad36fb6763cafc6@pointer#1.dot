digraph "0_redis_c04082cf138f1f51cedf05ee9ad36fb6763cafc6@pointer" {
"1000320" [label="(Call,streamParseIDOrReply(c,c->argv[4],&id,0))"];
"1000158" [label="(Call,checkType(c,o,OBJ_STREAM))"];
"1000143" [label="(Call,lookupKeyWriteOrReply(c,c->argv[2],shared.nokeyerr))"];
"1000106" [label="(MethodParameterIn,client *c)"];
"1000155" [label="(Call,o == NULL)"];
"1000141" [label="(Call,*o = lookupKeyWriteOrReply(c,c->argv[2],shared.nokeyerr))"];
"1000319" [label="(Call,streamParseIDOrReply(c,c->argv[4],&id,0) != C_OK)"];
"1000338" [label="(Call,addReply(c,shared.ok))"];
"1000154" [label="(Call,o == NULL || checkType(c,o,OBJ_STREAM))"];
"1000282" [label="(Call,addReplySds(c,\n                sdsnew(\"-BUSYGROUP Consumer Group name already exists\r\n\")))"];
"1000142" [label="(Identifier,o)"];
"1000371" [label="(Call,addReply(c,shared.cone))"];
"1000245" [label="(Call,streamParseIDOrReply(c,c->argv[4],&id,0))"];
"1000321" [label="(Identifier,c)"];
"1000340" [label="(Call,shared.ok)"];
"1000318" [label="(ControlStructure,if (streamParseIDOrReply(c,c->argv[4],&id,0) != C_OK))"];
"1000196" [label="(Call,addReplyErrorFormat(c, \"-NOGROUP No such consumer group '%s' \"\n                                   \"for key name '%s'\",\n                                   (char*)grpname, (char*)c->argv[2]->ptr))"];
"1000330" [label="(Identifier,C_OK)"];
"1000155" [label="(Call,o == NULL)"];
"1000320" [label="(Call,streamParseIDOrReply(c,c->argv[4],&id,0))"];
"1000179" [label="(Call,(cg = streamLookupCG(s,grpname)) == NULL)"];
"1000327" [label="(Call,&id)"];
"1000322" [label="(Call,c->argv[4])"];
"1000432" [label="(MethodReturn,void)"];
"1000271" [label="(Call,addReply(c,shared.ok))"];
"1000422" [label="(Call,addReplyHelp(c, help))"];
"1000139" [label="(Block,)"];
"1000298" [label="(Block,)"];
"1000159" [label="(Identifier,c)"];
"1000408" [label="(Call,addReplyLongLong(c,pending))"];
"1000427" [label="(Call,addReply(c,shared.syntaxerr))"];
"1000145" [label="(Call,c->argv[2])"];
"1000378" [label="(Call,addReply(c,shared.czero))"];
"1000161" [label="(Identifier,OBJ_STREAM)"];
"1000144" [label="(Identifier,c)"];
"1000335" [label="(Identifier,cg)"];
"1000143" [label="(Call,lookupKeyWriteOrReply(c,c->argv[2],shared.nokeyerr))"];
"1000150" [label="(Call,shared.nokeyerr)"];
"1000160" [label="(Identifier,o)"];
"1000329" [label="(Literal,0)"];
"1000319" [label="(Call,streamParseIDOrReply(c,c->argv[4],&id,0) != C_OK)"];
"1000141" [label="(Call,*o = lookupKeyWriteOrReply(c,c->argv[2],shared.nokeyerr))"];
"1000332" [label="(Return,return;)"];
"1000156" [label="(Identifier,o)"];
"1000106" [label="(MethodParameterIn,client *c)"];
"1000338" [label="(Call,addReply(c,shared.ok))"];
"1000158" [label="(Call,checkType(c,o,OBJ_STREAM))"];
"1000157" [label="(Identifier,NULL)"];
"1000339" [label="(Identifier,c)"];
"1000320" -> "1000319"  [label="AST: "];
"1000320" -> "1000329"  [label="CFG: "];
"1000321" -> "1000320"  [label="AST: "];
"1000322" -> "1000320"  [label="AST: "];
"1000327" -> "1000320"  [label="AST: "];
"1000329" -> "1000320"  [label="AST: "];
"1000330" -> "1000320"  [label="CFG: "];
"1000320" -> "1000432"  [label="DDG: c->argv[4]"];
"1000320" -> "1000432"  [label="DDG: c"];
"1000320" -> "1000432"  [label="DDG: &id"];
"1000320" -> "1000319"  [label="DDG: c"];
"1000320" -> "1000319"  [label="DDG: c->argv[4]"];
"1000320" -> "1000319"  [label="DDG: &id"];
"1000320" -> "1000319"  [label="DDG: 0"];
"1000158" -> "1000320"  [label="DDG: c"];
"1000143" -> "1000320"  [label="DDG: c"];
"1000106" -> "1000320"  [label="DDG: c"];
"1000320" -> "1000338"  [label="DDG: c"];
"1000158" -> "1000154"  [label="AST: "];
"1000158" -> "1000161"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000161" -> "1000158"  [label="AST: "];
"1000154" -> "1000158"  [label="CFG: "];
"1000158" -> "1000432"  [label="DDG: c"];
"1000158" -> "1000432"  [label="DDG: o"];
"1000158" -> "1000432"  [label="DDG: OBJ_STREAM"];
"1000158" -> "1000154"  [label="DDG: c"];
"1000158" -> "1000154"  [label="DDG: o"];
"1000158" -> "1000154"  [label="DDG: OBJ_STREAM"];
"1000143" -> "1000158"  [label="DDG: c"];
"1000106" -> "1000158"  [label="DDG: c"];
"1000155" -> "1000158"  [label="DDG: o"];
"1000158" -> "1000196"  [label="DDG: c"];
"1000158" -> "1000245"  [label="DDG: c"];
"1000158" -> "1000271"  [label="DDG: c"];
"1000158" -> "1000282"  [label="DDG: c"];
"1000158" -> "1000338"  [label="DDG: c"];
"1000158" -> "1000371"  [label="DDG: c"];
"1000158" -> "1000378"  [label="DDG: c"];
"1000158" -> "1000408"  [label="DDG: c"];
"1000158" -> "1000422"  [label="DDG: c"];
"1000158" -> "1000427"  [label="DDG: c"];
"1000143" -> "1000141"  [label="AST: "];
"1000143" -> "1000150"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000145" -> "1000143"  [label="AST: "];
"1000150" -> "1000143"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000143" -> "1000432"  [label="DDG: c"];
"1000143" -> "1000432"  [label="DDG: c->argv[2]"];
"1000143" -> "1000432"  [label="DDG: shared.nokeyerr"];
"1000143" -> "1000141"  [label="DDG: c"];
"1000143" -> "1000141"  [label="DDG: c->argv[2]"];
"1000143" -> "1000141"  [label="DDG: shared.nokeyerr"];
"1000106" -> "1000143"  [label="DDG: c"];
"1000143" -> "1000196"  [label="DDG: c"];
"1000143" -> "1000245"  [label="DDG: c"];
"1000143" -> "1000271"  [label="DDG: c"];
"1000143" -> "1000282"  [label="DDG: c"];
"1000143" -> "1000338"  [label="DDG: c"];
"1000143" -> "1000371"  [label="DDG: c"];
"1000143" -> "1000378"  [label="DDG: c"];
"1000143" -> "1000408"  [label="DDG: c"];
"1000143" -> "1000422"  [label="DDG: c"];
"1000143" -> "1000427"  [label="DDG: c"];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000432"  [label="DDG: c"];
"1000106" -> "1000196"  [label="DDG: c"];
"1000106" -> "1000245"  [label="DDG: c"];
"1000106" -> "1000271"  [label="DDG: c"];
"1000106" -> "1000282"  [label="DDG: c"];
"1000106" -> "1000338"  [label="DDG: c"];
"1000106" -> "1000371"  [label="DDG: c"];
"1000106" -> "1000378"  [label="DDG: c"];
"1000106" -> "1000408"  [label="DDG: c"];
"1000106" -> "1000422"  [label="DDG: c"];
"1000106" -> "1000427"  [label="DDG: c"];
"1000155" -> "1000154"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000157" -> "1000155"  [label="AST: "];
"1000159" -> "1000155"  [label="CFG: "];
"1000154" -> "1000155"  [label="CFG: "];
"1000155" -> "1000432"  [label="DDG: NULL"];
"1000155" -> "1000432"  [label="DDG: o"];
"1000155" -> "1000154"  [label="DDG: o"];
"1000155" -> "1000154"  [label="DDG: NULL"];
"1000141" -> "1000155"  [label="DDG: o"];
"1000155" -> "1000179"  [label="DDG: NULL"];
"1000141" -> "1000139"  [label="AST: "];
"1000142" -> "1000141"  [label="AST: "];
"1000156" -> "1000141"  [label="CFG: "];
"1000141" -> "1000432"  [label="DDG: lookupKeyWriteOrReply(c,c->argv[2],shared.nokeyerr)"];
"1000319" -> "1000318"  [label="AST: "];
"1000319" -> "1000330"  [label="CFG: "];
"1000330" -> "1000319"  [label="AST: "];
"1000332" -> "1000319"  [label="CFG: "];
"1000335" -> "1000319"  [label="CFG: "];
"1000319" -> "1000432"  [label="DDG: streamParseIDOrReply(c,c->argv[4],&id,0) != C_OK"];
"1000319" -> "1000432"  [label="DDG: C_OK"];
"1000319" -> "1000432"  [label="DDG: streamParseIDOrReply(c,c->argv[4],&id,0)"];
"1000338" -> "1000298"  [label="AST: "];
"1000338" -> "1000340"  [label="CFG: "];
"1000339" -> "1000338"  [label="AST: "];
"1000340" -> "1000338"  [label="AST: "];
"1000432" -> "1000338"  [label="CFG: "];
"1000338" -> "1000432"  [label="DDG: c"];
"1000338" -> "1000432"  [label="DDG: addReply(c,shared.ok)"];
"1000338" -> "1000432"  [label="DDG: shared.ok"];
}
