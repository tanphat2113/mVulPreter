digraph "0_miniupnp_b238cade9a173c6f751a34acf8ccff838a62aa47@API" {
"1000261" [label="(Call,sizeof(MINISSDPD_VERSION) - 1)"];
"1000260" [label="(Call,CODELENGTH((sizeof(MINISSDPD_VERSION) - 1), rp))"];
"1000266" [label="(Call,memcpy(rp, MINISSDPD_VERSION, sizeof(MINISSDPD_VERSION) - 1))"];
"1000273" [label="(Call,rp += (sizeof(MINISSDPD_VERSION) - 1))"];
"1000284" [label="(Call,rp - rbuf)"];
"1000281" [label="(Call,write_or_buffer(req, rbuf, rp - rbuf))"];
"1000280" [label="(Call,write_or_buffer(req, rbuf, rp - rbuf) < 0)"];
"1000268" [label="(Identifier,MINISSDPD_VERSION)"];
"1000274" [label="(Identifier,rp)"];
"1000269" [label="(Call,sizeof(MINISSDPD_VERSION) - 1)"];
"1000273" [label="(Call,rp += (sizeof(MINISSDPD_VERSION) - 1))"];
"1000261" [label="(Call,sizeof(MINISSDPD_VERSION) - 1)"];
"1000115" [label="(MethodParameterIn,struct reqelem * req)"];
"1000265" [label="(Identifier,rp)"];
"1000257" [label="(Call,rp = rbuf)"];
"1000279" [label="(ControlStructure,if(write_or_buffer(req, rbuf, rp - rbuf) < 0))"];
"1000280" [label="(Call,write_or_buffer(req, rbuf, rp - rbuf) < 0)"];
"1000266" [label="(Call,memcpy(rp, MINISSDPD_VERSION, sizeof(MINISSDPD_VERSION) - 1))"];
"1000286" [label="(Identifier,rbuf)"];
"1000296" [label="(ControlStructure,break;)"];
"1000275" [label="(Call,sizeof(MINISSDPD_VERSION) - 1)"];
"1000281" [label="(Call,write_or_buffer(req, rbuf, rp - rbuf))"];
"1000283" [label="(Identifier,rbuf)"];
"1000264" [label="(Literal,1)"];
"1000290" [label="(Identifier,LOG_ERR)"];
"1000262" [label="(Call,sizeof(MINISSDPD_VERSION))"];
"1000282" [label="(Identifier,req)"];
"1000260" [label="(Call,CODELENGTH((sizeof(MINISSDPD_VERSION) - 1), rp))"];
"1001136" [label="(MethodReturn,void)"];
"1000284" [label="(Call,rp - rbuf)"];
"1000287" [label="(Literal,0)"];
"1000285" [label="(Identifier,rp)"];
"1000267" [label="(Identifier,rp)"];
"1000255" [label="(Block,)"];
"1000261" -> "1000260"  [label="AST: "];
"1000261" -> "1000264"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000264" -> "1000261"  [label="AST: "];
"1000265" -> "1000261"  [label="CFG: "];
"1000261" -> "1000260"  [label="DDG: 1"];
"1000260" -> "1000255"  [label="AST: "];
"1000260" -> "1000265"  [label="CFG: "];
"1000265" -> "1000260"  [label="AST: "];
"1000267" -> "1000260"  [label="CFG: "];
"1000260" -> "1001136"  [label="DDG: CODELENGTH((sizeof(MINISSDPD_VERSION) - 1), rp)"];
"1000257" -> "1000260"  [label="DDG: rp"];
"1000260" -> "1000266"  [label="DDG: rp"];
"1000266" -> "1000255"  [label="AST: "];
"1000266" -> "1000269"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="AST: "];
"1000269" -> "1000266"  [label="AST: "];
"1000274" -> "1000266"  [label="CFG: "];
"1000266" -> "1001136"  [label="DDG: memcpy(rp, MINISSDPD_VERSION, sizeof(MINISSDPD_VERSION) - 1)"];
"1000269" -> "1000266"  [label="DDG: 1"];
"1000266" -> "1000273"  [label="DDG: rp"];
"1000273" -> "1000255"  [label="AST: "];
"1000273" -> "1000275"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000275" -> "1000273"  [label="AST: "];
"1000282" -> "1000273"  [label="CFG: "];
"1000273" -> "1001136"  [label="DDG: sizeof(MINISSDPD_VERSION) - 1"];
"1000275" -> "1000273"  [label="DDG: 1"];
"1000273" -> "1000284"  [label="DDG: rp"];
"1000284" -> "1000281"  [label="AST: "];
"1000284" -> "1000286"  [label="CFG: "];
"1000285" -> "1000284"  [label="AST: "];
"1000286" -> "1000284"  [label="AST: "];
"1000281" -> "1000284"  [label="CFG: "];
"1000284" -> "1001136"  [label="DDG: rp"];
"1000284" -> "1000281"  [label="DDG: rbuf"];
"1000284" -> "1000281"  [label="DDG: rp"];
"1000281" -> "1000280"  [label="AST: "];
"1000282" -> "1000281"  [label="AST: "];
"1000283" -> "1000281"  [label="AST: "];
"1000287" -> "1000281"  [label="CFG: "];
"1000281" -> "1001136"  [label="DDG: req"];
"1000281" -> "1001136"  [label="DDG: rp - rbuf"];
"1000281" -> "1001136"  [label="DDG: rbuf"];
"1000281" -> "1000280"  [label="DDG: req"];
"1000281" -> "1000280"  [label="DDG: rbuf"];
"1000281" -> "1000280"  [label="DDG: rp - rbuf"];
"1000115" -> "1000281"  [label="DDG: req"];
"1000280" -> "1000279"  [label="AST: "];
"1000280" -> "1000287"  [label="CFG: "];
"1000287" -> "1000280"  [label="AST: "];
"1000290" -> "1000280"  [label="CFG: "];
"1000296" -> "1000280"  [label="CFG: "];
"1000280" -> "1001136"  [label="DDG: write_or_buffer(req, rbuf, rp - rbuf) < 0"];
"1000280" -> "1001136"  [label="DDG: write_or_buffer(req, rbuf, rp - rbuf)"];
}
