digraph "0_libxfont_4d024ac10f964f6bd372ae0dd14f02772a6e5f63@API" {
"1000300" [label="(Call,nchars * sizeof(int))"];
"1000274" [label="(Call,nchars * sizeof(Atom))"];
"1000245" [label="(Call,calloc(nchars, sizeof(CharInfoRec)))"];
"1000228" [label="(Call,nchars > INT32_MAX / sizeof(CharInfoRec))"];
"1000219" [label="(Call,nchars < 1)"];
"1000230" [label="(Call,INT32_MAX / sizeof(CharInfoRec))"];
"1000299" [label="(Call,malloc(nchars * sizeof(int)))"];
"1000295" [label="(Call,bitmapExtra->sWidths = malloc(nchars * sizeof(int)))"];
"1000305" [label="(Call,!bitmapExtra->sWidths)"];
"1000310" [label="(Call,bdfError(\"Couldn't allocate sWidth (%d *%d)\n\",\n\t\t     nchars, (int) sizeof(int)))"];
"1000361" [label="(Call,ndx < nchars)"];
"1000360" [label="(Call,(ndx < nchars) && (line) && (bdfIsPrefix(line, \"STARTCHAR\")))"];
"1000932" [label="(Call,ndx++)"];
"1000945" [label="(Call,ndx + nignored != nchars)"];
"1000953" [label="(Call,nchars - (ndx + nignored))"];
"1000951" [label="(Call,bdfError(\"%d too few characters\n\", nchars - (ndx + nignored)))"];
"1000946" [label="(Call,ndx + nignored)"];
"1000955" [label="(Call,ndx + nignored)"];
"1000959" [label="(Call,nchars = ndx)"];
"1000962" [label="(Call,bitmapFont->num_chars = nchars)"];
"1000357" [label="(Call,ndx = 0)"];
"1000302" [label="(Call,sizeof(int))"];
"1000320" [label="(Identifier,line)"];
"1000932" [label="(Call,ndx++)"];
"1000307" [label="(Identifier,bitmapExtra)"];
"1000284" [label="(Call,bdfError(\"Couldn't allocate glyphNames (%d*%d)\n\",\n\t\t     nchars, (int) sizeof(Atom)))"];
"1000363" [label="(Identifier,nchars)"];
"1000957" [label="(Identifier,nignored)"];
"1000274" [label="(Call,nchars * sizeof(Atom))"];
"1000353" [label="(Call,nignored = 0)"];
"1000300" [label="(Call,nchars * sizeof(int))"];
"1000219" [label="(Call,nchars < 1)"];
"1000948" [label="(Identifier,nignored)"];
"1000933" [label="(Identifier,ndx)"];
"1000950" [label="(Block,)"];
"1000305" [label="(Call,!bitmapExtra->sWidths)"];
"1000304" [label="(ControlStructure,if (!bitmapExtra->sWidths))"];
"1000946" [label="(Call,ndx + nignored)"];
"1000365" [label="(Identifier,line)"];
"1000953" [label="(Call,nchars - (ndx + nignored))"];
"1000299" [label="(Call,malloc(nchars * sizeof(int)))"];
"1000230" [label="(Call,INT32_MAX / sizeof(CharInfoRec))"];
"1000952" [label="(Literal,\"%d too few characters\n\")"];
"1000275" [label="(Identifier,nchars)"];
"1000273" [label="(Call,malloc(nchars * sizeof(Atom)))"];
"1001224" [label="(MethodReturn,RET)"];
"1000476" [label="(Call,nignored++)"];
"1000276" [label="(Call,sizeof(Atom))"];
"1000227" [label="(ControlStructure,if (nchars > INT32_MAX / sizeof(CharInfoRec)))"];
"1000313" [label="(Call,(int) sizeof(int))"];
"1000228" [label="(Call,nchars > INT32_MAX / sizeof(CharInfoRec))"];
"1000306" [label="(Call,bitmapExtra->sWidths)"];
"1000221" [label="(Literal,1)"];
"1000224" [label="(Literal,\"invalid number of CHARS in BDF file\n\")"];
"1000960" [label="(Identifier,nchars)"];
"1000949" [label="(Identifier,nchars)"];
"1000123" [label="(Block,)"];
"1000311" [label="(Literal,\"Couldn't allocate sWidth (%d *%d)\n\")"];
"1000310" [label="(Call,bdfError(\"Couldn't allocate sWidth (%d *%d)\n\",\n\t\t     nchars, (int) sizeof(int)))"];
"1000218" [label="(ControlStructure,if (nchars < 1))"];
"1000231" [label="(Identifier,INT32_MAX)"];
"1000296" [label="(Call,bitmapExtra->sWidths)"];
"1000301" [label="(Identifier,nchars)"];
"1000951" [label="(Call,bdfError(\"%d too few characters\n\", nchars - (ndx + nignored)))"];
"1000944" [label="(ControlStructure,if (ndx + nignored != nchars))"];
"1000969" [label="(Identifier,line)"];
"1000247" [label="(Call,sizeof(CharInfoRec))"];
"1000360" [label="(Call,(ndx < nchars) && (line) && (bdfIsPrefix(line, \"STARTCHAR\")))"];
"1000362" [label="(Identifier,ndx)"];
"1000220" [label="(Identifier,nchars)"];
"1000945" [label="(Call,ndx + nignored != nchars)"];
"1000361" [label="(Call,ndx < nchars)"];
"1000246" [label="(Identifier,nchars)"];
"1000245" [label="(Call,calloc(nchars, sizeof(CharInfoRec)))"];
"1000364" [label="(Call,(line) && (bdfIsPrefix(line, \"STARTCHAR\")))"];
"1000939" [label="(Identifier,line)"];
"1000961" [label="(Identifier,ndx)"];
"1000244" [label="(Identifier,ci)"];
"1000294" [label="(Block,)"];
"1000232" [label="(Call,sizeof(CharInfoRec))"];
"1000954" [label="(Identifier,nchars)"];
"1000958" [label="(ControlStructure,goto BAILOUT;)"];
"1000243" [label="(Call,ci = calloc(nchars, sizeof(CharInfoRec)))"];
"1000253" [label="(Call,bdfError(\"Couldn't allocate pCI (%d*%d)\n\", nchars,\n\t\t (int) sizeof(CharInfoRec)))"];
"1000947" [label="(Identifier,ndx)"];
"1000235" [label="(Call,bdfError(\"Couldn't allocate pCI (%d*%d)\n\", nchars,\n\t\t (int) sizeof(CharInfoRec)))"];
"1000966" [label="(Identifier,nchars)"];
"1000295" [label="(Call,bitmapExtra->sWidths = malloc(nchars * sizeof(int)))"];
"1000236" [label="(Literal,\"Couldn't allocate pCI (%d*%d)\n\")"];
"1000318" [label="(Identifier,FALSE)"];
"1000876" [label="(Block,)"];
"1000962" [label="(Call,bitmapFont->num_chars = nchars)"];
"1000312" [label="(Identifier,nchars)"];
"1000955" [label="(Call,ndx + nignored)"];
"1000956" [label="(Identifier,ndx)"];
"1000229" [label="(Identifier,nchars)"];
"1000963" [label="(Call,bitmapFont->num_chars)"];
"1000309" [label="(Block,)"];
"1000356" [label="(ControlStructure,for (ndx = 0; (ndx < nchars) && (line) && (bdfIsPrefix(line, \"STARTCHAR\"));))"];
"1000964" [label="(Identifier,bitmapFont)"];
"1000959" [label="(Call,nchars = ndx)"];
"1000300" -> "1000299"  [label="AST: "];
"1000300" -> "1000302"  [label="CFG: "];
"1000301" -> "1000300"  [label="AST: "];
"1000302" -> "1000300"  [label="AST: "];
"1000299" -> "1000300"  [label="CFG: "];
"1000300" -> "1000299"  [label="DDG: "];
"1000274" -> "1000300"  [label="DDG: "];
"1000245" -> "1000300"  [label="DDG: "];
"1000300" -> "1000310"  [label="DDG: "];
"1000300" -> "1000361"  [label="DDG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000274" -> "1000276"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000276" -> "1000274"  [label="AST: "];
"1000273" -> "1000274"  [label="CFG: "];
"1000274" -> "1000273"  [label="DDG: "];
"1000245" -> "1000274"  [label="DDG: "];
"1000274" -> "1000284"  [label="DDG: "];
"1000274" -> "1000361"  [label="DDG: "];
"1000245" -> "1000243"  [label="AST: "];
"1000245" -> "1000247"  [label="CFG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000247" -> "1000245"  [label="AST: "];
"1000243" -> "1000245"  [label="CFG: "];
"1000245" -> "1000243"  [label="DDG: "];
"1000228" -> "1000245"  [label="DDG: "];
"1000245" -> "1000253"  [label="DDG: "];
"1000245" -> "1000361"  [label="DDG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000228" -> "1000230"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000230" -> "1000228"  [label="AST: "];
"1000236" -> "1000228"  [label="CFG: "];
"1000244" -> "1000228"  [label="CFG: "];
"1000228" -> "1001224"  [label="DDG: "];
"1000228" -> "1001224"  [label="DDG: "];
"1000219" -> "1000228"  [label="DDG: "];
"1000230" -> "1000228"  [label="DDG: "];
"1000228" -> "1000235"  [label="DDG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000219" -> "1000221"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000221" -> "1000219"  [label="AST: "];
"1000224" -> "1000219"  [label="CFG: "];
"1000229" -> "1000219"  [label="CFG: "];
"1000219" -> "1001224"  [label="DDG: "];
"1000219" -> "1001224"  [label="DDG: "];
"1000230" -> "1000232"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000232" -> "1000230"  [label="AST: "];
"1000230" -> "1001224"  [label="DDG: "];
"1000299" -> "1000295"  [label="AST: "];
"1000295" -> "1000299"  [label="CFG: "];
"1000299" -> "1001224"  [label="DDG: "];
"1000299" -> "1000295"  [label="DDG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000296" -> "1000295"  [label="AST: "];
"1000307" -> "1000295"  [label="CFG: "];
"1000295" -> "1001224"  [label="DDG: "];
"1000295" -> "1000305"  [label="DDG: "];
"1000305" -> "1000304"  [label="AST: "];
"1000305" -> "1000306"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000311" -> "1000305"  [label="CFG: "];
"1000320" -> "1000305"  [label="CFG: "];
"1000305" -> "1001224"  [label="DDG: "];
"1000305" -> "1001224"  [label="DDG: "];
"1000310" -> "1000309"  [label="AST: "];
"1000310" -> "1000313"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000312" -> "1000310"  [label="AST: "];
"1000313" -> "1000310"  [label="AST: "];
"1000318" -> "1000310"  [label="CFG: "];
"1000310" -> "1001224"  [label="DDG: "];
"1000310" -> "1001224"  [label="DDG: "];
"1000310" -> "1001224"  [label="DDG: "];
"1000361" -> "1000360"  [label="AST: "];
"1000361" -> "1000363"  [label="CFG: "];
"1000362" -> "1000361"  [label="AST: "];
"1000363" -> "1000361"  [label="AST: "];
"1000365" -> "1000361"  [label="CFG: "];
"1000360" -> "1000361"  [label="CFG: "];
"1000361" -> "1001224"  [label="DDG: "];
"1000361" -> "1001224"  [label="DDG: "];
"1000361" -> "1000360"  [label="DDG: "];
"1000361" -> "1000360"  [label="DDG: "];
"1000357" -> "1000361"  [label="DDG: "];
"1000932" -> "1000361"  [label="DDG: "];
"1000361" -> "1000932"  [label="DDG: "];
"1000361" -> "1000945"  [label="DDG: "];
"1000361" -> "1000945"  [label="DDG: "];
"1000361" -> "1000946"  [label="DDG: "];
"1000361" -> "1000953"  [label="DDG: "];
"1000361" -> "1000955"  [label="DDG: "];
"1000361" -> "1000959"  [label="DDG: "];
"1000360" -> "1000356"  [label="AST: "];
"1000360" -> "1000364"  [label="CFG: "];
"1000364" -> "1000360"  [label="AST: "];
"1000386" -> "1000360"  [label="CFG: "];
"1000947" -> "1000360"  [label="CFG: "];
"1000360" -> "1001224"  [label="DDG: "];
"1000360" -> "1001224"  [label="DDG: "];
"1000360" -> "1001224"  [label="DDG: "];
"1000364" -> "1000360"  [label="DDG: "];
"1000364" -> "1000360"  [label="DDG: "];
"1000932" -> "1000876"  [label="AST: "];
"1000932" -> "1000933"  [label="CFG: "];
"1000933" -> "1000932"  [label="AST: "];
"1000939" -> "1000932"  [label="CFG: "];
"1000945" -> "1000944"  [label="AST: "];
"1000945" -> "1000949"  [label="CFG: "];
"1000946" -> "1000945"  [label="AST: "];
"1000949" -> "1000945"  [label="AST: "];
"1000952" -> "1000945"  [label="CFG: "];
"1000960" -> "1000945"  [label="CFG: "];
"1000945" -> "1001224"  [label="DDG: "];
"1000945" -> "1001224"  [label="DDG: "];
"1000476" -> "1000945"  [label="DDG: "];
"1000353" -> "1000945"  [label="DDG: "];
"1000945" -> "1000953"  [label="DDG: "];
"1000953" -> "1000951"  [label="AST: "];
"1000953" -> "1000955"  [label="CFG: "];
"1000954" -> "1000953"  [label="AST: "];
"1000955" -> "1000953"  [label="AST: "];
"1000951" -> "1000953"  [label="CFG: "];
"1000953" -> "1001224"  [label="DDG: "];
"1000953" -> "1001224"  [label="DDG: "];
"1000953" -> "1000951"  [label="DDG: "];
"1000953" -> "1000951"  [label="DDG: "];
"1000476" -> "1000953"  [label="DDG: "];
"1000353" -> "1000953"  [label="DDG: "];
"1000951" -> "1000950"  [label="AST: "];
"1000952" -> "1000951"  [label="AST: "];
"1000958" -> "1000951"  [label="CFG: "];
"1000951" -> "1001224"  [label="DDG: "];
"1000951" -> "1001224"  [label="DDG: "];
"1000946" -> "1000948"  [label="CFG: "];
"1000947" -> "1000946"  [label="AST: "];
"1000948" -> "1000946"  [label="AST: "];
"1000949" -> "1000946"  [label="CFG: "];
"1000946" -> "1001224"  [label="DDG: "];
"1000476" -> "1000946"  [label="DDG: "];
"1000353" -> "1000946"  [label="DDG: "];
"1000955" -> "1000957"  [label="CFG: "];
"1000956" -> "1000955"  [label="AST: "];
"1000957" -> "1000955"  [label="AST: "];
"1000955" -> "1001224"  [label="DDG: "];
"1000955" -> "1001224"  [label="DDG: "];
"1000476" -> "1000955"  [label="DDG: "];
"1000353" -> "1000955"  [label="DDG: "];
"1000959" -> "1000123"  [label="AST: "];
"1000959" -> "1000961"  [label="CFG: "];
"1000960" -> "1000959"  [label="AST: "];
"1000961" -> "1000959"  [label="AST: "];
"1000964" -> "1000959"  [label="CFG: "];
"1000959" -> "1001224"  [label="DDG: "];
"1000959" -> "1000962"  [label="DDG: "];
"1000962" -> "1000123"  [label="AST: "];
"1000962" -> "1000966"  [label="CFG: "];
"1000963" -> "1000962"  [label="AST: "];
"1000966" -> "1000962"  [label="AST: "];
"1000969" -> "1000962"  [label="CFG: "];
"1000962" -> "1001224"  [label="DDG: "];
"1000962" -> "1001224"  [label="DDG: "];
}
