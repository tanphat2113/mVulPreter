digraph "0_rdesktop_4dca546d04321a610c1835010b5dad85163b65e1_9@pointer" {
"1000212" [label="(Call,iconv(icv_utf16_to_local, (char **) &pin, &ibl, &pout, &obl))"];
"1000163" [label="(Call,logger(Protocol, Error, \"rdp_in_unistr(), iconv_open[%s -> %s] fail %p\",\n\t\t\t       WINDOWS_CODEPAGE, g_codepage, icv_utf16_to_local))"];
"1000131" [label="(Call,logger(Protocol, Error, \"rdp_in_unistr(), length of unicode data is out of bounds.\"))"];
"1000152" [label="(Call,iconv_open(g_codepage, WINDOWS_CODEPAGE))"];
"1000156" [label="(Call,icv_utf16_to_local == (iconv_t) - 1)"];
"1000150" [label="(Call,icv_utf16_to_local = iconv_open(g_codepage, WINDOWS_CODEPAGE))"];
"1000158" [label="(Call,(iconv_t) - 1)"];
"1000160" [label="(Call,- 1)"];
"1000147" [label="(Call,!icv_utf16_to_local)"];
"1000214" [label="(Call,(char **) &pin)"];
"1000211" [label="(Call,iconv(icv_utf16_to_local, (char **) &pin, &ibl, &pout, &obl) == (size_t) - 1)"];
"1000224" [label="(Call,(size_t) - 1)"];
"1000133" [label="(Identifier,Error)"];
"1000161" [label="(Literal,1)"];
"1000156" [label="(Call,icv_utf16_to_local == (iconv_t) - 1)"];
"1000220" [label="(Call,&pout)"];
"1000168" [label="(Identifier,g_codepage)"];
"1000150" [label="(Call,icv_utf16_to_local = iconv_open(g_codepage, WINDOWS_CODEPAGE))"];
"1000218" [label="(Call,&ibl)"];
"1000134" [label="(Literal,\"rdp_in_unistr(), length of unicode data is out of bounds.\")"];
"1000210" [label="(ControlStructure,if (iconv(icv_utf16_to_local, (char **) &pin, &ibl, &pout, &obl) == (size_t) - 1))"];
"1000152" [label="(Call,iconv_open(g_codepage, WINDOWS_CODEPAGE))"];
"1000166" [label="(Literal,\"rdp_in_unistr(), iconv_open[%s -> %s] fail %p\")"];
"1000155" [label="(ControlStructure,if (icv_utf16_to_local == (iconv_t) - 1))"];
"1000212" [label="(Call,iconv(icv_utf16_to_local, (char **) &pin, &ibl, &pout, &obl))"];
"1000164" [label="(Identifier,Protocol)"];
"1000174" [label="(Identifier,string)"];
"1000162" [label="(Block,)"];
"1000219" [label="(Identifier,ibl)"];
"1000211" [label="(Call,iconv(icv_utf16_to_local, (char **) &pin, &ibl, &pout, &obl) == (size_t) - 1)"];
"1000240" [label="(Call,logger(Protocol, Warning, \"rdp_in_unistr(), iconv fail, errno %d\", errno))"];
"1000234" [label="(Call,logger(Protocol, Warning,\n\t\t\t       \"rdp_in_unistr(), server sent an unexpectedly long string, truncating\"))"];
"1000214" [label="(Call,(char **) &pin)"];
"1000157" [label="(Identifier,icv_utf16_to_local)"];
"1000130" [label="(Block,)"];
"1000259" [label="(Identifier,s)"];
"1000213" [label="(Identifier,icv_utf16_to_local)"];
"1000170" [label="(Call,abort())"];
"1000135" [label="(Call,abort())"];
"1000146" [label="(ControlStructure,if (!icv_utf16_to_local))"];
"1000231" [label="(Identifier,errno)"];
"1000158" [label="(Call,(iconv_t) - 1)"];
"1000148" [label="(Identifier,icv_utf16_to_local)"];
"1000163" [label="(Call,logger(Protocol, Error, \"rdp_in_unistr(), iconv_open[%s -> %s] fail %p\",\n\t\t\t       WINDOWS_CODEPAGE, g_codepage, icv_utf16_to_local))"];
"1000153" [label="(Identifier,g_codepage)"];
"1000149" [label="(Block,)"];
"1000132" [label="(Identifier,Protocol)"];
"1000154" [label="(Identifier,WINDOWS_CODEPAGE)"];
"1000216" [label="(Call,&pin)"];
"1000147" [label="(Call,!icv_utf16_to_local)"];
"1000160" [label="(Call,- 1)"];
"1000222" [label="(Call,&obl)"];
"1000167" [label="(Identifier,WINDOWS_CODEPAGE)"];
"1000131" [label="(Call,logger(Protocol, Error, \"rdp_in_unistr(), length of unicode data is out of bounds.\"))"];
"1000151" [label="(Identifier,icv_utf16_to_local)"];
"1000276" [label="(MethodReturn,RET)"];
"1000165" [label="(Identifier,Error)"];
"1000169" [label="(Identifier,icv_utf16_to_local)"];
"1000212" -> "1000211"  [label="AST: "];
"1000212" -> "1000222"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000214" -> "1000212"  [label="AST: "];
"1000218" -> "1000212"  [label="AST: "];
"1000220" -> "1000212"  [label="AST: "];
"1000222" -> "1000212"  [label="AST: "];
"1000225" -> "1000212"  [label="CFG: "];
"1000212" -> "1000276"  [label="DDG: "];
"1000212" -> "1000276"  [label="DDG: "];
"1000212" -> "1000276"  [label="DDG: "];
"1000212" -> "1000276"  [label="DDG: "];
"1000212" -> "1000276"  [label="DDG: "];
"1000212" -> "1000211"  [label="DDG: "];
"1000212" -> "1000211"  [label="DDG: "];
"1000212" -> "1000211"  [label="DDG: "];
"1000212" -> "1000211"  [label="DDG: "];
"1000212" -> "1000211"  [label="DDG: "];
"1000163" -> "1000212"  [label="DDG: "];
"1000156" -> "1000212"  [label="DDG: "];
"1000147" -> "1000212"  [label="DDG: "];
"1000214" -> "1000212"  [label="DDG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000169"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000165" -> "1000163"  [label="AST: "];
"1000166" -> "1000163"  [label="AST: "];
"1000167" -> "1000163"  [label="AST: "];
"1000168" -> "1000163"  [label="AST: "];
"1000169" -> "1000163"  [label="AST: "];
"1000170" -> "1000163"  [label="CFG: "];
"1000163" -> "1000276"  [label="DDG: "];
"1000163" -> "1000276"  [label="DDG: "];
"1000163" -> "1000276"  [label="DDG: "];
"1000163" -> "1000276"  [label="DDG: "];
"1000163" -> "1000276"  [label="DDG: "];
"1000131" -> "1000163"  [label="DDG: "];
"1000131" -> "1000163"  [label="DDG: "];
"1000152" -> "1000163"  [label="DDG: "];
"1000152" -> "1000163"  [label="DDG: "];
"1000156" -> "1000163"  [label="DDG: "];
"1000163" -> "1000234"  [label="DDG: "];
"1000163" -> "1000240"  [label="DDG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000134"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="AST: "];
"1000134" -> "1000131"  [label="AST: "];
"1000135" -> "1000131"  [label="CFG: "];
"1000131" -> "1000276"  [label="DDG: "];
"1000131" -> "1000276"  [label="DDG: "];
"1000131" -> "1000276"  [label="DDG: "];
"1000131" -> "1000234"  [label="DDG: "];
"1000131" -> "1000240"  [label="DDG: "];
"1000152" -> "1000150"  [label="AST: "];
"1000152" -> "1000154"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000150" -> "1000152"  [label="CFG: "];
"1000152" -> "1000276"  [label="DDG: "];
"1000152" -> "1000276"  [label="DDG: "];
"1000152" -> "1000150"  [label="DDG: "];
"1000152" -> "1000150"  [label="DDG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000158"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000158" -> "1000156"  [label="AST: "];
"1000164" -> "1000156"  [label="CFG: "];
"1000174" -> "1000156"  [label="CFG: "];
"1000156" -> "1000276"  [label="DDG: "];
"1000156" -> "1000276"  [label="DDG: "];
"1000150" -> "1000156"  [label="DDG: "];
"1000158" -> "1000156"  [label="DDG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000150"  [label="AST: "];
"1000157" -> "1000150"  [label="CFG: "];
"1000150" -> "1000276"  [label="DDG: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="DDG: "];
"1000160" -> "1000161"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000147" -> "1000146"  [label="AST: "];
"1000147" -> "1000148"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000151" -> "1000147"  [label="CFG: "];
"1000174" -> "1000147"  [label="CFG: "];
"1000147" -> "1000276"  [label="DDG: "];
"1000214" -> "1000216"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000216" -> "1000214"  [label="AST: "];
"1000219" -> "1000214"  [label="CFG: "];
"1000214" -> "1000276"  [label="DDG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000211" -> "1000224"  [label="CFG: "];
"1000224" -> "1000211"  [label="AST: "];
"1000231" -> "1000211"  [label="CFG: "];
"1000259" -> "1000211"  [label="CFG: "];
"1000211" -> "1000276"  [label="DDG: "];
"1000211" -> "1000276"  [label="DDG: "];
"1000211" -> "1000276"  [label="DDG: "];
"1000224" -> "1000211"  [label="DDG: "];
}
