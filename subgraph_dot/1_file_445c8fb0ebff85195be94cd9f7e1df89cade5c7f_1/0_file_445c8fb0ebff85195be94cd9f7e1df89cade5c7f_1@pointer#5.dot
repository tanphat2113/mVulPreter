digraph "0_file_445c8fb0ebff85195be94cd9f7e1df89cade5c7f_1@pointer" {
"1000600" [label="(Call,cap_hw1 & cdp->cd_mask)"];
"1000503" [label="(Call,cap_hw1 |= xcap_val)"];
"1000137" [label="(Call,cap_hw1 = 0)"];
"1000521" [label="(Call,(unsigned long long)xcap_val)"];
"1000508" [label="(Call,cap_sf1 |= xcap_val)"];
"1000141" [label="(Call,cap_sf1 = 0)"];
"1000619" [label="(Call,cap_hw1 &= ~cdp->cd_mask)"];
"1000600" [label="(Call,cap_hw1 & cdp->cd_mask)"];
"1000633" [label="(Call,(unsigned long long)cap_hw1)"];
"1000630" [label="(Call,file_printf(ms,\n\t\t\t\t    \" unknown hardware capability 0x%\"\n\t\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t\t    (unsigned long long)cap_hw1))"];
"1000629" [label="(Call,file_printf(ms,\n\t\t\t\t    \" unknown hardware capability 0x%\"\n\t\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t\t    (unsigned long long)cap_hw1) == -1)"];
"1000666" [label="(Call,file_printf(ms,\n\t\t\t    (cap_sf1 & SF1_SUNW_FPKNWN)\n\t\t\t    ? \", uses frame pointer\"\n\t\t\t    : \", not known to use frame pointer\"))"];
"1000665" [label="(Call,file_printf(ms,\n\t\t\t    (cap_sf1 & SF1_SUNW_FPKNWN)\n\t\t\t    ? \", uses frame pointer\"\n\t\t\t    : \", not known to use frame pointer\") == -1)"];
"1000686" [label="(Call,file_printf(ms,\n\t\t\t    \", with unknown software capability 0x%\"\n\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t    (unsigned long long)cap_sf1))"];
"1000685" [label="(Call,file_printf(ms,\n\t\t\t    \", with unknown software capability 0x%\"\n\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t    (unsigned long long)cap_sf1) == -1)"];
"1000632" [label="(Literal,\" unknown hardware capability 0x%\"\n\t\t\t\t    INT64_T_FORMAT \"x\")"];
"1000110" [label="(MethodParameterIn,struct magic_set *ms)"];
"1000630" [label="(Call,file_printf(ms,\n\t\t\t\t    \" unknown hardware capability 0x%\"\n\t\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t\t    (unsigned long long)cap_hw1))"];
"1000688" [label="(Literal,\", with unknown software capability 0x%\"\n\t\t\t    INT64_T_FORMAT \"x\")"];
"1000600" [label="(Call,cap_hw1 & cdp->cd_mask)"];
"1000625" [label="(Identifier,cdp)"];
"1000511" [label="(ControlStructure,break;)"];
"1000636" [label="(Call,-1)"];
"1000645" [label="(Call,file_printf(ms,\n\t\t\t    \" hardware capability 0x%\" INT64_T_FORMAT \"x\",\n\t\t\t    (unsigned long long)cap_hw1))"];
"1000699" [label="(MethodReturn,RET)"];
"1000687" [label="(Identifier,ms)"];
"1000633" [label="(Call,(unsigned long long)cap_hw1)"];
"1000521" [label="(Call,(unsigned long long)xcap_val)"];
"1000635" [label="(Identifier,cap_hw1)"];
"1000506" [label="(ControlStructure,break;)"];
"1000660" [label="(Call,cap_sf1 & SF1_SUNW_FPUSED)"];
"1000141" [label="(Call,cap_sf1 = 0)"];
"1000504" [label="(Identifier,cap_hw1)"];
"1000121" [label="(Block,)"];
"1000631" [label="(Identifier,ms)"];
"1000608" [label="(Call,file_printf(ms,\n\t\t\t\t\t    \" %s\", cdp->cd_name))"];
"1000139" [label="(Literal,0)"];
"1000684" [label="(ControlStructure,if (file_printf(ms,\n\t\t\t    \", with unknown software capability 0x%\"\n\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t    (unsigned long long)cap_sf1) == -1))"];
"1000629" [label="(Call,file_printf(ms,\n\t\t\t\t    \" unknown hardware capability 0x%\"\n\t\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t\t    (unsigned long long)cap_hw1) == -1)"];
"1000137" [label="(Call,cap_hw1 = 0)"];
"1000696" [label="(Literal,1)"];
"1000664" [label="(ControlStructure,if (file_printf(ms,\n\t\t\t    (cap_sf1 & SF1_SUNW_FPKNWN)\n\t\t\t    ? \", uses frame pointer\"\n\t\t\t    : \", not known to use frame pointer\") == -1))"];
"1000685" [label="(Call,file_printf(ms,\n\t\t\t    \", with unknown software capability 0x%\"\n\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t    (unsigned long long)cap_sf1) == -1)"];
"1000680" [label="(Identifier,cap_sf1)"];
"1000508" [label="(Call,cap_sf1 |= xcap_val)"];
"1000601" [label="(Identifier,cap_hw1)"];
"1000619" [label="(Call,cap_hw1 &= ~cdp->cd_mask)"];
"1000503" [label="(Call,cap_hw1 |= xcap_val)"];
"1000609" [label="(Identifier,ms)"];
"1000665" [label="(Call,file_printf(ms,\n\t\t\t    (cap_sf1 & SF1_SUNW_FPKNWN)\n\t\t\t    ? \", uses frame pointer\"\n\t\t\t    : \", not known to use frame pointer\") == -1)"];
"1000509" [label="(Identifier,cap_sf1)"];
"1000523" [label="(Identifier,xcap_val)"];
"1000678" [label="(Literal,1)"];
"1000510" [label="(Identifier,xcap_val)"];
"1000628" [label="(ControlStructure,if (file_printf(ms,\n\t\t\t\t    \" unknown hardware capability 0x%\"\n\t\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t\t    (unsigned long long)cap_hw1) == -1))"];
"1000666" [label="(Call,file_printf(ms,\n\t\t\t    (cap_sf1 & SF1_SUNW_FPKNWN)\n\t\t\t    ? \", uses frame pointer\"\n\t\t\t    : \", not known to use frame pointer\"))"];
"1000674" [label="(Call,-1)"];
"1000698" [label="(Literal,0)"];
"1000668" [label="(Call,(cap_sf1 & SF1_SUNW_FPKNWN)\n\t\t\t    ? \", uses frame pointer\"\n\t\t\t    : \", not known to use frame pointer\")"];
"1000657" [label="(Identifier,cap_sf1)"];
"1000602" [label="(Call,cdp->cd_mask)"];
"1000667" [label="(Identifier,ms)"];
"1000648" [label="(Call,(unsigned long long)cap_hw1)"];
"1000686" [label="(Call,file_printf(ms,\n\t\t\t    \", with unknown software capability 0x%\"\n\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t    (unsigned long long)cap_sf1))"];
"1000689" [label="(Call,(unsigned long long)cap_sf1)"];
"1000138" [label="(Identifier,cap_hw1)"];
"1000640" [label="(Literal,1)"];
"1000505" [label="(Identifier,xcap_val)"];
"1000543" [label="(Call,file_printf(ms, \", %sstripped\", stripped ? \"\" : \"not \"))"];
"1000599" [label="(ControlStructure,if (cap_hw1 & cdp->cd_mask))"];
"1000147" [label="(Identifier,size)"];
"1000142" [label="(Identifier,cap_sf1)"];
"1000620" [label="(Identifier,cap_hw1)"];
"1000583" [label="(Call,file_printf(ms, \", uses\"))"];
"1000693" [label="(Literal,1)"];
"1000692" [label="(Call,-1)"];
"1000515" [label="(Call,file_printf(ms,\n\t\t\t\t\t    \", with unknown capability \"\n\t\t\t\t\t    \"0x%\" INT64_T_FORMAT \"x = 0x%\"\n\t\t\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t\t\t    (unsigned long long)xcap_tag,\n\t\t\t\t\t    (unsigned long long)xcap_val))"];
"1000605" [label="(Block,)"];
"1000621" [label="(Call,~cdp->cd_mask)"];
"1000675" [label="(Literal,1)"];
"1000637" [label="(Literal,1)"];
"1000499" [label="(Block,)"];
"1000143" [label="(Literal,0)"];
"1000600" -> "1000599"  [label="AST: "];
"1000600" -> "1000602"  [label="CFG: "];
"1000601" -> "1000600"  [label="AST: "];
"1000602" -> "1000600"  [label="AST: "];
"1000609" -> "1000600"  [label="CFG: "];
"1000625" -> "1000600"  [label="CFG: "];
"1000600" -> "1000699"  [label="DDG: "];
"1000600" -> "1000699"  [label="DDG: "];
"1000600" -> "1000699"  [label="DDG: "];
"1000503" -> "1000600"  [label="DDG: "];
"1000137" -> "1000600"  [label="DDG: "];
"1000619" -> "1000600"  [label="DDG: "];
"1000600" -> "1000619"  [label="DDG: "];
"1000600" -> "1000633"  [label="DDG: "];
"1000503" -> "1000499"  [label="AST: "];
"1000503" -> "1000505"  [label="CFG: "];
"1000504" -> "1000503"  [label="AST: "];
"1000505" -> "1000503"  [label="AST: "];
"1000506" -> "1000503"  [label="CFG: "];
"1000503" -> "1000699"  [label="DDG: "];
"1000503" -> "1000699"  [label="DDG: "];
"1000503" -> "1000699"  [label="DDG: "];
"1000137" -> "1000503"  [label="DDG: "];
"1000521" -> "1000503"  [label="DDG: "];
"1000508" -> "1000503"  [label="DDG: "];
"1000503" -> "1000508"  [label="DDG: "];
"1000503" -> "1000521"  [label="DDG: "];
"1000503" -> "1000633"  [label="DDG: "];
"1000503" -> "1000648"  [label="DDG: "];
"1000137" -> "1000121"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000142" -> "1000137"  [label="CFG: "];
"1000137" -> "1000699"  [label="DDG: "];
"1000137" -> "1000633"  [label="DDG: "];
"1000137" -> "1000648"  [label="DDG: "];
"1000521" -> "1000515"  [label="AST: "];
"1000521" -> "1000523"  [label="CFG: "];
"1000522" -> "1000521"  [label="AST: "];
"1000523" -> "1000521"  [label="AST: "];
"1000515" -> "1000521"  [label="CFG: "];
"1000521" -> "1000699"  [label="DDG: "];
"1000521" -> "1000508"  [label="DDG: "];
"1000521" -> "1000515"  [label="DDG: "];
"1000508" -> "1000521"  [label="DDG: "];
"1000508" -> "1000499"  [label="AST: "];
"1000508" -> "1000510"  [label="CFG: "];
"1000509" -> "1000508"  [label="AST: "];
"1000510" -> "1000508"  [label="AST: "];
"1000511" -> "1000508"  [label="CFG: "];
"1000508" -> "1000699"  [label="DDG: "];
"1000508" -> "1000699"  [label="DDG: "];
"1000508" -> "1000699"  [label="DDG: "];
"1000141" -> "1000508"  [label="DDG: "];
"1000508" -> "1000660"  [label="DDG: "];
"1000141" -> "1000121"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000147" -> "1000141"  [label="CFG: "];
"1000141" -> "1000699"  [label="DDG: "];
"1000141" -> "1000660"  [label="DDG: "];
"1000619" -> "1000605"  [label="AST: "];
"1000619" -> "1000621"  [label="CFG: "];
"1000620" -> "1000619"  [label="AST: "];
"1000621" -> "1000619"  [label="AST: "];
"1000625" -> "1000619"  [label="CFG: "];
"1000619" -> "1000699"  [label="DDG: "];
"1000619" -> "1000699"  [label="DDG: "];
"1000619" -> "1000699"  [label="DDG: "];
"1000619" -> "1000633"  [label="DDG: "];
"1000633" -> "1000630"  [label="AST: "];
"1000633" -> "1000635"  [label="CFG: "];
"1000634" -> "1000633"  [label="AST: "];
"1000635" -> "1000633"  [label="AST: "];
"1000630" -> "1000633"  [label="CFG: "];
"1000633" -> "1000699"  [label="DDG: "];
"1000633" -> "1000630"  [label="DDG: "];
"1000630" -> "1000629"  [label="AST: "];
"1000631" -> "1000630"  [label="AST: "];
"1000632" -> "1000630"  [label="AST: "];
"1000637" -> "1000630"  [label="CFG: "];
"1000630" -> "1000699"  [label="DDG: "];
"1000630" -> "1000699"  [label="DDG: "];
"1000630" -> "1000629"  [label="DDG: "];
"1000630" -> "1000629"  [label="DDG: "];
"1000630" -> "1000629"  [label="DDG: "];
"1000583" -> "1000630"  [label="DDG: "];
"1000608" -> "1000630"  [label="DDG: "];
"1000110" -> "1000630"  [label="DDG: "];
"1000630" -> "1000666"  [label="DDG: "];
"1000630" -> "1000686"  [label="DDG: "];
"1000629" -> "1000628"  [label="AST: "];
"1000629" -> "1000636"  [label="CFG: "];
"1000636" -> "1000629"  [label="AST: "];
"1000640" -> "1000629"  [label="CFG: "];
"1000657" -> "1000629"  [label="CFG: "];
"1000629" -> "1000699"  [label="DDG: "];
"1000629" -> "1000699"  [label="DDG: "];
"1000629" -> "1000699"  [label="DDG: "];
"1000636" -> "1000629"  [label="DDG: "];
"1000666" -> "1000665"  [label="AST: "];
"1000666" -> "1000668"  [label="CFG: "];
"1000667" -> "1000666"  [label="AST: "];
"1000668" -> "1000666"  [label="AST: "];
"1000675" -> "1000666"  [label="CFG: "];
"1000666" -> "1000699"  [label="DDG: "];
"1000666" -> "1000699"  [label="DDG: "];
"1000666" -> "1000665"  [label="DDG: "];
"1000666" -> "1000665"  [label="DDG: "];
"1000645" -> "1000666"  [label="DDG: "];
"1000583" -> "1000666"  [label="DDG: "];
"1000543" -> "1000666"  [label="DDG: "];
"1000608" -> "1000666"  [label="DDG: "];
"1000110" -> "1000666"  [label="DDG: "];
"1000666" -> "1000686"  [label="DDG: "];
"1000665" -> "1000664"  [label="AST: "];
"1000665" -> "1000674"  [label="CFG: "];
"1000674" -> "1000665"  [label="AST: "];
"1000678" -> "1000665"  [label="CFG: "];
"1000680" -> "1000665"  [label="CFG: "];
"1000665" -> "1000699"  [label="DDG: "];
"1000665" -> "1000699"  [label="DDG: "];
"1000665" -> "1000699"  [label="DDG: "];
"1000674" -> "1000665"  [label="DDG: "];
"1000686" -> "1000685"  [label="AST: "];
"1000686" -> "1000689"  [label="CFG: "];
"1000687" -> "1000686"  [label="AST: "];
"1000688" -> "1000686"  [label="AST: "];
"1000689" -> "1000686"  [label="AST: "];
"1000693" -> "1000686"  [label="CFG: "];
"1000686" -> "1000699"  [label="DDG: "];
"1000686" -> "1000699"  [label="DDG: "];
"1000686" -> "1000685"  [label="DDG: "];
"1000686" -> "1000685"  [label="DDG: "];
"1000686" -> "1000685"  [label="DDG: "];
"1000645" -> "1000686"  [label="DDG: "];
"1000583" -> "1000686"  [label="DDG: "];
"1000543" -> "1000686"  [label="DDG: "];
"1000608" -> "1000686"  [label="DDG: "];
"1000110" -> "1000686"  [label="DDG: "];
"1000689" -> "1000686"  [label="DDG: "];
"1000685" -> "1000684"  [label="AST: "];
"1000685" -> "1000692"  [label="CFG: "];
"1000692" -> "1000685"  [label="AST: "];
"1000696" -> "1000685"  [label="CFG: "];
"1000698" -> "1000685"  [label="CFG: "];
"1000685" -> "1000699"  [label="DDG: "];
"1000685" -> "1000699"  [label="DDG: "];
"1000685" -> "1000699"  [label="DDG: "];
"1000692" -> "1000685"  [label="DDG: "];
}
