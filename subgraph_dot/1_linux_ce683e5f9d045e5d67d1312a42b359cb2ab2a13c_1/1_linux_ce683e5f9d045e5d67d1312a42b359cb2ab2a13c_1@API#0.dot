digraph "1_linux_ce683e5f9d045e5d67d1312a42b359cb2ab2a13c_1@API" {
"1000132" [label="(Call,e->next_offset < sizeof(struct compat_ipt_entry) +\n\t\t\t     sizeof(struct compat_xt_entry_target))"];
"1000142" [label="(Call,duprintf(\"checking: element %p size %u\n\",\n\t\t\t e, e->next_offset))"];
"1000163" [label="(Call,xt_compat_check_entry_offsets(e,\n \t\t\t\t\t    e->target_offset, e->next_offset))"];
"1000161" [label="(Call,ret = xt_compat_check_entry_offsets(e,\n \t\t\t\t\t    e->target_offset, e->next_offset))"];
"1000173" [label="(Return,return ret;)"];
"1000185" [label="(Call,(void *)e)"];
"1000184" [label="(Call,(void *)e - (void *)base)"];
"1000182" [label="(Call,entry_offset = (void *)e - (void *)base)"];
"1000272" [label="(Call,xt_compat_add_offset(AF_INET, entry_offset, off))"];
"1000270" [label="(Call,ret = xt_compat_add_offset(AF_INET, entry_offset, off))"];
"1000373" [label="(Return,return ret;)"];
"1000215" [label="(Call,compat_ipt_get_target(e))"];
"1000213" [label="(Call,t = compat_ipt_get_target(e))"];
"1000292" [label="(Call,(unsigned char *)e)"];
"1000291" [label="(Call,(unsigned char *)e - base)"];
"1000290" [label="(Call,(unsigned char *)e - base == hook_entries[h])"];
"1000299" [label="(Call,newinfo->hook_entry[h] = hook_entries[h])"];
"1000310" [label="(Call,(unsigned char *)e - base)"];
"1000309" [label="(Call,(unsigned char *)e - base == underflows[h])"];
"1000318" [label="(Call,newinfo->underflow[h] = underflows[h])"];
"1000311" [label="(Call,(unsigned char *)e)"];
"1000214" [label="(Identifier,t)"];
"1000218" [label="(Identifier,target)"];
"1000142" [label="(Call,duprintf(\"checking: element %p size %u\n\",\n\t\t\t e, e->next_offset))"];
"1000314" [label="(Identifier,base)"];
"1000291" [label="(Call,(unsigned char *)e - base)"];
"1000183" [label="(Identifier,entry_offset)"];
"1000274" [label="(Identifier,entry_offset)"];
"1000213" [label="(Call,t = compat_ipt_get_target(e))"];
"1000297" [label="(Identifier,hook_entries)"];
"1000321" [label="(Identifier,newinfo)"];
"1000111" [label="(Block,)"];
"1000161" [label="(Call,ret = xt_compat_check_entry_offsets(e,\n \t\t\t\t\t    e->target_offset, e->next_offset))"];
"1000271" [label="(Identifier,ret)"];
"1000310" [label="(Call,(unsigned char *)e - base)"];
"1000311" [label="(Call,(unsigned char *)e)"];
"1000165" [label="(Call,e->target_offset)"];
"1000207" [label="(Call,ret != 0)"];
"1000163" [label="(Call,xt_compat_check_entry_offsets(e,\n \t\t\t\t\t    e->target_offset, e->next_offset))"];
"1000295" [label="(Identifier,base)"];
"1000216" [label="(Identifier,e)"];
"1000294" [label="(Identifier,e)"];
"1000374" [label="(Identifier,ret)"];
"1000300" [label="(Call,newinfo->hook_entry[h])"];
"1000172" [label="(Identifier,ret)"];
"1000162" [label="(Identifier,ret)"];
"1000132" [label="(Call,e->next_offset < sizeof(struct compat_ipt_entry) +\n\t\t\t     sizeof(struct compat_xt_entry_target))"];
"1000156" [label="(Identifier,e)"];
"1000262" [label="(Call,off += xt_compat_target_offset(target))"];
"1000324" [label="(Call,underflows[h])"];
"1000273" [label="(Identifier,AF_INET)"];
"1000143" [label="(Literal,\"checking: element %p size %u\n\")"];
"1000171" [label="(ControlStructure,if (ret))"];
"1000296" [label="(Call,hook_entries[h])"];
"1000173" [label="(Return,return ret;)"];
"1000144" [label="(Identifier,e)"];
"1000289" [label="(ControlStructure,if ((unsigned char *)e - base == hook_entries[h]))"];
"1000270" [label="(Call,ret = xt_compat_add_offset(AF_INET, entry_offset, off))"];
"1000313" [label="(Identifier,e)"];
"1000292" [label="(Call,(unsigned char *)e)"];
"1000185" [label="(Call,(void *)e)"];
"1000141" [label="(Block,)"];
"1000174" [label="(Identifier,ret)"];
"1000150" [label="(Identifier,EINVAL)"];
"1000215" [label="(Call,compat_ipt_get_target(e))"];
"1000315" [label="(Call,underflows[h])"];
"1000287" [label="(Identifier,h)"];
"1000168" [label="(Call,e->next_offset)"];
"1000248" [label="(Call,ret = PTR_ERR(target))"];
"1000302" [label="(Identifier,newinfo)"];
"1000308" [label="(ControlStructure,if ((unsigned char *)e - base == underflows[h]))"];
"1000136" [label="(Call,sizeof(struct compat_ipt_entry) +\n\t\t\t     sizeof(struct compat_xt_entry_target))"];
"1000373" [label="(Return,return ret;)"];
"1000277" [label="(Identifier,ret)"];
"1000299" [label="(Call,newinfo->hook_entry[h] = hook_entries[h])"];
"1000133" [label="(Call,e->next_offset)"];
"1000187" [label="(Identifier,e)"];
"1000184" [label="(Call,(void *)e - (void *)base)"];
"1000188" [label="(Call,(void *)base)"];
"1000192" [label="(Identifier,j)"];
"1000272" [label="(Call,xt_compat_add_offset(AF_INET, entry_offset, off))"];
"1000275" [label="(Identifier,off)"];
"1000318" [label="(Call,newinfo->underflow[h] = underflows[h])"];
"1000319" [label="(Call,newinfo->underflow[h])"];
"1000375" [label="(MethodReturn,RET)"];
"1000164" [label="(Identifier,e)"];
"1000131" [label="(ControlStructure,if (e->next_offset < sizeof(struct compat_ipt_entry) +\n\t\t\t     sizeof(struct compat_xt_entry_target)))"];
"1000182" [label="(Call,entry_offset = (void *)e - (void *)base)"];
"1000290" [label="(Call,(unsigned char *)e - base == hook_entries[h])"];
"1000305" [label="(Call,hook_entries[h])"];
"1000316" [label="(Identifier,underflows)"];
"1000145" [label="(Call,e->next_offset)"];
"1000309" [label="(Call,(unsigned char *)e - base == underflows[h])"];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000136"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000136" -> "1000132"  [label="AST: "];
"1000143" -> "1000132"  [label="CFG: "];
"1000156" -> "1000132"  [label="CFG: "];
"1000132" -> "1000375"  [label="DDG: "];
"1000132" -> "1000375"  [label="DDG: "];
"1000132" -> "1000375"  [label="DDG: "];
"1000132" -> "1000142"  [label="DDG: "];
"1000132" -> "1000163"  [label="DDG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000142" -> "1000145"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000145" -> "1000142"  [label="AST: "];
"1000150" -> "1000142"  [label="CFG: "];
"1000142" -> "1000375"  [label="DDG: "];
"1000142" -> "1000375"  [label="DDG: "];
"1000142" -> "1000375"  [label="DDG: "];
"1000163" -> "1000161"  [label="AST: "];
"1000163" -> "1000168"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000165" -> "1000163"  [label="AST: "];
"1000168" -> "1000163"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000163" -> "1000375"  [label="DDG: "];
"1000163" -> "1000375"  [label="DDG: "];
"1000163" -> "1000375"  [label="DDG: "];
"1000163" -> "1000161"  [label="DDG: "];
"1000163" -> "1000161"  [label="DDG: "];
"1000163" -> "1000161"  [label="DDG: "];
"1000163" -> "1000185"  [label="DDG: "];
"1000161" -> "1000111"  [label="AST: "];
"1000162" -> "1000161"  [label="AST: "];
"1000172" -> "1000161"  [label="CFG: "];
"1000161" -> "1000375"  [label="DDG: "];
"1000161" -> "1000375"  [label="DDG: "];
"1000161" -> "1000173"  [label="DDG: "];
"1000173" -> "1000171"  [label="AST: "];
"1000173" -> "1000174"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000375" -> "1000173"  [label="CFG: "];
"1000173" -> "1000375"  [label="DDG: "];
"1000174" -> "1000173"  [label="DDG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="AST: "];
"1000189" -> "1000185"  [label="CFG: "];
"1000185" -> "1000375"  [label="DDG: "];
"1000185" -> "1000184"  [label="DDG: "];
"1000185" -> "1000215"  [label="DDG: "];
"1000184" -> "1000182"  [label="AST: "];
"1000184" -> "1000188"  [label="CFG: "];
"1000188" -> "1000184"  [label="AST: "];
"1000182" -> "1000184"  [label="CFG: "];
"1000184" -> "1000375"  [label="DDG: "];
"1000184" -> "1000375"  [label="DDG: "];
"1000184" -> "1000182"  [label="DDG: "];
"1000184" -> "1000182"  [label="DDG: "];
"1000188" -> "1000184"  [label="DDG: "];
"1000182" -> "1000111"  [label="AST: "];
"1000183" -> "1000182"  [label="AST: "];
"1000192" -> "1000182"  [label="CFG: "];
"1000182" -> "1000375"  [label="DDG: "];
"1000182" -> "1000375"  [label="DDG: "];
"1000182" -> "1000272"  [label="DDG: "];
"1000272" -> "1000270"  [label="AST: "];
"1000272" -> "1000275"  [label="CFG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000274" -> "1000272"  [label="AST: "];
"1000275" -> "1000272"  [label="AST: "];
"1000270" -> "1000272"  [label="CFG: "];
"1000272" -> "1000375"  [label="DDG: "];
"1000272" -> "1000375"  [label="DDG: "];
"1000272" -> "1000375"  [label="DDG: "];
"1000272" -> "1000270"  [label="DDG: "];
"1000272" -> "1000270"  [label="DDG: "];
"1000272" -> "1000270"  [label="DDG: "];
"1000262" -> "1000272"  [label="DDG: "];
"1000270" -> "1000111"  [label="AST: "];
"1000271" -> "1000270"  [label="AST: "];
"1000277" -> "1000270"  [label="CFG: "];
"1000270" -> "1000375"  [label="DDG: "];
"1000270" -> "1000375"  [label="DDG: "];
"1000270" -> "1000373"  [label="DDG: "];
"1000373" -> "1000111"  [label="AST: "];
"1000373" -> "1000374"  [label="CFG: "];
"1000374" -> "1000373"  [label="AST: "];
"1000375" -> "1000373"  [label="CFG: "];
"1000373" -> "1000375"  [label="DDG: "];
"1000374" -> "1000373"  [label="DDG: "];
"1000207" -> "1000373"  [label="DDG: "];
"1000248" -> "1000373"  [label="DDG: "];
"1000215" -> "1000213"  [label="AST: "];
"1000215" -> "1000216"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000213" -> "1000215"  [label="CFG: "];
"1000215" -> "1000375"  [label="DDG: "];
"1000215" -> "1000213"  [label="DDG: "];
"1000215" -> "1000292"  [label="DDG: "];
"1000213" -> "1000111"  [label="AST: "];
"1000214" -> "1000213"  [label="AST: "];
"1000218" -> "1000213"  [label="CFG: "];
"1000213" -> "1000375"  [label="DDG: "];
"1000213" -> "1000375"  [label="DDG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000292" -> "1000294"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000294" -> "1000292"  [label="AST: "];
"1000295" -> "1000292"  [label="CFG: "];
"1000292" -> "1000291"  [label="DDG: "];
"1000311" -> "1000292"  [label="DDG: "];
"1000292" -> "1000311"  [label="DDG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000291" -> "1000295"  [label="CFG: "];
"1000295" -> "1000291"  [label="AST: "];
"1000297" -> "1000291"  [label="CFG: "];
"1000291" -> "1000290"  [label="DDG: "];
"1000291" -> "1000290"  [label="DDG: "];
"1000188" -> "1000291"  [label="DDG: "];
"1000310" -> "1000291"  [label="DDG: "];
"1000291" -> "1000310"  [label="DDG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000290" -> "1000296"  [label="CFG: "];
"1000296" -> "1000290"  [label="AST: "];
"1000302" -> "1000290"  [label="CFG: "];
"1000312" -> "1000290"  [label="CFG: "];
"1000290" -> "1000375"  [label="DDG: "];
"1000290" -> "1000375"  [label="DDG: "];
"1000290" -> "1000299"  [label="DDG: "];
"1000299" -> "1000289"  [label="AST: "];
"1000299" -> "1000305"  [label="CFG: "];
"1000300" -> "1000299"  [label="AST: "];
"1000305" -> "1000299"  [label="AST: "];
"1000312" -> "1000299"  [label="CFG: "];
"1000299" -> "1000375"  [label="DDG: "];
"1000299" -> "1000375"  [label="DDG: "];
"1000310" -> "1000309"  [label="AST: "];
"1000310" -> "1000314"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000314" -> "1000310"  [label="AST: "];
"1000316" -> "1000310"  [label="CFG: "];
"1000310" -> "1000375"  [label="DDG: "];
"1000310" -> "1000375"  [label="DDG: "];
"1000310" -> "1000309"  [label="DDG: "];
"1000310" -> "1000309"  [label="DDG: "];
"1000311" -> "1000310"  [label="DDG: "];
"1000309" -> "1000308"  [label="AST: "];
"1000309" -> "1000315"  [label="CFG: "];
"1000315" -> "1000309"  [label="AST: "];
"1000321" -> "1000309"  [label="CFG: "];
"1000287" -> "1000309"  [label="CFG: "];
"1000309" -> "1000375"  [label="DDG: "];
"1000309" -> "1000375"  [label="DDG: "];
"1000309" -> "1000375"  [label="DDG: "];
"1000309" -> "1000318"  [label="DDG: "];
"1000318" -> "1000308"  [label="AST: "];
"1000318" -> "1000324"  [label="CFG: "];
"1000319" -> "1000318"  [label="AST: "];
"1000324" -> "1000318"  [label="AST: "];
"1000287" -> "1000318"  [label="CFG: "];
"1000318" -> "1000375"  [label="DDG: "];
"1000318" -> "1000375"  [label="DDG: "];
"1000311" -> "1000313"  [label="CFG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000313" -> "1000311"  [label="AST: "];
"1000314" -> "1000311"  [label="CFG: "];
"1000311" -> "1000375"  [label="DDG: "];
}
