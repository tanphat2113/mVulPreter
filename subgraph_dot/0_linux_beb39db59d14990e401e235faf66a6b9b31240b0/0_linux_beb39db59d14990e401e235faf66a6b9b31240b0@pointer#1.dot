digraph "0_linux_beb39db59d14990e401e235faf66a6b9b31240b0@pointer" {
"1000136" [label="(Call,ip_recv_error(sk, msg, len, addr_len))"];
"1000128" [label="(Call,IS_UDPLITE(sk))"];
"1000114" [label="(Call,inet_sk(sk))"];
"1000104" [label="(MethodParameterIn,struct sock *sk)"];
"1000105" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000106" [label="(MethodParameterIn,size_t len)"];
"1000109" [label="(MethodParameterIn,int *addr_len)"];
"1000135" [label="(Return,return ip_recv_error(sk, msg, len, addr_len);)"];
"1000344" [label="(Call,sock_net(sk))"];
"1000325" [label="(Call,skb_free_datagram_locked(sk, skb))"];
"1000114" [label="(Call,inet_sk(sk))"];
"1000137" [label="(Identifier,sk)"];
"1000136" [label="(Call,ip_recv_error(sk, msg, len, addr_len))"];
"1000338" [label="(Call,skb_kill_datagram(sk, skb, flags))"];
"1000260" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000219" [label="(Call,skb_copy_and_csum_datagram_msg(skb, sizeof(struct udphdr),\n\t\t\t\t\t\t     msg))"];
"1000104" [label="(MethodParameterIn,struct sock *sk)"];
"1000309" [label="(Call,ip_cmsg_recv_offset(msg, skb, sizeof(struct udphdr)))"];
"1000144" [label="(Call,__skb_recv_datagram(sk, flags | (noblock ? MSG_DONTWAIT : 0),\n\t\t\t\t  &peeked, &off, &err))"];
"1000115" [label="(Identifier,sk)"];
"1000209" [label="(Call,skb_copy_datagram_msg(skb, sizeof(struct udphdr),\n\t\t\t\t\t    msg, copied))"];
"1000247" [label="(Call,sock_net(sk))"];
"1000131" [label="(ControlStructure,if (flags & MSG_ERRQUEUE))"];
"1000112" [label="(Call,*inet = inet_sk(sk))"];
"1000334" [label="(Call,lock_sock_fast(sk))"];
"1000170" [label="(Call,copied = len)"];
"1000140" [label="(Identifier,addr_len)"];
"1000256" [label="(Call,sock_net(sk))"];
"1000363" [label="(MethodReturn,int)"];
"1000135" [label="(Return,return ip_recv_error(sk, msg, len, addr_len);)"];
"1000139" [label="(Identifier,len)"];
"1000349" [label="(Call,sock_net(sk))"];
"1000353" [label="(Call,unlock_sock_fast(sk, slow))"];
"1000129" [label="(Identifier,sk)"];
"1000126" [label="(Call,is_udplite = IS_UDPLITE(sk))"];
"1000138" [label="(Identifier,msg)"];
"1000105" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000109" [label="(MethodParameterIn,int *addr_len)"];
"1000128" [label="(Call,IS_UDPLITE(sk))"];
"1000106" [label="(MethodParameterIn,size_t len)"];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000140"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000139" -> "1000136"  [label="AST: "];
"1000140" -> "1000136"  [label="AST: "];
"1000135" -> "1000136"  [label="CFG: "];
"1000136" -> "1000363"  [label="DDG: len"];
"1000136" -> "1000363"  [label="DDG: addr_len"];
"1000136" -> "1000363"  [label="DDG: ip_recv_error(sk, msg, len, addr_len)"];
"1000136" -> "1000363"  [label="DDG: msg"];
"1000136" -> "1000363"  [label="DDG: sk"];
"1000136" -> "1000135"  [label="DDG: ip_recv_error(sk, msg, len, addr_len)"];
"1000128" -> "1000136"  [label="DDG: sk"];
"1000104" -> "1000136"  [label="DDG: sk"];
"1000105" -> "1000136"  [label="DDG: msg"];
"1000106" -> "1000136"  [label="DDG: len"];
"1000109" -> "1000136"  [label="DDG: addr_len"];
"1000128" -> "1000126"  [label="AST: "];
"1000128" -> "1000129"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000128" -> "1000126"  [label="DDG: sk"];
"1000114" -> "1000128"  [label="DDG: sk"];
"1000104" -> "1000128"  [label="DDG: sk"];
"1000128" -> "1000144"  [label="DDG: sk"];
"1000114" -> "1000112"  [label="AST: "];
"1000114" -> "1000115"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000114" -> "1000112"  [label="DDG: sk"];
"1000104" -> "1000114"  [label="DDG: sk"];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000363"  [label="DDG: sk"];
"1000104" -> "1000144"  [label="DDG: sk"];
"1000104" -> "1000247"  [label="DDG: sk"];
"1000104" -> "1000256"  [label="DDG: sk"];
"1000104" -> "1000260"  [label="DDG: sk"];
"1000104" -> "1000325"  [label="DDG: sk"];
"1000104" -> "1000334"  [label="DDG: sk"];
"1000104" -> "1000338"  [label="DDG: sk"];
"1000104" -> "1000344"  [label="DDG: sk"];
"1000104" -> "1000349"  [label="DDG: sk"];
"1000104" -> "1000353"  [label="DDG: sk"];
"1000105" -> "1000103"  [label="AST: "];
"1000105" -> "1000363"  [label="DDG: msg"];
"1000105" -> "1000209"  [label="DDG: msg"];
"1000105" -> "1000219"  [label="DDG: msg"];
"1000105" -> "1000260"  [label="DDG: msg"];
"1000105" -> "1000309"  [label="DDG: msg"];
"1000106" -> "1000103"  [label="AST: "];
"1000106" -> "1000363"  [label="DDG: len"];
"1000106" -> "1000170"  [label="DDG: len"];
"1000109" -> "1000103"  [label="AST: "];
"1000109" -> "1000363"  [label="DDG: addr_len"];
"1000135" -> "1000131"  [label="AST: "];
"1000363" -> "1000135"  [label="CFG: "];
"1000135" -> "1000363"  [label="DDG: <RET>"];
}
