digraph "0_linux_b4789b8e6be3151a955ade74872822f30e8cd914@pointer" {
"1001003" [label="(Call,dev->scsi_host_ptr->max_sectors << 9)"];
"1000987" [label="(Call,usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1001019" [label="(Call,kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1001017" [label="(Call,p = kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1001031" [label="(Call,!p)"];
"1001074" [label="(Call,sg_list[i] = p)"];
"1001416" [label="(Call,copy_to_user(sg_user[i], sg_list[i], byte_count))"];
"1001461" [label="(Call,kfree(sg_list[i]))"];
"1001088" [label="(Call,copy_from_user(p,sg_user[i],usg->sg[i].count))"];
"1001108" [label="(Call,pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1001106" [label="(Call,addr = pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1001130" [label="(Call,addr & 0xffffffff)"];
"1001129" [label="(Call,cpu_to_le32(addr & 0xffffffff))"];
"1001121" [label="(Call,psg->sg[i].addr = cpu_to_le32(addr & 0xffffffff))"];
"1001133" [label="(Call,byte_count += usg->sg[i].count)"];
"1001326" [label="(Call,cpu_to_le32(byte_count))"];
"1001322" [label="(Call,srbcmd->count = cpu_to_le32(byte_count))"];
"1001150" [label="(Call,cpu_to_le32(usg->sg[i].count))"];
"1001142" [label="(Call,psg->sg[i].count = cpu_to_le32(usg->sg[i].count))"];
"1000995" [label="(Call,(dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1001135" [label="(Call,usg->sg[i].count)"];
"1000995" [label="(Call,(dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1001225" [label="(Call,sg_user[i] = (void __user *)(uintptr_t)upsg->sg[i].addr)"];
"1001132" [label="(Literal,0xffffffff)"];
"1001151" [label="(Call,usg->sg[i].count)"];
"1001326" [label="(Call,cpu_to_le32(byte_count))"];
"1001018" [label="(Identifier,p)"];
"1001009" [label="(Literal,9)"];
"1001106" [label="(Call,addr = pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1000988" [label="(Call,usg->sg[i].count)"];
"1001415" [label="(ControlStructure,if(copy_to_user(sg_user[i], sg_list[i], byte_count)))"];
"1001088" [label="(Call,copy_from_user(p,sg_user[i],usg->sg[i].count))"];
"1001461" [label="(Call,kfree(sg_list[i]))"];
"1001322" [label="(Call,srbcmd->count = cpu_to_le32(byte_count))"];
"1001087" [label="(ControlStructure,if(copy_from_user(p,sg_user[i],usg->sg[i].count)))"];
"1001131" [label="(Identifier,addr)"];
"1001102" [label="(Identifier,rcode)"];
"1001017" [label="(Call,p = kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1001078" [label="(Identifier,p)"];
"1001027" [label="(Call,GFP_KERNEL|__GFP_DMA)"];
"1001074" [label="(Call,sg_list[i] = p)"];
"1001426" [label="(Identifier,rcode)"];
"1001020" [label="(Call,usg->sg[i].count)"];
"1001383" [label="(Call,byte_count = le32_to_cpu(\n\t\t\t  (dev->adapter_info.options & AAC_OPT_SGMAP_HOST64)\n\t\t\t      ? ((struct sgmap64*)&srbcmd->sg)->sg[i].count\n\t\t\t      : srbcmd->sg.sg[i].count))"];
"1001133" [label="(Call,byte_count += usg->sg[i].count)"];
"1001130" [label="(Call,addr & 0xffffffff)"];
"1000982" [label="(Identifier,i)"];
"1001134" [label="(Identifier,byte_count)"];
"1001240" [label="(Call,sg_list[i] = p)"];
"1001323" [label="(Call,srbcmd->count)"];
"1001067" [label="(Call,sg_user[i] = (void __user *)addr)"];
"1001254" [label="(Call,copy_from_user(p, sg_user[i],\n\t\t\t\t\t\t\tupsg->sg[i].count))"];
"1001031" [label="(Call,!p)"];
"1001004" [label="(Call,dev->scsi_host_ptr->max_sectors)"];
"1000996" [label="(Call,dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM)"];
"1000830" [label="(Call,copy_from_user(p,sg_user[i],upsg->sg[i].count))"];
"1001090" [label="(Call,sg_user[i])"];
"1000208" [label="(Call,memset(sg_list, 0, sizeof(sg_list)))"];
"1000594" [label="(Call,sg_list[i] = p)"];
"1000585" [label="(Call,sg_user[i] = (void __user *)(uintptr_t)addr)"];
"1000816" [label="(Call,sg_list[i] = p)"];
"1001297" [label="(Call,byte_count += upsg->sg[i].count)"];
"1001089" [label="(Identifier,p)"];
"1001019" [label="(Call,kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1001108" [label="(Call,pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1001122" [label="(Call,psg->sg[i].addr)"];
"1001460" [label="(Block,)"];
"1001107" [label="(Identifier,addr)"];
"1001113" [label="(Call,usg->sg[i].count)"];
"1001121" [label="(Call,psg->sg[i].addr = cpu_to_le32(addr & 0xffffffff))"];
"1000986" [label="(ControlStructure,if (usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)))"];
"1001080" [label="(Identifier,sg_indx)"];
"1001420" [label="(Call,sg_list[i])"];
"1001146" [label="(Identifier,psg)"];
"1001010" [label="(Literal,65536)"];
"1001112" [label="(Identifier,p)"];
"1000983" [label="(Block,)"];
"1001013" [label="(Identifier,rcode)"];
"1001459" [label="(Identifier,i)"];
"1001381" [label="(Identifier,i)"];
"1001330" [label="(Identifier,psg)"];
"1001143" [label="(Call,psg->sg[i].count)"];
"1001093" [label="(Call,usg->sg[i].count)"];
"1001129" [label="(Call,cpu_to_le32(addr & 0xffffffff))"];
"1001040" [label="(Identifier,addr)"];
"1001142" [label="(Call,psg->sg[i].count = cpu_to_le32(usg->sg[i].count))"];
"1000438" [label="(Call,data_dir == DMA_NONE)"];
"1001477" [label="(MethodReturn,static int)"];
"1001416" [label="(Call,copy_to_user(sg_user[i], sg_list[i], byte_count))"];
"1001150" [label="(Call,cpu_to_le32(usg->sg[i].count))"];
"1001327" [label="(Identifier,byte_count)"];
"1001109" [label="(Call,dev->pdev)"];
"1001423" [label="(Identifier,byte_count)"];
"1001032" [label="(Identifier,p)"];
"1001030" [label="(ControlStructure,if(!p))"];
"1001035" [label="(Identifier,rcode)"];
"1001075" [label="(Call,sg_list[i])"];
"1000946" [label="(Block,)"];
"1001417" [label="(Call,sg_user[i])"];
"1001120" [label="(Identifier,data_dir)"];
"1000452" [label="(Call,byte_count = 0)"];
"1001125" [label="(Identifier,psg)"];
"1001003" [label="(Call,dev->scsi_host_ptr->max_sectors << 9)"];
"1000379" [label="(Call,ARRAY_SIZE(sg_list))"];
"1001462" [label="(Call,sg_list[i])"];
"1000801" [label="(Call,sg_user[i] = (void __user *)(uintptr_t)usg->sg[i].addr)"];
"1000987" [label="(Call,usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1000608" [label="(Call,copy_from_user(p,sg_user[i],upsg->sg[i].count))"];
"1001003" -> "1000995"  [label="AST: "];
"1001003" -> "1001009"  [label="CFG: "];
"1001004" -> "1001003"  [label="AST: "];
"1001009" -> "1001003"  [label="AST: "];
"1000995" -> "1001003"  [label="CFG: "];
"1001003" -> "1001477"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1001003" -> "1000987"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1001003" -> "1000987"  [label="DDG: 9"];
"1001003" -> "1000995"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1001003" -> "1000995"  [label="DDG: 9"];
"1000987" -> "1000986"  [label="AST: "];
"1000987" -> "1000995"  [label="CFG: "];
"1000988" -> "1000987"  [label="AST: "];
"1000995" -> "1000987"  [label="AST: "];
"1001013" -> "1000987"  [label="CFG: "];
"1001018" -> "1000987"  [label="CFG: "];
"1000987" -> "1001477"  [label="DDG: usg->sg[i].count"];
"1000987" -> "1001477"  [label="DDG: usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1000987" -> "1001477"  [label="DDG: (dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536"];
"1001150" -> "1000987"  [label="DDG: usg->sg[i].count"];
"1000987" -> "1001019"  [label="DDG: usg->sg[i].count"];
"1001019" -> "1001017"  [label="AST: "];
"1001019" -> "1001027"  [label="CFG: "];
"1001020" -> "1001019"  [label="AST: "];
"1001027" -> "1001019"  [label="AST: "];
"1001017" -> "1001019"  [label="CFG: "];
"1001019" -> "1001477"  [label="DDG: GFP_KERNEL|__GFP_DMA"];
"1001019" -> "1001477"  [label="DDG: usg->sg[i].count"];
"1001019" -> "1001017"  [label="DDG: usg->sg[i].count"];
"1001019" -> "1001017"  [label="DDG: GFP_KERNEL|__GFP_DMA"];
"1001027" -> "1001019"  [label="DDG: GFP_KERNEL"];
"1001027" -> "1001019"  [label="DDG: __GFP_DMA"];
"1001019" -> "1001088"  [label="DDG: usg->sg[i].count"];
"1001019" -> "1001108"  [label="DDG: usg->sg[i].count"];
"1001017" -> "1000983"  [label="AST: "];
"1001018" -> "1001017"  [label="AST: "];
"1001032" -> "1001017"  [label="CFG: "];
"1001017" -> "1001477"  [label="DDG: kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA)"];
"1001017" -> "1001031"  [label="DDG: p"];
"1001031" -> "1001030"  [label="AST: "];
"1001031" -> "1001032"  [label="CFG: "];
"1001032" -> "1001031"  [label="AST: "];
"1001035" -> "1001031"  [label="CFG: "];
"1001040" -> "1001031"  [label="CFG: "];
"1001031" -> "1001477"  [label="DDG: p"];
"1001031" -> "1001477"  [label="DDG: !p"];
"1001031" -> "1001074"  [label="DDG: p"];
"1001031" -> "1001088"  [label="DDG: p"];
"1001031" -> "1001108"  [label="DDG: p"];
"1001074" -> "1000983"  [label="AST: "];
"1001074" -> "1001078"  [label="CFG: "];
"1001075" -> "1001074"  [label="AST: "];
"1001078" -> "1001074"  [label="AST: "];
"1001080" -> "1001074"  [label="CFG: "];
"1001074" -> "1001477"  [label="DDG: sg_list[i]"];
"1001074" -> "1001416"  [label="DDG: sg_list[i]"];
"1001074" -> "1001461"  [label="DDG: sg_list[i]"];
"1001416" -> "1001415"  [label="AST: "];
"1001416" -> "1001423"  [label="CFG: "];
"1001417" -> "1001416"  [label="AST: "];
"1001420" -> "1001416"  [label="AST: "];
"1001423" -> "1001416"  [label="AST: "];
"1001426" -> "1001416"  [label="CFG: "];
"1001381" -> "1001416"  [label="CFG: "];
"1001416" -> "1001477"  [label="DDG: sg_user[i]"];
"1001416" -> "1001477"  [label="DDG: byte_count"];
"1001416" -> "1001477"  [label="DDG: copy_to_user(sg_user[i], sg_list[i], byte_count)"];
"1001416" -> "1001477"  [label="DDG: sg_list[i]"];
"1000801" -> "1001416"  [label="DDG: sg_user[i]"];
"1000608" -> "1001416"  [label="DDG: sg_user[i]"];
"1000585" -> "1001416"  [label="DDG: sg_user[i]"];
"1001254" -> "1001416"  [label="DDG: sg_user[i]"];
"1000830" -> "1001416"  [label="DDG: sg_user[i]"];
"1001067" -> "1001416"  [label="DDG: sg_user[i]"];
"1001225" -> "1001416"  [label="DDG: sg_user[i]"];
"1001088" -> "1001416"  [label="DDG: sg_user[i]"];
"1000594" -> "1001416"  [label="DDG: sg_list[i]"];
"1000816" -> "1001416"  [label="DDG: sg_list[i]"];
"1000379" -> "1001416"  [label="DDG: sg_list"];
"1001240" -> "1001416"  [label="DDG: sg_list[i]"];
"1001383" -> "1001416"  [label="DDG: byte_count"];
"1001416" -> "1001461"  [label="DDG: sg_list[i]"];
"1001461" -> "1001460"  [label="AST: "];
"1001461" -> "1001462"  [label="CFG: "];
"1001462" -> "1001461"  [label="AST: "];
"1001459" -> "1001461"  [label="CFG: "];
"1001461" -> "1001477"  [label="DDG: sg_list[i]"];
"1001461" -> "1001477"  [label="DDG: kfree(sg_list[i])"];
"1000208" -> "1001461"  [label="DDG: sg_list"];
"1000594" -> "1001461"  [label="DDG: sg_list[i]"];
"1000816" -> "1001461"  [label="DDG: sg_list[i]"];
"1000379" -> "1001461"  [label="DDG: sg_list"];
"1001240" -> "1001461"  [label="DDG: sg_list[i]"];
"1001088" -> "1001087"  [label="AST: "];
"1001088" -> "1001093"  [label="CFG: "];
"1001089" -> "1001088"  [label="AST: "];
"1001090" -> "1001088"  [label="AST: "];
"1001093" -> "1001088"  [label="AST: "];
"1001102" -> "1001088"  [label="CFG: "];
"1001107" -> "1001088"  [label="CFG: "];
"1001088" -> "1001477"  [label="DDG: copy_from_user(p,sg_user[i],usg->sg[i].count)"];
"1001088" -> "1001477"  [label="DDG: p"];
"1001088" -> "1001477"  [label="DDG: usg->sg[i].count"];
"1001088" -> "1001477"  [label="DDG: sg_user[i]"];
"1001067" -> "1001088"  [label="DDG: sg_user[i]"];
"1001088" -> "1001108"  [label="DDG: p"];
"1001088" -> "1001108"  [label="DDG: usg->sg[i].count"];
"1001108" -> "1001106"  [label="AST: "];
"1001108" -> "1001120"  [label="CFG: "];
"1001109" -> "1001108"  [label="AST: "];
"1001112" -> "1001108"  [label="AST: "];
"1001113" -> "1001108"  [label="AST: "];
"1001120" -> "1001108"  [label="AST: "];
"1001106" -> "1001108"  [label="CFG: "];
"1001108" -> "1001477"  [label="DDG: dev->pdev"];
"1001108" -> "1001477"  [label="DDG: data_dir"];
"1001108" -> "1001477"  [label="DDG: p"];
"1001108" -> "1001106"  [label="DDG: dev->pdev"];
"1001108" -> "1001106"  [label="DDG: p"];
"1001108" -> "1001106"  [label="DDG: usg->sg[i].count"];
"1001108" -> "1001106"  [label="DDG: data_dir"];
"1000438" -> "1001108"  [label="DDG: data_dir"];
"1001108" -> "1001133"  [label="DDG: usg->sg[i].count"];
"1001108" -> "1001150"  [label="DDG: usg->sg[i].count"];
"1001106" -> "1000983"  [label="AST: "];
"1001107" -> "1001106"  [label="AST: "];
"1001125" -> "1001106"  [label="CFG: "];
"1001106" -> "1001477"  [label="DDG: pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir)"];
"1001106" -> "1001130"  [label="DDG: addr"];
"1001130" -> "1001129"  [label="AST: "];
"1001130" -> "1001132"  [label="CFG: "];
"1001131" -> "1001130"  [label="AST: "];
"1001132" -> "1001130"  [label="AST: "];
"1001129" -> "1001130"  [label="CFG: "];
"1001130" -> "1001477"  [label="DDG: addr"];
"1001130" -> "1001129"  [label="DDG: addr"];
"1001130" -> "1001129"  [label="DDG: 0xffffffff"];
"1001129" -> "1001121"  [label="AST: "];
"1001121" -> "1001129"  [label="CFG: "];
"1001129" -> "1001477"  [label="DDG: addr & 0xffffffff"];
"1001129" -> "1001121"  [label="DDG: addr & 0xffffffff"];
"1001121" -> "1000983"  [label="AST: "];
"1001122" -> "1001121"  [label="AST: "];
"1001134" -> "1001121"  [label="CFG: "];
"1001121" -> "1001477"  [label="DDG: cpu_to_le32(addr & 0xffffffff)"];
"1001121" -> "1001477"  [label="DDG: psg->sg[i].addr"];
"1001133" -> "1000983"  [label="AST: "];
"1001133" -> "1001135"  [label="CFG: "];
"1001134" -> "1001133"  [label="AST: "];
"1001135" -> "1001133"  [label="AST: "];
"1001146" -> "1001133"  [label="CFG: "];
"1001133" -> "1001477"  [label="DDG: byte_count"];
"1000452" -> "1001133"  [label="DDG: byte_count"];
"1001133" -> "1001326"  [label="DDG: byte_count"];
"1001326" -> "1001322"  [label="AST: "];
"1001326" -> "1001327"  [label="CFG: "];
"1001327" -> "1001326"  [label="AST: "];
"1001322" -> "1001326"  [label="CFG: "];
"1001326" -> "1001477"  [label="DDG: byte_count"];
"1001326" -> "1001322"  [label="DDG: byte_count"];
"1000452" -> "1001326"  [label="DDG: byte_count"];
"1001297" -> "1001326"  [label="DDG: byte_count"];
"1001322" -> "1000946"  [label="AST: "];
"1001323" -> "1001322"  [label="AST: "];
"1001330" -> "1001322"  [label="CFG: "];
"1001322" -> "1001477"  [label="DDG: cpu_to_le32(byte_count)"];
"1001322" -> "1001477"  [label="DDG: srbcmd->count"];
"1001150" -> "1001142"  [label="AST: "];
"1001150" -> "1001151"  [label="CFG: "];
"1001151" -> "1001150"  [label="AST: "];
"1001142" -> "1001150"  [label="CFG: "];
"1001150" -> "1001477"  [label="DDG: usg->sg[i].count"];
"1001150" -> "1001142"  [label="DDG: usg->sg[i].count"];
"1001142" -> "1000983"  [label="AST: "];
"1001143" -> "1001142"  [label="AST: "];
"1000982" -> "1001142"  [label="CFG: "];
"1001142" -> "1001477"  [label="DDG: cpu_to_le32(usg->sg[i].count)"];
"1001142" -> "1001477"  [label="DDG: psg->sg[i].count"];
"1000995" -> "1001010"  [label="CFG: "];
"1000996" -> "1000995"  [label="AST: "];
"1001010" -> "1000995"  [label="AST: "];
"1000995" -> "1001477"  [label="DDG: dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM"];
"1000995" -> "1001477"  [label="DDG: dev->scsi_host_ptr->max_sectors << 9"];
}
