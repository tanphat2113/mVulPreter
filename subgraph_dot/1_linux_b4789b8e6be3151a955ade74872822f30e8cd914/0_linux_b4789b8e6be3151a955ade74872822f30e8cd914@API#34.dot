digraph "0_linux_b4789b8e6be3151a955ade74872822f30e8cd914@API" {
"1000232" [label="(Call,dev->max_fib_size - sizeof(struct aac_fibhdr))"];
"1000230" [label="(Call,fibsize > (dev->max_fib_size - sizeof(struct aac_fibhdr)))"];
"1000246" [label="(Call,kmalloc(fibsize, GFP_KERNEL))"];
"1000244" [label="(Call,user_srbcmd = kmalloc(fibsize, GFP_KERNEL))"];
"1000250" [label="(Call,!user_srbcmd)"];
"1000259" [label="(Call,copy_from_user(user_srbcmd, user_srb,fibsize))"];
"1000269" [label="(Call,user_reply = arg+fibsize)"];
"1001437" [label="(Call,copy_to_user(user_reply,reply,sizeof(struct aac_srb_reply)))"];
"1000271" [label="(Call,arg+fibsize)"];
"1000424" [label="(Call,actual_fibsize != fibsize)"];
"1000423" [label="(Call,(actual_fibsize != fibsize) && (actual_fibsize64 != fibsize))"];
"1000427" [label="(Call,actual_fibsize64 != fibsize)"];
"1000483" [label="(Call,actual_fibsize64 == fibsize)"];
"1000487" [label="(Call,actual_fibsize = actual_fibsize64)"];
"1000936" [label="(Call,aac_fib_send(ScsiPortCommand64, srbfib, actual_fibsize, FsaNormal, 1, 1,NULL,NULL))"];
"1000934" [label="(Call,status = aac_fib_send(ScsiPortCommand64, srbfib, actual_fibsize, FsaNormal, 1, 1,NULL,NULL))"];
"1001348" [label="(Call,status == -ERESTARTSYS)"];
"1001359" [label="(Call,status != 0)"];
"1001434" [label="(Call,fib_data(srbfib))"];
"1001432" [label="(Call,(struct aac_srb_reply *) fib_data(srbfib))"];
"1001430" [label="(Call,reply = (struct aac_srb_reply *) fib_data(srbfib))"];
"1001471" [label="(Call,aac_fib_complete(srbfib))"];
"1001473" [label="(Call,aac_fib_free(srbfib))"];
"1000727" [label="(Call,actual_fibsize = actual_fibsize64)"];
"1000962" [label="(Call,actual_fibsize64 == fibsize)"];
"1000700" [label="(Call,actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap))"];
"1000699" [label="(Call,kmalloc(actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap), GFP_KERNEL))"];
"1000697" [label="(Call,usg = kmalloc(actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap), GFP_KERNEL))"];
"1000709" [label="(Call,!usg)"];
"1000717" [label="(Call,memcpy (usg, upsg, actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)))"];
"1000770" [label="(Call,kfree(usg))"];
"1000794" [label="(Call,kfree(usg))"];
"1000843" [label="(Call,kfree (usg))"];
"1000918" [label="(Call,kfree (usg))"];
"1000787" [label="(Call,GFP_KERNEL|__GFP_DMA)"];
"1000779" [label="(Call,kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000777" [label="(Call,p = kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000791" [label="(Call,!p)"];
"1000816" [label="(Call,sg_list[i] = p)"];
"1001416" [label="(Call,copy_to_user(sg_user[i], sg_list[i], byte_count))"];
"1001461" [label="(Call,kfree(sg_list[i]))"];
"1000830" [label="(Call,copy_from_user(p,sg_user[i],upsg->sg[i].count))"];
"1000852" [label="(Call,pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1000850" [label="(Call,addr = pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1000876" [label="(Call,addr & 0xffffffff)"];
"1000875" [label="(Call,cpu_to_le32(addr & 0xffffffff))"];
"1000865" [label="(Call,psg->sg[i].addr[0] = cpu_to_le32(addr & 0xffffffff))"];
"1000890" [label="(Call,addr>>32)"];
"1000889" [label="(Call,cpu_to_le32(addr>>32))"];
"1000879" [label="(Call,psg->sg[i].addr[1] = cpu_to_le32(addr>>32))"];
"1000893" [label="(Call,byte_count += usg->sg[i].count)"];
"1000924" [label="(Call,cpu_to_le32(byte_count))"];
"1000920" [label="(Call,srbcmd->count = cpu_to_le32(byte_count))"];
"1000910" [label="(Call,cpu_to_le32(usg->sg[i].count))"];
"1000745" [label="(Call,usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1000902" [label="(Call,psg->sg[i].count = cpu_to_le32(usg->sg[i].count))"];
"1000720" [label="(Call,actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap))"];
"1001338" [label="(Call,aac_fib_send(ScsiPortCommand, srbfib, actual_fibsize, FsaNormal, 1, 1, NULL, NULL))"];
"1001336" [label="(Call,status = aac_fib_send(ScsiPortCommand, srbfib, actual_fibsize, FsaNormal, 1, 1, NULL, NULL))"];
"1001449" [label="(Call,kfree(user_srbcmd))"];
"1000545" [label="(Call,GFP_KERNEL|__GFP_DMA)"];
"1000537" [label="(Call,kmalloc(upsg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000535" [label="(Call,p = kmalloc(upsg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000549" [label="(Call,!p)"];
"1000594" [label="(Call,sg_list[i] = p)"];
"1000608" [label="(Call,copy_from_user(p,sg_user[i],upsg->sg[i].count))"];
"1000628" [label="(Call,pci_map_single(dev->pdev, p, upsg->sg[i].count, data_dir))"];
"1000626" [label="(Call,addr = pci_map_single(dev->pdev, p, upsg->sg[i].count, data_dir))"];
"1000652" [label="(Call,addr & 0xffffffff)"];
"1000651" [label="(Call,cpu_to_le32(addr & 0xffffffff))"];
"1000641" [label="(Call,psg->sg[i].addr[0] = cpu_to_le32(addr & 0xffffffff))"];
"1000666" [label="(Call,addr>>32)"];
"1000665" [label="(Call,cpu_to_le32(addr>>32))"];
"1000655" [label="(Call,psg->sg[i].addr[1] = cpu_to_le32(addr>>32))"];
"1000669" [label="(Call,byte_count += upsg->sg[i].count)"];
"1000686" [label="(Call,cpu_to_le32(upsg->sg[i].count))"];
"1000505" [label="(Call,upsg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1000678" [label="(Call,psg->sg[i].count = cpu_to_le32(upsg->sg[i].count))"];
"1001027" [label="(Call,GFP_KERNEL|__GFP_DMA)"];
"1001019" [label="(Call,kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1001017" [label="(Call,p = kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1001031" [label="(Call,!p)"];
"1001074" [label="(Call,sg_list[i] = p)"];
"1001088" [label="(Call,copy_from_user(p,sg_user[i],usg->sg[i].count))"];
"1001108" [label="(Call,pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1001106" [label="(Call,addr = pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1001130" [label="(Call,addr & 0xffffffff)"];
"1001129" [label="(Call,cpu_to_le32(addr & 0xffffffff))"];
"1001121" [label="(Call,psg->sg[i].addr = cpu_to_le32(addr & 0xffffffff))"];
"1001133" [label="(Call,byte_count += usg->sg[i].count)"];
"1001326" [label="(Call,cpu_to_le32(byte_count))"];
"1001322" [label="(Call,srbcmd->count = cpu_to_le32(byte_count))"];
"1001150" [label="(Call,cpu_to_le32(usg->sg[i].count))"];
"1000987" [label="(Call,usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1001142" [label="(Call,psg->sg[i].count = cpu_to_le32(usg->sg[i].count))"];
"1001207" [label="(Call,kmalloc(upsg->sg[i].count, GFP_KERNEL))"];
"1001205" [label="(Call,p = kmalloc(upsg->sg[i].count, GFP_KERNEL))"];
"1001217" [label="(Call,!p)"];
"1001240" [label="(Call,sg_list[i] = p)"];
"1001254" [label="(Call,copy_from_user(p, sg_user[i],\n\t\t\t\t\t\t\tupsg->sg[i].count))"];
"1001274" [label="(Call,pci_map_single(dev->pdev, p,\n\t\t\t\t\tupsg->sg[i].count, data_dir))"];
"1001272" [label="(Call,addr = pci_map_single(dev->pdev, p,\n\t\t\t\t\tupsg->sg[i].count, data_dir))"];
"1001295" [label="(Call,cpu_to_le32(addr))"];
"1001287" [label="(Call,psg->sg[i].addr = cpu_to_le32(addr))"];
"1001297" [label="(Call,byte_count += upsg->sg[i].count)"];
"1001314" [label="(Call,cpu_to_le32(upsg->sg[i].count))"];
"1001175" [label="(Call,upsg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1001306" [label="(Call,psg->sg[i].count = cpu_to_le32(upsg->sg[i].count))"];
"1000884" [label="(Identifier,psg)"];
"1000963" [label="(Identifier,actual_fibsize64)"];
"1000846" [label="(Identifier,rcode)"];
"1000935" [label="(Identifier,status)"];
"1000938" [label="(Identifier,srbfib)"];
"1000906" [label="(Identifier,psg)"];
"1000857" [label="(Call,usg->sg[i].count)"];
"1000600" [label="(Identifier,sg_indx)"];
"1001151" [label="(Call,usg->sg[i].count)"];
"1000964" [label="(Identifier,fibsize)"];
"1000851" [label="(Identifier,addr)"];
"1000962" [label="(Call,actual_fibsize64 == fibsize)"];
"1000844" [label="(Identifier,usg)"];
"1000940" [label="(Identifier,FsaNormal)"];
"1000126" [label="(Call,*user_srbcmd = NULL)"];
"1000968" [label="(Identifier,usg)"];
"1001440" [label="(Call,sizeof(struct aac_srb_reply))"];
"1001087" [label="(ControlStructure,if(copy_from_user(p,sg_user[i],usg->sg[i].count)))"];
"1001338" [label="(Call,aac_fib_send(ScsiPortCommand, srbfib, actual_fibsize, FsaNormal, 1, 1, NULL, NULL))"];
"1000429" [label="(Identifier,fibsize)"];
"1000521" [label="(Call,dev->scsi_host_ptr->max_sectors << 9)"];
"1000708" [label="(ControlStructure,if (!usg))"];
"1001359" [label="(Call,status != 0)"];
"1001102" [label="(Identifier,rcode)"];
"1000642" [label="(Call,psg->sg[i].addr[0])"];
"1000244" [label="(Call,user_srbcmd = kmalloc(fibsize, GFP_KERNEL))"];
"1000258" [label="(ControlStructure,if(copy_from_user(user_srbcmd, user_srb,fibsize)))"];
"1000270" [label="(Identifier,user_reply)"];
"1000537" [label="(Call,kmalloc(upsg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1001020" [label="(Call,usg->sg[i].count)"];
"1000463" [label="(Block,)"];
"1001360" [label="(Identifier,status)"];
"1000486" [label="(Block,)"];
"1001162" [label="(Identifier,i)"];
"1000875" [label="(Call,cpu_to_le32(addr & 0xffffffff))"];
"1001354" [label="(Identifier,rcode)"];
"1000653" [label="(Identifier,addr)"];
"1001310" [label="(Identifier,psg)"];
"1000652" [label="(Call,addr & 0xffffffff)"];
"1000208" [label="(Call,memset(sg_list, 0, sizeof(sg_list)))"];
"1001470" [label="(Block,)"];
"1000247" [label="(Identifier,fibsize)"];
"1001297" [label="(Call,byte_count += upsg->sg[i].count)"];
"1000246" [label="(Call,kmalloc(fibsize, GFP_KERNEL))"];
"1000628" [label="(Call,pci_map_single(dev->pdev, p, upsg->sg[i].count, data_dir))"];
"1001453" [label="(Identifier,i)"];
"1000707" [label="(Identifier,GFP_KERNEL)"];
"1000870" [label="(Identifier,psg)"];
"1000850" [label="(Call,addr = pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1000595" [label="(Call,sg_list[i])"];
"1000928" [label="(Identifier,psg)"];
"1000671" [label="(Call,upsg->sg[i].count)"];
"1001146" [label="(Identifier,psg)"];
"1000943" [label="(Identifier,NULL)"];
"1001448" [label="(JumpTarget,cleanup:)"];
"1001279" [label="(Call,upsg->sg[i].count)"];
"1000893" [label="(Call,byte_count += usg->sg[i].count)"];
"1000405" [label="(Call,actual_fibsize64 = actual_fibsize + (user_srbcmd->sg.count & 0xff) *\n\t  (sizeof(struct sgentry64) - sizeof(struct sgentry)))"];
"1001306" [label="(Call,psg->sg[i].count = cpu_to_le32(upsg->sg[i].count))"];
"1000231" [label="(Identifier,fibsize)"];
"1000233" [label="(Call,dev->max_fib_size)"];
"1000665" [label="(Call,cpu_to_le32(addr>>32))"];
"1001339" [label="(Identifier,ScsiPortCommand)"];
"1000598" [label="(Identifier,p)"];
"1000877" [label="(Identifier,addr)"];
"1000729" [label="(Identifier,actual_fibsize64)"];
"1001477" [label="(MethodReturn,static int)"];
"1000229" [label="(ControlStructure,if (fibsize > (dev->max_fib_size - sizeof(struct aac_fibhdr))))"];
"1000273" [label="(Identifier,fibsize)"];
"1000262" [label="(Identifier,fibsize)"];
"1001337" [label="(Identifier,status)"];
"1000865" [label="(Call,psg->sg[i].addr[0] = cpu_to_le32(addr & 0xffffffff))"];
"1000902" [label="(Call,psg->sg[i].count = cpu_to_le32(usg->sg[i].count))"];
"1001150" [label="(Call,cpu_to_le32(usg->sg[i].count))"];
"1000269" [label="(Call,user_reply = arg+fibsize)"];
"1001183" [label="(Call,(dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1000770" [label="(Call,kfree(usg))"];
"1000835" [label="(Call,upsg->sg[i].count)"];
"1000505" [label="(Call,upsg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1001205" [label="(Call,p = kmalloc(upsg->sg[i].count, GFP_KERNEL))"];
"1000895" [label="(Call,usg->sg[i].count)"];
"1001075" [label="(Call,sg_list[i])"];
"1001170" [label="(Identifier,i)"];
"1000728" [label="(Identifier,actual_fibsize)"];
"1000452" [label="(Call,byte_count = 0)"];
"1001207" [label="(Call,kmalloc(upsg->sg[i].count, GFP_KERNEL))"];
"1000822" [label="(Identifier,sg_indx)"];
"1000801" [label="(Call,sg_user[i] = (void __user *)(uintptr_t)usg->sg[i].addr)"];
"1000987" [label="(Call,usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1000546" [label="(Identifier,GFP_KERNEL)"];
"1000842" [label="(Block,)"];
"1000609" [label="(Identifier,p)"];
"1001132" [label="(Literal,0xffffffff)"];
"1000265" [label="(Identifier,rcode)"];
"1000795" [label="(Identifier,usg)"];
"1001326" [label="(Call,cpu_to_le32(byte_count))"];
"1000892" [label="(Literal,32)"];
"1000428" [label="(Identifier,actual_fibsize64)"];
"1001415" [label="(ControlStructure,if(copy_to_user(sg_user[i], sg_list[i], byte_count)))"];
"1001088" [label="(Call,copy_from_user(p,sg_user[i],usg->sg[i].count))"];
"1000640" [label="(Identifier,data_dir)"];
"1001296" [label="(Identifier,addr)"];
"1001432" [label="(Call,(struct aac_srb_reply *) fib_data(srbfib))"];
"1000206" [label="(Call,fib_data(srbfib))"];
"1000843" [label="(Call,kfree (usg))"];
"1000424" [label="(Call,actual_fibsize != fibsize)"];
"1000699" [label="(Call,kmalloc(actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap), GFP_KERNEL))"];
"1001255" [label="(Identifier,p)"];
"1000485" [label="(Identifier,fibsize)"];
"1000890" [label="(Call,addr>>32)"];
"1001473" [label="(Call,aac_fib_free(srbfib))"];
"1000678" [label="(Call,psg->sg[i].count = cpu_to_le32(upsg->sg[i].count))"];
"1001426" [label="(Identifier,rcode)"];
"1001430" [label="(Call,reply = (struct aac_srb_reply *) fib_data(srbfib))"];
"1000820" [label="(Identifier,p)"];
"1000251" [label="(Identifier,user_srbcmd)"];
"1000779" [label="(Call,kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000789" [label="(Identifier,__GFP_DMA)"];
"1001383" [label="(Call,byte_count = le32_to_cpu(\n\t\t\t  (dev->adapter_info.options & AAC_OPT_SGMAP_HOST64)\n\t\t\t      ? ((struct sgmap64*)&srbcmd->sg)->sg[i].count\n\t\t\t      : srbcmd->sg.sg[i].count))"];
"1000666" [label="(Call,addr>>32)"];
"1000626" [label="(Call,addr = pci_map_single(dev->pdev, p, upsg->sg[i].count, data_dir))"];
"1001344" [label="(Literal,1)"];
"1000558" [label="(Identifier,addr)"];
"1001435" [label="(Identifier,srbfib)"];
"1000961" [label="(ControlStructure,if (actual_fibsize64 == fibsize))"];
"1001298" [label="(Identifier,byte_count)"];
"1001314" [label="(Call,cpu_to_le32(upsg->sg[i].count))"];
"1000422" [label="(ControlStructure,if ((actual_fibsize != fibsize) && (actual_fibsize64 != fibsize)))"];
"1001254" [label="(Call,copy_from_user(p, sg_user[i],\n\t\t\t\t\t\t\tupsg->sg[i].count))"];
"1001031" [label="(Call,!p)"];
"1001345" [label="(Identifier,NULL)"];
"1000622" [label="(Identifier,rcode)"];
"1000423" [label="(Call,(actual_fibsize != fibsize) && (actual_fibsize64 != fibsize))"];
"1000670" [label="(Identifier,byte_count)"];
"1000934" [label="(Call,status = aac_fib_send(ScsiPortCommand64, srbfib, actual_fibsize, FsaNormal, 1, 1,NULL,NULL))"];
"1000941" [label="(Literal,1)"];
"1000727" [label="(Call,actual_fibsize = actual_fibsize64)"];
"1000787" [label="(Call,GFP_KERNEL|__GFP_DMA)"];
"1000721" [label="(Identifier,actual_fibsize)"];
"1000831" [label="(Identifier,p)"];
"1001275" [label="(Call,dev->pdev)"];
"1000718" [label="(Identifier,usg)"];
"1001201" [label="(Identifier,rcode)"];
"1000741" [label="(Block,)"];
"1001108" [label="(Call,pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1000488" [label="(Identifier,actual_fibsize)"];
"1000538" [label="(Call,upsg->sg[i].count)"];
"1001122" [label="(Call,psg->sg[i].addr)"];
"1001347" [label="(ControlStructure,if (status == -ERESTARTSYS))"];
"1000745" [label="(Call,usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1001474" [label="(Identifier,srbfib)"];
"1000753" [label="(Call,(dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1001107" [label="(Identifier,addr)"];
"1001439" [label="(Identifier,reply)"];
"1000553" [label="(Identifier,rcode)"];
"1000803" [label="(Identifier,sg_user)"];
"1001013" [label="(Identifier,rcode)"];
"1001364" [label="(Identifier,rcode)"];
"1000925" [label="(Identifier,byte_count)"];
"1000117" [label="(MethodParameterIn,void __user * arg)"];
"1000698" [label="(Identifier,usg)"];
"1000484" [label="(Identifier,actual_fibsize64)"];
"1000682" [label="(Identifier,psg)"];
"1001315" [label="(Call,upsg->sg[i].count)"];
"1001431" [label="(Identifier,reply)"];
"1001129" [label="(Call,cpu_to_le32(addr & 0xffffffff))"];
"1000547" [label="(Identifier,__GFP_DMA)"];
"1000944" [label="(Identifier,NULL)"];
"1001142" [label="(Call,psg->sg[i].count = cpu_to_le32(usg->sg[i].count))"];
"1000232" [label="(Call,dev->max_fib_size - sizeof(struct aac_fibhdr))"];
"1000701" [label="(Identifier,actual_fibsize)"];
"1000717" [label="(Call,memcpy (usg, upsg, actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)))"];
"1000254" [label="(Identifier,rcode)"];
"1000773" [label="(Identifier,rcode)"];
"1000245" [label="(Identifier,user_srbcmd)"];
"1001109" [label="(Call,dev->pdev)"];
"1000272" [label="(Identifier,arg)"];
"1000271" [label="(Call,arg+fibsize)"];
"1000937" [label="(Identifier,ScsiPortCommand64)"];
"1001246" [label="(Identifier,sg_indx)"];
"1000702" [label="(Call,sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap))"];
"1000777" [label="(Call,p = kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1001030" [label="(ControlStructure,if(!p))"];
"1000910" [label="(Call,cpu_to_le32(usg->sg[i].count))"];
"1001349" [label="(Identifier,status)"];
"1000719" [label="(Identifier,upsg)"];
"1000778" [label="(Identifier,p)"];
"1001174" [label="(ControlStructure,if (upsg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)))"];
"1000946" [label="(Block,)"];
"1000746" [label="(Call,usg->sg[i].count)"];
"1001278" [label="(Identifier,p)"];
"1000788" [label="(Identifier,GFP_KERNEL)"];
"1000942" [label="(Literal,1)"];
"1001003" [label="(Call,dev->scsi_host_ptr->max_sectors << 9)"];
"1001175" [label="(Call,upsg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1001272" [label="(Call,addr = pci_map_single(dev->pdev, p,\n\t\t\t\t\tupsg->sg[i].count, data_dir))"];
"1001295" [label="(Call,cpu_to_le32(addr))"];
"1000379" [label="(Call,ARRAY_SIZE(sg_list))"];
"1001462" [label="(Call,sg_list[i])"];
"1000118" [label="(Block,)"];
"1000608" [label="(Call,copy_from_user(p,sg_user[i],upsg->sg[i].count))"];
"1001288" [label="(Call,psg->sg[i].addr)"];
"1001135" [label="(Call,usg->sg[i].count)"];
"1000641" [label="(Call,psg->sg[i].addr[0] = cpu_to_le32(addr & 0xffffffff))"];
"1000797" [label="(Identifier,rcode)"];
"1001225" [label="(Call,sg_user[i] = (void __user *)(uintptr_t)upsg->sg[i].addr)"];
"1000856" [label="(Identifier,p)"];
"1001436" [label="(ControlStructure,if(copy_to_user(user_reply,reply,sizeof(struct aac_srb_reply))))"];
"1001206" [label="(Identifier,p)"];
"1000550" [label="(Identifier,p)"];
"1001191" [label="(Call,dev->scsi_host_ptr->max_sectors << 9)"];
"1000697" [label="(Call,usg = kmalloc(actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap), GFP_KERNEL))"];
"1001018" [label="(Identifier,p)"];
"1001346" [label="(Identifier,NULL)"];
"1001259" [label="(Call,upsg->sg[i].count)"];
"1000610" [label="(Call,sg_user[i])"];
"1001106" [label="(Call,addr = pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1001348" [label="(Call,status == -ERESTARTSYS)"];
"1001017" [label="(Call,p = kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1001078" [label="(Identifier,p)"];
"1001450" [label="(Identifier,user_srbcmd)"];
"1001340" [label="(Identifier,srbfib)"];
"1001133" [label="(Call,byte_count += usg->sg[i].count)"];
"1001216" [label="(ControlStructure,if (!p))"];
"1001130" [label="(Call,addr & 0xffffffff)"];
"1000894" [label="(Identifier,byte_count)"];
"1001067" [label="(Call,sg_user[i] = (void __user *)addr)"];
"1000918" [label="(Call,kfree (usg))"];
"1001176" [label="(Call,upsg->sg[i].count)"];
"1000667" [label="(Identifier,addr)"];
"1000646" [label="(Identifier,psg)"];
"1001090" [label="(Call,sg_user[i])"];
"1000531" [label="(Identifier,rcode)"];
"1000632" [label="(Identifier,p)"];
"1001268" [label="(Identifier,rcode)"];
"1000425" [label="(Identifier,actual_fibsize)"];
"1000594" [label="(Call,sg_list[i] = p)"];
"1000679" [label="(Call,psg->sg[i].count)"];
"1000230" [label="(Call,fibsize > (dev->max_fib_size - sizeof(struct aac_fibhdr)))"];
"1000585" [label="(Call,sg_user[i] = (void __user *)(uintptr_t)addr)"];
"1001350" [label="(Call,-ERESTARTSYS)"];
"1000249" [label="(ControlStructure,if (!user_srbcmd))"];
"1000492" [label="(Identifier,i)"];
"1001358" [label="(ControlStructure,if (status != 0))"];
"1000889" [label="(Call,cpu_to_le32(addr>>32))"];
"1001089" [label="(Identifier,p)"];
"1000921" [label="(Call,srbcmd->count)"];
"1001370" [label="(Identifier,flags)"];
"1000939" [label="(Identifier,actual_fibsize)"];
"1000866" [label="(Call,psg->sg[i].addr[0])"];
"1001472" [label="(Identifier,srbfib)"];
"1000771" [label="(Identifier,usg)"];
"1001460" [label="(Block,)"];
"1000487" [label="(Call,actual_fibsize = actual_fibsize64)"];
"1000986" [label="(ControlStructure,if (usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)))"];
"1001420" [label="(Call,sg_list[i])"];
"1001476" [label="(Identifier,rcode)"];
"1001080" [label="(Identifier,sg_indx)"];
"1001274" [label="(Call,pci_map_single(dev->pdev, p,\n\t\t\t\t\tupsg->sg[i].count, data_dir))"];
"1001112" [label="(Identifier,p)"];
"1000983" [label="(Block,)"];
"1001459" [label="(Identifier,i)"];
"1001438" [label="(Identifier,user_reply)"];
"1000817" [label="(Call,sg_list[i])"];
"1001437" [label="(Call,copy_to_user(user_reply,reply,sizeof(struct aac_srb_reply)))"];
"1001330" [label="(Identifier,psg)"];
"1001143" [label="(Call,psg->sg[i].count)"];
"1000482" [label="(ControlStructure,if (actual_fibsize64 == fibsize))"];
"1000713" [label="(Identifier,rcode)"];
"1000919" [label="(Identifier,usg)"];
"1000489" [label="(Identifier,actual_fibsize64)"];
"1000438" [label="(Call,data_dir == DMA_NONE)"];
"1000654" [label="(Literal,0xffffffff)"];
"1000535" [label="(Call,p = kmalloc(upsg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000878" [label="(Literal,0xffffffff)"];
"1000911" [label="(Call,usg->sg[i].count)"];
"1001215" [label="(Identifier,GFP_KERNEL)"];
"1001423" [label="(Identifier,byte_count)"];
"1000852" [label="(Call,pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1000549" [label="(Call,!p)"];
"1000744" [label="(ControlStructure,if (usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)))"];
"1001035" [label="(Identifier,rcode)"];
"1001286" [label="(Identifier,data_dir)"];
"1000792" [label="(Identifier,p)"];
"1001336" [label="(Call,status = aac_fib_send(ScsiPortCommand, srbfib, actual_fibsize, FsaNormal, 1, 1, NULL, NULL))"];
"1001417" [label="(Call,sg_user[i])"];
"1001244" [label="(Identifier,p)"];
"1001434" [label="(Call,fib_data(srbfib))"];
"1000130" [label="(Call,*user_srb = arg)"];
"1001125" [label="(Identifier,psg)"];
"1000432" [label="(Identifier,rcode)"];
"1000500" [label="(Identifier,i)"];
"1000780" [label="(Call,usg->sg[i].count)"];
"1000504" [label="(ControlStructure,if (upsg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)))"];
"1000832" [label="(Call,sg_user[i])"];
"1000995" [label="(Call,(dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1001028" [label="(Identifier,GFP_KERNEL)"];
"1001343" [label="(Literal,1)"];
"1000261" [label="(Identifier,user_srb)"];
"1001217" [label="(Call,!p)"];
"1000248" [label="(Identifier,GFP_KERNEL)"];
"1000536" [label="(Identifier,p)"];
"1000387" [label="(Call,actual_fibsize = sizeof(struct aac_srb) - sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry)))"];
"1000988" [label="(Call,usg->sg[i].count)"];
"1000740" [label="(Identifier,i)"];
"1001461" [label="(Call,kfree(sg_list[i]))"];
"1001227" [label="(Identifier,sg_user)"];
"1000880" [label="(Call,psg->sg[i].addr[1])"];
"1000613" [label="(Call,upsg->sg[i].count)"];
"1001322" [label="(Call,srbcmd->count = cpu_to_le32(byte_count))"];
"1001131" [label="(Identifier,addr)"];
"1000922" [label="(Identifier,srbcmd)"];
"1000633" [label="(Call,upsg->sg[i].count)"];
"1000864" [label="(Identifier,data_dir)"];
"1001027" [label="(Call,GFP_KERNEL|__GFP_DMA)"];
"1000426" [label="(Identifier,fibsize)"];
"1000853" [label="(Call,dev->pdev)"];
"1000656" [label="(Call,psg->sg[i].addr[1])"];
"1001074" [label="(Call,sg_list[i] = p)"];
"1000686" [label="(Call,cpu_to_le32(upsg->sg[i].count))"];
"1000651" [label="(Call,cpu_to_le32(addr & 0xffffffff))"];
"1001444" [label="(Identifier,rcode)"];
"1000829" [label="(ControlStructure,if(copy_from_user(p,sg_user[i],upsg->sg[i].count)))"];
"1000710" [label="(Identifier,usg)"];
"1000655" [label="(Call,psg->sg[i].addr[1] = cpu_to_le32(addr>>32))"];
"1000427" [label="(Call,actual_fibsize64 != fibsize)"];
"1000982" [label="(Identifier,i)"];
"1001134" [label="(Identifier,byte_count)"];
"1001240" [label="(Call,sg_list[i] = p)"];
"1001256" [label="(Call,sg_user[i])"];
"1001323" [label="(Call,srbcmd->count)"];
"1001208" [label="(Call,upsg->sg[i].count)"];
"1000830" [label="(Call,copy_from_user(p,sg_user[i],upsg->sg[i].count))"];
"1000548" [label="(ControlStructure,if(!p))"];
"1000545" [label="(Call,GFP_KERNEL|__GFP_DMA)"];
"1000761" [label="(Call,dev->scsi_host_ptr->max_sectors << 9)"];
"1000501" [label="(Block,)"];
"1000700" [label="(Call,actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap))"];
"1001241" [label="(Call,sg_list[i])"];
"1000816" [label="(Call,sg_list[i] = p)"];
"1001307" [label="(Call,psg->sg[i].count)"];
"1000903" [label="(Call,psg->sg[i].count)"];
"1001019" [label="(Call,kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000439" [label="(Identifier,data_dir)"];
"1001361" [label="(Literal,0)"];
"1000720" [label="(Call,actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap))"];
"1000669" [label="(Call,byte_count += upsg->sg[i].count)"];
"1000769" [label="(Block,)"];
"1001287" [label="(Call,psg->sg[i].addr = cpu_to_le32(addr))"];
"1001113" [label="(Call,usg->sg[i].count)"];
"1000891" [label="(Identifier,addr)"];
"1001121" [label="(Call,psg->sg[i].addr = cpu_to_le32(addr & 0xffffffff))"];
"1000722" [label="(Call,sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap))"];
"1000629" [label="(Call,dev->pdev)"];
"1000250" [label="(Call,!user_srbcmd)"];
"1000513" [label="(Call,(dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1000920" [label="(Call,srbcmd->count = cpu_to_le32(byte_count))"];
"1000695" [label="(Block,)"];
"1001253" [label="(ControlStructure,if(copy_from_user(p, sg_user[i],\n\t\t\t\t\t\t\tupsg->sg[i].count)))"];
"1000240" [label="(Identifier,rcode)"];
"1000260" [label="(Identifier,user_srbcmd)"];
"1000791" [label="(Call,!p)"];
"1001381" [label="(Identifier,i)"];
"1000607" [label="(ControlStructure,if(copy_from_user(p,sg_user[i],upsg->sg[i].count)))"];
"1001093" [label="(Call,usg->sg[i].count)"];
"1001291" [label="(Identifier,psg)"];
"1001342" [label="(Identifier,FsaNormal)"];
"1001040" [label="(Identifier,addr)"];
"1001171" [label="(Block,)"];
"1000793" [label="(Block,)"];
"1000660" [label="(Identifier,psg)"];
"1000879" [label="(Call,psg->sg[i].addr[1] = cpu_to_le32(addr>>32))"];
"1001029" [label="(Identifier,__GFP_DMA)"];
"1000924" [label="(Call,cpu_to_le32(byte_count))"];
"1000275" [label="(Identifier,flags)"];
"1000506" [label="(Call,upsg->sg[i].count)"];
"1001221" [label="(Identifier,rcode)"];
"1000627" [label="(Identifier,addr)"];
"1001416" [label="(Call,copy_to_user(sg_user[i], sg_list[i], byte_count))"];
"1000465" [label="(Call,* upsg = (struct user_sgmap64*)&user_srbcmd->sg)"];
"1000790" [label="(ControlStructure,if(!p))"];
"1000236" [label="(Call,sizeof(struct aac_fibhdr))"];
"1001327" [label="(Identifier,byte_count)"];
"1000483" [label="(Call,actual_fibsize64 == fibsize)"];
"1000136" [label="(Call,fibsize = 0)"];
"1001218" [label="(Identifier,p)"];
"1001032" [label="(Identifier,p)"];
"1000876" [label="(Call,addr & 0xffffffff)"];
"1001273" [label="(Identifier,addr)"];
"1001299" [label="(Call,upsg->sg[i].count)"];
"1000794" [label="(Call,kfree(usg))"];
"1001341" [label="(Identifier,actual_fibsize)"];
"1001120" [label="(Identifier,data_dir)"];
"1001449" [label="(Call,kfree(user_srbcmd))"];
"1000259" [label="(Call,copy_from_user(user_srbcmd, user_srb,fibsize))"];
"1000709" [label="(Call,!usg)"];
"1000668" [label="(Literal,32)"];
"1001471" [label="(Call,aac_fib_complete(srbfib))"];
"1000732" [label="(Identifier,i)"];
"1000687" [label="(Call,upsg->sg[i].count)"];
"1000936" [label="(Call,aac_fib_send(ScsiPortCommand64, srbfib, actual_fibsize, FsaNormal, 1, 1,NULL,NULL))"];
"1000232" -> "1000230"  [label="AST: "];
"1000232" -> "1000236"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000236" -> "1000232"  [label="AST: "];
"1000230" -> "1000232"  [label="CFG: "];
"1000232" -> "1001477"  [label="DDG: dev->max_fib_size"];
"1000232" -> "1000230"  [label="DDG: dev->max_fib_size"];
"1000230" -> "1000229"  [label="AST: "];
"1000231" -> "1000230"  [label="AST: "];
"1000240" -> "1000230"  [label="CFG: "];
"1000245" -> "1000230"  [label="CFG: "];
"1000230" -> "1001477"  [label="DDG: fibsize"];
"1000230" -> "1001477"  [label="DDG: dev->max_fib_size - sizeof(struct aac_fibhdr)"];
"1000230" -> "1001477"  [label="DDG: fibsize > (dev->max_fib_size - sizeof(struct aac_fibhdr))"];
"1000136" -> "1000230"  [label="DDG: fibsize"];
"1000230" -> "1000246"  [label="DDG: fibsize"];
"1000246" -> "1000244"  [label="AST: "];
"1000246" -> "1000248"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000248" -> "1000246"  [label="AST: "];
"1000244" -> "1000246"  [label="CFG: "];
"1000246" -> "1001477"  [label="DDG: GFP_KERNEL"];
"1000246" -> "1001477"  [label="DDG: fibsize"];
"1000246" -> "1000244"  [label="DDG: fibsize"];
"1000246" -> "1000244"  [label="DDG: GFP_KERNEL"];
"1000246" -> "1000259"  [label="DDG: fibsize"];
"1000246" -> "1000545"  [label="DDG: GFP_KERNEL"];
"1000246" -> "1000699"  [label="DDG: GFP_KERNEL"];
"1000246" -> "1001027"  [label="DDG: GFP_KERNEL"];
"1000246" -> "1001207"  [label="DDG: GFP_KERNEL"];
"1000244" -> "1000118"  [label="AST: "];
"1000245" -> "1000244"  [label="AST: "];
"1000251" -> "1000244"  [label="CFG: "];
"1000244" -> "1001477"  [label="DDG: kmalloc(fibsize, GFP_KERNEL)"];
"1000244" -> "1000250"  [label="DDG: user_srbcmd"];
"1000250" -> "1000249"  [label="AST: "];
"1000250" -> "1000251"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000254" -> "1000250"  [label="CFG: "];
"1000260" -> "1000250"  [label="CFG: "];
"1000250" -> "1001477"  [label="DDG: !user_srbcmd"];
"1000250" -> "1000259"  [label="DDG: user_srbcmd"];
"1000250" -> "1001449"  [label="DDG: user_srbcmd"];
"1000259" -> "1000258"  [label="AST: "];
"1000259" -> "1000262"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000259"  [label="AST: "];
"1000262" -> "1000259"  [label="AST: "];
"1000265" -> "1000259"  [label="CFG: "];
"1000270" -> "1000259"  [label="CFG: "];
"1000259" -> "1001477"  [label="DDG: copy_from_user(user_srbcmd, user_srb,fibsize)"];
"1000259" -> "1001477"  [label="DDG: fibsize"];
"1000259" -> "1001477"  [label="DDG: user_srb"];
"1000130" -> "1000259"  [label="DDG: user_srb"];
"1000259" -> "1000269"  [label="DDG: fibsize"];
"1000259" -> "1000271"  [label="DDG: fibsize"];
"1000259" -> "1000424"  [label="DDG: fibsize"];
"1000259" -> "1001449"  [label="DDG: user_srbcmd"];
"1000269" -> "1000118"  [label="AST: "];
"1000269" -> "1000271"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000271" -> "1000269"  [label="AST: "];
"1000275" -> "1000269"  [label="CFG: "];
"1000269" -> "1001477"  [label="DDG: user_reply"];
"1000269" -> "1001477"  [label="DDG: arg+fibsize"];
"1000117" -> "1000269"  [label="DDG: arg"];
"1000269" -> "1001437"  [label="DDG: user_reply"];
"1001437" -> "1001436"  [label="AST: "];
"1001437" -> "1001440"  [label="CFG: "];
"1001438" -> "1001437"  [label="AST: "];
"1001439" -> "1001437"  [label="AST: "];
"1001440" -> "1001437"  [label="AST: "];
"1001444" -> "1001437"  [label="CFG: "];
"1001448" -> "1001437"  [label="CFG: "];
"1001437" -> "1001477"  [label="DDG: reply"];
"1001437" -> "1001477"  [label="DDG: copy_to_user(user_reply,reply,sizeof(struct aac_srb_reply))"];
"1001437" -> "1001477"  [label="DDG: user_reply"];
"1001430" -> "1001437"  [label="DDG: reply"];
"1000271" -> "1000273"  [label="CFG: "];
"1000272" -> "1000271"  [label="AST: "];
"1000273" -> "1000271"  [label="AST: "];
"1000271" -> "1001477"  [label="DDG: fibsize"];
"1000271" -> "1001477"  [label="DDG: arg"];
"1000117" -> "1000271"  [label="DDG: arg"];
"1000424" -> "1000423"  [label="AST: "];
"1000424" -> "1000426"  [label="CFG: "];
"1000425" -> "1000424"  [label="AST: "];
"1000426" -> "1000424"  [label="AST: "];
"1000428" -> "1000424"  [label="CFG: "];
"1000423" -> "1000424"  [label="CFG: "];
"1000424" -> "1001477"  [label="DDG: fibsize"];
"1000424" -> "1001477"  [label="DDG: actual_fibsize"];
"1000424" -> "1000423"  [label="DDG: actual_fibsize"];
"1000424" -> "1000423"  [label="DDG: fibsize"];
"1000387" -> "1000424"  [label="DDG: actual_fibsize"];
"1000424" -> "1000427"  [label="DDG: fibsize"];
"1000424" -> "1000483"  [label="DDG: fibsize"];
"1000424" -> "1000700"  [label="DDG: actual_fibsize"];
"1000424" -> "1000962"  [label="DDG: fibsize"];
"1000424" -> "1001338"  [label="DDG: actual_fibsize"];
"1000423" -> "1000422"  [label="AST: "];
"1000423" -> "1000427"  [label="CFG: "];
"1000427" -> "1000423"  [label="AST: "];
"1000432" -> "1000423"  [label="CFG: "];
"1000439" -> "1000423"  [label="CFG: "];
"1000423" -> "1001477"  [label="DDG: actual_fibsize64 != fibsize"];
"1000423" -> "1001477"  [label="DDG: (actual_fibsize != fibsize) && (actual_fibsize64 != fibsize)"];
"1000423" -> "1001477"  [label="DDG: actual_fibsize != fibsize"];
"1000427" -> "1000423"  [label="DDG: actual_fibsize64"];
"1000427" -> "1000423"  [label="DDG: fibsize"];
"1000427" -> "1000429"  [label="CFG: "];
"1000428" -> "1000427"  [label="AST: "];
"1000429" -> "1000427"  [label="AST: "];
"1000427" -> "1001477"  [label="DDG: actual_fibsize64"];
"1000427" -> "1001477"  [label="DDG: fibsize"];
"1000405" -> "1000427"  [label="DDG: actual_fibsize64"];
"1000427" -> "1000483"  [label="DDG: actual_fibsize64"];
"1000427" -> "1000483"  [label="DDG: fibsize"];
"1000427" -> "1000962"  [label="DDG: actual_fibsize64"];
"1000427" -> "1000962"  [label="DDG: fibsize"];
"1000483" -> "1000482"  [label="AST: "];
"1000483" -> "1000485"  [label="CFG: "];
"1000484" -> "1000483"  [label="AST: "];
"1000485" -> "1000483"  [label="AST: "];
"1000488" -> "1000483"  [label="CFG: "];
"1000698" -> "1000483"  [label="CFG: "];
"1000483" -> "1001477"  [label="DDG: actual_fibsize64 == fibsize"];
"1000483" -> "1001477"  [label="DDG: fibsize"];
"1000483" -> "1001477"  [label="DDG: actual_fibsize64"];
"1000405" -> "1000483"  [label="DDG: actual_fibsize64"];
"1000483" -> "1000487"  [label="DDG: actual_fibsize64"];
"1000483" -> "1000727"  [label="DDG: actual_fibsize64"];
"1000487" -> "1000486"  [label="AST: "];
"1000487" -> "1000489"  [label="CFG: "];
"1000488" -> "1000487"  [label="AST: "];
"1000489" -> "1000487"  [label="AST: "];
"1000492" -> "1000487"  [label="CFG: "];
"1000487" -> "1001477"  [label="DDG: actual_fibsize64"];
"1000487" -> "1001477"  [label="DDG: actual_fibsize"];
"1000487" -> "1000936"  [label="DDG: actual_fibsize"];
"1000936" -> "1000934"  [label="AST: "];
"1000936" -> "1000944"  [label="CFG: "];
"1000937" -> "1000936"  [label="AST: "];
"1000938" -> "1000936"  [label="AST: "];
"1000939" -> "1000936"  [label="AST: "];
"1000940" -> "1000936"  [label="AST: "];
"1000941" -> "1000936"  [label="AST: "];
"1000942" -> "1000936"  [label="AST: "];
"1000943" -> "1000936"  [label="AST: "];
"1000944" -> "1000936"  [label="AST: "];
"1000934" -> "1000936"  [label="CFG: "];
"1000936" -> "1001477"  [label="DDG: actual_fibsize"];
"1000936" -> "1001477"  [label="DDG: ScsiPortCommand64"];
"1000936" -> "1001477"  [label="DDG: srbfib"];
"1000936" -> "1001477"  [label="DDG: NULL"];
"1000936" -> "1001477"  [label="DDG: FsaNormal"];
"1000936" -> "1000934"  [label="DDG: NULL"];
"1000936" -> "1000934"  [label="DDG: 1"];
"1000936" -> "1000934"  [label="DDG: srbfib"];
"1000936" -> "1000934"  [label="DDG: FsaNormal"];
"1000936" -> "1000934"  [label="DDG: actual_fibsize"];
"1000936" -> "1000934"  [label="DDG: ScsiPortCommand64"];
"1000206" -> "1000936"  [label="DDG: srbfib"];
"1000727" -> "1000936"  [label="DDG: actual_fibsize"];
"1000936" -> "1001434"  [label="DDG: srbfib"];
"1000936" -> "1001471"  [label="DDG: srbfib"];
"1000934" -> "1000463"  [label="AST: "];
"1000935" -> "1000934"  [label="AST: "];
"1001349" -> "1000934"  [label="CFG: "];
"1000934" -> "1001477"  [label="DDG: aac_fib_send(ScsiPortCommand64, srbfib, actual_fibsize, FsaNormal, 1, 1,NULL,NULL)"];
"1000934" -> "1001348"  [label="DDG: status"];
"1001348" -> "1001347"  [label="AST: "];
"1001348" -> "1001350"  [label="CFG: "];
"1001349" -> "1001348"  [label="AST: "];
"1001350" -> "1001348"  [label="AST: "];
"1001354" -> "1001348"  [label="CFG: "];
"1001360" -> "1001348"  [label="CFG: "];
"1001348" -> "1001477"  [label="DDG: status"];
"1001348" -> "1001477"  [label="DDG: status == -ERESTARTSYS"];
"1001336" -> "1001348"  [label="DDG: status"];
"1001350" -> "1001348"  [label="DDG: ERESTARTSYS"];
"1001348" -> "1001359"  [label="DDG: status"];
"1001359" -> "1001358"  [label="AST: "];
"1001359" -> "1001361"  [label="CFG: "];
"1001360" -> "1001359"  [label="AST: "];
"1001361" -> "1001359"  [label="AST: "];
"1001364" -> "1001359"  [label="CFG: "];
"1001370" -> "1001359"  [label="CFG: "];
"1001359" -> "1001477"  [label="DDG: status != 0"];
"1001359" -> "1001477"  [label="DDG: status"];
"1001434" -> "1001432"  [label="AST: "];
"1001434" -> "1001435"  [label="CFG: "];
"1001435" -> "1001434"  [label="AST: "];
"1001432" -> "1001434"  [label="CFG: "];
"1001434" -> "1001477"  [label="DDG: srbfib"];
"1001434" -> "1001432"  [label="DDG: srbfib"];
"1001338" -> "1001434"  [label="DDG: srbfib"];
"1001434" -> "1001471"  [label="DDG: srbfib"];
"1001432" -> "1001430"  [label="AST: "];
"1001433" -> "1001432"  [label="AST: "];
"1001430" -> "1001432"  [label="CFG: "];
"1001432" -> "1001477"  [label="DDG: fib_data(srbfib)"];
"1001432" -> "1001430"  [label="DDG: fib_data(srbfib)"];
"1001430" -> "1000118"  [label="AST: "];
"1001431" -> "1001430"  [label="AST: "];
"1001438" -> "1001430"  [label="CFG: "];
"1001430" -> "1001477"  [label="DDG: (struct aac_srb_reply *) fib_data(srbfib)"];
"1001471" -> "1001470"  [label="AST: "];
"1001471" -> "1001472"  [label="CFG: "];
"1001472" -> "1001471"  [label="AST: "];
"1001474" -> "1001471"  [label="CFG: "];
"1001471" -> "1001477"  [label="DDG: aac_fib_complete(srbfib)"];
"1000206" -> "1001471"  [label="DDG: srbfib"];
"1001338" -> "1001471"  [label="DDG: srbfib"];
"1001471" -> "1001473"  [label="DDG: srbfib"];
"1001473" -> "1001470"  [label="AST: "];
"1001473" -> "1001474"  [label="CFG: "];
"1001474" -> "1001473"  [label="AST: "];
"1001476" -> "1001473"  [label="CFG: "];
"1001473" -> "1001477"  [label="DDG: srbfib"];
"1001473" -> "1001477"  [label="DDG: aac_fib_free(srbfib)"];
"1000727" -> "1000695"  [label="AST: "];
"1000727" -> "1000729"  [label="CFG: "];
"1000728" -> "1000727"  [label="AST: "];
"1000729" -> "1000727"  [label="AST: "];
"1000732" -> "1000727"  [label="CFG: "];
"1000727" -> "1001477"  [label="DDG: actual_fibsize64"];
"1000727" -> "1001477"  [label="DDG: actual_fibsize"];
"1000962" -> "1000961"  [label="AST: "];
"1000962" -> "1000964"  [label="CFG: "];
"1000963" -> "1000962"  [label="AST: "];
"1000964" -> "1000962"  [label="AST: "];
"1000968" -> "1000962"  [label="CFG: "];
"1001162" -> "1000962"  [label="CFG: "];
"1000962" -> "1001477"  [label="DDG: fibsize"];
"1000962" -> "1001477"  [label="DDG: actual_fibsize64 == fibsize"];
"1000962" -> "1001477"  [label="DDG: actual_fibsize64"];
"1000405" -> "1000962"  [label="DDG: actual_fibsize64"];
"1000700" -> "1000699"  [label="AST: "];
"1000700" -> "1000702"  [label="CFG: "];
"1000701" -> "1000700"  [label="AST: "];
"1000702" -> "1000700"  [label="AST: "];
"1000707" -> "1000700"  [label="CFG: "];
"1000700" -> "1001477"  [label="DDG: actual_fibsize"];
"1000700" -> "1001477"  [label="DDG: sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)"];
"1000700" -> "1000699"  [label="DDG: actual_fibsize"];
"1000700" -> "1000699"  [label="DDG: sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)"];
"1000700" -> "1000720"  [label="DDG: actual_fibsize"];
"1000699" -> "1000697"  [label="AST: "];
"1000699" -> "1000707"  [label="CFG: "];
"1000707" -> "1000699"  [label="AST: "];
"1000697" -> "1000699"  [label="CFG: "];
"1000699" -> "1001477"  [label="DDG: actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)"];
"1000699" -> "1001477"  [label="DDG: GFP_KERNEL"];
"1000699" -> "1000697"  [label="DDG: actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)"];
"1000699" -> "1000697"  [label="DDG: GFP_KERNEL"];
"1000699" -> "1000787"  [label="DDG: GFP_KERNEL"];
"1000697" -> "1000695"  [label="AST: "];
"1000698" -> "1000697"  [label="AST: "];
"1000710" -> "1000697"  [label="CFG: "];
"1000697" -> "1001477"  [label="DDG: kmalloc(actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap), GFP_KERNEL)"];
"1000697" -> "1000709"  [label="DDG: usg"];
"1000709" -> "1000708"  [label="AST: "];
"1000709" -> "1000710"  [label="CFG: "];
"1000710" -> "1000709"  [label="AST: "];
"1000713" -> "1000709"  [label="CFG: "];
"1000718" -> "1000709"  [label="CFG: "];
"1000709" -> "1001477"  [label="DDG: !usg"];
"1000709" -> "1001477"  [label="DDG: usg"];
"1000709" -> "1000717"  [label="DDG: usg"];
"1000717" -> "1000695"  [label="AST: "];
"1000717" -> "1000720"  [label="CFG: "];
"1000718" -> "1000717"  [label="AST: "];
"1000719" -> "1000717"  [label="AST: "];
"1000720" -> "1000717"  [label="AST: "];
"1000728" -> "1000717"  [label="CFG: "];
"1000717" -> "1001477"  [label="DDG: memcpy (usg, upsg, actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap))"];
"1000717" -> "1001477"  [label="DDG: actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)"];
"1000717" -> "1001477"  [label="DDG: upsg"];
"1000465" -> "1000717"  [label="DDG: upsg"];
"1000720" -> "1000717"  [label="DDG: actual_fibsize"];
"1000720" -> "1000717"  [label="DDG: sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)"];
"1000717" -> "1000770"  [label="DDG: usg"];
"1000717" -> "1000794"  [label="DDG: usg"];
"1000717" -> "1000843"  [label="DDG: usg"];
"1000717" -> "1000918"  [label="DDG: usg"];
"1000770" -> "1000769"  [label="AST: "];
"1000770" -> "1000771"  [label="CFG: "];
"1000771" -> "1000770"  [label="AST: "];
"1000773" -> "1000770"  [label="CFG: "];
"1000770" -> "1001477"  [label="DDG: kfree(usg)"];
"1000770" -> "1001477"  [label="DDG: usg"];
"1000794" -> "1000793"  [label="AST: "];
"1000794" -> "1000795"  [label="CFG: "];
"1000795" -> "1000794"  [label="AST: "];
"1000797" -> "1000794"  [label="CFG: "];
"1000794" -> "1001477"  [label="DDG: usg"];
"1000794" -> "1001477"  [label="DDG: kfree(usg)"];
"1000843" -> "1000842"  [label="AST: "];
"1000843" -> "1000844"  [label="CFG: "];
"1000844" -> "1000843"  [label="AST: "];
"1000846" -> "1000843"  [label="CFG: "];
"1000843" -> "1001477"  [label="DDG: kfree (usg)"];
"1000843" -> "1001477"  [label="DDG: usg"];
"1000918" -> "1000695"  [label="AST: "];
"1000918" -> "1000919"  [label="CFG: "];
"1000919" -> "1000918"  [label="AST: "];
"1000922" -> "1000918"  [label="CFG: "];
"1000918" -> "1001477"  [label="DDG: kfree (usg)"];
"1000918" -> "1001477"  [label="DDG: usg"];
"1000787" -> "1000779"  [label="AST: "];
"1000787" -> "1000789"  [label="CFG: "];
"1000788" -> "1000787"  [label="AST: "];
"1000789" -> "1000787"  [label="AST: "];
"1000779" -> "1000787"  [label="CFG: "];
"1000787" -> "1001477"  [label="DDG: __GFP_DMA"];
"1000787" -> "1001477"  [label="DDG: GFP_KERNEL"];
"1000787" -> "1000779"  [label="DDG: GFP_KERNEL"];
"1000787" -> "1000779"  [label="DDG: __GFP_DMA"];
"1000779" -> "1000777"  [label="AST: "];
"1000780" -> "1000779"  [label="AST: "];
"1000777" -> "1000779"  [label="CFG: "];
"1000779" -> "1001477"  [label="DDG: usg->sg[i].count"];
"1000779" -> "1001477"  [label="DDG: GFP_KERNEL|__GFP_DMA"];
"1000779" -> "1000777"  [label="DDG: usg->sg[i].count"];
"1000779" -> "1000777"  [label="DDG: GFP_KERNEL|__GFP_DMA"];
"1000745" -> "1000779"  [label="DDG: usg->sg[i].count"];
"1000779" -> "1000852"  [label="DDG: usg->sg[i].count"];
"1000777" -> "1000741"  [label="AST: "];
"1000778" -> "1000777"  [label="AST: "];
"1000792" -> "1000777"  [label="CFG: "];
"1000777" -> "1001477"  [label="DDG: kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA)"];
"1000777" -> "1000791"  [label="DDG: p"];
"1000791" -> "1000790"  [label="AST: "];
"1000791" -> "1000792"  [label="CFG: "];
"1000792" -> "1000791"  [label="AST: "];
"1000795" -> "1000791"  [label="CFG: "];
"1000803" -> "1000791"  [label="CFG: "];
"1000791" -> "1001477"  [label="DDG: p"];
"1000791" -> "1001477"  [label="DDG: !p"];
"1000791" -> "1000816"  [label="DDG: p"];
"1000791" -> "1000830"  [label="DDG: p"];
"1000791" -> "1000852"  [label="DDG: p"];
"1000816" -> "1000741"  [label="AST: "];
"1000816" -> "1000820"  [label="CFG: "];
"1000817" -> "1000816"  [label="AST: "];
"1000820" -> "1000816"  [label="AST: "];
"1000822" -> "1000816"  [label="CFG: "];
"1000816" -> "1001477"  [label="DDG: sg_list[i]"];
"1000816" -> "1001416"  [label="DDG: sg_list[i]"];
"1000816" -> "1001461"  [label="DDG: sg_list[i]"];
"1001416" -> "1001415"  [label="AST: "];
"1001416" -> "1001423"  [label="CFG: "];
"1001417" -> "1001416"  [label="AST: "];
"1001420" -> "1001416"  [label="AST: "];
"1001423" -> "1001416"  [label="AST: "];
"1001426" -> "1001416"  [label="CFG: "];
"1001381" -> "1001416"  [label="CFG: "];
"1001416" -> "1001477"  [label="DDG: sg_user[i]"];
"1001416" -> "1001477"  [label="DDG: byte_count"];
"1001416" -> "1001477"  [label="DDG: copy_to_user(sg_user[i], sg_list[i], byte_count)"];
"1001416" -> "1001477"  [label="DDG: sg_list[i]"];
"1000801" -> "1001416"  [label="DDG: sg_user[i]"];
"1000608" -> "1001416"  [label="DDG: sg_user[i]"];
"1000585" -> "1001416"  [label="DDG: sg_user[i]"];
"1001254" -> "1001416"  [label="DDG: sg_user[i]"];
"1000830" -> "1001416"  [label="DDG: sg_user[i]"];
"1001067" -> "1001416"  [label="DDG: sg_user[i]"];
"1001225" -> "1001416"  [label="DDG: sg_user[i]"];
"1001088" -> "1001416"  [label="DDG: sg_user[i]"];
"1001074" -> "1001416"  [label="DDG: sg_list[i]"];
"1000594" -> "1001416"  [label="DDG: sg_list[i]"];
"1000379" -> "1001416"  [label="DDG: sg_list"];
"1001240" -> "1001416"  [label="DDG: sg_list[i]"];
"1001383" -> "1001416"  [label="DDG: byte_count"];
"1001416" -> "1001461"  [label="DDG: sg_list[i]"];
"1001461" -> "1001460"  [label="AST: "];
"1001461" -> "1001462"  [label="CFG: "];
"1001462" -> "1001461"  [label="AST: "];
"1001459" -> "1001461"  [label="CFG: "];
"1001461" -> "1001477"  [label="DDG: sg_list[i]"];
"1001461" -> "1001477"  [label="DDG: kfree(sg_list[i])"];
"1001074" -> "1001461"  [label="DDG: sg_list[i]"];
"1000208" -> "1001461"  [label="DDG: sg_list"];
"1000594" -> "1001461"  [label="DDG: sg_list[i]"];
"1000379" -> "1001461"  [label="DDG: sg_list"];
"1001240" -> "1001461"  [label="DDG: sg_list[i]"];
"1000830" -> "1000829"  [label="AST: "];
"1000830" -> "1000835"  [label="CFG: "];
"1000831" -> "1000830"  [label="AST: "];
"1000832" -> "1000830"  [label="AST: "];
"1000835" -> "1000830"  [label="AST: "];
"1000844" -> "1000830"  [label="CFG: "];
"1000851" -> "1000830"  [label="CFG: "];
"1000830" -> "1001477"  [label="DDG: copy_from_user(p,sg_user[i],upsg->sg[i].count)"];
"1000830" -> "1001477"  [label="DDG: upsg->sg[i].count"];
"1000830" -> "1001477"  [label="DDG: sg_user[i]"];
"1000830" -> "1001477"  [label="DDG: p"];
"1000801" -> "1000830"  [label="DDG: sg_user[i]"];
"1000830" -> "1000852"  [label="DDG: p"];
"1000852" -> "1000850"  [label="AST: "];
"1000852" -> "1000864"  [label="CFG: "];
"1000853" -> "1000852"  [label="AST: "];
"1000856" -> "1000852"  [label="AST: "];
"1000857" -> "1000852"  [label="AST: "];
"1000864" -> "1000852"  [label="AST: "];
"1000850" -> "1000852"  [label="CFG: "];
"1000852" -> "1001477"  [label="DDG: dev->pdev"];
"1000852" -> "1001477"  [label="DDG: data_dir"];
"1000852" -> "1001477"  [label="DDG: p"];
"1000852" -> "1000850"  [label="DDG: dev->pdev"];
"1000852" -> "1000850"  [label="DDG: p"];
"1000852" -> "1000850"  [label="DDG: usg->sg[i].count"];
"1000852" -> "1000850"  [label="DDG: data_dir"];
"1000438" -> "1000852"  [label="DDG: data_dir"];
"1000852" -> "1000893"  [label="DDG: usg->sg[i].count"];
"1000852" -> "1000910"  [label="DDG: usg->sg[i].count"];
"1000850" -> "1000741"  [label="AST: "];
"1000851" -> "1000850"  [label="AST: "];
"1000870" -> "1000850"  [label="CFG: "];
"1000850" -> "1001477"  [label="DDG: pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir)"];
"1000850" -> "1000876"  [label="DDG: addr"];
"1000876" -> "1000875"  [label="AST: "];
"1000876" -> "1000878"  [label="CFG: "];
"1000877" -> "1000876"  [label="AST: "];
"1000878" -> "1000876"  [label="AST: "];
"1000875" -> "1000876"  [label="CFG: "];
"1000876" -> "1000875"  [label="DDG: addr"];
"1000876" -> "1000875"  [label="DDG: 0xffffffff"];
"1000876" -> "1000890"  [label="DDG: addr"];
"1000875" -> "1000865"  [label="AST: "];
"1000865" -> "1000875"  [label="CFG: "];
"1000875" -> "1001477"  [label="DDG: addr & 0xffffffff"];
"1000875" -> "1000865"  [label="DDG: addr & 0xffffffff"];
"1000865" -> "1000741"  [label="AST: "];
"1000866" -> "1000865"  [label="AST: "];
"1000884" -> "1000865"  [label="CFG: "];
"1000865" -> "1001477"  [label="DDG: psg->sg[i].addr[0]"];
"1000865" -> "1001477"  [label="DDG: cpu_to_le32(addr & 0xffffffff)"];
"1000890" -> "1000889"  [label="AST: "];
"1000890" -> "1000892"  [label="CFG: "];
"1000891" -> "1000890"  [label="AST: "];
"1000892" -> "1000890"  [label="AST: "];
"1000889" -> "1000890"  [label="CFG: "];
"1000890" -> "1001477"  [label="DDG: addr"];
"1000890" -> "1000889"  [label="DDG: addr"];
"1000890" -> "1000889"  [label="DDG: 32"];
"1000889" -> "1000879"  [label="AST: "];
"1000879" -> "1000889"  [label="CFG: "];
"1000889" -> "1001477"  [label="DDG: addr>>32"];
"1000889" -> "1000879"  [label="DDG: addr>>32"];
"1000879" -> "1000741"  [label="AST: "];
"1000880" -> "1000879"  [label="AST: "];
"1000894" -> "1000879"  [label="CFG: "];
"1000879" -> "1001477"  [label="DDG: psg->sg[i].addr[1]"];
"1000879" -> "1001477"  [label="DDG: cpu_to_le32(addr>>32)"];
"1000893" -> "1000741"  [label="AST: "];
"1000893" -> "1000895"  [label="CFG: "];
"1000894" -> "1000893"  [label="AST: "];
"1000895" -> "1000893"  [label="AST: "];
"1000906" -> "1000893"  [label="CFG: "];
"1000893" -> "1001477"  [label="DDG: byte_count"];
"1000452" -> "1000893"  [label="DDG: byte_count"];
"1000893" -> "1000924"  [label="DDG: byte_count"];
"1000924" -> "1000920"  [label="AST: "];
"1000924" -> "1000925"  [label="CFG: "];
"1000925" -> "1000924"  [label="AST: "];
"1000920" -> "1000924"  [label="CFG: "];
"1000924" -> "1001477"  [label="DDG: byte_count"];
"1000924" -> "1000920"  [label="DDG: byte_count"];
"1000452" -> "1000924"  [label="DDG: byte_count"];
"1000669" -> "1000924"  [label="DDG: byte_count"];
"1000920" -> "1000463"  [label="AST: "];
"1000921" -> "1000920"  [label="AST: "];
"1000928" -> "1000920"  [label="CFG: "];
"1000920" -> "1001477"  [label="DDG: srbcmd->count"];
"1000920" -> "1001477"  [label="DDG: cpu_to_le32(byte_count)"];
"1000910" -> "1000902"  [label="AST: "];
"1000910" -> "1000911"  [label="CFG: "];
"1000911" -> "1000910"  [label="AST: "];
"1000902" -> "1000910"  [label="CFG: "];
"1000910" -> "1001477"  [label="DDG: usg->sg[i].count"];
"1000910" -> "1000745"  [label="DDG: usg->sg[i].count"];
"1000910" -> "1000902"  [label="DDG: usg->sg[i].count"];
"1000745" -> "1000744"  [label="AST: "];
"1000745" -> "1000753"  [label="CFG: "];
"1000746" -> "1000745"  [label="AST: "];
"1000753" -> "1000745"  [label="AST: "];
"1000771" -> "1000745"  [label="CFG: "];
"1000778" -> "1000745"  [label="CFG: "];
"1000745" -> "1001477"  [label="DDG: usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1000745" -> "1001477"  [label="DDG: (dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536"];
"1000745" -> "1001477"  [label="DDG: usg->sg[i].count"];
"1000761" -> "1000745"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1000761" -> "1000745"  [label="DDG: 9"];
"1000902" -> "1000741"  [label="AST: "];
"1000903" -> "1000902"  [label="AST: "];
"1000740" -> "1000902"  [label="CFG: "];
"1000902" -> "1001477"  [label="DDG: cpu_to_le32(usg->sg[i].count)"];
"1000902" -> "1001477"  [label="DDG: psg->sg[i].count"];
"1000720" -> "1000722"  [label="CFG: "];
"1000721" -> "1000720"  [label="AST: "];
"1000722" -> "1000720"  [label="AST: "];
"1000720" -> "1001477"  [label="DDG: sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)"];
"1001338" -> "1001336"  [label="AST: "];
"1001338" -> "1001346"  [label="CFG: "];
"1001339" -> "1001338"  [label="AST: "];
"1001340" -> "1001338"  [label="AST: "];
"1001341" -> "1001338"  [label="AST: "];
"1001342" -> "1001338"  [label="AST: "];
"1001343" -> "1001338"  [label="AST: "];
"1001344" -> "1001338"  [label="AST: "];
"1001345" -> "1001338"  [label="AST: "];
"1001346" -> "1001338"  [label="AST: "];
"1001336" -> "1001338"  [label="CFG: "];
"1001338" -> "1001477"  [label="DDG: FsaNormal"];
"1001338" -> "1001477"  [label="DDG: actual_fibsize"];
"1001338" -> "1001477"  [label="DDG: NULL"];
"1001338" -> "1001477"  [label="DDG: ScsiPortCommand"];
"1001338" -> "1001477"  [label="DDG: srbfib"];
"1001338" -> "1001336"  [label="DDG: actual_fibsize"];
"1001338" -> "1001336"  [label="DDG: 1"];
"1001338" -> "1001336"  [label="DDG: ScsiPortCommand"];
"1001338" -> "1001336"  [label="DDG: FsaNormal"];
"1001338" -> "1001336"  [label="DDG: NULL"];
"1001338" -> "1001336"  [label="DDG: srbfib"];
"1000206" -> "1001338"  [label="DDG: srbfib"];
"1001336" -> "1000946"  [label="AST: "];
"1001337" -> "1001336"  [label="AST: "];
"1001349" -> "1001336"  [label="CFG: "];
"1001336" -> "1001477"  [label="DDG: aac_fib_send(ScsiPortCommand, srbfib, actual_fibsize, FsaNormal, 1, 1, NULL, NULL)"];
"1001449" -> "1000118"  [label="AST: "];
"1001449" -> "1001450"  [label="CFG: "];
"1001450" -> "1001449"  [label="AST: "];
"1001453" -> "1001449"  [label="CFG: "];
"1001449" -> "1001477"  [label="DDG: kfree(user_srbcmd)"];
"1001449" -> "1001477"  [label="DDG: user_srbcmd"];
"1000126" -> "1001449"  [label="DDG: user_srbcmd"];
"1000545" -> "1000537"  [label="AST: "];
"1000545" -> "1000547"  [label="CFG: "];
"1000546" -> "1000545"  [label="AST: "];
"1000547" -> "1000545"  [label="AST: "];
"1000537" -> "1000545"  [label="CFG: "];
"1000545" -> "1001477"  [label="DDG: GFP_KERNEL"];
"1000545" -> "1001477"  [label="DDG: __GFP_DMA"];
"1000545" -> "1000537"  [label="DDG: GFP_KERNEL"];
"1000545" -> "1000537"  [label="DDG: __GFP_DMA"];
"1000537" -> "1000535"  [label="AST: "];
"1000538" -> "1000537"  [label="AST: "];
"1000535" -> "1000537"  [label="CFG: "];
"1000537" -> "1001477"  [label="DDG: GFP_KERNEL|__GFP_DMA"];
"1000537" -> "1001477"  [label="DDG: upsg->sg[i].count"];
"1000537" -> "1000535"  [label="DDG: upsg->sg[i].count"];
"1000537" -> "1000535"  [label="DDG: GFP_KERNEL|__GFP_DMA"];
"1000505" -> "1000537"  [label="DDG: upsg->sg[i].count"];
"1000537" -> "1000608"  [label="DDG: upsg->sg[i].count"];
"1000537" -> "1000628"  [label="DDG: upsg->sg[i].count"];
"1000535" -> "1000501"  [label="AST: "];
"1000536" -> "1000535"  [label="AST: "];
"1000550" -> "1000535"  [label="CFG: "];
"1000535" -> "1001477"  [label="DDG: kmalloc(upsg->sg[i].count,GFP_KERNEL|__GFP_DMA)"];
"1000535" -> "1000549"  [label="DDG: p"];
"1000549" -> "1000548"  [label="AST: "];
"1000549" -> "1000550"  [label="CFG: "];
"1000550" -> "1000549"  [label="AST: "];
"1000553" -> "1000549"  [label="CFG: "];
"1000558" -> "1000549"  [label="CFG: "];
"1000549" -> "1001477"  [label="DDG: p"];
"1000549" -> "1001477"  [label="DDG: !p"];
"1000549" -> "1000594"  [label="DDG: p"];
"1000549" -> "1000608"  [label="DDG: p"];
"1000549" -> "1000628"  [label="DDG: p"];
"1000594" -> "1000501"  [label="AST: "];
"1000594" -> "1000598"  [label="CFG: "];
"1000595" -> "1000594"  [label="AST: "];
"1000598" -> "1000594"  [label="AST: "];
"1000600" -> "1000594"  [label="CFG: "];
"1000594" -> "1001477"  [label="DDG: sg_list[i]"];
"1000608" -> "1000607"  [label="AST: "];
"1000608" -> "1000613"  [label="CFG: "];
"1000609" -> "1000608"  [label="AST: "];
"1000610" -> "1000608"  [label="AST: "];
"1000613" -> "1000608"  [label="AST: "];
"1000622" -> "1000608"  [label="CFG: "];
"1000627" -> "1000608"  [label="CFG: "];
"1000608" -> "1001477"  [label="DDG: upsg->sg[i].count"];
"1000608" -> "1001477"  [label="DDG: sg_user[i]"];
"1000608" -> "1001477"  [label="DDG: copy_from_user(p,sg_user[i],upsg->sg[i].count)"];
"1000608" -> "1001477"  [label="DDG: p"];
"1000585" -> "1000608"  [label="DDG: sg_user[i]"];
"1000608" -> "1000628"  [label="DDG: p"];
"1000608" -> "1000628"  [label="DDG: upsg->sg[i].count"];
"1000628" -> "1000626"  [label="AST: "];
"1000628" -> "1000640"  [label="CFG: "];
"1000629" -> "1000628"  [label="AST: "];
"1000632" -> "1000628"  [label="AST: "];
"1000633" -> "1000628"  [label="AST: "];
"1000640" -> "1000628"  [label="AST: "];
"1000626" -> "1000628"  [label="CFG: "];
"1000628" -> "1001477"  [label="DDG: dev->pdev"];
"1000628" -> "1001477"  [label="DDG: data_dir"];
"1000628" -> "1001477"  [label="DDG: p"];
"1000628" -> "1000626"  [label="DDG: dev->pdev"];
"1000628" -> "1000626"  [label="DDG: p"];
"1000628" -> "1000626"  [label="DDG: upsg->sg[i].count"];
"1000628" -> "1000626"  [label="DDG: data_dir"];
"1000438" -> "1000628"  [label="DDG: data_dir"];
"1000628" -> "1000669"  [label="DDG: upsg->sg[i].count"];
"1000628" -> "1000686"  [label="DDG: upsg->sg[i].count"];
"1000626" -> "1000501"  [label="AST: "];
"1000627" -> "1000626"  [label="AST: "];
"1000646" -> "1000626"  [label="CFG: "];
"1000626" -> "1001477"  [label="DDG: pci_map_single(dev->pdev, p, upsg->sg[i].count, data_dir)"];
"1000626" -> "1000652"  [label="DDG: addr"];
"1000652" -> "1000651"  [label="AST: "];
"1000652" -> "1000654"  [label="CFG: "];
"1000653" -> "1000652"  [label="AST: "];
"1000654" -> "1000652"  [label="AST: "];
"1000651" -> "1000652"  [label="CFG: "];
"1000652" -> "1000651"  [label="DDG: addr"];
"1000652" -> "1000651"  [label="DDG: 0xffffffff"];
"1000652" -> "1000666"  [label="DDG: addr"];
"1000651" -> "1000641"  [label="AST: "];
"1000641" -> "1000651"  [label="CFG: "];
"1000651" -> "1001477"  [label="DDG: addr & 0xffffffff"];
"1000651" -> "1000641"  [label="DDG: addr & 0xffffffff"];
"1000641" -> "1000501"  [label="AST: "];
"1000642" -> "1000641"  [label="AST: "];
"1000660" -> "1000641"  [label="CFG: "];
"1000641" -> "1001477"  [label="DDG: cpu_to_le32(addr & 0xffffffff)"];
"1000641" -> "1001477"  [label="DDG: psg->sg[i].addr[0]"];
"1000666" -> "1000665"  [label="AST: "];
"1000666" -> "1000668"  [label="CFG: "];
"1000667" -> "1000666"  [label="AST: "];
"1000668" -> "1000666"  [label="AST: "];
"1000665" -> "1000666"  [label="CFG: "];
"1000666" -> "1001477"  [label="DDG: addr"];
"1000666" -> "1000665"  [label="DDG: addr"];
"1000666" -> "1000665"  [label="DDG: 32"];
"1000665" -> "1000655"  [label="AST: "];
"1000655" -> "1000665"  [label="CFG: "];
"1000665" -> "1001477"  [label="DDG: addr>>32"];
"1000665" -> "1000655"  [label="DDG: addr>>32"];
"1000655" -> "1000501"  [label="AST: "];
"1000656" -> "1000655"  [label="AST: "];
"1000670" -> "1000655"  [label="CFG: "];
"1000655" -> "1001477"  [label="DDG: psg->sg[i].addr[1]"];
"1000655" -> "1001477"  [label="DDG: cpu_to_le32(addr>>32)"];
"1000669" -> "1000501"  [label="AST: "];
"1000669" -> "1000671"  [label="CFG: "];
"1000670" -> "1000669"  [label="AST: "];
"1000671" -> "1000669"  [label="AST: "];
"1000682" -> "1000669"  [label="CFG: "];
"1000669" -> "1001477"  [label="DDG: byte_count"];
"1000452" -> "1000669"  [label="DDG: byte_count"];
"1000686" -> "1000678"  [label="AST: "];
"1000686" -> "1000687"  [label="CFG: "];
"1000687" -> "1000686"  [label="AST: "];
"1000678" -> "1000686"  [label="CFG: "];
"1000686" -> "1001477"  [label="DDG: upsg->sg[i].count"];
"1000686" -> "1000505"  [label="DDG: upsg->sg[i].count"];
"1000686" -> "1000678"  [label="DDG: upsg->sg[i].count"];
"1000505" -> "1000504"  [label="AST: "];
"1000505" -> "1000513"  [label="CFG: "];
"1000506" -> "1000505"  [label="AST: "];
"1000513" -> "1000505"  [label="AST: "];
"1000531" -> "1000505"  [label="CFG: "];
"1000536" -> "1000505"  [label="CFG: "];
"1000505" -> "1001477"  [label="DDG: upsg->sg[i].count"];
"1000505" -> "1001477"  [label="DDG: (dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536"];
"1000505" -> "1001477"  [label="DDG: upsg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1000521" -> "1000505"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1000521" -> "1000505"  [label="DDG: 9"];
"1000678" -> "1000501"  [label="AST: "];
"1000679" -> "1000678"  [label="AST: "];
"1000500" -> "1000678"  [label="CFG: "];
"1000678" -> "1001477"  [label="DDG: psg->sg[i].count"];
"1000678" -> "1001477"  [label="DDG: cpu_to_le32(upsg->sg[i].count)"];
"1001027" -> "1001019"  [label="AST: "];
"1001027" -> "1001029"  [label="CFG: "];
"1001028" -> "1001027"  [label="AST: "];
"1001029" -> "1001027"  [label="AST: "];
"1001019" -> "1001027"  [label="CFG: "];
"1001027" -> "1001477"  [label="DDG: GFP_KERNEL"];
"1001027" -> "1001477"  [label="DDG: __GFP_DMA"];
"1001027" -> "1001019"  [label="DDG: GFP_KERNEL"];
"1001027" -> "1001019"  [label="DDG: __GFP_DMA"];
"1001019" -> "1001017"  [label="AST: "];
"1001020" -> "1001019"  [label="AST: "];
"1001017" -> "1001019"  [label="CFG: "];
"1001019" -> "1001477"  [label="DDG: GFP_KERNEL|__GFP_DMA"];
"1001019" -> "1001477"  [label="DDG: usg->sg[i].count"];
"1001019" -> "1001017"  [label="DDG: usg->sg[i].count"];
"1001019" -> "1001017"  [label="DDG: GFP_KERNEL|__GFP_DMA"];
"1000987" -> "1001019"  [label="DDG: usg->sg[i].count"];
"1001019" -> "1001088"  [label="DDG: usg->sg[i].count"];
"1001019" -> "1001108"  [label="DDG: usg->sg[i].count"];
"1001017" -> "1000983"  [label="AST: "];
"1001018" -> "1001017"  [label="AST: "];
"1001032" -> "1001017"  [label="CFG: "];
"1001017" -> "1001477"  [label="DDG: kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA)"];
"1001017" -> "1001031"  [label="DDG: p"];
"1001031" -> "1001030"  [label="AST: "];
"1001031" -> "1001032"  [label="CFG: "];
"1001032" -> "1001031"  [label="AST: "];
"1001035" -> "1001031"  [label="CFG: "];
"1001040" -> "1001031"  [label="CFG: "];
"1001031" -> "1001477"  [label="DDG: p"];
"1001031" -> "1001477"  [label="DDG: !p"];
"1001031" -> "1001074"  [label="DDG: p"];
"1001031" -> "1001088"  [label="DDG: p"];
"1001031" -> "1001108"  [label="DDG: p"];
"1001074" -> "1000983"  [label="AST: "];
"1001074" -> "1001078"  [label="CFG: "];
"1001075" -> "1001074"  [label="AST: "];
"1001078" -> "1001074"  [label="AST: "];
"1001080" -> "1001074"  [label="CFG: "];
"1001074" -> "1001477"  [label="DDG: sg_list[i]"];
"1001088" -> "1001087"  [label="AST: "];
"1001088" -> "1001093"  [label="CFG: "];
"1001089" -> "1001088"  [label="AST: "];
"1001090" -> "1001088"  [label="AST: "];
"1001093" -> "1001088"  [label="AST: "];
"1001102" -> "1001088"  [label="CFG: "];
"1001107" -> "1001088"  [label="CFG: "];
"1001088" -> "1001477"  [label="DDG: copy_from_user(p,sg_user[i],usg->sg[i].count)"];
"1001088" -> "1001477"  [label="DDG: p"];
"1001088" -> "1001477"  [label="DDG: usg->sg[i].count"];
"1001088" -> "1001477"  [label="DDG: sg_user[i]"];
"1001067" -> "1001088"  [label="DDG: sg_user[i]"];
"1001088" -> "1001108"  [label="DDG: p"];
"1001088" -> "1001108"  [label="DDG: usg->sg[i].count"];
"1001108" -> "1001106"  [label="AST: "];
"1001108" -> "1001120"  [label="CFG: "];
"1001109" -> "1001108"  [label="AST: "];
"1001112" -> "1001108"  [label="AST: "];
"1001113" -> "1001108"  [label="AST: "];
"1001120" -> "1001108"  [label="AST: "];
"1001106" -> "1001108"  [label="CFG: "];
"1001108" -> "1001477"  [label="DDG: dev->pdev"];
"1001108" -> "1001477"  [label="DDG: data_dir"];
"1001108" -> "1001477"  [label="DDG: p"];
"1001108" -> "1001106"  [label="DDG: dev->pdev"];
"1001108" -> "1001106"  [label="DDG: p"];
"1001108" -> "1001106"  [label="DDG: usg->sg[i].count"];
"1001108" -> "1001106"  [label="DDG: data_dir"];
"1000438" -> "1001108"  [label="DDG: data_dir"];
"1001108" -> "1001133"  [label="DDG: usg->sg[i].count"];
"1001108" -> "1001150"  [label="DDG: usg->sg[i].count"];
"1001106" -> "1000983"  [label="AST: "];
"1001107" -> "1001106"  [label="AST: "];
"1001125" -> "1001106"  [label="CFG: "];
"1001106" -> "1001477"  [label="DDG: pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir)"];
"1001106" -> "1001130"  [label="DDG: addr"];
"1001130" -> "1001129"  [label="AST: "];
"1001130" -> "1001132"  [label="CFG: "];
"1001131" -> "1001130"  [label="AST: "];
"1001132" -> "1001130"  [label="AST: "];
"1001129" -> "1001130"  [label="CFG: "];
"1001130" -> "1001477"  [label="DDG: addr"];
"1001130" -> "1001129"  [label="DDG: addr"];
"1001130" -> "1001129"  [label="DDG: 0xffffffff"];
"1001129" -> "1001121"  [label="AST: "];
"1001121" -> "1001129"  [label="CFG: "];
"1001129" -> "1001477"  [label="DDG: addr & 0xffffffff"];
"1001129" -> "1001121"  [label="DDG: addr & 0xffffffff"];
"1001121" -> "1000983"  [label="AST: "];
"1001122" -> "1001121"  [label="AST: "];
"1001134" -> "1001121"  [label="CFG: "];
"1001121" -> "1001477"  [label="DDG: cpu_to_le32(addr & 0xffffffff)"];
"1001121" -> "1001477"  [label="DDG: psg->sg[i].addr"];
"1001133" -> "1000983"  [label="AST: "];
"1001133" -> "1001135"  [label="CFG: "];
"1001134" -> "1001133"  [label="AST: "];
"1001135" -> "1001133"  [label="AST: "];
"1001146" -> "1001133"  [label="CFG: "];
"1001133" -> "1001477"  [label="DDG: byte_count"];
"1000452" -> "1001133"  [label="DDG: byte_count"];
"1001133" -> "1001326"  [label="DDG: byte_count"];
"1001326" -> "1001322"  [label="AST: "];
"1001326" -> "1001327"  [label="CFG: "];
"1001327" -> "1001326"  [label="AST: "];
"1001322" -> "1001326"  [label="CFG: "];
"1001326" -> "1001477"  [label="DDG: byte_count"];
"1001326" -> "1001322"  [label="DDG: byte_count"];
"1000452" -> "1001326"  [label="DDG: byte_count"];
"1001297" -> "1001326"  [label="DDG: byte_count"];
"1001322" -> "1000946"  [label="AST: "];
"1001323" -> "1001322"  [label="AST: "];
"1001330" -> "1001322"  [label="CFG: "];
"1001322" -> "1001477"  [label="DDG: cpu_to_le32(byte_count)"];
"1001322" -> "1001477"  [label="DDG: srbcmd->count"];
"1001150" -> "1001142"  [label="AST: "];
"1001150" -> "1001151"  [label="CFG: "];
"1001151" -> "1001150"  [label="AST: "];
"1001142" -> "1001150"  [label="CFG: "];
"1001150" -> "1001477"  [label="DDG: usg->sg[i].count"];
"1001150" -> "1000987"  [label="DDG: usg->sg[i].count"];
"1001150" -> "1001142"  [label="DDG: usg->sg[i].count"];
"1000987" -> "1000986"  [label="AST: "];
"1000987" -> "1000995"  [label="CFG: "];
"1000988" -> "1000987"  [label="AST: "];
"1000995" -> "1000987"  [label="AST: "];
"1001013" -> "1000987"  [label="CFG: "];
"1001018" -> "1000987"  [label="CFG: "];
"1000987" -> "1001477"  [label="DDG: usg->sg[i].count"];
"1000987" -> "1001477"  [label="DDG: usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1000987" -> "1001477"  [label="DDG: (dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536"];
"1001003" -> "1000987"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1001003" -> "1000987"  [label="DDG: 9"];
"1001142" -> "1000983"  [label="AST: "];
"1001143" -> "1001142"  [label="AST: "];
"1000982" -> "1001142"  [label="CFG: "];
"1001142" -> "1001477"  [label="DDG: cpu_to_le32(usg->sg[i].count)"];
"1001142" -> "1001477"  [label="DDG: psg->sg[i].count"];
"1001207" -> "1001205"  [label="AST: "];
"1001207" -> "1001215"  [label="CFG: "];
"1001208" -> "1001207"  [label="AST: "];
"1001215" -> "1001207"  [label="AST: "];
"1001205" -> "1001207"  [label="CFG: "];
"1001207" -> "1001477"  [label="DDG: GFP_KERNEL"];
"1001207" -> "1001477"  [label="DDG: upsg->sg[i].count"];
"1001207" -> "1001205"  [label="DDG: upsg->sg[i].count"];
"1001207" -> "1001205"  [label="DDG: GFP_KERNEL"];
"1001175" -> "1001207"  [label="DDG: upsg->sg[i].count"];
"1001207" -> "1001254"  [label="DDG: upsg->sg[i].count"];
"1001207" -> "1001274"  [label="DDG: upsg->sg[i].count"];
"1001205" -> "1001171"  [label="AST: "];
"1001206" -> "1001205"  [label="AST: "];
"1001218" -> "1001205"  [label="CFG: "];
"1001205" -> "1001477"  [label="DDG: kmalloc(upsg->sg[i].count, GFP_KERNEL)"];
"1001205" -> "1001217"  [label="DDG: p"];
"1001217" -> "1001216"  [label="AST: "];
"1001217" -> "1001218"  [label="CFG: "];
"1001218" -> "1001217"  [label="AST: "];
"1001221" -> "1001217"  [label="CFG: "];
"1001227" -> "1001217"  [label="CFG: "];
"1001217" -> "1001477"  [label="DDG: p"];
"1001217" -> "1001477"  [label="DDG: !p"];
"1001217" -> "1001240"  [label="DDG: p"];
"1001217" -> "1001254"  [label="DDG: p"];
"1001217" -> "1001274"  [label="DDG: p"];
"1001240" -> "1001171"  [label="AST: "];
"1001240" -> "1001244"  [label="CFG: "];
"1001241" -> "1001240"  [label="AST: "];
"1001244" -> "1001240"  [label="AST: "];
"1001246" -> "1001240"  [label="CFG: "];
"1001240" -> "1001477"  [label="DDG: sg_list[i]"];
"1001254" -> "1001253"  [label="AST: "];
"1001254" -> "1001259"  [label="CFG: "];
"1001255" -> "1001254"  [label="AST: "];
"1001256" -> "1001254"  [label="AST: "];
"1001259" -> "1001254"  [label="AST: "];
"1001268" -> "1001254"  [label="CFG: "];
"1001273" -> "1001254"  [label="CFG: "];
"1001254" -> "1001477"  [label="DDG: copy_from_user(p, sg_user[i],\n\t\t\t\t\t\t\tupsg->sg[i].count)"];
"1001254" -> "1001477"  [label="DDG: p"];
"1001254" -> "1001477"  [label="DDG: sg_user[i]"];
"1001254" -> "1001477"  [label="DDG: upsg->sg[i].count"];
"1001225" -> "1001254"  [label="DDG: sg_user[i]"];
"1001254" -> "1001274"  [label="DDG: p"];
"1001254" -> "1001274"  [label="DDG: upsg->sg[i].count"];
"1001274" -> "1001272"  [label="AST: "];
"1001274" -> "1001286"  [label="CFG: "];
"1001275" -> "1001274"  [label="AST: "];
"1001278" -> "1001274"  [label="AST: "];
"1001279" -> "1001274"  [label="AST: "];
"1001286" -> "1001274"  [label="AST: "];
"1001272" -> "1001274"  [label="CFG: "];
"1001274" -> "1001477"  [label="DDG: dev->pdev"];
"1001274" -> "1001477"  [label="DDG: p"];
"1001274" -> "1001477"  [label="DDG: data_dir"];
"1001274" -> "1001272"  [label="DDG: dev->pdev"];
"1001274" -> "1001272"  [label="DDG: p"];
"1001274" -> "1001272"  [label="DDG: upsg->sg[i].count"];
"1001274" -> "1001272"  [label="DDG: data_dir"];
"1000438" -> "1001274"  [label="DDG: data_dir"];
"1001274" -> "1001297"  [label="DDG: upsg->sg[i].count"];
"1001274" -> "1001314"  [label="DDG: upsg->sg[i].count"];
"1001272" -> "1001171"  [label="AST: "];
"1001273" -> "1001272"  [label="AST: "];
"1001291" -> "1001272"  [label="CFG: "];
"1001272" -> "1001477"  [label="DDG: pci_map_single(dev->pdev, p,\n\t\t\t\t\tupsg->sg[i].count, data_dir)"];
"1001272" -> "1001295"  [label="DDG: addr"];
"1001295" -> "1001287"  [label="AST: "];
"1001295" -> "1001296"  [label="CFG: "];
"1001296" -> "1001295"  [label="AST: "];
"1001287" -> "1001295"  [label="CFG: "];
"1001295" -> "1001477"  [label="DDG: addr"];
"1001295" -> "1001287"  [label="DDG: addr"];
"1001287" -> "1001171"  [label="AST: "];
"1001288" -> "1001287"  [label="AST: "];
"1001298" -> "1001287"  [label="CFG: "];
"1001287" -> "1001477"  [label="DDG: cpu_to_le32(addr)"];
"1001287" -> "1001477"  [label="DDG: psg->sg[i].addr"];
"1001297" -> "1001171"  [label="AST: "];
"1001297" -> "1001299"  [label="CFG: "];
"1001298" -> "1001297"  [label="AST: "];
"1001299" -> "1001297"  [label="AST: "];
"1001310" -> "1001297"  [label="CFG: "];
"1001297" -> "1001477"  [label="DDG: byte_count"];
"1000452" -> "1001297"  [label="DDG: byte_count"];
"1001314" -> "1001306"  [label="AST: "];
"1001314" -> "1001315"  [label="CFG: "];
"1001315" -> "1001314"  [label="AST: "];
"1001306" -> "1001314"  [label="CFG: "];
"1001314" -> "1001477"  [label="DDG: upsg->sg[i].count"];
"1001314" -> "1001175"  [label="DDG: upsg->sg[i].count"];
"1001314" -> "1001306"  [label="DDG: upsg->sg[i].count"];
"1001175" -> "1001174"  [label="AST: "];
"1001175" -> "1001183"  [label="CFG: "];
"1001176" -> "1001175"  [label="AST: "];
"1001183" -> "1001175"  [label="AST: "];
"1001201" -> "1001175"  [label="CFG: "];
"1001206" -> "1001175"  [label="CFG: "];
"1001175" -> "1001477"  [label="DDG: upsg->sg[i].count"];
"1001175" -> "1001477"  [label="DDG: upsg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1001175" -> "1001477"  [label="DDG: (dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536"];
"1001191" -> "1001175"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1001191" -> "1001175"  [label="DDG: 9"];
"1001306" -> "1001171"  [label="AST: "];
"1001307" -> "1001306"  [label="AST: "];
"1001170" -> "1001306"  [label="CFG: "];
"1001306" -> "1001477"  [label="DDG: psg->sg[i].count"];
"1001306" -> "1001477"  [label="DDG: cpu_to_le32(upsg->sg[i].count)"];
}
