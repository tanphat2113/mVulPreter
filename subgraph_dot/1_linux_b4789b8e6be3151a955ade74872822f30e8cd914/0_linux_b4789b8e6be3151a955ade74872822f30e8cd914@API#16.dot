digraph "0_linux_b4789b8e6be3151a955ade74872822f30e8cd914@API" {
"1001416" [label="(Call,copy_to_user(sg_user[i], sg_list[i], byte_count))"];
"1000801" [label="(Call,sg_user[i] = (void __user *)(uintptr_t)usg->sg[i].addr)"];
"1000805" [label="(Call,(void __user *)(uintptr_t)usg->sg[i].addr)"];
"1000807" [label="(Call,(uintptr_t)usg->sg[i].addr)"];
"1000608" [label="(Call,copy_from_user(p,sg_user[i],upsg->sg[i].count))"];
"1000549" [label="(Call,!p)"];
"1000535" [label="(Call,p = kmalloc(upsg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000537" [label="(Call,kmalloc(upsg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000505" [label="(Call,upsg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1000686" [label="(Call,cpu_to_le32(upsg->sg[i].count))"];
"1000628" [label="(Call,pci_map_single(dev->pdev, p, upsg->sg[i].count, data_dir))"];
"1000438" [label="(Call,data_dir == DMA_NONE)"];
"1000364" [label="(Call,data_dir = DMA_FROM_DEVICE)"];
"1000355" [label="(Call,data_dir = DMA_TO_DEVICE)"];
"1000369" [label="(Call,data_dir = DMA_NONE)"];
"1000359" [label="(Call,data_dir = DMA_BIDIRECTIONAL)"];
"1000521" [label="(Call,dev->scsi_host_ptr->max_sectors << 9)"];
"1000545" [label="(Call,GFP_KERNEL|__GFP_DMA)"];
"1000246" [label="(Call,kmalloc(fibsize, GFP_KERNEL))"];
"1000230" [label="(Call,fibsize > (dev->max_fib_size - sizeof(struct aac_fibhdr)))"];
"1000136" [label="(Call,fibsize = 0)"];
"1000232" [label="(Call,dev->max_fib_size - sizeof(struct aac_fibhdr))"];
"1000585" [label="(Call,sg_user[i] = (void __user *)(uintptr_t)addr)"];
"1000589" [label="(Call,(void __user *)(uintptr_t)addr)"];
"1000591" [label="(Call,(uintptr_t)addr)"];
"1000570" [label="(Call,addr += ((u64)upsg->sg[i].addr[1]) << 32)"];
"1000572" [label="(Call,((u64)upsg->sg[i].addr[1]) << 32)"];
"1000573" [label="(Call,(u64)upsg->sg[i].addr[1])"];
"1000557" [label="(Call,addr = (u64)upsg->sg[i].addr[0])"];
"1000559" [label="(Call,(u64)upsg->sg[i].addr[0])"];
"1001254" [label="(Call,copy_from_user(p, sg_user[i],\n\t\t\t\t\t\t\tupsg->sg[i].count))"];
"1001217" [label="(Call,!p)"];
"1001205" [label="(Call,p = kmalloc(upsg->sg[i].count, GFP_KERNEL))"];
"1001207" [label="(Call,kmalloc(upsg->sg[i].count, GFP_KERNEL))"];
"1001175" [label="(Call,upsg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1001314" [label="(Call,cpu_to_le32(upsg->sg[i].count))"];
"1001274" [label="(Call,pci_map_single(dev->pdev, p,\n\t\t\t\t\tupsg->sg[i].count, data_dir))"];
"1001191" [label="(Call,dev->scsi_host_ptr->max_sectors << 9)"];
"1001225" [label="(Call,sg_user[i] = (void __user *)(uintptr_t)upsg->sg[i].addr)"];
"1001229" [label="(Call,(void __user *)(uintptr_t)upsg->sg[i].addr)"];
"1001231" [label="(Call,(uintptr_t)upsg->sg[i].addr)"];
"1000830" [label="(Call,copy_from_user(p,sg_user[i],upsg->sg[i].count))"];
"1000791" [label="(Call,!p)"];
"1000777" [label="(Call,p = kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000779" [label="(Call,kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000745" [label="(Call,usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1000910" [label="(Call,cpu_to_le32(usg->sg[i].count))"];
"1000852" [label="(Call,pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1000761" [label="(Call,dev->scsi_host_ptr->max_sectors << 9)"];
"1000787" [label="(Call,GFP_KERNEL|__GFP_DMA)"];
"1000699" [label="(Call,kmalloc(actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap), GFP_KERNEL))"];
"1000700" [label="(Call,actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap))"];
"1000424" [label="(Call,actual_fibsize != fibsize)"];
"1000387" [label="(Call,actual_fibsize = sizeof(struct aac_srb) - sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry)))"];
"1000389" [label="(Call,sizeof(struct aac_srb) - sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry)))"];
"1000395" [label="(Call,(user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry))"];
"1000396" [label="(Call,user_srbcmd->sg.count & 0xff)"];
"1000373" [label="(Call,user_srbcmd->sg.count > ARRAY_SIZE(sg_list))"];
"1000379" [label="(Call,ARRAY_SIZE(sg_list))"];
"1000208" [label="(Call,memset(sg_list, 0, sizeof(sg_list)))"];
"1000259" [label="(Call,copy_from_user(user_srbcmd, user_srb,fibsize))"];
"1000250" [label="(Call,!user_srbcmd)"];
"1000244" [label="(Call,user_srbcmd = kmalloc(fibsize, GFP_KERNEL))"];
"1000130" [label="(Call,*user_srb = arg)"];
"1000117" [label="(MethodParameterIn,void __user * arg)"];
"1001067" [label="(Call,sg_user[i] = (void __user *)addr)"];
"1001071" [label="(Call,(void __user *)addr)"];
"1001052" [label="(Call,addr += ((u64)usg->sg[i].addr[1]) << 32)"];
"1001054" [label="(Call,((u64)usg->sg[i].addr[1]) << 32)"];
"1001055" [label="(Call,(u64)usg->sg[i].addr[1])"];
"1001039" [label="(Call,addr = (u64)usg->sg[i].addr[0])"];
"1001041" [label="(Call,(u64)usg->sg[i].addr[0])"];
"1001088" [label="(Call,copy_from_user(p,sg_user[i],usg->sg[i].count))"];
"1001031" [label="(Call,!p)"];
"1001017" [label="(Call,p = kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1001019" [label="(Call,kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000987" [label="(Call,usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1001150" [label="(Call,cpu_to_le32(usg->sg[i].count))"];
"1001108" [label="(Call,pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1001003" [label="(Call,dev->scsi_host_ptr->max_sectors << 9)"];
"1001027" [label="(Call,GFP_KERNEL|__GFP_DMA)"];
"1001074" [label="(Call,sg_list[i] = p)"];
"1000594" [label="(Call,sg_list[i] = p)"];
"1000816" [label="(Call,sg_list[i] = p)"];
"1001240" [label="(Call,sg_list[i] = p)"];
"1001383" [label="(Call,byte_count = le32_to_cpu(\n\t\t\t  (dev->adapter_info.options & AAC_OPT_SGMAP_HOST64)\n\t\t\t      ? ((struct sgmap64*)&srbcmd->sg)->sg[i].count\n\t\t\t      : srbcmd->sg.sg[i].count))"];
"1001385" [label="(Call,le32_to_cpu(\n\t\t\t  (dev->adapter_info.options & AAC_OPT_SGMAP_HOST64)\n\t\t\t      ? ((struct sgmap64*)&srbcmd->sg)->sg[i].count\n\t\t\t      : srbcmd->sg.sg[i].count))"];
"1001461" [label="(Call,kfree(sg_list[i]))"];
"1001229" [label="(Call,(void __user *)(uintptr_t)upsg->sg[i].addr)"];
"1000546" [label="(Identifier,GFP_KERNEL)"];
"1000504" [label="(ControlStructure,if (upsg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)))"];
"1000251" [label="(Identifier,user_srbcmd)"];
"1001020" [label="(Call,usg->sg[i].count)"];
"1000832" [label="(Call,sg_user[i])"];
"1000397" [label="(Call,user_srbcmd->sg.count)"];
"1000807" [label="(Call,(uintptr_t)usg->sg[i].addr)"];
"1001109" [label="(Call,dev->pdev)"];
"1000609" [label="(Identifier,p)"];
"1001225" [label="(Call,sg_user[i] = (void __user *)(uintptr_t)upsg->sg[i].addr)"];
"1000856" [label="(Identifier,p)"];
"1000857" [label="(Call,usg->sg[i].count)"];
"1000995" [label="(Call,(dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1000600" [label="(Identifier,sg_indx)"];
"1001206" [label="(Identifier,p)"];
"1001071" [label="(Call,(void __user *)addr)"];
"1000362" [label="(ControlStructure,break;)"];
"1000550" [label="(Identifier,p)"];
"1001151" [label="(Call,usg->sg[i].count)"];
"1001028" [label="(Identifier,GFP_KERNEL)"];
"1001217" [label="(Call,!p)"];
"1000795" [label="(Identifier,usg)"];
"1000261" [label="(Identifier,user_srb)"];
"1000851" [label="(Identifier,addr)"];
"1000248" [label="(Identifier,GFP_KERNEL)"];
"1001191" [label="(Call,dev->scsi_host_ptr->max_sectors << 9)"];
"1000265" [label="(Identifier,rcode)"];
"1000536" [label="(Identifier,p)"];
"1000697" [label="(Call,usg = kmalloc(actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap), GFP_KERNEL))"];
"1000373" [label="(Call,user_srbcmd->sg.count > ARRAY_SIZE(sg_list))"];
"1000962" [label="(Call,actual_fibsize64 == fibsize)"];
"1000591" [label="(Call,(uintptr_t)addr)"];
"1000387" [label="(Call,actual_fibsize = sizeof(struct aac_srb) - sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry)))"];
"1001259" [label="(Call,upsg->sg[i].count)"];
"1001053" [label="(Identifier,addr)"];
"1000844" [label="(Identifier,usg)"];
"1001018" [label="(Identifier,p)"];
"1001009" [label="(Literal,9)"];
"1001197" [label="(Literal,9)"];
"1000610" [label="(Call,sg_user[i])"];
"1001106" [label="(Call,addr = pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1000428" [label="(Identifier,actual_fibsize64)"];
"1000988" [label="(Call,usg->sg[i].count)"];
"1001415" [label="(ControlStructure,if(copy_to_user(sg_user[i], sg_list[i], byte_count)))"];
"1001088" [label="(Call,copy_from_user(p,sg_user[i],usg->sg[i].count))"];
"1000640" [label="(Identifier,data_dir)"];
"1001461" [label="(Call,kfree(sg_list[i]))"];
"1001227" [label="(Identifier,sg_user)"];
"1000613" [label="(Call,upsg->sg[i].count)"];
"1000805" [label="(Call,(void __user *)(uintptr_t)usg->sg[i].addr)"];
"1000802" [label="(Call,sg_user[i])"];
"1000527" [label="(Literal,9)"];
"1001069" [label="(Identifier,sg_user)"];
"1000572" [label="(Call,((u64)upsg->sg[i].addr[1]) << 32)"];
"1001073" [label="(Identifier,addr)"];
"1001087" [label="(ControlStructure,if(copy_from_user(p,sg_user[i],usg->sg[i].count)))"];
"1000570" [label="(Call,addr += ((u64)upsg->sg[i].addr[1]) << 32)"];
"1000987" [label="(Call,usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1001338" [label="(Call,aac_fib_send(ScsiPortCommand, srbfib, actual_fibsize, FsaNormal, 1, 1, NULL, NULL))"];
"1000424" [label="(Call,actual_fibsize != fibsize)"];
"1000699" [label="(Call,kmalloc(actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap), GFP_KERNEL))"];
"1000573" [label="(Call,(u64)upsg->sg[i].addr[1])"];
"1000369" [label="(Call,data_dir = DMA_NONE)"];
"1001255" [label="(Identifier,p)"];
"1000380" [label="(Identifier,sg_list)"];
"1000132" [label="(Identifier,arg)"];
"1000406" [label="(Identifier,actual_fibsize64)"];
"1000521" [label="(Call,dev->scsi_host_ptr->max_sectors << 9)"];
"1000633" [label="(Call,upsg->sg[i].count)"];
"1000864" [label="(Identifier,data_dir)"];
"1001076" [label="(Identifier,sg_list)"];
"1001231" [label="(Call,(uintptr_t)upsg->sg[i].addr)"];
"1001055" [label="(Call,(u64)usg->sg[i].addr[1])"];
"1000358" [label="(ControlStructure,break;)"];
"1000137" [label="(Identifier,fibsize)"];
"1001102" [label="(Identifier,rcode)"];
"1000388" [label="(Identifier,actual_fibsize)"];
"1001017" [label="(Call,p = kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1001078" [label="(Identifier,p)"];
"1001027" [label="(Call,GFP_KERNEL|__GFP_DMA)"];
"1000426" [label="(Identifier,fibsize)"];
"1000853" [label="(Call,dev->pdev)"];
"1001041" [label="(Call,(u64)usg->sg[i].addr[0])"];
"1000678" [label="(Call,psg->sg[i].count = cpu_to_le32(upsg->sg[i].count))"];
"1001074" [label="(Call,sg_list[i] = p)"];
"1001426" [label="(Identifier,rcode)"];
"1000356" [label="(Identifier,data_dir)"];
"1000686" [label="(Call,cpu_to_le32(upsg->sg[i].count))"];
"1000820" [label="(Identifier,p)"];
"1000244" [label="(Call,user_srbcmd = kmalloc(fibsize, GFP_KERNEL))"];
"1000537" [label="(Call,kmalloc(upsg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000141" [label="(Identifier,flags)"];
"1000258" [label="(ControlStructure,if(copy_from_user(user_srbcmd, user_srb,fibsize)))"];
"1000270" [label="(Identifier,user_reply)"];
"1000367" [label="(ControlStructure,break;)"];
"1000443" [label="(Identifier,user_srbcmd)"];
"1000779" [label="(Call,kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1001383" [label="(Call,byte_count = le32_to_cpu(\n\t\t\t  (dev->adapter_info.options & AAC_OPT_SGMAP_HOST64)\n\t\t\t      ? ((struct sgmap64*)&srbcmd->sg)->sg[i].count\n\t\t\t      : srbcmd->sg.sg[i].count))"];
"1000789" [label="(Identifier,__GFP_DMA)"];
"1000216" [label="(Identifier,fibsize)"];
"1000829" [label="(ControlStructure,if(copy_from_user(p,sg_user[i],upsg->sg[i].count)))"];
"1001216" [label="(ControlStructure,if (!p))"];
"1000626" [label="(Call,addr = pci_map_single(dev->pdev, p, upsg->sg[i].count, data_dir))"];
"1000376" [label="(Identifier,user_srbcmd)"];
"1001133" [label="(Call,byte_count += usg->sg[i].count)"];
"1000558" [label="(Identifier,addr)"];
"1000427" [label="(Call,actual_fibsize64 != fibsize)"];
"1000365" [label="(Identifier,data_dir)"];
"1001384" [label="(Identifier,byte_count)"];
"1000584" [label="(Literal,32)"];
"1001314" [label="(Call,cpu_to_le32(upsg->sg[i].count))"];
"1001256" [label="(Call,sg_user[i])"];
"1001240" [label="(Call,sg_list[i] = p)"];
"1000762" [label="(Call,dev->scsi_host_ptr->max_sectors)"];
"1000407" [label="(Call,actual_fibsize + (user_srbcmd->sg.count & 0xff) *\n\t  (sizeof(struct sgentry64) - sizeof(struct sgentry)))"];
"1000522" [label="(Call,dev->scsi_host_ptr->max_sectors)"];
"1000402" [label="(Literal,0xff)"];
"1001067" [label="(Call,sg_user[i] = (void __user *)addr)"];
"1001254" [label="(Call,copy_from_user(p, sg_user[i],\n\t\t\t\t\t\t\tupsg->sg[i].count))"];
"1000395" [label="(Call,(user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry))"];
"1000440" [label="(Identifier,DMA_NONE)"];
"1001242" [label="(Identifier,sg_list)"];
"1001031" [label="(Call,!p)"];
"1001176" [label="(Call,upsg->sg[i].count)"];
"1001208" [label="(Call,upsg->sg[i].count)"];
"1001004" [label="(Call,dev->scsi_host_ptr->max_sectors)"];
"1000622" [label="(Identifier,rcode)"];
"1000593" [label="(Identifier,addr)"];
"1000423" [label="(Call,(actual_fibsize != fibsize) && (actual_fibsize64 != fibsize))"];
"1000830" [label="(Call,copy_from_user(p,sg_user[i],upsg->sg[i].count))"];
"1000396" [label="(Call,user_srbcmd->sg.count & 0xff)"];
"1000548" [label="(ControlStructure,if(!p))"];
"1000545" [label="(Call,GFP_KERNEL|__GFP_DMA)"];
"1000761" [label="(Call,dev->scsi_host_ptr->max_sectors << 9)"];
"1000501" [label="(Block,)"];
"1000403" [label="(Call,sizeof(struct sgentry))"];
"1000531" [label="(Identifier,rcode)"];
"1001090" [label="(Call,sg_user[i])"];
"1000700" [label="(Call,actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap))"];
"1001241" [label="(Call,sg_list[i])"];
"1000632" [label="(Identifier,p)"];
"1001268" [label="(Identifier,rcode)"];
"1000425" [label="(Identifier,actual_fibsize)"];
"1000208" [label="(Call,memset(sg_list, 0, sizeof(sg_list)))"];
"1000594" [label="(Call,sg_list[i] = p)"];
"1000230" [label="(Call,fibsize > (dev->max_fib_size - sizeof(struct aac_fibhdr)))"];
"1000809" [label="(Call,usg->sg[i].addr)"];
"1000787" [label="(Call,GFP_KERNEL|__GFP_DMA)"];
"1000585" [label="(Call,sg_user[i] = (void __user *)(uintptr_t)addr)"];
"1000816" [label="(Call,sg_list[i] = p)"];
"1000247" [label="(Identifier,fibsize)"];
"1000831" [label="(Identifier,p)"];
"1000392" [label="(Call,sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry)))"];
"1000364" [label="(Call,data_dir = DMA_FROM_DEVICE)"];
"1001297" [label="(Call,byte_count += upsg->sg[i].count)"];
"1001275" [label="(Call,dev->pdev)"];
"1000246" [label="(Call,kmalloc(fibsize, GFP_KERNEL))"];
"1000249" [label="(ControlStructure,if (!user_srbcmd))"];
"1000628" [label="(Call,pci_map_single(dev->pdev, p, upsg->sg[i].count, data_dir))"];
"1001089" [label="(Identifier,p)"];
"1001226" [label="(Call,sg_user[i])"];
"1001019" [label="(Call,kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000439" [label="(Identifier,data_dir)"];
"1001201" [label="(Identifier,rcode)"];
"1000707" [label="(Identifier,GFP_KERNEL)"];
"1000669" [label="(Call,byte_count += upsg->sg[i].count)"];
"1000741" [label="(Block,)"];
"1001108" [label="(Call,pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1000720" [label="(Call,actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap))"];
"1001039" [label="(Call,addr = (u64)usg->sg[i].addr[0])"];
"1001385" [label="(Call,le32_to_cpu(\n\t\t\t  (dev->adapter_info.options & AAC_OPT_SGMAP_HOST64)\n\t\t\t      ? ((struct sgmap64*)&srbcmd->sg)->sg[i].count\n\t\t\t      : srbcmd->sg.sg[i].count))"];
"1000538" [label="(Call,upsg->sg[i].count)"];
"1000771" [label="(Identifier,usg)"];
"1000850" [label="(Call,addr = pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1000745" [label="(Call,usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1001460" [label="(Block,)"];
"1000753" [label="(Call,(dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1001107" [label="(Identifier,addr)"];
"1001113" [label="(Call,usg->sg[i].count)"];
"1000595" [label="(Call,sg_list[i])"];
"1000361" [label="(Identifier,DMA_BIDIRECTIONAL)"];
"1001057" [label="(Call,usg->sg[i].addr[1])"];
"1000767" [label="(Literal,9)"];
"1000553" [label="(Identifier,rcode)"];
"1000629" [label="(Call,dev->pdev)"];
"1000513" [label="(Call,(dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1000557" [label="(Call,addr = (u64)upsg->sg[i].addr[0])"];
"1000250" [label="(Call,!user_srbcmd)"];
"1000355" [label="(Call,data_dir = DMA_TO_DEVICE)"];
"1000986" [label="(ControlStructure,if (usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)))"];
"1001420" [label="(Call,sg_list[i])"];
"1001080" [label="(Identifier,sg_indx)"];
"1001274" [label="(Call,pci_map_single(dev->pdev, p,\n\t\t\t\t\tupsg->sg[i].count, data_dir))"];
"1001253" [label="(ControlStructure,if(copy_from_user(p, sg_user[i],\n\t\t\t\t\t\t\tupsg->sg[i].count)))"];
"1000803" [label="(Identifier,sg_user)"];
"1001112" [label="(Identifier,p)"];
"1001418" [label="(Identifier,sg_user)"];
"1000410" [label="(Call,user_srbcmd->sg.count & 0xff)"];
"1000383" [label="(Identifier,rcode)"];
"1000240" [label="(Identifier,rcode)"];
"1001279" [label="(Call,upsg->sg[i].count)"];
"1000893" [label="(Call,byte_count += usg->sg[i].count)"];
"1000983" [label="(Block,)"];
"1001043" [label="(Call,usg->sg[i].addr[0])"];
"1000405" [label="(Call,actual_fibsize64 = actual_fibsize + (user_srbcmd->sg.count & 0xff) *\n\t  (sizeof(struct sgentry64) - sizeof(struct sgentry)))"];
"1001013" [label="(Identifier,rcode)"];
"1000791" [label="(Call,!p)"];
"1000818" [label="(Identifier,sg_list)"];
"1000260" [label="(Identifier,user_srbcmd)"];
"1001381" [label="(Identifier,i)"];
"1001459" [label="(Identifier,i)"];
"1000437" [label="(Call,(data_dir == DMA_NONE) && user_srbcmd->sg.count)"];
"1000211" [label="(Call,sizeof(sg_list))"];
"1000607" [label="(ControlStructure,if(copy_from_user(p,sg_user[i],upsg->sg[i].count)))"];
"1001306" [label="(Call,psg->sg[i].count = cpu_to_le32(upsg->sg[i].count))"];
"1000231" [label="(Identifier,fibsize)"];
"1000596" [label="(Identifier,sg_list)"];
"1000117" [label="(MethodParameterIn,void __user * arg)"];
"1000817" [label="(Call,sg_list[i])"];
"1000374" [label="(Call,user_srbcmd->sg.count)"];
"1000233" [label="(Call,dev->max_fib_size)"];
"1000561" [label="(Call,upsg->sg[i].addr[0])"];
"1001093" [label="(Call,usg->sg[i].count)"];
"1000360" [label="(Identifier,data_dir)"];
"1001315" [label="(Call,upsg->sg[i].count)"];
"1000587" [label="(Identifier,sg_user)"];
"1000598" [label="(Identifier,p)"];
"1001382" [label="(Block,)"];
"1000575" [label="(Call,upsg->sg[i].addr[1])"];
"1001040" [label="(Identifier,addr)"];
"1001171" [label="(Block,)"];
"1000547" [label="(Identifier,__GFP_DMA)"];
"1001142" [label="(Call,psg->sg[i].count = cpu_to_le32(usg->sg[i].count))"];
"1000232" [label="(Call,dev->max_fib_size - sizeof(struct aac_fibhdr))"];
"1001054" [label="(Call,((u64)usg->sg[i].addr[1]) << 32)"];
"1000438" [label="(Call,data_dir == DMA_NONE)"];
"1001246" [label="(Identifier,sg_indx)"];
"1000359" [label="(Call,data_dir = DMA_BIDIRECTIONAL)"];
"1000138" [label="(Literal,0)"];
"1001029" [label="(Identifier,__GFP_DMA)"];
"1000535" [label="(Call,p = kmalloc(upsg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000701" [label="(Identifier,actual_fibsize)"];
"1000210" [label="(Literal,0)"];
"1001477" [label="(MethodReturn,static int)"];
"1000229" [label="(ControlStructure,if (fibsize > (dev->max_fib_size - sizeof(struct aac_fibhdr))))"];
"1000506" [label="(Call,upsg->sg[i].count)"];
"1001221" [label="(Identifier,rcode)"];
"1000254" [label="(Identifier,rcode)"];
"1000262" [label="(Identifier,fibsize)"];
"1000366" [label="(Identifier,DMA_FROM_DEVICE)"];
"1000357" [label="(Identifier,DMA_TO_DEVICE)"];
"1000559" [label="(Call,(u64)upsg->sg[i].addr[0])"];
"1000911" [label="(Call,usg->sg[i].count)"];
"1000627" [label="(Identifier,addr)"];
"1001416" [label="(Call,copy_to_user(sg_user[i], sg_list[i], byte_count))"];
"1000902" [label="(Call,psg->sg[i].count = cpu_to_le32(usg->sg[i].count))"];
"1000586" [label="(Call,sg_user[i])"];
"1001215" [label="(Identifier,GFP_KERNEL)"];
"1000245" [label="(Identifier,user_srbcmd)"];
"1000236" [label="(Call,sizeof(struct aac_fibhdr))"];
"1000790" [label="(ControlStructure,if(!p))"];
"1000372" [label="(ControlStructure,if (user_srbcmd->sg.count > ARRAY_SIZE(sg_list)))"];
"1001150" [label="(Call,cpu_to_le32(usg->sg[i].count))"];
"1000483" [label="(Call,actual_fibsize64 == fibsize)"];
"1000353" [label="(Block,)"];
"1000136" [label="(Call,fibsize = 0)"];
"1000271" [label="(Call,arg+fibsize)"];
"1000269" [label="(Call,user_reply = arg+fibsize)"];
"1001218" [label="(Identifier,p)"];
"1001423" [label="(Identifier,byte_count)"];
"1000777" [label="(Call,p = kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000910" [label="(Call,cpu_to_le32(usg->sg[i].count))"];
"1000852" [label="(Call,pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1001183" [label="(Call,(dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1000549" [label="(Call,!p)"];
"1000702" [label="(Call,sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap))"];
"1000390" [label="(Call,sizeof(struct aac_srb))"];
"1001030" [label="(ControlStructure,if(!p))"];
"1000505" [label="(Call,upsg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1001205" [label="(Call,p = kmalloc(upsg->sg[i].count, GFP_KERNEL))"];
"1000835" [label="(Call,upsg->sg[i].count)"];
"1000209" [label="(Identifier,sg_list)"];
"1001273" [label="(Identifier,addr)"];
"1001068" [label="(Call,sg_user[i])"];
"1000744" [label="(ControlStructure,if (usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)))"];
"1000778" [label="(Identifier,p)"];
"1000370" [label="(Identifier,data_dir)"];
"1001052" [label="(Call,addr += ((u64)usg->sg[i].addr[1]) << 32)"];
"1000371" [label="(Identifier,DMA_NONE)"];
"1001035" [label="(Identifier,rcode)"];
"1001286" [label="(Identifier,data_dir)"];
"1001174" [label="(ControlStructure,if (upsg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)))"];
"1000792" [label="(Identifier,p)"];
"1000389" [label="(Call,sizeof(struct aac_srb) - sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry)))"];
"1001075" [label="(Call,sg_list[i])"];
"1001417" [label="(Call,sg_user[i])"];
"1000746" [label="(Call,usg->sg[i].count)"];
"1001032" [label="(Identifier,p)"];
"1001120" [label="(Identifier,data_dir)"];
"1001244" [label="(Identifier,p)"];
"1001449" [label="(Call,kfree(user_srbcmd))"];
"1000259" [label="(Call,copy_from_user(user_srbcmd, user_srb,fibsize))"];
"1001278" [label="(Identifier,p)"];
"1000130" [label="(Call,*user_srb = arg)"];
"1001066" [label="(Literal,32)"];
"1000788" [label="(Identifier,GFP_KERNEL)"];
"1001233" [label="(Call,upsg->sg[i].addr)"];
"1001175" [label="(Call,upsg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1001003" [label="(Call,dev->scsi_host_ptr->max_sectors << 9)"];
"1001207" [label="(Call,kmalloc(upsg->sg[i].count, GFP_KERNEL))"];
"1001272" [label="(Call,addr = pci_map_single(dev->pdev, p,\n\t\t\t\t\tupsg->sg[i].count, data_dir))"];
"1000379" [label="(Call,ARRAY_SIZE(sg_list))"];
"1001192" [label="(Call,dev->scsi_host_ptr->max_sectors)"];
"1001386" [label="(Call,(dev->adapter_info.options & AAC_OPT_SGMAP_HOST64)\n\t\t\t      ? ((struct sgmap64*)&srbcmd->sg)->sg[i].count\n\t\t\t      : srbcmd->sg.sg[i].count)"];
"1000687" [label="(Call,upsg->sg[i].count)"];
"1001462" [label="(Call,sg_list[i])"];
"1000801" [label="(Call,sg_user[i] = (void __user *)(uintptr_t)usg->sg[i].addr)"];
"1000822" [label="(Identifier,sg_indx)"];
"1000589" [label="(Call,(void __user *)(uintptr_t)addr)"];
"1000571" [label="(Identifier,addr)"];
"1000118" [label="(Block,)"];
"1000608" [label="(Call,copy_from_user(p,sg_user[i],upsg->sg[i].count))"];
"1000131" [label="(Identifier,user_srb)"];
"1000780" [label="(Call,usg->sg[i].count)"];
"1001416" -> "1001415"  [label="AST: "];
"1001416" -> "1001423"  [label="CFG: "];
"1001417" -> "1001416"  [label="AST: "];
"1001420" -> "1001416"  [label="AST: "];
"1001423" -> "1001416"  [label="AST: "];
"1001426" -> "1001416"  [label="CFG: "];
"1001381" -> "1001416"  [label="CFG: "];
"1001416" -> "1001477"  [label="DDG: sg_user[i]"];
"1001416" -> "1001477"  [label="DDG: byte_count"];
"1001416" -> "1001477"  [label="DDG: copy_to_user(sg_user[i], sg_list[i], byte_count)"];
"1001416" -> "1001477"  [label="DDG: sg_list[i]"];
"1000801" -> "1001416"  [label="DDG: sg_user[i]"];
"1000608" -> "1001416"  [label="DDG: sg_user[i]"];
"1000585" -> "1001416"  [label="DDG: sg_user[i]"];
"1001254" -> "1001416"  [label="DDG: sg_user[i]"];
"1000830" -> "1001416"  [label="DDG: sg_user[i]"];
"1001067" -> "1001416"  [label="DDG: sg_user[i]"];
"1001225" -> "1001416"  [label="DDG: sg_user[i]"];
"1001088" -> "1001416"  [label="DDG: sg_user[i]"];
"1001074" -> "1001416"  [label="DDG: sg_list[i]"];
"1000594" -> "1001416"  [label="DDG: sg_list[i]"];
"1000816" -> "1001416"  [label="DDG: sg_list[i]"];
"1000379" -> "1001416"  [label="DDG: sg_list"];
"1001240" -> "1001416"  [label="DDG: sg_list[i]"];
"1001383" -> "1001416"  [label="DDG: byte_count"];
"1001416" -> "1001461"  [label="DDG: sg_list[i]"];
"1000801" -> "1000741"  [label="AST: "];
"1000801" -> "1000805"  [label="CFG: "];
"1000802" -> "1000801"  [label="AST: "];
"1000805" -> "1000801"  [label="AST: "];
"1000818" -> "1000801"  [label="CFG: "];
"1000801" -> "1001477"  [label="DDG: (void __user *)(uintptr_t)usg->sg[i].addr"];
"1000801" -> "1001477"  [label="DDG: sg_user[i]"];
"1000805" -> "1000801"  [label="DDG: (uintptr_t)usg->sg[i].addr"];
"1000801" -> "1000830"  [label="DDG: sg_user[i]"];
"1000805" -> "1000807"  [label="CFG: "];
"1000806" -> "1000805"  [label="AST: "];
"1000807" -> "1000805"  [label="AST: "];
"1000805" -> "1001477"  [label="DDG: (uintptr_t)usg->sg[i].addr"];
"1000807" -> "1000805"  [label="DDG: usg->sg[i].addr"];
"1000807" -> "1000809"  [label="CFG: "];
"1000808" -> "1000807"  [label="AST: "];
"1000809" -> "1000807"  [label="AST: "];
"1000807" -> "1001477"  [label="DDG: usg->sg[i].addr"];
"1000608" -> "1000607"  [label="AST: "];
"1000608" -> "1000613"  [label="CFG: "];
"1000609" -> "1000608"  [label="AST: "];
"1000610" -> "1000608"  [label="AST: "];
"1000613" -> "1000608"  [label="AST: "];
"1000622" -> "1000608"  [label="CFG: "];
"1000627" -> "1000608"  [label="CFG: "];
"1000608" -> "1001477"  [label="DDG: upsg->sg[i].count"];
"1000608" -> "1001477"  [label="DDG: sg_user[i]"];
"1000608" -> "1001477"  [label="DDG: copy_from_user(p,sg_user[i],upsg->sg[i].count)"];
"1000608" -> "1001477"  [label="DDG: p"];
"1000549" -> "1000608"  [label="DDG: p"];
"1000585" -> "1000608"  [label="DDG: sg_user[i]"];
"1000537" -> "1000608"  [label="DDG: upsg->sg[i].count"];
"1000608" -> "1000628"  [label="DDG: p"];
"1000608" -> "1000628"  [label="DDG: upsg->sg[i].count"];
"1000549" -> "1000548"  [label="AST: "];
"1000549" -> "1000550"  [label="CFG: "];
"1000550" -> "1000549"  [label="AST: "];
"1000553" -> "1000549"  [label="CFG: "];
"1000558" -> "1000549"  [label="CFG: "];
"1000549" -> "1001477"  [label="DDG: p"];
"1000549" -> "1001477"  [label="DDG: !p"];
"1000535" -> "1000549"  [label="DDG: p"];
"1000549" -> "1000594"  [label="DDG: p"];
"1000549" -> "1000628"  [label="DDG: p"];
"1000535" -> "1000501"  [label="AST: "];
"1000535" -> "1000537"  [label="CFG: "];
"1000536" -> "1000535"  [label="AST: "];
"1000537" -> "1000535"  [label="AST: "];
"1000550" -> "1000535"  [label="CFG: "];
"1000535" -> "1001477"  [label="DDG: kmalloc(upsg->sg[i].count,GFP_KERNEL|__GFP_DMA)"];
"1000537" -> "1000535"  [label="DDG: upsg->sg[i].count"];
"1000537" -> "1000535"  [label="DDG: GFP_KERNEL|__GFP_DMA"];
"1000537" -> "1000545"  [label="CFG: "];
"1000538" -> "1000537"  [label="AST: "];
"1000545" -> "1000537"  [label="AST: "];
"1000537" -> "1001477"  [label="DDG: GFP_KERNEL|__GFP_DMA"];
"1000537" -> "1001477"  [label="DDG: upsg->sg[i].count"];
"1000505" -> "1000537"  [label="DDG: upsg->sg[i].count"];
"1000545" -> "1000537"  [label="DDG: GFP_KERNEL"];
"1000545" -> "1000537"  [label="DDG: __GFP_DMA"];
"1000537" -> "1000628"  [label="DDG: upsg->sg[i].count"];
"1000505" -> "1000504"  [label="AST: "];
"1000505" -> "1000513"  [label="CFG: "];
"1000506" -> "1000505"  [label="AST: "];
"1000513" -> "1000505"  [label="AST: "];
"1000531" -> "1000505"  [label="CFG: "];
"1000536" -> "1000505"  [label="CFG: "];
"1000505" -> "1001477"  [label="DDG: upsg->sg[i].count"];
"1000505" -> "1001477"  [label="DDG: (dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536"];
"1000505" -> "1001477"  [label="DDG: upsg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1000686" -> "1000505"  [label="DDG: upsg->sg[i].count"];
"1000521" -> "1000505"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1000521" -> "1000505"  [label="DDG: 9"];
"1000686" -> "1000678"  [label="AST: "];
"1000686" -> "1000687"  [label="CFG: "];
"1000687" -> "1000686"  [label="AST: "];
"1000678" -> "1000686"  [label="CFG: "];
"1000686" -> "1001477"  [label="DDG: upsg->sg[i].count"];
"1000686" -> "1000678"  [label="DDG: upsg->sg[i].count"];
"1000628" -> "1000686"  [label="DDG: upsg->sg[i].count"];
"1000628" -> "1000626"  [label="AST: "];
"1000628" -> "1000640"  [label="CFG: "];
"1000629" -> "1000628"  [label="AST: "];
"1000632" -> "1000628"  [label="AST: "];
"1000633" -> "1000628"  [label="AST: "];
"1000640" -> "1000628"  [label="AST: "];
"1000626" -> "1000628"  [label="CFG: "];
"1000628" -> "1001477"  [label="DDG: dev->pdev"];
"1000628" -> "1001477"  [label="DDG: data_dir"];
"1000628" -> "1001477"  [label="DDG: p"];
"1000628" -> "1000626"  [label="DDG: dev->pdev"];
"1000628" -> "1000626"  [label="DDG: p"];
"1000628" -> "1000626"  [label="DDG: upsg->sg[i].count"];
"1000628" -> "1000626"  [label="DDG: data_dir"];
"1000438" -> "1000628"  [label="DDG: data_dir"];
"1000628" -> "1000669"  [label="DDG: upsg->sg[i].count"];
"1000438" -> "1000437"  [label="AST: "];
"1000438" -> "1000440"  [label="CFG: "];
"1000439" -> "1000438"  [label="AST: "];
"1000440" -> "1000438"  [label="AST: "];
"1000443" -> "1000438"  [label="CFG: "];
"1000437" -> "1000438"  [label="CFG: "];
"1000438" -> "1001477"  [label="DDG: DMA_NONE"];
"1000438" -> "1001477"  [label="DDG: data_dir"];
"1000438" -> "1000437"  [label="DDG: data_dir"];
"1000438" -> "1000437"  [label="DDG: DMA_NONE"];
"1000364" -> "1000438"  [label="DDG: data_dir"];
"1000355" -> "1000438"  [label="DDG: data_dir"];
"1000369" -> "1000438"  [label="DDG: data_dir"];
"1000359" -> "1000438"  [label="DDG: data_dir"];
"1000438" -> "1000852"  [label="DDG: data_dir"];
"1000438" -> "1001108"  [label="DDG: data_dir"];
"1000438" -> "1001274"  [label="DDG: data_dir"];
"1000364" -> "1000353"  [label="AST: "];
"1000364" -> "1000366"  [label="CFG: "];
"1000365" -> "1000364"  [label="AST: "];
"1000366" -> "1000364"  [label="AST: "];
"1000367" -> "1000364"  [label="CFG: "];
"1000364" -> "1001477"  [label="DDG: data_dir"];
"1000364" -> "1001477"  [label="DDG: DMA_FROM_DEVICE"];
"1000355" -> "1000353"  [label="AST: "];
"1000355" -> "1000357"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000357" -> "1000355"  [label="AST: "];
"1000358" -> "1000355"  [label="CFG: "];
"1000355" -> "1001477"  [label="DDG: data_dir"];
"1000355" -> "1001477"  [label="DDG: DMA_TO_DEVICE"];
"1000369" -> "1000353"  [label="AST: "];
"1000369" -> "1000371"  [label="CFG: "];
"1000370" -> "1000369"  [label="AST: "];
"1000371" -> "1000369"  [label="AST: "];
"1000376" -> "1000369"  [label="CFG: "];
"1000369" -> "1001477"  [label="DDG: data_dir"];
"1000369" -> "1001477"  [label="DDG: DMA_NONE"];
"1000359" -> "1000353"  [label="AST: "];
"1000359" -> "1000361"  [label="CFG: "];
"1000360" -> "1000359"  [label="AST: "];
"1000361" -> "1000359"  [label="AST: "];
"1000362" -> "1000359"  [label="CFG: "];
"1000359" -> "1001477"  [label="DDG: DMA_BIDIRECTIONAL"];
"1000359" -> "1001477"  [label="DDG: data_dir"];
"1000521" -> "1000513"  [label="AST: "];
"1000521" -> "1000527"  [label="CFG: "];
"1000522" -> "1000521"  [label="AST: "];
"1000527" -> "1000521"  [label="AST: "];
"1000513" -> "1000521"  [label="CFG: "];
"1000521" -> "1001477"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1000521" -> "1000513"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1000521" -> "1000513"  [label="DDG: 9"];
"1000545" -> "1000547"  [label="CFG: "];
"1000546" -> "1000545"  [label="AST: "];
"1000547" -> "1000545"  [label="AST: "];
"1000545" -> "1001477"  [label="DDG: GFP_KERNEL"];
"1000545" -> "1001477"  [label="DDG: __GFP_DMA"];
"1000246" -> "1000545"  [label="DDG: GFP_KERNEL"];
"1000246" -> "1000244"  [label="AST: "];
"1000246" -> "1000248"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000248" -> "1000246"  [label="AST: "];
"1000244" -> "1000246"  [label="CFG: "];
"1000246" -> "1001477"  [label="DDG: GFP_KERNEL"];
"1000246" -> "1001477"  [label="DDG: fibsize"];
"1000246" -> "1000244"  [label="DDG: fibsize"];
"1000246" -> "1000244"  [label="DDG: GFP_KERNEL"];
"1000230" -> "1000246"  [label="DDG: fibsize"];
"1000246" -> "1000259"  [label="DDG: fibsize"];
"1000246" -> "1000699"  [label="DDG: GFP_KERNEL"];
"1000246" -> "1001027"  [label="DDG: GFP_KERNEL"];
"1000246" -> "1001207"  [label="DDG: GFP_KERNEL"];
"1000230" -> "1000229"  [label="AST: "];
"1000230" -> "1000232"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000232" -> "1000230"  [label="AST: "];
"1000240" -> "1000230"  [label="CFG: "];
"1000245" -> "1000230"  [label="CFG: "];
"1000230" -> "1001477"  [label="DDG: fibsize"];
"1000230" -> "1001477"  [label="DDG: dev->max_fib_size - sizeof(struct aac_fibhdr)"];
"1000230" -> "1001477"  [label="DDG: fibsize > (dev->max_fib_size - sizeof(struct aac_fibhdr))"];
"1000136" -> "1000230"  [label="DDG: fibsize"];
"1000232" -> "1000230"  [label="DDG: dev->max_fib_size"];
"1000136" -> "1000118"  [label="AST: "];
"1000136" -> "1000138"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000141" -> "1000136"  [label="CFG: "];
"1000136" -> "1001477"  [label="DDG: fibsize"];
"1000232" -> "1000236"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000236" -> "1000232"  [label="AST: "];
"1000232" -> "1001477"  [label="DDG: dev->max_fib_size"];
"1000585" -> "1000501"  [label="AST: "];
"1000585" -> "1000589"  [label="CFG: "];
"1000586" -> "1000585"  [label="AST: "];
"1000589" -> "1000585"  [label="AST: "];
"1000596" -> "1000585"  [label="CFG: "];
"1000585" -> "1001477"  [label="DDG: (void __user *)(uintptr_t)addr"];
"1000585" -> "1001477"  [label="DDG: sg_user[i]"];
"1000589" -> "1000585"  [label="DDG: (uintptr_t)addr"];
"1000589" -> "1000591"  [label="CFG: "];
"1000590" -> "1000589"  [label="AST: "];
"1000591" -> "1000589"  [label="AST: "];
"1000589" -> "1001477"  [label="DDG: (uintptr_t)addr"];
"1000591" -> "1000589"  [label="DDG: addr"];
"1000591" -> "1000593"  [label="CFG: "];
"1000592" -> "1000591"  [label="AST: "];
"1000593" -> "1000591"  [label="AST: "];
"1000591" -> "1001477"  [label="DDG: addr"];
"1000570" -> "1000591"  [label="DDG: addr"];
"1000570" -> "1000501"  [label="AST: "];
"1000570" -> "1000572"  [label="CFG: "];
"1000571" -> "1000570"  [label="AST: "];
"1000572" -> "1000570"  [label="AST: "];
"1000587" -> "1000570"  [label="CFG: "];
"1000570" -> "1001477"  [label="DDG: ((u64)upsg->sg[i].addr[1]) << 32"];
"1000572" -> "1000570"  [label="DDG: (u64)upsg->sg[i].addr[1]"];
"1000572" -> "1000570"  [label="DDG: 32"];
"1000557" -> "1000570"  [label="DDG: addr"];
"1000572" -> "1000584"  [label="CFG: "];
"1000573" -> "1000572"  [label="AST: "];
"1000584" -> "1000572"  [label="AST: "];
"1000572" -> "1001477"  [label="DDG: (u64)upsg->sg[i].addr[1]"];
"1000573" -> "1000572"  [label="DDG: upsg->sg[i].addr[1]"];
"1000573" -> "1000575"  [label="CFG: "];
"1000574" -> "1000573"  [label="AST: "];
"1000575" -> "1000573"  [label="AST: "];
"1000584" -> "1000573"  [label="CFG: "];
"1000573" -> "1001477"  [label="DDG: upsg->sg[i].addr[1]"];
"1000557" -> "1000501"  [label="AST: "];
"1000557" -> "1000559"  [label="CFG: "];
"1000558" -> "1000557"  [label="AST: "];
"1000559" -> "1000557"  [label="AST: "];
"1000571" -> "1000557"  [label="CFG: "];
"1000557" -> "1001477"  [label="DDG: (u64)upsg->sg[i].addr[0]"];
"1000559" -> "1000557"  [label="DDG: upsg->sg[i].addr[0]"];
"1000559" -> "1000561"  [label="CFG: "];
"1000560" -> "1000559"  [label="AST: "];
"1000561" -> "1000559"  [label="AST: "];
"1000559" -> "1001477"  [label="DDG: upsg->sg[i].addr[0]"];
"1001254" -> "1001253"  [label="AST: "];
"1001254" -> "1001259"  [label="CFG: "];
"1001255" -> "1001254"  [label="AST: "];
"1001256" -> "1001254"  [label="AST: "];
"1001259" -> "1001254"  [label="AST: "];
"1001268" -> "1001254"  [label="CFG: "];
"1001273" -> "1001254"  [label="CFG: "];
"1001254" -> "1001477"  [label="DDG: copy_from_user(p, sg_user[i],\n\t\t\t\t\t\t\tupsg->sg[i].count)"];
"1001254" -> "1001477"  [label="DDG: p"];
"1001254" -> "1001477"  [label="DDG: sg_user[i]"];
"1001254" -> "1001477"  [label="DDG: upsg->sg[i].count"];
"1001217" -> "1001254"  [label="DDG: p"];
"1001225" -> "1001254"  [label="DDG: sg_user[i]"];
"1001207" -> "1001254"  [label="DDG: upsg->sg[i].count"];
"1001254" -> "1001274"  [label="DDG: p"];
"1001254" -> "1001274"  [label="DDG: upsg->sg[i].count"];
"1001217" -> "1001216"  [label="AST: "];
"1001217" -> "1001218"  [label="CFG: "];
"1001218" -> "1001217"  [label="AST: "];
"1001221" -> "1001217"  [label="CFG: "];
"1001227" -> "1001217"  [label="CFG: "];
"1001217" -> "1001477"  [label="DDG: p"];
"1001217" -> "1001477"  [label="DDG: !p"];
"1001205" -> "1001217"  [label="DDG: p"];
"1001217" -> "1001240"  [label="DDG: p"];
"1001217" -> "1001274"  [label="DDG: p"];
"1001205" -> "1001171"  [label="AST: "];
"1001205" -> "1001207"  [label="CFG: "];
"1001206" -> "1001205"  [label="AST: "];
"1001207" -> "1001205"  [label="AST: "];
"1001218" -> "1001205"  [label="CFG: "];
"1001205" -> "1001477"  [label="DDG: kmalloc(upsg->sg[i].count, GFP_KERNEL)"];
"1001207" -> "1001205"  [label="DDG: upsg->sg[i].count"];
"1001207" -> "1001205"  [label="DDG: GFP_KERNEL"];
"1001207" -> "1001215"  [label="CFG: "];
"1001208" -> "1001207"  [label="AST: "];
"1001215" -> "1001207"  [label="AST: "];
"1001207" -> "1001477"  [label="DDG: GFP_KERNEL"];
"1001207" -> "1001477"  [label="DDG: upsg->sg[i].count"];
"1001175" -> "1001207"  [label="DDG: upsg->sg[i].count"];
"1001207" -> "1001274"  [label="DDG: upsg->sg[i].count"];
"1001175" -> "1001174"  [label="AST: "];
"1001175" -> "1001183"  [label="CFG: "];
"1001176" -> "1001175"  [label="AST: "];
"1001183" -> "1001175"  [label="AST: "];
"1001201" -> "1001175"  [label="CFG: "];
"1001206" -> "1001175"  [label="CFG: "];
"1001175" -> "1001477"  [label="DDG: upsg->sg[i].count"];
"1001175" -> "1001477"  [label="DDG: upsg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1001175" -> "1001477"  [label="DDG: (dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536"];
"1001314" -> "1001175"  [label="DDG: upsg->sg[i].count"];
"1001191" -> "1001175"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1001191" -> "1001175"  [label="DDG: 9"];
"1001314" -> "1001306"  [label="AST: "];
"1001314" -> "1001315"  [label="CFG: "];
"1001315" -> "1001314"  [label="AST: "];
"1001306" -> "1001314"  [label="CFG: "];
"1001314" -> "1001477"  [label="DDG: upsg->sg[i].count"];
"1001314" -> "1001306"  [label="DDG: upsg->sg[i].count"];
"1001274" -> "1001314"  [label="DDG: upsg->sg[i].count"];
"1001274" -> "1001272"  [label="AST: "];
"1001274" -> "1001286"  [label="CFG: "];
"1001275" -> "1001274"  [label="AST: "];
"1001278" -> "1001274"  [label="AST: "];
"1001279" -> "1001274"  [label="AST: "];
"1001286" -> "1001274"  [label="AST: "];
"1001272" -> "1001274"  [label="CFG: "];
"1001274" -> "1001477"  [label="DDG: dev->pdev"];
"1001274" -> "1001477"  [label="DDG: p"];
"1001274" -> "1001477"  [label="DDG: data_dir"];
"1001274" -> "1001272"  [label="DDG: dev->pdev"];
"1001274" -> "1001272"  [label="DDG: p"];
"1001274" -> "1001272"  [label="DDG: upsg->sg[i].count"];
"1001274" -> "1001272"  [label="DDG: data_dir"];
"1001274" -> "1001297"  [label="DDG: upsg->sg[i].count"];
"1001191" -> "1001183"  [label="AST: "];
"1001191" -> "1001197"  [label="CFG: "];
"1001192" -> "1001191"  [label="AST: "];
"1001197" -> "1001191"  [label="AST: "];
"1001183" -> "1001191"  [label="CFG: "];
"1001191" -> "1001477"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1001191" -> "1001183"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1001191" -> "1001183"  [label="DDG: 9"];
"1001225" -> "1001171"  [label="AST: "];
"1001225" -> "1001229"  [label="CFG: "];
"1001226" -> "1001225"  [label="AST: "];
"1001229" -> "1001225"  [label="AST: "];
"1001242" -> "1001225"  [label="CFG: "];
"1001225" -> "1001477"  [label="DDG: (void __user *)(uintptr_t)upsg->sg[i].addr"];
"1001225" -> "1001477"  [label="DDG: sg_user[i]"];
"1001229" -> "1001225"  [label="DDG: (uintptr_t)upsg->sg[i].addr"];
"1001229" -> "1001231"  [label="CFG: "];
"1001230" -> "1001229"  [label="AST: "];
"1001231" -> "1001229"  [label="AST: "];
"1001229" -> "1001477"  [label="DDG: (uintptr_t)upsg->sg[i].addr"];
"1001231" -> "1001229"  [label="DDG: upsg->sg[i].addr"];
"1001231" -> "1001233"  [label="CFG: "];
"1001232" -> "1001231"  [label="AST: "];
"1001233" -> "1001231"  [label="AST: "];
"1001231" -> "1001477"  [label="DDG: upsg->sg[i].addr"];
"1000830" -> "1000829"  [label="AST: "];
"1000830" -> "1000835"  [label="CFG: "];
"1000831" -> "1000830"  [label="AST: "];
"1000832" -> "1000830"  [label="AST: "];
"1000835" -> "1000830"  [label="AST: "];
"1000844" -> "1000830"  [label="CFG: "];
"1000851" -> "1000830"  [label="CFG: "];
"1000830" -> "1001477"  [label="DDG: copy_from_user(p,sg_user[i],upsg->sg[i].count)"];
"1000830" -> "1001477"  [label="DDG: upsg->sg[i].count"];
"1000830" -> "1001477"  [label="DDG: sg_user[i]"];
"1000830" -> "1001477"  [label="DDG: p"];
"1000791" -> "1000830"  [label="DDG: p"];
"1000830" -> "1000852"  [label="DDG: p"];
"1000791" -> "1000790"  [label="AST: "];
"1000791" -> "1000792"  [label="CFG: "];
"1000792" -> "1000791"  [label="AST: "];
"1000795" -> "1000791"  [label="CFG: "];
"1000803" -> "1000791"  [label="CFG: "];
"1000791" -> "1001477"  [label="DDG: p"];
"1000791" -> "1001477"  [label="DDG: !p"];
"1000777" -> "1000791"  [label="DDG: p"];
"1000791" -> "1000816"  [label="DDG: p"];
"1000791" -> "1000852"  [label="DDG: p"];
"1000777" -> "1000741"  [label="AST: "];
"1000777" -> "1000779"  [label="CFG: "];
"1000778" -> "1000777"  [label="AST: "];
"1000779" -> "1000777"  [label="AST: "];
"1000792" -> "1000777"  [label="CFG: "];
"1000777" -> "1001477"  [label="DDG: kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA)"];
"1000779" -> "1000777"  [label="DDG: usg->sg[i].count"];
"1000779" -> "1000777"  [label="DDG: GFP_KERNEL|__GFP_DMA"];
"1000779" -> "1000787"  [label="CFG: "];
"1000780" -> "1000779"  [label="AST: "];
"1000787" -> "1000779"  [label="AST: "];
"1000779" -> "1001477"  [label="DDG: usg->sg[i].count"];
"1000779" -> "1001477"  [label="DDG: GFP_KERNEL|__GFP_DMA"];
"1000745" -> "1000779"  [label="DDG: usg->sg[i].count"];
"1000787" -> "1000779"  [label="DDG: GFP_KERNEL"];
"1000787" -> "1000779"  [label="DDG: __GFP_DMA"];
"1000779" -> "1000852"  [label="DDG: usg->sg[i].count"];
"1000745" -> "1000744"  [label="AST: "];
"1000745" -> "1000753"  [label="CFG: "];
"1000746" -> "1000745"  [label="AST: "];
"1000753" -> "1000745"  [label="AST: "];
"1000771" -> "1000745"  [label="CFG: "];
"1000778" -> "1000745"  [label="CFG: "];
"1000745" -> "1001477"  [label="DDG: usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1000745" -> "1001477"  [label="DDG: (dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536"];
"1000745" -> "1001477"  [label="DDG: usg->sg[i].count"];
"1000910" -> "1000745"  [label="DDG: usg->sg[i].count"];
"1000761" -> "1000745"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1000761" -> "1000745"  [label="DDG: 9"];
"1000910" -> "1000902"  [label="AST: "];
"1000910" -> "1000911"  [label="CFG: "];
"1000911" -> "1000910"  [label="AST: "];
"1000902" -> "1000910"  [label="CFG: "];
"1000910" -> "1001477"  [label="DDG: usg->sg[i].count"];
"1000910" -> "1000902"  [label="DDG: usg->sg[i].count"];
"1000852" -> "1000910"  [label="DDG: usg->sg[i].count"];
"1000852" -> "1000850"  [label="AST: "];
"1000852" -> "1000864"  [label="CFG: "];
"1000853" -> "1000852"  [label="AST: "];
"1000856" -> "1000852"  [label="AST: "];
"1000857" -> "1000852"  [label="AST: "];
"1000864" -> "1000852"  [label="AST: "];
"1000850" -> "1000852"  [label="CFG: "];
"1000852" -> "1001477"  [label="DDG: dev->pdev"];
"1000852" -> "1001477"  [label="DDG: data_dir"];
"1000852" -> "1001477"  [label="DDG: p"];
"1000852" -> "1000850"  [label="DDG: dev->pdev"];
"1000852" -> "1000850"  [label="DDG: p"];
"1000852" -> "1000850"  [label="DDG: usg->sg[i].count"];
"1000852" -> "1000850"  [label="DDG: data_dir"];
"1000852" -> "1000893"  [label="DDG: usg->sg[i].count"];
"1000761" -> "1000753"  [label="AST: "];
"1000761" -> "1000767"  [label="CFG: "];
"1000762" -> "1000761"  [label="AST: "];
"1000767" -> "1000761"  [label="AST: "];
"1000753" -> "1000761"  [label="CFG: "];
"1000761" -> "1001477"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1000761" -> "1000753"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1000761" -> "1000753"  [label="DDG: 9"];
"1000787" -> "1000789"  [label="CFG: "];
"1000788" -> "1000787"  [label="AST: "];
"1000789" -> "1000787"  [label="AST: "];
"1000787" -> "1001477"  [label="DDG: __GFP_DMA"];
"1000787" -> "1001477"  [label="DDG: GFP_KERNEL"];
"1000699" -> "1000787"  [label="DDG: GFP_KERNEL"];
"1000699" -> "1000697"  [label="AST: "];
"1000699" -> "1000707"  [label="CFG: "];
"1000700" -> "1000699"  [label="AST: "];
"1000707" -> "1000699"  [label="AST: "];
"1000697" -> "1000699"  [label="CFG: "];
"1000699" -> "1001477"  [label="DDG: actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)"];
"1000699" -> "1001477"  [label="DDG: GFP_KERNEL"];
"1000699" -> "1000697"  [label="DDG: actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)"];
"1000699" -> "1000697"  [label="DDG: GFP_KERNEL"];
"1000700" -> "1000699"  [label="DDG: actual_fibsize"];
"1000700" -> "1000699"  [label="DDG: sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)"];
"1000700" -> "1000702"  [label="CFG: "];
"1000701" -> "1000700"  [label="AST: "];
"1000702" -> "1000700"  [label="AST: "];
"1000707" -> "1000700"  [label="CFG: "];
"1000700" -> "1001477"  [label="DDG: actual_fibsize"];
"1000700" -> "1001477"  [label="DDG: sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)"];
"1000424" -> "1000700"  [label="DDG: actual_fibsize"];
"1000700" -> "1000720"  [label="DDG: actual_fibsize"];
"1000424" -> "1000423"  [label="AST: "];
"1000424" -> "1000426"  [label="CFG: "];
"1000425" -> "1000424"  [label="AST: "];
"1000426" -> "1000424"  [label="AST: "];
"1000428" -> "1000424"  [label="CFG: "];
"1000423" -> "1000424"  [label="CFG: "];
"1000424" -> "1001477"  [label="DDG: fibsize"];
"1000424" -> "1001477"  [label="DDG: actual_fibsize"];
"1000424" -> "1000423"  [label="DDG: actual_fibsize"];
"1000424" -> "1000423"  [label="DDG: fibsize"];
"1000387" -> "1000424"  [label="DDG: actual_fibsize"];
"1000259" -> "1000424"  [label="DDG: fibsize"];
"1000424" -> "1000427"  [label="DDG: fibsize"];
"1000424" -> "1000483"  [label="DDG: fibsize"];
"1000424" -> "1000962"  [label="DDG: fibsize"];
"1000424" -> "1001338"  [label="DDG: actual_fibsize"];
"1000387" -> "1000118"  [label="AST: "];
"1000387" -> "1000389"  [label="CFG: "];
"1000388" -> "1000387"  [label="AST: "];
"1000389" -> "1000387"  [label="AST: "];
"1000406" -> "1000387"  [label="CFG: "];
"1000387" -> "1001477"  [label="DDG: sizeof(struct aac_srb) - sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry))"];
"1000389" -> "1000387"  [label="DDG: sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry))"];
"1000387" -> "1000405"  [label="DDG: actual_fibsize"];
"1000387" -> "1000407"  [label="DDG: actual_fibsize"];
"1000389" -> "1000392"  [label="CFG: "];
"1000390" -> "1000389"  [label="AST: "];
"1000392" -> "1000389"  [label="AST: "];
"1000389" -> "1001477"  [label="DDG: sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry))"];
"1000395" -> "1000389"  [label="DDG: user_srbcmd->sg.count & 0xff"];
"1000395" -> "1000392"  [label="AST: "];
"1000395" -> "1000403"  [label="CFG: "];
"1000396" -> "1000395"  [label="AST: "];
"1000403" -> "1000395"  [label="AST: "];
"1000392" -> "1000395"  [label="CFG: "];
"1000395" -> "1000392"  [label="DDG: user_srbcmd->sg.count & 0xff"];
"1000396" -> "1000395"  [label="DDG: user_srbcmd->sg.count"];
"1000396" -> "1000395"  [label="DDG: 0xff"];
"1000396" -> "1000402"  [label="CFG: "];
"1000397" -> "1000396"  [label="AST: "];
"1000402" -> "1000396"  [label="AST: "];
"1000404" -> "1000396"  [label="CFG: "];
"1000373" -> "1000396"  [label="DDG: user_srbcmd->sg.count"];
"1000396" -> "1000410"  [label="DDG: user_srbcmd->sg.count"];
"1000373" -> "1000372"  [label="AST: "];
"1000373" -> "1000379"  [label="CFG: "];
"1000374" -> "1000373"  [label="AST: "];
"1000379" -> "1000373"  [label="AST: "];
"1000383" -> "1000373"  [label="CFG: "];
"1000388" -> "1000373"  [label="CFG: "];
"1000373" -> "1001477"  [label="DDG: ARRAY_SIZE(sg_list)"];
"1000373" -> "1001477"  [label="DDG: user_srbcmd->sg.count > ARRAY_SIZE(sg_list)"];
"1000373" -> "1001477"  [label="DDG: user_srbcmd->sg.count"];
"1000379" -> "1000373"  [label="DDG: sg_list"];
"1000379" -> "1000380"  [label="CFG: "];
"1000380" -> "1000379"  [label="AST: "];
"1000379" -> "1001477"  [label="DDG: sg_list"];
"1000208" -> "1000379"  [label="DDG: sg_list"];
"1000379" -> "1001461"  [label="DDG: sg_list"];
"1000208" -> "1000118"  [label="AST: "];
"1000208" -> "1000211"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000210" -> "1000208"  [label="AST: "];
"1000211" -> "1000208"  [label="AST: "];
"1000216" -> "1000208"  [label="CFG: "];
"1000208" -> "1001477"  [label="DDG: sg_list"];
"1000208" -> "1001477"  [label="DDG: memset(sg_list, 0, sizeof(sg_list))"];
"1000208" -> "1001461"  [label="DDG: sg_list"];
"1000259" -> "1000258"  [label="AST: "];
"1000259" -> "1000262"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000259"  [label="AST: "];
"1000262" -> "1000259"  [label="AST: "];
"1000265" -> "1000259"  [label="CFG: "];
"1000270" -> "1000259"  [label="CFG: "];
"1000259" -> "1001477"  [label="DDG: copy_from_user(user_srbcmd, user_srb,fibsize)"];
"1000259" -> "1001477"  [label="DDG: fibsize"];
"1000259" -> "1001477"  [label="DDG: user_srb"];
"1000250" -> "1000259"  [label="DDG: user_srbcmd"];
"1000130" -> "1000259"  [label="DDG: user_srb"];
"1000259" -> "1000269"  [label="DDG: fibsize"];
"1000259" -> "1000271"  [label="DDG: fibsize"];
"1000259" -> "1001449"  [label="DDG: user_srbcmd"];
"1000250" -> "1000249"  [label="AST: "];
"1000250" -> "1000251"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000254" -> "1000250"  [label="CFG: "];
"1000260" -> "1000250"  [label="CFG: "];
"1000250" -> "1001477"  [label="DDG: !user_srbcmd"];
"1000244" -> "1000250"  [label="DDG: user_srbcmd"];
"1000250" -> "1001449"  [label="DDG: user_srbcmd"];
"1000244" -> "1000118"  [label="AST: "];
"1000245" -> "1000244"  [label="AST: "];
"1000251" -> "1000244"  [label="CFG: "];
"1000244" -> "1001477"  [label="DDG: kmalloc(fibsize, GFP_KERNEL)"];
"1000130" -> "1000118"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000137" -> "1000130"  [label="CFG: "];
"1000130" -> "1001477"  [label="DDG: arg"];
"1000130" -> "1001477"  [label="DDG: user_srb"];
"1000117" -> "1000130"  [label="DDG: arg"];
"1000117" -> "1000115"  [label="AST: "];
"1000117" -> "1001477"  [label="DDG: arg"];
"1000117" -> "1000269"  [label="DDG: arg"];
"1000117" -> "1000271"  [label="DDG: arg"];
"1001067" -> "1000983"  [label="AST: "];
"1001067" -> "1001071"  [label="CFG: "];
"1001068" -> "1001067"  [label="AST: "];
"1001071" -> "1001067"  [label="AST: "];
"1001076" -> "1001067"  [label="CFG: "];
"1001067" -> "1001477"  [label="DDG: sg_user[i]"];
"1001067" -> "1001477"  [label="DDG: (void __user *)addr"];
"1001071" -> "1001067"  [label="DDG: addr"];
"1001067" -> "1001088"  [label="DDG: sg_user[i]"];
"1001071" -> "1001073"  [label="CFG: "];
"1001072" -> "1001071"  [label="AST: "];
"1001073" -> "1001071"  [label="AST: "];
"1001071" -> "1001477"  [label="DDG: addr"];
"1001052" -> "1001071"  [label="DDG: addr"];
"1001052" -> "1000983"  [label="AST: "];
"1001052" -> "1001054"  [label="CFG: "];
"1001053" -> "1001052"  [label="AST: "];
"1001054" -> "1001052"  [label="AST: "];
"1001069" -> "1001052"  [label="CFG: "];
"1001052" -> "1001477"  [label="DDG: ((u64)usg->sg[i].addr[1]) << 32"];
"1001054" -> "1001052"  [label="DDG: (u64)usg->sg[i].addr[1]"];
"1001054" -> "1001052"  [label="DDG: 32"];
"1001039" -> "1001052"  [label="DDG: addr"];
"1001054" -> "1001066"  [label="CFG: "];
"1001055" -> "1001054"  [label="AST: "];
"1001066" -> "1001054"  [label="AST: "];
"1001054" -> "1001477"  [label="DDG: (u64)usg->sg[i].addr[1]"];
"1001055" -> "1001054"  [label="DDG: usg->sg[i].addr[1]"];
"1001055" -> "1001057"  [label="CFG: "];
"1001056" -> "1001055"  [label="AST: "];
"1001057" -> "1001055"  [label="AST: "];
"1001066" -> "1001055"  [label="CFG: "];
"1001055" -> "1001477"  [label="DDG: usg->sg[i].addr[1]"];
"1001039" -> "1000983"  [label="AST: "];
"1001039" -> "1001041"  [label="CFG: "];
"1001040" -> "1001039"  [label="AST: "];
"1001041" -> "1001039"  [label="AST: "];
"1001053" -> "1001039"  [label="CFG: "];
"1001039" -> "1001477"  [label="DDG: (u64)usg->sg[i].addr[0]"];
"1001041" -> "1001039"  [label="DDG: usg->sg[i].addr[0]"];
"1001041" -> "1001043"  [label="CFG: "];
"1001042" -> "1001041"  [label="AST: "];
"1001043" -> "1001041"  [label="AST: "];
"1001041" -> "1001477"  [label="DDG: usg->sg[i].addr[0]"];
"1001088" -> "1001087"  [label="AST: "];
"1001088" -> "1001093"  [label="CFG: "];
"1001089" -> "1001088"  [label="AST: "];
"1001090" -> "1001088"  [label="AST: "];
"1001093" -> "1001088"  [label="AST: "];
"1001102" -> "1001088"  [label="CFG: "];
"1001107" -> "1001088"  [label="CFG: "];
"1001088" -> "1001477"  [label="DDG: copy_from_user(p,sg_user[i],usg->sg[i].count)"];
"1001088" -> "1001477"  [label="DDG: p"];
"1001088" -> "1001477"  [label="DDG: usg->sg[i].count"];
"1001088" -> "1001477"  [label="DDG: sg_user[i]"];
"1001031" -> "1001088"  [label="DDG: p"];
"1001019" -> "1001088"  [label="DDG: usg->sg[i].count"];
"1001088" -> "1001108"  [label="DDG: p"];
"1001088" -> "1001108"  [label="DDG: usg->sg[i].count"];
"1001031" -> "1001030"  [label="AST: "];
"1001031" -> "1001032"  [label="CFG: "];
"1001032" -> "1001031"  [label="AST: "];
"1001035" -> "1001031"  [label="CFG: "];
"1001040" -> "1001031"  [label="CFG: "];
"1001031" -> "1001477"  [label="DDG: p"];
"1001031" -> "1001477"  [label="DDG: !p"];
"1001017" -> "1001031"  [label="DDG: p"];
"1001031" -> "1001074"  [label="DDG: p"];
"1001031" -> "1001108"  [label="DDG: p"];
"1001017" -> "1000983"  [label="AST: "];
"1001017" -> "1001019"  [label="CFG: "];
"1001018" -> "1001017"  [label="AST: "];
"1001019" -> "1001017"  [label="AST: "];
"1001032" -> "1001017"  [label="CFG: "];
"1001017" -> "1001477"  [label="DDG: kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA)"];
"1001019" -> "1001017"  [label="DDG: usg->sg[i].count"];
"1001019" -> "1001017"  [label="DDG: GFP_KERNEL|__GFP_DMA"];
"1001019" -> "1001027"  [label="CFG: "];
"1001020" -> "1001019"  [label="AST: "];
"1001027" -> "1001019"  [label="AST: "];
"1001019" -> "1001477"  [label="DDG: GFP_KERNEL|__GFP_DMA"];
"1001019" -> "1001477"  [label="DDG: usg->sg[i].count"];
"1000987" -> "1001019"  [label="DDG: usg->sg[i].count"];
"1001027" -> "1001019"  [label="DDG: GFP_KERNEL"];
"1001027" -> "1001019"  [label="DDG: __GFP_DMA"];
"1001019" -> "1001108"  [label="DDG: usg->sg[i].count"];
"1000987" -> "1000986"  [label="AST: "];
"1000987" -> "1000995"  [label="CFG: "];
"1000988" -> "1000987"  [label="AST: "];
"1000995" -> "1000987"  [label="AST: "];
"1001013" -> "1000987"  [label="CFG: "];
"1001018" -> "1000987"  [label="CFG: "];
"1000987" -> "1001477"  [label="DDG: usg->sg[i].count"];
"1000987" -> "1001477"  [label="DDG: usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1000987" -> "1001477"  [label="DDG: (dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536"];
"1001150" -> "1000987"  [label="DDG: usg->sg[i].count"];
"1001003" -> "1000987"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1001003" -> "1000987"  [label="DDG: 9"];
"1001150" -> "1001142"  [label="AST: "];
"1001150" -> "1001151"  [label="CFG: "];
"1001151" -> "1001150"  [label="AST: "];
"1001142" -> "1001150"  [label="CFG: "];
"1001150" -> "1001477"  [label="DDG: usg->sg[i].count"];
"1001150" -> "1001142"  [label="DDG: usg->sg[i].count"];
"1001108" -> "1001150"  [label="DDG: usg->sg[i].count"];
"1001108" -> "1001106"  [label="AST: "];
"1001108" -> "1001120"  [label="CFG: "];
"1001109" -> "1001108"  [label="AST: "];
"1001112" -> "1001108"  [label="AST: "];
"1001113" -> "1001108"  [label="AST: "];
"1001120" -> "1001108"  [label="AST: "];
"1001106" -> "1001108"  [label="CFG: "];
"1001108" -> "1001477"  [label="DDG: dev->pdev"];
"1001108" -> "1001477"  [label="DDG: data_dir"];
"1001108" -> "1001477"  [label="DDG: p"];
"1001108" -> "1001106"  [label="DDG: dev->pdev"];
"1001108" -> "1001106"  [label="DDG: p"];
"1001108" -> "1001106"  [label="DDG: usg->sg[i].count"];
"1001108" -> "1001106"  [label="DDG: data_dir"];
"1001108" -> "1001133"  [label="DDG: usg->sg[i].count"];
"1001003" -> "1000995"  [label="AST: "];
"1001003" -> "1001009"  [label="CFG: "];
"1001004" -> "1001003"  [label="AST: "];
"1001009" -> "1001003"  [label="AST: "];
"1000995" -> "1001003"  [label="CFG: "];
"1001003" -> "1001477"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1001003" -> "1000995"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1001003" -> "1000995"  [label="DDG: 9"];
"1001027" -> "1001029"  [label="CFG: "];
"1001028" -> "1001027"  [label="AST: "];
"1001029" -> "1001027"  [label="AST: "];
"1001027" -> "1001477"  [label="DDG: GFP_KERNEL"];
"1001027" -> "1001477"  [label="DDG: __GFP_DMA"];
"1001074" -> "1000983"  [label="AST: "];
"1001074" -> "1001078"  [label="CFG: "];
"1001075" -> "1001074"  [label="AST: "];
"1001078" -> "1001074"  [label="AST: "];
"1001080" -> "1001074"  [label="CFG: "];
"1001074" -> "1001477"  [label="DDG: sg_list[i]"];
"1001074" -> "1001461"  [label="DDG: sg_list[i]"];
"1000594" -> "1000501"  [label="AST: "];
"1000594" -> "1000598"  [label="CFG: "];
"1000595" -> "1000594"  [label="AST: "];
"1000598" -> "1000594"  [label="AST: "];
"1000600" -> "1000594"  [label="CFG: "];
"1000594" -> "1001477"  [label="DDG: sg_list[i]"];
"1000594" -> "1001461"  [label="DDG: sg_list[i]"];
"1000816" -> "1000741"  [label="AST: "];
"1000816" -> "1000820"  [label="CFG: "];
"1000817" -> "1000816"  [label="AST: "];
"1000820" -> "1000816"  [label="AST: "];
"1000822" -> "1000816"  [label="CFG: "];
"1000816" -> "1001477"  [label="DDG: sg_list[i]"];
"1000816" -> "1001461"  [label="DDG: sg_list[i]"];
"1001240" -> "1001171"  [label="AST: "];
"1001240" -> "1001244"  [label="CFG: "];
"1001241" -> "1001240"  [label="AST: "];
"1001244" -> "1001240"  [label="AST: "];
"1001246" -> "1001240"  [label="CFG: "];
"1001240" -> "1001477"  [label="DDG: sg_list[i]"];
"1001240" -> "1001461"  [label="DDG: sg_list[i]"];
"1001383" -> "1001382"  [label="AST: "];
"1001383" -> "1001385"  [label="CFG: "];
"1001384" -> "1001383"  [label="AST: "];
"1001385" -> "1001383"  [label="AST: "];
"1001418" -> "1001383"  [label="CFG: "];
"1001383" -> "1001477"  [label="DDG: le32_to_cpu(\n\t\t\t  (dev->adapter_info.options & AAC_OPT_SGMAP_HOST64)\n\t\t\t      ? ((struct sgmap64*)&srbcmd->sg)->sg[i].count\n\t\t\t      : srbcmd->sg.sg[i].count)"];
"1001385" -> "1001383"  [label="DDG: (dev->adapter_info.options & AAC_OPT_SGMAP_HOST64)\n\t\t\t      ? ((struct sgmap64*)&srbcmd->sg)->sg[i].count\n\t\t\t      : srbcmd->sg.sg[i].count"];
"1001385" -> "1001386"  [label="CFG: "];
"1001386" -> "1001385"  [label="AST: "];
"1001385" -> "1001477"  [label="DDG: (dev->adapter_info.options & AAC_OPT_SGMAP_HOST64)\n\t\t\t      ? ((struct sgmap64*)&srbcmd->sg)->sg[i].count\n\t\t\t      : srbcmd->sg.sg[i].count"];
"1001461" -> "1001460"  [label="AST: "];
"1001461" -> "1001462"  [label="CFG: "];
"1001462" -> "1001461"  [label="AST: "];
"1001459" -> "1001461"  [label="CFG: "];
"1001461" -> "1001477"  [label="DDG: sg_list[i]"];
"1001461" -> "1001477"  [label="DDG: kfree(sg_list[i])"];
}
