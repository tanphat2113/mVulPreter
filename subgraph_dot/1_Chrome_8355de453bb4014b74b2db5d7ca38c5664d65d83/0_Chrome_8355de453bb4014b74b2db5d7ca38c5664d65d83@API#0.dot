digraph "0_Chrome_8355de453bb4014b74b2db5d7ca38c5664d65d83@API" {
"1000381" [label="(Call,std::move(navigation_ui_data))"];
"1000319" [label="(Call,navigation_ui_data = navigation_handle_->GetNavigationUIData()->Clone())"];
"1000341" [label="(Call,NavigationURLLoader::Create(\n      browser_context->GetResourceContext(), partition,\n      std::make_unique<NavigationRequestInfo>(\n          common_params_, begin_params_.Clone(), site_for_cookies,\n          frame_tree_node_->IsMainFrame(), parent_is_main_frame,\n          IsSecureFrame(frame_tree_node_->parent()),\n          frame_tree_node_->frame_tree_node_id(), is_for_guests_only,\n          report_raw_headers,\n          navigating_frame_host->GetVisibilityState() ==\n              blink::mojom::PageVisibilityState::kPrerender,\n          upgrade_if_insecure_,\n          blob_url_loader_factory_ ? blob_url_loader_factory_->Clone()\n                                   : nullptr,\n          devtools_navigation_token(),\n          frame_tree_node_->devtools_frame_token()),\n      std::move(navigation_ui_data),\n      navigation_handle_->service_worker_handle(),\n      navigation_handle_->appcache_handle(), this))"];
"1000339" [label="(Call,loader_ = NavigationURLLoader::Create(\n      browser_context->GetResourceContext(), partition,\n      std::make_unique<NavigationRequestInfo>(\n          common_params_, begin_params_.Clone(), site_for_cookies,\n          frame_tree_node_->IsMainFrame(), parent_is_main_frame,\n          IsSecureFrame(frame_tree_node_->parent()),\n          frame_tree_node_->frame_tree_node_id(), is_for_guests_only,\n          report_raw_headers,\n          navigating_frame_host->GetVisibilityState() ==\n              blink::mojom::PageVisibilityState::kPrerender,\n          upgrade_if_insecure_,\n          blob_url_loader_factory_ ? blob_url_loader_factory_->Clone()\n                                   : nullptr,\n          devtools_navigation_token(),\n          frame_tree_node_->devtools_frame_token()),\n      std::move(navigation_ui_data),\n      navigation_handle_->service_worker_handle(),\n      navigation_handle_->appcache_handle(), this))"];
"1000341" [label="(Call,NavigationURLLoader::Create(\n      browser_context->GetResourceContext(), partition,\n      std::make_unique<NavigationRequestInfo>(\n          common_params_, begin_params_.Clone(), site_for_cookies,\n          frame_tree_node_->IsMainFrame(), parent_is_main_frame,\n          IsSecureFrame(frame_tree_node_->parent()),\n          frame_tree_node_->frame_tree_node_id(), is_for_guests_only,\n          report_raw_headers,\n          navigating_frame_host->GetVisibilityState() ==\n              blink::mojom::PageVisibilityState::kPrerender,\n          upgrade_if_insecure_,\n          blob_url_loader_factory_ ? blob_url_loader_factory_->Clone()\n                                   : nullptr,\n          devtools_navigation_token(),\n          frame_tree_node_->devtools_frame_token()),\n      std::move(navigation_ui_data),\n      navigation_handle_->service_worker_handle(),\n      navigation_handle_->appcache_handle(), this))"];
"1000340" [label="(Identifier,loader_)"];
"1000339" [label="(Call,loader_ = NavigationURLLoader::Create(\n      browser_context->GetResourceContext(), partition,\n      std::make_unique<NavigationRequestInfo>(\n          common_params_, begin_params_.Clone(), site_for_cookies,\n          frame_tree_node_->IsMainFrame(), parent_is_main_frame,\n          IsSecureFrame(frame_tree_node_->parent()),\n          frame_tree_node_->frame_tree_node_id(), is_for_guests_only,\n          report_raw_headers,\n          navigating_frame_host->GetVisibilityState() ==\n              blink::mojom::PageVisibilityState::kPrerender,\n          upgrade_if_insecure_,\n          blob_url_loader_factory_ ? blob_url_loader_factory_->Clone()\n                                   : nullptr,\n          devtools_navigation_token(),\n          frame_tree_node_->devtools_frame_token()),\n      std::move(navigation_ui_data),\n      navigation_handle_->service_worker_handle(),\n      navigation_handle_->appcache_handle(), this))"];
"1000381" [label="(Call,std::move(navigation_ui_data))"];
"1000319" [label="(Call,navigation_ui_data = navigation_handle_->GetNavigationUIData()->Clone())"];
"1000320" [label="(Identifier,navigation_ui_data)"];
"1000383" [label="(Call,navigation_handle_->service_worker_handle())"];
"1000324" [label="(Identifier,is_for_guests_only)"];
"1000317" [label="(ControlStructure,if (navigation_handle_->GetNavigationUIData()))"];
"1000382" [label="(Identifier,navigation_ui_data)"];
"1000321" [label="(Call,navigation_handle_->GetNavigationUIData()->Clone())"];
"1000342" [label="(Call,browser_context->GetResourceContext())"];
"1000344" [label="(Call,std::make_unique<NavigationRequestInfo>(\n          common_params_, begin_params_.Clone(), site_for_cookies,\n          frame_tree_node_->IsMainFrame(), parent_is_main_frame,\n          IsSecureFrame(frame_tree_node_->parent()),\n          frame_tree_node_->frame_tree_node_id(), is_for_guests_only,\n          report_raw_headers,\n          navigating_frame_host->GetVisibilityState() ==\n              blink::mojom::PageVisibilityState::kPrerender,\n          upgrade_if_insecure_,\n          blob_url_loader_factory_ ? blob_url_loader_factory_->Clone()\n                                   : nullptr,\n          devtools_navigation_token(),\n          frame_tree_node_->devtools_frame_token()))"];
"1000199" [label="(Call,DCHECK(partition))"];
"1000384" [label="(Call,navigation_handle_->appcache_handle())"];
"1000103" [label="(Block,)"];
"1000386" [label="(MethodReturn,void)"];
"1000385" [label="(Identifier,this)"];
"1000343" [label="(Identifier,partition)"];
"1000381" -> "1000341"  [label="AST: "];
"1000381" -> "1000382"  [label="CFG: "];
"1000382" -> "1000381"  [label="AST: "];
"1000383" -> "1000381"  [label="CFG: "];
"1000381" -> "1000386"  [label="DDG: navigation_ui_data"];
"1000381" -> "1000341"  [label="DDG: navigation_ui_data"];
"1000319" -> "1000381"  [label="DDG: navigation_ui_data"];
"1000319" -> "1000317"  [label="AST: "];
"1000319" -> "1000321"  [label="CFG: "];
"1000320" -> "1000319"  [label="AST: "];
"1000321" -> "1000319"  [label="AST: "];
"1000324" -> "1000319"  [label="CFG: "];
"1000319" -> "1000386"  [label="DDG: navigation_handle_->GetNavigationUIData()->Clone()"];
"1000341" -> "1000339"  [label="AST: "];
"1000341" -> "1000385"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="AST: "];
"1000344" -> "1000341"  [label="AST: "];
"1000383" -> "1000341"  [label="AST: "];
"1000384" -> "1000341"  [label="AST: "];
"1000385" -> "1000341"  [label="AST: "];
"1000339" -> "1000341"  [label="CFG: "];
"1000341" -> "1000386"  [label="DDG: std::make_unique<NavigationRequestInfo>(\n          common_params_, begin_params_.Clone(), site_for_cookies,\n          frame_tree_node_->IsMainFrame(), parent_is_main_frame,\n          IsSecureFrame(frame_tree_node_->parent()),\n          frame_tree_node_->frame_tree_node_id(), is_for_guests_only,\n          report_raw_headers,\n          navigating_frame_host->GetVisibilityState() ==\n              blink::mojom::PageVisibilityState::kPrerender,\n          upgrade_if_insecure_,\n          blob_url_loader_factory_ ? blob_url_loader_factory_->Clone()\n                                   : nullptr,\n          devtools_navigation_token(),\n          frame_tree_node_->devtools_frame_token())"];
"1000341" -> "1000386"  [label="DDG: navigation_handle_->service_worker_handle()"];
"1000341" -> "1000386"  [label="DDG: partition"];
"1000341" -> "1000386"  [label="DDG: navigation_handle_->appcache_handle()"];
"1000341" -> "1000386"  [label="DDG: browser_context->GetResourceContext()"];
"1000341" -> "1000386"  [label="DDG: std::move(navigation_ui_data)"];
"1000341" -> "1000386"  [label="DDG: this"];
"1000341" -> "1000339"  [label="DDG: partition"];
"1000341" -> "1000339"  [label="DDG: this"];
"1000341" -> "1000339"  [label="DDG: navigation_handle_->service_worker_handle()"];
"1000341" -> "1000339"  [label="DDG: navigation_handle_->appcache_handle()"];
"1000341" -> "1000339"  [label="DDG: browser_context->GetResourceContext()"];
"1000341" -> "1000339"  [label="DDG: std::move(navigation_ui_data)"];
"1000341" -> "1000339"  [label="DDG: std::make_unique<NavigationRequestInfo>(\n          common_params_, begin_params_.Clone(), site_for_cookies,\n          frame_tree_node_->IsMainFrame(), parent_is_main_frame,\n          IsSecureFrame(frame_tree_node_->parent()),\n          frame_tree_node_->frame_tree_node_id(), is_for_guests_only,\n          report_raw_headers,\n          navigating_frame_host->GetVisibilityState() ==\n              blink::mojom::PageVisibilityState::kPrerender,\n          upgrade_if_insecure_,\n          blob_url_loader_factory_ ? blob_url_loader_factory_->Clone()\n                                   : nullptr,\n          devtools_navigation_token(),\n          frame_tree_node_->devtools_frame_token())"];
"1000199" -> "1000341"  [label="DDG: partition"];
"1000344" -> "1000341"  [label="DDG: std::make_unique"];
"1000344" -> "1000341"  [label="DDG: NavigationRequestInfo>(\n          common_params_, begin_params_.Clone(), site_for_cookies,\n          frame_tree_node_->IsMainFrame(), parent_is_main_frame,\n          IsSecureFrame(frame_tree_node_->parent()),\n          frame_tree_node_->frame_tree_node_id(), is_for_guests_only,\n          report_raw_headers,\n          navigating_frame_host->GetVisibilityState() ==\n              blink::mojom::PageVisibilityState::kPrerender,\n          upgrade_if_insecure_,\n          blob_url_loader_factory_ ? blob_url_loader_factory_->Clone()\n                                   : nullptr,\n          devtools_navigation_token(),\n          frame_tree_node_->devtools_frame_token())"];
"1000339" -> "1000103"  [label="AST: "];
"1000340" -> "1000339"  [label="AST: "];
"1000386" -> "1000339"  [label="CFG: "];
"1000339" -> "1000386"  [label="DDG: loader_"];
"1000339" -> "1000386"  [label="DDG: NavigationURLLoader::Create(\n      browser_context->GetResourceContext(), partition,\n      std::make_unique<NavigationRequestInfo>(\n          common_params_, begin_params_.Clone(), site_for_cookies,\n          frame_tree_node_->IsMainFrame(), parent_is_main_frame,\n          IsSecureFrame(frame_tree_node_->parent()),\n          frame_tree_node_->frame_tree_node_id(), is_for_guests_only,\n          report_raw_headers,\n          navigating_frame_host->GetVisibilityState() ==\n              blink::mojom::PageVisibilityState::kPrerender,\n          upgrade_if_insecure_,\n          blob_url_loader_factory_ ? blob_url_loader_factory_->Clone()\n                                   : nullptr,\n          devtools_navigation_token(),\n          frame_tree_node_->devtools_frame_token()),\n      std::move(navigation_ui_data),\n      navigation_handle_->service_worker_handle(),\n      navigation_handle_->appcache_handle(), this)"];
}
