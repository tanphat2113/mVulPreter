digraph "0_Android_c677ee92595335233eb0e7b59809a1a94e7a678a_0@array" {
"1000425" [label="(Call,p_dev_rec->dev_class[2] & BTM_COD_MINOR_KEYBOARD)"];
"1000415" [label="(Call,((p_dev_rec->dev_class[1] & BTM_COD_MAJOR_CLASS_MASK) == BTM_COD_MAJOR_PERIPHERAL)\n && (p_dev_rec->dev_class[2] & BTM_COD_MINOR_KEYBOARD))"];
"1000410" [label="(Call,!p_dev_rec->is_originator\n && ((p_dev_rec->dev_class[1] & BTM_COD_MAJOR_CLASS_MASK) == BTM_COD_MAJOR_PERIPHERAL)\n && (p_dev_rec->dev_class[2] & BTM_COD_MINOR_KEYBOARD))"];
"1000402" [label="(Call,(p_cb->api.p_pin_callback == NULL)\n\n /* OR Microsoft keyboard can for some reason try to establish connection */\n /*  the only thing we can do here is to shut it up.  Normally we will be originator */\n /*  for keyboard bonding */\n || (!p_dev_rec->is_originator\n && ((p_dev_rec->dev_class[1] & BTM_COD_MAJOR_CLASS_MASK) == BTM_COD_MAJOR_PERIPHERAL)\n && (p_dev_rec->dev_class[2] & BTM_COD_MINOR_KEYBOARD)))"];
"1000398" [label="(Call,p_cb->pairing_disabled\n || (p_cb->api.p_pin_callback == NULL)\n\n /* OR Microsoft keyboard can for some reason try to establish connection */\n /*  the only thing we can do here is to shut it up.  Normally we will be originator */\n /*  for keyboard bonding */\n || (!p_dev_rec->is_originator\n && ((p_dev_rec->dev_class[1] & BTM_COD_MAJOR_CLASS_MASK) == BTM_COD_MAJOR_PERIPHERAL)\n && (p_dev_rec->dev_class[2] & BTM_COD_MINOR_KEYBOARD)))"];
"1000433" [label="(Call,BTM_TRACE_WARNING(\"btm_sec_pin_code_request(): Pairing disabled:%d; PIN callback:%x, Dev Rec:%x!\",\n                           p_cb->pairing_disabled, p_cb->api.p_pin_callback, p_dev_rec))"];
"1000461" [label="(Call,memcpy (p_cb->connecting_dc,  p_dev_rec->dev_class, DEV_CLASS_LEN))"];
"1000489" [label="(Call,(*p_cb->api.p_pin_callback) (p_bda, p_dev_rec->dev_class, p_dev_rec->sec_bd_name))"];
"1000543" [label="(Call,(*p_cb->api.p_pin_callback) (p_bda, p_dev_rec->dev_class, p_dev_rec->sec_bd_name))"];
"1000462" [label="(Call,p_cb->connecting_dc)"];
"1000415" [label="(Call,((p_dev_rec->dev_class[1] & BTM_COD_MAJOR_CLASS_MASK) == BTM_COD_MAJOR_PERIPHERAL)\n && (p_dev_rec->dev_class[2] & BTM_COD_MINOR_KEYBOARD))"];
"1000435" [label="(Call,p_cb->pairing_disabled)"];
"1000465" [label="(Call,p_dev_rec->dev_class)"];
"1000417" [label="(Call,p_dev_rec->dev_class[1] & BTM_COD_MAJOR_CLASS_MASK)"];
"1000523" [label="(Call,p_dev_rec->sec_bd_name[1] = '0')"];
"1000552" [label="(MethodReturn,void)"];
"1000545" [label="(Call,p_dev_rec->dev_class)"];
"1000162" [label="(Call,p_bda[3]<<16)"];
"1000340" [label="(Call,p_cb->connecting_dc[0] || p_cb->connecting_dc[1] || p_cb->connecting_dc[2])"];
"1000438" [label="(Call,p_cb->api.p_pin_callback)"];
"1000416" [label="(Call,(p_dev_rec->dev_class[1] & BTM_COD_MAJOR_CLASS_MASK) == BTM_COD_MAJOR_PERIPHERAL)"];
"1000269" [label="(Call,p_dev_rec = btm_find_or_alloc_dev (p_bda))"];
"1000398" [label="(Call,p_cb->pairing_disabled\n || (p_cb->api.p_pin_callback == NULL)\n\n /* OR Microsoft keyboard can for some reason try to establish connection */\n /*  the only thing we can do here is to shut it up.  Normally we will be originator */\n /*  for keyboard bonding */\n || (!p_dev_rec->is_originator\n && ((p_dev_rec->dev_class[1] & BTM_COD_MAJOR_CLASS_MASK) == BTM_COD_MAJOR_PERIPHERAL)\n && (p_dev_rec->dev_class[2] & BTM_COD_MINOR_KEYBOARD)))"];
"1000543" [label="(Call,(*p_cb->api.p_pin_callback) (p_bda, p_dev_rec->dev_class, p_dev_rec->sec_bd_name))"];
"1000551" [label="(Return,return;)"];
"1000147" [label="(Call,p_bda[0]<<8)"];
"1000402" [label="(Call,(p_cb->api.p_pin_callback == NULL)\n\n /* OR Microsoft keyboard can for some reason try to establish connection */\n /*  the only thing we can do here is to shut it up.  Normally we will be originator */\n /*  for keyboard bonding */\n || (!p_dev_rec->is_originator\n && ((p_dev_rec->dev_class[1] & BTM_COD_MAJOR_CLASS_MASK) == BTM_COD_MAJOR_PERIPHERAL)\n && (p_dev_rec->dev_class[2] & BTM_COD_MINOR_KEYBOARD)))"];
"1000357" [label="(Call,memcpy (p_dev_rec->dev_class, p_cb->connecting_dc, DEV_CLASS_LEN))"];
"1000537" [label="(ControlStructure,if (p_cb->api.p_pin_callback))"];
"1000399" [label="(Call,p_cb->pairing_disabled)"];
"1000425" [label="(Call,p_dev_rec->dev_class[2] & BTM_COD_MINOR_KEYBOARD)"];
"1000447" [label="(Block,)"];
"1000302" [label="(Call,!p_cb->pairing_disabled)"];
"1000516" [label="(Call,p_dev_rec->sec_bd_name[0] = 'f')"];
"1000468" [label="(Identifier,DEV_CLASS_LEN)"];
"1000443" [label="(Identifier,p_dev_rec)"];
"1000544" [label="(Identifier,p_bda)"];
"1000433" [label="(Call,BTM_TRACE_WARNING(\"btm_sec_pin_code_request(): Pairing disabled:%d; PIN callback:%x, Dev Rec:%x!\",\n                           p_cb->pairing_disabled, p_cb->api.p_pin_callback, p_dev_rec))"];
"1000450" [label="(Identifier,btm_cb)"];
"1000431" [label="(Identifier,BTM_COD_MINOR_KEYBOARD)"];
"1000156" [label="(Call,p_bda[2]<<24)"];
"1000432" [label="(Block,)"];
"1000494" [label="(Call,p_dev_rec->sec_bd_name)"];
"1000397" [label="(ControlStructure,if (p_cb->pairing_disabled\n || (p_cb->api.p_pin_callback == NULL)\n\n /* OR Microsoft keyboard can for some reason try to establish connection */\n /*  the only thing we can do here is to shut it up.  Normally we will be originator */\n /*  for keyboard bonding */\n || (!p_dev_rec->is_originator\n && ((p_dev_rec->dev_class[1] & BTM_COD_MAJOR_CLASS_MASK) == BTM_COD_MAJOR_PERIPHERAL)\n && (p_dev_rec->dev_class[2] & BTM_COD_MINOR_KEYBOARD)) ))"];
"1000472" [label="(Identifier,p_dev_rec)"];
"1000548" [label="(Call,p_dev_rec->sec_bd_name)"];
"1000426" [label="(Call,p_dev_rec->dev_class[2])"];
"1000491" [label="(Call,p_dev_rec->dev_class)"];
"1000125" [label="(MethodParameterIn,UINT8 *p_bda)"];
"1000490" [label="(Identifier,p_bda)"];
"1000483" [label="(ControlStructure,if (p_cb->api.p_pin_callback))"];
"1000410" [label="(Call,!p_dev_rec->is_originator\n && ((p_dev_rec->dev_class[1] & BTM_COD_MAJOR_CLASS_MASK) == BTM_COD_MAJOR_PERIPHERAL)\n && (p_dev_rec->dev_class[2] & BTM_COD_MINOR_KEYBOARD))"];
"1000461" [label="(Call,memcpy (p_cb->connecting_dc,  p_dev_rec->dev_class, DEV_CLASS_LEN))"];
"1000434" [label="(Literal,\"btm_sec_pin_code_request(): Pairing disabled:%d; PIN callback:%x, Dev Rec:%x!\")"];
"1000411" [label="(Call,!p_dev_rec->is_originator)"];
"1000445" [label="(Identifier,p_bda)"];
"1000455" [label="(Call,memcpy (p_cb->connecting_bda, p_bda, BD_ADDR_LEN))"];
"1000168" [label="(Call,p_bda[4]<<8)"];
"1000346" [label="(Call,p_cb->connecting_dc[1] || p_cb->connecting_dc[2])"];
"1000403" [label="(Call,p_cb->api.p_pin_callback == NULL)"];
"1000489" [label="(Call,(*p_cb->api.p_pin_callback) (p_bda, p_dev_rec->dev_class, p_dev_rec->sec_bd_name))"];
"1000425" -> "1000415"  [label="AST: "];
"1000425" -> "1000431"  [label="CFG: "];
"1000426" -> "1000425"  [label="AST: "];
"1000431" -> "1000425"  [label="AST: "];
"1000415" -> "1000425"  [label="CFG: "];
"1000425" -> "1000552"  [label="DDG: "];
"1000425" -> "1000552"  [label="DDG: "];
"1000425" -> "1000415"  [label="DDG: "];
"1000425" -> "1000415"  [label="DDG: "];
"1000425" -> "1000461"  [label="DDG: "];
"1000425" -> "1000489"  [label="DDG: "];
"1000425" -> "1000543"  [label="DDG: "];
"1000415" -> "1000410"  [label="AST: "];
"1000415" -> "1000416"  [label="CFG: "];
"1000416" -> "1000415"  [label="AST: "];
"1000410" -> "1000415"  [label="CFG: "];
"1000415" -> "1000552"  [label="DDG: "];
"1000415" -> "1000552"  [label="DDG: "];
"1000415" -> "1000410"  [label="DDG: "];
"1000415" -> "1000410"  [label="DDG: "];
"1000416" -> "1000415"  [label="DDG: "];
"1000416" -> "1000415"  [label="DDG: "];
"1000410" -> "1000402"  [label="AST: "];
"1000410" -> "1000411"  [label="CFG: "];
"1000411" -> "1000410"  [label="AST: "];
"1000402" -> "1000410"  [label="CFG: "];
"1000410" -> "1000552"  [label="DDG: "];
"1000410" -> "1000552"  [label="DDG: "];
"1000410" -> "1000402"  [label="DDG: "];
"1000410" -> "1000402"  [label="DDG: "];
"1000411" -> "1000410"  [label="DDG: "];
"1000402" -> "1000398"  [label="AST: "];
"1000402" -> "1000403"  [label="CFG: "];
"1000403" -> "1000402"  [label="AST: "];
"1000398" -> "1000402"  [label="CFG: "];
"1000402" -> "1000552"  [label="DDG: "];
"1000402" -> "1000552"  [label="DDG: "];
"1000402" -> "1000398"  [label="DDG: "];
"1000402" -> "1000398"  [label="DDG: "];
"1000403" -> "1000402"  [label="DDG: "];
"1000403" -> "1000402"  [label="DDG: "];
"1000398" -> "1000397"  [label="AST: "];
"1000398" -> "1000399"  [label="CFG: "];
"1000399" -> "1000398"  [label="AST: "];
"1000434" -> "1000398"  [label="CFG: "];
"1000450" -> "1000398"  [label="CFG: "];
"1000398" -> "1000552"  [label="DDG: "];
"1000398" -> "1000552"  [label="DDG: "];
"1000398" -> "1000552"  [label="DDG: "];
"1000302" -> "1000398"  [label="DDG: "];
"1000398" -> "1000433"  [label="DDG: "];
"1000433" -> "1000432"  [label="AST: "];
"1000433" -> "1000443"  [label="CFG: "];
"1000434" -> "1000433"  [label="AST: "];
"1000435" -> "1000433"  [label="AST: "];
"1000438" -> "1000433"  [label="AST: "];
"1000443" -> "1000433"  [label="AST: "];
"1000445" -> "1000433"  [label="CFG: "];
"1000433" -> "1000552"  [label="DDG: "];
"1000433" -> "1000552"  [label="DDG: "];
"1000433" -> "1000552"  [label="DDG: "];
"1000433" -> "1000552"  [label="DDG: "];
"1000403" -> "1000433"  [label="DDG: "];
"1000269" -> "1000433"  [label="DDG: "];
"1000461" -> "1000447"  [label="AST: "];
"1000461" -> "1000468"  [label="CFG: "];
"1000462" -> "1000461"  [label="AST: "];
"1000465" -> "1000461"  [label="AST: "];
"1000468" -> "1000461"  [label="AST: "];
"1000472" -> "1000461"  [label="CFG: "];
"1000461" -> "1000552"  [label="DDG: "];
"1000461" -> "1000552"  [label="DDG: "];
"1000461" -> "1000552"  [label="DDG: "];
"1000461" -> "1000552"  [label="DDG: "];
"1000357" -> "1000461"  [label="DDG: "];
"1000357" -> "1000461"  [label="DDG: "];
"1000357" -> "1000461"  [label="DDG: "];
"1000346" -> "1000461"  [label="DDG: "];
"1000346" -> "1000461"  [label="DDG: "];
"1000340" -> "1000461"  [label="DDG: "];
"1000417" -> "1000461"  [label="DDG: "];
"1000461" -> "1000489"  [label="DDG: "];
"1000461" -> "1000543"  [label="DDG: "];
"1000489" -> "1000483"  [label="AST: "];
"1000489" -> "1000494"  [label="CFG: "];
"1000490" -> "1000489"  [label="AST: "];
"1000491" -> "1000489"  [label="AST: "];
"1000494" -> "1000489"  [label="AST: "];
"1000551" -> "1000489"  [label="CFG: "];
"1000489" -> "1000552"  [label="DDG: "];
"1000489" -> "1000552"  [label="DDG: "];
"1000489" -> "1000552"  [label="DDG: "];
"1000489" -> "1000552"  [label="DDG: "];
"1000455" -> "1000489"  [label="DDG: "];
"1000168" -> "1000489"  [label="DDG: "];
"1000156" -> "1000489"  [label="DDG: "];
"1000147" -> "1000489"  [label="DDG: "];
"1000162" -> "1000489"  [label="DDG: "];
"1000125" -> "1000489"  [label="DDG: "];
"1000417" -> "1000489"  [label="DDG: "];
"1000543" -> "1000537"  [label="AST: "];
"1000543" -> "1000548"  [label="CFG: "];
"1000544" -> "1000543"  [label="AST: "];
"1000545" -> "1000543"  [label="AST: "];
"1000548" -> "1000543"  [label="AST: "];
"1000551" -> "1000543"  [label="CFG: "];
"1000543" -> "1000552"  [label="DDG: "];
"1000543" -> "1000552"  [label="DDG: "];
"1000543" -> "1000552"  [label="DDG: "];
"1000543" -> "1000552"  [label="DDG: "];
"1000455" -> "1000543"  [label="DDG: "];
"1000168" -> "1000543"  [label="DDG: "];
"1000156" -> "1000543"  [label="DDG: "];
"1000147" -> "1000543"  [label="DDG: "];
"1000162" -> "1000543"  [label="DDG: "];
"1000125" -> "1000543"  [label="DDG: "];
"1000417" -> "1000543"  [label="DDG: "];
"1000523" -> "1000543"  [label="DDG: "];
"1000516" -> "1000543"  [label="DDG: "];
}
