digraph "0_FFmpeg_ba4beaf6149f7241c8bd85fe853318c2f6837ad0@integer" {
"1000251" [label="(Call,s->data_end = s->data + buf_size)"];
"1000202" [label="(Call,av_fast_padded_malloc(&s->data, &s->data_size, buf_size))"];
"1000199" [label="(Call,buf_size += 2)"];
"1000183" [label="(Call,buf_size != avpkt->size)"];
"1000175" [label="(Call,buf_size = avpkt->size & ~3)"];
"1000177" [label="(Call,avpkt->size & ~3)"];
"1000163" [label="(Call,avpkt->size < 8)"];
"1000151" [label="(Call,!avpkt->size)"];
"1000221" [label="(Call,(uint32_t *) s->data)"];
"1000213" [label="(Call,!s->data)"];
"1000241" [label="(Call,buf_size & 3)"];
"1000237" [label="(Call,buf_size & ~3)"];
"1000229" [label="(Call,buf_size >> 2)"];
"1000299" [label="(Call,s->data_end - s->ptr)"];
"1000298" [label="(Call,s->data_end - s->ptr < offset)"];
"1000314" [label="(Call,s->ptr += offset)"];
"1000333" [label="(Call,s->data_end - s->ptr)"];
"1000325" [label="(Call,init_get_bits8(&s->gb, s->ptr, s->data_end - s->ptr))"];
"1000322" [label="(Call,(ret = init_get_bits8(&s->gb, s->ptr, s->data_end - s->ptr)) < 0)"];
"1000323" [label="(Call,ret = init_get_bits8(&s->gb, s->ptr, s->data_end - s->ptr))"];
"1000341" [label="(Return,return ret;)"];
"1000349" [label="(Call,skip_bits_long(&s->gb, offset * 8))"];
"1000358" [label="(Call,skip_bits_long(&s->gb, offset))"];
"1000303" [label="(Call,s->ptr)"];
"1000219" [label="(Identifier,ENOMEM)"];
"1000710" [label="(Call,!s->samples ? avpkt->size : 0)"];
"1000202" [label="(Call,av_fast_padded_malloc(&s->data, &s->data_size, buf_size))"];
"1000261" [label="(Identifier,nblocks)"];
"1000200" [label="(Identifier,buf_size)"];
"1000350" [label="(Call,&s->gb)"];
"1000267" [label="(Call,offset  = bytestream_get_be32(&s->ptr))"];
"1000164" [label="(Call,avpkt->size)"];
"1000354" [label="(Call,offset * 8)"];
"1000324" [label="(Identifier,ret)"];
"1000315" [label="(Call,s->ptr)"];
"1000231" [label="(Literal,2)"];
"1000214" [label="(Call,s->data)"];
"1000220" [label="(Call,s->bdsp.bswap_buf((uint32_t *) s->data, (const uint32_t *) buf,\n                          buf_size >> 2))"];
"1000203" [label="(Call,&s->data)"];
"1000176" [label="(Identifier,buf_size)"];
"1000314" [label="(Call,s->ptr += offset)"];
"1000190" [label="(Identifier,avctx)"];
"1000349" [label="(Call,skip_bits_long(&s->gb, offset * 8))"];
"1000322" [label="(Call,(ret = init_get_bits8(&s->gb, s->ptr, s->data_end - s->ptr)) < 0)"];
"1000243" [label="(Literal,3)"];
"1000146" [label="(Block,)"];
"1000318" [label="(Identifier,offset)"];
"1000241" [label="(Call,buf_size & 3)"];
"1000342" [label="(Identifier,ret)"];
"1000252" [label="(Call,s->data_end)"];
"1000341" [label="(Return,return ret;)"];
"1000300" [label="(Call,s->data_end)"];
"1000719" [label="(MethodReturn,static int)"];
"1000346" [label="(Identifier,s)"];
"1000337" [label="(Call,s->ptr)"];
"1000152" [label="(Call,avpkt->size)"];
"1000325" [label="(Call,init_get_bits8(&s->gb, s->ptr, s->data_end - s->ptr))"];
"1000182" [label="(ControlStructure,if (buf_size != avpkt->size))"];
"1000334" [label="(Call,s->data_end)"];
"1000212" [label="(ControlStructure,if (!s->data))"];
"1000316" [label="(Identifier,s)"];
"1000165" [label="(Identifier,avpkt)"];
"1000297" [label="(ControlStructure,if (s->data_end - s->ptr < offset))"];
"1000416" [label="(Return,return avpkt->size;)"];
"1000330" [label="(Call,s->ptr)"];
"1000215" [label="(Identifier,s)"];
"1000162" [label="(ControlStructure,if (avpkt->size < 8))"];
"1000244" [label="(Call,s->ptr = s->data)"];
"1000175" [label="(Call,buf_size = avpkt->size & ~3)"];
"1000242" [label="(Identifier,buf_size)"];
"1000229" [label="(Call,buf_size >> 2)"];
"1000151" [label="(Call,!avpkt->size)"];
"1000177" [label="(Call,avpkt->size & ~3)"];
"1000343" [label="(ControlStructure,if (s->fileversion > 3800))"];
"1000205" [label="(Identifier,s)"];
"1000238" [label="(Identifier,buf_size)"];
"1000251" [label="(Call,s->data_end = s->data + buf_size)"];
"1000230" [label="(Identifier,buf_size)"];
"1000150" [label="(ControlStructure,if (!avpkt->size))"];
"1000306" [label="(Identifier,offset)"];
"1000201" [label="(Literal,2)"];
"1000196" [label="(Identifier,s)"];
"1000323" [label="(Call,ret = init_get_bits8(&s->gb, s->ptr, s->data_end - s->ptr))"];
"1000359" [label="(Call,&s->gb)"];
"1000255" [label="(Call,s->data + buf_size)"];
"1000184" [label="(Identifier,buf_size)"];
"1000167" [label="(Literal,8)"];
"1000269" [label="(Call,bytestream_get_be32(&s->ptr))"];
"1000232" [label="(Call,memset(s->data + (buf_size & ~3), 0, buf_size & 3))"];
"1000223" [label="(Call,s->data)"];
"1000158" [label="(Identifier,got_frame_ptr)"];
"1000233" [label="(Call,s->data + (buf_size & ~3))"];
"1000321" [label="(ControlStructure,if ((ret = init_get_bits8(&s->gb, s->ptr, s->data_end - s->ptr)) < 0))"];
"1000333" [label="(Call,s->data_end - s->ptr)"];
"1000199" [label="(Call,buf_size += 2)"];
"1000309" [label="(Identifier,avctx)"];
"1000326" [label="(Call,&s->gb)"];
"1000357" [label="(ControlStructure,else)"];
"1000211" [label="(Identifier,buf_size)"];
"1000367" [label="(Identifier,nblocks)"];
"1000363" [label="(Identifier,offset)"];
"1000178" [label="(Call,avpkt->size)"];
"1000298" [label="(Call,s->data_end - s->ptr < offset)"];
"1000207" [label="(Call,&s->data_size)"];
"1000299" [label="(Call,s->data_end - s->ptr)"];
"1000163" [label="(Call,avpkt->size < 8)"];
"1000280" [label="(Block,)"];
"1000170" [label="(Identifier,avctx)"];
"1000221" [label="(Call,(uint32_t *) s->data)"];
"1000340" [label="(Literal,0)"];
"1000358" [label="(Call,skip_bits_long(&s->gb, offset))"];
"1000183" [label="(Call,buf_size != avpkt->size)"];
"1000237" [label="(Call,buf_size & ~3)"];
"1000407" [label="(Call,!s->data)"];
"1000213" [label="(Call,!s->data)"];
"1000181" [label="(Identifier,~3)"];
"1000282" [label="(Call,offset > 3)"];
"1000185" [label="(Call,avpkt->size)"];
"1000193" [label="(ControlStructure,if (s->fileversion < 3950))"];
"1000239" [label="(Identifier,~3)"];
"1000251" -> "1000146"  [label="AST: "];
"1000251" -> "1000255"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000255" -> "1000251"  [label="AST: "];
"1000261" -> "1000251"  [label="CFG: "];
"1000251" -> "1000719"  [label="DDG: s->data + buf_size"];
"1000251" -> "1000719"  [label="DDG: s->data_end"];
"1000202" -> "1000251"  [label="DDG: &s->data"];
"1000221" -> "1000251"  [label="DDG: s->data"];
"1000241" -> "1000251"  [label="DDG: buf_size"];
"1000251" -> "1000299"  [label="DDG: s->data_end"];
"1000251" -> "1000333"  [label="DDG: s->data_end"];
"1000202" -> "1000146"  [label="AST: "];
"1000202" -> "1000211"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000207" -> "1000202"  [label="AST: "];
"1000211" -> "1000202"  [label="AST: "];
"1000215" -> "1000202"  [label="CFG: "];
"1000202" -> "1000719"  [label="DDG: &s->data"];
"1000202" -> "1000719"  [label="DDG: &s->data_size"];
"1000202" -> "1000719"  [label="DDG: buf_size"];
"1000202" -> "1000719"  [label="DDG: av_fast_padded_malloc(&s->data, &s->data_size, buf_size)"];
"1000199" -> "1000202"  [label="DDG: buf_size"];
"1000183" -> "1000202"  [label="DDG: buf_size"];
"1000202" -> "1000213"  [label="DDG: &s->data"];
"1000202" -> "1000221"  [label="DDG: &s->data"];
"1000202" -> "1000229"  [label="DDG: buf_size"];
"1000202" -> "1000232"  [label="DDG: &s->data"];
"1000202" -> "1000233"  [label="DDG: &s->data"];
"1000202" -> "1000244"  [label="DDG: &s->data"];
"1000202" -> "1000255"  [label="DDG: &s->data"];
"1000202" -> "1000407"  [label="DDG: &s->data"];
"1000199" -> "1000193"  [label="AST: "];
"1000199" -> "1000201"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000201" -> "1000199"  [label="AST: "];
"1000205" -> "1000199"  [label="CFG: "];
"1000183" -> "1000199"  [label="DDG: buf_size"];
"1000183" -> "1000182"  [label="AST: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000185" -> "1000183"  [label="AST: "];
"1000190" -> "1000183"  [label="CFG: "];
"1000196" -> "1000183"  [label="CFG: "];
"1000183" -> "1000719"  [label="DDG: avpkt->size"];
"1000183" -> "1000719"  [label="DDG: buf_size != avpkt->size"];
"1000175" -> "1000183"  [label="DDG: buf_size"];
"1000177" -> "1000183"  [label="DDG: avpkt->size"];
"1000183" -> "1000416"  [label="DDG: avpkt->size"];
"1000183" -> "1000710"  [label="DDG: avpkt->size"];
"1000175" -> "1000146"  [label="AST: "];
"1000175" -> "1000177"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000177" -> "1000175"  [label="AST: "];
"1000184" -> "1000175"  [label="CFG: "];
"1000175" -> "1000719"  [label="DDG: avpkt->size & ~3"];
"1000177" -> "1000175"  [label="DDG: avpkt->size"];
"1000177" -> "1000175"  [label="DDG: ~3"];
"1000177" -> "1000181"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000181" -> "1000177"  [label="AST: "];
"1000177" -> "1000719"  [label="DDG: ~3"];
"1000163" -> "1000177"  [label="DDG: avpkt->size"];
"1000177" -> "1000237"  [label="DDG: ~3"];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000167"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000167" -> "1000163"  [label="AST: "];
"1000170" -> "1000163"  [label="CFG: "];
"1000176" -> "1000163"  [label="CFG: "];
"1000163" -> "1000719"  [label="DDG: avpkt->size"];
"1000163" -> "1000719"  [label="DDG: avpkt->size < 8"];
"1000151" -> "1000163"  [label="DDG: avpkt->size"];
"1000151" -> "1000150"  [label="AST: "];
"1000151" -> "1000152"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000158" -> "1000151"  [label="CFG: "];
"1000165" -> "1000151"  [label="CFG: "];
"1000151" -> "1000719"  [label="DDG: !avpkt->size"];
"1000151" -> "1000719"  [label="DDG: avpkt->size"];
"1000221" -> "1000220"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000227" -> "1000221"  [label="CFG: "];
"1000221" -> "1000220"  [label="DDG: s->data"];
"1000213" -> "1000221"  [label="DDG: s->data"];
"1000221" -> "1000232"  [label="DDG: s->data"];
"1000221" -> "1000233"  [label="DDG: s->data"];
"1000221" -> "1000244"  [label="DDG: s->data"];
"1000221" -> "1000255"  [label="DDG: s->data"];
"1000221" -> "1000407"  [label="DDG: s->data"];
"1000213" -> "1000212"  [label="AST: "];
"1000213" -> "1000214"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000219" -> "1000213"  [label="CFG: "];
"1000222" -> "1000213"  [label="CFG: "];
"1000213" -> "1000719"  [label="DDG: s->data"];
"1000213" -> "1000719"  [label="DDG: !s->data"];
"1000241" -> "1000232"  [label="AST: "];
"1000241" -> "1000243"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="AST: "];
"1000232" -> "1000241"  [label="CFG: "];
"1000241" -> "1000232"  [label="DDG: buf_size"];
"1000241" -> "1000232"  [label="DDG: 3"];
"1000237" -> "1000241"  [label="DDG: buf_size"];
"1000241" -> "1000255"  [label="DDG: buf_size"];
"1000237" -> "1000233"  [label="AST: "];
"1000237" -> "1000239"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000239" -> "1000237"  [label="AST: "];
"1000233" -> "1000237"  [label="CFG: "];
"1000237" -> "1000719"  [label="DDG: ~3"];
"1000237" -> "1000232"  [label="DDG: buf_size"];
"1000237" -> "1000232"  [label="DDG: ~3"];
"1000237" -> "1000233"  [label="DDG: buf_size"];
"1000237" -> "1000233"  [label="DDG: ~3"];
"1000229" -> "1000237"  [label="DDG: buf_size"];
"1000229" -> "1000220"  [label="AST: "];
"1000229" -> "1000231"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000231" -> "1000229"  [label="AST: "];
"1000220" -> "1000229"  [label="CFG: "];
"1000229" -> "1000220"  [label="DDG: buf_size"];
"1000229" -> "1000220"  [label="DDG: 2"];
"1000299" -> "1000298"  [label="AST: "];
"1000299" -> "1000303"  [label="CFG: "];
"1000300" -> "1000299"  [label="AST: "];
"1000303" -> "1000299"  [label="AST: "];
"1000306" -> "1000299"  [label="CFG: "];
"1000299" -> "1000719"  [label="DDG: s->ptr"];
"1000299" -> "1000719"  [label="DDG: s->data_end"];
"1000299" -> "1000298"  [label="DDG: s->data_end"];
"1000299" -> "1000298"  [label="DDG: s->ptr"];
"1000269" -> "1000299"  [label="DDG: &s->ptr"];
"1000244" -> "1000299"  [label="DDG: s->ptr"];
"1000299" -> "1000314"  [label="DDG: s->ptr"];
"1000298" -> "1000297"  [label="AST: "];
"1000298" -> "1000306"  [label="CFG: "];
"1000306" -> "1000298"  [label="AST: "];
"1000309" -> "1000298"  [label="CFG: "];
"1000316" -> "1000298"  [label="CFG: "];
"1000298" -> "1000719"  [label="DDG: s->data_end - s->ptr < offset"];
"1000298" -> "1000719"  [label="DDG: s->data_end - s->ptr"];
"1000298" -> "1000719"  [label="DDG: offset"];
"1000282" -> "1000298"  [label="DDG: offset"];
"1000298" -> "1000314"  [label="DDG: offset"];
"1000314" -> "1000280"  [label="AST: "];
"1000314" -> "1000318"  [label="CFG: "];
"1000315" -> "1000314"  [label="AST: "];
"1000318" -> "1000314"  [label="AST: "];
"1000367" -> "1000314"  [label="CFG: "];
"1000314" -> "1000719"  [label="DDG: s->ptr"];
"1000314" -> "1000719"  [label="DDG: offset"];
"1000269" -> "1000314"  [label="DDG: &s->ptr"];
"1000333" -> "1000325"  [label="AST: "];
"1000333" -> "1000337"  [label="CFG: "];
"1000334" -> "1000333"  [label="AST: "];
"1000337" -> "1000333"  [label="AST: "];
"1000325" -> "1000333"  [label="CFG: "];
"1000333" -> "1000719"  [label="DDG: s->data_end"];
"1000333" -> "1000325"  [label="DDG: s->ptr"];
"1000333" -> "1000325"  [label="DDG: s->data_end"];
"1000269" -> "1000333"  [label="DDG: &s->ptr"];
"1000244" -> "1000333"  [label="DDG: s->ptr"];
"1000325" -> "1000323"  [label="AST: "];
"1000326" -> "1000325"  [label="AST: "];
"1000330" -> "1000325"  [label="AST: "];
"1000323" -> "1000325"  [label="CFG: "];
"1000325" -> "1000719"  [label="DDG: &s->gb"];
"1000325" -> "1000719"  [label="DDG: s->data_end - s->ptr"];
"1000325" -> "1000719"  [label="DDG: s->ptr"];
"1000325" -> "1000322"  [label="DDG: &s->gb"];
"1000325" -> "1000322"  [label="DDG: s->ptr"];
"1000325" -> "1000322"  [label="DDG: s->data_end - s->ptr"];
"1000325" -> "1000323"  [label="DDG: &s->gb"];
"1000325" -> "1000323"  [label="DDG: s->ptr"];
"1000325" -> "1000323"  [label="DDG: s->data_end - s->ptr"];
"1000269" -> "1000325"  [label="DDG: &s->ptr"];
"1000325" -> "1000349"  [label="DDG: &s->gb"];
"1000325" -> "1000358"  [label="DDG: &s->gb"];
"1000322" -> "1000321"  [label="AST: "];
"1000322" -> "1000340"  [label="CFG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000340" -> "1000322"  [label="AST: "];
"1000342" -> "1000322"  [label="CFG: "];
"1000346" -> "1000322"  [label="CFG: "];
"1000322" -> "1000719"  [label="DDG: (ret = init_get_bits8(&s->gb, s->ptr, s->data_end - s->ptr)) < 0"];
"1000323" -> "1000322"  [label="DDG: ret"];
"1000324" -> "1000323"  [label="AST: "];
"1000340" -> "1000323"  [label="CFG: "];
"1000323" -> "1000719"  [label="DDG: ret"];
"1000323" -> "1000719"  [label="DDG: init_get_bits8(&s->gb, s->ptr, s->data_end - s->ptr)"];
"1000323" -> "1000341"  [label="DDG: ret"];
"1000341" -> "1000321"  [label="AST: "];
"1000341" -> "1000342"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000719" -> "1000341"  [label="CFG: "];
"1000341" -> "1000719"  [label="DDG: <RET>"];
"1000342" -> "1000341"  [label="DDG: ret"];
"1000349" -> "1000343"  [label="AST: "];
"1000349" -> "1000354"  [label="CFG: "];
"1000350" -> "1000349"  [label="AST: "];
"1000354" -> "1000349"  [label="AST: "];
"1000367" -> "1000349"  [label="CFG: "];
"1000349" -> "1000719"  [label="DDG: skip_bits_long(&s->gb, offset * 8)"];
"1000349" -> "1000719"  [label="DDG: &s->gb"];
"1000349" -> "1000719"  [label="DDG: offset * 8"];
"1000354" -> "1000349"  [label="DDG: offset"];
"1000354" -> "1000349"  [label="DDG: 8"];
"1000358" -> "1000357"  [label="AST: "];
"1000358" -> "1000363"  [label="CFG: "];
"1000359" -> "1000358"  [label="AST: "];
"1000363" -> "1000358"  [label="AST: "];
"1000367" -> "1000358"  [label="CFG: "];
"1000358" -> "1000719"  [label="DDG: skip_bits_long(&s->gb, offset)"];
"1000358" -> "1000719"  [label="DDG: offset"];
"1000358" -> "1000719"  [label="DDG: &s->gb"];
"1000267" -> "1000358"  [label="DDG: offset"];
}
