digraph "0_FFmpeg_ba4beaf6149f7241c8bd85fe853318c2f6837ad0@API" {
"1000365" [label="(Call,!nblocks || nblocks > INT_MAX / 2 / sizeof(*s->decoded_buffer) - 8)"];
"1000366" [label="(Call,!nblocks)"];
"1000260" [label="(Call,nblocks = bytestream_get_be32(&s->ptr))"];
"1000262" [label="(Call,bytestream_get_be32(&s->ptr))"];
"1000244" [label="(Call,s->ptr = s->data)"];
"1000202" [label="(Call,av_fast_padded_malloc(&s->data, &s->data_size, buf_size))"];
"1000199" [label="(Call,buf_size += 2)"];
"1000183" [label="(Call,buf_size != avpkt->size)"];
"1000175" [label="(Call,buf_size = avpkt->size & ~3)"];
"1000177" [label="(Call,avpkt->size & ~3)"];
"1000163" [label="(Call,avpkt->size < 8)"];
"1000151" [label="(Call,!avpkt->size)"];
"1000221" [label="(Call,(uint32_t *) s->data)"];
"1000213" [label="(Call,!s->data)"];
"1000368" [label="(Call,nblocks > INT_MAX / 2 / sizeof(*s->decoded_buffer) - 8)"];
"1000370" [label="(Call,INT_MAX / 2 / sizeof(*s->decoded_buffer) - 8)"];
"1000371" [label="(Call,INT_MAX / 2 / sizeof(*s->decoded_buffer))"];
"1000373" [label="(Call,2 / sizeof(*s->decoded_buffer))"];
"1000369" [label="(Identifier,nblocks)"];
"1000367" [label="(Identifier,nblocks)"];
"1000211" [label="(Identifier,buf_size)"];
"1000371" [label="(Call,INT_MAX / 2 / sizeof(*s->decoded_buffer))"];
"1000366" [label="(Call,!nblocks)"];
"1000370" [label="(Call,INT_MAX / 2 / sizeof(*s->decoded_buffer) - 8)"];
"1000374" [label="(Literal,2)"];
"1000263" [label="(Call,&s->ptr)"];
"1000178" [label="(Call,avpkt->size)"];
"1000219" [label="(Identifier,ENOMEM)"];
"1000710" [label="(Call,!s->samples ? avpkt->size : 0)"];
"1000719" [label="(MethodReturn,static int)"];
"1000202" [label="(Call,av_fast_padded_malloc(&s->data, &s->data_size, buf_size))"];
"1000251" [label="(Call,s->data_end = s->data + buf_size)"];
"1000207" [label="(Call,&s->data_size)"];
"1000365" [label="(Call,!nblocks || nblocks > INT_MAX / 2 / sizeof(*s->decoded_buffer) - 8)"];
"1000299" [label="(Call,s->data_end - s->ptr)"];
"1000261" [label="(Identifier,nblocks)"];
"1000200" [label="(Identifier,buf_size)"];
"1000163" [label="(Call,avpkt->size < 8)"];
"1000150" [label="(ControlStructure,if (!avpkt->size))"];
"1000164" [label="(Call,avpkt->size)"];
"1000152" [label="(Call,avpkt->size)"];
"1000383" [label="(Identifier,avctx)"];
"1000170" [label="(Identifier,avctx)"];
"1000182" [label="(ControlStructure,if (buf_size != avpkt->size))"];
"1000221" [label="(Call,(uint32_t *) s->data)"];
"1000392" [label="(Identifier,s)"];
"1000201" [label="(Literal,2)"];
"1000368" [label="(Call,nblocks > INT_MAX / 2 / sizeof(*s->decoded_buffer) - 8)"];
"1000196" [label="(Identifier,s)"];
"1000212" [label="(ControlStructure,if (!s->data))"];
"1000165" [label="(Identifier,avpkt)"];
"1000260" [label="(Call,nblocks = bytestream_get_be32(&s->ptr))"];
"1000382" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Invalid sample count: %\"PRIu32\".\n\",\n                    nblocks))"];
"1000401" [label="(Call,s->samples = nblocks)"];
"1000416" [label="(Return,return avpkt->size;)"];
"1000375" [label="(Call,sizeof(*s->decoded_buffer))"];
"1000452" [label="(Call,decoded_buffer_size <= INT_MAX)"];
"1000255" [label="(Call,s->data + buf_size)"];
"1000184" [label="(Identifier,buf_size)"];
"1000214" [label="(Call,s->data)"];
"1000215" [label="(Identifier,s)"];
"1000372" [label="(Identifier,INT_MAX)"];
"1000183" [label="(Call,buf_size != avpkt->size)"];
"1000220" [label="(Call,s->bdsp.bswap_buf((uint32_t *) s->data, (const uint32_t *) buf,\n                          buf_size >> 2))"];
"1000380" [label="(Literal,8)"];
"1000167" [label="(Literal,8)"];
"1000203" [label="(Call,&s->data)"];
"1000364" [label="(ControlStructure,if (!nblocks || nblocks > INT_MAX / 2 / sizeof(*s->decoded_buffer) - 8))"];
"1000245" [label="(Call,s->ptr)"];
"1000269" [label="(Call,bytestream_get_be32(&s->ptr))"];
"1000213" [label="(Call,!s->data)"];
"1000407" [label="(Call,!s->data)"];
"1000176" [label="(Identifier,buf_size)"];
"1000244" [label="(Call,s->ptr = s->data)"];
"1000181" [label="(Identifier,~3)"];
"1000237" [label="(Call,buf_size & ~3)"];
"1000190" [label="(Identifier,avctx)"];
"1000232" [label="(Call,memset(s->data + (buf_size & ~3), 0, buf_size & 3))"];
"1000162" [label="(ControlStructure,if (avpkt->size < 8))"];
"1000223" [label="(Call,s->data)"];
"1000158" [label="(Identifier,got_frame_ptr)"];
"1000253" [label="(Identifier,s)"];
"1000233" [label="(Call,s->data + (buf_size & ~3))"];
"1000185" [label="(Call,avpkt->size)"];
"1000175" [label="(Call,buf_size = avpkt->size & ~3)"];
"1000146" [label="(Block,)"];
"1000333" [label="(Call,s->data_end - s->ptr)"];
"1000199" [label="(Call,buf_size += 2)"];
"1000193" [label="(ControlStructure,if (s->fileversion < 3950))"];
"1000262" [label="(Call,bytestream_get_be32(&s->ptr))"];
"1000268" [label="(Identifier,offset)"];
"1000229" [label="(Call,buf_size >> 2)"];
"1000151" [label="(Call,!avpkt->size)"];
"1000373" [label="(Call,2 / sizeof(*s->decoded_buffer))"];
"1000177" [label="(Call,avpkt->size & ~3)"];
"1000248" [label="(Call,s->data)"];
"1000205" [label="(Identifier,s)"];
"1000365" -> "1000364"  [label="AST: "];
"1000365" -> "1000366"  [label="CFG: "];
"1000365" -> "1000368"  [label="CFG: "];
"1000366" -> "1000365"  [label="AST: "];
"1000368" -> "1000365"  [label="AST: "];
"1000383" -> "1000365"  [label="CFG: "];
"1000392" -> "1000365"  [label="CFG: "];
"1000365" -> "1000719"  [label="DDG: !nblocks || nblocks > INT_MAX / 2 / sizeof(*s->decoded_buffer) - 8"];
"1000365" -> "1000719"  [label="DDG: nblocks > INT_MAX / 2 / sizeof(*s->decoded_buffer) - 8"];
"1000365" -> "1000719"  [label="DDG: !nblocks"];
"1000366" -> "1000365"  [label="DDG: nblocks"];
"1000368" -> "1000365"  [label="DDG: nblocks"];
"1000368" -> "1000365"  [label="DDG: INT_MAX / 2 / sizeof(*s->decoded_buffer) - 8"];
"1000366" -> "1000367"  [label="CFG: "];
"1000367" -> "1000366"  [label="AST: "];
"1000369" -> "1000366"  [label="CFG: "];
"1000366" -> "1000719"  [label="DDG: nblocks"];
"1000260" -> "1000366"  [label="DDG: nblocks"];
"1000366" -> "1000368"  [label="DDG: nblocks"];
"1000366" -> "1000382"  [label="DDG: nblocks"];
"1000366" -> "1000401"  [label="DDG: nblocks"];
"1000260" -> "1000146"  [label="AST: "];
"1000260" -> "1000262"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000262" -> "1000260"  [label="AST: "];
"1000268" -> "1000260"  [label="CFG: "];
"1000260" -> "1000719"  [label="DDG: nblocks"];
"1000262" -> "1000260"  [label="DDG: &s->ptr"];
"1000262" -> "1000263"  [label="CFG: "];
"1000263" -> "1000262"  [label="AST: "];
"1000244" -> "1000262"  [label="DDG: s->ptr"];
"1000262" -> "1000269"  [label="DDG: &s->ptr"];
"1000244" -> "1000146"  [label="AST: "];
"1000244" -> "1000248"  [label="CFG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000248" -> "1000244"  [label="AST: "];
"1000253" -> "1000244"  [label="CFG: "];
"1000244" -> "1000719"  [label="DDG: s->ptr"];
"1000202" -> "1000244"  [label="DDG: &s->data"];
"1000221" -> "1000244"  [label="DDG: s->data"];
"1000244" -> "1000269"  [label="DDG: s->ptr"];
"1000244" -> "1000299"  [label="DDG: s->ptr"];
"1000244" -> "1000333"  [label="DDG: s->ptr"];
"1000202" -> "1000146"  [label="AST: "];
"1000202" -> "1000211"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000207" -> "1000202"  [label="AST: "];
"1000211" -> "1000202"  [label="AST: "];
"1000215" -> "1000202"  [label="CFG: "];
"1000202" -> "1000719"  [label="DDG: &s->data"];
"1000202" -> "1000719"  [label="DDG: &s->data_size"];
"1000202" -> "1000719"  [label="DDG: buf_size"];
"1000202" -> "1000719"  [label="DDG: av_fast_padded_malloc(&s->data, &s->data_size, buf_size)"];
"1000199" -> "1000202"  [label="DDG: buf_size"];
"1000183" -> "1000202"  [label="DDG: buf_size"];
"1000202" -> "1000213"  [label="DDG: &s->data"];
"1000202" -> "1000221"  [label="DDG: &s->data"];
"1000202" -> "1000229"  [label="DDG: buf_size"];
"1000202" -> "1000232"  [label="DDG: &s->data"];
"1000202" -> "1000233"  [label="DDG: &s->data"];
"1000202" -> "1000251"  [label="DDG: &s->data"];
"1000202" -> "1000255"  [label="DDG: &s->data"];
"1000202" -> "1000407"  [label="DDG: &s->data"];
"1000199" -> "1000193"  [label="AST: "];
"1000199" -> "1000201"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000201" -> "1000199"  [label="AST: "];
"1000205" -> "1000199"  [label="CFG: "];
"1000183" -> "1000199"  [label="DDG: buf_size"];
"1000183" -> "1000182"  [label="AST: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000185" -> "1000183"  [label="AST: "];
"1000190" -> "1000183"  [label="CFG: "];
"1000196" -> "1000183"  [label="CFG: "];
"1000183" -> "1000719"  [label="DDG: avpkt->size"];
"1000183" -> "1000719"  [label="DDG: buf_size != avpkt->size"];
"1000175" -> "1000183"  [label="DDG: buf_size"];
"1000177" -> "1000183"  [label="DDG: avpkt->size"];
"1000183" -> "1000416"  [label="DDG: avpkt->size"];
"1000183" -> "1000710"  [label="DDG: avpkt->size"];
"1000175" -> "1000146"  [label="AST: "];
"1000175" -> "1000177"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000177" -> "1000175"  [label="AST: "];
"1000184" -> "1000175"  [label="CFG: "];
"1000175" -> "1000719"  [label="DDG: avpkt->size & ~3"];
"1000177" -> "1000175"  [label="DDG: avpkt->size"];
"1000177" -> "1000175"  [label="DDG: ~3"];
"1000177" -> "1000181"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000181" -> "1000177"  [label="AST: "];
"1000177" -> "1000719"  [label="DDG: ~3"];
"1000163" -> "1000177"  [label="DDG: avpkt->size"];
"1000177" -> "1000237"  [label="DDG: ~3"];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000167"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000167" -> "1000163"  [label="AST: "];
"1000170" -> "1000163"  [label="CFG: "];
"1000176" -> "1000163"  [label="CFG: "];
"1000163" -> "1000719"  [label="DDG: avpkt->size"];
"1000163" -> "1000719"  [label="DDG: avpkt->size < 8"];
"1000151" -> "1000163"  [label="DDG: avpkt->size"];
"1000151" -> "1000150"  [label="AST: "];
"1000151" -> "1000152"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000158" -> "1000151"  [label="CFG: "];
"1000165" -> "1000151"  [label="CFG: "];
"1000151" -> "1000719"  [label="DDG: !avpkt->size"];
"1000151" -> "1000719"  [label="DDG: avpkt->size"];
"1000221" -> "1000220"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000227" -> "1000221"  [label="CFG: "];
"1000221" -> "1000220"  [label="DDG: s->data"];
"1000213" -> "1000221"  [label="DDG: s->data"];
"1000221" -> "1000232"  [label="DDG: s->data"];
"1000221" -> "1000233"  [label="DDG: s->data"];
"1000221" -> "1000251"  [label="DDG: s->data"];
"1000221" -> "1000255"  [label="DDG: s->data"];
"1000221" -> "1000407"  [label="DDG: s->data"];
"1000213" -> "1000212"  [label="AST: "];
"1000213" -> "1000214"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000219" -> "1000213"  [label="CFG: "];
"1000222" -> "1000213"  [label="CFG: "];
"1000213" -> "1000719"  [label="DDG: s->data"];
"1000213" -> "1000719"  [label="DDG: !s->data"];
"1000368" -> "1000370"  [label="CFG: "];
"1000369" -> "1000368"  [label="AST: "];
"1000370" -> "1000368"  [label="AST: "];
"1000368" -> "1000719"  [label="DDG: nblocks"];
"1000368" -> "1000719"  [label="DDG: INT_MAX / 2 / sizeof(*s->decoded_buffer) - 8"];
"1000370" -> "1000368"  [label="DDG: INT_MAX / 2 / sizeof(*s->decoded_buffer)"];
"1000370" -> "1000368"  [label="DDG: 8"];
"1000368" -> "1000382"  [label="DDG: nblocks"];
"1000368" -> "1000401"  [label="DDG: nblocks"];
"1000370" -> "1000380"  [label="CFG: "];
"1000371" -> "1000370"  [label="AST: "];
"1000380" -> "1000370"  [label="AST: "];
"1000370" -> "1000719"  [label="DDG: INT_MAX / 2 / sizeof(*s->decoded_buffer)"];
"1000371" -> "1000370"  [label="DDG: INT_MAX"];
"1000371" -> "1000370"  [label="DDG: 2 / sizeof(*s->decoded_buffer)"];
"1000371" -> "1000373"  [label="CFG: "];
"1000372" -> "1000371"  [label="AST: "];
"1000373" -> "1000371"  [label="AST: "];
"1000380" -> "1000371"  [label="CFG: "];
"1000371" -> "1000719"  [label="DDG: 2 / sizeof(*s->decoded_buffer)"];
"1000371" -> "1000719"  [label="DDG: INT_MAX"];
"1000373" -> "1000371"  [label="DDG: 2"];
"1000371" -> "1000452"  [label="DDG: INT_MAX"];
"1000373" -> "1000375"  [label="CFG: "];
"1000374" -> "1000373"  [label="AST: "];
"1000375" -> "1000373"  [label="AST: "];
}
