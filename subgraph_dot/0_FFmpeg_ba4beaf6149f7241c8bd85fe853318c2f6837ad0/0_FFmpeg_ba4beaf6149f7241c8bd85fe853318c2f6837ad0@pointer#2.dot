digraph "0_FFmpeg_ba4beaf6149f7241c8bd85fe853318c2f6837ad0@pointer" {
"1000122" [label="(Call,*s = avctx->priv_data)"];
"1000391" [label="(Call,init_frame_decoder(s))"];
"1000390" [label="(Call,init_frame_decoder(s) < 0)"];
"1000536" [label="(Call,ape_unpack_mono(s, blockstodecode))"];
"1000591" [label="(Call,i < blockstodecode)"];
"1000594" [label="(Call,i++)"];
"1000700" [label="(Call,s->samples -= blockstodecode)"];
"1000711" [label="(Call,!s->samples)"];
"1000638" [label="(Call,i < blockstodecode)"];
"1000641" [label="(Call,i++)"];
"1000681" [label="(Call,i < blockstodecode)"];
"1000684" [label="(Call,i++)"];
"1000540" [label="(Call,ape_unpack_stereo(s, blockstodecode))"];
"1000594" [label="(Call,i++)"];
"1000536" [label="(Call,ape_unpack_mono(s, blockstodecode))"];
"1000539" [label="(ControlStructure,else)"];
"1000700" [label="(Call,s->samples -= blockstodecode)"];
"1000707" [label="(Identifier,got_frame_ptr)"];
"1000719" [label="(MethodReturn,static int)"];
"1000710" [label="(Call,!s->samples ? avpkt->size : 0)"];
"1000538" [label="(Identifier,blockstodecode)"];
"1000678" [label="(Call,i = 0)"];
"1000390" [label="(Call,init_frame_decoder(s) < 0)"];
"1000623" [label="(Identifier,ch)"];
"1000634" [label="(ControlStructure,for (i = 0; i < blockstodecode; i++))"];
"1000712" [label="(Call,s->samples)"];
"1000682" [label="(Identifier,i)"];
"1000389" [label="(ControlStructure,if (init_frame_decoder(s) < 0))"];
"1000677" [label="(ControlStructure,for (i = 0; i < blockstodecode; i++))"];
"1000524" [label="(ControlStructure,if ((s->channels == 1) || (s->frameflags & APE_FRAMECODE_PSEUDO_STEREO)))"];
"1000592" [label="(Identifier,i)"];
"1000711" [label="(Call,!s->samples)"];
"1000392" [label="(Identifier,s)"];
"1000540" [label="(Call,ape_unpack_stereo(s, blockstodecode))"];
"1000123" [label="(Identifier,s)"];
"1000681" [label="(Call,i < blockstodecode)"];
"1000500" [label="(Call,FFALIGN(blockstodecode, 8))"];
"1000541" [label="(Identifier,s)"];
"1000718" [label="(Literal,0)"];
"1000537" [label="(Identifier,s)"];
"1000393" [label="(Literal,0)"];
"1000704" [label="(Identifier,blockstodecode)"];
"1000639" [label="(Identifier,i)"];
"1000403" [label="(Identifier,s)"];
"1000110" [label="(Block,)"];
"1000640" [label="(Identifier,blockstodecode)"];
"1000642" [label="(Identifier,i)"];
"1000542" [label="(Identifier,blockstodecode)"];
"1000543" [label="(Call,emms_c())"];
"1000646" [label="(Identifier,sample16)"];
"1000689" [label="(Identifier,sample24)"];
"1000685" [label="(Identifier,i)"];
"1000391" [label="(Call,init_frame_decoder(s))"];
"1000591" [label="(Call,i < blockstodecode)"];
"1000588" [label="(Call,i = 0)"];
"1000683" [label="(Identifier,blockstodecode)"];
"1000684" [label="(Call,i++)"];
"1000666" [label="(Identifier,ch)"];
"1000599" [label="(Identifier,sample8)"];
"1000124" [label="(Call,avctx->priv_data)"];
"1000641" [label="(Call,i++)"];
"1000422" [label="(Call,FFMIN(s->blocks_per_loop, s->samples))"];
"1000587" [label="(ControlStructure,for (i = 0; i < blockstodecode; i++))"];
"1000638" [label="(Call,i < blockstodecode)"];
"1000138" [label="(Identifier,s)"];
"1000701" [label="(Call,s->samples)"];
"1000122" [label="(Call,*s = avctx->priv_data)"];
"1000576" [label="(Identifier,ch)"];
"1000635" [label="(Call,i = 0)"];
"1000595" [label="(Identifier,i)"];
"1000716" [label="(Identifier,avpkt)"];
"1000593" [label="(Identifier,blockstodecode)"];
"1000396" [label="(Identifier,avctx)"];
"1000122" -> "1000110"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000138" -> "1000122"  [label="CFG: "];
"1000122" -> "1000719"  [label="DDG: s"];
"1000122" -> "1000719"  [label="DDG: avctx->priv_data"];
"1000122" -> "1000391"  [label="DDG: s"];
"1000122" -> "1000536"  [label="DDG: s"];
"1000122" -> "1000540"  [label="DDG: s"];
"1000391" -> "1000390"  [label="AST: "];
"1000391" -> "1000392"  [label="CFG: "];
"1000392" -> "1000391"  [label="AST: "];
"1000393" -> "1000391"  [label="CFG: "];
"1000391" -> "1000719"  [label="DDG: s"];
"1000391" -> "1000390"  [label="DDG: s"];
"1000391" -> "1000536"  [label="DDG: s"];
"1000391" -> "1000540"  [label="DDG: s"];
"1000390" -> "1000389"  [label="AST: "];
"1000390" -> "1000393"  [label="CFG: "];
"1000393" -> "1000390"  [label="AST: "];
"1000396" -> "1000390"  [label="CFG: "];
"1000403" -> "1000390"  [label="CFG: "];
"1000390" -> "1000719"  [label="DDG: init_frame_decoder(s) < 0"];
"1000390" -> "1000719"  [label="DDG: init_frame_decoder(s)"];
"1000536" -> "1000524"  [label="AST: "];
"1000536" -> "1000538"  [label="CFG: "];
"1000537" -> "1000536"  [label="AST: "];
"1000538" -> "1000536"  [label="AST: "];
"1000543" -> "1000536"  [label="CFG: "];
"1000536" -> "1000719"  [label="DDG: ape_unpack_mono(s, blockstodecode)"];
"1000536" -> "1000719"  [label="DDG: blockstodecode"];
"1000536" -> "1000719"  [label="DDG: s"];
"1000500" -> "1000536"  [label="DDG: blockstodecode"];
"1000536" -> "1000591"  [label="DDG: blockstodecode"];
"1000536" -> "1000638"  [label="DDG: blockstodecode"];
"1000536" -> "1000681"  [label="DDG: blockstodecode"];
"1000536" -> "1000700"  [label="DDG: blockstodecode"];
"1000591" -> "1000587"  [label="AST: "];
"1000591" -> "1000593"  [label="CFG: "];
"1000592" -> "1000591"  [label="AST: "];
"1000593" -> "1000591"  [label="AST: "];
"1000599" -> "1000591"  [label="CFG: "];
"1000576" -> "1000591"  [label="CFG: "];
"1000591" -> "1000719"  [label="DDG: i"];
"1000591" -> "1000719"  [label="DDG: i < blockstodecode"];
"1000588" -> "1000591"  [label="DDG: i"];
"1000594" -> "1000591"  [label="DDG: i"];
"1000540" -> "1000591"  [label="DDG: blockstodecode"];
"1000591" -> "1000594"  [label="DDG: i"];
"1000591" -> "1000700"  [label="DDG: blockstodecode"];
"1000594" -> "1000587"  [label="AST: "];
"1000594" -> "1000595"  [label="CFG: "];
"1000595" -> "1000594"  [label="AST: "];
"1000592" -> "1000594"  [label="CFG: "];
"1000700" -> "1000110"  [label="AST: "];
"1000700" -> "1000704"  [label="CFG: "];
"1000701" -> "1000700"  [label="AST: "];
"1000704" -> "1000700"  [label="AST: "];
"1000707" -> "1000700"  [label="CFG: "];
"1000700" -> "1000719"  [label="DDG: blockstodecode"];
"1000638" -> "1000700"  [label="DDG: blockstodecode"];
"1000681" -> "1000700"  [label="DDG: blockstodecode"];
"1000540" -> "1000700"  [label="DDG: blockstodecode"];
"1000422" -> "1000700"  [label="DDG: s->samples"];
"1000700" -> "1000711"  [label="DDG: s->samples"];
"1000711" -> "1000710"  [label="AST: "];
"1000711" -> "1000712"  [label="CFG: "];
"1000712" -> "1000711"  [label="AST: "];
"1000716" -> "1000711"  [label="CFG: "];
"1000718" -> "1000711"  [label="CFG: "];
"1000711" -> "1000719"  [label="DDG: s->samples"];
"1000638" -> "1000634"  [label="AST: "];
"1000638" -> "1000640"  [label="CFG: "];
"1000639" -> "1000638"  [label="AST: "];
"1000640" -> "1000638"  [label="AST: "];
"1000646" -> "1000638"  [label="CFG: "];
"1000623" -> "1000638"  [label="CFG: "];
"1000638" -> "1000719"  [label="DDG: i < blockstodecode"];
"1000638" -> "1000719"  [label="DDG: i"];
"1000635" -> "1000638"  [label="DDG: i"];
"1000641" -> "1000638"  [label="DDG: i"];
"1000540" -> "1000638"  [label="DDG: blockstodecode"];
"1000638" -> "1000641"  [label="DDG: i"];
"1000641" -> "1000634"  [label="AST: "];
"1000641" -> "1000642"  [label="CFG: "];
"1000642" -> "1000641"  [label="AST: "];
"1000639" -> "1000641"  [label="CFG: "];
"1000681" -> "1000677"  [label="AST: "];
"1000681" -> "1000683"  [label="CFG: "];
"1000682" -> "1000681"  [label="AST: "];
"1000683" -> "1000681"  [label="AST: "];
"1000689" -> "1000681"  [label="CFG: "];
"1000666" -> "1000681"  [label="CFG: "];
"1000681" -> "1000719"  [label="DDG: i < blockstodecode"];
"1000681" -> "1000719"  [label="DDG: i"];
"1000684" -> "1000681"  [label="DDG: i"];
"1000678" -> "1000681"  [label="DDG: i"];
"1000540" -> "1000681"  [label="DDG: blockstodecode"];
"1000681" -> "1000684"  [label="DDG: i"];
"1000684" -> "1000677"  [label="AST: "];
"1000684" -> "1000685"  [label="CFG: "];
"1000685" -> "1000684"  [label="AST: "];
"1000682" -> "1000684"  [label="CFG: "];
"1000540" -> "1000539"  [label="AST: "];
"1000540" -> "1000542"  [label="CFG: "];
"1000541" -> "1000540"  [label="AST: "];
"1000542" -> "1000540"  [label="AST: "];
"1000543" -> "1000540"  [label="CFG: "];
"1000540" -> "1000719"  [label="DDG: ape_unpack_stereo(s, blockstodecode)"];
"1000540" -> "1000719"  [label="DDG: blockstodecode"];
"1000540" -> "1000719"  [label="DDG: s"];
"1000500" -> "1000540"  [label="DDG: blockstodecode"];
}
