digraph "0_FFmpeg_ba4beaf6149f7241c8bd85fe853318c2f6837ad0@pointer" {
"1000136" [label="(Call,s->samples >= 0)"];
"1000135" [label="(Call,av_assert0(s->samples >= 0))"];
"1000142" [label="(Call,!s->samples)"];
"1000422" [label="(Call,FFMIN(s->blocks_per_loop, s->samples))"];
"1000420" [label="(Call,blockstodecode = FFMIN(s->blocks_per_loop, s->samples))"];
"1000443" [label="(Call,FFALIGN(blockstodecode, 8))"];
"1000442" [label="(Call,FFALIGN(blockstodecode, 8) * sizeof(*s->decoded_buffer))"];
"1000440" [label="(Call,L * FFALIGN(blockstodecode, 8) * sizeof(*s->decoded_buffer))"];
"1000500" [label="(Call,FFALIGN(blockstodecode, 8))"];
"1000490" [label="(Call,s->decoded[1] = s->decoded_buffer + FFALIGN(blockstodecode, 8))"];
"1000496" [label="(Call,s->decoded_buffer + FFALIGN(blockstodecode, 8))"];
"1000503" [label="(Call,frame->nb_samples = blockstodecode)"];
"1000536" [label="(Call,ape_unpack_mono(s, blockstodecode))"];
"1000591" [label="(Call,i < blockstodecode)"];
"1000594" [label="(Call,i++)"];
"1000700" [label="(Call,s->samples -= blockstodecode)"];
"1000711" [label="(Call,!s->samples)"];
"1000638" [label="(Call,i < blockstodecode)"];
"1000641" [label="(Call,i++)"];
"1000681" [label="(Call,i < blockstodecode)"];
"1000684" [label="(Call,i++)"];
"1000540" [label="(Call,ape_unpack_stereo(s, blockstodecode))"];
"1000435" [label="(Call,blockstodecode = s->samples)"];
"1000503" [label="(Call,frame->nb_samples = blockstodecode)"];
"1000710" [label="(Call,!s->samples ? avpkt->size : 0)"];
"1000707" [label="(Identifier,got_frame_ptr)"];
"1000143" [label="(Call,s->samples)"];
"1000538" [label="(Identifier,blockstodecode)"];
"1000420" [label="(Call,blockstodecode = FFMIN(s->blocks_per_loop, s->samples))"];
"1000712" [label="(Call,s->samples)"];
"1000524" [label="(ControlStructure,if ((s->channels == 1) || (s->frameflags & APE_FRAMECODE_PSEUDO_STEREO)))"];
"1000711" [label="(Call,!s->samples)"];
"1000432" [label="(Identifier,s)"];
"1000541" [label="(Identifier,s)"];
"1000445" [label="(Literal,8)"];
"1000135" [label="(Call,av_assert0(s->samples >= 0))"];
"1000537" [label="(Identifier,s)"];
"1000640" [label="(Identifier,blockstodecode)"];
"1000642" [label="(Identifier,i)"];
"1000646" [label="(Identifier,sample16)"];
"1000689" [label="(Identifier,sample24)"];
"1000685" [label="(Identifier,i)"];
"1000591" [label="(Call,i < blockstodecode)"];
"1000588" [label="(Call,i = 0)"];
"1000449" [label="(Identifier,s)"];
"1000599" [label="(Identifier,sample8)"];
"1000140" [label="(Literal,0)"];
"1000587" [label="(ControlStructure,for (i = 0; i < blockstodecode; i++))"];
"1000638" [label="(Call,i < blockstodecode)"];
"1000507" [label="(Identifier,blockstodecode)"];
"1000473" [label="(Call,memset(s->decoded_buffer, 0, s->decoded_size))"];
"1000593" [label="(Identifier,blockstodecode)"];
"1000536" [label="(Call,ape_unpack_mono(s, blockstodecode))"];
"1000719" [label="(MethodReturn,static int)"];
"1000444" [label="(Identifier,blockstodecode)"];
"1000453" [label="(Identifier,decoded_buffer_size)"];
"1000511" [label="(Identifier,ret)"];
"1000441" [label="(Identifier,L)"];
"1000678" [label="(Call,i = 0)"];
"1000623" [label="(Identifier,ch)"];
"1000634" [label="(ControlStructure,for (i = 0; i < blockstodecode; i++))"];
"1000421" [label="(Identifier,blockstodecode)"];
"1000144" [label="(Identifier,s)"];
"1000435" [label="(Call,blockstodecode = s->samples)"];
"1000455" [label="(Call,av_fast_malloc(&s->decoded_buffer, &s->decoded_size, decoded_buffer_size))"];
"1000401" [label="(Call,s->samples = nblocks)"];
"1000505" [label="(Identifier,frame)"];
"1000543" [label="(Call,emms_c())"];
"1000137" [label="(Call,s->samples)"];
"1000684" [label="(Call,i++)"];
"1000422" [label="(Call,FFMIN(s->blocks_per_loop, s->samples))"];
"1000442" [label="(Call,FFALIGN(blockstodecode, 8) * sizeof(*s->decoded_buffer))"];
"1000446" [label="(Call,sizeof(*s->decoded_buffer))"];
"1000409" [label="(Identifier,s)"];
"1000595" [label="(Identifier,i)"];
"1000716" [label="(Identifier,avpkt)"];
"1000594" [label="(Call,i++)"];
"1000700" [label="(Call,s->samples -= blockstodecode)"];
"1000426" [label="(Call,s->samples)"];
"1000682" [label="(Identifier,i)"];
"1000429" [label="(ControlStructure,if (s->fileversion < 3930))"];
"1000502" [label="(Literal,8)"];
"1000540" [label="(Call,ape_unpack_stereo(s, blockstodecode))"];
"1000497" [label="(Call,s->decoded_buffer)"];
"1000718" [label="(Literal,0)"];
"1000141" [label="(ControlStructure,if(!s->samples))"];
"1000440" [label="(Call,L * FFALIGN(blockstodecode, 8) * sizeof(*s->decoded_buffer))"];
"1000110" [label="(Block,)"];
"1000501" [label="(Identifier,blockstodecode)"];
"1000542" [label="(Identifier,blockstodecode)"];
"1000391" [label="(Call,init_frame_decoder(s))"];
"1000641" [label="(Call,i++)"];
"1000423" [label="(Call,s->blocks_per_loop)"];
"1000437" [label="(Call,s->samples)"];
"1000539" [label="(ControlStructure,else)"];
"1000443" [label="(Call,FFALIGN(blockstodecode, 8))"];
"1000136" [label="(Call,s->samples >= 0)"];
"1000491" [label="(Call,s->decoded[1])"];
"1000677" [label="(ControlStructure,for (i = 0; i < blockstodecode; i++))"];
"1000592" [label="(Identifier,i)"];
"1000142" [label="(Call,!s->samples)"];
"1000153" [label="(Identifier,avpkt)"];
"1000681" [label="(Call,i < blockstodecode)"];
"1000500" [label="(Call,FFALIGN(blockstodecode, 8))"];
"1000704" [label="(Identifier,blockstodecode)"];
"1000639" [label="(Identifier,i)"];
"1000490" [label="(Call,s->decoded[1] = s->decoded_buffer + FFALIGN(blockstodecode, 8))"];
"1000683" [label="(Identifier,blockstodecode)"];
"1000666" [label="(Identifier,ch)"];
"1000701" [label="(Call,s->samples)"];
"1000504" [label="(Call,frame->nb_samples)"];
"1000122" [label="(Call,*s = avctx->priv_data)"];
"1000576" [label="(Identifier,ch)"];
"1000635" [label="(Call,i = 0)"];
"1000496" [label="(Call,s->decoded_buffer + FFALIGN(blockstodecode, 8))"];
"1000436" [label="(Identifier,blockstodecode)"];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000140"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000140" -> "1000136"  [label="AST: "];
"1000135" -> "1000136"  [label="CFG: "];
"1000136" -> "1000135"  [label="DDG: s->samples"];
"1000136" -> "1000135"  [label="DDG: 0"];
"1000136" -> "1000142"  [label="DDG: s->samples"];
"1000135" -> "1000110"  [label="AST: "];
"1000144" -> "1000135"  [label="CFG: "];
"1000135" -> "1000719"  [label="DDG: av_assert0(s->samples >= 0)"];
"1000135" -> "1000719"  [label="DDG: s->samples >= 0"];
"1000142" -> "1000141"  [label="AST: "];
"1000142" -> "1000143"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000153" -> "1000142"  [label="CFG: "];
"1000409" -> "1000142"  [label="CFG: "];
"1000142" -> "1000719"  [label="DDG: !s->samples"];
"1000142" -> "1000719"  [label="DDG: s->samples"];
"1000142" -> "1000422"  [label="DDG: s->samples"];
"1000422" -> "1000420"  [label="AST: "];
"1000422" -> "1000426"  [label="CFG: "];
"1000423" -> "1000422"  [label="AST: "];
"1000426" -> "1000422"  [label="AST: "];
"1000420" -> "1000422"  [label="CFG: "];
"1000422" -> "1000719"  [label="DDG: s->samples"];
"1000422" -> "1000719"  [label="DDG: s->blocks_per_loop"];
"1000422" -> "1000420"  [label="DDG: s->blocks_per_loop"];
"1000422" -> "1000420"  [label="DDG: s->samples"];
"1000401" -> "1000422"  [label="DDG: s->samples"];
"1000422" -> "1000435"  [label="DDG: s->samples"];
"1000422" -> "1000700"  [label="DDG: s->samples"];
"1000420" -> "1000110"  [label="AST: "];
"1000421" -> "1000420"  [label="AST: "];
"1000432" -> "1000420"  [label="CFG: "];
"1000420" -> "1000719"  [label="DDG: FFMIN(s->blocks_per_loop, s->samples)"];
"1000420" -> "1000443"  [label="DDG: blockstodecode"];
"1000443" -> "1000442"  [label="AST: "];
"1000443" -> "1000445"  [label="CFG: "];
"1000444" -> "1000443"  [label="AST: "];
"1000445" -> "1000443"  [label="AST: "];
"1000449" -> "1000443"  [label="CFG: "];
"1000443" -> "1000719"  [label="DDG: blockstodecode"];
"1000443" -> "1000442"  [label="DDG: blockstodecode"];
"1000443" -> "1000442"  [label="DDG: 8"];
"1000435" -> "1000443"  [label="DDG: blockstodecode"];
"1000443" -> "1000500"  [label="DDG: blockstodecode"];
"1000442" -> "1000440"  [label="AST: "];
"1000442" -> "1000446"  [label="CFG: "];
"1000446" -> "1000442"  [label="AST: "];
"1000440" -> "1000442"  [label="CFG: "];
"1000442" -> "1000719"  [label="DDG: FFALIGN(blockstodecode, 8)"];
"1000442" -> "1000440"  [label="DDG: FFALIGN(blockstodecode, 8)"];
"1000440" -> "1000110"  [label="AST: "];
"1000441" -> "1000440"  [label="AST: "];
"1000453" -> "1000440"  [label="CFG: "];
"1000440" -> "1000719"  [label="DDG: FFALIGN(blockstodecode, 8) * sizeof(*s->decoded_buffer)"];
"1000440" -> "1000719"  [label="DDG: L * FFALIGN(blockstodecode, 8) * sizeof(*s->decoded_buffer)"];
"1000440" -> "1000719"  [label="DDG: L"];
"1000500" -> "1000496"  [label="AST: "];
"1000500" -> "1000502"  [label="CFG: "];
"1000501" -> "1000500"  [label="AST: "];
"1000502" -> "1000500"  [label="AST: "];
"1000496" -> "1000500"  [label="CFG: "];
"1000500" -> "1000490"  [label="DDG: blockstodecode"];
"1000500" -> "1000490"  [label="DDG: 8"];
"1000500" -> "1000496"  [label="DDG: blockstodecode"];
"1000500" -> "1000496"  [label="DDG: 8"];
"1000500" -> "1000503"  [label="DDG: blockstodecode"];
"1000500" -> "1000536"  [label="DDG: blockstodecode"];
"1000500" -> "1000540"  [label="DDG: blockstodecode"];
"1000490" -> "1000110"  [label="AST: "];
"1000490" -> "1000496"  [label="CFG: "];
"1000491" -> "1000490"  [label="AST: "];
"1000496" -> "1000490"  [label="AST: "];
"1000505" -> "1000490"  [label="CFG: "];
"1000490" -> "1000719"  [label="DDG: s->decoded_buffer + FFALIGN(blockstodecode, 8)"];
"1000490" -> "1000719"  [label="DDG: s->decoded[1]"];
"1000455" -> "1000490"  [label="DDG: &s->decoded_buffer"];
"1000473" -> "1000490"  [label="DDG: s->decoded_buffer"];
"1000497" -> "1000496"  [label="AST: "];
"1000496" -> "1000719"  [label="DDG: s->decoded_buffer"];
"1000496" -> "1000719"  [label="DDG: FFALIGN(blockstodecode, 8)"];
"1000455" -> "1000496"  [label="DDG: &s->decoded_buffer"];
"1000473" -> "1000496"  [label="DDG: s->decoded_buffer"];
"1000503" -> "1000110"  [label="AST: "];
"1000503" -> "1000507"  [label="CFG: "];
"1000504" -> "1000503"  [label="AST: "];
"1000507" -> "1000503"  [label="AST: "];
"1000511" -> "1000503"  [label="CFG: "];
"1000503" -> "1000719"  [label="DDG: blockstodecode"];
"1000503" -> "1000719"  [label="DDG: frame->nb_samples"];
"1000536" -> "1000524"  [label="AST: "];
"1000536" -> "1000538"  [label="CFG: "];
"1000537" -> "1000536"  [label="AST: "];
"1000538" -> "1000536"  [label="AST: "];
"1000543" -> "1000536"  [label="CFG: "];
"1000536" -> "1000719"  [label="DDG: ape_unpack_mono(s, blockstodecode)"];
"1000536" -> "1000719"  [label="DDG: blockstodecode"];
"1000536" -> "1000719"  [label="DDG: s"];
"1000391" -> "1000536"  [label="DDG: s"];
"1000122" -> "1000536"  [label="DDG: s"];
"1000536" -> "1000591"  [label="DDG: blockstodecode"];
"1000536" -> "1000638"  [label="DDG: blockstodecode"];
"1000536" -> "1000681"  [label="DDG: blockstodecode"];
"1000536" -> "1000700"  [label="DDG: blockstodecode"];
"1000591" -> "1000587"  [label="AST: "];
"1000591" -> "1000593"  [label="CFG: "];
"1000592" -> "1000591"  [label="AST: "];
"1000593" -> "1000591"  [label="AST: "];
"1000599" -> "1000591"  [label="CFG: "];
"1000576" -> "1000591"  [label="CFG: "];
"1000591" -> "1000719"  [label="DDG: i"];
"1000591" -> "1000719"  [label="DDG: i < blockstodecode"];
"1000588" -> "1000591"  [label="DDG: i"];
"1000594" -> "1000591"  [label="DDG: i"];
"1000540" -> "1000591"  [label="DDG: blockstodecode"];
"1000591" -> "1000594"  [label="DDG: i"];
"1000591" -> "1000700"  [label="DDG: blockstodecode"];
"1000594" -> "1000587"  [label="AST: "];
"1000594" -> "1000595"  [label="CFG: "];
"1000595" -> "1000594"  [label="AST: "];
"1000592" -> "1000594"  [label="CFG: "];
"1000700" -> "1000110"  [label="AST: "];
"1000700" -> "1000704"  [label="CFG: "];
"1000701" -> "1000700"  [label="AST: "];
"1000704" -> "1000700"  [label="AST: "];
"1000707" -> "1000700"  [label="CFG: "];
"1000700" -> "1000719"  [label="DDG: blockstodecode"];
"1000638" -> "1000700"  [label="DDG: blockstodecode"];
"1000681" -> "1000700"  [label="DDG: blockstodecode"];
"1000540" -> "1000700"  [label="DDG: blockstodecode"];
"1000700" -> "1000711"  [label="DDG: s->samples"];
"1000711" -> "1000710"  [label="AST: "];
"1000711" -> "1000712"  [label="CFG: "];
"1000712" -> "1000711"  [label="AST: "];
"1000716" -> "1000711"  [label="CFG: "];
"1000718" -> "1000711"  [label="CFG: "];
"1000711" -> "1000719"  [label="DDG: s->samples"];
"1000638" -> "1000634"  [label="AST: "];
"1000638" -> "1000640"  [label="CFG: "];
"1000639" -> "1000638"  [label="AST: "];
"1000640" -> "1000638"  [label="AST: "];
"1000646" -> "1000638"  [label="CFG: "];
"1000623" -> "1000638"  [label="CFG: "];
"1000638" -> "1000719"  [label="DDG: i < blockstodecode"];
"1000638" -> "1000719"  [label="DDG: i"];
"1000635" -> "1000638"  [label="DDG: i"];
"1000641" -> "1000638"  [label="DDG: i"];
"1000540" -> "1000638"  [label="DDG: blockstodecode"];
"1000638" -> "1000641"  [label="DDG: i"];
"1000641" -> "1000634"  [label="AST: "];
"1000641" -> "1000642"  [label="CFG: "];
"1000642" -> "1000641"  [label="AST: "];
"1000639" -> "1000641"  [label="CFG: "];
"1000681" -> "1000677"  [label="AST: "];
"1000681" -> "1000683"  [label="CFG: "];
"1000682" -> "1000681"  [label="AST: "];
"1000683" -> "1000681"  [label="AST: "];
"1000689" -> "1000681"  [label="CFG: "];
"1000666" -> "1000681"  [label="CFG: "];
"1000681" -> "1000719"  [label="DDG: i < blockstodecode"];
"1000681" -> "1000719"  [label="DDG: i"];
"1000684" -> "1000681"  [label="DDG: i"];
"1000678" -> "1000681"  [label="DDG: i"];
"1000540" -> "1000681"  [label="DDG: blockstodecode"];
"1000681" -> "1000684"  [label="DDG: i"];
"1000684" -> "1000677"  [label="AST: "];
"1000684" -> "1000685"  [label="CFG: "];
"1000685" -> "1000684"  [label="AST: "];
"1000682" -> "1000684"  [label="CFG: "];
"1000540" -> "1000539"  [label="AST: "];
"1000540" -> "1000542"  [label="CFG: "];
"1000541" -> "1000540"  [label="AST: "];
"1000542" -> "1000540"  [label="AST: "];
"1000543" -> "1000540"  [label="CFG: "];
"1000540" -> "1000719"  [label="DDG: ape_unpack_stereo(s, blockstodecode)"];
"1000540" -> "1000719"  [label="DDG: blockstodecode"];
"1000540" -> "1000719"  [label="DDG: s"];
"1000391" -> "1000540"  [label="DDG: s"];
"1000122" -> "1000540"  [label="DDG: s"];
"1000435" -> "1000429"  [label="AST: "];
"1000435" -> "1000437"  [label="CFG: "];
"1000436" -> "1000435"  [label="AST: "];
"1000437" -> "1000435"  [label="AST: "];
"1000441" -> "1000435"  [label="CFG: "];
"1000435" -> "1000719"  [label="DDG: s->samples"];
}
