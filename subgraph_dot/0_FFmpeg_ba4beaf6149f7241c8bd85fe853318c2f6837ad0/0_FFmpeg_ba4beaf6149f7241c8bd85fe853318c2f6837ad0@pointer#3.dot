digraph "0_FFmpeg_ba4beaf6149f7241c8bd85fe853318c2f6837ad0@pointer" {
"1000106" [label="(MethodParameterIn,AVCodecContext *avctx)"];
"1000169" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Packet is too small\n\"))"];
"1000189" [label="(Call,av_log(avctx, AV_LOG_WARNING, \"packet size is not a multiple of 4. \"\n                   \"extra bytes at the end will be skipped.\n\"))"];
"1000286" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Incorrect offset passed\n\"))"];
"1000308" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Packet is too small\n\"))"];
"1000382" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Invalid sample count: %\"PRIu32\".\n\",\n                    nblocks))"];
"1000395" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Error reading frame header\n\"))"];
"1000512" [label="(Call,ff_get_buffer(avctx, frame, 0))"];
"1000509" [label="(Call,(ret = ff_get_buffer(avctx, frame, 0)) < 0)"];
"1000510" [label="(Call,ret = ff_get_buffer(avctx, frame, 0))"];
"1000517" [label="(Return,return ret;)"];
"1000554" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Error decoding frame\n\"))"];
"1000557" [label="(Literal,\"Error decoding frame\n\")"];
"1000189" [label="(Call,av_log(avctx, AV_LOG_WARNING, \"packet size is not a multiple of 4. \"\n                   \"extra bytes at the end will be skipped.\n\"))"];
"1000307" [label="(Block,)"];
"1000513" [label="(Identifier,avctx)"];
"1000112" [label="(Call,*frame     = data)"];
"1000366" [label="(Call,!nblocks)"];
"1000400" [label="(Identifier,AVERROR_INVALIDDATA)"];
"1000556" [label="(Identifier,AV_LOG_ERROR)"];
"1000719" [label="(MethodReturn,static int)"];
"1000171" [label="(Identifier,AV_LOG_ERROR)"];
"1000518" [label="(Identifier,ret)"];
"1000511" [label="(Identifier,ret)"];
"1000191" [label="(Identifier,AV_LOG_WARNING)"];
"1000169" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Packet is too small\n\"))"];
"1000394" [label="(Block,)"];
"1000383" [label="(Identifier,avctx)"];
"1000397" [label="(Identifier,AV_LOG_ERROR)"];
"1000313" [label="(Identifier,AVERROR_INVALIDDATA)"];
"1000170" [label="(Identifier,avctx)"];
"1000384" [label="(Identifier,AV_LOG_ERROR)"];
"1000196" [label="(Identifier,s)"];
"1000368" [label="(Call,nblocks > INT_MAX / 2 / sizeof(*s->decoded_buffer) - 8)"];
"1000382" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Invalid sample count: %\"PRIu32\".\n\",\n                    nblocks))"];
"1000174" [label="(Identifier,AVERROR_INVALIDDATA)"];
"1000311" [label="(Literal,\"Packet is too small\n\")"];
"1000192" [label="(Literal,\"packet size is not a multiple of 4. \"\n                   \"extra bytes at the end will be skipped.\n\")"];
"1000310" [label="(Identifier,AV_LOG_ERROR)"];
"1000285" [label="(Block,)"];
"1000188" [label="(Block,)"];
"1000510" [label="(Call,ret = ff_get_buffer(avctx, frame, 0))"];
"1000395" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Error reading frame header\n\"))"];
"1000398" [label="(Literal,\"Error reading frame header\n\")"];
"1000515" [label="(Literal,0)"];
"1000289" [label="(Literal,\"Incorrect offset passed\n\")"];
"1000559" [label="(Identifier,AVERROR_INVALIDDATA)"];
"1000287" [label="(Identifier,avctx)"];
"1000509" [label="(Call,(ret = ff_get_buffer(avctx, frame, 0)) < 0)"];
"1000555" [label="(Identifier,avctx)"];
"1000385" [label="(Literal,\"Invalid sample count: %\"PRIu32\".\n\")"];
"1000386" [label="(Identifier,nblocks)"];
"1000308" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Packet is too small\n\"))"];
"1000190" [label="(Identifier,avctx)"];
"1000396" [label="(Identifier,avctx)"];
"1000168" [label="(Block,)"];
"1000512" [label="(Call,ff_get_buffer(avctx, frame, 0))"];
"1000292" [label="(Identifier,s)"];
"1000388" [label="(Identifier,AVERROR_INVALIDDATA)"];
"1000548" [label="(Block,)"];
"1000381" [label="(Block,)"];
"1000554" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Error decoding frame\n\"))"];
"1000517" [label="(Return,return ret;)"];
"1000309" [label="(Identifier,avctx)"];
"1000514" [label="(Identifier,frame)"];
"1000286" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Incorrect offset passed\n\"))"];
"1000508" [label="(ControlStructure,if ((ret = ff_get_buffer(avctx, frame, 0)) < 0))"];
"1000106" [label="(MethodParameterIn,AVCodecContext *avctx)"];
"1000172" [label="(Literal,\"Packet is too small\n\")"];
"1000516" [label="(Literal,0)"];
"1000521" [label="(Identifier,s)"];
"1000288" [label="(Identifier,AV_LOG_ERROR)"];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000719"  [label="DDG: "];
"1000106" -> "1000169"  [label="DDG: "];
"1000106" -> "1000189"  [label="DDG: "];
"1000106" -> "1000286"  [label="DDG: "];
"1000106" -> "1000308"  [label="DDG: "];
"1000106" -> "1000382"  [label="DDG: "];
"1000106" -> "1000395"  [label="DDG: "];
"1000106" -> "1000512"  [label="DDG: "];
"1000106" -> "1000554"  [label="DDG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000169" -> "1000172"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000171" -> "1000169"  [label="AST: "];
"1000172" -> "1000169"  [label="AST: "];
"1000174" -> "1000169"  [label="CFG: "];
"1000169" -> "1000719"  [label="DDG: "];
"1000169" -> "1000719"  [label="DDG: "];
"1000169" -> "1000719"  [label="DDG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000189" -> "1000192"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000191" -> "1000189"  [label="AST: "];
"1000192" -> "1000189"  [label="AST: "];
"1000196" -> "1000189"  [label="CFG: "];
"1000189" -> "1000719"  [label="DDG: "];
"1000189" -> "1000719"  [label="DDG: "];
"1000189" -> "1000719"  [label="DDG: "];
"1000189" -> "1000286"  [label="DDG: "];
"1000189" -> "1000308"  [label="DDG: "];
"1000189" -> "1000382"  [label="DDG: "];
"1000189" -> "1000395"  [label="DDG: "];
"1000189" -> "1000512"  [label="DDG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000286" -> "1000289"  [label="CFG: "];
"1000287" -> "1000286"  [label="AST: "];
"1000288" -> "1000286"  [label="AST: "];
"1000289" -> "1000286"  [label="AST: "];
"1000292" -> "1000286"  [label="CFG: "];
"1000286" -> "1000719"  [label="DDG: "];
"1000286" -> "1000719"  [label="DDG: "];
"1000286" -> "1000719"  [label="DDG: "];
"1000308" -> "1000307"  [label="AST: "];
"1000308" -> "1000311"  [label="CFG: "];
"1000309" -> "1000308"  [label="AST: "];
"1000310" -> "1000308"  [label="AST: "];
"1000311" -> "1000308"  [label="AST: "];
"1000313" -> "1000308"  [label="CFG: "];
"1000308" -> "1000719"  [label="DDG: "];
"1000308" -> "1000719"  [label="DDG: "];
"1000308" -> "1000719"  [label="DDG: "];
"1000382" -> "1000381"  [label="AST: "];
"1000382" -> "1000386"  [label="CFG: "];
"1000383" -> "1000382"  [label="AST: "];
"1000384" -> "1000382"  [label="AST: "];
"1000385" -> "1000382"  [label="AST: "];
"1000386" -> "1000382"  [label="AST: "];
"1000388" -> "1000382"  [label="CFG: "];
"1000382" -> "1000719"  [label="DDG: "];
"1000382" -> "1000719"  [label="DDG: "];
"1000382" -> "1000719"  [label="DDG: "];
"1000382" -> "1000719"  [label="DDG: "];
"1000368" -> "1000382"  [label="DDG: "];
"1000366" -> "1000382"  [label="DDG: "];
"1000395" -> "1000394"  [label="AST: "];
"1000395" -> "1000398"  [label="CFG: "];
"1000396" -> "1000395"  [label="AST: "];
"1000397" -> "1000395"  [label="AST: "];
"1000398" -> "1000395"  [label="AST: "];
"1000400" -> "1000395"  [label="CFG: "];
"1000395" -> "1000719"  [label="DDG: "];
"1000395" -> "1000719"  [label="DDG: "];
"1000395" -> "1000719"  [label="DDG: "];
"1000512" -> "1000510"  [label="AST: "];
"1000512" -> "1000515"  [label="CFG: "];
"1000513" -> "1000512"  [label="AST: "];
"1000514" -> "1000512"  [label="AST: "];
"1000515" -> "1000512"  [label="AST: "];
"1000510" -> "1000512"  [label="CFG: "];
"1000512" -> "1000719"  [label="DDG: "];
"1000512" -> "1000719"  [label="DDG: "];
"1000512" -> "1000509"  [label="DDG: "];
"1000512" -> "1000509"  [label="DDG: "];
"1000512" -> "1000509"  [label="DDG: "];
"1000512" -> "1000510"  [label="DDG: "];
"1000512" -> "1000510"  [label="DDG: "];
"1000512" -> "1000510"  [label="DDG: "];
"1000112" -> "1000512"  [label="DDG: "];
"1000512" -> "1000554"  [label="DDG: "];
"1000509" -> "1000508"  [label="AST: "];
"1000509" -> "1000516"  [label="CFG: "];
"1000510" -> "1000509"  [label="AST: "];
"1000516" -> "1000509"  [label="AST: "];
"1000518" -> "1000509"  [label="CFG: "];
"1000521" -> "1000509"  [label="CFG: "];
"1000509" -> "1000719"  [label="DDG: "];
"1000510" -> "1000509"  [label="DDG: "];
"1000511" -> "1000510"  [label="AST: "];
"1000516" -> "1000510"  [label="CFG: "];
"1000510" -> "1000719"  [label="DDG: "];
"1000510" -> "1000719"  [label="DDG: "];
"1000510" -> "1000517"  [label="DDG: "];
"1000517" -> "1000508"  [label="AST: "];
"1000517" -> "1000518"  [label="CFG: "];
"1000518" -> "1000517"  [label="AST: "];
"1000719" -> "1000517"  [label="CFG: "];
"1000517" -> "1000719"  [label="DDG: "];
"1000518" -> "1000517"  [label="DDG: "];
"1000554" -> "1000548"  [label="AST: "];
"1000554" -> "1000557"  [label="CFG: "];
"1000555" -> "1000554"  [label="AST: "];
"1000556" -> "1000554"  [label="AST: "];
"1000557" -> "1000554"  [label="AST: "];
"1000559" -> "1000554"  [label="CFG: "];
"1000554" -> "1000719"  [label="DDG: "];
"1000554" -> "1000719"  [label="DDG: "];
"1000554" -> "1000719"  [label="DDG: "];
}
