digraph "0_linux_073931017b49d9458aa351605b43a7e34598caef_10@API" {
"1000201" [label="(Call,value = kmalloc(size, GFP_KERNEL))"];
"1000203" [label="(Call,kmalloc(size, GFP_KERNEL))"];
"1000195" [label="(Call,size = posix_acl_xattr_size(acl->a_count))"];
"1000197" [label="(Call,posix_acl_xattr_size(acl->a_count))"];
"1000207" [label="(Call,!value)"];
"1000214" [label="(Call,posix_acl_to_xattr(&init_user_ns, acl, value, size))"];
"1000212" [label="(Call,error = posix_acl_to_xattr(&init_user_ns, acl, value, size))"];
"1000221" [label="(Call,error < 0)"];
"1000245" [label="(Call,!error)"];
"1000251" [label="(Return,return error;)"];
"1000225" [label="(Call,gossip_debug(GOSSIP_ACL_DEBUG,\n\t\t     \"%s: name %s, value %p, size %zd, acl %p\n\",\n\t\t     __func__, name, value, size, acl))"];
"1000235" [label="(Call,orangefs_inode_setxattr(inode, name, value, size, 0))"];
"1000233" [label="(Call,error = orangefs_inode_setxattr(inode, name, value, size, 0))"];
"1000242" [label="(Call,kfree(value))"];
"1000247" [label="(Call,set_cached_acl(inode, type, acl))"];
"1000234" [label="(Identifier,error)"];
"1000222" [label="(Identifier,error)"];
"1000248" [label="(Identifier,inode)"];
"1000188" [label="(Call,get_khandle_from_ino(inode))"];
"1000240" [label="(Literal,0)"];
"1000239" [label="(Identifier,size)"];
"1000116" [label="(Call,*value = NULL)"];
"1000241" [label="(JumpTarget,out:)"];
"1000252" [label="(Identifier,error)"];
"1000212" [label="(Call,error = posix_acl_to_xattr(&init_user_ns, acl, value, size))"];
"1000205" [label="(Identifier,GFP_KERNEL)"];
"1000219" [label="(Identifier,size)"];
"1000184" [label="(Call,gossip_debug(GOSSIP_ACL_DEBUG,\n\t\t     \"%s: inode %pU, key %s type %d\n\",\n\t\t     __func__, get_khandle_from_ino(inode),\n\t\t     name,\n\t\t     type))"];
"1000194" [label="(Block,)"];
"1000218" [label="(Identifier,value)"];
"1000235" [label="(Call,orangefs_inode_setxattr(inode, name, value, size, 0))"];
"1000207" [label="(Call,!value)"];
"1000214" [label="(Call,posix_acl_to_xattr(&init_user_ns, acl, value, size))"];
"1000221" [label="(Call,error < 0)"];
"1000246" [label="(Identifier,error)"];
"1000105" [label="(Block,)"];
"1000251" [label="(Return,return error;)"];
"1000226" [label="(Identifier,GOSSIP_ACL_DEBUG)"];
"1000223" [label="(Literal,0)"];
"1000231" [label="(Identifier,size)"];
"1000208" [label="(Identifier,value)"];
"1000228" [label="(Identifier,__func__)"];
"1000229" [label="(Identifier,name)"];
"1000196" [label="(Identifier,size)"];
"1000206" [label="(ControlStructure,if (!value))"];
"1000237" [label="(Identifier,name)"];
"1000102" [label="(MethodParameterIn,struct inode *inode)"];
"1000249" [label="(Identifier,type)"];
"1000202" [label="(Identifier,value)"];
"1000225" [label="(Call,gossip_debug(GOSSIP_ACL_DEBUG,\n\t\t     \"%s: name %s, value %p, size %zd, acl %p\n\",\n\t\t     __func__, name, value, size, acl))"];
"1000217" [label="(Identifier,acl)"];
"1000204" [label="(Identifier,size)"];
"1000227" [label="(Literal,\"%s: name %s, value %p, size %zd, acl %p\n\")"];
"1000203" [label="(Call,kmalloc(size, GFP_KERNEL))"];
"1000236" [label="(Identifier,inode)"];
"1000195" [label="(Call,size = posix_acl_xattr_size(acl->a_count))"];
"1000211" [label="(Identifier,ENOMEM)"];
"1000215" [label="(Call,&init_user_ns)"];
"1000104" [label="(MethodParameterIn,int type)"];
"1000120" [label="(Call,size = 0)"];
"1000247" [label="(Call,set_cached_acl(inode, type, acl))"];
"1000230" [label="(Identifier,value)"];
"1000250" [label="(Identifier,acl)"];
"1000253" [label="(MethodReturn,int)"];
"1000232" [label="(Identifier,acl)"];
"1000224" [label="(ControlStructure,goto out;)"];
"1000201" [label="(Call,value = kmalloc(size, GFP_KERNEL))"];
"1000198" [label="(Call,acl->a_count)"];
"1000243" [label="(Identifier,value)"];
"1000220" [label="(ControlStructure,if (error < 0))"];
"1000245" [label="(Call,!error)"];
"1000103" [label="(MethodParameterIn,struct posix_acl *acl)"];
"1000242" [label="(Call,kfree(value))"];
"1000197" [label="(Call,posix_acl_xattr_size(acl->a_count))"];
"1000213" [label="(Identifier,error)"];
"1000244" [label="(ControlStructure,if (!error))"];
"1000233" [label="(Call,error = orangefs_inode_setxattr(inode, name, value, size, 0))"];
"1000238" [label="(Identifier,value)"];
"1000201" -> "1000194"  [label="AST: "];
"1000201" -> "1000203"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000203" -> "1000201"  [label="AST: "];
"1000208" -> "1000201"  [label="CFG: "];
"1000201" -> "1000253"  [label="DDG: "];
"1000203" -> "1000201"  [label="DDG: "];
"1000203" -> "1000201"  [label="DDG: "];
"1000201" -> "1000207"  [label="DDG: "];
"1000203" -> "1000205"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000203"  [label="AST: "];
"1000203" -> "1000253"  [label="DDG: "];
"1000203" -> "1000253"  [label="DDG: "];
"1000195" -> "1000203"  [label="DDG: "];
"1000203" -> "1000214"  [label="DDG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000195" -> "1000197"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000197" -> "1000195"  [label="AST: "];
"1000202" -> "1000195"  [label="CFG: "];
"1000195" -> "1000253"  [label="DDG: "];
"1000197" -> "1000195"  [label="DDG: "];
"1000197" -> "1000198"  [label="CFG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000197" -> "1000253"  [label="DDG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000207" -> "1000208"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000211" -> "1000207"  [label="CFG: "];
"1000213" -> "1000207"  [label="CFG: "];
"1000207" -> "1000253"  [label="DDG: "];
"1000207" -> "1000253"  [label="DDG: "];
"1000207" -> "1000214"  [label="DDG: "];
"1000214" -> "1000212"  [label="AST: "];
"1000214" -> "1000219"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000217" -> "1000214"  [label="AST: "];
"1000218" -> "1000214"  [label="AST: "];
"1000219" -> "1000214"  [label="AST: "];
"1000212" -> "1000214"  [label="CFG: "];
"1000214" -> "1000253"  [label="DDG: "];
"1000214" -> "1000253"  [label="DDG: "];
"1000214" -> "1000253"  [label="DDG: "];
"1000214" -> "1000212"  [label="DDG: "];
"1000214" -> "1000212"  [label="DDG: "];
"1000214" -> "1000212"  [label="DDG: "];
"1000214" -> "1000212"  [label="DDG: "];
"1000103" -> "1000214"  [label="DDG: "];
"1000214" -> "1000225"  [label="DDG: "];
"1000214" -> "1000225"  [label="DDG: "];
"1000214" -> "1000225"  [label="DDG: "];
"1000214" -> "1000242"  [label="DDG: "];
"1000214" -> "1000247"  [label="DDG: "];
"1000212" -> "1000194"  [label="AST: "];
"1000213" -> "1000212"  [label="AST: "];
"1000222" -> "1000212"  [label="CFG: "];
"1000212" -> "1000253"  [label="DDG: "];
"1000212" -> "1000221"  [label="DDG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000224" -> "1000221"  [label="CFG: "];
"1000226" -> "1000221"  [label="CFG: "];
"1000221" -> "1000253"  [label="DDG: "];
"1000221" -> "1000245"  [label="DDG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000245" -> "1000246"  [label="CFG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000248" -> "1000245"  [label="CFG: "];
"1000252" -> "1000245"  [label="CFG: "];
"1000245" -> "1000253"  [label="DDG: "];
"1000245" -> "1000253"  [label="DDG: "];
"1000233" -> "1000245"  [label="DDG: "];
"1000245" -> "1000251"  [label="DDG: "];
"1000251" -> "1000105"  [label="AST: "];
"1000251" -> "1000252"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="CFG: "];
"1000251" -> "1000253"  [label="DDG: "];
"1000252" -> "1000251"  [label="DDG: "];
"1000225" -> "1000105"  [label="AST: "];
"1000225" -> "1000232"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000227" -> "1000225"  [label="AST: "];
"1000228" -> "1000225"  [label="AST: "];
"1000229" -> "1000225"  [label="AST: "];
"1000230" -> "1000225"  [label="AST: "];
"1000231" -> "1000225"  [label="AST: "];
"1000232" -> "1000225"  [label="AST: "];
"1000234" -> "1000225"  [label="CFG: "];
"1000225" -> "1000253"  [label="DDG: "];
"1000225" -> "1000253"  [label="DDG: "];
"1000225" -> "1000253"  [label="DDG: "];
"1000225" -> "1000253"  [label="DDG: "];
"1000184" -> "1000225"  [label="DDG: "];
"1000184" -> "1000225"  [label="DDG: "];
"1000184" -> "1000225"  [label="DDG: "];
"1000116" -> "1000225"  [label="DDG: "];
"1000120" -> "1000225"  [label="DDG: "];
"1000103" -> "1000225"  [label="DDG: "];
"1000225" -> "1000235"  [label="DDG: "];
"1000225" -> "1000235"  [label="DDG: "];
"1000225" -> "1000235"  [label="DDG: "];
"1000225" -> "1000247"  [label="DDG: "];
"1000235" -> "1000233"  [label="AST: "];
"1000235" -> "1000240"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="AST: "];
"1000238" -> "1000235"  [label="AST: "];
"1000239" -> "1000235"  [label="AST: "];
"1000240" -> "1000235"  [label="AST: "];
"1000233" -> "1000235"  [label="CFG: "];
"1000235" -> "1000253"  [label="DDG: "];
"1000235" -> "1000253"  [label="DDG: "];
"1000235" -> "1000253"  [label="DDG: "];
"1000235" -> "1000233"  [label="DDG: "];
"1000235" -> "1000233"  [label="DDG: "];
"1000235" -> "1000233"  [label="DDG: "];
"1000235" -> "1000233"  [label="DDG: "];
"1000235" -> "1000233"  [label="DDG: "];
"1000188" -> "1000235"  [label="DDG: "];
"1000102" -> "1000235"  [label="DDG: "];
"1000235" -> "1000242"  [label="DDG: "];
"1000235" -> "1000247"  [label="DDG: "];
"1000233" -> "1000105"  [label="AST: "];
"1000234" -> "1000233"  [label="AST: "];
"1000241" -> "1000233"  [label="CFG: "];
"1000233" -> "1000253"  [label="DDG: "];
"1000242" -> "1000105"  [label="AST: "];
"1000242" -> "1000243"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000246" -> "1000242"  [label="CFG: "];
"1000242" -> "1000253"  [label="DDG: "];
"1000242" -> "1000253"  [label="DDG: "];
"1000247" -> "1000244"  [label="AST: "];
"1000247" -> "1000250"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000249" -> "1000247"  [label="AST: "];
"1000250" -> "1000247"  [label="AST: "];
"1000252" -> "1000247"  [label="CFG: "];
"1000247" -> "1000253"  [label="DDG: "];
"1000247" -> "1000253"  [label="DDG: "];
"1000247" -> "1000253"  [label="DDG: "];
"1000247" -> "1000253"  [label="DDG: "];
"1000188" -> "1000247"  [label="DDG: "];
"1000102" -> "1000247"  [label="DDG: "];
"1000184" -> "1000247"  [label="DDG: "];
"1000104" -> "1000247"  [label="DDG: "];
"1000103" -> "1000247"  [label="DDG: "];
}
