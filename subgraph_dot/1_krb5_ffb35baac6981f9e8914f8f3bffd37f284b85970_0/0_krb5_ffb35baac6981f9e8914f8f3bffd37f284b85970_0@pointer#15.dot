digraph "0_krb5_ffb35baac6981f9e8914f8f3bffd37f284b85970_0@pointer" {
"1001162" [label="(Call,isflagset(header_enc_tkt->flags, TKT_FLG_ANONYMOUS))"];
"1001027" [label="(Call,COPY_TKT_FLAGS(header_enc_tkt->flags))"];
"1001101" [label="(Call,isflagset(header_enc_tkt->flags, TKT_FLG_FORWARDABLE))"];
"1001161" [label="(Call,!isflagset(header_enc_tkt->flags, TKT_FLG_ANONYMOUS))"];
"1001155" [label="(Call,isflagset(request->kdc_options, KDC_OPT_REQUEST_ANONYMOUS) &&\n        !isflagset(header_enc_tkt->flags, TKT_FLG_ANONYMOUS))"];
"1001167" [label="(Call,clear(enc_tkt_reply.flags, TKT_FLG_ANONYMOUS))"];
"1001179" [label="(Call,setflag(enc_tkt_reply.flags, TKT_FLG_INVALID))"];
"1001229" [label="(Call,clear(enc_tkt_reply.flags, TKT_FLG_INVALID))"];
"1001704" [label="(Call,setflag (enc_tkt_reply.flags, TKT_FLG_TRANSIT_POLICY_CHECKED))"];
"1001733" [label="(Call,isflagset(enc_tkt_reply.flags, TKT_FLG_TRANSIT_POLICY_CHECKED))"];
"1001732" [label="(Call,!isflagset(enc_tkt_reply.flags, TKT_FLG_TRANSIT_POLICY_CHECKED))"];
"1001728" [label="(Call,kdc_active_realm->realm_reject_bad_transit &&\n        !isflagset(enc_tkt_reply.flags, TKT_FLG_TRANSIT_POLICY_CHECKED))"];
"1002052" [label="(Call,reply_encpart.flags = enc_tkt_reply.flags)"];
"1001105" [label="(Identifier,TKT_FLG_FORWARDABLE)"];
"1001100" [label="(Call,!isflagset(header_enc_tkt->flags, TKT_FLG_FORWARDABLE))"];
"1001156" [label="(Call,isflagset(request->kdc_options, KDC_OPT_REQUEST_ANONYMOUS))"];
"1002497" [label="(MethodReturn,RET)"];
"1001166" [label="(Identifier,TKT_FLG_ANONYMOUS)"];
"1001187" [label="(Identifier,enc_tkt_reply)"];
"1001122" [label="(Call,clear(enc_tkt_reply.flags, TKT_FLG_FORWARDABLE))"];
"1001752" [label="(Identifier,errcode)"];
"1001175" [label="(Identifier,request)"];
"1001705" [label="(Call,enc_tkt_reply.flags)"];
"1001155" [label="(Call,isflagset(request->kdc_options, KDC_OPT_REQUEST_ANONYMOUS) &&\n        !isflagset(header_enc_tkt->flags, TKT_FLG_ANONYMOUS))"];
"1001101" [label="(Call,isflagset(header_enc_tkt->flags, TKT_FLG_FORWARDABLE))"];
"1001179" [label="(Call,setflag(enc_tkt_reply.flags, TKT_FLG_INVALID))"];
"1001708" [label="(Identifier,TKT_FLG_TRANSIT_POLICY_CHECKED)"];
"1001027" [label="(Call,COPY_TKT_FLAGS(header_enc_tkt->flags))"];
"1001106" [label="(Call,clear(enc_tkt_reply.flags, TKT_FLG_FORWARDABLE))"];
"1001183" [label="(Identifier,TKT_FLG_INVALID)"];
"1001730" [label="(Identifier,kdc_active_realm)"];
"1001727" [label="(ControlStructure,if (kdc_active_realm->realm_reject_bad_transit &&\n        !isflagset(enc_tkt_reply.flags, TKT_FLG_TRANSIT_POLICY_CHECKED)))"];
"1001028" [label="(Call,header_enc_tkt->flags)"];
"1002061" [label="(Identifier,reply_encpart)"];
"1001207" [label="(Block,)"];
"1002052" [label="(Call,reply_encpart.flags = enc_tkt_reply.flags)"];
"1001230" [label="(Call,enc_tkt_reply.flags)"];
"1001734" [label="(Call,enc_tkt_reply.flags)"];
"1001703" [label="(Block,)"];
"1001180" [label="(Call,enc_tkt_reply.flags)"];
"1001233" [label="(Identifier,TKT_FLG_INVALID)"];
"1000171" [label="(Block,)"];
"1001154" [label="(ControlStructure,if (isflagset(request->kdc_options, KDC_OPT_REQUEST_ANONYMOUS) &&\n        !isflagset(header_enc_tkt->flags, TKT_FLG_ANONYMOUS)))"];
"1001171" [label="(Identifier,TKT_FLG_ANONYMOUS)"];
"1001237" [label="(Identifier,request)"];
"1001167" [label="(Call,clear(enc_tkt_reply.flags, TKT_FLG_ANONYMOUS))"];
"1001163" [label="(Call,header_enc_tkt->flags)"];
"1001161" [label="(Call,!isflagset(header_enc_tkt->flags, TKT_FLG_ANONYMOUS))"];
"1001733" [label="(Call,isflagset(enc_tkt_reply.flags, TKT_FLG_TRANSIT_POLICY_CHECKED))"];
"1001169" [label="(Identifier,enc_tkt_reply)"];
"1001168" [label="(Call,enc_tkt_reply.flags)"];
"1001704" [label="(Call,setflag (enc_tkt_reply.flags, TKT_FLG_TRANSIT_POLICY_CHECKED))"];
"1001253" [label="(Call,enc_tkt_reply = *(header_ticket->enc_part2))"];
"1001732" [label="(Call,!isflagset(enc_tkt_reply.flags, TKT_FLG_TRANSIT_POLICY_CHECKED))"];
"1001740" [label="(Identifier,errcode)"];
"1002053" [label="(Call,reply_encpart.flags)"];
"1001162" [label="(Call,isflagset(header_enc_tkt->flags, TKT_FLG_ANONYMOUS))"];
"1001737" [label="(Identifier,TKT_FLG_TRANSIT_POLICY_CHECKED)"];
"1001023" [label="(Call,enc_tkt_reply.flags |= COPY_TKT_FLAGS(header_enc_tkt->flags))"];
"1001229" [label="(Call,clear(enc_tkt_reply.flags, TKT_FLG_INVALID))"];
"1001218" [label="(Call,enc_tkt_reply = *(header_ticket->enc_part2))"];
"1001729" [label="(Call,kdc_active_realm->realm_reject_bad_transit)"];
"1001728" [label="(Call,kdc_active_realm->realm_reject_bad_transit &&\n        !isflagset(enc_tkt_reply.flags, TKT_FLG_TRANSIT_POLICY_CHECKED))"];
"1002056" [label="(Call,enc_tkt_reply.flags)"];
"1001049" [label="(Call,setflag(enc_tkt_reply.flags, TKT_FLG_ENC_PA_REP))"];
"1001093" [label="(Call,clear(enc_tkt_reply.flags, TKT_FLG_FORWARDABLE))"];
"1001178" [label="(Block,)"];
"1001102" [label="(Call,header_enc_tkt->flags)"];
"1001162" -> "1001161"  [label="AST: "];
"1001162" -> "1001166"  [label="CFG: "];
"1001163" -> "1001162"  [label="AST: "];
"1001166" -> "1001162"  [label="AST: "];
"1001161" -> "1001162"  [label="CFG: "];
"1001162" -> "1002497"  [label="DDG: header_enc_tkt->flags"];
"1001162" -> "1002497"  [label="DDG: TKT_FLG_ANONYMOUS"];
"1001162" -> "1001161"  [label="DDG: header_enc_tkt->flags"];
"1001162" -> "1001161"  [label="DDG: TKT_FLG_ANONYMOUS"];
"1001027" -> "1001162"  [label="DDG: header_enc_tkt->flags"];
"1001101" -> "1001162"  [label="DDG: header_enc_tkt->flags"];
"1001162" -> "1001167"  [label="DDG: TKT_FLG_ANONYMOUS"];
"1001027" -> "1001023"  [label="AST: "];
"1001027" -> "1001028"  [label="CFG: "];
"1001028" -> "1001027"  [label="AST: "];
"1001023" -> "1001027"  [label="CFG: "];
"1001027" -> "1002497"  [label="DDG: header_enc_tkt->flags"];
"1001027" -> "1001023"  [label="DDG: header_enc_tkt->flags"];
"1001027" -> "1001101"  [label="DDG: header_enc_tkt->flags"];
"1001101" -> "1001100"  [label="AST: "];
"1001101" -> "1001105"  [label="CFG: "];
"1001102" -> "1001101"  [label="AST: "];
"1001105" -> "1001101"  [label="AST: "];
"1001100" -> "1001101"  [label="CFG: "];
"1001101" -> "1002497"  [label="DDG: TKT_FLG_FORWARDABLE"];
"1001101" -> "1002497"  [label="DDG: header_enc_tkt->flags"];
"1001101" -> "1001100"  [label="DDG: header_enc_tkt->flags"];
"1001101" -> "1001100"  [label="DDG: TKT_FLG_FORWARDABLE"];
"1001101" -> "1001106"  [label="DDG: TKT_FLG_FORWARDABLE"];
"1001101" -> "1001122"  [label="DDG: TKT_FLG_FORWARDABLE"];
"1001161" -> "1001155"  [label="AST: "];
"1001155" -> "1001161"  [label="CFG: "];
"1001161" -> "1002497"  [label="DDG: isflagset(header_enc_tkt->flags, TKT_FLG_ANONYMOUS)"];
"1001161" -> "1001155"  [label="DDG: isflagset(header_enc_tkt->flags, TKT_FLG_ANONYMOUS)"];
"1001155" -> "1001154"  [label="AST: "];
"1001155" -> "1001156"  [label="CFG: "];
"1001156" -> "1001155"  [label="AST: "];
"1001169" -> "1001155"  [label="CFG: "];
"1001175" -> "1001155"  [label="CFG: "];
"1001155" -> "1002497"  [label="DDG: isflagset(request->kdc_options, KDC_OPT_REQUEST_ANONYMOUS) &&\n        !isflagset(header_enc_tkt->flags, TKT_FLG_ANONYMOUS)"];
"1001155" -> "1002497"  [label="DDG: isflagset(request->kdc_options, KDC_OPT_REQUEST_ANONYMOUS)"];
"1001155" -> "1002497"  [label="DDG: !isflagset(header_enc_tkt->flags, TKT_FLG_ANONYMOUS)"];
"1001156" -> "1001155"  [label="DDG: request->kdc_options"];
"1001156" -> "1001155"  [label="DDG: KDC_OPT_REQUEST_ANONYMOUS"];
"1001167" -> "1001154"  [label="AST: "];
"1001167" -> "1001171"  [label="CFG: "];
"1001168" -> "1001167"  [label="AST: "];
"1001171" -> "1001167"  [label="AST: "];
"1001175" -> "1001167"  [label="CFG: "];
"1001167" -> "1002497"  [label="DDG: clear(enc_tkt_reply.flags, TKT_FLG_ANONYMOUS)"];
"1001167" -> "1002497"  [label="DDG: enc_tkt_reply.flags"];
"1001167" -> "1002497"  [label="DDG: TKT_FLG_ANONYMOUS"];
"1001122" -> "1001167"  [label="DDG: enc_tkt_reply.flags"];
"1001049" -> "1001167"  [label="DDG: enc_tkt_reply.flags"];
"1001106" -> "1001167"  [label="DDG: enc_tkt_reply.flags"];
"1001093" -> "1001167"  [label="DDG: enc_tkt_reply.flags"];
"1001167" -> "1001179"  [label="DDG: enc_tkt_reply.flags"];
"1001167" -> "1001229"  [label="DDG: enc_tkt_reply.flags"];
"1001167" -> "1001704"  [label="DDG: enc_tkt_reply.flags"];
"1001167" -> "1001733"  [label="DDG: enc_tkt_reply.flags"];
"1001167" -> "1002052"  [label="DDG: enc_tkt_reply.flags"];
"1001179" -> "1001178"  [label="AST: "];
"1001179" -> "1001183"  [label="CFG: "];
"1001180" -> "1001179"  [label="AST: "];
"1001183" -> "1001179"  [label="AST: "];
"1001187" -> "1001179"  [label="CFG: "];
"1001179" -> "1002497"  [label="DDG: setflag(enc_tkt_reply.flags, TKT_FLG_INVALID)"];
"1001179" -> "1002497"  [label="DDG: enc_tkt_reply.flags"];
"1001179" -> "1002497"  [label="DDG: TKT_FLG_INVALID"];
"1001122" -> "1001179"  [label="DDG: enc_tkt_reply.flags"];
"1001049" -> "1001179"  [label="DDG: enc_tkt_reply.flags"];
"1001106" -> "1001179"  [label="DDG: enc_tkt_reply.flags"];
"1001093" -> "1001179"  [label="DDG: enc_tkt_reply.flags"];
"1001179" -> "1001229"  [label="DDG: enc_tkt_reply.flags"];
"1001179" -> "1001229"  [label="DDG: TKT_FLG_INVALID"];
"1001179" -> "1001704"  [label="DDG: enc_tkt_reply.flags"];
"1001179" -> "1001733"  [label="DDG: enc_tkt_reply.flags"];
"1001179" -> "1002052"  [label="DDG: enc_tkt_reply.flags"];
"1001229" -> "1001207"  [label="AST: "];
"1001229" -> "1001233"  [label="CFG: "];
"1001230" -> "1001229"  [label="AST: "];
"1001233" -> "1001229"  [label="AST: "];
"1001237" -> "1001229"  [label="CFG: "];
"1001229" -> "1002497"  [label="DDG: clear(enc_tkt_reply.flags, TKT_FLG_INVALID)"];
"1001229" -> "1002497"  [label="DDG: TKT_FLG_INVALID"];
"1001229" -> "1002497"  [label="DDG: enc_tkt_reply.flags"];
"1001122" -> "1001229"  [label="DDG: enc_tkt_reply.flags"];
"1001049" -> "1001229"  [label="DDG: enc_tkt_reply.flags"];
"1001218" -> "1001229"  [label="DDG: enc_tkt_reply"];
"1001106" -> "1001229"  [label="DDG: enc_tkt_reply.flags"];
"1001093" -> "1001229"  [label="DDG: enc_tkt_reply.flags"];
"1001229" -> "1001704"  [label="DDG: enc_tkt_reply.flags"];
"1001229" -> "1001733"  [label="DDG: enc_tkt_reply.flags"];
"1001229" -> "1002052"  [label="DDG: enc_tkt_reply.flags"];
"1001704" -> "1001703"  [label="AST: "];
"1001704" -> "1001708"  [label="CFG: "];
"1001705" -> "1001704"  [label="AST: "];
"1001708" -> "1001704"  [label="AST: "];
"1001730" -> "1001704"  [label="CFG: "];
"1001704" -> "1002497"  [label="DDG: enc_tkt_reply.flags"];
"1001704" -> "1002497"  [label="DDG: TKT_FLG_TRANSIT_POLICY_CHECKED"];
"1001704" -> "1002497"  [label="DDG: setflag (enc_tkt_reply.flags, TKT_FLG_TRANSIT_POLICY_CHECKED)"];
"1001122" -> "1001704"  [label="DDG: enc_tkt_reply.flags"];
"1001253" -> "1001704"  [label="DDG: enc_tkt_reply"];
"1001218" -> "1001704"  [label="DDG: enc_tkt_reply"];
"1001049" -> "1001704"  [label="DDG: enc_tkt_reply.flags"];
"1001106" -> "1001704"  [label="DDG: enc_tkt_reply.flags"];
"1001093" -> "1001704"  [label="DDG: enc_tkt_reply.flags"];
"1001704" -> "1001733"  [label="DDG: enc_tkt_reply.flags"];
"1001704" -> "1001733"  [label="DDG: TKT_FLG_TRANSIT_POLICY_CHECKED"];
"1001704" -> "1002052"  [label="DDG: enc_tkt_reply.flags"];
"1001733" -> "1001732"  [label="AST: "];
"1001733" -> "1001737"  [label="CFG: "];
"1001734" -> "1001733"  [label="AST: "];
"1001737" -> "1001733"  [label="AST: "];
"1001732" -> "1001733"  [label="CFG: "];
"1001733" -> "1002497"  [label="DDG: enc_tkt_reply.flags"];
"1001733" -> "1002497"  [label="DDG: TKT_FLG_TRANSIT_POLICY_CHECKED"];
"1001733" -> "1001732"  [label="DDG: enc_tkt_reply.flags"];
"1001733" -> "1001732"  [label="DDG: TKT_FLG_TRANSIT_POLICY_CHECKED"];
"1001122" -> "1001733"  [label="DDG: enc_tkt_reply.flags"];
"1001253" -> "1001733"  [label="DDG: enc_tkt_reply"];
"1001218" -> "1001733"  [label="DDG: enc_tkt_reply"];
"1001049" -> "1001733"  [label="DDG: enc_tkt_reply.flags"];
"1001106" -> "1001733"  [label="DDG: enc_tkt_reply.flags"];
"1001093" -> "1001733"  [label="DDG: enc_tkt_reply.flags"];
"1001733" -> "1002052"  [label="DDG: enc_tkt_reply.flags"];
"1001732" -> "1001728"  [label="AST: "];
"1001728" -> "1001732"  [label="CFG: "];
"1001732" -> "1002497"  [label="DDG: isflagset(enc_tkt_reply.flags, TKT_FLG_TRANSIT_POLICY_CHECKED)"];
"1001732" -> "1001728"  [label="DDG: isflagset(enc_tkt_reply.flags, TKT_FLG_TRANSIT_POLICY_CHECKED)"];
"1001728" -> "1001727"  [label="AST: "];
"1001728" -> "1001729"  [label="CFG: "];
"1001729" -> "1001728"  [label="AST: "];
"1001740" -> "1001728"  [label="CFG: "];
"1001752" -> "1001728"  [label="CFG: "];
"1001728" -> "1002497"  [label="DDG: !isflagset(enc_tkt_reply.flags, TKT_FLG_TRANSIT_POLICY_CHECKED)"];
"1001728" -> "1002497"  [label="DDG: kdc_active_realm->realm_reject_bad_transit"];
"1001728" -> "1002497"  [label="DDG: kdc_active_realm->realm_reject_bad_transit &&\n        !isflagset(enc_tkt_reply.flags, TKT_FLG_TRANSIT_POLICY_CHECKED)"];
"1002052" -> "1000171"  [label="AST: "];
"1002052" -> "1002056"  [label="CFG: "];
"1002053" -> "1002052"  [label="AST: "];
"1002056" -> "1002052"  [label="AST: "];
"1002061" -> "1002052"  [label="CFG: "];
"1002052" -> "1002497"  [label="DDG: enc_tkt_reply.flags"];
"1002052" -> "1002497"  [label="DDG: reply_encpart.flags"];
"1001122" -> "1002052"  [label="DDG: enc_tkt_reply.flags"];
"1001253" -> "1002052"  [label="DDG: enc_tkt_reply"];
"1001218" -> "1002052"  [label="DDG: enc_tkt_reply"];
"1001049" -> "1002052"  [label="DDG: enc_tkt_reply.flags"];
"1001106" -> "1002052"  [label="DDG: enc_tkt_reply.flags"];
"1001093" -> "1002052"  [label="DDG: enc_tkt_reply.flags"];
}
