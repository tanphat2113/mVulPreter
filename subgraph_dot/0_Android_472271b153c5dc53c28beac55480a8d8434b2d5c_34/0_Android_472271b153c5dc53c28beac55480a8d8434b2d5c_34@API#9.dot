digraph "0_Android_472271b153c5dc53c28beac55480a8d8434b2d5c_34@API" {
"1000197" [label="(Call,!flush_incoming_que_on_wr_signal(slot))"];
"1000198" [label="(Call,flush_incoming_que_on_wr_signal(slot))"];
"1000114" [label="(Call,!slot)"];
"1000109" [label="(Call,*slot = find_rfc_slot_by_id(user_id))"];
"1000111" [label="(Call,find_rfc_slot_by_id(user_id))"];
"1000103" [label="(MethodParameterIn,uint32_t user_id)"];
"1000190" [label="(Call,!slot->f.connected || !flush_incoming_que_on_wr_signal(slot))"];
"1000240" [label="(Call,cleanup_rfc_slot(slot))"];
"1000246" [label="(MethodReturn,void)"];
"1000119" [label="(Identifier,need_close)"];
"1000198" [label="(Call,flush_incoming_que_on_wr_signal(slot))"];
"1000104" [label="(Block,)"];
"1000197" [label="(Call,!flush_incoming_que_on_wr_signal(slot))"];
"1000103" [label="(MethodParameterIn,uint32_t user_id)"];
"1000116" [label="(ControlStructure,goto out;)"];
"1000111" [label="(Call,find_rfc_slot_by_id(user_id))"];
"1000191" [label="(Call,!slot->f.connected)"];
"1000115" [label="(Identifier,slot)"];
"1000215" [label="(Identifier,need_close)"];
"1000199" [label="(Identifier,slot)"];
"1000189" [label="(ControlStructure,if (!slot->f.connected || !flush_incoming_que_on_wr_signal(slot)))"];
"1000109" [label="(Call,*slot = find_rfc_slot_by_id(user_id))"];
"1000110" [label="(Identifier,slot)"];
"1000190" [label="(Call,!slot->f.connected || !flush_incoming_que_on_wr_signal(slot))"];
"1000113" [label="(ControlStructure,if (!slot))"];
"1000112" [label="(Identifier,user_id)"];
"1000114" [label="(Call,!slot)"];
"1000202" [label="(Literal,\"%s socket signaled for write while disconnected (or write failure), slot: %d, channel: %d\")"];
"1000197" -> "1000190"  [label="AST: "];
"1000197" -> "1000198"  [label="CFG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000190" -> "1000197"  [label="CFG: "];
"1000197" -> "1000246"  [label="DDG: flush_incoming_que_on_wr_signal(slot)"];
"1000197" -> "1000190"  [label="DDG: flush_incoming_que_on_wr_signal(slot)"];
"1000198" -> "1000197"  [label="DDG: slot"];
"1000198" -> "1000199"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000198" -> "1000246"  [label="DDG: slot"];
"1000114" -> "1000198"  [label="DDG: slot"];
"1000198" -> "1000240"  [label="DDG: slot"];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000115"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="CFG: "];
"1000119" -> "1000114"  [label="CFG: "];
"1000114" -> "1000246"  [label="DDG: !slot"];
"1000114" -> "1000246"  [label="DDG: slot"];
"1000109" -> "1000114"  [label="DDG: slot"];
"1000114" -> "1000240"  [label="DDG: slot"];
"1000109" -> "1000104"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000115" -> "1000109"  [label="CFG: "];
"1000109" -> "1000246"  [label="DDG: find_rfc_slot_by_id(user_id)"];
"1000111" -> "1000109"  [label="DDG: user_id"];
"1000111" -> "1000112"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000111" -> "1000246"  [label="DDG: user_id"];
"1000103" -> "1000111"  [label="DDG: user_id"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000246"  [label="DDG: user_id"];
"1000190" -> "1000189"  [label="AST: "];
"1000190" -> "1000191"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000202" -> "1000190"  [label="CFG: "];
"1000215" -> "1000190"  [label="CFG: "];
"1000190" -> "1000246"  [label="DDG: !slot->f.connected || !flush_incoming_que_on_wr_signal(slot)"];
"1000190" -> "1000246"  [label="DDG: !slot->f.connected"];
"1000190" -> "1000246"  [label="DDG: !flush_incoming_que_on_wr_signal(slot)"];
"1000191" -> "1000190"  [label="DDG: slot->f.connected"];
}
