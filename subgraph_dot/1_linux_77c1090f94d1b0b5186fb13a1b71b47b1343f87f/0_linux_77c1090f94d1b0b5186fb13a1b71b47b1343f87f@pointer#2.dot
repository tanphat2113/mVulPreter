digraph "0_linux_77c1090f94d1b0b5186fb13a1b71b47b1343f87f@pointer" {
"1000122" [label="(Call,sock_rcvtimeo(sk, flags & MSG_DONTWAIT))"];
"1000115" [label="(Call,sock_error(sk))"];
"1000104" [label="(MethodParameterIn,struct sock *sk)"];
"1000124" [label="(Call,flags & MSG_DONTWAIT)"];
"1000105" [label="(MethodParameterIn,unsigned int flags)"];
"1000120" [label="(Call,timeo = sock_rcvtimeo(sk, flags & MSG_DONTWAIT))"];
"1000207" [label="(Call,wait_for_packet(sk, err, &timeo))"];
"1000206" [label="(Call,!wait_for_packet(sk, err, &timeo))"];
"1000213" [label="(Identifier,NULL)"];
"1000113" [label="(Call,error = sock_error(sk))"];
"1000207" [label="(Call,wait_for_packet(sk, err, &timeo))"];
"1000208" [label="(Identifier,sk)"];
"1000105" [label="(MethodParameterIn,unsigned int flags)"];
"1000120" [label="(Call,timeo = sock_rcvtimeo(sk, flags & MSG_DONTWAIT))"];
"1000125" [label="(Identifier,flags)"];
"1000132" [label="(Identifier,queue)"];
"1000210" [label="(Call,&timeo)"];
"1000122" [label="(Call,sock_rcvtimeo(sk, flags & MSG_DONTWAIT))"];
"1000115" [label="(Call,sock_error(sk))"];
"1000104" [label="(MethodParameterIn,struct sock *sk)"];
"1000206" [label="(Call,!wait_for_packet(sk, err, &timeo))"];
"1000126" [label="(Identifier,MSG_DONTWAIT)"];
"1000124" [label="(Call,flags & MSG_DONTWAIT)"];
"1000123" [label="(Identifier,sk)"];
"1000209" [label="(Identifier,err)"];
"1000116" [label="(Identifier,sk)"];
"1000109" [label="(Block,)"];
"1000127" [label="(ControlStructure,do)"];
"1000121" [label="(Identifier,timeo)"];
"1000108" [label="(MethodParameterIn,int *err)"];
"1000221" [label="(MethodReturn,struct sk_buff *)"];
"1000151" [label="(Call,flags & MSG_PEEK)"];
"1000122" -> "1000120"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000122" -> "1000221"  [label="DDG: sk"];
"1000122" -> "1000221"  [label="DDG: flags & MSG_DONTWAIT"];
"1000122" -> "1000120"  [label="DDG: sk"];
"1000122" -> "1000120"  [label="DDG: flags & MSG_DONTWAIT"];
"1000115" -> "1000122"  [label="DDG: sk"];
"1000104" -> "1000122"  [label="DDG: sk"];
"1000124" -> "1000122"  [label="DDG: flags"];
"1000124" -> "1000122"  [label="DDG: MSG_DONTWAIT"];
"1000122" -> "1000207"  [label="DDG: sk"];
"1000115" -> "1000113"  [label="AST: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000115" -> "1000221"  [label="DDG: sk"];
"1000115" -> "1000113"  [label="DDG: sk"];
"1000104" -> "1000115"  [label="DDG: sk"];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000221"  [label="DDG: sk"];
"1000104" -> "1000207"  [label="DDG: sk"];
"1000124" -> "1000126"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000124" -> "1000221"  [label="DDG: MSG_DONTWAIT"];
"1000105" -> "1000124"  [label="DDG: flags"];
"1000124" -> "1000151"  [label="DDG: flags"];
"1000105" -> "1000103"  [label="AST: "];
"1000105" -> "1000221"  [label="DDG: flags"];
"1000105" -> "1000151"  [label="DDG: flags"];
"1000120" -> "1000109"  [label="AST: "];
"1000121" -> "1000120"  [label="AST: "];
"1000132" -> "1000120"  [label="CFG: "];
"1000120" -> "1000221"  [label="DDG: timeo"];
"1000120" -> "1000221"  [label="DDG: sock_rcvtimeo(sk, flags & MSG_DONTWAIT)"];
"1000207" -> "1000206"  [label="AST: "];
"1000207" -> "1000210"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000209" -> "1000207"  [label="AST: "];
"1000210" -> "1000207"  [label="AST: "];
"1000206" -> "1000207"  [label="CFG: "];
"1000207" -> "1000221"  [label="DDG: err"];
"1000207" -> "1000221"  [label="DDG: &timeo"];
"1000207" -> "1000221"  [label="DDG: sk"];
"1000207" -> "1000206"  [label="DDG: sk"];
"1000207" -> "1000206"  [label="DDG: err"];
"1000207" -> "1000206"  [label="DDG: &timeo"];
"1000108" -> "1000207"  [label="DDG: err"];
"1000206" -> "1000127"  [label="AST: "];
"1000132" -> "1000206"  [label="CFG: "];
"1000213" -> "1000206"  [label="CFG: "];
"1000206" -> "1000221"  [label="DDG: !wait_for_packet(sk, err, &timeo)"];
"1000206" -> "1000221"  [label="DDG: wait_for_packet(sk, err, &timeo)"];
}
