digraph "1_linux_6062a8dc0517bce23e3c2f7d2fea5e22411269a3@API" {
"1000291" [label="(Call,pipelined_send(msq, msg))"];
"1000199" [label="(Call,security_msg_queue_msgsnd(msq, msg, msgflg))"];
"1000252" [label="(Call,ipc_rcu_putref(msq))"];
"1000244" [label="(Call,msg_unlock(msq))"];
"1000242" [label="(Call,ipc_rcu_getref(msq))"];
"1000238" [label="(Call,ss_add(msq, &s))"];
"1000266" [label="(Call,ss_del(&s))"];
"1000173" [label="(Call,IS_ERR(msq))"];
"1000167" [label="(Call,msq = msg_lock_check(ns, msqid))"];
"1000169" [label="(Call,msg_lock_check(ns, msqid))"];
"1000113" [label="(Call,ns = current->nsproxy->ipc_ns)"];
"1000133" [label="(Call,msqid < 0)"];
"1000103" [label="(MethodParameterIn,int msqid)"];
"1000152" [label="(Call,IS_ERR(msg))"];
"1000146" [label="(Call,msg = load_msg(mtext, msgsz))"];
"1000148" [label="(Call,load_msg(mtext, msgsz))"];
"1000105" [label="(MethodParameterIn,void __user *mtext)"];
"1000122" [label="(Call,msgsz > ns->msg_ctlmax)"];
"1000106" [label="(MethodParameterIn,size_t msgsz)"];
"1000129" [label="(Call,(long) msgsz)"];
"1000229" [label="(Call,msgflg & IPC_NOWAIT)"];
"1000107" [label="(MethodParameterIn,int msgflg)"];
"1000290" [label="(Call,!pipelined_send(msq, msg))"];
"1000331" [label="(Call,msg_unlock(msq))"];
"1000172" [label="(ControlStructure,if (IS_ERR(msq)))"];
"1000178" [label="(Call,PTR_ERR(msq))"];
"1000113" [label="(Call,ns = current->nsproxy->ipc_ns)"];
"1000132" [label="(Literal,0)"];
"1000234" [label="(Identifier,err)"];
"1000103" [label="(MethodParameterIn,int msqid)"];
"1000105" [label="(MethodParameterIn,void __user *mtext)"];
"1000162" [label="(Call,msg->m_ts = msgsz)"];
"1000242" [label="(Call,ipc_rcu_getref(msq))"];
"1000271" [label="(Identifier,current)"];
"1000122" [label="(Call,msgsz > ns->msg_ctlmax)"];
"1000131" [label="(Identifier,msgsz)"];
"1000150" [label="(Identifier,msgsz)"];
"1000253" [label="(Identifier,msq)"];
"1000182" [label="(Block,)"];
"1000152" [label="(Call,IS_ERR(msg))"];
"1000246" [label="(Call,schedule())"];
"1000243" [label="(Identifier,msq)"];
"1000240" [label="(Call,&s)"];
"1000331" [label="(Call,msg_unlock(msq))"];
"1000289" [label="(ControlStructure,if (!pipelined_send(msq, msg)))"];
"1000121" [label="(Call,msgsz > ns->msg_ctlmax || (long) msgsz < 0 || msqid < 0)"];
"1000342" [label="(MethodReturn,long)"];
"1000151" [label="(ControlStructure,if (IS_ERR(msg)))"];
"1000313" [label="(Call,atomic_add(msgsz, &ns->msg_bytes))"];
"1000148" [label="(Call,load_msg(mtext, msgsz))"];
"1000107" [label="(MethodParameterIn,int msgflg)"];
"1000147" [label="(Identifier,msg)"];
"1000239" [label="(Identifier,msq)"];
"1000177" [label="(Identifier,err)"];
"1000106" [label="(MethodParameterIn,size_t msgsz)"];
"1000146" [label="(Call,msg = load_msg(mtext, msgsz))"];
"1000168" [label="(Identifier,msq)"];
"1000115" [label="(Call,current->nsproxy->ipc_ns)"];
"1000304" [label="(Call,msq->q_cbytes += msgsz)"];
"1000156" [label="(Identifier,msg)"];
"1000133" [label="(Call,msqid < 0)"];
"1000149" [label="(Identifier,mtext)"];
"1000267" [label="(Call,&s)"];
"1000155" [label="(Call,PTR_ERR(msg))"];
"1000108" [label="(Block,)"];
"1000332" [label="(Identifier,msq)"];
"1000333" [label="(JumpTarget,out_free:)"];
"1000153" [label="(Identifier,msg)"];
"1000228" [label="(ControlStructure,if (msgflg & IPC_NOWAIT))"];
"1000230" [label="(Identifier,msgflg)"];
"1000124" [label="(Call,ns->msg_ctlmax)"];
"1000292" [label="(Identifier,msq)"];
"1000335" [label="(Call,msg != NULL)"];
"1000245" [label="(Identifier,msq)"];
"1000171" [label="(Identifier,msqid)"];
"1000266" [label="(Call,ss_del(&s))"];
"1000325" [label="(Identifier,err)"];
"1000129" [label="(Call,(long) msgsz)"];
"1000238" [label="(Call,ss_add(msq, &s))"];
"1000135" [label="(Literal,0)"];
"1000200" [label="(Identifier,msq)"];
"1000209" [label="(Call,msgsz + msq->q_cbytes)"];
"1000197" [label="(Call,err = security_msg_queue_msgsnd(msq, msg, msgflg))"];
"1000244" [label="(Call,msg_unlock(msq))"];
"1000229" [label="(Call,msgflg & IPC_NOWAIT)"];
"1000170" [label="(Identifier,ns)"];
"1000293" [label="(Identifier,msg)"];
"1000128" [label="(Call,(long) msgsz < 0)"];
"1000208" [label="(Call,msgsz + msq->q_cbytes <= msq->q_qbytes)"];
"1000185" [label="(Identifier,err)"];
"1000290" [label="(Call,!pipelined_send(msq, msg))"];
"1000114" [label="(Identifier,ns)"];
"1000231" [label="(Identifier,IPC_NOWAIT)"];
"1000201" [label="(Identifier,msg)"];
"1000291" [label="(Call,pipelined_send(msq, msg))"];
"1000298" [label="(Identifier,msg)"];
"1000202" [label="(Identifier,msgflg)"];
"1000169" [label="(Call,msg_lock_check(ns, msqid))"];
"1000199" [label="(Call,security_msg_queue_msgsnd(msq, msg, msgflg))"];
"1000174" [label="(Identifier,msq)"];
"1000159" [label="(Identifier,msg)"];
"1000127" [label="(Call,(long) msgsz < 0 || msqid < 0)"];
"1000252" [label="(Call,ipc_rcu_putref(msq))"];
"1000123" [label="(Identifier,msgsz)"];
"1000257" [label="(Identifier,msq)"];
"1000189" [label="(Call,ipcperms(ns, &msq->q_perm, S_IWUGO))"];
"1000173" [label="(Call,IS_ERR(msq))"];
"1000167" [label="(Call,msq = msg_lock_check(ns, msqid))"];
"1000134" [label="(Identifier,msqid)"];
"1000291" -> "1000290"  [label="AST: "];
"1000291" -> "1000293"  [label="CFG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000293" -> "1000291"  [label="AST: "];
"1000290" -> "1000291"  [label="CFG: "];
"1000291" -> "1000290"  [label="DDG: msq"];
"1000291" -> "1000290"  [label="DDG: msg"];
"1000199" -> "1000291"  [label="DDG: msq"];
"1000199" -> "1000291"  [label="DDG: msg"];
"1000291" -> "1000331"  [label="DDG: msq"];
"1000199" -> "1000197"  [label="AST: "];
"1000199" -> "1000202"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000201" -> "1000199"  [label="AST: "];
"1000202" -> "1000199"  [label="AST: "];
"1000197" -> "1000199"  [label="CFG: "];
"1000199" -> "1000342"  [label="DDG: msgflg"];
"1000199" -> "1000197"  [label="DDG: msq"];
"1000199" -> "1000197"  [label="DDG: msg"];
"1000199" -> "1000197"  [label="DDG: msgflg"];
"1000252" -> "1000199"  [label="DDG: msq"];
"1000173" -> "1000199"  [label="DDG: msq"];
"1000152" -> "1000199"  [label="DDG: msg"];
"1000229" -> "1000199"  [label="DDG: msgflg"];
"1000107" -> "1000199"  [label="DDG: msgflg"];
"1000199" -> "1000229"  [label="DDG: msgflg"];
"1000199" -> "1000238"  [label="DDG: msq"];
"1000199" -> "1000331"  [label="DDG: msq"];
"1000199" -> "1000335"  [label="DDG: msg"];
"1000252" -> "1000182"  [label="AST: "];
"1000252" -> "1000253"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000257" -> "1000252"  [label="CFG: "];
"1000252" -> "1000342"  [label="DDG: ipc_rcu_putref(msq)"];
"1000244" -> "1000252"  [label="DDG: msq"];
"1000252" -> "1000331"  [label="DDG: msq"];
"1000244" -> "1000182"  [label="AST: "];
"1000244" -> "1000245"  [label="CFG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000246" -> "1000244"  [label="CFG: "];
"1000242" -> "1000244"  [label="DDG: msq"];
"1000242" -> "1000182"  [label="AST: "];
"1000242" -> "1000243"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000245" -> "1000242"  [label="CFG: "];
"1000242" -> "1000342"  [label="DDG: ipc_rcu_getref(msq)"];
"1000238" -> "1000242"  [label="DDG: msq"];
"1000238" -> "1000182"  [label="AST: "];
"1000238" -> "1000240"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="AST: "];
"1000243" -> "1000238"  [label="CFG: "];
"1000238" -> "1000342"  [label="DDG: &s"];
"1000238" -> "1000342"  [label="DDG: ss_add(msq, &s)"];
"1000266" -> "1000238"  [label="DDG: &s"];
"1000238" -> "1000266"  [label="DDG: &s"];
"1000266" -> "1000182"  [label="AST: "];
"1000266" -> "1000267"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000271" -> "1000266"  [label="CFG: "];
"1000266" -> "1000342"  [label="DDG: &s"];
"1000266" -> "1000342"  [label="DDG: ss_del(&s)"];
"1000173" -> "1000172"  [label="AST: "];
"1000173" -> "1000174"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000177" -> "1000173"  [label="CFG: "];
"1000185" -> "1000173"  [label="CFG: "];
"1000173" -> "1000342"  [label="DDG: IS_ERR(msq)"];
"1000167" -> "1000173"  [label="DDG: msq"];
"1000173" -> "1000178"  [label="DDG: msq"];
"1000173" -> "1000331"  [label="DDG: msq"];
"1000167" -> "1000108"  [label="AST: "];
"1000167" -> "1000169"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000169" -> "1000167"  [label="AST: "];
"1000174" -> "1000167"  [label="CFG: "];
"1000167" -> "1000342"  [label="DDG: msg_lock_check(ns, msqid)"];
"1000169" -> "1000167"  [label="DDG: ns"];
"1000169" -> "1000167"  [label="DDG: msqid"];
"1000169" -> "1000171"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000171" -> "1000169"  [label="AST: "];
"1000169" -> "1000342"  [label="DDG: msqid"];
"1000169" -> "1000342"  [label="DDG: ns"];
"1000113" -> "1000169"  [label="DDG: ns"];
"1000133" -> "1000169"  [label="DDG: msqid"];
"1000103" -> "1000169"  [label="DDG: msqid"];
"1000169" -> "1000189"  [label="DDG: ns"];
"1000113" -> "1000108"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000123" -> "1000113"  [label="CFG: "];
"1000113" -> "1000342"  [label="DDG: ns"];
"1000113" -> "1000342"  [label="DDG: current->nsproxy->ipc_ns"];
"1000133" -> "1000127"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000127" -> "1000133"  [label="CFG: "];
"1000133" -> "1000342"  [label="DDG: msqid"];
"1000133" -> "1000127"  [label="DDG: msqid"];
"1000133" -> "1000127"  [label="DDG: 0"];
"1000103" -> "1000133"  [label="DDG: msqid"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000342"  [label="DDG: msqid"];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000153"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000156" -> "1000152"  [label="CFG: "];
"1000159" -> "1000152"  [label="CFG: "];
"1000152" -> "1000342"  [label="DDG: IS_ERR(msg)"];
"1000146" -> "1000152"  [label="DDG: msg"];
"1000152" -> "1000155"  [label="DDG: msg"];
"1000152" -> "1000335"  [label="DDG: msg"];
"1000146" -> "1000108"  [label="AST: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000153" -> "1000146"  [label="CFG: "];
"1000146" -> "1000342"  [label="DDG: load_msg(mtext, msgsz)"];
"1000148" -> "1000146"  [label="DDG: mtext"];
"1000148" -> "1000146"  [label="DDG: msgsz"];
"1000148" -> "1000150"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000150" -> "1000148"  [label="AST: "];
"1000148" -> "1000342"  [label="DDG: mtext"];
"1000148" -> "1000342"  [label="DDG: msgsz"];
"1000105" -> "1000148"  [label="DDG: mtext"];
"1000122" -> "1000148"  [label="DDG: msgsz"];
"1000129" -> "1000148"  [label="DDG: msgsz"];
"1000106" -> "1000148"  [label="DDG: msgsz"];
"1000148" -> "1000162"  [label="DDG: msgsz"];
"1000148" -> "1000208"  [label="DDG: msgsz"];
"1000148" -> "1000209"  [label="DDG: msgsz"];
"1000148" -> "1000304"  [label="DDG: msgsz"];
"1000148" -> "1000313"  [label="DDG: msgsz"];
"1000105" -> "1000102"  [label="AST: "];
"1000105" -> "1000342"  [label="DDG: mtext"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000130" -> "1000122"  [label="CFG: "];
"1000121" -> "1000122"  [label="CFG: "];
"1000122" -> "1000342"  [label="DDG: msgsz"];
"1000122" -> "1000342"  [label="DDG: ns->msg_ctlmax"];
"1000122" -> "1000121"  [label="DDG: msgsz"];
"1000122" -> "1000121"  [label="DDG: ns->msg_ctlmax"];
"1000106" -> "1000122"  [label="DDG: msgsz"];
"1000122" -> "1000129"  [label="DDG: msgsz"];
"1000106" -> "1000102"  [label="AST: "];
"1000106" -> "1000342"  [label="DDG: msgsz"];
"1000106" -> "1000129"  [label="DDG: msgsz"];
"1000106" -> "1000162"  [label="DDG: msgsz"];
"1000106" -> "1000208"  [label="DDG: msgsz"];
"1000106" -> "1000209"  [label="DDG: msgsz"];
"1000106" -> "1000304"  [label="DDG: msgsz"];
"1000106" -> "1000313"  [label="DDG: msgsz"];
"1000129" -> "1000128"  [label="AST: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000129"  [label="AST: "];
"1000132" -> "1000129"  [label="CFG: "];
"1000129" -> "1000342"  [label="DDG: msgsz"];
"1000129" -> "1000128"  [label="DDG: msgsz"];
"1000229" -> "1000228"  [label="AST: "];
"1000229" -> "1000231"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000231" -> "1000229"  [label="AST: "];
"1000234" -> "1000229"  [label="CFG: "];
"1000239" -> "1000229"  [label="CFG: "];
"1000229" -> "1000342"  [label="DDG: msgflg & IPC_NOWAIT"];
"1000229" -> "1000342"  [label="DDG: IPC_NOWAIT"];
"1000229" -> "1000342"  [label="DDG: msgflg"];
"1000107" -> "1000229"  [label="DDG: msgflg"];
"1000107" -> "1000102"  [label="AST: "];
"1000107" -> "1000342"  [label="DDG: msgflg"];
"1000290" -> "1000289"  [label="AST: "];
"1000298" -> "1000290"  [label="CFG: "];
"1000325" -> "1000290"  [label="CFG: "];
"1000290" -> "1000342"  [label="DDG: pipelined_send(msq, msg)"];
"1000290" -> "1000342"  [label="DDG: !pipelined_send(msq, msg)"];
"1000331" -> "1000108"  [label="AST: "];
"1000331" -> "1000332"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000333" -> "1000331"  [label="CFG: "];
"1000331" -> "1000342"  [label="DDG: msg_unlock(msq)"];
"1000331" -> "1000342"  [label="DDG: msq"];
}
