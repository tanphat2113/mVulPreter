digraph "0_linux_a5b2c5b2ad5853591a6cac6134cd0f599a720865@array" {
"1000124" [label="(Call,args[size - 1] != '\0')"];
"1000111" [label="(Call,*args = value)"];
"1000106" [label="(MethodParameterIn,void *value)"];
"1000156" [label="(Call,strim(args))"];
"1000154" [label="(Call,args = strim(args))"];
"1000165" [label="(Call,!args)"];
"1000172" [label="(Call,skip_spaces(args))"];
"1000170" [label="(Call,args = skip_spaces(args))"];
"1000185" [label="(Call,args - (char *) value)"];
"1000183" [label="(Call,size - (args - (char *) value))"];
"1000181" [label="(Call,arg_size = size - (args - (char *) value))"];
"1000206" [label="(Call,aa_setprocattr_changehat(args, arg_size,\n\t\t\t\t\t\t\t !AA_DO_TEST))"];
"1000204" [label="(Call,error = aa_setprocattr_changehat(args, arg_size,\n\t\t\t\t\t\t\t !AA_DO_TEST))"];
"1000326" [label="(Call,!error)"];
"1000331" [label="(Return,return error;)"];
"1000221" [label="(Call,aa_setprocattr_changehat(args, arg_size,\n\t\t\t\t\t\t\t AA_DO_TEST))"];
"1000219" [label="(Call,error = aa_setprocattr_changehat(args, arg_size,\n\t\t\t\t\t\t\t AA_DO_TEST))"];
"1000328" [label="(Call,error = size)"];
"1000235" [label="(Call,aa_setprocattr_changeprofile(args, !AA_ONEXEC,\n\t\t\t\t\t\t\t     !AA_DO_TEST))"];
"1000233" [label="(Call,error = aa_setprocattr_changeprofile(args, !AA_ONEXEC,\n\t\t\t\t\t\t\t     !AA_DO_TEST))"];
"1000251" [label="(Call,aa_setprocattr_changeprofile(args, !AA_ONEXEC,\n\t\t\t\t\t\t\t     AA_DO_TEST))"];
"1000249" [label="(Call,error = aa_setprocattr_changeprofile(args, !AA_ONEXEC,\n\t\t\t\t\t\t\t     AA_DO_TEST))"];
"1000266" [label="(Call,aa_setprocattr_permipc(args))"];
"1000264" [label="(Call,error = aa_setprocattr_permipc(args))"];
"1000315" [label="(Call,aa_setprocattr_changeprofile(args, AA_ONEXEC,\n\t\t\t\t\t\t     !AA_DO_TEST))"];
"1000313" [label="(Call,error = aa_setprocattr_changeprofile(args, AA_ONEXEC,\n\t\t\t\t\t\t     !AA_DO_TEST))"];
"1000171" [label="(Identifier,args)"];
"1000232" [label="(Block,)"];
"1000327" [label="(Identifier,error)"];
"1000177" [label="(Identifier,args)"];
"1000134" [label="(Identifier,size)"];
"1000331" [label="(Return,return error;)"];
"1000265" [label="(Identifier,error)"];
"1000224" [label="(Identifier,AA_DO_TEST)"];
"1000253" [label="(Call,!AA_ONEXEC)"];
"1000318" [label="(Call,!AA_DO_TEST)"];
"1000326" [label="(Call,!error)"];
"1000219" [label="(Call,error = aa_setprocattr_changehat(args, arg_size,\n\t\t\t\t\t\t\t AA_DO_TEST))"];
"1000108" [label="(Block,)"];
"1000157" [label="(Identifier,args)"];
"1000325" [label="(ControlStructure,if (!error))"];
"1000220" [label="(Identifier,error)"];
"1000173" [label="(Identifier,args)"];
"1000156" [label="(Call,strim(args))"];
"1000130" [label="(Literal,'\0')"];
"1000222" [label="(Identifier,args)"];
"1000113" [label="(Identifier,value)"];
"1000185" [label="(Call,args - (char *) value)"];
"1000181" [label="(Call,arg_size = size - (args - (char *) value))"];
"1000133" [label="(Call,size == PAGE_SIZE)"];
"1000164" [label="(ControlStructure,if (!args))"];
"1000154" [label="(Call,args = strim(args))"];
"1000170" [label="(Call,args = skip_spaces(args))"];
"1000255" [label="(Identifier,AA_DO_TEST)"];
"1000249" [label="(Call,error = aa_setprocattr_changeprofile(args, !AA_ONEXEC,\n\t\t\t\t\t\t\t     AA_DO_TEST))"];
"1000187" [label="(Call,(char *) value)"];
"1000123" [label="(ControlStructure,if (args[size - 1] != '\0'))"];
"1000127" [label="(Call,size - 1)"];
"1000233" [label="(Call,error = aa_setprocattr_changeprofile(args, !AA_ONEXEC,\n\t\t\t\t\t\t\t     !AA_DO_TEST))"];
"1000146" [label="(Identifier,current)"];
"1000106" [label="(MethodParameterIn,void *value)"];
"1000139" [label="(Call,args[size] = '\0')"];
"1000209" [label="(Call,!AA_DO_TEST)"];
"1000218" [label="(Block,)"];
"1000182" [label="(Identifier,arg_size)"];
"1000172" [label="(Call,skip_spaces(args))"];
"1000112" [label="(Identifier,args)"];
"1000184" [label="(Identifier,size)"];
"1000206" [label="(Call,aa_setprocattr_changehat(args, arg_size,\n\t\t\t\t\t\t\t !AA_DO_TEST))"];
"1000183" [label="(Call,size - (args - (char *) value))"];
"1000223" [label="(Identifier,arg_size)"];
"1000266" [label="(Call,aa_setprocattr_permipc(args))"];
"1000263" [label="(Block,)"];
"1000264" [label="(Call,error = aa_setprocattr_permipc(args))"];
"1000329" [label="(Identifier,error)"];
"1000332" [label="(Identifier,error)"];
"1000159" [label="(Identifier,command)"];
"1000169" [label="(Identifier,EINVAL)"];
"1000239" [label="(Call,!AA_DO_TEST)"];
"1000166" [label="(Identifier,args)"];
"1000186" [label="(Identifier,args)"];
"1000111" [label="(Call,*args = value)"];
"1000151" [label="(Call,args = value)"];
"1000236" [label="(Identifier,args)"];
"1000207" [label="(Identifier,args)"];
"1000250" [label="(Identifier,error)"];
"1000125" [label="(Call,args[size - 1])"];
"1000267" [label="(Identifier,args)"];
"1000252" [label="(Identifier,args)"];
"1000204" [label="(Call,error = aa_setprocattr_changehat(args, arg_size,\n\t\t\t\t\t\t\t !AA_DO_TEST))"];
"1000234" [label="(Identifier,error)"];
"1000165" [label="(Call,!args)"];
"1000312" [label="(Block,)"];
"1000317" [label="(Identifier,AA_ONEXEC)"];
"1000205" [label="(Identifier,error)"];
"1000124" [label="(Call,args[size - 1] != '\0')"];
"1000235" [label="(Call,aa_setprocattr_changeprofile(args, !AA_ONEXEC,\n\t\t\t\t\t\t\t     !AA_DO_TEST))"];
"1000330" [label="(Identifier,size)"];
"1000155" [label="(Identifier,args)"];
"1000221" [label="(Call,aa_setprocattr_changehat(args, arg_size,\n\t\t\t\t\t\t\t AA_DO_TEST))"];
"1000313" [label="(Call,error = aa_setprocattr_changeprofile(args, AA_ONEXEC,\n\t\t\t\t\t\t     !AA_DO_TEST))"];
"1000237" [label="(Call,!AA_ONEXEC)"];
"1000315" [label="(Call,aa_setprocattr_changeprofile(args, AA_ONEXEC,\n\t\t\t\t\t\t     !AA_DO_TEST))"];
"1000333" [label="(MethodReturn,static int)"];
"1000316" [label="(Identifier,args)"];
"1000193" [label="(Identifier,name)"];
"1000248" [label="(Block,)"];
"1000208" [label="(Identifier,arg_size)"];
"1000203" [label="(Block,)"];
"1000251" [label="(Call,aa_setprocattr_changeprofile(args, !AA_ONEXEC,\n\t\t\t\t\t\t\t     AA_DO_TEST))"];
"1000328" [label="(Call,error = size)"];
"1000314" [label="(Identifier,error)"];
"1000118" [label="(Identifier,size)"];
"1000107" [label="(MethodParameterIn,size_t size)"];
"1000124" -> "1000123"  [label="AST: "];
"1000124" -> "1000130"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000130" -> "1000124"  [label="AST: "];
"1000134" -> "1000124"  [label="CFG: "];
"1000146" -> "1000124"  [label="CFG: "];
"1000124" -> "1000333"  [label="DDG: args[size - 1]"];
"1000124" -> "1000333"  [label="DDG: args[size - 1] != '\0'"];
"1000111" -> "1000124"  [label="DDG: args"];
"1000124" -> "1000156"  [label="DDG: args[size - 1]"];
"1000124" -> "1000165"  [label="DDG: args[size - 1]"];
"1000124" -> "1000172"  [label="DDG: args[size - 1]"];
"1000124" -> "1000185"  [label="DDG: args[size - 1]"];
"1000124" -> "1000206"  [label="DDG: args[size - 1]"];
"1000124" -> "1000221"  [label="DDG: args[size - 1]"];
"1000124" -> "1000235"  [label="DDG: args[size - 1]"];
"1000124" -> "1000251"  [label="DDG: args[size - 1]"];
"1000124" -> "1000266"  [label="DDG: args[size - 1]"];
"1000124" -> "1000315"  [label="DDG: args[size - 1]"];
"1000111" -> "1000108"  [label="AST: "];
"1000111" -> "1000113"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000113" -> "1000111"  [label="AST: "];
"1000118" -> "1000111"  [label="CFG: "];
"1000111" -> "1000333"  [label="DDG: args"];
"1000111" -> "1000333"  [label="DDG: value"];
"1000106" -> "1000111"  [label="DDG: value"];
"1000106" -> "1000103"  [label="AST: "];
"1000106" -> "1000333"  [label="DDG: value"];
"1000106" -> "1000151"  [label="DDG: value"];
"1000106" -> "1000187"  [label="DDG: value"];
"1000156" -> "1000154"  [label="AST: "];
"1000156" -> "1000157"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000156" -> "1000154"  [label="DDG: args"];
"1000139" -> "1000156"  [label="DDG: args[size]"];
"1000151" -> "1000156"  [label="DDG: args"];
"1000154" -> "1000108"  [label="AST: "];
"1000155" -> "1000154"  [label="AST: "];
"1000159" -> "1000154"  [label="CFG: "];
"1000154" -> "1000333"  [label="DDG: strim(args)"];
"1000154" -> "1000165"  [label="DDG: args"];
"1000165" -> "1000164"  [label="AST: "];
"1000165" -> "1000166"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000169" -> "1000165"  [label="CFG: "];
"1000171" -> "1000165"  [label="CFG: "];
"1000165" -> "1000333"  [label="DDG: args"];
"1000165" -> "1000333"  [label="DDG: !args"];
"1000139" -> "1000165"  [label="DDG: args[size]"];
"1000165" -> "1000172"  [label="DDG: args"];
"1000172" -> "1000170"  [label="AST: "];
"1000172" -> "1000173"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000172" -> "1000170"  [label="DDG: args"];
"1000139" -> "1000172"  [label="DDG: args[size]"];
"1000170" -> "1000108"  [label="AST: "];
"1000171" -> "1000170"  [label="AST: "];
"1000177" -> "1000170"  [label="CFG: "];
"1000170" -> "1000333"  [label="DDG: skip_spaces(args)"];
"1000170" -> "1000333"  [label="DDG: args"];
"1000170" -> "1000185"  [label="DDG: args"];
"1000185" -> "1000183"  [label="AST: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="AST: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000185" -> "1000333"  [label="DDG: args"];
"1000185" -> "1000333"  [label="DDG: (char *) value"];
"1000185" -> "1000183"  [label="DDG: args"];
"1000185" -> "1000183"  [label="DDG: (char *) value"];
"1000139" -> "1000185"  [label="DDG: args[size]"];
"1000187" -> "1000185"  [label="DDG: value"];
"1000185" -> "1000206"  [label="DDG: args"];
"1000185" -> "1000221"  [label="DDG: args"];
"1000185" -> "1000235"  [label="DDG: args"];
"1000185" -> "1000251"  [label="DDG: args"];
"1000185" -> "1000266"  [label="DDG: args"];
"1000185" -> "1000315"  [label="DDG: args"];
"1000183" -> "1000181"  [label="AST: "];
"1000184" -> "1000183"  [label="AST: "];
"1000181" -> "1000183"  [label="CFG: "];
"1000183" -> "1000333"  [label="DDG: args - (char *) value"];
"1000183" -> "1000333"  [label="DDG: size"];
"1000183" -> "1000181"  [label="DDG: size"];
"1000183" -> "1000181"  [label="DDG: args - (char *) value"];
"1000133" -> "1000183"  [label="DDG: size"];
"1000127" -> "1000183"  [label="DDG: size"];
"1000107" -> "1000183"  [label="DDG: size"];
"1000183" -> "1000328"  [label="DDG: size"];
"1000181" -> "1000108"  [label="AST: "];
"1000182" -> "1000181"  [label="AST: "];
"1000193" -> "1000181"  [label="CFG: "];
"1000181" -> "1000333"  [label="DDG: arg_size"];
"1000181" -> "1000333"  [label="DDG: size - (args - (char *) value)"];
"1000181" -> "1000206"  [label="DDG: arg_size"];
"1000181" -> "1000221"  [label="DDG: arg_size"];
"1000206" -> "1000204"  [label="AST: "];
"1000206" -> "1000209"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000206"  [label="AST: "];
"1000209" -> "1000206"  [label="AST: "];
"1000204" -> "1000206"  [label="CFG: "];
"1000206" -> "1000333"  [label="DDG: !AA_DO_TEST"];
"1000206" -> "1000333"  [label="DDG: arg_size"];
"1000206" -> "1000333"  [label="DDG: args"];
"1000206" -> "1000204"  [label="DDG: args"];
"1000206" -> "1000204"  [label="DDG: arg_size"];
"1000206" -> "1000204"  [label="DDG: !AA_DO_TEST"];
"1000139" -> "1000206"  [label="DDG: args[size]"];
"1000209" -> "1000206"  [label="DDG: AA_DO_TEST"];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000204"  [label="AST: "];
"1000327" -> "1000204"  [label="CFG: "];
"1000204" -> "1000333"  [label="DDG: aa_setprocattr_changehat(args, arg_size,\n\t\t\t\t\t\t\t !AA_DO_TEST)"];
"1000204" -> "1000326"  [label="DDG: error"];
"1000326" -> "1000325"  [label="AST: "];
"1000326" -> "1000327"  [label="CFG: "];
"1000327" -> "1000326"  [label="AST: "];
"1000329" -> "1000326"  [label="CFG: "];
"1000332" -> "1000326"  [label="CFG: "];
"1000326" -> "1000333"  [label="DDG: !error"];
"1000326" -> "1000333"  [label="DDG: error"];
"1000264" -> "1000326"  [label="DDG: error"];
"1000249" -> "1000326"  [label="DDG: error"];
"1000313" -> "1000326"  [label="DDG: error"];
"1000233" -> "1000326"  [label="DDG: error"];
"1000219" -> "1000326"  [label="DDG: error"];
"1000326" -> "1000331"  [label="DDG: error"];
"1000331" -> "1000108"  [label="AST: "];
"1000331" -> "1000332"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000333" -> "1000331"  [label="CFG: "];
"1000331" -> "1000333"  [label="DDG: <RET>"];
"1000332" -> "1000331"  [label="DDG: error"];
"1000328" -> "1000331"  [label="DDG: error"];
"1000221" -> "1000219"  [label="AST: "];
"1000221" -> "1000224"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000224" -> "1000221"  [label="AST: "];
"1000219" -> "1000221"  [label="CFG: "];
"1000221" -> "1000333"  [label="DDG: arg_size"];
"1000221" -> "1000333"  [label="DDG: args"];
"1000221" -> "1000333"  [label="DDG: AA_DO_TEST"];
"1000221" -> "1000219"  [label="DDG: args"];
"1000221" -> "1000219"  [label="DDG: arg_size"];
"1000221" -> "1000219"  [label="DDG: AA_DO_TEST"];
"1000139" -> "1000221"  [label="DDG: args[size]"];
"1000219" -> "1000218"  [label="AST: "];
"1000220" -> "1000219"  [label="AST: "];
"1000327" -> "1000219"  [label="CFG: "];
"1000219" -> "1000333"  [label="DDG: aa_setprocattr_changehat(args, arg_size,\n\t\t\t\t\t\t\t AA_DO_TEST)"];
"1000328" -> "1000325"  [label="AST: "];
"1000328" -> "1000330"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000330" -> "1000328"  [label="AST: "];
"1000332" -> "1000328"  [label="CFG: "];
"1000328" -> "1000333"  [label="DDG: error"];
"1000328" -> "1000333"  [label="DDG: size"];
"1000107" -> "1000328"  [label="DDG: size"];
"1000235" -> "1000233"  [label="AST: "];
"1000235" -> "1000239"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="AST: "];
"1000239" -> "1000235"  [label="AST: "];
"1000233" -> "1000235"  [label="CFG: "];
"1000235" -> "1000333"  [label="DDG: !AA_ONEXEC"];
"1000235" -> "1000333"  [label="DDG: args"];
"1000235" -> "1000333"  [label="DDG: !AA_DO_TEST"];
"1000235" -> "1000233"  [label="DDG: args"];
"1000235" -> "1000233"  [label="DDG: !AA_ONEXEC"];
"1000235" -> "1000233"  [label="DDG: !AA_DO_TEST"];
"1000139" -> "1000235"  [label="DDG: args[size]"];
"1000237" -> "1000235"  [label="DDG: AA_ONEXEC"];
"1000239" -> "1000235"  [label="DDG: AA_DO_TEST"];
"1000233" -> "1000232"  [label="AST: "];
"1000234" -> "1000233"  [label="AST: "];
"1000327" -> "1000233"  [label="CFG: "];
"1000233" -> "1000333"  [label="DDG: aa_setprocattr_changeprofile(args, !AA_ONEXEC,\n\t\t\t\t\t\t\t     !AA_DO_TEST)"];
"1000251" -> "1000249"  [label="AST: "];
"1000251" -> "1000255"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="AST: "];
"1000255" -> "1000251"  [label="AST: "];
"1000249" -> "1000251"  [label="CFG: "];
"1000251" -> "1000333"  [label="DDG: !AA_ONEXEC"];
"1000251" -> "1000333"  [label="DDG: AA_DO_TEST"];
"1000251" -> "1000333"  [label="DDG: args"];
"1000251" -> "1000249"  [label="DDG: args"];
"1000251" -> "1000249"  [label="DDG: !AA_ONEXEC"];
"1000251" -> "1000249"  [label="DDG: AA_DO_TEST"];
"1000139" -> "1000251"  [label="DDG: args[size]"];
"1000253" -> "1000251"  [label="DDG: AA_ONEXEC"];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000249"  [label="AST: "];
"1000327" -> "1000249"  [label="CFG: "];
"1000249" -> "1000333"  [label="DDG: aa_setprocattr_changeprofile(args, !AA_ONEXEC,\n\t\t\t\t\t\t\t     AA_DO_TEST)"];
"1000266" -> "1000264"  [label="AST: "];
"1000266" -> "1000267"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000264" -> "1000266"  [label="CFG: "];
"1000266" -> "1000333"  [label="DDG: args"];
"1000266" -> "1000264"  [label="DDG: args"];
"1000139" -> "1000266"  [label="DDG: args[size]"];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000264"  [label="AST: "];
"1000327" -> "1000264"  [label="CFG: "];
"1000264" -> "1000333"  [label="DDG: aa_setprocattr_permipc(args)"];
"1000315" -> "1000313"  [label="AST: "];
"1000315" -> "1000318"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000317" -> "1000315"  [label="AST: "];
"1000318" -> "1000315"  [label="AST: "];
"1000313" -> "1000315"  [label="CFG: "];
"1000315" -> "1000333"  [label="DDG: !AA_DO_TEST"];
"1000315" -> "1000333"  [label="DDG: args"];
"1000315" -> "1000333"  [label="DDG: AA_ONEXEC"];
"1000315" -> "1000313"  [label="DDG: args"];
"1000315" -> "1000313"  [label="DDG: AA_ONEXEC"];
"1000315" -> "1000313"  [label="DDG: !AA_DO_TEST"];
"1000139" -> "1000315"  [label="DDG: args[size]"];
"1000318" -> "1000315"  [label="DDG: AA_DO_TEST"];
"1000313" -> "1000312"  [label="AST: "];
"1000314" -> "1000313"  [label="AST: "];
"1000327" -> "1000313"  [label="CFG: "];
"1000313" -> "1000333"  [label="DDG: aa_setprocattr_changeprofile(args, AA_ONEXEC,\n\t\t\t\t\t\t     !AA_DO_TEST)"];
}
