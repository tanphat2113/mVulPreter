digraph "0_openssl_68595c0c2886e7942a14f98c17a55a88afb6c292@API" {
"1000980" [label="(Call,sizeof(j) * 8 - 8)"];
"1000981" [label="(Call,sizeof(j) * 8)"];
"1000976" [label="(Call,(j - inp_len) >> (sizeof(j) * 8 - 8))"];
"1000974" [label="(Call,mask = (j - inp_len) >> (sizeof(j) * 8 - 8))"];
"1000986" [label="(Call,c &= mask)"];
"1000989" [label="(Call,c |= 0x80 & ~mask & ~((inp_len - j) >> (sizeof(j) * 8 - 8)))"];
"1001013" [label="(Call,(unsigned char)c)"];
"1001006" [label="(Call,data->c[res++] = (unsigned char)c)"];
"1000974" [label="(Call,mask = (j - inp_len) >> (sizeof(j) * 8 - 8))"];
"1000981" [label="(Call,sizeof(j) * 8)"];
"1001018" [label="(Identifier,res)"];
"1000991" [label="(Call,0x80 & ~mask & ~((inp_len - j) >> (sizeof(j) * 8 - 8)))"];
"1000969" [label="(Call,c = out[j])"];
"1001007" [label="(Call,data->c[res++])"];
"1000976" [label="(Call,(j - inp_len) >> (sizeof(j) * 8 - 8))"];
"1000980" [label="(Call,sizeof(j) * 8 - 8)"];
"1000984" [label="(Literal,8)"];
"1000967" [label="(Block,)"];
"1000986" [label="(Call,c &= mask)"];
"1000990" [label="(Identifier,c)"];
"1001013" [label="(Call,(unsigned char)c)"];
"1000988" [label="(Identifier,mask)"];
"1001006" [label="(Call,data->c[res++] = (unsigned char)c)"];
"1000987" [label="(Identifier,c)"];
"1000985" [label="(Literal,8)"];
"1000977" [label="(Call,j - inp_len)"];
"1000982" [label="(Call,sizeof(j))"];
"1001009" [label="(Identifier,data)"];
"1000989" [label="(Call,c |= 0x80 & ~mask & ~((inp_len - j) >> (sizeof(j) * 8 - 8)))"];
"1001015" [label="(Identifier,c)"];
"1000975" [label="(Identifier,mask)"];
"1001971" [label="(MethodReturn,static int)"];
"1000980" -> "1000976"  [label="AST: "];
"1000980" -> "1000985"  [label="CFG: "];
"1000981" -> "1000980"  [label="AST: "];
"1000985" -> "1000980"  [label="AST: "];
"1000976" -> "1000980"  [label="CFG: "];
"1000980" -> "1000976"  [label="DDG: sizeof(j) * 8"];
"1000980" -> "1000976"  [label="DDG: 8"];
"1000981" -> "1000980"  [label="DDG: 8"];
"1000981" -> "1000984"  [label="CFG: "];
"1000982" -> "1000981"  [label="AST: "];
"1000984" -> "1000981"  [label="AST: "];
"1000985" -> "1000981"  [label="CFG: "];
"1000976" -> "1000974"  [label="AST: "];
"1000977" -> "1000976"  [label="AST: "];
"1000974" -> "1000976"  [label="CFG: "];
"1000976" -> "1001971"  [label="DDG: j - inp_len"];
"1000976" -> "1000974"  [label="DDG: j - inp_len"];
"1000976" -> "1000974"  [label="DDG: sizeof(j) * 8 - 8"];
"1000977" -> "1000976"  [label="DDG: j"];
"1000977" -> "1000976"  [label="DDG: inp_len"];
"1000974" -> "1000967"  [label="AST: "];
"1000975" -> "1000974"  [label="AST: "];
"1000987" -> "1000974"  [label="CFG: "];
"1000974" -> "1001971"  [label="DDG: (j - inp_len) >> (sizeof(j) * 8 - 8)"];
"1000974" -> "1000986"  [label="DDG: mask"];
"1000986" -> "1000967"  [label="AST: "];
"1000986" -> "1000988"  [label="CFG: "];
"1000987" -> "1000986"  [label="AST: "];
"1000988" -> "1000986"  [label="AST: "];
"1000990" -> "1000986"  [label="CFG: "];
"1000986" -> "1001971"  [label="DDG: c &= mask"];
"1000969" -> "1000986"  [label="DDG: c"];
"1000986" -> "1000989"  [label="DDG: c"];
"1000989" -> "1000967"  [label="AST: "];
"1000989" -> "1000991"  [label="CFG: "];
"1000990" -> "1000989"  [label="AST: "];
"1000991" -> "1000989"  [label="AST: "];
"1001009" -> "1000989"  [label="CFG: "];
"1000989" -> "1001971"  [label="DDG: c |= 0x80 & ~mask & ~((inp_len - j) >> (sizeof(j) * 8 - 8))"];
"1000989" -> "1001971"  [label="DDG: 0x80 & ~mask & ~((inp_len - j) >> (sizeof(j) * 8 - 8))"];
"1000991" -> "1000989"  [label="DDG: 0x80"];
"1000991" -> "1000989"  [label="DDG: ~mask & ~((inp_len - j) >> (sizeof(j) * 8 - 8))"];
"1000989" -> "1001013"  [label="DDG: c"];
"1001013" -> "1001006"  [label="AST: "];
"1001013" -> "1001015"  [label="CFG: "];
"1001014" -> "1001013"  [label="AST: "];
"1001015" -> "1001013"  [label="AST: "];
"1001006" -> "1001013"  [label="CFG: "];
"1001013" -> "1001971"  [label="DDG: c"];
"1001013" -> "1001006"  [label="DDG: c"];
"1001006" -> "1000967"  [label="AST: "];
"1001007" -> "1001006"  [label="AST: "];
"1001018" -> "1001006"  [label="CFG: "];
"1001006" -> "1001971"  [label="DDG: data->c[res++]"];
"1001006" -> "1001971"  [label="DDG: (unsigned char)c"];
}
