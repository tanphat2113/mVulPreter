digraph "0_linux_0c17d1d2c61936401f4702e1846e2c19b200f958_0@pointer" {
"1000203" [label="(Call,insn->imm != 64)"];
"1000198" [label="(Call,insn->imm != 32)"];
"1000192" [label="(Call,insn->imm != 16)"];
"1000197" [label="(Call,insn->imm != 32 && insn->imm != 64)"];
"1000191" [label="(Call,insn->imm != 16 && insn->imm != 32 && insn->imm != 64)"];
"1000190" [label="(Call,(insn->imm != 16 && insn->imm != 32 && insn->imm != 64) ||\n\t\t\t    BPF_CLASS(insn->code) == BPF_ALU64)"];
"1000184" [label="(Call,insn->off != 0 ||\n\t\t\t    (insn->imm != 16 && insn->imm != 32 && insn->imm != 64) ||\n\t\t\t    BPF_CLASS(insn->code) == BPF_ALU64)"];
"1000178" [label="(Call,insn->src_reg != BPF_REG_0 || insn->off != 0 ||\n\t\t\t    (insn->imm != 16 && insn->imm != 32 && insn->imm != 64) ||\n\t\t\t    BPF_CLASS(insn->code) == BPF_ALU64)"];
"1000204" [label="(Call,insn->imm)"];
"1000190" [label="(Call,(insn->imm != 16 && insn->imm != 32 && insn->imm != 64) ||\n\t\t\t    BPF_CLASS(insn->code) == BPF_ALU64)"];
"1000177" [label="(ControlStructure,if (insn->src_reg != BPF_REG_0 || insn->off != 0 ||\n\t\t\t    (insn->imm != 16 && insn->imm != 32 && insn->imm != 64) ||\n\t\t\t    BPF_CLASS(insn->code) == BPF_ALU64))"];
"1000192" [label="(Call,insn->imm != 16)"];
"1000651" [label="(MethodReturn,static int)"];
"1000200" [label="(Identifier,insn)"];
"1000184" [label="(Call,insn->off != 0 ||\n\t\t\t    (insn->imm != 16 && insn->imm != 32 && insn->imm != 64) ||\n\t\t\t    BPF_CLASS(insn->code) == BPF_ALU64)"];
"1000203" [label="(Call,insn->imm != 64)"];
"1000198" [label="(Call,insn->imm != 32)"];
"1000191" [label="(Call,insn->imm != 16 && insn->imm != 32 && insn->imm != 64)"];
"1000211" [label="(Identifier,insn)"];
"1000197" [label="(Call,insn->imm != 32 && insn->imm != 64)"];
"1000178" [label="(Call,insn->src_reg != BPF_REG_0 || insn->off != 0 ||\n\t\t\t    (insn->imm != 16 && insn->imm != 32 && insn->imm != 64) ||\n\t\t\t    BPF_CLASS(insn->code) == BPF_ALU64)"];
"1000205" [label="(Identifier,insn)"];
"1000196" [label="(Literal,16)"];
"1000208" [label="(Call,BPF_CLASS(insn->code) == BPF_ALU64)"];
"1000216" [label="(Identifier,env)"];
"1000179" [label="(Call,insn->src_reg != BPF_REG_0)"];
"1000202" [label="(Literal,32)"];
"1000193" [label="(Call,insn->imm)"];
"1000222" [label="(Identifier,err)"];
"1000185" [label="(Call,insn->off != 0)"];
"1000199" [label="(Call,insn->imm)"];
"1000207" [label="(Literal,64)"];
"1000203" -> "1000197"  [label="AST: "];
"1000203" -> "1000207"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000207" -> "1000203"  [label="AST: "];
"1000197" -> "1000203"  [label="CFG: "];
"1000203" -> "1000651"  [label="DDG: insn->imm"];
"1000203" -> "1000197"  [label="DDG: insn->imm"];
"1000203" -> "1000197"  [label="DDG: 64"];
"1000198" -> "1000203"  [label="DDG: insn->imm"];
"1000198" -> "1000197"  [label="AST: "];
"1000198" -> "1000202"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000202" -> "1000198"  [label="AST: "];
"1000205" -> "1000198"  [label="CFG: "];
"1000197" -> "1000198"  [label="CFG: "];
"1000198" -> "1000651"  [label="DDG: insn->imm"];
"1000198" -> "1000197"  [label="DDG: insn->imm"];
"1000198" -> "1000197"  [label="DDG: 32"];
"1000192" -> "1000198"  [label="DDG: insn->imm"];
"1000192" -> "1000191"  [label="AST: "];
"1000192" -> "1000196"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000196" -> "1000192"  [label="AST: "];
"1000200" -> "1000192"  [label="CFG: "];
"1000191" -> "1000192"  [label="CFG: "];
"1000192" -> "1000651"  [label="DDG: insn->imm"];
"1000192" -> "1000191"  [label="DDG: insn->imm"];
"1000192" -> "1000191"  [label="DDG: 16"];
"1000197" -> "1000191"  [label="AST: "];
"1000191" -> "1000197"  [label="CFG: "];
"1000197" -> "1000651"  [label="DDG: insn->imm != 64"];
"1000197" -> "1000651"  [label="DDG: insn->imm != 32"];
"1000197" -> "1000191"  [label="DDG: insn->imm != 32"];
"1000197" -> "1000191"  [label="DDG: insn->imm != 64"];
"1000191" -> "1000190"  [label="AST: "];
"1000211" -> "1000191"  [label="CFG: "];
"1000190" -> "1000191"  [label="CFG: "];
"1000191" -> "1000651"  [label="DDG: insn->imm != 32 && insn->imm != 64"];
"1000191" -> "1000651"  [label="DDG: insn->imm != 16"];
"1000191" -> "1000190"  [label="DDG: insn->imm != 16"];
"1000191" -> "1000190"  [label="DDG: insn->imm != 32 && insn->imm != 64"];
"1000190" -> "1000184"  [label="AST: "];
"1000190" -> "1000208"  [label="CFG: "];
"1000208" -> "1000190"  [label="AST: "];
"1000184" -> "1000190"  [label="CFG: "];
"1000190" -> "1000651"  [label="DDG: insn->imm != 16 && insn->imm != 32 && insn->imm != 64"];
"1000190" -> "1000651"  [label="DDG: BPF_CLASS(insn->code) == BPF_ALU64"];
"1000190" -> "1000184"  [label="DDG: insn->imm != 16 && insn->imm != 32 && insn->imm != 64"];
"1000190" -> "1000184"  [label="DDG: BPF_CLASS(insn->code) == BPF_ALU64"];
"1000208" -> "1000190"  [label="DDG: BPF_CLASS(insn->code)"];
"1000208" -> "1000190"  [label="DDG: BPF_ALU64"];
"1000184" -> "1000178"  [label="AST: "];
"1000184" -> "1000185"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000178" -> "1000184"  [label="CFG: "];
"1000184" -> "1000651"  [label="DDG: insn->off != 0"];
"1000184" -> "1000651"  [label="DDG: (insn->imm != 16 && insn->imm != 32 && insn->imm != 64) ||\n\t\t\t    BPF_CLASS(insn->code) == BPF_ALU64"];
"1000184" -> "1000178"  [label="DDG: insn->off != 0"];
"1000184" -> "1000178"  [label="DDG: (insn->imm != 16 && insn->imm != 32 && insn->imm != 64) ||\n\t\t\t    BPF_CLASS(insn->code) == BPF_ALU64"];
"1000185" -> "1000184"  [label="DDG: insn->off"];
"1000185" -> "1000184"  [label="DDG: 0"];
"1000178" -> "1000177"  [label="AST: "];
"1000178" -> "1000179"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000216" -> "1000178"  [label="CFG: "];
"1000222" -> "1000178"  [label="CFG: "];
"1000178" -> "1000651"  [label="DDG: insn->src_reg != BPF_REG_0 || insn->off != 0 ||\n\t\t\t    (insn->imm != 16 && insn->imm != 32 && insn->imm != 64) ||\n\t\t\t    BPF_CLASS(insn->code) == BPF_ALU64"];
"1000178" -> "1000651"  [label="DDG: insn->src_reg != BPF_REG_0"];
"1000178" -> "1000651"  [label="DDG: insn->off != 0 ||\n\t\t\t    (insn->imm != 16 && insn->imm != 32 && insn->imm != 64) ||\n\t\t\t    BPF_CLASS(insn->code) == BPF_ALU64"];
"1000179" -> "1000178"  [label="DDG: insn->src_reg"];
"1000179" -> "1000178"  [label="DDG: BPF_REG_0"];
}
