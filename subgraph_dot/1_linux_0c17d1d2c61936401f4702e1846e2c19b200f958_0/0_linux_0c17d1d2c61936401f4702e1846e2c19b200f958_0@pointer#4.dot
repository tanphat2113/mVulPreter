digraph "0_linux_0c17d1d2c61936401f4702e1846e2c19b200f958_0@pointer" {
"1000624" [label="(Call,verbose(env, \"invalid shift %d\n\", insn->imm))"];
"1000541" [label="(Call,check_reg_arg(env, insn->dst_reg, SRC_OP))"];
"1000508" [label="(Call,check_reg_arg(env, insn->src_reg, SRC_OP))"];
"1000119" [label="(Call,cur_regs(env))"];
"1000113" [label="(MethodParameterIn,struct bpf_verifier_env *env)"];
"1000613" [label="(Call,insn->imm < 0)"];
"1000567" [label="(Call,insn->imm == 0)"];
"1000489" [label="(Call,insn->imm != 0)"];
"1000618" [label="(Call,insn->imm >= size)"];
"1000600" [label="(Call,size = BPF_CLASS(insn->code) == BPF_ALU64 ? 64 : 32)"];
"1000560" [label="(Call,BPF_SRC(insn->code) == BPF_K && insn->imm == 0)"];
"1000493" [label="(Literal,0)"];
"1000288" [label="(Call,verbose(env, \"BPF_MOV uses reserved fields\n\"))"];
"1000496" [label="(Identifier,insn)"];
"1000613" [label="(Call,insn->imm < 0)"];
"1000541" [label="(Call,check_reg_arg(env, insn->dst_reg, SRC_OP))"];
"1000378" [label="(Call,is_pointer_value(env, insn->src_reg))"];
"1000646" [label="(Call,adjust_reg_min_max_vals(env, insn))"];
"1000488" [label="(Call,insn->imm != 0 || insn->off != 0)"];
"1000598" [label="(Block,)"];
"1000321" [label="(Call,verbose(env, \"BPF_MOV uses reserved fields\n\"))"];
"1000329" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP))"];
"1000626" [label="(Literal,\"invalid shift %d\n\")"];
"1000651" [label="(MethodReturn,static int)"];
"1000573" [label="(Call,verbose(env, \"div by zero\n\"))"];
"1000600" [label="(Call,size = BPF_CLASS(insn->code) == BPF_ALU64 ? 64 : 32)"];
"1000542" [label="(Identifier,env)"];
"1000627" [label="(Call,insn->imm)"];
"1000568" [label="(Call,insn->imm)"];
"1000509" [label="(Identifier,env)"];
"1000623" [label="(Block,)"];
"1000296" [label="(Call,check_reg_arg(env, insn->src_reg, SRC_OP))"];
"1000513" [label="(Identifier,SRC_OP)"];
"1000632" [label="(Identifier,EINVAL)"];
"1000625" [label="(Identifier,env)"];
"1000119" [label="(Call,cur_regs(env))"];
"1000622" [label="(Identifier,size)"];
"1000120" [label="(Identifier,env)"];
"1000508" [label="(Call,check_reg_arg(env, insn->src_reg, SRC_OP))"];
"1000251" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP))"];
"1000567" [label="(Call,insn->imm == 0)"];
"1000489" [label="(Call,insn->imm != 0)"];
"1000240" [label="(Call,verbose(env, \"R%d pointer arithmetic prohibited\n\",\n\t\t\t\tinsn->dst_reg))"];
"1000234" [label="(Call,is_pointer_value(env, insn->dst_reg))"];
"1000618" [label="(Call,insn->imm >= size)"];
"1000510" [label="(Call,insn->src_reg)"];
"1000620" [label="(Identifier,insn)"];
"1000500" [label="(Call,verbose(env, \"BPF_ALU uses reserved fields\n\"))"];
"1000601" [label="(Identifier,size)"];
"1000615" [label="(Identifier,insn)"];
"1000571" [label="(Literal,0)"];
"1000117" [label="(Call,*regs = cur_regs(env))"];
"1000614" [label="(Call,insn->imm)"];
"1000384" [label="(Call,verbose(env,\n\t\t\t\t\t\t\"R%d partial copy of pointer\n\",\n\t\t\t\t\t\tinsn->src_reg))"];
"1000546" [label="(Identifier,SRC_OP)"];
"1000619" [label="(Call,insn->imm)"];
"1000490" [label="(Call,insn->imm)"];
"1000215" [label="(Call,verbose(env, \"BPF_END uses reserved fields\n\"))"];
"1000624" [label="(Call,verbose(env, \"invalid shift %d\n\", insn->imm))"];
"1000113" [label="(MethodParameterIn,struct bpf_verifier_env *env)"];
"1000635" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP_NO_MARK))"];
"1000539" [label="(Call,err = check_reg_arg(env, insn->dst_reg, SRC_OP))"];
"1000223" [label="(Call,check_reg_arg(env, insn->dst_reg, SRC_OP))"];
"1000543" [label="(Call,insn->dst_reg)"];
"1000617" [label="(Literal,0)"];
"1000612" [label="(Call,insn->imm < 0 || insn->imm >= size)"];
"1000470" [label="(Call,verbose(env, \"invalid BPF_ALU opcode %x\n\", opcode))"];
"1000506" [label="(Call,err = check_reg_arg(env, insn->src_reg, SRC_OP))"];
"1000393" [label="(Call,mark_reg_unknown(env, regs, insn->dst_reg))"];
"1000602" [label="(Call,BPF_CLASS(insn->code) == BPF_ALU64 ? 64 : 32)"];
"1000169" [label="(Call,verbose(env, \"BPF_NEG uses reserved fields\n\"))"];
"1000533" [label="(Call,verbose(env, \"BPF_ALU uses reserved fields\n\"))"];
"1000624" -> "1000623"  [label="AST: "];
"1000624" -> "1000627"  [label="CFG: "];
"1000625" -> "1000624"  [label="AST: "];
"1000626" -> "1000624"  [label="AST: "];
"1000627" -> "1000624"  [label="AST: "];
"1000632" -> "1000624"  [label="CFG: "];
"1000624" -> "1000651"  [label="DDG: "];
"1000624" -> "1000651"  [label="DDG: "];
"1000624" -> "1000651"  [label="DDG: "];
"1000541" -> "1000624"  [label="DDG: "];
"1000113" -> "1000624"  [label="DDG: "];
"1000613" -> "1000624"  [label="DDG: "];
"1000618" -> "1000624"  [label="DDG: "];
"1000541" -> "1000539"  [label="AST: "];
"1000541" -> "1000546"  [label="CFG: "];
"1000542" -> "1000541"  [label="AST: "];
"1000543" -> "1000541"  [label="AST: "];
"1000546" -> "1000541"  [label="AST: "];
"1000539" -> "1000541"  [label="CFG: "];
"1000541" -> "1000651"  [label="DDG: "];
"1000541" -> "1000651"  [label="DDG: "];
"1000541" -> "1000651"  [label="DDG: "];
"1000541" -> "1000539"  [label="DDG: "];
"1000541" -> "1000539"  [label="DDG: "];
"1000541" -> "1000539"  [label="DDG: "];
"1000508" -> "1000541"  [label="DDG: "];
"1000508" -> "1000541"  [label="DDG: "];
"1000119" -> "1000541"  [label="DDG: "];
"1000113" -> "1000541"  [label="DDG: "];
"1000541" -> "1000573"  [label="DDG: "];
"1000541" -> "1000635"  [label="DDG: "];
"1000541" -> "1000635"  [label="DDG: "];
"1000508" -> "1000506"  [label="AST: "];
"1000508" -> "1000513"  [label="CFG: "];
"1000509" -> "1000508"  [label="AST: "];
"1000510" -> "1000508"  [label="AST: "];
"1000513" -> "1000508"  [label="AST: "];
"1000506" -> "1000508"  [label="CFG: "];
"1000508" -> "1000651"  [label="DDG: "];
"1000508" -> "1000651"  [label="DDG: "];
"1000508" -> "1000651"  [label="DDG: "];
"1000508" -> "1000506"  [label="DDG: "];
"1000508" -> "1000506"  [label="DDG: "];
"1000508" -> "1000506"  [label="DDG: "];
"1000119" -> "1000508"  [label="DDG: "];
"1000113" -> "1000508"  [label="DDG: "];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000119" -> "1000117"  [label="DDG: "];
"1000113" -> "1000119"  [label="DDG: "];
"1000119" -> "1000169"  [label="DDG: "];
"1000119" -> "1000215"  [label="DDG: "];
"1000119" -> "1000223"  [label="DDG: "];
"1000119" -> "1000288"  [label="DDG: "];
"1000119" -> "1000296"  [label="DDG: "];
"1000119" -> "1000321"  [label="DDG: "];
"1000119" -> "1000329"  [label="DDG: "];
"1000119" -> "1000470"  [label="DDG: "];
"1000119" -> "1000500"  [label="DDG: "];
"1000119" -> "1000533"  [label="DDG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000651"  [label="DDG: "];
"1000113" -> "1000169"  [label="DDG: "];
"1000113" -> "1000215"  [label="DDG: "];
"1000113" -> "1000223"  [label="DDG: "];
"1000113" -> "1000234"  [label="DDG: "];
"1000113" -> "1000240"  [label="DDG: "];
"1000113" -> "1000251"  [label="DDG: "];
"1000113" -> "1000288"  [label="DDG: "];
"1000113" -> "1000296"  [label="DDG: "];
"1000113" -> "1000321"  [label="DDG: "];
"1000113" -> "1000329"  [label="DDG: "];
"1000113" -> "1000378"  [label="DDG: "];
"1000113" -> "1000384"  [label="DDG: "];
"1000113" -> "1000393"  [label="DDG: "];
"1000113" -> "1000470"  [label="DDG: "];
"1000113" -> "1000500"  [label="DDG: "];
"1000113" -> "1000533"  [label="DDG: "];
"1000113" -> "1000573"  [label="DDG: "];
"1000113" -> "1000635"  [label="DDG: "];
"1000113" -> "1000646"  [label="DDG: "];
"1000613" -> "1000612"  [label="AST: "];
"1000613" -> "1000617"  [label="CFG: "];
"1000614" -> "1000613"  [label="AST: "];
"1000617" -> "1000613"  [label="AST: "];
"1000620" -> "1000613"  [label="CFG: "];
"1000612" -> "1000613"  [label="CFG: "];
"1000613" -> "1000651"  [label="DDG: "];
"1000613" -> "1000612"  [label="DDG: "];
"1000613" -> "1000612"  [label="DDG: "];
"1000567" -> "1000613"  [label="DDG: "];
"1000489" -> "1000613"  [label="DDG: "];
"1000613" -> "1000618"  [label="DDG: "];
"1000567" -> "1000560"  [label="AST: "];
"1000567" -> "1000571"  [label="CFG: "];
"1000568" -> "1000567"  [label="AST: "];
"1000571" -> "1000567"  [label="AST: "];
"1000560" -> "1000567"  [label="CFG: "];
"1000567" -> "1000651"  [label="DDG: "];
"1000567" -> "1000560"  [label="DDG: "];
"1000567" -> "1000560"  [label="DDG: "];
"1000489" -> "1000567"  [label="DDG: "];
"1000489" -> "1000488"  [label="AST: "];
"1000489" -> "1000493"  [label="CFG: "];
"1000490" -> "1000489"  [label="AST: "];
"1000493" -> "1000489"  [label="AST: "];
"1000496" -> "1000489"  [label="CFG: "];
"1000488" -> "1000489"  [label="CFG: "];
"1000489" -> "1000651"  [label="DDG: "];
"1000489" -> "1000488"  [label="DDG: "];
"1000489" -> "1000488"  [label="DDG: "];
"1000618" -> "1000612"  [label="AST: "];
"1000618" -> "1000622"  [label="CFG: "];
"1000619" -> "1000618"  [label="AST: "];
"1000622" -> "1000618"  [label="AST: "];
"1000612" -> "1000618"  [label="CFG: "];
"1000618" -> "1000651"  [label="DDG: "];
"1000618" -> "1000651"  [label="DDG: "];
"1000618" -> "1000612"  [label="DDG: "];
"1000618" -> "1000612"  [label="DDG: "];
"1000600" -> "1000618"  [label="DDG: "];
"1000600" -> "1000598"  [label="AST: "];
"1000600" -> "1000602"  [label="CFG: "];
"1000601" -> "1000600"  [label="AST: "];
"1000602" -> "1000600"  [label="AST: "];
"1000615" -> "1000600"  [label="CFG: "];
"1000600" -> "1000651"  [label="DDG: "];
"1000600" -> "1000651"  [label="DDG: "];
}
