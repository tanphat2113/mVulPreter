digraph "0_linux_0c17d1d2c61936401f4702e1846e2c19b200f958_0@pointer" {
"1000470" [label="(Call,verbose(env, \"invalid BPF_ALU opcode %x\n\", opcode))"];
"1000119" [label="(Call,cur_regs(env))"];
"1000113" [label="(MethodParameterIn,struct bpf_verifier_env *env)"];
"1000466" [label="(Call,opcode > BPF_END)"];
"1000263" [label="(Call,opcode == BPF_MOV)"];
"1000131" [label="(Call,opcode == BPF_END)"];
"1000122" [label="(Call,opcode = BPF_OP(insn->code))"];
"1000124" [label="(Call,BPF_OP(insn->code))"];
"1000134" [label="(Call,opcode == BPF_NEG)"];
"1000209" [label="(Call,BPF_CLASS(insn->code))"];
"1000133" [label="(Identifier,BPF_END)"];
"1000465" [label="(ControlStructure,if (opcode > BPF_END))"];
"1000288" [label="(Call,verbose(env, \"BPF_MOV uses reserved fields\n\"))"];
"1000124" [label="(Call,BPF_OP(insn->code))"];
"1000541" [label="(Call,check_reg_arg(env, insn->dst_reg, SRC_OP))"];
"1000378" [label="(Call,is_pointer_value(env, insn->src_reg))"];
"1000646" [label="(Call,adjust_reg_min_max_vals(env, insn))"];
"1000265" [label="(Identifier,BPF_MOV)"];
"1000321" [label="(Call,verbose(env, \"BPF_MOV uses reserved fields\n\"))"];
"1000476" [label="(Identifier,EINVAL)"];
"1000329" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP))"];
"1000651" [label="(MethodReturn,static int)"];
"1000469" [label="(Block,)"];
"1000573" [label="(Call,verbose(env, \"div by zero\n\"))"];
"1000134" [label="(Call,opcode == BPF_NEG)"];
"1000123" [label="(Identifier,opcode)"];
"1000296" [label="(Call,check_reg_arg(env, insn->src_reg, SRC_OP))"];
"1000264" [label="(Identifier,opcode)"];
"1000125" [label="(Call,insn->code)"];
"1000115" [label="(Block,)"];
"1000119" [label="(Call,cur_regs(env))"];
"1000120" [label="(Identifier,env)"];
"1000508" [label="(Call,check_reg_arg(env, insn->src_reg, SRC_OP))"];
"1000251" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP))"];
"1000269" [label="(Call,BPF_SRC(insn->code))"];
"1000240" [label="(Call,verbose(env, \"R%d pointer arithmetic prohibited\n\",\n\t\t\t\tinsn->dst_reg))"];
"1000234" [label="(Call,is_pointer_value(env, insn->dst_reg))"];
"1000554" [label="(Call,opcode == BPF_MOD)"];
"1000130" [label="(Call,opcode == BPF_END || opcode == BPF_NEG)"];
"1000500" [label="(Call,verbose(env, \"BPF_ALU uses reserved fields\n\"))"];
"1000472" [label="(Literal,\"invalid BPF_ALU opcode %x\n\")"];
"1000468" [label="(Identifier,BPF_END)"];
"1000117" [label="(Call,*regs = cur_regs(env))"];
"1000466" [label="(Call,opcode > BPF_END)"];
"1000136" [label="(Identifier,BPF_NEG)"];
"1000135" [label="(Identifier,opcode)"];
"1000384" [label="(Call,verbose(env,\n\t\t\t\t\t\t\"R%d partial copy of pointer\n\",\n\t\t\t\t\t\tinsn->src_reg))"];
"1000146" [label="(Call,BPF_SRC(insn->code))"];
"1000473" [label="(Identifier,opcode)"];
"1000139" [label="(Call,opcode == BPF_NEG)"];
"1000215" [label="(Call,verbose(env, \"BPF_END uses reserved fields\n\"))"];
"1000483" [label="(Identifier,insn)"];
"1000624" [label="(Call,verbose(env, \"invalid shift %d\n\", insn->imm))"];
"1000271" [label="(Identifier,insn)"];
"1000113" [label="(MethodParameterIn,struct bpf_verifier_env *env)"];
"1000635" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP_NO_MARK))"];
"1000223" [label="(Call,check_reg_arg(env, insn->dst_reg, SRC_OP))"];
"1000132" [label="(Identifier,opcode)"];
"1000122" [label="(Call,opcode = BPF_OP(insn->code))"];
"1000467" [label="(Identifier,opcode)"];
"1000470" [label="(Call,verbose(env, \"invalid BPF_ALU opcode %x\n\", opcode))"];
"1000393" [label="(Call,mark_reg_unknown(env, regs, insn->dst_reg))"];
"1000262" [label="(ControlStructure,if (opcode == BPF_MOV))"];
"1000471" [label="(Identifier,env)"];
"1000131" [label="(Call,opcode == BPF_END)"];
"1000481" [label="(Call,BPF_SRC(insn->code))"];
"1000169" [label="(Call,verbose(env, \"BPF_NEG uses reserved fields\n\"))"];
"1000263" [label="(Call,opcode == BPF_MOV)"];
"1000533" [label="(Call,verbose(env, \"BPF_ALU uses reserved fields\n\"))"];
"1000470" -> "1000469"  [label="AST: "];
"1000470" -> "1000473"  [label="CFG: "];
"1000471" -> "1000470"  [label="AST: "];
"1000472" -> "1000470"  [label="AST: "];
"1000473" -> "1000470"  [label="AST: "];
"1000476" -> "1000470"  [label="CFG: "];
"1000470" -> "1000651"  [label="DDG: "];
"1000470" -> "1000651"  [label="DDG: "];
"1000470" -> "1000651"  [label="DDG: "];
"1000119" -> "1000470"  [label="DDG: "];
"1000113" -> "1000470"  [label="DDG: "];
"1000466" -> "1000470"  [label="DDG: "];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000119" -> "1000117"  [label="DDG: "];
"1000113" -> "1000119"  [label="DDG: "];
"1000119" -> "1000169"  [label="DDG: "];
"1000119" -> "1000215"  [label="DDG: "];
"1000119" -> "1000223"  [label="DDG: "];
"1000119" -> "1000288"  [label="DDG: "];
"1000119" -> "1000296"  [label="DDG: "];
"1000119" -> "1000321"  [label="DDG: "];
"1000119" -> "1000329"  [label="DDG: "];
"1000119" -> "1000500"  [label="DDG: "];
"1000119" -> "1000508"  [label="DDG: "];
"1000119" -> "1000533"  [label="DDG: "];
"1000119" -> "1000541"  [label="DDG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000651"  [label="DDG: "];
"1000113" -> "1000169"  [label="DDG: "];
"1000113" -> "1000215"  [label="DDG: "];
"1000113" -> "1000223"  [label="DDG: "];
"1000113" -> "1000234"  [label="DDG: "];
"1000113" -> "1000240"  [label="DDG: "];
"1000113" -> "1000251"  [label="DDG: "];
"1000113" -> "1000288"  [label="DDG: "];
"1000113" -> "1000296"  [label="DDG: "];
"1000113" -> "1000321"  [label="DDG: "];
"1000113" -> "1000329"  [label="DDG: "];
"1000113" -> "1000378"  [label="DDG: "];
"1000113" -> "1000384"  [label="DDG: "];
"1000113" -> "1000393"  [label="DDG: "];
"1000113" -> "1000500"  [label="DDG: "];
"1000113" -> "1000508"  [label="DDG: "];
"1000113" -> "1000533"  [label="DDG: "];
"1000113" -> "1000541"  [label="DDG: "];
"1000113" -> "1000573"  [label="DDG: "];
"1000113" -> "1000624"  [label="DDG: "];
"1000113" -> "1000635"  [label="DDG: "];
"1000113" -> "1000646"  [label="DDG: "];
"1000466" -> "1000465"  [label="AST: "];
"1000466" -> "1000468"  [label="CFG: "];
"1000467" -> "1000466"  [label="AST: "];
"1000468" -> "1000466"  [label="AST: "];
"1000471" -> "1000466"  [label="CFG: "];
"1000483" -> "1000466"  [label="CFG: "];
"1000466" -> "1000651"  [label="DDG: "];
"1000466" -> "1000651"  [label="DDG: "];
"1000466" -> "1000651"  [label="DDG: "];
"1000263" -> "1000466"  [label="DDG: "];
"1000131" -> "1000466"  [label="DDG: "];
"1000466" -> "1000554"  [label="DDG: "];
"1000263" -> "1000262"  [label="AST: "];
"1000263" -> "1000265"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000263"  [label="AST: "];
"1000271" -> "1000263"  [label="CFG: "];
"1000467" -> "1000263"  [label="CFG: "];
"1000263" -> "1000651"  [label="DDG: "];
"1000263" -> "1000651"  [label="DDG: "];
"1000263" -> "1000651"  [label="DDG: "];
"1000131" -> "1000263"  [label="DDG: "];
"1000134" -> "1000263"  [label="DDG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000133"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="AST: "];
"1000135" -> "1000131"  [label="CFG: "];
"1000130" -> "1000131"  [label="CFG: "];
"1000131" -> "1000651"  [label="DDG: "];
"1000131" -> "1000130"  [label="DDG: "];
"1000131" -> "1000130"  [label="DDG: "];
"1000122" -> "1000131"  [label="DDG: "];
"1000131" -> "1000134"  [label="DDG: "];
"1000131" -> "1000139"  [label="DDG: "];
"1000122" -> "1000115"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000132" -> "1000122"  [label="CFG: "];
"1000122" -> "1000651"  [label="DDG: "];
"1000124" -> "1000122"  [label="DDG: "];
"1000124" -> "1000125"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000124" -> "1000651"  [label="DDG: "];
"1000124" -> "1000146"  [label="DDG: "];
"1000124" -> "1000209"  [label="DDG: "];
"1000124" -> "1000269"  [label="DDG: "];
"1000124" -> "1000481"  [label="DDG: "];
"1000134" -> "1000130"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000130" -> "1000134"  [label="CFG: "];
"1000134" -> "1000651"  [label="DDG: "];
"1000134" -> "1000130"  [label="DDG: "];
"1000134" -> "1000130"  [label="DDG: "];
"1000134" -> "1000139"  [label="DDG: "];
"1000134" -> "1000139"  [label="DDG: "];
}
