digraph "0_linux_0c17d1d2c61936401f4702e1846e2c19b200f958_0@pointer" {
"1000646" [label="(Call,adjust_reg_min_max_vals(env, insn))"];
"1000635" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP_NO_MARK))"];
"1000541" [label="(Call,check_reg_arg(env, insn->dst_reg, SRC_OP))"];
"1000508" [label="(Call,check_reg_arg(env, insn->src_reg, SRC_OP))"];
"1000119" [label="(Call,cur_regs(env))"];
"1000113" [label="(MethodParameterIn,struct bpf_verifier_env *env)"];
"1000114" [label="(MethodParameterIn,struct bpf_insn *insn)"];
"1000645" [label="(Return,return adjust_reg_min_max_vals(env, insn);)"];
"1000288" [label="(Call,verbose(env, \"BPF_MOV uses reserved fields\n\"))"];
"1000646" [label="(Call,adjust_reg_min_max_vals(env, insn))"];
"1000541" [label="(Call,check_reg_arg(env, insn->dst_reg, SRC_OP))"];
"1000378" [label="(Call,is_pointer_value(env, insn->src_reg))"];
"1000114" [label="(MethodParameterIn,struct bpf_insn *insn)"];
"1000636" [label="(Identifier,env)"];
"1000321" [label="(Call,verbose(env, \"BPF_MOV uses reserved fields\n\"))"];
"1000645" [label="(Return,return adjust_reg_min_max_vals(env, insn);)"];
"1000329" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP))"];
"1000651" [label="(MethodReturn,static int)"];
"1000573" [label="(Call,verbose(env, \"div by zero\n\"))"];
"1000542" [label="(Identifier,env)"];
"1000509" [label="(Identifier,env)"];
"1000296" [label="(Call,check_reg_arg(env, insn->src_reg, SRC_OP))"];
"1000648" [label="(Identifier,insn)"];
"1000513" [label="(Identifier,SRC_OP)"];
"1000640" [label="(Identifier,DST_OP_NO_MARK)"];
"1000119" [label="(Call,cur_regs(env))"];
"1000647" [label="(Identifier,env)"];
"1000508" [label="(Call,check_reg_arg(env, insn->src_reg, SRC_OP))"];
"1000120" [label="(Identifier,env)"];
"1000251" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP))"];
"1000240" [label="(Call,verbose(env, \"R%d pointer arithmetic prohibited\n\",\n\t\t\t\tinsn->dst_reg))"];
"1000234" [label="(Call,is_pointer_value(env, insn->dst_reg))"];
"1000510" [label="(Call,insn->src_reg)"];
"1000500" [label="(Call,verbose(env, \"BPF_ALU uses reserved fields\n\"))"];
"1000117" [label="(Call,*regs = cur_regs(env))"];
"1000478" [label="(Block,)"];
"1000384" [label="(Call,verbose(env,\n\t\t\t\t\t\t\"R%d partial copy of pointer\n\",\n\t\t\t\t\t\tinsn->src_reg))"];
"1000546" [label="(Identifier,SRC_OP)"];
"1000215" [label="(Call,verbose(env, \"BPF_END uses reserved fields\n\"))"];
"1000624" [label="(Call,verbose(env, \"invalid shift %d\n\", insn->imm))"];
"1000113" [label="(MethodParameterIn,struct bpf_verifier_env *env)"];
"1000635" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP_NO_MARK))"];
"1000539" [label="(Call,err = check_reg_arg(env, insn->dst_reg, SRC_OP))"];
"1000223" [label="(Call,check_reg_arg(env, insn->dst_reg, SRC_OP))"];
"1000543" [label="(Call,insn->dst_reg)"];
"1000633" [label="(Call,err = check_reg_arg(env, insn->dst_reg, DST_OP_NO_MARK))"];
"1000470" [label="(Call,verbose(env, \"invalid BPF_ALU opcode %x\n\", opcode))"];
"1000506" [label="(Call,err = check_reg_arg(env, insn->src_reg, SRC_OP))"];
"1000393" [label="(Call,mark_reg_unknown(env, regs, insn->dst_reg))"];
"1000637" [label="(Call,insn->dst_reg)"];
"1000169" [label="(Call,verbose(env, \"BPF_NEG uses reserved fields\n\"))"];
"1000533" [label="(Call,verbose(env, \"BPF_ALU uses reserved fields\n\"))"];
"1000646" -> "1000645"  [label="AST: "];
"1000646" -> "1000648"  [label="CFG: "];
"1000647" -> "1000646"  [label="AST: "];
"1000648" -> "1000646"  [label="AST: "];
"1000645" -> "1000646"  [label="CFG: "];
"1000646" -> "1000651"  [label="DDG: adjust_reg_min_max_vals(env, insn)"];
"1000646" -> "1000651"  [label="DDG: env"];
"1000646" -> "1000651"  [label="DDG: insn"];
"1000646" -> "1000645"  [label="DDG: adjust_reg_min_max_vals(env, insn)"];
"1000635" -> "1000646"  [label="DDG: env"];
"1000113" -> "1000646"  [label="DDG: env"];
"1000114" -> "1000646"  [label="DDG: insn"];
"1000635" -> "1000633"  [label="AST: "];
"1000635" -> "1000640"  [label="CFG: "];
"1000636" -> "1000635"  [label="AST: "];
"1000637" -> "1000635"  [label="AST: "];
"1000640" -> "1000635"  [label="AST: "];
"1000633" -> "1000635"  [label="CFG: "];
"1000635" -> "1000651"  [label="DDG: DST_OP_NO_MARK"];
"1000635" -> "1000651"  [label="DDG: insn->dst_reg"];
"1000635" -> "1000651"  [label="DDG: env"];
"1000635" -> "1000633"  [label="DDG: env"];
"1000635" -> "1000633"  [label="DDG: insn->dst_reg"];
"1000635" -> "1000633"  [label="DDG: DST_OP_NO_MARK"];
"1000541" -> "1000635"  [label="DDG: env"];
"1000541" -> "1000635"  [label="DDG: insn->dst_reg"];
"1000113" -> "1000635"  [label="DDG: env"];
"1000541" -> "1000539"  [label="AST: "];
"1000541" -> "1000546"  [label="CFG: "];
"1000542" -> "1000541"  [label="AST: "];
"1000543" -> "1000541"  [label="AST: "];
"1000546" -> "1000541"  [label="AST: "];
"1000539" -> "1000541"  [label="CFG: "];
"1000541" -> "1000651"  [label="DDG: SRC_OP"];
"1000541" -> "1000651"  [label="DDG: env"];
"1000541" -> "1000651"  [label="DDG: insn->dst_reg"];
"1000541" -> "1000539"  [label="DDG: env"];
"1000541" -> "1000539"  [label="DDG: insn->dst_reg"];
"1000541" -> "1000539"  [label="DDG: SRC_OP"];
"1000508" -> "1000541"  [label="DDG: env"];
"1000508" -> "1000541"  [label="DDG: SRC_OP"];
"1000119" -> "1000541"  [label="DDG: env"];
"1000113" -> "1000541"  [label="DDG: env"];
"1000541" -> "1000573"  [label="DDG: env"];
"1000541" -> "1000624"  [label="DDG: env"];
"1000508" -> "1000506"  [label="AST: "];
"1000508" -> "1000513"  [label="CFG: "];
"1000509" -> "1000508"  [label="AST: "];
"1000510" -> "1000508"  [label="AST: "];
"1000513" -> "1000508"  [label="AST: "];
"1000506" -> "1000508"  [label="CFG: "];
"1000508" -> "1000651"  [label="DDG: env"];
"1000508" -> "1000651"  [label="DDG: SRC_OP"];
"1000508" -> "1000651"  [label="DDG: insn->src_reg"];
"1000508" -> "1000506"  [label="DDG: env"];
"1000508" -> "1000506"  [label="DDG: insn->src_reg"];
"1000508" -> "1000506"  [label="DDG: SRC_OP"];
"1000119" -> "1000508"  [label="DDG: env"];
"1000113" -> "1000508"  [label="DDG: env"];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000119" -> "1000117"  [label="DDG: env"];
"1000113" -> "1000119"  [label="DDG: env"];
"1000119" -> "1000169"  [label="DDG: env"];
"1000119" -> "1000215"  [label="DDG: env"];
"1000119" -> "1000223"  [label="DDG: env"];
"1000119" -> "1000288"  [label="DDG: env"];
"1000119" -> "1000296"  [label="DDG: env"];
"1000119" -> "1000321"  [label="DDG: env"];
"1000119" -> "1000329"  [label="DDG: env"];
"1000119" -> "1000470"  [label="DDG: env"];
"1000119" -> "1000500"  [label="DDG: env"];
"1000119" -> "1000533"  [label="DDG: env"];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000651"  [label="DDG: env"];
"1000113" -> "1000169"  [label="DDG: env"];
"1000113" -> "1000215"  [label="DDG: env"];
"1000113" -> "1000223"  [label="DDG: env"];
"1000113" -> "1000234"  [label="DDG: env"];
"1000113" -> "1000240"  [label="DDG: env"];
"1000113" -> "1000251"  [label="DDG: env"];
"1000113" -> "1000288"  [label="DDG: env"];
"1000113" -> "1000296"  [label="DDG: env"];
"1000113" -> "1000321"  [label="DDG: env"];
"1000113" -> "1000329"  [label="DDG: env"];
"1000113" -> "1000378"  [label="DDG: env"];
"1000113" -> "1000384"  [label="DDG: env"];
"1000113" -> "1000393"  [label="DDG: env"];
"1000113" -> "1000470"  [label="DDG: env"];
"1000113" -> "1000500"  [label="DDG: env"];
"1000113" -> "1000533"  [label="DDG: env"];
"1000113" -> "1000573"  [label="DDG: env"];
"1000113" -> "1000624"  [label="DDG: env"];
"1000114" -> "1000112"  [label="AST: "];
"1000114" -> "1000651"  [label="DDG: insn"];
"1000645" -> "1000478"  [label="AST: "];
"1000651" -> "1000645"  [label="CFG: "];
"1000645" -> "1000651"  [label="DDG: <RET>"];
}
