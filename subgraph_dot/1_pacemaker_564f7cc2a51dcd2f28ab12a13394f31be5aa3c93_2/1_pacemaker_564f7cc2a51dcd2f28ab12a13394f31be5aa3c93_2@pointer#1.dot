digraph "1_pacemaker_564f7cc2a51dcd2f28ab12a13394f31be5aa3c93_2@pointer" {
"1000425" [label="(Call,new_client->remote = mainloop_add_fd(\n         \"cib-remote-client\", G_PRIORITY_DEFAULT, csock, new_client, &remote_client_fd_callbacks))"];
"1000429" [label="(Call,mainloop_add_fd(\n         \"cib-remote-client\", G_PRIORITY_DEFAULT, csock, new_client, &remote_client_fd_callbacks))"];
"1000396" [label="(Call,GINT_TO_POINTER(csock))"];
"1000190" [label="(Call,csock == -1)"];
"1000167" [label="(Call,csock = accept(ssock, (struct sockaddr *)&addr, &laddr))"];
"1000169" [label="(Call,accept(ssock, (struct sockaddr *)&addr, &laddr))"];
"1000129" [label="(Call,ssock = *(int *)data)"];
"1000171" [label="(Call,(struct sockaddr *)&addr)"];
"1000192" [label="(Call,-1)"];
"1000206" [label="(Call,create_tls_session(csock, GNUTLS_SERVER))"];
"1000241" [label="(Call,GINT_TO_POINTER(csock))"];
"1000336" [label="(Call,new_client = calloc(1, sizeof(cib_client_t)))"];
"1000338" [label="(Call,calloc(1, sizeof(cib_client_t)))"];
"1000193" [label="(Literal,1)"];
"1000425" [label="(Call,new_client->remote = mainloop_add_fd(\n         \"cib-remote-client\", G_PRIORITY_DEFAULT, csock, new_client, &remote_client_fd_callbacks))"];
"1000241" [label="(Call,GINT_TO_POINTER(csock))"];
"1000206" [label="(Call,create_tls_session(csock, GNUTLS_SERVER))"];
"1000204" [label="(Call,session = create_tls_session(csock, GNUTLS_SERVER))"];
"1000431" [label="(Identifier,G_PRIORITY_DEFAULT)"];
"1000208" [label="(Identifier,GNUTLS_SERVER)"];
"1000340" [label="(Call,sizeof(cib_client_t))"];
"1000216" [label="(Call,close(csock))"];
"1000434" [label="(Call,&remote_client_fd_callbacks)"];
"1000430" [label="(Literal,\"cib-remote-client\")"];
"1000178" [label="(Literal,\"New %s connection from %s\")"];
"1000433" [label="(Identifier,new_client)"];
"1000336" [label="(Call,new_client = calloc(1, sizeof(cib_client_t)))"];
"1000201" [label="(Identifier,ssock)"];
"1000130" [label="(Identifier,ssock)"];
"1000459" [label="(Call,close(csock))"];
"1000168" [label="(Identifier,csock)"];
"1000180" [label="(Call,ssock == remote_tls_fd)"];
"1000429" [label="(Call,mainloop_add_fd(\n         \"cib-remote-client\", G_PRIORITY_DEFAULT, csock, new_client, &remote_client_fd_callbacks))"];
"1000196" [label="(Literal,\"accept socket failed\")"];
"1000171" [label="(Call,(struct sockaddr *)&addr)"];
"1000169" [label="(Call,accept(ssock, (struct sockaddr *)&addr, &laddr))"];
"1000242" [label="(Identifier,csock)"];
"1000175" [label="(Call,&laddr)"];
"1000129" [label="(Call,ssock = *(int *)data)"];
"1000131" [label="(Call,*(int *)data)"];
"1000176" [label="(Identifier,laddr)"];
"1000137" [label="(Identifier,session)"];
"1000437" [label="(Identifier,client_list)"];
"1000465" [label="(MethodReturn,RET)"];
"1000436" [label="(Call,g_hash_table_insert(client_list, new_client->id, new_client))"];
"1000397" [label="(Identifier,csock)"];
"1000337" [label="(Identifier,new_client)"];
"1000344" [label="(Identifier,new_client)"];
"1000338" [label="(Call,calloc(1, sizeof(cib_client_t)))"];
"1000426" [label="(Call,new_client->remote)"];
"1000392" [label="(Call,new_client->session = GINT_TO_POINTER(csock))"];
"1000108" [label="(Block,)"];
"1000432" [label="(Identifier,csock)"];
"1000167" [label="(Call,csock = accept(ssock, (struct sockaddr *)&addr, &laddr))"];
"1000243" [label="(Identifier,FALSE)"];
"1000189" [label="(ControlStructure,if (csock == -1))"];
"1000396" [label="(Call,GINT_TO_POINTER(csock))"];
"1000191" [label="(Identifier,csock)"];
"1000240" [label="(Call,crm_recv_remote_msg(GINT_TO_POINTER(csock), FALSE))"];
"1000170" [label="(Identifier,ssock)"];
"1000173" [label="(Call,&addr)"];
"1000339" [label="(Literal,1)"];
"1000190" [label="(Call,csock == -1)"];
"1000192" [label="(Call,-1)"];
"1000207" [label="(Identifier,csock)"];
"1000425" -> "1000108"  [label="AST: "];
"1000425" -> "1000429"  [label="CFG: "];
"1000426" -> "1000425"  [label="AST: "];
"1000429" -> "1000425"  [label="AST: "];
"1000437" -> "1000425"  [label="CFG: "];
"1000425" -> "1000465"  [label="DDG: "];
"1000425" -> "1000465"  [label="DDG: "];
"1000429" -> "1000425"  [label="DDG: "];
"1000429" -> "1000425"  [label="DDG: "];
"1000429" -> "1000425"  [label="DDG: "];
"1000429" -> "1000425"  [label="DDG: "];
"1000429" -> "1000425"  [label="DDG: "];
"1000429" -> "1000434"  [label="CFG: "];
"1000430" -> "1000429"  [label="AST: "];
"1000431" -> "1000429"  [label="AST: "];
"1000432" -> "1000429"  [label="AST: "];
"1000433" -> "1000429"  [label="AST: "];
"1000434" -> "1000429"  [label="AST: "];
"1000429" -> "1000465"  [label="DDG: "];
"1000429" -> "1000465"  [label="DDG: "];
"1000429" -> "1000465"  [label="DDG: "];
"1000396" -> "1000429"  [label="DDG: "];
"1000190" -> "1000429"  [label="DDG: "];
"1000206" -> "1000429"  [label="DDG: "];
"1000241" -> "1000429"  [label="DDG: "];
"1000336" -> "1000429"  [label="DDG: "];
"1000429" -> "1000436"  [label="DDG: "];
"1000396" -> "1000392"  [label="AST: "];
"1000396" -> "1000397"  [label="CFG: "];
"1000397" -> "1000396"  [label="AST: "];
"1000392" -> "1000396"  [label="CFG: "];
"1000396" -> "1000392"  [label="DDG: "];
"1000190" -> "1000396"  [label="DDG: "];
"1000206" -> "1000396"  [label="DDG: "];
"1000241" -> "1000396"  [label="DDG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000190" -> "1000192"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000192" -> "1000190"  [label="AST: "];
"1000196" -> "1000190"  [label="CFG: "];
"1000201" -> "1000190"  [label="CFG: "];
"1000190" -> "1000465"  [label="DDG: "];
"1000190" -> "1000465"  [label="DDG: "];
"1000190" -> "1000465"  [label="DDG: "];
"1000167" -> "1000190"  [label="DDG: "];
"1000192" -> "1000190"  [label="DDG: "];
"1000190" -> "1000206"  [label="DDG: "];
"1000190" -> "1000241"  [label="DDG: "];
"1000190" -> "1000459"  [label="DDG: "];
"1000167" -> "1000108"  [label="AST: "];
"1000167" -> "1000169"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000169" -> "1000167"  [label="AST: "];
"1000178" -> "1000167"  [label="CFG: "];
"1000167" -> "1000465"  [label="DDG: "];
"1000169" -> "1000167"  [label="DDG: "];
"1000169" -> "1000167"  [label="DDG: "];
"1000169" -> "1000167"  [label="DDG: "];
"1000169" -> "1000175"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000171" -> "1000169"  [label="AST: "];
"1000175" -> "1000169"  [label="AST: "];
"1000169" -> "1000465"  [label="DDG: "];
"1000169" -> "1000465"  [label="DDG: "];
"1000129" -> "1000169"  [label="DDG: "];
"1000171" -> "1000169"  [label="DDG: "];
"1000169" -> "1000180"  [label="DDG: "];
"1000129" -> "1000108"  [label="AST: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000129"  [label="AST: "];
"1000137" -> "1000129"  [label="CFG: "];
"1000129" -> "1000465"  [label="DDG: "];
"1000171" -> "1000173"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="AST: "];
"1000176" -> "1000171"  [label="CFG: "];
"1000171" -> "1000465"  [label="DDG: "];
"1000192" -> "1000193"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000206" -> "1000204"  [label="AST: "];
"1000206" -> "1000208"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000206"  [label="AST: "];
"1000204" -> "1000206"  [label="CFG: "];
"1000206" -> "1000465"  [label="DDG: "];
"1000206" -> "1000204"  [label="DDG: "];
"1000206" -> "1000204"  [label="DDG: "];
"1000206" -> "1000216"  [label="DDG: "];
"1000206" -> "1000241"  [label="DDG: "];
"1000206" -> "1000459"  [label="DDG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000241" -> "1000242"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="CFG: "];
"1000241" -> "1000240"  [label="DDG: "];
"1000241" -> "1000459"  [label="DDG: "];
"1000336" -> "1000108"  [label="AST: "];
"1000336" -> "1000338"  [label="CFG: "];
"1000337" -> "1000336"  [label="AST: "];
"1000338" -> "1000336"  [label="AST: "];
"1000344" -> "1000336"  [label="CFG: "];
"1000336" -> "1000465"  [label="DDG: "];
"1000338" -> "1000336"  [label="DDG: "];
"1000338" -> "1000340"  [label="CFG: "];
"1000339" -> "1000338"  [label="AST: "];
"1000340" -> "1000338"  [label="AST: "];
}
