digraph "0_frr_943d595a018e69b550db08cccba1d0778a86705a_0@API" {
"1001159" [label="(Call,aspath_delete_confed_seq(aspath))"];
"1000408" [label="(Call,aspath_has_as4(aspath))"];
"1000400" [label="(Call,aspath_put(s, aspath, use32bit))"];
"1000394" [label="(Call,stream_putw(s, 0))"];
"1000392" [label="(Call,stream_get_endp(s))"];
"1000387" [label="(Call,stream_putc(s, BGP_ATTR_AS_PATH))"];
"1000382" [label="(Call,stream_putc(s, BGP_ATTR_FLAG_TRANS | BGP_ATTR_FLAG_EXTLEN))"];
"1000251" [label="(Call,stream_putc(s, attr->origin))"];
"1000248" [label="(Call,stream_putc(s, 1))"];
"1000245" [label="(Call,stream_putc(s, BGP_ATTR_ORIGIN))"];
"1000242" [label="(Call,stream_putc(s, BGP_ATTR_FLAG_TRANS))"];
"1000239" [label="(Call,bgp_packet_mpattr_end(s, mpattrlen_pos))"];
"1000228" [label="(Call,bgp_packet_mpattr_prefix(s, afi, safi, p, prd, label,\n\t\t\t\t\t num_labels, addpath_encode,\n\t\t\t\t\t addpath_tx_id, attr))"];
"1000221" [label="(Call,bgp_packet_mpattr_start(s, peer, afi, safi,\n\t\t\t\t\t\t\tvecarr, attr))"];
"1000195" [label="(Call,stream_get_endp(s))"];
"1000150" [label="(MethodParameterIn,struct stream *s)"];
"1000210" [label="(Call,peer_cap_enhe(peer, afi, safi))"];
"1000149" [label="(MethodParameterIn,struct peer *peer)"];
"1000203" [label="(Call,afi == AFI_IP)"];
"1000154" [label="(MethodParameterIn,afi_t afi)"];
"1000206" [label="(Call,safi == SAFI_UNICAST)"];
"1000155" [label="(MethodParameterIn,safi_t safi)"];
"1000152" [label="(MethodParameterIn,struct bpacket_attr_vec_arr *vecarr)"];
"1000151" [label="(MethodParameterIn,struct attr *attr)"];
"1000198" [label="(Call,p\n\t    && !((afi == AFI_IP && safi == SAFI_UNICAST)\n\t\t && !peer_cap_enhe(peer, afi, safi)))"];
"1000153" [label="(MethodParameterIn,struct prefix *p)"];
"1000200" [label="(Call,!((afi == AFI_IP && safi == SAFI_UNICAST)\n\t\t && !peer_cap_enhe(peer, afi, safi)))"];
"1000201" [label="(Call,(afi == AFI_IP && safi == SAFI_UNICAST)\n\t\t && !peer_cap_enhe(peer, afi, safi))"];
"1000202" [label="(Call,afi == AFI_IP && safi == SAFI_UNICAST)"];
"1000209" [label="(Call,!peer_cap_enhe(peer, afi, safi))"];
"1000157" [label="(MethodParameterIn,struct prefix_rd *prd)"];
"1000158" [label="(MethodParameterIn,mpls_label_t *label)"];
"1000159" [label="(MethodParameterIn,uint32_t num_labels)"];
"1000160" [label="(MethodParameterIn,int addpath_encode)"];
"1000161" [label="(MethodParameterIn,uint32_t addpath_tx_id)"];
"1000219" [label="(Call,mpattrlen_pos = bgp_packet_mpattr_start(s, peer, afi, safi,\n\t\t\t\t\t\t\tvecarr, attr))"];
"1000384" [label="(Call,BGP_ATTR_FLAG_TRANS | BGP_ATTR_FLAG_EXTLEN)"];
"1000348" [label="(Call,aspath = aspath_add_seq(aspath, peer->local_as))"];
"1000350" [label="(Call,aspath_add_seq(aspath, peer->local_as))"];
"1000299" [label="(Call,aspath = aspath_delete_confed_seq(aspath))"];
"1000301" [label="(Call,aspath_delete_confed_seq(aspath))"];
"1000293" [label="(Call,aspath = aspath_dup(attr->aspath))"];
"1000295" [label="(Call,aspath_dup(attr->aspath))"];
"1000369" [label="(Call,aspath = aspath_add_confed_seq(aspath, peer->local_as))"];
"1000371" [label="(Call,aspath_add_confed_seq(aspath, peer->local_as))"];
"1000363" [label="(Call,aspath = aspath_dup(attr->aspath))"];
"1000365" [label="(Call,aspath_dup(attr->aspath))"];
"1000310" [label="(Call,aspath = aspath_add_seq(aspath, bgp->confed_id))"];
"1000312" [label="(Call,aspath_add_seq(aspath, bgp->confed_id))"];
"1000377" [label="(Call,aspath = attr->aspath)"];
"1000339" [label="(Call,aspath = aspath_add_seq(aspath,\n\t\t\t\t\t\t\tpeer->change_local_as))"];
"1000341" [label="(Call,aspath_add_seq(aspath,\n\t\t\t\t\t\t\tpeer->change_local_as))"];
"1000332" [label="(Call,aspath = aspath_add_seq(aspath,\n\t\t\t\t\t\t\t\tpeer->local_as))"];
"1000334" [label="(Call,aspath_add_seq(aspath,\n\t\t\t\t\t\t\t\tpeer->local_as))"];
"1000175" [label="(Call,use32bit = (CHECK_FLAG(peer->cap, PEER_CAP_AS4_RCV)) ? 1 : 0)"];
"1001157" [label="(Call,aspath = aspath_delete_confed_seq(aspath))"];
"1001181" [label="(Call,aspath_put(s, aspath, 1))"];
"1001178" [label="(Call,stream_putw_at(s, aspath_sizep, aspath_put(s, aspath, 1)))"];
"1001196" [label="(Call,stream_putc(s, BGP_ATTR_FLAG_OPTIONAL | BGP_ATTR_FLAG_TRANS))"];
"1001201" [label="(Call,stream_putc(s, BGP_ATTR_AS4_AGGREGATOR))"];
"1001204" [label="(Call,stream_putc(s, 8))"];
"1001207" [label="(Call,stream_putl(s, attr->aggregator_as))"];
"1001212" [label="(Call,stream_put_ipv4(s, attr->aggregator_addr.s_addr))"];
"1001244" [label="(Call,bgp_packet_mpattr_tea(bgp, peer, s, attr, BGP_ATTR_ENCAP))"];
"1001250" [label="(Call,bgp_packet_mpattr_tea(bgp, peer, s, attr, BGP_ATTR_VNC))"];
"1001264" [label="(Call,stream_putc(s, BGP_ATTR_FLAG_OPTIONAL | BGP_ATTR_FLAG_TRANS))"];
"1001269" [label="(Call,stream_putc(s, BGP_ATTR_PMSI_TUNNEL))"];
"1001272" [label="(Call,stream_putc(s, 9))"];
"1001275" [label="(Call,stream_putc(s, 0))"];
"1001278" [label="(Call,stream_putc(s, PMSI_TNLTYPE_INGR_REPL))"];
"1001281" [label="(Call,stream_put(s, &(attr->label),\n\t\t\t   BGP_LABEL_BYTES))"];
"1001288" [label="(Call,stream_put_ipv4(s, attr->nexthop.s_addr))"];
"1001299" [label="(Call,stream_put(s, attr->transit->val, attr->transit->length))"];
"1001313" [label="(Call,stream_get_endp(s))"];
"1001312" [label="(Call,stream_get_endp(s) - cp)"];
"1001311" [label="(Return,return stream_get_endp(s) - cp;)"];
"1001186" [label="(Call,aspath != attr->aspath)"];
"1001191" [label="(Call,aspath_free(aspath))"];
"1000351" [label="(Identifier,aspath)"];
"1000149" [label="(MethodParameterIn,struct peer *peer)"];
"1000418" [label="(Call,safi == SAFI_UNICAST\n\t    && !peer_cap_enhe(peer, afi, safi))"];
"1001213" [label="(Identifier,s)"];
"1001061" [label="(Call,stream_putc(s, ecom_tr_size * 8))"];
"1000161" [label="(MethodParameterIn,uint32_t addpath_tx_id)"];
"1001261" [label="(Call,ATTR_FLAG_BIT(BGP_ATTR_PMSI_TUNNEL))"];
"1001040" [label="(Call,BGP_ATTR_FLAG_TRANS\n\t\t\t\t\t\t\t| BGP_ATTR_FLAG_EXTLEN)"];
"1001224" [label="(Identifier,afi)"];
"1001043" [label="(Call,stream_putc(s,\n\t\t\t\t\t\t    BGP_ATTR_EXT_COMMUNITIES))"];
"1000745" [label="(Call,BGP_ATTR_FLAG_OPTIONAL\n\t\t\t\t\t    | BGP_ATTR_FLAG_TRANS)"];
"1000306" [label="(Identifier,bgp)"];
"1000502" [label="(Call,stream_putl(s, (bgp->maxmed_active ? bgp->maxmed_value\n\t\t\t\t\t\t   : attr->med)))"];
"1000334" [label="(Call,aspath_add_seq(aspath,\n\t\t\t\t\t\t\t\tpeer->local_as))"];
"1000398" [label="(Identifier,s)"];
"1001208" [label="(Identifier,s)"];
"1000348" [label="(Call,aspath = aspath_add_seq(aspath, peer->local_as))"];
"1000311" [label="(Identifier,aspath)"];
"1000958" [label="(Call,stream_putc(s, attr->ecommunity->size * 8))"];
"1000950" [label="(Call,stream_putc(s,\n\t\t\t\t\t    BGP_ATTR_FLAG_OPTIONAL\n\t\t\t\t\t\t    | BGP_ATTR_FLAG_TRANS))"];
"1001163" [label="(Call,BGP_ATTR_FLAG_TRANS | BGP_ATTR_FLAG_OPTIONAL\n\t\t\t\t    | BGP_ATTR_FLAG_EXTLEN)"];
"1000302" [label="(Identifier,aspath)"];
"1000729" [label="(Call,BGP_ATTR_FLAG_TRANS\n\t\t\t\t\t    | BGP_ATTR_FLAG_EXTLEN)"];
"1000533" [label="(Call,stream_putc(s, 4))"];
"1001180" [label="(Identifier,aspath_sizep)"];
"1000673" [label="(Call,stream_putc(s, BGP_ATTR_COMMUNITIES))"];
"1000530" [label="(Call,stream_putc(s, BGP_ATTR_LOCAL_PREF))"];
"1000186" [label="(Call,!bgp)"];
"1001133" [label="(Call,stream_putc(s, BGP_ATTR_PREFIX_SID))"];
"1000566" [label="(Call,stream_putc(s, BGP_ATTR_FLAG_OPTIONAL | BGP_ATTR_FLAG_TRANS))"];
"1000155" [label="(MethodParameterIn,safi_t safi)"];
"1000371" [label="(Call,aspath_add_confed_seq(aspath, peer->local_as))"];
"1000300" [label="(Identifier,aspath)"];
"1000207" [label="(Identifier,safi)"];
"1000815" [label="(Call,stream_putc(s, BGP_ATTR_CLUSTER_LIST))"];
"1001151" [label="(Call,stream_putl(s, label_index))"];
"1000604" [label="(Call,stream_putw(s, (uint16_t)attr->aggregator_as))"];
"1001183" [label="(Identifier,aspath)"];
"1000685" [label="(Call,stream_put(s, attr->community->val, attr->community->size * 4))"];
"1000406" [label="(Call,!use32bit)"];
"1000936" [label="(Call,stream_putc(s, BGP_ATTR_EXT_COMMUNITIES))"];
"1000206" [label="(Call,safi == SAFI_UNICAST)"];
"1001264" [label="(Call,stream_putc(s, BGP_ATTR_FLAG_OPTIONAL | BGP_ATTR_FLAG_TRANS))"];
"1001201" [label="(Call,stream_putc(s, BGP_ATTR_AS4_AGGREGATOR))"];
"1000549" [label="(Call,stream_putc(s, BGP_ATTR_FLAG_TRANS))"];
"1000151" [label="(MethodParameterIn,struct attr *attr)"];
"1000236" [label="(Identifier,addpath_encode)"];
"1000212" [label="(Identifier,afi)"];
"1001273" [label="(Identifier,s)"];
"1000496" [label="(Call,stream_putc(s, BGP_ATTR_MULTI_EXIT_DISC))"];
"1000475" [label="(Call,stream_putc(s, 4))"];
"1001142" [label="(Call,stream_putw(s,\n\t\t\t\t\t    BGP_PREFIX_SID_LABEL_INDEX_LENGTH))"];
"1001240" [label="(Call,safi == SAFI_EVPN)"];
"1000193" [label="(Call,cp = stream_get_endp(s))"];
"1000204" [label="(Identifier,afi)"];
"1001145" [label="(Call,stream_putc(s, 0))"];
"1001053" [label="(Call,stream_putc(\n\t\t\t\t\t\ts,\n\t\t\t\t\t\tBGP_ATTR_FLAG_OPTIONAL\n\t\t\t\t\t\t\t| BGP_ATTR_FLAG_TRANS))"];
"1000148" [label="(MethodParameterIn,struct bgp *bgp)"];
"1001277" [label="(Literal,0)"];
"1001315" [label="(Identifier,cp)"];
"1000349" [label="(Identifier,aspath)"];
"1000379" [label="(Call,attr->aspath)"];
"1001301" [label="(Call,attr->transit->val)"];
"1001299" [label="(Call,stream_put(s, attr->transit->val, attr->transit->length))"];
"1000220" [label="(Identifier,mpattrlen_pos)"];
"1001192" [label="(Identifier,aspath)"];
"1000812" [label="(Call,stream_putc(s, BGP_ATTR_FLAG_OPTIONAL))"];
"1001311" [label="(Return,return stream_get_endp(s) - cp;)"];
"1000363" [label="(Call,aspath = aspath_dup(attr->aspath))"];
"1001259" [label="(Identifier,attr)"];
"1000372" [label="(Identifier,aspath)"];
"1000332" [label="(Call,aspath = aspath_add_seq(aspath,\n\t\t\t\t\t\t\t\tpeer->local_as))"];
"1000203" [label="(Call,afi == AFI_IP)"];
"1000395" [label="(Identifier,s)"];
"1000210" [label="(Call,peer_cap_enhe(peer, afi, safi))"];
"1001148" [label="(Call,stream_putw(s, 0))"];
"1001223" [label="(Call,afi == AFI_IP)"];
"1000369" [label="(Call,aspath = aspath_add_confed_seq(aspath, peer->local_as))"];
"1001181" [label="(Call,aspath_put(s, aspath, 1))"];
"1001246" [label="(Identifier,peer)"];
"1000467" [label="(Call,stream_putc(s, BGP_ATTR_NEXT_HOP))"];
"1000175" [label="(Call,use32bit = (CHECK_FLAG(peer->cap, PEER_CAP_AS4_RCV)) ? 1 : 0)"];
"1000464" [label="(Call,stream_putc(s, BGP_ATTR_FLAG_TRANS))"];
"1000933" [label="(Call,BGP_ATTR_FLAG_TRANS\n\t\t\t\t\t\t    | BGP_ATTR_FLAG_EXTLEN)"];
"1000153" [label="(MethodParameterIn,struct prefix *p)"];
"1001290" [label="(Call,attr->nexthop.s_addr)"];
"1001198" [label="(Call,BGP_ATTR_FLAG_OPTIONAL | BGP_ATTR_FLAG_TRANS)"];
"1001205" [label="(Identifier,s)"];
"1001158" [label="(Identifier,aspath)"];
"1001160" [label="(Identifier,aspath)"];
"1001270" [label="(Identifier,s)"];
"1000393" [label="(Identifier,s)"];
"1000670" [label="(Call,BGP_ATTR_FLAG_OPTIONAL\n\t\t\t\t\t    | BGP_ATTR_FLAG_TRANS)"];
"1001247" [label="(Identifier,s)"];
"1000388" [label="(Identifier,s)"];
"1000939" [label="(Call,stream_putw(s, attr->ecommunity->size * 8))"];
"1000233" [label="(Identifier,prd)"];
"1000668" [label="(Call,stream_putc(s,\n\t\t\t\t    BGP_ATTR_FLAG_OPTIONAL\n\t\t\t\t\t    | BGP_ATTR_FLAG_TRANS))"];
"1001195" [label="(Block,)"];
"1001266" [label="(Call,BGP_ATTR_FLAG_OPTIONAL | BGP_ATTR_FLAG_TRANS)"];
"1000751" [label="(Call,stream_putc(s, lcom_length(attr->lcommunity)))"];
"1000335" [label="(Identifier,aspath)"];
"1000365" [label="(Call,aspath_dup(attr->aspath))"];
"1000783" [label="(Call,stream_putc(s, BGP_ATTR_FLAG_OPTIONAL))"];
"1000735" [label="(Call,stream_putw(s, lcom_length(attr->lcommunity)))"];
"1001275" [label="(Call,stream_putc(s, 0))"];
"1001128" [label="(Call,stream_putc(s,\n\t\t\t\t\t    BGP_ATTR_FLAG_OPTIONAL\n\t\t\t\t\t\t    | BGP_ATTR_FLAG_TRANS))"];
"1000196" [label="(Identifier,s)"];
"1000657" [label="(Call,stream_putw(s, attr->community->size * 4))"];
"1000211" [label="(Identifier,peer)"];
"1001233" [label="(Call,safi == SAFI_MPLS_VPN)"];
"1000309" [label="(Block,)"];
"1000312" [label="(Call,aspath_add_seq(aspath, bgp->confed_id))"];
"1000493" [label="(Call,stream_putc(s, BGP_ATTR_FLAG_OPTIONAL))"];
"1000647" [label="(Call,stream_putc(s,\n\t\t\t\t    BGP_ATTR_FLAG_OPTIONAL | BGP_ATTR_FLAG_TRANS\n\t\t\t\t\t    | BGP_ATTR_FLAG_EXTLEN))"];
"1000383" [label="(Identifier,s)"];
"1000929" [label="(Call,stream_putc(s,\n\t\t\t\t\t    BGP_ATTR_FLAG_OPTIONAL\n\t\t\t\t\t\t    | BGP_ATTR_FLAG_TRANS\n\t\t\t\t\t\t    | BGP_ATTR_FLAG_EXTLEN))"];
"1000342" [label="(Identifier,aspath)"];
"1001203" [label="(Identifier,BGP_ATTR_AS4_AGGREGATOR)"];
"1001207" [label="(Call,stream_putl(s, attr->aggregator_as))"];
"1001276" [label="(Identifier,s)"];
"1000292" [label="(Block,)"];
"1000536" [label="(Call,stream_putl(s, attr->local_pref))"];
"1000350" [label="(Call,aspath_add_seq(aspath, peer->local_as))"];
"1001185" [label="(ControlStructure,if (aspath != attr->aspath))"];
"1001253" [label="(Identifier,s)"];
"1000260" [label="(Identifier,peer)"];
"1000396" [label="(Literal,0)"];
"1000378" [label="(Identifier,aspath)"];
"1000394" [label="(Call,stream_putw(s, 0))"];
"1000373" [label="(Call,peer->local_as)"];
"1000851" [label="(Call,stream_put(s, attr->cluster->list,\n\t\t\t\t   attr->cluster->length))"];
"1000478" [label="(Call,stream_put_ipv4(s, 0))"];
"1001300" [label="(Identifier,s)"];
"1001214" [label="(Call,attr->aggregator_addr.s_addr)"];
"1000390" [label="(Call,aspath_sizep = stream_get_endp(s))"];
"1001237" [label="(Call,afi == AFI_L2VPN)"];
"1000405" [label="(Call,!use32bit && aspath_has_as4(aspath))"];
"1000385" [label="(Identifier,BGP_ATTR_FLAG_TRANS)"];
"1001249" [label="(Identifier,BGP_ATTR_ENCAP)"];
"1000881" [label="(Call,stream_put_in_addr(s, &bgp->router_id))"];
"1000748" [label="(Call,stream_putc(s, BGP_ATTR_LARGE_COMMUNITIES))"];
"1001278" [label="(Call,stream_putc(s, PMSI_TNLTYPE_INGR_REPL))"];
"1001230" [label="(Call,safi == SAFI_ENCAP)"];
"1001245" [label="(Identifier,bgp)"];
"1000157" [label="(MethodParameterIn,struct prefix_rd *prd)"];
"1001136" [label="(Call,stream_putc(s, 10))"];
"1001159" [label="(Call,aspath_delete_confed_seq(aspath))"];
"1000387" [label="(Call,stream_putc(s, BGP_ATTR_AS_PATH))"];
"1000243" [label="(Identifier,s)"];
"1000195" [label="(Call,stream_get_endp(s))"];
"1000158" [label="(MethodParameterIn,mpls_label_t *label)"];
"1000296" [label="(Call,attr->aspath)"];
"1000293" [label="(Call,aspath = aspath_dup(attr->aspath))"];
"1000459" [label="(Call,peer_cap_enhe(from, afi, safi))"];
"1000382" [label="(Call,stream_putc(s, BGP_ATTR_FLAG_TRANS | BGP_ATTR_FLAG_EXTLEN))"];
"1000249" [label="(Identifier,s)"];
"1000245" [label="(Call,stream_putc(s, BGP_ATTR_ORIGIN))"];
"1001314" [label="(Identifier,s)"];
"1000823" [label="(Call,stream_putc(s, attr->cluster->length + 4))"];
"1000397" [label="(Call,stream_putw_at(s, aspath_sizep, aspath_put(s, aspath, use32bit)))"];
"1000341" [label="(Call,aspath_add_seq(aspath,\n\t\t\t\t\t\t\tpeer->change_local_as))"];
"1000409" [label="(Identifier,aspath)"];
"1000301" [label="(Call,aspath_delete_confed_seq(aspath))"];
"1000237" [label="(Identifier,addpath_tx_id)"];
"1000377" [label="(Call,aspath = attr->aspath)"];
"1000229" [label="(Identifier,s)"];
"1000336" [label="(Call,peer->local_as)"];
"1001297" [label="(Identifier,attr)"];
"1001187" [label="(Identifier,aspath)"];
"1000392" [label="(Call,stream_get_endp(s))"];
"1001250" [label="(Call,bgp_packet_mpattr_tea(bgp, peer, s, attr, BGP_ATTR_VNC))"];
"1001197" [label="(Identifier,s)"];
"1000838" [label="(Call,stream_put_in_addr(s, &bgp->cluster_id))"];
"1001130" [label="(Call,BGP_ATTR_FLAG_OPTIONAL\n\t\t\t\t\t\t    | BGP_ATTR_FLAG_TRANS)"];
"1000362" [label="(Block,)"];
"1000439" [label="(Call,stream_putc(s, BGP_ATTR_NEXT_HOP))"];
"1000789" [label="(Call,stream_putc(s, 4))"];
"1001244" [label="(Call,bgp_packet_mpattr_tea(bgp, peer, s, attr, BGP_ATTR_ENCAP))"];
"1001271" [label="(Identifier,BGP_ATTR_PMSI_TUNNEL)"];
"1000366" [label="(Call,attr->aspath)"];
"1000340" [label="(Identifier,aspath)"];
"1001312" [label="(Call,stream_get_endp(s) - cp)"];
"1000198" [label="(Call,p\n\t    && !((afi == AFI_IP && safi == SAFI_UNICAST)\n\t\t && !peer_cap_enhe(peer, afi, safi)))"];
"1001178" [label="(Call,stream_putw_at(s, aspath_sizep, aspath_put(s, aspath, 1)))"];
"1001287" [label="(Identifier,BGP_LABEL_BYTES)"];
"1000402" [label="(Identifier,aspath)"];
"1000591" [label="(Call,attr->aggregator_as > 65535)"];
"1001156" [label="(Block,)"];
"1000253" [label="(Call,attr->origin)"];
"1001248" [label="(Identifier,attr)"];
"1000442" [label="(Call,bpacket_attr_vec_arr_set_vec(vecarr, BGP_ATTR_VEC_NH, s,\n\t\t\t\t\t\t     attr))"];
"1000205" [label="(Identifier,AFI_IP)"];
"1000228" [label="(Call,bgp_packet_mpattr_prefix(s, afi, safi, p, prd, label,\n\t\t\t\t\t num_labels, addpath_encode,\n\t\t\t\t\t addpath_tx_id, attr))"];
"1000786" [label="(Call,stream_putc(s, BGP_ATTR_ORIGINATOR_ID))"];
"1000239" [label="(Call,bgp_packet_mpattr_end(s, mpattrlen_pos))"];
"1000343" [label="(Call,peer->change_local_as)"];
"1000232" [label="(Identifier,p)"];
"1000221" [label="(Call,bgp_packet_mpattr_start(s, peer, afi, safi,\n\t\t\t\t\t\t\tvecarr, attr))"];
"1000219" [label="(Call,mpattrlen_pos = bgp_packet_mpattr_start(s, peer, afi, safi,\n\t\t\t\t\t\t\tvecarr, attr))"];
"1000391" [label="(Identifier,aspath_sizep)"];
"1000743" [label="(Call,stream_putc(s,\n\t\t\t\t    BGP_ATTR_FLAG_OPTIONAL\n\t\t\t\t\t    | BGP_ATTR_FLAG_TRANS))"];
"1000187" [label="(Identifier,bgp)"];
"1001282" [label="(Identifier,s)"];
"1000611" [label="(Call,stream_put_ipv4(s, attr->aggregator_addr.s_addr))"];
"1000244" [label="(Identifier,BGP_ATTR_FLAG_TRANS)"];
"1000310" [label="(Call,aspath = aspath_add_seq(aspath, bgp->confed_id))"];
"1000159" [label="(MethodParameterIn,uint32_t num_labels)"];
"1000240" [label="(Identifier,s)"];
"1000401" [label="(Identifier,s)"];
"1001171" [label="(Call,aspath_sizep = stream_get_endp(s))"];
"1000331" [label="(Block,)"];
"1000386" [label="(Identifier,BGP_ATTR_FLAG_EXTLEN)"];
"1000952" [label="(Call,BGP_ATTR_FLAG_OPTIONAL\n\t\t\t\t\t\t    | BGP_ATTR_FLAG_TRANS)"];
"1000370" [label="(Identifier,aspath)"];
"1000757" [label="(Call,stream_put(s, attr->lcommunity->val,\n\t\t\t   lcom_length(attr->lcommunity)))"];
"1000352" [label="(Call,peer->local_as)"];
"1000234" [label="(Identifier,label)"];
"1001162" [label="(Identifier,s)"];
"1001173" [label="(Call,stream_get_endp(s))"];
"1000251" [label="(Call,stream_putc(s, attr->origin))"];
"1001194" [label="(Identifier,send_as4_aggregator)"];
"1000654" [label="(Call,stream_putc(s, BGP_ATTR_COMMUNITIES))"];
"1000231" [label="(Identifier,safi)"];
"1001204" [label="(Call,stream_putc(s, 8))"];
"1000527" [label="(Call,stream_putc(s, BGP_ATTR_FLAG_TRANS))"];
"1000246" [label="(Identifier,s)"];
"1001046" [label="(Call,stream_putw(s, ecom_tr_size * 8))"];
"1000294" [label="(Identifier,aspath)"];
"1000225" [label="(Identifier,safi)"];
"1000162" [label="(Block,)"];
"1000200" [label="(Call,!((afi == AFI_IP && safi == SAFI_UNICAST)\n\t\t && !peer_cap_enhe(peer, afi, safi)))"];
"1000209" [label="(Call,!peer_cap_enhe(peer, afi, safi))"];
"1001184" [label="(Literal,1)"];
"1000364" [label="(Identifier,aspath)"];
"1001055" [label="(Call,BGP_ATTR_FLAG_OPTIONAL\n\t\t\t\t\t\t\t| BGP_ATTR_FLAG_TRANS)"];
"1000403" [label="(Identifier,use32bit)"];
"1001188" [label="(Call,attr->aspath)"];
"1001263" [label="(Block,)"];
"1000223" [label="(Identifier,peer)"];
"1000295" [label="(Call,aspath_dup(attr->aspath))"];
"1001279" [label="(Identifier,s)"];
"1000865" [label="(Call,stream_putc(s, 4))"];
"1000577" [label="(Call,stream_putc(s, 8))"];
"1000423" [label="(Call,peer_cap_enhe(peer, afi, safi))"];
"1000499" [label="(Call,stream_putc(s, 4))"];
"1001255" [label="(Identifier,BGP_ATTR_VNC)"];
"1000447" [label="(Call,stream_putc(s, 4))"];
"1000214" [label="(Block,)"];
"1000806" [label="(Call,stream_put_in_addr(s, &from->remote_id))"];
"1000606" [label="(Call,(uint16_t)attr->aggregator_as)"];
"1000238" [label="(Identifier,attr)"];
"1000242" [label="(Call,stream_putc(s, BGP_ATTR_FLAG_TRANS))"];
"1000252" [label="(Identifier,s)"];
"1000250" [label="(Literal,1)"];
"1000176" [label="(Identifier,use32bit)"];
"1000197" [label="(ControlStructure,if (p\n\t    && !((afi == AFI_IP && safi == SAFI_UNICAST)\n\t\t && !peer_cap_enhe(peer, afi, safi))))"];
"1000224" [label="(Identifier,afi)"];
"1000732" [label="(Call,stream_putc(s, BGP_ATTR_LARGE_COMMUNITIES))"];
"1001182" [label="(Identifier,s)"];
"1001306" [label="(Call,attr->transit->length)"];
"1001243" [label="(Block,)"];
"1001168" [label="(Call,stream_putc(s, BGP_ATTR_AS4_PATH))"];
"1000587" [label="(Call,stream_putc(s, 6))"];
"1000955" [label="(Call,stream_putc(s, BGP_ATTR_EXT_COMMUNITIES))"];
"1001175" [label="(Call,stream_putw(s, 0))"];
"1001274" [label="(Literal,9)"];
"1000874" [label="(Call,stream_put_in_addr(s, &bgp->cluster_id))"];
"1000235" [label="(Identifier,num_labels)"];
"1001100" [label="(Call,stream_put(s, pnt, 8))"];
"1000400" [label="(Call,aspath_put(s, aspath, use32bit))"];
"1000202" [label="(Call,afi == AFI_IP && safi == SAFI_UNICAST)"];
"1000247" [label="(Identifier,BGP_ATTR_ORIGIN)"];
"1000415" [label="(Call,afi == AFI_IP)"];
"1000347" [label="(Block,)"];
"1001265" [label="(Identifier,s)"];
"1001272" [label="(Call,stream_putc(s, 9))"];
"1000333" [label="(Identifier,aspath)"];
"1000580" [label="(Call,stream_putl(s, attr->aggregator_as))"];
"1001212" [label="(Call,stream_put_ipv4(s, attr->aggregator_addr.s_addr))"];
"1000571" [label="(Call,stream_putc(s, BGP_ATTR_AGGREGATOR))"];
"1000597" [label="(Call,stream_putw(s, BGP_AS_TRANS))"];
"1000323" [label="(Block,)"];
"1001157" [label="(Call,aspath = aspath_delete_confed_seq(aspath))"];
"1000419" [label="(Call,safi == SAFI_UNICAST)"];
"1001186" [label="(Call,aspath != attr->aspath)"];
"1000408" [label="(Call,aspath_has_as4(aspath))"];
"1001226" [label="(Call,afi == AFI_IP6)"];
"1001202" [label="(Identifier,s)"];
"1000188" [label="(Call,bgp = peer->bgp)"];
"1000152" [label="(MethodParameterIn,struct bpacket_attr_vec_arr *vecarr)"];
"1000213" [label="(Identifier,safi)"];
"1001161" [label="(Call,stream_putc(s,\n\t\t\t    BGP_ATTR_FLAG_TRANS | BGP_ATTR_FLAG_OPTIONAL\n\t\t\t\t    | BGP_ATTR_FLAG_EXTLEN))"];
"1001280" [label="(Identifier,PMSI_TNLTYPE_INGR_REPL)"];
"1000967" [label="(Call,stream_put(s, attr->ecommunity->val,\n\t\t\t\t   attr->ecommunity->size * 8))"];
"1001283" [label="(Call,&(attr->label))"];
"1001209" [label="(Call,attr->aggregator_as)"];
"1001316" [label="(MethodReturn,bgp_size_t)"];
"1000201" [label="(Call,(afi == AFI_IP && safi == SAFI_UNICAST)\n\t\t && !peer_cap_enhe(peer, afi, safi))"];
"1000177" [label="(Call,(CHECK_FLAG(peer->cap, PEER_CAP_AS4_RCV)) ? 1 : 0)"];
"1001252" [label="(Identifier,peer)"];
"1001179" [label="(Identifier,s)"];
"1000217" [label="(Identifier,mpattrlen_pos)"];
"1000725" [label="(Call,stream_putc(s,\n\t\t\t\t    BGP_ATTR_FLAG_OPTIONAL | BGP_ATTR_FLAG_TRANS\n\t\t\t\t\t    | BGP_ATTR_FLAG_EXTLEN))"];
"1001289" [label="(Identifier,s)"];
"1001058" [label="(Call,stream_putc(s,\n\t\t\t\t\t\t    BGP_ATTR_EXT_COMMUNITIES))"];
"1000384" [label="(Call,BGP_ATTR_FLAG_TRANS | BGP_ATTR_FLAG_EXTLEN)"];
"1001254" [label="(Identifier,attr)"];
"1000313" [label="(Identifier,aspath)"];
"1000376" [label="(ControlStructure,else)"];
"1000450" [label="(Call,stream_put_ipv4(s, attr->nexthop.s_addr))"];
"1000160" [label="(MethodParameterIn,int addpath_encode)"];
"1001036" [label="(Call,stream_putc(\n\t\t\t\t\t\ts,\n\t\t\t\t\t\tBGP_ATTR_FLAG_OPTIONAL\n\t\t\t\t\t\t\t| BGP_ATTR_FLAG_TRANS\n\t\t\t\t\t\t\t| BGP_ATTR_FLAG_EXTLEN))"];
"1001139" [label="(Call,stream_putc(s, BGP_PREFIX_SID_LABEL_INDEX))"];
"1000799" [label="(Call,stream_put_in_addr(s, &attr->originator_id))"];
"1000314" [label="(Call,bgp->confed_id)"];
"1000568" [label="(Call,BGP_ATTR_FLAG_OPTIONAL | BGP_ATTR_FLAG_TRANS)"];
"1000651" [label="(Call,BGP_ATTR_FLAG_TRANS\n\t\t\t\t\t    | BGP_ATTR_FLAG_EXTLEN)"];
"1001165" [label="(Call,BGP_ATTR_FLAG_OPTIONAL\n\t\t\t\t    | BGP_ATTR_FLAG_EXTLEN)"];
"1000339" [label="(Call,aspath = aspath_add_seq(aspath,\n\t\t\t\t\t\t\tpeer->change_local_as))"];
"1001313" [label="(Call,stream_get_endp(s))"];
"1001281" [label="(Call,stream_put(s, &(attr->label),\n\t\t\t   BGP_LABEL_BYTES))"];
"1000208" [label="(Identifier,SAFI_UNICAST)"];
"1001288" [label="(Call,stream_put_ipv4(s, attr->nexthop.s_addr))"];
"1000845" [label="(Call,stream_put_in_addr(s, &bgp->router_id))"];
"1000241" [label="(Identifier,mpattrlen_pos)"];
"1000470" [label="(Call,bpacket_attr_vec_arr_set_vec(vecarr, BGP_ATTR_VEC_NH, s,\n\t\t\t\t\t\t     NULL))"];
"1000199" [label="(Identifier,p)"];
"1000389" [label="(Identifier,BGP_ATTR_AS_PATH)"];
"1000150" [label="(MethodParameterIn,struct stream *s)"];
"1001196" [label="(Call,stream_putc(s, BGP_ATTR_FLAG_OPTIONAL | BGP_ATTR_FLAG_TRANS))"];
"1000154" [label="(MethodParameterIn,afi_t afi)"];
"1000676" [label="(Call,stream_putc(s, attr->community->size * 4))"];
"1000226" [label="(Identifier,vecarr)"];
"1000222" [label="(Identifier,s)"];
"1000227" [label="(Identifier,attr)"];
"1001105" [label="(Call,safi == SAFI_LABELED_UNICAST)"];
"1000299" [label="(Call,aspath = aspath_delete_confed_seq(aspath))"];
"1001295" [label="(ControlStructure,if (attr->transit))"];
"1001251" [label="(Identifier,bgp)"];
"1000555" [label="(Call,stream_putc(s, 0))"];
"1001269" [label="(Call,stream_putc(s, BGP_ATTR_PMSI_TUNNEL))"];
"1000436" [label="(Call,stream_putc(s, BGP_ATTR_FLAG_TRANS))"];
"1000230" [label="(Identifier,afi)"];
"1001206" [label="(Literal,8)"];
"1001191" [label="(Call,aspath_free(aspath))"];
"1000248" [label="(Call,stream_putc(s, 1))"];
"1000552" [label="(Call,stream_putc(s, BGP_ATTR_ATOMIC_AGGREGATE))"];
"1001159" -> "1001157"  [label="AST: "];
"1001159" -> "1001160"  [label="CFG: "];
"1001160" -> "1001159"  [label="AST: "];
"1001157" -> "1001159"  [label="CFG: "];
"1001159" -> "1001157"  [label="DDG: aspath"];
"1000408" -> "1001159"  [label="DDG: aspath"];
"1000400" -> "1001159"  [label="DDG: aspath"];
"1000408" -> "1000405"  [label="AST: "];
"1000408" -> "1000409"  [label="CFG: "];
"1000409" -> "1000408"  [label="AST: "];
"1000405" -> "1000408"  [label="CFG: "];
"1000408" -> "1000405"  [label="DDG: aspath"];
"1000400" -> "1000408"  [label="DDG: aspath"];
"1000408" -> "1001186"  [label="DDG: aspath"];
"1000400" -> "1000397"  [label="AST: "];
"1000400" -> "1000403"  [label="CFG: "];
"1000401" -> "1000400"  [label="AST: "];
"1000402" -> "1000400"  [label="AST: "];
"1000403" -> "1000400"  [label="AST: "];
"1000397" -> "1000400"  [label="CFG: "];
"1000400" -> "1000397"  [label="DDG: s"];
"1000400" -> "1000397"  [label="DDG: aspath"];
"1000400" -> "1000397"  [label="DDG: use32bit"];
"1000394" -> "1000400"  [label="DDG: s"];
"1000150" -> "1000400"  [label="DDG: s"];
"1000348" -> "1000400"  [label="DDG: aspath"];
"1000369" -> "1000400"  [label="DDG: aspath"];
"1000310" -> "1000400"  [label="DDG: aspath"];
"1000377" -> "1000400"  [label="DDG: aspath"];
"1000339" -> "1000400"  [label="DDG: aspath"];
"1000175" -> "1000400"  [label="DDG: use32bit"];
"1000400" -> "1000406"  [label="DDG: use32bit"];
"1000400" -> "1001186"  [label="DDG: aspath"];
"1000394" -> "1000162"  [label="AST: "];
"1000394" -> "1000396"  [label="CFG: "];
"1000395" -> "1000394"  [label="AST: "];
"1000396" -> "1000394"  [label="AST: "];
"1000398" -> "1000394"  [label="CFG: "];
"1000394" -> "1001316"  [label="DDG: stream_putw(s, 0)"];
"1000392" -> "1000394"  [label="DDG: s"];
"1000150" -> "1000394"  [label="DDG: s"];
"1000392" -> "1000390"  [label="AST: "];
"1000392" -> "1000393"  [label="CFG: "];
"1000393" -> "1000392"  [label="AST: "];
"1000390" -> "1000392"  [label="CFG: "];
"1000392" -> "1000390"  [label="DDG: s"];
"1000387" -> "1000392"  [label="DDG: s"];
"1000150" -> "1000392"  [label="DDG: s"];
"1000387" -> "1000162"  [label="AST: "];
"1000387" -> "1000389"  [label="CFG: "];
"1000388" -> "1000387"  [label="AST: "];
"1000389" -> "1000387"  [label="AST: "];
"1000391" -> "1000387"  [label="CFG: "];
"1000387" -> "1001316"  [label="DDG: BGP_ATTR_AS_PATH"];
"1000387" -> "1001316"  [label="DDG: stream_putc(s, BGP_ATTR_AS_PATH)"];
"1000382" -> "1000387"  [label="DDG: s"];
"1000150" -> "1000387"  [label="DDG: s"];
"1000382" -> "1000162"  [label="AST: "];
"1000382" -> "1000384"  [label="CFG: "];
"1000383" -> "1000382"  [label="AST: "];
"1000384" -> "1000382"  [label="AST: "];
"1000388" -> "1000382"  [label="CFG: "];
"1000382" -> "1001316"  [label="DDG: BGP_ATTR_FLAG_TRANS | BGP_ATTR_FLAG_EXTLEN"];
"1000382" -> "1001316"  [label="DDG: stream_putc(s, BGP_ATTR_FLAG_TRANS | BGP_ATTR_FLAG_EXTLEN)"];
"1000251" -> "1000382"  [label="DDG: s"];
"1000150" -> "1000382"  [label="DDG: s"];
"1000384" -> "1000382"  [label="DDG: BGP_ATTR_FLAG_TRANS"];
"1000384" -> "1000382"  [label="DDG: BGP_ATTR_FLAG_EXTLEN"];
"1000251" -> "1000162"  [label="AST: "];
"1000251" -> "1000253"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="AST: "];
"1000260" -> "1000251"  [label="CFG: "];
"1000251" -> "1001316"  [label="DDG: stream_putc(s, attr->origin)"];
"1000251" -> "1001316"  [label="DDG: attr->origin"];
"1000248" -> "1000251"  [label="DDG: s"];
"1000150" -> "1000251"  [label="DDG: s"];
"1000248" -> "1000162"  [label="AST: "];
"1000248" -> "1000250"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="AST: "];
"1000252" -> "1000248"  [label="CFG: "];
"1000248" -> "1001316"  [label="DDG: stream_putc(s, 1)"];
"1000245" -> "1000248"  [label="DDG: s"];
"1000150" -> "1000248"  [label="DDG: s"];
"1000245" -> "1000162"  [label="AST: "];
"1000245" -> "1000247"  [label="CFG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000247" -> "1000245"  [label="AST: "];
"1000249" -> "1000245"  [label="CFG: "];
"1000245" -> "1001316"  [label="DDG: stream_putc(s, BGP_ATTR_ORIGIN)"];
"1000245" -> "1001316"  [label="DDG: BGP_ATTR_ORIGIN"];
"1000242" -> "1000245"  [label="DDG: s"];
"1000150" -> "1000245"  [label="DDG: s"];
"1000242" -> "1000162"  [label="AST: "];
"1000242" -> "1000244"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000244" -> "1000242"  [label="AST: "];
"1000246" -> "1000242"  [label="CFG: "];
"1000242" -> "1001316"  [label="DDG: stream_putc(s, BGP_ATTR_FLAG_TRANS)"];
"1000239" -> "1000242"  [label="DDG: s"];
"1000195" -> "1000242"  [label="DDG: s"];
"1000150" -> "1000242"  [label="DDG: s"];
"1000242" -> "1000384"  [label="DDG: BGP_ATTR_FLAG_TRANS"];
"1000239" -> "1000214"  [label="AST: "];
"1000239" -> "1000241"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="AST: "];
"1000243" -> "1000239"  [label="CFG: "];
"1000239" -> "1001316"  [label="DDG: bgp_packet_mpattr_end(s, mpattrlen_pos)"];
"1000239" -> "1001316"  [label="DDG: mpattrlen_pos"];
"1000228" -> "1000239"  [label="DDG: s"];
"1000150" -> "1000239"  [label="DDG: s"];
"1000219" -> "1000239"  [label="DDG: mpattrlen_pos"];
"1000228" -> "1000214"  [label="AST: "];
"1000228" -> "1000238"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000230" -> "1000228"  [label="AST: "];
"1000231" -> "1000228"  [label="AST: "];
"1000232" -> "1000228"  [label="AST: "];
"1000233" -> "1000228"  [label="AST: "];
"1000234" -> "1000228"  [label="AST: "];
"1000235" -> "1000228"  [label="AST: "];
"1000236" -> "1000228"  [label="AST: "];
"1000237" -> "1000228"  [label="AST: "];
"1000238" -> "1000228"  [label="AST: "];
"1000240" -> "1000228"  [label="CFG: "];
"1000228" -> "1001316"  [label="DDG: addpath_tx_id"];
"1000228" -> "1001316"  [label="DDG: prd"];
"1000228" -> "1001316"  [label="DDG: addpath_encode"];
"1000228" -> "1001316"  [label="DDG: num_labels"];
"1000228" -> "1001316"  [label="DDG: bgp_packet_mpattr_prefix(s, afi, safi, p, prd, label,\n\t\t\t\t\t num_labels, addpath_encode,\n\t\t\t\t\t addpath_tx_id, attr)"];
"1000228" -> "1001316"  [label="DDG: attr"];
"1000228" -> "1001316"  [label="DDG: p"];
"1000228" -> "1001316"  [label="DDG: label"];
"1000221" -> "1000228"  [label="DDG: s"];
"1000221" -> "1000228"  [label="DDG: afi"];
"1000221" -> "1000228"  [label="DDG: safi"];
"1000221" -> "1000228"  [label="DDG: attr"];
"1000150" -> "1000228"  [label="DDG: s"];
"1000154" -> "1000228"  [label="DDG: afi"];
"1000155" -> "1000228"  [label="DDG: safi"];
"1000198" -> "1000228"  [label="DDG: p"];
"1000153" -> "1000228"  [label="DDG: p"];
"1000157" -> "1000228"  [label="DDG: prd"];
"1000158" -> "1000228"  [label="DDG: label"];
"1000159" -> "1000228"  [label="DDG: num_labels"];
"1000160" -> "1000228"  [label="DDG: addpath_encode"];
"1000161" -> "1000228"  [label="DDG: addpath_tx_id"];
"1000151" -> "1000228"  [label="DDG: attr"];
"1000228" -> "1000415"  [label="DDG: afi"];
"1000228" -> "1000419"  [label="DDG: safi"];
"1000228" -> "1000442"  [label="DDG: attr"];
"1000228" -> "1000459"  [label="DDG: safi"];
"1000228" -> "1001105"  [label="DDG: safi"];
"1000228" -> "1001244"  [label="DDG: attr"];
"1000221" -> "1000219"  [label="AST: "];
"1000221" -> "1000227"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000224" -> "1000221"  [label="AST: "];
"1000225" -> "1000221"  [label="AST: "];
"1000226" -> "1000221"  [label="AST: "];
"1000227" -> "1000221"  [label="AST: "];
"1000219" -> "1000221"  [label="CFG: "];
"1000221" -> "1001316"  [label="DDG: peer"];
"1000221" -> "1001316"  [label="DDG: vecarr"];
"1000221" -> "1000219"  [label="DDG: afi"];
"1000221" -> "1000219"  [label="DDG: vecarr"];
"1000221" -> "1000219"  [label="DDG: attr"];
"1000221" -> "1000219"  [label="DDG: peer"];
"1000221" -> "1000219"  [label="DDG: safi"];
"1000221" -> "1000219"  [label="DDG: s"];
"1000195" -> "1000221"  [label="DDG: s"];
"1000150" -> "1000221"  [label="DDG: s"];
"1000210" -> "1000221"  [label="DDG: peer"];
"1000210" -> "1000221"  [label="DDG: afi"];
"1000210" -> "1000221"  [label="DDG: safi"];
"1000149" -> "1000221"  [label="DDG: peer"];
"1000203" -> "1000221"  [label="DDG: afi"];
"1000154" -> "1000221"  [label="DDG: afi"];
"1000206" -> "1000221"  [label="DDG: safi"];
"1000155" -> "1000221"  [label="DDG: safi"];
"1000152" -> "1000221"  [label="DDG: vecarr"];
"1000151" -> "1000221"  [label="DDG: attr"];
"1000221" -> "1000423"  [label="DDG: peer"];
"1000221" -> "1000442"  [label="DDG: vecarr"];
"1000221" -> "1000470"  [label="DDG: vecarr"];
"1000221" -> "1001244"  [label="DDG: peer"];
"1000195" -> "1000193"  [label="AST: "];
"1000195" -> "1000196"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000193" -> "1000195"  [label="CFG: "];
"1000195" -> "1000193"  [label="DDG: s"];
"1000150" -> "1000195"  [label="DDG: s"];
"1000150" -> "1000147"  [label="AST: "];
"1000150" -> "1001316"  [label="DDG: s"];
"1000150" -> "1000397"  [label="DDG: s"];
"1000150" -> "1000436"  [label="DDG: s"];
"1000150" -> "1000439"  [label="DDG: s"];
"1000150" -> "1000442"  [label="DDG: s"];
"1000150" -> "1000447"  [label="DDG: s"];
"1000150" -> "1000450"  [label="DDG: s"];
"1000150" -> "1000464"  [label="DDG: s"];
"1000150" -> "1000467"  [label="DDG: s"];
"1000150" -> "1000470"  [label="DDG: s"];
"1000150" -> "1000475"  [label="DDG: s"];
"1000150" -> "1000478"  [label="DDG: s"];
"1000150" -> "1000493"  [label="DDG: s"];
"1000150" -> "1000496"  [label="DDG: s"];
"1000150" -> "1000499"  [label="DDG: s"];
"1000150" -> "1000502"  [label="DDG: s"];
"1000150" -> "1000527"  [label="DDG: s"];
"1000150" -> "1000530"  [label="DDG: s"];
"1000150" -> "1000533"  [label="DDG: s"];
"1000150" -> "1000536"  [label="DDG: s"];
"1000150" -> "1000549"  [label="DDG: s"];
"1000150" -> "1000552"  [label="DDG: s"];
"1000150" -> "1000555"  [label="DDG: s"];
"1000150" -> "1000566"  [label="DDG: s"];
"1000150" -> "1000571"  [label="DDG: s"];
"1000150" -> "1000577"  [label="DDG: s"];
"1000150" -> "1000580"  [label="DDG: s"];
"1000150" -> "1000587"  [label="DDG: s"];
"1000150" -> "1000597"  [label="DDG: s"];
"1000150" -> "1000604"  [label="DDG: s"];
"1000150" -> "1000611"  [label="DDG: s"];
"1000150" -> "1000647"  [label="DDG: s"];
"1000150" -> "1000654"  [label="DDG: s"];
"1000150" -> "1000657"  [label="DDG: s"];
"1000150" -> "1000668"  [label="DDG: s"];
"1000150" -> "1000673"  [label="DDG: s"];
"1000150" -> "1000676"  [label="DDG: s"];
"1000150" -> "1000685"  [label="DDG: s"];
"1000150" -> "1000725"  [label="DDG: s"];
"1000150" -> "1000732"  [label="DDG: s"];
"1000150" -> "1000735"  [label="DDG: s"];
"1000150" -> "1000743"  [label="DDG: s"];
"1000150" -> "1000748"  [label="DDG: s"];
"1000150" -> "1000751"  [label="DDG: s"];
"1000150" -> "1000757"  [label="DDG: s"];
"1000150" -> "1000783"  [label="DDG: s"];
"1000150" -> "1000786"  [label="DDG: s"];
"1000150" -> "1000789"  [label="DDG: s"];
"1000150" -> "1000799"  [label="DDG: s"];
"1000150" -> "1000806"  [label="DDG: s"];
"1000150" -> "1000812"  [label="DDG: s"];
"1000150" -> "1000815"  [label="DDG: s"];
"1000150" -> "1000823"  [label="DDG: s"];
"1000150" -> "1000838"  [label="DDG: s"];
"1000150" -> "1000845"  [label="DDG: s"];
"1000150" -> "1000851"  [label="DDG: s"];
"1000150" -> "1000865"  [label="DDG: s"];
"1000150" -> "1000874"  [label="DDG: s"];
"1000150" -> "1000881"  [label="DDG: s"];
"1000150" -> "1000929"  [label="DDG: s"];
"1000150" -> "1000936"  [label="DDG: s"];
"1000150" -> "1000939"  [label="DDG: s"];
"1000150" -> "1000950"  [label="DDG: s"];
"1000150" -> "1000955"  [label="DDG: s"];
"1000150" -> "1000958"  [label="DDG: s"];
"1000150" -> "1000967"  [label="DDG: s"];
"1000150" -> "1001036"  [label="DDG: s"];
"1000150" -> "1001043"  [label="DDG: s"];
"1000150" -> "1001046"  [label="DDG: s"];
"1000150" -> "1001053"  [label="DDG: s"];
"1000150" -> "1001058"  [label="DDG: s"];
"1000150" -> "1001061"  [label="DDG: s"];
"1000150" -> "1001100"  [label="DDG: s"];
"1000150" -> "1001128"  [label="DDG: s"];
"1000150" -> "1001133"  [label="DDG: s"];
"1000150" -> "1001136"  [label="DDG: s"];
"1000150" -> "1001139"  [label="DDG: s"];
"1000150" -> "1001142"  [label="DDG: s"];
"1000150" -> "1001145"  [label="DDG: s"];
"1000150" -> "1001148"  [label="DDG: s"];
"1000150" -> "1001151"  [label="DDG: s"];
"1000150" -> "1001161"  [label="DDG: s"];
"1000150" -> "1001168"  [label="DDG: s"];
"1000150" -> "1001173"  [label="DDG: s"];
"1000150" -> "1001175"  [label="DDG: s"];
"1000150" -> "1001178"  [label="DDG: s"];
"1000150" -> "1001181"  [label="DDG: s"];
"1000150" -> "1001196"  [label="DDG: s"];
"1000150" -> "1001201"  [label="DDG: s"];
"1000150" -> "1001204"  [label="DDG: s"];
"1000150" -> "1001207"  [label="DDG: s"];
"1000150" -> "1001212"  [label="DDG: s"];
"1000150" -> "1001244"  [label="DDG: s"];
"1000150" -> "1001250"  [label="DDG: s"];
"1000150" -> "1001264"  [label="DDG: s"];
"1000150" -> "1001269"  [label="DDG: s"];
"1000150" -> "1001272"  [label="DDG: s"];
"1000150" -> "1001275"  [label="DDG: s"];
"1000150" -> "1001278"  [label="DDG: s"];
"1000150" -> "1001281"  [label="DDG: s"];
"1000150" -> "1001288"  [label="DDG: s"];
"1000150" -> "1001299"  [label="DDG: s"];
"1000150" -> "1001313"  [label="DDG: s"];
"1000210" -> "1000209"  [label="AST: "];
"1000210" -> "1000213"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="AST: "];
"1000213" -> "1000210"  [label="AST: "];
"1000209" -> "1000210"  [label="CFG: "];
"1000210" -> "1001316"  [label="DDG: peer"];
"1000210" -> "1000209"  [label="DDG: peer"];
"1000210" -> "1000209"  [label="DDG: afi"];
"1000210" -> "1000209"  [label="DDG: safi"];
"1000149" -> "1000210"  [label="DDG: peer"];
"1000203" -> "1000210"  [label="DDG: afi"];
"1000154" -> "1000210"  [label="DDG: afi"];
"1000206" -> "1000210"  [label="DDG: safi"];
"1000155" -> "1000210"  [label="DDG: safi"];
"1000210" -> "1000415"  [label="DDG: afi"];
"1000210" -> "1000419"  [label="DDG: safi"];
"1000210" -> "1000423"  [label="DDG: peer"];
"1000210" -> "1000459"  [label="DDG: safi"];
"1000210" -> "1001105"  [label="DDG: safi"];
"1000210" -> "1001244"  [label="DDG: peer"];
"1000149" -> "1000147"  [label="AST: "];
"1000149" -> "1001316"  [label="DDG: peer"];
"1000149" -> "1000423"  [label="DDG: peer"];
"1000149" -> "1001244"  [label="DDG: peer"];
"1000149" -> "1001250"  [label="DDG: peer"];
"1000203" -> "1000202"  [label="AST: "];
"1000203" -> "1000205"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000203"  [label="AST: "];
"1000207" -> "1000203"  [label="CFG: "];
"1000202" -> "1000203"  [label="CFG: "];
"1000203" -> "1000202"  [label="DDG: afi"];
"1000203" -> "1000202"  [label="DDG: AFI_IP"];
"1000154" -> "1000203"  [label="DDG: afi"];
"1000203" -> "1000415"  [label="DDG: afi"];
"1000203" -> "1000415"  [label="DDG: AFI_IP"];
"1000154" -> "1000147"  [label="AST: "];
"1000154" -> "1001316"  [label="DDG: afi"];
"1000154" -> "1000415"  [label="DDG: afi"];
"1000154" -> "1000423"  [label="DDG: afi"];
"1000154" -> "1000459"  [label="DDG: afi"];
"1000154" -> "1001223"  [label="DDG: afi"];
"1000154" -> "1001226"  [label="DDG: afi"];
"1000154" -> "1001237"  [label="DDG: afi"];
"1000206" -> "1000202"  [label="AST: "];
"1000206" -> "1000208"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000206"  [label="AST: "];
"1000202" -> "1000206"  [label="CFG: "];
"1000206" -> "1001316"  [label="DDG: SAFI_UNICAST"];
"1000206" -> "1000202"  [label="DDG: safi"];
"1000206" -> "1000202"  [label="DDG: SAFI_UNICAST"];
"1000155" -> "1000206"  [label="DDG: safi"];
"1000206" -> "1000419"  [label="DDG: safi"];
"1000206" -> "1000419"  [label="DDG: SAFI_UNICAST"];
"1000206" -> "1000459"  [label="DDG: safi"];
"1000206" -> "1001105"  [label="DDG: safi"];
"1000155" -> "1000147"  [label="AST: "];
"1000155" -> "1001316"  [label="DDG: safi"];
"1000155" -> "1000419"  [label="DDG: safi"];
"1000155" -> "1000423"  [label="DDG: safi"];
"1000155" -> "1000459"  [label="DDG: safi"];
"1000155" -> "1001105"  [label="DDG: safi"];
"1000155" -> "1001230"  [label="DDG: safi"];
"1000155" -> "1001233"  [label="DDG: safi"];
"1000155" -> "1001240"  [label="DDG: safi"];
"1000152" -> "1000147"  [label="AST: "];
"1000152" -> "1001316"  [label="DDG: vecarr"];
"1000152" -> "1000442"  [label="DDG: vecarr"];
"1000152" -> "1000470"  [label="DDG: vecarr"];
"1000151" -> "1000147"  [label="AST: "];
"1000151" -> "1001316"  [label="DDG: attr"];
"1000151" -> "1000442"  [label="DDG: attr"];
"1000151" -> "1001244"  [label="DDG: attr"];
"1000151" -> "1001250"  [label="DDG: attr"];
"1000198" -> "1000197"  [label="AST: "];
"1000198" -> "1000199"  [label="CFG: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000217" -> "1000198"  [label="CFG: "];
"1000243" -> "1000198"  [label="CFG: "];
"1000198" -> "1001316"  [label="DDG: !((afi == AFI_IP && safi == SAFI_UNICAST)\n\t\t && !peer_cap_enhe(peer, afi, safi))"];
"1000198" -> "1001316"  [label="DDG: p"];
"1000198" -> "1001316"  [label="DDG: p\n\t    && !((afi == AFI_IP && safi == SAFI_UNICAST)\n\t\t && !peer_cap_enhe(peer, afi, safi))"];
"1000153" -> "1000198"  [label="DDG: p"];
"1000200" -> "1000198"  [label="DDG: (afi == AFI_IP && safi == SAFI_UNICAST)\n\t\t && !peer_cap_enhe(peer, afi, safi)"];
"1000153" -> "1000147"  [label="AST: "];
"1000153" -> "1001316"  [label="DDG: p"];
"1000200" -> "1000201"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000200" -> "1001316"  [label="DDG: (afi == AFI_IP && safi == SAFI_UNICAST)\n\t\t && !peer_cap_enhe(peer, afi, safi)"];
"1000201" -> "1000200"  [label="DDG: afi == AFI_IP && safi == SAFI_UNICAST"];
"1000201" -> "1000200"  [label="DDG: !peer_cap_enhe(peer, afi, safi)"];
"1000201" -> "1000202"  [label="CFG: "];
"1000201" -> "1000209"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000209" -> "1000201"  [label="AST: "];
"1000201" -> "1001316"  [label="DDG: !peer_cap_enhe(peer, afi, safi)"];
"1000201" -> "1001316"  [label="DDG: afi == AFI_IP && safi == SAFI_UNICAST"];
"1000202" -> "1000201"  [label="DDG: afi == AFI_IP"];
"1000202" -> "1000201"  [label="DDG: safi == SAFI_UNICAST"];
"1000209" -> "1000201"  [label="DDG: peer_cap_enhe(peer, afi, safi)"];
"1000201" -> "1000418"  [label="DDG: !peer_cap_enhe(peer, afi, safi)"];
"1000211" -> "1000202"  [label="CFG: "];
"1000202" -> "1001316"  [label="DDG: safi == SAFI_UNICAST"];
"1000209" -> "1001316"  [label="DDG: peer_cap_enhe(peer, afi, safi)"];
"1000157" -> "1000147"  [label="AST: "];
"1000157" -> "1001316"  [label="DDG: prd"];
"1000158" -> "1000147"  [label="AST: "];
"1000158" -> "1001316"  [label="DDG: label"];
"1000159" -> "1000147"  [label="AST: "];
"1000159" -> "1001316"  [label="DDG: num_labels"];
"1000160" -> "1000147"  [label="AST: "];
"1000160" -> "1001316"  [label="DDG: addpath_encode"];
"1000161" -> "1000147"  [label="AST: "];
"1000161" -> "1001316"  [label="DDG: addpath_tx_id"];
"1000219" -> "1000214"  [label="AST: "];
"1000220" -> "1000219"  [label="AST: "];
"1000229" -> "1000219"  [label="CFG: "];
"1000219" -> "1001316"  [label="DDG: bgp_packet_mpattr_start(s, peer, afi, safi,\n\t\t\t\t\t\t\tvecarr, attr)"];
"1000384" -> "1000386"  [label="CFG: "];
"1000385" -> "1000384"  [label="AST: "];
"1000386" -> "1000384"  [label="AST: "];
"1000384" -> "1001316"  [label="DDG: BGP_ATTR_FLAG_EXTLEN"];
"1000384" -> "1001316"  [label="DDG: BGP_ATTR_FLAG_TRANS"];
"1000384" -> "1000436"  [label="DDG: BGP_ATTR_FLAG_TRANS"];
"1000384" -> "1000464"  [label="DDG: BGP_ATTR_FLAG_TRANS"];
"1000384" -> "1000527"  [label="DDG: BGP_ATTR_FLAG_TRANS"];
"1000384" -> "1000549"  [label="DDG: BGP_ATTR_FLAG_TRANS"];
"1000384" -> "1000568"  [label="DDG: BGP_ATTR_FLAG_TRANS"];
"1000384" -> "1000651"  [label="DDG: BGP_ATTR_FLAG_TRANS"];
"1000384" -> "1000651"  [label="DDG: BGP_ATTR_FLAG_EXTLEN"];
"1000384" -> "1000670"  [label="DDG: BGP_ATTR_FLAG_TRANS"];
"1000384" -> "1000729"  [label="DDG: BGP_ATTR_FLAG_TRANS"];
"1000384" -> "1000729"  [label="DDG: BGP_ATTR_FLAG_EXTLEN"];
"1000384" -> "1000745"  [label="DDG: BGP_ATTR_FLAG_TRANS"];
"1000384" -> "1000933"  [label="DDG: BGP_ATTR_FLAG_TRANS"];
"1000384" -> "1000933"  [label="DDG: BGP_ATTR_FLAG_EXTLEN"];
"1000384" -> "1000952"  [label="DDG: BGP_ATTR_FLAG_TRANS"];
"1000384" -> "1001040"  [label="DDG: BGP_ATTR_FLAG_TRANS"];
"1000384" -> "1001040"  [label="DDG: BGP_ATTR_FLAG_EXTLEN"];
"1000384" -> "1001055"  [label="DDG: BGP_ATTR_FLAG_TRANS"];
"1000384" -> "1001130"  [label="DDG: BGP_ATTR_FLAG_TRANS"];
"1000384" -> "1001163"  [label="DDG: BGP_ATTR_FLAG_TRANS"];
"1000384" -> "1001165"  [label="DDG: BGP_ATTR_FLAG_EXTLEN"];
"1000384" -> "1001198"  [label="DDG: BGP_ATTR_FLAG_TRANS"];
"1000384" -> "1001266"  [label="DDG: BGP_ATTR_FLAG_TRANS"];
"1000348" -> "1000347"  [label="AST: "];
"1000348" -> "1000350"  [label="CFG: "];
"1000349" -> "1000348"  [label="AST: "];
"1000350" -> "1000348"  [label="AST: "];
"1000383" -> "1000348"  [label="CFG: "];
"1000348" -> "1001316"  [label="DDG: aspath_add_seq(aspath, peer->local_as)"];
"1000350" -> "1000348"  [label="DDG: aspath"];
"1000350" -> "1000348"  [label="DDG: peer->local_as"];
"1000350" -> "1000352"  [label="CFG: "];
"1000351" -> "1000350"  [label="AST: "];
"1000352" -> "1000350"  [label="AST: "];
"1000350" -> "1001316"  [label="DDG: peer->local_as"];
"1000299" -> "1000350"  [label="DDG: aspath"];
"1000299" -> "1000292"  [label="AST: "];
"1000299" -> "1000301"  [label="CFG: "];
"1000300" -> "1000299"  [label="AST: "];
"1000301" -> "1000299"  [label="AST: "];
"1000306" -> "1000299"  [label="CFG: "];
"1000299" -> "1001316"  [label="DDG: aspath_delete_confed_seq(aspath)"];
"1000301" -> "1000299"  [label="DDG: aspath"];
"1000299" -> "1000312"  [label="DDG: aspath"];
"1000299" -> "1000334"  [label="DDG: aspath"];
"1000299" -> "1000341"  [label="DDG: aspath"];
"1000301" -> "1000302"  [label="CFG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000293" -> "1000301"  [label="DDG: aspath"];
"1000293" -> "1000292"  [label="AST: "];
"1000293" -> "1000295"  [label="CFG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000295" -> "1000293"  [label="AST: "];
"1000300" -> "1000293"  [label="CFG: "];
"1000293" -> "1001316"  [label="DDG: aspath_dup(attr->aspath)"];
"1000295" -> "1000293"  [label="DDG: attr->aspath"];
"1000295" -> "1000296"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000295" -> "1001186"  [label="DDG: attr->aspath"];
"1000369" -> "1000362"  [label="AST: "];
"1000369" -> "1000371"  [label="CFG: "];
"1000370" -> "1000369"  [label="AST: "];
"1000371" -> "1000369"  [label="AST: "];
"1000383" -> "1000369"  [label="CFG: "];
"1000369" -> "1001316"  [label="DDG: aspath_add_confed_seq(aspath, peer->local_as)"];
"1000371" -> "1000369"  [label="DDG: aspath"];
"1000371" -> "1000369"  [label="DDG: peer->local_as"];
"1000371" -> "1000373"  [label="CFG: "];
"1000372" -> "1000371"  [label="AST: "];
"1000373" -> "1000371"  [label="AST: "];
"1000371" -> "1001316"  [label="DDG: peer->local_as"];
"1000363" -> "1000371"  [label="DDG: aspath"];
"1000363" -> "1000362"  [label="AST: "];
"1000363" -> "1000365"  [label="CFG: "];
"1000364" -> "1000363"  [label="AST: "];
"1000365" -> "1000363"  [label="AST: "];
"1000370" -> "1000363"  [label="CFG: "];
"1000363" -> "1001316"  [label="DDG: aspath_dup(attr->aspath)"];
"1000365" -> "1000363"  [label="DDG: attr->aspath"];
"1000365" -> "1000366"  [label="CFG: "];
"1000366" -> "1000365"  [label="AST: "];
"1000365" -> "1001186"  [label="DDG: attr->aspath"];
"1000310" -> "1000309"  [label="AST: "];
"1000310" -> "1000312"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000312" -> "1000310"  [label="AST: "];
"1000383" -> "1000310"  [label="CFG: "];
"1000310" -> "1001316"  [label="DDG: aspath_add_seq(aspath, bgp->confed_id)"];
"1000312" -> "1000310"  [label="DDG: aspath"];
"1000312" -> "1000310"  [label="DDG: bgp->confed_id"];
"1000312" -> "1000314"  [label="CFG: "];
"1000313" -> "1000312"  [label="AST: "];
"1000314" -> "1000312"  [label="AST: "];
"1000312" -> "1001316"  [label="DDG: bgp->confed_id"];
"1000377" -> "1000376"  [label="AST: "];
"1000377" -> "1000379"  [label="CFG: "];
"1000378" -> "1000377"  [label="AST: "];
"1000379" -> "1000377"  [label="AST: "];
"1000383" -> "1000377"  [label="CFG: "];
"1000339" -> "1000323"  [label="AST: "];
"1000339" -> "1000341"  [label="CFG: "];
"1000340" -> "1000339"  [label="AST: "];
"1000341" -> "1000339"  [label="AST: "];
"1000383" -> "1000339"  [label="CFG: "];
"1000339" -> "1001316"  [label="DDG: aspath_add_seq(aspath,\n\t\t\t\t\t\t\tpeer->change_local_as)"];
"1000341" -> "1000339"  [label="DDG: aspath"];
"1000341" -> "1000339"  [label="DDG: peer->change_local_as"];
"1000341" -> "1000343"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="AST: "];
"1000341" -> "1001316"  [label="DDG: peer->change_local_as"];
"1000332" -> "1000341"  [label="DDG: aspath"];
"1000332" -> "1000331"  [label="AST: "];
"1000332" -> "1000334"  [label="CFG: "];
"1000333" -> "1000332"  [label="AST: "];
"1000334" -> "1000332"  [label="AST: "];
"1000340" -> "1000332"  [label="CFG: "];
"1000332" -> "1001316"  [label="DDG: aspath_add_seq(aspath,\n\t\t\t\t\t\t\t\tpeer->local_as)"];
"1000334" -> "1000332"  [label="DDG: aspath"];
"1000334" -> "1000332"  [label="DDG: peer->local_as"];
"1000334" -> "1000336"  [label="CFG: "];
"1000335" -> "1000334"  [label="AST: "];
"1000336" -> "1000334"  [label="AST: "];
"1000334" -> "1001316"  [label="DDG: peer->local_as"];
"1000175" -> "1000162"  [label="AST: "];
"1000175" -> "1000177"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000177" -> "1000175"  [label="AST: "];
"1000187" -> "1000175"  [label="CFG: "];
"1000175" -> "1001316"  [label="DDG: (CHECK_FLAG(peer->cap, PEER_CAP_AS4_RCV)) ? 1 : 0"];
"1001157" -> "1001156"  [label="AST: "];
"1001158" -> "1001157"  [label="AST: "];
"1001162" -> "1001157"  [label="CFG: "];
"1001157" -> "1001316"  [label="DDG: aspath_delete_confed_seq(aspath)"];
"1001157" -> "1001181"  [label="DDG: aspath"];
"1001181" -> "1001178"  [label="AST: "];
"1001181" -> "1001184"  [label="CFG: "];
"1001182" -> "1001181"  [label="AST: "];
"1001183" -> "1001181"  [label="AST: "];
"1001184" -> "1001181"  [label="AST: "];
"1001178" -> "1001181"  [label="CFG: "];
"1001181" -> "1001178"  [label="DDG: s"];
"1001181" -> "1001178"  [label="DDG: aspath"];
"1001181" -> "1001178"  [label="DDG: 1"];
"1001175" -> "1001181"  [label="DDG: s"];
"1001181" -> "1001186"  [label="DDG: aspath"];
"1001178" -> "1001156"  [label="AST: "];
"1001179" -> "1001178"  [label="AST: "];
"1001180" -> "1001178"  [label="AST: "];
"1001187" -> "1001178"  [label="CFG: "];
"1001178" -> "1001316"  [label="DDG: stream_putw_at(s, aspath_sizep, aspath_put(s, aspath, 1))"];
"1001178" -> "1001316"  [label="DDG: aspath_put(s, aspath, 1)"];
"1001178" -> "1001316"  [label="DDG: aspath_sizep"];
"1001171" -> "1001178"  [label="DDG: aspath_sizep"];
"1001178" -> "1001196"  [label="DDG: s"];
"1001178" -> "1001244"  [label="DDG: s"];
"1001178" -> "1001264"  [label="DDG: s"];
"1001178" -> "1001299"  [label="DDG: s"];
"1001178" -> "1001313"  [label="DDG: s"];
"1001196" -> "1001195"  [label="AST: "];
"1001196" -> "1001198"  [label="CFG: "];
"1001197" -> "1001196"  [label="AST: "];
"1001198" -> "1001196"  [label="AST: "];
"1001202" -> "1001196"  [label="CFG: "];
"1001196" -> "1001316"  [label="DDG: BGP_ATTR_FLAG_OPTIONAL | BGP_ATTR_FLAG_TRANS"];
"1001196" -> "1001316"  [label="DDG: stream_putc(s, BGP_ATTR_FLAG_OPTIONAL | BGP_ATTR_FLAG_TRANS)"];
"1001061" -> "1001196"  [label="DDG: s"];
"1000757" -> "1001196"  [label="DDG: s"];
"1000397" -> "1001196"  [label="DDG: s"];
"1000851" -> "1001196"  [label="DDG: s"];
"1000555" -> "1001196"  [label="DDG: s"];
"1000478" -> "1001196"  [label="DDG: s"];
"1001151" -> "1001196"  [label="DDG: s"];
"1001100" -> "1001196"  [label="DDG: s"];
"1000874" -> "1001196"  [label="DDG: s"];
"1000967" -> "1001196"  [label="DDG: s"];
"1000536" -> "1001196"  [label="DDG: s"];
"1000611" -> "1001196"  [label="DDG: s"];
"1001046" -> "1001196"  [label="DDG: s"];
"1000502" -> "1001196"  [label="DDG: s"];
"1000881" -> "1001196"  [label="DDG: s"];
"1000685" -> "1001196"  [label="DDG: s"];
"1000450" -> "1001196"  [label="DDG: s"];
"1001198" -> "1001196"  [label="DDG: BGP_ATTR_FLAG_OPTIONAL"];
"1001198" -> "1001196"  [label="DDG: BGP_ATTR_FLAG_TRANS"];
"1001196" -> "1001201"  [label="DDG: s"];
"1001201" -> "1001195"  [label="AST: "];
"1001201" -> "1001203"  [label="CFG: "];
"1001202" -> "1001201"  [label="AST: "];
"1001203" -> "1001201"  [label="AST: "];
"1001205" -> "1001201"  [label="CFG: "];
"1001201" -> "1001316"  [label="DDG: BGP_ATTR_AS4_AGGREGATOR"];
"1001201" -> "1001316"  [label="DDG: stream_putc(s, BGP_ATTR_AS4_AGGREGATOR)"];
"1001201" -> "1001204"  [label="DDG: s"];
"1001204" -> "1001195"  [label="AST: "];
"1001204" -> "1001206"  [label="CFG: "];
"1001205" -> "1001204"  [label="AST: "];
"1001206" -> "1001204"  [label="AST: "];
"1001208" -> "1001204"  [label="CFG: "];
"1001204" -> "1001316"  [label="DDG: stream_putc(s, 8)"];
"1001204" -> "1001207"  [label="DDG: s"];
"1001207" -> "1001195"  [label="AST: "];
"1001207" -> "1001209"  [label="CFG: "];
"1001208" -> "1001207"  [label="AST: "];
"1001209" -> "1001207"  [label="AST: "];
"1001213" -> "1001207"  [label="CFG: "];
"1001207" -> "1001316"  [label="DDG: attr->aggregator_as"];
"1001207" -> "1001316"  [label="DDG: stream_putl(s, attr->aggregator_as)"];
"1000580" -> "1001207"  [label="DDG: attr->aggregator_as"];
"1000606" -> "1001207"  [label="DDG: attr->aggregator_as"];
"1000591" -> "1001207"  [label="DDG: attr->aggregator_as"];
"1001207" -> "1001212"  [label="DDG: s"];
"1001212" -> "1001195"  [label="AST: "];
"1001212" -> "1001214"  [label="CFG: "];
"1001213" -> "1001212"  [label="AST: "];
"1001214" -> "1001212"  [label="AST: "];
"1001224" -> "1001212"  [label="CFG: "];
"1001212" -> "1001316"  [label="DDG: attr->aggregator_addr.s_addr"];
"1001212" -> "1001316"  [label="DDG: stream_put_ipv4(s, attr->aggregator_addr.s_addr)"];
"1000611" -> "1001212"  [label="DDG: attr->aggregator_addr.s_addr"];
"1001212" -> "1001244"  [label="DDG: s"];
"1001212" -> "1001264"  [label="DDG: s"];
"1001212" -> "1001299"  [label="DDG: s"];
"1001212" -> "1001313"  [label="DDG: s"];
"1001244" -> "1001243"  [label="AST: "];
"1001244" -> "1001249"  [label="CFG: "];
"1001245" -> "1001244"  [label="AST: "];
"1001246" -> "1001244"  [label="AST: "];
"1001247" -> "1001244"  [label="AST: "];
"1001248" -> "1001244"  [label="AST: "];
"1001249" -> "1001244"  [label="AST: "];
"1001251" -> "1001244"  [label="CFG: "];
"1001244" -> "1001316"  [label="DDG: BGP_ATTR_ENCAP"];
"1001244" -> "1001316"  [label="DDG: bgp_packet_mpattr_tea(bgp, peer, s, attr, BGP_ATTR_ENCAP)"];
"1000186" -> "1001244"  [label="DDG: bgp"];
"1000188" -> "1001244"  [label="DDG: bgp"];
"1000148" -> "1001244"  [label="DDG: bgp"];
"1000423" -> "1001244"  [label="DDG: peer"];
"1001061" -> "1001244"  [label="DDG: s"];
"1000757" -> "1001244"  [label="DDG: s"];
"1000397" -> "1001244"  [label="DDG: s"];
"1000555" -> "1001244"  [label="DDG: s"];
"1000478" -> "1001244"  [label="DDG: s"];
"1001151" -> "1001244"  [label="DDG: s"];
"1001100" -> "1001244"  [label="DDG: s"];
"1000874" -> "1001244"  [label="DDG: s"];
"1000967" -> "1001244"  [label="DDG: s"];
"1000536" -> "1001244"  [label="DDG: s"];
"1000611" -> "1001244"  [label="DDG: s"];
"1001046" -> "1001244"  [label="DDG: s"];
"1000502" -> "1001244"  [label="DDG: s"];
"1000851" -> "1001244"  [label="DDG: s"];
"1000881" -> "1001244"  [label="DDG: s"];
"1000685" -> "1001244"  [label="DDG: s"];
"1000450" -> "1001244"  [label="DDG: s"];
"1000442" -> "1001244"  [label="DDG: attr"];
"1001244" -> "1001250"  [label="DDG: bgp"];
"1001244" -> "1001250"  [label="DDG: peer"];
"1001244" -> "1001250"  [label="DDG: s"];
"1001244" -> "1001250"  [label="DDG: attr"];
"1001250" -> "1001243"  [label="AST: "];
"1001250" -> "1001255"  [label="CFG: "];
"1001251" -> "1001250"  [label="AST: "];
"1001252" -> "1001250"  [label="AST: "];
"1001253" -> "1001250"  [label="AST: "];
"1001254" -> "1001250"  [label="AST: "];
"1001255" -> "1001250"  [label="AST: "];
"1001259" -> "1001250"  [label="CFG: "];
"1001250" -> "1001316"  [label="DDG: bgp"];
"1001250" -> "1001316"  [label="DDG: attr"];
"1001250" -> "1001316"  [label="DDG: BGP_ATTR_VNC"];
"1001250" -> "1001316"  [label="DDG: bgp_packet_mpattr_tea(bgp, peer, s, attr, BGP_ATTR_VNC)"];
"1001250" -> "1001316"  [label="DDG: peer"];
"1000148" -> "1001250"  [label="DDG: bgp"];
"1001250" -> "1001264"  [label="DDG: s"];
"1001250" -> "1001299"  [label="DDG: s"];
"1001250" -> "1001313"  [label="DDG: s"];
"1001264" -> "1001263"  [label="AST: "];
"1001264" -> "1001266"  [label="CFG: "];
"1001265" -> "1001264"  [label="AST: "];
"1001266" -> "1001264"  [label="AST: "];
"1001270" -> "1001264"  [label="CFG: "];
"1001264" -> "1001316"  [label="DDG: BGP_ATTR_FLAG_OPTIONAL | BGP_ATTR_FLAG_TRANS"];
"1001264" -> "1001316"  [label="DDG: stream_putc(s, BGP_ATTR_FLAG_OPTIONAL | BGP_ATTR_FLAG_TRANS)"];
"1001061" -> "1001264"  [label="DDG: s"];
"1000757" -> "1001264"  [label="DDG: s"];
"1000397" -> "1001264"  [label="DDG: s"];
"1000555" -> "1001264"  [label="DDG: s"];
"1000478" -> "1001264"  [label="DDG: s"];
"1001151" -> "1001264"  [label="DDG: s"];
"1001100" -> "1001264"  [label="DDG: s"];
"1000874" -> "1001264"  [label="DDG: s"];
"1000967" -> "1001264"  [label="DDG: s"];
"1000536" -> "1001264"  [label="DDG: s"];
"1000611" -> "1001264"  [label="DDG: s"];
"1001046" -> "1001264"  [label="DDG: s"];
"1000502" -> "1001264"  [label="DDG: s"];
"1000851" -> "1001264"  [label="DDG: s"];
"1000881" -> "1001264"  [label="DDG: s"];
"1000685" -> "1001264"  [label="DDG: s"];
"1000450" -> "1001264"  [label="DDG: s"];
"1001266" -> "1001264"  [label="DDG: BGP_ATTR_FLAG_OPTIONAL"];
"1001266" -> "1001264"  [label="DDG: BGP_ATTR_FLAG_TRANS"];
"1001264" -> "1001269"  [label="DDG: s"];
"1001269" -> "1001263"  [label="AST: "];
"1001269" -> "1001271"  [label="CFG: "];
"1001270" -> "1001269"  [label="AST: "];
"1001271" -> "1001269"  [label="AST: "];
"1001273" -> "1001269"  [label="CFG: "];
"1001269" -> "1001316"  [label="DDG: BGP_ATTR_PMSI_TUNNEL"];
"1001269" -> "1001316"  [label="DDG: stream_putc(s, BGP_ATTR_PMSI_TUNNEL)"];
"1001261" -> "1001269"  [label="DDG: BGP_ATTR_PMSI_TUNNEL"];
"1001269" -> "1001272"  [label="DDG: s"];
"1001272" -> "1001263"  [label="AST: "];
"1001272" -> "1001274"  [label="CFG: "];
"1001273" -> "1001272"  [label="AST: "];
"1001274" -> "1001272"  [label="AST: "];
"1001276" -> "1001272"  [label="CFG: "];
"1001272" -> "1001316"  [label="DDG: stream_putc(s, 9)"];
"1001272" -> "1001275"  [label="DDG: s"];
"1001275" -> "1001263"  [label="AST: "];
"1001275" -> "1001277"  [label="CFG: "];
"1001276" -> "1001275"  [label="AST: "];
"1001277" -> "1001275"  [label="AST: "];
"1001279" -> "1001275"  [label="CFG: "];
"1001275" -> "1001316"  [label="DDG: stream_putc(s, 0)"];
"1001275" -> "1001278"  [label="DDG: s"];
"1001278" -> "1001263"  [label="AST: "];
"1001278" -> "1001280"  [label="CFG: "];
"1001279" -> "1001278"  [label="AST: "];
"1001280" -> "1001278"  [label="AST: "];
"1001282" -> "1001278"  [label="CFG: "];
"1001278" -> "1001316"  [label="DDG: stream_putc(s, PMSI_TNLTYPE_INGR_REPL)"];
"1001278" -> "1001316"  [label="DDG: PMSI_TNLTYPE_INGR_REPL"];
"1001278" -> "1001281"  [label="DDG: s"];
"1001281" -> "1001263"  [label="AST: "];
"1001281" -> "1001287"  [label="CFG: "];
"1001282" -> "1001281"  [label="AST: "];
"1001283" -> "1001281"  [label="AST: "];
"1001287" -> "1001281"  [label="AST: "];
"1001289" -> "1001281"  [label="CFG: "];
"1001281" -> "1001316"  [label="DDG: &(attr->label)"];
"1001281" -> "1001316"  [label="DDG: stream_put(s, &(attr->label),\n\t\t\t   BGP_LABEL_BYTES)"];
"1001281" -> "1001316"  [label="DDG: BGP_LABEL_BYTES"];
"1001281" -> "1001288"  [label="DDG: s"];
"1001288" -> "1001263"  [label="AST: "];
"1001288" -> "1001290"  [label="CFG: "];
"1001289" -> "1001288"  [label="AST: "];
"1001290" -> "1001288"  [label="AST: "];
"1001297" -> "1001288"  [label="CFG: "];
"1001288" -> "1001316"  [label="DDG: attr->nexthop.s_addr"];
"1001288" -> "1001316"  [label="DDG: stream_put_ipv4(s, attr->nexthop.s_addr)"];
"1000450" -> "1001288"  [label="DDG: attr->nexthop.s_addr"];
"1001288" -> "1001299"  [label="DDG: s"];
"1001288" -> "1001313"  [label="DDG: s"];
"1001299" -> "1001295"  [label="AST: "];
"1001299" -> "1001306"  [label="CFG: "];
"1001300" -> "1001299"  [label="AST: "];
"1001301" -> "1001299"  [label="AST: "];
"1001306" -> "1001299"  [label="AST: "];
"1001314" -> "1001299"  [label="CFG: "];
"1001299" -> "1001316"  [label="DDG: stream_put(s, attr->transit->val, attr->transit->length)"];
"1001299" -> "1001316"  [label="DDG: attr->transit->val"];
"1001299" -> "1001316"  [label="DDG: attr->transit->length"];
"1001061" -> "1001299"  [label="DDG: s"];
"1000757" -> "1001299"  [label="DDG: s"];
"1000397" -> "1001299"  [label="DDG: s"];
"1000555" -> "1001299"  [label="DDG: s"];
"1000478" -> "1001299"  [label="DDG: s"];
"1001151" -> "1001299"  [label="DDG: s"];
"1001100" -> "1001299"  [label="DDG: s"];
"1000874" -> "1001299"  [label="DDG: s"];
"1000967" -> "1001299"  [label="DDG: s"];
"1000536" -> "1001299"  [label="DDG: s"];
"1000611" -> "1001299"  [label="DDG: s"];
"1001046" -> "1001299"  [label="DDG: s"];
"1000502" -> "1001299"  [label="DDG: s"];
"1000851" -> "1001299"  [label="DDG: s"];
"1000881" -> "1001299"  [label="DDG: s"];
"1000685" -> "1001299"  [label="DDG: s"];
"1000450" -> "1001299"  [label="DDG: s"];
"1001299" -> "1001313"  [label="DDG: s"];
"1001313" -> "1001312"  [label="AST: "];
"1001313" -> "1001314"  [label="CFG: "];
"1001314" -> "1001313"  [label="AST: "];
"1001315" -> "1001313"  [label="CFG: "];
"1001313" -> "1001316"  [label="DDG: s"];
"1001313" -> "1001312"  [label="DDG: s"];
"1001061" -> "1001313"  [label="DDG: s"];
"1000757" -> "1001313"  [label="DDG: s"];
"1000397" -> "1001313"  [label="DDG: s"];
"1000478" -> "1001313"  [label="DDG: s"];
"1001151" -> "1001313"  [label="DDG: s"];
"1001100" -> "1001313"  [label="DDG: s"];
"1000874" -> "1001313"  [label="DDG: s"];
"1000967" -> "1001313"  [label="DDG: s"];
"1000536" -> "1001313"  [label="DDG: s"];
"1000611" -> "1001313"  [label="DDG: s"];
"1001046" -> "1001313"  [label="DDG: s"];
"1000502" -> "1001313"  [label="DDG: s"];
"1000851" -> "1001313"  [label="DDG: s"];
"1000555" -> "1001313"  [label="DDG: s"];
"1000881" -> "1001313"  [label="DDG: s"];
"1000685" -> "1001313"  [label="DDG: s"];
"1000450" -> "1001313"  [label="DDG: s"];
"1001312" -> "1001311"  [label="AST: "];
"1001312" -> "1001315"  [label="CFG: "];
"1001315" -> "1001312"  [label="AST: "];
"1001311" -> "1001312"  [label="CFG: "];
"1001312" -> "1001316"  [label="DDG: stream_get_endp(s) - cp"];
"1001312" -> "1001316"  [label="DDG: stream_get_endp(s)"];
"1001312" -> "1001316"  [label="DDG: cp"];
"1001312" -> "1001311"  [label="DDG: stream_get_endp(s) - cp"];
"1000193" -> "1001312"  [label="DDG: cp"];
"1001311" -> "1000162"  [label="AST: "];
"1001316" -> "1001311"  [label="CFG: "];
"1001311" -> "1001316"  [label="DDG: <RET>"];
"1001186" -> "1001185"  [label="AST: "];
"1001186" -> "1001188"  [label="CFG: "];
"1001187" -> "1001186"  [label="AST: "];
"1001188" -> "1001186"  [label="AST: "];
"1001192" -> "1001186"  [label="CFG: "];
"1001194" -> "1001186"  [label="CFG: "];
"1001186" -> "1001316"  [label="DDG: aspath != attr->aspath"];
"1001186" -> "1001316"  [label="DDG: attr->aspath"];
"1001186" -> "1001316"  [label="DDG: aspath"];
"1001186" -> "1001191"  [label="DDG: aspath"];
"1001191" -> "1001185"  [label="AST: "];
"1001191" -> "1001192"  [label="CFG: "];
"1001192" -> "1001191"  [label="AST: "];
"1001194" -> "1001191"  [label="CFG: "];
"1001191" -> "1001316"  [label="DDG: aspath"];
"1001191" -> "1001316"  [label="DDG: aspath_free(aspath)"];
}
