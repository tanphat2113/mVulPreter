digraph "0_libXrandr_a0df3e1c7728205e5c7650b2e6dce684139254a6_1@API" {
"1000205" [label="(Call,Xmalloc(rbytes))"];
"1000190" [label="(Call,rbytes = (sizeof(XRRProviderResources) + rep.nProviders *\n\t\t  sizeof(RRProvider)))"];
"1000195" [label="(Call,rep.nProviders *\n\t\t  sizeof(RRProvider))"];
"1000185" [label="(Call,rep.nProviders * 4)"];
"1000203" [label="(Call,(XRRProviderResources *) Xmalloc(rbytes))"];
"1000201" [label="(Call,xrpr = (XRRProviderResources *) Xmalloc(rbytes))"];
"1000222" [label="(Call,xrpr == NULL)"];
"1000258" [label="(Call,(XRRProviderResources *) xrpr)"];
"1000257" [label="(Return,return (XRRProviderResources *) xrpr;)"];
"1000276" [label="(Call,RRCheckExtension (dpy, info, NULL))"];
"1000280" [label="(Call,LockDisplay (dpy))"];
"1000313" [label="(Call,_XReply (dpy, (xReply *) &rep, ProviderInfoExtra >> 2, xFalse))"];
"1000312" [label="(Call,!_XReply (dpy, (xReply *) &rep, ProviderInfoExtra >> 2, xFalse))"];
"1000324" [label="(Call,UnlockDisplay (dpy))"];
"1000327" [label="(Return,return NULL;)"];
"1000369" [label="(Return,return NULL;)"];
"1000185" [label="(Call,rep.nProviders * 4)"];
"1000268" [label="(Call,XRRFindDisplay(dpy))"];
"1000324" [label="(Call,UnlockDisplay (dpy))"];
"1000224" [label="(Identifier,NULL)"];
"1000263" [label="(Identifier,provider_resources)"];
"1000103" [label="(MethodParameterIn,Display *dpy)"];
"1000370" [label="(Identifier,NULL)"];
"1000191" [label="(Identifier,rbytes)"];
"1000225" [label="(Block,)"];
"1000311" [label="(ControlStructure,if (!_XReply (dpy, (xReply *) &rep, ProviderInfoExtra >> 2, xFalse)))"];
"1000326" [label="(Call,SyncHandle ())"];
"1000201" [label="(Call,xrpr = (XRRProviderResources *) Xmalloc(rbytes))"];
"1000257" [label="(Return,return (XRRProviderResources *) xrpr;)"];
"1000315" [label="(Call,(xReply *) &rep)"];
"1000279" [label="(Identifier,NULL)"];
"1000280" [label="(Call,LockDisplay (dpy))"];
"1000199" [label="(Call,sizeof(RRProvider))"];
"1000277" [label="(Identifier,dpy)"];
"1000328" [label="(Identifier,NULL)"];
"1000266" [label="(Call,*info = XRRFindDisplay(dpy))"];
"1000189" [label="(Literal,4)"];
"1000203" [label="(Call,(XRRProviderResources *) Xmalloc(rbytes))"];
"1000192" [label="(Call,sizeof(XRRProviderResources) + rep.nProviders *\n\t\t  sizeof(RRProvider))"];
"1000281" [label="(Identifier,dpy)"];
"1000283" [label="(Identifier,RRGetProviderInfo)"];
"1000314" [label="(Identifier,dpy)"];
"1000264" [label="(Block,)"];
"1000330" [label="(Identifier,nbytes)"];
"1000205" [label="(Call,Xmalloc(rbytes))"];
"1000196" [label="(Call,rep.nProviders)"];
"1000206" [label="(Identifier,rbytes)"];
"1000322" [label="(Identifier,xFalse)"];
"1000312" [label="(Call,!_XReply (dpy, (xReply *) &rep, ProviderInfoExtra >> 2, xFalse))"];
"1000258" [label="(Call,(XRRProviderResources *) xrpr)"];
"1000117" [label="(Call,RRCheckExtension (dpy, info, NULL))"];
"1000323" [label="(Block,)"];
"1000260" [label="(Identifier,xrpr)"];
"1000278" [label="(Identifier,info)"];
"1000190" [label="(Call,rbytes = (sizeof(XRRProviderResources) + rep.nProviders *\n\t\t  sizeof(RRProvider)))"];
"1000195" [label="(Call,rep.nProviders *\n\t\t  sizeof(RRProvider))"];
"1000222" [label="(Call,xrpr == NULL)"];
"1000369" [label="(Return,return NULL;)"];
"1000186" [label="(Call,rep.nProviders)"];
"1000238" [label="(Call,rep.nProviders << 2)"];
"1000327" [label="(Return,return NULL;)"];
"1000227" [label="(Identifier,dpy)"];
"1000218" [label="(Call,xrpr = NULL)"];
"1000313" [label="(Call,_XReply (dpy, (xReply *) &rep, ProviderInfoExtra >> 2, xFalse))"];
"1000147" [label="(Call,_XReply (dpy, (xReply *) &rep, 0, xFalse))"];
"1000183" [label="(Call,(long) (rep.nProviders * 4))"];
"1000223" [label="(Identifier,xrpr)"];
"1000325" [label="(Identifier,dpy)"];
"1000319" [label="(Call,ProviderInfoExtra >> 2)"];
"1000221" [label="(ControlStructure,if (xrpr == NULL))"];
"1000591" [label="(MethodReturn,RET)"];
"1000276" [label="(Call,RRCheckExtension (dpy, info, NULL))"];
"1000171" [label="(Block,)"];
"1000202" [label="(Identifier,xrpr)"];
"1000205" -> "1000203"  [label="AST: "];
"1000205" -> "1000206"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000203" -> "1000205"  [label="CFG: "];
"1000205" -> "1000591"  [label="DDG: rbytes"];
"1000205" -> "1000203"  [label="DDG: rbytes"];
"1000190" -> "1000205"  [label="DDG: rbytes"];
"1000190" -> "1000171"  [label="AST: "];
"1000190" -> "1000192"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000192" -> "1000190"  [label="AST: "];
"1000202" -> "1000190"  [label="CFG: "];
"1000190" -> "1000591"  [label="DDG: sizeof(XRRProviderResources) + rep.nProviders *\n\t\t  sizeof(RRProvider)"];
"1000195" -> "1000190"  [label="DDG: rep.nProviders"];
"1000195" -> "1000192"  [label="AST: "];
"1000195" -> "1000199"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000199" -> "1000195"  [label="AST: "];
"1000192" -> "1000195"  [label="CFG: "];
"1000195" -> "1000591"  [label="DDG: rep.nProviders"];
"1000195" -> "1000192"  [label="DDG: rep.nProviders"];
"1000185" -> "1000195"  [label="DDG: rep.nProviders"];
"1000195" -> "1000238"  [label="DDG: rep.nProviders"];
"1000185" -> "1000183"  [label="AST: "];
"1000185" -> "1000189"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000189" -> "1000185"  [label="AST: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000185" -> "1000183"  [label="DDG: rep.nProviders"];
"1000185" -> "1000183"  [label="DDG: 4"];
"1000203" -> "1000201"  [label="AST: "];
"1000204" -> "1000203"  [label="AST: "];
"1000201" -> "1000203"  [label="CFG: "];
"1000203" -> "1000591"  [label="DDG: Xmalloc(rbytes)"];
"1000203" -> "1000201"  [label="DDG: Xmalloc(rbytes)"];
"1000201" -> "1000171"  [label="AST: "];
"1000202" -> "1000201"  [label="AST: "];
"1000223" -> "1000201"  [label="CFG: "];
"1000201" -> "1000591"  [label="DDG: (XRRProviderResources *) Xmalloc(rbytes)"];
"1000201" -> "1000222"  [label="DDG: xrpr"];
"1000222" -> "1000221"  [label="AST: "];
"1000222" -> "1000224"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000224" -> "1000222"  [label="AST: "];
"1000227" -> "1000222"  [label="CFG: "];
"1000263" -> "1000222"  [label="CFG: "];
"1000222" -> "1000591"  [label="DDG: xrpr"];
"1000222" -> "1000591"  [label="DDG: xrpr == NULL"];
"1000222" -> "1000591"  [label="DDG: NULL"];
"1000218" -> "1000222"  [label="DDG: xrpr"];
"1000117" -> "1000222"  [label="DDG: NULL"];
"1000222" -> "1000258"  [label="DDG: xrpr"];
"1000222" -> "1000276"  [label="DDG: NULL"];
"1000258" -> "1000257"  [label="AST: "];
"1000258" -> "1000260"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000260" -> "1000258"  [label="AST: "];
"1000257" -> "1000258"  [label="CFG: "];
"1000258" -> "1000591"  [label="DDG: xrpr"];
"1000258" -> "1000591"  [label="DDG: (XRRProviderResources *) xrpr"];
"1000258" -> "1000257"  [label="DDG: (XRRProviderResources *) xrpr"];
"1000257" -> "1000225"  [label="AST: "];
"1000591" -> "1000257"  [label="CFG: "];
"1000257" -> "1000591"  [label="DDG: <RET>"];
"1000276" -> "1000264"  [label="AST: "];
"1000276" -> "1000279"  [label="CFG: "];
"1000277" -> "1000276"  [label="AST: "];
"1000278" -> "1000276"  [label="AST: "];
"1000279" -> "1000276"  [label="AST: "];
"1000281" -> "1000276"  [label="CFG: "];
"1000276" -> "1000591"  [label="DDG: info"];
"1000276" -> "1000591"  [label="DDG: RRCheckExtension (dpy, info, NULL)"];
"1000276" -> "1000591"  [label="DDG: NULL"];
"1000268" -> "1000276"  [label="DDG: dpy"];
"1000103" -> "1000276"  [label="DDG: dpy"];
"1000266" -> "1000276"  [label="DDG: info"];
"1000276" -> "1000280"  [label="DDG: dpy"];
"1000276" -> "1000327"  [label="DDG: NULL"];
"1000276" -> "1000369"  [label="DDG: NULL"];
"1000280" -> "1000264"  [label="AST: "];
"1000280" -> "1000281"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000283" -> "1000280"  [label="CFG: "];
"1000280" -> "1000591"  [label="DDG: LockDisplay (dpy)"];
"1000103" -> "1000280"  [label="DDG: dpy"];
"1000280" -> "1000313"  [label="DDG: dpy"];
"1000313" -> "1000312"  [label="AST: "];
"1000313" -> "1000322"  [label="CFG: "];
"1000314" -> "1000313"  [label="AST: "];
"1000315" -> "1000313"  [label="AST: "];
"1000319" -> "1000313"  [label="AST: "];
"1000322" -> "1000313"  [label="AST: "];
"1000312" -> "1000313"  [label="CFG: "];
"1000313" -> "1000591"  [label="DDG: (xReply *) &rep"];
"1000313" -> "1000591"  [label="DDG: ProviderInfoExtra >> 2"];
"1000313" -> "1000591"  [label="DDG: xFalse"];
"1000313" -> "1000591"  [label="DDG: dpy"];
"1000313" -> "1000312"  [label="DDG: dpy"];
"1000313" -> "1000312"  [label="DDG: (xReply *) &rep"];
"1000313" -> "1000312"  [label="DDG: ProviderInfoExtra >> 2"];
"1000313" -> "1000312"  [label="DDG: xFalse"];
"1000103" -> "1000313"  [label="DDG: dpy"];
"1000315" -> "1000313"  [label="DDG: &rep"];
"1000319" -> "1000313"  [label="DDG: ProviderInfoExtra"];
"1000319" -> "1000313"  [label="DDG: 2"];
"1000147" -> "1000313"  [label="DDG: xFalse"];
"1000313" -> "1000324"  [label="DDG: dpy"];
"1000312" -> "1000311"  [label="AST: "];
"1000325" -> "1000312"  [label="CFG: "];
"1000330" -> "1000312"  [label="CFG: "];
"1000312" -> "1000591"  [label="DDG: !_XReply (dpy, (xReply *) &rep, ProviderInfoExtra >> 2, xFalse)"];
"1000312" -> "1000591"  [label="DDG: _XReply (dpy, (xReply *) &rep, ProviderInfoExtra >> 2, xFalse)"];
"1000324" -> "1000323"  [label="AST: "];
"1000324" -> "1000325"  [label="CFG: "];
"1000325" -> "1000324"  [label="AST: "];
"1000326" -> "1000324"  [label="CFG: "];
"1000324" -> "1000591"  [label="DDG: UnlockDisplay (dpy)"];
"1000324" -> "1000591"  [label="DDG: dpy"];
"1000103" -> "1000324"  [label="DDG: dpy"];
"1000327" -> "1000323"  [label="AST: "];
"1000327" -> "1000328"  [label="CFG: "];
"1000328" -> "1000327"  [label="AST: "];
"1000591" -> "1000327"  [label="CFG: "];
"1000327" -> "1000591"  [label="DDG: <RET>"];
"1000328" -> "1000327"  [label="DDG: NULL"];
"1000369" -> "1000264"  [label="AST: "];
"1000369" -> "1000370"  [label="CFG: "];
"1000370" -> "1000369"  [label="AST: "];
"1000591" -> "1000369"  [label="CFG: "];
"1000369" -> "1000591"  [label="DDG: <RET>"];
"1000370" -> "1000369"  [label="DDG: NULL"];
}
