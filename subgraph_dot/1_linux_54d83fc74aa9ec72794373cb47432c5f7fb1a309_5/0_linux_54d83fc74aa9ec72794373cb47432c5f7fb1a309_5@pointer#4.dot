digraph "0_linux_54d83fc74aa9ec72794373cb47432c5f7fb1a309_5@pointer" {
"1000185" [label="(Call,unconditional(&s->ip))"];
"1000179" [label="(Call,t->verdict < 0 &&\n\t\t   unconditional(&s->ip))"];
"1000163" [label="(Call,strcmp(t->target.u.kernel.target->name,\n \t\t\t   XT_STANDARD_TARGET) == 0 &&\n\t\t   t->verdict < 0 &&\n\t\t   unconditional(&s->ip))"];
"1000156" [label="(Call,s->target_offset == sizeof(struct ipt_entry) &&\n \t\t    strcmp(t->target.u.kernel.target->name,\n \t\t\t   XT_STANDARD_TARGET) == 0 &&\n\t\t   t->verdict < 0 &&\n\t\t   unconditional(&s->ip))"];
"1000163" [label="(Call,strcmp(t->target.u.kernel.target->name,\n \t\t\t   XT_STANDARD_TARGET) == 0 &&\n\t\t   t->verdict < 0 &&\n\t\t   unconditional(&s->ip))"];
"1000155" [label="(ControlStructure,if (s->target_offset == sizeof(struct ipt_entry) &&\n \t\t    strcmp(t->target.u.kernel.target->name,\n \t\t\t   XT_STANDARD_TARGET) == 0 &&\n\t\t   t->verdict < 0 &&\n\t\t   unconditional(&s->ip)))"];
"1000213" [label="(MethodReturn,RET)"];
"1000156" [label="(Call,s->target_offset == sizeof(struct ipt_entry) &&\n \t\t    strcmp(t->target.u.kernel.target->name,\n \t\t\t   XT_STANDARD_TARGET) == 0 &&\n\t\t   t->verdict < 0 &&\n\t\t   unconditional(&s->ip))"];
"1000164" [label="(Call,strcmp(t->target.u.kernel.target->name,\n \t\t\t   XT_STANDARD_TARGET) == 0)"];
"1000179" [label="(Call,t->verdict < 0 &&\n\t\t   unconditional(&s->ip))"];
"1000193" [label="(Identifier,comment)"];
"1000185" [label="(Call,unconditional(&s->ip))"];
"1000206" [label="(Literal,1)"];
"1000157" [label="(Call,s->target_offset == sizeof(struct ipt_entry))"];
"1000186" [label="(Call,&s->ip)"];
"1000180" [label="(Call,t->verdict < 0)"];
"1000185" -> "1000179"  [label="AST: "];
"1000185" -> "1000186"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000179" -> "1000185"  [label="CFG: "];
"1000185" -> "1000213"  [label="DDG: &s->ip"];
"1000185" -> "1000179"  [label="DDG: &s->ip"];
"1000179" -> "1000163"  [label="AST: "];
"1000179" -> "1000180"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000163" -> "1000179"  [label="CFG: "];
"1000179" -> "1000213"  [label="DDG: unconditional(&s->ip)"];
"1000179" -> "1000213"  [label="DDG: t->verdict < 0"];
"1000179" -> "1000163"  [label="DDG: t->verdict < 0"];
"1000179" -> "1000163"  [label="DDG: unconditional(&s->ip)"];
"1000180" -> "1000179"  [label="DDG: t->verdict"];
"1000180" -> "1000179"  [label="DDG: 0"];
"1000163" -> "1000156"  [label="AST: "];
"1000163" -> "1000164"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000156" -> "1000163"  [label="CFG: "];
"1000163" -> "1000213"  [label="DDG: strcmp(t->target.u.kernel.target->name,\n \t\t\t   XT_STANDARD_TARGET) == 0"];
"1000163" -> "1000213"  [label="DDG: t->verdict < 0 &&\n\t\t   unconditional(&s->ip)"];
"1000163" -> "1000156"  [label="DDG: strcmp(t->target.u.kernel.target->name,\n \t\t\t   XT_STANDARD_TARGET) == 0"];
"1000163" -> "1000156"  [label="DDG: t->verdict < 0 &&\n\t\t   unconditional(&s->ip)"];
"1000164" -> "1000163"  [label="DDG: strcmp(t->target.u.kernel.target->name,\n \t\t\t   XT_STANDARD_TARGET)"];
"1000164" -> "1000163"  [label="DDG: 0"];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000157"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000193" -> "1000156"  [label="CFG: "];
"1000206" -> "1000156"  [label="CFG: "];
"1000156" -> "1000213"  [label="DDG: s->target_offset == sizeof(struct ipt_entry)"];
"1000156" -> "1000213"  [label="DDG: s->target_offset == sizeof(struct ipt_entry) &&\n \t\t    strcmp(t->target.u.kernel.target->name,\n \t\t\t   XT_STANDARD_TARGET) == 0 &&\n\t\t   t->verdict < 0 &&\n\t\t   unconditional(&s->ip)"];
"1000156" -> "1000213"  [label="DDG: strcmp(t->target.u.kernel.target->name,\n \t\t\t   XT_STANDARD_TARGET) == 0 &&\n\t\t   t->verdict < 0 &&\n\t\t   unconditional(&s->ip)"];
"1000157" -> "1000156"  [label="DDG: s->target_offset"];
}
