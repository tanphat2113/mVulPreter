digraph "0_openssl_280b1f1ad12131defcd986676a8fc9717aaa601b@API" {
"1000745" [label="(Call,OPENSSL_free(buf))"];
"1000742" [label="(Call,buf != buf_space)"];
"1000190" [label="(Call,memcpy(buf,p,n))"];
"1000127" [label="(Call,*buf= &(buf_space[0]))"];
"1000185" [label="(Call,p=s->packet)"];
"1000179" [label="(Call,n != sizeof buf_space)"];
"1000172" [label="(Call,n=ssl23_read_bytes(s, sizeof buf_space))"];
"1000174" [label="(Call,ssl23_read_bytes(s, sizeof buf_space))"];
"1000169" [label="(Call,ssl3_setup_buffers(s))"];
"1000123" [label="(MethodParameterIn,SSL *s)"];
"1000246" [label="(Call,p[3] == SSL3_VERSION_MAJOR)"];
"1000632" [label="(Call,(char *)p)"];
"1000209" [label="(Call,p[3] == 0x00)"];
"1000178" [label="(ControlStructure,if (n != sizeof buf_space))"];
"1000127" [label="(Call,*buf= &(buf_space[0]))"];
"1000220" [label="(Call,v[0]=p[3])"];
"1000479" [label="(Call,v[1]=p[10])"];
"1000186" [label="(Identifier,p)"];
"1000690" [label="(Call,tls1_suiteb(s))"];
"1000123" [label="(MethodParameterIn,SSL *s)"];
"1000196" [label="(Call,p[0] & 0x80)"];
"1000267" [label="(Call,p[4] >= TLS1_VERSION_MINOR)"];
"1000487" [label="(Call,p[9] > SSL3_VERSION_MAJOR)"];
"1000741" [label="(ControlStructure,if (buf != buf_space))"];
"1000193" [label="(Identifier,n)"];
"1000300" [label="(Call,p[4] >= TLS1_1_VERSION_MINOR)"];
"1000187" [label="(Call,s->packet)"];
"1000456" [label="(Call,p[4] < 6)"];
"1000405" [label="(Call,p[0] == SSL3_RT_HANDSHAKE)"];
"1000742" [label="(Call,buf != buf_space)"];
"1000185" [label="(Call,p=s->packet)"];
"1000411" [label="(Call,p[1] == SSL3_VERSION_MAJOR)"];
"1000168" [label="(Call,!ssl3_setup_buffers(s))"];
"1000451" [label="(Call,p[3] == 0)"];
"1000760" [label="(MethodReturn,int)"];
"1000191" [label="(Identifier,buf)"];
"1000468" [label="(Call,p[9] > SSL3_VERSION_MAJOR)"];
"1000498" [label="(Call,v[1]=p[10])"];
"1000192" [label="(Identifier,p)"];
"1000179" [label="(Call,n != sizeof buf_space)"];
"1000181" [label="(Call,sizeof buf_space)"];
"1000124" [label="(Block,)"];
"1000214" [label="(Call,p[4] == 0x02)"];
"1000174" [label="(Call,ssl23_read_bytes(s, sizeof buf_space))"];
"1000748" [label="(Call,SSL_accept(s))"];
"1000170" [label="(Identifier,s)"];
"1000143" [label="(Identifier,n)"];
"1000424" [label="(Call,p[3] == 0)"];
"1000434" [label="(Call,p[9] >= p[1])"];
"1000749" [label="(Identifier,s)"];
"1000752" [label="(Call,buf != buf_space)"];
"1000184" [label="(Identifier,n)"];
"1000429" [label="(Call,p[4] < 5)"];
"1000190" [label="(Call,memcpy(buf,p,n))"];
"1000180" [label="(Identifier,n)"];
"1000227" [label="(Call,v[1]=p[4])"];
"1000275" [label="(Call,p[4] >= TLS1_2_VERSION_MINOR)"];
"1000746" [label="(Identifier,buf)"];
"1000442" [label="(Call,v[0]=p[1])"];
"1000744" [label="(Identifier,buf_space)"];
"1000743" [label="(Identifier,buf)"];
"1000176" [label="(Call,sizeof buf_space)"];
"1000169" [label="(Call,ssl3_setup_buffers(s))"];
"1000198" [label="(Identifier,p)"];
"1000259" [label="(Call,v[1]=p[4])"];
"1000173" [label="(Identifier,n)"];
"1000745" [label="(Call,OPENSSL_free(buf))"];
"1000712" [label="(Call,ssl_security(s, SSL_SECOP_VERSION, 0, s->version, NULL))"];
"1000172" [label="(Call,n=ssl23_read_bytes(s, sizeof buf_space))"];
"1000201" [label="(Call,p[2] == SSL2_MT_CLIENT_HELLO)"];
"1000175" [label="(Identifier,s)"];
"1000417" [label="(Call,p[5] == SSL3_MT_CLIENT_HELLO)"];
"1000129" [label="(Call,&(buf_space[0]))"];
"1000183" [label="(Return,return(n);)"];
"1000157" [label="(Block,)"];
"1000128" [label="(Identifier,buf)"];
"1000252" [label="(Call,v[0]=p[3])"];
"1000745" -> "1000741"  [label="AST: "];
"1000745" -> "1000746"  [label="CFG: "];
"1000746" -> "1000745"  [label="AST: "];
"1000749" -> "1000745"  [label="CFG: "];
"1000745" -> "1000760"  [label="DDG: OPENSSL_free(buf)"];
"1000745" -> "1000760"  [label="DDG: buf"];
"1000742" -> "1000745"  [label="DDG: buf"];
"1000742" -> "1000741"  [label="AST: "];
"1000742" -> "1000744"  [label="CFG: "];
"1000743" -> "1000742"  [label="AST: "];
"1000744" -> "1000742"  [label="AST: "];
"1000746" -> "1000742"  [label="CFG: "];
"1000749" -> "1000742"  [label="CFG: "];
"1000742" -> "1000760"  [label="DDG: buf != buf_space"];
"1000742" -> "1000760"  [label="DDG: buf_space"];
"1000742" -> "1000760"  [label="DDG: buf"];
"1000190" -> "1000742"  [label="DDG: buf"];
"1000127" -> "1000742"  [label="DDG: buf"];
"1000190" -> "1000157"  [label="AST: "];
"1000190" -> "1000193"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000192" -> "1000190"  [label="AST: "];
"1000193" -> "1000190"  [label="AST: "];
"1000198" -> "1000190"  [label="CFG: "];
"1000190" -> "1000760"  [label="DDG: memcpy(buf,p,n)"];
"1000190" -> "1000760"  [label="DDG: n"];
"1000190" -> "1000760"  [label="DDG: p"];
"1000127" -> "1000190"  [label="DDG: buf"];
"1000185" -> "1000190"  [label="DDG: p"];
"1000179" -> "1000190"  [label="DDG: n"];
"1000190" -> "1000196"  [label="DDG: p"];
"1000190" -> "1000201"  [label="DDG: p"];
"1000190" -> "1000209"  [label="DDG: p"];
"1000190" -> "1000214"  [label="DDG: p"];
"1000190" -> "1000220"  [label="DDG: p"];
"1000190" -> "1000227"  [label="DDG: p"];
"1000190" -> "1000246"  [label="DDG: p"];
"1000190" -> "1000252"  [label="DDG: p"];
"1000190" -> "1000259"  [label="DDG: p"];
"1000190" -> "1000267"  [label="DDG: p"];
"1000190" -> "1000275"  [label="DDG: p"];
"1000190" -> "1000300"  [label="DDG: p"];
"1000190" -> "1000405"  [label="DDG: p"];
"1000190" -> "1000411"  [label="DDG: p"];
"1000190" -> "1000417"  [label="DDG: p"];
"1000190" -> "1000424"  [label="DDG: p"];
"1000190" -> "1000429"  [label="DDG: p"];
"1000190" -> "1000434"  [label="DDG: p"];
"1000190" -> "1000442"  [label="DDG: p"];
"1000190" -> "1000451"  [label="DDG: p"];
"1000190" -> "1000456"  [label="DDG: p"];
"1000190" -> "1000468"  [label="DDG: p"];
"1000190" -> "1000479"  [label="DDG: p"];
"1000190" -> "1000487"  [label="DDG: p"];
"1000190" -> "1000498"  [label="DDG: p"];
"1000190" -> "1000632"  [label="DDG: p"];
"1000190" -> "1000752"  [label="DDG: buf"];
"1000127" -> "1000124"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000143" -> "1000127"  [label="CFG: "];
"1000127" -> "1000760"  [label="DDG: &(buf_space[0])"];
"1000127" -> "1000760"  [label="DDG: buf"];
"1000127" -> "1000752"  [label="DDG: buf"];
"1000185" -> "1000157"  [label="AST: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="AST: "];
"1000191" -> "1000185"  [label="CFG: "];
"1000185" -> "1000760"  [label="DDG: s->packet"];
"1000179" -> "1000178"  [label="AST: "];
"1000179" -> "1000181"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000181" -> "1000179"  [label="AST: "];
"1000184" -> "1000179"  [label="CFG: "];
"1000186" -> "1000179"  [label="CFG: "];
"1000179" -> "1000760"  [label="DDG: n != sizeof buf_space"];
"1000179" -> "1000760"  [label="DDG: n"];
"1000172" -> "1000179"  [label="DDG: n"];
"1000179" -> "1000183"  [label="DDG: n"];
"1000172" -> "1000157"  [label="AST: "];
"1000172" -> "1000174"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000174" -> "1000172"  [label="AST: "];
"1000180" -> "1000172"  [label="CFG: "];
"1000172" -> "1000760"  [label="DDG: ssl23_read_bytes(s, sizeof buf_space)"];
"1000174" -> "1000172"  [label="DDG: s"];
"1000174" -> "1000176"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000176" -> "1000174"  [label="AST: "];
"1000174" -> "1000760"  [label="DDG: s"];
"1000169" -> "1000174"  [label="DDG: s"];
"1000123" -> "1000174"  [label="DDG: s"];
"1000174" -> "1000690"  [label="DDG: s"];
"1000174" -> "1000712"  [label="DDG: s"];
"1000169" -> "1000168"  [label="AST: "];
"1000169" -> "1000170"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000168" -> "1000169"  [label="CFG: "];
"1000169" -> "1000760"  [label="DDG: s"];
"1000169" -> "1000168"  [label="DDG: s"];
"1000123" -> "1000169"  [label="DDG: s"];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000760"  [label="DDG: s"];
"1000123" -> "1000690"  [label="DDG: s"];
"1000123" -> "1000712"  [label="DDG: s"];
"1000123" -> "1000748"  [label="DDG: s"];
}
