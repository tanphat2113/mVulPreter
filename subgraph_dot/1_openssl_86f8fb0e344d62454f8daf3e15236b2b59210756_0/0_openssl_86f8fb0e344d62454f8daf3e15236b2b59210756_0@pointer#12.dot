digraph "0_openssl_86f8fb0e344d62454f8daf3e15236b2b59210756_0@pointer" {
"1000171" [label="(Call,ssl2_part_read(s, SSL_F_GET_CLIENT_MASTER_KEY, i))"];
"1000147" [label="(Call,ssl2_read(s, (char *)&(p[s->init_num]), 10 - s->init_num))"];
"1000117" [label="(MethodParameterIn,SSL *s)"];
"1000149" [label="(Call,(char *)&(p[s->init_num]))"];
"1000157" [label="(Call,10 - s->init_num)"];
"1000163" [label="(Call,i < (10 - s->init_num))"];
"1000145" [label="(Call,i = ssl2_read(s, (char *)&(p[s->init_num]), 10 - s->init_num))"];
"1000165" [label="(Call,10 - s->init_num)"];
"1000170" [label="(Return,return (ssl2_part_read(s, SSL_F_GET_CLIENT_MASTER_KEY, i));)"];
"1000986" [label="(Call,ssl_get_new_session(s, 1))"];
"1000165" [label="(Call,10 - s->init_num)"];
"1000217" [label="(Call,ssl2_return_error(s, SSL2_PE_NO_CIPHER))"];
"1000909" [label="(Call,ssl_get_new_session(s, 1))"];
"1000174" [label="(Identifier,i)"];
"1000840" [label="(Call,ssl2_part_read(s, SSL_F_GET_CLIENT_HELLO, i))"];
"1000923" [label="(Call,ssl_get_prev_session(s, &(p[s->s2->tmp.cipher_spec_length]),\n                                 s->s2->tmp.session_id_length, NULL))"];
"1000170" [label="(Return,return (ssl2_part_read(s, SSL_F_GET_CLIENT_MASTER_KEY, i));)"];
"1000824" [label="(Call,ssl2_read(s, (char *)&(p[s->init_num]), n))"];
"1000166" [label="(Literal,10)"];
"1000391" [label="(Call,ssl2_part_read(s, SSL_F_GET_CLIENT_MASTER_KEY, i))"];
"1000913" [label="(Call,ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR))"];
"1000148" [label="(Identifier,s)"];
"1000960" [label="(Call,ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR))"];
"1000657" [label="(Call,ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR))"];
"1000146" [label="(Identifier,i)"];
"1001027" [label="(Call,SSL_get_ciphers(s))"];
"1000117" [label="(MethodParameterIn,SSL *s)"];
"1000164" [label="(Identifier,i)"];
"1000990" [label="(Call,ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR))"];
"1000158" [label="(Literal,10)"];
"1000804" [label="(Call,ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR))"];
"1000375" [label="(Call,ssl2_read(s, (char *)&(p[s->init_num]), n))"];
"1000457" [label="(Call,ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR))"];
"1000172" [label="(Identifier,s)"];
"1000162" [label="(ControlStructure,if (i < (10 - s->init_num)))"];
"1001166" [label="(MethodReturn,static int)"];
"1000145" [label="(Call,i = ssl2_read(s, (char *)&(p[s->init_num]), 10 - s->init_num))"];
"1000173" [label="(Identifier,SSL_F_GET_CLIENT_MASTER_KEY)"];
"1000149" [label="(Call,(char *)&(p[s->init_num]))"];
"1000849" [label="(Call,s->msg_callback(0, s->version, 0, p, (size_t)len, s,\n                        s->msg_callback_arg))"];
"1000975" [label="(Call,ssl2_return_error(s, SSL2_PE_NO_CERTIFICATE))"];
"1000159" [label="(Call,s->init_num)"];
"1000195" [label="(Call,ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR))"];
"1000163" [label="(Call,i < (10 - s->init_num))"];
"1000144" [label="(Block,)"];
"1000177" [label="(Identifier,s)"];
"1000167" [label="(Call,s->init_num)"];
"1000151" [label="(Call,&(p[s->init_num]))"];
"1000171" [label="(Call,ssl2_part_read(s, SSL_F_GET_CLIENT_MASTER_KEY, i))"];
"1000400" [label="(Call,s->msg_callback(0, s->version, 0, p, (size_t)len, s,\n                        s->msg_callback_arg))"];
"1000675" [label="(Call,ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR))"];
"1000355" [label="(Call,ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR))"];
"1000157" [label="(Call,10 - s->init_num)"];
"1001004" [label="(Call,ssl_bytes_to_cipher_list(s, p, s->s2->tmp.cipher_spec_length,\n                                      &s->session->ciphers))"];
"1001135" [label="(Call,ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR))"];
"1000268" [label="(Call,ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR))"];
"1000887" [label="(Call,ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR))"];
"1000377" [label="(Call,(char *)&(p[s->init_num]))"];
"1000745" [label="(Call,ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR))"];
"1000147" [label="(Call,ssl2_read(s, (char *)&(p[s->init_num]), 10 - s->init_num))"];
"1000538" [label="(Call,ssl2_return_error(s, SSL2_PE_NO_CIPHER))"];
"1000236" [label="(Call,n2s(p, i))"];
"1000307" [label="(Call,ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR))"];
"1000171" -> "1000170"  [label="AST: "];
"1000171" -> "1000174"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="AST: "];
"1000174" -> "1000171"  [label="AST: "];
"1000170" -> "1000171"  [label="CFG: "];
"1000171" -> "1001166"  [label="DDG: s"];
"1000171" -> "1001166"  [label="DDG: SSL_F_GET_CLIENT_MASTER_KEY"];
"1000171" -> "1001166"  [label="DDG: ssl2_part_read(s, SSL_F_GET_CLIENT_MASTER_KEY, i)"];
"1000171" -> "1001166"  [label="DDG: i"];
"1000171" -> "1000170"  [label="DDG: ssl2_part_read(s, SSL_F_GET_CLIENT_MASTER_KEY, i)"];
"1000147" -> "1000171"  [label="DDG: s"];
"1000117" -> "1000171"  [label="DDG: s"];
"1000163" -> "1000171"  [label="DDG: i"];
"1000147" -> "1000145"  [label="AST: "];
"1000147" -> "1000157"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000157" -> "1000147"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000147" -> "1001166"  [label="DDG: (char *)&(p[s->init_num])"];
"1000147" -> "1001166"  [label="DDG: s"];
"1000147" -> "1000145"  [label="DDG: s"];
"1000147" -> "1000145"  [label="DDG: (char *)&(p[s->init_num])"];
"1000147" -> "1000145"  [label="DDG: 10 - s->init_num"];
"1000117" -> "1000147"  [label="DDG: s"];
"1000149" -> "1000147"  [label="DDG: &(p[s->init_num])"];
"1000157" -> "1000147"  [label="DDG: 10"];
"1000157" -> "1000147"  [label="DDG: s->init_num"];
"1000147" -> "1000195"  [label="DDG: s"];
"1000147" -> "1000217"  [label="DDG: s"];
"1000147" -> "1000268"  [label="DDG: s"];
"1000147" -> "1000307"  [label="DDG: s"];
"1000147" -> "1000355"  [label="DDG: s"];
"1000147" -> "1000375"  [label="DDG: s"];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1001166"  [label="DDG: s"];
"1000117" -> "1000195"  [label="DDG: s"];
"1000117" -> "1000217"  [label="DDG: s"];
"1000117" -> "1000268"  [label="DDG: s"];
"1000117" -> "1000307"  [label="DDG: s"];
"1000117" -> "1000355"  [label="DDG: s"];
"1000117" -> "1000375"  [label="DDG: s"];
"1000117" -> "1000391"  [label="DDG: s"];
"1000117" -> "1000400"  [label="DDG: s"];
"1000117" -> "1000457"  [label="DDG: s"];
"1000117" -> "1000538"  [label="DDG: s"];
"1000117" -> "1000657"  [label="DDG: s"];
"1000117" -> "1000675"  [label="DDG: s"];
"1000117" -> "1000745"  [label="DDG: s"];
"1000117" -> "1000804"  [label="DDG: s"];
"1000117" -> "1000824"  [label="DDG: s"];
"1000117" -> "1000840"  [label="DDG: s"];
"1000117" -> "1000849"  [label="DDG: s"];
"1000117" -> "1000887"  [label="DDG: s"];
"1000117" -> "1000909"  [label="DDG: s"];
"1000117" -> "1000913"  [label="DDG: s"];
"1000117" -> "1000923"  [label="DDG: s"];
"1000117" -> "1000960"  [label="DDG: s"];
"1000117" -> "1000975"  [label="DDG: s"];
"1000117" -> "1000986"  [label="DDG: s"];
"1000117" -> "1000990"  [label="DDG: s"];
"1000117" -> "1001004"  [label="DDG: s"];
"1000117" -> "1001027"  [label="DDG: s"];
"1000117" -> "1001135"  [label="DDG: s"];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000158" -> "1000149"  [label="CFG: "];
"1000149" -> "1001166"  [label="DDG: &(p[s->init_num])"];
"1000149" -> "1000377"  [label="DDG: &(p[s->init_num])"];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000157" -> "1000165"  [label="DDG: s->init_num"];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000165"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000165" -> "1000163"  [label="AST: "];
"1000172" -> "1000163"  [label="CFG: "];
"1000177" -> "1000163"  [label="CFG: "];
"1000163" -> "1001166"  [label="DDG: i"];
"1000163" -> "1001166"  [label="DDG: i < (10 - s->init_num)"];
"1000163" -> "1001166"  [label="DDG: 10 - s->init_num"];
"1000145" -> "1000163"  [label="DDG: i"];
"1000165" -> "1000163"  [label="DDG: 10"];
"1000165" -> "1000163"  [label="DDG: s->init_num"];
"1000163" -> "1000236"  [label="DDG: i"];
"1000145" -> "1000144"  [label="AST: "];
"1000146" -> "1000145"  [label="AST: "];
"1000164" -> "1000145"  [label="CFG: "];
"1000145" -> "1001166"  [label="DDG: ssl2_read(s, (char *)&(p[s->init_num]), 10 - s->init_num)"];
"1000165" -> "1000167"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000167" -> "1000165"  [label="AST: "];
"1000165" -> "1001166"  [label="DDG: s->init_num"];
"1000170" -> "1000162"  [label="AST: "];
"1001166" -> "1000170"  [label="CFG: "];
"1000170" -> "1001166"  [label="DDG: <RET>"];
}
