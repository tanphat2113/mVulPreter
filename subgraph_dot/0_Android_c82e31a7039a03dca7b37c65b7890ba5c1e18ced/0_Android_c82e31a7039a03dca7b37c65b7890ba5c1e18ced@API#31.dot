digraph "0_Android_c82e31a7039a03dca7b37c65b7890ba5c1e18ced@API" {
"1000216" [label="(Call,streamCTR = data.readInt32())"];
"1000223" [label="(Call,encrypt(inData, size, streamCTR, &inputCTR, outData))"];
"1000221" [label="(Call,err = encrypt(inData, size, streamCTR, &inputCTR, outData))"];
"1000230" [label="(Call,reply->writeInt32(err))"];
"1000233" [label="(Call,err == OK)"];
"1000249" [label="(Return,return OK;)"];
"1000239" [label="(Call,reply->write(outData, size))"];
"1000242" [label="(Call,free(inData))"];
"1000241" [label="(Identifier,size)"];
"1000232" [label="(ControlStructure,if (err == OK))"];
"1000221" [label="(Call,err = encrypt(inData, size, streamCTR, &inputCTR, outData))"];
"1000217" [label="(Identifier,streamCTR)"];
"1000224" [label="(Identifier,inData)"];
"1000227" [label="(Call,&inputCTR)"];
"1000239" [label="(Call,reply->write(outData, size))"];
"1000226" [label="(Identifier,streamCTR)"];
"1000216" [label="(Call,streamCTR = data.readInt32())"];
"1000245" [label="(Identifier,inData)"];
"1000229" [label="(Identifier,outData)"];
"1000240" [label="(Identifier,outData)"];
"1000230" [label="(Call,reply->writeInt32(err))"];
"1000243" [label="(Identifier,inData)"];
"1000234" [label="(Identifier,err)"];
"1000212" [label="(Call,data.read(inData, size))"];
"1000225" [label="(Identifier,size)"];
"1000235" [label="(Identifier,OK)"];
"1000231" [label="(Identifier,err)"];
"1000238" [label="(Identifier,inputCTR)"];
"1000205" [label="(Call,*outData = (uint8_t *)inData + size)"];
"1000236" [label="(Block,)"];
"1000222" [label="(Identifier,err)"];
"1000242" [label="(Call,free(inData))"];
"1000171" [label="(Block,)"];
"1000218" [label="(Call,data.readInt32())"];
"1000223" [label="(Call,encrypt(inData, size, streamCTR, &inputCTR, outData))"];
"1000250" [label="(Identifier,OK)"];
"1000249" [label="(Return,return OK;)"];
"1000233" [label="(Call,err == OK)"];
"1000401" [label="(MethodReturn,status_t)"];
"1000216" -> "1000171"  [label="AST: "];
"1000216" -> "1000218"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000218" -> "1000216"  [label="AST: "];
"1000222" -> "1000216"  [label="CFG: "];
"1000216" -> "1000401"  [label="DDG: data.readInt32()"];
"1000216" -> "1000223"  [label="DDG: streamCTR"];
"1000223" -> "1000221"  [label="AST: "];
"1000223" -> "1000229"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000225" -> "1000223"  [label="AST: "];
"1000226" -> "1000223"  [label="AST: "];
"1000227" -> "1000223"  [label="AST: "];
"1000229" -> "1000223"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000223" -> "1000401"  [label="DDG: size"];
"1000223" -> "1000401"  [label="DDG: &inputCTR"];
"1000223" -> "1000401"  [label="DDG: streamCTR"];
"1000223" -> "1000221"  [label="DDG: outData"];
"1000223" -> "1000221"  [label="DDG: inData"];
"1000223" -> "1000221"  [label="DDG: streamCTR"];
"1000223" -> "1000221"  [label="DDG: &inputCTR"];
"1000223" -> "1000221"  [label="DDG: size"];
"1000212" -> "1000223"  [label="DDG: inData"];
"1000212" -> "1000223"  [label="DDG: size"];
"1000205" -> "1000223"  [label="DDG: outData"];
"1000223" -> "1000239"  [label="DDG: outData"];
"1000223" -> "1000239"  [label="DDG: size"];
"1000223" -> "1000242"  [label="DDG: inData"];
"1000221" -> "1000171"  [label="AST: "];
"1000222" -> "1000221"  [label="AST: "];
"1000231" -> "1000221"  [label="CFG: "];
"1000221" -> "1000401"  [label="DDG: encrypt(inData, size, streamCTR, &inputCTR, outData)"];
"1000221" -> "1000230"  [label="DDG: err"];
"1000230" -> "1000171"  [label="AST: "];
"1000230" -> "1000231"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000234" -> "1000230"  [label="CFG: "];
"1000230" -> "1000401"  [label="DDG: reply->writeInt32(err)"];
"1000230" -> "1000233"  [label="DDG: err"];
"1000233" -> "1000232"  [label="AST: "];
"1000233" -> "1000235"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000235" -> "1000233"  [label="AST: "];
"1000238" -> "1000233"  [label="CFG: "];
"1000243" -> "1000233"  [label="CFG: "];
"1000233" -> "1000401"  [label="DDG: err == OK"];
"1000233" -> "1000401"  [label="DDG: OK"];
"1000233" -> "1000401"  [label="DDG: err"];
"1000233" -> "1000249"  [label="DDG: OK"];
"1000249" -> "1000171"  [label="AST: "];
"1000249" -> "1000250"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000401" -> "1000249"  [label="CFG: "];
"1000249" -> "1000401"  [label="DDG: <RET>"];
"1000250" -> "1000249"  [label="DDG: OK"];
"1000239" -> "1000236"  [label="AST: "];
"1000239" -> "1000241"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="AST: "];
"1000243" -> "1000239"  [label="CFG: "];
"1000239" -> "1000401"  [label="DDG: reply->write(outData, size)"];
"1000239" -> "1000401"  [label="DDG: size"];
"1000242" -> "1000171"  [label="AST: "];
"1000242" -> "1000243"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000245" -> "1000242"  [label="CFG: "];
}
