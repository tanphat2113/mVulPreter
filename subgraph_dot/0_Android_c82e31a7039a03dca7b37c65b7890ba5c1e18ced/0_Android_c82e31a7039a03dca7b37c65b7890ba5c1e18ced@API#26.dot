digraph "0_Android_c82e31a7039a03dca7b37c65b7890ba5c1e18ced@API" {
"1000363" [label="(Call,inputCTR = data.readInt64())"];
"1000369" [label="(Call,decrypt(inData, size, streamCTR, inputCTR, outData))"];
"1000367" [label="(Call,err = decrypt(inData, size, streamCTR, inputCTR, outData))"];
"1000375" [label="(Call,reply->writeInt32(err))"];
"1000378" [label="(Call,err == OK)"];
"1000392" [label="(Return,return OK;)"];
"1000382" [label="(Call,reply->write(outData, size))"];
"1000385" [label="(Call,free(inData))"];
"1000369" [label="(Call,decrypt(inData, size, streamCTR, inputCTR, outData))"];
"1000392" [label="(Return,return OK;)"];
"1000388" [label="(Identifier,inData)"];
"1000380" [label="(Identifier,OK)"];
"1000355" [label="(Call,data.read(inData, size))"];
"1000367" [label="(Call,err = decrypt(inData, size, streamCTR, inputCTR, outData))"];
"1000385" [label="(Call,free(inData))"];
"1000393" [label="(Identifier,OK)"];
"1000374" [label="(Identifier,outData)"];
"1000368" [label="(Identifier,err)"];
"1000314" [label="(Block,)"];
"1000376" [label="(Identifier,err)"];
"1000365" [label="(Call,data.readInt64())"];
"1000359" [label="(Call,streamCTR = data.readInt32())"];
"1000375" [label="(Call,reply->writeInt32(err))"];
"1000371" [label="(Identifier,size)"];
"1000382" [label="(Call,reply->write(outData, size))"];
"1000377" [label="(ControlStructure,if (err == OK))"];
"1000381" [label="(Block,)"];
"1000379" [label="(Identifier,err)"];
"1000372" [label="(Identifier,streamCTR)"];
"1000364" [label="(Identifier,inputCTR)"];
"1000363" [label="(Call,inputCTR = data.readInt64())"];
"1000373" [label="(Identifier,inputCTR)"];
"1000378" [label="(Call,err == OK)"];
"1000370" [label="(Identifier,inData)"];
"1000386" [label="(Identifier,inData)"];
"1000384" [label="(Identifier,size)"];
"1000383" [label="(Identifier,outData)"];
"1000348" [label="(Call,*outData = (uint8_t *)inData + size)"];
"1000401" [label="(MethodReturn,status_t)"];
"1000363" -> "1000314"  [label="AST: "];
"1000363" -> "1000365"  [label="CFG: "];
"1000364" -> "1000363"  [label="AST: "];
"1000365" -> "1000363"  [label="AST: "];
"1000368" -> "1000363"  [label="CFG: "];
"1000363" -> "1000401"  [label="DDG: data.readInt64()"];
"1000363" -> "1000369"  [label="DDG: inputCTR"];
"1000369" -> "1000367"  [label="AST: "];
"1000369" -> "1000374"  [label="CFG: "];
"1000370" -> "1000369"  [label="AST: "];
"1000371" -> "1000369"  [label="AST: "];
"1000372" -> "1000369"  [label="AST: "];
"1000373" -> "1000369"  [label="AST: "];
"1000374" -> "1000369"  [label="AST: "];
"1000367" -> "1000369"  [label="CFG: "];
"1000369" -> "1000401"  [label="DDG: inputCTR"];
"1000369" -> "1000401"  [label="DDG: streamCTR"];
"1000369" -> "1000401"  [label="DDG: size"];
"1000369" -> "1000367"  [label="DDG: inputCTR"];
"1000369" -> "1000367"  [label="DDG: size"];
"1000369" -> "1000367"  [label="DDG: outData"];
"1000369" -> "1000367"  [label="DDG: inData"];
"1000369" -> "1000367"  [label="DDG: streamCTR"];
"1000355" -> "1000369"  [label="DDG: inData"];
"1000355" -> "1000369"  [label="DDG: size"];
"1000359" -> "1000369"  [label="DDG: streamCTR"];
"1000348" -> "1000369"  [label="DDG: outData"];
"1000369" -> "1000382"  [label="DDG: outData"];
"1000369" -> "1000382"  [label="DDG: size"];
"1000369" -> "1000385"  [label="DDG: inData"];
"1000367" -> "1000314"  [label="AST: "];
"1000368" -> "1000367"  [label="AST: "];
"1000376" -> "1000367"  [label="CFG: "];
"1000367" -> "1000401"  [label="DDG: decrypt(inData, size, streamCTR, inputCTR, outData)"];
"1000367" -> "1000375"  [label="DDG: err"];
"1000375" -> "1000314"  [label="AST: "];
"1000375" -> "1000376"  [label="CFG: "];
"1000376" -> "1000375"  [label="AST: "];
"1000379" -> "1000375"  [label="CFG: "];
"1000375" -> "1000401"  [label="DDG: reply->writeInt32(err)"];
"1000375" -> "1000378"  [label="DDG: err"];
"1000378" -> "1000377"  [label="AST: "];
"1000378" -> "1000380"  [label="CFG: "];
"1000379" -> "1000378"  [label="AST: "];
"1000380" -> "1000378"  [label="AST: "];
"1000383" -> "1000378"  [label="CFG: "];
"1000386" -> "1000378"  [label="CFG: "];
"1000378" -> "1000401"  [label="DDG: OK"];
"1000378" -> "1000401"  [label="DDG: err"];
"1000378" -> "1000401"  [label="DDG: err == OK"];
"1000378" -> "1000392"  [label="DDG: OK"];
"1000392" -> "1000314"  [label="AST: "];
"1000392" -> "1000393"  [label="CFG: "];
"1000393" -> "1000392"  [label="AST: "];
"1000401" -> "1000392"  [label="CFG: "];
"1000392" -> "1000401"  [label="DDG: <RET>"];
"1000393" -> "1000392"  [label="DDG: OK"];
"1000382" -> "1000381"  [label="AST: "];
"1000382" -> "1000384"  [label="CFG: "];
"1000383" -> "1000382"  [label="AST: "];
"1000384" -> "1000382"  [label="AST: "];
"1000386" -> "1000382"  [label="CFG: "];
"1000382" -> "1000401"  [label="DDG: size"];
"1000382" -> "1000401"  [label="DDG: reply->write(outData, size)"];
"1000385" -> "1000314"  [label="AST: "];
"1000385" -> "1000386"  [label="CFG: "];
"1000386" -> "1000385"  [label="AST: "];
"1000388" -> "1000385"  [label="CFG: "];
}
