digraph "0_Android_c82e31a7039a03dca7b37c65b7890ba5c1e18ced@API" {
"1000270" [label="(Call,size = data.readInt32())"];
"1000280" [label="(Call,malloc(size))"];
"1000278" [label="(Call,*outData = malloc(size))"];
"1000286" [label="(Call,encryptNative(graphicBuffer, offset, size,\n                                         streamCTR, &inputCTR, outData))"];
"1000284" [label="(Call,err = encryptNative(graphicBuffer, offset, size,\n                                         streamCTR, &inputCTR, outData))"];
"1000294" [label="(Call,reply->writeInt32(err))"];
"1000297" [label="(Call,err == OK)"];
"1000311" [label="(Return,return OK;)"];
"1000303" [label="(Call,reply->write(outData, size))"];
"1000306" [label="(Call,free(outData))"];
"1000270" [label="(Call,size = data.readInt32())"];
"1000271" [label="(Identifier,size)"];
"1000298" [label="(Identifier,err)"];
"1000266" [label="(Call,offset = data.readInt32())"];
"1000286" [label="(Call,encryptNative(graphicBuffer, offset, size,\n                                         streamCTR, &inputCTR, outData))"];
"1000279" [label="(Identifier,outData)"];
"1000274" [label="(Call,streamCTR = data.readInt32())"];
"1000303" [label="(Call,reply->write(outData, size))"];
"1000285" [label="(Identifier,err)"];
"1000312" [label="(Identifier,OK)"];
"1000304" [label="(Identifier,outData)"];
"1000290" [label="(Identifier,streamCTR)"];
"1000252" [label="(Block,)"];
"1000309" [label="(Identifier,outData)"];
"1000272" [label="(Call,data.readInt32())"];
"1000311" [label="(Return,return OK;)"];
"1000275" [label="(Identifier,streamCTR)"];
"1000289" [label="(Identifier,size)"];
"1000306" [label="(Call,free(outData))"];
"1000297" [label="(Call,err == OK)"];
"1000296" [label="(ControlStructure,if (err == OK))"];
"1000307" [label="(Identifier,outData)"];
"1000281" [label="(Identifier,size)"];
"1000295" [label="(Identifier,err)"];
"1000305" [label="(Identifier,size)"];
"1000287" [label="(Identifier,graphicBuffer)"];
"1000278" [label="(Call,*outData = malloc(size))"];
"1000302" [label="(Identifier,inputCTR)"];
"1000293" [label="(Identifier,outData)"];
"1000291" [label="(Call,&inputCTR)"];
"1000280" [label="(Call,malloc(size))"];
"1000299" [label="(Identifier,OK)"];
"1000300" [label="(Block,)"];
"1000294" [label="(Call,reply->writeInt32(err))"];
"1000284" [label="(Call,err = encryptNative(graphicBuffer, offset, size,\n                                         streamCTR, &inputCTR, outData))"];
"1000401" [label="(MethodReturn,status_t)"];
"1000288" [label="(Identifier,offset)"];
"1000258" [label="(Call,graphicBuffer = new GraphicBuffer())"];
"1000270" -> "1000252"  [label="AST: "];
"1000270" -> "1000272"  [label="CFG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000272" -> "1000270"  [label="AST: "];
"1000275" -> "1000270"  [label="CFG: "];
"1000270" -> "1000280"  [label="DDG: size"];
"1000280" -> "1000278"  [label="AST: "];
"1000280" -> "1000281"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000278" -> "1000280"  [label="CFG: "];
"1000280" -> "1000278"  [label="DDG: size"];
"1000280" -> "1000286"  [label="DDG: size"];
"1000278" -> "1000252"  [label="AST: "];
"1000279" -> "1000278"  [label="AST: "];
"1000285" -> "1000278"  [label="CFG: "];
"1000278" -> "1000401"  [label="DDG: malloc(size)"];
"1000278" -> "1000286"  [label="DDG: outData"];
"1000286" -> "1000284"  [label="AST: "];
"1000286" -> "1000293"  [label="CFG: "];
"1000287" -> "1000286"  [label="AST: "];
"1000288" -> "1000286"  [label="AST: "];
"1000289" -> "1000286"  [label="AST: "];
"1000290" -> "1000286"  [label="AST: "];
"1000291" -> "1000286"  [label="AST: "];
"1000293" -> "1000286"  [label="AST: "];
"1000284" -> "1000286"  [label="CFG: "];
"1000286" -> "1000401"  [label="DDG: &inputCTR"];
"1000286" -> "1000401"  [label="DDG: streamCTR"];
"1000286" -> "1000401"  [label="DDG: graphicBuffer"];
"1000286" -> "1000401"  [label="DDG: size"];
"1000286" -> "1000401"  [label="DDG: offset"];
"1000286" -> "1000284"  [label="DDG: streamCTR"];
"1000286" -> "1000284"  [label="DDG: offset"];
"1000286" -> "1000284"  [label="DDG: graphicBuffer"];
"1000286" -> "1000284"  [label="DDG: size"];
"1000286" -> "1000284"  [label="DDG: &inputCTR"];
"1000286" -> "1000284"  [label="DDG: outData"];
"1000258" -> "1000286"  [label="DDG: graphicBuffer"];
"1000266" -> "1000286"  [label="DDG: offset"];
"1000274" -> "1000286"  [label="DDG: streamCTR"];
"1000286" -> "1000303"  [label="DDG: outData"];
"1000286" -> "1000303"  [label="DDG: size"];
"1000286" -> "1000306"  [label="DDG: outData"];
"1000284" -> "1000252"  [label="AST: "];
"1000285" -> "1000284"  [label="AST: "];
"1000295" -> "1000284"  [label="CFG: "];
"1000284" -> "1000401"  [label="DDG: encryptNative(graphicBuffer, offset, size,\n                                         streamCTR, &inputCTR, outData)"];
"1000284" -> "1000294"  [label="DDG: err"];
"1000294" -> "1000252"  [label="AST: "];
"1000294" -> "1000295"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000298" -> "1000294"  [label="CFG: "];
"1000294" -> "1000401"  [label="DDG: reply->writeInt32(err)"];
"1000294" -> "1000297"  [label="DDG: err"];
"1000297" -> "1000296"  [label="AST: "];
"1000297" -> "1000299"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000299" -> "1000297"  [label="AST: "];
"1000302" -> "1000297"  [label="CFG: "];
"1000307" -> "1000297"  [label="CFG: "];
"1000297" -> "1000401"  [label="DDG: err"];
"1000297" -> "1000401"  [label="DDG: OK"];
"1000297" -> "1000401"  [label="DDG: err == OK"];
"1000297" -> "1000311"  [label="DDG: OK"];
"1000311" -> "1000252"  [label="AST: "];
"1000311" -> "1000312"  [label="CFG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000401" -> "1000311"  [label="CFG: "];
"1000311" -> "1000401"  [label="DDG: <RET>"];
"1000312" -> "1000311"  [label="DDG: OK"];
"1000303" -> "1000300"  [label="AST: "];
"1000303" -> "1000305"  [label="CFG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000305" -> "1000303"  [label="AST: "];
"1000307" -> "1000303"  [label="CFG: "];
"1000303" -> "1000401"  [label="DDG: reply->write(outData, size)"];
"1000303" -> "1000401"  [label="DDG: size"];
"1000303" -> "1000306"  [label="DDG: outData"];
"1000306" -> "1000252"  [label="AST: "];
"1000306" -> "1000307"  [label="CFG: "];
"1000307" -> "1000306"  [label="AST: "];
"1000309" -> "1000306"  [label="CFG: "];
}
