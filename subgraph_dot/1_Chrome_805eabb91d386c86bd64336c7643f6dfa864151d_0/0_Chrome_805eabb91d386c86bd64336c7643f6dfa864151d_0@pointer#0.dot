digraph "0_Chrome_805eabb91d386c86bd64336c7643f6dfa864151d_0@pointer" {
"1000175" [label="(Call,static_cast<BufferType*>(buffer))"];
"1000103" [label="(MethodParameterIn,BufferType* buffer)"];
"1000172" [label="(Call,operation(\n        file, static_cast<BufferType*>(buffer) + count, chunk, &len, &ol))"];
"1000170" [label="(Call,operation_ok = operation(\n        file, static_cast<BufferType*>(buffer) + count, chunk, &len, &ol))"];
"1000185" [label="(Call,!operation_ok)"];
"1000215" [label="(Call,CancelIo(file))"];
"1000219" [label="(Call,GetOverlappedResult(file, &ol, &len, TRUE))"];
"1000218" [label="(Call,!GetOverlappedResult(file, &ol, &len, TRUE))"];
"1000260" [label="(Call,len != chunk)"];
"1000174" [label="(Call,static_cast<BufferType*>(buffer) + count)"];
"1000160" [label="(Call,chunk = GetNextChunkSize(count, length))"];
"1000223" [label="(Call,&len)"];
"1000126" [label="(Call,DCHECK_NE(file, SyncSocket::kInvalidHandle))"];
"1000185" [label="(Call,!operation_ok)"];
"1000179" [label="(Identifier,chunk)"];
"1000216" [label="(Identifier,file)"];
"1000225" [label="(Identifier,TRUE)"];
"1000172" [label="(Call,operation(\n        file, static_cast<BufferType*>(buffer) + count, chunk, &len, &ol))"];
"1000255" [label="(ControlStructure,break;)"];
"1000178" [label="(Identifier,count)"];
"1000113" [label="(Call,sizeof(buffer[0]))"];
"1000231" [label="(Identifier,wait_result)"];
"1000177" [label="(Identifier,buffer)"];
"1000112" [label="(Call,sizeof(buffer[0]) == sizeof(char))"];
"1000103" [label="(MethodParameterIn,BufferType* buffer)"];
"1000180" [label="(Call,&len)"];
"1000218" [label="(Call,!GetOverlappedResult(file, &ol, &len, TRUE))"];
"1000221" [label="(Call,&ol)"];
"1000162" [label="(Call,GetNextChunkSize(count, length))"];
"1000171" [label="(Identifier,operation_ok)"];
"1000219" [label="(Call,GetOverlappedResult(file, &ol, &len, TRUE))"];
"1000175" [label="(Call,static_cast<BufferType*>(buffer))"];
"1000220" [label="(Identifier,file)"];
"1000215" [label="(Call,CancelIo(file))"];
"1000259" [label="(ControlStructure,if (len != chunk))"];
"1000263" [label="(ControlStructure,break;)"];
"1000260" [label="(Call,len != chunk)"];
"1000150" [label="(Block,)"];
"1000261" [label="(Identifier,len)"];
"1000102" [label="(MethodParameterIn,HANDLE file)"];
"1000214" [label="(Block,)"];
"1000174" [label="(Call,static_cast<BufferType*>(buffer) + count)"];
"1000227" [label="(Identifier,len)"];
"1000184" [label="(ControlStructure,if (!operation_ok))"];
"1000262" [label="(Identifier,chunk)"];
"1000267" [label="(Identifier,timeout_in_ms)"];
"1000226" [label="(Call,len = 0)"];
"1000217" [label="(ControlStructure,if (!GetOverlappedResult(file, &ol, &len, TRUE)))"];
"1000182" [label="(Call,&ol)"];
"1000166" [label="(Call,len = 0)"];
"1000191" [label="(Identifier,events)"];
"1000170" [label="(Call,operation_ok = operation(\n        file, static_cast<BufferType*>(buffer) + count, chunk, &len, &ol))"];
"1000173" [label="(Identifier,file)"];
"1000186" [label="(Identifier,operation_ok)"];
"1000288" [label="(MethodReturn,size_t)"];
"1000175" -> "1000174"  [label="AST: "];
"1000175" -> "1000177"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000177" -> "1000175"  [label="AST: "];
"1000178" -> "1000175"  [label="CFG: "];
"1000175" -> "1000288"  [label="DDG: buffer"];
"1000175" -> "1000172"  [label="DDG: buffer"];
"1000175" -> "1000174"  [label="DDG: buffer"];
"1000103" -> "1000175"  [label="DDG: buffer"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000288"  [label="DDG: buffer"];
"1000103" -> "1000112"  [label="DDG: buffer"];
"1000103" -> "1000113"  [label="DDG: buffer"];
"1000172" -> "1000170"  [label="AST: "];
"1000172" -> "1000182"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000174" -> "1000172"  [label="AST: "];
"1000179" -> "1000172"  [label="AST: "];
"1000180" -> "1000172"  [label="AST: "];
"1000182" -> "1000172"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000172" -> "1000288"  [label="DDG: &ol"];
"1000172" -> "1000288"  [label="DDG: chunk"];
"1000172" -> "1000288"  [label="DDG: &len"];
"1000172" -> "1000288"  [label="DDG: file"];
"1000172" -> "1000288"  [label="DDG: static_cast<BufferType*>(buffer) + count"];
"1000172" -> "1000170"  [label="DDG: chunk"];
"1000172" -> "1000170"  [label="DDG: &len"];
"1000172" -> "1000170"  [label="DDG: file"];
"1000172" -> "1000170"  [label="DDG: &ol"];
"1000172" -> "1000170"  [label="DDG: static_cast<BufferType*>(buffer) + count"];
"1000126" -> "1000172"  [label="DDG: file"];
"1000219" -> "1000172"  [label="DDG: file"];
"1000219" -> "1000172"  [label="DDG: &len"];
"1000219" -> "1000172"  [label="DDG: &ol"];
"1000102" -> "1000172"  [label="DDG: file"];
"1000162" -> "1000172"  [label="DDG: count"];
"1000160" -> "1000172"  [label="DDG: chunk"];
"1000172" -> "1000215"  [label="DDG: file"];
"1000172" -> "1000219"  [label="DDG: file"];
"1000172" -> "1000219"  [label="DDG: &ol"];
"1000172" -> "1000219"  [label="DDG: &len"];
"1000172" -> "1000260"  [label="DDG: chunk"];
"1000170" -> "1000150"  [label="AST: "];
"1000171" -> "1000170"  [label="AST: "];
"1000186" -> "1000170"  [label="CFG: "];
"1000170" -> "1000288"  [label="DDG: operation(\n        file, static_cast<BufferType*>(buffer) + count, chunk, &len, &ol)"];
"1000170" -> "1000185"  [label="DDG: operation_ok"];
"1000185" -> "1000184"  [label="AST: "];
"1000185" -> "1000186"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000191" -> "1000185"  [label="CFG: "];
"1000255" -> "1000185"  [label="CFG: "];
"1000185" -> "1000288"  [label="DDG: !operation_ok"];
"1000185" -> "1000288"  [label="DDG: operation_ok"];
"1000215" -> "1000214"  [label="AST: "];
"1000215" -> "1000216"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000220" -> "1000215"  [label="CFG: "];
"1000215" -> "1000288"  [label="DDG: CancelIo(file)"];
"1000102" -> "1000215"  [label="DDG: file"];
"1000215" -> "1000219"  [label="DDG: file"];
"1000219" -> "1000218"  [label="AST: "];
"1000219" -> "1000225"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000221" -> "1000219"  [label="AST: "];
"1000223" -> "1000219"  [label="AST: "];
"1000225" -> "1000219"  [label="AST: "];
"1000218" -> "1000219"  [label="CFG: "];
"1000219" -> "1000288"  [label="DDG: TRUE"];
"1000219" -> "1000288"  [label="DDG: &ol"];
"1000219" -> "1000288"  [label="DDG: &len"];
"1000219" -> "1000288"  [label="DDG: file"];
"1000219" -> "1000218"  [label="DDG: file"];
"1000219" -> "1000218"  [label="DDG: &ol"];
"1000219" -> "1000218"  [label="DDG: &len"];
"1000219" -> "1000218"  [label="DDG: TRUE"];
"1000102" -> "1000219"  [label="DDG: file"];
"1000218" -> "1000217"  [label="AST: "];
"1000227" -> "1000218"  [label="CFG: "];
"1000231" -> "1000218"  [label="CFG: "];
"1000218" -> "1000288"  [label="DDG: GetOverlappedResult(file, &ol, &len, TRUE)"];
"1000218" -> "1000288"  [label="DDG: !GetOverlappedResult(file, &ol, &len, TRUE)"];
"1000260" -> "1000259"  [label="AST: "];
"1000260" -> "1000262"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000262" -> "1000260"  [label="AST: "];
"1000263" -> "1000260"  [label="CFG: "];
"1000267" -> "1000260"  [label="CFG: "];
"1000260" -> "1000288"  [label="DDG: len != chunk"];
"1000260" -> "1000288"  [label="DDG: chunk"];
"1000260" -> "1000288"  [label="DDG: len"];
"1000226" -> "1000260"  [label="DDG: len"];
"1000166" -> "1000260"  [label="DDG: len"];
"1000174" -> "1000178"  [label="CFG: "];
"1000178" -> "1000174"  [label="AST: "];
"1000179" -> "1000174"  [label="CFG: "];
"1000174" -> "1000288"  [label="DDG: count"];
"1000174" -> "1000288"  [label="DDG: static_cast<BufferType*>(buffer)"];
"1000162" -> "1000174"  [label="DDG: count"];
}
