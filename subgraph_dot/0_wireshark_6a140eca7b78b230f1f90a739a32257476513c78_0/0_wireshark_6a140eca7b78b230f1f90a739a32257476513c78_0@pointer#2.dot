digraph "0_wireshark_6a140eca7b78b230f1f90a739a32257476513c78_0@pointer" {
"1000106" [label="(MethodParameterIn,gchar **err_info)"];
"1000136" [label="(Call,file_error(wth->random_fh, err_info))"];
"1000133" [label="(Call,*err = file_error(wth->random_fh, err_info))"];
"1000142" [label="(Call,*err == 0)"];
"1000154" [label="(Call,parse_netscreen_packet(wth->random_fh, phdr, buf, line,\n\t    err, err_info))"];
"1000153" [label="(Return,return parse_netscreen_packet(wth->random_fh, phdr, buf, line,\n\t    err, err_info);)"];
"1000136" [label="(Call,file_error(wth->random_fh, err_info))"];
"1000107" [label="(Block,)"];
"1000155" [label="(Call,wth->random_fh)"];
"1000158" [label="(Identifier,phdr)"];
"1000144" [label="(Identifier,err)"];
"1000159" [label="(Identifier,buf)"];
"1000125" [label="(Call,file_gets(line, NETSCREEN_LINE_LENGTH, wth->random_fh))"];
"1000142" [label="(Call,*err == 0)"];
"1000105" [label="(MethodParameterIn,int *err)"];
"1000152" [label="(Identifier,FALSE)"];
"1000133" [label="(Call,*err = file_error(wth->random_fh, err_info))"];
"1000137" [label="(Call,wth->random_fh)"];
"1000134" [label="(Call,*err)"];
"1000162" [label="(Identifier,err_info)"];
"1000140" [label="(Identifier,err_info)"];
"1000111" [label="(Call,file_seek(wth->random_fh, seek_off, SEEK_SET, err))"];
"1000141" [label="(ControlStructure,if (*err == 0))"];
"1000104" [label="(MethodParameterIn,Buffer *buf)"];
"1000161" [label="(Identifier,err)"];
"1000163" [label="(MethodReturn,RET)"];
"1000143" [label="(Call,*err)"];
"1000106" [label="(MethodParameterIn,gchar **err_info)"];
"1000145" [label="(Literal,0)"];
"1000132" [label="(Block,)"];
"1000153" [label="(Return,return parse_netscreen_packet(wth->random_fh, phdr, buf, line,\n\t    err, err_info);)"];
"1000160" [label="(Identifier,line)"];
"1000149" [label="(Identifier,err)"];
"1000103" [label="(MethodParameterIn,struct wtap_pkthdr *phdr)"];
"1000154" [label="(Call,parse_netscreen_packet(wth->random_fh, phdr, buf, line,\n\t    err, err_info))"];
"1000106" -> "1000100"  [label="AST: "];
"1000106" -> "1000163"  [label="DDG: err_info"];
"1000106" -> "1000136"  [label="DDG: err_info"];
"1000106" -> "1000154"  [label="DDG: err_info"];
"1000136" -> "1000133"  [label="AST: "];
"1000136" -> "1000140"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000140" -> "1000136"  [label="AST: "];
"1000133" -> "1000136"  [label="CFG: "];
"1000136" -> "1000163"  [label="DDG: err_info"];
"1000136" -> "1000163"  [label="DDG: wth->random_fh"];
"1000136" -> "1000133"  [label="DDG: wth->random_fh"];
"1000136" -> "1000133"  [label="DDG: err_info"];
"1000125" -> "1000136"  [label="DDG: wth->random_fh"];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000133"  [label="AST: "];
"1000144" -> "1000133"  [label="CFG: "];
"1000133" -> "1000163"  [label="DDG: file_error(wth->random_fh, err_info)"];
"1000133" -> "1000142"  [label="DDG: *err"];
"1000142" -> "1000141"  [label="AST: "];
"1000142" -> "1000145"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000145" -> "1000142"  [label="AST: "];
"1000149" -> "1000142"  [label="CFG: "];
"1000152" -> "1000142"  [label="CFG: "];
"1000142" -> "1000163"  [label="DDG: *err == 0"];
"1000142" -> "1000163"  [label="DDG: *err"];
"1000154" -> "1000153"  [label="AST: "];
"1000154" -> "1000162"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000158" -> "1000154"  [label="AST: "];
"1000159" -> "1000154"  [label="AST: "];
"1000160" -> "1000154"  [label="AST: "];
"1000161" -> "1000154"  [label="AST: "];
"1000162" -> "1000154"  [label="AST: "];
"1000153" -> "1000154"  [label="CFG: "];
"1000154" -> "1000163"  [label="DDG: line"];
"1000154" -> "1000163"  [label="DDG: parse_netscreen_packet(wth->random_fh, phdr, buf, line,\n\t    err, err_info)"];
"1000154" -> "1000163"  [label="DDG: err_info"];
"1000154" -> "1000163"  [label="DDG: buf"];
"1000154" -> "1000163"  [label="DDG: wth->random_fh"];
"1000154" -> "1000163"  [label="DDG: phdr"];
"1000154" -> "1000163"  [label="DDG: err"];
"1000154" -> "1000153"  [label="DDG: parse_netscreen_packet(wth->random_fh, phdr, buf, line,\n\t    err, err_info)"];
"1000125" -> "1000154"  [label="DDG: wth->random_fh"];
"1000125" -> "1000154"  [label="DDG: line"];
"1000103" -> "1000154"  [label="DDG: phdr"];
"1000104" -> "1000154"  [label="DDG: buf"];
"1000111" -> "1000154"  [label="DDG: err"];
"1000105" -> "1000154"  [label="DDG: err"];
"1000153" -> "1000107"  [label="AST: "];
"1000163" -> "1000153"  [label="CFG: "];
"1000153" -> "1000163"  [label="DDG: <RET>"];
}
