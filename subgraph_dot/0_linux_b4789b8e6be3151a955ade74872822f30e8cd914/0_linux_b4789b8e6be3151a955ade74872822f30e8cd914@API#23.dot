digraph "0_linux_b4789b8e6be3151a955ade74872822f30e8cd914@API" {
"1000707" [label="(Call,kmalloc(actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap), GFP_KERNEL))"];
"1000708" [label="(Call,actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap))"];
"1000432" [label="(Call,actual_fibsize != fibsize)"];
"1000395" [label="(Call,actual_fibsize = sizeof(struct aac_srb) - sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry)))"];
"1000397" [label="(Call,sizeof(struct aac_srb) - sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry)))"];
"1000403" [label="(Call,(user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry))"];
"1000404" [label="(Call,user_srbcmd->sg.count & 0xff)"];
"1000381" [label="(Call,user_srbcmd->sg.count > ARRAY_SIZE(sg_list))"];
"1000387" [label="(Call,ARRAY_SIZE(sg_list))"];
"1000208" [label="(Call,memset(sg_list, 0, sizeof(sg_list)))"];
"1000267" [label="(Call,copy_from_user(user_srbcmd, user_srb,fibsize))"];
"1000258" [label="(Call,!user_srbcmd)"];
"1000252" [label="(Call,user_srbcmd = kmalloc(fibsize, GFP_KERNEL))"];
"1000254" [label="(Call,kmalloc(fibsize, GFP_KERNEL))"];
"1000238" [label="(Call,fibsize > (dev->max_fib_size - sizeof(struct aac_fibhdr)))"];
"1000231" [label="(Call,fibsize < (sizeof(struct user_aac_srb) - sizeof(struct user_sgentry)))"];
"1000136" [label="(Call,fibsize = 0)"];
"1000240" [label="(Call,dev->max_fib_size - sizeof(struct aac_fibhdr))"];
"1000130" [label="(Call,*user_srb = arg)"];
"1000117" [label="(MethodParameterIn,void __user * arg)"];
"1000705" [label="(Call,usg = kmalloc(actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap), GFP_KERNEL))"];
"1000717" [label="(Call,!usg)"];
"1000725" [label="(Call,memcpy (usg, upsg, actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)))"];
"1000778" [label="(Call,kfree(usg))"];
"1000802" [label="(Call,kfree(usg))"];
"1000851" [label="(Call,kfree (usg))"];
"1000926" [label="(Call,kfree (usg))"];
"1000795" [label="(Call,GFP_KERNEL|__GFP_DMA)"];
"1000787" [label="(Call,kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000785" [label="(Call,p = kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000799" [label="(Call,!p)"];
"1000824" [label="(Call,sg_list[i] = p)"];
"1001424" [label="(Call,copy_to_user(sg_user[i], sg_list[i], byte_count))"];
"1001469" [label="(Call,kfree(sg_list[i]))"];
"1000838" [label="(Call,copy_from_user(p,sg_user[i],upsg->sg[i].count))"];
"1000860" [label="(Call,pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1000858" [label="(Call,addr = pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1000884" [label="(Call,addr & 0xffffffff)"];
"1000883" [label="(Call,cpu_to_le32(addr & 0xffffffff))"];
"1000873" [label="(Call,psg->sg[i].addr[0] = cpu_to_le32(addr & 0xffffffff))"];
"1000898" [label="(Call,addr>>32)"];
"1000897" [label="(Call,cpu_to_le32(addr>>32))"];
"1000887" [label="(Call,psg->sg[i].addr[1] = cpu_to_le32(addr>>32))"];
"1000901" [label="(Call,byte_count += usg->sg[i].count)"];
"1000932" [label="(Call,cpu_to_le32(byte_count))"];
"1000928" [label="(Call,srbcmd->count = cpu_to_le32(byte_count))"];
"1000918" [label="(Call,cpu_to_le32(usg->sg[i].count))"];
"1000753" [label="(Call,usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1000910" [label="(Call,psg->sg[i].count = cpu_to_le32(usg->sg[i].count))"];
"1000761" [label="(Call,(dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1000388" [label="(Identifier,sg_list)"];
"1000230" [label="(Call,(fibsize < (sizeof(struct user_aac_srb) - sizeof(struct user_sgentry))) ||\n\t    (fibsize > (dev->max_fib_size - sizeof(struct aac_fibhdr))))"];
"1000391" [label="(Identifier,rcode)"];
"1000131" [label="(Identifier,user_srb)"];
"1000753" [label="(Call,usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1000232" [label="(Identifier,fibsize)"];
"1000256" [label="(Identifier,GFP_KERNEL)"];
"1000141" [label="(Identifier,flags)"];
"1000267" [label="(Call,copy_from_user(user_srbcmd, user_srb,fibsize))"];
"1000801" [label="(Block,)"];
"1000850" [label="(Block,)"];
"1000839" [label="(Identifier,p)"];
"1000777" [label="(Block,)"];
"1000811" [label="(Identifier,sg_user)"];
"1000703" [label="(Block,)"];
"1000902" [label="(Identifier,byte_count)"];
"1000717" [label="(Call,!usg)"];
"1000396" [label="(Identifier,actual_fibsize)"];
"1000258" [label="(Call,!user_srbcmd)"];
"1000252" [label="(Call,user_srbcmd = kmalloc(fibsize, GFP_KERNEL))"];
"1000843" [label="(Call,upsg->sg[i].count)"];
"1000926" [label="(Call,kfree (usg))"];
"1001468" [label="(Block,)"];
"1000130" [label="(Call,*user_srb = arg)"];
"1000728" [label="(Call,actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap))"];
"1001470" [label="(Call,sg_list[i])"];
"1000840" [label="(Call,sg_user[i])"];
"1000380" [label="(ControlStructure,if (user_srbcmd->sg.count > ARRAY_SIZE(sg_list)))"];
"1000209" [label="(Identifier,sg_list)"];
"1000769" [label="(Call,dev->scsi_host_ptr->max_sectors << 9)"];
"1000903" [label="(Call,usg->sg[i].count)"];
"1000395" [label="(Call,actual_fibsize = sizeof(struct aac_srb) - sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry)))"];
"1000266" [label="(ControlStructure,if(copy_from_user(user_srbcmd, user_srb,fibsize)))"];
"1000241" [label="(Call,dev->max_fib_size)"];
"1001262" [label="(Call,copy_from_user(p, sg_user[i],\n\t\t\t\t\t\t\tupsg->sg[i].count))"];
"1000716" [label="(ControlStructure,if (!usg))"];
"1001428" [label="(Call,sg_list[i])"];
"1000800" [label="(Identifier,p)"];
"1000830" [label="(Identifier,sg_indx)"];
"1000460" [label="(Call,byte_count = 0)"];
"1000708" [label="(Call,actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap))"];
"1000553" [label="(Call,GFP_KERNEL|__GFP_DMA)"];
"1000137" [label="(Identifier,fibsize)"];
"1000901" [label="(Call,byte_count += usg->sg[i].count)"];
"1000883" [label="(Call,cpu_to_le32(addr & 0xffffffff))"];
"1000231" [label="(Call,fibsize < (sizeof(struct user_aac_srb) - sizeof(struct user_sgentry)))"];
"1000239" [label="(Identifier,fibsize)"];
"1000797" [label="(Identifier,__GFP_DMA)"];
"1000473" [label="(Call,* upsg = (struct user_sgmap64*)&user_srbcmd->sg)"];
"1000270" [label="(Identifier,fibsize)"];
"1000887" [label="(Call,psg->sg[i].addr[1] = cpu_to_le32(addr>>32))"];
"1000824" [label="(Call,sg_list[i] = p)"];
"1000918" [label="(Call,cpu_to_le32(usg->sg[i].count))"];
"1000872" [label="(Identifier,data_dir)"];
"1000852" [label="(Identifier,usg)"];
"1000858" [label="(Call,addr = pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1001467" [label="(Identifier,i)"];
"1000809" [label="(Call,sg_user[i] = (void __user *)(uintptr_t)usg->sg[i].addr)"];
"1001248" [label="(Call,sg_list[i] = p)"];
"1000411" [label="(Call,sizeof(struct sgentry))"];
"1000873" [label="(Call,psg->sg[i].addr[0] = cpu_to_le32(addr & 0xffffffff))"];
"1000885" [label="(Identifier,addr)"];
"1000435" [label="(Call,actual_fibsize64 != fibsize)"];
"1001457" [label="(Call,kfree(user_srbcmd))"];
"1000255" [label="(Identifier,fibsize)"];
"1001423" [label="(ControlStructure,if(copy_to_user(sg_user[i], sg_list[i], byte_count)))"];
"1000726" [label="(Identifier,usg)"];
"1000754" [label="(Call,usg->sg[i].count)"];
"1000860" [label="(Call,pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1000706" [label="(Identifier,usg)"];
"1000434" [label="(Identifier,fibsize)"];
"1000418" [label="(Call,user_srbcmd->sg.count & 0xff)"];
"1000727" [label="(Identifier,upsg)"];
"1000436" [label="(Identifier,actual_fibsize64)"];
"1000397" [label="(Call,sizeof(struct aac_srb) - sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry)))"];
"1000414" [label="(Identifier,actual_fibsize64)"];
"1000892" [label="(Identifier,psg)"];
"1000278" [label="(Identifier,user_reply)"];
"1000269" [label="(Identifier,user_srb)"];
"1001391" [label="(Call,byte_count = le32_to_cpu(\n\t\t\t  (dev->adapter_info.options & AAC_OPT_SGMAP_HOST64)\n\t\t\t      ? ((struct sgmap64*)&srbcmd->sg)->sg[i].count\n\t\t\t      : srbcmd->sg.sg[i].count))"];
"1000240" [label="(Call,dev->max_fib_size - sizeof(struct aac_fibhdr))"];
"1000707" [label="(Call,kmalloc(actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap), GFP_KERNEL))"];
"1000718" [label="(Identifier,usg)"];
"1000752" [label="(ControlStructure,if (usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)))"];
"1000927" [label="(Identifier,usg)"];
"1000433" [label="(Identifier,actual_fibsize)"];
"1000825" [label="(Call,sg_list[i])"];
"1000382" [label="(Call,user_srbcmd->sg.count)"];
"1001215" [label="(Call,kmalloc(upsg->sg[i].count, GFP_KERNEL))"];
"1001035" [label="(Call,GFP_KERNEL|__GFP_DMA)"];
"1000779" [label="(Identifier,usg)"];
"1000878" [label="(Identifier,psg)"];
"1000410" [label="(Literal,0xff)"];
"1000884" [label="(Call,addr & 0xffffffff)"];
"1000919" [label="(Call,usg->sg[i].count)"];
"1000208" [label="(Call,memset(sg_list, 0, sizeof(sg_list)))"];
"1000859" [label="(Identifier,addr)"];
"1000725" [label="(Call,memcpy (usg, upsg, actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)))"];
"1000932" [label="(Call,cpu_to_le32(byte_count))"];
"1000864" [label="(Identifier,p)"];
"1000802" [label="(Call,kfree(usg))"];
"1000602" [label="(Call,sg_list[i] = p)"];
"1000928" [label="(Call,srbcmd->count = cpu_to_le32(byte_count))"];
"1000244" [label="(Call,sizeof(struct aac_fibhdr))"];
"1000748" [label="(Identifier,i)"];
"1000233" [label="(Call,sizeof(struct user_aac_srb) - sizeof(struct user_sgentry))"];
"1001389" [label="(Identifier,i)"];
"1000874" [label="(Call,psg->sg[i].addr[0])"];
"1000886" [label="(Literal,0xffffffff)"];
"1000828" [label="(Identifier,p)"];
"1000431" [label="(Call,(actual_fibsize != fibsize) && (actual_fibsize64 != fibsize))"];
"1000277" [label="(Call,user_reply = arg+fibsize)"];
"1000446" [label="(Call,data_dir == DMA_NONE)"];
"1000710" [label="(Call,sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap))"];
"1000405" [label="(Call,user_srbcmd->sg.count)"];
"1000709" [label="(Identifier,actual_fibsize)"];
"1000398" [label="(Call,sizeof(struct aac_srb))"];
"1000749" [label="(Block,)"];
"1000616" [label="(Call,copy_from_user(p,sg_user[i],upsg->sg[i].count))"];
"1000788" [label="(Call,usg->sg[i].count)"];
"1000787" [label="(Call,kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000268" [label="(Identifier,user_srbcmd)"];
"1000238" [label="(Call,fibsize > (dev->max_fib_size - sizeof(struct aac_fibhdr)))"];
"1000838" [label="(Call,copy_from_user(p,sg_user[i],upsg->sg[i].count))"];
"1000262" [label="(Identifier,rcode)"];
"1000415" [label="(Call,actual_fibsize + (user_srbcmd->sg.count & 0xff) *\n\t  (sizeof(struct sgentry64) - sizeof(struct sgentry)))"];
"1000387" [label="(Call,ARRAY_SIZE(sg_list))"];
"1001096" [label="(Call,copy_from_user(p,sg_user[i],usg->sg[i].count))"];
"1000795" [label="(Call,GFP_KERNEL|__GFP_DMA)"];
"1000381" [label="(Call,user_srbcmd->sg.count > ARRAY_SIZE(sg_list))"];
"1000132" [label="(Identifier,arg)"];
"1000259" [label="(Identifier,user_srbcmd)"];
"1000257" [label="(ControlStructure,if (!user_srbcmd))"];
"1000914" [label="(Identifier,psg)"];
"1000136" [label="(Call,fibsize = 0)"];
"1000888" [label="(Call,psg->sg[i].addr[1])"];
"1000210" [label="(Literal,0)"];
"1000273" [label="(Identifier,rcode)"];
"1001082" [label="(Call,sg_list[i] = p)"];
"1000854" [label="(Identifier,rcode)"];
"1000897" [label="(Call,cpu_to_le32(addr>>32))"];
"1000279" [label="(Call,arg+fibsize)"];
"1000491" [label="(Call,actual_fibsize64 == fibsize)"];
"1000471" [label="(Block,)"];
"1001075" [label="(Call,sg_user[i] = (void __user *)addr)"];
"1000118" [label="(Block,)"];
"1000805" [label="(Identifier,rcode)"];
"1000936" [label="(Identifier,psg)"];
"1000803" [label="(Identifier,usg)"];
"1000778" [label="(Call,kfree(usg))"];
"1001424" [label="(Call,copy_to_user(sg_user[i], sg_list[i], byte_count))"];
"1000138" [label="(Literal,0)"];
"1000798" [label="(ControlStructure,if(!p))"];
"1000898" [label="(Call,addr>>32)"];
"1000593" [label="(Call,sg_user[i] = (void __user *)(uintptr_t)addr)"];
"1000413" [label="(Call,actual_fibsize64 = actual_fibsize + (user_srbcmd->sg.count & 0xff) *\n\t  (sizeof(struct sgentry64) - sizeof(struct sgentry)))"];
"1001469" [label="(Call,kfree(sg_list[i]))"];
"1000796" [label="(Identifier,GFP_KERNEL)"];
"1000900" [label="(Literal,32)"];
"1001431" [label="(Identifier,byte_count)"];
"1000930" [label="(Identifier,srbcmd)"];
"1000403" [label="(Call,(user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry))"];
"1001346" [label="(Call,aac_fib_send(ScsiPortCommand, srbfib, actual_fibsize, FsaNormal, 1, 1, NULL, NULL))"];
"1000837" [label="(ControlStructure,if(copy_from_user(p,sg_user[i],upsg->sg[i].count)))"];
"1000929" [label="(Call,srbcmd->count)"];
"1000216" [label="(Identifier,fibsize)"];
"1000851" [label="(Call,kfree (usg))"];
"1000865" [label="(Call,usg->sg[i].count)"];
"1000910" [label="(Call,psg->sg[i].count = cpu_to_le32(usg->sg[i].count))"];
"1001425" [label="(Call,sg_user[i])"];
"1000786" [label="(Identifier,p)"];
"1001485" [label="(MethodReturn,static int)"];
"1000253" [label="(Identifier,user_srbcmd)"];
"1000117" [label="(MethodParameterIn,void __user * arg)"];
"1000736" [label="(Identifier,actual_fibsize)"];
"1000799" [label="(Call,!p)"];
"1000785" [label="(Call,p = kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000400" [label="(Call,sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry)))"];
"1000254" [label="(Call,kmalloc(fibsize, GFP_KERNEL))"];
"1001233" [label="(Call,sg_user[i] = (void __user *)(uintptr_t)upsg->sg[i].addr)"];
"1000211" [label="(Call,sizeof(sg_list))"];
"1000705" [label="(Call,usg = kmalloc(actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap), GFP_KERNEL))"];
"1001434" [label="(Identifier,rcode)"];
"1000970" [label="(Call,actual_fibsize64 == fibsize)"];
"1000677" [label="(Call,byte_count += upsg->sg[i].count)"];
"1000933" [label="(Identifier,byte_count)"];
"1000911" [label="(Call,psg->sg[i].count)"];
"1000899" [label="(Identifier,addr)"];
"1000861" [label="(Call,dev->pdev)"];
"1000721" [label="(Identifier,rcode)"];
"1000781" [label="(Identifier,rcode)"];
"1000715" [label="(Identifier,GFP_KERNEL)"];
"1000432" [label="(Call,actual_fibsize != fibsize)"];
"1000404" [label="(Call,user_srbcmd->sg.count & 0xff)"];
"1000707" -> "1000705"  [label="AST: "];
"1000707" -> "1000715"  [label="CFG: "];
"1000708" -> "1000707"  [label="AST: "];
"1000715" -> "1000707"  [label="AST: "];
"1000705" -> "1000707"  [label="CFG: "];
"1000707" -> "1001485"  [label="DDG: GFP_KERNEL"];
"1000707" -> "1001485"  [label="DDG: actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)"];
"1000707" -> "1000705"  [label="DDG: actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)"];
"1000707" -> "1000705"  [label="DDG: GFP_KERNEL"];
"1000708" -> "1000707"  [label="DDG: actual_fibsize"];
"1000708" -> "1000707"  [label="DDG: sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)"];
"1000254" -> "1000707"  [label="DDG: GFP_KERNEL"];
"1000707" -> "1000795"  [label="DDG: GFP_KERNEL"];
"1000708" -> "1000710"  [label="CFG: "];
"1000709" -> "1000708"  [label="AST: "];
"1000710" -> "1000708"  [label="AST: "];
"1000715" -> "1000708"  [label="CFG: "];
"1000708" -> "1001485"  [label="DDG: actual_fibsize"];
"1000708" -> "1001485"  [label="DDG: sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)"];
"1000432" -> "1000708"  [label="DDG: actual_fibsize"];
"1000708" -> "1000728"  [label="DDG: actual_fibsize"];
"1000432" -> "1000431"  [label="AST: "];
"1000432" -> "1000434"  [label="CFG: "];
"1000433" -> "1000432"  [label="AST: "];
"1000434" -> "1000432"  [label="AST: "];
"1000436" -> "1000432"  [label="CFG: "];
"1000431" -> "1000432"  [label="CFG: "];
"1000432" -> "1001485"  [label="DDG: fibsize"];
"1000432" -> "1001485"  [label="DDG: actual_fibsize"];
"1000432" -> "1000431"  [label="DDG: actual_fibsize"];
"1000432" -> "1000431"  [label="DDG: fibsize"];
"1000395" -> "1000432"  [label="DDG: actual_fibsize"];
"1000267" -> "1000432"  [label="DDG: fibsize"];
"1000432" -> "1000435"  [label="DDG: fibsize"];
"1000432" -> "1000491"  [label="DDG: fibsize"];
"1000432" -> "1000970"  [label="DDG: fibsize"];
"1000432" -> "1001346"  [label="DDG: actual_fibsize"];
"1000395" -> "1000118"  [label="AST: "];
"1000395" -> "1000397"  [label="CFG: "];
"1000396" -> "1000395"  [label="AST: "];
"1000397" -> "1000395"  [label="AST: "];
"1000414" -> "1000395"  [label="CFG: "];
"1000395" -> "1001485"  [label="DDG: sizeof(struct aac_srb) - sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry))"];
"1000397" -> "1000395"  [label="DDG: sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry))"];
"1000395" -> "1000413"  [label="DDG: actual_fibsize"];
"1000395" -> "1000415"  [label="DDG: actual_fibsize"];
"1000397" -> "1000400"  [label="CFG: "];
"1000398" -> "1000397"  [label="AST: "];
"1000400" -> "1000397"  [label="AST: "];
"1000397" -> "1001485"  [label="DDG: sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry))"];
"1000403" -> "1000397"  [label="DDG: user_srbcmd->sg.count & 0xff"];
"1000403" -> "1000400"  [label="AST: "];
"1000403" -> "1000411"  [label="CFG: "];
"1000404" -> "1000403"  [label="AST: "];
"1000411" -> "1000403"  [label="AST: "];
"1000400" -> "1000403"  [label="CFG: "];
"1000403" -> "1000400"  [label="DDG: user_srbcmd->sg.count & 0xff"];
"1000404" -> "1000403"  [label="DDG: user_srbcmd->sg.count"];
"1000404" -> "1000403"  [label="DDG: 0xff"];
"1000404" -> "1000410"  [label="CFG: "];
"1000405" -> "1000404"  [label="AST: "];
"1000410" -> "1000404"  [label="AST: "];
"1000412" -> "1000404"  [label="CFG: "];
"1000381" -> "1000404"  [label="DDG: user_srbcmd->sg.count"];
"1000404" -> "1000418"  [label="DDG: user_srbcmd->sg.count"];
"1000381" -> "1000380"  [label="AST: "];
"1000381" -> "1000387"  [label="CFG: "];
"1000382" -> "1000381"  [label="AST: "];
"1000387" -> "1000381"  [label="AST: "];
"1000391" -> "1000381"  [label="CFG: "];
"1000396" -> "1000381"  [label="CFG: "];
"1000381" -> "1001485"  [label="DDG: ARRAY_SIZE(sg_list)"];
"1000381" -> "1001485"  [label="DDG: user_srbcmd->sg.count"];
"1000381" -> "1001485"  [label="DDG: user_srbcmd->sg.count > ARRAY_SIZE(sg_list)"];
"1000387" -> "1000381"  [label="DDG: sg_list"];
"1000387" -> "1000388"  [label="CFG: "];
"1000388" -> "1000387"  [label="AST: "];
"1000387" -> "1001485"  [label="DDG: sg_list"];
"1000208" -> "1000387"  [label="DDG: sg_list"];
"1000387" -> "1001424"  [label="DDG: sg_list"];
"1000387" -> "1001469"  [label="DDG: sg_list"];
"1000208" -> "1000118"  [label="AST: "];
"1000208" -> "1000211"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000210" -> "1000208"  [label="AST: "];
"1000211" -> "1000208"  [label="AST: "];
"1000216" -> "1000208"  [label="CFG: "];
"1000208" -> "1001485"  [label="DDG: sg_list"];
"1000208" -> "1001485"  [label="DDG: memset(sg_list, 0, sizeof(sg_list))"];
"1000208" -> "1001469"  [label="DDG: sg_list"];
"1000267" -> "1000266"  [label="AST: "];
"1000267" -> "1000270"  [label="CFG: "];
"1000268" -> "1000267"  [label="AST: "];
"1000269" -> "1000267"  [label="AST: "];
"1000270" -> "1000267"  [label="AST: "];
"1000273" -> "1000267"  [label="CFG: "];
"1000278" -> "1000267"  [label="CFG: "];
"1000267" -> "1001485"  [label="DDG: user_srb"];
"1000267" -> "1001485"  [label="DDG: copy_from_user(user_srbcmd, user_srb,fibsize)"];
"1000267" -> "1001485"  [label="DDG: fibsize"];
"1000258" -> "1000267"  [label="DDG: user_srbcmd"];
"1000130" -> "1000267"  [label="DDG: user_srb"];
"1000254" -> "1000267"  [label="DDG: fibsize"];
"1000267" -> "1000277"  [label="DDG: fibsize"];
"1000267" -> "1000279"  [label="DDG: fibsize"];
"1000267" -> "1001457"  [label="DDG: user_srbcmd"];
"1000258" -> "1000257"  [label="AST: "];
"1000258" -> "1000259"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000262" -> "1000258"  [label="CFG: "];
"1000268" -> "1000258"  [label="CFG: "];
"1000258" -> "1001485"  [label="DDG: !user_srbcmd"];
"1000252" -> "1000258"  [label="DDG: user_srbcmd"];
"1000258" -> "1001457"  [label="DDG: user_srbcmd"];
"1000252" -> "1000118"  [label="AST: "];
"1000252" -> "1000254"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000254" -> "1000252"  [label="AST: "];
"1000259" -> "1000252"  [label="CFG: "];
"1000252" -> "1001485"  [label="DDG: kmalloc(fibsize, GFP_KERNEL)"];
"1000254" -> "1000252"  [label="DDG: fibsize"];
"1000254" -> "1000252"  [label="DDG: GFP_KERNEL"];
"1000254" -> "1000256"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000256" -> "1000254"  [label="AST: "];
"1000254" -> "1001485"  [label="DDG: fibsize"];
"1000254" -> "1001485"  [label="DDG: GFP_KERNEL"];
"1000238" -> "1000254"  [label="DDG: fibsize"];
"1000231" -> "1000254"  [label="DDG: fibsize"];
"1000254" -> "1000553"  [label="DDG: GFP_KERNEL"];
"1000254" -> "1001035"  [label="DDG: GFP_KERNEL"];
"1000254" -> "1001215"  [label="DDG: GFP_KERNEL"];
"1000238" -> "1000230"  [label="AST: "];
"1000238" -> "1000240"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="AST: "];
"1000230" -> "1000238"  [label="CFG: "];
"1000238" -> "1001485"  [label="DDG: fibsize"];
"1000238" -> "1001485"  [label="DDG: dev->max_fib_size - sizeof(struct aac_fibhdr)"];
"1000238" -> "1000230"  [label="DDG: fibsize"];
"1000238" -> "1000230"  [label="DDG: dev->max_fib_size - sizeof(struct aac_fibhdr)"];
"1000231" -> "1000238"  [label="DDG: fibsize"];
"1000240" -> "1000238"  [label="DDG: dev->max_fib_size"];
"1000231" -> "1000230"  [label="AST: "];
"1000231" -> "1000233"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000233" -> "1000231"  [label="AST: "];
"1000239" -> "1000231"  [label="CFG: "];
"1000230" -> "1000231"  [label="CFG: "];
"1000231" -> "1001485"  [label="DDG: sizeof(struct user_aac_srb) - sizeof(struct user_sgentry)"];
"1000231" -> "1001485"  [label="DDG: fibsize"];
"1000231" -> "1000230"  [label="DDG: fibsize"];
"1000231" -> "1000230"  [label="DDG: sizeof(struct user_aac_srb) - sizeof(struct user_sgentry)"];
"1000136" -> "1000231"  [label="DDG: fibsize"];
"1000136" -> "1000118"  [label="AST: "];
"1000136" -> "1000138"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000141" -> "1000136"  [label="CFG: "];
"1000136" -> "1001485"  [label="DDG: fibsize"];
"1000240" -> "1000244"  [label="CFG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000244" -> "1000240"  [label="AST: "];
"1000240" -> "1001485"  [label="DDG: dev->max_fib_size"];
"1000130" -> "1000118"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000137" -> "1000130"  [label="CFG: "];
"1000130" -> "1001485"  [label="DDG: arg"];
"1000130" -> "1001485"  [label="DDG: user_srb"];
"1000117" -> "1000130"  [label="DDG: arg"];
"1000117" -> "1000115"  [label="AST: "];
"1000117" -> "1001485"  [label="DDG: arg"];
"1000117" -> "1000277"  [label="DDG: arg"];
"1000117" -> "1000279"  [label="DDG: arg"];
"1000705" -> "1000703"  [label="AST: "];
"1000706" -> "1000705"  [label="AST: "];
"1000718" -> "1000705"  [label="CFG: "];
"1000705" -> "1001485"  [label="DDG: kmalloc(actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap), GFP_KERNEL)"];
"1000705" -> "1000717"  [label="DDG: usg"];
"1000717" -> "1000716"  [label="AST: "];
"1000717" -> "1000718"  [label="CFG: "];
"1000718" -> "1000717"  [label="AST: "];
"1000721" -> "1000717"  [label="CFG: "];
"1000726" -> "1000717"  [label="CFG: "];
"1000717" -> "1001485"  [label="DDG: !usg"];
"1000717" -> "1001485"  [label="DDG: usg"];
"1000717" -> "1000725"  [label="DDG: usg"];
"1000725" -> "1000703"  [label="AST: "];
"1000725" -> "1000728"  [label="CFG: "];
"1000726" -> "1000725"  [label="AST: "];
"1000727" -> "1000725"  [label="AST: "];
"1000728" -> "1000725"  [label="AST: "];
"1000736" -> "1000725"  [label="CFG: "];
"1000725" -> "1001485"  [label="DDG: upsg"];
"1000725" -> "1001485"  [label="DDG: memcpy (usg, upsg, actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap))"];
"1000725" -> "1001485"  [label="DDG: actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)"];
"1000473" -> "1000725"  [label="DDG: upsg"];
"1000728" -> "1000725"  [label="DDG: actual_fibsize"];
"1000728" -> "1000725"  [label="DDG: sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)"];
"1000725" -> "1000778"  [label="DDG: usg"];
"1000725" -> "1000802"  [label="DDG: usg"];
"1000725" -> "1000851"  [label="DDG: usg"];
"1000725" -> "1000926"  [label="DDG: usg"];
"1000778" -> "1000777"  [label="AST: "];
"1000778" -> "1000779"  [label="CFG: "];
"1000779" -> "1000778"  [label="AST: "];
"1000781" -> "1000778"  [label="CFG: "];
"1000778" -> "1001485"  [label="DDG: kfree(usg)"];
"1000778" -> "1001485"  [label="DDG: usg"];
"1000802" -> "1000801"  [label="AST: "];
"1000802" -> "1000803"  [label="CFG: "];
"1000803" -> "1000802"  [label="AST: "];
"1000805" -> "1000802"  [label="CFG: "];
"1000802" -> "1001485"  [label="DDG: usg"];
"1000802" -> "1001485"  [label="DDG: kfree(usg)"];
"1000851" -> "1000850"  [label="AST: "];
"1000851" -> "1000852"  [label="CFG: "];
"1000852" -> "1000851"  [label="AST: "];
"1000854" -> "1000851"  [label="CFG: "];
"1000851" -> "1001485"  [label="DDG: kfree (usg)"];
"1000851" -> "1001485"  [label="DDG: usg"];
"1000926" -> "1000703"  [label="AST: "];
"1000926" -> "1000927"  [label="CFG: "];
"1000927" -> "1000926"  [label="AST: "];
"1000930" -> "1000926"  [label="CFG: "];
"1000926" -> "1001485"  [label="DDG: kfree (usg)"];
"1000926" -> "1001485"  [label="DDG: usg"];
"1000795" -> "1000787"  [label="AST: "];
"1000795" -> "1000797"  [label="CFG: "];
"1000796" -> "1000795"  [label="AST: "];
"1000797" -> "1000795"  [label="AST: "];
"1000787" -> "1000795"  [label="CFG: "];
"1000795" -> "1001485"  [label="DDG: GFP_KERNEL"];
"1000795" -> "1001485"  [label="DDG: __GFP_DMA"];
"1000795" -> "1000787"  [label="DDG: GFP_KERNEL"];
"1000795" -> "1000787"  [label="DDG: __GFP_DMA"];
"1000787" -> "1000785"  [label="AST: "];
"1000788" -> "1000787"  [label="AST: "];
"1000785" -> "1000787"  [label="CFG: "];
"1000787" -> "1001485"  [label="DDG: usg->sg[i].count"];
"1000787" -> "1001485"  [label="DDG: GFP_KERNEL|__GFP_DMA"];
"1000787" -> "1000785"  [label="DDG: usg->sg[i].count"];
"1000787" -> "1000785"  [label="DDG: GFP_KERNEL|__GFP_DMA"];
"1000753" -> "1000787"  [label="DDG: usg->sg[i].count"];
"1000787" -> "1000860"  [label="DDG: usg->sg[i].count"];
"1000785" -> "1000749"  [label="AST: "];
"1000786" -> "1000785"  [label="AST: "];
"1000800" -> "1000785"  [label="CFG: "];
"1000785" -> "1001485"  [label="DDG: kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA)"];
"1000785" -> "1000799"  [label="DDG: p"];
"1000799" -> "1000798"  [label="AST: "];
"1000799" -> "1000800"  [label="CFG: "];
"1000800" -> "1000799"  [label="AST: "];
"1000803" -> "1000799"  [label="CFG: "];
"1000811" -> "1000799"  [label="CFG: "];
"1000799" -> "1001485"  [label="DDG: p"];
"1000799" -> "1001485"  [label="DDG: !p"];
"1000799" -> "1000824"  [label="DDG: p"];
"1000799" -> "1000838"  [label="DDG: p"];
"1000799" -> "1000860"  [label="DDG: p"];
"1000824" -> "1000749"  [label="AST: "];
"1000824" -> "1000828"  [label="CFG: "];
"1000825" -> "1000824"  [label="AST: "];
"1000828" -> "1000824"  [label="AST: "];
"1000830" -> "1000824"  [label="CFG: "];
"1000824" -> "1001485"  [label="DDG: sg_list[i]"];
"1000824" -> "1001424"  [label="DDG: sg_list[i]"];
"1000824" -> "1001469"  [label="DDG: sg_list[i]"];
"1001424" -> "1001423"  [label="AST: "];
"1001424" -> "1001431"  [label="CFG: "];
"1001425" -> "1001424"  [label="AST: "];
"1001428" -> "1001424"  [label="AST: "];
"1001431" -> "1001424"  [label="AST: "];
"1001434" -> "1001424"  [label="CFG: "];
"1001389" -> "1001424"  [label="CFG: "];
"1001424" -> "1001485"  [label="DDG: sg_user[i]"];
"1001424" -> "1001485"  [label="DDG: sg_list[i]"];
"1001424" -> "1001485"  [label="DDG: copy_to_user(sg_user[i], sg_list[i], byte_count)"];
"1001424" -> "1001485"  [label="DDG: byte_count"];
"1000809" -> "1001424"  [label="DDG: sg_user[i]"];
"1000616" -> "1001424"  [label="DDG: sg_user[i]"];
"1001096" -> "1001424"  [label="DDG: sg_user[i]"];
"1001262" -> "1001424"  [label="DDG: sg_user[i]"];
"1000593" -> "1001424"  [label="DDG: sg_user[i]"];
"1001075" -> "1001424"  [label="DDG: sg_user[i]"];
"1001233" -> "1001424"  [label="DDG: sg_user[i]"];
"1000838" -> "1001424"  [label="DDG: sg_user[i]"];
"1001248" -> "1001424"  [label="DDG: sg_list[i]"];
"1001082" -> "1001424"  [label="DDG: sg_list[i]"];
"1000602" -> "1001424"  [label="DDG: sg_list[i]"];
"1001391" -> "1001424"  [label="DDG: byte_count"];
"1001424" -> "1001469"  [label="DDG: sg_list[i]"];
"1001469" -> "1001468"  [label="AST: "];
"1001469" -> "1001470"  [label="CFG: "];
"1001470" -> "1001469"  [label="AST: "];
"1001467" -> "1001469"  [label="CFG: "];
"1001469" -> "1001485"  [label="DDG: kfree(sg_list[i])"];
"1001469" -> "1001485"  [label="DDG: sg_list[i]"];
"1001248" -> "1001469"  [label="DDG: sg_list[i]"];
"1001082" -> "1001469"  [label="DDG: sg_list[i]"];
"1000602" -> "1001469"  [label="DDG: sg_list[i]"];
"1000838" -> "1000837"  [label="AST: "];
"1000838" -> "1000843"  [label="CFG: "];
"1000839" -> "1000838"  [label="AST: "];
"1000840" -> "1000838"  [label="AST: "];
"1000843" -> "1000838"  [label="AST: "];
"1000852" -> "1000838"  [label="CFG: "];
"1000859" -> "1000838"  [label="CFG: "];
"1000838" -> "1001485"  [label="DDG: copy_from_user(p,sg_user[i],upsg->sg[i].count)"];
"1000838" -> "1001485"  [label="DDG: upsg->sg[i].count"];
"1000838" -> "1001485"  [label="DDG: p"];
"1000838" -> "1001485"  [label="DDG: sg_user[i]"];
"1000809" -> "1000838"  [label="DDG: sg_user[i]"];
"1000838" -> "1000860"  [label="DDG: p"];
"1000860" -> "1000858"  [label="AST: "];
"1000860" -> "1000872"  [label="CFG: "];
"1000861" -> "1000860"  [label="AST: "];
"1000864" -> "1000860"  [label="AST: "];
"1000865" -> "1000860"  [label="AST: "];
"1000872" -> "1000860"  [label="AST: "];
"1000858" -> "1000860"  [label="CFG: "];
"1000860" -> "1001485"  [label="DDG: data_dir"];
"1000860" -> "1001485"  [label="DDG: p"];
"1000860" -> "1001485"  [label="DDG: dev->pdev"];
"1000860" -> "1000858"  [label="DDG: dev->pdev"];
"1000860" -> "1000858"  [label="DDG: p"];
"1000860" -> "1000858"  [label="DDG: usg->sg[i].count"];
"1000860" -> "1000858"  [label="DDG: data_dir"];
"1000446" -> "1000860"  [label="DDG: data_dir"];
"1000860" -> "1000901"  [label="DDG: usg->sg[i].count"];
"1000860" -> "1000918"  [label="DDG: usg->sg[i].count"];
"1000858" -> "1000749"  [label="AST: "];
"1000859" -> "1000858"  [label="AST: "];
"1000878" -> "1000858"  [label="CFG: "];
"1000858" -> "1001485"  [label="DDG: pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir)"];
"1000858" -> "1000884"  [label="DDG: addr"];
"1000884" -> "1000883"  [label="AST: "];
"1000884" -> "1000886"  [label="CFG: "];
"1000885" -> "1000884"  [label="AST: "];
"1000886" -> "1000884"  [label="AST: "];
"1000883" -> "1000884"  [label="CFG: "];
"1000884" -> "1000883"  [label="DDG: addr"];
"1000884" -> "1000883"  [label="DDG: 0xffffffff"];
"1000884" -> "1000898"  [label="DDG: addr"];
"1000883" -> "1000873"  [label="AST: "];
"1000873" -> "1000883"  [label="CFG: "];
"1000883" -> "1001485"  [label="DDG: addr & 0xffffffff"];
"1000883" -> "1000873"  [label="DDG: addr & 0xffffffff"];
"1000873" -> "1000749"  [label="AST: "];
"1000874" -> "1000873"  [label="AST: "];
"1000892" -> "1000873"  [label="CFG: "];
"1000873" -> "1001485"  [label="DDG: psg->sg[i].addr[0]"];
"1000873" -> "1001485"  [label="DDG: cpu_to_le32(addr & 0xffffffff)"];
"1000898" -> "1000897"  [label="AST: "];
"1000898" -> "1000900"  [label="CFG: "];
"1000899" -> "1000898"  [label="AST: "];
"1000900" -> "1000898"  [label="AST: "];
"1000897" -> "1000898"  [label="CFG: "];
"1000898" -> "1001485"  [label="DDG: addr"];
"1000898" -> "1000897"  [label="DDG: addr"];
"1000898" -> "1000897"  [label="DDG: 32"];
"1000897" -> "1000887"  [label="AST: "];
"1000887" -> "1000897"  [label="CFG: "];
"1000897" -> "1001485"  [label="DDG: addr>>32"];
"1000897" -> "1000887"  [label="DDG: addr>>32"];
"1000887" -> "1000749"  [label="AST: "];
"1000888" -> "1000887"  [label="AST: "];
"1000902" -> "1000887"  [label="CFG: "];
"1000887" -> "1001485"  [label="DDG: cpu_to_le32(addr>>32)"];
"1000887" -> "1001485"  [label="DDG: psg->sg[i].addr[1]"];
"1000901" -> "1000749"  [label="AST: "];
"1000901" -> "1000903"  [label="CFG: "];
"1000902" -> "1000901"  [label="AST: "];
"1000903" -> "1000901"  [label="AST: "];
"1000914" -> "1000901"  [label="CFG: "];
"1000901" -> "1001485"  [label="DDG: byte_count"];
"1000460" -> "1000901"  [label="DDG: byte_count"];
"1000901" -> "1000932"  [label="DDG: byte_count"];
"1000932" -> "1000928"  [label="AST: "];
"1000932" -> "1000933"  [label="CFG: "];
"1000933" -> "1000932"  [label="AST: "];
"1000928" -> "1000932"  [label="CFG: "];
"1000932" -> "1001485"  [label="DDG: byte_count"];
"1000932" -> "1000928"  [label="DDG: byte_count"];
"1000460" -> "1000932"  [label="DDG: byte_count"];
"1000677" -> "1000932"  [label="DDG: byte_count"];
"1000928" -> "1000471"  [label="AST: "];
"1000929" -> "1000928"  [label="AST: "];
"1000936" -> "1000928"  [label="CFG: "];
"1000928" -> "1001485"  [label="DDG: srbcmd->count"];
"1000928" -> "1001485"  [label="DDG: cpu_to_le32(byte_count)"];
"1000918" -> "1000910"  [label="AST: "];
"1000918" -> "1000919"  [label="CFG: "];
"1000919" -> "1000918"  [label="AST: "];
"1000910" -> "1000918"  [label="CFG: "];
"1000918" -> "1001485"  [label="DDG: usg->sg[i].count"];
"1000918" -> "1000753"  [label="DDG: usg->sg[i].count"];
"1000918" -> "1000910"  [label="DDG: usg->sg[i].count"];
"1000753" -> "1000752"  [label="AST: "];
"1000753" -> "1000761"  [label="CFG: "];
"1000754" -> "1000753"  [label="AST: "];
"1000761" -> "1000753"  [label="AST: "];
"1000779" -> "1000753"  [label="CFG: "];
"1000786" -> "1000753"  [label="CFG: "];
"1000753" -> "1001485"  [label="DDG: usg->sg[i].count"];
"1000753" -> "1001485"  [label="DDG: usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1000753" -> "1001485"  [label="DDG: (dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536"];
"1000769" -> "1000753"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1000769" -> "1000753"  [label="DDG: 9"];
"1000910" -> "1000749"  [label="AST: "];
"1000911" -> "1000910"  [label="AST: "];
"1000748" -> "1000910"  [label="CFG: "];
"1000910" -> "1001485"  [label="DDG: cpu_to_le32(usg->sg[i].count)"];
"1000910" -> "1001485"  [label="DDG: psg->sg[i].count"];
}
