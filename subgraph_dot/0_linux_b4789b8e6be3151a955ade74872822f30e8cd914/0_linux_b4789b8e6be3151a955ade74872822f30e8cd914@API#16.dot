digraph "0_linux_b4789b8e6be3151a955ade74872822f30e8cd914@API" {
"1001424" [label="(Call,copy_to_user(sg_user[i], sg_list[i], byte_count))"];
"1000809" [label="(Call,sg_user[i] = (void __user *)(uintptr_t)usg->sg[i].addr)"];
"1000813" [label="(Call,(void __user *)(uintptr_t)usg->sg[i].addr)"];
"1000815" [label="(Call,(uintptr_t)usg->sg[i].addr)"];
"1000616" [label="(Call,copy_from_user(p,sg_user[i],upsg->sg[i].count))"];
"1000557" [label="(Call,!p)"];
"1000543" [label="(Call,p = kmalloc(upsg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000545" [label="(Call,kmalloc(upsg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000513" [label="(Call,upsg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1000694" [label="(Call,cpu_to_le32(upsg->sg[i].count))"];
"1000636" [label="(Call,pci_map_single(dev->pdev, p, upsg->sg[i].count, data_dir))"];
"1000446" [label="(Call,data_dir == DMA_NONE)"];
"1000363" [label="(Call,data_dir = DMA_TO_DEVICE)"];
"1000367" [label="(Call,data_dir = DMA_BIDIRECTIONAL)"];
"1000372" [label="(Call,data_dir = DMA_FROM_DEVICE)"];
"1000377" [label="(Call,data_dir = DMA_NONE)"];
"1000529" [label="(Call,dev->scsi_host_ptr->max_sectors << 9)"];
"1000553" [label="(Call,GFP_KERNEL|__GFP_DMA)"];
"1000254" [label="(Call,kmalloc(fibsize, GFP_KERNEL))"];
"1000238" [label="(Call,fibsize > (dev->max_fib_size - sizeof(struct aac_fibhdr)))"];
"1000231" [label="(Call,fibsize < (sizeof(struct user_aac_srb) - sizeof(struct user_sgentry)))"];
"1000136" [label="(Call,fibsize = 0)"];
"1000240" [label="(Call,dev->max_fib_size - sizeof(struct aac_fibhdr))"];
"1000593" [label="(Call,sg_user[i] = (void __user *)(uintptr_t)addr)"];
"1000597" [label="(Call,(void __user *)(uintptr_t)addr)"];
"1000599" [label="(Call,(uintptr_t)addr)"];
"1000578" [label="(Call,addr += ((u64)upsg->sg[i].addr[1]) << 32)"];
"1000580" [label="(Call,((u64)upsg->sg[i].addr[1]) << 32)"];
"1000581" [label="(Call,(u64)upsg->sg[i].addr[1])"];
"1000565" [label="(Call,addr = (u64)upsg->sg[i].addr[0])"];
"1000567" [label="(Call,(u64)upsg->sg[i].addr[0])"];
"1001096" [label="(Call,copy_from_user(p,sg_user[i],usg->sg[i].count))"];
"1001039" [label="(Call,!p)"];
"1001025" [label="(Call,p = kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1001027" [label="(Call,kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000995" [label="(Call,usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1001158" [label="(Call,cpu_to_le32(usg->sg[i].count))"];
"1001116" [label="(Call,pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1001011" [label="(Call,dev->scsi_host_ptr->max_sectors << 9)"];
"1001035" [label="(Call,GFP_KERNEL|__GFP_DMA)"];
"1001075" [label="(Call,sg_user[i] = (void __user *)addr)"];
"1001079" [label="(Call,(void __user *)addr)"];
"1001060" [label="(Call,addr += ((u64)usg->sg[i].addr[1]) << 32)"];
"1001062" [label="(Call,((u64)usg->sg[i].addr[1]) << 32)"];
"1001063" [label="(Call,(u64)usg->sg[i].addr[1])"];
"1001047" [label="(Call,addr = (u64)usg->sg[i].addr[0])"];
"1001049" [label="(Call,(u64)usg->sg[i].addr[0])"];
"1001262" [label="(Call,copy_from_user(p, sg_user[i],\n\t\t\t\t\t\t\tupsg->sg[i].count))"];
"1001225" [label="(Call,!p)"];
"1001213" [label="(Call,p = kmalloc(upsg->sg[i].count, GFP_KERNEL))"];
"1001215" [label="(Call,kmalloc(upsg->sg[i].count, GFP_KERNEL))"];
"1001183" [label="(Call,upsg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1001322" [label="(Call,cpu_to_le32(upsg->sg[i].count))"];
"1001282" [label="(Call,pci_map_single(dev->pdev, p,\n\t\t\t\t\tupsg->sg[i].count, data_dir))"];
"1001199" [label="(Call,dev->scsi_host_ptr->max_sectors << 9)"];
"1001233" [label="(Call,sg_user[i] = (void __user *)(uintptr_t)upsg->sg[i].addr)"];
"1001237" [label="(Call,(void __user *)(uintptr_t)upsg->sg[i].addr)"];
"1001239" [label="(Call,(uintptr_t)upsg->sg[i].addr)"];
"1000838" [label="(Call,copy_from_user(p,sg_user[i],upsg->sg[i].count))"];
"1000799" [label="(Call,!p)"];
"1000785" [label="(Call,p = kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000787" [label="(Call,kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000753" [label="(Call,usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1000918" [label="(Call,cpu_to_le32(usg->sg[i].count))"];
"1000860" [label="(Call,pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1000769" [label="(Call,dev->scsi_host_ptr->max_sectors << 9)"];
"1000795" [label="(Call,GFP_KERNEL|__GFP_DMA)"];
"1000707" [label="(Call,kmalloc(actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap), GFP_KERNEL))"];
"1000708" [label="(Call,actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap))"];
"1000432" [label="(Call,actual_fibsize != fibsize)"];
"1000395" [label="(Call,actual_fibsize = sizeof(struct aac_srb) - sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry)))"];
"1000397" [label="(Call,sizeof(struct aac_srb) - sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry)))"];
"1000403" [label="(Call,(user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry))"];
"1000404" [label="(Call,user_srbcmd->sg.count & 0xff)"];
"1000381" [label="(Call,user_srbcmd->sg.count > ARRAY_SIZE(sg_list))"];
"1000387" [label="(Call,ARRAY_SIZE(sg_list))"];
"1000208" [label="(Call,memset(sg_list, 0, sizeof(sg_list)))"];
"1000267" [label="(Call,copy_from_user(user_srbcmd, user_srb,fibsize))"];
"1000258" [label="(Call,!user_srbcmd)"];
"1000252" [label="(Call,user_srbcmd = kmalloc(fibsize, GFP_KERNEL))"];
"1000130" [label="(Call,*user_srb = arg)"];
"1000117" [label="(MethodParameterIn,void __user * arg)"];
"1001248" [label="(Call,sg_list[i] = p)"];
"1001082" [label="(Call,sg_list[i] = p)"];
"1000602" [label="(Call,sg_list[i] = p)"];
"1000824" [label="(Call,sg_list[i] = p)"];
"1001391" [label="(Call,byte_count = le32_to_cpu(\n\t\t\t  (dev->adapter_info.options & AAC_OPT_SGMAP_HOST64)\n\t\t\t      ? ((struct sgmap64*)&srbcmd->sg)->sg[i].count\n\t\t\t      : srbcmd->sg.sg[i].count))"];
"1001393" [label="(Call,le32_to_cpu(\n\t\t\t  (dev->adapter_info.options & AAC_OPT_SGMAP_HOST64)\n\t\t\t      ? ((struct sgmap64*)&srbcmd->sg)->sg[i].count\n\t\t\t      : srbcmd->sg.sg[i].count))"];
"1001469" [label="(Call,kfree(sg_list[i]))"];
"1000761" [label="(Call,(dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1000363" [label="(Call,data_dir = DMA_TO_DEVICE)"];
"1000230" [label="(Call,(fibsize < (sizeof(struct user_aac_srb) - sizeof(struct user_sgentry))) ||\n\t    (fibsize > (dev->max_fib_size - sizeof(struct aac_fibhdr))))"];
"1000388" [label="(Identifier,sg_list)"];
"1001027" [label="(Call,kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000374" [label="(Identifier,DMA_FROM_DEVICE)"];
"1000391" [label="(Identifier,rcode)"];
"1001394" [label="(Call,(dev->adapter_info.options & AAC_OPT_SGMAP_HOST64)\n\t\t\t      ? ((struct sgmap64*)&srbcmd->sg)->sg[i].count\n\t\t\t      : srbcmd->sg.sg[i].count)"];
"1000994" [label="(ControlStructure,if (usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)))"];
"1000131" [label="(Identifier,user_srb)"];
"1001249" [label="(Call,sg_list[i])"];
"1000370" [label="(ControlStructure,break;)"];
"1001225" [label="(Call,!p)"];
"1001294" [label="(Identifier,data_dir)"];
"1000753" [label="(Call,usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1000569" [label="(Call,upsg->sg[i].addr[0])"];
"1000232" [label="(Identifier,fibsize)"];
"1001039" [label="(Call,!p)"];
"1001063" [label="(Call,(u64)usg->sg[i].addr[1])"];
"1000256" [label="(Identifier,GFP_KERNEL)"];
"1000141" [label="(Identifier,flags)"];
"1001011" [label="(Call,dev->scsi_host_ptr->max_sectors << 9)"];
"1000267" [label="(Call,copy_from_user(user_srbcmd, user_srb,fibsize))"];
"1001065" [label="(Call,usg->sg[i].addr[1])"];
"1000815" [label="(Call,(uintptr_t)usg->sg[i].addr)"];
"1000839" [label="(Identifier,p)"];
"1000811" [label="(Identifier,sg_user)"];
"1000377" [label="(Call,data_dir = DMA_NONE)"];
"1001252" [label="(Identifier,p)"];
"1000604" [label="(Identifier,sg_list)"];
"1001182" [label="(ControlStructure,if (upsg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)))"];
"1000373" [label="(Identifier,data_dir)"];
"1001280" [label="(Call,addr = pci_map_single(dev->pdev, p,\n\t\t\t\t\tupsg->sg[i].count, data_dir))"];
"1000608" [label="(Identifier,sg_indx)"];
"1000775" [label="(Literal,9)"];
"1000396" [label="(Identifier,actual_fibsize)"];
"1000258" [label="(Call,!user_srbcmd)"];
"1000375" [label="(ControlStructure,break;)"];
"1000252" [label="(Call,user_srbcmd = kmalloc(fibsize, GFP_KERNEL))"];
"1000843" [label="(Call,upsg->sg[i].count)"];
"1001199" [label="(Call,dev->scsi_host_ptr->max_sectors << 9)"];
"1001115" [label="(Identifier,addr)"];
"1001468" [label="(Block,)"];
"1000130" [label="(Call,*user_srb = arg)"];
"1001223" [label="(Identifier,GFP_KERNEL)"];
"1000545" [label="(Call,kmalloc(upsg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000728" [label="(Call,actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap))"];
"1001470" [label="(Call,sg_list[i])"];
"1000840" [label="(Call,sg_user[i])"];
"1000380" [label="(ControlStructure,if (user_srbcmd->sg.count > ARRAY_SIZE(sg_list)))"];
"1001076" [label="(Call,sg_user[i])"];
"1001037" [label="(Identifier,__GFP_DMA)"];
"1000209" [label="(Identifier,sg_list)"];
"1000451" [label="(Identifier,user_srbcmd)"];
"1000384" [label="(Identifier,user_srbcmd)"];
"1000769" [label="(Call,dev->scsi_host_ptr->max_sectors << 9)"];
"1000566" [label="(Identifier,addr)"];
"1000395" [label="(Call,actual_fibsize = sizeof(struct aac_srb) - sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry)))"];
"1001262" [label="(Call,copy_from_user(p, sg_user[i],\n\t\t\t\t\t\t\tupsg->sg[i].count))"];
"1000241" [label="(Call,dev->max_fib_size)"];
"1001184" [label="(Call,upsg->sg[i].count)"];
"1001110" [label="(Identifier,rcode)"];
"1000266" [label="(ControlStructure,if(copy_from_user(user_srbcmd, user_srb,fibsize)))"];
"1000558" [label="(Identifier,p)"];
"1001086" [label="(Identifier,p)"];
"1001428" [label="(Call,sg_list[i])"];
"1000800" [label="(Identifier,p)"];
"1001264" [label="(Call,sg_user[i])"];
"1001281" [label="(Identifier,addr)"];
"1000830" [label="(Identifier,sg_indx)"];
"1000686" [label="(Call,psg->sg[i].count = cpu_to_le32(upsg->sg[i].count))"];
"1000445" [label="(Call,(data_dir == DMA_NONE) && user_srbcmd->sg.count)"];
"1000708" [label="(Call,actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap))"];
"1000635" [label="(Identifier,addr)"];
"1000553" [label="(Call,GFP_KERNEL|__GFP_DMA)"];
"1000137" [label="(Identifier,fibsize)"];
"1000901" [label="(Call,byte_count += usg->sg[i].count)"];
"1000231" [label="(Call,fibsize < (sizeof(struct user_aac_srb) - sizeof(struct user_sgentry)))"];
"1000239" [label="(Identifier,fibsize)"];
"1000797" [label="(Identifier,__GFP_DMA)"];
"1000448" [label="(Identifier,DMA_NONE)"];
"1000270" [label="(Identifier,fibsize)"];
"1001117" [label="(Call,dev->pdev)"];
"1001047" [label="(Call,addr = (u64)usg->sg[i].addr[0])"];
"1001098" [label="(Call,sg_user[i])"];
"1001239" [label="(Call,(uintptr_t)upsg->sg[i].addr)"];
"1000824" [label="(Call,sg_list[i] = p)"];
"1000554" [label="(Identifier,GFP_KERNEL)"];
"1000918" [label="(Call,cpu_to_le32(usg->sg[i].count))"];
"1001235" [label="(Identifier,sg_user)"];
"1001088" [label="(Identifier,sg_indx)"];
"1000996" [label="(Call,usg->sg[i].count)"];
"1001021" [label="(Identifier,rcode)"];
"1000872" [label="(Identifier,data_dir)"];
"1000617" [label="(Identifier,p)"];
"1000852" [label="(Identifier,usg)"];
"1000858" [label="(Call,addr = pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1001392" [label="(Identifier,byte_count)"];
"1001467" [label="(Identifier,i)"];
"1000809" [label="(Call,sg_user[i] = (void __user *)(uintptr_t)usg->sg[i].addr)"];
"1001248" [label="(Call,sg_list[i] = p)"];
"1001224" [label="(ControlStructure,if (!p))"];
"1000411" [label="(Call,sizeof(struct sgentry))"];
"1001095" [label="(ControlStructure,if(copy_from_user(p,sg_user[i],usg->sg[i].count)))"];
"1000556" [label="(ControlStructure,if(!p))"];
"1000255" [label="(Identifier,fibsize)"];
"1001423" [label="(ControlStructure,if(copy_to_user(sg_user[i], sg_list[i], byte_count)))"];
"1000770" [label="(Call,dev->scsi_host_ptr->max_sectors)"];
"1001038" [label="(ControlStructure,if(!p))"];
"1001229" [label="(Identifier,rcode)"];
"1000372" [label="(Call,data_dir = DMA_FROM_DEVICE)"];
"1000860" [label="(Call,pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1000754" [label="(Call,usg->sg[i].count)"];
"1001048" [label="(Identifier,addr)"];
"1001036" [label="(Identifier,GFP_KERNEL)"];
"1000580" [label="(Call,((u64)upsg->sg[i].addr[1]) << 32)"];
"1001062" [label="(Call,((u64)usg->sg[i].addr[1]) << 32)"];
"1000434" [label="(Identifier,fibsize)"];
"1001083" [label="(Call,sg_list[i])"];
"1000640" [label="(Identifier,p)"];
"1000418" [label="(Call,user_srbcmd->sg.count & 0xff)"];
"1000606" [label="(Identifier,p)"];
"1001040" [label="(Identifier,p)"];
"1000436" [label="(Identifier,actual_fibsize64)"];
"1000397" [label="(Call,sizeof(struct aac_srb) - sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry)))"];
"1001079" [label="(Call,(void __user *)addr)"];
"1000435" [label="(Call,actual_fibsize64 != fibsize)"];
"1000414" [label="(Identifier,actual_fibsize64)"];
"1000592" [label="(Literal,32)"];
"1000618" [label="(Call,sg_user[i])"];
"1001391" [label="(Call,byte_count = le32_to_cpu(\n\t\t\t  (dev->adapter_info.options & AAC_OPT_SGMAP_HOST64)\n\t\t\t      ? ((struct sgmap64*)&srbcmd->sg)->sg[i].count\n\t\t\t      : srbcmd->sg.sg[i].count))"];
"1000367" [label="(Call,data_dir = DMA_BIDIRECTIONAL)"];
"1000595" [label="(Identifier,sg_user)"];
"1000567" [label="(Call,(u64)upsg->sg[i].addr[0])"];
"1001226" [label="(Identifier,p)"];
"1001234" [label="(Call,sg_user[i])"];
"1000240" [label="(Call,dev->max_fib_size - sizeof(struct aac_fibhdr))"];
"1000269" [label="(Identifier,user_srb)"];
"1000278" [label="(Identifier,user_reply)"];
"1000695" [label="(Call,upsg->sg[i].count)"];
"1000707" [label="(Call,kmalloc(actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap), GFP_KERNEL))"];
"1001012" [label="(Call,dev->scsi_host_ptr->max_sectors)"];
"1000752" [label="(ControlStructure,if (usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)))"];
"1000369" [label="(Identifier,DMA_BIDIRECTIONAL)"];
"1001114" [label="(Call,addr = pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1000530" [label="(Call,dev->scsi_host_ptr->max_sectors)"];
"1001200" [label="(Call,dev->scsi_host_ptr->max_sectors)"];
"1000433" [label="(Identifier,actual_fibsize)"];
"1000825" [label="(Call,sg_list[i])"];
"1000810" [label="(Call,sg_user[i])"];
"1000382" [label="(Call,user_srbcmd->sg.count)"];
"1000630" [label="(Identifier,rcode)"];
"1000368" [label="(Identifier,data_dir)"];
"1001035" [label="(Call,GFP_KERNEL|__GFP_DMA)"];
"1001215" [label="(Call,kmalloc(upsg->sg[i].count, GFP_KERNEL))"];
"1000779" [label="(Identifier,usg)"];
"1000919" [label="(Call,usg->sg[i].count)"];
"1000410" [label="(Literal,0xff)"];
"1000641" [label="(Call,upsg->sg[i].count)"];
"1000813" [label="(Call,(void __user *)(uintptr_t)usg->sg[i].addr)"];
"1000208" [label="(Call,memset(sg_list, 0, sizeof(sg_list)))"];
"1001426" [label="(Identifier,sg_user)"];
"1000535" [label="(Literal,9)"];
"1000859" [label="(Identifier,addr)"];
"1000615" [label="(ControlStructure,if(copy_from_user(p,sg_user[i],upsg->sg[i].count)))"];
"1000513" [label="(Call,upsg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1001049" [label="(Call,(u64)usg->sg[i].addr[0])"];
"1001097" [label="(Identifier,p)"];
"1001214" [label="(Identifier,p)"];
"1001003" [label="(Call,(dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1000864" [label="(Identifier,p)"];
"1000379" [label="(Identifier,DMA_NONE)"];
"1001305" [label="(Call,byte_count += upsg->sg[i].count)"];
"1000602" [label="(Call,sg_list[i] = p)"];
"1001457" [label="(Call,kfree(user_srbcmd))"];
"1000361" [label="(Block,)"];
"1000244" [label="(Call,sizeof(struct aac_fibhdr))"];
"1000557" [label="(Call,!p)"];
"1000233" [label="(Call,sizeof(struct user_aac_srb) - sizeof(struct user_sgentry))"];
"1001209" [label="(Identifier,rcode)"];
"1001389" [label="(Identifier,i)"];
"1001322" [label="(Call,cpu_to_le32(upsg->sg[i].count))"];
"1000601" [label="(Identifier,addr)"];
"1001254" [label="(Identifier,sg_indx)"];
"1000447" [label="(Identifier,data_dir)"];
"1000378" [label="(Identifier,data_dir)"];
"1000597" [label="(Call,(void __user *)(uintptr_t)addr)"];
"1001158" [label="(Call,cpu_to_le32(usg->sg[i].count))"];
"1001282" [label="(Call,pci_map_single(dev->pdev, p,\n\t\t\t\t\tupsg->sg[i].count, data_dir))"];
"1000579" [label="(Identifier,addr)"];
"1001150" [label="(Call,psg->sg[i].count = cpu_to_le32(usg->sg[i].count))"];
"1001060" [label="(Call,addr += ((u64)usg->sg[i].addr[1]) << 32)"];
"1001314" [label="(Call,psg->sg[i].count = cpu_to_le32(upsg->sg[i].count))"];
"1000828" [label="(Identifier,p)"];
"1001390" [label="(Block,)"];
"1001025" [label="(Call,p = kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000446" [label="(Call,data_dir == DMA_NONE)"];
"1000431" [label="(Call,(actual_fibsize != fibsize) && (actual_fibsize64 != fibsize))"];
"1000277" [label="(Call,user_reply = arg+fibsize)"];
"1000710" [label="(Call,sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap))"];
"1000555" [label="(Identifier,__GFP_DMA)"];
"1001051" [label="(Call,usg->sg[i].addr[0])"];
"1000405" [label="(Call,user_srbcmd->sg.count)"];
"1000709" [label="(Identifier,actual_fibsize)"];
"1001183" [label="(Call,upsg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1000398" [label="(Call,sizeof(struct aac_srb))"];
"1000581" [label="(Call,(u64)upsg->sg[i].addr[1])"];
"1000749" [label="(Block,)"];
"1001323" [label="(Call,upsg->sg[i].count)"];
"1000616" [label="(Call,copy_from_user(p,sg_user[i],upsg->sg[i].count))"];
"1001028" [label="(Call,usg->sg[i].count)"];
"1001101" [label="(Call,usg->sg[i].count)"];
"1000788" [label="(Call,usg->sg[i].count)"];
"1000787" [label="(Call,kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1000268" [label="(Identifier,user_srbcmd)"];
"1000578" [label="(Call,addr += ((u64)upsg->sg[i].addr[1]) << 32)"];
"1000238" [label="(Call,fibsize > (dev->max_fib_size - sizeof(struct aac_fibhdr)))"];
"1000838" [label="(Call,copy_from_user(p,sg_user[i],upsg->sg[i].count))"];
"1000404" [label="(Call,user_srbcmd->sg.count & 0xff)"];
"1000262" [label="(Identifier,rcode)"];
"1001159" [label="(Call,usg->sg[i].count)"];
"1000387" [label="(Call,ARRAY_SIZE(sg_list))"];
"1001286" [label="(Identifier,p)"];
"1000415" [label="(Call,actual_fibsize + (user_srbcmd->sg.count & 0xff) *\n\t  (sizeof(struct sgentry64) - sizeof(struct sgentry)))"];
"1001096" [label="(Call,copy_from_user(p,sg_user[i],usg->sg[i].count))"];
"1001017" [label="(Literal,9)"];
"1001081" [label="(Identifier,addr)"];
"1001261" [label="(ControlStructure,if(copy_from_user(p, sg_user[i],\n\t\t\t\t\t\t\tupsg->sg[i].count)))"];
"1000795" [label="(Call,GFP_KERNEL|__GFP_DMA)"];
"1000381" [label="(Call,user_srbcmd->sg.count > ARRAY_SIZE(sg_list))"];
"1000132" [label="(Identifier,arg)"];
"1001213" [label="(Call,p = kmalloc(upsg->sg[i].count, GFP_KERNEL))"];
"1001084" [label="(Identifier,sg_list)"];
"1000257" [label="(ControlStructure,if (!user_srbcmd))"];
"1001267" [label="(Call,upsg->sg[i].count)"];
"1000259" [label="(Identifier,user_srbcmd)"];
"1001074" [label="(Literal,32)"];
"1000117" [label="(MethodParameterIn,void __user * arg)"];
"1000136" [label="(Call,fibsize = 0)"];
"1000210" [label="(Literal,0)"];
"1000621" [label="(Call,upsg->sg[i].count)"];
"1001082" [label="(Call,sg_list[i] = p)"];
"1000273" [label="(Identifier,rcode)"];
"1000279" [label="(Call,arg+fibsize)"];
"1000491" [label="(Call,actual_fibsize64 == fibsize)"];
"1001075" [label="(Call,sg_user[i] = (void __user *)addr)"];
"1000118" [label="(Block,)"];
"1000803" [label="(Identifier,usg)"];
"1001424" [label="(Call,copy_to_user(sg_user[i], sg_list[i], byte_count))"];
"1000138" [label="(Literal,0)"];
"1000817" [label="(Call,usg->sg[i].addr)"];
"1001205" [label="(Literal,9)"];
"1000594" [label="(Call,sg_user[i])"];
"1000593" [label="(Call,sg_user[i] = (void __user *)(uintptr_t)addr)"];
"1001237" [label="(Call,(void __user *)(uintptr_t)upsg->sg[i].addr)"];
"1001061" [label="(Identifier,addr)"];
"1001469" [label="(Call,kfree(sg_list[i]))"];
"1000636" [label="(Call,pci_map_single(dev->pdev, p, upsg->sg[i].count, data_dir))"];
"1000514" [label="(Call,upsg->sg[i].count)"];
"1001276" [label="(Identifier,rcode)"];
"1001250" [label="(Identifier,sg_list)"];
"1000796" [label="(Identifier,GFP_KERNEL)"];
"1000413" [label="(Call,actual_fibsize64 = actual_fibsize + (user_srbcmd->sg.count & 0xff) *\n\t  (sizeof(struct sgentry64) - sizeof(struct sgentry)))"];
"1000521" [label="(Call,(dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1001431" [label="(Identifier,byte_count)"];
"1000694" [label="(Call,cpu_to_le32(upsg->sg[i].count))"];
"1001120" [label="(Identifier,p)"];
"1000403" [label="(Call,(user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry))"];
"1001128" [label="(Identifier,data_dir)"];
"1001241" [label="(Call,upsg->sg[i].addr)"];
"1001346" [label="(Call,aac_fib_send(ScsiPortCommand, srbfib, actual_fibsize, FsaNormal, 1, 1, NULL, NULL))"];
"1000837" [label="(ControlStructure,if(copy_from_user(p,sg_user[i],upsg->sg[i].count)))"];
"1001393" [label="(Call,le32_to_cpu(\n\t\t\t  (dev->adapter_info.options & AAC_OPT_SGMAP_HOST64)\n\t\t\t      ? ((struct sgmap64*)&srbcmd->sg)->sg[i].count\n\t\t\t      : srbcmd->sg.sg[i].count))"];
"1000216" [label="(Identifier,fibsize)"];
"1000561" [label="(Identifier,rcode)"];
"1000529" [label="(Call,dev->scsi_host_ptr->max_sectors << 9)"];
"1000583" [label="(Call,upsg->sg[i].addr[1])"];
"1001077" [label="(Identifier,sg_user)"];
"1000637" [label="(Call,dev->pdev)"];
"1000364" [label="(Identifier,data_dir)"];
"1001263" [label="(Identifier,p)"];
"1000910" [label="(Call,psg->sg[i].count = cpu_to_le32(usg->sg[i].count))"];
"1000865" [label="(Call,usg->sg[i].count)"];
"1001425" [label="(Call,sg_user[i])"];
"1000603" [label="(Call,sg_list[i])"];
"1000786" [label="(Identifier,p)"];
"1000512" [label="(ControlStructure,if (upsg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)))"];
"1001485" [label="(MethodReturn,static int)"];
"1000253" [label="(Identifier,user_srbcmd)"];
"1000543" [label="(Call,p = kmalloc(upsg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1001287" [label="(Call,upsg->sg[i].count)"];
"1000366" [label="(ControlStructure,break;)"];
"1000799" [label="(Call,!p)"];
"1000546" [label="(Call,upsg->sg[i].count)"];
"1001141" [label="(Call,byte_count += usg->sg[i].count)"];
"1000539" [label="(Identifier,rcode)"];
"1001121" [label="(Call,usg->sg[i].count)"];
"1000599" [label="(Call,(uintptr_t)addr)"];
"1001216" [label="(Call,upsg->sg[i].count)"];
"1000509" [label="(Block,)"];
"1000785" [label="(Call,p = kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA))"];
"1001233" [label="(Call,sg_user[i] = (void __user *)(uintptr_t)upsg->sg[i].addr)"];
"1000826" [label="(Identifier,sg_list)"];
"1000254" [label="(Call,kmalloc(fibsize, GFP_KERNEL))"];
"1000365" [label="(Identifier,DMA_TO_DEVICE)"];
"1001191" [label="(Call,(dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1000400" [label="(Call,sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry)))"];
"1000211" [label="(Call,sizeof(sg_list))"];
"1000705" [label="(Call,usg = kmalloc(actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap), GFP_KERNEL))"];
"1001434" [label="(Identifier,rcode)"];
"1000544" [label="(Identifier,p)"];
"1000634" [label="(Call,addr = pci_map_single(dev->pdev, p, upsg->sg[i].count, data_dir))"];
"1001283" [label="(Call,dev->pdev)"];
"1000677" [label="(Call,byte_count += upsg->sg[i].count)"];
"1001179" [label="(Block,)"];
"1001043" [label="(Identifier,rcode)"];
"1000565" [label="(Call,addr = (u64)upsg->sg[i].addr[0])"];
"1000970" [label="(Call,actual_fibsize64 == fibsize)"];
"1000991" [label="(Block,)"];
"1000861" [label="(Call,dev->pdev)"];
"1000798" [label="(ControlStructure,if(!p))"];
"1000995" [label="(Call,usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536))"];
"1000715" [label="(Identifier,GFP_KERNEL)"];
"1000432" [label="(Call,actual_fibsize != fibsize)"];
"1000648" [label="(Identifier,data_dir)"];
"1001026" [label="(Identifier,p)"];
"1001116" [label="(Call,pci_map_single(dev->pdev, p, usg->sg[i].count, data_dir))"];
"1001424" -> "1001423"  [label="AST: "];
"1001424" -> "1001431"  [label="CFG: "];
"1001425" -> "1001424"  [label="AST: "];
"1001428" -> "1001424"  [label="AST: "];
"1001431" -> "1001424"  [label="AST: "];
"1001434" -> "1001424"  [label="CFG: "];
"1001389" -> "1001424"  [label="CFG: "];
"1001424" -> "1001485"  [label="DDG: sg_user[i]"];
"1001424" -> "1001485"  [label="DDG: sg_list[i]"];
"1001424" -> "1001485"  [label="DDG: copy_to_user(sg_user[i], sg_list[i], byte_count)"];
"1001424" -> "1001485"  [label="DDG: byte_count"];
"1000809" -> "1001424"  [label="DDG: sg_user[i]"];
"1000616" -> "1001424"  [label="DDG: sg_user[i]"];
"1001096" -> "1001424"  [label="DDG: sg_user[i]"];
"1001262" -> "1001424"  [label="DDG: sg_user[i]"];
"1000593" -> "1001424"  [label="DDG: sg_user[i]"];
"1001075" -> "1001424"  [label="DDG: sg_user[i]"];
"1001233" -> "1001424"  [label="DDG: sg_user[i]"];
"1000838" -> "1001424"  [label="DDG: sg_user[i]"];
"1000387" -> "1001424"  [label="DDG: sg_list"];
"1001248" -> "1001424"  [label="DDG: sg_list[i]"];
"1001082" -> "1001424"  [label="DDG: sg_list[i]"];
"1000602" -> "1001424"  [label="DDG: sg_list[i]"];
"1000824" -> "1001424"  [label="DDG: sg_list[i]"];
"1001391" -> "1001424"  [label="DDG: byte_count"];
"1001424" -> "1001469"  [label="DDG: sg_list[i]"];
"1000809" -> "1000749"  [label="AST: "];
"1000809" -> "1000813"  [label="CFG: "];
"1000810" -> "1000809"  [label="AST: "];
"1000813" -> "1000809"  [label="AST: "];
"1000826" -> "1000809"  [label="CFG: "];
"1000809" -> "1001485"  [label="DDG: sg_user[i]"];
"1000809" -> "1001485"  [label="DDG: (void __user *)(uintptr_t)usg->sg[i].addr"];
"1000813" -> "1000809"  [label="DDG: (uintptr_t)usg->sg[i].addr"];
"1000809" -> "1000838"  [label="DDG: sg_user[i]"];
"1000813" -> "1000815"  [label="CFG: "];
"1000814" -> "1000813"  [label="AST: "];
"1000815" -> "1000813"  [label="AST: "];
"1000813" -> "1001485"  [label="DDG: (uintptr_t)usg->sg[i].addr"];
"1000815" -> "1000813"  [label="DDG: usg->sg[i].addr"];
"1000815" -> "1000817"  [label="CFG: "];
"1000816" -> "1000815"  [label="AST: "];
"1000817" -> "1000815"  [label="AST: "];
"1000815" -> "1001485"  [label="DDG: usg->sg[i].addr"];
"1000616" -> "1000615"  [label="AST: "];
"1000616" -> "1000621"  [label="CFG: "];
"1000617" -> "1000616"  [label="AST: "];
"1000618" -> "1000616"  [label="AST: "];
"1000621" -> "1000616"  [label="AST: "];
"1000630" -> "1000616"  [label="CFG: "];
"1000635" -> "1000616"  [label="CFG: "];
"1000616" -> "1001485"  [label="DDG: sg_user[i]"];
"1000616" -> "1001485"  [label="DDG: p"];
"1000616" -> "1001485"  [label="DDG: upsg->sg[i].count"];
"1000616" -> "1001485"  [label="DDG: copy_from_user(p,sg_user[i],upsg->sg[i].count)"];
"1000557" -> "1000616"  [label="DDG: p"];
"1000593" -> "1000616"  [label="DDG: sg_user[i]"];
"1000545" -> "1000616"  [label="DDG: upsg->sg[i].count"];
"1000616" -> "1000636"  [label="DDG: p"];
"1000616" -> "1000636"  [label="DDG: upsg->sg[i].count"];
"1000557" -> "1000556"  [label="AST: "];
"1000557" -> "1000558"  [label="CFG: "];
"1000558" -> "1000557"  [label="AST: "];
"1000561" -> "1000557"  [label="CFG: "];
"1000566" -> "1000557"  [label="CFG: "];
"1000557" -> "1001485"  [label="DDG: !p"];
"1000557" -> "1001485"  [label="DDG: p"];
"1000543" -> "1000557"  [label="DDG: p"];
"1000557" -> "1000602"  [label="DDG: p"];
"1000557" -> "1000636"  [label="DDG: p"];
"1000543" -> "1000509"  [label="AST: "];
"1000543" -> "1000545"  [label="CFG: "];
"1000544" -> "1000543"  [label="AST: "];
"1000545" -> "1000543"  [label="AST: "];
"1000558" -> "1000543"  [label="CFG: "];
"1000543" -> "1001485"  [label="DDG: kmalloc(upsg->sg[i].count,GFP_KERNEL|__GFP_DMA)"];
"1000545" -> "1000543"  [label="DDG: upsg->sg[i].count"];
"1000545" -> "1000543"  [label="DDG: GFP_KERNEL|__GFP_DMA"];
"1000545" -> "1000553"  [label="CFG: "];
"1000546" -> "1000545"  [label="AST: "];
"1000553" -> "1000545"  [label="AST: "];
"1000545" -> "1001485"  [label="DDG: GFP_KERNEL|__GFP_DMA"];
"1000545" -> "1001485"  [label="DDG: upsg->sg[i].count"];
"1000513" -> "1000545"  [label="DDG: upsg->sg[i].count"];
"1000553" -> "1000545"  [label="DDG: GFP_KERNEL"];
"1000553" -> "1000545"  [label="DDG: __GFP_DMA"];
"1000545" -> "1000636"  [label="DDG: upsg->sg[i].count"];
"1000513" -> "1000512"  [label="AST: "];
"1000513" -> "1000521"  [label="CFG: "];
"1000514" -> "1000513"  [label="AST: "];
"1000521" -> "1000513"  [label="AST: "];
"1000539" -> "1000513"  [label="CFG: "];
"1000544" -> "1000513"  [label="CFG: "];
"1000513" -> "1001485"  [label="DDG: upsg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1000513" -> "1001485"  [label="DDG: upsg->sg[i].count"];
"1000513" -> "1001485"  [label="DDG: (dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536"];
"1000694" -> "1000513"  [label="DDG: upsg->sg[i].count"];
"1000529" -> "1000513"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1000529" -> "1000513"  [label="DDG: 9"];
"1000694" -> "1000686"  [label="AST: "];
"1000694" -> "1000695"  [label="CFG: "];
"1000695" -> "1000694"  [label="AST: "];
"1000686" -> "1000694"  [label="CFG: "];
"1000694" -> "1001485"  [label="DDG: upsg->sg[i].count"];
"1000694" -> "1000686"  [label="DDG: upsg->sg[i].count"];
"1000636" -> "1000694"  [label="DDG: upsg->sg[i].count"];
"1000636" -> "1000634"  [label="AST: "];
"1000636" -> "1000648"  [label="CFG: "];
"1000637" -> "1000636"  [label="AST: "];
"1000640" -> "1000636"  [label="AST: "];
"1000641" -> "1000636"  [label="AST: "];
"1000648" -> "1000636"  [label="AST: "];
"1000634" -> "1000636"  [label="CFG: "];
"1000636" -> "1001485"  [label="DDG: p"];
"1000636" -> "1001485"  [label="DDG: dev->pdev"];
"1000636" -> "1001485"  [label="DDG: data_dir"];
"1000636" -> "1000634"  [label="DDG: dev->pdev"];
"1000636" -> "1000634"  [label="DDG: p"];
"1000636" -> "1000634"  [label="DDG: upsg->sg[i].count"];
"1000636" -> "1000634"  [label="DDG: data_dir"];
"1000446" -> "1000636"  [label="DDG: data_dir"];
"1000636" -> "1000677"  [label="DDG: upsg->sg[i].count"];
"1000446" -> "1000445"  [label="AST: "];
"1000446" -> "1000448"  [label="CFG: "];
"1000447" -> "1000446"  [label="AST: "];
"1000448" -> "1000446"  [label="AST: "];
"1000451" -> "1000446"  [label="CFG: "];
"1000445" -> "1000446"  [label="CFG: "];
"1000446" -> "1001485"  [label="DDG: data_dir"];
"1000446" -> "1001485"  [label="DDG: DMA_NONE"];
"1000446" -> "1000445"  [label="DDG: data_dir"];
"1000446" -> "1000445"  [label="DDG: DMA_NONE"];
"1000363" -> "1000446"  [label="DDG: data_dir"];
"1000367" -> "1000446"  [label="DDG: data_dir"];
"1000372" -> "1000446"  [label="DDG: data_dir"];
"1000377" -> "1000446"  [label="DDG: data_dir"];
"1000446" -> "1000860"  [label="DDG: data_dir"];
"1000446" -> "1001116"  [label="DDG: data_dir"];
"1000446" -> "1001282"  [label="DDG: data_dir"];
"1000363" -> "1000361"  [label="AST: "];
"1000363" -> "1000365"  [label="CFG: "];
"1000364" -> "1000363"  [label="AST: "];
"1000365" -> "1000363"  [label="AST: "];
"1000366" -> "1000363"  [label="CFG: "];
"1000363" -> "1001485"  [label="DDG: DMA_TO_DEVICE"];
"1000363" -> "1001485"  [label="DDG: data_dir"];
"1000367" -> "1000361"  [label="AST: "];
"1000367" -> "1000369"  [label="CFG: "];
"1000368" -> "1000367"  [label="AST: "];
"1000369" -> "1000367"  [label="AST: "];
"1000370" -> "1000367"  [label="CFG: "];
"1000367" -> "1001485"  [label="DDG: DMA_BIDIRECTIONAL"];
"1000367" -> "1001485"  [label="DDG: data_dir"];
"1000372" -> "1000361"  [label="AST: "];
"1000372" -> "1000374"  [label="CFG: "];
"1000373" -> "1000372"  [label="AST: "];
"1000374" -> "1000372"  [label="AST: "];
"1000375" -> "1000372"  [label="CFG: "];
"1000372" -> "1001485"  [label="DDG: data_dir"];
"1000372" -> "1001485"  [label="DDG: DMA_FROM_DEVICE"];
"1000377" -> "1000361"  [label="AST: "];
"1000377" -> "1000379"  [label="CFG: "];
"1000378" -> "1000377"  [label="AST: "];
"1000379" -> "1000377"  [label="AST: "];
"1000384" -> "1000377"  [label="CFG: "];
"1000377" -> "1001485"  [label="DDG: DMA_NONE"];
"1000377" -> "1001485"  [label="DDG: data_dir"];
"1000529" -> "1000521"  [label="AST: "];
"1000529" -> "1000535"  [label="CFG: "];
"1000530" -> "1000529"  [label="AST: "];
"1000535" -> "1000529"  [label="AST: "];
"1000521" -> "1000529"  [label="CFG: "];
"1000529" -> "1001485"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1000529" -> "1000521"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1000529" -> "1000521"  [label="DDG: 9"];
"1000553" -> "1000555"  [label="CFG: "];
"1000554" -> "1000553"  [label="AST: "];
"1000555" -> "1000553"  [label="AST: "];
"1000553" -> "1001485"  [label="DDG: GFP_KERNEL"];
"1000553" -> "1001485"  [label="DDG: __GFP_DMA"];
"1000254" -> "1000553"  [label="DDG: GFP_KERNEL"];
"1000254" -> "1000252"  [label="AST: "];
"1000254" -> "1000256"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000256" -> "1000254"  [label="AST: "];
"1000252" -> "1000254"  [label="CFG: "];
"1000254" -> "1001485"  [label="DDG: fibsize"];
"1000254" -> "1001485"  [label="DDG: GFP_KERNEL"];
"1000254" -> "1000252"  [label="DDG: fibsize"];
"1000254" -> "1000252"  [label="DDG: GFP_KERNEL"];
"1000238" -> "1000254"  [label="DDG: fibsize"];
"1000231" -> "1000254"  [label="DDG: fibsize"];
"1000254" -> "1000267"  [label="DDG: fibsize"];
"1000254" -> "1000707"  [label="DDG: GFP_KERNEL"];
"1000254" -> "1001035"  [label="DDG: GFP_KERNEL"];
"1000254" -> "1001215"  [label="DDG: GFP_KERNEL"];
"1000238" -> "1000230"  [label="AST: "];
"1000238" -> "1000240"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="AST: "];
"1000230" -> "1000238"  [label="CFG: "];
"1000238" -> "1001485"  [label="DDG: fibsize"];
"1000238" -> "1001485"  [label="DDG: dev->max_fib_size - sizeof(struct aac_fibhdr)"];
"1000238" -> "1000230"  [label="DDG: fibsize"];
"1000238" -> "1000230"  [label="DDG: dev->max_fib_size - sizeof(struct aac_fibhdr)"];
"1000231" -> "1000238"  [label="DDG: fibsize"];
"1000240" -> "1000238"  [label="DDG: dev->max_fib_size"];
"1000231" -> "1000230"  [label="AST: "];
"1000231" -> "1000233"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000233" -> "1000231"  [label="AST: "];
"1000239" -> "1000231"  [label="CFG: "];
"1000230" -> "1000231"  [label="CFG: "];
"1000231" -> "1001485"  [label="DDG: sizeof(struct user_aac_srb) - sizeof(struct user_sgentry)"];
"1000231" -> "1001485"  [label="DDG: fibsize"];
"1000231" -> "1000230"  [label="DDG: fibsize"];
"1000231" -> "1000230"  [label="DDG: sizeof(struct user_aac_srb) - sizeof(struct user_sgentry)"];
"1000136" -> "1000231"  [label="DDG: fibsize"];
"1000136" -> "1000118"  [label="AST: "];
"1000136" -> "1000138"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000141" -> "1000136"  [label="CFG: "];
"1000136" -> "1001485"  [label="DDG: fibsize"];
"1000240" -> "1000244"  [label="CFG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000244" -> "1000240"  [label="AST: "];
"1000240" -> "1001485"  [label="DDG: dev->max_fib_size"];
"1000593" -> "1000509"  [label="AST: "];
"1000593" -> "1000597"  [label="CFG: "];
"1000594" -> "1000593"  [label="AST: "];
"1000597" -> "1000593"  [label="AST: "];
"1000604" -> "1000593"  [label="CFG: "];
"1000593" -> "1001485"  [label="DDG: (void __user *)(uintptr_t)addr"];
"1000593" -> "1001485"  [label="DDG: sg_user[i]"];
"1000597" -> "1000593"  [label="DDG: (uintptr_t)addr"];
"1000597" -> "1000599"  [label="CFG: "];
"1000598" -> "1000597"  [label="AST: "];
"1000599" -> "1000597"  [label="AST: "];
"1000597" -> "1001485"  [label="DDG: (uintptr_t)addr"];
"1000599" -> "1000597"  [label="DDG: addr"];
"1000599" -> "1000601"  [label="CFG: "];
"1000600" -> "1000599"  [label="AST: "];
"1000601" -> "1000599"  [label="AST: "];
"1000599" -> "1001485"  [label="DDG: addr"];
"1000578" -> "1000599"  [label="DDG: addr"];
"1000578" -> "1000509"  [label="AST: "];
"1000578" -> "1000580"  [label="CFG: "];
"1000579" -> "1000578"  [label="AST: "];
"1000580" -> "1000578"  [label="AST: "];
"1000595" -> "1000578"  [label="CFG: "];
"1000578" -> "1001485"  [label="DDG: ((u64)upsg->sg[i].addr[1]) << 32"];
"1000580" -> "1000578"  [label="DDG: (u64)upsg->sg[i].addr[1]"];
"1000580" -> "1000578"  [label="DDG: 32"];
"1000565" -> "1000578"  [label="DDG: addr"];
"1000580" -> "1000592"  [label="CFG: "];
"1000581" -> "1000580"  [label="AST: "];
"1000592" -> "1000580"  [label="AST: "];
"1000580" -> "1001485"  [label="DDG: (u64)upsg->sg[i].addr[1]"];
"1000581" -> "1000580"  [label="DDG: upsg->sg[i].addr[1]"];
"1000581" -> "1000583"  [label="CFG: "];
"1000582" -> "1000581"  [label="AST: "];
"1000583" -> "1000581"  [label="AST: "];
"1000592" -> "1000581"  [label="CFG: "];
"1000581" -> "1001485"  [label="DDG: upsg->sg[i].addr[1]"];
"1000565" -> "1000509"  [label="AST: "];
"1000565" -> "1000567"  [label="CFG: "];
"1000566" -> "1000565"  [label="AST: "];
"1000567" -> "1000565"  [label="AST: "];
"1000579" -> "1000565"  [label="CFG: "];
"1000565" -> "1001485"  [label="DDG: (u64)upsg->sg[i].addr[0]"];
"1000567" -> "1000565"  [label="DDG: upsg->sg[i].addr[0]"];
"1000567" -> "1000569"  [label="CFG: "];
"1000568" -> "1000567"  [label="AST: "];
"1000569" -> "1000567"  [label="AST: "];
"1000567" -> "1001485"  [label="DDG: upsg->sg[i].addr[0]"];
"1001096" -> "1001095"  [label="AST: "];
"1001096" -> "1001101"  [label="CFG: "];
"1001097" -> "1001096"  [label="AST: "];
"1001098" -> "1001096"  [label="AST: "];
"1001101" -> "1001096"  [label="AST: "];
"1001110" -> "1001096"  [label="CFG: "];
"1001115" -> "1001096"  [label="CFG: "];
"1001096" -> "1001485"  [label="DDG: p"];
"1001096" -> "1001485"  [label="DDG: sg_user[i]"];
"1001096" -> "1001485"  [label="DDG: usg->sg[i].count"];
"1001096" -> "1001485"  [label="DDG: copy_from_user(p,sg_user[i],usg->sg[i].count)"];
"1001039" -> "1001096"  [label="DDG: p"];
"1001075" -> "1001096"  [label="DDG: sg_user[i]"];
"1001027" -> "1001096"  [label="DDG: usg->sg[i].count"];
"1001096" -> "1001116"  [label="DDG: p"];
"1001096" -> "1001116"  [label="DDG: usg->sg[i].count"];
"1001039" -> "1001038"  [label="AST: "];
"1001039" -> "1001040"  [label="CFG: "];
"1001040" -> "1001039"  [label="AST: "];
"1001043" -> "1001039"  [label="CFG: "];
"1001048" -> "1001039"  [label="CFG: "];
"1001039" -> "1001485"  [label="DDG: p"];
"1001039" -> "1001485"  [label="DDG: !p"];
"1001025" -> "1001039"  [label="DDG: p"];
"1001039" -> "1001082"  [label="DDG: p"];
"1001039" -> "1001116"  [label="DDG: p"];
"1001025" -> "1000991"  [label="AST: "];
"1001025" -> "1001027"  [label="CFG: "];
"1001026" -> "1001025"  [label="AST: "];
"1001027" -> "1001025"  [label="AST: "];
"1001040" -> "1001025"  [label="CFG: "];
"1001025" -> "1001485"  [label="DDG: kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA)"];
"1001027" -> "1001025"  [label="DDG: usg->sg[i].count"];
"1001027" -> "1001025"  [label="DDG: GFP_KERNEL|__GFP_DMA"];
"1001027" -> "1001035"  [label="CFG: "];
"1001028" -> "1001027"  [label="AST: "];
"1001035" -> "1001027"  [label="AST: "];
"1001027" -> "1001485"  [label="DDG: usg->sg[i].count"];
"1001027" -> "1001485"  [label="DDG: GFP_KERNEL|__GFP_DMA"];
"1000995" -> "1001027"  [label="DDG: usg->sg[i].count"];
"1001035" -> "1001027"  [label="DDG: GFP_KERNEL"];
"1001035" -> "1001027"  [label="DDG: __GFP_DMA"];
"1001027" -> "1001116"  [label="DDG: usg->sg[i].count"];
"1000995" -> "1000994"  [label="AST: "];
"1000995" -> "1001003"  [label="CFG: "];
"1000996" -> "1000995"  [label="AST: "];
"1001003" -> "1000995"  [label="AST: "];
"1001021" -> "1000995"  [label="CFG: "];
"1001026" -> "1000995"  [label="CFG: "];
"1000995" -> "1001485"  [label="DDG: usg->sg[i].count"];
"1000995" -> "1001485"  [label="DDG: (dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536"];
"1000995" -> "1001485"  [label="DDG: usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1001158" -> "1000995"  [label="DDG: usg->sg[i].count"];
"1001011" -> "1000995"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1001011" -> "1000995"  [label="DDG: 9"];
"1001158" -> "1001150"  [label="AST: "];
"1001158" -> "1001159"  [label="CFG: "];
"1001159" -> "1001158"  [label="AST: "];
"1001150" -> "1001158"  [label="CFG: "];
"1001158" -> "1001485"  [label="DDG: usg->sg[i].count"];
"1001158" -> "1001150"  [label="DDG: usg->sg[i].count"];
"1001116" -> "1001158"  [label="DDG: usg->sg[i].count"];
"1001116" -> "1001114"  [label="AST: "];
"1001116" -> "1001128"  [label="CFG: "];
"1001117" -> "1001116"  [label="AST: "];
"1001120" -> "1001116"  [label="AST: "];
"1001121" -> "1001116"  [label="AST: "];
"1001128" -> "1001116"  [label="AST: "];
"1001114" -> "1001116"  [label="CFG: "];
"1001116" -> "1001485"  [label="DDG: data_dir"];
"1001116" -> "1001485"  [label="DDG: p"];
"1001116" -> "1001485"  [label="DDG: dev->pdev"];
"1001116" -> "1001114"  [label="DDG: dev->pdev"];
"1001116" -> "1001114"  [label="DDG: p"];
"1001116" -> "1001114"  [label="DDG: usg->sg[i].count"];
"1001116" -> "1001114"  [label="DDG: data_dir"];
"1001116" -> "1001141"  [label="DDG: usg->sg[i].count"];
"1001011" -> "1001003"  [label="AST: "];
"1001011" -> "1001017"  [label="CFG: "];
"1001012" -> "1001011"  [label="AST: "];
"1001017" -> "1001011"  [label="AST: "];
"1001003" -> "1001011"  [label="CFG: "];
"1001011" -> "1001485"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1001011" -> "1001003"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1001011" -> "1001003"  [label="DDG: 9"];
"1001035" -> "1001037"  [label="CFG: "];
"1001036" -> "1001035"  [label="AST: "];
"1001037" -> "1001035"  [label="AST: "];
"1001035" -> "1001485"  [label="DDG: GFP_KERNEL"];
"1001035" -> "1001485"  [label="DDG: __GFP_DMA"];
"1001075" -> "1000991"  [label="AST: "];
"1001075" -> "1001079"  [label="CFG: "];
"1001076" -> "1001075"  [label="AST: "];
"1001079" -> "1001075"  [label="AST: "];
"1001084" -> "1001075"  [label="CFG: "];
"1001075" -> "1001485"  [label="DDG: sg_user[i]"];
"1001075" -> "1001485"  [label="DDG: (void __user *)addr"];
"1001079" -> "1001075"  [label="DDG: addr"];
"1001079" -> "1001081"  [label="CFG: "];
"1001080" -> "1001079"  [label="AST: "];
"1001081" -> "1001079"  [label="AST: "];
"1001079" -> "1001485"  [label="DDG: addr"];
"1001060" -> "1001079"  [label="DDG: addr"];
"1001060" -> "1000991"  [label="AST: "];
"1001060" -> "1001062"  [label="CFG: "];
"1001061" -> "1001060"  [label="AST: "];
"1001062" -> "1001060"  [label="AST: "];
"1001077" -> "1001060"  [label="CFG: "];
"1001060" -> "1001485"  [label="DDG: ((u64)usg->sg[i].addr[1]) << 32"];
"1001062" -> "1001060"  [label="DDG: (u64)usg->sg[i].addr[1]"];
"1001062" -> "1001060"  [label="DDG: 32"];
"1001047" -> "1001060"  [label="DDG: addr"];
"1001062" -> "1001074"  [label="CFG: "];
"1001063" -> "1001062"  [label="AST: "];
"1001074" -> "1001062"  [label="AST: "];
"1001062" -> "1001485"  [label="DDG: (u64)usg->sg[i].addr[1]"];
"1001063" -> "1001062"  [label="DDG: usg->sg[i].addr[1]"];
"1001063" -> "1001065"  [label="CFG: "];
"1001064" -> "1001063"  [label="AST: "];
"1001065" -> "1001063"  [label="AST: "];
"1001074" -> "1001063"  [label="CFG: "];
"1001063" -> "1001485"  [label="DDG: usg->sg[i].addr[1]"];
"1001047" -> "1000991"  [label="AST: "];
"1001047" -> "1001049"  [label="CFG: "];
"1001048" -> "1001047"  [label="AST: "];
"1001049" -> "1001047"  [label="AST: "];
"1001061" -> "1001047"  [label="CFG: "];
"1001047" -> "1001485"  [label="DDG: (u64)usg->sg[i].addr[0]"];
"1001049" -> "1001047"  [label="DDG: usg->sg[i].addr[0]"];
"1001049" -> "1001051"  [label="CFG: "];
"1001050" -> "1001049"  [label="AST: "];
"1001051" -> "1001049"  [label="AST: "];
"1001049" -> "1001485"  [label="DDG: usg->sg[i].addr[0]"];
"1001262" -> "1001261"  [label="AST: "];
"1001262" -> "1001267"  [label="CFG: "];
"1001263" -> "1001262"  [label="AST: "];
"1001264" -> "1001262"  [label="AST: "];
"1001267" -> "1001262"  [label="AST: "];
"1001276" -> "1001262"  [label="CFG: "];
"1001281" -> "1001262"  [label="CFG: "];
"1001262" -> "1001485"  [label="DDG: upsg->sg[i].count"];
"1001262" -> "1001485"  [label="DDG: copy_from_user(p, sg_user[i],\n\t\t\t\t\t\t\tupsg->sg[i].count)"];
"1001262" -> "1001485"  [label="DDG: p"];
"1001262" -> "1001485"  [label="DDG: sg_user[i]"];
"1001225" -> "1001262"  [label="DDG: p"];
"1001233" -> "1001262"  [label="DDG: sg_user[i]"];
"1001215" -> "1001262"  [label="DDG: upsg->sg[i].count"];
"1001262" -> "1001282"  [label="DDG: p"];
"1001262" -> "1001282"  [label="DDG: upsg->sg[i].count"];
"1001225" -> "1001224"  [label="AST: "];
"1001225" -> "1001226"  [label="CFG: "];
"1001226" -> "1001225"  [label="AST: "];
"1001229" -> "1001225"  [label="CFG: "];
"1001235" -> "1001225"  [label="CFG: "];
"1001225" -> "1001485"  [label="DDG: !p"];
"1001225" -> "1001485"  [label="DDG: p"];
"1001213" -> "1001225"  [label="DDG: p"];
"1001225" -> "1001248"  [label="DDG: p"];
"1001225" -> "1001282"  [label="DDG: p"];
"1001213" -> "1001179"  [label="AST: "];
"1001213" -> "1001215"  [label="CFG: "];
"1001214" -> "1001213"  [label="AST: "];
"1001215" -> "1001213"  [label="AST: "];
"1001226" -> "1001213"  [label="CFG: "];
"1001213" -> "1001485"  [label="DDG: kmalloc(upsg->sg[i].count, GFP_KERNEL)"];
"1001215" -> "1001213"  [label="DDG: upsg->sg[i].count"];
"1001215" -> "1001213"  [label="DDG: GFP_KERNEL"];
"1001215" -> "1001223"  [label="CFG: "];
"1001216" -> "1001215"  [label="AST: "];
"1001223" -> "1001215"  [label="AST: "];
"1001215" -> "1001485"  [label="DDG: GFP_KERNEL"];
"1001215" -> "1001485"  [label="DDG: upsg->sg[i].count"];
"1001183" -> "1001215"  [label="DDG: upsg->sg[i].count"];
"1001215" -> "1001282"  [label="DDG: upsg->sg[i].count"];
"1001183" -> "1001182"  [label="AST: "];
"1001183" -> "1001191"  [label="CFG: "];
"1001184" -> "1001183"  [label="AST: "];
"1001191" -> "1001183"  [label="AST: "];
"1001209" -> "1001183"  [label="CFG: "];
"1001214" -> "1001183"  [label="CFG: "];
"1001183" -> "1001485"  [label="DDG: (dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536"];
"1001183" -> "1001485"  [label="DDG: upsg->sg[i].count"];
"1001183" -> "1001485"  [label="DDG: upsg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1001322" -> "1001183"  [label="DDG: upsg->sg[i].count"];
"1001199" -> "1001183"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1001199" -> "1001183"  [label="DDG: 9"];
"1001322" -> "1001314"  [label="AST: "];
"1001322" -> "1001323"  [label="CFG: "];
"1001323" -> "1001322"  [label="AST: "];
"1001314" -> "1001322"  [label="CFG: "];
"1001322" -> "1001485"  [label="DDG: upsg->sg[i].count"];
"1001322" -> "1001314"  [label="DDG: upsg->sg[i].count"];
"1001282" -> "1001322"  [label="DDG: upsg->sg[i].count"];
"1001282" -> "1001280"  [label="AST: "];
"1001282" -> "1001294"  [label="CFG: "];
"1001283" -> "1001282"  [label="AST: "];
"1001286" -> "1001282"  [label="AST: "];
"1001287" -> "1001282"  [label="AST: "];
"1001294" -> "1001282"  [label="AST: "];
"1001280" -> "1001282"  [label="CFG: "];
"1001282" -> "1001485"  [label="DDG: dev->pdev"];
"1001282" -> "1001485"  [label="DDG: p"];
"1001282" -> "1001485"  [label="DDG: data_dir"];
"1001282" -> "1001280"  [label="DDG: dev->pdev"];
"1001282" -> "1001280"  [label="DDG: p"];
"1001282" -> "1001280"  [label="DDG: upsg->sg[i].count"];
"1001282" -> "1001280"  [label="DDG: data_dir"];
"1001282" -> "1001305"  [label="DDG: upsg->sg[i].count"];
"1001199" -> "1001191"  [label="AST: "];
"1001199" -> "1001205"  [label="CFG: "];
"1001200" -> "1001199"  [label="AST: "];
"1001205" -> "1001199"  [label="AST: "];
"1001191" -> "1001199"  [label="CFG: "];
"1001199" -> "1001485"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1001199" -> "1001191"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1001199" -> "1001191"  [label="DDG: 9"];
"1001233" -> "1001179"  [label="AST: "];
"1001233" -> "1001237"  [label="CFG: "];
"1001234" -> "1001233"  [label="AST: "];
"1001237" -> "1001233"  [label="AST: "];
"1001250" -> "1001233"  [label="CFG: "];
"1001233" -> "1001485"  [label="DDG: (void __user *)(uintptr_t)upsg->sg[i].addr"];
"1001233" -> "1001485"  [label="DDG: sg_user[i]"];
"1001237" -> "1001233"  [label="DDG: (uintptr_t)upsg->sg[i].addr"];
"1001237" -> "1001239"  [label="CFG: "];
"1001238" -> "1001237"  [label="AST: "];
"1001239" -> "1001237"  [label="AST: "];
"1001237" -> "1001485"  [label="DDG: (uintptr_t)upsg->sg[i].addr"];
"1001239" -> "1001237"  [label="DDG: upsg->sg[i].addr"];
"1001239" -> "1001241"  [label="CFG: "];
"1001240" -> "1001239"  [label="AST: "];
"1001241" -> "1001239"  [label="AST: "];
"1001239" -> "1001485"  [label="DDG: upsg->sg[i].addr"];
"1000838" -> "1000837"  [label="AST: "];
"1000838" -> "1000843"  [label="CFG: "];
"1000839" -> "1000838"  [label="AST: "];
"1000840" -> "1000838"  [label="AST: "];
"1000843" -> "1000838"  [label="AST: "];
"1000852" -> "1000838"  [label="CFG: "];
"1000859" -> "1000838"  [label="CFG: "];
"1000838" -> "1001485"  [label="DDG: copy_from_user(p,sg_user[i],upsg->sg[i].count)"];
"1000838" -> "1001485"  [label="DDG: upsg->sg[i].count"];
"1000838" -> "1001485"  [label="DDG: p"];
"1000838" -> "1001485"  [label="DDG: sg_user[i]"];
"1000799" -> "1000838"  [label="DDG: p"];
"1000838" -> "1000860"  [label="DDG: p"];
"1000799" -> "1000798"  [label="AST: "];
"1000799" -> "1000800"  [label="CFG: "];
"1000800" -> "1000799"  [label="AST: "];
"1000803" -> "1000799"  [label="CFG: "];
"1000811" -> "1000799"  [label="CFG: "];
"1000799" -> "1001485"  [label="DDG: p"];
"1000799" -> "1001485"  [label="DDG: !p"];
"1000785" -> "1000799"  [label="DDG: p"];
"1000799" -> "1000824"  [label="DDG: p"];
"1000799" -> "1000860"  [label="DDG: p"];
"1000785" -> "1000749"  [label="AST: "];
"1000785" -> "1000787"  [label="CFG: "];
"1000786" -> "1000785"  [label="AST: "];
"1000787" -> "1000785"  [label="AST: "];
"1000800" -> "1000785"  [label="CFG: "];
"1000785" -> "1001485"  [label="DDG: kmalloc(usg->sg[i].count,GFP_KERNEL|__GFP_DMA)"];
"1000787" -> "1000785"  [label="DDG: usg->sg[i].count"];
"1000787" -> "1000785"  [label="DDG: GFP_KERNEL|__GFP_DMA"];
"1000787" -> "1000795"  [label="CFG: "];
"1000788" -> "1000787"  [label="AST: "];
"1000795" -> "1000787"  [label="AST: "];
"1000787" -> "1001485"  [label="DDG: usg->sg[i].count"];
"1000787" -> "1001485"  [label="DDG: GFP_KERNEL|__GFP_DMA"];
"1000753" -> "1000787"  [label="DDG: usg->sg[i].count"];
"1000795" -> "1000787"  [label="DDG: GFP_KERNEL"];
"1000795" -> "1000787"  [label="DDG: __GFP_DMA"];
"1000787" -> "1000860"  [label="DDG: usg->sg[i].count"];
"1000753" -> "1000752"  [label="AST: "];
"1000753" -> "1000761"  [label="CFG: "];
"1000754" -> "1000753"  [label="AST: "];
"1000761" -> "1000753"  [label="AST: "];
"1000779" -> "1000753"  [label="CFG: "];
"1000786" -> "1000753"  [label="CFG: "];
"1000753" -> "1001485"  [label="DDG: usg->sg[i].count"];
"1000753" -> "1001485"  [label="DDG: usg->sg[i].count >\n\t\t\t\t    ((dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536)"];
"1000753" -> "1001485"  [label="DDG: (dev->adapter_info.options &\n\t\t\t\t     AAC_OPT_NEW_COMM) ?\n\t\t\t\t      (dev->scsi_host_ptr->max_sectors << 9) :\n\t\t\t\t      65536"];
"1000918" -> "1000753"  [label="DDG: usg->sg[i].count"];
"1000769" -> "1000753"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1000769" -> "1000753"  [label="DDG: 9"];
"1000918" -> "1000910"  [label="AST: "];
"1000918" -> "1000919"  [label="CFG: "];
"1000919" -> "1000918"  [label="AST: "];
"1000910" -> "1000918"  [label="CFG: "];
"1000918" -> "1001485"  [label="DDG: usg->sg[i].count"];
"1000918" -> "1000910"  [label="DDG: usg->sg[i].count"];
"1000860" -> "1000918"  [label="DDG: usg->sg[i].count"];
"1000860" -> "1000858"  [label="AST: "];
"1000860" -> "1000872"  [label="CFG: "];
"1000861" -> "1000860"  [label="AST: "];
"1000864" -> "1000860"  [label="AST: "];
"1000865" -> "1000860"  [label="AST: "];
"1000872" -> "1000860"  [label="AST: "];
"1000858" -> "1000860"  [label="CFG: "];
"1000860" -> "1001485"  [label="DDG: data_dir"];
"1000860" -> "1001485"  [label="DDG: p"];
"1000860" -> "1001485"  [label="DDG: dev->pdev"];
"1000860" -> "1000858"  [label="DDG: dev->pdev"];
"1000860" -> "1000858"  [label="DDG: p"];
"1000860" -> "1000858"  [label="DDG: usg->sg[i].count"];
"1000860" -> "1000858"  [label="DDG: data_dir"];
"1000860" -> "1000901"  [label="DDG: usg->sg[i].count"];
"1000769" -> "1000761"  [label="AST: "];
"1000769" -> "1000775"  [label="CFG: "];
"1000770" -> "1000769"  [label="AST: "];
"1000775" -> "1000769"  [label="AST: "];
"1000761" -> "1000769"  [label="CFG: "];
"1000769" -> "1001485"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1000769" -> "1000761"  [label="DDG: dev->scsi_host_ptr->max_sectors"];
"1000769" -> "1000761"  [label="DDG: 9"];
"1000795" -> "1000797"  [label="CFG: "];
"1000796" -> "1000795"  [label="AST: "];
"1000797" -> "1000795"  [label="AST: "];
"1000795" -> "1001485"  [label="DDG: GFP_KERNEL"];
"1000795" -> "1001485"  [label="DDG: __GFP_DMA"];
"1000707" -> "1000795"  [label="DDG: GFP_KERNEL"];
"1000707" -> "1000705"  [label="AST: "];
"1000707" -> "1000715"  [label="CFG: "];
"1000708" -> "1000707"  [label="AST: "];
"1000715" -> "1000707"  [label="AST: "];
"1000705" -> "1000707"  [label="CFG: "];
"1000707" -> "1001485"  [label="DDG: GFP_KERNEL"];
"1000707" -> "1001485"  [label="DDG: actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)"];
"1000707" -> "1000705"  [label="DDG: actual_fibsize - sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)"];
"1000707" -> "1000705"  [label="DDG: GFP_KERNEL"];
"1000708" -> "1000707"  [label="DDG: actual_fibsize"];
"1000708" -> "1000707"  [label="DDG: sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)"];
"1000708" -> "1000710"  [label="CFG: "];
"1000709" -> "1000708"  [label="AST: "];
"1000710" -> "1000708"  [label="AST: "];
"1000715" -> "1000708"  [label="CFG: "];
"1000708" -> "1001485"  [label="DDG: actual_fibsize"];
"1000708" -> "1001485"  [label="DDG: sizeof(struct aac_srb)\n\t\t\t  + sizeof(struct sgmap)"];
"1000432" -> "1000708"  [label="DDG: actual_fibsize"];
"1000708" -> "1000728"  [label="DDG: actual_fibsize"];
"1000432" -> "1000431"  [label="AST: "];
"1000432" -> "1000434"  [label="CFG: "];
"1000433" -> "1000432"  [label="AST: "];
"1000434" -> "1000432"  [label="AST: "];
"1000436" -> "1000432"  [label="CFG: "];
"1000431" -> "1000432"  [label="CFG: "];
"1000432" -> "1001485"  [label="DDG: fibsize"];
"1000432" -> "1001485"  [label="DDG: actual_fibsize"];
"1000432" -> "1000431"  [label="DDG: actual_fibsize"];
"1000432" -> "1000431"  [label="DDG: fibsize"];
"1000395" -> "1000432"  [label="DDG: actual_fibsize"];
"1000267" -> "1000432"  [label="DDG: fibsize"];
"1000432" -> "1000435"  [label="DDG: fibsize"];
"1000432" -> "1000491"  [label="DDG: fibsize"];
"1000432" -> "1000970"  [label="DDG: fibsize"];
"1000432" -> "1001346"  [label="DDG: actual_fibsize"];
"1000395" -> "1000118"  [label="AST: "];
"1000395" -> "1000397"  [label="CFG: "];
"1000396" -> "1000395"  [label="AST: "];
"1000397" -> "1000395"  [label="AST: "];
"1000414" -> "1000395"  [label="CFG: "];
"1000395" -> "1001485"  [label="DDG: sizeof(struct aac_srb) - sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry))"];
"1000397" -> "1000395"  [label="DDG: sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry))"];
"1000395" -> "1000413"  [label="DDG: actual_fibsize"];
"1000395" -> "1000415"  [label="DDG: actual_fibsize"];
"1000397" -> "1000400"  [label="CFG: "];
"1000398" -> "1000397"  [label="AST: "];
"1000400" -> "1000397"  [label="AST: "];
"1000397" -> "1001485"  [label="DDG: sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry))"];
"1000403" -> "1000397"  [label="DDG: user_srbcmd->sg.count & 0xff"];
"1000403" -> "1000400"  [label="AST: "];
"1000403" -> "1000411"  [label="CFG: "];
"1000404" -> "1000403"  [label="AST: "];
"1000411" -> "1000403"  [label="AST: "];
"1000400" -> "1000403"  [label="CFG: "];
"1000403" -> "1000400"  [label="DDG: user_srbcmd->sg.count & 0xff"];
"1000404" -> "1000403"  [label="DDG: user_srbcmd->sg.count"];
"1000404" -> "1000403"  [label="DDG: 0xff"];
"1000404" -> "1000410"  [label="CFG: "];
"1000405" -> "1000404"  [label="AST: "];
"1000410" -> "1000404"  [label="AST: "];
"1000412" -> "1000404"  [label="CFG: "];
"1000381" -> "1000404"  [label="DDG: user_srbcmd->sg.count"];
"1000404" -> "1000418"  [label="DDG: user_srbcmd->sg.count"];
"1000381" -> "1000380"  [label="AST: "];
"1000381" -> "1000387"  [label="CFG: "];
"1000382" -> "1000381"  [label="AST: "];
"1000387" -> "1000381"  [label="AST: "];
"1000391" -> "1000381"  [label="CFG: "];
"1000396" -> "1000381"  [label="CFG: "];
"1000381" -> "1001485"  [label="DDG: ARRAY_SIZE(sg_list)"];
"1000381" -> "1001485"  [label="DDG: user_srbcmd->sg.count"];
"1000381" -> "1001485"  [label="DDG: user_srbcmd->sg.count > ARRAY_SIZE(sg_list)"];
"1000387" -> "1000381"  [label="DDG: sg_list"];
"1000387" -> "1000388"  [label="CFG: "];
"1000388" -> "1000387"  [label="AST: "];
"1000387" -> "1001485"  [label="DDG: sg_list"];
"1000208" -> "1000387"  [label="DDG: sg_list"];
"1000387" -> "1001469"  [label="DDG: sg_list"];
"1000208" -> "1000118"  [label="AST: "];
"1000208" -> "1000211"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000210" -> "1000208"  [label="AST: "];
"1000211" -> "1000208"  [label="AST: "];
"1000216" -> "1000208"  [label="CFG: "];
"1000208" -> "1001485"  [label="DDG: sg_list"];
"1000208" -> "1001485"  [label="DDG: memset(sg_list, 0, sizeof(sg_list))"];
"1000208" -> "1001469"  [label="DDG: sg_list"];
"1000267" -> "1000266"  [label="AST: "];
"1000267" -> "1000270"  [label="CFG: "];
"1000268" -> "1000267"  [label="AST: "];
"1000269" -> "1000267"  [label="AST: "];
"1000270" -> "1000267"  [label="AST: "];
"1000273" -> "1000267"  [label="CFG: "];
"1000278" -> "1000267"  [label="CFG: "];
"1000267" -> "1001485"  [label="DDG: user_srb"];
"1000267" -> "1001485"  [label="DDG: copy_from_user(user_srbcmd, user_srb,fibsize)"];
"1000267" -> "1001485"  [label="DDG: fibsize"];
"1000258" -> "1000267"  [label="DDG: user_srbcmd"];
"1000130" -> "1000267"  [label="DDG: user_srb"];
"1000267" -> "1000277"  [label="DDG: fibsize"];
"1000267" -> "1000279"  [label="DDG: fibsize"];
"1000267" -> "1001457"  [label="DDG: user_srbcmd"];
"1000258" -> "1000257"  [label="AST: "];
"1000258" -> "1000259"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000262" -> "1000258"  [label="CFG: "];
"1000268" -> "1000258"  [label="CFG: "];
"1000258" -> "1001485"  [label="DDG: !user_srbcmd"];
"1000252" -> "1000258"  [label="DDG: user_srbcmd"];
"1000258" -> "1001457"  [label="DDG: user_srbcmd"];
"1000252" -> "1000118"  [label="AST: "];
"1000253" -> "1000252"  [label="AST: "];
"1000259" -> "1000252"  [label="CFG: "];
"1000252" -> "1001485"  [label="DDG: kmalloc(fibsize, GFP_KERNEL)"];
"1000130" -> "1000118"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000137" -> "1000130"  [label="CFG: "];
"1000130" -> "1001485"  [label="DDG: arg"];
"1000130" -> "1001485"  [label="DDG: user_srb"];
"1000117" -> "1000130"  [label="DDG: arg"];
"1000117" -> "1000115"  [label="AST: "];
"1000117" -> "1001485"  [label="DDG: arg"];
"1000117" -> "1000277"  [label="DDG: arg"];
"1000117" -> "1000279"  [label="DDG: arg"];
"1001248" -> "1001179"  [label="AST: "];
"1001248" -> "1001252"  [label="CFG: "];
"1001249" -> "1001248"  [label="AST: "];
"1001252" -> "1001248"  [label="AST: "];
"1001254" -> "1001248"  [label="CFG: "];
"1001248" -> "1001485"  [label="DDG: sg_list[i]"];
"1001248" -> "1001469"  [label="DDG: sg_list[i]"];
"1001082" -> "1000991"  [label="AST: "];
"1001082" -> "1001086"  [label="CFG: "];
"1001083" -> "1001082"  [label="AST: "];
"1001086" -> "1001082"  [label="AST: "];
"1001088" -> "1001082"  [label="CFG: "];
"1001082" -> "1001485"  [label="DDG: sg_list[i]"];
"1001082" -> "1001469"  [label="DDG: sg_list[i]"];
"1000602" -> "1000509"  [label="AST: "];
"1000602" -> "1000606"  [label="CFG: "];
"1000603" -> "1000602"  [label="AST: "];
"1000606" -> "1000602"  [label="AST: "];
"1000608" -> "1000602"  [label="CFG: "];
"1000602" -> "1001485"  [label="DDG: sg_list[i]"];
"1000602" -> "1001469"  [label="DDG: sg_list[i]"];
"1000824" -> "1000749"  [label="AST: "];
"1000824" -> "1000828"  [label="CFG: "];
"1000825" -> "1000824"  [label="AST: "];
"1000828" -> "1000824"  [label="AST: "];
"1000830" -> "1000824"  [label="CFG: "];
"1000824" -> "1001485"  [label="DDG: sg_list[i]"];
"1000824" -> "1001469"  [label="DDG: sg_list[i]"];
"1001391" -> "1001390"  [label="AST: "];
"1001391" -> "1001393"  [label="CFG: "];
"1001392" -> "1001391"  [label="AST: "];
"1001393" -> "1001391"  [label="AST: "];
"1001426" -> "1001391"  [label="CFG: "];
"1001391" -> "1001485"  [label="DDG: le32_to_cpu(\n\t\t\t  (dev->adapter_info.options & AAC_OPT_SGMAP_HOST64)\n\t\t\t      ? ((struct sgmap64*)&srbcmd->sg)->sg[i].count\n\t\t\t      : srbcmd->sg.sg[i].count)"];
"1001393" -> "1001391"  [label="DDG: (dev->adapter_info.options & AAC_OPT_SGMAP_HOST64)\n\t\t\t      ? ((struct sgmap64*)&srbcmd->sg)->sg[i].count\n\t\t\t      : srbcmd->sg.sg[i].count"];
"1001393" -> "1001394"  [label="CFG: "];
"1001394" -> "1001393"  [label="AST: "];
"1001393" -> "1001485"  [label="DDG: (dev->adapter_info.options & AAC_OPT_SGMAP_HOST64)\n\t\t\t      ? ((struct sgmap64*)&srbcmd->sg)->sg[i].count\n\t\t\t      : srbcmd->sg.sg[i].count"];
"1001469" -> "1001468"  [label="AST: "];
"1001469" -> "1001470"  [label="CFG: "];
"1001470" -> "1001469"  [label="AST: "];
"1001467" -> "1001469"  [label="CFG: "];
"1001469" -> "1001485"  [label="DDG: kfree(sg_list[i])"];
"1001469" -> "1001485"  [label="DDG: sg_list[i]"];
}
