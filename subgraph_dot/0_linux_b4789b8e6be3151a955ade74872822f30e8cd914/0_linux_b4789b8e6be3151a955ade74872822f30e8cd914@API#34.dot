digraph "0_linux_b4789b8e6be3151a955ade74872822f30e8cd914@API" {
"1000400" [label="(Call,sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry)))"];
"1000403" [label="(Call,(user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry))"];
"1000404" [label="(Call,user_srbcmd->sg.count & 0xff)"];
"1000381" [label="(Call,user_srbcmd->sg.count > ARRAY_SIZE(sg_list))"];
"1000387" [label="(Call,ARRAY_SIZE(sg_list))"];
"1000208" [label="(Call,memset(sg_list, 0, sizeof(sg_list)))"];
"1000208" [label="(Call,memset(sg_list, 0, sizeof(sg_list)))"];
"1000210" [label="(Literal,0)"];
"1000388" [label="(Identifier,sg_list)"];
"1000391" [label="(Identifier,rcode)"];
"1000118" [label="(Block,)"];
"1001424" [label="(Call,copy_to_user(sg_user[i], sg_list[i], byte_count))"];
"1000411" [label="(Call,sizeof(struct sgentry))"];
"1001469" [label="(Call,kfree(sg_list[i]))"];
"1000401" [label="(Call,sizeof(struct sgentry))"];
"1000403" [label="(Call,(user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry))"];
"1000396" [label="(Identifier,actual_fibsize)"];
"1000216" [label="(Identifier,fibsize)"];
"1000418" [label="(Call,user_srbcmd->sg.count & 0xff)"];
"1001485" [label="(MethodReturn,static int)"];
"1000405" [label="(Call,user_srbcmd->sg.count)"];
"1000397" [label="(Call,sizeof(struct aac_srb) - sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry)))"];
"1000380" [label="(ControlStructure,if (user_srbcmd->sg.count > ARRAY_SIZE(sg_list)))"];
"1000209" [label="(Identifier,sg_list)"];
"1000400" [label="(Call,sizeof(struct sgentry) +\n\t\t((user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry)))"];
"1000211" [label="(Call,sizeof(sg_list))"];
"1000387" [label="(Call,ARRAY_SIZE(sg_list))"];
"1000381" [label="(Call,user_srbcmd->sg.count > ARRAY_SIZE(sg_list))"];
"1000382" [label="(Call,user_srbcmd->sg.count)"];
"1000410" [label="(Literal,0xff)"];
"1000404" [label="(Call,user_srbcmd->sg.count & 0xff)"];
"1000400" -> "1000397"  [label="AST: "];
"1000400" -> "1000403"  [label="CFG: "];
"1000401" -> "1000400"  [label="AST: "];
"1000403" -> "1000400"  [label="AST: "];
"1000397" -> "1000400"  [label="CFG: "];
"1000400" -> "1001485"  [label="DDG: (user_srbcmd->sg.count & 0xff) * sizeof(struct sgentry)"];
"1000403" -> "1000400"  [label="DDG: user_srbcmd->sg.count & 0xff"];
"1000403" -> "1000411"  [label="CFG: "];
"1000404" -> "1000403"  [label="AST: "];
"1000411" -> "1000403"  [label="AST: "];
"1000403" -> "1000397"  [label="DDG: user_srbcmd->sg.count & 0xff"];
"1000404" -> "1000403"  [label="DDG: user_srbcmd->sg.count"];
"1000404" -> "1000403"  [label="DDG: 0xff"];
"1000404" -> "1000410"  [label="CFG: "];
"1000405" -> "1000404"  [label="AST: "];
"1000410" -> "1000404"  [label="AST: "];
"1000412" -> "1000404"  [label="CFG: "];
"1000381" -> "1000404"  [label="DDG: user_srbcmd->sg.count"];
"1000404" -> "1000418"  [label="DDG: user_srbcmd->sg.count"];
"1000381" -> "1000380"  [label="AST: "];
"1000381" -> "1000387"  [label="CFG: "];
"1000382" -> "1000381"  [label="AST: "];
"1000387" -> "1000381"  [label="AST: "];
"1000391" -> "1000381"  [label="CFG: "];
"1000396" -> "1000381"  [label="CFG: "];
"1000381" -> "1001485"  [label="DDG: ARRAY_SIZE(sg_list)"];
"1000381" -> "1001485"  [label="DDG: user_srbcmd->sg.count"];
"1000381" -> "1001485"  [label="DDG: user_srbcmd->sg.count > ARRAY_SIZE(sg_list)"];
"1000387" -> "1000381"  [label="DDG: sg_list"];
"1000387" -> "1000388"  [label="CFG: "];
"1000388" -> "1000387"  [label="AST: "];
"1000387" -> "1001485"  [label="DDG: sg_list"];
"1000208" -> "1000387"  [label="DDG: sg_list"];
"1000387" -> "1001424"  [label="DDG: sg_list"];
"1000387" -> "1001469"  [label="DDG: sg_list"];
"1000208" -> "1000118"  [label="AST: "];
"1000208" -> "1000211"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000210" -> "1000208"  [label="AST: "];
"1000211" -> "1000208"  [label="AST: "];
"1000216" -> "1000208"  [label="CFG: "];
"1000208" -> "1001485"  [label="DDG: sg_list"];
"1000208" -> "1001485"  [label="DDG: memset(sg_list, 0, sizeof(sg_list))"];
"1000208" -> "1001469"  [label="DDG: sg_list"];
}
