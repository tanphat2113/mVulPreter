digraph "0_exempi_c26d5beb60a5a85f76259f50ed3e08c8169b0a0c@pointer" {
"1000138" [label="(Call,*lastChar == ' ')"];
"1000126" [label="(Call,*lastChar != 0)"];
"1000122" [label="(Call,*lastChar != ' ')"];
"1000142" [label="(Call,*lastChar == 0)"];
"1000138" [label="(Call,*lastChar == ' ')"];
"1000137" [label="(Call,(*lastChar == ' ') || (*lastChar == 0))"];
"1000133" [label="(Call,(firstChar <= lastChar) && ((*lastChar == ' ') || (*lastChar == 0)))"];
"1000160" [label="(Call,*lastChar != ' ')"];
"1000159" [label="(Call,(*lastChar != ' ') && (*lastChar != 0))"];
"1000155" [label="(Call,(lastChar >= firstChar) && (*lastChar != ' ') && (*lastChar != 0))"];
"1000149" [label="(Call,(lastChar == firstChar-1) ||\n\t\t\t\t ((lastChar >= firstChar) && (*lastChar != ' ') && (*lastChar != 0)))"];
"1000148" [label="(Call,XMP_Assert ( (lastChar == firstChar-1) ||\n\t\t\t\t ((lastChar >= firstChar) && (*lastChar != ' ') && (*lastChar != 0)) ))"];
"1000164" [label="(Call,*lastChar != 0)"];
"1000125" [label="(Literal,' ')"];
"1000161" [label="(Call,*lastChar)"];
"1000164" [label="(Call,*lastChar != 0)"];
"1000138" [label="(Call,*lastChar == ' ')"];
"1000170" [label="(Identifier,newLen)"];
"1000165" [label="(Call,*lastChar)"];
"1000160" [label="(Call,*lastChar != ' ')"];
"1000159" [label="(Call,(*lastChar != ' ') && (*lastChar != 0))"];
"1000149" [label="(Call,(lastChar == firstChar-1) ||\n\t\t\t\t ((lastChar >= firstChar) && (*lastChar != ' ') && (*lastChar != 0)))"];
"1000155" [label="(Call,(lastChar >= firstChar) && (*lastChar != ' ') && (*lastChar != 0))"];
"1000141" [label="(Literal,' ')"];
"1000195" [label="(MethodReturn,static size_t)"];
"1000163" [label="(Literal,' ')"];
"1000156" [label="(Call,lastChar >= firstChar)"];
"1000122" [label="(Call,*lastChar != ' ')"];
"1000123" [label="(Call,*lastChar)"];
"1000127" [label="(Call,*lastChar)"];
"1000144" [label="(Identifier,lastChar)"];
"1000150" [label="(Call,lastChar == firstChar-1)"];
"1000145" [label="(Literal,0)"];
"1000151" [label="(Identifier,lastChar)"];
"1000129" [label="(Literal,0)"];
"1000167" [label="(Literal,0)"];
"1000126" [label="(Call,*lastChar != 0)"];
"1000148" [label="(Call,XMP_Assert ( (lastChar == firstChar-1) ||\n\t\t\t\t ((lastChar >= firstChar) && (*lastChar != ' ') && (*lastChar != 0)) ))"];
"1000147" [label="(Identifier,lastChar)"];
"1000142" [label="(Call,*lastChar == 0)"];
"1000134" [label="(Call,firstChar <= lastChar)"];
"1000121" [label="(Call,(*lastChar != ' ') && (*lastChar != 0))"];
"1000132" [label="(ControlStructure,while ( (firstChar <= lastChar) && ((*lastChar == ' ') || (*lastChar == 0)) ))"];
"1000143" [label="(Call,*lastChar)"];
"1000139" [label="(Call,*lastChar)"];
"1000128" [label="(Identifier,lastChar)"];
"1000133" [label="(Call,(firstChar <= lastChar) && ((*lastChar == ' ') || (*lastChar == 0)))"];
"1000166" [label="(Identifier,lastChar)"];
"1000105" [label="(Block,)"];
"1000137" [label="(Call,(*lastChar == ' ') || (*lastChar == 0))"];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000141"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000141" -> "1000138"  [label="AST: "];
"1000144" -> "1000138"  [label="CFG: "];
"1000137" -> "1000138"  [label="CFG: "];
"1000138" -> "1000195"  [label="DDG: *lastChar"];
"1000138" -> "1000137"  [label="DDG: *lastChar"];
"1000138" -> "1000137"  [label="DDG: ' '"];
"1000126" -> "1000138"  [label="DDG: *lastChar"];
"1000142" -> "1000138"  [label="DDG: *lastChar"];
"1000122" -> "1000138"  [label="DDG: *lastChar"];
"1000138" -> "1000142"  [label="DDG: *lastChar"];
"1000138" -> "1000160"  [label="DDG: *lastChar"];
"1000126" -> "1000121"  [label="AST: "];
"1000126" -> "1000129"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000129" -> "1000126"  [label="AST: "];
"1000121" -> "1000126"  [label="CFG: "];
"1000126" -> "1000195"  [label="DDG: *lastChar"];
"1000126" -> "1000121"  [label="DDG: *lastChar"];
"1000126" -> "1000121"  [label="DDG: 0"];
"1000122" -> "1000126"  [label="DDG: *lastChar"];
"1000126" -> "1000160"  [label="DDG: *lastChar"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000125"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000125" -> "1000122"  [label="AST: "];
"1000128" -> "1000122"  [label="CFG: "];
"1000121" -> "1000122"  [label="CFG: "];
"1000122" -> "1000195"  [label="DDG: *lastChar"];
"1000122" -> "1000121"  [label="DDG: *lastChar"];
"1000122" -> "1000121"  [label="DDG: ' '"];
"1000122" -> "1000160"  [label="DDG: *lastChar"];
"1000142" -> "1000137"  [label="AST: "];
"1000142" -> "1000145"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000145" -> "1000142"  [label="AST: "];
"1000137" -> "1000142"  [label="CFG: "];
"1000142" -> "1000195"  [label="DDG: *lastChar"];
"1000142" -> "1000137"  [label="DDG: *lastChar"];
"1000142" -> "1000137"  [label="DDG: 0"];
"1000142" -> "1000160"  [label="DDG: *lastChar"];
"1000137" -> "1000133"  [label="AST: "];
"1000133" -> "1000137"  [label="CFG: "];
"1000137" -> "1000195"  [label="DDG: *lastChar == 0"];
"1000137" -> "1000195"  [label="DDG: *lastChar == ' '"];
"1000137" -> "1000133"  [label="DDG: *lastChar == ' '"];
"1000137" -> "1000133"  [label="DDG: *lastChar == 0"];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000134"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000147" -> "1000133"  [label="CFG: "];
"1000151" -> "1000133"  [label="CFG: "];
"1000133" -> "1000195"  [label="DDG: (firstChar <= lastChar) && ((*lastChar == ' ') || (*lastChar == 0))"];
"1000133" -> "1000195"  [label="DDG: firstChar <= lastChar"];
"1000133" -> "1000195"  [label="DDG: (*lastChar == ' ') || (*lastChar == 0)"];
"1000134" -> "1000133"  [label="DDG: firstChar"];
"1000134" -> "1000133"  [label="DDG: lastChar"];
"1000160" -> "1000159"  [label="AST: "];
"1000160" -> "1000163"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000163" -> "1000160"  [label="AST: "];
"1000166" -> "1000160"  [label="CFG: "];
"1000159" -> "1000160"  [label="CFG: "];
"1000160" -> "1000195"  [label="DDG: *lastChar"];
"1000160" -> "1000159"  [label="DDG: *lastChar"];
"1000160" -> "1000159"  [label="DDG: ' '"];
"1000160" -> "1000164"  [label="DDG: *lastChar"];
"1000159" -> "1000155"  [label="AST: "];
"1000159" -> "1000164"  [label="CFG: "];
"1000164" -> "1000159"  [label="AST: "];
"1000155" -> "1000159"  [label="CFG: "];
"1000159" -> "1000195"  [label="DDG: *lastChar != 0"];
"1000159" -> "1000195"  [label="DDG: *lastChar != ' '"];
"1000159" -> "1000155"  [label="DDG: *lastChar != ' '"];
"1000159" -> "1000155"  [label="DDG: *lastChar != 0"];
"1000121" -> "1000159"  [label="DDG: *lastChar != 0"];
"1000164" -> "1000159"  [label="DDG: *lastChar"];
"1000164" -> "1000159"  [label="DDG: 0"];
"1000155" -> "1000149"  [label="AST: "];
"1000155" -> "1000156"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000149" -> "1000155"  [label="CFG: "];
"1000155" -> "1000195"  [label="DDG: (*lastChar != ' ') && (*lastChar != 0)"];
"1000155" -> "1000195"  [label="DDG: lastChar >= firstChar"];
"1000155" -> "1000149"  [label="DDG: lastChar >= firstChar"];
"1000155" -> "1000149"  [label="DDG: (*lastChar != ' ') && (*lastChar != 0)"];
"1000156" -> "1000155"  [label="DDG: lastChar"];
"1000156" -> "1000155"  [label="DDG: firstChar"];
"1000121" -> "1000155"  [label="DDG: (*lastChar != ' ') && (*lastChar != 0)"];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000148" -> "1000149"  [label="CFG: "];
"1000149" -> "1000195"  [label="DDG: (lastChar >= firstChar) && (*lastChar != ' ') && (*lastChar != 0)"];
"1000149" -> "1000195"  [label="DDG: lastChar == firstChar-1"];
"1000149" -> "1000148"  [label="DDG: lastChar == firstChar-1"];
"1000149" -> "1000148"  [label="DDG: (lastChar >= firstChar) && (*lastChar != ' ') && (*lastChar != 0)"];
"1000150" -> "1000149"  [label="DDG: lastChar"];
"1000150" -> "1000149"  [label="DDG: firstChar-1"];
"1000148" -> "1000105"  [label="AST: "];
"1000170" -> "1000148"  [label="CFG: "];
"1000148" -> "1000195"  [label="DDG: (lastChar == firstChar-1) ||\n\t\t\t\t ((lastChar >= firstChar) && (*lastChar != ' ') && (*lastChar != 0))"];
"1000148" -> "1000195"  [label="DDG: XMP_Assert ( (lastChar == firstChar-1) ||\n\t\t\t\t ((lastChar >= firstChar) && (*lastChar != ' ') && (*lastChar != 0)) )"];
"1000164" -> "1000167"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000167" -> "1000164"  [label="AST: "];
"1000164" -> "1000195"  [label="DDG: *lastChar"];
}
