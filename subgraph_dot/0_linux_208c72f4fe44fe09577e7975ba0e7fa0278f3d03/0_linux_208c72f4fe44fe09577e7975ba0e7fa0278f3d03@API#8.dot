digraph "0_linux_208c72f4fe44fe09577e7975ba0e7fa0278f3d03@API" {
"1000315" [label="(Call,sizeof(*request->channels) * n_channels)"];
"1000228" [label="(Call,n_channels = 0)"];
"1000221" [label="(Call,!n_channels)"];
"1000212" [label="(Call,n_channels = validate_scan_freqs(\n\t\t\t\tinfo->attrs[NL80211_ATTR_SCAN_FREQUENCIES]))"];
"1000214" [label="(Call,validate_scan_freqs(\n\t\t\t\tinfo->attrs[NL80211_ATTR_SCAN_FREQUENCIES]))"];
"1000246" [label="(Call,n_channels += wiphy->bands[band]->n_channels)"];
"1000301" [label="(Call,kzalloc(sizeof(*request)\n\t\t\t+ sizeof(*request->ssids) * n_ssids\n\t\t\t+ sizeof(*request->channels) * n_channels\n\t\t\t+ ie_len, GFP_KERNEL))"];
"1000299" [label="(Call,request = kzalloc(sizeof(*request)\n\t\t\t+ sizeof(*request->ssids) * n_ssids\n\t\t\t+ sizeof(*request->channels) * n_channels\n\t\t\t+ ie_len, GFP_KERNEL))"];
"1000325" [label="(Call,!request)"];
"1000605" [label="(Call,rdev->ops->sched_scan_start(&rdev->wiphy, dev, request))"];
"1000603" [label="(Call,err = rdev->ops->sched_scan_start(&rdev->wiphy, dev, request))"];
"1000613" [label="(Call,!err)"];
"1000630" [label="(Return,return err;)"];
"1000616" [label="(Call,rdev->sched_scan_req = request)"];
"1000621" [label="(Call,nl80211_send_sched_scan(rdev, dev,\n\t\t\t\t\tNL80211_CMD_START_SCHED_SCAN))"];
"1000627" [label="(Call,kfree(request))"];
"1000302" [label="(Call,sizeof(*request)\n\t\t\t+ sizeof(*request->ssids) * n_ssids\n\t\t\t+ sizeof(*request->channels) * n_channels\n\t\t\t+ ie_len)"];
"1000306" [label="(Call,sizeof(*request->ssids) * n_ssids\n\t\t\t+ sizeof(*request->channels) * n_channels\n\t\t\t+ ie_len)"];
"1000314" [label="(Call,sizeof(*request->channels) * n_channels\n\t\t\t+ ie_len)"];
"1000372" [label="(Call,(void *)(request->channels + n_channels))"];
"1000368" [label="(Call,request->ie = (void *)(request->channels + n_channels))"];
"1000571" [label="(Call,(void *)request->ie)"];
"1000570" [label="(Call,memcpy((void *)request->ie,\n\t\t       nla_data(info->attrs[NL80211_ATTR_IE]),\n\t\t       request->ie_len))"];
"1000374" [label="(Call,request->channels + n_channels)"];
"1000573" [label="(Call,request->ie)"];
"1000570" [label="(Call,memcpy((void *)request->ie,\n\t\t       nla_data(info->attrs[NL80211_ATTR_IE]),\n\t\t       request->ie_len))"];
"1000227" [label="(Block,)"];
"1000316" [label="(Call,sizeof(*request->channels))"];
"1000315" [label="(Call,sizeof(*request->channels) * n_channels)"];
"1000369" [label="(Call,request->ie)"];
"1000615" [label="(Block,)"];
"1000605" [label="(Call,rdev->ops->sched_scan_start(&rdev->wiphy, dev, request))"];
"1000630" [label="(Return,return err;)"];
"1000307" [label="(Call,sizeof(*request->ssids) * n_ssids)"];
"1000625" [label="(ControlStructure,goto out;)"];
"1000631" [label="(Identifier,err)"];
"1000240" [label="(ControlStructure,if (wiphy->bands[band]))"];
"1000628" [label="(Identifier,request)"];
"1000374" [label="(Call,request->channels + n_channels)"];
"1000248" [label="(Call,wiphy->bands[band]->n_channels)"];
"1000614" [label="(Identifier,err)"];
"1000329" [label="(Identifier,ENOMEM)"];
"1000291" [label="(Call,ie_len > wiphy->max_scan_ie_len)"];
"1000621" [label="(Call,nl80211_send_sched_scan(rdev, dev,\n\t\t\t\t\tNL80211_CMD_START_SCHED_SCAN))"];
"1000632" [label="(MethodReturn,static int)"];
"1000375" [label="(Call,request->channels)"];
"1000613" [label="(Call,!err)"];
"1000300" [label="(Identifier,request)"];
"1000571" [label="(Call,(void *)request->ie)"];
"1000368" [label="(Call,request->ie = (void *)(request->channels + n_channels))"];
"1000579" [label="(Identifier,info)"];
"1000624" [label="(Identifier,NL80211_CMD_START_SCHED_SCAN)"];
"1000321" [label="(Identifier,n_channels)"];
"1000401" [label="(Call,err = -EINVAL)"];
"1000618" [label="(Identifier,rdev)"];
"1000617" [label="(Call,rdev->sched_scan_req)"];
"1000367" [label="(ControlStructure,else)"];
"1000211" [label="(Block,)"];
"1000612" [label="(ControlStructure,if (!err))"];
"1000225" [label="(Identifier,EINVAL)"];
"1000622" [label="(Identifier,rdev)"];
"1000323" [label="(Identifier,GFP_KERNEL)"];
"1000560" [label="(Call,request->ie_len = nla_len(info->attrs[NL80211_ATTR_IE]))"];
"1000299" [label="(Call,request = kzalloc(sizeof(*request)\n\t\t\t+ sizeof(*request->ssids) * n_ssids\n\t\t\t+ sizeof(*request->channels) * n_channels\n\t\t\t+ ie_len, GFP_KERNEL))"];
"1000629" [label="(JumpTarget,out:)"];
"1000326" [label="(Identifier,request)"];
"1000222" [label="(Identifier,n_channels)"];
"1000221" [label="(Call,!n_channels)"];
"1000606" [label="(Call,&rdev->wiphy)"];
"1000314" [label="(Call,sizeof(*request->channels) * n_channels\n\t\t\t+ ie_len)"];
"1000306" [label="(Call,sizeof(*request->ssids) * n_ssids\n\t\t\t+ sizeof(*request->channels) * n_channels\n\t\t\t+ ie_len)"];
"1000372" [label="(Call,(void *)(request->channels + n_channels))"];
"1000616" [label="(Call,rdev->sched_scan_req = request)"];
"1000325" [label="(Call,!request)"];
"1000610" [label="(Identifier,dev)"];
"1000301" [label="(Call,kzalloc(sizeof(*request)\n\t\t\t+ sizeof(*request->ssids) * n_ssids\n\t\t\t+ sizeof(*request->channels) * n_channels\n\t\t\t+ ie_len, GFP_KERNEL))"];
"1000322" [label="(Identifier,ie_len)"];
"1000604" [label="(Identifier,err)"];
"1000233" [label="(Identifier,band)"];
"1000620" [label="(Identifier,request)"];
"1000356" [label="(Call,request->ie = (void *)(request->ssids + n_ssids))"];
"1000215" [label="(Call,info->attrs[NL80211_ATTR_SCAN_FREQUENCIES])"];
"1000230" [label="(Literal,0)"];
"1000623" [label="(Identifier,dev)"];
"1000214" [label="(Call,validate_scan_freqs(\n\t\t\t\tinfo->attrs[NL80211_ATTR_SCAN_FREQUENCIES]))"];
"1000331" [label="(Identifier,n_ssids)"];
"1000220" [label="(ControlStructure,if (!n_channels))"];
"1000228" [label="(Call,n_channels = 0)"];
"1000246" [label="(Call,n_channels += wiphy->bands[band]->n_channels)"];
"1000587" [label="(Identifier,request)"];
"1000380" [label="(Identifier,i)"];
"1000117" [label="(Call,*dev = info->user_ptr[1])"];
"1000229" [label="(Identifier,n_channels)"];
"1000603" [label="(Call,err = rdev->ops->sched_scan_start(&rdev->wiphy, dev, request))"];
"1000109" [label="(Call,*rdev = info->user_ptr[0])"];
"1000559" [label="(Block,)"];
"1000302" [label="(Call,sizeof(*request)\n\t\t\t+ sizeof(*request->ssids) * n_ssids\n\t\t\t+ sizeof(*request->channels) * n_channels\n\t\t\t+ ie_len)"];
"1000239" [label="(Identifier,band)"];
"1000627" [label="(Call,kfree(request))"];
"1000213" [label="(Identifier,n_channels)"];
"1000378" [label="(Identifier,n_channels)"];
"1000324" [label="(ControlStructure,if (!request))"];
"1000534" [label="(Call,err = -EINVAL)"];
"1000258" [label="(Identifier,info)"];
"1000212" [label="(Call,n_channels = validate_scan_freqs(\n\t\t\t\tinfo->attrs[NL80211_ATTR_SCAN_FREQUENCIES]))"];
"1000492" [label="(Call,err = -EINVAL)"];
"1000106" [label="(Block,)"];
"1000303" [label="(Call,sizeof(*request))"];
"1000247" [label="(Identifier,n_channels)"];
"1000576" [label="(Call,nla_data(info->attrs[NL80211_ATTR_IE]))"];
"1000611" [label="(Identifier,request)"];
"1000626" [label="(JumpTarget,out_free:)"];
"1000582" [label="(Call,request->ie_len)"];
"1000315" -> "1000314"  [label="AST: "];
"1000315" -> "1000321"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000321" -> "1000315"  [label="AST: "];
"1000322" -> "1000315"  [label="CFG: "];
"1000315" -> "1000632"  [label="DDG: n_channels"];
"1000315" -> "1000301"  [label="DDG: n_channels"];
"1000315" -> "1000302"  [label="DDG: n_channels"];
"1000315" -> "1000306"  [label="DDG: n_channels"];
"1000315" -> "1000314"  [label="DDG: n_channels"];
"1000228" -> "1000315"  [label="DDG: n_channels"];
"1000221" -> "1000315"  [label="DDG: n_channels"];
"1000246" -> "1000315"  [label="DDG: n_channels"];
"1000315" -> "1000372"  [label="DDG: n_channels"];
"1000315" -> "1000374"  [label="DDG: n_channels"];
"1000228" -> "1000227"  [label="AST: "];
"1000228" -> "1000230"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000230" -> "1000228"  [label="AST: "];
"1000233" -> "1000228"  [label="CFG: "];
"1000228" -> "1000632"  [label="DDG: n_channels"];
"1000228" -> "1000246"  [label="DDG: n_channels"];
"1000221" -> "1000220"  [label="AST: "];
"1000221" -> "1000222"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000225" -> "1000221"  [label="CFG: "];
"1000258" -> "1000221"  [label="CFG: "];
"1000221" -> "1000632"  [label="DDG: !n_channels"];
"1000221" -> "1000632"  [label="DDG: n_channels"];
"1000212" -> "1000221"  [label="DDG: n_channels"];
"1000212" -> "1000211"  [label="AST: "];
"1000212" -> "1000214"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000214" -> "1000212"  [label="AST: "];
"1000222" -> "1000212"  [label="CFG: "];
"1000212" -> "1000632"  [label="DDG: validate_scan_freqs(\n\t\t\t\tinfo->attrs[NL80211_ATTR_SCAN_FREQUENCIES])"];
"1000214" -> "1000212"  [label="DDG: info->attrs[NL80211_ATTR_SCAN_FREQUENCIES]"];
"1000214" -> "1000215"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000214" -> "1000632"  [label="DDG: info->attrs[NL80211_ATTR_SCAN_FREQUENCIES]"];
"1000246" -> "1000240"  [label="AST: "];
"1000246" -> "1000248"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000248" -> "1000246"  [label="AST: "];
"1000239" -> "1000246"  [label="CFG: "];
"1000246" -> "1000632"  [label="DDG: wiphy->bands[band]->n_channels"];
"1000246" -> "1000632"  [label="DDG: n_channels"];
"1000301" -> "1000299"  [label="AST: "];
"1000301" -> "1000323"  [label="CFG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000323" -> "1000301"  [label="AST: "];
"1000299" -> "1000301"  [label="CFG: "];
"1000301" -> "1000632"  [label="DDG: sizeof(*request)\n\t\t\t+ sizeof(*request->ssids) * n_ssids\n\t\t\t+ sizeof(*request->channels) * n_channels\n\t\t\t+ ie_len"];
"1000301" -> "1000632"  [label="DDG: GFP_KERNEL"];
"1000301" -> "1000299"  [label="DDG: sizeof(*request)\n\t\t\t+ sizeof(*request->ssids) * n_ssids\n\t\t\t+ sizeof(*request->channels) * n_channels\n\t\t\t+ ie_len"];
"1000301" -> "1000299"  [label="DDG: GFP_KERNEL"];
"1000307" -> "1000301"  [label="DDG: n_ssids"];
"1000291" -> "1000301"  [label="DDG: ie_len"];
"1000299" -> "1000106"  [label="AST: "];
"1000300" -> "1000299"  [label="AST: "];
"1000326" -> "1000299"  [label="CFG: "];
"1000299" -> "1000632"  [label="DDG: kzalloc(sizeof(*request)\n\t\t\t+ sizeof(*request->ssids) * n_ssids\n\t\t\t+ sizeof(*request->channels) * n_channels\n\t\t\t+ ie_len, GFP_KERNEL)"];
"1000299" -> "1000325"  [label="DDG: request"];
"1000325" -> "1000324"  [label="AST: "];
"1000325" -> "1000326"  [label="CFG: "];
"1000326" -> "1000325"  [label="AST: "];
"1000329" -> "1000325"  [label="CFG: "];
"1000331" -> "1000325"  [label="CFG: "];
"1000325" -> "1000632"  [label="DDG: request"];
"1000325" -> "1000632"  [label="DDG: !request"];
"1000325" -> "1000605"  [label="DDG: request"];
"1000325" -> "1000627"  [label="DDG: request"];
"1000605" -> "1000603"  [label="AST: "];
"1000605" -> "1000611"  [label="CFG: "];
"1000606" -> "1000605"  [label="AST: "];
"1000610" -> "1000605"  [label="AST: "];
"1000611" -> "1000605"  [label="AST: "];
"1000603" -> "1000605"  [label="CFG: "];
"1000605" -> "1000632"  [label="DDG: dev"];
"1000605" -> "1000632"  [label="DDG: &rdev->wiphy"];
"1000605" -> "1000603"  [label="DDG: &rdev->wiphy"];
"1000605" -> "1000603"  [label="DDG: dev"];
"1000605" -> "1000603"  [label="DDG: request"];
"1000117" -> "1000605"  [label="DDG: dev"];
"1000605" -> "1000616"  [label="DDG: request"];
"1000605" -> "1000621"  [label="DDG: dev"];
"1000605" -> "1000627"  [label="DDG: request"];
"1000603" -> "1000106"  [label="AST: "];
"1000604" -> "1000603"  [label="AST: "];
"1000614" -> "1000603"  [label="CFG: "];
"1000603" -> "1000632"  [label="DDG: rdev->ops->sched_scan_start(&rdev->wiphy, dev, request)"];
"1000603" -> "1000613"  [label="DDG: err"];
"1000613" -> "1000612"  [label="AST: "];
"1000613" -> "1000614"  [label="CFG: "];
"1000614" -> "1000613"  [label="AST: "];
"1000618" -> "1000613"  [label="CFG: "];
"1000626" -> "1000613"  [label="CFG: "];
"1000613" -> "1000632"  [label="DDG: err"];
"1000613" -> "1000632"  [label="DDG: !err"];
"1000613" -> "1000630"  [label="DDG: err"];
"1000630" -> "1000106"  [label="AST: "];
"1000630" -> "1000631"  [label="CFG: "];
"1000631" -> "1000630"  [label="AST: "];
"1000632" -> "1000630"  [label="CFG: "];
"1000630" -> "1000632"  [label="DDG: <RET>"];
"1000631" -> "1000630"  [label="DDG: err"];
"1000401" -> "1000630"  [label="DDG: err"];
"1000492" -> "1000630"  [label="DDG: err"];
"1000534" -> "1000630"  [label="DDG: err"];
"1000616" -> "1000615"  [label="AST: "];
"1000616" -> "1000620"  [label="CFG: "];
"1000617" -> "1000616"  [label="AST: "];
"1000620" -> "1000616"  [label="AST: "];
"1000622" -> "1000616"  [label="CFG: "];
"1000616" -> "1000632"  [label="DDG: rdev->sched_scan_req"];
"1000616" -> "1000632"  [label="DDG: request"];
"1000621" -> "1000615"  [label="AST: "];
"1000621" -> "1000624"  [label="CFG: "];
"1000622" -> "1000621"  [label="AST: "];
"1000623" -> "1000621"  [label="AST: "];
"1000624" -> "1000621"  [label="AST: "];
"1000625" -> "1000621"  [label="CFG: "];
"1000621" -> "1000632"  [label="DDG: rdev"];
"1000621" -> "1000632"  [label="DDG: dev"];
"1000621" -> "1000632"  [label="DDG: nl80211_send_sched_scan(rdev, dev,\n\t\t\t\t\tNL80211_CMD_START_SCHED_SCAN)"];
"1000621" -> "1000632"  [label="DDG: NL80211_CMD_START_SCHED_SCAN"];
"1000109" -> "1000621"  [label="DDG: rdev"];
"1000627" -> "1000106"  [label="AST: "];
"1000627" -> "1000628"  [label="CFG: "];
"1000628" -> "1000627"  [label="AST: "];
"1000629" -> "1000627"  [label="CFG: "];
"1000627" -> "1000632"  [label="DDG: kfree(request)"];
"1000627" -> "1000632"  [label="DDG: request"];
"1000302" -> "1000306"  [label="CFG: "];
"1000303" -> "1000302"  [label="AST: "];
"1000306" -> "1000302"  [label="AST: "];
"1000323" -> "1000302"  [label="CFG: "];
"1000302" -> "1000632"  [label="DDG: sizeof(*request->ssids) * n_ssids\n\t\t\t+ sizeof(*request->channels) * n_channels\n\t\t\t+ ie_len"];
"1000307" -> "1000302"  [label="DDG: n_ssids"];
"1000291" -> "1000302"  [label="DDG: ie_len"];
"1000306" -> "1000314"  [label="CFG: "];
"1000307" -> "1000306"  [label="AST: "];
"1000314" -> "1000306"  [label="AST: "];
"1000306" -> "1000632"  [label="DDG: sizeof(*request->ssids) * n_ssids"];
"1000306" -> "1000632"  [label="DDG: sizeof(*request->channels) * n_channels\n\t\t\t+ ie_len"];
"1000307" -> "1000306"  [label="DDG: n_ssids"];
"1000291" -> "1000306"  [label="DDG: ie_len"];
"1000314" -> "1000322"  [label="CFG: "];
"1000322" -> "1000314"  [label="AST: "];
"1000314" -> "1000632"  [label="DDG: sizeof(*request->channels) * n_channels"];
"1000314" -> "1000632"  [label="DDG: ie_len"];
"1000291" -> "1000314"  [label="DDG: ie_len"];
"1000372" -> "1000368"  [label="AST: "];
"1000372" -> "1000374"  [label="CFG: "];
"1000373" -> "1000372"  [label="AST: "];
"1000374" -> "1000372"  [label="AST: "];
"1000368" -> "1000372"  [label="CFG: "];
"1000372" -> "1000632"  [label="DDG: request->channels + n_channels"];
"1000372" -> "1000368"  [label="DDG: request->channels + n_channels"];
"1000368" -> "1000367"  [label="AST: "];
"1000369" -> "1000368"  [label="AST: "];
"1000380" -> "1000368"  [label="CFG: "];
"1000368" -> "1000632"  [label="DDG: request->ie"];
"1000368" -> "1000632"  [label="DDG: (void *)(request->channels + n_channels)"];
"1000368" -> "1000571"  [label="DDG: request->ie"];
"1000571" -> "1000570"  [label="AST: "];
"1000571" -> "1000573"  [label="CFG: "];
"1000572" -> "1000571"  [label="AST: "];
"1000573" -> "1000571"  [label="AST: "];
"1000579" -> "1000571"  [label="CFG: "];
"1000571" -> "1000632"  [label="DDG: request->ie"];
"1000571" -> "1000570"  [label="DDG: request->ie"];
"1000356" -> "1000571"  [label="DDG: request->ie"];
"1000570" -> "1000559"  [label="AST: "];
"1000570" -> "1000582"  [label="CFG: "];
"1000576" -> "1000570"  [label="AST: "];
"1000582" -> "1000570"  [label="AST: "];
"1000587" -> "1000570"  [label="CFG: "];
"1000570" -> "1000632"  [label="DDG: (void *)request->ie"];
"1000570" -> "1000632"  [label="DDG: request->ie_len"];
"1000570" -> "1000632"  [label="DDG: memcpy((void *)request->ie,\n\t\t       nla_data(info->attrs[NL80211_ATTR_IE]),\n\t\t       request->ie_len)"];
"1000570" -> "1000632"  [label="DDG: nla_data(info->attrs[NL80211_ATTR_IE])"];
"1000576" -> "1000570"  [label="DDG: info->attrs[NL80211_ATTR_IE]"];
"1000560" -> "1000570"  [label="DDG: request->ie_len"];
"1000374" -> "1000378"  [label="CFG: "];
"1000375" -> "1000374"  [label="AST: "];
"1000378" -> "1000374"  [label="AST: "];
"1000374" -> "1000632"  [label="DDG: request->channels"];
"1000374" -> "1000632"  [label="DDG: n_channels"];
}
