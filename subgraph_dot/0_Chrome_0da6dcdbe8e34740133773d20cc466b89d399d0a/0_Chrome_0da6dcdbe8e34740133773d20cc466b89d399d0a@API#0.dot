digraph "0_Chrome_0da6dcdbe8e34740133773d20cc466b89d399d0a@API" {
"1000219" [label="(Call,did_send_valid_xss_protection_header_ =\n        xss_protection_header != kReflectedXSSUnset &&\n        xss_protection_header != kReflectedXSSInvalid)"];
"1000221" [label="(Call,xss_protection_header != kReflectedXSSUnset &&\n        xss_protection_header != kReflectedXSSInvalid)"];
"1000222" [label="(Call,xss_protection_header != kReflectedXSSUnset)"];
"1000185" [label="(Call,xss_protection_header == kAllowReflectedXSS)"];
"1000177" [label="(Call,xss_protection_header = ParseXSSProtectionHeader(\n        header_value, error_details, error_position, report_url))"];
"1000179" [label="(Call,ParseXSSProtectionHeader(\n        header_value, error_details, error_position, report_url))"];
"1000165" [label="(Call,& header_value =\n        document_loader->GetResponse().HttpHeaderField(\n            HTTPNames::X_XSS_Protection))"];
"1000167" [label="(Call,document_loader->GetResponse().HttpHeaderField(\n            HTTPNames::X_XSS_Protection))"];
"1000171" [label="(Call,error_position = 0)"];
"1000194" [label="(Call,xss_protection_header == kFilterReflectedXSS)"];
"1000212" [label="(Call,xss_protection_header == kReflectedXSSInvalid)"];
"1000203" [label="(Call,xss_protection_header == kBlockReflectedXSS)"];
"1000225" [label="(Call,xss_protection_header != kReflectedXSSInvalid)"];
"1000204" [label="(Identifier,xss_protection_header)"];
"1000234" [label="(Call,xss_protection_header == kBlockReflectedXSS)"];
"1000227" [label="(Identifier,kReflectedXSSInvalid)"];
"1000283" [label="(Call,header_value + \": \" +\n              error_details + \" at character position \" +\n              String::Format(\"%u\", error_position) +\n              \". The default protections will be applied.\")"];
"1000252" [label="(Call,xss_protection_header = kReflectedXSSInvalid)"];
"1000171" [label="(Call,error_position = 0)"];
"1000214" [label="(Identifier,kReflectedXSSInvalid)"];
"1000308" [label="(Call,xss_protection_ = kBlockReflectedXSS)"];
"1000211" [label="(ControlStructure,if (xss_protection_header == kReflectedXSSInvalid))"];
"1000167" [label="(Call,document_loader->GetResponse().HttpHeaderField(\n            HTTPNames::X_XSS_Protection))"];
"1000193" [label="(ControlStructure,if (xss_protection_header == kFilterReflectedXSS))"];
"1000273" [label="(Call,xss_protection_header == kReflectedXSSInvalid)"];
"1000202" [label="(ControlStructure,if (xss_protection_header == kBlockReflectedXSS))"];
"1000219" [label="(Call,did_send_valid_xss_protection_header_ =\n        xss_protection_header != kReflectedXSSUnset &&\n        xss_protection_header != kReflectedXSSInvalid)"];
"1000287" [label="(Call,error_details + \" at character position \" +\n              String::Format(\"%u\", error_position) +\n              \". The default protections will be applied.\")"];
"1000213" [label="(Identifier,xss_protection_header)"];
"1000184" [label="(ControlStructure,if (xss_protection_header == kAllowReflectedXSS))"];
"1000208" [label="(Identifier,document)"];
"1000329" [label="(MethodReturn,void)"];
"1000165" [label="(Call,& header_value =\n        document_loader->GetResponse().HttpHeaderField(\n            HTTPNames::X_XSS_Protection))"];
"1000224" [label="(Identifier,kReflectedXSSUnset)"];
"1000180" [label="(Identifier,header_value)"];
"1000232" [label="(Identifier,xss_protection_header)"];
"1000177" [label="(Call,xss_protection_header = ParseXSSProtectionHeader(\n        header_value, error_details, error_position, report_url))"];
"1000195" [label="(Identifier,xss_protection_header)"];
"1000231" [label="(Call,xss_protection_header == kFilterReflectedXSS)"];
"1000178" [label="(Identifier,xss_protection_header)"];
"1000194" [label="(Call,xss_protection_header == kFilterReflectedXSS)"];
"1000212" [label="(Call,xss_protection_header == kReflectedXSSInvalid)"];
"1000223" [label="(Identifier,xss_protection_header)"];
"1000304" [label="(Call,xss_protection_ == kReflectedXSSUnset)"];
"1000292" [label="(Call,String::Format(\"%u\", error_position))"];
"1000266" [label="(Call,xss_protection_header = kReflectedXSSInvalid)"];
"1000182" [label="(Identifier,error_position)"];
"1000242" [label="(Call,document->CompleteURL(report_url))"];
"1000163" [label="(Block,)"];
"1000186" [label="(Identifier,xss_protection_header)"];
"1000190" [label="(Identifier,document)"];
"1000168" [label="(Identifier,HTTPNames::X_XSS_Protection)"];
"1000166" [label="(Identifier,header_value)"];
"1000221" [label="(Call,xss_protection_header != kReflectedXSSUnset &&\n        xss_protection_header != kReflectedXSSInvalid)"];
"1000187" [label="(Identifier,kAllowReflectedXSS)"];
"1000278" [label="(Call,ConsoleMessage::Create(\n          kSecurityMessageSource, kErrorMessageLevel,\n          \"Error parsing header X-XSS-Protection: \" + header_value + \": \" +\n              error_details + \" at character position \" +\n              String::Format(\"%u\", error_position) +\n              \". The default protections will be applied.\"))"];
"1000173" [label="(Literal,0)"];
"1000183" [label="(Identifier,report_url)"];
"1000222" [label="(Call,xss_protection_header != kReflectedXSSUnset)"];
"1000220" [label="(Identifier,did_send_valid_xss_protection_header_)"];
"1000179" [label="(Call,ParseXSSProtectionHeader(\n        header_value, error_details, error_position, report_url))"];
"1000199" [label="(Identifier,document)"];
"1000226" [label="(Identifier,xss_protection_header)"];
"1000225" [label="(Call,xss_protection_header != kReflectedXSSInvalid)"];
"1000230" [label="(Call,xss_protection_header == kFilterReflectedXSS ||\n          xss_protection_header == kBlockReflectedXSS)"];
"1000172" [label="(Identifier,error_position)"];
"1000205" [label="(Identifier,kBlockReflectedXSS)"];
"1000203" [label="(Call,xss_protection_header == kBlockReflectedXSS)"];
"1000281" [label="(Call,\"Error parsing header X-XSS-Protection: \" + header_value + \": \" +\n              error_details + \" at character position \" +\n              String::Format(\"%u\", error_position) +\n              \". The default protections will be applied.\")"];
"1000285" [label="(Call,\": \" +\n              error_details + \" at character position \" +\n              String::Format(\"%u\", error_position) +\n              \". The default protections will be applied.\")"];
"1000196" [label="(Identifier,kFilterReflectedXSS)"];
"1000181" [label="(Identifier,error_details)"];
"1000217" [label="(Identifier,document)"];
"1000185" [label="(Call,xss_protection_header == kAllowReflectedXSS)"];
"1000219" -> "1000163"  [label="AST: "];
"1000219" -> "1000221"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000221" -> "1000219"  [label="AST: "];
"1000232" -> "1000219"  [label="CFG: "];
"1000219" -> "1000329"  [label="DDG: xss_protection_header != kReflectedXSSUnset &&\n        xss_protection_header != kReflectedXSSInvalid"];
"1000219" -> "1000329"  [label="DDG: did_send_valid_xss_protection_header_"];
"1000221" -> "1000219"  [label="DDG: xss_protection_header != kReflectedXSSUnset"];
"1000221" -> "1000219"  [label="DDG: xss_protection_header != kReflectedXSSInvalid"];
"1000221" -> "1000222"  [label="CFG: "];
"1000221" -> "1000225"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000225" -> "1000221"  [label="AST: "];
"1000221" -> "1000329"  [label="DDG: xss_protection_header != kReflectedXSSInvalid"];
"1000221" -> "1000329"  [label="DDG: xss_protection_header != kReflectedXSSUnset"];
"1000222" -> "1000221"  [label="DDG: xss_protection_header"];
"1000222" -> "1000221"  [label="DDG: kReflectedXSSUnset"];
"1000225" -> "1000221"  [label="DDG: xss_protection_header"];
"1000225" -> "1000221"  [label="DDG: kReflectedXSSInvalid"];
"1000222" -> "1000224"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000224" -> "1000222"  [label="AST: "];
"1000226" -> "1000222"  [label="CFG: "];
"1000222" -> "1000329"  [label="DDG: kReflectedXSSUnset"];
"1000185" -> "1000222"  [label="DDG: xss_protection_header"];
"1000194" -> "1000222"  [label="DDG: xss_protection_header"];
"1000212" -> "1000222"  [label="DDG: xss_protection_header"];
"1000203" -> "1000222"  [label="DDG: xss_protection_header"];
"1000222" -> "1000225"  [label="DDG: xss_protection_header"];
"1000222" -> "1000231"  [label="DDG: xss_protection_header"];
"1000222" -> "1000304"  [label="DDG: kReflectedXSSUnset"];
"1000185" -> "1000184"  [label="AST: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="AST: "];
"1000190" -> "1000185"  [label="CFG: "];
"1000195" -> "1000185"  [label="CFG: "];
"1000185" -> "1000329"  [label="DDG: xss_protection_header == kAllowReflectedXSS"];
"1000185" -> "1000329"  [label="DDG: kAllowReflectedXSS"];
"1000177" -> "1000185"  [label="DDG: xss_protection_header"];
"1000185" -> "1000194"  [label="DDG: xss_protection_header"];
"1000177" -> "1000163"  [label="AST: "];
"1000177" -> "1000179"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000179" -> "1000177"  [label="AST: "];
"1000186" -> "1000177"  [label="CFG: "];
"1000177" -> "1000329"  [label="DDG: ParseXSSProtectionHeader(\n        header_value, error_details, error_position, report_url)"];
"1000179" -> "1000177"  [label="DDG: header_value"];
"1000179" -> "1000177"  [label="DDG: error_details"];
"1000179" -> "1000177"  [label="DDG: error_position"];
"1000179" -> "1000177"  [label="DDG: report_url"];
"1000179" -> "1000183"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000181" -> "1000179"  [label="AST: "];
"1000182" -> "1000179"  [label="AST: "];
"1000183" -> "1000179"  [label="AST: "];
"1000179" -> "1000329"  [label="DDG: error_position"];
"1000179" -> "1000329"  [label="DDG: error_details"];
"1000179" -> "1000329"  [label="DDG: header_value"];
"1000179" -> "1000329"  [label="DDG: report_url"];
"1000165" -> "1000179"  [label="DDG: header_value"];
"1000171" -> "1000179"  [label="DDG: error_position"];
"1000179" -> "1000242"  [label="DDG: report_url"];
"1000179" -> "1000278"  [label="DDG: header_value"];
"1000179" -> "1000278"  [label="DDG: error_details"];
"1000179" -> "1000281"  [label="DDG: header_value"];
"1000179" -> "1000281"  [label="DDG: error_details"];
"1000179" -> "1000283"  [label="DDG: header_value"];
"1000179" -> "1000283"  [label="DDG: error_details"];
"1000179" -> "1000285"  [label="DDG: error_details"];
"1000179" -> "1000287"  [label="DDG: error_details"];
"1000179" -> "1000292"  [label="DDG: error_position"];
"1000165" -> "1000163"  [label="AST: "];
"1000165" -> "1000167"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000167" -> "1000165"  [label="AST: "];
"1000172" -> "1000165"  [label="CFG: "];
"1000165" -> "1000329"  [label="DDG: document_loader->GetResponse().HttpHeaderField(\n            HTTPNames::X_XSS_Protection)"];
"1000167" -> "1000165"  [label="DDG: HTTPNames::X_XSS_Protection"];
"1000167" -> "1000168"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000167" -> "1000329"  [label="DDG: HTTPNames::X_XSS_Protection"];
"1000171" -> "1000163"  [label="AST: "];
"1000171" -> "1000173"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="AST: "];
"1000178" -> "1000171"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000194" -> "1000196"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000196" -> "1000194"  [label="AST: "];
"1000199" -> "1000194"  [label="CFG: "];
"1000204" -> "1000194"  [label="CFG: "];
"1000194" -> "1000203"  [label="DDG: xss_protection_header"];
"1000194" -> "1000231"  [label="DDG: kFilterReflectedXSS"];
"1000212" -> "1000211"  [label="AST: "];
"1000212" -> "1000214"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000214" -> "1000212"  [label="AST: "];
"1000217" -> "1000212"  [label="CFG: "];
"1000220" -> "1000212"  [label="CFG: "];
"1000203" -> "1000212"  [label="DDG: xss_protection_header"];
"1000212" -> "1000225"  [label="DDG: kReflectedXSSInvalid"];
"1000212" -> "1000252"  [label="DDG: kReflectedXSSInvalid"];
"1000212" -> "1000266"  [label="DDG: kReflectedXSSInvalid"];
"1000212" -> "1000273"  [label="DDG: kReflectedXSSInvalid"];
"1000203" -> "1000202"  [label="AST: "];
"1000203" -> "1000205"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000203"  [label="AST: "];
"1000208" -> "1000203"  [label="CFG: "];
"1000213" -> "1000203"  [label="CFG: "];
"1000203" -> "1000329"  [label="DDG: kBlockReflectedXSS"];
"1000203" -> "1000230"  [label="DDG: xss_protection_header == kBlockReflectedXSS"];
"1000203" -> "1000234"  [label="DDG: kBlockReflectedXSS"];
"1000203" -> "1000308"  [label="DDG: kBlockReflectedXSS"];
"1000225" -> "1000227"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000227" -> "1000225"  [label="AST: "];
"1000225" -> "1000231"  [label="DDG: xss_protection_header"];
"1000225" -> "1000252"  [label="DDG: kReflectedXSSInvalid"];
"1000225" -> "1000266"  [label="DDG: kReflectedXSSInvalid"];
"1000225" -> "1000273"  [label="DDG: kReflectedXSSInvalid"];
}
