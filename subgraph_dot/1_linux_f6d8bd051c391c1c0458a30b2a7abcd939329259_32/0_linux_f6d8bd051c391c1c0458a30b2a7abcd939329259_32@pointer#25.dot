digraph "0_linux_f6d8bd051c391c1c0458a30b2a7abcd939329259_32@pointer" {
"1000602" [label="(Call,ipc.addr = rt->rt_dst)"];
"1000600" [label="(Call,daddr = ipc.addr = rt->rt_dst)"];
"1000643" [label="(Call,udp_send_skb(skb, daddr, dport))"];
"1000641" [label="(Call,err = udp_send_skb(skb, daddr, dport))"];
"1000770" [label="(Call,!err)"];
"1000776" [label="(Call,err == -ENOBUFS)"];
"1000775" [label="(Call,err == -ENOBUFS || test_bit(SOCK_NOSPACE, &sk->sk_socket->flags))"];
"1000794" [label="(Return,return err;)"];
"1000675" [label="(Call,fl4->daddr = daddr)"];
"1000781" [label="(Identifier,SOCK_NOSPACE)"];
"1000309" [label="(Call,dport = inet->inet_dport)"];
"1000770" [label="(Call,!err)"];
"1000769" [label="(ControlStructure,if (!err))"];
"1000643" [label="(Call,udp_send_skb(skb, daddr, dport))"];
"1000647" [label="(ControlStructure,goto out;)"];
"1000791" [label="(Identifier,sk)"];
"1000595" [label="(ControlStructure,if (!ipc.addr))"];
"1000287" [label="(Call,dport == 0)"];
"1000644" [label="(Identifier,skb)"];
"1000778" [label="(Call,-ENOBUFS)"];
"1000115" [label="(Block,)"];
"1000775" [label="(Call,err == -ENOBUFS || test_bit(SOCK_NOSPACE, &sk->sk_socket->flags))"];
"1000611" [label="(Identifier,corkreq)"];
"1000708" [label="(Call,err = ip_append_data(sk, getfrag, msg->msg_iov, ulen,\n\t\t\tsizeof(struct udphdr), &ipc, &rt,\n\t\t\tcorkreq ? msg->msg_flags|MSG_MORE : msg->msg_flags))"];
"1000774" [label="(ControlStructure,if (err == -ENOBUFS || test_bit(SOCK_NOSPACE, &sk->sk_socket->flags)))"];
"1000675" [label="(Call,fl4->daddr = daddr)"];
"1000636" [label="(Call,skb && !IS_ERR(skb))"];
"1000780" [label="(Call,test_bit(SOCK_NOSPACE, &sk->sk_socket->flags))"];
"1000606" [label="(Call,rt->rt_dst)"];
"1000741" [label="(Call,err = udp_push_pending_frames(sk))"];
"1000549" [label="(Call,err == -ENETUNREACH)"];
"1000682" [label="(Identifier,fl4)"];
"1000635" [label="(ControlStructure,if (skb && !IS_ERR(skb)))"];
"1000773" [label="(Identifier,len)"];
"1000676" [label="(Call,fl4->daddr)"];
"1000777" [label="(Identifier,err)"];
"1000557" [label="(Call,err = -EACCES)"];
"1000795" [label="(Identifier,err)"];
"1000601" [label="(Identifier,daddr)"];
"1000646" [label="(Identifier,dport)"];
"1000631" [label="(Call,err = PTR_ERR(skb))"];
"1000658" [label="(Call,err = -EINVAL)"];
"1000776" [label="(Call,err == -ENOBUFS)"];
"1000812" [label="(Call,err = 0)"];
"1000602" [label="(Call,ipc.addr = rt->rt_dst)"];
"1000679" [label="(Identifier,daddr)"];
"1000501" [label="(Call,flowi4_init_output(&fl4, ipc.oif, sk->sk_mark, tos,\n\t\t\t\t   RT_SCOPE_UNIVERSE, sk->sk_protocol,\n\t\t\t\t   inet_sk_flowi_flags(sk)|FLOWI_FLAG_CAN_SLEEP,\n\t\t\t\t   faddr, saddr, dport, inet->inet_sport))"];
"1000645" [label="(Identifier,daddr)"];
"1000600" [label="(Call,daddr = ipc.addr = rt->rt_dst)"];
"1000642" [label="(Identifier,err)"];
"1000641" [label="(Call,err = udp_send_skb(skb, daddr, dport))"];
"1000455" [label="(Call,ipv4_is_multicast(daddr))"];
"1000603" [label="(Call,ipc.addr)"];
"1000771" [label="(Identifier,err)"];
"1000794" [label="(Return,return err;)"];
"1000816" [label="(MethodReturn,int)"];
"1000602" -> "1000600"  [label="AST: "];
"1000602" -> "1000606"  [label="CFG: "];
"1000603" -> "1000602"  [label="AST: "];
"1000606" -> "1000602"  [label="AST: "];
"1000600" -> "1000602"  [label="CFG: "];
"1000602" -> "1000816"  [label="DDG: ipc.addr"];
"1000602" -> "1000816"  [label="DDG: rt->rt_dst"];
"1000602" -> "1000600"  [label="DDG: ipc.addr"];
"1000600" -> "1000595"  [label="AST: "];
"1000601" -> "1000600"  [label="AST: "];
"1000611" -> "1000600"  [label="CFG: "];
"1000600" -> "1000816"  [label="DDG: daddr"];
"1000600" -> "1000643"  [label="DDG: daddr"];
"1000600" -> "1000675"  [label="DDG: daddr"];
"1000643" -> "1000641"  [label="AST: "];
"1000643" -> "1000646"  [label="CFG: "];
"1000644" -> "1000643"  [label="AST: "];
"1000645" -> "1000643"  [label="AST: "];
"1000646" -> "1000643"  [label="AST: "];
"1000641" -> "1000643"  [label="CFG: "];
"1000643" -> "1000816"  [label="DDG: dport"];
"1000643" -> "1000816"  [label="DDG: skb"];
"1000643" -> "1000816"  [label="DDG: daddr"];
"1000643" -> "1000641"  [label="DDG: skb"];
"1000643" -> "1000641"  [label="DDG: daddr"];
"1000643" -> "1000641"  [label="DDG: dport"];
"1000636" -> "1000643"  [label="DDG: skb"];
"1000455" -> "1000643"  [label="DDG: daddr"];
"1000309" -> "1000643"  [label="DDG: dport"];
"1000501" -> "1000643"  [label="DDG: dport"];
"1000287" -> "1000643"  [label="DDG: dport"];
"1000641" -> "1000635"  [label="AST: "];
"1000642" -> "1000641"  [label="AST: "];
"1000647" -> "1000641"  [label="CFG: "];
"1000641" -> "1000816"  [label="DDG: udp_send_skb(skb, daddr, dport)"];
"1000641" -> "1000770"  [label="DDG: err"];
"1000770" -> "1000769"  [label="AST: "];
"1000770" -> "1000771"  [label="CFG: "];
"1000771" -> "1000770"  [label="AST: "];
"1000773" -> "1000770"  [label="CFG: "];
"1000777" -> "1000770"  [label="CFG: "];
"1000770" -> "1000816"  [label="DDG: !err"];
"1000770" -> "1000816"  [label="DDG: err"];
"1000708" -> "1000770"  [label="DDG: err"];
"1000631" -> "1000770"  [label="DDG: err"];
"1000557" -> "1000770"  [label="DDG: err"];
"1000812" -> "1000770"  [label="DDG: err"];
"1000658" -> "1000770"  [label="DDG: err"];
"1000549" -> "1000770"  [label="DDG: err"];
"1000741" -> "1000770"  [label="DDG: err"];
"1000770" -> "1000776"  [label="DDG: err"];
"1000776" -> "1000775"  [label="AST: "];
"1000776" -> "1000778"  [label="CFG: "];
"1000777" -> "1000776"  [label="AST: "];
"1000778" -> "1000776"  [label="AST: "];
"1000781" -> "1000776"  [label="CFG: "];
"1000775" -> "1000776"  [label="CFG: "];
"1000776" -> "1000816"  [label="DDG: err"];
"1000776" -> "1000816"  [label="DDG: -ENOBUFS"];
"1000776" -> "1000775"  [label="DDG: err"];
"1000776" -> "1000775"  [label="DDG: -ENOBUFS"];
"1000778" -> "1000776"  [label="DDG: ENOBUFS"];
"1000776" -> "1000794"  [label="DDG: err"];
"1000775" -> "1000774"  [label="AST: "];
"1000775" -> "1000780"  [label="CFG: "];
"1000780" -> "1000775"  [label="AST: "];
"1000791" -> "1000775"  [label="CFG: "];
"1000795" -> "1000775"  [label="CFG: "];
"1000775" -> "1000816"  [label="DDG: test_bit(SOCK_NOSPACE, &sk->sk_socket->flags)"];
"1000775" -> "1000816"  [label="DDG: err == -ENOBUFS"];
"1000775" -> "1000816"  [label="DDG: err == -ENOBUFS || test_bit(SOCK_NOSPACE, &sk->sk_socket->flags)"];
"1000780" -> "1000775"  [label="DDG: SOCK_NOSPACE"];
"1000780" -> "1000775"  [label="DDG: &sk->sk_socket->flags"];
"1000794" -> "1000115"  [label="AST: "];
"1000794" -> "1000795"  [label="CFG: "];
"1000795" -> "1000794"  [label="AST: "];
"1000816" -> "1000794"  [label="CFG: "];
"1000794" -> "1000816"  [label="DDG: <RET>"];
"1000795" -> "1000794"  [label="DDG: err"];
"1000675" -> "1000115"  [label="AST: "];
"1000675" -> "1000679"  [label="CFG: "];
"1000676" -> "1000675"  [label="AST: "];
"1000679" -> "1000675"  [label="AST: "];
"1000682" -> "1000675"  [label="CFG: "];
"1000675" -> "1000816"  [label="DDG: fl4->daddr"];
"1000675" -> "1000816"  [label="DDG: daddr"];
"1000455" -> "1000675"  [label="DDG: daddr"];
}
