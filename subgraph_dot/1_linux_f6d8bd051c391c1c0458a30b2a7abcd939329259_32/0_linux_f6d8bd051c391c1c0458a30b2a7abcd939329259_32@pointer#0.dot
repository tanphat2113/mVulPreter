digraph "0_linux_f6d8bd051c391c1c0458a30b2a7abcd939329259_32@pointer" {
"1000577" [label="(Call,dst_clone(&rt->dst))"];
"1000575" [label="(Call,sk_dst_set(sk, dst_clone(&rt->dst)))"];
"1000615" [label="(Call,ip_make_skb(sk, getfrag, msg->msg_iov, ulen,\n\t\t\t\t  sizeof(struct udphdr), &ipc, &rt,\n\t\t\t\t  msg->msg_flags))"];
"1000613" [label="(Call,skb = ip_make_skb(sk, getfrag, msg->msg_iov, ulen,\n\t\t\t\t  sizeof(struct udphdr), &ipc, &rt,\n\t\t\t\t  msg->msg_flags))"];
"1000633" [label="(Call,PTR_ERR(skb))"];
"1000631" [label="(Call,err = PTR_ERR(skb))"];
"1000770" [label="(Call,!err)"];
"1000776" [label="(Call,err == -ENOBUFS)"];
"1000775" [label="(Call,err == -ENOBUFS || test_bit(SOCK_NOSPACE, &sk->sk_socket->flags))"];
"1000794" [label="(Return,return err;)"];
"1000636" [label="(Call,skb && !IS_ERR(skb))"];
"1000643" [label="(Call,udp_send_skb(skb, daddr, dport))"];
"1000641" [label="(Call,err = udp_send_skb(skb, daddr, dport))"];
"1000639" [label="(Call,IS_ERR(skb))"];
"1000638" [label="(Call,!IS_ERR(skb))"];
"1000790" [label="(Call,sock_net(sk))"];
"1000789" [label="(Call,UDP_INC_STATS_USER(sock_net(sk),\n\t\t\t\tUDP_MIB_SNDBUFERRORS, is_udplite))"];
"1000648" [label="(Call,lock_sock(sk))"];
"1000656" [label="(Call,release_sock(sk))"];
"1000710" [label="(Call,ip_append_data(sk, getfrag, msg->msg_iov, ulen,\n\t\t\tsizeof(struct udphdr), &ipc, &rt,\n\t\t\tcorkreq ? msg->msg_flags|MSG_MORE : msg->msg_flags))"];
"1000708" [label="(Call,err = ip_append_data(sk, getfrag, msg->msg_iov, ulen,\n\t\t\tsizeof(struct udphdr), &ipc, &rt,\n\t\t\tcorkreq ? msg->msg_flags|MSG_MORE : msg->msg_flags))"];
"1000735" [label="(Call,udp_flush_pending_frames(sk))"];
"1000758" [label="(Call,release_sock(sk))"];
"1000743" [label="(Call,udp_push_pending_frames(sk))"];
"1000741" [label="(Call,err = udp_push_pending_frames(sk))"];
"1000797" [label="(Call,dst_confirm(&rt->dst))"];
"1000716" [label="(Identifier,ulen)"];
"1000769" [label="(ControlStructure,if (!err))"];
"1000230" [label="(Call,ulen += sizeof(struct udphdr))"];
"1000647" [label="(ControlStructure,goto out;)"];
"1000743" [label="(Call,udp_push_pending_frames(sk))"];
"1000633" [label="(Call,PTR_ERR(skb))"];
"1000614" [label="(Identifier,skb)"];
"1000792" [label="(Identifier,UDP_MIB_SNDBUFERRORS)"];
"1000725" [label="(Call,msg->msg_flags|MSG_MORE)"];
"1000575" [label="(Call,sk_dst_set(sk, dst_clone(&rt->dst)))"];
"1000177" [label="(Call,msg->msg_flags & MSG_OOB)"];
"1000115" [label="(Block,)"];
"1000797" [label="(Call,dst_confirm(&rt->dst))"];
"1000628" [label="(Call,msg->msg_flags)"];
"1000708" [label="(Call,err = ip_append_data(sk, getfrag, msg->msg_iov, ulen,\n\t\t\tsizeof(struct udphdr), &ipc, &rt,\n\t\t\tcorkreq ? msg->msg_flags|MSG_MORE : msg->msg_flags))"];
"1000206" [label="(Call,lock_sock(sk))"];
"1000733" [label="(ControlStructure,if (err))"];
"1000549" [label="(Call,err == -ENETUNREACH)"];
"1000557" [label="(Call,err = -EACCES)"];
"1000758" [label="(Call,release_sock(sk))"];
"1000645" [label="(Identifier,daddr)"];
"1000798" [label="(Call,&rt->dst)"];
"1000626" [label="(Call,&rt)"];
"1000771" [label="(Identifier,err)"];
"1000794" [label="(Return,return err;)"];
"1000639" [label="(Call,IS_ERR(skb))"];
"1000760" [label="(JumpTarget,out:)"];
"1000624" [label="(Call,&ipc)"];
"1000711" [label="(Identifier,sk)"];
"1000649" [label="(Identifier,sk)"];
"1000643" [label="(Call,udp_send_skb(skb, daddr, dport))"];
"1000717" [label="(Call,sizeof(struct udphdr))"];
"1000723" [label="(Call,corkreq ? msg->msg_flags|MSG_MORE : msg->msg_flags)"];
"1000632" [label="(Identifier,err)"];
"1000719" [label="(Call,&ipc)"];
"1000644" [label="(Identifier,skb)"];
"1000735" [label="(Call,udp_flush_pending_frames(sk))"];
"1000774" [label="(ControlStructure,if (err == -ENOBUFS || test_bit(SOCK_NOSPACE, &sk->sk_socket->flags)))"];
"1000636" [label="(Call,skb && !IS_ERR(skb))"];
"1000790" [label="(Call,sock_net(sk))"];
"1000721" [label="(Call,&rt)"];
"1000635" [label="(ControlStructure,if (skb && !IS_ERR(skb)))"];
"1000617" [label="(Identifier,getfrag)"];
"1000759" [label="(Identifier,sk)"];
"1000350" [label="(Call,ip_cmsg_send(sock_net(sk), msg, &ipc))"];
"1000573" [label="(ControlStructure,if (connected))"];
"1000631" [label="(Call,err = PTR_ERR(skb))"];
"1000634" [label="(Identifier,skb)"];
"1000613" [label="(Call,skb = ip_make_skb(sk, getfrag, msg->msg_iov, ulen,\n\t\t\t\t  sizeof(struct udphdr), &ipc, &rt,\n\t\t\t\t  msg->msg_flags))"];
"1000501" [label="(Call,flowi4_init_output(&fl4, ipc.oif, sk->sk_mark, tos,\n\t\t\t\t   RT_SCOPE_UNIVERSE, sk->sk_protocol,\n\t\t\t\t   inet_sk_flowi_flags(sk)|FLOWI_FLAG_CAN_SLEEP,\n\t\t\t\t   faddr, saddr, dport, inet->inet_sport))"];
"1000712" [label="(Identifier,getfrag)"];
"1000659" [label="(Identifier,err)"];
"1000455" [label="(Call,ipv4_is_multicast(daddr))"];
"1000638" [label="(Call,!IS_ERR(skb))"];
"1000738" [label="(ControlStructure,if (!corkreq))"];
"1000616" [label="(Identifier,sk)"];
"1000770" [label="(Call,!err)"];
"1000710" [label="(Call,ip_append_data(sk, getfrag, msg->msg_iov, ulen,\n\t\t\tsizeof(struct udphdr), &ipc, &rt,\n\t\t\tcorkreq ? msg->msg_flags|MSG_MORE : msg->msg_flags))"];
"1000791" [label="(Identifier,sk)"];
"1000287" [label="(Call,dport == 0)"];
"1000618" [label="(Call,msg->msg_iov)"];
"1000577" [label="(Call,dst_clone(&rt->dst))"];
"1000112" [label="(MethodParameterIn,struct sock *sk)"];
"1000653" [label="(Identifier,up)"];
"1000775" [label="(Call,err == -ENOBUFS || test_bit(SOCK_NOSPACE, &sk->sk_socket->flags))"];
"1000656" [label="(Call,release_sock(sk))"];
"1000637" [label="(Identifier,skb)"];
"1000780" [label="(Call,test_bit(SOCK_NOSPACE, &sk->sk_socket->flags))"];
"1000777" [label="(Identifier,err)"];
"1000793" [label="(Identifier,is_udplite)"];
"1000615" [label="(Call,ip_make_skb(sk, getfrag, msg->msg_iov, ulen,\n\t\t\t\t  sizeof(struct udphdr), &ipc, &rt,\n\t\t\t\t  msg->msg_flags))"];
"1000646" [label="(Identifier,dport)"];
"1000734" [label="(Identifier,err)"];
"1000658" [label="(Call,err = -EINVAL)"];
"1000776" [label="(Call,err == -ENOBUFS)"];
"1000600" [label="(Call,daddr = ipc.addr = rt->rt_dst)"];
"1000578" [label="(Call,&rt->dst)"];
"1000744" [label="(Identifier,sk)"];
"1000195" [label="(Call,getfrag = is_udplite ? udplite_getfrag : ip_generic_getfrag)"];
"1000576" [label="(Identifier,sk)"];
"1000736" [label="(Identifier,sk)"];
"1000532" [label="(Call,ip_route_output_flow(net, &fl4, sk))"];
"1000621" [label="(Identifier,ulen)"];
"1000641" [label="(Call,err = udp_send_skb(skb, daddr, dport))"];
"1000788" [label="(Block,)"];
"1000816" [label="(MethodReturn,int)"];
"1000807" [label="(Identifier,msg)"];
"1000781" [label="(Identifier,SOCK_NOSPACE)"];
"1000128" [label="(Call,ulen = len)"];
"1000309" [label="(Call,dport = inet->inet_dport)"];
"1000429" [label="(Call,sock_flag(sk, SOCK_LOCALROUTE))"];
"1000657" [label="(Identifier,sk)"];
"1000569" [label="(Call,sock_flag(sk, SOCK_BROADCAST))"];
"1000778" [label="(Call,-ENOBUFS)"];
"1000805" [label="(Call,msg->msg_flags&MSG_PROBE)"];
"1000583" [label="(Call,msg->msg_flags&MSG_CONFIRM)"];
"1000640" [label="(Identifier,skb)"];
"1000789" [label="(Call,UDP_INC_STATS_USER(sock_net(sk),\n\t\t\t\tUDP_MIB_SNDBUFERRORS, is_udplite))"];
"1000741" [label="(Call,err = udp_push_pending_frames(sk))"];
"1000773" [label="(Identifier,len)"];
"1000487" [label="(Call,sk_dst_check(sk, 0))"];
"1000622" [label="(Call,sizeof(struct udphdr))"];
"1000795" [label="(Identifier,err)"];
"1000812" [label="(Call,err = 0)"];
"1000713" [label="(Call,msg->msg_iov)"];
"1000642" [label="(Identifier,err)"];
"1000612" [label="(Block,)"];
"1000585" [label="(Identifier,msg)"];
"1000648" [label="(Call,lock_sock(sk))"];
"1000655" [label="(Block,)"];
"1000742" [label="(Identifier,err)"];
"1000709" [label="(Identifier,err)"];
"1000577" -> "1000575"  [label="AST: "];
"1000577" -> "1000578"  [label="CFG: "];
"1000578" -> "1000577"  [label="AST: "];
"1000575" -> "1000577"  [label="CFG: "];
"1000577" -> "1000816"  [label="DDG: &rt->dst"];
"1000577" -> "1000575"  [label="DDG: &rt->dst"];
"1000577" -> "1000797"  [label="DDG: &rt->dst"];
"1000575" -> "1000573"  [label="AST: "];
"1000576" -> "1000575"  [label="AST: "];
"1000585" -> "1000575"  [label="CFG: "];
"1000575" -> "1000816"  [label="DDG: sk_dst_set(sk, dst_clone(&rt->dst))"];
"1000575" -> "1000816"  [label="DDG: dst_clone(&rt->dst)"];
"1000575" -> "1000816"  [label="DDG: sk"];
"1000532" -> "1000575"  [label="DDG: sk"];
"1000569" -> "1000575"  [label="DDG: sk"];
"1000112" -> "1000575"  [label="DDG: sk"];
"1000575" -> "1000615"  [label="DDG: sk"];
"1000575" -> "1000648"  [label="DDG: sk"];
"1000575" -> "1000790"  [label="DDG: sk"];
"1000615" -> "1000613"  [label="AST: "];
"1000615" -> "1000628"  [label="CFG: "];
"1000616" -> "1000615"  [label="AST: "];
"1000617" -> "1000615"  [label="AST: "];
"1000618" -> "1000615"  [label="AST: "];
"1000621" -> "1000615"  [label="AST: "];
"1000622" -> "1000615"  [label="AST: "];
"1000624" -> "1000615"  [label="AST: "];
"1000626" -> "1000615"  [label="AST: "];
"1000628" -> "1000615"  [label="AST: "];
"1000613" -> "1000615"  [label="CFG: "];
"1000615" -> "1000816"  [label="DDG: &rt"];
"1000615" -> "1000816"  [label="DDG: msg->msg_iov"];
"1000615" -> "1000816"  [label="DDG: getfrag"];
"1000615" -> "1000816"  [label="DDG: ulen"];
"1000615" -> "1000816"  [label="DDG: sk"];
"1000615" -> "1000816"  [label="DDG: &ipc"];
"1000615" -> "1000816"  [label="DDG: msg->msg_flags"];
"1000615" -> "1000613"  [label="DDG: sk"];
"1000615" -> "1000613"  [label="DDG: msg->msg_iov"];
"1000615" -> "1000613"  [label="DDG: msg->msg_flags"];
"1000615" -> "1000613"  [label="DDG: ulen"];
"1000615" -> "1000613"  [label="DDG: &rt"];
"1000615" -> "1000613"  [label="DDG: getfrag"];
"1000615" -> "1000613"  [label="DDG: &ipc"];
"1000487" -> "1000615"  [label="DDG: sk"];
"1000532" -> "1000615"  [label="DDG: sk"];
"1000569" -> "1000615"  [label="DDG: sk"];
"1000429" -> "1000615"  [label="DDG: sk"];
"1000112" -> "1000615"  [label="DDG: sk"];
"1000195" -> "1000615"  [label="DDG: getfrag"];
"1000230" -> "1000615"  [label="DDG: ulen"];
"1000350" -> "1000615"  [label="DDG: &ipc"];
"1000805" -> "1000615"  [label="DDG: msg->msg_flags"];
"1000583" -> "1000615"  [label="DDG: msg->msg_flags"];
"1000615" -> "1000790"  [label="DDG: sk"];
"1000613" -> "1000612"  [label="AST: "];
"1000614" -> "1000613"  [label="AST: "];
"1000632" -> "1000613"  [label="CFG: "];
"1000613" -> "1000816"  [label="DDG: ip_make_skb(sk, getfrag, msg->msg_iov, ulen,\n\t\t\t\t  sizeof(struct udphdr), &ipc, &rt,\n\t\t\t\t  msg->msg_flags)"];
"1000613" -> "1000633"  [label="DDG: skb"];
"1000633" -> "1000631"  [label="AST: "];
"1000633" -> "1000634"  [label="CFG: "];
"1000634" -> "1000633"  [label="AST: "];
"1000631" -> "1000633"  [label="CFG: "];
"1000633" -> "1000631"  [label="DDG: skb"];
"1000633" -> "1000636"  [label="DDG: skb"];
"1000633" -> "1000639"  [label="DDG: skb"];
"1000631" -> "1000612"  [label="AST: "];
"1000632" -> "1000631"  [label="AST: "];
"1000637" -> "1000631"  [label="CFG: "];
"1000631" -> "1000816"  [label="DDG: PTR_ERR(skb)"];
"1000631" -> "1000770"  [label="DDG: err"];
"1000770" -> "1000769"  [label="AST: "];
"1000770" -> "1000771"  [label="CFG: "];
"1000771" -> "1000770"  [label="AST: "];
"1000773" -> "1000770"  [label="CFG: "];
"1000777" -> "1000770"  [label="CFG: "];
"1000770" -> "1000816"  [label="DDG: !err"];
"1000770" -> "1000816"  [label="DDG: err"];
"1000708" -> "1000770"  [label="DDG: err"];
"1000557" -> "1000770"  [label="DDG: err"];
"1000812" -> "1000770"  [label="DDG: err"];
"1000658" -> "1000770"  [label="DDG: err"];
"1000641" -> "1000770"  [label="DDG: err"];
"1000549" -> "1000770"  [label="DDG: err"];
"1000741" -> "1000770"  [label="DDG: err"];
"1000770" -> "1000776"  [label="DDG: err"];
"1000776" -> "1000775"  [label="AST: "];
"1000776" -> "1000778"  [label="CFG: "];
"1000777" -> "1000776"  [label="AST: "];
"1000778" -> "1000776"  [label="AST: "];
"1000781" -> "1000776"  [label="CFG: "];
"1000775" -> "1000776"  [label="CFG: "];
"1000776" -> "1000816"  [label="DDG: err"];
"1000776" -> "1000816"  [label="DDG: -ENOBUFS"];
"1000776" -> "1000775"  [label="DDG: err"];
"1000776" -> "1000775"  [label="DDG: -ENOBUFS"];
"1000778" -> "1000776"  [label="DDG: ENOBUFS"];
"1000776" -> "1000794"  [label="DDG: err"];
"1000775" -> "1000774"  [label="AST: "];
"1000775" -> "1000780"  [label="CFG: "];
"1000780" -> "1000775"  [label="AST: "];
"1000791" -> "1000775"  [label="CFG: "];
"1000795" -> "1000775"  [label="CFG: "];
"1000775" -> "1000816"  [label="DDG: test_bit(SOCK_NOSPACE, &sk->sk_socket->flags)"];
"1000775" -> "1000816"  [label="DDG: err == -ENOBUFS"];
"1000775" -> "1000816"  [label="DDG: err == -ENOBUFS || test_bit(SOCK_NOSPACE, &sk->sk_socket->flags)"];
"1000780" -> "1000775"  [label="DDG: SOCK_NOSPACE"];
"1000780" -> "1000775"  [label="DDG: &sk->sk_socket->flags"];
"1000794" -> "1000115"  [label="AST: "];
"1000794" -> "1000795"  [label="CFG: "];
"1000795" -> "1000794"  [label="AST: "];
"1000816" -> "1000794"  [label="CFG: "];
"1000794" -> "1000816"  [label="DDG: <RET>"];
"1000795" -> "1000794"  [label="DDG: err"];
"1000636" -> "1000635"  [label="AST: "];
"1000636" -> "1000637"  [label="CFG: "];
"1000636" -> "1000638"  [label="CFG: "];
"1000637" -> "1000636"  [label="AST: "];
"1000638" -> "1000636"  [label="AST: "];
"1000642" -> "1000636"  [label="CFG: "];
"1000647" -> "1000636"  [label="CFG: "];
"1000636" -> "1000816"  [label="DDG: !IS_ERR(skb)"];
"1000636" -> "1000816"  [label="DDG: skb"];
"1000636" -> "1000816"  [label="DDG: skb && !IS_ERR(skb)"];
"1000639" -> "1000636"  [label="DDG: skb"];
"1000638" -> "1000636"  [label="DDG: IS_ERR(skb)"];
"1000636" -> "1000643"  [label="DDG: skb"];
"1000643" -> "1000641"  [label="AST: "];
"1000643" -> "1000646"  [label="CFG: "];
"1000644" -> "1000643"  [label="AST: "];
"1000645" -> "1000643"  [label="AST: "];
"1000646" -> "1000643"  [label="AST: "];
"1000641" -> "1000643"  [label="CFG: "];
"1000643" -> "1000816"  [label="DDG: dport"];
"1000643" -> "1000816"  [label="DDG: skb"];
"1000643" -> "1000816"  [label="DDG: daddr"];
"1000643" -> "1000641"  [label="DDG: skb"];
"1000643" -> "1000641"  [label="DDG: daddr"];
"1000643" -> "1000641"  [label="DDG: dport"];
"1000455" -> "1000643"  [label="DDG: daddr"];
"1000600" -> "1000643"  [label="DDG: daddr"];
"1000309" -> "1000643"  [label="DDG: dport"];
"1000501" -> "1000643"  [label="DDG: dport"];
"1000287" -> "1000643"  [label="DDG: dport"];
"1000641" -> "1000635"  [label="AST: "];
"1000642" -> "1000641"  [label="AST: "];
"1000647" -> "1000641"  [label="CFG: "];
"1000641" -> "1000816"  [label="DDG: udp_send_skb(skb, daddr, dport)"];
"1000639" -> "1000638"  [label="AST: "];
"1000639" -> "1000640"  [label="CFG: "];
"1000640" -> "1000639"  [label="AST: "];
"1000638" -> "1000639"  [label="CFG: "];
"1000639" -> "1000638"  [label="DDG: skb"];
"1000638" -> "1000816"  [label="DDG: IS_ERR(skb)"];
"1000790" -> "1000789"  [label="AST: "];
"1000790" -> "1000791"  [label="CFG: "];
"1000791" -> "1000790"  [label="AST: "];
"1000792" -> "1000790"  [label="CFG: "];
"1000790" -> "1000816"  [label="DDG: sk"];
"1000790" -> "1000789"  [label="DDG: sk"];
"1000487" -> "1000790"  [label="DDG: sk"];
"1000532" -> "1000790"  [label="DDG: sk"];
"1000758" -> "1000790"  [label="DDG: sk"];
"1000569" -> "1000790"  [label="DDG: sk"];
"1000429" -> "1000790"  [label="DDG: sk"];
"1000656" -> "1000790"  [label="DDG: sk"];
"1000112" -> "1000790"  [label="DDG: sk"];
"1000789" -> "1000788"  [label="AST: "];
"1000789" -> "1000793"  [label="CFG: "];
"1000792" -> "1000789"  [label="AST: "];
"1000793" -> "1000789"  [label="AST: "];
"1000795" -> "1000789"  [label="CFG: "];
"1000789" -> "1000816"  [label="DDG: UDP_MIB_SNDBUFERRORS"];
"1000789" -> "1000816"  [label="DDG: UDP_INC_STATS_USER(sock_net(sk),\n\t\t\t\tUDP_MIB_SNDBUFERRORS, is_udplite)"];
"1000789" -> "1000816"  [label="DDG: is_udplite"];
"1000789" -> "1000816"  [label="DDG: sock_net(sk)"];
"1000648" -> "1000115"  [label="AST: "];
"1000648" -> "1000649"  [label="CFG: "];
"1000649" -> "1000648"  [label="AST: "];
"1000653" -> "1000648"  [label="CFG: "];
"1000648" -> "1000816"  [label="DDG: lock_sock(sk)"];
"1000487" -> "1000648"  [label="DDG: sk"];
"1000532" -> "1000648"  [label="DDG: sk"];
"1000569" -> "1000648"  [label="DDG: sk"];
"1000429" -> "1000648"  [label="DDG: sk"];
"1000112" -> "1000648"  [label="DDG: sk"];
"1000648" -> "1000656"  [label="DDG: sk"];
"1000648" -> "1000710"  [label="DDG: sk"];
"1000656" -> "1000655"  [label="AST: "];
"1000656" -> "1000657"  [label="CFG: "];
"1000657" -> "1000656"  [label="AST: "];
"1000659" -> "1000656"  [label="CFG: "];
"1000656" -> "1000816"  [label="DDG: release_sock(sk)"];
"1000656" -> "1000816"  [label="DDG: sk"];
"1000112" -> "1000656"  [label="DDG: sk"];
"1000710" -> "1000708"  [label="AST: "];
"1000710" -> "1000723"  [label="CFG: "];
"1000711" -> "1000710"  [label="AST: "];
"1000712" -> "1000710"  [label="AST: "];
"1000713" -> "1000710"  [label="AST: "];
"1000716" -> "1000710"  [label="AST: "];
"1000717" -> "1000710"  [label="AST: "];
"1000719" -> "1000710"  [label="AST: "];
"1000721" -> "1000710"  [label="AST: "];
"1000723" -> "1000710"  [label="AST: "];
"1000708" -> "1000710"  [label="CFG: "];
"1000710" -> "1000816"  [label="DDG: ulen"];
"1000710" -> "1000816"  [label="DDG: getfrag"];
"1000710" -> "1000816"  [label="DDG: &rt"];
"1000710" -> "1000816"  [label="DDG: msg->msg_iov"];
"1000710" -> "1000816"  [label="DDG: &ipc"];
"1000710" -> "1000816"  [label="DDG: corkreq ? msg->msg_flags|MSG_MORE : msg->msg_flags"];
"1000710" -> "1000708"  [label="DDG: corkreq ? msg->msg_flags|MSG_MORE : msg->msg_flags"];
"1000710" -> "1000708"  [label="DDG: &rt"];
"1000710" -> "1000708"  [label="DDG: ulen"];
"1000710" -> "1000708"  [label="DDG: &ipc"];
"1000710" -> "1000708"  [label="DDG: getfrag"];
"1000710" -> "1000708"  [label="DDG: sk"];
"1000710" -> "1000708"  [label="DDG: msg->msg_iov"];
"1000206" -> "1000710"  [label="DDG: sk"];
"1000112" -> "1000710"  [label="DDG: sk"];
"1000195" -> "1000710"  [label="DDG: getfrag"];
"1000128" -> "1000710"  [label="DDG: ulen"];
"1000230" -> "1000710"  [label="DDG: ulen"];
"1000350" -> "1000710"  [label="DDG: &ipc"];
"1000725" -> "1000710"  [label="DDG: msg->msg_flags"];
"1000725" -> "1000710"  [label="DDG: MSG_MORE"];
"1000177" -> "1000710"  [label="DDG: msg->msg_flags"];
"1000805" -> "1000710"  [label="DDG: msg->msg_flags"];
"1000583" -> "1000710"  [label="DDG: msg->msg_flags"];
"1000710" -> "1000735"  [label="DDG: sk"];
"1000710" -> "1000743"  [label="DDG: sk"];
"1000710" -> "1000758"  [label="DDG: sk"];
"1000708" -> "1000115"  [label="AST: "];
"1000709" -> "1000708"  [label="AST: "];
"1000734" -> "1000708"  [label="CFG: "];
"1000708" -> "1000816"  [label="DDG: ip_append_data(sk, getfrag, msg->msg_iov, ulen,\n\t\t\tsizeof(struct udphdr), &ipc, &rt,\n\t\t\tcorkreq ? msg->msg_flags|MSG_MORE : msg->msg_flags)"];
"1000735" -> "1000733"  [label="AST: "];
"1000735" -> "1000736"  [label="CFG: "];
"1000736" -> "1000735"  [label="AST: "];
"1000759" -> "1000735"  [label="CFG: "];
"1000735" -> "1000816"  [label="DDG: udp_flush_pending_frames(sk)"];
"1000112" -> "1000735"  [label="DDG: sk"];
"1000735" -> "1000758"  [label="DDG: sk"];
"1000758" -> "1000115"  [label="AST: "];
"1000758" -> "1000759"  [label="CFG: "];
"1000759" -> "1000758"  [label="AST: "];
"1000760" -> "1000758"  [label="CFG: "];
"1000758" -> "1000816"  [label="DDG: release_sock(sk)"];
"1000758" -> "1000816"  [label="DDG: sk"];
"1000743" -> "1000758"  [label="DDG: sk"];
"1000112" -> "1000758"  [label="DDG: sk"];
"1000743" -> "1000741"  [label="AST: "];
"1000743" -> "1000744"  [label="CFG: "];
"1000744" -> "1000743"  [label="AST: "];
"1000741" -> "1000743"  [label="CFG: "];
"1000743" -> "1000741"  [label="DDG: sk"];
"1000112" -> "1000743"  [label="DDG: sk"];
"1000741" -> "1000738"  [label="AST: "];
"1000742" -> "1000741"  [label="AST: "];
"1000759" -> "1000741"  [label="CFG: "];
"1000741" -> "1000816"  [label="DDG: udp_push_pending_frames(sk)"];
"1000797" -> "1000115"  [label="AST: "];
"1000797" -> "1000798"  [label="CFG: "];
"1000798" -> "1000797"  [label="AST: "];
"1000807" -> "1000797"  [label="CFG: "];
"1000797" -> "1000816"  [label="DDG: &rt->dst"];
"1000797" -> "1000816"  [label="DDG: dst_confirm(&rt->dst)"];
}
