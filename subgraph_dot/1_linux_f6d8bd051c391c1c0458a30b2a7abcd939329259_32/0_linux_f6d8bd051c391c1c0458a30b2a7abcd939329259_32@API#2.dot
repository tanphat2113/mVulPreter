digraph "0_linux_f6d8bd051c391c1c0458a30b2a7abcd939329259_32@API" {
"1000348" [label="(Call,err = ip_cmsg_send(sock_net(sk), msg, &ipc))"];
"1000350" [label="(Call,ip_cmsg_send(sock_net(sk), msg, &ipc))"];
"1000351" [label="(Call,sock_net(sk))"];
"1000333" [label="(Call,sock_tx_timestamp(sk, &ipc.tx_flags))"];
"1000228" [label="(Call,release_sock(sk))"];
"1000206" [label="(Call,lock_sock(sk))"];
"1000153" [label="(Call,IS_UDPLITE(sk))"];
"1000124" [label="(Call,udp_sk(sk))"];
"1000119" [label="(Call,inet_sk(sk))"];
"1000112" [label="(MethodParameterIn,struct sock *sk)"];
"1000190" [label="(Call,ipc.tx_flags = 0)"];
"1000113" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000358" [label="(Return,return err;)"];
"1000331" [label="(Call,err = sock_tx_timestamp(sk, &ipc.tx_flags))"];
"1000352" [label="(Identifier,sk)"];
"1000429" [label="(Call,sock_flag(sk, SOCK_LOCALROUTE))"];
"1000743" [label="(Call,udp_push_pending_frames(sk))"];
"1000710" [label="(Call,ip_append_data(sk, getfrag, msg->msg_iov, ulen,\n\t\t\tsizeof(struct udphdr), &ipc, &rt,\n\t\t\tcorkreq ? msg->msg_flags|MSG_MORE : msg->msg_flags))"];
"1000333" [label="(Call,sock_tx_timestamp(sk, &ipc.tx_flags))"];
"1000569" [label="(Call,sock_flag(sk, SOCK_BROADCAST))"];
"1000349" [label="(Identifier,err)"];
"1000347" [label="(Block,)"];
"1000112" [label="(MethodParameterIn,struct sock *sk)"];
"1000154" [label="(Identifier,sk)"];
"1000575" [label="(Call,sk_dst_set(sk, dst_clone(&rt->dst)))"];
"1000335" [label="(Call,&ipc.tx_flags)"];
"1000115" [label="(Block,)"];
"1000656" [label="(Call,release_sock(sk))"];
"1000358" [label="(Return,return err;)"];
"1000207" [label="(Identifier,sk)"];
"1000113" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000196" [label="(Identifier,getfrag)"];
"1000499" [label="(Call,sock_net(sk))"];
"1000735" [label="(Call,udp_flush_pending_frames(sk))"];
"1000119" [label="(Call,inet_sk(sk))"];
"1000790" [label="(Call,sock_net(sk))"];
"1000122" [label="(Call,*up = udp_sk(sk))"];
"1000206" [label="(Call,lock_sock(sk))"];
"1000348" [label="(Call,err = ip_cmsg_send(sock_net(sk), msg, &ipc))"];
"1000354" [label="(Call,&ipc)"];
"1000120" [label="(Identifier,sk)"];
"1000351" [label="(Call,sock_net(sk))"];
"1000228" [label="(Call,release_sock(sk))"];
"1000487" [label="(Call,sk_dst_check(sk, 0))"];
"1000191" [label="(Call,ipc.tx_flags)"];
"1000190" [label="(Call,ipc.tx_flags = 0)"];
"1000350" [label="(Call,ip_cmsg_send(sock_net(sk), msg, &ipc))"];
"1000615" [label="(Call,ip_make_skb(sk, getfrag, msg->msg_iov, ulen,\n\t\t\t\t  sizeof(struct udphdr), &ipc, &rt,\n\t\t\t\t  msg->msg_flags))"];
"1000359" [label="(Identifier,err)"];
"1000758" [label="(Call,release_sock(sk))"];
"1000117" [label="(Call,*inet = inet_sk(sk))"];
"1000357" [label="(Identifier,err)"];
"1000356" [label="(ControlStructure,if (err))"];
"1000153" [label="(Call,IS_UDPLITE(sk))"];
"1000211" [label="(Identifier,up)"];
"1000334" [label="(Identifier,sk)"];
"1000231" [label="(Identifier,ulen)"];
"1000151" [label="(Call,is_udplite = IS_UDPLITE(sk))"];
"1000205" [label="(Block,)"];
"1000229" [label="(Identifier,sk)"];
"1000516" [label="(Call,inet_sk_flowi_flags(sk))"];
"1000353" [label="(Identifier,msg)"];
"1000124" [label="(Call,udp_sk(sk))"];
"1000125" [label="(Identifier,sk)"];
"1000532" [label="(Call,ip_route_output_flow(net, &fl4, sk))"];
"1000648" [label="(Call,lock_sock(sk))"];
"1000222" [label="(Call,release_sock(sk))"];
"1000194" [label="(Literal,0)"];
"1000816" [label="(MethodReturn,int)"];
"1000525" [label="(Call,security_sk_classify_flow(sk, flowi4_to_flowi(&fl4)))"];
"1000348" -> "1000347"  [label="AST: "];
"1000348" -> "1000350"  [label="CFG: "];
"1000349" -> "1000348"  [label="AST: "];
"1000350" -> "1000348"  [label="AST: "];
"1000357" -> "1000348"  [label="CFG: "];
"1000348" -> "1000816"  [label="DDG: err"];
"1000348" -> "1000816"  [label="DDG: ip_cmsg_send(sock_net(sk), msg, &ipc)"];
"1000350" -> "1000348"  [label="DDG: sock_net(sk)"];
"1000350" -> "1000348"  [label="DDG: msg"];
"1000350" -> "1000348"  [label="DDG: &ipc"];
"1000348" -> "1000358"  [label="DDG: err"];
"1000350" -> "1000354"  [label="CFG: "];
"1000351" -> "1000350"  [label="AST: "];
"1000353" -> "1000350"  [label="AST: "];
"1000354" -> "1000350"  [label="AST: "];
"1000350" -> "1000816"  [label="DDG: sock_net(sk)"];
"1000350" -> "1000816"  [label="DDG: msg"];
"1000350" -> "1000816"  [label="DDG: &ipc"];
"1000351" -> "1000350"  [label="DDG: sk"];
"1000113" -> "1000350"  [label="DDG: msg"];
"1000350" -> "1000615"  [label="DDG: &ipc"];
"1000350" -> "1000710"  [label="DDG: &ipc"];
"1000351" -> "1000352"  [label="CFG: "];
"1000352" -> "1000351"  [label="AST: "];
"1000353" -> "1000351"  [label="CFG: "];
"1000351" -> "1000816"  [label="DDG: sk"];
"1000333" -> "1000351"  [label="DDG: sk"];
"1000112" -> "1000351"  [label="DDG: sk"];
"1000351" -> "1000429"  [label="DDG: sk"];
"1000333" -> "1000331"  [label="AST: "];
"1000333" -> "1000335"  [label="CFG: "];
"1000334" -> "1000333"  [label="AST: "];
"1000335" -> "1000333"  [label="AST: "];
"1000331" -> "1000333"  [label="CFG: "];
"1000333" -> "1000816"  [label="DDG: sk"];
"1000333" -> "1000816"  [label="DDG: &ipc.tx_flags"];
"1000333" -> "1000331"  [label="DDG: sk"];
"1000333" -> "1000331"  [label="DDG: &ipc.tx_flags"];
"1000228" -> "1000333"  [label="DDG: sk"];
"1000153" -> "1000333"  [label="DDG: sk"];
"1000112" -> "1000333"  [label="DDG: sk"];
"1000190" -> "1000333"  [label="DDG: ipc.tx_flags"];
"1000333" -> "1000429"  [label="DDG: sk"];
"1000228" -> "1000205"  [label="AST: "];
"1000228" -> "1000229"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000231" -> "1000228"  [label="CFG: "];
"1000228" -> "1000816"  [label="DDG: release_sock(sk)"];
"1000228" -> "1000816"  [label="DDG: sk"];
"1000206" -> "1000228"  [label="DDG: sk"];
"1000112" -> "1000228"  [label="DDG: sk"];
"1000206" -> "1000205"  [label="AST: "];
"1000206" -> "1000207"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000211" -> "1000206"  [label="CFG: "];
"1000206" -> "1000816"  [label="DDG: lock_sock(sk)"];
"1000153" -> "1000206"  [label="DDG: sk"];
"1000112" -> "1000206"  [label="DDG: sk"];
"1000206" -> "1000222"  [label="DDG: sk"];
"1000206" -> "1000710"  [label="DDG: sk"];
"1000153" -> "1000151"  [label="AST: "];
"1000153" -> "1000154"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000151" -> "1000153"  [label="CFG: "];
"1000153" -> "1000816"  [label="DDG: sk"];
"1000153" -> "1000151"  [label="DDG: sk"];
"1000124" -> "1000153"  [label="DDG: sk"];
"1000112" -> "1000153"  [label="DDG: sk"];
"1000124" -> "1000122"  [label="AST: "];
"1000124" -> "1000125"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000124" -> "1000122"  [label="DDG: sk"];
"1000119" -> "1000124"  [label="DDG: sk"];
"1000112" -> "1000124"  [label="DDG: sk"];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000119" -> "1000117"  [label="DDG: sk"];
"1000112" -> "1000119"  [label="DDG: sk"];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000816"  [label="DDG: sk"];
"1000112" -> "1000222"  [label="DDG: sk"];
"1000112" -> "1000429"  [label="DDG: sk"];
"1000112" -> "1000487"  [label="DDG: sk"];
"1000112" -> "1000499"  [label="DDG: sk"];
"1000112" -> "1000516"  [label="DDG: sk"];
"1000112" -> "1000525"  [label="DDG: sk"];
"1000112" -> "1000532"  [label="DDG: sk"];
"1000112" -> "1000569"  [label="DDG: sk"];
"1000112" -> "1000575"  [label="DDG: sk"];
"1000112" -> "1000615"  [label="DDG: sk"];
"1000112" -> "1000648"  [label="DDG: sk"];
"1000112" -> "1000656"  [label="DDG: sk"];
"1000112" -> "1000710"  [label="DDG: sk"];
"1000112" -> "1000735"  [label="DDG: sk"];
"1000112" -> "1000743"  [label="DDG: sk"];
"1000112" -> "1000758"  [label="DDG: sk"];
"1000112" -> "1000790"  [label="DDG: sk"];
"1000190" -> "1000115"  [label="AST: "];
"1000190" -> "1000194"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000194" -> "1000190"  [label="AST: "];
"1000196" -> "1000190"  [label="CFG: "];
"1000190" -> "1000816"  [label="DDG: ipc.tx_flags"];
"1000113" -> "1000110"  [label="AST: "];
"1000113" -> "1000816"  [label="DDG: msg"];
"1000358" -> "1000356"  [label="AST: "];
"1000358" -> "1000359"  [label="CFG: "];
"1000359" -> "1000358"  [label="AST: "];
"1000816" -> "1000358"  [label="CFG: "];
"1000358" -> "1000816"  [label="DDG: <RET>"];
"1000359" -> "1000358"  [label="DDG: err"];
}
