digraph "0_OpenSC_a3fc7693f3a035a8a7921cffb98432944bb42740@pointer" {
"1000521" [label="(Call,parm != NULL)"];
"1000110" [label="(Call,*parm = entry->parm)"];
"1000529" [label="(Call,(struct sc_object_id *) parm)"];
"1000526" [label="(Call,sc_asn1_decode_object_id(obj, objlen, (struct sc_object_id *) parm))"];
"1000524" [label="(Call,r = sc_asn1_decode_object_id(obj, objlen, (struct sc_object_id *) parm))"];
"1000759" [label="(Call,sc_strerror(r))"];
"1000752" [label="(Call,sc_debug(ctx, SC_LOG_DEBUG_ASN1, \"decoding of ASN.1 object '%s' failed: %s\n\", entry->name,\n\t\t      sc_strerror(r)))"];
"1000761" [label="(Return,return r;)"];
"1000570" [label="(Call,r = SC_ERROR_OUT_OF_MEMORY)"];
"1000520" [label="(ControlStructure,if (parm != NULL))"];
"1000752" [label="(Call,sc_debug(ctx, SC_LOG_DEBUG_ASN1, \"decoding of ASN.1 object '%s' failed: %s\n\", entry->name,\n\t\t      sc_strerror(r)))"];
"1000526" [label="(Call,sc_asn1_decode_object_id(obj, objlen, (struct sc_object_id *) parm))"];
"1000761" [label="(Return,return r;)"];
"1000529" [label="(Call,(struct sc_object_id *) parm)"];
"1000532" [label="(ControlStructure,break;)"];
"1000452" [label="(Call,parm != NULL)"];
"1000753" [label="(Identifier,ctx)"];
"1000751" [label="(Block,)"];
"1000194" [label="(Call,sc_debug(ctx, SC_LOG_DEBUG_ASN1,\n\t\t\t\t\t \"invalid ASN.1 object length: %\"SC_FORMAT_LEN_SIZE_T\"u\n\",\n\t\t\t\t\t objlen))"];
"1000756" [label="(Call,entry->name)"];
"1000128" [label="(Call,callback_func = parm)"];
"1000709" [label="(Call,asn1_decode_se_info(ctx, obj, objlen, (sc_pkcs15_sec_env_info_t ***)entry->parm, len, depth))"];
"1000523" [label="(Identifier,NULL)"];
"1000770" [label="(MethodReturn,static int)"];
"1000671" [label="(Call,r = asn1_decode_p15_object(ctx, obj, objlen, (struct sc_asn1_pkcs15_object *) parm, depth))"];
"1000524" [label="(Call,r = sc_asn1_decode_object_id(obj, objlen, (struct sc_object_id *) parm))"];
"1000150" [label="(Call,objlen > 16)"];
"1000141" [label="(Call,sc_dump_hex(obj, objlen > 16  ? 16 : objlen))"];
"1000584" [label="(Call,r = sc_asn1_decode_utf8string(obj, objlen, (u8 *) parm, len))"];
"1000218" [label="(Call,parm != NULL)"];
"1000252" [label="(Call,parm != NULL)"];
"1000118" [label="(Identifier,len)"];
"1000525" [label="(Identifier,r)"];
"1000536" [label="(Call,parm != NULL)"];
"1000416" [label="(Call,r = SC_ERROR_OUT_OF_MEMORY)"];
"1000730" [label="(Call,callback_func(ctx, entry->arg, obj, objlen, depth))"];
"1000760" [label="(Identifier,r)"];
"1000125" [label="(Call,r = 0)"];
"1000728" [label="(Call,r = callback_func(ctx, entry->arg, obj, objlen, depth))"];
"1000521" [label="(Call,parm != NULL)"];
"1000677" [label="(Call,(struct sc_asn1_pkcs15_object *) parm)"];
"1000695" [label="(Call,(struct sc_algorithm_id *) parm)"];
"1000110" [label="(Call,*parm = entry->parm)"];
"1000162" [label="(Call,parm != NULL)"];
"1000105" [label="(MethodParameterIn,const u8 *obj)"];
"1000754" [label="(Identifier,SC_LOG_DEBUG_ASN1)"];
"1000755" [label="(Literal,\"decoding of ASN.1 object '%s' failed: %s\n\")"];
"1000531" [label="(Identifier,parm)"];
"1000707" [label="(Call,r = asn1_decode_se_info(ctx, obj, objlen, (sc_pkcs15_sec_env_info_t ***)entry->parm, len, depth))"];
"1000485" [label="(Call,r = SC_ERROR_OUT_OF_MEMORY)"];
"1000108" [label="(Block,)"];
"1000618" [label="(Call,(sc_path_t *) parm)"];
"1000689" [label="(Call,r = sc_asn1_decode_algorithm_id(ctx, obj, objlen, (struct sc_algorithm_id *) parm, depth))"];
"1000762" [label="(Identifier,r)"];
"1000614" [label="(Call,asn1_decode_path(ctx, obj, objlen, (sc_path_t *) parm, depth))"];
"1000103" [label="(MethodParameterIn,sc_context_t *ctx)"];
"1000106" [label="(MethodParameterIn,size_t objlen)"];
"1000112" [label="(Call,entry->parm)"];
"1000111" [label="(Identifier,parm)"];
"1000528" [label="(Identifier,objlen)"];
"1000332" [label="(Call,r >= 0)"];
"1000306" [label="(Call,r = SC_ERROR_OUT_OF_MEMORY)"];
"1000522" [label="(Identifier,parm)"];
"1000346" [label="(Call,parm != NULL)"];
"1000362" [label="(Call,parm != NULL)"];
"1000349" [label="(Call,r = decode_bit_field(obj, objlen, (u8 *) parm, *len))"];
"1000340" [label="(Call,r = 0)"];
"1000232" [label="(Call,sc_debug(ctx, SC_LOG_DEBUG_ASN1, \"%*.*sdecoding '%s' returned %d\n\", depth, depth, \"\",\n\t\t\t\t\tentry->name, *((int *) entry->parm)))"];
"1000691" [label="(Call,sc_asn1_decode_algorithm_id(ctx, obj, objlen, (struct sc_algorithm_id *) parm, depth))"];
"1000612" [label="(Call,r = asn1_decode_path(ctx, obj, objlen, (sc_path_t *) parm, depth))"];
"1000673" [label="(Call,asn1_decode_p15_object(ctx, obj, objlen, (struct sc_asn1_pkcs15_object *) parm, depth))"];
"1000634" [label="(Call,(struct sc_pkcs15_id *) parm)"];
"1000222" [label="(Call,r = sc_asn1_decode_integer(obj, objlen, (int *) entry->parm))"];
"1000167" [label="(Call,asn1_decode(ctx, (struct sc_asn1_entry *) parm, obj,\n\t\t\t\t       objlen, NULL, NULL, 0, depth + 1))"];
"1000131" [label="(Call,sc_debug(ctx, SC_LOG_DEBUG_ASN1, \"%*.*sdecoding '%s', raw data:%s%s\n\",\n\t\tdepth, depth, \"\", entry->name,\n\t\tsc_dump_hex(obj, objlen > 16  ? 16 : objlen),\n\t\tobjlen > 16 ? \"...\" : \"\"))"];
"1000185" [label="(Call,parm != NULL)"];
"1000199" [label="(Call,r = SC_ERROR_INVALID_ASN1_OBJECT)"];
"1000276" [label="(Call,r = SC_ERROR_INVALID_ASN1_OBJECT)"];
"1000759" [label="(Call,sc_strerror(r))"];
"1000527" [label="(Identifier,obj)"];
"1000165" [label="(Call,r = asn1_decode(ctx, (struct sc_asn1_entry *) parm, obj,\n\t\t\t\t       objlen, NULL, NULL, 0, depth + 1))"];
"1000521" -> "1000520"  [label="AST: "];
"1000521" -> "1000523"  [label="CFG: "];
"1000522" -> "1000521"  [label="AST: "];
"1000523" -> "1000521"  [label="AST: "];
"1000525" -> "1000521"  [label="CFG: "];
"1000532" -> "1000521"  [label="CFG: "];
"1000521" -> "1000770"  [label="DDG: "];
"1000521" -> "1000770"  [label="DDG: "];
"1000521" -> "1000770"  [label="DDG: "];
"1000110" -> "1000521"  [label="DDG: "];
"1000521" -> "1000529"  [label="DDG: "];
"1000110" -> "1000108"  [label="AST: "];
"1000110" -> "1000112"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000112" -> "1000110"  [label="AST: "];
"1000118" -> "1000110"  [label="CFG: "];
"1000110" -> "1000770"  [label="DDG: "];
"1000110" -> "1000128"  [label="DDG: "];
"1000110" -> "1000162"  [label="DDG: "];
"1000110" -> "1000185"  [label="DDG: "];
"1000110" -> "1000218"  [label="DDG: "];
"1000110" -> "1000252"  [label="DDG: "];
"1000110" -> "1000346"  [label="DDG: "];
"1000110" -> "1000362"  [label="DDG: "];
"1000110" -> "1000452"  [label="DDG: "];
"1000110" -> "1000536"  [label="DDG: "];
"1000110" -> "1000618"  [label="DDG: "];
"1000110" -> "1000634"  [label="DDG: "];
"1000110" -> "1000677"  [label="DDG: "];
"1000110" -> "1000695"  [label="DDG: "];
"1000529" -> "1000526"  [label="AST: "];
"1000529" -> "1000531"  [label="CFG: "];
"1000530" -> "1000529"  [label="AST: "];
"1000531" -> "1000529"  [label="AST: "];
"1000526" -> "1000529"  [label="CFG: "];
"1000529" -> "1000770"  [label="DDG: "];
"1000529" -> "1000526"  [label="DDG: "];
"1000526" -> "1000524"  [label="AST: "];
"1000527" -> "1000526"  [label="AST: "];
"1000528" -> "1000526"  [label="AST: "];
"1000524" -> "1000526"  [label="CFG: "];
"1000526" -> "1000770"  [label="DDG: "];
"1000526" -> "1000770"  [label="DDG: "];
"1000526" -> "1000770"  [label="DDG: "];
"1000526" -> "1000524"  [label="DDG: "];
"1000526" -> "1000524"  [label="DDG: "];
"1000526" -> "1000524"  [label="DDG: "];
"1000141" -> "1000526"  [label="DDG: "];
"1000105" -> "1000526"  [label="DDG: "];
"1000150" -> "1000526"  [label="DDG: "];
"1000106" -> "1000526"  [label="DDG: "];
"1000524" -> "1000520"  [label="AST: "];
"1000525" -> "1000524"  [label="AST: "];
"1000532" -> "1000524"  [label="CFG: "];
"1000524" -> "1000770"  [label="DDG: "];
"1000524" -> "1000770"  [label="DDG: "];
"1000524" -> "1000759"  [label="DDG: "];
"1000759" -> "1000752"  [label="AST: "];
"1000759" -> "1000760"  [label="CFG: "];
"1000760" -> "1000759"  [label="AST: "];
"1000752" -> "1000759"  [label="CFG: "];
"1000759" -> "1000770"  [label="DDG: "];
"1000759" -> "1000752"  [label="DDG: "];
"1000332" -> "1000759"  [label="DDG: "];
"1000728" -> "1000759"  [label="DDG: "];
"1000707" -> "1000759"  [label="DDG: "];
"1000306" -> "1000759"  [label="DDG: "];
"1000165" -> "1000759"  [label="DDG: "];
"1000671" -> "1000759"  [label="DDG: "];
"1000349" -> "1000759"  [label="DDG: "];
"1000416" -> "1000759"  [label="DDG: "];
"1000276" -> "1000759"  [label="DDG: "];
"1000340" -> "1000759"  [label="DDG: "];
"1000584" -> "1000759"  [label="DDG: "];
"1000485" -> "1000759"  [label="DDG: "];
"1000125" -> "1000759"  [label="DDG: "];
"1000570" -> "1000759"  [label="DDG: "];
"1000222" -> "1000759"  [label="DDG: "];
"1000199" -> "1000759"  [label="DDG: "];
"1000689" -> "1000759"  [label="DDG: "];
"1000612" -> "1000759"  [label="DDG: "];
"1000759" -> "1000761"  [label="DDG: "];
"1000752" -> "1000751"  [label="AST: "];
"1000753" -> "1000752"  [label="AST: "];
"1000754" -> "1000752"  [label="AST: "];
"1000755" -> "1000752"  [label="AST: "];
"1000756" -> "1000752"  [label="AST: "];
"1000762" -> "1000752"  [label="CFG: "];
"1000752" -> "1000770"  [label="DDG: "];
"1000752" -> "1000770"  [label="DDG: "];
"1000752" -> "1000770"  [label="DDG: "];
"1000752" -> "1000770"  [label="DDG: "];
"1000752" -> "1000770"  [label="DDG: "];
"1000167" -> "1000752"  [label="DDG: "];
"1000232" -> "1000752"  [label="DDG: "];
"1000232" -> "1000752"  [label="DDG: "];
"1000232" -> "1000752"  [label="DDG: "];
"1000131" -> "1000752"  [label="DDG: "];
"1000131" -> "1000752"  [label="DDG: "];
"1000131" -> "1000752"  [label="DDG: "];
"1000194" -> "1000752"  [label="DDG: "];
"1000194" -> "1000752"  [label="DDG: "];
"1000673" -> "1000752"  [label="DDG: "];
"1000730" -> "1000752"  [label="DDG: "];
"1000691" -> "1000752"  [label="DDG: "];
"1000709" -> "1000752"  [label="DDG: "];
"1000614" -> "1000752"  [label="DDG: "];
"1000103" -> "1000752"  [label="DDG: "];
"1000761" -> "1000751"  [label="AST: "];
"1000761" -> "1000762"  [label="CFG: "];
"1000762" -> "1000761"  [label="AST: "];
"1000770" -> "1000761"  [label="CFG: "];
"1000761" -> "1000770"  [label="DDG: "];
"1000762" -> "1000761"  [label="DDG: "];
}
