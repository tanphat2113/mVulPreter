digraph "0_OpenSC_a3fc7693f3a035a8a7921cffb98432944bb42740@API" {
"1000293" [label="(Call,*buf = malloc(objlen-1))"];
"1000296" [label="(Call,malloc(objlen-1))"];
"1000297" [label="(Call,objlen-1)"];
"1000272" [label="(Call,objlen < 1)"];
"1000150" [label="(Call,objlen > 16)"];
"1000106" [label="(MethodParameterIn,size_t objlen)"];
"1000144" [label="(Call,objlen > 16)"];
"1000301" [label="(Call,*buf == NULL)"];
"1000316" [label="(Call,parm = *buf)"];
"1000325" [label="(Call,(u8 *) parm)"];
"1000322" [label="(Call,decode_bit_string(obj, objlen, (u8 *) parm, *len, invert))"];
"1000320" [label="(Call,r = decode_bit_string(obj, objlen, (u8 *) parm, *len, invert))"];
"1000332" [label="(Call,r >= 0)"];
"1000336" [label="(Call,*len = r)"];
"1000759" [label="(Call,sc_strerror(r))"];
"1000752" [label="(Call,sc_debug(ctx, SC_LOG_DEBUG_ASN1, \"decoding of ASN.1 object '%s' failed: %s\n\", entry->name,\n\t\t      sc_strerror(r)))"];
"1000761" [label="(Return,return r;)"];
"1000283" [label="(Identifier,entry)"];
"1000224" [label="(Call,sc_asn1_decode_integer(obj, objlen, (int *) entry->parm))"];
"1000388" [label="(Call,objlen--)"];
"1000491" [label="(Call,*len = objlen)"];
"1000277" [label="(Identifier,r)"];
"1000420" [label="(Call,c = *len = objlen)"];
"1000252" [label="(Call,parm != NULL)"];
"1000416" [label="(Call,r = SC_ERROR_OUT_OF_MEMORY)"];
"1000760" [label="(Identifier,r)"];
"1000257" [label="(Call,invert = entry->type == SC_ASN1_BIT_STRING ? 1 : 0)"];
"1000503" [label="(Call,objlen > *len)"];
"1000335" [label="(Block,)"];
"1000754" [label="(Identifier,SC_LOG_DEBUG_ASN1)"];
"1000272" [label="(Call,objlen < 1)"];
"1000689" [label="(Call,r = sc_asn1_decode_algorithm_id(ctx, obj, objlen, (struct sc_algorithm_id *) parm, depth))"];
"1000302" [label="(Call,*buf)"];
"1000301" [label="(Call,*buf == NULL)"];
"1000332" [label="(Call,r >= 0)"];
"1000298" [label="(Identifier,objlen)"];
"1000312" [label="(Identifier,len)"];
"1000297" [label="(Call,objlen-1)"];
"1000268" [label="(Call,len != NULL)"];
"1000691" [label="(Call,sc_asn1_decode_algorithm_id(ctx, obj, objlen, (struct sc_algorithm_id *) parm, depth))"];
"1000325" [label="(Call,(u8 *) parm)"];
"1000434" [label="(Call,objlen > *len)"];
"1000612" [label="(Call,r = asn1_decode_path(ctx, obj, objlen, (sc_path_t *) parm, depth))"];
"1000322" [label="(Call,decode_bit_string(obj, objlen, (u8 *) parm, *len, invert))"];
"1000316" [label="(Call,parm = *buf)"];
"1000222" [label="(Call,r = sc_asn1_decode_integer(obj, objlen, (int *) entry->parm))"];
"1000339" [label="(Identifier,r)"];
"1000131" [label="(Call,sc_debug(ctx, SC_LOG_DEBUG_ASN1, \"%*.*sdecoding '%s', raw data:%s%s\n\",\n\t\tdepth, depth, \"\", entry->name,\n\t\tsc_dump_hex(obj, objlen > 16  ? 16 : objlen),\n\t\tobjlen > 16 ? \"...\" : \"\"))"];
"1000199" [label="(Call,r = SC_ERROR_INVALID_ASN1_OBJECT)"];
"1000751" [label="(Block,)"];
"1000165" [label="(Call,r = asn1_decode(ctx, (struct sc_asn1_entry *) parm, obj,\n\t\t\t\t       objlen, NULL, NULL, 0, depth + 1))"];
"1000560" [label="(Call,malloc(objlen+1))"];
"1000570" [label="(Call,r = SC_ERROR_OUT_OF_MEMORY)"];
"1000752" [label="(Call,sc_debug(ctx, SC_LOG_DEBUG_ASN1, \"decoding of ASN.1 object '%s' failed: %s\n\", entry->name,\n\t\t      sc_strerror(r)))"];
"1000299" [label="(Literal,1)"];
"1000526" [label="(Call,sc_asn1_decode_object_id(obj, objlen, (struct sc_object_id *) parm))"];
"1000330" [label="(Identifier,invert)"];
"1000194" [label="(Call,sc_debug(ctx, SC_LOG_DEBUG_ASN1,\n\t\t\t\t\t \"invalid ASN.1 object length: %\"SC_FORMAT_LEN_SIZE_T\"u\n\",\n\t\t\t\t\t objlen))"];
"1000336" [label="(Call,*len = r)"];
"1000756" [label="(Call,entry->name)"];
"1000770" [label="(MethodReturn,static int)"];
"1000671" [label="(Call,r = asn1_decode_p15_object(ctx, obj, objlen, (struct sc_asn1_pkcs15_object *) parm, depth))"];
"1000329" [label="(Identifier,len)"];
"1000524" [label="(Call,r = sc_asn1_decode_object_id(obj, objlen, (struct sc_object_id *) parm))"];
"1000324" [label="(Identifier,objlen)"];
"1000286" [label="(Block,)"];
"1000152" [label="(Literal,16)"];
"1000433" [label="(Call,objlen > *len ? *len : objlen)"];
"1000333" [label="(Identifier,r)"];
"1000105" [label="(MethodParameterIn,const u8 *obj)"];
"1000755" [label="(Literal,\"decoding of ASN.1 object '%s' failed: %s\n\")"];
"1000327" [label="(Identifier,parm)"];
"1000485" [label="(Call,r = SC_ERROR_OUT_OF_MEMORY)"];
"1000341" [label="(Identifier,r)"];
"1000144" [label="(Call,objlen > 16)"];
"1000500" [label="(Call,c = objlen > *len ? *len : objlen)"];
"1000577" [label="(Call,objlen+1)"];
"1000323" [label="(Identifier,obj)"];
"1000306" [label="(Call,r = SC_ERROR_OUT_OF_MEMORY)"];
"1000148" [label="(Identifier,objlen)"];
"1000153" [label="(Literal,\"...\")"];
"1000300" [label="(ControlStructure,if (*buf == NULL))"];
"1000303" [label="(Identifier,buf)"];
"1000232" [label="(Call,sc_debug(ctx, SC_LOG_DEBUG_ASN1, \"%*.*sdecoding '%s' returned %d\n\", depth, depth, \"\",\n\t\t\t\t\tentry->name, *((int *) entry->parm)))"];
"1000154" [label="(Literal,\"\")"];
"1000561" [label="(Call,objlen+1)"];
"1000334" [label="(Literal,0)"];
"1000586" [label="(Call,sc_asn1_decode_utf8string(obj, objlen, (u8 *) parm, len))"];
"1000151" [label="(Identifier,objlen)"];
"1000379" [label="(Call,objlen > 1)"];
"1000143" [label="(Call,objlen > 16  ? 16 : objlen)"];
"1000190" [label="(Call,objlen != 1)"];
"1000761" [label="(Return,return r;)"];
"1000709" [label="(Call,asn1_decode_se_info(ctx, obj, objlen, (sc_pkcs15_sec_env_info_t ***)entry->parm, len, depth))"];
"1000141" [label="(Call,sc_dump_hex(obj, objlen > 16  ? 16 : objlen))"];
"1000641" [label="(Call,objlen > sizeof(id->value))"];
"1000343" [label="(ControlStructure,break;)"];
"1000730" [label="(Call,callback_func(ctx, entry->arg, obj, objlen, depth))"];
"1000728" [label="(Call,r = callback_func(ctx, entry->arg, obj, objlen, depth))"];
"1000638" [label="(Call,c = objlen > sizeof(id->value) ? sizeof(id->value) : objlen)"];
"1000337" [label="(Call,*len)"];
"1000489" [label="(Call,c = *len = objlen)"];
"1000318" [label="(Call,*buf)"];
"1000762" [label="(Identifier,r)"];
"1000431" [label="(Call,c = objlen > *len ? *len : objlen)"];
"1000614" [label="(Call,asn1_decode_path(ctx, obj, objlen, (sc_path_t *) parm, depth))"];
"1000146" [label="(Literal,16)"];
"1000351" [label="(Call,decode_bit_field(obj, objlen, (u8 *) parm, *len))"];
"1000502" [label="(Call,objlen > *len ? *len : objlen)"];
"1000271" [label="(ControlStructure,if (objlen < 1))"];
"1000149" [label="(Call,objlen > 16 ? \"...\" : \"\")"];
"1000349" [label="(Call,r = decode_bit_field(obj, objlen, (u8 *) parm, *len))"];
"1000293" [label="(Call,*buf = malloc(objlen-1))"];
"1000304" [label="(Identifier,NULL)"];
"1000574" [label="(Call,*len = objlen+1)"];
"1000147" [label="(Literal,16)"];
"1000276" [label="(Call,r = SC_ERROR_INVALID_ASN1_OBJECT)"];
"1000759" [label="(Call,sc_strerror(r))"];
"1000320" [label="(Call,r = decode_bit_string(obj, objlen, (u8 *) parm, *len, invert))"];
"1000255" [label="(Block,)"];
"1000294" [label="(Call,*buf)"];
"1000753" [label="(Identifier,ctx)"];
"1000338" [label="(Identifier,len)"];
"1000477" [label="(Call,malloc(objlen))"];
"1000321" [label="(Identifier,r)"];
"1000150" [label="(Call,objlen > 16)"];
"1000584" [label="(Call,r = sc_asn1_decode_utf8string(obj, objlen, (u8 *) parm, len))"];
"1000313" [label="(Call,objlen-1)"];
"1000296" [label="(Call,malloc(objlen-1))"];
"1000125" [label="(Call,r = 0)"];
"1000640" [label="(Call,objlen > sizeof(id->value) ? sizeof(id->value) : objlen)"];
"1000145" [label="(Identifier,objlen)"];
"1000408" [label="(Call,malloc(objlen))"];
"1000707" [label="(Call,r = asn1_decode_se_info(ctx, obj, objlen, (sc_pkcs15_sec_env_info_t ***)entry->parm, len, depth))"];
"1000328" [label="(Call,*len)"];
"1000103" [label="(MethodParameterIn,sc_context_t *ctx)"];
"1000106" [label="(MethodParameterIn,size_t objlen)"];
"1000273" [label="(Identifier,objlen)"];
"1000331" [label="(ControlStructure,if (r >= 0))"];
"1000340" [label="(Call,r = 0)"];
"1000317" [label="(Identifier,parm)"];
"1000422" [label="(Call,*len = objlen)"];
"1000673" [label="(Call,asn1_decode_p15_object(ctx, obj, objlen, (struct sc_asn1_pkcs15_object *) parm, depth))"];
"1000307" [label="(Identifier,r)"];
"1000167" [label="(Call,asn1_decode(ctx, (struct sc_asn1_entry *) parm, obj,\n\t\t\t\t       objlen, NULL, NULL, 0, depth + 1))"];
"1000274" [label="(Literal,1)"];
"1000310" [label="(Call,*len = objlen-1)"];
"1000293" -> "1000286"  [label="AST: "];
"1000293" -> "1000296"  [label="CFG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000296" -> "1000293"  [label="AST: "];
"1000303" -> "1000293"  [label="CFG: "];
"1000293" -> "1000770"  [label="DDG: "];
"1000296" -> "1000293"  [label="DDG: "];
"1000293" -> "1000301"  [label="DDG: "];
"1000296" -> "1000297"  [label="CFG: "];
"1000297" -> "1000296"  [label="AST: "];
"1000296" -> "1000770"  [label="DDG: "];
"1000297" -> "1000296"  [label="DDG: "];
"1000297" -> "1000296"  [label="DDG: "];
"1000297" -> "1000299"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000299" -> "1000297"  [label="AST: "];
"1000297" -> "1000770"  [label="DDG: "];
"1000272" -> "1000297"  [label="DDG: "];
"1000106" -> "1000297"  [label="DDG: "];
"1000297" -> "1000313"  [label="DDG: "];
"1000272" -> "1000271"  [label="AST: "];
"1000272" -> "1000274"  [label="CFG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000274" -> "1000272"  [label="AST: "];
"1000277" -> "1000272"  [label="CFG: "];
"1000283" -> "1000272"  [label="CFG: "];
"1000272" -> "1000770"  [label="DDG: "];
"1000272" -> "1000770"  [label="DDG: "];
"1000150" -> "1000272"  [label="DDG: "];
"1000106" -> "1000272"  [label="DDG: "];
"1000272" -> "1000322"  [label="DDG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000150" -> "1000152"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="AST: "];
"1000153" -> "1000150"  [label="CFG: "];
"1000154" -> "1000150"  [label="CFG: "];
"1000150" -> "1000770"  [label="DDG: "];
"1000106" -> "1000150"  [label="DDG: "];
"1000144" -> "1000150"  [label="DDG: "];
"1000150" -> "1000167"  [label="DDG: "];
"1000150" -> "1000190"  [label="DDG: "];
"1000150" -> "1000224"  [label="DDG: "];
"1000150" -> "1000351"  [label="DDG: "];
"1000150" -> "1000379"  [label="DDG: "];
"1000150" -> "1000388"  [label="DDG: "];
"1000150" -> "1000408"  [label="DDG: "];
"1000150" -> "1000434"  [label="DDG: "];
"1000150" -> "1000477"  [label="DDG: "];
"1000150" -> "1000503"  [label="DDG: "];
"1000150" -> "1000526"  [label="DDG: "];
"1000150" -> "1000560"  [label="DDG: "];
"1000150" -> "1000561"  [label="DDG: "];
"1000150" -> "1000574"  [label="DDG: "];
"1000150" -> "1000577"  [label="DDG: "];
"1000150" -> "1000586"  [label="DDG: "];
"1000150" -> "1000614"  [label="DDG: "];
"1000150" -> "1000641"  [label="DDG: "];
"1000150" -> "1000673"  [label="DDG: "];
"1000150" -> "1000691"  [label="DDG: "];
"1000150" -> "1000709"  [label="DDG: "];
"1000150" -> "1000730"  [label="DDG: "];
"1000106" -> "1000102"  [label="AST: "];
"1000106" -> "1000770"  [label="DDG: "];
"1000106" -> "1000141"  [label="DDG: "];
"1000106" -> "1000144"  [label="DDG: "];
"1000106" -> "1000143"  [label="DDG: "];
"1000106" -> "1000167"  [label="DDG: "];
"1000106" -> "1000190"  [label="DDG: "];
"1000106" -> "1000194"  [label="DDG: "];
"1000106" -> "1000224"  [label="DDG: "];
"1000106" -> "1000313"  [label="DDG: "];
"1000106" -> "1000322"  [label="DDG: "];
"1000106" -> "1000351"  [label="DDG: "];
"1000106" -> "1000379"  [label="DDG: "];
"1000106" -> "1000388"  [label="DDG: "];
"1000106" -> "1000408"  [label="DDG: "];
"1000106" -> "1000420"  [label="DDG: "];
"1000106" -> "1000422"  [label="DDG: "];
"1000106" -> "1000431"  [label="DDG: "];
"1000106" -> "1000434"  [label="DDG: "];
"1000106" -> "1000433"  [label="DDG: "];
"1000106" -> "1000477"  [label="DDG: "];
"1000106" -> "1000489"  [label="DDG: "];
"1000106" -> "1000491"  [label="DDG: "];
"1000106" -> "1000500"  [label="DDG: "];
"1000106" -> "1000503"  [label="DDG: "];
"1000106" -> "1000502"  [label="DDG: "];
"1000106" -> "1000526"  [label="DDG: "];
"1000106" -> "1000560"  [label="DDG: "];
"1000106" -> "1000561"  [label="DDG: "];
"1000106" -> "1000574"  [label="DDG: "];
"1000106" -> "1000577"  [label="DDG: "];
"1000106" -> "1000586"  [label="DDG: "];
"1000106" -> "1000614"  [label="DDG: "];
"1000106" -> "1000638"  [label="DDG: "];
"1000106" -> "1000641"  [label="DDG: "];
"1000106" -> "1000640"  [label="DDG: "];
"1000106" -> "1000673"  [label="DDG: "];
"1000106" -> "1000691"  [label="DDG: "];
"1000106" -> "1000709"  [label="DDG: "];
"1000106" -> "1000730"  [label="DDG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000144" -> "1000146"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000146" -> "1000144"  [label="AST: "];
"1000147" -> "1000144"  [label="CFG: "];
"1000148" -> "1000144"  [label="CFG: "];
"1000144" -> "1000141"  [label="DDG: "];
"1000144" -> "1000143"  [label="DDG: "];
"1000301" -> "1000300"  [label="AST: "];
"1000301" -> "1000304"  [label="CFG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000304" -> "1000301"  [label="AST: "];
"1000307" -> "1000301"  [label="CFG: "];
"1000312" -> "1000301"  [label="CFG: "];
"1000301" -> "1000770"  [label="DDG: "];
"1000301" -> "1000770"  [label="DDG: "];
"1000301" -> "1000770"  [label="DDG: "];
"1000268" -> "1000301"  [label="DDG: "];
"1000301" -> "1000316"  [label="DDG: "];
"1000316" -> "1000286"  [label="AST: "];
"1000316" -> "1000318"  [label="CFG: "];
"1000317" -> "1000316"  [label="AST: "];
"1000318" -> "1000316"  [label="AST: "];
"1000321" -> "1000316"  [label="CFG: "];
"1000316" -> "1000770"  [label="DDG: "];
"1000316" -> "1000325"  [label="DDG: "];
"1000325" -> "1000322"  [label="AST: "];
"1000325" -> "1000327"  [label="CFG: "];
"1000326" -> "1000325"  [label="AST: "];
"1000327" -> "1000325"  [label="AST: "];
"1000329" -> "1000325"  [label="CFG: "];
"1000325" -> "1000770"  [label="DDG: "];
"1000325" -> "1000322"  [label="DDG: "];
"1000252" -> "1000325"  [label="DDG: "];
"1000322" -> "1000320"  [label="AST: "];
"1000322" -> "1000330"  [label="CFG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000324" -> "1000322"  [label="AST: "];
"1000328" -> "1000322"  [label="AST: "];
"1000330" -> "1000322"  [label="AST: "];
"1000320" -> "1000322"  [label="CFG: "];
"1000322" -> "1000770"  [label="DDG: "];
"1000322" -> "1000770"  [label="DDG: "];
"1000322" -> "1000770"  [label="DDG: "];
"1000322" -> "1000770"  [label="DDG: "];
"1000322" -> "1000770"  [label="DDG: "];
"1000322" -> "1000320"  [label="DDG: "];
"1000322" -> "1000320"  [label="DDG: "];
"1000322" -> "1000320"  [label="DDG: "];
"1000322" -> "1000320"  [label="DDG: "];
"1000322" -> "1000320"  [label="DDG: "];
"1000141" -> "1000322"  [label="DDG: "];
"1000105" -> "1000322"  [label="DDG: "];
"1000313" -> "1000322"  [label="DDG: "];
"1000310" -> "1000322"  [label="DDG: "];
"1000257" -> "1000322"  [label="DDG: "];
"1000320" -> "1000255"  [label="AST: "];
"1000321" -> "1000320"  [label="AST: "];
"1000333" -> "1000320"  [label="CFG: "];
"1000320" -> "1000770"  [label="DDG: "];
"1000320" -> "1000332"  [label="DDG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000332" -> "1000334"  [label="CFG: "];
"1000333" -> "1000332"  [label="AST: "];
"1000334" -> "1000332"  [label="AST: "];
"1000338" -> "1000332"  [label="CFG: "];
"1000343" -> "1000332"  [label="CFG: "];
"1000332" -> "1000770"  [label="DDG: "];
"1000332" -> "1000770"  [label="DDG: "];
"1000332" -> "1000336"  [label="DDG: "];
"1000332" -> "1000759"  [label="DDG: "];
"1000336" -> "1000335"  [label="AST: "];
"1000336" -> "1000339"  [label="CFG: "];
"1000337" -> "1000336"  [label="AST: "];
"1000339" -> "1000336"  [label="AST: "];
"1000341" -> "1000336"  [label="CFG: "];
"1000336" -> "1000770"  [label="DDG: "];
"1000759" -> "1000752"  [label="AST: "];
"1000759" -> "1000760"  [label="CFG: "];
"1000760" -> "1000759"  [label="AST: "];
"1000752" -> "1000759"  [label="CFG: "];
"1000759" -> "1000770"  [label="DDG: "];
"1000759" -> "1000752"  [label="DDG: "];
"1000728" -> "1000759"  [label="DDG: "];
"1000707" -> "1000759"  [label="DDG: "];
"1000306" -> "1000759"  [label="DDG: "];
"1000165" -> "1000759"  [label="DDG: "];
"1000671" -> "1000759"  [label="DDG: "];
"1000349" -> "1000759"  [label="DDG: "];
"1000416" -> "1000759"  [label="DDG: "];
"1000276" -> "1000759"  [label="DDG: "];
"1000340" -> "1000759"  [label="DDG: "];
"1000584" -> "1000759"  [label="DDG: "];
"1000524" -> "1000759"  [label="DDG: "];
"1000485" -> "1000759"  [label="DDG: "];
"1000125" -> "1000759"  [label="DDG: "];
"1000570" -> "1000759"  [label="DDG: "];
"1000222" -> "1000759"  [label="DDG: "];
"1000199" -> "1000759"  [label="DDG: "];
"1000689" -> "1000759"  [label="DDG: "];
"1000612" -> "1000759"  [label="DDG: "];
"1000759" -> "1000761"  [label="DDG: "];
"1000752" -> "1000751"  [label="AST: "];
"1000753" -> "1000752"  [label="AST: "];
"1000754" -> "1000752"  [label="AST: "];
"1000755" -> "1000752"  [label="AST: "];
"1000756" -> "1000752"  [label="AST: "];
"1000762" -> "1000752"  [label="CFG: "];
"1000752" -> "1000770"  [label="DDG: "];
"1000752" -> "1000770"  [label="DDG: "];
"1000752" -> "1000770"  [label="DDG: "];
"1000752" -> "1000770"  [label="DDG: "];
"1000752" -> "1000770"  [label="DDG: "];
"1000167" -> "1000752"  [label="DDG: "];
"1000232" -> "1000752"  [label="DDG: "];
"1000232" -> "1000752"  [label="DDG: "];
"1000232" -> "1000752"  [label="DDG: "];
"1000131" -> "1000752"  [label="DDG: "];
"1000131" -> "1000752"  [label="DDG: "];
"1000131" -> "1000752"  [label="DDG: "];
"1000194" -> "1000752"  [label="DDG: "];
"1000194" -> "1000752"  [label="DDG: "];
"1000673" -> "1000752"  [label="DDG: "];
"1000730" -> "1000752"  [label="DDG: "];
"1000691" -> "1000752"  [label="DDG: "];
"1000709" -> "1000752"  [label="DDG: "];
"1000614" -> "1000752"  [label="DDG: "];
"1000103" -> "1000752"  [label="DDG: "];
"1000761" -> "1000751"  [label="AST: "];
"1000761" -> "1000762"  [label="CFG: "];
"1000762" -> "1000761"  [label="AST: "];
"1000770" -> "1000761"  [label="CFG: "];
"1000761" -> "1000770"  [label="DDG: "];
"1000762" -> "1000761"  [label="DDG: "];
}
