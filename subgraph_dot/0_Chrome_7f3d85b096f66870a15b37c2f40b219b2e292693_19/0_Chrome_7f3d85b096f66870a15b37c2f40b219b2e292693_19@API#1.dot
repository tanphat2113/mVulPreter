digraph "0_Chrome_7f3d85b096f66870a15b37c2f40b219b2e292693_19@API" {
"1000481" [label="(Call,png_free(png_ptr, png_ptr->big_row_buf))"];
"1000135" [label="(Call,png_init_read_transformations(png_ptr))"];
"1000109" [label="(MethodParameterIn,png_structp png_ptr)"];
"1000469" [label="(Call,png_error(png_ptr, \"This image requires a row greater than 64KB\"))"];
"1000496" [label="(Call,png_calloc(png_ptr,\n            row_bytes + 64))"];
"1000494" [label="(Call,(png_bytep)png_calloc(png_ptr,\n            row_bytes + 64))"];
"1000490" [label="(Call,png_ptr->big_row_buf = (png_bytep)png_calloc(png_ptr,\n            row_bytes + 64))"];
"1000520" [label="(Call,png_ptr->row_buf = png_ptr->big_row_buf + 32)"];
"1000524" [label="(Call,png_ptr->big_row_buf + 32)"];
"1000546" [label="(Call,png_error(png_ptr, \"This image requires a row greater than 64KB\"))"];
"1000559" [label="(Call,png_error(png_ptr, \"Row has too many bytes to allocate in memory.\"))"];
"1000571" [label="(Call,png_free(png_ptr, png_ptr->prev_row))"];
"1000582" [label="(Call,png_malloc(png_ptr, (png_uint_32)(\n        row_bytes + 1)))"];
"1000580" [label="(Call,(png_bytep)png_malloc(png_ptr, (png_uint_32)(\n        row_bytes + 1)))"];
"1000576" [label="(Call,png_ptr->prev_row = (png_bytep)png_malloc(png_ptr, (png_uint_32)(\n        row_bytes + 1)))"];
"1000589" [label="(Call,png_memset_check(png_ptr, png_ptr->prev_row, 0, row_bytes + 1))"];
"1000508" [label="(Call,png_malloc(png_ptr,\n            row_bytes + 64))"];
"1000506" [label="(Call,(png_bytep)png_malloc(png_ptr,\n            row_bytes + 64))"];
"1000502" [label="(Call,png_ptr->big_row_buf = (png_bytep)png_malloc(png_ptr,\n            row_bytes + 64))"];
"1000483" [label="(Call,png_ptr->big_row_buf)"];
"1000531" [label="(Identifier,png_ptr)"];
"1000578" [label="(Identifier,png_ptr)"];
"1000503" [label="(Call,png_ptr->big_row_buf)"];
"1000565" [label="(Identifier,row_bytes)"];
"1000510" [label="(Call,row_bytes + 64)"];
"1000583" [label="(Identifier,png_ptr)"];
"1000110" [label="(Block,)"];
"1000594" [label="(Literal,0)"];
"1000549" [label="(ControlStructure,if ((png_uint_32)row_bytes > (png_uint_32)(PNG_SIZE_MAX - 1)))"];
"1000528" [label="(Literal,32)"];
"1000570" [label="(Block,)"];
"1000136" [label="(Identifier,png_ptr)"];
"1000559" [label="(Call,png_error(png_ptr, \"Row has too many bytes to allocate in memory.\"))"];
"1000135" [label="(Call,png_init_read_transformations(png_ptr))"];
"1000572" [label="(Identifier,png_ptr)"];
"1000508" [label="(Call,png_malloc(png_ptr,\n            row_bytes + 64))"];
"1000497" [label="(Identifier,png_ptr)"];
"1000491" [label="(Call,png_ptr->big_row_buf)"];
"1000520" [label="(Call,png_ptr->row_buf = png_ptr->big_row_buf + 32)"];
"1000464" [label="(Call,row_bytes > (png_uint_32)65536L)"];
"1000591" [label="(Call,png_ptr->prev_row)"];
"1000571" [label="(Call,png_free(png_ptr, png_ptr->prev_row))"];
"1000525" [label="(Call,png_ptr->big_row_buf)"];
"1000469" [label="(Call,png_error(png_ptr, \"This image requires a row greater than 64KB\"))"];
"1000471" [label="(Literal,\"This image requires a row greater than 64KB\")"];
"1000657" [label="(MethodReturn,RET)"];
"1000496" [label="(Call,png_calloc(png_ptr,\n            row_bytes + 64))"];
"1000577" [label="(Call,png_ptr->prev_row)"];
"1000475" [label="(Identifier,row_bytes)"];
"1000546" [label="(Call,png_error(png_ptr, \"This image requires a row greater than 64KB\"))"];
"1000494" [label="(Call,(png_bytep)png_calloc(png_ptr,\n            row_bytes + 64))"];
"1000498" [label="(Call,row_bytes + 64)"];
"1000580" [label="(Call,(png_bytep)png_malloc(png_ptr, (png_uint_32)(\n        row_bytes + 1)))"];
"1000584" [label="(Call,(png_uint_32)(\n        row_bytes + 1))"];
"1000573" [label="(Call,png_ptr->prev_row)"];
"1000589" [label="(Call,png_memset_check(png_ptr, png_ptr->prev_row, 0, row_bytes + 1))"];
"1000470" [label="(Identifier,png_ptr)"];
"1000486" [label="(ControlStructure,if (png_ptr->interlaced))"];
"1000547" [label="(Identifier,png_ptr)"];
"1000582" [label="(Call,png_malloc(png_ptr, (png_uint_32)(\n        row_bytes + 1)))"];
"1000560" [label="(Identifier,png_ptr)"];
"1000463" [label="(ControlStructure,if (row_bytes > (png_uint_32)65536L))"];
"1000561" [label="(Literal,\"Row has too many bytes to allocate in memory.\")"];
"1000139" [label="(Identifier,png_ptr)"];
"1000524" [label="(Call,png_ptr->big_row_buf + 32)"];
"1000509" [label="(Identifier,png_ptr)"];
"1000521" [label="(Call,png_ptr->row_buf)"];
"1000482" [label="(Identifier,png_ptr)"];
"1000576" [label="(Call,png_ptr->prev_row = (png_bytep)png_malloc(png_ptr, (png_uint_32)(\n        row_bytes + 1)))"];
"1000548" [label="(Literal,\"This image requires a row greater than 64KB\")"];
"1000488" [label="(Identifier,png_ptr)"];
"1000536" [label="(ControlStructure,if ((png_uint_32)row_bytes + 1 > (png_uint_32)65536L))"];
"1000551" [label="(Call,(png_uint_32)row_bytes)"];
"1000506" [label="(Call,(png_bytep)png_malloc(png_ptr,\n            row_bytes + 64))"];
"1000501" [label="(ControlStructure,else)"];
"1000490" [label="(Call,png_ptr->big_row_buf = (png_bytep)png_calloc(png_ptr,\n            row_bytes + 64))"];
"1000515" [label="(Identifier,png_ptr)"];
"1000502" [label="(Call,png_ptr->big_row_buf = (png_bytep)png_malloc(png_ptr,\n            row_bytes + 64))"];
"1000109" [label="(MethodParameterIn,png_structp png_ptr)"];
"1000481" [label="(Call,png_free(png_ptr, png_ptr->big_row_buf))"];
"1000590" [label="(Identifier,png_ptr)"];
"1000600" [label="(Identifier,png_ptr)"];
"1000595" [label="(Call,row_bytes + 1)"];
"1000480" [label="(Block,)"];
"1000481" -> "1000480"  [label="AST: "];
"1000481" -> "1000483"  [label="CFG: "];
"1000482" -> "1000481"  [label="AST: "];
"1000483" -> "1000481"  [label="AST: "];
"1000488" -> "1000481"  [label="CFG: "];
"1000481" -> "1000657"  [label="DDG: "];
"1000135" -> "1000481"  [label="DDG: "];
"1000469" -> "1000481"  [label="DDG: "];
"1000109" -> "1000481"  [label="DDG: "];
"1000481" -> "1000496"  [label="DDG: "];
"1000481" -> "1000508"  [label="DDG: "];
"1000135" -> "1000110"  [label="AST: "];
"1000135" -> "1000136"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000139" -> "1000135"  [label="CFG: "];
"1000135" -> "1000657"  [label="DDG: "];
"1000135" -> "1000657"  [label="DDG: "];
"1000109" -> "1000135"  [label="DDG: "];
"1000135" -> "1000469"  [label="DDG: "];
"1000135" -> "1000546"  [label="DDG: "];
"1000135" -> "1000559"  [label="DDG: "];
"1000135" -> "1000571"  [label="DDG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000657"  [label="DDG: "];
"1000109" -> "1000469"  [label="DDG: "];
"1000109" -> "1000496"  [label="DDG: "];
"1000109" -> "1000508"  [label="DDG: "];
"1000109" -> "1000546"  [label="DDG: "];
"1000109" -> "1000559"  [label="DDG: "];
"1000109" -> "1000571"  [label="DDG: "];
"1000109" -> "1000582"  [label="DDG: "];
"1000109" -> "1000589"  [label="DDG: "];
"1000469" -> "1000463"  [label="AST: "];
"1000469" -> "1000471"  [label="CFG: "];
"1000470" -> "1000469"  [label="AST: "];
"1000471" -> "1000469"  [label="AST: "];
"1000475" -> "1000469"  [label="CFG: "];
"1000469" -> "1000657"  [label="DDG: "];
"1000469" -> "1000657"  [label="DDG: "];
"1000469" -> "1000546"  [label="DDG: "];
"1000469" -> "1000559"  [label="DDG: "];
"1000469" -> "1000571"  [label="DDG: "];
"1000496" -> "1000494"  [label="AST: "];
"1000496" -> "1000498"  [label="CFG: "];
"1000497" -> "1000496"  [label="AST: "];
"1000498" -> "1000496"  [label="AST: "];
"1000494" -> "1000496"  [label="CFG: "];
"1000496" -> "1000657"  [label="DDG: "];
"1000496" -> "1000494"  [label="DDG: "];
"1000496" -> "1000494"  [label="DDG: "];
"1000464" -> "1000496"  [label="DDG: "];
"1000496" -> "1000546"  [label="DDG: "];
"1000496" -> "1000559"  [label="DDG: "];
"1000496" -> "1000571"  [label="DDG: "];
"1000494" -> "1000490"  [label="AST: "];
"1000495" -> "1000494"  [label="AST: "];
"1000490" -> "1000494"  [label="CFG: "];
"1000494" -> "1000657"  [label="DDG: "];
"1000494" -> "1000490"  [label="DDG: "];
"1000490" -> "1000486"  [label="AST: "];
"1000491" -> "1000490"  [label="AST: "];
"1000515" -> "1000490"  [label="CFG: "];
"1000490" -> "1000657"  [label="DDG: "];
"1000490" -> "1000520"  [label="DDG: "];
"1000490" -> "1000524"  [label="DDG: "];
"1000520" -> "1000480"  [label="AST: "];
"1000520" -> "1000524"  [label="CFG: "];
"1000521" -> "1000520"  [label="AST: "];
"1000524" -> "1000520"  [label="AST: "];
"1000531" -> "1000520"  [label="CFG: "];
"1000520" -> "1000657"  [label="DDG: "];
"1000520" -> "1000657"  [label="DDG: "];
"1000502" -> "1000520"  [label="DDG: "];
"1000524" -> "1000528"  [label="CFG: "];
"1000525" -> "1000524"  [label="AST: "];
"1000528" -> "1000524"  [label="AST: "];
"1000524" -> "1000657"  [label="DDG: "];
"1000502" -> "1000524"  [label="DDG: "];
"1000546" -> "1000536"  [label="AST: "];
"1000546" -> "1000548"  [label="CFG: "];
"1000547" -> "1000546"  [label="AST: "];
"1000548" -> "1000546"  [label="AST: "];
"1000552" -> "1000546"  [label="CFG: "];
"1000546" -> "1000657"  [label="DDG: "];
"1000546" -> "1000657"  [label="DDG: "];
"1000508" -> "1000546"  [label="DDG: "];
"1000546" -> "1000559"  [label="DDG: "];
"1000546" -> "1000571"  [label="DDG: "];
"1000559" -> "1000549"  [label="AST: "];
"1000559" -> "1000561"  [label="CFG: "];
"1000560" -> "1000559"  [label="AST: "];
"1000561" -> "1000559"  [label="AST: "];
"1000565" -> "1000559"  [label="CFG: "];
"1000559" -> "1000657"  [label="DDG: "];
"1000559" -> "1000657"  [label="DDG: "];
"1000508" -> "1000559"  [label="DDG: "];
"1000559" -> "1000571"  [label="DDG: "];
"1000571" -> "1000570"  [label="AST: "];
"1000571" -> "1000573"  [label="CFG: "];
"1000572" -> "1000571"  [label="AST: "];
"1000573" -> "1000571"  [label="AST: "];
"1000578" -> "1000571"  [label="CFG: "];
"1000571" -> "1000657"  [label="DDG: "];
"1000508" -> "1000571"  [label="DDG: "];
"1000571" -> "1000582"  [label="DDG: "];
"1000582" -> "1000580"  [label="AST: "];
"1000582" -> "1000584"  [label="CFG: "];
"1000583" -> "1000582"  [label="AST: "];
"1000584" -> "1000582"  [label="AST: "];
"1000580" -> "1000582"  [label="CFG: "];
"1000582" -> "1000657"  [label="DDG: "];
"1000582" -> "1000580"  [label="DDG: "];
"1000582" -> "1000580"  [label="DDG: "];
"1000584" -> "1000582"  [label="DDG: "];
"1000582" -> "1000589"  [label="DDG: "];
"1000580" -> "1000576"  [label="AST: "];
"1000581" -> "1000580"  [label="AST: "];
"1000576" -> "1000580"  [label="CFG: "];
"1000580" -> "1000657"  [label="DDG: "];
"1000580" -> "1000576"  [label="DDG: "];
"1000576" -> "1000570"  [label="AST: "];
"1000577" -> "1000576"  [label="AST: "];
"1000590" -> "1000576"  [label="CFG: "];
"1000576" -> "1000657"  [label="DDG: "];
"1000576" -> "1000589"  [label="DDG: "];
"1000589" -> "1000570"  [label="AST: "];
"1000589" -> "1000595"  [label="CFG: "];
"1000590" -> "1000589"  [label="AST: "];
"1000591" -> "1000589"  [label="AST: "];
"1000594" -> "1000589"  [label="AST: "];
"1000595" -> "1000589"  [label="AST: "];
"1000600" -> "1000589"  [label="CFG: "];
"1000589" -> "1000657"  [label="DDG: "];
"1000589" -> "1000657"  [label="DDG: "];
"1000589" -> "1000657"  [label="DDG: "];
"1000551" -> "1000589"  [label="DDG: "];
"1000508" -> "1000506"  [label="AST: "];
"1000508" -> "1000510"  [label="CFG: "];
"1000509" -> "1000508"  [label="AST: "];
"1000510" -> "1000508"  [label="AST: "];
"1000506" -> "1000508"  [label="CFG: "];
"1000508" -> "1000657"  [label="DDG: "];
"1000508" -> "1000506"  [label="DDG: "];
"1000508" -> "1000506"  [label="DDG: "];
"1000464" -> "1000508"  [label="DDG: "];
"1000506" -> "1000502"  [label="AST: "];
"1000507" -> "1000506"  [label="AST: "];
"1000502" -> "1000506"  [label="CFG: "];
"1000506" -> "1000657"  [label="DDG: "];
"1000506" -> "1000502"  [label="DDG: "];
"1000502" -> "1000501"  [label="AST: "];
"1000503" -> "1000502"  [label="AST: "];
"1000515" -> "1000502"  [label="CFG: "];
"1000502" -> "1000657"  [label="DDG: "];
}
