digraph "0_jabberd2_8416ae54ecefa670534f27a31db71d048b9c7f16@pointer" {
"1000220" [label="(Call,my_realm = s->req_to)"];
"1000182" [label="(Call,xhash_get(c2s->hosts, s->req_to))"];
"1000170" [label="(Call,s->req_to == NULL)"];
"1000149" [label="(Call,s != NULL)"];
"1000122" [label="(MethodParameterIn,sx_t s)"];
"1000225" [label="(Call,strncpy(buf, my_realm, 256))"];
"1000232" [label="(Call,(void *)buf)"];
"1000229" [label="(Call,*res = (void *)buf)"];
"1000235" [label="(Call,log_debug(ZONE, \"sx sasl callback: get realm: realm is '%s'\", buf))"];
"1000234" [label="(Identifier,buf)"];
"1000222" [label="(Call,s->req_to)"];
"1000180" [label="(Call,host = xhash_get(c2s->hosts, s->req_to))"];
"1000190" [label="(Call,host == NULL)"];
"1000170" [label="(Call,s->req_to == NULL)"];
"1000240" [label="(Identifier,sx_sasl_ret_OK)"];
"1000151" [label="(Identifier,NULL)"];
"1000174" [label="(Identifier,NULL)"];
"1000148" [label="(Call,assert(s != NULL))"];
"1000183" [label="(Call,c2s->hosts)"];
"1000634" [label="(Call,host == NULL)"];
"1000194" [label="(Call,log_write(c2s->log, LOG_ERR, \"SASL callback for non-existing host: %s\", s->req_to))"];
"1000186" [label="(Call,s->req_to)"];
"1000235" [label="(Call,log_debug(ZONE, \"sx sasl callback: get realm: realm is '%s'\", buf))"];
"1000221" [label="(Identifier,my_realm)"];
"1000169" [label="(ControlStructure,if(s->req_to == NULL))"];
"1000181" [label="(Identifier,host)"];
"1000226" [label="(Identifier,buf)"];
"1000231" [label="(Identifier,res)"];
"1000229" [label="(Call,*res = (void *)buf)"];
"1000228" [label="(Literal,256)"];
"1000237" [label="(Literal,\"sx sasl callback: get realm: realm is '%s'\")"];
"1000176" [label="(Identifier,my_realm)"];
"1000225" [label="(Call,strncpy(buf, my_realm, 256))"];
"1000217" [label="(Call,my_realm == NULL)"];
"1000227" [label="(Identifier,my_realm)"];
"1000429" [label="(Call,sess != NULL)"];
"1000236" [label="(Identifier,ZONE)"];
"1000308" [label="(Call,sess != NULL)"];
"1000171" [label="(Call,s->req_to)"];
"1000230" [label="(Call,*res)"];
"1000182" [label="(Call,xhash_get(c2s->hosts, s->req_to))"];
"1000150" [label="(Identifier,s)"];
"1000122" [label="(MethodParameterIn,sx_t s)"];
"1000232" [label="(Call,(void *)buf)"];
"1000167" [label="(Block,)"];
"1000220" [label="(Call,my_realm = s->req_to)"];
"1000216" [label="(ControlStructure,if(my_realm == NULL))"];
"1000175" [label="(Call,my_realm = \"\")"];
"1000149" [label="(Call,s != NULL)"];
"1000766" [label="(MethodReturn,static int)"];
"1000244" [label="(Call,sess != NULL)"];
"1000238" [label="(Identifier,buf)"];
"1000220" -> "1000216"  [label="AST: "];
"1000220" -> "1000222"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000222" -> "1000220"  [label="AST: "];
"1000226" -> "1000220"  [label="CFG: "];
"1000220" -> "1000766"  [label="DDG: "];
"1000182" -> "1000220"  [label="DDG: "];
"1000220" -> "1000225"  [label="DDG: "];
"1000182" -> "1000180"  [label="AST: "];
"1000182" -> "1000186"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000186" -> "1000182"  [label="AST: "];
"1000180" -> "1000182"  [label="CFG: "];
"1000182" -> "1000766"  [label="DDG: "];
"1000182" -> "1000766"  [label="DDG: "];
"1000182" -> "1000180"  [label="DDG: "];
"1000182" -> "1000180"  [label="DDG: "];
"1000170" -> "1000182"  [label="DDG: "];
"1000182" -> "1000194"  [label="DDG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000170" -> "1000174"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000174" -> "1000170"  [label="AST: "];
"1000176" -> "1000170"  [label="CFG: "];
"1000181" -> "1000170"  [label="CFG: "];
"1000170" -> "1000766"  [label="DDG: "];
"1000170" -> "1000766"  [label="DDG: "];
"1000170" -> "1000766"  [label="DDG: "];
"1000149" -> "1000170"  [label="DDG: "];
"1000170" -> "1000190"  [label="DDG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000148" -> "1000149"  [label="CFG: "];
"1000149" -> "1000766"  [label="DDG: "];
"1000149" -> "1000766"  [label="DDG: "];
"1000149" -> "1000148"  [label="DDG: "];
"1000149" -> "1000148"  [label="DDG: "];
"1000122" -> "1000149"  [label="DDG: "];
"1000149" -> "1000244"  [label="DDG: "];
"1000149" -> "1000308"  [label="DDG: "];
"1000149" -> "1000429"  [label="DDG: "];
"1000149" -> "1000634"  [label="DDG: "];
"1000122" -> "1000118"  [label="AST: "];
"1000122" -> "1000766"  [label="DDG: "];
"1000225" -> "1000167"  [label="AST: "];
"1000225" -> "1000228"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000227" -> "1000225"  [label="AST: "];
"1000228" -> "1000225"  [label="AST: "];
"1000231" -> "1000225"  [label="CFG: "];
"1000225" -> "1000766"  [label="DDG: "];
"1000225" -> "1000766"  [label="DDG: "];
"1000217" -> "1000225"  [label="DDG: "];
"1000175" -> "1000225"  [label="DDG: "];
"1000225" -> "1000232"  [label="DDG: "];
"1000232" -> "1000229"  [label="AST: "];
"1000232" -> "1000234"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000234" -> "1000232"  [label="AST: "];
"1000229" -> "1000232"  [label="CFG: "];
"1000232" -> "1000229"  [label="DDG: "];
"1000232" -> "1000235"  [label="DDG: "];
"1000229" -> "1000167"  [label="AST: "];
"1000230" -> "1000229"  [label="AST: "];
"1000236" -> "1000229"  [label="CFG: "];
"1000229" -> "1000766"  [label="DDG: "];
"1000229" -> "1000766"  [label="DDG: "];
"1000235" -> "1000167"  [label="AST: "];
"1000235" -> "1000238"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="AST: "];
"1000238" -> "1000235"  [label="AST: "];
"1000240" -> "1000235"  [label="CFG: "];
"1000235" -> "1000766"  [label="DDG: "];
"1000235" -> "1000766"  [label="DDG: "];
"1000235" -> "1000766"  [label="DDG: "];
}
