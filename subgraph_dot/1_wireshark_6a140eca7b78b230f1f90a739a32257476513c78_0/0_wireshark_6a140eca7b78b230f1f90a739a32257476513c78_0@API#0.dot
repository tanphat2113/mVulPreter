digraph "0_wireshark_6a140eca7b78b230f1f90a739a32257476513c78_0@API" {
"1000128" [label="(Call,file_gets(line, NETSCREEN_LINE_LENGTH, wth->random_fh) == NULL)"];
"1000129" [label="(Call,file_gets(line, NETSCREEN_LINE_LENGTH, wth->random_fh))"];
"1000115" [label="(Call,file_seek(wth->random_fh, seek_off, SEEK_SET, err))"];
"1000102" [label="(MethodParameterIn,gint64 seek_off)"];
"1000105" [label="(MethodParameterIn,int *err)"];
"1000116" [label="(Call,wth->random_fh)"];
"1000177" [label="(Call,parse_netscreen_hex_dump(wth->random_fh, pkt_len, cap_int,\n\t    cap_dst, phdr, buf, err, err_info))"];
"1000192" [label="(MethodReturn,RET)"];
"1000114" [label="(Call,file_seek(wth->random_fh, seek_off, SEEK_SET, err) == -1)"];
"1000128" [label="(Call,file_gets(line, NETSCREEN_LINE_LENGTH, wth->random_fh) == NULL)"];
"1000123" [label="(Literal,1)"];
"1000115" [label="(Call,file_seek(wth->random_fh, seek_off, SEEK_SET, err))"];
"1000119" [label="(Identifier,seek_off)"];
"1000159" [label="(Call,parse_netscreen_rec_hdr(phdr, line, cap_int, &cap_dir,\n\t    cap_dst, err, err_info))"];
"1000140" [label="(Call,file_error(wth->random_fh, err_info))"];
"1000120" [label="(Identifier,SEEK_SET)"];
"1000105" [label="(MethodParameterIn,int *err)"];
"1000129" [label="(Call,file_gets(line, NETSCREEN_LINE_LENGTH, wth->random_fh))"];
"1000127" [label="(ControlStructure,if (file_gets(line, NETSCREEN_LINE_LENGTH, wth->random_fh) == NULL))"];
"1000130" [label="(Identifier,line)"];
"1000135" [label="(Identifier,NULL)"];
"1000121" [label="(Identifier,err)"];
"1000139" [label="(Identifier,err)"];
"1000158" [label="(Identifier,pkt_len)"];
"1000102" [label="(MethodParameterIn,gint64 seek_off)"];
"1000132" [label="(Call,wth->random_fh)"];
"1000131" [label="(Identifier,NETSCREEN_LINE_LENGTH)"];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000135"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000135" -> "1000128"  [label="AST: "];
"1000139" -> "1000128"  [label="CFG: "];
"1000158" -> "1000128"  [label="CFG: "];
"1000128" -> "1000192"  [label="DDG: file_gets(line, NETSCREEN_LINE_LENGTH, wth->random_fh) == NULL"];
"1000128" -> "1000192"  [label="DDG: file_gets(line, NETSCREEN_LINE_LENGTH, wth->random_fh)"];
"1000128" -> "1000192"  [label="DDG: NULL"];
"1000129" -> "1000128"  [label="DDG: line"];
"1000129" -> "1000128"  [label="DDG: NETSCREEN_LINE_LENGTH"];
"1000129" -> "1000128"  [label="DDG: wth->random_fh"];
"1000129" -> "1000132"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000129"  [label="AST: "];
"1000132" -> "1000129"  [label="AST: "];
"1000135" -> "1000129"  [label="CFG: "];
"1000129" -> "1000192"  [label="DDG: line"];
"1000129" -> "1000192"  [label="DDG: wth->random_fh"];
"1000129" -> "1000192"  [label="DDG: NETSCREEN_LINE_LENGTH"];
"1000115" -> "1000129"  [label="DDG: wth->random_fh"];
"1000129" -> "1000140"  [label="DDG: wth->random_fh"];
"1000129" -> "1000159"  [label="DDG: line"];
"1000129" -> "1000177"  [label="DDG: wth->random_fh"];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000121"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000119" -> "1000115"  [label="AST: "];
"1000120" -> "1000115"  [label="AST: "];
"1000121" -> "1000115"  [label="AST: "];
"1000123" -> "1000115"  [label="CFG: "];
"1000115" -> "1000192"  [label="DDG: seek_off"];
"1000115" -> "1000192"  [label="DDG: err"];
"1000115" -> "1000192"  [label="DDG: SEEK_SET"];
"1000115" -> "1000192"  [label="DDG: wth->random_fh"];
"1000115" -> "1000114"  [label="DDG: wth->random_fh"];
"1000115" -> "1000114"  [label="DDG: seek_off"];
"1000115" -> "1000114"  [label="DDG: SEEK_SET"];
"1000115" -> "1000114"  [label="DDG: err"];
"1000102" -> "1000115"  [label="DDG: seek_off"];
"1000105" -> "1000115"  [label="DDG: err"];
"1000115" -> "1000159"  [label="DDG: err"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000192"  [label="DDG: seek_off"];
"1000105" -> "1000100"  [label="AST: "];
"1000105" -> "1000192"  [label="DDG: err"];
"1000105" -> "1000159"  [label="DDG: err"];
"1000105" -> "1000177"  [label="DDG: err"];
}
