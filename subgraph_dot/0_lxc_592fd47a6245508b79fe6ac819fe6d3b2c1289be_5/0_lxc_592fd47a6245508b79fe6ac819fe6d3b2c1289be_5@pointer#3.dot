digraph "0_lxc_592fd47a6245508b79fe6ac819fe6d3b2c1289be_5@pointer" {
"1000103" [label="(MethodParameterIn,const char *target)"];
"1000112" [label="(Call,safe_mount(fsname, target, fstype, mountflags & ~MS_REMOUNT, data, rootfs))"];
"1000125" [label="(Call,INFO(\"failed to mount '%s' on '%s' (optional): %s\", fsname,\n \t\t\t     target, strerror(errno)))"];
"1000135" [label="(Call,SYSERROR(\"failed to mount '%s' on '%s'\", fsname, target))"];
"1000151" [label="(Call,DEBUG(\"remounting %s on %s to respect bind or remount options\",\n\t\t      fsname ? fsname : \"(none)\", target ? target : \"(none)\"))"];
"1000153" [label="(Call,fsname ? fsname : \"(none)\")"];
"1000157" [label="(Call,target ? target : \"(none)\")"];
"1000174" [label="(Call,statvfs(fsname, &sb))"];
"1000173" [label="(Call,statvfs(fsname, &sb) == 0)"];
"1000220" [label="(Call,DEBUG(\"(at remount) flags for %s was %lu, required extra flags are %lu\", fsname, sb.f_flag, required_flags))"];
"1000236" [label="(Call,required_flags & ~mountflags)"];
"1000235" [label="(Call,!(required_flags & ~mountflags))"];
"1000234" [label="(Call,!(required_flags & ~mountflags) && rqd_flags == 0)"];
"1000247" [label="(Call,mountflags |= required_flags)"];
"1000256" [label="(Call,mountflags | MS_REMOUNT)"];
"1000252" [label="(Call,mount(fsname, target, fstype,\n\t\t\t  mountflags | MS_REMOUNT, data))"];
"1000251" [label="(Call,mount(fsname, target, fstype,\n\t\t\t  mountflags | MS_REMOUNT, data) < 0)"];
"1000265" [label="(Call,INFO(\"failed to mount '%s' on '%s' (optional): %s\",\n \t\t\t\t\t fsname, target, strerror(errno)))"];
"1000275" [label="(Call,SYSERROR(\"failed to mount '%s' on '%s'\",\n\t\t\t\t\t fsname, target))"];
"1000283" [label="(Call,DEBUG(\"mounted '%s' on '%s', type '%s'\", fsname, target, fstype))"];
"1000281" [label="(Literal,1)"];
"1000175" [label="(Identifier,fsname)"];
"1000244" [label="(Literal,\"mountflags already was %lu, skipping remount\")"];
"1000249" [label="(Identifier,required_flags)"];
"1000272" [label="(Literal,0)"];
"1000282" [label="(JumpTarget,skipremount:)"];
"1000105" [label="(MethodParameterIn,unsigned long mountflags)"];
"1000153" [label="(Call,fsname ? fsname : \"(none)\")"];
"1000103" [label="(MethodParameterIn,const char *target)"];
"1000235" [label="(Call,!(required_flags & ~mountflags))"];
"1000123" [label="(Identifier,optional)"];
"1000155" [label="(Identifier,fsname)"];
"1000251" [label="(Call,mount(fsname, target, fstype,\n\t\t\t  mountflags | MS_REMOUNT, data) < 0)"];
"1000267" [label="(Identifier,fsname)"];
"1000266" [label="(Literal,\"failed to mount '%s' on '%s' (optional): %s\")"];
"1000258" [label="(Identifier,MS_REMOUNT)"];
"1000150" [label="(Block,)"];
"1000257" [label="(Identifier,mountflags)"];
"1000239" [label="(Call,rqd_flags == 0)"];
"1000111" [label="(ControlStructure,if (safe_mount(fsname, target, fstype, mountflags & ~MS_REMOUNT, data, rootfs)))"];
"1000106" [label="(MethodParameterIn,const char *data)"];
"1000112" [label="(Call,safe_mount(fsname, target, fstype, mountflags & ~MS_REMOUNT, data, rootfs))"];
"1000145" [label="(Identifier,mountflags)"];
"1000276" [label="(Literal,\"failed to mount '%s' on '%s'\")"];
"1000104" [label="(MethodParameterIn,const char *fstype)"];
"1000212" [label="(Call,sb.f_flag & MS_NOEXEC)"];
"1000236" [label="(Call,required_flags & ~mountflags)"];
"1000217" [label="(Call,required_flags |= MS_NOEXEC)"];
"1000114" [label="(Identifier,target)"];
"1000277" [label="(Identifier,fsname)"];
"1000166" [label="(Call,mountflags & MS_RDONLY)"];
"1000181" [label="(Call,required_flags = rqd_flags)"];
"1000182" [label="(Identifier,required_flags)"];
"1000226" [label="(Identifier,required_flags)"];
"1000259" [label="(Identifier,data)"];
"1000141" [label="(Literal,1)"];
"1000156" [label="(Literal,\"(none)\")"];
"1000108" [label="(MethodParameterIn,const char *rootfs)"];
"1000163" [label="(Identifier,rqd_flags)"];
"1000265" [label="(Call,INFO(\"failed to mount '%s' on '%s' (optional): %s\",\n \t\t\t\t\t fsname, target, strerror(errno)))"];
"1000135" [label="(Call,SYSERROR(\"failed to mount '%s' on '%s'\", fsname, target))"];
"1000129" [label="(Call,strerror(errno))"];
"1000176" [label="(Call,&sb)"];
"1000284" [label="(Literal,\"mounted '%s' on '%s', type '%s'\")"];
"1000233" [label="(ControlStructure,if (!(required_flags & ~mountflags) && rqd_flags == 0))"];
"1000275" [label="(Call,SYSERROR(\"failed to mount '%s' on '%s'\",\n\t\t\t\t\t fsname, target))"];
"1000240" [label="(Identifier,rqd_flags)"];
"1000222" [label="(Identifier,fsname)"];
"1000260" [label="(Literal,0)"];
"1000229" [label="(Call,mountflags & MS_REMOUNT)"];
"1000252" [label="(Call,mount(fsname, target, fstype,\n\t\t\t  mountflags | MS_REMOUNT, data))"];
"1000274" [label="(Block,)"];
"1000134" [label="(Block,)"];
"1000220" [label="(Call,DEBUG(\"(at remount) flags for %s was %lu, required extra flags are %lu\", fsname, sb.f_flag, required_flags))"];
"1000128" [label="(Identifier,target)"];
"1000152" [label="(Literal,\"remounting %s on %s to respect bind or remount options\")"];
"1000126" [label="(Literal,\"failed to mount '%s' on '%s' (optional): %s\")"];
"1000238" [label="(Identifier,~mountflags)"];
"1000199" [label="(Call,required_flags |= MS_NODEV)"];
"1000263" [label="(Identifier,optional)"];
"1000132" [label="(Literal,0)"];
"1000158" [label="(Identifier,target)"];
"1000116" [label="(Call,mountflags & ~MS_REMOUNT)"];
"1000137" [label="(Identifier,fsname)"];
"1000285" [label="(Identifier,fsname)"];
"1000234" [label="(Call,!(required_flags & ~mountflags) && rqd_flags == 0)"];
"1000269" [label="(Call,strerror(errno))"];
"1000255" [label="(Identifier,fstype)"];
"1000256" [label="(Call,mountflags | MS_REMOUNT)"];
"1000250" [label="(ControlStructure,if (mount(fsname, target, fstype,\n\t\t\t  mountflags | MS_REMOUNT, data) < 0))"];
"1000154" [label="(Identifier,fsname)"];
"1000283" [label="(Call,DEBUG(\"mounted '%s' on '%s', type '%s'\", fsname, target, fstype))"];
"1000119" [label="(Identifier,data)"];
"1000138" [label="(Identifier,target)"];
"1000237" [label="(Identifier,required_flags)"];
"1000268" [label="(Identifier,target)"];
"1000173" [label="(Call,statvfs(fsname, &sb) == 0)"];
"1000253" [label="(Identifier,fsname)"];
"1000223" [label="(Call,sb.f_flag)"];
"1000151" [label="(Call,DEBUG(\"remounting %s on %s to respect bind or remount options\",\n\t\t      fsname ? fsname : \"(none)\", target ? target : \"(none)\"))"];
"1000113" [label="(Identifier,fsname)"];
"1000254" [label="(Identifier,target)"];
"1000287" [label="(Identifier,fstype)"];
"1000102" [label="(MethodParameterIn,const char *fsname)"];
"1000248" [label="(Identifier,mountflags)"];
"1000127" [label="(Identifier,fsname)"];
"1000286" [label="(Identifier,target)"];
"1000289" [label="(Literal,0)"];
"1000109" [label="(Block,)"];
"1000190" [label="(Call,required_flags |= MS_NOSUID)"];
"1000124" [label="(Block,)"];
"1000144" [label="(Call,mountflags & MS_REMOUNT)"];
"1000157" [label="(Call,target ? target : \"(none)\")"];
"1000115" [label="(Identifier,fstype)"];
"1000136" [label="(Literal,\"failed to mount '%s' on '%s'\")"];
"1000160" [label="(Literal,\"(none)\")"];
"1000174" [label="(Call,statvfs(fsname, &sb))"];
"1000290" [label="(MethodReturn,static int)"];
"1000221" [label="(Literal,\"(at remount) flags for %s was %lu, required extra flags are %lu\")"];
"1000230" [label="(Identifier,mountflags)"];
"1000178" [label="(Literal,0)"];
"1000125" [label="(Call,INFO(\"failed to mount '%s' on '%s' (optional): %s\", fsname,\n \t\t\t     target, strerror(errno)))"];
"1000120" [label="(Identifier,rootfs)"];
"1000247" [label="(Call,mountflags |= required_flags)"];
"1000264" [label="(Block,)"];
"1000278" [label="(Identifier,target)"];
"1000159" [label="(Identifier,target)"];
"1000208" [label="(Call,required_flags |= MS_RDONLY)"];
"1000179" [label="(Block,)"];
"1000172" [label="(ControlStructure,if (statvfs(fsname, &sb) == 0))"];
"1000103" -> "1000101"  [label="AST: "];
"1000103" -> "1000290"  [label="DDG: "];
"1000103" -> "1000112"  [label="DDG: "];
"1000103" -> "1000125"  [label="DDG: "];
"1000103" -> "1000135"  [label="DDG: "];
"1000103" -> "1000151"  [label="DDG: "];
"1000103" -> "1000157"  [label="DDG: "];
"1000103" -> "1000252"  [label="DDG: "];
"1000103" -> "1000265"  [label="DDG: "];
"1000103" -> "1000275"  [label="DDG: "];
"1000103" -> "1000283"  [label="DDG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000112" -> "1000120"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000115" -> "1000112"  [label="AST: "];
"1000116" -> "1000112"  [label="AST: "];
"1000119" -> "1000112"  [label="AST: "];
"1000120" -> "1000112"  [label="AST: "];
"1000123" -> "1000112"  [label="CFG: "];
"1000145" -> "1000112"  [label="CFG: "];
"1000112" -> "1000290"  [label="DDG: "];
"1000112" -> "1000290"  [label="DDG: "];
"1000112" -> "1000290"  [label="DDG: "];
"1000112" -> "1000290"  [label="DDG: "];
"1000112" -> "1000290"  [label="DDG: "];
"1000102" -> "1000112"  [label="DDG: "];
"1000104" -> "1000112"  [label="DDG: "];
"1000116" -> "1000112"  [label="DDG: "];
"1000116" -> "1000112"  [label="DDG: "];
"1000106" -> "1000112"  [label="DDG: "];
"1000108" -> "1000112"  [label="DDG: "];
"1000112" -> "1000125"  [label="DDG: "];
"1000112" -> "1000125"  [label="DDG: "];
"1000112" -> "1000135"  [label="DDG: "];
"1000112" -> "1000135"  [label="DDG: "];
"1000112" -> "1000151"  [label="DDG: "];
"1000112" -> "1000151"  [label="DDG: "];
"1000112" -> "1000153"  [label="DDG: "];
"1000112" -> "1000157"  [label="DDG: "];
"1000112" -> "1000174"  [label="DDG: "];
"1000112" -> "1000252"  [label="DDG: "];
"1000112" -> "1000252"  [label="DDG: "];
"1000112" -> "1000252"  [label="DDG: "];
"1000112" -> "1000283"  [label="DDG: "];
"1000112" -> "1000283"  [label="DDG: "];
"1000112" -> "1000283"  [label="DDG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000129"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000128" -> "1000125"  [label="AST: "];
"1000129" -> "1000125"  [label="AST: "];
"1000132" -> "1000125"  [label="CFG: "];
"1000125" -> "1000290"  [label="DDG: "];
"1000125" -> "1000290"  [label="DDG: "];
"1000125" -> "1000290"  [label="DDG: "];
"1000125" -> "1000290"  [label="DDG: "];
"1000102" -> "1000125"  [label="DDG: "];
"1000129" -> "1000125"  [label="DDG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000135" -> "1000138"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000138" -> "1000135"  [label="AST: "];
"1000141" -> "1000135"  [label="CFG: "];
"1000135" -> "1000290"  [label="DDG: "];
"1000135" -> "1000290"  [label="DDG: "];
"1000135" -> "1000290"  [label="DDG: "];
"1000102" -> "1000135"  [label="DDG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000151" -> "1000157"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000153" -> "1000151"  [label="AST: "];
"1000157" -> "1000151"  [label="AST: "];
"1000163" -> "1000151"  [label="CFG: "];
"1000151" -> "1000290"  [label="DDG: "];
"1000151" -> "1000290"  [label="DDG: "];
"1000151" -> "1000290"  [label="DDG: "];
"1000102" -> "1000151"  [label="DDG: "];
"1000153" -> "1000155"  [label="CFG: "];
"1000153" -> "1000156"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000155" -> "1000153"  [label="AST: "];
"1000156" -> "1000153"  [label="AST: "];
"1000158" -> "1000153"  [label="CFG: "];
"1000102" -> "1000153"  [label="DDG: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000157" -> "1000160"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000160" -> "1000157"  [label="AST: "];
"1000174" -> "1000173"  [label="AST: "];
"1000174" -> "1000176"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000176" -> "1000174"  [label="AST: "];
"1000178" -> "1000174"  [label="CFG: "];
"1000174" -> "1000290"  [label="DDG: "];
"1000174" -> "1000173"  [label="DDG: "];
"1000174" -> "1000173"  [label="DDG: "];
"1000102" -> "1000174"  [label="DDG: "];
"1000174" -> "1000220"  [label="DDG: "];
"1000174" -> "1000252"  [label="DDG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000173" -> "1000178"  [label="CFG: "];
"1000178" -> "1000173"  [label="AST: "];
"1000182" -> "1000173"  [label="CFG: "];
"1000253" -> "1000173"  [label="CFG: "];
"1000173" -> "1000290"  [label="DDG: "];
"1000173" -> "1000290"  [label="DDG: "];
"1000220" -> "1000179"  [label="AST: "];
"1000220" -> "1000226"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000222" -> "1000220"  [label="AST: "];
"1000223" -> "1000220"  [label="AST: "];
"1000226" -> "1000220"  [label="AST: "];
"1000230" -> "1000220"  [label="CFG: "];
"1000220" -> "1000290"  [label="DDG: "];
"1000220" -> "1000290"  [label="DDG: "];
"1000102" -> "1000220"  [label="DDG: "];
"1000212" -> "1000220"  [label="DDG: "];
"1000181" -> "1000220"  [label="DDG: "];
"1000208" -> "1000220"  [label="DDG: "];
"1000199" -> "1000220"  [label="DDG: "];
"1000190" -> "1000220"  [label="DDG: "];
"1000217" -> "1000220"  [label="DDG: "];
"1000220" -> "1000236"  [label="DDG: "];
"1000220" -> "1000247"  [label="DDG: "];
"1000220" -> "1000252"  [label="DDG: "];
"1000220" -> "1000283"  [label="DDG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000236" -> "1000238"  [label="CFG: "];
"1000237" -> "1000236"  [label="AST: "];
"1000238" -> "1000236"  [label="AST: "];
"1000235" -> "1000236"  [label="CFG: "];
"1000236" -> "1000290"  [label="DDG: "];
"1000236" -> "1000290"  [label="DDG: "];
"1000236" -> "1000235"  [label="DDG: "];
"1000236" -> "1000235"  [label="DDG: "];
"1000236" -> "1000247"  [label="DDG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000240" -> "1000235"  [label="CFG: "];
"1000234" -> "1000235"  [label="CFG: "];
"1000235" -> "1000290"  [label="DDG: "];
"1000235" -> "1000234"  [label="DDG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000234" -> "1000239"  [label="CFG: "];
"1000239" -> "1000234"  [label="AST: "];
"1000244" -> "1000234"  [label="CFG: "];
"1000248" -> "1000234"  [label="CFG: "];
"1000234" -> "1000290"  [label="DDG: "];
"1000234" -> "1000290"  [label="DDG: "];
"1000234" -> "1000290"  [label="DDG: "];
"1000239" -> "1000234"  [label="DDG: "];
"1000239" -> "1000234"  [label="DDG: "];
"1000247" -> "1000179"  [label="AST: "];
"1000247" -> "1000249"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000249" -> "1000247"  [label="AST: "];
"1000253" -> "1000247"  [label="CFG: "];
"1000247" -> "1000290"  [label="DDG: "];
"1000247" -> "1000290"  [label="DDG: "];
"1000229" -> "1000247"  [label="DDG: "];
"1000105" -> "1000247"  [label="DDG: "];
"1000247" -> "1000256"  [label="DDG: "];
"1000256" -> "1000252"  [label="AST: "];
"1000256" -> "1000258"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000258" -> "1000256"  [label="AST: "];
"1000259" -> "1000256"  [label="CFG: "];
"1000256" -> "1000290"  [label="DDG: "];
"1000256" -> "1000290"  [label="DDG: "];
"1000256" -> "1000252"  [label="DDG: "];
"1000256" -> "1000252"  [label="DDG: "];
"1000166" -> "1000256"  [label="DDG: "];
"1000105" -> "1000256"  [label="DDG: "];
"1000229" -> "1000256"  [label="DDG: "];
"1000144" -> "1000256"  [label="DDG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000252" -> "1000259"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000254" -> "1000252"  [label="AST: "];
"1000255" -> "1000252"  [label="AST: "];
"1000259" -> "1000252"  [label="AST: "];
"1000260" -> "1000252"  [label="CFG: "];
"1000252" -> "1000290"  [label="DDG: "];
"1000252" -> "1000290"  [label="DDG: "];
"1000252" -> "1000290"  [label="DDG: "];
"1000252" -> "1000251"  [label="DDG: "];
"1000252" -> "1000251"  [label="DDG: "];
"1000252" -> "1000251"  [label="DDG: "];
"1000252" -> "1000251"  [label="DDG: "];
"1000252" -> "1000251"  [label="DDG: "];
"1000102" -> "1000252"  [label="DDG: "];
"1000104" -> "1000252"  [label="DDG: "];
"1000106" -> "1000252"  [label="DDG: "];
"1000252" -> "1000265"  [label="DDG: "];
"1000252" -> "1000265"  [label="DDG: "];
"1000252" -> "1000275"  [label="DDG: "];
"1000252" -> "1000275"  [label="DDG: "];
"1000252" -> "1000283"  [label="DDG: "];
"1000252" -> "1000283"  [label="DDG: "];
"1000252" -> "1000283"  [label="DDG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000251" -> "1000260"  [label="CFG: "];
"1000260" -> "1000251"  [label="AST: "];
"1000263" -> "1000251"  [label="CFG: "];
"1000282" -> "1000251"  [label="CFG: "];
"1000251" -> "1000290"  [label="DDG: "];
"1000251" -> "1000290"  [label="DDG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000265" -> "1000269"  [label="CFG: "];
"1000266" -> "1000265"  [label="AST: "];
"1000267" -> "1000265"  [label="AST: "];
"1000268" -> "1000265"  [label="AST: "];
"1000269" -> "1000265"  [label="AST: "];
"1000272" -> "1000265"  [label="CFG: "];
"1000265" -> "1000290"  [label="DDG: "];
"1000265" -> "1000290"  [label="DDG: "];
"1000265" -> "1000290"  [label="DDG: "];
"1000265" -> "1000290"  [label="DDG: "];
"1000102" -> "1000265"  [label="DDG: "];
"1000269" -> "1000265"  [label="DDG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000275" -> "1000278"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000277" -> "1000275"  [label="AST: "];
"1000278" -> "1000275"  [label="AST: "];
"1000281" -> "1000275"  [label="CFG: "];
"1000275" -> "1000290"  [label="DDG: "];
"1000275" -> "1000290"  [label="DDG: "];
"1000275" -> "1000290"  [label="DDG: "];
"1000102" -> "1000275"  [label="DDG: "];
"1000283" -> "1000109"  [label="AST: "];
"1000283" -> "1000287"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000285" -> "1000283"  [label="AST: "];
"1000286" -> "1000283"  [label="AST: "];
"1000287" -> "1000283"  [label="AST: "];
"1000289" -> "1000283"  [label="CFG: "];
"1000283" -> "1000290"  [label="DDG: "];
"1000283" -> "1000290"  [label="DDG: "];
"1000283" -> "1000290"  [label="DDG: "];
"1000283" -> "1000290"  [label="DDG: "];
"1000102" -> "1000283"  [label="DDG: "];
"1000104" -> "1000283"  [label="DDG: "];
}
