digraph "0_linux_bc909d9ddbf7778371e36a651d6e4194b1cc7d4c@pointer" {
"1000108" [label="(MethodParameterIn,struct socket *sock)"];
"1000375" [label="(Call,sock_sendmsg_nosec(sock, msg_sys, total_len))"];
"1000373" [label="(Call,err = sock_sendmsg_nosec(sock, msg_sys, total_len))"];
"1000438" [label="(Return,return err;)"];
"1000382" [label="(Call,sock_sendmsg(sock, msg_sys, total_len))"];
"1000380" [label="(Call,err = sock_sendmsg(sock, msg_sys, total_len))"];
"1000389" [label="(Call,err >= 0)"];
"1000387" [label="(Call,used_address && err >= 0)"];
"1000395" [label="(Identifier,used_address)"];
"1000212" [label="(Call,verify_compat_iovec(msg_sys, iov,\n\t\t\t\t\t  (struct sockaddr *)&address,\n\t\t\t\t\t  VERIFY_READ))"];
"1000239" [label="(Call,err = -ENOBUFS)"];
"1000346" [label="(Call,used_address && msg_sys->msg_name &&\n\t    used_address->name_len == msg_sys->msg_namelen &&\n\t    !memcmp(&used_address->name, msg_sys->msg_name,\n \t\t    used_address->name_len))"];
"1000440" [label="(MethodReturn,static int)"];
"1000382" [label="(Call,sock_sendmsg(sock, msg_sys, total_len))"];
"1000387" [label="(Call,used_address && err >= 0)"];
"1000373" [label="(Call,err = sock_sendmsg_nosec(sock, msg_sys, total_len))"];
"1000377" [label="(Identifier,msg_sys)"];
"1000438" [label="(Return,return err;)"];
"1000383" [label="(Identifier,sock)"];
"1000112" [label="(MethodParameterIn,struct used_address *used_address)"];
"1000163" [label="(Call,err = -EMSGSIZE)"];
"1000381" [label="(Identifier,err)"];
"1000262" [label="(Call,err =\n\t\t    cmsghdr_from_user_compat_to_kern(msg_sys, sock->sk, ctl,\n\t\t\t\t\t\t     sizeof(ctl)))"];
"1000108" [label="(MethodParameterIn,struct socket *sock)"];
"1000113" [label="(Block,)"];
"1000380" [label="(Call,err = sock_sendmsg(sock, msg_sys, total_len))"];
"1000385" [label="(Identifier,total_len)"];
"1000232" [label="(Call,err < 0)"];
"1000375" [label="(Call,sock_sendmsg_nosec(sock, msg_sys, total_len))"];
"1000374" [label="(Identifier,err)"];
"1000379" [label="(ControlStructure,goto out_freectl;)"];
"1000264" [label="(Call,cmsghdr_from_user_compat_to_kern(msg_sys, sock->sk, ctl,\n\t\t\t\t\t\t     sizeof(ctl)))"];
"1000388" [label="(Identifier,used_address)"];
"1000386" [label="(ControlStructure,if (used_address && err >= 0))"];
"1000236" [label="(Call,total_len = err)"];
"1000376" [label="(Identifier,sock)"];
"1000174" [label="(Call,err = -ENOMEM)"];
"1000223" [label="(Call,verify_iovec(msg_sys, iov,\n\t\t\t\t   (struct sockaddr *)&address,\n\t\t\t\t   VERIFY_READ))"];
"1000378" [label="(Identifier,total_len)"];
"1000372" [label="(Block,)"];
"1000389" [label="(Call,err >= 0)"];
"1000390" [label="(Identifier,err)"];
"1000415" [label="(JumpTarget,out_freectl:)"];
"1000308" [label="(Call,err = -EFAULT)"];
"1000384" [label="(Identifier,msg_sys)"];
"1000391" [label="(Literal,0)"];
"1000439" [label="(Identifier,err)"];
"1000110" [label="(MethodParameterIn,struct msghdr *msg_sys)"];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000440"  [label="DDG: sock"];
"1000108" -> "1000375"  [label="DDG: sock"];
"1000108" -> "1000382"  [label="DDG: sock"];
"1000375" -> "1000373"  [label="AST: "];
"1000375" -> "1000378"  [label="CFG: "];
"1000376" -> "1000375"  [label="AST: "];
"1000377" -> "1000375"  [label="AST: "];
"1000378" -> "1000375"  [label="AST: "];
"1000373" -> "1000375"  [label="CFG: "];
"1000375" -> "1000440"  [label="DDG: sock"];
"1000375" -> "1000440"  [label="DDG: msg_sys"];
"1000375" -> "1000440"  [label="DDG: total_len"];
"1000375" -> "1000373"  [label="DDG: sock"];
"1000375" -> "1000373"  [label="DDG: msg_sys"];
"1000375" -> "1000373"  [label="DDG: total_len"];
"1000264" -> "1000375"  [label="DDG: msg_sys"];
"1000223" -> "1000375"  [label="DDG: msg_sys"];
"1000212" -> "1000375"  [label="DDG: msg_sys"];
"1000110" -> "1000375"  [label="DDG: msg_sys"];
"1000236" -> "1000375"  [label="DDG: total_len"];
"1000373" -> "1000372"  [label="AST: "];
"1000374" -> "1000373"  [label="AST: "];
"1000379" -> "1000373"  [label="CFG: "];
"1000373" -> "1000440"  [label="DDG: sock_sendmsg_nosec(sock, msg_sys, total_len)"];
"1000373" -> "1000440"  [label="DDG: err"];
"1000373" -> "1000438"  [label="DDG: err"];
"1000438" -> "1000113"  [label="AST: "];
"1000438" -> "1000439"  [label="CFG: "];
"1000439" -> "1000438"  [label="AST: "];
"1000440" -> "1000438"  [label="CFG: "];
"1000438" -> "1000440"  [label="DDG: <RET>"];
"1000439" -> "1000438"  [label="DDG: err"];
"1000232" -> "1000438"  [label="DDG: err"];
"1000239" -> "1000438"  [label="DDG: err"];
"1000262" -> "1000438"  [label="DDG: err"];
"1000389" -> "1000438"  [label="DDG: err"];
"1000380" -> "1000438"  [label="DDG: err"];
"1000174" -> "1000438"  [label="DDG: err"];
"1000163" -> "1000438"  [label="DDG: err"];
"1000308" -> "1000438"  [label="DDG: err"];
"1000382" -> "1000380"  [label="AST: "];
"1000382" -> "1000385"  [label="CFG: "];
"1000383" -> "1000382"  [label="AST: "];
"1000384" -> "1000382"  [label="AST: "];
"1000385" -> "1000382"  [label="AST: "];
"1000380" -> "1000382"  [label="CFG: "];
"1000382" -> "1000440"  [label="DDG: sock"];
"1000382" -> "1000440"  [label="DDG: msg_sys"];
"1000382" -> "1000440"  [label="DDG: total_len"];
"1000382" -> "1000380"  [label="DDG: sock"];
"1000382" -> "1000380"  [label="DDG: msg_sys"];
"1000382" -> "1000380"  [label="DDG: total_len"];
"1000264" -> "1000382"  [label="DDG: msg_sys"];
"1000223" -> "1000382"  [label="DDG: msg_sys"];
"1000212" -> "1000382"  [label="DDG: msg_sys"];
"1000110" -> "1000382"  [label="DDG: msg_sys"];
"1000236" -> "1000382"  [label="DDG: total_len"];
"1000380" -> "1000113"  [label="AST: "];
"1000381" -> "1000380"  [label="AST: "];
"1000388" -> "1000380"  [label="CFG: "];
"1000380" -> "1000440"  [label="DDG: sock_sendmsg(sock, msg_sys, total_len)"];
"1000380" -> "1000440"  [label="DDG: err"];
"1000380" -> "1000389"  [label="DDG: err"];
"1000389" -> "1000387"  [label="AST: "];
"1000389" -> "1000391"  [label="CFG: "];
"1000390" -> "1000389"  [label="AST: "];
"1000391" -> "1000389"  [label="AST: "];
"1000387" -> "1000389"  [label="CFG: "];
"1000389" -> "1000440"  [label="DDG: err"];
"1000389" -> "1000387"  [label="DDG: err"];
"1000389" -> "1000387"  [label="DDG: 0"];
"1000387" -> "1000386"  [label="AST: "];
"1000387" -> "1000388"  [label="CFG: "];
"1000388" -> "1000387"  [label="AST: "];
"1000395" -> "1000387"  [label="CFG: "];
"1000415" -> "1000387"  [label="CFG: "];
"1000387" -> "1000440"  [label="DDG: err >= 0"];
"1000387" -> "1000440"  [label="DDG: used_address"];
"1000387" -> "1000440"  [label="DDG: used_address && err >= 0"];
"1000346" -> "1000387"  [label="DDG: used_address"];
"1000112" -> "1000387"  [label="DDG: used_address"];
}
