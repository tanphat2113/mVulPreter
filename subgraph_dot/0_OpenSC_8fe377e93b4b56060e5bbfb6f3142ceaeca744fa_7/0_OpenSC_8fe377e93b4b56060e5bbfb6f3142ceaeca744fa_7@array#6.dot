digraph "0_OpenSC_8fe377e93b4b56060e5bbfb6f3142ceaeca744fa_7@array" {
"1000158" [label="(Call,cipher_len = in[1])"];
"1000152" [label="(Call,0x82 != in[1])"];
"1000106" [label="(MethodParameterIn,unsigned char *in)"];
"1000224" [label="(Call,cipher_len < 2)"];
"1000223" [label="(Call,cipher_len < 2 || i+cipher_len > inlen || cipher_len > sizeof plaintext)"];
"1000228" [label="(Call,i+cipher_len > inlen)"];
"1000227" [label="(Call,i+cipher_len > inlen || cipher_len > sizeof plaintext)"];
"1000229" [label="(Call,i+cipher_len)"];
"1000233" [label="(Call,cipher_len > sizeof plaintext)"];
"1000256" [label="(Call,cipher_len - 1)"];
"1000246" [label="(Call,aes128_decrypt_cbc(exdata->sk_enc, 16, iv, &in[i], cipher_len - 1, plaintext))"];
"1000277" [label="(Call,0x80 != plaintext[cipher_len - 2])"];
"1000276" [label="(Call,0x80 != plaintext[cipher_len - 2] && (cipher_len - 2 > 0))"];
"1000298" [label="(Call,memcpy(out, plaintext, cipher_len - 2))"];
"1000281" [label="(Call,cipher_len - 2)"];
"1000285" [label="(Call,cipher_len - 2)"];
"1000284" [label="(Call,cipher_len - 2 > 0)"];
"1000289" [label="(Call,cipher_len--)"];
"1000292" [label="(Call,2 == cipher_len)"];
"1000301" [label="(Call,cipher_len - 2)"];
"1000307" [label="(Call,cipher_len - 2)"];
"1000304" [label="(Call,*out_len = cipher_len - 2)"];
"1000271" [label="(Call,cipher_len - 1)"];
"1000261" [label="(Call,des3_decrypt_cbc(exdata->sk_enc, 16, iv, &in[i], cipher_len - 1, plaintext))"];
"1000292" [label="(Call,2 == cipher_len)"];
"1000242" [label="(Identifier,KEY_TYPE_AES)"];
"1000258" [label="(Literal,1)"];
"1000311" [label="(Literal,0)"];
"1000257" [label="(Identifier,cipher_len)"];
"1000232" [label="(Identifier,inlen)"];
"1000273" [label="(Literal,1)"];
"1000301" [label="(Call,cipher_len - 2)"];
"1000117" [label="(Call,plaintext[4096] = { 0 })"];
"1000277" [label="(Call,0x80 != plaintext[cipher_len - 2])"];
"1000271" [label="(Call,cipher_len - 1)"];
"1000290" [label="(Identifier,cipher_len)"];
"1000146" [label="(Call,0x01 == in[2] && 0x82 != in[1])"];
"1000240" [label="(ControlStructure,if (KEY_TYPE_AES == exdata->smtype))"];
"1000265" [label="(Literal,16)"];
"1000304" [label="(Call,*out_len = cipher_len - 2)"];
"1000228" [label="(Call,i+cipher_len > inlen)"];
"1000275" [label="(ControlStructure,while (0x80 != plaintext[cipher_len - 2] && (cipher_len - 2 > 0)))"];
"1000233" [label="(Call,cipher_len > sizeof plaintext)"];
"1000154" [label="(Call,in[1])"];
"1000306" [label="(Identifier,out_len)"];
"1000114" [label="(Call,iv[16] = { 0 })"];
"1000209" [label="(Call,cipher_len += in[3])"];
"1000234" [label="(Identifier,cipher_len)"];
"1000227" [label="(Call,i+cipher_len > inlen || cipher_len > sizeof plaintext)"];
"1000287" [label="(Literal,2)"];
"1000247" [label="(Call,exdata->sk_enc)"];
"1000252" [label="(Call,&in[i])"];
"1000256" [label="(Call,cipher_len - 1)"];
"1000291" [label="(ControlStructure,if (2 == cipher_len))"];
"1000297" [label="(Literal,1)"];
"1000251" [label="(Identifier,iv)"];
"1000164" [label="(Identifier,i)"];
"1000309" [label="(Literal,2)"];
"1000160" [label="(Call,in[1])"];
"1000169" [label="(Call,0x01 == in[3])"];
"1000308" [label="(Identifier,cipher_len)"];
"1000272" [label="(Identifier,cipher_len)"];
"1000226" [label="(Literal,2)"];
"1000288" [label="(Literal,0)"];
"1000260" [label="(ControlStructure,else)"];
"1000231" [label="(Identifier,cipher_len)"];
"1000285" [label="(Call,cipher_len - 2)"];
"1000279" [label="(Call,plaintext[cipher_len - 2])"];
"1000250" [label="(Literal,16)"];
"1000224" [label="(Call,cipher_len < 2)"];
"1000281" [label="(Call,cipher_len - 2)"];
"1000294" [label="(Identifier,cipher_len)"];
"1000222" [label="(ControlStructure,if (cipher_len < 2 || i+cipher_len > inlen || cipher_len > sizeof plaintext))"];
"1000157" [label="(Block,)"];
"1000303" [label="(Literal,2)"];
"1000204" [label="(Call,in[2] * 0x100)"];
"1000110" [label="(Block,)"];
"1000305" [label="(Call,*out_len)"];
"1000147" [label="(Call,0x01 == in[2])"];
"1000108" [label="(MethodParameterIn,unsigned char *out)"];
"1000289" [label="(Call,cipher_len--)"];
"1000230" [label="(Identifier,i)"];
"1000299" [label="(Identifier,out)"];
"1000153" [label="(Literal,0x82)"];
"1000300" [label="(Identifier,plaintext)"];
"1000107" [label="(MethodParameterIn,size_t inlen)"];
"1000106" [label="(MethodParameterIn,unsigned char *in)"];
"1000282" [label="(Identifier,cipher_len)"];
"1000283" [label="(Literal,2)"];
"1000274" [label="(Identifier,plaintext)"];
"1000152" [label="(Call,0x82 != in[1])"];
"1000174" [label="(Call,0x81 == in[1])"];
"1000276" [label="(Call,0x80 != plaintext[cipher_len - 2] && (cipher_len - 2 > 0))"];
"1000259" [label="(Identifier,plaintext)"];
"1000158" [label="(Call,cipher_len = in[1])"];
"1000262" [label="(Call,exdata->sk_enc)"];
"1000278" [label="(Literal,0x80)"];
"1000307" [label="(Call,cipher_len - 2)"];
"1000196" [label="(Call,0x82 == in[1])"];
"1000246" [label="(Call,aes128_decrypt_cbc(exdata->sk_enc, 16, iv, &in[i], cipher_len - 1, plaintext))"];
"1000267" [label="(Call,&in[i])"];
"1000191" [label="(Call,0x01 == in[4])"];
"1000223" [label="(Call,cipher_len < 2 || i+cipher_len > inlen || cipher_len > sizeof plaintext)"];
"1000180" [label="(Call,cipher_len = in[2])"];
"1000284" [label="(Call,cipher_len - 2 > 0)"];
"1000225" [label="(Identifier,cipher_len)"];
"1000286" [label="(Identifier,cipher_len)"];
"1000138" [label="(Call,in[0] == 0x99)"];
"1000214" [label="(Call,i = 5)"];
"1000298" [label="(Call,memcpy(out, plaintext, cipher_len - 2))"];
"1000312" [label="(MethodReturn,RET)"];
"1000229" [label="(Call,i+cipher_len)"];
"1000266" [label="(Identifier,iv)"];
"1000159" [label="(Identifier,cipher_len)"];
"1000293" [label="(Literal,2)"];
"1000163" [label="(Call,i = 3)"];
"1000235" [label="(Call,sizeof plaintext)"];
"1000261" [label="(Call,des3_decrypt_cbc(exdata->sk_enc, 16, iv, &in[i], cipher_len - 1, plaintext))"];
"1000185" [label="(Call,i = 4)"];
"1000302" [label="(Identifier,cipher_len)"];
"1000239" [label="(Literal,1)"];
"1000158" -> "1000157"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000164" -> "1000158"  [label="CFG: "];
"1000158" -> "1000312"  [label="DDG: in[1]"];
"1000152" -> "1000158"  [label="DDG: in[1]"];
"1000106" -> "1000158"  [label="DDG: in"];
"1000158" -> "1000224"  [label="DDG: cipher_len"];
"1000152" -> "1000146"  [label="AST: "];
"1000152" -> "1000154"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000146" -> "1000152"  [label="CFG: "];
"1000152" -> "1000312"  [label="DDG: in[1]"];
"1000152" -> "1000146"  [label="DDG: 0x82"];
"1000152" -> "1000146"  [label="DDG: in[1]"];
"1000106" -> "1000152"  [label="DDG: in"];
"1000152" -> "1000174"  [label="DDG: in[1]"];
"1000152" -> "1000196"  [label="DDG: in[1]"];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000312"  [label="DDG: in"];
"1000106" -> "1000138"  [label="DDG: in"];
"1000106" -> "1000147"  [label="DDG: in"];
"1000106" -> "1000169"  [label="DDG: in"];
"1000106" -> "1000174"  [label="DDG: in"];
"1000106" -> "1000180"  [label="DDG: in"];
"1000106" -> "1000191"  [label="DDG: in"];
"1000106" -> "1000196"  [label="DDG: in"];
"1000106" -> "1000204"  [label="DDG: in"];
"1000106" -> "1000209"  [label="DDG: in"];
"1000224" -> "1000223"  [label="AST: "];
"1000224" -> "1000226"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000230" -> "1000224"  [label="CFG: "];
"1000223" -> "1000224"  [label="CFG: "];
"1000224" -> "1000312"  [label="DDG: cipher_len"];
"1000224" -> "1000223"  [label="DDG: cipher_len"];
"1000224" -> "1000223"  [label="DDG: 2"];
"1000209" -> "1000224"  [label="DDG: cipher_len"];
"1000180" -> "1000224"  [label="DDG: cipher_len"];
"1000224" -> "1000228"  [label="DDG: cipher_len"];
"1000224" -> "1000229"  [label="DDG: cipher_len"];
"1000224" -> "1000233"  [label="DDG: cipher_len"];
"1000224" -> "1000256"  [label="DDG: cipher_len"];
"1000224" -> "1000271"  [label="DDG: cipher_len"];
"1000223" -> "1000222"  [label="AST: "];
"1000223" -> "1000227"  [label="CFG: "];
"1000227" -> "1000223"  [label="AST: "];
"1000239" -> "1000223"  [label="CFG: "];
"1000242" -> "1000223"  [label="CFG: "];
"1000223" -> "1000312"  [label="DDG: i+cipher_len > inlen || cipher_len > sizeof plaintext"];
"1000223" -> "1000312"  [label="DDG: cipher_len < 2 || i+cipher_len > inlen || cipher_len > sizeof plaintext"];
"1000223" -> "1000312"  [label="DDG: cipher_len < 2"];
"1000227" -> "1000223"  [label="DDG: i+cipher_len > inlen"];
"1000227" -> "1000223"  [label="DDG: cipher_len > sizeof plaintext"];
"1000228" -> "1000227"  [label="AST: "];
"1000228" -> "1000232"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000232" -> "1000228"  [label="AST: "];
"1000234" -> "1000228"  [label="CFG: "];
"1000227" -> "1000228"  [label="CFG: "];
"1000228" -> "1000312"  [label="DDG: inlen"];
"1000228" -> "1000312"  [label="DDG: i+cipher_len"];
"1000228" -> "1000227"  [label="DDG: i+cipher_len"];
"1000228" -> "1000227"  [label="DDG: inlen"];
"1000214" -> "1000228"  [label="DDG: i"];
"1000163" -> "1000228"  [label="DDG: i"];
"1000185" -> "1000228"  [label="DDG: i"];
"1000107" -> "1000228"  [label="DDG: inlen"];
"1000227" -> "1000233"  [label="CFG: "];
"1000233" -> "1000227"  [label="AST: "];
"1000227" -> "1000312"  [label="DDG: cipher_len > sizeof plaintext"];
"1000227" -> "1000312"  [label="DDG: i+cipher_len > inlen"];
"1000233" -> "1000227"  [label="DDG: cipher_len"];
"1000229" -> "1000231"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000231" -> "1000229"  [label="AST: "];
"1000232" -> "1000229"  [label="CFG: "];
"1000229" -> "1000312"  [label="DDG: cipher_len"];
"1000229" -> "1000312"  [label="DDG: i"];
"1000214" -> "1000229"  [label="DDG: i"];
"1000163" -> "1000229"  [label="DDG: i"];
"1000185" -> "1000229"  [label="DDG: i"];
"1000233" -> "1000235"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000235" -> "1000233"  [label="AST: "];
"1000233" -> "1000312"  [label="DDG: cipher_len"];
"1000233" -> "1000256"  [label="DDG: cipher_len"];
"1000233" -> "1000271"  [label="DDG: cipher_len"];
"1000256" -> "1000246"  [label="AST: "];
"1000256" -> "1000258"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000258" -> "1000256"  [label="AST: "];
"1000259" -> "1000256"  [label="CFG: "];
"1000256" -> "1000246"  [label="DDG: cipher_len"];
"1000256" -> "1000246"  [label="DDG: 1"];
"1000256" -> "1000281"  [label="DDG: cipher_len"];
"1000246" -> "1000240"  [label="AST: "];
"1000246" -> "1000259"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000250" -> "1000246"  [label="AST: "];
"1000251" -> "1000246"  [label="AST: "];
"1000252" -> "1000246"  [label="AST: "];
"1000259" -> "1000246"  [label="AST: "];
"1000278" -> "1000246"  [label="CFG: "];
"1000246" -> "1000312"  [label="DDG: plaintext"];
"1000246" -> "1000312"  [label="DDG: iv"];
"1000246" -> "1000312"  [label="DDG: &in[i]"];
"1000246" -> "1000312"  [label="DDG: cipher_len - 1"];
"1000246" -> "1000312"  [label="DDG: aes128_decrypt_cbc(exdata->sk_enc, 16, iv, &in[i], cipher_len - 1, plaintext)"];
"1000246" -> "1000312"  [label="DDG: exdata->sk_enc"];
"1000114" -> "1000246"  [label="DDG: iv"];
"1000117" -> "1000246"  [label="DDG: plaintext"];
"1000246" -> "1000277"  [label="DDG: plaintext"];
"1000246" -> "1000298"  [label="DDG: plaintext"];
"1000277" -> "1000276"  [label="AST: "];
"1000277" -> "1000279"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000277"  [label="AST: "];
"1000286" -> "1000277"  [label="CFG: "];
"1000276" -> "1000277"  [label="CFG: "];
"1000277" -> "1000312"  [label="DDG: plaintext[cipher_len - 2]"];
"1000277" -> "1000276"  [label="DDG: 0x80"];
"1000277" -> "1000276"  [label="DDG: plaintext[cipher_len - 2]"];
"1000261" -> "1000277"  [label="DDG: plaintext"];
"1000277" -> "1000298"  [label="DDG: plaintext[cipher_len - 2]"];
"1000276" -> "1000275"  [label="AST: "];
"1000276" -> "1000284"  [label="CFG: "];
"1000284" -> "1000276"  [label="AST: "];
"1000290" -> "1000276"  [label="CFG: "];
"1000293" -> "1000276"  [label="CFG: "];
"1000276" -> "1000312"  [label="DDG: cipher_len - 2 > 0"];
"1000276" -> "1000312"  [label="DDG: 0x80 != plaintext[cipher_len - 2] && (cipher_len - 2 > 0)"];
"1000276" -> "1000312"  [label="DDG: 0x80 != plaintext[cipher_len - 2]"];
"1000284" -> "1000276"  [label="DDG: cipher_len - 2"];
"1000284" -> "1000276"  [label="DDG: 0"];
"1000298" -> "1000110"  [label="AST: "];
"1000298" -> "1000301"  [label="CFG: "];
"1000299" -> "1000298"  [label="AST: "];
"1000300" -> "1000298"  [label="AST: "];
"1000301" -> "1000298"  [label="AST: "];
"1000306" -> "1000298"  [label="CFG: "];
"1000298" -> "1000312"  [label="DDG: memcpy(out, plaintext, cipher_len - 2)"];
"1000298" -> "1000312"  [label="DDG: out"];
"1000298" -> "1000312"  [label="DDG: plaintext"];
"1000108" -> "1000298"  [label="DDG: out"];
"1000261" -> "1000298"  [label="DDG: plaintext"];
"1000301" -> "1000298"  [label="DDG: cipher_len"];
"1000301" -> "1000298"  [label="DDG: 2"];
"1000281" -> "1000279"  [label="AST: "];
"1000281" -> "1000283"  [label="CFG: "];
"1000282" -> "1000281"  [label="AST: "];
"1000283" -> "1000281"  [label="AST: "];
"1000279" -> "1000281"  [label="CFG: "];
"1000289" -> "1000281"  [label="DDG: cipher_len"];
"1000271" -> "1000281"  [label="DDG: cipher_len"];
"1000281" -> "1000285"  [label="DDG: cipher_len"];
"1000281" -> "1000289"  [label="DDG: cipher_len"];
"1000281" -> "1000292"  [label="DDG: cipher_len"];
"1000285" -> "1000284"  [label="AST: "];
"1000285" -> "1000287"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000285"  [label="AST: "];
"1000288" -> "1000285"  [label="CFG: "];
"1000285" -> "1000284"  [label="DDG: cipher_len"];
"1000285" -> "1000284"  [label="DDG: 2"];
"1000285" -> "1000289"  [label="DDG: cipher_len"];
"1000285" -> "1000292"  [label="DDG: cipher_len"];
"1000284" -> "1000288"  [label="CFG: "];
"1000288" -> "1000284"  [label="AST: "];
"1000284" -> "1000312"  [label="DDG: cipher_len - 2"];
"1000289" -> "1000275"  [label="AST: "];
"1000289" -> "1000290"  [label="CFG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000278" -> "1000289"  [label="CFG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000292" -> "1000294"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000294" -> "1000292"  [label="AST: "];
"1000297" -> "1000292"  [label="CFG: "];
"1000299" -> "1000292"  [label="CFG: "];
"1000292" -> "1000312"  [label="DDG: 2 == cipher_len"];
"1000292" -> "1000312"  [label="DDG: cipher_len"];
"1000292" -> "1000301"  [label="DDG: cipher_len"];
"1000301" -> "1000303"  [label="CFG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000303" -> "1000301"  [label="AST: "];
"1000301" -> "1000307"  [label="DDG: cipher_len"];
"1000307" -> "1000304"  [label="AST: "];
"1000307" -> "1000309"  [label="CFG: "];
"1000308" -> "1000307"  [label="AST: "];
"1000309" -> "1000307"  [label="AST: "];
"1000304" -> "1000307"  [label="CFG: "];
"1000307" -> "1000312"  [label="DDG: cipher_len"];
"1000307" -> "1000304"  [label="DDG: cipher_len"];
"1000307" -> "1000304"  [label="DDG: 2"];
"1000304" -> "1000110"  [label="AST: "];
"1000305" -> "1000304"  [label="AST: "];
"1000311" -> "1000304"  [label="CFG: "];
"1000304" -> "1000312"  [label="DDG: *out_len"];
"1000304" -> "1000312"  [label="DDG: cipher_len - 2"];
"1000271" -> "1000261"  [label="AST: "];
"1000271" -> "1000273"  [label="CFG: "];
"1000272" -> "1000271"  [label="AST: "];
"1000273" -> "1000271"  [label="AST: "];
"1000274" -> "1000271"  [label="CFG: "];
"1000271" -> "1000261"  [label="DDG: cipher_len"];
"1000271" -> "1000261"  [label="DDG: 1"];
"1000261" -> "1000260"  [label="AST: "];
"1000261" -> "1000274"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000265" -> "1000261"  [label="AST: "];
"1000266" -> "1000261"  [label="AST: "];
"1000267" -> "1000261"  [label="AST: "];
"1000274" -> "1000261"  [label="AST: "];
"1000278" -> "1000261"  [label="CFG: "];
"1000261" -> "1000312"  [label="DDG: iv"];
"1000261" -> "1000312"  [label="DDG: &in[i]"];
"1000261" -> "1000312"  [label="DDG: plaintext"];
"1000261" -> "1000312"  [label="DDG: exdata->sk_enc"];
"1000261" -> "1000312"  [label="DDG: des3_decrypt_cbc(exdata->sk_enc, 16, iv, &in[i], cipher_len - 1, plaintext)"];
"1000261" -> "1000312"  [label="DDG: cipher_len - 1"];
"1000114" -> "1000261"  [label="DDG: iv"];
"1000117" -> "1000261"  [label="DDG: plaintext"];
}
