digraph "0_OpenSC_8fe377e93b4b56060e5bbfb6f3142ceaeca744fa_7@API" {
"1000223" [label="(Call,cipher_len < 2 || i+cipher_len > inlen || cipher_len > sizeof plaintext)"];
"1000224" [label="(Call,cipher_len < 2)"];
"1000158" [label="(Call,cipher_len = in[1])"];
"1000152" [label="(Call,0x82 != in[1])"];
"1000106" [label="(MethodParameterIn,unsigned char *in)"];
"1000209" [label="(Call,cipher_len += in[3])"];
"1000169" [label="(Call,0x01 == in[3])"];
"1000202" [label="(Call,cipher_len = in[2] * 0x100)"];
"1000204" [label="(Call,in[2] * 0x100)"];
"1000147" [label="(Call,0x01 == in[2])"];
"1000180" [label="(Call,cipher_len = in[2])"];
"1000227" [label="(Call,i+cipher_len > inlen || cipher_len > sizeof plaintext)"];
"1000228" [label="(Call,i+cipher_len > inlen)"];
"1000214" [label="(Call,i = 5)"];
"1000163" [label="(Call,i = 3)"];
"1000185" [label="(Call,i = 4)"];
"1000107" [label="(MethodParameterIn,size_t inlen)"];
"1000233" [label="(Call,cipher_len > sizeof plaintext)"];
"1000182" [label="(Call,in[2])"];
"1000242" [label="(Identifier,KEY_TYPE_AES)"];
"1000175" [label="(Literal,0x81)"];
"1000196" [label="(Call,0x82 == in[1])"];
"1000224" [label="(Call,cipher_len < 2)"];
"1000191" [label="(Call,0x01 == in[4])"];
"1000186" [label="(Identifier,i)"];
"1000232" [label="(Identifier,inlen)"];
"1000223" [label="(Call,cipher_len < 2 || i+cipher_len > inlen || cipher_len > sizeof plaintext)"];
"1000256" [label="(Call,cipher_len - 1)"];
"1000215" [label="(Identifier,i)"];
"1000222" [label="(ControlStructure,if (cipher_len < 2 || i+cipher_len > inlen || cipher_len > sizeof plaintext))"];
"1000180" [label="(Call,cipher_len = in[2])"];
"1000157" [label="(Block,)"];
"1000225" [label="(Identifier,cipher_len)"];
"1000205" [label="(Call,in[2])"];
"1000204" [label="(Call,in[2] * 0x100)"];
"1000171" [label="(Call,in[3])"];
"1000210" [label="(Identifier,cipher_len)"];
"1000165" [label="(Literal,3)"];
"1000164" [label="(Identifier,i)"];
"1000271" [label="(Call,cipher_len - 1)"];
"1000138" [label="(Call,in[0] == 0x99)"];
"1000160" [label="(Call,in[1])"];
"1000147" [label="(Call,0x01 == in[2])"];
"1000169" [label="(Call,0x01 == in[3])"];
"1000203" [label="(Identifier,cipher_len)"];
"1000312" [label="(MethodReturn,RET)"];
"1000148" [label="(Literal,0x01)"];
"1000230" [label="(Identifier,i)"];
"1000146" [label="(Call,0x01 == in[2] && 0x82 != in[1])"];
"1000211" [label="(Call,in[3])"];
"1000214" [label="(Call,i = 5)"];
"1000153" [label="(Literal,0x82)"];
"1000229" [label="(Call,i+cipher_len)"];
"1000107" [label="(MethodParameterIn,size_t inlen)"];
"1000159" [label="(Identifier,cipher_len)"];
"1000187" [label="(Literal,4)"];
"1000168" [label="(Call,0x01 == in[3] && 0x81 == in[1])"];
"1000163" [label="(Call,i = 3)"];
"1000235" [label="(Call,sizeof plaintext)"];
"1000106" [label="(MethodParameterIn,unsigned char *in)"];
"1000228" [label="(Call,i+cipher_len > inlen)"];
"1000202" [label="(Call,cipher_len = in[2] * 0x100)"];
"1000233" [label="(Call,cipher_len > sizeof plaintext)"];
"1000149" [label="(Call,in[2])"];
"1000154" [label="(Call,in[1])"];
"1000201" [label="(Block,)"];
"1000226" [label="(Literal,2)"];
"1000179" [label="(Block,)"];
"1000152" [label="(Call,0x82 != in[1])"];
"1000174" [label="(Call,0x81 == in[1])"];
"1000170" [label="(Literal,0x01)"];
"1000209" [label="(Call,cipher_len += in[3])"];
"1000234" [label="(Identifier,cipher_len)"];
"1000158" [label="(Call,cipher_len = in[1])"];
"1000208" [label="(Literal,0x100)"];
"1000185" [label="(Call,i = 4)"];
"1000216" [label="(Literal,5)"];
"1000239" [label="(Literal,1)"];
"1000181" [label="(Identifier,cipher_len)"];
"1000227" [label="(Call,i+cipher_len > inlen || cipher_len > sizeof plaintext)"];
"1000223" -> "1000222"  [label="AST: "];
"1000223" -> "1000224"  [label="CFG: "];
"1000223" -> "1000227"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000227" -> "1000223"  [label="AST: "];
"1000239" -> "1000223"  [label="CFG: "];
"1000242" -> "1000223"  [label="CFG: "];
"1000223" -> "1000312"  [label="DDG: i+cipher_len > inlen || cipher_len > sizeof plaintext"];
"1000223" -> "1000312"  [label="DDG: cipher_len < 2 || i+cipher_len > inlen || cipher_len > sizeof plaintext"];
"1000223" -> "1000312"  [label="DDG: cipher_len < 2"];
"1000224" -> "1000223"  [label="DDG: cipher_len"];
"1000224" -> "1000223"  [label="DDG: 2"];
"1000227" -> "1000223"  [label="DDG: i+cipher_len > inlen"];
"1000227" -> "1000223"  [label="DDG: cipher_len > sizeof plaintext"];
"1000224" -> "1000226"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000230" -> "1000224"  [label="CFG: "];
"1000224" -> "1000312"  [label="DDG: cipher_len"];
"1000158" -> "1000224"  [label="DDG: cipher_len"];
"1000209" -> "1000224"  [label="DDG: cipher_len"];
"1000180" -> "1000224"  [label="DDG: cipher_len"];
"1000224" -> "1000228"  [label="DDG: cipher_len"];
"1000224" -> "1000229"  [label="DDG: cipher_len"];
"1000224" -> "1000233"  [label="DDG: cipher_len"];
"1000224" -> "1000256"  [label="DDG: cipher_len"];
"1000224" -> "1000271"  [label="DDG: cipher_len"];
"1000158" -> "1000157"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000164" -> "1000158"  [label="CFG: "];
"1000158" -> "1000312"  [label="DDG: in[1]"];
"1000152" -> "1000158"  [label="DDG: in[1]"];
"1000106" -> "1000158"  [label="DDG: in"];
"1000152" -> "1000146"  [label="AST: "];
"1000152" -> "1000154"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000146" -> "1000152"  [label="CFG: "];
"1000152" -> "1000312"  [label="DDG: in[1]"];
"1000152" -> "1000146"  [label="DDG: 0x82"];
"1000152" -> "1000146"  [label="DDG: in[1]"];
"1000106" -> "1000152"  [label="DDG: in"];
"1000152" -> "1000174"  [label="DDG: in[1]"];
"1000152" -> "1000196"  [label="DDG: in[1]"];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000312"  [label="DDG: in"];
"1000106" -> "1000138"  [label="DDG: in"];
"1000106" -> "1000147"  [label="DDG: in"];
"1000106" -> "1000169"  [label="DDG: in"];
"1000106" -> "1000174"  [label="DDG: in"];
"1000106" -> "1000180"  [label="DDG: in"];
"1000106" -> "1000191"  [label="DDG: in"];
"1000106" -> "1000196"  [label="DDG: in"];
"1000106" -> "1000204"  [label="DDG: in"];
"1000106" -> "1000209"  [label="DDG: in"];
"1000209" -> "1000201"  [label="AST: "];
"1000209" -> "1000211"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000211" -> "1000209"  [label="AST: "];
"1000215" -> "1000209"  [label="CFG: "];
"1000209" -> "1000312"  [label="DDG: in[3]"];
"1000169" -> "1000209"  [label="DDG: in[3]"];
"1000202" -> "1000209"  [label="DDG: cipher_len"];
"1000169" -> "1000168"  [label="AST: "];
"1000169" -> "1000171"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000171" -> "1000169"  [label="AST: "];
"1000175" -> "1000169"  [label="CFG: "];
"1000168" -> "1000169"  [label="CFG: "];
"1000169" -> "1000312"  [label="DDG: in[3]"];
"1000169" -> "1000168"  [label="DDG: 0x01"];
"1000169" -> "1000168"  [label="DDG: in[3]"];
"1000202" -> "1000201"  [label="AST: "];
"1000202" -> "1000204"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000210" -> "1000202"  [label="CFG: "];
"1000202" -> "1000312"  [label="DDG: in[2] * 0x100"];
"1000204" -> "1000202"  [label="DDG: in[2]"];
"1000204" -> "1000202"  [label="DDG: 0x100"];
"1000204" -> "1000208"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000208" -> "1000204"  [label="AST: "];
"1000204" -> "1000312"  [label="DDG: in[2]"];
"1000147" -> "1000204"  [label="DDG: in[2]"];
"1000147" -> "1000146"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000153" -> "1000147"  [label="CFG: "];
"1000146" -> "1000147"  [label="CFG: "];
"1000147" -> "1000312"  [label="DDG: in[2]"];
"1000147" -> "1000146"  [label="DDG: 0x01"];
"1000147" -> "1000146"  [label="DDG: in[2]"];
"1000147" -> "1000180"  [label="DDG: in[2]"];
"1000180" -> "1000179"  [label="AST: "];
"1000180" -> "1000182"  [label="CFG: "];
"1000181" -> "1000180"  [label="AST: "];
"1000182" -> "1000180"  [label="AST: "];
"1000186" -> "1000180"  [label="CFG: "];
"1000180" -> "1000312"  [label="DDG: in[2]"];
"1000227" -> "1000228"  [label="CFG: "];
"1000227" -> "1000233"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000233" -> "1000227"  [label="AST: "];
"1000227" -> "1000312"  [label="DDG: cipher_len > sizeof plaintext"];
"1000227" -> "1000312"  [label="DDG: i+cipher_len > inlen"];
"1000228" -> "1000227"  [label="DDG: i+cipher_len"];
"1000228" -> "1000227"  [label="DDG: inlen"];
"1000233" -> "1000227"  [label="DDG: cipher_len"];
"1000228" -> "1000232"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000232" -> "1000228"  [label="AST: "];
"1000234" -> "1000228"  [label="CFG: "];
"1000228" -> "1000312"  [label="DDG: inlen"];
"1000228" -> "1000312"  [label="DDG: i+cipher_len"];
"1000214" -> "1000228"  [label="DDG: i"];
"1000163" -> "1000228"  [label="DDG: i"];
"1000185" -> "1000228"  [label="DDG: i"];
"1000107" -> "1000228"  [label="DDG: inlen"];
"1000214" -> "1000201"  [label="AST: "];
"1000214" -> "1000216"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000216" -> "1000214"  [label="AST: "];
"1000225" -> "1000214"  [label="CFG: "];
"1000214" -> "1000312"  [label="DDG: i"];
"1000214" -> "1000229"  [label="DDG: i"];
"1000163" -> "1000157"  [label="AST: "];
"1000163" -> "1000165"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000165" -> "1000163"  [label="AST: "];
"1000225" -> "1000163"  [label="CFG: "];
"1000163" -> "1000312"  [label="DDG: i"];
"1000163" -> "1000229"  [label="DDG: i"];
"1000185" -> "1000179"  [label="AST: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="AST: "];
"1000225" -> "1000185"  [label="CFG: "];
"1000185" -> "1000312"  [label="DDG: i"];
"1000185" -> "1000229"  [label="DDG: i"];
"1000107" -> "1000104"  [label="AST: "];
"1000107" -> "1000312"  [label="DDG: inlen"];
"1000233" -> "1000235"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000235" -> "1000233"  [label="AST: "];
"1000233" -> "1000312"  [label="DDG: cipher_len"];
"1000233" -> "1000256"  [label="DDG: cipher_len"];
"1000233" -> "1000271"  [label="DDG: cipher_len"];
}
