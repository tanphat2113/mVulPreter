digraph "0_systemd_9725f1a10f80f5e0ae7d9b60547458622aeb322f_2@pointer" {
"1000149" [label="(Call,log_warning_errno(errno, \"Failed to %s UTF-8 kbdmode on %s: %m\", enable_disable(utf8), name))"];
"1000152" [label="(Call,enable_disable(utf8))"];
"1000103" [label="(MethodParameterIn,bool utf8)"];
"1000107" [label="(Call,assert(name))"];
"1000101" [label="(MethodParameterIn,const char *name)"];
"1000148" [label="(Return,return log_warning_errno(errno, \"Failed to %s UTF-8 kbdmode on %s: %m\", enable_disable(utf8), name);)"];
"1000140" [label="(Call,utf8 ? K_UNICODE : K_XLATE)"];
"1000170" [label="(Call,log_warning_errno(r, \"Failed to %s UTF-8 term processing on %s: %m\", enable_disable(utf8), name))"];
"1000152" [label="(Call,enable_disable(utf8))"];
"1000148" [label="(Return,return log_warning_errno(errno, \"Failed to %s UTF-8 kbdmode on %s: %m\", enable_disable(utf8), name);)"];
"1000218" [label="(MethodReturn,static int)"];
"1000101" [label="(MethodParameterIn,const char *name)"];
"1000144" [label="(ControlStructure,if (r < 0))"];
"1000187" [label="(Call,SET_FLAG(tc.c_iflag, IUTF8, utf8))"];
"1000173" [label="(Call,enable_disable(utf8))"];
"1000213" [label="(Call,enable_disable(utf8))"];
"1000107" [label="(Call,assert(name))"];
"1000108" [label="(Identifier,name)"];
"1000205" [label="(Call,log_warning_errno(errno, \"Failed to %s iutf8 flag on %s: %m\", enable_disable(utf8), name))"];
"1000208" [label="(Call,enable_disable(utf8))"];
"1000154" [label="(Identifier,name)"];
"1000103" [label="(MethodParameterIn,bool utf8)"];
"1000151" [label="(Literal,\"Failed to %s UTF-8 kbdmode on %s: %m\")"];
"1000110" [label="(Identifier,r)"];
"1000150" [label="(Identifier,errno)"];
"1000131" [label="(Call,log_warning_errno(r, \"Failed to verify kbdmode on %s: %m\", name))"];
"1000137" [label="(Call,ioctl(fd, KDSKBMODE, utf8 ? K_UNICODE : K_XLATE))"];
"1000149" [label="(Call,log_warning_errno(errno, \"Failed to %s UTF-8 kbdmode on %s: %m\", enable_disable(utf8), name))"];
"1000153" [label="(Identifier,utf8)"];
"1000104" [label="(Block,)"];
"1000157" [label="(Call,loop_write(fd, utf8 ? \"\033%G\" : \"\033%@\", 3, false))"];
"1000159" [label="(Call,utf8 ? \"\033%G\" : \"\033%@\")"];
"1000119" [label="(Call,log_warning_errno(r, \"Virtual console %s is not in K_XLATE or K_UNICODE: %m\", name))"];
"1000211" [label="(Call,log_debug(\"UTF-8 kbdmode %sd on %s\", enable_disable(utf8), name))"];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000154"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000152" -> "1000149"  [label="AST: "];
"1000154" -> "1000149"  [label="AST: "];
"1000148" -> "1000149"  [label="CFG: "];
"1000149" -> "1000218"  [label="DDG: "];
"1000149" -> "1000218"  [label="DDG: "];
"1000149" -> "1000218"  [label="DDG: "];
"1000149" -> "1000218"  [label="DDG: "];
"1000149" -> "1000148"  [label="DDG: "];
"1000152" -> "1000149"  [label="DDG: "];
"1000107" -> "1000149"  [label="DDG: "];
"1000101" -> "1000149"  [label="DDG: "];
"1000152" -> "1000153"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="CFG: "];
"1000152" -> "1000218"  [label="DDG: "];
"1000103" -> "1000152"  [label="DDG: "];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000218"  [label="DDG: "];
"1000103" -> "1000137"  [label="DDG: "];
"1000103" -> "1000140"  [label="DDG: "];
"1000103" -> "1000157"  [label="DDG: "];
"1000103" -> "1000159"  [label="DDG: "];
"1000103" -> "1000173"  [label="DDG: "];
"1000103" -> "1000187"  [label="DDG: "];
"1000103" -> "1000208"  [label="DDG: "];
"1000103" -> "1000213"  [label="DDG: "];
"1000107" -> "1000104"  [label="AST: "];
"1000107" -> "1000108"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000110" -> "1000107"  [label="CFG: "];
"1000107" -> "1000218"  [label="DDG: "];
"1000101" -> "1000107"  [label="DDG: "];
"1000107" -> "1000119"  [label="DDG: "];
"1000107" -> "1000131"  [label="DDG: "];
"1000107" -> "1000170"  [label="DDG: "];
"1000107" -> "1000205"  [label="DDG: "];
"1000107" -> "1000211"  [label="DDG: "];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000218"  [label="DDG: "];
"1000101" -> "1000119"  [label="DDG: "];
"1000101" -> "1000131"  [label="DDG: "];
"1000101" -> "1000170"  [label="DDG: "];
"1000101" -> "1000205"  [label="DDG: "];
"1000101" -> "1000211"  [label="DDG: "];
"1000148" -> "1000144"  [label="AST: "];
"1000218" -> "1000148"  [label="CFG: "];
"1000148" -> "1000218"  [label="DDG: "];
}
