digraph "0_bdwgc_be9df82919960214ee4b9d3313523bff44fd99e1_0@pointer" {
"1000154" [label="(Call,result = (ptr_t)GC_alloc_large(ADD_SLOP(lb), k, IGNORE_OFF_PAGE))"];
"1000156" [label="(Call,(ptr_t)GC_alloc_large(ADD_SLOP(lb), k, IGNORE_OFF_PAGE))"];
"1000158" [label="(Call,GC_alloc_large(ADD_SLOP(lb), k, IGNORE_OFF_PAGE))"];
"1000159" [label="(Call,ADD_SLOP(lb))"];
"1000130" [label="(Call,lb_rounded < lb)"];
"1000125" [label="(Call,lb_rounded = GRANULES_TO_BYTES(lg))"];
"1000127" [label="(Call,GRANULES_TO_BYTES(lg))"];
"1000121" [label="(Call,lg = ROUNDED_UP_GRANULES(lb))"];
"1000123" [label="(Call,ROUNDED_UP_GRANULES(lb))"];
"1000113" [label="(Call,SMALL_OBJ(lb))"];
"1000103" [label="(MethodParameterIn,size_t lb)"];
"1000104" [label="(MethodParameterIn,int k)"];
"1000164" [label="(Call,0 != result)"];
"1000171" [label="(Call,BZERO(result, n_blocks * HBLKSIZE))"];
"1000217" [label="(Call,0 == result)"];
"1000238" [label="(Call,BZERO(result, n_blocks * HBLKSIZE))"];
"1000243" [label="(Return,return(result);)"];
"1000181" [label="(Call,(word *)result)"];
"1000180" [label="(Call,THREADS\n              /* Clear any memory that might be used for GC descriptors */\n              /* before we release the lock.                          */\n                ((word *)result))"];
"1000188" [label="(Call,(word *)result)"];
"1000195" [label="(Call,(word *)result)"];
"1000205" [label="(Call,(word *)result)"];
"1000180" [label="(Call,THREADS\n              /* Clear any memory that might be used for GC descriptors */\n              /* before we release the lock.                          */\n                ((word *)result))"];
"1000114" [label="(Identifier,lb)"];
"1000169" [label="(Identifier,GC_debugging_started)"];
"1000137" [label="(Identifier,n_blocks)"];
"1000160" [label="(Identifier,lb)"];
"1000134" [label="(Call,(*GC_get_oom_fn())(lb))"];
"1000166" [label="(Identifier,result)"];
"1000184" [label="(Literal,0)"];
"1000179" [label="(Call,THREADS\n              /* Clear any memory that might be used for GC descriptors */\n              /* before we release the lock.                          */\n                ((word *)result)[0])"];
"1000217" [label="(Call,0 == result)"];
"1000227" [label="(Call,(*oom_fn)(lb))"];
"1000214" [label="(Identifier,GC_bytes_allocd)"];
"1000172" [label="(Identifier,result)"];
"1000123" [label="(Call,ROUNDED_UP_GRANULES(lb))"];
"1000113" [label="(Call,SMALL_OBJ(lb))"];
"1000239" [label="(Identifier,result)"];
"1000125" [label="(Call,lb_rounded = GRANULES_TO_BYTES(lg))"];
"1000117" [label="(Call,(word)lb)"];
"1000219" [label="(Identifier,result)"];
"1000216" [label="(ControlStructure,if (0 == result))"];
"1000104" [label="(MethodParameterIn,int k)"];
"1000165" [label="(Literal,0)"];
"1000245" [label="(MethodReturn,GC_INNER void *)"];
"1000116" [label="(Call,GC_generic_malloc((word)lb, k))"];
"1000204" [label="(Call,((word *)result)[GRANULES_TO_WORDS(lg)-2])"];
"1000161" [label="(Identifier,k)"];
"1000243" [label="(Return,return(result);)"];
"1000240" [label="(Call,n_blocks * HBLKSIZE)"];
"1000230" [label="(Block,)"];
"1000132" [label="(Identifier,lb)"];
"1000199" [label="(Call,GRANULES_TO_WORDS(lg))"];
"1000127" [label="(Call,GRANULES_TO_BYTES(lg))"];
"1000181" [label="(Call,(word *)result)"];
"1000188" [label="(Call,(word *)result)"];
"1000191" [label="(Literal,1)"];
"1000124" [label="(Identifier,lb)"];
"1000187" [label="(Call,((word *)result)[1])"];
"1000131" [label="(Identifier,lb_rounded)"];
"1000195" [label="(Call,(word *)result)"];
"1000200" [label="(Identifier,lg)"];
"1000164" [label="(Call,0 != result)"];
"1000163" [label="(ControlStructure,if (0 != result))"];
"1000231" [label="(Call,UNLOCK())"];
"1000103" [label="(MethodParameterIn,size_t lb)"];
"1000159" [label="(Call,ADD_SLOP(lb))"];
"1000112" [label="(ControlStructure,if (SMALL_OBJ(lb)))"];
"1000207" [label="(Identifier,result)"];
"1000237" [label="(Block,)"];
"1000156" [label="(Call,(ptr_t)GC_alloc_large(ADD_SLOP(lb), k, IGNORE_OFF_PAGE))"];
"1000194" [label="(Call,((word *)result)[GRANULES_TO_WORDS(lg)-1])"];
"1000170" [label="(Block,)"];
"1000173" [label="(Call,n_blocks * HBLKSIZE)"];
"1000205" [label="(Call,(word *)result)"];
"1000238" [label="(Call,BZERO(result, n_blocks * HBLKSIZE))"];
"1000244" [label="(Identifier,result)"];
"1000158" [label="(Call,GC_alloc_large(ADD_SLOP(lb), k, IGNORE_OFF_PAGE))"];
"1000197" [label="(Identifier,result)"];
"1000135" [label="(Identifier,lb)"];
"1000121" [label="(Call,lg = ROUNDED_UP_GRANULES(lb))"];
"1000171" [label="(Call,BZERO(result, n_blocks * HBLKSIZE))"];
"1000218" [label="(Literal,0)"];
"1000129" [label="(ControlStructure,if (lb_rounded < lb))"];
"1000223" [label="(Identifier,oom_fn)"];
"1000155" [label="(Identifier,result)"];
"1000162" [label="(Identifier,IGNORE_OFF_PAGE)"];
"1000122" [label="(Identifier,lg)"];
"1000183" [label="(Identifier,result)"];
"1000126" [label="(Identifier,lb_rounded)"];
"1000190" [label="(Identifier,result)"];
"1000138" [label="(Call,OBJ_SZ_TO_BLOCKS(lb_rounded))"];
"1000210" [label="(Identifier,lg)"];
"1000105" [label="(Block,)"];
"1000154" [label="(Call,result = (ptr_t)GC_alloc_large(ADD_SLOP(lb), k, IGNORE_OFF_PAGE))"];
"1000130" [label="(Call,lb_rounded < lb)"];
"1000128" [label="(Identifier,lg)"];
"1000154" -> "1000105"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000156" -> "1000154"  [label="AST: "];
"1000165" -> "1000154"  [label="CFG: "];
"1000154" -> "1000245"  [label="DDG: (ptr_t)GC_alloc_large(ADD_SLOP(lb), k, IGNORE_OFF_PAGE)"];
"1000156" -> "1000154"  [label="DDG: GC_alloc_large(ADD_SLOP(lb), k, IGNORE_OFF_PAGE)"];
"1000154" -> "1000164"  [label="DDG: result"];
"1000156" -> "1000158"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000158" -> "1000156"  [label="AST: "];
"1000156" -> "1000245"  [label="DDG: GC_alloc_large(ADD_SLOP(lb), k, IGNORE_OFF_PAGE)"];
"1000158" -> "1000156"  [label="DDG: ADD_SLOP(lb)"];
"1000158" -> "1000156"  [label="DDG: k"];
"1000158" -> "1000156"  [label="DDG: IGNORE_OFF_PAGE"];
"1000158" -> "1000162"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000161" -> "1000158"  [label="AST: "];
"1000162" -> "1000158"  [label="AST: "];
"1000158" -> "1000245"  [label="DDG: ADD_SLOP(lb)"];
"1000158" -> "1000245"  [label="DDG: IGNORE_OFF_PAGE"];
"1000158" -> "1000245"  [label="DDG: k"];
"1000159" -> "1000158"  [label="DDG: lb"];
"1000104" -> "1000158"  [label="DDG: k"];
"1000159" -> "1000160"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000161" -> "1000159"  [label="CFG: "];
"1000159" -> "1000245"  [label="DDG: lb"];
"1000130" -> "1000159"  [label="DDG: lb"];
"1000103" -> "1000159"  [label="DDG: lb"];
"1000159" -> "1000227"  [label="DDG: lb"];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000135" -> "1000130"  [label="CFG: "];
"1000137" -> "1000130"  [label="CFG: "];
"1000130" -> "1000245"  [label="DDG: lb_rounded < lb"];
"1000130" -> "1000245"  [label="DDG: lb_rounded"];
"1000125" -> "1000130"  [label="DDG: lb_rounded"];
"1000123" -> "1000130"  [label="DDG: lb"];
"1000103" -> "1000130"  [label="DDG: lb"];
"1000130" -> "1000134"  [label="DDG: lb"];
"1000130" -> "1000138"  [label="DDG: lb_rounded"];
"1000125" -> "1000105"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000131" -> "1000125"  [label="CFG: "];
"1000125" -> "1000245"  [label="DDG: GRANULES_TO_BYTES(lg)"];
"1000127" -> "1000125"  [label="DDG: lg"];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000127" -> "1000245"  [label="DDG: lg"];
"1000121" -> "1000127"  [label="DDG: lg"];
"1000127" -> "1000199"  [label="DDG: lg"];
"1000121" -> "1000105"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000126" -> "1000121"  [label="CFG: "];
"1000121" -> "1000245"  [label="DDG: ROUNDED_UP_GRANULES(lb)"];
"1000123" -> "1000121"  [label="DDG: lb"];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000113" -> "1000123"  [label="DDG: lb"];
"1000103" -> "1000123"  [label="DDG: lb"];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000114"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000118" -> "1000113"  [label="CFG: "];
"1000122" -> "1000113"  [label="CFG: "];
"1000113" -> "1000245"  [label="DDG: SMALL_OBJ(lb)"];
"1000103" -> "1000113"  [label="DDG: lb"];
"1000113" -> "1000117"  [label="DDG: lb"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000245"  [label="DDG: lb"];
"1000103" -> "1000117"  [label="DDG: lb"];
"1000103" -> "1000134"  [label="DDG: lb"];
"1000103" -> "1000227"  [label="DDG: lb"];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1000245"  [label="DDG: k"];
"1000104" -> "1000116"  [label="DDG: k"];
"1000164" -> "1000163"  [label="AST: "];
"1000164" -> "1000166"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000166" -> "1000164"  [label="AST: "];
"1000169" -> "1000164"  [label="CFG: "];
"1000214" -> "1000164"  [label="CFG: "];
"1000164" -> "1000245"  [label="DDG: 0 != result"];
"1000164" -> "1000171"  [label="DDG: result"];
"1000164" -> "1000181"  [label="DDG: result"];
"1000164" -> "1000217"  [label="DDG: result"];
"1000171" -> "1000170"  [label="AST: "];
"1000171" -> "1000173"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="AST: "];
"1000214" -> "1000171"  [label="CFG: "];
"1000171" -> "1000245"  [label="DDG: n_blocks * HBLKSIZE"];
"1000171" -> "1000245"  [label="DDG: BZERO(result, n_blocks * HBLKSIZE)"];
"1000173" -> "1000171"  [label="DDG: n_blocks"];
"1000173" -> "1000171"  [label="DDG: HBLKSIZE"];
"1000171" -> "1000217"  [label="DDG: result"];
"1000217" -> "1000216"  [label="AST: "];
"1000217" -> "1000219"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000219" -> "1000217"  [label="AST: "];
"1000223" -> "1000217"  [label="CFG: "];
"1000231" -> "1000217"  [label="CFG: "];
"1000217" -> "1000245"  [label="DDG: result"];
"1000217" -> "1000245"  [label="DDG: 0 == result"];
"1000205" -> "1000217"  [label="DDG: result"];
"1000217" -> "1000238"  [label="DDG: result"];
"1000217" -> "1000243"  [label="DDG: result"];
"1000238" -> "1000237"  [label="AST: "];
"1000238" -> "1000240"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="AST: "];
"1000244" -> "1000238"  [label="CFG: "];
"1000238" -> "1000245"  [label="DDG: result"];
"1000238" -> "1000245"  [label="DDG: n_blocks * HBLKSIZE"];
"1000238" -> "1000245"  [label="DDG: BZERO(result, n_blocks * HBLKSIZE)"];
"1000240" -> "1000238"  [label="DDG: n_blocks"];
"1000240" -> "1000238"  [label="DDG: HBLKSIZE"];
"1000238" -> "1000243"  [label="DDG: result"];
"1000243" -> "1000230"  [label="AST: "];
"1000243" -> "1000244"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000245" -> "1000243"  [label="CFG: "];
"1000243" -> "1000245"  [label="DDG: <RET>"];
"1000244" -> "1000243"  [label="DDG: result"];
"1000181" -> "1000180"  [label="AST: "];
"1000181" -> "1000183"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000183" -> "1000181"  [label="AST: "];
"1000180" -> "1000181"  [label="CFG: "];
"1000181" -> "1000180"  [label="DDG: result"];
"1000181" -> "1000188"  [label="DDG: result"];
"1000180" -> "1000179"  [label="AST: "];
"1000184" -> "1000180"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000188" -> "1000190"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000188"  [label="AST: "];
"1000191" -> "1000188"  [label="CFG: "];
"1000188" -> "1000195"  [label="DDG: result"];
"1000195" -> "1000194"  [label="AST: "];
"1000195" -> "1000197"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000197" -> "1000195"  [label="AST: "];
"1000200" -> "1000195"  [label="CFG: "];
"1000195" -> "1000205"  [label="DDG: result"];
"1000205" -> "1000204"  [label="AST: "];
"1000205" -> "1000207"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000207" -> "1000205"  [label="AST: "];
"1000210" -> "1000205"  [label="CFG: "];
}
