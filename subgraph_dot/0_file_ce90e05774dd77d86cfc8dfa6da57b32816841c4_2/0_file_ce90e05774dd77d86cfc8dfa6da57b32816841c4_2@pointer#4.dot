digraph "0_file_ce90e05774dd77d86cfc8dfa6da57b32816841c4_2@pointer" {
"1000460" [label="(Call,file_printf(ms, \", for DragonFly\"))"];
"1000117" [label="(MethodParameterIn,struct magic_set *ms)"];
"1000459" [label="(Call,file_printf(ms, \", for DragonFly\") == -1)"];
"1000485" [label="(Call,file_printf(ms, \" %d.%d.%d\", desc / 100000,\n\t\t    desc / 10000 % 10, desc % 10000))"];
"1000484" [label="(Call,file_printf(ms, \" %d.%d.%d\", desc / 100000,\n\t\t    desc / 10000 % 10, desc % 10000) == -1)"];
"1000486" [label="(Identifier,ms)"];
"1000464" [label="(Literal,1)"];
"1000500" [label="(Literal,1)"];
"1000462" [label="(Literal,\", for DragonFly\")"];
"1000491" [label="(Call,desc / 10000 % 10)"];
"1000281" [label="(Call,file_printf(ms, \"<unknown>\"))"];
"1000270" [label="(Call,file_printf(ms, \"kNetBSD\"))"];
"1000496" [label="(Call,desc % 10000)"];
"1000483" [label="(ControlStructure,if (file_printf(ms, \" %d.%d.%d\", desc / 100000,\n\t\t    desc / 10000 % 10, desc % 10000) == -1))"];
"1000381" [label="(Call,do_note_freebsd_version(ms, swap, &nbuf[doff]))"];
"1000487" [label="(Literal,\" %d.%d.%d\")"];
"1000155" [label="(Call,file_printf(ms, \", for SuSE %d.%d\", nbuf[doff], nbuf[doff + 1]))"];
"1000117" [label="(MethodParameterIn,struct magic_set *ms)"];
"1000248" [label="(Call,file_printf(ms, \"Solaris\"))"];
"1000458" [label="(ControlStructure,if (file_printf(ms, \", for DragonFly\") == -1))"];
"1000499" [label="(Call,-1)"];
"1000485" [label="(Call,file_printf(ms, \" %d.%d.%d\", desc / 100000,\n\t\t    desc / 10000 % 10, desc % 10000))"];
"1000502" [label="(Literal,1)"];
"1000466" [label="(Literal,1)"];
"1000504" [label="(Literal,1)"];
"1000290" [label="(Call,file_printf(ms, \" %d.%d.%d\", elf_getu32(swap, desc[1]),\n \t\t    elf_getu32(swap, desc[2]), elf_getu32(swap, desc[3])))"];
"1000488" [label="(Call,desc / 100000)"];
"1000460" [label="(Call,file_printf(ms, \", for DragonFly\"))"];
"1000237" [label="(Call,file_printf(ms, \"Hurd\"))"];
"1000461" [label="(Identifier,ms)"];
"1000507" [label="(MethodReturn,int)"];
"1000226" [label="(Call,file_printf(ms, \"Linux\"))"];
"1000463" [label="(Call,-1)"];
"1000343" [label="(Call,do_note_netbsd_version(ms, swap, &nbuf[doff]))"];
"1000420" [label="(Call,file_printf(ms, \", for OpenBSD\"))"];
"1000209" [label="(Call,file_printf(ms, \", for GNU/\"))"];
"1000459" [label="(Call,file_printf(ms, \", for DragonFly\") == -1)"];
"1000259" [label="(Call,file_printf(ms, \"kFreeBSD\"))"];
"1000484" [label="(Call,file_printf(ms, \" %d.%d.%d\", desc / 100000,\n\t\t    desc / 10000 % 10, desc % 10000) == -1)"];
"1000460" -> "1000459"  [label="AST: "];
"1000460" -> "1000462"  [label="CFG: "];
"1000461" -> "1000460"  [label="AST: "];
"1000462" -> "1000460"  [label="AST: "];
"1000464" -> "1000460"  [label="CFG: "];
"1000460" -> "1000507"  [label="DDG: "];
"1000460" -> "1000459"  [label="DDG: "];
"1000460" -> "1000459"  [label="DDG: "];
"1000117" -> "1000460"  [label="DDG: "];
"1000460" -> "1000485"  [label="DDG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1000507"  [label="DDG: "];
"1000117" -> "1000155"  [label="DDG: "];
"1000117" -> "1000209"  [label="DDG: "];
"1000117" -> "1000226"  [label="DDG: "];
"1000117" -> "1000237"  [label="DDG: "];
"1000117" -> "1000248"  [label="DDG: "];
"1000117" -> "1000259"  [label="DDG: "];
"1000117" -> "1000270"  [label="DDG: "];
"1000117" -> "1000281"  [label="DDG: "];
"1000117" -> "1000290"  [label="DDG: "];
"1000117" -> "1000343"  [label="DDG: "];
"1000117" -> "1000381"  [label="DDG: "];
"1000117" -> "1000420"  [label="DDG: "];
"1000117" -> "1000485"  [label="DDG: "];
"1000459" -> "1000458"  [label="AST: "];
"1000459" -> "1000463"  [label="CFG: "];
"1000463" -> "1000459"  [label="AST: "];
"1000466" -> "1000459"  [label="CFG: "];
"1000468" -> "1000459"  [label="CFG: "];
"1000459" -> "1000507"  [label="DDG: "];
"1000459" -> "1000507"  [label="DDG: "];
"1000459" -> "1000507"  [label="DDG: "];
"1000463" -> "1000459"  [label="DDG: "];
"1000485" -> "1000484"  [label="AST: "];
"1000485" -> "1000496"  [label="CFG: "];
"1000486" -> "1000485"  [label="AST: "];
"1000487" -> "1000485"  [label="AST: "];
"1000488" -> "1000485"  [label="AST: "];
"1000491" -> "1000485"  [label="AST: "];
"1000496" -> "1000485"  [label="AST: "];
"1000500" -> "1000485"  [label="CFG: "];
"1000485" -> "1000507"  [label="DDG: "];
"1000485" -> "1000507"  [label="DDG: "];
"1000485" -> "1000507"  [label="DDG: "];
"1000485" -> "1000507"  [label="DDG: "];
"1000485" -> "1000484"  [label="DDG: "];
"1000485" -> "1000484"  [label="DDG: "];
"1000485" -> "1000484"  [label="DDG: "];
"1000485" -> "1000484"  [label="DDG: "];
"1000485" -> "1000484"  [label="DDG: "];
"1000488" -> "1000485"  [label="DDG: "];
"1000488" -> "1000485"  [label="DDG: "];
"1000491" -> "1000485"  [label="DDG: "];
"1000491" -> "1000485"  [label="DDG: "];
"1000496" -> "1000485"  [label="DDG: "];
"1000496" -> "1000485"  [label="DDG: "];
"1000484" -> "1000483"  [label="AST: "];
"1000484" -> "1000499"  [label="CFG: "];
"1000499" -> "1000484"  [label="AST: "];
"1000502" -> "1000484"  [label="CFG: "];
"1000504" -> "1000484"  [label="CFG: "];
"1000484" -> "1000507"  [label="DDG: "];
"1000484" -> "1000507"  [label="DDG: "];
"1000484" -> "1000507"  [label="DDG: "];
"1000499" -> "1000484"  [label="DDG: "];
}
