digraph "0_file_445c8fb0ebff85195be94cd9f7e1df89cade5c7f_1@pointer" {
"1000605" [label="(Call,cap_hw1 & cdp->cd_mask)"];
"1000508" [label="(Call,cap_hw1 |= xcap_val)"];
"1000137" [label="(Call,cap_hw1 = 0)"];
"1000526" [label="(Call,(unsigned long long)xcap_val)"];
"1000513" [label="(Call,cap_sf1 |= xcap_val)"];
"1000141" [label="(Call,cap_sf1 = 0)"];
"1000624" [label="(Call,cap_hw1 &= ~cdp->cd_mask)"];
"1000605" [label="(Call,cap_hw1 & cdp->cd_mask)"];
"1000638" [label="(Call,(unsigned long long)cap_hw1)"];
"1000635" [label="(Call,file_printf(ms,\n\t\t\t\t    \" unknown hardware capability 0x%\"\n\t\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t\t    (unsigned long long)cap_hw1))"];
"1000634" [label="(Call,file_printf(ms,\n\t\t\t\t    \" unknown hardware capability 0x%\"\n\t\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t\t    (unsigned long long)cap_hw1) == -1)"];
"1000671" [label="(Call,file_printf(ms,\n\t\t\t    (cap_sf1 & SF1_SUNW_FPKNWN)\n\t\t\t    ? \", uses frame pointer\"\n\t\t\t    : \", not known to use frame pointer\"))"];
"1000670" [label="(Call,file_printf(ms,\n\t\t\t    (cap_sf1 & SF1_SUNW_FPKNWN)\n\t\t\t    ? \", uses frame pointer\"\n\t\t\t    : \", not known to use frame pointer\") == -1)"];
"1000691" [label="(Call,file_printf(ms,\n\t\t\t    \", with unknown software capability 0x%\"\n\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t    (unsigned long long)cap_sf1))"];
"1000690" [label="(Call,file_printf(ms,\n\t\t\t    \", with unknown software capability 0x%\"\n\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t    (unsigned long long)cap_sf1) == -1)"];
"1000607" [label="(Call,cdp->cd_mask)"];
"1000121" [label="(Block,)"];
"1000138" [label="(Identifier,cap_hw1)"];
"1000513" [label="(Call,cap_sf1 |= xcap_val)"];
"1000650" [label="(Call,file_printf(ms,\n\t\t\t    \" hardware capability 0x%\" INT64_T_FORMAT \"x\",\n\t\t\t    (unsigned long long)cap_hw1))"];
"1000110" [label="(MethodParameterIn,struct magic_set *ms)"];
"1000588" [label="(Call,file_printf(ms, \", uses\"))"];
"1000509" [label="(Identifier,cap_hw1)"];
"1000693" [label="(Literal,\", with unknown software capability 0x%\"\n\t\t\t    INT64_T_FORMAT \"x\")"];
"1000520" [label="(Call,file_printf(ms,\n\t\t\t\t\t    \", with unknown capability \"\n\t\t\t\t\t    \"0x%\" INT64_T_FORMAT \"x = 0x%\"\n\t\t\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t\t\t    (unsigned long long)xcap_tag,\n\t\t\t\t\t    (unsigned long long)xcap_val))"];
"1000703" [label="(Literal,0)"];
"1000641" [label="(Call,-1)"];
"1000701" [label="(Literal,1)"];
"1000698" [label="(Literal,1)"];
"1000640" [label="(Identifier,cap_hw1)"];
"1000633" [label="(ControlStructure,if (file_printf(ms,\n\t\t\t\t    \" unknown hardware capability 0x%\"\n\t\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t\t    (unsigned long long)cap_hw1) == -1))"];
"1000148" [label="(Identifier,size)"];
"1000670" [label="(Call,file_printf(ms,\n\t\t\t    (cap_sf1 & SF1_SUNW_FPKNWN)\n\t\t\t    ? \", uses frame pointer\"\n\t\t\t    : \", not known to use frame pointer\") == -1)"];
"1000610" [label="(Block,)"];
"1000508" [label="(Call,cap_hw1 |= xcap_val)"];
"1000636" [label="(Identifier,ms)"];
"1000516" [label="(ControlStructure,break;)"];
"1000690" [label="(Call,file_printf(ms,\n\t\t\t    \", with unknown software capability 0x%\"\n\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t    (unsigned long long)cap_sf1) == -1)"];
"1000510" [label="(Identifier,xcap_val)"];
"1000671" [label="(Call,file_printf(ms,\n\t\t\t    (cap_sf1 & SF1_SUNW_FPKNWN)\n\t\t\t    ? \", uses frame pointer\"\n\t\t\t    : \", not known to use frame pointer\"))"];
"1000604" [label="(ControlStructure,if (cap_hw1 & cdp->cd_mask))"];
"1000653" [label="(Call,(unsigned long long)cap_hw1)"];
"1000672" [label="(Identifier,ms)"];
"1000673" [label="(Call,(cap_sf1 & SF1_SUNW_FPKNWN)\n\t\t\t    ? \", uses frame pointer\"\n\t\t\t    : \", not known to use frame pointer\")"];
"1000665" [label="(Call,cap_sf1 & SF1_SUNW_FPUSED)"];
"1000645" [label="(Literal,1)"];
"1000515" [label="(Identifier,xcap_val)"];
"1000137" [label="(Call,cap_hw1 = 0)"];
"1000528" [label="(Identifier,xcap_val)"];
"1000624" [label="(Call,cap_hw1 &= ~cdp->cd_mask)"];
"1000634" [label="(Call,file_printf(ms,\n\t\t\t\t    \" unknown hardware capability 0x%\"\n\t\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t\t    (unsigned long long)cap_hw1) == -1)"];
"1000642" [label="(Literal,1)"];
"1000626" [label="(Call,~cdp->cd_mask)"];
"1000694" [label="(Call,(unsigned long long)cap_sf1)"];
"1000605" [label="(Call,cap_hw1 & cdp->cd_mask)"];
"1000548" [label="(Call,file_printf(ms, \", %sstripped\", stripped ? \"\" : \"not \"))"];
"1000689" [label="(ControlStructure,if (file_printf(ms,\n\t\t\t    \", with unknown software capability 0x%\"\n\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t    (unsigned long long)cap_sf1) == -1))"];
"1000504" [label="(Block,)"];
"1000606" [label="(Identifier,cap_hw1)"];
"1000630" [label="(Identifier,cdp)"];
"1000526" [label="(Call,(unsigned long long)xcap_val)"];
"1000662" [label="(Identifier,cap_sf1)"];
"1000679" [label="(Call,-1)"];
"1000635" [label="(Call,file_printf(ms,\n\t\t\t\t    \" unknown hardware capability 0x%\"\n\t\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t\t    (unsigned long long)cap_hw1))"];
"1000691" [label="(Call,file_printf(ms,\n\t\t\t    \", with unknown software capability 0x%\"\n\t\t\t    INT64_T_FORMAT \"x\",\n\t\t\t    (unsigned long long)cap_sf1))"];
"1000142" [label="(Identifier,cap_sf1)"];
"1000139" [label="(Literal,0)"];
"1000514" [label="(Identifier,cap_sf1)"];
"1000669" [label="(ControlStructure,if (file_printf(ms,\n\t\t\t    (cap_sf1 & SF1_SUNW_FPKNWN)\n\t\t\t    ? \", uses frame pointer\"\n\t\t\t    : \", not known to use frame pointer\") == -1))"];
"1000680" [label="(Literal,1)"];
"1000704" [label="(MethodReturn,RET)"];
"1000141" [label="(Call,cap_sf1 = 0)"];
"1000692" [label="(Identifier,ms)"];
"1000625" [label="(Identifier,cap_hw1)"];
"1000638" [label="(Call,(unsigned long long)cap_hw1)"];
"1000613" [label="(Call,file_printf(ms,\n\t\t\t\t\t    \" %s\", cdp->cd_name))"];
"1000143" [label="(Literal,0)"];
"1000697" [label="(Call,-1)"];
"1000685" [label="(Identifier,cap_sf1)"];
"1000637" [label="(Literal,\" unknown hardware capability 0x%\"\n\t\t\t\t    INT64_T_FORMAT \"x\")"];
"1000683" [label="(Literal,1)"];
"1000511" [label="(ControlStructure,break;)"];
"1000614" [label="(Identifier,ms)"];
"1000605" -> "1000604"  [label="AST: "];
"1000605" -> "1000607"  [label="CFG: "];
"1000606" -> "1000605"  [label="AST: "];
"1000607" -> "1000605"  [label="AST: "];
"1000614" -> "1000605"  [label="CFG: "];
"1000630" -> "1000605"  [label="CFG: "];
"1000605" -> "1000704"  [label="DDG: "];
"1000605" -> "1000704"  [label="DDG: "];
"1000605" -> "1000704"  [label="DDG: "];
"1000508" -> "1000605"  [label="DDG: "];
"1000624" -> "1000605"  [label="DDG: "];
"1000137" -> "1000605"  [label="DDG: "];
"1000605" -> "1000624"  [label="DDG: "];
"1000605" -> "1000638"  [label="DDG: "];
"1000508" -> "1000504"  [label="AST: "];
"1000508" -> "1000510"  [label="CFG: "];
"1000509" -> "1000508"  [label="AST: "];
"1000510" -> "1000508"  [label="AST: "];
"1000511" -> "1000508"  [label="CFG: "];
"1000508" -> "1000704"  [label="DDG: "];
"1000508" -> "1000704"  [label="DDG: "];
"1000508" -> "1000704"  [label="DDG: "];
"1000137" -> "1000508"  [label="DDG: "];
"1000526" -> "1000508"  [label="DDG: "];
"1000513" -> "1000508"  [label="DDG: "];
"1000508" -> "1000513"  [label="DDG: "];
"1000508" -> "1000526"  [label="DDG: "];
"1000508" -> "1000638"  [label="DDG: "];
"1000508" -> "1000653"  [label="DDG: "];
"1000137" -> "1000121"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000142" -> "1000137"  [label="CFG: "];
"1000137" -> "1000704"  [label="DDG: "];
"1000137" -> "1000638"  [label="DDG: "];
"1000137" -> "1000653"  [label="DDG: "];
"1000526" -> "1000520"  [label="AST: "];
"1000526" -> "1000528"  [label="CFG: "];
"1000527" -> "1000526"  [label="AST: "];
"1000528" -> "1000526"  [label="AST: "];
"1000520" -> "1000526"  [label="CFG: "];
"1000526" -> "1000704"  [label="DDG: "];
"1000526" -> "1000513"  [label="DDG: "];
"1000526" -> "1000520"  [label="DDG: "];
"1000513" -> "1000526"  [label="DDG: "];
"1000513" -> "1000504"  [label="AST: "];
"1000513" -> "1000515"  [label="CFG: "];
"1000514" -> "1000513"  [label="AST: "];
"1000515" -> "1000513"  [label="AST: "];
"1000516" -> "1000513"  [label="CFG: "];
"1000513" -> "1000704"  [label="DDG: "];
"1000513" -> "1000704"  [label="DDG: "];
"1000513" -> "1000704"  [label="DDG: "];
"1000141" -> "1000513"  [label="DDG: "];
"1000513" -> "1000665"  [label="DDG: "];
"1000141" -> "1000121"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000148" -> "1000141"  [label="CFG: "];
"1000141" -> "1000704"  [label="DDG: "];
"1000141" -> "1000665"  [label="DDG: "];
"1000624" -> "1000610"  [label="AST: "];
"1000624" -> "1000626"  [label="CFG: "];
"1000625" -> "1000624"  [label="AST: "];
"1000626" -> "1000624"  [label="AST: "];
"1000630" -> "1000624"  [label="CFG: "];
"1000624" -> "1000704"  [label="DDG: "];
"1000624" -> "1000704"  [label="DDG: "];
"1000624" -> "1000704"  [label="DDG: "];
"1000624" -> "1000638"  [label="DDG: "];
"1000638" -> "1000635"  [label="AST: "];
"1000638" -> "1000640"  [label="CFG: "];
"1000639" -> "1000638"  [label="AST: "];
"1000640" -> "1000638"  [label="AST: "];
"1000635" -> "1000638"  [label="CFG: "];
"1000638" -> "1000704"  [label="DDG: "];
"1000638" -> "1000635"  [label="DDG: "];
"1000635" -> "1000634"  [label="AST: "];
"1000636" -> "1000635"  [label="AST: "];
"1000637" -> "1000635"  [label="AST: "];
"1000642" -> "1000635"  [label="CFG: "];
"1000635" -> "1000704"  [label="DDG: "];
"1000635" -> "1000704"  [label="DDG: "];
"1000635" -> "1000634"  [label="DDG: "];
"1000635" -> "1000634"  [label="DDG: "];
"1000635" -> "1000634"  [label="DDG: "];
"1000613" -> "1000635"  [label="DDG: "];
"1000588" -> "1000635"  [label="DDG: "];
"1000110" -> "1000635"  [label="DDG: "];
"1000635" -> "1000671"  [label="DDG: "];
"1000635" -> "1000691"  [label="DDG: "];
"1000634" -> "1000633"  [label="AST: "];
"1000634" -> "1000641"  [label="CFG: "];
"1000641" -> "1000634"  [label="AST: "];
"1000645" -> "1000634"  [label="CFG: "];
"1000662" -> "1000634"  [label="CFG: "];
"1000634" -> "1000704"  [label="DDG: "];
"1000634" -> "1000704"  [label="DDG: "];
"1000634" -> "1000704"  [label="DDG: "];
"1000641" -> "1000634"  [label="DDG: "];
"1000671" -> "1000670"  [label="AST: "];
"1000671" -> "1000673"  [label="CFG: "];
"1000672" -> "1000671"  [label="AST: "];
"1000673" -> "1000671"  [label="AST: "];
"1000680" -> "1000671"  [label="CFG: "];
"1000671" -> "1000704"  [label="DDG: "];
"1000671" -> "1000704"  [label="DDG: "];
"1000671" -> "1000670"  [label="DDG: "];
"1000671" -> "1000670"  [label="DDG: "];
"1000613" -> "1000671"  [label="DDG: "];
"1000588" -> "1000671"  [label="DDG: "];
"1000650" -> "1000671"  [label="DDG: "];
"1000548" -> "1000671"  [label="DDG: "];
"1000110" -> "1000671"  [label="DDG: "];
"1000671" -> "1000691"  [label="DDG: "];
"1000670" -> "1000669"  [label="AST: "];
"1000670" -> "1000679"  [label="CFG: "];
"1000679" -> "1000670"  [label="AST: "];
"1000683" -> "1000670"  [label="CFG: "];
"1000685" -> "1000670"  [label="CFG: "];
"1000670" -> "1000704"  [label="DDG: "];
"1000670" -> "1000704"  [label="DDG: "];
"1000670" -> "1000704"  [label="DDG: "];
"1000679" -> "1000670"  [label="DDG: "];
"1000691" -> "1000690"  [label="AST: "];
"1000691" -> "1000694"  [label="CFG: "];
"1000692" -> "1000691"  [label="AST: "];
"1000693" -> "1000691"  [label="AST: "];
"1000694" -> "1000691"  [label="AST: "];
"1000698" -> "1000691"  [label="CFG: "];
"1000691" -> "1000704"  [label="DDG: "];
"1000691" -> "1000704"  [label="DDG: "];
"1000691" -> "1000690"  [label="DDG: "];
"1000691" -> "1000690"  [label="DDG: "];
"1000691" -> "1000690"  [label="DDG: "];
"1000613" -> "1000691"  [label="DDG: "];
"1000588" -> "1000691"  [label="DDG: "];
"1000650" -> "1000691"  [label="DDG: "];
"1000548" -> "1000691"  [label="DDG: "];
"1000110" -> "1000691"  [label="DDG: "];
"1000694" -> "1000691"  [label="DDG: "];
"1000690" -> "1000689"  [label="AST: "];
"1000690" -> "1000697"  [label="CFG: "];
"1000697" -> "1000690"  [label="AST: "];
"1000701" -> "1000690"  [label="CFG: "];
"1000703" -> "1000690"  [label="CFG: "];
"1000690" -> "1000704"  [label="DDG: "];
"1000690" -> "1000704"  [label="DDG: "];
"1000690" -> "1000704"  [label="DDG: "];
"1000697" -> "1000690"  [label="DDG: "];
}
