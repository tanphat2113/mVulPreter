digraph "0_linux_edbd58be15a957f6a760c4a514cd475217eb97fd@pointer" {
"1000298" [label="(Call,TPACKET_ALIGN(po->tp_hdrlen +\n \t\t\t\t       (maclen < 16 ? 16 : maclen)) +\n \t\t\t\t       po->tp_reserve)"];
"1000299" [label="(Call,TPACKET_ALIGN(po->tp_hdrlen +\n \t\t\t\t       (maclen < 16 ? 16 : maclen)))"];
"1000305" [label="(Call,maclen < 16)"];
"1000292" [label="(Call,maclen = skb_network_offset(skb))"];
"1000294" [label="(Call,skb_network_offset(skb))"];
"1000256" [label="(Call,skb_csum_unnecessary(skb))"];
"1000225" [label="(Call,run_filter(skb, sk, snaplen))"];
"1000198" [label="(Call,skb_push(skb, skb->data - skb_mac_header(skb)))"];
"1000204" [label="(Call,skb_mac_header(skb))"];
"1000105" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000200" [label="(Call,skb->data - skb_mac_header(skb))"];
"1000214" [label="(Call,skb_pull(skb, skb_network_offset(skb)))"];
"1000216" [label="(Call,skb_network_offset(skb))"];
"1000184" [label="(Call,sock_net(sk))"];
"1000177" [label="(Call,pkt_sk(sk))"];
"1000170" [label="(Call,sk = pt->af_packet_priv)"];
"1000218" [label="(Call,snaplen = skb->len)"];
"1000572" [label="(Call,tpacket_get_timestamp(skb, &ts, po->tp_tstamp))"];
"1000292" [label="(Call,maclen = skb_network_offset(skb))"];
"1000307" [label="(Literal,16)"];
"1000250" [label="(Call,skb->ip_summed == CHECKSUM_COMPLETE ||\n\t\t  skb_csum_unnecessary(skb))"];
"1000198" [label="(Call,skb_push(skb, skb->data - skb_mac_header(skb)))"];
"1000559" [label="(Call,skb_copy_bits(skb, 0, h.raw + macoff, snaplen))"];
"1000175" [label="(Call,po = pkt_sk(sk))"];
"1000224" [label="(Identifier,res)"];
"1000374" [label="(Call,skb_head = skb->data)"];
"1001017" [label="(Call,sk->sk_data_ready(sk))"];
"1000220" [label="(Call,skb->len)"];
"1000969" [label="(Call,skb_head != skb->data)"];
"1000311" [label="(Identifier,po)"];
"1000257" [label="(Identifier,skb)"];
"1000177" [label="(Call,pkt_sk(sk))"];
"1000294" [label="(Call,skb_network_offset(skb))"];
"1000297" [label="(Identifier,netoff)"];
"1000256" [label="(Call,skb_csum_unnecessary(skb))"];
"1000360" [label="(Call,skb_shared(skb))"];
"1000223" [label="(Call,res = run_filter(skb, sk, snaplen))"];
"1000372" [label="(Call,skb_get(skb))"];
"1000215" [label="(Identifier,skb)"];
"1000381" [label="(Call,skb_set_owner_r(copy_skb, sk))"];
"1000205" [label="(Identifier,skb)"];
"1000225" [label="(Call,run_filter(skb, sk, snaplen))"];
"1000295" [label="(Identifier,skb)"];
"1000204" [label="(Call,skb_mac_header(skb))"];
"1000213" [label="(Block,)"];
"1000323" [label="(Call,netoff - maclen)"];
"1000109" [label="(Block,)"];
"1000171" [label="(Identifier,sk)"];
"1000305" [label="(Call,maclen < 16)"];
"1001022" [label="(MethodReturn,static int)"];
"1000184" [label="(Call,sock_net(sk))"];
"1000219" [label="(Identifier,snaplen)"];
"1000468" [label="(Call,packet_current_rx_frame(po, skb,\n\t\t\t\t\tTP_STATUS_KERNEL, (macoff+snaplen)))"];
"1000538" [label="(Call,virtio_net_hdr_from_skb(skb, h.raw + macoff -\n \t\t\t\t\t    sizeof(struct virtio_net_hdr),\n \t\t\t\t\t    vio_le(), true))"];
"1000290" [label="(Block,)"];
"1000309" [label="(Identifier,maclen)"];
"1000214" [label="(Call,skb_pull(skb, skb_network_offset(skb)))"];
"1000308" [label="(Literal,16)"];
"1000216" [label="(Call,skb_network_offset(skb))"];
"1000298" [label="(Call,TPACKET_ALIGN(po->tp_hdrlen +\n \t\t\t\t       (maclen < 16 ? 16 : maclen)) +\n \t\t\t\t       po->tp_reserve)"];
"1000200" [label="(Call,skb->data - skb_mac_header(skb))"];
"1000299" [label="(Call,TPACKET_ALIGN(po->tp_hdrlen +\n \t\t\t\t       (maclen < 16 ? 16 : maclen)))"];
"1000300" [label="(Call,po->tp_hdrlen +\n \t\t\t\t       (maclen < 16 ? 16 : maclen))"];
"1000853" [label="(Call,dev_parse_header(skb, sll->sll_addr))"];
"1000217" [label="(Identifier,skb)"];
"1000178" [label="(Identifier,sk)"];
"1000699" [label="(Call,skb_vlan_tag_present(skb))"];
"1000293" [label="(Identifier,maclen)"];
"1000991" [label="(Call,consume_skb(skb))"];
"1000304" [label="(Call,maclen < 16 ? 16 : maclen)"];
"1000228" [label="(Identifier,snaplen)"];
"1000957" [label="(Call,sk->sk_data_ready(sk))"];
"1000201" [label="(Call,skb->data)"];
"1000226" [label="(Identifier,skb)"];
"1000306" [label="(Identifier,maclen)"];
"1000365" [label="(Call,skb_clone(skb, GFP_ATOMIC))"];
"1000176" [label="(Identifier,po)"];
"1000192" [label="(ControlStructure,if (sk->sk_type != SOCK_DGRAM))"];
"1000170" [label="(Call,sk = pt->af_packet_priv)"];
"1000974" [label="(Call,skb_shared(skb))"];
"1000218" [label="(Call,snaplen = skb->len)"];
"1000994" [label="(Call,kfree_skb(skb))"];
"1000105" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000708" [label="(Call,skb_vlan_tag_get(skb))"];
"1000172" [label="(Call,pt->af_packet_priv)"];
"1000185" [label="(Identifier,sk)"];
"1000262" [label="(Call,snaplen > res)"];
"1000199" [label="(Identifier,skb)"];
"1000310" [label="(Call,po->tp_reserve)"];
"1000181" [label="(Call,net_eq(dev_net(dev), sock_net(sk)))"];
"1000227" [label="(Identifier,sk)"];
"1000296" [label="(Call,netoff = TPACKET_ALIGN(po->tp_hdrlen +\n \t\t\t\t       (maclen < 16 ? 16 : maclen)) +\n \t\t\t\t       po->tp_reserve)"];
"1000298" -> "1000296"  [label="AST: "];
"1000298" -> "1000310"  [label="CFG: "];
"1000299" -> "1000298"  [label="AST: "];
"1000310" -> "1000298"  [label="AST: "];
"1000296" -> "1000298"  [label="CFG: "];
"1000298" -> "1001022"  [label="DDG: po->tp_reserve"];
"1000298" -> "1001022"  [label="DDG: TPACKET_ALIGN(po->tp_hdrlen +\n \t\t\t\t       (maclen < 16 ? 16 : maclen))"];
"1000299" -> "1000298"  [label="DDG: po->tp_hdrlen +\n \t\t\t\t       (maclen < 16 ? 16 : maclen)"];
"1000299" -> "1000300"  [label="CFG: "];
"1000300" -> "1000299"  [label="AST: "];
"1000311" -> "1000299"  [label="CFG: "];
"1000299" -> "1001022"  [label="DDG: po->tp_hdrlen +\n \t\t\t\t       (maclen < 16 ? 16 : maclen)"];
"1000299" -> "1000296"  [label="DDG: po->tp_hdrlen +\n \t\t\t\t       (maclen < 16 ? 16 : maclen)"];
"1000305" -> "1000299"  [label="DDG: maclen"];
"1000305" -> "1000304"  [label="AST: "];
"1000305" -> "1000307"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000307" -> "1000305"  [label="AST: "];
"1000308" -> "1000305"  [label="CFG: "];
"1000309" -> "1000305"  [label="CFG: "];
"1000305" -> "1000300"  [label="DDG: maclen"];
"1000292" -> "1000305"  [label="DDG: maclen"];
"1000305" -> "1000304"  [label="DDG: maclen"];
"1000305" -> "1000323"  [label="DDG: maclen"];
"1000292" -> "1000290"  [label="AST: "];
"1000292" -> "1000294"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000294" -> "1000292"  [label="AST: "];
"1000297" -> "1000292"  [label="CFG: "];
"1000292" -> "1001022"  [label="DDG: skb_network_offset(skb)"];
"1000294" -> "1000292"  [label="DDG: skb"];
"1000294" -> "1000295"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000256" -> "1000294"  [label="DDG: skb"];
"1000225" -> "1000294"  [label="DDG: skb"];
"1000105" -> "1000294"  [label="DDG: skb"];
"1000294" -> "1000360"  [label="DDG: skb"];
"1000294" -> "1000468"  [label="DDG: skb"];
"1000256" -> "1000250"  [label="AST: "];
"1000256" -> "1000257"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000250" -> "1000256"  [label="CFG: "];
"1000256" -> "1000250"  [label="DDG: skb"];
"1000225" -> "1000256"  [label="DDG: skb"];
"1000105" -> "1000256"  [label="DDG: skb"];
"1000256" -> "1000360"  [label="DDG: skb"];
"1000256" -> "1000468"  [label="DDG: skb"];
"1000225" -> "1000223"  [label="AST: "];
"1000225" -> "1000228"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000227" -> "1000225"  [label="AST: "];
"1000228" -> "1000225"  [label="AST: "];
"1000223" -> "1000225"  [label="CFG: "];
"1000225" -> "1001022"  [label="DDG: sk"];
"1000225" -> "1001022"  [label="DDG: snaplen"];
"1000225" -> "1000223"  [label="DDG: skb"];
"1000225" -> "1000223"  [label="DDG: sk"];
"1000225" -> "1000223"  [label="DDG: snaplen"];
"1000198" -> "1000225"  [label="DDG: skb"];
"1000214" -> "1000225"  [label="DDG: skb"];
"1000105" -> "1000225"  [label="DDG: skb"];
"1000184" -> "1000225"  [label="DDG: sk"];
"1000218" -> "1000225"  [label="DDG: snaplen"];
"1000225" -> "1000262"  [label="DDG: snaplen"];
"1000225" -> "1000360"  [label="DDG: skb"];
"1000225" -> "1000381"  [label="DDG: sk"];
"1000225" -> "1000468"  [label="DDG: skb"];
"1000225" -> "1000957"  [label="DDG: sk"];
"1000225" -> "1000974"  [label="DDG: skb"];
"1000225" -> "1000991"  [label="DDG: skb"];
"1000225" -> "1000994"  [label="DDG: skb"];
"1000225" -> "1001017"  [label="DDG: sk"];
"1000198" -> "1000192"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000219" -> "1000198"  [label="CFG: "];
"1000198" -> "1001022"  [label="DDG: skb->data - skb_mac_header(skb)"];
"1000198" -> "1001022"  [label="DDG: skb_push(skb, skb->data - skb_mac_header(skb))"];
"1000204" -> "1000198"  [label="DDG: skb"];
"1000105" -> "1000198"  [label="DDG: skb"];
"1000200" -> "1000198"  [label="DDG: skb->data"];
"1000200" -> "1000198"  [label="DDG: skb_mac_header(skb)"];
"1000204" -> "1000200"  [label="AST: "];
"1000204" -> "1000205"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000200" -> "1000204"  [label="CFG: "];
"1000204" -> "1000200"  [label="DDG: skb"];
"1000105" -> "1000204"  [label="DDG: skb"];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1001022"  [label="DDG: skb"];
"1000105" -> "1000214"  [label="DDG: skb"];
"1000105" -> "1000216"  [label="DDG: skb"];
"1000105" -> "1000360"  [label="DDG: skb"];
"1000105" -> "1000365"  [label="DDG: skb"];
"1000105" -> "1000372"  [label="DDG: skb"];
"1000105" -> "1000468"  [label="DDG: skb"];
"1000105" -> "1000538"  [label="DDG: skb"];
"1000105" -> "1000559"  [label="DDG: skb"];
"1000105" -> "1000572"  [label="DDG: skb"];
"1000105" -> "1000699"  [label="DDG: skb"];
"1000105" -> "1000708"  [label="DDG: skb"];
"1000105" -> "1000853"  [label="DDG: skb"];
"1000105" -> "1000974"  [label="DDG: skb"];
"1000105" -> "1000991"  [label="DDG: skb"];
"1000105" -> "1000994"  [label="DDG: skb"];
"1000201" -> "1000200"  [label="AST: "];
"1000200" -> "1001022"  [label="DDG: skb_mac_header(skb)"];
"1000200" -> "1000374"  [label="DDG: skb->data"];
"1000200" -> "1000969"  [label="DDG: skb->data"];
"1000214" -> "1000213"  [label="AST: "];
"1000214" -> "1000216"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000216" -> "1000214"  [label="AST: "];
"1000219" -> "1000214"  [label="CFG: "];
"1000214" -> "1001022"  [label="DDG: skb_network_offset(skb)"];
"1000214" -> "1001022"  [label="DDG: skb_pull(skb, skb_network_offset(skb))"];
"1000216" -> "1000214"  [label="DDG: skb"];
"1000216" -> "1000217"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000184" -> "1000181"  [label="AST: "];
"1000184" -> "1000185"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000181" -> "1000184"  [label="CFG: "];
"1000184" -> "1001022"  [label="DDG: sk"];
"1000184" -> "1000181"  [label="DDG: sk"];
"1000177" -> "1000184"  [label="DDG: sk"];
"1000177" -> "1000175"  [label="AST: "];
"1000177" -> "1000178"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000175" -> "1000177"  [label="CFG: "];
"1000177" -> "1000175"  [label="DDG: sk"];
"1000170" -> "1000177"  [label="DDG: sk"];
"1000170" -> "1000109"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000176" -> "1000170"  [label="CFG: "];
"1000170" -> "1001022"  [label="DDG: pt->af_packet_priv"];
"1000218" -> "1000109"  [label="AST: "];
"1000218" -> "1000220"  [label="CFG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000220" -> "1000218"  [label="AST: "];
"1000224" -> "1000218"  [label="CFG: "];
"1000218" -> "1001022"  [label="DDG: skb->len"];
}
