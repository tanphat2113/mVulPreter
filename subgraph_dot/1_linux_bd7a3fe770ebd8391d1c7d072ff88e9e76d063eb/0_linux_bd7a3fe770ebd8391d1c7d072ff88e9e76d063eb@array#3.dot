digraph "0_linux_bd7a3fe770ebd8391d1c7d072ff88e9e76d063eb@array" {
"1000410" [label="(Call,nalts[n] = 1)"];
"1000659" [label="(Call,usb_parse_interface(ddev, cfgno, config,\n\t\t    buffer, size, inums, nalts))"];
"1000657" [label="(Call,retval = usb_parse_interface(ddev, cfgno, config,\n\t\t    buffer, size, inums, nalts))"];
"1000668" [label="(Call,retval < 0)"];
"1000671" [label="(Return,return retval;)"];
"1000673" [label="(Call,buffer += retval)"];
"1000676" [label="(Call,size -= retval)"];
"1000653" [label="(Call,size > 0)"];
"1000739" [label="(Call,dev_warn(ddev, \"config %d interface %d has no \"\n\t\t\t\t    \"altsetting %d\n\", cfgno, inums[i], j))"];
"1000705" [label="(Call,++j)"];
"1000700" [label="(Call,j < intfc->num_altsetting)"];
"1000712" [label="(Call,n < intfc->num_altsetting)"];
"1000717" [label="(Call,++n)"];
"1000734" [label="(Call,n >= intfc->num_altsetting)"];
"1000721" [label="(Call,intfc->altsetting[n].desc.\n\t\t\t\t    bAlternateSetting == j)"];
"1000731" [label="(Identifier,j)"];
"1000700" [label="(Call,j < intfc->num_altsetting)"];
"1000649" [label="(Call,size -= i)"];
"1000577" [label="(Call,nalts[i] = j = USB_MAXALTSETTING)"];
"1000672" [label="(Identifier,retval)"];
"1000687" [label="(Identifier,i)"];
"1000726" [label="(Identifier,intfc)"];
"1000718" [label="(Identifier,n)"];
"1000194" [label="(Call,cfgno = config->desc.bConfigurationValue)"];
"1000296" [label="(Call,dev_warn(ddev, \"config %d has an invalid descriptor \"\n\t\t\t    \"of length %d, skipping remainder of the config\n\",\n\t\t\t    cfgno, header->bLength))"];
"1000674" [label="(Identifier,buffer)"];
"1000390" [label="(Call,nalts[i] < 255)"];
"1000499" [label="(Call,dev_warn(ddev, \"config %d has no interfaces?\n\", cfgno))"];
"1000742" [label="(Identifier,cfgno)"];
"1000486" [label="(Call,dev_warn(ddev, \"config %d has %d interface%s, different from \"\n\t\t    \"the descriptor's value: %d\n\",\n\t\t    cfgno, n, plural(n), nintf_orig))"];
"1000668" [label="(Call,retval < 0)"];
"1000405" [label="(Call,inums[n] = inum)"];
"1000568" [label="(Call,dev_warn(ddev, \"too many alternate settings for \"\n\t\t\t    \"config %d interface %d: %d, \"\n\t\t\t    \"using maximum allowed: %d\n\",\n\t\t\t    cfgno, inums[i], j, USB_MAXALTSETTING))"];
"1000736" [label="(Call,intfc->num_altsetting)"];
"1000722" [label="(Call,intfc->altsetting[n].desc.\n\t\t\t\t    bAlternateSetting)"];
"1000117" [label="(Call,*ddev = &dev->dev)"];
"1000743" [label="(Call,inums[i])"];
"1000733" [label="(ControlStructure,if (n >= intfc->num_altsetting))"];
"1000697" [label="(Call,j = 0)"];
"1000678" [label="(Identifier,retval)"];
"1000708" [label="(ControlStructure,for (n = 0; n < intfc->num_altsetting; ++n))"];
"1000414" [label="(Literal,1)"];
"1000349" [label="(Call,dev_warn(ddev, \"config %d has more interface \"\n\t\t\t\t    \"descriptors, than it declares in \"\n\t\t\t\t    \"bNumInterfaces, ignoring interface \"\n\t\t\t\t    \"number: %d\n\", cfgno, inum))"];
"1000666" [label="(Identifier,nalts)"];
"1000662" [label="(Identifier,config)"];
"1000710" [label="(Identifier,n)"];
"1000676" [label="(Call,size -= retval)"];
"1000696" [label="(ControlStructure,for (j = 0; j < intfc->num_altsetting; ++j))"];
"1000543" [label="(Call,dev_warn(ddev, \"config %d has no interface number \"\n\t\t\t    \"%d\n\", cfgno, i))"];
"1000657" [label="(Call,retval = usb_parse_interface(ddev, cfgno, config,\n\t\t    buffer, size, inums, nalts))"];
"1000712" [label="(Call,n < intfc->num_altsetting)"];
"1000717" [label="(Call,++n)"];
"1000270" [label="(Call,dev_warn(ddev, \"config %d descriptor has %d excess \"\n\t\t\t    \"byte%s, ignoring\n\",\n\t\t\t    cfgno, size2, plural(size2)))"];
"1000713" [label="(Identifier,n)"];
"1000665" [label="(Identifier,inums)"];
"1000646" [label="(Call,buffer += i)"];
"1000673" [label="(Call,buffer += retval)"];
"1000654" [label="(Identifier,size)"];
"1000359" [label="(Call,dev_warn(ddev, \"config %d has an invalid \"\n\t\t\t\t    \"interface number: %d but max is %d\n\",\n\t\t\t\t    cfgno, inum, nintf_orig - 1))"];
"1000416" [label="(Identifier,n)"];
"1000639" [label="(Call,dev_dbg(ddev, \"skipped %d descriptor%s after %s\n\",\n\t\t    n, plural(n), \"configuration\"))"];
"1000720" [label="(ControlStructure,if (intfc->altsetting[n].desc.\n\t\t\t\t    bAlternateSetting == j))"];
"1000735" [label="(Identifier,n)"];
"1000113" [label="(MethodParameterIn,unsigned char *buffer)"];
"1000677" [label="(Identifier,size)"];
"1000739" [label="(Call,dev_warn(ddev, \"config %d interface %d has no \"\n\t\t\t\t    \"altsetting %d\n\", cfgno, inums[i], j))"];
"1000740" [label="(Identifier,ddev)"];
"1000460" [label="(Call,dev_warn(ddev, \"config %d contains an unexpected \"\n\t\t\t    \"descriptor of type 0x%X, skipping\n\",\n\t\t\t    cfgno, header->bDescriptorType))"];
"1000430" [label="(Call,dev_warn(ddev, \"found more Interface \"\n \t\t\t\t\t       \"Association Descriptors \"\n \t\t\t\t\t       \"than allocated for in \"\n \t\t\t\t\t       \"configuration %d\n\", cfgno))"];
"1000741" [label="(Literal,\"config %d interface %d has no \"\n\t\t\t\t    \"altsetting %d\n\")"];
"1000734" [label="(Call,n >= intfc->num_altsetting)"];
"1000706" [label="(Identifier,j)"];
"1000229" [label="(Call,dev_warn(ddev, \"config %d has too many interfaces: %d, \"\n\t\t    \"using maximum allowed: %d\n\",\n\t\t    cfgno, nintf, USB_MAXINTERFACES))"];
"1000669" [label="(Identifier,retval)"];
"1000667" [label="(ControlStructure,if (retval < 0))"];
"1000112" [label="(MethodParameterIn,struct usb_host_config *config)"];
"1000705" [label="(Call,++j)"];
"1000533" [label="(Call,inums[j] == i)"];
"1000702" [label="(Call,intfc->num_altsetting)"];
"1000325" [label="(Call,dev_warn(ddev, \"config %d has an invalid \"\n\t\t\t\t    \"interface descriptor of length %d, \"\n\t\t\t\t    \"skipping\n\", cfgno, d->bLength))"];
"1000404" [label="(Block,)"];
"1000656" [label="(Block,)"];
"1000681" [label="(Identifier,i)"];
"1000652" [label="(ControlStructure,while (size > 0))"];
"1000732" [label="(ControlStructure,break;)"];
"1000664" [label="(Identifier,size)"];
"1000659" [label="(Call,usb_parse_interface(ddev, cfgno, config,\n\t\t    buffer, size, inums, nalts))"];
"1000660" [label="(Identifier,ddev)"];
"1000410" [label="(Call,nalts[n] = 1)"];
"1000714" [label="(Call,intfc->num_altsetting)"];
"1000114" [label="(MethodParameterIn,int size)"];
"1000395" [label="(Call,++nalts[i])"];
"1000671" [label="(Return,return retval;)"];
"1000655" [label="(Literal,0)"];
"1000746" [label="(Identifier,j)"];
"1000721" [label="(Call,intfc->altsetting[n].desc.\n\t\t\t\t    bAlternateSetting == j)"];
"1000663" [label="(Identifier,buffer)"];
"1000658" [label="(Identifier,retval)"];
"1000661" [label="(Identifier,cfgno)"];
"1000378" [label="(Call,inums[i] == inum)"];
"1000709" [label="(Call,n = 0)"];
"1000749" [label="(MethodReturn,static int)"];
"1000701" [label="(Identifier,j)"];
"1000670" [label="(Literal,0)"];
"1000675" [label="(Identifier,retval)"];
"1000653" [label="(Call,size > 0)"];
"1000411" [label="(Call,nalts[n])"];
"1000410" -> "1000404"  [label="AST: "];
"1000410" -> "1000414"  [label="CFG: "];
"1000411" -> "1000410"  [label="AST: "];
"1000414" -> "1000410"  [label="AST: "];
"1000416" -> "1000410"  [label="CFG: "];
"1000410" -> "1000749"  [label="DDG: "];
"1000410" -> "1000659"  [label="DDG: "];
"1000659" -> "1000657"  [label="AST: "];
"1000659" -> "1000666"  [label="CFG: "];
"1000660" -> "1000659"  [label="AST: "];
"1000661" -> "1000659"  [label="AST: "];
"1000662" -> "1000659"  [label="AST: "];
"1000663" -> "1000659"  [label="AST: "];
"1000664" -> "1000659"  [label="AST: "];
"1000665" -> "1000659"  [label="AST: "];
"1000666" -> "1000659"  [label="AST: "];
"1000657" -> "1000659"  [label="CFG: "];
"1000659" -> "1000749"  [label="DDG: "];
"1000659" -> "1000749"  [label="DDG: "];
"1000659" -> "1000749"  [label="DDG: "];
"1000659" -> "1000749"  [label="DDG: "];
"1000659" -> "1000749"  [label="DDG: "];
"1000659" -> "1000749"  [label="DDG: "];
"1000659" -> "1000749"  [label="DDG: "];
"1000659" -> "1000657"  [label="DDG: "];
"1000659" -> "1000657"  [label="DDG: "];
"1000659" -> "1000657"  [label="DDG: "];
"1000659" -> "1000657"  [label="DDG: "];
"1000659" -> "1000657"  [label="DDG: "];
"1000659" -> "1000657"  [label="DDG: "];
"1000659" -> "1000657"  [label="DDG: "];
"1000325" -> "1000659"  [label="DDG: "];
"1000325" -> "1000659"  [label="DDG: "];
"1000460" -> "1000659"  [label="DDG: "];
"1000460" -> "1000659"  [label="DDG: "];
"1000639" -> "1000659"  [label="DDG: "];
"1000499" -> "1000659"  [label="DDG: "];
"1000499" -> "1000659"  [label="DDG: "];
"1000349" -> "1000659"  [label="DDG: "];
"1000349" -> "1000659"  [label="DDG: "];
"1000296" -> "1000659"  [label="DDG: "];
"1000296" -> "1000659"  [label="DDG: "];
"1000359" -> "1000659"  [label="DDG: "];
"1000359" -> "1000659"  [label="DDG: "];
"1000229" -> "1000659"  [label="DDG: "];
"1000229" -> "1000659"  [label="DDG: "];
"1000543" -> "1000659"  [label="DDG: "];
"1000543" -> "1000659"  [label="DDG: "];
"1000568" -> "1000659"  [label="DDG: "];
"1000568" -> "1000659"  [label="DDG: "];
"1000568" -> "1000659"  [label="DDG: "];
"1000117" -> "1000659"  [label="DDG: "];
"1000430" -> "1000659"  [label="DDG: "];
"1000430" -> "1000659"  [label="DDG: "];
"1000486" -> "1000659"  [label="DDG: "];
"1000486" -> "1000659"  [label="DDG: "];
"1000270" -> "1000659"  [label="DDG: "];
"1000270" -> "1000659"  [label="DDG: "];
"1000194" -> "1000659"  [label="DDG: "];
"1000112" -> "1000659"  [label="DDG: "];
"1000646" -> "1000659"  [label="DDG: "];
"1000673" -> "1000659"  [label="DDG: "];
"1000113" -> "1000659"  [label="DDG: "];
"1000653" -> "1000659"  [label="DDG: "];
"1000114" -> "1000659"  [label="DDG: "];
"1000378" -> "1000659"  [label="DDG: "];
"1000533" -> "1000659"  [label="DDG: "];
"1000405" -> "1000659"  [label="DDG: "];
"1000395" -> "1000659"  [label="DDG: "];
"1000577" -> "1000659"  [label="DDG: "];
"1000390" -> "1000659"  [label="DDG: "];
"1000659" -> "1000673"  [label="DDG: "];
"1000659" -> "1000676"  [label="DDG: "];
"1000659" -> "1000739"  [label="DDG: "];
"1000659" -> "1000739"  [label="DDG: "];
"1000659" -> "1000739"  [label="DDG: "];
"1000657" -> "1000656"  [label="AST: "];
"1000658" -> "1000657"  [label="AST: "];
"1000669" -> "1000657"  [label="CFG: "];
"1000657" -> "1000749"  [label="DDG: "];
"1000657" -> "1000668"  [label="DDG: "];
"1000668" -> "1000667"  [label="AST: "];
"1000668" -> "1000670"  [label="CFG: "];
"1000669" -> "1000668"  [label="AST: "];
"1000670" -> "1000668"  [label="AST: "];
"1000672" -> "1000668"  [label="CFG: "];
"1000674" -> "1000668"  [label="CFG: "];
"1000668" -> "1000749"  [label="DDG: "];
"1000668" -> "1000749"  [label="DDG: "];
"1000668" -> "1000671"  [label="DDG: "];
"1000668" -> "1000673"  [label="DDG: "];
"1000668" -> "1000676"  [label="DDG: "];
"1000671" -> "1000667"  [label="AST: "];
"1000671" -> "1000672"  [label="CFG: "];
"1000672" -> "1000671"  [label="AST: "];
"1000749" -> "1000671"  [label="CFG: "];
"1000671" -> "1000749"  [label="DDG: "];
"1000672" -> "1000671"  [label="DDG: "];
"1000673" -> "1000656"  [label="AST: "];
"1000673" -> "1000675"  [label="CFG: "];
"1000674" -> "1000673"  [label="AST: "];
"1000675" -> "1000673"  [label="AST: "];
"1000677" -> "1000673"  [label="CFG: "];
"1000673" -> "1000749"  [label="DDG: "];
"1000113" -> "1000673"  [label="DDG: "];
"1000676" -> "1000656"  [label="AST: "];
"1000676" -> "1000678"  [label="CFG: "];
"1000677" -> "1000676"  [label="AST: "];
"1000678" -> "1000676"  [label="AST: "];
"1000654" -> "1000676"  [label="CFG: "];
"1000676" -> "1000749"  [label="DDG: "];
"1000676" -> "1000653"  [label="DDG: "];
"1000114" -> "1000676"  [label="DDG: "];
"1000653" -> "1000652"  [label="AST: "];
"1000653" -> "1000655"  [label="CFG: "];
"1000654" -> "1000653"  [label="AST: "];
"1000655" -> "1000653"  [label="AST: "];
"1000658" -> "1000653"  [label="CFG: "];
"1000681" -> "1000653"  [label="CFG: "];
"1000653" -> "1000749"  [label="DDG: "];
"1000653" -> "1000749"  [label="DDG: "];
"1000649" -> "1000653"  [label="DDG: "];
"1000114" -> "1000653"  [label="DDG: "];
"1000739" -> "1000733"  [label="AST: "];
"1000739" -> "1000746"  [label="CFG: "];
"1000740" -> "1000739"  [label="AST: "];
"1000741" -> "1000739"  [label="AST: "];
"1000742" -> "1000739"  [label="AST: "];
"1000743" -> "1000739"  [label="AST: "];
"1000746" -> "1000739"  [label="AST: "];
"1000706" -> "1000739"  [label="CFG: "];
"1000739" -> "1000749"  [label="DDG: "];
"1000739" -> "1000749"  [label="DDG: "];
"1000739" -> "1000749"  [label="DDG: "];
"1000739" -> "1000749"  [label="DDG: "];
"1000739" -> "1000705"  [label="DDG: "];
"1000325" -> "1000739"  [label="DDG: "];
"1000325" -> "1000739"  [label="DDG: "];
"1000460" -> "1000739"  [label="DDG: "];
"1000460" -> "1000739"  [label="DDG: "];
"1000639" -> "1000739"  [label="DDG: "];
"1000499" -> "1000739"  [label="DDG: "];
"1000499" -> "1000739"  [label="DDG: "];
"1000349" -> "1000739"  [label="DDG: "];
"1000349" -> "1000739"  [label="DDG: "];
"1000296" -> "1000739"  [label="DDG: "];
"1000296" -> "1000739"  [label="DDG: "];
"1000359" -> "1000739"  [label="DDG: "];
"1000359" -> "1000739"  [label="DDG: "];
"1000229" -> "1000739"  [label="DDG: "];
"1000229" -> "1000739"  [label="DDG: "];
"1000543" -> "1000739"  [label="DDG: "];
"1000543" -> "1000739"  [label="DDG: "];
"1000568" -> "1000739"  [label="DDG: "];
"1000568" -> "1000739"  [label="DDG: "];
"1000568" -> "1000739"  [label="DDG: "];
"1000117" -> "1000739"  [label="DDG: "];
"1000430" -> "1000739"  [label="DDG: "];
"1000430" -> "1000739"  [label="DDG: "];
"1000486" -> "1000739"  [label="DDG: "];
"1000486" -> "1000739"  [label="DDG: "];
"1000270" -> "1000739"  [label="DDG: "];
"1000270" -> "1000739"  [label="DDG: "];
"1000194" -> "1000739"  [label="DDG: "];
"1000378" -> "1000739"  [label="DDG: "];
"1000700" -> "1000739"  [label="DDG: "];
"1000721" -> "1000739"  [label="DDG: "];
"1000705" -> "1000696"  [label="AST: "];
"1000705" -> "1000706"  [label="CFG: "];
"1000706" -> "1000705"  [label="AST: "];
"1000701" -> "1000705"  [label="CFG: "];
"1000705" -> "1000700"  [label="DDG: "];
"1000700" -> "1000705"  [label="DDG: "];
"1000721" -> "1000705"  [label="DDG: "];
"1000700" -> "1000696"  [label="AST: "];
"1000700" -> "1000702"  [label="CFG: "];
"1000701" -> "1000700"  [label="AST: "];
"1000702" -> "1000700"  [label="AST: "];
"1000710" -> "1000700"  [label="CFG: "];
"1000687" -> "1000700"  [label="CFG: "];
"1000700" -> "1000749"  [label="DDG: "];
"1000700" -> "1000749"  [label="DDG: "];
"1000700" -> "1000749"  [label="DDG: "];
"1000697" -> "1000700"  [label="DDG: "];
"1000712" -> "1000700"  [label="DDG: "];
"1000734" -> "1000700"  [label="DDG: "];
"1000700" -> "1000712"  [label="DDG: "];
"1000700" -> "1000721"  [label="DDG: "];
"1000712" -> "1000708"  [label="AST: "];
"1000712" -> "1000714"  [label="CFG: "];
"1000713" -> "1000712"  [label="AST: "];
"1000714" -> "1000712"  [label="AST: "];
"1000726" -> "1000712"  [label="CFG: "];
"1000735" -> "1000712"  [label="CFG: "];
"1000712" -> "1000749"  [label="DDG: "];
"1000712" -> "1000749"  [label="DDG: "];
"1000712" -> "1000749"  [label="DDG: "];
"1000709" -> "1000712"  [label="DDG: "];
"1000717" -> "1000712"  [label="DDG: "];
"1000712" -> "1000717"  [label="DDG: "];
"1000712" -> "1000734"  [label="DDG: "];
"1000712" -> "1000734"  [label="DDG: "];
"1000717" -> "1000708"  [label="AST: "];
"1000717" -> "1000718"  [label="CFG: "];
"1000718" -> "1000717"  [label="AST: "];
"1000713" -> "1000717"  [label="CFG: "];
"1000734" -> "1000733"  [label="AST: "];
"1000734" -> "1000736"  [label="CFG: "];
"1000735" -> "1000734"  [label="AST: "];
"1000736" -> "1000734"  [label="AST: "];
"1000740" -> "1000734"  [label="CFG: "];
"1000706" -> "1000734"  [label="CFG: "];
"1000734" -> "1000749"  [label="DDG: "];
"1000734" -> "1000749"  [label="DDG: "];
"1000721" -> "1000720"  [label="AST: "];
"1000721" -> "1000731"  [label="CFG: "];
"1000722" -> "1000721"  [label="AST: "];
"1000731" -> "1000721"  [label="AST: "];
"1000732" -> "1000721"  [label="CFG: "];
"1000718" -> "1000721"  [label="CFG: "];
"1000721" -> "1000749"  [label="DDG: "];
"1000721" -> "1000749"  [label="DDG: "];
"1000721" -> "1000749"  [label="DDG: "];
}
