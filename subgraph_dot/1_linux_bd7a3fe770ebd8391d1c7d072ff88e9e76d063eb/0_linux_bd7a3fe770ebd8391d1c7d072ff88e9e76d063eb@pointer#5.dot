digraph "0_linux_bd7a3fe770ebd8391d1c7d072ff88e9e76d063eb@pointer" {
"1000177" [label="(Call,dev_err(ddev, \"invalid descriptor for config index %d: \"\n\t\t    \"type = 0x%X, length = %d\n\", cfgidx,\n\t\t    config->desc.bDescriptorType, config->desc.bLength))"];
"1000117" [label="(Call,*ddev = &dev->dev)"];
"1000111" [label="(MethodParameterIn,int cfgidx)"];
"1000154" [label="(Call,config->desc.bDescriptorType != USB_DT_CONFIG)"];
"1000169" [label="(Call,config->desc.bLength > size)"];
"1000162" [label="(Call,config->desc.bLength < USB_DT_CONFIG_SIZE)"];
"1000145" [label="(Call,memcpy(&config->desc, buffer, USB_DT_CONFIG_SIZE))"];
"1000113" [label="(MethodParameterIn,unsigned char *buffer)"];
"1000114" [label="(MethodParameterIn,int size)"];
"1000150" [label="(Identifier,buffer)"];
"1000124" [label="(Call,*buffer0 = buffer)"];
"1000176" [label="(Block,)"];
"1000649" [label="(Call,size -= i)"];
"1000460" [label="(Call,dev_warn(ddev, \"config %d contains an unexpected \"\n\t\t\t    \"descriptor of type 0x%X, skipping\n\",\n\t\t\t    cfgno, header->bDescriptorType))"];
"1000201" [label="(Call,buffer += config->desc.bLength)"];
"1000162" [label="(Call,config->desc.bLength < USB_DT_CONFIG_SIZE)"];
"1000153" [label="(Call,config->desc.bDescriptorType != USB_DT_CONFIG ||\n\t    config->desc.bLength < USB_DT_CONFIG_SIZE ||\n\t    config->desc.bLength > size)"];
"1000193" [label="(Identifier,EINVAL)"];
"1000430" [label="(Call,dev_warn(ddev, \"found more Interface \"\n \t\t\t\t\t       \"Association Descriptors \"\n \t\t\t\t\t       \"than allocated for in \"\n \t\t\t\t\t       \"configuration %d\n\", cfgno))"];
"1000160" [label="(Identifier,USB_DT_CONFIG)"];
"1000151" [label="(Identifier,USB_DT_CONFIG_SIZE)"];
"1000146" [label="(Call,&config->desc)"];
"1000616" [label="(Call,config->extra = buffer)"];
"1000467" [label="(Call,size = buffer2 - buffer)"];
"1000659" [label="(Call,usb_parse_interface(ddev, cfgno, config,\n\t\t    buffer, size, inums, nalts))"];
"1000349" [label="(Call,dev_warn(ddev, \"config %d has more interface \"\n\t\t\t\t    \"descriptors, than it declares in \"\n\t\t\t\t    \"bNumInterfaces, ignoring interface \"\n\t\t\t\t    \"number: %d\n\", cfgno, inum))"];
"1000208" [label="(Call,size -= config->desc.bLength)"];
"1000165" [label="(Identifier,config)"];
"1000676" [label="(Call,size -= retval)"];
"1000180" [label="(Identifier,cfgidx)"];
"1000229" [label="(Call,dev_warn(ddev, \"config %d has too many interfaces: %d, \"\n\t\t    \"using maximum allowed: %d\n\",\n\t\t    cfgno, nintf, USB_MAXINTERFACES))"];
"1000543" [label="(Call,dev_warn(ddev, \"config %d has no interface number \"\n\t\t\t    \"%d\n\", cfgno, i))"];
"1000118" [label="(Identifier,ddev)"];
"1000177" [label="(Call,dev_err(ddev, \"invalid descriptor for config index %d: \"\n\t\t    \"type = 0x%X, length = %d\n\", cfgidx,\n\t\t    config->desc.bDescriptorType, config->desc.bLength))"];
"1000175" [label="(Identifier,size)"];
"1000178" [label="(Identifier,ddev)"];
"1000119" [label="(Call,&dev->dev)"];
"1000243" [label="(Call,buffer2 = buffer)"];
"1000157" [label="(Identifier,config)"];
"1000296" [label="(Call,dev_warn(ddev, \"config %d has an invalid descriptor \"\n\t\t\t    \"of length %d, skipping remainder of the config\n\",\n\t\t\t    cfgno, header->bLength))"];
"1000125" [label="(Identifier,buffer0)"];
"1000270" [label="(Call,dev_warn(ddev, \"config %d descriptor has %d excess \"\n\t\t\t    \"byte%s, ignoring\n\",\n\t\t\t    cfgno, size2, plural(size2)))"];
"1000114" [label="(MethodParameterIn,int size)"];
"1000170" [label="(Call,config->desc.bLength)"];
"1000161" [label="(Call,config->desc.bLength < USB_DT_CONFIG_SIZE ||\n\t    config->desc.bLength > size)"];
"1000186" [label="(Call,config->desc.bLength)"];
"1000163" [label="(Call,config->desc.bLength)"];
"1000115" [label="(Block,)"];
"1000499" [label="(Call,dev_warn(ddev, \"config %d has no interfaces?\n\", cfgno))"];
"1000646" [label="(Call,buffer += i)"];
"1000168" [label="(Identifier,USB_DT_CONFIG_SIZE)"];
"1000673" [label="(Call,buffer += retval)"];
"1000359" [label="(Call,dev_warn(ddev, \"config %d has an invalid \"\n\t\t\t\t    \"interface number: %d but max is %d\n\",\n\t\t\t\t    cfgno, inum, nintf_orig - 1))"];
"1000639" [label="(Call,dev_dbg(ddev, \"skipped %d descriptor%s after %s\n\",\n\t\t    n, plural(n), \"configuration\"))"];
"1000469" [label="(Call,buffer2 - buffer)"];
"1000155" [label="(Call,config->desc.bDescriptorType)"];
"1000623" [label="(Call,find_next_descriptor(buffer, size, USB_DT_INTERFACE,\n\t    USB_DT_INTERFACE, &n))"];
"1000179" [label="(Literal,\"invalid descriptor for config index %d: \"\n\t\t    \"type = 0x%X, length = %d\n\")"];
"1000749" [label="(MethodReturn,static int)"];
"1000486" [label="(Call,dev_warn(ddev, \"config %d has %d interface%s, different from \"\n\t\t    \"the descriptor's value: %d\n\",\n\t\t    cfgno, n, plural(n), nintf_orig))"];
"1000111" [label="(MethodParameterIn,int cfgidx)"];
"1000113" [label="(MethodParameterIn,unsigned char *buffer)"];
"1000568" [label="(Call,dev_warn(ddev, \"too many alternate settings for \"\n\t\t\t    \"config %d interface %d: %d, \"\n\t\t\t    \"using maximum allowed: %d\n\",\n\t\t\t    cfgno, inums[i], j, USB_MAXALTSETTING))"];
"1000455" [label="(Call,header->bDescriptorType == USB_DT_CONFIG)"];
"1000169" [label="(Call,config->desc.bLength > size)"];
"1000154" [label="(Call,config->desc.bDescriptorType != USB_DT_CONFIG)"];
"1000172" [label="(Identifier,config)"];
"1000145" [label="(Call,memcpy(&config->desc, buffer, USB_DT_CONFIG_SIZE))"];
"1000246" [label="(Call,size2 = size)"];
"1000117" [label="(Call,*ddev = &dev->dev)"];
"1000325" [label="(Call,dev_warn(ddev, \"config %d has an invalid \"\n\t\t\t\t    \"interface descriptor of length %d, \"\n\t\t\t\t    \"skipping\n\", cfgno, d->bLength))"];
"1000653" [label="(Call,size > 0)"];
"1000181" [label="(Call,config->desc.bDescriptorType)"];
"1000739" [label="(Call,dev_warn(ddev, \"config %d interface %d has no \"\n\t\t\t\t    \"altsetting %d\n\", cfgno, inums[i], j))"];
"1000177" -> "1000176"  [label="AST: "];
"1000177" -> "1000186"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000179" -> "1000177"  [label="AST: "];
"1000180" -> "1000177"  [label="AST: "];
"1000181" -> "1000177"  [label="AST: "];
"1000186" -> "1000177"  [label="AST: "];
"1000193" -> "1000177"  [label="CFG: "];
"1000177" -> "1000749"  [label="DDG: "];
"1000177" -> "1000749"  [label="DDG: "];
"1000177" -> "1000749"  [label="DDG: "];
"1000177" -> "1000749"  [label="DDG: "];
"1000177" -> "1000749"  [label="DDG: "];
"1000117" -> "1000177"  [label="DDG: "];
"1000111" -> "1000177"  [label="DDG: "];
"1000154" -> "1000177"  [label="DDG: "];
"1000169" -> "1000177"  [label="DDG: "];
"1000162" -> "1000177"  [label="DDG: "];
"1000117" -> "1000115"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000125" -> "1000117"  [label="CFG: "];
"1000117" -> "1000749"  [label="DDG: "];
"1000117" -> "1000749"  [label="DDG: "];
"1000117" -> "1000229"  [label="DDG: "];
"1000117" -> "1000270"  [label="DDG: "];
"1000117" -> "1000296"  [label="DDG: "];
"1000117" -> "1000325"  [label="DDG: "];
"1000117" -> "1000349"  [label="DDG: "];
"1000117" -> "1000359"  [label="DDG: "];
"1000117" -> "1000430"  [label="DDG: "];
"1000117" -> "1000460"  [label="DDG: "];
"1000117" -> "1000486"  [label="DDG: "];
"1000117" -> "1000499"  [label="DDG: "];
"1000117" -> "1000543"  [label="DDG: "];
"1000117" -> "1000568"  [label="DDG: "];
"1000117" -> "1000639"  [label="DDG: "];
"1000117" -> "1000659"  [label="DDG: "];
"1000117" -> "1000739"  [label="DDG: "];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000749"  [label="DDG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000154" -> "1000160"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000160" -> "1000154"  [label="AST: "];
"1000165" -> "1000154"  [label="CFG: "];
"1000153" -> "1000154"  [label="CFG: "];
"1000154" -> "1000749"  [label="DDG: "];
"1000154" -> "1000749"  [label="DDG: "];
"1000154" -> "1000153"  [label="DDG: "];
"1000154" -> "1000153"  [label="DDG: "];
"1000154" -> "1000455"  [label="DDG: "];
"1000169" -> "1000161"  [label="AST: "];
"1000169" -> "1000175"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000175" -> "1000169"  [label="AST: "];
"1000161" -> "1000169"  [label="CFG: "];
"1000169" -> "1000749"  [label="DDG: "];
"1000169" -> "1000161"  [label="DDG: "];
"1000169" -> "1000161"  [label="DDG: "];
"1000162" -> "1000169"  [label="DDG: "];
"1000114" -> "1000169"  [label="DDG: "];
"1000169" -> "1000201"  [label="DDG: "];
"1000169" -> "1000208"  [label="DDG: "];
"1000169" -> "1000208"  [label="DDG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000162" -> "1000168"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000168" -> "1000162"  [label="AST: "];
"1000172" -> "1000162"  [label="CFG: "];
"1000161" -> "1000162"  [label="CFG: "];
"1000162" -> "1000749"  [label="DDG: "];
"1000162" -> "1000161"  [label="DDG: "];
"1000162" -> "1000161"  [label="DDG: "];
"1000145" -> "1000162"  [label="DDG: "];
"1000162" -> "1000201"  [label="DDG: "];
"1000162" -> "1000208"  [label="DDG: "];
"1000145" -> "1000115"  [label="AST: "];
"1000145" -> "1000151"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000150" -> "1000145"  [label="AST: "];
"1000151" -> "1000145"  [label="AST: "];
"1000157" -> "1000145"  [label="CFG: "];
"1000145" -> "1000749"  [label="DDG: "];
"1000145" -> "1000749"  [label="DDG: "];
"1000145" -> "1000749"  [label="DDG: "];
"1000145" -> "1000749"  [label="DDG: "];
"1000113" -> "1000145"  [label="DDG: "];
"1000145" -> "1000201"  [label="DDG: "];
"1000113" -> "1000109"  [label="AST: "];
"1000113" -> "1000749"  [label="DDG: "];
"1000113" -> "1000124"  [label="DDG: "];
"1000113" -> "1000201"  [label="DDG: "];
"1000113" -> "1000243"  [label="DDG: "];
"1000113" -> "1000469"  [label="DDG: "];
"1000113" -> "1000616"  [label="DDG: "];
"1000113" -> "1000623"  [label="DDG: "];
"1000113" -> "1000646"  [label="DDG: "];
"1000113" -> "1000659"  [label="DDG: "];
"1000113" -> "1000673"  [label="DDG: "];
"1000114" -> "1000109"  [label="AST: "];
"1000114" -> "1000749"  [label="DDG: "];
"1000114" -> "1000208"  [label="DDG: "];
"1000114" -> "1000246"  [label="DDG: "];
"1000114" -> "1000467"  [label="DDG: "];
"1000114" -> "1000623"  [label="DDG: "];
"1000114" -> "1000649"  [label="DDG: "];
"1000114" -> "1000653"  [label="DDG: "];
"1000114" -> "1000659"  [label="DDG: "];
"1000114" -> "1000676"  [label="DDG: "];
}
