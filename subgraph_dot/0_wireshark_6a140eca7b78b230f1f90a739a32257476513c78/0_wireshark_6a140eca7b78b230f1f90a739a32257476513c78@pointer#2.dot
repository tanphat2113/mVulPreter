digraph "0_wireshark_6a140eca7b78b230f1f90a739a32257476513c78@pointer" {
"1000174" [label="(Call,*data_offset = offset)"];
"1000119" [label="(Call,offset < 0)"];
"1000111" [label="(Call,offset = netscreen_seek_next_packet(wth, err, err_info, line))"];
"1000113" [label="(Call,netscreen_seek_next_packet(wth, err, err_info, line))"];
"1000104" [label="(MethodParameterIn,wtap *wth)"];
"1000105" [label="(MethodParameterIn,int *err)"];
"1000106" [label="(MethodParameterIn,gchar **err_info)"];
"1000128" [label="(Identifier,wth)"];
"1000175" [label="(Call,*data_offset)"];
"1000112" [label="(Identifier,offset)"];
"1000177" [label="(Identifier,offset)"];
"1000126" [label="(Call,parse_netscreen_packet(wth->fh, &wth->phdr,\n\t    wth->frame_buffer, line, err, err_info))"];
"1000115" [label="(Identifier,err)"];
"1000116" [label="(Identifier,err_info)"];
"1000114" [label="(Identifier,wth)"];
"1000118" [label="(ControlStructure,if (offset < 0))"];
"1000113" [label="(Call,netscreen_seek_next_packet(wth, err, err_info, line))"];
"1000104" [label="(MethodParameterIn,wtap *wth)"];
"1000111" [label="(Call,offset = netscreen_seek_next_packet(wth, err, err_info, line))"];
"1000121" [label="(Literal,0)"];
"1000119" [label="(Call,offset < 0)"];
"1000123" [label="(Identifier,FALSE)"];
"1000120" [label="(Identifier,offset)"];
"1000117" [label="(Identifier,line)"];
"1000174" [label="(Call,*data_offset = offset)"];
"1000105" [label="(MethodParameterIn,int *err)"];
"1000180" [label="(MethodReturn,static gboolean)"];
"1000106" [label="(MethodParameterIn,gchar **err_info)"];
"1000179" [label="(Identifier,TRUE)"];
"1000108" [label="(Block,)"];
"1000174" -> "1000108"  [label="AST: "];
"1000174" -> "1000177"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000177" -> "1000174"  [label="AST: "];
"1000179" -> "1000174"  [label="CFG: "];
"1000174" -> "1000180"  [label="DDG: offset"];
"1000174" -> "1000180"  [label="DDG: *data_offset"];
"1000119" -> "1000174"  [label="DDG: offset"];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000123" -> "1000119"  [label="CFG: "];
"1000128" -> "1000119"  [label="CFG: "];
"1000119" -> "1000180"  [label="DDG: offset < 0"];
"1000119" -> "1000180"  [label="DDG: offset"];
"1000111" -> "1000119"  [label="DDG: offset"];
"1000111" -> "1000108"  [label="AST: "];
"1000111" -> "1000113"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000113" -> "1000111"  [label="AST: "];
"1000120" -> "1000111"  [label="CFG: "];
"1000111" -> "1000180"  [label="DDG: netscreen_seek_next_packet(wth, err, err_info, line)"];
"1000113" -> "1000111"  [label="DDG: wth"];
"1000113" -> "1000111"  [label="DDG: err"];
"1000113" -> "1000111"  [label="DDG: err_info"];
"1000113" -> "1000111"  [label="DDG: line"];
"1000113" -> "1000117"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000116" -> "1000113"  [label="AST: "];
"1000117" -> "1000113"  [label="AST: "];
"1000113" -> "1000180"  [label="DDG: line"];
"1000113" -> "1000180"  [label="DDG: err"];
"1000113" -> "1000180"  [label="DDG: wth"];
"1000113" -> "1000180"  [label="DDG: err_info"];
"1000104" -> "1000113"  [label="DDG: wth"];
"1000105" -> "1000113"  [label="DDG: err"];
"1000106" -> "1000113"  [label="DDG: err_info"];
"1000113" -> "1000126"  [label="DDG: line"];
"1000113" -> "1000126"  [label="DDG: err"];
"1000113" -> "1000126"  [label="DDG: err_info"];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000180"  [label="DDG: wth"];
"1000105" -> "1000103"  [label="AST: "];
"1000105" -> "1000180"  [label="DDG: err"];
"1000105" -> "1000126"  [label="DDG: err"];
"1000106" -> "1000103"  [label="AST: "];
"1000106" -> "1000180"  [label="DDG: err_info"];
"1000106" -> "1000126"  [label="DDG: err_info"];
}
