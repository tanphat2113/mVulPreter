digraph "0_Chrome_0d151e09e13a704e9738ea913d117df7282e6c7d_1@API" {
"1000121" [label="(Call,strcmp(argv[1], \"--color-correct\") == 0)"];
"1000104" [label="(MethodParameterIn,char* argv[])"];
"1000117" [label="(Call,argc >= 2 && strcmp(argv[1], \"--color-correct\") == 0)"];
"1000312" [label="(MethodReturn,int)"];
"1000134" [label="(Call,++argv)"];
"1000163" [label="(Call,strtol(argv[2], &end, 10))"];
"1000116" [label="(ControlStructure,if (argc >= 2 && strcmp(argv[1], \"--color-correct\") == 0))"];
"1000117" [label="(Call,argc >= 2 && strcmp(argv[1], \"--color-correct\") == 0)"];
"1000122" [label="(Call,strcmp(argv[1], \"--color-correct\"))"];
"1000129" [label="(Identifier,applyColorCorrection)"];
"1000107" [label="(Call,* name = argv[0])"];
"1000121" [label="(Call,strcmp(argv[1], \"--color-correct\") == 0)"];
"1000179" [label="(Call,fprintf(stderr, \"Second argument should be number of iterations. \"\n                \"The default is 1. You supplied %s\n\", argv[2]))"];
"1000290" [label="(Call,fprintf(stderr, \"Image decode failed [%s]\n\", argv[1]))"];
"1000202" [label="(Call,strtol(argv[3], &end, 10))"];
"1000231" [label="(Call,readFile(argv[1]))"];
"1000139" [label="(Identifier,argc)"];
"1000104" [label="(MethodParameterIn,char* argv[])"];
"1000242" [label="(Call,fprintf(stderr, \"Error reading image data from [%s]\n\", argv[1]))"];
"1000215" [label="(Call,fprintf(stderr, \"Third argument should be packet size. Default is \"\n                \"0, meaning to decode the entire image in one packet. You \"\n                \"supplied %s\n\", argv[3]))"];
"1000127" [label="(Literal,0)"];
"1000118" [label="(Call,argc >= 2)"];
"1000121" -> "1000117"  [label="AST: "];
"1000121" -> "1000127"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000127" -> "1000121"  [label="AST: "];
"1000117" -> "1000121"  [label="CFG: "];
"1000121" -> "1000312"  [label="DDG: "];
"1000121" -> "1000117"  [label="DDG: "];
"1000121" -> "1000117"  [label="DDG: "];
"1000104" -> "1000121"  [label="DDG: "];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1000312"  [label="DDG: "];
"1000104" -> "1000107"  [label="DDG: "];
"1000104" -> "1000122"  [label="DDG: "];
"1000104" -> "1000134"  [label="DDG: "];
"1000104" -> "1000163"  [label="DDG: "];
"1000104" -> "1000179"  [label="DDG: "];
"1000104" -> "1000202"  [label="DDG: "];
"1000104" -> "1000215"  [label="DDG: "];
"1000104" -> "1000231"  [label="DDG: "];
"1000104" -> "1000242"  [label="DDG: "];
"1000104" -> "1000290"  [label="DDG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000129" -> "1000117"  [label="CFG: "];
"1000139" -> "1000117"  [label="CFG: "];
"1000117" -> "1000312"  [label="DDG: "];
"1000117" -> "1000312"  [label="DDG: "];
"1000117" -> "1000312"  [label="DDG: "];
"1000118" -> "1000117"  [label="DDG: "];
"1000118" -> "1000117"  [label="DDG: "];
}
