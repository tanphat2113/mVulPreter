digraph "0_Chrome_7614790c80996d32a28218f4d1605b0908e9ddf6@pointer" {
"1000263" [label="(Call,url_request_util::AllowCrossRendererResourceLoadHelper(\n          is_guest, target_extension, owner_extension, partition_id, url.path(),\n          navigation_handle()->GetPageTransition(), &allowed))"];
"1000249" [label="(Call,is_guest = WebViewGuest::GetGuestPartitionConfigForSite(\n          navigation_handle()->GetStartingSiteInstance()->GetSiteURL(),\n          &partition_domain, &partition_id, &in_memory))"];
"1000251" [label="(Call,WebViewGuest::GetGuestPartitionConfigForSite(\n          navigation_handle()->GetStartingSiteInstance()->GetSiteURL(),\n          &partition_domain, &partition_id, &in_memory))"];
"1000164" [label="(Call,!target_extension)"];
"1000141" [label="(Call,target_extension =\n        registry->enabled_extensions().GetExtensionOrAppByURL(url))"];
"1000143" [label="(Call,registry->enabled_extensions().GetExtensionOrAppByURL(url))"];
"1000132" [label="(Call,url::Origin::Create(url))"];
"1000121" [label="(Call,& url = navigation_handle()->GetURL())"];
"1000155" [label="(Call,target_extension =\n        registry->enabled_extensions().GetByID(target_origin.host()))"];
"1000157" [label="(Call,registry->enabled_extensions().GetByID(target_origin.host()))"];
"1000238" [label="(Call,* owner_extension =\n          registry->enabled_extensions().GetByID(owner_extension_id))"];
"1000240" [label="(Call,registry->enabled_extensions().GetByID(owner_extension_id))"];
"1000234" [label="(Call,& owner_extension_id = guest->owner_host())"];
"1000348" [label="(MethodReturn,RET)"];
"1000326" [label="(Call,WebAccessibleResourcesInfo::IsResourceWebAccessible(target_extension,\n                                                             url.path()))"];
"1000126" [label="(Identifier,url_has_extension_scheme)"];
"1000250" [label="(Identifier,is_guest)"];
"1000122" [label="(Identifier,url)"];
"1000267" [label="(Identifier,partition_id)"];
"1000246" [label="(Identifier,in_memory)"];
"1000257" [label="(Call,&in_memory)"];
"1000232" [label="(Block,)"];
"1000252" [label="(Call,navigation_handle()->GetStartingSiteInstance()->GetSiteURL())"];
"1000143" [label="(Call,registry->enabled_extensions().GetExtensionOrAppByURL(url))"];
"1000270" [label="(Call,&allowed)"];
"1000130" [label="(Call,target_origin = url::Origin::Create(url))"];
"1000249" [label="(Call,is_guest = WebViewGuest::GetGuestPartitionConfigForSite(\n          navigation_handle()->GetStartingSiteInstance()->GetSiteURL(),\n          &partition_domain, &partition_id, &in_memory))"];
"1000155" [label="(Call,target_extension =\n        registry->enabled_extensions().GetByID(target_origin.host()))"];
"1000157" [label="(Call,registry->enabled_extensions().GetByID(target_origin.host()))"];
"1000141" [label="(Call,target_extension =\n        registry->enabled_extensions().GetExtensionOrAppByURL(url))"];
"1000140" [label="(Block,)"];
"1000165" [label="(Identifier,target_extension)"];
"1000251" [label="(Call,WebViewGuest::GetGuestPartitionConfigForSite(\n          navigation_handle()->GetStartingSiteInstance()->GetSiteURL(),\n          &partition_domain, &partition_id, &in_memory))"];
"1000142" [label="(Identifier,target_extension)"];
"1000164" [label="(Call,!target_extension)"];
"1000156" [label="(Identifier,target_extension)"];
"1000108" [label="(Block,)"];
"1000264" [label="(Identifier,is_guest)"];
"1000133" [label="(Identifier,url)"];
"1000240" [label="(Call,registry->enabled_extensions().GetByID(owner_extension_id))"];
"1000266" [label="(Identifier,owner_extension)"];
"1000265" [label="(Identifier,target_extension)"];
"1000255" [label="(Call,&partition_id)"];
"1000168" [label="(Identifier,content::NavigationThrottle::BLOCK_REQUEST)"];
"1000163" [label="(ControlStructure,if (!target_extension))"];
"1000235" [label="(Identifier,owner_extension_id)"];
"1000269" [label="(Call,navigation_handle()->GetPageTransition())"];
"1000241" [label="(Identifier,owner_extension_id)"];
"1000253" [label="(Call,&partition_domain)"];
"1000238" [label="(Call,* owner_extension =\n          registry->enabled_extensions().GetByID(owner_extension_id))"];
"1000268" [label="(Call,url.path())"];
"1000263" [label="(Call,url_request_util::AllowCrossRendererResourceLoadHelper(\n          is_guest, target_extension, owner_extension, partition_id, url.path(),\n          navigation_handle()->GetPageTransition(), &allowed))"];
"1000274" [label="(Identifier,allowed)"];
"1000170" [label="(Call,target_extension->is_hosted_app())"];
"1000261" [label="(Identifier,allowed)"];
"1000132" [label="(Call,url::Origin::Create(url))"];
"1000234" [label="(Call,& owner_extension_id = guest->owner_host())"];
"1000150" [label="(Block,)"];
"1000158" [label="(Call,target_origin.host())"];
"1000236" [label="(Call,guest->owner_host())"];
"1000121" [label="(Call,& url = navigation_handle()->GetURL())"];
"1000239" [label="(Identifier,owner_extension)"];
"1000123" [label="(Call,navigation_handle()->GetURL())"];
"1000144" [label="(Identifier,url)"];
"1000263" -> "1000232"  [label="AST: "];
"1000263" -> "1000270"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000263"  [label="AST: "];
"1000266" -> "1000263"  [label="AST: "];
"1000267" -> "1000263"  [label="AST: "];
"1000268" -> "1000263"  [label="AST: "];
"1000269" -> "1000263"  [label="AST: "];
"1000270" -> "1000263"  [label="AST: "];
"1000274" -> "1000263"  [label="CFG: "];
"1000263" -> "1000348"  [label="DDG: navigation_handle()->GetPageTransition()"];
"1000263" -> "1000348"  [label="DDG: target_extension"];
"1000263" -> "1000348"  [label="DDG: partition_id"];
"1000263" -> "1000348"  [label="DDG: url.path()"];
"1000263" -> "1000348"  [label="DDG: url_request_util::AllowCrossRendererResourceLoadHelper(\n          is_guest, target_extension, owner_extension, partition_id, url.path(),\n          navigation_handle()->GetPageTransition(), &allowed)"];
"1000263" -> "1000348"  [label="DDG: is_guest"];
"1000263" -> "1000348"  [label="DDG: owner_extension"];
"1000263" -> "1000348"  [label="DDG: &allowed"];
"1000249" -> "1000263"  [label="DDG: is_guest"];
"1000164" -> "1000263"  [label="DDG: target_extension"];
"1000238" -> "1000263"  [label="DDG: owner_extension"];
"1000249" -> "1000232"  [label="AST: "];
"1000249" -> "1000251"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000251" -> "1000249"  [label="AST: "];
"1000261" -> "1000249"  [label="CFG: "];
"1000249" -> "1000348"  [label="DDG: WebViewGuest::GetGuestPartitionConfigForSite(\n          navigation_handle()->GetStartingSiteInstance()->GetSiteURL(),\n          &partition_domain, &partition_id, &in_memory)"];
"1000251" -> "1000249"  [label="DDG: navigation_handle()->GetStartingSiteInstance()->GetSiteURL()"];
"1000251" -> "1000249"  [label="DDG: &partition_domain"];
"1000251" -> "1000249"  [label="DDG: &partition_id"];
"1000251" -> "1000249"  [label="DDG: &in_memory"];
"1000251" -> "1000257"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="AST: "];
"1000255" -> "1000251"  [label="AST: "];
"1000257" -> "1000251"  [label="AST: "];
"1000251" -> "1000348"  [label="DDG: &partition_domain"];
"1000251" -> "1000348"  [label="DDG: &partition_id"];
"1000251" -> "1000348"  [label="DDG: navigation_handle()->GetStartingSiteInstance()->GetSiteURL()"];
"1000251" -> "1000348"  [label="DDG: &in_memory"];
"1000164" -> "1000163"  [label="AST: "];
"1000164" -> "1000165"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000168" -> "1000164"  [label="CFG: "];
"1000170" -> "1000164"  [label="CFG: "];
"1000164" -> "1000348"  [label="DDG: !target_extension"];
"1000164" -> "1000348"  [label="DDG: target_extension"];
"1000141" -> "1000164"  [label="DDG: target_extension"];
"1000155" -> "1000164"  [label="DDG: target_extension"];
"1000164" -> "1000326"  [label="DDG: target_extension"];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000165" -> "1000141"  [label="CFG: "];
"1000141" -> "1000348"  [label="DDG: registry->enabled_extensions().GetExtensionOrAppByURL(url)"];
"1000143" -> "1000141"  [label="DDG: url"];
"1000143" -> "1000144"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000143" -> "1000348"  [label="DDG: url"];
"1000132" -> "1000143"  [label="DDG: url"];
"1000132" -> "1000130"  [label="AST: "];
"1000132" -> "1000133"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000132" -> "1000348"  [label="DDG: url"];
"1000132" -> "1000130"  [label="DDG: url"];
"1000121" -> "1000132"  [label="DDG: url"];
"1000121" -> "1000108"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000126" -> "1000121"  [label="CFG: "];
"1000121" -> "1000348"  [label="DDG: navigation_handle()->GetURL()"];
"1000155" -> "1000150"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000157" -> "1000155"  [label="AST: "];
"1000165" -> "1000155"  [label="CFG: "];
"1000155" -> "1000348"  [label="DDG: registry->enabled_extensions().GetByID(target_origin.host())"];
"1000157" -> "1000155"  [label="DDG: target_origin.host()"];
"1000157" -> "1000158"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000157" -> "1000348"  [label="DDG: target_origin.host()"];
"1000238" -> "1000232"  [label="AST: "];
"1000238" -> "1000240"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="AST: "];
"1000246" -> "1000238"  [label="CFG: "];
"1000238" -> "1000348"  [label="DDG: registry->enabled_extensions().GetByID(owner_extension_id)"];
"1000240" -> "1000238"  [label="DDG: owner_extension_id"];
"1000240" -> "1000241"  [label="CFG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000240" -> "1000348"  [label="DDG: owner_extension_id"];
"1000234" -> "1000240"  [label="DDG: owner_extension_id"];
"1000234" -> "1000232"  [label="AST: "];
"1000234" -> "1000236"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000236" -> "1000234"  [label="AST: "];
"1000239" -> "1000234"  [label="CFG: "];
"1000234" -> "1000348"  [label="DDG: guest->owner_host()"];
}
