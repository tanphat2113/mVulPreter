digraph "0_Chrome_96dbafe288dbe2f0cc45fa3c39daf6d0c37acbab_26@pointer" {
"1000459" [label="(Call,query = xmlStrcat(query, comp->pattern))"];
"1000461" [label="(Call,xmlStrcat(query, comp->pattern))"];
"1000453" [label="(Call,query = xmlStrdup((const xmlChar *)\"//\"))"];
"1000455" [label="(Call,xmlStrdup((const xmlChar *)\"//\"))"];
"1000456" [label="(Call,(const xmlChar *)\"//\")"];
"1000444" [label="(Call,comp->pattern[0] != '/')"];
"1000472" [label="(Call,comp->pattern = query)"];
"1000472" [label="(Call,comp->pattern = query)"];
"1000476" [label="(Identifier,query)"];
"1000458" [label="(Literal,\"//\")"];
"1000460" [label="(Identifier,query)"];
"1000478" [label="(MethodReturn,RET)"];
"1000467" [label="(Call,(xmlChar *) comp->pattern)"];
"1000450" [label="(Literal,'/')"];
"1000443" [label="(ControlStructure,if (comp->pattern[0] != '/'))"];
"1000451" [label="(Block,)"];
"1000462" [label="(Identifier,query)"];
"1000461" [label="(Call,xmlStrcat(query, comp->pattern))"];
"1000463" [label="(Call,comp->pattern)"];
"1000453" [label="(Call,query = xmlStrdup((const xmlChar *)\"//\"))"];
"1000444" [label="(Call,comp->pattern[0] != '/')"];
"1000454" [label="(Identifier,query)"];
"1000477" [label="(ControlStructure,break;)"];
"1000473" [label="(Call,comp->pattern)"];
"1000455" [label="(Call,xmlStrdup((const xmlChar *)\"//\"))"];
"1000445" [label="(Call,comp->pattern[0])"];
"1000459" [label="(Call,query = xmlStrcat(query, comp->pattern))"];
"1000456" [label="(Call,(const xmlChar *)\"//\")"];
"1000459" -> "1000451"  [label="AST: "];
"1000459" -> "1000461"  [label="CFG: "];
"1000460" -> "1000459"  [label="AST: "];
"1000461" -> "1000459"  [label="AST: "];
"1000468" -> "1000459"  [label="CFG: "];
"1000459" -> "1000478"  [label="DDG: "];
"1000461" -> "1000459"  [label="DDG: "];
"1000461" -> "1000459"  [label="DDG: "];
"1000459" -> "1000472"  [label="DDG: "];
"1000461" -> "1000463"  [label="CFG: "];
"1000462" -> "1000461"  [label="AST: "];
"1000463" -> "1000461"  [label="AST: "];
"1000453" -> "1000461"  [label="DDG: "];
"1000444" -> "1000461"  [label="DDG: "];
"1000461" -> "1000467"  [label="DDG: "];
"1000453" -> "1000451"  [label="AST: "];
"1000453" -> "1000455"  [label="CFG: "];
"1000454" -> "1000453"  [label="AST: "];
"1000455" -> "1000453"  [label="AST: "];
"1000460" -> "1000453"  [label="CFG: "];
"1000453" -> "1000478"  [label="DDG: "];
"1000455" -> "1000453"  [label="DDG: "];
"1000455" -> "1000456"  [label="CFG: "];
"1000456" -> "1000455"  [label="AST: "];
"1000455" -> "1000478"  [label="DDG: "];
"1000456" -> "1000455"  [label="DDG: "];
"1000456" -> "1000458"  [label="CFG: "];
"1000457" -> "1000456"  [label="AST: "];
"1000458" -> "1000456"  [label="AST: "];
"1000444" -> "1000443"  [label="AST: "];
"1000444" -> "1000450"  [label="CFG: "];
"1000445" -> "1000444"  [label="AST: "];
"1000450" -> "1000444"  [label="AST: "];
"1000454" -> "1000444"  [label="CFG: "];
"1000477" -> "1000444"  [label="CFG: "];
"1000444" -> "1000478"  [label="DDG: "];
"1000444" -> "1000478"  [label="DDG: "];
"1000444" -> "1000467"  [label="DDG: "];
"1000472" -> "1000451"  [label="AST: "];
"1000472" -> "1000476"  [label="CFG: "];
"1000473" -> "1000472"  [label="AST: "];
"1000476" -> "1000472"  [label="AST: "];
"1000477" -> "1000472"  [label="CFG: "];
"1000472" -> "1000478"  [label="DDG: "];
"1000472" -> "1000478"  [label="DDG: "];
}
