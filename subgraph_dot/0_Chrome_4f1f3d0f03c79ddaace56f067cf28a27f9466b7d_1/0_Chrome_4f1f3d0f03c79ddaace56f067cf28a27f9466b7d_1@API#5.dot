digraph "0_Chrome_4f1f3d0f03c79ddaace56f067cf28a27f9466b7d_1@API" {
"1000184" [label="(Call,create.AddNumberMatch(IF, OpenFile::OPTIONS, FILE_DIRECTORY_FILE, AND))"];
"1000179" [label="(Call,open.AddNumberMatch(IF, OpenFile::OPTIONS, FILE_DIRECTORY_FILE, AND))"];
"1000254" [label="(Call,create.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE))"];
"1000253" [label="(Call,!create.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE))"];
"1000252" [label="(Call,!create.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTCREATEFILE_TAG, &create))"];
"1000248" [label="(Call,(rule_to_add & kCallNtCreateFile) &&\n      (!create.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTCREATEFILE_TAG, &create)))"];
"1000274" [label="(Call,open.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE))"];
"1000273" [label="(Call,!open.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE))"];
"1000272" [label="(Call,!open.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTOPENFILE_TAG, &open))"];
"1000268" [label="(Call,(rule_to_add & kCallNtOpenFile) &&\n      (!open.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTOPENFILE_TAG, &open)))"];
"1000294" [label="(Call,query.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE))"];
"1000293" [label="(Call,!query.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE))"];
"1000292" [label="(Call,!query.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTQUERYATTRIBUTESFILE_TAG, &query))"];
"1000288" [label="(Call,(rule_to_add & kCallNtQueryAttributesFile) &&\n      (!query.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTQUERYATTRIBUTESFILE_TAG, &query)))"];
"1000314" [label="(Call,query_full.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE))"];
"1000313" [label="(Call,!query_full.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE))"];
"1000312" [label="(Call,!query_full.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE)\n       || !policy->AddRule(IPC_NTQUERYFULLATTRIBUTESFILE_TAG,\n                           &query_full))"];
"1000308" [label="(Call,(rule_to_add & kCallNtQueryFullAttributesFile) &&\n      (!query_full.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE)\n       || !policy->AddRule(IPC_NTQUERYFULLATTRIBUTESFILE_TAG,\n                           &query_full)))"];
"1000334" [label="(Call,rename.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE))"];
"1000333" [label="(Call,!rename.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE))"];
"1000332" [label="(Call,!rename.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTSETINFO_RENAME_TAG, &rename))"];
"1000328" [label="(Call,(rule_to_add & kCallNtSetInfoRename) &&\n      (!rename.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTSETINFO_RENAME_TAG, &rename)))"];
"1000334" [label="(Call,rename.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE))"];
"1000253" [label="(Call,!create.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE))"];
"1000336" [label="(Identifier,FileName::NAME)"];
"1000293" [label="(Call,!query.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE))"];
"1000339" [label="(Call,!policy->AddRule(IPC_NTSETINFO_RENAME_TAG, &rename))"];
"1000298" [label="(Identifier,CASE_INSENSITIVE)"];
"1000333" [label="(Call,!rename.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE))"];
"1000296" [label="(Identifier,FileName::NAME)"];
"1000289" [label="(Call,rule_to_add & kCallNtQueryAttributesFile)"];
"1000270" [label="(Identifier,rule_to_add)"];
"1000346" [label="(Identifier,false)"];
"1000315" [label="(Identifier,IF)"];
"1000332" [label="(Call,!rename.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTSETINFO_RENAME_TAG, &rename))"];
"1000272" [label="(Call,!open.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTOPENFILE_TAG, &open))"];
"1000257" [label="(Identifier,name)"];
"1000338" [label="(Identifier,CASE_INSENSITIVE)"];
"1000179" [label="(Call,open.AddNumberMatch(IF, OpenFile::OPTIONS, FILE_DIRECTORY_FILE, AND))"];
"1000290" [label="(Identifier,rule_to_add)"];
"1000306" [label="(Identifier,false)"];
"1000269" [label="(Call,rule_to_add & kCallNtOpenFile)"];
"1000297" [label="(Identifier,name)"];
"1000317" [label="(Identifier,name)"];
"1000294" [label="(Call,query.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE))"];
"1000288" [label="(Call,(rule_to_add & kCallNtQueryAttributesFile) &&\n      (!query.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTQUERYATTRIBUTESFILE_TAG, &query)))"];
"1000312" [label="(Call,!query_full.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE)\n       || !policy->AddRule(IPC_NTQUERYFULLATTRIBUTESFILE_TAG,\n                           &query_full))"];
"1000276" [label="(Identifier,OpenFile::NAME)"];
"1000186" [label="(Identifier,OpenFile::OPTIONS)"];
"1000301" [label="(Identifier,IPC_NTQUERYATTRIBUTESFILE_TAG)"];
"1000287" [label="(ControlStructure,if ((rule_to_add & kCallNtQueryAttributesFile) &&\n      (!query.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTQUERYATTRIBUTESFILE_TAG, &query))))"];
"1000248" [label="(Call,(rule_to_add & kCallNtCreateFile) &&\n      (!create.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTCREATEFILE_TAG, &create)))"];
"1000299" [label="(Call,!policy->AddRule(IPC_NTQUERYATTRIBUTESFILE_TAG, &query))"];
"1000184" [label="(Call,create.AddNumberMatch(IF, OpenFile::OPTIONS, FILE_DIRECTORY_FILE, AND))"];
"1000275" [label="(Identifier,IF)"];
"1000259" [label="(Call,!policy->AddRule(IPC_NTCREATEFILE_TAG, &create))"];
"1000318" [label="(Identifier,CASE_INSENSITIVE)"];
"1000335" [label="(Identifier,IF)"];
"1000314" [label="(Call,query_full.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE))"];
"1000255" [label="(Identifier,IF)"];
"1000274" [label="(Call,open.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE))"];
"1000183" [label="(Identifier,AND)"];
"1000130" [label="(Call,name = mod_name.c_str())"];
"1000267" [label="(ControlStructure,if ((rule_to_add & kCallNtOpenFile) &&\n      (!open.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTOPENFILE_TAG, &open))))"];
"1000310" [label="(Identifier,rule_to_add)"];
"1000254" [label="(Call,create.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE))"];
"1000295" [label="(Identifier,IF)"];
"1000286" [label="(Identifier,false)"];
"1000307" [label="(ControlStructure,if ((rule_to_add & kCallNtQueryFullAttributesFile) &&\n      (!query_full.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE)\n       || !policy->AddRule(IPC_NTQUERYFULLATTRIBUTESFILE_TAG,\n                           &query_full))))"];
"1000266" [label="(Identifier,false)"];
"1000328" [label="(Call,(rule_to_add & kCallNtSetInfoRename) &&\n      (!rename.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTSETINFO_RENAME_TAG, &rename)))"];
"1000273" [label="(Call,!open.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE))"];
"1000281" [label="(Identifier,IPC_NTOPENFILE_TAG)"];
"1000326" [label="(Identifier,false)"];
"1000247" [label="(ControlStructure,if ((rule_to_add & kCallNtCreateFile) &&\n      (!create.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTCREATEFILE_TAG, &create))))"];
"1000189" [label="(ControlStructure,break;)"];
"1000313" [label="(Call,!query_full.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE))"];
"1000292" [label="(Call,!query.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTQUERYATTRIBUTESFILE_TAG, &query))"];
"1000252" [label="(Call,!create.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTCREATEFILE_TAG, &create))"];
"1000308" [label="(Call,(rule_to_add & kCallNtQueryFullAttributesFile) &&\n      (!query_full.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE)\n       || !policy->AddRule(IPC_NTQUERYFULLATTRIBUTESFILE_TAG,\n                           &query_full)))"];
"1000187" [label="(Identifier,FILE_DIRECTORY_FILE)"];
"1000319" [label="(Call,!policy->AddRule(IPC_NTQUERYFULLATTRIBUTESFILE_TAG,\n                           &query_full))"];
"1000327" [label="(ControlStructure,if ((rule_to_add & kCallNtSetInfoRename) &&\n      (!rename.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTSETINFO_RENAME_TAG, &rename))))"];
"1000348" [label="(Identifier,true)"];
"1000316" [label="(Identifier,FileName::NAME)"];
"1000341" [label="(Identifier,IPC_NTSETINFO_RENAME_TAG)"];
"1000321" [label="(Identifier,IPC_NTQUERYFULLATTRIBUTESFILE_TAG)"];
"1000268" [label="(Call,(rule_to_add & kCallNtOpenFile) &&\n      (!open.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTOPENFILE_TAG, &open)))"];
"1000349" [label="(MethodReturn,bool)"];
"1000258" [label="(Identifier,CASE_INSENSITIVE)"];
"1000180" [label="(Identifier,IF)"];
"1000256" [label="(Identifier,OpenFile::NAME)"];
"1000102" [label="(MethodParameterIn,const wchar_t* name)"];
"1000185" [label="(Identifier,IF)"];
"1000181" [label="(Identifier,OpenFile::OPTIONS)"];
"1000188" [label="(Identifier,AND)"];
"1000329" [label="(Call,rule_to_add & kCallNtSetInfoRename)"];
"1000330" [label="(Identifier,rule_to_add)"];
"1000178" [label="(Block,)"];
"1000278" [label="(Identifier,CASE_INSENSITIVE)"];
"1000261" [label="(Identifier,IPC_NTCREATEFILE_TAG)"];
"1000182" [label="(Identifier,FILE_DIRECTORY_FILE)"];
"1000279" [label="(Call,!policy->AddRule(IPC_NTOPENFILE_TAG, &open))"];
"1000337" [label="(Identifier,name)"];
"1000249" [label="(Call,rule_to_add & kCallNtCreateFile)"];
"1000277" [label="(Identifier,name)"];
"1000309" [label="(Call,rule_to_add & kCallNtQueryFullAttributesFile)"];
"1000184" -> "1000178"  [label="AST: "];
"1000184" -> "1000188"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000186" -> "1000184"  [label="AST: "];
"1000187" -> "1000184"  [label="AST: "];
"1000188" -> "1000184"  [label="AST: "];
"1000189" -> "1000184"  [label="CFG: "];
"1000184" -> "1000349"  [label="DDG: IF"];
"1000184" -> "1000349"  [label="DDG: AND"];
"1000184" -> "1000349"  [label="DDG: OpenFile::OPTIONS"];
"1000184" -> "1000349"  [label="DDG: FILE_DIRECTORY_FILE"];
"1000184" -> "1000349"  [label="DDG: create.AddNumberMatch(IF, OpenFile::OPTIONS, FILE_DIRECTORY_FILE, AND)"];
"1000179" -> "1000184"  [label="DDG: IF"];
"1000179" -> "1000184"  [label="DDG: OpenFile::OPTIONS"];
"1000179" -> "1000184"  [label="DDG: FILE_DIRECTORY_FILE"];
"1000179" -> "1000184"  [label="DDG: AND"];
"1000184" -> "1000254"  [label="DDG: IF"];
"1000184" -> "1000274"  [label="DDG: IF"];
"1000184" -> "1000294"  [label="DDG: IF"];
"1000184" -> "1000314"  [label="DDG: IF"];
"1000184" -> "1000334"  [label="DDG: IF"];
"1000179" -> "1000178"  [label="AST: "];
"1000179" -> "1000183"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000181" -> "1000179"  [label="AST: "];
"1000182" -> "1000179"  [label="AST: "];
"1000183" -> "1000179"  [label="AST: "];
"1000185" -> "1000179"  [label="CFG: "];
"1000179" -> "1000349"  [label="DDG: open.AddNumberMatch(IF, OpenFile::OPTIONS, FILE_DIRECTORY_FILE, AND)"];
"1000254" -> "1000253"  [label="AST: "];
"1000254" -> "1000258"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000256" -> "1000254"  [label="AST: "];
"1000257" -> "1000254"  [label="AST: "];
"1000258" -> "1000254"  [label="AST: "];
"1000253" -> "1000254"  [label="CFG: "];
"1000254" -> "1000349"  [label="DDG: IF"];
"1000254" -> "1000349"  [label="DDG: CASE_INSENSITIVE"];
"1000254" -> "1000349"  [label="DDG: name"];
"1000254" -> "1000349"  [label="DDG: OpenFile::NAME"];
"1000254" -> "1000253"  [label="DDG: IF"];
"1000254" -> "1000253"  [label="DDG: OpenFile::NAME"];
"1000254" -> "1000253"  [label="DDG: name"];
"1000254" -> "1000253"  [label="DDG: CASE_INSENSITIVE"];
"1000130" -> "1000254"  [label="DDG: name"];
"1000102" -> "1000254"  [label="DDG: name"];
"1000254" -> "1000274"  [label="DDG: IF"];
"1000254" -> "1000274"  [label="DDG: OpenFile::NAME"];
"1000254" -> "1000274"  [label="DDG: name"];
"1000254" -> "1000274"  [label="DDG: CASE_INSENSITIVE"];
"1000254" -> "1000294"  [label="DDG: IF"];
"1000254" -> "1000294"  [label="DDG: name"];
"1000254" -> "1000294"  [label="DDG: CASE_INSENSITIVE"];
"1000254" -> "1000314"  [label="DDG: IF"];
"1000254" -> "1000314"  [label="DDG: name"];
"1000254" -> "1000314"  [label="DDG: CASE_INSENSITIVE"];
"1000254" -> "1000334"  [label="DDG: IF"];
"1000254" -> "1000334"  [label="DDG: name"];
"1000254" -> "1000334"  [label="DDG: CASE_INSENSITIVE"];
"1000253" -> "1000252"  [label="AST: "];
"1000261" -> "1000253"  [label="CFG: "];
"1000252" -> "1000253"  [label="CFG: "];
"1000253" -> "1000349"  [label="DDG: create.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE)"];
"1000253" -> "1000252"  [label="DDG: create.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE)"];
"1000252" -> "1000248"  [label="AST: "];
"1000252" -> "1000259"  [label="CFG: "];
"1000259" -> "1000252"  [label="AST: "];
"1000248" -> "1000252"  [label="CFG: "];
"1000252" -> "1000349"  [label="DDG: !policy->AddRule(IPC_NTCREATEFILE_TAG, &create)"];
"1000252" -> "1000349"  [label="DDG: !create.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE)"];
"1000252" -> "1000248"  [label="DDG: !create.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE)"];
"1000252" -> "1000248"  [label="DDG: !policy->AddRule(IPC_NTCREATEFILE_TAG, &create)"];
"1000259" -> "1000252"  [label="DDG: policy->AddRule(IPC_NTCREATEFILE_TAG, &create)"];
"1000248" -> "1000247"  [label="AST: "];
"1000248" -> "1000249"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000266" -> "1000248"  [label="CFG: "];
"1000270" -> "1000248"  [label="CFG: "];
"1000248" -> "1000349"  [label="DDG: rule_to_add & kCallNtCreateFile"];
"1000248" -> "1000349"  [label="DDG: (rule_to_add & kCallNtCreateFile) &&\n      (!create.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTCREATEFILE_TAG, &create))"];
"1000248" -> "1000349"  [label="DDG: !create.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTCREATEFILE_TAG, &create)"];
"1000249" -> "1000248"  [label="DDG: rule_to_add"];
"1000249" -> "1000248"  [label="DDG: kCallNtCreateFile"];
"1000274" -> "1000273"  [label="AST: "];
"1000274" -> "1000278"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000276" -> "1000274"  [label="AST: "];
"1000277" -> "1000274"  [label="AST: "];
"1000278" -> "1000274"  [label="AST: "];
"1000273" -> "1000274"  [label="CFG: "];
"1000274" -> "1000349"  [label="DDG: IF"];
"1000274" -> "1000349"  [label="DDG: CASE_INSENSITIVE"];
"1000274" -> "1000349"  [label="DDG: OpenFile::NAME"];
"1000274" -> "1000349"  [label="DDG: name"];
"1000274" -> "1000273"  [label="DDG: IF"];
"1000274" -> "1000273"  [label="DDG: OpenFile::NAME"];
"1000274" -> "1000273"  [label="DDG: name"];
"1000274" -> "1000273"  [label="DDG: CASE_INSENSITIVE"];
"1000130" -> "1000274"  [label="DDG: name"];
"1000102" -> "1000274"  [label="DDG: name"];
"1000274" -> "1000294"  [label="DDG: IF"];
"1000274" -> "1000294"  [label="DDG: name"];
"1000274" -> "1000294"  [label="DDG: CASE_INSENSITIVE"];
"1000274" -> "1000314"  [label="DDG: IF"];
"1000274" -> "1000314"  [label="DDG: name"];
"1000274" -> "1000314"  [label="DDG: CASE_INSENSITIVE"];
"1000274" -> "1000334"  [label="DDG: IF"];
"1000274" -> "1000334"  [label="DDG: name"];
"1000274" -> "1000334"  [label="DDG: CASE_INSENSITIVE"];
"1000273" -> "1000272"  [label="AST: "];
"1000281" -> "1000273"  [label="CFG: "];
"1000272" -> "1000273"  [label="CFG: "];
"1000273" -> "1000349"  [label="DDG: open.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE)"];
"1000273" -> "1000272"  [label="DDG: open.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE)"];
"1000272" -> "1000268"  [label="AST: "];
"1000272" -> "1000279"  [label="CFG: "];
"1000279" -> "1000272"  [label="AST: "];
"1000268" -> "1000272"  [label="CFG: "];
"1000272" -> "1000349"  [label="DDG: !open.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE)"];
"1000272" -> "1000349"  [label="DDG: !policy->AddRule(IPC_NTOPENFILE_TAG, &open)"];
"1000272" -> "1000268"  [label="DDG: !open.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE)"];
"1000272" -> "1000268"  [label="DDG: !policy->AddRule(IPC_NTOPENFILE_TAG, &open)"];
"1000279" -> "1000272"  [label="DDG: policy->AddRule(IPC_NTOPENFILE_TAG, &open)"];
"1000268" -> "1000267"  [label="AST: "];
"1000268" -> "1000269"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000286" -> "1000268"  [label="CFG: "];
"1000290" -> "1000268"  [label="CFG: "];
"1000268" -> "1000349"  [label="DDG: rule_to_add & kCallNtOpenFile"];
"1000268" -> "1000349"  [label="DDG: (rule_to_add & kCallNtOpenFile) &&\n      (!open.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTOPENFILE_TAG, &open))"];
"1000268" -> "1000349"  [label="DDG: !open.AddStringMatch(IF, OpenFile::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTOPENFILE_TAG, &open)"];
"1000269" -> "1000268"  [label="DDG: rule_to_add"];
"1000269" -> "1000268"  [label="DDG: kCallNtOpenFile"];
"1000294" -> "1000293"  [label="AST: "];
"1000294" -> "1000298"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000296" -> "1000294"  [label="AST: "];
"1000297" -> "1000294"  [label="AST: "];
"1000298" -> "1000294"  [label="AST: "];
"1000293" -> "1000294"  [label="CFG: "];
"1000294" -> "1000349"  [label="DDG: CASE_INSENSITIVE"];
"1000294" -> "1000349"  [label="DDG: FileName::NAME"];
"1000294" -> "1000349"  [label="DDG: name"];
"1000294" -> "1000349"  [label="DDG: IF"];
"1000294" -> "1000293"  [label="DDG: IF"];
"1000294" -> "1000293"  [label="DDG: FileName::NAME"];
"1000294" -> "1000293"  [label="DDG: name"];
"1000294" -> "1000293"  [label="DDG: CASE_INSENSITIVE"];
"1000130" -> "1000294"  [label="DDG: name"];
"1000102" -> "1000294"  [label="DDG: name"];
"1000294" -> "1000314"  [label="DDG: IF"];
"1000294" -> "1000314"  [label="DDG: FileName::NAME"];
"1000294" -> "1000314"  [label="DDG: name"];
"1000294" -> "1000314"  [label="DDG: CASE_INSENSITIVE"];
"1000294" -> "1000334"  [label="DDG: IF"];
"1000294" -> "1000334"  [label="DDG: FileName::NAME"];
"1000294" -> "1000334"  [label="DDG: name"];
"1000294" -> "1000334"  [label="DDG: CASE_INSENSITIVE"];
"1000293" -> "1000292"  [label="AST: "];
"1000301" -> "1000293"  [label="CFG: "];
"1000292" -> "1000293"  [label="CFG: "];
"1000293" -> "1000349"  [label="DDG: query.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE)"];
"1000293" -> "1000292"  [label="DDG: query.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE)"];
"1000292" -> "1000288"  [label="AST: "];
"1000292" -> "1000299"  [label="CFG: "];
"1000299" -> "1000292"  [label="AST: "];
"1000288" -> "1000292"  [label="CFG: "];
"1000292" -> "1000349"  [label="DDG: !query.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE)"];
"1000292" -> "1000349"  [label="DDG: !policy->AddRule(IPC_NTQUERYATTRIBUTESFILE_TAG, &query)"];
"1000292" -> "1000288"  [label="DDG: !query.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE)"];
"1000292" -> "1000288"  [label="DDG: !policy->AddRule(IPC_NTQUERYATTRIBUTESFILE_TAG, &query)"];
"1000299" -> "1000292"  [label="DDG: policy->AddRule(IPC_NTQUERYATTRIBUTESFILE_TAG, &query)"];
"1000288" -> "1000287"  [label="AST: "];
"1000288" -> "1000289"  [label="CFG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000306" -> "1000288"  [label="CFG: "];
"1000310" -> "1000288"  [label="CFG: "];
"1000288" -> "1000349"  [label="DDG: !query.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTQUERYATTRIBUTESFILE_TAG, &query)"];
"1000288" -> "1000349"  [label="DDG: rule_to_add & kCallNtQueryAttributesFile"];
"1000288" -> "1000349"  [label="DDG: (rule_to_add & kCallNtQueryAttributesFile) &&\n      (!query.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTQUERYATTRIBUTESFILE_TAG, &query))"];
"1000289" -> "1000288"  [label="DDG: rule_to_add"];
"1000289" -> "1000288"  [label="DDG: kCallNtQueryAttributesFile"];
"1000314" -> "1000313"  [label="AST: "];
"1000314" -> "1000318"  [label="CFG: "];
"1000315" -> "1000314"  [label="AST: "];
"1000316" -> "1000314"  [label="AST: "];
"1000317" -> "1000314"  [label="AST: "];
"1000318" -> "1000314"  [label="AST: "];
"1000313" -> "1000314"  [label="CFG: "];
"1000314" -> "1000349"  [label="DDG: IF"];
"1000314" -> "1000349"  [label="DDG: CASE_INSENSITIVE"];
"1000314" -> "1000349"  [label="DDG: FileName::NAME"];
"1000314" -> "1000349"  [label="DDG: name"];
"1000314" -> "1000313"  [label="DDG: IF"];
"1000314" -> "1000313"  [label="DDG: FileName::NAME"];
"1000314" -> "1000313"  [label="DDG: name"];
"1000314" -> "1000313"  [label="DDG: CASE_INSENSITIVE"];
"1000130" -> "1000314"  [label="DDG: name"];
"1000102" -> "1000314"  [label="DDG: name"];
"1000314" -> "1000334"  [label="DDG: IF"];
"1000314" -> "1000334"  [label="DDG: FileName::NAME"];
"1000314" -> "1000334"  [label="DDG: name"];
"1000314" -> "1000334"  [label="DDG: CASE_INSENSITIVE"];
"1000313" -> "1000312"  [label="AST: "];
"1000321" -> "1000313"  [label="CFG: "];
"1000312" -> "1000313"  [label="CFG: "];
"1000313" -> "1000349"  [label="DDG: query_full.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE)"];
"1000313" -> "1000312"  [label="DDG: query_full.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE)"];
"1000312" -> "1000308"  [label="AST: "];
"1000312" -> "1000319"  [label="CFG: "];
"1000319" -> "1000312"  [label="AST: "];
"1000308" -> "1000312"  [label="CFG: "];
"1000312" -> "1000349"  [label="DDG: !query_full.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE)"];
"1000312" -> "1000349"  [label="DDG: !policy->AddRule(IPC_NTQUERYFULLATTRIBUTESFILE_TAG,\n                           &query_full)"];
"1000312" -> "1000308"  [label="DDG: !query_full.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE)"];
"1000312" -> "1000308"  [label="DDG: !policy->AddRule(IPC_NTQUERYFULLATTRIBUTESFILE_TAG,\n                           &query_full)"];
"1000319" -> "1000312"  [label="DDG: policy->AddRule(IPC_NTQUERYFULLATTRIBUTESFILE_TAG,\n                           &query_full)"];
"1000308" -> "1000307"  [label="AST: "];
"1000308" -> "1000309"  [label="CFG: "];
"1000309" -> "1000308"  [label="AST: "];
"1000326" -> "1000308"  [label="CFG: "];
"1000330" -> "1000308"  [label="CFG: "];
"1000308" -> "1000349"  [label="DDG: rule_to_add & kCallNtQueryFullAttributesFile"];
"1000308" -> "1000349"  [label="DDG: !query_full.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE)\n       || !policy->AddRule(IPC_NTQUERYFULLATTRIBUTESFILE_TAG,\n                           &query_full)"];
"1000308" -> "1000349"  [label="DDG: (rule_to_add & kCallNtQueryFullAttributesFile) &&\n      (!query_full.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE)\n       || !policy->AddRule(IPC_NTQUERYFULLATTRIBUTESFILE_TAG,\n                           &query_full))"];
"1000309" -> "1000308"  [label="DDG: rule_to_add"];
"1000309" -> "1000308"  [label="DDG: kCallNtQueryFullAttributesFile"];
"1000334" -> "1000333"  [label="AST: "];
"1000334" -> "1000338"  [label="CFG: "];
"1000335" -> "1000334"  [label="AST: "];
"1000336" -> "1000334"  [label="AST: "];
"1000337" -> "1000334"  [label="AST: "];
"1000338" -> "1000334"  [label="AST: "];
"1000333" -> "1000334"  [label="CFG: "];
"1000334" -> "1000349"  [label="DDG: FileName::NAME"];
"1000334" -> "1000349"  [label="DDG: CASE_INSENSITIVE"];
"1000334" -> "1000349"  [label="DDG: name"];
"1000334" -> "1000349"  [label="DDG: IF"];
"1000334" -> "1000333"  [label="DDG: IF"];
"1000334" -> "1000333"  [label="DDG: FileName::NAME"];
"1000334" -> "1000333"  [label="DDG: name"];
"1000334" -> "1000333"  [label="DDG: CASE_INSENSITIVE"];
"1000130" -> "1000334"  [label="DDG: name"];
"1000102" -> "1000334"  [label="DDG: name"];
"1000333" -> "1000332"  [label="AST: "];
"1000341" -> "1000333"  [label="CFG: "];
"1000332" -> "1000333"  [label="CFG: "];
"1000333" -> "1000349"  [label="DDG: rename.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE)"];
"1000333" -> "1000332"  [label="DDG: rename.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE)"];
"1000332" -> "1000328"  [label="AST: "];
"1000332" -> "1000339"  [label="CFG: "];
"1000339" -> "1000332"  [label="AST: "];
"1000328" -> "1000332"  [label="CFG: "];
"1000332" -> "1000349"  [label="DDG: !policy->AddRule(IPC_NTSETINFO_RENAME_TAG, &rename)"];
"1000332" -> "1000349"  [label="DDG: !rename.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE)"];
"1000332" -> "1000328"  [label="DDG: !rename.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE)"];
"1000332" -> "1000328"  [label="DDG: !policy->AddRule(IPC_NTSETINFO_RENAME_TAG, &rename)"];
"1000339" -> "1000332"  [label="DDG: policy->AddRule(IPC_NTSETINFO_RENAME_TAG, &rename)"];
"1000328" -> "1000327"  [label="AST: "];
"1000328" -> "1000329"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000346" -> "1000328"  [label="CFG: "];
"1000348" -> "1000328"  [label="CFG: "];
"1000328" -> "1000349"  [label="DDG: !rename.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTSETINFO_RENAME_TAG, &rename)"];
"1000328" -> "1000349"  [label="DDG: (rule_to_add & kCallNtSetInfoRename) &&\n      (!rename.AddStringMatch(IF, FileName::NAME, name, CASE_INSENSITIVE) ||\n       !policy->AddRule(IPC_NTSETINFO_RENAME_TAG, &rename))"];
"1000328" -> "1000349"  [label="DDG: rule_to_add & kCallNtSetInfoRename"];
"1000329" -> "1000328"  [label="DDG: rule_to_add"];
"1000329" -> "1000328"  [label="DDG: kCallNtSetInfoRename"];
}
