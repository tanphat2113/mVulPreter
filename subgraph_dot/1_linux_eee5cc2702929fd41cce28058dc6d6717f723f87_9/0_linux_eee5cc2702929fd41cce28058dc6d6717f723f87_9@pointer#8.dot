digraph "0_linux_eee5cc2702929fd41cce28058dc6d6717f723f87_9@pointer" {
"1000125" [label="(Call,f->f_flags & O_PATH)"];
"1000114" [label="(Call,OPEN_FMODE(f->f_flags))"];
"1000124" [label="(Call,unlikely(f->f_flags & O_PATH))"];
"1000239" [label="(Call,break_lease(inode, f->f_flags))"];
"1000237" [label="(Call,error = break_lease(inode, f->f_flags))"];
"1000362" [label="(Return,return error;)"];
"1000262" [label="(Call,open(inode, f))"];
"1000260" [label="(Call,error = open(inode, f))"];
"1000278" [label="(Call,i_readcount_inc(inode))"];
"1000311" [label="(Call,file_sb_list_del(f))"];
"1000329" [label="(Call,file_reset_write(f))"];
"1000320" [label="(Call,put_write_access(inode))"];
"1000280" [label="(Call,f->f_flags &= ~(O_CREAT | O_EXCL | O_NOCTTY | O_TRUNC))"];
"1000160" [label="(Call,error = __get_file_write_access(inode, f->f_path.mnt))"];
"1000240" [label="(Identifier,inode)"];
"1000119" [label="(Identifier,FMODE_LSEEK)"];
"1000268" [label="(ControlStructure,if ((f->f_mode & (FMODE_READ | FMODE_WRITE)) == FMODE_READ))"];
"1000224" [label="(Call,error = -ENODEV)"];
"1000263" [label="(Identifier,inode)"];
"1000138" [label="(Identifier,f)"];
"1000129" [label="(Identifier,O_PATH)"];
"1000231" [label="(Call,security_file_open(f, cred))"];
"1000295" [label="(Identifier,f)"];
"1000261" [label="(Identifier,error)"];
"1000245" [label="(Identifier,error)"];
"1000311" [label="(Call,file_sb_list_del(f))"];
"1000187" [label="(Call,file_sb_list_add(f, inode->i_sb))"];
"1000326" [label="(Identifier,inode)"];
"1000115" [label="(Call,f->f_flags)"];
"1000320" [label="(Call,put_write_access(inode))"];
"1000132" [label="(Identifier,f)"];
"1000162" [label="(Call,__get_file_write_access(inode, f->f_path.mnt))"];
"1000279" [label="(Identifier,inode)"];
"1000280" [label="(Call,f->f_flags &= ~(O_CREAT | O_EXCL | O_NOCTTY | O_TRUNC))"];
"1000328" [label="(Block,)"];
"1000266" [label="(Identifier,error)"];
"1000125" [label="(Call,f->f_flags & O_PATH)"];
"1000229" [label="(Call,error = security_file_open(f, cred))"];
"1000334" [label="(Identifier,f)"];
"1000140" [label="(Call,inode = f->f_inode = f->f_path.dentry->d_inode)"];
"1000281" [label="(Call,f->f_flags)"];
"1000264" [label="(Identifier,f)"];
"1000330" [label="(Identifier,f)"];
"1000364" [label="(MethodReturn,static int)"];
"1000329" [label="(Call,file_reset_write(f))"];
"1000262" [label="(Call,open(inode, f))"];
"1000239" [label="(Call,break_lease(inode, f->f_flags))"];
"1000282" [label="(Identifier,f)"];
"1000363" [label="(Identifier,error)"];
"1000312" [label="(Identifier,f)"];
"1000278" [label="(Call,i_readcount_inc(inode))"];
"1000260" [label="(Call,error = open(inode, f))"];
"1000102" [label="(MethodParameterIn,struct file *f)"];
"1000113" [label="(Call,OPEN_FMODE(f->f_flags) | FMODE_LSEEK |\n\t\t\t\tFMODE_PREAD | FMODE_PWRITE)"];
"1000241" [label="(Call,f->f_flags)"];
"1000114" [label="(Call,OPEN_FMODE(f->f_flags))"];
"1000284" [label="(Call,~(O_CREAT | O_EXCL | O_NOCTTY | O_TRUNC))"];
"1000238" [label="(Identifier,error)"];
"1000126" [label="(Call,f->f_flags)"];
"1000259" [label="(Block,)"];
"1000105" [label="(Block,)"];
"1000316" [label="(Identifier,f)"];
"1000321" [label="(Identifier,inode)"];
"1000319" [label="(Block,)"];
"1000237" [label="(Call,error = break_lease(inode, f->f_flags))"];
"1000362" [label="(Return,return error;)"];
"1000123" [label="(ControlStructure,if (unlikely(f->f_flags & O_PATH)))"];
"1000124" [label="(Call,unlikely(f->f_flags & O_PATH))"];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000129"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000129" -> "1000125"  [label="AST: "];
"1000124" -> "1000125"  [label="CFG: "];
"1000125" -> "1000364"  [label="DDG: f->f_flags"];
"1000125" -> "1000364"  [label="DDG: O_PATH"];
"1000125" -> "1000124"  [label="DDG: f->f_flags"];
"1000125" -> "1000124"  [label="DDG: O_PATH"];
"1000114" -> "1000125"  [label="DDG: f->f_flags"];
"1000125" -> "1000239"  [label="DDG: f->f_flags"];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000115"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000119" -> "1000114"  [label="CFG: "];
"1000114" -> "1000113"  [label="DDG: f->f_flags"];
"1000124" -> "1000123"  [label="AST: "];
"1000132" -> "1000124"  [label="CFG: "];
"1000138" -> "1000124"  [label="CFG: "];
"1000124" -> "1000364"  [label="DDG: f->f_flags & O_PATH"];
"1000124" -> "1000364"  [label="DDG: unlikely(f->f_flags & O_PATH)"];
"1000239" -> "1000237"  [label="AST: "];
"1000239" -> "1000241"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="AST: "];
"1000237" -> "1000239"  [label="CFG: "];
"1000239" -> "1000364"  [label="DDG: inode"];
"1000239" -> "1000364"  [label="DDG: f->f_flags"];
"1000239" -> "1000237"  [label="DDG: inode"];
"1000239" -> "1000237"  [label="DDG: f->f_flags"];
"1000140" -> "1000239"  [label="DDG: inode"];
"1000162" -> "1000239"  [label="DDG: inode"];
"1000239" -> "1000262"  [label="DDG: inode"];
"1000239" -> "1000278"  [label="DDG: inode"];
"1000239" -> "1000280"  [label="DDG: f->f_flags"];
"1000239" -> "1000320"  [label="DDG: inode"];
"1000237" -> "1000105"  [label="AST: "];
"1000238" -> "1000237"  [label="AST: "];
"1000245" -> "1000237"  [label="CFG: "];
"1000237" -> "1000364"  [label="DDG: break_lease(inode, f->f_flags)"];
"1000237" -> "1000364"  [label="DDG: error"];
"1000237" -> "1000362"  [label="DDG: error"];
"1000362" -> "1000105"  [label="AST: "];
"1000362" -> "1000363"  [label="CFG: "];
"1000363" -> "1000362"  [label="AST: "];
"1000364" -> "1000362"  [label="CFG: "];
"1000362" -> "1000364"  [label="DDG: <RET>"];
"1000363" -> "1000362"  [label="DDG: error"];
"1000224" -> "1000362"  [label="DDG: error"];
"1000229" -> "1000362"  [label="DDG: error"];
"1000260" -> "1000362"  [label="DDG: error"];
"1000160" -> "1000362"  [label="DDG: error"];
"1000262" -> "1000260"  [label="AST: "];
"1000262" -> "1000264"  [label="CFG: "];
"1000263" -> "1000262"  [label="AST: "];
"1000264" -> "1000262"  [label="AST: "];
"1000260" -> "1000262"  [label="CFG: "];
"1000262" -> "1000364"  [label="DDG: inode"];
"1000262" -> "1000364"  [label="DDG: f"];
"1000262" -> "1000260"  [label="DDG: inode"];
"1000262" -> "1000260"  [label="DDG: f"];
"1000231" -> "1000262"  [label="DDG: f"];
"1000102" -> "1000262"  [label="DDG: f"];
"1000262" -> "1000278"  [label="DDG: inode"];
"1000262" -> "1000311"  [label="DDG: f"];
"1000262" -> "1000320"  [label="DDG: inode"];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000260"  [label="AST: "];
"1000266" -> "1000260"  [label="CFG: "];
"1000260" -> "1000364"  [label="DDG: open(inode, f)"];
"1000260" -> "1000364"  [label="DDG: error"];
"1000278" -> "1000268"  [label="AST: "];
"1000278" -> "1000279"  [label="CFG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000282" -> "1000278"  [label="CFG: "];
"1000278" -> "1000364"  [label="DDG: i_readcount_inc(inode)"];
"1000278" -> "1000364"  [label="DDG: inode"];
"1000311" -> "1000105"  [label="AST: "];
"1000311" -> "1000312"  [label="CFG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000316" -> "1000311"  [label="CFG: "];
"1000311" -> "1000364"  [label="DDG: f"];
"1000311" -> "1000364"  [label="DDG: file_sb_list_del(f)"];
"1000187" -> "1000311"  [label="DDG: f"];
"1000231" -> "1000311"  [label="DDG: f"];
"1000102" -> "1000311"  [label="DDG: f"];
"1000311" -> "1000329"  [label="DDG: f"];
"1000329" -> "1000328"  [label="AST: "];
"1000329" -> "1000330"  [label="CFG: "];
"1000330" -> "1000329"  [label="AST: "];
"1000334" -> "1000329"  [label="CFG: "];
"1000329" -> "1000364"  [label="DDG: file_reset_write(f)"];
"1000329" -> "1000364"  [label="DDG: f"];
"1000102" -> "1000329"  [label="DDG: f"];
"1000320" -> "1000319"  [label="AST: "];
"1000320" -> "1000321"  [label="CFG: "];
"1000321" -> "1000320"  [label="AST: "];
"1000326" -> "1000320"  [label="CFG: "];
"1000320" -> "1000364"  [label="DDG: inode"];
"1000320" -> "1000364"  [label="DDG: put_write_access(inode)"];
"1000140" -> "1000320"  [label="DDG: inode"];
"1000162" -> "1000320"  [label="DDG: inode"];
"1000280" -> "1000105"  [label="AST: "];
"1000280" -> "1000284"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000284" -> "1000280"  [label="AST: "];
"1000295" -> "1000280"  [label="CFG: "];
"1000280" -> "1000364"  [label="DDG: ~(O_CREAT | O_EXCL | O_NOCTTY | O_TRUNC)"];
"1000280" -> "1000364"  [label="DDG: f->f_flags &= ~(O_CREAT | O_EXCL | O_NOCTTY | O_TRUNC)"];
"1000280" -> "1000364"  [label="DDG: f->f_flags"];
"1000284" -> "1000280"  [label="DDG: O_CREAT | O_EXCL | O_NOCTTY | O_TRUNC"];
}
