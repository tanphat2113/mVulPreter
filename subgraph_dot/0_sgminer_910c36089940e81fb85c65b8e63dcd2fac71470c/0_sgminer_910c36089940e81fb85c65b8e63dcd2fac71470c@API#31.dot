digraph "0_sgminer_910c36089940e81fb85c65b8e63dcd2fac71470c@API" {
"1000454" [label="(Call,free(merkle))"];
"1000444" [label="(Call,hex2bin(pool->swork.merkle_bin[i], merkle, 32))"];
"1000433" [label="(Call,!pool->swork.merkle_bin[i])"];
"1000419" [label="(Call,pool->swork.merkle_bin[i] = (unsigned char *)malloc(32))"];
"1000427" [label="(Call,(unsigned char *)malloc(32))"];
"1000429" [label="(Call,malloc(32))"];
"1000414" [label="(Call,*merkle = json_array_string(arr, i))"];
"1000416" [label="(Call,json_array_string(arr, i))"];
"1000148" [label="(Call,json_array_size(arr))"];
"1000140" [label="(Call,!arr)"];
"1000133" [label="(Call,arr = json_array_get(val, 4))"];
"1000135" [label="(Call,json_array_get(val, 4))"];
"1000110" [label="(MethodParameterIn,json_t *val)"];
"1000143" [label="(Call,json_is_array(arr))"];
"1000407" [label="(Call,i < merkles)"];
"1000404" [label="(Call,i = 0)"];
"1000410" [label="(Call,i++)"];
"1000398" [label="(Call,sizeof(char *) * merkles)"];
"1000146" [label="(Call,merkles = json_array_size(arr))"];
"1000414" [label="(Call,*merkle = json_array_string(arr, i))"];
"1000418" [label="(Identifier,i)"];
"1000140" [label="(Call,!arr)"];
"1000409" [label="(Identifier,merkles)"];
"1000410" [label="(Call,i++)"];
"1000768" [label="(MethodReturn,static bool)"];
"1000162" [label="(Call,json_array_string(val, 2))"];
"1000429" [label="(Call,malloc(32))"];
"1000182" [label="(Call,json_array_string(val, 7))"];
"1000172" [label="(Call,json_array_string(val, 5))"];
"1000403" [label="(ControlStructure,for (i = 0; i < merkles; i++))"];
"1000148" [label="(Call,json_array_size(arr))"];
"1000139" [label="(Call,!arr || !json_is_array(arr))"];
"1000412" [label="(Block,)"];
"1000444" [label="(Call,hex2bin(pool->swork.merkle_bin[i], merkle, 32))"];
"1000430" [label="(Literal,32)"];
"1000407" [label="(Call,i < merkles)"];
"1000402" [label="(Literal,1)"];
"1000151" [label="(Identifier,job_id)"];
"1000143" [label="(Call,json_is_array(arr))"];
"1000401" [label="(Identifier,merkles)"];
"1000398" [label="(Call,sizeof(char *) * merkles)"];
"1000149" [label="(Identifier,arr)"];
"1000427" [label="(Call,(unsigned char *)malloc(32))"];
"1000420" [label="(Call,pool->swork.merkle_bin[i])"];
"1000455" [label="(Identifier,merkle)"];
"1000152" [label="(Call,json_array_string(val, 0))"];
"1000416" [label="(Call,json_array_string(arr, i))"];
"1000188" [label="(Call,json_array_get(val, 8))"];
"1000453" [label="(Literal,32)"];
"1000408" [label="(Identifier,i)"];
"1000456" [label="(Call,pool->swork.merkles = merkles)"];
"1000452" [label="(Identifier,merkle)"];
"1000397" [label="(Call,sizeof(char *) * merkles + 1)"];
"1000134" [label="(Identifier,arr)"];
"1000135" [label="(Call,json_array_get(val, 4))"];
"1000141" [label="(Identifier,arr)"];
"1000136" [label="(Identifier,val)"];
"1000437" [label="(Identifier,pool)"];
"1000405" [label="(Identifier,i)"];
"1000147" [label="(Identifier,merkles)"];
"1000411" [label="(Identifier,i)"];
"1000137" [label="(Literal,4)"];
"1000423" [label="(Identifier,pool)"];
"1000419" [label="(Call,pool->swork.merkle_bin[i] = (unsigned char *)malloc(32))"];
"1000433" [label="(Call,!pool->swork.merkle_bin[i])"];
"1000167" [label="(Call,json_array_string(val, 3))"];
"1000459" [label="(Identifier,pool)"];
"1000445" [label="(Call,pool->swork.merkle_bin[i])"];
"1000391" [label="(Call,realloc(pool->swork.merkle_bin,\n\t\t\t\t\t\t sizeof(char *) * merkles + 1))"];
"1000432" [label="(Call,unlikely(!pool->swork.merkle_bin[i]))"];
"1000177" [label="(Call,json_array_string(val, 6))"];
"1000157" [label="(Call,json_array_string(val, 1))"];
"1000415" [label="(Identifier,merkle)"];
"1000142" [label="(Call,!json_is_array(arr))"];
"1000133" [label="(Call,arr = json_array_get(val, 4))"];
"1000111" [label="(Block,)"];
"1000110" [label="(MethodParameterIn,json_t *val)"];
"1000144" [label="(Identifier,arr)"];
"1000454" [label="(Call,free(merkle))"];
"1000434" [label="(Call,pool->swork.merkle_bin[i])"];
"1000417" [label="(Identifier,arr)"];
"1000404" [label="(Call,i = 0)"];
"1000146" [label="(Call,merkles = json_array_size(arr))"];
"1000399" [label="(Call,sizeof(char *))"];
"1000406" [label="(Literal,0)"];
"1000454" -> "1000412"  [label="AST: "];
"1000454" -> "1000455"  [label="CFG: "];
"1000455" -> "1000454"  [label="AST: "];
"1000411" -> "1000454"  [label="CFG: "];
"1000454" -> "1000768"  [label="DDG: merkle"];
"1000444" -> "1000454"  [label="DDG: merkle"];
"1000444" -> "1000412"  [label="AST: "];
"1000444" -> "1000453"  [label="CFG: "];
"1000445" -> "1000444"  [label="AST: "];
"1000452" -> "1000444"  [label="AST: "];
"1000453" -> "1000444"  [label="AST: "];
"1000455" -> "1000444"  [label="CFG: "];
"1000444" -> "1000768"  [label="DDG: pool->swork.merkle_bin[i]"];
"1000444" -> "1000768"  [label="DDG: hex2bin(pool->swork.merkle_bin[i], merkle, 32)"];
"1000433" -> "1000444"  [label="DDG: pool->swork.merkle_bin[i]"];
"1000414" -> "1000444"  [label="DDG: merkle"];
"1000433" -> "1000432"  [label="AST: "];
"1000433" -> "1000434"  [label="CFG: "];
"1000434" -> "1000433"  [label="AST: "];
"1000432" -> "1000433"  [label="CFG: "];
"1000433" -> "1000432"  [label="DDG: pool->swork.merkle_bin[i]"];
"1000419" -> "1000433"  [label="DDG: pool->swork.merkle_bin[i]"];
"1000419" -> "1000412"  [label="AST: "];
"1000419" -> "1000427"  [label="CFG: "];
"1000420" -> "1000419"  [label="AST: "];
"1000427" -> "1000419"  [label="AST: "];
"1000437" -> "1000419"  [label="CFG: "];
"1000419" -> "1000768"  [label="DDG: (unsigned char *)malloc(32)"];
"1000427" -> "1000419"  [label="DDG: malloc(32)"];
"1000427" -> "1000429"  [label="CFG: "];
"1000428" -> "1000427"  [label="AST: "];
"1000429" -> "1000427"  [label="AST: "];
"1000427" -> "1000768"  [label="DDG: malloc(32)"];
"1000429" -> "1000427"  [label="DDG: 32"];
"1000429" -> "1000430"  [label="CFG: "];
"1000430" -> "1000429"  [label="AST: "];
"1000414" -> "1000412"  [label="AST: "];
"1000414" -> "1000416"  [label="CFG: "];
"1000415" -> "1000414"  [label="AST: "];
"1000416" -> "1000414"  [label="AST: "];
"1000423" -> "1000414"  [label="CFG: "];
"1000414" -> "1000768"  [label="DDG: json_array_string(arr, i)"];
"1000416" -> "1000414"  [label="DDG: arr"];
"1000416" -> "1000414"  [label="DDG: i"];
"1000416" -> "1000418"  [label="CFG: "];
"1000417" -> "1000416"  [label="AST: "];
"1000418" -> "1000416"  [label="AST: "];
"1000416" -> "1000768"  [label="DDG: arr"];
"1000416" -> "1000410"  [label="DDG: i"];
"1000148" -> "1000416"  [label="DDG: arr"];
"1000407" -> "1000416"  [label="DDG: i"];
"1000148" -> "1000146"  [label="AST: "];
"1000148" -> "1000149"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000148" -> "1000768"  [label="DDG: arr"];
"1000148" -> "1000146"  [label="DDG: arr"];
"1000140" -> "1000148"  [label="DDG: arr"];
"1000143" -> "1000148"  [label="DDG: arr"];
"1000140" -> "1000139"  [label="AST: "];
"1000140" -> "1000141"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000144" -> "1000140"  [label="CFG: "];
"1000139" -> "1000140"  [label="CFG: "];
"1000140" -> "1000768"  [label="DDG: arr"];
"1000140" -> "1000139"  [label="DDG: arr"];
"1000133" -> "1000140"  [label="DDG: arr"];
"1000140" -> "1000143"  [label="DDG: arr"];
"1000133" -> "1000111"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000141" -> "1000133"  [label="CFG: "];
"1000133" -> "1000768"  [label="DDG: json_array_get(val, 4)"];
"1000135" -> "1000133"  [label="DDG: val"];
"1000135" -> "1000133"  [label="DDG: 4"];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000135" -> "1000768"  [label="DDG: val"];
"1000110" -> "1000135"  [label="DDG: val"];
"1000135" -> "1000152"  [label="DDG: val"];
"1000110" -> "1000108"  [label="AST: "];
"1000110" -> "1000768"  [label="DDG: val"];
"1000110" -> "1000152"  [label="DDG: val"];
"1000110" -> "1000157"  [label="DDG: val"];
"1000110" -> "1000162"  [label="DDG: val"];
"1000110" -> "1000167"  [label="DDG: val"];
"1000110" -> "1000172"  [label="DDG: val"];
"1000110" -> "1000177"  [label="DDG: val"];
"1000110" -> "1000182"  [label="DDG: val"];
"1000110" -> "1000188"  [label="DDG: val"];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000144"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000142" -> "1000143"  [label="CFG: "];
"1000143" -> "1000768"  [label="DDG: arr"];
"1000143" -> "1000142"  [label="DDG: arr"];
"1000407" -> "1000403"  [label="AST: "];
"1000407" -> "1000409"  [label="CFG: "];
"1000408" -> "1000407"  [label="AST: "];
"1000409" -> "1000407"  [label="AST: "];
"1000415" -> "1000407"  [label="CFG: "];
"1000459" -> "1000407"  [label="CFG: "];
"1000407" -> "1000768"  [label="DDG: i < merkles"];
"1000407" -> "1000768"  [label="DDG: i"];
"1000404" -> "1000407"  [label="DDG: i"];
"1000410" -> "1000407"  [label="DDG: i"];
"1000398" -> "1000407"  [label="DDG: merkles"];
"1000407" -> "1000456"  [label="DDG: merkles"];
"1000404" -> "1000403"  [label="AST: "];
"1000404" -> "1000406"  [label="CFG: "];
"1000405" -> "1000404"  [label="AST: "];
"1000406" -> "1000404"  [label="AST: "];
"1000408" -> "1000404"  [label="CFG: "];
"1000410" -> "1000403"  [label="AST: "];
"1000410" -> "1000411"  [label="CFG: "];
"1000411" -> "1000410"  [label="AST: "];
"1000408" -> "1000410"  [label="CFG: "];
"1000398" -> "1000397"  [label="AST: "];
"1000398" -> "1000401"  [label="CFG: "];
"1000399" -> "1000398"  [label="AST: "];
"1000401" -> "1000398"  [label="AST: "];
"1000402" -> "1000398"  [label="CFG: "];
"1000398" -> "1000391"  [label="DDG: merkles"];
"1000398" -> "1000397"  [label="DDG: merkles"];
"1000146" -> "1000398"  [label="DDG: merkles"];
"1000146" -> "1000111"  [label="AST: "];
"1000147" -> "1000146"  [label="AST: "];
"1000151" -> "1000146"  [label="CFG: "];
"1000146" -> "1000768"  [label="DDG: json_array_size(arr)"];
"1000146" -> "1000768"  [label="DDG: merkles"];
"1000146" -> "1000456"  [label="DDG: merkles"];
}
