digraph "0_php_cab1c3b3708eead315e033359d07049b23b147a3_5@pointer" {
"1000146" [label="(Call,*snmpval = NULL)"];
"1000612" [label="(Call,MAKE_STD_ZVAL(snmpval))"];
"1000632" [label="(Call,add_next_index_zval(return_value, snmpval))"];
"1000538" [label="(Call,Z_TYPE_P(return_value))"];
"1000537" [label="(Call,Z_TYPE_P(return_value) == IS_ARRAY)"];
"1000533" [label="(Call,(st & SNMP_CMD_WALK) && Z_TYPE_P(return_value) == IS_ARRAY)"];
"1000587" [label="(Call,Z_TYPE_P(return_value) == IS_ARRAY)"];
"1000588" [label="(Call,Z_TYPE_P(return_value))"];
"1000621" [label="(Call,Z_TYPE_P(return_value))"];
"1000620" [label="(Call,Z_TYPE_P(return_value) == IS_BOOL)"];
"1000975" [label="(Call,response->errstat != SNMP_ERR_NOSUCHNAME || Z_TYPE_P(return_value) == IS_BOOL)"];
"1000970" [label="(Call,!(st & SNMP_CMD_WALK) || response->errstat != SNMP_ERR_NOSUCHNAME || Z_TYPE_P(return_value) == IS_BOOL)"];
"1000981" [label="(Call,Z_TYPE_P(return_value) == IS_BOOL)"];
"1000625" [label="(Call,array_init(return_value))"];
"1000713" [label="(Call,add_assoc_zval(return_value, objid_query->vars[count].oid, snmpval))"];
"1000835" [label="(Call,zval_copy_ctor(return_value))"];
"1000982" [label="(Call,Z_TYPE_P(return_value))"];
"1001109" [label="(Call,zval_dtor(return_value))"];
"1001124" [label="(Call,zval_dtor(return_value))"];
"1001145" [label="(Call,zval_dtor(return_value))"];
"1000808" [label="(Call,add_assoc_zval(return_value, buf2, snmpval))"];
"1000824" [label="(Call,add_assoc_zval(return_value, buf2, snmpval))"];
"1000715" [label="(Call,objid_query->vars[count].oid)"];
"1001158" [label="(MethodReturn,static void)"];
"1001124" [label="(Call,zval_dtor(return_value))"];
"1000533" [label="(Call,(st & SNMP_CMD_WALK) && Z_TYPE_P(return_value) == IS_ARRAY)"];
"1001125" [label="(Identifier,return_value)"];
"1000590" [label="(Identifier,IS_ARRAY)"];
"1001111" [label="(Identifier,RETVAL_FALSE)"];
"1000622" [label="(Identifier,return_value)"];
"1000836" [label="(Identifier,return_value)"];
"1000829" [label="(Block,)"];
"1000800" [label="(Call,buf2[strlen(buf2) - 1] = '\0')"];
"1001152" [label="(Identifier,response)"];
"1000839" [label="(Identifier,snmpval)"];
"1000713" [label="(Call,add_assoc_zval(return_value, objid_query->vars[count].oid, snmpval))"];
"1000532" [label="(ControlStructure,if ((st & SNMP_CMD_WALK) && Z_TYPE_P(return_value) == IS_ARRAY))"];
"1000586" [label="(ControlStructure,if (Z_TYPE_P(return_value) == IS_ARRAY))"];
"1000813" [label="(Block,)"];
"1001110" [label="(Identifier,return_value)"];
"1000122" [label="(Block,)"];
"1000712" [label="(Block,)"];
"1000804" [label="(Call,strlen(buf2))"];
"1000632" [label="(Call,add_next_index_zval(return_value, snmpval))"];
"1000542" [label="(ControlStructure,break;)"];
"1000625" [label="(Call,array_init(return_value))"];
"1000809" [label="(Identifier,return_value)"];
"1000620" [label="(Call,Z_TYPE_P(return_value) == IS_BOOL)"];
"1000634" [label="(Identifier,snmpval)"];
"1000587" [label="(Call,Z_TYPE_P(return_value) == IS_ARRAY)"];
"1001146" [label="(Identifier,return_value)"];
"1000983" [label="(Identifier,return_value)"];
"1001108" [label="(Block,)"];
"1000147" [label="(Identifier,snmpval)"];
"1000623" [label="(Identifier,IS_BOOL)"];
"1000150" [label="(Identifier,RETVAL_FALSE)"];
"1000744" [label="(Block,)"];
"1000825" [label="(Identifier,return_value)"];
"1000633" [label="(Identifier,return_value)"];
"1000772" [label="(Call,buf2[0] = '\0')"];
"1000593" [label="(Identifier,keepwalking)"];
"1000613" [label="(Identifier,snmpval)"];
"1000589" [label="(Identifier,return_value)"];
"1001127" [label="(Identifier,ss)"];
"1000808" [label="(Call,add_assoc_zval(return_value, buf2, snmpval))"];
"1000835" [label="(Call,zval_copy_ctor(return_value))"];
"1000969" [label="(ControlStructure,if (!(st & SNMP_CMD_WALK) || response->errstat != SNMP_ERR_NOSUCHNAME || Z_TYPE_P(return_value) == IS_BOOL))"];
"1000814" [label="(Call,snprint_objid(buf2, sizeof(buf2), vars->name, vars->name_length))"];
"1000537" [label="(Call,Z_TYPE_P(return_value) == IS_ARRAY)"];
"1000616" [label="(Identifier,objid_query)"];
"1000631" [label="(Block,)"];
"1000722" [label="(Identifier,snmpval)"];
"1000982" [label="(Call,Z_TYPE_P(return_value))"];
"1000588" [label="(Call,Z_TYPE_P(return_value))"];
"1000629" [label="(Identifier,st)"];
"1001145" [label="(Call,zval_dtor(return_value))"];
"1000970" [label="(Call,!(st & SNMP_CMD_WALK) || response->errstat != SNMP_ERR_NOSUCHNAME || Z_TYPE_P(return_value) == IS_BOOL)"];
"1001109" [label="(Call,zval_dtor(return_value))"];
"1001148" [label="(Identifier,ss)"];
"1000824" [label="(Call,add_assoc_zval(return_value, buf2, snmpval))"];
"1000626" [label="(Identifier,return_value)"];
"1000624" [label="(Block,)"];
"1000146" [label="(Call,*snmpval = NULL)"];
"1000619" [label="(ControlStructure,if (Z_TYPE_P(return_value) == IS_BOOL))"];
"1001144" [label="(Block,)"];
"1000826" [label="(Identifier,buf2)"];
"1000539" [label="(Identifier,return_value)"];
"1000827" [label="(Identifier,snmpval)"];
"1000989" [label="(Identifier,count)"];
"1000714" [label="(Identifier,return_value)"];
"1000843" [label="(Identifier,st)"];
"1000810" [label="(Identifier,buf2)"];
"1000512" [label="(Block,)"];
"1000534" [label="(Call,st & SNMP_CMD_WALK)"];
"1000975" [label="(Call,response->errstat != SNMP_ERR_NOSUCHNAME || Z_TYPE_P(return_value) == IS_BOOL)"];
"1000621" [label="(Call,Z_TYPE_P(return_value))"];
"1000540" [label="(Identifier,IS_ARRAY)"];
"1000598" [label="(Identifier,st)"];
"1000544" [label="(Identifier,buf)"];
"1000745" [label="(Call,snprint_objid(buf2, sizeof(buf2), vars->name, vars->name_length))"];
"1000538" [label="(Call,Z_TYPE_P(return_value))"];
"1000612" [label="(Call,MAKE_STD_ZVAL(snmpval))"];
"1000811" [label="(Identifier,snmpval)"];
"1000148" [label="(Identifier,NULL)"];
"1000981" [label="(Call,Z_TYPE_P(return_value) == IS_BOOL)"];
"1000976" [label="(Call,response->errstat != SNMP_ERR_NOSUCHNAME)"];
"1001123" [label="(Block,)"];
"1000971" [label="(Call,!(st & SNMP_CMD_WALK))"];
"1000984" [label="(Identifier,IS_BOOL)"];
"1000146" -> "1000122"  [label="AST: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000150" -> "1000146"  [label="CFG: "];
"1000146" -> "1001158"  [label="DDG: snmpval"];
"1000146" -> "1000612"  [label="DDG: snmpval"];
"1000612" -> "1000512"  [label="AST: "];
"1000612" -> "1000613"  [label="CFG: "];
"1000613" -> "1000612"  [label="AST: "];
"1000616" -> "1000612"  [label="CFG: "];
"1000612" -> "1001158"  [label="DDG: snmpval"];
"1000612" -> "1001158"  [label="DDG: MAKE_STD_ZVAL(snmpval)"];
"1000824" -> "1000612"  [label="DDG: snmpval"];
"1000808" -> "1000612"  [label="DDG: snmpval"];
"1000713" -> "1000612"  [label="DDG: snmpval"];
"1000632" -> "1000612"  [label="DDG: snmpval"];
"1000612" -> "1000632"  [label="DDG: snmpval"];
"1000612" -> "1000713"  [label="DDG: snmpval"];
"1000612" -> "1000808"  [label="DDG: snmpval"];
"1000612" -> "1000824"  [label="DDG: snmpval"];
"1000632" -> "1000631"  [label="AST: "];
"1000632" -> "1000634"  [label="CFG: "];
"1000633" -> "1000632"  [label="AST: "];
"1000634" -> "1000632"  [label="AST: "];
"1000843" -> "1000632"  [label="CFG: "];
"1000632" -> "1001158"  [label="DDG: add_next_index_zval(return_value, snmpval)"];
"1000632" -> "1001158"  [label="DDG: return_value"];
"1000632" -> "1001158"  [label="DDG: snmpval"];
"1000632" -> "1000538"  [label="DDG: return_value"];
"1000632" -> "1000588"  [label="DDG: return_value"];
"1000632" -> "1000621"  [label="DDG: return_value"];
"1000621" -> "1000632"  [label="DDG: return_value"];
"1000625" -> "1000632"  [label="DDG: return_value"];
"1000632" -> "1000835"  [label="DDG: return_value"];
"1000632" -> "1000982"  [label="DDG: return_value"];
"1000632" -> "1001109"  [label="DDG: return_value"];
"1000632" -> "1001124"  [label="DDG: return_value"];
"1000632" -> "1001145"  [label="DDG: return_value"];
"1000538" -> "1000537"  [label="AST: "];
"1000538" -> "1000539"  [label="CFG: "];
"1000539" -> "1000538"  [label="AST: "];
"1000540" -> "1000538"  [label="CFG: "];
"1000538" -> "1001158"  [label="DDG: return_value"];
"1000538" -> "1000537"  [label="DDG: return_value"];
"1000713" -> "1000538"  [label="DDG: return_value"];
"1000621" -> "1000538"  [label="DDG: return_value"];
"1000588" -> "1000538"  [label="DDG: return_value"];
"1000625" -> "1000538"  [label="DDG: return_value"];
"1000808" -> "1000538"  [label="DDG: return_value"];
"1000982" -> "1000538"  [label="DDG: return_value"];
"1000835" -> "1000538"  [label="DDG: return_value"];
"1000824" -> "1000538"  [label="DDG: return_value"];
"1000538" -> "1000588"  [label="DDG: return_value"];
"1000538" -> "1000621"  [label="DDG: return_value"];
"1000538" -> "1000835"  [label="DDG: return_value"];
"1000538" -> "1000982"  [label="DDG: return_value"];
"1000538" -> "1001109"  [label="DDG: return_value"];
"1000538" -> "1001124"  [label="DDG: return_value"];
"1000538" -> "1001145"  [label="DDG: return_value"];
"1000537" -> "1000533"  [label="AST: "];
"1000537" -> "1000540"  [label="CFG: "];
"1000540" -> "1000537"  [label="AST: "];
"1000533" -> "1000537"  [label="CFG: "];
"1000537" -> "1001158"  [label="DDG: IS_ARRAY"];
"1000537" -> "1001158"  [label="DDG: Z_TYPE_P(return_value)"];
"1000537" -> "1000533"  [label="DDG: Z_TYPE_P(return_value)"];
"1000537" -> "1000533"  [label="DDG: IS_ARRAY"];
"1000587" -> "1000537"  [label="DDG: IS_ARRAY"];
"1000537" -> "1000587"  [label="DDG: IS_ARRAY"];
"1000533" -> "1000532"  [label="AST: "];
"1000533" -> "1000534"  [label="CFG: "];
"1000534" -> "1000533"  [label="AST: "];
"1000542" -> "1000533"  [label="CFG: "];
"1000544" -> "1000533"  [label="CFG: "];
"1000533" -> "1001158"  [label="DDG: (st & SNMP_CMD_WALK) && Z_TYPE_P(return_value) == IS_ARRAY"];
"1000533" -> "1001158"  [label="DDG: st & SNMP_CMD_WALK"];
"1000533" -> "1001158"  [label="DDG: Z_TYPE_P(return_value) == IS_ARRAY"];
"1000534" -> "1000533"  [label="DDG: st"];
"1000534" -> "1000533"  [label="DDG: SNMP_CMD_WALK"];
"1000587" -> "1000533"  [label="DDG: Z_TYPE_P(return_value) == IS_ARRAY"];
"1000587" -> "1000586"  [label="AST: "];
"1000587" -> "1000590"  [label="CFG: "];
"1000588" -> "1000587"  [label="AST: "];
"1000590" -> "1000587"  [label="AST: "];
"1000593" -> "1000587"  [label="CFG: "];
"1000598" -> "1000587"  [label="CFG: "];
"1000587" -> "1001158"  [label="DDG: IS_ARRAY"];
"1000587" -> "1001158"  [label="DDG: Z_TYPE_P(return_value)"];
"1000587" -> "1001158"  [label="DDG: Z_TYPE_P(return_value) == IS_ARRAY"];
"1000588" -> "1000587"  [label="DDG: return_value"];
"1000588" -> "1000589"  [label="CFG: "];
"1000589" -> "1000588"  [label="AST: "];
"1000590" -> "1000588"  [label="CFG: "];
"1000588" -> "1001158"  [label="DDG: return_value"];
"1000713" -> "1000588"  [label="DDG: return_value"];
"1000621" -> "1000588"  [label="DDG: return_value"];
"1000625" -> "1000588"  [label="DDG: return_value"];
"1000808" -> "1000588"  [label="DDG: return_value"];
"1000982" -> "1000588"  [label="DDG: return_value"];
"1000835" -> "1000588"  [label="DDG: return_value"];
"1000824" -> "1000588"  [label="DDG: return_value"];
"1000588" -> "1000621"  [label="DDG: return_value"];
"1000588" -> "1000835"  [label="DDG: return_value"];
"1000588" -> "1000982"  [label="DDG: return_value"];
"1000588" -> "1001109"  [label="DDG: return_value"];
"1000588" -> "1001124"  [label="DDG: return_value"];
"1000588" -> "1001145"  [label="DDG: return_value"];
"1000621" -> "1000620"  [label="AST: "];
"1000621" -> "1000622"  [label="CFG: "];
"1000622" -> "1000621"  [label="AST: "];
"1000623" -> "1000621"  [label="CFG: "];
"1000621" -> "1001158"  [label="DDG: return_value"];
"1000621" -> "1000620"  [label="DDG: return_value"];
"1000713" -> "1000621"  [label="DDG: return_value"];
"1000625" -> "1000621"  [label="DDG: return_value"];
"1000808" -> "1000621"  [label="DDG: return_value"];
"1000982" -> "1000621"  [label="DDG: return_value"];
"1000835" -> "1000621"  [label="DDG: return_value"];
"1000824" -> "1000621"  [label="DDG: return_value"];
"1000621" -> "1000625"  [label="DDG: return_value"];
"1000621" -> "1000713"  [label="DDG: return_value"];
"1000621" -> "1000808"  [label="DDG: return_value"];
"1000621" -> "1000824"  [label="DDG: return_value"];
"1000621" -> "1000835"  [label="DDG: return_value"];
"1000621" -> "1000982"  [label="DDG: return_value"];
"1000621" -> "1001109"  [label="DDG: return_value"];
"1000621" -> "1001124"  [label="DDG: return_value"];
"1000621" -> "1001145"  [label="DDG: return_value"];
"1000620" -> "1000619"  [label="AST: "];
"1000620" -> "1000623"  [label="CFG: "];
"1000623" -> "1000620"  [label="AST: "];
"1000626" -> "1000620"  [label="CFG: "];
"1000629" -> "1000620"  [label="CFG: "];
"1000620" -> "1001158"  [label="DDG: IS_BOOL"];
"1000620" -> "1001158"  [label="DDG: Z_TYPE_P(return_value)"];
"1000620" -> "1001158"  [label="DDG: Z_TYPE_P(return_value) == IS_BOOL"];
"1000981" -> "1000620"  [label="DDG: IS_BOOL"];
"1000620" -> "1000975"  [label="DDG: Z_TYPE_P(return_value) == IS_BOOL"];
"1000620" -> "1000981"  [label="DDG: IS_BOOL"];
"1000975" -> "1000970"  [label="AST: "];
"1000975" -> "1000976"  [label="CFG: "];
"1000975" -> "1000981"  [label="CFG: "];
"1000976" -> "1000975"  [label="AST: "];
"1000981" -> "1000975"  [label="AST: "];
"1000970" -> "1000975"  [label="CFG: "];
"1000975" -> "1001158"  [label="DDG: Z_TYPE_P(return_value) == IS_BOOL"];
"1000975" -> "1001158"  [label="DDG: response->errstat != SNMP_ERR_NOSUCHNAME"];
"1000975" -> "1000970"  [label="DDG: response->errstat != SNMP_ERR_NOSUCHNAME"];
"1000975" -> "1000970"  [label="DDG: Z_TYPE_P(return_value) == IS_BOOL"];
"1000976" -> "1000975"  [label="DDG: response->errstat"];
"1000976" -> "1000975"  [label="DDG: SNMP_ERR_NOSUCHNAME"];
"1000981" -> "1000975"  [label="DDG: Z_TYPE_P(return_value)"];
"1000981" -> "1000975"  [label="DDG: IS_BOOL"];
"1000970" -> "1000969"  [label="AST: "];
"1000970" -> "1000971"  [label="CFG: "];
"1000971" -> "1000970"  [label="AST: "];
"1000989" -> "1000970"  [label="CFG: "];
"1001152" -> "1000970"  [label="CFG: "];
"1000970" -> "1001158"  [label="DDG: response->errstat != SNMP_ERR_NOSUCHNAME || Z_TYPE_P(return_value) == IS_BOOL"];
"1000970" -> "1001158"  [label="DDG: !(st & SNMP_CMD_WALK)"];
"1000970" -> "1001158"  [label="DDG: !(st & SNMP_CMD_WALK) || response->errstat != SNMP_ERR_NOSUCHNAME || Z_TYPE_P(return_value) == IS_BOOL"];
"1000971" -> "1000970"  [label="DDG: st & SNMP_CMD_WALK"];
"1000981" -> "1000984"  [label="CFG: "];
"1000982" -> "1000981"  [label="AST: "];
"1000984" -> "1000981"  [label="AST: "];
"1000981" -> "1001158"  [label="DDG: IS_BOOL"];
"1000981" -> "1001158"  [label="DDG: Z_TYPE_P(return_value)"];
"1000982" -> "1000981"  [label="DDG: return_value"];
"1000625" -> "1000624"  [label="AST: "];
"1000625" -> "1000626"  [label="CFG: "];
"1000626" -> "1000625"  [label="AST: "];
"1000629" -> "1000625"  [label="CFG: "];
"1000625" -> "1001158"  [label="DDG: return_value"];
"1000625" -> "1001158"  [label="DDG: array_init(return_value)"];
"1000625" -> "1000713"  [label="DDG: return_value"];
"1000625" -> "1000808"  [label="DDG: return_value"];
"1000625" -> "1000824"  [label="DDG: return_value"];
"1000625" -> "1000835"  [label="DDG: return_value"];
"1000625" -> "1000982"  [label="DDG: return_value"];
"1000625" -> "1001109"  [label="DDG: return_value"];
"1000625" -> "1001124"  [label="DDG: return_value"];
"1000625" -> "1001145"  [label="DDG: return_value"];
"1000713" -> "1000712"  [label="AST: "];
"1000713" -> "1000722"  [label="CFG: "];
"1000714" -> "1000713"  [label="AST: "];
"1000715" -> "1000713"  [label="AST: "];
"1000722" -> "1000713"  [label="AST: "];
"1000843" -> "1000713"  [label="CFG: "];
"1000713" -> "1001158"  [label="DDG: return_value"];
"1000713" -> "1001158"  [label="DDG: objid_query->vars[count].oid"];
"1000713" -> "1001158"  [label="DDG: add_assoc_zval(return_value, objid_query->vars[count].oid, snmpval)"];
"1000713" -> "1001158"  [label="DDG: snmpval"];
"1000713" -> "1000835"  [label="DDG: return_value"];
"1000713" -> "1000982"  [label="DDG: return_value"];
"1000713" -> "1001109"  [label="DDG: return_value"];
"1000713" -> "1001124"  [label="DDG: return_value"];
"1000713" -> "1001145"  [label="DDG: return_value"];
"1000835" -> "1000829"  [label="AST: "];
"1000835" -> "1000836"  [label="CFG: "];
"1000836" -> "1000835"  [label="AST: "];
"1000839" -> "1000835"  [label="CFG: "];
"1000835" -> "1001158"  [label="DDG: zval_copy_ctor(return_value)"];
"1000835" -> "1001158"  [label="DDG: return_value"];
"1000808" -> "1000835"  [label="DDG: return_value"];
"1000982" -> "1000835"  [label="DDG: return_value"];
"1000824" -> "1000835"  [label="DDG: return_value"];
"1000835" -> "1000982"  [label="DDG: return_value"];
"1000835" -> "1001109"  [label="DDG: return_value"];
"1000835" -> "1001124"  [label="DDG: return_value"];
"1000835" -> "1001145"  [label="DDG: return_value"];
"1000982" -> "1000983"  [label="CFG: "];
"1000983" -> "1000982"  [label="AST: "];
"1000984" -> "1000982"  [label="CFG: "];
"1000982" -> "1001158"  [label="DDG: return_value"];
"1000808" -> "1000982"  [label="DDG: return_value"];
"1000824" -> "1000982"  [label="DDG: return_value"];
"1000982" -> "1001109"  [label="DDG: return_value"];
"1000982" -> "1001124"  [label="DDG: return_value"];
"1000982" -> "1001145"  [label="DDG: return_value"];
"1001109" -> "1001108"  [label="AST: "];
"1001109" -> "1001110"  [label="CFG: "];
"1001110" -> "1001109"  [label="AST: "];
"1001111" -> "1001109"  [label="CFG: "];
"1001109" -> "1001158"  [label="DDG: return_value"];
"1001109" -> "1001158"  [label="DDG: zval_dtor(return_value)"];
"1000808" -> "1001109"  [label="DDG: return_value"];
"1000824" -> "1001109"  [label="DDG: return_value"];
"1001124" -> "1001123"  [label="AST: "];
"1001124" -> "1001125"  [label="CFG: "];
"1001125" -> "1001124"  [label="AST: "];
"1001127" -> "1001124"  [label="CFG: "];
"1001124" -> "1001158"  [label="DDG: zval_dtor(return_value)"];
"1001124" -> "1001158"  [label="DDG: return_value"];
"1000808" -> "1001124"  [label="DDG: return_value"];
"1000824" -> "1001124"  [label="DDG: return_value"];
"1001145" -> "1001144"  [label="AST: "];
"1001145" -> "1001146"  [label="CFG: "];
"1001146" -> "1001145"  [label="AST: "];
"1001148" -> "1001145"  [label="CFG: "];
"1001145" -> "1001158"  [label="DDG: return_value"];
"1001145" -> "1001158"  [label="DDG: zval_dtor(return_value)"];
"1000808" -> "1001145"  [label="DDG: return_value"];
"1000824" -> "1001145"  [label="DDG: return_value"];
"1000808" -> "1000744"  [label="AST: "];
"1000808" -> "1000811"  [label="CFG: "];
"1000809" -> "1000808"  [label="AST: "];
"1000810" -> "1000808"  [label="AST: "];
"1000811" -> "1000808"  [label="AST: "];
"1000843" -> "1000808"  [label="CFG: "];
"1000808" -> "1001158"  [label="DDG: buf2"];
"1000808" -> "1001158"  [label="DDG: add_assoc_zval(return_value, buf2, snmpval)"];
"1000808" -> "1001158"  [label="DDG: return_value"];
"1000808" -> "1001158"  [label="DDG: snmpval"];
"1000804" -> "1000808"  [label="DDG: buf2"];
"1000772" -> "1000808"  [label="DDG: buf2[0]"];
"1000745" -> "1000808"  [label="DDG: buf2"];
"1000800" -> "1000808"  [label="DDG: buf2[strlen(buf2) - 1]"];
"1000824" -> "1000813"  [label="AST: "];
"1000824" -> "1000827"  [label="CFG: "];
"1000825" -> "1000824"  [label="AST: "];
"1000826" -> "1000824"  [label="AST: "];
"1000827" -> "1000824"  [label="AST: "];
"1000843" -> "1000824"  [label="CFG: "];
"1000824" -> "1001158"  [label="DDG: snmpval"];
"1000824" -> "1001158"  [label="DDG: add_assoc_zval(return_value, buf2, snmpval)"];
"1000824" -> "1001158"  [label="DDG: buf2"];
"1000824" -> "1001158"  [label="DDG: return_value"];
"1000772" -> "1000824"  [label="DDG: buf2[0]"];
"1000814" -> "1000824"  [label="DDG: buf2"];
"1000800" -> "1000824"  [label="DDG: buf2[strlen(buf2) - 1]"];
}
