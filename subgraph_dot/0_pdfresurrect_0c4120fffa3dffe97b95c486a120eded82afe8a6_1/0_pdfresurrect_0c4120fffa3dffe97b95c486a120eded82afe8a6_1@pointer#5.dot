digraph "0_pdfresurrect_0c4120fffa3dffe97b95c486a120eded82afe8a6_1@pointer" {
"1000189" [label="(Call,str[idx+3] == 'F')"];
"1000104" [label="(MethodParameterIn,const char *str)"];
"1000181" [label="(Call,(str[idx+2] == 'F') && (str[idx+3] == 'F'))"];
"1000173" [label="(Call,(str[idx+1] == 'E') &&\n        (str[idx+2] == 'F') && (str[idx+3] == 'F'))"];
"1000167" [label="(Call,(str[idx] == 'F') && (str[idx+1] == 'E') &&\n        (str[idx+2] == 'F') && (str[idx+3] == 'F'))"];
"1000163" [label="(Call,(str_len > 5) && \n        (str[idx] == 'F') && (str[idx+1] == 'E') &&\n        (str[idx+2] == 'F') && (str[idx+3] == 'F'))"];
"1000161" [label="(Call,is_hex && (str_len > 5) && \n        (str[idx] == 'F') && (str[idx+1] == 'E') &&\n        (str[idx+2] == 'F') && (str[idx+3] == 'F'))"];
"1000205" [label="(Identifier,NULL)"];
"1000198" [label="(Identifier,is_utf16be)"];
"1000167" [label="(Call,(str[idx] == 'F') && (str[idx+1] == 'E') &&\n        (str[idx+2] == 'F') && (str[idx+3] == 'F'))"];
"1000182" [label="(Call,str[idx+2] == 'F')"];
"1000174" [label="(Call,str[idx+1] == 'E')"];
"1000161" [label="(Call,is_hex && (str_len > 5) && \n        (str[idx] == 'F') && (str[idx+1] == 'E') &&\n        (str[idx+2] == 'F') && (str[idx+3] == 'F'))"];
"1000155" [label="(Call,is_hex = 1)"];
"1000259" [label="(MethodReturn,static char *)"];
"1000195" [label="(Literal,'F')"];
"1000138" [label="(Call,strncpy(ascii, str, strlen(str) + 1))"];
"1000181" [label="(Call,(str[idx+2] == 'F') && (str[idx+3] == 'F'))"];
"1000173" [label="(Call,(str[idx+1] == 'E') &&\n        (str[idx+2] == 'F') && (str[idx+3] == 'F'))"];
"1000142" [label="(Call,strlen(str))"];
"1000115" [label="(Call,is_hex = is_utf16be = idx = ascii_idx = 0)"];
"1000233" [label="(Call,hex_buf[2] = str[idx++])"];
"1000225" [label="(Call,hex_buf[1] = str[idx++])"];
"1000189" [label="(Call,str[idx+3] == 'F')"];
"1000104" [label="(MethodParameterIn,const char *str)"];
"1000241" [label="(Call,hex_buf[3] = str[idx])"];
"1000217" [label="(Call,hex_buf[0] = str[idx++])"];
"1000163" [label="(Call,(str_len > 5) && \n        (str[idx] == 'F') && (str[idx+1] == 'E') &&\n        (str[idx+2] == 'F') && (str[idx+3] == 'F'))"];
"1000162" [label="(Identifier,is_hex)"];
"1000125" [label="(Call,str[0] == '(')"];
"1000149" [label="(Call,str[0] == '<')"];
"1000168" [label="(Call,str[idx] == 'F')"];
"1000135" [label="(Call,strlen(str))"];
"1000190" [label="(Call,str[idx+3])"];
"1000160" [label="(ControlStructure,if (is_hex && (str_len > 5) && \n        (str[idx] == 'F') && (str[idx+1] == 'E') &&\n        (str[idx+2] == 'F') && (str[idx+3] == 'F')))"];
"1000164" [label="(Call,str_len > 5)"];
"1000189" -> "1000181"  [label="AST: "];
"1000189" -> "1000195"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000195" -> "1000189"  [label="AST: "];
"1000181" -> "1000189"  [label="CFG: "];
"1000189" -> "1000259"  [label="DDG: str[idx+3]"];
"1000189" -> "1000181"  [label="DDG: str[idx+3]"];
"1000189" -> "1000181"  [label="DDG: 'F'"];
"1000104" -> "1000189"  [label="DDG: str"];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000259"  [label="DDG: str"];
"1000104" -> "1000125"  [label="DDG: str"];
"1000104" -> "1000135"  [label="DDG: str"];
"1000104" -> "1000138"  [label="DDG: str"];
"1000104" -> "1000142"  [label="DDG: str"];
"1000104" -> "1000149"  [label="DDG: str"];
"1000104" -> "1000168"  [label="DDG: str"];
"1000104" -> "1000174"  [label="DDG: str"];
"1000104" -> "1000182"  [label="DDG: str"];
"1000104" -> "1000217"  [label="DDG: str"];
"1000104" -> "1000225"  [label="DDG: str"];
"1000104" -> "1000233"  [label="DDG: str"];
"1000104" -> "1000241"  [label="DDG: str"];
"1000181" -> "1000173"  [label="AST: "];
"1000181" -> "1000182"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000173" -> "1000181"  [label="CFG: "];
"1000181" -> "1000259"  [label="DDG: str[idx+2] == 'F'"];
"1000181" -> "1000259"  [label="DDG: str[idx+3] == 'F'"];
"1000181" -> "1000173"  [label="DDG: str[idx+2] == 'F'"];
"1000181" -> "1000173"  [label="DDG: str[idx+3] == 'F'"];
"1000182" -> "1000181"  [label="DDG: str[idx+2]"];
"1000182" -> "1000181"  [label="DDG: 'F'"];
"1000173" -> "1000167"  [label="AST: "];
"1000173" -> "1000174"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000167" -> "1000173"  [label="CFG: "];
"1000173" -> "1000259"  [label="DDG: (str[idx+2] == 'F') && (str[idx+3] == 'F')"];
"1000173" -> "1000259"  [label="DDG: str[idx+1] == 'E'"];
"1000173" -> "1000167"  [label="DDG: str[idx+1] == 'E'"];
"1000173" -> "1000167"  [label="DDG: (str[idx+2] == 'F') && (str[idx+3] == 'F')"];
"1000174" -> "1000173"  [label="DDG: str[idx+1]"];
"1000174" -> "1000173"  [label="DDG: 'E'"];
"1000167" -> "1000163"  [label="AST: "];
"1000167" -> "1000168"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000163" -> "1000167"  [label="CFG: "];
"1000167" -> "1000259"  [label="DDG: str[idx] == 'F'"];
"1000167" -> "1000259"  [label="DDG: (str[idx+1] == 'E') &&\n        (str[idx+2] == 'F') && (str[idx+3] == 'F')"];
"1000167" -> "1000163"  [label="DDG: str[idx] == 'F'"];
"1000167" -> "1000163"  [label="DDG: (str[idx+1] == 'E') &&\n        (str[idx+2] == 'F') && (str[idx+3] == 'F')"];
"1000168" -> "1000167"  [label="DDG: str[idx]"];
"1000168" -> "1000167"  [label="DDG: 'F'"];
"1000163" -> "1000161"  [label="AST: "];
"1000163" -> "1000164"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000163" -> "1000259"  [label="DDG: str_len > 5"];
"1000163" -> "1000259"  [label="DDG: (str[idx] == 'F') && (str[idx+1] == 'E') &&\n        (str[idx+2] == 'F') && (str[idx+3] == 'F')"];
"1000163" -> "1000161"  [label="DDG: str_len > 5"];
"1000163" -> "1000161"  [label="DDG: (str[idx] == 'F') && (str[idx+1] == 'E') &&\n        (str[idx+2] == 'F') && (str[idx+3] == 'F')"];
"1000164" -> "1000163"  [label="DDG: str_len"];
"1000164" -> "1000163"  [label="DDG: 5"];
"1000161" -> "1000160"  [label="AST: "];
"1000161" -> "1000162"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000198" -> "1000161"  [label="CFG: "];
"1000205" -> "1000161"  [label="CFG: "];
"1000161" -> "1000259"  [label="DDG: (str_len > 5) && \n        (str[idx] == 'F') && (str[idx+1] == 'E') &&\n        (str[idx+2] == 'F') && (str[idx+3] == 'F')"];
"1000161" -> "1000259"  [label="DDG: is_hex"];
"1000161" -> "1000259"  [label="DDG: is_hex && (str_len > 5) && \n        (str[idx] == 'F') && (str[idx+1] == 'E') &&\n        (str[idx+2] == 'F') && (str[idx+3] == 'F')"];
"1000155" -> "1000161"  [label="DDG: is_hex"];
"1000115" -> "1000161"  [label="DDG: is_hex"];
}
