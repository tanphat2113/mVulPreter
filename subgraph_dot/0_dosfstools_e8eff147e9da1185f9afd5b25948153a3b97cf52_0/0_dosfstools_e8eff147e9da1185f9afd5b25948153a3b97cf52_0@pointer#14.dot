digraph "0_dosfstools_e8eff147e9da1185f9afd5b25948153a3b97cf52_0@pointer" {
"1000439" [label="(Call,fs->fat_bits = (fs->data_clusters >= FAT12_THRESHOLD) ? 16 : 12)"];
"1000509" [label="(Call,fs->fat_bits == 32)"];
"1000504" [label="(Call,fs->eff_fat_bits = (fs->fat_bits == 32) ? 28 : fs->fat_bits)"];
"1000508" [label="(Call,(fs->fat_bits == 32) ? 28 : fs->fat_bits)"];
"1000535" [label="(Call,fs->fat_bits == 12)"];
"1000534" [label="(Call,fs->fat_bits == 12 || fs->fat_bits == 16)"];
"1000540" [label="(Call,fs->fat_bits == 16)"];
"1000575" [label="(Call,fs->fat_bits == 32)"];
"1000610" [label="(Call,8 / fs->fat_bits)"];
"1000604" [label="(Call,(uint64_t)fs->fat_size * 8 / fs->fat_bits)"];
"1000602" [label="(Call,total_fat_entries = (uint64_t)fs->fat_size * 8 / fs->fat_bits)"];
"1000620" [label="(Call,total_fat_entries - 2)"];
"1000616" [label="(Call,fs->data_clusters > total_fat_entries - 2)"];
"1000623" [label="(Call,die(\"Filesystem has %u clusters but only space for %u FAT entries.\",\n\t    fs->data_clusters, total_fat_entries - 2))"];
"1000628" [label="(Call,total_fat_entries - 2)"];
"1000630" [label="(Literal,2)"];
"1000603" [label="(Identifier,total_fat_entries)"];
"1000624" [label="(Literal,\"Filesystem has %u clusters but only space for %u FAT entries.\")"];
"1000454" [label="(Identifier,fs)"];
"1000611" [label="(Literal,8)"];
"1000629" [label="(Identifier,total_fat_entries)"];
"1000520" [label="(Identifier,fs)"];
"1000612" [label="(Call,fs->fat_bits)"];
"1000457" [label="(Call,die(\"Too many clusters (%lu) for FAT16 filesystem.\", fs->data_clusters))"];
"1000397" [label="(Call,fs->data_clusters < FAT16_THRESHOLD)"];
"1000539" [label="(Literal,12)"];
"1000615" [label="(ControlStructure,if (fs->data_clusters > total_fat_entries - 2))"];
"1000623" [label="(Call,die(\"Filesystem has %u clusters but only space for %u FAT entries.\",\n\t    fs->data_clusters, total_fat_entries - 2))"];
"1000604" [label="(Call,(uint64_t)fs->fat_size * 8 / fs->fat_bits)"];
"1000621" [label="(Identifier,total_fat_entries)"];
"1000618" [label="(Identifier,fs)"];
"1000622" [label="(Literal,2)"];
"1000687" [label="(MethodReturn,void)"];
"1000620" [label="(Call,total_fat_entries - 2)"];
"1000499" [label="(Call,fs->fat_bits = 12)"];
"1000542" [label="(Identifier,fs)"];
"1000628" [label="(Call,total_fat_entries - 2)"];
"1000616" [label="(Call,fs->data_clusters > total_fat_entries - 2)"];
"1000635" [label="(Identifier,fs)"];
"1000584" [label="(Identifier,b)"];
"1000577" [label="(Identifier,fs)"];
"1000541" [label="(Call,fs->fat_bits)"];
"1000536" [label="(Call,fs->fat_bits)"];
"1000516" [label="(Identifier,fs)"];
"1000535" [label="(Call,fs->fat_bits == 12)"];
"1000514" [label="(Literal,28)"];
"1000574" [label="(ControlStructure,if (fs->fat_bits == 32))"];
"1000605" [label="(Call,(uint64_t)fs->fat_size)"];
"1000625" [label="(Call,fs->data_clusters)"];
"1000602" [label="(Call,total_fat_entries = (uint64_t)fs->fat_size * 8 / fs->fat_bits)"];
"1000348" [label="(Call,fs->fat_bits = 32)"];
"1000439" [label="(Call,fs->fat_bits = (fs->data_clusters >= FAT12_THRESHOLD) ? 16 : 12)"];
"1000468" [label="(Call,fs->fat_bits = 16)"];
"1000443" [label="(Call,(fs->data_clusters >= FAT12_THRESHOLD) ? 16 : 12)"];
"1000440" [label="(Call,fs->fat_bits)"];
"1000504" [label="(Call,fs->eff_fat_bits = (fs->fat_bits == 32) ? 28 : fs->fat_bits)"];
"1000576" [label="(Call,fs->fat_bits)"];
"1000617" [label="(Call,fs->data_clusters)"];
"1000510" [label="(Call,fs->fat_bits)"];
"1000404" [label="(Call,(unsigned long)fs->data_clusters)"];
"1000533" [label="(ControlStructure,if (fs->fat_bits == 12 || fs->fat_bits == 16))"];
"1000544" [label="(Literal,16)"];
"1000575" [label="(Call,fs->fat_bits == 32)"];
"1000548" [label="(Identifier,b16)"];
"1000313" [label="(Call,fs->data_clusters = data_size / fs->cluster_size)"];
"1000452" [label="(Call,fs->data_clusters >= FAT16_THRESHOLD)"];
"1000534" [label="(Call,fs->fat_bits == 12 || fs->fat_bits == 16)"];
"1000438" [label="(Block,)"];
"1000508" [label="(Call,(fs->fat_bits == 32) ? 28 : fs->fat_bits)"];
"1000505" [label="(Call,fs->eff_fat_bits)"];
"1000513" [label="(Literal,32)"];
"1000540" [label="(Call,fs->fat_bits == 16)"];
"1000509" [label="(Call,fs->fat_bits == 32)"];
"1000515" [label="(Call,fs->fat_bits)"];
"1000610" [label="(Call,8 / fs->fat_bits)"];
"1000579" [label="(Literal,32)"];
"1000117" [label="(Block,)"];
"1000439" -> "1000438"  [label="AST: "];
"1000439" -> "1000443"  [label="CFG: "];
"1000440" -> "1000439"  [label="AST: "];
"1000443" -> "1000439"  [label="AST: "];
"1000454" -> "1000439"  [label="CFG: "];
"1000439" -> "1000687"  [label="DDG: "];
"1000439" -> "1000509"  [label="DDG: "];
"1000509" -> "1000508"  [label="AST: "];
"1000509" -> "1000513"  [label="CFG: "];
"1000510" -> "1000509"  [label="AST: "];
"1000513" -> "1000509"  [label="AST: "];
"1000514" -> "1000509"  [label="CFG: "];
"1000516" -> "1000509"  [label="CFG: "];
"1000509" -> "1000504"  [label="DDG: "];
"1000348" -> "1000509"  [label="DDG: "];
"1000468" -> "1000509"  [label="DDG: "];
"1000499" -> "1000509"  [label="DDG: "];
"1000509" -> "1000508"  [label="DDG: "];
"1000509" -> "1000535"  [label="DDG: "];
"1000504" -> "1000117"  [label="AST: "];
"1000504" -> "1000508"  [label="CFG: "];
"1000505" -> "1000504"  [label="AST: "];
"1000508" -> "1000504"  [label="AST: "];
"1000520" -> "1000504"  [label="CFG: "];
"1000504" -> "1000687"  [label="DDG: "];
"1000504" -> "1000687"  [label="DDG: "];
"1000508" -> "1000514"  [label="CFG: "];
"1000508" -> "1000515"  [label="CFG: "];
"1000514" -> "1000508"  [label="AST: "];
"1000515" -> "1000508"  [label="AST: "];
"1000508" -> "1000687"  [label="DDG: "];
"1000535" -> "1000534"  [label="AST: "];
"1000535" -> "1000539"  [label="CFG: "];
"1000536" -> "1000535"  [label="AST: "];
"1000539" -> "1000535"  [label="AST: "];
"1000542" -> "1000535"  [label="CFG: "];
"1000534" -> "1000535"  [label="CFG: "];
"1000535" -> "1000534"  [label="DDG: "];
"1000535" -> "1000534"  [label="DDG: "];
"1000535" -> "1000540"  [label="DDG: "];
"1000535" -> "1000575"  [label="DDG: "];
"1000535" -> "1000610"  [label="DDG: "];
"1000534" -> "1000533"  [label="AST: "];
"1000534" -> "1000540"  [label="CFG: "];
"1000540" -> "1000534"  [label="AST: "];
"1000548" -> "1000534"  [label="CFG: "];
"1000577" -> "1000534"  [label="CFG: "];
"1000534" -> "1000687"  [label="DDG: "];
"1000534" -> "1000687"  [label="DDG: "];
"1000534" -> "1000687"  [label="DDG: "];
"1000540" -> "1000534"  [label="DDG: "];
"1000540" -> "1000534"  [label="DDG: "];
"1000540" -> "1000544"  [label="CFG: "];
"1000541" -> "1000540"  [label="AST: "];
"1000544" -> "1000540"  [label="AST: "];
"1000540" -> "1000575"  [label="DDG: "];
"1000540" -> "1000610"  [label="DDG: "];
"1000575" -> "1000574"  [label="AST: "];
"1000575" -> "1000579"  [label="CFG: "];
"1000576" -> "1000575"  [label="AST: "];
"1000579" -> "1000575"  [label="AST: "];
"1000584" -> "1000575"  [label="CFG: "];
"1000603" -> "1000575"  [label="CFG: "];
"1000575" -> "1000687"  [label="DDG: "];
"1000575" -> "1000610"  [label="DDG: "];
"1000610" -> "1000604"  [label="AST: "];
"1000610" -> "1000612"  [label="CFG: "];
"1000611" -> "1000610"  [label="AST: "];
"1000612" -> "1000610"  [label="AST: "];
"1000604" -> "1000610"  [label="CFG: "];
"1000610" -> "1000687"  [label="DDG: "];
"1000610" -> "1000604"  [label="DDG: "];
"1000610" -> "1000604"  [label="DDG: "];
"1000604" -> "1000602"  [label="AST: "];
"1000605" -> "1000604"  [label="AST: "];
"1000602" -> "1000604"  [label="CFG: "];
"1000604" -> "1000687"  [label="DDG: "];
"1000604" -> "1000687"  [label="DDG: "];
"1000604" -> "1000602"  [label="DDG: "];
"1000604" -> "1000602"  [label="DDG: "];
"1000605" -> "1000604"  [label="DDG: "];
"1000602" -> "1000117"  [label="AST: "];
"1000603" -> "1000602"  [label="AST: "];
"1000618" -> "1000602"  [label="CFG: "];
"1000602" -> "1000687"  [label="DDG: "];
"1000602" -> "1000620"  [label="DDG: "];
"1000620" -> "1000616"  [label="AST: "];
"1000620" -> "1000622"  [label="CFG: "];
"1000621" -> "1000620"  [label="AST: "];
"1000622" -> "1000620"  [label="AST: "];
"1000616" -> "1000620"  [label="CFG: "];
"1000620" -> "1000687"  [label="DDG: "];
"1000620" -> "1000616"  [label="DDG: "];
"1000620" -> "1000616"  [label="DDG: "];
"1000620" -> "1000628"  [label="DDG: "];
"1000616" -> "1000615"  [label="AST: "];
"1000617" -> "1000616"  [label="AST: "];
"1000624" -> "1000616"  [label="CFG: "];
"1000635" -> "1000616"  [label="CFG: "];
"1000616" -> "1000687"  [label="DDG: "];
"1000616" -> "1000687"  [label="DDG: "];
"1000616" -> "1000687"  [label="DDG: "];
"1000457" -> "1000616"  [label="DDG: "];
"1000397" -> "1000616"  [label="DDG: "];
"1000452" -> "1000616"  [label="DDG: "];
"1000404" -> "1000616"  [label="DDG: "];
"1000313" -> "1000616"  [label="DDG: "];
"1000616" -> "1000623"  [label="DDG: "];
"1000623" -> "1000615"  [label="AST: "];
"1000623" -> "1000628"  [label="CFG: "];
"1000624" -> "1000623"  [label="AST: "];
"1000625" -> "1000623"  [label="AST: "];
"1000628" -> "1000623"  [label="AST: "];
"1000635" -> "1000623"  [label="CFG: "];
"1000623" -> "1000687"  [label="DDG: "];
"1000623" -> "1000687"  [label="DDG: "];
"1000623" -> "1000687"  [label="DDG: "];
"1000628" -> "1000623"  [label="DDG: "];
"1000628" -> "1000623"  [label="DDG: "];
"1000628" -> "1000630"  [label="CFG: "];
"1000629" -> "1000628"  [label="AST: "];
"1000630" -> "1000628"  [label="AST: "];
"1000628" -> "1000687"  [label="DDG: "];
}
