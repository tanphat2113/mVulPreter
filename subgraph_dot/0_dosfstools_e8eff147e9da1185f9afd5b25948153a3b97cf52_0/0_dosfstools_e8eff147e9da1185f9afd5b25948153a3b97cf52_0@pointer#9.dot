digraph "0_dosfstools_e8eff147e9da1185f9afd5b25948153a3b97cf52_0@pointer" {
"1000241" [label="(Call,fs->fat_start = (off_t)le16toh(b.reserved) * logical_sector_size)"];
"1000245" [label="(Call,(off_t)le16toh(b.reserved) * logical_sector_size)"];
"1000246" [label="(Call,(off_t)le16toh(b.reserved))"];
"1000248" [label="(Call,le16toh(b.reserved))"];
"1000210" [label="(Call,fs_test((off_t)((total_sectors & ~1) - 1) * logical_sector_size,\n \t    logical_sector_size))"];
"1000211" [label="(Call,(off_t)((total_sectors & ~1) - 1) * logical_sector_size)"];
"1000212" [label="(Call,(off_t)((total_sectors & ~1) - 1))"];
"1000214" [label="(Call,(total_sectors & ~1) - 1)"];
"1000215" [label="(Call,total_sectors & ~1)"];
"1000197" [label="(Call,total_sectors = sectors ? sectors : le32toh(b.total_sect))"];
"1000191" [label="(Call,sectors = GET_UNALIGNED_W(b.sectors))"];
"1000193" [label="(Call,GET_UNALIGNED_W(b.sectors))"];
"1000202" [label="(Call,le32toh(b.total_sect))"];
"1000155" [label="(Call,b.cluster_size * logical_sector_size)"];
"1000143" [label="(Call,logical_sector_size & (SECTOR_SIZE - 1))"];
"1000138" [label="(Call,!logical_sector_size)"];
"1000131" [label="(Call,logical_sector_size = GET_UNALIGNED_W(b.sector_size))"];
"1000133" [label="(Call,GET_UNALIGNED_W(b.sector_size))"];
"1000145" [label="(Call,SECTOR_SIZE - 1)"];
"1000148" [label="(Call,die(\"Logical sector size (%d bytes) is not a multiple of the physical \"\n\t    \"sector size.\", logical_sector_size))"];
"1000217" [label="(Identifier,~1)"];
"1000246" [label="(Call,(off_t)le16toh(b.reserved))"];
"1000219" [label="(Identifier,logical_sector_size)"];
"1000198" [label="(Identifier,total_sectors)"];
"1000138" [label="(Call,!logical_sector_size)"];
"1000150" [label="(Identifier,logical_sector_size)"];
"1000197" [label="(Call,total_sectors = sectors ? sectors : le32toh(b.total_sect))"];
"1000249" [label="(Call,b.reserved)"];
"1000261" [label="(Call,le16toh(b.reserved))"];
"1000245" [label="(Call,(off_t)le16toh(b.reserved) * logical_sector_size)"];
"1000191" [label="(Call,sectors = GET_UNALIGNED_W(b.sectors))"];
"1000202" [label="(Call,le32toh(b.total_sect))"];
"1000156" [label="(Call,b.cluster_size)"];
"1000146" [label="(Identifier,SECTOR_SIZE)"];
"1000215" [label="(Call,total_sectors & ~1)"];
"1000142" [label="(ControlStructure,if (logical_sector_size & (SECTOR_SIZE - 1)))"];
"1000257" [label="(Call,((off_t)le16toh(b.reserved) + b.fats * fat_length) *\n \tlogical_sector_size)"];
"1000132" [label="(Identifier,logical_sector_size)"];
"1000155" [label="(Call,b.cluster_size * logical_sector_size)"];
"1000194" [label="(Call,b.sectors)"];
"1000687" [label="(MethodReturn,void)"];
"1000199" [label="(Call,sectors ? sectors : le32toh(b.total_sect))"];
"1000214" [label="(Call,(total_sectors & ~1) - 1)"];
"1000211" [label="(Call,(off_t)((total_sectors & ~1) - 1) * logical_sector_size)"];
"1000216" [label="(Identifier,total_sectors)"];
"1000203" [label="(Call,b.total_sect)"];
"1000192" [label="(Identifier,sectors)"];
"1000148" [label="(Call,die(\"Logical sector size (%d bytes) is not a multiple of the physical \"\n\t    \"sector size.\", logical_sector_size))"];
"1000143" [label="(Call,logical_sector_size & (SECTOR_SIZE - 1))"];
"1000242" [label="(Call,fs->fat_start)"];
"1000134" [label="(Call,b.sector_size)"];
"1000159" [label="(Identifier,logical_sector_size)"];
"1000131" [label="(Call,logical_sector_size = GET_UNALIGNED_W(b.sector_size))"];
"1000210" [label="(Call,fs_test((off_t)((total_sectors & ~1) - 1) * logical_sector_size,\n \t    logical_sector_size))"];
"1000149" [label="(Literal,\"Logical sector size (%d bytes) is not a multiple of the physical \"\n\t    \"sector size.\")"];
"1000133" [label="(Call,GET_UNALIGNED_W(b.sector_size))"];
"1000117" [label="(Block,)"];
"1000222" [label="(Identifier,fat_length)"];
"1000141" [label="(Literal,\"Logical sector size is zero.\")"];
"1000241" [label="(Call,fs->fat_start = (off_t)le16toh(b.reserved) * logical_sector_size)"];
"1000220" [label="(Identifier,logical_sector_size)"];
"1000153" [label="(Identifier,fs)"];
"1000218" [label="(Literal,1)"];
"1000151" [label="(Call,fs->cluster_size = b.cluster_size * logical_sector_size)"];
"1000145" [label="(Call,SECTOR_SIZE - 1)"];
"1000147" [label="(Literal,1)"];
"1000193" [label="(Call,GET_UNALIGNED_W(b.sectors))"];
"1000212" [label="(Call,(off_t)((total_sectors & ~1) - 1))"];
"1000252" [label="(Identifier,logical_sector_size)"];
"1000139" [label="(Identifier,logical_sector_size)"];
"1000207" [label="(Identifier,verbose)"];
"1000144" [label="(Identifier,logical_sector_size)"];
"1000137" [label="(ControlStructure,if (!logical_sector_size))"];
"1000298" [label="(Call,(off_t)total_sectors)"];
"1000659" [label="(Call,SECTOR_SIZE - 1)"];
"1000255" [label="(Identifier,fs)"];
"1000248" [label="(Call,le16toh(b.reserved))"];
"1000241" -> "1000117"  [label="AST: "];
"1000241" -> "1000245"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000245" -> "1000241"  [label="AST: "];
"1000255" -> "1000241"  [label="CFG: "];
"1000241" -> "1000687"  [label="DDG: "];
"1000241" -> "1000687"  [label="DDG: "];
"1000245" -> "1000241"  [label="DDG: "];
"1000245" -> "1000241"  [label="DDG: "];
"1000245" -> "1000252"  [label="CFG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000252" -> "1000245"  [label="AST: "];
"1000246" -> "1000245"  [label="DDG: "];
"1000210" -> "1000245"  [label="DDG: "];
"1000245" -> "1000257"  [label="DDG: "];
"1000246" -> "1000248"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000248" -> "1000246"  [label="AST: "];
"1000252" -> "1000246"  [label="CFG: "];
"1000248" -> "1000246"  [label="DDG: "];
"1000248" -> "1000249"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000248" -> "1000261"  [label="DDG: "];
"1000210" -> "1000117"  [label="AST: "];
"1000210" -> "1000220"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000220" -> "1000210"  [label="AST: "];
"1000222" -> "1000210"  [label="CFG: "];
"1000210" -> "1000687"  [label="DDG: "];
"1000210" -> "1000687"  [label="DDG: "];
"1000211" -> "1000210"  [label="DDG: "];
"1000211" -> "1000210"  [label="DDG: "];
"1000211" -> "1000219"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000219" -> "1000211"  [label="AST: "];
"1000220" -> "1000211"  [label="CFG: "];
"1000211" -> "1000687"  [label="DDG: "];
"1000212" -> "1000211"  [label="DDG: "];
"1000155" -> "1000211"  [label="DDG: "];
"1000212" -> "1000214"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000214" -> "1000212"  [label="AST: "];
"1000219" -> "1000212"  [label="CFG: "];
"1000212" -> "1000687"  [label="DDG: "];
"1000214" -> "1000212"  [label="DDG: "];
"1000214" -> "1000212"  [label="DDG: "];
"1000214" -> "1000218"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000218" -> "1000214"  [label="AST: "];
"1000214" -> "1000687"  [label="DDG: "];
"1000215" -> "1000214"  [label="DDG: "];
"1000215" -> "1000214"  [label="DDG: "];
"1000215" -> "1000217"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000217" -> "1000215"  [label="AST: "];
"1000218" -> "1000215"  [label="CFG: "];
"1000215" -> "1000687"  [label="DDG: "];
"1000197" -> "1000215"  [label="DDG: "];
"1000215" -> "1000298"  [label="DDG: "];
"1000197" -> "1000117"  [label="AST: "];
"1000197" -> "1000199"  [label="CFG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000199" -> "1000197"  [label="AST: "];
"1000207" -> "1000197"  [label="CFG: "];
"1000197" -> "1000687"  [label="DDG: "];
"1000191" -> "1000197"  [label="DDG: "];
"1000202" -> "1000197"  [label="DDG: "];
"1000191" -> "1000117"  [label="AST: "];
"1000191" -> "1000193"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000193" -> "1000191"  [label="AST: "];
"1000198" -> "1000191"  [label="CFG: "];
"1000191" -> "1000687"  [label="DDG: "];
"1000193" -> "1000191"  [label="DDG: "];
"1000191" -> "1000199"  [label="DDG: "];
"1000193" -> "1000194"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000193" -> "1000687"  [label="DDG: "];
"1000202" -> "1000199"  [label="AST: "];
"1000202" -> "1000203"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000199" -> "1000202"  [label="CFG: "];
"1000202" -> "1000687"  [label="DDG: "];
"1000202" -> "1000199"  [label="DDG: "];
"1000155" -> "1000151"  [label="AST: "];
"1000155" -> "1000159"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000159" -> "1000155"  [label="AST: "];
"1000151" -> "1000155"  [label="CFG: "];
"1000155" -> "1000687"  [label="DDG: "];
"1000155" -> "1000151"  [label="DDG: "];
"1000155" -> "1000151"  [label="DDG: "];
"1000143" -> "1000155"  [label="DDG: "];
"1000148" -> "1000155"  [label="DDG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000145" -> "1000143"  [label="AST: "];
"1000149" -> "1000143"  [label="CFG: "];
"1000153" -> "1000143"  [label="CFG: "];
"1000138" -> "1000143"  [label="DDG: "];
"1000145" -> "1000143"  [label="DDG: "];
"1000145" -> "1000143"  [label="DDG: "];
"1000143" -> "1000148"  [label="DDG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000139"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000141" -> "1000138"  [label="CFG: "];
"1000144" -> "1000138"  [label="CFG: "];
"1000138" -> "1000687"  [label="DDG: "];
"1000131" -> "1000138"  [label="DDG: "];
"1000131" -> "1000117"  [label="AST: "];
"1000131" -> "1000133"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="AST: "];
"1000139" -> "1000131"  [label="CFG: "];
"1000131" -> "1000687"  [label="DDG: "];
"1000133" -> "1000131"  [label="DDG: "];
"1000133" -> "1000134"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000133" -> "1000687"  [label="DDG: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000145" -> "1000659"  [label="DDG: "];
"1000148" -> "1000142"  [label="AST: "];
"1000148" -> "1000150"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000150" -> "1000148"  [label="AST: "];
"1000153" -> "1000148"  [label="CFG: "];
"1000148" -> "1000687"  [label="DDG: "];
}
