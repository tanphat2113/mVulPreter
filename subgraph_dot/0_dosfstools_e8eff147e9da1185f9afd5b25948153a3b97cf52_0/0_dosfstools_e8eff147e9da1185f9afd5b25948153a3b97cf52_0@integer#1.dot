digraph "0_dosfstools_e8eff147e9da1185f9afd5b25948153a3b97cf52_0@integer" {
"1000151" [label="(Call,fs->cluster_size = b.cluster_size * logical_sector_size)"];
"1000155" [label="(Call,b.cluster_size * logical_sector_size)"];
"1000143" [label="(Call,logical_sector_size & (SECTOR_SIZE - 1))"];
"1000138" [label="(Call,!logical_sector_size)"];
"1000131" [label="(Call,logical_sector_size = GET_UNALIGNED_W(b.sector_size))"];
"1000133" [label="(Call,GET_UNALIGNED_W(b.sector_size))"];
"1000145" [label="(Call,SECTOR_SIZE - 1)"];
"1000148" [label="(Call,die(\"Logical sector size (%d bytes) is not a multiple of the physical \"\n\t    \"sector size.\", logical_sector_size))"];
"1000161" [label="(Call,!fs->cluster_size)"];
"1000306" [label="(Call,data_size < fs->cluster_size)"];
"1000317" [label="(Call,data_size / fs->cluster_size)"];
"1000313" [label="(Call,fs->data_clusters = data_size / fs->cluster_size)"];
"1000397" [label="(Call,fs->data_clusters < FAT16_THRESHOLD)"];
"1000404" [label="(Call,(unsigned long)fs->data_clusters)"];
"1000402" [label="(Call,printf(\"Warning: Filesystem is FAT32 according to fat_length \"\n\t\t   \"and fat32_length fields,\n\"\n\t\t   \"  but has only %lu clusters, less than the required \"\n\t\t   \"minimum of %d.\n\"\n\t\t   \"  This may lead to problems on some systems.\n\",\n\t\t   (unsigned long)fs->data_clusters, FAT16_THRESHOLD))"];
"1000616" [label="(Call,fs->data_clusters > total_fat_entries - 2)"];
"1000623" [label="(Call,die(\"Filesystem has %u clusters but only space for %u FAT entries.\",\n\t    fs->data_clusters, total_fat_entries - 2))"];
"1000444" [label="(Call,fs->data_clusters >= FAT12_THRESHOLD)"];
"1000452" [label="(Call,fs->data_clusters >= FAT16_THRESHOLD)"];
"1000457" [label="(Call,die(\"Too many clusters (%lu) for FAT16 filesystem.\", fs->data_clusters))"];
"1000475" [label="(Call,fs->data_clusters + 2 > fat_length * logical_sector_size * 8 / 16)"];
"1000474" [label="(Call,fs->data_clusters + 2 > fat_length * logical_sector_size * 8 / 16 ||\n\t    /* if it has one of the usual floppy sizes -> 12bit FAT  */\n\t    (total_sectors == 720 || total_sectors == 1440 ||\n\t     total_sectors == 2880))"];
"1000476" [label="(Call,fs->data_clusters + 2)"];
"1000624" [label="(Literal,\"Filesystem has %u clusters but only space for %u FAT entries.\")"];
"1000150" [label="(Identifier,logical_sector_size)"];
"1000501" [label="(Identifier,fs)"];
"1000163" [label="(Identifier,fs)"];
"1000156" [label="(Call,b.cluster_size)"];
"1000161" [label="(Call,!fs->cluster_size)"];
"1000482" [label="(Identifier,fat_length)"];
"1000448" [label="(Identifier,FAT12_THRESHOLD)"];
"1000406" [label="(Call,fs->data_clusters)"];
"1000490" [label="(Identifier,total_sectors)"];
"1000143" [label="(Call,logical_sector_size & (SECTOR_SIZE - 1))"];
"1000473" [label="(ControlStructure,if (fs->data_clusters + 2 > fat_length * logical_sector_size * 8 / 16 ||\n\t    /* if it has one of the usual floppy sizes -> 12bit FAT  */\n\t    (total_sectors == 720 || total_sectors == 1440 ||\n\t     total_sectors == 2880)))"];
"1000625" [label="(Call,fs->data_clusters)"];
"1000134" [label="(Call,b.sector_size)"];
"1000396" [label="(ControlStructure,if (fs->data_clusters < FAT16_THRESHOLD))"];
"1000398" [label="(Call,fs->data_clusters)"];
"1000312" [label="(Literal,\"Filesystem has no space for any data clusters\")"];
"1000463" [label="(Identifier,fs)"];
"1000147" [label="(Literal,1)"];
"1000306" [label="(Call,data_size < fs->cluster_size)"];
"1000449" [label="(Literal,16)"];
"1000166" [label="(Literal,\"Cluster size is zero.\")"];
"1000475" [label="(Call,fs->data_clusters + 2 > fat_length * logical_sector_size * 8 / 16)"];
"1000142" [label="(ControlStructure,if (logical_sector_size & (SECTOR_SIZE - 1)))"];
"1000294" [label="(Call,data_size = (off_t)total_sectors * logical_sector_size - fs->data_start)"];
"1000132" [label="(Identifier,logical_sector_size)"];
"1000687" [label="(MethodReturn,void)"];
"1000620" [label="(Call,total_fat_entries - 2)"];
"1000635" [label="(Identifier,fs)"];
"1000148" [label="(Call,die(\"Logical sector size (%d bytes) is not a multiple of the physical \"\n\t    \"sector size.\", logical_sector_size))"];
"1000211" [label="(Call,(off_t)((total_sectors & ~1) - 1) * logical_sector_size)"];
"1000456" [label="(Identifier,FAT16_THRESHOLD)"];
"1000131" [label="(Call,logical_sector_size = GET_UNALIGNED_W(b.sector_size))"];
"1000318" [label="(Identifier,data_size)"];
"1000617" [label="(Call,fs->data_clusters)"];
"1000149" [label="(Literal,\"Logical sector size (%d bytes) is not a multiple of the physical \"\n\t    \"sector size.\")"];
"1000307" [label="(Identifier,data_size)"];
"1000411" [label="(Identifier,fs)"];
"1000141" [label="(Literal,\"Logical sector size is zero.\")"];
"1000313" [label="(Call,fs->data_clusters = data_size / fs->cluster_size)"];
"1000151" [label="(Call,fs->cluster_size = b.cluster_size * logical_sector_size)"];
"1000452" [label="(Call,fs->data_clusters >= FAT16_THRESHOLD)"];
"1000488" [label="(Call,total_sectors == 720 || total_sectors == 1440 ||\n\t     total_sectors == 2880)"];
"1000139" [label="(Identifier,logical_sector_size)"];
"1000474" [label="(Call,fs->data_clusters + 2 > fat_length * logical_sector_size * 8 / 16 ||\n\t    /* if it has one of the usual floppy sizes -> 12bit FAT  */\n\t    (total_sectors == 720 || total_sectors == 1440 ||\n\t     total_sectors == 2880))"];
"1000451" [label="(ControlStructure,if (fs->data_clusters >= FAT16_THRESHOLD))"];
"1000117" [label="(Block,)"];
"1000160" [label="(ControlStructure,if (!fs->cluster_size))"];
"1000324" [label="(Identifier,fs)"];
"1000403" [label="(Literal,\"Warning: Filesystem is FAT32 according to fat_length \"\n\t\t   \"and fat32_length fields,\n\"\n\t\t   \"  but has only %lu clusters, less than the required \"\n\t\t   \"minimum of %d.\n\"\n\t\t   \"  This may lead to problems on some systems.\n\")"];
"1000401" [label="(Identifier,FAT16_THRESHOLD)"];
"1000138" [label="(Call,!logical_sector_size)"];
"1000457" [label="(Call,die(\"Too many clusters (%lu) for FAT16 filesystem.\", fs->data_clusters))"];
"1000615" [label="(ControlStructure,if (fs->data_clusters > total_fat_entries - 2))"];
"1000481" [label="(Call,fat_length * logical_sector_size * 8 / 16)"];
"1000315" [label="(Identifier,fs)"];
"1000317" [label="(Call,data_size / fs->cluster_size)"];
"1000628" [label="(Call,total_fat_entries - 2)"];
"1000450" [label="(Literal,12)"];
"1000480" [label="(Literal,2)"];
"1000458" [label="(Literal,\"Too many clusters (%lu) for FAT16 filesystem.\")"];
"1000445" [label="(Call,fs->data_clusters)"];
"1000314" [label="(Call,fs->data_clusters)"];
"1000159" [label="(Identifier,logical_sector_size)"];
"1000443" [label="(Call,(fs->data_clusters >= FAT12_THRESHOLD) ? 16 : 12)"];
"1000477" [label="(Call,fs->data_clusters)"];
"1000153" [label="(Identifier,fs)"];
"1000453" [label="(Call,fs->data_clusters)"];
"1000409" [label="(Identifier,FAT16_THRESHOLD)"];
"1000144" [label="(Identifier,logical_sector_size)"];
"1000137" [label="(ControlStructure,if (!logical_sector_size))"];
"1000476" [label="(Call,fs->data_clusters + 2)"];
"1000459" [label="(Call,fs->data_clusters)"];
"1000397" [label="(Call,fs->data_clusters < FAT16_THRESHOLD)"];
"1000146" [label="(Identifier,SECTOR_SIZE)"];
"1000623" [label="(Call,die(\"Filesystem has %u clusters but only space for %u FAT entries.\",\n\t    fs->data_clusters, total_fat_entries - 2))"];
"1000162" [label="(Call,fs->cluster_size)"];
"1000155" [label="(Call,b.cluster_size * logical_sector_size)"];
"1000616" [label="(Call,fs->data_clusters > total_fat_entries - 2)"];
"1000506" [label="(Identifier,fs)"];
"1000402" [label="(Call,printf(\"Warning: Filesystem is FAT32 according to fat_length \"\n\t\t   \"and fat32_length fields,\n\"\n\t\t   \"  but has only %lu clusters, less than the required \"\n\t\t   \"minimum of %d.\n\"\n\t\t   \"  This may lead to problems on some systems.\n\",\n\t\t   (unsigned long)fs->data_clusters, FAT16_THRESHOLD))"];
"1000444" [label="(Call,fs->data_clusters >= FAT12_THRESHOLD)"];
"1000133" [label="(Call,GET_UNALIGNED_W(b.sector_size))"];
"1000305" [label="(ControlStructure,if (data_size < fs->cluster_size))"];
"1000404" [label="(Call,(unsigned long)fs->data_clusters)"];
"1000308" [label="(Call,fs->cluster_size)"];
"1000145" [label="(Call,SECTOR_SIZE - 1)"];
"1000152" [label="(Call,fs->cluster_size)"];
"1000319" [label="(Call,fs->cluster_size)"];
"1000171" [label="(Identifier,b)"];
"1000659" [label="(Call,SECTOR_SIZE - 1)"];
"1000151" -> "1000117"  [label="AST: "];
"1000151" -> "1000155"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000155" -> "1000151"  [label="AST: "];
"1000163" -> "1000151"  [label="CFG: "];
"1000151" -> "1000687"  [label="DDG: "];
"1000155" -> "1000151"  [label="DDG: "];
"1000155" -> "1000151"  [label="DDG: "];
"1000151" -> "1000161"  [label="DDG: "];
"1000155" -> "1000159"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000159" -> "1000155"  [label="AST: "];
"1000155" -> "1000687"  [label="DDG: "];
"1000143" -> "1000155"  [label="DDG: "];
"1000148" -> "1000155"  [label="DDG: "];
"1000155" -> "1000211"  [label="DDG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000145" -> "1000143"  [label="AST: "];
"1000149" -> "1000143"  [label="CFG: "];
"1000153" -> "1000143"  [label="CFG: "];
"1000138" -> "1000143"  [label="DDG: "];
"1000145" -> "1000143"  [label="DDG: "];
"1000145" -> "1000143"  [label="DDG: "];
"1000143" -> "1000148"  [label="DDG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000139"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000141" -> "1000138"  [label="CFG: "];
"1000144" -> "1000138"  [label="CFG: "];
"1000138" -> "1000687"  [label="DDG: "];
"1000131" -> "1000138"  [label="DDG: "];
"1000131" -> "1000117"  [label="AST: "];
"1000131" -> "1000133"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="AST: "];
"1000139" -> "1000131"  [label="CFG: "];
"1000131" -> "1000687"  [label="DDG: "];
"1000133" -> "1000131"  [label="DDG: "];
"1000133" -> "1000134"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000133" -> "1000687"  [label="DDG: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000145" -> "1000659"  [label="DDG: "];
"1000148" -> "1000142"  [label="AST: "];
"1000148" -> "1000150"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000150" -> "1000148"  [label="AST: "];
"1000153" -> "1000148"  [label="CFG: "];
"1000148" -> "1000687"  [label="DDG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000161" -> "1000162"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000166" -> "1000161"  [label="CFG: "];
"1000171" -> "1000161"  [label="CFG: "];
"1000161" -> "1000687"  [label="DDG: "];
"1000161" -> "1000306"  [label="DDG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000306" -> "1000308"  [label="CFG: "];
"1000307" -> "1000306"  [label="AST: "];
"1000308" -> "1000306"  [label="AST: "];
"1000312" -> "1000306"  [label="CFG: "];
"1000315" -> "1000306"  [label="CFG: "];
"1000306" -> "1000687"  [label="DDG: "];
"1000294" -> "1000306"  [label="DDG: "];
"1000306" -> "1000317"  [label="DDG: "];
"1000306" -> "1000317"  [label="DDG: "];
"1000317" -> "1000313"  [label="AST: "];
"1000317" -> "1000319"  [label="CFG: "];
"1000318" -> "1000317"  [label="AST: "];
"1000319" -> "1000317"  [label="AST: "];
"1000313" -> "1000317"  [label="CFG: "];
"1000317" -> "1000687"  [label="DDG: "];
"1000317" -> "1000687"  [label="DDG: "];
"1000317" -> "1000313"  [label="DDG: "];
"1000317" -> "1000313"  [label="DDG: "];
"1000313" -> "1000117"  [label="AST: "];
"1000314" -> "1000313"  [label="AST: "];
"1000324" -> "1000313"  [label="CFG: "];
"1000313" -> "1000687"  [label="DDG: "];
"1000313" -> "1000397"  [label="DDG: "];
"1000313" -> "1000444"  [label="DDG: "];
"1000313" -> "1000475"  [label="DDG: "];
"1000313" -> "1000476"  [label="DDG: "];
"1000313" -> "1000616"  [label="DDG: "];
"1000397" -> "1000396"  [label="AST: "];
"1000397" -> "1000401"  [label="CFG: "];
"1000398" -> "1000397"  [label="AST: "];
"1000401" -> "1000397"  [label="AST: "];
"1000403" -> "1000397"  [label="CFG: "];
"1000411" -> "1000397"  [label="CFG: "];
"1000397" -> "1000687"  [label="DDG: "];
"1000397" -> "1000687"  [label="DDG: "];
"1000397" -> "1000404"  [label="DDG: "];
"1000397" -> "1000402"  [label="DDG: "];
"1000397" -> "1000616"  [label="DDG: "];
"1000404" -> "1000402"  [label="AST: "];
"1000404" -> "1000406"  [label="CFG: "];
"1000405" -> "1000404"  [label="AST: "];
"1000406" -> "1000404"  [label="AST: "];
"1000409" -> "1000404"  [label="CFG: "];
"1000404" -> "1000402"  [label="DDG: "];
"1000404" -> "1000616"  [label="DDG: "];
"1000402" -> "1000396"  [label="AST: "];
"1000402" -> "1000409"  [label="CFG: "];
"1000403" -> "1000402"  [label="AST: "];
"1000409" -> "1000402"  [label="AST: "];
"1000411" -> "1000402"  [label="CFG: "];
"1000402" -> "1000687"  [label="DDG: "];
"1000402" -> "1000687"  [label="DDG: "];
"1000402" -> "1000687"  [label="DDG: "];
"1000616" -> "1000615"  [label="AST: "];
"1000616" -> "1000620"  [label="CFG: "];
"1000617" -> "1000616"  [label="AST: "];
"1000620" -> "1000616"  [label="AST: "];
"1000624" -> "1000616"  [label="CFG: "];
"1000635" -> "1000616"  [label="CFG: "];
"1000616" -> "1000687"  [label="DDG: "];
"1000616" -> "1000687"  [label="DDG: "];
"1000616" -> "1000687"  [label="DDG: "];
"1000457" -> "1000616"  [label="DDG: "];
"1000452" -> "1000616"  [label="DDG: "];
"1000620" -> "1000616"  [label="DDG: "];
"1000620" -> "1000616"  [label="DDG: "];
"1000616" -> "1000623"  [label="DDG: "];
"1000623" -> "1000615"  [label="AST: "];
"1000623" -> "1000628"  [label="CFG: "];
"1000624" -> "1000623"  [label="AST: "];
"1000625" -> "1000623"  [label="AST: "];
"1000628" -> "1000623"  [label="AST: "];
"1000635" -> "1000623"  [label="CFG: "];
"1000623" -> "1000687"  [label="DDG: "];
"1000623" -> "1000687"  [label="DDG: "];
"1000623" -> "1000687"  [label="DDG: "];
"1000628" -> "1000623"  [label="DDG: "];
"1000628" -> "1000623"  [label="DDG: "];
"1000444" -> "1000443"  [label="AST: "];
"1000444" -> "1000448"  [label="CFG: "];
"1000445" -> "1000444"  [label="AST: "];
"1000448" -> "1000444"  [label="AST: "];
"1000449" -> "1000444"  [label="CFG: "];
"1000450" -> "1000444"  [label="CFG: "];
"1000444" -> "1000687"  [label="DDG: "];
"1000444" -> "1000452"  [label="DDG: "];
"1000452" -> "1000451"  [label="AST: "];
"1000452" -> "1000456"  [label="CFG: "];
"1000453" -> "1000452"  [label="AST: "];
"1000456" -> "1000452"  [label="AST: "];
"1000458" -> "1000452"  [label="CFG: "];
"1000463" -> "1000452"  [label="CFG: "];
"1000452" -> "1000687"  [label="DDG: "];
"1000452" -> "1000687"  [label="DDG: "];
"1000452" -> "1000457"  [label="DDG: "];
"1000457" -> "1000451"  [label="AST: "];
"1000457" -> "1000459"  [label="CFG: "];
"1000458" -> "1000457"  [label="AST: "];
"1000459" -> "1000457"  [label="AST: "];
"1000463" -> "1000457"  [label="CFG: "];
"1000457" -> "1000687"  [label="DDG: "];
"1000475" -> "1000474"  [label="AST: "];
"1000475" -> "1000481"  [label="CFG: "];
"1000476" -> "1000475"  [label="AST: "];
"1000481" -> "1000475"  [label="AST: "];
"1000490" -> "1000475"  [label="CFG: "];
"1000474" -> "1000475"  [label="CFG: "];
"1000475" -> "1000687"  [label="DDG: "];
"1000475" -> "1000687"  [label="DDG: "];
"1000475" -> "1000474"  [label="DDG: "];
"1000475" -> "1000474"  [label="DDG: "];
"1000481" -> "1000475"  [label="DDG: "];
"1000481" -> "1000475"  [label="DDG: "];
"1000474" -> "1000473"  [label="AST: "];
"1000474" -> "1000488"  [label="CFG: "];
"1000488" -> "1000474"  [label="AST: "];
"1000501" -> "1000474"  [label="CFG: "];
"1000506" -> "1000474"  [label="CFG: "];
"1000474" -> "1000687"  [label="DDG: "];
"1000474" -> "1000687"  [label="DDG: "];
"1000474" -> "1000687"  [label="DDG: "];
"1000488" -> "1000474"  [label="DDG: "];
"1000488" -> "1000474"  [label="DDG: "];
"1000476" -> "1000480"  [label="CFG: "];
"1000477" -> "1000476"  [label="AST: "];
"1000480" -> "1000476"  [label="AST: "];
"1000482" -> "1000476"  [label="CFG: "];
}
