digraph "0_linux_f6d8bd051c391c1c0458a30b2a7abcd939329259_33@pointer" {
"1000577" [label="(Call,sock_net(sk))"];
"1000266" [label="(Call,sk_acceptq_is_full(sk))"];
"1000121" [label="(Call,inet6_sk(sk))"];
"1000111" [label="(MethodParameterIn,struct sock *sk)"];
"1000576" [label="(Call,NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENOVERFLOWS))"];
"1000589" [label="(Call,sock_kfree_s(sk, opt, opt->tot_len))"];
"1000599" [label="(Call,sock_net(sk))"];
"1000598" [label="(Call,NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENDROPS))"];
"1000284" [label="(Call,tcp_create_openreq_child(sk, req, skb))"];
"1000562" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000267" [label="(Identifier,sk)"];
"1000591" [label="(Identifier,opt)"];
"1000604" [label="(MethodReturn,static struct sock *)"];
"1000592" [label="(Call,opt->tot_len)"];
"1000601" [label="(Identifier,LINUX_MIB_LISTENDROPS)"];
"1000600" [label="(Identifier,sk)"];
"1000119" [label="(Call,*np = inet6_sk(sk))"];
"1000577" [label="(Call,sock_net(sk))"];
"1000275" [label="(Call,inet6_csk_route_req(sk, req))"];
"1000527" [label="(Call,tcp_v6_md5_do_lookup(sk, &newnp->daddr))"];
"1000265" [label="(ControlStructure,if (sk_acceptq_is_full(sk)))"];
"1000576" [label="(Call,NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENOVERFLOWS))"];
"1000122" [label="(Identifier,sk)"];
"1000266" [label="(Call,sk_acceptq_is_full(sk))"];
"1000271" [label="(Identifier,dst)"];
"1000579" [label="(Identifier,LINUX_MIB_LISTENOVERFLOWS)"];
"1000581" [label="(ControlStructure,if (opt && opt != np->opt))"];
"1000111" [label="(MethodParameterIn,struct sock *sk)"];
"1000115" [label="(Block,)"];
"1000139" [label="(Call,tcp_v4_syn_recv_sock(sk, skb, req, dst))"];
"1000580" [label="(JumpTarget,out_nonewsk:)"];
"1000598" [label="(Call,NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENDROPS))"];
"1000582" [label="(Call,opt && opt != np->opt)"];
"1000268" [label="(ControlStructure,goto out_overflow;)"];
"1000121" [label="(Call,inet6_sk(sk))"];
"1000599" [label="(Call,sock_net(sk))"];
"1000463" [label="(Call,sock_kfree_s(sk, opt, opt->tot_len))"];
"1000578" [label="(Identifier,sk)"];
"1000596" [label="(Identifier,dst)"];
"1000589" [label="(Call,sock_kfree_s(sk, opt, opt->tot_len))"];
"1000590" [label="(Identifier,sk)"];
"1000603" [label="(Identifier,NULL)"];
"1000577" -> "1000576"  [label="AST: "];
"1000577" -> "1000578"  [label="CFG: "];
"1000578" -> "1000577"  [label="AST: "];
"1000579" -> "1000577"  [label="CFG: "];
"1000577" -> "1000576"  [label="DDG: sk"];
"1000266" -> "1000577"  [label="DDG: sk"];
"1000111" -> "1000577"  [label="DDG: sk"];
"1000577" -> "1000589"  [label="DDG: sk"];
"1000577" -> "1000599"  [label="DDG: sk"];
"1000266" -> "1000265"  [label="AST: "];
"1000266" -> "1000267"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="CFG: "];
"1000271" -> "1000266"  [label="CFG: "];
"1000266" -> "1000604"  [label="DDG: sk_acceptq_is_full(sk)"];
"1000121" -> "1000266"  [label="DDG: sk"];
"1000111" -> "1000266"  [label="DDG: sk"];
"1000266" -> "1000275"  [label="DDG: sk"];
"1000266" -> "1000284"  [label="DDG: sk"];
"1000121" -> "1000119"  [label="AST: "];
"1000121" -> "1000122"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000121" -> "1000119"  [label="DDG: sk"];
"1000111" -> "1000121"  [label="DDG: sk"];
"1000121" -> "1000139"  [label="DDG: sk"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000604"  [label="DDG: sk"];
"1000111" -> "1000139"  [label="DDG: sk"];
"1000111" -> "1000275"  [label="DDG: sk"];
"1000111" -> "1000284"  [label="DDG: sk"];
"1000111" -> "1000463"  [label="DDG: sk"];
"1000111" -> "1000527"  [label="DDG: sk"];
"1000111" -> "1000562"  [label="DDG: sk"];
"1000111" -> "1000589"  [label="DDG: sk"];
"1000111" -> "1000599"  [label="DDG: sk"];
"1000576" -> "1000115"  [label="AST: "];
"1000576" -> "1000579"  [label="CFG: "];
"1000579" -> "1000576"  [label="AST: "];
"1000580" -> "1000576"  [label="CFG: "];
"1000576" -> "1000604"  [label="DDG: LINUX_MIB_LISTENOVERFLOWS"];
"1000576" -> "1000604"  [label="DDG: NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENOVERFLOWS)"];
"1000589" -> "1000581"  [label="AST: "];
"1000589" -> "1000592"  [label="CFG: "];
"1000590" -> "1000589"  [label="AST: "];
"1000591" -> "1000589"  [label="AST: "];
"1000592" -> "1000589"  [label="AST: "];
"1000596" -> "1000589"  [label="CFG: "];
"1000589" -> "1000604"  [label="DDG: sock_kfree_s(sk, opt, opt->tot_len)"];
"1000589" -> "1000604"  [label="DDG: opt->tot_len"];
"1000589" -> "1000604"  [label="DDG: opt"];
"1000284" -> "1000589"  [label="DDG: sk"];
"1000582" -> "1000589"  [label="DDG: opt"];
"1000589" -> "1000599"  [label="DDG: sk"];
"1000599" -> "1000598"  [label="AST: "];
"1000599" -> "1000600"  [label="CFG: "];
"1000600" -> "1000599"  [label="AST: "];
"1000601" -> "1000599"  [label="CFG: "];
"1000599" -> "1000604"  [label="DDG: sk"];
"1000599" -> "1000598"  [label="DDG: sk"];
"1000275" -> "1000599"  [label="DDG: sk"];
"1000284" -> "1000599"  [label="DDG: sk"];
"1000562" -> "1000599"  [label="DDG: sk"];
"1000598" -> "1000115"  [label="AST: "];
"1000598" -> "1000601"  [label="CFG: "];
"1000601" -> "1000598"  [label="AST: "];
"1000603" -> "1000598"  [label="CFG: "];
"1000598" -> "1000604"  [label="DDG: sock_net(sk)"];
"1000598" -> "1000604"  [label="DDG: NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENDROPS)"];
"1000598" -> "1000604"  [label="DDG: LINUX_MIB_LISTENDROPS"];
}
