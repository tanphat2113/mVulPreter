digraph "0_linux_f6d8bd051c391c1c0458a30b2a7abcd939329259_33@API" {
"1000334" [label="(Call,ipv6_addr_copy(&newnp->daddr, &treq->rmt_addr))"];
"1000527" [label="(Call,tcp_v6_md5_do_lookup(sk, &newnp->daddr))"];
"1000524" [label="(Call,(key = tcp_v6_md5_do_lookup(sk, &newnp->daddr)) != NULL)"];
"1000547" [label="(Call,newkey != NULL)"];
"1000550" [label="(Call,tcp_v6_md5_do_add(newsk, &newnp->daddr,\n\t\t\t\t\t  newkey, key->keylen))"];
"1000562" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000561" [label="(Call,__inet_inherit_port(sk, newsk) < 0)"];
"1000567" [label="(Call,sock_put(newsk))"];
"1000570" [label="(Call,__inet6_hash(newsk, NULL))"];
"1000573" [label="(Return,return newsk;)"];
"1000599" [label="(Call,sock_net(sk))"];
"1000598" [label="(Call,NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENDROPS))"];
"1000602" [label="(Return,return NULL;)"];
"1000525" [label="(Call,key = tcp_v6_md5_do_lookup(sk, &newnp->daddr))"];
"1000284" [label="(Call,tcp_create_openreq_child(sk, req, skb))"];
"1000564" [label="(Identifier,newsk)"];
"1000570" [label="(Call,__inet6_hash(newsk, NULL))"];
"1000567" [label="(Call,sock_put(newsk))"];
"1000346" [label="(Identifier,newnp)"];
"1000562" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000568" [label="(Identifier,newsk)"];
"1000523" [label="(ControlStructure,if ((key = tcp_v6_md5_do_lookup(sk, &newnp->daddr)) != NULL))"];
"1000552" [label="(Call,&newnp->daddr)"];
"1000573" [label="(Return,return newsk;)"];
"1000572" [label="(Identifier,NULL)"];
"1000561" [label="(Call,__inet_inherit_port(sk, newsk) < 0)"];
"1000563" [label="(Identifier,sk)"];
"1000604" [label="(MethodReturn,static struct sock *)"];
"1000560" [label="(ControlStructure,if (__inet_inherit_port(sk, newsk) < 0))"];
"1000601" [label="(Identifier,LINUX_MIB_LISTENDROPS)"];
"1000551" [label="(Identifier,newsk)"];
"1000524" [label="(Call,(key = tcp_v6_md5_do_lookup(sk, &newnp->daddr)) != NULL)"];
"1000600" [label="(Identifier,sk)"];
"1000577" [label="(Call,sock_net(sk))"];
"1000546" [label="(ControlStructure,if (newkey != NULL))"];
"1000275" [label="(Call,inet6_csk_route_req(sk, req))"];
"1000527" [label="(Call,tcp_v6_md5_do_lookup(sk, &newnp->daddr))"];
"1000547" [label="(Call,newkey != NULL)"];
"1000537" [label="(Identifier,newkey)"];
"1000289" [label="(Call,newsk == NULL)"];
"1000602" [label="(Return,return NULL;)"];
"1000525" [label="(Call,key = tcp_v6_md5_do_lookup(sk, &newnp->daddr))"];
"1000111" [label="(MethodParameterIn,struct sock *sk)"];
"1000115" [label="(Block,)"];
"1000536" [label="(Call,*newkey = kmemdup(key->key, key->keylen, GFP_ATOMIC))"];
"1000549" [label="(Identifier,NULL)"];
"1000507" [label="(Call,tcp_initialize_rcv_mss(newsk))"];
"1000574" [label="(Identifier,newsk)"];
"1000598" [label="(Call,NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENDROPS))"];
"1000334" [label="(Call,ipv6_addr_copy(&newnp->daddr, &treq->rmt_addr))"];
"1000569" [label="(ControlStructure,goto out;)"];
"1000528" [label="(Identifier,sk)"];
"1000548" [label="(Identifier,newkey)"];
"1000566" [label="(Block,)"];
"1000538" [label="(Call,kmemdup(key->key, key->keylen, GFP_ATOMIC))"];
"1000599" [label="(Call,sock_net(sk))"];
"1000556" [label="(Identifier,newkey)"];
"1000335" [label="(Call,&newnp->daddr)"];
"1000565" [label="(Literal,0)"];
"1000533" [label="(Identifier,NULL)"];
"1000529" [label="(Call,&newnp->daddr)"];
"1000463" [label="(Call,sock_kfree_s(sk, opt, opt->tot_len))"];
"1000550" [label="(Call,tcp_v6_md5_do_add(newsk, &newnp->daddr,\n\t\t\t\t\t  newkey, key->keylen))"];
"1000557" [label="(Call,key->keylen)"];
"1000571" [label="(Identifier,newsk)"];
"1000526" [label="(Identifier,key)"];
"1000339" [label="(Call,&treq->rmt_addr)"];
"1000395" [label="(Call,treq->pktopts != NULL)"];
"1000589" [label="(Call,sock_kfree_s(sk, opt, opt->tot_len))"];
"1000603" [label="(Identifier,NULL)"];
"1000334" -> "1000115"  [label="AST: "];
"1000334" -> "1000339"  [label="CFG: "];
"1000335" -> "1000334"  [label="AST: "];
"1000339" -> "1000334"  [label="AST: "];
"1000346" -> "1000334"  [label="CFG: "];
"1000334" -> "1000604"  [label="DDG: ipv6_addr_copy(&newnp->daddr, &treq->rmt_addr)"];
"1000334" -> "1000604"  [label="DDG: &treq->rmt_addr"];
"1000334" -> "1000527"  [label="DDG: &newnp->daddr"];
"1000527" -> "1000525"  [label="AST: "];
"1000527" -> "1000529"  [label="CFG: "];
"1000528" -> "1000527"  [label="AST: "];
"1000529" -> "1000527"  [label="AST: "];
"1000525" -> "1000527"  [label="CFG: "];
"1000527" -> "1000604"  [label="DDG: &newnp->daddr"];
"1000527" -> "1000524"  [label="DDG: sk"];
"1000527" -> "1000524"  [label="DDG: &newnp->daddr"];
"1000527" -> "1000525"  [label="DDG: sk"];
"1000527" -> "1000525"  [label="DDG: &newnp->daddr"];
"1000284" -> "1000527"  [label="DDG: sk"];
"1000463" -> "1000527"  [label="DDG: sk"];
"1000111" -> "1000527"  [label="DDG: sk"];
"1000527" -> "1000550"  [label="DDG: &newnp->daddr"];
"1000527" -> "1000562"  [label="DDG: sk"];
"1000524" -> "1000523"  [label="AST: "];
"1000524" -> "1000533"  [label="CFG: "];
"1000525" -> "1000524"  [label="AST: "];
"1000533" -> "1000524"  [label="AST: "];
"1000537" -> "1000524"  [label="CFG: "];
"1000563" -> "1000524"  [label="CFG: "];
"1000524" -> "1000604"  [label="DDG: NULL"];
"1000524" -> "1000604"  [label="DDG: (key = tcp_v6_md5_do_lookup(sk, &newnp->daddr)) != NULL"];
"1000525" -> "1000524"  [label="DDG: key"];
"1000395" -> "1000524"  [label="DDG: NULL"];
"1000524" -> "1000547"  [label="DDG: NULL"];
"1000524" -> "1000570"  [label="DDG: NULL"];
"1000524" -> "1000602"  [label="DDG: NULL"];
"1000547" -> "1000546"  [label="AST: "];
"1000547" -> "1000549"  [label="CFG: "];
"1000548" -> "1000547"  [label="AST: "];
"1000549" -> "1000547"  [label="AST: "];
"1000551" -> "1000547"  [label="CFG: "];
"1000563" -> "1000547"  [label="CFG: "];
"1000547" -> "1000604"  [label="DDG: newkey"];
"1000547" -> "1000604"  [label="DDG: newkey != NULL"];
"1000547" -> "1000604"  [label="DDG: NULL"];
"1000536" -> "1000547"  [label="DDG: newkey"];
"1000547" -> "1000550"  [label="DDG: newkey"];
"1000547" -> "1000570"  [label="DDG: NULL"];
"1000547" -> "1000602"  [label="DDG: NULL"];
"1000550" -> "1000546"  [label="AST: "];
"1000550" -> "1000557"  [label="CFG: "];
"1000551" -> "1000550"  [label="AST: "];
"1000552" -> "1000550"  [label="AST: "];
"1000556" -> "1000550"  [label="AST: "];
"1000557" -> "1000550"  [label="AST: "];
"1000563" -> "1000550"  [label="CFG: "];
"1000550" -> "1000604"  [label="DDG: tcp_v6_md5_do_add(newsk, &newnp->daddr,\n\t\t\t\t\t  newkey, key->keylen)"];
"1000550" -> "1000604"  [label="DDG: key->keylen"];
"1000550" -> "1000604"  [label="DDG: newkey"];
"1000550" -> "1000604"  [label="DDG: &newnp->daddr"];
"1000507" -> "1000550"  [label="DDG: newsk"];
"1000538" -> "1000550"  [label="DDG: key->keylen"];
"1000550" -> "1000562"  [label="DDG: newsk"];
"1000562" -> "1000561"  [label="AST: "];
"1000562" -> "1000564"  [label="CFG: "];
"1000563" -> "1000562"  [label="AST: "];
"1000564" -> "1000562"  [label="AST: "];
"1000565" -> "1000562"  [label="CFG: "];
"1000562" -> "1000604"  [label="DDG: sk"];
"1000562" -> "1000561"  [label="DDG: sk"];
"1000562" -> "1000561"  [label="DDG: newsk"];
"1000111" -> "1000562"  [label="DDG: sk"];
"1000507" -> "1000562"  [label="DDG: newsk"];
"1000562" -> "1000567"  [label="DDG: newsk"];
"1000562" -> "1000570"  [label="DDG: newsk"];
"1000562" -> "1000599"  [label="DDG: sk"];
"1000561" -> "1000560"  [label="AST: "];
"1000561" -> "1000565"  [label="CFG: "];
"1000565" -> "1000561"  [label="AST: "];
"1000568" -> "1000561"  [label="CFG: "];
"1000571" -> "1000561"  [label="CFG: "];
"1000561" -> "1000604"  [label="DDG: __inet_inherit_port(sk, newsk)"];
"1000561" -> "1000604"  [label="DDG: __inet_inherit_port(sk, newsk) < 0"];
"1000567" -> "1000566"  [label="AST: "];
"1000567" -> "1000568"  [label="CFG: "];
"1000568" -> "1000567"  [label="AST: "];
"1000569" -> "1000567"  [label="CFG: "];
"1000567" -> "1000604"  [label="DDG: newsk"];
"1000567" -> "1000604"  [label="DDG: sock_put(newsk)"];
"1000570" -> "1000115"  [label="AST: "];
"1000570" -> "1000572"  [label="CFG: "];
"1000571" -> "1000570"  [label="AST: "];
"1000572" -> "1000570"  [label="AST: "];
"1000574" -> "1000570"  [label="CFG: "];
"1000570" -> "1000604"  [label="DDG: newsk"];
"1000570" -> "1000604"  [label="DDG: NULL"];
"1000570" -> "1000604"  [label="DDG: __inet6_hash(newsk, NULL)"];
"1000570" -> "1000573"  [label="DDG: newsk"];
"1000573" -> "1000115"  [label="AST: "];
"1000573" -> "1000574"  [label="CFG: "];
"1000574" -> "1000573"  [label="AST: "];
"1000604" -> "1000573"  [label="CFG: "];
"1000573" -> "1000604"  [label="DDG: <RET>"];
"1000574" -> "1000573"  [label="DDG: newsk"];
"1000599" -> "1000598"  [label="AST: "];
"1000599" -> "1000600"  [label="CFG: "];
"1000600" -> "1000599"  [label="AST: "];
"1000601" -> "1000599"  [label="CFG: "];
"1000599" -> "1000604"  [label="DDG: sk"];
"1000599" -> "1000598"  [label="DDG: sk"];
"1000589" -> "1000599"  [label="DDG: sk"];
"1000577" -> "1000599"  [label="DDG: sk"];
"1000275" -> "1000599"  [label="DDG: sk"];
"1000284" -> "1000599"  [label="DDG: sk"];
"1000111" -> "1000599"  [label="DDG: sk"];
"1000598" -> "1000115"  [label="AST: "];
"1000598" -> "1000601"  [label="CFG: "];
"1000601" -> "1000598"  [label="AST: "];
"1000603" -> "1000598"  [label="CFG: "];
"1000598" -> "1000604"  [label="DDG: sock_net(sk)"];
"1000598" -> "1000604"  [label="DDG: NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENDROPS)"];
"1000598" -> "1000604"  [label="DDG: LINUX_MIB_LISTENDROPS"];
"1000602" -> "1000115"  [label="AST: "];
"1000602" -> "1000603"  [label="CFG: "];
"1000603" -> "1000602"  [label="AST: "];
"1000604" -> "1000602"  [label="CFG: "];
"1000602" -> "1000604"  [label="DDG: <RET>"];
"1000603" -> "1000602"  [label="DDG: NULL"];
"1000289" -> "1000602"  [label="DDG: NULL"];
"1000526" -> "1000525"  [label="AST: "];
"1000533" -> "1000525"  [label="CFG: "];
"1000525" -> "1000604"  [label="DDG: key"];
"1000525" -> "1000604"  [label="DDG: tcp_v6_md5_do_lookup(sk, &newnp->daddr)"];
}
