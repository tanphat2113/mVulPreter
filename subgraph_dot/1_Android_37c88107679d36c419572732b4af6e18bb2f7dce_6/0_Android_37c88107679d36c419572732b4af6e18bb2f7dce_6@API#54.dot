digraph "0_Android_37c88107679d36c419572732b4af6e18bb2f7dce_6@API" {
"1000516" [label="(Call,sock->connect(&bt_remote_bdaddr, BTSOCK_RFCOMM, (const uint8_t *)&HFP_AG_UUID, 0, &rfcomm_fd, 0))"];
"1000489" [label="(Call,bdaddr_is_empty(&bt_remote_bdaddr))"];
"1000275" [label="(Call,bt_interface->create_bond(&bt_remote_bdaddr, 0 /* UNKNOWN; Currently not documented :( */))"];
"1000257" [label="(Call,bdaddr_is_empty(&bt_remote_bdaddr))"];
"1000433" [label="(Call,sock->listen(BTSOCK_RFCOMM, \"meow\", (const uint8_t *)&HFP_AG_UUID, 0, &rfcomm_fd, 0))"];
"1000436" [label="(Call,(const uint8_t *)&HFP_AG_UUID)"];
"1000520" [label="(Call,(const uint8_t *)&HFP_AG_UUID)"];
"1000514" [label="(Call,error = sock->connect(&bt_remote_bdaddr, BTSOCK_RFCOMM, (const uint8_t *)&HFP_AG_UUID, 0, &rfcomm_fd, 0))"];
"1000529" [label="(Call,error != BT_STATUS_SUCCESS)"];
"1000533" [label="(Call,fprintf(stderr, \"Unable to connect to RFCOMM socket: %d.\n\", error))"];
"1000564" [label="(Call,fprintf(stderr, \"Unable to connect to SCO socket: %d.\n\", error))"];
"1000560" [label="(Call,error != BT_STATUS_SUCCESS)"];
"1000550" [label="(Call,sock->connect(&bt_remote_bdaddr, BTSOCK_SCO, NULL, 5, &sock_fd, 0))"];
"1000548" [label="(Call,error = sock->connect(&bt_remote_bdaddr, BTSOCK_SCO, NULL, 5, &sock_fd, 0))"];
"1000550" [label="(Call,sock->connect(&bt_remote_bdaddr, BTSOCK_SCO, NULL, 5, &sock_fd, 0))"];
"1000392" [label="(Call,fprintf(stderr, \"Unable to get adapter property\n\"))"];
"1000531" [label="(Identifier,BT_STATUS_SUCCESS)"];
"1000441" [label="(Call,&rfcomm_fd)"];
"1000273" [label="(Call,rc = bt_interface->create_bond(&bt_remote_bdaddr, 0 /* UNKNOWN; Currently not documented :( */))"];
"1000558" [label="(Literal,0)"];
"1000275" [label="(Call,bt_interface->create_bond(&bt_remote_bdaddr, 0 /* UNKNOWN; Currently not documented :( */))"];
"1000276" [label="(Call,&bt_remote_bdaddr)"];
"1000164" [label="(Call,fprintf(stderr, \"Must specify one command\n\"))"];
"1000436" [label="(Call,(const uint8_t *)&HFP_AG_UUID)"];
"1000525" [label="(Call,&rfcomm_fd)"];
"1000536" [label="(Identifier,error)"];
"1000559" [label="(ControlStructure,if (error != BT_STATUS_SUCCESS))"];
"1000435" [label="(Literal,\"meow\")"];
"1000494" [label="(Identifier,stderr)"];
"1000474" [label="(Call,fprintf(stderr, \"Unable to listen for incoming SCO sockets: %d\n\", error))"];
"1000388" [label="(Call,error != BT_STATUS_SUCCESS)"];
"1000318" [label="(Call,error != BT_STATUS_SUCCESS)"];
"1000562" [label="(Identifier,BT_STATUS_SUCCESS)"];
"1000322" [label="(Call,fprintf(stderr, \"Unable to get adapter property\n\"))"];
"1000529" [label="(Call,error != BT_STATUS_SUCCESS)"];
"1000256" [label="(ControlStructure,if (bdaddr_is_empty(&bt_remote_bdaddr)))"];
"1000563" [label="(Block,)"];
"1000554" [label="(Identifier,NULL)"];
"1000493" [label="(Call,fprintf(stderr, \"Must specify a remote device address [ --bdaddr=xx:yy:zz:aa:bb:cc ]\n\"))"];
"1000571" [label="(Identifier,timeout_in_sec)"];
"1000553" [label="(Identifier,BTSOCK_SCO)"];
"1000488" [label="(ControlStructure,if (bdaddr_is_empty(&bt_remote_bdaddr)))"];
"1000560" [label="(Call,error != BT_STATUS_SUCCESS)"];
"1000565" [label="(Identifier,stderr)"];
"1000527" [label="(Literal,0)"];
"1000514" [label="(Call,error = sock->connect(&bt_remote_bdaddr, BTSOCK_RFCOMM, (const uint8_t *)&HFP_AG_UUID, 0, &rfcomm_fd, 0))"];
"1000520" [label="(Call,(const uint8_t *)&HFP_AG_UUID)"];
"1000517" [label="(Call,&bt_remote_bdaddr)"];
"1000262" [label="(Identifier,stderr)"];
"1000519" [label="(Identifier,BTSOCK_RFCOMM)"];
"1000489" [label="(Call,bdaddr_is_empty(&bt_remote_bdaddr))"];
"1000434" [label="(Identifier,BTSOCK_RFCOMM)"];
"1000540" [label="(Identifier,acl_state_changed)"];
"1000564" [label="(Call,fprintf(stderr, \"Unable to connect to SCO socket: %d.\n\", error))"];
"1000569" [label="(Literal,1)"];
"1000470" [label="(Call,error != BT_STATUS_SUCCESS)"];
"1000524" [label="(Literal,0)"];
"1000461" [label="(Call,sock->listen(BTSOCK_SCO, NULL, NULL, 5, &sock_fd, 0))"];
"1000433" [label="(Call,sock->listen(BTSOCK_RFCOMM, \"meow\", (const uint8_t *)&HFP_AG_UUID, 0, &rfcomm_fd, 0))"];
"1000561" [label="(Identifier,error)"];
"1000551" [label="(Call,&bt_remote_bdaddr)"];
"1000487" [label="(Block,)"];
"1000566" [label="(Literal,\"Unable to connect to SCO socket: %d.\n\")"];
"1000499" [label="(Call,bt_interface->enable())"];
"1000555" [label="(Literal,5)"];
"1000278" [label="(Literal,0)"];
"1000522" [label="(Call,&HFP_AG_UUID)"];
"1000178" [label="(Call,fprintf(stderr, \"Will be unable to catch signals\n\"))"];
"1000440" [label="(Literal,0)"];
"1000267" [label="(Call,bt_interface->enable())"];
"1000261" [label="(Call,fprintf(stderr, \"Must specify a remote device address [ --bdaddr=xx:yy:zz:aa:bb:cc ]\n\"))"];
"1000449" [label="(Call,fprintf(stderr, \"Unable to listen for incoming RFCOMM socket: %d\n\", error))"];
"1000533" [label="(Call,fprintf(stderr, \"Unable to connect to RFCOMM socket: %d.\n\", error))"];
"1000490" [label="(Call,&bt_remote_bdaddr)"];
"1000538" [label="(Literal,1)"];
"1000567" [label="(Identifier,error)"];
"1000516" [label="(Call,sock->connect(&bt_remote_bdaddr, BTSOCK_RFCOMM, (const uint8_t *)&HFP_AG_UUID, 0, &rfcomm_fd, 0))"];
"1000438" [label="(Call,&HFP_AG_UUID)"];
"1000548" [label="(Call,error = sock->connect(&bt_remote_bdaddr, BTSOCK_SCO, NULL, 5, &sock_fd, 0))"];
"1000556" [label="(Call,&sock_fd)"];
"1000549" [label="(Identifier,error)"];
"1000431" [label="(Call,error = sock->listen(BTSOCK_RFCOMM, \"meow\", (const uint8_t *)&HFP_AG_UUID, 0, &rfcomm_fd, 0))"];
"1000578" [label="(MethodReturn,int)"];
"1000515" [label="(Identifier,error)"];
"1000132" [label="(Call,fprintf(stderr, \"Can only select either sco_listen or sco_connect, not both\n\"))"];
"1000528" [label="(ControlStructure,if (error != BT_STATUS_SUCCESS))"];
"1000534" [label="(Identifier,stderr)"];
"1000535" [label="(Literal,\"Unable to connect to RFCOMM socket: %d.\n\")"];
"1000120" [label="(Call,fprintf(stderr, \"Can only select either bond or discoverable, not both\n\"))"];
"1000376" [label="(Call,fprintf(stderr, \"Unable to set adapter property\n\"))"];
"1000443" [label="(Literal,0)"];
"1000257" [label="(Call,bdaddr_is_empty(&bt_remote_bdaddr))"];
"1000258" [label="(Call,&bt_remote_bdaddr)"];
"1000530" [label="(Identifier,error)"];
"1000532" [label="(Block,)"];
"1000516" -> "1000514"  [label="AST: "];
"1000516" -> "1000527"  [label="CFG: "];
"1000517" -> "1000516"  [label="AST: "];
"1000519" -> "1000516"  [label="AST: "];
"1000520" -> "1000516"  [label="AST: "];
"1000524" -> "1000516"  [label="AST: "];
"1000525" -> "1000516"  [label="AST: "];
"1000527" -> "1000516"  [label="AST: "];
"1000514" -> "1000516"  [label="CFG: "];
"1000516" -> "1000578"  [label="DDG: "];
"1000516" -> "1000578"  [label="DDG: "];
"1000516" -> "1000578"  [label="DDG: "];
"1000516" -> "1000514"  [label="DDG: "];
"1000516" -> "1000514"  [label="DDG: "];
"1000516" -> "1000514"  [label="DDG: "];
"1000516" -> "1000514"  [label="DDG: "];
"1000516" -> "1000514"  [label="DDG: "];
"1000489" -> "1000516"  [label="DDG: "];
"1000433" -> "1000516"  [label="DDG: "];
"1000433" -> "1000516"  [label="DDG: "];
"1000520" -> "1000516"  [label="DDG: "];
"1000516" -> "1000550"  [label="DDG: "];
"1000489" -> "1000488"  [label="AST: "];
"1000489" -> "1000490"  [label="CFG: "];
"1000490" -> "1000489"  [label="AST: "];
"1000494" -> "1000489"  [label="CFG: "];
"1000499" -> "1000489"  [label="CFG: "];
"1000489" -> "1000578"  [label="DDG: "];
"1000275" -> "1000489"  [label="DDG: "];
"1000275" -> "1000273"  [label="AST: "];
"1000275" -> "1000278"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000278" -> "1000275"  [label="AST: "];
"1000273" -> "1000275"  [label="CFG: "];
"1000275" -> "1000578"  [label="DDG: "];
"1000275" -> "1000273"  [label="DDG: "];
"1000275" -> "1000273"  [label="DDG: "];
"1000257" -> "1000275"  [label="DDG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000257" -> "1000258"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000262" -> "1000257"  [label="CFG: "];
"1000267" -> "1000257"  [label="CFG: "];
"1000257" -> "1000578"  [label="DDG: "];
"1000433" -> "1000431"  [label="AST: "];
"1000433" -> "1000443"  [label="CFG: "];
"1000434" -> "1000433"  [label="AST: "];
"1000435" -> "1000433"  [label="AST: "];
"1000436" -> "1000433"  [label="AST: "];
"1000440" -> "1000433"  [label="AST: "];
"1000441" -> "1000433"  [label="AST: "];
"1000443" -> "1000433"  [label="AST: "];
"1000431" -> "1000433"  [label="CFG: "];
"1000433" -> "1000578"  [label="DDG: "];
"1000433" -> "1000578"  [label="DDG: "];
"1000433" -> "1000578"  [label="DDG: "];
"1000433" -> "1000431"  [label="DDG: "];
"1000433" -> "1000431"  [label="DDG: "];
"1000433" -> "1000431"  [label="DDG: "];
"1000433" -> "1000431"  [label="DDG: "];
"1000433" -> "1000431"  [label="DDG: "];
"1000436" -> "1000433"  [label="DDG: "];
"1000436" -> "1000438"  [label="CFG: "];
"1000437" -> "1000436"  [label="AST: "];
"1000438" -> "1000436"  [label="AST: "];
"1000440" -> "1000436"  [label="CFG: "];
"1000436" -> "1000578"  [label="DDG: "];
"1000436" -> "1000520"  [label="DDG: "];
"1000520" -> "1000522"  [label="CFG: "];
"1000521" -> "1000520"  [label="AST: "];
"1000522" -> "1000520"  [label="AST: "];
"1000524" -> "1000520"  [label="CFG: "];
"1000520" -> "1000578"  [label="DDG: "];
"1000514" -> "1000487"  [label="AST: "];
"1000515" -> "1000514"  [label="AST: "];
"1000530" -> "1000514"  [label="CFG: "];
"1000514" -> "1000578"  [label="DDG: "];
"1000514" -> "1000529"  [label="DDG: "];
"1000529" -> "1000528"  [label="AST: "];
"1000529" -> "1000531"  [label="CFG: "];
"1000530" -> "1000529"  [label="AST: "];
"1000531" -> "1000529"  [label="AST: "];
"1000534" -> "1000529"  [label="CFG: "];
"1000540" -> "1000529"  [label="CFG: "];
"1000470" -> "1000529"  [label="DDG: "];
"1000388" -> "1000529"  [label="DDG: "];
"1000318" -> "1000529"  [label="DDG: "];
"1000529" -> "1000533"  [label="DDG: "];
"1000529" -> "1000560"  [label="DDG: "];
"1000533" -> "1000532"  [label="AST: "];
"1000533" -> "1000536"  [label="CFG: "];
"1000534" -> "1000533"  [label="AST: "];
"1000535" -> "1000533"  [label="AST: "];
"1000536" -> "1000533"  [label="AST: "];
"1000538" -> "1000533"  [label="CFG: "];
"1000533" -> "1000578"  [label="DDG: "];
"1000533" -> "1000578"  [label="DDG: "];
"1000376" -> "1000533"  [label="DDG: "];
"1000493" -> "1000533"  [label="DDG: "];
"1000178" -> "1000533"  [label="DDG: "];
"1000392" -> "1000533"  [label="DDG: "];
"1000449" -> "1000533"  [label="DDG: "];
"1000120" -> "1000533"  [label="DDG: "];
"1000474" -> "1000533"  [label="DDG: "];
"1000132" -> "1000533"  [label="DDG: "];
"1000261" -> "1000533"  [label="DDG: "];
"1000322" -> "1000533"  [label="DDG: "];
"1000164" -> "1000533"  [label="DDG: "];
"1000533" -> "1000564"  [label="DDG: "];
"1000564" -> "1000563"  [label="AST: "];
"1000564" -> "1000567"  [label="CFG: "];
"1000565" -> "1000564"  [label="AST: "];
"1000566" -> "1000564"  [label="AST: "];
"1000567" -> "1000564"  [label="AST: "];
"1000569" -> "1000564"  [label="CFG: "];
"1000564" -> "1000578"  [label="DDG: "];
"1000564" -> "1000578"  [label="DDG: "];
"1000564" -> "1000578"  [label="DDG: "];
"1000376" -> "1000564"  [label="DDG: "];
"1000493" -> "1000564"  [label="DDG: "];
"1000178" -> "1000564"  [label="DDG: "];
"1000392" -> "1000564"  [label="DDG: "];
"1000449" -> "1000564"  [label="DDG: "];
"1000120" -> "1000564"  [label="DDG: "];
"1000474" -> "1000564"  [label="DDG: "];
"1000132" -> "1000564"  [label="DDG: "];
"1000322" -> "1000564"  [label="DDG: "];
"1000164" -> "1000564"  [label="DDG: "];
"1000261" -> "1000564"  [label="DDG: "];
"1000560" -> "1000564"  [label="DDG: "];
"1000560" -> "1000559"  [label="AST: "];
"1000560" -> "1000562"  [label="CFG: "];
"1000561" -> "1000560"  [label="AST: "];
"1000562" -> "1000560"  [label="AST: "];
"1000565" -> "1000560"  [label="CFG: "];
"1000571" -> "1000560"  [label="CFG: "];
"1000560" -> "1000578"  [label="DDG: "];
"1000560" -> "1000578"  [label="DDG: "];
"1000560" -> "1000578"  [label="DDG: "];
"1000548" -> "1000560"  [label="DDG: "];
"1000550" -> "1000548"  [label="AST: "];
"1000550" -> "1000558"  [label="CFG: "];
"1000551" -> "1000550"  [label="AST: "];
"1000553" -> "1000550"  [label="AST: "];
"1000554" -> "1000550"  [label="AST: "];
"1000555" -> "1000550"  [label="AST: "];
"1000556" -> "1000550"  [label="AST: "];
"1000558" -> "1000550"  [label="AST: "];
"1000548" -> "1000550"  [label="CFG: "];
"1000550" -> "1000578"  [label="DDG: "];
"1000550" -> "1000578"  [label="DDG: "];
"1000550" -> "1000578"  [label="DDG: "];
"1000550" -> "1000578"  [label="DDG: "];
"1000550" -> "1000548"  [label="DDG: "];
"1000550" -> "1000548"  [label="DDG: "];
"1000550" -> "1000548"  [label="DDG: "];
"1000550" -> "1000548"  [label="DDG: "];
"1000550" -> "1000548"  [label="DDG: "];
"1000550" -> "1000548"  [label="DDG: "];
"1000461" -> "1000550"  [label="DDG: "];
"1000461" -> "1000550"  [label="DDG: "];
"1000461" -> "1000550"  [label="DDG: "];
"1000548" -> "1000487"  [label="AST: "];
"1000549" -> "1000548"  [label="AST: "];
"1000561" -> "1000548"  [label="CFG: "];
"1000548" -> "1000578"  [label="DDG: "];
}
