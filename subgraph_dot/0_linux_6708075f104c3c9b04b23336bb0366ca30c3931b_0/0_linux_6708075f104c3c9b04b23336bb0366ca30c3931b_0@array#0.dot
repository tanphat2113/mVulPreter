digraph "0_linux_6708075f104c3c9b04b23336bb0366ca30c3931b_0@array" {
"1000127" [label="(Call,id = new_map->extent[0].lower_first)"];
"1000144" [label="(Call,make_kuid(ns->parent, id))"];
"1000142" [label="(Call,uid = make_kuid(ns->parent, id))"];
"1000150" [label="(Call,uid_eq(uid, current_fsuid()))"];
"1000183" [label="(Call,ns_capable(ns->parent, cap_setid))"];
"1000182" [label="(Call,ns_capable(ns->parent, cap_setid) &&\n\t    file_ns_capable(file, ns->parent, cap_setid))"];
"1000188" [label="(Call,file_ns_capable(file, ns->parent, cap_setid))"];
"1000164" [label="(Call,make_kgid(ns->parent, id))"];
"1000162" [label="(Call,gid = make_kgid(ns->parent, id))"];
"1000170" [label="(Call,gid_eq(gid, current_fsgid()))"];
"1000150" [label="(Call,uid_eq(uid, current_fsuid()))"];
"1000198" [label="(MethodReturn,static bool)"];
"1000178" [label="(Identifier,cap_setid)"];
"1000182" [label="(Call,ns_capable(ns->parent, cap_setid) &&\n\t    file_ns_capable(file, ns->parent, cap_setid))"];
"1000174" [label="(Identifier,true)"];
"1000195" [label="(Identifier,true)"];
"1000138" [label="(Identifier,cap_setid)"];
"1000181" [label="(ControlStructure,if (ns_capable(ns->parent, cap_setid) &&\n\t    file_ns_capable(file, ns->parent, cap_setid)))"];
"1000144" [label="(Call,make_kuid(ns->parent, id))"];
"1000188" [label="(Call,file_ns_capable(file, ns->parent, cap_setid))"];
"1000177" [label="(Call,cap_valid(cap_setid))"];
"1000129" [label="(Call,new_map->extent[0].lower_first)"];
"1000171" [label="(Identifier,gid)"];
"1000165" [label="(Call,ns->parent)"];
"1000142" [label="(Call,uid = make_kuid(ns->parent, id))"];
"1000197" [label="(Identifier,false)"];
"1000189" [label="(Identifier,file)"];
"1000104" [label="(MethodParameterIn,const struct file *file)"];
"1000127" [label="(Call,id = new_map->extent[0].lower_first)"];
"1000184" [label="(Call,ns->parent)"];
"1000170" [label="(Call,gid_eq(gid, current_fsgid()))"];
"1000143" [label="(Identifier,uid)"];
"1000193" [label="(Identifier,cap_setid)"];
"1000106" [label="(MethodParameterIn,int cap_setid)"];
"1000172" [label="(Call,current_fsgid())"];
"1000140" [label="(Block,)"];
"1000187" [label="(Identifier,cap_setid)"];
"1000163" [label="(Identifier,gid)"];
"1000151" [label="(Identifier,uid)"];
"1000152" [label="(Call,current_fsuid())"];
"1000154" [label="(Identifier,true)"];
"1000162" [label="(Call,gid = make_kgid(ns->parent, id))"];
"1000148" [label="(Identifier,id)"];
"1000125" [label="(Block,)"];
"1000149" [label="(ControlStructure,if (uid_eq(uid, current_fsuid())))"];
"1000168" [label="(Identifier,id)"];
"1000190" [label="(Call,ns->parent)"];
"1000160" [label="(Block,)"];
"1000164" [label="(Call,make_kgid(ns->parent, id))"];
"1000169" [label="(ControlStructure,if (gid_eq(gid, current_fsgid())))"];
"1000183" [label="(Call,ns_capable(ns->parent, cap_setid))"];
"1000145" [label="(Call,ns->parent)"];
"1000128" [label="(Identifier,id)"];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000138" -> "1000127"  [label="CFG: "];
"1000127" -> "1000198"  [label="DDG: new_map->extent[0].lower_first"];
"1000127" -> "1000198"  [label="DDG: id"];
"1000127" -> "1000144"  [label="DDG: id"];
"1000127" -> "1000164"  [label="DDG: id"];
"1000144" -> "1000142"  [label="AST: "];
"1000144" -> "1000148"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000148" -> "1000144"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000144" -> "1000198"  [label="DDG: id"];
"1000144" -> "1000198"  [label="DDG: ns->parent"];
"1000144" -> "1000142"  [label="DDG: ns->parent"];
"1000144" -> "1000142"  [label="DDG: id"];
"1000144" -> "1000183"  [label="DDG: ns->parent"];
"1000142" -> "1000140"  [label="AST: "];
"1000143" -> "1000142"  [label="AST: "];
"1000151" -> "1000142"  [label="CFG: "];
"1000142" -> "1000198"  [label="DDG: make_kuid(ns->parent, id)"];
"1000142" -> "1000150"  [label="DDG: uid"];
"1000150" -> "1000149"  [label="AST: "];
"1000150" -> "1000152"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="AST: "];
"1000154" -> "1000150"  [label="CFG: "];
"1000178" -> "1000150"  [label="CFG: "];
"1000150" -> "1000198"  [label="DDG: uid"];
"1000150" -> "1000198"  [label="DDG: current_fsuid()"];
"1000150" -> "1000198"  [label="DDG: uid_eq(uid, current_fsuid())"];
"1000183" -> "1000182"  [label="AST: "];
"1000183" -> "1000187"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000187" -> "1000183"  [label="AST: "];
"1000189" -> "1000183"  [label="CFG: "];
"1000182" -> "1000183"  [label="CFG: "];
"1000183" -> "1000198"  [label="DDG: cap_setid"];
"1000183" -> "1000198"  [label="DDG: ns->parent"];
"1000183" -> "1000182"  [label="DDG: ns->parent"];
"1000183" -> "1000182"  [label="DDG: cap_setid"];
"1000164" -> "1000183"  [label="DDG: ns->parent"];
"1000177" -> "1000183"  [label="DDG: cap_setid"];
"1000106" -> "1000183"  [label="DDG: cap_setid"];
"1000183" -> "1000188"  [label="DDG: ns->parent"];
"1000183" -> "1000188"  [label="DDG: cap_setid"];
"1000182" -> "1000181"  [label="AST: "];
"1000182" -> "1000188"  [label="CFG: "];
"1000188" -> "1000182"  [label="AST: "];
"1000195" -> "1000182"  [label="CFG: "];
"1000197" -> "1000182"  [label="CFG: "];
"1000182" -> "1000198"  [label="DDG: ns_capable(ns->parent, cap_setid) &&\n\t    file_ns_capable(file, ns->parent, cap_setid)"];
"1000182" -> "1000198"  [label="DDG: file_ns_capable(file, ns->parent, cap_setid)"];
"1000182" -> "1000198"  [label="DDG: ns_capable(ns->parent, cap_setid)"];
"1000188" -> "1000182"  [label="DDG: file"];
"1000188" -> "1000182"  [label="DDG: ns->parent"];
"1000188" -> "1000182"  [label="DDG: cap_setid"];
"1000188" -> "1000193"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000188"  [label="AST: "];
"1000193" -> "1000188"  [label="AST: "];
"1000188" -> "1000198"  [label="DDG: ns->parent"];
"1000188" -> "1000198"  [label="DDG: file"];
"1000188" -> "1000198"  [label="DDG: cap_setid"];
"1000104" -> "1000188"  [label="DDG: file"];
"1000106" -> "1000188"  [label="DDG: cap_setid"];
"1000164" -> "1000162"  [label="AST: "];
"1000164" -> "1000168"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000168" -> "1000164"  [label="AST: "];
"1000162" -> "1000164"  [label="CFG: "];
"1000164" -> "1000198"  [label="DDG: ns->parent"];
"1000164" -> "1000198"  [label="DDG: id"];
"1000164" -> "1000162"  [label="DDG: ns->parent"];
"1000164" -> "1000162"  [label="DDG: id"];
"1000162" -> "1000160"  [label="AST: "];
"1000163" -> "1000162"  [label="AST: "];
"1000171" -> "1000162"  [label="CFG: "];
"1000162" -> "1000198"  [label="DDG: make_kgid(ns->parent, id)"];
"1000162" -> "1000170"  [label="DDG: gid"];
"1000170" -> "1000169"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000174" -> "1000170"  [label="CFG: "];
"1000178" -> "1000170"  [label="CFG: "];
"1000170" -> "1000198"  [label="DDG: current_fsgid()"];
"1000170" -> "1000198"  [label="DDG: gid"];
"1000170" -> "1000198"  [label="DDG: gid_eq(gid, current_fsgid())"];
}
