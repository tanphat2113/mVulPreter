digraph "1_FFmpeg_547d690d676064069d44703a1917e0dab7e33445@API" {
"1000784" [label="(Call,read_quant_tables(c, f->quant_table))"];
"1000258" [label="(Call,get_rac(c, state))"];
"1000250" [label="(Call,get_symbol(c, state, 0))"];
"1000242" [label="(Call,get_symbol(c, state, 0))"];
"1000235" [label="(Call,get_rac(c, state))"];
"1000227" [label="(Call,get_symbol(c, state, 0))"];
"1000211" [label="(Call,get_symbol(c, state, 0))"];
"1000171" [label="(Call,get_symbol(c, state, 0))"];
"1000138" [label="(Call,get_symbol(c, state, 0))"];
"1000113" [label="(Call,c = &f->slice_context[0]->c)"];
"1000123" [label="(Call,memset(state, 128, sizeof(state)))"];
"1000198" [label="(Call,get_symbol(c, state, 1))"];
"1000782" [label="(Call,context_count = read_quant_tables(c, f->quant_table))"];
"1000790" [label="(Call,context_count < 0)"];
"1001214" [label="(Call,context_count >= 0)"];
"1001213" [label="(Call,av_assert0(context_count >= 0))"];
"1001218" [label="(Call,p->context_count < context_count)"];
"1001234" [label="(Call,p->context_count = context_count)"];
"1000962" [label="(Call,get_symbol(c, state, 0))"];
"1000961" [label="(Call,get_symbol(c, state, 0)      * f->width)"];
"1000957" [label="(Call,fs->slice_x      =  get_symbol(c, state, 0)      * f->width)"];
"1000981" [label="(Call,fs->slice_width  = (get_symbol(c, state, 0) + 1) * f->width  + fs->slice_x)"];
"1001036" [label="(Call,fs->slice_width  / f->num_h_slices)"];
"1001017" [label="(Call,fs->slice_x     /= f->num_h_slices)"];
"1001035" [label="(Call,fs->slice_width  / f->num_h_slices - fs->slice_x)"];
"1001031" [label="(Call,fs->slice_width  = fs->slice_width  / f->num_h_slices - fs->slice_x)"];
"1001064" [label="(Call,(unsigned)fs->slice_width)"];
"1001063" [label="(Call,(unsigned)fs->slice_width  > f->width)"];
"1001062" [label="(Call,(unsigned)fs->slice_width  > f->width ||\n                (unsigned)fs->slice_height > f->height)"];
"1001085" [label="(Call,(unsigned)fs->slice_x + (uint64_t)fs->slice_width  > f->width)"];
"1001084" [label="(Call,(unsigned)fs->slice_x + (uint64_t)fs->slice_width  > f->width\n                || (unsigned)fs->slice_y + (uint64_t)fs->slice_height > f->height)"];
"1001092" [label="(Call,(uint64_t)fs->slice_width)"];
"1001086" [label="(Call,(unsigned)fs->slice_x + (uint64_t)fs->slice_width)"];
"1001087" [label="(Call,(unsigned)fs->slice_x)"];
"1000985" [label="(Call,(get_symbol(c, state, 0) + 1) * f->width  + fs->slice_x)"];
"1000986" [label="(Call,(get_symbol(c, state, 0) + 1) * f->width)"];
"1000974" [label="(Call,get_symbol(c, state, 0))"];
"1000973" [label="(Call,get_symbol(c, state, 0)      * f->height)"];
"1000969" [label="(Call,fs->slice_y      =  get_symbol(c, state, 0)      * f->height)"];
"1000999" [label="(Call,fs->slice_height = (get_symbol(c, state, 0) + 1) * f->height + fs->slice_y)"];
"1001051" [label="(Call,fs->slice_height / f->num_v_slices)"];
"1001024" [label="(Call,fs->slice_y     /= f->num_v_slices)"];
"1001050" [label="(Call,fs->slice_height / f->num_v_slices - fs->slice_y)"];
"1001046" [label="(Call,fs->slice_height = fs->slice_height / f->num_v_slices - fs->slice_y)"];
"1001073" [label="(Call,(unsigned)fs->slice_height)"];
"1001072" [label="(Call,(unsigned)fs->slice_height > f->height)"];
"1001100" [label="(Call,(unsigned)fs->slice_y + (uint64_t)fs->slice_height > f->height)"];
"1001107" [label="(Call,(uint64_t)fs->slice_height)"];
"1001101" [label="(Call,(unsigned)fs->slice_y + (uint64_t)fs->slice_height)"];
"1001102" [label="(Call,(unsigned)fs->slice_y)"];
"1001003" [label="(Call,(get_symbol(c, state, 0) + 1) * f->height + fs->slice_y)"];
"1001004" [label="(Call,(get_symbol(c, state, 0) + 1) * f->height)"];
"1000988" [label="(Call,get_symbol(c, state, 0))"];
"1000987" [label="(Call,get_symbol(c, state, 0) + 1)"];
"1001006" [label="(Call,get_symbol(c, state, 0))"];
"1001005" [label="(Call,get_symbol(c, state, 0) + 1)"];
"1001147" [label="(Call,get_symbol(c, state, 0))"];
"1001145" [label="(Call,idx = get_symbol(c, state, 0))"];
"1001152" [label="(Call,idx > (unsigned)f->quant_table_count)"];
"1001168" [label="(Call,p->quant_table_index = idx)"];
"1001195" [label="(Call,memcpy(p->quant_table, f->quant_table, sizeof(p->quant_table)))"];
"1000990" [label="(Identifier,state)"];
"1001215" [label="(Identifier,context_count)"];
"1001063" [label="(Call,(unsigned)fs->slice_width  > f->width)"];
"1001219" [label="(Call,p->context_count)"];
"1001073" [label="(Call,(unsigned)fs->slice_height)"];
"1001008" [label="(Identifier,state)"];
"1000243" [label="(Identifier,c)"];
"1001154" [label="(Call,(unsigned)f->quant_table_count)"];
"1000254" [label="(Call,f->transparency   = get_rac(c, state))"];
"1000231" [label="(Call,f->chroma_planes  = get_rac(c, state))"];
"1001152" [label="(Call,idx > (unsigned)f->quant_table_count)"];
"1000229" [label="(Identifier,state)"];
"1001238" [label="(Identifier,context_count)"];
"1001017" [label="(Call,fs->slice_x     /= f->num_h_slices)"];
"1001015" [label="(Identifier,fs)"];
"1000114" [label="(Identifier,c)"];
"1001055" [label="(Call,f->num_v_slices)"];
"1000200" [label="(Identifier,state)"];
"1000971" [label="(Identifier,fs)"];
"1001033" [label="(Identifier,fs)"];
"1000889" [label="(Identifier,f)"];
"1001062" [label="(Call,(unsigned)fs->slice_width  > f->width ||\n                (unsigned)fs->slice_height > f->height)"];
"1001092" [label="(Call,(uint64_t)fs->slice_width)"];
"1000207" [label="(Call,f->colorspace = get_symbol(c, state, 0))"];
"1001089" [label="(Call,fs->slice_x)"];
"1001005" [label="(Call,get_symbol(c, state, 0) + 1)"];
"1001151" [label="(ControlStructure,if (idx > (unsigned)f->quant_table_count))"];
"1001170" [label="(Identifier,p)"];
"1001004" [label="(Call,(get_symbol(c, state, 0) + 1) * f->height)"];
"1001037" [label="(Call,fs->slice_width)"];
"1001040" [label="(Call,f->num_h_slices)"];
"1000994" [label="(Identifier,f)"];
"1001043" [label="(Call,fs->slice_x)"];
"1000966" [label="(Call,f->width)"];
"1000171" [label="(Call,get_symbol(c, state, 0))"];
"1000963" [label="(Identifier,c)"];
"1000964" [label="(Identifier,state)"];
"1000814" [label="(Call,get_symbol(c, state, 0))"];
"1000199" [label="(Identifier,c)"];
"1001222" [label="(Identifier,context_count)"];
"1001101" [label="(Call,(unsigned)fs->slice_y + (uint64_t)fs->slice_height)"];
"1000246" [label="(Call,f->chroma_v_shift = get_symbol(c, state, 0))"];
"1001112" [label="(Call,f->height)"];
"1000212" [label="(Identifier,c)"];
"1001000" [label="(Call,fs->slice_height)"];
"1000987" [label="(Call,get_symbol(c, state, 0) + 1)"];
"1001116" [label="(Identifier,AVERROR_INVALIDDATA)"];
"1000958" [label="(Call,fs->slice_x)"];
"1001050" [label="(Call,fs->slice_height / f->num_v_slices - fs->slice_y)"];
"1000123" [label="(Call,memset(state, 128, sizeof(state)))"];
"1001172" [label="(Identifier,idx)"];
"1000973" [label="(Call,get_symbol(c, state, 0)      * f->height)"];
"1000161" [label="(Call,f->ac      = f->avctx->coder_type = get_symbol(c, state, 0))"];
"1000228" [label="(Identifier,c)"];
"1001241" [label="(MethodReturn,static int)"];
"1000259" [label="(Identifier,c)"];
"1001149" [label="(Identifier,state)"];
"1001199" [label="(Call,f->quant_table)"];
"1001168" [label="(Call,p->quant_table_index = idx)"];
"1000124" [label="(Identifier,state)"];
"1001082" [label="(Identifier,AVERROR_INVALIDDATA)"];
"1000997" [label="(Identifier,fs)"];
"1000242" [label="(Call,get_symbol(c, state, 0))"];
"1000230" [label="(Literal,0)"];
"1000957" [label="(Call,fs->slice_x      =  get_symbol(c, state, 0)      * f->width)"];
"1000245" [label="(Literal,0)"];
"1001059" [label="(Identifier,fs)"];
"1000227" [label="(Call,get_symbol(c, state, 0))"];
"1001127" [label="(Identifier,i)"];
"1001085" [label="(Call,(unsigned)fs->slice_x + (uint64_t)fs->slice_width  > f->width)"];
"1001011" [label="(Call,f->height)"];
"1001026" [label="(Identifier,fs)"];
"1001019" [label="(Identifier,fs)"];
"1000125" [label="(Literal,128)"];
"1000173" [label="(Identifier,state)"];
"1001061" [label="(ControlStructure,if ((unsigned)fs->slice_width  > f->width ||\n                (unsigned)fs->slice_height > f->height))"];
"1000962" [label="(Call,get_symbol(c, state, 0))"];
"1001051" [label="(Call,fs->slice_height / f->num_v_slices)"];
"1000992" [label="(Literal,1)"];
"1000790" [label="(Call,context_count < 0)"];
"1001072" [label="(Call,(unsigned)fs->slice_height > f->height)"];
"1001058" [label="(Call,fs->slice_y)"];
"1001018" [label="(Call,fs->slice_x)"];
"1000244" [label="(Identifier,state)"];
"1000131" [label="(Identifier,f)"];
"1000986" [label="(Call,(get_symbol(c, state, 0) + 1) * f->width)"];
"1001006" [label="(Call,get_symbol(c, state, 0))"];
"1000138" [label="(Call,get_symbol(c, state, 0))"];
"1000981" [label="(Call,fs->slice_width  = (get_symbol(c, state, 0) + 1) * f->width  + fs->slice_x)"];
"1001234" [label="(Call,p->context_count = context_count)"];
"1000982" [label="(Call,fs->slice_width)"];
"1001213" [label="(Call,av_assert0(context_count >= 0))"];
"1001032" [label="(Call,fs->slice_width)"];
"1001100" [label="(Call,(unsigned)fs->slice_y + (uint64_t)fs->slice_height > f->height)"];
"1001048" [label="(Identifier,fs)"];
"1001094" [label="(Call,fs->slice_width)"];
"1001001" [label="(Identifier,fs)"];
"1001046" [label="(Call,fs->slice_height = fs->slice_height / f->num_v_slices - fs->slice_y)"];
"1000784" [label="(Call,read_quant_tables(c, f->quant_table))"];
"1000961" [label="(Call,get_symbol(c, state, 0)      * f->width)"];
"1001104" [label="(Call,fs->slice_y)"];
"1001217" [label="(ControlStructure,if (p->context_count < context_count))"];
"1001028" [label="(Call,f->num_v_slices)"];
"1000238" [label="(Call,f->chroma_h_shift = get_symbol(c, state, 0))"];
"1001047" [label="(Call,fs->slice_height)"];
"1001146" [label="(Identifier,idx)"];
"1000141" [label="(Literal,0)"];
"1000250" [label="(Call,get_symbol(c, state, 0))"];
"1000970" [label="(Call,fs->slice_y)"];
"1001014" [label="(Call,fs->slice_y)"];
"1000988" [label="(Call,get_symbol(c, state, 0))"];
"1001036" [label="(Call,fs->slice_width  / f->num_h_slices)"];
"1000172" [label="(Identifier,c)"];
"1000786" [label="(Call,f->quant_table)"];
"1001227" [label="(Identifier,p)"];
"1001102" [label="(Call,(unsigned)fs->slice_y)"];
"1000191" [label="(Call,f->state_transition[i] = get_symbol(c, state, 1) + c->one_state[i])"];
"1000140" [label="(Identifier,state)"];
"1000978" [label="(Call,f->height)"];
"1001153" [label="(Identifier,idx)"];
"1000260" [label="(Identifier,state)"];
"1001070" [label="(Identifier,f)"];
"1000139" [label="(Identifier,c)"];
"1000782" [label="(Call,context_count = read_quant_tables(c, f->quant_table))"];
"1001007" [label="(Identifier,c)"];
"1001087" [label="(Call,(unsigned)fs->slice_x)"];
"1000251" [label="(Identifier,c)"];
"1000174" [label="(Literal,0)"];
"1001024" [label="(Call,fs->slice_y     /= f->num_v_slices)"];
"1000126" [label="(Call,sizeof(state))"];
"1001003" [label="(Call,(get_symbol(c, state, 0) + 1) * f->height + fs->slice_y)"];
"1001098" [label="(Identifier,f)"];
"1001143" [label="(Block,)"];
"1000781" [label="(Block,)"];
"1000965" [label="(Literal,0)"];
"1001021" [label="(Call,f->num_h_slices)"];
"1001012" [label="(Identifier,f)"];
"1000213" [label="(Identifier,state)"];
"1001079" [label="(Identifier,f)"];
"1000198" [label="(Call,get_symbol(c, state, 1))"];
"1001148" [label="(Identifier,c)"];
"1001064" [label="(Call,(unsigned)fs->slice_width)"];
"1001031" [label="(Call,fs->slice_width  = fs->slice_width  / f->num_h_slices - fs->slice_x)"];
"1000967" [label="(Identifier,f)"];
"1000109" [label="(Call,context_count = -1)"];
"1000991" [label="(Literal,0)"];
"1001052" [label="(Call,fs->slice_height)"];
"1001010" [label="(Literal,1)"];
"1001194" [label="(Block,)"];
"1000785" [label="(Identifier,c)"];
"1001044" [label="(Identifier,fs)"];
"1000975" [label="(Identifier,c)"];
"1001218" [label="(Call,p->context_count < context_count)"];
"1000789" [label="(ControlStructure,if (context_count < 0))"];
"1001196" [label="(Call,p->quant_table)"];
"1001147" [label="(Call,get_symbol(c, state, 0))"];
"1000204" [label="(Identifier,c)"];
"1000201" [label="(Literal,1)"];
"1000993" [label="(Call,f->width)"];
"1001066" [label="(Call,fs->slice_width)"];
"1001169" [label="(Call,p->quant_table_index)"];
"1000258" [label="(Call,get_rac(c, state))"];
"1001113" [label="(Identifier,f)"];
"1000999" [label="(Call,fs->slice_height = (get_symbol(c, state, 0) + 1) * f->height + fs->slice_y)"];
"1000165" [label="(Call,f->avctx->coder_type = get_symbol(c, state, 0))"];
"1001035" [label="(Call,fs->slice_width  / f->num_h_slices - fs->slice_x)"];
"1000197" [label="(Call,get_symbol(c, state, 1) + c->one_state[i])"];
"1000976" [label="(Identifier,state)"];
"1000979" [label="(Identifier,f)"];
"1001107" [label="(Call,(uint64_t)fs->slice_height)"];
"1001097" [label="(Call,f->width)"];
"1001078" [label="(Call,f->height)"];
"1001083" [label="(ControlStructure,if (   (unsigned)fs->slice_x + (uint64_t)fs->slice_width  > f->width\n                || (unsigned)fs->slice_y + (uint64_t)fs->slice_height > f->height))"];
"1001220" [label="(Identifier,p)"];
"1000237" [label="(Identifier,state)"];
"1001212" [label="(Block,)"];
"1000113" [label="(Call,c = &f->slice_context[0]->c)"];
"1000235" [label="(Call,get_rac(c, state))"];
"1000985" [label="(Call,(get_symbol(c, state, 0) + 1) * f->width  + fs->slice_x)"];
"1001025" [label="(Call,fs->slice_y)"];
"1000214" [label="(Literal,0)"];
"1000996" [label="(Call,fs->slice_x)"];
"1001195" [label="(Call,memcpy(p->quant_table, f->quant_table, sizeof(p->quant_table)))"];
"1000252" [label="(Identifier,state)"];
"1001216" [label="(Literal,0)"];
"1000983" [label="(Identifier,fs)"];
"1000969" [label="(Call,fs->slice_y      =  get_symbol(c, state, 0)      * f->height)"];
"1001009" [label="(Literal,0)"];
"1001145" [label="(Call,idx = get_symbol(c, state, 0))"];
"1000221" [label="(Call,f->avctx->bits_per_raw_sample = get_symbol(c, state, 0))"];
"1000796" [label="(Identifier,f)"];
"1001075" [label="(Call,fs->slice_height)"];
"1000956" [label="(Block,)"];
"1001186" [label="(Call,context_count = f->context_count[idx])"];
"1000792" [label="(Literal,0)"];
"1000136" [label="(Call,v= get_symbol(c, state, 0))"];
"1000253" [label="(Literal,0)"];
"1000236" [label="(Identifier,c)"];
"1001162" [label="(Identifier,f)"];
"1001214" [label="(Call,context_count >= 0)"];
"1000115" [label="(Call,&f->slice_context[0]->c)"];
"1000977" [label="(Literal,0)"];
"1001202" [label="(Call,sizeof(p->quant_table))"];
"1000989" [label="(Identifier,c)"];
"1001175" [label="(Identifier,p)"];
"1000104" [label="(Block,)"];
"1000791" [label="(Identifier,context_count)"];
"1001109" [label="(Call,fs->slice_height)"];
"1001235" [label="(Call,p->context_count)"];
"1000783" [label="(Identifier,context_count)"];
"1001209" [label="(Identifier,f)"];
"1001086" [label="(Call,(unsigned)fs->slice_x + (uint64_t)fs->slice_width)"];
"1001069" [label="(Call,f->width)"];
"1001084" [label="(Call,(unsigned)fs->slice_x + (uint64_t)fs->slice_width  > f->width\n                || (unsigned)fs->slice_y + (uint64_t)fs->slice_height > f->height)"];
"1001150" [label="(Literal,0)"];
"1001236" [label="(Identifier,p)"];
"1000211" [label="(Call,get_symbol(c, state, 0))"];
"1000974" [label="(Call,get_symbol(c, state, 0))"];
"1001119" [label="(Identifier,i)"];
"1000784" -> "1000782"  [label="AST: "];
"1000784" -> "1000786"  [label="CFG: "];
"1000785" -> "1000784"  [label="AST: "];
"1000786" -> "1000784"  [label="AST: "];
"1000782" -> "1000784"  [label="CFG: "];
"1000784" -> "1001241"  [label="DDG: c"];
"1000784" -> "1001241"  [label="DDG: f->quant_table"];
"1000784" -> "1000782"  [label="DDG: c"];
"1000784" -> "1000782"  [label="DDG: f->quant_table"];
"1000258" -> "1000784"  [label="DDG: c"];
"1000113" -> "1000784"  [label="DDG: c"];
"1000784" -> "1000962"  [label="DDG: c"];
"1000784" -> "1001147"  [label="DDG: c"];
"1000784" -> "1001195"  [label="DDG: f->quant_table"];
"1000258" -> "1000254"  [label="AST: "];
"1000258" -> "1000260"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000260" -> "1000258"  [label="AST: "];
"1000254" -> "1000258"  [label="CFG: "];
"1000258" -> "1001241"  [label="DDG: c"];
"1000258" -> "1001241"  [label="DDG: state"];
"1000258" -> "1000254"  [label="DDG: c"];
"1000258" -> "1000254"  [label="DDG: state"];
"1000250" -> "1000258"  [label="DDG: c"];
"1000250" -> "1000258"  [label="DDG: state"];
"1000258" -> "1000814"  [label="DDG: c"];
"1000258" -> "1000814"  [label="DDG: state"];
"1000258" -> "1000962"  [label="DDG: c"];
"1000258" -> "1000962"  [label="DDG: state"];
"1000258" -> "1001147"  [label="DDG: c"];
"1000258" -> "1001147"  [label="DDG: state"];
"1000250" -> "1000246"  [label="AST: "];
"1000250" -> "1000253"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000252" -> "1000250"  [label="AST: "];
"1000253" -> "1000250"  [label="AST: "];
"1000246" -> "1000250"  [label="CFG: "];
"1000250" -> "1000246"  [label="DDG: c"];
"1000250" -> "1000246"  [label="DDG: state"];
"1000250" -> "1000246"  [label="DDG: 0"];
"1000242" -> "1000250"  [label="DDG: c"];
"1000242" -> "1000250"  [label="DDG: state"];
"1000242" -> "1000238"  [label="AST: "];
"1000242" -> "1000245"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000244" -> "1000242"  [label="AST: "];
"1000245" -> "1000242"  [label="AST: "];
"1000238" -> "1000242"  [label="CFG: "];
"1000242" -> "1000238"  [label="DDG: c"];
"1000242" -> "1000238"  [label="DDG: state"];
"1000242" -> "1000238"  [label="DDG: 0"];
"1000235" -> "1000242"  [label="DDG: c"];
"1000235" -> "1000242"  [label="DDG: state"];
"1000235" -> "1000231"  [label="AST: "];
"1000235" -> "1000237"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="AST: "];
"1000231" -> "1000235"  [label="CFG: "];
"1000235" -> "1000231"  [label="DDG: c"];
"1000235" -> "1000231"  [label="DDG: state"];
"1000227" -> "1000235"  [label="DDG: c"];
"1000227" -> "1000235"  [label="DDG: state"];
"1000211" -> "1000235"  [label="DDG: c"];
"1000211" -> "1000235"  [label="DDG: state"];
"1000227" -> "1000221"  [label="AST: "];
"1000227" -> "1000230"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000227"  [label="AST: "];
"1000230" -> "1000227"  [label="AST: "];
"1000221" -> "1000227"  [label="CFG: "];
"1000227" -> "1000221"  [label="DDG: c"];
"1000227" -> "1000221"  [label="DDG: state"];
"1000227" -> "1000221"  [label="DDG: 0"];
"1000211" -> "1000227"  [label="DDG: c"];
"1000211" -> "1000227"  [label="DDG: state"];
"1000211" -> "1000207"  [label="AST: "];
"1000211" -> "1000214"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000213" -> "1000211"  [label="AST: "];
"1000214" -> "1000211"  [label="AST: "];
"1000207" -> "1000211"  [label="CFG: "];
"1000211" -> "1000207"  [label="DDG: c"];
"1000211" -> "1000207"  [label="DDG: state"];
"1000211" -> "1000207"  [label="DDG: 0"];
"1000171" -> "1000211"  [label="DDG: c"];
"1000171" -> "1000211"  [label="DDG: state"];
"1000198" -> "1000211"  [label="DDG: c"];
"1000198" -> "1000211"  [label="DDG: state"];
"1000171" -> "1000165"  [label="AST: "];
"1000171" -> "1000174"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="AST: "];
"1000174" -> "1000171"  [label="AST: "];
"1000165" -> "1000171"  [label="CFG: "];
"1000171" -> "1000161"  [label="DDG: c"];
"1000171" -> "1000161"  [label="DDG: state"];
"1000171" -> "1000161"  [label="DDG: 0"];
"1000171" -> "1000165"  [label="DDG: c"];
"1000171" -> "1000165"  [label="DDG: state"];
"1000171" -> "1000165"  [label="DDG: 0"];
"1000138" -> "1000171"  [label="DDG: c"];
"1000138" -> "1000171"  [label="DDG: state"];
"1000171" -> "1000198"  [label="DDG: c"];
"1000171" -> "1000198"  [label="DDG: state"];
"1000138" -> "1000136"  [label="AST: "];
"1000138" -> "1000141"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000141" -> "1000138"  [label="AST: "];
"1000136" -> "1000138"  [label="CFG: "];
"1000138" -> "1001241"  [label="DDG: c"];
"1000138" -> "1001241"  [label="DDG: state"];
"1000138" -> "1000136"  [label="DDG: c"];
"1000138" -> "1000136"  [label="DDG: state"];
"1000138" -> "1000136"  [label="DDG: 0"];
"1000113" -> "1000138"  [label="DDG: c"];
"1000123" -> "1000138"  [label="DDG: state"];
"1000113" -> "1000104"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000124" -> "1000113"  [label="CFG: "];
"1000113" -> "1001241"  [label="DDG: c"];
"1000113" -> "1001241"  [label="DDG: &f->slice_context[0]->c"];
"1000113" -> "1000814"  [label="DDG: c"];
"1000113" -> "1000962"  [label="DDG: c"];
"1000113" -> "1001147"  [label="DDG: c"];
"1000123" -> "1000104"  [label="AST: "];
"1000123" -> "1000126"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000126" -> "1000123"  [label="AST: "];
"1000131" -> "1000123"  [label="CFG: "];
"1000123" -> "1001241"  [label="DDG: memset(state, 128, sizeof(state))"];
"1000123" -> "1001241"  [label="DDG: state"];
"1000123" -> "1000814"  [label="DDG: state"];
"1000123" -> "1000962"  [label="DDG: state"];
"1000123" -> "1001147"  [label="DDG: state"];
"1000198" -> "1000197"  [label="AST: "];
"1000198" -> "1000201"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000201" -> "1000198"  [label="AST: "];
"1000204" -> "1000198"  [label="CFG: "];
"1000198" -> "1000191"  [label="DDG: c"];
"1000198" -> "1000191"  [label="DDG: state"];
"1000198" -> "1000191"  [label="DDG: 1"];
"1000198" -> "1000197"  [label="DDG: c"];
"1000198" -> "1000197"  [label="DDG: state"];
"1000198" -> "1000197"  [label="DDG: 1"];
"1000782" -> "1000781"  [label="AST: "];
"1000783" -> "1000782"  [label="AST: "];
"1000791" -> "1000782"  [label="CFG: "];
"1000782" -> "1001241"  [label="DDG: read_quant_tables(c, f->quant_table)"];
"1000782" -> "1000790"  [label="DDG: context_count"];
"1000790" -> "1000789"  [label="AST: "];
"1000790" -> "1000792"  [label="CFG: "];
"1000791" -> "1000790"  [label="AST: "];
"1000792" -> "1000790"  [label="AST: "];
"1000796" -> "1000790"  [label="CFG: "];
"1000889" -> "1000790"  [label="CFG: "];
"1000790" -> "1001241"  [label="DDG: context_count"];
"1000790" -> "1001241"  [label="DDG: context_count < 0"];
"1000790" -> "1001214"  [label="DDG: context_count"];
"1001214" -> "1001213"  [label="AST: "];
"1001214" -> "1001216"  [label="CFG: "];
"1001215" -> "1001214"  [label="AST: "];
"1001216" -> "1001214"  [label="AST: "];
"1001213" -> "1001214"  [label="CFG: "];
"1001214" -> "1001213"  [label="DDG: context_count"];
"1001214" -> "1001213"  [label="DDG: 0"];
"1000109" -> "1001214"  [label="DDG: context_count"];
"1001186" -> "1001214"  [label="DDG: context_count"];
"1001218" -> "1001214"  [label="DDG: context_count"];
"1001214" -> "1001218"  [label="DDG: context_count"];
"1001213" -> "1001212"  [label="AST: "];
"1001220" -> "1001213"  [label="CFG: "];
"1001213" -> "1001241"  [label="DDG: av_assert0(context_count >= 0)"];
"1001213" -> "1001241"  [label="DDG: context_count >= 0"];
"1001218" -> "1001217"  [label="AST: "];
"1001218" -> "1001222"  [label="CFG: "];
"1001219" -> "1001218"  [label="AST: "];
"1001222" -> "1001218"  [label="AST: "];
"1001227" -> "1001218"  [label="CFG: "];
"1001236" -> "1001218"  [label="CFG: "];
"1001218" -> "1001241"  [label="DDG: p->context_count < context_count"];
"1001234" -> "1001218"  [label="DDG: p->context_count"];
"1001218" -> "1001234"  [label="DDG: context_count"];
"1001234" -> "1001212"  [label="AST: "];
"1001234" -> "1001238"  [label="CFG: "];
"1001235" -> "1001234"  [label="AST: "];
"1001238" -> "1001234"  [label="AST: "];
"1001127" -> "1001234"  [label="CFG: "];
"1001234" -> "1001241"  [label="DDG: context_count"];
"1001234" -> "1001241"  [label="DDG: p->context_count"];
"1000962" -> "1000961"  [label="AST: "];
"1000962" -> "1000965"  [label="CFG: "];
"1000963" -> "1000962"  [label="AST: "];
"1000964" -> "1000962"  [label="AST: "];
"1000965" -> "1000962"  [label="AST: "];
"1000967" -> "1000962"  [label="CFG: "];
"1000962" -> "1000961"  [label="DDG: c"];
"1000962" -> "1000961"  [label="DDG: state"];
"1000962" -> "1000961"  [label="DDG: 0"];
"1001147" -> "1000962"  [label="DDG: c"];
"1001147" -> "1000962"  [label="DDG: state"];
"1001006" -> "1000962"  [label="DDG: c"];
"1001006" -> "1000962"  [label="DDG: state"];
"1000814" -> "1000962"  [label="DDG: c"];
"1000814" -> "1000962"  [label="DDG: state"];
"1000962" -> "1000974"  [label="DDG: c"];
"1000962" -> "1000974"  [label="DDG: state"];
"1000961" -> "1000957"  [label="AST: "];
"1000961" -> "1000966"  [label="CFG: "];
"1000966" -> "1000961"  [label="AST: "];
"1000957" -> "1000961"  [label="CFG: "];
"1000961" -> "1000957"  [label="DDG: get_symbol(c, state, 0)"];
"1000961" -> "1000957"  [label="DDG: f->width"];
"1001085" -> "1000961"  [label="DDG: f->width"];
"1000961" -> "1000986"  [label="DDG: f->width"];
"1000957" -> "1000956"  [label="AST: "];
"1000958" -> "1000957"  [label="AST: "];
"1000971" -> "1000957"  [label="CFG: "];
"1000957" -> "1001241"  [label="DDG: get_symbol(c, state, 0)      * f->width"];
"1000957" -> "1000981"  [label="DDG: fs->slice_x"];
"1000957" -> "1000985"  [label="DDG: fs->slice_x"];
"1000957" -> "1001017"  [label="DDG: fs->slice_x"];
"1000981" -> "1000956"  [label="AST: "];
"1000981" -> "1000985"  [label="CFG: "];
"1000982" -> "1000981"  [label="AST: "];
"1000985" -> "1000981"  [label="AST: "];
"1001001" -> "1000981"  [label="CFG: "];
"1000981" -> "1001241"  [label="DDG: (get_symbol(c, state, 0) + 1) * f->width  + fs->slice_x"];
"1000986" -> "1000981"  [label="DDG: get_symbol(c, state, 0) + 1"];
"1000986" -> "1000981"  [label="DDG: f->width"];
"1000981" -> "1001036"  [label="DDG: fs->slice_width"];
"1001036" -> "1001035"  [label="AST: "];
"1001036" -> "1001040"  [label="CFG: "];
"1001037" -> "1001036"  [label="AST: "];
"1001040" -> "1001036"  [label="AST: "];
"1001044" -> "1001036"  [label="CFG: "];
"1001036" -> "1001241"  [label="DDG: f->num_h_slices"];
"1001036" -> "1001017"  [label="DDG: f->num_h_slices"];
"1001036" -> "1001035"  [label="DDG: fs->slice_width"];
"1001036" -> "1001035"  [label="DDG: f->num_h_slices"];
"1001017" -> "1000956"  [label="AST: "];
"1001017" -> "1001021"  [label="CFG: "];
"1001018" -> "1001017"  [label="AST: "];
"1001021" -> "1001017"  [label="AST: "];
"1001026" -> "1001017"  [label="CFG: "];
"1001017" -> "1001035"  [label="DDG: fs->slice_x"];
"1001035" -> "1001031"  [label="AST: "];
"1001035" -> "1001043"  [label="CFG: "];
"1001043" -> "1001035"  [label="AST: "];
"1001031" -> "1001035"  [label="CFG: "];
"1001035" -> "1001241"  [label="DDG: fs->slice_width  / f->num_h_slices"];
"1001035" -> "1001241"  [label="DDG: fs->slice_x"];
"1001035" -> "1001031"  [label="DDG: fs->slice_width  / f->num_h_slices"];
"1001035" -> "1001031"  [label="DDG: fs->slice_x"];
"1001035" -> "1001087"  [label="DDG: fs->slice_x"];
"1001031" -> "1000956"  [label="AST: "];
"1001032" -> "1001031"  [label="AST: "];
"1001048" -> "1001031"  [label="CFG: "];
"1001031" -> "1001241"  [label="DDG: fs->slice_width  / f->num_h_slices - fs->slice_x"];
"1001031" -> "1001064"  [label="DDG: fs->slice_width"];
"1001064" -> "1001063"  [label="AST: "];
"1001064" -> "1001066"  [label="CFG: "];
"1001065" -> "1001064"  [label="AST: "];
"1001066" -> "1001064"  [label="AST: "];
"1001070" -> "1001064"  [label="CFG: "];
"1001064" -> "1001241"  [label="DDG: fs->slice_width"];
"1001064" -> "1001063"  [label="DDG: fs->slice_width"];
"1001064" -> "1001092"  [label="DDG: fs->slice_width"];
"1001063" -> "1001062"  [label="AST: "];
"1001063" -> "1001069"  [label="CFG: "];
"1001069" -> "1001063"  [label="AST: "];
"1001074" -> "1001063"  [label="CFG: "];
"1001062" -> "1001063"  [label="CFG: "];
"1001063" -> "1001241"  [label="DDG: (unsigned)fs->slice_width"];
"1001063" -> "1001241"  [label="DDG: f->width"];
"1001063" -> "1001062"  [label="DDG: (unsigned)fs->slice_width"];
"1001063" -> "1001062"  [label="DDG: f->width"];
"1000986" -> "1001063"  [label="DDG: f->width"];
"1001063" -> "1001085"  [label="DDG: f->width"];
"1001062" -> "1001061"  [label="AST: "];
"1001062" -> "1001072"  [label="CFG: "];
"1001072" -> "1001062"  [label="AST: "];
"1001082" -> "1001062"  [label="CFG: "];
"1001088" -> "1001062"  [label="CFG: "];
"1001062" -> "1001241"  [label="DDG: (unsigned)fs->slice_width  > f->width ||\n                (unsigned)fs->slice_height > f->height"];
"1001062" -> "1001241"  [label="DDG: (unsigned)fs->slice_height > f->height"];
"1001062" -> "1001241"  [label="DDG: (unsigned)fs->slice_width  > f->width"];
"1001072" -> "1001062"  [label="DDG: (unsigned)fs->slice_height"];
"1001072" -> "1001062"  [label="DDG: f->height"];
"1001085" -> "1001084"  [label="AST: "];
"1001085" -> "1001097"  [label="CFG: "];
"1001086" -> "1001085"  [label="AST: "];
"1001097" -> "1001085"  [label="AST: "];
"1001103" -> "1001085"  [label="CFG: "];
"1001084" -> "1001085"  [label="CFG: "];
"1001085" -> "1001241"  [label="DDG: f->width"];
"1001085" -> "1001241"  [label="DDG: (unsigned)fs->slice_x + (uint64_t)fs->slice_width"];
"1001085" -> "1001084"  [label="DDG: (unsigned)fs->slice_x + (uint64_t)fs->slice_width"];
"1001085" -> "1001084"  [label="DDG: f->width"];
"1001087" -> "1001085"  [label="DDG: fs->slice_x"];
"1001092" -> "1001085"  [label="DDG: fs->slice_width"];
"1001084" -> "1001083"  [label="AST: "];
"1001084" -> "1001100"  [label="CFG: "];
"1001100" -> "1001084"  [label="AST: "];
"1001116" -> "1001084"  [label="CFG: "];
"1001119" -> "1001084"  [label="CFG: "];
"1001084" -> "1001241"  [label="DDG: (unsigned)fs->slice_x + (uint64_t)fs->slice_width  > f->width"];
"1001084" -> "1001241"  [label="DDG: (unsigned)fs->slice_y + (uint64_t)fs->slice_height > f->height"];
"1001084" -> "1001241"  [label="DDG: (unsigned)fs->slice_x + (uint64_t)fs->slice_width  > f->width\n                || (unsigned)fs->slice_y + (uint64_t)fs->slice_height > f->height"];
"1001100" -> "1001084"  [label="DDG: (unsigned)fs->slice_y + (uint64_t)fs->slice_height"];
"1001100" -> "1001084"  [label="DDG: f->height"];
"1001092" -> "1001086"  [label="AST: "];
"1001092" -> "1001094"  [label="CFG: "];
"1001093" -> "1001092"  [label="AST: "];
"1001094" -> "1001092"  [label="AST: "];
"1001086" -> "1001092"  [label="CFG: "];
"1001092" -> "1001241"  [label="DDG: fs->slice_width"];
"1001092" -> "1001086"  [label="DDG: fs->slice_width"];
"1001087" -> "1001086"  [label="AST: "];
"1001098" -> "1001086"  [label="CFG: "];
"1001086" -> "1001241"  [label="DDG: (unsigned)fs->slice_x"];
"1001086" -> "1001241"  [label="DDG: (uint64_t)fs->slice_width"];
"1001087" -> "1001086"  [label="DDG: fs->slice_x"];
"1001087" -> "1001089"  [label="CFG: "];
"1001088" -> "1001087"  [label="AST: "];
"1001089" -> "1001087"  [label="AST: "];
"1001093" -> "1001087"  [label="CFG: "];
"1001087" -> "1001241"  [label="DDG: fs->slice_x"];
"1000985" -> "1000996"  [label="CFG: "];
"1000986" -> "1000985"  [label="AST: "];
"1000996" -> "1000985"  [label="AST: "];
"1000985" -> "1001241"  [label="DDG: (get_symbol(c, state, 0) + 1) * f->width"];
"1000986" -> "1000985"  [label="DDG: get_symbol(c, state, 0) + 1"];
"1000986" -> "1000985"  [label="DDG: f->width"];
"1000986" -> "1000993"  [label="CFG: "];
"1000987" -> "1000986"  [label="AST: "];
"1000993" -> "1000986"  [label="AST: "];
"1000997" -> "1000986"  [label="CFG: "];
"1000988" -> "1000986"  [label="DDG: c"];
"1000988" -> "1000986"  [label="DDG: state"];
"1000988" -> "1000986"  [label="DDG: 0"];
"1000974" -> "1000973"  [label="AST: "];
"1000974" -> "1000977"  [label="CFG: "];
"1000975" -> "1000974"  [label="AST: "];
"1000976" -> "1000974"  [label="AST: "];
"1000977" -> "1000974"  [label="AST: "];
"1000979" -> "1000974"  [label="CFG: "];
"1000974" -> "1000973"  [label="DDG: c"];
"1000974" -> "1000973"  [label="DDG: state"];
"1000974" -> "1000973"  [label="DDG: 0"];
"1000974" -> "1000988"  [label="DDG: c"];
"1000974" -> "1000988"  [label="DDG: state"];
"1000973" -> "1000969"  [label="AST: "];
"1000973" -> "1000978"  [label="CFG: "];
"1000978" -> "1000973"  [label="AST: "];
"1000969" -> "1000973"  [label="CFG: "];
"1000973" -> "1000969"  [label="DDG: get_symbol(c, state, 0)"];
"1000973" -> "1000969"  [label="DDG: f->height"];
"1001072" -> "1000973"  [label="DDG: f->height"];
"1001004" -> "1000973"  [label="DDG: f->height"];
"1001100" -> "1000973"  [label="DDG: f->height"];
"1000973" -> "1001004"  [label="DDG: f->height"];
"1000969" -> "1000956"  [label="AST: "];
"1000970" -> "1000969"  [label="AST: "];
"1000983" -> "1000969"  [label="CFG: "];
"1000969" -> "1001241"  [label="DDG: get_symbol(c, state, 0)      * f->height"];
"1000969" -> "1000999"  [label="DDG: fs->slice_y"];
"1000969" -> "1001003"  [label="DDG: fs->slice_y"];
"1000969" -> "1001024"  [label="DDG: fs->slice_y"];
"1000999" -> "1000956"  [label="AST: "];
"1000999" -> "1001003"  [label="CFG: "];
"1001000" -> "1000999"  [label="AST: "];
"1001003" -> "1000999"  [label="AST: "];
"1001019" -> "1000999"  [label="CFG: "];
"1000999" -> "1001241"  [label="DDG: (get_symbol(c, state, 0) + 1) * f->height + fs->slice_y"];
"1001004" -> "1000999"  [label="DDG: get_symbol(c, state, 0) + 1"];
"1001004" -> "1000999"  [label="DDG: f->height"];
"1000999" -> "1001051"  [label="DDG: fs->slice_height"];
"1001051" -> "1001050"  [label="AST: "];
"1001051" -> "1001055"  [label="CFG: "];
"1001052" -> "1001051"  [label="AST: "];
"1001055" -> "1001051"  [label="AST: "];
"1001059" -> "1001051"  [label="CFG: "];
"1001051" -> "1001241"  [label="DDG: f->num_v_slices"];
"1001051" -> "1001024"  [label="DDG: f->num_v_slices"];
"1001051" -> "1001050"  [label="DDG: fs->slice_height"];
"1001051" -> "1001050"  [label="DDG: f->num_v_slices"];
"1001024" -> "1000956"  [label="AST: "];
"1001024" -> "1001028"  [label="CFG: "];
"1001025" -> "1001024"  [label="AST: "];
"1001028" -> "1001024"  [label="AST: "];
"1001033" -> "1001024"  [label="CFG: "];
"1001024" -> "1001050"  [label="DDG: fs->slice_y"];
"1001050" -> "1001046"  [label="AST: "];
"1001050" -> "1001058"  [label="CFG: "];
"1001058" -> "1001050"  [label="AST: "];
"1001046" -> "1001050"  [label="CFG: "];
"1001050" -> "1001241"  [label="DDG: fs->slice_height / f->num_v_slices"];
"1001050" -> "1001241"  [label="DDG: fs->slice_y"];
"1001050" -> "1001046"  [label="DDG: fs->slice_height / f->num_v_slices"];
"1001050" -> "1001046"  [label="DDG: fs->slice_y"];
"1001050" -> "1001102"  [label="DDG: fs->slice_y"];
"1001046" -> "1000956"  [label="AST: "];
"1001047" -> "1001046"  [label="AST: "];
"1001065" -> "1001046"  [label="CFG: "];
"1001046" -> "1001241"  [label="DDG: fs->slice_height"];
"1001046" -> "1001241"  [label="DDG: fs->slice_height / f->num_v_slices - fs->slice_y"];
"1001046" -> "1001073"  [label="DDG: fs->slice_height"];
"1001046" -> "1001107"  [label="DDG: fs->slice_height"];
"1001073" -> "1001072"  [label="AST: "];
"1001073" -> "1001075"  [label="CFG: "];
"1001074" -> "1001073"  [label="AST: "];
"1001075" -> "1001073"  [label="AST: "];
"1001079" -> "1001073"  [label="CFG: "];
"1001073" -> "1001241"  [label="DDG: fs->slice_height"];
"1001073" -> "1001072"  [label="DDG: fs->slice_height"];
"1001073" -> "1001107"  [label="DDG: fs->slice_height"];
"1001072" -> "1001078"  [label="CFG: "];
"1001078" -> "1001072"  [label="AST: "];
"1001072" -> "1001241"  [label="DDG: (unsigned)fs->slice_height"];
"1001072" -> "1001241"  [label="DDG: f->height"];
"1001004" -> "1001072"  [label="DDG: f->height"];
"1001072" -> "1001100"  [label="DDG: f->height"];
"1001100" -> "1001112"  [label="CFG: "];
"1001101" -> "1001100"  [label="AST: "];
"1001112" -> "1001100"  [label="AST: "];
"1001100" -> "1001241"  [label="DDG: (unsigned)fs->slice_y + (uint64_t)fs->slice_height"];
"1001100" -> "1001241"  [label="DDG: f->height"];
"1001102" -> "1001100"  [label="DDG: fs->slice_y"];
"1001107" -> "1001100"  [label="DDG: fs->slice_height"];
"1001004" -> "1001100"  [label="DDG: f->height"];
"1001107" -> "1001101"  [label="AST: "];
"1001107" -> "1001109"  [label="CFG: "];
"1001108" -> "1001107"  [label="AST: "];
"1001109" -> "1001107"  [label="AST: "];
"1001101" -> "1001107"  [label="CFG: "];
"1001107" -> "1001241"  [label="DDG: fs->slice_height"];
"1001107" -> "1001101"  [label="DDG: fs->slice_height"];
"1001102" -> "1001101"  [label="AST: "];
"1001113" -> "1001101"  [label="CFG: "];
"1001101" -> "1001241"  [label="DDG: (uint64_t)fs->slice_height"];
"1001101" -> "1001241"  [label="DDG: (unsigned)fs->slice_y"];
"1001102" -> "1001101"  [label="DDG: fs->slice_y"];
"1001102" -> "1001104"  [label="CFG: "];
"1001103" -> "1001102"  [label="AST: "];
"1001104" -> "1001102"  [label="AST: "];
"1001108" -> "1001102"  [label="CFG: "];
"1001102" -> "1001241"  [label="DDG: fs->slice_y"];
"1001003" -> "1001014"  [label="CFG: "];
"1001004" -> "1001003"  [label="AST: "];
"1001014" -> "1001003"  [label="AST: "];
"1001003" -> "1001241"  [label="DDG: (get_symbol(c, state, 0) + 1) * f->height"];
"1001004" -> "1001003"  [label="DDG: get_symbol(c, state, 0) + 1"];
"1001004" -> "1001003"  [label="DDG: f->height"];
"1001004" -> "1001011"  [label="CFG: "];
"1001005" -> "1001004"  [label="AST: "];
"1001011" -> "1001004"  [label="AST: "];
"1001015" -> "1001004"  [label="CFG: "];
"1001004" -> "1001241"  [label="DDG: f->height"];
"1001004" -> "1001241"  [label="DDG: get_symbol(c, state, 0) + 1"];
"1001006" -> "1001004"  [label="DDG: c"];
"1001006" -> "1001004"  [label="DDG: state"];
"1001006" -> "1001004"  [label="DDG: 0"];
"1000988" -> "1000987"  [label="AST: "];
"1000988" -> "1000991"  [label="CFG: "];
"1000989" -> "1000988"  [label="AST: "];
"1000990" -> "1000988"  [label="AST: "];
"1000991" -> "1000988"  [label="AST: "];
"1000992" -> "1000988"  [label="CFG: "];
"1000988" -> "1000987"  [label="DDG: c"];
"1000988" -> "1000987"  [label="DDG: state"];
"1000988" -> "1000987"  [label="DDG: 0"];
"1000988" -> "1001006"  [label="DDG: c"];
"1000988" -> "1001006"  [label="DDG: state"];
"1000987" -> "1000992"  [label="CFG: "];
"1000992" -> "1000987"  [label="AST: "];
"1000994" -> "1000987"  [label="CFG: "];
"1001006" -> "1001005"  [label="AST: "];
"1001006" -> "1001009"  [label="CFG: "];
"1001007" -> "1001006"  [label="AST: "];
"1001008" -> "1001006"  [label="AST: "];
"1001009" -> "1001006"  [label="AST: "];
"1001010" -> "1001006"  [label="CFG: "];
"1001006" -> "1001241"  [label="DDG: state"];
"1001006" -> "1001241"  [label="DDG: c"];
"1001006" -> "1001005"  [label="DDG: c"];
"1001006" -> "1001005"  [label="DDG: state"];
"1001006" -> "1001005"  [label="DDG: 0"];
"1001006" -> "1001147"  [label="DDG: c"];
"1001006" -> "1001147"  [label="DDG: state"];
"1001005" -> "1001010"  [label="CFG: "];
"1001010" -> "1001005"  [label="AST: "];
"1001012" -> "1001005"  [label="CFG: "];
"1001005" -> "1001241"  [label="DDG: get_symbol(c, state, 0)"];
"1001147" -> "1001145"  [label="AST: "];
"1001147" -> "1001150"  [label="CFG: "];
"1001148" -> "1001147"  [label="AST: "];
"1001149" -> "1001147"  [label="AST: "];
"1001150" -> "1001147"  [label="AST: "];
"1001145" -> "1001147"  [label="CFG: "];
"1001147" -> "1001241"  [label="DDG: c"];
"1001147" -> "1001241"  [label="DDG: state"];
"1001147" -> "1001145"  [label="DDG: c"];
"1001147" -> "1001145"  [label="DDG: state"];
"1001147" -> "1001145"  [label="DDG: 0"];
"1000814" -> "1001147"  [label="DDG: c"];
"1000814" -> "1001147"  [label="DDG: state"];
"1001145" -> "1001143"  [label="AST: "];
"1001146" -> "1001145"  [label="AST: "];
"1001153" -> "1001145"  [label="CFG: "];
"1001145" -> "1001241"  [label="DDG: get_symbol(c, state, 0)"];
"1001145" -> "1001152"  [label="DDG: idx"];
"1001152" -> "1001151"  [label="AST: "];
"1001152" -> "1001154"  [label="CFG: "];
"1001153" -> "1001152"  [label="AST: "];
"1001154" -> "1001152"  [label="AST: "];
"1001162" -> "1001152"  [label="CFG: "];
"1001170" -> "1001152"  [label="CFG: "];
"1001152" -> "1001241"  [label="DDG: (unsigned)f->quant_table_count"];
"1001152" -> "1001241"  [label="DDG: idx > (unsigned)f->quant_table_count"];
"1001152" -> "1001241"  [label="DDG: idx"];
"1001154" -> "1001152"  [label="DDG: f->quant_table_count"];
"1001152" -> "1001168"  [label="DDG: idx"];
"1001168" -> "1001143"  [label="AST: "];
"1001168" -> "1001172"  [label="CFG: "];
"1001169" -> "1001168"  [label="AST: "];
"1001172" -> "1001168"  [label="AST: "];
"1001175" -> "1001168"  [label="CFG: "];
"1001168" -> "1001241"  [label="DDG: idx"];
"1001168" -> "1001241"  [label="DDG: p->quant_table_index"];
"1001195" -> "1001194"  [label="AST: "];
"1001195" -> "1001202"  [label="CFG: "];
"1001196" -> "1001195"  [label="AST: "];
"1001199" -> "1001195"  [label="AST: "];
"1001202" -> "1001195"  [label="AST: "];
"1001209" -> "1001195"  [label="CFG: "];
"1001195" -> "1001241"  [label="DDG: f->quant_table"];
"1001195" -> "1001241"  [label="DDG: p->quant_table"];
"1001195" -> "1001241"  [label="DDG: memcpy(p->quant_table, f->quant_table, sizeof(p->quant_table))"];
}
