digraph "0_php_a72cd07f2983dc43a6bb35209dc4687852e53c09@pointer" {
"1000333" [label="(Call,load_1(ms, action, fn, &errs, mset))"];
"1000155" [label="(Call,action == FILE_CHECK)"];
"1000167" [label="(Call,php_sys_stat(fn, &st))"];
"1000385" [label="(Call,set_text_binary(ms, mset[j].me, mset[j].count, i))"];
"1000357" [label="(Call,i < mset[j].count)"];
"1000380" [label="(Call,i++)"];
"1000398" [label="(Call,qsort(mset[j].me, mset[j].count, sizeof(*mset[j].me),\n\t\t    apprentice_sort))"];
"1000417" [label="(Call,set_last_default(ms, mset[j].me, mset[j].count))"];
"1000431" [label="(Call,coalesce_entries(ms, mset[j].me, mset[j].count,\n\t\t    &map->magic[j], &map->nmagic[j]))"];
"1000430" [label="(Call,coalesce_entries(ms, mset[j].me, mset[j].count,\n\t\t    &map->magic[j], &map->nmagic[j]) == -1)"];
"1000471" [label="(Call,magic_entry_free(mset[j].me, mset[j].count))"];
"1000383" [label="(Call,i = set_text_binary(ms, mset[j].me, mset[j].count, i))"];
"1000401" [label="(Identifier,mset)"];
"1000416" [label="(Identifier,apprentice_sort)"];
"1000431" [label="(Call,coalesce_entries(ms, mset[j].me, mset[j].count,\n\t\t    &map->magic[j], &map->nmagic[j]))"];
"1000433" [label="(Call,mset[j].me)"];
"1000167" [label="(Call,php_sys_stat(fn, &st))"];
"1000443" [label="(Call,&map->magic[j])"];
"1000380" [label="(Call,i++)"];
"1000332" [label="(ControlStructure,else)"];
"1000382" [label="(ControlStructure,continue;)"];
"1000155" [label="(Call,action == FILE_CHECK)"];
"1000341" [label="(Identifier,errs)"];
"1000234" [label="(Call,stat(mfn, &st))"];
"1000386" [label="(Identifier,ms)"];
"1000385" [label="(Call,set_text_binary(ms, mset[j].me, mset[j].count, i))"];
"1000513" [label="(MethodReturn,RET)"];
"1000477" [label="(Call,mset[j].count)"];
"1000317" [label="(Call,load_1(ms, action, filearr[i], &errs, mset))"];
"1000392" [label="(Call,mset[j].count)"];
"1000384" [label="(Identifier,i)"];
"1000379" [label="(Block,)"];
"1000336" [label="(Identifier,fn)"];
"1000182" [label="(Call,(char *)fn)"];
"1000456" [label="(Literal,1)"];
"1000449" [label="(Call,&map->nmagic[j])"];
"1000462" [label="(ControlStructure,for (j = 0; j < MAGIC_SETS; j++))"];
"1000168" [label="(Identifier,fn)"];
"1000455" [label="(Call,-1)"];
"1000372" [label="(Identifier,mset)"];
"1000404" [label="(Call,mset[j].count)"];
"1000166" [label="(Call,php_sys_stat(fn, &st) == 0)"];
"1000335" [label="(Identifier,action)"];
"1000397" [label="(Identifier,i)"];
"1000357" [label="(Call,i < mset[j].count)"];
"1000352" [label="(Block,)"];
"1000381" [label="(Identifier,i)"];
"1000471" [label="(Call,magic_entry_free(mset[j].me, mset[j].count))"];
"1000459" [label="(Identifier,errs)"];
"1000419" [label="(Call,mset[j].me)"];
"1000337" [label="(Call,&errs)"];
"1000154" [label="(ControlStructure,if (action == FILE_CHECK))"];
"1000470" [label="(Identifier,j)"];
"1000424" [label="(Call,mset[j].count)"];
"1000358" [label="(Identifier,i)"];
"1000383" [label="(Call,i = set_text_binary(ms, mset[j].me, mset[j].count, i))"];
"1000432" [label="(Identifier,ms)"];
"1000429" [label="(ControlStructure,if (coalesce_entries(ms, mset[j].me, mset[j].count,\n\t\t    &map->magic[j], &map->nmagic[j]) == -1))"];
"1000156" [label="(Identifier,action)"];
"1000353" [label="(ControlStructure,for (i = 0; i < mset[j].count; ))"];
"1000418" [label="(Identifier,ms)"];
"1000409" [label="(Call,sizeof(*mset[j].me))"];
"1000334" [label="(Identifier,ms)"];
"1000169" [label="(Call,&st)"];
"1000333" [label="(Call,load_1(ms, action, fn, &errs, mset))"];
"1000364" [label="(Block,)"];
"1000399" [label="(Call,mset[j].me)"];
"1000351" [label="(Identifier,j)"];
"1000438" [label="(Call,mset[j].count)"];
"1000472" [label="(Call,mset[j].me)"];
"1000359" [label="(Call,mset[j].count)"];
"1000171" [label="(Literal,0)"];
"1000398" [label="(Call,qsort(mset[j].me, mset[j].count, sizeof(*mset[j].me),\n\t\t    apprentice_sort))"];
"1000339" [label="(Identifier,mset)"];
"1000417" [label="(Call,set_last_default(ms, mset[j].me, mset[j].count))"];
"1000430" [label="(Call,coalesce_entries(ms, mset[j].me, mset[j].count,\n\t\t    &map->magic[j], &map->nmagic[j]) == -1)"];
"1000387" [label="(Call,mset[j].me)"];
"1000157" [label="(Identifier,FILE_CHECK)"];
"1000354" [label="(Call,i = 0)"];
"1000333" -> "1000332"  [label="AST: "];
"1000333" -> "1000339"  [label="CFG: "];
"1000334" -> "1000333"  [label="AST: "];
"1000335" -> "1000333"  [label="AST: "];
"1000336" -> "1000333"  [label="AST: "];
"1000337" -> "1000333"  [label="AST: "];
"1000339" -> "1000333"  [label="AST: "];
"1000341" -> "1000333"  [label="CFG: "];
"1000333" -> "1000513"  [label="DDG: ms"];
"1000333" -> "1000513"  [label="DDG: mset"];
"1000333" -> "1000513"  [label="DDG: fn"];
"1000333" -> "1000513"  [label="DDG: load_1(ms, action, fn, &errs, mset)"];
"1000333" -> "1000513"  [label="DDG: &errs"];
"1000333" -> "1000513"  [label="DDG: action"];
"1000155" -> "1000333"  [label="DDG: action"];
"1000167" -> "1000333"  [label="DDG: fn"];
"1000333" -> "1000385"  [label="DDG: ms"];
"1000333" -> "1000417"  [label="DDG: ms"];
"1000155" -> "1000154"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000157" -> "1000155"  [label="AST: "];
"1000159" -> "1000155"  [label="CFG: "];
"1000168" -> "1000155"  [label="CFG: "];
"1000155" -> "1000513"  [label="DDG: FILE_CHECK"];
"1000155" -> "1000513"  [label="DDG: action == FILE_CHECK"];
"1000155" -> "1000513"  [label="DDG: action"];
"1000155" -> "1000317"  [label="DDG: action"];
"1000167" -> "1000166"  [label="AST: "];
"1000167" -> "1000169"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000169" -> "1000167"  [label="AST: "];
"1000171" -> "1000167"  [label="CFG: "];
"1000167" -> "1000513"  [label="DDG: &st"];
"1000167" -> "1000166"  [label="DDG: fn"];
"1000167" -> "1000166"  [label="DDG: &st"];
"1000167" -> "1000182"  [label="DDG: fn"];
"1000167" -> "1000234"  [label="DDG: &st"];
"1000385" -> "1000383"  [label="AST: "];
"1000385" -> "1000397"  [label="CFG: "];
"1000386" -> "1000385"  [label="AST: "];
"1000387" -> "1000385"  [label="AST: "];
"1000392" -> "1000385"  [label="AST: "];
"1000397" -> "1000385"  [label="AST: "];
"1000383" -> "1000385"  [label="CFG: "];
"1000385" -> "1000513"  [label="DDG: mset[j].me"];
"1000385" -> "1000513"  [label="DDG: ms"];
"1000385" -> "1000357"  [label="DDG: mset[j].count"];
"1000385" -> "1000383"  [label="DDG: ms"];
"1000385" -> "1000383"  [label="DDG: mset[j].me"];
"1000385" -> "1000383"  [label="DDG: mset[j].count"];
"1000385" -> "1000383"  [label="DDG: i"];
"1000317" -> "1000385"  [label="DDG: ms"];
"1000431" -> "1000385"  [label="DDG: ms"];
"1000431" -> "1000385"  [label="DDG: mset[j].me"];
"1000357" -> "1000385"  [label="DDG: mset[j].count"];
"1000357" -> "1000385"  [label="DDG: i"];
"1000385" -> "1000398"  [label="DDG: mset[j].me"];
"1000385" -> "1000417"  [label="DDG: ms"];
"1000385" -> "1000471"  [label="DDG: mset[j].me"];
"1000357" -> "1000353"  [label="AST: "];
"1000357" -> "1000359"  [label="CFG: "];
"1000358" -> "1000357"  [label="AST: "];
"1000359" -> "1000357"  [label="AST: "];
"1000372" -> "1000357"  [label="CFG: "];
"1000401" -> "1000357"  [label="CFG: "];
"1000357" -> "1000513"  [label="DDG: i < mset[j].count"];
"1000357" -> "1000513"  [label="DDG: i"];
"1000357" -> "1000513"  [label="DDG: mset[j].count"];
"1000383" -> "1000357"  [label="DDG: i"];
"1000380" -> "1000357"  [label="DDG: i"];
"1000354" -> "1000357"  [label="DDG: i"];
"1000431" -> "1000357"  [label="DDG: mset[j].count"];
"1000357" -> "1000380"  [label="DDG: i"];
"1000357" -> "1000398"  [label="DDG: mset[j].count"];
"1000357" -> "1000471"  [label="DDG: mset[j].count"];
"1000380" -> "1000379"  [label="AST: "];
"1000380" -> "1000381"  [label="CFG: "];
"1000381" -> "1000380"  [label="AST: "];
"1000382" -> "1000380"  [label="CFG: "];
"1000380" -> "1000513"  [label="DDG: i"];
"1000398" -> "1000352"  [label="AST: "];
"1000398" -> "1000416"  [label="CFG: "];
"1000399" -> "1000398"  [label="AST: "];
"1000404" -> "1000398"  [label="AST: "];
"1000409" -> "1000398"  [label="AST: "];
"1000416" -> "1000398"  [label="AST: "];
"1000418" -> "1000398"  [label="CFG: "];
"1000398" -> "1000513"  [label="DDG: qsort(mset[j].me, mset[j].count, sizeof(*mset[j].me),\n\t\t    apprentice_sort)"];
"1000398" -> "1000513"  [label="DDG: apprentice_sort"];
"1000431" -> "1000398"  [label="DDG: mset[j].me"];
"1000398" -> "1000417"  [label="DDG: mset[j].me"];
"1000398" -> "1000417"  [label="DDG: mset[j].count"];
"1000417" -> "1000352"  [label="AST: "];
"1000417" -> "1000424"  [label="CFG: "];
"1000418" -> "1000417"  [label="AST: "];
"1000419" -> "1000417"  [label="AST: "];
"1000424" -> "1000417"  [label="AST: "];
"1000432" -> "1000417"  [label="CFG: "];
"1000417" -> "1000513"  [label="DDG: set_last_default(ms, mset[j].me, mset[j].count)"];
"1000317" -> "1000417"  [label="DDG: ms"];
"1000431" -> "1000417"  [label="DDG: ms"];
"1000417" -> "1000431"  [label="DDG: ms"];
"1000417" -> "1000431"  [label="DDG: mset[j].me"];
"1000417" -> "1000431"  [label="DDG: mset[j].count"];
"1000431" -> "1000430"  [label="AST: "];
"1000431" -> "1000449"  [label="CFG: "];
"1000432" -> "1000431"  [label="AST: "];
"1000433" -> "1000431"  [label="AST: "];
"1000438" -> "1000431"  [label="AST: "];
"1000443" -> "1000431"  [label="AST: "];
"1000449" -> "1000431"  [label="AST: "];
"1000456" -> "1000431"  [label="CFG: "];
"1000431" -> "1000513"  [label="DDG: &map->magic[j]"];
"1000431" -> "1000513"  [label="DDG: mset[j].count"];
"1000431" -> "1000513"  [label="DDG: &map->nmagic[j]"];
"1000431" -> "1000513"  [label="DDG: ms"];
"1000431" -> "1000513"  [label="DDG: mset[j].me"];
"1000431" -> "1000430"  [label="DDG: &map->magic[j]"];
"1000431" -> "1000430"  [label="DDG: mset[j].count"];
"1000431" -> "1000430"  [label="DDG: mset[j].me"];
"1000431" -> "1000430"  [label="DDG: &map->nmagic[j]"];
"1000431" -> "1000430"  [label="DDG: ms"];
"1000431" -> "1000471"  [label="DDG: mset[j].me"];
"1000431" -> "1000471"  [label="DDG: mset[j].count"];
"1000430" -> "1000429"  [label="AST: "];
"1000430" -> "1000455"  [label="CFG: "];
"1000455" -> "1000430"  [label="AST: "];
"1000459" -> "1000430"  [label="CFG: "];
"1000351" -> "1000430"  [label="CFG: "];
"1000430" -> "1000513"  [label="DDG: -1"];
"1000430" -> "1000513"  [label="DDG: coalesce_entries(ms, mset[j].me, mset[j].count,\n\t\t    &map->magic[j], &map->nmagic[j])"];
"1000430" -> "1000513"  [label="DDG: coalesce_entries(ms, mset[j].me, mset[j].count,\n\t\t    &map->magic[j], &map->nmagic[j]) == -1"];
"1000455" -> "1000430"  [label="DDG: 1"];
"1000471" -> "1000462"  [label="AST: "];
"1000471" -> "1000477"  [label="CFG: "];
"1000472" -> "1000471"  [label="AST: "];
"1000477" -> "1000471"  [label="AST: "];
"1000470" -> "1000471"  [label="CFG: "];
"1000471" -> "1000513"  [label="DDG: mset[j].me"];
"1000471" -> "1000513"  [label="DDG: mset[j].count"];
"1000471" -> "1000513"  [label="DDG: magic_entry_free(mset[j].me, mset[j].count)"];
"1000383" -> "1000364"  [label="AST: "];
"1000384" -> "1000383"  [label="AST: "];
"1000358" -> "1000383"  [label="CFG: "];
"1000383" -> "1000513"  [label="DDG: set_text_binary(ms, mset[j].me, mset[j].count, i)"];
}
