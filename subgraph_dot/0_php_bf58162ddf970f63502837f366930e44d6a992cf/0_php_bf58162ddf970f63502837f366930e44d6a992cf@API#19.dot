digraph "0_php_bf58162ddf970f63502837f366930e44d6a992cf@API" {
"1000526" [label="(Call,entry_len = strlen(entry))"];
"1000528" [label="(Call,strlen(entry))"];
"1000523" [label="(Call,entry = path_info)"];
"1000641" [label="(Call,ZVAL_STRINGL(params, entry, entry_len, 1))"];
"1000772" [label="(Call,!entry_len)"];
"1000771" [label="(Call,!entry_len || (entry_len == 1 && entry[0] == '/'))"];
"1000775" [label="(Call,entry_len == 1)"];
"1000774" [label="(Call,entry_len == 1 && entry[0] == '/')"];
"1000958" [label="(Call,zend_memrchr(entry, '.', entry_len))"];
"1000956" [label="(Call,*ext = zend_memrchr(entry, '.', entry_len))"];
"1000966" [label="(Call,++ext)"];
"1000976" [label="(Call,strlen(ext))"];
"1000971" [label="(Call,zend_hash_find(Z_ARRVAL_P(mimeoverride), ext, strlen(ext)+1, (void **) &val))"];
"1000969" [label="(Call,SUCCESS == zend_hash_find(Z_ARRVAL_P(mimeoverride), ext, strlen(ext)+1, (void **) &val))"];
"1000975" [label="(Call,strlen(ext)+1)"];
"1000789" [label="(Call,entry = index_php)"];
"1000522" [label="(Block,)"];
"1000604" [label="(Call,entry = estrndup(pt + (fname_len - (basename - fname)), entry_len))"];
"1000956" [label="(Call,*ext = zend_memrchr(entry, '.', entry_len))"];
"1000957" [label="(Identifier,ext)"];
"1000529" [label="(Identifier,entry)"];
"1000771" [label="(Call,!entry_len || (entry_len == 1 && entry[0] == '/'))"];
"1000972" [label="(Call,Z_ARRVAL_P(mimeoverride))"];
"1001030" [label="(MethodReturn,RET)"];
"1000770" [label="(ControlStructure,if (!entry_len || (entry_len == 1 && entry[0] == '/')))"];
"1000528" [label="(Call,strlen(entry))"];
"1000532" [label="(Identifier,path_info)"];
"1000959" [label="(Identifier,entry)"];
"1000773" [label="(Identifier,entry_len)"];
"1000641" [label="(Call,ZVAL_STRINGL(params, entry, entry_len, 1))"];
"1000648" [label="(Identifier,zp)"];
"1000774" [label="(Call,entry_len == 1 && entry[0] == '/')"];
"1000975" [label="(Call,strlen(ext)+1)"];
"1001028" [label="(Identifier,mime_type)"];
"1000639" [label="(Call,MAKE_STD_ZVAL(params))"];
"1000960" [label="(Literal,'.')"];
"1000722" [label="(Call,entry = estrndup(Z_STRVAL_PP(fci.retval_ptr_ptr), Z_STRLEN_PP(fci.retval_ptr_ptr)))"];
"1000967" [label="(Identifier,ext)"];
"1000432" [label="(Call,SUCCESS == zend_hash_find(_server, \"PATH_INFO\", sizeof(\"PATH_INFO\"), (void**)&z_path_info))"];
"1000792" [label="(Call,entry_len = index_php_len)"];
"1000741" [label="(Call,entry = Z_STRVAL_P(retval_ptr))"];
"1000966" [label="(Call,++ext)"];
"1000745" [label="(Call,entry_len = Z_STRLEN_P(retval_ptr))"];
"1000785" [label="(Identifier,entry)"];
"1000454" [label="(Call,estrndup(Z_STRVAL_PP(z_path_info), entry_len))"];
"1000978" [label="(Literal,1)"];
"1000524" [label="(Identifier,entry)"];
"1000969" [label="(Call,SUCCESS == zend_hash_find(Z_ARRVAL_P(mimeoverride), ext, strlen(ext)+1, (void **) &val))"];
"1000818" [label="(Call,entry_len = sizeof(\"/index.php\")-1)"];
"1000633" [label="(Block,)"];
"1000958" [label="(Call,zend_memrchr(entry, '.', entry_len))"];
"1000979" [label="(Call,(void **) &val)"];
"1000487" [label="(Call,entry_len = 0)"];
"1000971" [label="(Call,zend_hash_find(Z_ARRVAL_P(mimeoverride), ext, strlen(ext)+1, (void **) &val))"];
"1000784" [label="(Call,efree(entry))"];
"1000490" [label="(Call,entry = estrndup(\"\", 0))"];
"1000645" [label="(Literal,1)"];
"1000733" [label="(Call,entry_len = Z_STRLEN_PP(fci.retval_ptr_ptr))"];
"1000525" [label="(Identifier,path_info)"];
"1000835" [label="(Identifier,tmp)"];
"1000778" [label="(Call,entry[0] == '/')"];
"1000527" [label="(Identifier,entry_len)"];
"1000780" [label="(Identifier,entry)"];
"1000961" [label="(Identifier,entry_len)"];
"1000772" [label="(Call,!entry_len)"];
"1000812" [label="(Call,entry = estrndup(\"/index.php\", sizeof(\"/index.php\")))"];
"1000642" [label="(Identifier,params)"];
"1000808" [label="(Call,++entry_len)"];
"1000965" [label="(Block,)"];
"1000775" [label="(Call,entry_len == 1)"];
"1000899" [label="(Call,spprintf(&(ctr.line), 4096, \"Location: %s%s\", path_info, entry + 1))"];
"1000968" [label="(ControlStructure,if (SUCCESS == zend_hash_find(Z_ARRVAL_P(mimeoverride), ext, strlen(ext)+1, (void **) &val)))"];
"1000473" [label="(Call,memcpy(path_info + Z_STRLEN_PP(z_script_name), entry, entry_len + 1))"];
"1000796" [label="(Call,entry[0] != '/')"];
"1000986" [label="(Identifier,val)"];
"1000526" [label="(Call,entry_len = strlen(entry))"];
"1000643" [label="(Identifier,entry)"];
"1000776" [label="(Identifier,entry_len)"];
"1000606" [label="(Call,estrndup(pt + (fname_len - (basename - fname)), entry_len))"];
"1000974" [label="(Identifier,ext)"];
"1000970" [label="(Identifier,SUCCESS)"];
"1000553" [label="(Call,entry_len = 0)"];
"1000976" [label="(Call,strlen(ext))"];
"1000777" [label="(Literal,1)"];
"1000977" [label="(Identifier,ext)"];
"1000916" [label="(Call,spprintf(&(ctr.line), 4096, \"Location: %s%s\", path_info, entry))"];
"1000954" [label="(Block,)"];
"1000907" [label="(Call,entry + 1)"];
"1000523" [label="(Call,entry = path_info)"];
"1000644" [label="(Identifier,entry_len)"];
"1000548" [label="(Call,entry = estrndup(\"\", 0))"];
"1000964" [label="(Identifier,ext)"];
"1000526" -> "1000522"  [label="AST: "];
"1000526" -> "1000528"  [label="CFG: "];
"1000527" -> "1000526"  [label="AST: "];
"1000528" -> "1000526"  [label="AST: "];
"1000532" -> "1000526"  [label="CFG: "];
"1000526" -> "1001030"  [label="DDG: strlen(entry)"];
"1000528" -> "1000526"  [label="DDG: entry"];
"1000526" -> "1000641"  [label="DDG: entry_len"];
"1000526" -> "1000772"  [label="DDG: entry_len"];
"1000528" -> "1000529"  [label="CFG: "];
"1000529" -> "1000528"  [label="AST: "];
"1000523" -> "1000528"  [label="DDG: entry"];
"1000528" -> "1000641"  [label="DDG: entry"];
"1000528" -> "1000778"  [label="DDG: entry"];
"1000528" -> "1000784"  [label="DDG: entry"];
"1000528" -> "1000899"  [label="DDG: entry"];
"1000528" -> "1000907"  [label="DDG: entry"];
"1000528" -> "1000916"  [label="DDG: entry"];
"1000528" -> "1000958"  [label="DDG: entry"];
"1000523" -> "1000522"  [label="AST: "];
"1000523" -> "1000525"  [label="CFG: "];
"1000524" -> "1000523"  [label="AST: "];
"1000525" -> "1000523"  [label="AST: "];
"1000527" -> "1000523"  [label="CFG: "];
"1000641" -> "1000633"  [label="AST: "];
"1000641" -> "1000645"  [label="CFG: "];
"1000642" -> "1000641"  [label="AST: "];
"1000643" -> "1000641"  [label="AST: "];
"1000644" -> "1000641"  [label="AST: "];
"1000645" -> "1000641"  [label="AST: "];
"1000648" -> "1000641"  [label="CFG: "];
"1000641" -> "1001030"  [label="DDG: entry"];
"1000641" -> "1001030"  [label="DDG: ZVAL_STRINGL(params, entry, entry_len, 1)"];
"1000641" -> "1001030"  [label="DDG: entry_len"];
"1000641" -> "1001030"  [label="DDG: params"];
"1000639" -> "1000641"  [label="DDG: params"];
"1000490" -> "1000641"  [label="DDG: entry"];
"1000604" -> "1000641"  [label="DDG: entry"];
"1000473" -> "1000641"  [label="DDG: entry"];
"1000548" -> "1000641"  [label="DDG: entry"];
"1000606" -> "1000641"  [label="DDG: entry_len"];
"1000553" -> "1000641"  [label="DDG: entry_len"];
"1000487" -> "1000641"  [label="DDG: entry_len"];
"1000454" -> "1000641"  [label="DDG: entry_len"];
"1000772" -> "1000771"  [label="AST: "];
"1000772" -> "1000773"  [label="CFG: "];
"1000773" -> "1000772"  [label="AST: "];
"1000776" -> "1000772"  [label="CFG: "];
"1000771" -> "1000772"  [label="CFG: "];
"1000772" -> "1001030"  [label="DDG: entry_len"];
"1000772" -> "1000771"  [label="DDG: entry_len"];
"1000606" -> "1000772"  [label="DDG: entry_len"];
"1000733" -> "1000772"  [label="DDG: entry_len"];
"1000553" -> "1000772"  [label="DDG: entry_len"];
"1000487" -> "1000772"  [label="DDG: entry_len"];
"1000745" -> "1000772"  [label="DDG: entry_len"];
"1000454" -> "1000772"  [label="DDG: entry_len"];
"1000772" -> "1000775"  [label="DDG: entry_len"];
"1000772" -> "1000958"  [label="DDG: entry_len"];
"1000771" -> "1000770"  [label="AST: "];
"1000771" -> "1000774"  [label="CFG: "];
"1000774" -> "1000771"  [label="AST: "];
"1000785" -> "1000771"  [label="CFG: "];
"1000835" -> "1000771"  [label="CFG: "];
"1000771" -> "1001030"  [label="DDG: entry_len == 1 && entry[0] == '/'"];
"1000771" -> "1001030"  [label="DDG: !entry_len"];
"1000771" -> "1001030"  [label="DDG: !entry_len || (entry_len == 1 && entry[0] == '/')"];
"1000774" -> "1000771"  [label="DDG: entry_len == 1"];
"1000774" -> "1000771"  [label="DDG: entry[0] == '/'"];
"1000775" -> "1000774"  [label="AST: "];
"1000775" -> "1000777"  [label="CFG: "];
"1000776" -> "1000775"  [label="AST: "];
"1000777" -> "1000775"  [label="AST: "];
"1000780" -> "1000775"  [label="CFG: "];
"1000774" -> "1000775"  [label="CFG: "];
"1000775" -> "1001030"  [label="DDG: entry_len"];
"1000775" -> "1000774"  [label="DDG: entry_len"];
"1000775" -> "1000774"  [label="DDG: 1"];
"1000775" -> "1000958"  [label="DDG: entry_len"];
"1000774" -> "1000778"  [label="CFG: "];
"1000778" -> "1000774"  [label="AST: "];
"1000774" -> "1001030"  [label="DDG: entry[0] == '/'"];
"1000774" -> "1001030"  [label="DDG: entry_len == 1"];
"1000778" -> "1000774"  [label="DDG: entry[0]"];
"1000778" -> "1000774"  [label="DDG: '/'"];
"1000958" -> "1000956"  [label="AST: "];
"1000958" -> "1000961"  [label="CFG: "];
"1000959" -> "1000958"  [label="AST: "];
"1000960" -> "1000958"  [label="AST: "];
"1000961" -> "1000958"  [label="AST: "];
"1000956" -> "1000958"  [label="CFG: "];
"1000958" -> "1001030"  [label="DDG: entry_len"];
"1000958" -> "1001030"  [label="DDG: entry"];
"1000958" -> "1000956"  [label="DDG: entry"];
"1000958" -> "1000956"  [label="DDG: '.'"];
"1000958" -> "1000956"  [label="DDG: entry_len"];
"1000789" -> "1000958"  [label="DDG: entry"];
"1000812" -> "1000958"  [label="DDG: entry"];
"1000796" -> "1000958"  [label="DDG: entry[0]"];
"1000778" -> "1000958"  [label="DDG: entry[0]"];
"1000916" -> "1000958"  [label="DDG: entry"];
"1000741" -> "1000958"  [label="DDG: entry"];
"1000490" -> "1000958"  [label="DDG: entry"];
"1000722" -> "1000958"  [label="DDG: entry"];
"1000604" -> "1000958"  [label="DDG: entry"];
"1000473" -> "1000958"  [label="DDG: entry"];
"1000548" -> "1000958"  [label="DDG: entry"];
"1000792" -> "1000958"  [label="DDG: entry_len"];
"1000808" -> "1000958"  [label="DDG: entry_len"];
"1000818" -> "1000958"  [label="DDG: entry_len"];
"1000956" -> "1000954"  [label="AST: "];
"1000957" -> "1000956"  [label="AST: "];
"1000964" -> "1000956"  [label="CFG: "];
"1000956" -> "1001030"  [label="DDG: ext"];
"1000956" -> "1001030"  [label="DDG: zend_memrchr(entry, '.', entry_len)"];
"1000956" -> "1000966"  [label="DDG: ext"];
"1000966" -> "1000965"  [label="AST: "];
"1000966" -> "1000967"  [label="CFG: "];
"1000967" -> "1000966"  [label="AST: "];
"1000970" -> "1000966"  [label="CFG: "];
"1000966" -> "1000976"  [label="DDG: ext"];
"1000976" -> "1000975"  [label="AST: "];
"1000976" -> "1000977"  [label="CFG: "];
"1000977" -> "1000976"  [label="AST: "];
"1000978" -> "1000976"  [label="CFG: "];
"1000976" -> "1000971"  [label="DDG: ext"];
"1000976" -> "1000975"  [label="DDG: ext"];
"1000971" -> "1000969"  [label="AST: "];
"1000971" -> "1000979"  [label="CFG: "];
"1000972" -> "1000971"  [label="AST: "];
"1000974" -> "1000971"  [label="AST: "];
"1000975" -> "1000971"  [label="AST: "];
"1000979" -> "1000971"  [label="AST: "];
"1000969" -> "1000971"  [label="CFG: "];
"1000971" -> "1001030"  [label="DDG: Z_ARRVAL_P(mimeoverride)"];
"1000971" -> "1001030"  [label="DDG: (void **) &val"];
"1000971" -> "1001030"  [label="DDG: ext"];
"1000971" -> "1001030"  [label="DDG: strlen(ext)+1"];
"1000971" -> "1000969"  [label="DDG: Z_ARRVAL_P(mimeoverride)"];
"1000971" -> "1000969"  [label="DDG: ext"];
"1000971" -> "1000969"  [label="DDG: strlen(ext)+1"];
"1000971" -> "1000969"  [label="DDG: (void **) &val"];
"1000972" -> "1000971"  [label="DDG: mimeoverride"];
"1000979" -> "1000971"  [label="DDG: &val"];
"1000969" -> "1000968"  [label="AST: "];
"1000970" -> "1000969"  [label="AST: "];
"1000986" -> "1000969"  [label="CFG: "];
"1001028" -> "1000969"  [label="CFG: "];
"1000969" -> "1001030"  [label="DDG: SUCCESS == zend_hash_find(Z_ARRVAL_P(mimeoverride), ext, strlen(ext)+1, (void **) &val)"];
"1000969" -> "1001030"  [label="DDG: zend_hash_find(Z_ARRVAL_P(mimeoverride), ext, strlen(ext)+1, (void **) &val)"];
"1000969" -> "1001030"  [label="DDG: SUCCESS"];
"1000432" -> "1000969"  [label="DDG: SUCCESS"];
"1000975" -> "1000978"  [label="CFG: "];
"1000978" -> "1000975"  [label="AST: "];
"1000980" -> "1000975"  [label="CFG: "];
"1000975" -> "1001030"  [label="DDG: strlen(ext)"];
}
