digraph "0_Android_830cb39cb2a0f1bf6704d264e2a5c5029c175dd7@pointer" {
"1000349" [label="(Call,opcode = p_data[2])"];
"1000218" [label="(Call,p_data = (uint8_t*)(p_pkt + 1) + p_pkt->offset)"];
"1000221" [label="(Call,(uint8_t*)(p_pkt + 1))"];
"1000132" [label="(MethodParameterIn,BT_HDR* p_pkt)"];
"1000962" [label="(Call,opcode != AVRC_OP_BROWSE)"];
"1001008" [label="(Call,msg.hdr.opcode = opcode)"];
"1001015" [label="(Call,avrc_cb.ccb[handle].msg_cback.Run(handle, label, opcode, &msg))"];
"1001039" [label="(Call,opcode == AVRC_OP_BROWSE)"];
"1001038" [label="(Call,opcode == AVRC_OP_BROWSE && msg.browse.p_browse_pkt == NULL)"];
"1001023" [label="(Call,AVRC_TRACE_WARNING(\"%s %s msg handle:%d, control:%d, cr:%d, opcode:x%x\",\n                       __func__, p_drop_msg, handle,\n                       avrc_cb.ccb[handle].control, cr, opcode))"];
"1000219" [label="(Identifier,p_data)"];
"1000129" [label="(MethodParameterIn,uint8_t handle)"];
"1000581" [label="(Call,AVRC_TRACE_WARNING(\n                \"%s: message length %d too short: must be at least %d\",\n                __func__, p_pkt->len, AVRC_OP_SUB_UNIT_INFO_RSP_LEN))"];
"1001017" [label="(Identifier,label)"];
"1001035" [label="(Identifier,cr)"];
"1000939" [label="(Call,avrc_cb.ccb[handle].control & AVRC_CT_TARGET)"];
"1000132" [label="(MethodParameterIn,BT_HDR* p_pkt)"];
"1000987" [label="(Call,cr = AVCT_RSP)"];
"1000984" [label="(Call,p_drop_msg = \"rejected\")"];
"1000911" [label="(Call,msg.pass.p_pass_data = p_data)"];
"1000296" [label="(Call,osi_free(p_pkt))"];
"1000270" [label="(Call,msg.browse.p_browse_pkt = p_pkt)"];
"1000332" [label="(Call,p_data[1] & AVRC_SUBTYPE_MASK)"];
"1000231" [label="(Identifier,msg)"];
"1001036" [label="(Identifier,opcode)"];
"1001023" [label="(Call,AVRC_TRACE_WARNING(\"%s %s msg handle:%d, control:%d, cr:%d, opcode:x%x\",\n                       __func__, p_drop_msg, handle,\n                       avrc_cb.ccb[handle].control, cr, opcode))"];
"1000361" [label="(Identifier,avrc_cb)"];
"1000667" [label="(Call,p_pkt + 1)"];
"1000948" [label="(Call,cr == AVCT_CMD)"];
"1001022" [label="(Block,)"];
"1001045" [label="(Identifier,msg)"];
"1000966" [label="(Identifier,drop)"];
"1001057" [label="(MethodReturn,static void)"];
"1000357" [label="(Call,avrc_cb.ccb[handle].control & AVRC_CT_TARGET)"];
"1000388" [label="(Call,cr == AVCT_CMD)"];
"1001037" [label="(ControlStructure,if (opcode == AVRC_OP_BROWSE && msg.browse.p_browse_pkt == NULL))"];
"1000788" [label="(Call,p_drop_msg = \"req_cont\")"];
"1000803" [label="(Call,p_drop_msg = \"sent_fragd\")"];
"1000793" [label="(Call,p_drop_msg = \"sent_frag3\")"];
"1001019" [label="(Call,&msg)"];
"1000973" [label="(Call,avrc_copy_packet(p_pkt, AVRC_OP_REJ_MSG_LEN))"];
"1001038" [label="(Call,opcode == AVRC_OP_BROWSE && msg.browse.p_browse_pkt == NULL)"];
"1001015" [label="(Call,avrc_cb.ccb[handle].msg_cback.Run(handle, label, opcode, &msg))"];
"1001018" [label="(Identifier,opcode)"];
"1000515" [label="(Call,cr == AVCT_CMD)"];
"1000394" [label="(Call,avrc_copy_packet(p_pkt, AVRC_OP_UNIT_INFO_RSP_LEN))"];
"1000366" [label="(Call,cr == AVCT_CMD)"];
"1000637" [label="(Call,p_data++)"];
"1001027" [label="(Identifier,handle)"];
"1001055" [label="(Call,osi_free(p_pkt))"];
"1001016" [label="(Identifier,handle)"];
"1000827" [label="(Call,cr == AVCT_CMD)"];
"1000969" [label="(Identifier,reject)"];
"1001040" [label="(Identifier,opcode)"];
"1000961" [label="(ControlStructure,if (opcode != AVRC_OP_BROWSE))"];
"1000880" [label="(Call,p_data++)"];
"1001008" [label="(Call,msg.hdr.opcode = opcode)"];
"1000370" [label="(Call,avrc_cb.ccb[handle].control & AVRC_CT_CONTROL)"];
"1000808" [label="(Call,cr == AVCT_RSP)"];
"1000703" [label="(Call,p_msg->p_vendor_data = p_data)"];
"1000133" [label="(Block,)"];
"1000963" [label="(Identifier,opcode)"];
"1000673" [label="(Call,p_begin = p_data)"];
"1000351" [label="(Call,p_data[2])"];
"1000305" [label="(Call,p_data[0] & AVRC_CTYPE_MASK)"];
"1000665" [label="(Call,(uint8_t*)(p_pkt + 1))"];
"1001026" [label="(Identifier,p_drop_msg)"];
"1001041" [label="(Identifier,AVRC_OP_BROWSE)"];
"1000350" [label="(Identifier,opcode)"];
"1000684" [label="(Call,cr == AVCT_CMD)"];
"1000962" [label="(Call,opcode != AVRC_OP_BROWSE)"];
"1000130" [label="(MethodParameterIn,uint8_t label)"];
"1000594" [label="(Call,p_drop_msg = \"SUB_UNIT_INFO_RSP too short\")"];
"1000698" [label="(Call,AVRC_BE_STREAM_TO_CO_ID(p_msg->company_id, p_data))"];
"1000310" [label="(Call,AVRC_TRACE_DEBUG(\"%s handle:%d, ctype:%d, offset:%d, len: %d\", __func__,\n                      handle, msg.hdr.ctype, p_pkt->offset, p_pkt->len))"];
"1000254" [label="(Call,msg.browse.p_browse_data = p_data)"];
"1001042" [label="(Call,msg.browse.p_browse_pkt == NULL)"];
"1000598" [label="(Call,p_data += AVRC_AVC_HDR_SIZE)"];
"1001051" [label="(Identifier,do_free)"];
"1000815" [label="(Call,avrc_send_next_vendor_cmd(handle))"];
"1000379" [label="(Call,cr == AVCT_RSP)"];
"1001009" [label="(Call,msg.hdr.opcode)"];
"1000964" [label="(Identifier,AVRC_OP_BROWSE)"];
"1000503" [label="(Call,p_data++)"];
"1000446" [label="(Call,cr = AVCT_RSP)"];
"1000242" [label="(Call,opcode = AVRC_OP_BROWSE)"];
"1001014" [label="(Identifier,opcode)"];
"1000569" [label="(Call,p_drop_msg = \"auto responded\")"];
"1000474" [label="(Call,p_drop_msg = \"UNIT_INFO_RSP too short\")"];
"1000753" [label="(Call,avrc_proc_far_msg(handle, label, cr, &p_pkt, p_msg))"];
"1000740" [label="(Call,cr == AVCT_CMD)"];
"1000227" [label="(Identifier,p_pkt)"];
"1000344" [label="(Call,p_data[1] & AVRC_SUBID_MASK)"];
"1000929" [label="(Call,cr == AVCT_RSP)"];
"1000610" [label="(Call,p_data++)"];
"1001024" [label="(Literal,\"%s %s msg handle:%d, control:%d, cr:%d, opcode:x%x\")"];
"1000221" [label="(Call,(uint8_t*)(p_pkt + 1))"];
"1000505" [label="(Call,AVRC_BE_STREAM_TO_CO_ID(msg.unit.company_id, p_data))"];
"1000218" [label="(Call,p_data = (uint8_t*)(p_pkt + 1) + p_pkt->offset)"];
"1001039" [label="(Call,opcode == AVRC_OP_BROWSE)"];
"1000478" [label="(Call,p_data += 4)"];
"1000933" [label="(Call,avrc_send_next_vendor_cmd(handle))"];
"1000871" [label="(Call,p_data++)"];
"1000207" [label="(Call,AVRC_TRACE_DEBUG(\"AVRC: stopping timer (handle=0x%02x)\", handle))"];
"1001007" [label="(Block,)"];
"1001025" [label="(Identifier,__func__)"];
"1001028" [label="(Call,avrc_cb.ccb[handle].control)"];
"1000349" [label="(Call,opcode = p_data[2])"];
"1000695" [label="(Call,p_data += AVRC_AVC_HDR_SIZE)"];
"1000203" [label="(Call,cr == AVCT_RSP)"];
"1000838" [label="(Call,p_data += AVRC_AVC_HDR_SIZE)"];
"1000157" [label="(Call,* p_drop_msg = \"dropped\")"];
"1000461" [label="(Call,AVRC_TRACE_WARNING(\n                \"%s: message length %d too short: must be at least %d\",\n                __func__, p_pkt->len, AVRC_OP_UNIT_INFO_RSP_LEN))"];
"1000798" [label="(Call,p_drop_msg = \"sent_frag_free\")"];
"1000566" [label="(Call,cr = AVCT_RSP)"];
"1000220" [label="(Call,(uint8_t*)(p_pkt + 1) + p_pkt->offset)"];
"1000521" [label="(Call,avrc_copy_packet(p_pkt, AVRC_OP_SUB_UNIT_INFO_RSP_LEN))"];
"1000996" [label="(Call,AVCT_MsgReq(handle, label, cr, p_rsp))"];
"1001054" [label="(Identifier,do_free)"];
"1000188" [label="(Call,osi_free(p_pkt))"];
"1000196" [label="(Call,osi_free(p_pkt))"];
"1000223" [label="(Call,p_pkt + 1)"];
"1000783" [label="(Call,p_drop_msg = \"sent_frag\")"];
"1000278" [label="(Block,)"];
"1000449" [label="(Call,p_drop_msg = \"auto respond\")"];
"1000131" [label="(MethodParameterIn,uint8_t cr)"];
"1000716" [label="(Call,p_data - p_begin)"];
"1000229" [label="(Call,memset(&msg, 0, sizeof(tAVRC_MSG)))"];
"1000349" -> "1000278"  [label="AST: "];
"1000349" -> "1000351"  [label="CFG: "];
"1000350" -> "1000349"  [label="AST: "];
"1000351" -> "1000349"  [label="AST: "];
"1000361" -> "1000349"  [label="CFG: "];
"1000349" -> "1001057"  [label="DDG: "];
"1000218" -> "1000349"  [label="DDG: "];
"1000349" -> "1000962"  [label="DDG: "];
"1000349" -> "1001008"  [label="DDG: "];
"1000349" -> "1001015"  [label="DDG: "];
"1000349" -> "1001023"  [label="DDG: "];
"1000218" -> "1000133"  [label="AST: "];
"1000218" -> "1000220"  [label="CFG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000220" -> "1000218"  [label="AST: "];
"1000231" -> "1000218"  [label="CFG: "];
"1000218" -> "1001057"  [label="DDG: "];
"1000218" -> "1001057"  [label="DDG: "];
"1000221" -> "1000218"  [label="DDG: "];
"1000218" -> "1000254"  [label="DDG: "];
"1000218" -> "1000305"  [label="DDG: "];
"1000218" -> "1000332"  [label="DDG: "];
"1000218" -> "1000344"  [label="DDG: "];
"1000218" -> "1000478"  [label="DDG: "];
"1000218" -> "1000503"  [label="DDG: "];
"1000218" -> "1000505"  [label="DDG: "];
"1000218" -> "1000598"  [label="DDG: "];
"1000218" -> "1000610"  [label="DDG: "];
"1000218" -> "1000637"  [label="DDG: "];
"1000218" -> "1000673"  [label="DDG: "];
"1000218" -> "1000695"  [label="DDG: "];
"1000218" -> "1000698"  [label="DDG: "];
"1000218" -> "1000703"  [label="DDG: "];
"1000218" -> "1000716"  [label="DDG: "];
"1000218" -> "1000838"  [label="DDG: "];
"1000218" -> "1000871"  [label="DDG: "];
"1000218" -> "1000880"  [label="DDG: "];
"1000218" -> "1000911"  [label="DDG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000227" -> "1000221"  [label="CFG: "];
"1000221" -> "1001057"  [label="DDG: "];
"1000221" -> "1000220"  [label="DDG: "];
"1000132" -> "1000221"  [label="DDG: "];
"1000132" -> "1000128"  [label="AST: "];
"1000132" -> "1001057"  [label="DDG: "];
"1000132" -> "1000188"  [label="DDG: "];
"1000132" -> "1000196"  [label="DDG: "];
"1000132" -> "1000223"  [label="DDG: "];
"1000132" -> "1000270"  [label="DDG: "];
"1000132" -> "1000296"  [label="DDG: "];
"1000132" -> "1000394"  [label="DDG: "];
"1000132" -> "1000521"  [label="DDG: "];
"1000132" -> "1000665"  [label="DDG: "];
"1000132" -> "1000667"  [label="DDG: "];
"1000132" -> "1000973"  [label="DDG: "];
"1000132" -> "1001055"  [label="DDG: "];
"1000962" -> "1000961"  [label="AST: "];
"1000962" -> "1000964"  [label="CFG: "];
"1000963" -> "1000962"  [label="AST: "];
"1000964" -> "1000962"  [label="AST: "];
"1000966" -> "1000962"  [label="CFG: "];
"1000969" -> "1000962"  [label="CFG: "];
"1000962" -> "1001057"  [label="DDG: "];
"1000242" -> "1000962"  [label="DDG: "];
"1000962" -> "1001008"  [label="DDG: "];
"1000962" -> "1001015"  [label="DDG: "];
"1000962" -> "1001023"  [label="DDG: "];
"1000962" -> "1001039"  [label="DDG: "];
"1001008" -> "1001007"  [label="AST: "];
"1001008" -> "1001014"  [label="CFG: "];
"1001009" -> "1001008"  [label="AST: "];
"1001014" -> "1001008"  [label="AST: "];
"1001016" -> "1001008"  [label="CFG: "];
"1001008" -> "1001057"  [label="DDG: "];
"1000242" -> "1001008"  [label="DDG: "];
"1001015" -> "1001007"  [label="AST: "];
"1001015" -> "1001019"  [label="CFG: "];
"1001016" -> "1001015"  [label="AST: "];
"1001017" -> "1001015"  [label="AST: "];
"1001018" -> "1001015"  [label="AST: "];
"1001019" -> "1001015"  [label="AST: "];
"1001040" -> "1001015"  [label="CFG: "];
"1001015" -> "1001057"  [label="DDG: "];
"1001015" -> "1001057"  [label="DDG: "];
"1001015" -> "1001057"  [label="DDG: "];
"1001015" -> "1001057"  [label="DDG: "];
"1000753" -> "1001015"  [label="DDG: "];
"1000753" -> "1001015"  [label="DDG: "];
"1000815" -> "1001015"  [label="DDG: "];
"1000207" -> "1001015"  [label="DDG: "];
"1000933" -> "1001015"  [label="DDG: "];
"1000310" -> "1001015"  [label="DDG: "];
"1000996" -> "1001015"  [label="DDG: "];
"1000996" -> "1001015"  [label="DDG: "];
"1000129" -> "1001015"  [label="DDG: "];
"1000130" -> "1001015"  [label="DDG: "];
"1000242" -> "1001015"  [label="DDG: "];
"1000229" -> "1001015"  [label="DDG: "];
"1001015" -> "1001039"  [label="DDG: "];
"1001039" -> "1001038"  [label="AST: "];
"1001039" -> "1001041"  [label="CFG: "];
"1001040" -> "1001039"  [label="AST: "];
"1001041" -> "1001039"  [label="AST: "];
"1001045" -> "1001039"  [label="CFG: "];
"1001038" -> "1001039"  [label="CFG: "];
"1001039" -> "1001057"  [label="DDG: "];
"1001039" -> "1001057"  [label="DDG: "];
"1001039" -> "1001038"  [label="DDG: "];
"1001039" -> "1001038"  [label="DDG: "];
"1001023" -> "1001039"  [label="DDG: "];
"1001038" -> "1001037"  [label="AST: "];
"1001038" -> "1001042"  [label="CFG: "];
"1001042" -> "1001038"  [label="AST: "];
"1001051" -> "1001038"  [label="CFG: "];
"1001054" -> "1001038"  [label="CFG: "];
"1001038" -> "1001057"  [label="DDG: "];
"1001038" -> "1001057"  [label="DDG: "];
"1001038" -> "1001057"  [label="DDG: "];
"1001042" -> "1001038"  [label="DDG: "];
"1001042" -> "1001038"  [label="DDG: "];
"1001023" -> "1001022"  [label="AST: "];
"1001023" -> "1001036"  [label="CFG: "];
"1001024" -> "1001023"  [label="AST: "];
"1001025" -> "1001023"  [label="AST: "];
"1001026" -> "1001023"  [label="AST: "];
"1001027" -> "1001023"  [label="AST: "];
"1001028" -> "1001023"  [label="AST: "];
"1001035" -> "1001023"  [label="AST: "];
"1001036" -> "1001023"  [label="AST: "];
"1001040" -> "1001023"  [label="CFG: "];
"1001023" -> "1001057"  [label="DDG: "];
"1001023" -> "1001057"  [label="DDG: "];
"1001023" -> "1001057"  [label="DDG: "];
"1001023" -> "1001057"  [label="DDG: "];
"1001023" -> "1001057"  [label="DDG: "];
"1001023" -> "1001057"  [label="DDG: "];
"1000310" -> "1001023"  [label="DDG: "];
"1000310" -> "1001023"  [label="DDG: "];
"1000581" -> "1001023"  [label="DDG: "];
"1000461" -> "1001023"  [label="DDG: "];
"1000788" -> "1001023"  [label="DDG: "];
"1000594" -> "1001023"  [label="DDG: "];
"1000157" -> "1001023"  [label="DDG: "];
"1000449" -> "1001023"  [label="DDG: "];
"1000569" -> "1001023"  [label="DDG: "];
"1000803" -> "1001023"  [label="DDG: "];
"1000984" -> "1001023"  [label="DDG: "];
"1000798" -> "1001023"  [label="DDG: "];
"1000783" -> "1001023"  [label="DDG: "];
"1000793" -> "1001023"  [label="DDG: "];
"1000474" -> "1001023"  [label="DDG: "];
"1000753" -> "1001023"  [label="DDG: "];
"1000753" -> "1001023"  [label="DDG: "];
"1000815" -> "1001023"  [label="DDG: "];
"1000207" -> "1001023"  [label="DDG: "];
"1000933" -> "1001023"  [label="DDG: "];
"1000996" -> "1001023"  [label="DDG: "];
"1000996" -> "1001023"  [label="DDG: "];
"1000129" -> "1001023"  [label="DDG: "];
"1000939" -> "1001023"  [label="DDG: "];
"1000357" -> "1001023"  [label="DDG: "];
"1000370" -> "1001023"  [label="DDG: "];
"1000388" -> "1001023"  [label="DDG: "];
"1000684" -> "1001023"  [label="DDG: "];
"1000379" -> "1001023"  [label="DDG: "];
"1000366" -> "1001023"  [label="DDG: "];
"1000948" -> "1001023"  [label="DDG: "];
"1000987" -> "1001023"  [label="DDG: "];
"1000808" -> "1001023"  [label="DDG: "];
"1000446" -> "1001023"  [label="DDG: "];
"1000515" -> "1001023"  [label="DDG: "];
"1000827" -> "1001023"  [label="DDG: "];
"1000566" -> "1001023"  [label="DDG: "];
"1000929" -> "1001023"  [label="DDG: "];
"1000740" -> "1001023"  [label="DDG: "];
"1000203" -> "1001023"  [label="DDG: "];
"1000131" -> "1001023"  [label="DDG: "];
"1000242" -> "1001023"  [label="DDG: "];
}
