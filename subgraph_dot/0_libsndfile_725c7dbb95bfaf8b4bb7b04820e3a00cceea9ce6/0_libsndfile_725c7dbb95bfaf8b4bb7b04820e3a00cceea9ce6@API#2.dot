digraph "0_libsndfile_725c7dbb95bfaf8b4bb7b04820e3a00cceea9ce6@API" {
"1000129" [label="(Call,psf->vio.write (ptr, bytes*items, psf->vio_user_data) / bytes)"];
"1000130" [label="(Call,psf->vio.write (ptr, bytes*items, psf->vio_user_data))"];
"1000104" [label="(MethodParameterIn,const void *ptr)"];
"1000132" [label="(Call,bytes*items)"];
"1000116" [label="(Call,bytes == 0)"];
"1000105" [label="(MethodParameterIn,sf_count_t bytes)"];
"1000119" [label="(Call,items == 0)"];
"1000106" [label="(MethodParameterIn,sf_count_t items)"];
"1000128" [label="(Return,return psf->vio.write (ptr, bytes*items, psf->vio_user_data) / bytes ;)"];
"1000116" [label="(Call,bytes == 0)"];
"1000130" [label="(Call,psf->vio.write (ptr, bytes*items, psf->vio_user_data))"];
"1000117" [label="(Identifier,bytes)"];
"1000138" [label="(Identifier,bytes)"];
"1000106" [label="(MethodParameterIn,sf_count_t items)"];
"1000170" [label="(Call,(const char*) ptr)"];
"1000136" [label="(Identifier,psf)"];
"1000120" [label="(Identifier,items)"];
"1000115" [label="(Call,bytes == 0 || items == 0)"];
"1000119" [label="(Call,items == 0)"];
"1000124" [label="(ControlStructure,if (psf->virtual_io))"];
"1000133" [label="(Identifier,bytes)"];
"1000118" [label="(Literal,0)"];
"1000135" [label="(Call,psf->vio_user_data)"];
"1000129" [label="(Call,psf->vio.write (ptr, bytes*items, psf->vio_user_data) / bytes)"];
"1000156" [label="(Call,items > SENSIBLE_SIZE)"];
"1000131" [label="(Identifier,ptr)"];
"1000211" [label="(Call,total / bytes)"];
"1000128" [label="(Return,return psf->vio.write (ptr, bytes*items, psf->vio_user_data) / bytes ;)"];
"1000149" [label="(Call,items > 0)"];
"1000198" [label="(Call,items -= count)"];
"1000214" [label="(MethodReturn,RET)"];
"1000134" [label="(Identifier,items)"];
"1000155" [label="(Call,(items > SENSIBLE_SIZE) ? SENSIBLE_SIZE : items)"];
"1000139" [label="(Call,items *= bytes)"];
"1000143" [label="(Call,items <= 0)"];
"1000104" [label="(MethodParameterIn,const void *ptr)"];
"1000132" [label="(Call,bytes*items)"];
"1000153" [label="(Call,count = (items > SENSIBLE_SIZE) ? SENSIBLE_SIZE : items)"];
"1000105" [label="(MethodParameterIn,sf_count_t bytes)"];
"1000121" [label="(Literal,0)"];
"1000129" -> "1000128"  [label="AST: "];
"1000129" -> "1000138"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000138" -> "1000129"  [label="AST: "];
"1000128" -> "1000129"  [label="CFG: "];
"1000129" -> "1000214"  [label="DDG: psf->vio.write (ptr, bytes*items, psf->vio_user_data)"];
"1000129" -> "1000214"  [label="DDG: psf->vio.write (ptr, bytes*items, psf->vio_user_data) / bytes"];
"1000129" -> "1000214"  [label="DDG: bytes"];
"1000129" -> "1000128"  [label="DDG: psf->vio.write (ptr, bytes*items, psf->vio_user_data) / bytes"];
"1000130" -> "1000129"  [label="DDG: ptr"];
"1000130" -> "1000129"  [label="DDG: bytes*items"];
"1000130" -> "1000129"  [label="DDG: psf->vio_user_data"];
"1000132" -> "1000129"  [label="DDG: bytes"];
"1000105" -> "1000129"  [label="DDG: bytes"];
"1000130" -> "1000135"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000135" -> "1000130"  [label="AST: "];
"1000138" -> "1000130"  [label="CFG: "];
"1000130" -> "1000214"  [label="DDG: bytes*items"];
"1000130" -> "1000214"  [label="DDG: psf->vio_user_data"];
"1000130" -> "1000214"  [label="DDG: ptr"];
"1000104" -> "1000130"  [label="DDG: ptr"];
"1000132" -> "1000130"  [label="DDG: bytes"];
"1000132" -> "1000130"  [label="DDG: items"];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000214"  [label="DDG: ptr"];
"1000104" -> "1000170"  [label="DDG: ptr"];
"1000132" -> "1000134"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="AST: "];
"1000136" -> "1000132"  [label="CFG: "];
"1000132" -> "1000214"  [label="DDG: items"];
"1000116" -> "1000132"  [label="DDG: bytes"];
"1000105" -> "1000132"  [label="DDG: bytes"];
"1000119" -> "1000132"  [label="DDG: items"];
"1000106" -> "1000132"  [label="DDG: items"];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000120" -> "1000116"  [label="CFG: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000116" -> "1000214"  [label="DDG: bytes"];
"1000116" -> "1000115"  [label="DDG: bytes"];
"1000116" -> "1000115"  [label="DDG: 0"];
"1000105" -> "1000116"  [label="DDG: bytes"];
"1000116" -> "1000139"  [label="DDG: bytes"];
"1000116" -> "1000211"  [label="DDG: bytes"];
"1000105" -> "1000103"  [label="AST: "];
"1000105" -> "1000214"  [label="DDG: bytes"];
"1000105" -> "1000139"  [label="DDG: bytes"];
"1000105" -> "1000211"  [label="DDG: bytes"];
"1000119" -> "1000115"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000115" -> "1000119"  [label="CFG: "];
"1000119" -> "1000214"  [label="DDG: items"];
"1000119" -> "1000115"  [label="DDG: items"];
"1000119" -> "1000115"  [label="DDG: 0"];
"1000106" -> "1000119"  [label="DDG: items"];
"1000119" -> "1000139"  [label="DDG: items"];
"1000106" -> "1000103"  [label="AST: "];
"1000106" -> "1000214"  [label="DDG: items"];
"1000106" -> "1000139"  [label="DDG: items"];
"1000106" -> "1000143"  [label="DDG: items"];
"1000106" -> "1000149"  [label="DDG: items"];
"1000106" -> "1000153"  [label="DDG: items"];
"1000106" -> "1000156"  [label="DDG: items"];
"1000106" -> "1000155"  [label="DDG: items"];
"1000106" -> "1000198"  [label="DDG: items"];
"1000128" -> "1000124"  [label="AST: "];
"1000214" -> "1000128"  [label="CFG: "];
"1000128" -> "1000214"  [label="DDG: <RET>"];
}
