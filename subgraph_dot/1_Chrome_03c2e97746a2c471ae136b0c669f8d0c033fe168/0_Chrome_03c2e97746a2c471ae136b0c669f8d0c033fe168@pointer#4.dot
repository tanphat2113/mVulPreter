digraph "0_Chrome_03c2e97746a2c471ae136b0c669f8d0c033fe168@pointer" {
"1000190" [label="(Call,histogram = StatisticsRecorder::RegisterOrDeleteDuplicate(\n        tentative_histogram.release()))"];
"1000192" [label="(Call,StatisticsRecorder::RegisterOrDeleteDuplicate(\n        tentative_histogram.release()))"];
"1000199" [label="(Call,histogram == tentative_histogram_ptr)"];
"1000197" [label="(Call,allocator->FinalizeHistogram(histogram_ref,\n                                   histogram == tentative_histogram_ptr))"];
"1000238" [label="(Return,return histogram;)"];
"1000201" [label="(Identifier,tentative_histogram_ptr)"];
"1000143" [label="(Call,histogram_ref = 0)"];
"1000239" [label="(Identifier,histogram)"];
"1000193" [label="(Call,tentative_histogram.release())"];
"1000204" [label="(Identifier,histogram)"];
"1000240" [label="(MethodReturn,HistogramBase*)"];
"1000199" [label="(Call,histogram == tentative_histogram_ptr)"];
"1000196" [label="(Block,)"];
"1000191" [label="(Identifier,histogram)"];
"1000187" [label="(Call,* tentative_histogram_ptr = tentative_histogram.get())"];
"1000195" [label="(Identifier,histogram_ref)"];
"1000200" [label="(Identifier,histogram)"];
"1000198" [label="(Identifier,histogram_ref)"];
"1000112" [label="(Block,)"];
"1000103" [label="(Block,)"];
"1000110" [label="(Call,!histogram)"];
"1000170" [label="(Call,!histogram_ref)"];
"1000238" [label="(Return,return histogram;)"];
"1000192" [label="(Call,StatisticsRecorder::RegisterOrDeleteDuplicate(\n        tentative_histogram.release()))"];
"1000197" [label="(Call,allocator->FinalizeHistogram(histogram_ref,\n                                   histogram == tentative_histogram_ptr))"];
"1000190" [label="(Call,histogram = StatisticsRecorder::RegisterOrDeleteDuplicate(\n        tentative_histogram.release()))"];
"1000190" -> "1000112"  [label="AST: "];
"1000190" -> "1000192"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000192" -> "1000190"  [label="AST: "];
"1000195" -> "1000190"  [label="CFG: "];
"1000190" -> "1000240"  [label="DDG: histogram"];
"1000190" -> "1000240"  [label="DDG: StatisticsRecorder::RegisterOrDeleteDuplicate(\n        tentative_histogram.release())"];
"1000192" -> "1000190"  [label="DDG: tentative_histogram.release()"];
"1000190" -> "1000199"  [label="DDG: histogram"];
"1000190" -> "1000238"  [label="DDG: histogram"];
"1000192" -> "1000193"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000192" -> "1000240"  [label="DDG: tentative_histogram.release()"];
"1000199" -> "1000197"  [label="AST: "];
"1000199" -> "1000201"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000201" -> "1000199"  [label="AST: "];
"1000197" -> "1000199"  [label="CFG: "];
"1000199" -> "1000240"  [label="DDG: tentative_histogram_ptr"];
"1000199" -> "1000240"  [label="DDG: histogram"];
"1000199" -> "1000197"  [label="DDG: histogram"];
"1000199" -> "1000197"  [label="DDG: tentative_histogram_ptr"];
"1000187" -> "1000199"  [label="DDG: tentative_histogram_ptr"];
"1000199" -> "1000238"  [label="DDG: histogram"];
"1000197" -> "1000196"  [label="AST: "];
"1000198" -> "1000197"  [label="AST: "];
"1000204" -> "1000197"  [label="CFG: "];
"1000197" -> "1000240"  [label="DDG: allocator->FinalizeHistogram(histogram_ref,\n                                   histogram == tentative_histogram_ptr)"];
"1000197" -> "1000240"  [label="DDG: histogram == tentative_histogram_ptr"];
"1000197" -> "1000240"  [label="DDG: histogram_ref"];
"1000143" -> "1000197"  [label="DDG: histogram_ref"];
"1000170" -> "1000197"  [label="DDG: histogram_ref"];
"1000238" -> "1000103"  [label="AST: "];
"1000238" -> "1000239"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="CFG: "];
"1000238" -> "1000240"  [label="DDG: <RET>"];
"1000239" -> "1000238"  [label="DDG: histogram"];
"1000110" -> "1000238"  [label="DDG: histogram"];
}
