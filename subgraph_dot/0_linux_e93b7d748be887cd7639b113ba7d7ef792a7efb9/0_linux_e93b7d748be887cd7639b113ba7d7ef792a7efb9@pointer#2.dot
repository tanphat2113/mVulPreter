digraph "0_linux_e93b7d748be887cd7639b113ba7d7ef792a7efb9@pointer" {
"1000179" [label="(Call,skb_is_gso(skb))"];
"1000122" [label="(Call,skb = skb_peek_tail(queue))"];
"1000124" [label="(Call,skb_peek_tail(queue))"];
"1000108" [label="(MethodParameterIn,struct sk_buff_head *queue)"];
"1000190" [label="(Call,skb_shinfo(skb))"];
"1000198" [label="(Call,skb_shinfo(skb))"];
"1000204" [label="(Call,skb_append_datato_frags(sk, skb, getfrag, from,\n \t\t\t\t       (length - transhdrlen)))"];
"1000203" [label="(Return,return skb_append_datato_frags(sk, skb, getfrag, from,\n \t\t\t\t       (length - transhdrlen));)"];
"1000110" [label="(MethodParameterIn,void *from)"];
"1000199" [label="(Identifier,skb)"];
"1000182" [label="(ControlStructure,goto append;)"];
"1000208" [label="(Identifier,from)"];
"1000212" [label="(MethodReturn,static inline int)"];
"1000178" [label="(ControlStructure,if (skb_is_gso(skb)))"];
"1000174" [label="(Call,__skb_queue_tail(queue, skb))"];
"1000107" [label="(MethodParameterIn,struct sock *sk)"];
"1000207" [label="(Identifier,getfrag)"];
"1000189" [label="(Call,skb_shinfo(skb)->gso_size)"];
"1000124" [label="(Call,skb_peek_tail(queue))"];
"1000130" [label="(Call,sock_alloc_send_skb(sk,\n\t\t\thh_len + fragheaderlen + transhdrlen + 20,\n\t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000197" [label="(Call,skb_shinfo(skb)->gso_type)"];
"1000123" [label="(Identifier,skb)"];
"1000122" [label="(Call,skb = skb_peek_tail(queue))"];
"1000126" [label="(Identifier,NULL)"];
"1000109" [label="(MethodParameterIn,int getfrag(void *from, char *to, int offset, int len,\n\t\t\t       int odd, struct sk_buff *skb))"];
"1000191" [label="(Identifier,skb)"];
"1000190" [label="(Call,skb_shinfo(skb))"];
"1000203" [label="(Return,return skb_append_datato_frags(sk, skb, getfrag, from,\n \t\t\t\t       (length - transhdrlen));)"];
"1000204" [label="(Call,skb_append_datato_frags(sk, skb, getfrag, from,\n \t\t\t\t       (length - transhdrlen)))"];
"1000192" [label="(FieldIdentifier,gso_size)"];
"1000117" [label="(Block,)"];
"1000121" [label="(Call,(skb = skb_peek_tail(queue)) == NULL)"];
"1000180" [label="(Identifier,skb)"];
"1000200" [label="(FieldIdentifier,gso_type)"];
"1000205" [label="(Identifier,sk)"];
"1000108" [label="(MethodParameterIn,struct sk_buff_head *queue)"];
"1000125" [label="(Identifier,queue)"];
"1000206" [label="(Identifier,skb)"];
"1000185" [label="(Identifier,skb)"];
"1000198" [label="(Call,skb_shinfo(skb))"];
"1000209" [label="(Call,length - transhdrlen)"];
"1000179" [label="(Call,skb_is_gso(skb))"];
"1000179" -> "1000178"  [label="AST: "];
"1000179" -> "1000180"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000182" -> "1000179"  [label="CFG: "];
"1000185" -> "1000179"  [label="CFG: "];
"1000179" -> "1000212"  [label="DDG: skb_is_gso(skb)"];
"1000122" -> "1000179"  [label="DDG: skb"];
"1000179" -> "1000190"  [label="DDG: skb"];
"1000179" -> "1000204"  [label="DDG: skb"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000126" -> "1000122"  [label="CFG: "];
"1000122" -> "1000212"  [label="DDG: skb_peek_tail(queue)"];
"1000122" -> "1000121"  [label="DDG: skb"];
"1000124" -> "1000122"  [label="DDG: queue"];
"1000124" -> "1000125"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000124" -> "1000212"  [label="DDG: queue"];
"1000124" -> "1000121"  [label="DDG: queue"];
"1000108" -> "1000124"  [label="DDG: queue"];
"1000124" -> "1000174"  [label="DDG: queue"];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000212"  [label="DDG: queue"];
"1000108" -> "1000174"  [label="DDG: queue"];
"1000190" -> "1000189"  [label="AST: "];
"1000190" -> "1000191"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000192" -> "1000190"  [label="CFG: "];
"1000174" -> "1000190"  [label="DDG: skb"];
"1000190" -> "1000198"  [label="DDG: skb"];
"1000198" -> "1000197"  [label="AST: "];
"1000198" -> "1000199"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="CFG: "];
"1000198" -> "1000204"  [label="DDG: skb"];
"1000204" -> "1000203"  [label="AST: "];
"1000204" -> "1000209"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000206" -> "1000204"  [label="AST: "];
"1000207" -> "1000204"  [label="AST: "];
"1000208" -> "1000204"  [label="AST: "];
"1000209" -> "1000204"  [label="AST: "];
"1000203" -> "1000204"  [label="CFG: "];
"1000204" -> "1000212"  [label="DDG: from"];
"1000204" -> "1000212"  [label="DDG: sk"];
"1000204" -> "1000212"  [label="DDG: length - transhdrlen"];
"1000204" -> "1000212"  [label="DDG: skb"];
"1000204" -> "1000212"  [label="DDG: getfrag"];
"1000204" -> "1000212"  [label="DDG: skb_append_datato_frags(sk, skb, getfrag, from,\n \t\t\t\t       (length - transhdrlen))"];
"1000204" -> "1000203"  [label="DDG: skb_append_datato_frags(sk, skb, getfrag, from,\n \t\t\t\t       (length - transhdrlen))"];
"1000130" -> "1000204"  [label="DDG: sk"];
"1000107" -> "1000204"  [label="DDG: sk"];
"1000109" -> "1000204"  [label="DDG: getfrag"];
"1000110" -> "1000204"  [label="DDG: from"];
"1000209" -> "1000204"  [label="DDG: length"];
"1000209" -> "1000204"  [label="DDG: transhdrlen"];
"1000203" -> "1000117"  [label="AST: "];
"1000212" -> "1000203"  [label="CFG: "];
"1000203" -> "1000212"  [label="DDG: <RET>"];
}
