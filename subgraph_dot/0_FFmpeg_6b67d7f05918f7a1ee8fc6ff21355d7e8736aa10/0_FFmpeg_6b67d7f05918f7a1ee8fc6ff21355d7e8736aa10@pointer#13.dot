digraph "0_FFmpeg_6b67d7f05918f7a1ee8fc6ff21355d7e8736aa10@pointer" {
"1000767" [label="(Call,FFALIGN(par->height, 16))"];
"1000766" [label="(Call,FFALIGN(par->height, 16) - par->height)"];
"1000754" [label="(Call,((FFALIGN(par->width,  16) - par->width) << 4) |\n                             (FFALIGN(par->height, 16) - par->height))"];
"1000752" [label="(Call,avio_w8(pb, ((FFALIGN(par->width,  16) - par->width) << 4) |\n                             (FFALIGN(par->height, 16) - par->height)))"];
"1000811" [label="(Call,avio_write(pb, data ? data : pkt->data, size))"];
"1000820" [label="(Call,avio_wb32(pb, size + flags_size + 11))"];
"1000864" [label="(Call,avio_tell(pb))"];
"1000863" [label="(Call,avio_tell(pb) - cur_offset)"];
"1000859" [label="(Call,flv->videosize += (avio_tell(pb) - cur_offset))"];
"1000896" [label="(Call,pos = cur_offset)"];
"1000910" [label="(Call,flv->lastkeyframelocation = pos)"];
"1000915" [label="(Call,flv_append_keyframe_info(s, flv, ts, pos))"];
"1000931" [label="(Call,avio_tell(pb))"];
"1000930" [label="(Call,avio_tell(pb) - cur_offset)"];
"1000926" [label="(Call,flv->audiosize += (avio_tell(pb) - cur_offset))"];
"1000822" [label="(Call,size + flags_size + 11)"];
"1000438" [label="(Call,av_assert0(size))"];
"1000869" [label="(Identifier,flv)"];
"1000884" [label="(Block,)"];
"1000812" [label="(Identifier,pb)"];
"1000556" [label="(Call,av_log(s, AV_LOG_WARNING, \"Warning: Speex stream has more than \"\n                                  \"8 frames per packet. Adobe Flash \"\n                                  \"Player cannot handle this!\n\"))"];
"1000165" [label="(Call,cur_offset = avio_tell(pb))"];
"1000933" [label="(Identifier,cur_offset)"];
"1000866" [label="(Identifier,cur_offset)"];
"1000820" [label="(Call,avio_wb32(pb, size + flags_size + 11))"];
"1000538" [label="(Call,av_log(s, AV_LOG_WARNING, \"aac bitstream error\n\"))"];
"1000771" [label="(Literal,16)"];
"1000772" [label="(Call,par->height)"];
"1000865" [label="(Identifier,pb)"];
"1000773" [label="(Identifier,par)"];
"1000911" [label="(Call,flv->lastkeyframelocation)"];
"1000950" [label="(MethodReturn,static int)"];
"1000916" [label="(Identifier,s)"];
"1000753" [label="(Identifier,pb)"];
"1000829" [label="(Identifier,flv)"];
"1000710" [label="(Block,)"];
"1000821" [label="(Identifier,pb)"];
"1000932" [label="(Identifier,pb)"];
"1000766" [label="(Call,FFALIGN(par->height, 16) - par->height)"];
"1000372" [label="(Call,write_metadata(s, ts))"];
"1000323" [label="(Call,flv_write_codec_header(s, par, pkt->dts))"];
"1000857" [label="(Block,)"];
"1000930" [label="(Call,avio_tell(pb) - cur_offset)"];
"1000915" [label="(Call,flv_append_keyframe_info(s, flv, ts, pos))"];
"1000767" [label="(Call,FFALIGN(par->height, 16))"];
"1000782" [label="(Call,avio_w8(pb, 1))"];
"1000715" [label="(Call,avio_w8(pb,flags))"];
"1000228" [label="(Call,flags_size = 5)"];
"1000768" [label="(Call,par->height)"];
"1000755" [label="(Call,(FFALIGN(par->width,  16) - par->width) << 4)"];
"1000513" [label="(Call,AV_RB16(pkt->data))"];
"1000486" [label="(Call,ff_avc_parse_nal_units_buf(pkt->data, &data, &size))"];
"1000910" [label="(Call,flv->lastkeyframelocation = pos)"];
"1000435" [label="(Call,get_audio_flags(s, par))"];
"1000824" [label="(Call,flags_size + 11)"];
"1000154" [label="(Call,*data = NULL)"];
"1000212" [label="(Call,flags_size = 2)"];
"1000811" [label="(Call,avio_write(pb, data ? data : pkt->data, size))"];
"1000744" [label="(Call,avio_w8(pb, par->extradata[0]))"];
"1000754" [label="(Call,((FFALIGN(par->width,  16) - par->width) << 4) |\n                             (FFALIGN(par->height, 16) - par->height))"];
"1000914" [label="(Identifier,pos)"];
"1000129" [label="(Call,*flv      = s->priv_data)"];
"1000918" [label="(Identifier,ts)"];
"1000863" [label="(Call,avio_tell(pb) - cur_offset)"];
"1000724" [label="(Call,avio_w8(pb,0))"];
"1000859" [label="(Call,flv->videosize += (avio_tell(pb) - cur_offset))"];
"1000926" [label="(Call,flv->audiosize += (avio_tell(pb) - cur_offset))"];
"1000751" [label="(ControlStructure,else)"];
"1000886" [label="(Call,ts = flv->acurframeindex / flv->framerate)"];
"1000897" [label="(Identifier,pos)"];
"1000148" [label="(Call,size = pkt->size)"];
"1000704" [label="(Call,avio_wb32(pb, data_size + 11))"];
"1000927" [label="(Call,flv->audiosize)"];
"1000898" [label="(Identifier,cur_offset)"];
"1000860" [label="(Call,flv->videosize)"];
"1000107" [label="(MethodParameterIn,AVFormatContext *s)"];
"1000802" [label="(Call,avio_wb24(pb, pkt->pts - pkt->dts))"];
"1000917" [label="(Identifier,flv)"];
"1000934" [label="(ControlStructure,break;)"];
"1000823" [label="(Identifier,size)"];
"1000901" [label="(Identifier,flv)"];
"1000896" [label="(Call,pos = cur_offset)"];
"1000752" [label="(Call,avio_w8(pb, ((FFALIGN(par->width,  16) - par->width) << 4) |\n                             (FFALIGN(par->height, 16) - par->height)))"];
"1000922" [label="(Identifier,flv)"];
"1000813" [label="(Call,data ? data : pkt->data)"];
"1000819" [label="(Identifier,size)"];
"1000822" [label="(Call,size + flags_size + 11)"];
"1000864" [label="(Call,avio_tell(pb))"];
"1000931" [label="(Call,avio_tell(pb))"];
"1000919" [label="(Identifier,pos)"];
"1000232" [label="(Call,flags_size = 1)"];
"1000767" -> "1000766"  [label="AST: "];
"1000767" -> "1000771"  [label="CFG: "];
"1000768" -> "1000767"  [label="AST: "];
"1000771" -> "1000767"  [label="AST: "];
"1000773" -> "1000767"  [label="CFG: "];
"1000767" -> "1000766"  [label="DDG: par->height"];
"1000767" -> "1000766"  [label="DDG: 16"];
"1000766" -> "1000754"  [label="AST: "];
"1000766" -> "1000772"  [label="CFG: "];
"1000772" -> "1000766"  [label="AST: "];
"1000754" -> "1000766"  [label="CFG: "];
"1000766" -> "1000950"  [label="DDG: FFALIGN(par->height, 16)"];
"1000766" -> "1000950"  [label="DDG: par->height"];
"1000766" -> "1000754"  [label="DDG: FFALIGN(par->height, 16)"];
"1000766" -> "1000754"  [label="DDG: par->height"];
"1000754" -> "1000752"  [label="AST: "];
"1000755" -> "1000754"  [label="AST: "];
"1000752" -> "1000754"  [label="CFG: "];
"1000754" -> "1000950"  [label="DDG: (FFALIGN(par->width,  16) - par->width) << 4"];
"1000754" -> "1000950"  [label="DDG: FFALIGN(par->height, 16) - par->height"];
"1000754" -> "1000752"  [label="DDG: (FFALIGN(par->width,  16) - par->width) << 4"];
"1000754" -> "1000752"  [label="DDG: FFALIGN(par->height, 16) - par->height"];
"1000755" -> "1000754"  [label="DDG: FFALIGN(par->width,  16) - par->width"];
"1000755" -> "1000754"  [label="DDG: 4"];
"1000752" -> "1000751"  [label="AST: "];
"1000753" -> "1000752"  [label="AST: "];
"1000812" -> "1000752"  [label="CFG: "];
"1000752" -> "1000950"  [label="DDG: ((FFALIGN(par->width,  16) - par->width) << 4) |\n                             (FFALIGN(par->height, 16) - par->height)"];
"1000752" -> "1000950"  [label="DDG: avio_w8(pb, ((FFALIGN(par->width,  16) - par->width) << 4) |\n                             (FFALIGN(par->height, 16) - par->height))"];
"1000715" -> "1000752"  [label="DDG: pb"];
"1000724" -> "1000752"  [label="DDG: pb"];
"1000752" -> "1000811"  [label="DDG: pb"];
"1000811" -> "1000710"  [label="AST: "];
"1000811" -> "1000819"  [label="CFG: "];
"1000812" -> "1000811"  [label="AST: "];
"1000813" -> "1000811"  [label="AST: "];
"1000819" -> "1000811"  [label="AST: "];
"1000821" -> "1000811"  [label="CFG: "];
"1000811" -> "1000950"  [label="DDG: data ? data : pkt->data"];
"1000811" -> "1000950"  [label="DDG: avio_write(pb, data ? data : pkt->data, size)"];
"1000715" -> "1000811"  [label="DDG: pb"];
"1000802" -> "1000811"  [label="DDG: pb"];
"1000782" -> "1000811"  [label="DDG: pb"];
"1000724" -> "1000811"  [label="DDG: pb"];
"1000744" -> "1000811"  [label="DDG: pb"];
"1000154" -> "1000811"  [label="DDG: data"];
"1000513" -> "1000811"  [label="DDG: pkt->data"];
"1000486" -> "1000811"  [label="DDG: pkt->data"];
"1000148" -> "1000811"  [label="DDG: size"];
"1000438" -> "1000811"  [label="DDG: size"];
"1000811" -> "1000820"  [label="DDG: pb"];
"1000811" -> "1000820"  [label="DDG: size"];
"1000811" -> "1000822"  [label="DDG: size"];
"1000820" -> "1000710"  [label="AST: "];
"1000820" -> "1000822"  [label="CFG: "];
"1000821" -> "1000820"  [label="AST: "];
"1000822" -> "1000820"  [label="AST: "];
"1000829" -> "1000820"  [label="CFG: "];
"1000820" -> "1000950"  [label="DDG: avio_wb32(pb, size + flags_size + 11)"];
"1000820" -> "1000950"  [label="DDG: size + flags_size + 11"];
"1000820" -> "1000950"  [label="DDG: pb"];
"1000232" -> "1000820"  [label="DDG: flags_size"];
"1000228" -> "1000820"  [label="DDG: flags_size"];
"1000212" -> "1000820"  [label="DDG: flags_size"];
"1000820" -> "1000864"  [label="DDG: pb"];
"1000820" -> "1000931"  [label="DDG: pb"];
"1000864" -> "1000863"  [label="AST: "];
"1000864" -> "1000865"  [label="CFG: "];
"1000865" -> "1000864"  [label="AST: "];
"1000866" -> "1000864"  [label="CFG: "];
"1000864" -> "1000950"  [label="DDG: pb"];
"1000864" -> "1000863"  [label="DDG: pb"];
"1000704" -> "1000864"  [label="DDG: pb"];
"1000863" -> "1000859"  [label="AST: "];
"1000863" -> "1000866"  [label="CFG: "];
"1000866" -> "1000863"  [label="AST: "];
"1000859" -> "1000863"  [label="CFG: "];
"1000863" -> "1000950"  [label="DDG: cur_offset"];
"1000863" -> "1000950"  [label="DDG: avio_tell(pb)"];
"1000863" -> "1000859"  [label="DDG: avio_tell(pb)"];
"1000863" -> "1000859"  [label="DDG: cur_offset"];
"1000165" -> "1000863"  [label="DDG: cur_offset"];
"1000863" -> "1000896"  [label="DDG: cur_offset"];
"1000859" -> "1000857"  [label="AST: "];
"1000860" -> "1000859"  [label="AST: "];
"1000869" -> "1000859"  [label="CFG: "];
"1000859" -> "1000950"  [label="DDG: flv->videosize"];
"1000859" -> "1000950"  [label="DDG: avio_tell(pb) - cur_offset"];
"1000896" -> "1000884"  [label="AST: "];
"1000896" -> "1000898"  [label="CFG: "];
"1000897" -> "1000896"  [label="AST: "];
"1000898" -> "1000896"  [label="AST: "];
"1000901" -> "1000896"  [label="CFG: "];
"1000896" -> "1000950"  [label="DDG: cur_offset"];
"1000896" -> "1000910"  [label="DDG: pos"];
"1000896" -> "1000915"  [label="DDG: pos"];
"1000910" -> "1000884"  [label="AST: "];
"1000910" -> "1000914"  [label="CFG: "];
"1000911" -> "1000910"  [label="AST: "];
"1000914" -> "1000910"  [label="AST: "];
"1000916" -> "1000910"  [label="CFG: "];
"1000910" -> "1000950"  [label="DDG: flv->lastkeyframelocation"];
"1000915" -> "1000884"  [label="AST: "];
"1000915" -> "1000919"  [label="CFG: "];
"1000916" -> "1000915"  [label="AST: "];
"1000917" -> "1000915"  [label="AST: "];
"1000918" -> "1000915"  [label="AST: "];
"1000919" -> "1000915"  [label="AST: "];
"1000922" -> "1000915"  [label="CFG: "];
"1000915" -> "1000950"  [label="DDG: ts"];
"1000915" -> "1000950"  [label="DDG: pos"];
"1000915" -> "1000950"  [label="DDG: s"];
"1000915" -> "1000950"  [label="DDG: flv_append_keyframe_info(s, flv, ts, pos)"];
"1000915" -> "1000950"  [label="DDG: flv"];
"1000435" -> "1000915"  [label="DDG: s"];
"1000556" -> "1000915"  [label="DDG: s"];
"1000372" -> "1000915"  [label="DDG: s"];
"1000323" -> "1000915"  [label="DDG: s"];
"1000538" -> "1000915"  [label="DDG: s"];
"1000107" -> "1000915"  [label="DDG: s"];
"1000129" -> "1000915"  [label="DDG: flv"];
"1000886" -> "1000915"  [label="DDG: ts"];
"1000931" -> "1000930"  [label="AST: "];
"1000931" -> "1000932"  [label="CFG: "];
"1000932" -> "1000931"  [label="AST: "];
"1000933" -> "1000931"  [label="CFG: "];
"1000931" -> "1000950"  [label="DDG: pb"];
"1000931" -> "1000930"  [label="DDG: pb"];
"1000704" -> "1000931"  [label="DDG: pb"];
"1000930" -> "1000926"  [label="AST: "];
"1000930" -> "1000933"  [label="CFG: "];
"1000933" -> "1000930"  [label="AST: "];
"1000926" -> "1000930"  [label="CFG: "];
"1000930" -> "1000950"  [label="DDG: cur_offset"];
"1000930" -> "1000950"  [label="DDG: avio_tell(pb)"];
"1000930" -> "1000926"  [label="DDG: avio_tell(pb)"];
"1000930" -> "1000926"  [label="DDG: cur_offset"];
"1000165" -> "1000930"  [label="DDG: cur_offset"];
"1000926" -> "1000857"  [label="AST: "];
"1000927" -> "1000926"  [label="AST: "];
"1000934" -> "1000926"  [label="CFG: "];
"1000926" -> "1000950"  [label="DDG: flv->audiosize"];
"1000926" -> "1000950"  [label="DDG: avio_tell(pb) - cur_offset"];
"1000822" -> "1000824"  [label="CFG: "];
"1000823" -> "1000822"  [label="AST: "];
"1000824" -> "1000822"  [label="AST: "];
"1000822" -> "1000950"  [label="DDG: flags_size + 11"];
"1000822" -> "1000950"  [label="DDG: size"];
"1000232" -> "1000822"  [label="DDG: flags_size"];
"1000228" -> "1000822"  [label="DDG: flags_size"];
"1000212" -> "1000822"  [label="DDG: flags_size"];
}
