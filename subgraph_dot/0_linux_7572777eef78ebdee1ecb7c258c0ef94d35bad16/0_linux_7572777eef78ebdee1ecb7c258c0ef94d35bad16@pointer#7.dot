digraph "0_linux_7572777eef78ebdee1ecb7c258c0ef94d35bad16@pointer" {
"1000489" [label="(Call,err = req->out.h.error)"];
"1000658" [label="(Call,err ? err : outarg.result)"];
"1000657" [label="(Return,return err ? err : outarg.result;)"];
"1000630" [label="(Call,err = fuse_ioctl_copy_user(pages, out_iov, out_iovs, transferred, true))"];
"1000113" [label="(Block,)"];
"1000660" [label="(Identifier,err)"];
"1000658" [label="(Call,err ? err : outarg.result)"];
"1000659" [label="(Identifier,err)"];
"1000546" [label="(Call,err = -ENOMEM)"];
"1000419" [label="(Call,err = fuse_ioctl_copy_user(pages, in_iov, in_iovs, in_size,\n\t\t\t\t\t   false))"];
"1000489" [label="(Call,err = req->out.h.error)"];
"1000657" [label="(Return,return err ? err : outarg.result;)"];
"1000491" [label="(Call,req->out.h.error)"];
"1000602" [label="(Call,err = fuse_verify_ioctl_iov(in_iov, in_iovs))"];
"1000315" [label="(Call,err = PTR_ERR(req))"];
"1000610" [label="(Call,err = fuse_verify_ioctl_iov(out_iov, out_iovs))"];
"1000664" [label="(MethodReturn,long)"];
"1000499" [label="(Identifier,transferred)"];
"1000661" [label="(Call,outarg.result)"];
"1000619" [label="(Call,err = -EIO)"];
"1000490" [label="(Identifier,err)"];
"1000526" [label="(Call,err = -EIO)"];
"1000277" [label="(Call,err = -ENOMEM)"];
"1000572" [label="(Call,err = fuse_copy_ioctl_iovec(page_address(iov_page), vaddr,\n\t\t\t\t\t    transferred, in_iovs + out_iovs,\n\t\t\t\t\t    (flags & FUSE_IOCTL_COMPAT) != 0))"];
"1000172" [label="(Call,err = -ENOMEM)"];
"1000489" -> "1000113"  [label="AST: "];
"1000489" -> "1000491"  [label="CFG: "];
"1000490" -> "1000489"  [label="AST: "];
"1000491" -> "1000489"  [label="AST: "];
"1000499" -> "1000489"  [label="CFG: "];
"1000489" -> "1000664"  [label="DDG: req->out.h.error"];
"1000489" -> "1000658"  [label="DDG: err"];
"1000658" -> "1000657"  [label="AST: "];
"1000658" -> "1000660"  [label="CFG: "];
"1000658" -> "1000661"  [label="CFG: "];
"1000659" -> "1000658"  [label="AST: "];
"1000660" -> "1000658"  [label="AST: "];
"1000661" -> "1000658"  [label="AST: "];
"1000657" -> "1000658"  [label="CFG: "];
"1000658" -> "1000664"  [label="DDG: err"];
"1000658" -> "1000664"  [label="DDG: outarg.result"];
"1000658" -> "1000664"  [label="DDG: err ? err : outarg.result"];
"1000658" -> "1000657"  [label="DDG: err ? err : outarg.result"];
"1000315" -> "1000658"  [label="DDG: err"];
"1000630" -> "1000658"  [label="DDG: err"];
"1000277" -> "1000658"  [label="DDG: err"];
"1000526" -> "1000658"  [label="DDG: err"];
"1000602" -> "1000658"  [label="DDG: err"];
"1000572" -> "1000658"  [label="DDG: err"];
"1000619" -> "1000658"  [label="DDG: err"];
"1000419" -> "1000658"  [label="DDG: err"];
"1000610" -> "1000658"  [label="DDG: err"];
"1000546" -> "1000658"  [label="DDG: err"];
"1000172" -> "1000658"  [label="DDG: err"];
"1000657" -> "1000113"  [label="AST: "];
"1000664" -> "1000657"  [label="CFG: "];
"1000657" -> "1000664"  [label="DDG: <RET>"];
}
