digraph "0_FFmpeg_cced03dd667a5df6df8fd40d8de0bff477ee02e8@API" {
"1000238" [label="(Call,sizeof(ff_asf_guid) * 2)"];
"1000234" [label="(Call,AV_RL32(p + sizeof(ff_asf_guid) * 2 + 64))"];
"1000230" [label="(Call,mms->asf_packet_len = AV_RL32(p + sizeof(ff_asf_guid) * 2 + 64))"];
"1000245" [label="(Call,mms->asf_packet_len <= 0)"];
"1000244" [label="(Call,mms->asf_packet_len <= 0 || mms->asf_packet_len > sizeof(mms->in_buffer))"];
"1000250" [label="(Call,mms->asf_packet_len > sizeof(mms->in_buffer))"];
"1000259" [label="(Call,av_log(NULL, AV_LOG_ERROR,\n                           \"Corrupt stream (too large pkt_len %d)\n\",\n                           mms->asf_packet_len))"];
"1000235" [label="(Call,p + sizeof(ff_asf_guid) * 2 + 64)"];
"1000237" [label="(Call,sizeof(ff_asf_guid) * 2 + 64)"];
"1000242" [label="(Literal,64)"];
"1000250" [label="(Call,mms->asf_packet_len > sizeof(mms->in_buffer))"];
"1000243" [label="(ControlStructure,if (mms->asf_packet_len <= 0 || mms->asf_packet_len > sizeof(mms->in_buffer)))"];
"1000220" [label="(Call,end - p)"];
"1000247" [label="(Identifier,mms)"];
"1000491" [label="(Identifier,p)"];
"1000495" [label="(MethodReturn,int)"];
"1000246" [label="(Call,mms->asf_packet_len)"];
"1000258" [label="(Block,)"];
"1000267" [label="(Identifier,AVERROR_INVALIDDATA)"];
"1000252" [label="(Identifier,mms)"];
"1000249" [label="(Literal,0)"];
"1000251" [label="(Call,mms->asf_packet_len)"];
"1000230" [label="(Call,mms->asf_packet_len = AV_RL32(p + sizeof(ff_asf_guid) * 2 + 64))"];
"1000245" [label="(Call,mms->asf_packet_len <= 0)"];
"1000237" [label="(Call,sizeof(ff_asf_guid) * 2 + 64)"];
"1000229" [label="(Block,)"];
"1000235" [label="(Call,p + sizeof(ff_asf_guid) * 2 + 64)"];
"1000241" [label="(Literal,2)"];
"1000244" [label="(Call,mms->asf_packet_len <= 0 || mms->asf_packet_len > sizeof(mms->in_buffer))"];
"1000238" [label="(Call,sizeof(ff_asf_guid) * 2)"];
"1000263" [label="(Call,mms->asf_packet_len)"];
"1000260" [label="(Identifier,NULL)"];
"1000231" [label="(Call,mms->asf_packet_len)"];
"1000261" [label="(Identifier,AV_LOG_ERROR)"];
"1000234" [label="(Call,AV_RL32(p + sizeof(ff_asf_guid) * 2 + 64))"];
"1000259" [label="(Call,av_log(NULL, AV_LOG_ERROR,\n                           \"Corrupt stream (too large pkt_len %d)\n\",\n                           mms->asf_packet_len))"];
"1000262" [label="(Literal,\"Corrupt stream (too large pkt_len %d)\n\")"];
"1000236" [label="(Identifier,p)"];
"1000239" [label="(Call,sizeof(ff_asf_guid))"];
"1000254" [label="(Call,sizeof(mms->in_buffer))"];
"1000238" -> "1000237"  [label="AST: "];
"1000238" -> "1000241"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000241" -> "1000238"  [label="AST: "];
"1000242" -> "1000238"  [label="CFG: "];
"1000238" -> "1000234"  [label="DDG: "];
"1000238" -> "1000235"  [label="DDG: "];
"1000238" -> "1000237"  [label="DDG: "];
"1000234" -> "1000230"  [label="AST: "];
"1000234" -> "1000235"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000230" -> "1000234"  [label="CFG: "];
"1000234" -> "1000495"  [label="DDG: "];
"1000234" -> "1000230"  [label="DDG: "];
"1000220" -> "1000234"  [label="DDG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000231" -> "1000230"  [label="AST: "];
"1000247" -> "1000230"  [label="CFG: "];
"1000230" -> "1000495"  [label="DDG: "];
"1000230" -> "1000245"  [label="DDG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000245" -> "1000249"  [label="CFG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000249" -> "1000245"  [label="AST: "];
"1000252" -> "1000245"  [label="CFG: "];
"1000244" -> "1000245"  [label="CFG: "];
"1000245" -> "1000495"  [label="DDG: "];
"1000245" -> "1000244"  [label="DDG: "];
"1000245" -> "1000244"  [label="DDG: "];
"1000245" -> "1000250"  [label="DDG: "];
"1000245" -> "1000259"  [label="DDG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000244" -> "1000250"  [label="CFG: "];
"1000250" -> "1000244"  [label="AST: "];
"1000260" -> "1000244"  [label="CFG: "];
"1000491" -> "1000244"  [label="CFG: "];
"1000244" -> "1000495"  [label="DDG: "];
"1000244" -> "1000495"  [label="DDG: "];
"1000244" -> "1000495"  [label="DDG: "];
"1000250" -> "1000244"  [label="DDG: "];
"1000250" -> "1000254"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000254" -> "1000250"  [label="AST: "];
"1000250" -> "1000495"  [label="DDG: "];
"1000250" -> "1000259"  [label="DDG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000259" -> "1000263"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000259"  [label="AST: "];
"1000262" -> "1000259"  [label="AST: "];
"1000263" -> "1000259"  [label="AST: "];
"1000267" -> "1000259"  [label="CFG: "];
"1000259" -> "1000495"  [label="DDG: "];
"1000259" -> "1000495"  [label="DDG: "];
"1000259" -> "1000495"  [label="DDG: "];
"1000259" -> "1000495"  [label="DDG: "];
"1000235" -> "1000237"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="AST: "];
"1000235" -> "1000495"  [label="DDG: "];
"1000235" -> "1000495"  [label="DDG: "];
"1000220" -> "1000235"  [label="DDG: "];
"1000237" -> "1000242"  [label="CFG: "];
"1000242" -> "1000237"  [label="AST: "];
"1000237" -> "1000495"  [label="DDG: "];
}
