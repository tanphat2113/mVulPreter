digraph "0_savannah_422214868061370aeeb0ac9cd0f021a5c350a57d@pointer" {
"1000413" [label="(Call,UINT64DATA\n                       (params->read.sequence_number))"];
"1000412" [label="(Call,make_preamble (UINT64DATA\n                       (params->read.sequence_number), type,\n                       c_length, ver, preamble))"];
"1000410" [label="(Call,preamble_size =\n        make_preamble (UINT64DATA\n                       (params->read.sequence_number), type,\n                       c_length, ver, preamble))"];
"1000423" [label="(Call,mac_hash (&td, preamble, preamble_size, ver))"];
"1000433" [label="(Call,mac_hash (&td, ciphertext.data, length, ver))"];
"1000441" [label="(Call,mac_deinit (&td, MAC, ver))"];
"1000456" [label="(Call,memcmp (MAC, &ciphertext.data[length], hash_size))"];
"1000455" [label="(Call,memcmp (MAC, &ciphertext.data[length], hash_size) != 0)"];
"1000471" [label="(Call,compress_size < length)"];
"1000478" [label="(Call,memcpy (compress_data, ciphertext.data, length))"];
"1000484" [label="(Return,return length;)"];
"1000439" [label="(Identifier,length)"];
"1000436" [label="(Call,ciphertext.data)"];
"1000444" [label="(Identifier,MAC)"];
"1000413" [label="(Call,UINT64DATA\n                       (params->read.sequence_number))"];
"1000467" [label="(Call,gnutls_assert ())"];
"1000486" [label="(MethodReturn,RET)"];
"1000445" [label="(Identifier,ver)"];
"1000464" [label="(Identifier,hash_size)"];
"1000427" [label="(Identifier,preamble_size)"];
"1000475" [label="(Call,gnutls_assert ())"];
"1000411" [label="(Identifier,preamble_size)"];
"1000473" [label="(Identifier,length)"];
"1000424" [label="(Call,&td)"];
"1000422" [label="(Identifier,preamble)"];
"1000331" [label="(Call,ciphertext.data[ciphertext.size - i] !=\n                ciphertext.data[ciphertext.size - 1])"];
"1000478" [label="(Call,memcpy (compress_data, ciphertext.data, length))"];
"1000448" [label="(Identifier,pad_failed)"];
"1000381" [label="(Call,mac_init (&td, params->mac_algorithm,\n                      params->read.mac_secret.data,\n                      params->read.mac_secret.size, ver))"];
"1000483" [label="(Identifier,length)"];
"1000458" [label="(Call,&ciphertext.data[length])"];
"1000111" [label="(MethodParameterIn,opaque * compress_data)"];
"1000414" [label="(Call,params->read.sequence_number)"];
"1000485" [label="(Identifier,length)"];
"1000443" [label="(Identifier,td)"];
"1000113" [label="(MethodParameterIn,gnutls_datum_t ciphertext)"];
"1000471" [label="(Call,compress_size < length)"];
"1000480" [label="(Call,ciphertext.data)"];
"1000457" [label="(Identifier,MAC)"];
"1000465" [label="(Literal,0)"];
"1000479" [label="(Identifier,compress_data)"];
"1000419" [label="(Identifier,type)"];
"1000441" [label="(Call,mac_deinit (&td, MAC, ver))"];
"1000410" [label="(Call,preamble_size =\n        make_preamble (UINT64DATA\n                       (params->read.sequence_number), type,\n                       c_length, ver, preamble))"];
"1000472" [label="(Identifier,compress_size)"];
"1000159" [label="(Call,_gnutls_cipher_decrypt (&params->read.cipher_state,\n                                   ciphertext.data, ciphertext.size))"];
"1000421" [label="(Identifier,ver)"];
"1000377" [label="(Block,)"];
"1000433" [label="(Call,mac_hash (&td, ciphertext.data, length, ver))"];
"1000112" [label="(MethodParameterIn,int compress_size)"];
"1000429" [label="(ControlStructure,if (length > 0))"];
"1000470" [label="(ControlStructure,if (compress_size < length))"];
"1000423" [label="(Call,mac_hash (&td, preamble, preamble_size, ver))"];
"1000428" [label="(Identifier,ver)"];
"1000116" [label="(Block,)"];
"1000426" [label="(Identifier,preamble)"];
"1000454" [label="(ControlStructure,if (memcmp (MAC, &ciphertext.data[length], hash_size) != 0))"];
"1000434" [label="(Call,&td)"];
"1000365" [label="(Call,c_length = _gnutls_conv_uint16 ((uint16_t) length))"];
"1000179" [label="(Call,ciphertext.size - hash_size)"];
"1000430" [label="(Call,length > 0)"];
"1000368" [label="(Call,(uint16_t) length)"];
"1000114" [label="(MethodParameterIn,uint8_t type)"];
"1000412" [label="(Call,make_preamble (UINT64DATA\n                       (params->read.sequence_number), type,\n                       c_length, ver, preamble))"];
"1000420" [label="(Identifier,c_length)"];
"1000440" [label="(Identifier,ver)"];
"1000455" [label="(Call,memcmp (MAC, &ciphertext.data[length], hash_size) != 0)"];
"1000431" [label="(Identifier,length)"];
"1000484" [label="(Return,return length;)"];
"1000442" [label="(Call,&td)"];
"1000208" [label="(Call,_gnutls_cipher_decrypt (&params->read.cipher_state,\n                                   ciphertext.data, ciphertext.size))"];
"1000310" [label="(Call,hash_size - pad)"];
"1000456" [label="(Call,memcmp (MAC, &ciphertext.data[length], hash_size))"];
"1000239" [label="(Call,ciphertext.data += blocksize)"];
"1000425" [label="(Identifier,td)"];
"1000413" -> "1000412"  [label="AST: "];
"1000413" -> "1000414"  [label="CFG: "];
"1000414" -> "1000413"  [label="AST: "];
"1000419" -> "1000413"  [label="CFG: "];
"1000413" -> "1000486"  [label="DDG: params->read.sequence_number"];
"1000413" -> "1000412"  [label="DDG: params->read.sequence_number"];
"1000412" -> "1000410"  [label="AST: "];
"1000412" -> "1000422"  [label="CFG: "];
"1000419" -> "1000412"  [label="AST: "];
"1000420" -> "1000412"  [label="AST: "];
"1000421" -> "1000412"  [label="AST: "];
"1000422" -> "1000412"  [label="AST: "];
"1000410" -> "1000412"  [label="CFG: "];
"1000412" -> "1000486"  [label="DDG: c_length"];
"1000412" -> "1000486"  [label="DDG: UINT64DATA\n                       (params->read.sequence_number)"];
"1000412" -> "1000486"  [label="DDG: type"];
"1000412" -> "1000410"  [label="DDG: type"];
"1000412" -> "1000410"  [label="DDG: c_length"];
"1000412" -> "1000410"  [label="DDG: UINT64DATA\n                       (params->read.sequence_number)"];
"1000412" -> "1000410"  [label="DDG: ver"];
"1000412" -> "1000410"  [label="DDG: preamble"];
"1000114" -> "1000412"  [label="DDG: type"];
"1000365" -> "1000412"  [label="DDG: c_length"];
"1000381" -> "1000412"  [label="DDG: ver"];
"1000412" -> "1000423"  [label="DDG: preamble"];
"1000412" -> "1000423"  [label="DDG: ver"];
"1000410" -> "1000377"  [label="AST: "];
"1000411" -> "1000410"  [label="AST: "];
"1000425" -> "1000410"  [label="CFG: "];
"1000410" -> "1000486"  [label="DDG: make_preamble (UINT64DATA\n                       (params->read.sequence_number), type,\n                       c_length, ver, preamble)"];
"1000410" -> "1000423"  [label="DDG: preamble_size"];
"1000423" -> "1000377"  [label="AST: "];
"1000423" -> "1000428"  [label="CFG: "];
"1000424" -> "1000423"  [label="AST: "];
"1000426" -> "1000423"  [label="AST: "];
"1000427" -> "1000423"  [label="AST: "];
"1000428" -> "1000423"  [label="AST: "];
"1000431" -> "1000423"  [label="CFG: "];
"1000423" -> "1000486"  [label="DDG: preamble_size"];
"1000423" -> "1000486"  [label="DDG: preamble"];
"1000423" -> "1000486"  [label="DDG: mac_hash (&td, preamble, preamble_size, ver)"];
"1000381" -> "1000423"  [label="DDG: &td"];
"1000423" -> "1000433"  [label="DDG: &td"];
"1000423" -> "1000433"  [label="DDG: ver"];
"1000423" -> "1000441"  [label="DDG: &td"];
"1000423" -> "1000441"  [label="DDG: ver"];
"1000433" -> "1000429"  [label="AST: "];
"1000433" -> "1000440"  [label="CFG: "];
"1000434" -> "1000433"  [label="AST: "];
"1000436" -> "1000433"  [label="AST: "];
"1000439" -> "1000433"  [label="AST: "];
"1000440" -> "1000433"  [label="AST: "];
"1000443" -> "1000433"  [label="CFG: "];
"1000433" -> "1000486"  [label="DDG: ciphertext.data"];
"1000433" -> "1000486"  [label="DDG: mac_hash (&td, ciphertext.data, length, ver)"];
"1000433" -> "1000486"  [label="DDG: length"];
"1000239" -> "1000433"  [label="DDG: ciphertext.data"];
"1000159" -> "1000433"  [label="DDG: ciphertext.data"];
"1000331" -> "1000433"  [label="DDG: ciphertext.data[ciphertext.size - i]"];
"1000331" -> "1000433"  [label="DDG: ciphertext.data[ciphertext.size - 1]"];
"1000208" -> "1000433"  [label="DDG: ciphertext.data"];
"1000113" -> "1000433"  [label="DDG: ciphertext"];
"1000430" -> "1000433"  [label="DDG: length"];
"1000433" -> "1000441"  [label="DDG: &td"];
"1000433" -> "1000441"  [label="DDG: ver"];
"1000433" -> "1000456"  [label="DDG: ciphertext.data"];
"1000433" -> "1000471"  [label="DDG: length"];
"1000433" -> "1000478"  [label="DDG: ciphertext.data"];
"1000441" -> "1000377"  [label="AST: "];
"1000441" -> "1000445"  [label="CFG: "];
"1000442" -> "1000441"  [label="AST: "];
"1000444" -> "1000441"  [label="AST: "];
"1000445" -> "1000441"  [label="AST: "];
"1000448" -> "1000441"  [label="CFG: "];
"1000441" -> "1000486"  [label="DDG: &td"];
"1000441" -> "1000486"  [label="DDG: ver"];
"1000441" -> "1000486"  [label="DDG: mac_deinit (&td, MAC, ver)"];
"1000441" -> "1000486"  [label="DDG: MAC"];
"1000441" -> "1000456"  [label="DDG: MAC"];
"1000456" -> "1000455"  [label="AST: "];
"1000456" -> "1000464"  [label="CFG: "];
"1000457" -> "1000456"  [label="AST: "];
"1000458" -> "1000456"  [label="AST: "];
"1000464" -> "1000456"  [label="AST: "];
"1000465" -> "1000456"  [label="CFG: "];
"1000456" -> "1000486"  [label="DDG: MAC"];
"1000456" -> "1000486"  [label="DDG: hash_size"];
"1000456" -> "1000486"  [label="DDG: &ciphertext.data[length]"];
"1000456" -> "1000455"  [label="DDG: MAC"];
"1000456" -> "1000455"  [label="DDG: &ciphertext.data[length]"];
"1000456" -> "1000455"  [label="DDG: hash_size"];
"1000239" -> "1000456"  [label="DDG: ciphertext.data"];
"1000159" -> "1000456"  [label="DDG: ciphertext.data"];
"1000208" -> "1000456"  [label="DDG: ciphertext.data"];
"1000310" -> "1000456"  [label="DDG: hash_size"];
"1000179" -> "1000456"  [label="DDG: hash_size"];
"1000455" -> "1000454"  [label="AST: "];
"1000455" -> "1000465"  [label="CFG: "];
"1000465" -> "1000455"  [label="AST: "];
"1000467" -> "1000455"  [label="CFG: "];
"1000472" -> "1000455"  [label="CFG: "];
"1000455" -> "1000486"  [label="DDG: memcmp (MAC, &ciphertext.data[length], hash_size) != 0"];
"1000455" -> "1000486"  [label="DDG: memcmp (MAC, &ciphertext.data[length], hash_size)"];
"1000471" -> "1000470"  [label="AST: "];
"1000471" -> "1000473"  [label="CFG: "];
"1000472" -> "1000471"  [label="AST: "];
"1000473" -> "1000471"  [label="AST: "];
"1000475" -> "1000471"  [label="CFG: "];
"1000479" -> "1000471"  [label="CFG: "];
"1000471" -> "1000486"  [label="DDG: compress_size"];
"1000471" -> "1000486"  [label="DDG: length"];
"1000471" -> "1000486"  [label="DDG: compress_size < length"];
"1000112" -> "1000471"  [label="DDG: compress_size"];
"1000368" -> "1000471"  [label="DDG: length"];
"1000430" -> "1000471"  [label="DDG: length"];
"1000471" -> "1000478"  [label="DDG: length"];
"1000478" -> "1000116"  [label="AST: "];
"1000478" -> "1000483"  [label="CFG: "];
"1000479" -> "1000478"  [label="AST: "];
"1000480" -> "1000478"  [label="AST: "];
"1000483" -> "1000478"  [label="AST: "];
"1000485" -> "1000478"  [label="CFG: "];
"1000478" -> "1000486"  [label="DDG: length"];
"1000478" -> "1000486"  [label="DDG: compress_data"];
"1000478" -> "1000486"  [label="DDG: ciphertext.data"];
"1000478" -> "1000486"  [label="DDG: memcpy (compress_data, ciphertext.data, length)"];
"1000111" -> "1000478"  [label="DDG: compress_data"];
"1000239" -> "1000478"  [label="DDG: ciphertext.data"];
"1000159" -> "1000478"  [label="DDG: ciphertext.data"];
"1000331" -> "1000478"  [label="DDG: ciphertext.data[ciphertext.size - i]"];
"1000331" -> "1000478"  [label="DDG: ciphertext.data[ciphertext.size - 1]"];
"1000208" -> "1000478"  [label="DDG: ciphertext.data"];
"1000113" -> "1000478"  [label="DDG: ciphertext"];
"1000478" -> "1000484"  [label="DDG: length"];
"1000484" -> "1000116"  [label="AST: "];
"1000484" -> "1000485"  [label="CFG: "];
"1000485" -> "1000484"  [label="AST: "];
"1000486" -> "1000484"  [label="CFG: "];
"1000484" -> "1000486"  [label="DDG: <RET>"];
"1000485" -> "1000484"  [label="DDG: length"];
}
