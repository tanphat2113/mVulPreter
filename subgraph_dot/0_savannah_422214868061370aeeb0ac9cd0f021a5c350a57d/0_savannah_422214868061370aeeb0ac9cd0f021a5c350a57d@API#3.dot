digraph "0_savannah_422214868061370aeeb0ac9cd0f021a5c350a57d@API" {
"1000157" [label="(Call,ret =\n           _gnutls_cipher_decrypt (&params->read.cipher_state,\n                                   ciphertext.data, ciphertext.size))"];
"1000159" [label="(Call,_gnutls_cipher_decrypt (&params->read.cipher_state,\n                                   ciphertext.data, ciphertext.size))"];
"1000113" [label="(MethodParameterIn,gnutls_datum_t ciphertext)"];
"1000156" [label="(Call,(ret =\n           _gnutls_cipher_decrypt (&params->read.cipher_state,\n                                   ciphertext.data, ciphertext.size)) < 0)"];
"1000175" [label="(Return,return ret;)"];
"1000285" [label="(Call,(int) ciphertext.size)"];
"1000166" [label="(Call,ciphertext.data)"];
"1000188" [label="(Call,ciphertext.size < blocksize)"];
"1000175" [label="(Return,return ret;)"];
"1000486" [label="(MethodReturn,RET)"];
"1000345" [label="(Call,ciphertext.size - 1)"];
"1000273" [label="(Call,(int) ciphertext.size)"];
"1000194" [label="(Call,ciphertext.size % blocksize)"];
"1000478" [label="(Call,memcpy (compress_data, ciphertext.data, length))"];
"1000157" [label="(Call,ret =\n           _gnutls_cipher_decrypt (&params->read.cipher_state,\n                                   ciphertext.data, ciphertext.size))"];
"1000155" [label="(ControlStructure,if ((ret =\n           _gnutls_cipher_decrypt (&params->read.cipher_state,\n                                   ciphertext.data, ciphertext.size)) < 0))"];
"1000113" [label="(MethodParameterIn,gnutls_datum_t ciphertext)"];
"1000156" [label="(Call,(ret =\n           _gnutls_cipher_decrypt (&params->read.cipher_state,\n                                   ciphertext.data, ciphertext.size)) < 0)"];
"1000160" [label="(Call,&params->read.cipher_state)"];
"1000169" [label="(Call,ciphertext.size)"];
"1000245" [label="(Call,ciphertext.size < hash_size)"];
"1000178" [label="(Identifier,length)"];
"1000159" [label="(Call,_gnutls_cipher_decrypt (&params->read.cipher_state,\n                                   ciphertext.data, ciphertext.size))"];
"1000293" [label="(Call,_gnutls_record_log\n            (\"REC[%p]: Short record length %d > %d - %d (under attack?)\n\",\n             session, pad, ciphertext.size, hash_size))"];
"1000433" [label="(Call,mac_hash (&td, ciphertext.data, length, ver))"];
"1000179" [label="(Call,ciphertext.size - hash_size)"];
"1000306" [label="(Call,ciphertext.size - hash_size - pad)"];
"1000176" [label="(Identifier,ret)"];
"1000174" [label="(Call,gnutls_assert ())"];
"1000261" [label="(Call,ciphertext.size - 1)"];
"1000173" [label="(Block,)"];
"1000234" [label="(Call,ciphertext.size -= blocksize)"];
"1000336" [label="(Call,ciphertext.size - i)"];
"1000158" [label="(Identifier,ret)"];
"1000172" [label="(Literal,0)"];
"1000208" [label="(Call,_gnutls_cipher_decrypt (&params->read.cipher_state,\n                                   ciphertext.data, ciphertext.size))"];
"1000456" [label="(Call,memcmp (MAC, &ciphertext.data[length], hash_size))"];
"1000239" [label="(Call,ciphertext.data += blocksize)"];
"1000157" -> "1000156"  [label="AST: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000172" -> "1000157"  [label="CFG: "];
"1000157" -> "1000486"  [label="DDG: _gnutls_cipher_decrypt (&params->read.cipher_state,\n                                   ciphertext.data, ciphertext.size)"];
"1000157" -> "1000486"  [label="DDG: ret"];
"1000157" -> "1000156"  [label="DDG: ret"];
"1000159" -> "1000157"  [label="DDG: &params->read.cipher_state"];
"1000159" -> "1000157"  [label="DDG: ciphertext.data"];
"1000159" -> "1000157"  [label="DDG: ciphertext.size"];
"1000157" -> "1000175"  [label="DDG: ret"];
"1000159" -> "1000169"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000166" -> "1000159"  [label="AST: "];
"1000169" -> "1000159"  [label="AST: "];
"1000159" -> "1000486"  [label="DDG: ciphertext.size"];
"1000159" -> "1000486"  [label="DDG: &params->read.cipher_state"];
"1000159" -> "1000486"  [label="DDG: ciphertext.data"];
"1000159" -> "1000156"  [label="DDG: &params->read.cipher_state"];
"1000159" -> "1000156"  [label="DDG: ciphertext.data"];
"1000159" -> "1000156"  [label="DDG: ciphertext.size"];
"1000113" -> "1000159"  [label="DDG: ciphertext"];
"1000159" -> "1000179"  [label="DDG: ciphertext.size"];
"1000159" -> "1000433"  [label="DDG: ciphertext.data"];
"1000159" -> "1000456"  [label="DDG: ciphertext.data"];
"1000159" -> "1000478"  [label="DDG: ciphertext.data"];
"1000113" -> "1000109"  [label="AST: "];
"1000113" -> "1000486"  [label="DDG: ciphertext"];
"1000113" -> "1000179"  [label="DDG: ciphertext"];
"1000113" -> "1000188"  [label="DDG: ciphertext"];
"1000113" -> "1000194"  [label="DDG: ciphertext"];
"1000113" -> "1000208"  [label="DDG: ciphertext"];
"1000113" -> "1000234"  [label="DDG: ciphertext"];
"1000113" -> "1000239"  [label="DDG: ciphertext"];
"1000113" -> "1000245"  [label="DDG: ciphertext"];
"1000113" -> "1000261"  [label="DDG: ciphertext"];
"1000113" -> "1000273"  [label="DDG: ciphertext"];
"1000113" -> "1000285"  [label="DDG: ciphertext"];
"1000113" -> "1000293"  [label="DDG: ciphertext"];
"1000113" -> "1000306"  [label="DDG: ciphertext"];
"1000113" -> "1000336"  [label="DDG: ciphertext"];
"1000113" -> "1000345"  [label="DDG: ciphertext"];
"1000113" -> "1000433"  [label="DDG: ciphertext"];
"1000113" -> "1000478"  [label="DDG: ciphertext"];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000172"  [label="CFG: "];
"1000172" -> "1000156"  [label="AST: "];
"1000174" -> "1000156"  [label="CFG: "];
"1000178" -> "1000156"  [label="CFG: "];
"1000156" -> "1000486"  [label="DDG: (ret =\n           _gnutls_cipher_decrypt (&params->read.cipher_state,\n                                   ciphertext.data, ciphertext.size)) < 0"];
"1000175" -> "1000173"  [label="AST: "];
"1000175" -> "1000176"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000486" -> "1000175"  [label="CFG: "];
"1000175" -> "1000486"  [label="DDG: <RET>"];
"1000176" -> "1000175"  [label="DDG: ret"];
}
