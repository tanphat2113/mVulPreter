digraph "0_Android_1171e7c047bf79e7c93342bb6a812c9edd86aa84@API" {
"1000855" [label="(Call,size = data.readInt64())"];
"1000863" [label="(Call,allocateBuffer(\n                    node, port_index, size, &buffer, &buffer_data))"];
"1000861" [label="(Call,err = allocateBuffer(\n                    node, port_index, size, &buffer, &buffer_data))"];
"1000871" [label="(Call,reply->writeInt32(err))"];
"1000874" [label="(Call,err == OK)"];
"1000871" [label="(Call,reply->writeInt32(err))"];
"1000864" [label="(Identifier,node)"];
"1000865" [label="(Identifier,port_index)"];
"1000869" [label="(Call,&buffer_data)"];
"1000874" [label="(Call,err == OK)"];
"1000857" [label="(Call,data.readInt64())"];
"1001075" [label="(MethodReturn,status_t)"];
"1000866" [label="(Identifier,size)"];
"1000824" [label="(Block,)"];
"1000873" [label="(ControlStructure,if (err == OK))"];
"1000887" [label="(Identifier,NO_ERROR)"];
"1000842" [label="(Call,isSecure(node))"];
"1000867" [label="(Call,&buffer)"];
"1000844" [label="(Call,port_index != 0)"];
"1000861" [label="(Call,err = allocateBuffer(\n                    node, port_index, size, &buffer, &buffer_data))"];
"1000872" [label="(Identifier,err)"];
"1000855" [label="(Call,size = data.readInt64())"];
"1000856" [label="(Identifier,size)"];
"1000836" [label="(Call,port_index = data.readInt32())"];
"1000875" [label="(Identifier,err)"];
"1000862" [label="(Identifier,err)"];
"1000863" [label="(Call,allocateBuffer(\n                    node, port_index, size, &buffer, &buffer_data))"];
"1000876" [label="(Identifier,OK)"];
"1000855" -> "1000824"  [label="AST: "];
"1000855" -> "1000857"  [label="CFG: "];
"1000856" -> "1000855"  [label="AST: "];
"1000857" -> "1000855"  [label="AST: "];
"1000862" -> "1000855"  [label="CFG: "];
"1000855" -> "1001075"  [label="DDG: data.readInt64()"];
"1000855" -> "1000863"  [label="DDG: size"];
"1000863" -> "1000861"  [label="AST: "];
"1000863" -> "1000869"  [label="CFG: "];
"1000864" -> "1000863"  [label="AST: "];
"1000865" -> "1000863"  [label="AST: "];
"1000866" -> "1000863"  [label="AST: "];
"1000867" -> "1000863"  [label="AST: "];
"1000869" -> "1000863"  [label="AST: "];
"1000861" -> "1000863"  [label="CFG: "];
"1000863" -> "1001075"  [label="DDG: size"];
"1000863" -> "1001075"  [label="DDG: &buffer"];
"1000863" -> "1001075"  [label="DDG: port_index"];
"1000863" -> "1001075"  [label="DDG: node"];
"1000863" -> "1001075"  [label="DDG: &buffer_data"];
"1000863" -> "1000861"  [label="DDG: &buffer_data"];
"1000863" -> "1000861"  [label="DDG: &buffer"];
"1000863" -> "1000861"  [label="DDG: node"];
"1000863" -> "1000861"  [label="DDG: size"];
"1000863" -> "1000861"  [label="DDG: port_index"];
"1000842" -> "1000863"  [label="DDG: node"];
"1000844" -> "1000863"  [label="DDG: port_index"];
"1000836" -> "1000863"  [label="DDG: port_index"];
"1000861" -> "1000824"  [label="AST: "];
"1000862" -> "1000861"  [label="AST: "];
"1000872" -> "1000861"  [label="CFG: "];
"1000861" -> "1001075"  [label="DDG: allocateBuffer(\n                    node, port_index, size, &buffer, &buffer_data)"];
"1000861" -> "1000871"  [label="DDG: err"];
"1000871" -> "1000824"  [label="AST: "];
"1000871" -> "1000872"  [label="CFG: "];
"1000872" -> "1000871"  [label="AST: "];
"1000875" -> "1000871"  [label="CFG: "];
"1000871" -> "1001075"  [label="DDG: reply->writeInt32(err)"];
"1000871" -> "1000874"  [label="DDG: err"];
"1000874" -> "1000873"  [label="AST: "];
"1000874" -> "1000876"  [label="CFG: "];
"1000875" -> "1000874"  [label="AST: "];
"1000876" -> "1000874"  [label="AST: "];
"1000880" -> "1000874"  [label="CFG: "];
"1000887" -> "1000874"  [label="CFG: "];
"1000874" -> "1001075"  [label="DDG: err == OK"];
"1000874" -> "1001075"  [label="DDG: OK"];
"1000874" -> "1001075"  [label="DDG: err"];
}
