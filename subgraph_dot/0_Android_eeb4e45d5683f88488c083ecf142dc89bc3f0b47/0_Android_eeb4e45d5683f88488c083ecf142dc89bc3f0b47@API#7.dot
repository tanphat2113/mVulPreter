digraph "0_Android_eeb4e45d5683f88488c083ecf142dc89bc3f0b47@API" {
"1000193" [label="(Call,calloc((s->entries*2+1),sizeof(*work)))"];
"1000195" [label="(Call,s->entries*2)"];
"1000191" [label="(Call,work=calloc((s->entries*2+1),sizeof(*work)))"];
"1000205" [label="(Call,!work)"];
"1000210" [label="(Call,_make_words(lengthlist,s->entries,work,quantvals,s,opb,maptype))"];
"1000321" [label="(Call,work[i] & 0x80000000UL)"];
"1000320" [label="(Call,(work[i] & 0x80000000UL) >> 24)"];
"1000319" [label="(Call,((work[i] & 0x80000000UL) >> 24) | work[i])"];
"1000317" [label="(Call,(unsigned char)\n            (((work[i] & 0x80000000UL) >> 24) | work[i]))"];
"1000309" [label="(Call,((unsigned char *)s->dec_table)[i]=(unsigned char)\n            (((work[i] & 0x80000000UL) >> 24) | work[i]))"];
"1000856" [label="(Call,free(work))"];
"1000359" [label="(Call,work[i] & 0x80000000UL)"];
"1000358" [label="(Call,(work[i] & 0x80000000UL) >> 16)"];
"1000357" [label="(Call,((work[i] & 0x80000000UL) >> 16) | work[i])"];
"1000355" [label="(Call,(ogg_uint16_t)\n            (((work[i] & 0x80000000UL) >> 16) | work[i]))"];
"1000347" [label="(Call,((ogg_uint16_t *)s->dec_table)[i]=(ogg_uint16_t)\n            (((work[i] & 0x80000000UL) >> 16) | work[i]))"];
"1000414" [label="(Call,work[i]&0x80000000UL)"];
"1000438" [label="(Call,work[i]>>8)"];
"1000437" [label="(Call,work[i]>>8 & 0x7f)"];
"1000436" [label="(Call,(work[i]>>8 & 0x7f)|0x80)"];
"1000432" [label="(Call,out[top]=(work[i]>>8 & 0x7f)|0x80)"];
"1000468" [label="(Call,work[i] & 0xff)"];
"1000462" [label="(Call,out[top+2]=work[i] & 0xff)"];
"1000497" [label="(Call,work[i]>>8)"];
"1000496" [label="(Call,work[i]>>8 & 0x7f)"];
"1000495" [label="(Call,(work[i]>>8 & 0x7f)|0x80)"];
"1000491" [label="(Call,out[top]=(work[i]>>8 & 0x7f)|0x80)"];
"1000525" [label="(Call,work[i] & 0xff)"];
"1000519" [label="(Call,out[top+2]=work[i] & 0xff)"];
"1000550" [label="(Call,work[i]*2)"];
"1000596" [label="(Call,work[i]*2)"];
"1000421" [label="(Call,work[i+1]&0x80000000UL)"];
"1000453" [label="(Call,work[i+1]>>8)"];
"1000452" [label="(Call,work[i+1]>>8 & 0x7f)"];
"1000451" [label="(Call,(work[i+1]>>8 & 0x7f)|0x80)"];
"1000445" [label="(Call,out[top+1]=(work[i+1]>>8 & 0x7f)|0x80)"];
"1000479" [label="(Call,work[i+1] & 0xff)"];
"1000473" [label="(Call,out[top+3]=work[i+1] & 0xff)"];
"1000533" [label="(Call,work[i+1]&0x80000000UL)"];
"1000563" [label="(Call,work[i+1]>>8)"];
"1000562" [label="(Call,work[i+1]>>8 & 0x7f)"];
"1000561" [label="(Call,(work[i+1]>>8 & 0x7f)|0x80)"];
"1000555" [label="(Call,out[top+1]=(work[i+1]>>8 & 0x7f)|0x80)"];
"1000578" [label="(Call,work[i+1] & 0xff)"];
"1000572" [label="(Call,out[top+2]=work[i+1] & 0xff)"];
"1000609" [label="(Call,work[i+1]*2)"];
"1000512" [label="(Call,work[i+1]*2)"];
"1000504" [label="(Call,out[top+1]=work[work[i+1]*2])"];
"1000544" [label="(Call,out[top]=work[work[i]*2])"];
"1000590" [label="(Call,out[top]=work[work[i]*2])"];
"1000601" [label="(Call,out[top+1]=work[work[i+1]*2])"];
"1000649" [label="(Call,work[i]&0x80000000UL)"];
"1000673" [label="(Call,work[i]>>16)"];
"1000672" [label="(Call,work[i]>>16 & 0x7fff)"];
"1000671" [label="(Call,(work[i]>>16 & 0x7fff)|0x8000)"];
"1000667" [label="(Call,out[top]=(work[i]>>16 & 0x7fff)|0x8000)"];
"1000703" [label="(Call,work[i] & 0xffff)"];
"1000697" [label="(Call,out[top+2]=work[i] & 0xffff)"];
"1000732" [label="(Call,work[i]>>16)"];
"1000731" [label="(Call,work[i]>>16 & 0x7fff)"];
"1000730" [label="(Call,(work[i]>>16 & 0x7fff)|0x8000)"];
"1000726" [label="(Call,out[top]=(work[i]>>16 & 0x7fff)|0x8000)"];
"1000760" [label="(Call,work[i] & 0xffff)"];
"1000754" [label="(Call,out[top+2]=work[i] & 0xffff)"];
"1000785" [label="(Call,work[i]*2)"];
"1000831" [label="(Call,work[i]*2)"];
"1000656" [label="(Call,work[i+1]&0x80000000UL)"];
"1000688" [label="(Call,work[i+1]>>16)"];
"1000687" [label="(Call,work[i+1]>>16 & 0x7fff)"];
"1000686" [label="(Call,(work[i+1]>>16 & 0x7fff)|0x8000)"];
"1000680" [label="(Call,out[top+1]=(work[i+1]>>16 & 0x7fff)|0x8000)"];
"1000714" [label="(Call,work[i+1] & 0xffff)"];
"1000708" [label="(Call,out[top+3]=work[i+1] & 0xffff)"];
"1000768" [label="(Call,work[i+1]&0x80000000UL)"];
"1000798" [label="(Call,work[i+1]>>16)"];
"1000797" [label="(Call,work[i+1]>>16 & 0x7fff)"];
"1000796" [label="(Call,(work[i+1]>>16 & 0x7fff)|0x8000)"];
"1000790" [label="(Call,out[top+1]=(work[i+1]>>16 & 0x7fff)|0x8000)"];
"1000813" [label="(Call,work[i+1] & 0xffff)"];
"1000807" [label="(Call,out[top+2]=work[i+1] & 0xffff)"];
"1000844" [label="(Call,work[i+1]*2)"];
"1000747" [label="(Call,work[i+1]*2)"];
"1000739" [label="(Call,out[top+1]=work[work[i+1]*2])"];
"1000779" [label="(Call,out[top]=work[work[i]*2])"];
"1000825" [label="(Call,out[top]=work[work[i]*2])"];
"1000836" [label="(Call,out[top+1]=work[work[i+1]*2])"];
"1000861" [label="(Call,free(work))"];
"1000572" [label="(Call,out[top+2]=work[i+1] & 0xff)"];
"1000564" [label="(Call,work[i+1])"];
"1000714" [label="(Call,work[i+1] & 0xffff)"];
"1000326" [label="(Literal,24)"];
"1000796" [label="(Call,(work[i+1]>>16 & 0x7fff)|0x8000)"];
"1000445" [label="(Call,out[top+1]=(work[i+1]>>8 & 0x7f)|0x80)"];
"1000464" [label="(Identifier,out)"];
"1000220" [label="(ControlStructure,goto error_out;)"];
"1000462" [label="(Call,out[top+2]=work[i] & 0xff)"];
"1000862" [label="(Identifier,work)"];
"1000741" [label="(Identifier,out)"];
"1000422" [label="(Call,work[i+1])"];
"1000610" [label="(Call,work[i+1])"];
"1000212" [label="(Call,s->entries)"];
"1000618" [label="(Identifier,work)"];
"1000681" [label="(Call,out[top+1])"];
"1000487" [label="(Block,)"];
"1000498" [label="(Call,work[i])"];
"1000696" [label="(Literal,0x8000)"];
"1000671" [label="(Call,(work[i]>>16 & 0x7fff)|0x8000)"];
"1000505" [label="(Call,out[top+1])"];
"1000210" [label="(Call,_make_words(lengthlist,s->entries,work,quantvals,s,opb,maptype))"];
"1000695" [label="(Literal,0x7fff)"];
"1000219" [label="(Identifier,maptype)"];
"1000688" [label="(Call,work[i+1]>>16)"];
"1000468" [label="(Call,work[i] & 0xff)"];
"1000479" [label="(Call,work[i+1] & 0xff)"];
"1000609" [label="(Call,work[i+1]*2)"];
"1000747" [label="(Call,work[i+1]*2)"];
"1000861" [label="(Call,free(work))"];
"1000346" [label="(Identifier,i)"];
"1000548" [label="(Call,work[work[i]*2])"];
"1000591" [label="(Call,out[top])"];
"1000460" [label="(Literal,0x7f)"];
"1000211" [label="(Identifier,lengthlist)"];
"1000726" [label="(Call,out[top]=(work[i]>>16 & 0x7fff)|0x8000)"];
"1000217" [label="(Identifier,s)"];
"1000724" [label="(Identifier,top)"];
"1000573" [label="(Call,out[top+2])"];
"1000732" [label="(Call,work[i]>>16)"];
"1000461" [label="(Literal,0x80)"];
"1000678" [label="(Literal,0x7fff)"];
"1000753" [label="(Literal,2)"];
"1000814" [label="(Call,work[i+1])"];
"1000850" [label="(Literal,2)"];
"1000780" [label="(Call,out[top])"];
"1000454" [label="(Call,work[i+1])"];
"1000195" [label="(Call,s->entries*2)"];
"1000578" [label="(Call,work[i+1] & 0xff)"];
"1000533" [label="(Call,work[i+1]&0x80000000UL)"];
"1000463" [label="(Call,out[top+2])"];
"1000571" [label="(Literal,0x80)"];
"1000510" [label="(Call,work[work[i+1]*2])"];
"1000114" [label="(Call,!lengthlist)"];
"1000447" [label="(Identifier,out)"];
"1000821" [label="(Block,)"];
"1000209" [label="(ControlStructure,if(_make_words(lengthlist,s->entries,work,quantvals,s,opb,maptype)))"];
"1000709" [label="(Call,out[top+3])"];
"1000328" [label="(Identifier,work)"];
"1000325" [label="(Literal,0x80000000UL)"];
"1000512" [label="(Call,work[i+1]*2)"];
"1000755" [label="(Call,out[top+2])"];
"1000791" [label="(Call,out[top+1])"];
"1000503" [label="(Literal,0x80)"];
"1000321" [label="(Call,work[i] & 0x80000000UL)"];
"1000319" [label="(Call,((work[i] & 0x80000000UL) >> 24) | work[i])"];
"1000597" [label="(Call,work[i])"];
"1000819" [label="(Literal,0xffff)"];
"1000649" [label="(Call,work[i]&0x80000000UL)"];
"1000495" [label="(Call,(work[i]>>8 & 0x7f)|0x80)"];
"1000473" [label="(Call,out[top+3]=work[i+1] & 0xff)"];
"1000738" [label="(Literal,0x8000)"];
"1000799" [label="(Call,work[i+1])"];
"1000446" [label="(Call,out[top+1])"];
"1000603" [label="(Identifier,out)"];
"1000513" [label="(Call,work[i+1])"];
"1000215" [label="(Identifier,work)"];
"1000496" [label="(Call,work[i]>>8 & 0x7f)"];
"1000206" [label="(Identifier,work)"];
"1000205" [label="(Call,!work)"];
"1000760" [label="(Call,work[i] & 0xffff)"];
"1000653" [label="(Literal,0x80000000UL)"];
"1000109" [label="(MethodParameterIn,int maptype)"];
"1000769" [label="(Call,work[i+1])"];
"1000414" [label="(Call,work[i]&0x80000000UL)"];
"1000838" [label="(Identifier,out)"];
"1000443" [label="(Literal,0x7f)"];
"1000837" [label="(Call,out[top+1])"];
"1000453" [label="(Call,work[i+1]>>8)"];
"1000520" [label="(Call,out[top+2])"];
"1000740" [label="(Call,out[top+1])"];
"1000596" [label="(Call,work[i]*2)"];
"1000432" [label="(Call,out[top]=(work[i]>>8 & 0x7f)|0x80)"];
"1000650" [label="(Call,work[i])"];
"1000672" [label="(Call,work[i]>>16 & 0x7fff)"];
"1000309" [label="(Call,((unsigned char *)s->dec_table)[i]=(unsigned char)\n            (((work[i] & 0x80000000UL) >> 24) | work[i]))"];
"1000216" [label="(Identifier,quantvals)"];
"1000308" [label="(Identifier,i)"];
"1000492" [label="(Call,out[top])"];
"1000542" [label="(Identifier,top)"];
"1000200" [label="(Literal,1)"];
"1000452" [label="(Call,work[i+1]>>8 & 0x7f)"];
"1000557" [label="(Identifier,out)"];
"1000853" [label="(Identifier,work)"];
"1000707" [label="(Literal,0xffff)"];
"1000489" [label="(Identifier,top)"];
"1000544" [label="(Call,out[top]=work[work[i]*2])"];
"1000805" [label="(Literal,0x7fff)"];
"1000433" [label="(Call,out[top])"];
"1000588" [label="(Identifier,top)"];
"1000836" [label="(Call,out[top+1]=work[work[i+1]*2])"];
"1000423" [label="(Identifier,work)"];
"1000451" [label="(Call,(work[i+1]>>8 & 0x7f)|0x80)"];
"1000428" [label="(Block,)"];
"1000365" [label="(Call,work[i])"];
"1000786" [label="(Call,work[i])"];
"1000438" [label="(Call,work[i]>>8)"];
"1000192" [label="(Identifier,work)"];
"1000682" [label="(Identifier,out)"];
"1000807" [label="(Call,out[top+2]=work[i+1] & 0xffff)"];
"1000731" [label="(Call,work[i]>>16 & 0x7fff)"];
"1000607" [label="(Call,work[work[i+1]*2])"];
"1000703" [label="(Call,work[i] & 0xffff)"];
"1000748" [label="(Call,work[i+1])"];
"1000310" [label="(Call,((unsigned char *)s->dec_table)[i])"];
"1000521" [label="(Identifier,out)"];
"1000797" [label="(Call,work[i+1]>>16 & 0x7fff)"];
"1000835" [label="(Literal,2)"];
"1000687" [label="(Call,work[i+1]>>16 & 0x7fff)"];
"1000785" [label="(Call,work[i]*2)"];
"1000789" [label="(Literal,2)"];
"1000648" [label="(ControlStructure,if(work[i]&0x80000000UL))"];
"1000436" [label="(Call,(work[i]>>8 & 0x7f)|0x80)"];
"1000348" [label="(Call,((ogg_uint16_t *)s->dec_table)[i])"];
"1000444" [label="(Literal,0x80)"];
"1000658" [label="(Identifier,work)"];
"1000497" [label="(Call,work[i]>>8)"];
"1000859" [label="(Literal,0)"];
"1000779" [label="(Call,out[top]=work[work[i]*2])"];
"1000677" [label="(Literal,16)"];
"1000845" [label="(Call,work[i+1])"];
"1000224" [label="(Identifier,s)"];
"1000437" [label="(Call,work[i]>>8 & 0x7f)"];
"1000783" [label="(Call,work[work[i]*2])"];
"1000586" [label="(Block,)"];
"1000427" [label="(Literal,0x80000000UL)"];
"1000491" [label="(Call,out[top]=(work[i]>>8 & 0x7f)|0x80)"];
"1000475" [label="(Identifier,out)"];
"1000710" [label="(Identifier,out)"];
"1000737" [label="(Literal,0x7fff)"];
"1000813" [label="(Call,work[i+1] & 0xffff)"];
"1000730" [label="(Call,(work[i]>>16 & 0x7fff)|0x8000)"];
"1000602" [label="(Call,out[top+1])"];
"1000804" [label="(Literal,16)"];
"1000294" [label="(ControlStructure,for(i=0;i<s->used_entries*2-2;i++))"];
"1000767" [label="(ControlStructure,if(work[i+1]&0x80000000UL))"];
"1000540" [label="(Block,)"];
"1000360" [label="(Call,work[i])"];
"1000545" [label="(Call,out[top])"];
"1000600" [label="(Literal,2)"];
"1000761" [label="(Call,work[i])"];
"1000204" [label="(ControlStructure,if (!work))"];
"1000485" [label="(Literal,0xff)"];
"1000856" [label="(Call,free(work))"];
"1000110" [label="(Block,)"];
"1000529" [label="(Literal,0xff)"];
"1000535" [label="(Identifier,work)"];
"1000733" [label="(Call,work[i])"];
"1000574" [label="(Identifier,out)"];
"1000359" [label="(Call,work[i] & 0x80000000UL)"];
"1000480" [label="(Call,work[i+1])"];
"1000474" [label="(Call,out[top+3])"];
"1000829" [label="(Call,work[work[i]*2])"];
"1000722" [label="(Block,)"];
"1000108" [label="(MethodParameterIn,oggpack_buffer *opb)"];
"1000777" [label="(Identifier,top)"];
"1000792" [label="(Identifier,out)"];
"1000656" [label="(Call,work[i+1]&0x80000000UL)"];
"1000320" [label="(Call,(work[i] & 0x80000000UL) >> 24)"];
"1000826" [label="(Call,out[top])"];
"1000554" [label="(Literal,2)"];
"1000107" [label="(MethodParameterIn,long quantvals)"];
"1000539" [label="(Literal,0x80000000UL)"];
"1000421" [label="(Call,work[i+1]&0x80000000UL)"];
"1000532" [label="(ControlStructure,if(work[i+1]&0x80000000UL))"];
"1000699" [label="(Identifier,out)"];
"1000106" [label="(MethodParameterIn,char *lengthlist)"];
"1000655" [label="(ControlStructure,if(work[i+1]&0x80000000UL))"];
"1000809" [label="(Identifier,out)"];
"1000563" [label="(Call,work[i+1]>>8)"];
"1000864" [label="(Literal,1)"];
"1000679" [label="(Literal,0x8000)"];
"1000347" [label="(Call,((ogg_uint16_t *)s->dec_table)[i]=(ogg_uint16_t)\n            (((work[i] & 0x80000000UL) >> 16) | work[i]))"];
"1000665" [label="(Identifier,top)"];
"1000525" [label="(Call,work[i] & 0xff)"];
"1000358" [label="(Call,(work[i] & 0x80000000UL) >> 16)"];
"1000689" [label="(Call,work[i+1])"];
"1000704" [label="(Call,work[i])"];
"1000715" [label="(Call,work[i+1])"];
"1000420" [label="(ControlStructure,if(work[i+1]&0x80000000UL))"];
"1000768" [label="(Call,work[i+1]&0x80000000UL)"];
"1000745" [label="(Call,work[work[i+1]*2])"];
"1000657" [label="(Call,work[i+1])"];
"1000317" [label="(Call,(unsigned char)\n            (((work[i] & 0x80000000UL) >> 24) | work[i]))"];
"1000105" [label="(MethodParameterIn,codebook *s)"];
"1000601" [label="(Call,out[top+1]=work[work[i+1]*2])"];
"1000825" [label="(Call,out[top]=work[work[i]*2])"];
"1000663" [label="(Block,)"];
"1000662" [label="(Literal,0x80000000UL)"];
"1000208" [label="(Literal,1)"];
"1000686" [label="(Call,(work[i+1]>>16 & 0x7fff)|0x8000)"];
"1000708" [label="(Call,out[top+3]=work[i+1] & 0xffff)"];
"1000865" [label="(MethodReturn,static int)"];
"1000697" [label="(Call,out[top+2]=work[i] & 0xffff)"];
"1000579" [label="(Call,work[i+1])"];
"1000680" [label="(Call,out[top+1]=(work[i+1]>>16 & 0x7fff)|0x8000)"];
"1000519" [label="(Call,out[top+2]=work[i] & 0xff)"];
"1000756" [label="(Identifier,out)"];
"1000569" [label="(Literal,8)"];
"1000364" [label="(Literal,16)"];
"1000667" [label="(Call,out[top]=(work[i]>>16 & 0x7fff)|0x8000)"];
"1000327" [label="(Call,work[i])"];
"1000439" [label="(Call,work[i])"];
"1000674" [label="(Call,work[i])"];
"1000770" [label="(Identifier,work)"];
"1000413" [label="(ControlStructure,if(work[i]&0x80000000UL))"];
"1000196" [label="(Call,s->entries)"];
"1000355" [label="(Call,(ogg_uint16_t)\n            (((work[i] & 0x80000000UL) >> 16) | work[i]))"];
"1000562" [label="(Call,work[i+1]>>8 & 0x7f)"];
"1000842" [label="(Call,work[work[i+1]*2])"];
"1000526" [label="(Call,work[i])"];
"1000739" [label="(Call,out[top+1]=work[work[i+1]*2])"];
"1000798" [label="(Call,work[i+1]>>16)"];
"1000857" [label="(Identifier,work)"];
"1000570" [label="(Literal,0x7f)"];
"1000191" [label="(Call,work=calloc((s->entries*2+1),sizeof(*work)))"];
"1000555" [label="(Call,out[top+1]=(work[i+1]>>8 & 0x7f)|0x80)"];
"1000584" [label="(Literal,0xff)"];
"1000194" [label="(Call,s->entries*2+1)"];
"1000774" [label="(Literal,0x80000000UL)"];
"1000332" [label="(ControlStructure,for(i=0;i<s->used_entries*2-2;i++))"];
"1000727" [label="(Call,out[top])"];
"1000518" [label="(Literal,2)"];
"1000502" [label="(Literal,0x7f)"];
"1000851" [label="(Call,work[i]=top)"];
"1000694" [label="(Literal,16)"];
"1000775" [label="(Block,)"];
"1000698" [label="(Call,out[top+2])"];
"1000504" [label="(Call,out[top+1]=work[work[i+1]*2])"];
"1000418" [label="(Literal,0x80000000UL)"];
"1000616" [label="(Call,work[i]=top)"];
"1000754" [label="(Call,out[top+2]=work[i] & 0xffff)"];
"1000561" [label="(Call,(work[i+1]>>8 & 0x7f)|0x80)"];
"1000501" [label="(Literal,8)"];
"1000472" [label="(Literal,0xff)"];
"1000556" [label="(Call,out[top+1])"];
"1000764" [label="(Literal,0xffff)"];
"1000506" [label="(Identifier,out)"];
"1000322" [label="(Call,work[i])"];
"1000790" [label="(Call,out[top+1]=(work[i+1]>>16 & 0x7fff)|0x8000)"];
"1000831" [label="(Call,work[i]*2)"];
"1000551" [label="(Call,work[i])"];
"1000808" [label="(Call,out[top+2])"];
"1000806" [label="(Literal,0x8000)"];
"1000201" [label="(Call,sizeof(*work))"];
"1000823" [label="(Identifier,top)"];
"1000430" [label="(Identifier,top)"];
"1000550" [label="(Call,work[i]*2)"];
"1000469" [label="(Call,work[i])"];
"1000357" [label="(Call,((work[i] & 0x80000000UL) >> 16) | work[i])"];
"1000218" [label="(Identifier,opb)"];
"1000832" [label="(Call,work[i])"];
"1000673" [label="(Call,work[i]>>16)"];
"1000736" [label="(Literal,16)"];
"1000668" [label="(Call,out[top])"];
"1000415" [label="(Call,work[i])"];
"1000459" [label="(Literal,8)"];
"1000442" [label="(Literal,8)"];
"1000844" [label="(Call,work[i+1]*2)"];
"1000199" [label="(Literal,2)"];
"1000193" [label="(Call,calloc((s->entries*2+1),sizeof(*work)))"];
"1000363" [label="(Literal,0x80000000UL)"];
"1000534" [label="(Call,work[i+1])"];
"1000615" [label="(Literal,2)"];
"1000590" [label="(Call,out[top]=work[work[i]*2])"];
"1000366" [label="(Identifier,work)"];
"1000720" [label="(Literal,0xffff)"];
"1000594" [label="(Call,work[work[i]*2])"];
"1000193" -> "1000191"  [label="AST: "];
"1000193" -> "1000201"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000201" -> "1000193"  [label="AST: "];
"1000191" -> "1000193"  [label="CFG: "];
"1000193" -> "1000865"  [label="DDG: s->entries*2+1"];
"1000193" -> "1000191"  [label="DDG: s->entries*2+1"];
"1000195" -> "1000193"  [label="DDG: s->entries"];
"1000195" -> "1000193"  [label="DDG: 2"];
"1000195" -> "1000194"  [label="AST: "];
"1000195" -> "1000199"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000199" -> "1000195"  [label="AST: "];
"1000200" -> "1000195"  [label="CFG: "];
"1000195" -> "1000865"  [label="DDG: s->entries"];
"1000195" -> "1000194"  [label="DDG: s->entries"];
"1000195" -> "1000194"  [label="DDG: 2"];
"1000195" -> "1000210"  [label="DDG: s->entries"];
"1000191" -> "1000110"  [label="AST: "];
"1000192" -> "1000191"  [label="AST: "];
"1000206" -> "1000191"  [label="CFG: "];
"1000191" -> "1000865"  [label="DDG: calloc((s->entries*2+1),sizeof(*work))"];
"1000191" -> "1000205"  [label="DDG: work"];
"1000205" -> "1000204"  [label="AST: "];
"1000205" -> "1000206"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000208" -> "1000205"  [label="CFG: "];
"1000211" -> "1000205"  [label="CFG: "];
"1000205" -> "1000865"  [label="DDG: work"];
"1000205" -> "1000865"  [label="DDG: !work"];
"1000205" -> "1000210"  [label="DDG: work"];
"1000210" -> "1000209"  [label="AST: "];
"1000210" -> "1000219"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="AST: "];
"1000215" -> "1000210"  [label="AST: "];
"1000216" -> "1000210"  [label="AST: "];
"1000217" -> "1000210"  [label="AST: "];
"1000218" -> "1000210"  [label="AST: "];
"1000219" -> "1000210"  [label="AST: "];
"1000220" -> "1000210"  [label="CFG: "];
"1000224" -> "1000210"  [label="CFG: "];
"1000210" -> "1000865"  [label="DDG: _make_words(lengthlist,s->entries,work,quantvals,s,opb,maptype)"];
"1000210" -> "1000865"  [label="DDG: quantvals"];
"1000210" -> "1000865"  [label="DDG: maptype"];
"1000210" -> "1000865"  [label="DDG: s"];
"1000210" -> "1000865"  [label="DDG: opb"];
"1000210" -> "1000865"  [label="DDG: s->entries"];
"1000210" -> "1000865"  [label="DDG: lengthlist"];
"1000114" -> "1000210"  [label="DDG: lengthlist"];
"1000106" -> "1000210"  [label="DDG: lengthlist"];
"1000107" -> "1000210"  [label="DDG: quantvals"];
"1000105" -> "1000210"  [label="DDG: s"];
"1000108" -> "1000210"  [label="DDG: opb"];
"1000109" -> "1000210"  [label="DDG: maptype"];
"1000210" -> "1000321"  [label="DDG: work"];
"1000210" -> "1000319"  [label="DDG: work"];
"1000210" -> "1000359"  [label="DDG: work"];
"1000210" -> "1000357"  [label="DDG: work"];
"1000210" -> "1000414"  [label="DDG: work"];
"1000210" -> "1000421"  [label="DDG: work"];
"1000210" -> "1000438"  [label="DDG: work"];
"1000210" -> "1000453"  [label="DDG: work"];
"1000210" -> "1000468"  [label="DDG: work"];
"1000210" -> "1000479"  [label="DDG: work"];
"1000210" -> "1000497"  [label="DDG: work"];
"1000210" -> "1000504"  [label="DDG: work"];
"1000210" -> "1000512"  [label="DDG: work"];
"1000210" -> "1000525"  [label="DDG: work"];
"1000210" -> "1000533"  [label="DDG: work"];
"1000210" -> "1000544"  [label="DDG: work"];
"1000210" -> "1000550"  [label="DDG: work"];
"1000210" -> "1000563"  [label="DDG: work"];
"1000210" -> "1000578"  [label="DDG: work"];
"1000210" -> "1000590"  [label="DDG: work"];
"1000210" -> "1000596"  [label="DDG: work"];
"1000210" -> "1000601"  [label="DDG: work"];
"1000210" -> "1000609"  [label="DDG: work"];
"1000210" -> "1000649"  [label="DDG: work"];
"1000210" -> "1000656"  [label="DDG: work"];
"1000210" -> "1000673"  [label="DDG: work"];
"1000210" -> "1000688"  [label="DDG: work"];
"1000210" -> "1000703"  [label="DDG: work"];
"1000210" -> "1000714"  [label="DDG: work"];
"1000210" -> "1000732"  [label="DDG: work"];
"1000210" -> "1000739"  [label="DDG: work"];
"1000210" -> "1000747"  [label="DDG: work"];
"1000210" -> "1000760"  [label="DDG: work"];
"1000210" -> "1000768"  [label="DDG: work"];
"1000210" -> "1000779"  [label="DDG: work"];
"1000210" -> "1000785"  [label="DDG: work"];
"1000210" -> "1000798"  [label="DDG: work"];
"1000210" -> "1000813"  [label="DDG: work"];
"1000210" -> "1000825"  [label="DDG: work"];
"1000210" -> "1000831"  [label="DDG: work"];
"1000210" -> "1000836"  [label="DDG: work"];
"1000210" -> "1000844"  [label="DDG: work"];
"1000210" -> "1000856"  [label="DDG: work"];
"1000210" -> "1000861"  [label="DDG: work"];
"1000321" -> "1000320"  [label="AST: "];
"1000321" -> "1000325"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000325" -> "1000321"  [label="AST: "];
"1000326" -> "1000321"  [label="CFG: "];
"1000321" -> "1000320"  [label="DDG: work[i]"];
"1000321" -> "1000320"  [label="DDG: 0x80000000UL"];
"1000319" -> "1000321"  [label="DDG: work[i]"];
"1000321" -> "1000319"  [label="DDG: work[i]"];
"1000320" -> "1000319"  [label="AST: "];
"1000320" -> "1000326"  [label="CFG: "];
"1000326" -> "1000320"  [label="AST: "];
"1000328" -> "1000320"  [label="CFG: "];
"1000320" -> "1000865"  [label="DDG: work[i] & 0x80000000UL"];
"1000320" -> "1000319"  [label="DDG: work[i] & 0x80000000UL"];
"1000320" -> "1000319"  [label="DDG: 24"];
"1000319" -> "1000317"  [label="AST: "];
"1000319" -> "1000327"  [label="CFG: "];
"1000327" -> "1000319"  [label="AST: "];
"1000317" -> "1000319"  [label="CFG: "];
"1000319" -> "1000865"  [label="DDG: work[i]"];
"1000319" -> "1000865"  [label="DDG: (work[i] & 0x80000000UL) >> 24"];
"1000319" -> "1000317"  [label="DDG: (work[i] & 0x80000000UL) >> 24"];
"1000319" -> "1000317"  [label="DDG: work[i]"];
"1000319" -> "1000856"  [label="DDG: work[i]"];
"1000317" -> "1000309"  [label="AST: "];
"1000318" -> "1000317"  [label="AST: "];
"1000309" -> "1000317"  [label="CFG: "];
"1000317" -> "1000865"  [label="DDG: ((work[i] & 0x80000000UL) >> 24) | work[i]"];
"1000317" -> "1000309"  [label="DDG: ((work[i] & 0x80000000UL) >> 24) | work[i]"];
"1000309" -> "1000294"  [label="AST: "];
"1000310" -> "1000309"  [label="AST: "];
"1000308" -> "1000309"  [label="CFG: "];
"1000309" -> "1000865"  [label="DDG: ((unsigned char *)s->dec_table)[i]"];
"1000309" -> "1000865"  [label="DDG: (unsigned char)\n            (((work[i] & 0x80000000UL) >> 24) | work[i])"];
"1000856" -> "1000110"  [label="AST: "];
"1000856" -> "1000857"  [label="CFG: "];
"1000857" -> "1000856"  [label="AST: "];
"1000859" -> "1000856"  [label="CFG: "];
"1000856" -> "1000865"  [label="DDG: work"];
"1000714" -> "1000856"  [label="DDG: work[i+1]"];
"1000512" -> "1000856"  [label="DDG: work[i+1]"];
"1000616" -> "1000856"  [label="DDG: work[i]"];
"1000851" -> "1000856"  [label="DDG: work[i]"];
"1000609" -> "1000856"  [label="DDG: work[i+1]"];
"1000813" -> "1000856"  [label="DDG: work[i+1]"];
"1000479" -> "1000856"  [label="DDG: work[i+1]"];
"1000844" -> "1000856"  [label="DDG: work[i+1]"];
"1000578" -> "1000856"  [label="DDG: work[i+1]"];
"1000357" -> "1000856"  [label="DDG: work[i]"];
"1000747" -> "1000856"  [label="DDG: work[i+1]"];
"1000359" -> "1000358"  [label="AST: "];
"1000359" -> "1000363"  [label="CFG: "];
"1000360" -> "1000359"  [label="AST: "];
"1000363" -> "1000359"  [label="AST: "];
"1000364" -> "1000359"  [label="CFG: "];
"1000359" -> "1000358"  [label="DDG: work[i]"];
"1000359" -> "1000358"  [label="DDG: 0x80000000UL"];
"1000357" -> "1000359"  [label="DDG: work[i]"];
"1000359" -> "1000357"  [label="DDG: work[i]"];
"1000358" -> "1000357"  [label="AST: "];
"1000358" -> "1000364"  [label="CFG: "];
"1000364" -> "1000358"  [label="AST: "];
"1000366" -> "1000358"  [label="CFG: "];
"1000358" -> "1000865"  [label="DDG: work[i] & 0x80000000UL"];
"1000358" -> "1000357"  [label="DDG: work[i] & 0x80000000UL"];
"1000358" -> "1000357"  [label="DDG: 16"];
"1000357" -> "1000355"  [label="AST: "];
"1000357" -> "1000365"  [label="CFG: "];
"1000365" -> "1000357"  [label="AST: "];
"1000355" -> "1000357"  [label="CFG: "];
"1000357" -> "1000865"  [label="DDG: work[i]"];
"1000357" -> "1000865"  [label="DDG: (work[i] & 0x80000000UL) >> 16"];
"1000357" -> "1000355"  [label="DDG: (work[i] & 0x80000000UL) >> 16"];
"1000357" -> "1000355"  [label="DDG: work[i]"];
"1000355" -> "1000347"  [label="AST: "];
"1000356" -> "1000355"  [label="AST: "];
"1000347" -> "1000355"  [label="CFG: "];
"1000355" -> "1000865"  [label="DDG: ((work[i] & 0x80000000UL) >> 16) | work[i]"];
"1000355" -> "1000347"  [label="DDG: ((work[i] & 0x80000000UL) >> 16) | work[i]"];
"1000347" -> "1000332"  [label="AST: "];
"1000348" -> "1000347"  [label="AST: "];
"1000346" -> "1000347"  [label="CFG: "];
"1000347" -> "1000865"  [label="DDG: ((ogg_uint16_t *)s->dec_table)[i]"];
"1000347" -> "1000865"  [label="DDG: (ogg_uint16_t)\n            (((work[i] & 0x80000000UL) >> 16) | work[i])"];
"1000414" -> "1000413"  [label="AST: "];
"1000414" -> "1000418"  [label="CFG: "];
"1000415" -> "1000414"  [label="AST: "];
"1000418" -> "1000414"  [label="AST: "];
"1000423" -> "1000414"  [label="CFG: "];
"1000535" -> "1000414"  [label="CFG: "];
"1000414" -> "1000865"  [label="DDG: work[i]&0x80000000UL"];
"1000616" -> "1000414"  [label="DDG: work[i]"];
"1000414" -> "1000438"  [label="DDG: work[i]"];
"1000414" -> "1000497"  [label="DDG: work[i]"];
"1000414" -> "1000550"  [label="DDG: work[i]"];
"1000414" -> "1000596"  [label="DDG: work[i]"];
"1000438" -> "1000437"  [label="AST: "];
"1000438" -> "1000442"  [label="CFG: "];
"1000439" -> "1000438"  [label="AST: "];
"1000442" -> "1000438"  [label="AST: "];
"1000443" -> "1000438"  [label="CFG: "];
"1000438" -> "1000437"  [label="DDG: work[i]"];
"1000438" -> "1000437"  [label="DDG: 8"];
"1000438" -> "1000468"  [label="DDG: work[i]"];
"1000437" -> "1000436"  [label="AST: "];
"1000437" -> "1000443"  [label="CFG: "];
"1000443" -> "1000437"  [label="AST: "];
"1000444" -> "1000437"  [label="CFG: "];
"1000437" -> "1000865"  [label="DDG: work[i]>>8"];
"1000437" -> "1000436"  [label="DDG: work[i]>>8"];
"1000437" -> "1000436"  [label="DDG: 0x7f"];
"1000436" -> "1000432"  [label="AST: "];
"1000436" -> "1000444"  [label="CFG: "];
"1000444" -> "1000436"  [label="AST: "];
"1000432" -> "1000436"  [label="CFG: "];
"1000436" -> "1000865"  [label="DDG: work[i]>>8 & 0x7f"];
"1000436" -> "1000432"  [label="DDG: work[i]>>8 & 0x7f"];
"1000436" -> "1000432"  [label="DDG: 0x80"];
"1000432" -> "1000428"  [label="AST: "];
"1000433" -> "1000432"  [label="AST: "];
"1000447" -> "1000432"  [label="CFG: "];
"1000432" -> "1000865"  [label="DDG: (work[i]>>8 & 0x7f)|0x80"];
"1000432" -> "1000865"  [label="DDG: out[top]"];
"1000468" -> "1000462"  [label="AST: "];
"1000468" -> "1000472"  [label="CFG: "];
"1000469" -> "1000468"  [label="AST: "];
"1000472" -> "1000468"  [label="AST: "];
"1000462" -> "1000468"  [label="CFG: "];
"1000468" -> "1000462"  [label="DDG: work[i]"];
"1000468" -> "1000462"  [label="DDG: 0xff"];
"1000462" -> "1000428"  [label="AST: "];
"1000463" -> "1000462"  [label="AST: "];
"1000475" -> "1000462"  [label="CFG: "];
"1000462" -> "1000865"  [label="DDG: work[i] & 0xff"];
"1000462" -> "1000865"  [label="DDG: out[top+2]"];
"1000497" -> "1000496"  [label="AST: "];
"1000497" -> "1000501"  [label="CFG: "];
"1000498" -> "1000497"  [label="AST: "];
"1000501" -> "1000497"  [label="AST: "];
"1000502" -> "1000497"  [label="CFG: "];
"1000497" -> "1000496"  [label="DDG: work[i]"];
"1000497" -> "1000496"  [label="DDG: 8"];
"1000497" -> "1000525"  [label="DDG: work[i]"];
"1000496" -> "1000495"  [label="AST: "];
"1000496" -> "1000502"  [label="CFG: "];
"1000502" -> "1000496"  [label="AST: "];
"1000503" -> "1000496"  [label="CFG: "];
"1000496" -> "1000865"  [label="DDG: work[i]>>8"];
"1000496" -> "1000495"  [label="DDG: work[i]>>8"];
"1000496" -> "1000495"  [label="DDG: 0x7f"];
"1000495" -> "1000491"  [label="AST: "];
"1000495" -> "1000503"  [label="CFG: "];
"1000503" -> "1000495"  [label="AST: "];
"1000491" -> "1000495"  [label="CFG: "];
"1000495" -> "1000865"  [label="DDG: work[i]>>8 & 0x7f"];
"1000495" -> "1000491"  [label="DDG: work[i]>>8 & 0x7f"];
"1000495" -> "1000491"  [label="DDG: 0x80"];
"1000491" -> "1000487"  [label="AST: "];
"1000492" -> "1000491"  [label="AST: "];
"1000506" -> "1000491"  [label="CFG: "];
"1000491" -> "1000865"  [label="DDG: (work[i]>>8 & 0x7f)|0x80"];
"1000491" -> "1000865"  [label="DDG: out[top]"];
"1000525" -> "1000519"  [label="AST: "];
"1000525" -> "1000529"  [label="CFG: "];
"1000526" -> "1000525"  [label="AST: "];
"1000529" -> "1000525"  [label="AST: "];
"1000519" -> "1000525"  [label="CFG: "];
"1000525" -> "1000519"  [label="DDG: work[i]"];
"1000525" -> "1000519"  [label="DDG: 0xff"];
"1000519" -> "1000487"  [label="AST: "];
"1000520" -> "1000519"  [label="AST: "];
"1000618" -> "1000519"  [label="CFG: "];
"1000519" -> "1000865"  [label="DDG: work[i] & 0xff"];
"1000519" -> "1000865"  [label="DDG: out[top+2]"];
"1000550" -> "1000548"  [label="AST: "];
"1000550" -> "1000554"  [label="CFG: "];
"1000551" -> "1000550"  [label="AST: "];
"1000554" -> "1000550"  [label="AST: "];
"1000548" -> "1000550"  [label="CFG: "];
"1000596" -> "1000594"  [label="AST: "];
"1000596" -> "1000600"  [label="CFG: "];
"1000597" -> "1000596"  [label="AST: "];
"1000600" -> "1000596"  [label="AST: "];
"1000594" -> "1000596"  [label="CFG: "];
"1000421" -> "1000420"  [label="AST: "];
"1000421" -> "1000427"  [label="CFG: "];
"1000422" -> "1000421"  [label="AST: "];
"1000427" -> "1000421"  [label="AST: "];
"1000430" -> "1000421"  [label="CFG: "];
"1000489" -> "1000421"  [label="CFG: "];
"1000421" -> "1000865"  [label="DDG: work[i+1]&0x80000000UL"];
"1000578" -> "1000421"  [label="DDG: work[i+1]"];
"1000512" -> "1000421"  [label="DDG: work[i+1]"];
"1000609" -> "1000421"  [label="DDG: work[i+1]"];
"1000479" -> "1000421"  [label="DDG: work[i+1]"];
"1000421" -> "1000453"  [label="DDG: work[i+1]"];
"1000421" -> "1000512"  [label="DDG: work[i+1]"];
"1000453" -> "1000452"  [label="AST: "];
"1000453" -> "1000459"  [label="CFG: "];
"1000454" -> "1000453"  [label="AST: "];
"1000459" -> "1000453"  [label="AST: "];
"1000460" -> "1000453"  [label="CFG: "];
"1000453" -> "1000452"  [label="DDG: work[i+1]"];
"1000453" -> "1000452"  [label="DDG: 8"];
"1000453" -> "1000479"  [label="DDG: work[i+1]"];
"1000452" -> "1000451"  [label="AST: "];
"1000452" -> "1000460"  [label="CFG: "];
"1000460" -> "1000452"  [label="AST: "];
"1000461" -> "1000452"  [label="CFG: "];
"1000452" -> "1000865"  [label="DDG: work[i+1]>>8"];
"1000452" -> "1000451"  [label="DDG: work[i+1]>>8"];
"1000452" -> "1000451"  [label="DDG: 0x7f"];
"1000451" -> "1000445"  [label="AST: "];
"1000451" -> "1000461"  [label="CFG: "];
"1000461" -> "1000451"  [label="AST: "];
"1000445" -> "1000451"  [label="CFG: "];
"1000451" -> "1000865"  [label="DDG: work[i+1]>>8 & 0x7f"];
"1000451" -> "1000445"  [label="DDG: work[i+1]>>8 & 0x7f"];
"1000451" -> "1000445"  [label="DDG: 0x80"];
"1000445" -> "1000428"  [label="AST: "];
"1000446" -> "1000445"  [label="AST: "];
"1000464" -> "1000445"  [label="CFG: "];
"1000445" -> "1000865"  [label="DDG: out[top+1]"];
"1000445" -> "1000865"  [label="DDG: (work[i+1]>>8 & 0x7f)|0x80"];
"1000479" -> "1000473"  [label="AST: "];
"1000479" -> "1000485"  [label="CFG: "];
"1000480" -> "1000479"  [label="AST: "];
"1000485" -> "1000479"  [label="AST: "];
"1000473" -> "1000479"  [label="CFG: "];
"1000479" -> "1000865"  [label="DDG: work[i+1]"];
"1000479" -> "1000473"  [label="DDG: work[i+1]"];
"1000479" -> "1000473"  [label="DDG: 0xff"];
"1000479" -> "1000533"  [label="DDG: work[i+1]"];
"1000473" -> "1000428"  [label="AST: "];
"1000474" -> "1000473"  [label="AST: "];
"1000618" -> "1000473"  [label="CFG: "];
"1000473" -> "1000865"  [label="DDG: out[top+3]"];
"1000473" -> "1000865"  [label="DDG: work[i+1] & 0xff"];
"1000533" -> "1000532"  [label="AST: "];
"1000533" -> "1000539"  [label="CFG: "];
"1000534" -> "1000533"  [label="AST: "];
"1000539" -> "1000533"  [label="AST: "];
"1000542" -> "1000533"  [label="CFG: "];
"1000588" -> "1000533"  [label="CFG: "];
"1000533" -> "1000865"  [label="DDG: work[i+1]&0x80000000UL"];
"1000578" -> "1000533"  [label="DDG: work[i+1]"];
"1000512" -> "1000533"  [label="DDG: work[i+1]"];
"1000609" -> "1000533"  [label="DDG: work[i+1]"];
"1000533" -> "1000563"  [label="DDG: work[i+1]"];
"1000533" -> "1000609"  [label="DDG: work[i+1]"];
"1000563" -> "1000562"  [label="AST: "];
"1000563" -> "1000569"  [label="CFG: "];
"1000564" -> "1000563"  [label="AST: "];
"1000569" -> "1000563"  [label="AST: "];
"1000570" -> "1000563"  [label="CFG: "];
"1000563" -> "1000562"  [label="DDG: work[i+1]"];
"1000563" -> "1000562"  [label="DDG: 8"];
"1000563" -> "1000578"  [label="DDG: work[i+1]"];
"1000562" -> "1000561"  [label="AST: "];
"1000562" -> "1000570"  [label="CFG: "];
"1000570" -> "1000562"  [label="AST: "];
"1000571" -> "1000562"  [label="CFG: "];
"1000562" -> "1000865"  [label="DDG: work[i+1]>>8"];
"1000562" -> "1000561"  [label="DDG: work[i+1]>>8"];
"1000562" -> "1000561"  [label="DDG: 0x7f"];
"1000561" -> "1000555"  [label="AST: "];
"1000561" -> "1000571"  [label="CFG: "];
"1000571" -> "1000561"  [label="AST: "];
"1000555" -> "1000561"  [label="CFG: "];
"1000561" -> "1000865"  [label="DDG: work[i+1]>>8 & 0x7f"];
"1000561" -> "1000555"  [label="DDG: work[i+1]>>8 & 0x7f"];
"1000561" -> "1000555"  [label="DDG: 0x80"];
"1000555" -> "1000540"  [label="AST: "];
"1000556" -> "1000555"  [label="AST: "];
"1000574" -> "1000555"  [label="CFG: "];
"1000555" -> "1000865"  [label="DDG: out[top+1]"];
"1000555" -> "1000865"  [label="DDG: (work[i+1]>>8 & 0x7f)|0x80"];
"1000578" -> "1000572"  [label="AST: "];
"1000578" -> "1000584"  [label="CFG: "];
"1000579" -> "1000578"  [label="AST: "];
"1000584" -> "1000578"  [label="AST: "];
"1000572" -> "1000578"  [label="CFG: "];
"1000578" -> "1000865"  [label="DDG: work[i+1]"];
"1000578" -> "1000572"  [label="DDG: work[i+1]"];
"1000578" -> "1000572"  [label="DDG: 0xff"];
"1000572" -> "1000540"  [label="AST: "];
"1000573" -> "1000572"  [label="AST: "];
"1000618" -> "1000572"  [label="CFG: "];
"1000572" -> "1000865"  [label="DDG: work[i+1] & 0xff"];
"1000572" -> "1000865"  [label="DDG: out[top+2]"];
"1000609" -> "1000607"  [label="AST: "];
"1000609" -> "1000615"  [label="CFG: "];
"1000610" -> "1000609"  [label="AST: "];
"1000615" -> "1000609"  [label="AST: "];
"1000607" -> "1000609"  [label="CFG: "];
"1000609" -> "1000865"  [label="DDG: work[i+1]"];
"1000512" -> "1000510"  [label="AST: "];
"1000512" -> "1000518"  [label="CFG: "];
"1000513" -> "1000512"  [label="AST: "];
"1000518" -> "1000512"  [label="AST: "];
"1000510" -> "1000512"  [label="CFG: "];
"1000512" -> "1000865"  [label="DDG: work[i+1]"];
"1000504" -> "1000487"  [label="AST: "];
"1000504" -> "1000510"  [label="CFG: "];
"1000505" -> "1000504"  [label="AST: "];
"1000510" -> "1000504"  [label="AST: "];
"1000521" -> "1000504"  [label="CFG: "];
"1000504" -> "1000865"  [label="DDG: out[top+1]"];
"1000504" -> "1000865"  [label="DDG: work[work[i+1]*2]"];
"1000544" -> "1000540"  [label="AST: "];
"1000544" -> "1000548"  [label="CFG: "];
"1000545" -> "1000544"  [label="AST: "];
"1000548" -> "1000544"  [label="AST: "];
"1000557" -> "1000544"  [label="CFG: "];
"1000544" -> "1000865"  [label="DDG: work[work[i]*2]"];
"1000544" -> "1000865"  [label="DDG: out[top]"];
"1000590" -> "1000586"  [label="AST: "];
"1000590" -> "1000594"  [label="CFG: "];
"1000591" -> "1000590"  [label="AST: "];
"1000594" -> "1000590"  [label="AST: "];
"1000603" -> "1000590"  [label="CFG: "];
"1000590" -> "1000865"  [label="DDG: out[top]"];
"1000590" -> "1000865"  [label="DDG: work[work[i]*2]"];
"1000601" -> "1000586"  [label="AST: "];
"1000601" -> "1000607"  [label="CFG: "];
"1000602" -> "1000601"  [label="AST: "];
"1000607" -> "1000601"  [label="AST: "];
"1000618" -> "1000601"  [label="CFG: "];
"1000601" -> "1000865"  [label="DDG: work[work[i+1]*2]"];
"1000601" -> "1000865"  [label="DDG: out[top+1]"];
"1000649" -> "1000648"  [label="AST: "];
"1000649" -> "1000653"  [label="CFG: "];
"1000650" -> "1000649"  [label="AST: "];
"1000653" -> "1000649"  [label="AST: "];
"1000658" -> "1000649"  [label="CFG: "];
"1000770" -> "1000649"  [label="CFG: "];
"1000649" -> "1000865"  [label="DDG: work[i]&0x80000000UL"];
"1000851" -> "1000649"  [label="DDG: work[i]"];
"1000649" -> "1000673"  [label="DDG: work[i]"];
"1000649" -> "1000732"  [label="DDG: work[i]"];
"1000649" -> "1000785"  [label="DDG: work[i]"];
"1000649" -> "1000831"  [label="DDG: work[i]"];
"1000673" -> "1000672"  [label="AST: "];
"1000673" -> "1000677"  [label="CFG: "];
"1000674" -> "1000673"  [label="AST: "];
"1000677" -> "1000673"  [label="AST: "];
"1000678" -> "1000673"  [label="CFG: "];
"1000673" -> "1000672"  [label="DDG: work[i]"];
"1000673" -> "1000672"  [label="DDG: 16"];
"1000673" -> "1000703"  [label="DDG: work[i]"];
"1000672" -> "1000671"  [label="AST: "];
"1000672" -> "1000678"  [label="CFG: "];
"1000678" -> "1000672"  [label="AST: "];
"1000679" -> "1000672"  [label="CFG: "];
"1000672" -> "1000865"  [label="DDG: work[i]>>16"];
"1000672" -> "1000671"  [label="DDG: work[i]>>16"];
"1000672" -> "1000671"  [label="DDG: 0x7fff"];
"1000671" -> "1000667"  [label="AST: "];
"1000671" -> "1000679"  [label="CFG: "];
"1000679" -> "1000671"  [label="AST: "];
"1000667" -> "1000671"  [label="CFG: "];
"1000671" -> "1000865"  [label="DDG: work[i]>>16 & 0x7fff"];
"1000671" -> "1000667"  [label="DDG: work[i]>>16 & 0x7fff"];
"1000671" -> "1000667"  [label="DDG: 0x8000"];
"1000667" -> "1000663"  [label="AST: "];
"1000668" -> "1000667"  [label="AST: "];
"1000682" -> "1000667"  [label="CFG: "];
"1000667" -> "1000865"  [label="DDG: out[top]"];
"1000667" -> "1000865"  [label="DDG: (work[i]>>16 & 0x7fff)|0x8000"];
"1000703" -> "1000697"  [label="AST: "];
"1000703" -> "1000707"  [label="CFG: "];
"1000704" -> "1000703"  [label="AST: "];
"1000707" -> "1000703"  [label="AST: "];
"1000697" -> "1000703"  [label="CFG: "];
"1000703" -> "1000697"  [label="DDG: work[i]"];
"1000703" -> "1000697"  [label="DDG: 0xffff"];
"1000697" -> "1000663"  [label="AST: "];
"1000698" -> "1000697"  [label="AST: "];
"1000710" -> "1000697"  [label="CFG: "];
"1000697" -> "1000865"  [label="DDG: work[i] & 0xffff"];
"1000697" -> "1000865"  [label="DDG: out[top+2]"];
"1000732" -> "1000731"  [label="AST: "];
"1000732" -> "1000736"  [label="CFG: "];
"1000733" -> "1000732"  [label="AST: "];
"1000736" -> "1000732"  [label="AST: "];
"1000737" -> "1000732"  [label="CFG: "];
"1000732" -> "1000731"  [label="DDG: work[i]"];
"1000732" -> "1000731"  [label="DDG: 16"];
"1000732" -> "1000760"  [label="DDG: work[i]"];
"1000731" -> "1000730"  [label="AST: "];
"1000731" -> "1000737"  [label="CFG: "];
"1000737" -> "1000731"  [label="AST: "];
"1000738" -> "1000731"  [label="CFG: "];
"1000731" -> "1000865"  [label="DDG: work[i]>>16"];
"1000731" -> "1000730"  [label="DDG: work[i]>>16"];
"1000731" -> "1000730"  [label="DDG: 0x7fff"];
"1000730" -> "1000726"  [label="AST: "];
"1000730" -> "1000738"  [label="CFG: "];
"1000738" -> "1000730"  [label="AST: "];
"1000726" -> "1000730"  [label="CFG: "];
"1000730" -> "1000865"  [label="DDG: work[i]>>16 & 0x7fff"];
"1000730" -> "1000726"  [label="DDG: work[i]>>16 & 0x7fff"];
"1000730" -> "1000726"  [label="DDG: 0x8000"];
"1000726" -> "1000722"  [label="AST: "];
"1000727" -> "1000726"  [label="AST: "];
"1000741" -> "1000726"  [label="CFG: "];
"1000726" -> "1000865"  [label="DDG: (work[i]>>16 & 0x7fff)|0x8000"];
"1000726" -> "1000865"  [label="DDG: out[top]"];
"1000760" -> "1000754"  [label="AST: "];
"1000760" -> "1000764"  [label="CFG: "];
"1000761" -> "1000760"  [label="AST: "];
"1000764" -> "1000760"  [label="AST: "];
"1000754" -> "1000760"  [label="CFG: "];
"1000760" -> "1000754"  [label="DDG: work[i]"];
"1000760" -> "1000754"  [label="DDG: 0xffff"];
"1000754" -> "1000722"  [label="AST: "];
"1000755" -> "1000754"  [label="AST: "];
"1000853" -> "1000754"  [label="CFG: "];
"1000754" -> "1000865"  [label="DDG: work[i] & 0xffff"];
"1000754" -> "1000865"  [label="DDG: out[top+2]"];
"1000785" -> "1000783"  [label="AST: "];
"1000785" -> "1000789"  [label="CFG: "];
"1000786" -> "1000785"  [label="AST: "];
"1000789" -> "1000785"  [label="AST: "];
"1000783" -> "1000785"  [label="CFG: "];
"1000831" -> "1000829"  [label="AST: "];
"1000831" -> "1000835"  [label="CFG: "];
"1000832" -> "1000831"  [label="AST: "];
"1000835" -> "1000831"  [label="AST: "];
"1000829" -> "1000831"  [label="CFG: "];
"1000656" -> "1000655"  [label="AST: "];
"1000656" -> "1000662"  [label="CFG: "];
"1000657" -> "1000656"  [label="AST: "];
"1000662" -> "1000656"  [label="AST: "];
"1000665" -> "1000656"  [label="CFG: "];
"1000724" -> "1000656"  [label="CFG: "];
"1000656" -> "1000865"  [label="DDG: work[i+1]&0x80000000UL"];
"1000747" -> "1000656"  [label="DDG: work[i+1]"];
"1000714" -> "1000656"  [label="DDG: work[i+1]"];
"1000813" -> "1000656"  [label="DDG: work[i+1]"];
"1000844" -> "1000656"  [label="DDG: work[i+1]"];
"1000656" -> "1000688"  [label="DDG: work[i+1]"];
"1000656" -> "1000747"  [label="DDG: work[i+1]"];
"1000688" -> "1000687"  [label="AST: "];
"1000688" -> "1000694"  [label="CFG: "];
"1000689" -> "1000688"  [label="AST: "];
"1000694" -> "1000688"  [label="AST: "];
"1000695" -> "1000688"  [label="CFG: "];
"1000688" -> "1000687"  [label="DDG: work[i+1]"];
"1000688" -> "1000687"  [label="DDG: 16"];
"1000688" -> "1000714"  [label="DDG: work[i+1]"];
"1000687" -> "1000686"  [label="AST: "];
"1000687" -> "1000695"  [label="CFG: "];
"1000695" -> "1000687"  [label="AST: "];
"1000696" -> "1000687"  [label="CFG: "];
"1000687" -> "1000865"  [label="DDG: work[i+1]>>16"];
"1000687" -> "1000686"  [label="DDG: work[i+1]>>16"];
"1000687" -> "1000686"  [label="DDG: 0x7fff"];
"1000686" -> "1000680"  [label="AST: "];
"1000686" -> "1000696"  [label="CFG: "];
"1000696" -> "1000686"  [label="AST: "];
"1000680" -> "1000686"  [label="CFG: "];
"1000686" -> "1000865"  [label="DDG: work[i+1]>>16 & 0x7fff"];
"1000686" -> "1000680"  [label="DDG: work[i+1]>>16 & 0x7fff"];
"1000686" -> "1000680"  [label="DDG: 0x8000"];
"1000680" -> "1000663"  [label="AST: "];
"1000681" -> "1000680"  [label="AST: "];
"1000699" -> "1000680"  [label="CFG: "];
"1000680" -> "1000865"  [label="DDG: out[top+1]"];
"1000680" -> "1000865"  [label="DDG: (work[i+1]>>16 & 0x7fff)|0x8000"];
"1000714" -> "1000708"  [label="AST: "];
"1000714" -> "1000720"  [label="CFG: "];
"1000715" -> "1000714"  [label="AST: "];
"1000720" -> "1000714"  [label="AST: "];
"1000708" -> "1000714"  [label="CFG: "];
"1000714" -> "1000865"  [label="DDG: work[i+1]"];
"1000714" -> "1000708"  [label="DDG: work[i+1]"];
"1000714" -> "1000708"  [label="DDG: 0xffff"];
"1000714" -> "1000768"  [label="DDG: work[i+1]"];
"1000708" -> "1000663"  [label="AST: "];
"1000709" -> "1000708"  [label="AST: "];
"1000853" -> "1000708"  [label="CFG: "];
"1000708" -> "1000865"  [label="DDG: work[i+1] & 0xffff"];
"1000708" -> "1000865"  [label="DDG: out[top+3]"];
"1000768" -> "1000767"  [label="AST: "];
"1000768" -> "1000774"  [label="CFG: "];
"1000769" -> "1000768"  [label="AST: "];
"1000774" -> "1000768"  [label="AST: "];
"1000777" -> "1000768"  [label="CFG: "];
"1000823" -> "1000768"  [label="CFG: "];
"1000768" -> "1000865"  [label="DDG: work[i+1]&0x80000000UL"];
"1000747" -> "1000768"  [label="DDG: work[i+1]"];
"1000813" -> "1000768"  [label="DDG: work[i+1]"];
"1000844" -> "1000768"  [label="DDG: work[i+1]"];
"1000768" -> "1000798"  [label="DDG: work[i+1]"];
"1000768" -> "1000844"  [label="DDG: work[i+1]"];
"1000798" -> "1000797"  [label="AST: "];
"1000798" -> "1000804"  [label="CFG: "];
"1000799" -> "1000798"  [label="AST: "];
"1000804" -> "1000798"  [label="AST: "];
"1000805" -> "1000798"  [label="CFG: "];
"1000798" -> "1000797"  [label="DDG: work[i+1]"];
"1000798" -> "1000797"  [label="DDG: 16"];
"1000798" -> "1000813"  [label="DDG: work[i+1]"];
"1000797" -> "1000796"  [label="AST: "];
"1000797" -> "1000805"  [label="CFG: "];
"1000805" -> "1000797"  [label="AST: "];
"1000806" -> "1000797"  [label="CFG: "];
"1000797" -> "1000865"  [label="DDG: work[i+1]>>16"];
"1000797" -> "1000796"  [label="DDG: work[i+1]>>16"];
"1000797" -> "1000796"  [label="DDG: 0x7fff"];
"1000796" -> "1000790"  [label="AST: "];
"1000796" -> "1000806"  [label="CFG: "];
"1000806" -> "1000796"  [label="AST: "];
"1000790" -> "1000796"  [label="CFG: "];
"1000796" -> "1000865"  [label="DDG: work[i+1]>>16 & 0x7fff"];
"1000796" -> "1000790"  [label="DDG: work[i+1]>>16 & 0x7fff"];
"1000796" -> "1000790"  [label="DDG: 0x8000"];
"1000790" -> "1000775"  [label="AST: "];
"1000791" -> "1000790"  [label="AST: "];
"1000809" -> "1000790"  [label="CFG: "];
"1000790" -> "1000865"  [label="DDG: out[top+1]"];
"1000790" -> "1000865"  [label="DDG: (work[i+1]>>16 & 0x7fff)|0x8000"];
"1000813" -> "1000807"  [label="AST: "];
"1000813" -> "1000819"  [label="CFG: "];
"1000814" -> "1000813"  [label="AST: "];
"1000819" -> "1000813"  [label="AST: "];
"1000807" -> "1000813"  [label="CFG: "];
"1000813" -> "1000865"  [label="DDG: work[i+1]"];
"1000813" -> "1000807"  [label="DDG: work[i+1]"];
"1000813" -> "1000807"  [label="DDG: 0xffff"];
"1000807" -> "1000775"  [label="AST: "];
"1000808" -> "1000807"  [label="AST: "];
"1000853" -> "1000807"  [label="CFG: "];
"1000807" -> "1000865"  [label="DDG: out[top+2]"];
"1000807" -> "1000865"  [label="DDG: work[i+1] & 0xffff"];
"1000844" -> "1000842"  [label="AST: "];
"1000844" -> "1000850"  [label="CFG: "];
"1000845" -> "1000844"  [label="AST: "];
"1000850" -> "1000844"  [label="AST: "];
"1000842" -> "1000844"  [label="CFG: "];
"1000844" -> "1000865"  [label="DDG: work[i+1]"];
"1000747" -> "1000745"  [label="AST: "];
"1000747" -> "1000753"  [label="CFG: "];
"1000748" -> "1000747"  [label="AST: "];
"1000753" -> "1000747"  [label="AST: "];
"1000745" -> "1000747"  [label="CFG: "];
"1000747" -> "1000865"  [label="DDG: work[i+1]"];
"1000739" -> "1000722"  [label="AST: "];
"1000739" -> "1000745"  [label="CFG: "];
"1000740" -> "1000739"  [label="AST: "];
"1000745" -> "1000739"  [label="AST: "];
"1000756" -> "1000739"  [label="CFG: "];
"1000739" -> "1000865"  [label="DDG: work[work[i+1]*2]"];
"1000739" -> "1000865"  [label="DDG: out[top+1]"];
"1000779" -> "1000775"  [label="AST: "];
"1000779" -> "1000783"  [label="CFG: "];
"1000780" -> "1000779"  [label="AST: "];
"1000783" -> "1000779"  [label="AST: "];
"1000792" -> "1000779"  [label="CFG: "];
"1000779" -> "1000865"  [label="DDG: out[top]"];
"1000779" -> "1000865"  [label="DDG: work[work[i]*2]"];
"1000825" -> "1000821"  [label="AST: "];
"1000825" -> "1000829"  [label="CFG: "];
"1000826" -> "1000825"  [label="AST: "];
"1000829" -> "1000825"  [label="AST: "];
"1000838" -> "1000825"  [label="CFG: "];
"1000825" -> "1000865"  [label="DDG: work[work[i]*2]"];
"1000825" -> "1000865"  [label="DDG: out[top]"];
"1000836" -> "1000821"  [label="AST: "];
"1000836" -> "1000842"  [label="CFG: "];
"1000837" -> "1000836"  [label="AST: "];
"1000842" -> "1000836"  [label="AST: "];
"1000853" -> "1000836"  [label="CFG: "];
"1000836" -> "1000865"  [label="DDG: work[work[i+1]*2]"];
"1000836" -> "1000865"  [label="DDG: out[top+1]"];
"1000861" -> "1000110"  [label="AST: "];
"1000861" -> "1000862"  [label="CFG: "];
"1000862" -> "1000861"  [label="AST: "];
"1000864" -> "1000861"  [label="CFG: "];
"1000861" -> "1000865"  [label="DDG: work"];
}
