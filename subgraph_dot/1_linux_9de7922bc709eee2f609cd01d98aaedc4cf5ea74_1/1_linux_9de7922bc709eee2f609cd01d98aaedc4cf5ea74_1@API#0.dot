digraph "1_linux_9de7922bc709eee2f609cd01d98aaedc4cf5ea74_1@API" {
"1000217" [label="(Call,length < sizeof(sctp_paramhdr_t))"];
"1000208" [label="(Call,length = ntohs(addr_param->p.length))"];
"1000210" [label="(Call,ntohs(addr_param->p.length))"];
"1000236" [label="(Call,(sctp_paramhdr_t *)((void *)addr_param + length))"];
"1000234" [label="(Call,sctp_verify_asconf(asoc,\n\t\t\t    (sctp_paramhdr_t *)((void *)addr_param + length),\n\t\t\t    (void *)chunk->chunk_end,\n\t\t\t    &err_param))"];
"1000233" [label="(Call,!sctp_verify_asconf(asoc,\n\t\t\t    (sctp_paramhdr_t *)((void *)addr_param + length),\n\t\t\t    (void *)chunk->chunk_end,\n\t\t\t    &err_param))"];
"1000251" [label="(Call,sctp_sf_violation_paramlen(net, ep, asoc, type, arg,\n \t\t\t\t\t\t  (void *)err_param, commands))"];
"1000250" [label="(Return,return sctp_sf_violation_paramlen(net, ep, asoc, type, arg,\n \t\t\t\t\t\t  (void *)err_param, commands);)"];
"1000277" [label="(Call,sctp_assoc_clean_asconf_ack_cache(asoc))"];
"1000282" [label="(Call,(struct sctp_association *)\n\t\t\t\t\t\t asoc)"];
"1000281" [label="(Call,sctp_process_asconf((struct sctp_association *)\n\t\t\t\t\t\t asoc, chunk))"];
"1000279" [label="(Call,asconf_ack = sctp_process_asconf((struct sctp_association *)\n\t\t\t\t\t\t asoc, chunk))"];
"1000287" [label="(Call,!asconf_ack)"];
"1000334" [label="(Call,SCTP_CHUNK(asconf_ack))"];
"1000331" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_REPLY, SCTP_CHUNK(asconf_ack)))"];
"1000341" [label="(Call,sctp_sf_heartbeat(ep, asoc, type, asoc->new_transport, commands))"];
"1000351" [label="(Call,(struct sctp_association *)asoc)"];
"1000305" [label="(Call,sctp_assoc_lookup_asconf_ack(asoc, hdr->serial))"];
"1000303" [label="(Call,asconf_ack = sctp_assoc_lookup_asconf_ack(asoc, hdr->serial))"];
"1000311" [label="(Call,!asconf_ack)"];
"1000238" [label="(Call,(void *)addr_param + length)"];
"1000351" [label="(Call,(struct sctp_association *)asoc)"];
"1000307" [label="(Call,hdr->serial)"];
"1000287" [label="(Call,!asconf_ack)"];
"1000277" [label="(Call,sctp_assoc_clean_asconf_ack_cache(asoc))"];
"1000353" [label="(Identifier,asoc)"];
"1000233" [label="(Call,!sctp_verify_asconf(asoc,\n\t\t\t    (sctp_paramhdr_t *)((void *)addr_param + length),\n\t\t\t    (void *)chunk->chunk_end,\n\t\t\t    &err_param))"];
"1000254" [label="(Identifier,asoc)"];
"1000302" [label="(Block,)"];
"1000243" [label="(Call,(void *)chunk->chunk_end)"];
"1000210" [label="(Call,ntohs(addr_param->p.length))"];
"1000218" [label="(Identifier,length)"];
"1000223" [label="(Identifier,net)"];
"1000242" [label="(Identifier,length)"];
"1000272" [label="(ControlStructure,if (!chunk->has_asconf))"];
"1000255" [label="(Identifier,type)"];
"1000335" [label="(Identifier,asconf_ack)"];
"1000260" [label="(Identifier,commands)"];
"1000341" [label="(Call,sctp_sf_heartbeat(ep, asoc, type, asoc->new_transport, commands))"];
"1000338" [label="(Identifier,asoc)"];
"1000354" [label="(FieldIdentifier,new_transport)"];
"1000326" [label="(Identifier,asconf_ack)"];
"1000314" [label="(Identifier,SCTP_DISPOSITION_DISCARD)"];
"1000348" [label="(Identifier,commands)"];
"1000117" [label="(Block,)"];
"1000251" [label="(Call,sctp_sf_violation_paramlen(net, ep, asoc, type, arg,\n \t\t\t\t\t\t  (void *)err_param, commands))"];
"1000281" [label="(Call,sctp_process_asconf((struct sctp_association *)\n\t\t\t\t\t\t asoc, chunk))"];
"1000217" [label="(Call,length < sizeof(sctp_paramhdr_t))"];
"1000174" [label="(Call,sctp_chunk_length_valid(chunk, sizeof(sctp_addip_chunk_t)))"];
"1000248" [label="(Call,&err_param)"];
"1000234" [label="(Call,sctp_verify_asconf(asoc,\n\t\t\t    (sctp_paramhdr_t *)((void *)addr_param + length),\n\t\t\t    (void *)chunk->chunk_end,\n\t\t\t    &err_param))"];
"1000288" [label="(Identifier,asconf_ack)"];
"1000306" [label="(Identifier,asoc)"];
"1000342" [label="(Identifier,ep)"];
"1000311" [label="(Call,!asconf_ack)"];
"1000304" [label="(Identifier,asconf_ack)"];
"1000284" [label="(Identifier,asoc)"];
"1000115" [label="(MethodParameterIn,void *arg)"];
"1000286" [label="(ControlStructure,if (!asconf_ack))"];
"1000331" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_REPLY, SCTP_CHUNK(asconf_ack)))"];
"1000113" [label="(MethodParameterIn,const struct sctp_association *asoc)"];
"1000236" [label="(Call,(sctp_paramhdr_t *)((void *)addr_param + length))"];
"1000280" [label="(Identifier,asconf_ack)"];
"1000235" [label="(Identifier,asoc)"];
"1000290" [label="(Identifier,SCTP_DISPOSITION_NOMEM)"];
"1000334" [label="(Call,SCTP_CHUNK(asconf_ack))"];
"1000252" [label="(Identifier,net)"];
"1000305" [label="(Call,sctp_assoc_lookup_asconf_ack(asoc, hdr->serial))"];
"1000303" [label="(Call,asconf_ack = sctp_assoc_lookup_asconf_ack(asoc, hdr->serial))"];
"1000219" [label="(Call,sizeof(sctp_paramhdr_t))"];
"1000340" [label="(Block,)"];
"1000332" [label="(Identifier,commands)"];
"1000112" [label="(MethodParameterIn,const struct sctp_endpoint *ep)"];
"1000257" [label="(Call,(void *)err_param)"];
"1000343" [label="(Identifier,asoc)"];
"1000278" [label="(Identifier,asoc)"];
"1000279" [label="(Call,asconf_ack = sctp_process_asconf((struct sctp_association *)\n\t\t\t\t\t\t asoc, chunk))"];
"1000256" [label="(Identifier,arg)"];
"1000271" [label="(Block,)"];
"1000111" [label="(MethodParameterIn,struct net *net)"];
"1000209" [label="(Identifier,length)"];
"1000285" [label="(Identifier,chunk)"];
"1000312" [label="(Identifier,asconf_ack)"];
"1000238" [label="(Call,(void *)addr_param + length)"];
"1000250" [label="(Return,return sctp_sf_violation_paramlen(net, ep, asoc, type, arg,\n \t\t\t\t\t\t  (void *)err_param, commands);)"];
"1000211" [label="(Call,addr_param->p.length)"];
"1000253" [label="(Identifier,ep)"];
"1000208" [label="(Call,length = ntohs(addr_param->p.length))"];
"1000317" [label="(Identifier,asconf_ack)"];
"1000197" [label="(Call,ntohl(hdr->serial))"];
"1000232" [label="(ControlStructure,if (!sctp_verify_asconf(asoc,\n\t\t\t    (sctp_paramhdr_t *)((void *)addr_param + length),\n\t\t\t    (void *)chunk->chunk_end,\n\t\t\t    &err_param)))"];
"1000282" [label="(Call,(struct sctp_association *)\n\t\t\t\t\t\t asoc)"];
"1000216" [label="(ControlStructure,if (length < sizeof(sctp_paramhdr_t)))"];
"1000114" [label="(MethodParameterIn,const sctp_subtype_t type)"];
"1000358" [label="(MethodReturn,sctp_disposition_t)"];
"1000136" [label="(Call,sctp_vtag_verify(chunk, asoc))"];
"1000310" [label="(ControlStructure,if (!asconf_ack))"];
"1000350" [label="(Call,((struct sctp_association *)asoc)->new_transport)"];
"1000345" [label="(Call,asoc->new_transport)"];
"1000116" [label="(MethodParameterIn,sctp_cmd_seq_t *commands)"];
"1000263" [label="(Identifier,serial)"];
"1000333" [label="(Identifier,SCTP_CMD_REPLY)"];
"1000344" [label="(Identifier,type)"];
"1000239" [label="(Call,(void *)addr_param)"];
"1000217" -> "1000216"  [label="AST: "];
"1000217" -> "1000219"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000219" -> "1000217"  [label="AST: "];
"1000223" -> "1000217"  [label="CFG: "];
"1000235" -> "1000217"  [label="CFG: "];
"1000217" -> "1000358"  [label="DDG: length < sizeof(sctp_paramhdr_t)"];
"1000217" -> "1000358"  [label="DDG: length"];
"1000208" -> "1000217"  [label="DDG: length"];
"1000217" -> "1000236"  [label="DDG: length"];
"1000217" -> "1000238"  [label="DDG: length"];
"1000208" -> "1000117"  [label="AST: "];
"1000208" -> "1000210"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000210" -> "1000208"  [label="AST: "];
"1000218" -> "1000208"  [label="CFG: "];
"1000208" -> "1000358"  [label="DDG: ntohs(addr_param->p.length)"];
"1000210" -> "1000208"  [label="DDG: addr_param->p.length"];
"1000210" -> "1000211"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000210" -> "1000358"  [label="DDG: addr_param->p.length"];
"1000236" -> "1000234"  [label="AST: "];
"1000236" -> "1000238"  [label="CFG: "];
"1000237" -> "1000236"  [label="AST: "];
"1000238" -> "1000236"  [label="AST: "];
"1000244" -> "1000236"  [label="CFG: "];
"1000236" -> "1000358"  [label="DDG: (void *)addr_param + length"];
"1000236" -> "1000234"  [label="DDG: (void *)addr_param + length"];
"1000239" -> "1000236"  [label="DDG: addr_param"];
"1000234" -> "1000233"  [label="AST: "];
"1000234" -> "1000248"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000243" -> "1000234"  [label="AST: "];
"1000248" -> "1000234"  [label="AST: "];
"1000233" -> "1000234"  [label="CFG: "];
"1000234" -> "1000358"  [label="DDG: &err_param"];
"1000234" -> "1000358"  [label="DDG: (sctp_paramhdr_t *)((void *)addr_param + length)"];
"1000234" -> "1000358"  [label="DDG: asoc"];
"1000234" -> "1000358"  [label="DDG: (void *)chunk->chunk_end"];
"1000234" -> "1000233"  [label="DDG: asoc"];
"1000234" -> "1000233"  [label="DDG: (sctp_paramhdr_t *)((void *)addr_param + length)"];
"1000234" -> "1000233"  [label="DDG: (void *)chunk->chunk_end"];
"1000234" -> "1000233"  [label="DDG: &err_param"];
"1000136" -> "1000234"  [label="DDG: asoc"];
"1000113" -> "1000234"  [label="DDG: asoc"];
"1000243" -> "1000234"  [label="DDG: chunk->chunk_end"];
"1000234" -> "1000251"  [label="DDG: asoc"];
"1000234" -> "1000277"  [label="DDG: asoc"];
"1000234" -> "1000282"  [label="DDG: asoc"];
"1000234" -> "1000305"  [label="DDG: asoc"];
"1000233" -> "1000232"  [label="AST: "];
"1000252" -> "1000233"  [label="CFG: "];
"1000263" -> "1000233"  [label="CFG: "];
"1000233" -> "1000358"  [label="DDG: !sctp_verify_asconf(asoc,\n\t\t\t    (sctp_paramhdr_t *)((void *)addr_param + length),\n\t\t\t    (void *)chunk->chunk_end,\n\t\t\t    &err_param)"];
"1000233" -> "1000358"  [label="DDG: sctp_verify_asconf(asoc,\n\t\t\t    (sctp_paramhdr_t *)((void *)addr_param + length),\n\t\t\t    (void *)chunk->chunk_end,\n\t\t\t    &err_param)"];
"1000251" -> "1000250"  [label="AST: "];
"1000251" -> "1000260"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="AST: "];
"1000254" -> "1000251"  [label="AST: "];
"1000255" -> "1000251"  [label="AST: "];
"1000256" -> "1000251"  [label="AST: "];
"1000257" -> "1000251"  [label="AST: "];
"1000260" -> "1000251"  [label="AST: "];
"1000250" -> "1000251"  [label="CFG: "];
"1000251" -> "1000358"  [label="DDG: commands"];
"1000251" -> "1000358"  [label="DDG: sctp_sf_violation_paramlen(net, ep, asoc, type, arg,\n \t\t\t\t\t\t  (void *)err_param, commands)"];
"1000251" -> "1000358"  [label="DDG: ep"];
"1000251" -> "1000358"  [label="DDG: type"];
"1000251" -> "1000358"  [label="DDG: asoc"];
"1000251" -> "1000358"  [label="DDG: net"];
"1000251" -> "1000358"  [label="DDG: (void *)err_param"];
"1000251" -> "1000358"  [label="DDG: arg"];
"1000251" -> "1000250"  [label="DDG: sctp_sf_violation_paramlen(net, ep, asoc, type, arg,\n \t\t\t\t\t\t  (void *)err_param, commands)"];
"1000111" -> "1000251"  [label="DDG: net"];
"1000112" -> "1000251"  [label="DDG: ep"];
"1000113" -> "1000251"  [label="DDG: asoc"];
"1000114" -> "1000251"  [label="DDG: type"];
"1000115" -> "1000251"  [label="DDG: arg"];
"1000257" -> "1000251"  [label="DDG: err_param"];
"1000116" -> "1000251"  [label="DDG: commands"];
"1000250" -> "1000232"  [label="AST: "];
"1000358" -> "1000250"  [label="CFG: "];
"1000250" -> "1000358"  [label="DDG: <RET>"];
"1000277" -> "1000272"  [label="AST: "];
"1000277" -> "1000278"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000280" -> "1000277"  [label="CFG: "];
"1000277" -> "1000358"  [label="DDG: sctp_assoc_clean_asconf_ack_cache(asoc)"];
"1000113" -> "1000277"  [label="DDG: asoc"];
"1000277" -> "1000282"  [label="DDG: asoc"];
"1000282" -> "1000281"  [label="AST: "];
"1000282" -> "1000284"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000284" -> "1000282"  [label="AST: "];
"1000285" -> "1000282"  [label="CFG: "];
"1000282" -> "1000358"  [label="DDG: asoc"];
"1000282" -> "1000281"  [label="DDG: asoc"];
"1000113" -> "1000282"  [label="DDG: asoc"];
"1000282" -> "1000341"  [label="DDG: asoc"];
"1000281" -> "1000279"  [label="AST: "];
"1000281" -> "1000285"  [label="CFG: "];
"1000285" -> "1000281"  [label="AST: "];
"1000279" -> "1000281"  [label="CFG: "];
"1000281" -> "1000358"  [label="DDG: chunk"];
"1000281" -> "1000358"  [label="DDG: (struct sctp_association *)\n\t\t\t\t\t\t asoc"];
"1000281" -> "1000279"  [label="DDG: (struct sctp_association *)\n\t\t\t\t\t\t asoc"];
"1000281" -> "1000279"  [label="DDG: chunk"];
"1000174" -> "1000281"  [label="DDG: chunk"];
"1000279" -> "1000271"  [label="AST: "];
"1000280" -> "1000279"  [label="AST: "];
"1000288" -> "1000279"  [label="CFG: "];
"1000279" -> "1000358"  [label="DDG: sctp_process_asconf((struct sctp_association *)\n\t\t\t\t\t\t asoc, chunk)"];
"1000279" -> "1000287"  [label="DDG: asconf_ack"];
"1000287" -> "1000286"  [label="AST: "];
"1000287" -> "1000288"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000290" -> "1000287"  [label="CFG: "];
"1000326" -> "1000287"  [label="CFG: "];
"1000287" -> "1000358"  [label="DDG: !asconf_ack"];
"1000287" -> "1000358"  [label="DDG: asconf_ack"];
"1000287" -> "1000334"  [label="DDG: asconf_ack"];
"1000334" -> "1000331"  [label="AST: "];
"1000334" -> "1000335"  [label="CFG: "];
"1000335" -> "1000334"  [label="AST: "];
"1000331" -> "1000334"  [label="CFG: "];
"1000334" -> "1000358"  [label="DDG: asconf_ack"];
"1000334" -> "1000331"  [label="DDG: asconf_ack"];
"1000311" -> "1000334"  [label="DDG: asconf_ack"];
"1000331" -> "1000117"  [label="AST: "];
"1000332" -> "1000331"  [label="AST: "];
"1000333" -> "1000331"  [label="AST: "];
"1000338" -> "1000331"  [label="CFG: "];
"1000331" -> "1000358"  [label="DDG: SCTP_CHUNK(asconf_ack)"];
"1000331" -> "1000358"  [label="DDG: sctp_add_cmd_sf(commands, SCTP_CMD_REPLY, SCTP_CHUNK(asconf_ack))"];
"1000331" -> "1000358"  [label="DDG: SCTP_CMD_REPLY"];
"1000331" -> "1000358"  [label="DDG: commands"];
"1000116" -> "1000331"  [label="DDG: commands"];
"1000331" -> "1000341"  [label="DDG: commands"];
"1000341" -> "1000340"  [label="AST: "];
"1000341" -> "1000348"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="AST: "];
"1000344" -> "1000341"  [label="AST: "];
"1000345" -> "1000341"  [label="AST: "];
"1000348" -> "1000341"  [label="AST: "];
"1000352" -> "1000341"  [label="CFG: "];
"1000341" -> "1000358"  [label="DDG: type"];
"1000341" -> "1000358"  [label="DDG: commands"];
"1000341" -> "1000358"  [label="DDG: ep"];
"1000341" -> "1000358"  [label="DDG: asoc->new_transport"];
"1000341" -> "1000358"  [label="DDG: sctp_sf_heartbeat(ep, asoc, type, asoc->new_transport, commands)"];
"1000112" -> "1000341"  [label="DDG: ep"];
"1000305" -> "1000341"  [label="DDG: asoc"];
"1000113" -> "1000341"  [label="DDG: asoc"];
"1000114" -> "1000341"  [label="DDG: type"];
"1000116" -> "1000341"  [label="DDG: commands"];
"1000341" -> "1000351"  [label="DDG: asoc"];
"1000351" -> "1000350"  [label="AST: "];
"1000351" -> "1000353"  [label="CFG: "];
"1000352" -> "1000351"  [label="AST: "];
"1000353" -> "1000351"  [label="AST: "];
"1000354" -> "1000351"  [label="CFG: "];
"1000351" -> "1000358"  [label="DDG: asoc"];
"1000113" -> "1000351"  [label="DDG: asoc"];
"1000305" -> "1000303"  [label="AST: "];
"1000305" -> "1000307"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000307" -> "1000305"  [label="AST: "];
"1000303" -> "1000305"  [label="CFG: "];
"1000305" -> "1000358"  [label="DDG: hdr->serial"];
"1000305" -> "1000358"  [label="DDG: asoc"];
"1000305" -> "1000303"  [label="DDG: asoc"];
"1000305" -> "1000303"  [label="DDG: hdr->serial"];
"1000113" -> "1000305"  [label="DDG: asoc"];
"1000197" -> "1000305"  [label="DDG: hdr->serial"];
"1000303" -> "1000302"  [label="AST: "];
"1000304" -> "1000303"  [label="AST: "];
"1000312" -> "1000303"  [label="CFG: "];
"1000303" -> "1000358"  [label="DDG: sctp_assoc_lookup_asconf_ack(asoc, hdr->serial)"];
"1000303" -> "1000311"  [label="DDG: asconf_ack"];
"1000311" -> "1000310"  [label="AST: "];
"1000311" -> "1000312"  [label="CFG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000314" -> "1000311"  [label="CFG: "];
"1000317" -> "1000311"  [label="CFG: "];
"1000311" -> "1000358"  [label="DDG: asconf_ack"];
"1000311" -> "1000358"  [label="DDG: !asconf_ack"];
"1000238" -> "1000242"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000242" -> "1000238"  [label="AST: "];
"1000238" -> "1000358"  [label="DDG: (void *)addr_param"];
"1000238" -> "1000358"  [label="DDG: length"];
"1000239" -> "1000238"  [label="DDG: addr_param"];
}
