digraph "1_Android_28a566f7731b4cb76d2a9ba16d997ac5aeb07dad@pointer" {
"1000302" [label="(Call,* addr = mmap64(next, (end-start)*blksize, PROT_READ, MAP_PRIVATE | MAP_FIXED, fd, ((off64_t)start)*blksize))"];
"1000304" [label="(Call,mmap64(next, (end-start)*blksize, PROT_READ, MAP_PRIVATE | MAP_FIXED, fd, ((off64_t)start)*blksize))"];
"1000356" [label="(Call,next += pMap->ranges[i].length)"];
"1000343" [label="(Call,pMap->ranges[i].length = (end-start)*blksize)"];
"1000351" [label="(Call,(end-start)*blksize)"];
"1000352" [label="(Call,end-start)"];
"1000307" [label="(Call,end-start)"];
"1000317" [label="(Call,(off64_t)start)"];
"1000316" [label="(Call,((off64_t)start)*blksize)"];
"1000306" [label="(Call,(end-start)*blksize)"];
"1000246" [label="(Call,blocks * blksize)"];
"1000203" [label="(Call,blocks * blksize)"];
"1000166" [label="(Call,blocks = ((size-1) / blksize) + 1)"];
"1000169" [label="(Call,(size-1) / blksize)"];
"1000170" [label="(Call,size-1)"];
"1000269" [label="(Call,* next = reserve)"];
"1000214" [label="(Call,reserve == MAP_FAILED)"];
"1000199" [label="(Call,reserve = mmap64(NULL, blocks * blksize, PROT_NONE, MAP_PRIVATE | MAP_ANON, -1, 0))"];
"1000201" [label="(Call,mmap64(NULL, blocks * blksize, PROT_NONE, MAP_PRIVATE | MAP_ANON, -1, 0))"];
"1000111" [label="(Call,fgets(block_dev, sizeof(block_dev), mapf) == NULL)"];
"1000112" [label="(Call,fgets(block_dev, sizeof(block_dev), mapf))"];
"1000101" [label="(MethodParameterIn,FILE* mapf)"];
"1000207" [label="(Call,MAP_PRIVATE | MAP_ANON)"];
"1000210" [label="(Call,-1)"];
"1000312" [label="(Call,MAP_PRIVATE | MAP_FIXED)"];
"1000256" [label="(Call,fd < 0)"];
"1000250" [label="(Call,fd = open(block_dev, O_RDONLY))"];
"1000252" [label="(Call,open(block_dev, O_RDONLY))"];
"1000142" [label="(Call,block_dev[i] = 0)"];
"1000136" [label="(Call,block_dev[i] == '\n')"];
"1000322" [label="(Call,addr == MAP_FAILED)"];
"1000334" [label="(Call,pMap->ranges[i].addr = addr)"];
"1000166" [label="(Call,blocks = ((size-1) / blksize) + 1)"];
"1000219" [label="(Literal,\"failed to reserve address space: %s\n\")"];
"1000321" [label="(ControlStructure,if (addr == MAP_FAILED))"];
"1000203" [label="(Call,blocks * blksize)"];
"1000248" [label="(Identifier,blksize)"];
"1000343" [label="(Call,pMap->ranges[i].length = (end-start)*blksize)"];
"1000168" [label="(Call,((size-1) / blksize) + 1)"];
"1000246" [label="(Call,blocks * blksize)"];
"1000214" [label="(Call,reserve == MAP_FAILED)"];
"1000112" [label="(Call,fgets(block_dev, sizeof(block_dev), mapf))"];
"1000304" [label="(Call,mmap64(next, (end-start)*blksize, PROT_READ, MAP_PRIVATE | MAP_FIXED, fd, ((off64_t)start)*blksize))"];
"1000113" [label="(Identifier,block_dev)"];
"1000380" [label="(MethodReturn,static int)"];
"1000126" [label="(Identifier,i)"];
"1000356" [label="(Call,next += pMap->ranges[i].length)"];
"1000135" [label="(ControlStructure,if (block_dev[i] == '\n'))"];
"1000169" [label="(Call,(size-1) / blksize)"];
"1000170" [label="(Call,size-1)"];
"1000313" [label="(Identifier,MAP_PRIVATE)"];
"1000311" [label="(Identifier,PROT_READ)"];
"1000351" [label="(Call,(end-start)*blksize)"];
"1000209" [label="(Identifier,MAP_ANON)"];
"1000323" [label="(Identifier,addr)"];
"1000103" [label="(Block,)"];
"1000252" [label="(Call,open(block_dev, O_RDONLY))"];
"1000167" [label="(Identifier,blocks)"];
"1000141" [label="(Block,)"];
"1000353" [label="(Identifier,end)"];
"1000307" [label="(Call,end-start)"];
"1000260" [label="(Call,LOGW(\"failed to open block device %s: %s\n\", block_dev, strerror(errno)))"];
"1000370" [label="(Call,pMap->length = size)"];
"1000308" [label="(Identifier,end)"];
"1000320" [label="(Identifier,blksize)"];
"1000315" [label="(Identifier,fd)"];
"1000177" [label="(Identifier,pMap)"];
"1000212" [label="(Literal,0)"];
"1000322" [label="(Call,addr == MAP_FAILED)"];
"1000146" [label="(Literal,0)"];
"1000251" [label="(Identifier,fd)"];
"1000208" [label="(Identifier,MAP_PRIVATE)"];
"1000111" [label="(Call,fgets(block_dev, sizeof(block_dev), mapf) == NULL)"];
"1000140" [label="(Literal,'\n')"];
"1000261" [label="(Literal,\"failed to open block device %s: %s\n\")"];
"1000171" [label="(Identifier,size)"];
"1000172" [label="(Literal,1)"];
"1000207" [label="(Call,MAP_PRIVATE | MAP_ANON)"];
"1000200" [label="(Identifier,reserve)"];
"1000114" [label="(Call,sizeof(block_dev))"];
"1000257" [label="(Identifier,fd)"];
"1000256" [label="(Call,fd < 0)"];
"1000205" [label="(Identifier,blksize)"];
"1000143" [label="(Call,block_dev[i])"];
"1000136" [label="(Call,block_dev[i] == '\n')"];
"1000120" [label="(Literal,\"failed to read block device from header\n\")"];
"1000352" [label="(Call,end-start)"];
"1000116" [label="(Identifier,mapf)"];
"1000302" [label="(Call,* addr = mmap64(next, (end-start)*blksize, PROT_READ, MAP_PRIVATE | MAP_FIXED, fd, ((off64_t)start)*blksize))"];
"1000365" [label="(Call,pMap->addr = reserve)"];
"1000327" [label="(Literal,\"failed to map block %d: %s\n\")"];
"1000110" [label="(ControlStructure,if (fgets(block_dev, sizeof(block_dev), mapf) == NULL))"];
"1000206" [label="(Identifier,PROT_NONE)"];
"1000210" [label="(Call,-1)"];
"1000354" [label="(Identifier,start)"];
"1000142" [label="(Call,block_dev[i] = 0)"];
"1000335" [label="(Call,pMap->ranges[i].addr)"];
"1000309" [label="(Identifier,start)"];
"1000137" [label="(Call,block_dev[i])"];
"1000305" [label="(Identifier,next)"];
"1000258" [label="(Literal,0)"];
"1000324" [label="(Identifier,MAP_FAILED)"];
"1000150" [label="(Call,fscanf(mapf, \"%zu %u\n%u\n\", &size, &blksize, &range_count))"];
"1000270" [label="(Identifier,next)"];
"1000271" [label="(Identifier,reserve)"];
"1000342" [label="(Identifier,addr)"];
"1000201" [label="(Call,mmap64(NULL, blocks * blksize, PROT_NONE, MAP_PRIVATE | MAP_ANON, -1, 0))"];
"1000101" [label="(MethodParameterIn,FILE* mapf)"];
"1000199" [label="(Call,reserve = mmap64(NULL, blocks * blksize, PROT_NONE, MAP_PRIVATE | MAP_ANON, -1, 0))"];
"1000338" [label="(Identifier,pMap)"];
"1000204" [label="(Identifier,blocks)"];
"1000236" [label="(Call,pMap->ranges[range_count-1].length = blocks * blksize)"];
"1000344" [label="(Call,pMap->ranges[i].length)"];
"1000174" [label="(Literal,1)"];
"1000316" [label="(Call,((off64_t)start)*blksize)"];
"1000215" [label="(Identifier,reserve)"];
"1000225" [label="(Call,pMap->ranges[range_count-1].addr = reserve)"];
"1000317" [label="(Call,(off64_t)start)"];
"1000357" [label="(Identifier,next)"];
"1000355" [label="(Identifier,blksize)"];
"1000312" [label="(Call,MAP_PRIVATE | MAP_FIXED)"];
"1000147" [label="(ControlStructure,break;)"];
"1000117" [label="(Identifier,NULL)"];
"1000280" [label="(Identifier,i)"];
"1000306" [label="(Call,(end-start)*blksize)"];
"1000211" [label="(Literal,1)"];
"1000347" [label="(Identifier,pMap)"];
"1000144" [label="(Identifier,block_dev)"];
"1000202" [label="(Identifier,NULL)"];
"1000173" [label="(Identifier,blksize)"];
"1000213" [label="(ControlStructure,if (reserve == MAP_FAILED))"];
"1000229" [label="(Identifier,pMap)"];
"1000254" [label="(Identifier,O_RDONLY)"];
"1000216" [label="(Identifier,MAP_FAILED)"];
"1000253" [label="(Identifier,block_dev)"];
"1000303" [label="(Identifier,addr)"];
"1000310" [label="(Identifier,blksize)"];
"1000334" [label="(Call,pMap->ranges[i].addr = addr)"];
"1000255" [label="(ControlStructure,if (fd < 0))"];
"1000314" [label="(Identifier,MAP_FIXED)"];
"1000269" [label="(Call,* next = reserve)"];
"1000274" [label="(Identifier,i)"];
"1000133" [label="(Identifier,i)"];
"1000358" [label="(Call,pMap->ranges[i].length)"];
"1000250" [label="(Call,fd = open(block_dev, O_RDONLY))"];
"1000281" [label="(Block,)"];
"1000247" [label="(Identifier,blocks)"];
"1000286" [label="(Call,fscanf(mapf, \"%d %d\n\", &start, &end))"];
"1000319" [label="(Identifier,start)"];
"1000302" -> "1000281"  [label="AST: "];
"1000302" -> "1000304"  [label="CFG: "];
"1000303" -> "1000302"  [label="AST: "];
"1000304" -> "1000302"  [label="AST: "];
"1000323" -> "1000302"  [label="CFG: "];
"1000302" -> "1000380"  [label="DDG: mmap64(next, (end-start)*blksize, PROT_READ, MAP_PRIVATE | MAP_FIXED, fd, ((off64_t)start)*blksize)"];
"1000304" -> "1000302"  [label="DDG: MAP_PRIVATE | MAP_FIXED"];
"1000304" -> "1000302"  [label="DDG: PROT_READ"];
"1000304" -> "1000302"  [label="DDG: (end-start)*blksize"];
"1000304" -> "1000302"  [label="DDG: next"];
"1000304" -> "1000302"  [label="DDG: ((off64_t)start)*blksize"];
"1000304" -> "1000302"  [label="DDG: fd"];
"1000302" -> "1000322"  [label="DDG: addr"];
"1000304" -> "1000316"  [label="CFG: "];
"1000305" -> "1000304"  [label="AST: "];
"1000306" -> "1000304"  [label="AST: "];
"1000311" -> "1000304"  [label="AST: "];
"1000312" -> "1000304"  [label="AST: "];
"1000315" -> "1000304"  [label="AST: "];
"1000316" -> "1000304"  [label="AST: "];
"1000304" -> "1000380"  [label="DDG: MAP_PRIVATE | MAP_FIXED"];
"1000304" -> "1000380"  [label="DDG: fd"];
"1000304" -> "1000380"  [label="DDG: ((off64_t)start)*blksize"];
"1000304" -> "1000380"  [label="DDG: PROT_READ"];
"1000304" -> "1000380"  [label="DDG: next"];
"1000304" -> "1000380"  [label="DDG: (end-start)*blksize"];
"1000356" -> "1000304"  [label="DDG: next"];
"1000269" -> "1000304"  [label="DDG: next"];
"1000306" -> "1000304"  [label="DDG: end-start"];
"1000306" -> "1000304"  [label="DDG: blksize"];
"1000312" -> "1000304"  [label="DDG: MAP_PRIVATE"];
"1000312" -> "1000304"  [label="DDG: MAP_FIXED"];
"1000256" -> "1000304"  [label="DDG: fd"];
"1000316" -> "1000304"  [label="DDG: (off64_t)start"];
"1000316" -> "1000304"  [label="DDG: blksize"];
"1000304" -> "1000356"  [label="DDG: next"];
"1000356" -> "1000281"  [label="AST: "];
"1000356" -> "1000358"  [label="CFG: "];
"1000357" -> "1000356"  [label="AST: "];
"1000358" -> "1000356"  [label="AST: "];
"1000280" -> "1000356"  [label="CFG: "];
"1000356" -> "1000380"  [label="DDG: next"];
"1000356" -> "1000380"  [label="DDG: pMap->ranges[i].length"];
"1000343" -> "1000356"  [label="DDG: pMap->ranges[i].length"];
"1000343" -> "1000281"  [label="AST: "];
"1000343" -> "1000351"  [label="CFG: "];
"1000344" -> "1000343"  [label="AST: "];
"1000351" -> "1000343"  [label="AST: "];
"1000357" -> "1000343"  [label="CFG: "];
"1000343" -> "1000380"  [label="DDG: (end-start)*blksize"];
"1000351" -> "1000343"  [label="DDG: end-start"];
"1000351" -> "1000343"  [label="DDG: blksize"];
"1000351" -> "1000355"  [label="CFG: "];
"1000352" -> "1000351"  [label="AST: "];
"1000355" -> "1000351"  [label="AST: "];
"1000351" -> "1000380"  [label="DDG: end-start"];
"1000351" -> "1000380"  [label="DDG: blksize"];
"1000351" -> "1000306"  [label="DDG: blksize"];
"1000352" -> "1000351"  [label="DDG: end"];
"1000352" -> "1000351"  [label="DDG: start"];
"1000316" -> "1000351"  [label="DDG: blksize"];
"1000352" -> "1000354"  [label="CFG: "];
"1000353" -> "1000352"  [label="AST: "];
"1000354" -> "1000352"  [label="AST: "];
"1000355" -> "1000352"  [label="CFG: "];
"1000352" -> "1000380"  [label="DDG: end"];
"1000352" -> "1000380"  [label="DDG: start"];
"1000352" -> "1000307"  [label="DDG: end"];
"1000352" -> "1000307"  [label="DDG: start"];
"1000307" -> "1000352"  [label="DDG: end"];
"1000317" -> "1000352"  [label="DDG: start"];
"1000307" -> "1000306"  [label="AST: "];
"1000307" -> "1000309"  [label="CFG: "];
"1000308" -> "1000307"  [label="AST: "];
"1000309" -> "1000307"  [label="AST: "];
"1000310" -> "1000307"  [label="CFG: "];
"1000307" -> "1000380"  [label="DDG: end"];
"1000307" -> "1000306"  [label="DDG: end"];
"1000307" -> "1000306"  [label="DDG: start"];
"1000307" -> "1000317"  [label="DDG: start"];
"1000317" -> "1000316"  [label="AST: "];
"1000317" -> "1000319"  [label="CFG: "];
"1000318" -> "1000317"  [label="AST: "];
"1000319" -> "1000317"  [label="AST: "];
"1000320" -> "1000317"  [label="CFG: "];
"1000317" -> "1000380"  [label="DDG: start"];
"1000317" -> "1000316"  [label="DDG: start"];
"1000316" -> "1000320"  [label="CFG: "];
"1000320" -> "1000316"  [label="AST: "];
"1000316" -> "1000380"  [label="DDG: blksize"];
"1000316" -> "1000380"  [label="DDG: (off64_t)start"];
"1000306" -> "1000316"  [label="DDG: blksize"];
"1000306" -> "1000310"  [label="CFG: "];
"1000310" -> "1000306"  [label="AST: "];
"1000311" -> "1000306"  [label="CFG: "];
"1000306" -> "1000380"  [label="DDG: end-start"];
"1000246" -> "1000306"  [label="DDG: blksize"];
"1000246" -> "1000236"  [label="AST: "];
"1000246" -> "1000248"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000248" -> "1000246"  [label="AST: "];
"1000236" -> "1000246"  [label="CFG: "];
"1000246" -> "1000380"  [label="DDG: blksize"];
"1000246" -> "1000380"  [label="DDG: blocks"];
"1000246" -> "1000236"  [label="DDG: blocks"];
"1000246" -> "1000236"  [label="DDG: blksize"];
"1000203" -> "1000246"  [label="DDG: blocks"];
"1000203" -> "1000246"  [label="DDG: blksize"];
"1000203" -> "1000201"  [label="AST: "];
"1000203" -> "1000205"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000203"  [label="AST: "];
"1000206" -> "1000203"  [label="CFG: "];
"1000203" -> "1000380"  [label="DDG: blksize"];
"1000203" -> "1000380"  [label="DDG: blocks"];
"1000203" -> "1000201"  [label="DDG: blocks"];
"1000203" -> "1000201"  [label="DDG: blksize"];
"1000166" -> "1000203"  [label="DDG: blocks"];
"1000169" -> "1000203"  [label="DDG: blksize"];
"1000166" -> "1000103"  [label="AST: "];
"1000166" -> "1000168"  [label="CFG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000168" -> "1000166"  [label="AST: "];
"1000177" -> "1000166"  [label="CFG: "];
"1000166" -> "1000380"  [label="DDG: ((size-1) / blksize) + 1"];
"1000169" -> "1000166"  [label="DDG: size-1"];
"1000169" -> "1000166"  [label="DDG: blksize"];
"1000169" -> "1000168"  [label="AST: "];
"1000169" -> "1000173"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000173" -> "1000169"  [label="AST: "];
"1000174" -> "1000169"  [label="CFG: "];
"1000169" -> "1000380"  [label="DDG: size-1"];
"1000169" -> "1000168"  [label="DDG: size-1"];
"1000169" -> "1000168"  [label="DDG: blksize"];
"1000170" -> "1000169"  [label="DDG: size"];
"1000170" -> "1000169"  [label="DDG: 1"];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000173" -> "1000170"  [label="CFG: "];
"1000170" -> "1000380"  [label="DDG: size"];
"1000170" -> "1000370"  [label="DDG: size"];
"1000269" -> "1000103"  [label="AST: "];
"1000269" -> "1000271"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000271" -> "1000269"  [label="AST: "];
"1000274" -> "1000269"  [label="CFG: "];
"1000269" -> "1000380"  [label="DDG: next"];
"1000269" -> "1000380"  [label="DDG: reserve"];
"1000214" -> "1000269"  [label="DDG: reserve"];
"1000214" -> "1000213"  [label="AST: "];
"1000214" -> "1000216"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000216" -> "1000214"  [label="AST: "];
"1000219" -> "1000214"  [label="CFG: "];
"1000229" -> "1000214"  [label="CFG: "];
"1000214" -> "1000380"  [label="DDG: MAP_FAILED"];
"1000214" -> "1000380"  [label="DDG: reserve == MAP_FAILED"];
"1000214" -> "1000380"  [label="DDG: reserve"];
"1000199" -> "1000214"  [label="DDG: reserve"];
"1000214" -> "1000225"  [label="DDG: reserve"];
"1000214" -> "1000322"  [label="DDG: MAP_FAILED"];
"1000214" -> "1000365"  [label="DDG: reserve"];
"1000199" -> "1000103"  [label="AST: "];
"1000199" -> "1000201"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000201" -> "1000199"  [label="AST: "];
"1000215" -> "1000199"  [label="CFG: "];
"1000199" -> "1000380"  [label="DDG: mmap64(NULL, blocks * blksize, PROT_NONE, MAP_PRIVATE | MAP_ANON, -1, 0)"];
"1000201" -> "1000199"  [label="DDG: PROT_NONE"];
"1000201" -> "1000199"  [label="DDG: blocks * blksize"];
"1000201" -> "1000199"  [label="DDG: NULL"];
"1000201" -> "1000199"  [label="DDG: 0"];
"1000201" -> "1000199"  [label="DDG: MAP_PRIVATE | MAP_ANON"];
"1000201" -> "1000199"  [label="DDG: -1"];
"1000201" -> "1000212"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000206" -> "1000201"  [label="AST: "];
"1000207" -> "1000201"  [label="AST: "];
"1000210" -> "1000201"  [label="AST: "];
"1000212" -> "1000201"  [label="AST: "];
"1000201" -> "1000380"  [label="DDG: -1"];
"1000201" -> "1000380"  [label="DDG: PROT_NONE"];
"1000201" -> "1000380"  [label="DDG: blocks * blksize"];
"1000201" -> "1000380"  [label="DDG: MAP_PRIVATE | MAP_ANON"];
"1000201" -> "1000380"  [label="DDG: NULL"];
"1000111" -> "1000201"  [label="DDG: NULL"];
"1000207" -> "1000201"  [label="DDG: MAP_PRIVATE"];
"1000207" -> "1000201"  [label="DDG: MAP_ANON"];
"1000210" -> "1000201"  [label="DDG: 1"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000117"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000117" -> "1000111"  [label="AST: "];
"1000120" -> "1000111"  [label="CFG: "];
"1000126" -> "1000111"  [label="CFG: "];
"1000111" -> "1000380"  [label="DDG: NULL"];
"1000111" -> "1000380"  [label="DDG: fgets(block_dev, sizeof(block_dev), mapf)"];
"1000111" -> "1000380"  [label="DDG: fgets(block_dev, sizeof(block_dev), mapf) == NULL"];
"1000112" -> "1000111"  [label="DDG: block_dev"];
"1000112" -> "1000111"  [label="DDG: mapf"];
"1000112" -> "1000116"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000116" -> "1000112"  [label="AST: "];
"1000117" -> "1000112"  [label="CFG: "];
"1000112" -> "1000380"  [label="DDG: block_dev"];
"1000112" -> "1000380"  [label="DDG: mapf"];
"1000101" -> "1000112"  [label="DDG: mapf"];
"1000112" -> "1000150"  [label="DDG: mapf"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000380"  [label="DDG: mapf"];
"1000101" -> "1000150"  [label="DDG: mapf"];
"1000101" -> "1000286"  [label="DDG: mapf"];
"1000207" -> "1000209"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000209" -> "1000207"  [label="AST: "];
"1000211" -> "1000207"  [label="CFG: "];
"1000207" -> "1000380"  [label="DDG: MAP_ANON"];
"1000207" -> "1000380"  [label="DDG: MAP_PRIVATE"];
"1000207" -> "1000312"  [label="DDG: MAP_PRIVATE"];
"1000210" -> "1000211"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="CFG: "];
"1000312" -> "1000314"  [label="CFG: "];
"1000313" -> "1000312"  [label="AST: "];
"1000314" -> "1000312"  [label="AST: "];
"1000315" -> "1000312"  [label="CFG: "];
"1000312" -> "1000380"  [label="DDG: MAP_PRIVATE"];
"1000312" -> "1000380"  [label="DDG: MAP_FIXED"];
"1000256" -> "1000255"  [label="AST: "];
"1000256" -> "1000258"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000258" -> "1000256"  [label="AST: "];
"1000261" -> "1000256"  [label="CFG: "];
"1000270" -> "1000256"  [label="CFG: "];
"1000256" -> "1000380"  [label="DDG: fd"];
"1000256" -> "1000380"  [label="DDG: fd < 0"];
"1000250" -> "1000256"  [label="DDG: fd"];
"1000250" -> "1000103"  [label="AST: "];
"1000250" -> "1000252"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000252" -> "1000250"  [label="AST: "];
"1000257" -> "1000250"  [label="CFG: "];
"1000250" -> "1000380"  [label="DDG: open(block_dev, O_RDONLY)"];
"1000252" -> "1000250"  [label="DDG: block_dev"];
"1000252" -> "1000250"  [label="DDG: O_RDONLY"];
"1000252" -> "1000254"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000254" -> "1000252"  [label="AST: "];
"1000252" -> "1000380"  [label="DDG: block_dev"];
"1000252" -> "1000380"  [label="DDG: O_RDONLY"];
"1000142" -> "1000252"  [label="DDG: block_dev[i]"];
"1000136" -> "1000252"  [label="DDG: block_dev[i]"];
"1000252" -> "1000260"  [label="DDG: block_dev"];
"1000142" -> "1000141"  [label="AST: "];
"1000142" -> "1000146"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000146" -> "1000142"  [label="AST: "];
"1000147" -> "1000142"  [label="CFG: "];
"1000142" -> "1000380"  [label="DDG: block_dev[i]"];
"1000142" -> "1000260"  [label="DDG: block_dev[i]"];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000140"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000140" -> "1000136"  [label="AST: "];
"1000144" -> "1000136"  [label="CFG: "];
"1000133" -> "1000136"  [label="CFG: "];
"1000136" -> "1000380"  [label="DDG: block_dev[i] == '\n'"];
"1000136" -> "1000380"  [label="DDG: block_dev[i]"];
"1000136" -> "1000260"  [label="DDG: block_dev[i]"];
"1000322" -> "1000321"  [label="AST: "];
"1000322" -> "1000324"  [label="CFG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000324" -> "1000322"  [label="AST: "];
"1000327" -> "1000322"  [label="CFG: "];
"1000338" -> "1000322"  [label="CFG: "];
"1000322" -> "1000380"  [label="DDG: MAP_FAILED"];
"1000322" -> "1000380"  [label="DDG: addr == MAP_FAILED"];
"1000322" -> "1000380"  [label="DDG: addr"];
"1000322" -> "1000334"  [label="DDG: addr"];
"1000334" -> "1000281"  [label="AST: "];
"1000334" -> "1000342"  [label="CFG: "];
"1000335" -> "1000334"  [label="AST: "];
"1000342" -> "1000334"  [label="AST: "];
"1000347" -> "1000334"  [label="CFG: "];
"1000334" -> "1000380"  [label="DDG: addr"];
"1000334" -> "1000380"  [label="DDG: pMap->ranges[i].addr"];
}
