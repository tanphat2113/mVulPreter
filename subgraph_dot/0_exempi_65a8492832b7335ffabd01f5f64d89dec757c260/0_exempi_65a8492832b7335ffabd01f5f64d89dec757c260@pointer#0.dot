digraph "0_exempi_65a8492832b7335ffabd01f5f64d89dec757c260@pointer" {
"1000197" [label="(Call,XMP_OptionIsSet ( handler->parent->openFlags, kXMPFiles_OpenRepairFile ))"];
"1000187" [label="(Call,XMP_OptionIsSet ( handler->parent->openFlags, kXMPFiles_OpenForUpdate ))"];
"1000195" [label="(Call,repairFile = XMP_OptionIsSet ( handler->parent->openFlags, kXMPFiles_OpenRepairFile ))"];
"1000208" [label="(Call,repairFile && (parent == 0))"];
"1000205" [label="(Call,(! isUpdate) || (repairFile && (parent == 0)))"];
"1000226" [label="(Literal,\"Bad RIFF chunk size\")"];
"1000196" [label="(Identifier,repairFile)"];
"1000209" [label="(Identifier,repairFile)"];
"1000210" [label="(Call,parent == 0)"];
"1000198" [label="(Call,handler->parent->openFlags)"];
"1000183" [label="(Block,)"];
"1000185" [label="(Call,isUpdate = XMP_OptionIsSet ( handler->parent->openFlags, kXMPFiles_OpenForUpdate ))"];
"1000205" [label="(Call,(! isUpdate) || (repairFile && (parent == 0)))"];
"1000272" [label="(MethodReturn,RET)"];
"1000216" [label="(Identifier,this)"];
"1000195" [label="(Call,repairFile = XMP_OptionIsSet ( handler->parent->openFlags, kXMPFiles_OpenRepairFile ))"];
"1000197" [label="(Call,XMP_OptionIsSet ( handler->parent->openFlags, kXMPFiles_OpenRepairFile ))"];
"1000193" [label="(Identifier,kXMPFiles_OpenForUpdate)"];
"1000207" [label="(Identifier,isUpdate)"];
"1000203" [label="(Identifier,kXMPFiles_OpenRepairFile)"];
"1000208" [label="(Call,repairFile && (parent == 0))"];
"1000188" [label="(Call,handler->parent->openFlags)"];
"1000206" [label="(Call,! isUpdate)"];
"1000187" [label="(Call,XMP_OptionIsSet ( handler->parent->openFlags, kXMPFiles_OpenForUpdate ))"];
"1000204" [label="(ControlStructure,if ( (! isUpdate) || (repairFile && (parent == 0)) ))"];
"1000197" -> "1000195"  [label="AST: "];
"1000197" -> "1000203"  [label="CFG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000203" -> "1000197"  [label="AST: "];
"1000195" -> "1000197"  [label="CFG: "];
"1000197" -> "1000272"  [label="DDG: handler->parent->openFlags"];
"1000197" -> "1000272"  [label="DDG: kXMPFiles_OpenRepairFile"];
"1000197" -> "1000195"  [label="DDG: handler->parent->openFlags"];
"1000197" -> "1000195"  [label="DDG: kXMPFiles_OpenRepairFile"];
"1000187" -> "1000197"  [label="DDG: handler->parent->openFlags"];
"1000187" -> "1000185"  [label="AST: "];
"1000187" -> "1000193"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000193" -> "1000187"  [label="AST: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000187" -> "1000272"  [label="DDG: kXMPFiles_OpenForUpdate"];
"1000187" -> "1000185"  [label="DDG: handler->parent->openFlags"];
"1000187" -> "1000185"  [label="DDG: kXMPFiles_OpenForUpdate"];
"1000195" -> "1000183"  [label="AST: "];
"1000196" -> "1000195"  [label="AST: "];
"1000207" -> "1000195"  [label="CFG: "];
"1000195" -> "1000272"  [label="DDG: repairFile"];
"1000195" -> "1000272"  [label="DDG: XMP_OptionIsSet ( handler->parent->openFlags, kXMPFiles_OpenRepairFile )"];
"1000195" -> "1000208"  [label="DDG: repairFile"];
"1000208" -> "1000205"  [label="AST: "];
"1000208" -> "1000209"  [label="CFG: "];
"1000208" -> "1000210"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000210" -> "1000208"  [label="AST: "];
"1000205" -> "1000208"  [label="CFG: "];
"1000208" -> "1000272"  [label="DDG: repairFile"];
"1000208" -> "1000272"  [label="DDG: parent == 0"];
"1000208" -> "1000205"  [label="DDG: repairFile"];
"1000208" -> "1000205"  [label="DDG: parent == 0"];
"1000210" -> "1000208"  [label="DDG: parent"];
"1000210" -> "1000208"  [label="DDG: 0"];
"1000205" -> "1000204"  [label="AST: "];
"1000205" -> "1000206"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000216" -> "1000205"  [label="CFG: "];
"1000226" -> "1000205"  [label="CFG: "];
"1000205" -> "1000272"  [label="DDG: ! isUpdate"];
"1000205" -> "1000272"  [label="DDG: repairFile && (parent == 0)"];
"1000205" -> "1000272"  [label="DDG: (! isUpdate) || (repairFile && (parent == 0))"];
"1000206" -> "1000205"  [label="DDG: isUpdate"];
}
