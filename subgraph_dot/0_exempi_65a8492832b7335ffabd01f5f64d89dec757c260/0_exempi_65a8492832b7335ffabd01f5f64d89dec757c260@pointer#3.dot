digraph "0_exempi_65a8492832b7335ffabd01f5f64d89dec757c260@pointer" {
"1000149" [label="(Call,XIO::ReadUns32_LE( file ))"];
"1000143" [label="(Call,XIO::ReadUns32_LE( file ))"];
"1000127" [label="(Call,* file = handler->parent->ioRef)"];
"1000145" [label="(Call,this->oldSize = XIO::ReadUns32_LE( file ))"];
"1000151" [label="(Call,this->oldSize += 8)"];
"1000157" [label="(Call,chunkEnd = this->oldPos + this->oldSize)"];
"1000180" [label="(Call,chunkEnd > chunkLimit)"];
"1000218" [label="(Call,chunkLimit - this->oldPos)"];
"1000214" [label="(Call,this->oldSize = chunkLimit - this->oldPos)"];
"1000228" [label="(Call,this->newSize = this->oldSize)"];
"1000243" [label="(Call,this->oldSize - 8)"];
"1000242" [label="(Call,file->Seek ( (this->oldSize - 8), kXMP_SeekFromCurrent ))"];
"1000159" [label="(Call,this->oldPos + this->oldSize)"];
"1000242" [label="(Call,file->Seek ( (this->oldSize - 8), kXMP_SeekFromCurrent ))"];
"1000145" [label="(Call,this->oldSize = XIO::ReadUns32_LE( file ))"];
"1000179" [label="(ControlStructure,if ( chunkEnd > chunkLimit ))"];
"1000243" [label="(Call,this->oldSize - 8)"];
"1000168" [label="(Identifier,parent)"];
"1000213" [label="(Block,)"];
"1000159" [label="(Call,this->oldPos + this->oldSize)"];
"1000151" [label="(Call,this->oldSize += 8)"];
"1000237" [label="(Identifier,this)"];
"1000219" [label="(Identifier,chunkLimit)"];
"1000143" [label="(Call,XIO::ReadUns32_LE( file ))"];
"1000155" [label="(Literal,8)"];
"1000153" [label="(Identifier,this)"];
"1000150" [label="(Identifier,file)"];
"1000152" [label="(Call,this->oldSize)"];
"1000214" [label="(Call,this->oldSize = chunkLimit - this->oldPos)"];
"1000272" [label="(MethodReturn,RET)"];
"1000220" [label="(Call,this->oldPos)"];
"1000163" [label="(Call,this->oldSize)"];
"1000136" [label="(Identifier,this)"];
"1000160" [label="(Call,this->oldPos)"];
"1000181" [label="(Identifier,chunkEnd)"];
"1000127" [label="(Call,* file = handler->parent->ioRef)"];
"1000134" [label="(Call,this->oldPos = file->Offset())"];
"1000247" [label="(Literal,8)"];
"1000128" [label="(Identifier,file)"];
"1000244" [label="(Call,this->oldSize)"];
"1000240" [label="(ControlStructure,if ( skip ))"];
"1000158" [label="(Identifier,chunkEnd)"];
"1000230" [label="(Identifier,this)"];
"1000157" [label="(Call,chunkEnd = this->oldPos + this->oldSize)"];
"1000229" [label="(Call,this->newSize)"];
"1000139" [label="(Call,this->id = XIO::ReadUns32_LE( file ))"];
"1000218" [label="(Call,chunkLimit - this->oldPos)"];
"1000170" [label="(Call,chunkLimit = parent->oldPos + parent->oldSize)"];
"1000144" [label="(Identifier,file)"];
"1000228" [label="(Call,this->newSize = this->oldSize)"];
"1000186" [label="(Identifier,isUpdate)"];
"1000149" [label="(Call,XIO::ReadUns32_LE( file ))"];
"1000180" [label="(Call,chunkEnd > chunkLimit)"];
"1000215" [label="(Call,this->oldSize)"];
"1000248" [label="(Identifier,kXMP_SeekFromCurrent)"];
"1000146" [label="(Call,this->oldSize)"];
"1000252" [label="(Identifier,this)"];
"1000107" [label="(Block,)"];
"1000129" [label="(Call,handler->parent->ioRef)"];
"1000232" [label="(Call,this->oldSize)"];
"1000182" [label="(Identifier,chunkLimit)"];
"1000149" -> "1000145"  [label="AST: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000145" -> "1000149"  [label="CFG: "];
"1000149" -> "1000272"  [label="DDG: file"];
"1000149" -> "1000145"  [label="DDG: file"];
"1000143" -> "1000149"  [label="DDG: file"];
"1000143" -> "1000139"  [label="AST: "];
"1000143" -> "1000144"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000139" -> "1000143"  [label="CFG: "];
"1000143" -> "1000139"  [label="DDG: file"];
"1000127" -> "1000143"  [label="DDG: file"];
"1000127" -> "1000107"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000136" -> "1000127"  [label="CFG: "];
"1000127" -> "1000272"  [label="DDG: handler->parent->ioRef"];
"1000145" -> "1000107"  [label="AST: "];
"1000146" -> "1000145"  [label="AST: "];
"1000153" -> "1000145"  [label="CFG: "];
"1000145" -> "1000272"  [label="DDG: XIO::ReadUns32_LE( file )"];
"1000145" -> "1000151"  [label="DDG: this->oldSize"];
"1000151" -> "1000107"  [label="AST: "];
"1000151" -> "1000155"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000155" -> "1000151"  [label="AST: "];
"1000158" -> "1000151"  [label="CFG: "];
"1000151" -> "1000157"  [label="DDG: this->oldSize"];
"1000151" -> "1000159"  [label="DDG: this->oldSize"];
"1000151" -> "1000228"  [label="DDG: this->oldSize"];
"1000151" -> "1000243"  [label="DDG: this->oldSize"];
"1000157" -> "1000107"  [label="AST: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000168" -> "1000157"  [label="CFG: "];
"1000157" -> "1000272"  [label="DDG: this->oldPos + this->oldSize"];
"1000134" -> "1000157"  [label="DDG: this->oldPos"];
"1000157" -> "1000180"  [label="DDG: chunkEnd"];
"1000180" -> "1000179"  [label="AST: "];
"1000180" -> "1000182"  [label="CFG: "];
"1000181" -> "1000180"  [label="AST: "];
"1000182" -> "1000180"  [label="AST: "];
"1000186" -> "1000180"  [label="CFG: "];
"1000230" -> "1000180"  [label="CFG: "];
"1000180" -> "1000272"  [label="DDG: chunkEnd"];
"1000180" -> "1000272"  [label="DDG: chunkLimit"];
"1000180" -> "1000272"  [label="DDG: chunkEnd > chunkLimit"];
"1000170" -> "1000180"  [label="DDG: chunkLimit"];
"1000180" -> "1000218"  [label="DDG: chunkLimit"];
"1000218" -> "1000214"  [label="AST: "];
"1000218" -> "1000220"  [label="CFG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000220" -> "1000218"  [label="AST: "];
"1000214" -> "1000218"  [label="CFG: "];
"1000218" -> "1000272"  [label="DDG: chunkLimit"];
"1000218" -> "1000272"  [label="DDG: this->oldPos"];
"1000218" -> "1000214"  [label="DDG: chunkLimit"];
"1000218" -> "1000214"  [label="DDG: this->oldPos"];
"1000134" -> "1000218"  [label="DDG: this->oldPos"];
"1000214" -> "1000213"  [label="AST: "];
"1000215" -> "1000214"  [label="AST: "];
"1000230" -> "1000214"  [label="CFG: "];
"1000214" -> "1000272"  [label="DDG: chunkLimit - this->oldPos"];
"1000214" -> "1000228"  [label="DDG: this->oldSize"];
"1000214" -> "1000243"  [label="DDG: this->oldSize"];
"1000228" -> "1000107"  [label="AST: "];
"1000228" -> "1000232"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000232" -> "1000228"  [label="AST: "];
"1000237" -> "1000228"  [label="CFG: "];
"1000228" -> "1000272"  [label="DDG: this->newSize"];
"1000228" -> "1000272"  [label="DDG: this->oldSize"];
"1000243" -> "1000242"  [label="AST: "];
"1000243" -> "1000247"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000247" -> "1000243"  [label="AST: "];
"1000248" -> "1000243"  [label="CFG: "];
"1000243" -> "1000272"  [label="DDG: this->oldSize"];
"1000243" -> "1000242"  [label="DDG: this->oldSize"];
"1000243" -> "1000242"  [label="DDG: 8"];
"1000242" -> "1000240"  [label="AST: "];
"1000242" -> "1000248"  [label="CFG: "];
"1000248" -> "1000242"  [label="AST: "];
"1000252" -> "1000242"  [label="CFG: "];
"1000242" -> "1000272"  [label="DDG: kXMP_SeekFromCurrent"];
"1000242" -> "1000272"  [label="DDG: file->Seek ( (this->oldSize - 8), kXMP_SeekFromCurrent )"];
"1000242" -> "1000272"  [label="DDG: this->oldSize - 8"];
"1000159" -> "1000163"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000163" -> "1000159"  [label="AST: "];
"1000159" -> "1000272"  [label="DDG: this->oldPos"];
"1000134" -> "1000159"  [label="DDG: this->oldPos"];
}
