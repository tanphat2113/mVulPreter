digraph "0_linux_363b02dab09b3226f3bd1420dad9c72b79a42a76_12@API" {
"1000261" [label="(Call,sprintf(xbuf, \"%luw\", timo / (60*60*24*7)))"];
"1000264" [label="(Call,timo / (60*60*24*7))"];
"1000241" [label="(Call,timo < 60*60*24*7)"];
"1000224" [label="(Call,timo < 60*60*24)"];
"1000211" [label="(Call,timo < 60*60)"];
"1000202" [label="(Call,timo < 60)"];
"1000192" [label="(Call,timo = key->expiry - now.tv_sec)"];
"1000194" [label="(Call,key->expiry - now.tv_sec)"];
"1000178" [label="(Call,now.tv_sec >= key->expiry)"];
"1000161" [label="(Call,now = current_kernel_time())"];
"1000166" [label="(Call,key->expiry == 0)"];
"1000213" [label="(Call,60*60)"];
"1000226" [label="(Call,60*60*24)"];
"1000228" [label="(Call,60*24)"];
"1000243" [label="(Call,60*60*24*7)"];
"1000245" [label="(Call,60*24*7)"];
"1000247" [label="(Call,24*7)"];
"1000266" [label="(Call,60*60*24*7)"];
"1000268" [label="(Call,60*24*7)"];
"1000270" [label="(Call,24*7)"];
"1000274" [label="(Call,seq_printf(m, \"%08x %c%c%c%c%c%c%c %5d %4s %08x %5d %5d %-9.9s \",\n \t\t   key->serial,\n\t\t   showflag(key, 'I', KEY_FLAG_INSTANTIATED),\n \t\t   showflag(key, 'R', KEY_FLAG_REVOKED),\n \t\t   showflag(key, 'D', KEY_FLAG_DEAD),\n \t\t   showflag(key, 'Q', KEY_FLAG_IN_QUOTA),\n \t\t   showflag(key, 'U', KEY_FLAG_USER_CONSTRUCT),\n\t\t   showflag(key, 'N', KEY_FLAG_NEGATIVE),\n \t\t   showflag(key, 'i', KEY_FLAG_INVALIDATED),\n \t\t   refcount_read(&key->usage),\n \t\t   xbuf,\n\t\t   key->perm,\n\t\t   from_kuid_munged(seq_user_ns(m), key->uid),\n\t\t   from_kgid_munged(seq_user_ns(m), key->gid),\n\t\t   key->type->name))"];
"1000340" [label="(Call,key->type->describe(key, m))"];
"1000343" [label="(Call,seq_putc(m, '\n'))"];
"1000203" [label="(Identifier,timo)"];
"1000246" [label="(Literal,60)"];
"1000248" [label="(Literal,24)"];
"1000232" [label="(Identifier,xbuf)"];
"1000292" [label="(Call,showflag(key, 'Q', KEY_FLAG_IN_QUOTA))"];
"1000296" [label="(Call,showflag(key, 'U', KEY_FLAG_USER_CONSTRUCT))"];
"1000313" [label="(Identifier,xbuf)"];
"1000334" [label="(ControlStructure,if (key->type->describe))"];
"1000262" [label="(Identifier,xbuf)"];
"1000204" [label="(Literal,60)"];
"1000192" [label="(Call,timo = key->expiry - now.tv_sec)"];
"1000213" [label="(Call,60*60)"];
"1000194" [label="(Call,key->expiry - now.tv_sec)"];
"1000243" [label="(Call,60*60*24*7)"];
"1000215" [label="(Literal,60)"];
"1000280" [label="(Call,showflag(key, 'I', KEY_FLAG_INSTANTIATED))"];
"1000340" [label="(Call,key->type->describe(key, m))"];
"1000245" [label="(Call,60*24*7)"];
"1000263" [label="(Literal,\"%luw\")"];
"1000163" [label="(Call,current_kernel_time())"];
"1000170" [label="(Literal,0)"];
"1000224" [label="(Call,timo < 60*60*24)"];
"1000195" [label="(Call,key->expiry)"];
"1000349" [label="(MethodReturn,static int)"];
"1000271" [label="(Literal,24)"];
"1000269" [label="(Literal,60)"];
"1000276" [label="(Literal,\"%08x %c%c%c%c%c%c%c %5d %4s %08x %5d %5d %-9.9s \")"];
"1000268" [label="(Call,60*24*7)"];
"1000284" [label="(Call,showflag(key, 'R', KEY_FLAG_REVOKED))"];
"1000167" [label="(Call,key->expiry)"];
"1000342" [label="(Identifier,m)"];
"1000344" [label="(Identifier,m)"];
"1000223" [label="(ControlStructure,if (timo < 60*60*24))"];
"1000206" [label="(Identifier,xbuf)"];
"1000300" [label="(Call,showflag(key, 'N', KEY_FLAG_NEGATIVE))"];
"1000180" [label="(Identifier,now)"];
"1000225" [label="(Identifier,timo)"];
"1000277" [label="(Call,key->serial)"];
"1000260" [label="(ControlStructure,else)"];
"1000244" [label="(Literal,60)"];
"1000251" [label="(Identifier,xbuf)"];
"1000166" [label="(Call,key->expiry == 0)"];
"1000179" [label="(Call,now.tv_sec)"];
"1000273" [label="(JumpTarget,LETTER :)"];
"1000230" [label="(Literal,24)"];
"1000346" [label="(Call,rcu_read_unlock())"];
"1000124" [label="(Call,key->perm & KEY_POS_VIEW)"];
"1000177" [label="(ControlStructure,if (now.tv_sec >= key->expiry))"];
"1000217" [label="(Identifier,xbuf)"];
"1000249" [label="(Literal,7)"];
"1000226" [label="(Call,60*60*24)"];
"1000267" [label="(Literal,60)"];
"1000341" [label="(Identifier,key)"];
"1000270" [label="(Call,24*7)"];
"1000173" [label="(Identifier,xbuf)"];
"1000191" [label="(Block,)"];
"1000210" [label="(ControlStructure,if (timo < 60*60))"];
"1000219" [label="(Call,timo / 60)"];
"1000202" [label="(Call,timo < 60)"];
"1000250" [label="(Call,sprintf(xbuf, \"%lud\", timo / (60*60*24)))"];
"1000229" [label="(Literal,60)"];
"1000198" [label="(Call,now.tv_sec)"];
"1000231" [label="(Call,sprintf(xbuf, \"%luh\", timo / (60*60)))"];
"1000165" [label="(ControlStructure,if (key->expiry == 0))"];
"1000234" [label="(Call,timo / (60*60))"];
"1000345" [label="(Literal,'\n')"];
"1000104" [label="(MethodParameterIn,struct seq_file *m)"];
"1000182" [label="(Call,key->expiry)"];
"1000211" [label="(Call,timo < 60*60)"];
"1000317" [label="(Call,from_kuid_munged(seq_user_ns(m), key->uid))"];
"1000343" [label="(Call,seq_putc(m, '\n'))"];
"1000275" [label="(Identifier,m)"];
"1000329" [label="(Call,key->type->name)"];
"1000193" [label="(Identifier,timo)"];
"1000186" [label="(Call,memcpy(xbuf, \"expd\", 5))"];
"1000264" [label="(Call,timo / (60*60*24*7))"];
"1000205" [label="(Call,sprintf(xbuf, \"%lus\", timo))"];
"1000178" [label="(Call,now.tv_sec >= key->expiry)"];
"1000216" [label="(Call,sprintf(xbuf, \"%lum\", timo / 60))"];
"1000314" [label="(Call,key->perm)"];
"1000240" [label="(ControlStructure,if (timo < 60*60*24*7))"];
"1000161" [label="(Call,now = current_kernel_time())"];
"1000324" [label="(Call,seq_user_ns(m))"];
"1000164" [label="(Call,rcu_read_lock())"];
"1000323" [label="(Call,from_kgid_munged(seq_user_ns(m), key->gid))"];
"1000162" [label="(Identifier,now)"];
"1000172" [label="(Call,memcpy(xbuf, \"perm\", 5))"];
"1000242" [label="(Identifier,timo)"];
"1000201" [label="(ControlStructure,if (timo < 60))"];
"1000106" [label="(Block,)"];
"1000265" [label="(Identifier,timo)"];
"1000274" [label="(Call,seq_printf(m, \"%08x %c%c%c%c%c%c%c %5d %4s %08x %5d %5d %-9.9s \",\n \t\t   key->serial,\n\t\t   showflag(key, 'I', KEY_FLAG_INSTANTIATED),\n \t\t   showflag(key, 'R', KEY_FLAG_REVOKED),\n \t\t   showflag(key, 'D', KEY_FLAG_DEAD),\n \t\t   showflag(key, 'Q', KEY_FLAG_IN_QUOTA),\n \t\t   showflag(key, 'U', KEY_FLAG_USER_CONSTRUCT),\n\t\t   showflag(key, 'N', KEY_FLAG_NEGATIVE),\n \t\t   showflag(key, 'i', KEY_FLAG_INVALIDATED),\n \t\t   refcount_read(&key->usage),\n \t\t   xbuf,\n\t\t   key->perm,\n\t\t   from_kuid_munged(seq_user_ns(m), key->uid),\n\t\t   from_kgid_munged(seq_user_ns(m), key->gid),\n\t\t   key->type->name))"];
"1000241" [label="(Call,timo < 60*60*24*7)"];
"1000227" [label="(Literal,60)"];
"1000337" [label="(Identifier,key)"];
"1000228" [label="(Call,60*24)"];
"1000288" [label="(Call,showflag(key, 'D', KEY_FLAG_DEAD))"];
"1000212" [label="(Identifier,timo)"];
"1000308" [label="(Call,refcount_read(&key->usage))"];
"1000253" [label="(Call,timo / (60*60*24))"];
"1000304" [label="(Call,showflag(key, 'i', KEY_FLAG_INVALIDATED))"];
"1000261" [label="(Call,sprintf(xbuf, \"%luw\", timo / (60*60*24*7)))"];
"1000272" [label="(Literal,7)"];
"1000266" [label="(Call,60*60*24*7)"];
"1000247" [label="(Call,24*7)"];
"1000214" [label="(Literal,60)"];
"1000187" [label="(Identifier,xbuf)"];
"1000261" -> "1000260"  [label="AST: "];
"1000261" -> "1000264"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000263" -> "1000261"  [label="AST: "];
"1000264" -> "1000261"  [label="AST: "];
"1000273" -> "1000261"  [label="CFG: "];
"1000261" -> "1000349"  [label="DDG: "];
"1000261" -> "1000349"  [label="DDG: "];
"1000264" -> "1000261"  [label="DDG: "];
"1000264" -> "1000261"  [label="DDG: "];
"1000261" -> "1000274"  [label="DDG: "];
"1000264" -> "1000266"  [label="CFG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000266" -> "1000264"  [label="AST: "];
"1000264" -> "1000349"  [label="DDG: "];
"1000264" -> "1000349"  [label="DDG: "];
"1000241" -> "1000264"  [label="DDG: "];
"1000266" -> "1000264"  [label="DDG: "];
"1000266" -> "1000264"  [label="DDG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000241" -> "1000243"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="AST: "];
"1000251" -> "1000241"  [label="CFG: "];
"1000262" -> "1000241"  [label="CFG: "];
"1000241" -> "1000349"  [label="DDG: "];
"1000241" -> "1000349"  [label="DDG: "];
"1000224" -> "1000241"  [label="DDG: "];
"1000243" -> "1000241"  [label="DDG: "];
"1000243" -> "1000241"  [label="DDG: "];
"1000241" -> "1000253"  [label="DDG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000224" -> "1000226"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000232" -> "1000224"  [label="CFG: "];
"1000242" -> "1000224"  [label="CFG: "];
"1000224" -> "1000349"  [label="DDG: "];
"1000224" -> "1000349"  [label="DDG: "];
"1000211" -> "1000224"  [label="DDG: "];
"1000226" -> "1000224"  [label="DDG: "];
"1000226" -> "1000224"  [label="DDG: "];
"1000224" -> "1000234"  [label="DDG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000211" -> "1000213"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000213" -> "1000211"  [label="AST: "];
"1000217" -> "1000211"  [label="CFG: "];
"1000225" -> "1000211"  [label="CFG: "];
"1000211" -> "1000349"  [label="DDG: "];
"1000211" -> "1000349"  [label="DDG: "];
"1000202" -> "1000211"  [label="DDG: "];
"1000213" -> "1000211"  [label="DDG: "];
"1000211" -> "1000219"  [label="DDG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000202" -> "1000204"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000206" -> "1000202"  [label="CFG: "];
"1000212" -> "1000202"  [label="CFG: "];
"1000202" -> "1000349"  [label="DDG: "];
"1000192" -> "1000202"  [label="DDG: "];
"1000202" -> "1000205"  [label="DDG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000194" -> "1000192"  [label="AST: "];
"1000203" -> "1000192"  [label="CFG: "];
"1000192" -> "1000349"  [label="DDG: "];
"1000194" -> "1000192"  [label="DDG: "];
"1000194" -> "1000192"  [label="DDG: "];
"1000194" -> "1000198"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000198" -> "1000194"  [label="AST: "];
"1000194" -> "1000349"  [label="DDG: "];
"1000194" -> "1000349"  [label="DDG: "];
"1000178" -> "1000194"  [label="DDG: "];
"1000178" -> "1000194"  [label="DDG: "];
"1000161" -> "1000194"  [label="DDG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000178" -> "1000182"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000182" -> "1000178"  [label="AST: "];
"1000187" -> "1000178"  [label="CFG: "];
"1000193" -> "1000178"  [label="CFG: "];
"1000178" -> "1000349"  [label="DDG: "];
"1000178" -> "1000349"  [label="DDG: "];
"1000178" -> "1000349"  [label="DDG: "];
"1000161" -> "1000178"  [label="DDG: "];
"1000166" -> "1000178"  [label="DDG: "];
"1000161" -> "1000106"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000164" -> "1000161"  [label="CFG: "];
"1000161" -> "1000349"  [label="DDG: "];
"1000161" -> "1000349"  [label="DDG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000166" -> "1000170"  [label="CFG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000170" -> "1000166"  [label="AST: "];
"1000173" -> "1000166"  [label="CFG: "];
"1000180" -> "1000166"  [label="CFG: "];
"1000166" -> "1000349"  [label="DDG: "];
"1000166" -> "1000349"  [label="DDG: "];
"1000213" -> "1000215"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000215" -> "1000213"  [label="AST: "];
"1000226" -> "1000228"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000228" -> "1000226"  [label="AST: "];
"1000226" -> "1000349"  [label="DDG: "];
"1000228" -> "1000226"  [label="DDG: "];
"1000228" -> "1000226"  [label="DDG: "];
"1000228" -> "1000230"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000230" -> "1000228"  [label="AST: "];
"1000243" -> "1000245"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000245" -> "1000243"  [label="AST: "];
"1000243" -> "1000349"  [label="DDG: "];
"1000245" -> "1000243"  [label="DDG: "];
"1000245" -> "1000243"  [label="DDG: "];
"1000245" -> "1000247"  [label="CFG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000247" -> "1000245"  [label="AST: "];
"1000245" -> "1000349"  [label="DDG: "];
"1000247" -> "1000245"  [label="DDG: "];
"1000247" -> "1000245"  [label="DDG: "];
"1000247" -> "1000249"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000249" -> "1000247"  [label="AST: "];
"1000266" -> "1000268"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="AST: "];
"1000266" -> "1000349"  [label="DDG: "];
"1000268" -> "1000266"  [label="DDG: "];
"1000268" -> "1000266"  [label="DDG: "];
"1000268" -> "1000270"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000270" -> "1000268"  [label="AST: "];
"1000268" -> "1000349"  [label="DDG: "];
"1000270" -> "1000268"  [label="DDG: "];
"1000270" -> "1000268"  [label="DDG: "];
"1000270" -> "1000272"  [label="CFG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000272" -> "1000270"  [label="AST: "];
"1000274" -> "1000106"  [label="AST: "];
"1000274" -> "1000329"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000276" -> "1000274"  [label="AST: "];
"1000277" -> "1000274"  [label="AST: "];
"1000280" -> "1000274"  [label="AST: "];
"1000284" -> "1000274"  [label="AST: "];
"1000288" -> "1000274"  [label="AST: "];
"1000292" -> "1000274"  [label="AST: "];
"1000296" -> "1000274"  [label="AST: "];
"1000300" -> "1000274"  [label="AST: "];
"1000304" -> "1000274"  [label="AST: "];
"1000308" -> "1000274"  [label="AST: "];
"1000313" -> "1000274"  [label="AST: "];
"1000314" -> "1000274"  [label="AST: "];
"1000317" -> "1000274"  [label="AST: "];
"1000323" -> "1000274"  [label="AST: "];
"1000329" -> "1000274"  [label="AST: "];
"1000337" -> "1000274"  [label="CFG: "];
"1000274" -> "1000349"  [label="DDG: "];
"1000274" -> "1000349"  [label="DDG: "];
"1000274" -> "1000349"  [label="DDG: "];
"1000274" -> "1000349"  [label="DDG: "];
"1000274" -> "1000349"  [label="DDG: "];
"1000274" -> "1000349"  [label="DDG: "];
"1000274" -> "1000349"  [label="DDG: "];
"1000274" -> "1000349"  [label="DDG: "];
"1000274" -> "1000349"  [label="DDG: "];
"1000274" -> "1000349"  [label="DDG: "];
"1000274" -> "1000349"  [label="DDG: "];
"1000274" -> "1000349"  [label="DDG: "];
"1000274" -> "1000349"  [label="DDG: "];
"1000274" -> "1000349"  [label="DDG: "];
"1000274" -> "1000349"  [label="DDG: "];
"1000324" -> "1000274"  [label="DDG: "];
"1000104" -> "1000274"  [label="DDG: "];
"1000280" -> "1000274"  [label="DDG: "];
"1000280" -> "1000274"  [label="DDG: "];
"1000280" -> "1000274"  [label="DDG: "];
"1000284" -> "1000274"  [label="DDG: "];
"1000284" -> "1000274"  [label="DDG: "];
"1000284" -> "1000274"  [label="DDG: "];
"1000288" -> "1000274"  [label="DDG: "];
"1000288" -> "1000274"  [label="DDG: "];
"1000288" -> "1000274"  [label="DDG: "];
"1000292" -> "1000274"  [label="DDG: "];
"1000292" -> "1000274"  [label="DDG: "];
"1000292" -> "1000274"  [label="DDG: "];
"1000296" -> "1000274"  [label="DDG: "];
"1000296" -> "1000274"  [label="DDG: "];
"1000296" -> "1000274"  [label="DDG: "];
"1000300" -> "1000274"  [label="DDG: "];
"1000300" -> "1000274"  [label="DDG: "];
"1000300" -> "1000274"  [label="DDG: "];
"1000304" -> "1000274"  [label="DDG: "];
"1000304" -> "1000274"  [label="DDG: "];
"1000304" -> "1000274"  [label="DDG: "];
"1000308" -> "1000274"  [label="DDG: "];
"1000186" -> "1000274"  [label="DDG: "];
"1000250" -> "1000274"  [label="DDG: "];
"1000216" -> "1000274"  [label="DDG: "];
"1000205" -> "1000274"  [label="DDG: "];
"1000231" -> "1000274"  [label="DDG: "];
"1000172" -> "1000274"  [label="DDG: "];
"1000124" -> "1000274"  [label="DDG: "];
"1000317" -> "1000274"  [label="DDG: "];
"1000317" -> "1000274"  [label="DDG: "];
"1000323" -> "1000274"  [label="DDG: "];
"1000323" -> "1000274"  [label="DDG: "];
"1000274" -> "1000340"  [label="DDG: "];
"1000274" -> "1000343"  [label="DDG: "];
"1000340" -> "1000334"  [label="AST: "];
"1000340" -> "1000342"  [label="CFG: "];
"1000341" -> "1000340"  [label="AST: "];
"1000342" -> "1000340"  [label="AST: "];
"1000344" -> "1000340"  [label="CFG: "];
"1000340" -> "1000349"  [label="DDG: "];
"1000340" -> "1000349"  [label="DDG: "];
"1000304" -> "1000340"  [label="DDG: "];
"1000104" -> "1000340"  [label="DDG: "];
"1000340" -> "1000343"  [label="DDG: "];
"1000343" -> "1000106"  [label="AST: "];
"1000343" -> "1000345"  [label="CFG: "];
"1000344" -> "1000343"  [label="AST: "];
"1000345" -> "1000343"  [label="AST: "];
"1000346" -> "1000343"  [label="CFG: "];
"1000343" -> "1000349"  [label="DDG: "];
"1000343" -> "1000349"  [label="DDG: "];
"1000104" -> "1000343"  [label="DDG: "];
}
