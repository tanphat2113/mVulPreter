digraph "0_postgres_31400a673325147e1205326008e32135a78b4d8a_8@pointer" {
"1000300" [label="(Call,lptr->wlen++)"];
"1000220" [label="(Call,lptr->wlen = 0)"];
"1000268" [label="(Call,errdetail(\"Name length is %d, must \"\n\t\t\t\t\t\t\t\t\t   \"be < 256, in position %d.\",\n\t\t\t\t\t\t\t\t\t   lptr->wlen, pos))"];
"1000255" [label="(Call,lptr->wlen > 255)"];
"1000300" [label="(Call,lptr->wlen++)"];
"1000304" [label="(Call,pos++)"];
"1000130" [label="(Call,pos = 0)"];
"1000321" [label="(Call,lptr->wlen > 255)"];
"1000334" [label="(Call,errdetail(\"Name length is %d, must \"\n\t\t\t\t\t\t\t   \"be < 256, in position %d.\",\n\t\t\t\t\t\t\t   lptr->wlen, pos))"];
"1000305" [label="(Identifier,pos)"];
"1000335" [label="(Literal,\"Name length is %d, must \"\n\t\t\t\t\t\t\t   \"be < 256, in position %d.\")"];
"1000301" [label="(Call,lptr->wlen)"];
"1000321" [label="(Call,lptr->wlen > 255)"];
"1000261" [label="(Identifier,ERROR)"];
"1000254" [label="(ControlStructure,if (lptr->wlen > 255))"];
"1000226" [label="(Identifier,state)"];
"1000327" [label="(Identifier,ERROR)"];
"1000322" [label="(Call,lptr->wlen)"];
"1000326" [label="(Call,ereport(ERROR,\n\t\t\t\t\t(errcode(ERRCODE_NAME_TOO_LONG),\n\t\t\t\t\t errmsg(\"name of level is too long\"),\n\t\t\t\t\t errdetail(\"Name length is %d, must \"\n\t\t\t\t\t\t\t   \"be < 256, in position %d.\",\n\t\t\t\t\t\t\t   lptr->wlen, pos))))"];
"1000341" [label="(Identifier,totallen)"];
"1000339" [label="(Identifier,pos)"];
"1000256" [label="(Call,lptr->wlen)"];
"1000131" [label="(Identifier,pos)"];
"1000103" [label="(Block,)"];
"1000265" [label="(Block,)"];
"1000270" [label="(Call,lptr->wlen)"];
"1000325" [label="(Literal,255)"];
"1000224" [label="(Literal,0)"];
"1000304" [label="(Call,pos++)"];
"1000268" [label="(Call,errdetail(\"Name length is %d, must \"\n\t\t\t\t\t\t\t\t\t   \"be < 256, in position %d.\",\n\t\t\t\t\t\t\t\t\t   lptr->wlen, pos))"];
"1000201" [label="(Block,)"];
"1000260" [label="(Call,ereport(ERROR,\n\t\t\t\t\t\t\t(errcode(ERRCODE_NAME_TOO_LONG),\n\t\t\t\t\t\t\t errmsg(\"name of level is too long\"),\n\t\t\t\t\t\t\t errdetail(\"Name length is %d, must \"\n\t\t\t\t\t\t\t\t\t   \"be < 256, in position %d.\",\n\t\t\t\t\t\t\t\t\t   lptr->wlen, pos))))"];
"1000300" [label="(Call,lptr->wlen++)"];
"1000275" [label="(Identifier,totallen)"];
"1000273" [label="(Identifier,pos)"];
"1000336" [label="(Call,lptr->wlen)"];
"1000214" [label="(Block,)"];
"1000134" [label="(Identifier,ptr)"];
"1000255" [label="(Call,lptr->wlen > 255)"];
"1000130" [label="(Call,pos = 0)"];
"1000435" [label="(MethodReturn,RET)"];
"1000331" [label="(Block,)"];
"1000269" [label="(Literal,\"Name length is %d, must \"\n\t\t\t\t\t\t\t\t\t   \"be < 256, in position %d.\")"];
"1000200" [label="(Identifier,ptr)"];
"1000221" [label="(Call,lptr->wlen)"];
"1000320" [label="(ControlStructure,if (lptr->wlen > 255))"];
"1000132" [label="(Literal,0)"];
"1000220" [label="(Call,lptr->wlen = 0)"];
"1000259" [label="(Literal,255)"];
"1000334" [label="(Call,errdetail(\"Name length is %d, must \"\n\t\t\t\t\t\t\t   \"be < 256, in position %d.\",\n\t\t\t\t\t\t\t   lptr->wlen, pos))"];
"1000300" -> "1000201"  [label="AST: "];
"1000300" -> "1000301"  [label="CFG: "];
"1000301" -> "1000300"  [label="AST: "];
"1000305" -> "1000300"  [label="CFG: "];
"1000300" -> "1000435"  [label="DDG: "];
"1000300" -> "1000255"  [label="DDG: "];
"1000220" -> "1000300"  [label="DDG: "];
"1000268" -> "1000300"  [label="DDG: "];
"1000255" -> "1000300"  [label="DDG: "];
"1000300" -> "1000321"  [label="DDG: "];
"1000220" -> "1000214"  [label="AST: "];
"1000220" -> "1000224"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000224" -> "1000220"  [label="AST: "];
"1000226" -> "1000220"  [label="CFG: "];
"1000268" -> "1000265"  [label="AST: "];
"1000268" -> "1000273"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000270" -> "1000268"  [label="AST: "];
"1000273" -> "1000268"  [label="AST: "];
"1000260" -> "1000268"  [label="CFG: "];
"1000268" -> "1000435"  [label="DDG: "];
"1000255" -> "1000268"  [label="DDG: "];
"1000304" -> "1000268"  [label="DDG: "];
"1000130" -> "1000268"  [label="DDG: "];
"1000268" -> "1000304"  [label="DDG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000255" -> "1000259"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000259" -> "1000255"  [label="AST: "];
"1000261" -> "1000255"  [label="CFG: "];
"1000275" -> "1000255"  [label="CFG: "];
"1000255" -> "1000435"  [label="DDG: "];
"1000304" -> "1000201"  [label="AST: "];
"1000304" -> "1000305"  [label="CFG: "];
"1000305" -> "1000304"  [label="AST: "];
"1000200" -> "1000304"  [label="CFG: "];
"1000304" -> "1000435"  [label="DDG: "];
"1000130" -> "1000304"  [label="DDG: "];
"1000304" -> "1000334"  [label="DDG: "];
"1000130" -> "1000103"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000134" -> "1000130"  [label="CFG: "];
"1000130" -> "1000435"  [label="DDG: "];
"1000130" -> "1000334"  [label="DDG: "];
"1000321" -> "1000320"  [label="AST: "];
"1000321" -> "1000325"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000325" -> "1000321"  [label="AST: "];
"1000327" -> "1000321"  [label="CFG: "];
"1000341" -> "1000321"  [label="CFG: "];
"1000321" -> "1000435"  [label="DDG: "];
"1000321" -> "1000435"  [label="DDG: "];
"1000321" -> "1000334"  [label="DDG: "];
"1000334" -> "1000331"  [label="AST: "];
"1000334" -> "1000339"  [label="CFG: "];
"1000335" -> "1000334"  [label="AST: "];
"1000336" -> "1000334"  [label="AST: "];
"1000339" -> "1000334"  [label="AST: "];
"1000326" -> "1000334"  [label="CFG: "];
"1000334" -> "1000435"  [label="DDG: "];
"1000334" -> "1000435"  [label="DDG: "];
"1000334" -> "1000435"  [label="DDG: "];
}
