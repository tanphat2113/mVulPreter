digraph "0_linux_f6d8bd051c391c1c0458a30b2a7abcd939329259@API" {
"1000314" [label="(Call,err = inet_hash_connect(&dccp_death_row, sk))"];
"1000316" [label="(Call,inet_hash_connect(&dccp_death_row, sk))"];
"1000311" [label="(Call,dccp_set_state(sk, DCCP_REQUESTING))"];
"1000303" [label="(Call,inet_csk(sk))"];
"1000295" [label="(Call,inet_csk(sk))"];
"1000208" [label="(Call,ip_route_connect(&fl4, nexthop, inet->inet_saddr,\n\t\t\t      RT_CONN_FLAGS(sk), sk->sk_bound_dev_if,\n\t\t\t      IPPROTO_DCCP,\n\t\t\t      orig_sport, orig_dport, sk, true))"];
"1000189" [label="(Call,nexthop = inet_opt->opt.faddr)"];
"1000154" [label="(Call,nexthop = daddr = usin->sin_addr.s_addr)"];
"1000156" [label="(Call,daddr = usin->sin_addr.s_addr)"];
"1000215" [label="(Call,RT_CONN_FLAGS(sk))"];
"1000169" [label="(Call,sock_owned_by_user(sk))"];
"1000122" [label="(Call,dccp_sk(sk))"];
"1000117" [label="(Call,inet_sk(sk))"];
"1000104" [label="(MethodParameterIn,struct sock *sk)"];
"1000196" [label="(Call,orig_sport = inet->inet_sport)"];
"1000201" [label="(Call,orig_dport = usin->sin_port)"];
"1000321" [label="(Call,err != 0)"];
"1000393" [label="(Return,return err;)"];
"1000327" [label="(Call,ip_route_newports(&fl4, rt, orig_sport, orig_dport,\n\t\t\t       inet->inet_sport, inet->inet_dport, sk))"];
"1000197" [label="(Identifier,orig_sport)"];
"1000348" [label="(Call,sk_setup_caps(sk, &rt->dst))"];
"1000388" [label="(Call,err != 0)"];
"1000326" [label="(Identifier,rt)"];
"1000382" [label="(Call,dccp_connect(sk))"];
"1000198" [label="(Call,inet->inet_sport)"];
"1000196" [label="(Call,orig_sport = inet->inet_sport)"];
"1000224" [label="(Identifier,true)"];
"1000316" [label="(Call,inet_hash_connect(&dccp_death_row, sk))"];
"1000315" [label="(Identifier,err)"];
"1000321" [label="(Call,err != 0)"];
"1000319" [label="(Identifier,sk)"];
"1000220" [label="(Identifier,IPPROTO_DCCP)"];
"1000311" [label="(Call,dccp_set_state(sk, DCCP_REQUESTING))"];
"1000221" [label="(Identifier,orig_sport)"];
"1000314" [label="(Call,err = inet_hash_connect(&dccp_death_row, sk))"];
"1000191" [label="(Call,inet_opt->opt.faddr)"];
"1000122" [label="(Call,dccp_sk(sk))"];
"1000294" [label="(Call,inet_csk(sk)->icsk_ext_hdr_len)"];
"1000297" [label="(FieldIdentifier,icsk_ext_hdr_len)"];
"1000212" [label="(Call,inet->inet_saddr)"];
"1000223" [label="(Identifier,sk)"];
"1000215" [label="(Call,RT_CONN_FLAGS(sk))"];
"1000222" [label="(Identifier,orig_dport)"];
"1000303" [label="(Call,inet_csk(sk))"];
"1000206" [label="(Call,rt = ip_route_connect(&fl4, nexthop, inet->inet_saddr,\n\t\t\t      RT_CONN_FLAGS(sk), sk->sk_bound_dev_if,\n\t\t\t      IPPROTO_DCCP,\n\t\t\t      orig_sport, orig_dport, sk, true))"];
"1000104" [label="(MethodParameterIn,struct sock *sk)"];
"1000155" [label="(Identifier,nexthop)"];
"1000295" [label="(Call,inet_csk(sk))"];
"1000157" [label="(Identifier,daddr)"];
"1000117" [label="(Call,inet_sk(sk))"];
"1000323" [label="(Literal,0)"];
"1000165" [label="(Call,rcu_dereference_protected(inet->inet_opt,\n\t\t\t\t\t     sock_owned_by_user(sk)))"];
"1000189" [label="(Call,nexthop = inet_opt->opt.faddr)"];
"1000305" [label="(FieldIdentifier,icsk_ext_hdr_len)"];
"1000120" [label="(Call,*dp = dccp_sk(sk))"];
"1000190" [label="(Identifier,nexthop)"];
"1000156" [label="(Call,daddr = usin->sin_addr.s_addr)"];
"1000164" [label="(Identifier,inet_opt)"];
"1000118" [label="(Identifier,sk)"];
"1000324" [label="(ControlStructure,goto failure;)"];
"1000216" [label="(Identifier,sk)"];
"1000169" [label="(Call,sock_owned_by_user(sk))"];
"1000203" [label="(Call,usin->sin_port)"];
"1000312" [label="(Identifier,sk)"];
"1000320" [label="(ControlStructure,if (err != 0))"];
"1000211" [label="(Identifier,nexthop)"];
"1000183" [label="(Call,daddr == 0)"];
"1000396" [label="(Call,dccp_set_state(sk, DCCP_CLOSED))"];
"1000217" [label="(Call,sk->sk_bound_dev_if)"];
"1000393" [label="(Return,return err;)"];
"1000207" [label="(Identifier,rt)"];
"1000107" [label="(Block,)"];
"1000304" [label="(Identifier,sk)"];
"1000322" [label="(Identifier,err)"];
"1000202" [label="(Identifier,orig_dport)"];
"1000154" [label="(Call,nexthop = daddr = usin->sin_addr.s_addr)"];
"1000201" [label="(Call,orig_dport = usin->sin_port)"];
"1000115" [label="(Call,*inet = inet_sk(sk))"];
"1000288" [label="(Call,inet->inet_daddr = daddr)"];
"1000313" [label="(Identifier,DCCP_REQUESTING)"];
"1000412" [label="(MethodReturn,int)"];
"1000170" [label="(Identifier,sk)"];
"1000218" [label="(Identifier,sk)"];
"1000317" [label="(Call,&dccp_death_row)"];
"1000209" [label="(Call,&fl4)"];
"1000394" [label="(Identifier,err)"];
"1000158" [label="(Call,usin->sin_addr.s_addr)"];
"1000208" [label="(Call,ip_route_connect(&fl4, nexthop, inet->inet_saddr,\n\t\t\t      RT_CONN_FLAGS(sk), sk->sk_bound_dev_if,\n\t\t\t      IPPROTO_DCCP,\n\t\t\t      orig_sport, orig_dport, sk, true))"];
"1000262" [label="(Call,inet->inet_saddr == 0)"];
"1000123" [label="(Identifier,sk)"];
"1000302" [label="(Call,inet_csk(sk)->icsk_ext_hdr_len)"];
"1000181" [label="(Block,)"];
"1000296" [label="(Identifier,sk)"];
"1000314" -> "1000107"  [label="AST: "];
"1000314" -> "1000316"  [label="CFG: "];
"1000315" -> "1000314"  [label="AST: "];
"1000316" -> "1000314"  [label="AST: "];
"1000322" -> "1000314"  [label="CFG: "];
"1000314" -> "1000412"  [label="DDG: inet_hash_connect(&dccp_death_row, sk)"];
"1000316" -> "1000314"  [label="DDG: &dccp_death_row"];
"1000316" -> "1000314"  [label="DDG: sk"];
"1000314" -> "1000321"  [label="DDG: err"];
"1000316" -> "1000319"  [label="CFG: "];
"1000317" -> "1000316"  [label="AST: "];
"1000319" -> "1000316"  [label="AST: "];
"1000316" -> "1000412"  [label="DDG: &dccp_death_row"];
"1000311" -> "1000316"  [label="DDG: sk"];
"1000104" -> "1000316"  [label="DDG: sk"];
"1000316" -> "1000327"  [label="DDG: sk"];
"1000316" -> "1000396"  [label="DDG: sk"];
"1000311" -> "1000107"  [label="AST: "];
"1000311" -> "1000313"  [label="CFG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000313" -> "1000311"  [label="AST: "];
"1000315" -> "1000311"  [label="CFG: "];
"1000311" -> "1000412"  [label="DDG: DCCP_REQUESTING"];
"1000311" -> "1000412"  [label="DDG: dccp_set_state(sk, DCCP_REQUESTING)"];
"1000303" -> "1000311"  [label="DDG: sk"];
"1000295" -> "1000311"  [label="DDG: sk"];
"1000104" -> "1000311"  [label="DDG: sk"];
"1000303" -> "1000302"  [label="AST: "];
"1000303" -> "1000304"  [label="CFG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000305" -> "1000303"  [label="CFG: "];
"1000295" -> "1000303"  [label="DDG: sk"];
"1000104" -> "1000303"  [label="DDG: sk"];
"1000295" -> "1000294"  [label="AST: "];
"1000295" -> "1000296"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000297" -> "1000295"  [label="CFG: "];
"1000208" -> "1000295"  [label="DDG: sk"];
"1000104" -> "1000295"  [label="DDG: sk"];
"1000208" -> "1000206"  [label="AST: "];
"1000208" -> "1000224"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000211" -> "1000208"  [label="AST: "];
"1000212" -> "1000208"  [label="AST: "];
"1000215" -> "1000208"  [label="AST: "];
"1000217" -> "1000208"  [label="AST: "];
"1000220" -> "1000208"  [label="AST: "];
"1000221" -> "1000208"  [label="AST: "];
"1000222" -> "1000208"  [label="AST: "];
"1000223" -> "1000208"  [label="AST: "];
"1000224" -> "1000208"  [label="AST: "];
"1000206" -> "1000208"  [label="CFG: "];
"1000208" -> "1000412"  [label="DDG: orig_sport"];
"1000208" -> "1000412"  [label="DDG: sk"];
"1000208" -> "1000412"  [label="DDG: &fl4"];
"1000208" -> "1000412"  [label="DDG: sk->sk_bound_dev_if"];
"1000208" -> "1000412"  [label="DDG: orig_dport"];
"1000208" -> "1000412"  [label="DDG: inet->inet_saddr"];
"1000208" -> "1000412"  [label="DDG: nexthop"];
"1000208" -> "1000412"  [label="DDG: IPPROTO_DCCP"];
"1000208" -> "1000412"  [label="DDG: RT_CONN_FLAGS(sk)"];
"1000208" -> "1000412"  [label="DDG: true"];
"1000208" -> "1000206"  [label="DDG: sk->sk_bound_dev_if"];
"1000208" -> "1000206"  [label="DDG: sk"];
"1000208" -> "1000206"  [label="DDG: IPPROTO_DCCP"];
"1000208" -> "1000206"  [label="DDG: RT_CONN_FLAGS(sk)"];
"1000208" -> "1000206"  [label="DDG: inet->inet_saddr"];
"1000208" -> "1000206"  [label="DDG: orig_dport"];
"1000208" -> "1000206"  [label="DDG: nexthop"];
"1000208" -> "1000206"  [label="DDG: true"];
"1000208" -> "1000206"  [label="DDG: &fl4"];
"1000208" -> "1000206"  [label="DDG: orig_sport"];
"1000189" -> "1000208"  [label="DDG: nexthop"];
"1000154" -> "1000208"  [label="DDG: nexthop"];
"1000215" -> "1000208"  [label="DDG: sk"];
"1000196" -> "1000208"  [label="DDG: orig_sport"];
"1000201" -> "1000208"  [label="DDG: orig_dport"];
"1000104" -> "1000208"  [label="DDG: sk"];
"1000208" -> "1000262"  [label="DDG: inet->inet_saddr"];
"1000208" -> "1000327"  [label="DDG: &fl4"];
"1000208" -> "1000327"  [label="DDG: orig_sport"];
"1000208" -> "1000327"  [label="DDG: orig_dport"];
"1000189" -> "1000181"  [label="AST: "];
"1000189" -> "1000191"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000191" -> "1000189"  [label="AST: "];
"1000197" -> "1000189"  [label="CFG: "];
"1000189" -> "1000412"  [label="DDG: inet_opt->opt.faddr"];
"1000154" -> "1000107"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000156" -> "1000154"  [label="AST: "];
"1000164" -> "1000154"  [label="CFG: "];
"1000154" -> "1000412"  [label="DDG: nexthop"];
"1000156" -> "1000154"  [label="DDG: daddr"];
"1000156" -> "1000158"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000158" -> "1000156"  [label="AST: "];
"1000156" -> "1000412"  [label="DDG: daddr"];
"1000156" -> "1000412"  [label="DDG: usin->sin_addr.s_addr"];
"1000156" -> "1000183"  [label="DDG: daddr"];
"1000156" -> "1000288"  [label="DDG: daddr"];
"1000215" -> "1000216"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000218" -> "1000215"  [label="CFG: "];
"1000169" -> "1000215"  [label="DDG: sk"];
"1000104" -> "1000215"  [label="DDG: sk"];
"1000169" -> "1000165"  [label="AST: "];
"1000169" -> "1000170"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000165" -> "1000169"  [label="CFG: "];
"1000169" -> "1000412"  [label="DDG: sk"];
"1000169" -> "1000165"  [label="DDG: sk"];
"1000122" -> "1000169"  [label="DDG: sk"];
"1000104" -> "1000169"  [label="DDG: sk"];
"1000122" -> "1000120"  [label="AST: "];
"1000122" -> "1000123"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000122" -> "1000412"  [label="DDG: sk"];
"1000122" -> "1000120"  [label="DDG: sk"];
"1000117" -> "1000122"  [label="DDG: sk"];
"1000104" -> "1000122"  [label="DDG: sk"];
"1000117" -> "1000115"  [label="AST: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000117" -> "1000115"  [label="DDG: sk"];
"1000104" -> "1000117"  [label="DDG: sk"];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000412"  [label="DDG: sk"];
"1000104" -> "1000327"  [label="DDG: sk"];
"1000104" -> "1000348"  [label="DDG: sk"];
"1000104" -> "1000382"  [label="DDG: sk"];
"1000104" -> "1000396"  [label="DDG: sk"];
"1000196" -> "1000107"  [label="AST: "];
"1000196" -> "1000198"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000198" -> "1000196"  [label="AST: "];
"1000202" -> "1000196"  [label="CFG: "];
"1000196" -> "1000412"  [label="DDG: inet->inet_sport"];
"1000201" -> "1000107"  [label="AST: "];
"1000201" -> "1000203"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000203" -> "1000201"  [label="AST: "];
"1000207" -> "1000201"  [label="CFG: "];
"1000201" -> "1000412"  [label="DDG: usin->sin_port"];
"1000321" -> "1000320"  [label="AST: "];
"1000321" -> "1000323"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000323" -> "1000321"  [label="AST: "];
"1000324" -> "1000321"  [label="CFG: "];
"1000326" -> "1000321"  [label="CFG: "];
"1000321" -> "1000412"  [label="DDG: err"];
"1000321" -> "1000412"  [label="DDG: err != 0"];
"1000321" -> "1000393"  [label="DDG: err"];
"1000393" -> "1000107"  [label="AST: "];
"1000393" -> "1000394"  [label="CFG: "];
"1000394" -> "1000393"  [label="AST: "];
"1000412" -> "1000393"  [label="CFG: "];
"1000393" -> "1000412"  [label="DDG: <RET>"];
"1000394" -> "1000393"  [label="DDG: err"];
"1000388" -> "1000393"  [label="DDG: err"];
}
