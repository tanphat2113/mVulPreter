digraph "0_linux_9de7922bc709eee2f609cd01d98aaedc4cf5ea74_2@pointer" {
"1000164" [label="(Call,sctp_sf_discard_chunk(net, ep, asoc, type, arg, commands))"];
"1000108" [label="(MethodParameterIn,struct net *net)"];
"1000109" [label="(MethodParameterIn,const struct sctp_endpoint *ep)"];
"1000135" [label="(Call,sctp_vtag_verify(asconf_ack, asoc))"];
"1000116" [label="(Call,*asconf_ack = arg)"];
"1000112" [label="(MethodParameterIn,void *arg)"];
"1000110" [label="(MethodParameterIn,const struct sctp_association *asoc)"];
"1000111" [label="(MethodParameterIn,const sctp_subtype_t type)"];
"1000113" [label="(MethodParameterIn,sctp_cmd_seq_t *commands)"];
"1000163" [label="(Return,return sctp_sf_discard_chunk(net, ep, asoc, type, arg, commands);)"];
"1000121" [label="(Identifier,last_asconf)"];
"1000346" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_REPLY,\n\t\t\t\t\tSCTP_CHUNK(abort)))"];
"1000110" [label="(MethodParameterIn,const struct sctp_association *asoc)"];
"1000151" [label="(ControlStructure,if (!net->sctp.addip_noauth && !asconf_ack->auth))"];
"1000277" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_TIMER_STOP,\n\t\t\t\tSCTP_TO(SCTP_EVENT_TIMEOUT_T4_RTO)))"];
"1000313" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_TIMER_STOP,\n\t\t\t\tSCTP_TO(SCTP_EVENT_TIMEOUT_T4_RTO)))"];
"1000360" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_ASSOC_FAILED,\n\t\t\t\tSCTP_PERR(SCTP_ERROR_ASCONF_ACK)))"];
"1000282" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_DISCARD_PACKET, SCTP_NULL()))"];
"1000296" [label="(Call,SCTP_INC_STATS(net, SCTP_MIB_ABORTEDS))"];
"1000114" [label="(Block,)"];
"1000113" [label="(MethodParameterIn,sctp_cmd_seq_t *commands)"];
"1000178" [label="(Call,sctp_sf_violation_chunklen(net, ep, asoc, type, arg,\n\t\t\t\t\t\t  commands))"];
"1000326" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_SEND_NEXT_ASCONF,\n\t\t\t\t\tSCTP_NULL()))"];
"1000112" [label="(MethodParameterIn,void *arg)"];
"1000291" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_ASSOC_FAILED,\n\t\t\t\tSCTP_PERR(SCTP_ERROR_ASCONF_ACK)))"];
"1000299" [label="(Call,SCTP_DEC_STATS(net, SCTP_MIB_CURRESTAB))"];
"1000164" [label="(Call,sctp_sf_discard_chunk(net, ep, asoc, type, arg, commands))"];
"1000168" [label="(Identifier,type)"];
"1000365" [label="(Call,SCTP_INC_STATS(net, SCTP_MIB_ABORTEDS))"];
"1000202" [label="(Call,sctp_verify_asconf(asoc, asconf_ack, false, &err_param))"];
"1000375" [label="(MethodReturn,sctp_disposition_t)"];
"1000169" [label="(Identifier,arg)"];
"1000116" [label="(Call,*asconf_ack = arg)"];
"1000351" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_DISCARD_PACKET, SCTP_NULL()))"];
"1000334" [label="(Call,sctp_make_abort(asoc, asconf_ack,\n\t\t\t\t\tsizeof(sctp_errhdr_t)))"];
"1000137" [label="(Identifier,asoc)"];
"1000135" [label="(Call,sctp_vtag_verify(asconf_ack, asoc))"];
"1000118" [label="(Identifier,arg)"];
"1000260" [label="(Call,sctp_make_abort(asoc, asconf_ack,\n\t\t\t\t\tsizeof(sctp_errhdr_t)))"];
"1000286" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_SET_SK_ERR,\n\t\t\t\tSCTP_ERROR(ECONNABORTED)))"];
"1000111" [label="(MethodParameterIn,const sctp_subtype_t type)"];
"1000209" [label="(Call,sctp_sf_violation_paramlen(net, ep, asoc, type, arg,\n \t\t\t   (void *)err_param, commands))"];
"1000136" [label="(Identifier,asconf_ack)"];
"1000355" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_SET_SK_ERR,\n\t\t\t\tSCTP_ERROR(ECONNABORTED)))"];
"1000144" [label="(Call,sctp_sf_pdiscard(net, ep, asoc, type, arg, commands))"];
"1000321" [label="(Call,(struct sctp_association *)asoc)"];
"1000139" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_REPORT_BAD_TAG,\n\t\t\t\tSCTP_NULL()))"];
"1000117" [label="(Identifier,asconf_ack)"];
"1000163" [label="(Return,return sctp_sf_discard_chunk(net, ep, asoc, type, arg, commands);)"];
"1000109" [label="(MethodParameterIn,const struct sctp_endpoint *ep)"];
"1000108" [label="(MethodParameterIn,struct net *net)"];
"1000166" [label="(Identifier,ep)"];
"1000368" [label="(Call,SCTP_DEC_STATS(net, SCTP_MIB_CURRESTAB))"];
"1000272" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_REPLY,\n\t\t\t\t\tSCTP_CHUNK(abort)))"];
"1000165" [label="(Identifier,net)"];
"1000170" [label="(Identifier,commands)"];
"1000173" [label="(Call,sctp_chunk_length_valid(asconf_ack, sizeof(sctp_addip_chunk_t)))"];
"1000167" [label="(Identifier,asoc)"];
"1000134" [label="(Call,!sctp_vtag_verify(asconf_ack, asoc))"];
"1000164" -> "1000163"  [label="AST: "];
"1000164" -> "1000170"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000166" -> "1000164"  [label="AST: "];
"1000167" -> "1000164"  [label="AST: "];
"1000168" -> "1000164"  [label="AST: "];
"1000169" -> "1000164"  [label="AST: "];
"1000170" -> "1000164"  [label="AST: "];
"1000163" -> "1000164"  [label="CFG: "];
"1000164" -> "1000375"  [label="DDG: sctp_sf_discard_chunk(net, ep, asoc, type, arg, commands)"];
"1000164" -> "1000375"  [label="DDG: type"];
"1000164" -> "1000375"  [label="DDG: arg"];
"1000164" -> "1000375"  [label="DDG: ep"];
"1000164" -> "1000375"  [label="DDG: asoc"];
"1000164" -> "1000375"  [label="DDG: commands"];
"1000164" -> "1000375"  [label="DDG: net"];
"1000164" -> "1000163"  [label="DDG: sctp_sf_discard_chunk(net, ep, asoc, type, arg, commands)"];
"1000108" -> "1000164"  [label="DDG: net"];
"1000109" -> "1000164"  [label="DDG: ep"];
"1000135" -> "1000164"  [label="DDG: asoc"];
"1000110" -> "1000164"  [label="DDG: asoc"];
"1000111" -> "1000164"  [label="DDG: type"];
"1000112" -> "1000164"  [label="DDG: arg"];
"1000113" -> "1000164"  [label="DDG: commands"];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000375"  [label="DDG: net"];
"1000108" -> "1000144"  [label="DDG: net"];
"1000108" -> "1000178"  [label="DDG: net"];
"1000108" -> "1000209"  [label="DDG: net"];
"1000108" -> "1000296"  [label="DDG: net"];
"1000108" -> "1000299"  [label="DDG: net"];
"1000108" -> "1000365"  [label="DDG: net"];
"1000108" -> "1000368"  [label="DDG: net"];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000375"  [label="DDG: ep"];
"1000109" -> "1000144"  [label="DDG: ep"];
"1000109" -> "1000178"  [label="DDG: ep"];
"1000109" -> "1000209"  [label="DDG: ep"];
"1000135" -> "1000134"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000134" -> "1000135"  [label="CFG: "];
"1000135" -> "1000375"  [label="DDG: asconf_ack"];
"1000135" -> "1000134"  [label="DDG: asconf_ack"];
"1000135" -> "1000134"  [label="DDG: asoc"];
"1000116" -> "1000135"  [label="DDG: asconf_ack"];
"1000110" -> "1000135"  [label="DDG: asoc"];
"1000135" -> "1000144"  [label="DDG: asoc"];
"1000135" -> "1000173"  [label="DDG: asconf_ack"];
"1000135" -> "1000178"  [label="DDG: asoc"];
"1000135" -> "1000202"  [label="DDG: asoc"];
"1000116" -> "1000114"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000121" -> "1000116"  [label="CFG: "];
"1000116" -> "1000375"  [label="DDG: arg"];
"1000112" -> "1000116"  [label="DDG: arg"];
"1000112" -> "1000107"  [label="AST: "];
"1000112" -> "1000375"  [label="DDG: arg"];
"1000112" -> "1000144"  [label="DDG: arg"];
"1000112" -> "1000178"  [label="DDG: arg"];
"1000112" -> "1000209"  [label="DDG: arg"];
"1000110" -> "1000107"  [label="AST: "];
"1000110" -> "1000375"  [label="DDG: asoc"];
"1000110" -> "1000144"  [label="DDG: asoc"];
"1000110" -> "1000178"  [label="DDG: asoc"];
"1000110" -> "1000202"  [label="DDG: asoc"];
"1000110" -> "1000209"  [label="DDG: asoc"];
"1000110" -> "1000260"  [label="DDG: asoc"];
"1000110" -> "1000321"  [label="DDG: asoc"];
"1000110" -> "1000334"  [label="DDG: asoc"];
"1000111" -> "1000107"  [label="AST: "];
"1000111" -> "1000375"  [label="DDG: type"];
"1000111" -> "1000144"  [label="DDG: type"];
"1000111" -> "1000178"  [label="DDG: type"];
"1000111" -> "1000209"  [label="DDG: type"];
"1000113" -> "1000107"  [label="AST: "];
"1000113" -> "1000375"  [label="DDG: commands"];
"1000113" -> "1000139"  [label="DDG: commands"];
"1000113" -> "1000144"  [label="DDG: commands"];
"1000113" -> "1000178"  [label="DDG: commands"];
"1000113" -> "1000209"  [label="DDG: commands"];
"1000113" -> "1000272"  [label="DDG: commands"];
"1000113" -> "1000277"  [label="DDG: commands"];
"1000113" -> "1000282"  [label="DDG: commands"];
"1000113" -> "1000286"  [label="DDG: commands"];
"1000113" -> "1000291"  [label="DDG: commands"];
"1000113" -> "1000313"  [label="DDG: commands"];
"1000113" -> "1000326"  [label="DDG: commands"];
"1000113" -> "1000346"  [label="DDG: commands"];
"1000113" -> "1000351"  [label="DDG: commands"];
"1000113" -> "1000355"  [label="DDG: commands"];
"1000113" -> "1000360"  [label="DDG: commands"];
"1000163" -> "1000151"  [label="AST: "];
"1000375" -> "1000163"  [label="CFG: "];
"1000163" -> "1000375"  [label="DDG: <RET>"];
}
