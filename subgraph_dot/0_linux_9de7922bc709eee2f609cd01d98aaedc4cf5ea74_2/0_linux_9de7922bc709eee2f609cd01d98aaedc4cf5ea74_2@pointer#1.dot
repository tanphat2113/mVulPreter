digraph "0_linux_9de7922bc709eee2f609cd01d98aaedc4cf5ea74_2@pointer" {
"1000342" [label="(Call,sctp_init_cause(abort, SCTP_ERROR_RSRC_LOW, 0))"];
"1000332" [label="(Call,abort = sctp_make_abort(asoc, asconf_ack,\n\t\t\t\t\tsizeof(sctp_errhdr_t)))"];
"1000334" [label="(Call,sctp_make_abort(asoc, asconf_ack,\n\t\t\t\t\tsizeof(sctp_errhdr_t)))"];
"1000321" [label="(Call,(struct sctp_association *)asoc)"];
"1000202" [label="(Call,sctp_verify_asconf(asoc, asconf_ack, false, &err_param))"];
"1000135" [label="(Call,sctp_vtag_verify(asconf_ack, asoc))"];
"1000116" [label="(Call,*asconf_ack = arg)"];
"1000112" [label="(MethodParameterIn,void *arg)"];
"1000110" [label="(MethodParameterIn,const struct sctp_association *asoc)"];
"1000173" [label="(Call,sctp_chunk_length_valid(asconf_ack, sizeof(sctp_addip_chunk_t)))"];
"1000320" [label="(Call,sctp_process_asconf_ack((struct sctp_association *)asoc,\n\t\t\t\t\t     asconf_ack))"];
"1000349" [label="(Call,SCTP_CHUNK(abort))"];
"1000346" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_REPLY,\n\t\t\t\t\tSCTP_CHUNK(abort)))"];
"1000351" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_DISCARD_PACKET, SCTP_NULL()))"];
"1000355" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_SET_SK_ERR,\n\t\t\t\tSCTP_ERROR(ECONNABORTED)))"];
"1000360" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_ASSOC_FAILED,\n\t\t\t\tSCTP_PERR(SCTP_ERROR_ASCONF_ACK)))"];
"1000345" [label="(Literal,0)"];
"1000121" [label="(Identifier,last_asconf)"];
"1000206" [label="(Call,&err_param)"];
"1000346" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_REPLY,\n\t\t\t\t\tSCTP_CHUNK(abort)))"];
"1000204" [label="(Identifier,asconf_ack)"];
"1000342" [label="(Call,sctp_init_cause(abort, SCTP_ERROR_RSRC_LOW, 0))"];
"1000349" [label="(Call,SCTP_CHUNK(abort))"];
"1000340" [label="(Identifier,abort)"];
"1000110" [label="(MethodParameterIn,const struct sctp_association *asoc)"];
"1000354" [label="(Call,SCTP_NULL())"];
"1000363" [label="(Call,SCTP_PERR(SCTP_ERROR_ASCONF_ACK))"];
"1000343" [label="(Identifier,abort)"];
"1000313" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_TIMER_STOP,\n\t\t\t\tSCTP_TO(SCTP_EVENT_TIMEOUT_T4_RTO)))"];
"1000360" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_ASSOC_FAILED,\n\t\t\t\tSCTP_PERR(SCTP_ERROR_ASCONF_ACK)))"];
"1000172" [label="(Call,!sctp_chunk_length_valid(asconf_ack, sizeof(sctp_addip_chunk_t)))"];
"1000114" [label="(Block,)"];
"1000352" [label="(Identifier,commands)"];
"1000319" [label="(Call,!sctp_process_asconf_ack((struct sctp_association *)asoc,\n\t\t\t\t\t     asconf_ack))"];
"1000178" [label="(Call,sctp_sf_violation_chunklen(net, ep, asoc, type, arg,\n\t\t\t\t\t\t  commands))"];
"1000113" [label="(MethodParameterIn,sctp_cmd_seq_t *commands)"];
"1000336" [label="(Identifier,asconf_ack)"];
"1000335" [label="(Identifier,asoc)"];
"1000201" [label="(Call,!sctp_verify_asconf(asoc, asconf_ack, false, &err_param))"];
"1000112" [label="(MethodParameterIn,void *arg)"];
"1000358" [label="(Call,SCTP_ERROR(ECONNABORTED))"];
"1000164" [label="(Call,sctp_sf_discard_chunk(net, ep, asoc, type, arg, commands))"];
"1000324" [label="(Identifier,asconf_ack)"];
"1000202" [label="(Call,sctp_verify_asconf(asoc, asconf_ack, false, &err_param))"];
"1000375" [label="(MethodReturn,sctp_disposition_t)"];
"1000351" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_DISCARD_PACKET, SCTP_NULL()))"];
"1000116" [label="(Call,*asconf_ack = arg)"];
"1000175" [label="(Call,sizeof(sctp_addip_chunk_t))"];
"1000334" [label="(Call,sctp_make_abort(asoc, asconf_ack,\n\t\t\t\t\tsizeof(sctp_errhdr_t)))"];
"1000357" [label="(Identifier,SCTP_CMD_SET_SK_ERR)"];
"1000137" [label="(Identifier,asoc)"];
"1000356" [label="(Identifier,commands)"];
"1000135" [label="(Call,sctp_vtag_verify(asconf_ack, asoc))"];
"1000260" [label="(Call,sctp_make_abort(asoc, asconf_ack,\n\t\t\t\t\tsizeof(sctp_errhdr_t)))"];
"1000118" [label="(Identifier,arg)"];
"1000205" [label="(Identifier,false)"];
"1000323" [label="(Identifier,asoc)"];
"1000209" [label="(Call,sctp_sf_violation_paramlen(net, ep, asoc, type, arg,\n \t\t\t   (void *)err_param, commands))"];
"1000353" [label="(Identifier,SCTP_CMD_DISCARD_PACKET)"];
"1000174" [label="(Identifier,asconf_ack)"];
"1000136" [label="(Identifier,asconf_ack)"];
"1000355" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_SET_SK_ERR,\n\t\t\t\tSCTP_ERROR(ECONNABORTED)))"];
"1000337" [label="(Call,sizeof(sctp_errhdr_t))"];
"1000312" [label="(Block,)"];
"1000144" [label="(Call,sctp_sf_pdiscard(net, ep, asoc, type, arg, commands))"];
"1000321" [label="(Call,(struct sctp_association *)asoc)"];
"1000362" [label="(Identifier,SCTP_CMD_ASSOC_FAILED)"];
"1000117" [label="(Identifier,asconf_ack)"];
"1000344" [label="(Identifier,SCTP_ERROR_RSRC_LOW)"];
"1000347" [label="(Identifier,commands)"];
"1000320" [label="(Call,sctp_process_asconf_ack((struct sctp_association *)asoc,\n\t\t\t\t\t     asconf_ack))"];
"1000203" [label="(Identifier,asoc)"];
"1000361" [label="(Identifier,commands)"];
"1000350" [label="(Identifier,abort)"];
"1000348" [label="(Identifier,SCTP_CMD_REPLY)"];
"1000366" [label="(Identifier,net)"];
"1000341" [label="(Block,)"];
"1000173" [label="(Call,sctp_chunk_length_valid(asconf_ack, sizeof(sctp_addip_chunk_t)))"];
"1000332" [label="(Call,abort = sctp_make_abort(asoc, asconf_ack,\n\t\t\t\t\tsizeof(sctp_errhdr_t)))"];
"1000333" [label="(Identifier,abort)"];
"1000134" [label="(Call,!sctp_vtag_verify(asconf_ack, asoc))"];
"1000342" -> "1000341"  [label="AST: "];
"1000342" -> "1000345"  [label="CFG: "];
"1000343" -> "1000342"  [label="AST: "];
"1000344" -> "1000342"  [label="AST: "];
"1000345" -> "1000342"  [label="AST: "];
"1000347" -> "1000342"  [label="CFG: "];
"1000342" -> "1000375"  [label="DDG: SCTP_ERROR_RSRC_LOW"];
"1000342" -> "1000375"  [label="DDG: sctp_init_cause(abort, SCTP_ERROR_RSRC_LOW, 0)"];
"1000332" -> "1000342"  [label="DDG: abort"];
"1000342" -> "1000349"  [label="DDG: abort"];
"1000332" -> "1000312"  [label="AST: "];
"1000332" -> "1000334"  [label="CFG: "];
"1000333" -> "1000332"  [label="AST: "];
"1000334" -> "1000332"  [label="AST: "];
"1000340" -> "1000332"  [label="CFG: "];
"1000332" -> "1000375"  [label="DDG: sctp_make_abort(asoc, asconf_ack,\n\t\t\t\t\tsizeof(sctp_errhdr_t))"];
"1000332" -> "1000375"  [label="DDG: abort"];
"1000334" -> "1000332"  [label="DDG: asoc"];
"1000334" -> "1000332"  [label="DDG: asconf_ack"];
"1000334" -> "1000337"  [label="CFG: "];
"1000335" -> "1000334"  [label="AST: "];
"1000336" -> "1000334"  [label="AST: "];
"1000337" -> "1000334"  [label="AST: "];
"1000334" -> "1000375"  [label="DDG: asconf_ack"];
"1000334" -> "1000375"  [label="DDG: asoc"];
"1000321" -> "1000334"  [label="DDG: asoc"];
"1000110" -> "1000334"  [label="DDG: asoc"];
"1000320" -> "1000334"  [label="DDG: asconf_ack"];
"1000321" -> "1000320"  [label="AST: "];
"1000321" -> "1000323"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000323" -> "1000321"  [label="AST: "];
"1000324" -> "1000321"  [label="CFG: "];
"1000321" -> "1000375"  [label="DDG: asoc"];
"1000321" -> "1000320"  [label="DDG: asoc"];
"1000202" -> "1000321"  [label="DDG: asoc"];
"1000110" -> "1000321"  [label="DDG: asoc"];
"1000202" -> "1000201"  [label="AST: "];
"1000202" -> "1000206"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000205" -> "1000202"  [label="AST: "];
"1000206" -> "1000202"  [label="AST: "];
"1000201" -> "1000202"  [label="CFG: "];
"1000202" -> "1000375"  [label="DDG: &err_param"];
"1000202" -> "1000375"  [label="DDG: asoc"];
"1000202" -> "1000375"  [label="DDG: false"];
"1000202" -> "1000375"  [label="DDG: asconf_ack"];
"1000202" -> "1000201"  [label="DDG: asoc"];
"1000202" -> "1000201"  [label="DDG: asconf_ack"];
"1000202" -> "1000201"  [label="DDG: false"];
"1000202" -> "1000201"  [label="DDG: &err_param"];
"1000135" -> "1000202"  [label="DDG: asoc"];
"1000110" -> "1000202"  [label="DDG: asoc"];
"1000173" -> "1000202"  [label="DDG: asconf_ack"];
"1000202" -> "1000209"  [label="DDG: asoc"];
"1000202" -> "1000260"  [label="DDG: asoc"];
"1000202" -> "1000260"  [label="DDG: asconf_ack"];
"1000202" -> "1000320"  [label="DDG: asconf_ack"];
"1000135" -> "1000134"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000134" -> "1000135"  [label="CFG: "];
"1000135" -> "1000375"  [label="DDG: asconf_ack"];
"1000135" -> "1000134"  [label="DDG: asconf_ack"];
"1000135" -> "1000134"  [label="DDG: asoc"];
"1000116" -> "1000135"  [label="DDG: asconf_ack"];
"1000110" -> "1000135"  [label="DDG: asoc"];
"1000135" -> "1000144"  [label="DDG: asoc"];
"1000135" -> "1000164"  [label="DDG: asoc"];
"1000135" -> "1000173"  [label="DDG: asconf_ack"];
"1000135" -> "1000178"  [label="DDG: asoc"];
"1000116" -> "1000114"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000121" -> "1000116"  [label="CFG: "];
"1000116" -> "1000375"  [label="DDG: arg"];
"1000112" -> "1000116"  [label="DDG: arg"];
"1000112" -> "1000107"  [label="AST: "];
"1000112" -> "1000375"  [label="DDG: arg"];
"1000112" -> "1000144"  [label="DDG: arg"];
"1000112" -> "1000164"  [label="DDG: arg"];
"1000112" -> "1000178"  [label="DDG: arg"];
"1000112" -> "1000209"  [label="DDG: arg"];
"1000110" -> "1000107"  [label="AST: "];
"1000110" -> "1000375"  [label="DDG: asoc"];
"1000110" -> "1000144"  [label="DDG: asoc"];
"1000110" -> "1000164"  [label="DDG: asoc"];
"1000110" -> "1000178"  [label="DDG: asoc"];
"1000110" -> "1000209"  [label="DDG: asoc"];
"1000110" -> "1000260"  [label="DDG: asoc"];
"1000173" -> "1000172"  [label="AST: "];
"1000173" -> "1000175"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000175" -> "1000173"  [label="AST: "];
"1000172" -> "1000173"  [label="CFG: "];
"1000173" -> "1000375"  [label="DDG: asconf_ack"];
"1000173" -> "1000172"  [label="DDG: asconf_ack"];
"1000320" -> "1000319"  [label="AST: "];
"1000320" -> "1000324"  [label="CFG: "];
"1000324" -> "1000320"  [label="AST: "];
"1000319" -> "1000320"  [label="CFG: "];
"1000320" -> "1000375"  [label="DDG: asconf_ack"];
"1000320" -> "1000375"  [label="DDG: (struct sctp_association *)asoc"];
"1000320" -> "1000319"  [label="DDG: (struct sctp_association *)asoc"];
"1000320" -> "1000319"  [label="DDG: asconf_ack"];
"1000349" -> "1000346"  [label="AST: "];
"1000349" -> "1000350"  [label="CFG: "];
"1000350" -> "1000349"  [label="AST: "];
"1000346" -> "1000349"  [label="CFG: "];
"1000349" -> "1000375"  [label="DDG: abort"];
"1000349" -> "1000346"  [label="DDG: abort"];
"1000346" -> "1000341"  [label="AST: "];
"1000347" -> "1000346"  [label="AST: "];
"1000348" -> "1000346"  [label="AST: "];
"1000352" -> "1000346"  [label="CFG: "];
"1000346" -> "1000375"  [label="DDG: SCTP_CHUNK(abort)"];
"1000346" -> "1000375"  [label="DDG: SCTP_CMD_REPLY"];
"1000346" -> "1000375"  [label="DDG: sctp_add_cmd_sf(commands, SCTP_CMD_REPLY,\n\t\t\t\t\tSCTP_CHUNK(abort))"];
"1000313" -> "1000346"  [label="DDG: commands"];
"1000113" -> "1000346"  [label="DDG: commands"];
"1000346" -> "1000351"  [label="DDG: commands"];
"1000351" -> "1000312"  [label="AST: "];
"1000351" -> "1000354"  [label="CFG: "];
"1000352" -> "1000351"  [label="AST: "];
"1000353" -> "1000351"  [label="AST: "];
"1000354" -> "1000351"  [label="AST: "];
"1000356" -> "1000351"  [label="CFG: "];
"1000351" -> "1000375"  [label="DDG: sctp_add_cmd_sf(commands, SCTP_CMD_DISCARD_PACKET, SCTP_NULL())"];
"1000351" -> "1000375"  [label="DDG: SCTP_CMD_DISCARD_PACKET"];
"1000351" -> "1000375"  [label="DDG: SCTP_NULL()"];
"1000313" -> "1000351"  [label="DDG: commands"];
"1000113" -> "1000351"  [label="DDG: commands"];
"1000351" -> "1000355"  [label="DDG: commands"];
"1000355" -> "1000312"  [label="AST: "];
"1000355" -> "1000358"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000357" -> "1000355"  [label="AST: "];
"1000358" -> "1000355"  [label="AST: "];
"1000361" -> "1000355"  [label="CFG: "];
"1000355" -> "1000375"  [label="DDG: SCTP_CMD_SET_SK_ERR"];
"1000355" -> "1000375"  [label="DDG: SCTP_ERROR(ECONNABORTED)"];
"1000355" -> "1000375"  [label="DDG: sctp_add_cmd_sf(commands, SCTP_CMD_SET_SK_ERR,\n\t\t\t\tSCTP_ERROR(ECONNABORTED))"];
"1000113" -> "1000355"  [label="DDG: commands"];
"1000358" -> "1000355"  [label="DDG: ECONNABORTED"];
"1000355" -> "1000360"  [label="DDG: commands"];
"1000360" -> "1000312"  [label="AST: "];
"1000360" -> "1000363"  [label="CFG: "];
"1000361" -> "1000360"  [label="AST: "];
"1000362" -> "1000360"  [label="AST: "];
"1000363" -> "1000360"  [label="AST: "];
"1000366" -> "1000360"  [label="CFG: "];
"1000360" -> "1000375"  [label="DDG: commands"];
"1000360" -> "1000375"  [label="DDG: sctp_add_cmd_sf(commands, SCTP_CMD_ASSOC_FAILED,\n\t\t\t\tSCTP_PERR(SCTP_ERROR_ASCONF_ACK))"];
"1000360" -> "1000375"  [label="DDG: SCTP_CMD_ASSOC_FAILED"];
"1000360" -> "1000375"  [label="DDG: SCTP_PERR(SCTP_ERROR_ASCONF_ACK)"];
"1000113" -> "1000360"  [label="DDG: commands"];
"1000363" -> "1000360"  [label="DDG: SCTP_ERROR_ASCONF_ACK"];
}
