digraph "0_Android_8d87321b704cb3f88e8cae668937d001fd63d5e3@API" {
"1000968" [label="(Call,size = data.readInt64())"];
"1000976" [label="(Call,allocateBuffer(\n                    node, port_index, size, &buffer, &buffer_data))"];
"1000974" [label="(Call,err = allocateBuffer(\n                    node, port_index, size, &buffer, &buffer_data))"];
"1000984" [label="(Call,reply->writeInt32(err))"];
"1000987" [label="(Call,err == OK)"];
"1000976" [label="(Call,allocateBuffer(\n                    node, port_index, size, &buffer, &buffer_data))"];
"1000982" [label="(Call,&buffer_data)"];
"1000987" [label="(Call,err == OK)"];
"1001207" [label="(MethodReturn,status_t)"];
"1000989" [label="(Identifier,OK)"];
"1000969" [label="(Identifier,size)"];
"1001000" [label="(Identifier,NO_ERROR)"];
"1000986" [label="(ControlStructure,if (err == OK))"];
"1000975" [label="(Identifier,err)"];
"1000977" [label="(Identifier,node)"];
"1000980" [label="(Call,&buffer)"];
"1000978" [label="(Identifier,port_index)"];
"1000955" [label="(Call,isSecure(node))"];
"1000985" [label="(Identifier,err)"];
"1000974" [label="(Call,err = allocateBuffer(\n                    node, port_index, size, &buffer, &buffer_data))"];
"1000979" [label="(Identifier,size)"];
"1000988" [label="(Identifier,err)"];
"1000937" [label="(Block,)"];
"1000984" [label="(Call,reply->writeInt32(err))"];
"1000970" [label="(Call,data.readInt64())"];
"1000968" [label="(Call,size = data.readInt64())"];
"1000957" [label="(Call,port_index != 0)"];
"1000949" [label="(Call,port_index = data.readInt32())"];
"1000968" -> "1000937"  [label="AST: "];
"1000968" -> "1000970"  [label="CFG: "];
"1000969" -> "1000968"  [label="AST: "];
"1000970" -> "1000968"  [label="AST: "];
"1000975" -> "1000968"  [label="CFG: "];
"1000968" -> "1001207"  [label="DDG: data.readInt64()"];
"1000968" -> "1000976"  [label="DDG: size"];
"1000976" -> "1000974"  [label="AST: "];
"1000976" -> "1000982"  [label="CFG: "];
"1000977" -> "1000976"  [label="AST: "];
"1000978" -> "1000976"  [label="AST: "];
"1000979" -> "1000976"  [label="AST: "];
"1000980" -> "1000976"  [label="AST: "];
"1000982" -> "1000976"  [label="AST: "];
"1000974" -> "1000976"  [label="CFG: "];
"1000976" -> "1001207"  [label="DDG: &buffer_data"];
"1000976" -> "1001207"  [label="DDG: size"];
"1000976" -> "1001207"  [label="DDG: node"];
"1000976" -> "1001207"  [label="DDG: &buffer"];
"1000976" -> "1001207"  [label="DDG: port_index"];
"1000976" -> "1000974"  [label="DDG: size"];
"1000976" -> "1000974"  [label="DDG: port_index"];
"1000976" -> "1000974"  [label="DDG: &buffer_data"];
"1000976" -> "1000974"  [label="DDG: node"];
"1000976" -> "1000974"  [label="DDG: &buffer"];
"1000955" -> "1000976"  [label="DDG: node"];
"1000949" -> "1000976"  [label="DDG: port_index"];
"1000957" -> "1000976"  [label="DDG: port_index"];
"1000974" -> "1000937"  [label="AST: "];
"1000975" -> "1000974"  [label="AST: "];
"1000985" -> "1000974"  [label="CFG: "];
"1000974" -> "1001207"  [label="DDG: allocateBuffer(\n                    node, port_index, size, &buffer, &buffer_data)"];
"1000974" -> "1000984"  [label="DDG: err"];
"1000984" -> "1000937"  [label="AST: "];
"1000984" -> "1000985"  [label="CFG: "];
"1000985" -> "1000984"  [label="AST: "];
"1000988" -> "1000984"  [label="CFG: "];
"1000984" -> "1001207"  [label="DDG: reply->writeInt32(err)"];
"1000984" -> "1000987"  [label="DDG: err"];
"1000987" -> "1000986"  [label="AST: "];
"1000987" -> "1000989"  [label="CFG: "];
"1000988" -> "1000987"  [label="AST: "];
"1000989" -> "1000987"  [label="AST: "];
"1000993" -> "1000987"  [label="CFG: "];
"1001000" -> "1000987"  [label="CFG: "];
"1000987" -> "1001207"  [label="DDG: err"];
"1000987" -> "1001207"  [label="DDG: OK"];
"1000987" -> "1001207"  [label="DDG: err == OK"];
}
