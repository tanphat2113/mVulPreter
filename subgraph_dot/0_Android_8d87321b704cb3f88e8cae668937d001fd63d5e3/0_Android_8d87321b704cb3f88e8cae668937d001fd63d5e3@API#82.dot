digraph "0_Android_8d87321b704cb3f88e8cae668937d001fd63d5e3@API" {
"1001144" [label="(Call,timestamp = data.readInt64())"];
"1001154" [label="(Call,emptyBuffer(\n                    node, buffer, range_offset, range_length, flags, timestamp, fenceFd))"];
"1001153" [label="(Call,reply->writeInt32(emptyBuffer(\n                    node, buffer, range_offset, range_length, flags, timestamp, fenceFd)))"];
"1001207" [label="(MethodReturn,status_t)"];
"1000105" [label="(MethodParameterIn,uint32_t flags)"];
"1001132" [label="(Call,range_offset = data.readInt32())"];
"1001144" [label="(Call,timestamp = data.readInt64())"];
"1001146" [label="(Call,data.readInt64())"];
"1001163" [label="(Identifier,NO_ERROR)"];
"1001126" [label="(Call,buffer = (buffer_id)data.readInt32())"];
"1001149" [label="(Identifier,haveFence)"];
"1001158" [label="(Identifier,range_length)"];
"1001120" [label="(Call,node = (node_id)data.readInt32())"];
"1001156" [label="(Identifier,buffer)"];
"1001145" [label="(Identifier,timestamp)"];
"1001136" [label="(Call,range_length = data.readInt32())"];
"1001160" [label="(Identifier,timestamp)"];
"1001155" [label="(Identifier,node)"];
"1001159" [label="(Identifier,flags)"];
"1001157" [label="(Identifier,range_offset)"];
"1001140" [label="(Call,flags = data.readInt32())"];
"1001114" [label="(Block,)"];
"1001153" [label="(Call,reply->writeInt32(emptyBuffer(\n                    node, buffer, range_offset, range_length, flags, timestamp, fenceFd)))"];
"1001161" [label="(Identifier,fenceFd)"];
"1001154" [label="(Call,emptyBuffer(\n                    node, buffer, range_offset, range_length, flags, timestamp, fenceFd))"];
"1001144" -> "1001114"  [label="AST: "];
"1001144" -> "1001146"  [label="CFG: "];
"1001145" -> "1001144"  [label="AST: "];
"1001146" -> "1001144"  [label="AST: "];
"1001149" -> "1001144"  [label="CFG: "];
"1001144" -> "1001207"  [label="DDG: data.readInt64()"];
"1001144" -> "1001154"  [label="DDG: timestamp"];
"1001154" -> "1001153"  [label="AST: "];
"1001154" -> "1001161"  [label="CFG: "];
"1001155" -> "1001154"  [label="AST: "];
"1001156" -> "1001154"  [label="AST: "];
"1001157" -> "1001154"  [label="AST: "];
"1001158" -> "1001154"  [label="AST: "];
"1001159" -> "1001154"  [label="AST: "];
"1001160" -> "1001154"  [label="AST: "];
"1001161" -> "1001154"  [label="AST: "];
"1001153" -> "1001154"  [label="CFG: "];
"1001154" -> "1001207"  [label="DDG: node"];
"1001154" -> "1001207"  [label="DDG: buffer"];
"1001154" -> "1001207"  [label="DDG: timestamp"];
"1001154" -> "1001207"  [label="DDG: fenceFd"];
"1001154" -> "1001207"  [label="DDG: flags"];
"1001154" -> "1001207"  [label="DDG: range_length"];
"1001154" -> "1001207"  [label="DDG: range_offset"];
"1001154" -> "1001153"  [label="DDG: range_length"];
"1001154" -> "1001153"  [label="DDG: range_offset"];
"1001154" -> "1001153"  [label="DDG: flags"];
"1001154" -> "1001153"  [label="DDG: timestamp"];
"1001154" -> "1001153"  [label="DDG: fenceFd"];
"1001154" -> "1001153"  [label="DDG: node"];
"1001154" -> "1001153"  [label="DDG: buffer"];
"1001120" -> "1001154"  [label="DDG: node"];
"1001126" -> "1001154"  [label="DDG: buffer"];
"1001132" -> "1001154"  [label="DDG: range_offset"];
"1001136" -> "1001154"  [label="DDG: range_length"];
"1001140" -> "1001154"  [label="DDG: flags"];
"1000105" -> "1001154"  [label="DDG: flags"];
"1001153" -> "1001114"  [label="AST: "];
"1001163" -> "1001153"  [label="CFG: "];
"1001153" -> "1001207"  [label="DDG: emptyBuffer(\n                    node, buffer, range_offset, range_length, flags, timestamp, fenceFd)"];
"1001153" -> "1001207"  [label="DDG: reply->writeInt32(emptyBuffer(\n                    node, buffer, range_offset, range_length, flags, timestamp, fenceFd))"];
}
