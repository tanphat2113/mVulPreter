digraph "0_Android_9d4853418ab2f754c2b63e091c29c5529b8b86ca_14@API" {
"1000225" [label="(Call,assert(y == 0 && rowbytes == 8 && size_max == 15))"];
"1000226" [label="(Call,y == 0 && rowbytes == 8 && size_max == 15)"];
"1000227" [label="(Call,y == 0)"];
"1000132" [label="(MethodParameterIn,unsigned int y)"];
"1000230" [label="(Call,rowbytes == 8 && size_max == 15)"];
"1000231" [label="(Call,rowbytes == 8)"];
"1000131" [label="(MethodParameterIn,size_t rowbytes)"];
"1000234" [label="(Call,size_max == 15)"];
"1000145" [label="(Call,size_max =\n      image_size_of_type(color_type, bit_depth, colors, small)-1)"];
"1000147" [label="(Call,image_size_of_type(color_type, bit_depth, colors, small)-1)"];
"1000148" [label="(Call,image_size_of_type(color_type, bit_depth, colors, small))"];
"1000133" [label="(MethodParameterIn,int color_type)"];
"1000134" [label="(MethodParameterIn,int bit_depth)"];
"1000137" [label="(MethodParameterIn,unsigned int *colors)"];
"1000138" [label="(MethodParameterIn,int small)"];
"1000432" [label="(Call,2*y)"];
"1000227" [label="(Call,y == 0)"];
"1000577" [label="(Call,(depth_max * y * 2 + size_max) / (2 * size_max))"];
"1000156" [label="(Identifier,depth_max)"];
"1000401" [label="(Call,y == 0)"];
"1000960" [label="(Call,green = colors[2])"];
"1000330" [label="(Call,2*size_max)"];
"1000518" [label="(Call,depth_max * y * 2 + size_max)"];
"1000233" [label="(Literal,8)"];
"1000152" [label="(Identifier,small)"];
"1000302" [label="(Call,size_max+1)"];
"1001057" [label="(MethodReturn,RET)"];
"1000300" [label="(Call,0xFFU & (size_max+1))"];
"1000212" [label="(Call,size_max == 3)"];
"1000821" [label="(Call,x<=size_max)"];
"1000139" [label="(Block,)"];
"1001012" [label="(Call,set_value(row, rowbytes, 4*x+2, bit_depth, blue, gamma_table,\n                     conv))"];
"1001045" [label="(Call,fprintf(stderr,\n \"makepng: --color: count(%u) does not match channels(%u)\n\",\n\n          colors[0], channels_of_type(color_type)))"];
"1000844" [label="(Call,alpha = colors[2])"];
"1000187" [label="(Call,rowbytes == 1)"];
"1000183" [label="(Call,y == 0)"];
"1000611" [label="(Call,set_value(row, rowbytes, 3*x+1, bit_depth, /* green */\n (depth_max * x * 2 + size_max) / (2 * size_max),\n                  gamma_table, conv))"];
"1000138" [label="(MethodParameterIn,int small)"];
"1000517" [label="(Call,(depth_max * y * 2 + size_max) / (2 * size_max))"];
"1000225" [label="(Call,assert(y == 0 && rowbytes == 8 && size_max == 15))"];
"1000346" [label="(Call,size_max+y+1)"];
"1001000" [label="(Call,set_value(row, rowbytes, 4*x+1, bit_depth, green, gamma_table,\n                     conv))"];
"1000348" [label="(Call,y+1)"];
"1000886" [label="(Call,red = colors[1])"];
"1000174" [label="(Call,pixel_depth_of_type(color_type, bit_depth))"];
"1000361" [label="(Call,y == 0)"];
"1000137" [label="(MethodParameterIn,unsigned int *colors)"];
"1000234" [label="(Call,size_max == 15)"];
"1000288" [label="(Call,rowbytes == 256)"];
"1000972" [label="(Call,alpha = colors[4])"];
"1000452" [label="(Call,channels_of_type(color_type))"];
"1000147" [label="(Call,image_size_of_type(color_type, bit_depth, colors, small)-1)"];
"1000146" [label="(Identifier,size_max)"];
"1000838" [label="(Call,luma = colors[1])"];
"1000375" [label="(Call,size_max == 255)"];
"1000306" [label="(Call,size_max == 0)"];
"1000525" [label="(Call,2 * size_max)"];
"1000662" [label="(Call,depth_max * y * 2 + size_max)"];
"1001024" [label="(Call,set_value(row, rowbytes, 4*x+3, bit_depth, alpha, gamma_table,\n                     conv))"];
"1000854" [label="(Call,x<size_max)"];
"1000982" [label="(Call,x<=size_max)"];
"1000633" [label="(Call,set_value(row, rowbytes, 3*x+2, bit_depth, /* blue */\n (Y * x * 2 + size_max) / (2 * size_max),\n                  gamma_table, conv))"];
"1000578" [label="(Call,depth_max * y * 2 + size_max)"];
"1000228" [label="(Identifier,y)"];
"1000284" [label="(Call,y == 0)"];
"1000665" [label="(Call,y * 2)"];
"1000521" [label="(Call,y * 2)"];
"1000581" [label="(Call,y * 2)"];
"1000966" [label="(Call,blue = colors[3])"];
"1000416" [label="(Call,rowbytes - pixel_index * pixel_depth)"];
"1000134" [label="(MethodParameterIn,int bit_depth)"];
"1000914" [label="(Call,set_value(row, rowbytes, 3*x+0, bit_depth, red, gamma_table,\n                     conv))"];
"1000322" [label="(Call,size_max == 255)"];
"1000729" [label="(Call,set_value(row, rowbytes, 4*x+2, bit_depth, /* blue */\n                  Y - (Y * x * 2 + size_max) / (2 * size_max),\n                  gamma_table, conv))"];
"1000236" [label="(Literal,15)"];
"1000235" [label="(Identifier,size_max)"];
"1000908" [label="(Call,x<=size_max)"];
"1000559" [label="(Call,set_value(row, rowbytes, 2*x+1, bit_depth, alpha, gamma_table,\n                  conv))"];
"1000150" [label="(Identifier,bit_depth)"];
"1000389" [label="(Call,rowbytes > 0)"];
"1000151" [label="(Identifier,colors)"];
"1000826" [label="(Call,set_value(row, rowbytes, x, bit_depth, luma, gamma_table,\n                     conv))"];
"1000153" [label="(Literal,1)"];
"1000892" [label="(Call,green = colors[2])"];
"1000926" [label="(Call,set_value(row, rowbytes, 3*x+1, bit_depth, green, gamma_table,\n                     conv))"];
"1000229" [label="(Literal,0)"];
"1000669" [label="(Call,2 * size_max)"];
"1000898" [label="(Call,blue = colors[3])"];
"1000231" [label="(Call,rowbytes == 8)"];
"1000131" [label="(MethodParameterIn,size_t rowbytes)"];
"1000132" [label="(MethodParameterIn,unsigned int y)"];
"1000397" [label="(Call,--rowbytes)"];
"1000148" [label="(Call,image_size_of_type(color_type, bit_depth, colors, small))"];
"1000179" [label="(Block,)"];
"1000792" [label="(Call,memset(row, 0, rowbytes))"];
"1000788" [label="(Call,color_type & PNG_COLOR_MASK_PALETTE)"];
"1000707" [label="(Call,set_value(row, rowbytes, 4*x+1, bit_depth, /* green */\n (Y * x * 2 + size_max) / (2 * size_max),\n                  gamma_table, conv))"];
"1000798" [label="(Call,colors[0] == channels_of_type(color_type))"];
"1000226" [label="(Call,y == 0 && rowbytes == 8 && size_max == 15)"];
"1000209" [label="(Call,rowbytes == 1)"];
"1000439" [label="(Call,y == 0)"];
"1000145" [label="(Call,size_max =\n      image_size_of_type(color_type, bit_depth, colors, small)-1)"];
"1000205" [label="(Call,y == 0)"];
"1000988" [label="(Call,set_value(row, rowbytes, 4*x+0, bit_depth, red, gamma_table,\n                     conv))"];
"1000539" [label="(Call,set_value(row, rowbytes, 2*x, bit_depth,\n (depth_max * x * 2 + size_max) / (2 * size_max), gamma_table,\n                  conv))"];
"1000805" [label="(Call,channels_of_type(color_type))"];
"1000149" [label="(Identifier,color_type)"];
"1000467" [label="(Call,2*y)"];
"1000291" [label="(Call,size_max == 255)"];
"1000599" [label="(Call,set_value(row, rowbytes, 3*x+0, bit_depth, /* red */ Y,\n                     gamma_table, conv))"];
"1000462" [label="(Call,2*size_max)"];
"1000232" [label="(Identifier,rowbytes)"];
"1000753" [label="(Call,set_value(row, rowbytes, 4*x+3, bit_depth, /* alpha */\n                  Y + ((depth_max-Y) * x * 2 + size_max) / (2 * size_max),\n                  gamma_table, conv))"];
"1000163" [label="(Call,colors[0] == 0)"];
"1000190" [label="(Call,size_max == 1)"];
"1000503" [label="(Call,set_value(row, rowbytes, x, bit_depth, luma, gamma_table, conv))"];
"1000378" [label="(Call,rowbytes == 256*(pixel_depth>>3))"];
"1000661" [label="(Call,(depth_max * y * 2 + size_max) / (2 * size_max))"];
"1000319" [label="(Call,rowbytes == 512)"];
"1000133" [label="(MethodParameterIn,int color_type)"];
"1000158" [label="(Call,1U << bit_depth)"];
"1000585" [label="(Call,2 * size_max)"];
"1000683" [label="(Call,set_value(row, rowbytes, 4*x+0, bit_depth, /* red */\n ((depth_max-Y) * x * 2 + size_max) / (2 * size_max),\n                  gamma_table, conv))"];
"1000230" [label="(Call,rowbytes == 8 && size_max == 15)"];
"1000344" [label="(Call,0xFFU & (size_max+y+1))"];
"1000860" [label="(Call,set_value(row, rowbytes, 2*x, bit_depth, luma, gamma_table,\n                     conv))"];
"1000802" [label="(Call,channels_of_type(color_type))"];
"1000954" [label="(Call,red = colors[1])"];
"1000938" [label="(Call,set_value(row, rowbytes, 3*x+2, bit_depth, blue, gamma_table,\n                     conv))"];
"1000870" [label="(Call,set_value(row, rowbytes, 2*x+1, bit_depth, alpha, gamma_table,\n                     conv))"];
"1000239" [label="(Identifier,row)"];
"1000811" [label="(Call,luma = colors[1])"];
"1001051" [label="(Call,channels_of_type(color_type))"];
"1000225" -> "1000179"  [label="AST: "];
"1000225" -> "1000226"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000239" -> "1000225"  [label="CFG: "];
"1000225" -> "1001057"  [label="DDG: assert(y == 0 && rowbytes == 8 && size_max == 15)"];
"1000225" -> "1001057"  [label="DDG: y == 0 && rowbytes == 8 && size_max == 15"];
"1000226" -> "1000225"  [label="DDG: y == 0"];
"1000226" -> "1000225"  [label="DDG: rowbytes == 8 && size_max == 15"];
"1000226" -> "1000227"  [label="CFG: "];
"1000226" -> "1000230"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000230" -> "1000226"  [label="AST: "];
"1000226" -> "1001057"  [label="DDG: y == 0"];
"1000226" -> "1001057"  [label="DDG: rowbytes == 8 && size_max == 15"];
"1000227" -> "1000226"  [label="DDG: y"];
"1000227" -> "1000226"  [label="DDG: 0"];
"1000230" -> "1000226"  [label="DDG: rowbytes == 8"];
"1000230" -> "1000226"  [label="DDG: size_max == 15"];
"1000227" -> "1000229"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000227"  [label="AST: "];
"1000232" -> "1000227"  [label="CFG: "];
"1000227" -> "1001057"  [label="DDG: y"];
"1000132" -> "1000227"  [label="DDG: y"];
"1000132" -> "1000129"  [label="AST: "];
"1000132" -> "1001057"  [label="DDG: y"];
"1000132" -> "1000183"  [label="DDG: y"];
"1000132" -> "1000205"  [label="DDG: y"];
"1000132" -> "1000284"  [label="DDG: y"];
"1000132" -> "1000344"  [label="DDG: y"];
"1000132" -> "1000346"  [label="DDG: y"];
"1000132" -> "1000348"  [label="DDG: y"];
"1000132" -> "1000361"  [label="DDG: y"];
"1000132" -> "1000401"  [label="DDG: y"];
"1000132" -> "1000432"  [label="DDG: y"];
"1000132" -> "1000439"  [label="DDG: y"];
"1000132" -> "1000467"  [label="DDG: y"];
"1000132" -> "1000521"  [label="DDG: y"];
"1000132" -> "1000581"  [label="DDG: y"];
"1000132" -> "1000665"  [label="DDG: y"];
"1000230" -> "1000231"  [label="CFG: "];
"1000230" -> "1000234"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000234" -> "1000230"  [label="AST: "];
"1000230" -> "1001057"  [label="DDG: rowbytes == 8"];
"1000230" -> "1001057"  [label="DDG: size_max == 15"];
"1000231" -> "1000230"  [label="DDG: rowbytes"];
"1000231" -> "1000230"  [label="DDG: 8"];
"1000234" -> "1000230"  [label="DDG: size_max"];
"1000234" -> "1000230"  [label="DDG: 15"];
"1000231" -> "1000233"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000233" -> "1000231"  [label="AST: "];
"1000235" -> "1000231"  [label="CFG: "];
"1000231" -> "1001057"  [label="DDG: rowbytes"];
"1000131" -> "1000231"  [label="DDG: rowbytes"];
"1000131" -> "1000129"  [label="AST: "];
"1000131" -> "1001057"  [label="DDG: rowbytes"];
"1000131" -> "1000187"  [label="DDG: rowbytes"];
"1000131" -> "1000209"  [label="DDG: rowbytes"];
"1000131" -> "1000288"  [label="DDG: rowbytes"];
"1000131" -> "1000319"  [label="DDG: rowbytes"];
"1000131" -> "1000378"  [label="DDG: rowbytes"];
"1000131" -> "1000389"  [label="DDG: rowbytes"];
"1000131" -> "1000397"  [label="DDG: rowbytes"];
"1000131" -> "1000416"  [label="DDG: rowbytes"];
"1000131" -> "1000503"  [label="DDG: rowbytes"];
"1000131" -> "1000539"  [label="DDG: rowbytes"];
"1000131" -> "1000559"  [label="DDG: rowbytes"];
"1000131" -> "1000599"  [label="DDG: rowbytes"];
"1000131" -> "1000611"  [label="DDG: rowbytes"];
"1000131" -> "1000633"  [label="DDG: rowbytes"];
"1000131" -> "1000683"  [label="DDG: rowbytes"];
"1000131" -> "1000707"  [label="DDG: rowbytes"];
"1000131" -> "1000729"  [label="DDG: rowbytes"];
"1000131" -> "1000753"  [label="DDG: rowbytes"];
"1000131" -> "1000792"  [label="DDG: rowbytes"];
"1000131" -> "1000826"  [label="DDG: rowbytes"];
"1000131" -> "1000860"  [label="DDG: rowbytes"];
"1000131" -> "1000870"  [label="DDG: rowbytes"];
"1000131" -> "1000914"  [label="DDG: rowbytes"];
"1000131" -> "1000926"  [label="DDG: rowbytes"];
"1000131" -> "1000938"  [label="DDG: rowbytes"];
"1000131" -> "1000988"  [label="DDG: rowbytes"];
"1000131" -> "1001000"  [label="DDG: rowbytes"];
"1000131" -> "1001012"  [label="DDG: rowbytes"];
"1000131" -> "1001024"  [label="DDG: rowbytes"];
"1000234" -> "1000236"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000236" -> "1000234"  [label="AST: "];
"1000234" -> "1001057"  [label="DDG: size_max"];
"1000145" -> "1000234"  [label="DDG: size_max"];
"1000145" -> "1000139"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000156" -> "1000145"  [label="CFG: "];
"1000145" -> "1001057"  [label="DDG: size_max"];
"1000145" -> "1001057"  [label="DDG: image_size_of_type(color_type, bit_depth, colors, small)-1"];
"1000147" -> "1000145"  [label="DDG: image_size_of_type(color_type, bit_depth, colors, small)"];
"1000147" -> "1000145"  [label="DDG: 1"];
"1000145" -> "1000190"  [label="DDG: size_max"];
"1000145" -> "1000212"  [label="DDG: size_max"];
"1000145" -> "1000291"  [label="DDG: size_max"];
"1000145" -> "1000300"  [label="DDG: size_max"];
"1000145" -> "1000302"  [label="DDG: size_max"];
"1000145" -> "1000306"  [label="DDG: size_max"];
"1000145" -> "1000322"  [label="DDG: size_max"];
"1000145" -> "1000330"  [label="DDG: size_max"];
"1000145" -> "1000375"  [label="DDG: size_max"];
"1000145" -> "1000462"  [label="DDG: size_max"];
"1000145" -> "1000517"  [label="DDG: size_max"];
"1000145" -> "1000518"  [label="DDG: size_max"];
"1000145" -> "1000525"  [label="DDG: size_max"];
"1000145" -> "1000577"  [label="DDG: size_max"];
"1000145" -> "1000578"  [label="DDG: size_max"];
"1000145" -> "1000585"  [label="DDG: size_max"];
"1000145" -> "1000661"  [label="DDG: size_max"];
"1000145" -> "1000662"  [label="DDG: size_max"];
"1000145" -> "1000669"  [label="DDG: size_max"];
"1000145" -> "1000821"  [label="DDG: size_max"];
"1000145" -> "1000854"  [label="DDG: size_max"];
"1000145" -> "1000908"  [label="DDG: size_max"];
"1000145" -> "1000982"  [label="DDG: size_max"];
"1000147" -> "1000153"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000153" -> "1000147"  [label="AST: "];
"1000147" -> "1001057"  [label="DDG: image_size_of_type(color_type, bit_depth, colors, small)"];
"1000148" -> "1000147"  [label="DDG: color_type"];
"1000148" -> "1000147"  [label="DDG: bit_depth"];
"1000148" -> "1000147"  [label="DDG: colors"];
"1000148" -> "1000147"  [label="DDG: small"];
"1000148" -> "1000152"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000150" -> "1000148"  [label="AST: "];
"1000151" -> "1000148"  [label="AST: "];
"1000152" -> "1000148"  [label="AST: "];
"1000153" -> "1000148"  [label="CFG: "];
"1000148" -> "1001057"  [label="DDG: colors"];
"1000148" -> "1001057"  [label="DDG: small"];
"1000133" -> "1000148"  [label="DDG: color_type"];
"1000134" -> "1000148"  [label="DDG: bit_depth"];
"1000137" -> "1000148"  [label="DDG: colors"];
"1000138" -> "1000148"  [label="DDG: small"];
"1000148" -> "1000158"  [label="DDG: bit_depth"];
"1000148" -> "1000163"  [label="DDG: colors"];
"1000148" -> "1000174"  [label="DDG: color_type"];
"1000148" -> "1000452"  [label="DDG: color_type"];
"1000148" -> "1000788"  [label="DDG: color_type"];
"1000148" -> "1000798"  [label="DDG: colors"];
"1000148" -> "1000811"  [label="DDG: colors"];
"1000148" -> "1000838"  [label="DDG: colors"];
"1000148" -> "1000844"  [label="DDG: colors"];
"1000148" -> "1000886"  [label="DDG: colors"];
"1000148" -> "1000892"  [label="DDG: colors"];
"1000148" -> "1000898"  [label="DDG: colors"];
"1000148" -> "1000954"  [label="DDG: colors"];
"1000148" -> "1000960"  [label="DDG: colors"];
"1000148" -> "1000966"  [label="DDG: colors"];
"1000148" -> "1000972"  [label="DDG: colors"];
"1000148" -> "1001045"  [label="DDG: colors"];
"1000133" -> "1000129"  [label="AST: "];
"1000133" -> "1001057"  [label="DDG: color_type"];
"1000133" -> "1000174"  [label="DDG: color_type"];
"1000133" -> "1000452"  [label="DDG: color_type"];
"1000133" -> "1000788"  [label="DDG: color_type"];
"1000133" -> "1000802"  [label="DDG: color_type"];
"1000133" -> "1000805"  [label="DDG: color_type"];
"1000133" -> "1001051"  [label="DDG: color_type"];
"1000134" -> "1000129"  [label="AST: "];
"1000134" -> "1001057"  [label="DDG: bit_depth"];
"1000134" -> "1000158"  [label="DDG: bit_depth"];
"1000134" -> "1000174"  [label="DDG: bit_depth"];
"1000134" -> "1000503"  [label="DDG: bit_depth"];
"1000134" -> "1000539"  [label="DDG: bit_depth"];
"1000134" -> "1000559"  [label="DDG: bit_depth"];
"1000134" -> "1000599"  [label="DDG: bit_depth"];
"1000134" -> "1000611"  [label="DDG: bit_depth"];
"1000134" -> "1000633"  [label="DDG: bit_depth"];
"1000134" -> "1000683"  [label="DDG: bit_depth"];
"1000134" -> "1000707"  [label="DDG: bit_depth"];
"1000134" -> "1000729"  [label="DDG: bit_depth"];
"1000134" -> "1000753"  [label="DDG: bit_depth"];
"1000134" -> "1000826"  [label="DDG: bit_depth"];
"1000134" -> "1000860"  [label="DDG: bit_depth"];
"1000134" -> "1000870"  [label="DDG: bit_depth"];
"1000134" -> "1000914"  [label="DDG: bit_depth"];
"1000134" -> "1000926"  [label="DDG: bit_depth"];
"1000134" -> "1000938"  [label="DDG: bit_depth"];
"1000134" -> "1000988"  [label="DDG: bit_depth"];
"1000134" -> "1001000"  [label="DDG: bit_depth"];
"1000134" -> "1001012"  [label="DDG: bit_depth"];
"1000134" -> "1001024"  [label="DDG: bit_depth"];
"1000137" -> "1000129"  [label="AST: "];
"1000137" -> "1001057"  [label="DDG: colors"];
"1000137" -> "1000163"  [label="DDG: colors"];
"1000137" -> "1000798"  [label="DDG: colors"];
"1000137" -> "1000811"  [label="DDG: colors"];
"1000137" -> "1000838"  [label="DDG: colors"];
"1000137" -> "1000844"  [label="DDG: colors"];
"1000137" -> "1000886"  [label="DDG: colors"];
"1000137" -> "1000892"  [label="DDG: colors"];
"1000137" -> "1000898"  [label="DDG: colors"];
"1000137" -> "1000954"  [label="DDG: colors"];
"1000137" -> "1000960"  [label="DDG: colors"];
"1000137" -> "1000966"  [label="DDG: colors"];
"1000137" -> "1000972"  [label="DDG: colors"];
"1000137" -> "1001045"  [label="DDG: colors"];
"1000138" -> "1000129"  [label="AST: "];
"1000138" -> "1001057"  [label="DDG: small"];
}
