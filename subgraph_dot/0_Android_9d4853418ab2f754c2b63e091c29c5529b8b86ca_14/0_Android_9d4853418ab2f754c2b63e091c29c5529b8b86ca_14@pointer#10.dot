digraph "0_Android_9d4853418ab2f754c2b63e091c29c5529b8b86ca_14@pointer" {
"1000898" [label="(Call,blue = colors[3])"];
"1000148" [label="(Call,image_size_of_type(color_type, bit_depth, colors, small))"];
"1000133" [label="(MethodParameterIn,int color_type)"];
"1000134" [label="(MethodParameterIn,int bit_depth)"];
"1000137" [label="(MethodParameterIn,unsigned int *colors)"];
"1000138" [label="(MethodParameterIn,int small)"];
"1000938" [label="(Call,set_value(row, rowbytes, 3*x+2, bit_depth, blue, gamma_table,\n                     conv))"];
"1000914" [label="(Call,set_value(row, rowbytes, 3*x+0, bit_depth, red, gamma_table,\n                     conv))"];
"1000926" [label="(Call,set_value(row, rowbytes, 3*x+1, bit_depth, green, gamma_table,\n                     conv))"];
"1000930" [label="(Call,3*x)"];
"1000960" [label="(Call,green = colors[2])"];
"1000925" [label="(Identifier,conv)"];
"1000152" [label="(Identifier,small)"];
"1001057" [label="(MethodReturn,RET)"];
"1001012" [label="(Call,set_value(row, rowbytes, 4*x+2, bit_depth, blue, gamma_table,\n                     conv))"];
"1000912" [label="(Identifier,x)"];
"1001045" [label="(Call,fprintf(stderr,\n \"makepng: --color: count(%u) does not match channels(%u)\n\",\n\n          colors[0], channels_of_type(color_type)))"];
"1000922" [label="(Identifier,bit_depth)"];
"1000884" [label="(Block,)"];
"1000844" [label="(Call,alpha = colors[2])"];
"1000611" [label="(Call,set_value(row, rowbytes, 3*x+1, bit_depth, /* green */\n (depth_max * x * 2 + size_max) / (2 * size_max),\n                  gamma_table, conv))"];
"1000937" [label="(Identifier,conv)"];
"1000138" [label="(MethodParameterIn,int small)"];
"1000949" [label="(Identifier,conv)"];
"1000947" [label="(Identifier,blue)"];
"1001000" [label="(Call,set_value(row, rowbytes, 4*x+1, bit_depth, green, gamma_table,\n                     conv))"];
"1000934" [label="(Identifier,bit_depth)"];
"1000886" [label="(Call,red = colors[1])"];
"1000174" [label="(Call,pixel_depth_of_type(color_type, bit_depth))"];
"1000137" [label="(MethodParameterIn,unsigned int *colors)"];
"1000972" [label="(Call,alpha = colors[4])"];
"1000452" [label="(Call,channels_of_type(color_type))"];
"1000147" [label="(Call,image_size_of_type(color_type, bit_depth, colors, small)-1)"];
"1000838" [label="(Call,luma = colors[1])"];
"1001024" [label="(Call,set_value(row, rowbytes, 4*x+3, bit_depth, alpha, gamma_table,\n                     conv))"];
"1000929" [label="(Call,3*x+1)"];
"1000633" [label="(Call,set_value(row, rowbytes, 3*x+2, bit_depth, /* blue */\n (Y * x * 2 + size_max) / (2 * size_max),\n                  gamma_table, conv))"];
"1000966" [label="(Call,blue = colors[3])"];
"1000942" [label="(Call,3*x)"];
"1000915" [label="(Identifier,row)"];
"1000134" [label="(MethodParameterIn,int bit_depth)"];
"1000914" [label="(Call,set_value(row, rowbytes, 3*x+0, bit_depth, red, gamma_table,\n                     conv))"];
"1000729" [label="(Call,set_value(row, rowbytes, 4*x+2, bit_depth, /* blue */\n                  Y - (Y * x * 2 + size_max) / (2 * size_max),\n                  gamma_table, conv))"];
"1000559" [label="(Call,set_value(row, rowbytes, 2*x+1, bit_depth, alpha, gamma_table,\n                  conv))"];
"1000906" [label="(Identifier,x)"];
"1000150" [label="(Identifier,bit_depth)"];
"1000940" [label="(Identifier,rowbytes)"];
"1000928" [label="(Identifier,rowbytes)"];
"1000151" [label="(Identifier,colors)"];
"1000826" [label="(Call,set_value(row, rowbytes, x, bit_depth, luma, gamma_table,\n                     conv))"];
"1000153" [label="(Literal,1)"];
"1000892" [label="(Call,green = colors[2])"];
"1000926" [label="(Call,set_value(row, rowbytes, 3*x+1, bit_depth, green, gamma_table,\n                     conv))"];
"1000946" [label="(Identifier,bit_depth)"];
"1000898" [label="(Call,blue = colors[3])"];
"1000941" [label="(Call,3*x+2)"];
"1000899" [label="(Identifier,blue)"];
"1000948" [label="(Identifier,gamma_table)"];
"1000927" [label="(Identifier,row)"];
"1000131" [label="(MethodParameterIn,size_t rowbytes)"];
"1000939" [label="(Identifier,row)"];
"1000148" [label="(Call,image_size_of_type(color_type, bit_depth, colors, small))"];
"1000923" [label="(Identifier,red)"];
"1000788" [label="(Call,color_type & PNG_COLOR_MASK_PALETTE)"];
"1000798" [label="(Call,colors[0] == channels_of_type(color_type))"];
"1000900" [label="(Call,colors[3])"];
"1000707" [label="(Call,set_value(row, rowbytes, 4*x+1, bit_depth, /* green */\n (Y * x * 2 + size_max) / (2 * size_max),\n                  gamma_table, conv))"];
"1000924" [label="(Identifier,gamma_table)"];
"1000918" [label="(Call,3*x)"];
"1000135" [label="(MethodParameterIn,png_const_bytep gamma_table)"];
"1000988" [label="(Call,set_value(row, rowbytes, 4*x+0, bit_depth, red, gamma_table,\n                     conv))"];
"1000916" [label="(Identifier,rowbytes)"];
"1000130" [label="(MethodParameterIn,png_bytep row)"];
"1000539" [label="(Call,set_value(row, rowbytes, 2*x, bit_depth,\n (depth_max * x * 2 + size_max) / (2 * size_max), gamma_table,\n                  conv))"];
"1000805" [label="(Call,channels_of_type(color_type))"];
"1000149" [label="(Identifier,color_type)"];
"1000599" [label="(Call,set_value(row, rowbytes, 3*x+0, bit_depth, /* red */ Y,\n                     gamma_table, conv))"];
"1000913" [label="(Block,)"];
"1000753" [label="(Call,set_value(row, rowbytes, 4*x+3, bit_depth, /* alpha */\n                  Y + ((depth_max-Y) * x * 2 + size_max) / (2 * size_max),\n                  gamma_table, conv))"];
"1000936" [label="(Identifier,gamma_table)"];
"1000163" [label="(Call,colors[0] == 0)"];
"1000917" [label="(Call,3*x+0)"];
"1000136" [label="(MethodParameterIn,double conv)"];
"1000935" [label="(Identifier,green)"];
"1000503" [label="(Call,set_value(row, rowbytes, x, bit_depth, luma, gamma_table, conv))"];
"1000133" [label="(MethodParameterIn,int color_type)"];
"1000158" [label="(Call,1U << bit_depth)"];
"1000683" [label="(Call,set_value(row, rowbytes, 4*x+0, bit_depth, /* red */\n ((depth_max-Y) * x * 2 + size_max) / (2 * size_max),\n                  gamma_table, conv))"];
"1000860" [label="(Call,set_value(row, rowbytes, 2*x, bit_depth, luma, gamma_table,\n                     conv))"];
"1000802" [label="(Call,channels_of_type(color_type))"];
"1000954" [label="(Call,red = colors[1])"];
"1000938" [label="(Call,set_value(row, rowbytes, 3*x+2, bit_depth, blue, gamma_table,\n                     conv))"];
"1000870" [label="(Call,set_value(row, rowbytes, 2*x+1, bit_depth, alpha, gamma_table,\n                     conv))"];
"1000811" [label="(Call,luma = colors[1])"];
"1001051" [label="(Call,channels_of_type(color_type))"];
"1000898" -> "1000884"  [label="AST: "];
"1000898" -> "1000900"  [label="CFG: "];
"1000899" -> "1000898"  [label="AST: "];
"1000900" -> "1000898"  [label="AST: "];
"1000906" -> "1000898"  [label="CFG: "];
"1000898" -> "1001057"  [label="DDG: blue"];
"1000898" -> "1001057"  [label="DDG: colors[3]"];
"1000148" -> "1000898"  [label="DDG: colors"];
"1000137" -> "1000898"  [label="DDG: colors"];
"1000898" -> "1000938"  [label="DDG: blue"];
"1000148" -> "1000147"  [label="AST: "];
"1000148" -> "1000152"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000150" -> "1000148"  [label="AST: "];
"1000151" -> "1000148"  [label="AST: "];
"1000152" -> "1000148"  [label="AST: "];
"1000153" -> "1000148"  [label="CFG: "];
"1000148" -> "1001057"  [label="DDG: colors"];
"1000148" -> "1001057"  [label="DDG: small"];
"1000148" -> "1000147"  [label="DDG: color_type"];
"1000148" -> "1000147"  [label="DDG: bit_depth"];
"1000148" -> "1000147"  [label="DDG: colors"];
"1000148" -> "1000147"  [label="DDG: small"];
"1000133" -> "1000148"  [label="DDG: color_type"];
"1000134" -> "1000148"  [label="DDG: bit_depth"];
"1000137" -> "1000148"  [label="DDG: colors"];
"1000138" -> "1000148"  [label="DDG: small"];
"1000148" -> "1000158"  [label="DDG: bit_depth"];
"1000148" -> "1000163"  [label="DDG: colors"];
"1000148" -> "1000174"  [label="DDG: color_type"];
"1000148" -> "1000452"  [label="DDG: color_type"];
"1000148" -> "1000788"  [label="DDG: color_type"];
"1000148" -> "1000798"  [label="DDG: colors"];
"1000148" -> "1000811"  [label="DDG: colors"];
"1000148" -> "1000838"  [label="DDG: colors"];
"1000148" -> "1000844"  [label="DDG: colors"];
"1000148" -> "1000886"  [label="DDG: colors"];
"1000148" -> "1000892"  [label="DDG: colors"];
"1000148" -> "1000954"  [label="DDG: colors"];
"1000148" -> "1000960"  [label="DDG: colors"];
"1000148" -> "1000966"  [label="DDG: colors"];
"1000148" -> "1000972"  [label="DDG: colors"];
"1000148" -> "1001045"  [label="DDG: colors"];
"1000133" -> "1000129"  [label="AST: "];
"1000133" -> "1001057"  [label="DDG: color_type"];
"1000133" -> "1000174"  [label="DDG: color_type"];
"1000133" -> "1000452"  [label="DDG: color_type"];
"1000133" -> "1000788"  [label="DDG: color_type"];
"1000133" -> "1000802"  [label="DDG: color_type"];
"1000133" -> "1000805"  [label="DDG: color_type"];
"1000133" -> "1001051"  [label="DDG: color_type"];
"1000134" -> "1000129"  [label="AST: "];
"1000134" -> "1001057"  [label="DDG: bit_depth"];
"1000134" -> "1000158"  [label="DDG: bit_depth"];
"1000134" -> "1000174"  [label="DDG: bit_depth"];
"1000134" -> "1000503"  [label="DDG: bit_depth"];
"1000134" -> "1000539"  [label="DDG: bit_depth"];
"1000134" -> "1000559"  [label="DDG: bit_depth"];
"1000134" -> "1000599"  [label="DDG: bit_depth"];
"1000134" -> "1000611"  [label="DDG: bit_depth"];
"1000134" -> "1000633"  [label="DDG: bit_depth"];
"1000134" -> "1000683"  [label="DDG: bit_depth"];
"1000134" -> "1000707"  [label="DDG: bit_depth"];
"1000134" -> "1000729"  [label="DDG: bit_depth"];
"1000134" -> "1000753"  [label="DDG: bit_depth"];
"1000134" -> "1000826"  [label="DDG: bit_depth"];
"1000134" -> "1000860"  [label="DDG: bit_depth"];
"1000134" -> "1000870"  [label="DDG: bit_depth"];
"1000134" -> "1000914"  [label="DDG: bit_depth"];
"1000134" -> "1000926"  [label="DDG: bit_depth"];
"1000134" -> "1000938"  [label="DDG: bit_depth"];
"1000134" -> "1000988"  [label="DDG: bit_depth"];
"1000134" -> "1001000"  [label="DDG: bit_depth"];
"1000134" -> "1001012"  [label="DDG: bit_depth"];
"1000134" -> "1001024"  [label="DDG: bit_depth"];
"1000137" -> "1000129"  [label="AST: "];
"1000137" -> "1001057"  [label="DDG: colors"];
"1000137" -> "1000163"  [label="DDG: colors"];
"1000137" -> "1000798"  [label="DDG: colors"];
"1000137" -> "1000811"  [label="DDG: colors"];
"1000137" -> "1000838"  [label="DDG: colors"];
"1000137" -> "1000844"  [label="DDG: colors"];
"1000137" -> "1000886"  [label="DDG: colors"];
"1000137" -> "1000892"  [label="DDG: colors"];
"1000137" -> "1000954"  [label="DDG: colors"];
"1000137" -> "1000960"  [label="DDG: colors"];
"1000137" -> "1000966"  [label="DDG: colors"];
"1000137" -> "1000972"  [label="DDG: colors"];
"1000137" -> "1001045"  [label="DDG: colors"];
"1000138" -> "1000129"  [label="AST: "];
"1000138" -> "1001057"  [label="DDG: small"];
"1000938" -> "1000913"  [label="AST: "];
"1000938" -> "1000949"  [label="CFG: "];
"1000939" -> "1000938"  [label="AST: "];
"1000940" -> "1000938"  [label="AST: "];
"1000941" -> "1000938"  [label="AST: "];
"1000946" -> "1000938"  [label="AST: "];
"1000947" -> "1000938"  [label="AST: "];
"1000948" -> "1000938"  [label="AST: "];
"1000949" -> "1000938"  [label="AST: "];
"1000912" -> "1000938"  [label="CFG: "];
"1000938" -> "1001057"  [label="DDG: row"];
"1000938" -> "1001057"  [label="DDG: set_value(row, rowbytes, 3*x+2, bit_depth, blue, gamma_table,\n                     conv)"];
"1000938" -> "1001057"  [label="DDG: bit_depth"];
"1000938" -> "1001057"  [label="DDG: 3*x+2"];
"1000938" -> "1001057"  [label="DDG: gamma_table"];
"1000938" -> "1001057"  [label="DDG: rowbytes"];
"1000938" -> "1001057"  [label="DDG: blue"];
"1000938" -> "1001057"  [label="DDG: conv"];
"1000938" -> "1000914"  [label="DDG: row"];
"1000938" -> "1000914"  [label="DDG: rowbytes"];
"1000938" -> "1000914"  [label="DDG: bit_depth"];
"1000938" -> "1000914"  [label="DDG: gamma_table"];
"1000938" -> "1000914"  [label="DDG: conv"];
"1000926" -> "1000938"  [label="DDG: row"];
"1000926" -> "1000938"  [label="DDG: rowbytes"];
"1000926" -> "1000938"  [label="DDG: bit_depth"];
"1000926" -> "1000938"  [label="DDG: gamma_table"];
"1000926" -> "1000938"  [label="DDG: conv"];
"1000130" -> "1000938"  [label="DDG: row"];
"1000131" -> "1000938"  [label="DDG: rowbytes"];
"1000942" -> "1000938"  [label="DDG: 3"];
"1000942" -> "1000938"  [label="DDG: x"];
"1000135" -> "1000938"  [label="DDG: gamma_table"];
"1000136" -> "1000938"  [label="DDG: conv"];
"1000914" -> "1000913"  [label="AST: "];
"1000914" -> "1000925"  [label="CFG: "];
"1000915" -> "1000914"  [label="AST: "];
"1000916" -> "1000914"  [label="AST: "];
"1000917" -> "1000914"  [label="AST: "];
"1000922" -> "1000914"  [label="AST: "];
"1000923" -> "1000914"  [label="AST: "];
"1000924" -> "1000914"  [label="AST: "];
"1000925" -> "1000914"  [label="AST: "];
"1000927" -> "1000914"  [label="CFG: "];
"1000914" -> "1001057"  [label="DDG: red"];
"1000914" -> "1001057"  [label="DDG: set_value(row, rowbytes, 3*x+0, bit_depth, red, gamma_table,\n                     conv)"];
"1000914" -> "1001057"  [label="DDG: 3*x+0"];
"1000130" -> "1000914"  [label="DDG: row"];
"1000131" -> "1000914"  [label="DDG: rowbytes"];
"1000918" -> "1000914"  [label="DDG: 3"];
"1000918" -> "1000914"  [label="DDG: x"];
"1000158" -> "1000914"  [label="DDG: bit_depth"];
"1000886" -> "1000914"  [label="DDG: red"];
"1000135" -> "1000914"  [label="DDG: gamma_table"];
"1000136" -> "1000914"  [label="DDG: conv"];
"1000914" -> "1000926"  [label="DDG: row"];
"1000914" -> "1000926"  [label="DDG: rowbytes"];
"1000914" -> "1000926"  [label="DDG: bit_depth"];
"1000914" -> "1000926"  [label="DDG: gamma_table"];
"1000914" -> "1000926"  [label="DDG: conv"];
"1000926" -> "1000913"  [label="AST: "];
"1000926" -> "1000937"  [label="CFG: "];
"1000927" -> "1000926"  [label="AST: "];
"1000928" -> "1000926"  [label="AST: "];
"1000929" -> "1000926"  [label="AST: "];
"1000934" -> "1000926"  [label="AST: "];
"1000935" -> "1000926"  [label="AST: "];
"1000936" -> "1000926"  [label="AST: "];
"1000937" -> "1000926"  [label="AST: "];
"1000939" -> "1000926"  [label="CFG: "];
"1000926" -> "1001057"  [label="DDG: set_value(row, rowbytes, 3*x+1, bit_depth, green, gamma_table,\n                     conv)"];
"1000926" -> "1001057"  [label="DDG: green"];
"1000926" -> "1001057"  [label="DDG: 3*x+1"];
"1000130" -> "1000926"  [label="DDG: row"];
"1000131" -> "1000926"  [label="DDG: rowbytes"];
"1000930" -> "1000926"  [label="DDG: 3"];
"1000930" -> "1000926"  [label="DDG: x"];
"1000892" -> "1000926"  [label="DDG: green"];
"1000135" -> "1000926"  [label="DDG: gamma_table"];
"1000136" -> "1000926"  [label="DDG: conv"];
}
