digraph "0_busybox_6d3b4bb24da9a07c263f3c1acf8df85382ff562c_1@API" {
"1000518" [label="(Call,server_socket = -1)"];
"1000520" [label="(Call,-1)"];
"1000403" [label="(Call,server_socket < 0)"];
"1000414" [label="(Call,udhcp_sp_fd_set(pfds, server_socket))"];
"1000445" [label="(Call,poll(pfds, 2, tv))"];
"1000443" [label="(Call,retval = poll(pfds, 2, tv))"];
"1000450" [label="(Call,retval <= 0)"];
"1000455" [label="(Call,retval == 0)"];
"1000497" [label="(Call,udhcp_recv_kernel_packet(&packet, server_socket))"];
"1000495" [label="(Call,bytes = udhcp_recv_kernel_packet(&packet, server_socket))"];
"1000502" [label="(Call,bytes < 0)"];
"1000508" [label="(Call,bytes == -1)"];
"1000507" [label="(Call,bytes == -1 && errno != EINTR)"];
"1000516" [label="(Call,close(server_socket))"];
"1000545" [label="(Call,udhcp_get_option(&packet, DHCP_MESSAGE_TYPE))"];
"1000543" [label="(Call,state = udhcp_get_option(&packet, DHCP_MESSAGE_TYPE))"];
"1000551" [label="(Call,state == NULL)"];
"1000550" [label="(Call,state == NULL || state[0] < DHCP_MINTYPE || state[0] > DHCP_MAXTYPE)"];
"1000555" [label="(Call,state[0] < DHCP_MINTYPE)"];
"1000554" [label="(Call,state[0] < DHCP_MINTYPE || state[0] > DHCP_MAXTYPE)"];
"1000560" [label="(Call,state[0] > DHCP_MAXTYPE)"];
"1000746" [label="(Call,time(NULL))"];
"1000741" [label="(Call,lease->expires = time(NULL) + server_config.decline_time)"];
"1000745" [label="(Call,time(NULL) + server_config.decline_time)"];
"1000773" [label="(Call,time(NULL))"];
"1000769" [label="(Call,lease->expires = time(NULL))"];
"1000571" [label="(Call,udhcp_get_option32(&packet, DHCP_SERVER_ID))"];
"1000569" [label="(Call,server_id_opt = udhcp_get_option32(&packet, DHCP_SERVER_ID))"];
"1000579" [label="(Call,move_from_unaligned32(server_id_network_order, server_id_opt))"];
"1000583" [label="(Call,server_id_network_order != server_config.server_nip)"];
"1000707" [label="(Call,server_id_opt    /* client is in SELECTING state */\n\t\t\t || requested_ip_opt)"];
"1000720" [label="(Call,server_id_opt\n\t\t\t && requested_ip_opt\n\t\t\t && lease  /* chaddr matches this lease */\n\t\t\t && requested_nip == lease->lease_nip)"];
"1000757" [label="(Call,server_id_opt\n\t\t\t && lease  /* chaddr matches this lease */\n\t\t\t && packet.ciaddr == lease->lease_nip)"];
"1000642" [label="(Call,udhcp_get_option32(&packet, DHCP_REQUESTED_IP))"];
"1000640" [label="(Call,requested_ip_opt = udhcp_get_option32(&packet, DHCP_REQUESTED_IP))"];
"1000649" [label="(Call,move_from_unaligned32(requested_nip, requested_ip_opt))"];
"1000396" [label="(Call,requested_nip = requested_nip)"];
"1000693" [label="(Call,requested_nip == lease->lease_nip)"];
"1000691" [label="(Call,lease && requested_nip == lease->lease_nip)"];
"1000724" [label="(Call,lease  /* chaddr matches this lease */\n\t\t\t && requested_nip == lease->lease_nip)"];
"1000722" [label="(Call,requested_ip_opt\n\t\t\t && lease  /* chaddr matches this lease */\n\t\t\t && requested_nip == lease->lease_nip)"];
"1000699" [label="(Call,send_ACK(&packet, lease->lease_nip))"];
"1000726" [label="(Call,requested_nip == lease->lease_nip)"];
"1000761" [label="(Call,packet.ciaddr == lease->lease_nip)"];
"1000677" [label="(Call,requested_nip = packet.ciaddr)"];
"1000683" [label="(Call,requested_nip == 0)"];
"1000759" [label="(Call,lease  /* chaddr matches this lease */\n\t\t\t && packet.ciaddr == lease->lease_nip)"];
"1000661" [label="(Call,send_offer(&packet, static_lease_nip, lease, requested_ip_opt, arpping_ms))"];
"1000674" [label="(Call,!requested_ip_opt)"];
"1000711" [label="(Call,send_NAK(&packet))"];
"1000780" [label="(Call,send_inform(&packet))"];
"1000731" [label="(Block,)"];
"1000700" [label="(Call,&packet)"];
"1000605" [label="(Call,bb_error_msg(\"found static lease: %x\", static_lease_nip))"];
"1000649" [label="(Call,move_from_unaligned32(requested_nip, requested_ip_opt))"];
"1000795" [label="(MethodReturn,int)"];
"1000577" [label="(Block,)"];
"1000693" [label="(Call,requested_nip == lease->lease_nip)"];
"1000726" [label="(Call,requested_nip == lease->lease_nip)"];
"1000518" [label="(Call,server_socket = -1)"];
"1000550" [label="(Call,state == NULL || state[0] < DHCP_MINTYPE || state[0] > DHCP_MAXTYPE)"];
"1000440" [label="(Call,tv *= 1000)"];
"1000634" [label="(Call,lease = find_lease_by_mac(packet.chaddr))"];
"1000640" [label="(Call,requested_ip_opt = udhcp_get_option32(&packet, DHCP_REQUESTED_IP))"];
"1000564" [label="(Identifier,DHCP_MAXTYPE)"];
"1000765" [label="(Call,lease->lease_nip)"];
"1000780" [label="(Call,send_inform(&packet))"];
"1000415" [label="(Identifier,pfds)"];
"1000448" [label="(Identifier,tv)"];
"1000551" [label="(Call,state == NULL)"];
"1000783" [label="(ControlStructure,break;)"];
"1000727" [label="(Identifier,requested_nip)"];
"1000747" [label="(Identifier,NULL)"];
"1000507" [label="(Call,bytes == -1 && errno != EINTR)"];
"1000461" [label="(Identifier,errno)"];
"1000674" [label="(Call,!requested_ip_opt)"];
"1000561" [label="(Call,state[0])"];
"1000590" [label="(Literal,\"server ID doesn't match, ignoring\")"];
"1000645" [label="(Identifier,DHCP_REQUESTED_IP)"];
"1000454" [label="(ControlStructure,if (retval == 0))"];
"1000742" [label="(Call,lease->expires)"];
"1000723" [label="(Identifier,requested_ip_opt)"];
"1000647" [label="(Identifier,requested_ip_opt)"];
"1000517" [label="(Identifier,server_socket)"];
"1000668" [label="(ControlStructure,break;)"];
"1000405" [label="(Literal,0)"];
"1000545" [label="(Call,udhcp_get_option(&packet, DHCP_MESSAGE_TYPE))"];
"1000584" [label="(Identifier,server_id_network_order)"];
"1000722" [label="(Call,requested_ip_opt\n\t\t\t && lease  /* chaddr matches this lease */\n\t\t\t && requested_nip == lease->lease_nip)"];
"1000556" [label="(Call,state[0])"];
"1000774" [label="(Identifier,NULL)"];
"1000758" [label="(Identifier,server_id_opt)"];
"1000508" [label="(Call,bytes == -1)"];
"1000641" [label="(Identifier,requested_ip_opt)"];
"1000452" [label="(Literal,0)"];
"1000678" [label="(Identifier,requested_nip)"];
"1000592" [label="(Call,static_lease_nip = get_static_nip_by_mac(server_config.static_leases, &packet.chaddr))"];
"1000708" [label="(Identifier,server_id_opt)"];
"1000516" [label="(Call,close(server_socket))"];
"1000450" [label="(Call,retval <= 0)"];
"1000449" [label="(ControlStructure,if (retval <= 0))"];
"1000643" [label="(Call,&packet)"];
"1000414" [label="(Call,udhcp_sp_fd_set(pfds, server_socket))"];
"1000684" [label="(Identifier,requested_nip)"];
"1000666" [label="(Identifier,requested_ip_opt)"];
"1000751" [label="(ControlStructure,break;)"];
"1000691" [label="(Call,lease && requested_nip == lease->lease_nip)"];
"1000688" [label="(Literal,\"no requested IP and no ciaddr, ignoring\")"];
"1000676" [label="(Block,)"];
"1000555" [label="(Call,state[0] < DHCP_MINTYPE)"];
"1000662" [label="(Call,&packet)"];
"1000710" [label="(Block,)"];
"1000543" [label="(Call,state = udhcp_get_option(&packet, DHCP_MESSAGE_TYPE))"];
"1000408" [label="(Identifier,server_socket)"];
"1000513" [label="(Identifier,errno)"];
"1000552" [label="(Identifier,state)"];
"1000712" [label="(Call,&packet)"];
"1000548" [label="(Identifier,DHCP_MESSAGE_TYPE)"];
"1000745" [label="(Call,time(NULL) + server_config.decline_time)"];
"1000762" [label="(Call,packet.ciaddr)"];
"1000544" [label="(Identifier,state)"];
"1000713" [label="(Identifier,packet)"];
"1000775" [label="(ControlStructure,break;)"];
"1000773" [label="(Call,time(NULL))"];
"1000402" [label="(ControlStructure,if (server_socket < 0))"];
"1000665" [label="(Identifier,lease)"];
"1000724" [label="(Call,lease  /* chaddr matches this lease */\n\t\t\t && requested_nip == lease->lease_nip)"];
"1000521" [label="(Literal,1)"];
"1000526" [label="(Identifier,packet)"];
"1000654" [label="(Identifier,state)"];
"1000496" [label="(Identifier,bytes)"];
"1000520" [label="(Call,-1)"];
"1000673" [label="(ControlStructure,if (!requested_ip_opt))"];
"1000546" [label="(Call,&packet)"];
"1000359" [label="(Call,server_config.server_nip == 0)"];
"1000581" [label="(Identifier,server_id_opt)"];
"1000522" [label="(ControlStructure,continue;)"];
"1000416" [label="(Identifier,server_socket)"];
"1000498" [label="(Call,&packet)"];
"1000757" [label="(Call,server_id_opt\n\t\t\t && lease  /* chaddr matches this lease */\n\t\t\t && packet.ciaddr == lease->lease_nip)"];
"1000628" [label="(Call,lease = &fake_lease)"];
"1000719" [label="(ControlStructure,if (server_id_opt\n\t\t\t && requested_ip_opt\n\t\t\t && lease  /* chaddr matches this lease */\n\t\t\t && requested_nip == lease->lease_nip\n\t\t\t))"];
"1000720" [label="(Call,server_id_opt\n\t\t\t && requested_ip_opt\n\t\t\t && lease  /* chaddr matches this lease */\n\t\t\t && requested_nip == lease->lease_nip)"];
"1000748" [label="(Call,server_config.decline_time)"];
"1000648" [label="(Block,)"];
"1000677" [label="(Call,requested_nip = packet.ciaddr)"];
"1000515" [label="(Block,)"];
"1000768" [label="(Block,)"];
"1000502" [label="(Call,bytes < 0)"];
"1000559" [label="(Identifier,DHCP_MINTYPE)"];
"1000569" [label="(Call,server_id_opt = udhcp_get_option32(&packet, DHCP_SERVER_ID))"];
"1000144" [label="(Call,server_socket = -1)"];
"1000447" [label="(Literal,2)"];
"1000554" [label="(Call,state[0] < DHCP_MINTYPE || state[0] > DHCP_MAXTYPE)"];
"1000458" [label="(ControlStructure,goto write_leases;)"];
"1000580" [label="(Identifier,server_id_network_order)"];
"1000682" [label="(ControlStructure,if (requested_nip == 0))"];
"1000725" [label="(Identifier,lease)"];
"1000685" [label="(Literal,0)"];
"1000504" [label="(Literal,0)"];
"1000690" [label="(ControlStructure,if (lease && requested_nip == lease->lease_nip))"];
"1000572" [label="(Call,&packet)"];
"1000741" [label="(Call,lease->expires = time(NULL) + server_config.decline_time)"];
"1000443" [label="(Call,retval = poll(pfds, 2, tv))"];
"1000451" [label="(Identifier,retval)"];
"1000699" [label="(Call,send_ACK(&packet, lease->lease_nip))"];
"1000734" [label="(Identifier,lease)"];
"1000446" [label="(Identifier,pfds)"];
"1000706" [label="(ControlStructure,if (server_id_opt    /* client is in SELECTING state */\n\t\t\t || requested_ip_opt /* client is in INIT-REBOOT state */\n\t\t\t))"];
"1000509" [label="(Identifier,bytes)"];
"1000698" [label="(Block,)"];
"1000728" [label="(Call,lease->lease_nip)"];
"1000667" [label="(Identifier,arpping_ms)"];
"1000705" [label="(ControlStructure,break;)"];
"1000510" [label="(Call,-1)"];
"1000512" [label="(Call,errno != EINTR)"];
"1000557" [label="(Identifier,state)"];
"1000553" [label="(Identifier,NULL)"];
"1000417" [label="(JumpTarget,new_tv:)"];
"1000579" [label="(Call,move_from_unaligned32(server_id_network_order, server_id_opt))"];
"1000761" [label="(Call,packet.ciaddr == lease->lease_nip)"];
"1000497" [label="(Call,udhcp_recv_kernel_packet(&packet, server_socket))"];
"1000444" [label="(Identifier,retval)"];
"1000583" [label="(Call,server_id_network_order != server_config.server_nip)"];
"1000457" [label="(Literal,0)"];
"1000397" [label="(Identifier,requested_nip)"];
"1000562" [label="(Identifier,state)"];
"1000469" [label="(Identifier,pfds)"];
"1000549" [label="(ControlStructure,if (state == NULL || state[0] < DHCP_MINTYPE || state[0] > DHCP_MAXTYPE))"];
"1000398" [label="(Identifier,requested_nip)"];
"1000769" [label="(Call,lease->expires = time(NULL))"];
"1000702" [label="(Call,lease->lease_nip)"];
"1000707" [label="(Call,server_id_opt    /* client is in SELECTING state */\n\t\t\t || requested_ip_opt)"];
"1000759" [label="(Call,lease  /* chaddr matches this lease */\n\t\t\t && packet.ciaddr == lease->lease_nip)"];
"1000593" [label="(Identifier,static_lease_nip)"];
"1000445" [label="(Call,poll(pfds, 2, tv))"];
"1000455" [label="(Call,retval == 0)"];
"1000642" [label="(Call,udhcp_get_option32(&packet, DHCP_REQUESTED_IP))"];
"1000456" [label="(Identifier,retval)"];
"1000770" [label="(Call,lease->expires)"];
"1000651" [label="(Identifier,requested_ip_opt)"];
"1000403" [label="(Call,server_socket < 0)"];
"1000570" [label="(Identifier,server_id_opt)"];
"1000695" [label="(Call,lease->lease_nip)"];
"1000404" [label="(Identifier,server_socket)"];
"1000760" [label="(Identifier,lease)"];
"1000656" [label="(Block,)"];
"1000500" [label="(Identifier,server_socket)"];
"1000574" [label="(Identifier,DHCP_SERVER_ID)"];
"1000519" [label="(Identifier,server_socket)"];
"1000664" [label="(Identifier,static_lease_nip)"];
"1000567" [label="(Literal,\"no or bad message type option, ignoring packet\")"];
"1000506" [label="(ControlStructure,if (bytes == -1 && errno != EINTR))"];
"1000396" [label="(Call,requested_nip = requested_nip)"];
"1000576" [label="(Identifier,server_id_opt)"];
"1000714" [label="(ControlStructure,break;)"];
"1000571" [label="(Call,udhcp_get_option32(&packet, DHCP_SERVER_ID))"];
"1000388" [label="(Block,)"];
"1000746" [label="(Call,time(NULL))"];
"1000418" [label="(Call,tv = -1)"];
"1000407" [label="(Call,server_socket = udhcp_listen_socket(/*INADDR_ANY,*/ SERVER_PORT,\n\t\t\t\t\tserver_config.interface))"];
"1000721" [label="(Identifier,server_id_opt)"];
"1000711" [label="(Call,send_NAK(&packet))"];
"1000650" [label="(Identifier,requested_nip)"];
"1000560" [label="(Call,state[0] > DHCP_MAXTYPE)"];
"1000771" [label="(Identifier,lease)"];
"1000661" [label="(Call,send_offer(&packet, static_lease_nip, lease, requested_ip_opt, arpping_ms))"];
"1000503" [label="(Identifier,bytes)"];
"1000709" [label="(Identifier,requested_ip_opt)"];
"1000756" [label="(ControlStructure,if (server_id_opt\n\t\t\t && lease  /* chaddr matches this lease */\n\t\t\t && packet.ciaddr == lease->lease_nip\n\t\t\t))"];
"1000694" [label="(Identifier,requested_nip)"];
"1000692" [label="(Identifier,lease)"];
"1000749" [label="(Identifier,server_config)"];
"1000501" [label="(ControlStructure,if (bytes < 0))"];
"1000585" [label="(Call,server_config.server_nip)"];
"1000701" [label="(Identifier,packet)"];
"1000683" [label="(Call,requested_nip == 0)"];
"1000679" [label="(Call,packet.ciaddr)"];
"1000239" [label="(Call,arpping_ms = xatou(str_a))"];
"1000675" [label="(Identifier,requested_ip_opt)"];
"1000781" [label="(Call,&packet)"];
"1000582" [label="(ControlStructure,if (server_id_network_order != server_config.server_nip))"];
"1000495" [label="(Call,bytes = udhcp_recv_kernel_packet(&packet, server_socket))"];
"1000518" -> "1000515"  [label="AST: "];
"1000518" -> "1000520"  [label="CFG: "];
"1000519" -> "1000518"  [label="AST: "];
"1000520" -> "1000518"  [label="AST: "];
"1000522" -> "1000518"  [label="CFG: "];
"1000518" -> "1000795"  [label="DDG: -1"];
"1000518" -> "1000795"  [label="DDG: server_socket"];
"1000518" -> "1000403"  [label="DDG: server_socket"];
"1000520" -> "1000518"  [label="DDG: 1"];
"1000520" -> "1000521"  [label="CFG: "];
"1000521" -> "1000520"  [label="AST: "];
"1000403" -> "1000402"  [label="AST: "];
"1000403" -> "1000405"  [label="CFG: "];
"1000404" -> "1000403"  [label="AST: "];
"1000405" -> "1000403"  [label="AST: "];
"1000408" -> "1000403"  [label="CFG: "];
"1000415" -> "1000403"  [label="CFG: "];
"1000403" -> "1000795"  [label="DDG: server_socket < 0"];
"1000497" -> "1000403"  [label="DDG: server_socket"];
"1000414" -> "1000403"  [label="DDG: server_socket"];
"1000144" -> "1000403"  [label="DDG: server_socket"];
"1000403" -> "1000414"  [label="DDG: server_socket"];
"1000414" -> "1000388"  [label="AST: "];
"1000414" -> "1000416"  [label="CFG: "];
"1000415" -> "1000414"  [label="AST: "];
"1000416" -> "1000414"  [label="AST: "];
"1000417" -> "1000414"  [label="CFG: "];
"1000414" -> "1000795"  [label="DDG: udhcp_sp_fd_set(pfds, server_socket)"];
"1000414" -> "1000795"  [label="DDG: server_socket"];
"1000414" -> "1000795"  [label="DDG: pfds"];
"1000445" -> "1000414"  [label="DDG: pfds"];
"1000407" -> "1000414"  [label="DDG: server_socket"];
"1000414" -> "1000445"  [label="DDG: pfds"];
"1000414" -> "1000497"  [label="DDG: server_socket"];
"1000445" -> "1000443"  [label="AST: "];
"1000445" -> "1000448"  [label="CFG: "];
"1000446" -> "1000445"  [label="AST: "];
"1000447" -> "1000445"  [label="AST: "];
"1000448" -> "1000445"  [label="AST: "];
"1000443" -> "1000445"  [label="CFG: "];
"1000445" -> "1000795"  [label="DDG: pfds"];
"1000445" -> "1000795"  [label="DDG: tv"];
"1000445" -> "1000443"  [label="DDG: pfds"];
"1000445" -> "1000443"  [label="DDG: 2"];
"1000445" -> "1000443"  [label="DDG: tv"];
"1000440" -> "1000445"  [label="DDG: tv"];
"1000418" -> "1000445"  [label="DDG: tv"];
"1000443" -> "1000388"  [label="AST: "];
"1000444" -> "1000443"  [label="AST: "];
"1000451" -> "1000443"  [label="CFG: "];
"1000443" -> "1000795"  [label="DDG: poll(pfds, 2, tv)"];
"1000443" -> "1000450"  [label="DDG: retval"];
"1000450" -> "1000449"  [label="AST: "];
"1000450" -> "1000452"  [label="CFG: "];
"1000451" -> "1000450"  [label="AST: "];
"1000452" -> "1000450"  [label="AST: "];
"1000456" -> "1000450"  [label="CFG: "];
"1000469" -> "1000450"  [label="CFG: "];
"1000450" -> "1000795"  [label="DDG: retval <= 0"];
"1000450" -> "1000455"  [label="DDG: retval"];
"1000455" -> "1000454"  [label="AST: "];
"1000455" -> "1000457"  [label="CFG: "];
"1000456" -> "1000455"  [label="AST: "];
"1000457" -> "1000455"  [label="AST: "];
"1000458" -> "1000455"  [label="CFG: "];
"1000461" -> "1000455"  [label="CFG: "];
"1000455" -> "1000795"  [label="DDG: retval == 0"];
"1000497" -> "1000495"  [label="AST: "];
"1000497" -> "1000500"  [label="CFG: "];
"1000498" -> "1000497"  [label="AST: "];
"1000500" -> "1000497"  [label="AST: "];
"1000495" -> "1000497"  [label="CFG: "];
"1000497" -> "1000795"  [label="DDG: &packet"];
"1000497" -> "1000795"  [label="DDG: server_socket"];
"1000497" -> "1000495"  [label="DDG: &packet"];
"1000497" -> "1000495"  [label="DDG: server_socket"];
"1000642" -> "1000497"  [label="DDG: &packet"];
"1000699" -> "1000497"  [label="DDG: &packet"];
"1000711" -> "1000497"  [label="DDG: &packet"];
"1000780" -> "1000497"  [label="DDG: &packet"];
"1000661" -> "1000497"  [label="DDG: &packet"];
"1000545" -> "1000497"  [label="DDG: &packet"];
"1000571" -> "1000497"  [label="DDG: &packet"];
"1000497" -> "1000516"  [label="DDG: server_socket"];
"1000497" -> "1000545"  [label="DDG: &packet"];
"1000495" -> "1000388"  [label="AST: "];
"1000496" -> "1000495"  [label="AST: "];
"1000503" -> "1000495"  [label="CFG: "];
"1000495" -> "1000795"  [label="DDG: udhcp_recv_kernel_packet(&packet, server_socket)"];
"1000495" -> "1000502"  [label="DDG: bytes"];
"1000502" -> "1000501"  [label="AST: "];
"1000502" -> "1000504"  [label="CFG: "];
"1000503" -> "1000502"  [label="AST: "];
"1000504" -> "1000502"  [label="AST: "];
"1000509" -> "1000502"  [label="CFG: "];
"1000526" -> "1000502"  [label="CFG: "];
"1000502" -> "1000795"  [label="DDG: bytes"];
"1000502" -> "1000795"  [label="DDG: bytes < 0"];
"1000502" -> "1000508"  [label="DDG: bytes"];
"1000508" -> "1000507"  [label="AST: "];
"1000508" -> "1000510"  [label="CFG: "];
"1000509" -> "1000508"  [label="AST: "];
"1000510" -> "1000508"  [label="AST: "];
"1000513" -> "1000508"  [label="CFG: "];
"1000507" -> "1000508"  [label="CFG: "];
"1000508" -> "1000795"  [label="DDG: bytes"];
"1000508" -> "1000795"  [label="DDG: -1"];
"1000508" -> "1000507"  [label="DDG: bytes"];
"1000508" -> "1000507"  [label="DDG: -1"];
"1000510" -> "1000508"  [label="DDG: 1"];
"1000507" -> "1000506"  [label="AST: "];
"1000507" -> "1000512"  [label="CFG: "];
"1000512" -> "1000507"  [label="AST: "];
"1000517" -> "1000507"  [label="CFG: "];
"1000522" -> "1000507"  [label="CFG: "];
"1000507" -> "1000795"  [label="DDG: bytes == -1 && errno != EINTR"];
"1000507" -> "1000795"  [label="DDG: errno != EINTR"];
"1000507" -> "1000795"  [label="DDG: bytes == -1"];
"1000512" -> "1000507"  [label="DDG: errno"];
"1000512" -> "1000507"  [label="DDG: EINTR"];
"1000516" -> "1000515"  [label="AST: "];
"1000516" -> "1000517"  [label="CFG: "];
"1000517" -> "1000516"  [label="AST: "];
"1000519" -> "1000516"  [label="CFG: "];
"1000516" -> "1000795"  [label="DDG: close(server_socket)"];
"1000545" -> "1000543"  [label="AST: "];
"1000545" -> "1000548"  [label="CFG: "];
"1000546" -> "1000545"  [label="AST: "];
"1000548" -> "1000545"  [label="AST: "];
"1000543" -> "1000545"  [label="CFG: "];
"1000545" -> "1000795"  [label="DDG: DHCP_MESSAGE_TYPE"];
"1000545" -> "1000795"  [label="DDG: &packet"];
"1000545" -> "1000543"  [label="DDG: &packet"];
"1000545" -> "1000543"  [label="DDG: DHCP_MESSAGE_TYPE"];
"1000545" -> "1000571"  [label="DDG: &packet"];
"1000543" -> "1000388"  [label="AST: "];
"1000544" -> "1000543"  [label="AST: "];
"1000552" -> "1000543"  [label="CFG: "];
"1000543" -> "1000795"  [label="DDG: udhcp_get_option(&packet, DHCP_MESSAGE_TYPE)"];
"1000543" -> "1000551"  [label="DDG: state"];
"1000551" -> "1000550"  [label="AST: "];
"1000551" -> "1000553"  [label="CFG: "];
"1000552" -> "1000551"  [label="AST: "];
"1000553" -> "1000551"  [label="AST: "];
"1000557" -> "1000551"  [label="CFG: "];
"1000550" -> "1000551"  [label="CFG: "];
"1000551" -> "1000795"  [label="DDG: NULL"];
"1000551" -> "1000795"  [label="DDG: state"];
"1000551" -> "1000550"  [label="DDG: state"];
"1000551" -> "1000550"  [label="DDG: NULL"];
"1000555" -> "1000551"  [label="DDG: state[0]"];
"1000560" -> "1000551"  [label="DDG: state[0]"];
"1000746" -> "1000551"  [label="DDG: NULL"];
"1000773" -> "1000551"  [label="DDG: NULL"];
"1000551" -> "1000555"  [label="DDG: state"];
"1000551" -> "1000560"  [label="DDG: state"];
"1000551" -> "1000746"  [label="DDG: NULL"];
"1000551" -> "1000773"  [label="DDG: NULL"];
"1000550" -> "1000549"  [label="AST: "];
"1000550" -> "1000554"  [label="CFG: "];
"1000554" -> "1000550"  [label="AST: "];
"1000567" -> "1000550"  [label="CFG: "];
"1000570" -> "1000550"  [label="CFG: "];
"1000550" -> "1000795"  [label="DDG: state == NULL || state[0] < DHCP_MINTYPE || state[0] > DHCP_MAXTYPE"];
"1000550" -> "1000795"  [label="DDG: state[0] < DHCP_MINTYPE || state[0] > DHCP_MAXTYPE"];
"1000550" -> "1000795"  [label="DDG: state == NULL"];
"1000554" -> "1000550"  [label="DDG: state[0] < DHCP_MINTYPE"];
"1000554" -> "1000550"  [label="DDG: state[0] > DHCP_MAXTYPE"];
"1000555" -> "1000554"  [label="AST: "];
"1000555" -> "1000559"  [label="CFG: "];
"1000556" -> "1000555"  [label="AST: "];
"1000559" -> "1000555"  [label="AST: "];
"1000562" -> "1000555"  [label="CFG: "];
"1000554" -> "1000555"  [label="CFG: "];
"1000555" -> "1000795"  [label="DDG: state[0]"];
"1000555" -> "1000795"  [label="DDG: DHCP_MINTYPE"];
"1000555" -> "1000554"  [label="DDG: state[0]"];
"1000555" -> "1000554"  [label="DDG: DHCP_MINTYPE"];
"1000560" -> "1000555"  [label="DDG: state[0]"];
"1000555" -> "1000560"  [label="DDG: state[0]"];
"1000554" -> "1000560"  [label="CFG: "];
"1000560" -> "1000554"  [label="AST: "];
"1000554" -> "1000795"  [label="DDG: state[0] > DHCP_MAXTYPE"];
"1000554" -> "1000795"  [label="DDG: state[0] < DHCP_MINTYPE"];
"1000560" -> "1000554"  [label="DDG: state[0]"];
"1000560" -> "1000554"  [label="DDG: DHCP_MAXTYPE"];
"1000560" -> "1000564"  [label="CFG: "];
"1000561" -> "1000560"  [label="AST: "];
"1000564" -> "1000560"  [label="AST: "];
"1000560" -> "1000795"  [label="DDG: DHCP_MAXTYPE"];
"1000560" -> "1000795"  [label="DDG: state[0]"];
"1000746" -> "1000745"  [label="AST: "];
"1000746" -> "1000747"  [label="CFG: "];
"1000747" -> "1000746"  [label="AST: "];
"1000749" -> "1000746"  [label="CFG: "];
"1000746" -> "1000795"  [label="DDG: NULL"];
"1000746" -> "1000741"  [label="DDG: NULL"];
"1000746" -> "1000745"  [label="DDG: NULL"];
"1000741" -> "1000731"  [label="AST: "];
"1000741" -> "1000745"  [label="CFG: "];
"1000742" -> "1000741"  [label="AST: "];
"1000745" -> "1000741"  [label="AST: "];
"1000751" -> "1000741"  [label="CFG: "];
"1000741" -> "1000795"  [label="DDG: lease->expires"];
"1000741" -> "1000795"  [label="DDG: time(NULL) + server_config.decline_time"];
"1000745" -> "1000748"  [label="CFG: "];
"1000748" -> "1000745"  [label="AST: "];
"1000745" -> "1000795"  [label="DDG: server_config.decline_time"];
"1000745" -> "1000795"  [label="DDG: time(NULL)"];
"1000773" -> "1000769"  [label="AST: "];
"1000773" -> "1000774"  [label="CFG: "];
"1000774" -> "1000773"  [label="AST: "];
"1000769" -> "1000773"  [label="CFG: "];
"1000773" -> "1000795"  [label="DDG: NULL"];
"1000773" -> "1000769"  [label="DDG: NULL"];
"1000769" -> "1000768"  [label="AST: "];
"1000770" -> "1000769"  [label="AST: "];
"1000775" -> "1000769"  [label="CFG: "];
"1000769" -> "1000795"  [label="DDG: time(NULL)"];
"1000769" -> "1000795"  [label="DDG: lease->expires"];
"1000571" -> "1000569"  [label="AST: "];
"1000571" -> "1000574"  [label="CFG: "];
"1000572" -> "1000571"  [label="AST: "];
"1000574" -> "1000571"  [label="AST: "];
"1000569" -> "1000571"  [label="CFG: "];
"1000571" -> "1000795"  [label="DDG: DHCP_SERVER_ID"];
"1000571" -> "1000795"  [label="DDG: &packet"];
"1000571" -> "1000569"  [label="DDG: &packet"];
"1000571" -> "1000569"  [label="DDG: DHCP_SERVER_ID"];
"1000571" -> "1000642"  [label="DDG: &packet"];
"1000569" -> "1000388"  [label="AST: "];
"1000570" -> "1000569"  [label="AST: "];
"1000576" -> "1000569"  [label="CFG: "];
"1000569" -> "1000795"  [label="DDG: udhcp_get_option32(&packet, DHCP_SERVER_ID)"];
"1000569" -> "1000795"  [label="DDG: server_id_opt"];
"1000569" -> "1000579"  [label="DDG: server_id_opt"];
"1000569" -> "1000707"  [label="DDG: server_id_opt"];
"1000569" -> "1000720"  [label="DDG: server_id_opt"];
"1000569" -> "1000757"  [label="DDG: server_id_opt"];
"1000579" -> "1000577"  [label="AST: "];
"1000579" -> "1000581"  [label="CFG: "];
"1000580" -> "1000579"  [label="AST: "];
"1000581" -> "1000579"  [label="AST: "];
"1000584" -> "1000579"  [label="CFG: "];
"1000579" -> "1000795"  [label="DDG: move_from_unaligned32(server_id_network_order, server_id_opt)"];
"1000579" -> "1000795"  [label="DDG: server_id_opt"];
"1000583" -> "1000579"  [label="DDG: server_id_network_order"];
"1000579" -> "1000583"  [label="DDG: server_id_network_order"];
"1000579" -> "1000707"  [label="DDG: server_id_opt"];
"1000579" -> "1000720"  [label="DDG: server_id_opt"];
"1000579" -> "1000757"  [label="DDG: server_id_opt"];
"1000583" -> "1000582"  [label="AST: "];
"1000583" -> "1000585"  [label="CFG: "];
"1000584" -> "1000583"  [label="AST: "];
"1000585" -> "1000583"  [label="AST: "];
"1000590" -> "1000583"  [label="CFG: "];
"1000593" -> "1000583"  [label="CFG: "];
"1000583" -> "1000795"  [label="DDG: server_id_network_order != server_config.server_nip"];
"1000583" -> "1000795"  [label="DDG: server_id_network_order"];
"1000583" -> "1000795"  [label="DDG: server_config.server_nip"];
"1000359" -> "1000583"  [label="DDG: server_config.server_nip"];
"1000707" -> "1000706"  [label="AST: "];
"1000707" -> "1000708"  [label="CFG: "];
"1000707" -> "1000709"  [label="CFG: "];
"1000708" -> "1000707"  [label="AST: "];
"1000709" -> "1000707"  [label="AST: "];
"1000713" -> "1000707"  [label="CFG: "];
"1000714" -> "1000707"  [label="CFG: "];
"1000707" -> "1000795"  [label="DDG: requested_ip_opt"];
"1000707" -> "1000795"  [label="DDG: server_id_opt"];
"1000707" -> "1000795"  [label="DDG: server_id_opt    /* client is in SELECTING state */\n\t\t\t || requested_ip_opt"];
"1000674" -> "1000707"  [label="DDG: requested_ip_opt"];
"1000720" -> "1000719"  [label="AST: "];
"1000720" -> "1000721"  [label="CFG: "];
"1000720" -> "1000722"  [label="CFG: "];
"1000721" -> "1000720"  [label="AST: "];
"1000722" -> "1000720"  [label="AST: "];
"1000734" -> "1000720"  [label="CFG: "];
"1000751" -> "1000720"  [label="CFG: "];
"1000720" -> "1000795"  [label="DDG: server_id_opt"];
"1000720" -> "1000795"  [label="DDG: server_id_opt\n\t\t\t && requested_ip_opt\n\t\t\t && lease  /* chaddr matches this lease */\n\t\t\t && requested_nip == lease->lease_nip"];
"1000720" -> "1000795"  [label="DDG: requested_ip_opt\n\t\t\t && lease  /* chaddr matches this lease */\n\t\t\t && requested_nip == lease->lease_nip"];
"1000722" -> "1000720"  [label="DDG: requested_ip_opt"];
"1000722" -> "1000720"  [label="DDG: lease  /* chaddr matches this lease */\n\t\t\t && requested_nip == lease->lease_nip"];
"1000757" -> "1000756"  [label="AST: "];
"1000757" -> "1000758"  [label="CFG: "];
"1000757" -> "1000759"  [label="CFG: "];
"1000758" -> "1000757"  [label="AST: "];
"1000759" -> "1000757"  [label="AST: "];
"1000771" -> "1000757"  [label="CFG: "];
"1000775" -> "1000757"  [label="CFG: "];
"1000757" -> "1000795"  [label="DDG: server_id_opt\n\t\t\t && lease  /* chaddr matches this lease */\n\t\t\t && packet.ciaddr == lease->lease_nip"];
"1000757" -> "1000795"  [label="DDG: server_id_opt"];
"1000757" -> "1000795"  [label="DDG: lease  /* chaddr matches this lease */\n\t\t\t && packet.ciaddr == lease->lease_nip"];
"1000759" -> "1000757"  [label="DDG: lease"];
"1000759" -> "1000757"  [label="DDG: packet.ciaddr == lease->lease_nip"];
"1000642" -> "1000640"  [label="AST: "];
"1000642" -> "1000645"  [label="CFG: "];
"1000643" -> "1000642"  [label="AST: "];
"1000645" -> "1000642"  [label="AST: "];
"1000640" -> "1000642"  [label="CFG: "];
"1000642" -> "1000795"  [label="DDG: &packet"];
"1000642" -> "1000795"  [label="DDG: DHCP_REQUESTED_IP"];
"1000642" -> "1000640"  [label="DDG: &packet"];
"1000642" -> "1000640"  [label="DDG: DHCP_REQUESTED_IP"];
"1000642" -> "1000661"  [label="DDG: &packet"];
"1000642" -> "1000699"  [label="DDG: &packet"];
"1000642" -> "1000711"  [label="DDG: &packet"];
"1000642" -> "1000780"  [label="DDG: &packet"];
"1000640" -> "1000388"  [label="AST: "];
"1000641" -> "1000640"  [label="AST: "];
"1000647" -> "1000640"  [label="CFG: "];
"1000640" -> "1000795"  [label="DDG: requested_ip_opt"];
"1000640" -> "1000795"  [label="DDG: udhcp_get_option32(&packet, DHCP_REQUESTED_IP)"];
"1000640" -> "1000649"  [label="DDG: requested_ip_opt"];
"1000640" -> "1000661"  [label="DDG: requested_ip_opt"];
"1000640" -> "1000674"  [label="DDG: requested_ip_opt"];
"1000640" -> "1000722"  [label="DDG: requested_ip_opt"];
"1000649" -> "1000648"  [label="AST: "];
"1000649" -> "1000651"  [label="CFG: "];
"1000650" -> "1000649"  [label="AST: "];
"1000651" -> "1000649"  [label="AST: "];
"1000654" -> "1000649"  [label="CFG: "];
"1000649" -> "1000795"  [label="DDG: requested_nip"];
"1000649" -> "1000795"  [label="DDG: requested_ip_opt"];
"1000649" -> "1000795"  [label="DDG: move_from_unaligned32(requested_nip, requested_ip_opt)"];
"1000649" -> "1000396"  [label="DDG: requested_nip"];
"1000396" -> "1000649"  [label="DDG: requested_nip"];
"1000683" -> "1000649"  [label="DDG: requested_nip"];
"1000726" -> "1000649"  [label="DDG: requested_nip"];
"1000693" -> "1000649"  [label="DDG: requested_nip"];
"1000649" -> "1000661"  [label="DDG: requested_ip_opt"];
"1000649" -> "1000674"  [label="DDG: requested_ip_opt"];
"1000649" -> "1000693"  [label="DDG: requested_nip"];
"1000649" -> "1000722"  [label="DDG: requested_ip_opt"];
"1000649" -> "1000726"  [label="DDG: requested_nip"];
"1000396" -> "1000388"  [label="AST: "];
"1000396" -> "1000398"  [label="CFG: "];
"1000397" -> "1000396"  [label="AST: "];
"1000398" -> "1000396"  [label="AST: "];
"1000404" -> "1000396"  [label="CFG: "];
"1000396" -> "1000795"  [label="DDG: requested_nip"];
"1000683" -> "1000396"  [label="DDG: requested_nip"];
"1000726" -> "1000396"  [label="DDG: requested_nip"];
"1000693" -> "1000396"  [label="DDG: requested_nip"];
"1000396" -> "1000693"  [label="DDG: requested_nip"];
"1000396" -> "1000726"  [label="DDG: requested_nip"];
"1000693" -> "1000691"  [label="AST: "];
"1000693" -> "1000695"  [label="CFG: "];
"1000694" -> "1000693"  [label="AST: "];
"1000695" -> "1000693"  [label="AST: "];
"1000691" -> "1000693"  [label="CFG: "];
"1000693" -> "1000795"  [label="DDG: lease->lease_nip"];
"1000693" -> "1000795"  [label="DDG: requested_nip"];
"1000693" -> "1000691"  [label="DDG: requested_nip"];
"1000693" -> "1000691"  [label="DDG: lease->lease_nip"];
"1000683" -> "1000693"  [label="DDG: requested_nip"];
"1000726" -> "1000693"  [label="DDG: requested_nip"];
"1000726" -> "1000693"  [label="DDG: lease->lease_nip"];
"1000699" -> "1000693"  [label="DDG: lease->lease_nip"];
"1000761" -> "1000693"  [label="DDG: lease->lease_nip"];
"1000693" -> "1000699"  [label="DDG: lease->lease_nip"];
"1000693" -> "1000726"  [label="DDG: requested_nip"];
"1000693" -> "1000726"  [label="DDG: lease->lease_nip"];
"1000693" -> "1000761"  [label="DDG: lease->lease_nip"];
"1000691" -> "1000690"  [label="AST: "];
"1000691" -> "1000692"  [label="CFG: "];
"1000692" -> "1000691"  [label="AST: "];
"1000701" -> "1000691"  [label="CFG: "];
"1000708" -> "1000691"  [label="CFG: "];
"1000691" -> "1000795"  [label="DDG: requested_nip == lease->lease_nip"];
"1000691" -> "1000795"  [label="DDG: lease"];
"1000691" -> "1000795"  [label="DDG: lease && requested_nip == lease->lease_nip"];
"1000628" -> "1000691"  [label="DDG: lease"];
"1000634" -> "1000691"  [label="DDG: lease"];
"1000724" -> "1000691"  [label="DDG: requested_nip == lease->lease_nip"];
"1000691" -> "1000724"  [label="DDG: requested_nip == lease->lease_nip"];
"1000724" -> "1000722"  [label="AST: "];
"1000724" -> "1000725"  [label="CFG: "];
"1000724" -> "1000726"  [label="CFG: "];
"1000725" -> "1000724"  [label="AST: "];
"1000726" -> "1000724"  [label="AST: "];
"1000722" -> "1000724"  [label="CFG: "];
"1000724" -> "1000795"  [label="DDG: lease"];
"1000724" -> "1000795"  [label="DDG: requested_nip == lease->lease_nip"];
"1000724" -> "1000722"  [label="DDG: lease"];
"1000724" -> "1000722"  [label="DDG: requested_nip == lease->lease_nip"];
"1000628" -> "1000724"  [label="DDG: lease"];
"1000634" -> "1000724"  [label="DDG: lease"];
"1000726" -> "1000724"  [label="DDG: requested_nip"];
"1000726" -> "1000724"  [label="DDG: lease->lease_nip"];
"1000722" -> "1000723"  [label="CFG: "];
"1000723" -> "1000722"  [label="AST: "];
"1000722" -> "1000795"  [label="DDG: lease  /* chaddr matches this lease */\n\t\t\t && requested_nip == lease->lease_nip"];
"1000722" -> "1000795"  [label="DDG: requested_ip_opt"];
"1000699" -> "1000698"  [label="AST: "];
"1000699" -> "1000702"  [label="CFG: "];
"1000700" -> "1000699"  [label="AST: "];
"1000702" -> "1000699"  [label="AST: "];
"1000705" -> "1000699"  [label="CFG: "];
"1000699" -> "1000795"  [label="DDG: &packet"];
"1000699" -> "1000795"  [label="DDG: send_ACK(&packet, lease->lease_nip)"];
"1000699" -> "1000795"  [label="DDG: lease->lease_nip"];
"1000761" -> "1000699"  [label="DDG: lease->lease_nip"];
"1000726" -> "1000699"  [label="DDG: lease->lease_nip"];
"1000699" -> "1000726"  [label="DDG: lease->lease_nip"];
"1000699" -> "1000761"  [label="DDG: lease->lease_nip"];
"1000726" -> "1000728"  [label="CFG: "];
"1000727" -> "1000726"  [label="AST: "];
"1000728" -> "1000726"  [label="AST: "];
"1000726" -> "1000795"  [label="DDG: requested_nip"];
"1000726" -> "1000795"  [label="DDG: lease->lease_nip"];
"1000683" -> "1000726"  [label="DDG: requested_nip"];
"1000761" -> "1000726"  [label="DDG: lease->lease_nip"];
"1000726" -> "1000761"  [label="DDG: lease->lease_nip"];
"1000761" -> "1000759"  [label="AST: "];
"1000761" -> "1000765"  [label="CFG: "];
"1000762" -> "1000761"  [label="AST: "];
"1000765" -> "1000761"  [label="AST: "];
"1000759" -> "1000761"  [label="CFG: "];
"1000761" -> "1000795"  [label="DDG: packet.ciaddr"];
"1000761" -> "1000795"  [label="DDG: lease->lease_nip"];
"1000761" -> "1000677"  [label="DDG: packet.ciaddr"];
"1000761" -> "1000759"  [label="DDG: packet.ciaddr"];
"1000761" -> "1000759"  [label="DDG: lease->lease_nip"];
"1000677" -> "1000676"  [label="AST: "];
"1000677" -> "1000679"  [label="CFG: "];
"1000678" -> "1000677"  [label="AST: "];
"1000679" -> "1000677"  [label="AST: "];
"1000684" -> "1000677"  [label="CFG: "];
"1000677" -> "1000795"  [label="DDG: packet.ciaddr"];
"1000677" -> "1000683"  [label="DDG: requested_nip"];
"1000683" -> "1000682"  [label="AST: "];
"1000683" -> "1000685"  [label="CFG: "];
"1000684" -> "1000683"  [label="AST: "];
"1000685" -> "1000683"  [label="AST: "];
"1000688" -> "1000683"  [label="CFG: "];
"1000692" -> "1000683"  [label="CFG: "];
"1000683" -> "1000795"  [label="DDG: requested_nip"];
"1000683" -> "1000795"  [label="DDG: requested_nip == 0"];
"1000759" -> "1000760"  [label="CFG: "];
"1000760" -> "1000759"  [label="AST: "];
"1000759" -> "1000795"  [label="DDG: lease"];
"1000759" -> "1000795"  [label="DDG: packet.ciaddr == lease->lease_nip"];
"1000628" -> "1000759"  [label="DDG: lease"];
"1000634" -> "1000759"  [label="DDG: lease"];
"1000661" -> "1000656"  [label="AST: "];
"1000661" -> "1000667"  [label="CFG: "];
"1000662" -> "1000661"  [label="AST: "];
"1000664" -> "1000661"  [label="AST: "];
"1000665" -> "1000661"  [label="AST: "];
"1000666" -> "1000661"  [label="AST: "];
"1000667" -> "1000661"  [label="AST: "];
"1000668" -> "1000661"  [label="CFG: "];
"1000661" -> "1000795"  [label="DDG: static_lease_nip"];
"1000661" -> "1000795"  [label="DDG: send_offer(&packet, static_lease_nip, lease, requested_ip_opt, arpping_ms)"];
"1000661" -> "1000795"  [label="DDG: &packet"];
"1000661" -> "1000795"  [label="DDG: requested_ip_opt"];
"1000661" -> "1000795"  [label="DDG: lease"];
"1000661" -> "1000795"  [label="DDG: arpping_ms"];
"1000592" -> "1000661"  [label="DDG: static_lease_nip"];
"1000605" -> "1000661"  [label="DDG: static_lease_nip"];
"1000628" -> "1000661"  [label="DDG: lease"];
"1000634" -> "1000661"  [label="DDG: lease"];
"1000239" -> "1000661"  [label="DDG: arpping_ms"];
"1000674" -> "1000673"  [label="AST: "];
"1000674" -> "1000675"  [label="CFG: "];
"1000675" -> "1000674"  [label="AST: "];
"1000678" -> "1000674"  [label="CFG: "];
"1000692" -> "1000674"  [label="CFG: "];
"1000674" -> "1000795"  [label="DDG: requested_ip_opt"];
"1000674" -> "1000795"  [label="DDG: !requested_ip_opt"];
"1000711" -> "1000710"  [label="AST: "];
"1000711" -> "1000712"  [label="CFG: "];
"1000712" -> "1000711"  [label="AST: "];
"1000714" -> "1000711"  [label="CFG: "];
"1000711" -> "1000795"  [label="DDG: send_NAK(&packet)"];
"1000711" -> "1000795"  [label="DDG: &packet"];
"1000780" -> "1000656"  [label="AST: "];
"1000780" -> "1000781"  [label="CFG: "];
"1000781" -> "1000780"  [label="AST: "];
"1000783" -> "1000780"  [label="CFG: "];
"1000780" -> "1000795"  [label="DDG: send_inform(&packet)"];
"1000780" -> "1000795"  [label="DDG: &packet"];
}
