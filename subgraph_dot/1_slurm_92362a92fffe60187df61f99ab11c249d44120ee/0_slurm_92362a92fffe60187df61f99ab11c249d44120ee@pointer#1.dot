digraph "0_slurm_92362a92fffe60187df61f99ab11c249d44120ee@pointer" {
"1000260" [label="(Call,(uid_t) req->uid)"];
"1000258" [label="(Call,fchown(fd, (uid_t) req->uid, (gid_t) req->gid))"];
"1000257" [label="(Call,fchown(fd, (uid_t) req->uid, (gid_t) req->gid) == -1)"];
"1000285" [label="(Call,close(fd))"];
"1000273" [label="(Call,snprintf(err_name, sizeof(err_name),\n\t\t\t \"Couldn't change fd owner to %u:%u: %m\n\",\n\t\t\t req->uid, req->gid))"];
"1000285" [label="(Call,close(fd))"];
"1000271" [label="(Literal,1)"];
"1000258" [label="(Call,fchown(fd, (uid_t) req->uid, (gid_t) req->gid))"];
"1000274" [label="(Identifier,err_name)"];
"1000284" [label="(JumpTarget,rwfail:)"];
"1000103" [label="(Block,)"];
"1000286" [label="(Identifier,fd)"];
"1000278" [label="(Call,req->uid)"];
"1000277" [label="(Literal,\"Couldn't change fd owner to %u:%u: %m\n\")"];
"1000262" [label="(Call,req->uid)"];
"1000275" [label="(Call,sizeof(err_name))"];
"1000256" [label="(ControlStructure,if (fchown(fd, (uid_t) req->uid, (gid_t) req->gid) == -1))"];
"1000251" [label="(Call,safe_write(fd, err_name, strlen(err_name)))"];
"1000257" [label="(Call,fchown(fd, (uid_t) req->uid, (gid_t) req->gid) == -1)"];
"1000260" [label="(Call,(uid_t) req->uid)"];
"1000270" [label="(Call,-1)"];
"1000259" [label="(Identifier,fd)"];
"1000272" [label="(Block,)"];
"1000287" [label="(MethodReturn,RET)"];
"1000273" [label="(Call,snprintf(err_name, sizeof(err_name),\n\t\t\t \"Couldn't change fd owner to %u:%u: %m\n\",\n\t\t\t req->uid, req->gid))"];
"1000281" [label="(Call,req->gid)"];
"1000265" [label="(Call,(gid_t) req->gid)"];
"1000260" -> "1000258"  [label="AST: "];
"1000260" -> "1000262"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000262" -> "1000260"  [label="AST: "];
"1000266" -> "1000260"  [label="CFG: "];
"1000260" -> "1000287"  [label="DDG: "];
"1000260" -> "1000258"  [label="DDG: "];
"1000260" -> "1000273"  [label="DDG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000258" -> "1000265"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000265" -> "1000258"  [label="AST: "];
"1000271" -> "1000258"  [label="CFG: "];
"1000258" -> "1000287"  [label="DDG: "];
"1000258" -> "1000287"  [label="DDG: "];
"1000258" -> "1000257"  [label="DDG: "];
"1000258" -> "1000257"  [label="DDG: "];
"1000258" -> "1000257"  [label="DDG: "];
"1000251" -> "1000258"  [label="DDG: "];
"1000265" -> "1000258"  [label="DDG: "];
"1000258" -> "1000285"  [label="DDG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000257" -> "1000270"  [label="CFG: "];
"1000270" -> "1000257"  [label="AST: "];
"1000274" -> "1000257"  [label="CFG: "];
"1000284" -> "1000257"  [label="CFG: "];
"1000257" -> "1000287"  [label="DDG: "];
"1000257" -> "1000287"  [label="DDG: "];
"1000257" -> "1000287"  [label="DDG: "];
"1000270" -> "1000257"  [label="DDG: "];
"1000285" -> "1000103"  [label="AST: "];
"1000285" -> "1000286"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000285"  [label="CFG: "];
"1000285" -> "1000287"  [label="DDG: "];
"1000285" -> "1000287"  [label="DDG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000273" -> "1000281"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000275" -> "1000273"  [label="AST: "];
"1000277" -> "1000273"  [label="AST: "];
"1000278" -> "1000273"  [label="AST: "];
"1000281" -> "1000273"  [label="AST: "];
"1000284" -> "1000273"  [label="CFG: "];
"1000273" -> "1000287"  [label="DDG: "];
"1000273" -> "1000287"  [label="DDG: "];
"1000273" -> "1000287"  [label="DDG: "];
"1000273" -> "1000287"  [label="DDG: "];
"1000265" -> "1000273"  [label="DDG: "];
}
