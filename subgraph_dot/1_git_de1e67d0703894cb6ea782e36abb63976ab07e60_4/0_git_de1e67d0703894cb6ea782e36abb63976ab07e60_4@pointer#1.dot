digraph "0_git_de1e67d0703894cb6ea782e36abb63976ab07e60_4@pointer" {
"1000184" [label="(Call,show(obj, base, name, cb_data))"];
"1000145" [label="(Call,!obj)"];
"1000109" [label="(Call,*obj = &tree->object)"];
"1000104" [label="(MethodParameterIn,struct strbuf *base)"];
"1000105" [label="(MethodParameterIn,const char *name)"];
"1000106" [label="(MethodParameterIn,void *cb_data)"];
"1000189" [label="(Call,strbuf_addstr(base, name))"];
"1000196" [label="(Call,strbuf_addch(base, '/'))"];
"1000222" [label="(Call,tree_entry_interesting(&entry, base, 0,\n\t\t\t\t\t\t       &revs->diffopt.pathspec))"];
"1000209" [label="(Call,tree_entry(&desc, &entry))"];
"1000220" [label="(Call,match = tree_entry_interesting(&entry, base, 0,\n\t\t\t\t\t\t       &revs->diffopt.pathspec))"];
"1000234" [label="(Call,match == all_entries_not_interesting)"];
"1000239" [label="(Call,match == entry_not_interesting)"];
"1000216" [label="(Call,match != all_entries_interesting)"];
"1000248" [label="(Call,process_tree(revs,\n\t\t\t\t     lookup_tree(entry.sha1),\n\t\t\t\t     show, base, entry.path,\n\t\t\t\t     cb_data))"];
"1000266" [label="(Call,process_gitlink(revs, entry.sha1,\n\t\t\t\t\tshow, base, entry.path,\n\t\t\t\t\tcb_data))"];
"1000250" [label="(Call,lookup_tree(entry.sha1))"];
"1000280" [label="(Call,lookup_blob(entry.sha1))"];
"1000278" [label="(Call,process_blob(revs,\n\t\t\t\t     lookup_blob(entry.sha1),\n\t\t\t\t     show, base, entry.path,\n\t\t\t\t     cb_data))"];
"1000290" [label="(Call,strbuf_setlen(base, baselen))"];
"1000241" [label="(Identifier,entry_not_interesting)"];
"1000250" [label="(Call,lookup_tree(entry.sha1))"];
"1000267" [label="(Identifier,revs)"];
"1000185" [label="(Identifier,obj)"];
"1000226" [label="(Literal,0)"];
"1000236" [label="(Identifier,all_entries_not_interesting)"];
"1000107" [label="(Block,)"];
"1000290" [label="(Call,strbuf_setlen(base, baselen))"];
"1000109" [label="(Call,*obj = &tree->object)"];
"1000239" [label="(Call,match == entry_not_interesting)"];
"1000292" [label="(Identifier,baselen)"];
"1000144" [label="(ControlStructure,if (!obj))"];
"1000220" [label="(Call,match = tree_entry_interesting(&entry, base, 0,\n\t\t\t\t\t\t       &revs->diffopt.pathspec))"];
"1000152" [label="(Identifier,obj)"];
"1000240" [label="(Identifier,match)"];
"1000218" [label="(Identifier,all_entries_interesting)"];
"1000194" [label="(Identifier,base)"];
"1000234" [label="(Call,match == all_entries_not_interesting)"];
"1000189" [label="(Call,strbuf_addstr(base, name))"];
"1000233" [label="(ControlStructure,if (match == all_entries_not_interesting))"];
"1000238" [label="(ControlStructure,if (match == entry_not_interesting))"];
"1000227" [label="(Call,&revs->diffopt.pathspec)"];
"1000187" [label="(Identifier,name)"];
"1000242" [label="(ControlStructure,continue;)"];
"1000119" [label="(Identifier,match)"];
"1000237" [label="(ControlStructure,break;)"];
"1000211" [label="(Identifier,desc)"];
"1000279" [label="(Identifier,revs)"];
"1000255" [label="(Identifier,base)"];
"1000201" [label="(Identifier,desc)"];
"1000146" [label="(Identifier,obj)"];
"1000243" [label="(ControlStructure,if (S_ISDIR(entry.mode)))"];
"1000295" [label="(MethodReturn,static void)"];
"1000217" [label="(Identifier,match)"];
"1000221" [label="(Identifier,match)"];
"1000272" [label="(Identifier,base)"];
"1000209" [label="(Call,tree_entry(&desc, &entry))"];
"1000111" [label="(Call,&tree->object)"];
"1000118" [label="(Call,match = revs->diffopt.pathspec.nr == 0 ?\n\t\tall_entries_interesting: entry_not_interesting)"];
"1000291" [label="(Identifier,base)"];
"1000145" [label="(Call,!obj)"];
"1000216" [label="(Call,match != all_entries_interesting)"];
"1000225" [label="(Identifier,base)"];
"1000103" [label="(MethodParameterIn,show_object_fn show)"];
"1000148" [label="(Literal,\"bad tree object\")"];
"1000248" [label="(Call,process_tree(revs,\n\t\t\t\t     lookup_tree(entry.sha1),\n\t\t\t\t     show, base, entry.path,\n\t\t\t\t     cb_data))"];
"1000199" [label="(Call,init_tree_desc(&desc, tree->buffer, tree->size))"];
"1000261" [label="(ControlStructure,if (S_ISGITLINK(entry.mode)))"];
"1000254" [label="(Identifier,show)"];
"1000284" [label="(Identifier,show)"];
"1000110" [label="(Identifier,obj)"];
"1000210" [label="(Call,&desc)"];
"1000286" [label="(Call,entry.path)"];
"1000246" [label="(Identifier,entry)"];
"1000273" [label="(Call,entry.path)"];
"1000192" [label="(ControlStructure,if (base->len))"];
"1000276" [label="(Identifier,cb_data)"];
"1000268" [label="(Call,entry.sha1)"];
"1000223" [label="(Call,&entry)"];
"1000186" [label="(Identifier,base)"];
"1000191" [label="(Identifier,name)"];
"1000101" [label="(MethodParameterIn,struct rev_info *revs)"];
"1000294" [label="(Identifier,tree)"];
"1000190" [label="(Identifier,base)"];
"1000266" [label="(Call,process_gitlink(revs, entry.sha1,\n\t\t\t\t\tshow, base, entry.path,\n\t\t\t\t\tcb_data))"];
"1000212" [label="(Call,&entry)"];
"1000235" [label="(Identifier,match)"];
"1000196" [label="(Call,strbuf_addch(base, '/'))"];
"1000259" [label="(Identifier,cb_data)"];
"1000277" [label="(ControlStructure,else)"];
"1000281" [label="(Call,entry.sha1)"];
"1000280" [label="(Call,lookup_blob(entry.sha1))"];
"1000198" [label="(Literal,'/')"];
"1000215" [label="(ControlStructure,if (match != all_entries_interesting))"];
"1000289" [label="(Identifier,cb_data)"];
"1000104" [label="(MethodParameterIn,struct strbuf *base)"];
"1000219" [label="(Block,)"];
"1000249" [label="(Identifier,revs)"];
"1000278" [label="(Call,process_blob(revs,\n\t\t\t\t     lookup_blob(entry.sha1),\n\t\t\t\t     show, base, entry.path,\n\t\t\t\t     cb_data))"];
"1000197" [label="(Identifier,base)"];
"1000184" [label="(Call,show(obj, base, name, cb_data))"];
"1000222" [label="(Call,tree_entry_interesting(&entry, base, 0,\n\t\t\t\t\t\t       &revs->diffopt.pathspec))"];
"1000188" [label="(Identifier,cb_data)"];
"1000106" [label="(MethodParameterIn,void *cb_data)"];
"1000208" [label="(ControlStructure,while (tree_entry(&desc, &entry)))"];
"1000256" [label="(Call,entry.path)"];
"1000285" [label="(Identifier,base)"];
"1000133" [label="(Call,baselen = base->len)"];
"1000105" [label="(MethodParameterIn,const char *name)"];
"1000251" [label="(Call,entry.sha1)"];
"1000271" [label="(Identifier,show)"];
"1000184" -> "1000107"  [label="AST: "];
"1000184" -> "1000188"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000186" -> "1000184"  [label="AST: "];
"1000187" -> "1000184"  [label="AST: "];
"1000188" -> "1000184"  [label="AST: "];
"1000190" -> "1000184"  [label="CFG: "];
"1000184" -> "1000295"  [label="DDG: obj"];
"1000184" -> "1000295"  [label="DDG: cb_data"];
"1000184" -> "1000295"  [label="DDG: show(obj, base, name, cb_data)"];
"1000145" -> "1000184"  [label="DDG: obj"];
"1000104" -> "1000184"  [label="DDG: base"];
"1000105" -> "1000184"  [label="DDG: name"];
"1000106" -> "1000184"  [label="DDG: cb_data"];
"1000184" -> "1000189"  [label="DDG: base"];
"1000184" -> "1000189"  [label="DDG: name"];
"1000184" -> "1000248"  [label="DDG: cb_data"];
"1000184" -> "1000266"  [label="DDG: cb_data"];
"1000184" -> "1000278"  [label="DDG: cb_data"];
"1000145" -> "1000144"  [label="AST: "];
"1000145" -> "1000146"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000148" -> "1000145"  [label="CFG: "];
"1000152" -> "1000145"  [label="CFG: "];
"1000145" -> "1000295"  [label="DDG: !obj"];
"1000145" -> "1000295"  [label="DDG: obj"];
"1000109" -> "1000145"  [label="DDG: obj"];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000119" -> "1000109"  [label="CFG: "];
"1000109" -> "1000295"  [label="DDG: obj"];
"1000109" -> "1000295"  [label="DDG: &tree->object"];
"1000104" -> "1000100"  [label="AST: "];
"1000104" -> "1000295"  [label="DDG: base"];
"1000104" -> "1000189"  [label="DDG: base"];
"1000104" -> "1000196"  [label="DDG: base"];
"1000104" -> "1000222"  [label="DDG: base"];
"1000104" -> "1000248"  [label="DDG: base"];
"1000104" -> "1000266"  [label="DDG: base"];
"1000104" -> "1000278"  [label="DDG: base"];
"1000104" -> "1000290"  [label="DDG: base"];
"1000105" -> "1000100"  [label="AST: "];
"1000105" -> "1000295"  [label="DDG: name"];
"1000105" -> "1000189"  [label="DDG: name"];
"1000106" -> "1000100"  [label="AST: "];
"1000106" -> "1000295"  [label="DDG: cb_data"];
"1000106" -> "1000248"  [label="DDG: cb_data"];
"1000106" -> "1000266"  [label="DDG: cb_data"];
"1000106" -> "1000278"  [label="DDG: cb_data"];
"1000189" -> "1000107"  [label="AST: "];
"1000189" -> "1000191"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000191" -> "1000189"  [label="AST: "];
"1000194" -> "1000189"  [label="CFG: "];
"1000189" -> "1000295"  [label="DDG: strbuf_addstr(base, name)"];
"1000189" -> "1000295"  [label="DDG: name"];
"1000189" -> "1000196"  [label="DDG: base"];
"1000189" -> "1000222"  [label="DDG: base"];
"1000189" -> "1000248"  [label="DDG: base"];
"1000189" -> "1000266"  [label="DDG: base"];
"1000189" -> "1000278"  [label="DDG: base"];
"1000189" -> "1000290"  [label="DDG: base"];
"1000196" -> "1000192"  [label="AST: "];
"1000196" -> "1000198"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000198" -> "1000196"  [label="AST: "];
"1000201" -> "1000196"  [label="CFG: "];
"1000196" -> "1000295"  [label="DDG: strbuf_addch(base, '/')"];
"1000196" -> "1000222"  [label="DDG: base"];
"1000196" -> "1000248"  [label="DDG: base"];
"1000196" -> "1000266"  [label="DDG: base"];
"1000196" -> "1000278"  [label="DDG: base"];
"1000196" -> "1000290"  [label="DDG: base"];
"1000222" -> "1000220"  [label="AST: "];
"1000222" -> "1000227"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000225" -> "1000222"  [label="AST: "];
"1000226" -> "1000222"  [label="AST: "];
"1000227" -> "1000222"  [label="AST: "];
"1000220" -> "1000222"  [label="CFG: "];
"1000222" -> "1000295"  [label="DDG: &revs->diffopt.pathspec"];
"1000222" -> "1000295"  [label="DDG: &entry"];
"1000222" -> "1000209"  [label="DDG: &entry"];
"1000222" -> "1000220"  [label="DDG: &entry"];
"1000222" -> "1000220"  [label="DDG: base"];
"1000222" -> "1000220"  [label="DDG: 0"];
"1000222" -> "1000220"  [label="DDG: &revs->diffopt.pathspec"];
"1000209" -> "1000222"  [label="DDG: &entry"];
"1000278" -> "1000222"  [label="DDG: base"];
"1000266" -> "1000222"  [label="DDG: base"];
"1000248" -> "1000222"  [label="DDG: base"];
"1000222" -> "1000248"  [label="DDG: base"];
"1000222" -> "1000266"  [label="DDG: base"];
"1000222" -> "1000278"  [label="DDG: base"];
"1000222" -> "1000290"  [label="DDG: base"];
"1000209" -> "1000208"  [label="AST: "];
"1000209" -> "1000212"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000212" -> "1000209"  [label="AST: "];
"1000217" -> "1000209"  [label="CFG: "];
"1000291" -> "1000209"  [label="CFG: "];
"1000209" -> "1000295"  [label="DDG: tree_entry(&desc, &entry)"];
"1000209" -> "1000295"  [label="DDG: &desc"];
"1000209" -> "1000295"  [label="DDG: &entry"];
"1000199" -> "1000209"  [label="DDG: &desc"];
"1000220" -> "1000219"  [label="AST: "];
"1000221" -> "1000220"  [label="AST: "];
"1000235" -> "1000220"  [label="CFG: "];
"1000220" -> "1000295"  [label="DDG: tree_entry_interesting(&entry, base, 0,\n\t\t\t\t\t\t       &revs->diffopt.pathspec)"];
"1000220" -> "1000234"  [label="DDG: match"];
"1000234" -> "1000233"  [label="AST: "];
"1000234" -> "1000236"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000236" -> "1000234"  [label="AST: "];
"1000237" -> "1000234"  [label="CFG: "];
"1000240" -> "1000234"  [label="CFG: "];
"1000234" -> "1000295"  [label="DDG: all_entries_not_interesting"];
"1000234" -> "1000295"  [label="DDG: match"];
"1000234" -> "1000295"  [label="DDG: match == all_entries_not_interesting"];
"1000234" -> "1000239"  [label="DDG: match"];
"1000239" -> "1000238"  [label="AST: "];
"1000239" -> "1000241"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="AST: "];
"1000242" -> "1000239"  [label="CFG: "];
"1000246" -> "1000239"  [label="CFG: "];
"1000239" -> "1000295"  [label="DDG: match == entry_not_interesting"];
"1000239" -> "1000295"  [label="DDG: match"];
"1000239" -> "1000295"  [label="DDG: entry_not_interesting"];
"1000239" -> "1000216"  [label="DDG: match"];
"1000216" -> "1000215"  [label="AST: "];
"1000216" -> "1000218"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000218" -> "1000216"  [label="AST: "];
"1000221" -> "1000216"  [label="CFG: "];
"1000246" -> "1000216"  [label="CFG: "];
"1000216" -> "1000295"  [label="DDG: match != all_entries_interesting"];
"1000216" -> "1000295"  [label="DDG: match"];
"1000216" -> "1000295"  [label="DDG: all_entries_interesting"];
"1000118" -> "1000216"  [label="DDG: match"];
"1000248" -> "1000243"  [label="AST: "];
"1000248" -> "1000259"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="AST: "];
"1000254" -> "1000248"  [label="AST: "];
"1000255" -> "1000248"  [label="AST: "];
"1000256" -> "1000248"  [label="AST: "];
"1000259" -> "1000248"  [label="AST: "];
"1000211" -> "1000248"  [label="CFG: "];
"1000248" -> "1000295"  [label="DDG: cb_data"];
"1000248" -> "1000295"  [label="DDG: process_tree(revs,\n\t\t\t\t     lookup_tree(entry.sha1),\n\t\t\t\t     show, base, entry.path,\n\t\t\t\t     cb_data)"];
"1000248" -> "1000295"  [label="DDG: show"];
"1000248" -> "1000295"  [label="DDG: lookup_tree(entry.sha1)"];
"1000248" -> "1000295"  [label="DDG: entry.path"];
"1000248" -> "1000295"  [label="DDG: revs"];
"1000266" -> "1000248"  [label="DDG: revs"];
"1000266" -> "1000248"  [label="DDG: base"];
"1000266" -> "1000248"  [label="DDG: entry.path"];
"1000266" -> "1000248"  [label="DDG: cb_data"];
"1000266" -> "1000248"  [label="DDG: show"];
"1000278" -> "1000248"  [label="DDG: revs"];
"1000278" -> "1000248"  [label="DDG: base"];
"1000278" -> "1000248"  [label="DDG: entry.path"];
"1000278" -> "1000248"  [label="DDG: cb_data"];
"1000278" -> "1000248"  [label="DDG: show"];
"1000101" -> "1000248"  [label="DDG: revs"];
"1000103" -> "1000248"  [label="DDG: show"];
"1000250" -> "1000248"  [label="DDG: entry.sha1"];
"1000248" -> "1000266"  [label="DDG: revs"];
"1000248" -> "1000266"  [label="DDG: show"];
"1000248" -> "1000266"  [label="DDG: base"];
"1000248" -> "1000266"  [label="DDG: entry.path"];
"1000248" -> "1000266"  [label="DDG: cb_data"];
"1000248" -> "1000278"  [label="DDG: revs"];
"1000248" -> "1000278"  [label="DDG: show"];
"1000248" -> "1000278"  [label="DDG: base"];
"1000248" -> "1000278"  [label="DDG: entry.path"];
"1000248" -> "1000278"  [label="DDG: cb_data"];
"1000248" -> "1000290"  [label="DDG: base"];
"1000266" -> "1000261"  [label="AST: "];
"1000266" -> "1000276"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="AST: "];
"1000271" -> "1000266"  [label="AST: "];
"1000272" -> "1000266"  [label="AST: "];
"1000273" -> "1000266"  [label="AST: "];
"1000276" -> "1000266"  [label="AST: "];
"1000211" -> "1000266"  [label="CFG: "];
"1000266" -> "1000295"  [label="DDG: process_gitlink(revs, entry.sha1,\n\t\t\t\t\tshow, base, entry.path,\n\t\t\t\t\tcb_data)"];
"1000266" -> "1000295"  [label="DDG: entry.sha1"];
"1000266" -> "1000295"  [label="DDG: revs"];
"1000266" -> "1000295"  [label="DDG: cb_data"];
"1000266" -> "1000295"  [label="DDG: entry.path"];
"1000266" -> "1000295"  [label="DDG: show"];
"1000266" -> "1000250"  [label="DDG: entry.sha1"];
"1000278" -> "1000266"  [label="DDG: revs"];
"1000278" -> "1000266"  [label="DDG: show"];
"1000278" -> "1000266"  [label="DDG: base"];
"1000278" -> "1000266"  [label="DDG: entry.path"];
"1000278" -> "1000266"  [label="DDG: cb_data"];
"1000101" -> "1000266"  [label="DDG: revs"];
"1000250" -> "1000266"  [label="DDG: entry.sha1"];
"1000280" -> "1000266"  [label="DDG: entry.sha1"];
"1000103" -> "1000266"  [label="DDG: show"];
"1000266" -> "1000278"  [label="DDG: revs"];
"1000266" -> "1000278"  [label="DDG: show"];
"1000266" -> "1000278"  [label="DDG: base"];
"1000266" -> "1000278"  [label="DDG: entry.path"];
"1000266" -> "1000278"  [label="DDG: cb_data"];
"1000266" -> "1000280"  [label="DDG: entry.sha1"];
"1000266" -> "1000290"  [label="DDG: base"];
"1000250" -> "1000251"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000254" -> "1000250"  [label="CFG: "];
"1000250" -> "1000295"  [label="DDG: entry.sha1"];
"1000280" -> "1000250"  [label="DDG: entry.sha1"];
"1000250" -> "1000280"  [label="DDG: entry.sha1"];
"1000280" -> "1000278"  [label="AST: "];
"1000280" -> "1000281"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000284" -> "1000280"  [label="CFG: "];
"1000280" -> "1000295"  [label="DDG: entry.sha1"];
"1000280" -> "1000278"  [label="DDG: entry.sha1"];
"1000278" -> "1000277"  [label="AST: "];
"1000278" -> "1000289"  [label="CFG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000284" -> "1000278"  [label="AST: "];
"1000285" -> "1000278"  [label="AST: "];
"1000286" -> "1000278"  [label="AST: "];
"1000289" -> "1000278"  [label="AST: "];
"1000211" -> "1000278"  [label="CFG: "];
"1000278" -> "1000295"  [label="DDG: entry.path"];
"1000278" -> "1000295"  [label="DDG: show"];
"1000278" -> "1000295"  [label="DDG: lookup_blob(entry.sha1)"];
"1000278" -> "1000295"  [label="DDG: cb_data"];
"1000278" -> "1000295"  [label="DDG: process_blob(revs,\n\t\t\t\t     lookup_blob(entry.sha1),\n\t\t\t\t     show, base, entry.path,\n\t\t\t\t     cb_data)"];
"1000278" -> "1000295"  [label="DDG: revs"];
"1000101" -> "1000278"  [label="DDG: revs"];
"1000103" -> "1000278"  [label="DDG: show"];
"1000278" -> "1000290"  [label="DDG: base"];
"1000290" -> "1000107"  [label="AST: "];
"1000290" -> "1000292"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000292" -> "1000290"  [label="AST: "];
"1000294" -> "1000290"  [label="CFG: "];
"1000290" -> "1000295"  [label="DDG: base"];
"1000290" -> "1000295"  [label="DDG: baselen"];
"1000290" -> "1000295"  [label="DDG: strbuf_setlen(base, baselen)"];
"1000133" -> "1000290"  [label="DDG: baselen"];
}
