digraph "1_linux_146cc8a17a3b4996f6805ee5c080e7101277c410@array" {
"1000130" [label="(Call,status_buf[0] = 0xff)"];
"1000142" [label="(Call,usb_control_msg(port->serial->dev,\n\t\t\t     usb_rcvctrlpipe(port->serial->dev, 0),\n\t\t\t     KL5KUSB105A_SIO_POLL,\n\t\t\t     USB_TYPE_VENDOR | USB_DIR_IN,\n\t\t\t     0, /* value */\n\t\t\t     0, /* index */\n \t\t\t     status_buf, KLSI_STATUSBUF_LEN,\n \t\t\t     10000\n \t\t\t     ))"];
"1000140" [label="(Call,rc = usb_control_msg(port->serial->dev,\n\t\t\t     usb_rcvctrlpipe(port->serial->dev, 0),\n\t\t\t     KL5KUSB105A_SIO_POLL,\n\t\t\t     USB_TYPE_VENDOR | USB_DIR_IN,\n\t\t\t     0, /* value */\n\t\t\t     0, /* index */\n \t\t\t     status_buf, KLSI_STATUSBUF_LEN,\n \t\t\t     10000\n \t\t\t     ))"];
"1000165" [label="(Call,rc < 0)"];
"1000168" [label="(Call,dev_err(&port->dev, \"Reading line status failed (error = %d)\n\",\n\t\t\trc))"];
"1000204" [label="(Return,return rc;)"];
"1000179" [label="(Call,get_unaligned_le16(status_buf))"];
"1000177" [label="(Call,status = get_unaligned_le16(status_buf))"];
"1000200" [label="(Call,klsi_105_status2linestate(status))"];
"1000197" [label="(Call,*line_state_p = klsi_105_status2linestate(status))"];
"1000181" [label="(Call,dev_info(&port->serial->dev->dev, \"read status %x %x\n\",\n\t\t\t status_buf[0], status_buf[1]))"];
"1000202" [label="(Call,kfree(status_buf))"];
"1000204" [label="(Return,return rc;)"];
"1000143" [label="(Call,port->serial->dev)"];
"1000173" [label="(Literal,\"Reading line status failed (error = %d)\n\")"];
"1000161" [label="(Identifier,status_buf)"];
"1000190" [label="(Literal,\"read status %x %x\n\")"];
"1000177" [label="(Call,status = get_unaligned_le16(status_buf))"];
"1000194" [label="(Call,status_buf[1])"];
"1000156" [label="(Call,USB_TYPE_VENDOR | USB_DIR_IN)"];
"1000137" [label="(Identifier,status_buf)"];
"1000168" [label="(Call,dev_err(&port->dev, \"Reading line status failed (error = %d)\n\",\n\t\t\trc))"];
"1000141" [label="(Identifier,rc)"];
"1000200" [label="(Call,klsi_105_status2linestate(status))"];
"1000134" [label="(Literal,0xff)"];
"1000186" [label="(Identifier,port)"];
"1000203" [label="(Identifier,status_buf)"];
"1000155" [label="(Identifier,KL5KUSB105A_SIO_POLL)"];
"1000125" [label="(Call,!status_buf)"];
"1000166" [label="(Identifier,rc)"];
"1000164" [label="(ControlStructure,if (rc < 0))"];
"1000174" [label="(Identifier,rc)"];
"1000182" [label="(Call,&port->serial->dev->dev)"];
"1000159" [label="(Literal,0)"];
"1000198" [label="(Call,*line_state_p)"];
"1000142" [label="(Call,usb_control_msg(port->serial->dev,\n\t\t\t     usb_rcvctrlpipe(port->serial->dev, 0),\n\t\t\t     KL5KUSB105A_SIO_POLL,\n\t\t\t     USB_TYPE_VENDOR | USB_DIR_IN,\n\t\t\t     0, /* value */\n\t\t\t     0, /* index */\n \t\t\t     status_buf, KLSI_STATUSBUF_LEN,\n \t\t\t     10000\n \t\t\t     ))"];
"1000140" [label="(Call,rc = usb_control_msg(port->serial->dev,\n\t\t\t     usb_rcvctrlpipe(port->serial->dev, 0),\n\t\t\t     KL5KUSB105A_SIO_POLL,\n\t\t\t     USB_TYPE_VENDOR | USB_DIR_IN,\n\t\t\t     0, /* value */\n\t\t\t     0, /* index */\n \t\t\t     status_buf, KLSI_STATUSBUF_LEN,\n \t\t\t     10000\n \t\t\t     ))"];
"1000105" [label="(Block,)"];
"1000162" [label="(Identifier,KLSI_STATUSBUF_LEN)"];
"1000191" [label="(Call,status_buf[0])"];
"1000171" [label="(Identifier,port)"];
"1000197" [label="(Call,*line_state_p = klsi_105_status2linestate(status))"];
"1000178" [label="(Identifier,status)"];
"1000130" [label="(Call,status_buf[0] = 0xff)"];
"1000205" [label="(Identifier,rc)"];
"1000201" [label="(Identifier,status)"];
"1000176" [label="(Block,)"];
"1000135" [label="(Call,status_buf[1] = 0xff)"];
"1000121" [label="(Call,kmalloc(KLSI_STATUSBUF_LEN, GFP_KERNEL))"];
"1000206" [label="(MethodReturn,static int)"];
"1000148" [label="(Call,usb_rcvctrlpipe(port->serial->dev, 0))"];
"1000180" [label="(Identifier,status_buf)"];
"1000163" [label="(Literal,10000)"];
"1000109" [label="(Call,dev_info(&port->serial->dev->dev, \"sending SIO Poll request\n\"))"];
"1000160" [label="(Literal,0)"];
"1000179" [label="(Call,get_unaligned_le16(status_buf))"];
"1000181" [label="(Call,dev_info(&port->serial->dev->dev, \"read status %x %x\n\",\n\t\t\t status_buf[0], status_buf[1]))"];
"1000131" [label="(Call,status_buf[0])"];
"1000202" [label="(Call,kfree(status_buf))"];
"1000167" [label="(Literal,0)"];
"1000199" [label="(Identifier,line_state_p)"];
"1000169" [label="(Call,&port->dev)"];
"1000165" [label="(Call,rc < 0)"];
"1000130" -> "1000105"  [label="AST: "];
"1000130" -> "1000134"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000134" -> "1000130"  [label="AST: "];
"1000137" -> "1000130"  [label="CFG: "];
"1000130" -> "1000206"  [label="DDG: "];
"1000130" -> "1000142"  [label="DDG: "];
"1000130" -> "1000179"  [label="DDG: "];
"1000130" -> "1000181"  [label="DDG: "];
"1000130" -> "1000202"  [label="DDG: "];
"1000142" -> "1000140"  [label="AST: "];
"1000142" -> "1000163"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000148" -> "1000142"  [label="AST: "];
"1000155" -> "1000142"  [label="AST: "];
"1000156" -> "1000142"  [label="AST: "];
"1000159" -> "1000142"  [label="AST: "];
"1000160" -> "1000142"  [label="AST: "];
"1000161" -> "1000142"  [label="AST: "];
"1000162" -> "1000142"  [label="AST: "];
"1000163" -> "1000142"  [label="AST: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000142" -> "1000206"  [label="DDG: "];
"1000142" -> "1000206"  [label="DDG: "];
"1000142" -> "1000206"  [label="DDG: "];
"1000142" -> "1000206"  [label="DDG: "];
"1000142" -> "1000206"  [label="DDG: "];
"1000142" -> "1000140"  [label="DDG: "];
"1000142" -> "1000140"  [label="DDG: "];
"1000142" -> "1000140"  [label="DDG: "];
"1000142" -> "1000140"  [label="DDG: "];
"1000142" -> "1000140"  [label="DDG: "];
"1000142" -> "1000140"  [label="DDG: "];
"1000142" -> "1000140"  [label="DDG: "];
"1000142" -> "1000140"  [label="DDG: "];
"1000148" -> "1000142"  [label="DDG: "];
"1000148" -> "1000142"  [label="DDG: "];
"1000156" -> "1000142"  [label="DDG: "];
"1000156" -> "1000142"  [label="DDG: "];
"1000125" -> "1000142"  [label="DDG: "];
"1000135" -> "1000142"  [label="DDG: "];
"1000121" -> "1000142"  [label="DDG: "];
"1000142" -> "1000179"  [label="DDG: "];
"1000142" -> "1000202"  [label="DDG: "];
"1000140" -> "1000105"  [label="AST: "];
"1000141" -> "1000140"  [label="AST: "];
"1000166" -> "1000140"  [label="CFG: "];
"1000140" -> "1000206"  [label="DDG: "];
"1000140" -> "1000165"  [label="DDG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000165" -> "1000167"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000167" -> "1000165"  [label="AST: "];
"1000171" -> "1000165"  [label="CFG: "];
"1000178" -> "1000165"  [label="CFG: "];
"1000165" -> "1000206"  [label="DDG: "];
"1000165" -> "1000206"  [label="DDG: "];
"1000165" -> "1000168"  [label="DDG: "];
"1000165" -> "1000204"  [label="DDG: "];
"1000168" -> "1000164"  [label="AST: "];
"1000168" -> "1000174"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000173" -> "1000168"  [label="AST: "];
"1000174" -> "1000168"  [label="AST: "];
"1000203" -> "1000168"  [label="CFG: "];
"1000168" -> "1000206"  [label="DDG: "];
"1000168" -> "1000206"  [label="DDG: "];
"1000168" -> "1000206"  [label="DDG: "];
"1000168" -> "1000204"  [label="DDG: "];
"1000204" -> "1000105"  [label="AST: "];
"1000204" -> "1000205"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000206" -> "1000204"  [label="CFG: "];
"1000204" -> "1000206"  [label="DDG: "];
"1000205" -> "1000204"  [label="DDG: "];
"1000179" -> "1000177"  [label="AST: "];
"1000179" -> "1000180"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000177" -> "1000179"  [label="CFG: "];
"1000179" -> "1000177"  [label="DDG: "];
"1000135" -> "1000179"  [label="DDG: "];
"1000179" -> "1000181"  [label="DDG: "];
"1000179" -> "1000202"  [label="DDG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000178" -> "1000177"  [label="AST: "];
"1000186" -> "1000177"  [label="CFG: "];
"1000177" -> "1000206"  [label="DDG: "];
"1000177" -> "1000200"  [label="DDG: "];
"1000200" -> "1000197"  [label="AST: "];
"1000200" -> "1000201"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000197" -> "1000200"  [label="CFG: "];
"1000200" -> "1000206"  [label="DDG: "];
"1000200" -> "1000197"  [label="DDG: "];
"1000197" -> "1000176"  [label="AST: "];
"1000198" -> "1000197"  [label="AST: "];
"1000203" -> "1000197"  [label="CFG: "];
"1000197" -> "1000206"  [label="DDG: "];
"1000197" -> "1000206"  [label="DDG: "];
"1000181" -> "1000176"  [label="AST: "];
"1000181" -> "1000194"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000190" -> "1000181"  [label="AST: "];
"1000191" -> "1000181"  [label="AST: "];
"1000194" -> "1000181"  [label="AST: "];
"1000199" -> "1000181"  [label="CFG: "];
"1000181" -> "1000206"  [label="DDG: "];
"1000181" -> "1000206"  [label="DDG: "];
"1000181" -> "1000206"  [label="DDG: "];
"1000181" -> "1000206"  [label="DDG: "];
"1000109" -> "1000181"  [label="DDG: "];
"1000135" -> "1000181"  [label="DDG: "];
"1000181" -> "1000202"  [label="DDG: "];
"1000181" -> "1000202"  [label="DDG: "];
"1000202" -> "1000105"  [label="AST: "];
"1000202" -> "1000203"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000205" -> "1000202"  [label="CFG: "];
"1000202" -> "1000206"  [label="DDG: "];
"1000202" -> "1000206"  [label="DDG: "];
"1000135" -> "1000202"  [label="DDG: "];
}
