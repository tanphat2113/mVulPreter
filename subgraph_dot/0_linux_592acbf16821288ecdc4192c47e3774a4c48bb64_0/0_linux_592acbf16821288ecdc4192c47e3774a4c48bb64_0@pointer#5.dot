digraph "0_linux_592acbf16821288ecdc4192c47e3774a4c48bb64_0@pointer" {
"1000268" [label="(Call,ablocks[a] = newblock)"];
"1000264" [label="(Call,newblock == 0)"];
"1000253" [label="(Call,newblock = ext4_ext_new_meta_block(handle, inode, path,\n\t\t\t\t\t\t   newext, &err, flags))"];
"1000255" [label="(Call,ext4_ext_new_meta_block(handle, inode, path,\n\t\t\t\t\t\t   newext, &err, flags))"];
"1000122" [label="(MethodParameterIn,handle_t *handle)"];
"1000136" [label="(Call,ext_depth(inode))"];
"1000123" [label="(MethodParameterIn,struct inode *inode)"];
"1000125" [label="(MethodParameterIn,struct ext4_ext_path *path)"];
"1000126" [label="(MethodParameterIn,struct ext4_extent *newext)"];
"1000124" [label="(MethodParameterIn,unsigned int flags)"];
"1000861" [label="(Call,kfree(ablocks))"];
"1000251" [label="(Identifier,a)"];
"1000262" [label="(Identifier,flags)"];
"1000258" [label="(Identifier,path)"];
"1000487" [label="(Call,ext4_ext_get_access(handle, inode, path + depth))"];
"1000125" [label="(MethodParameterIn,struct ext4_ext_path *path)"];
"1000317" [label="(Call,ext4_journal_get_create_access(handle, bh))"];
"1000509" [label="(Call,ext4_ext_dirty(handle, inode, path + depth))"];
"1000270" [label="(Identifier,ablocks)"];
"1000177" [label="(Call,EXT4_ERROR_INODE(inode, \"p_ext > EXT_MAX_EXTENT!\"))"];
"1000368" [label="(Call,EXT4_ERROR_INODE(inode, \"eh_entries %d != eh_max %d!\",\n\t\t\t\t path[depth].p_hdr->eh_entries,\n\t\t\t\t path[depth].p_hdr->eh_max))"];
"1000610" [label="(Call,ext4_ext_space_block_idx(inode, 0))"];
"1000816" [label="(Call,path + at)"];
"1000267" [label="(ControlStructure,goto cleanup;)"];
"1000285" [label="(Call,EXT4_ERROR_INODE(inode, \"newblock == 0!\"))"];
"1000136" [label="(Call,ext_depth(inode))"];
"1000128" [label="(Block,)"];
"1000862" [label="(Identifier,ablocks)"];
"1000255" [label="(Call,ext4_ext_new_meta_block(handle, inode, path,\n\t\t\t\t\t\t   newext, &err, flags))"];
"1000265" [label="(Identifier,newblock)"];
"1000781" [label="(Call,path + i)"];
"1000864" [label="(Identifier,err)"];
"1000231" [label="(Call,!ablocks)"];
"1000700" [label="(Call,ext4_ext_show_move(inode, path, newblock, i))"];
"1000761" [label="(Call,ext4_handle_dirty_metadata(handle, inode, bh))"];
"1000260" [label="(Call,&err)"];
"1000861" [label="(Call,kfree(ablocks))"];
"1000405" [label="(Call,ext4_ext_show_move(inode, path, newblock, depth))"];
"1000778" [label="(Call,ext4_ext_get_access(handle, inode, path + i))"];
"1000813" [label="(Call,ext4_ext_insert_index(handle, inode, path + at,\n\t\t\t\t    le32_to_cpu(border), newblock))"];
"1000800" [label="(Call,ext4_ext_dirty(handle, inode, path + i))"];
"1000122" [label="(MethodParameterIn,handle_t *handle)"];
"1000656" [label="(Call,EXT4_ERROR_INODE(inode,\n\t\t\t\t\t \"EXT_MAX_INDEX != EXT_LAST_INDEX ee_block %d!\",\n\t\t\t\t\t le32_to_cpu(path[i].p_ext->ee_block)))"];
"1000269" [label="(Call,ablocks[a])"];
"1000470" [label="(Call,ext4_handle_dirty_metadata(handle, inode, bh))"];
"1000268" [label="(Call,ablocks[a] = newblock)"];
"1000256" [label="(Identifier,handle)"];
"1000512" [label="(Call,path + depth)"];
"1000124" [label="(MethodParameterIn,unsigned int flags)"];
"1000263" [label="(ControlStructure,if (newblock == 0))"];
"1000852" [label="(Call,ext4_free_blocks(handle, inode, NULL, ablocks[i], 1,\n\t\t\t\t\t EXT4_FREE_BLOCKS_METADATA))"];
"1000257" [label="(Identifier,inode)"];
"1000266" [label="(Literal,0)"];
"1000272" [label="(Identifier,newblock)"];
"1000752" [label="(Call,ext4_extent_block_csum_set(inode, neh))"];
"1000490" [label="(Call,path + depth)"];
"1000259" [label="(Identifier,newext)"];
"1000461" [label="(Call,ext4_extent_block_csum_set(inode, neh))"];
"1000254" [label="(Identifier,newblock)"];
"1000253" [label="(Call,newblock = ext4_ext_new_meta_block(handle, inode, path,\n\t\t\t\t\t\t   newext, &err, flags))"];
"1000865" [label="(MethodReturn,static int)"];
"1000531" [label="(Call,EXT4_ERROR_INODE(inode, \"k %d < 0!\", k))"];
"1000264" [label="(Call,newblock == 0)"];
"1000123" [label="(MethodParameterIn,struct inode *inode)"];
"1000337" [label="(Call,ext4_ext_space_block(inode, 0))"];
"1000134" [label="(Call,depth = ext_depth(inode))"];
"1000137" [label="(Identifier,inode)"];
"1000803" [label="(Call,path + i)"];
"1000252" [label="(Block,)"];
"1000126" [label="(MethodParameterIn,struct ext4_extent *newext)"];
"1000584" [label="(Call,ext4_journal_get_create_access(handle, bh))"];
"1000847" [label="(Call,!ablocks[i])"];
"1000268" -> "1000252"  [label="AST: "];
"1000268" -> "1000272"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000272" -> "1000268"  [label="AST: "];
"1000251" -> "1000268"  [label="CFG: "];
"1000268" -> "1000865"  [label="DDG: ablocks[a]"];
"1000264" -> "1000268"  [label="DDG: newblock"];
"1000268" -> "1000861"  [label="DDG: ablocks[a]"];
"1000264" -> "1000263"  [label="AST: "];
"1000264" -> "1000266"  [label="CFG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000266" -> "1000264"  [label="AST: "];
"1000267" -> "1000264"  [label="CFG: "];
"1000270" -> "1000264"  [label="CFG: "];
"1000264" -> "1000865"  [label="DDG: newblock"];
"1000264" -> "1000865"  [label="DDG: newblock == 0"];
"1000253" -> "1000264"  [label="DDG: newblock"];
"1000253" -> "1000252"  [label="AST: "];
"1000253" -> "1000255"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000255" -> "1000253"  [label="AST: "];
"1000265" -> "1000253"  [label="CFG: "];
"1000253" -> "1000865"  [label="DDG: ext4_ext_new_meta_block(handle, inode, path,\n\t\t\t\t\t\t   newext, &err, flags)"];
"1000255" -> "1000253"  [label="DDG: handle"];
"1000255" -> "1000253"  [label="DDG: flags"];
"1000255" -> "1000253"  [label="DDG: newext"];
"1000255" -> "1000253"  [label="DDG: &err"];
"1000255" -> "1000253"  [label="DDG: path"];
"1000255" -> "1000253"  [label="DDG: inode"];
"1000255" -> "1000262"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000257" -> "1000255"  [label="AST: "];
"1000258" -> "1000255"  [label="AST: "];
"1000259" -> "1000255"  [label="AST: "];
"1000260" -> "1000255"  [label="AST: "];
"1000262" -> "1000255"  [label="AST: "];
"1000255" -> "1000865"  [label="DDG: newext"];
"1000255" -> "1000865"  [label="DDG: &err"];
"1000255" -> "1000865"  [label="DDG: path"];
"1000255" -> "1000865"  [label="DDG: flags"];
"1000255" -> "1000865"  [label="DDG: inode"];
"1000255" -> "1000865"  [label="DDG: handle"];
"1000122" -> "1000255"  [label="DDG: handle"];
"1000136" -> "1000255"  [label="DDG: inode"];
"1000123" -> "1000255"  [label="DDG: inode"];
"1000125" -> "1000255"  [label="DDG: path"];
"1000126" -> "1000255"  [label="DDG: newext"];
"1000124" -> "1000255"  [label="DDG: flags"];
"1000255" -> "1000285"  [label="DDG: inode"];
"1000255" -> "1000317"  [label="DDG: handle"];
"1000255" -> "1000337"  [label="DDG: inode"];
"1000255" -> "1000405"  [label="DDG: path"];
"1000255" -> "1000852"  [label="DDG: handle"];
"1000255" -> "1000852"  [label="DDG: inode"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000865"  [label="DDG: handle"];
"1000122" -> "1000317"  [label="DDG: handle"];
"1000122" -> "1000470"  [label="DDG: handle"];
"1000122" -> "1000487"  [label="DDG: handle"];
"1000122" -> "1000509"  [label="DDG: handle"];
"1000122" -> "1000584"  [label="DDG: handle"];
"1000122" -> "1000761"  [label="DDG: handle"];
"1000122" -> "1000778"  [label="DDG: handle"];
"1000122" -> "1000800"  [label="DDG: handle"];
"1000122" -> "1000813"  [label="DDG: handle"];
"1000122" -> "1000852"  [label="DDG: handle"];
"1000136" -> "1000134"  [label="AST: "];
"1000136" -> "1000137"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000136" -> "1000865"  [label="DDG: inode"];
"1000136" -> "1000134"  [label="DDG: inode"];
"1000123" -> "1000136"  [label="DDG: inode"];
"1000136" -> "1000177"  [label="DDG: inode"];
"1000136" -> "1000285"  [label="DDG: inode"];
"1000136" -> "1000337"  [label="DDG: inode"];
"1000136" -> "1000852"  [label="DDG: inode"];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000865"  [label="DDG: inode"];
"1000123" -> "1000177"  [label="DDG: inode"];
"1000123" -> "1000285"  [label="DDG: inode"];
"1000123" -> "1000337"  [label="DDG: inode"];
"1000123" -> "1000368"  [label="DDG: inode"];
"1000123" -> "1000405"  [label="DDG: inode"];
"1000123" -> "1000461"  [label="DDG: inode"];
"1000123" -> "1000470"  [label="DDG: inode"];
"1000123" -> "1000487"  [label="DDG: inode"];
"1000123" -> "1000509"  [label="DDG: inode"];
"1000123" -> "1000531"  [label="DDG: inode"];
"1000123" -> "1000610"  [label="DDG: inode"];
"1000123" -> "1000656"  [label="DDG: inode"];
"1000123" -> "1000700"  [label="DDG: inode"];
"1000123" -> "1000752"  [label="DDG: inode"];
"1000123" -> "1000761"  [label="DDG: inode"];
"1000123" -> "1000778"  [label="DDG: inode"];
"1000123" -> "1000800"  [label="DDG: inode"];
"1000123" -> "1000813"  [label="DDG: inode"];
"1000123" -> "1000852"  [label="DDG: inode"];
"1000125" -> "1000121"  [label="AST: "];
"1000125" -> "1000865"  [label="DDG: path"];
"1000125" -> "1000405"  [label="DDG: path"];
"1000125" -> "1000487"  [label="DDG: path"];
"1000125" -> "1000490"  [label="DDG: path"];
"1000125" -> "1000509"  [label="DDG: path"];
"1000125" -> "1000512"  [label="DDG: path"];
"1000125" -> "1000700"  [label="DDG: path"];
"1000125" -> "1000778"  [label="DDG: path"];
"1000125" -> "1000781"  [label="DDG: path"];
"1000125" -> "1000800"  [label="DDG: path"];
"1000125" -> "1000803"  [label="DDG: path"];
"1000125" -> "1000813"  [label="DDG: path"];
"1000125" -> "1000816"  [label="DDG: path"];
"1000126" -> "1000121"  [label="AST: "];
"1000126" -> "1000865"  [label="DDG: newext"];
"1000124" -> "1000121"  [label="AST: "];
"1000124" -> "1000865"  [label="DDG: flags"];
"1000861" -> "1000128"  [label="AST: "];
"1000861" -> "1000862"  [label="CFG: "];
"1000862" -> "1000861"  [label="AST: "];
"1000864" -> "1000861"  [label="CFG: "];
"1000861" -> "1000865"  [label="DDG: ablocks"];
"1000861" -> "1000865"  [label="DDG: kfree(ablocks)"];
"1000847" -> "1000861"  [label="DDG: ablocks[i]"];
"1000231" -> "1000861"  [label="DDG: ablocks"];
"1000852" -> "1000861"  [label="DDG: ablocks[i]"];
}
