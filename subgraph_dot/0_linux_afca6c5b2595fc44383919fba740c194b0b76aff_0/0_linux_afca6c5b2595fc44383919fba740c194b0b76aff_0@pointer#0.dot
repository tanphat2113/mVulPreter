digraph "0_linux_afca6c5b2595fc44383919fba740c194b0b76aff_0@pointer" {
"1000146" [label="(Call,xfs_inode_verify_forks(ip))"];
"1000136" [label="(Call,xfs_iread(mp, tp, ip, flags))"];
"1000125" [label="(Call,xfs_inode_alloc(mp, ino))"];
"1000119" [label="(Call,XFS_INO_TO_AGINO(mp, ino))"];
"1000106" [label="(MethodParameterIn,struct xfs_mount\t*mp)"];
"1000109" [label="(MethodParameterIn,xfs_ino_t\t\tino)"];
"1000108" [label="(MethodParameterIn,xfs_trans_t\t\t*tp)"];
"1000129" [label="(Call,!ip)"];
"1000123" [label="(Call,ip = xfs_inode_alloc(mp, ino))"];
"1000111" [label="(MethodParameterIn,int\t\t\tflags)"];
"1000145" [label="(Call,!xfs_inode_verify_forks(ip))"];
"1000154" [label="(Call,trace_xfs_iget_miss(ip))"];
"1000158" [label="(Call,xfs_iget_check_free_state(ip, flags))"];
"1000156" [label="(Call,error = xfs_iget_check_free_state(ip, flags))"];
"1000271" [label="(Return,return error;)"];
"1000178" [label="(Call,xfs_ilock_nowait(ip, lock_flags))"];
"1000177" [label="(Call,!xfs_ilock_nowait(ip, lock_flags))"];
"1000207" [label="(Call,xfs_iflags_set(ip, iflags))"];
"1000217" [label="(Call,radix_tree_insert(&pag->pag_ici_root, agino, ip))"];
"1000215" [label="(Call,error = radix_tree_insert(&pag->pag_ici_root, agino, ip))"];
"1000225" [label="(Call,unlikely(error))"];
"1000229" [label="(Call,error != -EEXIST)"];
"1000228" [label="(Call,WARN_ON(error != -EEXIST))"];
"1000247" [label="(Call,*ipp = ip)"];
"1000262" [label="(Call,xfs_iunlock(ip, lock_flags))"];
"1000267" [label="(Call,VFS_I(ip))"];
"1000266" [label="(Call,__destroy_inode(VFS_I(ip)))"];
"1000269" [label="(Call,xfs_inode_free(ip))"];
"1000186" [label="(Call,flags & XFS_IGET_DONTCACHE)"];
"1000183" [label="(Identifier,iflags)"];
"1000187" [label="(Identifier,flags)"];
"1000265" [label="(JumpTarget,out_destroy:)"];
"1000106" [label="(MethodParameterIn,struct xfs_mount\t*mp)"];
"1000194" [label="(Identifier,ip)"];
"1000126" [label="(Identifier,mp)"];
"1000178" [label="(Call,xfs_ilock_nowait(ip, lock_flags))"];
"1000146" [label="(Call,xfs_inode_verify_forks(ip))"];
"1000269" [label="(Call,xfs_inode_free(ip))"];
"1000108" [label="(MethodParameterIn,xfs_trans_t\t\t*tp)"];
"1000123" [label="(Call,ip = xfs_inode_alloc(mp, ino))"];
"1000144" [label="(ControlStructure,if (!xfs_inode_verify_forks(ip)))"];
"1000156" [label="(Call,error = xfs_iget_check_free_state(ip, flags))"];
"1000216" [label="(Identifier,error)"];
"1000111" [label="(MethodParameterIn,int\t\t\tflags)"];
"1000213" [label="(Identifier,pag)"];
"1000208" [label="(Identifier,ip)"];
"1000168" [label="(Call,error = -EAGAIN)"];
"1000252" [label="(Literal,0)"];
"1000247" [label="(Call,*ipp = ip)"];
"1000263" [label="(Identifier,ip)"];
"1000224" [label="(ControlStructure,if (unlikely(error)))"];
"1000186" [label="(Call,flags & XFS_IGET_DONTCACHE)"];
"1000217" [label="(Call,radix_tree_insert(&pag->pag_ici_root, agino, ip))"];
"1000117" [label="(Call,agino = XFS_INO_TO_AGINO(mp, ino))"];
"1000176" [label="(ControlStructure,if (!xfs_ilock_nowait(ip, lock_flags)))"];
"1000139" [label="(Identifier,ip)"];
"1000267" [label="(Call,VFS_I(ip))"];
"1000145" [label="(Call,!xfs_inode_verify_forks(ip))"];
"1000127" [label="(Identifier,ino)"];
"1000128" [label="(ControlStructure,if (!ip))"];
"1000271" [label="(Return,return error;)"];
"1000124" [label="(Identifier,ip)"];
"1000158" [label="(Call,xfs_iget_check_free_state(ip, flags))"];
"1000264" [label="(Identifier,lock_flags)"];
"1000190" [label="(Identifier,iflags)"];
"1000162" [label="(Identifier,error)"];
"1000231" [label="(Call,-EEXIST)"];
"1000140" [label="(Identifier,flags)"];
"1000137" [label="(Identifier,mp)"];
"1000223" [label="(Identifier,ip)"];
"1000125" [label="(Call,xfs_inode_alloc(mp, ino))"];
"1000230" [label="(Identifier,error)"];
"1000229" [label="(Call,error != -EEXIST)"];
"1000272" [label="(Identifier,error)"];
"1000273" [label="(MethodReturn,RET)"];
"1000109" [label="(MethodParameterIn,xfs_ino_t\t\tino)"];
"1000215" [label="(Call,error = radix_tree_insert(&pag->pag_ici_root, agino, ip))"];
"1000218" [label="(Call,&pag->pag_ici_root)"];
"1000185" [label="(ControlStructure,if (flags & XFS_IGET_DONTCACHE))"];
"1000147" [label="(Identifier,ip)"];
"1000177" [label="(Call,!xfs_ilock_nowait(ip, lock_flags))"];
"1000182" [label="(Call,iflags = XFS_INEW)"];
"1000222" [label="(Identifier,agino)"];
"1000138" [label="(Identifier,tp)"];
"1000149" [label="(Call,error = -EFSCORRUPTED)"];
"1000155" [label="(Identifier,ip)"];
"1000130" [label="(Identifier,ip)"];
"1000233" [label="(Call,XFS_STATS_INC(mp, xs_ig_dup))"];
"1000135" [label="(Identifier,error)"];
"1000250" [label="(Identifier,ip)"];
"1000133" [label="(Identifier,ENOMEM)"];
"1000159" [label="(Identifier,ip)"];
"1000157" [label="(Identifier,error)"];
"1000270" [label="(Identifier,ip)"];
"1000236" [label="(Call,error = -EAGAIN)"];
"1000154" [label="(Call,trace_xfs_iget_miss(ip))"];
"1000112" [label="(MethodParameterIn,int\t\t\tlock_flags)"];
"1000225" [label="(Call,unlikely(error))"];
"1000209" [label="(Identifier,iflags)"];
"1000113" [label="(Block,)"];
"1000227" [label="(Block,)"];
"1000262" [label="(Call,xfs_iunlock(ip, lock_flags))"];
"1000234" [label="(Identifier,mp)"];
"1000150" [label="(Identifier,error)"];
"1000179" [label="(Identifier,ip)"];
"1000226" [label="(Identifier,error)"];
"1000181" [label="(Call,BUG())"];
"1000188" [label="(Identifier,XFS_IGET_DONTCACHE)"];
"1000134" [label="(Call,error = xfs_iread(mp, tp, ip, flags))"];
"1000121" [label="(Identifier,ino)"];
"1000189" [label="(Call,iflags |= XFS_IDONTCACHE)"];
"1000120" [label="(Identifier,mp)"];
"1000244" [label="(Identifier,pag)"];
"1000268" [label="(Identifier,ip)"];
"1000136" [label="(Call,xfs_iread(mp, tp, ip, flags))"];
"1000260" [label="(ControlStructure,if (lock_flags))"];
"1000129" [label="(Call,!ip)"];
"1000180" [label="(Identifier,lock_flags)"];
"1000119" [label="(Call,XFS_INO_TO_AGINO(mp, ino))"];
"1000248" [label="(Call,*ipp)"];
"1000207" [label="(Call,xfs_iflags_set(ip, iflags))"];
"1000160" [label="(Identifier,flags)"];
"1000228" [label="(Call,WARN_ON(error != -EEXIST))"];
"1000266" [label="(Call,__destroy_inode(VFS_I(ip)))"];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000147"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000145" -> "1000146"  [label="CFG: "];
"1000146" -> "1000145"  [label="DDG: ip"];
"1000136" -> "1000146"  [label="DDG: ip"];
"1000146" -> "1000154"  [label="DDG: ip"];
"1000146" -> "1000267"  [label="DDG: ip"];
"1000136" -> "1000134"  [label="AST: "];
"1000136" -> "1000140"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000139" -> "1000136"  [label="AST: "];
"1000140" -> "1000136"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000136" -> "1000273"  [label="DDG: flags"];
"1000136" -> "1000273"  [label="DDG: tp"];
"1000136" -> "1000273"  [label="DDG: mp"];
"1000136" -> "1000134"  [label="DDG: mp"];
"1000136" -> "1000134"  [label="DDG: tp"];
"1000136" -> "1000134"  [label="DDG: ip"];
"1000136" -> "1000134"  [label="DDG: flags"];
"1000125" -> "1000136"  [label="DDG: mp"];
"1000106" -> "1000136"  [label="DDG: mp"];
"1000108" -> "1000136"  [label="DDG: tp"];
"1000129" -> "1000136"  [label="DDG: ip"];
"1000111" -> "1000136"  [label="DDG: flags"];
"1000136" -> "1000158"  [label="DDG: flags"];
"1000136" -> "1000233"  [label="DDG: mp"];
"1000136" -> "1000267"  [label="DDG: ip"];
"1000125" -> "1000123"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000125" -> "1000273"  [label="DDG: mp"];
"1000125" -> "1000273"  [label="DDG: ino"];
"1000125" -> "1000123"  [label="DDG: mp"];
"1000125" -> "1000123"  [label="DDG: ino"];
"1000119" -> "1000125"  [label="DDG: mp"];
"1000119" -> "1000125"  [label="DDG: ino"];
"1000106" -> "1000125"  [label="DDG: mp"];
"1000109" -> "1000125"  [label="DDG: ino"];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000119" -> "1000117"  [label="DDG: mp"];
"1000119" -> "1000117"  [label="DDG: ino"];
"1000106" -> "1000119"  [label="DDG: mp"];
"1000109" -> "1000119"  [label="DDG: ino"];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000273"  [label="DDG: mp"];
"1000106" -> "1000233"  [label="DDG: mp"];
"1000109" -> "1000105"  [label="AST: "];
"1000109" -> "1000273"  [label="DDG: ino"];
"1000108" -> "1000105"  [label="AST: "];
"1000108" -> "1000273"  [label="DDG: tp"];
"1000129" -> "1000128"  [label="AST: "];
"1000129" -> "1000130"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000133" -> "1000129"  [label="CFG: "];
"1000135" -> "1000129"  [label="CFG: "];
"1000129" -> "1000273"  [label="DDG: ip"];
"1000129" -> "1000273"  [label="DDG: !ip"];
"1000123" -> "1000129"  [label="DDG: ip"];
"1000123" -> "1000113"  [label="AST: "];
"1000124" -> "1000123"  [label="AST: "];
"1000130" -> "1000123"  [label="CFG: "];
"1000123" -> "1000273"  [label="DDG: xfs_inode_alloc(mp, ino)"];
"1000111" -> "1000105"  [label="AST: "];
"1000111" -> "1000273"  [label="DDG: flags"];
"1000111" -> "1000158"  [label="DDG: flags"];
"1000111" -> "1000186"  [label="DDG: flags"];
"1000145" -> "1000144"  [label="AST: "];
"1000150" -> "1000145"  [label="CFG: "];
"1000155" -> "1000145"  [label="CFG: "];
"1000145" -> "1000273"  [label="DDG: !xfs_inode_verify_forks(ip)"];
"1000145" -> "1000273"  [label="DDG: xfs_inode_verify_forks(ip)"];
"1000154" -> "1000113"  [label="AST: "];
"1000154" -> "1000155"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000157" -> "1000154"  [label="CFG: "];
"1000154" -> "1000273"  [label="DDG: trace_xfs_iget_miss(ip)"];
"1000154" -> "1000158"  [label="DDG: ip"];
"1000158" -> "1000156"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000156" -> "1000158"  [label="CFG: "];
"1000158" -> "1000273"  [label="DDG: flags"];
"1000158" -> "1000156"  [label="DDG: ip"];
"1000158" -> "1000156"  [label="DDG: flags"];
"1000158" -> "1000178"  [label="DDG: ip"];
"1000158" -> "1000186"  [label="DDG: flags"];
"1000158" -> "1000207"  [label="DDG: ip"];
"1000158" -> "1000267"  [label="DDG: ip"];
"1000156" -> "1000113"  [label="AST: "];
"1000157" -> "1000156"  [label="AST: "];
"1000162" -> "1000156"  [label="CFG: "];
"1000156" -> "1000273"  [label="DDG: error"];
"1000156" -> "1000273"  [label="DDG: xfs_iget_check_free_state(ip, flags)"];
"1000156" -> "1000271"  [label="DDG: error"];
"1000271" -> "1000113"  [label="AST: "];
"1000271" -> "1000272"  [label="CFG: "];
"1000272" -> "1000271"  [label="AST: "];
"1000273" -> "1000271"  [label="CFG: "];
"1000271" -> "1000273"  [label="DDG: <RET>"];
"1000272" -> "1000271"  [label="DDG: error"];
"1000236" -> "1000271"  [label="DDG: error"];
"1000168" -> "1000271"  [label="DDG: error"];
"1000134" -> "1000271"  [label="DDG: error"];
"1000149" -> "1000271"  [label="DDG: error"];
"1000178" -> "1000177"  [label="AST: "];
"1000178" -> "1000180"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000180" -> "1000178"  [label="AST: "];
"1000177" -> "1000178"  [label="CFG: "];
"1000178" -> "1000273"  [label="DDG: lock_flags"];
"1000178" -> "1000177"  [label="DDG: ip"];
"1000178" -> "1000177"  [label="DDG: lock_flags"];
"1000112" -> "1000178"  [label="DDG: lock_flags"];
"1000178" -> "1000207"  [label="DDG: ip"];
"1000178" -> "1000262"  [label="DDG: lock_flags"];
"1000177" -> "1000176"  [label="AST: "];
"1000181" -> "1000177"  [label="CFG: "];
"1000183" -> "1000177"  [label="CFG: "];
"1000177" -> "1000273"  [label="DDG: xfs_ilock_nowait(ip, lock_flags)"];
"1000177" -> "1000273"  [label="DDG: !xfs_ilock_nowait(ip, lock_flags)"];
"1000207" -> "1000113"  [label="AST: "];
"1000207" -> "1000209"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000209" -> "1000207"  [label="AST: "];
"1000213" -> "1000207"  [label="CFG: "];
"1000207" -> "1000273"  [label="DDG: iflags"];
"1000207" -> "1000273"  [label="DDG: xfs_iflags_set(ip, iflags)"];
"1000189" -> "1000207"  [label="DDG: iflags"];
"1000182" -> "1000207"  [label="DDG: iflags"];
"1000207" -> "1000217"  [label="DDG: ip"];
"1000217" -> "1000215"  [label="AST: "];
"1000217" -> "1000223"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000222" -> "1000217"  [label="AST: "];
"1000223" -> "1000217"  [label="AST: "];
"1000215" -> "1000217"  [label="CFG: "];
"1000217" -> "1000273"  [label="DDG: &pag->pag_ici_root"];
"1000217" -> "1000273"  [label="DDG: agino"];
"1000217" -> "1000215"  [label="DDG: &pag->pag_ici_root"];
"1000217" -> "1000215"  [label="DDG: agino"];
"1000217" -> "1000215"  [label="DDG: ip"];
"1000117" -> "1000217"  [label="DDG: agino"];
"1000217" -> "1000247"  [label="DDG: ip"];
"1000217" -> "1000262"  [label="DDG: ip"];
"1000217" -> "1000267"  [label="DDG: ip"];
"1000215" -> "1000113"  [label="AST: "];
"1000216" -> "1000215"  [label="AST: "];
"1000226" -> "1000215"  [label="CFG: "];
"1000215" -> "1000273"  [label="DDG: radix_tree_insert(&pag->pag_ici_root, agino, ip)"];
"1000215" -> "1000225"  [label="DDG: error"];
"1000225" -> "1000224"  [label="AST: "];
"1000225" -> "1000226"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000230" -> "1000225"  [label="CFG: "];
"1000244" -> "1000225"  [label="CFG: "];
"1000225" -> "1000273"  [label="DDG: error"];
"1000225" -> "1000273"  [label="DDG: unlikely(error)"];
"1000225" -> "1000229"  [label="DDG: error"];
"1000229" -> "1000228"  [label="AST: "];
"1000229" -> "1000231"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000231" -> "1000229"  [label="AST: "];
"1000228" -> "1000229"  [label="CFG: "];
"1000229" -> "1000273"  [label="DDG: -EEXIST"];
"1000229" -> "1000228"  [label="DDG: error"];
"1000229" -> "1000228"  [label="DDG: -EEXIST"];
"1000231" -> "1000229"  [label="DDG: EEXIST"];
"1000228" -> "1000227"  [label="AST: "];
"1000234" -> "1000228"  [label="CFG: "];
"1000228" -> "1000273"  [label="DDG: WARN_ON(error != -EEXIST)"];
"1000228" -> "1000273"  [label="DDG: error != -EEXIST"];
"1000247" -> "1000113"  [label="AST: "];
"1000247" -> "1000250"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000250" -> "1000247"  [label="AST: "];
"1000252" -> "1000247"  [label="CFG: "];
"1000247" -> "1000273"  [label="DDG: *ipp"];
"1000247" -> "1000273"  [label="DDG: ip"];
"1000262" -> "1000260"  [label="AST: "];
"1000262" -> "1000264"  [label="CFG: "];
"1000263" -> "1000262"  [label="AST: "];
"1000264" -> "1000262"  [label="AST: "];
"1000265" -> "1000262"  [label="CFG: "];
"1000262" -> "1000273"  [label="DDG: lock_flags"];
"1000262" -> "1000273"  [label="DDG: xfs_iunlock(ip, lock_flags)"];
"1000112" -> "1000262"  [label="DDG: lock_flags"];
"1000262" -> "1000267"  [label="DDG: ip"];
"1000267" -> "1000266"  [label="AST: "];
"1000267" -> "1000268"  [label="CFG: "];
"1000268" -> "1000267"  [label="AST: "];
"1000266" -> "1000267"  [label="CFG: "];
"1000267" -> "1000266"  [label="DDG: ip"];
"1000267" -> "1000269"  [label="DDG: ip"];
"1000266" -> "1000113"  [label="AST: "];
"1000270" -> "1000266"  [label="CFG: "];
"1000266" -> "1000273"  [label="DDG: VFS_I(ip)"];
"1000266" -> "1000273"  [label="DDG: __destroy_inode(VFS_I(ip))"];
"1000269" -> "1000113"  [label="AST: "];
"1000269" -> "1000270"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000272" -> "1000269"  [label="CFG: "];
"1000269" -> "1000273"  [label="DDG: xfs_inode_free(ip)"];
"1000269" -> "1000273"  [label="DDG: ip"];
"1000186" -> "1000185"  [label="AST: "];
"1000186" -> "1000188"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000188" -> "1000186"  [label="AST: "];
"1000190" -> "1000186"  [label="CFG: "];
"1000194" -> "1000186"  [label="CFG: "];
"1000186" -> "1000273"  [label="DDG: XFS_IGET_DONTCACHE"];
"1000186" -> "1000273"  [label="DDG: flags & XFS_IGET_DONTCACHE"];
"1000186" -> "1000273"  [label="DDG: flags"];
}
