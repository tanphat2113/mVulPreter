digraph "0_linux_979d63d50c0c0f7bc537bf821e056cc9fe5abd38_0@array" {
"1000393" [label="(Call,reg_combine_min_max(&other_branch_regs[insn->src_reg],\n\t\t\t\t\t\t    &other_branch_regs[insn->dst_reg],\n\t\t\t\t\t\t    &regs[insn->src_reg],\n\t\t\t\t\t\t    &regs[insn->dst_reg], opcode))"];
"1000387" [label="(Call,opcode == BPF_JEQ)"];
"1000249" [label="(Call,is_branch_taken(dst_reg, insn->imm, opcode))"];
"1000230" [label="(Call,dst_reg = &regs[insn->dst_reg])"];
"1000163" [label="(Call,insn->imm != 0)"];
"1000143" [label="(Call,opcode > BPF_JSLE)"];
"1000135" [label="(Call,opcode = BPF_OP(insn->code))"];
"1000137" [label="(Call,BPF_OP(insn->code))"];
"1000390" [label="(Call,opcode == BPF_JNE)"];
"1000455" [label="(Call,opcode == BPF_JEQ)"];
"1000454" [label="(Call,opcode == BPF_JEQ || opcode == BPF_JNE)"];
"1000453" [label="(Call,(opcode == BPF_JEQ || opcode == BPF_JNE) &&\n\t    reg_type_may_be_null(dst_reg->type))"];
"1000447" [label="(Call,insn->imm == 0 && (opcode == BPF_JEQ || opcode == BPF_JNE) &&\n\t    reg_type_may_be_null(dst_reg->type))"];
"1000440" [label="(Call,BPF_SRC(insn->code) == BPF_K &&\n\t    insn->imm == 0 && (opcode == BPF_JEQ || opcode == BPF_JNE) &&\n\t    reg_type_may_be_null(dst_reg->type))"];
"1000458" [label="(Call,opcode == BPF_JNE)"];
"1000471" [label="(Call,opcode == BPF_JNE)"];
"1000466" [label="(Call,mark_ptr_or_null_regs(this_branch, insn->dst_reg,\n\t\t\t\t      opcode == BPF_JNE))"];
"1000474" [label="(Call,mark_ptr_or_null_regs(other_branch, insn->dst_reg,\n\t\t\t\t      opcode == BPF_JEQ))"];
"1000479" [label="(Call,opcode == BPF_JEQ)"];
"1000486" [label="(Call,try_match_pkt_pointers(insn, dst_reg, &regs[insn->src_reg],\n\t\t\t\t\t   this_branch, other_branch))"];
"1000485" [label="(Call,!try_match_pkt_pointers(insn, dst_reg, &regs[insn->src_reg],\n\t\t\t\t\t   this_branch, other_branch))"];
"1000484" [label="(Call,!try_match_pkt_pointers(insn, dst_reg, &regs[insn->src_reg],\n\t\t\t\t\t   this_branch, other_branch) &&\n\t\t   is_pointer_value(env, insn->dst_reg))"];
"1000167" [label="(Literal,0)"];
"1000137" [label="(Call,BPF_OP(insn->code))"];
"1000143" [label="(Call,opcode > BPF_JSLE)"];
"1000467" [label="(Identifier,this_branch)"];
"1000440" [label="(Call,BPF_SRC(insn->code) == BPF_K &&\n\t    insn->imm == 0 && (opcode == BPF_JEQ || opcode == BPF_JNE) &&\n\t    reg_type_may_be_null(dst_reg->type))"];
"1000485" [label="(Call,!try_match_pkt_pointers(insn, dst_reg, &regs[insn->src_reg],\n\t\t\t\t\t   this_branch, other_branch))"];
"1000496" [label="(Identifier,other_branch)"];
"1000156" [label="(Call,BPF_SRC(insn->code))"];
"1000220" [label="(Call,check_reg_arg(env, insn->dst_reg, SRC_OP))"];
"1000162" [label="(ControlStructure,if (insn->imm != 0))"];
"1000484" [label="(Call,!try_match_pkt_pointers(insn, dst_reg, &regs[insn->src_reg],\n\t\t\t\t\t   this_branch, other_branch) &&\n\t\t   is_pointer_value(env, insn->dst_reg))"];
"1000457" [label="(Identifier,BPF_JEQ)"];
"1000487" [label="(Identifier,insn)"];
"1000110" [label="(MethodParameterIn,struct bpf_insn *insn)"];
"1000230" [label="(Call,dst_reg = &regs[insn->dst_reg])"];
"1000400" [label="(Call,&other_branch_regs[insn->dst_reg])"];
"1000461" [label="(Call,reg_type_may_be_null(dst_reg->type))"];
"1000147" [label="(Call,verbose(env, \"invalid BPF_JMP opcode %x\n\", opcode))"];
"1000406" [label="(Call,&regs[insn->src_reg])"];
"1000144" [label="(Identifier,opcode)"];
"1000460" [label="(Identifier,BPF_JNE)"];
"1000393" [label="(Call,reg_combine_min_max(&other_branch_regs[insn->src_reg],\n\t\t\t\t\t\t    &other_branch_regs[insn->dst_reg],\n\t\t\t\t\t\t    &regs[insn->src_reg],\n\t\t\t\t\t\t    &regs[insn->dst_reg], opcode))"];
"1000242" [label="(Identifier,insn)"];
"1000391" [label="(Identifier,opcode)"];
"1000456" [label="(Identifier,opcode)"];
"1000427" [label="(Call,reg_set_min_max(&other_branch_regs[insn->dst_reg],\n\t\t\t\t\tdst_reg, insn->imm, opcode))"];
"1000497" [label="(Call,is_pointer_value(env, insn->dst_reg))"];
"1000163" [label="(Call,insn->imm != 0)"];
"1000231" [label="(Identifier,dst_reg)"];
"1000463" [label="(Identifier,dst_reg)"];
"1000504" [label="(Identifier,env)"];
"1000474" [label="(Call,mark_ptr_or_null_regs(other_branch, insn->dst_reg,\n\t\t\t\t      opcode == BPF_JEQ))"];
"1000468" [label="(Call,insn->dst_reg)"];
"1000247" [label="(Call,pred = is_branch_taken(dst_reg, insn->imm, opcode))"];
"1000465" [label="(Block,)"];
"1000250" [label="(Identifier,dst_reg)"];
"1000394" [label="(Call,&other_branch_regs[insn->src_reg])"];
"1000455" [label="(Call,opcode == BPF_JEQ)"];
"1000495" [label="(Identifier,this_branch)"];
"1000466" [label="(Call,mark_ptr_or_null_regs(this_branch, insn->dst_reg,\n\t\t\t\t      opcode == BPF_JNE))"];
"1000458" [label="(Call,opcode == BPF_JNE)"];
"1000472" [label="(Identifier,opcode)"];
"1000148" [label="(Identifier,env)"];
"1000232" [label="(Call,&regs[insn->dst_reg])"];
"1000138" [label="(Call,insn->code)"];
"1000145" [label="(Identifier,BPF_JSLE)"];
"1000488" [label="(Identifier,dst_reg)"];
"1000529" [label="(MethodReturn,static int)"];
"1000475" [label="(Identifier,other_branch)"];
"1000453" [label="(Call,(opcode == BPF_JEQ || opcode == BPF_JNE) &&\n\t    reg_type_may_be_null(dst_reg->type))"];
"1000476" [label="(Call,insn->dst_reg)"];
"1000136" [label="(Identifier,opcode)"];
"1000454" [label="(Call,opcode == BPF_JEQ || opcode == BPF_JNE)"];
"1000135" [label="(Call,opcode = BPF_OP(insn->code))"];
"1000412" [label="(Call,&regs[insn->dst_reg])"];
"1000444" [label="(Identifier,insn)"];
"1000418" [label="(Identifier,opcode)"];
"1000392" [label="(Identifier,BPF_JNE)"];
"1000114" [label="(Call,*this_branch = env->cur_state)"];
"1000481" [label="(Identifier,BPF_JEQ)"];
"1000390" [label="(Call,opcode == BPF_JNE)"];
"1000365" [label="(Call,reg_set_min_max_inv(&other_branch_regs[insn->src_reg],\n\t\t\t\t\t\t    &regs[insn->src_reg],\n\t\t\t\t\t\t    dst_reg->var_off.value, opcode))"];
"1000479" [label="(Call,opcode == BPF_JEQ)"];
"1000483" [label="(ControlStructure,if (!try_match_pkt_pointers(insn, dst_reg, &regs[insn->src_reg],\n\t\t\t\t\t   this_branch, other_branch) &&\n\t\t   is_pointer_value(env, insn->dst_reg)))"];
"1000388" [label="(Identifier,opcode)"];
"1000170" [label="(Identifier,env)"];
"1000164" [label="(Call,insn->imm)"];
"1000471" [label="(Call,opcode == BPF_JNE)"];
"1000112" [label="(Block,)"];
"1000254" [label="(Identifier,opcode)"];
"1000439" [label="(ControlStructure,if (BPF_SRC(insn->code) == BPF_K &&\n\t    insn->imm == 0 && (opcode == BPF_JEQ || opcode == BPF_JNE) &&\n\t    reg_type_may_be_null(dst_reg->type)))"];
"1000441" [label="(Call,BPF_SRC(insn->code) == BPF_K)"];
"1000249" [label="(Call,is_branch_taken(dst_reg, insn->imm, opcode))"];
"1000389" [label="(Identifier,BPF_JEQ)"];
"1000251" [label="(Call,insn->imm)"];
"1000480" [label="(Identifier,opcode)"];
"1000386" [label="(Call,opcode == BPF_JEQ || opcode == BPF_JNE)"];
"1000176" [label="(Identifier,err)"];
"1000447" [label="(Call,insn->imm == 0 && (opcode == BPF_JEQ || opcode == BPF_JNE) &&\n\t    reg_type_may_be_null(dst_reg->type))"];
"1000385" [label="(ControlStructure,if (opcode == BPF_JEQ || opcode == BPF_JNE))"];
"1000158" [label="(Identifier,insn)"];
"1000498" [label="(Identifier,env)"];
"1000473" [label="(Identifier,BPF_JNE)"];
"1000341" [label="(Call,reg_set_min_max(&other_branch_regs[insn->dst_reg],\n\t\t\t\t\t\tdst_reg, regs[insn->src_reg].var_off.value,\n\t\t\t\t\t\topcode))"];
"1000459" [label="(Identifier,opcode)"];
"1000291" [label="(Call,!other_branch)"];
"1000387" [label="(Call,opcode == BPF_JEQ)"];
"1000486" [label="(Call,try_match_pkt_pointers(insn, dst_reg, &regs[insn->src_reg],\n\t\t\t\t\t   this_branch, other_branch))"];
"1000515" [label="(Identifier,env)"];
"1000142" [label="(ControlStructure,if (opcode > BPF_JSLE))"];
"1000489" [label="(Call,&regs[insn->src_reg])"];
"1000448" [label="(Call,insn->imm == 0)"];
"1000393" -> "1000385"  [label="AST: "];
"1000393" -> "1000418"  [label="CFG: "];
"1000394" -> "1000393"  [label="AST: "];
"1000400" -> "1000393"  [label="AST: "];
"1000406" -> "1000393"  [label="AST: "];
"1000412" -> "1000393"  [label="AST: "];
"1000418" -> "1000393"  [label="AST: "];
"1000444" -> "1000393"  [label="CFG: "];
"1000393" -> "1000529"  [label="DDG: &other_branch_regs[insn->src_reg]"];
"1000393" -> "1000529"  [label="DDG: &regs[insn->dst_reg]"];
"1000393" -> "1000529"  [label="DDG: reg_combine_min_max(&other_branch_regs[insn->src_reg],\n\t\t\t\t\t\t    &other_branch_regs[insn->dst_reg],\n\t\t\t\t\t\t    &regs[insn->src_reg],\n\t\t\t\t\t\t    &regs[insn->dst_reg], opcode)"];
"1000393" -> "1000529"  [label="DDG: &other_branch_regs[insn->dst_reg]"];
"1000393" -> "1000529"  [label="DDG: opcode"];
"1000393" -> "1000529"  [label="DDG: &regs[insn->src_reg]"];
"1000387" -> "1000393"  [label="DDG: opcode"];
"1000390" -> "1000393"  [label="DDG: opcode"];
"1000393" -> "1000455"  [label="DDG: opcode"];
"1000393" -> "1000471"  [label="DDG: opcode"];
"1000393" -> "1000486"  [label="DDG: &regs[insn->src_reg]"];
"1000387" -> "1000386"  [label="AST: "];
"1000387" -> "1000389"  [label="CFG: "];
"1000388" -> "1000387"  [label="AST: "];
"1000389" -> "1000387"  [label="AST: "];
"1000391" -> "1000387"  [label="CFG: "];
"1000386" -> "1000387"  [label="CFG: "];
"1000387" -> "1000529"  [label="DDG: BPF_JEQ"];
"1000387" -> "1000529"  [label="DDG: opcode"];
"1000387" -> "1000386"  [label="DDG: opcode"];
"1000387" -> "1000386"  [label="DDG: BPF_JEQ"];
"1000249" -> "1000387"  [label="DDG: opcode"];
"1000143" -> "1000387"  [label="DDG: opcode"];
"1000387" -> "1000390"  [label="DDG: opcode"];
"1000387" -> "1000455"  [label="DDG: opcode"];
"1000387" -> "1000455"  [label="DDG: BPF_JEQ"];
"1000387" -> "1000471"  [label="DDG: opcode"];
"1000387" -> "1000479"  [label="DDG: BPF_JEQ"];
"1000249" -> "1000247"  [label="AST: "];
"1000249" -> "1000254"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000251" -> "1000249"  [label="AST: "];
"1000254" -> "1000249"  [label="AST: "];
"1000247" -> "1000249"  [label="CFG: "];
"1000249" -> "1000529"  [label="DDG: insn->imm"];
"1000249" -> "1000529"  [label="DDG: opcode"];
"1000249" -> "1000529"  [label="DDG: dst_reg"];
"1000249" -> "1000247"  [label="DDG: dst_reg"];
"1000249" -> "1000247"  [label="DDG: insn->imm"];
"1000249" -> "1000247"  [label="DDG: opcode"];
"1000230" -> "1000249"  [label="DDG: dst_reg"];
"1000163" -> "1000249"  [label="DDG: insn->imm"];
"1000143" -> "1000249"  [label="DDG: opcode"];
"1000249" -> "1000341"  [label="DDG: dst_reg"];
"1000249" -> "1000341"  [label="DDG: opcode"];
"1000249" -> "1000365"  [label="DDG: opcode"];
"1000249" -> "1000427"  [label="DDG: dst_reg"];
"1000249" -> "1000427"  [label="DDG: insn->imm"];
"1000249" -> "1000427"  [label="DDG: opcode"];
"1000249" -> "1000448"  [label="DDG: insn->imm"];
"1000249" -> "1000455"  [label="DDG: opcode"];
"1000249" -> "1000471"  [label="DDG: opcode"];
"1000249" -> "1000486"  [label="DDG: dst_reg"];
"1000230" -> "1000112"  [label="AST: "];
"1000230" -> "1000232"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000232" -> "1000230"  [label="AST: "];
"1000242" -> "1000230"  [label="CFG: "];
"1000230" -> "1000529"  [label="DDG: dst_reg"];
"1000230" -> "1000529"  [label="DDG: &regs[insn->dst_reg]"];
"1000230" -> "1000341"  [label="DDG: dst_reg"];
"1000230" -> "1000427"  [label="DDG: dst_reg"];
"1000230" -> "1000486"  [label="DDG: dst_reg"];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000167"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000167" -> "1000163"  [label="AST: "];
"1000170" -> "1000163"  [label="CFG: "];
"1000176" -> "1000163"  [label="CFG: "];
"1000163" -> "1000529"  [label="DDG: insn->imm"];
"1000163" -> "1000529"  [label="DDG: insn->imm != 0"];
"1000163" -> "1000427"  [label="DDG: insn->imm"];
"1000163" -> "1000448"  [label="DDG: insn->imm"];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000145" -> "1000143"  [label="AST: "];
"1000148" -> "1000143"  [label="CFG: "];
"1000158" -> "1000143"  [label="CFG: "];
"1000143" -> "1000529"  [label="DDG: opcode"];
"1000143" -> "1000529"  [label="DDG: BPF_JSLE"];
"1000143" -> "1000529"  [label="DDG: opcode > BPF_JSLE"];
"1000135" -> "1000143"  [label="DDG: opcode"];
"1000143" -> "1000147"  [label="DDG: opcode"];
"1000143" -> "1000341"  [label="DDG: opcode"];
"1000143" -> "1000365"  [label="DDG: opcode"];
"1000143" -> "1000427"  [label="DDG: opcode"];
"1000143" -> "1000455"  [label="DDG: opcode"];
"1000143" -> "1000471"  [label="DDG: opcode"];
"1000135" -> "1000112"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000144" -> "1000135"  [label="CFG: "];
"1000135" -> "1000529"  [label="DDG: BPF_OP(insn->code)"];
"1000137" -> "1000135"  [label="DDG: insn->code"];
"1000137" -> "1000138"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000137" -> "1000529"  [label="DDG: insn->code"];
"1000137" -> "1000156"  [label="DDG: insn->code"];
"1000390" -> "1000386"  [label="AST: "];
"1000390" -> "1000392"  [label="CFG: "];
"1000391" -> "1000390"  [label="AST: "];
"1000392" -> "1000390"  [label="AST: "];
"1000386" -> "1000390"  [label="CFG: "];
"1000390" -> "1000529"  [label="DDG: BPF_JNE"];
"1000390" -> "1000529"  [label="DDG: opcode"];
"1000390" -> "1000386"  [label="DDG: opcode"];
"1000390" -> "1000386"  [label="DDG: BPF_JNE"];
"1000390" -> "1000455"  [label="DDG: opcode"];
"1000390" -> "1000458"  [label="DDG: BPF_JNE"];
"1000390" -> "1000471"  [label="DDG: opcode"];
"1000390" -> "1000471"  [label="DDG: BPF_JNE"];
"1000455" -> "1000454"  [label="AST: "];
"1000455" -> "1000457"  [label="CFG: "];
"1000456" -> "1000455"  [label="AST: "];
"1000457" -> "1000455"  [label="AST: "];
"1000459" -> "1000455"  [label="CFG: "];
"1000454" -> "1000455"  [label="CFG: "];
"1000455" -> "1000529"  [label="DDG: BPF_JEQ"];
"1000455" -> "1000529"  [label="DDG: opcode"];
"1000455" -> "1000454"  [label="DDG: opcode"];
"1000455" -> "1000454"  [label="DDG: BPF_JEQ"];
"1000365" -> "1000455"  [label="DDG: opcode"];
"1000427" -> "1000455"  [label="DDG: opcode"];
"1000341" -> "1000455"  [label="DDG: opcode"];
"1000455" -> "1000458"  [label="DDG: opcode"];
"1000455" -> "1000471"  [label="DDG: opcode"];
"1000455" -> "1000479"  [label="DDG: BPF_JEQ"];
"1000454" -> "1000453"  [label="AST: "];
"1000454" -> "1000458"  [label="CFG: "];
"1000458" -> "1000454"  [label="AST: "];
"1000463" -> "1000454"  [label="CFG: "];
"1000453" -> "1000454"  [label="CFG: "];
"1000454" -> "1000529"  [label="DDG: opcode == BPF_JEQ"];
"1000454" -> "1000529"  [label="DDG: opcode == BPF_JNE"];
"1000454" -> "1000453"  [label="DDG: opcode == BPF_JEQ"];
"1000454" -> "1000453"  [label="DDG: opcode == BPF_JNE"];
"1000458" -> "1000454"  [label="DDG: opcode"];
"1000458" -> "1000454"  [label="DDG: BPF_JNE"];
"1000386" -> "1000454"  [label="DDG: opcode == BPF_JNE"];
"1000453" -> "1000447"  [label="AST: "];
"1000453" -> "1000461"  [label="CFG: "];
"1000461" -> "1000453"  [label="AST: "];
"1000447" -> "1000453"  [label="CFG: "];
"1000453" -> "1000529"  [label="DDG: reg_type_may_be_null(dst_reg->type)"];
"1000453" -> "1000529"  [label="DDG: opcode == BPF_JEQ || opcode == BPF_JNE"];
"1000453" -> "1000447"  [label="DDG: opcode == BPF_JEQ || opcode == BPF_JNE"];
"1000453" -> "1000447"  [label="DDG: reg_type_may_be_null(dst_reg->type)"];
"1000461" -> "1000453"  [label="DDG: dst_reg->type"];
"1000447" -> "1000440"  [label="AST: "];
"1000447" -> "1000448"  [label="CFG: "];
"1000448" -> "1000447"  [label="AST: "];
"1000440" -> "1000447"  [label="CFG: "];
"1000447" -> "1000529"  [label="DDG: (opcode == BPF_JEQ || opcode == BPF_JNE) &&\n\t    reg_type_may_be_null(dst_reg->type)"];
"1000447" -> "1000529"  [label="DDG: insn->imm == 0"];
"1000447" -> "1000440"  [label="DDG: insn->imm == 0"];
"1000447" -> "1000440"  [label="DDG: (opcode == BPF_JEQ || opcode == BPF_JNE) &&\n\t    reg_type_may_be_null(dst_reg->type)"];
"1000448" -> "1000447"  [label="DDG: insn->imm"];
"1000448" -> "1000447"  [label="DDG: 0"];
"1000440" -> "1000439"  [label="AST: "];
"1000440" -> "1000441"  [label="CFG: "];
"1000441" -> "1000440"  [label="AST: "];
"1000467" -> "1000440"  [label="CFG: "];
"1000487" -> "1000440"  [label="CFG: "];
"1000440" -> "1000529"  [label="DDG: BPF_SRC(insn->code) == BPF_K &&\n\t    insn->imm == 0 && (opcode == BPF_JEQ || opcode == BPF_JNE) &&\n\t    reg_type_may_be_null(dst_reg->type)"];
"1000440" -> "1000529"  [label="DDG: insn->imm == 0 && (opcode == BPF_JEQ || opcode == BPF_JNE) &&\n\t    reg_type_may_be_null(dst_reg->type)"];
"1000440" -> "1000529"  [label="DDG: BPF_SRC(insn->code) == BPF_K"];
"1000441" -> "1000440"  [label="DDG: BPF_SRC(insn->code)"];
"1000441" -> "1000440"  [label="DDG: BPF_K"];
"1000458" -> "1000460"  [label="CFG: "];
"1000459" -> "1000458"  [label="AST: "];
"1000460" -> "1000458"  [label="AST: "];
"1000458" -> "1000529"  [label="DDG: BPF_JNE"];
"1000458" -> "1000529"  [label="DDG: opcode"];
"1000458" -> "1000471"  [label="DDG: opcode"];
"1000458" -> "1000471"  [label="DDG: BPF_JNE"];
"1000471" -> "1000466"  [label="AST: "];
"1000471" -> "1000473"  [label="CFG: "];
"1000472" -> "1000471"  [label="AST: "];
"1000473" -> "1000471"  [label="AST: "];
"1000466" -> "1000471"  [label="CFG: "];
"1000471" -> "1000529"  [label="DDG: BPF_JNE"];
"1000471" -> "1000466"  [label="DDG: opcode"];
"1000471" -> "1000466"  [label="DDG: BPF_JNE"];
"1000427" -> "1000471"  [label="DDG: opcode"];
"1000341" -> "1000471"  [label="DDG: opcode"];
"1000365" -> "1000471"  [label="DDG: opcode"];
"1000471" -> "1000479"  [label="DDG: opcode"];
"1000466" -> "1000465"  [label="AST: "];
"1000467" -> "1000466"  [label="AST: "];
"1000468" -> "1000466"  [label="AST: "];
"1000475" -> "1000466"  [label="CFG: "];
"1000466" -> "1000529"  [label="DDG: this_branch"];
"1000466" -> "1000529"  [label="DDG: opcode == BPF_JNE"];
"1000466" -> "1000529"  [label="DDG: mark_ptr_or_null_regs(this_branch, insn->dst_reg,\n\t\t\t\t      opcode == BPF_JNE)"];
"1000114" -> "1000466"  [label="DDG: this_branch"];
"1000220" -> "1000466"  [label="DDG: insn->dst_reg"];
"1000466" -> "1000474"  [label="DDG: insn->dst_reg"];
"1000474" -> "1000465"  [label="AST: "];
"1000474" -> "1000479"  [label="CFG: "];
"1000475" -> "1000474"  [label="AST: "];
"1000476" -> "1000474"  [label="AST: "];
"1000479" -> "1000474"  [label="AST: "];
"1000515" -> "1000474"  [label="CFG: "];
"1000474" -> "1000529"  [label="DDG: insn->dst_reg"];
"1000474" -> "1000529"  [label="DDG: mark_ptr_or_null_regs(other_branch, insn->dst_reg,\n\t\t\t\t      opcode == BPF_JEQ)"];
"1000474" -> "1000529"  [label="DDG: opcode == BPF_JEQ"];
"1000474" -> "1000529"  [label="DDG: other_branch"];
"1000291" -> "1000474"  [label="DDG: other_branch"];
"1000479" -> "1000474"  [label="DDG: opcode"];
"1000479" -> "1000474"  [label="DDG: BPF_JEQ"];
"1000479" -> "1000481"  [label="CFG: "];
"1000480" -> "1000479"  [label="AST: "];
"1000481" -> "1000479"  [label="AST: "];
"1000479" -> "1000529"  [label="DDG: opcode"];
"1000479" -> "1000529"  [label="DDG: BPF_JEQ"];
"1000486" -> "1000485"  [label="AST: "];
"1000486" -> "1000496"  [label="CFG: "];
"1000487" -> "1000486"  [label="AST: "];
"1000488" -> "1000486"  [label="AST: "];
"1000489" -> "1000486"  [label="AST: "];
"1000495" -> "1000486"  [label="AST: "];
"1000496" -> "1000486"  [label="AST: "];
"1000485" -> "1000486"  [label="CFG: "];
"1000486" -> "1000529"  [label="DDG: &regs[insn->src_reg]"];
"1000486" -> "1000529"  [label="DDG: other_branch"];
"1000486" -> "1000529"  [label="DDG: dst_reg"];
"1000486" -> "1000529"  [label="DDG: this_branch"];
"1000486" -> "1000529"  [label="DDG: insn"];
"1000486" -> "1000485"  [label="DDG: other_branch"];
"1000486" -> "1000485"  [label="DDG: &regs[insn->src_reg]"];
"1000486" -> "1000485"  [label="DDG: dst_reg"];
"1000486" -> "1000485"  [label="DDG: insn"];
"1000486" -> "1000485"  [label="DDG: this_branch"];
"1000110" -> "1000486"  [label="DDG: insn"];
"1000427" -> "1000486"  [label="DDG: dst_reg"];
"1000341" -> "1000486"  [label="DDG: dst_reg"];
"1000365" -> "1000486"  [label="DDG: &regs[insn->src_reg]"];
"1000114" -> "1000486"  [label="DDG: this_branch"];
"1000291" -> "1000486"  [label="DDG: other_branch"];
"1000485" -> "1000484"  [label="AST: "];
"1000498" -> "1000485"  [label="CFG: "];
"1000484" -> "1000485"  [label="CFG: "];
"1000485" -> "1000529"  [label="DDG: try_match_pkt_pointers(insn, dst_reg, &regs[insn->src_reg],\n\t\t\t\t\t   this_branch, other_branch)"];
"1000485" -> "1000484"  [label="DDG: try_match_pkt_pointers(insn, dst_reg, &regs[insn->src_reg],\n\t\t\t\t\t   this_branch, other_branch)"];
"1000484" -> "1000483"  [label="AST: "];
"1000484" -> "1000497"  [label="CFG: "];
"1000497" -> "1000484"  [label="AST: "];
"1000504" -> "1000484"  [label="CFG: "];
"1000515" -> "1000484"  [label="CFG: "];
"1000484" -> "1000529"  [label="DDG: is_pointer_value(env, insn->dst_reg)"];
"1000484" -> "1000529"  [label="DDG: !try_match_pkt_pointers(insn, dst_reg, &regs[insn->src_reg],\n\t\t\t\t\t   this_branch, other_branch)"];
"1000484" -> "1000529"  [label="DDG: !try_match_pkt_pointers(insn, dst_reg, &regs[insn->src_reg],\n\t\t\t\t\t   this_branch, other_branch) &&\n\t\t   is_pointer_value(env, insn->dst_reg)"];
"1000497" -> "1000484"  [label="DDG: env"];
"1000497" -> "1000484"  [label="DDG: insn->dst_reg"];
}
