digraph "0_linux_979d63d50c0c0f7bc537bf821e056cc9fe5abd38_0@pointer" {
"1000448" [label="(Call,insn->imm == 0)"];
"1000163" [label="(Call,insn->imm != 0)"];
"1000249" [label="(Call,is_branch_taken(dst_reg, insn->imm, opcode))"];
"1000230" [label="(Call,dst_reg = &regs[insn->dst_reg])"];
"1000143" [label="(Call,opcode > BPF_JSLE)"];
"1000135" [label="(Call,opcode = BPF_OP(insn->code))"];
"1000137" [label="(Call,BPF_OP(insn->code))"];
"1000427" [label="(Call,reg_set_min_max(&other_branch_regs[insn->dst_reg],\n\t\t\t\t\tdst_reg, insn->imm, opcode))"];
"1000447" [label="(Call,insn->imm == 0 && (opcode == BPF_JEQ || opcode == BPF_JNE) &&\n\t    reg_type_may_be_null(dst_reg->type))"];
"1000440" [label="(Call,BPF_SRC(insn->code) == BPF_K &&\n\t    insn->imm == 0 && (opcode == BPF_JEQ || opcode == BPF_JNE) &&\n\t    reg_type_may_be_null(dst_reg->type))"];
"1000167" [label="(Literal,0)"];
"1000242" [label="(Identifier,insn)"];
"1000145" [label="(Identifier,BPF_JSLE)"];
"1000529" [label="(MethodReturn,static int)"];
"1000137" [label="(Call,BPF_OP(insn->code))"];
"1000143" [label="(Call,opcode > BPF_JSLE)"];
"1000456" [label="(Identifier,opcode)"];
"1000427" [label="(Call,reg_set_min_max(&other_branch_regs[insn->dst_reg],\n\t\t\t\t\tdst_reg, insn->imm, opcode))"];
"1000440" [label="(Call,BPF_SRC(insn->code) == BPF_K &&\n\t    insn->imm == 0 && (opcode == BPF_JEQ || opcode == BPF_JNE) &&\n\t    reg_type_may_be_null(dst_reg->type))"];
"1000467" [label="(Identifier,this_branch)"];
"1000453" [label="(Call,(opcode == BPF_JEQ || opcode == BPF_JNE) &&\n\t    reg_type_may_be_null(dst_reg->type))"];
"1000251" [label="(Call,insn->imm)"];
"1000156" [label="(Call,BPF_SRC(insn->code))"];
"1000163" [label="(Call,insn->imm != 0)"];
"1000162" [label="(ControlStructure,if (insn->imm != 0))"];
"1000136" [label="(Identifier,opcode)"];
"1000231" [label="(Identifier,dst_reg)"];
"1000447" [label="(Call,insn->imm == 0 && (opcode == BPF_JEQ || opcode == BPF_JNE) &&\n\t    reg_type_may_be_null(dst_reg->type))"];
"1000176" [label="(Identifier,err)"];
"1000434" [label="(Identifier,dst_reg)"];
"1000426" [label="(Block,)"];
"1000247" [label="(Call,pred = is_branch_taken(dst_reg, insn->imm, opcode))"];
"1000487" [label="(Identifier,insn)"];
"1000135" [label="(Call,opcode = BPF_OP(insn->code))"];
"1000444" [label="(Identifier,insn)"];
"1000158" [label="(Identifier,insn)"];
"1000250" [label="(Identifier,dst_reg)"];
"1000438" [label="(Identifier,opcode)"];
"1000230" [label="(Call,dst_reg = &regs[insn->dst_reg])"];
"1000441" [label="(Call,BPF_SRC(insn->code) == BPF_K)"];
"1000365" [label="(Call,reg_set_min_max_inv(&other_branch_regs[insn->src_reg],\n\t\t\t\t\t\t    &regs[insn->src_reg],\n\t\t\t\t\t\t    dst_reg->var_off.value, opcode))"];
"1000455" [label="(Call,opcode == BPF_JEQ)"];
"1000435" [label="(Call,insn->imm)"];
"1000147" [label="(Call,verbose(env, \"invalid BPF_JMP opcode %x\n\", opcode))"];
"1000428" [label="(Call,&other_branch_regs[insn->dst_reg])"];
"1000170" [label="(Identifier,env)"];
"1000341" [label="(Call,reg_set_min_max(&other_branch_regs[insn->dst_reg],\n\t\t\t\t\t\tdst_reg, regs[insn->src_reg].var_off.value,\n\t\t\t\t\t\topcode))"];
"1000449" [label="(Call,insn->imm)"];
"1000144" [label="(Identifier,opcode)"];
"1000164" [label="(Call,insn->imm)"];
"1000471" [label="(Call,opcode == BPF_JNE)"];
"1000112" [label="(Block,)"];
"1000387" [label="(Call,opcode == BPF_JEQ)"];
"1000486" [label="(Call,try_match_pkt_pointers(insn, dst_reg, &regs[insn->src_reg],\n\t\t\t\t\t   this_branch, other_branch))"];
"1000142" [label="(ControlStructure,if (opcode > BPF_JSLE))"];
"1000254" [label="(Identifier,opcode)"];
"1000452" [label="(Literal,0)"];
"1000148" [label="(Identifier,env)"];
"1000232" [label="(Call,&regs[insn->dst_reg])"];
"1000439" [label="(ControlStructure,if (BPF_SRC(insn->code) == BPF_K &&\n\t    insn->imm == 0 && (opcode == BPF_JEQ || opcode == BPF_JNE) &&\n\t    reg_type_may_be_null(dst_reg->type)))"];
"1000249" [label="(Call,is_branch_taken(dst_reg, insn->imm, opcode))"];
"1000138" [label="(Call,insn->code)"];
"1000448" [label="(Call,insn->imm == 0)"];
"1000448" -> "1000447"  [label="AST: "];
"1000448" -> "1000452"  [label="CFG: "];
"1000449" -> "1000448"  [label="AST: "];
"1000452" -> "1000448"  [label="AST: "];
"1000456" -> "1000448"  [label="CFG: "];
"1000447" -> "1000448"  [label="CFG: "];
"1000448" -> "1000529"  [label="DDG: insn->imm"];
"1000448" -> "1000447"  [label="DDG: insn->imm"];
"1000448" -> "1000447"  [label="DDG: 0"];
"1000163" -> "1000448"  [label="DDG: insn->imm"];
"1000249" -> "1000448"  [label="DDG: insn->imm"];
"1000427" -> "1000448"  [label="DDG: insn->imm"];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000167"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000167" -> "1000163"  [label="AST: "];
"1000170" -> "1000163"  [label="CFG: "];
"1000176" -> "1000163"  [label="CFG: "];
"1000163" -> "1000529"  [label="DDG: insn->imm"];
"1000163" -> "1000529"  [label="DDG: insn->imm != 0"];
"1000163" -> "1000249"  [label="DDG: insn->imm"];
"1000163" -> "1000427"  [label="DDG: insn->imm"];
"1000249" -> "1000247"  [label="AST: "];
"1000249" -> "1000254"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000251" -> "1000249"  [label="AST: "];
"1000254" -> "1000249"  [label="AST: "];
"1000247" -> "1000249"  [label="CFG: "];
"1000249" -> "1000529"  [label="DDG: insn->imm"];
"1000249" -> "1000529"  [label="DDG: opcode"];
"1000249" -> "1000529"  [label="DDG: dst_reg"];
"1000249" -> "1000247"  [label="DDG: dst_reg"];
"1000249" -> "1000247"  [label="DDG: insn->imm"];
"1000249" -> "1000247"  [label="DDG: opcode"];
"1000230" -> "1000249"  [label="DDG: dst_reg"];
"1000143" -> "1000249"  [label="DDG: opcode"];
"1000249" -> "1000341"  [label="DDG: dst_reg"];
"1000249" -> "1000341"  [label="DDG: opcode"];
"1000249" -> "1000365"  [label="DDG: opcode"];
"1000249" -> "1000387"  [label="DDG: opcode"];
"1000249" -> "1000427"  [label="DDG: dst_reg"];
"1000249" -> "1000427"  [label="DDG: insn->imm"];
"1000249" -> "1000427"  [label="DDG: opcode"];
"1000249" -> "1000455"  [label="DDG: opcode"];
"1000249" -> "1000471"  [label="DDG: opcode"];
"1000249" -> "1000486"  [label="DDG: dst_reg"];
"1000230" -> "1000112"  [label="AST: "];
"1000230" -> "1000232"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000232" -> "1000230"  [label="AST: "];
"1000242" -> "1000230"  [label="CFG: "];
"1000230" -> "1000529"  [label="DDG: dst_reg"];
"1000230" -> "1000529"  [label="DDG: &regs[insn->dst_reg]"];
"1000230" -> "1000341"  [label="DDG: dst_reg"];
"1000230" -> "1000427"  [label="DDG: dst_reg"];
"1000230" -> "1000486"  [label="DDG: dst_reg"];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000145" -> "1000143"  [label="AST: "];
"1000148" -> "1000143"  [label="CFG: "];
"1000158" -> "1000143"  [label="CFG: "];
"1000143" -> "1000529"  [label="DDG: opcode"];
"1000143" -> "1000529"  [label="DDG: BPF_JSLE"];
"1000143" -> "1000529"  [label="DDG: opcode > BPF_JSLE"];
"1000135" -> "1000143"  [label="DDG: opcode"];
"1000143" -> "1000147"  [label="DDG: opcode"];
"1000143" -> "1000341"  [label="DDG: opcode"];
"1000143" -> "1000365"  [label="DDG: opcode"];
"1000143" -> "1000387"  [label="DDG: opcode"];
"1000143" -> "1000427"  [label="DDG: opcode"];
"1000143" -> "1000455"  [label="DDG: opcode"];
"1000143" -> "1000471"  [label="DDG: opcode"];
"1000135" -> "1000112"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000144" -> "1000135"  [label="CFG: "];
"1000135" -> "1000529"  [label="DDG: BPF_OP(insn->code)"];
"1000137" -> "1000135"  [label="DDG: insn->code"];
"1000137" -> "1000138"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000137" -> "1000529"  [label="DDG: insn->code"];
"1000137" -> "1000156"  [label="DDG: insn->code"];
"1000427" -> "1000426"  [label="AST: "];
"1000427" -> "1000438"  [label="CFG: "];
"1000428" -> "1000427"  [label="AST: "];
"1000434" -> "1000427"  [label="AST: "];
"1000435" -> "1000427"  [label="AST: "];
"1000438" -> "1000427"  [label="AST: "];
"1000444" -> "1000427"  [label="CFG: "];
"1000427" -> "1000529"  [label="DDG: &other_branch_regs[insn->dst_reg]"];
"1000427" -> "1000529"  [label="DDG: reg_set_min_max(&other_branch_regs[insn->dst_reg],\n\t\t\t\t\tdst_reg, insn->imm, opcode)"];
"1000427" -> "1000529"  [label="DDG: opcode"];
"1000427" -> "1000529"  [label="DDG: dst_reg"];
"1000427" -> "1000529"  [label="DDG: insn->imm"];
"1000427" -> "1000455"  [label="DDG: opcode"];
"1000427" -> "1000471"  [label="DDG: opcode"];
"1000427" -> "1000486"  [label="DDG: dst_reg"];
"1000447" -> "1000440"  [label="AST: "];
"1000447" -> "1000453"  [label="CFG: "];
"1000453" -> "1000447"  [label="AST: "];
"1000440" -> "1000447"  [label="CFG: "];
"1000447" -> "1000529"  [label="DDG: (opcode == BPF_JEQ || opcode == BPF_JNE) &&\n\t    reg_type_may_be_null(dst_reg->type)"];
"1000447" -> "1000529"  [label="DDG: insn->imm == 0"];
"1000447" -> "1000440"  [label="DDG: insn->imm == 0"];
"1000447" -> "1000440"  [label="DDG: (opcode == BPF_JEQ || opcode == BPF_JNE) &&\n\t    reg_type_may_be_null(dst_reg->type)"];
"1000453" -> "1000447"  [label="DDG: opcode == BPF_JEQ || opcode == BPF_JNE"];
"1000453" -> "1000447"  [label="DDG: reg_type_may_be_null(dst_reg->type)"];
"1000440" -> "1000439"  [label="AST: "];
"1000440" -> "1000441"  [label="CFG: "];
"1000441" -> "1000440"  [label="AST: "];
"1000467" -> "1000440"  [label="CFG: "];
"1000487" -> "1000440"  [label="CFG: "];
"1000440" -> "1000529"  [label="DDG: BPF_SRC(insn->code) == BPF_K &&\n\t    insn->imm == 0 && (opcode == BPF_JEQ || opcode == BPF_JNE) &&\n\t    reg_type_may_be_null(dst_reg->type)"];
"1000440" -> "1000529"  [label="DDG: insn->imm == 0 && (opcode == BPF_JEQ || opcode == BPF_JNE) &&\n\t    reg_type_may_be_null(dst_reg->type)"];
"1000440" -> "1000529"  [label="DDG: BPF_SRC(insn->code) == BPF_K"];
"1000441" -> "1000440"  [label="DDG: BPF_SRC(insn->code)"];
"1000441" -> "1000440"  [label="DDG: BPF_K"];
}
