digraph "0_ghostscript_0d3901189f245232f0161addf215d7268c4d05a3@pointer" {
"1000264" [label="(Call,permstr + cwd_len)"];
"1000222" [label="(Call,permstr[0] == '*')"];
"1000205" [label="(Call,permstr = permitstring.value.bytes)"];
"1000245" [label="(Call,(const char *)permstr)"];
"1000237" [label="(Call,(const char *)permstr)"];
"1000251" [label="(Call,cwd_len > 0)"];
"1000242" [label="(Call,cwd_len = gp_file_name_cwds((const char *)permstr, permlen))"];
"1000244" [label="(Call,gp_file_name_cwds((const char *)permstr, permlen))"];
"1000236" [label="(Call,gp_file_name_parents((const char *)permstr, permlen))"];
"1000219" [label="(Call,permlen == 1)"];
"1000212" [label="(Call,permlen = r_size(&permitstring))"];
"1000214" [label="(Call,r_size(&permitstring))"];
"1000200" [label="(Call,r_type(&permitstring))"];
"1000192" [label="(Call,array_get(imemory, permitlist, i, &permitstring))"];
"1000150" [label="(Call,iodev_default(imemory))"];
"1000174" [label="(Call,r_size(permitlist))"];
"1000123" [label="(Call,*permitlist = NULL)"];
"1000172" [label="(Call,i<r_size(permitlist))"];
"1000176" [label="(Call,i++)"];
"1000169" [label="(Call,i=0)"];
"1000193" [label="(Identifier,imemory)"];
"1000195" [label="(Identifier,i)"];
"1000206" [label="(Identifier,permstr)"];
"1000223" [label="(Call,permstr[0])"];
"1000236" [label="(Call,gp_file_name_parents((const char *)permstr, permlen))"];
"1000151" [label="(Identifier,imemory)"];
"1000207" [label="(Call,permitstring.value.bytes)"];
"1000247" [label="(Identifier,permstr)"];
"1000124" [label="(Identifier,permitlist)"];
"1000148" [label="(Call,iodev != iodev_default(imemory))"];
"1000172" [label="(Call,i<r_size(permitlist))"];
"1000255" [label="(Identifier,fname)"];
"1000239" [label="(Identifier,permstr)"];
"1000178" [label="(Block,)"];
"1000201" [label="(Call,&permitstring)"];
"1000234" [label="(Call,plen != gp_file_name_parents((const char *)permstr, permlen))"];
"1000218" [label="(Call,permlen == 1 && permstr[0] == '*')"];
"1000177" [label="(Identifier,i)"];
"1000268" [label="(Identifier,permlen)"];
"1000221" [label="(Literal,1)"];
"1000251" [label="(Call,cwd_len > 0)"];
"1000265" [label="(Identifier,permstr)"];
"1000245" [label="(Call,(const char *)permstr)"];
"1000196" [label="(Call,&permitstring)"];
"1000248" [label="(Identifier,permlen)"];
"1000266" [label="(Identifier,cwd_len)"];
"1000168" [label="(ControlStructure,for (i=0; i<r_size(permitlist); i++))"];
"1000242" [label="(Call,cwd_len = gp_file_name_cwds((const char *)permstr, permlen))"];
"1000219" [label="(Call,permlen == 1)"];
"1000194" [label="(Identifier,permitlist)"];
"1000220" [label="(Identifier,permlen)"];
"1000259" [label="(Call,string_match( (const unsigned char*) fname, len,\n                          permstr + cwd_len, permlen - cwd_len,\n                use_windows_pathsep ? &win_filename_params : NULL))"];
"1000215" [label="(Call,&permitstring)"];
"1000198" [label="(Literal,0)"];
"1000176" [label="(Call,i++)"];
"1000175" [label="(Identifier,permitlist)"];
"1000199" [label="(Call,r_type(&permitstring) != t_string)"];
"1000171" [label="(Literal,0)"];
"1000205" [label="(Call,permstr = permitstring.value.bytes)"];
"1000150" [label="(Call,iodev_default(imemory))"];
"1000200" [label="(Call,r_type(&permitstring))"];
"1000214" [label="(Call,r_size(&permitstring))"];
"1000212" [label="(Call,permlen = r_size(&permitstring))"];
"1000174" [label="(Call,r_size(permitlist))"];
"1000253" [label="(Literal,0)"];
"1000169" [label="(Call,i=0)"];
"1000237" [label="(Call,(const char *)permstr)"];
"1000120" [label="(Block,)"];
"1000264" [label="(Call,permstr + cwd_len)"];
"1000244" [label="(Call,gp_file_name_cwds((const char *)permstr, permlen))"];
"1000226" [label="(Literal,'*')"];
"1000267" [label="(Call,permlen - cwd_len)"];
"1000213" [label="(Identifier,permlen)"];
"1000252" [label="(Identifier,cwd_len)"];
"1000224" [label="(Identifier,permstr)"];
"1000182" [label="(Identifier,win_filename_params)"];
"1000250" [label="(Call,cwd_len > 0 && gp_file_name_is_absolute(fname, len))"];
"1000203" [label="(Identifier,t_string)"];
"1000123" [label="(Call,*permitlist = NULL)"];
"1000243" [label="(Identifier,cwd_len)"];
"1000240" [label="(Identifier,permlen)"];
"1000191" [label="(Call,array_get(imemory, permitlist, i, &permitstring) < 0)"];
"1000125" [label="(Identifier,NULL)"];
"1000173" [label="(Identifier,i)"];
"1000170" [label="(Identifier,i)"];
"1000128" [label="(Identifier,win_sep2)"];
"1000192" [label="(Call,array_get(imemory, permitlist, i, &permitstring))"];
"1000222" [label="(Call,permstr[0] == '*')"];
"1000278" [label="(Identifier,gs_error_invalidfileaccess)"];
"1000279" [label="(MethodReturn,RET)"];
"1000264" -> "1000259"  [label="AST: "];
"1000264" -> "1000266"  [label="CFG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000266" -> "1000264"  [label="AST: "];
"1000268" -> "1000264"  [label="CFG: "];
"1000264" -> "1000279"  [label="DDG: permstr"];
"1000222" -> "1000264"  [label="DDG: permstr[0]"];
"1000245" -> "1000264"  [label="DDG: permstr"];
"1000251" -> "1000264"  [label="DDG: cwd_len"];
"1000222" -> "1000218"  [label="AST: "];
"1000222" -> "1000226"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000226" -> "1000222"  [label="AST: "];
"1000218" -> "1000222"  [label="CFG: "];
"1000222" -> "1000279"  [label="DDG: permstr[0]"];
"1000222" -> "1000218"  [label="DDG: permstr[0]"];
"1000222" -> "1000218"  [label="DDG: '*'"];
"1000205" -> "1000222"  [label="DDG: permstr"];
"1000222" -> "1000237"  [label="DDG: permstr[0]"];
"1000222" -> "1000245"  [label="DDG: permstr[0]"];
"1000222" -> "1000259"  [label="DDG: permstr[0]"];
"1000205" -> "1000178"  [label="AST: "];
"1000205" -> "1000207"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000207" -> "1000205"  [label="AST: "];
"1000213" -> "1000205"  [label="CFG: "];
"1000205" -> "1000279"  [label="DDG: permstr"];
"1000205" -> "1000279"  [label="DDG: permitstring.value.bytes"];
"1000205" -> "1000237"  [label="DDG: permstr"];
"1000205" -> "1000245"  [label="DDG: permstr"];
"1000245" -> "1000244"  [label="AST: "];
"1000245" -> "1000247"  [label="CFG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000247" -> "1000245"  [label="AST: "];
"1000248" -> "1000245"  [label="CFG: "];
"1000245" -> "1000279"  [label="DDG: permstr"];
"1000245" -> "1000244"  [label="DDG: permstr"];
"1000237" -> "1000245"  [label="DDG: permstr"];
"1000245" -> "1000259"  [label="DDG: permstr"];
"1000237" -> "1000236"  [label="AST: "];
"1000237" -> "1000239"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000239" -> "1000237"  [label="AST: "];
"1000240" -> "1000237"  [label="CFG: "];
"1000237" -> "1000279"  [label="DDG: permstr"];
"1000237" -> "1000236"  [label="DDG: permstr"];
"1000251" -> "1000250"  [label="AST: "];
"1000251" -> "1000253"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="AST: "];
"1000255" -> "1000251"  [label="CFG: "];
"1000250" -> "1000251"  [label="CFG: "];
"1000251" -> "1000279"  [label="DDG: cwd_len"];
"1000251" -> "1000250"  [label="DDG: cwd_len"];
"1000251" -> "1000250"  [label="DDG: 0"];
"1000242" -> "1000251"  [label="DDG: cwd_len"];
"1000251" -> "1000259"  [label="DDG: cwd_len"];
"1000251" -> "1000267"  [label="DDG: cwd_len"];
"1000242" -> "1000178"  [label="AST: "];
"1000242" -> "1000244"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000244" -> "1000242"  [label="AST: "];
"1000252" -> "1000242"  [label="CFG: "];
"1000242" -> "1000279"  [label="DDG: gp_file_name_cwds((const char *)permstr, permlen)"];
"1000244" -> "1000242"  [label="DDG: (const char *)permstr"];
"1000244" -> "1000242"  [label="DDG: permlen"];
"1000244" -> "1000248"  [label="CFG: "];
"1000248" -> "1000244"  [label="AST: "];
"1000244" -> "1000279"  [label="DDG: permlen"];
"1000244" -> "1000279"  [label="DDG: (const char *)permstr"];
"1000236" -> "1000244"  [label="DDG: permlen"];
"1000219" -> "1000244"  [label="DDG: permlen"];
"1000244" -> "1000267"  [label="DDG: permlen"];
"1000236" -> "1000234"  [label="AST: "];
"1000236" -> "1000240"  [label="CFG: "];
"1000240" -> "1000236"  [label="AST: "];
"1000234" -> "1000236"  [label="CFG: "];
"1000236" -> "1000279"  [label="DDG: (const char *)permstr"];
"1000236" -> "1000279"  [label="DDG: permlen"];
"1000236" -> "1000234"  [label="DDG: (const char *)permstr"];
"1000236" -> "1000234"  [label="DDG: permlen"];
"1000219" -> "1000236"  [label="DDG: permlen"];
"1000219" -> "1000218"  [label="AST: "];
"1000219" -> "1000221"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000221" -> "1000219"  [label="AST: "];
"1000224" -> "1000219"  [label="CFG: "];
"1000218" -> "1000219"  [label="CFG: "];
"1000219" -> "1000279"  [label="DDG: permlen"];
"1000219" -> "1000218"  [label="DDG: permlen"];
"1000219" -> "1000218"  [label="DDG: 1"];
"1000212" -> "1000219"  [label="DDG: permlen"];
"1000212" -> "1000178"  [label="AST: "];
"1000212" -> "1000214"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000214" -> "1000212"  [label="AST: "];
"1000220" -> "1000212"  [label="CFG: "];
"1000212" -> "1000279"  [label="DDG: r_size(&permitstring)"];
"1000214" -> "1000212"  [label="DDG: &permitstring"];
"1000214" -> "1000215"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000214" -> "1000279"  [label="DDG: &permitstring"];
"1000214" -> "1000192"  [label="DDG: &permitstring"];
"1000200" -> "1000214"  [label="DDG: &permitstring"];
"1000192" -> "1000214"  [label="DDG: &permitstring"];
"1000200" -> "1000199"  [label="AST: "];
"1000200" -> "1000201"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000203" -> "1000200"  [label="CFG: "];
"1000200" -> "1000279"  [label="DDG: &permitstring"];
"1000200" -> "1000199"  [label="DDG: &permitstring"];
"1000192" -> "1000200"  [label="DDG: &permitstring"];
"1000192" -> "1000191"  [label="AST: "];
"1000192" -> "1000196"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000194" -> "1000192"  [label="AST: "];
"1000195" -> "1000192"  [label="AST: "];
"1000196" -> "1000192"  [label="AST: "];
"1000198" -> "1000192"  [label="CFG: "];
"1000192" -> "1000279"  [label="DDG: permitlist"];
"1000192" -> "1000279"  [label="DDG: i"];
"1000192" -> "1000279"  [label="DDG: imemory"];
"1000192" -> "1000279"  [label="DDG: &permitstring"];
"1000192" -> "1000174"  [label="DDG: permitlist"];
"1000192" -> "1000176"  [label="DDG: i"];
"1000192" -> "1000191"  [label="DDG: imemory"];
"1000192" -> "1000191"  [label="DDG: permitlist"];
"1000192" -> "1000191"  [label="DDG: i"];
"1000192" -> "1000191"  [label="DDG: &permitstring"];
"1000150" -> "1000192"  [label="DDG: imemory"];
"1000174" -> "1000192"  [label="DDG: permitlist"];
"1000172" -> "1000192"  [label="DDG: i"];
"1000150" -> "1000148"  [label="AST: "];
"1000150" -> "1000151"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000148" -> "1000150"  [label="CFG: "];
"1000150" -> "1000279"  [label="DDG: imemory"];
"1000150" -> "1000148"  [label="DDG: imemory"];
"1000174" -> "1000172"  [label="AST: "];
"1000174" -> "1000175"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000172" -> "1000174"  [label="CFG: "];
"1000174" -> "1000279"  [label="DDG: permitlist"];
"1000174" -> "1000172"  [label="DDG: permitlist"];
"1000123" -> "1000174"  [label="DDG: permitlist"];
"1000123" -> "1000120"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000128" -> "1000123"  [label="CFG: "];
"1000123" -> "1000279"  [label="DDG: NULL"];
"1000123" -> "1000279"  [label="DDG: permitlist"];
"1000172" -> "1000168"  [label="AST: "];
"1000173" -> "1000172"  [label="AST: "];
"1000182" -> "1000172"  [label="CFG: "];
"1000278" -> "1000172"  [label="CFG: "];
"1000172" -> "1000279"  [label="DDG: i<r_size(permitlist)"];
"1000172" -> "1000279"  [label="DDG: i"];
"1000172" -> "1000279"  [label="DDG: r_size(permitlist)"];
"1000176" -> "1000172"  [label="DDG: i"];
"1000169" -> "1000172"  [label="DDG: i"];
"1000176" -> "1000168"  [label="AST: "];
"1000176" -> "1000177"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000173" -> "1000176"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000169" -> "1000171"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000171" -> "1000169"  [label="AST: "];
"1000173" -> "1000169"  [label="CFG: "];
}
