digraph "0_Android_9d4853418ab2f754c2b63e091c29c5529b8b86ca_25@API" {
"1000141" [label="(Call,ip = dp->read_ip)"];
"1000137" [label="(Call,dp->original_ip = ip = dp->read_ip)"];
"1000155" [label="(Call,png_get_rowbytes(pp, ip))"];
"1000151" [label="(Call,dp->original_rowbytes = png_get_rowbytes(pp, ip))"];
"1000159" [label="(Call,dp->original_rowbytes == 0)"];
"1000172" [label="(Call,png_get_valid(pp, ip, 0xffffffff))"];
"1000168" [label="(Call,dp->chunks = png_get_valid(pp, ip, 0xffffffff))"];
"1000178" [label="(Call,dp->chunks & PNG_INFO_IDAT)"];
"1000177" [label="(Call,(dp->chunks & PNG_INFO_IDAT) == 0)"];
"1000244" [label="(Call,chunks = dp->chunks)"];
"1000307" [label="(Call,transform_info[i].valid_chunks & chunks)"];
"1000299" [label="(Call,transform_info[i].valid_chunks == 0)"];
"1000298" [label="(Call,transform_info[i].valid_chunks == 0 ||\n                (transform_info[i].valid_chunks & chunks) != 0)"];
"1000297" [label="(Call,(transform_info[i].valid_chunks == 0 ||\n                (transform_info[i].valid_chunks & chunks) != 0) &&\n            (transform_info[i].color_mask_required & ct) ==\n                transform_info[i].color_mask_required &&\n             (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0)"];
"1000306" [label="(Call,(transform_info[i].valid_chunks & chunks) != 0)"];
"1000192" [label="(Call,png_get_rows(pp, ip))"];
"1000188" [label="(Call,dp->original_rows = png_get_rows(pp, ip))"];
"1000196" [label="(Call,dp->original_rows == NULL)"];
"1000280" [label="(Call,transform_info[i].name != NULL)"];
"1000207" [label="(Call,png_get_IHDR(pp, ip,\n &dp->width, &dp->height, &dp->bit_depth, &dp->color_type,\n &dp->interlace_method, &dp->compression_method, &dp->filter_method))"];
"1000206" [label="(Call,!png_get_IHDR(pp, ip,\n &dp->width, &dp->height, &dp->bit_depth, &dp->color_type,\n &dp->interlace_method, &dp->compression_method, &dp->filter_method))"];
"1000258" [label="(Call,ct = dp->color_type)"];
"1000317" [label="(Call,transform_info[i].color_mask_required & ct)"];
"1000316" [label="(Call,(transform_info[i].color_mask_required & ct) ==\n                transform_info[i].color_mask_required)"];
"1000315" [label="(Call,(transform_info[i].color_mask_required & ct) ==\n                transform_info[i].color_mask_required &&\n             (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0)"];
"1000331" [label="(Call,transform_info[i].color_mask_absent & ct)"];
"1000330" [label="(Call,(transform_info[i].color_mask_absent & ct) == 0)"];
"1000329" [label="(Call,(transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0)"];
"1000264" [label="(Call,bd = dp->bit_depth)"];
"1000341" [label="(Call,transform_info[i].bit_depths & bd)"];
"1000340" [label="(Call,(transform_info[i].bit_depths & bd) != 0)"];
"1000339" [label="(Call,(transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0)"];
"1000205" [label="(ControlStructure,if (!png_get_IHDR(pp, ip,\n &dp->width, &dp->height, &dp->bit_depth, &dp->color_type,\n &dp->interlace_method, &dp->compression_method, &dp->filter_method)))"];
"1000142" [label="(Identifier,ip)"];
"1000148" [label="(Identifier,dp)"];
"1000195" [label="(ControlStructure,if (dp->original_rows == NULL))"];
"1000315" [label="(Call,(transform_info[i].color_mask_required & ct) ==\n                transform_info[i].color_mask_required &&\n             (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0)"];
"1000316" [label="(Call,(transform_info[i].color_mask_required & ct) ==\n                transform_info[i].color_mask_required)"];
"1000185" [label="(Identifier,dp)"];
"1000110" [label="(Block,)"];
"1000155" [label="(Call,png_get_rowbytes(pp, ip))"];
"1000169" [label="(Call,dp->chunks)"];
"1000320" [label="(Identifier,transform_info)"];
"1000218" [label="(Call,&dp->bit_depth)"];
"1000307" [label="(Call,transform_info[i].valid_chunks & chunks)"];
"1000152" [label="(Call,dp->original_rowbytes)"];
"1000317" [label="(Call,transform_info[i].color_mask_required & ct)"];
"1000259" [label="(Identifier,ct)"];
"1000161" [label="(Identifier,dp)"];
"1000334" [label="(Identifier,transform_info)"];
"1000177" [label="(Call,(dp->chunks & PNG_INFO_IDAT) == 0)"];
"1000305" [label="(Literal,0)"];
"1000281" [label="(Call,transform_info[i].name)"];
"1000272" [label="(Identifier,i)"];
"1000290" [label="(Identifier,transform)"];
"1000363" [label="(Call,(transform_info[i].when & TRANSFORM_R) != 0)"];
"1000329" [label="(Call,(transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0)"];
"1000207" [label="(Call,png_get_IHDR(pp, ip,\n &dp->width, &dp->height, &dp->bit_depth, &dp->color_type,\n &dp->interlace_method, &dp->compression_method, &dp->filter_method))"];
"1000157" [label="(Identifier,ip)"];
"1000251" [label="(Identifier,active)"];
"1000300" [label="(Call,transform_info[i].valid_chunks)"];
"1000172" [label="(Call,png_get_valid(pp, ip, 0xffffffff))"];
"1000190" [label="(Identifier,dp)"];
"1000193" [label="(Identifier,pp)"];
"1000182" [label="(Identifier,PNG_INFO_IDAT)"];
"1000176" [label="(ControlStructure,if ((dp->chunks & PNG_INFO_IDAT) == 0))"];
"1000296" [label="(ControlStructure,if ((transform_info[i].valid_chunks == 0 ||\n                (transform_info[i].valid_chunks & chunks) != 0) &&\n            (transform_info[i].color_mask_required & ct) ==\n                transform_info[i].color_mask_required &&\n             (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0))"];
"1000367" [label="(Identifier,transform_info)"];
"1000342" [label="(Call,transform_info[i].bit_depths)"];
"1000323" [label="(Identifier,ct)"];
"1000353" [label="(Identifier,transform_info)"];
"1000200" [label="(Identifier,NULL)"];
"1000299" [label="(Call,transform_info[i].valid_chunks == 0)"];
"1000348" [label="(Literal,0)"];
"1000337" [label="(Identifier,ct)"];
"1000160" [label="(Call,dp->original_rowbytes)"];
"1000326" [label="(Identifier,transform_info)"];
"1000222" [label="(Call,&dp->color_type)"];
"1000165" [label="(Identifier,dp)"];
"1000341" [label="(Call,transform_info[i].bit_depths & bd)"];
"1000359" [label="(Identifier,active)"];
"1000194" [label="(Identifier,ip)"];
"1000314" [label="(Literal,0)"];
"1000188" [label="(Call,dp->original_rows = png_get_rows(pp, ip))"];
"1000197" [label="(Call,dp->original_rows)"];
"1000344" [label="(Identifier,transform_info)"];
"1000339" [label="(Call,(transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0)"];
"1000168" [label="(Call,dp->chunks = png_get_valid(pp, ip, 0xffffffff))"];
"1000306" [label="(Call,(transform_info[i].valid_chunks & chunks) != 0)"];
"1000280" [label="(Call,transform_info[i].name != NULL)"];
"1000234" [label="(Call,&dp->filter_method)"];
"1000330" [label="(Call,(transform_info[i].color_mask_absent & ct) == 0)"];
"1000298" [label="(Call,transform_info[i].valid_chunks == 0 ||\n                (transform_info[i].valid_chunks & chunks) != 0)"];
"1000226" [label="(Call,&dp->interlace_method)"];
"1000170" [label="(Identifier,dp)"];
"1000206" [label="(Call,!png_get_IHDR(pp, ip,\n &dp->width, &dp->height, &dp->bit_depth, &dp->color_type,\n &dp->interlace_method, &dp->compression_method, &dp->filter_method))"];
"1000159" [label="(Call,dp->original_rowbytes == 0)"];
"1000192" [label="(Call,png_get_rows(pp, ip))"];
"1000209" [label="(Identifier,ip)"];
"1000265" [label="(Identifier,bd)"];
"1000180" [label="(Identifier,dp)"];
"1000244" [label="(Call,chunks = dp->chunks)"];
"1000137" [label="(Call,dp->original_ip = ip = dp->read_ip)"];
"1000173" [label="(Identifier,pp)"];
"1000198" [label="(Identifier,dp)"];
"1000286" [label="(Identifier,NULL)"];
"1000230" [label="(Call,&dp->compression_method)"];
"1000338" [label="(Literal,0)"];
"1000158" [label="(ControlStructure,if (dp->original_rowbytes == 0))"];
"1000347" [label="(Identifier,bd)"];
"1000349" [label="(Call,(transform_info[i].when & TRANSFORM_R) != 0)"];
"1000210" [label="(Call,&dp->width)"];
"1000297" [label="(Call,(transform_info[i].valid_chunks == 0 ||\n                (transform_info[i].valid_chunks & chunks) != 0) &&\n            (transform_info[i].color_mask_required & ct) ==\n                transform_info[i].color_mask_required &&\n             (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0)"];
"1000126" [label="(Call,pp = dp->read_pp)"];
"1000279" [label="(ControlStructure,if (transform_info[i].name != NULL))"];
"1000214" [label="(Call,&dp->height)"];
"1000331" [label="(Call,transform_info[i].color_mask_absent & ct)"];
"1000189" [label="(Call,dp->original_rows)"];
"1000260" [label="(Call,dp->color_type)"];
"1000246" [label="(Call,dp->chunks)"];
"1000138" [label="(Call,dp->original_ip)"];
"1000245" [label="(Identifier,chunks)"];
"1000175" [label="(Literal,0xffffffff)"];
"1000340" [label="(Call,(transform_info[i].bit_depths & bd) != 0)"];
"1000208" [label="(Identifier,pp)"];
"1000318" [label="(Call,transform_info[i].color_mask_required)"];
"1000163" [label="(Literal,0)"];
"1000278" [label="(Identifier,i)"];
"1000196" [label="(Call,dp->original_rows == NULL)"];
"1000179" [label="(Call,dp->chunks)"];
"1000174" [label="(Identifier,ip)"];
"1000202" [label="(Identifier,dp)"];
"1000239" [label="(Identifier,dp)"];
"1000178" [label="(Call,dp->chunks & PNG_INFO_IDAT)"];
"1000313" [label="(Identifier,chunks)"];
"1000308" [label="(Call,transform_info[i].valid_chunks)"];
"1000324" [label="(Call,transform_info[i].color_mask_required)"];
"1000151" [label="(Call,dp->original_rowbytes = png_get_rowbytes(pp, ip))"];
"1000388" [label="(MethodReturn,RET)"];
"1000242" [label="(Block,)"];
"1000143" [label="(Call,dp->read_ip)"];
"1000264" [label="(Call,bd = dp->bit_depth)"];
"1000258" [label="(Call,ct = dp->color_type)"];
"1000141" [label="(Call,ip = dp->read_ip)"];
"1000310" [label="(Identifier,transform_info)"];
"1000332" [label="(Call,transform_info[i].color_mask_absent)"];
"1000156" [label="(Identifier,pp)"];
"1000266" [label="(Call,dp->bit_depth)"];
"1000136" [label="(Block,)"];
"1000183" [label="(Literal,0)"];
"1000141" -> "1000137"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000137" -> "1000141"  [label="CFG: "];
"1000141" -> "1000137"  [label="DDG: ip"];
"1000141" -> "1000155"  [label="DDG: ip"];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000137"  [label="AST: "];
"1000148" -> "1000137"  [label="CFG: "];
"1000137" -> "1000388"  [label="DDG: dp->original_ip"];
"1000155" -> "1000151"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000157" -> "1000155"  [label="AST: "];
"1000151" -> "1000155"  [label="CFG: "];
"1000155" -> "1000151"  [label="DDG: pp"];
"1000155" -> "1000151"  [label="DDG: ip"];
"1000126" -> "1000155"  [label="DDG: pp"];
"1000155" -> "1000172"  [label="DDG: pp"];
"1000155" -> "1000172"  [label="DDG: ip"];
"1000151" -> "1000110"  [label="AST: "];
"1000152" -> "1000151"  [label="AST: "];
"1000161" -> "1000151"  [label="CFG: "];
"1000151" -> "1000388"  [label="DDG: png_get_rowbytes(pp, ip)"];
"1000151" -> "1000159"  [label="DDG: dp->original_rowbytes"];
"1000159" -> "1000158"  [label="AST: "];
"1000159" -> "1000163"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000163" -> "1000159"  [label="AST: "];
"1000165" -> "1000159"  [label="CFG: "];
"1000170" -> "1000159"  [label="CFG: "];
"1000159" -> "1000388"  [label="DDG: dp->original_rowbytes == 0"];
"1000159" -> "1000388"  [label="DDG: dp->original_rowbytes"];
"1000172" -> "1000168"  [label="AST: "];
"1000172" -> "1000175"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000174" -> "1000172"  [label="AST: "];
"1000175" -> "1000172"  [label="AST: "];
"1000168" -> "1000172"  [label="CFG: "];
"1000172" -> "1000168"  [label="DDG: pp"];
"1000172" -> "1000168"  [label="DDG: ip"];
"1000172" -> "1000168"  [label="DDG: 0xffffffff"];
"1000172" -> "1000192"  [label="DDG: pp"];
"1000172" -> "1000192"  [label="DDG: ip"];
"1000168" -> "1000110"  [label="AST: "];
"1000169" -> "1000168"  [label="AST: "];
"1000180" -> "1000168"  [label="CFG: "];
"1000168" -> "1000388"  [label="DDG: png_get_valid(pp, ip, 0xffffffff)"];
"1000168" -> "1000178"  [label="DDG: dp->chunks"];
"1000178" -> "1000177"  [label="AST: "];
"1000178" -> "1000182"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000182" -> "1000178"  [label="AST: "];
"1000183" -> "1000178"  [label="CFG: "];
"1000178" -> "1000388"  [label="DDG: PNG_INFO_IDAT"];
"1000178" -> "1000177"  [label="DDG: dp->chunks"];
"1000178" -> "1000177"  [label="DDG: PNG_INFO_IDAT"];
"1000178" -> "1000244"  [label="DDG: dp->chunks"];
"1000177" -> "1000176"  [label="AST: "];
"1000177" -> "1000183"  [label="CFG: "];
"1000183" -> "1000177"  [label="AST: "];
"1000185" -> "1000177"  [label="CFG: "];
"1000190" -> "1000177"  [label="CFG: "];
"1000177" -> "1000388"  [label="DDG: dp->chunks & PNG_INFO_IDAT"];
"1000177" -> "1000388"  [label="DDG: (dp->chunks & PNG_INFO_IDAT) == 0"];
"1000244" -> "1000242"  [label="AST: "];
"1000244" -> "1000246"  [label="CFG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000246" -> "1000244"  [label="AST: "];
"1000251" -> "1000244"  [label="CFG: "];
"1000244" -> "1000388"  [label="DDG: chunks"];
"1000244" -> "1000388"  [label="DDG: dp->chunks"];
"1000244" -> "1000307"  [label="DDG: chunks"];
"1000307" -> "1000306"  [label="AST: "];
"1000307" -> "1000313"  [label="CFG: "];
"1000308" -> "1000307"  [label="AST: "];
"1000313" -> "1000307"  [label="AST: "];
"1000314" -> "1000307"  [label="CFG: "];
"1000307" -> "1000388"  [label="DDG: chunks"];
"1000307" -> "1000388"  [label="DDG: transform_info[i].valid_chunks"];
"1000307" -> "1000299"  [label="DDG: transform_info[i].valid_chunks"];
"1000307" -> "1000306"  [label="DDG: transform_info[i].valid_chunks"];
"1000307" -> "1000306"  [label="DDG: chunks"];
"1000299" -> "1000307"  [label="DDG: transform_info[i].valid_chunks"];
"1000299" -> "1000298"  [label="AST: "];
"1000299" -> "1000305"  [label="CFG: "];
"1000300" -> "1000299"  [label="AST: "];
"1000305" -> "1000299"  [label="AST: "];
"1000310" -> "1000299"  [label="CFG: "];
"1000298" -> "1000299"  [label="CFG: "];
"1000299" -> "1000388"  [label="DDG: transform_info[i].valid_chunks"];
"1000299" -> "1000298"  [label="DDG: transform_info[i].valid_chunks"];
"1000299" -> "1000298"  [label="DDG: 0"];
"1000298" -> "1000297"  [label="AST: "];
"1000298" -> "1000306"  [label="CFG: "];
"1000306" -> "1000298"  [label="AST: "];
"1000320" -> "1000298"  [label="CFG: "];
"1000297" -> "1000298"  [label="CFG: "];
"1000298" -> "1000388"  [label="DDG: transform_info[i].valid_chunks == 0"];
"1000298" -> "1000388"  [label="DDG: (transform_info[i].valid_chunks & chunks) != 0"];
"1000298" -> "1000297"  [label="DDG: transform_info[i].valid_chunks == 0"];
"1000298" -> "1000297"  [label="DDG: (transform_info[i].valid_chunks & chunks) != 0"];
"1000306" -> "1000298"  [label="DDG: transform_info[i].valid_chunks & chunks"];
"1000306" -> "1000298"  [label="DDG: 0"];
"1000297" -> "1000296"  [label="AST: "];
"1000297" -> "1000315"  [label="CFG: "];
"1000315" -> "1000297"  [label="AST: "];
"1000359" -> "1000297"  [label="CFG: "];
"1000367" -> "1000297"  [label="CFG: "];
"1000297" -> "1000388"  [label="DDG: (transform_info[i].valid_chunks == 0 ||\n                (transform_info[i].valid_chunks & chunks) != 0) &&\n            (transform_info[i].color_mask_required & ct) ==\n                transform_info[i].color_mask_required &&\n             (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0"];
"1000297" -> "1000388"  [label="DDG: transform_info[i].valid_chunks == 0 ||\n                (transform_info[i].valid_chunks & chunks) != 0"];
"1000297" -> "1000388"  [label="DDG: (transform_info[i].color_mask_required & ct) ==\n                transform_info[i].color_mask_required &&\n             (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0"];
"1000315" -> "1000297"  [label="DDG: (transform_info[i].color_mask_required & ct) ==\n                transform_info[i].color_mask_required"];
"1000315" -> "1000297"  [label="DDG: (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0"];
"1000306" -> "1000314"  [label="CFG: "];
"1000314" -> "1000306"  [label="AST: "];
"1000306" -> "1000388"  [label="DDG: transform_info[i].valid_chunks & chunks"];
"1000192" -> "1000188"  [label="AST: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000194" -> "1000192"  [label="AST: "];
"1000188" -> "1000192"  [label="CFG: "];
"1000192" -> "1000188"  [label="DDG: pp"];
"1000192" -> "1000188"  [label="DDG: ip"];
"1000192" -> "1000207"  [label="DDG: pp"];
"1000192" -> "1000207"  [label="DDG: ip"];
"1000188" -> "1000110"  [label="AST: "];
"1000189" -> "1000188"  [label="AST: "];
"1000198" -> "1000188"  [label="CFG: "];
"1000188" -> "1000388"  [label="DDG: png_get_rows(pp, ip)"];
"1000188" -> "1000196"  [label="DDG: dp->original_rows"];
"1000196" -> "1000195"  [label="AST: "];
"1000196" -> "1000200"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000200" -> "1000196"  [label="AST: "];
"1000202" -> "1000196"  [label="CFG: "];
"1000208" -> "1000196"  [label="CFG: "];
"1000196" -> "1000388"  [label="DDG: NULL"];
"1000196" -> "1000388"  [label="DDG: dp->original_rows"];
"1000196" -> "1000388"  [label="DDG: dp->original_rows == NULL"];
"1000196" -> "1000280"  [label="DDG: NULL"];
"1000280" -> "1000279"  [label="AST: "];
"1000280" -> "1000286"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000286" -> "1000280"  [label="AST: "];
"1000290" -> "1000280"  [label="CFG: "];
"1000278" -> "1000280"  [label="CFG: "];
"1000280" -> "1000388"  [label="DDG: NULL"];
"1000280" -> "1000388"  [label="DDG: transform_info[i].name != NULL"];
"1000280" -> "1000388"  [label="DDG: transform_info[i].name"];
"1000207" -> "1000206"  [label="AST: "];
"1000207" -> "1000234"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000209" -> "1000207"  [label="AST: "];
"1000210" -> "1000207"  [label="AST: "];
"1000214" -> "1000207"  [label="AST: "];
"1000218" -> "1000207"  [label="AST: "];
"1000222" -> "1000207"  [label="AST: "];
"1000226" -> "1000207"  [label="AST: "];
"1000230" -> "1000207"  [label="AST: "];
"1000234" -> "1000207"  [label="AST: "];
"1000206" -> "1000207"  [label="CFG: "];
"1000207" -> "1000388"  [label="DDG: ip"];
"1000207" -> "1000388"  [label="DDG: &dp->width"];
"1000207" -> "1000388"  [label="DDG: &dp->interlace_method"];
"1000207" -> "1000388"  [label="DDG: &dp->height"];
"1000207" -> "1000388"  [label="DDG: &dp->bit_depth"];
"1000207" -> "1000388"  [label="DDG: &dp->color_type"];
"1000207" -> "1000388"  [label="DDG: pp"];
"1000207" -> "1000388"  [label="DDG: &dp->filter_method"];
"1000207" -> "1000388"  [label="DDG: &dp->compression_method"];
"1000207" -> "1000206"  [label="DDG: &dp->filter_method"];
"1000207" -> "1000206"  [label="DDG: &dp->bit_depth"];
"1000207" -> "1000206"  [label="DDG: pp"];
"1000207" -> "1000206"  [label="DDG: &dp->compression_method"];
"1000207" -> "1000206"  [label="DDG: &dp->height"];
"1000207" -> "1000206"  [label="DDG: &dp->interlace_method"];
"1000207" -> "1000206"  [label="DDG: &dp->color_type"];
"1000207" -> "1000206"  [label="DDG: ip"];
"1000207" -> "1000206"  [label="DDG: &dp->width"];
"1000207" -> "1000258"  [label="DDG: &dp->color_type"];
"1000207" -> "1000264"  [label="DDG: &dp->bit_depth"];
"1000206" -> "1000205"  [label="AST: "];
"1000239" -> "1000206"  [label="CFG: "];
"1000245" -> "1000206"  [label="CFG: "];
"1000206" -> "1000388"  [label="DDG: !png_get_IHDR(pp, ip,\n &dp->width, &dp->height, &dp->bit_depth, &dp->color_type,\n &dp->interlace_method, &dp->compression_method, &dp->filter_method)"];
"1000206" -> "1000388"  [label="DDG: png_get_IHDR(pp, ip,\n &dp->width, &dp->height, &dp->bit_depth, &dp->color_type,\n &dp->interlace_method, &dp->compression_method, &dp->filter_method)"];
"1000258" -> "1000242"  [label="AST: "];
"1000258" -> "1000260"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000260" -> "1000258"  [label="AST: "];
"1000265" -> "1000258"  [label="CFG: "];
"1000258" -> "1000388"  [label="DDG: ct"];
"1000258" -> "1000388"  [label="DDG: dp->color_type"];
"1000258" -> "1000317"  [label="DDG: ct"];
"1000317" -> "1000316"  [label="AST: "];
"1000317" -> "1000323"  [label="CFG: "];
"1000318" -> "1000317"  [label="AST: "];
"1000323" -> "1000317"  [label="AST: "];
"1000326" -> "1000317"  [label="CFG: "];
"1000317" -> "1000388"  [label="DDG: ct"];
"1000317" -> "1000316"  [label="DDG: transform_info[i].color_mask_required"];
"1000317" -> "1000316"  [label="DDG: ct"];
"1000316" -> "1000317"  [label="DDG: transform_info[i].color_mask_required"];
"1000331" -> "1000317"  [label="DDG: ct"];
"1000317" -> "1000331"  [label="DDG: ct"];
"1000316" -> "1000315"  [label="AST: "];
"1000316" -> "1000324"  [label="CFG: "];
"1000324" -> "1000316"  [label="AST: "];
"1000334" -> "1000316"  [label="CFG: "];
"1000315" -> "1000316"  [label="CFG: "];
"1000316" -> "1000388"  [label="DDG: transform_info[i].color_mask_required"];
"1000316" -> "1000388"  [label="DDG: transform_info[i].color_mask_required & ct"];
"1000316" -> "1000315"  [label="DDG: transform_info[i].color_mask_required & ct"];
"1000316" -> "1000315"  [label="DDG: transform_info[i].color_mask_required"];
"1000315" -> "1000329"  [label="CFG: "];
"1000329" -> "1000315"  [label="AST: "];
"1000315" -> "1000388"  [label="DDG: (transform_info[i].color_mask_required & ct) ==\n                transform_info[i].color_mask_required"];
"1000315" -> "1000388"  [label="DDG: (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0"];
"1000329" -> "1000315"  [label="DDG: (transform_info[i].color_mask_absent & ct) == 0"];
"1000329" -> "1000315"  [label="DDG: (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0"];
"1000331" -> "1000330"  [label="AST: "];
"1000331" -> "1000337"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000337" -> "1000331"  [label="AST: "];
"1000338" -> "1000331"  [label="CFG: "];
"1000331" -> "1000388"  [label="DDG: transform_info[i].color_mask_absent"];
"1000331" -> "1000388"  [label="DDG: ct"];
"1000331" -> "1000330"  [label="DDG: transform_info[i].color_mask_absent"];
"1000331" -> "1000330"  [label="DDG: ct"];
"1000330" -> "1000329"  [label="AST: "];
"1000330" -> "1000338"  [label="CFG: "];
"1000338" -> "1000330"  [label="AST: "];
"1000344" -> "1000330"  [label="CFG: "];
"1000329" -> "1000330"  [label="CFG: "];
"1000330" -> "1000388"  [label="DDG: transform_info[i].color_mask_absent & ct"];
"1000330" -> "1000329"  [label="DDG: transform_info[i].color_mask_absent & ct"];
"1000330" -> "1000329"  [label="DDG: 0"];
"1000329" -> "1000339"  [label="CFG: "];
"1000339" -> "1000329"  [label="AST: "];
"1000329" -> "1000388"  [label="DDG: (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0"];
"1000329" -> "1000388"  [label="DDG: (transform_info[i].color_mask_absent & ct) == 0"];
"1000339" -> "1000329"  [label="DDG: (transform_info[i].bit_depths & bd) != 0"];
"1000339" -> "1000329"  [label="DDG: (transform_info[i].when & TRANSFORM_R) != 0"];
"1000264" -> "1000242"  [label="AST: "];
"1000264" -> "1000266"  [label="CFG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000266" -> "1000264"  [label="AST: "];
"1000272" -> "1000264"  [label="CFG: "];
"1000264" -> "1000388"  [label="DDG: bd"];
"1000264" -> "1000388"  [label="DDG: dp->bit_depth"];
"1000264" -> "1000341"  [label="DDG: bd"];
"1000341" -> "1000340"  [label="AST: "];
"1000341" -> "1000347"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000347" -> "1000341"  [label="AST: "];
"1000348" -> "1000341"  [label="CFG: "];
"1000341" -> "1000388"  [label="DDG: bd"];
"1000341" -> "1000388"  [label="DDG: transform_info[i].bit_depths"];
"1000341" -> "1000340"  [label="DDG: transform_info[i].bit_depths"];
"1000341" -> "1000340"  [label="DDG: bd"];
"1000340" -> "1000339"  [label="AST: "];
"1000340" -> "1000348"  [label="CFG: "];
"1000348" -> "1000340"  [label="AST: "];
"1000353" -> "1000340"  [label="CFG: "];
"1000339" -> "1000340"  [label="CFG: "];
"1000340" -> "1000388"  [label="DDG: transform_info[i].bit_depths & bd"];
"1000340" -> "1000339"  [label="DDG: transform_info[i].bit_depths & bd"];
"1000340" -> "1000339"  [label="DDG: 0"];
"1000339" -> "1000349"  [label="CFG: "];
"1000349" -> "1000339"  [label="AST: "];
"1000339" -> "1000388"  [label="DDG: (transform_info[i].when & TRANSFORM_R) != 0"];
"1000339" -> "1000388"  [label="DDG: (transform_info[i].bit_depths & bd) != 0"];
"1000363" -> "1000339"  [label="DDG: (transform_info[i].when & TRANSFORM_R) != 0"];
"1000349" -> "1000339"  [label="DDG: transform_info[i].when & TRANSFORM_R"];
"1000349" -> "1000339"  [label="DDG: 0"];
}
