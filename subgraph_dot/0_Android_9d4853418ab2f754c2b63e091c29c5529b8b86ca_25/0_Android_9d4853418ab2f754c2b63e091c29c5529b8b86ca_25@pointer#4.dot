digraph "0_Android_9d4853418ab2f754c2b63e091c29c5529b8b86ca_25@pointer" {
"1000258" [label="(Call,ct = dp->color_type)"];
"1000207" [label="(Call,png_get_IHDR(pp, ip,\n &dp->width, &dp->height, &dp->bit_depth, &dp->color_type,\n &dp->interlace_method, &dp->compression_method, &dp->filter_method))"];
"1000192" [label="(Call,png_get_rows(pp, ip))"];
"1000172" [label="(Call,png_get_valid(pp, ip, 0xffffffff))"];
"1000155" [label="(Call,png_get_rowbytes(pp, ip))"];
"1000126" [label="(Call,pp = dp->read_pp)"];
"1000141" [label="(Call,ip = dp->read_ip)"];
"1000317" [label="(Call,transform_info[i].color_mask_required & ct)"];
"1000316" [label="(Call,(transform_info[i].color_mask_required & ct) ==\n                transform_info[i].color_mask_required)"];
"1000315" [label="(Call,(transform_info[i].color_mask_required & ct) ==\n                transform_info[i].color_mask_required &&\n             (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0)"];
"1000297" [label="(Call,(transform_info[i].valid_chunks == 0 ||\n                (transform_info[i].valid_chunks & chunks) != 0) &&\n            (transform_info[i].color_mask_required & ct) ==\n                transform_info[i].color_mask_required &&\n             (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0)"];
"1000331" [label="(Call,transform_info[i].color_mask_absent & ct)"];
"1000330" [label="(Call,(transform_info[i].color_mask_absent & ct) == 0)"];
"1000329" [label="(Call,(transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0)"];
"1000168" [label="(Call,dp->chunks = png_get_valid(pp, ip, 0xffffffff))"];
"1000128" [label="(Call,dp->read_pp)"];
"1000142" [label="(Identifier,ip)"];
"1000260" [label="(Call,dp->color_type)"];
"1000316" [label="(Call,(transform_info[i].color_mask_required & ct) ==\n                transform_info[i].color_mask_required)"];
"1000315" [label="(Call,(transform_info[i].color_mask_required & ct) ==\n                transform_info[i].color_mask_required &&\n             (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0)"];
"1000234" [label="(Call,&dp->filter_method)"];
"1000193" [label="(Identifier,pp)"];
"1000175" [label="(Literal,0xffffffff)"];
"1000208" [label="(Identifier,pp)"];
"1000318" [label="(Call,transform_info[i].color_mask_required)"];
"1000330" [label="(Call,(transform_info[i].color_mask_absent & ct) == 0)"];
"1000155" [label="(Call,png_get_rowbytes(pp, ip))"];
"1000122" [label="(Call,dp->original_pp = pp = dp->read_pp)"];
"1000296" [label="(ControlStructure,if ((transform_info[i].valid_chunks == 0 ||\n                (transform_info[i].valid_chunks & chunks) != 0) &&\n            (transform_info[i].color_mask_required & ct) ==\n                transform_info[i].color_mask_required &&\n             (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0))"];
"1000367" [label="(Identifier,transform_info)"];
"1000298" [label="(Call,transform_info[i].valid_chunks == 0 ||\n                (transform_info[i].valid_chunks & chunks) != 0)"];
"1000226" [label="(Call,&dp->interlace_method)"];
"1000218" [label="(Call,&dp->bit_depth)"];
"1000174" [label="(Identifier,ip)"];
"1000206" [label="(Call,!png_get_IHDR(pp, ip,\n &dp->width, &dp->height, &dp->bit_depth, &dp->color_type,\n &dp->interlace_method, &dp->compression_method, &dp->filter_method))"];
"1000339" [label="(Call,(transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0)"];
"1000192" [label="(Call,png_get_rows(pp, ip))"];
"1000323" [label="(Identifier,ct)"];
"1000317" [label="(Call,transform_info[i].color_mask_required & ct)"];
"1000259" [label="(Identifier,ct)"];
"1000209" [label="(Identifier,ip)"];
"1000265" [label="(Identifier,bd)"];
"1000324" [label="(Call,transform_info[i].color_mask_required)"];
"1000151" [label="(Call,dp->original_rowbytes = png_get_rowbytes(pp, ip))"];
"1000334" [label="(Identifier,transform_info)"];
"1000388" [label="(MethodReturn,RET)"];
"1000337" [label="(Identifier,ct)"];
"1000242" [label="(Block,)"];
"1000143" [label="(Call,dp->read_ip)"];
"1000326" [label="(Identifier,transform_info)"];
"1000264" [label="(Call,bd = dp->bit_depth)"];
"1000173" [label="(Identifier,pp)"];
"1000137" [label="(Call,dp->original_ip = ip = dp->read_ip)"];
"1000258" [label="(Call,ct = dp->color_type)"];
"1000222" [label="(Call,&dp->color_type)"];
"1000127" [label="(Identifier,pp)"];
"1000207" [label="(Call,png_get_IHDR(pp, ip,\n &dp->width, &dp->height, &dp->bit_depth, &dp->color_type,\n &dp->interlace_method, &dp->compression_method, &dp->filter_method))"];
"1000329" [label="(Call,(transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0)"];
"1000141" [label="(Call,ip = dp->read_ip)"];
"1000359" [label="(Identifier,active)"];
"1000332" [label="(Call,transform_info[i].color_mask_absent)"];
"1000156" [label="(Identifier,pp)"];
"1000230" [label="(Call,&dp->compression_method)"];
"1000194" [label="(Identifier,ip)"];
"1000338" [label="(Literal,0)"];
"1000210" [label="(Call,&dp->width)"];
"1000297" [label="(Call,(transform_info[i].valid_chunks == 0 ||\n                (transform_info[i].valid_chunks & chunks) != 0) &&\n            (transform_info[i].color_mask_required & ct) ==\n                transform_info[i].color_mask_required &&\n             (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0)"];
"1000126" [label="(Call,pp = dp->read_pp)"];
"1000214" [label="(Call,&dp->height)"];
"1000157" [label="(Identifier,ip)"];
"1000188" [label="(Call,dp->original_rows = png_get_rows(pp, ip))"];
"1000331" [label="(Call,transform_info[i].color_mask_absent & ct)"];
"1000172" [label="(Call,png_get_valid(pp, ip, 0xffffffff))"];
"1000344" [label="(Identifier,transform_info)"];
"1000258" -> "1000242"  [label="AST: "];
"1000258" -> "1000260"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000260" -> "1000258"  [label="AST: "];
"1000265" -> "1000258"  [label="CFG: "];
"1000258" -> "1000388"  [label="DDG: ct"];
"1000258" -> "1000388"  [label="DDG: dp->color_type"];
"1000207" -> "1000258"  [label="DDG: &dp->color_type"];
"1000258" -> "1000317"  [label="DDG: ct"];
"1000207" -> "1000206"  [label="AST: "];
"1000207" -> "1000234"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000209" -> "1000207"  [label="AST: "];
"1000210" -> "1000207"  [label="AST: "];
"1000214" -> "1000207"  [label="AST: "];
"1000218" -> "1000207"  [label="AST: "];
"1000222" -> "1000207"  [label="AST: "];
"1000226" -> "1000207"  [label="AST: "];
"1000230" -> "1000207"  [label="AST: "];
"1000234" -> "1000207"  [label="AST: "];
"1000206" -> "1000207"  [label="CFG: "];
"1000207" -> "1000388"  [label="DDG: ip"];
"1000207" -> "1000388"  [label="DDG: &dp->width"];
"1000207" -> "1000388"  [label="DDG: &dp->interlace_method"];
"1000207" -> "1000388"  [label="DDG: &dp->height"];
"1000207" -> "1000388"  [label="DDG: &dp->bit_depth"];
"1000207" -> "1000388"  [label="DDG: &dp->color_type"];
"1000207" -> "1000388"  [label="DDG: pp"];
"1000207" -> "1000388"  [label="DDG: &dp->filter_method"];
"1000207" -> "1000388"  [label="DDG: &dp->compression_method"];
"1000207" -> "1000206"  [label="DDG: &dp->filter_method"];
"1000207" -> "1000206"  [label="DDG: &dp->bit_depth"];
"1000207" -> "1000206"  [label="DDG: pp"];
"1000207" -> "1000206"  [label="DDG: &dp->compression_method"];
"1000207" -> "1000206"  [label="DDG: &dp->height"];
"1000207" -> "1000206"  [label="DDG: &dp->interlace_method"];
"1000207" -> "1000206"  [label="DDG: &dp->color_type"];
"1000207" -> "1000206"  [label="DDG: ip"];
"1000207" -> "1000206"  [label="DDG: &dp->width"];
"1000192" -> "1000207"  [label="DDG: pp"];
"1000192" -> "1000207"  [label="DDG: ip"];
"1000207" -> "1000264"  [label="DDG: &dp->bit_depth"];
"1000192" -> "1000188"  [label="AST: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000194" -> "1000192"  [label="AST: "];
"1000188" -> "1000192"  [label="CFG: "];
"1000192" -> "1000188"  [label="DDG: pp"];
"1000192" -> "1000188"  [label="DDG: ip"];
"1000172" -> "1000192"  [label="DDG: pp"];
"1000172" -> "1000192"  [label="DDG: ip"];
"1000172" -> "1000168"  [label="AST: "];
"1000172" -> "1000175"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000174" -> "1000172"  [label="AST: "];
"1000175" -> "1000172"  [label="AST: "];
"1000168" -> "1000172"  [label="CFG: "];
"1000172" -> "1000168"  [label="DDG: pp"];
"1000172" -> "1000168"  [label="DDG: ip"];
"1000172" -> "1000168"  [label="DDG: 0xffffffff"];
"1000155" -> "1000172"  [label="DDG: pp"];
"1000155" -> "1000172"  [label="DDG: ip"];
"1000155" -> "1000151"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000157" -> "1000155"  [label="AST: "];
"1000151" -> "1000155"  [label="CFG: "];
"1000155" -> "1000151"  [label="DDG: pp"];
"1000155" -> "1000151"  [label="DDG: ip"];
"1000126" -> "1000155"  [label="DDG: pp"];
"1000141" -> "1000155"  [label="DDG: ip"];
"1000126" -> "1000122"  [label="AST: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000128" -> "1000126"  [label="AST: "];
"1000122" -> "1000126"  [label="CFG: "];
"1000126" -> "1000122"  [label="DDG: pp"];
"1000141" -> "1000137"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000137" -> "1000141"  [label="CFG: "];
"1000141" -> "1000137"  [label="DDG: ip"];
"1000317" -> "1000316"  [label="AST: "];
"1000317" -> "1000323"  [label="CFG: "];
"1000318" -> "1000317"  [label="AST: "];
"1000323" -> "1000317"  [label="AST: "];
"1000326" -> "1000317"  [label="CFG: "];
"1000317" -> "1000388"  [label="DDG: ct"];
"1000317" -> "1000316"  [label="DDG: transform_info[i].color_mask_required"];
"1000317" -> "1000316"  [label="DDG: ct"];
"1000316" -> "1000317"  [label="DDG: transform_info[i].color_mask_required"];
"1000331" -> "1000317"  [label="DDG: ct"];
"1000317" -> "1000331"  [label="DDG: ct"];
"1000316" -> "1000315"  [label="AST: "];
"1000316" -> "1000324"  [label="CFG: "];
"1000324" -> "1000316"  [label="AST: "];
"1000334" -> "1000316"  [label="CFG: "];
"1000315" -> "1000316"  [label="CFG: "];
"1000316" -> "1000388"  [label="DDG: transform_info[i].color_mask_required"];
"1000316" -> "1000388"  [label="DDG: transform_info[i].color_mask_required & ct"];
"1000316" -> "1000315"  [label="DDG: transform_info[i].color_mask_required & ct"];
"1000316" -> "1000315"  [label="DDG: transform_info[i].color_mask_required"];
"1000315" -> "1000297"  [label="AST: "];
"1000315" -> "1000329"  [label="CFG: "];
"1000329" -> "1000315"  [label="AST: "];
"1000297" -> "1000315"  [label="CFG: "];
"1000315" -> "1000388"  [label="DDG: (transform_info[i].color_mask_required & ct) ==\n                transform_info[i].color_mask_required"];
"1000315" -> "1000388"  [label="DDG: (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0"];
"1000315" -> "1000297"  [label="DDG: (transform_info[i].color_mask_required & ct) ==\n                transform_info[i].color_mask_required"];
"1000315" -> "1000297"  [label="DDG: (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0"];
"1000329" -> "1000315"  [label="DDG: (transform_info[i].color_mask_absent & ct) == 0"];
"1000329" -> "1000315"  [label="DDG: (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0"];
"1000297" -> "1000296"  [label="AST: "];
"1000297" -> "1000298"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000359" -> "1000297"  [label="CFG: "];
"1000367" -> "1000297"  [label="CFG: "];
"1000297" -> "1000388"  [label="DDG: (transform_info[i].valid_chunks == 0 ||\n                (transform_info[i].valid_chunks & chunks) != 0) &&\n            (transform_info[i].color_mask_required & ct) ==\n                transform_info[i].color_mask_required &&\n             (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0"];
"1000297" -> "1000388"  [label="DDG: transform_info[i].valid_chunks == 0 ||\n                (transform_info[i].valid_chunks & chunks) != 0"];
"1000297" -> "1000388"  [label="DDG: (transform_info[i].color_mask_required & ct) ==\n                transform_info[i].color_mask_required &&\n             (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0"];
"1000298" -> "1000297"  [label="DDG: transform_info[i].valid_chunks == 0"];
"1000298" -> "1000297"  [label="DDG: (transform_info[i].valid_chunks & chunks) != 0"];
"1000331" -> "1000330"  [label="AST: "];
"1000331" -> "1000337"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000337" -> "1000331"  [label="AST: "];
"1000338" -> "1000331"  [label="CFG: "];
"1000331" -> "1000388"  [label="DDG: transform_info[i].color_mask_absent"];
"1000331" -> "1000388"  [label="DDG: ct"];
"1000331" -> "1000330"  [label="DDG: transform_info[i].color_mask_absent"];
"1000331" -> "1000330"  [label="DDG: ct"];
"1000330" -> "1000329"  [label="AST: "];
"1000330" -> "1000338"  [label="CFG: "];
"1000338" -> "1000330"  [label="AST: "];
"1000344" -> "1000330"  [label="CFG: "];
"1000329" -> "1000330"  [label="CFG: "];
"1000330" -> "1000388"  [label="DDG: transform_info[i].color_mask_absent & ct"];
"1000330" -> "1000329"  [label="DDG: transform_info[i].color_mask_absent & ct"];
"1000330" -> "1000329"  [label="DDG: 0"];
"1000329" -> "1000339"  [label="CFG: "];
"1000339" -> "1000329"  [label="AST: "];
"1000329" -> "1000388"  [label="DDG: (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0"];
"1000329" -> "1000388"  [label="DDG: (transform_info[i].color_mask_absent & ct) == 0"];
"1000339" -> "1000329"  [label="DDG: (transform_info[i].bit_depths & bd) != 0"];
"1000339" -> "1000329"  [label="DDG: (transform_info[i].when & TRANSFORM_R) != 0"];
}
