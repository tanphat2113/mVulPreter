digraph "0_linux_c919a3069c775c1c876bec55e00b2305d5125caa@API" {
"1000182" [label="(Call,dconf = kmalloc(sizeof(*dconf), GFP_KERNEL))"];
"1000184" [label="(Call,kmalloc(sizeof(*dconf), GFP_KERNEL))"];
"1000120" [label="(Call,kmalloc(sizeof(*hconf), GFP_KERNEL))"];
"1000190" [label="(Call,!dconf)"];
"1000197" [label="(Call,usb_control_msg(interface_to_usbdev(intf),\n \t\t\t     usb_rcvctrlpipe(interface_to_usbdev(intf), 0),\n \t\t\t     GS_USB_BREQ_DEVICE_CONFIG,\n \t\t\t     USB_DIR_IN|USB_TYPE_VENDOR|USB_RECIP_INTERFACE,\n \t\t\t     1,\n \t\t\t     intf->altsetting[0].desc.bInterfaceNumber,\n\t\t\t     dconf,\n\t\t\t     sizeof(*dconf),\n \t\t\t     1000))"];
"1000195" [label="(Call,rc = usb_control_msg(interface_to_usbdev(intf),\n \t\t\t     usb_rcvctrlpipe(interface_to_usbdev(intf), 0),\n \t\t\t     GS_USB_BREQ_DEVICE_CONFIG,\n \t\t\t     USB_DIR_IN|USB_TYPE_VENDOR|USB_RECIP_INTERFACE,\n \t\t\t     1,\n \t\t\t     intf->altsetting[0].desc.bInterfaceNumber,\n\t\t\t     dconf,\n\t\t\t     sizeof(*dconf),\n \t\t\t     1000))"];
"1000226" [label="(Call,rc < 0)"];
"1000230" [label="(Call,dev_err(&intf->dev, \"Couldn't get device config: (err=%d)\n\",\n \t\t\trc))"];
"1000239" [label="(Return,return rc;)"];
"1000237" [label="(Call,kfree(dconf))"];
"1000267" [label="(Call,kfree(dconf))"];
"1000283" [label="(Call,kfree(dconf))"];
"1000324" [label="(Call,gs_make_candev(i, intf, dconf))"];
"1000315" [label="(Call,i++)"];
"1000312" [label="(Call,i < icount)"];
"1000318" [label="(Call,dev->canch[i] = gs_make_candev(i, intf, dconf))"];
"1000329" [label="(Call,IS_ERR_OR_NULL(dev->canch[i]))"];
"1000338" [label="(Call,PTR_ERR(dev->canch[i]))"];
"1000336" [label="(Call,rc = PTR_ERR(dev->canch[i]))"];
"1000371" [label="(Return,return rc;)"];
"1000356" [label="(Call,gs_destroy_candev(dev->canch[i]))"];
"1000344" [label="(Call,icount = i)"];
"1000351" [label="(Call,i < icount)"];
"1000354" [label="(Call,i++)"];
"1000367" [label="(Call,kfree(dconf))"];
"1000382" [label="(Call,kfree(dconf))"];
"1000325" [label="(Identifier,i)"];
"1000221" [label="(Call,sizeof(*dconf))"];
"1000227" [label="(Identifier,rc)"];
"1000239" [label="(Return,return rc;)"];
"1000317" [label="(Block,)"];
"1000385" [label="(Literal,0)"];
"1000309" [label="(Call,i = 0)"];
"1000368" [label="(Identifier,dconf)"];
"1000230" [label="(Call,dev_err(&intf->dev, \"Couldn't get device config: (err=%d)\n\",\n \t\t\trc))"];
"1000345" [label="(Identifier,icount)"];
"1000235" [label="(Literal,\"Couldn't get device config: (err=%d)\n\")"];
"1000124" [label="(Identifier,GFP_KERNEL)"];
"1000339" [label="(Call,dev->canch[i])"];
"1000185" [label="(Call,sizeof(*dconf))"];
"1000194" [label="(Identifier,ENOMEM)"];
"1000118" [label="(Call,hconf = kmalloc(sizeof(*hconf), GFP_KERNEL))"];
"1000182" [label="(Call,dconf = kmalloc(sizeof(*dconf), GFP_KERNEL))"];
"1000190" [label="(Call,!dconf)"];
"1000138" [label="(Call,usb_control_msg(interface_to_usbdev(intf),\n\t\t\t     usb_sndctrlpipe(interface_to_usbdev(intf), 0),\n\t\t\t     GS_USB_BREQ_HOST_FORMAT,\n \t\t\t     USB_DIR_OUT|USB_TYPE_VENDOR|USB_RECIP_INTERFACE,\n \t\t\t     1,\n \t\t\t     intf->altsetting[0].desc.bInterfaceNumber,\n\t\t\t     hconf,\n\t\t\t     sizeof(*hconf),\n \t\t\t     1000))"];
"1000383" [label="(Identifier,dconf)"];
"1000321" [label="(Identifier,dev)"];
"1000284" [label="(Identifier,dconf)"];
"1000338" [label="(Call,PTR_ERR(dev->canch[i]))"];
"1000346" [label="(Identifier,i)"];
"1000315" [label="(Call,i++)"];
"1000204" [label="(Identifier,GS_USB_BREQ_DEVICE_CONFIG)"];
"1000196" [label="(Identifier,rc)"];
"1000191" [label="(Identifier,dconf)"];
"1000225" [label="(ControlStructure,if (rc < 0))"];
"1000365" [label="(Identifier,dev)"];
"1000195" [label="(Call,rc = usb_control_msg(interface_to_usbdev(intf),\n \t\t\t     usb_rcvctrlpipe(interface_to_usbdev(intf), 0),\n \t\t\t     GS_USB_BREQ_DEVICE_CONFIG,\n \t\t\t     USB_DIR_IN|USB_TYPE_VENDOR|USB_RECIP_INTERFACE,\n \t\t\t     1,\n \t\t\t     intf->altsetting[0].desc.bInterfaceNumber,\n\t\t\t     dconf,\n\t\t\t     sizeof(*dconf),\n \t\t\t     1000))"];
"1000318" [label="(Call,dev->canch[i] = gs_make_candev(i, intf, dconf))"];
"1000282" [label="(Block,)"];
"1000237" [label="(Call,kfree(dconf))"];
"1000359" [label="(Identifier,dev)"];
"1000354" [label="(Call,i++)"];
"1000377" [label="(Identifier,dev)"];
"1000205" [label="(Call,USB_DIR_IN|USB_TYPE_VENDOR|USB_RECIP_INTERFACE)"];
"1000256" [label="(Call,icount > GS_MAX_INTF)"];
"1000236" [label="(Identifier,rc)"];
"1000242" [label="(Identifier,icount)"];
"1000349" [label="(Identifier,i)"];
"1000351" [label="(Call,i < icount)"];
"1000210" [label="(Literal,1)"];
"1000330" [label="(Call,dev->canch[i])"];
"1000344" [label="(Call,icount = i)"];
"1000347" [label="(ControlStructure,for (i = 0; i < icount; i++))"];
"1000268" [label="(Identifier,dconf)"];
"1000228" [label="(Literal,0)"];
"1000312" [label="(Call,i < icount)"];
"1000283" [label="(Call,kfree(dconf))"];
"1000229" [label="(Block,)"];
"1000332" [label="(Identifier,dev)"];
"1000316" [label="(Identifier,i)"];
"1000240" [label="(Identifier,rc)"];
"1000314" [label="(Identifier,icount)"];
"1000120" [label="(Call,kmalloc(sizeof(*hconf), GFP_KERNEL))"];
"1000326" [label="(Identifier,intf)"];
"1000189" [label="(ControlStructure,if (!dconf))"];
"1000198" [label="(Call,interface_to_usbdev(intf))"];
"1000231" [label="(Call,&intf->dev)"];
"1000327" [label="(Identifier,dconf)"];
"1000259" [label="(Block,)"];
"1000238" [label="(Identifier,dconf)"];
"1000336" [label="(Call,rc = PTR_ERR(dev->canch[i]))"];
"1000328" [label="(ControlStructure,if (IS_ERR_OR_NULL(dev->canch[i])))"];
"1000372" [label="(Identifier,rc)"];
"1000337" [label="(Identifier,rc)"];
"1000121" [label="(Call,sizeof(*hconf))"];
"1000353" [label="(Identifier,icount)"];
"1000370" [label="(Identifier,dev)"];
"1000183" [label="(Identifier,dconf)"];
"1000386" [label="(MethodReturn,static int)"];
"1000352" [label="(Identifier,i)"];
"1000267" [label="(Call,kfree(dconf))"];
"1000233" [label="(Identifier,intf)"];
"1000211" [label="(Call,intf->altsetting[0].desc.bInterfaceNumber)"];
"1000271" [label="(Identifier,EINVAL)"];
"1000184" [label="(Call,kmalloc(sizeof(*dconf), GFP_KERNEL))"];
"1000329" [label="(Call,IS_ERR_OR_NULL(dev->canch[i]))"];
"1000224" [label="(Literal,1000)"];
"1000226" [label="(Call,rc < 0)"];
"1000355" [label="(Identifier,i)"];
"1000274" [label="(Call,kzalloc(sizeof(*dev), GFP_KERNEL))"];
"1000367" [label="(Call,kfree(dconf))"];
"1000107" [label="(Block,)"];
"1000306" [label="(Call,interface_to_usbdev(intf))"];
"1000356" [label="(Call,gs_destroy_candev(dev->canch[i]))"];
"1000357" [label="(Call,dev->canch[i])"];
"1000188" [label="(Identifier,GFP_KERNEL)"];
"1000200" [label="(Call,usb_rcvctrlpipe(interface_to_usbdev(intf), 0))"];
"1000220" [label="(Identifier,dconf)"];
"1000287" [label="(Identifier,ENOMEM)"];
"1000313" [label="(Identifier,i)"];
"1000371" [label="(Return,return rc;)"];
"1000382" [label="(Call,kfree(dconf))"];
"1000197" [label="(Call,usb_control_msg(interface_to_usbdev(intf),\n \t\t\t     usb_rcvctrlpipe(interface_to_usbdev(intf), 0),\n \t\t\t     GS_USB_BREQ_DEVICE_CONFIG,\n \t\t\t     USB_DIR_IN|USB_TYPE_VENDOR|USB_RECIP_INTERFACE,\n \t\t\t     1,\n \t\t\t     intf->altsetting[0].desc.bInterfaceNumber,\n\t\t\t     dconf,\n\t\t\t     sizeof(*dconf),\n \t\t\t     1000))"];
"1000319" [label="(Call,dev->canch[i])"];
"1000105" [label="(MethodParameterIn,struct usb_interface *intf)"];
"1000324" [label="(Call,gs_make_candev(i, intf, dconf))"];
"1000308" [label="(ControlStructure,for (i = 0; i < icount; i++))"];
"1000335" [label="(Block,)"];
"1000348" [label="(Call,i = 0)"];
"1000182" -> "1000107"  [label="AST: "];
"1000182" -> "1000184"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000184" -> "1000182"  [label="AST: "];
"1000191" -> "1000182"  [label="CFG: "];
"1000182" -> "1000386"  [label="DDG: "];
"1000184" -> "1000182"  [label="DDG: "];
"1000182" -> "1000190"  [label="DDG: "];
"1000184" -> "1000188"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000188" -> "1000184"  [label="AST: "];
"1000184" -> "1000386"  [label="DDG: "];
"1000120" -> "1000184"  [label="DDG: "];
"1000184" -> "1000274"  [label="DDG: "];
"1000120" -> "1000118"  [label="AST: "];
"1000120" -> "1000124"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000124" -> "1000120"  [label="AST: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000120" -> "1000386"  [label="DDG: "];
"1000120" -> "1000118"  [label="DDG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000190" -> "1000191"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000194" -> "1000190"  [label="CFG: "];
"1000196" -> "1000190"  [label="CFG: "];
"1000190" -> "1000386"  [label="DDG: "];
"1000190" -> "1000386"  [label="DDG: "];
"1000190" -> "1000197"  [label="DDG: "];
"1000197" -> "1000195"  [label="AST: "];
"1000197" -> "1000224"  [label="CFG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000200" -> "1000197"  [label="AST: "];
"1000204" -> "1000197"  [label="AST: "];
"1000205" -> "1000197"  [label="AST: "];
"1000210" -> "1000197"  [label="AST: "];
"1000211" -> "1000197"  [label="AST: "];
"1000220" -> "1000197"  [label="AST: "];
"1000221" -> "1000197"  [label="AST: "];
"1000224" -> "1000197"  [label="AST: "];
"1000195" -> "1000197"  [label="CFG: "];
"1000197" -> "1000386"  [label="DDG: "];
"1000197" -> "1000386"  [label="DDG: "];
"1000197" -> "1000386"  [label="DDG: "];
"1000197" -> "1000386"  [label="DDG: "];
"1000197" -> "1000386"  [label="DDG: "];
"1000197" -> "1000195"  [label="DDG: "];
"1000197" -> "1000195"  [label="DDG: "];
"1000197" -> "1000195"  [label="DDG: "];
"1000197" -> "1000195"  [label="DDG: "];
"1000197" -> "1000195"  [label="DDG: "];
"1000197" -> "1000195"  [label="DDG: "];
"1000197" -> "1000195"  [label="DDG: "];
"1000197" -> "1000195"  [label="DDG: "];
"1000200" -> "1000197"  [label="DDG: "];
"1000200" -> "1000197"  [label="DDG: "];
"1000198" -> "1000197"  [label="DDG: "];
"1000205" -> "1000197"  [label="DDG: "];
"1000205" -> "1000197"  [label="DDG: "];
"1000138" -> "1000197"  [label="DDG: "];
"1000197" -> "1000237"  [label="DDG: "];
"1000197" -> "1000267"  [label="DDG: "];
"1000197" -> "1000283"  [label="DDG: "];
"1000197" -> "1000324"  [label="DDG: "];
"1000197" -> "1000382"  [label="DDG: "];
"1000195" -> "1000107"  [label="AST: "];
"1000196" -> "1000195"  [label="AST: "];
"1000227" -> "1000195"  [label="CFG: "];
"1000195" -> "1000386"  [label="DDG: "];
"1000195" -> "1000226"  [label="DDG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000226" -> "1000228"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000228" -> "1000226"  [label="AST: "];
"1000233" -> "1000226"  [label="CFG: "];
"1000242" -> "1000226"  [label="CFG: "];
"1000226" -> "1000386"  [label="DDG: "];
"1000226" -> "1000386"  [label="DDG: "];
"1000226" -> "1000230"  [label="DDG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000230" -> "1000236"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000235" -> "1000230"  [label="AST: "];
"1000236" -> "1000230"  [label="AST: "];
"1000238" -> "1000230"  [label="CFG: "];
"1000230" -> "1000386"  [label="DDG: "];
"1000230" -> "1000386"  [label="DDG: "];
"1000230" -> "1000386"  [label="DDG: "];
"1000230" -> "1000239"  [label="DDG: "];
"1000239" -> "1000229"  [label="AST: "];
"1000239" -> "1000240"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000386" -> "1000239"  [label="CFG: "];
"1000239" -> "1000386"  [label="DDG: "];
"1000240" -> "1000239"  [label="DDG: "];
"1000237" -> "1000229"  [label="AST: "];
"1000237" -> "1000238"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000240" -> "1000237"  [label="CFG: "];
"1000237" -> "1000386"  [label="DDG: "];
"1000237" -> "1000386"  [label="DDG: "];
"1000267" -> "1000259"  [label="AST: "];
"1000267" -> "1000268"  [label="CFG: "];
"1000268" -> "1000267"  [label="AST: "];
"1000271" -> "1000267"  [label="CFG: "];
"1000267" -> "1000386"  [label="DDG: "];
"1000267" -> "1000386"  [label="DDG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000283" -> "1000284"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000287" -> "1000283"  [label="CFG: "];
"1000283" -> "1000386"  [label="DDG: "];
"1000283" -> "1000386"  [label="DDG: "];
"1000324" -> "1000318"  [label="AST: "];
"1000324" -> "1000327"  [label="CFG: "];
"1000325" -> "1000324"  [label="AST: "];
"1000326" -> "1000324"  [label="AST: "];
"1000327" -> "1000324"  [label="AST: "];
"1000318" -> "1000324"  [label="CFG: "];
"1000324" -> "1000386"  [label="DDG: "];
"1000324" -> "1000315"  [label="DDG: "];
"1000324" -> "1000318"  [label="DDG: "];
"1000324" -> "1000318"  [label="DDG: "];
"1000324" -> "1000318"  [label="DDG: "];
"1000312" -> "1000324"  [label="DDG: "];
"1000306" -> "1000324"  [label="DDG: "];
"1000105" -> "1000324"  [label="DDG: "];
"1000324" -> "1000344"  [label="DDG: "];
"1000324" -> "1000367"  [label="DDG: "];
"1000324" -> "1000382"  [label="DDG: "];
"1000315" -> "1000308"  [label="AST: "];
"1000315" -> "1000316"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000313" -> "1000315"  [label="CFG: "];
"1000315" -> "1000312"  [label="DDG: "];
"1000312" -> "1000308"  [label="AST: "];
"1000312" -> "1000314"  [label="CFG: "];
"1000313" -> "1000312"  [label="AST: "];
"1000314" -> "1000312"  [label="AST: "];
"1000321" -> "1000312"  [label="CFG: "];
"1000383" -> "1000312"  [label="CFG: "];
"1000312" -> "1000386"  [label="DDG: "];
"1000312" -> "1000386"  [label="DDG: "];
"1000312" -> "1000386"  [label="DDG: "];
"1000309" -> "1000312"  [label="DDG: "];
"1000256" -> "1000312"  [label="DDG: "];
"1000318" -> "1000317"  [label="AST: "];
"1000319" -> "1000318"  [label="AST: "];
"1000332" -> "1000318"  [label="CFG: "];
"1000318" -> "1000386"  [label="DDG: "];
"1000318" -> "1000329"  [label="DDG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000329" -> "1000330"  [label="CFG: "];
"1000330" -> "1000329"  [label="AST: "];
"1000337" -> "1000329"  [label="CFG: "];
"1000377" -> "1000329"  [label="CFG: "];
"1000329" -> "1000386"  [label="DDG: "];
"1000329" -> "1000386"  [label="DDG: "];
"1000329" -> "1000338"  [label="DDG: "];
"1000338" -> "1000336"  [label="AST: "];
"1000338" -> "1000339"  [label="CFG: "];
"1000339" -> "1000338"  [label="AST: "];
"1000336" -> "1000338"  [label="CFG: "];
"1000338" -> "1000386"  [label="DDG: "];
"1000338" -> "1000336"  [label="DDG: "];
"1000338" -> "1000356"  [label="DDG: "];
"1000336" -> "1000335"  [label="AST: "];
"1000337" -> "1000336"  [label="AST: "];
"1000345" -> "1000336"  [label="CFG: "];
"1000336" -> "1000386"  [label="DDG: "];
"1000336" -> "1000386"  [label="DDG: "];
"1000336" -> "1000371"  [label="DDG: "];
"1000371" -> "1000335"  [label="AST: "];
"1000371" -> "1000372"  [label="CFG: "];
"1000372" -> "1000371"  [label="AST: "];
"1000386" -> "1000371"  [label="CFG: "];
"1000371" -> "1000386"  [label="DDG: "];
"1000372" -> "1000371"  [label="DDG: "];
"1000356" -> "1000347"  [label="AST: "];
"1000356" -> "1000357"  [label="CFG: "];
"1000357" -> "1000356"  [label="AST: "];
"1000355" -> "1000356"  [label="CFG: "];
"1000356" -> "1000386"  [label="DDG: "];
"1000356" -> "1000386"  [label="DDG: "];
"1000344" -> "1000335"  [label="AST: "];
"1000344" -> "1000346"  [label="CFG: "];
"1000345" -> "1000344"  [label="AST: "];
"1000346" -> "1000344"  [label="AST: "];
"1000349" -> "1000344"  [label="CFG: "];
"1000344" -> "1000351"  [label="DDG: "];
"1000351" -> "1000347"  [label="AST: "];
"1000351" -> "1000353"  [label="CFG: "];
"1000352" -> "1000351"  [label="AST: "];
"1000353" -> "1000351"  [label="AST: "];
"1000359" -> "1000351"  [label="CFG: "];
"1000365" -> "1000351"  [label="CFG: "];
"1000351" -> "1000386"  [label="DDG: "];
"1000351" -> "1000386"  [label="DDG: "];
"1000351" -> "1000386"  [label="DDG: "];
"1000348" -> "1000351"  [label="DDG: "];
"1000354" -> "1000351"  [label="DDG: "];
"1000351" -> "1000354"  [label="DDG: "];
"1000354" -> "1000347"  [label="AST: "];
"1000354" -> "1000355"  [label="CFG: "];
"1000355" -> "1000354"  [label="AST: "];
"1000352" -> "1000354"  [label="CFG: "];
"1000367" -> "1000335"  [label="AST: "];
"1000367" -> "1000368"  [label="CFG: "];
"1000368" -> "1000367"  [label="AST: "];
"1000370" -> "1000367"  [label="CFG: "];
"1000367" -> "1000386"  [label="DDG: "];
"1000367" -> "1000386"  [label="DDG: "];
"1000382" -> "1000107"  [label="AST: "];
"1000382" -> "1000383"  [label="CFG: "];
"1000383" -> "1000382"  [label="AST: "];
"1000385" -> "1000382"  [label="CFG: "];
"1000382" -> "1000386"  [label="DDG: "];
"1000382" -> "1000386"  [label="DDG: "];
}
