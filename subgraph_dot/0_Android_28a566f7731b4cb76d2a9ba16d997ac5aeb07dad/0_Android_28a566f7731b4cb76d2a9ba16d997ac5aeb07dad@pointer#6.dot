digraph "0_Android_28a566f7731b4cb76d2a9ba16d997ac5aeb07dad@pointer" {
"1000451" [label="(Call,free(pMap->ranges))"];
"1000221" [label="(Call,pMap->ranges == NULL)"];
"1000212" [label="(Call,pMap->ranges = calloc(range_count, sizeof(MappedRange)))"];
"1000216" [label="(Call,calloc(range_count, sizeof(MappedRange)))"];
"1000195" [label="(Call,range_count == 0)"];
"1000111" [label="(Call,fgets(block_dev, sizeof(block_dev), mapf) == NULL)"];
"1000112" [label="(Call,fgets(block_dev, sizeof(block_dev), mapf))"];
"1000101" [label="(MethodParameterIn,FILE* mapf)"];
"1000197" [label="(Literal,0)"];
"1000126" [label="(Identifier,i)"];
"1000196" [label="(Identifier,range_count)"];
"1000220" [label="(ControlStructure,if (pMap->ranges == NULL))"];
"1000475" [label="(MethodReturn,static int)"];
"1000221" [label="(Call,pMap->ranges == NULL)"];
"1000314" [label="(Call,i < range_count)"];
"1000212" [label="(Call,pMap->ranges = calloc(range_count, sizeof(MappedRange)))"];
"1000223" [label="(Identifier,pMap)"];
"1000222" [label="(Call,pMap->ranges)"];
"1000225" [label="(Identifier,NULL)"];
"1000111" [label="(Call,fgets(block_dev, sizeof(block_dev), mapf) == NULL)"];
"1000213" [label="(Call,pMap->ranges)"];
"1000117" [label="(Identifier,NULL)"];
"1000443" [label="(Block,)"];
"1000189" [label="(Call,blocks > SIZE_MAX / blksize || range_count == 0)"];
"1000110" [label="(ControlStructure,if (fgets(block_dev, sizeof(block_dev), mapf) == NULL))"];
"1000113" [label="(Identifier,block_dev)"];
"1000120" [label="(Literal,\"failed to read block device from header\n\")"];
"1000101" [label="(MethodParameterIn,FILE* mapf)"];
"1000457" [label="(Literal,1)"];
"1000216" [label="(Call,calloc(range_count, sizeof(MappedRange)))"];
"1000289" [label="(Call,free(pMap->ranges))"];
"1000452" [label="(Call,pMap->ranges)"];
"1000217" [label="(Identifier,range_count)"];
"1000240" [label="(Call,mmap64(NULL, blocks * blksize, PROT_NONE, MAP_PRIVATE | MAP_ANON, -1, 0))"];
"1000207" [label="(Call,pMap->range_count = range_count)"];
"1000112" [label="(Call,fgets(block_dev, sizeof(block_dev), mapf))"];
"1000103" [label="(Block,)"];
"1000451" [label="(Call,free(pMap->ranges))"];
"1000228" [label="(Literal,\"calloc(%u, %zu) failed: %s\n\")"];
"1000116" [label="(Identifier,mapf)"];
"1000195" [label="(Call,range_count == 0)"];
"1000114" [label="(Call,sizeof(block_dev))"];
"1000261" [label="(Call,free(pMap->ranges))"];
"1000218" [label="(Call,sizeof(MappedRange))"];
"1000150" [label="(Call,fscanf(mapf, \"%zu %u\n%u\n\", &size, &blksize, &range_count))"];
"1000199" [label="(Call,LOGE(\"invalid data in block map file: size %zu, blksize %u, range_count %u\n\",\n             size, blksize, range_count))"];
"1000239" [label="(Identifier,reserve)"];
"1000324" [label="(Call,fscanf(mapf, \"%zu %zu\n\", &start, &end))"];
"1000227" [label="(Call,LOGE(\"calloc(%u, %zu) failed: %s\n\", range_count, sizeof(MappedRange), strerror(errno)))"];
"1000451" -> "1000443"  [label="AST: "];
"1000451" -> "1000452"  [label="CFG: "];
"1000452" -> "1000451"  [label="AST: "];
"1000457" -> "1000451"  [label="CFG: "];
"1000451" -> "1000475"  [label="DDG: pMap->ranges"];
"1000221" -> "1000451"  [label="DDG: pMap->ranges"];
"1000221" -> "1000220"  [label="AST: "];
"1000221" -> "1000225"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000225" -> "1000221"  [label="AST: "];
"1000228" -> "1000221"  [label="CFG: "];
"1000239" -> "1000221"  [label="CFG: "];
"1000221" -> "1000475"  [label="DDG: NULL"];
"1000221" -> "1000475"  [label="DDG: pMap->ranges == NULL"];
"1000221" -> "1000475"  [label="DDG: pMap->ranges"];
"1000212" -> "1000221"  [label="DDG: pMap->ranges"];
"1000111" -> "1000221"  [label="DDG: NULL"];
"1000221" -> "1000240"  [label="DDG: NULL"];
"1000221" -> "1000261"  [label="DDG: pMap->ranges"];
"1000221" -> "1000289"  [label="DDG: pMap->ranges"];
"1000212" -> "1000103"  [label="AST: "];
"1000212" -> "1000216"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000216" -> "1000212"  [label="AST: "];
"1000223" -> "1000212"  [label="CFG: "];
"1000212" -> "1000475"  [label="DDG: calloc(range_count, sizeof(MappedRange))"];
"1000216" -> "1000212"  [label="DDG: range_count"];
"1000216" -> "1000218"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000218" -> "1000216"  [label="AST: "];
"1000216" -> "1000475"  [label="DDG: range_count"];
"1000195" -> "1000216"  [label="DDG: range_count"];
"1000216" -> "1000227"  [label="DDG: range_count"];
"1000216" -> "1000314"  [label="DDG: range_count"];
"1000195" -> "1000189"  [label="AST: "];
"1000195" -> "1000197"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000197" -> "1000195"  [label="AST: "];
"1000189" -> "1000195"  [label="CFG: "];
"1000195" -> "1000189"  [label="DDG: range_count"];
"1000195" -> "1000189"  [label="DDG: 0"];
"1000195" -> "1000199"  [label="DDG: range_count"];
"1000195" -> "1000207"  [label="DDG: range_count"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000117"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000117" -> "1000111"  [label="AST: "];
"1000120" -> "1000111"  [label="CFG: "];
"1000126" -> "1000111"  [label="CFG: "];
"1000111" -> "1000475"  [label="DDG: NULL"];
"1000111" -> "1000475"  [label="DDG: fgets(block_dev, sizeof(block_dev), mapf)"];
"1000111" -> "1000475"  [label="DDG: fgets(block_dev, sizeof(block_dev), mapf) == NULL"];
"1000112" -> "1000111"  [label="DDG: block_dev"];
"1000112" -> "1000111"  [label="DDG: mapf"];
"1000112" -> "1000116"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000116" -> "1000112"  [label="AST: "];
"1000117" -> "1000112"  [label="CFG: "];
"1000112" -> "1000475"  [label="DDG: block_dev"];
"1000112" -> "1000475"  [label="DDG: mapf"];
"1000101" -> "1000112"  [label="DDG: mapf"];
"1000112" -> "1000150"  [label="DDG: mapf"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000475"  [label="DDG: mapf"];
"1000101" -> "1000150"  [label="DDG: mapf"];
"1000101" -> "1000324"  [label="DDG: mapf"];
}
