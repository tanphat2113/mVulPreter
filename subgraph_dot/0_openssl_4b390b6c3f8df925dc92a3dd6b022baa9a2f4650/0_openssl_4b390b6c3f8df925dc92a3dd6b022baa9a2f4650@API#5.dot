digraph "0_openssl_4b390b6c3f8df925dc92a3dd6b022baa9a2f4650@API" {
"1000381" [label="(Call,st->read_state_work = post_process_message(s, st->read_state_work))"];
"1000385" [label="(Call,post_process_message(s, st->read_state_work))"];
"1000336" [label="(Call,process_message(s, &pkt))"];
"1000272" [label="(Call,SSL_IS_DTLS(s))"];
"1000257" [label="(Call,max_message_size(s))"];
"1000240" [label="(Call,transition(s, mt))"];
"1000209" [label="(Call,tls_get_message_header(s, &mt))"];
"1000194" [label="(Call,SSL_IS_DTLS(s))"];
"1000136" [label="(Call,get_callback(s))"];
"1000110" [label="(MethodParameterIn,SSL *s)"];
"1000199" [label="(Call,dtls_get_message(s, &mt, &len))"];
"1000234" [label="(Call,cb(s, SSL_CB_CONNECT_LOOP, 1))"];
"1000229" [label="(Call,cb(s, SSL_CB_ACCEPT_LOOP, 1))"];
"1000317" [label="(Call,PACKET_buf_init(&pkt, s->init_msg, len))"];
"1000122" [label="(Call,len = 0)"];
"1000366" [label="(Call,st->read_state_work = WORK_MORE_A)"];
"1000381" [label="(Call,st->read_state_work = post_process_message(s, st->read_state_work))"];
"1000197" [label="(Call,ret = dtls_get_message(s, &mt, &len))"];
"1000214" [label="(Call,ret == 0)"];
"1000207" [label="(Call,ret = tls_get_message_header(s, &mt))"];
"1000239" [label="(Call,!transition(s, mt))"];
"1000244" [label="(Call,ossl_statem_set_error(s))"];
"1000249" [label="(Call,s->s3->tmp.message_size > max_message_size(s))"];
"1000275" [label="(Call,s->s3->tmp.message_size > 0)"];
"1000274" [label="(Call,s->s3->tmp.message_size > 0\n                    && !BUF_MEM_grow_clean(s->init_buf,\n                                           (int)s->s3->tmp.message_size\n                                           + SSL3_HM_HEADER_LENGTH))"];
"1000270" [label="(Call,!SSL_IS_DTLS(s)\n                    && s->s3->tmp.message_size > 0\n                    && !BUF_MEM_grow_clean(s->init_buf,\n                                           (int)s->s3->tmp.message_size\n                                           + SSL3_HM_HEADER_LENGTH))"];
"1000290" [label="(Call,(int)s->s3->tmp.message_size)"];
"1000285" [label="(Call,BUF_MEM_grow_clean(s->init_buf,\n                                           (int)s->s3->tmp.message_size\n                                           + SSL3_HM_HEADER_LENGTH))"];
"1000284" [label="(Call,!BUF_MEM_grow_clean(s->init_buf,\n                                           (int)s->s3->tmp.message_size\n                                           + SSL3_HM_HEADER_LENGTH))"];
"1000289" [label="(Call,(int)s->s3->tmp.message_size\n                                           + SSL3_HM_HEADER_LENGTH)"];
"1000260" [label="(Call,ssl3_send_alert(s, SSL3_AL_FATAL, SSL_AD_ILLEGAL_PARAMETER))"];
"1000271" [label="(Call,!SSL_IS_DTLS(s))"];
"1000301" [label="(Call,ssl3_send_alert(s, SSL3_AL_FATAL, SSL_AD_INTERNAL_ERROR))"];
"1000325" [label="(Call,ssl3_send_alert(s, SSL3_AL_FATAL, SSL_AD_INTERNAL_ERROR))"];
"1000316" [label="(Call,!PACKET_buf_init(&pkt, s->init_msg, len))"];
"1000334" [label="(Call,ret = process_message(s, &pkt))"];
"1000353" [label="(Call,SSL_IS_DTLS(s))"];
"1000356" [label="(Call,dtls1_stop_timer(s))"];
"1000407" [label="(Call,SSL_IS_DTLS(s))"];
"1000410" [label="(Call,dtls1_stop_timer(s))"];
"1000416" [label="(Call,ssl3_send_alert(s, SSL3_AL_FATAL, SSL_AD_INTERNAL_ERROR))"];
"1000423" [label="(Call,ossl_statem_set_error(s))"];
"1000232" [label="(Literal,1)"];
"1000230" [label="(Identifier,s)"];
"1000318" [label="(Call,&pkt)"];
"1000416" [label="(Call,ssl3_send_alert(s, SSL3_AL_FATAL, SSL_AD_INTERNAL_ERROR))"];
"1000427" [label="(MethodReturn,static SUB_STATE_RETURN)"];
"1000272" [label="(Call,SSL_IS_DTLS(s))"];
"1000324" [label="(Block,)"];
"1000201" [label="(Call,&mt)"];
"1000325" [label="(Call,ssl3_send_alert(s, SSL3_AL_FATAL, SSL_AD_INTERNAL_ERROR))"];
"1000328" [label="(Identifier,SSL_AD_INTERNAL_ERROR)"];
"1000337" [label="(Identifier,s)"];
"1000206" [label="(Block,)"];
"1000209" [label="(Call,tls_get_message_header(s, &mt))"];
"1000234" [label="(Call,cb(s, SSL_CB_CONNECT_LOOP, 1))"];
"1000354" [label="(Identifier,s)"];
"1000312" [label="(Identifier,st)"];
"1000262" [label="(Identifier,SSL3_AL_FATAL)"];
"1000259" [label="(Block,)"];
"1000357" [label="(Identifier,s)"];
"1000211" [label="(Call,&mt)"];
"1000241" [label="(Identifier,s)"];
"1000306" [label="(Identifier,SSL_F_TLS_GET_MESSAGE_HEADER)"];
"1000382" [label="(Call,st->read_state_work)"];
"1000421" [label="(Identifier,SSL_F_READ_STATE_MACHINE)"];
"1000253" [label="(Identifier,s)"];
"1000248" [label="(ControlStructure,if (s->s3->tmp.message_size > max_message_size(s)))"];
"1000219" [label="(Identifier,SUB_STATE_ERROR)"];
"1000199" [label="(Call,dtls_get_message(s, &mt, &len))"];
"1000320" [label="(Call,s->init_msg)"];
"1000132" [label="(Identifier,cb)"];
"1000286" [label="(Call,s->init_buf)"];
"1000239" [label="(Call,!transition(s, mt))"];
"1000238" [label="(ControlStructure,if (!transition(s, mt)))"];
"1000352" [label="(ControlStructure,if (SSL_IS_DTLS(s)))"];
"1000323" [label="(Identifier,len)"];
"1000338" [label="(Call,&pkt)"];
"1000392" [label="(Identifier,st)"];
"1000385" [label="(Call,post_process_message(s, st->read_state_work))"];
"1000317" [label="(Call,PACKET_buf_init(&pkt, s->init_msg, len))"];
"1000110" [label="(MethodParameterIn,SSL *s)"];
"1000410" [label="(Call,dtls1_stop_timer(s))"];
"1000245" [label="(Identifier,s)"];
"1000203" [label="(Call,&len)"];
"1000233" [label="(ControlStructure,else)"];
"1000196" [label="(Block,)"];
"1000243" [label="(Block,)"];
"1000413" [label="(Identifier,SUB_STATE_FINISHED)"];
"1000292" [label="(Call,s->s3->tmp.message_size)"];
"1000269" [label="(ControlStructure,if (!SSL_IS_DTLS(s)\n                    && s->s3->tmp.message_size > 0\n                    && !BUF_MEM_grow_clean(s->init_buf,\n                                           (int)s->s3->tmp.message_size\n                                           + SSL3_HM_HEADER_LENGTH)))"];
"1000265" [label="(Identifier,SSL_F_READ_STATE_MACHINE)"];
"1000225" [label="(ControlStructure,if (s->server))"];
"1000258" [label="(Identifier,s)"];
"1000302" [label="(Identifier,s)"];
"1000356" [label="(Call,dtls1_stop_timer(s))"];
"1000370" [label="(Identifier,WORK_MORE_A)"];
"1000235" [label="(Identifier,s)"];
"1000304" [label="(Identifier,SSL_AD_INTERNAL_ERROR)"];
"1000387" [label="(Call,st->read_state_work)"];
"1000240" [label="(Call,transition(s, mt))"];
"1000423" [label="(Call,ossl_statem_set_error(s))"];
"1000242" [label="(Identifier,mt)"];
"1000215" [label="(Identifier,ret)"];
"1000300" [label="(Block,)"];
"1000330" [label="(Identifier,SSL_F_READ_STATE_MACHINE)"];
"1000353" [label="(Call,SSL_IS_DTLS(s))"];
"1000236" [label="(Identifier,SSL_CB_CONNECT_LOOP)"];
"1000208" [label="(Identifier,ret)"];
"1000275" [label="(Call,s->s3->tmp.message_size > 0)"];
"1000426" [label="(Identifier,SUB_STATE_ERROR)"];
"1000386" [label="(Identifier,s)"];
"1000287" [label="(Identifier,s)"];
"1000347" [label="(Block,)"];
"1000193" [label="(ControlStructure,if (SSL_IS_DTLS(s)))"];
"1000335" [label="(Identifier,ret)"];
"1000424" [label="(Identifier,s)"];
"1000136" [label="(Call,get_callback(s))"];
"1000336" [label="(Call,process_message(s, &pkt))"];
"1000263" [label="(Identifier,SSL_AD_ILLEGAL_PARAMETER)"];
"1000279" [label="(Identifier,s)"];
"1000213" [label="(ControlStructure,if (ret == 0))"];
"1000111" [label="(Block,)"];
"1000137" [label="(Identifier,s)"];
"1000381" [label="(Call,st->read_state_work = post_process_message(s, st->read_state_work))"];
"1000342" [label="(Identifier,s)"];
"1000418" [label="(Identifier,SSL3_AL_FATAL)"];
"1000123" [label="(Identifier,len)"];
"1000283" [label="(Literal,0)"];
"1000367" [label="(Call,st->read_state_work)"];
"1000200" [label="(Identifier,s)"];
"1000315" [label="(ControlStructure,if (!PACKET_buf_init(&pkt, s->init_msg, len)))"];
"1000210" [label="(Identifier,s)"];
"1000261" [label="(Identifier,s)"];
"1000407" [label="(Call,SSL_IS_DTLS(s))"];
"1000359" [label="(Identifier,SUB_STATE_FINISHED)"];
"1000366" [label="(Call,st->read_state_work = WORK_MORE_A)"];
"1000276" [label="(Call,s->s3->tmp.message_size)"];
"1000355" [label="(Block,)"];
"1000301" [label="(Call,ssl3_send_alert(s, SSL3_AL_FATAL, SSL_AD_INTERNAL_ERROR))"];
"1000303" [label="(Identifier,SSL3_AL_FATAL)"];
"1000334" [label="(Call,ret = process_message(s, &pkt))"];
"1000273" [label="(Identifier,s)"];
"1000299" [label="(Identifier,SSL3_HM_HEADER_LENGTH)"];
"1000195" [label="(Identifier,s)"];
"1000408" [label="(Identifier,s)"];
"1000247" [label="(Identifier,SUB_STATE_ERROR)"];
"1000316" [label="(Call,!PACKET_buf_init(&pkt, s->init_msg, len))"];
"1000417" [label="(Identifier,s)"];
"1000124" [label="(Literal,0)"];
"1000271" [label="(Call,!SSL_IS_DTLS(s))"];
"1000222" [label="(Identifier,cb)"];
"1000134" [label="(Call,cb = get_callback(s))"];
"1000290" [label="(Call,(int)s->s3->tmp.message_size)"];
"1000194" [label="(Call,SSL_IS_DTLS(s))"];
"1000216" [label="(Literal,0)"];
"1000207" [label="(Call,ret = tls_get_message_header(s, &mt))"];
"1000250" [label="(Call,s->s3->tmp.message_size)"];
"1000260" [label="(Call,ssl3_send_alert(s, SSL3_AL_FATAL, SSL_AD_ILLEGAL_PARAMETER))"];
"1000411" [label="(Identifier,s)"];
"1000406" [label="(ControlStructure,if (SSL_IS_DTLS(s)))"];
"1000237" [label="(Literal,1)"];
"1000270" [label="(Call,!SSL_IS_DTLS(s)\n                    && s->s3->tmp.message_size > 0\n                    && !BUF_MEM_grow_clean(s->init_buf,\n                                           (int)s->s3->tmp.message_size\n                                           + SSL3_HM_HEADER_LENGTH))"];
"1000198" [label="(Identifier,ret)"];
"1000122" [label="(Call,len = 0)"];
"1000244" [label="(Call,ossl_statem_set_error(s))"];
"1000257" [label="(Call,max_message_size(s))"];
"1000326" [label="(Identifier,s)"];
"1000371" [label="(ControlStructure,break;)"];
"1000197" [label="(Call,ret = dtls_get_message(s, &mt, &len))"];
"1000284" [label="(Call,!BUF_MEM_grow_clean(s->init_buf,\n                                           (int)s->s3->tmp.message_size\n                                           + SSL3_HM_HEADER_LENGTH))"];
"1000409" [label="(Block,)"];
"1000231" [label="(Identifier,SSL_CB_ACCEPT_LOOP)"];
"1000214" [label="(Call,ret == 0)"];
"1000249" [label="(Call,s->s3->tmp.message_size > max_message_size(s))"];
"1000229" [label="(Call,cb(s, SSL_CB_ACCEPT_LOOP, 1))"];
"1000285" [label="(Call,BUF_MEM_grow_clean(s->init_buf,\n                                           (int)s->s3->tmp.message_size\n                                           + SSL3_HM_HEADER_LENGTH))"];
"1000327" [label="(Identifier,SSL3_AL_FATAL)"];
"1000289" [label="(Call,(int)s->s3->tmp.message_size\n                                           + SSL3_HM_HEADER_LENGTH)"];
"1000419" [label="(Identifier,SSL_AD_INTERNAL_ERROR)"];
"1000274" [label="(Call,s->s3->tmp.message_size > 0\n                    && !BUF_MEM_grow_clean(s->init_buf,\n                                           (int)s->s3->tmp.message_size\n                                           + SSL3_HM_HEADER_LENGTH))"];
"1000191" [label="(Block,)"];
"1000381" -> "1000191"  [label="AST: "];
"1000381" -> "1000385"  [label="CFG: "];
"1000382" -> "1000381"  [label="AST: "];
"1000385" -> "1000381"  [label="AST: "];
"1000392" -> "1000381"  [label="CFG: "];
"1000381" -> "1000427"  [label="DDG: st->read_state_work"];
"1000381" -> "1000427"  [label="DDG: post_process_message(s, st->read_state_work)"];
"1000385" -> "1000381"  [label="DDG: s"];
"1000385" -> "1000381"  [label="DDG: st->read_state_work"];
"1000381" -> "1000385"  [label="DDG: st->read_state_work"];
"1000385" -> "1000387"  [label="CFG: "];
"1000386" -> "1000385"  [label="AST: "];
"1000387" -> "1000385"  [label="AST: "];
"1000385" -> "1000427"  [label="DDG: s"];
"1000385" -> "1000194"  [label="DDG: s"];
"1000385" -> "1000353"  [label="DDG: s"];
"1000336" -> "1000385"  [label="DDG: s"];
"1000136" -> "1000385"  [label="DDG: s"];
"1000110" -> "1000385"  [label="DDG: s"];
"1000366" -> "1000385"  [label="DDG: st->read_state_work"];
"1000385" -> "1000407"  [label="DDG: s"];
"1000385" -> "1000416"  [label="DDG: s"];
"1000336" -> "1000334"  [label="AST: "];
"1000336" -> "1000338"  [label="CFG: "];
"1000337" -> "1000336"  [label="AST: "];
"1000338" -> "1000336"  [label="AST: "];
"1000334" -> "1000336"  [label="CFG: "];
"1000336" -> "1000427"  [label="DDG: &pkt"];
"1000336" -> "1000427"  [label="DDG: s"];
"1000336" -> "1000194"  [label="DDG: s"];
"1000336" -> "1000317"  [label="DDG: &pkt"];
"1000336" -> "1000334"  [label="DDG: s"];
"1000336" -> "1000334"  [label="DDG: &pkt"];
"1000272" -> "1000336"  [label="DDG: s"];
"1000110" -> "1000336"  [label="DDG: s"];
"1000317" -> "1000336"  [label="DDG: &pkt"];
"1000336" -> "1000353"  [label="DDG: s"];
"1000336" -> "1000407"  [label="DDG: s"];
"1000336" -> "1000416"  [label="DDG: s"];
"1000272" -> "1000271"  [label="AST: "];
"1000272" -> "1000273"  [label="CFG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000271" -> "1000272"  [label="CFG: "];
"1000272" -> "1000271"  [label="DDG: s"];
"1000257" -> "1000272"  [label="DDG: s"];
"1000110" -> "1000272"  [label="DDG: s"];
"1000272" -> "1000301"  [label="DDG: s"];
"1000272" -> "1000325"  [label="DDG: s"];
"1000257" -> "1000249"  [label="AST: "];
"1000257" -> "1000258"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000249" -> "1000257"  [label="CFG: "];
"1000257" -> "1000249"  [label="DDG: s"];
"1000240" -> "1000257"  [label="DDG: s"];
"1000110" -> "1000257"  [label="DDG: s"];
"1000257" -> "1000260"  [label="DDG: s"];
"1000240" -> "1000239"  [label="AST: "];
"1000240" -> "1000242"  [label="CFG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000242" -> "1000240"  [label="AST: "];
"1000239" -> "1000240"  [label="CFG: "];
"1000240" -> "1000427"  [label="DDG: mt"];
"1000240" -> "1000239"  [label="DDG: s"];
"1000240" -> "1000239"  [label="DDG: mt"];
"1000209" -> "1000240"  [label="DDG: s"];
"1000234" -> "1000240"  [label="DDG: s"];
"1000199" -> "1000240"  [label="DDG: s"];
"1000229" -> "1000240"  [label="DDG: s"];
"1000110" -> "1000240"  [label="DDG: s"];
"1000240" -> "1000244"  [label="DDG: s"];
"1000209" -> "1000207"  [label="AST: "];
"1000209" -> "1000211"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000211" -> "1000209"  [label="AST: "];
"1000207" -> "1000209"  [label="CFG: "];
"1000209" -> "1000427"  [label="DDG: s"];
"1000209" -> "1000427"  [label="DDG: &mt"];
"1000209" -> "1000199"  [label="DDG: &mt"];
"1000209" -> "1000207"  [label="DDG: s"];
"1000209" -> "1000207"  [label="DDG: &mt"];
"1000194" -> "1000209"  [label="DDG: s"];
"1000110" -> "1000209"  [label="DDG: s"];
"1000199" -> "1000209"  [label="DDG: &mt"];
"1000209" -> "1000229"  [label="DDG: s"];
"1000209" -> "1000234"  [label="DDG: s"];
"1000194" -> "1000193"  [label="AST: "];
"1000194" -> "1000195"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000198" -> "1000194"  [label="CFG: "];
"1000208" -> "1000194"  [label="CFG: "];
"1000194" -> "1000427"  [label="DDG: SSL_IS_DTLS(s)"];
"1000136" -> "1000194"  [label="DDG: s"];
"1000110" -> "1000194"  [label="DDG: s"];
"1000194" -> "1000199"  [label="DDG: s"];
"1000136" -> "1000134"  [label="AST: "];
"1000136" -> "1000137"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000136" -> "1000427"  [label="DDG: s"];
"1000136" -> "1000134"  [label="DDG: s"];
"1000110" -> "1000136"  [label="DDG: s"];
"1000136" -> "1000353"  [label="DDG: s"];
"1000136" -> "1000407"  [label="DDG: s"];
"1000136" -> "1000416"  [label="DDG: s"];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000427"  [label="DDG: s"];
"1000110" -> "1000199"  [label="DDG: s"];
"1000110" -> "1000229"  [label="DDG: s"];
"1000110" -> "1000234"  [label="DDG: s"];
"1000110" -> "1000244"  [label="DDG: s"];
"1000110" -> "1000260"  [label="DDG: s"];
"1000110" -> "1000301"  [label="DDG: s"];
"1000110" -> "1000325"  [label="DDG: s"];
"1000110" -> "1000353"  [label="DDG: s"];
"1000110" -> "1000356"  [label="DDG: s"];
"1000110" -> "1000407"  [label="DDG: s"];
"1000110" -> "1000410"  [label="DDG: s"];
"1000110" -> "1000416"  [label="DDG: s"];
"1000110" -> "1000423"  [label="DDG: s"];
"1000199" -> "1000197"  [label="AST: "];
"1000199" -> "1000203"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000201" -> "1000199"  [label="AST: "];
"1000203" -> "1000199"  [label="AST: "];
"1000197" -> "1000199"  [label="CFG: "];
"1000199" -> "1000427"  [label="DDG: &mt"];
"1000199" -> "1000427"  [label="DDG: s"];
"1000199" -> "1000427"  [label="DDG: &len"];
"1000199" -> "1000197"  [label="DDG: s"];
"1000199" -> "1000197"  [label="DDG: &mt"];
"1000199" -> "1000197"  [label="DDG: &len"];
"1000199" -> "1000229"  [label="DDG: s"];
"1000199" -> "1000234"  [label="DDG: s"];
"1000234" -> "1000233"  [label="AST: "];
"1000234" -> "1000237"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000236" -> "1000234"  [label="AST: "];
"1000237" -> "1000234"  [label="AST: "];
"1000241" -> "1000234"  [label="CFG: "];
"1000234" -> "1000427"  [label="DDG: SSL_CB_CONNECT_LOOP"];
"1000234" -> "1000427"  [label="DDG: cb(s, SSL_CB_CONNECT_LOOP, 1)"];
"1000229" -> "1000225"  [label="AST: "];
"1000229" -> "1000232"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000231" -> "1000229"  [label="AST: "];
"1000232" -> "1000229"  [label="AST: "];
"1000241" -> "1000229"  [label="CFG: "];
"1000229" -> "1000427"  [label="DDG: cb(s, SSL_CB_ACCEPT_LOOP, 1)"];
"1000229" -> "1000427"  [label="DDG: SSL_CB_ACCEPT_LOOP"];
"1000317" -> "1000316"  [label="AST: "];
"1000317" -> "1000323"  [label="CFG: "];
"1000318" -> "1000317"  [label="AST: "];
"1000320" -> "1000317"  [label="AST: "];
"1000323" -> "1000317"  [label="AST: "];
"1000316" -> "1000317"  [label="CFG: "];
"1000317" -> "1000427"  [label="DDG: &pkt"];
"1000317" -> "1000427"  [label="DDG: len"];
"1000317" -> "1000427"  [label="DDG: s->init_msg"];
"1000317" -> "1000316"  [label="DDG: &pkt"];
"1000317" -> "1000316"  [label="DDG: s->init_msg"];
"1000317" -> "1000316"  [label="DDG: len"];
"1000122" -> "1000317"  [label="DDG: len"];
"1000122" -> "1000111"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000132" -> "1000122"  [label="CFG: "];
"1000122" -> "1000427"  [label="DDG: len"];
"1000366" -> "1000347"  [label="AST: "];
"1000366" -> "1000370"  [label="CFG: "];
"1000367" -> "1000366"  [label="AST: "];
"1000370" -> "1000366"  [label="AST: "];
"1000371" -> "1000366"  [label="CFG: "];
"1000366" -> "1000427"  [label="DDG: WORK_MORE_A"];
"1000366" -> "1000427"  [label="DDG: st->read_state_work"];
"1000197" -> "1000196"  [label="AST: "];
"1000198" -> "1000197"  [label="AST: "];
"1000215" -> "1000197"  [label="CFG: "];
"1000197" -> "1000427"  [label="DDG: dtls_get_message(s, &mt, &len)"];
"1000197" -> "1000214"  [label="DDG: ret"];
"1000214" -> "1000213"  [label="AST: "];
"1000214" -> "1000216"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000216" -> "1000214"  [label="AST: "];
"1000219" -> "1000214"  [label="CFG: "];
"1000222" -> "1000214"  [label="CFG: "];
"1000214" -> "1000427"  [label="DDG: ret == 0"];
"1000214" -> "1000427"  [label="DDG: ret"];
"1000207" -> "1000214"  [label="DDG: ret"];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000207"  [label="AST: "];
"1000215" -> "1000207"  [label="CFG: "];
"1000207" -> "1000427"  [label="DDG: tls_get_message_header(s, &mt)"];
"1000239" -> "1000238"  [label="AST: "];
"1000245" -> "1000239"  [label="CFG: "];
"1000253" -> "1000239"  [label="CFG: "];
"1000239" -> "1000427"  [label="DDG: !transition(s, mt)"];
"1000239" -> "1000427"  [label="DDG: transition(s, mt)"];
"1000244" -> "1000243"  [label="AST: "];
"1000244" -> "1000245"  [label="CFG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000247" -> "1000244"  [label="CFG: "];
"1000244" -> "1000427"  [label="DDG: ossl_statem_set_error(s)"];
"1000244" -> "1000427"  [label="DDG: s"];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000249"  [label="AST: "];
"1000261" -> "1000249"  [label="CFG: "];
"1000273" -> "1000249"  [label="CFG: "];
"1000249" -> "1000427"  [label="DDG: max_message_size(s)"];
"1000249" -> "1000427"  [label="DDG: s->s3->tmp.message_size"];
"1000249" -> "1000427"  [label="DDG: s->s3->tmp.message_size > max_message_size(s)"];
"1000290" -> "1000249"  [label="DDG: s->s3->tmp.message_size"];
"1000275" -> "1000249"  [label="DDG: s->s3->tmp.message_size"];
"1000249" -> "1000275"  [label="DDG: s->s3->tmp.message_size"];
"1000275" -> "1000274"  [label="AST: "];
"1000275" -> "1000283"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000283" -> "1000275"  [label="AST: "];
"1000287" -> "1000275"  [label="CFG: "];
"1000274" -> "1000275"  [label="CFG: "];
"1000275" -> "1000427"  [label="DDG: s->s3->tmp.message_size"];
"1000275" -> "1000274"  [label="DDG: s->s3->tmp.message_size"];
"1000275" -> "1000274"  [label="DDG: 0"];
"1000275" -> "1000290"  [label="DDG: s->s3->tmp.message_size"];
"1000274" -> "1000270"  [label="AST: "];
"1000274" -> "1000284"  [label="CFG: "];
"1000284" -> "1000274"  [label="AST: "];
"1000270" -> "1000274"  [label="CFG: "];
"1000274" -> "1000427"  [label="DDG: !BUF_MEM_grow_clean(s->init_buf,\n                                           (int)s->s3->tmp.message_size\n                                           + SSL3_HM_HEADER_LENGTH)"];
"1000274" -> "1000427"  [label="DDG: s->s3->tmp.message_size > 0"];
"1000274" -> "1000270"  [label="DDG: s->s3->tmp.message_size > 0"];
"1000274" -> "1000270"  [label="DDG: !BUF_MEM_grow_clean(s->init_buf,\n                                           (int)s->s3->tmp.message_size\n                                           + SSL3_HM_HEADER_LENGTH)"];
"1000284" -> "1000274"  [label="DDG: BUF_MEM_grow_clean(s->init_buf,\n                                           (int)s->s3->tmp.message_size\n                                           + SSL3_HM_HEADER_LENGTH)"];
"1000270" -> "1000269"  [label="AST: "];
"1000270" -> "1000271"  [label="CFG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000302" -> "1000270"  [label="CFG: "];
"1000312" -> "1000270"  [label="CFG: "];
"1000270" -> "1000427"  [label="DDG: s->s3->tmp.message_size > 0\n                    && !BUF_MEM_grow_clean(s->init_buf,\n                                           (int)s->s3->tmp.message_size\n                                           + SSL3_HM_HEADER_LENGTH)"];
"1000270" -> "1000427"  [label="DDG: !SSL_IS_DTLS(s)\n                    && s->s3->tmp.message_size > 0\n                    && !BUF_MEM_grow_clean(s->init_buf,\n                                           (int)s->s3->tmp.message_size\n                                           + SSL3_HM_HEADER_LENGTH)"];
"1000270" -> "1000427"  [label="DDG: !SSL_IS_DTLS(s)"];
"1000271" -> "1000270"  [label="DDG: SSL_IS_DTLS(s)"];
"1000290" -> "1000289"  [label="AST: "];
"1000290" -> "1000292"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000292" -> "1000290"  [label="AST: "];
"1000299" -> "1000290"  [label="CFG: "];
"1000290" -> "1000427"  [label="DDG: s->s3->tmp.message_size"];
"1000290" -> "1000285"  [label="DDG: s->s3->tmp.message_size"];
"1000290" -> "1000289"  [label="DDG: s->s3->tmp.message_size"];
"1000285" -> "1000284"  [label="AST: "];
"1000285" -> "1000289"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000289" -> "1000285"  [label="AST: "];
"1000284" -> "1000285"  [label="CFG: "];
"1000285" -> "1000427"  [label="DDG: s->init_buf"];
"1000285" -> "1000427"  [label="DDG: (int)s->s3->tmp.message_size\n                                           + SSL3_HM_HEADER_LENGTH"];
"1000285" -> "1000284"  [label="DDG: s->init_buf"];
"1000285" -> "1000284"  [label="DDG: (int)s->s3->tmp.message_size\n                                           + SSL3_HM_HEADER_LENGTH"];
"1000284" -> "1000427"  [label="DDG: BUF_MEM_grow_clean(s->init_buf,\n                                           (int)s->s3->tmp.message_size\n                                           + SSL3_HM_HEADER_LENGTH)"];
"1000289" -> "1000299"  [label="CFG: "];
"1000299" -> "1000289"  [label="AST: "];
"1000289" -> "1000427"  [label="DDG: (int)s->s3->tmp.message_size"];
"1000289" -> "1000427"  [label="DDG: SSL3_HM_HEADER_LENGTH"];
"1000260" -> "1000259"  [label="AST: "];
"1000260" -> "1000263"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000262" -> "1000260"  [label="AST: "];
"1000263" -> "1000260"  [label="AST: "];
"1000265" -> "1000260"  [label="CFG: "];
"1000260" -> "1000427"  [label="DDG: ssl3_send_alert(s, SSL3_AL_FATAL, SSL_AD_ILLEGAL_PARAMETER)"];
"1000260" -> "1000427"  [label="DDG: SSL_AD_ILLEGAL_PARAMETER"];
"1000260" -> "1000427"  [label="DDG: SSL3_AL_FATAL"];
"1000260" -> "1000427"  [label="DDG: s"];
"1000279" -> "1000271"  [label="CFG: "];
"1000271" -> "1000427"  [label="DDG: SSL_IS_DTLS(s)"];
"1000301" -> "1000300"  [label="AST: "];
"1000301" -> "1000304"  [label="CFG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000303" -> "1000301"  [label="AST: "];
"1000304" -> "1000301"  [label="AST: "];
"1000306" -> "1000301"  [label="CFG: "];
"1000301" -> "1000427"  [label="DDG: SSL_AD_INTERNAL_ERROR"];
"1000301" -> "1000427"  [label="DDG: SSL3_AL_FATAL"];
"1000301" -> "1000427"  [label="DDG: ssl3_send_alert(s, SSL3_AL_FATAL, SSL_AD_INTERNAL_ERROR)"];
"1000301" -> "1000427"  [label="DDG: s"];
"1000325" -> "1000324"  [label="AST: "];
"1000325" -> "1000328"  [label="CFG: "];
"1000326" -> "1000325"  [label="AST: "];
"1000327" -> "1000325"  [label="AST: "];
"1000328" -> "1000325"  [label="AST: "];
"1000330" -> "1000325"  [label="CFG: "];
"1000325" -> "1000427"  [label="DDG: s"];
"1000325" -> "1000427"  [label="DDG: SSL_AD_INTERNAL_ERROR"];
"1000325" -> "1000427"  [label="DDG: ssl3_send_alert(s, SSL3_AL_FATAL, SSL_AD_INTERNAL_ERROR)"];
"1000325" -> "1000427"  [label="DDG: SSL3_AL_FATAL"];
"1000316" -> "1000315"  [label="AST: "];
"1000326" -> "1000316"  [label="CFG: "];
"1000335" -> "1000316"  [label="CFG: "];
"1000316" -> "1000427"  [label="DDG: !PACKET_buf_init(&pkt, s->init_msg, len)"];
"1000316" -> "1000427"  [label="DDG: PACKET_buf_init(&pkt, s->init_msg, len)"];
"1000334" -> "1000191"  [label="AST: "];
"1000335" -> "1000334"  [label="AST: "];
"1000342" -> "1000334"  [label="CFG: "];
"1000334" -> "1000427"  [label="DDG: process_message(s, &pkt)"];
"1000334" -> "1000427"  [label="DDG: ret"];
"1000353" -> "1000352"  [label="AST: "];
"1000353" -> "1000354"  [label="CFG: "];
"1000354" -> "1000353"  [label="AST: "];
"1000357" -> "1000353"  [label="CFG: "];
"1000359" -> "1000353"  [label="CFG: "];
"1000353" -> "1000427"  [label="DDG: SSL_IS_DTLS(s)"];
"1000353" -> "1000427"  [label="DDG: s"];
"1000353" -> "1000356"  [label="DDG: s"];
"1000356" -> "1000355"  [label="AST: "];
"1000356" -> "1000357"  [label="CFG: "];
"1000357" -> "1000356"  [label="AST: "];
"1000359" -> "1000356"  [label="CFG: "];
"1000356" -> "1000427"  [label="DDG: dtls1_stop_timer(s)"];
"1000356" -> "1000427"  [label="DDG: s"];
"1000407" -> "1000406"  [label="AST: "];
"1000407" -> "1000408"  [label="CFG: "];
"1000408" -> "1000407"  [label="AST: "];
"1000411" -> "1000407"  [label="CFG: "];
"1000413" -> "1000407"  [label="CFG: "];
"1000407" -> "1000427"  [label="DDG: SSL_IS_DTLS(s)"];
"1000407" -> "1000427"  [label="DDG: s"];
"1000407" -> "1000410"  [label="DDG: s"];
"1000410" -> "1000409"  [label="AST: "];
"1000410" -> "1000411"  [label="CFG: "];
"1000411" -> "1000410"  [label="AST: "];
"1000413" -> "1000410"  [label="CFG: "];
"1000410" -> "1000427"  [label="DDG: s"];
"1000410" -> "1000427"  [label="DDG: dtls1_stop_timer(s)"];
"1000416" -> "1000191"  [label="AST: "];
"1000416" -> "1000419"  [label="CFG: "];
"1000417" -> "1000416"  [label="AST: "];
"1000418" -> "1000416"  [label="AST: "];
"1000419" -> "1000416"  [label="AST: "];
"1000421" -> "1000416"  [label="CFG: "];
"1000416" -> "1000427"  [label="DDG: ssl3_send_alert(s, SSL3_AL_FATAL, SSL_AD_INTERNAL_ERROR)"];
"1000416" -> "1000427"  [label="DDG: SSL3_AL_FATAL"];
"1000416" -> "1000427"  [label="DDG: SSL_AD_INTERNAL_ERROR"];
"1000416" -> "1000423"  [label="DDG: s"];
"1000423" -> "1000191"  [label="AST: "];
"1000423" -> "1000424"  [label="CFG: "];
"1000424" -> "1000423"  [label="AST: "];
"1000426" -> "1000423"  [label="CFG: "];
"1000423" -> "1000427"  [label="DDG: ossl_statem_set_error(s)"];
"1000423" -> "1000427"  [label="DDG: s"];
}
