digraph "0_openssl_103b171d8fc282ef435f8de9afbf7782e312961f_2@pointer" {
"1000283" [label="(Call,rr->orig_len < mac_size+1)"];
"1000271" [label="(Call,rr->orig_len < mac_size)"];
"1000173" [label="(Call,rr->orig_len=rr->length)"];
"1000153" [label="(Call,rr->length > SSL3_RT_MAX_ENCRYPTED_LENGTH)"];
"1000266" [label="(Call,mac_size <= EVP_MAX_MD_SIZE)"];
"1000259" [label="(Call,mac_size=EVP_MD_CTX_size(s->read_hash))"];
"1000261" [label="(Call,EVP_MD_CTX_size(s->read_hash))"];
"1000248" [label="(Call,EVP_MD_CTX_md(s->read_hash))"];
"1000276" [label="(Call,EVP_CIPHER_CTX_mode(s->enc_read_ctx) == EVP_CIPH_CBC_MODE &&\n\t\t     rr->orig_len < mac_size+1)"];
"1000270" [label="(Call,rr->orig_len < mac_size ||\n\t\t    /* CBC records must have a padding length byte too. */\n\t\t    (EVP_CIPHER_CTX_mode(s->enc_read_ctx) == EVP_CIPH_CBC_MODE &&\n\t\t     rr->orig_len < mac_size+1))"];
"1000283" [label="(Call,rr->orig_len < mac_size+1)"];
"1000173" [label="(Call,rr->orig_len=rr->length)"];
"1000465" [label="(MethodReturn,RET)"];
"1000177" [label="(Call,rr->length)"];
"1000267" [label="(Identifier,mac_size)"];
"1000275" [label="(Identifier,mac_size)"];
"1000280" [label="(Identifier,s)"];
"1000265" [label="(Call,OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE))"];
"1000168" [label="(Identifier,rr)"];
"1000277" [label="(Call,EVP_CIPHER_CTX_mode(s->enc_read_ctx) == EVP_CIPH_CBC_MODE)"];
"1000252" [label="(Identifier,NULL)"];
"1000367" [label="(Call,SSL3_RT_MAX_COMPRESSED_LENGTH+mac_size)"];
"1000309" [label="(Call,ssl3_cbc_copy_mac(mac_tmp, rr, mac_size))"];
"1000152" [label="(ControlStructure,if (rr->length > SSL3_RT_MAX_ENCRYPTED_LENGTH))"];
"1000253" [label="(Block,)"];
"1000247" [label="(Call,EVP_MD_CTX_md(s->read_hash) != NULL)"];
"1000354" [label="(Call,(size_t)mac_size)"];
"1000174" [label="(Call,rr->orig_len)"];
"1000261" [label="(Call,EVP_MD_CTX_size(s->read_hash))"];
"1000292" [label="(Identifier,al)"];
"1000269" [label="(ControlStructure,if (rr->orig_len < mac_size ||\n\t\t    /* CBC records must have a padding length byte too. */\n\t\t    (EVP_CIPHER_CTX_mode(s->enc_read_ctx) == EVP_CIPH_CBC_MODE &&\n\t\t     rr->orig_len < mac_size+1)))"];
"1000266" [label="(Call,mac_size <= EVP_MAX_MD_SIZE)"];
"1000272" [label="(Call,rr->orig_len)"];
"1000157" [label="(Identifier,SSL3_RT_MAX_ENCRYPTED_LENGTH)"];
"1000248" [label="(Call,EVP_MD_CTX_md(s->read_hash))"];
"1000259" [label="(Call,mac_size=EVP_MD_CTX_size(s->read_hash))"];
"1000201" [label="(Call,printf(\"dec %d\n\",rr->length))"];
"1000302" [label="(Identifier,s)"];
"1000363" [label="(Call,rr->length > SSL3_RT_MAX_COMPRESSED_LENGTH+mac_size)"];
"1000249" [label="(Call,s->read_hash)"];
"1000121" [label="(Block,)"];
"1000260" [label="(Identifier,mac_size)"];
"1000284" [label="(Call,rr->orig_len)"];
"1000271" [label="(Call,rr->orig_len < mac_size)"];
"1000153" [label="(Call,rr->length > SSL3_RT_MAX_ENCRYPTED_LENGTH)"];
"1000287" [label="(Call,mac_size+1)"];
"1000268" [label="(Identifier,EVP_MAX_MD_SIZE)"];
"1000154" [label="(Call,rr->length)"];
"1000160" [label="(Identifier,al)"];
"1000262" [label="(Call,s->read_hash)"];
"1000181" [label="(Identifier,enc_err)"];
"1000270" [label="(Call,rr->orig_len < mac_size ||\n\t\t    /* CBC records must have a padding length byte too. */\n\t\t    (EVP_CIPHER_CTX_mode(s->enc_read_ctx) == EVP_CIPH_CBC_MODE &&\n\t\t     rr->orig_len < mac_size+1))"];
"1000276" [label="(Call,EVP_CIPHER_CTX_mode(s->enc_read_ctx) == EVP_CIPH_CBC_MODE &&\n\t\t     rr->orig_len < mac_size+1)"];
"1000320" [label="(Call,rr->length -= mac_size)"];
"1000283" -> "1000276"  [label="AST: "];
"1000283" -> "1000287"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000287" -> "1000283"  [label="AST: "];
"1000276" -> "1000283"  [label="CFG: "];
"1000283" -> "1000465"  [label="DDG: rr->orig_len"];
"1000283" -> "1000465"  [label="DDG: mac_size+1"];
"1000283" -> "1000276"  [label="DDG: rr->orig_len"];
"1000283" -> "1000276"  [label="DDG: mac_size+1"];
"1000271" -> "1000283"  [label="DDG: rr->orig_len"];
"1000271" -> "1000283"  [label="DDG: mac_size"];
"1000271" -> "1000270"  [label="AST: "];
"1000271" -> "1000275"  [label="CFG: "];
"1000272" -> "1000271"  [label="AST: "];
"1000275" -> "1000271"  [label="AST: "];
"1000280" -> "1000271"  [label="CFG: "];
"1000270" -> "1000271"  [label="CFG: "];
"1000271" -> "1000465"  [label="DDG: mac_size"];
"1000271" -> "1000465"  [label="DDG: rr->orig_len"];
"1000271" -> "1000270"  [label="DDG: rr->orig_len"];
"1000271" -> "1000270"  [label="DDG: mac_size"];
"1000173" -> "1000271"  [label="DDG: rr->orig_len"];
"1000266" -> "1000271"  [label="DDG: mac_size"];
"1000271" -> "1000287"  [label="DDG: mac_size"];
"1000271" -> "1000309"  [label="DDG: mac_size"];
"1000271" -> "1000320"  [label="DDG: mac_size"];
"1000271" -> "1000354"  [label="DDG: mac_size"];
"1000271" -> "1000363"  [label="DDG: mac_size"];
"1000271" -> "1000367"  [label="DDG: mac_size"];
"1000173" -> "1000121"  [label="AST: "];
"1000173" -> "1000177"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000177" -> "1000173"  [label="AST: "];
"1000181" -> "1000173"  [label="CFG: "];
"1000173" -> "1000465"  [label="DDG: rr->orig_len"];
"1000153" -> "1000173"  [label="DDG: rr->length"];
"1000153" -> "1000152"  [label="AST: "];
"1000153" -> "1000157"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000157" -> "1000153"  [label="AST: "];
"1000160" -> "1000153"  [label="CFG: "];
"1000168" -> "1000153"  [label="CFG: "];
"1000153" -> "1000465"  [label="DDG: SSL3_RT_MAX_ENCRYPTED_LENGTH"];
"1000153" -> "1000465"  [label="DDG: rr->length > SSL3_RT_MAX_ENCRYPTED_LENGTH"];
"1000153" -> "1000465"  [label="DDG: rr->length"];
"1000153" -> "1000201"  [label="DDG: rr->length"];
"1000266" -> "1000265"  [label="AST: "];
"1000266" -> "1000268"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="AST: "];
"1000265" -> "1000266"  [label="CFG: "];
"1000266" -> "1000465"  [label="DDG: EVP_MAX_MD_SIZE"];
"1000266" -> "1000265"  [label="DDG: mac_size"];
"1000266" -> "1000265"  [label="DDG: EVP_MAX_MD_SIZE"];
"1000259" -> "1000266"  [label="DDG: mac_size"];
"1000259" -> "1000253"  [label="AST: "];
"1000259" -> "1000261"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000259"  [label="AST: "];
"1000267" -> "1000259"  [label="CFG: "];
"1000259" -> "1000465"  [label="DDG: EVP_MD_CTX_size(s->read_hash)"];
"1000261" -> "1000259"  [label="DDG: s->read_hash"];
"1000261" -> "1000262"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000261" -> "1000465"  [label="DDG: s->read_hash"];
"1000248" -> "1000261"  [label="DDG: s->read_hash"];
"1000248" -> "1000247"  [label="AST: "];
"1000248" -> "1000249"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000252" -> "1000248"  [label="CFG: "];
"1000248" -> "1000465"  [label="DDG: s->read_hash"];
"1000248" -> "1000247"  [label="DDG: s->read_hash"];
"1000276" -> "1000270"  [label="AST: "];
"1000276" -> "1000277"  [label="CFG: "];
"1000277" -> "1000276"  [label="AST: "];
"1000270" -> "1000276"  [label="CFG: "];
"1000276" -> "1000465"  [label="DDG: EVP_CIPHER_CTX_mode(s->enc_read_ctx) == EVP_CIPH_CBC_MODE"];
"1000276" -> "1000465"  [label="DDG: rr->orig_len < mac_size+1"];
"1000276" -> "1000270"  [label="DDG: EVP_CIPHER_CTX_mode(s->enc_read_ctx) == EVP_CIPH_CBC_MODE"];
"1000276" -> "1000270"  [label="DDG: rr->orig_len < mac_size+1"];
"1000277" -> "1000276"  [label="DDG: EVP_CIPHER_CTX_mode(s->enc_read_ctx)"];
"1000277" -> "1000276"  [label="DDG: EVP_CIPH_CBC_MODE"];
"1000270" -> "1000269"  [label="AST: "];
"1000292" -> "1000270"  [label="CFG: "];
"1000302" -> "1000270"  [label="CFG: "];
"1000270" -> "1000465"  [label="DDG: EVP_CIPHER_CTX_mode(s->enc_read_ctx) == EVP_CIPH_CBC_MODE &&\n\t\t     rr->orig_len < mac_size+1"];
"1000270" -> "1000465"  [label="DDG: rr->orig_len < mac_size ||\n\t\t    /* CBC records must have a padding length byte too. */\n\t\t    (EVP_CIPHER_CTX_mode(s->enc_read_ctx) == EVP_CIPH_CBC_MODE &&\n\t\t     rr->orig_len < mac_size+1)"];
"1000270" -> "1000465"  [label="DDG: rr->orig_len < mac_size"];
}
