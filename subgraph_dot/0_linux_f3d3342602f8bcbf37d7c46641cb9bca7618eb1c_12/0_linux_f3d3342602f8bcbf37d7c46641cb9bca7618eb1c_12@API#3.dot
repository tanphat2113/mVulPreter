digraph "0_linux_f3d3342602f8bcbf37d7c46641cb9bca7618eb1c_12@API" {
"1000149" [label="(Call,caif_read_lock(sk))"];
"1000114" [label="(Call,*sk = sock->sk)"];
"1000153" [label="(Call,sock_rcvlowat(sk, flags&MSG_WAITALL, size))"];
"1000151" [label="(Call,target = sock_rcvlowat(sk, flags&MSG_WAITALL, size))"];
"1000187" [label="(Call,copied >= target)"];
"1000277" [label="(Call,copied == 0)"];
"1000285" [label="(Call,copied += chunk)"];
"1000161" [label="(Call,sock_rcvtimeo(sk, flags&MSG_DONTWAIT))"];
"1000159" [label="(Call,timeo = sock_rcvtimeo(sk, flags&MSG_DONTWAIT))"];
"1000232" [label="(Call,!timeo)"];
"1000239" [label="(Call,caif_stream_data_wait(sk, timeo))"];
"1000237" [label="(Call,timeo = caif_stream_data_wait(sk, timeo))"];
"1000248" [label="(Call,sock_intr_errno(timeo))"];
"1000246" [label="(Call,err = sock_intr_errno(timeo))"];
"1000251" [label="(Call,caif_read_lock(sk))"];
"1000170" [label="(Call,lock_sock(sk))"];
"1000179" [label="(Call,caif_check_flow_release(sk))"];
"1000193" [label="(Call,sock_error(sk))"];
"1000191" [label="(Call,err = sock_error(sk))"];
"1000221" [label="(Call,sock_flag(sk, SOCK_DEAD))"];
"1000225" [label="(Call,release_sock(sk))"];
"1000235" [label="(Call,caif_read_unlock(sk))"];
"1000324" [label="(Call,caif_read_unlock(sk))"];
"1000255" [label="(Call,release_sock(sk))"];
"1000258" [label="(Call,release_sock(sk))"];
"1000288" [label="(Call,size -= chunk)"];
"1000222" [label="(Identifier,sk)"];
"1000153" [label="(Call,sock_rcvlowat(sk, flags&MSG_WAITALL, size))"];
"1000235" [label="(Call,caif_read_unlock(sk))"];
"1000114" [label="(Call,*sk = sock->sk)"];
"1000236" [label="(Identifier,sk)"];
"1000225" [label="(Call,release_sock(sk))"];
"1000247" [label="(Identifier,err)"];
"1000116" [label="(Call,sock->sk)"];
"1000326" [label="(JumpTarget,out:)"];
"1000171" [label="(Identifier,sk)"];
"1000154" [label="(Identifier,sk)"];
"1000288" [label="(Call,size -= chunk)"];
"1000234" [label="(ControlStructure,break;)"];
"1000240" [label="(Identifier,sk)"];
"1000250" [label="(ControlStructure,goto out;)"];
"1000285" [label="(Call,copied += chunk)"];
"1000232" [label="(Call,!timeo)"];
"1000193" [label="(Call,sock_error(sk))"];
"1000281" [label="(Identifier,copied)"];
"1000277" [label="(Call,copied == 0)"];
"1000255" [label="(Call,release_sock(sk))"];
"1000180" [label="(Identifier,sk)"];
"1000258" [label="(Call,release_sock(sk))"];
"1000228" [label="(Identifier,err)"];
"1000233" [label="(Identifier,timeo)"];
"1000110" [label="(MethodParameterIn,size_t size)"];
"1000278" [label="(Identifier,copied)"];
"1000183" [label="(Identifier,skb)"];
"1000112" [label="(Block,)"];
"1000241" [label="(Identifier,timeo)"];
"1000151" [label="(Call,target = sock_rcvlowat(sk, flags&MSG_WAITALL, size))"];
"1000249" [label="(Identifier,timeo)"];
"1000192" [label="(Identifier,err)"];
"1000187" [label="(Call,copied >= target)"];
"1000173" [label="(Identifier,skb)"];
"1000115" [label="(Identifier,sk)"];
"1000324" [label="(Call,caif_read_unlock(sk))"];
"1000158" [label="(Identifier,size)"];
"1000161" [label="(Call,sock_rcvtimeo(sk, flags&MSG_DONTWAIT))"];
"1000231" [label="(ControlStructure,if (!timeo))"];
"1000194" [label="(Identifier,sk)"];
"1000289" [label="(Identifier,size)"];
"1000284" [label="(ControlStructure,break;)"];
"1000196" [label="(Identifier,err)"];
"1000152" [label="(Identifier,target)"];
"1000185" [label="(Block,)"];
"1000221" [label="(Call,sock_flag(sk, SOCK_DEAD))"];
"1000220" [label="(ControlStructure,if (sock_flag(sk, SOCK_DEAD)))"];
"1000188" [label="(Identifier,copied)"];
"1000259" [label="(Identifier,sk)"];
"1000159" [label="(Call,timeo = sock_rcvtimeo(sk, flags&MSG_DONTWAIT))"];
"1000189" [label="(Identifier,target)"];
"1000162" [label="(Identifier,sk)"];
"1000294" [label="(Identifier,flags)"];
"1000245" [label="(Block,)"];
"1000276" [label="(ControlStructure,if (copied == 0))"];
"1000237" [label="(Call,timeo = caif_stream_data_wait(sk, timeo))"];
"1000279" [label="(Literal,0)"];
"1000150" [label="(Identifier,sk)"];
"1000190" [label="(ControlStructure,goto unlock;)"];
"1000226" [label="(Identifier,sk)"];
"1000191" [label="(Call,err = sock_error(sk))"];
"1000121" [label="(Identifier,copied)"];
"1000149" [label="(Call,caif_read_lock(sk))"];
"1000120" [label="(Call,copied = 0)"];
"1000256" [label="(Identifier,sk)"];
"1000160" [label="(Identifier,timeo)"];
"1000325" [label="(Identifier,sk)"];
"1000224" [label="(ControlStructure,goto unlock;)"];
"1000246" [label="(Call,err = sock_intr_errno(timeo))"];
"1000239" [label="(Call,caif_stream_data_wait(sk, timeo))"];
"1000238" [label="(Identifier,timeo)"];
"1000167" [label="(Block,)"];
"1000253" [label="(ControlStructure,continue;)"];
"1000155" [label="(Call,flags&MSG_WAITALL)"];
"1000290" [label="(Identifier,chunk)"];
"1000186" [label="(ControlStructure,if (copied >= target))"];
"1000261" [label="(Call,memcpy_toiovec(msg->msg_iov, skb->data, chunk))"];
"1000257" [label="(ControlStructure,break;)"];
"1000263" [label="(Identifier,msg)"];
"1000163" [label="(Call,flags&MSG_DONTWAIT)"];
"1000244" [label="(Identifier,current)"];
"1000328" [label="(MethodReturn,static int)"];
"1000252" [label="(Identifier,sk)"];
"1000179" [label="(Call,caif_check_flow_release(sk))"];
"1000223" [label="(Identifier,SOCK_DEAD)"];
"1000170" [label="(Call,lock_sock(sk))"];
"1000287" [label="(Identifier,chunk)"];
"1000251" [label="(Call,caif_read_lock(sk))"];
"1000286" [label="(Identifier,copied)"];
"1000248" [label="(Call,sock_intr_errno(timeo))"];
"1000149" -> "1000112"  [label="AST: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000152" -> "1000149"  [label="CFG: "];
"1000149" -> "1000328"  [label="DDG: caif_read_lock(sk)"];
"1000114" -> "1000149"  [label="DDG: sk"];
"1000149" -> "1000153"  [label="DDG: sk"];
"1000114" -> "1000112"  [label="AST: "];
"1000114" -> "1000116"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000121" -> "1000114"  [label="CFG: "];
"1000114" -> "1000328"  [label="DDG: sk"];
"1000114" -> "1000328"  [label="DDG: sock->sk"];
"1000153" -> "1000151"  [label="AST: "];
"1000153" -> "1000158"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000155" -> "1000153"  [label="AST: "];
"1000158" -> "1000153"  [label="AST: "];
"1000151" -> "1000153"  [label="CFG: "];
"1000153" -> "1000328"  [label="DDG: flags&MSG_WAITALL"];
"1000153" -> "1000328"  [label="DDG: size"];
"1000153" -> "1000151"  [label="DDG: sk"];
"1000153" -> "1000151"  [label="DDG: flags&MSG_WAITALL"];
"1000153" -> "1000151"  [label="DDG: size"];
"1000155" -> "1000153"  [label="DDG: flags"];
"1000155" -> "1000153"  [label="DDG: MSG_WAITALL"];
"1000110" -> "1000153"  [label="DDG: size"];
"1000153" -> "1000161"  [label="DDG: sk"];
"1000153" -> "1000288"  [label="DDG: size"];
"1000151" -> "1000112"  [label="AST: "];
"1000152" -> "1000151"  [label="AST: "];
"1000160" -> "1000151"  [label="CFG: "];
"1000151" -> "1000328"  [label="DDG: target"];
"1000151" -> "1000328"  [label="DDG: sock_rcvlowat(sk, flags&MSG_WAITALL, size)"];
"1000151" -> "1000187"  [label="DDG: target"];
"1000187" -> "1000186"  [label="AST: "];
"1000187" -> "1000189"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000189" -> "1000187"  [label="AST: "];
"1000190" -> "1000187"  [label="CFG: "];
"1000192" -> "1000187"  [label="CFG: "];
"1000187" -> "1000328"  [label="DDG: copied"];
"1000187" -> "1000328"  [label="DDG: copied >= target"];
"1000187" -> "1000328"  [label="DDG: target"];
"1000285" -> "1000187"  [label="DDG: copied"];
"1000120" -> "1000187"  [label="DDG: copied"];
"1000187" -> "1000277"  [label="DDG: copied"];
"1000187" -> "1000285"  [label="DDG: copied"];
"1000277" -> "1000276"  [label="AST: "];
"1000277" -> "1000279"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000277"  [label="AST: "];
"1000281" -> "1000277"  [label="CFG: "];
"1000284" -> "1000277"  [label="CFG: "];
"1000277" -> "1000328"  [label="DDG: copied"];
"1000277" -> "1000328"  [label="DDG: copied == 0"];
"1000285" -> "1000277"  [label="DDG: copied"];
"1000120" -> "1000277"  [label="DDG: copied"];
"1000285" -> "1000167"  [label="AST: "];
"1000285" -> "1000287"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000285"  [label="AST: "];
"1000289" -> "1000285"  [label="CFG: "];
"1000285" -> "1000328"  [label="DDG: copied"];
"1000261" -> "1000285"  [label="DDG: chunk"];
"1000120" -> "1000285"  [label="DDG: copied"];
"1000161" -> "1000159"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000159" -> "1000161"  [label="CFG: "];
"1000161" -> "1000328"  [label="DDG: flags&MSG_DONTWAIT"];
"1000161" -> "1000159"  [label="DDG: sk"];
"1000161" -> "1000159"  [label="DDG: flags&MSG_DONTWAIT"];
"1000163" -> "1000161"  [label="DDG: flags"];
"1000163" -> "1000161"  [label="DDG: MSG_DONTWAIT"];
"1000161" -> "1000170"  [label="DDG: sk"];
"1000159" -> "1000112"  [label="AST: "];
"1000160" -> "1000159"  [label="AST: "];
"1000171" -> "1000159"  [label="CFG: "];
"1000159" -> "1000328"  [label="DDG: timeo"];
"1000159" -> "1000328"  [label="DDG: sock_rcvtimeo(sk, flags&MSG_DONTWAIT)"];
"1000159" -> "1000232"  [label="DDG: timeo"];
"1000232" -> "1000231"  [label="AST: "];
"1000232" -> "1000233"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000234" -> "1000232"  [label="CFG: "];
"1000236" -> "1000232"  [label="CFG: "];
"1000232" -> "1000328"  [label="DDG: timeo"];
"1000232" -> "1000328"  [label="DDG: !timeo"];
"1000237" -> "1000232"  [label="DDG: timeo"];
"1000232" -> "1000239"  [label="DDG: timeo"];
"1000239" -> "1000237"  [label="AST: "];
"1000239" -> "1000241"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="AST: "];
"1000237" -> "1000239"  [label="CFG: "];
"1000239" -> "1000328"  [label="DDG: sk"];
"1000239" -> "1000237"  [label="DDG: sk"];
"1000239" -> "1000237"  [label="DDG: timeo"];
"1000235" -> "1000239"  [label="DDG: sk"];
"1000239" -> "1000251"  [label="DDG: sk"];
"1000237" -> "1000185"  [label="AST: "];
"1000238" -> "1000237"  [label="AST: "];
"1000244" -> "1000237"  [label="CFG: "];
"1000237" -> "1000328"  [label="DDG: caif_stream_data_wait(sk, timeo)"];
"1000237" -> "1000328"  [label="DDG: timeo"];
"1000237" -> "1000248"  [label="DDG: timeo"];
"1000248" -> "1000246"  [label="AST: "];
"1000248" -> "1000249"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000246" -> "1000248"  [label="CFG: "];
"1000248" -> "1000328"  [label="DDG: timeo"];
"1000248" -> "1000246"  [label="DDG: timeo"];
"1000246" -> "1000245"  [label="AST: "];
"1000247" -> "1000246"  [label="AST: "];
"1000250" -> "1000246"  [label="CFG: "];
"1000246" -> "1000328"  [label="DDG: sock_intr_errno(timeo)"];
"1000246" -> "1000328"  [label="DDG: err"];
"1000251" -> "1000185"  [label="AST: "];
"1000251" -> "1000252"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="CFG: "];
"1000251" -> "1000328"  [label="DDG: caif_read_lock(sk)"];
"1000251" -> "1000170"  [label="DDG: sk"];
"1000251" -> "1000324"  [label="DDG: sk"];
"1000170" -> "1000167"  [label="AST: "];
"1000170" -> "1000171"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000173" -> "1000170"  [label="CFG: "];
"1000170" -> "1000328"  [label="DDG: lock_sock(sk)"];
"1000258" -> "1000170"  [label="DDG: sk"];
"1000170" -> "1000179"  [label="DDG: sk"];
"1000179" -> "1000167"  [label="AST: "];
"1000179" -> "1000180"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000183" -> "1000179"  [label="CFG: "];
"1000179" -> "1000328"  [label="DDG: caif_check_flow_release(sk)"];
"1000179" -> "1000193"  [label="DDG: sk"];
"1000179" -> "1000255"  [label="DDG: sk"];
"1000179" -> "1000258"  [label="DDG: sk"];
"1000193" -> "1000191"  [label="AST: "];
"1000193" -> "1000194"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000191" -> "1000193"  [label="CFG: "];
"1000193" -> "1000191"  [label="DDG: sk"];
"1000193" -> "1000221"  [label="DDG: sk"];
"1000193" -> "1000255"  [label="DDG: sk"];
"1000191" -> "1000185"  [label="AST: "];
"1000192" -> "1000191"  [label="AST: "];
"1000196" -> "1000191"  [label="CFG: "];
"1000191" -> "1000328"  [label="DDG: sock_error(sk)"];
"1000191" -> "1000328"  [label="DDG: err"];
"1000221" -> "1000220"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000224" -> "1000221"  [label="CFG: "];
"1000226" -> "1000221"  [label="CFG: "];
"1000221" -> "1000328"  [label="DDG: sock_flag(sk, SOCK_DEAD)"];
"1000221" -> "1000328"  [label="DDG: SOCK_DEAD"];
"1000221" -> "1000225"  [label="DDG: sk"];
"1000221" -> "1000255"  [label="DDG: sk"];
"1000225" -> "1000185"  [label="AST: "];
"1000225" -> "1000226"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000228" -> "1000225"  [label="CFG: "];
"1000225" -> "1000328"  [label="DDG: release_sock(sk)"];
"1000225" -> "1000235"  [label="DDG: sk"];
"1000225" -> "1000324"  [label="DDG: sk"];
"1000235" -> "1000185"  [label="AST: "];
"1000235" -> "1000236"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000238" -> "1000235"  [label="CFG: "];
"1000235" -> "1000328"  [label="DDG: caif_read_unlock(sk)"];
"1000324" -> "1000112"  [label="AST: "];
"1000324" -> "1000325"  [label="CFG: "];
"1000325" -> "1000324"  [label="AST: "];
"1000326" -> "1000324"  [label="CFG: "];
"1000324" -> "1000328"  [label="DDG: caif_read_unlock(sk)"];
"1000324" -> "1000328"  [label="DDG: sk"];
"1000258" -> "1000324"  [label="DDG: sk"];
"1000255" -> "1000324"  [label="DDG: sk"];
"1000255" -> "1000185"  [label="AST: "];
"1000255" -> "1000256"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000257" -> "1000255"  [label="CFG: "];
"1000255" -> "1000328"  [label="DDG: release_sock(sk)"];
"1000258" -> "1000167"  [label="AST: "];
"1000258" -> "1000259"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000263" -> "1000258"  [label="CFG: "];
"1000258" -> "1000328"  [label="DDG: release_sock(sk)"];
"1000288" -> "1000167"  [label="AST: "];
"1000288" -> "1000290"  [label="CFG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000290" -> "1000288"  [label="AST: "];
"1000294" -> "1000288"  [label="CFG: "];
"1000288" -> "1000328"  [label="DDG: chunk"];
"1000288" -> "1000328"  [label="DDG: size"];
"1000261" -> "1000288"  [label="DDG: chunk"];
"1000110" -> "1000288"  [label="DDG: size"];
}
