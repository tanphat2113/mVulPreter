digraph "0_linux_f3d3342602f8bcbf37d7c46641cb9bca7618eb1c_12@API" {
"1000261" [label="(Call,memcpy_toiovec(msg->msg_iov, skb->data, chunk))"];
"1000297" [label="(Call,skb_pull(skb, chunk))"];
"1000182" [label="(Call,skb == NULL)"];
"1000172" [label="(Call,skb = skb_dequeue(&sk->sk_receive_queue))"];
"1000174" [label="(Call,skb_dequeue(&sk->sk_receive_queue))"];
"1000261" [label="(Call,memcpy_toiovec(msg->msg_iov, skb->data, chunk))"];
"1000285" [label="(Call,copied += chunk)"];
"1000187" [label="(Call,copied >= target)"];
"1000277" [label="(Call,copied == 0)"];
"1000288" [label="(Call,size -= chunk)"];
"1000305" [label="(Call,skb_queue_head(&sk->sk_receive_queue, skb))"];
"1000312" [label="(Call,kfree_skb(skb))"];
"1000305" [label="(Call,skb_queue_head(&sk->sk_receive_queue, skb))"];
"1000189" [label="(Identifier,target)"];
"1000110" [label="(MethodParameterIn,size_t size)"];
"1000302" [label="(Identifier,skb)"];
"1000316" [label="(Call,skb_queue_head(&sk->sk_receive_queue, skb))"];
"1000262" [label="(Call,msg->msg_iov)"];
"1000278" [label="(Identifier,copied)"];
"1000297" [label="(Call,skb_pull(skb, chunk))"];
"1000183" [label="(Identifier,skb)"];
"1000261" [label="(Call,memcpy_toiovec(msg->msg_iov, skb->data, chunk))"];
"1000153" [label="(Call,sock_rcvlowat(sk, flags&MSG_WAITALL, size))"];
"1000151" [label="(Call,target = sock_rcvlowat(sk, flags&MSG_WAITALL, size))"];
"1000294" [label="(Identifier,flags)"];
"1000276" [label="(ControlStructure,if (copied == 0))"];
"1000299" [label="(Identifier,chunk)"];
"1000279" [label="(Literal,0)"];
"1000192" [label="(Identifier,err)"];
"1000190" [label="(ControlStructure,goto unlock;)"];
"1000311" [label="(ControlStructure,break;)"];
"1000312" [label="(Call,kfree_skb(skb))"];
"1000328" [label="(MethodReturn,static int)"];
"1000310" [label="(Identifier,skb)"];
"1000288" [label="(Call,size -= chunk)"];
"1000187" [label="(Call,copied >= target)"];
"1000298" [label="(Identifier,skb)"];
"1000120" [label="(Call,copied = 0)"];
"1000173" [label="(Identifier,skb)"];
"1000313" [label="(Identifier,skb)"];
"1000296" [label="(Block,)"];
"1000265" [label="(Call,skb->data)"];
"1000172" [label="(Call,skb = skb_dequeue(&sk->sk_receive_queue))"];
"1000270" [label="(Call,skb_queue_head(&sk->sk_receive_queue, skb))"];
"1000268" [label="(Identifier,chunk)"];
"1000304" [label="(Block,)"];
"1000260" [label="(ControlStructure,if (memcpy_toiovec(msg->msg_iov, skb->data, chunk)))"];
"1000285" [label="(Call,copied += chunk)"];
"1000273" [label="(Identifier,sk)"];
"1000182" [label="(Call,skb == NULL)"];
"1000281" [label="(Identifier,copied)"];
"1000277" [label="(Call,copied == 0)"];
"1000323" [label="(Identifier,size)"];
"1000289" [label="(Identifier,size)"];
"1000180" [label="(Identifier,sk)"];
"1000284" [label="(ControlStructure,break;)"];
"1000181" [label="(ControlStructure,if (skb == NULL))"];
"1000306" [label="(Call,&sk->sk_receive_queue)"];
"1000167" [label="(Block,)"];
"1000174" [label="(Call,skb_dequeue(&sk->sk_receive_queue))"];
"1000175" [label="(Call,&sk->sk_receive_queue)"];
"1000287" [label="(Identifier,chunk)"];
"1000286" [label="(Identifier,copied)"];
"1000290" [label="(Identifier,chunk)"];
"1000259" [label="(Identifier,sk)"];
"1000184" [label="(Identifier,NULL)"];
"1000186" [label="(ControlStructure,if (copied >= target))"];
"1000188" [label="(Identifier,copied)"];
"1000261" -> "1000260"  [label="AST: "];
"1000261" -> "1000268"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000265" -> "1000261"  [label="AST: "];
"1000268" -> "1000261"  [label="AST: "];
"1000273" -> "1000261"  [label="CFG: "];
"1000286" -> "1000261"  [label="CFG: "];
"1000261" -> "1000328"  [label="DDG: skb->data"];
"1000261" -> "1000328"  [label="DDG: chunk"];
"1000261" -> "1000328"  [label="DDG: msg->msg_iov"];
"1000261" -> "1000328"  [label="DDG: memcpy_toiovec(msg->msg_iov, skb->data, chunk)"];
"1000297" -> "1000261"  [label="DDG: chunk"];
"1000261" -> "1000285"  [label="DDG: chunk"];
"1000261" -> "1000288"  [label="DDG: chunk"];
"1000261" -> "1000297"  [label="DDG: chunk"];
"1000297" -> "1000296"  [label="AST: "];
"1000297" -> "1000299"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000299" -> "1000297"  [label="AST: "];
"1000302" -> "1000297"  [label="CFG: "];
"1000297" -> "1000328"  [label="DDG: chunk"];
"1000297" -> "1000328"  [label="DDG: skb_pull(skb, chunk)"];
"1000182" -> "1000297"  [label="DDG: skb"];
"1000297" -> "1000305"  [label="DDG: skb"];
"1000297" -> "1000312"  [label="DDG: skb"];
"1000182" -> "1000181"  [label="AST: "];
"1000182" -> "1000184"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000184" -> "1000182"  [label="AST: "];
"1000188" -> "1000182"  [label="CFG: "];
"1000259" -> "1000182"  [label="CFG: "];
"1000182" -> "1000328"  [label="DDG: skb == NULL"];
"1000182" -> "1000328"  [label="DDG: NULL"];
"1000182" -> "1000328"  [label="DDG: skb"];
"1000172" -> "1000182"  [label="DDG: skb"];
"1000182" -> "1000270"  [label="DDG: skb"];
"1000182" -> "1000316"  [label="DDG: skb"];
"1000172" -> "1000167"  [label="AST: "];
"1000172" -> "1000174"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000174" -> "1000172"  [label="AST: "];
"1000180" -> "1000172"  [label="CFG: "];
"1000172" -> "1000328"  [label="DDG: skb_dequeue(&sk->sk_receive_queue)"];
"1000174" -> "1000172"  [label="DDG: &sk->sk_receive_queue"];
"1000174" -> "1000175"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000174" -> "1000328"  [label="DDG: &sk->sk_receive_queue"];
"1000174" -> "1000270"  [label="DDG: &sk->sk_receive_queue"];
"1000174" -> "1000305"  [label="DDG: &sk->sk_receive_queue"];
"1000174" -> "1000316"  [label="DDG: &sk->sk_receive_queue"];
"1000285" -> "1000167"  [label="AST: "];
"1000285" -> "1000287"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000285"  [label="AST: "];
"1000289" -> "1000285"  [label="CFG: "];
"1000285" -> "1000328"  [label="DDG: copied"];
"1000285" -> "1000187"  [label="DDG: copied"];
"1000285" -> "1000277"  [label="DDG: copied"];
"1000187" -> "1000285"  [label="DDG: copied"];
"1000120" -> "1000285"  [label="DDG: copied"];
"1000187" -> "1000186"  [label="AST: "];
"1000187" -> "1000189"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000189" -> "1000187"  [label="AST: "];
"1000190" -> "1000187"  [label="CFG: "];
"1000192" -> "1000187"  [label="CFG: "];
"1000187" -> "1000328"  [label="DDG: copied"];
"1000187" -> "1000328"  [label="DDG: copied >= target"];
"1000187" -> "1000328"  [label="DDG: target"];
"1000120" -> "1000187"  [label="DDG: copied"];
"1000151" -> "1000187"  [label="DDG: target"];
"1000187" -> "1000277"  [label="DDG: copied"];
"1000277" -> "1000276"  [label="AST: "];
"1000277" -> "1000279"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000277"  [label="AST: "];
"1000281" -> "1000277"  [label="CFG: "];
"1000284" -> "1000277"  [label="CFG: "];
"1000277" -> "1000328"  [label="DDG: copied"];
"1000277" -> "1000328"  [label="DDG: copied == 0"];
"1000120" -> "1000277"  [label="DDG: copied"];
"1000288" -> "1000167"  [label="AST: "];
"1000288" -> "1000290"  [label="CFG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000290" -> "1000288"  [label="AST: "];
"1000294" -> "1000288"  [label="CFG: "];
"1000288" -> "1000328"  [label="DDG: chunk"];
"1000288" -> "1000328"  [label="DDG: size"];
"1000153" -> "1000288"  [label="DDG: size"];
"1000110" -> "1000288"  [label="DDG: size"];
"1000305" -> "1000304"  [label="AST: "];
"1000305" -> "1000310"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000310" -> "1000305"  [label="AST: "];
"1000311" -> "1000305"  [label="CFG: "];
"1000305" -> "1000328"  [label="DDG: skb"];
"1000305" -> "1000328"  [label="DDG: skb_queue_head(&sk->sk_receive_queue, skb)"];
"1000305" -> "1000328"  [label="DDG: &sk->sk_receive_queue"];
"1000312" -> "1000296"  [label="AST: "];
"1000312" -> "1000313"  [label="CFG: "];
"1000313" -> "1000312"  [label="AST: "];
"1000323" -> "1000312"  [label="CFG: "];
"1000312" -> "1000328"  [label="DDG: kfree_skb(skb)"];
"1000312" -> "1000328"  [label="DDG: skb"];
}
