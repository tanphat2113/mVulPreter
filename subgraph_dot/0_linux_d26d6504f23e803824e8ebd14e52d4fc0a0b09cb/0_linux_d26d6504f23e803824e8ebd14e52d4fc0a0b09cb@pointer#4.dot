digraph "0_linux_d26d6504f23e803824e8ebd14e52d4fc0a0b09cb@pointer" {
"1000150" [label="(Call,skb_queue_empty(&sk->sk_receive_queue))"];
"1000144" [label="(Call,sk->sk_state == LLCP_CLOSED &&\n\t    skb_queue_empty(&sk->sk_receive_queue))"];
"1000221" [label="(Call,skb_queue_head(&sk->sk_receive_queue, skb))"];
"1000335" [label="(Call,skb_queue_head(&sk->sk_receive_queue, skb))"];
"1000360" [label="(MethodReturn,static int)"];
"1000144" [label="(Call,sk->sk_state == LLCP_CLOSED &&\n\t    skb_queue_empty(&sk->sk_receive_queue))"];
"1000226" [label="(Identifier,skb)"];
"1000216" [label="(ControlStructure,if (!(flags & MSG_PEEK)))"];
"1000150" [label="(Call,skb_queue_empty(&sk->sk_receive_queue))"];
"1000341" [label="(ControlStructure,goto done;)"];
"1000327" [label="(Call,skb_pull(skb, copied))"];
"1000157" [label="(Identifier,sk)"];
"1000161" [label="(Identifier,sk)"];
"1000178" [label="(Call,!skb)"];
"1000336" [label="(Call,&sk->sk_receive_queue)"];
"1000229" [label="(Identifier,EFAULT)"];
"1000334" [label="(Block,)"];
"1000145" [label="(Call,sk->sk_state == LLCP_CLOSED)"];
"1000340" [label="(Identifier,skb)"];
"1000221" [label="(Call,skb_queue_head(&sk->sk_receive_queue, skb))"];
"1000143" [label="(ControlStructure,if (sk->sk_state == LLCP_CLOSED &&\n\t    skb_queue_empty(&sk->sk_receive_queue)))"];
"1000222" [label="(Call,&sk->sk_receive_queue)"];
"1000151" [label="(Call,&sk->sk_receive_queue)"];
"1000335" [label="(Call,skb_queue_head(&sk->sk_receive_queue, skb))"];
"1000150" -> "1000144"  [label="AST: "];
"1000150" -> "1000151"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000144" -> "1000150"  [label="CFG: "];
"1000150" -> "1000360"  [label="DDG: &sk->sk_receive_queue"];
"1000150" -> "1000144"  [label="DDG: &sk->sk_receive_queue"];
"1000150" -> "1000221"  [label="DDG: &sk->sk_receive_queue"];
"1000150" -> "1000335"  [label="DDG: &sk->sk_receive_queue"];
"1000144" -> "1000143"  [label="AST: "];
"1000144" -> "1000145"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000157" -> "1000144"  [label="CFG: "];
"1000161" -> "1000144"  [label="CFG: "];
"1000144" -> "1000360"  [label="DDG: sk->sk_state == LLCP_CLOSED &&\n\t    skb_queue_empty(&sk->sk_receive_queue)"];
"1000144" -> "1000360"  [label="DDG: sk->sk_state == LLCP_CLOSED"];
"1000144" -> "1000360"  [label="DDG: skb_queue_empty(&sk->sk_receive_queue)"];
"1000145" -> "1000144"  [label="DDG: sk->sk_state"];
"1000145" -> "1000144"  [label="DDG: LLCP_CLOSED"];
"1000221" -> "1000216"  [label="AST: "];
"1000221" -> "1000226"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000226" -> "1000221"  [label="AST: "];
"1000229" -> "1000221"  [label="CFG: "];
"1000221" -> "1000360"  [label="DDG: skb_queue_head(&sk->sk_receive_queue, skb)"];
"1000221" -> "1000360"  [label="DDG: skb"];
"1000221" -> "1000360"  [label="DDG: &sk->sk_receive_queue"];
"1000178" -> "1000221"  [label="DDG: skb"];
"1000335" -> "1000334"  [label="AST: "];
"1000335" -> "1000340"  [label="CFG: "];
"1000336" -> "1000335"  [label="AST: "];
"1000340" -> "1000335"  [label="AST: "];
"1000341" -> "1000335"  [label="CFG: "];
"1000335" -> "1000360"  [label="DDG: &sk->sk_receive_queue"];
"1000335" -> "1000360"  [label="DDG: skb"];
"1000335" -> "1000360"  [label="DDG: skb_queue_head(&sk->sk_receive_queue, skb)"];
"1000327" -> "1000335"  [label="DDG: skb"];
}
