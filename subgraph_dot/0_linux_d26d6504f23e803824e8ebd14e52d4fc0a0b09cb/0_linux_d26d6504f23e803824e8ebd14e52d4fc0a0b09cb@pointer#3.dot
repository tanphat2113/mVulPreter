digraph "0_linux_d26d6504f23e803824e8ebd14e52d4fc0a0b09cb@pointer" {
"1000236" [label="(Call,sk->sk_type == SOCK_DGRAM)"];
"1000235" [label="(Call,sk->sk_type == SOCK_DGRAM && msg->msg_name)"];
"1000253" [label="(Call,(struct sockaddr_nfc_llcp *) msg->msg_name)"];
"1000251" [label="(Call,*sockaddr =\n\t\t\t(struct sockaddr_nfc_llcp *) msg->msg_name)"];
"1000272" [label="(Call,memset(sockaddr, 0, sizeof(*sockaddr)))"];
"1000310" [label="(Call,sk->sk_type == SOCK_STREAM)"];
"1000309" [label="(Call,sk->sk_type == SOCK_STREAM ||\n\t\t    sk->sk_type == SOCK_DGRAM ||\n\t\t    sk->sk_type == SOCK_RAW)"];
"1000316" [label="(Call,sk->sk_type == SOCK_DGRAM)"];
"1000315" [label="(Call,sk->sk_type == SOCK_DGRAM ||\n\t\t    sk->sk_type == SOCK_RAW)"];
"1000321" [label="(Call,sk->sk_type == SOCK_RAW)"];
"1000347" [label="(Call,sk->sk_type == SOCK_SEQPACKET)"];
"1000346" [label="(Call,sk->sk_type == SOCK_SEQPACKET && (flags & MSG_TRUNC))"];
"1000346" [label="(Call,sk->sk_type == SOCK_SEQPACKET && (flags & MSG_TRUNC))"];
"1000316" [label="(Call,sk->sk_type == SOCK_DGRAM)"];
"1000260" [label="(Identifier,msg)"];
"1000241" [label="(Call,msg->msg_name)"];
"1000273" [label="(Identifier,sockaddr)"];
"1000311" [label="(Call,sk->sk_type)"];
"1000275" [label="(Call,sizeof(*sockaddr))"];
"1000328" [label="(Identifier,skb)"];
"1000343" [label="(Identifier,skb)"];
"1000242" [label="(Identifier,msg)"];
"1000323" [label="(Identifier,sk)"];
"1000345" [label="(ControlStructure,if (sk->sk_type == SOCK_SEQPACKET && (flags & MSG_TRUNC)))"];
"1000310" [label="(Call,sk->sk_type == SOCK_STREAM)"];
"1000237" [label="(Call,sk->sk_type)"];
"1000280" [label="(Identifier,sockaddr)"];
"1000251" [label="(Call,*sockaddr =\n\t\t\t(struct sockaddr_nfc_llcp *) msg->msg_name)"];
"1000235" [label="(Call,sk->sk_type == SOCK_DGRAM && msg->msg_name)"];
"1000321" [label="(Call,sk->sk_type == SOCK_RAW)"];
"1000274" [label="(Literal,0)"];
"1000318" [label="(Identifier,sk)"];
"1000347" [label="(Call,sk->sk_type == SOCK_SEQPACKET)"];
"1000314" [label="(Identifier,SOCK_STREAM)"];
"1000322" [label="(Call,sk->sk_type)"];
"1000325" [label="(Identifier,SOCK_RAW)"];
"1000252" [label="(Identifier,sockaddr)"];
"1000348" [label="(Call,sk->sk_type)"];
"1000315" [label="(Call,sk->sk_type == SOCK_DGRAM ||\n\t\t    sk->sk_type == SOCK_RAW)"];
"1000352" [label="(Call,flags & MSG_TRUNC)"];
"1000244" [label="(Block,)"];
"1000253" [label="(Call,(struct sockaddr_nfc_llcp *) msg->msg_name)"];
"1000236" [label="(Call,sk->sk_type == SOCK_DGRAM)"];
"1000240" [label="(Identifier,SOCK_DGRAM)"];
"1000351" [label="(Identifier,SOCK_SEQPACKET)"];
"1000360" [label="(MethodReturn,static int)"];
"1000308" [label="(ControlStructure,if (sk->sk_type == SOCK_STREAM ||\n\t\t    sk->sk_type == SOCK_DGRAM ||\n\t\t    sk->sk_type == SOCK_RAW))"];
"1000359" [label="(Identifier,copied)"];
"1000305" [label="(Identifier,flags)"];
"1000247" [label="(Identifier,ui_cb)"];
"1000353" [label="(Identifier,flags)"];
"1000309" [label="(Call,sk->sk_type == SOCK_STREAM ||\n\t\t    sk->sk_type == SOCK_DGRAM ||\n\t\t    sk->sk_type == SOCK_RAW)"];
"1000234" [label="(ControlStructure,if (sk->sk_type == SOCK_DGRAM && msg->msg_name))"];
"1000317" [label="(Call,sk->sk_type)"];
"1000320" [label="(Identifier,SOCK_DGRAM)"];
"1000255" [label="(Call,msg->msg_name)"];
"1000356" [label="(Identifier,copied)"];
"1000272" [label="(Call,memset(sockaddr, 0, sizeof(*sockaddr)))"];
"1000236" -> "1000235"  [label="AST: "];
"1000236" -> "1000240"  [label="CFG: "];
"1000237" -> "1000236"  [label="AST: "];
"1000240" -> "1000236"  [label="AST: "];
"1000242" -> "1000236"  [label="CFG: "];
"1000235" -> "1000236"  [label="CFG: "];
"1000236" -> "1000360"  [label="DDG: SOCK_DGRAM"];
"1000236" -> "1000235"  [label="DDG: sk->sk_type"];
"1000236" -> "1000235"  [label="DDG: SOCK_DGRAM"];
"1000236" -> "1000310"  [label="DDG: sk->sk_type"];
"1000236" -> "1000316"  [label="DDG: SOCK_DGRAM"];
"1000236" -> "1000347"  [label="DDG: sk->sk_type"];
"1000235" -> "1000234"  [label="AST: "];
"1000235" -> "1000241"  [label="CFG: "];
"1000241" -> "1000235"  [label="AST: "];
"1000247" -> "1000235"  [label="CFG: "];
"1000305" -> "1000235"  [label="CFG: "];
"1000235" -> "1000360"  [label="DDG: sk->sk_type == SOCK_DGRAM"];
"1000235" -> "1000360"  [label="DDG: sk->sk_type == SOCK_DGRAM && msg->msg_name"];
"1000235" -> "1000360"  [label="DDG: msg->msg_name"];
"1000235" -> "1000253"  [label="DDG: msg->msg_name"];
"1000253" -> "1000251"  [label="AST: "];
"1000253" -> "1000255"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000255" -> "1000253"  [label="AST: "];
"1000251" -> "1000253"  [label="CFG: "];
"1000253" -> "1000360"  [label="DDG: msg->msg_name"];
"1000253" -> "1000251"  [label="DDG: msg->msg_name"];
"1000251" -> "1000244"  [label="AST: "];
"1000252" -> "1000251"  [label="AST: "];
"1000260" -> "1000251"  [label="CFG: "];
"1000251" -> "1000360"  [label="DDG: (struct sockaddr_nfc_llcp *) msg->msg_name"];
"1000251" -> "1000272"  [label="DDG: sockaddr"];
"1000272" -> "1000244"  [label="AST: "];
"1000272" -> "1000275"  [label="CFG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000274" -> "1000272"  [label="AST: "];
"1000275" -> "1000272"  [label="AST: "];
"1000280" -> "1000272"  [label="CFG: "];
"1000272" -> "1000360"  [label="DDG: sockaddr"];
"1000272" -> "1000360"  [label="DDG: memset(sockaddr, 0, sizeof(*sockaddr))"];
"1000310" -> "1000309"  [label="AST: "];
"1000310" -> "1000314"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000314" -> "1000310"  [label="AST: "];
"1000318" -> "1000310"  [label="CFG: "];
"1000309" -> "1000310"  [label="CFG: "];
"1000310" -> "1000360"  [label="DDG: SOCK_STREAM"];
"1000310" -> "1000309"  [label="DDG: sk->sk_type"];
"1000310" -> "1000309"  [label="DDG: SOCK_STREAM"];
"1000310" -> "1000316"  [label="DDG: sk->sk_type"];
"1000310" -> "1000347"  [label="DDG: sk->sk_type"];
"1000309" -> "1000308"  [label="AST: "];
"1000309" -> "1000315"  [label="CFG: "];
"1000315" -> "1000309"  [label="AST: "];
"1000328" -> "1000309"  [label="CFG: "];
"1000343" -> "1000309"  [label="CFG: "];
"1000309" -> "1000360"  [label="DDG: sk->sk_type == SOCK_STREAM"];
"1000309" -> "1000360"  [label="DDG: sk->sk_type == SOCK_STREAM ||\n\t\t    sk->sk_type == SOCK_DGRAM ||\n\t\t    sk->sk_type == SOCK_RAW"];
"1000309" -> "1000360"  [label="DDG: sk->sk_type == SOCK_DGRAM ||\n\t\t    sk->sk_type == SOCK_RAW"];
"1000315" -> "1000309"  [label="DDG: sk->sk_type == SOCK_DGRAM"];
"1000315" -> "1000309"  [label="DDG: sk->sk_type == SOCK_RAW"];
"1000316" -> "1000315"  [label="AST: "];
"1000316" -> "1000320"  [label="CFG: "];
"1000317" -> "1000316"  [label="AST: "];
"1000320" -> "1000316"  [label="AST: "];
"1000323" -> "1000316"  [label="CFG: "];
"1000315" -> "1000316"  [label="CFG: "];
"1000316" -> "1000360"  [label="DDG: SOCK_DGRAM"];
"1000316" -> "1000315"  [label="DDG: sk->sk_type"];
"1000316" -> "1000315"  [label="DDG: SOCK_DGRAM"];
"1000316" -> "1000321"  [label="DDG: sk->sk_type"];
"1000316" -> "1000347"  [label="DDG: sk->sk_type"];
"1000315" -> "1000321"  [label="CFG: "];
"1000321" -> "1000315"  [label="AST: "];
"1000315" -> "1000360"  [label="DDG: sk->sk_type == SOCK_DGRAM"];
"1000315" -> "1000360"  [label="DDG: sk->sk_type == SOCK_RAW"];
"1000321" -> "1000315"  [label="DDG: sk->sk_type"];
"1000321" -> "1000315"  [label="DDG: SOCK_RAW"];
"1000321" -> "1000325"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000325" -> "1000321"  [label="AST: "];
"1000321" -> "1000360"  [label="DDG: SOCK_RAW"];
"1000321" -> "1000347"  [label="DDG: sk->sk_type"];
"1000347" -> "1000346"  [label="AST: "];
"1000347" -> "1000351"  [label="CFG: "];
"1000348" -> "1000347"  [label="AST: "];
"1000351" -> "1000347"  [label="AST: "];
"1000353" -> "1000347"  [label="CFG: "];
"1000346" -> "1000347"  [label="CFG: "];
"1000347" -> "1000360"  [label="DDG: SOCK_SEQPACKET"];
"1000347" -> "1000360"  [label="DDG: sk->sk_type"];
"1000347" -> "1000346"  [label="DDG: sk->sk_type"];
"1000347" -> "1000346"  [label="DDG: SOCK_SEQPACKET"];
"1000346" -> "1000345"  [label="AST: "];
"1000346" -> "1000352"  [label="CFG: "];
"1000352" -> "1000346"  [label="AST: "];
"1000356" -> "1000346"  [label="CFG: "];
"1000359" -> "1000346"  [label="CFG: "];
"1000346" -> "1000360"  [label="DDG: sk->sk_type == SOCK_SEQPACKET"];
"1000346" -> "1000360"  [label="DDG: flags & MSG_TRUNC"];
"1000346" -> "1000360"  [label="DDG: sk->sk_type == SOCK_SEQPACKET && (flags & MSG_TRUNC)"];
"1000352" -> "1000346"  [label="DDG: flags"];
"1000352" -> "1000346"  [label="DDG: MSG_TRUNC"];
}
