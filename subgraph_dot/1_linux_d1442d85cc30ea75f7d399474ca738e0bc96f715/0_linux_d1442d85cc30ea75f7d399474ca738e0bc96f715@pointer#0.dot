digraph "0_linux_d1442d85cc30ea75f7d399474ca738e0bc96f715@pointer" {
"1000117" [label="(MethodParameterIn,struct x86_emulate_ctxt *ctxt)"];
"1000162" [label="(Call,ctxt->ops->get_segment(ctxt, &dummy, &seg_desc, NULL, seg))"];
"1000170" [label="(Call,set_desc_base(&seg_desc, selector << 4))"];
"1000546" [label="(Call,ctxt->ops->set_segment(ctxt, selector, &seg_desc, base3, seg))"];
"1000266" [label="(Call,read_segment_descriptor(ctxt, selector, &seg_desc, &desc_addr))"];
"1000264" [label="(Call,ret = read_segment_descriptor(ctxt, selector, &seg_desc, &desc_addr))"];
"1000274" [label="(Call,ret != X86EMUL_CONTINUE)"];
"1000277" [label="(Return,return ret;)"];
"1000447" [label="(Call,ret != X86EMUL_CONTINUE)"];
"1000450" [label="(Return,return ret;)"];
"1000511" [label="(Call,ret != X86EMUL_CONTINUE)"];
"1000514" [label="(Return,return ret;)"];
"1000553" [label="(Return,return X86EMUL_CONTINUE;)"];
"1000540" [label="(Call,ret != X86EMUL_CONTINUE)"];
"1000543" [label="(Return,return ret;)"];
"1000281" [label="(Call,selector & 0xfffc)"];
"1000279" [label="(Call,err_code = selector & 0xfffc)"];
"1000557" [label="(Call,emulate_exception(ctxt, err_vec, err_code, true))"];
"1000556" [label="(Return,return emulate_exception(ctxt, err_vec, err_code, true);)"];
"1000400" [label="(Call,selector & 0xfffc)"];
"1000399" [label="(Call,(selector & 0xfffc) | cpl)"];
"1000397" [label="(Call,selector = (selector & 0xfffc) | cpl)"];
"1000505" [label="(Call,write_segment_descriptor(ctxt, selector, &seg_desc))"];
"1000503" [label="(Call,ret = write_segment_descriptor(ctxt, selector, &seg_desc))"];
"1000387" [label="(Call,ctxt->ops->get_msr(ctxt, MSR_EFER, &efer))"];
"1000526" [label="(Call,ctxt->ops->read_std(ctxt, desc_addr+8, &base3,\n\t\t\t\tsizeof(base3), &ctxt->exception))"];
"1000524" [label="(Call,ret = ctxt->ops->read_std(ctxt, desc_addr+8, &base3,\n\t\t\t\tsizeof(base3), &ctxt->exception))"];
"1000433" [label="(Call,ctxt->ops->cmpxchg_emulated(ctxt, desc_addr, &old_desc, &seg_desc,\n\t\t\t\t\t\t  sizeof(seg_desc), &ctxt->exception))"];
"1000431" [label="(Call,ret = ctxt->ops->cmpxchg_emulated(ctxt, desc_addr, &old_desc, &seg_desc,\n\t\t\t\t\t\t  sizeof(seg_desc), &ctxt->exception))"];
"1000528" [label="(Call,desc_addr+8)"];
"1000432" [label="(Identifier,ret)"];
"1000120" [label="(MethodParameterIn,u8 cpl)"];
"1000433" [label="(Call,ctxt->ops->cmpxchg_emulated(ctxt, desc_addr, &old_desc, &seg_desc,\n\t\t\t\t\t\t  sizeof(seg_desc), &ctxt->exception))"];
"1000171" [label="(Call,&seg_desc)"];
"1000162" [label="(Call,ctxt->ops->get_segment(ctxt, &dummy, &seg_desc, NULL, seg))"];
"1000387" [label="(Call,ctxt->ops->get_msr(ctxt, MSR_EFER, &efer))"];
"1000277" [label="(Return,return ret;)"];
"1000401" [label="(Identifier,selector)"];
"1000400" [label="(Call,selector & 0xfffc)"];
"1000440" [label="(Call,sizeof(seg_desc))"];
"1000532" [label="(Identifier,base3)"];
"1000269" [label="(Call,&seg_desc)"];
"1000448" [label="(Identifier,ret)"];
"1000551" [label="(Identifier,base3)"];
"1000541" [label="(Identifier,ret)"];
"1000431" [label="(Call,ret = ctxt->ops->cmpxchg_emulated(ctxt, desc_addr, &old_desc, &seg_desc,\n\t\t\t\t\t\t  sizeof(seg_desc), &ctxt->exception))"];
"1000255" [label="(Call,selector & (1 << 2))"];
"1000507" [label="(Identifier,selector)"];
"1000528" [label="(Call,desc_addr+8)"];
"1000531" [label="(Call,&base3)"];
"1000390" [label="(Call,&efer)"];
"1000561" [label="(Identifier,true)"];
"1000523" [label="(Block,)"];
"1000267" [label="(Identifier,ctxt)"];
"1000545" [label="(JumpTarget,load:)"];
"1000434" [label="(Identifier,ctxt)"];
"1000527" [label="(Identifier,ctxt)"];
"1000172" [label="(Identifier,seg_desc)"];
"1000556" [label="(Return,return emulate_exception(ctxt, err_vec, err_code, true);)"];
"1000382" [label="(Block,)"];
"1000117" [label="(MethodParameterIn,struct x86_emulate_ctxt *ctxt)"];
"1000281" [label="(Call,selector & 0xfffc)"];
"1000168" [label="(Identifier,NULL)"];
"1000274" [label="(Call,ret != X86EMUL_CONTINUE)"];
"1000508" [label="(Call,&seg_desc)"];
"1000452" [label="(ControlStructure,break;)"];
"1000176" [label="(ControlStructure,goto load;)"];
"1000146" [label="(Call,base3 = 0)"];
"1000273" [label="(ControlStructure,if (ret != X86EMUL_CONTINUE))"];
"1000435" [label="(Identifier,desc_addr)"];
"1000268" [label="(Identifier,selector)"];
"1000450" [label="(Return,return ret;)"];
"1000449" [label="(Identifier,X86EMUL_CONTINUE)"];
"1000306" [label="(Call,err_vec = (seg == VCPU_SREG_SS) ? SS_VECTOR : NP_VECTOR)"];
"1000122" [label="(Block,)"];
"1000525" [label="(Identifier,ret)"];
"1000543" [label="(Return,return ret;)"];
"1000552" [label="(Identifier,seg)"];
"1000513" [label="(Identifier,X86EMUL_CONTINUE)"];
"1000548" [label="(Identifier,selector)"];
"1000292" [label="(Call,seg <= VCPU_SREG_GS)"];
"1000266" [label="(Call,read_segment_descriptor(ctxt, selector, &seg_desc, &desc_addr))"];
"1000529" [label="(Identifier,desc_addr)"];
"1000275" [label="(Identifier,ret)"];
"1000544" [label="(Identifier,ret)"];
"1000535" [label="(Call,&ctxt->exception)"];
"1000170" [label="(Call,set_desc_base(&seg_desc, selector << 4))"];
"1000161" [label="(Block,)"];
"1000284" [label="(Call,err_vec = in_task_switch ? TS_VECTOR : GP_VECTOR)"];
"1000402" [label="(Literal,0xfffc)"];
"1000367" [label="(Call,rpl > cpl)"];
"1000526" [label="(Call,ctxt->ops->read_std(ctxt, desc_addr+8, &base3,\n\t\t\t\tsizeof(base3), &ctxt->exception))"];
"1000166" [label="(Call,&seg_desc)"];
"1000546" [label="(Call,ctxt->ops->set_segment(ctxt, selector, &seg_desc, base3, seg))"];
"1000359" [label="(Call,dpl > cpl)"];
"1000173" [label="(Call,selector << 4)"];
"1000128" [label="(Call,err_vec = GP_VECTOR)"];
"1000222" [label="(Call,selector & 3)"];
"1000511" [label="(Call,ret != X86EMUL_CONTINUE)"];
"1000322" [label="(Block,)"];
"1000169" [label="(Identifier,seg)"];
"1000505" [label="(Call,write_segment_descriptor(ctxt, selector, &seg_desc))"];
"1000515" [label="(Identifier,ret)"];
"1000280" [label="(Identifier,err_code)"];
"1000558" [label="(Identifier,ctxt)"];
"1000514" [label="(Return,return ret;)"];
"1000559" [label="(Identifier,err_vec)"];
"1000447" [label="(Call,ret != X86EMUL_CONTINUE)"];
"1000399" [label="(Call,(selector & 0xfffc) | cpl)"];
"1000436" [label="(Call,&old_desc)"];
"1000554" [label="(Identifier,X86EMUL_CONTINUE)"];
"1000389" [label="(Identifier,MSR_EFER)"];
"1000252" [label="(Call,seg == VCPU_SREG_TR)"];
"1000265" [label="(Identifier,ret)"];
"1000283" [label="(Literal,0xfffc)"];
"1000504" [label="(Identifier,ret)"];
"1000394" [label="(Identifier,efer)"];
"1000451" [label="(Identifier,ret)"];
"1000164" [label="(Call,&dummy)"];
"1000446" [label="(ControlStructure,if (ret != X86EMUL_CONTINUE))"];
"1000370" [label="(Call,dpl != cpl)"];
"1000542" [label="(Identifier,X86EMUL_CONTINUE)"];
"1000192" [label="(Call,selector << 4)"];
"1000195" [label="(Call,set_desc_limit(&seg_desc, 0xffff))"];
"1000438" [label="(Call,&seg_desc)"];
"1000510" [label="(ControlStructure,if (ret != X86EMUL_CONTINUE))"];
"1000512" [label="(Identifier,ret)"];
"1000557" [label="(Call,emulate_exception(ctxt, err_vec, err_code, true))"];
"1000553" [label="(Return,return X86EMUL_CONTINUE;)"];
"1000533" [label="(Call,sizeof(base3))"];
"1000497" [label="(Block,)"];
"1000132" [label="(Call,err_code = 0)"];
"1000397" [label="(Call,selector = (selector & 0xfffc) | cpl)"];
"1000562" [label="(MethodReturn,static int)"];
"1000278" [label="(Identifier,ret)"];
"1000549" [label="(Call,&seg_desc)"];
"1000540" [label="(Call,ret != X86EMUL_CONTINUE)"];
"1000398" [label="(Identifier,selector)"];
"1000524" [label="(Call,ret = ctxt->ops->read_std(ctxt, desc_addr+8, &base3,\n\t\t\t\tsizeof(base3), &ctxt->exception))"];
"1000279" [label="(Call,err_code = selector & 0xfffc)"];
"1000271" [label="(Call,&desc_addr)"];
"1000530" [label="(Literal,8)"];
"1000285" [label="(Identifier,err_vec)"];
"1000539" [label="(ControlStructure,if (ret != X86EMUL_CONTINUE))"];
"1000403" [label="(Identifier,cpl)"];
"1000404" [label="(ControlStructure,break;)"];
"1000149" [label="(Call,memset(&seg_desc, 0, sizeof seg_desc))"];
"1000180" [label="(Call,seg <= VCPU_SREG_GS)"];
"1000442" [label="(Call,&ctxt->exception)"];
"1000276" [label="(Identifier,X86EMUL_CONTINUE)"];
"1000118" [label="(MethodParameterIn,u16 selector)"];
"1000119" [label="(MethodParameterIn,int seg)"];
"1000506" [label="(Identifier,ctxt)"];
"1000282" [label="(Identifier,selector)"];
"1000388" [label="(Identifier,ctxt)"];
"1000163" [label="(Identifier,ctxt)"];
"1000264" [label="(Call,ret = read_segment_descriptor(ctxt, selector, &seg_desc, &desc_addr))"];
"1000560" [label="(Identifier,err_code)"];
"1000503" [label="(Call,ret = write_segment_descriptor(ctxt, selector, &seg_desc))"];
"1000547" [label="(Identifier,ctxt)"];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1000562"  [label="DDG: ctxt"];
"1000117" -> "1000162"  [label="DDG: ctxt"];
"1000117" -> "1000266"  [label="DDG: ctxt"];
"1000117" -> "1000387"  [label="DDG: ctxt"];
"1000117" -> "1000433"  [label="DDG: ctxt"];
"1000117" -> "1000505"  [label="DDG: ctxt"];
"1000117" -> "1000526"  [label="DDG: ctxt"];
"1000117" -> "1000546"  [label="DDG: ctxt"];
"1000117" -> "1000557"  [label="DDG: ctxt"];
"1000162" -> "1000161"  [label="AST: "];
"1000162" -> "1000169"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000164" -> "1000162"  [label="AST: "];
"1000166" -> "1000162"  [label="AST: "];
"1000168" -> "1000162"  [label="AST: "];
"1000169" -> "1000162"  [label="AST: "];
"1000172" -> "1000162"  [label="CFG: "];
"1000162" -> "1000562"  [label="DDG: NULL"];
"1000162" -> "1000562"  [label="DDG: &dummy"];
"1000162" -> "1000562"  [label="DDG: ctxt->ops->get_segment(ctxt, &dummy, &seg_desc, NULL, seg)"];
"1000149" -> "1000162"  [label="DDG: &seg_desc"];
"1000119" -> "1000162"  [label="DDG: seg"];
"1000162" -> "1000170"  [label="DDG: &seg_desc"];
"1000162" -> "1000546"  [label="DDG: ctxt"];
"1000162" -> "1000546"  [label="DDG: seg"];
"1000170" -> "1000161"  [label="AST: "];
"1000170" -> "1000173"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000173" -> "1000170"  [label="AST: "];
"1000176" -> "1000170"  [label="CFG: "];
"1000170" -> "1000562"  [label="DDG: selector << 4"];
"1000170" -> "1000562"  [label="DDG: set_desc_base(&seg_desc, selector << 4)"];
"1000173" -> "1000170"  [label="DDG: selector"];
"1000173" -> "1000170"  [label="DDG: 4"];
"1000170" -> "1000546"  [label="DDG: &seg_desc"];
"1000546" -> "1000122"  [label="AST: "];
"1000546" -> "1000552"  [label="CFG: "];
"1000547" -> "1000546"  [label="AST: "];
"1000548" -> "1000546"  [label="AST: "];
"1000549" -> "1000546"  [label="AST: "];
"1000551" -> "1000546"  [label="AST: "];
"1000552" -> "1000546"  [label="AST: "];
"1000554" -> "1000546"  [label="CFG: "];
"1000546" -> "1000562"  [label="DDG: selector"];
"1000546" -> "1000562"  [label="DDG: ctxt->ops->set_segment(ctxt, selector, &seg_desc, base3, seg)"];
"1000546" -> "1000562"  [label="DDG: base3"];
"1000546" -> "1000562"  [label="DDG: ctxt"];
"1000546" -> "1000562"  [label="DDG: &seg_desc"];
"1000546" -> "1000562"  [label="DDG: seg"];
"1000505" -> "1000546"  [label="DDG: ctxt"];
"1000505" -> "1000546"  [label="DDG: selector"];
"1000505" -> "1000546"  [label="DDG: &seg_desc"];
"1000433" -> "1000546"  [label="DDG: ctxt"];
"1000433" -> "1000546"  [label="DDG: &seg_desc"];
"1000266" -> "1000546"  [label="DDG: ctxt"];
"1000266" -> "1000546"  [label="DDG: &seg_desc"];
"1000387" -> "1000546"  [label="DDG: ctxt"];
"1000526" -> "1000546"  [label="DDG: ctxt"];
"1000397" -> "1000546"  [label="DDG: selector"];
"1000192" -> "1000546"  [label="DDG: selector"];
"1000255" -> "1000546"  [label="DDG: selector"];
"1000173" -> "1000546"  [label="DDG: selector"];
"1000222" -> "1000546"  [label="DDG: selector"];
"1000281" -> "1000546"  [label="DDG: selector"];
"1000118" -> "1000546"  [label="DDG: selector"];
"1000149" -> "1000546"  [label="DDG: &seg_desc"];
"1000195" -> "1000546"  [label="DDG: &seg_desc"];
"1000146" -> "1000546"  [label="DDG: base3"];
"1000292" -> "1000546"  [label="DDG: seg"];
"1000180" -> "1000546"  [label="DDG: seg"];
"1000252" -> "1000546"  [label="DDG: seg"];
"1000119" -> "1000546"  [label="DDG: seg"];
"1000266" -> "1000264"  [label="AST: "];
"1000266" -> "1000271"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="AST: "];
"1000269" -> "1000266"  [label="AST: "];
"1000271" -> "1000266"  [label="AST: "];
"1000264" -> "1000266"  [label="CFG: "];
"1000266" -> "1000562"  [label="DDG: &seg_desc"];
"1000266" -> "1000562"  [label="DDG: ctxt"];
"1000266" -> "1000562"  [label="DDG: selector"];
"1000266" -> "1000562"  [label="DDG: &desc_addr"];
"1000266" -> "1000264"  [label="DDG: ctxt"];
"1000266" -> "1000264"  [label="DDG: selector"];
"1000266" -> "1000264"  [label="DDG: &seg_desc"];
"1000266" -> "1000264"  [label="DDG: &desc_addr"];
"1000222" -> "1000266"  [label="DDG: selector"];
"1000255" -> "1000266"  [label="DDG: selector"];
"1000118" -> "1000266"  [label="DDG: selector"];
"1000149" -> "1000266"  [label="DDG: &seg_desc"];
"1000266" -> "1000281"  [label="DDG: selector"];
"1000266" -> "1000387"  [label="DDG: ctxt"];
"1000266" -> "1000433"  [label="DDG: ctxt"];
"1000266" -> "1000433"  [label="DDG: &seg_desc"];
"1000266" -> "1000505"  [label="DDG: ctxt"];
"1000266" -> "1000505"  [label="DDG: &seg_desc"];
"1000266" -> "1000526"  [label="DDG: ctxt"];
"1000266" -> "1000557"  [label="DDG: ctxt"];
"1000264" -> "1000122"  [label="AST: "];
"1000265" -> "1000264"  [label="AST: "];
"1000275" -> "1000264"  [label="CFG: "];
"1000264" -> "1000562"  [label="DDG: read_segment_descriptor(ctxt, selector, &seg_desc, &desc_addr)"];
"1000264" -> "1000274"  [label="DDG: ret"];
"1000274" -> "1000273"  [label="AST: "];
"1000274" -> "1000276"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000276" -> "1000274"  [label="AST: "];
"1000278" -> "1000274"  [label="CFG: "];
"1000280" -> "1000274"  [label="CFG: "];
"1000274" -> "1000562"  [label="DDG: ret"];
"1000274" -> "1000562"  [label="DDG: ret != X86EMUL_CONTINUE"];
"1000274" -> "1000562"  [label="DDG: X86EMUL_CONTINUE"];
"1000274" -> "1000277"  [label="DDG: ret"];
"1000274" -> "1000447"  [label="DDG: X86EMUL_CONTINUE"];
"1000274" -> "1000511"  [label="DDG: X86EMUL_CONTINUE"];
"1000274" -> "1000540"  [label="DDG: X86EMUL_CONTINUE"];
"1000274" -> "1000553"  [label="DDG: X86EMUL_CONTINUE"];
"1000277" -> "1000273"  [label="AST: "];
"1000277" -> "1000278"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000562" -> "1000277"  [label="CFG: "];
"1000277" -> "1000562"  [label="DDG: <RET>"];
"1000278" -> "1000277"  [label="DDG: ret"];
"1000447" -> "1000446"  [label="AST: "];
"1000447" -> "1000449"  [label="CFG: "];
"1000448" -> "1000447"  [label="AST: "];
"1000449" -> "1000447"  [label="AST: "];
"1000451" -> "1000447"  [label="CFG: "];
"1000452" -> "1000447"  [label="CFG: "];
"1000447" -> "1000562"  [label="DDG: ret != X86EMUL_CONTINUE"];
"1000447" -> "1000562"  [label="DDG: X86EMUL_CONTINUE"];
"1000447" -> "1000562"  [label="DDG: ret"];
"1000431" -> "1000447"  [label="DDG: ret"];
"1000447" -> "1000450"  [label="DDG: ret"];
"1000447" -> "1000511"  [label="DDG: X86EMUL_CONTINUE"];
"1000447" -> "1000540"  [label="DDG: X86EMUL_CONTINUE"];
"1000447" -> "1000553"  [label="DDG: X86EMUL_CONTINUE"];
"1000450" -> "1000446"  [label="AST: "];
"1000450" -> "1000451"  [label="CFG: "];
"1000451" -> "1000450"  [label="AST: "];
"1000562" -> "1000450"  [label="CFG: "];
"1000450" -> "1000562"  [label="DDG: <RET>"];
"1000451" -> "1000450"  [label="DDG: ret"];
"1000511" -> "1000510"  [label="AST: "];
"1000511" -> "1000513"  [label="CFG: "];
"1000512" -> "1000511"  [label="AST: "];
"1000513" -> "1000511"  [label="AST: "];
"1000515" -> "1000511"  [label="CFG: "];
"1000545" -> "1000511"  [label="CFG: "];
"1000511" -> "1000562"  [label="DDG: X86EMUL_CONTINUE"];
"1000511" -> "1000562"  [label="DDG: ret != X86EMUL_CONTINUE"];
"1000511" -> "1000562"  [label="DDG: ret"];
"1000503" -> "1000511"  [label="DDG: ret"];
"1000511" -> "1000514"  [label="DDG: ret"];
"1000511" -> "1000553"  [label="DDG: X86EMUL_CONTINUE"];
"1000514" -> "1000510"  [label="AST: "];
"1000514" -> "1000515"  [label="CFG: "];
"1000515" -> "1000514"  [label="AST: "];
"1000562" -> "1000514"  [label="CFG: "];
"1000514" -> "1000562"  [label="DDG: <RET>"];
"1000515" -> "1000514"  [label="DDG: ret"];
"1000553" -> "1000122"  [label="AST: "];
"1000553" -> "1000554"  [label="CFG: "];
"1000554" -> "1000553"  [label="AST: "];
"1000562" -> "1000553"  [label="CFG: "];
"1000553" -> "1000562"  [label="DDG: <RET>"];
"1000554" -> "1000553"  [label="DDG: X86EMUL_CONTINUE"];
"1000540" -> "1000553"  [label="DDG: X86EMUL_CONTINUE"];
"1000540" -> "1000539"  [label="AST: "];
"1000540" -> "1000542"  [label="CFG: "];
"1000541" -> "1000540"  [label="AST: "];
"1000542" -> "1000540"  [label="AST: "];
"1000544" -> "1000540"  [label="CFG: "];
"1000545" -> "1000540"  [label="CFG: "];
"1000540" -> "1000562"  [label="DDG: ret != X86EMUL_CONTINUE"];
"1000540" -> "1000562"  [label="DDG: X86EMUL_CONTINUE"];
"1000540" -> "1000562"  [label="DDG: ret"];
"1000524" -> "1000540"  [label="DDG: ret"];
"1000540" -> "1000543"  [label="DDG: ret"];
"1000543" -> "1000539"  [label="AST: "];
"1000543" -> "1000544"  [label="CFG: "];
"1000544" -> "1000543"  [label="AST: "];
"1000562" -> "1000543"  [label="CFG: "];
"1000543" -> "1000562"  [label="DDG: <RET>"];
"1000544" -> "1000543"  [label="DDG: ret"];
"1000281" -> "1000279"  [label="AST: "];
"1000281" -> "1000283"  [label="CFG: "];
"1000282" -> "1000281"  [label="AST: "];
"1000283" -> "1000281"  [label="AST: "];
"1000279" -> "1000281"  [label="CFG: "];
"1000281" -> "1000562"  [label="DDG: selector"];
"1000281" -> "1000279"  [label="DDG: selector"];
"1000281" -> "1000279"  [label="DDG: 0xfffc"];
"1000118" -> "1000281"  [label="DDG: selector"];
"1000281" -> "1000400"  [label="DDG: selector"];
"1000281" -> "1000505"  [label="DDG: selector"];
"1000279" -> "1000122"  [label="AST: "];
"1000280" -> "1000279"  [label="AST: "];
"1000285" -> "1000279"  [label="CFG: "];
"1000279" -> "1000562"  [label="DDG: err_code"];
"1000279" -> "1000562"  [label="DDG: selector & 0xfffc"];
"1000279" -> "1000557"  [label="DDG: err_code"];
"1000557" -> "1000556"  [label="AST: "];
"1000557" -> "1000561"  [label="CFG: "];
"1000558" -> "1000557"  [label="AST: "];
"1000559" -> "1000557"  [label="AST: "];
"1000560" -> "1000557"  [label="AST: "];
"1000561" -> "1000557"  [label="AST: "];
"1000556" -> "1000557"  [label="CFG: "];
"1000557" -> "1000562"  [label="DDG: err_code"];
"1000557" -> "1000562"  [label="DDG: emulate_exception(ctxt, err_vec, err_code, true)"];
"1000557" -> "1000562"  [label="DDG: ctxt"];
"1000557" -> "1000562"  [label="DDG: err_vec"];
"1000557" -> "1000562"  [label="DDG: true"];
"1000557" -> "1000556"  [label="DDG: emulate_exception(ctxt, err_vec, err_code, true)"];
"1000387" -> "1000557"  [label="DDG: ctxt"];
"1000284" -> "1000557"  [label="DDG: err_vec"];
"1000306" -> "1000557"  [label="DDG: err_vec"];
"1000128" -> "1000557"  [label="DDG: err_vec"];
"1000132" -> "1000557"  [label="DDG: err_code"];
"1000556" -> "1000122"  [label="AST: "];
"1000562" -> "1000556"  [label="CFG: "];
"1000556" -> "1000562"  [label="DDG: <RET>"];
"1000400" -> "1000399"  [label="AST: "];
"1000400" -> "1000402"  [label="CFG: "];
"1000401" -> "1000400"  [label="AST: "];
"1000402" -> "1000400"  [label="AST: "];
"1000403" -> "1000400"  [label="CFG: "];
"1000400" -> "1000399"  [label="DDG: selector"];
"1000400" -> "1000399"  [label="DDG: 0xfffc"];
"1000118" -> "1000400"  [label="DDG: selector"];
"1000399" -> "1000397"  [label="AST: "];
"1000399" -> "1000403"  [label="CFG: "];
"1000403" -> "1000399"  [label="AST: "];
"1000397" -> "1000399"  [label="CFG: "];
"1000399" -> "1000562"  [label="DDG: cpl"];
"1000399" -> "1000562"  [label="DDG: selector & 0xfffc"];
"1000399" -> "1000397"  [label="DDG: selector & 0xfffc"];
"1000399" -> "1000397"  [label="DDG: cpl"];
"1000367" -> "1000399"  [label="DDG: cpl"];
"1000359" -> "1000399"  [label="DDG: cpl"];
"1000370" -> "1000399"  [label="DDG: cpl"];
"1000120" -> "1000399"  [label="DDG: cpl"];
"1000397" -> "1000322"  [label="AST: "];
"1000398" -> "1000397"  [label="AST: "];
"1000404" -> "1000397"  [label="CFG: "];
"1000397" -> "1000562"  [label="DDG: selector"];
"1000397" -> "1000562"  [label="DDG: (selector & 0xfffc) | cpl"];
"1000118" -> "1000397"  [label="DDG: selector"];
"1000397" -> "1000505"  [label="DDG: selector"];
"1000505" -> "1000503"  [label="AST: "];
"1000505" -> "1000508"  [label="CFG: "];
"1000506" -> "1000505"  [label="AST: "];
"1000507" -> "1000505"  [label="AST: "];
"1000508" -> "1000505"  [label="AST: "];
"1000503" -> "1000505"  [label="CFG: "];
"1000505" -> "1000562"  [label="DDG: ctxt"];
"1000505" -> "1000562"  [label="DDG: selector"];
"1000505" -> "1000562"  [label="DDG: &seg_desc"];
"1000505" -> "1000503"  [label="DDG: ctxt"];
"1000505" -> "1000503"  [label="DDG: selector"];
"1000505" -> "1000503"  [label="DDG: &seg_desc"];
"1000433" -> "1000505"  [label="DDG: ctxt"];
"1000433" -> "1000505"  [label="DDG: &seg_desc"];
"1000387" -> "1000505"  [label="DDG: ctxt"];
"1000118" -> "1000505"  [label="DDG: selector"];
"1000503" -> "1000497"  [label="AST: "];
"1000504" -> "1000503"  [label="AST: "];
"1000512" -> "1000503"  [label="CFG: "];
"1000503" -> "1000562"  [label="DDG: write_segment_descriptor(ctxt, selector, &seg_desc)"];
"1000387" -> "1000382"  [label="AST: "];
"1000387" -> "1000390"  [label="CFG: "];
"1000388" -> "1000387"  [label="AST: "];
"1000389" -> "1000387"  [label="AST: "];
"1000390" -> "1000387"  [label="AST: "];
"1000394" -> "1000387"  [label="CFG: "];
"1000387" -> "1000562"  [label="DDG: MSR_EFER"];
"1000387" -> "1000562"  [label="DDG: ctxt->ops->get_msr(ctxt, MSR_EFER, &efer)"];
"1000387" -> "1000562"  [label="DDG: &efer"];
"1000387" -> "1000526"  [label="DDG: ctxt"];
"1000526" -> "1000524"  [label="AST: "];
"1000526" -> "1000535"  [label="CFG: "];
"1000527" -> "1000526"  [label="AST: "];
"1000528" -> "1000526"  [label="AST: "];
"1000531" -> "1000526"  [label="AST: "];
"1000533" -> "1000526"  [label="AST: "];
"1000535" -> "1000526"  [label="AST: "];
"1000524" -> "1000526"  [label="CFG: "];
"1000526" -> "1000562"  [label="DDG: desc_addr+8"];
"1000526" -> "1000562"  [label="DDG: &base3"];
"1000526" -> "1000562"  [label="DDG: ctxt"];
"1000526" -> "1000562"  [label="DDG: &ctxt->exception"];
"1000526" -> "1000524"  [label="DDG: ctxt"];
"1000526" -> "1000524"  [label="DDG: desc_addr+8"];
"1000526" -> "1000524"  [label="DDG: &ctxt->exception"];
"1000526" -> "1000524"  [label="DDG: &base3"];
"1000433" -> "1000526"  [label="DDG: ctxt"];
"1000433" -> "1000526"  [label="DDG: desc_addr"];
"1000433" -> "1000526"  [label="DDG: &ctxt->exception"];
"1000524" -> "1000523"  [label="AST: "];
"1000525" -> "1000524"  [label="AST: "];
"1000541" -> "1000524"  [label="CFG: "];
"1000524" -> "1000562"  [label="DDG: ctxt->ops->read_std(ctxt, desc_addr+8, &base3,\n\t\t\t\tsizeof(base3), &ctxt->exception)"];
"1000433" -> "1000431"  [label="AST: "];
"1000433" -> "1000442"  [label="CFG: "];
"1000434" -> "1000433"  [label="AST: "];
"1000435" -> "1000433"  [label="AST: "];
"1000436" -> "1000433"  [label="AST: "];
"1000438" -> "1000433"  [label="AST: "];
"1000440" -> "1000433"  [label="AST: "];
"1000442" -> "1000433"  [label="AST: "];
"1000431" -> "1000433"  [label="CFG: "];
"1000433" -> "1000562"  [label="DDG: &ctxt->exception"];
"1000433" -> "1000562"  [label="DDG: &old_desc"];
"1000433" -> "1000562"  [label="DDG: &seg_desc"];
"1000433" -> "1000562"  [label="DDG: ctxt"];
"1000433" -> "1000562"  [label="DDG: desc_addr"];
"1000433" -> "1000431"  [label="DDG: &ctxt->exception"];
"1000433" -> "1000431"  [label="DDG: ctxt"];
"1000433" -> "1000431"  [label="DDG: &old_desc"];
"1000433" -> "1000431"  [label="DDG: &seg_desc"];
"1000433" -> "1000431"  [label="DDG: desc_addr"];
"1000433" -> "1000528"  [label="DDG: desc_addr"];
"1000431" -> "1000322"  [label="AST: "];
"1000432" -> "1000431"  [label="AST: "];
"1000448" -> "1000431"  [label="CFG: "];
"1000431" -> "1000562"  [label="DDG: ctxt->ops->cmpxchg_emulated(ctxt, desc_addr, &old_desc, &seg_desc,\n\t\t\t\t\t\t  sizeof(seg_desc), &ctxt->exception)"];
"1000528" -> "1000530"  [label="CFG: "];
"1000529" -> "1000528"  [label="AST: "];
"1000530" -> "1000528"  [label="AST: "];
"1000532" -> "1000528"  [label="CFG: "];
"1000528" -> "1000562"  [label="DDG: desc_addr"];
}
