digraph "0_libgit2_b5c6a1b407b7f8b952bded2789593b68b1876211@API" {
"1000237" [label="(Call,error = git_stream_connect(t->io))"];
"1000239" [label="(Call,git_stream_connect(t->io))"];
"1000224" [label="(Call,git_stream_set_proxy(t->io, proxy_url))"];
"1000153" [label="(Call,git_tls_stream_new(&t->io, t->connection_data.host, t->connection_data.port))"];
"1000134" [label="(Call,t->io = NULL)"];
"1000172" [label="(Call,git_curl_stream_new(&t->io, t->connection_data.host, t->connection_data.port))"];
"1000201" [label="(Call,git_stream_supports_proxy(t->io))"];
"1000193" [label="(Call,GITERR_CHECK_VERSION(t->io, GIT_STREAM_VERSION, \"git_stream\"))"];
"1000246" [label="(Call,!error)"];
"1000245" [label="(Call,!error || error == GIT_ECERTIFICATE)"];
"1000244" [label="(Call,(!error || error == GIT_ECERTIFICATE) && t->owner->certificate_check_cb != NULL &&\n \t    git_stream_is_encrypted(t->io))"];
"1000248" [label="(Call,error == GIT_ECERTIFICATE)"];
"1000282" [label="(Call,error != GIT_ECERTIFICATE)"];
"1000280" [label="(Call,is_valid = error != GIT_ECERTIFICATE)"];
"1000287" [label="(Call,t->owner->certificate_check_cb(cert, is_valid, t->connection_data.host, t->owner->message_cb_payload))"];
"1000285" [label="(Call,error = t->owner->certificate_check_cb(cert, is_valid, t->connection_data.host, t->owner->message_cb_payload))"];
"1000301" [label="(Call,error < 0)"];
"1000311" [label="(Return,return error;)"];
"1000314" [label="(Call,error < 0)"];
"1000317" [label="(Return,return error;)"];
"1000290" [label="(Call,t->connection_data.host)"];
"1000316" [label="(Literal,0)"];
"1000268" [label="(Call,error = git_stream_certificate(&cert, t->io))"];
"1000270" [label="(Call,git_stream_certificate(&cert, t->io))"];
"1000249" [label="(Identifier,error)"];
"1000283" [label="(Identifier,error)"];
"1000203" [label="(Identifier,t)"];
"1000300" [label="(ControlStructure,if (error < 0))"];
"1000302" [label="(Identifier,error)"];
"1000311" [label="(Return,return error;)"];
"1000172" [label="(Call,git_curl_stream_new(&t->io, t->connection_data.host, t->connection_data.port))"];
"1000286" [label="(Identifier,error)"];
"1000326" [label="(MethodReturn,static int)"];
"1000240" [label="(Call,t->io)"];
"1000209" [label="(Identifier,t)"];
"1000193" [label="(Call,GITERR_CHECK_VERSION(t->io, GIT_STREAM_VERSION, \"git_stream\"))"];
"1000317" [label="(Return,return error;)"];
"1000224" [label="(Call,git_stream_set_proxy(t->io, proxy_url))"];
"1000285" [label="(Call,error = t->owner->certificate_check_cb(cert, is_valid, t->connection_data.host, t->owner->message_cb_payload))"];
"1000222" [label="(Call,error = git_stream_set_proxy(t->io, proxy_url))"];
"1000287" [label="(Call,t->owner->certificate_check_cb(cert, is_valid, t->connection_data.host, t->owner->message_cb_payload))"];
"1000237" [label="(Call,error = git_stream_connect(t->io))"];
"1000170" [label="(Call,error = git_curl_stream_new(&t->io, t->connection_data.host, t->connection_data.port))"];
"1000303" [label="(Literal,0)"];
"1000315" [label="(Identifier,error)"];
"1000304" [label="(Block,)"];
"1000244" [label="(Call,(!error || error == GIT_ECERTIFICATE) && t->owner->certificate_check_cb != NULL &&\n \t    git_stream_is_encrypted(t->io))"];
"1000282" [label="(Call,error != GIT_ECERTIFICATE)"];
"1000284" [label="(Identifier,GIT_ECERTIFICATE)"];
"1000295" [label="(Call,t->owner->message_cb_payload)"];
"1000247" [label="(Identifier,error)"];
"1000163" [label="(Call,t->connection_data.port)"];
"1000197" [label="(Identifier,GIT_STREAM_VERSION)"];
"1000245" [label="(Call,!error || error == GIT_ECERTIFICATE)"];
"1000248" [label="(Call,error == GIT_ECERTIFICATE)"];
"1000269" [label="(Identifier,error)"];
"1000250" [label="(Identifier,GIT_ECERTIFICATE)"];
"1000318" [label="(Identifier,error)"];
"1000177" [label="(Call,t->connection_data.host)"];
"1000288" [label="(Identifier,cert)"];
"1000134" [label="(Call,t->io = NULL)"];
"1000243" [label="(ControlStructure,if ((!error || error == GIT_ECERTIFICATE) && t->owner->certificate_check_cb != NULL &&\n \t    git_stream_is_encrypted(t->io)))"];
"1000321" [label="(Identifier,t)"];
"1000194" [label="(Call,t->io)"];
"1000312" [label="(Identifier,error)"];
"1000125" [label="(Block,)"];
"1000198" [label="(Literal,\"git_stream\")"];
"1000281" [label="(Identifier,is_valid)"];
"1000138" [label="(Identifier,NULL)"];
"1000135" [label="(Call,t->io)"];
"1000255" [label="(Identifier,t)"];
"1000314" [label="(Call,error < 0)"];
"1000289" [label="(Identifier,is_valid)"];
"1000229" [label="(Call,git__free(proxy_url))"];
"1000225" [label="(Call,t->io)"];
"1000259" [label="(Call,git_stream_is_encrypted(t->io))"];
"1000263" [label="(Block,)"];
"1000158" [label="(Call,t->connection_data.host)"];
"1000307" [label="(Call,giterr_last())"];
"1000301" [label="(Call,error < 0)"];
"1000153" [label="(Call,git_tls_stream_new(&t->io, t->connection_data.host, t->connection_data.port))"];
"1000238" [label="(Identifier,error)"];
"1000173" [label="(Call,&t->io)"];
"1000246" [label="(Call,!error)"];
"1000251" [label="(Call,t->owner->certificate_check_cb != NULL &&\n \t    git_stream_is_encrypted(t->io))"];
"1000239" [label="(Call,git_stream_connect(t->io))"];
"1000151" [label="(Call,error = git_tls_stream_new(&t->io, t->connection_data.host, t->connection_data.port))"];
"1000280" [label="(Call,is_valid = error != GIT_ECERTIFICATE)"];
"1000141" [label="(Identifier,t)"];
"1000182" [label="(Call,t->connection_data.port)"];
"1000202" [label="(Call,t->io)"];
"1000201" [label="(Call,git_stream_supports_proxy(t->io))"];
"1000154" [label="(Call,&t->io)"];
"1000313" [label="(ControlStructure,if (error < 0))"];
"1000200" [label="(Call,git_stream_supports_proxy(t->io) &&\n\t    !git_remote__get_http_proxy(t->owner->owner, !!t->connection_data.use_ssl, &proxy_url))"];
"1000102" [label="(Block,)"];
"1000228" [label="(Identifier,proxy_url)"];
"1000237" -> "1000102"  [label="AST: "];
"1000237" -> "1000239"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000239" -> "1000237"  [label="AST: "];
"1000247" -> "1000237"  [label="CFG: "];
"1000237" -> "1000326"  [label="DDG: "];
"1000239" -> "1000237"  [label="DDG: "];
"1000237" -> "1000246"  [label="DDG: "];
"1000239" -> "1000240"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000239" -> "1000326"  [label="DDG: "];
"1000224" -> "1000239"  [label="DDG: "];
"1000153" -> "1000239"  [label="DDG: "];
"1000172" -> "1000239"  [label="DDG: "];
"1000201" -> "1000239"  [label="DDG: "];
"1000239" -> "1000259"  [label="DDG: "];
"1000239" -> "1000270"  [label="DDG: "];
"1000224" -> "1000222"  [label="AST: "];
"1000224" -> "1000228"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000228" -> "1000224"  [label="AST: "];
"1000222" -> "1000224"  [label="CFG: "];
"1000224" -> "1000326"  [label="DDG: "];
"1000224" -> "1000222"  [label="DDG: "];
"1000224" -> "1000222"  [label="DDG: "];
"1000153" -> "1000224"  [label="DDG: "];
"1000172" -> "1000224"  [label="DDG: "];
"1000201" -> "1000224"  [label="DDG: "];
"1000224" -> "1000229"  [label="DDG: "];
"1000153" -> "1000151"  [label="AST: "];
"1000153" -> "1000163"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000158" -> "1000153"  [label="AST: "];
"1000163" -> "1000153"  [label="AST: "];
"1000151" -> "1000153"  [label="CFG: "];
"1000153" -> "1000326"  [label="DDG: "];
"1000153" -> "1000326"  [label="DDG: "];
"1000153" -> "1000326"  [label="DDG: "];
"1000153" -> "1000151"  [label="DDG: "];
"1000153" -> "1000151"  [label="DDG: "];
"1000153" -> "1000151"  [label="DDG: "];
"1000134" -> "1000153"  [label="DDG: "];
"1000153" -> "1000193"  [label="DDG: "];
"1000153" -> "1000201"  [label="DDG: "];
"1000153" -> "1000259"  [label="DDG: "];
"1000153" -> "1000270"  [label="DDG: "];
"1000153" -> "1000287"  [label="DDG: "];
"1000134" -> "1000125"  [label="AST: "];
"1000134" -> "1000138"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000138" -> "1000134"  [label="AST: "];
"1000141" -> "1000134"  [label="CFG: "];
"1000134" -> "1000326"  [label="DDG: "];
"1000134" -> "1000326"  [label="DDG: "];
"1000134" -> "1000172"  [label="DDG: "];
"1000134" -> "1000193"  [label="DDG: "];
"1000172" -> "1000170"  [label="AST: "];
"1000172" -> "1000182"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000177" -> "1000172"  [label="AST: "];
"1000182" -> "1000172"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000172" -> "1000326"  [label="DDG: "];
"1000172" -> "1000326"  [label="DDG: "];
"1000172" -> "1000326"  [label="DDG: "];
"1000172" -> "1000170"  [label="DDG: "];
"1000172" -> "1000170"  [label="DDG: "];
"1000172" -> "1000170"  [label="DDG: "];
"1000172" -> "1000193"  [label="DDG: "];
"1000172" -> "1000201"  [label="DDG: "];
"1000172" -> "1000259"  [label="DDG: "];
"1000172" -> "1000270"  [label="DDG: "];
"1000172" -> "1000287"  [label="DDG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000201" -> "1000202"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000209" -> "1000201"  [label="CFG: "];
"1000200" -> "1000201"  [label="CFG: "];
"1000201" -> "1000200"  [label="DDG: "];
"1000193" -> "1000201"  [label="DDG: "];
"1000193" -> "1000102"  [label="AST: "];
"1000193" -> "1000198"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000197" -> "1000193"  [label="AST: "];
"1000198" -> "1000193"  [label="AST: "];
"1000203" -> "1000193"  [label="CFG: "];
"1000193" -> "1000326"  [label="DDG: "];
"1000193" -> "1000326"  [label="DDG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000246" -> "1000247"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000249" -> "1000246"  [label="CFG: "];
"1000245" -> "1000246"  [label="CFG: "];
"1000246" -> "1000245"  [label="DDG: "];
"1000246" -> "1000248"  [label="DDG: "];
"1000246" -> "1000314"  [label="DDG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000245" -> "1000248"  [label="CFG: "];
"1000248" -> "1000245"  [label="AST: "];
"1000255" -> "1000245"  [label="CFG: "];
"1000244" -> "1000245"  [label="CFG: "];
"1000245" -> "1000326"  [label="DDG: "];
"1000245" -> "1000326"  [label="DDG: "];
"1000245" -> "1000244"  [label="DDG: "];
"1000245" -> "1000244"  [label="DDG: "];
"1000248" -> "1000245"  [label="DDG: "];
"1000248" -> "1000245"  [label="DDG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000244" -> "1000251"  [label="CFG: "];
"1000251" -> "1000244"  [label="AST: "];
"1000269" -> "1000244"  [label="CFG: "];
"1000315" -> "1000244"  [label="CFG: "];
"1000244" -> "1000326"  [label="DDG: "];
"1000244" -> "1000326"  [label="DDG: "];
"1000244" -> "1000326"  [label="DDG: "];
"1000251" -> "1000244"  [label="DDG: "];
"1000251" -> "1000244"  [label="DDG: "];
"1000248" -> "1000250"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="AST: "];
"1000248" -> "1000326"  [label="DDG: "];
"1000248" -> "1000282"  [label="DDG: "];
"1000248" -> "1000314"  [label="DDG: "];
"1000282" -> "1000280"  [label="AST: "];
"1000282" -> "1000284"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000284" -> "1000282"  [label="AST: "];
"1000280" -> "1000282"  [label="CFG: "];
"1000282" -> "1000326"  [label="DDG: "];
"1000282" -> "1000280"  [label="DDG: "];
"1000282" -> "1000280"  [label="DDG: "];
"1000268" -> "1000282"  [label="DDG: "];
"1000280" -> "1000263"  [label="AST: "];
"1000281" -> "1000280"  [label="AST: "];
"1000286" -> "1000280"  [label="CFG: "];
"1000280" -> "1000326"  [label="DDG: "];
"1000280" -> "1000287"  [label="DDG: "];
"1000287" -> "1000285"  [label="AST: "];
"1000287" -> "1000295"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000287"  [label="AST: "];
"1000290" -> "1000287"  [label="AST: "];
"1000295" -> "1000287"  [label="AST: "];
"1000285" -> "1000287"  [label="CFG: "];
"1000287" -> "1000326"  [label="DDG: "];
"1000287" -> "1000326"  [label="DDG: "];
"1000287" -> "1000326"  [label="DDG: "];
"1000287" -> "1000326"  [label="DDG: "];
"1000287" -> "1000285"  [label="DDG: "];
"1000287" -> "1000285"  [label="DDG: "];
"1000287" -> "1000285"  [label="DDG: "];
"1000287" -> "1000285"  [label="DDG: "];
"1000285" -> "1000263"  [label="AST: "];
"1000286" -> "1000285"  [label="AST: "];
"1000302" -> "1000285"  [label="CFG: "];
"1000285" -> "1000326"  [label="DDG: "];
"1000285" -> "1000301"  [label="DDG: "];
"1000301" -> "1000300"  [label="AST: "];
"1000301" -> "1000303"  [label="CFG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000303" -> "1000301"  [label="AST: "];
"1000307" -> "1000301"  [label="CFG: "];
"1000315" -> "1000301"  [label="CFG: "];
"1000301" -> "1000326"  [label="DDG: "];
"1000301" -> "1000326"  [label="DDG: "];
"1000301" -> "1000311"  [label="DDG: "];
"1000301" -> "1000314"  [label="DDG: "];
"1000311" -> "1000304"  [label="AST: "];
"1000311" -> "1000312"  [label="CFG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000326" -> "1000311"  [label="CFG: "];
"1000311" -> "1000326"  [label="DDG: "];
"1000312" -> "1000311"  [label="DDG: "];
"1000314" -> "1000313"  [label="AST: "];
"1000314" -> "1000316"  [label="CFG: "];
"1000315" -> "1000314"  [label="AST: "];
"1000316" -> "1000314"  [label="AST: "];
"1000318" -> "1000314"  [label="CFG: "];
"1000321" -> "1000314"  [label="CFG: "];
"1000314" -> "1000326"  [label="DDG: "];
"1000314" -> "1000326"  [label="DDG: "];
"1000314" -> "1000317"  [label="DDG: "];
"1000317" -> "1000313"  [label="AST: "];
"1000317" -> "1000318"  [label="CFG: "];
"1000318" -> "1000317"  [label="AST: "];
"1000326" -> "1000317"  [label="CFG: "];
"1000317" -> "1000326"  [label="DDG: "];
"1000318" -> "1000317"  [label="DDG: "];
}
