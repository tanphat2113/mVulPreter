digraph "0_ghostscript_8e9ce5016db968b40e4ec255a3005f2786cce45f_0@pointer" {
"1000167" [label="(Call,limit = pr->limit)"];
"1000128" [label="(Call,pr->limit - pr->ptr)"];
"1000281" [label="(Call,pr->ptr + 16 <= limit)"];
"1000129" [label="(Call,pr->limit)"];
"1000157" [label="(Call,pr->ptr + out_size)"];
"1000304" [label="(Call,pr->ptr += 16)"];
"1000298" [label="(Call,pr->ptr + 1)"];
"1000275" [label="(Call,pr->ptr += 16)"];
"1000169" [label="(Call,pr->limit)"];
"1000280" [label="(ControlStructure,while (pr->ptr + 16 <= limit))"];
"1000397" [label="(MethodReturn,RET)"];
"1000128" [label="(Call,pr->limit - pr->ptr)"];
"1000291" [label="(Identifier,state)"];
"1000166" [label="(Block,)"];
"1000281" [label="(Call,pr->ptr + 16 <= limit)"];
"1000126" [label="(Call,in_size = pr->limit - pr->ptr)"];
"1000260" [label="(Call,memcpy(state->iv, pr->ptr + 1, 16))"];
"1000289" [label="(Call,aes_crypt_cbc(state->ctx, AES_DECRYPT, 16, state->iv,\n                                pr->ptr + 1, temp))"];
"1000173" [label="(Identifier,status)"];
"1000167" [label="(Call,limit = pr->limit)"];
"1000287" [label="(Identifier,limit)"];
"1000155" [label="(Call,limit = pr->ptr + out_size)"];
"1000282" [label="(Call,pr->ptr + 16)"];
"1000168" [label="(Identifier,limit)"];
"1000264" [label="(Call,pr->ptr + 1)"];
"1000312" [label="(Call,pr->ptr == pr->limit)"];
"1000387" [label="(Identifier,status)"];
"1000132" [label="(Call,pr->ptr)"];
"1000167" -> "1000166"  [label="AST: "];
"1000167" -> "1000169"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000169" -> "1000167"  [label="AST: "];
"1000173" -> "1000167"  [label="CFG: "];
"1000167" -> "1000397"  [label="DDG: limit"];
"1000167" -> "1000397"  [label="DDG: pr->limit"];
"1000128" -> "1000167"  [label="DDG: pr->limit"];
"1000167" -> "1000281"  [label="DDG: limit"];
"1000128" -> "1000126"  [label="AST: "];
"1000128" -> "1000132"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000132" -> "1000128"  [label="AST: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000128" -> "1000397"  [label="DDG: pr->ptr"];
"1000128" -> "1000397"  [label="DDG: pr->limit"];
"1000128" -> "1000126"  [label="DDG: pr->limit"];
"1000128" -> "1000126"  [label="DDG: pr->ptr"];
"1000128" -> "1000155"  [label="DDG: pr->ptr"];
"1000128" -> "1000157"  [label="DDG: pr->ptr"];
"1000128" -> "1000260"  [label="DDG: pr->ptr"];
"1000128" -> "1000264"  [label="DDG: pr->ptr"];
"1000128" -> "1000275"  [label="DDG: pr->ptr"];
"1000128" -> "1000281"  [label="DDG: pr->ptr"];
"1000128" -> "1000282"  [label="DDG: pr->ptr"];
"1000128" -> "1000289"  [label="DDG: pr->ptr"];
"1000128" -> "1000298"  [label="DDG: pr->ptr"];
"1000128" -> "1000304"  [label="DDG: pr->ptr"];
"1000128" -> "1000312"  [label="DDG: pr->limit"];
"1000281" -> "1000280"  [label="AST: "];
"1000281" -> "1000287"  [label="CFG: "];
"1000282" -> "1000281"  [label="AST: "];
"1000287" -> "1000281"  [label="AST: "];
"1000291" -> "1000281"  [label="CFG: "];
"1000387" -> "1000281"  [label="CFG: "];
"1000281" -> "1000397"  [label="DDG: pr->ptr + 16"];
"1000281" -> "1000397"  [label="DDG: limit"];
"1000281" -> "1000397"  [label="DDG: pr->ptr + 16 <= limit"];
"1000312" -> "1000281"  [label="DDG: pr->ptr"];
"1000275" -> "1000281"  [label="DDG: pr->ptr"];
"1000304" -> "1000281"  [label="DDG: pr->ptr"];
"1000155" -> "1000281"  [label="DDG: limit"];
}
