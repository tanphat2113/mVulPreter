digraph "0_linux_54d83fc74aa9ec72794373cb47432c5f7fb1a309_1@API" {
"1000206" [label="(Call,e->target_offset == sizeof(struct arpt_entry))"];
"1000205" [label="(Call,e->target_offset == sizeof(struct arpt_entry) &&\n \t\t\t     (strcmp(t->target.u.user.name,\n \t\t\t\t     XT_STANDARD_TARGET) == 0) &&\n\t\t\t     t->verdict < 0 && unconditional(&e->arp))"];
"1000204" [label="(Call,(e->target_offset == sizeof(struct arpt_entry) &&\n \t\t\t     (strcmp(t->target.u.user.name,\n \t\t\t\t     XT_STANDARD_TARGET) == 0) &&\n\t\t\t     t->verdict < 0 && unconditional(&e->arp)) ||\n\t\t\t    visited)"];
"1000219" [label="(Identifier,t)"];
"1000249" [label="(Identifier,t)"];
"1000207" [label="(Call,e->target_offset)"];
"1000345" [label="(Identifier,newpos)"];
"1000206" [label="(Call,e->target_offset == sizeof(struct arpt_entry))"];
"1000205" [label="(Call,e->target_offset == sizeof(struct arpt_entry) &&\n \t\t\t     (strcmp(t->target.u.user.name,\n \t\t\t\t     XT_STANDARD_TARGET) == 0) &&\n\t\t\t     t->verdict < 0 && unconditional(&e->arp))"];
"1000203" [label="(ControlStructure,if ((e->target_offset == sizeof(struct arpt_entry) &&\n \t\t\t     (strcmp(t->target.u.user.name,\n \t\t\t\t     XT_STANDARD_TARGET) == 0) &&\n\t\t\t     t->verdict < 0 && unconditional(&e->arp)) ||\n\t\t\t    visited))"];
"1000212" [label="(Call,(strcmp(t->target.u.user.name,\n \t\t\t\t     XT_STANDARD_TARGET) == 0) &&\n\t\t\t     t->verdict < 0 && unconditional(&e->arp))"];
"1000237" [label="(Identifier,visited)"];
"1000419" [label="(MethodReturn,static int)"];
"1000204" [label="(Call,(e->target_offset == sizeof(struct arpt_entry) &&\n \t\t\t     (strcmp(t->target.u.user.name,\n \t\t\t\t     XT_STANDARD_TARGET) == 0) &&\n\t\t\t     t->verdict < 0 && unconditional(&e->arp)) ||\n\t\t\t    visited)"];
"1000165" [label="(Call,visited = e->comefrom & (1 << hook))"];
"1000210" [label="(Call,sizeof(struct arpt_entry))"];
"1000206" -> "1000205"  [label="AST: "];
"1000206" -> "1000210"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000210" -> "1000206"  [label="AST: "];
"1000219" -> "1000206"  [label="CFG: "];
"1000205" -> "1000206"  [label="CFG: "];
"1000206" -> "1000419"  [label="DDG: e->target_offset"];
"1000206" -> "1000205"  [label="DDG: e->target_offset"];
"1000205" -> "1000204"  [label="AST: "];
"1000205" -> "1000212"  [label="CFG: "];
"1000212" -> "1000205"  [label="AST: "];
"1000237" -> "1000205"  [label="CFG: "];
"1000204" -> "1000205"  [label="CFG: "];
"1000205" -> "1000419"  [label="DDG: e->target_offset == sizeof(struct arpt_entry)"];
"1000205" -> "1000419"  [label="DDG: (strcmp(t->target.u.user.name,\n \t\t\t\t     XT_STANDARD_TARGET) == 0) &&\n\t\t\t     t->verdict < 0 && unconditional(&e->arp)"];
"1000205" -> "1000204"  [label="DDG: e->target_offset == sizeof(struct arpt_entry)"];
"1000205" -> "1000204"  [label="DDG: (strcmp(t->target.u.user.name,\n \t\t\t\t     XT_STANDARD_TARGET) == 0) &&\n\t\t\t     t->verdict < 0 && unconditional(&e->arp)"];
"1000212" -> "1000205"  [label="DDG: strcmp(t->target.u.user.name,\n \t\t\t\t     XT_STANDARD_TARGET) == 0"];
"1000212" -> "1000205"  [label="DDG: t->verdict < 0 && unconditional(&e->arp)"];
"1000204" -> "1000203"  [label="AST: "];
"1000204" -> "1000237"  [label="CFG: "];
"1000237" -> "1000204"  [label="AST: "];
"1000249" -> "1000204"  [label="CFG: "];
"1000345" -> "1000204"  [label="CFG: "];
"1000204" -> "1000419"  [label="DDG: visited"];
"1000204" -> "1000419"  [label="DDG: e->target_offset == sizeof(struct arpt_entry) &&\n \t\t\t     (strcmp(t->target.u.user.name,\n \t\t\t\t     XT_STANDARD_TARGET) == 0) &&\n\t\t\t     t->verdict < 0 && unconditional(&e->arp)"];
"1000204" -> "1000419"  [label="DDG: (e->target_offset == sizeof(struct arpt_entry) &&\n \t\t\t     (strcmp(t->target.u.user.name,\n \t\t\t\t     XT_STANDARD_TARGET) == 0) &&\n\t\t\t     t->verdict < 0 && unconditional(&e->arp)) ||\n\t\t\t    visited"];
"1000165" -> "1000204"  [label="DDG: visited"];
}
