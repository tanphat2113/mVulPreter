digraph "0_linux_744692dc059845b2a3022119871846e74d4f6e11_14@pointer" {
"1000115" [label="(Call,next = mpd->b_blocknr)"];
"1000259" [label="(Call,(unsigned long long) next)"];
"1000246" [label="(Call,ext4_msg(mpd->inode->i_sb, KERN_CRIT,\n\t\t\t \"delayed block allocation failed for inode %lu at \"\n\t\t\t \"logical offset %llu with max blocks %zd with \"\n\t\t\t \"error %d\n\", mpd->inode->i_ino,\n\t\t\t (unsigned long long) next,\n\t\t\t mpd->b_size >> mpd->inode->i_blkbits, err))"];
"1000273" [label="(Call,err == -ENOSPC)"];
"1000294" [label="(Return,return err;)"];
"1000282" [label="(Call,ext4_da_block_invalidatepages(mpd, next,\n\t\t\t\tmpd->b_size >> mpd->inode->i_blkbits))"];
"1000346" [label="(Call,(loff_t) next)"];
"1000344" [label="(Call,((loff_t) next + blks) << mpd->inode->i_blkbits)"];
"1000342" [label="(Call,disksize = ((loff_t) next + blks) << mpd->inode->i_blkbits)"];
"1000356" [label="(Call,disksize > i_size_read(mpd->inode))"];
"1000369" [label="(Call,disksize > EXT4_I(mpd->inode)->i_disksize)"];
"1000378" [label="(Call,ext4_update_i_disksize(mpd->inode, disksize))"];
"1000384" [label="(Call,ext4_mark_inode_dirty(handle, mpd->inode))"];
"1000383" [label="(Return,return ext4_mark_inode_dirty(handle, mpd->inode);)"];
"1000345" [label="(Call,(loff_t) next + blks)"];
"1000282" [label="(Call,ext4_da_block_invalidatepages(mpd, next,\n\t\t\t\tmpd->b_size >> mpd->inode->i_blkbits))"];
"1000379" [label="(Call,mpd->inode)"];
"1000368" [label="(ControlStructure,if (disksize > EXT4_I(mpd->inode)->i_disksize))"];
"1000371" [label="(Call,EXT4_I(mpd->inode)->i_disksize)"];
"1000228" [label="(Call,err == -ENOSPC)"];
"1000246" [label="(Call,ext4_msg(mpd->inode->i_sb, KERN_CRIT,\n\t\t\t \"delayed block allocation failed for inode %lu at \"\n\t\t\t \"logical offset %llu with max blocks %zd with \"\n\t\t\t \"error %d\n\", mpd->inode->i_ino,\n\t\t\t (unsigned long long) next,\n\t\t\t mpd->b_size >> mpd->inode->i_blkbits, err))"];
"1000372" [label="(Call,EXT4_I(mpd->inode))"];
"1000254" [label="(Call,mpd->inode->i_ino)"];
"1000274" [label="(Identifier,err)"];
"1000280" [label="(Identifier,mpd)"];
"1000333" [label="(Call,ext4_jbd2_file_inode(handle, mpd->inode))"];
"1000369" [label="(Call,disksize > EXT4_I(mpd->inode)->i_disksize)"];
"1000261" [label="(Identifier,next)"];
"1000110" [label="(Block,)"];
"1000380" [label="(Identifier,mpd)"];
"1000117" [label="(Call,mpd->b_blocknr)"];
"1000275" [label="(Call,-ENOSPC)"];
"1000362" [label="(Call,disksize = i_size_read(mpd->inode))"];
"1000253" [label="(Literal,\"delayed block allocation failed for inode %lu at \"\n\t\t\t \"logical offset %llu with max blocks %zd with \"\n\t\t\t \"error %d\n\")"];
"1000109" [label="(MethodParameterIn,struct mpage_da_data *mpd)"];
"1000390" [label="(Literal,0)"];
"1000122" [label="(Identifier,max_blocks)"];
"1000294" [label="(Return,return err;)"];
"1000345" [label="(Call,(loff_t) next + blks)"];
"1000302" [label="(Call,blks << mpd->inode->i_blkbits)"];
"1000342" [label="(Call,disksize = ((loff_t) next + blks) << mpd->inode->i_blkbits)"];
"1000271" [label="(Identifier,err)"];
"1000346" [label="(Call,(loff_t) next)"];
"1000357" [label="(Identifier,disksize)"];
"1000259" [label="(Call,(unsigned long long) next)"];
"1000355" [label="(ControlStructure,if (disksize > i_size_read(mpd->inode)))"];
"1000252" [label="(Identifier,KERN_CRIT)"];
"1000377" [label="(Block,)"];
"1000284" [label="(Identifier,next)"];
"1000262" [label="(Call,mpd->b_size >> mpd->inode->i_blkbits)"];
"1000378" [label="(Call,ext4_update_i_disksize(mpd->inode, disksize))"];
"1000383" [label="(Return,return ext4_mark_inode_dirty(handle, mpd->inode);)"];
"1000348" [label="(Identifier,next)"];
"1000358" [label="(Call,i_size_read(mpd->inode))"];
"1000285" [label="(Call,mpd->b_size >> mpd->inode->i_blkbits)"];
"1000272" [label="(ControlStructure,if (err == -ENOSPC))"];
"1000295" [label="(Identifier,err)"];
"1000116" [label="(Identifier,next)"];
"1000363" [label="(Identifier,disksize)"];
"1000264" [label="(Identifier,mpd)"];
"1000232" [label="(Call,ext4_count_free_blocks(mpd->inode->i_sb))"];
"1000356" [label="(Call,disksize > i_size_read(mpd->inode))"];
"1000382" [label="(Identifier,disksize)"];
"1000386" [label="(Call,mpd->inode)"];
"1000352" [label="(Identifier,mpd)"];
"1000215" [label="(Block,)"];
"1000115" [label="(Call,next = mpd->b_blocknr)"];
"1000384" [label="(Call,ext4_mark_inode_dirty(handle, mpd->inode))"];
"1000370" [label="(Identifier,disksize)"];
"1000385" [label="(Identifier,handle)"];
"1000343" [label="(Identifier,disksize)"];
"1000273" [label="(Call,err == -ENOSPC)"];
"1000350" [label="(Call,mpd->inode->i_blkbits)"];
"1000247" [label="(Call,mpd->inode->i_sb)"];
"1000283" [label="(Identifier,mpd)"];
"1000349" [label="(Identifier,blks)"];
"1000184" [label="(Call,!handle)"];
"1000391" [label="(MethodReturn,static int)"];
"1000344" [label="(Call,((loff_t) next + blks) << mpd->inode->i_blkbits)"];
"1000115" -> "1000110"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000122" -> "1000115"  [label="CFG: "];
"1000115" -> "1000391"  [label="DDG: "];
"1000115" -> "1000391"  [label="DDG: "];
"1000115" -> "1000259"  [label="DDG: "];
"1000115" -> "1000346"  [label="DDG: "];
"1000259" -> "1000246"  [label="AST: "];
"1000259" -> "1000261"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000259"  [label="AST: "];
"1000264" -> "1000259"  [label="CFG: "];
"1000259" -> "1000246"  [label="DDG: "];
"1000259" -> "1000282"  [label="DDG: "];
"1000246" -> "1000215"  [label="AST: "];
"1000246" -> "1000271"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000252" -> "1000246"  [label="AST: "];
"1000253" -> "1000246"  [label="AST: "];
"1000254" -> "1000246"  [label="AST: "];
"1000262" -> "1000246"  [label="AST: "];
"1000271" -> "1000246"  [label="AST: "];
"1000274" -> "1000246"  [label="CFG: "];
"1000246" -> "1000391"  [label="DDG: "];
"1000246" -> "1000391"  [label="DDG: "];
"1000246" -> "1000391"  [label="DDG: "];
"1000246" -> "1000391"  [label="DDG: "];
"1000246" -> "1000391"  [label="DDG: "];
"1000232" -> "1000246"  [label="DDG: "];
"1000262" -> "1000246"  [label="DDG: "];
"1000262" -> "1000246"  [label="DDG: "];
"1000228" -> "1000246"  [label="DDG: "];
"1000246" -> "1000273"  [label="DDG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000273" -> "1000275"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000275" -> "1000273"  [label="AST: "];
"1000280" -> "1000273"  [label="CFG: "];
"1000283" -> "1000273"  [label="CFG: "];
"1000273" -> "1000391"  [label="DDG: "];
"1000273" -> "1000391"  [label="DDG: "];
"1000273" -> "1000391"  [label="DDG: "];
"1000275" -> "1000273"  [label="DDG: "];
"1000273" -> "1000294"  [label="DDG: "];
"1000294" -> "1000215"  [label="AST: "];
"1000294" -> "1000295"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000391" -> "1000294"  [label="CFG: "];
"1000294" -> "1000391"  [label="DDG: "];
"1000295" -> "1000294"  [label="DDG: "];
"1000282" -> "1000215"  [label="AST: "];
"1000282" -> "1000285"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000284" -> "1000282"  [label="AST: "];
"1000285" -> "1000282"  [label="AST: "];
"1000295" -> "1000282"  [label="CFG: "];
"1000282" -> "1000391"  [label="DDG: "];
"1000282" -> "1000391"  [label="DDG: "];
"1000282" -> "1000391"  [label="DDG: "];
"1000282" -> "1000391"  [label="DDG: "];
"1000109" -> "1000282"  [label="DDG: "];
"1000285" -> "1000282"  [label="DDG: "];
"1000285" -> "1000282"  [label="DDG: "];
"1000346" -> "1000345"  [label="AST: "];
"1000346" -> "1000348"  [label="CFG: "];
"1000347" -> "1000346"  [label="AST: "];
"1000348" -> "1000346"  [label="AST: "];
"1000349" -> "1000346"  [label="CFG: "];
"1000346" -> "1000391"  [label="DDG: "];
"1000346" -> "1000344"  [label="DDG: "];
"1000346" -> "1000345"  [label="DDG: "];
"1000344" -> "1000342"  [label="AST: "];
"1000344" -> "1000350"  [label="CFG: "];
"1000345" -> "1000344"  [label="AST: "];
"1000350" -> "1000344"  [label="AST: "];
"1000342" -> "1000344"  [label="CFG: "];
"1000344" -> "1000391"  [label="DDG: "];
"1000344" -> "1000391"  [label="DDG: "];
"1000344" -> "1000342"  [label="DDG: "];
"1000344" -> "1000342"  [label="DDG: "];
"1000302" -> "1000344"  [label="DDG: "];
"1000302" -> "1000344"  [label="DDG: "];
"1000342" -> "1000110"  [label="AST: "];
"1000343" -> "1000342"  [label="AST: "];
"1000357" -> "1000342"  [label="CFG: "];
"1000342" -> "1000391"  [label="DDG: "];
"1000342" -> "1000356"  [label="DDG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000356" -> "1000358"  [label="CFG: "];
"1000357" -> "1000356"  [label="AST: "];
"1000358" -> "1000356"  [label="AST: "];
"1000363" -> "1000356"  [label="CFG: "];
"1000370" -> "1000356"  [label="CFG: "];
"1000356" -> "1000391"  [label="DDG: "];
"1000356" -> "1000391"  [label="DDG: "];
"1000358" -> "1000356"  [label="DDG: "];
"1000356" -> "1000369"  [label="DDG: "];
"1000369" -> "1000368"  [label="AST: "];
"1000369" -> "1000371"  [label="CFG: "];
"1000370" -> "1000369"  [label="AST: "];
"1000371" -> "1000369"  [label="AST: "];
"1000380" -> "1000369"  [label="CFG: "];
"1000390" -> "1000369"  [label="CFG: "];
"1000369" -> "1000391"  [label="DDG: "];
"1000369" -> "1000391"  [label="DDG: "];
"1000369" -> "1000391"  [label="DDG: "];
"1000362" -> "1000369"  [label="DDG: "];
"1000369" -> "1000378"  [label="DDG: "];
"1000378" -> "1000377"  [label="AST: "];
"1000378" -> "1000382"  [label="CFG: "];
"1000379" -> "1000378"  [label="AST: "];
"1000382" -> "1000378"  [label="AST: "];
"1000385" -> "1000378"  [label="CFG: "];
"1000378" -> "1000391"  [label="DDG: "];
"1000378" -> "1000391"  [label="DDG: "];
"1000372" -> "1000378"  [label="DDG: "];
"1000378" -> "1000384"  [label="DDG: "];
"1000384" -> "1000383"  [label="AST: "];
"1000384" -> "1000386"  [label="CFG: "];
"1000385" -> "1000384"  [label="AST: "];
"1000386" -> "1000384"  [label="AST: "];
"1000383" -> "1000384"  [label="CFG: "];
"1000384" -> "1000391"  [label="DDG: "];
"1000384" -> "1000391"  [label="DDG: "];
"1000384" -> "1000391"  [label="DDG: "];
"1000384" -> "1000383"  [label="DDG: "];
"1000333" -> "1000384"  [label="DDG: "];
"1000184" -> "1000384"  [label="DDG: "];
"1000383" -> "1000377"  [label="AST: "];
"1000391" -> "1000383"  [label="CFG: "];
"1000383" -> "1000391"  [label="DDG: "];
"1000345" -> "1000349"  [label="CFG: "];
"1000349" -> "1000345"  [label="AST: "];
"1000352" -> "1000345"  [label="CFG: "];
"1000345" -> "1000391"  [label="DDG: "];
"1000345" -> "1000391"  [label="DDG: "];
"1000302" -> "1000345"  [label="DDG: "];
}
