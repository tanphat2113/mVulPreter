digraph "0_linux_b22f5126a24b3b2f15448c3f2a254fc10cbc2b92@integer" {
"1000112" [label="(Call,dccp_len = skb->len - dataoff)"];
"1000114" [label="(Call,skb->len - dataoff)"];
"1000104" [label="(MethodParameterIn,unsigned int dataoff)"];
"1000149" [label="(Call,dh->dccph_doff * 4 > dccp_len)"];
"1000140" [label="(Call,dh->dccph_doff * 4 < sizeof(struct dccp_hdr) ||\n\t    dh->dccph_doff * 4 > dccp_len)"];
"1000161" [label="(Call,cscov = dccp_len)"];
"1000198" [label="(Call,nf_checksum_partial(skb, hooknum, dataoff, cscov, IPPROTO_DCCP,\n\t\t\t\tpf))"];
"1000194" [label="(Call,hooknum == NF_INET_PRE_ROUTING &&\n\t    nf_checksum_partial(skb, hooknum, dataoff, cscov, IPPROTO_DCCP,\n\t\t\t\tpf))"];
"1000188" [label="(Call,net->ct.sysctl_checksum && hooknum == NF_INET_PRE_ROUTING &&\n\t    nf_checksum_partial(skb, hooknum, dataoff, cscov, IPPROTO_DCCP,\n\t\t\t\tpf))"];
"1000225" [label="(Call,LOG_INVALID(net, IPPROTO_DCCP))"];
"1000228" [label="(Call,nf_log_packet(net, pf, 0, skb, NULL, NULL, NULL, \"%s\", msg))"];
"1000179" [label="(Call,cscov > dccp_len)"];
"1000180" [label="(Identifier,cscov)"];
"1000241" [label="(MethodReturn,static int)"];
"1000157" [label="(Call,msg = \"nf_ct_dccp: truncated/malformed packet \")"];
"1000114" [label="(Call,skb->len - dataoff)"];
"1000201" [label="(Identifier,dataoff)"];
"1000232" [label="(Identifier,skb)"];
"1000166" [label="(Identifier,dh)"];
"1000169" [label="(Call,cscov = (dh->dccph_cscov - 1) * 4)"];
"1000184" [label="(Identifier,msg)"];
"1000179" [label="(Call,cscov > dccp_len)"];
"1000213" [label="(Identifier,dh)"];
"1000217" [label="(Call,msg = \"nf_ct_dccp: reserved packet type \")"];
"1000224" [label="(ControlStructure,if (LOG_INVALID(net, IPPROTO_DCCP)))"];
"1000227" [label="(Identifier,IPPROTO_DCCP)"];
"1000228" [label="(Call,nf_log_packet(net, pf, 0, skb, NULL, NULL, NULL, \"%s\", msg))"];
"1000123" [label="(Call,skb_header_pointer(skb, dataoff, sizeof(_dh), &dh))"];
"1000113" [label="(Identifier,dccp_len)"];
"1000226" [label="(Identifier,net)"];
"1000104" [label="(MethodParameterIn,unsigned int dataoff)"];
"1000107" [label="(MethodParameterIn,unsigned int hooknum)"];
"1000206" [label="(Call,msg = \"nf_ct_dccp: bad checksum \")"];
"1000229" [label="(Identifier,net)"];
"1000204" [label="(Identifier,pf)"];
"1000178" [label="(ControlStructure,if (cscov > dccp_len))"];
"1000161" [label="(Call,cscov = dccp_len)"];
"1000240" [label="(Identifier,NF_ACCEPT)"];
"1000230" [label="(Identifier,pf)"];
"1000199" [label="(Identifier,skb)"];
"1000101" [label="(MethodParameterIn,struct net *net)"];
"1000181" [label="(Identifier,dccp_len)"];
"1000115" [label="(Call,skb->len)"];
"1000188" [label="(Call,net->ct.sysctl_checksum && hooknum == NF_INET_PRE_ROUTING &&\n\t    nf_checksum_partial(skb, hooknum, dataoff, cscov, IPPROTO_DCCP,\n\t\t\t\tpf))"];
"1000189" [label="(Call,net->ct.sysctl_checksum)"];
"1000225" [label="(Call,LOG_INVALID(net, IPPROTO_DCCP))"];
"1000234" [label="(Identifier,NULL)"];
"1000235" [label="(Identifier,NULL)"];
"1000187" [label="(ControlStructure,if (net->ct.sysctl_checksum && hooknum == NF_INET_PRE_ROUTING &&\n\t    nf_checksum_partial(skb, hooknum, dataoff, cscov, IPPROTO_DCCP,\n\t\t\t\tpf)))"];
"1000191" [label="(Identifier,net)"];
"1000131" [label="(Call,dh == NULL)"];
"1000198" [label="(Call,nf_checksum_partial(skb, hooknum, dataoff, cscov, IPPROTO_DCCP,\n\t\t\t\tpf))"];
"1000200" [label="(Identifier,hooknum)"];
"1000195" [label="(Call,hooknum == NF_INET_PRE_ROUTING)"];
"1000163" [label="(Identifier,dccp_len)"];
"1000231" [label="(Literal,0)"];
"1000112" [label="(Call,dccp_len = skb->len - dataoff)"];
"1000103" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000207" [label="(Identifier,msg)"];
"1000237" [label="(Identifier,msg)"];
"1000203" [label="(Identifier,IPPROTO_DCCP)"];
"1000194" [label="(Call,hooknum == NF_INET_PRE_ROUTING &&\n\t    nf_checksum_partial(skb, hooknum, dataoff, cscov, IPPROTO_DCCP,\n\t\t\t\tpf))"];
"1000150" [label="(Call,dh->dccph_doff * 4)"];
"1000118" [label="(Identifier,dataoff)"];
"1000140" [label="(Call,dh->dccph_doff * 4 < sizeof(struct dccp_hdr) ||\n\t    dh->dccph_doff * 4 > dccp_len)"];
"1000158" [label="(Identifier,msg)"];
"1000108" [label="(Block,)"];
"1000141" [label="(Call,dh->dccph_doff * 4 < sizeof(struct dccp_hdr))"];
"1000236" [label="(Literal,\"%s\")"];
"1000135" [label="(Call,msg = \"nf_ct_dccp: short packet \")"];
"1000139" [label="(ControlStructure,if (dh->dccph_doff * 4 < sizeof(struct dccp_hdr) ||\n\t    dh->dccph_doff * 4 > dccp_len))"];
"1000202" [label="(Identifier,cscov)"];
"1000183" [label="(Call,msg = \"nf_ct_dccp: bad checksum coverage \")"];
"1000155" [label="(Identifier,dccp_len)"];
"1000149" [label="(Call,dh->dccph_doff * 4 > dccp_len)"];
"1000122" [label="(Identifier,dh)"];
"1000162" [label="(Identifier,cscov)"];
"1000233" [label="(Identifier,NULL)"];
"1000106" [label="(MethodParameterIn,u_int8_t pf)"];
"1000112" -> "1000108"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000122" -> "1000112"  [label="CFG: "];
"1000112" -> "1000241"  [label="DDG: "];
"1000112" -> "1000241"  [label="DDG: "];
"1000114" -> "1000112"  [label="DDG: "];
"1000114" -> "1000112"  [label="DDG: "];
"1000112" -> "1000149"  [label="DDG: "];
"1000112" -> "1000161"  [label="DDG: "];
"1000112" -> "1000179"  [label="DDG: "];
"1000114" -> "1000118"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000118" -> "1000114"  [label="AST: "];
"1000114" -> "1000241"  [label="DDG: "];
"1000104" -> "1000114"  [label="DDG: "];
"1000114" -> "1000123"  [label="DDG: "];
"1000104" -> "1000100"  [label="AST: "];
"1000104" -> "1000241"  [label="DDG: "];
"1000104" -> "1000123"  [label="DDG: "];
"1000104" -> "1000198"  [label="DDG: "];
"1000149" -> "1000140"  [label="AST: "];
"1000149" -> "1000155"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000155" -> "1000149"  [label="AST: "];
"1000140" -> "1000149"  [label="CFG: "];
"1000149" -> "1000241"  [label="DDG: "];
"1000149" -> "1000241"  [label="DDG: "];
"1000149" -> "1000140"  [label="DDG: "];
"1000149" -> "1000140"  [label="DDG: "];
"1000150" -> "1000149"  [label="DDG: "];
"1000150" -> "1000149"  [label="DDG: "];
"1000149" -> "1000161"  [label="DDG: "];
"1000149" -> "1000179"  [label="DDG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000140" -> "1000141"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000158" -> "1000140"  [label="CFG: "];
"1000162" -> "1000140"  [label="CFG: "];
"1000140" -> "1000241"  [label="DDG: "];
"1000140" -> "1000241"  [label="DDG: "];
"1000140" -> "1000241"  [label="DDG: "];
"1000141" -> "1000140"  [label="DDG: "];
"1000161" -> "1000108"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000166" -> "1000161"  [label="CFG: "];
"1000161" -> "1000241"  [label="DDG: "];
"1000161" -> "1000241"  [label="DDG: "];
"1000161" -> "1000198"  [label="DDG: "];
"1000198" -> "1000194"  [label="AST: "];
"1000198" -> "1000204"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000201" -> "1000198"  [label="AST: "];
"1000202" -> "1000198"  [label="AST: "];
"1000203" -> "1000198"  [label="AST: "];
"1000204" -> "1000198"  [label="AST: "];
"1000194" -> "1000198"  [label="CFG: "];
"1000198" -> "1000241"  [label="DDG: "];
"1000198" -> "1000241"  [label="DDG: "];
"1000198" -> "1000241"  [label="DDG: "];
"1000198" -> "1000241"  [label="DDG: "];
"1000198" -> "1000241"  [label="DDG: "];
"1000198" -> "1000241"  [label="DDG: "];
"1000198" -> "1000194"  [label="DDG: "];
"1000198" -> "1000194"  [label="DDG: "];
"1000198" -> "1000194"  [label="DDG: "];
"1000198" -> "1000194"  [label="DDG: "];
"1000198" -> "1000194"  [label="DDG: "];
"1000198" -> "1000194"  [label="DDG: "];
"1000123" -> "1000198"  [label="DDG: "];
"1000123" -> "1000198"  [label="DDG: "];
"1000103" -> "1000198"  [label="DDG: "];
"1000195" -> "1000198"  [label="DDG: "];
"1000107" -> "1000198"  [label="DDG: "];
"1000179" -> "1000198"  [label="DDG: "];
"1000106" -> "1000198"  [label="DDG: "];
"1000198" -> "1000225"  [label="DDG: "];
"1000198" -> "1000228"  [label="DDG: "];
"1000198" -> "1000228"  [label="DDG: "];
"1000194" -> "1000188"  [label="AST: "];
"1000194" -> "1000195"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000188" -> "1000194"  [label="CFG: "];
"1000194" -> "1000241"  [label="DDG: "];
"1000194" -> "1000241"  [label="DDG: "];
"1000194" -> "1000188"  [label="DDG: "];
"1000194" -> "1000188"  [label="DDG: "];
"1000195" -> "1000194"  [label="DDG: "];
"1000195" -> "1000194"  [label="DDG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000188" -> "1000189"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000207" -> "1000188"  [label="CFG: "];
"1000213" -> "1000188"  [label="CFG: "];
"1000188" -> "1000241"  [label="DDG: "];
"1000188" -> "1000241"  [label="DDG: "];
"1000188" -> "1000241"  [label="DDG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000225" -> "1000227"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000227" -> "1000225"  [label="AST: "];
"1000229" -> "1000225"  [label="CFG: "];
"1000240" -> "1000225"  [label="CFG: "];
"1000225" -> "1000241"  [label="DDG: "];
"1000225" -> "1000241"  [label="DDG: "];
"1000225" -> "1000241"  [label="DDG: "];
"1000101" -> "1000225"  [label="DDG: "];
"1000225" -> "1000228"  [label="DDG: "];
"1000228" -> "1000224"  [label="AST: "];
"1000228" -> "1000237"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000230" -> "1000228"  [label="AST: "];
"1000231" -> "1000228"  [label="AST: "];
"1000232" -> "1000228"  [label="AST: "];
"1000233" -> "1000228"  [label="AST: "];
"1000234" -> "1000228"  [label="AST: "];
"1000235" -> "1000228"  [label="AST: "];
"1000236" -> "1000228"  [label="AST: "];
"1000237" -> "1000228"  [label="AST: "];
"1000240" -> "1000228"  [label="CFG: "];
"1000228" -> "1000241"  [label="DDG: "];
"1000228" -> "1000241"  [label="DDG: "];
"1000228" -> "1000241"  [label="DDG: "];
"1000228" -> "1000241"  [label="DDG: "];
"1000228" -> "1000241"  [label="DDG: "];
"1000228" -> "1000241"  [label="DDG: "];
"1000101" -> "1000228"  [label="DDG: "];
"1000106" -> "1000228"  [label="DDG: "];
"1000123" -> "1000228"  [label="DDG: "];
"1000103" -> "1000228"  [label="DDG: "];
"1000131" -> "1000228"  [label="DDG: "];
"1000183" -> "1000228"  [label="DDG: "];
"1000157" -> "1000228"  [label="DDG: "];
"1000217" -> "1000228"  [label="DDG: "];
"1000206" -> "1000228"  [label="DDG: "];
"1000135" -> "1000228"  [label="DDG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000179" -> "1000181"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000181" -> "1000179"  [label="AST: "];
"1000184" -> "1000179"  [label="CFG: "];
"1000191" -> "1000179"  [label="CFG: "];
"1000179" -> "1000241"  [label="DDG: "];
"1000179" -> "1000241"  [label="DDG: "];
"1000179" -> "1000241"  [label="DDG: "];
"1000169" -> "1000179"  [label="DDG: "];
}
