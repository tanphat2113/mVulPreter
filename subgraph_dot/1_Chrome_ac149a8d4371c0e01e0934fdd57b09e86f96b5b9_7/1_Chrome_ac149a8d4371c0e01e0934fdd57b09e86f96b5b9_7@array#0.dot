digraph "1_Chrome_ac149a8d4371c0e01e0934fdd57b09e86f96b5b9_7@array" {
"1000195" [label="(Call,buf[0] = 0)"];
"1000200" [label="(Call,memcpy(buf + 1, data, *size))"];
"1000201" [label="(Call,buf + 1)"];
"1000230" [label="(Call,DeviceIoControl(hid_handle, ioctl_code, buf, write_size,\n\t\tbuf, write_size, &write_size, overlapped))"];
"1000229" [label="(Call,!DeviceIoControl(hid_handle, ioctl_code, buf, write_size,\n\t\tbuf, write_size, &write_size, overlapped))"];
"1000250" [label="(Call,safe_free(buf))"];
"1000254" [label="(Call,tp->hid_buffer = buf)"];
"1000266" [label="(Call,*size = write_size)"];
"1000271" [label="(Call,write_size == 0)"];
"1000277" [label="(Call,safe_free(buf))"];
"1000278" [label="(Identifier,buf)"];
"1000215" [label="(Call,buf[0] != id)"];
"1000230" [label="(Call,DeviceIoControl(hid_handle, ioctl_code, buf, write_size,\n\t\tbuf, write_size, &write_size, overlapped))"];
"1000261" [label="(Identifier,tp)"];
"1000235" [label="(Identifier,buf)"];
"1000267" [label="(Call,*size)"];
"1000236" [label="(Identifier,write_size)"];
"1000254" [label="(Call,tp->hid_buffer = buf)"];
"1000245" [label="(Block,)"];
"1000271" [label="(Call,write_size == 0)"];
"1000237" [label="(Call,&write_size)"];
"1000276" [label="(Literal,\"program assertion failed - write completed synchronously, but no data was written\")"];
"1000137" [label="(Call,*size > MAX_HID_REPORT_SIZE)"];
"1000234" [label="(Identifier,write_size)"];
"1000240" [label="(Block,)"];
"1000280" [label="(Identifier,LIBUSB_COMPLETED)"];
"1000270" [label="(ControlStructure,if (write_size == 0))"];
"1000102" [label="(MethodParameterIn,HANDLE hid_handle)"];
"1000157" [label="(Call,ioctl_code = IOCTL_HID_SET_FEATURE)"];
"1000203" [label="(Literal,1)"];
"1000250" [label="(Call,safe_free(buf))"];
"1000201" [label="(Call,buf + 1)"];
"1000239" [label="(Identifier,overlapped)"];
"1000232" [label="(Identifier,ioctl_code)"];
"1000268" [label="(Identifier,size)"];
"1000273" [label="(Literal,0)"];
"1000231" [label="(Identifier,hid_handle)"];
"1000195" [label="(Call,buf[0] = 0)"];
"1000281" [label="(MethodReturn,static int)"];
"1000107" [label="(MethodParameterIn,OVERLAPPED* overlapped)"];
"1000277" [label="(Call,safe_free(buf))"];
"1000194" [label="(Block,)"];
"1000205" [label="(Call,*size)"];
"1000255" [label="(Call,tp->hid_buffer)"];
"1000181" [label="(Call,malloc(write_size))"];
"1000266" [label="(Call,*size = write_size)"];
"1000228" [label="(ControlStructure,if (!DeviceIoControl(hid_handle, ioctl_code, buf, write_size,\n\t\tbuf, write_size, &write_size, overlapped)))"];
"1000258" [label="(Identifier,buf)"];
"1000269" [label="(Identifier,write_size)"];
"1000196" [label="(Call,buf[0])"];
"1000152" [label="(Call,ioctl_code = IOCTL_HID_SET_OUTPUT_REPORT)"];
"1000202" [label="(Identifier,buf)"];
"1000200" [label="(Call,memcpy(buf + 1, data, *size))"];
"1000243" [label="(Call,GetLastError())"];
"1000233" [label="(Identifier,buf)"];
"1000251" [label="(Identifier,buf)"];
"1000209" [label="(Call,memcpy(buf, data, *size))"];
"1000253" [label="(Identifier,LIBUSB_ERROR_IO)"];
"1000133" [label="(Call,*size == 0)"];
"1000184" [label="(Call,buf == NULL)"];
"1000272" [label="(Identifier,write_size)"];
"1000104" [label="(MethodParameterIn,void *data)"];
"1000199" [label="(Literal,0)"];
"1000221" [label="(Call,usbi_warn(NULL, \"mismatched report ID (data is %02X, parameter is %02X)\", buf[0], id))"];
"1000204" [label="(Identifier,data)"];
"1000109" [label="(Block,)"];
"1000229" [label="(Call,!DeviceIoControl(hid_handle, ioctl_code, buf, write_size,\n\t\tbuf, write_size, &write_size, overlapped))"];
"1000195" -> "1000194"  [label="AST: "];
"1000195" -> "1000199"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000199" -> "1000195"  [label="AST: "];
"1000202" -> "1000195"  [label="CFG: "];
"1000195" -> "1000281"  [label="DDG: buf[0]"];
"1000195" -> "1000200"  [label="DDG: buf[0]"];
"1000195" -> "1000201"  [label="DDG: buf[0]"];
"1000195" -> "1000230"  [label="DDG: buf[0]"];
"1000195" -> "1000250"  [label="DDG: buf[0]"];
"1000195" -> "1000254"  [label="DDG: buf[0]"];
"1000195" -> "1000277"  [label="DDG: buf[0]"];
"1000200" -> "1000194"  [label="AST: "];
"1000200" -> "1000205"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000204" -> "1000200"  [label="AST: "];
"1000205" -> "1000200"  [label="AST: "];
"1000231" -> "1000200"  [label="CFG: "];
"1000200" -> "1000281"  [label="DDG: *size"];
"1000200" -> "1000281"  [label="DDG: buf + 1"];
"1000200" -> "1000281"  [label="DDG: memcpy(buf + 1, data, *size)"];
"1000200" -> "1000281"  [label="DDG: data"];
"1000184" -> "1000200"  [label="DDG: buf"];
"1000104" -> "1000200"  [label="DDG: data"];
"1000133" -> "1000200"  [label="DDG: *size"];
"1000137" -> "1000200"  [label="DDG: *size"];
"1000201" -> "1000203"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000203" -> "1000201"  [label="AST: "];
"1000204" -> "1000201"  [label="CFG: "];
"1000184" -> "1000201"  [label="DDG: buf"];
"1000230" -> "1000229"  [label="AST: "];
"1000230" -> "1000239"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000232" -> "1000230"  [label="AST: "];
"1000233" -> "1000230"  [label="AST: "];
"1000234" -> "1000230"  [label="AST: "];
"1000235" -> "1000230"  [label="AST: "];
"1000236" -> "1000230"  [label="AST: "];
"1000237" -> "1000230"  [label="AST: "];
"1000239" -> "1000230"  [label="AST: "];
"1000229" -> "1000230"  [label="CFG: "];
"1000230" -> "1000281"  [label="DDG: ioctl_code"];
"1000230" -> "1000281"  [label="DDG: &write_size"];
"1000230" -> "1000281"  [label="DDG: write_size"];
"1000230" -> "1000281"  [label="DDG: overlapped"];
"1000230" -> "1000281"  [label="DDG: hid_handle"];
"1000230" -> "1000229"  [label="DDG: buf"];
"1000230" -> "1000229"  [label="DDG: write_size"];
"1000230" -> "1000229"  [label="DDG: overlapped"];
"1000230" -> "1000229"  [label="DDG: ioctl_code"];
"1000230" -> "1000229"  [label="DDG: hid_handle"];
"1000230" -> "1000229"  [label="DDG: &write_size"];
"1000102" -> "1000230"  [label="DDG: hid_handle"];
"1000157" -> "1000230"  [label="DDG: ioctl_code"];
"1000152" -> "1000230"  [label="DDG: ioctl_code"];
"1000209" -> "1000230"  [label="DDG: buf"];
"1000215" -> "1000230"  [label="DDG: buf[0]"];
"1000221" -> "1000230"  [label="DDG: buf[0]"];
"1000184" -> "1000230"  [label="DDG: buf"];
"1000181" -> "1000230"  [label="DDG: write_size"];
"1000107" -> "1000230"  [label="DDG: overlapped"];
"1000230" -> "1000250"  [label="DDG: buf"];
"1000230" -> "1000254"  [label="DDG: buf"];
"1000230" -> "1000266"  [label="DDG: write_size"];
"1000230" -> "1000271"  [label="DDG: write_size"];
"1000230" -> "1000277"  [label="DDG: buf"];
"1000229" -> "1000228"  [label="AST: "];
"1000243" -> "1000229"  [label="CFG: "];
"1000268" -> "1000229"  [label="CFG: "];
"1000229" -> "1000281"  [label="DDG: !DeviceIoControl(hid_handle, ioctl_code, buf, write_size,\n\t\tbuf, write_size, &write_size, overlapped)"];
"1000229" -> "1000281"  [label="DDG: DeviceIoControl(hid_handle, ioctl_code, buf, write_size,\n\t\tbuf, write_size, &write_size, overlapped)"];
"1000250" -> "1000245"  [label="AST: "];
"1000250" -> "1000251"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000253" -> "1000250"  [label="CFG: "];
"1000250" -> "1000281"  [label="DDG: buf"];
"1000250" -> "1000281"  [label="DDG: safe_free(buf)"];
"1000215" -> "1000250"  [label="DDG: buf[0]"];
"1000221" -> "1000250"  [label="DDG: buf[0]"];
"1000254" -> "1000240"  [label="AST: "];
"1000254" -> "1000258"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000258" -> "1000254"  [label="AST: "];
"1000261" -> "1000254"  [label="CFG: "];
"1000254" -> "1000281"  [label="DDG: tp->hid_buffer"];
"1000254" -> "1000281"  [label="DDG: buf"];
"1000215" -> "1000254"  [label="DDG: buf[0]"];
"1000221" -> "1000254"  [label="DDG: buf[0]"];
"1000266" -> "1000109"  [label="AST: "];
"1000266" -> "1000269"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000269" -> "1000266"  [label="AST: "];
"1000272" -> "1000266"  [label="CFG: "];
"1000266" -> "1000281"  [label="DDG: *size"];
"1000271" -> "1000270"  [label="AST: "];
"1000271" -> "1000273"  [label="CFG: "];
"1000272" -> "1000271"  [label="AST: "];
"1000273" -> "1000271"  [label="AST: "];
"1000276" -> "1000271"  [label="CFG: "];
"1000278" -> "1000271"  [label="CFG: "];
"1000271" -> "1000281"  [label="DDG: write_size"];
"1000271" -> "1000281"  [label="DDG: write_size == 0"];
"1000277" -> "1000109"  [label="AST: "];
"1000277" -> "1000278"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000280" -> "1000277"  [label="CFG: "];
"1000277" -> "1000281"  [label="DDG: buf"];
"1000277" -> "1000281"  [label="DDG: safe_free(buf)"];
"1000215" -> "1000277"  [label="DDG: buf[0]"];
"1000221" -> "1000277"  [label="DDG: buf[0]"];
}
