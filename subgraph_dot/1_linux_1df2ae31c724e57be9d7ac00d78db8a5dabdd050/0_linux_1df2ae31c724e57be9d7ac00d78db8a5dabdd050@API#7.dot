digraph "0_linux_1df2ae31c724e57be9d7ac00d78db8a5dabdd050@API" {
"1000123" [label="(Call,bh = udf_read_tagged(sb, block, block, &ident))"];
"1000125" [label="(Call,udf_read_tagged(sb, block, block, &ident))"];
"1000113" [label="(Call,UDF_SB(sb))"];
"1000101" [label="(MethodParameterIn,struct super_block *sb)"];
"1000102" [label="(MethodParameterIn,sector_t block)"];
"1000132" [label="(Call,!bh)"];
"1000687" [label="(Call,brelse(bh))"];
"1000680" [label="(Call,udf_load_logicalvolint(sb, leea_to_cpu(lvd->integritySeqExt)))"];
"1000101" [label="(MethodParameterIn,struct super_block *sb)"];
"1000138" [label="(Identifier,ident)"];
"1000687" [label="(Call,brelse(bh))"];
"1000688" [label="(Identifier,bh)"];
"1000123" [label="(Call,bh = udf_read_tagged(sb, block, block, &ident))"];
"1000129" [label="(Call,&ident)"];
"1000135" [label="(Literal,1)"];
"1000113" [label="(Call,UDF_SB(sb))"];
"1000691" [label="(MethodReturn,static int)"];
"1000164" [label="(Call,udf_err(sb, \"error loading logical volume descriptor: \"\n\t\t\t\"Partition table too long (%u > %lu)\n\", table_len,\n\t\t\tsb->s_blocksize - sizeof(*lvd)))"];
"1000124" [label="(Identifier,bh)"];
"1000111" [label="(Call,*sbi = UDF_SB(sb))"];
"1000131" [label="(ControlStructure,if (!bh))"];
"1000133" [label="(Identifier,bh)"];
"1000104" [label="(Block,)"];
"1000128" [label="(Identifier,block)"];
"1000126" [label="(Identifier,sb)"];
"1000102" [label="(MethodParameterIn,sector_t block)"];
"1000178" [label="(Call,udf_sb_alloc_partition_maps(sb, le32_to_cpu(lvd->numPartitionMaps)))"];
"1000132" [label="(Call,!bh)"];
"1000125" [label="(Call,udf_read_tagged(sb, block, block, &ident))"];
"1000127" [label="(Identifier,block)"];
"1000690" [label="(Identifier,ret)"];
"1000114" [label="(Identifier,sb)"];
"1000399" [label="(Call,udf_read_tagged(sb, loc, loc,\n\t\t\t\t\t\t\t     &ident))"];
"1000123" -> "1000104"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000133" -> "1000123"  [label="CFG: "];
"1000123" -> "1000691"  [label="DDG: udf_read_tagged(sb, block, block, &ident)"];
"1000125" -> "1000123"  [label="DDG: sb"];
"1000125" -> "1000123"  [label="DDG: block"];
"1000125" -> "1000123"  [label="DDG: &ident"];
"1000123" -> "1000132"  [label="DDG: bh"];
"1000125" -> "1000129"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000128" -> "1000125"  [label="AST: "];
"1000129" -> "1000125"  [label="AST: "];
"1000125" -> "1000691"  [label="DDG: sb"];
"1000125" -> "1000691"  [label="DDG: &ident"];
"1000125" -> "1000691"  [label="DDG: block"];
"1000113" -> "1000125"  [label="DDG: sb"];
"1000101" -> "1000125"  [label="DDG: sb"];
"1000102" -> "1000125"  [label="DDG: block"];
"1000125" -> "1000164"  [label="DDG: sb"];
"1000125" -> "1000178"  [label="DDG: sb"];
"1000125" -> "1000399"  [label="DDG: &ident"];
"1000113" -> "1000111"  [label="AST: "];
"1000113" -> "1000114"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000111" -> "1000113"  [label="CFG: "];
"1000113" -> "1000111"  [label="DDG: sb"];
"1000101" -> "1000113"  [label="DDG: sb"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000691"  [label="DDG: sb"];
"1000101" -> "1000164"  [label="DDG: sb"];
"1000101" -> "1000178"  [label="DDG: sb"];
"1000101" -> "1000399"  [label="DDG: sb"];
"1000101" -> "1000680"  [label="DDG: sb"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000691"  [label="DDG: block"];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000133"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000135" -> "1000132"  [label="CFG: "];
"1000138" -> "1000132"  [label="CFG: "];
"1000132" -> "1000691"  [label="DDG: !bh"];
"1000132" -> "1000691"  [label="DDG: bh"];
"1000132" -> "1000687"  [label="DDG: bh"];
"1000687" -> "1000104"  [label="AST: "];
"1000687" -> "1000688"  [label="CFG: "];
"1000688" -> "1000687"  [label="AST: "];
"1000690" -> "1000687"  [label="CFG: "];
"1000687" -> "1000691"  [label="DDG: brelse(bh)"];
"1000687" -> "1000691"  [label="DDG: bh"];
}
