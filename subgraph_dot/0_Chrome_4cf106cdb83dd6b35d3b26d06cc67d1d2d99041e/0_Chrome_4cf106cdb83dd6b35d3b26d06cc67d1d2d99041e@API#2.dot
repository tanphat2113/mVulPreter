digraph "0_Chrome_4cf106cdb83dd6b35d3b26d06cc67d1d2d99041e@API" {
"1000210" [label="(Call,copy = (png_size_t) avail)"];
"1000212" [label="(Call,(png_size_t) avail)"];
"1000206" [label="(Call,(png_size_t) avail)"];
"1000185" [label="(Call,avail > 0)"];
"1000165" [label="(Call,avail = png_ptr->zbuf_size - png_ptr->zstream.avail_out)"];
"1000167" [label="(Call,png_ptr->zbuf_size - png_ptr->zstream.avail_out)"];
"1000148" [label="(Call,png_ptr->zstream.avail_out = png_ptr->zbuf_size)"];
"1000215" [label="(Call,png_memcpy(output + count, png_ptr->zbuf, copy))"];
"1000139" [label="(Call,png_ptr->zstream.next_out = png_ptr->zbuf)"];
"1000206" [label="(Call,(png_size_t) avail)"];
"1000223" [label="(Call,count += avail)"];
"1000204" [label="(ControlStructure,if ((png_size_t) avail < copy))"];
"1000208" [label="(Identifier,avail)"];
"1000185" [label="(Call,avail > 0)"];
"1000151" [label="(Identifier,png_ptr)"];
"1000211" [label="(Identifier,copy)"];
"1000187" [label="(Literal,0)"];
"1000216" [label="(Call,output + count)"];
"1000148" [label="(Call,png_ptr->zstream.avail_out = png_ptr->zbuf_size)"];
"1000158" [label="(Identifier,ret)"];
"1000222" [label="(Identifier,copy)"];
"1000145" [label="(Call,png_ptr->zbuf)"];
"1000201" [label="(Call,output_size - count)"];
"1000177" [label="(Call,(ret == Z_OK || ret == Z_STREAM_END) && avail > 0)"];
"1000180" [label="(Identifier,ret)"];
"1000168" [label="(Call,png_ptr->zbuf_size)"];
"1000140" [label="(Call,png_ptr->zstream.next_out)"];
"1000303" [label="(MethodReturn,RET)"];
"1000171" [label="(Call,png_ptr->zstream.avail_out)"];
"1000219" [label="(Call,png_ptr->zbuf)"];
"1000215" [label="(Call,png_memcpy(output + count, png_ptr->zbuf, copy))"];
"1000205" [label="(Call,(png_size_t) avail < copy)"];
"1000209" [label="(Identifier,copy)"];
"1000111" [label="(MethodParameterIn,png_bytep output)"];
"1000214" [label="(Identifier,avail)"];
"1000212" [label="(Call,(png_size_t) avail)"];
"1000136" [label="(Block,)"];
"1000197" [label="(Block,)"];
"1000210" [label="(Call,copy = (png_size_t) avail)"];
"1000149" [label="(Call,png_ptr->zstream.avail_out)"];
"1000139" [label="(Call,png_ptr->zstream.next_out = png_ptr->zbuf)"];
"1000217" [label="(Identifier,output)"];
"1000154" [label="(Call,png_ptr->zbuf_size)"];
"1000224" [label="(Identifier,count)"];
"1000166" [label="(Identifier,avail)"];
"1000165" [label="(Call,avail = png_ptr->zbuf_size - png_ptr->zstream.avail_out)"];
"1000191" [label="(Call,output != 0)"];
"1000186" [label="(Identifier,avail)"];
"1000167" [label="(Call,png_ptr->zbuf_size - png_ptr->zstream.avail_out)"];
"1000210" -> "1000204"  [label="AST: "];
"1000210" -> "1000212"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="AST: "];
"1000217" -> "1000210"  [label="CFG: "];
"1000210" -> "1000303"  [label="DDG: (png_size_t) avail"];
"1000212" -> "1000210"  [label="DDG: avail"];
"1000210" -> "1000215"  [label="DDG: copy"];
"1000212" -> "1000214"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000214" -> "1000212"  [label="AST: "];
"1000206" -> "1000212"  [label="DDG: avail"];
"1000212" -> "1000223"  [label="DDG: avail"];
"1000206" -> "1000205"  [label="AST: "];
"1000206" -> "1000208"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000206"  [label="AST: "];
"1000209" -> "1000206"  [label="CFG: "];
"1000206" -> "1000205"  [label="DDG: avail"];
"1000185" -> "1000206"  [label="DDG: avail"];
"1000165" -> "1000206"  [label="DDG: avail"];
"1000206" -> "1000223"  [label="DDG: avail"];
"1000185" -> "1000177"  [label="AST: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="AST: "];
"1000177" -> "1000185"  [label="CFG: "];
"1000185" -> "1000303"  [label="DDG: avail"];
"1000185" -> "1000177"  [label="DDG: avail"];
"1000185" -> "1000177"  [label="DDG: 0"];
"1000165" -> "1000185"  [label="DDG: avail"];
"1000185" -> "1000223"  [label="DDG: avail"];
"1000165" -> "1000136"  [label="AST: "];
"1000165" -> "1000167"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000167" -> "1000165"  [label="AST: "];
"1000180" -> "1000165"  [label="CFG: "];
"1000165" -> "1000303"  [label="DDG: avail"];
"1000165" -> "1000303"  [label="DDG: png_ptr->zbuf_size - png_ptr->zstream.avail_out"];
"1000167" -> "1000165"  [label="DDG: png_ptr->zbuf_size"];
"1000167" -> "1000165"  [label="DDG: png_ptr->zstream.avail_out"];
"1000165" -> "1000223"  [label="DDG: avail"];
"1000167" -> "1000171"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000171" -> "1000167"  [label="AST: "];
"1000167" -> "1000303"  [label="DDG: png_ptr->zbuf_size"];
"1000167" -> "1000303"  [label="DDG: png_ptr->zstream.avail_out"];
"1000167" -> "1000148"  [label="DDG: png_ptr->zbuf_size"];
"1000148" -> "1000167"  [label="DDG: png_ptr->zstream.avail_out"];
"1000148" -> "1000136"  [label="AST: "];
"1000148" -> "1000154"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000154" -> "1000148"  [label="AST: "];
"1000158" -> "1000148"  [label="CFG: "];
"1000215" -> "1000197"  [label="AST: "];
"1000215" -> "1000222"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000219" -> "1000215"  [label="AST: "];
"1000222" -> "1000215"  [label="AST: "];
"1000224" -> "1000215"  [label="CFG: "];
"1000215" -> "1000303"  [label="DDG: output + count"];
"1000215" -> "1000303"  [label="DDG: png_ptr->zbuf"];
"1000215" -> "1000303"  [label="DDG: copy"];
"1000215" -> "1000303"  [label="DDG: png_memcpy(output + count, png_ptr->zbuf, copy)"];
"1000215" -> "1000139"  [label="DDG: png_ptr->zbuf"];
"1000191" -> "1000215"  [label="DDG: output"];
"1000111" -> "1000215"  [label="DDG: output"];
"1000201" -> "1000215"  [label="DDG: count"];
"1000205" -> "1000215"  [label="DDG: copy"];
"1000139" -> "1000136"  [label="AST: "];
"1000139" -> "1000145"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000145" -> "1000139"  [label="AST: "];
"1000151" -> "1000139"  [label="CFG: "];
"1000139" -> "1000303"  [label="DDG: png_ptr->zstream.next_out"];
"1000139" -> "1000303"  [label="DDG: png_ptr->zbuf"];
}
