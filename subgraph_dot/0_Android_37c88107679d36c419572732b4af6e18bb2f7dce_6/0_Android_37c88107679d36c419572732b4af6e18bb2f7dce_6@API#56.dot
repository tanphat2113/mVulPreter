digraph "0_Android_37c88107679d36c419572732b4af6e18bb2f7dce_6@API" {
"1000558" [label="(Call,sock->connect(&bt_remote_bdaddr, BTSOCK_SCO, NULL, 5, &sock_fd, 0))"];
"1000524" [label="(Call,sock->connect(&bt_remote_bdaddr, BTSOCK_RFCOMM, (const uint8_t *)&HFP_AG_UUID, 0, &rfcomm_fd, 0))"];
"1000496" [label="(Call,bdaddr_is_empty(&bt_remote_bdaddr))"];
"1000278" [label="(Call,bt_interface->create_bond(&bt_remote_bdaddr, 0 /* UNKNOWN; Currently not documented :( */))"];
"1000259" [label="(Call,bdaddr_is_empty(&bt_remote_bdaddr))"];
"1000440" [label="(Call,sock->listen(BTSOCK_RFCOMM, \"meow\", (const uint8_t *)&HFP_AG_UUID, 0, &rfcomm_fd, 0))"];
"1000443" [label="(Call,(const uint8_t *)&HFP_AG_UUID)"];
"1000528" [label="(Call,(const uint8_t *)&HFP_AG_UUID)"];
"1000468" [label="(Call,sock->listen(BTSOCK_SCO, NULL, NULL, 5, &sock_fd, 0))"];
"1000556" [label="(Call,error = sock->connect(&bt_remote_bdaddr, BTSOCK_SCO, NULL, 5, &sock_fd, 0))"];
"1000568" [label="(Call,error != BT_STATUS_SUCCESS)"];
"1000572" [label="(Call,fprintf(stderr, \"Unable to connect to SCO socket: %d.\n\", error))"];
"1000438" [label="(Call,error = sock->listen(BTSOCK_RFCOMM, \"meow\", (const uint8_t *)&HFP_AG_UUID, 0, &rfcomm_fd, 0))"];
"1000164" [label="(Call,fprintf(stderr, \"Must specify one command\n\"))"];
"1000528" [label="(Call,(const uint8_t *)&HFP_AG_UUID)"];
"1000469" [label="(Identifier,BTSOCK_SCO)"];
"1000556" [label="(Call,error = sock->connect(&bt_remote_bdaddr, BTSOCK_SCO, NULL, 5, &sock_fd, 0))"];
"1000448" [label="(Call,&rfcomm_fd)"];
"1000442" [label="(Literal,\"meow\")"];
"1000535" [label="(Literal,0)"];
"1000567" [label="(ControlStructure,if (error != BT_STATUS_SUCCESS))"];
"1000398" [label="(Call,fprintf(stderr, \"Unable to get adapter property\n\"))"];
"1000496" [label="(Call,bdaddr_is_empty(&bt_remote_bdaddr))"];
"1000494" [label="(Block,)"];
"1000327" [label="(Call,fprintf(stderr, \"Unable to get adapter property\n\"))"];
"1000258" [label="(ControlStructure,if (bdaddr_is_empty(&bt_remote_bdaddr)))"];
"1000495" [label="(ControlStructure,if (bdaddr_is_empty(&bt_remote_bdaddr)))"];
"1000270" [label="(Identifier,false)"];
"1000559" [label="(Call,&bt_remote_bdaddr)"];
"1000537" [label="(Call,error != BT_STATUS_SUCCESS)"];
"1000533" [label="(Call,&rfcomm_fd)"];
"1000443" [label="(Call,(const uint8_t *)&HFP_AG_UUID)"];
"1000562" [label="(Identifier,NULL)"];
"1000586" [label="(MethodReturn,int)"];
"1000475" [label="(Literal,0)"];
"1000481" [label="(Call,fprintf(stderr, \"Unable to listen for incoming SCO sockets: %d\n\", error))"];
"1000558" [label="(Call,sock->connect(&bt_remote_bdaddr, BTSOCK_SCO, NULL, 5, &sock_fd, 0))"];
"1000468" [label="(Call,sock->listen(BTSOCK_SCO, NULL, NULL, 5, &sock_fd, 0))"];
"1000532" [label="(Literal,0)"];
"1000472" [label="(Literal,5)"];
"1000279" [label="(Call,&bt_remote_bdaddr)"];
"1000557" [label="(Identifier,error)"];
"1000456" [label="(Call,fprintf(stderr, \"Unable to listen for incoming RFCOMM socket: %d\n\", error))"];
"1000522" [label="(Call,error = sock->connect(&bt_remote_bdaddr, BTSOCK_RFCOMM, (const uint8_t *)&HFP_AG_UUID, 0, &rfcomm_fd, 0))"];
"1000441" [label="(Identifier,BTSOCK_RFCOMM)"];
"1000382" [label="(Call,fprintf(stderr, \"Unable to set adapter property\n\"))"];
"1000470" [label="(Identifier,NULL)"];
"1000440" [label="(Call,sock->listen(BTSOCK_RFCOMM, \"meow\", (const uint8_t *)&HFP_AG_UUID, 0, &rfcomm_fd, 0))"];
"1000281" [label="(Literal,0)"];
"1000507" [label="(Identifier,false)"];
"1000530" [label="(Call,&HFP_AG_UUID)"];
"1000525" [label="(Call,&bt_remote_bdaddr)"];
"1000260" [label="(Call,&bt_remote_bdaddr)"];
"1000579" [label="(Identifier,timeout_in_sec)"];
"1000466" [label="(Call,error = sock->listen(BTSOCK_SCO, NULL, NULL, 5, &sock_fd, 0))"];
"1000263" [label="(Call,fprintf(stderr, \"Must specify a remote device address [ --bdaddr=xx:yy:zz:aa:bb:cc ]\n\"))"];
"1000541" [label="(Call,fprintf(stderr, \"Unable to connect to RFCOMM socket: %d.\n\", error))"];
"1000259" [label="(Call,bdaddr_is_empty(&bt_remote_bdaddr))"];
"1000178" [label="(Call,fprintf(stderr, \"Will be unable to catch signals\n\"))"];
"1000264" [label="(Identifier,stderr)"];
"1000563" [label="(Literal,5)"];
"1000447" [label="(Literal,0)"];
"1000445" [label="(Call,&HFP_AG_UUID)"];
"1000527" [label="(Identifier,BTSOCK_RFCOMM)"];
"1000501" [label="(Identifier,stderr)"];
"1000572" [label="(Call,fprintf(stderr, \"Unable to connect to SCO socket: %d.\n\", error))"];
"1000561" [label="(Identifier,BTSOCK_SCO)"];
"1000497" [label="(Call,&bt_remote_bdaddr)"];
"1000278" [label="(Call,bt_interface->create_bond(&bt_remote_bdaddr, 0 /* UNKNOWN; Currently not documented :( */))"];
"1000276" [label="(Call,rc = bt_interface->create_bond(&bt_remote_bdaddr, 0 /* UNKNOWN; Currently not documented :( */))"];
"1000450" [label="(Literal,0)"];
"1000570" [label="(Identifier,BT_STATUS_SUCCESS)"];
"1000132" [label="(Call,fprintf(stderr, \"Can only select either sco_listen or sco_connect, not both\n\"))"];
"1000473" [label="(Call,&sock_fd)"];
"1000564" [label="(Call,&sock_fd)"];
"1000573" [label="(Identifier,stderr)"];
"1000566" [label="(Literal,0)"];
"1000575" [label="(Identifier,error)"];
"1000524" [label="(Call,sock->connect(&bt_remote_bdaddr, BTSOCK_RFCOMM, (const uint8_t *)&HFP_AG_UUID, 0, &rfcomm_fd, 0))"];
"1000569" [label="(Identifier,error)"];
"1000120" [label="(Call,fprintf(stderr, \"Can only select either bond or discoverable, not both\n\"))"];
"1000471" [label="(Identifier,NULL)"];
"1000577" [label="(Literal,1)"];
"1000571" [label="(Block,)"];
"1000500" [label="(Call,fprintf(stderr, \"Must specify a remote device address [ --bdaddr=xx:yy:zz:aa:bb:cc ]\n\"))"];
"1000574" [label="(Literal,\"Unable to connect to SCO socket: %d.\n\")"];
"1000568" [label="(Call,error != BT_STATUS_SUCCESS)"];
"1000558" -> "1000556"  [label="AST: "];
"1000558" -> "1000566"  [label="CFG: "];
"1000559" -> "1000558"  [label="AST: "];
"1000561" -> "1000558"  [label="AST: "];
"1000562" -> "1000558"  [label="AST: "];
"1000563" -> "1000558"  [label="AST: "];
"1000564" -> "1000558"  [label="AST: "];
"1000566" -> "1000558"  [label="AST: "];
"1000556" -> "1000558"  [label="CFG: "];
"1000558" -> "1000586"  [label="DDG: "];
"1000558" -> "1000586"  [label="DDG: "];
"1000558" -> "1000586"  [label="DDG: "];
"1000558" -> "1000586"  [label="DDG: "];
"1000558" -> "1000556"  [label="DDG: "];
"1000558" -> "1000556"  [label="DDG: "];
"1000558" -> "1000556"  [label="DDG: "];
"1000558" -> "1000556"  [label="DDG: "];
"1000558" -> "1000556"  [label="DDG: "];
"1000558" -> "1000556"  [label="DDG: "];
"1000524" -> "1000558"  [label="DDG: "];
"1000468" -> "1000558"  [label="DDG: "];
"1000468" -> "1000558"  [label="DDG: "];
"1000468" -> "1000558"  [label="DDG: "];
"1000524" -> "1000522"  [label="AST: "];
"1000524" -> "1000535"  [label="CFG: "];
"1000525" -> "1000524"  [label="AST: "];
"1000527" -> "1000524"  [label="AST: "];
"1000528" -> "1000524"  [label="AST: "];
"1000532" -> "1000524"  [label="AST: "];
"1000533" -> "1000524"  [label="AST: "];
"1000535" -> "1000524"  [label="AST: "];
"1000522" -> "1000524"  [label="CFG: "];
"1000524" -> "1000586"  [label="DDG: "];
"1000524" -> "1000586"  [label="DDG: "];
"1000524" -> "1000586"  [label="DDG: "];
"1000524" -> "1000522"  [label="DDG: "];
"1000524" -> "1000522"  [label="DDG: "];
"1000524" -> "1000522"  [label="DDG: "];
"1000524" -> "1000522"  [label="DDG: "];
"1000524" -> "1000522"  [label="DDG: "];
"1000496" -> "1000524"  [label="DDG: "];
"1000440" -> "1000524"  [label="DDG: "];
"1000440" -> "1000524"  [label="DDG: "];
"1000528" -> "1000524"  [label="DDG: "];
"1000496" -> "1000495"  [label="AST: "];
"1000496" -> "1000497"  [label="CFG: "];
"1000497" -> "1000496"  [label="AST: "];
"1000501" -> "1000496"  [label="CFG: "];
"1000507" -> "1000496"  [label="CFG: "];
"1000496" -> "1000586"  [label="DDG: "];
"1000278" -> "1000496"  [label="DDG: "];
"1000278" -> "1000276"  [label="AST: "];
"1000278" -> "1000281"  [label="CFG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000281" -> "1000278"  [label="AST: "];
"1000276" -> "1000278"  [label="CFG: "];
"1000278" -> "1000586"  [label="DDG: "];
"1000278" -> "1000276"  [label="DDG: "];
"1000278" -> "1000276"  [label="DDG: "];
"1000259" -> "1000278"  [label="DDG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000259" -> "1000260"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000264" -> "1000259"  [label="CFG: "];
"1000270" -> "1000259"  [label="CFG: "];
"1000259" -> "1000586"  [label="DDG: "];
"1000440" -> "1000438"  [label="AST: "];
"1000440" -> "1000450"  [label="CFG: "];
"1000441" -> "1000440"  [label="AST: "];
"1000442" -> "1000440"  [label="AST: "];
"1000443" -> "1000440"  [label="AST: "];
"1000447" -> "1000440"  [label="AST: "];
"1000448" -> "1000440"  [label="AST: "];
"1000450" -> "1000440"  [label="AST: "];
"1000438" -> "1000440"  [label="CFG: "];
"1000440" -> "1000586"  [label="DDG: "];
"1000440" -> "1000586"  [label="DDG: "];
"1000440" -> "1000586"  [label="DDG: "];
"1000440" -> "1000438"  [label="DDG: "];
"1000440" -> "1000438"  [label="DDG: "];
"1000440" -> "1000438"  [label="DDG: "];
"1000440" -> "1000438"  [label="DDG: "];
"1000440" -> "1000438"  [label="DDG: "];
"1000443" -> "1000440"  [label="DDG: "];
"1000443" -> "1000445"  [label="CFG: "];
"1000444" -> "1000443"  [label="AST: "];
"1000445" -> "1000443"  [label="AST: "];
"1000447" -> "1000443"  [label="CFG: "];
"1000443" -> "1000586"  [label="DDG: "];
"1000443" -> "1000528"  [label="DDG: "];
"1000528" -> "1000530"  [label="CFG: "];
"1000529" -> "1000528"  [label="AST: "];
"1000530" -> "1000528"  [label="AST: "];
"1000532" -> "1000528"  [label="CFG: "];
"1000528" -> "1000586"  [label="DDG: "];
"1000468" -> "1000466"  [label="AST: "];
"1000468" -> "1000475"  [label="CFG: "];
"1000469" -> "1000468"  [label="AST: "];
"1000470" -> "1000468"  [label="AST: "];
"1000471" -> "1000468"  [label="AST: "];
"1000472" -> "1000468"  [label="AST: "];
"1000473" -> "1000468"  [label="AST: "];
"1000475" -> "1000468"  [label="AST: "];
"1000466" -> "1000468"  [label="CFG: "];
"1000468" -> "1000586"  [label="DDG: "];
"1000468" -> "1000586"  [label="DDG: "];
"1000468" -> "1000586"  [label="DDG: "];
"1000468" -> "1000466"  [label="DDG: "];
"1000468" -> "1000466"  [label="DDG: "];
"1000468" -> "1000466"  [label="DDG: "];
"1000468" -> "1000466"  [label="DDG: "];
"1000468" -> "1000466"  [label="DDG: "];
"1000556" -> "1000494"  [label="AST: "];
"1000557" -> "1000556"  [label="AST: "];
"1000569" -> "1000556"  [label="CFG: "];
"1000556" -> "1000586"  [label="DDG: "];
"1000556" -> "1000568"  [label="DDG: "];
"1000568" -> "1000567"  [label="AST: "];
"1000568" -> "1000570"  [label="CFG: "];
"1000569" -> "1000568"  [label="AST: "];
"1000570" -> "1000568"  [label="AST: "];
"1000573" -> "1000568"  [label="CFG: "];
"1000579" -> "1000568"  [label="CFG: "];
"1000568" -> "1000586"  [label="DDG: "];
"1000568" -> "1000586"  [label="DDG: "];
"1000568" -> "1000586"  [label="DDG: "];
"1000537" -> "1000568"  [label="DDG: "];
"1000568" -> "1000572"  [label="DDG: "];
"1000572" -> "1000571"  [label="AST: "];
"1000572" -> "1000575"  [label="CFG: "];
"1000573" -> "1000572"  [label="AST: "];
"1000574" -> "1000572"  [label="AST: "];
"1000575" -> "1000572"  [label="AST: "];
"1000577" -> "1000572"  [label="CFG: "];
"1000572" -> "1000586"  [label="DDG: "];
"1000572" -> "1000586"  [label="DDG: "];
"1000572" -> "1000586"  [label="DDG: "];
"1000382" -> "1000572"  [label="DDG: "];
"1000456" -> "1000572"  [label="DDG: "];
"1000178" -> "1000572"  [label="DDG: "];
"1000327" -> "1000572"  [label="DDG: "];
"1000132" -> "1000572"  [label="DDG: "];
"1000398" -> "1000572"  [label="DDG: "];
"1000263" -> "1000572"  [label="DDG: "];
"1000120" -> "1000572"  [label="DDG: "];
"1000541" -> "1000572"  [label="DDG: "];
"1000500" -> "1000572"  [label="DDG: "];
"1000481" -> "1000572"  [label="DDG: "];
"1000164" -> "1000572"  [label="DDG: "];
}
