digraph "0_krb5_e04f0283516e80d2f93366e0d479d13c9b5c8c2a_1@pointer" {
"1000144" [label="(Call,(iakerb_ctx_id_t)*context_handle)"];
"1000123" [label="(Call,*context_handle == GSS_C_NO_CONTEXT)"];
"1000142" [label="(Call,ctx = (iakerb_ctx_id_t)*context_handle)"];
"1000168" [label="(Call,iakerb_acceptor_step(ctx, initialContextToken,\n                                    input_token, output_token))"];
"1000166" [label="(Call,code = iakerb_acceptor_step(ctx, initialContextToken,\n                                    input_token, output_token))"];
"1000174" [label="(Call,code == (OM_uint32)KRB5_BAD_MSIZE)"];
"1000183" [label="(Call,code != 0)"];
"1000303" [label="(Call,*minor_status = code)"];
"1000193" [label="(Call,(gss_ctx_id_t)ctx)"];
"1000190" [label="(Call,*context_handle = (gss_ctx_id_t)ctx)"];
"1000292" [label="(Call,initialContextToken && GSS_ERROR(major_status))"];
"1000297" [label="(Call,iakerb_release_context(ctx))"];
"1000247" [label="(Call,iakerb_make_exts(ctx, &exts))"];
"1000253" [label="(Call,krb5_gss_accept_sec_context_ext(&code,\n                                                       &ctx->gssc,\n                                                       verifier_cred_handle,\n                                                       input_token,\n                                                       input_chan_bindings,\n                                                       src_name,\n                                                       NULL,\n                                                       output_token,\n                                                       ret_flags,\n                                                        time_rec,\n                                                        delegated_cred_handle,\n                                                        &exts))"];
"1000251" [label="(Call,major_status = krb5_gss_accept_sec_context_ext(&code,\n                                                       &ctx->gssc,\n                                                       verifier_cred_handle,\n                                                       input_token,\n                                                       input_chan_bindings,\n                                                       src_name,\n                                                       NULL,\n                                                       output_token,\n                                                       ret_flags,\n                                                        time_rec,\n                                                        delegated_cred_handle,\n                                                        &exts))"];
"1000272" [label="(Call,major_status == GSS_S_COMPLETE)"];
"1000294" [label="(Call,GSS_ERROR(major_status))"];
"1000307" [label="(Return,return major_status;)"];
"1000281" [label="(Call,mech_type != NULL)"];
"1000253" [label="(Call,krb5_gss_accept_sec_context_ext(&code,\n                                                       &ctx->gssc,\n                                                       verifier_cred_handle,\n                                                       input_token,\n                                                       input_chan_bindings,\n                                                       src_name,\n                                                       NULL,\n                                                       output_token,\n                                                       ret_flags,\n                                                        time_rec,\n                                                        delegated_cred_handle,\n                                                        &exts))"];
"1000264" [label="(Identifier,NULL)"];
"1000251" [label="(Call,major_status = krb5_gss_accept_sec_context_ext(&code,\n                                                       &ctx->gssc,\n                                                       verifier_cred_handle,\n                                                       input_token,\n                                                       input_chan_bindings,\n                                                       src_name,\n                                                       NULL,\n                                                       output_token,\n                                                       ret_flags,\n                                                        time_rec,\n                                                        delegated_cred_handle,\n                                                        &exts))"];
"1000293" [label="(Identifier,initialContextToken)"];
"1000298" [label="(Identifier,ctx)"];
"1000105" [label="(MethodParameterIn,gss_buffer_t input_token)"];
"1000167" [label="(Identifier,code)"];
"1000263" [label="(Identifier,src_name)"];
"1000296" [label="(Block,)"];
"1000126" [label="(Identifier,GSS_C_NO_CONTEXT)"];
"1000174" [label="(Call,code == (OM_uint32)KRB5_BAD_MSIZE)"];
"1000124" [label="(Call,*context_handle)"];
"1000107" [label="(MethodParameterIn,gss_name_t *src_name)"];
"1000272" [label="(Call,major_status == GSS_S_COMPLETE)"];
"1000112" [label="(MethodParameterIn,gss_cred_id_t *delegated_cred_handle)"];
"1000179" [label="(Call,major_status = GSS_S_DEFECTIVE_TOKEN)"];
"1000195" [label="(Identifier,ctx)"];
"1000290" [label="(JumpTarget,cleanup:)"];
"1000151" [label="(Block,)"];
"1000306" [label="(Identifier,code)"];
"1000193" [label="(Call,(gss_ctx_id_t)ctx)"];
"1000142" [label="(Call,ctx = (iakerb_ctx_id_t)*context_handle)"];
"1000291" [label="(ControlStructure,if (initialContextToken && GSS_ERROR(major_status)))"];
"1000269" [label="(Call,&exts)"];
"1000297" [label="(Call,iakerb_release_context(ctx))"];
"1000149" [label="(Call,iakerb_is_iakerb_token(input_token))"];
"1000169" [label="(Identifier,ctx)"];
"1000294" [label="(Call,GSS_ERROR(major_status))"];
"1000172" [label="(Identifier,output_token)"];
"1000283" [label="(Identifier,NULL)"];
"1000115" [label="(Call,major_status = GSS_S_FAILURE)"];
"1000173" [label="(ControlStructure,if (code == (OM_uint32)KRB5_BAD_MSIZE))"];
"1000186" [label="(ControlStructure,goto cleanup;)"];
"1000280" [label="(ControlStructure,if (mech_type != NULL))"];
"1000176" [label="(Call,(OM_uint32)KRB5_BAD_MSIZE)"];
"1000110" [label="(MethodParameterIn,OM_uint32 *ret_flags)"];
"1000301" [label="(Identifier,context_handle)"];
"1000166" [label="(Call,code = iakerb_acceptor_step(ctx, initialContextToken,\n                                    input_token, output_token))"];
"1000123" [label="(Call,*context_handle == GSS_C_NO_CONTEXT)"];
"1000248" [label="(Identifier,ctx)"];
"1000299" [label="(Call,*context_handle = GSS_C_NO_CONTEXT)"];
"1000184" [label="(Identifier,code)"];
"1000109" [label="(MethodParameterIn,gss_buffer_t output_token)"];
"1000121" [label="(Call,initialContextToken = (*context_handle == GSS_C_NO_CONTEXT))"];
"1000197" [label="(Identifier,ctx)"];
"1000108" [label="(MethodParameterIn,gss_OID *mech_type)"];
"1000305" [label="(Identifier,minor_status)"];
"1000183" [label="(Call,code != 0)"];
"1000267" [label="(Identifier,time_rec)"];
"1000274" [label="(Identifier,GSS_S_COMPLETE)"];
"1000111" [label="(MethodParameterIn,OM_uint32 *time_rec)"];
"1000113" [label="(Block,)"];
"1000271" [label="(ControlStructure,if (major_status == GSS_S_COMPLETE))"];
"1000254" [label="(Call,&code)"];
"1000282" [label="(Identifier,mech_type)"];
"1000295" [label="(Identifier,major_status)"];
"1000286" [label="(Identifier,mech_type)"];
"1000307" [label="(Return,return major_status;)"];
"1000159" [label="(Call,code = G_WRONG_TOKID)"];
"1000162" [label="(Call,major_status = GSS_S_DEFECTIVE_TOKEN)"];
"1000266" [label="(Identifier,ret_flags)"];
"1000273" [label="(Identifier,major_status)"];
"1000281" [label="(Call,mech_type != NULL)"];
"1000171" [label="(Identifier,input_token)"];
"1000144" [label="(Call,(iakerb_ctx_id_t)*context_handle)"];
"1000247" [label="(Call,iakerb_make_exts(ctx, &exts))"];
"1000189" [label="(Block,)"];
"1000303" [label="(Call,*minor_status = code)"];
"1000292" [label="(Call,initialContextToken && GSS_ERROR(major_status))"];
"1000260" [label="(Identifier,verifier_cred_handle)"];
"1000141" [label="(ControlStructure,else)"];
"1000150" [label="(Identifier,input_token)"];
"1000252" [label="(Identifier,major_status)"];
"1000168" [label="(Call,iakerb_acceptor_step(ctx, initialContextToken,\n                                    input_token, output_token))"];
"1000308" [label="(Identifier,major_status)"];
"1000191" [label="(Call,*context_handle)"];
"1000190" [label="(Call,*context_handle = (gss_ctx_id_t)ctx)"];
"1000137" [label="(Call,code != 0)"];
"1000153" [label="(Call,ctx->gssc != GSS_C_NO_CONTEXT)"];
"1000170" [label="(Identifier,initialContextToken)"];
"1000175" [label="(Identifier,code)"];
"1000265" [label="(Identifier,output_token)"];
"1000245" [label="(Block,)"];
"1000268" [label="(Identifier,delegated_cred_handle)"];
"1000106" [label="(MethodParameterIn,gss_channel_bindings_t input_chan_bindings)"];
"1000262" [label="(Identifier,input_chan_bindings)"];
"1000143" [label="(Identifier,ctx)"];
"1000180" [label="(Identifier,major_status)"];
"1000256" [label="(Call,&ctx->gssc)"];
"1000104" [label="(MethodParameterIn,gss_cred_id_t verifier_cred_handle)"];
"1000241" [label="(Call,major_status = GSS_S_CONTINUE_NEEDED)"];
"1000185" [label="(Literal,0)"];
"1000304" [label="(Call,*minor_status)"];
"1000188" [label="(Identifier,initialContextToken)"];
"1000196" [label="(Call,ctx = NULL)"];
"1000261" [label="(Identifier,input_token)"];
"1000182" [label="(ControlStructure,if (code != 0))"];
"1000146" [label="(Call,*context_handle)"];
"1000249" [label="(Call,&exts)"];
"1000277" [label="(Identifier,ctx)"];
"1000309" [label="(MethodReturn,RET)"];
"1000144" -> "1000142"  [label="AST: "];
"1000144" -> "1000146"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000146" -> "1000144"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000144" -> "1000309"  [label="DDG: *context_handle"];
"1000144" -> "1000142"  [label="DDG: *context_handle"];
"1000123" -> "1000144"  [label="DDG: *context_handle"];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000126"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000126" -> "1000123"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000123" -> "1000309"  [label="DDG: GSS_C_NO_CONTEXT"];
"1000123" -> "1000309"  [label="DDG: *context_handle"];
"1000123" -> "1000121"  [label="DDG: *context_handle"];
"1000123" -> "1000121"  [label="DDG: GSS_C_NO_CONTEXT"];
"1000123" -> "1000153"  [label="DDG: GSS_C_NO_CONTEXT"];
"1000123" -> "1000299"  [label="DDG: GSS_C_NO_CONTEXT"];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000142"  [label="AST: "];
"1000150" -> "1000142"  [label="CFG: "];
"1000142" -> "1000309"  [label="DDG: (iakerb_ctx_id_t)*context_handle"];
"1000142" -> "1000309"  [label="DDG: ctx"];
"1000142" -> "1000168"  [label="DDG: ctx"];
"1000142" -> "1000247"  [label="DDG: ctx"];
"1000142" -> "1000297"  [label="DDG: ctx"];
"1000168" -> "1000166"  [label="AST: "];
"1000168" -> "1000172"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000171" -> "1000168"  [label="AST: "];
"1000172" -> "1000168"  [label="AST: "];
"1000166" -> "1000168"  [label="CFG: "];
"1000168" -> "1000309"  [label="DDG: output_token"];
"1000168" -> "1000309"  [label="DDG: ctx"];
"1000168" -> "1000309"  [label="DDG: input_token"];
"1000168" -> "1000166"  [label="DDG: ctx"];
"1000168" -> "1000166"  [label="DDG: initialContextToken"];
"1000168" -> "1000166"  [label="DDG: input_token"];
"1000168" -> "1000166"  [label="DDG: output_token"];
"1000121" -> "1000168"  [label="DDG: initialContextToken"];
"1000149" -> "1000168"  [label="DDG: input_token"];
"1000105" -> "1000168"  [label="DDG: input_token"];
"1000109" -> "1000168"  [label="DDG: output_token"];
"1000168" -> "1000193"  [label="DDG: ctx"];
"1000168" -> "1000292"  [label="DDG: initialContextToken"];
"1000168" -> "1000297"  [label="DDG: ctx"];
"1000166" -> "1000151"  [label="AST: "];
"1000167" -> "1000166"  [label="AST: "];
"1000175" -> "1000166"  [label="CFG: "];
"1000166" -> "1000309"  [label="DDG: iakerb_acceptor_step(ctx, initialContextToken,\n                                    input_token, output_token)"];
"1000166" -> "1000174"  [label="DDG: code"];
"1000174" -> "1000173"  [label="AST: "];
"1000174" -> "1000176"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000176" -> "1000174"  [label="AST: "];
"1000180" -> "1000174"  [label="CFG: "];
"1000184" -> "1000174"  [label="CFG: "];
"1000174" -> "1000309"  [label="DDG: (OM_uint32)KRB5_BAD_MSIZE"];
"1000174" -> "1000309"  [label="DDG: code == (OM_uint32)KRB5_BAD_MSIZE"];
"1000176" -> "1000174"  [label="DDG: KRB5_BAD_MSIZE"];
"1000174" -> "1000183"  [label="DDG: code"];
"1000183" -> "1000182"  [label="AST: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000185" -> "1000183"  [label="AST: "];
"1000186" -> "1000183"  [label="CFG: "];
"1000188" -> "1000183"  [label="CFG: "];
"1000183" -> "1000309"  [label="DDG: code != 0"];
"1000183" -> "1000303"  [label="DDG: code"];
"1000303" -> "1000113"  [label="AST: "];
"1000303" -> "1000306"  [label="CFG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000306" -> "1000303"  [label="AST: "];
"1000308" -> "1000303"  [label="CFG: "];
"1000303" -> "1000309"  [label="DDG: *minor_status"];
"1000303" -> "1000309"  [label="DDG: code"];
"1000159" -> "1000303"  [label="DDG: code"];
"1000137" -> "1000303"  [label="DDG: code"];
"1000193" -> "1000190"  [label="AST: "];
"1000193" -> "1000195"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000195" -> "1000193"  [label="AST: "];
"1000190" -> "1000193"  [label="CFG: "];
"1000193" -> "1000190"  [label="DDG: ctx"];
"1000190" -> "1000189"  [label="AST: "];
"1000191" -> "1000190"  [label="AST: "];
"1000197" -> "1000190"  [label="CFG: "];
"1000190" -> "1000309"  [label="DDG: *context_handle"];
"1000190" -> "1000309"  [label="DDG: (gss_ctx_id_t)ctx"];
"1000292" -> "1000291"  [label="AST: "];
"1000292" -> "1000293"  [label="CFG: "];
"1000292" -> "1000294"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000294" -> "1000292"  [label="AST: "];
"1000298" -> "1000292"  [label="CFG: "];
"1000305" -> "1000292"  [label="CFG: "];
"1000292" -> "1000309"  [label="DDG: initialContextToken && GSS_ERROR(major_status)"];
"1000292" -> "1000309"  [label="DDG: GSS_ERROR(major_status)"];
"1000292" -> "1000309"  [label="DDG: initialContextToken"];
"1000121" -> "1000292"  [label="DDG: initialContextToken"];
"1000294" -> "1000292"  [label="DDG: major_status"];
"1000297" -> "1000296"  [label="AST: "];
"1000297" -> "1000298"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000301" -> "1000297"  [label="CFG: "];
"1000297" -> "1000309"  [label="DDG: ctx"];
"1000297" -> "1000309"  [label="DDG: iakerb_release_context(ctx)"];
"1000247" -> "1000297"  [label="DDG: ctx"];
"1000196" -> "1000297"  [label="DDG: ctx"];
"1000247" -> "1000245"  [label="AST: "];
"1000247" -> "1000249"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000249" -> "1000247"  [label="AST: "];
"1000252" -> "1000247"  [label="CFG: "];
"1000247" -> "1000309"  [label="DDG: ctx"];
"1000247" -> "1000309"  [label="DDG: iakerb_make_exts(ctx, &exts)"];
"1000247" -> "1000253"  [label="DDG: &exts"];
"1000253" -> "1000251"  [label="AST: "];
"1000253" -> "1000269"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000256" -> "1000253"  [label="AST: "];
"1000260" -> "1000253"  [label="AST: "];
"1000261" -> "1000253"  [label="AST: "];
"1000262" -> "1000253"  [label="AST: "];
"1000263" -> "1000253"  [label="AST: "];
"1000264" -> "1000253"  [label="AST: "];
"1000265" -> "1000253"  [label="AST: "];
"1000266" -> "1000253"  [label="AST: "];
"1000267" -> "1000253"  [label="AST: "];
"1000268" -> "1000253"  [label="AST: "];
"1000269" -> "1000253"  [label="AST: "];
"1000251" -> "1000253"  [label="CFG: "];
"1000253" -> "1000309"  [label="DDG: &ctx->gssc"];
"1000253" -> "1000309"  [label="DDG: verifier_cred_handle"];
"1000253" -> "1000309"  [label="DDG: &code"];
"1000253" -> "1000309"  [label="DDG: output_token"];
"1000253" -> "1000309"  [label="DDG: &exts"];
"1000253" -> "1000309"  [label="DDG: delegated_cred_handle"];
"1000253" -> "1000309"  [label="DDG: time_rec"];
"1000253" -> "1000309"  [label="DDG: src_name"];
"1000253" -> "1000309"  [label="DDG: ret_flags"];
"1000253" -> "1000309"  [label="DDG: input_chan_bindings"];
"1000253" -> "1000309"  [label="DDG: input_token"];
"1000253" -> "1000251"  [label="DDG: &code"];
"1000253" -> "1000251"  [label="DDG: time_rec"];
"1000253" -> "1000251"  [label="DDG: ret_flags"];
"1000253" -> "1000251"  [label="DDG: src_name"];
"1000253" -> "1000251"  [label="DDG: delegated_cred_handle"];
"1000253" -> "1000251"  [label="DDG: output_token"];
"1000253" -> "1000251"  [label="DDG: &ctx->gssc"];
"1000253" -> "1000251"  [label="DDG: input_chan_bindings"];
"1000253" -> "1000251"  [label="DDG: &exts"];
"1000253" -> "1000251"  [label="DDG: verifier_cred_handle"];
"1000253" -> "1000251"  [label="DDG: input_token"];
"1000253" -> "1000251"  [label="DDG: NULL"];
"1000104" -> "1000253"  [label="DDG: verifier_cred_handle"];
"1000149" -> "1000253"  [label="DDG: input_token"];
"1000105" -> "1000253"  [label="DDG: input_token"];
"1000106" -> "1000253"  [label="DDG: input_chan_bindings"];
"1000107" -> "1000253"  [label="DDG: src_name"];
"1000109" -> "1000253"  [label="DDG: output_token"];
"1000110" -> "1000253"  [label="DDG: ret_flags"];
"1000111" -> "1000253"  [label="DDG: time_rec"];
"1000112" -> "1000253"  [label="DDG: delegated_cred_handle"];
"1000253" -> "1000281"  [label="DDG: NULL"];
"1000251" -> "1000245"  [label="AST: "];
"1000252" -> "1000251"  [label="AST: "];
"1000273" -> "1000251"  [label="CFG: "];
"1000251" -> "1000309"  [label="DDG: krb5_gss_accept_sec_context_ext(&code,\n                                                       &ctx->gssc,\n                                                       verifier_cred_handle,\n                                                       input_token,\n                                                       input_chan_bindings,\n                                                       src_name,\n                                                       NULL,\n                                                       output_token,\n                                                       ret_flags,\n                                                        time_rec,\n                                                        delegated_cred_handle,\n                                                        &exts)"];
"1000251" -> "1000272"  [label="DDG: major_status"];
"1000272" -> "1000271"  [label="AST: "];
"1000272" -> "1000274"  [label="CFG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000274" -> "1000272"  [label="AST: "];
"1000277" -> "1000272"  [label="CFG: "];
"1000282" -> "1000272"  [label="CFG: "];
"1000272" -> "1000309"  [label="DDG: GSS_S_COMPLETE"];
"1000272" -> "1000309"  [label="DDG: major_status"];
"1000272" -> "1000309"  [label="DDG: major_status == GSS_S_COMPLETE"];
"1000272" -> "1000294"  [label="DDG: major_status"];
"1000272" -> "1000307"  [label="DDG: major_status"];
"1000294" -> "1000295"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000294" -> "1000309"  [label="DDG: major_status"];
"1000179" -> "1000294"  [label="DDG: major_status"];
"1000241" -> "1000294"  [label="DDG: major_status"];
"1000162" -> "1000294"  [label="DDG: major_status"];
"1000115" -> "1000294"  [label="DDG: major_status"];
"1000294" -> "1000307"  [label="DDG: major_status"];
"1000307" -> "1000113"  [label="AST: "];
"1000307" -> "1000308"  [label="CFG: "];
"1000308" -> "1000307"  [label="AST: "];
"1000309" -> "1000307"  [label="CFG: "];
"1000307" -> "1000309"  [label="DDG: <RET>"];
"1000308" -> "1000307"  [label="DDG: major_status"];
"1000179" -> "1000307"  [label="DDG: major_status"];
"1000241" -> "1000307"  [label="DDG: major_status"];
"1000162" -> "1000307"  [label="DDG: major_status"];
"1000115" -> "1000307"  [label="DDG: major_status"];
"1000281" -> "1000280"  [label="AST: "];
"1000281" -> "1000283"  [label="CFG: "];
"1000282" -> "1000281"  [label="AST: "];
"1000283" -> "1000281"  [label="AST: "];
"1000286" -> "1000281"  [label="CFG: "];
"1000290" -> "1000281"  [label="CFG: "];
"1000281" -> "1000309"  [label="DDG: mech_type"];
"1000281" -> "1000309"  [label="DDG: mech_type != NULL"];
"1000281" -> "1000309"  [label="DDG: NULL"];
"1000108" -> "1000281"  [label="DDG: mech_type"];
}
