digraph "0_enlightment_bb4a21e98656fe2c7d98ba2163e6defe9a630e2b@API" {
"1000401" [label="(Call,!strcmp(argv[i], \"-h\"))"];
"1000220" [label="(Call,copy_args(dbus_argv + 2, argv, argc))"];
"1000215" [label="(Call,dbus_argv[1] = \"--exit-with-session\")"];
"1000210" [label="(Call,dbus_argv[0] = \"dbus-launch\")"];
"1000201" [label="(Call,dbus_argv = alloca((argc + 3) * sizeof (char *)))"];
"1000203" [label="(Call,alloca((argc + 3) * sizeof (char *)))"];
"1000204" [label="(Call,(argc + 3) * sizeof (char *))"];
"1000118" [label="(MethodParameterIn,int argc)"];
"1000119" [label="(MethodParameterIn,char **argv)"];
"1000268" [label="(Call,strncmp(argv[i], \"-valgrind\", sizeof(\"-valgrind\") - 1))"];
"1000355" [label="(Call,printf(\"Unknown valgrind option: %s\n\", argv[i]))"];
"1000421" [label="(Call,printf\n             (\n               \"Options:\n\"\n               \"\t-valgrind[=MODE]\n\"\n               \"\t\tRun enlightenment from inside valgrind, mode is OR of:\n\"\n               \"\t\t   1 = plain valgrind to catch crashes (default)\n\"\n               \"\t\t   2 = trace children (thumbnailer, efm slaves, ...)\n\"\n               \"\t\t   4 = check leak\n\"\n               \"\t\t   8 = show reachable after processes finish.\n\"\n               \"\t\t all = all of above\n\"\n               \"\t-massif\n\"\n               \"\t\tRun enlightenment from inside massif valgrind tool.\n\"\n               \"\t-callgrind\n\"\n               \"\t\tRun enlightenment from inside callgrind valgrind tool.\n\"\n               \"\t-valgrind-log-file=<FILENAME>\n\"\n               \"\t\tSave valgrind log to file, see valgrind's --log-file for details.\n\"\n               \"\n\"\n               \"Please run:\n\"\n               \"\tenlightenment %s\n\"\n               \"for more options.\n\",\n               argv[i]))"];
"1000371" [label="(Call,env_set(\"DISPLAY\", argv[i]))"];
"1000273" [label="(Call,sizeof(\"-valgrind\") - 1)"];
"1000400" [label="(Call,(!strcmp(argv[i], \"-h\")) ||\n                 (!strcmp(argv[i], \"-help\")) ||\n                 (!strcmp(argv[i], \"--help\")))"];
"1000249" [label="(Call,i < argc)"];
"1000212" [label="(Identifier,dbus_argv)"];
"1000608" [label="(Call,argc - 1)"];
"1000357" [label="(Call,argv[i])"];
"1000215" [label="(Call,dbus_argv[1] = \"--exit-with-session\")"];
"1000430" [label="(Call,!strcmp(argv[i], \"-i-really-know-what-i-am-doing-and-accept-full-responsibility-for-it\"))"];
"1000203" [label="(Call,alloca((argc + 3) * sizeof (char *)))"];
"1000431" [label="(Call,strcmp(argv[i], \"-i-really-know-what-i-am-doing-and-accept-full-responsibility-for-it\"))"];
"1000407" [label="(Call,(!strcmp(argv[i], \"-help\")) ||\n                 (!strcmp(argv[i], \"--help\")))"];
"1000363" [label="(Call,strcmp(argv[i], \"-display\"))"];
"1000400" [label="(Call,(!strcmp(argv[i], \"-h\")) ||\n                 (!strcmp(argv[i], \"-help\")) ||\n                 (!strcmp(argv[i], \"--help\")))"];
"1000571" [label="(Call,argc + 2 + VALGRIND_MAX_ARGS)"];
"1000423" [label="(Call,argv[i])"];
"1000281" [label="(Call,argv[i] + sizeof(\"-valgrind\") - 1)"];
"1000402" [label="(Call,strcmp(argv[i], \"-h\"))"];
"1000208" [label="(Call,sizeof (char *))"];
"1000240" [label="(Call,env_set(\"E_START\", argv[0]))"];
"1000221" [label="(Call,dbus_argv + 2)"];
"1000422" [label="(Literal,\"Options:\n\"\n               \"\t-valgrind[=MODE]\n\"\n               \"\t\tRun enlightenment from inside valgrind, mode is OR of:\n\"\n               \"\t\t   1 = plain valgrind to catch crashes (default)\n\"\n               \"\t\t   2 = trace children (thumbnailer, efm slaves, ...)\n\"\n               \"\t\t   4 = check leak\n\"\n               \"\t\t   8 = show reachable after processes finish.\n\"\n               \"\t\t all = all of above\n\"\n               \"\t-massif\n\"\n               \"\t\tRun enlightenment from inside massif valgrind tool.\n\"\n               \"\t-callgrind\n\"\n               \"\t\tRun enlightenment from inside callgrind valgrind tool.\n\"\n               \"\t-valgrind-log-file=<FILENAME>\n\"\n               \"\t\tSave valgrind log to file, see valgrind's --log-file for details.\n\"\n               \"\n\"\n               \"Please run:\n\"\n               \"\tenlightenment %s\n\"\n               \"for more options.\n\")"];
"1000276" [label="(Literal,1)"];
"1000415" [label="(Call,strcmp(argv[i], \"--help\"))"];
"1000399" [label="(ControlStructure,if ((!strcmp(argv[i], \"-h\")) ||\n                 (!strcmp(argv[i], \"-help\")) ||\n                 (!strcmp(argv[i], \"--help\"))))"];
"1000433" [label="(Identifier,argv)"];
"1000229" [label="(Call,2 + argc)"];
"1000593" [label="(Call,copy_args(args + i, argv + 1, argc - 1))"];
"1000236" [label="(Call,prefix_determine(argv[0]))"];
"1000222" [label="(Identifier,dbus_argv)"];
"1000420" [label="(Block,)"];
"1000253" [label="(Identifier,i)"];
"1000368" [label="(Block,)"];
"1000272" [label="(Literal,\"-valgrind\")"];
"1000210" [label="(Call,dbus_argv[0] = \"dbus-launch\")"];
"1000118" [label="(MethodParameterIn,int argc)"];
"1000233" [label="(Call,execvp(\"dbus-launch\", dbus_argv))"];
"1000273" [label="(Call,sizeof(\"-valgrind\") - 1)"];
"1000199" [label="(Block,)"];
"1000219" [label="(Literal,\"--exit-with-session\")"];
"1000216" [label="(Call,dbus_argv[1])"];
"1000372" [label="(Literal,\"DISPLAY\")"];
"1000409" [label="(Call,strcmp(argv[i], \"-help\"))"];
"1000411" [label="(Identifier,argv)"];
"1000362" [label="(Call,!strcmp(argv[i], \"-display\"))"];
"1000427" [label="(Literal,0)"];
"1000274" [label="(Call,sizeof(\"-valgrind\"))"];
"1000202" [label="(Identifier,dbus_argv)"];
"1000269" [label="(Call,argv[i])"];
"1000268" [label="(Call,strncmp(argv[i], \"-valgrind\", sizeof(\"-valgrind\") - 1))"];
"1000217" [label="(Identifier,dbus_argv)"];
"1000228" [label="(Identifier,dbus_argv)"];
"1000279" [label="(Call,*val = argv[i] + sizeof(\"-valgrind\") - 1)"];
"1000401" [label="(Call,!strcmp(argv[i], \"-h\"))"];
"1001056" [label="(MethodReturn,RET)"];
"1000379" [label="(Call,strcmp(argv[i], \"-massif\"))"];
"1000414" [label="(Call,!strcmp(argv[i], \"--help\"))"];
"1000205" [label="(Call,argc + 3)"];
"1000371" [label="(Call,env_set(\"DISPLAY\", argv[i]))"];
"1000570" [label="(Call,(argc + 2 + VALGRIND_MAX_ARGS) * sizeof(char *))"];
"1000256" [label="(Call,!strcmp(argv[i], \"-valgrind-gdb\"))"];
"1000211" [label="(Call,dbus_argv[0])"];
"1000355" [label="(Call,printf(\"Unknown valgrind option: %s\n\", argv[i]))"];
"1000225" [label="(Identifier,argc)"];
"1000373" [label="(Call,argv[i])"];
"1000600" [label="(Call,argc - 1)"];
"1000224" [label="(Identifier,argv)"];
"1000220" [label="(Call,copy_args(dbus_argv + 2, argv, argc))"];
"1000214" [label="(Literal,\"dbus-launch\")"];
"1000356" [label="(Literal,\"Unknown valgrind option: %s\n\")"];
"1000597" [label="(Call,argv + 1)"];
"1000354" [label="(ControlStructure,else)"];
"1000389" [label="(Call,!strcmp(argv[i], \"-callgrind\"))"];
"1000408" [label="(Call,!strcmp(argv[i], \"-help\"))"];
"1000201" [label="(Call,dbus_argv = alloca((argc + 3) * sizeof (char *)))"];
"1000378" [label="(Call,!strcmp(argv[i], \"-massif\"))"];
"1000390" [label="(Call,strcmp(argv[i], \"-callgrind\"))"];
"1000421" [label="(Call,printf\n             (\n               \"Options:\n\"\n               \"\t-valgrind[=MODE]\n\"\n               \"\t\tRun enlightenment from inside valgrind, mode is OR of:\n\"\n               \"\t\t   1 = plain valgrind to catch crashes (default)\n\"\n               \"\t\t   2 = trace children (thumbnailer, efm slaves, ...)\n\"\n               \"\t\t   4 = check leak\n\"\n               \"\t\t   8 = show reachable after processes finish.\n\"\n               \"\t\t all = all of above\n\"\n               \"\t-massif\n\"\n               \"\t\tRun enlightenment from inside massif valgrind tool.\n\"\n               \"\t-callgrind\n\"\n               \"\t\tRun enlightenment from inside callgrind valgrind tool.\n\"\n               \"\t-valgrind-log-file=<FILENAME>\n\"\n               \"\t\tSave valgrind log to file, see valgrind's --log-file for details.\n\"\n               \"\n\"\n               \"Please run:\n\"\n               \"\tenlightenment %s\n\"\n               \"for more options.\n\",\n               argv[i]))"];
"1000267" [label="(Call,!strncmp(argv[i], \"-valgrind\", sizeof(\"-valgrind\") - 1))"];
"1000204" [label="(Call,(argc + 3) * sizeof (char *))"];
"1000257" [label="(Call,strcmp(argv[i], \"-valgrind-gdb\"))"];
"1000119" [label="(MethodParameterIn,char **argv)"];
"1000401" -> "1000400"  [label="AST: "];
"1000401" -> "1000402"  [label="CFG: "];
"1000402" -> "1000401"  [label="AST: "];
"1000411" -> "1000401"  [label="CFG: "];
"1000400" -> "1000401"  [label="CFG: "];
"1000401" -> "1001056"  [label="DDG: "];
"1000401" -> "1000400"  [label="DDG: "];
"1000220" -> "1000401"  [label="DDG: "];
"1000119" -> "1000401"  [label="DDG: "];
"1000268" -> "1000401"  [label="DDG: "];
"1000220" -> "1000199"  [label="AST: "];
"1000220" -> "1000225"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000224" -> "1000220"  [label="AST: "];
"1000225" -> "1000220"  [label="AST: "];
"1000228" -> "1000220"  [label="CFG: "];
"1000220" -> "1001056"  [label="DDG: "];
"1000220" -> "1001056"  [label="DDG: "];
"1000215" -> "1000220"  [label="DDG: "];
"1000210" -> "1000220"  [label="DDG: "];
"1000201" -> "1000220"  [label="DDG: "];
"1000119" -> "1000220"  [label="DDG: "];
"1000118" -> "1000220"  [label="DDG: "];
"1000220" -> "1000229"  [label="DDG: "];
"1000220" -> "1000236"  [label="DDG: "];
"1000220" -> "1000240"  [label="DDG: "];
"1000220" -> "1000249"  [label="DDG: "];
"1000220" -> "1000256"  [label="DDG: "];
"1000220" -> "1000257"  [label="DDG: "];
"1000220" -> "1000268"  [label="DDG: "];
"1000220" -> "1000279"  [label="DDG: "];
"1000220" -> "1000281"  [label="DDG: "];
"1000220" -> "1000355"  [label="DDG: "];
"1000220" -> "1000362"  [label="DDG: "];
"1000220" -> "1000363"  [label="DDG: "];
"1000220" -> "1000371"  [label="DDG: "];
"1000220" -> "1000378"  [label="DDG: "];
"1000220" -> "1000379"  [label="DDG: "];
"1000220" -> "1000389"  [label="DDG: "];
"1000220" -> "1000390"  [label="DDG: "];
"1000220" -> "1000402"  [label="DDG: "];
"1000220" -> "1000408"  [label="DDG: "];
"1000220" -> "1000409"  [label="DDG: "];
"1000220" -> "1000414"  [label="DDG: "];
"1000220" -> "1000415"  [label="DDG: "];
"1000220" -> "1000421"  [label="DDG: "];
"1000220" -> "1000430"  [label="DDG: "];
"1000220" -> "1000431"  [label="DDG: "];
"1000220" -> "1000593"  [label="DDG: "];
"1000220" -> "1000597"  [label="DDG: "];
"1000215" -> "1000199"  [label="AST: "];
"1000215" -> "1000219"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000219" -> "1000215"  [label="AST: "];
"1000222" -> "1000215"  [label="CFG: "];
"1000215" -> "1001056"  [label="DDG: "];
"1000215" -> "1000221"  [label="DDG: "];
"1000215" -> "1000233"  [label="DDG: "];
"1000210" -> "1000199"  [label="AST: "];
"1000210" -> "1000214"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000214" -> "1000210"  [label="AST: "];
"1000217" -> "1000210"  [label="CFG: "];
"1000210" -> "1001056"  [label="DDG: "];
"1000210" -> "1000221"  [label="DDG: "];
"1000210" -> "1000233"  [label="DDG: "];
"1000201" -> "1000199"  [label="AST: "];
"1000201" -> "1000203"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000203" -> "1000201"  [label="AST: "];
"1000212" -> "1000201"  [label="CFG: "];
"1000201" -> "1001056"  [label="DDG: "];
"1000203" -> "1000201"  [label="DDG: "];
"1000201" -> "1000221"  [label="DDG: "];
"1000201" -> "1000233"  [label="DDG: "];
"1000203" -> "1000204"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000203" -> "1001056"  [label="DDG: "];
"1000204" -> "1000203"  [label="DDG: "];
"1000204" -> "1000208"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000208" -> "1000204"  [label="AST: "];
"1000204" -> "1001056"  [label="DDG: "];
"1000118" -> "1000204"  [label="DDG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1001056"  [label="DDG: "];
"1000118" -> "1000205"  [label="DDG: "];
"1000118" -> "1000229"  [label="DDG: "];
"1000118" -> "1000249"  [label="DDG: "];
"1000118" -> "1000570"  [label="DDG: "];
"1000118" -> "1000571"  [label="DDG: "];
"1000118" -> "1000600"  [label="DDG: "];
"1000118" -> "1000608"  [label="DDG: "];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1001056"  [label="DDG: "];
"1000119" -> "1000236"  [label="DDG: "];
"1000119" -> "1000240"  [label="DDG: "];
"1000119" -> "1000256"  [label="DDG: "];
"1000119" -> "1000257"  [label="DDG: "];
"1000119" -> "1000268"  [label="DDG: "];
"1000119" -> "1000279"  [label="DDG: "];
"1000119" -> "1000281"  [label="DDG: "];
"1000119" -> "1000355"  [label="DDG: "];
"1000119" -> "1000362"  [label="DDG: "];
"1000119" -> "1000363"  [label="DDG: "];
"1000119" -> "1000371"  [label="DDG: "];
"1000119" -> "1000378"  [label="DDG: "];
"1000119" -> "1000379"  [label="DDG: "];
"1000119" -> "1000389"  [label="DDG: "];
"1000119" -> "1000390"  [label="DDG: "];
"1000119" -> "1000402"  [label="DDG: "];
"1000119" -> "1000408"  [label="DDG: "];
"1000119" -> "1000409"  [label="DDG: "];
"1000119" -> "1000414"  [label="DDG: "];
"1000119" -> "1000415"  [label="DDG: "];
"1000119" -> "1000421"  [label="DDG: "];
"1000119" -> "1000430"  [label="DDG: "];
"1000119" -> "1000431"  [label="DDG: "];
"1000119" -> "1000593"  [label="DDG: "];
"1000119" -> "1000597"  [label="DDG: "];
"1000268" -> "1000267"  [label="AST: "];
"1000268" -> "1000273"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000272" -> "1000268"  [label="AST: "];
"1000273" -> "1000268"  [label="AST: "];
"1000267" -> "1000268"  [label="CFG: "];
"1000268" -> "1001056"  [label="DDG: "];
"1000268" -> "1000256"  [label="DDG: "];
"1000268" -> "1000257"  [label="DDG: "];
"1000268" -> "1000267"  [label="DDG: "];
"1000268" -> "1000267"  [label="DDG: "];
"1000268" -> "1000267"  [label="DDG: "];
"1000355" -> "1000268"  [label="DDG: "];
"1000421" -> "1000268"  [label="DDG: "];
"1000371" -> "1000268"  [label="DDG: "];
"1000273" -> "1000268"  [label="DDG: "];
"1000268" -> "1000279"  [label="DDG: "];
"1000268" -> "1000281"  [label="DDG: "];
"1000268" -> "1000355"  [label="DDG: "];
"1000268" -> "1000362"  [label="DDG: "];
"1000268" -> "1000363"  [label="DDG: "];
"1000268" -> "1000371"  [label="DDG: "];
"1000268" -> "1000378"  [label="DDG: "];
"1000268" -> "1000379"  [label="DDG: "];
"1000268" -> "1000389"  [label="DDG: "];
"1000268" -> "1000390"  [label="DDG: "];
"1000268" -> "1000402"  [label="DDG: "];
"1000268" -> "1000408"  [label="DDG: "];
"1000268" -> "1000409"  [label="DDG: "];
"1000268" -> "1000414"  [label="DDG: "];
"1000268" -> "1000415"  [label="DDG: "];
"1000268" -> "1000421"  [label="DDG: "];
"1000268" -> "1000430"  [label="DDG: "];
"1000268" -> "1000431"  [label="DDG: "];
"1000268" -> "1000593"  [label="DDG: "];
"1000268" -> "1000597"  [label="DDG: "];
"1000355" -> "1000354"  [label="AST: "];
"1000355" -> "1000357"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000357" -> "1000355"  [label="AST: "];
"1000253" -> "1000355"  [label="CFG: "];
"1000355" -> "1001056"  [label="DDG: "];
"1000355" -> "1001056"  [label="DDG: "];
"1000355" -> "1000256"  [label="DDG: "];
"1000355" -> "1000257"  [label="DDG: "];
"1000355" -> "1000593"  [label="DDG: "];
"1000355" -> "1000597"  [label="DDG: "];
"1000421" -> "1000420"  [label="AST: "];
"1000421" -> "1000423"  [label="CFG: "];
"1000422" -> "1000421"  [label="AST: "];
"1000423" -> "1000421"  [label="AST: "];
"1000427" -> "1000421"  [label="CFG: "];
"1000421" -> "1001056"  [label="DDG: "];
"1000421" -> "1001056"  [label="DDG: "];
"1000421" -> "1000256"  [label="DDG: "];
"1000421" -> "1000257"  [label="DDG: "];
"1000421" -> "1000593"  [label="DDG: "];
"1000421" -> "1000597"  [label="DDG: "];
"1000371" -> "1000368"  [label="AST: "];
"1000371" -> "1000373"  [label="CFG: "];
"1000372" -> "1000371"  [label="AST: "];
"1000373" -> "1000371"  [label="AST: "];
"1000253" -> "1000371"  [label="CFG: "];
"1000371" -> "1001056"  [label="DDG: "];
"1000371" -> "1001056"  [label="DDG: "];
"1000371" -> "1000256"  [label="DDG: "];
"1000371" -> "1000257"  [label="DDG: "];
"1000371" -> "1000593"  [label="DDG: "];
"1000371" -> "1000597"  [label="DDG: "];
"1000273" -> "1000276"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000276" -> "1000273"  [label="AST: "];
"1000400" -> "1000399"  [label="AST: "];
"1000400" -> "1000407"  [label="CFG: "];
"1000407" -> "1000400"  [label="AST: "];
"1000422" -> "1000400"  [label="CFG: "];
"1000433" -> "1000400"  [label="CFG: "];
"1000400" -> "1001056"  [label="DDG: "];
"1000400" -> "1001056"  [label="DDG: "];
"1000400" -> "1001056"  [label="DDG: "];
"1000407" -> "1000400"  [label="DDG: "];
"1000407" -> "1000400"  [label="DDG: "];
}
