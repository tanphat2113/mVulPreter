digraph "0_samba_9280051bfba337458722fb157f3082f93cbd9f2b@pointer" {
"1000141" [label="(Call,vuid = req->vuid)"];
"1000317" [label="(Call,is_partial_auth_vuid(sconn, vuid))"];
"1000316" [label="(Call,!is_partial_auth_vuid(sconn, vuid))"];
"1000324" [label="(Call,get_pending_auth_data(sconn, smbpid))"];
"1000322" [label="(Call,pad = get_pending_auth_data(sconn, smbpid))"];
"1000346" [label="(Call,is_partial_auth_vuid(sconn, vuid))"];
"1000345" [label="(Call,!is_partial_auth_vuid(sconn, vuid))"];
"1000352" [label="(Call,register_initial_vuid(sconn))"];
"1000350" [label="(Call,vuid = register_initial_vuid(sconn))"];
"1000355" [label="(Call,vuid == UID_FIELD_INVALID)"];
"1000369" [label="(Call,get_partial_auth_user_struct(sconn, vuid))"];
"1000367" [label="(Call,vuser = get_partial_auth_user_struct(sconn, vuid))"];
"1000373" [label="(Call,!vuser)"];
"1000380" [label="(Call,check_spnego_blob_complete(sconn, smbpid, vuid, &blob1))"];
"1000378" [label="(Call,status = check_spnego_blob_complete(sconn, smbpid, vuid, &blob1))"];
"1000388" [label="(Call,NT_STATUS_IS_OK(status))"];
"1000387" [label="(Call,!NT_STATUS_IS_OK(status))"];
"1000393" [label="(Call,NT_STATUS_EQUAL(status,\n\t\t\t\tNT_STATUS_MORE_PROCESSING_REQUIRED))"];
"1000392" [label="(Call,!NT_STATUS_EQUAL(status,\n\t\t\t\tNT_STATUS_MORE_PROCESSING_REQUIRED))"];
"1000405" [label="(Call,nt_status_squash(status))"];
"1000403" [label="(Call,reply_nterror(req, nt_status_squash(status)))"];
"1000397" [label="(Call,invalidate_vuid(sconn, vuid))"];
"1000400" [label="(Call,data_blob_free(&blob1))"];
"1000418" [label="(Call,reply_spnego_negotiate(req, vuid, blob1,\n\t\t\t\t       &vuser->auth_ntlmssp_state))"];
"1000426" [label="(Call,data_blob_free(&blob1))"];
"1000440" [label="(Call,reply_spnego_auth(req, vuid, blob1,\n\t\t\t\t  &vuser->auth_ntlmssp_state))"];
"1000448" [label="(Call,data_blob_free(&blob1))"];
"1000483" [label="(Call,invalidate_vuid(sconn, vuid))"];
"1000486" [label="(Call,data_blob_free(&blob1))"];
"1000503" [label="(Call,data_blob_free(&blob1))"];
"1000506" [label="(Call,reply_spnego_ntlmssp(req, vuid,\n\t\t\t\t     &vuser->auth_ntlmssp_state,\n\t\t\t\t     &chal, status, OID_NTLMSSP, false))"];
"1000518" [label="(Call,data_blob_free(&chal))"];
"1000525" [label="(Call,data_blob_free(&blob1))"];
"1000400" [label="(Call,data_blob_free(&blob1))"];
"1000388" [label="(Call,NT_STATUS_IS_OK(status))"];
"1000443" [label="(Identifier,blob1)"];
"1000420" [label="(Identifier,vuid)"];
"1000507" [label="(Identifier,req)"];
"1000463" [label="(Block,)"];
"1000367" [label="(Call,vuser = get_partial_auth_user_struct(sconn, vuid))"];
"1000406" [label="(Identifier,status)"];
"1000399" [label="(Identifier,vuid)"];
"1000386" [label="(ControlStructure,if (!NT_STATUS_IS_OK(status)))"];
"1000484" [label="(Identifier,sconn)"];
"1000503" [label="(Call,data_blob_free(&blob1))"];
"1000357" [label="(Identifier,UID_FIELD_INVALID)"];
"1000417" [label="(Block,)"];
"1000369" [label="(Call,get_partial_auth_user_struct(sconn, vuid))"];
"1000442" [label="(Identifier,vuid)"];
"1000428" [label="(Identifier,blob1)"];
"1000405" [label="(Call,nt_status_squash(status))"];
"1000473" [label="(Call,auth_ntlmssp_start(&vuser->auth_ntlmssp_state))"];
"1000519" [label="(Call,&chal)"];
"1000371" [label="(Identifier,vuid)"];
"1000450" [label="(Identifier,blob1)"];
"1000325" [label="(Identifier,sconn)"];
"1000355" [label="(Call,vuid == UID_FIELD_INVALID)"];
"1000426" [label="(Call,data_blob_free(&blob1))"];
"1000506" [label="(Call,reply_spnego_ntlmssp(req, vuid,\n\t\t\t\t     &vuser->auth_ntlmssp_state,\n\t\t\t\t     &chal, status, OID_NTLMSSP, false))"];
"1000404" [label="(Identifier,req)"];
"1000322" [label="(Call,pad = get_pending_auth_data(sconn, smbpid))"];
"1000486" [label="(Call,data_blob_free(&blob1))"];
"1000316" [label="(Call,!is_partial_auth_vuid(sconn, vuid))"];
"1000339" [label="(Call,vuid = pad->vuid)"];
"1000209" [label="(Call,blob1 = data_blob(p, MIN(bufrem, data_blob_len)))"];
"1000361" [label="(Identifier,blob1)"];
"1000116" [label="(MethodParameterIn,struct smb_request *req)"];
"1000520" [label="(Identifier,chal)"];
"1000526" [label="(Call,&blob1)"];
"1000496" [label="(Call,auth_ntlmssp_update(vuser->auth_ntlmssp_state,\n\t\t\t\t\t\tblob1, &chal))"];
"1000517" [label="(Identifier,false)"];
"1000324" [label="(Call,get_pending_auth_data(sconn, smbpid))"];
"1000513" [label="(Call,&chal)"];
"1000381" [label="(Identifier,sconn)"];
"1000429" [label="(Return,return;)"];
"1000439" [label="(Block,)"];
"1000418" [label="(Call,reply_spnego_negotiate(req, vuid, blob1,\n\t\t\t\t       &vuser->auth_ntlmssp_state))"];
"1000485" [label="(Identifier,vuid)"];
"1000392" [label="(Call,!NT_STATUS_EQUAL(status,\n\t\t\t\tNT_STATUS_MORE_PROCESSING_REQUIRED))"];
"1000419" [label="(Identifier,req)"];
"1000345" [label="(Call,!is_partial_auth_vuid(sconn, vuid))"];
"1000117" [label="(Block,)"];
"1000382" [label="(Identifier,smbpid)"];
"1000384" [label="(Call,&blob1)"];
"1000387" [label="(Call,!NT_STATUS_IS_OK(status))"];
"1000323" [label="(Identifier,pad)"];
"1000326" [label="(Identifier,smbpid)"];
"1000352" [label="(Call,register_initial_vuid(sconn))"];
"1000148" [label="(Identifier,vuser)"];
"1000350" [label="(Call,vuid = register_initial_vuid(sconn))"];
"1000412" [label="(Identifier,blob1)"];
"1000396" [label="(Block,)"];
"1000448" [label="(Call,data_blob_free(&blob1))"];
"1000216" [label="(Call,file_save(\"negotiate.dat\", blob1.data, blob1.length))"];
"1000427" [label="(Call,&blob1)"];
"1000393" [label="(Call,NT_STATUS_EQUAL(status,\n\t\t\t\tNT_STATUS_MORE_PROCESSING_REQUIRED))"];
"1000444" [label="(Call,&vuser->auth_ntlmssp_state)"];
"1000451" [label="(Return,return;)"];
"1000379" [label="(Identifier,status)"];
"1000143" [label="(Call,req->vuid)"];
"1000161" [label="(Call,*sconn = smbd_server_conn)"];
"1000532" [label="(MethodReturn,static void)"];
"1000267" [label="(Call,srvstr_pull_req_talloc(talloc_tos(), req, &tmp, p2,\n\t\t\t\t     STR_TERMINATE))"];
"1000440" [label="(Call,reply_spnego_auth(req, vuid, blob1,\n\t\t\t\t  &vuser->auth_ntlmssp_state))"];
"1000488" [label="(Identifier,blob1)"];
"1000141" [label="(Call,vuid = req->vuid)"];
"1000525" [label="(Call,data_blob_free(&blob1))"];
"1000383" [label="(Identifier,vuid)"];
"1000155" [label="(Call,smbpid = req->smbpid)"];
"1000380" [label="(Call,check_spnego_blob_complete(sconn, smbpid, vuid, &blob1))"];
"1000521" [label="(Return,return;)"];
"1000142" [label="(Identifier,vuid)"];
"1000377" [label="(Literal,\"reply_sesssetup_and_X_spnego: invalid vuid.\")"];
"1000315" [label="(ControlStructure,if (!is_partial_auth_vuid(sconn, vuid)))"];
"1000344" [label="(ControlStructure,if (!is_partial_auth_vuid(sconn, vuid)))"];
"1000441" [label="(Identifier,req)"];
"1000374" [label="(Identifier,vuser)"];
"1000318" [label="(Identifier,sconn)"];
"1000407" [label="(Return,return;)"];
"1000351" [label="(Identifier,vuid)"];
"1000490" [label="(Identifier,req)"];
"1000516" [label="(Identifier,OID_NTLMSSP)"];
"1000494" [label="(Call,status = auth_ntlmssp_update(vuser->auth_ntlmssp_state,\n\t\t\t\t\t\tblob1, &chal))"];
"1000483" [label="(Call,invalidate_vuid(sconn, vuid))"];
"1000346" [label="(Call,is_partial_auth_vuid(sconn, vuid))"];
"1000518" [label="(Call,data_blob_free(&chal))"];
"1000349" [label="(Block,)"];
"1000401" [label="(Call,&blob1)"];
"1000394" [label="(Identifier,status)"];
"1000449" [label="(Call,&blob1)"];
"1000391" [label="(ControlStructure,if (!NT_STATUS_EQUAL(status,\n\t\t\t\tNT_STATUS_MORE_PROCESSING_REQUIRED)))"];
"1000320" [label="(Block,)"];
"1000347" [label="(Identifier,sconn)"];
"1000529" [label="(Identifier,req)"];
"1000378" [label="(Call,status = check_spnego_blob_complete(sconn, smbpid, vuid, &blob1))"];
"1000348" [label="(Identifier,vuid)"];
"1000372" [label="(ControlStructure,if (!vuser))"];
"1000389" [label="(Identifier,status)"];
"1000368" [label="(Identifier,vuser)"];
"1000509" [label="(Call,&vuser->auth_ntlmssp_state)"];
"1000390" [label="(Block,)"];
"1000354" [label="(ControlStructure,if (vuid == UID_FIELD_INVALID))"];
"1000508" [label="(Identifier,vuid)"];
"1000395" [label="(Identifier,NT_STATUS_MORE_PROCESSING_REQUIRED)"];
"1000397" [label="(Call,invalidate_vuid(sconn, vuid))"];
"1000402" [label="(Identifier,blob1)"];
"1000328" [label="(Identifier,pad)"];
"1000487" [label="(Call,&blob1)"];
"1000515" [label="(Identifier,status)"];
"1000370" [label="(Identifier,sconn)"];
"1000356" [label="(Identifier,vuid)"];
"1000373" [label="(Call,!vuser)"];
"1000319" [label="(Identifier,vuid)"];
"1000482" [label="(Block,)"];
"1000504" [label="(Call,&blob1)"];
"1000421" [label="(Identifier,blob1)"];
"1000398" [label="(Identifier,sconn)"];
"1000317" [label="(Call,is_partial_auth_vuid(sconn, vuid))"];
"1000422" [label="(Call,&vuser->auth_ntlmssp_state)"];
"1000353" [label="(Identifier,sconn)"];
"1000403" [label="(Call,reply_nterror(req, nt_status_squash(status)))"];
"1000141" -> "1000117"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000148" -> "1000141"  [label="CFG: "];
"1000141" -> "1000532"  [label="DDG: vuid"];
"1000141" -> "1000532"  [label="DDG: req->vuid"];
"1000141" -> "1000317"  [label="DDG: vuid"];
"1000317" -> "1000316"  [label="AST: "];
"1000317" -> "1000319"  [label="CFG: "];
"1000318" -> "1000317"  [label="AST: "];
"1000319" -> "1000317"  [label="AST: "];
"1000316" -> "1000317"  [label="CFG: "];
"1000317" -> "1000316"  [label="DDG: sconn"];
"1000317" -> "1000316"  [label="DDG: vuid"];
"1000161" -> "1000317"  [label="DDG: sconn"];
"1000317" -> "1000324"  [label="DDG: sconn"];
"1000317" -> "1000346"  [label="DDG: sconn"];
"1000317" -> "1000346"  [label="DDG: vuid"];
"1000316" -> "1000315"  [label="AST: "];
"1000323" -> "1000316"  [label="CFG: "];
"1000347" -> "1000316"  [label="CFG: "];
"1000324" -> "1000322"  [label="AST: "];
"1000324" -> "1000326"  [label="CFG: "];
"1000325" -> "1000324"  [label="AST: "];
"1000326" -> "1000324"  [label="AST: "];
"1000322" -> "1000324"  [label="CFG: "];
"1000324" -> "1000532"  [label="DDG: smbpid"];
"1000324" -> "1000322"  [label="DDG: sconn"];
"1000324" -> "1000322"  [label="DDG: smbpid"];
"1000155" -> "1000324"  [label="DDG: smbpid"];
"1000324" -> "1000346"  [label="DDG: sconn"];
"1000324" -> "1000380"  [label="DDG: smbpid"];
"1000322" -> "1000320"  [label="AST: "];
"1000323" -> "1000322"  [label="AST: "];
"1000328" -> "1000322"  [label="CFG: "];
"1000322" -> "1000532"  [label="DDG: get_pending_auth_data(sconn, smbpid)"];
"1000322" -> "1000532"  [label="DDG: pad"];
"1000346" -> "1000345"  [label="AST: "];
"1000346" -> "1000348"  [label="CFG: "];
"1000347" -> "1000346"  [label="AST: "];
"1000348" -> "1000346"  [label="AST: "];
"1000345" -> "1000346"  [label="CFG: "];
"1000346" -> "1000345"  [label="DDG: sconn"];
"1000346" -> "1000345"  [label="DDG: vuid"];
"1000339" -> "1000346"  [label="DDG: vuid"];
"1000346" -> "1000352"  [label="DDG: sconn"];
"1000346" -> "1000369"  [label="DDG: sconn"];
"1000346" -> "1000369"  [label="DDG: vuid"];
"1000345" -> "1000344"  [label="AST: "];
"1000351" -> "1000345"  [label="CFG: "];
"1000368" -> "1000345"  [label="CFG: "];
"1000345" -> "1000532"  [label="DDG: is_partial_auth_vuid(sconn, vuid)"];
"1000345" -> "1000532"  [label="DDG: !is_partial_auth_vuid(sconn, vuid)"];
"1000352" -> "1000350"  [label="AST: "];
"1000352" -> "1000353"  [label="CFG: "];
"1000353" -> "1000352"  [label="AST: "];
"1000350" -> "1000352"  [label="CFG: "];
"1000352" -> "1000532"  [label="DDG: sconn"];
"1000352" -> "1000350"  [label="DDG: sconn"];
"1000352" -> "1000369"  [label="DDG: sconn"];
"1000350" -> "1000349"  [label="AST: "];
"1000351" -> "1000350"  [label="AST: "];
"1000356" -> "1000350"  [label="CFG: "];
"1000350" -> "1000532"  [label="DDG: register_initial_vuid(sconn)"];
"1000350" -> "1000355"  [label="DDG: vuid"];
"1000355" -> "1000354"  [label="AST: "];
"1000355" -> "1000357"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000357" -> "1000355"  [label="AST: "];
"1000361" -> "1000355"  [label="CFG: "];
"1000368" -> "1000355"  [label="CFG: "];
"1000355" -> "1000532"  [label="DDG: vuid"];
"1000355" -> "1000532"  [label="DDG: UID_FIELD_INVALID"];
"1000355" -> "1000532"  [label="DDG: vuid == UID_FIELD_INVALID"];
"1000355" -> "1000369"  [label="DDG: vuid"];
"1000369" -> "1000367"  [label="AST: "];
"1000369" -> "1000371"  [label="CFG: "];
"1000370" -> "1000369"  [label="AST: "];
"1000371" -> "1000369"  [label="AST: "];
"1000367" -> "1000369"  [label="CFG: "];
"1000369" -> "1000367"  [label="DDG: sconn"];
"1000369" -> "1000367"  [label="DDG: vuid"];
"1000369" -> "1000380"  [label="DDG: sconn"];
"1000369" -> "1000380"  [label="DDG: vuid"];
"1000367" -> "1000117"  [label="AST: "];
"1000368" -> "1000367"  [label="AST: "];
"1000374" -> "1000367"  [label="CFG: "];
"1000367" -> "1000532"  [label="DDG: get_partial_auth_user_struct(sconn, vuid)"];
"1000367" -> "1000373"  [label="DDG: vuser"];
"1000373" -> "1000372"  [label="AST: "];
"1000373" -> "1000374"  [label="CFG: "];
"1000374" -> "1000373"  [label="AST: "];
"1000377" -> "1000373"  [label="CFG: "];
"1000379" -> "1000373"  [label="CFG: "];
"1000373" -> "1000532"  [label="DDG: !vuser"];
"1000373" -> "1000532"  [label="DDG: vuser"];
"1000380" -> "1000378"  [label="AST: "];
"1000380" -> "1000384"  [label="CFG: "];
"1000381" -> "1000380"  [label="AST: "];
"1000382" -> "1000380"  [label="AST: "];
"1000383" -> "1000380"  [label="AST: "];
"1000384" -> "1000380"  [label="AST: "];
"1000378" -> "1000380"  [label="CFG: "];
"1000380" -> "1000532"  [label="DDG: vuid"];
"1000380" -> "1000532"  [label="DDG: smbpid"];
"1000380" -> "1000532"  [label="DDG: sconn"];
"1000380" -> "1000378"  [label="DDG: sconn"];
"1000380" -> "1000378"  [label="DDG: smbpid"];
"1000380" -> "1000378"  [label="DDG: vuid"];
"1000380" -> "1000378"  [label="DDG: &blob1"];
"1000155" -> "1000380"  [label="DDG: smbpid"];
"1000380" -> "1000397"  [label="DDG: sconn"];
"1000380" -> "1000397"  [label="DDG: vuid"];
"1000380" -> "1000400"  [label="DDG: &blob1"];
"1000380" -> "1000418"  [label="DDG: vuid"];
"1000380" -> "1000426"  [label="DDG: &blob1"];
"1000380" -> "1000440"  [label="DDG: vuid"];
"1000380" -> "1000448"  [label="DDG: &blob1"];
"1000380" -> "1000483"  [label="DDG: sconn"];
"1000380" -> "1000483"  [label="DDG: vuid"];
"1000380" -> "1000486"  [label="DDG: &blob1"];
"1000380" -> "1000503"  [label="DDG: &blob1"];
"1000380" -> "1000506"  [label="DDG: vuid"];
"1000380" -> "1000525"  [label="DDG: &blob1"];
"1000378" -> "1000117"  [label="AST: "];
"1000379" -> "1000378"  [label="AST: "];
"1000389" -> "1000378"  [label="CFG: "];
"1000378" -> "1000532"  [label="DDG: check_spnego_blob_complete(sconn, smbpid, vuid, &blob1)"];
"1000378" -> "1000388"  [label="DDG: status"];
"1000388" -> "1000387"  [label="AST: "];
"1000388" -> "1000389"  [label="CFG: "];
"1000389" -> "1000388"  [label="AST: "];
"1000387" -> "1000388"  [label="CFG: "];
"1000388" -> "1000532"  [label="DDG: status"];
"1000388" -> "1000387"  [label="DDG: status"];
"1000388" -> "1000393"  [label="DDG: status"];
"1000387" -> "1000386"  [label="AST: "];
"1000394" -> "1000387"  [label="CFG: "];
"1000412" -> "1000387"  [label="CFG: "];
"1000387" -> "1000532"  [label="DDG: NT_STATUS_IS_OK(status)"];
"1000387" -> "1000532"  [label="DDG: !NT_STATUS_IS_OK(status)"];
"1000393" -> "1000392"  [label="AST: "];
"1000393" -> "1000395"  [label="CFG: "];
"1000394" -> "1000393"  [label="AST: "];
"1000395" -> "1000393"  [label="AST: "];
"1000392" -> "1000393"  [label="CFG: "];
"1000393" -> "1000532"  [label="DDG: NT_STATUS_MORE_PROCESSING_REQUIRED"];
"1000393" -> "1000392"  [label="DDG: status"];
"1000393" -> "1000392"  [label="DDG: NT_STATUS_MORE_PROCESSING_REQUIRED"];
"1000393" -> "1000405"  [label="DDG: status"];
"1000392" -> "1000391"  [label="AST: "];
"1000398" -> "1000392"  [label="CFG: "];
"1000402" -> "1000392"  [label="CFG: "];
"1000392" -> "1000532"  [label="DDG: !NT_STATUS_EQUAL(status,\n\t\t\t\tNT_STATUS_MORE_PROCESSING_REQUIRED)"];
"1000392" -> "1000532"  [label="DDG: NT_STATUS_EQUAL(status,\n\t\t\t\tNT_STATUS_MORE_PROCESSING_REQUIRED)"];
"1000405" -> "1000403"  [label="AST: "];
"1000405" -> "1000406"  [label="CFG: "];
"1000406" -> "1000405"  [label="AST: "];
"1000403" -> "1000405"  [label="CFG: "];
"1000405" -> "1000532"  [label="DDG: status"];
"1000405" -> "1000403"  [label="DDG: status"];
"1000403" -> "1000390"  [label="AST: "];
"1000404" -> "1000403"  [label="AST: "];
"1000407" -> "1000403"  [label="CFG: "];
"1000403" -> "1000532"  [label="DDG: nt_status_squash(status)"];
"1000403" -> "1000532"  [label="DDG: req"];
"1000403" -> "1000532"  [label="DDG: reply_nterror(req, nt_status_squash(status))"];
"1000267" -> "1000403"  [label="DDG: req"];
"1000116" -> "1000403"  [label="DDG: req"];
"1000397" -> "1000396"  [label="AST: "];
"1000397" -> "1000399"  [label="CFG: "];
"1000398" -> "1000397"  [label="AST: "];
"1000399" -> "1000397"  [label="AST: "];
"1000402" -> "1000397"  [label="CFG: "];
"1000397" -> "1000532"  [label="DDG: invalidate_vuid(sconn, vuid)"];
"1000397" -> "1000532"  [label="DDG: sconn"];
"1000397" -> "1000532"  [label="DDG: vuid"];
"1000400" -> "1000390"  [label="AST: "];
"1000400" -> "1000401"  [label="CFG: "];
"1000401" -> "1000400"  [label="AST: "];
"1000404" -> "1000400"  [label="CFG: "];
"1000400" -> "1000532"  [label="DDG: &blob1"];
"1000400" -> "1000532"  [label="DDG: data_blob_free(&blob1)"];
"1000418" -> "1000417"  [label="AST: "];
"1000418" -> "1000422"  [label="CFG: "];
"1000419" -> "1000418"  [label="AST: "];
"1000420" -> "1000418"  [label="AST: "];
"1000421" -> "1000418"  [label="AST: "];
"1000422" -> "1000418"  [label="AST: "];
"1000428" -> "1000418"  [label="CFG: "];
"1000418" -> "1000532"  [label="DDG: vuid"];
"1000418" -> "1000532"  [label="DDG: &vuser->auth_ntlmssp_state"];
"1000418" -> "1000532"  [label="DDG: reply_spnego_negotiate(req, vuid, blob1,\n\t\t\t\t       &vuser->auth_ntlmssp_state)"];
"1000418" -> "1000532"  [label="DDG: blob1"];
"1000418" -> "1000532"  [label="DDG: req"];
"1000267" -> "1000418"  [label="DDG: req"];
"1000116" -> "1000418"  [label="DDG: req"];
"1000209" -> "1000418"  [label="DDG: blob1"];
"1000216" -> "1000418"  [label="DDG: blob1.data"];
"1000216" -> "1000418"  [label="DDG: blob1.length"];
"1000426" -> "1000417"  [label="AST: "];
"1000426" -> "1000427"  [label="CFG: "];
"1000427" -> "1000426"  [label="AST: "];
"1000429" -> "1000426"  [label="CFG: "];
"1000426" -> "1000532"  [label="DDG: &blob1"];
"1000426" -> "1000532"  [label="DDG: data_blob_free(&blob1)"];
"1000440" -> "1000439"  [label="AST: "];
"1000440" -> "1000444"  [label="CFG: "];
"1000441" -> "1000440"  [label="AST: "];
"1000442" -> "1000440"  [label="AST: "];
"1000443" -> "1000440"  [label="AST: "];
"1000444" -> "1000440"  [label="AST: "];
"1000450" -> "1000440"  [label="CFG: "];
"1000440" -> "1000532"  [label="DDG: vuid"];
"1000440" -> "1000532"  [label="DDG: blob1"];
"1000440" -> "1000532"  [label="DDG: reply_spnego_auth(req, vuid, blob1,\n\t\t\t\t  &vuser->auth_ntlmssp_state)"];
"1000440" -> "1000532"  [label="DDG: req"];
"1000440" -> "1000532"  [label="DDG: &vuser->auth_ntlmssp_state"];
"1000267" -> "1000440"  [label="DDG: req"];
"1000116" -> "1000440"  [label="DDG: req"];
"1000209" -> "1000440"  [label="DDG: blob1"];
"1000216" -> "1000440"  [label="DDG: blob1.data"];
"1000216" -> "1000440"  [label="DDG: blob1.length"];
"1000448" -> "1000439"  [label="AST: "];
"1000448" -> "1000449"  [label="CFG: "];
"1000449" -> "1000448"  [label="AST: "];
"1000451" -> "1000448"  [label="CFG: "];
"1000448" -> "1000532"  [label="DDG: &blob1"];
"1000448" -> "1000532"  [label="DDG: data_blob_free(&blob1)"];
"1000483" -> "1000482"  [label="AST: "];
"1000483" -> "1000485"  [label="CFG: "];
"1000484" -> "1000483"  [label="AST: "];
"1000485" -> "1000483"  [label="AST: "];
"1000488" -> "1000483"  [label="CFG: "];
"1000483" -> "1000532"  [label="DDG: invalidate_vuid(sconn, vuid)"];
"1000483" -> "1000532"  [label="DDG: vuid"];
"1000483" -> "1000532"  [label="DDG: sconn"];
"1000486" -> "1000482"  [label="AST: "];
"1000486" -> "1000487"  [label="CFG: "];
"1000487" -> "1000486"  [label="AST: "];
"1000490" -> "1000486"  [label="CFG: "];
"1000486" -> "1000532"  [label="DDG: data_blob_free(&blob1)"];
"1000486" -> "1000532"  [label="DDG: &blob1"];
"1000503" -> "1000463"  [label="AST: "];
"1000503" -> "1000504"  [label="CFG: "];
"1000504" -> "1000503"  [label="AST: "];
"1000507" -> "1000503"  [label="CFG: "];
"1000503" -> "1000532"  [label="DDG: data_blob_free(&blob1)"];
"1000503" -> "1000532"  [label="DDG: &blob1"];
"1000506" -> "1000463"  [label="AST: "];
"1000506" -> "1000517"  [label="CFG: "];
"1000507" -> "1000506"  [label="AST: "];
"1000508" -> "1000506"  [label="AST: "];
"1000509" -> "1000506"  [label="AST: "];
"1000513" -> "1000506"  [label="AST: "];
"1000515" -> "1000506"  [label="AST: "];
"1000516" -> "1000506"  [label="AST: "];
"1000517" -> "1000506"  [label="AST: "];
"1000520" -> "1000506"  [label="CFG: "];
"1000506" -> "1000532"  [label="DDG: &vuser->auth_ntlmssp_state"];
"1000506" -> "1000532"  [label="DDG: reply_spnego_ntlmssp(req, vuid,\n\t\t\t\t     &vuser->auth_ntlmssp_state,\n\t\t\t\t     &chal, status, OID_NTLMSSP, false)"];
"1000506" -> "1000532"  [label="DDG: req"];
"1000506" -> "1000532"  [label="DDG: status"];
"1000506" -> "1000532"  [label="DDG: OID_NTLMSSP"];
"1000506" -> "1000532"  [label="DDG: false"];
"1000506" -> "1000532"  [label="DDG: vuid"];
"1000267" -> "1000506"  [label="DDG: req"];
"1000116" -> "1000506"  [label="DDG: req"];
"1000496" -> "1000506"  [label="DDG: vuser->auth_ntlmssp_state"];
"1000496" -> "1000506"  [label="DDG: &chal"];
"1000473" -> "1000506"  [label="DDG: &vuser->auth_ntlmssp_state"];
"1000494" -> "1000506"  [label="DDG: status"];
"1000506" -> "1000518"  [label="DDG: &chal"];
"1000518" -> "1000463"  [label="AST: "];
"1000518" -> "1000519"  [label="CFG: "];
"1000519" -> "1000518"  [label="AST: "];
"1000521" -> "1000518"  [label="CFG: "];
"1000518" -> "1000532"  [label="DDG: &chal"];
"1000518" -> "1000532"  [label="DDG: data_blob_free(&chal)"];
"1000525" -> "1000117"  [label="AST: "];
"1000525" -> "1000526"  [label="CFG: "];
"1000526" -> "1000525"  [label="AST: "];
"1000529" -> "1000525"  [label="CFG: "];
"1000525" -> "1000532"  [label="DDG: data_blob_free(&blob1)"];
"1000525" -> "1000532"  [label="DDG: &blob1"];
}
