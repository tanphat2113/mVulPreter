digraph "0_samba_9280051bfba337458722fb157f3082f93cbd9f2b@API" {
"1000426" [label="(Call,data_blob_free(&blob1))"];
"1000380" [label="(Call,check_spnego_blob_complete(sconn, smbpid, vuid, &blob1))"];
"1000369" [label="(Call,get_partial_auth_user_struct(sconn, vuid))"];
"1000352" [label="(Call,register_initial_vuid(sconn))"];
"1000346" [label="(Call,is_partial_auth_vuid(sconn, vuid))"];
"1000317" [label="(Call,is_partial_auth_vuid(sconn, vuid))"];
"1000161" [label="(Call,*sconn = smbd_server_conn)"];
"1000141" [label="(Call,vuid = req->vuid)"];
"1000324" [label="(Call,get_pending_auth_data(sconn, smbpid))"];
"1000155" [label="(Call,smbpid = req->smbpid)"];
"1000339" [label="(Call,vuid = pad->vuid)"];
"1000334" [label="(Call,(unsigned int)pad->vuid)"];
"1000355" [label="(Call,vuid == UID_FIELD_INVALID)"];
"1000350" [label="(Call,vuid = register_initial_vuid(sconn))"];
"1000361" [label="(Identifier,blob1)"];
"1000143" [label="(Call,req->vuid)"];
"1000400" [label="(Call,data_blob_free(&blob1))"];
"1000161" [label="(Call,*sconn = smbd_server_conn)"];
"1000330" [label="(Call,DEBUG(10,(\"reply_sesssetup_and_X_spnego: found \"\n\t\t\t\t\"pending vuid %u\n\",\n\t\t\t\t(unsigned int)pad->vuid )))"];
"1000532" [label="(MethodReturn,static void)"];
"1000336" [label="(Call,pad->vuid)"];
"1000440" [label="(Call,reply_spnego_auth(req, vuid, blob1,\n\t\t\t\t  &vuser->auth_ntlmssp_state))"];
"1000378" [label="(Call,status = check_spnego_blob_complete(sconn, smbpid, vuid, &blob1))"];
"1000156" [label="(Identifier,smbpid)"];
"1000348" [label="(Identifier,vuid)"];
"1000329" [label="(Block,)"];
"1000141" [label="(Call,vuid = req->vuid)"];
"1000324" [label="(Call,get_pending_auth_data(sconn, smbpid))"];
"1000367" [label="(Call,vuser = get_partial_auth_user_struct(sconn, vuid))"];
"1000525" [label="(Call,data_blob_free(&blob1))"];
"1000368" [label="(Identifier,vuser)"];
"1000383" [label="(Identifier,vuid)"];
"1000155" [label="(Call,smbpid = req->smbpid)"];
"1000380" [label="(Call,check_spnego_blob_complete(sconn, smbpid, vuid, &blob1))"];
"1000381" [label="(Identifier,sconn)"];
"1000354" [label="(ControlStructure,if (vuid == UID_FIELD_INVALID))"];
"1000429" [label="(Return,return;)"];
"1000503" [label="(Call,data_blob_free(&blob1))"];
"1000142" [label="(Identifier,vuid)"];
"1000357" [label="(Identifier,UID_FIELD_INVALID)"];
"1000162" [label="(Identifier,sconn)"];
"1000417" [label="(Block,)"];
"1000418" [label="(Call,reply_spnego_negotiate(req, vuid, blob1,\n\t\t\t\t       &vuser->auth_ntlmssp_state))"];
"1000369" [label="(Call,get_partial_auth_user_struct(sconn, vuid))"];
"1000157" [label="(Call,req->smbpid)"];
"1000397" [label="(Call,invalidate_vuid(sconn, vuid))"];
"1000341" [label="(Call,pad->vuid)"];
"1000345" [label="(Call,!is_partial_auth_vuid(sconn, vuid))"];
"1000117" [label="(Block,)"];
"1000318" [label="(Identifier,sconn)"];
"1000370" [label="(Identifier,sconn)"];
"1000382" [label="(Identifier,smbpid)"];
"1000384" [label="(Call,&blob1)"];
"1000351" [label="(Identifier,vuid)"];
"1000356" [label="(Identifier,vuid)"];
"1000332" [label="(Block,)"];
"1000352" [label="(Call,register_initial_vuid(sconn))"];
"1000326" [label="(Identifier,smbpid)"];
"1000483" [label="(Call,invalidate_vuid(sconn, vuid))"];
"1000371" [label="(Identifier,vuid)"];
"1000346" [label="(Call,is_partial_auth_vuid(sconn, vuid))"];
"1000319" [label="(Identifier,vuid)"];
"1000148" [label="(Identifier,vuser)"];
"1000349" [label="(Block,)"];
"1000163" [label="(Identifier,smbd_server_conn)"];
"1000350" [label="(Call,vuid = register_initial_vuid(sconn))"];
"1000340" [label="(Identifier,vuid)"];
"1000325" [label="(Identifier,sconn)"];
"1000317" [label="(Call,is_partial_auth_vuid(sconn, vuid))"];
"1000448" [label="(Call,data_blob_free(&blob1))"];
"1000355" [label="(Call,vuid == UID_FIELD_INVALID)"];
"1000334" [label="(Call,(unsigned int)pad->vuid)"];
"1000426" [label="(Call,data_blob_free(&blob1))"];
"1000427" [label="(Call,&blob1)"];
"1000506" [label="(Call,reply_spnego_ntlmssp(req, vuid,\n\t\t\t\t     &vuser->auth_ntlmssp_state,\n\t\t\t\t     &chal, status, OID_NTLMSSP, false))"];
"1000486" [label="(Call,data_blob_free(&blob1))"];
"1000353" [label="(Identifier,sconn)"];
"1000316" [label="(Call,!is_partial_auth_vuid(sconn, vuid))"];
"1000322" [label="(Call,pad = get_pending_auth_data(sconn, smbpid))"];
"1000339" [label="(Call,vuid = pad->vuid)"];
"1000165" [label="(Literal,3)"];
"1000347" [label="(Identifier,sconn)"];
"1000426" -> "1000417"  [label="AST: "];
"1000426" -> "1000427"  [label="CFG: "];
"1000427" -> "1000426"  [label="AST: "];
"1000429" -> "1000426"  [label="CFG: "];
"1000426" -> "1000532"  [label="DDG: &blob1"];
"1000426" -> "1000532"  [label="DDG: data_blob_free(&blob1)"];
"1000380" -> "1000426"  [label="DDG: &blob1"];
"1000380" -> "1000378"  [label="AST: "];
"1000380" -> "1000384"  [label="CFG: "];
"1000381" -> "1000380"  [label="AST: "];
"1000382" -> "1000380"  [label="AST: "];
"1000383" -> "1000380"  [label="AST: "];
"1000384" -> "1000380"  [label="AST: "];
"1000378" -> "1000380"  [label="CFG: "];
"1000380" -> "1000532"  [label="DDG: vuid"];
"1000380" -> "1000532"  [label="DDG: smbpid"];
"1000380" -> "1000532"  [label="DDG: sconn"];
"1000380" -> "1000378"  [label="DDG: sconn"];
"1000380" -> "1000378"  [label="DDG: smbpid"];
"1000380" -> "1000378"  [label="DDG: vuid"];
"1000380" -> "1000378"  [label="DDG: &blob1"];
"1000369" -> "1000380"  [label="DDG: sconn"];
"1000369" -> "1000380"  [label="DDG: vuid"];
"1000324" -> "1000380"  [label="DDG: smbpid"];
"1000155" -> "1000380"  [label="DDG: smbpid"];
"1000380" -> "1000397"  [label="DDG: sconn"];
"1000380" -> "1000397"  [label="DDG: vuid"];
"1000380" -> "1000400"  [label="DDG: &blob1"];
"1000380" -> "1000418"  [label="DDG: vuid"];
"1000380" -> "1000440"  [label="DDG: vuid"];
"1000380" -> "1000448"  [label="DDG: &blob1"];
"1000380" -> "1000483"  [label="DDG: sconn"];
"1000380" -> "1000483"  [label="DDG: vuid"];
"1000380" -> "1000486"  [label="DDG: &blob1"];
"1000380" -> "1000503"  [label="DDG: &blob1"];
"1000380" -> "1000506"  [label="DDG: vuid"];
"1000380" -> "1000525"  [label="DDG: &blob1"];
"1000369" -> "1000367"  [label="AST: "];
"1000369" -> "1000371"  [label="CFG: "];
"1000370" -> "1000369"  [label="AST: "];
"1000371" -> "1000369"  [label="AST: "];
"1000367" -> "1000369"  [label="CFG: "];
"1000369" -> "1000367"  [label="DDG: sconn"];
"1000369" -> "1000367"  [label="DDG: vuid"];
"1000352" -> "1000369"  [label="DDG: sconn"];
"1000346" -> "1000369"  [label="DDG: sconn"];
"1000346" -> "1000369"  [label="DDG: vuid"];
"1000355" -> "1000369"  [label="DDG: vuid"];
"1000352" -> "1000350"  [label="AST: "];
"1000352" -> "1000353"  [label="CFG: "];
"1000353" -> "1000352"  [label="AST: "];
"1000350" -> "1000352"  [label="CFG: "];
"1000352" -> "1000532"  [label="DDG: sconn"];
"1000352" -> "1000350"  [label="DDG: sconn"];
"1000346" -> "1000352"  [label="DDG: sconn"];
"1000346" -> "1000345"  [label="AST: "];
"1000346" -> "1000348"  [label="CFG: "];
"1000347" -> "1000346"  [label="AST: "];
"1000348" -> "1000346"  [label="AST: "];
"1000345" -> "1000346"  [label="CFG: "];
"1000346" -> "1000345"  [label="DDG: sconn"];
"1000346" -> "1000345"  [label="DDG: vuid"];
"1000317" -> "1000346"  [label="DDG: sconn"];
"1000317" -> "1000346"  [label="DDG: vuid"];
"1000324" -> "1000346"  [label="DDG: sconn"];
"1000339" -> "1000346"  [label="DDG: vuid"];
"1000317" -> "1000316"  [label="AST: "];
"1000317" -> "1000319"  [label="CFG: "];
"1000318" -> "1000317"  [label="AST: "];
"1000319" -> "1000317"  [label="AST: "];
"1000316" -> "1000317"  [label="CFG: "];
"1000317" -> "1000316"  [label="DDG: sconn"];
"1000317" -> "1000316"  [label="DDG: vuid"];
"1000161" -> "1000317"  [label="DDG: sconn"];
"1000141" -> "1000317"  [label="DDG: vuid"];
"1000317" -> "1000324"  [label="DDG: sconn"];
"1000161" -> "1000117"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000165" -> "1000161"  [label="CFG: "];
"1000161" -> "1000532"  [label="DDG: smbd_server_conn"];
"1000161" -> "1000532"  [label="DDG: sconn"];
"1000141" -> "1000117"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000148" -> "1000141"  [label="CFG: "];
"1000141" -> "1000532"  [label="DDG: vuid"];
"1000141" -> "1000532"  [label="DDG: req->vuid"];
"1000324" -> "1000322"  [label="AST: "];
"1000324" -> "1000326"  [label="CFG: "];
"1000325" -> "1000324"  [label="AST: "];
"1000326" -> "1000324"  [label="AST: "];
"1000322" -> "1000324"  [label="CFG: "];
"1000324" -> "1000532"  [label="DDG: smbpid"];
"1000324" -> "1000322"  [label="DDG: sconn"];
"1000324" -> "1000322"  [label="DDG: smbpid"];
"1000155" -> "1000324"  [label="DDG: smbpid"];
"1000155" -> "1000117"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000157" -> "1000155"  [label="AST: "];
"1000162" -> "1000155"  [label="CFG: "];
"1000155" -> "1000532"  [label="DDG: req->smbpid"];
"1000155" -> "1000532"  [label="DDG: smbpid"];
"1000339" -> "1000329"  [label="AST: "];
"1000339" -> "1000341"  [label="CFG: "];
"1000340" -> "1000339"  [label="AST: "];
"1000341" -> "1000339"  [label="AST: "];
"1000347" -> "1000339"  [label="CFG: "];
"1000339" -> "1000532"  [label="DDG: pad->vuid"];
"1000334" -> "1000339"  [label="DDG: pad->vuid"];
"1000334" -> "1000332"  [label="AST: "];
"1000334" -> "1000336"  [label="CFG: "];
"1000335" -> "1000334"  [label="AST: "];
"1000336" -> "1000334"  [label="AST: "];
"1000330" -> "1000334"  [label="CFG: "];
"1000334" -> "1000532"  [label="DDG: (unsigned int)pad->vuid"];
"1000355" -> "1000354"  [label="AST: "];
"1000355" -> "1000357"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000357" -> "1000355"  [label="AST: "];
"1000361" -> "1000355"  [label="CFG: "];
"1000368" -> "1000355"  [label="CFG: "];
"1000355" -> "1000532"  [label="DDG: vuid"];
"1000355" -> "1000532"  [label="DDG: UID_FIELD_INVALID"];
"1000355" -> "1000532"  [label="DDG: vuid == UID_FIELD_INVALID"];
"1000350" -> "1000355"  [label="DDG: vuid"];
"1000350" -> "1000349"  [label="AST: "];
"1000351" -> "1000350"  [label="AST: "];
"1000356" -> "1000350"  [label="CFG: "];
"1000350" -> "1000532"  [label="DDG: register_initial_vuid(sconn)"];
}
