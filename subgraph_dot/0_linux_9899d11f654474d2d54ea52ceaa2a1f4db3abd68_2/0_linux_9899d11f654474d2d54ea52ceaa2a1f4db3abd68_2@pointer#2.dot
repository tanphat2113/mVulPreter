digraph "0_linux_9899d11f654474d2d54ea52ceaa2a1f4db3abd68_2@pointer" {
"1000127" [label="(Call,child->state == __TASK_TRACED)"];
"1000126" [label="(Call,WARN_ON(child->state == __TASK_TRACED))"];
"1000152" [label="(Call,wait_task_inactive(child, __TASK_TRACED))"];
"1000151" [label="(Call,!wait_task_inactive(child, __TASK_TRACED))"];
"1000157" [label="(Call,child->state == __TASK_TRACED)"];
"1000156" [label="(Call,WARN_ON(child->state == __TASK_TRACED))"];
"1000126" [label="(Call,WARN_ON(child->state == __TASK_TRACED))"];
"1000128" [label="(Call,child->state)"];
"1000151" [label="(Call,!wait_task_inactive(child, __TASK_TRACED))"];
"1000167" [label="(Identifier,ret)"];
"1000157" [label="(Call,child->state == __TASK_TRACED)"];
"1000155" [label="(Block,)"];
"1000104" [label="(MethodParameterIn,struct task_struct *child)"];
"1000161" [label="(Identifier,__TASK_TRACED)"];
"1000156" [label="(Call,WARN_ON(child->state == __TASK_TRACED))"];
"1000135" [label="(Call,ptrace_freeze_traced(child))"];
"1000153" [label="(Identifier,child)"];
"1000131" [label="(Identifier,__TASK_TRACED)"];
"1000159" [label="(Identifier,child)"];
"1000125" [label="(Block,)"];
"1000127" [label="(Call,child->state == __TASK_TRACED)"];
"1000168" [label="(MethodReturn,static int)"];
"1000163" [label="(Identifier,ret)"];
"1000154" [label="(Identifier,__TASK_TRACED)"];
"1000134" [label="(Identifier,ignore_state)"];
"1000152" [label="(Call,wait_task_inactive(child, __TASK_TRACED))"];
"1000150" [label="(ControlStructure,if (!wait_task_inactive(child, __TASK_TRACED)))"];
"1000158" [label="(Call,child->state)"];
"1000127" -> "1000126"  [label="AST: "];
"1000127" -> "1000131"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000131" -> "1000127"  [label="AST: "];
"1000126" -> "1000127"  [label="CFG: "];
"1000127" -> "1000168"  [label="DDG: child->state"];
"1000127" -> "1000168"  [label="DDG: __TASK_TRACED"];
"1000127" -> "1000126"  [label="DDG: child->state"];
"1000127" -> "1000126"  [label="DDG: __TASK_TRACED"];
"1000127" -> "1000152"  [label="DDG: __TASK_TRACED"];
"1000127" -> "1000157"  [label="DDG: child->state"];
"1000126" -> "1000125"  [label="AST: "];
"1000134" -> "1000126"  [label="CFG: "];
"1000126" -> "1000168"  [label="DDG: WARN_ON(child->state == __TASK_TRACED)"];
"1000126" -> "1000168"  [label="DDG: child->state == __TASK_TRACED"];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000154"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000151" -> "1000152"  [label="CFG: "];
"1000152" -> "1000168"  [label="DDG: __TASK_TRACED"];
"1000152" -> "1000168"  [label="DDG: child"];
"1000152" -> "1000151"  [label="DDG: child"];
"1000152" -> "1000151"  [label="DDG: __TASK_TRACED"];
"1000135" -> "1000152"  [label="DDG: child"];
"1000104" -> "1000152"  [label="DDG: child"];
"1000152" -> "1000157"  [label="DDG: __TASK_TRACED"];
"1000151" -> "1000150"  [label="AST: "];
"1000159" -> "1000151"  [label="CFG: "];
"1000167" -> "1000151"  [label="CFG: "];
"1000151" -> "1000168"  [label="DDG: !wait_task_inactive(child, __TASK_TRACED)"];
"1000151" -> "1000168"  [label="DDG: wait_task_inactive(child, __TASK_TRACED)"];
"1000157" -> "1000156"  [label="AST: "];
"1000157" -> "1000161"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000161" -> "1000157"  [label="AST: "];
"1000156" -> "1000157"  [label="CFG: "];
"1000157" -> "1000168"  [label="DDG: child->state"];
"1000157" -> "1000168"  [label="DDG: __TASK_TRACED"];
"1000157" -> "1000156"  [label="DDG: child->state"];
"1000157" -> "1000156"  [label="DDG: __TASK_TRACED"];
"1000156" -> "1000155"  [label="AST: "];
"1000163" -> "1000156"  [label="CFG: "];
"1000156" -> "1000168"  [label="DDG: child->state == __TASK_TRACED"];
"1000156" -> "1000168"  [label="DDG: WARN_ON(child->state == __TASK_TRACED)"];
}
