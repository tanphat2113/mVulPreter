digraph "0_abrt_8939398b82006ba1fec4ed491339fc075f43fc7c_0@API" {
"1000217" [label="(Call,*dd = dd_opendir(dirname, DD_OPEN_READONLY))"];
"1000219" [label="(Call,dd_opendir(dirname, DD_OPEN_READONLY))"];
"1000154" [label="(Call,lstat(dirname, &statbuf))"];
"1000138" [label="(Call,dir_is_in_dump_location(dirname))"];
"1000134" [label="(MethodParameterIn,const char *dirname)"];
"1000225" [label="(Call,dd && problem_dump_dir_is_complete(dd))"];
"1000223" [label="(Call,complete = dd && problem_dump_dir_is_complete(dd))"];
"1000229" [label="(Call,dd_close(dd))"];
"1000227" [label="(Call,problem_dump_dir_is_complete(dd))"];
"1000217" [label="(Call,*dd = dd_opendir(dirname, DD_OPEN_READONLY))"];
"1000153" [label="(Call,lstat(dirname, &statbuf) != 0)"];
"1000226" [label="(Identifier,dd)"];
"1000211" [label="(Call,error_msg(\"Problem directory '%s' isn't owned by root:abrt or others are not restricted from access\", dirname))"];
"1000154" [label="(Call,lstat(dirname, &statbuf))"];
"1000219" [label="(Call,dd_opendir(dirname, DD_OPEN_READONLY))"];
"1000542" [label="(Call,strrchr(dirname, '/'))"];
"1000155" [label="(Identifier,dirname)"];
"1000468" [label="(Call,strcmp(dd->dd_dirname, dirname) != 0)"];
"1000417" [label="(Call,dup_of_dir ? dup_of_dir : dirname)"];
"1000256" [label="(Call,error_msg(\"Problem directory '%s' can't be accessed by user with uid %ld\", dirname, (long)client_uid))"];
"1000251" [label="(Call,error_msg(\"Path '%s' isn't problem directory\", dirname))"];
"1000141" [label="(Call,error_msg(\"Bad problem directory name '%s', should start with: '%s'\", dirname, g_settings_dump_location))"];
"1000232" [label="(Identifier,complete)"];
"1000223" [label="(Call,complete = dd && problem_dump_dir_is_complete(dd))"];
"1000138" [label="(Call,dir_is_in_dump_location(dirname))"];
"1000218" [label="(Identifier,dd)"];
"1000242" [label="(Call,dump_dir_accessible_by_uid(dirname, client_uid))"];
"1000230" [label="(Identifier,dd)"];
"1000415" [label="(Call,*work_dir = (dup_of_dir ? dup_of_dir : dirname))"];
"1000158" [label="(Literal,0)"];
"1000582" [label="(Call,delete_dump_dir(dirname))"];
"1000220" [label="(Identifier,dirname)"];
"1000234" [label="(Call,error_msg(\"Problem directory '%s' has already been processed\", dirname))"];
"1000139" [label="(Identifier,dirname)"];
"1000229" [label="(Call,dd_close(dd))"];
"1000137" [label="(Call,!dir_is_in_dump_location(dirname))"];
"1000479" [label="(Call,dd_opendir(dirname, DD_OPEN_READONLY))"];
"1000469" [label="(Call,strcmp(dd->dd_dirname, dirname))"];
"1000408" [label="(Call,log(\"'post-create' on '%s' exited with %d\",\n                            dirname, WEXITSTATUS(status)))"];
"1000221" [label="(Identifier,DD_OPEN_READONLY)"];
"1000551" [label="(Call,delete_dump_dir(dirname))"];
"1000228" [label="(Identifier,dd)"];
"1000227" [label="(Call,problem_dump_dir_is_complete(dd))"];
"1000224" [label="(Identifier,complete)"];
"1000593" [label="(MethodReturn,static int)"];
"1000268" [label="(Call,spawn_event_handler_child(dirname, \"post-create\", &child_stdout_fd))"];
"1000165" [label="(Call,error_msg(\"Path '%s' isn't directory\", dirname))"];
"1000149" [label="(Block,)"];
"1000225" [label="(Call,dd && problem_dump_dir_is_complete(dd))"];
"1000156" [label="(Call,&statbuf)"];
"1000398" [label="(Call,log(\"'post-create' on '%s' killed by signal %d\",\n                            dirname, WTERMSIG(status)))"];
"1000579" [label="(Call,log_warning(\"Deleting problem directory '%s'\", dirname))"];
"1000134" [label="(MethodParameterIn,const char *dirname)"];
"1000217" -> "1000149"  [label="AST: "];
"1000217" -> "1000219"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000219" -> "1000217"  [label="AST: "];
"1000224" -> "1000217"  [label="CFG: "];
"1000217" -> "1000593"  [label="DDG: dd_opendir(dirname, DD_OPEN_READONLY)"];
"1000219" -> "1000217"  [label="DDG: dirname"];
"1000219" -> "1000217"  [label="DDG: DD_OPEN_READONLY"];
"1000217" -> "1000225"  [label="DDG: dd"];
"1000217" -> "1000227"  [label="DDG: dd"];
"1000219" -> "1000221"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000221" -> "1000219"  [label="AST: "];
"1000219" -> "1000593"  [label="DDG: DD_OPEN_READONLY"];
"1000154" -> "1000219"  [label="DDG: dirname"];
"1000134" -> "1000219"  [label="DDG: dirname"];
"1000219" -> "1000234"  [label="DDG: dirname"];
"1000219" -> "1000268"  [label="DDG: dirname"];
"1000219" -> "1000479"  [label="DDG: DD_OPEN_READONLY"];
"1000154" -> "1000153"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000156" -> "1000154"  [label="AST: "];
"1000158" -> "1000154"  [label="CFG: "];
"1000154" -> "1000593"  [label="DDG: dirname"];
"1000154" -> "1000593"  [label="DDG: &statbuf"];
"1000154" -> "1000153"  [label="DDG: dirname"];
"1000154" -> "1000153"  [label="DDG: &statbuf"];
"1000138" -> "1000154"  [label="DDG: dirname"];
"1000134" -> "1000154"  [label="DDG: dirname"];
"1000154" -> "1000165"  [label="DDG: dirname"];
"1000154" -> "1000211"  [label="DDG: dirname"];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000139"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000137" -> "1000138"  [label="CFG: "];
"1000138" -> "1000137"  [label="DDG: dirname"];
"1000134" -> "1000138"  [label="DDG: dirname"];
"1000138" -> "1000141"  [label="DDG: dirname"];
"1000138" -> "1000242"  [label="DDG: dirname"];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000593"  [label="DDG: dirname"];
"1000134" -> "1000141"  [label="DDG: dirname"];
"1000134" -> "1000165"  [label="DDG: dirname"];
"1000134" -> "1000211"  [label="DDG: dirname"];
"1000134" -> "1000234"  [label="DDG: dirname"];
"1000134" -> "1000242"  [label="DDG: dirname"];
"1000134" -> "1000251"  [label="DDG: dirname"];
"1000134" -> "1000256"  [label="DDG: dirname"];
"1000134" -> "1000268"  [label="DDG: dirname"];
"1000134" -> "1000398"  [label="DDG: dirname"];
"1000134" -> "1000408"  [label="DDG: dirname"];
"1000134" -> "1000415"  [label="DDG: dirname"];
"1000134" -> "1000417"  [label="DDG: dirname"];
"1000134" -> "1000468"  [label="DDG: dirname"];
"1000134" -> "1000469"  [label="DDG: dirname"];
"1000134" -> "1000479"  [label="DDG: dirname"];
"1000134" -> "1000542"  [label="DDG: dirname"];
"1000134" -> "1000551"  [label="DDG: dirname"];
"1000134" -> "1000579"  [label="DDG: dirname"];
"1000134" -> "1000582"  [label="DDG: dirname"];
"1000225" -> "1000223"  [label="AST: "];
"1000225" -> "1000226"  [label="CFG: "];
"1000225" -> "1000227"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000227" -> "1000225"  [label="AST: "];
"1000223" -> "1000225"  [label="CFG: "];
"1000225" -> "1000593"  [label="DDG: problem_dump_dir_is_complete(dd)"];
"1000225" -> "1000223"  [label="DDG: dd"];
"1000225" -> "1000223"  [label="DDG: problem_dump_dir_is_complete(dd)"];
"1000227" -> "1000225"  [label="DDG: dd"];
"1000225" -> "1000229"  [label="DDG: dd"];
"1000223" -> "1000149"  [label="AST: "];
"1000224" -> "1000223"  [label="AST: "];
"1000230" -> "1000223"  [label="CFG: "];
"1000223" -> "1000593"  [label="DDG: dd && problem_dump_dir_is_complete(dd)"];
"1000223" -> "1000593"  [label="DDG: complete"];
"1000229" -> "1000149"  [label="AST: "];
"1000229" -> "1000230"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000232" -> "1000229"  [label="CFG: "];
"1000229" -> "1000593"  [label="DDG: dd_close(dd)"];
"1000229" -> "1000593"  [label="DDG: dd"];
"1000227" -> "1000228"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
}
