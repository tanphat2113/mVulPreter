digraph "0_linux_410dd3cf4c9b36f27ed4542ee18b1af5e68645a4_2@pointer" {
"1000726" [label="(Call,oldslp->flags & 1)"];
"1000709" [label="(Call,oldslp->\n\t\t\t\t\t\t      flags & 1)"];
"1000726" [label="(Call,oldslp->flags & 1)"];
"1000708" [label="(Call,(oldslp->\n\t\t\t\t\t\t      flags & 1) == 0)"];
"1000696" [label="(Call,((rr->u.SL.\n\t\t\t\t\t\t      flags & 1) != 0)\n\t\t\t\t\t\t    &&\n\t\t\t\t\t\t    ((oldslp->\n\t\t\t\t\t\t      flags & 1) == 0))"];
"1000725" [label="(Call,(oldslp->flags & 1) == 0)"];
"1000722" [label="(Call,!rootflag\n\t\t\t\t\t    && (oldslp->flags & 1) == 0)"];
"1000708" [label="(Call,(oldslp->\n\t\t\t\t\t\t      flags & 1) == 0)"];
"1000697" [label="(Call,(rr->u.SL.\n\t\t\t\t\t\t      flags & 1) != 0)"];
"1000727" [label="(Call,oldslp->flags)"];
"1001007" [label="(MethodReturn,RET)"];
"1000726" [label="(Call,oldslp->flags & 1)"];
"1000730" [label="(Literal,1)"];
"1000734" [label="(Identifier,inode)"];
"1000722" [label="(Call,!rootflag\n\t\t\t\t\t    && (oldslp->flags & 1) == 0)"];
"1000723" [label="(Call,!rootflag)"];
"1000731" [label="(Literal,0)"];
"1000714" [label="(Literal,0)"];
"1000696" [label="(Call,((rr->u.SL.\n\t\t\t\t\t\t      flags & 1) != 0)\n\t\t\t\t\t\t    &&\n\t\t\t\t\t\t    ((oldslp->\n\t\t\t\t\t\t      flags & 1) == 0))"];
"1000618" [label="(Identifier,slen)"];
"1000721" [label="(ControlStructure,if (!rootflag\n\t\t\t\t\t    && (oldslp->flags & 1) == 0))"];
"1000710" [label="(Call,oldslp->\n\t\t\t\t\t\t      flags)"];
"1000709" [label="(Call,oldslp->\n\t\t\t\t\t\t      flags & 1)"];
"1000725" [label="(Call,(oldslp->flags & 1) == 0)"];
"1000717" [label="(Identifier,inode)"];
"1000713" [label="(Literal,1)"];
"1000720" [label="(ControlStructure,break;)"];
"1000695" [label="(ControlStructure,if (((rr->u.SL.\n\t\t\t\t\t\t      flags & 1) != 0)\n\t\t\t\t\t\t    &&\n\t\t\t\t\t\t    ((oldslp->\n\t\t\t\t\t\t      flags & 1) == 0)))"];
"1000726" -> "1000725"  [label="AST: "];
"1000726" -> "1000730"  [label="CFG: "];
"1000727" -> "1000726"  [label="AST: "];
"1000730" -> "1000726"  [label="AST: "];
"1000731" -> "1000726"  [label="CFG: "];
"1000726" -> "1001007"  [label="DDG: oldslp->flags"];
"1000726" -> "1000709"  [label="DDG: oldslp->flags"];
"1000726" -> "1000725"  [label="DDG: oldslp->flags"];
"1000726" -> "1000725"  [label="DDG: 1"];
"1000709" -> "1000726"  [label="DDG: oldslp->\n\t\t\t\t\t\t      flags"];
"1000709" -> "1000708"  [label="AST: "];
"1000709" -> "1000713"  [label="CFG: "];
"1000710" -> "1000709"  [label="AST: "];
"1000713" -> "1000709"  [label="AST: "];
"1000714" -> "1000709"  [label="CFG: "];
"1000709" -> "1001007"  [label="DDG: oldslp->\n\t\t\t\t\t\t      flags"];
"1000709" -> "1000708"  [label="DDG: oldslp->\n\t\t\t\t\t\t      flags"];
"1000709" -> "1000708"  [label="DDG: 1"];
"1000708" -> "1000696"  [label="AST: "];
"1000708" -> "1000714"  [label="CFG: "];
"1000714" -> "1000708"  [label="AST: "];
"1000696" -> "1000708"  [label="CFG: "];
"1000708" -> "1001007"  [label="DDG: oldslp->\n\t\t\t\t\t\t      flags & 1"];
"1000708" -> "1000696"  [label="DDG: oldslp->\n\t\t\t\t\t\t      flags & 1"];
"1000708" -> "1000696"  [label="DDG: 0"];
"1000696" -> "1000695"  [label="AST: "];
"1000696" -> "1000697"  [label="CFG: "];
"1000697" -> "1000696"  [label="AST: "];
"1000717" -> "1000696"  [label="CFG: "];
"1000720" -> "1000696"  [label="CFG: "];
"1000696" -> "1001007"  [label="DDG: ((rr->u.SL.\n\t\t\t\t\t\t      flags & 1) != 0)\n\t\t\t\t\t\t    &&\n\t\t\t\t\t\t    ((oldslp->\n\t\t\t\t\t\t      flags & 1) == 0)"];
"1000696" -> "1001007"  [label="DDG: (rr->u.SL.\n\t\t\t\t\t\t      flags & 1) != 0"];
"1000696" -> "1001007"  [label="DDG: (oldslp->\n\t\t\t\t\t\t      flags & 1) == 0"];
"1000697" -> "1000696"  [label="DDG: rr->u.SL.\n\t\t\t\t\t\t      flags & 1"];
"1000697" -> "1000696"  [label="DDG: 0"];
"1000725" -> "1000722"  [label="AST: "];
"1000725" -> "1000731"  [label="CFG: "];
"1000731" -> "1000725"  [label="AST: "];
"1000722" -> "1000725"  [label="CFG: "];
"1000725" -> "1001007"  [label="DDG: oldslp->flags & 1"];
"1000725" -> "1000722"  [label="DDG: oldslp->flags & 1"];
"1000725" -> "1000722"  [label="DDG: 0"];
"1000722" -> "1000721"  [label="AST: "];
"1000722" -> "1000723"  [label="CFG: "];
"1000723" -> "1000722"  [label="AST: "];
"1000618" -> "1000722"  [label="CFG: "];
"1000734" -> "1000722"  [label="CFG: "];
"1000722" -> "1001007"  [label="DDG: (oldslp->flags & 1) == 0"];
"1000722" -> "1001007"  [label="DDG: !rootflag\n\t\t\t\t\t    && (oldslp->flags & 1) == 0"];
"1000722" -> "1001007"  [label="DDG: !rootflag"];
"1000723" -> "1000722"  [label="DDG: rootflag"];
}
