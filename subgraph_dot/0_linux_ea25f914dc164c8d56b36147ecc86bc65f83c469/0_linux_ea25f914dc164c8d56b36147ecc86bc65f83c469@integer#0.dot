digraph "0_linux_ea25f914dc164c8d56b36147ecc86bc65f83c469@integer" {
"1000191" [label="(Call,off = regs[regno].off + regs[regno].var_off.value)"];
"1000208" [label="(Call,off >= 0)"];
"1000207" [label="(Call,off >= 0 || off < -MAX_BPF_STACK || off + access_size > 0 ||\n\t    access_size < 0 || (access_size == 0 && !zero_size_allowed))"];
"1000212" [label="(Call,off < -MAX_BPF_STACK)"];
"1000211" [label="(Call,off < -MAX_BPF_STACK || off + access_size > 0 ||\n\t    access_size < 0 || (access_size == 0 && !zero_size_allowed))"];
"1000217" [label="(Call,off + access_size > 0)"];
"1000216" [label="(Call,off + access_size > 0 ||\n\t    access_size < 0 || (access_size == 0 && !zero_size_allowed))"];
"1000218" [label="(Call,off + access_size)"];
"1000233" [label="(Call,verbose(env, \"invalid stack type R%d off=%d access_size=%d\n\",\n\t\t\tregno, off, access_size))"];
"1000251" [label="(Call,-off)"];
"1000243" [label="(Call,env->prog->aux->stack_depth < -off)"];
"1000261" [label="(Call,-off)"];
"1000253" [label="(Call,env->prog->aux->stack_depth = -off)"];
"1000295" [label="(Call,-(off + i))"];
"1000294" [label="(Call,-(off + i) - 1)"];
"1000292" [label="(Call,slot = -(off + i) - 1)"];
"1000302" [label="(Call,slot / BPF_REG_SIZE)"];
"1000300" [label="(Call,spi = slot / BPF_REG_SIZE)"];
"1000307" [label="(Call,state->allocated_stack <= slot)"];
"1000306" [label="(Call,state->allocated_stack <= slot ||\n\t\t    state->stack[spi].slot_type[slot % BPF_REG_SIZE] !=\n\t\t\tSTACK_MISC)"];
"1000321" [label="(Call,slot % BPF_REG_SIZE)"];
"1000296" [label="(Call,off + i)"];
"1000326" [label="(Call,verbose(env, \"invalid indirect read from stack off %d+%d size %d\n\",\n\t\t\t\toff, i, access_size))"];
"1000337" [label="(MethodReturn,static int)"];
"1000327" [label="(Identifier,env)"];
"1000334" [label="(Identifier,EACCES)"];
"1000244" [label="(Call,env->prog->aux->stack_depth)"];
"1000296" [label="(Call,off + i)"];
"1000321" [label="(Call,slot % BPF_REG_SIZE)"];
"1000294" [label="(Call,-(off + i) - 1)"];
"1000237" [label="(Identifier,off)"];
"1000105" [label="(MethodParameterIn,int access_size)"];
"1000323" [label="(Identifier,BPF_REG_SIZE)"];
"1000330" [label="(Identifier,i)"];
"1000328" [label="(Literal,\"invalid indirect read from stack off %d+%d size %d\n\")"];
"1000235" [label="(Literal,\"invalid stack type R%d off=%d access_size=%d\n\")"];
"1000108" [label="(Block,)"];
"1000103" [label="(MethodParameterIn,struct bpf_verifier_env *env)"];
"1000242" [label="(ControlStructure,if (env->prog->aux->stack_depth < -off))"];
"1000227" [label="(Call,access_size == 0)"];
"1000265" [label="(Identifier,meta)"];
"1000251" [label="(Call,-off)"];
"1000261" [label="(Call,-off)"];
"1000325" [label="(Block,)"];
"1000312" [label="(Call,state->stack[spi].slot_type[slot % BPF_REG_SIZE] !=\n\t\t\tSTACK_MISC)"];
"1000253" [label="(Call,env->prog->aux->stack_depth = -off)"];
"1000300" [label="(Call,spi = slot / BPF_REG_SIZE)"];
"1000301" [label="(Identifier,spi)"];
"1000223" [label="(Call,access_size < 0)"];
"1000308" [label="(Call,state->allocated_stack)"];
"1000317" [label="(Identifier,state)"];
"1000206" [label="(ControlStructure,if (off >= 0 || off < -MAX_BPF_STACK || off + access_size > 0 ||\n\t    access_size < 0 || (access_size == 0 && !zero_size_allowed)))"];
"1000192" [label="(Identifier,off)"];
"1000233" [label="(Call,verbose(env, \"invalid stack type R%d off=%d access_size=%d\n\",\n\t\t\tregno, off, access_size))"];
"1000219" [label="(Identifier,off)"];
"1000216" [label="(Call,off + access_size > 0 ||\n\t    access_size < 0 || (access_size == 0 && !zero_size_allowed))"];
"1000257" [label="(Identifier,env)"];
"1000232" [label="(Block,)"];
"1000254" [label="(Call,env->prog->aux->stack_depth)"];
"1000311" [label="(Identifier,slot)"];
"1000209" [label="(Identifier,off)"];
"1000331" [label="(Identifier,access_size)"];
"1000222" [label="(Call,access_size < 0 || (access_size == 0 && !zero_size_allowed))"];
"1000290" [label="(Identifier,i)"];
"1000252" [label="(Identifier,off)"];
"1000309" [label="(Identifier,state)"];
"1000221" [label="(Literal,0)"];
"1000297" [label="(Identifier,off)"];
"1000211" [label="(Call,off < -MAX_BPF_STACK || off + access_size > 0 ||\n\t    access_size < 0 || (access_size == 0 && !zero_size_allowed))"];
"1000313" [label="(Call,state->stack[spi].slot_type[slot % BPF_REG_SIZE])"];
"1000298" [label="(Identifier,i)"];
"1000220" [label="(Identifier,access_size)"];
"1000104" [label="(MethodParameterIn,int regno)"];
"1000193" [label="(Call,regs[regno].off + regs[regno].var_off.value)"];
"1000305" [label="(ControlStructure,if (state->allocated_stack <= slot ||\n\t\t    state->stack[spi].slot_type[slot % BPF_REG_SIZE] !=\n\t\t\tSTACK_MISC))"];
"1000326" [label="(Call,verbose(env, \"invalid indirect read from stack off %d+%d size %d\n\",\n\t\t\t\toff, i, access_size))"];
"1000207" [label="(Call,off >= 0 || off < -MAX_BPF_STACK || off + access_size > 0 ||\n\t    access_size < 0 || (access_size == 0 && !zero_size_allowed))"];
"1000238" [label="(Identifier,access_size)"];
"1000292" [label="(Call,slot = -(off + i) - 1)"];
"1000303" [label="(Identifier,slot)"];
"1000304" [label="(Identifier,BPF_REG_SIZE)"];
"1000241" [label="(Identifier,EACCES)"];
"1000306" [label="(Call,state->allocated_stack <= slot ||\n\t\t    state->stack[spi].slot_type[slot % BPF_REG_SIZE] !=\n\t\t\tSTACK_MISC)"];
"1000329" [label="(Identifier,off)"];
"1000212" [label="(Call,off < -MAX_BPF_STACK)"];
"1000214" [label="(Call,-MAX_BPF_STACK)"];
"1000236" [label="(Identifier,regno)"];
"1000247" [label="(Identifier,env)"];
"1000234" [label="(Identifier,env)"];
"1000217" [label="(Call,off + access_size > 0)"];
"1000191" [label="(Call,off = regs[regno].off + regs[regno].var_off.value)"];
"1000295" [label="(Call,-(off + i))"];
"1000224" [label="(Identifier,access_size)"];
"1000286" [label="(Call,i < access_size)"];
"1000307" [label="(Call,state->allocated_stack <= slot)"];
"1000322" [label="(Identifier,slot)"];
"1000243" [label="(Call,env->prog->aux->stack_depth < -off)"];
"1000208" [label="(Call,off >= 0)"];
"1000218" [label="(Call,off + access_size)"];
"1000299" [label="(Literal,1)"];
"1000291" [label="(Block,)"];
"1000213" [label="(Identifier,off)"];
"1000302" [label="(Call,slot / BPF_REG_SIZE)"];
"1000262" [label="(Identifier,off)"];
"1000210" [label="(Literal,0)"];
"1000293" [label="(Identifier,slot)"];
"1000191" -> "1000108"  [label="AST: "];
"1000191" -> "1000193"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000193" -> "1000191"  [label="AST: "];
"1000209" -> "1000191"  [label="CFG: "];
"1000191" -> "1000337"  [label="DDG: "];
"1000191" -> "1000208"  [label="DDG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000208" -> "1000210"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000210" -> "1000208"  [label="AST: "];
"1000213" -> "1000208"  [label="CFG: "];
"1000207" -> "1000208"  [label="CFG: "];
"1000208" -> "1000207"  [label="DDG: "];
"1000208" -> "1000207"  [label="DDG: "];
"1000208" -> "1000212"  [label="DDG: "];
"1000208" -> "1000233"  [label="DDG: "];
"1000208" -> "1000251"  [label="DDG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000207" -> "1000211"  [label="CFG: "];
"1000211" -> "1000207"  [label="AST: "];
"1000234" -> "1000207"  [label="CFG: "];
"1000247" -> "1000207"  [label="CFG: "];
"1000207" -> "1000337"  [label="DDG: "];
"1000207" -> "1000337"  [label="DDG: "];
"1000207" -> "1000337"  [label="DDG: "];
"1000211" -> "1000207"  [label="DDG: "];
"1000211" -> "1000207"  [label="DDG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000212" -> "1000214"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000214" -> "1000212"  [label="AST: "];
"1000219" -> "1000212"  [label="CFG: "];
"1000211" -> "1000212"  [label="CFG: "];
"1000212" -> "1000337"  [label="DDG: "];
"1000212" -> "1000211"  [label="DDG: "];
"1000212" -> "1000211"  [label="DDG: "];
"1000214" -> "1000212"  [label="DDG: "];
"1000212" -> "1000217"  [label="DDG: "];
"1000212" -> "1000218"  [label="DDG: "];
"1000212" -> "1000233"  [label="DDG: "];
"1000212" -> "1000251"  [label="DDG: "];
"1000211" -> "1000216"  [label="CFG: "];
"1000216" -> "1000211"  [label="AST: "];
"1000211" -> "1000337"  [label="DDG: "];
"1000211" -> "1000337"  [label="DDG: "];
"1000216" -> "1000211"  [label="DDG: "];
"1000216" -> "1000211"  [label="DDG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000217" -> "1000221"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000221" -> "1000217"  [label="AST: "];
"1000224" -> "1000217"  [label="CFG: "];
"1000216" -> "1000217"  [label="CFG: "];
"1000217" -> "1000337"  [label="DDG: "];
"1000217" -> "1000216"  [label="DDG: "];
"1000217" -> "1000216"  [label="DDG: "];
"1000105" -> "1000217"  [label="DDG: "];
"1000216" -> "1000222"  [label="CFG: "];
"1000222" -> "1000216"  [label="AST: "];
"1000216" -> "1000337"  [label="DDG: "];
"1000216" -> "1000337"  [label="DDG: "];
"1000222" -> "1000216"  [label="DDG: "];
"1000222" -> "1000216"  [label="DDG: "];
"1000218" -> "1000220"  [label="CFG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000220" -> "1000218"  [label="AST: "];
"1000221" -> "1000218"  [label="CFG: "];
"1000105" -> "1000218"  [label="DDG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000233" -> "1000238"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000235" -> "1000233"  [label="AST: "];
"1000236" -> "1000233"  [label="AST: "];
"1000237" -> "1000233"  [label="AST: "];
"1000238" -> "1000233"  [label="AST: "];
"1000241" -> "1000233"  [label="CFG: "];
"1000233" -> "1000337"  [label="DDG: "];
"1000233" -> "1000337"  [label="DDG: "];
"1000233" -> "1000337"  [label="DDG: "];
"1000233" -> "1000337"  [label="DDG: "];
"1000233" -> "1000337"  [label="DDG: "];
"1000103" -> "1000233"  [label="DDG: "];
"1000104" -> "1000233"  [label="DDG: "];
"1000227" -> "1000233"  [label="DDG: "];
"1000223" -> "1000233"  [label="DDG: "];
"1000105" -> "1000233"  [label="DDG: "];
"1000251" -> "1000243"  [label="AST: "];
"1000251" -> "1000252"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000243" -> "1000251"  [label="CFG: "];
"1000251" -> "1000337"  [label="DDG: "];
"1000251" -> "1000243"  [label="DDG: "];
"1000251" -> "1000261"  [label="DDG: "];
"1000251" -> "1000295"  [label="DDG: "];
"1000251" -> "1000296"  [label="DDG: "];
"1000251" -> "1000326"  [label="DDG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000244" -> "1000243"  [label="AST: "];
"1000257" -> "1000243"  [label="CFG: "];
"1000265" -> "1000243"  [label="CFG: "];
"1000243" -> "1000337"  [label="DDG: "];
"1000243" -> "1000337"  [label="DDG: "];
"1000243" -> "1000337"  [label="DDG: "];
"1000261" -> "1000253"  [label="AST: "];
"1000261" -> "1000262"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000253" -> "1000261"  [label="CFG: "];
"1000261" -> "1000337"  [label="DDG: "];
"1000261" -> "1000253"  [label="DDG: "];
"1000261" -> "1000295"  [label="DDG: "];
"1000261" -> "1000296"  [label="DDG: "];
"1000261" -> "1000326"  [label="DDG: "];
"1000253" -> "1000242"  [label="AST: "];
"1000254" -> "1000253"  [label="AST: "];
"1000265" -> "1000253"  [label="CFG: "];
"1000253" -> "1000337"  [label="DDG: "];
"1000253" -> "1000337"  [label="DDG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000295" -> "1000296"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000299" -> "1000295"  [label="CFG: "];
"1000295" -> "1000337"  [label="DDG: "];
"1000295" -> "1000294"  [label="DDG: "];
"1000286" -> "1000295"  [label="DDG: "];
"1000294" -> "1000292"  [label="AST: "];
"1000294" -> "1000299"  [label="CFG: "];
"1000299" -> "1000294"  [label="AST: "];
"1000292" -> "1000294"  [label="CFG: "];
"1000294" -> "1000337"  [label="DDG: "];
"1000294" -> "1000292"  [label="DDG: "];
"1000294" -> "1000292"  [label="DDG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000293" -> "1000292"  [label="AST: "];
"1000301" -> "1000292"  [label="CFG: "];
"1000292" -> "1000337"  [label="DDG: "];
"1000292" -> "1000302"  [label="DDG: "];
"1000302" -> "1000300"  [label="AST: "];
"1000302" -> "1000304"  [label="CFG: "];
"1000303" -> "1000302"  [label="AST: "];
"1000304" -> "1000302"  [label="AST: "];
"1000300" -> "1000302"  [label="CFG: "];
"1000302" -> "1000337"  [label="DDG: "];
"1000302" -> "1000300"  [label="DDG: "];
"1000302" -> "1000300"  [label="DDG: "];
"1000321" -> "1000302"  [label="DDG: "];
"1000302" -> "1000307"  [label="DDG: "];
"1000302" -> "1000321"  [label="DDG: "];
"1000300" -> "1000291"  [label="AST: "];
"1000301" -> "1000300"  [label="AST: "];
"1000309" -> "1000300"  [label="CFG: "];
"1000300" -> "1000337"  [label="DDG: "];
"1000300" -> "1000337"  [label="DDG: "];
"1000307" -> "1000306"  [label="AST: "];
"1000307" -> "1000311"  [label="CFG: "];
"1000308" -> "1000307"  [label="AST: "];
"1000311" -> "1000307"  [label="AST: "];
"1000317" -> "1000307"  [label="CFG: "];
"1000306" -> "1000307"  [label="CFG: "];
"1000307" -> "1000337"  [label="DDG: "];
"1000307" -> "1000337"  [label="DDG: "];
"1000307" -> "1000306"  [label="DDG: "];
"1000307" -> "1000306"  [label="DDG: "];
"1000307" -> "1000321"  [label="DDG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000306" -> "1000312"  [label="CFG: "];
"1000312" -> "1000306"  [label="AST: "];
"1000327" -> "1000306"  [label="CFG: "];
"1000290" -> "1000306"  [label="CFG: "];
"1000306" -> "1000337"  [label="DDG: "];
"1000306" -> "1000337"  [label="DDG: "];
"1000306" -> "1000337"  [label="DDG: "];
"1000312" -> "1000306"  [label="DDG: "];
"1000312" -> "1000306"  [label="DDG: "];
"1000321" -> "1000313"  [label="AST: "];
"1000321" -> "1000323"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000323" -> "1000321"  [label="AST: "];
"1000313" -> "1000321"  [label="CFG: "];
"1000321" -> "1000337"  [label="DDG: "];
"1000321" -> "1000337"  [label="DDG: "];
"1000296" -> "1000298"  [label="CFG: "];
"1000297" -> "1000296"  [label="AST: "];
"1000298" -> "1000296"  [label="AST: "];
"1000296" -> "1000337"  [label="DDG: "];
"1000286" -> "1000296"  [label="DDG: "];
"1000326" -> "1000325"  [label="AST: "];
"1000326" -> "1000331"  [label="CFG: "];
"1000327" -> "1000326"  [label="AST: "];
"1000328" -> "1000326"  [label="AST: "];
"1000329" -> "1000326"  [label="AST: "];
"1000330" -> "1000326"  [label="AST: "];
"1000331" -> "1000326"  [label="AST: "];
"1000334" -> "1000326"  [label="CFG: "];
"1000326" -> "1000337"  [label="DDG: "];
"1000326" -> "1000337"  [label="DDG: "];
"1000326" -> "1000337"  [label="DDG: "];
"1000326" -> "1000337"  [label="DDG: "];
"1000326" -> "1000337"  [label="DDG: "];
"1000103" -> "1000326"  [label="DDG: "];
"1000286" -> "1000326"  [label="DDG: "];
"1000286" -> "1000326"  [label="DDG: "];
"1000105" -> "1000326"  [label="DDG: "];
}
