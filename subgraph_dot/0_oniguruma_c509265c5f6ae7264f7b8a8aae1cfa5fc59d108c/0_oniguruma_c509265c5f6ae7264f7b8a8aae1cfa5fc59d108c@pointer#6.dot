digraph "0_oniguruma_c509265c5f6ae7264f7b8a8aae1cfa5fc59d108c@pointer" {
"1000115" [label="(Call,compile_bag_memory_node(node, reg, env))"];
"1000101" [label="(MethodParameterIn,BagNode* node)"];
"1000102" [label="(MethodParameterIn,regex_t* reg)"];
"1000103" [label="(MethodParameterIn,ScanEnv* env)"];
"1000113" [label="(Call,r = compile_bag_memory_node(node, reg, env))"];
"1000477" [label="(Return,return r;)"];
"1000434" [label="(Call,add_op(reg, OP_JUMP))"];
"1000169" [label="(Call,add_op(reg, OP_PUSH))"];
"1000113" [label="(Call,r = compile_bag_memory_node(node, reg, env))"];
"1000419" [label="(Call,compile_length_tree(Else, reg))"];
"1000115" [label="(Call,compile_bag_memory_node(node, reg, env))"];
"1000194" [label="(Call,compile_tree(NODE_QUANT_BODY(qn), reg, env))"];
"1000355" [label="(Call,add_op(reg, OP_PUSH))"];
"1000388" [label="(Call,add_op(reg, OP_ATOMIC_END))"];
"1000477" [label="(Return,return r;)"];
"1000123" [label="(Call,compile_option_node(node, reg, env))"];
"1000472" [label="(Call,compile_tree(Else, reg, env))"];
"1000118" [label="(Identifier,env)"];
"1000222" [label="(Call,r != 0)"];
"1000181" [label="(Call,COP(reg))"];
"1000141" [label="(Call,compile_tree_n_times(NODE_QUANT_BODY(qn), qn->lower, reg, env))"];
"1000285" [label="(Call,NODE_BAG_BODY(node))"];
"1000478" [label="(Identifier,r)"];
"1000130" [label="(Call,NODE_IS_STOP_BT_SIMPLE_REPEAT(node))"];
"1000104" [label="(Block,)"];
"1000102" [label="(MethodParameterIn,regex_t* reg)"];
"1000316" [label="(Call,compile_length_tree(cond, reg))"];
"1000111" [label="(Block,)"];
"1000259" [label="(Call,compile_tree(NODE_BAG_BODY(node), reg, env))"];
"1000446" [label="(Call,COP(reg))"];
"1000137" [label="(Call,NODE_BAG_BODY(node))"];
"1000116" [label="(Identifier,node)"];
"1000230" [label="(Call,COP(reg))"];
"1000121" [label="(Call,r = compile_option_node(node, reg, env))"];
"1000403" [label="(Call,compile_tree(Then, reg, env))"];
"1000114" [label="(Identifier,r)"];
"1000103" [label="(MethodParameterIn,ScanEnv* env)"];
"1000272" [label="(Call,add_op(reg, OP_ATOMIC_END))"];
"1000331" [label="(Call,compile_length_tree(Then, reg))"];
"1000117" [label="(Identifier,reg)"];
"1000157" [label="(Call,compile_length_tree(NODE_QUANT_BODY(qn), reg))"];
"1000260" [label="(Call,NODE_BAG_BODY(node))"];
"1000305" [label="(Call,add_op(reg, OP_ATOMIC_START))"];
"1000376" [label="(Call,compile_tree(cond, reg, env))"];
"1000470" [label="(Call,r = compile_tree(Else, reg, env))"];
"1000119" [label="(ControlStructure,break;)"];
"1000479" [label="(MethodReturn,RET)"];
"1000248" [label="(Call,add_op(reg, OP_ATOMIC_START))"];
"1000207" [label="(Call,add_op(reg, OP_POP_OUT))"];
"1000367" [label="(Call,COP(reg))"];
"1000101" [label="(MethodParameterIn,BagNode* node)"];
"1000457" [label="(Call,add_op(reg, OP_ATOMIC_END))"];
"1000270" [label="(Call,r = add_op(reg, OP_ATOMIC_END))"];
"1000461" [label="(Call,r != 0)"];
"1000218" [label="(Call,add_op(reg, OP_JUMP))"];
"1000115" -> "1000113"  [label="AST: "];
"1000115" -> "1000118"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000118" -> "1000115"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000115" -> "1000479"  [label="DDG: reg"];
"1000115" -> "1000479"  [label="DDG: env"];
"1000115" -> "1000479"  [label="DDG: node"];
"1000115" -> "1000113"  [label="DDG: node"];
"1000115" -> "1000113"  [label="DDG: reg"];
"1000115" -> "1000113"  [label="DDG: env"];
"1000101" -> "1000115"  [label="DDG: node"];
"1000102" -> "1000115"  [label="DDG: reg"];
"1000103" -> "1000115"  [label="DDG: env"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000479"  [label="DDG: node"];
"1000101" -> "1000123"  [label="DDG: node"];
"1000101" -> "1000130"  [label="DDG: node"];
"1000101" -> "1000137"  [label="DDG: node"];
"1000101" -> "1000260"  [label="DDG: node"];
"1000101" -> "1000285"  [label="DDG: node"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000479"  [label="DDG: reg"];
"1000102" -> "1000123"  [label="DDG: reg"];
"1000102" -> "1000141"  [label="DDG: reg"];
"1000102" -> "1000157"  [label="DDG: reg"];
"1000102" -> "1000169"  [label="DDG: reg"];
"1000102" -> "1000181"  [label="DDG: reg"];
"1000102" -> "1000194"  [label="DDG: reg"];
"1000102" -> "1000207"  [label="DDG: reg"];
"1000102" -> "1000218"  [label="DDG: reg"];
"1000102" -> "1000230"  [label="DDG: reg"];
"1000102" -> "1000248"  [label="DDG: reg"];
"1000102" -> "1000259"  [label="DDG: reg"];
"1000102" -> "1000272"  [label="DDG: reg"];
"1000102" -> "1000305"  [label="DDG: reg"];
"1000102" -> "1000316"  [label="DDG: reg"];
"1000102" -> "1000331"  [label="DDG: reg"];
"1000102" -> "1000355"  [label="DDG: reg"];
"1000102" -> "1000367"  [label="DDG: reg"];
"1000102" -> "1000376"  [label="DDG: reg"];
"1000102" -> "1000388"  [label="DDG: reg"];
"1000102" -> "1000403"  [label="DDG: reg"];
"1000102" -> "1000419"  [label="DDG: reg"];
"1000102" -> "1000434"  [label="DDG: reg"];
"1000102" -> "1000446"  [label="DDG: reg"];
"1000102" -> "1000457"  [label="DDG: reg"];
"1000102" -> "1000472"  [label="DDG: reg"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000479"  [label="DDG: env"];
"1000103" -> "1000123"  [label="DDG: env"];
"1000103" -> "1000141"  [label="DDG: env"];
"1000103" -> "1000194"  [label="DDG: env"];
"1000103" -> "1000259"  [label="DDG: env"];
"1000103" -> "1000376"  [label="DDG: env"];
"1000103" -> "1000403"  [label="DDG: env"];
"1000103" -> "1000472"  [label="DDG: env"];
"1000113" -> "1000111"  [label="AST: "];
"1000114" -> "1000113"  [label="AST: "];
"1000119" -> "1000113"  [label="CFG: "];
"1000113" -> "1000479"  [label="DDG: r"];
"1000113" -> "1000479"  [label="DDG: compile_bag_memory_node(node, reg, env)"];
"1000113" -> "1000477"  [label="DDG: r"];
"1000477" -> "1000104"  [label="AST: "];
"1000477" -> "1000478"  [label="CFG: "];
"1000478" -> "1000477"  [label="AST: "];
"1000479" -> "1000477"  [label="CFG: "];
"1000477" -> "1000479"  [label="DDG: <RET>"];
"1000478" -> "1000477"  [label="DDG: r"];
"1000222" -> "1000477"  [label="DDG: r"];
"1000470" -> "1000477"  [label="DDG: r"];
"1000270" -> "1000477"  [label="DDG: r"];
"1000121" -> "1000477"  [label="DDG: r"];
"1000461" -> "1000477"  [label="DDG: r"];
}
