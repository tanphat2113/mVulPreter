digraph "0_oniguruma_c509265c5f6ae7264f7b8a8aae1cfa5fc59d108c@integer" {
"1000443" [label="(Call,COP(reg)->jump.addr = SIZE_OP_ATOMIC_END + else_len + SIZE_INC_OP)"];
"1000423" [label="(Call,else_len < 0)"];
"1000417" [label="(Call,else_len = compile_length_tree(Else, reg))"];
"1000419" [label="(Call,compile_length_tree(Else, reg))"];
"1000414" [label="(Call,IS_NOT_NULL(Else))"];
"1000296" [label="(Call,* Else = node->te.Else)"];
"1000403" [label="(Call,compile_tree(Then, reg, env))"];
"1000398" [label="(Call,IS_NOT_NULL(Then))"];
"1000331" [label="(Call,compile_length_tree(Then, reg))"];
"1000326" [label="(Call,IS_NOT_NULL(Then))"];
"1000288" [label="(Call,* Then = node->te.Then)"];
"1000316" [label="(Call,compile_length_tree(cond, reg))"];
"1000283" [label="(Call,* cond = NODE_BAG_BODY(node))"];
"1000285" [label="(Call,NODE_BAG_BODY(node))"];
"1000101" [label="(MethodParameterIn,BagNode* node)"];
"1000305" [label="(Call,add_op(reg, OP_ATOMIC_START))"];
"1000102" [label="(MethodParameterIn,regex_t* reg)"];
"1000388" [label="(Call,add_op(reg, OP_ATOMIC_END))"];
"1000376" [label="(Call,compile_tree(cond, reg, env))"];
"1000367" [label="(Call,COP(reg))"];
"1000355" [label="(Call,add_op(reg, OP_PUSH))"];
"1000103" [label="(MethodParameterIn,ScanEnv* env)"];
"1000429" [label="(Call,else_len = 0)"];
"1000414" [label="(Call,IS_NOT_NULL(Else))"];
"1000317" [label="(Identifier,cond)"];
"1000194" [label="(Call,compile_tree(NODE_QUANT_BODY(qn), reg, env))"];
"1000369" [label="(FieldIdentifier,push)"];
"1000277" [label="(Block,)"];
"1000307" [label="(Identifier,OP_ATOMIC_START)"];
"1000290" [label="(Call,node->te.Then)"];
"1000123" [label="(Call,compile_option_node(node, reg, env))"];
"1000404" [label="(Identifier,Then)"];
"1000433" [label="(Identifier,r)"];
"1000406" [label="(Identifier,env)"];
"1000326" [label="(Call,IS_NOT_NULL(Then))"];
"1000386" [label="(Call,r = add_op(reg, OP_ATOMIC_END))"];
"1000415" [label="(Identifier,Else)"];
"1000353" [label="(Call,r = add_op(reg, OP_PUSH))"];
"1000286" [label="(Identifier,node)"];
"1000413" [label="(ControlStructure,if (IS_NOT_NULL(Else)))"];
"1000259" [label="(Call,compile_tree(NODE_BAG_BODY(node), reg, env))"];
"1000444" [label="(Call,COP(reg)->jump.addr)"];
"1000443" [label="(Call,COP(reg)->jump.addr = SIZE_OP_ATOMIC_END + else_len + SIZE_INC_OP)"];
"1000304" [label="(Identifier,r)"];
"1000306" [label="(Identifier,reg)"];
"1000368" [label="(Identifier,reg)"];
"1000367" [label="(Call,COP(reg))"];
"1000101" [label="(MethodParameterIn,BagNode* node)"];
"1000467" [label="(Call,IS_NOT_NULL(Else))"];
"1000296" [label="(Call,* Else = node->te.Else)"];
"1000430" [label="(Identifier,else_len)"];
"1000434" [label="(Call,add_op(reg, OP_JUMP))"];
"1000424" [label="(Identifier,else_len)"];
"1000456" [label="(Identifier,r)"];
"1000418" [label="(Identifier,else_len)"];
"1000397" [label="(ControlStructure,if (IS_NOT_NULL(Then)))"];
"1000416" [label="(Block,)"];
"1000388" [label="(Call,add_op(reg, OP_ATOMIC_END))"];
"1000427" [label="(Identifier,else_len)"];
"1000379" [label="(Identifier,env)"];
"1000472" [label="(Call,compile_tree(Else, reg, env))"];
"1000285" [label="(Call,NODE_BAG_BODY(node))"];
"1000452" [label="(Call,else_len + SIZE_INC_OP)"];
"1000446" [label="(Call,COP(reg))"];
"1000137" [label="(Call,NODE_BAG_BODY(node))"];
"1000230" [label="(Call,COP(reg))"];
"1000390" [label="(Identifier,OP_ATOMIC_END)"];
"1000366" [label="(Call,COP(reg)->push)"];
"1000103" [label="(MethodParameterIn,ScanEnv* env)"];
"1000303" [label="(Call,r = add_op(reg, OP_ATOMIC_START))"];
"1000272" [label="(Call,add_op(reg, OP_ATOMIC_END))"];
"1000356" [label="(Identifier,reg)"];
"1000402" [label="(Identifier,r)"];
"1000479" [label="(MethodReturn,RET)"];
"1000457" [label="(Call,add_op(reg, OP_ATOMIC_END))"];
"1000218" [label="(Call,add_op(reg, OP_JUMP))"];
"1000169" [label="(Call,add_op(reg, OP_PUSH))"];
"1000377" [label="(Identifier,cond)"];
"1000419" [label="(Call,compile_length_tree(Else, reg))"];
"1000431" [label="(Literal,0)"];
"1000289" [label="(Identifier,Then)"];
"1000425" [label="(Literal,0)"];
"1000426" [label="(Return,return else_len;)"];
"1000332" [label="(Identifier,Then)"];
"1000327" [label="(Identifier,Then)"];
"1000318" [label="(Identifier,reg)"];
"1000141" [label="(Call,compile_tree_n_times(NODE_QUANT_BODY(qn), qn->lower, reg, env))"];
"1000429" [label="(Call,else_len = 0)"];
"1000130" [label="(Call,NODE_IS_STOP_BT_SIMPLE_REPEAT(node))"];
"1000329" [label="(Call,then_len = compile_length_tree(Then, reg))"];
"1000378" [label="(Identifier,reg)"];
"1000102" [label="(MethodParameterIn,regex_t* reg)"];
"1000316" [label="(Call,compile_length_tree(cond, reg))"];
"1000428" [label="(ControlStructure,else)"];
"1000421" [label="(Identifier,reg)"];
"1000405" [label="(Identifier,reg)"];
"1000403" [label="(Call,compile_tree(Then, reg, env))"];
"1000288" [label="(Call,* Then = node->te.Then)"];
"1000357" [label="(Identifier,OP_PUSH)"];
"1000450" [label="(Call,SIZE_OP_ATOMIC_END + else_len + SIZE_INC_OP)"];
"1000331" [label="(Call,compile_length_tree(Then, reg))"];
"1000157" [label="(Call,compile_length_tree(NODE_QUANT_BODY(qn), reg))"];
"1000330" [label="(Identifier,then_len)"];
"1000297" [label="(Identifier,Else)"];
"1000376" [label="(Call,compile_tree(cond, reg, env))"];
"1000298" [label="(Call,node->te.Else)"];
"1000325" [label="(ControlStructure,if (IS_NOT_NULL(Then)))"];
"1000115" [label="(Call,compile_bag_memory_node(node, reg, env))"];
"1000401" [label="(Call,r = compile_tree(Then, reg, env))"];
"1000355" [label="(Call,add_op(reg, OP_PUSH))"];
"1000422" [label="(ControlStructure,if (else_len < 0))"];
"1000333" [label="(Identifier,reg)"];
"1000398" [label="(Call,IS_NOT_NULL(Then))"];
"1000417" [label="(Call,else_len = compile_length_tree(Else, reg))"];
"1000181" [label="(Call,COP(reg))"];
"1000314" [label="(Call,cond_len = compile_length_tree(cond, reg))"];
"1000283" [label="(Call,* cond = NODE_BAG_BODY(node))"];
"1000284" [label="(Identifier,cond)"];
"1000399" [label="(Identifier,Then)"];
"1000420" [label="(Identifier,Else)"];
"1000305" [label="(Call,add_op(reg, OP_ATOMIC_START))"];
"1000260" [label="(Call,NODE_BAG_BODY(node))"];
"1000423" [label="(Call,else_len < 0)"];
"1000248" [label="(Call,add_op(reg, OP_ATOMIC_START))"];
"1000389" [label="(Identifier,reg)"];
"1000207" [label="(Call,add_op(reg, OP_POP_OUT))"];
"1000342" [label="(Identifier,then_len)"];
"1000374" [label="(Call,r = compile_tree(cond, reg, env))"];
"1000443" -> "1000277"  [label="AST: "];
"1000443" -> "1000450"  [label="CFG: "];
"1000444" -> "1000443"  [label="AST: "];
"1000450" -> "1000443"  [label="AST: "];
"1000456" -> "1000443"  [label="CFG: "];
"1000443" -> "1000479"  [label="DDG: SIZE_OP_ATOMIC_END + else_len + SIZE_INC_OP"];
"1000443" -> "1000479"  [label="DDG: COP(reg)->jump.addr"];
"1000423" -> "1000443"  [label="DDG: else_len"];
"1000429" -> "1000443"  [label="DDG: else_len"];
"1000423" -> "1000422"  [label="AST: "];
"1000423" -> "1000425"  [label="CFG: "];
"1000424" -> "1000423"  [label="AST: "];
"1000425" -> "1000423"  [label="AST: "];
"1000427" -> "1000423"  [label="CFG: "];
"1000433" -> "1000423"  [label="CFG: "];
"1000423" -> "1000479"  [label="DDG: else_len < 0"];
"1000423" -> "1000479"  [label="DDG: else_len"];
"1000417" -> "1000423"  [label="DDG: else_len"];
"1000423" -> "1000426"  [label="DDG: else_len"];
"1000423" -> "1000450"  [label="DDG: else_len"];
"1000423" -> "1000452"  [label="DDG: else_len"];
"1000417" -> "1000416"  [label="AST: "];
"1000417" -> "1000419"  [label="CFG: "];
"1000418" -> "1000417"  [label="AST: "];
"1000419" -> "1000417"  [label="AST: "];
"1000424" -> "1000417"  [label="CFG: "];
"1000417" -> "1000479"  [label="DDG: compile_length_tree(Else, reg)"];
"1000419" -> "1000417"  [label="DDG: Else"];
"1000419" -> "1000417"  [label="DDG: reg"];
"1000419" -> "1000421"  [label="CFG: "];
"1000420" -> "1000419"  [label="AST: "];
"1000421" -> "1000419"  [label="AST: "];
"1000419" -> "1000479"  [label="DDG: Else"];
"1000419" -> "1000479"  [label="DDG: reg"];
"1000414" -> "1000419"  [label="DDG: Else"];
"1000403" -> "1000419"  [label="DDG: reg"];
"1000388" -> "1000419"  [label="DDG: reg"];
"1000102" -> "1000419"  [label="DDG: reg"];
"1000419" -> "1000434"  [label="DDG: reg"];
"1000419" -> "1000467"  [label="DDG: Else"];
"1000414" -> "1000413"  [label="AST: "];
"1000414" -> "1000415"  [label="CFG: "];
"1000415" -> "1000414"  [label="AST: "];
"1000418" -> "1000414"  [label="CFG: "];
"1000430" -> "1000414"  [label="CFG: "];
"1000414" -> "1000479"  [label="DDG: IS_NOT_NULL(Else)"];
"1000414" -> "1000479"  [label="DDG: Else"];
"1000296" -> "1000414"  [label="DDG: Else"];
"1000414" -> "1000467"  [label="DDG: Else"];
"1000296" -> "1000277"  [label="AST: "];
"1000296" -> "1000298"  [label="CFG: "];
"1000297" -> "1000296"  [label="AST: "];
"1000298" -> "1000296"  [label="AST: "];
"1000304" -> "1000296"  [label="CFG: "];
"1000296" -> "1000479"  [label="DDG: node->te.Else"];
"1000296" -> "1000479"  [label="DDG: Else"];
"1000403" -> "1000401"  [label="AST: "];
"1000403" -> "1000406"  [label="CFG: "];
"1000404" -> "1000403"  [label="AST: "];
"1000405" -> "1000403"  [label="AST: "];
"1000406" -> "1000403"  [label="AST: "];
"1000401" -> "1000403"  [label="CFG: "];
"1000403" -> "1000479"  [label="DDG: reg"];
"1000403" -> "1000479"  [label="DDG: Then"];
"1000403" -> "1000479"  [label="DDG: env"];
"1000403" -> "1000401"  [label="DDG: Then"];
"1000403" -> "1000401"  [label="DDG: reg"];
"1000403" -> "1000401"  [label="DDG: env"];
"1000398" -> "1000403"  [label="DDG: Then"];
"1000388" -> "1000403"  [label="DDG: reg"];
"1000102" -> "1000403"  [label="DDG: reg"];
"1000376" -> "1000403"  [label="DDG: env"];
"1000103" -> "1000403"  [label="DDG: env"];
"1000403" -> "1000434"  [label="DDG: reg"];
"1000403" -> "1000472"  [label="DDG: env"];
"1000398" -> "1000397"  [label="AST: "];
"1000398" -> "1000399"  [label="CFG: "];
"1000399" -> "1000398"  [label="AST: "];
"1000402" -> "1000398"  [label="CFG: "];
"1000415" -> "1000398"  [label="CFG: "];
"1000398" -> "1000479"  [label="DDG: IS_NOT_NULL(Then)"];
"1000398" -> "1000479"  [label="DDG: Then"];
"1000331" -> "1000398"  [label="DDG: Then"];
"1000326" -> "1000398"  [label="DDG: Then"];
"1000331" -> "1000329"  [label="AST: "];
"1000331" -> "1000333"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000333" -> "1000331"  [label="AST: "];
"1000329" -> "1000331"  [label="CFG: "];
"1000331" -> "1000479"  [label="DDG: reg"];
"1000331" -> "1000479"  [label="DDG: Then"];
"1000331" -> "1000329"  [label="DDG: Then"];
"1000331" -> "1000329"  [label="DDG: reg"];
"1000326" -> "1000331"  [label="DDG: Then"];
"1000316" -> "1000331"  [label="DDG: reg"];
"1000102" -> "1000331"  [label="DDG: reg"];
"1000331" -> "1000355"  [label="DDG: reg"];
"1000326" -> "1000325"  [label="AST: "];
"1000326" -> "1000327"  [label="CFG: "];
"1000327" -> "1000326"  [label="AST: "];
"1000330" -> "1000326"  [label="CFG: "];
"1000342" -> "1000326"  [label="CFG: "];
"1000326" -> "1000479"  [label="DDG: IS_NOT_NULL(Then)"];
"1000326" -> "1000479"  [label="DDG: Then"];
"1000288" -> "1000326"  [label="DDG: Then"];
"1000288" -> "1000277"  [label="AST: "];
"1000288" -> "1000290"  [label="CFG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000290" -> "1000288"  [label="AST: "];
"1000297" -> "1000288"  [label="CFG: "];
"1000288" -> "1000479"  [label="DDG: node->te.Then"];
"1000288" -> "1000479"  [label="DDG: Then"];
"1000316" -> "1000314"  [label="AST: "];
"1000316" -> "1000318"  [label="CFG: "];
"1000317" -> "1000316"  [label="AST: "];
"1000318" -> "1000316"  [label="AST: "];
"1000314" -> "1000316"  [label="CFG: "];
"1000316" -> "1000479"  [label="DDG: reg"];
"1000316" -> "1000479"  [label="DDG: cond"];
"1000316" -> "1000314"  [label="DDG: cond"];
"1000316" -> "1000314"  [label="DDG: reg"];
"1000283" -> "1000316"  [label="DDG: cond"];
"1000305" -> "1000316"  [label="DDG: reg"];
"1000102" -> "1000316"  [label="DDG: reg"];
"1000316" -> "1000355"  [label="DDG: reg"];
"1000316" -> "1000376"  [label="DDG: cond"];
"1000283" -> "1000277"  [label="AST: "];
"1000283" -> "1000285"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000285" -> "1000283"  [label="AST: "];
"1000289" -> "1000283"  [label="CFG: "];
"1000283" -> "1000479"  [label="DDG: NODE_BAG_BODY(node)"];
"1000283" -> "1000479"  [label="DDG: cond"];
"1000285" -> "1000283"  [label="DDG: node"];
"1000285" -> "1000286"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000285" -> "1000479"  [label="DDG: node"];
"1000101" -> "1000285"  [label="DDG: node"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000479"  [label="DDG: node"];
"1000101" -> "1000115"  [label="DDG: node"];
"1000101" -> "1000123"  [label="DDG: node"];
"1000101" -> "1000130"  [label="DDG: node"];
"1000101" -> "1000137"  [label="DDG: node"];
"1000101" -> "1000260"  [label="DDG: node"];
"1000305" -> "1000303"  [label="AST: "];
"1000305" -> "1000307"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000307" -> "1000305"  [label="AST: "];
"1000303" -> "1000305"  [label="CFG: "];
"1000305" -> "1000479"  [label="DDG: OP_ATOMIC_START"];
"1000305" -> "1000479"  [label="DDG: reg"];
"1000305" -> "1000303"  [label="DDG: reg"];
"1000305" -> "1000303"  [label="DDG: OP_ATOMIC_START"];
"1000102" -> "1000305"  [label="DDG: reg"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000479"  [label="DDG: reg"];
"1000102" -> "1000115"  [label="DDG: reg"];
"1000102" -> "1000123"  [label="DDG: reg"];
"1000102" -> "1000141"  [label="DDG: reg"];
"1000102" -> "1000157"  [label="DDG: reg"];
"1000102" -> "1000169"  [label="DDG: reg"];
"1000102" -> "1000181"  [label="DDG: reg"];
"1000102" -> "1000194"  [label="DDG: reg"];
"1000102" -> "1000207"  [label="DDG: reg"];
"1000102" -> "1000218"  [label="DDG: reg"];
"1000102" -> "1000230"  [label="DDG: reg"];
"1000102" -> "1000248"  [label="DDG: reg"];
"1000102" -> "1000259"  [label="DDG: reg"];
"1000102" -> "1000272"  [label="DDG: reg"];
"1000102" -> "1000355"  [label="DDG: reg"];
"1000102" -> "1000367"  [label="DDG: reg"];
"1000102" -> "1000376"  [label="DDG: reg"];
"1000102" -> "1000388"  [label="DDG: reg"];
"1000102" -> "1000434"  [label="DDG: reg"];
"1000102" -> "1000446"  [label="DDG: reg"];
"1000102" -> "1000457"  [label="DDG: reg"];
"1000102" -> "1000472"  [label="DDG: reg"];
"1000388" -> "1000386"  [label="AST: "];
"1000388" -> "1000390"  [label="CFG: "];
"1000389" -> "1000388"  [label="AST: "];
"1000390" -> "1000388"  [label="AST: "];
"1000386" -> "1000388"  [label="CFG: "];
"1000388" -> "1000479"  [label="DDG: reg"];
"1000388" -> "1000479"  [label="DDG: OP_ATOMIC_END"];
"1000388" -> "1000386"  [label="DDG: reg"];
"1000388" -> "1000386"  [label="DDG: OP_ATOMIC_END"];
"1000376" -> "1000388"  [label="DDG: reg"];
"1000388" -> "1000434"  [label="DDG: reg"];
"1000388" -> "1000457"  [label="DDG: OP_ATOMIC_END"];
"1000376" -> "1000374"  [label="AST: "];
"1000376" -> "1000379"  [label="CFG: "];
"1000377" -> "1000376"  [label="AST: "];
"1000378" -> "1000376"  [label="AST: "];
"1000379" -> "1000376"  [label="AST: "];
"1000374" -> "1000376"  [label="CFG: "];
"1000376" -> "1000479"  [label="DDG: cond"];
"1000376" -> "1000479"  [label="DDG: env"];
"1000376" -> "1000479"  [label="DDG: reg"];
"1000376" -> "1000374"  [label="DDG: cond"];
"1000376" -> "1000374"  [label="DDG: reg"];
"1000376" -> "1000374"  [label="DDG: env"];
"1000367" -> "1000376"  [label="DDG: reg"];
"1000103" -> "1000376"  [label="DDG: env"];
"1000376" -> "1000472"  [label="DDG: env"];
"1000367" -> "1000366"  [label="AST: "];
"1000367" -> "1000368"  [label="CFG: "];
"1000368" -> "1000367"  [label="AST: "];
"1000369" -> "1000367"  [label="CFG: "];
"1000355" -> "1000367"  [label="DDG: reg"];
"1000355" -> "1000353"  [label="AST: "];
"1000355" -> "1000357"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000357" -> "1000355"  [label="AST: "];
"1000353" -> "1000355"  [label="CFG: "];
"1000355" -> "1000479"  [label="DDG: reg"];
"1000355" -> "1000479"  [label="DDG: OP_PUSH"];
"1000355" -> "1000353"  [label="DDG: reg"];
"1000355" -> "1000353"  [label="DDG: OP_PUSH"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000479"  [label="DDG: env"];
"1000103" -> "1000115"  [label="DDG: env"];
"1000103" -> "1000123"  [label="DDG: env"];
"1000103" -> "1000141"  [label="DDG: env"];
"1000103" -> "1000194"  [label="DDG: env"];
"1000103" -> "1000259"  [label="DDG: env"];
"1000103" -> "1000472"  [label="DDG: env"];
"1000429" -> "1000428"  [label="AST: "];
"1000429" -> "1000431"  [label="CFG: "];
"1000430" -> "1000429"  [label="AST: "];
"1000431" -> "1000429"  [label="AST: "];
"1000433" -> "1000429"  [label="CFG: "];
"1000429" -> "1000479"  [label="DDG: else_len"];
"1000429" -> "1000450"  [label="DDG: else_len"];
"1000429" -> "1000452"  [label="DDG: else_len"];
}
