digraph "0_oniguruma_c509265c5f6ae7264f7b8a8aae1cfa5fc59d108c@pointer" {
"1000296" [label="(Call,* Else = node->te.Else)"];
"1000414" [label="(Call,IS_NOT_NULL(Else))"];
"1000419" [label="(Call,compile_length_tree(Else, reg))"];
"1000417" [label="(Call,else_len = compile_length_tree(Else, reg))"];
"1000423" [label="(Call,else_len < 0)"];
"1000426" [label="(Return,return else_len;)"];
"1000443" [label="(Call,COP(reg)->jump.addr = SIZE_OP_ATOMIC_END + else_len + SIZE_INC_OP)"];
"1000450" [label="(Call,SIZE_OP_ATOMIC_END + else_len + SIZE_INC_OP)"];
"1000452" [label="(Call,else_len + SIZE_INC_OP)"];
"1000434" [label="(Call,add_op(reg, OP_JUMP))"];
"1000432" [label="(Call,r = add_op(reg, OP_JUMP))"];
"1000438" [label="(Call,r != 0)"];
"1000441" [label="(Return,return r;)"];
"1000446" [label="(Call,COP(reg))"];
"1000457" [label="(Call,add_op(reg, OP_ATOMIC_END))"];
"1000455" [label="(Call,r = add_op(reg, OP_ATOMIC_END))"];
"1000461" [label="(Call,r != 0)"];
"1000464" [label="(Return,return r;)"];
"1000477" [label="(Return,return r;)"];
"1000472" [label="(Call,compile_tree(Else, reg, env))"];
"1000470" [label="(Call,r = compile_tree(Else, reg, env))"];
"1000467" [label="(Call,IS_NOT_NULL(Else))"];
"1000434" [label="(Call,add_op(reg, OP_JUMP))"];
"1000474" [label="(Identifier,reg)"];
"1000442" [label="(Identifier,r)"];
"1000414" [label="(Call,IS_NOT_NULL(Else))"];
"1000465" [label="(Identifier,r)"];
"1000418" [label="(Identifier,else_len)"];
"1000424" [label="(Identifier,else_len)"];
"1000419" [label="(Call,compile_length_tree(Else, reg))"];
"1000456" [label="(Identifier,r)"];
"1000464" [label="(Return,return r;)"];
"1000113" [label="(Call,r = compile_bag_memory_node(node, reg, env))"];
"1000466" [label="(ControlStructure,if (IS_NOT_NULL(Else)))"];
"1000416" [label="(Block,)"];
"1000435" [label="(Identifier,reg)"];
"1000277" [label="(Block,)"];
"1000422" [label="(ControlStructure,if (else_len < 0))"];
"1000468" [label="(Identifier,Else)"];
"1000425" [label="(Literal,0)"];
"1000440" [label="(Literal,0)"];
"1000426" [label="(Return,return else_len;)"];
"1000458" [label="(Identifier,reg)"];
"1000388" [label="(Call,add_op(reg, OP_ATOMIC_END))"];
"1000441" [label="(Return,return r;)"];
"1000477" [label="(Return,return r;)"];
"1000427" [label="(Identifier,else_len)"];
"1000417" [label="(Call,else_len = compile_length_tree(Else, reg))"];
"1000471" [label="(Identifier,r)"];
"1000437" [label="(ControlStructure,if (r != 0))"];
"1000448" [label="(FieldIdentifier,jump)"];
"1000433" [label="(Identifier,r)"];
"1000447" [label="(Identifier,reg)"];
"1000472" [label="(Call,compile_tree(Else, reg, env))"];
"1000436" [label="(Identifier,OP_JUMP)"];
"1000222" [label="(Call,r != 0)"];
"1000452" [label="(Call,else_len + SIZE_INC_OP)"];
"1000478" [label="(Identifier,r)"];
"1000429" [label="(Call,else_len = 0)"];
"1000415" [label="(Identifier,Else)"];
"1000454" [label="(Identifier,SIZE_INC_OP)"];
"1000438" [label="(Call,r != 0)"];
"1000102" [label="(MethodParameterIn,regex_t* reg)"];
"1000104" [label="(Block,)"];
"1000476" [label="(ControlStructure,break;)"];
"1000413" [label="(ControlStructure,if (IS_NOT_NULL(Else)))"];
"1000421" [label="(Identifier,reg)"];
"1000446" [label="(Call,COP(reg))"];
"1000432" [label="(Call,r = add_op(reg, OP_JUMP))"];
"1000459" [label="(Identifier,OP_ATOMIC_END)"];
"1000453" [label="(Identifier,else_len)"];
"1000121" [label="(Call,r = compile_option_node(node, reg, env))"];
"1000444" [label="(Call,COP(reg)->jump.addr)"];
"1000403" [label="(Call,compile_tree(Then, reg, env))"];
"1000420" [label="(Identifier,Else)"];
"1000469" [label="(Block,)"];
"1000455" [label="(Call,r = add_op(reg, OP_ATOMIC_END))"];
"1000462" [label="(Identifier,r)"];
"1000443" [label="(Call,COP(reg)->jump.addr = SIZE_OP_ATOMIC_END + else_len + SIZE_INC_OP)"];
"1000450" [label="(Call,SIZE_OP_ATOMIC_END + else_len + SIZE_INC_OP)"];
"1000445" [label="(Call,COP(reg)->jump)"];
"1000460" [label="(ControlStructure,if (r != 0))"];
"1000304" [label="(Identifier,r)"];
"1000475" [label="(Identifier,env)"];
"1000103" [label="(MethodParameterIn,ScanEnv* env)"];
"1000451" [label="(Identifier,SIZE_OP_ATOMIC_END)"];
"1000297" [label="(Identifier,Else)"];
"1000470" [label="(Call,r = compile_tree(Else, reg, env))"];
"1000376" [label="(Call,compile_tree(cond, reg, env))"];
"1000423" [label="(Call,else_len < 0)"];
"1000298" [label="(Call,node->te.Else)"];
"1000479" [label="(MethodReturn,RET)"];
"1000457" [label="(Call,add_op(reg, OP_ATOMIC_END))"];
"1000439" [label="(Identifier,r)"];
"1000270" [label="(Call,r = add_op(reg, OP_ATOMIC_END))"];
"1000473" [label="(Identifier,Else)"];
"1000461" [label="(Call,r != 0)"];
"1000467" [label="(Call,IS_NOT_NULL(Else))"];
"1000296" [label="(Call,* Else = node->te.Else)"];
"1000463" [label="(Literal,0)"];
"1000430" [label="(Identifier,else_len)"];
"1000296" -> "1000277"  [label="AST: "];
"1000296" -> "1000298"  [label="CFG: "];
"1000297" -> "1000296"  [label="AST: "];
"1000298" -> "1000296"  [label="AST: "];
"1000304" -> "1000296"  [label="CFG: "];
"1000296" -> "1000479"  [label="DDG: node->te.Else"];
"1000296" -> "1000479"  [label="DDG: Else"];
"1000296" -> "1000414"  [label="DDG: Else"];
"1000414" -> "1000413"  [label="AST: "];
"1000414" -> "1000415"  [label="CFG: "];
"1000415" -> "1000414"  [label="AST: "];
"1000418" -> "1000414"  [label="CFG: "];
"1000430" -> "1000414"  [label="CFG: "];
"1000414" -> "1000479"  [label="DDG: IS_NOT_NULL(Else)"];
"1000414" -> "1000479"  [label="DDG: Else"];
"1000414" -> "1000419"  [label="DDG: Else"];
"1000414" -> "1000467"  [label="DDG: Else"];
"1000419" -> "1000417"  [label="AST: "];
"1000419" -> "1000421"  [label="CFG: "];
"1000420" -> "1000419"  [label="AST: "];
"1000421" -> "1000419"  [label="AST: "];
"1000417" -> "1000419"  [label="CFG: "];
"1000419" -> "1000479"  [label="DDG: Else"];
"1000419" -> "1000479"  [label="DDG: reg"];
"1000419" -> "1000417"  [label="DDG: Else"];
"1000419" -> "1000417"  [label="DDG: reg"];
"1000403" -> "1000419"  [label="DDG: reg"];
"1000388" -> "1000419"  [label="DDG: reg"];
"1000102" -> "1000419"  [label="DDG: reg"];
"1000419" -> "1000434"  [label="DDG: reg"];
"1000419" -> "1000467"  [label="DDG: Else"];
"1000417" -> "1000416"  [label="AST: "];
"1000418" -> "1000417"  [label="AST: "];
"1000424" -> "1000417"  [label="CFG: "];
"1000417" -> "1000479"  [label="DDG: compile_length_tree(Else, reg)"];
"1000417" -> "1000423"  [label="DDG: else_len"];
"1000423" -> "1000422"  [label="AST: "];
"1000423" -> "1000425"  [label="CFG: "];
"1000424" -> "1000423"  [label="AST: "];
"1000425" -> "1000423"  [label="AST: "];
"1000427" -> "1000423"  [label="CFG: "];
"1000433" -> "1000423"  [label="CFG: "];
"1000423" -> "1000479"  [label="DDG: else_len < 0"];
"1000423" -> "1000479"  [label="DDG: else_len"];
"1000423" -> "1000426"  [label="DDG: else_len"];
"1000423" -> "1000443"  [label="DDG: else_len"];
"1000423" -> "1000450"  [label="DDG: else_len"];
"1000423" -> "1000452"  [label="DDG: else_len"];
"1000426" -> "1000422"  [label="AST: "];
"1000426" -> "1000427"  [label="CFG: "];
"1000427" -> "1000426"  [label="AST: "];
"1000479" -> "1000426"  [label="CFG: "];
"1000426" -> "1000479"  [label="DDG: <RET>"];
"1000427" -> "1000426"  [label="DDG: else_len"];
"1000443" -> "1000277"  [label="AST: "];
"1000443" -> "1000450"  [label="CFG: "];
"1000444" -> "1000443"  [label="AST: "];
"1000450" -> "1000443"  [label="AST: "];
"1000456" -> "1000443"  [label="CFG: "];
"1000443" -> "1000479"  [label="DDG: SIZE_OP_ATOMIC_END + else_len + SIZE_INC_OP"];
"1000443" -> "1000479"  [label="DDG: COP(reg)->jump.addr"];
"1000429" -> "1000443"  [label="DDG: else_len"];
"1000450" -> "1000452"  [label="CFG: "];
"1000451" -> "1000450"  [label="AST: "];
"1000452" -> "1000450"  [label="AST: "];
"1000450" -> "1000479"  [label="DDG: else_len + SIZE_INC_OP"];
"1000450" -> "1000479"  [label="DDG: SIZE_OP_ATOMIC_END"];
"1000429" -> "1000450"  [label="DDG: else_len"];
"1000452" -> "1000454"  [label="CFG: "];
"1000453" -> "1000452"  [label="AST: "];
"1000454" -> "1000452"  [label="AST: "];
"1000452" -> "1000479"  [label="DDG: else_len"];
"1000452" -> "1000479"  [label="DDG: SIZE_INC_OP"];
"1000429" -> "1000452"  [label="DDG: else_len"];
"1000434" -> "1000432"  [label="AST: "];
"1000434" -> "1000436"  [label="CFG: "];
"1000435" -> "1000434"  [label="AST: "];
"1000436" -> "1000434"  [label="AST: "];
"1000432" -> "1000434"  [label="CFG: "];
"1000434" -> "1000479"  [label="DDG: OP_JUMP"];
"1000434" -> "1000479"  [label="DDG: reg"];
"1000434" -> "1000432"  [label="DDG: reg"];
"1000434" -> "1000432"  [label="DDG: OP_JUMP"];
"1000403" -> "1000434"  [label="DDG: reg"];
"1000388" -> "1000434"  [label="DDG: reg"];
"1000102" -> "1000434"  [label="DDG: reg"];
"1000434" -> "1000446"  [label="DDG: reg"];
"1000432" -> "1000277"  [label="AST: "];
"1000433" -> "1000432"  [label="AST: "];
"1000439" -> "1000432"  [label="CFG: "];
"1000432" -> "1000479"  [label="DDG: add_op(reg, OP_JUMP)"];
"1000432" -> "1000438"  [label="DDG: r"];
"1000438" -> "1000437"  [label="AST: "];
"1000438" -> "1000440"  [label="CFG: "];
"1000439" -> "1000438"  [label="AST: "];
"1000440" -> "1000438"  [label="AST: "];
"1000442" -> "1000438"  [label="CFG: "];
"1000447" -> "1000438"  [label="CFG: "];
"1000438" -> "1000479"  [label="DDG: r != 0"];
"1000438" -> "1000479"  [label="DDG: r"];
"1000438" -> "1000441"  [label="DDG: r"];
"1000441" -> "1000437"  [label="AST: "];
"1000441" -> "1000442"  [label="CFG: "];
"1000442" -> "1000441"  [label="AST: "];
"1000479" -> "1000441"  [label="CFG: "];
"1000441" -> "1000479"  [label="DDG: <RET>"];
"1000442" -> "1000441"  [label="DDG: r"];
"1000446" -> "1000445"  [label="AST: "];
"1000446" -> "1000447"  [label="CFG: "];
"1000447" -> "1000446"  [label="AST: "];
"1000448" -> "1000446"  [label="CFG: "];
"1000102" -> "1000446"  [label="DDG: reg"];
"1000446" -> "1000457"  [label="DDG: reg"];
"1000457" -> "1000455"  [label="AST: "];
"1000457" -> "1000459"  [label="CFG: "];
"1000458" -> "1000457"  [label="AST: "];
"1000459" -> "1000457"  [label="AST: "];
"1000455" -> "1000457"  [label="CFG: "];
"1000457" -> "1000479"  [label="DDG: OP_ATOMIC_END"];
"1000457" -> "1000479"  [label="DDG: reg"];
"1000457" -> "1000455"  [label="DDG: reg"];
"1000457" -> "1000455"  [label="DDG: OP_ATOMIC_END"];
"1000102" -> "1000457"  [label="DDG: reg"];
"1000388" -> "1000457"  [label="DDG: OP_ATOMIC_END"];
"1000457" -> "1000472"  [label="DDG: reg"];
"1000455" -> "1000277"  [label="AST: "];
"1000456" -> "1000455"  [label="AST: "];
"1000462" -> "1000455"  [label="CFG: "];
"1000455" -> "1000479"  [label="DDG: add_op(reg, OP_ATOMIC_END)"];
"1000455" -> "1000461"  [label="DDG: r"];
"1000461" -> "1000460"  [label="AST: "];
"1000461" -> "1000463"  [label="CFG: "];
"1000462" -> "1000461"  [label="AST: "];
"1000463" -> "1000461"  [label="AST: "];
"1000465" -> "1000461"  [label="CFG: "];
"1000468" -> "1000461"  [label="CFG: "];
"1000461" -> "1000479"  [label="DDG: r != 0"];
"1000461" -> "1000479"  [label="DDG: r"];
"1000461" -> "1000464"  [label="DDG: r"];
"1000461" -> "1000477"  [label="DDG: r"];
"1000464" -> "1000460"  [label="AST: "];
"1000464" -> "1000465"  [label="CFG: "];
"1000465" -> "1000464"  [label="AST: "];
"1000479" -> "1000464"  [label="CFG: "];
"1000464" -> "1000479"  [label="DDG: <RET>"];
"1000465" -> "1000464"  [label="DDG: r"];
"1000477" -> "1000104"  [label="AST: "];
"1000477" -> "1000478"  [label="CFG: "];
"1000478" -> "1000477"  [label="AST: "];
"1000479" -> "1000477"  [label="CFG: "];
"1000477" -> "1000479"  [label="DDG: <RET>"];
"1000478" -> "1000477"  [label="DDG: r"];
"1000222" -> "1000477"  [label="DDG: r"];
"1000113" -> "1000477"  [label="DDG: r"];
"1000470" -> "1000477"  [label="DDG: r"];
"1000270" -> "1000477"  [label="DDG: r"];
"1000121" -> "1000477"  [label="DDG: r"];
"1000472" -> "1000470"  [label="AST: "];
"1000472" -> "1000475"  [label="CFG: "];
"1000473" -> "1000472"  [label="AST: "];
"1000474" -> "1000472"  [label="AST: "];
"1000475" -> "1000472"  [label="AST: "];
"1000470" -> "1000472"  [label="CFG: "];
"1000472" -> "1000479"  [label="DDG: reg"];
"1000472" -> "1000479"  [label="DDG: env"];
"1000472" -> "1000479"  [label="DDG: Else"];
"1000472" -> "1000470"  [label="DDG: Else"];
"1000472" -> "1000470"  [label="DDG: reg"];
"1000472" -> "1000470"  [label="DDG: env"];
"1000467" -> "1000472"  [label="DDG: Else"];
"1000102" -> "1000472"  [label="DDG: reg"];
"1000376" -> "1000472"  [label="DDG: env"];
"1000403" -> "1000472"  [label="DDG: env"];
"1000103" -> "1000472"  [label="DDG: env"];
"1000470" -> "1000469"  [label="AST: "];
"1000471" -> "1000470"  [label="AST: "];
"1000476" -> "1000470"  [label="CFG: "];
"1000470" -> "1000479"  [label="DDG: compile_tree(Else, reg, env)"];
"1000470" -> "1000479"  [label="DDG: r"];
"1000467" -> "1000466"  [label="AST: "];
"1000467" -> "1000468"  [label="CFG: "];
"1000468" -> "1000467"  [label="AST: "];
"1000471" -> "1000467"  [label="CFG: "];
"1000476" -> "1000467"  [label="CFG: "];
"1000467" -> "1000479"  [label="DDG: Else"];
"1000467" -> "1000479"  [label="DDG: IS_NOT_NULL(Else)"];
}
