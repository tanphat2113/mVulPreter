digraph "0_linux_b5b515445f4f5a905c5dd27e6e682868ccd6c09d@integer" {
"1000256" [label="(Call,rc = access_ok(access, arg, request_offset + request_size))"];
"1000258" [label="(Call,access_ok(access, arg, request_offset + request_size))"];
"1000237" [label="(Call,access = VERIFY_READ)"];
"1000245" [label="(Call,access = VERIFY_WRITE)"];
"1000206" [label="(Call,(struct pmcraid_passthrough_ioctl_buffer *) arg)"];
"1000117" [label="(MethodParameterIn,unsigned long arg)"];
"1000252" [label="(Call,request_size > 0)"];
"1000221" [label="(Call,request_size = buffer->ioarcb.data_transfer_length)"];
"1000265" [label="(Call,!rc)"];
"1000753" [label="(Return,return rc;)"];
"1000204" [label="(Call,__copy_from_user(buffer,\n\t\t\t     (struct pmcraid_passthrough_ioctl_buffer *) arg,\n\t\t\t     sizeof(struct pmcraid_passthrough_ioctl_buffer)))"];
"1000238" [label="(Identifier,access)"];
"1000197" [label="(Call,request_buffer = arg + request_offset)"];
"1000739" [label="(Call,rc = -EFAULT)"];
"1000478" [label="(Call,direction == DMA_TO_DEVICE && request_size > 0)"];
"1000257" [label="(Identifier,rc)"];
"1000239" [label="(Identifier,VERIFY_READ)"];
"1000275" [label="(Call,request_size < 0)"];
"1000254" [label="(Literal,0)"];
"1000258" [label="(Call,access_ok(access, arg, request_offset + request_size))"];
"1000244" [label="(Block,)"];
"1000253" [label="(Identifier,request_size)"];
"1000251" [label="(ControlStructure,if (request_size > 0))"];
"1000202" [label="(Call,rc = __copy_from_user(buffer,\n\t\t\t     (struct pmcraid_passthrough_ioctl_buffer *) arg,\n\t\t\t     sizeof(struct pmcraid_passthrough_ioctl_buffer)))"];
"1000216" [label="(Call,rc = -EFAULT)"];
"1000753" [label="(Return,return rc;)"];
"1000255" [label="(Block,)"];
"1000223" [label="(Call,buffer->ioarcb.data_transfer_length)"];
"1000245" [label="(Call,access = VERIFY_WRITE)"];
"1000236" [label="(Block,)"];
"1000468" [label="(Call,request_size < 0)"];
"1000692" [label="(Call,rc = -ETIMEDOUT)"];
"1000472" [label="(Call,rc = -EINVAL)"];
"1000279" [label="(Call,rc = -EINVAL)"];
"1000269" [label="(Identifier,rc)"];
"1000293" [label="(Call,rc = -EINVAL)"];
"1000671" [label="(Call,rc = -ETIMEDOUT)"];
"1000755" [label="(MethodReturn,static long)"];
"1000486" [label="(Call,rc = pmcraid_copy_sglist(cmd->sglist,\n\t\t\t\t\t request_buffer,\n\t\t\t\t\t request_size,\n\t\t\t\t\t direction))"];
"1000265" [label="(Call,!rc)"];
"1000261" [label="(Call,request_offset + request_size)"];
"1000456" [label="(Call,pmcraid_build_passthrough_ioadls(cmd,\n\t\t\t\t\t\t      request_size,\n\t\t\t\t\t\t      direction))"];
"1000241" [label="(Identifier,direction)"];
"1000454" [label="(Call,rc = pmcraid_build_passthrough_ioadls(cmd,\n\t\t\t\t\t\t      request_size,\n\t\t\t\t\t\t      direction))"];
"1000221" [label="(Call,request_size = buffer->ioarcb.data_transfer_length)"];
"1000222" [label="(Identifier,request_size)"];
"1000754" [label="(Identifier,rc)"];
"1000260" [label="(Identifier,arg)"];
"1000308" [label="(Call,rc = -ENOMEM)"];
"1000199" [label="(Call,arg + request_offset)"];
"1000259" [label="(Identifier,access)"];
"1000256" [label="(Call,rc = access_ok(access, arg, request_offset + request_size))"];
"1000252" [label="(Call,request_size > 0)"];
"1000117" [label="(MethodParameterIn,unsigned long arg)"];
"1000264" [label="(ControlStructure,if (!rc))"];
"1000288" [label="(Identifier,buffer)"];
"1000237" [label="(Call,access = VERIFY_READ)"];
"1000711" [label="(Call,rc = -EFAULT)"];
"1000276" [label="(Identifier,request_size)"];
"1000206" [label="(Call,(struct pmcraid_passthrough_ioctl_buffer *) arg)"];
"1000266" [label="(Identifier,rc)"];
"1000725" [label="(Call,rc = pmcraid_copy_sglist(cmd->sglist,\n\t\t\t\t\t request_buffer,\n\t\t\t\t\t request_size,\n\t\t\t\t\t direction))"];
"1000208" [label="(Identifier,arg)"];
"1000268" [label="(Call,rc = -EFAULT)"];
"1000247" [label="(Identifier,VERIFY_WRITE)"];
"1000249" [label="(Identifier,direction)"];
"1000118" [label="(Block,)"];
"1000246" [label="(Identifier,access)"];
"1000232" [label="(Identifier,buffer)"];
"1000256" -> "1000255"  [label="AST: "];
"1000256" -> "1000258"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000258" -> "1000256"  [label="AST: "];
"1000266" -> "1000256"  [label="CFG: "];
"1000256" -> "1000755"  [label="DDG: access_ok(access, arg, request_offset + request_size)"];
"1000258" -> "1000256"  [label="DDG: access"];
"1000258" -> "1000256"  [label="DDG: arg"];
"1000258" -> "1000256"  [label="DDG: request_offset + request_size"];
"1000256" -> "1000265"  [label="DDG: rc"];
"1000258" -> "1000261"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000260" -> "1000258"  [label="AST: "];
"1000261" -> "1000258"  [label="AST: "];
"1000258" -> "1000755"  [label="DDG: access"];
"1000258" -> "1000755"  [label="DDG: arg"];
"1000258" -> "1000755"  [label="DDG: request_offset + request_size"];
"1000237" -> "1000258"  [label="DDG: access"];
"1000245" -> "1000258"  [label="DDG: access"];
"1000206" -> "1000258"  [label="DDG: arg"];
"1000117" -> "1000258"  [label="DDG: arg"];
"1000252" -> "1000258"  [label="DDG: request_size"];
"1000237" -> "1000236"  [label="AST: "];
"1000237" -> "1000239"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000239" -> "1000237"  [label="AST: "];
"1000241" -> "1000237"  [label="CFG: "];
"1000237" -> "1000755"  [label="DDG: VERIFY_READ"];
"1000237" -> "1000755"  [label="DDG: access"];
"1000245" -> "1000244"  [label="AST: "];
"1000245" -> "1000247"  [label="CFG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000247" -> "1000245"  [label="AST: "];
"1000249" -> "1000245"  [label="CFG: "];
"1000245" -> "1000755"  [label="DDG: access"];
"1000245" -> "1000755"  [label="DDG: VERIFY_WRITE"];
"1000206" -> "1000204"  [label="AST: "];
"1000206" -> "1000208"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000206"  [label="AST: "];
"1000210" -> "1000206"  [label="CFG: "];
"1000206" -> "1000755"  [label="DDG: arg"];
"1000206" -> "1000204"  [label="DDG: arg"];
"1000117" -> "1000206"  [label="DDG: arg"];
"1000117" -> "1000113"  [label="AST: "];
"1000117" -> "1000755"  [label="DDG: arg"];
"1000117" -> "1000197"  [label="DDG: arg"];
"1000117" -> "1000199"  [label="DDG: arg"];
"1000252" -> "1000251"  [label="AST: "];
"1000252" -> "1000254"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000254" -> "1000252"  [label="AST: "];
"1000257" -> "1000252"  [label="CFG: "];
"1000276" -> "1000252"  [label="CFG: "];
"1000252" -> "1000755"  [label="DDG: request_size > 0"];
"1000221" -> "1000252"  [label="DDG: request_size"];
"1000252" -> "1000261"  [label="DDG: request_size"];
"1000252" -> "1000275"  [label="DDG: request_size"];
"1000252" -> "1000456"  [label="DDG: request_size"];
"1000252" -> "1000468"  [label="DDG: request_size"];
"1000252" -> "1000478"  [label="DDG: request_size > 0"];
"1000221" -> "1000118"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000232" -> "1000221"  [label="CFG: "];
"1000221" -> "1000755"  [label="DDG: buffer->ioarcb.data_transfer_length"];
"1000265" -> "1000264"  [label="AST: "];
"1000265" -> "1000266"  [label="CFG: "];
"1000266" -> "1000265"  [label="AST: "];
"1000269" -> "1000265"  [label="CFG: "];
"1000288" -> "1000265"  [label="CFG: "];
"1000265" -> "1000755"  [label="DDG: !rc"];
"1000265" -> "1000755"  [label="DDG: rc"];
"1000265" -> "1000753"  [label="DDG: rc"];
"1000753" -> "1000118"  [label="AST: "];
"1000753" -> "1000754"  [label="CFG: "];
"1000754" -> "1000753"  [label="AST: "];
"1000755" -> "1000753"  [label="CFG: "];
"1000753" -> "1000755"  [label="DDG: <RET>"];
"1000754" -> "1000753"  [label="DDG: rc"];
"1000454" -> "1000753"  [label="DDG: rc"];
"1000711" -> "1000753"  [label="DDG: rc"];
"1000293" -> "1000753"  [label="DDG: rc"];
"1000279" -> "1000753"  [label="DDG: rc"];
"1000216" -> "1000753"  [label="DDG: rc"];
"1000268" -> "1000753"  [label="DDG: rc"];
"1000671" -> "1000753"  [label="DDG: rc"];
"1000472" -> "1000753"  [label="DDG: rc"];
"1000725" -> "1000753"  [label="DDG: rc"];
"1000486" -> "1000753"  [label="DDG: rc"];
"1000308" -> "1000753"  [label="DDG: rc"];
"1000692" -> "1000753"  [label="DDG: rc"];
"1000202" -> "1000753"  [label="DDG: rc"];
"1000739" -> "1000753"  [label="DDG: rc"];
}
