digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_4@pointer" {
"1000406" [label="(Call,!sk->sk_bound_dev_if)"];
"1000391" [label="(Call,!sk->sk_bound_dev_if)"];
"1000382" [label="(Call,sk->sk_bound_dev_if = usin->sin6_scope_id)"];
"1000369" [label="(Call,sk->sk_bound_dev_if != usin->sin6_scope_id)"];
"1000355" [label="(Call,addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    usin->sin6_scope_id)"];
"1000356" [label="(Call,addr_len >= sizeof(struct sockaddr_in6))"];
"1000158" [label="(Call,addr_len < SIN6_LEN_RFC2133)"];
"1000107" [label="(MethodParameterIn,int addr_len)"];
"1000398" [label="(Call,sk->sk_bound_dev_if = np->mcast_oif)"];
"1000457" [label="(Call,fl6.flowi6_oif = sk->sk_bound_dev_if)"];
"1000487" [label="(Call,!fl6.flowi6_oif)"];
"1000486" [label="(Call,!fl6.flowi6_oif && (addr_type&IPV6_ADDR_MULTICAST))"];
"1000383" [label="(Call,sk->sk_bound_dev_if)"];
"1000160" [label="(Identifier,SIN6_LEN_RFC2133)"];
"1000600" [label="(MethodReturn,static int)"];
"1000492" [label="(Identifier,addr_type)"];
"1000354" [label="(ControlStructure,if (addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    usin->sin6_scope_id))"];
"1000157" [label="(ControlStructure,if (addr_len < SIN6_LEN_RFC2133))"];
"1000502" [label="(Identifier,sk)"];
"1000496" [label="(Identifier,fl6)"];
"1000486" [label="(Call,!fl6.flowi6_oif && (addr_type&IPV6_ADDR_MULTICAST))"];
"1000418" [label="(Identifier,sk)"];
"1000393" [label="(Identifier,sk)"];
"1000382" [label="(Call,sk->sk_bound_dev_if = usin->sin6_scope_id)"];
"1000360" [label="(Call,usin->sin6_scope_id)"];
"1000107" [label="(MethodParameterIn,int addr_len)"];
"1000158" [label="(Call,addr_len < SIN6_LEN_RFC2133)"];
"1000363" [label="(Block,)"];
"1000373" [label="(Call,usin->sin6_scope_id)"];
"1000402" [label="(Call,np->mcast_oif)"];
"1000358" [label="(Call,sizeof(struct sockaddr_in6))"];
"1000399" [label="(Call,sk->sk_bound_dev_if)"];
"1000365" [label="(Call,sk->sk_bound_dev_if &&\n\t\t\t    sk->sk_bound_dev_if != usin->sin6_scope_id)"];
"1000412" [label="(Identifier,err)"];
"1000357" [label="(Identifier,addr_len)"];
"1000356" [label="(Call,addr_len >= sizeof(struct sockaddr_in6))"];
"1000407" [label="(Call,sk->sk_bound_dev_if)"];
"1000491" [label="(Call,addr_type&IPV6_ADDR_MULTICAST)"];
"1000386" [label="(Call,usin->sin6_scope_id)"];
"1000457" [label="(Call,fl6.flowi6_oif = sk->sk_bound_dev_if)"];
"1000391" [label="(Call,!sk->sk_bound_dev_if)"];
"1000390" [label="(Call,!sk->sk_bound_dev_if && (addr_type & IPV6_ADDR_MULTICAST))"];
"1000458" [label="(Call,fl6.flowi6_oif)"];
"1000466" [label="(Identifier,fl6)"];
"1000485" [label="(ControlStructure,if (!fl6.flowi6_oif && (addr_type&IPV6_ADDR_MULTICAST)))"];
"1000355" [label="(Call,addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    usin->sin6_scope_id)"];
"1000369" [label="(Call,sk->sk_bound_dev_if != usin->sin6_scope_id)"];
"1000370" [label="(Call,sk->sk_bound_dev_if)"];
"1000159" [label="(Identifier,addr_len)"];
"1000163" [label="(Identifier,EINVAL)"];
"1000406" [label="(Call,!sk->sk_bound_dev_if)"];
"1000392" [label="(Call,sk->sk_bound_dev_if)"];
"1000408" [label="(Identifier,sk)"];
"1000405" [label="(ControlStructure,if (!sk->sk_bound_dev_if))"];
"1000108" [label="(Block,)"];
"1000398" [label="(Call,sk->sk_bound_dev_if = np->mcast_oif)"];
"1000361" [label="(Identifier,usin)"];
"1000152" [label="(Call,__ip4_datagram_connect(sk, uaddr, addr_len))"];
"1000487" [label="(Call,!fl6.flowi6_oif)"];
"1000367" [label="(Identifier,sk)"];
"1000461" [label="(Call,sk->sk_bound_dev_if)"];
"1000488" [label="(Call,fl6.flowi6_oif)"];
"1000396" [label="(Identifier,addr_type)"];
"1000389" [label="(ControlStructure,if (!sk->sk_bound_dev_if && (addr_type & IPV6_ADDR_MULTICAST)))"];
"1000167" [label="(Identifier,usin)"];
"1000406" -> "1000405"  [label="AST: "];
"1000406" -> "1000407"  [label="CFG: "];
"1000407" -> "1000406"  [label="AST: "];
"1000412" -> "1000406"  [label="CFG: "];
"1000418" -> "1000406"  [label="CFG: "];
"1000406" -> "1000600"  [label="DDG: sk->sk_bound_dev_if"];
"1000406" -> "1000600"  [label="DDG: !sk->sk_bound_dev_if"];
"1000391" -> "1000406"  [label="DDG: sk->sk_bound_dev_if"];
"1000398" -> "1000406"  [label="DDG: sk->sk_bound_dev_if"];
"1000406" -> "1000457"  [label="DDG: sk->sk_bound_dev_if"];
"1000391" -> "1000390"  [label="AST: "];
"1000391" -> "1000392"  [label="CFG: "];
"1000392" -> "1000391"  [label="AST: "];
"1000396" -> "1000391"  [label="CFG: "];
"1000390" -> "1000391"  [label="CFG: "];
"1000391" -> "1000390"  [label="DDG: sk->sk_bound_dev_if"];
"1000382" -> "1000391"  [label="DDG: sk->sk_bound_dev_if"];
"1000382" -> "1000363"  [label="AST: "];
"1000382" -> "1000386"  [label="CFG: "];
"1000383" -> "1000382"  [label="AST: "];
"1000386" -> "1000382"  [label="AST: "];
"1000393" -> "1000382"  [label="CFG: "];
"1000382" -> "1000600"  [label="DDG: usin->sin6_scope_id"];
"1000369" -> "1000382"  [label="DDG: usin->sin6_scope_id"];
"1000355" -> "1000382"  [label="DDG: usin->sin6_scope_id"];
"1000369" -> "1000365"  [label="AST: "];
"1000369" -> "1000373"  [label="CFG: "];
"1000370" -> "1000369"  [label="AST: "];
"1000373" -> "1000369"  [label="AST: "];
"1000365" -> "1000369"  [label="CFG: "];
"1000369" -> "1000600"  [label="DDG: usin->sin6_scope_id"];
"1000369" -> "1000365"  [label="DDG: sk->sk_bound_dev_if"];
"1000369" -> "1000365"  [label="DDG: usin->sin6_scope_id"];
"1000355" -> "1000369"  [label="DDG: usin->sin6_scope_id"];
"1000355" -> "1000354"  [label="AST: "];
"1000355" -> "1000356"  [label="CFG: "];
"1000355" -> "1000360"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000360" -> "1000355"  [label="AST: "];
"1000367" -> "1000355"  [label="CFG: "];
"1000393" -> "1000355"  [label="CFG: "];
"1000355" -> "1000600"  [label="DDG: addr_len >= sizeof(struct sockaddr_in6)"];
"1000355" -> "1000600"  [label="DDG: usin->sin6_scope_id"];
"1000355" -> "1000600"  [label="DDG: addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    usin->sin6_scope_id"];
"1000356" -> "1000355"  [label="DDG: addr_len"];
"1000356" -> "1000358"  [label="CFG: "];
"1000357" -> "1000356"  [label="AST: "];
"1000358" -> "1000356"  [label="AST: "];
"1000361" -> "1000356"  [label="CFG: "];
"1000356" -> "1000600"  [label="DDG: addr_len"];
"1000158" -> "1000356"  [label="DDG: addr_len"];
"1000107" -> "1000356"  [label="DDG: addr_len"];
"1000158" -> "1000157"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000163" -> "1000158"  [label="CFG: "];
"1000167" -> "1000158"  [label="CFG: "];
"1000158" -> "1000600"  [label="DDG: addr_len"];
"1000158" -> "1000600"  [label="DDG: SIN6_LEN_RFC2133"];
"1000158" -> "1000600"  [label="DDG: addr_len < SIN6_LEN_RFC2133"];
"1000107" -> "1000158"  [label="DDG: addr_len"];
"1000107" -> "1000104"  [label="AST: "];
"1000107" -> "1000600"  [label="DDG: addr_len"];
"1000107" -> "1000152"  [label="DDG: addr_len"];
"1000398" -> "1000389"  [label="AST: "];
"1000398" -> "1000402"  [label="CFG: "];
"1000399" -> "1000398"  [label="AST: "];
"1000402" -> "1000398"  [label="AST: "];
"1000408" -> "1000398"  [label="CFG: "];
"1000398" -> "1000600"  [label="DDG: np->mcast_oif"];
"1000457" -> "1000108"  [label="AST: "];
"1000457" -> "1000461"  [label="CFG: "];
"1000458" -> "1000457"  [label="AST: "];
"1000461" -> "1000457"  [label="AST: "];
"1000466" -> "1000457"  [label="CFG: "];
"1000457" -> "1000600"  [label="DDG: sk->sk_bound_dev_if"];
"1000457" -> "1000487"  [label="DDG: fl6.flowi6_oif"];
"1000487" -> "1000486"  [label="AST: "];
"1000487" -> "1000488"  [label="CFG: "];
"1000488" -> "1000487"  [label="AST: "];
"1000492" -> "1000487"  [label="CFG: "];
"1000486" -> "1000487"  [label="CFG: "];
"1000487" -> "1000600"  [label="DDG: fl6.flowi6_oif"];
"1000487" -> "1000486"  [label="DDG: fl6.flowi6_oif"];
"1000486" -> "1000485"  [label="AST: "];
"1000486" -> "1000491"  [label="CFG: "];
"1000491" -> "1000486"  [label="AST: "];
"1000496" -> "1000486"  [label="CFG: "];
"1000502" -> "1000486"  [label="CFG: "];
"1000486" -> "1000600"  [label="DDG: !fl6.flowi6_oif && (addr_type&IPV6_ADDR_MULTICAST)"];
"1000486" -> "1000600"  [label="DDG: addr_type&IPV6_ADDR_MULTICAST"];
"1000486" -> "1000600"  [label="DDG: !fl6.flowi6_oif"];
"1000491" -> "1000486"  [label="DDG: addr_type"];
"1000491" -> "1000486"  [label="DDG: IPV6_ADDR_MULTICAST"];
}
