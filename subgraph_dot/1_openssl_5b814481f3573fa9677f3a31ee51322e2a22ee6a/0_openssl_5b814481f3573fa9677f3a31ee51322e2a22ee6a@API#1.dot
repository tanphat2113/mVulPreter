digraph "0_openssl_5b814481f3573fa9677f3a31ee51322e2a22ee6a@API" {
"1000177" [label="(Call,memcpy(&(ctx->enc_data[ctx->num]), in, i))"];
"1000104" [label="(MethodParameterIn,const unsigned char *in)"];
"1000168" [label="(Call,i = ctx->length - ctx->num)"];
"1000170" [label="(Call,ctx->length - ctx->num)"];
"1000134" [label="(Call,(ctx->num + inl) < ctx->length)"];
"1000118" [label="(Call,inl <= 0)"];
"1000105" [label="(MethodParameterIn,int inl)"];
"1000123" [label="(Call,ctx->length <= (int)sizeof(ctx->enc_data))"];
"1000162" [label="(Call,ctx->num != 0)"];
"1000188" [label="(Call,in += i)"];
"1000235" [label="(Call,EVP_EncodeBlock(out, in, ctx->length))"];
"1000227" [label="(Call,inl >= ctx->length)"];
"1000246" [label="(Call,inl -= ctx->length)"];
"1000269" [label="(Call,inl != 0)"];
"1000272" [label="(Call,memcpy(&(ctx->enc_data[0]), in, inl))"];
"1000281" [label="(Call,ctx->num = inl)"];
"1000233" [label="(Call,j = EVP_EncodeBlock(out, in, ctx->length))"];
"1000251" [label="(Call,out += j)"];
"1000256" [label="(Call,out++)"];
"1000263" [label="(Call,total += j + 1)"];
"1000286" [label="(Call,*outl = total)"];
"1000265" [label="(Call,j + 1)"];
"1000241" [label="(Call,in += ctx->length)"];
"1000191" [label="(Call,inl -= i)"];
"1000281" [label="(Call,ctx->num = inl)"];
"1000273" [label="(Call,&(ctx->enc_data[0]))"];
"1000188" [label="(Call,in += i)"];
"1000192" [label="(Identifier,inl)"];
"1000266" [label="(Identifier,j)"];
"1000125" [label="(Identifier,ctx)"];
"1000186" [label="(Identifier,in)"];
"1000235" [label="(Call,EVP_EncodeBlock(out, in, ctx->length))"];
"1000285" [label="(Identifier,inl)"];
"1000105" [label="(MethodParameterIn,int inl)"];
"1000257" [label="(Identifier,out)"];
"1000110" [label="(Call,total = 0)"];
"1000270" [label="(Identifier,inl)"];
"1000133" [label="(ControlStructure,if ((ctx->num + inl) < ctx->length))"];
"1000134" [label="(Call,(ctx->num + inl) < ctx->length)"];
"1000119" [label="(Identifier,inl)"];
"1000166" [label="(Literal,0)"];
"1000140" [label="(Call,ctx->length)"];
"1000227" [label="(Call,inl >= ctx->length)"];
"1000287" [label="(Call,*outl)"];
"1000290" [label="(MethodReturn,void)"];
"1000271" [label="(Literal,0)"];
"1000256" [label="(Call,out++)"];
"1000232" [label="(Block,)"];
"1000280" [label="(Identifier,inl)"];
"1000282" [label="(Call,ctx->num)"];
"1000127" [label="(Call,(int)sizeof(ctx->enc_data))"];
"1000269" [label="(Call,inl != 0)"];
"1000241" [label="(Call,in += ctx->length)"];
"1000263" [label="(Call,total += j + 1)"];
"1000121" [label="(Return,return;)"];
"1000255" [label="(Call,*(out++))"];
"1000286" [label="(Call,*outl = total)"];
"1000246" [label="(Call,inl -= ctx->length)"];
"1000289" [label="(Identifier,total)"];
"1000181" [label="(Identifier,ctx)"];
"1000117" [label="(ControlStructure,if (inl <= 0))"];
"1000162" [label="(Call,ctx->num != 0)"];
"1000276" [label="(Identifier,ctx)"];
"1000135" [label="(Call,ctx->num + inl)"];
"1000104" [label="(MethodParameterIn,const unsigned char *in)"];
"1000171" [label="(Call,ctx->length)"];
"1000164" [label="(Identifier,ctx)"];
"1000267" [label="(Literal,1)"];
"1000163" [label="(Call,ctx->num)"];
"1000243" [label="(Call,ctx->length)"];
"1000288" [label="(Identifier,outl)"];
"1000177" [label="(Call,memcpy(&(ctx->enc_data[ctx->num]), in, i))"];
"1000242" [label="(Identifier,in)"];
"1000233" [label="(Call,j = EVP_EncodeBlock(out, in, ctx->length))"];
"1000168" [label="(Call,i = ctx->length - ctx->num)"];
"1000238" [label="(Call,ctx->length)"];
"1000190" [label="(Identifier,i)"];
"1000170" [label="(Call,ctx->length - ctx->num)"];
"1000248" [label="(Call,ctx->length)"];
"1000174" [label="(Call,ctx->num)"];
"1000144" [label="(Call,memcpy(&(ctx->enc_data[ctx->num]), in, inl))"];
"1000193" [label="(Identifier,i)"];
"1000178" [label="(Call,&(ctx->enc_data[ctx->num]))"];
"1000124" [label="(Call,ctx->length)"];
"1000272" [label="(Call,memcpy(&(ctx->enc_data[0]), in, inl))"];
"1000169" [label="(Identifier,i)"];
"1000251" [label="(Call,out += j)"];
"1000226" [label="(ControlStructure,while (inl >= ctx->length))"];
"1000283" [label="(Identifier,ctx)"];
"1000236" [label="(Identifier,out)"];
"1000264" [label="(Identifier,total)"];
"1000120" [label="(Literal,0)"];
"1000161" [label="(ControlStructure,if (ctx->num != 0))"];
"1000122" [label="(Call,OPENSSL_assert(ctx->length <= (int)sizeof(ctx->enc_data)))"];
"1000253" [label="(Identifier,j)"];
"1000167" [label="(Block,)"];
"1000268" [label="(ControlStructure,if (inl != 0))"];
"1000265" [label="(Call,j + 1)"];
"1000123" [label="(Call,ctx->length <= (int)sizeof(ctx->enc_data))"];
"1000234" [label="(Identifier,j)"];
"1000155" [label="(Call,ctx->num += inl)"];
"1000252" [label="(Identifier,out)"];
"1000187" [label="(Identifier,i)"];
"1000148" [label="(Identifier,ctx)"];
"1000214" [label="(Call,out++)"];
"1000221" [label="(Call,total = j + 1)"];
"1000229" [label="(Call,ctx->length)"];
"1000228" [label="(Identifier,inl)"];
"1000237" [label="(Identifier,in)"];
"1000196" [label="(Call,EVP_EncodeBlock(out, ctx->enc_data, ctx->length))"];
"1000102" [label="(MethodParameterIn,unsigned char *out)"];
"1000189" [label="(Identifier,in)"];
"1000118" [label="(Call,inl <= 0)"];
"1000195" [label="(Identifier,j)"];
"1000247" [label="(Identifier,inl)"];
"1000106" [label="(Block,)"];
"1000279" [label="(Identifier,in)"];
"1000191" [label="(Call,inl -= i)"];
"1000177" -> "1000167"  [label="AST: "];
"1000177" -> "1000187"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000186" -> "1000177"  [label="AST: "];
"1000187" -> "1000177"  [label="AST: "];
"1000189" -> "1000177"  [label="CFG: "];
"1000177" -> "1000290"  [label="DDG: &(ctx->enc_data[ctx->num])"];
"1000177" -> "1000290"  [label="DDG: memcpy(&(ctx->enc_data[ctx->num]), in, i)"];
"1000104" -> "1000177"  [label="DDG: in"];
"1000168" -> "1000177"  [label="DDG: i"];
"1000177" -> "1000188"  [label="DDG: i"];
"1000177" -> "1000188"  [label="DDG: in"];
"1000177" -> "1000191"  [label="DDG: i"];
"1000104" -> "1000100"  [label="AST: "];
"1000104" -> "1000290"  [label="DDG: in"];
"1000104" -> "1000144"  [label="DDG: in"];
"1000104" -> "1000188"  [label="DDG: in"];
"1000104" -> "1000235"  [label="DDG: in"];
"1000104" -> "1000241"  [label="DDG: in"];
"1000104" -> "1000272"  [label="DDG: in"];
"1000168" -> "1000167"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000181" -> "1000168"  [label="CFG: "];
"1000168" -> "1000290"  [label="DDG: ctx->length - ctx->num"];
"1000170" -> "1000168"  [label="DDG: ctx->length"];
"1000170" -> "1000168"  [label="DDG: ctx->num"];
"1000170" -> "1000174"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000174" -> "1000170"  [label="AST: "];
"1000134" -> "1000170"  [label="DDG: ctx->length"];
"1000162" -> "1000170"  [label="DDG: ctx->num"];
"1000170" -> "1000196"  [label="DDG: ctx->length"];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000140"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000140" -> "1000134"  [label="AST: "];
"1000148" -> "1000134"  [label="CFG: "];
"1000164" -> "1000134"  [label="CFG: "];
"1000134" -> "1000290"  [label="DDG: ctx->length"];
"1000134" -> "1000290"  [label="DDG: (ctx->num + inl) < ctx->length"];
"1000134" -> "1000290"  [label="DDG: ctx->num + inl"];
"1000118" -> "1000134"  [label="DDG: inl"];
"1000105" -> "1000134"  [label="DDG: inl"];
"1000123" -> "1000134"  [label="DDG: ctx->length"];
"1000134" -> "1000227"  [label="DDG: ctx->length"];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="AST: "];
"1000121" -> "1000118"  [label="CFG: "];
"1000125" -> "1000118"  [label="CFG: "];
"1000118" -> "1000290"  [label="DDG: inl <= 0"];
"1000118" -> "1000290"  [label="DDG: inl"];
"1000105" -> "1000118"  [label="DDG: inl"];
"1000118" -> "1000135"  [label="DDG: inl"];
"1000118" -> "1000144"  [label="DDG: inl"];
"1000118" -> "1000191"  [label="DDG: inl"];
"1000118" -> "1000227"  [label="DDG: inl"];
"1000105" -> "1000100"  [label="AST: "];
"1000105" -> "1000290"  [label="DDG: inl"];
"1000105" -> "1000135"  [label="DDG: inl"];
"1000105" -> "1000144"  [label="DDG: inl"];
"1000105" -> "1000155"  [label="DDG: inl"];
"1000105" -> "1000191"  [label="DDG: inl"];
"1000105" -> "1000227"  [label="DDG: inl"];
"1000105" -> "1000246"  [label="DDG: inl"];
"1000105" -> "1000269"  [label="DDG: inl"];
"1000105" -> "1000272"  [label="DDG: inl"];
"1000105" -> "1000281"  [label="DDG: inl"];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000127"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000127" -> "1000123"  [label="AST: "];
"1000122" -> "1000123"  [label="CFG: "];
"1000123" -> "1000290"  [label="DDG: (int)sizeof(ctx->enc_data)"];
"1000123" -> "1000122"  [label="DDG: ctx->length"];
"1000123" -> "1000122"  [label="DDG: (int)sizeof(ctx->enc_data)"];
"1000162" -> "1000161"  [label="AST: "];
"1000162" -> "1000166"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000166" -> "1000162"  [label="AST: "];
"1000169" -> "1000162"  [label="CFG: "];
"1000228" -> "1000162"  [label="CFG: "];
"1000162" -> "1000290"  [label="DDG: ctx->num != 0"];
"1000188" -> "1000167"  [label="AST: "];
"1000188" -> "1000190"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000188"  [label="AST: "];
"1000192" -> "1000188"  [label="CFG: "];
"1000188" -> "1000290"  [label="DDG: in"];
"1000188" -> "1000235"  [label="DDG: in"];
"1000188" -> "1000272"  [label="DDG: in"];
"1000235" -> "1000233"  [label="AST: "];
"1000235" -> "1000238"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="AST: "];
"1000238" -> "1000235"  [label="AST: "];
"1000233" -> "1000235"  [label="CFG: "];
"1000235" -> "1000227"  [label="DDG: ctx->length"];
"1000235" -> "1000233"  [label="DDG: out"];
"1000235" -> "1000233"  [label="DDG: in"];
"1000235" -> "1000233"  [label="DDG: ctx->length"];
"1000214" -> "1000235"  [label="DDG: out"];
"1000256" -> "1000235"  [label="DDG: out"];
"1000102" -> "1000235"  [label="DDG: out"];
"1000241" -> "1000235"  [label="DDG: in"];
"1000227" -> "1000235"  [label="DDG: ctx->length"];
"1000235" -> "1000241"  [label="DDG: ctx->length"];
"1000235" -> "1000241"  [label="DDG: in"];
"1000235" -> "1000246"  [label="DDG: ctx->length"];
"1000235" -> "1000251"  [label="DDG: out"];
"1000227" -> "1000226"  [label="AST: "];
"1000227" -> "1000229"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000227"  [label="AST: "];
"1000234" -> "1000227"  [label="CFG: "];
"1000270" -> "1000227"  [label="CFG: "];
"1000227" -> "1000290"  [label="DDG: inl >= ctx->length"];
"1000227" -> "1000290"  [label="DDG: ctx->length"];
"1000191" -> "1000227"  [label="DDG: inl"];
"1000246" -> "1000227"  [label="DDG: inl"];
"1000196" -> "1000227"  [label="DDG: ctx->length"];
"1000227" -> "1000246"  [label="DDG: inl"];
"1000227" -> "1000269"  [label="DDG: inl"];
"1000246" -> "1000232"  [label="AST: "];
"1000246" -> "1000248"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000248" -> "1000246"  [label="AST: "];
"1000252" -> "1000246"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000269" -> "1000271"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000271" -> "1000269"  [label="AST: "];
"1000276" -> "1000269"  [label="CFG: "];
"1000283" -> "1000269"  [label="CFG: "];
"1000269" -> "1000290"  [label="DDG: inl != 0"];
"1000269" -> "1000272"  [label="DDG: inl"];
"1000269" -> "1000281"  [label="DDG: inl"];
"1000272" -> "1000268"  [label="AST: "];
"1000272" -> "1000280"  [label="CFG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000279" -> "1000272"  [label="AST: "];
"1000280" -> "1000272"  [label="AST: "];
"1000283" -> "1000272"  [label="CFG: "];
"1000272" -> "1000290"  [label="DDG: &(ctx->enc_data[0])"];
"1000272" -> "1000290"  [label="DDG: memcpy(&(ctx->enc_data[0]), in, inl)"];
"1000272" -> "1000290"  [label="DDG: in"];
"1000196" -> "1000272"  [label="DDG: ctx->enc_data"];
"1000241" -> "1000272"  [label="DDG: in"];
"1000272" -> "1000281"  [label="DDG: inl"];
"1000281" -> "1000106"  [label="AST: "];
"1000281" -> "1000285"  [label="CFG: "];
"1000282" -> "1000281"  [label="AST: "];
"1000285" -> "1000281"  [label="AST: "];
"1000288" -> "1000281"  [label="CFG: "];
"1000281" -> "1000290"  [label="DDG: inl"];
"1000281" -> "1000290"  [label="DDG: ctx->num"];
"1000233" -> "1000232"  [label="AST: "];
"1000234" -> "1000233"  [label="AST: "];
"1000242" -> "1000233"  [label="CFG: "];
"1000233" -> "1000290"  [label="DDG: EVP_EncodeBlock(out, in, ctx->length)"];
"1000233" -> "1000251"  [label="DDG: j"];
"1000233" -> "1000263"  [label="DDG: j"];
"1000233" -> "1000265"  [label="DDG: j"];
"1000251" -> "1000232"  [label="AST: "];
"1000251" -> "1000253"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="AST: "];
"1000257" -> "1000251"  [label="CFG: "];
"1000102" -> "1000251"  [label="DDG: out"];
"1000251" -> "1000256"  [label="DDG: out"];
"1000256" -> "1000255"  [label="AST: "];
"1000256" -> "1000257"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000255" -> "1000256"  [label="CFG: "];
"1000256" -> "1000290"  [label="DDG: out"];
"1000102" -> "1000256"  [label="DDG: out"];
"1000263" -> "1000232"  [label="AST: "];
"1000263" -> "1000265"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000263"  [label="AST: "];
"1000228" -> "1000263"  [label="CFG: "];
"1000263" -> "1000290"  [label="DDG: j + 1"];
"1000221" -> "1000263"  [label="DDG: total"];
"1000110" -> "1000263"  [label="DDG: total"];
"1000263" -> "1000286"  [label="DDG: total"];
"1000286" -> "1000106"  [label="AST: "];
"1000286" -> "1000289"  [label="CFG: "];
"1000287" -> "1000286"  [label="AST: "];
"1000289" -> "1000286"  [label="AST: "];
"1000290" -> "1000286"  [label="CFG: "];
"1000286" -> "1000290"  [label="DDG: *outl"];
"1000286" -> "1000290"  [label="DDG: total"];
"1000221" -> "1000286"  [label="DDG: total"];
"1000110" -> "1000286"  [label="DDG: total"];
"1000265" -> "1000267"  [label="CFG: "];
"1000266" -> "1000265"  [label="AST: "];
"1000267" -> "1000265"  [label="AST: "];
"1000265" -> "1000290"  [label="DDG: j"];
"1000241" -> "1000232"  [label="AST: "];
"1000241" -> "1000243"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="AST: "];
"1000247" -> "1000241"  [label="CFG: "];
"1000241" -> "1000290"  [label="DDG: in"];
"1000191" -> "1000167"  [label="AST: "];
"1000191" -> "1000193"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000193" -> "1000191"  [label="AST: "];
"1000195" -> "1000191"  [label="CFG: "];
"1000191" -> "1000290"  [label="DDG: i"];
}
