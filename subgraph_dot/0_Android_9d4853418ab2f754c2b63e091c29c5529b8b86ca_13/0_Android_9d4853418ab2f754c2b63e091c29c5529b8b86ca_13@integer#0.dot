digraph "0_Android_9d4853418ab2f754c2b63e091c29c5529b8b86ca_13@integer" {
"1000281" [label="(Call,ip = x + (size * y))"];
"1000266" [label="(Call,x<size)"];
"1000263" [label="(Call,x=0)"];
"1000269" [label="(Call,++x)"];
"1000316" [label="(Call,xyinterp(x, y, 0, 102, 204, 255))"];
"1000309" [label="(Call,xyinterp(x, y, 0, 0, 255, 255))"];
"1000302" [label="(Call,xyinterp(x, y, 255, 0, 0, 255))"];
"1000295" [label="(Call,xyinterp(x, y, 0, 255, 0, 255))"];
"1000285" [label="(Call,size * y)"];
"1000275" [label="(Call,y<size)"];
"1000272" [label="(Call,y=0)"];
"1000278" [label="(Call,++y)"];
"1000249" [label="(Call,size = 1U << (bit_depth/2))"];
"1000251" [label="(Call,1U << (bit_depth/2))"];
"1000253" [label="(Call,bit_depth/2)"];
"1000216" [label="(Call,bit_depth == 1)"];
"1000108" [label="(MethodParameterIn,int bit_depth)"];
"1000288" [label="(Call,set_color(palette+ip, trans+ip,\n /* color:    green, red,blue,white */\n                  xyinterp(x, y, 0, 255, 0, 255),\n                  xyinterp(x, y, 255, 0, 0, 255),\n                  xyinterp(x, y, 0, 0, 255, 255),\n /* alpha:        0, 102, 204, 255) */\n                  xyinterp(x, y, 0, 102, 204, 255),\n                  gamma_table))"];
"1000289" [label="(Call,palette+ip)"];
"1000292" [label="(Call,trans+ip)"];
"1000325" [label="(Call,ip+1)"];
"1000324" [label="(Return,return ip+1;)"];
"1000254" [label="(Identifier,bit_depth)"];
"1000269" [label="(Call,++x)"];
"1000321" [label="(Literal,204)"];
"1000222" [label="(Identifier,palette)"];
"1000322" [label="(Literal,255)"];
"1000314" [label="(Literal,255)"];
"1000266" [label="(Call,x<size)"];
"1000108" [label="(MethodParameterIn,int bit_depth)"];
"1000249" [label="(Call,size = 1U << (bit_depth/2))"];
"1000262" [label="(ControlStructure,for (x=0; x<size; ++x))"];
"1000283" [label="(Call,x + (size * y))"];
"1000278" [label="(Call,++y)"];
"1000289" [label="(Call,palette+ip)"];
"1000305" [label="(Literal,255)"];
"1000309" [label="(Call,xyinterp(x, y, 0, 0, 255, 255))"];
"1000259" [label="(Call,ip = 0)"];
"1000317" [label="(Identifier,x)"];
"1000319" [label="(Literal,0)"];
"1000271" [label="(ControlStructure,for (y=0; y<size; ++y))"];
"1000316" [label="(Call,xyinterp(x, y, 0, 102, 204, 255))"];
"1000311" [label="(Identifier,y)"];
"1000292" [label="(Call,trans+ip)"];
"1000328" [label="(MethodReturn,RET)"];
"1000275" [label="(Call,y<size)"];
"1000323" [label="(Identifier,gamma_table)"];
"1000280" [label="(Block,)"];
"1000310" [label="(Identifier,x)"];
"1000303" [label="(Identifier,x)"];
"1000325" [label="(Call,ip+1)"];
"1000107" [label="(MethodParameterIn,png_bytep trans)"];
"1000313" [label="(Literal,0)"];
"1000287" [label="(Identifier,y)"];
"1000264" [label="(Identifier,x)"];
"1000304" [label="(Identifier,y)"];
"1000302" [label="(Call,xyinterp(x, y, 255, 0, 0, 255))"];
"1000308" [label="(Literal,255)"];
"1000216" [label="(Call,bit_depth == 1)"];
"1000285" [label="(Call,size * y)"];
"1000247" [label="(Block,)"];
"1000291" [label="(Identifier,ip)"];
"1000277" [label="(Identifier,size)"];
"1000250" [label="(Identifier,size)"];
"1000268" [label="(Identifier,size)"];
"1000301" [label="(Literal,255)"];
"1000106" [label="(MethodParameterIn,png_colorp palette)"];
"1000260" [label="(Identifier,ip)"];
"1000273" [label="(Identifier,y)"];
"1000288" [label="(Call,set_color(palette+ip, trans+ip,\n /* color:    green, red,blue,white */\n                  xyinterp(x, y, 0, 255, 0, 255),\n                  xyinterp(x, y, 255, 0, 0, 255),\n                  xyinterp(x, y, 0, 0, 255, 255),\n /* alpha:        0, 102, 204, 255) */\n                  xyinterp(x, y, 0, 102, 204, 255),\n                  gamma_table))"];
"1000251" [label="(Call,1U << (bit_depth/2))"];
"1000307" [label="(Literal,0)"];
"1000318" [label="(Identifier,y)"];
"1000324" [label="(Return,return ip+1;)"];
"1000270" [label="(Identifier,x)"];
"1000315" [label="(Literal,255)"];
"1000109" [label="(MethodParameterIn,png_const_bytep gamma_table)"];
"1000306" [label="(Literal,0)"];
"1000215" [label="(ControlStructure,if (bit_depth == 1))"];
"1000326" [label="(Identifier,ip)"];
"1000267" [label="(Identifier,x)"];
"1000217" [label="(Identifier,bit_depth)"];
"1000295" [label="(Call,xyinterp(x, y, 0, 255, 0, 255))"];
"1000265" [label="(Literal,0)"];
"1000297" [label="(Identifier,y)"];
"1000272" [label="(Call,y=0)"];
"1000298" [label="(Literal,0)"];
"1000290" [label="(Identifier,palette)"];
"1000300" [label="(Literal,0)"];
"1000281" [label="(Call,ip = x + (size * y))"];
"1000276" [label="(Identifier,y)"];
"1000299" [label="(Literal,255)"];
"1000296" [label="(Identifier,x)"];
"1000263" [label="(Call,x=0)"];
"1000274" [label="(Literal,0)"];
"1000218" [label="(Literal,1)"];
"1000293" [label="(Identifier,trans)"];
"1000327" [label="(Literal,1)"];
"1000286" [label="(Identifier,size)"];
"1000252" [label="(Literal,1U)"];
"1000279" [label="(Identifier,y)"];
"1000294" [label="(Identifier,ip)"];
"1000253" [label="(Call,bit_depth/2)"];
"1000312" [label="(Literal,0)"];
"1000282" [label="(Identifier,ip)"];
"1000320" [label="(Literal,102)"];
"1000255" [label="(Literal,2)"];
"1000281" -> "1000280"  [label="AST: "];
"1000281" -> "1000283"  [label="CFG: "];
"1000282" -> "1000281"  [label="AST: "];
"1000283" -> "1000281"  [label="AST: "];
"1000290" -> "1000281"  [label="CFG: "];
"1000281" -> "1000328"  [label="DDG: x + (size * y)"];
"1000266" -> "1000281"  [label="DDG: x"];
"1000316" -> "1000281"  [label="DDG: x"];
"1000285" -> "1000281"  [label="DDG: size"];
"1000285" -> "1000281"  [label="DDG: y"];
"1000281" -> "1000288"  [label="DDG: ip"];
"1000281" -> "1000289"  [label="DDG: ip"];
"1000281" -> "1000292"  [label="DDG: ip"];
"1000281" -> "1000325"  [label="DDG: ip"];
"1000266" -> "1000262"  [label="AST: "];
"1000266" -> "1000268"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="AST: "];
"1000273" -> "1000266"  [label="CFG: "];
"1000326" -> "1000266"  [label="CFG: "];
"1000266" -> "1000328"  [label="DDG: size"];
"1000266" -> "1000328"  [label="DDG: x"];
"1000266" -> "1000328"  [label="DDG: x<size"];
"1000263" -> "1000266"  [label="DDG: x"];
"1000269" -> "1000266"  [label="DDG: x"];
"1000275" -> "1000266"  [label="DDG: size"];
"1000249" -> "1000266"  [label="DDG: size"];
"1000266" -> "1000269"  [label="DDG: x"];
"1000266" -> "1000275"  [label="DDG: size"];
"1000266" -> "1000283"  [label="DDG: x"];
"1000266" -> "1000295"  [label="DDG: x"];
"1000263" -> "1000262"  [label="AST: "];
"1000263" -> "1000265"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000263"  [label="AST: "];
"1000267" -> "1000263"  [label="CFG: "];
"1000269" -> "1000262"  [label="AST: "];
"1000269" -> "1000270"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000267" -> "1000269"  [label="CFG: "];
"1000316" -> "1000269"  [label="DDG: x"];
"1000316" -> "1000288"  [label="AST: "];
"1000316" -> "1000322"  [label="CFG: "];
"1000317" -> "1000316"  [label="AST: "];
"1000318" -> "1000316"  [label="AST: "];
"1000319" -> "1000316"  [label="AST: "];
"1000320" -> "1000316"  [label="AST: "];
"1000321" -> "1000316"  [label="AST: "];
"1000322" -> "1000316"  [label="AST: "];
"1000323" -> "1000316"  [label="CFG: "];
"1000316" -> "1000278"  [label="DDG: y"];
"1000316" -> "1000283"  [label="DDG: x"];
"1000316" -> "1000295"  [label="DDG: x"];
"1000316" -> "1000288"  [label="DDG: 0"];
"1000316" -> "1000288"  [label="DDG: 204"];
"1000316" -> "1000288"  [label="DDG: x"];
"1000316" -> "1000288"  [label="DDG: y"];
"1000316" -> "1000288"  [label="DDG: 255"];
"1000316" -> "1000288"  [label="DDG: 102"];
"1000309" -> "1000316"  [label="DDG: x"];
"1000309" -> "1000316"  [label="DDG: y"];
"1000309" -> "1000288"  [label="AST: "];
"1000309" -> "1000315"  [label="CFG: "];
"1000310" -> "1000309"  [label="AST: "];
"1000311" -> "1000309"  [label="AST: "];
"1000312" -> "1000309"  [label="AST: "];
"1000313" -> "1000309"  [label="AST: "];
"1000314" -> "1000309"  [label="AST: "];
"1000315" -> "1000309"  [label="AST: "];
"1000317" -> "1000309"  [label="CFG: "];
"1000309" -> "1000288"  [label="DDG: 0"];
"1000309" -> "1000288"  [label="DDG: y"];
"1000309" -> "1000288"  [label="DDG: x"];
"1000309" -> "1000288"  [label="DDG: 255"];
"1000302" -> "1000309"  [label="DDG: x"];
"1000302" -> "1000309"  [label="DDG: y"];
"1000302" -> "1000288"  [label="AST: "];
"1000302" -> "1000308"  [label="CFG: "];
"1000303" -> "1000302"  [label="AST: "];
"1000304" -> "1000302"  [label="AST: "];
"1000305" -> "1000302"  [label="AST: "];
"1000306" -> "1000302"  [label="AST: "];
"1000307" -> "1000302"  [label="AST: "];
"1000308" -> "1000302"  [label="AST: "];
"1000310" -> "1000302"  [label="CFG: "];
"1000302" -> "1000288"  [label="DDG: 255"];
"1000302" -> "1000288"  [label="DDG: 0"];
"1000302" -> "1000288"  [label="DDG: x"];
"1000302" -> "1000288"  [label="DDG: y"];
"1000295" -> "1000302"  [label="DDG: x"];
"1000295" -> "1000302"  [label="DDG: y"];
"1000295" -> "1000288"  [label="AST: "];
"1000295" -> "1000301"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000297" -> "1000295"  [label="AST: "];
"1000298" -> "1000295"  [label="AST: "];
"1000299" -> "1000295"  [label="AST: "];
"1000300" -> "1000295"  [label="AST: "];
"1000301" -> "1000295"  [label="AST: "];
"1000303" -> "1000295"  [label="CFG: "];
"1000295" -> "1000288"  [label="DDG: 255"];
"1000295" -> "1000288"  [label="DDG: x"];
"1000295" -> "1000288"  [label="DDG: y"];
"1000295" -> "1000288"  [label="DDG: 0"];
"1000285" -> "1000295"  [label="DDG: y"];
"1000285" -> "1000283"  [label="AST: "];
"1000285" -> "1000287"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000285"  [label="AST: "];
"1000283" -> "1000285"  [label="CFG: "];
"1000285" -> "1000275"  [label="DDG: size"];
"1000285" -> "1000283"  [label="DDG: size"];
"1000285" -> "1000283"  [label="DDG: y"];
"1000275" -> "1000285"  [label="DDG: size"];
"1000275" -> "1000285"  [label="DDG: y"];
"1000275" -> "1000271"  [label="AST: "];
"1000275" -> "1000277"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000277" -> "1000275"  [label="AST: "];
"1000282" -> "1000275"  [label="CFG: "];
"1000270" -> "1000275"  [label="CFG: "];
"1000275" -> "1000328"  [label="DDG: y"];
"1000275" -> "1000328"  [label="DDG: y<size"];
"1000272" -> "1000275"  [label="DDG: y"];
"1000278" -> "1000275"  [label="DDG: y"];
"1000272" -> "1000271"  [label="AST: "];
"1000272" -> "1000274"  [label="CFG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000274" -> "1000272"  [label="AST: "];
"1000276" -> "1000272"  [label="CFG: "];
"1000278" -> "1000271"  [label="AST: "];
"1000278" -> "1000279"  [label="CFG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000276" -> "1000278"  [label="CFG: "];
"1000249" -> "1000247"  [label="AST: "];
"1000249" -> "1000251"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000251" -> "1000249"  [label="AST: "];
"1000260" -> "1000249"  [label="CFG: "];
"1000249" -> "1000328"  [label="DDG: 1U << (bit_depth/2)"];
"1000251" -> "1000249"  [label="DDG: 1U"];
"1000251" -> "1000249"  [label="DDG: bit_depth/2"];
"1000251" -> "1000253"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="AST: "];
"1000251" -> "1000328"  [label="DDG: bit_depth/2"];
"1000253" -> "1000251"  [label="DDG: bit_depth"];
"1000253" -> "1000251"  [label="DDG: 2"];
"1000253" -> "1000255"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000255" -> "1000253"  [label="AST: "];
"1000253" -> "1000328"  [label="DDG: bit_depth"];
"1000216" -> "1000253"  [label="DDG: bit_depth"];
"1000108" -> "1000253"  [label="DDG: bit_depth"];
"1000216" -> "1000215"  [label="AST: "];
"1000216" -> "1000218"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000218" -> "1000216"  [label="AST: "];
"1000222" -> "1000216"  [label="CFG: "];
"1000250" -> "1000216"  [label="CFG: "];
"1000216" -> "1000328"  [label="DDG: bit_depth == 1"];
"1000216" -> "1000328"  [label="DDG: bit_depth"];
"1000108" -> "1000216"  [label="DDG: bit_depth"];
"1000108" -> "1000105"  [label="AST: "];
"1000108" -> "1000328"  [label="DDG: bit_depth"];
"1000288" -> "1000280"  [label="AST: "];
"1000288" -> "1000323"  [label="CFG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000292" -> "1000288"  [label="AST: "];
"1000323" -> "1000288"  [label="AST: "];
"1000279" -> "1000288"  [label="CFG: "];
"1000288" -> "1000328"  [label="DDG: xyinterp(x, y, 0, 102, 204, 255)"];
"1000288" -> "1000328"  [label="DDG: xyinterp(x, y, 0, 0, 255, 255)"];
"1000288" -> "1000328"  [label="DDG: trans+ip"];
"1000288" -> "1000328"  [label="DDG: palette+ip"];
"1000288" -> "1000328"  [label="DDG: xyinterp(x, y, 255, 0, 0, 255)"];
"1000288" -> "1000328"  [label="DDG: xyinterp(x, y, 0, 255, 0, 255)"];
"1000288" -> "1000328"  [label="DDG: set_color(palette+ip, trans+ip,\n /* color:    green, red,blue,white */\n                  xyinterp(x, y, 0, 255, 0, 255),\n                  xyinterp(x, y, 255, 0, 0, 255),\n                  xyinterp(x, y, 0, 0, 255, 255),\n /* alpha:        0, 102, 204, 255) */\n                  xyinterp(x, y, 0, 102, 204, 255),\n                  gamma_table)"];
"1000288" -> "1000328"  [label="DDG: gamma_table"];
"1000106" -> "1000288"  [label="DDG: palette"];
"1000107" -> "1000288"  [label="DDG: trans"];
"1000109" -> "1000288"  [label="DDG: gamma_table"];
"1000289" -> "1000291"  [label="CFG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000291" -> "1000289"  [label="AST: "];
"1000293" -> "1000289"  [label="CFG: "];
"1000289" -> "1000328"  [label="DDG: palette"];
"1000106" -> "1000289"  [label="DDG: palette"];
"1000292" -> "1000294"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000294" -> "1000292"  [label="AST: "];
"1000296" -> "1000292"  [label="CFG: "];
"1000292" -> "1000328"  [label="DDG: trans"];
"1000107" -> "1000292"  [label="DDG: trans"];
"1000325" -> "1000324"  [label="AST: "];
"1000325" -> "1000327"  [label="CFG: "];
"1000326" -> "1000325"  [label="AST: "];
"1000327" -> "1000325"  [label="AST: "];
"1000324" -> "1000325"  [label="CFG: "];
"1000325" -> "1000328"  [label="DDG: ip"];
"1000325" -> "1000328"  [label="DDG: ip+1"];
"1000325" -> "1000324"  [label="DDG: ip+1"];
"1000259" -> "1000325"  [label="DDG: ip"];
"1000324" -> "1000247"  [label="AST: "];
"1000328" -> "1000324"  [label="CFG: "];
"1000324" -> "1000328"  [label="DDG: <RET>"];
}
