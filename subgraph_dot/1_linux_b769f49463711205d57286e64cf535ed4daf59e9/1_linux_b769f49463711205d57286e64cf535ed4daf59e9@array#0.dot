digraph "1_linux_b769f49463711205d57286e64cf535ed4daf59e9@array" {
"1000137" [label="(Call,(unsigned long) &sysex.data[0])"];
"1000136" [label="(Call,(unsigned long) &sysex.data[0] - (unsigned long) &sysex)"];
"1000134" [label="(Call,hdr_size = (unsigned long) &sysex.data[0] - (unsigned long) &sysex)"];
"1000167" [label="(Call,count < hdr_size)"];
"1000174" [label="(Call,count -= hdr_size)"];
"1000197" [label="(Call,count < sysex.len)"];
"1000203" [label="(Call,sysex.len = count)"];
"1000208" [label="(Call,left = sysex.len)"];
"1000221" [label="(Call,i < left)"];
"1000220" [label="(Call,i < left && !signal_pending(current))"];
"1000276" [label="(Call,!midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff)) &&\n\t\t\t!signal_pending(current))"];
"1000234" [label="(Call,(unsigned char __user *)(addr + hdr_size + i))"];
"1000232" [label="(Call,get_user(data,\n\t\t    (unsigned char __user *)(addr + hdr_size + i)))"];
"1000250" [label="(Call,data & 0x80)"];
"1000246" [label="(Call,i > 0 && data & 0x80)"];
"1000244" [label="(Call,eox_seen = (i > 0 && data & 0x80))"];
"1000254" [label="(Call,eox_seen && data != 0xf7)"];
"1000302" [label="(Call,!eox_seen)"];
"1000290" [label="(Call,!first_byte && data & 0x80)"];
"1000256" [label="(Call,data != 0xf7)"];
"1000268" [label="(Call,data != 0xf0)"];
"1000282" [label="(Call,data & 0xff)"];
"1000280" [label="(Call,(unsigned char) (data & 0xff))"];
"1000278" [label="(Call,midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff)))"];
"1000277" [label="(Call,!midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff)))"];
"1000304" [label="(Call,midi_outc(orig_dev, 0xf7))"];
"1000293" [label="(Call,data & 0x80)"];
"1000236" [label="(Call,addr + hdr_size + i)"];
"1000238" [label="(Call,hdr_size + i)"];
"1000247" [label="(Call,i > 0)"];
"1000263" [label="(Call,i == 0)"];
"1000227" [label="(Call,i++)"];
"1000190" [label="(Call,hdr_size - offs)"];
"1000178" [label="(Call,copy_from_user(&((char *) &sysex)[offs], &(addr)[offs], hdr_size - offs))"];
"1000246" [label="(Call,i > 0 && data & 0x80)"];
"1000175" [label="(Identifier,count)"];
"1000244" [label="(Call,eox_seen = (i > 0 && data & 0x80))"];
"1000249" [label="(Literal,0)"];
"1000228" [label="(Identifier,i)"];
"1000195" [label="(Identifier,EFAULT)"];
"1000282" [label="(Call,data & 0xff)"];
"1000153" [label="(Call,prefix_cmd(orig_dev, 0xf0))"];
"1000251" [label="(Identifier,data)"];
"1000267" [label="(ControlStructure,if (data != 0xf0))"];
"1000177" [label="(ControlStructure,if(copy_from_user(&((char *) &sysex)[offs], &(addr)[offs], hdr_size - offs)))"];
"1000258" [label="(Literal,0xf7)"];
"1000150" [label="(Identifier,dev)"];
"1000216" [label="(ControlStructure,for (i = 0; i < left && !signal_pending(current); i++))"];
"1000257" [label="(Identifier,data)"];
"1000239" [label="(Identifier,hdr_size)"];
"1000192" [label="(Identifier,offs)"];
"1000169" [label="(Identifier,hdr_size)"];
"1000112" [label="(Block,)"];
"1000280" [label="(Call,(unsigned char) (data & 0xff))"];
"1000198" [label="(Identifier,count)"];
"1000297" [label="(Literal,0)"];
"1000145" [label="(Call,(unsigned long) &sysex)"];
"1000276" [label="(Call,!midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff)) &&\n\t\t\t!signal_pending(current))"];
"1000236" [label="(Call,addr + hdr_size + i)"];
"1000217" [label="(Call,i = 0)"];
"1000277" [label="(Call,!midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff)))"];
"1000166" [label="(ControlStructure,if (count < hdr_size))"];
"1000181" [label="(Call,(char *) &sysex)"];
"1000302" [label="(Call,!eox_seen)"];
"1000210" [label="(Call,sysex.len)"];
"1000226" [label="(Identifier,current)"];
"1000259" [label="(Call,data = 0xf7)"];
"1000108" [label="(MethodParameterIn,const char __user *addr)"];
"1000265" [label="(Literal,0)"];
"1000203" [label="(Call,sysex.len = count)"];
"1000135" [label="(Identifier,hdr_size)"];
"1000176" [label="(Identifier,hdr_size)"];
"1000284" [label="(Literal,0xff)"];
"1000233" [label="(Identifier,data)"];
"1000232" [label="(Call,get_user(data,\n\t\t    (unsigned char __user *)(addr + hdr_size + i)))"];
"1000209" [label="(Identifier,left)"];
"1000275" [label="(ControlStructure,while (!midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff)) &&\n\t\t\t!signal_pending(current)))"];
"1000240" [label="(Identifier,i)"];
"1000222" [label="(Identifier,i)"];
"1000260" [label="(Identifier,data)"];
"1000229" [label="(Block,)"];
"1000252" [label="(Literal,0x80)"];
"1000274" [label="(Identifier,EINVAL)"];
"1000134" [label="(Call,hdr_size = (unsigned long) &sysex.data[0] - (unsigned long) &sysex)"];
"1000220" [label="(Call,i < left && !signal_pending(current))"];
"1000305" [label="(Identifier,orig_dev)"];
"1000207" [label="(Identifier,count)"];
"1000238" [label="(Call,hdr_size + i)"];
"1000126" [label="(Call,eox_seen = 0)"];
"1000199" [label="(Call,sysex.len)"];
"1000303" [label="(Identifier,eox_seen)"];
"1000263" [label="(Call,i == 0)"];
"1000214" [label="(Identifier,src_offs)"];
"1000137" [label="(Call,(unsigned long) &sysex.data[0])"];
"1000204" [label="(Call,sysex.len)"];
"1000285" [label="(Call,!signal_pending(current))"];
"1000234" [label="(Call,(unsigned char __user *)(addr + hdr_size + i))"];
"1000269" [label="(Identifier,data)"];
"1000295" [label="(Literal,0x80)"];
"1000191" [label="(Identifier,hdr_size)"];
"1000255" [label="(Identifier,eox_seen)"];
"1000256" [label="(Call,data != 0xf7)"];
"1000279" [label="(Identifier,orig_dev)"];
"1000250" [label="(Call,data & 0x80)"];
"1000262" [label="(ControlStructure,if (i == 0))"];
"1000283" [label="(Identifier,data)"];
"1000268" [label="(Call,data != 0xf0)"];
"1000237" [label="(Identifier,addr)"];
"1000110" [label="(MethodParameterIn,int count)"];
"1000173" [label="(Identifier,EINVAL)"];
"1000253" [label="(ControlStructure,if (eox_seen && data != 0xf7))"];
"1000270" [label="(Literal,0xf0)"];
"1000223" [label="(Identifier,left)"];
"1000308" [label="(Literal,0)"];
"1000254" [label="(Call,eox_seen && data != 0xf7)"];
"1000309" [label="(MethodReturn,RET)"];
"1000202" [label="(Block,)"];
"1000197" [label="(Call,count < sysex.len)"];
"1000287" [label="(Identifier,current)"];
"1000196" [label="(ControlStructure,if (count < sysex.len))"];
"1000304" [label="(Call,midi_outc(orig_dev, 0xf7))"];
"1000231" [label="(ControlStructure,if (get_user(data,\n\t\t    (unsigned char __user *)(addr + hdr_size + i))))"];
"1000167" [label="(Call,count < hdr_size)"];
"1000248" [label="(Identifier,i)"];
"1000289" [label="(ControlStructure,if (!first_byte && data & 0x80))"];
"1000243" [label="(Identifier,EFAULT)"];
"1000299" [label="(Identifier,first_byte)"];
"1000291" [label="(Call,!first_byte)"];
"1000109" [label="(MethodParameterIn,int offs)"];
"1000190" [label="(Call,hdr_size - offs)"];
"1000294" [label="(Identifier,data)"];
"1000168" [label="(Identifier,count)"];
"1000227" [label="(Call,i++)"];
"1000186" [label="(Call,&(addr)[offs])"];
"1000136" [label="(Call,(unsigned long) &sysex.data[0] - (unsigned long) &sysex)"];
"1000301" [label="(ControlStructure,if (!eox_seen))"];
"1000174" [label="(Call,count -= hdr_size)"];
"1000290" [label="(Call,!first_byte && data & 0x80)"];
"1000221" [label="(Call,i < left)"];
"1000292" [label="(Identifier,first_byte)"];
"1000178" [label="(Call,copy_from_user(&((char *) &sysex)[offs], &(addr)[offs], hdr_size - offs))"];
"1000306" [label="(Literal,0xf7)"];
"1000139" [label="(Call,&sysex.data[0])"];
"1000247" [label="(Call,i > 0)"];
"1000224" [label="(Call,!signal_pending(current))"];
"1000288" [label="(Call,schedule())"];
"1000264" [label="(Identifier,i)"];
"1000278" [label="(Call,midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff)))"];
"1000245" [label="(Identifier,eox_seen)"];
"1000208" [label="(Call,left = sysex.len)"];
"1000179" [label="(Call,&((char *) &sysex)[offs])"];
"1000205" [label="(Identifier,sysex)"];
"1000293" [label="(Call,data & 0x80)"];
"1000137" -> "1000136"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000146" -> "1000137"  [label="CFG: "];
"1000137" -> "1000309"  [label="DDG: &sysex.data[0]"];
"1000137" -> "1000136"  [label="DDG: &sysex.data[0]"];
"1000136" -> "1000134"  [label="AST: "];
"1000136" -> "1000145"  [label="CFG: "];
"1000145" -> "1000136"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000136" -> "1000309"  [label="DDG: (unsigned long) &sysex"];
"1000136" -> "1000309"  [label="DDG: (unsigned long) &sysex.data[0]"];
"1000136" -> "1000134"  [label="DDG: (unsigned long) &sysex.data[0]"];
"1000136" -> "1000134"  [label="DDG: (unsigned long) &sysex"];
"1000145" -> "1000136"  [label="DDG: &sysex"];
"1000134" -> "1000112"  [label="AST: "];
"1000135" -> "1000134"  [label="AST: "];
"1000150" -> "1000134"  [label="CFG: "];
"1000134" -> "1000309"  [label="DDG: hdr_size"];
"1000134" -> "1000309"  [label="DDG: (unsigned long) &sysex.data[0] - (unsigned long) &sysex"];
"1000134" -> "1000167"  [label="DDG: hdr_size"];
"1000167" -> "1000166"  [label="AST: "];
"1000167" -> "1000169"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000169" -> "1000167"  [label="AST: "];
"1000173" -> "1000167"  [label="CFG: "];
"1000175" -> "1000167"  [label="CFG: "];
"1000167" -> "1000309"  [label="DDG: count"];
"1000167" -> "1000309"  [label="DDG: hdr_size"];
"1000167" -> "1000309"  [label="DDG: count < hdr_size"];
"1000110" -> "1000167"  [label="DDG: count"];
"1000167" -> "1000174"  [label="DDG: hdr_size"];
"1000167" -> "1000174"  [label="DDG: count"];
"1000167" -> "1000190"  [label="DDG: hdr_size"];
"1000174" -> "1000112"  [label="AST: "];
"1000174" -> "1000176"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000176" -> "1000174"  [label="AST: "];
"1000182" -> "1000174"  [label="CFG: "];
"1000174" -> "1000309"  [label="DDG: count"];
"1000110" -> "1000174"  [label="DDG: count"];
"1000174" -> "1000197"  [label="DDG: count"];
"1000197" -> "1000196"  [label="AST: "];
"1000197" -> "1000199"  [label="CFG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000199" -> "1000197"  [label="AST: "];
"1000205" -> "1000197"  [label="CFG: "];
"1000209" -> "1000197"  [label="CFG: "];
"1000197" -> "1000309"  [label="DDG: count < sysex.len"];
"1000197" -> "1000309"  [label="DDG: count"];
"1000110" -> "1000197"  [label="DDG: count"];
"1000197" -> "1000203"  [label="DDG: count"];
"1000197" -> "1000208"  [label="DDG: sysex.len"];
"1000203" -> "1000202"  [label="AST: "];
"1000203" -> "1000207"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000207" -> "1000203"  [label="AST: "];
"1000209" -> "1000203"  [label="CFG: "];
"1000203" -> "1000309"  [label="DDG: count"];
"1000110" -> "1000203"  [label="DDG: count"];
"1000203" -> "1000208"  [label="DDG: sysex.len"];
"1000208" -> "1000112"  [label="AST: "];
"1000208" -> "1000210"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000210" -> "1000208"  [label="AST: "];
"1000214" -> "1000208"  [label="CFG: "];
"1000208" -> "1000309"  [label="DDG: sysex.len"];
"1000208" -> "1000221"  [label="DDG: left"];
"1000221" -> "1000220"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000226" -> "1000221"  [label="CFG: "];
"1000220" -> "1000221"  [label="CFG: "];
"1000221" -> "1000309"  [label="DDG: left"];
"1000221" -> "1000309"  [label="DDG: i"];
"1000221" -> "1000220"  [label="DDG: i"];
"1000221" -> "1000220"  [label="DDG: left"];
"1000227" -> "1000221"  [label="DDG: i"];
"1000217" -> "1000221"  [label="DDG: i"];
"1000221" -> "1000234"  [label="DDG: i"];
"1000221" -> "1000236"  [label="DDG: i"];
"1000221" -> "1000238"  [label="DDG: i"];
"1000221" -> "1000247"  [label="DDG: i"];
"1000220" -> "1000216"  [label="AST: "];
"1000220" -> "1000224"  [label="CFG: "];
"1000224" -> "1000220"  [label="AST: "];
"1000233" -> "1000220"  [label="CFG: "];
"1000303" -> "1000220"  [label="CFG: "];
"1000220" -> "1000309"  [label="DDG: i < left"];
"1000220" -> "1000309"  [label="DDG: i < left && !signal_pending(current)"];
"1000220" -> "1000309"  [label="DDG: !signal_pending(current)"];
"1000224" -> "1000220"  [label="DDG: signal_pending(current)"];
"1000276" -> "1000220"  [label="DDG: !signal_pending(current)"];
"1000220" -> "1000276"  [label="DDG: !signal_pending(current)"];
"1000276" -> "1000275"  [label="AST: "];
"1000276" -> "1000277"  [label="CFG: "];
"1000276" -> "1000285"  [label="CFG: "];
"1000277" -> "1000276"  [label="AST: "];
"1000285" -> "1000276"  [label="AST: "];
"1000288" -> "1000276"  [label="CFG: "];
"1000292" -> "1000276"  [label="CFG: "];
"1000276" -> "1000309"  [label="DDG: !midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff)) &&\n\t\t\t!signal_pending(current)"];
"1000276" -> "1000309"  [label="DDG: !signal_pending(current)"];
"1000276" -> "1000309"  [label="DDG: !midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff))"];
"1000277" -> "1000276"  [label="DDG: midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff))"];
"1000285" -> "1000276"  [label="DDG: signal_pending(current)"];
"1000234" -> "1000232"  [label="AST: "];
"1000234" -> "1000236"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000236" -> "1000234"  [label="AST: "];
"1000232" -> "1000234"  [label="CFG: "];
"1000234" -> "1000309"  [label="DDG: addr + hdr_size + i"];
"1000234" -> "1000232"  [label="DDG: addr + hdr_size + i"];
"1000108" -> "1000234"  [label="DDG: addr"];
"1000190" -> "1000234"  [label="DDG: hdr_size"];
"1000232" -> "1000231"  [label="AST: "];
"1000233" -> "1000232"  [label="AST: "];
"1000243" -> "1000232"  [label="CFG: "];
"1000245" -> "1000232"  [label="CFG: "];
"1000232" -> "1000309"  [label="DDG: data"];
"1000232" -> "1000309"  [label="DDG: get_user(data,\n\t\t    (unsigned char __user *)(addr + hdr_size + i))"];
"1000232" -> "1000309"  [label="DDG: (unsigned char __user *)(addr + hdr_size + i)"];
"1000293" -> "1000232"  [label="DDG: data"];
"1000282" -> "1000232"  [label="DDG: data"];
"1000232" -> "1000250"  [label="DDG: data"];
"1000232" -> "1000256"  [label="DDG: data"];
"1000232" -> "1000268"  [label="DDG: data"];
"1000232" -> "1000282"  [label="DDG: data"];
"1000250" -> "1000246"  [label="AST: "];
"1000250" -> "1000252"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000252" -> "1000250"  [label="AST: "];
"1000246" -> "1000250"  [label="CFG: "];
"1000250" -> "1000246"  [label="DDG: data"];
"1000250" -> "1000246"  [label="DDG: 0x80"];
"1000250" -> "1000256"  [label="DDG: data"];
"1000250" -> "1000268"  [label="DDG: data"];
"1000250" -> "1000282"  [label="DDG: data"];
"1000246" -> "1000244"  [label="AST: "];
"1000246" -> "1000247"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000244" -> "1000246"  [label="CFG: "];
"1000246" -> "1000309"  [label="DDG: data & 0x80"];
"1000246" -> "1000309"  [label="DDG: i > 0"];
"1000246" -> "1000244"  [label="DDG: i > 0"];
"1000246" -> "1000244"  [label="DDG: data & 0x80"];
"1000247" -> "1000246"  [label="DDG: i"];
"1000247" -> "1000246"  [label="DDG: 0"];
"1000290" -> "1000246"  [label="DDG: data & 0x80"];
"1000246" -> "1000290"  [label="DDG: data & 0x80"];
"1000244" -> "1000229"  [label="AST: "];
"1000245" -> "1000244"  [label="AST: "];
"1000255" -> "1000244"  [label="CFG: "];
"1000244" -> "1000309"  [label="DDG: i > 0 && data & 0x80"];
"1000244" -> "1000254"  [label="DDG: eox_seen"];
"1000254" -> "1000253"  [label="AST: "];
"1000254" -> "1000255"  [label="CFG: "];
"1000254" -> "1000256"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000256" -> "1000254"  [label="AST: "];
"1000260" -> "1000254"  [label="CFG: "];
"1000264" -> "1000254"  [label="CFG: "];
"1000254" -> "1000309"  [label="DDG: data != 0xf7"];
"1000254" -> "1000309"  [label="DDG: eox_seen"];
"1000254" -> "1000309"  [label="DDG: eox_seen && data != 0xf7"];
"1000256" -> "1000254"  [label="DDG: data"];
"1000256" -> "1000254"  [label="DDG: 0xf7"];
"1000254" -> "1000302"  [label="DDG: eox_seen"];
"1000302" -> "1000301"  [label="AST: "];
"1000302" -> "1000303"  [label="CFG: "];
"1000303" -> "1000302"  [label="AST: "];
"1000305" -> "1000302"  [label="CFG: "];
"1000308" -> "1000302"  [label="CFG: "];
"1000302" -> "1000309"  [label="DDG: eox_seen"];
"1000302" -> "1000309"  [label="DDG: !eox_seen"];
"1000126" -> "1000302"  [label="DDG: eox_seen"];
"1000290" -> "1000289"  [label="AST: "];
"1000290" -> "1000291"  [label="CFG: "];
"1000290" -> "1000293"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000293" -> "1000290"  [label="AST: "];
"1000297" -> "1000290"  [label="CFG: "];
"1000299" -> "1000290"  [label="CFG: "];
"1000290" -> "1000309"  [label="DDG: !first_byte"];
"1000290" -> "1000309"  [label="DDG: !first_byte && data & 0x80"];
"1000290" -> "1000309"  [label="DDG: data & 0x80"];
"1000291" -> "1000290"  [label="DDG: first_byte"];
"1000293" -> "1000290"  [label="DDG: data"];
"1000293" -> "1000290"  [label="DDG: 0x80"];
"1000256" -> "1000258"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000258" -> "1000256"  [label="AST: "];
"1000256" -> "1000268"  [label="DDG: data"];
"1000256" -> "1000282"  [label="DDG: data"];
"1000268" -> "1000267"  [label="AST: "];
"1000268" -> "1000270"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000270" -> "1000268"  [label="AST: "];
"1000274" -> "1000268"  [label="CFG: "];
"1000279" -> "1000268"  [label="CFG: "];
"1000268" -> "1000309"  [label="DDG: data"];
"1000268" -> "1000309"  [label="DDG: data != 0xf0"];
"1000259" -> "1000268"  [label="DDG: data"];
"1000268" -> "1000282"  [label="DDG: data"];
"1000282" -> "1000280"  [label="AST: "];
"1000282" -> "1000284"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000284" -> "1000282"  [label="AST: "];
"1000280" -> "1000282"  [label="CFG: "];
"1000282" -> "1000309"  [label="DDG: data"];
"1000282" -> "1000280"  [label="DDG: data"];
"1000282" -> "1000280"  [label="DDG: 0xff"];
"1000259" -> "1000282"  [label="DDG: data"];
"1000282" -> "1000293"  [label="DDG: data"];
"1000280" -> "1000278"  [label="AST: "];
"1000281" -> "1000280"  [label="AST: "];
"1000278" -> "1000280"  [label="CFG: "];
"1000280" -> "1000309"  [label="DDG: data & 0xff"];
"1000280" -> "1000278"  [label="DDG: data & 0xff"];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000278"  [label="AST: "];
"1000277" -> "1000278"  [label="CFG: "];
"1000278" -> "1000309"  [label="DDG: (unsigned char) (data & 0xff)"];
"1000278" -> "1000309"  [label="DDG: orig_dev"];
"1000278" -> "1000277"  [label="DDG: orig_dev"];
"1000278" -> "1000277"  [label="DDG: (unsigned char) (data & 0xff)"];
"1000153" -> "1000278"  [label="DDG: orig_dev"];
"1000278" -> "1000304"  [label="DDG: orig_dev"];
"1000287" -> "1000277"  [label="CFG: "];
"1000277" -> "1000309"  [label="DDG: midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff))"];
"1000304" -> "1000301"  [label="AST: "];
"1000304" -> "1000306"  [label="CFG: "];
"1000305" -> "1000304"  [label="AST: "];
"1000306" -> "1000304"  [label="AST: "];
"1000308" -> "1000304"  [label="CFG: "];
"1000304" -> "1000309"  [label="DDG: midi_outc(orig_dev, 0xf7)"];
"1000304" -> "1000309"  [label="DDG: orig_dev"];
"1000153" -> "1000304"  [label="DDG: orig_dev"];
"1000293" -> "1000295"  [label="CFG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000295" -> "1000293"  [label="AST: "];
"1000293" -> "1000309"  [label="DDG: data"];
"1000236" -> "1000238"  [label="CFG: "];
"1000237" -> "1000236"  [label="AST: "];
"1000238" -> "1000236"  [label="AST: "];
"1000236" -> "1000309"  [label="DDG: addr"];
"1000236" -> "1000309"  [label="DDG: hdr_size + i"];
"1000108" -> "1000236"  [label="DDG: addr"];
"1000190" -> "1000236"  [label="DDG: hdr_size"];
"1000238" -> "1000240"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="AST: "];
"1000238" -> "1000309"  [label="DDG: hdr_size"];
"1000238" -> "1000309"  [label="DDG: i"];
"1000190" -> "1000238"  [label="DDG: hdr_size"];
"1000247" -> "1000249"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000249" -> "1000247"  [label="AST: "];
"1000251" -> "1000247"  [label="CFG: "];
"1000247" -> "1000263"  [label="DDG: i"];
"1000263" -> "1000262"  [label="AST: "];
"1000263" -> "1000265"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000263"  [label="AST: "];
"1000269" -> "1000263"  [label="CFG: "];
"1000279" -> "1000263"  [label="CFG: "];
"1000263" -> "1000309"  [label="DDG: i == 0"];
"1000263" -> "1000309"  [label="DDG: i"];
"1000263" -> "1000227"  [label="DDG: i"];
"1000227" -> "1000216"  [label="AST: "];
"1000227" -> "1000228"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000222" -> "1000227"  [label="CFG: "];
"1000190" -> "1000178"  [label="AST: "];
"1000190" -> "1000192"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000192" -> "1000190"  [label="AST: "];
"1000178" -> "1000190"  [label="CFG: "];
"1000190" -> "1000309"  [label="DDG: hdr_size"];
"1000190" -> "1000309"  [label="DDG: offs"];
"1000190" -> "1000178"  [label="DDG: hdr_size"];
"1000190" -> "1000178"  [label="DDG: offs"];
"1000109" -> "1000190"  [label="DDG: offs"];
"1000178" -> "1000177"  [label="AST: "];
"1000179" -> "1000178"  [label="AST: "];
"1000186" -> "1000178"  [label="AST: "];
"1000195" -> "1000178"  [label="CFG: "];
"1000198" -> "1000178"  [label="CFG: "];
"1000178" -> "1000309"  [label="DDG: copy_from_user(&((char *) &sysex)[offs], &(addr)[offs], hdr_size - offs)"];
"1000178" -> "1000309"  [label="DDG: &(addr)[offs]"];
"1000178" -> "1000309"  [label="DDG: hdr_size - offs"];
"1000178" -> "1000309"  [label="DDG: &((char *) &sysex)[offs]"];
"1000181" -> "1000178"  [label="DDG: &sysex"];
}
