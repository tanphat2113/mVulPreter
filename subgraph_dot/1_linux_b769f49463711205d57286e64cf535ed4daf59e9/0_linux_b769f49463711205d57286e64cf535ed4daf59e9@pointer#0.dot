digraph "0_linux_b769f49463711205d57286e64cf535ed4daf59e9@pointer" {
"1000108" [label="(MethodParameterIn,const char __user *addr)"];
"1000234" [label="(Call,(unsigned char __user *)(addr + hdr_size + i))"];
"1000232" [label="(Call,get_user(data,\n\t\t    (unsigned char __user *)(addr + hdr_size + i)))"];
"1000250" [label="(Call,data & 0x80)"];
"1000246" [label="(Call,i > 0 && data & 0x80)"];
"1000244" [label="(Call,eox_seen = (i > 0 && data & 0x80))"];
"1000254" [label="(Call,eox_seen && data != 0xf7)"];
"1000302" [label="(Call,!eox_seen)"];
"1000290" [label="(Call,!first_byte && data & 0x80)"];
"1000256" [label="(Call,data != 0xf7)"];
"1000268" [label="(Call,data != 0xf0)"];
"1000282" [label="(Call,data & 0xff)"];
"1000280" [label="(Call,(unsigned char) (data & 0xff))"];
"1000278" [label="(Call,midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff)))"];
"1000277" [label="(Call,!midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff)))"];
"1000276" [label="(Call,!midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff)) &&\n\t\t\t!signal_pending(current))"];
"1000220" [label="(Call,i < left && !signal_pending(current))"];
"1000304" [label="(Call,midi_outc(orig_dev, 0xf7))"];
"1000293" [label="(Call,data & 0x80)"];
"1000236" [label="(Call,addr + hdr_size + i)"];
"1000246" [label="(Call,i > 0 && data & 0x80)"];
"1000244" [label="(Call,eox_seen = (i > 0 && data & 0x80))"];
"1000259" [label="(Call,data = 0xf7)"];
"1000294" [label="(Identifier,data)"];
"1000282" [label="(Call,data & 0xff)"];
"1000283" [label="(Identifier,data)"];
"1000268" [label="(Call,data != 0xf0)"];
"1000237" [label="(Identifier,addr)"];
"1000153" [label="(Call,prefix_cmd(orig_dev, 0xf0))"];
"1000108" [label="(MethodParameterIn,const char __user *addr)"];
"1000251" [label="(Identifier,data)"];
"1000267" [label="(ControlStructure,if (data != 0xf0))"];
"1000253" [label="(ControlStructure,if (eox_seen && data != 0xf7))"];
"1000284" [label="(Literal,0xff)"];
"1000301" [label="(ControlStructure,if (!eox_seen))"];
"1000270" [label="(Literal,0xf0)"];
"1000258" [label="(Literal,0xf7)"];
"1000308" [label="(Literal,0)"];
"1000216" [label="(ControlStructure,for (i = 0; i < left && !signal_pending(current); i++))"];
"1000233" [label="(Identifier,data)"];
"1000254" [label="(Call,eox_seen && data != 0xf7)"];
"1000257" [label="(Identifier,data)"];
"1000232" [label="(Call,get_user(data,\n\t\t    (unsigned char __user *)(addr + hdr_size + i)))"];
"1000275" [label="(ControlStructure,while (!midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff)) &&\n\t\t\t!signal_pending(current)))"];
"1000280" [label="(Call,(unsigned char) (data & 0xff))"];
"1000290" [label="(Call,!first_byte && data & 0x80)"];
"1000260" [label="(Identifier,data)"];
"1000229" [label="(Block,)"];
"1000252" [label="(Literal,0x80)"];
"1000309" [label="(MethodReturn,RET)"];
"1000221" [label="(Call,i < left)"];
"1000297" [label="(Literal,0)"];
"1000274" [label="(Identifier,EINVAL)"];
"1000287" [label="(Identifier,current)"];
"1000220" [label="(Call,i < left && !signal_pending(current))"];
"1000276" [label="(Call,!midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff)) &&\n\t\t\t!signal_pending(current))"];
"1000305" [label="(Identifier,orig_dev)"];
"1000292" [label="(Identifier,first_byte)"];
"1000126" [label="(Call,eox_seen = 0)"];
"1000238" [label="(Call,hdr_size + i)"];
"1000303" [label="(Identifier,eox_seen)"];
"1000304" [label="(Call,midi_outc(orig_dev, 0xf7))"];
"1000231" [label="(ControlStructure,if (get_user(data,\n\t\t    (unsigned char __user *)(addr + hdr_size + i))))"];
"1000306" [label="(Literal,0xf7)"];
"1000236" [label="(Call,addr + hdr_size + i)"];
"1000247" [label="(Call,i > 0)"];
"1000234" [label="(Call,(unsigned char __user *)(addr + hdr_size + i))"];
"1000269" [label="(Identifier,data)"];
"1000285" [label="(Call,!signal_pending(current))"];
"1000295" [label="(Literal,0x80)"];
"1000288" [label="(Call,schedule())"];
"1000289" [label="(ControlStructure,if (!first_byte && data & 0x80))"];
"1000224" [label="(Call,!signal_pending(current))"];
"1000255" [label="(Identifier,eox_seen)"];
"1000256" [label="(Call,data != 0xf7)"];
"1000264" [label="(Identifier,i)"];
"1000278" [label="(Call,midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff)))"];
"1000279" [label="(Identifier,orig_dev)"];
"1000250" [label="(Call,data & 0x80)"];
"1000245" [label="(Identifier,eox_seen)"];
"1000243" [label="(Identifier,EFAULT)"];
"1000277" [label="(Call,!midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff)))"];
"1000302" [label="(Call,!eox_seen)"];
"1000299" [label="(Identifier,first_byte)"];
"1000291" [label="(Call,!first_byte)"];
"1000190" [label="(Call,hdr_size - offs)"];
"1000293" [label="(Call,data & 0x80)"];
"1000108" -> "1000105"  [label="AST: "];
"1000108" -> "1000309"  [label="DDG: addr"];
"1000108" -> "1000234"  [label="DDG: addr"];
"1000108" -> "1000236"  [label="DDG: addr"];
"1000234" -> "1000232"  [label="AST: "];
"1000234" -> "1000236"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000236" -> "1000234"  [label="AST: "];
"1000232" -> "1000234"  [label="CFG: "];
"1000234" -> "1000309"  [label="DDG: addr + hdr_size + i"];
"1000234" -> "1000232"  [label="DDG: addr + hdr_size + i"];
"1000190" -> "1000234"  [label="DDG: hdr_size"];
"1000221" -> "1000234"  [label="DDG: i"];
"1000232" -> "1000231"  [label="AST: "];
"1000233" -> "1000232"  [label="AST: "];
"1000243" -> "1000232"  [label="CFG: "];
"1000245" -> "1000232"  [label="CFG: "];
"1000232" -> "1000309"  [label="DDG: data"];
"1000232" -> "1000309"  [label="DDG: get_user(data,\n\t\t    (unsigned char __user *)(addr + hdr_size + i))"];
"1000232" -> "1000309"  [label="DDG: (unsigned char __user *)(addr + hdr_size + i)"];
"1000293" -> "1000232"  [label="DDG: data"];
"1000282" -> "1000232"  [label="DDG: data"];
"1000232" -> "1000250"  [label="DDG: data"];
"1000232" -> "1000256"  [label="DDG: data"];
"1000232" -> "1000268"  [label="DDG: data"];
"1000232" -> "1000282"  [label="DDG: data"];
"1000250" -> "1000246"  [label="AST: "];
"1000250" -> "1000252"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000252" -> "1000250"  [label="AST: "];
"1000246" -> "1000250"  [label="CFG: "];
"1000250" -> "1000246"  [label="DDG: data"];
"1000250" -> "1000246"  [label="DDG: 0x80"];
"1000250" -> "1000256"  [label="DDG: data"];
"1000250" -> "1000268"  [label="DDG: data"];
"1000250" -> "1000282"  [label="DDG: data"];
"1000246" -> "1000244"  [label="AST: "];
"1000246" -> "1000247"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000244" -> "1000246"  [label="CFG: "];
"1000246" -> "1000309"  [label="DDG: data & 0x80"];
"1000246" -> "1000309"  [label="DDG: i > 0"];
"1000246" -> "1000244"  [label="DDG: i > 0"];
"1000246" -> "1000244"  [label="DDG: data & 0x80"];
"1000247" -> "1000246"  [label="DDG: i"];
"1000247" -> "1000246"  [label="DDG: 0"];
"1000290" -> "1000246"  [label="DDG: data & 0x80"];
"1000246" -> "1000290"  [label="DDG: data & 0x80"];
"1000244" -> "1000229"  [label="AST: "];
"1000245" -> "1000244"  [label="AST: "];
"1000255" -> "1000244"  [label="CFG: "];
"1000244" -> "1000309"  [label="DDG: i > 0 && data & 0x80"];
"1000244" -> "1000254"  [label="DDG: eox_seen"];
"1000254" -> "1000253"  [label="AST: "];
"1000254" -> "1000255"  [label="CFG: "];
"1000254" -> "1000256"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000256" -> "1000254"  [label="AST: "];
"1000260" -> "1000254"  [label="CFG: "];
"1000264" -> "1000254"  [label="CFG: "];
"1000254" -> "1000309"  [label="DDG: data != 0xf7"];
"1000254" -> "1000309"  [label="DDG: eox_seen"];
"1000254" -> "1000309"  [label="DDG: eox_seen && data != 0xf7"];
"1000256" -> "1000254"  [label="DDG: data"];
"1000256" -> "1000254"  [label="DDG: 0xf7"];
"1000254" -> "1000302"  [label="DDG: eox_seen"];
"1000302" -> "1000301"  [label="AST: "];
"1000302" -> "1000303"  [label="CFG: "];
"1000303" -> "1000302"  [label="AST: "];
"1000305" -> "1000302"  [label="CFG: "];
"1000308" -> "1000302"  [label="CFG: "];
"1000302" -> "1000309"  [label="DDG: eox_seen"];
"1000302" -> "1000309"  [label="DDG: !eox_seen"];
"1000126" -> "1000302"  [label="DDG: eox_seen"];
"1000290" -> "1000289"  [label="AST: "];
"1000290" -> "1000291"  [label="CFG: "];
"1000290" -> "1000293"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000293" -> "1000290"  [label="AST: "];
"1000297" -> "1000290"  [label="CFG: "];
"1000299" -> "1000290"  [label="CFG: "];
"1000290" -> "1000309"  [label="DDG: !first_byte"];
"1000290" -> "1000309"  [label="DDG: !first_byte && data & 0x80"];
"1000290" -> "1000309"  [label="DDG: data & 0x80"];
"1000291" -> "1000290"  [label="DDG: first_byte"];
"1000293" -> "1000290"  [label="DDG: data"];
"1000293" -> "1000290"  [label="DDG: 0x80"];
"1000256" -> "1000258"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000258" -> "1000256"  [label="AST: "];
"1000256" -> "1000268"  [label="DDG: data"];
"1000256" -> "1000282"  [label="DDG: data"];
"1000268" -> "1000267"  [label="AST: "];
"1000268" -> "1000270"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000270" -> "1000268"  [label="AST: "];
"1000274" -> "1000268"  [label="CFG: "];
"1000279" -> "1000268"  [label="CFG: "];
"1000268" -> "1000309"  [label="DDG: data"];
"1000268" -> "1000309"  [label="DDG: data != 0xf0"];
"1000259" -> "1000268"  [label="DDG: data"];
"1000268" -> "1000282"  [label="DDG: data"];
"1000282" -> "1000280"  [label="AST: "];
"1000282" -> "1000284"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000284" -> "1000282"  [label="AST: "];
"1000280" -> "1000282"  [label="CFG: "];
"1000282" -> "1000309"  [label="DDG: data"];
"1000282" -> "1000280"  [label="DDG: data"];
"1000282" -> "1000280"  [label="DDG: 0xff"];
"1000259" -> "1000282"  [label="DDG: data"];
"1000282" -> "1000293"  [label="DDG: data"];
"1000280" -> "1000278"  [label="AST: "];
"1000281" -> "1000280"  [label="AST: "];
"1000278" -> "1000280"  [label="CFG: "];
"1000280" -> "1000309"  [label="DDG: data & 0xff"];
"1000280" -> "1000278"  [label="DDG: data & 0xff"];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000278"  [label="AST: "];
"1000277" -> "1000278"  [label="CFG: "];
"1000278" -> "1000309"  [label="DDG: (unsigned char) (data & 0xff)"];
"1000278" -> "1000309"  [label="DDG: orig_dev"];
"1000278" -> "1000277"  [label="DDG: orig_dev"];
"1000278" -> "1000277"  [label="DDG: (unsigned char) (data & 0xff)"];
"1000153" -> "1000278"  [label="DDG: orig_dev"];
"1000278" -> "1000304"  [label="DDG: orig_dev"];
"1000277" -> "1000276"  [label="AST: "];
"1000287" -> "1000277"  [label="CFG: "];
"1000276" -> "1000277"  [label="CFG: "];
"1000277" -> "1000309"  [label="DDG: midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff))"];
"1000277" -> "1000276"  [label="DDG: midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff))"];
"1000276" -> "1000275"  [label="AST: "];
"1000276" -> "1000285"  [label="CFG: "];
"1000285" -> "1000276"  [label="AST: "];
"1000288" -> "1000276"  [label="CFG: "];
"1000292" -> "1000276"  [label="CFG: "];
"1000276" -> "1000309"  [label="DDG: !midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff)) &&\n\t\t\t!signal_pending(current)"];
"1000276" -> "1000309"  [label="DDG: !signal_pending(current)"];
"1000276" -> "1000309"  [label="DDG: !midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff))"];
"1000276" -> "1000220"  [label="DDG: !signal_pending(current)"];
"1000285" -> "1000276"  [label="DDG: signal_pending(current)"];
"1000220" -> "1000276"  [label="DDG: !signal_pending(current)"];
"1000220" -> "1000216"  [label="AST: "];
"1000220" -> "1000221"  [label="CFG: "];
"1000220" -> "1000224"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000224" -> "1000220"  [label="AST: "];
"1000233" -> "1000220"  [label="CFG: "];
"1000303" -> "1000220"  [label="CFG: "];
"1000220" -> "1000309"  [label="DDG: i < left"];
"1000220" -> "1000309"  [label="DDG: i < left && !signal_pending(current)"];
"1000220" -> "1000309"  [label="DDG: !signal_pending(current)"];
"1000221" -> "1000220"  [label="DDG: i"];
"1000221" -> "1000220"  [label="DDG: left"];
"1000224" -> "1000220"  [label="DDG: signal_pending(current)"];
"1000304" -> "1000301"  [label="AST: "];
"1000304" -> "1000306"  [label="CFG: "];
"1000305" -> "1000304"  [label="AST: "];
"1000306" -> "1000304"  [label="AST: "];
"1000308" -> "1000304"  [label="CFG: "];
"1000304" -> "1000309"  [label="DDG: midi_outc(orig_dev, 0xf7)"];
"1000304" -> "1000309"  [label="DDG: orig_dev"];
"1000153" -> "1000304"  [label="DDG: orig_dev"];
"1000293" -> "1000295"  [label="CFG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000295" -> "1000293"  [label="AST: "];
"1000293" -> "1000309"  [label="DDG: data"];
"1000236" -> "1000238"  [label="CFG: "];
"1000237" -> "1000236"  [label="AST: "];
"1000238" -> "1000236"  [label="AST: "];
"1000236" -> "1000309"  [label="DDG: addr"];
"1000236" -> "1000309"  [label="DDG: hdr_size + i"];
"1000190" -> "1000236"  [label="DDG: hdr_size"];
"1000221" -> "1000236"  [label="DDG: i"];
}
