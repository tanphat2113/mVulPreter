digraph "0_Chrome_96dbafe288dbe2f0cc45fa3c39daf6d0c37acbab_0@API" {
"1000222" [label="(Call,memset(padkey, 0, RC4_KEY_LENGTH + 1))"];
"1000203" [label="(Call,padkey == NULL)"];
"1000196" [label="(Call,padkey = xmlMallocAtomic (RC4_KEY_LENGTH + 1))"];
"1000198" [label="(Call,xmlMallocAtomic (RC4_KEY_LENGTH + 1))"];
"1000252" [label="(Call,memcpy (padkey, key, key_len))"];
"1000316" [label="(Call,PLATFORM_RC4_DECRYPT (ctxt, padkey, bin, ret_len, ret, ret_len))"];
"1000328" [label="(Call,xmlXPathReturnString (ctxt, ret))"];
"1000345" [label="(Call,padkey != NULL)"];
"1000348" [label="(Call,xmlFree (padkey))"];
"1000351" [label="(Call,bin != NULL)"];
"1000354" [label="(Call,xmlFree (bin))"];
"1000333" [label="(Call,key != NULL)"];
"1000336" [label="(Call,xmlFree (key))"];
"1000339" [label="(Call,str != NULL)"];
"1000342" [label="(Call,xmlFree (str))"];
"1000224" [label="(Literal,0)"];
"1000204" [label="(Identifier,padkey)"];
"1000255" [label="(Identifier,key_len)"];
"1000283" [label="(Call,ret_len = exsltCryptoHex2Bin (str, str_len, bin, bin_len))"];
"1000330" [label="(Identifier,ret)"];
"1000338" [label="(ControlStructure,if (str != NULL))"];
"1000336" [label="(Call,xmlFree (key))"];
"1000254" [label="(Identifier,key)"];
"1000348" [label="(Call,xmlFree (padkey))"];
"1000321" [label="(Identifier,ret)"];
"1000285" [label="(Call,exsltCryptoHex2Bin (str, str_len, bin, bin_len))"];
"1000329" [label="(Identifier,ctxt)"];
"1000252" [label="(Call,memcpy (padkey, key, key_len))"];
"1000203" [label="(Call,padkey == NULL)"];
"1000343" [label="(Identifier,str)"];
"1000264" [label="(Call,bin == NULL)"];
"1000342" [label="(Call,xmlFree (str))"];
"1000253" [label="(Identifier,padkey)"];
"1000333" [label="(Call,key != NULL)"];
"1000182" [label="(Call,xmlStrlen (key))"];
"1000230" [label="(Call,key_len > RC4_KEY_LENGTH)"];
"1000257" [label="(Identifier,bin_len)"];
"1000354" [label="(Call,xmlFree (bin))"];
"1000198" [label="(Call,xmlMallocAtomic (RC4_KEY_LENGTH + 1))"];
"1000335" [label="(Identifier,NULL)"];
"1000337" [label="(Identifier,key)"];
"1000105" [label="(Block,)"];
"1000164" [label="(Call,xmlStrlen (str))"];
"1000344" [label="(ControlStructure,if (padkey != NULL))"];
"1000197" [label="(Identifier,padkey)"];
"1000178" [label="(Call,xmlXPathPopString (ctxt))"];
"1000341" [label="(Identifier,NULL)"];
"1000205" [label="(Identifier,NULL)"];
"1000345" [label="(Call,padkey != NULL)"];
"1000328" [label="(Call,xmlXPathReturnString (ctxt, ret))"];
"1000318" [label="(Identifier,padkey)"];
"1000233" [label="(Call,key_len < 0)"];
"1000301" [label="(Call,xsltTransformError(tctxt, NULL, tctxt->inst,\n\t    \"exsltCryptoRc4EncryptFunction: Failed to allocate result\n\"))"];
"1000135" [label="(Call,*bin =\n \tNULL)"];
"1000103" [label="(MethodParameterIn,xmlXPathParserContextPtr ctxt)"];
"1000351" [label="(Call,bin != NULL)"];
"1000356" [label="(MethodReturn,RET)"];
"1000332" [label="(ControlStructure,if (key != NULL))"];
"1000231" [label="(Identifier,key_len)"];
"1000323" [label="(Call,ret[ret_len] = 0)"];
"1000352" [label="(Identifier,bin)"];
"1000237" [label="(Call,xsltTransformError(tctxt, NULL, tctxt->inst,\n \t    \"exsltCryptoRc4EncryptFunction: key size too long or key broken\n\"))"];
"1000346" [label="(Identifier,padkey)"];
"1000196" [label="(Call,padkey = xmlMallocAtomic (RC4_KEY_LENGTH + 1))"];
"1000319" [label="(Identifier,bin)"];
"1000331" [label="(JumpTarget,done:)"];
"1000349" [label="(Identifier,padkey)"];
"1000297" [label="(Call,ret == NULL)"];
"1000350" [label="(ControlStructure,if (bin != NULL))"];
"1000223" [label="(Identifier,padkey)"];
"1000340" [label="(Identifier,str)"];
"1000268" [label="(Call,xsltTransformError(tctxt, NULL, tctxt->inst,\n\t    \"exsltCryptoRc4EncryptFunction: Failed to allocate string\n\"))"];
"1000325" [label="(Identifier,ret)"];
"1000225" [label="(Call,RC4_KEY_LENGTH + 1)"];
"1000317" [label="(Identifier,ctxt)"];
"1000208" [label="(Identifier,tctxt)"];
"1000355" [label="(Identifier,bin)"];
"1000334" [label="(Identifier,key)"];
"1000353" [label="(Identifier,NULL)"];
"1000347" [label="(Identifier,NULL)"];
"1000322" [label="(Identifier,ret_len)"];
"1000202" [label="(ControlStructure,if (padkey == NULL))"];
"1000222" [label="(Call,memset(padkey, 0, RC4_KEY_LENGTH + 1))"];
"1000316" [label="(Call,PLATFORM_RC4_DECRYPT (ctxt, padkey, bin, ret_len, ret, ret_len))"];
"1000339" [label="(Call,str != NULL)"];
"1000199" [label="(Call,RC4_KEY_LENGTH + 1)"];
"1000207" [label="(Call,xsltTransformError(tctxt, NULL, tctxt->inst,\n\t    \"exsltCryptoRc4EncryptFunction: Failed to allocate padkey\n\"))"];
"1000320" [label="(Identifier,ret_len)"];
"1000222" -> "1000105"  [label="AST: "];
"1000222" -> "1000225"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000224" -> "1000222"  [label="AST: "];
"1000225" -> "1000222"  [label="AST: "];
"1000231" -> "1000222"  [label="CFG: "];
"1000222" -> "1000356"  [label="DDG: RC4_KEY_LENGTH + 1"];
"1000222" -> "1000356"  [label="DDG: memset(padkey, 0, RC4_KEY_LENGTH + 1)"];
"1000203" -> "1000222"  [label="DDG: padkey"];
"1000222" -> "1000252"  [label="DDG: padkey"];
"1000222" -> "1000345"  [label="DDG: padkey"];
"1000203" -> "1000202"  [label="AST: "];
"1000203" -> "1000205"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000203"  [label="AST: "];
"1000208" -> "1000203"  [label="CFG: "];
"1000223" -> "1000203"  [label="CFG: "];
"1000203" -> "1000356"  [label="DDG: padkey == NULL"];
"1000196" -> "1000203"  [label="DDG: padkey"];
"1000203" -> "1000207"  [label="DDG: NULL"];
"1000203" -> "1000237"  [label="DDG: NULL"];
"1000203" -> "1000264"  [label="DDG: NULL"];
"1000203" -> "1000345"  [label="DDG: padkey"];
"1000196" -> "1000105"  [label="AST: "];
"1000196" -> "1000198"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000198" -> "1000196"  [label="AST: "];
"1000204" -> "1000196"  [label="CFG: "];
"1000196" -> "1000356"  [label="DDG: xmlMallocAtomic (RC4_KEY_LENGTH + 1)"];
"1000198" -> "1000196"  [label="DDG: RC4_KEY_LENGTH + 1"];
"1000198" -> "1000199"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000198" -> "1000356"  [label="DDG: RC4_KEY_LENGTH + 1"];
"1000252" -> "1000105"  [label="AST: "];
"1000252" -> "1000255"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000254" -> "1000252"  [label="AST: "];
"1000255" -> "1000252"  [label="AST: "];
"1000257" -> "1000252"  [label="CFG: "];
"1000252" -> "1000356"  [label="DDG: key_len"];
"1000252" -> "1000356"  [label="DDG: memcpy (padkey, key, key_len)"];
"1000182" -> "1000252"  [label="DDG: key"];
"1000230" -> "1000252"  [label="DDG: key_len"];
"1000233" -> "1000252"  [label="DDG: key_len"];
"1000252" -> "1000316"  [label="DDG: padkey"];
"1000252" -> "1000333"  [label="DDG: key"];
"1000252" -> "1000345"  [label="DDG: padkey"];
"1000316" -> "1000105"  [label="AST: "];
"1000316" -> "1000322"  [label="CFG: "];
"1000317" -> "1000316"  [label="AST: "];
"1000318" -> "1000316"  [label="AST: "];
"1000319" -> "1000316"  [label="AST: "];
"1000320" -> "1000316"  [label="AST: "];
"1000321" -> "1000316"  [label="AST: "];
"1000322" -> "1000316"  [label="AST: "];
"1000325" -> "1000316"  [label="CFG: "];
"1000316" -> "1000356"  [label="DDG: PLATFORM_RC4_DECRYPT (ctxt, padkey, bin, ret_len, ret, ret_len)"];
"1000316" -> "1000356"  [label="DDG: ret_len"];
"1000178" -> "1000316"  [label="DDG: ctxt"];
"1000103" -> "1000316"  [label="DDG: ctxt"];
"1000285" -> "1000316"  [label="DDG: bin"];
"1000283" -> "1000316"  [label="DDG: ret_len"];
"1000297" -> "1000316"  [label="DDG: ret"];
"1000316" -> "1000328"  [label="DDG: ctxt"];
"1000316" -> "1000328"  [label="DDG: ret"];
"1000316" -> "1000345"  [label="DDG: padkey"];
"1000316" -> "1000351"  [label="DDG: bin"];
"1000328" -> "1000105"  [label="AST: "];
"1000328" -> "1000330"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000330" -> "1000328"  [label="AST: "];
"1000331" -> "1000328"  [label="CFG: "];
"1000328" -> "1000356"  [label="DDG: xmlXPathReturnString (ctxt, ret)"];
"1000328" -> "1000356"  [label="DDG: ctxt"];
"1000328" -> "1000356"  [label="DDG: ret"];
"1000103" -> "1000328"  [label="DDG: ctxt"];
"1000323" -> "1000328"  [label="DDG: ret[ret_len]"];
"1000345" -> "1000344"  [label="AST: "];
"1000345" -> "1000347"  [label="CFG: "];
"1000346" -> "1000345"  [label="AST: "];
"1000347" -> "1000345"  [label="AST: "];
"1000349" -> "1000345"  [label="CFG: "];
"1000352" -> "1000345"  [label="CFG: "];
"1000345" -> "1000356"  [label="DDG: padkey"];
"1000345" -> "1000356"  [label="DDG: padkey != NULL"];
"1000339" -> "1000345"  [label="DDG: NULL"];
"1000345" -> "1000348"  [label="DDG: padkey"];
"1000345" -> "1000351"  [label="DDG: NULL"];
"1000348" -> "1000344"  [label="AST: "];
"1000348" -> "1000349"  [label="CFG: "];
"1000349" -> "1000348"  [label="AST: "];
"1000352" -> "1000348"  [label="CFG: "];
"1000348" -> "1000356"  [label="DDG: padkey"];
"1000348" -> "1000356"  [label="DDG: xmlFree (padkey)"];
"1000351" -> "1000350"  [label="AST: "];
"1000351" -> "1000353"  [label="CFG: "];
"1000352" -> "1000351"  [label="AST: "];
"1000353" -> "1000351"  [label="AST: "];
"1000355" -> "1000351"  [label="CFG: "];
"1000356" -> "1000351"  [label="CFG: "];
"1000351" -> "1000356"  [label="DDG: bin != NULL"];
"1000351" -> "1000356"  [label="DDG: NULL"];
"1000351" -> "1000356"  [label="DDG: bin"];
"1000264" -> "1000351"  [label="DDG: bin"];
"1000135" -> "1000351"  [label="DDG: bin"];
"1000285" -> "1000351"  [label="DDG: bin"];
"1000351" -> "1000354"  [label="DDG: bin"];
"1000354" -> "1000350"  [label="AST: "];
"1000354" -> "1000355"  [label="CFG: "];
"1000355" -> "1000354"  [label="AST: "];
"1000356" -> "1000354"  [label="CFG: "];
"1000354" -> "1000356"  [label="DDG: xmlFree (bin)"];
"1000354" -> "1000356"  [label="DDG: bin"];
"1000333" -> "1000332"  [label="AST: "];
"1000333" -> "1000335"  [label="CFG: "];
"1000334" -> "1000333"  [label="AST: "];
"1000335" -> "1000333"  [label="AST: "];
"1000337" -> "1000333"  [label="CFG: "];
"1000340" -> "1000333"  [label="CFG: "];
"1000333" -> "1000356"  [label="DDG: key"];
"1000333" -> "1000356"  [label="DDG: key != NULL"];
"1000182" -> "1000333"  [label="DDG: key"];
"1000207" -> "1000333"  [label="DDG: NULL"];
"1000237" -> "1000333"  [label="DDG: NULL"];
"1000301" -> "1000333"  [label="DDG: NULL"];
"1000297" -> "1000333"  [label="DDG: NULL"];
"1000268" -> "1000333"  [label="DDG: NULL"];
"1000333" -> "1000336"  [label="DDG: key"];
"1000333" -> "1000339"  [label="DDG: NULL"];
"1000336" -> "1000332"  [label="AST: "];
"1000336" -> "1000337"  [label="CFG: "];
"1000337" -> "1000336"  [label="AST: "];
"1000340" -> "1000336"  [label="CFG: "];
"1000336" -> "1000356"  [label="DDG: xmlFree (key)"];
"1000336" -> "1000356"  [label="DDG: key"];
"1000339" -> "1000338"  [label="AST: "];
"1000339" -> "1000341"  [label="CFG: "];
"1000340" -> "1000339"  [label="AST: "];
"1000341" -> "1000339"  [label="AST: "];
"1000343" -> "1000339"  [label="CFG: "];
"1000346" -> "1000339"  [label="CFG: "];
"1000339" -> "1000356"  [label="DDG: str != NULL"];
"1000339" -> "1000356"  [label="DDG: str"];
"1000285" -> "1000339"  [label="DDG: str"];
"1000164" -> "1000339"  [label="DDG: str"];
"1000339" -> "1000342"  [label="DDG: str"];
"1000342" -> "1000338"  [label="AST: "];
"1000342" -> "1000343"  [label="CFG: "];
"1000343" -> "1000342"  [label="AST: "];
"1000346" -> "1000342"  [label="CFG: "];
"1000342" -> "1000356"  [label="DDG: str"];
"1000342" -> "1000356"  [label="DDG: xmlFree (str)"];
}
