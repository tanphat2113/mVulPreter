digraph "0_savannah_dd89710f0f643eb0f99a3830e0712d26c7642acd_0@array" {
"1000668" [label="(Call,T1_Add_Table( swap_table, 3,\n                            code_table->elements[notdef_index],\n                            code_table->lengths [notdef_index] ))"];
"1000650" [label="(Call,T1_Add_Table( swap_table, 2,\n                            name_table->elements[notdef_index],\n                            name_table->lengths [notdef_index] ))"];
"1000632" [label="(Call,T1_Add_Table( swap_table, 1,\n                            code_table->elements[0],\n                            code_table->lengths [0] ))"];
"1000614" [label="(Call,T1_Add_Table( swap_table, 0,\n                            name_table->elements[0],\n                            name_table->lengths [0] ))"];
"1000368" [label="(Call,psaux->ps_table_funcs->init( swap_table, 4, memory ))"];
"1000148" [label="(Call,swap_table   = &loader->swap_table)"];
"1000357" [label="(Call,psaux->ps_table_funcs->init( name_table,\n                                         loader->num_glyphs,\n                                         memory ))"];
"1000141" [label="(Call,name_table   = &loader->glyph_names)"];
"1000346" [label="(Call,psaux->ps_table_funcs->init( code_table,\n                                         loader->num_glyphs,\n                                         memory ))"];
"1000134" [label="(Call,code_table   = &loader->charstrings)"];
"1000295" [label="(Call,loader->num_glyphs  = count)"];
"1000243" [label="(Call,count = 0)"];
"1000282" [label="(Call,count++)"];
"1000216" [label="(Call,loader->num_glyphs = (FT_UInt)T1_ToInt( parser ))"];
"1000220" [label="(Call,(FT_UInt)T1_ToInt( parser ))"];
"1000222" [label="(Call,T1_ToInt( parser ))"];
"1000189" [label="(Call,T1_Skip_Spaces( parser ))"];
"1000127" [label="(Call,parser       = &loader->parser)"];
"1000155" [label="(Call,memory       = parser->root.memory)"];
"1000604" [label="(Call,(const char*)name_table->elements[0])"];
"1000666" [label="(Call,error = T1_Add_Table( swap_table, 3,\n                            code_table->elements[notdef_index],\n                            code_table->lengths [notdef_index] ))"];
"1000758" [label="(Call,parser->root.error = error)"];
"1000309" [label="(Identifier,parser)"];
"1000339" [label="(Call,error = FT_THROW( Invalid_File_Format ))"];
"1000369" [label="(Identifier,swap_table)"];
"1000347" [label="(Identifier,code_table)"];
"1000246" [label="(Call,T1_Skip_PS_Token( parser ))"];
"1000539" [label="(Call,error = FT_THROW( Invalid_File_Format ))"];
"1000346" [label="(Call,psaux->ps_table_funcs->init( code_table,\n                                         loader->num_glyphs,\n                                         memory ))"];
"1000156" [label="(Identifier,memory)"];
"1000216" [label="(Call,loader->num_glyphs = (FT_UInt)T1_ToInt( parser ))"];
"1000165" [label="(Identifier,psaux)"];
"1000282" [label="(Call,count++)"];
"1000651" [label="(Identifier,swap_table)"];
"1000202" [label="(Call,error = FT_THROW( Invalid_File_Format ))"];
"1000652" [label="(Literal,2)"];
"1000247" [label="(Identifier,parser)"];
"1000758" [label="(Call,parser->root.error = error)"];
"1000371" [label="(Identifier,memory)"];
"1000217" [label="(Call,loader->num_glyphs)"];
"1000702" [label="(Call,error = T1_Add_Table( code_table, notdef_index,\n                            swap_table->elements[1],\n                            swap_table->lengths [1] ))"];
"1000148" [label="(Call,swap_table   = &loader->swap_table)"];
"1000359" [label="(Call,loader->num_glyphs)"];
"1000653" [label="(Call,name_table->elements[notdef_index])"];
"1000368" [label="(Call,psaux->ps_table_funcs->init( swap_table, 4, memory ))"];
"1000220" [label="(Call,(FT_UInt)T1_ToInt( parser ))"];
"1000127" [label="(Call,parser       = &loader->parser)"];
"1000128" [label="(Identifier,parser)"];
"1000296" [label="(Call,loader->num_glyphs)"];
"1000243" [label="(Call,count = 0)"];
"1000295" [label="(Call,loader->num_glyphs  = count)"];
"1000632" [label="(Call,T1_Add_Table( swap_table, 1,\n                            code_table->elements[0],\n                            code_table->lengths [0] ))"];
"1000190" [label="(Identifier,parser)"];
"1000614" [label="(Call,T1_Add_Table( swap_table, 0,\n                            name_table->elements[0],\n                            name_table->lengths [0] ))"];
"1000666" [label="(Call,error = T1_Add_Table( swap_table, 3,\n                            code_table->elements[notdef_index],\n                            code_table->lengths [notdef_index] ))"];
"1000616" [label="(Literal,0)"];
"1000472" [label="(Call,T1_Add_Table( name_table, n, cur, len + 1 ))"];
"1000143" [label="(Call,&loader->glyph_names)"];
"1000380" [label="(Call,T1_Skip_Spaces( parser ))"];
"1000650" [label="(Call,T1_Add_Table( swap_table, 2,\n                            name_table->elements[notdef_index],\n                            name_table->lengths [notdef_index] ))"];
"1000223" [label="(Identifier,parser)"];
"1000125" [label="(Block,)"];
"1000351" [label="(Identifier,memory)"];
"1000366" [label="(Call,error = psaux->ps_table_funcs->init( swap_table, 4, memory ))"];
"1000612" [label="(Call,error = T1_Add_Table( swap_table, 0,\n                            name_table->elements[0],\n                            name_table->lengths [0] ))"];
"1000303" [label="(Identifier,parser)"];
"1000323" [label="(Call,error = FT_THROW( Invalid_File_Format ))"];
"1000622" [label="(Call,name_table->lengths [0])"];
"1000764" [label="(Identifier,error)"];
"1000470" [label="(Call,error = T1_Add_Table( name_table, n, cur, len + 1 ))"];
"1000344" [label="(Call,error = psaux->ps_table_funcs->init( code_table,\n                                         loader->num_glyphs,\n                                         memory ))"];
"1000765" [label="(MethodReturn,RET)"];
"1000273" [label="(ControlStructure,if ( *parser->root.cursor == '/' ))"];
"1000555" [label="(Call,T1_Add_Table( code_table, n, cur, len + 1 ))"];
"1000215" [label="(Block,)"];
"1000577" [label="(Call,n >= loader->num_glyphs)"];
"1000600" [label="(Call,ft_strcmp( (const char*)\".notdef\",\n                    (const char*)name_table->elements[0] ))"];
"1000617" [label="(Call,name_table->elements[0])"];
"1000658" [label="(Call,name_table->lengths [notdef_index])"];
"1000604" [label="(Call,(const char*)name_table->elements[0])"];
"1000630" [label="(Call,error = T1_Add_Table( swap_table, 1,\n                            code_table->elements[0],\n                            code_table->lengths [0] ))"];
"1000553" [label="(Call,error = T1_Add_Table( code_table, n, cur, len + 1 ))"];
"1000668" [label="(Call,T1_Add_Table( swap_table, 3,\n                            code_table->elements[notdef_index],\n                            code_table->lengths [notdef_index] ))"];
"1000640" [label="(Call,code_table->lengths [0])"];
"1000670" [label="(Literal,3)"];
"1000222" [label="(Call,T1_ToInt( parser ))"];
"1000669" [label="(Identifier,swap_table)"];
"1000149" [label="(Identifier,swap_table)"];
"1000141" [label="(Call,name_table   = &loader->glyph_names)"];
"1000155" [label="(Call,memory       = parser->root.memory)"];
"1000195" [label="(Identifier,parser)"];
"1000606" [label="(Call,name_table->elements[0])"];
"1000720" [label="(Call,error = T1_Add_Table( name_table, 0,\n                            swap_table->elements[2],\n                            swap_table->lengths [2] ))"];
"1000241" [label="(Block,)"];
"1000684" [label="(Call,error = T1_Add_Table( name_table, notdef_index,\n                            swap_table->elements[0],\n                            swap_table->lengths [0] ))"];
"1000135" [label="(Identifier,code_table)"];
"1000633" [label="(Identifier,swap_table)"];
"1000704" [label="(Call,T1_Add_Table( code_table, notdef_index,\n                            swap_table->elements[1],\n                            swap_table->lengths [1] ))"];
"1000245" [label="(Literal,0)"];
"1000676" [label="(Call,code_table->lengths [notdef_index])"];
"1000357" [label="(Call,psaux->ps_table_funcs->init( name_table,\n                                         loader->num_glyphs,\n                                         memory ))"];
"1000611" [label="(Block,)"];
"1000299" [label="(Identifier,count)"];
"1000667" [label="(Identifier,error)"];
"1000157" [label="(Call,parser->root.memory)"];
"1000294" [label="(Block,)"];
"1000686" [label="(Call,T1_Add_Table( name_table, notdef_index,\n                            swap_table->elements[0],\n                            swap_table->lengths [0] ))"];
"1000759" [label="(Call,parser->root.error)"];
"1000738" [label="(Call,error = T1_Add_Table( code_table, 0,\n                            swap_table->elements[3],\n                            swap_table->lengths [3] ))"];
"1000227" [label="(Identifier,parser)"];
"1000355" [label="(Call,error = psaux->ps_table_funcs->init( name_table,\n                                         loader->num_glyphs,\n                                         memory ))"];
"1000682" [label="(Identifier,error)"];
"1000150" [label="(Call,&loader->swap_table)"];
"1000370" [label="(Literal,4)"];
"1000142" [label="(Identifier,name_table)"];
"1000615" [label="(Identifier,swap_table)"];
"1000348" [label="(Call,loader->num_glyphs)"];
"1000454" [label="(Call,error = FT_THROW( Invalid_File_Format ))"];
"1000134" [label="(Call,code_table   = &loader->charstrings)"];
"1000283" [label="(Identifier,count)"];
"1000635" [label="(Call,code_table->elements[0])"];
"1000634" [label="(Literal,1)"];
"1000362" [label="(Identifier,memory)"];
"1000189" [label="(Call,T1_Skip_Spaces( parser ))"];
"1000244" [label="(Identifier,count)"];
"1000358" [label="(Identifier,name_table)"];
"1000136" [label="(Call,&loader->charstrings)"];
"1000594" [label="(Call,error = FT_THROW( Invalid_File_Format ))"];
"1000129" [label="(Call,&loader->parser)"];
"1000648" [label="(Call,error = T1_Add_Table( swap_table, 2,\n                            name_table->elements[notdef_index],\n                            name_table->lengths [notdef_index] ))"];
"1000671" [label="(Call,code_table->elements[notdef_index])"];
"1000668" -> "1000666"  [label="AST: "];
"1000668" -> "1000676"  [label="CFG: "];
"1000669" -> "1000668"  [label="AST: "];
"1000670" -> "1000668"  [label="AST: "];
"1000671" -> "1000668"  [label="AST: "];
"1000676" -> "1000668"  [label="AST: "];
"1000666" -> "1000668"  [label="CFG: "];
"1000668" -> "1000765"  [label="DDG: code_table->lengths [notdef_index]"];
"1000668" -> "1000765"  [label="DDG: code_table->elements[notdef_index]"];
"1000668" -> "1000765"  [label="DDG: swap_table"];
"1000668" -> "1000666"  [label="DDG: swap_table"];
"1000668" -> "1000666"  [label="DDG: 3"];
"1000668" -> "1000666"  [label="DDG: code_table->elements[notdef_index]"];
"1000668" -> "1000666"  [label="DDG: code_table->lengths [notdef_index]"];
"1000650" -> "1000668"  [label="DDG: swap_table"];
"1000650" -> "1000648"  [label="AST: "];
"1000650" -> "1000658"  [label="CFG: "];
"1000651" -> "1000650"  [label="AST: "];
"1000652" -> "1000650"  [label="AST: "];
"1000653" -> "1000650"  [label="AST: "];
"1000658" -> "1000650"  [label="AST: "];
"1000648" -> "1000650"  [label="CFG: "];
"1000650" -> "1000765"  [label="DDG: swap_table"];
"1000650" -> "1000765"  [label="DDG: name_table->elements[notdef_index]"];
"1000650" -> "1000765"  [label="DDG: name_table->lengths [notdef_index]"];
"1000650" -> "1000648"  [label="DDG: swap_table"];
"1000650" -> "1000648"  [label="DDG: 2"];
"1000650" -> "1000648"  [label="DDG: name_table->elements[notdef_index]"];
"1000650" -> "1000648"  [label="DDG: name_table->lengths [notdef_index]"];
"1000632" -> "1000650"  [label="DDG: swap_table"];
"1000632" -> "1000630"  [label="AST: "];
"1000632" -> "1000640"  [label="CFG: "];
"1000633" -> "1000632"  [label="AST: "];
"1000634" -> "1000632"  [label="AST: "];
"1000635" -> "1000632"  [label="AST: "];
"1000640" -> "1000632"  [label="AST: "];
"1000630" -> "1000632"  [label="CFG: "];
"1000632" -> "1000765"  [label="DDG: code_table->lengths [0]"];
"1000632" -> "1000765"  [label="DDG: swap_table"];
"1000632" -> "1000765"  [label="DDG: code_table->elements[0]"];
"1000632" -> "1000630"  [label="DDG: swap_table"];
"1000632" -> "1000630"  [label="DDG: 1"];
"1000632" -> "1000630"  [label="DDG: code_table->elements[0]"];
"1000632" -> "1000630"  [label="DDG: code_table->lengths [0]"];
"1000614" -> "1000632"  [label="DDG: swap_table"];
"1000614" -> "1000612"  [label="AST: "];
"1000614" -> "1000622"  [label="CFG: "];
"1000615" -> "1000614"  [label="AST: "];
"1000616" -> "1000614"  [label="AST: "];
"1000617" -> "1000614"  [label="AST: "];
"1000622" -> "1000614"  [label="AST: "];
"1000612" -> "1000614"  [label="CFG: "];
"1000614" -> "1000765"  [label="DDG: name_table->lengths [0]"];
"1000614" -> "1000765"  [label="DDG: name_table->elements[0]"];
"1000614" -> "1000765"  [label="DDG: swap_table"];
"1000614" -> "1000612"  [label="DDG: swap_table"];
"1000614" -> "1000612"  [label="DDG: 0"];
"1000614" -> "1000612"  [label="DDG: name_table->elements[0]"];
"1000614" -> "1000612"  [label="DDG: name_table->lengths [0]"];
"1000368" -> "1000614"  [label="DDG: swap_table"];
"1000604" -> "1000614"  [label="DDG: name_table->elements[0]"];
"1000368" -> "1000366"  [label="AST: "];
"1000368" -> "1000371"  [label="CFG: "];
"1000369" -> "1000368"  [label="AST: "];
"1000370" -> "1000368"  [label="AST: "];
"1000371" -> "1000368"  [label="AST: "];
"1000366" -> "1000368"  [label="CFG: "];
"1000368" -> "1000765"  [label="DDG: swap_table"];
"1000368" -> "1000765"  [label="DDG: memory"];
"1000368" -> "1000366"  [label="DDG: swap_table"];
"1000368" -> "1000366"  [label="DDG: 4"];
"1000368" -> "1000366"  [label="DDG: memory"];
"1000148" -> "1000368"  [label="DDG: swap_table"];
"1000357" -> "1000368"  [label="DDG: memory"];
"1000148" -> "1000125"  [label="AST: "];
"1000148" -> "1000150"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000150" -> "1000148"  [label="AST: "];
"1000156" -> "1000148"  [label="CFG: "];
"1000148" -> "1000765"  [label="DDG: swap_table"];
"1000148" -> "1000765"  [label="DDG: &loader->swap_table"];
"1000357" -> "1000355"  [label="AST: "];
"1000357" -> "1000362"  [label="CFG: "];
"1000358" -> "1000357"  [label="AST: "];
"1000359" -> "1000357"  [label="AST: "];
"1000362" -> "1000357"  [label="AST: "];
"1000355" -> "1000357"  [label="CFG: "];
"1000357" -> "1000765"  [label="DDG: name_table"];
"1000357" -> "1000765"  [label="DDG: memory"];
"1000357" -> "1000765"  [label="DDG: loader->num_glyphs"];
"1000357" -> "1000355"  [label="DDG: name_table"];
"1000357" -> "1000355"  [label="DDG: loader->num_glyphs"];
"1000357" -> "1000355"  [label="DDG: memory"];
"1000141" -> "1000357"  [label="DDG: name_table"];
"1000346" -> "1000357"  [label="DDG: loader->num_glyphs"];
"1000346" -> "1000357"  [label="DDG: memory"];
"1000357" -> "1000472"  [label="DDG: name_table"];
"1000357" -> "1000577"  [label="DDG: loader->num_glyphs"];
"1000357" -> "1000686"  [label="DDG: name_table"];
"1000141" -> "1000125"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000149" -> "1000141"  [label="CFG: "];
"1000141" -> "1000765"  [label="DDG: name_table"];
"1000141" -> "1000765"  [label="DDG: &loader->glyph_names"];
"1000346" -> "1000344"  [label="AST: "];
"1000346" -> "1000351"  [label="CFG: "];
"1000347" -> "1000346"  [label="AST: "];
"1000348" -> "1000346"  [label="AST: "];
"1000351" -> "1000346"  [label="AST: "];
"1000344" -> "1000346"  [label="CFG: "];
"1000346" -> "1000765"  [label="DDG: memory"];
"1000346" -> "1000765"  [label="DDG: loader->num_glyphs"];
"1000346" -> "1000765"  [label="DDG: code_table"];
"1000346" -> "1000344"  [label="DDG: code_table"];
"1000346" -> "1000344"  [label="DDG: loader->num_glyphs"];
"1000346" -> "1000344"  [label="DDG: memory"];
"1000134" -> "1000346"  [label="DDG: code_table"];
"1000295" -> "1000346"  [label="DDG: loader->num_glyphs"];
"1000216" -> "1000346"  [label="DDG: loader->num_glyphs"];
"1000155" -> "1000346"  [label="DDG: memory"];
"1000346" -> "1000555"  [label="DDG: code_table"];
"1000346" -> "1000704"  [label="DDG: code_table"];
"1000134" -> "1000125"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000142" -> "1000134"  [label="CFG: "];
"1000134" -> "1000765"  [label="DDG: code_table"];
"1000134" -> "1000765"  [label="DDG: &loader->charstrings"];
"1000295" -> "1000294"  [label="AST: "];
"1000295" -> "1000299"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000299" -> "1000295"  [label="AST: "];
"1000303" -> "1000295"  [label="CFG: "];
"1000295" -> "1000765"  [label="DDG: loader->num_glyphs"];
"1000295" -> "1000765"  [label="DDG: count"];
"1000243" -> "1000295"  [label="DDG: count"];
"1000282" -> "1000295"  [label="DDG: count"];
"1000243" -> "1000241"  [label="AST: "];
"1000243" -> "1000245"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000245" -> "1000243"  [label="AST: "];
"1000247" -> "1000243"  [label="CFG: "];
"1000243" -> "1000765"  [label="DDG: count"];
"1000243" -> "1000282"  [label="DDG: count"];
"1000282" -> "1000273"  [label="AST: "];
"1000282" -> "1000283"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000309" -> "1000282"  [label="CFG: "];
"1000282" -> "1000765"  [label="DDG: count"];
"1000216" -> "1000215"  [label="AST: "];
"1000216" -> "1000220"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000220" -> "1000216"  [label="AST: "];
"1000227" -> "1000216"  [label="CFG: "];
"1000216" -> "1000765"  [label="DDG: loader->num_glyphs"];
"1000216" -> "1000765"  [label="DDG: (FT_UInt)T1_ToInt( parser )"];
"1000220" -> "1000216"  [label="DDG: T1_ToInt( parser )"];
"1000220" -> "1000222"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000222" -> "1000220"  [label="AST: "];
"1000220" -> "1000765"  [label="DDG: T1_ToInt( parser )"];
"1000222" -> "1000220"  [label="DDG: parser"];
"1000222" -> "1000223"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000222" -> "1000765"  [label="DDG: parser"];
"1000189" -> "1000222"  [label="DDG: parser"];
"1000222" -> "1000380"  [label="DDG: parser"];
"1000189" -> "1000125"  [label="AST: "];
"1000189" -> "1000190"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000195" -> "1000189"  [label="CFG: "];
"1000189" -> "1000765"  [label="DDG: parser"];
"1000189" -> "1000765"  [label="DDG: T1_Skip_Spaces( parser )"];
"1000127" -> "1000189"  [label="DDG: parser"];
"1000189" -> "1000246"  [label="DDG: parser"];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000135" -> "1000127"  [label="CFG: "];
"1000127" -> "1000765"  [label="DDG: &loader->parser"];
"1000155" -> "1000125"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000157" -> "1000155"  [label="AST: "];
"1000165" -> "1000155"  [label="CFG: "];
"1000155" -> "1000765"  [label="DDG: parser->root.memory"];
"1000155" -> "1000765"  [label="DDG: memory"];
"1000604" -> "1000600"  [label="AST: "];
"1000604" -> "1000606"  [label="CFG: "];
"1000605" -> "1000604"  [label="AST: "];
"1000606" -> "1000604"  [label="AST: "];
"1000600" -> "1000604"  [label="CFG: "];
"1000604" -> "1000765"  [label="DDG: name_table->elements[0]"];
"1000604" -> "1000600"  [label="DDG: name_table->elements[0]"];
"1000666" -> "1000611"  [label="AST: "];
"1000667" -> "1000666"  [label="AST: "];
"1000682" -> "1000666"  [label="CFG: "];
"1000666" -> "1000765"  [label="DDG: T1_Add_Table( swap_table, 3,\n                            code_table->elements[notdef_index],\n                            code_table->lengths [notdef_index] )"];
"1000666" -> "1000758"  [label="DDG: error"];
"1000758" -> "1000125"  [label="AST: "];
"1000758" -> "1000764"  [label="CFG: "];
"1000759" -> "1000758"  [label="AST: "];
"1000764" -> "1000758"  [label="AST: "];
"1000765" -> "1000758"  [label="CFG: "];
"1000758" -> "1000765"  [label="DDG: parser->root.error"];
"1000758" -> "1000765"  [label="DDG: error"];
"1000355" -> "1000758"  [label="DDG: error"];
"1000594" -> "1000758"  [label="DDG: error"];
"1000684" -> "1000758"  [label="DDG: error"];
"1000738" -> "1000758"  [label="DDG: error"];
"1000630" -> "1000758"  [label="DDG: error"];
"1000366" -> "1000758"  [label="DDG: error"];
"1000648" -> "1000758"  [label="DDG: error"];
"1000323" -> "1000758"  [label="DDG: error"];
"1000470" -> "1000758"  [label="DDG: error"];
"1000344" -> "1000758"  [label="DDG: error"];
"1000539" -> "1000758"  [label="DDG: error"];
"1000454" -> "1000758"  [label="DDG: error"];
"1000612" -> "1000758"  [label="DDG: error"];
"1000553" -> "1000758"  [label="DDG: error"];
"1000202" -> "1000758"  [label="DDG: error"];
"1000720" -> "1000758"  [label="DDG: error"];
"1000339" -> "1000758"  [label="DDG: error"];
"1000702" -> "1000758"  [label="DDG: error"];
}
