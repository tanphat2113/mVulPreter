digraph "0_file_b4c01141e5367f247b84dcaf6aefbb4e741842b8@pointer" {
"1000395" [label="(Call,file_printf(ms, \"kNetBSD\"))"];
"1000334" [label="(Call,file_printf(ms, \", for GNU/\"))"];
"1000286" [label="(Call,file_printf(ms, \", for SuSE %d.%d\", nbuf[doff], nbuf[doff + 1]))"];
"1000117" [label="(MethodParameterIn,struct magic_set *ms)"];
"1000394" [label="(Call,file_printf(ms, \"kNetBSD\") == -1)"];
"1000415" [label="(Call,file_printf(ms, \" %d.%d.%d\", elf_getu32(swap, desc[1]),\n\t\t    elf_getu32(swap, desc[2]), elf_getu32(swap, desc[3])))"];
"1000414" [label="(Call,file_printf(ms, \" %d.%d.%d\", elf_getu32(swap, desc[1]),\n\t\t    elf_getu32(swap, desc[2]), elf_getu32(swap, desc[3])) == -1)"];
"1000423" [label="(Call,elf_getu32(swap, desc[2]))"];
"1000300" [label="(Identifier,namesz)"];
"1001237" [label="(MethodReturn,RET)"];
"1000839" [label="(Call,file_printf(ms, \" %d.%d.%d\", desc / 100000,\n\t\t    desc / 10000 % 10, desc % 10000))"];
"1000401" [label="(Identifier,size)"];
"1000397" [label="(Literal,\"kNetBSD\")"];
"1000373" [label="(Call,file_printf(ms, \"Solaris\"))"];
"1000288" [label="(Literal,\", for SuSE %d.%d\")"];
"1000814" [label="(Call,file_printf(ms, \", for DragonFly\"))"];
"1000393" [label="(ControlStructure,if (file_printf(ms, \"kNetBSD\") == -1))"];
"1000384" [label="(Call,file_printf(ms, \"kFreeBSD\"))"];
"1000475" [label="(Call,file_printf(ms, \", BuildID[%s]=\", descsz == 16 ? \"md5/uuid\" :\n\t\t\"sha1\"))"];
"1000774" [label="(Call,file_printf(ms, \", for OpenBSD\"))"];
"1000433" [label="(Call,-1)"];
"1000413" [label="(ControlStructure,if (file_printf(ms, \" %d.%d.%d\", elf_getu32(swap, desc[1]),\n\t\t    elf_getu32(swap, desc[2]), elf_getu32(swap, desc[3])) == -1))"];
"1000679" [label="(Call,file_printf(ms, \", compiler model: %.*s\",\n\t\t\t    (int)descsz, (const char *)&nbuf[doff]))"];
"1000415" [label="(Call,file_printf(ms, \" %d.%d.%d\", elf_getu32(swap, desc[1]),\n\t\t    elf_getu32(swap, desc[2]), elf_getu32(swap, desc[3])))"];
"1000406" [label="(Call,file_printf(ms, \"<unknown>\"))"];
"1000416" [label="(Identifier,ms)"];
"1000395" [label="(Call,file_printf(ms, \"kNetBSD\"))"];
"1000204" [label="(Call,file_printf(ms, \", bad note description size 0x%lx\",\n \t\t(unsigned long)descsz))"];
"1000394" [label="(Call,file_printf(ms, \"kNetBSD\") == -1)"];
"1000286" [label="(Call,file_printf(ms, \", for SuSE %d.%d\", nbuf[doff], nbuf[doff + 1]))"];
"1000189" [label="(Call,file_printf(ms, \", bad note name size 0x%lx\",\n \t\t(unsigned long)namesz))"];
"1000642" [label="(Call,do_note_netbsd_version(ms, swap, &nbuf[doff]))"];
"1000402" [label="(ControlStructure,break;)"];
"1000334" [label="(Call,file_printf(ms, \", for GNU/\"))"];
"1000292" [label="(Call,nbuf[doff + 1])"];
"1000418" [label="(Call,elf_getu32(swap, desc[1]))"];
"1000602" [label="(Call,file_printf(ms, \"%s%s\", did++ ? \",\" : \"\",\n\t\t\t    pax[i]))"];
"1000338" [label="(Literal,1)"];
"1000439" [label="(Identifier,flags)"];
"1000988" [label="(Call,file_printf(ms, \", from '%.31s'\",\n\t\t\t    &nbuf[doff + 0x7c]))"];
"1000333" [label="(Call,file_printf(ms, \", for GNU/\") == -1)"];
"1000396" [label="(Identifier,ms)"];
"1000699" [label="(Call,file_printf(ms, \", note=%u\", xnh_type))"];
"1000398" [label="(Call,-1)"];
"1000417" [label="(Literal,\" %d.%d.%d\")"];
"1000962" [label="(Call,file_printf(ms, \", %s-style\", os_style_names[os_style]))"];
"1000289" [label="(Call,nbuf[doff])"];
"1001214" [label="(Call,file_printf(ms, \", from '%.*s'\",\n\t\t\t\t    (int)(cp - cname), cname))"];
"1000428" [label="(Call,elf_getu32(swap, desc[3]))"];
"1000735" [label="(Call,do_note_freebsd_version(ms, swap, &nbuf[doff]))"];
"1000399" [label="(Literal,1)"];
"1000335" [label="(Identifier,ms)"];
"1000287" [label="(Identifier,ms)"];
"1000573" [label="(Call,file_printf(ms, \", PaX: \"))"];
"1001016" [label="(Call,file_printf(ms, \" (signal %u)\",\n\t\t\t    elf_getu32(swap, signo)))"];
"1000285" [label="(Block,)"];
"1000508" [label="(Call,file_printf(ms, \"%02x\", desc[i]))"];
"1000414" [label="(Call,file_printf(ms, \" %d.%d.%d\", elf_getu32(swap, desc[1]),\n\t\t    elf_getu32(swap, desc[2]), elf_getu32(swap, desc[3])) == -1)"];
"1000436" [label="(Identifier,size)"];
"1000336" [label="(Literal,\", for GNU/\")"];
"1000434" [label="(Literal,1)"];
"1000351" [label="(Call,file_printf(ms, \"Linux\"))"];
"1000362" [label="(Call,file_printf(ms, \"Hurd\"))"];
"1000659" [label="(Call,file_printf(ms, \", compiled for: %.*s\", (int)descsz,\n\t\t\t    (const char *)&nbuf[doff]))"];
"1000117" [label="(MethodParameterIn,struct magic_set *ms)"];
"1000395" -> "1000394"  [label="AST: "];
"1000395" -> "1000397"  [label="CFG: "];
"1000396" -> "1000395"  [label="AST: "];
"1000397" -> "1000395"  [label="AST: "];
"1000399" -> "1000395"  [label="CFG: "];
"1000395" -> "1001237"  [label="DDG: "];
"1000395" -> "1000394"  [label="DDG: "];
"1000395" -> "1000394"  [label="DDG: "];
"1000334" -> "1000395"  [label="DDG: "];
"1000117" -> "1000395"  [label="DDG: "];
"1000395" -> "1000415"  [label="DDG: "];
"1000334" -> "1000333"  [label="AST: "];
"1000334" -> "1000336"  [label="CFG: "];
"1000335" -> "1000334"  [label="AST: "];
"1000336" -> "1000334"  [label="AST: "];
"1000338" -> "1000334"  [label="CFG: "];
"1000334" -> "1001237"  [label="DDG: "];
"1000334" -> "1000333"  [label="DDG: "];
"1000334" -> "1000333"  [label="DDG: "];
"1000286" -> "1000334"  [label="DDG: "];
"1000117" -> "1000334"  [label="DDG: "];
"1000334" -> "1000351"  [label="DDG: "];
"1000334" -> "1000362"  [label="DDG: "];
"1000334" -> "1000373"  [label="DDG: "];
"1000334" -> "1000384"  [label="DDG: "];
"1000334" -> "1000406"  [label="DDG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000286" -> "1000292"  [label="CFG: "];
"1000287" -> "1000286"  [label="AST: "];
"1000288" -> "1000286"  [label="AST: "];
"1000289" -> "1000286"  [label="AST: "];
"1000292" -> "1000286"  [label="AST: "];
"1000300" -> "1000286"  [label="CFG: "];
"1000286" -> "1001237"  [label="DDG: "];
"1000286" -> "1001237"  [label="DDG: "];
"1000286" -> "1001237"  [label="DDG: "];
"1000286" -> "1001237"  [label="DDG: "];
"1000117" -> "1000286"  [label="DDG: "];
"1000286" -> "1000475"  [label="DDG: "];
"1000286" -> "1000573"  [label="DDG: "];
"1000286" -> "1000602"  [label="DDG: "];
"1000286" -> "1000642"  [label="DDG: "];
"1000286" -> "1000659"  [label="DDG: "];
"1000286" -> "1000679"  [label="DDG: "];
"1000286" -> "1000699"  [label="DDG: "];
"1000286" -> "1000735"  [label="DDG: "];
"1000286" -> "1000774"  [label="DDG: "];
"1000286" -> "1000814"  [label="DDG: "];
"1000286" -> "1000962"  [label="DDG: "];
"1000286" -> "1000988"  [label="DDG: "];
"1000286" -> "1001214"  [label="DDG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1001237"  [label="DDG: "];
"1000117" -> "1000189"  [label="DDG: "];
"1000117" -> "1000204"  [label="DDG: "];
"1000117" -> "1000351"  [label="DDG: "];
"1000117" -> "1000362"  [label="DDG: "];
"1000117" -> "1000373"  [label="DDG: "];
"1000117" -> "1000384"  [label="DDG: "];
"1000117" -> "1000406"  [label="DDG: "];
"1000117" -> "1000415"  [label="DDG: "];
"1000117" -> "1000475"  [label="DDG: "];
"1000117" -> "1000508"  [label="DDG: "];
"1000117" -> "1000573"  [label="DDG: "];
"1000117" -> "1000602"  [label="DDG: "];
"1000117" -> "1000642"  [label="DDG: "];
"1000117" -> "1000659"  [label="DDG: "];
"1000117" -> "1000679"  [label="DDG: "];
"1000117" -> "1000699"  [label="DDG: "];
"1000117" -> "1000735"  [label="DDG: "];
"1000117" -> "1000774"  [label="DDG: "];
"1000117" -> "1000814"  [label="DDG: "];
"1000117" -> "1000839"  [label="DDG: "];
"1000117" -> "1000962"  [label="DDG: "];
"1000117" -> "1000988"  [label="DDG: "];
"1000117" -> "1001016"  [label="DDG: "];
"1000117" -> "1001214"  [label="DDG: "];
"1000394" -> "1000393"  [label="AST: "];
"1000394" -> "1000398"  [label="CFG: "];
"1000398" -> "1000394"  [label="AST: "];
"1000401" -> "1000394"  [label="CFG: "];
"1000402" -> "1000394"  [label="CFG: "];
"1000394" -> "1001237"  [label="DDG: "];
"1000394" -> "1001237"  [label="DDG: "];
"1000394" -> "1001237"  [label="DDG: "];
"1000398" -> "1000394"  [label="DDG: "];
"1000415" -> "1000414"  [label="AST: "];
"1000415" -> "1000428"  [label="CFG: "];
"1000416" -> "1000415"  [label="AST: "];
"1000417" -> "1000415"  [label="AST: "];
"1000418" -> "1000415"  [label="AST: "];
"1000423" -> "1000415"  [label="AST: "];
"1000428" -> "1000415"  [label="AST: "];
"1000434" -> "1000415"  [label="CFG: "];
"1000415" -> "1001237"  [label="DDG: "];
"1000415" -> "1001237"  [label="DDG: "];
"1000415" -> "1001237"  [label="DDG: "];
"1000415" -> "1001237"  [label="DDG: "];
"1000415" -> "1000414"  [label="DDG: "];
"1000415" -> "1000414"  [label="DDG: "];
"1000415" -> "1000414"  [label="DDG: "];
"1000415" -> "1000414"  [label="DDG: "];
"1000415" -> "1000414"  [label="DDG: "];
"1000406" -> "1000415"  [label="DDG: "];
"1000351" -> "1000415"  [label="DDG: "];
"1000373" -> "1000415"  [label="DDG: "];
"1000384" -> "1000415"  [label="DDG: "];
"1000362" -> "1000415"  [label="DDG: "];
"1000418" -> "1000415"  [label="DDG: "];
"1000418" -> "1000415"  [label="DDG: "];
"1000423" -> "1000415"  [label="DDG: "];
"1000423" -> "1000415"  [label="DDG: "];
"1000428" -> "1000415"  [label="DDG: "];
"1000428" -> "1000415"  [label="DDG: "];
"1000414" -> "1000413"  [label="AST: "];
"1000414" -> "1000433"  [label="CFG: "];
"1000433" -> "1000414"  [label="AST: "];
"1000436" -> "1000414"  [label="CFG: "];
"1000439" -> "1000414"  [label="CFG: "];
"1000414" -> "1001237"  [label="DDG: "];
"1000414" -> "1001237"  [label="DDG: "];
"1000414" -> "1001237"  [label="DDG: "];
"1000433" -> "1000414"  [label="DDG: "];
}
