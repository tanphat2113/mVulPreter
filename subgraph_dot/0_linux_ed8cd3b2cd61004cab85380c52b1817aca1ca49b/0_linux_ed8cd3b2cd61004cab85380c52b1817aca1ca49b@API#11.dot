digraph "0_linux_ed8cd3b2cd61004cab85380c52b1817aca1ca49b@API" {
"1000192" [label="(Call,sizeof(*exec2_list) * args->buffer_count)"];
"1000143" [label="(Call,sizeof(*exec2_list)*args->buffer_count)"];
"1000122" [label="(Call,args->buffer_count > UINT_MAX / sizeof(*exec2_list))"];
"1000117" [label="(Call,args->buffer_count < 1)"];
"1000126" [label="(Call,UINT_MAX / sizeof(*exec2_list))"];
"1000161" [label="(Call,drm_malloc_ab(sizeof(*exec2_list),\n\t\t\t\t\t   args->buffer_count))"];
"1000183" [label="(Call,copy_from_user(exec2_list,\n\t\t\t     (struct drm_i915_relocation_entry __user *)\n\t\t\t     (uintptr_t) args->buffers_ptr,\n\t\t\t     sizeof(*exec2_list) * args->buffer_count))"];
"1000181" [label="(Call,ret = copy_from_user(exec2_list,\n\t\t\t     (struct drm_i915_relocation_entry __user *)\n\t\t\t     (uintptr_t) args->buffers_ptr,\n\t\t\t     sizeof(*exec2_list) * args->buffer_count))"];
"1000200" [label="(Call,ret != 0)"];
"1000204" [label="(Call,DRM_DEBUG(\"copy %d exec entries failed %d\n\",\n\t\t\t  args->buffer_count, ret))"];
"1000210" [label="(Call,drm_free_large(exec2_list))"];
"1000217" [label="(Call,i915_gem_do_execbuffer(dev, data, file, args, exec2_list))"];
"1000215" [label="(Call,ret = i915_gem_do_execbuffer(dev, data, file, args, exec2_list))"];
"1000224" [label="(Call,!ret)"];
"1000260" [label="(Return,return ret;)"];
"1000229" [label="(Call,copy_to_user((struct drm_i915_relocation_entry __user *)\n\t\t\t\t   (uintptr_t) args->buffers_ptr,\n\t\t\t\t   exec2_list,\n\t\t\t\t   sizeof(*exec2_list) * args->buffer_count))"];
"1000227" [label="(Call,ret = copy_to_user((struct drm_i915_relocation_entry __user *)\n\t\t\t\t   (uintptr_t) args->buffers_ptr,\n\t\t\t\t   exec2_list,\n\t\t\t\t   sizeof(*exec2_list) * args->buffer_count))"];
"1000258" [label="(Call,drm_free_large(exec2_list))"];
"1000238" [label="(Call,sizeof(*exec2_list) * args->buffer_count)"];
"1000252" [label="(Call,DRM_DEBUG(\"failed to copy %d exec entries \"\n\t\t\t\t  \"back to user (%d)\n\",\n\t\t\t\t  args->buffer_count, ret))"];
"1000185" [label="(Call,(struct drm_i915_relocation_entry __user *)\n\t\t\t     (uintptr_t) args->buffers_ptr)"];
"1000217" [label="(Call,i915_gem_do_execbuffer(dev, data, file, args, exec2_list))"];
"1000226" [label="(Block,)"];
"1000246" [label="(Identifier,ret)"];
"1000224" [label="(Call,!ret)"];
"1000219" [label="(Identifier,data)"];
"1000104" [label="(MethodParameterIn,struct drm_file *file)"];
"1000103" [label="(MethodParameterIn,void *data)"];
"1000128" [label="(Call,sizeof(*exec2_list))"];
"1000116" [label="(Call,args->buffer_count < 1 ||\n\t    args->buffer_count > UINT_MAX / sizeof(*exec2_list))"];
"1000202" [label="(Literal,0)"];
"1000261" [label="(Identifier,ret)"];
"1000225" [label="(Identifier,ret)"];
"1000161" [label="(Call,drm_malloc_ab(sizeof(*exec2_list),\n\t\t\t\t\t   args->buffer_count))"];
"1000215" [label="(Call,ret = i915_gem_do_execbuffer(dev, data, file, args, exec2_list))"];
"1000142" [label="(Call,kmalloc(sizeof(*exec2_list)*args->buffer_count,\n\t\t\t     GFP_KERNEL | __GFP_NOWARN | __GFP_NORETRY))"];
"1000201" [label="(Identifier,ret)"];
"1000127" [label="(Identifier,UINT_MAX)"];
"1000132" [label="(Call,DRM_DEBUG(\"execbuf2 with %d buffers\n\", args->buffer_count))"];
"1000162" [label="(Call,sizeof(*exec2_list))"];
"1000257" [label="(Identifier,ret)"];
"1000122" [label="(Call,args->buffer_count > UINT_MAX / sizeof(*exec2_list))"];
"1000199" [label="(ControlStructure,if (ret != 0))"];
"1000204" [label="(Call,DRM_DEBUG(\"copy %d exec entries failed %d\n\",\n\t\t\t  args->buffer_count, ret))"];
"1000169" [label="(Call,exec2_list == NULL)"];
"1000214" [label="(Identifier,EFAULT)"];
"1000247" [label="(Block,)"];
"1000203" [label="(Block,)"];
"1000216" [label="(Identifier,ret)"];
"1000209" [label="(Identifier,ret)"];
"1000192" [label="(Call,sizeof(*exec2_list) * args->buffer_count)"];
"1000211" [label="(Identifier,exec2_list)"];
"1000107" [label="(Call,*args = data)"];
"1000229" [label="(Call,copy_to_user((struct drm_i915_relocation_entry __user *)\n\t\t\t\t   (uintptr_t) args->buffers_ptr,\n\t\t\t\t   exec2_list,\n\t\t\t\t   sizeof(*exec2_list) * args->buffer_count))"];
"1000165" [label="(Call,args->buffer_count)"];
"1000143" [label="(Call,sizeof(*exec2_list)*args->buffer_count)"];
"1000181" [label="(Call,ret = copy_from_user(exec2_list,\n\t\t\t     (struct drm_i915_relocation_entry __user *)\n\t\t\t     (uintptr_t) args->buffers_ptr,\n\t\t\t     sizeof(*exec2_list) * args->buffer_count))"];
"1000200" [label="(Call,ret != 0)"];
"1000242" [label="(Call,args->buffer_count)"];
"1000254" [label="(Call,args->buffer_count)"];
"1000205" [label="(Literal,\"copy %d exec entries failed %d\n\")"];
"1000196" [label="(Call,args->buffer_count)"];
"1000262" [label="(MethodReturn,RET)"];
"1000159" [label="(Call,exec2_list = drm_malloc_ab(sizeof(*exec2_list),\n\t\t\t\t\t   args->buffer_count))"];
"1000206" [label="(Call,args->buffer_count)"];
"1000210" [label="(Call,drm_free_large(exec2_list))"];
"1000230" [label="(Call,(struct drm_i915_relocation_entry __user *)\n\t\t\t\t   (uintptr_t) args->buffers_ptr)"];
"1000239" [label="(Call,sizeof(*exec2_list))"];
"1000121" [label="(Literal,1)"];
"1000258" [label="(Call,drm_free_large(exec2_list))"];
"1000102" [label="(MethodParameterIn,struct drm_device *dev)"];
"1000260" [label="(Return,return ret;)"];
"1000184" [label="(Identifier,exec2_list)"];
"1000182" [label="(Identifier,ret)"];
"1000222" [label="(Identifier,exec2_list)"];
"1000173" [label="(Call,DRM_DEBUG(\"Failed to allocate exec list for %d buffers\n\",\n\t\t\t  args->buffer_count))"];
"1000238" [label="(Call,sizeof(*exec2_list) * args->buffer_count)"];
"1000220" [label="(Identifier,file)"];
"1000227" [label="(Call,ret = copy_to_user((struct drm_i915_relocation_entry __user *)\n\t\t\t\t   (uintptr_t) args->buffers_ptr,\n\t\t\t\t   exec2_list,\n\t\t\t\t   sizeof(*exec2_list) * args->buffer_count))"];
"1000147" [label="(Call,args->buffer_count)"];
"1000151" [label="(Identifier,GFP_KERNEL)"];
"1000126" [label="(Call,UINT_MAX / sizeof(*exec2_list))"];
"1000218" [label="(Identifier,dev)"];
"1000183" [label="(Call,copy_from_user(exec2_list,\n\t\t\t     (struct drm_i915_relocation_entry __user *)\n\t\t\t     (uintptr_t) args->buffers_ptr,\n\t\t\t     sizeof(*exec2_list) * args->buffer_count))"];
"1000223" [label="(ControlStructure,if (!ret))"];
"1000193" [label="(Call,sizeof(*exec2_list))"];
"1000105" [label="(Block,)"];
"1000259" [label="(Identifier,exec2_list)"];
"1000221" [label="(Identifier,args)"];
"1000252" [label="(Call,DRM_DEBUG(\"failed to copy %d exec entries \"\n\t\t\t\t  \"back to user (%d)\n\",\n\t\t\t\t  args->buffer_count, ret))"];
"1000253" [label="(Literal,\"failed to copy %d exec entries \"\n\t\t\t\t  \"back to user (%d)\n\")"];
"1000228" [label="(Identifier,ret)"];
"1000118" [label="(Call,args->buffer_count)"];
"1000144" [label="(Call,sizeof(*exec2_list))"];
"1000237" [label="(Identifier,exec2_list)"];
"1000123" [label="(Call,args->buffer_count)"];
"1000124" [label="(Identifier,args)"];
"1000117" [label="(Call,args->buffer_count < 1)"];
"1000248" [label="(Call,ret = -EFAULT)"];
"1000192" -> "1000183"  [label="AST: "];
"1000192" -> "1000196"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000196" -> "1000192"  [label="AST: "];
"1000183" -> "1000192"  [label="CFG: "];
"1000192" -> "1000262"  [label="DDG: "];
"1000192" -> "1000183"  [label="DDG: "];
"1000143" -> "1000192"  [label="DDG: "];
"1000161" -> "1000192"  [label="DDG: "];
"1000192" -> "1000204"  [label="DDG: "];
"1000192" -> "1000238"  [label="DDG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000147"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000147" -> "1000143"  [label="AST: "];
"1000151" -> "1000143"  [label="CFG: "];
"1000143" -> "1000142"  [label="DDG: "];
"1000122" -> "1000143"  [label="DDG: "];
"1000117" -> "1000143"  [label="DDG: "];
"1000143" -> "1000161"  [label="DDG: "];
"1000143" -> "1000173"  [label="DDG: "];
"1000122" -> "1000116"  [label="AST: "];
"1000122" -> "1000126"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000126" -> "1000122"  [label="AST: "];
"1000116" -> "1000122"  [label="CFG: "];
"1000122" -> "1000262"  [label="DDG: "];
"1000122" -> "1000116"  [label="DDG: "];
"1000122" -> "1000116"  [label="DDG: "];
"1000117" -> "1000122"  [label="DDG: "];
"1000126" -> "1000122"  [label="DDG: "];
"1000122" -> "1000132"  [label="DDG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1000121"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000121" -> "1000117"  [label="AST: "];
"1000124" -> "1000117"  [label="CFG: "];
"1000116" -> "1000117"  [label="CFG: "];
"1000117" -> "1000116"  [label="DDG: "];
"1000117" -> "1000116"  [label="DDG: "];
"1000117" -> "1000132"  [label="DDG: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000128" -> "1000126"  [label="AST: "];
"1000126" -> "1000262"  [label="DDG: "];
"1000161" -> "1000159"  [label="AST: "];
"1000161" -> "1000165"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000165" -> "1000161"  [label="AST: "];
"1000159" -> "1000161"  [label="CFG: "];
"1000161" -> "1000159"  [label="DDG: "];
"1000161" -> "1000173"  [label="DDG: "];
"1000183" -> "1000181"  [label="AST: "];
"1000184" -> "1000183"  [label="AST: "];
"1000185" -> "1000183"  [label="AST: "];
"1000181" -> "1000183"  [label="CFG: "];
"1000183" -> "1000262"  [label="DDG: "];
"1000183" -> "1000262"  [label="DDG: "];
"1000183" -> "1000181"  [label="DDG: "];
"1000183" -> "1000181"  [label="DDG: "];
"1000183" -> "1000181"  [label="DDG: "];
"1000169" -> "1000183"  [label="DDG: "];
"1000185" -> "1000183"  [label="DDG: "];
"1000183" -> "1000210"  [label="DDG: "];
"1000183" -> "1000217"  [label="DDG: "];
"1000181" -> "1000105"  [label="AST: "];
"1000182" -> "1000181"  [label="AST: "];
"1000201" -> "1000181"  [label="CFG: "];
"1000181" -> "1000262"  [label="DDG: "];
"1000181" -> "1000200"  [label="DDG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000200" -> "1000202"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000202" -> "1000200"  [label="AST: "];
"1000205" -> "1000200"  [label="CFG: "];
"1000216" -> "1000200"  [label="CFG: "];
"1000200" -> "1000262"  [label="DDG: "];
"1000200" -> "1000204"  [label="DDG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000204" -> "1000209"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000206" -> "1000204"  [label="AST: "];
"1000209" -> "1000204"  [label="AST: "];
"1000211" -> "1000204"  [label="CFG: "];
"1000204" -> "1000262"  [label="DDG: "];
"1000204" -> "1000262"  [label="DDG: "];
"1000204" -> "1000262"  [label="DDG: "];
"1000210" -> "1000203"  [label="AST: "];
"1000210" -> "1000211"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000214" -> "1000210"  [label="CFG: "];
"1000210" -> "1000262"  [label="DDG: "];
"1000210" -> "1000262"  [label="DDG: "];
"1000217" -> "1000215"  [label="AST: "];
"1000217" -> "1000222"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000219" -> "1000217"  [label="AST: "];
"1000220" -> "1000217"  [label="AST: "];
"1000221" -> "1000217"  [label="AST: "];
"1000222" -> "1000217"  [label="AST: "];
"1000215" -> "1000217"  [label="CFG: "];
"1000217" -> "1000262"  [label="DDG: "];
"1000217" -> "1000262"  [label="DDG: "];
"1000217" -> "1000262"  [label="DDG: "];
"1000217" -> "1000262"  [label="DDG: "];
"1000217" -> "1000215"  [label="DDG: "];
"1000217" -> "1000215"  [label="DDG: "];
"1000217" -> "1000215"  [label="DDG: "];
"1000217" -> "1000215"  [label="DDG: "];
"1000217" -> "1000215"  [label="DDG: "];
"1000102" -> "1000217"  [label="DDG: "];
"1000103" -> "1000217"  [label="DDG: "];
"1000104" -> "1000217"  [label="DDG: "];
"1000107" -> "1000217"  [label="DDG: "];
"1000217" -> "1000229"  [label="DDG: "];
"1000217" -> "1000258"  [label="DDG: "];
"1000215" -> "1000105"  [label="AST: "];
"1000216" -> "1000215"  [label="AST: "];
"1000225" -> "1000215"  [label="CFG: "];
"1000215" -> "1000262"  [label="DDG: "];
"1000215" -> "1000224"  [label="DDG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000224" -> "1000225"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000228" -> "1000224"  [label="CFG: "];
"1000259" -> "1000224"  [label="CFG: "];
"1000224" -> "1000262"  [label="DDG: "];
"1000224" -> "1000262"  [label="DDG: "];
"1000224" -> "1000260"  [label="DDG: "];
"1000260" -> "1000105"  [label="AST: "];
"1000260" -> "1000261"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000262" -> "1000260"  [label="CFG: "];
"1000260" -> "1000262"  [label="DDG: "];
"1000261" -> "1000260"  [label="DDG: "];
"1000227" -> "1000260"  [label="DDG: "];
"1000252" -> "1000260"  [label="DDG: "];
"1000229" -> "1000227"  [label="AST: "];
"1000229" -> "1000238"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000237" -> "1000229"  [label="AST: "];
"1000238" -> "1000229"  [label="AST: "];
"1000227" -> "1000229"  [label="CFG: "];
"1000229" -> "1000262"  [label="DDG: "];
"1000229" -> "1000262"  [label="DDG: "];
"1000229" -> "1000227"  [label="DDG: "];
"1000229" -> "1000227"  [label="DDG: "];
"1000229" -> "1000227"  [label="DDG: "];
"1000230" -> "1000229"  [label="DDG: "];
"1000238" -> "1000229"  [label="DDG: "];
"1000229" -> "1000258"  [label="DDG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000228" -> "1000227"  [label="AST: "];
"1000246" -> "1000227"  [label="CFG: "];
"1000227" -> "1000262"  [label="DDG: "];
"1000227" -> "1000262"  [label="DDG: "];
"1000258" -> "1000105"  [label="AST: "];
"1000258" -> "1000259"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000261" -> "1000258"  [label="CFG: "];
"1000258" -> "1000262"  [label="DDG: "];
"1000258" -> "1000262"  [label="DDG: "];
"1000238" -> "1000242"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000242" -> "1000238"  [label="AST: "];
"1000238" -> "1000262"  [label="DDG: "];
"1000238" -> "1000252"  [label="DDG: "];
"1000252" -> "1000247"  [label="AST: "];
"1000252" -> "1000257"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000254" -> "1000252"  [label="AST: "];
"1000257" -> "1000252"  [label="AST: "];
"1000259" -> "1000252"  [label="CFG: "];
"1000252" -> "1000262"  [label="DDG: "];
"1000252" -> "1000262"  [label="DDG: "];
"1000252" -> "1000262"  [label="DDG: "];
"1000248" -> "1000252"  [label="DDG: "];
}
