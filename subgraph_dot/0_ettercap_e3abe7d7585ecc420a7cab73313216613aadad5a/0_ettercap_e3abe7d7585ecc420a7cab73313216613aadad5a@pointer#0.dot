digraph "0_ettercap_e3abe7d7585ecc420a7cab73313216613aadad5a@pointer" {
"1000324" [label="(Call,memcpy(conn_status->hash, ptr + 5 + 3, 32))"];
"1000286" [label="(Call,ptr[0] == 'p')"];
"1000114" [label="(Call,DECLARE_DISP_PTR(ptr))"];
"1000341" [label="(Call,DISSECT_MSG(\"%s:$postgres$%s*%s*%s:%s:%d\n\", conn_status->user, conn_status->user, conn_status->salt, conn_status->hash, ip_addr_ntoa(&PACKET->L3.dst, tmp), ntohs(PACKET->L4.dst)))"];
"1000570" [label="(Call,ptr + 5)"];
"1000520" [label="(Call,ptr + 5)"];
"1000114" [label="(Call,DECLARE_DISP_PTR(ptr))"];
"1000285" [label="(Call,ptr[0] == 'p' && conn_status->type == MD5)"];
"1000592" [label="(MethodReturn,RET)"];
"1000118" [label="(Identifier,s)"];
"1000324" [label="(Call,memcpy(conn_status->hash, ptr + 5 + 3, 32))"];
"1000390" [label="(Call,GET_ULONG_BE(length, ptr, 1))"];
"1000342" [label="(Literal,\"%s:$postgres$%s*%s*%s:%s:%d\n\")"];
"1000296" [label="(Block,)"];
"1000286" [label="(Call,ptr[0] == 'p')"];
"1000343" [label="(Call,conn_status->user)"];
"1000115" [label="(Identifier,ptr)"];
"1000513" [label="(Call,ptr + 1)"];
"1000569" [label="(Call,memcmp(ptr + 5, \"\x00\x00\x00\x03\", 4))"];
"1000333" [label="(Literal,32)"];
"1000337" [label="(Identifier,conn_status)"];
"1000505" [label="(Call,ptr[0] == 'R')"];
"1000341" [label="(Call,DISSECT_MSG(\"%s:$postgres$%s*%s*%s:%s:%d\n\", conn_status->user, conn_status->user, conn_status->salt, conn_status->hash, ip_addr_ntoa(&PACKET->L3.dst, tmp), ntohs(PACKET->L4.dst)))"];
"1000328" [label="(Call,ptr + 5 + 3)"];
"1000363" [label="(Call,ntohs(PACKET->L4.dst))"];
"1000376" [label="(Call,ptr[0] == 'p')"];
"1000555" [label="(Call,ptr[0] == 'R')"];
"1000370" [label="(Identifier,PACKET)"];
"1000301" [label="(Call,ptr + 1)"];
"1000290" [label="(Literal,'p')"];
"1000352" [label="(Call,conn_status->hash)"];
"1000519" [label="(Call,memcmp(ptr + 5, \"\x00\x00\x00\x05\", 4))"];
"1000346" [label="(Call,conn_status->user)"];
"1000349" [label="(Call,conn_status->salt)"];
"1000113" [label="(Block,)"];
"1000300" [label="(Call,memcmp(ptr + 1, \"\x00\x00\x00\x28\", 4))"];
"1000287" [label="(Call,ptr[0])"];
"1000293" [label="(Identifier,conn_status)"];
"1000538" [label="(Call,hex_encode(ptr + 9, 4, conn_status->salt))"];
"1000539" [label="(Call,ptr + 9)"];
"1000325" [label="(Call,conn_status->hash)"];
"1000334" [label="(Call,conn_status->hash[32] = 0)"];
"1000355" [label="(Call,ip_addr_ntoa(&PACKET->L3.dst, tmp))"];
"1000562" [label="(Call,memcmp(ptr + 1, \"\x00\x00\x00\x08\", 4))"];
"1000563" [label="(Call,ptr + 1)"];
"1000512" [label="(Call,memcmp(ptr + 1, \"\x00\x00\x00\x0c\", 4))"];
"1000169" [label="(Call,memmem(ptr, PACKET->DATA.len, \"user\", 4))"];
"1000324" -> "1000296"  [label="AST: "];
"1000324" -> "1000333"  [label="CFG: "];
"1000325" -> "1000324"  [label="AST: "];
"1000328" -> "1000324"  [label="AST: "];
"1000333" -> "1000324"  [label="AST: "];
"1000337" -> "1000324"  [label="CFG: "];
"1000324" -> "1000592"  [label="DDG: "];
"1000324" -> "1000592"  [label="DDG: "];
"1000286" -> "1000324"  [label="DDG: "];
"1000114" -> "1000324"  [label="DDG: "];
"1000324" -> "1000341"  [label="DDG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000286" -> "1000290"  [label="CFG: "];
"1000287" -> "1000286"  [label="AST: "];
"1000290" -> "1000286"  [label="AST: "];
"1000293" -> "1000286"  [label="CFG: "];
"1000285" -> "1000286"  [label="CFG: "];
"1000286" -> "1000592"  [label="DDG: "];
"1000286" -> "1000285"  [label="DDG: "];
"1000286" -> "1000285"  [label="DDG: "];
"1000114" -> "1000286"  [label="DDG: "];
"1000286" -> "1000300"  [label="DDG: "];
"1000286" -> "1000301"  [label="DDG: "];
"1000286" -> "1000328"  [label="DDG: "];
"1000286" -> "1000376"  [label="DDG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000115"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000118" -> "1000114"  [label="CFG: "];
"1000114" -> "1000592"  [label="DDG: "];
"1000114" -> "1000592"  [label="DDG: "];
"1000114" -> "1000169"  [label="DDG: "];
"1000114" -> "1000300"  [label="DDG: "];
"1000114" -> "1000301"  [label="DDG: "];
"1000114" -> "1000328"  [label="DDG: "];
"1000114" -> "1000376"  [label="DDG: "];
"1000114" -> "1000390"  [label="DDG: "];
"1000114" -> "1000505"  [label="DDG: "];
"1000114" -> "1000512"  [label="DDG: "];
"1000114" -> "1000513"  [label="DDG: "];
"1000114" -> "1000519"  [label="DDG: "];
"1000114" -> "1000520"  [label="DDG: "];
"1000114" -> "1000538"  [label="DDG: "];
"1000114" -> "1000539"  [label="DDG: "];
"1000114" -> "1000555"  [label="DDG: "];
"1000114" -> "1000562"  [label="DDG: "];
"1000114" -> "1000563"  [label="DDG: "];
"1000114" -> "1000569"  [label="DDG: "];
"1000114" -> "1000570"  [label="DDG: "];
"1000341" -> "1000296"  [label="AST: "];
"1000341" -> "1000363"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="AST: "];
"1000346" -> "1000341"  [label="AST: "];
"1000349" -> "1000341"  [label="AST: "];
"1000352" -> "1000341"  [label="AST: "];
"1000355" -> "1000341"  [label="AST: "];
"1000363" -> "1000341"  [label="AST: "];
"1000370" -> "1000341"  [label="CFG: "];
"1000341" -> "1000592"  [label="DDG: "];
"1000341" -> "1000592"  [label="DDG: "];
"1000341" -> "1000592"  [label="DDG: "];
"1000341" -> "1000592"  [label="DDG: "];
"1000341" -> "1000592"  [label="DDG: "];
"1000341" -> "1000592"  [label="DDG: "];
"1000334" -> "1000341"  [label="DDG: "];
"1000355" -> "1000341"  [label="DDG: "];
"1000355" -> "1000341"  [label="DDG: "];
"1000363" -> "1000341"  [label="DDG: "];
}
