digraph "0_ettercap_e3abe7d7585ecc420a7cab73313216613aadad5a@API" {
"1000291" [label="(Call,conn_status->type == MD5)"];
"1000285" [label="(Call,ptr[0] == 'p' && conn_status->type == MD5)"];
"1000381" [label="(Call,conn_status->type == CT)"];
"1000375" [label="(Call,ptr[0] == 'p' && conn_status->type == CT)"];
"1000295" [label="(Identifier,MD5)"];
"1000286" [label="(Call,ptr[0] == 'p')"];
"1000374" [label="(ControlStructure,if (ptr[0] == 'p' && conn_status->type == CT))"];
"1000385" [label="(Identifier,CT)"];
"1000381" [label="(Call,conn_status->type == CT)"];
"1000378" [label="(Identifier,ptr)"];
"1000375" [label="(Call,ptr[0] == 'p' && conn_status->type == CT)"];
"1000382" [label="(Call,conn_status->type)"];
"1000376" [label="(Call,ptr[0] == 'p')"];
"1000389" [label="(Literal,\"\tDissector_postgresql RESPONSE type is clear-text!\")"];
"1000292" [label="(Call,conn_status->type)"];
"1000285" [label="(Call,ptr[0] == 'p' && conn_status->type == MD5)"];
"1000291" [label="(Call,conn_status->type == MD5)"];
"1000592" [label="(MethodReturn,RET)"];
"1000284" [label="(ControlStructure,if (ptr[0] == 'p' && conn_status->type == MD5))"];
"1000589" [label="(Identifier,ident)"];
"1000298" [label="(Literal,\"\tDissector_postgresql RESPONSE type is MD5\")"];
"1000291" -> "1000285"  [label="AST: "];
"1000291" -> "1000295"  [label="CFG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000295" -> "1000291"  [label="AST: "];
"1000285" -> "1000291"  [label="CFG: "];
"1000291" -> "1000592"  [label="DDG: conn_status->type"];
"1000291" -> "1000592"  [label="DDG: MD5"];
"1000291" -> "1000285"  [label="DDG: conn_status->type"];
"1000291" -> "1000285"  [label="DDG: MD5"];
"1000291" -> "1000381"  [label="DDG: conn_status->type"];
"1000285" -> "1000284"  [label="AST: "];
"1000285" -> "1000286"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000298" -> "1000285"  [label="CFG: "];
"1000378" -> "1000285"  [label="CFG: "];
"1000285" -> "1000592"  [label="DDG: ptr[0] == 'p'"];
"1000285" -> "1000592"  [label="DDG: conn_status->type == MD5"];
"1000285" -> "1000592"  [label="DDG: ptr[0] == 'p' && conn_status->type == MD5"];
"1000286" -> "1000285"  [label="DDG: ptr[0]"];
"1000286" -> "1000285"  [label="DDG: 'p'"];
"1000381" -> "1000375"  [label="AST: "];
"1000381" -> "1000385"  [label="CFG: "];
"1000382" -> "1000381"  [label="AST: "];
"1000385" -> "1000381"  [label="AST: "];
"1000375" -> "1000381"  [label="CFG: "];
"1000381" -> "1000592"  [label="DDG: conn_status->type"];
"1000381" -> "1000592"  [label="DDG: CT"];
"1000381" -> "1000375"  [label="DDG: conn_status->type"];
"1000381" -> "1000375"  [label="DDG: CT"];
"1000375" -> "1000374"  [label="AST: "];
"1000375" -> "1000376"  [label="CFG: "];
"1000376" -> "1000375"  [label="AST: "];
"1000389" -> "1000375"  [label="CFG: "];
"1000589" -> "1000375"  [label="CFG: "];
"1000375" -> "1000592"  [label="DDG: ptr[0] == 'p'"];
"1000375" -> "1000592"  [label="DDG: ptr[0] == 'p' && conn_status->type == CT"];
"1000375" -> "1000592"  [label="DDG: conn_status->type == CT"];
"1000376" -> "1000375"  [label="DDG: ptr[0]"];
"1000376" -> "1000375"  [label="DDG: 'p'"];
}
