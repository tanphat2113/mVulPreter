digraph "0_Android_295c883fe3105b19bcd0f9e07d54c6b589fc5bff@API" {
"1000191" [label="(Call,*name = data.readCString())"];
"1000206" [label="(Call,allocateNode(name, observer, &node))"];
"1000204" [label="(Call,err = allocateNode(name, observer, &node))"];
"1000211" [label="(Call,reply->writeInt32(err))"];
"1000214" [label="(Call,err == OK)"];
"1000205" [label="(Identifier,err)"];
"1000195" [label="(Call,observer =\n                interface_cast<IOMXObserver>(data.readStrongBinder()))"];
"1000185" [label="(Block,)"];
"1001214" [label="(MethodReturn,status_t)"];
"1000193" [label="(Call,data.readCString())"];
"1000208" [label="(Identifier,observer)"];
"1000196" [label="(Identifier,observer)"];
"1000216" [label="(Identifier,OK)"];
"1000211" [label="(Call,reply->writeInt32(err))"];
"1000206" [label="(Call,allocateNode(name, observer, &node))"];
"1000192" [label="(Identifier,name)"];
"1000209" [label="(Call,&node)"];
"1000213" [label="(ControlStructure,if (err == OK))"];
"1000204" [label="(Call,err = allocateNode(name, observer, &node))"];
"1000212" [label="(Identifier,err)"];
"1000207" [label="(Identifier,name)"];
"1000215" [label="(Identifier,err)"];
"1000191" [label="(Call,*name = data.readCString())"];
"1000223" [label="(Identifier,NO_ERROR)"];
"1000214" [label="(Call,err == OK)"];
"1000191" -> "1000185"  [label="AST: "];
"1000191" -> "1000193"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000193" -> "1000191"  [label="AST: "];
"1000196" -> "1000191"  [label="CFG: "];
"1000191" -> "1001214"  [label="DDG: data.readCString()"];
"1000191" -> "1000206"  [label="DDG: name"];
"1000206" -> "1000204"  [label="AST: "];
"1000206" -> "1000209"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000206"  [label="AST: "];
"1000209" -> "1000206"  [label="AST: "];
"1000204" -> "1000206"  [label="CFG: "];
"1000206" -> "1001214"  [label="DDG: &node"];
"1000206" -> "1001214"  [label="DDG: observer"];
"1000206" -> "1001214"  [label="DDG: name"];
"1000206" -> "1000204"  [label="DDG: name"];
"1000206" -> "1000204"  [label="DDG: observer"];
"1000206" -> "1000204"  [label="DDG: &node"];
"1000195" -> "1000206"  [label="DDG: observer"];
"1000204" -> "1000185"  [label="AST: "];
"1000205" -> "1000204"  [label="AST: "];
"1000212" -> "1000204"  [label="CFG: "];
"1000204" -> "1001214"  [label="DDG: allocateNode(name, observer, &node)"];
"1000204" -> "1000211"  [label="DDG: err"];
"1000211" -> "1000185"  [label="AST: "];
"1000211" -> "1000212"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000215" -> "1000211"  [label="CFG: "];
"1000211" -> "1001214"  [label="DDG: reply->writeInt32(err)"];
"1000211" -> "1000214"  [label="DDG: err"];
"1000214" -> "1000213"  [label="AST: "];
"1000214" -> "1000216"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000216" -> "1000214"  [label="AST: "];
"1000220" -> "1000214"  [label="CFG: "];
"1000223" -> "1000214"  [label="CFG: "];
"1000214" -> "1001214"  [label="DDG: OK"];
"1000214" -> "1001214"  [label="DDG: err == OK"];
"1000214" -> "1001214"  [label="DDG: err"];
}
