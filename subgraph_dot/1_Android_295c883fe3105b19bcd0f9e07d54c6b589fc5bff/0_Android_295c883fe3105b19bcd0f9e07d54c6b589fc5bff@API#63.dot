digraph "0_Android_295c883fe3105b19bcd0f9e07d54c6b589fc5bff@API" {
"1000516" [label="(Call,port_index = data.readInt32())"];
"1000535" [label="(Call,useBuffer(node, port_index, params, &buffer, allottedSize))"];
"1000533" [label="(Call,err = useBuffer(node, port_index, params, &buffer, allottedSize))"];
"1000542" [label="(Call,reply->writeInt32(err))"];
"1000545" [label="(Call,err == OK)"];
"1001214" [label="(MethodReturn,status_t)"];
"1000528" [label="(Call,allottedSize = data.readInt32())"];
"1000533" [label="(Call,err = useBuffer(node, port_index, params, &buffer, allottedSize))"];
"1000516" [label="(Call,port_index = data.readInt32())"];
"1000504" [label="(Block,)"];
"1000542" [label="(Call,reply->writeInt32(err))"];
"1000520" [label="(Call,params =\n                interface_cast<IMemory>(data.readStrongBinder()))"];
"1000518" [label="(Call,data.readInt32())"];
"1000538" [label="(Identifier,params)"];
"1000543" [label="(Identifier,err)"];
"1000521" [label="(Identifier,params)"];
"1000541" [label="(Identifier,allottedSize)"];
"1000544" [label="(ControlStructure,if (err == OK))"];
"1000510" [label="(Call,node = (node_id)data.readInt32())"];
"1000517" [label="(Identifier,port_index)"];
"1000537" [label="(Identifier,port_index)"];
"1000545" [label="(Call,err == OK)"];
"1000546" [label="(Identifier,err)"];
"1000536" [label="(Identifier,node)"];
"1000535" [label="(Call,useBuffer(node, port_index, params, &buffer, allottedSize))"];
"1000534" [label="(Identifier,err)"];
"1000554" [label="(Identifier,NO_ERROR)"];
"1000547" [label="(Identifier,OK)"];
"1000539" [label="(Call,&buffer)"];
"1000516" -> "1000504"  [label="AST: "];
"1000516" -> "1000518"  [label="CFG: "];
"1000517" -> "1000516"  [label="AST: "];
"1000518" -> "1000516"  [label="AST: "];
"1000521" -> "1000516"  [label="CFG: "];
"1000516" -> "1000535"  [label="DDG: port_index"];
"1000535" -> "1000533"  [label="AST: "];
"1000535" -> "1000541"  [label="CFG: "];
"1000536" -> "1000535"  [label="AST: "];
"1000537" -> "1000535"  [label="AST: "];
"1000538" -> "1000535"  [label="AST: "];
"1000539" -> "1000535"  [label="AST: "];
"1000541" -> "1000535"  [label="AST: "];
"1000533" -> "1000535"  [label="CFG: "];
"1000535" -> "1001214"  [label="DDG: node"];
"1000535" -> "1001214"  [label="DDG: &buffer"];
"1000535" -> "1001214"  [label="DDG: params"];
"1000535" -> "1001214"  [label="DDG: port_index"];
"1000535" -> "1001214"  [label="DDG: allottedSize"];
"1000535" -> "1000533"  [label="DDG: node"];
"1000535" -> "1000533"  [label="DDG: port_index"];
"1000535" -> "1000533"  [label="DDG: &buffer"];
"1000535" -> "1000533"  [label="DDG: params"];
"1000535" -> "1000533"  [label="DDG: allottedSize"];
"1000510" -> "1000535"  [label="DDG: node"];
"1000520" -> "1000535"  [label="DDG: params"];
"1000528" -> "1000535"  [label="DDG: allottedSize"];
"1000533" -> "1000504"  [label="AST: "];
"1000534" -> "1000533"  [label="AST: "];
"1000543" -> "1000533"  [label="CFG: "];
"1000533" -> "1001214"  [label="DDG: useBuffer(node, port_index, params, &buffer, allottedSize)"];
"1000533" -> "1000542"  [label="DDG: err"];
"1000542" -> "1000504"  [label="AST: "];
"1000542" -> "1000543"  [label="CFG: "];
"1000543" -> "1000542"  [label="AST: "];
"1000546" -> "1000542"  [label="CFG: "];
"1000542" -> "1001214"  [label="DDG: reply->writeInt32(err)"];
"1000542" -> "1000545"  [label="DDG: err"];
"1000545" -> "1000544"  [label="AST: "];
"1000545" -> "1000547"  [label="CFG: "];
"1000546" -> "1000545"  [label="AST: "];
"1000547" -> "1000545"  [label="AST: "];
"1000551" -> "1000545"  [label="CFG: "];
"1000554" -> "1000545"  [label="CFG: "];
"1000545" -> "1001214"  [label="DDG: err"];
"1000545" -> "1001214"  [label="DDG: err == OK"];
"1000545" -> "1001214"  [label="DDG: OK"];
}
