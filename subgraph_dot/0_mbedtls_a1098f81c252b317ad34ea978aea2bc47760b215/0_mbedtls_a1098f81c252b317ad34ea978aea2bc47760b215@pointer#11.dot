digraph "0_mbedtls_a1098f81c252b317ad34ea978aea2bc47760b215@pointer" {
"1000724" [label="(Call,mbedtls_pk_verify( &ssl->session_negotiate->peer_cert->pk,\n                               md_alg, hash, hashlen, p, sig_len ))"];
"1000700" [label="(Call,mbedtls_pk_can_do( &ssl->session_negotiate->peer_cert->pk, pk_alg ))"];
"1000678" [label="(Call,mbedtls_md_info_from_type( md_alg ))"];
"1000666" [label="(Call,MBEDTLS_SSL_DEBUG_BUF( 3, \"parameters hash\", hash, hashlen != 0 ? hashlen :\n            (unsigned int) ( mbedtls_md_get_size( mbedtls_md_info_from_type( md_alg ) ) ) ))"];
"1000671" [label="(Call,hashlen != 0)"];
"1000675" [label="(Call,(unsigned int) ( mbedtls_md_get_size( mbedtls_md_info_from_type( md_alg ) ) ))"];
"1000677" [label="(Call,mbedtls_md_get_size( mbedtls_md_info_from_type( md_alg ) ))"];
"1000721" [label="(Call,( ret = mbedtls_pk_verify( &ssl->session_negotiate->peer_cert->pk,\n                               md_alg, hash, hashlen, p, sig_len ) ) != 0)"];
"1000722" [label="(Call,ret = mbedtls_pk_verify( &ssl->session_negotiate->peer_cert->pk,\n                               md_alg, hash, hashlen, p, sig_len ))"];
"1000744" [label="(Call,MBEDTLS_SSL_DEBUG_RET( 1, \"mbedtls_pk_verify\", ret ))"];
"1000748" [label="(Return,return( ret );)"];
"1000723" [label="(Identifier,ret)"];
"1000733" [label="(Identifier,md_alg)"];
"1000670" [label="(Call,hashlen != 0 ? hashlen :\n            (unsigned int) ( mbedtls_md_get_size( mbedtls_md_info_from_type( md_alg ) ) ))"];
"1000739" [label="(Block,)"];
"1000671" [label="(Call,hashlen != 0)"];
"1000668" [label="(Literal,\"parameters hash\")"];
"1000678" [label="(Call,mbedtls_md_info_from_type( md_alg ))"];
"1000735" [label="(Identifier,hashlen)"];
"1000673" [label="(Literal,0)"];
"1000744" [label="(Call,MBEDTLS_SSL_DEBUG_RET( 1, \"mbedtls_pk_verify\", ret ))"];
"1000721" [label="(Call,( ret = mbedtls_pk_verify( &ssl->session_negotiate->peer_cert->pk,\n                               md_alg, hash, hashlen, p, sig_len ) ) != 0)"];
"1000738" [label="(Literal,0)"];
"1000701" [label="(Call,&ssl->session_negotiate->peer_cert->pk)"];
"1000749" [label="(Identifier,ret)"];
"1000666" [label="(Call,MBEDTLS_SSL_DEBUG_BUF( 3, \"parameters hash\", hash, hashlen != 0 ? hashlen :\n            (unsigned int) ( mbedtls_md_get_size( mbedtls_md_info_from_type( md_alg ) ) ) ))"];
"1000747" [label="(Identifier,ret)"];
"1000667" [label="(Literal,3)"];
"1000736" [label="(Identifier,p)"];
"1000746" [label="(Literal,\"mbedtls_pk_verify\")"];
"1000748" [label="(Return,return( ret );)"];
"1000679" [label="(Identifier,md_alg)"];
"1000737" [label="(Identifier,sig_len)"];
"1000463" [label="(Block,)"];
"1000750" [label="(JumpTarget,exit:)"];
"1000699" [label="(Call,! mbedtls_pk_can_do( &ssl->session_negotiate->peer_cert->pk, pk_alg ))"];
"1000720" [label="(ControlStructure,if( ( ret = mbedtls_pk_verify( &ssl->session_negotiate->peer_cert->pk,\n                               md_alg, hash, hashlen, p, sig_len ) ) != 0 ))"];
"1000684" [label="(Identifier,ssl)"];
"1000734" [label="(Identifier,hash)"];
"1000674" [label="(Identifier,hashlen)"];
"1000700" [label="(Call,mbedtls_pk_can_do( &ssl->session_negotiate->peer_cert->pk, pk_alg ))"];
"1000725" [label="(Call,&ssl->session_negotiate->peer_cert->pk)"];
"1000745" [label="(Literal,1)"];
"1000669" [label="(Identifier,hash)"];
"1000724" [label="(Call,mbedtls_pk_verify( &ssl->session_negotiate->peer_cert->pk,\n                               md_alg, hash, hashlen, p, sig_len ))"];
"1000760" [label="(MethodReturn,static int)"];
"1000722" [label="(Call,ret = mbedtls_pk_verify( &ssl->session_negotiate->peer_cert->pk,\n                               md_alg, hash, hashlen, p, sig_len ))"];
"1000672" [label="(Identifier,hashlen)"];
"1000709" [label="(Identifier,pk_alg)"];
"1000677" [label="(Call,mbedtls_md_get_size( mbedtls_md_info_from_type( md_alg ) ))"];
"1000741" [label="(Identifier,ssl)"];
"1000675" [label="(Call,(unsigned int) ( mbedtls_md_get_size( mbedtls_md_info_from_type( md_alg ) ) ))"];
"1000724" -> "1000722"  [label="AST: "];
"1000724" -> "1000737"  [label="CFG: "];
"1000725" -> "1000724"  [label="AST: "];
"1000733" -> "1000724"  [label="AST: "];
"1000734" -> "1000724"  [label="AST: "];
"1000735" -> "1000724"  [label="AST: "];
"1000736" -> "1000724"  [label="AST: "];
"1000737" -> "1000724"  [label="AST: "];
"1000722" -> "1000724"  [label="CFG: "];
"1000724" -> "1000760"  [label="DDG: "];
"1000724" -> "1000760"  [label="DDG: "];
"1000724" -> "1000760"  [label="DDG: "];
"1000724" -> "1000760"  [label="DDG: "];
"1000724" -> "1000760"  [label="DDG: "];
"1000724" -> "1000760"  [label="DDG: "];
"1000724" -> "1000721"  [label="DDG: "];
"1000724" -> "1000721"  [label="DDG: "];
"1000724" -> "1000721"  [label="DDG: "];
"1000724" -> "1000721"  [label="DDG: "];
"1000724" -> "1000721"  [label="DDG: "];
"1000724" -> "1000721"  [label="DDG: "];
"1000724" -> "1000722"  [label="DDG: "];
"1000724" -> "1000722"  [label="DDG: "];
"1000724" -> "1000722"  [label="DDG: "];
"1000724" -> "1000722"  [label="DDG: "];
"1000724" -> "1000722"  [label="DDG: "];
"1000724" -> "1000722"  [label="DDG: "];
"1000700" -> "1000724"  [label="DDG: "];
"1000678" -> "1000724"  [label="DDG: "];
"1000666" -> "1000724"  [label="DDG: "];
"1000671" -> "1000724"  [label="DDG: "];
"1000700" -> "1000699"  [label="AST: "];
"1000700" -> "1000709"  [label="CFG: "];
"1000701" -> "1000700"  [label="AST: "];
"1000709" -> "1000700"  [label="AST: "];
"1000699" -> "1000700"  [label="CFG: "];
"1000700" -> "1000760"  [label="DDG: "];
"1000700" -> "1000760"  [label="DDG: "];
"1000700" -> "1000699"  [label="DDG: "];
"1000700" -> "1000699"  [label="DDG: "];
"1000678" -> "1000677"  [label="AST: "];
"1000678" -> "1000679"  [label="CFG: "];
"1000679" -> "1000678"  [label="AST: "];
"1000677" -> "1000678"  [label="CFG: "];
"1000678" -> "1000760"  [label="DDG: "];
"1000678" -> "1000677"  [label="DDG: "];
"1000666" -> "1000463"  [label="AST: "];
"1000666" -> "1000670"  [label="CFG: "];
"1000667" -> "1000666"  [label="AST: "];
"1000668" -> "1000666"  [label="AST: "];
"1000669" -> "1000666"  [label="AST: "];
"1000670" -> "1000666"  [label="AST: "];
"1000684" -> "1000666"  [label="CFG: "];
"1000666" -> "1000760"  [label="DDG: "];
"1000666" -> "1000760"  [label="DDG: "];
"1000666" -> "1000760"  [label="DDG: "];
"1000671" -> "1000666"  [label="DDG: "];
"1000675" -> "1000666"  [label="DDG: "];
"1000671" -> "1000670"  [label="AST: "];
"1000671" -> "1000673"  [label="CFG: "];
"1000672" -> "1000671"  [label="AST: "];
"1000673" -> "1000671"  [label="AST: "];
"1000674" -> "1000671"  [label="CFG: "];
"1000676" -> "1000671"  [label="CFG: "];
"1000671" -> "1000670"  [label="DDG: "];
"1000675" -> "1000670"  [label="AST: "];
"1000675" -> "1000677"  [label="CFG: "];
"1000676" -> "1000675"  [label="AST: "];
"1000677" -> "1000675"  [label="AST: "];
"1000670" -> "1000675"  [label="CFG: "];
"1000675" -> "1000760"  [label="DDG: "];
"1000675" -> "1000670"  [label="DDG: "];
"1000677" -> "1000675"  [label="DDG: "];
"1000677" -> "1000760"  [label="DDG: "];
"1000721" -> "1000720"  [label="AST: "];
"1000721" -> "1000738"  [label="CFG: "];
"1000722" -> "1000721"  [label="AST: "];
"1000738" -> "1000721"  [label="AST: "];
"1000741" -> "1000721"  [label="CFG: "];
"1000750" -> "1000721"  [label="CFG: "];
"1000721" -> "1000760"  [label="DDG: "];
"1000722" -> "1000721"  [label="DDG: "];
"1000723" -> "1000722"  [label="AST: "];
"1000738" -> "1000722"  [label="CFG: "];
"1000722" -> "1000760"  [label="DDG: "];
"1000722" -> "1000760"  [label="DDG: "];
"1000722" -> "1000744"  [label="DDG: "];
"1000744" -> "1000739"  [label="AST: "];
"1000744" -> "1000747"  [label="CFG: "];
"1000745" -> "1000744"  [label="AST: "];
"1000746" -> "1000744"  [label="AST: "];
"1000747" -> "1000744"  [label="AST: "];
"1000749" -> "1000744"  [label="CFG: "];
"1000744" -> "1000760"  [label="DDG: "];
"1000744" -> "1000760"  [label="DDG: "];
"1000744" -> "1000748"  [label="DDG: "];
"1000748" -> "1000739"  [label="AST: "];
"1000748" -> "1000749"  [label="CFG: "];
"1000749" -> "1000748"  [label="AST: "];
"1000760" -> "1000748"  [label="CFG: "];
"1000748" -> "1000760"  [label="DDG: "];
"1000749" -> "1000748"  [label="DDG: "];
}
