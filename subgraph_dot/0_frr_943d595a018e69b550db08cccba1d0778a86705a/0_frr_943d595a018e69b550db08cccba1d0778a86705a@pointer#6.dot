digraph "0_frr_943d595a018e69b550db08cccba1d0778a86705a@pointer" {
"1000339" [label="(Call,BGP_INPUT(peer))"];
"1000328" [label="(Call,BGP_INPUT(peer))"];
"1000293" [label="(Call,BGP_INPUT_PNT(peer))"];
"1000261" [label="(Call,BGP_INPUT(peer))"];
"1000220" [label="(Call,BGP_INPUT(peer))"];
"1000215" [label="(Call,BGP_INPUT(peer))"];
"1000208" [label="(Call,BGP_INPUT_PNT(peer))"];
"1000183" [label="(Call,BGP_INPUT_PNT(peer))"];
"1000175" [label="(Call,BGP_INPUT_PNT(peer))"];
"1000636" [label="(Call,BGP_INPUT_PNT(peer))"];
"1000571" [label="(Call,bgp_notify_send(peer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\t\tBGP_NOTIFY_UPDATE_MAL_ATTR))"];
"1000535" [label="(Call,bgp_attr_encap(type, peer, length, attr, flag,\n\t\t\t\t\t     startp))"];
"1000287" [label="(Call,SET_BITMAP(seen, type))"];
"1000270" [label="(Call,CHECK_BITMAP(seen, type))"];
"1000163" [label="(Call,memset(seen, 0, BGP_ATTR_BITMAP_SIZE))"];
"1000217" [label="(Call,type = stream_getc(BGP_INPUT(peer)))"];
"1000219" [label="(Call,stream_getc(BGP_INPUT(peer)))"];
"1000134" [label="(MethodParameterIn,struct peer *peer)"];
"1000258" [label="(Call,length = stream_getw(BGP_INPUT(peer)))"];
"1000260" [label="(Call,stream_getw(BGP_INPUT(peer)))"];
"1000264" [label="(Call,length = stream_getc(BGP_INPUT(peer)))"];
"1000266" [label="(Call,stream_getc(BGP_INPUT(peer)))"];
"1000267" [label="(Call,BGP_INPUT(peer))"];
"1000135" [label="(MethodParameterIn,struct attr *attr)"];
"1000255" [label="(Call,CHECK_FLAG(flag, BGP_ATTR_FLAG_EXTLEN))"];
"1000224" [label="(Call,CHECK_FLAG(flag, BGP_ATTR_FLAG_EXTLEN))"];
"1000210" [label="(Call,flag = 0xF0 & stream_getc(BGP_INPUT(peer)))"];
"1000212" [label="(Call,0xF0 & stream_getc(BGP_INPUT(peer)))"];
"1000214" [label="(Call,stream_getc(BGP_INPUT(peer)))"];
"1000206" [label="(Call,startp = BGP_INPUT_PNT(peer))"];
"1000228" [label="(Call,endp - startp)"];
"1000181" [label="(Call,endp - BGP_INPUT_PNT(peer))"];
"1000174" [label="(Call,BGP_INPUT_PNT(peer) < endp)"];
"1000167" [label="(Call,endp = BGP_INPUT_PNT(peer) + size)"];
"1000170" [label="(Call,BGP_INPUT_PNT(peer))"];
"1000136" [label="(MethodParameterIn,bgp_size_t size)"];
"1000297" [label="(Call,attr_endp > endp)"];
"1000290" [label="(Call,attr_endp = BGP_INPUT_PNT(peer) + length)"];
"1000334" [label="(Call,stream_get(&ndata[0], BGP_INPUT(peer), 1))"];
"1000342" [label="(Call,stream_get(&ndata[1], BGP_INPUT(peer), lfl))"];
"1000368" [label="(Call,lfl + 1)"];
"1000374" [label="(Call,bgp_notify_send_with_data(\n\t\t\t\tpeer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\tBGP_NOTIFY_UPDATE_ATTR_LENG_ERR, ndata,\n\t\t\t\tndl + lfl + 1))"];
"1000379" [label="(Call,ndl + lfl + 1)"];
"1000381" [label="(Call,lfl + 1)"];
"1000364" [label="(Call,stream_get(&ndata[lfl + 1], BGP_INPUT(peer), ndl))"];
"1000347" [label="(Call,BGP_INPUT(peer))"];
"1000362" [label="(Call,BGP_INPUT(peer))"];
"1000361" [label="(Call,STREAM_READABLE(BGP_INPUT(peer)))"];
"1000359" [label="(Call,MIN(atl, STREAM_READABLE(BGP_INPUT(peer))))"];
"1000357" [label="(Call,ndl = MIN(atl, STREAM_READABLE(BGP_INPUT(peer))))"];
"1000371" [label="(Call,BGP_INPUT(peer))"];
"1000637" [label="(Identifier,peer)"];
"1000287" [label="(Call,SET_BITMAP(seen, type))"];
"1000573" [label="(Identifier,BGP_NOTIFY_UPDATE_ERR)"];
"1000570" [label="(Block,)"];
"1000195" [label="(Call,endp\n\t\t\t\t\t\t- stream_pnt(BGP_INPUT(peer)))"];
"1000227" [label="(Call,(endp - startp) < (BGP_ATTR_MIN_LEN + 1))"];
"1000673" [label="(Call,lookup_msg(attr_str, type, NULL))"];
"1000217" [label="(Call,type = stream_getc(BGP_INPUT(peer)))"];
"1000185" [label="(Identifier,BGP_ATTR_MIN_LEN)"];
"1000351" [label="(Call,atl = attr_endp - startp)"];
"1000369" [label="(Identifier,lfl)"];
"1000664" [label="(Identifier,peer)"];
"1000169" [label="(Call,BGP_INPUT_PNT(peer) + size)"];
"1000294" [label="(Identifier,peer)"];
"1000345" [label="(Identifier,ndata)"];
"1000373" [label="(Identifier,ndl)"];
"1000328" [label="(Call,BGP_INPUT(peer))"];
"1000293" [label="(Call,BGP_INPUT_PNT(peer))"];
"1000218" [label="(Identifier,type)"];
"1000357" [label="(Call,ndl = MIN(atl, STREAM_READABLE(BGP_INPUT(peer))))"];
"1000259" [label="(Identifier,length)"];
"1000663" [label="(Call,BGP_INPUT_PNT(peer))"];
"1000377" [label="(Identifier,BGP_NOTIFY_UPDATE_ATTR_LENG_ERR)"];
"1000219" [label="(Call,stream_getc(BGP_INPUT(peer)))"];
"1000536" [label="(Identifier,type)"];
"1000535" [label="(Call,bgp_attr_encap(type, peer, length, attr, flag,\n\t\t\t\t\t     startp))"];
"1000334" [label="(Call,stream_get(&ndata[0], BGP_INPUT(peer), 1))"];
"1000374" [label="(Call,bgp_notify_send_with_data(\n\t\t\t\tpeer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\tBGP_NOTIFY_UPDATE_ATTR_LENG_ERR, ndata,\n\t\t\t\tndl + lfl + 1))"];
"1000177" [label="(Identifier,endp)"];
"1000646" [label="(Call,lookup_msg(attr_str, type, NULL))"];
"1000281" [label="(Call,bgp_notify_send(peer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\t\tBGP_NOTIFY_UPDATE_MAL_ATTR))"];
"1000272" [label="(Identifier,type)"];
"1000295" [label="(Identifier,length)"];
"1000290" [label="(Call,attr_endp = BGP_INPUT_PNT(peer) + length)"];
"1000248" [label="(Call,bgp_notify_send(peer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\t\tBGP_NOTIFY_UPDATE_ATTR_LENG_ERR))"];
"1000572" [label="(Identifier,peer)"];
"1000329" [label="(Identifier,peer)"];
"1000363" [label="(Identifier,peer)"];
"1000207" [label="(Identifier,startp)"];
"1000291" [label="(Identifier,attr_endp)"];
"1000385" [label="(Identifier,BGP_ATTR_PARSE_ERROR)"];
"1000375" [label="(Identifier,peer)"];
"1000167" [label="(Call,endp = BGP_INPUT_PNT(peer) + size)"];
"1000172" [label="(Identifier,size)"];
"1000539" [label="(Identifier,attr)"];
"1000300" [label="(Block,)"];
"1000571" [label="(Call,bgp_notify_send(peer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\t\tBGP_NOTIFY_UPDATE_MAL_ATTR))"];
"1000371" [label="(Call,BGP_INPUT(peer))"];
"1000368" [label="(Call,lfl + 1)"];
"1000254" [label="(ControlStructure,if (CHECK_FLAG(flag, BGP_ATTR_FLAG_EXTLEN)))"];
"1000176" [label="(Identifier,peer)"];
"1000182" [label="(Identifier,endp)"];
"1000390" [label="(Identifier,attr_args)"];
"1000361" [label="(Call,STREAM_READABLE(BGP_INPUT(peer)))"];
"1000747" [label="(Call,bgp_attr_aspath_check(peer, attr))"];
"1000296" [label="(ControlStructure,if (attr_endp > endp))"];
"1000367" [label="(Identifier,ndata)"];
"1000342" [label="(Call,stream_get(&ndata[1], BGP_INPUT(peer), lfl))"];
"1000211" [label="(Identifier,flag)"];
"1000139" [label="(Block,)"];
"1000171" [label="(Identifier,peer)"];
"1000225" [label="(Identifier,flag)"];
"1000366" [label="(Call,ndata[lfl + 1])"];
"1000353" [label="(Call,attr_endp - startp)"];
"1000200" [label="(Call,bgp_notify_send(peer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\t\tBGP_NOTIFY_UPDATE_ATTR_LENG_ERR))"];
"1000299" [label="(Identifier,endp)"];
"1000383" [label="(Literal,1)"];
"1000267" [label="(Call,BGP_INPUT(peer))"];
"1000348" [label="(Identifier,peer)"];
"1000358" [label="(Identifier,ndl)"];
"1000635" [label="(Call,BGP_INPUT_PNT(peer) != attr_endp)"];
"1000288" [label="(Identifier,seen)"];
"1000164" [label="(Identifier,seen)"];
"1000232" [label="(Identifier,BGP_ATTR_MIN_LEN)"];
"1000352" [label="(Identifier,atl)"];
"1000382" [label="(Identifier,lfl)"];
"1000221" [label="(Identifier,peer)"];
"1000165" [label="(Literal,0)"];
"1000341" [label="(Literal,1)"];
"1000370" [label="(Literal,1)"];
"1000359" [label="(Call,MIN(atl, STREAM_READABLE(BGP_INPUT(peer))))"];
"1000255" [label="(Call,CHECK_FLAG(flag, BGP_ATTR_FLAG_EXTLEN))"];
"1000692" [label="(Call,bgp_attr_check(peer, attr))"];
"1000376" [label="(Identifier,BGP_NOTIFY_UPDATE_ERR)"];
"1000662" [label="(Call,BGP_INPUT_PNT(peer) != endp)"];
"1000601" [label="(Call,lookup_msg(attr_str, type, NULL))"];
"1000677" [label="(Call,bgp_notify_send(peer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\tBGP_NOTIFY_UPDATE_ATTR_LENG_ERR))"];
"1000339" [label="(Call,BGP_INPUT(peer))"];
"1000168" [label="(Identifier,endp)"];
"1000268" [label="(Identifier,peer)"];
"1000379" [label="(Call,ndl + lfl + 1)"];
"1000372" [label="(Identifier,peer)"];
"1000274" [label="(Call,flog_warn(\n\t\t\t\tEC_BGP_ATTRIBUTE_REPEATED,\n\t\t\t\t\"%s: error BGP attribute type %d appears twice in a message\",\n\t\t\t\tpeer->host, type))"];
"1000533" [label="(Call,ret = bgp_attr_encap(type, peer, length, attr, flag,\n\t\t\t\t\t     startp))"];
"1000362" [label="(Call,BGP_INPUT(peer))"];
"1000327" [label="(Call,stream_forward_getp(BGP_INPUT(peer), -(1 + lfl)))"];
"1000301" [label="(Call,flog_warn(\n\t\t\t\tEC_BGP_ATTRIBUTE_TOO_LARGE,\n\t\t\t\t\"%s: BGP type %d length %d is too large, attribute total length is %d.  attr_endp is %p.  endp is %p\",\n\t\t\t\tpeer->host, type, length, size, attr_endp,\n\t\t\t\tendp))"];
"1000322" [label="(Call,CHECK_FLAG(flag, BGP_ATTR_FLAG_EXTLEN))"];
"1000226" [label="(Identifier,BGP_ATTR_FLAG_EXTLEN)"];
"1000298" [label="(Identifier,attr_endp)"];
"1000170" [label="(Call,BGP_INPUT_PNT(peer))"];
"1000206" [label="(Call,startp = BGP_INPUT_PNT(peer))"];
"1000541" [label="(Identifier,startp)"];
"1000257" [label="(Identifier,BGP_ATTR_FLAG_EXTLEN)"];
"1000209" [label="(Identifier,peer)"];
"1000265" [label="(Identifier,length)"];
"1000636" [label="(Call,BGP_INPUT_PNT(peer))"];
"1000262" [label="(Identifier,peer)"];
"1000181" [label="(Call,endp - BGP_INPUT_PNT(peer))"];
"1000712" [label="(Call,bgp_attr_munge_as4_attrs(peer, attr, as4_path, as4_aggregator,\n\t\t\t\t\t&as4_aggregator_addr))"];
"1000546" [label="(Call,bgp_attr_prefix_sid(length,\n\t\t\t\t\t\t  &attr_args, mp_update))"];
"1000180" [label="(Call,endp - BGP_INPUT_PNT(peer) < BGP_ATTR_MIN_LEN)"];
"1000243" [label="(Call,endp\n\t\t\t\t\t\t- stream_pnt(BGP_INPUT(peer)))"];
"1000335" [label="(Call,&ndata[0])"];
"1000173" [label="(ControlStructure,while (BGP_INPUT_PNT(peer) < endp))"];
"1000381" [label="(Call,lfl + 1)"];
"1000215" [label="(Call,BGP_INPUT(peer))"];
"1000319" [label="(Call,lfl =\n\t\t\t\tCHECK_FLAG(flag, BGP_ATTR_FLAG_EXTLEN) ? 2 : 1)"];
"1000198" [label="(Call,BGP_INPUT(peer))"];
"1000343" [label="(Call,&ndata[1])"];
"1000230" [label="(Identifier,startp)"];
"1000347" [label="(Call,BGP_INPUT(peer))"];
"1000623" [label="(Call,lookup_msg(attr_str, type, NULL))"];
"1000349" [label="(Identifier,lfl)"];
"1000210" [label="(Call,flag = 0xF0 & stream_getc(BGP_INPUT(peer)))"];
"1000297" [label="(Call,attr_endp > endp)"];
"1000214" [label="(Call,stream_getc(BGP_INPUT(peer)))"];
"1000574" [label="(Identifier,BGP_NOTIFY_UPDATE_MAL_ATTR)"];
"1000135" [label="(MethodParameterIn,struct attr *attr)"];
"1000220" [label="(Call,BGP_INPUT(peer))"];
"1000260" [label="(Call,stream_getw(BGP_INPUT(peer)))"];
"1000269" [label="(ControlStructure,if (CHECK_BITMAP(seen, type)))"];
"1000228" [label="(Call,endp - startp)"];
"1000246" [label="(Call,BGP_INPUT(peer))"];
"1000261" [label="(Call,BGP_INPUT(peer))"];
"1000175" [label="(Call,BGP_INPUT_PNT(peer))"];
"1000340" [label="(Identifier,peer)"];
"1000650" [label="(Call,bgp_notify_send(peer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\t\tBGP_NOTIFY_UPDATE_ATTR_LENG_ERR))"];
"1000208" [label="(Call,BGP_INPUT_PNT(peer))"];
"1000380" [label="(Identifier,ndl)"];
"1000275" [label="(Identifier,EC_BGP_ATTRIBUTE_REPEATED)"];
"1000638" [label="(Identifier,attr_endp)"];
"1000163" [label="(Call,memset(seen, 0, BGP_ATTR_BITMAP_SIZE))"];
"1000256" [label="(Identifier,flag)"];
"1000229" [label="(Identifier,endp)"];
"1000365" [label="(Call,&ndata[lfl + 1])"];
"1000216" [label="(Identifier,peer)"];
"1000302" [label="(Identifier,EC_BGP_ATTRIBUTE_TOO_LARGE)"];
"1000271" [label="(Identifier,seen)"];
"1000224" [label="(Call,CHECK_FLAG(flag, BGP_ATTR_FLAG_EXTLEN))"];
"1000174" [label="(Call,BGP_INPUT_PNT(peer) < endp)"];
"1000364" [label="(Call,stream_get(&ndata[lfl + 1], BGP_INPUT(peer), ndl))"];
"1000360" [label="(Identifier,atl)"];
"1000538" [label="(Identifier,length)"];
"1000270" [label="(Call,CHECK_BITMAP(seen, type))"];
"1000166" [label="(Identifier,BGP_ATTR_BITMAP_SIZE)"];
"1000537" [label="(Identifier,peer)"];
"1000720" [label="(Call,bgp_notify_send(peer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\tBGP_NOTIFY_UPDATE_MAL_ATTR))"];
"1000178" [label="(Block,)"];
"1000213" [label="(Literal,0xF0)"];
"1000378" [label="(Identifier,ndata)"];
"1000313" [label="(Call,memset(ndata, 0x00, sizeof(ndata)))"];
"1000289" [label="(Identifier,type)"];
"1000264" [label="(Call,length = stream_getc(BGP_INPUT(peer)))"];
"1000258" [label="(Call,length = stream_getw(BGP_INPUT(peer)))"];
"1000212" [label="(Call,0xF0 & stream_getc(BGP_INPUT(peer)))"];
"1000292" [label="(Call,BGP_INPUT_PNT(peer) + length)"];
"1000540" [label="(Identifier,flag)"];
"1000332" [label="(Literal,1)"];
"1000266" [label="(Call,stream_getc(BGP_INPUT(peer)))"];
"1000263" [label="(ControlStructure,else)"];
"1000184" [label="(Identifier,peer)"];
"1000223" [label="(Call,CHECK_FLAG(flag, BGP_ATTR_FLAG_EXTLEN)\n\t\t    && ((endp - startp) < (BGP_ATTR_MIN_LEN + 1)))"];
"1000576" [label="(Identifier,ret)"];
"1000136" [label="(MethodParameterIn,bgp_size_t size)"];
"1000183" [label="(Call,BGP_INPUT_PNT(peer))"];
"1000134" [label="(MethodParameterIn,struct peer *peer)"];
"1000796" [label="(MethodReturn,bgp_attr_parse_ret_t)"];
"1000339" -> "1000334"  [label="AST: "];
"1000339" -> "1000340"  [label="CFG: "];
"1000340" -> "1000339"  [label="AST: "];
"1000341" -> "1000339"  [label="CFG: "];
"1000339" -> "1000334"  [label="DDG: peer"];
"1000328" -> "1000339"  [label="DDG: peer"];
"1000134" -> "1000339"  [label="DDG: peer"];
"1000339" -> "1000347"  [label="DDG: peer"];
"1000328" -> "1000327"  [label="AST: "];
"1000328" -> "1000329"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000332" -> "1000328"  [label="CFG: "];
"1000328" -> "1000327"  [label="DDG: peer"];
"1000293" -> "1000328"  [label="DDG: peer"];
"1000134" -> "1000328"  [label="DDG: peer"];
"1000293" -> "1000292"  [label="AST: "];
"1000293" -> "1000294"  [label="CFG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000295" -> "1000293"  [label="CFG: "];
"1000293" -> "1000796"  [label="DDG: peer"];
"1000293" -> "1000175"  [label="DDG: peer"];
"1000293" -> "1000290"  [label="DDG: peer"];
"1000293" -> "1000292"  [label="DDG: peer"];
"1000261" -> "1000293"  [label="DDG: peer"];
"1000267" -> "1000293"  [label="DDG: peer"];
"1000134" -> "1000293"  [label="DDG: peer"];
"1000293" -> "1000535"  [label="DDG: peer"];
"1000293" -> "1000571"  [label="DDG: peer"];
"1000293" -> "1000636"  [label="DDG: peer"];
"1000293" -> "1000663"  [label="DDG: peer"];
"1000261" -> "1000260"  [label="AST: "];
"1000261" -> "1000262"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000260" -> "1000261"  [label="CFG: "];
"1000261" -> "1000260"  [label="DDG: peer"];
"1000220" -> "1000261"  [label="DDG: peer"];
"1000134" -> "1000261"  [label="DDG: peer"];
"1000261" -> "1000281"  [label="DDG: peer"];
"1000220" -> "1000219"  [label="AST: "];
"1000220" -> "1000221"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000219" -> "1000220"  [label="CFG: "];
"1000220" -> "1000219"  [label="DDG: peer"];
"1000215" -> "1000220"  [label="DDG: peer"];
"1000134" -> "1000220"  [label="DDG: peer"];
"1000220" -> "1000246"  [label="DDG: peer"];
"1000220" -> "1000267"  [label="DDG: peer"];
"1000215" -> "1000214"  [label="AST: "];
"1000215" -> "1000216"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000214" -> "1000215"  [label="CFG: "];
"1000215" -> "1000214"  [label="DDG: peer"];
"1000208" -> "1000215"  [label="DDG: peer"];
"1000134" -> "1000215"  [label="DDG: peer"];
"1000208" -> "1000206"  [label="AST: "];
"1000208" -> "1000209"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000206" -> "1000208"  [label="CFG: "];
"1000208" -> "1000206"  [label="DDG: peer"];
"1000183" -> "1000208"  [label="DDG: peer"];
"1000134" -> "1000208"  [label="DDG: peer"];
"1000183" -> "1000181"  [label="AST: "];
"1000183" -> "1000184"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000181" -> "1000183"  [label="CFG: "];
"1000183" -> "1000181"  [label="DDG: peer"];
"1000175" -> "1000183"  [label="DDG: peer"];
"1000134" -> "1000183"  [label="DDG: peer"];
"1000183" -> "1000198"  [label="DDG: peer"];
"1000175" -> "1000174"  [label="AST: "];
"1000175" -> "1000176"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000177" -> "1000175"  [label="CFG: "];
"1000175" -> "1000174"  [label="DDG: peer"];
"1000636" -> "1000175"  [label="DDG: peer"];
"1000170" -> "1000175"  [label="DDG: peer"];
"1000134" -> "1000175"  [label="DDG: peer"];
"1000175" -> "1000663"  [label="DDG: peer"];
"1000636" -> "1000635"  [label="AST: "];
"1000636" -> "1000637"  [label="CFG: "];
"1000637" -> "1000636"  [label="AST: "];
"1000638" -> "1000636"  [label="CFG: "];
"1000636" -> "1000635"  [label="DDG: peer"];
"1000571" -> "1000636"  [label="DDG: peer"];
"1000535" -> "1000636"  [label="DDG: peer"];
"1000134" -> "1000636"  [label="DDG: peer"];
"1000636" -> "1000650"  [label="DDG: peer"];
"1000571" -> "1000570"  [label="AST: "];
"1000571" -> "1000574"  [label="CFG: "];
"1000572" -> "1000571"  [label="AST: "];
"1000573" -> "1000571"  [label="AST: "];
"1000574" -> "1000571"  [label="AST: "];
"1000576" -> "1000571"  [label="CFG: "];
"1000571" -> "1000796"  [label="DDG: bgp_notify_send(peer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\t\tBGP_NOTIFY_UPDATE_MAL_ATTR)"];
"1000571" -> "1000796"  [label="DDG: BGP_NOTIFY_UPDATE_MAL_ATTR"];
"1000571" -> "1000796"  [label="DDG: peer"];
"1000571" -> "1000796"  [label="DDG: BGP_NOTIFY_UPDATE_ERR"];
"1000571" -> "1000200"  [label="DDG: BGP_NOTIFY_UPDATE_ERR"];
"1000571" -> "1000248"  [label="DDG: BGP_NOTIFY_UPDATE_ERR"];
"1000571" -> "1000281"  [label="DDG: BGP_NOTIFY_UPDATE_ERR"];
"1000571" -> "1000281"  [label="DDG: BGP_NOTIFY_UPDATE_MAL_ATTR"];
"1000571" -> "1000374"  [label="DDG: BGP_NOTIFY_UPDATE_ERR"];
"1000535" -> "1000571"  [label="DDG: peer"];
"1000134" -> "1000571"  [label="DDG: peer"];
"1000571" -> "1000650"  [label="DDG: BGP_NOTIFY_UPDATE_ERR"];
"1000571" -> "1000677"  [label="DDG: BGP_NOTIFY_UPDATE_ERR"];
"1000571" -> "1000720"  [label="DDG: BGP_NOTIFY_UPDATE_ERR"];
"1000571" -> "1000720"  [label="DDG: BGP_NOTIFY_UPDATE_MAL_ATTR"];
"1000535" -> "1000533"  [label="AST: "];
"1000535" -> "1000541"  [label="CFG: "];
"1000536" -> "1000535"  [label="AST: "];
"1000537" -> "1000535"  [label="AST: "];
"1000538" -> "1000535"  [label="AST: "];
"1000539" -> "1000535"  [label="AST: "];
"1000540" -> "1000535"  [label="AST: "];
"1000541" -> "1000535"  [label="AST: "];
"1000533" -> "1000535"  [label="CFG: "];
"1000535" -> "1000796"  [label="DDG: flag"];
"1000535" -> "1000796"  [label="DDG: type"];
"1000535" -> "1000796"  [label="DDG: attr"];
"1000535" -> "1000796"  [label="DDG: length"];
"1000535" -> "1000796"  [label="DDG: peer"];
"1000535" -> "1000796"  [label="DDG: startp"];
"1000535" -> "1000533"  [label="DDG: type"];
"1000535" -> "1000533"  [label="DDG: peer"];
"1000535" -> "1000533"  [label="DDG: attr"];
"1000535" -> "1000533"  [label="DDG: flag"];
"1000535" -> "1000533"  [label="DDG: length"];
"1000535" -> "1000533"  [label="DDG: startp"];
"1000287" -> "1000535"  [label="DDG: type"];
"1000134" -> "1000535"  [label="DDG: peer"];
"1000258" -> "1000535"  [label="DDG: length"];
"1000264" -> "1000535"  [label="DDG: length"];
"1000135" -> "1000535"  [label="DDG: attr"];
"1000255" -> "1000535"  [label="DDG: flag"];
"1000206" -> "1000535"  [label="DDG: startp"];
"1000228" -> "1000535"  [label="DDG: startp"];
"1000535" -> "1000601"  [label="DDG: type"];
"1000535" -> "1000623"  [label="DDG: type"];
"1000535" -> "1000646"  [label="DDG: type"];
"1000535" -> "1000663"  [label="DDG: peer"];
"1000535" -> "1000673"  [label="DDG: type"];
"1000535" -> "1000692"  [label="DDG: attr"];
"1000287" -> "1000178"  [label="AST: "];
"1000287" -> "1000289"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000287"  [label="AST: "];
"1000291" -> "1000287"  [label="CFG: "];
"1000287" -> "1000796"  [label="DDG: SET_BITMAP(seen, type)"];
"1000287" -> "1000796"  [label="DDG: type"];
"1000287" -> "1000796"  [label="DDG: seen"];
"1000287" -> "1000270"  [label="DDG: seen"];
"1000270" -> "1000287"  [label="DDG: seen"];
"1000270" -> "1000287"  [label="DDG: type"];
"1000287" -> "1000301"  [label="DDG: type"];
"1000287" -> "1000601"  [label="DDG: type"];
"1000287" -> "1000623"  [label="DDG: type"];
"1000287" -> "1000646"  [label="DDG: type"];
"1000287" -> "1000673"  [label="DDG: type"];
"1000270" -> "1000269"  [label="AST: "];
"1000270" -> "1000272"  [label="CFG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000272" -> "1000270"  [label="AST: "];
"1000275" -> "1000270"  [label="CFG: "];
"1000288" -> "1000270"  [label="CFG: "];
"1000270" -> "1000796"  [label="DDG: CHECK_BITMAP(seen, type)"];
"1000270" -> "1000796"  [label="DDG: seen"];
"1000163" -> "1000270"  [label="DDG: seen"];
"1000217" -> "1000270"  [label="DDG: type"];
"1000270" -> "1000274"  [label="DDG: type"];
"1000163" -> "1000139"  [label="AST: "];
"1000163" -> "1000166"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000165" -> "1000163"  [label="AST: "];
"1000166" -> "1000163"  [label="AST: "];
"1000168" -> "1000163"  [label="CFG: "];
"1000163" -> "1000796"  [label="DDG: seen"];
"1000163" -> "1000796"  [label="DDG: BGP_ATTR_BITMAP_SIZE"];
"1000163" -> "1000796"  [label="DDG: memset(seen, 0, BGP_ATTR_BITMAP_SIZE)"];
"1000217" -> "1000178"  [label="AST: "];
"1000217" -> "1000219"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000219" -> "1000217"  [label="AST: "];
"1000225" -> "1000217"  [label="CFG: "];
"1000217" -> "1000796"  [label="DDG: stream_getc(BGP_INPUT(peer))"];
"1000217" -> "1000796"  [label="DDG: type"];
"1000219" -> "1000217"  [label="DDG: BGP_INPUT(peer)"];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000796"  [label="DDG: peer"];
"1000134" -> "1000170"  [label="DDG: peer"];
"1000134" -> "1000198"  [label="DDG: peer"];
"1000134" -> "1000200"  [label="DDG: peer"];
"1000134" -> "1000246"  [label="DDG: peer"];
"1000134" -> "1000248"  [label="DDG: peer"];
"1000134" -> "1000267"  [label="DDG: peer"];
"1000134" -> "1000281"  [label="DDG: peer"];
"1000134" -> "1000347"  [label="DDG: peer"];
"1000134" -> "1000362"  [label="DDG: peer"];
"1000134" -> "1000371"  [label="DDG: peer"];
"1000134" -> "1000374"  [label="DDG: peer"];
"1000134" -> "1000650"  [label="DDG: peer"];
"1000134" -> "1000663"  [label="DDG: peer"];
"1000134" -> "1000677"  [label="DDG: peer"];
"1000134" -> "1000692"  [label="DDG: peer"];
"1000134" -> "1000712"  [label="DDG: peer"];
"1000134" -> "1000720"  [label="DDG: peer"];
"1000134" -> "1000747"  [label="DDG: peer"];
"1000258" -> "1000254"  [label="AST: "];
"1000258" -> "1000260"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000260" -> "1000258"  [label="AST: "];
"1000271" -> "1000258"  [label="CFG: "];
"1000258" -> "1000796"  [label="DDG: length"];
"1000258" -> "1000796"  [label="DDG: stream_getw(BGP_INPUT(peer))"];
"1000260" -> "1000258"  [label="DDG: BGP_INPUT(peer)"];
"1000258" -> "1000290"  [label="DDG: length"];
"1000258" -> "1000292"  [label="DDG: length"];
"1000258" -> "1000301"  [label="DDG: length"];
"1000258" -> "1000546"  [label="DDG: length"];
"1000260" -> "1000796"  [label="DDG: BGP_INPUT(peer)"];
"1000264" -> "1000263"  [label="AST: "];
"1000264" -> "1000266"  [label="CFG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000266" -> "1000264"  [label="AST: "];
"1000271" -> "1000264"  [label="CFG: "];
"1000264" -> "1000796"  [label="DDG: length"];
"1000264" -> "1000796"  [label="DDG: stream_getc(BGP_INPUT(peer))"];
"1000266" -> "1000264"  [label="DDG: BGP_INPUT(peer)"];
"1000264" -> "1000290"  [label="DDG: length"];
"1000264" -> "1000292"  [label="DDG: length"];
"1000264" -> "1000301"  [label="DDG: length"];
"1000264" -> "1000546"  [label="DDG: length"];
"1000266" -> "1000267"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000266" -> "1000796"  [label="DDG: BGP_INPUT(peer)"];
"1000267" -> "1000266"  [label="DDG: peer"];
"1000267" -> "1000268"  [label="CFG: "];
"1000268" -> "1000267"  [label="AST: "];
"1000267" -> "1000281"  [label="DDG: peer"];
"1000135" -> "1000133"  [label="AST: "];
"1000135" -> "1000796"  [label="DDG: attr"];
"1000135" -> "1000692"  [label="DDG: attr"];
"1000135" -> "1000712"  [label="DDG: attr"];
"1000135" -> "1000747"  [label="DDG: attr"];
"1000255" -> "1000254"  [label="AST: "];
"1000255" -> "1000257"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000257" -> "1000255"  [label="AST: "];
"1000259" -> "1000255"  [label="CFG: "];
"1000265" -> "1000255"  [label="CFG: "];
"1000255" -> "1000796"  [label="DDG: CHECK_FLAG(flag, BGP_ATTR_FLAG_EXTLEN)"];
"1000255" -> "1000796"  [label="DDG: BGP_ATTR_FLAG_EXTLEN"];
"1000255" -> "1000796"  [label="DDG: flag"];
"1000255" -> "1000224"  [label="DDG: BGP_ATTR_FLAG_EXTLEN"];
"1000224" -> "1000255"  [label="DDG: flag"];
"1000224" -> "1000255"  [label="DDG: BGP_ATTR_FLAG_EXTLEN"];
"1000255" -> "1000322"  [label="DDG: flag"];
"1000255" -> "1000322"  [label="DDG: BGP_ATTR_FLAG_EXTLEN"];
"1000224" -> "1000223"  [label="AST: "];
"1000224" -> "1000226"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000229" -> "1000224"  [label="CFG: "];
"1000223" -> "1000224"  [label="CFG: "];
"1000224" -> "1000796"  [label="DDG: flag"];
"1000224" -> "1000796"  [label="DDG: BGP_ATTR_FLAG_EXTLEN"];
"1000224" -> "1000223"  [label="DDG: flag"];
"1000224" -> "1000223"  [label="DDG: BGP_ATTR_FLAG_EXTLEN"];
"1000210" -> "1000224"  [label="DDG: flag"];
"1000210" -> "1000178"  [label="AST: "];
"1000210" -> "1000212"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="AST: "];
"1000218" -> "1000210"  [label="CFG: "];
"1000210" -> "1000796"  [label="DDG: 0xF0 & stream_getc(BGP_INPUT(peer))"];
"1000212" -> "1000210"  [label="DDG: 0xF0"];
"1000212" -> "1000210"  [label="DDG: stream_getc(BGP_INPUT(peer))"];
"1000212" -> "1000214"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000214" -> "1000212"  [label="AST: "];
"1000214" -> "1000212"  [label="DDG: BGP_INPUT(peer)"];
"1000206" -> "1000178"  [label="AST: "];
"1000207" -> "1000206"  [label="AST: "];
"1000211" -> "1000206"  [label="CFG: "];
"1000206" -> "1000796"  [label="DDG: BGP_INPUT_PNT(peer)"];
"1000206" -> "1000796"  [label="DDG: startp"];
"1000206" -> "1000228"  [label="DDG: startp"];
"1000206" -> "1000353"  [label="DDG: startp"];
"1000228" -> "1000227"  [label="AST: "];
"1000228" -> "1000230"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000230" -> "1000228"  [label="AST: "];
"1000232" -> "1000228"  [label="CFG: "];
"1000228" -> "1000796"  [label="DDG: endp"];
"1000228" -> "1000796"  [label="DDG: startp"];
"1000228" -> "1000227"  [label="DDG: endp"];
"1000228" -> "1000227"  [label="DDG: startp"];
"1000181" -> "1000228"  [label="DDG: endp"];
"1000228" -> "1000243"  [label="DDG: endp"];
"1000228" -> "1000297"  [label="DDG: endp"];
"1000228" -> "1000353"  [label="DDG: startp"];
"1000181" -> "1000180"  [label="AST: "];
"1000182" -> "1000181"  [label="AST: "];
"1000185" -> "1000181"  [label="CFG: "];
"1000181" -> "1000796"  [label="DDG: endp"];
"1000181" -> "1000796"  [label="DDG: BGP_INPUT_PNT(peer)"];
"1000181" -> "1000180"  [label="DDG: endp"];
"1000181" -> "1000180"  [label="DDG: BGP_INPUT_PNT(peer)"];
"1000174" -> "1000181"  [label="DDG: endp"];
"1000181" -> "1000195"  [label="DDG: endp"];
"1000181" -> "1000243"  [label="DDG: endp"];
"1000181" -> "1000297"  [label="DDG: endp"];
"1000174" -> "1000173"  [label="AST: "];
"1000174" -> "1000177"  [label="CFG: "];
"1000177" -> "1000174"  [label="AST: "];
"1000182" -> "1000174"  [label="CFG: "];
"1000664" -> "1000174"  [label="CFG: "];
"1000174" -> "1000796"  [label="DDG: BGP_INPUT_PNT(peer) < endp"];
"1000167" -> "1000174"  [label="DDG: endp"];
"1000297" -> "1000174"  [label="DDG: endp"];
"1000174" -> "1000662"  [label="DDG: endp"];
"1000167" -> "1000139"  [label="AST: "];
"1000167" -> "1000169"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000169" -> "1000167"  [label="AST: "];
"1000176" -> "1000167"  [label="CFG: "];
"1000167" -> "1000796"  [label="DDG: BGP_INPUT_PNT(peer) + size"];
"1000170" -> "1000167"  [label="DDG: peer"];
"1000136" -> "1000167"  [label="DDG: size"];
"1000170" -> "1000169"  [label="AST: "];
"1000170" -> "1000171"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="CFG: "];
"1000170" -> "1000169"  [label="DDG: peer"];
"1000136" -> "1000133"  [label="AST: "];
"1000136" -> "1000796"  [label="DDG: size"];
"1000136" -> "1000169"  [label="DDG: size"];
"1000136" -> "1000301"  [label="DDG: size"];
"1000297" -> "1000296"  [label="AST: "];
"1000297" -> "1000299"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000299" -> "1000297"  [label="AST: "];
"1000302" -> "1000297"  [label="CFG: "];
"1000390" -> "1000297"  [label="CFG: "];
"1000297" -> "1000796"  [label="DDG: attr_endp"];
"1000297" -> "1000796"  [label="DDG: endp"];
"1000297" -> "1000796"  [label="DDG: attr_endp > endp"];
"1000290" -> "1000297"  [label="DDG: attr_endp"];
"1000297" -> "1000301"  [label="DDG: attr_endp"];
"1000297" -> "1000301"  [label="DDG: endp"];
"1000297" -> "1000635"  [label="DDG: attr_endp"];
"1000297" -> "1000662"  [label="DDG: endp"];
"1000290" -> "1000178"  [label="AST: "];
"1000290" -> "1000292"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000292" -> "1000290"  [label="AST: "];
"1000298" -> "1000290"  [label="CFG: "];
"1000290" -> "1000796"  [label="DDG: BGP_INPUT_PNT(peer) + length"];
"1000334" -> "1000300"  [label="AST: "];
"1000334" -> "1000341"  [label="CFG: "];
"1000335" -> "1000334"  [label="AST: "];
"1000341" -> "1000334"  [label="AST: "];
"1000345" -> "1000334"  [label="CFG: "];
"1000334" -> "1000796"  [label="DDG: stream_get(&ndata[0], BGP_INPUT(peer), 1)"];
"1000334" -> "1000796"  [label="DDG: &ndata[0]"];
"1000334" -> "1000342"  [label="DDG: &ndata[0]"];
"1000334" -> "1000364"  [label="DDG: &ndata[0]"];
"1000342" -> "1000300"  [label="AST: "];
"1000342" -> "1000349"  [label="CFG: "];
"1000343" -> "1000342"  [label="AST: "];
"1000347" -> "1000342"  [label="AST: "];
"1000349" -> "1000342"  [label="AST: "];
"1000352" -> "1000342"  [label="CFG: "];
"1000342" -> "1000796"  [label="DDG: &ndata[1]"];
"1000342" -> "1000796"  [label="DDG: stream_get(&ndata[1], BGP_INPUT(peer), lfl)"];
"1000347" -> "1000342"  [label="DDG: peer"];
"1000319" -> "1000342"  [label="DDG: lfl"];
"1000342" -> "1000368"  [label="DDG: lfl"];
"1000342" -> "1000374"  [label="DDG: lfl"];
"1000342" -> "1000379"  [label="DDG: lfl"];
"1000342" -> "1000381"  [label="DDG: lfl"];
"1000368" -> "1000366"  [label="AST: "];
"1000368" -> "1000370"  [label="CFG: "];
"1000369" -> "1000368"  [label="AST: "];
"1000370" -> "1000368"  [label="AST: "];
"1000366" -> "1000368"  [label="CFG: "];
"1000374" -> "1000300"  [label="AST: "];
"1000374" -> "1000379"  [label="CFG: "];
"1000375" -> "1000374"  [label="AST: "];
"1000376" -> "1000374"  [label="AST: "];
"1000377" -> "1000374"  [label="AST: "];
"1000378" -> "1000374"  [label="AST: "];
"1000379" -> "1000374"  [label="AST: "];
"1000385" -> "1000374"  [label="CFG: "];
"1000374" -> "1000796"  [label="DDG: BGP_NOTIFY_UPDATE_ERR"];
"1000374" -> "1000796"  [label="DDG: BGP_NOTIFY_UPDATE_ATTR_LENG_ERR"];
"1000374" -> "1000796"  [label="DDG: peer"];
"1000374" -> "1000796"  [label="DDG: ndl + lfl + 1"];
"1000374" -> "1000796"  [label="DDG: ndata"];
"1000374" -> "1000796"  [label="DDG: bgp_notify_send_with_data(\n\t\t\t\tpeer, BGP_NOTIFY_UPDATE_ERR,\n\t\t\t\tBGP_NOTIFY_UPDATE_ATTR_LENG_ERR, ndata,\n\t\t\t\tndl + lfl + 1)"];
"1000371" -> "1000374"  [label="DDG: peer"];
"1000313" -> "1000374"  [label="DDG: ndata"];
"1000364" -> "1000374"  [label="DDG: ndl"];
"1000379" -> "1000381"  [label="CFG: "];
"1000380" -> "1000379"  [label="AST: "];
"1000381" -> "1000379"  [label="AST: "];
"1000379" -> "1000796"  [label="DDG: ndl"];
"1000379" -> "1000796"  [label="DDG: lfl + 1"];
"1000364" -> "1000379"  [label="DDG: ndl"];
"1000381" -> "1000383"  [label="CFG: "];
"1000382" -> "1000381"  [label="AST: "];
"1000383" -> "1000381"  [label="AST: "];
"1000381" -> "1000796"  [label="DDG: lfl"];
"1000364" -> "1000300"  [label="AST: "];
"1000364" -> "1000373"  [label="CFG: "];
"1000365" -> "1000364"  [label="AST: "];
"1000371" -> "1000364"  [label="AST: "];
"1000373" -> "1000364"  [label="AST: "];
"1000375" -> "1000364"  [label="CFG: "];
"1000364" -> "1000796"  [label="DDG: &ndata[lfl + 1]"];
"1000364" -> "1000796"  [label="DDG: stream_get(&ndata[lfl + 1], BGP_INPUT(peer), ndl)"];
"1000364" -> "1000796"  [label="DDG: BGP_INPUT(peer)"];
"1000371" -> "1000364"  [label="DDG: peer"];
"1000357" -> "1000364"  [label="DDG: ndl"];
"1000347" -> "1000348"  [label="CFG: "];
"1000348" -> "1000347"  [label="AST: "];
"1000349" -> "1000347"  [label="CFG: "];
"1000347" -> "1000362"  [label="DDG: peer"];
"1000362" -> "1000361"  [label="AST: "];
"1000362" -> "1000363"  [label="CFG: "];
"1000363" -> "1000362"  [label="AST: "];
"1000361" -> "1000362"  [label="CFG: "];
"1000362" -> "1000361"  [label="DDG: peer"];
"1000362" -> "1000371"  [label="DDG: peer"];
"1000361" -> "1000359"  [label="AST: "];
"1000359" -> "1000361"  [label="CFG: "];
"1000361" -> "1000359"  [label="DDG: BGP_INPUT(peer)"];
"1000359" -> "1000357"  [label="AST: "];
"1000360" -> "1000359"  [label="AST: "];
"1000357" -> "1000359"  [label="CFG: "];
"1000359" -> "1000796"  [label="DDG: STREAM_READABLE(BGP_INPUT(peer))"];
"1000359" -> "1000796"  [label="DDG: atl"];
"1000359" -> "1000357"  [label="DDG: atl"];
"1000359" -> "1000357"  [label="DDG: STREAM_READABLE(BGP_INPUT(peer))"];
"1000351" -> "1000359"  [label="DDG: atl"];
"1000357" -> "1000300"  [label="AST: "];
"1000358" -> "1000357"  [label="AST: "];
"1000367" -> "1000357"  [label="CFG: "];
"1000357" -> "1000796"  [label="DDG: MIN(atl, STREAM_READABLE(BGP_INPUT(peer)))"];
"1000371" -> "1000372"  [label="CFG: "];
"1000372" -> "1000371"  [label="AST: "];
"1000373" -> "1000371"  [label="CFG: "];
}
