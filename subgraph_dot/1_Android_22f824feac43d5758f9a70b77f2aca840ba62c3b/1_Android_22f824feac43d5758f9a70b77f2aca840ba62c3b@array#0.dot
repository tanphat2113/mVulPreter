digraph "1_Android_22f824feac43d5758f9a70b77f2aca840ba62c3b@array" {
"1000308" [label="(Call,&ss = subSamples[i])"];
"1000261" [label="(Call,data.read(\n                    subSamples,\n sizeof(CryptoPlugin::SubSample) * numSubSamples))"];
"1000257" [label="(Call,*subSamples =\n new CryptoPlugin::SubSample[numSubSamples])"];
"1000259" [label="(Call,new CryptoPlugin::SubSample[numSubSamples])"];
"1000263" [label="(Call,sizeof(CryptoPlugin::SubSample) * numSubSamples)"];
"1000253" [label="(Call,numSubSamples = data.readInt32())"];
"1000316" [label="(Call,SIZE_MAX - ss.mNumBytesOfEncryptedData)"];
"1000314" [label="(Call,sumSubsampleSizes <= SIZE_MAX - ss.mNumBytesOfEncryptedData)"];
"1000322" [label="(Call,sumSubsampleSizes += ss.mNumBytesOfEncryptedData)"];
"1000333" [label="(Call,sumSubsampleSizes <= SIZE_MAX - ss.mNumBytesOfClearData)"];
"1000341" [label="(Call,sumSubsampleSizes += ss.mNumBytesOfClearData)"];
"1000354" [label="(Call,sumSubsampleSizes != totalSize)"];
"1000352" [label="(Call,overflow || sumSubsampleSizes != totalSize)"];
"1000364" [label="(Call,offset + totalSize > sharedBuffer->size())"];
"1000365" [label="(Call,offset + totalSize)"];
"1000412" [label="(Call,static_cast<ssize_t>(totalSize))"];
"1000410" [label="(Call,CHECK_LE(result, static_cast<ssize_t>(totalSize)))"];
"1000415" [label="(Call,reply->write(dstPtr, result))"];
"1000418" [label="(Call,free(dstPtr))"];
"1000335" [label="(Call,SIZE_MAX - ss.mNumBytesOfClearData)"];
"1000342" [label="(Identifier,sumSubsampleSizes)"];
"1000305" [label="(Identifier,i)"];
"1000419" [label="(Identifier,dstPtr)"];
"1000316" [label="(Call,SIZE_MAX - ss.mNumBytesOfEncryptedData)"];
"1000335" [label="(Call,SIZE_MAX - ss.mNumBytesOfClearData)"];
"1000262" [label="(Identifier,subSamples)"];
"1000333" [label="(Call,sumSubsampleSizes <= SIZE_MAX - ss.mNumBytesOfClearData)"];
"1000283" [label="(Call,calloc(1, totalSize))"];
"1000301" [label="(Call,i < numSubSamples)"];
"1000321" [label="(Block,)"];
"1000261" [label="(Call,data.read(\n                    subSamples,\n sizeof(CryptoPlugin::SubSample) * numSubSamples))"];
"1000263" [label="(Call,sizeof(CryptoPlugin::SubSample) * numSubSamples)"];
"1000257" [label="(Call,*subSamples =\n new CryptoPlugin::SubSample[numSubSamples])"];
"1000330" [label="(Identifier,overflow)"];
"1000365" [label="(Call,offset + totalSize)"];
"1000367" [label="(Identifier,totalSize)"];
"1000348" [label="(Call,overflow = true)"];
"1000254" [label="(Identifier,numSubSamples)"];
"1000249" [label="(Call,offset = data.readInt32())"];
"1000237" [label="(Call,totalSize = data.readInt32())"];
"1000308" [label="(Call,&ss = subSamples[i])"];
"1000366" [label="(Identifier,offset)"];
"1000414" [label="(Identifier,totalSize)"];
"1000314" [label="(Call,sumSubsampleSizes <= SIZE_MAX - ss.mNumBytesOfEncryptedData)"];
"1000322" [label="(Call,sumSubsampleSizes += ss.mNumBytesOfEncryptedData)"];
"1000341" [label="(Call,sumSubsampleSizes += ss.mNumBytesOfClearData)"];
"1000317" [label="(Identifier,SIZE_MAX)"];
"1000310" [label="(Call,subSamples[i])"];
"1000315" [label="(Identifier,sumSubsampleSizes)"];
"1000313" [label="(ControlStructure,if (sumSubsampleSizes <= SIZE_MAX - ss.mNumBytesOfEncryptedData))"];
"1000354" [label="(Call,sumSubsampleSizes != totalSize)"];
"1000415" [label="(Call,reply->write(dstPtr, result))"];
"1000377" [label="(Identifier,result)"];
"1000324" [label="(Call,ss.mNumBytesOfEncryptedData)"];
"1000421" [label="(Identifier,dstPtr)"];
"1000337" [label="(Call,ss.mNumBytesOfClearData)"];
"1000270" [label="(Identifier,secure)"];
"1000332" [label="(ControlStructure,if (sumSubsampleSizes <= SIZE_MAX - ss.mNumBytesOfClearData))"];
"1000343" [label="(Call,ss.mNumBytesOfClearData)"];
"1000318" [label="(Call,ss.mNumBytesOfEncryptedData)"];
"1000371" [label="(Identifier,result)"];
"1000471" [label="(MethodReturn,status_t)"];
"1000260" [label="(Identifier,CryptoPlugin::SubSample)"];
"1000264" [label="(Call,sizeof(CryptoPlugin::SubSample))"];
"1000351" [label="(ControlStructure,if (overflow || sumSubsampleSizes != totalSize))"];
"1000293" [label="(Call,overflow = false)"];
"1000368" [label="(Call,sharedBuffer->size())"];
"1000281" [label="(Call,dstPtr = calloc(1, totalSize))"];
"1000363" [label="(ControlStructure,if (offset + totalSize > sharedBuffer->size()))"];
"1000336" [label="(Identifier,SIZE_MAX)"];
"1000309" [label="(Identifier,ss)"];
"1000323" [label="(Identifier,sumSubsampleSizes)"];
"1000255" [label="(Call,data.readInt32())"];
"1000356" [label="(Identifier,totalSize)"];
"1000289" [label="(Call,sumSubsampleSizes = 0)"];
"1000353" [label="(Identifier,overflow)"];
"1000306" [label="(Block,)"];
"1000266" [label="(Identifier,numSubSamples)"];
"1000378" [label="(Call,decrypt(\n                    secure,\n                    key,\n                    iv,\n                    mode,\n                    sharedBuffer, offset,\n                    subSamples, numSubSamples,\n                    secure ? secureBufferId : dstPtr,\n &errorDetailMsg))"];
"1000258" [label="(Identifier,subSamples)"];
"1000409" [label="(Block,)"];
"1000359" [label="(Identifier,result)"];
"1000416" [label="(Identifier,dstPtr)"];
"1000423" [label="(Call,delete[] subSamples)"];
"1000355" [label="(Identifier,sumSubsampleSizes)"];
"1000364" [label="(Call,offset + totalSize > sharedBuffer->size())"];
"1000253" [label="(Call,numSubSamples = data.readInt32())"];
"1000410" [label="(Call,CHECK_LE(result, static_cast<ssize_t>(totalSize)))"];
"1000406" [label="(Call,result >= 0)"];
"1000417" [label="(Identifier,result)"];
"1000209" [label="(Block,)"];
"1000340" [label="(Block,)"];
"1000352" [label="(Call,overflow || sumSubsampleSizes != totalSize)"];
"1000411" [label="(Identifier,result)"];
"1000404" [label="(Block,)"];
"1000418" [label="(Call,free(dstPtr))"];
"1000412" [label="(Call,static_cast<ssize_t>(totalSize))"];
"1000329" [label="(Call,overflow = true)"];
"1000349" [label="(Identifier,overflow)"];
"1000259" [label="(Call,new CryptoPlugin::SubSample[numSubSamples])"];
"1000334" [label="(Identifier,sumSubsampleSizes)"];
"1000308" -> "1000306"  [label="AST: "];
"1000308" -> "1000310"  [label="CFG: "];
"1000309" -> "1000308"  [label="AST: "];
"1000310" -> "1000308"  [label="AST: "];
"1000315" -> "1000308"  [label="CFG: "];
"1000308" -> "1000471"  [label="DDG: subSamples[i]"];
"1000308" -> "1000471"  [label="DDG: ss"];
"1000261" -> "1000308"  [label="DDG: subSamples"];
"1000308" -> "1000316"  [label="DDG: ss"];
"1000308" -> "1000322"  [label="DDG: ss"];
"1000308" -> "1000335"  [label="DDG: ss"];
"1000308" -> "1000341"  [label="DDG: ss"];
"1000261" -> "1000209"  [label="AST: "];
"1000261" -> "1000263"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000263" -> "1000261"  [label="AST: "];
"1000270" -> "1000261"  [label="CFG: "];
"1000261" -> "1000471"  [label="DDG: sizeof(CryptoPlugin::SubSample) * numSubSamples"];
"1000261" -> "1000471"  [label="DDG: data.read(\n                    subSamples,\n sizeof(CryptoPlugin::SubSample) * numSubSamples)"];
"1000257" -> "1000261"  [label="DDG: subSamples"];
"1000263" -> "1000261"  [label="DDG: numSubSamples"];
"1000261" -> "1000378"  [label="DDG: subSamples"];
"1000261" -> "1000423"  [label="DDG: subSamples"];
"1000257" -> "1000209"  [label="AST: "];
"1000257" -> "1000259"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000259" -> "1000257"  [label="AST: "];
"1000262" -> "1000257"  [label="CFG: "];
"1000257" -> "1000471"  [label="DDG: new CryptoPlugin::SubSample[numSubSamples]"];
"1000259" -> "1000257"  [label="DDG: CryptoPlugin::SubSample"];
"1000259" -> "1000260"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000263" -> "1000266"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000266" -> "1000263"  [label="AST: "];
"1000253" -> "1000263"  [label="DDG: numSubSamples"];
"1000263" -> "1000301"  [label="DDG: numSubSamples"];
"1000253" -> "1000209"  [label="AST: "];
"1000253" -> "1000255"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000255" -> "1000253"  [label="AST: "];
"1000258" -> "1000253"  [label="CFG: "];
"1000253" -> "1000471"  [label="DDG: data.readInt32()"];
"1000316" -> "1000314"  [label="AST: "];
"1000316" -> "1000318"  [label="CFG: "];
"1000317" -> "1000316"  [label="AST: "];
"1000318" -> "1000316"  [label="AST: "];
"1000314" -> "1000316"  [label="CFG: "];
"1000316" -> "1000471"  [label="DDG: ss.mNumBytesOfEncryptedData"];
"1000316" -> "1000314"  [label="DDG: SIZE_MAX"];
"1000316" -> "1000314"  [label="DDG: ss.mNumBytesOfEncryptedData"];
"1000335" -> "1000316"  [label="DDG: SIZE_MAX"];
"1000316" -> "1000322"  [label="DDG: ss.mNumBytesOfEncryptedData"];
"1000316" -> "1000335"  [label="DDG: SIZE_MAX"];
"1000314" -> "1000313"  [label="AST: "];
"1000315" -> "1000314"  [label="AST: "];
"1000323" -> "1000314"  [label="CFG: "];
"1000330" -> "1000314"  [label="CFG: "];
"1000314" -> "1000471"  [label="DDG: SIZE_MAX - ss.mNumBytesOfEncryptedData"];
"1000314" -> "1000471"  [label="DDG: sumSubsampleSizes <= SIZE_MAX - ss.mNumBytesOfEncryptedData"];
"1000333" -> "1000314"  [label="DDG: sumSubsampleSizes"];
"1000289" -> "1000314"  [label="DDG: sumSubsampleSizes"];
"1000341" -> "1000314"  [label="DDG: sumSubsampleSizes"];
"1000314" -> "1000322"  [label="DDG: sumSubsampleSizes"];
"1000314" -> "1000333"  [label="DDG: sumSubsampleSizes"];
"1000322" -> "1000321"  [label="AST: "];
"1000322" -> "1000324"  [label="CFG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000324" -> "1000322"  [label="AST: "];
"1000334" -> "1000322"  [label="CFG: "];
"1000322" -> "1000471"  [label="DDG: ss.mNumBytesOfEncryptedData"];
"1000322" -> "1000333"  [label="DDG: sumSubsampleSizes"];
"1000333" -> "1000332"  [label="AST: "];
"1000333" -> "1000335"  [label="CFG: "];
"1000334" -> "1000333"  [label="AST: "];
"1000335" -> "1000333"  [label="AST: "];
"1000342" -> "1000333"  [label="CFG: "];
"1000349" -> "1000333"  [label="CFG: "];
"1000333" -> "1000471"  [label="DDG: sumSubsampleSizes"];
"1000333" -> "1000471"  [label="DDG: sumSubsampleSizes <= SIZE_MAX - ss.mNumBytesOfClearData"];
"1000333" -> "1000471"  [label="DDG: SIZE_MAX - ss.mNumBytesOfClearData"];
"1000335" -> "1000333"  [label="DDG: SIZE_MAX"];
"1000335" -> "1000333"  [label="DDG: ss.mNumBytesOfClearData"];
"1000333" -> "1000341"  [label="DDG: sumSubsampleSizes"];
"1000333" -> "1000354"  [label="DDG: sumSubsampleSizes"];
"1000341" -> "1000340"  [label="AST: "];
"1000341" -> "1000343"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="AST: "];
"1000305" -> "1000341"  [label="CFG: "];
"1000341" -> "1000471"  [label="DDG: ss.mNumBytesOfClearData"];
"1000341" -> "1000471"  [label="DDG: sumSubsampleSizes"];
"1000335" -> "1000341"  [label="DDG: ss.mNumBytesOfClearData"];
"1000341" -> "1000354"  [label="DDG: sumSubsampleSizes"];
"1000354" -> "1000352"  [label="AST: "];
"1000354" -> "1000356"  [label="CFG: "];
"1000355" -> "1000354"  [label="AST: "];
"1000356" -> "1000354"  [label="AST: "];
"1000352" -> "1000354"  [label="CFG: "];
"1000354" -> "1000471"  [label="DDG: totalSize"];
"1000354" -> "1000471"  [label="DDG: sumSubsampleSizes"];
"1000354" -> "1000352"  [label="DDG: sumSubsampleSizes"];
"1000354" -> "1000352"  [label="DDG: totalSize"];
"1000289" -> "1000354"  [label="DDG: sumSubsampleSizes"];
"1000283" -> "1000354"  [label="DDG: totalSize"];
"1000237" -> "1000354"  [label="DDG: totalSize"];
"1000354" -> "1000364"  [label="DDG: totalSize"];
"1000354" -> "1000365"  [label="DDG: totalSize"];
"1000354" -> "1000412"  [label="DDG: totalSize"];
"1000352" -> "1000351"  [label="AST: "];
"1000352" -> "1000353"  [label="CFG: "];
"1000353" -> "1000352"  [label="AST: "];
"1000359" -> "1000352"  [label="CFG: "];
"1000366" -> "1000352"  [label="CFG: "];
"1000352" -> "1000471"  [label="DDG: overflow"];
"1000352" -> "1000471"  [label="DDG: overflow || sumSubsampleSizes != totalSize"];
"1000352" -> "1000471"  [label="DDG: sumSubsampleSizes != totalSize"];
"1000348" -> "1000352"  [label="DDG: overflow"];
"1000293" -> "1000352"  [label="DDG: overflow"];
"1000329" -> "1000352"  [label="DDG: overflow"];
"1000364" -> "1000363"  [label="AST: "];
"1000364" -> "1000368"  [label="CFG: "];
"1000365" -> "1000364"  [label="AST: "];
"1000368" -> "1000364"  [label="AST: "];
"1000371" -> "1000364"  [label="CFG: "];
"1000377" -> "1000364"  [label="CFG: "];
"1000364" -> "1000471"  [label="DDG: offset + totalSize"];
"1000364" -> "1000471"  [label="DDG: offset + totalSize > sharedBuffer->size()"];
"1000364" -> "1000471"  [label="DDG: sharedBuffer->size()"];
"1000249" -> "1000364"  [label="DDG: offset"];
"1000283" -> "1000364"  [label="DDG: totalSize"];
"1000237" -> "1000364"  [label="DDG: totalSize"];
"1000365" -> "1000367"  [label="CFG: "];
"1000366" -> "1000365"  [label="AST: "];
"1000367" -> "1000365"  [label="AST: "];
"1000368" -> "1000365"  [label="CFG: "];
"1000365" -> "1000471"  [label="DDG: totalSize"];
"1000365" -> "1000471"  [label="DDG: offset"];
"1000249" -> "1000365"  [label="DDG: offset"];
"1000283" -> "1000365"  [label="DDG: totalSize"];
"1000237" -> "1000365"  [label="DDG: totalSize"];
"1000412" -> "1000410"  [label="AST: "];
"1000412" -> "1000414"  [label="CFG: "];
"1000413" -> "1000412"  [label="AST: "];
"1000414" -> "1000412"  [label="AST: "];
"1000410" -> "1000412"  [label="CFG: "];
"1000412" -> "1000471"  [label="DDG: totalSize"];
"1000412" -> "1000410"  [label="DDG: totalSize"];
"1000283" -> "1000412"  [label="DDG: totalSize"];
"1000237" -> "1000412"  [label="DDG: totalSize"];
"1000410" -> "1000409"  [label="AST: "];
"1000411" -> "1000410"  [label="AST: "];
"1000416" -> "1000410"  [label="CFG: "];
"1000410" -> "1000471"  [label="DDG: static_cast<ssize_t>(totalSize)"];
"1000410" -> "1000471"  [label="DDG: CHECK_LE(result, static_cast<ssize_t>(totalSize))"];
"1000406" -> "1000410"  [label="DDG: result"];
"1000410" -> "1000415"  [label="DDG: result"];
"1000415" -> "1000409"  [label="AST: "];
"1000415" -> "1000417"  [label="CFG: "];
"1000416" -> "1000415"  [label="AST: "];
"1000417" -> "1000415"  [label="AST: "];
"1000419" -> "1000415"  [label="CFG: "];
"1000415" -> "1000471"  [label="DDG: reply->write(dstPtr, result)"];
"1000415" -> "1000471"  [label="DDG: result"];
"1000281" -> "1000415"  [label="DDG: dstPtr"];
"1000415" -> "1000418"  [label="DDG: dstPtr"];
"1000418" -> "1000404"  [label="AST: "];
"1000418" -> "1000419"  [label="CFG: "];
"1000419" -> "1000418"  [label="AST: "];
"1000421" -> "1000418"  [label="CFG: "];
"1000281" -> "1000418"  [label="DDG: dstPtr"];
"1000335" -> "1000337"  [label="CFG: "];
"1000336" -> "1000335"  [label="AST: "];
"1000337" -> "1000335"  [label="AST: "];
"1000335" -> "1000471"  [label="DDG: SIZE_MAX"];
"1000335" -> "1000471"  [label="DDG: ss.mNumBytesOfClearData"];
}
