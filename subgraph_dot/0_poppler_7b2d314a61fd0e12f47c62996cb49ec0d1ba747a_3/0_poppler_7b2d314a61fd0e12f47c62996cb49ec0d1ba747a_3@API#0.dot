digraph "0_poppler_7b2d314a61fd0e12f47c62996cb49ec0d1ba747a_3@API" {
"1000342" [label="(Call,free (buffer))"];
"1000244" [label="(Call,cairo_image_surface_create_for_data (buffer, CAIRO_FORMAT_RGB24,\n\t\t\t\t\t\t width, height, width * 4))"];
"1000188" [label="(Call,buffer = (unsigned char *)gmallocn3 (width, height, 4))"];
"1000190" [label="(Call,(unsigned char *)gmallocn3 (width, height, 4))"];
"1000192" [label="(Call,gmallocn3 (width, height, 4))"];
"1000108" [label="(MethodParameterIn,int width)"];
"1000109" [label="(MethodParameterIn,int height)"];
"1000249" [label="(Call,width * 4)"];
"1000238" [label="(Call,colorMap->getRGBLine (pix, dest, width))"];
"1000235" [label="(Call,pix = imgStr->getLine())"];
"1000224" [label="(Call,dest = (unsigned int *) (buffer + y * 4 * width))"];
"1000226" [label="(Call,(unsigned int *) (buffer + y * 4 * width))"];
"1000230" [label="(Call,y * 4 * width)"];
"1000218" [label="(Call,y < height)"];
"1000215" [label="(Call,y = 0)"];
"1000221" [label="(Call,y++)"];
"1000232" [label="(Call,4 * width)"];
"1000342" [label="(Call,free (buffer))"];
"1000246" [label="(Identifier,CAIRO_FORMAT_RGB24)"];
"1000343" [label="(Identifier,buffer)"];
"1000250" [label="(Identifier,width)"];
"1000277" [label="(Call,printf (\"drawSoftMaskedImage %dx%d\n\", width, height))"];
"1000238" [label="(Call,colorMap->getRGBLine (pix, dest, width))"];
"1000251" [label="(Literal,4)"];
"1000241" [label="(Identifier,width)"];
"1000220" [label="(Identifier,height)"];
"1000223" [label="(Block,)"];
"1000232" [label="(Call,4 * width)"];
"1000224" [label="(Call,dest = (unsigned int *) (buffer + y * 4 * width))"];
"1000247" [label="(Identifier,width)"];
"1000194" [label="(Identifier,height)"];
"1000214" [label="(ControlStructure,for (y = 0; y < height; y++))"];
"1000189" [label="(Identifier,buffer)"];
"1000281" [label="(Call,cairo_matrix_init_translate (&matrix, 0, height))"];
"1000225" [label="(Identifier,dest)"];
"1000233" [label="(Literal,4)"];
"1000239" [label="(Identifier,pix)"];
"1000197" [label="(Identifier,imgStr)"];
"1000235" [label="(Call,pix = imgStr->getLine())"];
"1000218" [label="(Call,y < height)"];
"1000228" [label="(Call,buffer + y * 4 * width)"];
"1000348" [label="(MethodReturn,void)"];
"1000326" [label="(Call,cairo_rectangle (cairo_shape, 0., 0., width, height))"];
"1000215" [label="(Call,y = 0)"];
"1000216" [label="(Identifier,y)"];
"1000109" [label="(MethodParameterIn,int height)"];
"1000219" [label="(Identifier,y)"];
"1000345" [label="(Identifier,maskBuffer)"];
"1000222" [label="(Identifier,y)"];
"1000236" [label="(Identifier,pix)"];
"1000231" [label="(Identifier,y)"];
"1000190" [label="(Call,(unsigned char *)gmallocn3 (width, height, 4))"];
"1000248" [label="(Identifier,height)"];
"1000115" [label="(Block,)"];
"1000237" [label="(Call,imgStr->getLine())"];
"1000193" [label="(Identifier,width)"];
"1000188" [label="(Call,buffer = (unsigned char *)gmallocn3 (width, height, 4))"];
"1000244" [label="(Call,cairo_image_surface_create_for_data (buffer, CAIRO_FORMAT_RGB24,\n\t\t\t\t\t\t width, height, width * 4))"];
"1000249" [label="(Call,width * 4)"];
"1000192" [label="(Call,gmallocn3 (width, height, 4))"];
"1000240" [label="(Identifier,dest)"];
"1000217" [label="(Literal,0)"];
"1000234" [label="(Identifier,width)"];
"1000230" [label="(Call,y * 4 * width)"];
"1000221" [label="(Call,y++)"];
"1000245" [label="(Identifier,buffer)"];
"1000242" [label="(Call,image = cairo_image_surface_create_for_data (buffer, CAIRO_FORMAT_RGB24,\n\t\t\t\t\t\t width, height, width * 4))"];
"1000108" [label="(MethodParameterIn,int width)"];
"1000243" [label="(Identifier,image)"];
"1000195" [label="(Literal,4)"];
"1000286" [label="(Call,cairo_matrix_scale (&matrix, width, -height))"];
"1000226" [label="(Call,(unsigned int *) (buffer + y * 4 * width))"];
"1000290" [label="(Call,-height)"];
"1000342" -> "1000115"  [label="AST: "];
"1000342" -> "1000343"  [label="CFG: "];
"1000343" -> "1000342"  [label="AST: "];
"1000345" -> "1000342"  [label="CFG: "];
"1000342" -> "1000348"  [label="DDG: buffer"];
"1000244" -> "1000342"  [label="DDG: buffer"];
"1000244" -> "1000242"  [label="AST: "];
"1000244" -> "1000249"  [label="CFG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000246" -> "1000244"  [label="AST: "];
"1000247" -> "1000244"  [label="AST: "];
"1000248" -> "1000244"  [label="AST: "];
"1000249" -> "1000244"  [label="AST: "];
"1000242" -> "1000244"  [label="CFG: "];
"1000244" -> "1000348"  [label="DDG: height"];
"1000244" -> "1000348"  [label="DDG: buffer"];
"1000244" -> "1000348"  [label="DDG: CAIRO_FORMAT_RGB24"];
"1000244" -> "1000348"  [label="DDG: width"];
"1000244" -> "1000348"  [label="DDG: width * 4"];
"1000244" -> "1000242"  [label="DDG: height"];
"1000244" -> "1000242"  [label="DDG: width"];
"1000244" -> "1000242"  [label="DDG: width * 4"];
"1000244" -> "1000242"  [label="DDG: buffer"];
"1000244" -> "1000242"  [label="DDG: CAIRO_FORMAT_RGB24"];
"1000188" -> "1000244"  [label="DDG: buffer"];
"1000249" -> "1000244"  [label="DDG: width"];
"1000249" -> "1000244"  [label="DDG: 4"];
"1000108" -> "1000244"  [label="DDG: width"];
"1000218" -> "1000244"  [label="DDG: height"];
"1000109" -> "1000244"  [label="DDG: height"];
"1000244" -> "1000277"  [label="DDG: width"];
"1000244" -> "1000277"  [label="DDG: height"];
"1000188" -> "1000115"  [label="AST: "];
"1000188" -> "1000190"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000188"  [label="AST: "];
"1000197" -> "1000188"  [label="CFG: "];
"1000188" -> "1000348"  [label="DDG: (unsigned char *)gmallocn3 (width, height, 4)"];
"1000190" -> "1000188"  [label="DDG: gmallocn3 (width, height, 4)"];
"1000188" -> "1000226"  [label="DDG: buffer"];
"1000188" -> "1000228"  [label="DDG: buffer"];
"1000190" -> "1000192"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000192" -> "1000190"  [label="AST: "];
"1000190" -> "1000348"  [label="DDG: gmallocn3 (width, height, 4)"];
"1000192" -> "1000190"  [label="DDG: width"];
"1000192" -> "1000190"  [label="DDG: height"];
"1000192" -> "1000190"  [label="DDG: 4"];
"1000192" -> "1000195"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000194" -> "1000192"  [label="AST: "];
"1000195" -> "1000192"  [label="AST: "];
"1000108" -> "1000192"  [label="DDG: width"];
"1000109" -> "1000192"  [label="DDG: height"];
"1000192" -> "1000218"  [label="DDG: height"];
"1000192" -> "1000232"  [label="DDG: width"];
"1000192" -> "1000249"  [label="DDG: width"];
"1000108" -> "1000104"  [label="AST: "];
"1000108" -> "1000348"  [label="DDG: width"];
"1000108" -> "1000232"  [label="DDG: width"];
"1000108" -> "1000238"  [label="DDG: width"];
"1000108" -> "1000249"  [label="DDG: width"];
"1000108" -> "1000277"  [label="DDG: width"];
"1000108" -> "1000286"  [label="DDG: width"];
"1000108" -> "1000326"  [label="DDG: width"];
"1000109" -> "1000104"  [label="AST: "];
"1000109" -> "1000348"  [label="DDG: height"];
"1000109" -> "1000218"  [label="DDG: height"];
"1000109" -> "1000277"  [label="DDG: height"];
"1000109" -> "1000281"  [label="DDG: height"];
"1000109" -> "1000290"  [label="DDG: height"];
"1000109" -> "1000326"  [label="DDG: height"];
"1000249" -> "1000251"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000251" -> "1000249"  [label="AST: "];
"1000238" -> "1000249"  [label="DDG: width"];
"1000238" -> "1000223"  [label="AST: "];
"1000238" -> "1000241"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="AST: "];
"1000241" -> "1000238"  [label="AST: "];
"1000222" -> "1000238"  [label="CFG: "];
"1000238" -> "1000348"  [label="DDG: pix"];
"1000238" -> "1000348"  [label="DDG: dest"];
"1000238" -> "1000348"  [label="DDG: colorMap->getRGBLine (pix, dest, width)"];
"1000238" -> "1000232"  [label="DDG: width"];
"1000235" -> "1000238"  [label="DDG: pix"];
"1000224" -> "1000238"  [label="DDG: dest"];
"1000232" -> "1000238"  [label="DDG: width"];
"1000235" -> "1000223"  [label="AST: "];
"1000235" -> "1000237"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="AST: "];
"1000239" -> "1000235"  [label="CFG: "];
"1000235" -> "1000348"  [label="DDG: imgStr->getLine()"];
"1000224" -> "1000223"  [label="AST: "];
"1000224" -> "1000226"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000236" -> "1000224"  [label="CFG: "];
"1000224" -> "1000348"  [label="DDG: (unsigned int *) (buffer + y * 4 * width)"];
"1000226" -> "1000224"  [label="DDG: buffer + y * 4 * width"];
"1000226" -> "1000228"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000228" -> "1000226"  [label="AST: "];
"1000226" -> "1000348"  [label="DDG: buffer + y * 4 * width"];
"1000230" -> "1000226"  [label="DDG: y"];
"1000230" -> "1000226"  [label="DDG: 4 * width"];
"1000230" -> "1000228"  [label="AST: "];
"1000230" -> "1000232"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000232" -> "1000230"  [label="AST: "];
"1000228" -> "1000230"  [label="CFG: "];
"1000230" -> "1000348"  [label="DDG: 4 * width"];
"1000230" -> "1000221"  [label="DDG: y"];
"1000230" -> "1000228"  [label="DDG: y"];
"1000230" -> "1000228"  [label="DDG: 4 * width"];
"1000218" -> "1000230"  [label="DDG: y"];
"1000232" -> "1000230"  [label="DDG: 4"];
"1000232" -> "1000230"  [label="DDG: width"];
"1000218" -> "1000214"  [label="AST: "];
"1000218" -> "1000220"  [label="CFG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000220" -> "1000218"  [label="AST: "];
"1000225" -> "1000218"  [label="CFG: "];
"1000243" -> "1000218"  [label="CFG: "];
"1000218" -> "1000348"  [label="DDG: y"];
"1000218" -> "1000348"  [label="DDG: y < height"];
"1000215" -> "1000218"  [label="DDG: y"];
"1000221" -> "1000218"  [label="DDG: y"];
"1000215" -> "1000214"  [label="AST: "];
"1000215" -> "1000217"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000217" -> "1000215"  [label="AST: "];
"1000219" -> "1000215"  [label="CFG: "];
"1000221" -> "1000214"  [label="AST: "];
"1000221" -> "1000222"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000219" -> "1000221"  [label="CFG: "];
"1000232" -> "1000234"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000234" -> "1000232"  [label="AST: "];
}
