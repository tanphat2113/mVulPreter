digraph "0_Chrome_96dbafe288dbe2f0cc45fa3c39daf6d0c37acbab_37@API" {
"1000213" [label="(Call,copy = xsltCopyTreeList(ctxt, invocNode,\n\t\tnode->children, insert, 0, 0))"];
"1000215" [label="(Call,xsltCopyTreeList(ctxt, invocNode,\n\t\tnode->children, insert, 0, 0))"];
"1000115" [label="(MethodParameterIn,xsltTransformContextPtr ctxt)"];
"1000116" [label="(MethodParameterIn,xmlNodePtr invocNode)"];
"1000208" [label="(Call,node->children != NULL)"];
"1000124" [label="(Call,node == NULL)"];
"1000117" [label="(MethodParameterIn,xmlNodePtr node)"];
"1000118" [label="(MethodParameterIn,xmlNodePtr insert)"];
"1000228" [label="(Return,return(copy);)"];
"1000185" [label="(Call,xsltShallowCopyNsNode(ctxt, invocNode,\n\t\tinsert, (xmlNsPtr) node))"];
"1000217" [label="(Identifier,invocNode)"];
"1000324" [label="(Call,xmlGetNsList(node->doc, node))"];
"1000492" [label="(Call,xsltGetSpecialNamespace(ctxt, invocNode, NULL, NULL, copy))"];
"1000128" [label="(Identifier,NULL)"];
"1000370" [label="(Call,xmlSearchNsByHref(insert->doc,\n\t\t\t\tinsert, (*curns)->href))"];
"1000116" [label="(MethodParameterIn,xmlNodePtr invocNode)"];
"1000163" [label="(Call,xsltCopyTextString(ctxt, insert, node->content, 0))"];
"1000225" [label="(Call,copy = NULL)"];
"1000215" [label="(Call,xsltCopyTreeList(ctxt, invocNode,\n\t\tnode->children, insert, 0, 0))"];
"1000115" [label="(MethodParameterIn,xsltTransformContextPtr ctxt)"];
"1000201" [label="(Return,return(NULL);)"];
"1000127" [label="(Return,return(NULL);)"];
"1000213" [label="(Call,copy = xsltCopyTreeList(ctxt, invocNode,\n\t\tnode->children, insert, 0, 0))"];
"1000232" [label="(Call,xmlDocCopyNode(node, insert->doc, 0))"];
"1000204" [label="(Call,XSLT_IS_RES_TREE_FRAG(node))"];
"1000189" [label="(Call,(xmlNsPtr) node)"];
"1000214" [label="(Identifier,copy)"];
"1000216" [label="(Identifier,ctxt)"];
"1000209" [label="(Call,node->children)"];
"1000125" [label="(Identifier,node)"];
"1000229" [label="(Identifier,copy)"];
"1000154" [label="(Call,xsltCopyTextString(ctxt, insert, node->content, noenc))"];
"1000464" [label="(Call,xsltGetSpecialNamespace(ctxt, invocNode,\n\t\t\tnode->ns->href, node->ns->prefix, copy))"];
"1000206" [label="(Block,)"];
"1000131" [label="(Identifier,node)"];
"1000174" [label="(Call,xsltShallowCopyAttr(ctxt, invocNode, insert, (xmlAttrPtr) node))"];
"1000239" [label="(Call,copy != NULL)"];
"1000547" [label="(MethodReturn,RET)"];
"1000260" [label="(Call,xsltTransformError(ctxt, NULL, invocNode,\n            \"xsltCopyTreeInternal: Copying of '%s' failed.\n\", node->name))"];
"1000178" [label="(Call,(xmlAttrPtr) node)"];
"1000222" [label="(Literal,0)"];
"1000537" [label="(Call,xsltTransformError(ctxt, NULL, invocNode,\n\t    \"xsltCopyTreeInternal: Copying of '%s' failed.\n\", node->name))"];
"1000341" [label="(Call,xmlSearchNs(insert->doc, insert,\n\t\t\t    (*curns)->prefix))"];
"1000208" [label="(Call,node->children != NULL)"];
"1000218" [label="(Call,node->children)"];
"1000126" [label="(Identifier,NULL)"];
"1000526" [label="(Call,xsltCopyTreeList(ctxt, invocNode,\n\t\tnode->children, copy, isLRE, topElemVisited))"];
"1000223" [label="(Literal,0)"];
"1000212" [label="(Identifier,NULL)"];
"1000221" [label="(Identifier,insert)"];
"1000505" [label="(Call,xsltCopyAttrListNoOverwrite(ctxt, invocNode,\n\t\t    copy, node->properties))"];
"1000252" [label="(Call,xsltAddChild(insert, copy))"];
"1000207" [label="(ControlStructure,if (node->children != NULL))"];
"1000228" [label="(Return,return(copy);)"];
"1000118" [label="(MethodParameterIn,xmlNodePtr insert)"];
"1000434" [label="(Call,xsltCopyNamespaceList(ctxt, copy, node->nsDef))"];
"1000226" [label="(Identifier,copy)"];
"1000123" [label="(ControlStructure,if (node == NULL))"];
"1000124" [label="(Call,node == NULL)"];
"1000117" [label="(MethodParameterIn,xmlNodePtr node)"];
"1000213" -> "1000207"  [label="AST: "];
"1000213" -> "1000215"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000215" -> "1000213"  [label="AST: "];
"1000229" -> "1000213"  [label="CFG: "];
"1000213" -> "1000547"  [label="DDG: copy"];
"1000213" -> "1000547"  [label="DDG: xsltCopyTreeList(ctxt, invocNode,\n\t\tnode->children, insert, 0, 0)"];
"1000215" -> "1000213"  [label="DDG: node->children"];
"1000215" -> "1000213"  [label="DDG: invocNode"];
"1000215" -> "1000213"  [label="DDG: ctxt"];
"1000215" -> "1000213"  [label="DDG: 0"];
"1000215" -> "1000213"  [label="DDG: insert"];
"1000213" -> "1000228"  [label="DDG: copy"];
"1000215" -> "1000223"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000217" -> "1000215"  [label="AST: "];
"1000218" -> "1000215"  [label="AST: "];
"1000221" -> "1000215"  [label="AST: "];
"1000222" -> "1000215"  [label="AST: "];
"1000223" -> "1000215"  [label="AST: "];
"1000215" -> "1000547"  [label="DDG: insert"];
"1000215" -> "1000547"  [label="DDG: ctxt"];
"1000215" -> "1000547"  [label="DDG: invocNode"];
"1000215" -> "1000547"  [label="DDG: node->children"];
"1000115" -> "1000215"  [label="DDG: ctxt"];
"1000116" -> "1000215"  [label="DDG: invocNode"];
"1000208" -> "1000215"  [label="DDG: node->children"];
"1000118" -> "1000215"  [label="DDG: insert"];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000547"  [label="DDG: ctxt"];
"1000115" -> "1000154"  [label="DDG: ctxt"];
"1000115" -> "1000163"  [label="DDG: ctxt"];
"1000115" -> "1000174"  [label="DDG: ctxt"];
"1000115" -> "1000185"  [label="DDG: ctxt"];
"1000115" -> "1000260"  [label="DDG: ctxt"];
"1000115" -> "1000434"  [label="DDG: ctxt"];
"1000115" -> "1000464"  [label="DDG: ctxt"];
"1000115" -> "1000492"  [label="DDG: ctxt"];
"1000115" -> "1000505"  [label="DDG: ctxt"];
"1000115" -> "1000526"  [label="DDG: ctxt"];
"1000115" -> "1000537"  [label="DDG: ctxt"];
"1000116" -> "1000114"  [label="AST: "];
"1000116" -> "1000547"  [label="DDG: invocNode"];
"1000116" -> "1000174"  [label="DDG: invocNode"];
"1000116" -> "1000185"  [label="DDG: invocNode"];
"1000116" -> "1000260"  [label="DDG: invocNode"];
"1000116" -> "1000464"  [label="DDG: invocNode"];
"1000116" -> "1000492"  [label="DDG: invocNode"];
"1000116" -> "1000505"  [label="DDG: invocNode"];
"1000116" -> "1000526"  [label="DDG: invocNode"];
"1000116" -> "1000537"  [label="DDG: invocNode"];
"1000208" -> "1000207"  [label="AST: "];
"1000208" -> "1000212"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000212" -> "1000208"  [label="AST: "];
"1000214" -> "1000208"  [label="CFG: "];
"1000226" -> "1000208"  [label="CFG: "];
"1000208" -> "1000547"  [label="DDG: node->children"];
"1000208" -> "1000547"  [label="DDG: node->children != NULL"];
"1000208" -> "1000547"  [label="DDG: NULL"];
"1000124" -> "1000208"  [label="DDG: NULL"];
"1000208" -> "1000225"  [label="DDG: NULL"];
"1000124" -> "1000123"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000128" -> "1000124"  [label="CFG: "];
"1000131" -> "1000124"  [label="CFG: "];
"1000124" -> "1000547"  [label="DDG: NULL"];
"1000124" -> "1000547"  [label="DDG: node"];
"1000124" -> "1000547"  [label="DDG: node == NULL"];
"1000117" -> "1000124"  [label="DDG: node"];
"1000124" -> "1000127"  [label="DDG: NULL"];
"1000124" -> "1000178"  [label="DDG: node"];
"1000124" -> "1000189"  [label="DDG: node"];
"1000124" -> "1000201"  [label="DDG: NULL"];
"1000124" -> "1000204"  [label="DDG: node"];
"1000124" -> "1000239"  [label="DDG: NULL"];
"1000117" -> "1000114"  [label="AST: "];
"1000117" -> "1000547"  [label="DDG: node"];
"1000117" -> "1000178"  [label="DDG: node"];
"1000117" -> "1000189"  [label="DDG: node"];
"1000117" -> "1000204"  [label="DDG: node"];
"1000117" -> "1000232"  [label="DDG: node"];
"1000117" -> "1000324"  [label="DDG: node"];
"1000118" -> "1000114"  [label="AST: "];
"1000118" -> "1000547"  [label="DDG: insert"];
"1000118" -> "1000154"  [label="DDG: insert"];
"1000118" -> "1000163"  [label="DDG: insert"];
"1000118" -> "1000174"  [label="DDG: insert"];
"1000118" -> "1000185"  [label="DDG: insert"];
"1000118" -> "1000252"  [label="DDG: insert"];
"1000118" -> "1000341"  [label="DDG: insert"];
"1000118" -> "1000370"  [label="DDG: insert"];
"1000228" -> "1000206"  [label="AST: "];
"1000228" -> "1000229"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000547" -> "1000228"  [label="CFG: "];
"1000228" -> "1000547"  [label="DDG: <RET>"];
"1000229" -> "1000228"  [label="DDG: copy"];
"1000225" -> "1000228"  [label="DDG: copy"];
}
