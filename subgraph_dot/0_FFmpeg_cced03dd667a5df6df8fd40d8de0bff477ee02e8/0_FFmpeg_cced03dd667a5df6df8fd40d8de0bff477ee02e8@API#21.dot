digraph "0_FFmpeg_cced03dd667a5df6df8fd40d8de0bff477ee02e8@API" {
"1000241" [label="(Call,sizeof(ff_asf_guid) * 2)"];
"1000237" [label="(Call,AV_RL32(p + sizeof(ff_asf_guid) * 2 + 64))"];
"1000233" [label="(Call,mms->asf_packet_len = AV_RL32(p + sizeof(ff_asf_guid) * 2 + 64))"];
"1000248" [label="(Call,mms->asf_packet_len <= 0)"];
"1000247" [label="(Call,mms->asf_packet_len <= 0 || mms->asf_packet_len > sizeof(mms->in_buffer))"];
"1000253" [label="(Call,mms->asf_packet_len > sizeof(mms->in_buffer))"];
"1000262" [label="(Call,av_log(NULL, AV_LOG_ERROR,\n                           \"Corrupt stream (too large pkt_len %d)\n\",\n                           mms->asf_packet_len))"];
"1000238" [label="(Call,p + sizeof(ff_asf_guid) * 2 + 64)"];
"1000240" [label="(Call,sizeof(ff_asf_guid) * 2 + 64)"];
"1000249" [label="(Call,mms->asf_packet_len)"];
"1000265" [label="(Literal,\"Corrupt stream (too large pkt_len %d)\n\")"];
"1000247" [label="(Call,mms->asf_packet_len <= 0 || mms->asf_packet_len > sizeof(mms->in_buffer))"];
"1000244" [label="(Literal,2)"];
"1000223" [label="(Call,end - p)"];
"1000237" [label="(Call,AV_RL32(p + sizeof(ff_asf_guid) * 2 + 64))"];
"1000232" [label="(Block,)"];
"1000242" [label="(Call,sizeof(ff_asf_guid))"];
"1000264" [label="(Identifier,AV_LOG_ERROR)"];
"1000266" [label="(Call,mms->asf_packet_len)"];
"1000270" [label="(Identifier,AVERROR_INVALIDDATA)"];
"1000240" [label="(Call,sizeof(ff_asf_guid) * 2 + 64)"];
"1000253" [label="(Call,mms->asf_packet_len > sizeof(mms->in_buffer))"];
"1000255" [label="(Identifier,mms)"];
"1000520" [label="(Identifier,p)"];
"1000254" [label="(Call,mms->asf_packet_len)"];
"1000262" [label="(Call,av_log(NULL, AV_LOG_ERROR,\n                           \"Corrupt stream (too large pkt_len %d)\n\",\n                           mms->asf_packet_len))"];
"1000257" [label="(Call,sizeof(mms->in_buffer))"];
"1000263" [label="(Identifier,NULL)"];
"1000241" [label="(Call,sizeof(ff_asf_guid) * 2)"];
"1000246" [label="(ControlStructure,if (mms->asf_packet_len <= 0 || mms->asf_packet_len > sizeof(mms->in_buffer)))"];
"1000238" [label="(Call,p + sizeof(ff_asf_guid) * 2 + 64)"];
"1000524" [label="(MethodReturn,int)"];
"1000239" [label="(Identifier,p)"];
"1000261" [label="(Block,)"];
"1000245" [label="(Literal,64)"];
"1000233" [label="(Call,mms->asf_packet_len = AV_RL32(p + sizeof(ff_asf_guid) * 2 + 64))"];
"1000234" [label="(Call,mms->asf_packet_len)"];
"1000252" [label="(Literal,0)"];
"1000250" [label="(Identifier,mms)"];
"1000248" [label="(Call,mms->asf_packet_len <= 0)"];
"1000241" -> "1000240"  [label="AST: "];
"1000241" -> "1000244"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000244" -> "1000241"  [label="AST: "];
"1000245" -> "1000241"  [label="CFG: "];
"1000241" -> "1000237"  [label="DDG: "];
"1000241" -> "1000238"  [label="DDG: "];
"1000241" -> "1000240"  [label="DDG: "];
"1000237" -> "1000233"  [label="AST: "];
"1000237" -> "1000238"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000233" -> "1000237"  [label="CFG: "];
"1000237" -> "1000524"  [label="DDG: "];
"1000237" -> "1000233"  [label="DDG: "];
"1000223" -> "1000237"  [label="DDG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000234" -> "1000233"  [label="AST: "];
"1000250" -> "1000233"  [label="CFG: "];
"1000233" -> "1000524"  [label="DDG: "];
"1000233" -> "1000248"  [label="DDG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000248" -> "1000252"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000252" -> "1000248"  [label="AST: "];
"1000255" -> "1000248"  [label="CFG: "];
"1000247" -> "1000248"  [label="CFG: "];
"1000248" -> "1000524"  [label="DDG: "];
"1000248" -> "1000247"  [label="DDG: "];
"1000248" -> "1000247"  [label="DDG: "];
"1000248" -> "1000253"  [label="DDG: "];
"1000248" -> "1000262"  [label="DDG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000247" -> "1000253"  [label="CFG: "];
"1000253" -> "1000247"  [label="AST: "];
"1000263" -> "1000247"  [label="CFG: "];
"1000520" -> "1000247"  [label="CFG: "];
"1000247" -> "1000524"  [label="DDG: "];
"1000247" -> "1000524"  [label="DDG: "];
"1000247" -> "1000524"  [label="DDG: "];
"1000253" -> "1000247"  [label="DDG: "];
"1000253" -> "1000257"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000257" -> "1000253"  [label="AST: "];
"1000253" -> "1000524"  [label="DDG: "];
"1000253" -> "1000262"  [label="DDG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000262" -> "1000266"  [label="CFG: "];
"1000263" -> "1000262"  [label="AST: "];
"1000264" -> "1000262"  [label="AST: "];
"1000265" -> "1000262"  [label="AST: "];
"1000266" -> "1000262"  [label="AST: "];
"1000270" -> "1000262"  [label="CFG: "];
"1000262" -> "1000524"  [label="DDG: "];
"1000262" -> "1000524"  [label="DDG: "];
"1000262" -> "1000524"  [label="DDG: "];
"1000262" -> "1000524"  [label="DDG: "];
"1000238" -> "1000240"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="AST: "];
"1000238" -> "1000524"  [label="DDG: "];
"1000238" -> "1000524"  [label="DDG: "];
"1000223" -> "1000238"  [label="DDG: "];
"1000240" -> "1000245"  [label="CFG: "];
"1000245" -> "1000240"  [label="AST: "];
"1000240" -> "1000524"  [label="DDG: "];
}
