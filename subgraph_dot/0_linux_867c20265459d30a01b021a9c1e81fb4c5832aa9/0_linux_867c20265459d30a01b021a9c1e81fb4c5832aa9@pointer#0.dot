digraph "0_linux_867c20265459d30a01b021a9c1e81fb4c5832aa9@pointer" {
"1000102" [label="(MethodParameterIn,char *args)"];
"1000129" [label="(Call,security_filter_rule_init(entry->lsm[lsm_rule].type,\n \t\t\t\t\t   Audit_equal, args,\n \t\t\t\t\t   &entry->lsm[lsm_rule].rule))"];
"1000127" [label="(Call,result = security_filter_rule_init(entry->lsm[lsm_rule].type,\n \t\t\t\t\t   Audit_equal, args,\n \t\t\t\t\t   &entry->lsm[lsm_rule].rule))"];
"1000159" [label="(Return,return result;)"];
"1000137" [label="(Identifier,Audit_equal)"];
"1000152" [label="(Identifier,entry)"];
"1000130" [label="(Call,entry->lsm[lsm_rule].type)"];
"1000127" [label="(Call,result = security_filter_rule_init(entry->lsm[lsm_rule].type,\n \t\t\t\t\t   Audit_equal, args,\n \t\t\t\t\t   &entry->lsm[lsm_rule].rule))"];
"1000139" [label="(Call,&entry->lsm[lsm_rule].rule)"];
"1000128" [label="(Identifier,result)"];
"1000159" [label="(Return,return result;)"];
"1000160" [label="(Identifier,result)"];
"1000102" [label="(MethodParameterIn,char *args)"];
"1000138" [label="(Identifier,args)"];
"1000118" [label="(Call,entry->lsm[lsm_rule].type = audit_type)"];
"1000161" [label="(MethodReturn,static int)"];
"1000105" [label="(Block,)"];
"1000129" [label="(Call,security_filter_rule_init(entry->lsm[lsm_rule].type,\n \t\t\t\t\t   Audit_equal, args,\n \t\t\t\t\t   &entry->lsm[lsm_rule].rule))"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000161"  [label="DDG: args"];
"1000102" -> "1000129"  [label="DDG: args"];
"1000129" -> "1000127"  [label="AST: "];
"1000129" -> "1000139"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000137" -> "1000129"  [label="AST: "];
"1000138" -> "1000129"  [label="AST: "];
"1000139" -> "1000129"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000129" -> "1000161"  [label="DDG: &entry->lsm[lsm_rule].rule"];
"1000129" -> "1000161"  [label="DDG: Audit_equal"];
"1000129" -> "1000161"  [label="DDG: entry->lsm[lsm_rule].type"];
"1000129" -> "1000161"  [label="DDG: args"];
"1000129" -> "1000127"  [label="DDG: entry->lsm[lsm_rule].type"];
"1000129" -> "1000127"  [label="DDG: Audit_equal"];
"1000129" -> "1000127"  [label="DDG: args"];
"1000129" -> "1000127"  [label="DDG: &entry->lsm[lsm_rule].rule"];
"1000118" -> "1000129"  [label="DDG: entry->lsm[lsm_rule].type"];
"1000127" -> "1000105"  [label="AST: "];
"1000128" -> "1000127"  [label="AST: "];
"1000152" -> "1000127"  [label="CFG: "];
"1000127" -> "1000161"  [label="DDG: security_filter_rule_init(entry->lsm[lsm_rule].type,\n \t\t\t\t\t   Audit_equal, args,\n \t\t\t\t\t   &entry->lsm[lsm_rule].rule)"];
"1000127" -> "1000161"  [label="DDG: result"];
"1000127" -> "1000159"  [label="DDG: result"];
"1000159" -> "1000105"  [label="AST: "];
"1000159" -> "1000160"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000161" -> "1000159"  [label="CFG: "];
"1000159" -> "1000161"  [label="DDG: <RET>"];
"1000160" -> "1000159"  [label="DDG: result"];
}
