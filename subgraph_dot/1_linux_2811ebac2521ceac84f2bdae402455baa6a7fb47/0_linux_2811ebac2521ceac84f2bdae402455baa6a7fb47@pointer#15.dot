digraph "0_linux_2811ebac2521ceac84f2bdae402455baa6a7fb47@pointer" {
"1000628" [label="(Call,ipv6_local_error(sk, EMSGSIZE, fl6, mtu-exthdrlen))"];
"1000137" [label="(Call,inet6_sk(sk))"];
"1000132" [label="(Call,inet_sk(sk))"];
"1000116" [label="(MethodParameterIn,struct sock *sk)"];
"1000538" [label="(Call,fl6 = &inet->cork.fl.u.ip6)"];
"1000124" [label="(MethodParameterIn,struct flowi6 *fl6)"];
"1000632" [label="(Call,mtu-exthdrlen)"];
"1000607" [label="(Call,mtu <= sizeof(struct ipv6hdr) + IPV6_MAXPLEN)"];
"1000598" [label="(Call,mtu - fragheaderlen)"];
"1000566" [label="(Call,mtu = cork->fragsize)"];
"1000467" [label="(Call,np->frag_size < mtu)"];
"1000445" [label="(Call,mtu = np->pmtudisc == IPV6_PMTUDISC_PROBE ?\n\t\t\t      rt->dst.dev->mtu : dst_mtu(rt->dst.path))"];
"1000460" [label="(Call,dst_mtu(rt->dst.path))"];
"1000424" [label="(Call,mtu = np->pmtudisc == IPV6_PMTUDISC_PROBE ?\n\t\t\t      rt->dst.dev->mtu : dst_mtu(&rt->dst))"];
"1000439" [label="(Call,dst_mtu(&rt->dst))"];
"1000377" [label="(Call,dst_hold(&rt->dst))"];
"1000477" [label="(Call,mtu = np->frag_size)"];
"1000579" [label="(Call,fragheaderlen = sizeof(struct ipv6hdr) + rt->rt6i_nfheader_len +\n\t\t\t(opt ? opt->opt_nflen : 0))"];
"1000520" [label="(Call,rt->dst.header_len - rt->rt6i_nfheader_len)"];
"1000123" [label="(MethodParameterIn,struct ipv6_txoptions *opt)"];
"1000560" [label="(Call,exthdrlen = 0)"];
"1000504" [label="(Call,exthdrlen = (opt ? opt->opt_flen : 0))"];
"1000636" [label="(Call,-EMSGSIZE)"];
"1000635" [label="(Return,return -EMSGSIZE;)"];
"1000607" [label="(Call,mtu <= sizeof(struct ipv6hdr) + IPV6_MAXPLEN)"];
"1000137" [label="(Call,inet6_sk(sk))"];
"1000471" [label="(Identifier,mtu)"];
"1000598" [label="(Call,mtu - fragheaderlen)"];
"1001325" [label="(Call,sock_net(sk))"];
"1000484" [label="(Identifier,cork)"];
"1000467" [label="(Call,np->frag_size < mtu)"];
"1000488" [label="(Call,dst_allfrag(rt->dst.path))"];
"1000133" [label="(Identifier,sk)"];
"1000116" [label="(MethodParameterIn,struct sock *sk)"];
"1000632" [label="(Call,mtu-exthdrlen)"];
"1000567" [label="(Identifier,mtu)"];
"1000635" [label="(Return,return -EMSGSIZE;)"];
"1000124" [label="(MethodParameterIn,struct flowi6 *fl6)"];
"1000469" [label="(Identifier,np)"];
"1000602" [label="(Call,fragheaderlen - sizeof(struct frag_hdr))"];
"1000628" [label="(Call,ipv6_local_error(sk, EMSGSIZE, fl6, mtu-exthdrlen))"];
"1000584" [label="(Call,rt->rt6i_nfheader_len +\n\t\t\t(opt ? opt->opt_nflen : 0))"];
"1000512" [label="(Call,length += exthdrlen)"];
"1000138" [label="(Identifier,sk)"];
"1000445" [label="(Call,mtu = np->pmtudisc == IPV6_PMTUDISC_PROBE ?\n\t\t\t      rt->dst.dev->mtu : dst_mtu(rt->dst.path))"];
"1000911" [label="(Call,sock_alloc_send_skb(sk,\n\t\t\t\t\t\talloclen + hh_len,\n\t\t\t\t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000562" [label="(Literal,0)"];
"1000637" [label="(Identifier,EMSGSIZE)"];
"1000515" [label="(Call,transhdrlen += exthdrlen)"];
"1000461" [label="(Call,rt->dst.path)"];
"1000123" [label="(MethodParameterIn,struct ipv6_txoptions *opt)"];
"1000618" [label="(Identifier,cork)"];
"1001190" [label="(Call,sk_page_frag_refill(sk, pfrag))"];
"1000181" [label="(Block,)"];
"1000572" [label="(Identifier,hh_len)"];
"1000678" [label="(Call,mtu-exthdrlen)"];
"1000477" [label="(Call,mtu = np->frag_size)"];
"1000506" [label="(Call,opt ? opt->opt_flen : 0)"];
"1000654" [label="(Call,length > mtu)"];
"1000550" [label="(Call,opt = np->cork.opt)"];
"1000539" [label="(Identifier,fl6)"];
"1000473" [label="(ControlStructure,if (np->frag_size))"];
"1000520" [label="(Call,rt->dst.header_len - rt->rt6i_nfheader_len)"];
"1000377" [label="(Call,dst_hold(&rt->dst))"];
"1000444" [label="(ControlStructure,else)"];
"1000608" [label="(Identifier,mtu)"];
"1000460" [label="(Call,dst_mtu(rt->dst.path))"];
"1000627" [label="(Block,)"];
"1000482" [label="(Call,cork->fragsize = mtu)"];
"1000701" [label="(Call,ip6_ufo_append_data(sk, getfrag, from, length,\n\t\t\t\t\t\t  hh_len, fragheaderlen,\n\t\t\t\t\t\t  transhdrlen, mtu, flags, rt))"];
"1000597" [label="(Call,(mtu - fragheaderlen) & ~7)"];
"1000130" [label="(Call,*inet = inet_sk(sk))"];
"1000629" [label="(Identifier,sk)"];
"1000634" [label="(Identifier,exthdrlen)"];
"1000521" [label="(Call,rt->dst.header_len)"];
"1000530" [label="(Block,)"];
"1000609" [label="(Call,sizeof(struct ipv6hdr) + IPV6_MAXPLEN)"];
"1000561" [label="(Identifier,exthdrlen)"];
"1000633" [label="(Identifier,mtu)"];
"1001009" [label="(Call,skb_set_network_header(skb, exthdrlen))"];
"1001182" [label="(Call,sk_page_frag(sk))"];
"1000526" [label="(Call,rt->rt6i_nfheader_len)"];
"1000641" [label="(Identifier,sk)"];
"1000566" [label="(Call,mtu = cork->fragsize)"];
"1000538" [label="(Call,fl6 = &inet->cork.fl.u.ip6)"];
"1000600" [label="(Identifier,fragheaderlen)"];
"1000595" [label="(Identifier,maxfraglen)"];
"1000424" [label="(Call,mtu = np->pmtudisc == IPV6_PMTUDISC_PROBE ?\n\t\t\t      rt->dst.dev->mtu : dst_mtu(&rt->dst))"];
"1000426" [label="(Call,np->pmtudisc == IPV6_PMTUDISC_PROBE ?\n\t\t\t      rt->dst.dev->mtu : dst_mtu(&rt->dst))"];
"1000606" [label="(ControlStructure,if (mtu <= sizeof(struct ipv6hdr) + IPV6_MAXPLEN))"];
"1000940" [label="(Call,sock_wmalloc(sk,\n\t\t\t\t\t\t\t   alloclen + hh_len, 1,\n\t\t\t\t\t\t\t   sk->sk_allocation))"];
"1000560" [label="(Call,exthdrlen = 0)"];
"1000644" [label="(Call,sock_tx_timestamp(sk, &tx_flags))"];
"1000440" [label="(Call,&rt->dst)"];
"1000601" [label="(Identifier,~7)"];
"1000504" [label="(Call,exthdrlen = (opt ? opt->opt_flen : 0))"];
"1000675" [label="(Call,ipv6_local_rxpmtu(sk, fl6, mtu-exthdrlen))"];
"1000447" [label="(Call,np->pmtudisc == IPV6_PMTUDISC_PROBE ?\n\t\t\t      rt->dst.dev->mtu : dst_mtu(rt->dst.path))"];
"1000631" [label="(Identifier,fl6)"];
"1000384" [label="(Identifier,cork)"];
"1000466" [label="(ControlStructure,if (np->frag_size < mtu))"];
"1000630" [label="(Identifier,EMSGSIZE)"];
"1000128" [label="(Block,)"];
"1000599" [label="(Identifier,mtu)"];
"1000551" [label="(Identifier,opt)"];
"1000540" [label="(Call,&inet->cork.fl.u.ip6)"];
"1000479" [label="(Call,np->frag_size)"];
"1000518" [label="(Call,dst_exthdrlen = rt->dst.header_len - rt->rt6i_nfheader_len)"];
"1000425" [label="(Identifier,mtu)"];
"1000439" [label="(Call,dst_mtu(&rt->dst))"];
"1000636" [label="(Call,-EMSGSIZE)"];
"1000564" [label="(Identifier,dst_exthdrlen)"];
"1000513" [label="(Identifier,length)"];
"1000581" [label="(Call,sizeof(struct ipv6hdr) + rt->rt6i_nfheader_len +\n\t\t\t(opt ? opt->opt_nflen : 0))"];
"1000478" [label="(Identifier,mtu)"];
"1000475" [label="(Identifier,np)"];
"1000132" [label="(Call,inet_sk(sk))"];
"1000446" [label="(Identifier,mtu)"];
"1000568" [label="(Call,cork->fragsize)"];
"1000579" [label="(Call,fragheaderlen = sizeof(struct ipv6hdr) + rt->rt6i_nfheader_len +\n\t\t\t(opt ? opt->opt_nflen : 0))"];
"1000505" [label="(Identifier,exthdrlen)"];
"1000580" [label="(Identifier,fragheaderlen)"];
"1000416" [label="(ControlStructure,if (rt->dst.flags & DST_XFRM_TUNNEL))"];
"1000382" [label="(Call,cork->dst = &rt->dst)"];
"1001333" [label="(MethodReturn,int)"];
"1000588" [label="(Call,opt ? opt->opt_nflen : 0)"];
"1000468" [label="(Call,np->frag_size)"];
"1000135" [label="(Call,*np = inet6_sk(sk))"];
"1000378" [label="(Call,&rt->dst)"];
"1000628" -> "1000627"  [label="AST: "];
"1000628" -> "1000632"  [label="CFG: "];
"1000629" -> "1000628"  [label="AST: "];
"1000630" -> "1000628"  [label="AST: "];
"1000631" -> "1000628"  [label="AST: "];
"1000632" -> "1000628"  [label="AST: "];
"1000637" -> "1000628"  [label="CFG: "];
"1000628" -> "1001333"  [label="DDG: sk"];
"1000628" -> "1001333"  [label="DDG: mtu-exthdrlen"];
"1000628" -> "1001333"  [label="DDG: fl6"];
"1000628" -> "1001333"  [label="DDG: ipv6_local_error(sk, EMSGSIZE, fl6, mtu-exthdrlen)"];
"1000137" -> "1000628"  [label="DDG: sk"];
"1000116" -> "1000628"  [label="DDG: sk"];
"1000538" -> "1000628"  [label="DDG: fl6"];
"1000124" -> "1000628"  [label="DDG: fl6"];
"1000632" -> "1000628"  [label="DDG: mtu"];
"1000632" -> "1000628"  [label="DDG: exthdrlen"];
"1000628" -> "1000636"  [label="DDG: EMSGSIZE"];
"1000137" -> "1000135"  [label="AST: "];
"1000137" -> "1000138"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000137" -> "1001333"  [label="DDG: sk"];
"1000137" -> "1000135"  [label="DDG: sk"];
"1000132" -> "1000137"  [label="DDG: sk"];
"1000116" -> "1000137"  [label="DDG: sk"];
"1000137" -> "1000644"  [label="DDG: sk"];
"1000137" -> "1000675"  [label="DDG: sk"];
"1000137" -> "1000701"  [label="DDG: sk"];
"1000137" -> "1000911"  [label="DDG: sk"];
"1000137" -> "1000940"  [label="DDG: sk"];
"1000137" -> "1001182"  [label="DDG: sk"];
"1000137" -> "1001325"  [label="DDG: sk"];
"1000132" -> "1000130"  [label="AST: "];
"1000132" -> "1000133"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000132" -> "1000130"  [label="DDG: sk"];
"1000116" -> "1000132"  [label="DDG: sk"];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1001333"  [label="DDG: sk"];
"1000116" -> "1000644"  [label="DDG: sk"];
"1000116" -> "1000675"  [label="DDG: sk"];
"1000116" -> "1000701"  [label="DDG: sk"];
"1000116" -> "1000911"  [label="DDG: sk"];
"1000116" -> "1000940"  [label="DDG: sk"];
"1000116" -> "1001182"  [label="DDG: sk"];
"1000116" -> "1001190"  [label="DDG: sk"];
"1000116" -> "1001325"  [label="DDG: sk"];
"1000538" -> "1000530"  [label="AST: "];
"1000538" -> "1000540"  [label="CFG: "];
"1000539" -> "1000538"  [label="AST: "];
"1000540" -> "1000538"  [label="AST: "];
"1000551" -> "1000538"  [label="CFG: "];
"1000538" -> "1001333"  [label="DDG: &inet->cork.fl.u.ip6"];
"1000538" -> "1001333"  [label="DDG: fl6"];
"1000124" -> "1000538"  [label="DDG: fl6"];
"1000538" -> "1000675"  [label="DDG: fl6"];
"1000124" -> "1000115"  [label="AST: "];
"1000124" -> "1001333"  [label="DDG: fl6"];
"1000124" -> "1000675"  [label="DDG: fl6"];
"1000632" -> "1000634"  [label="CFG: "];
"1000633" -> "1000632"  [label="AST: "];
"1000634" -> "1000632"  [label="AST: "];
"1000632" -> "1001333"  [label="DDG: mtu"];
"1000632" -> "1001333"  [label="DDG: exthdrlen"];
"1000607" -> "1000632"  [label="DDG: mtu"];
"1000560" -> "1000632"  [label="DDG: exthdrlen"];
"1000504" -> "1000632"  [label="DDG: exthdrlen"];
"1000607" -> "1000606"  [label="AST: "];
"1000607" -> "1000609"  [label="CFG: "];
"1000608" -> "1000607"  [label="AST: "];
"1000609" -> "1000607"  [label="AST: "];
"1000618" -> "1000607"  [label="CFG: "];
"1000641" -> "1000607"  [label="CFG: "];
"1000607" -> "1001333"  [label="DDG: mtu <= sizeof(struct ipv6hdr) + IPV6_MAXPLEN"];
"1000607" -> "1001333"  [label="DDG: sizeof(struct ipv6hdr) + IPV6_MAXPLEN"];
"1000598" -> "1000607"  [label="DDG: mtu"];
"1000607" -> "1000654"  [label="DDG: mtu"];
"1000598" -> "1000597"  [label="AST: "];
"1000598" -> "1000600"  [label="CFG: "];
"1000599" -> "1000598"  [label="AST: "];
"1000600" -> "1000598"  [label="AST: "];
"1000601" -> "1000598"  [label="CFG: "];
"1000598" -> "1000597"  [label="DDG: mtu"];
"1000598" -> "1000597"  [label="DDG: fragheaderlen"];
"1000566" -> "1000598"  [label="DDG: mtu"];
"1000467" -> "1000598"  [label="DDG: mtu"];
"1000477" -> "1000598"  [label="DDG: mtu"];
"1000579" -> "1000598"  [label="DDG: fragheaderlen"];
"1000598" -> "1000602"  [label="DDG: fragheaderlen"];
"1000566" -> "1000530"  [label="AST: "];
"1000566" -> "1000568"  [label="CFG: "];
"1000567" -> "1000566"  [label="AST: "];
"1000568" -> "1000566"  [label="AST: "];
"1000572" -> "1000566"  [label="CFG: "];
"1000566" -> "1001333"  [label="DDG: cork->fragsize"];
"1000467" -> "1000466"  [label="AST: "];
"1000467" -> "1000471"  [label="CFG: "];
"1000468" -> "1000467"  [label="AST: "];
"1000471" -> "1000467"  [label="AST: "];
"1000475" -> "1000467"  [label="CFG: "];
"1000484" -> "1000467"  [label="CFG: "];
"1000467" -> "1001333"  [label="DDG: np->frag_size"];
"1000467" -> "1001333"  [label="DDG: np->frag_size < mtu"];
"1000445" -> "1000467"  [label="DDG: mtu"];
"1000424" -> "1000467"  [label="DDG: mtu"];
"1000467" -> "1000477"  [label="DDG: np->frag_size"];
"1000467" -> "1000482"  [label="DDG: mtu"];
"1000445" -> "1000444"  [label="AST: "];
"1000445" -> "1000447"  [label="CFG: "];
"1000446" -> "1000445"  [label="AST: "];
"1000447" -> "1000445"  [label="AST: "];
"1000469" -> "1000445"  [label="CFG: "];
"1000445" -> "1001333"  [label="DDG: np->pmtudisc == IPV6_PMTUDISC_PROBE ?\n\t\t\t      rt->dst.dev->mtu : dst_mtu(rt->dst.path)"];
"1000460" -> "1000445"  [label="DDG: rt->dst.path"];
"1000460" -> "1000447"  [label="AST: "];
"1000460" -> "1000461"  [label="CFG: "];
"1000461" -> "1000460"  [label="AST: "];
"1000447" -> "1000460"  [label="CFG: "];
"1000460" -> "1000447"  [label="DDG: rt->dst.path"];
"1000460" -> "1000488"  [label="DDG: rt->dst.path"];
"1000424" -> "1000416"  [label="AST: "];
"1000424" -> "1000426"  [label="CFG: "];
"1000425" -> "1000424"  [label="AST: "];
"1000426" -> "1000424"  [label="AST: "];
"1000469" -> "1000424"  [label="CFG: "];
"1000424" -> "1001333"  [label="DDG: np->pmtudisc == IPV6_PMTUDISC_PROBE ?\n\t\t\t      rt->dst.dev->mtu : dst_mtu(&rt->dst)"];
"1000439" -> "1000424"  [label="DDG: &rt->dst"];
"1000439" -> "1000426"  [label="AST: "];
"1000439" -> "1000440"  [label="CFG: "];
"1000440" -> "1000439"  [label="AST: "];
"1000426" -> "1000439"  [label="CFG: "];
"1000439" -> "1001333"  [label="DDG: &rt->dst"];
"1000439" -> "1000426"  [label="DDG: &rt->dst"];
"1000377" -> "1000439"  [label="DDG: &rt->dst"];
"1000377" -> "1000181"  [label="AST: "];
"1000377" -> "1000378"  [label="CFG: "];
"1000378" -> "1000377"  [label="AST: "];
"1000384" -> "1000377"  [label="CFG: "];
"1000377" -> "1001333"  [label="DDG: dst_hold(&rt->dst)"];
"1000377" -> "1000382"  [label="DDG: &rt->dst"];
"1000477" -> "1000473"  [label="AST: "];
"1000477" -> "1000479"  [label="CFG: "];
"1000478" -> "1000477"  [label="AST: "];
"1000479" -> "1000477"  [label="AST: "];
"1000484" -> "1000477"  [label="CFG: "];
"1000477" -> "1001333"  [label="DDG: np->frag_size"];
"1000477" -> "1000482"  [label="DDG: mtu"];
"1000579" -> "1000128"  [label="AST: "];
"1000579" -> "1000581"  [label="CFG: "];
"1000580" -> "1000579"  [label="AST: "];
"1000581" -> "1000579"  [label="AST: "];
"1000595" -> "1000579"  [label="CFG: "];
"1000579" -> "1001333"  [label="DDG: sizeof(struct ipv6hdr) + rt->rt6i_nfheader_len +\n\t\t\t(opt ? opt->opt_nflen : 0)"];
"1000520" -> "1000579"  [label="DDG: rt->rt6i_nfheader_len"];
"1000123" -> "1000579"  [label="DDG: opt"];
"1000520" -> "1000518"  [label="AST: "];
"1000520" -> "1000526"  [label="CFG: "];
"1000521" -> "1000520"  [label="AST: "];
"1000526" -> "1000520"  [label="AST: "];
"1000518" -> "1000520"  [label="CFG: "];
"1000520" -> "1001333"  [label="DDG: rt->dst.header_len"];
"1000520" -> "1000518"  [label="DDG: rt->dst.header_len"];
"1000520" -> "1000518"  [label="DDG: rt->rt6i_nfheader_len"];
"1000520" -> "1000581"  [label="DDG: rt->rt6i_nfheader_len"];
"1000520" -> "1000584"  [label="DDG: rt->rt6i_nfheader_len"];
"1000123" -> "1000115"  [label="AST: "];
"1000123" -> "1001333"  [label="DDG: opt"];
"1000123" -> "1000504"  [label="DDG: opt"];
"1000123" -> "1000506"  [label="DDG: opt"];
"1000123" -> "1000550"  [label="DDG: opt"];
"1000123" -> "1000581"  [label="DDG: opt"];
"1000123" -> "1000584"  [label="DDG: opt"];
"1000123" -> "1000588"  [label="DDG: opt"];
"1000560" -> "1000530"  [label="AST: "];
"1000560" -> "1000562"  [label="CFG: "];
"1000561" -> "1000560"  [label="AST: "];
"1000562" -> "1000560"  [label="AST: "];
"1000564" -> "1000560"  [label="CFG: "];
"1000560" -> "1001333"  [label="DDG: exthdrlen"];
"1000560" -> "1000678"  [label="DDG: exthdrlen"];
"1000560" -> "1001009"  [label="DDG: exthdrlen"];
"1000504" -> "1000181"  [label="AST: "];
"1000504" -> "1000506"  [label="CFG: "];
"1000505" -> "1000504"  [label="AST: "];
"1000506" -> "1000504"  [label="AST: "];
"1000513" -> "1000504"  [label="CFG: "];
"1000504" -> "1001333"  [label="DDG: opt ? opt->opt_flen : 0"];
"1000504" -> "1000512"  [label="DDG: exthdrlen"];
"1000504" -> "1000515"  [label="DDG: exthdrlen"];
"1000504" -> "1000678"  [label="DDG: exthdrlen"];
"1000504" -> "1001009"  [label="DDG: exthdrlen"];
"1000636" -> "1000635"  [label="AST: "];
"1000636" -> "1000637"  [label="CFG: "];
"1000637" -> "1000636"  [label="AST: "];
"1000635" -> "1000636"  [label="CFG: "];
"1000636" -> "1001333"  [label="DDG: EMSGSIZE"];
"1000636" -> "1001333"  [label="DDG: -EMSGSIZE"];
"1000636" -> "1000635"  [label="DDG: -EMSGSIZE"];
"1000635" -> "1000627"  [label="AST: "];
"1001333" -> "1000635"  [label="CFG: "];
"1000635" -> "1001333"  [label="DDG: <RET>"];
}
