digraph "0_suricata_843d0b7a10bb45627f94764a6c5d468a24143345_1@pointer" {
"1001123" [label="(Call,SCLogDebug(\"ssn %p: default case\", ssn))"];
"1000138" [label="(Call,SCLogDebug(\"ssn %p: pkt received: %s\", ssn, PKT_IS_TOCLIENT(p) ?\n               \"toclient\":\"toserver\"))"];
"1000132" [label="(Call,ssn == NULL)"];
"1000128" [label="(MethodParameterIn,TcpSession *ssn)"];
"1000688" [label="(Call,SCLogDebug(\"ssn %p: STREAMTCP_FLAG_4WHS flag set\", ssn))"];
"1000206" [label="(Call,SCLogDebug(\"ssn %p: Reset received and state changed to \"\n                         \"TCP_CLOSED\", ssn))"];
"1001128" [label="(MethodReturn,static int)"];
"1001013" [label="(Call,SCLogDebug(\"ssn %p: synsent => Asynchronous stream, packet SEQ\"\n                \" %\" PRIu32 \", payload size %\" PRIu32 \" (%\" PRIu32 \"), \"\n                \"ssn->client.next_seq %\" PRIu32 \"\"\n                ,ssn, TCP_GET_SEQ(p), p->payload_len, TCP_GET_SEQ(p)\n                + p->payload_len, ssn->client.next_seq))"];
"1000137" [label="(Literal,1)"];
"1001122" [label="(Block,)"];
"1000130" [label="(Block,)"];
"1000220" [label="(Call,StreamTcpPacketSetState(p, ssn, TCP_CLOSED))"];
"1000140" [label="(Identifier,ssn)"];
"1000324" [label="(Call,StreamTcpPacketSetState(p, ssn, TCP_SYN_RECV))"];
"1001127" [label="(Literal,0)"];
"1000734" [label="(Call,SCLogDebug(\"ssn %p: %02x\", ssn, ssn->server.last_ts))"];
"1000150" [label="(Identifier,p)"];
"1000202" [label="(Call,StreamTcpPacketSetState(p, ssn, TCP_CLOSED))"];
"1000263" [label="(Call,SCLogDebug(\"ssn %p: SYN/ACK received on 4WHS session\", ssn))"];
"1000575" [label="(Call,SCLogDebug(\"ssn %p: 4WHS ssn->server.next_win %\" PRIu32 \"\", ssn,\n                    ssn->server.next_win))"];
"1001125" [label="(Identifier,ssn)"];
"1000918" [label="(Call,StreamTcpPacketSetState(p, ssn, TCP_ESTABLISHED))"];
"1000282" [label="(Call,SCLogDebug(\"ssn %p: 4WHS ACK mismatch, packet ACK %\"PRIu32\"\"\n                        \" != %\" PRIu32 \" from stream\", ssn,\n                        TCP_GET_ACK(p), ssn->server.isn + 1))"];
"1000128" [label="(MethodParameterIn,TcpSession *ssn)"];
"1000139" [label="(Literal,\"ssn %p: pkt received: %s\")"];
"1000637" [label="(Call,SCLogDebug(\"ssn %p: ACK mismatch, packet ACK %\" PRIu32 \" != \"\n                    \"%\" PRIu32 \" from stream\", ssn, TCP_GET_ACK(p),\n                    ssn->client.isn + 1))"];
"1000567" [label="(Call,SCLogDebug(\"ssn %p: 4WHS ssn->client.next_win %\" PRIu32 \"\", ssn,\n                    ssn->client.next_win))"];
"1000311" [label="(Call,SCLogDebug(\"ssn %p: 4WHS SEQ mismatch, packet SEQ %\"PRIu32\"\"\n                        \" != %\" PRIu32 \" from *first* SYN pkt\", ssn,\n                        TCP_GET_SEQ(p), ssn->client.isn))"];
"1000530" [label="(Call,SCLogDebug(\"ssn %p: SACK permitted for 4WHS session\", ssn))"];
"1000615" [label="(Call,SCLogDebug(\"ssn %p: SYN/ACK received in the wrong direction\", ssn))"];
"1000900" [label="(Call,SCLogDebug(\"ssn %p: SEQ mismatch, packet SEQ %\" PRIu32 \" != \"\n                    \"%\" PRIu32 \" from stream\",ssn, TCP_GET_SEQ(p),\n                    ssn->client.next_seq))"];
"1000398" [label="(Call,SCLogDebug(\"ssn %p: 4WHS ssn->client.last_ts %\" PRIu32\" \"\n                        \"ssn->server.last_ts %\" PRIu32\"\", ssn,\n                        ssn->client.last_ts, ssn->server.last_ts))"];
"1000224" [label="(Call,SCLogDebug(\"ssn %p: Reset received and state changed to \"\n                     \"TCP_CLOSED\", ssn))"];
"1000832" [label="(Call,SCLogDebug(\"ssn %p: 4WHS ssn->server.isn %\" PRIu32 \", \"\n                    \"ssn->server.next_seq %\" PRIu32 \", \"\n                    \"ssn->server.last_ack %\"PRIu32\"\", ssn,\n                    ssn->server.isn, ssn->server.next_seq,\n                    ssn->server.last_ack))"];
"1000922" [label="(Call,SCLogDebug(\"ssn %p: =~ ssn state is now TCP_ESTABLISHED\", ssn))"];
"1000131" [label="(ControlStructure,if (ssn == NULL))"];
"1001123" [label="(Call,SCLogDebug(\"ssn %p: default case\", ssn))"];
"1000850" [label="(Call,SCLogDebug(\"ssn %p: 4WHS ssn->client.isn %\" PRIu32 \", \"\n                    \"ssn->client.next_seq %\" PRIu32 \", \"\n                    \"ssn->client.last_ack %\"PRIu32\"\", ssn,\n                    ssn->client.isn, ssn->client.next_seq,\n                    ssn->client.last_ack))"];
"1000666" [label="(Call,SCLogDebug(\"ssn %p: SYN packet on state SYN_SENT... resent\", ssn))"];
"1000157" [label="(Call,StreamTcpValidateRst(ssn, p))"];
"1000132" [label="(Call,ssn == NULL)"];
"1000133" [label="(Identifier,ssn)"];
"1000583" [label="(Call,SCLogDebug(\"ssn %p: 4WHS ssn->client.isn %\" PRIu32 \", \"\n                    \"ssn->client.next_seq %\" PRIu32 \", \"\n                    \"ssn->client.last_ack %\" PRIu32 \" \"\n                    \"(ssn->server.last_ack %\" PRIu32 \")\", ssn,\n                    ssn->client.isn, ssn->client.next_seq,\n                    ssn->client.last_ack, ssn->server.last_ack))"];
"1000652" [label="(Call,StreamTcp3whsSynAckUpdate(ssn, p, /* no queue override */NULL))"];
"1000141" [label="(Call,PKT_IS_TOCLIENT(p) ?\n               \"toclient\":\"toserver\")"];
"1001109" [label="(Call,StreamTcpReassembleHandleSegment(tv, stt->ra_ctx, ssn,\n                &ssn->client, p, pq))"];
"1000134" [label="(Identifier,NULL)"];
"1000328" [label="(Call,SCLogDebug(\"ssn %p: =~ 4WHS ssn state is now TCP_SYN_RECV\", ssn))"];
"1000370" [label="(Call,SCLogDebug(\"ssn %p: 4WHS window %\" PRIu32 \"\", ssn,\n                    ssn->client.window))"];
"1000138" [label="(Call,SCLogDebug(\"ssn %p: pkt received: %s\", ssn, PKT_IS_TOCLIENT(p) ?\n               \"toclient\":\"toserver\"))"];
"1001124" [label="(Literal,\"ssn %p: default case\")"];
"1000676" [label="(Call,SCLogDebug(\"ssn %p: SYN packet on state SYN_SENT... resent of \"\n                    \"4WHS SYN\", ssn))"];
"1001123" -> "1001122"  [label="AST: "];
"1001123" -> "1001125"  [label="CFG: "];
"1001124" -> "1001123"  [label="AST: "];
"1001125" -> "1001123"  [label="AST: "];
"1001127" -> "1001123"  [label="CFG: "];
"1001123" -> "1001128"  [label="DDG: "];
"1001123" -> "1001128"  [label="DDG: "];
"1000138" -> "1001123"  [label="DDG: "];
"1000128" -> "1001123"  [label="DDG: "];
"1000138" -> "1000130"  [label="AST: "];
"1000138" -> "1000141"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000141" -> "1000138"  [label="AST: "];
"1000150" -> "1000138"  [label="CFG: "];
"1000138" -> "1001128"  [label="DDG: "];
"1000138" -> "1001128"  [label="DDG: "];
"1000138" -> "1001128"  [label="DDG: "];
"1000132" -> "1000138"  [label="DDG: "];
"1000128" -> "1000138"  [label="DDG: "];
"1000138" -> "1000157"  [label="DDG: "];
"1000138" -> "1000263"  [label="DDG: "];
"1000138" -> "1000615"  [label="DDG: "];
"1000138" -> "1000637"  [label="DDG: "];
"1000138" -> "1000652"  [label="DDG: "];
"1000138" -> "1000666"  [label="DDG: "];
"1000138" -> "1000900"  [label="DDG: "];
"1000138" -> "1000918"  [label="DDG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000134"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="AST: "];
"1000137" -> "1000132"  [label="CFG: "];
"1000139" -> "1000132"  [label="CFG: "];
"1000132" -> "1001128"  [label="DDG: "];
"1000132" -> "1001128"  [label="DDG: "];
"1000132" -> "1001128"  [label="DDG: "];
"1000128" -> "1000132"  [label="DDG: "];
"1000132" -> "1000652"  [label="DDG: "];
"1000128" -> "1000124"  [label="AST: "];
"1000128" -> "1001128"  [label="DDG: "];
"1000128" -> "1000157"  [label="DDG: "];
"1000128" -> "1000202"  [label="DDG: "];
"1000128" -> "1000206"  [label="DDG: "];
"1000128" -> "1000220"  [label="DDG: "];
"1000128" -> "1000224"  [label="DDG: "];
"1000128" -> "1000263"  [label="DDG: "];
"1000128" -> "1000282"  [label="DDG: "];
"1000128" -> "1000311"  [label="DDG: "];
"1000128" -> "1000324"  [label="DDG: "];
"1000128" -> "1000328"  [label="DDG: "];
"1000128" -> "1000370"  [label="DDG: "];
"1000128" -> "1000398"  [label="DDG: "];
"1000128" -> "1000530"  [label="DDG: "];
"1000128" -> "1000567"  [label="DDG: "];
"1000128" -> "1000575"  [label="DDG: "];
"1000128" -> "1000583"  [label="DDG: "];
"1000128" -> "1000615"  [label="DDG: "];
"1000128" -> "1000637"  [label="DDG: "];
"1000128" -> "1000652"  [label="DDG: "];
"1000128" -> "1000666"  [label="DDG: "];
"1000128" -> "1000676"  [label="DDG: "];
"1000128" -> "1000688"  [label="DDG: "];
"1000128" -> "1000734"  [label="DDG: "];
"1000128" -> "1000832"  [label="DDG: "];
"1000128" -> "1000850"  [label="DDG: "];
"1000128" -> "1000900"  [label="DDG: "];
"1000128" -> "1000918"  [label="DDG: "];
"1000128" -> "1000922"  [label="DDG: "];
"1000128" -> "1001013"  [label="DDG: "];
"1000128" -> "1001109"  [label="DDG: "];
}
