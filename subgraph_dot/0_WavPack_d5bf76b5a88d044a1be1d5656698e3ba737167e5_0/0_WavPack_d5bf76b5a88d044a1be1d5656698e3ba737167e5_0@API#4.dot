digraph "0_WavPack_d5bf76b5a88d044a1be1d5656698e3ba737167e5_0@API" {
"1000592" [label="(Call,bcount != sizeof (riffhdr) ||\n         (do_rf64 && (!DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount) || bcount != sizeof (ds64hdr))) ||\n        (do_rf64 && (!DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount) || bcount != sizeof (ds64_chunk))))"];
"1000593" [label="(Call,bcount != sizeof (riffhdr))"];
"1000597" [label="(Call,(do_rf64 && (!DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount) || bcount != sizeof (ds64hdr))) ||\n        (do_rf64 && (!DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount) || bcount != sizeof (ds64_chunk))))"];
"1000598" [label="(Call,do_rf64 && (!DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount) || bcount != sizeof (ds64hdr)))"];
"1000600" [label="(Call,!DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount) || bcount != sizeof (ds64hdr))"];
"1000601" [label="(Call,!DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount))"];
"1000602" [label="(Call,DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount))"];
"1000584" [label="(Call,DoWriteFile (outfile, &riffhdr, sizeof (riffhdr), &bcount))"];
"1000103" [label="(MethodParameterIn,FILE *outfile)"];
"1000565" [label="(Call,WavpackNativeToLittleEndian (&riffhdr, ChunkHeaderFormat))"];
"1000520" [label="(Call,WavpackNativeToLittleEndian (&ds64hdr, ChunkHeaderFormat))"];
"1000455" [label="(Call,WavpackNativeToLittleEndian (&junkchunk, ChunkHeaderFormat))"];
"1000610" [label="(Call,bcount != sizeof (ds64hdr))"];
"1000614" [label="(Call,do_rf64 && (!DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount) || bcount != sizeof (ds64_chunk)))"];
"1000616" [label="(Call,!DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount) || bcount != sizeof (ds64_chunk))"];
"1000617" [label="(Call,!DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount))"];
"1000618" [label="(Call,DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount))"];
"1000524" [label="(Call,WavpackNativeToLittleEndian (&ds64_chunk, DS64ChunkFormat))"];
"1000626" [label="(Call,bcount != sizeof (ds64_chunk))"];
"1000582" [label="(Call,!DoWriteFile (outfile, &riffhdr, sizeof (riffhdr), &bcount) || bcount != sizeof (riffhdr) ||\n         (do_rf64 && (!DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount) || bcount != sizeof (ds64hdr))) ||\n        (do_rf64 && (!DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount) || bcount != sizeof (ds64_chunk))))"];
"1000584" [label="(Call,DoWriteFile (outfile, &riffhdr, sizeof (riffhdr), &bcount))"];
"1000601" [label="(Call,!DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount))"];
"1000678" [label="(Call,DoWriteFile (outfile, &fmthdr, sizeof (fmthdr), &bcount))"];
"1000571" [label="(Identifier,fmthdr)"];
"1000521" [label="(Call,&ds64hdr)"];
"1000632" [label="(Literal,\"can't write .WAV data, disk probably full!\")"];
"1000526" [label="(Identifier,ds64_chunk)"];
"1000616" [label="(Call,!DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount) || bcount != sizeof (ds64_chunk))"];
"1000592" [label="(Call,bcount != sizeof (riffhdr) ||\n         (do_rf64 && (!DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount) || bcount != sizeof (ds64hdr))) ||\n        (do_rf64 && (!DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount) || bcount != sizeof (ds64_chunk))))"];
"1000595" [label="(Call,sizeof (riffhdr))"];
"1000103" [label="(MethodParameterIn,FILE *outfile)"];
"1000524" [label="(Call,WavpackNativeToLittleEndian (&ds64_chunk, DS64ChunkFormat))"];
"1000628" [label="(Call,sizeof (ds64_chunk))"];
"1000566" [label="(Call,&riffhdr)"];
"1000706" [label="(Call,DoWriteFile (outfile, &datahdr, sizeof (datahdr), &bcount))"];
"1000687" [label="(Call,bcount != sizeof (fmthdr))"];
"1000641" [label="(Call,DoWriteFile (outfile, &cs64_chunk, sizeof (cs64_chunk), &bcount))"];
"1000624" [label="(Call,&bcount)"];
"1000622" [label="(Call,sizeof (ds64_chunk))"];
"1000523" [label="(Identifier,ChunkHeaderFormat)"];
"1000582" [label="(Call,!DoWriteFile (outfile, &riffhdr, sizeof (riffhdr), &bcount) || bcount != sizeof (riffhdr) ||\n         (do_rf64 && (!DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount) || bcount != sizeof (ds64hdr))) ||\n        (do_rf64 && (!DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount) || bcount != sizeof (ds64_chunk))))"];
"1000588" [label="(Call,sizeof (riffhdr))"];
"1000600" [label="(Call,!DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount) || bcount != sizeof (ds64hdr))"];
"1000585" [label="(Identifier,outfile)"];
"1000637" [label="(Identifier,table_length)"];
"1000583" [label="(Call,!DoWriteFile (outfile, &riffhdr, sizeof (riffhdr), &bcount))"];
"1000520" [label="(Call,WavpackNativeToLittleEndian (&ds64hdr, ChunkHeaderFormat))"];
"1000594" [label="(Identifier,bcount)"];
"1000586" [label="(Call,&riffhdr)"];
"1000612" [label="(Call,sizeof (ds64hdr))"];
"1000460" [label="(Identifier,do_rf64)"];
"1000627" [label="(Identifier,bcount)"];
"1000527" [label="(Identifier,DS64ChunkFormat)"];
"1000649" [label="(Call,bcount != sizeof (cs64_chunk))"];
"1000590" [label="(Call,&bcount)"];
"1000672" [label="(Call,bcount != sizeof (junkchunk))"];
"1000568" [label="(Identifier,ChunkHeaderFormat)"];
"1000610" [label="(Call,bcount != sizeof (ds64hdr))"];
"1000593" [label="(Call,bcount != sizeof (riffhdr))"];
"1000599" [label="(Identifier,do_rf64)"];
"1000455" [label="(Call,WavpackNativeToLittleEndian (&junkchunk, ChunkHeaderFormat))"];
"1000456" [label="(Call,&junkchunk)"];
"1000602" [label="(Call,DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount))"];
"1000615" [label="(Identifier,do_rf64)"];
"1000664" [label="(Call,DoWriteFile (outfile, &junkchunk, sizeof (junkchunk), &bcount))"];
"1000693" [label="(Call,DoWriteFile (outfile, &wavhdr, wavhdrsize, &bcount))"];
"1000608" [label="(Call,&bcount)"];
"1000725" [label="(MethodReturn,int)"];
"1000611" [label="(Identifier,bcount)"];
"1000604" [label="(Call,&ds64hdr)"];
"1000107" [label="(Block,)"];
"1000569" [label="(Call,WavpackNativeToLittleEndian (&fmthdr, ChunkHeaderFormat))"];
"1000597" [label="(Call,(do_rf64 && (!DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount) || bcount != sizeof (ds64hdr))) ||\n        (do_rf64 && (!DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount) || bcount != sizeof (ds64_chunk))))"];
"1000461" [label="(Block,)"];
"1000458" [label="(Identifier,ChunkHeaderFormat)"];
"1000619" [label="(Identifier,outfile)"];
"1000525" [label="(Call,&ds64_chunk)"];
"1000614" [label="(Call,do_rf64 && (!DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount) || bcount != sizeof (ds64_chunk)))"];
"1000435" [label="(Block,)"];
"1000618" [label="(Call,DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount))"];
"1000598" [label="(Call,do_rf64 && (!DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount) || bcount != sizeof (ds64hdr)))"];
"1000606" [label="(Call,sizeof (ds64hdr))"];
"1000620" [label="(Call,&ds64_chunk)"];
"1000626" [label="(Call,bcount != sizeof (ds64_chunk))"];
"1000565" [label="(Call,WavpackNativeToLittleEndian (&riffhdr, ChunkHeaderFormat))"];
"1000617" [label="(Call,!DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount))"];
"1000603" [label="(Identifier,outfile)"];
"1000581" [label="(ControlStructure,if (!DoWriteFile (outfile, &riffhdr, sizeof (riffhdr), &bcount) || bcount != sizeof (riffhdr) ||\n         (do_rf64 && (!DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount) || bcount != sizeof (ds64hdr))) ||\n        (do_rf64 && (!DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount) || bcount != sizeof (ds64_chunk)))))"];
"1000545" [label="(Identifier,table_length)"];
"1000592" -> "1000582"  [label="AST: "];
"1000592" -> "1000593"  [label="CFG: "];
"1000592" -> "1000597"  [label="CFG: "];
"1000593" -> "1000592"  [label="AST: "];
"1000597" -> "1000592"  [label="AST: "];
"1000582" -> "1000592"  [label="CFG: "];
"1000592" -> "1000725"  [label="DDG: (do_rf64 && (!DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount) || bcount != sizeof (ds64hdr))) ||\n        (do_rf64 && (!DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount) || bcount != sizeof (ds64_chunk)))"];
"1000592" -> "1000725"  [label="DDG: bcount != sizeof (riffhdr)"];
"1000592" -> "1000582"  [label="DDG: bcount != sizeof (riffhdr)"];
"1000592" -> "1000582"  [label="DDG: (do_rf64 && (!DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount) || bcount != sizeof (ds64hdr))) ||\n        (do_rf64 && (!DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount) || bcount != sizeof (ds64_chunk)))"];
"1000593" -> "1000592"  [label="DDG: bcount"];
"1000597" -> "1000592"  [label="DDG: do_rf64 && (!DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount) || bcount != sizeof (ds64hdr))"];
"1000597" -> "1000592"  [label="DDG: do_rf64 && (!DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount) || bcount != sizeof (ds64_chunk))"];
"1000593" -> "1000595"  [label="CFG: "];
"1000594" -> "1000593"  [label="AST: "];
"1000595" -> "1000593"  [label="AST: "];
"1000599" -> "1000593"  [label="CFG: "];
"1000593" -> "1000725"  [label="DDG: bcount"];
"1000593" -> "1000610"  [label="DDG: bcount"];
"1000593" -> "1000626"  [label="DDG: bcount"];
"1000593" -> "1000649"  [label="DDG: bcount"];
"1000593" -> "1000672"  [label="DDG: bcount"];
"1000593" -> "1000687"  [label="DDG: bcount"];
"1000597" -> "1000598"  [label="CFG: "];
"1000597" -> "1000614"  [label="CFG: "];
"1000598" -> "1000597"  [label="AST: "];
"1000614" -> "1000597"  [label="AST: "];
"1000597" -> "1000725"  [label="DDG: do_rf64 && (!DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount) || bcount != sizeof (ds64_chunk))"];
"1000597" -> "1000725"  [label="DDG: do_rf64 && (!DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount) || bcount != sizeof (ds64hdr))"];
"1000598" -> "1000597"  [label="DDG: do_rf64"];
"1000598" -> "1000597"  [label="DDG: !DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount) || bcount != sizeof (ds64hdr)"];
"1000614" -> "1000597"  [label="DDG: do_rf64"];
"1000614" -> "1000597"  [label="DDG: !DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount) || bcount != sizeof (ds64_chunk)"];
"1000598" -> "1000599"  [label="CFG: "];
"1000598" -> "1000600"  [label="CFG: "];
"1000599" -> "1000598"  [label="AST: "];
"1000600" -> "1000598"  [label="AST: "];
"1000615" -> "1000598"  [label="CFG: "];
"1000598" -> "1000725"  [label="DDG: do_rf64"];
"1000598" -> "1000725"  [label="DDG: !DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount) || bcount != sizeof (ds64hdr)"];
"1000600" -> "1000598"  [label="DDG: !DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount)"];
"1000600" -> "1000598"  [label="DDG: bcount != sizeof (ds64hdr)"];
"1000598" -> "1000614"  [label="DDG: do_rf64"];
"1000600" -> "1000601"  [label="CFG: "];
"1000600" -> "1000610"  [label="CFG: "];
"1000601" -> "1000600"  [label="AST: "];
"1000610" -> "1000600"  [label="AST: "];
"1000600" -> "1000725"  [label="DDG: bcount != sizeof (ds64hdr)"];
"1000600" -> "1000725"  [label="DDG: !DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount)"];
"1000601" -> "1000600"  [label="DDG: DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount)"];
"1000610" -> "1000600"  [label="DDG: bcount"];
"1000601" -> "1000602"  [label="CFG: "];
"1000602" -> "1000601"  [label="AST: "];
"1000611" -> "1000601"  [label="CFG: "];
"1000601" -> "1000725"  [label="DDG: DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount)"];
"1000602" -> "1000601"  [label="DDG: outfile"];
"1000602" -> "1000601"  [label="DDG: &ds64hdr"];
"1000602" -> "1000601"  [label="DDG: &bcount"];
"1000602" -> "1000608"  [label="CFG: "];
"1000603" -> "1000602"  [label="AST: "];
"1000604" -> "1000602"  [label="AST: "];
"1000606" -> "1000602"  [label="AST: "];
"1000608" -> "1000602"  [label="AST: "];
"1000602" -> "1000725"  [label="DDG: &bcount"];
"1000602" -> "1000725"  [label="DDG: &ds64hdr"];
"1000602" -> "1000725"  [label="DDG: outfile"];
"1000584" -> "1000602"  [label="DDG: outfile"];
"1000584" -> "1000602"  [label="DDG: &bcount"];
"1000103" -> "1000602"  [label="DDG: outfile"];
"1000520" -> "1000602"  [label="DDG: &ds64hdr"];
"1000602" -> "1000618"  [label="DDG: outfile"];
"1000602" -> "1000618"  [label="DDG: &bcount"];
"1000602" -> "1000641"  [label="DDG: outfile"];
"1000602" -> "1000641"  [label="DDG: &bcount"];
"1000602" -> "1000664"  [label="DDG: outfile"];
"1000602" -> "1000664"  [label="DDG: &bcount"];
"1000602" -> "1000678"  [label="DDG: outfile"];
"1000602" -> "1000678"  [label="DDG: &bcount"];
"1000584" -> "1000583"  [label="AST: "];
"1000584" -> "1000590"  [label="CFG: "];
"1000585" -> "1000584"  [label="AST: "];
"1000586" -> "1000584"  [label="AST: "];
"1000588" -> "1000584"  [label="AST: "];
"1000590" -> "1000584"  [label="AST: "];
"1000583" -> "1000584"  [label="CFG: "];
"1000584" -> "1000725"  [label="DDG: &bcount"];
"1000584" -> "1000725"  [label="DDG: &riffhdr"];
"1000584" -> "1000725"  [label="DDG: outfile"];
"1000584" -> "1000583"  [label="DDG: outfile"];
"1000584" -> "1000583"  [label="DDG: &riffhdr"];
"1000584" -> "1000583"  [label="DDG: &bcount"];
"1000103" -> "1000584"  [label="DDG: outfile"];
"1000565" -> "1000584"  [label="DDG: &riffhdr"];
"1000584" -> "1000618"  [label="DDG: outfile"];
"1000584" -> "1000618"  [label="DDG: &bcount"];
"1000584" -> "1000641"  [label="DDG: outfile"];
"1000584" -> "1000641"  [label="DDG: &bcount"];
"1000584" -> "1000664"  [label="DDG: outfile"];
"1000584" -> "1000664"  [label="DDG: &bcount"];
"1000584" -> "1000678"  [label="DDG: outfile"];
"1000584" -> "1000678"  [label="DDG: &bcount"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000725"  [label="DDG: outfile"];
"1000103" -> "1000618"  [label="DDG: outfile"];
"1000103" -> "1000641"  [label="DDG: outfile"];
"1000103" -> "1000664"  [label="DDG: outfile"];
"1000103" -> "1000678"  [label="DDG: outfile"];
"1000103" -> "1000693"  [label="DDG: outfile"];
"1000103" -> "1000706"  [label="DDG: outfile"];
"1000565" -> "1000107"  [label="AST: "];
"1000565" -> "1000568"  [label="CFG: "];
"1000566" -> "1000565"  [label="AST: "];
"1000568" -> "1000565"  [label="AST: "];
"1000571" -> "1000565"  [label="CFG: "];
"1000565" -> "1000725"  [label="DDG: WavpackNativeToLittleEndian (&riffhdr, ChunkHeaderFormat)"];
"1000520" -> "1000565"  [label="DDG: ChunkHeaderFormat"];
"1000455" -> "1000565"  [label="DDG: ChunkHeaderFormat"];
"1000565" -> "1000569"  [label="DDG: ChunkHeaderFormat"];
"1000520" -> "1000461"  [label="AST: "];
"1000520" -> "1000523"  [label="CFG: "];
"1000521" -> "1000520"  [label="AST: "];
"1000523" -> "1000520"  [label="AST: "];
"1000526" -> "1000520"  [label="CFG: "];
"1000520" -> "1000725"  [label="DDG: WavpackNativeToLittleEndian (&ds64hdr, ChunkHeaderFormat)"];
"1000520" -> "1000725"  [label="DDG: &ds64hdr"];
"1000455" -> "1000520"  [label="DDG: ChunkHeaderFormat"];
"1000455" -> "1000435"  [label="AST: "];
"1000455" -> "1000458"  [label="CFG: "];
"1000456" -> "1000455"  [label="AST: "];
"1000458" -> "1000455"  [label="AST: "];
"1000460" -> "1000455"  [label="CFG: "];
"1000455" -> "1000725"  [label="DDG: WavpackNativeToLittleEndian (&junkchunk, ChunkHeaderFormat)"];
"1000455" -> "1000725"  [label="DDG: &junkchunk"];
"1000455" -> "1000664"  [label="DDG: &junkchunk"];
"1000610" -> "1000612"  [label="CFG: "];
"1000611" -> "1000610"  [label="AST: "];
"1000612" -> "1000610"  [label="AST: "];
"1000610" -> "1000725"  [label="DDG: bcount"];
"1000610" -> "1000626"  [label="DDG: bcount"];
"1000610" -> "1000649"  [label="DDG: bcount"];
"1000610" -> "1000672"  [label="DDG: bcount"];
"1000610" -> "1000687"  [label="DDG: bcount"];
"1000614" -> "1000615"  [label="CFG: "];
"1000614" -> "1000616"  [label="CFG: "];
"1000615" -> "1000614"  [label="AST: "];
"1000616" -> "1000614"  [label="AST: "];
"1000614" -> "1000725"  [label="DDG: !DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount) || bcount != sizeof (ds64_chunk)"];
"1000614" -> "1000725"  [label="DDG: do_rf64"];
"1000616" -> "1000614"  [label="DDG: !DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount)"];
"1000616" -> "1000614"  [label="DDG: bcount != sizeof (ds64_chunk)"];
"1000616" -> "1000617"  [label="CFG: "];
"1000616" -> "1000626"  [label="CFG: "];
"1000617" -> "1000616"  [label="AST: "];
"1000626" -> "1000616"  [label="AST: "];
"1000616" -> "1000725"  [label="DDG: bcount != sizeof (ds64_chunk)"];
"1000616" -> "1000725"  [label="DDG: !DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount)"];
"1000617" -> "1000616"  [label="DDG: DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount)"];
"1000626" -> "1000616"  [label="DDG: bcount"];
"1000617" -> "1000618"  [label="CFG: "];
"1000618" -> "1000617"  [label="AST: "];
"1000627" -> "1000617"  [label="CFG: "];
"1000617" -> "1000725"  [label="DDG: DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount)"];
"1000618" -> "1000617"  [label="DDG: outfile"];
"1000618" -> "1000617"  [label="DDG: &ds64_chunk"];
"1000618" -> "1000617"  [label="DDG: &bcount"];
"1000618" -> "1000624"  [label="CFG: "];
"1000619" -> "1000618"  [label="AST: "];
"1000620" -> "1000618"  [label="AST: "];
"1000622" -> "1000618"  [label="AST: "];
"1000624" -> "1000618"  [label="AST: "];
"1000618" -> "1000725"  [label="DDG: &bcount"];
"1000618" -> "1000725"  [label="DDG: outfile"];
"1000618" -> "1000725"  [label="DDG: &ds64_chunk"];
"1000524" -> "1000618"  [label="DDG: &ds64_chunk"];
"1000618" -> "1000641"  [label="DDG: outfile"];
"1000618" -> "1000641"  [label="DDG: &bcount"];
"1000618" -> "1000664"  [label="DDG: outfile"];
"1000618" -> "1000664"  [label="DDG: &bcount"];
"1000618" -> "1000678"  [label="DDG: outfile"];
"1000618" -> "1000678"  [label="DDG: &bcount"];
"1000524" -> "1000461"  [label="AST: "];
"1000524" -> "1000527"  [label="CFG: "];
"1000525" -> "1000524"  [label="AST: "];
"1000527" -> "1000524"  [label="AST: "];
"1000545" -> "1000524"  [label="CFG: "];
"1000524" -> "1000725"  [label="DDG: &ds64_chunk"];
"1000524" -> "1000725"  [label="DDG: WavpackNativeToLittleEndian (&ds64_chunk, DS64ChunkFormat)"];
"1000524" -> "1000725"  [label="DDG: DS64ChunkFormat"];
"1000626" -> "1000628"  [label="CFG: "];
"1000627" -> "1000626"  [label="AST: "];
"1000628" -> "1000626"  [label="AST: "];
"1000626" -> "1000725"  [label="DDG: bcount"];
"1000626" -> "1000649"  [label="DDG: bcount"];
"1000626" -> "1000672"  [label="DDG: bcount"];
"1000626" -> "1000687"  [label="DDG: bcount"];
"1000582" -> "1000581"  [label="AST: "];
"1000582" -> "1000583"  [label="CFG: "];
"1000583" -> "1000582"  [label="AST: "];
"1000632" -> "1000582"  [label="CFG: "];
"1000637" -> "1000582"  [label="CFG: "];
"1000582" -> "1000725"  [label="DDG: !DoWriteFile (outfile, &riffhdr, sizeof (riffhdr), &bcount)"];
"1000582" -> "1000725"  [label="DDG: bcount != sizeof (riffhdr) ||\n         (do_rf64 && (!DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount) || bcount != sizeof (ds64hdr))) ||\n        (do_rf64 && (!DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount) || bcount != sizeof (ds64_chunk)))"];
"1000582" -> "1000725"  [label="DDG: !DoWriteFile (outfile, &riffhdr, sizeof (riffhdr), &bcount) || bcount != sizeof (riffhdr) ||\n         (do_rf64 && (!DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount) || bcount != sizeof (ds64hdr))) ||\n        (do_rf64 && (!DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount) || bcount != sizeof (ds64_chunk)))"];
"1000583" -> "1000582"  [label="DDG: DoWriteFile (outfile, &riffhdr, sizeof (riffhdr), &bcount)"];
}
