digraph "1_linux_ce683e5f9d045e5d67d1312a42b359cb2ab2a13c_0@array" {
"1000222" [label="(Call,newinfo->underflow[h] = underflows[h])"];
"1000202" [label="(Call,(unsigned char *)e - base == underflows[h])"];
"1000203" [label="(Call,(unsigned char *)e - base)"];
"1000204" [label="(Call,(unsigned char *)e)"];
"1000185" [label="(Call,(unsigned char *)e)"];
"1000152" [label="(Call,xt_check_entry_offsets(e, e->target_offset, e->next_offset))"];
"1000121" [label="(Call,e->next_offset\n\t    < sizeof(struct arpt_entry) + sizeof(struct xt_entry_target))"];
"1000214" [label="(Call,check_underflow(e))"];
"1000184" [label="(Call,(unsigned char *)e - base)"];
"1000188" [label="(Identifier,base)"];
"1000122" [label="(Call,e->next_offset)"];
"1000223" [label="(Call,newinfo->underflow[h])"];
"1000215" [label="(Identifier,e)"];
"1000222" [label="(Call,newinfo->underflow[h] = underflows[h])"];
"1000206" [label="(Identifier,e)"];
"1000157" [label="(Call,e->next_offset)"];
"1000204" [label="(Call,(unsigned char *)e)"];
"1000213" [label="(Call,!check_underflow(e))"];
"1000120" [label="(ControlStructure,if (e->next_offset\n\t    < sizeof(struct arpt_entry) + sizeof(struct xt_entry_target)))"];
"1000184" [label="(Call,(unsigned char *)e - base)"];
"1000190" [label="(Identifier,hook_entries)"];
"1000214" [label="(Call,check_underflow(e))"];
"1000203" [label="(Call,(unsigned char *)e - base)"];
"1000211" [label="(Block,)"];
"1000183" [label="(Call,(unsigned char *)e - base == hook_entries[h])"];
"1000153" [label="(Identifier,e)"];
"1000207" [label="(Identifier,base)"];
"1000131" [label="(Call,duprintf(\"checking: element %p size %u\n\",\n\t\t\t e, e->next_offset))"];
"1000187" [label="(Identifier,e)"];
"1000125" [label="(Call,sizeof(struct arpt_entry) + sizeof(struct xt_entry_target))"];
"1000228" [label="(Call,underflows[h])"];
"1000202" [label="(Call,(unsigned char *)e - base == underflows[h])"];
"1000201" [label="(ControlStructure,if ((unsigned char *)e - base == underflows[h]))"];
"1000154" [label="(Call,e->target_offset)"];
"1000152" [label="(Call,xt_check_entry_offsets(e, e->target_offset, e->next_offset))"];
"1000132" [label="(Literal,\"checking: element %p size %u\n\")"];
"1000145" [label="(Identifier,e)"];
"1000209" [label="(Identifier,underflows)"];
"1000150" [label="(Call,err = xt_check_entry_offsets(e, e->target_offset, e->next_offset))"];
"1000172" [label="(Identifier,h)"];
"1000208" [label="(Call,underflows[h])"];
"1000185" [label="(Call,(unsigned char *)e)"];
"1000121" [label="(Call,e->next_offset\n\t    < sizeof(struct arpt_entry) + sizeof(struct xt_entry_target))"];
"1000239" [label="(MethodReturn,static inline int)"];
"1000222" -> "1000211"  [label="AST: "];
"1000222" -> "1000228"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000228" -> "1000222"  [label="AST: "];
"1000172" -> "1000222"  [label="CFG: "];
"1000222" -> "1000239"  [label="DDG: newinfo->underflow[h]"];
"1000222" -> "1000239"  [label="DDG: underflows[h]"];
"1000202" -> "1000222"  [label="DDG: underflows[h]"];
"1000202" -> "1000201"  [label="AST: "];
"1000202" -> "1000208"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000208" -> "1000202"  [label="AST: "];
"1000215" -> "1000202"  [label="CFG: "];
"1000172" -> "1000202"  [label="CFG: "];
"1000202" -> "1000239"  [label="DDG: (unsigned char *)e - base"];
"1000202" -> "1000239"  [label="DDG: underflows[h]"];
"1000202" -> "1000239"  [label="DDG: (unsigned char *)e - base == underflows[h]"];
"1000203" -> "1000202"  [label="DDG: (unsigned char *)e"];
"1000203" -> "1000202"  [label="DDG: base"];
"1000203" -> "1000207"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000207" -> "1000203"  [label="AST: "];
"1000209" -> "1000203"  [label="CFG: "];
"1000203" -> "1000239"  [label="DDG: base"];
"1000203" -> "1000239"  [label="DDG: (unsigned char *)e"];
"1000203" -> "1000184"  [label="DDG: base"];
"1000204" -> "1000203"  [label="DDG: e"];
"1000184" -> "1000203"  [label="DDG: base"];
"1000204" -> "1000206"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000206" -> "1000204"  [label="AST: "];
"1000207" -> "1000204"  [label="CFG: "];
"1000204" -> "1000239"  [label="DDG: e"];
"1000204" -> "1000185"  [label="DDG: e"];
"1000185" -> "1000204"  [label="DDG: e"];
"1000204" -> "1000214"  [label="DDG: e"];
"1000185" -> "1000184"  [label="AST: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="AST: "];
"1000188" -> "1000185"  [label="CFG: "];
"1000185" -> "1000184"  [label="DDG: e"];
"1000152" -> "1000185"  [label="DDG: e"];
"1000214" -> "1000185"  [label="DDG: e"];
"1000152" -> "1000150"  [label="AST: "];
"1000152" -> "1000157"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000157" -> "1000152"  [label="AST: "];
"1000150" -> "1000152"  [label="CFG: "];
"1000152" -> "1000239"  [label="DDG: e->next_offset"];
"1000152" -> "1000239"  [label="DDG: e->target_offset"];
"1000152" -> "1000239"  [label="DDG: e"];
"1000152" -> "1000150"  [label="DDG: e"];
"1000152" -> "1000150"  [label="DDG: e->target_offset"];
"1000152" -> "1000150"  [label="DDG: e->next_offset"];
"1000121" -> "1000152"  [label="DDG: e->next_offset"];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000125"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000125" -> "1000121"  [label="AST: "];
"1000132" -> "1000121"  [label="CFG: "];
"1000145" -> "1000121"  [label="CFG: "];
"1000121" -> "1000239"  [label="DDG: sizeof(struct arpt_entry) + sizeof(struct xt_entry_target)"];
"1000121" -> "1000239"  [label="DDG: e->next_offset\n\t    < sizeof(struct arpt_entry) + sizeof(struct xt_entry_target)"];
"1000121" -> "1000239"  [label="DDG: e->next_offset"];
"1000121" -> "1000131"  [label="DDG: e->next_offset"];
"1000214" -> "1000213"  [label="AST: "];
"1000214" -> "1000215"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000213" -> "1000214"  [label="CFG: "];
"1000214" -> "1000239"  [label="DDG: e"];
"1000214" -> "1000213"  [label="DDG: e"];
"1000184" -> "1000183"  [label="AST: "];
"1000184" -> "1000188"  [label="CFG: "];
"1000188" -> "1000184"  [label="AST: "];
"1000190" -> "1000184"  [label="CFG: "];
"1000184" -> "1000183"  [label="DDG: (unsigned char *)e"];
"1000184" -> "1000183"  [label="DDG: base"];
}
