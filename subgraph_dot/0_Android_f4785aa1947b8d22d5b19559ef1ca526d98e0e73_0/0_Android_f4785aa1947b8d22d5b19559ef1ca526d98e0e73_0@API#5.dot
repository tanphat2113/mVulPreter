digraph "0_Android_f4785aa1947b8d22d5b19559ef1ca526d98e0e73_0@API" {
"1000194" [label="(Call,readU16(data, kHeaderSize + 2 * (3 * segCount + i)))"];
"1000172" [label="(Call,readU16(data, kHeaderSize + 2 * (segCount + i)))"];
"1000162" [label="(Call,readU16(data, kEndCountOffset + 2 * i))"];
"1000315" [label="(Call,readU16(data, actualRangeOffset))"];
"1000194" [label="(Call,readU16(data, kHeaderSize + 2 * (3 * segCount + i)))"];
"1000103" [label="(MethodParameterIn,const uint8_t* data)"];
"1000198" [label="(Call,2 * (3 * segCount + i))"];
"1000201" [label="(Call,3 * segCount)"];
"1000153" [label="(Call,i < segCount)"];
"1000150" [label="(Call,i = 0)"];
"1000156" [label="(Call,i++)"];
"1000166" [label="(Call,2 * i)"];
"1000141" [label="(Call,segCount * kSegmentSize)"];
"1000130" [label="(Call,segCount = readU16(data, kSegCountOffset) >> 1)"];
"1000132" [label="(Call,readU16(data, kSegCountOffset) >> 1)"];
"1000133" [label="(Call,readU16(data, kSegCountOffset))"];
"1000107" [label="(Call,kSegCountOffset = 6)"];
"1000119" [label="(Call,kSegmentSize = 8)"];
"1000292" [label="(Call,6 * segCount)"];
"1000220" [label="(Call,2 * segCount)"];
"1000287" [label="(Call,actualRangeOffset = kHeaderSize + 6 * segCount + rangeOffset +\n (i + j - start) * 2)"];
"1000206" [label="(Call,rangeOffset == 0)"];
"1000192" [label="(Call,rangeOffset = readU16(data, kHeaderSize + 2 * (3 * segCount + i)))"];
"1000297" [label="(Call,(i + j - start) * 2)"];
"1000300" [label="(Call,j - start)"];
"1000278" [label="(Call,j < end + 1)"];
"1000283" [label="(Call,j++)"];
"1000323" [label="(Call,addRange(coverage, j, j + 1))"];
"1000235" [label="(Call,addRange(coverage, start, end + 1))"];
"1000265" [label="(Call,addRange(coverage, j, j + 1))"];
"1000102" [label="(MethodParameterIn,vector<uint32_t>& coverage)"];
"1000248" [label="(Call,j < end + 1)"];
"1000253" [label="(Call,j++)"];
"1000245" [label="(Call,j = start)"];
"1000231" [label="(Call,end - start)"];
"1000182" [label="(Call,end < start)"];
"1000160" [label="(Call,end = readU16(data, kEndCountOffset + 2 * i))"];
"1000170" [label="(Call,start = readU16(data, kHeaderSize + 2 * (segCount + i)))"];
"1000275" [label="(Call,j = start)"];
"1000213" [label="(Call,readU16(data, kHeaderSize + 2 * (2 * segCount + i)))"];
"1000217" [label="(Call,2 * (2 * segCount + i))"];
"1000123" [label="(Call,kEndCountOffset > size)"];
"1000111" [label="(Call,kEndCountOffset = 14)"];
"1000104" [label="(MethodParameterIn,size_t size)"];
"1000115" [label="(Call,kHeaderSize = 16)"];
"1000176" [label="(Call,2 * (segCount + i))"];
"1000226" [label="(Call,(end + delta) & 0xffff)"];
"1000225" [label="(Call,((end + delta) & 0xffff) > end - start)"];
"1000227" [label="(Call,end + delta)"];
"1000258" [label="(Call,(j + delta) & 0xffff)"];
"1000257" [label="(Call,((j + delta) & 0xffff) != 0)"];
"1000259" [label="(Call,j + delta)"];
"1000268" [label="(Call,j + 1)"];
"1000305" [label="(Call,actualRangeOffset + 2 > size)"];
"1000306" [label="(Call,actualRangeOffset + 2)"];
"1000313" [label="(Call,glyphId = readU16(data, actualRangeOffset))"];
"1000319" [label="(Call,glyphId != 0)"];
"1000289" [label="(Call,kHeaderSize + 6 * segCount + rangeOffset +\n (i + j - start) * 2)"];
"1000291" [label="(Call,6 * segCount + rangeOffset +\n (i + j - start) * 2)"];
"1000295" [label="(Call,rangeOffset +\n (i + j - start) * 2)"];
"1000298" [label="(Call,i + j - start)"];
"1000326" [label="(Call,j + 1)"];
"1000238" [label="(Call,end + 1)"];
"1000250" [label="(Call,end + 1)"];
"1000280" [label="(Call,end + 1)"];
"1000211" [label="(Call,delta = readU16(data, kHeaderSize + 2 * (2 * segCount + i)))"];
"1000292" [label="(Call,6 * segCount)"];
"1000182" [label="(Call,end < start)"];
"1000326" [label="(Call,j + 1)"];
"1000243" [label="(ControlStructure,for (uint32_t j = start; j < end + 1; j++))"];
"1000128" [label="(Identifier,false)"];
"1000315" [label="(Call,readU16(data, actualRangeOffset))"];
"1000220" [label="(Call,2 * segCount)"];
"1000258" [label="(Call,(j + delta) & 0xffff)"];
"1000311" [label="(ControlStructure,continue;)"];
"1000151" [label="(Identifier,i)"];
"1000314" [label="(Identifier,glyphId)"];
"1000257" [label="(Call,((j + delta) & 0xffff) != 0)"];
"1000273" [label="(ControlStructure,for (uint32_t j = start; j < end + 1; j++))"];
"1000232" [label="(Identifier,end)"];
"1000212" [label="(Identifier,delta)"];
"1000270" [label="(Literal,1)"];
"1000301" [label="(Identifier,j)"];
"1000277" [label="(Identifier,start)"];
"1000213" [label="(Call,readU16(data, kHeaderSize + 2 * (2 * segCount + i)))"];
"1000141" [label="(Call,segCount * kSegmentSize)"];
"1000117" [label="(Literal,16)"];
"1000219" [label="(Call,2 * segCount + i)"];
"1000156" [label="(Call,i++)"];
"1000290" [label="(Identifier,kHeaderSize)"];
"1000211" [label="(Call,delta = readU16(data, kHeaderSize + 2 * (2 * segCount + i)))"];
"1000124" [label="(Identifier,kEndCountOffset)"];
"1000178" [label="(Call,segCount + i)"];
"1000217" [label="(Call,2 * (2 * segCount + i))"];
"1000240" [label="(Literal,1)"];
"1000162" [label="(Call,readU16(data, kEndCountOffset + 2 * i))"];
"1000265" [label="(Call,addRange(coverage, j, j + 1))"];
"1000304" [label="(ControlStructure,if (actualRangeOffset + 2 > size))"];
"1000228" [label="(Identifier,end)"];
"1000275" [label="(Call,j = start)"];
"1000233" [label="(Identifier,start)"];
"1000116" [label="(Identifier,kHeaderSize)"];
"1000195" [label="(Identifier,data)"];
"1000115" [label="(Call,kHeaderSize = 16)"];
"1000154" [label="(Identifier,i)"];
"1000306" [label="(Call,actualRangeOffset + 2)"];
"1000176" [label="(Call,2 * (segCount + i))"];
"1000170" [label="(Call,start = readU16(data, kHeaderSize + 2 * (segCount + i)))"];
"1000313" [label="(Call,glyphId = readU16(data, actualRangeOffset))"];
"1000132" [label="(Call,readU16(data, kSegCountOffset) >> 1)"];
"1000234" [label="(Block,)"];
"1000209" [label="(Block,)"];
"1000328" [label="(Literal,1)"];
"1000236" [label="(Identifier,coverage)"];
"1000123" [label="(Call,kEndCountOffset > size)"];
"1000227" [label="(Call,end + delta)"];
"1000325" [label="(Identifier,j)"];
"1000287" [label="(Call,actualRangeOffset = kHeaderSize + 6 * segCount + rangeOffset +\n (i + j - start) * 2)"];
"1000321" [label="(Literal,0)"];
"1000319" [label="(Call,glyphId != 0)"];
"1000247" [label="(Identifier,start)"];
"1000177" [label="(Literal,2)"];
"1000297" [label="(Call,(i + j - start) * 2)"];
"1000331" [label="(MethodReturn,static bool)"];
"1000167" [label="(Literal,2)"];
"1000143" [label="(Identifier,kSegmentSize)"];
"1000291" [label="(Call,6 * segCount + rangeOffset +\n (i + j - start) * 2)"];
"1000215" [label="(Call,kHeaderSize + 2 * (2 * segCount + i))"];
"1000256" [label="(ControlStructure,if (((j + delta) & 0xffff) != 0))"];
"1000252" [label="(Literal,1)"];
"1000206" [label="(Call,rangeOffset == 0)"];
"1000205" [label="(ControlStructure,if (rangeOffset == 0))"];
"1000248" [label="(Call,j < end + 1)"];
"1000109" [label="(Literal,6)"];
"1000171" [label="(Identifier,start)"];
"1000323" [label="(Call,addRange(coverage, j, j + 1))"];
"1000251" [label="(Identifier,end)"];
"1000120" [label="(Identifier,kSegmentSize)"];
"1000161" [label="(Identifier,end)"];
"1000142" [label="(Identifier,segCount)"];
"1000164" [label="(Call,kEndCountOffset + 2 * i)"];
"1000119" [label="(Call,kSegmentSize = 8)"];
"1000136" [label="(Literal,1)"];
"1000309" [label="(Identifier,size)"];
"1000160" [label="(Call,end = readU16(data, kEndCountOffset + 2 * i))"];
"1000308" [label="(Literal,2)"];
"1000200" [label="(Call,3 * segCount + i)"];
"1000264" [label="(Block,)"];
"1000245" [label="(Call,j = start)"];
"1000168" [label="(Identifier,i)"];
"1000102" [label="(MethodParameterIn,vector<uint32_t>& coverage)"];
"1000226" [label="(Call,(end + delta) & 0xffff)"];
"1000263" [label="(Literal,0)"];
"1000288" [label="(Identifier,actualRangeOffset)"];
"1000192" [label="(Call,rangeOffset = readU16(data, kHeaderSize + 2 * (3 * segCount + i)))"];
"1000260" [label="(Identifier,j)"];
"1000231" [label="(Call,end - start)"];
"1000318" [label="(ControlStructure,if (glyphId != 0))"];
"1000296" [label="(Identifier,rangeOffset)"];
"1000285" [label="(Block,)"];
"1000279" [label="(Identifier,j)"];
"1000250" [label="(Call,end + 1)"];
"1000224" [label="(ControlStructure,if (((end + delta) & 0xffff) > end - start))"];
"1000330" [label="(Identifier,true)"];
"1000122" [label="(ControlStructure,if (kEndCountOffset > size))"];
"1000281" [label="(Identifier,end)"];
"1000294" [label="(Identifier,segCount)"];
"1000130" [label="(Call,segCount = readU16(data, kSegCountOffset) >> 1)"];
"1000222" [label="(Identifier,segCount)"];
"1000249" [label="(Identifier,j)"];
"1000155" [label="(Identifier,segCount)"];
"1000157" [label="(Identifier,i)"];
"1000303" [label="(Literal,2)"];
"1000111" [label="(Call,kEndCountOffset = 14)"];
"1000204" [label="(Identifier,i)"];
"1000104" [label="(MethodParameterIn,size_t size)"];
"1000305" [label="(Call,actualRangeOffset + 2 > size)"];
"1000148" [label="(ControlStructure,for (size_t i = 0; i < segCount; i++))"];
"1000108" [label="(Identifier,kSegCountOffset)"];
"1000289" [label="(Call,kHeaderSize + 6 * segCount + rangeOffset +\n (i + j - start) * 2)"];
"1000230" [label="(Literal,0xffff)"];
"1000320" [label="(Identifier,glyphId)"];
"1000183" [label="(Identifier,end)"];
"1000299" [label="(Identifier,i)"];
"1000153" [label="(Call,i < segCount)"];
"1000133" [label="(Call,readU16(data, kSegCountOffset))"];
"1000300" [label="(Call,j - start)"];
"1000131" [label="(Identifier,segCount)"];
"1000107" [label="(Call,kSegCountOffset = 6)"];
"1000103" [label="(MethodParameterIn,const uint8_t* data)"];
"1000282" [label="(Literal,1)"];
"1000269" [label="(Identifier,j)"];
"1000253" [label="(Call,j++)"];
"1000268" [label="(Call,j + 1)"];
"1000283" [label="(Call,j++)"];
"1000134" [label="(Identifier,data)"];
"1000280" [label="(Call,end + 1)"];
"1000174" [label="(Call,kHeaderSize + 2 * (segCount + i))"];
"1000152" [label="(Literal,0)"];
"1000276" [label="(Identifier,j)"];
"1000317" [label="(Identifier,actualRangeOffset)"];
"1000150" [label="(Call,i = 0)"];
"1000105" [label="(Block,)"];
"1000259" [label="(Call,j + delta)"];
"1000158" [label="(Block,)"];
"1000208" [label="(Literal,0)"];
"1000262" [label="(Literal,0xffff)"];
"1000121" [label="(Literal,8)"];
"1000324" [label="(Identifier,coverage)"];
"1000254" [label="(Identifier,j)"];
"1000278" [label="(Call,j < end + 1)"];
"1000327" [label="(Identifier,j)"];
"1000139" [label="(Call,kHeaderSize + segCount * kSegmentSize)"];
"1000166" [label="(Call,2 * i)"];
"1000307" [label="(Identifier,actualRangeOffset)"];
"1000198" [label="(Call,2 * (3 * segCount + i))"];
"1000196" [label="(Call,kHeaderSize + 2 * (3 * segCount + i))"];
"1000316" [label="(Identifier,data)"];
"1000221" [label="(Literal,2)"];
"1000267" [label="(Identifier,j)"];
"1000246" [label="(Identifier,j)"];
"1000223" [label="(Identifier,i)"];
"1000194" [label="(Call,readU16(data, kHeaderSize + 2 * (3 * segCount + i)))"];
"1000284" [label="(Identifier,j)"];
"1000225" [label="(Call,((end + delta) & 0xffff) > end - start)"];
"1000295" [label="(Call,rangeOffset +\n (i + j - start) * 2)"];
"1000140" [label="(Identifier,kHeaderSize)"];
"1000113" [label="(Literal,14)"];
"1000184" [label="(Identifier,start)"];
"1000138" [label="(Call,kHeaderSize + segCount * kSegmentSize > size)"];
"1000135" [label="(Identifier,kSegCountOffset)"];
"1000214" [label="(Identifier,data)"];
"1000203" [label="(Identifier,segCount)"];
"1000298" [label="(Call,i + j - start)"];
"1000237" [label="(Identifier,start)"];
"1000229" [label="(Identifier,delta)"];
"1000266" [label="(Identifier,coverage)"];
"1000207" [label="(Identifier,rangeOffset)"];
"1000187" [label="(Literal,0x534e4554)"];
"1000125" [label="(Identifier,size)"];
"1000112" [label="(Identifier,kEndCountOffset)"];
"1000293" [label="(Literal,6)"];
"1000163" [label="(Identifier,data)"];
"1000322" [label="(Block,)"];
"1000235" [label="(Call,addRange(coverage, start, end + 1))"];
"1000202" [label="(Literal,3)"];
"1000238" [label="(Call,end + 1)"];
"1000201" [label="(Call,3 * segCount)"];
"1000261" [label="(Identifier,delta)"];
"1000173" [label="(Identifier,data)"];
"1000218" [label="(Literal,2)"];
"1000172" [label="(Call,readU16(data, kHeaderSize + 2 * (segCount + i)))"];
"1000199" [label="(Literal,2)"];
"1000193" [label="(Identifier,rangeOffset)"];
"1000302" [label="(Identifier,start)"];
"1000239" [label="(Identifier,end)"];
"1000181" [label="(ControlStructure,if (end < start))"];
"1000194" -> "1000192"  [label="AST: "];
"1000194" -> "1000196"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000196" -> "1000194"  [label="AST: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000194" -> "1000331"  [label="DDG: data"];
"1000194" -> "1000331"  [label="DDG: kHeaderSize + 2 * (3 * segCount + i)"];
"1000194" -> "1000162"  [label="DDG: data"];
"1000194" -> "1000192"  [label="DDG: data"];
"1000194" -> "1000192"  [label="DDG: kHeaderSize + 2 * (3 * segCount + i)"];
"1000172" -> "1000194"  [label="DDG: data"];
"1000103" -> "1000194"  [label="DDG: data"];
"1000198" -> "1000194"  [label="DDG: 2"];
"1000198" -> "1000194"  [label="DDG: 3 * segCount + i"];
"1000194" -> "1000213"  [label="DDG: data"];
"1000194" -> "1000315"  [label="DDG: data"];
"1000172" -> "1000170"  [label="AST: "];
"1000172" -> "1000174"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000174" -> "1000172"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000172" -> "1000331"  [label="DDG: data"];
"1000172" -> "1000331"  [label="DDG: kHeaderSize + 2 * (segCount + i)"];
"1000172" -> "1000170"  [label="DDG: data"];
"1000172" -> "1000170"  [label="DDG: kHeaderSize + 2 * (segCount + i)"];
"1000162" -> "1000172"  [label="DDG: data"];
"1000103" -> "1000172"  [label="DDG: data"];
"1000115" -> "1000172"  [label="DDG: kHeaderSize"];
"1000176" -> "1000172"  [label="DDG: 2"];
"1000176" -> "1000172"  [label="DDG: segCount + i"];
"1000162" -> "1000160"  [label="AST: "];
"1000162" -> "1000164"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000164" -> "1000162"  [label="AST: "];
"1000160" -> "1000162"  [label="CFG: "];
"1000162" -> "1000331"  [label="DDG: kEndCountOffset + 2 * i"];
"1000162" -> "1000160"  [label="DDG: data"];
"1000162" -> "1000160"  [label="DDG: kEndCountOffset + 2 * i"];
"1000315" -> "1000162"  [label="DDG: data"];
"1000213" -> "1000162"  [label="DDG: data"];
"1000133" -> "1000162"  [label="DDG: data"];
"1000103" -> "1000162"  [label="DDG: data"];
"1000123" -> "1000162"  [label="DDG: kEndCountOffset"];
"1000166" -> "1000162"  [label="DDG: 2"];
"1000166" -> "1000162"  [label="DDG: i"];
"1000315" -> "1000313"  [label="AST: "];
"1000315" -> "1000317"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000317" -> "1000315"  [label="AST: "];
"1000313" -> "1000315"  [label="CFG: "];
"1000315" -> "1000331"  [label="DDG: data"];
"1000315" -> "1000331"  [label="DDG: actualRangeOffset"];
"1000315" -> "1000313"  [label="DDG: data"];
"1000315" -> "1000313"  [label="DDG: actualRangeOffset"];
"1000103" -> "1000315"  [label="DDG: data"];
"1000287" -> "1000315"  [label="DDG: actualRangeOffset"];
"1000103" -> "1000101"  [label="AST: "];
"1000103" -> "1000331"  [label="DDG: data"];
"1000103" -> "1000133"  [label="DDG: data"];
"1000103" -> "1000213"  [label="DDG: data"];
"1000198" -> "1000196"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000196" -> "1000198"  [label="CFG: "];
"1000198" -> "1000331"  [label="DDG: 3 * segCount + i"];
"1000198" -> "1000196"  [label="DDG: 2"];
"1000198" -> "1000196"  [label="DDG: 3 * segCount + i"];
"1000201" -> "1000198"  [label="DDG: 3"];
"1000201" -> "1000198"  [label="DDG: segCount"];
"1000166" -> "1000198"  [label="DDG: i"];
"1000201" -> "1000200"  [label="AST: "];
"1000201" -> "1000203"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000203" -> "1000201"  [label="AST: "];
"1000204" -> "1000201"  [label="CFG: "];
"1000201" -> "1000153"  [label="DDG: segCount"];
"1000201" -> "1000200"  [label="DDG: 3"];
"1000201" -> "1000200"  [label="DDG: segCount"];
"1000153" -> "1000201"  [label="DDG: segCount"];
"1000201" -> "1000220"  [label="DDG: segCount"];
"1000201" -> "1000292"  [label="DDG: segCount"];
"1000153" -> "1000148"  [label="AST: "];
"1000153" -> "1000155"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000155" -> "1000153"  [label="AST: "];
"1000161" -> "1000153"  [label="CFG: "];
"1000330" -> "1000153"  [label="CFG: "];
"1000153" -> "1000331"  [label="DDG: segCount"];
"1000153" -> "1000331"  [label="DDG: i < segCount"];
"1000153" -> "1000331"  [label="DDG: i"];
"1000150" -> "1000153"  [label="DDG: i"];
"1000156" -> "1000153"  [label="DDG: i"];
"1000141" -> "1000153"  [label="DDG: segCount"];
"1000292" -> "1000153"  [label="DDG: segCount"];
"1000220" -> "1000153"  [label="DDG: segCount"];
"1000153" -> "1000166"  [label="DDG: i"];
"1000153" -> "1000176"  [label="DDG: segCount"];
"1000153" -> "1000178"  [label="DDG: segCount"];
"1000150" -> "1000148"  [label="AST: "];
"1000150" -> "1000152"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="AST: "];
"1000154" -> "1000150"  [label="CFG: "];
"1000156" -> "1000148"  [label="AST: "];
"1000156" -> "1000157"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000166" -> "1000156"  [label="DDG: i"];
"1000166" -> "1000164"  [label="AST: "];
"1000166" -> "1000168"  [label="CFG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000168" -> "1000166"  [label="AST: "];
"1000164" -> "1000166"  [label="CFG: "];
"1000166" -> "1000164"  [label="DDG: 2"];
"1000166" -> "1000164"  [label="DDG: i"];
"1000166" -> "1000176"  [label="DDG: i"];
"1000166" -> "1000178"  [label="DDG: i"];
"1000166" -> "1000200"  [label="DDG: i"];
"1000166" -> "1000217"  [label="DDG: i"];
"1000166" -> "1000219"  [label="DDG: i"];
"1000166" -> "1000297"  [label="DDG: i"];
"1000166" -> "1000298"  [label="DDG: i"];
"1000141" -> "1000139"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000139" -> "1000141"  [label="CFG: "];
"1000141" -> "1000331"  [label="DDG: segCount"];
"1000141" -> "1000331"  [label="DDG: kSegmentSize"];
"1000141" -> "1000138"  [label="DDG: segCount"];
"1000141" -> "1000138"  [label="DDG: kSegmentSize"];
"1000141" -> "1000139"  [label="DDG: segCount"];
"1000141" -> "1000139"  [label="DDG: kSegmentSize"];
"1000130" -> "1000141"  [label="DDG: segCount"];
"1000119" -> "1000141"  [label="DDG: kSegmentSize"];
"1000130" -> "1000105"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000140" -> "1000130"  [label="CFG: "];
"1000130" -> "1000331"  [label="DDG: readU16(data, kSegCountOffset) >> 1"];
"1000132" -> "1000130"  [label="DDG: readU16(data, kSegCountOffset)"];
"1000132" -> "1000130"  [label="DDG: 1"];
"1000132" -> "1000136"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000136" -> "1000132"  [label="AST: "];
"1000132" -> "1000331"  [label="DDG: readU16(data, kSegCountOffset)"];
"1000133" -> "1000132"  [label="DDG: data"];
"1000133" -> "1000132"  [label="DDG: kSegCountOffset"];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000136" -> "1000133"  [label="CFG: "];
"1000133" -> "1000331"  [label="DDG: data"];
"1000133" -> "1000331"  [label="DDG: kSegCountOffset"];
"1000107" -> "1000133"  [label="DDG: kSegCountOffset"];
"1000107" -> "1000105"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000112" -> "1000107"  [label="CFG: "];
"1000107" -> "1000331"  [label="DDG: kSegCountOffset"];
"1000119" -> "1000105"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000124" -> "1000119"  [label="CFG: "];
"1000119" -> "1000331"  [label="DDG: kSegmentSize"];
"1000292" -> "1000291"  [label="AST: "];
"1000292" -> "1000294"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000294" -> "1000292"  [label="AST: "];
"1000296" -> "1000292"  [label="CFG: "];
"1000292" -> "1000287"  [label="DDG: 6"];
"1000292" -> "1000287"  [label="DDG: segCount"];
"1000292" -> "1000289"  [label="DDG: 6"];
"1000292" -> "1000289"  [label="DDG: segCount"];
"1000292" -> "1000291"  [label="DDG: 6"];
"1000292" -> "1000291"  [label="DDG: segCount"];
"1000220" -> "1000219"  [label="AST: "];
"1000220" -> "1000222"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000222" -> "1000220"  [label="AST: "];
"1000223" -> "1000220"  [label="CFG: "];
"1000220" -> "1000217"  [label="DDG: 2"];
"1000220" -> "1000217"  [label="DDG: segCount"];
"1000220" -> "1000219"  [label="DDG: 2"];
"1000220" -> "1000219"  [label="DDG: segCount"];
"1000287" -> "1000285"  [label="AST: "];
"1000287" -> "1000289"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000287"  [label="AST: "];
"1000307" -> "1000287"  [label="CFG: "];
"1000287" -> "1000331"  [label="DDG: kHeaderSize + 6 * segCount + rangeOffset +\n (i + j - start) * 2"];
"1000206" -> "1000287"  [label="DDG: rangeOffset"];
"1000297" -> "1000287"  [label="DDG: i + j - start"];
"1000297" -> "1000287"  [label="DDG: 2"];
"1000287" -> "1000305"  [label="DDG: actualRangeOffset"];
"1000287" -> "1000306"  [label="DDG: actualRangeOffset"];
"1000206" -> "1000205"  [label="AST: "];
"1000206" -> "1000208"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000206"  [label="AST: "];
"1000212" -> "1000206"  [label="CFG: "];
"1000276" -> "1000206"  [label="CFG: "];
"1000206" -> "1000331"  [label="DDG: rangeOffset == 0"];
"1000206" -> "1000331"  [label="DDG: rangeOffset"];
"1000192" -> "1000206"  [label="DDG: rangeOffset"];
"1000206" -> "1000289"  [label="DDG: rangeOffset"];
"1000206" -> "1000291"  [label="DDG: rangeOffset"];
"1000206" -> "1000295"  [label="DDG: rangeOffset"];
"1000192" -> "1000158"  [label="AST: "];
"1000193" -> "1000192"  [label="AST: "];
"1000207" -> "1000192"  [label="CFG: "];
"1000192" -> "1000331"  [label="DDG: readU16(data, kHeaderSize + 2 * (3 * segCount + i))"];
"1000297" -> "1000295"  [label="AST: "];
"1000297" -> "1000303"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000303" -> "1000297"  [label="AST: "];
"1000295" -> "1000297"  [label="CFG: "];
"1000297" -> "1000331"  [label="DDG: i + j - start"];
"1000297" -> "1000289"  [label="DDG: i + j - start"];
"1000297" -> "1000289"  [label="DDG: 2"];
"1000297" -> "1000291"  [label="DDG: i + j - start"];
"1000297" -> "1000291"  [label="DDG: 2"];
"1000297" -> "1000295"  [label="DDG: i + j - start"];
"1000297" -> "1000295"  [label="DDG: 2"];
"1000300" -> "1000297"  [label="DDG: j"];
"1000300" -> "1000297"  [label="DDG: start"];
"1000300" -> "1000298"  [label="AST: "];
"1000300" -> "1000302"  [label="CFG: "];
"1000301" -> "1000300"  [label="AST: "];
"1000302" -> "1000300"  [label="AST: "];
"1000298" -> "1000300"  [label="CFG: "];
"1000300" -> "1000331"  [label="DDG: j"];
"1000300" -> "1000331"  [label="DDG: start"];
"1000300" -> "1000283"  [label="DDG: j"];
"1000300" -> "1000298"  [label="DDG: j"];
"1000300" -> "1000298"  [label="DDG: start"];
"1000278" -> "1000300"  [label="DDG: j"];
"1000182" -> "1000300"  [label="DDG: start"];
"1000300" -> "1000323"  [label="DDG: j"];
"1000300" -> "1000326"  [label="DDG: j"];
"1000278" -> "1000273"  [label="AST: "];
"1000278" -> "1000280"  [label="CFG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000280" -> "1000278"  [label="AST: "];
"1000288" -> "1000278"  [label="CFG: "];
"1000157" -> "1000278"  [label="CFG: "];
"1000278" -> "1000331"  [label="DDG: end + 1"];
"1000278" -> "1000331"  [label="DDG: j < end + 1"];
"1000278" -> "1000331"  [label="DDG: j"];
"1000283" -> "1000278"  [label="DDG: j"];
"1000275" -> "1000278"  [label="DDG: j"];
"1000182" -> "1000278"  [label="DDG: end"];
"1000283" -> "1000273"  [label="AST: "];
"1000283" -> "1000284"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000279" -> "1000283"  [label="CFG: "];
"1000323" -> "1000283"  [label="DDG: j"];
"1000323" -> "1000322"  [label="AST: "];
"1000323" -> "1000326"  [label="CFG: "];
"1000324" -> "1000323"  [label="AST: "];
"1000325" -> "1000323"  [label="AST: "];
"1000326" -> "1000323"  [label="AST: "];
"1000284" -> "1000323"  [label="CFG: "];
"1000323" -> "1000331"  [label="DDG: j + 1"];
"1000323" -> "1000331"  [label="DDG: coverage"];
"1000323" -> "1000331"  [label="DDG: addRange(coverage, j, j + 1)"];
"1000323" -> "1000235"  [label="DDG: coverage"];
"1000323" -> "1000265"  [label="DDG: coverage"];
"1000235" -> "1000323"  [label="DDG: coverage"];
"1000265" -> "1000323"  [label="DDG: coverage"];
"1000102" -> "1000323"  [label="DDG: coverage"];
"1000235" -> "1000234"  [label="AST: "];
"1000235" -> "1000238"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="AST: "];
"1000238" -> "1000235"  [label="AST: "];
"1000157" -> "1000235"  [label="CFG: "];
"1000235" -> "1000331"  [label="DDG: start"];
"1000235" -> "1000331"  [label="DDG: coverage"];
"1000235" -> "1000331"  [label="DDG: addRange(coverage, start, end + 1)"];
"1000235" -> "1000331"  [label="DDG: end + 1"];
"1000265" -> "1000235"  [label="DDG: coverage"];
"1000102" -> "1000235"  [label="DDG: coverage"];
"1000231" -> "1000235"  [label="DDG: start"];
"1000231" -> "1000235"  [label="DDG: end"];
"1000235" -> "1000265"  [label="DDG: coverage"];
"1000265" -> "1000264"  [label="AST: "];
"1000265" -> "1000268"  [label="CFG: "];
"1000266" -> "1000265"  [label="AST: "];
"1000267" -> "1000265"  [label="AST: "];
"1000268" -> "1000265"  [label="AST: "];
"1000254" -> "1000265"  [label="CFG: "];
"1000265" -> "1000331"  [label="DDG: addRange(coverage, j, j + 1)"];
"1000265" -> "1000331"  [label="DDG: j + 1"];
"1000265" -> "1000331"  [label="DDG: coverage"];
"1000265" -> "1000253"  [label="DDG: j"];
"1000102" -> "1000265"  [label="DDG: coverage"];
"1000248" -> "1000265"  [label="DDG: j"];
"1000102" -> "1000101"  [label="AST: "];
"1000102" -> "1000331"  [label="DDG: coverage"];
"1000248" -> "1000243"  [label="AST: "];
"1000248" -> "1000250"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="AST: "];
"1000260" -> "1000248"  [label="CFG: "];
"1000157" -> "1000248"  [label="CFG: "];
"1000248" -> "1000331"  [label="DDG: j < end + 1"];
"1000248" -> "1000331"  [label="DDG: end + 1"];
"1000248" -> "1000331"  [label="DDG: j"];
"1000253" -> "1000248"  [label="DDG: j"];
"1000245" -> "1000248"  [label="DDG: j"];
"1000231" -> "1000248"  [label="DDG: end"];
"1000248" -> "1000253"  [label="DDG: j"];
"1000248" -> "1000258"  [label="DDG: j"];
"1000248" -> "1000259"  [label="DDG: j"];
"1000248" -> "1000268"  [label="DDG: j"];
"1000253" -> "1000243"  [label="AST: "];
"1000253" -> "1000254"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000249" -> "1000253"  [label="CFG: "];
"1000245" -> "1000243"  [label="AST: "];
"1000245" -> "1000247"  [label="CFG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000247" -> "1000245"  [label="AST: "];
"1000249" -> "1000245"  [label="CFG: "];
"1000245" -> "1000331"  [label="DDG: start"];
"1000231" -> "1000245"  [label="DDG: start"];
"1000231" -> "1000225"  [label="AST: "];
"1000231" -> "1000233"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000233" -> "1000231"  [label="AST: "];
"1000225" -> "1000231"  [label="CFG: "];
"1000231" -> "1000225"  [label="DDG: end"];
"1000231" -> "1000225"  [label="DDG: start"];
"1000182" -> "1000231"  [label="DDG: end"];
"1000182" -> "1000231"  [label="DDG: start"];
"1000231" -> "1000238"  [label="DDG: end"];
"1000231" -> "1000250"  [label="DDG: end"];
"1000182" -> "1000181"  [label="AST: "];
"1000182" -> "1000184"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000184" -> "1000182"  [label="AST: "];
"1000187" -> "1000182"  [label="CFG: "];
"1000193" -> "1000182"  [label="CFG: "];
"1000182" -> "1000331"  [label="DDG: end < start"];
"1000182" -> "1000331"  [label="DDG: start"];
"1000182" -> "1000331"  [label="DDG: end"];
"1000160" -> "1000182"  [label="DDG: end"];
"1000170" -> "1000182"  [label="DDG: start"];
"1000182" -> "1000226"  [label="DDG: end"];
"1000182" -> "1000227"  [label="DDG: end"];
"1000182" -> "1000275"  [label="DDG: start"];
"1000182" -> "1000280"  [label="DDG: end"];
"1000160" -> "1000158"  [label="AST: "];
"1000161" -> "1000160"  [label="AST: "];
"1000171" -> "1000160"  [label="CFG: "];
"1000160" -> "1000331"  [label="DDG: readU16(data, kEndCountOffset + 2 * i)"];
"1000170" -> "1000158"  [label="AST: "];
"1000171" -> "1000170"  [label="AST: "];
"1000183" -> "1000170"  [label="CFG: "];
"1000170" -> "1000331"  [label="DDG: readU16(data, kHeaderSize + 2 * (segCount + i))"];
"1000275" -> "1000273"  [label="AST: "];
"1000275" -> "1000277"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000277" -> "1000275"  [label="AST: "];
"1000279" -> "1000275"  [label="CFG: "];
"1000275" -> "1000331"  [label="DDG: start"];
"1000213" -> "1000211"  [label="AST: "];
"1000213" -> "1000215"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000215" -> "1000213"  [label="AST: "];
"1000211" -> "1000213"  [label="CFG: "];
"1000213" -> "1000331"  [label="DDG: data"];
"1000213" -> "1000331"  [label="DDG: kHeaderSize + 2 * (2 * segCount + i)"];
"1000213" -> "1000211"  [label="DDG: data"];
"1000213" -> "1000211"  [label="DDG: kHeaderSize + 2 * (2 * segCount + i)"];
"1000217" -> "1000213"  [label="DDG: 2"];
"1000217" -> "1000213"  [label="DDG: 2 * segCount + i"];
"1000217" -> "1000215"  [label="AST: "];
"1000217" -> "1000219"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000219" -> "1000217"  [label="AST: "];
"1000215" -> "1000217"  [label="CFG: "];
"1000217" -> "1000331"  [label="DDG: 2 * segCount + i"];
"1000217" -> "1000215"  [label="DDG: 2"];
"1000217" -> "1000215"  [label="DDG: 2 * segCount + i"];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000128" -> "1000123"  [label="CFG: "];
"1000131" -> "1000123"  [label="CFG: "];
"1000123" -> "1000331"  [label="DDG: size"];
"1000123" -> "1000331"  [label="DDG: kEndCountOffset > size"];
"1000123" -> "1000331"  [label="DDG: kEndCountOffset"];
"1000111" -> "1000123"  [label="DDG: kEndCountOffset"];
"1000104" -> "1000123"  [label="DDG: size"];
"1000123" -> "1000138"  [label="DDG: size"];
"1000123" -> "1000164"  [label="DDG: kEndCountOffset"];
"1000111" -> "1000105"  [label="AST: "];
"1000111" -> "1000113"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000113" -> "1000111"  [label="AST: "];
"1000116" -> "1000111"  [label="CFG: "];
"1000104" -> "1000101"  [label="AST: "];
"1000104" -> "1000331"  [label="DDG: size"];
"1000104" -> "1000138"  [label="DDG: size"];
"1000104" -> "1000305"  [label="DDG: size"];
"1000115" -> "1000105"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000120" -> "1000115"  [label="CFG: "];
"1000115" -> "1000331"  [label="DDG: kHeaderSize"];
"1000115" -> "1000138"  [label="DDG: kHeaderSize"];
"1000115" -> "1000139"  [label="DDG: kHeaderSize"];
"1000115" -> "1000174"  [label="DDG: kHeaderSize"];
"1000176" -> "1000174"  [label="AST: "];
"1000176" -> "1000178"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000178" -> "1000176"  [label="AST: "];
"1000174" -> "1000176"  [label="CFG: "];
"1000176" -> "1000331"  [label="DDG: segCount + i"];
"1000176" -> "1000174"  [label="DDG: 2"];
"1000176" -> "1000174"  [label="DDG: segCount + i"];
"1000226" -> "1000225"  [label="AST: "];
"1000226" -> "1000230"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000230" -> "1000226"  [label="AST: "];
"1000232" -> "1000226"  [label="CFG: "];
"1000226" -> "1000331"  [label="DDG: end + delta"];
"1000226" -> "1000225"  [label="DDG: end + delta"];
"1000226" -> "1000225"  [label="DDG: 0xffff"];
"1000211" -> "1000226"  [label="DDG: delta"];
"1000225" -> "1000224"  [label="AST: "];
"1000236" -> "1000225"  [label="CFG: "];
"1000246" -> "1000225"  [label="CFG: "];
"1000225" -> "1000331"  [label="DDG: ((end + delta) & 0xffff) > end - start"];
"1000225" -> "1000331"  [label="DDG: (end + delta) & 0xffff"];
"1000225" -> "1000331"  [label="DDG: end - start"];
"1000227" -> "1000229"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000227"  [label="AST: "];
"1000230" -> "1000227"  [label="CFG: "];
"1000227" -> "1000331"  [label="DDG: delta"];
"1000211" -> "1000227"  [label="DDG: delta"];
"1000258" -> "1000257"  [label="AST: "];
"1000258" -> "1000262"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000262" -> "1000258"  [label="AST: "];
"1000263" -> "1000258"  [label="CFG: "];
"1000258" -> "1000331"  [label="DDG: j + delta"];
"1000258" -> "1000257"  [label="DDG: j + delta"];
"1000258" -> "1000257"  [label="DDG: 0xffff"];
"1000211" -> "1000258"  [label="DDG: delta"];
"1000257" -> "1000256"  [label="AST: "];
"1000257" -> "1000263"  [label="CFG: "];
"1000263" -> "1000257"  [label="AST: "];
"1000266" -> "1000257"  [label="CFG: "];
"1000254" -> "1000257"  [label="CFG: "];
"1000257" -> "1000331"  [label="DDG: (j + delta) & 0xffff"];
"1000257" -> "1000331"  [label="DDG: ((j + delta) & 0xffff) != 0"];
"1000259" -> "1000261"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000259"  [label="AST: "];
"1000262" -> "1000259"  [label="CFG: "];
"1000259" -> "1000331"  [label="DDG: delta"];
"1000211" -> "1000259"  [label="DDG: delta"];
"1000268" -> "1000270"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000270" -> "1000268"  [label="AST: "];
"1000305" -> "1000304"  [label="AST: "];
"1000305" -> "1000309"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000309" -> "1000305"  [label="AST: "];
"1000311" -> "1000305"  [label="CFG: "];
"1000314" -> "1000305"  [label="CFG: "];
"1000305" -> "1000331"  [label="DDG: size"];
"1000305" -> "1000331"  [label="DDG: actualRangeOffset + 2 > size"];
"1000305" -> "1000331"  [label="DDG: actualRangeOffset + 2"];
"1000138" -> "1000305"  [label="DDG: size"];
"1000306" -> "1000308"  [label="CFG: "];
"1000307" -> "1000306"  [label="AST: "];
"1000308" -> "1000306"  [label="AST: "];
"1000309" -> "1000306"  [label="CFG: "];
"1000306" -> "1000331"  [label="DDG: actualRangeOffset"];
"1000313" -> "1000285"  [label="AST: "];
"1000314" -> "1000313"  [label="AST: "];
"1000320" -> "1000313"  [label="CFG: "];
"1000313" -> "1000331"  [label="DDG: readU16(data, actualRangeOffset)"];
"1000313" -> "1000319"  [label="DDG: glyphId"];
"1000319" -> "1000318"  [label="AST: "];
"1000319" -> "1000321"  [label="CFG: "];
"1000320" -> "1000319"  [label="AST: "];
"1000321" -> "1000319"  [label="AST: "];
"1000324" -> "1000319"  [label="CFG: "];
"1000284" -> "1000319"  [label="CFG: "];
"1000319" -> "1000331"  [label="DDG: glyphId != 0"];
"1000319" -> "1000331"  [label="DDG: glyphId"];
"1000289" -> "1000291"  [label="CFG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000291" -> "1000289"  [label="AST: "];
"1000289" -> "1000331"  [label="DDG: 6 * segCount + rangeOffset +\n (i + j - start) * 2"];
"1000289" -> "1000331"  [label="DDG: kHeaderSize"];
"1000291" -> "1000295"  [label="CFG: "];
"1000295" -> "1000291"  [label="AST: "];
"1000291" -> "1000331"  [label="DDG: 6 * segCount"];
"1000291" -> "1000331"  [label="DDG: rangeOffset +\n (i + j - start) * 2"];
"1000296" -> "1000295"  [label="AST: "];
"1000295" -> "1000331"  [label="DDG: rangeOffset"];
"1000295" -> "1000331"  [label="DDG: (i + j - start) * 2"];
"1000299" -> "1000298"  [label="AST: "];
"1000303" -> "1000298"  [label="CFG: "];
"1000298" -> "1000331"  [label="DDG: j - start"];
"1000326" -> "1000328"  [label="CFG: "];
"1000327" -> "1000326"  [label="AST: "];
"1000328" -> "1000326"  [label="AST: "];
"1000238" -> "1000240"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="AST: "];
"1000238" -> "1000331"  [label="DDG: end"];
"1000250" -> "1000252"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000252" -> "1000250"  [label="AST: "];
"1000250" -> "1000331"  [label="DDG: end"];
"1000280" -> "1000282"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000282" -> "1000280"  [label="AST: "];
"1000280" -> "1000331"  [label="DDG: end"];
"1000211" -> "1000209"  [label="AST: "];
"1000212" -> "1000211"  [label="AST: "];
"1000228" -> "1000211"  [label="CFG: "];
"1000211" -> "1000331"  [label="DDG: readU16(data, kHeaderSize + 2 * (2 * segCount + i))"];
}
