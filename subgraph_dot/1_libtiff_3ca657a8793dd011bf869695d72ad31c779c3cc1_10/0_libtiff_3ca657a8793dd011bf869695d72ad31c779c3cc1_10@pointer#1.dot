digraph "0_libtiff_3ca657a8793dd011bf869695d72ad31c779c3cc1_10@pointer" {
"1000352" [label="(Call,cp += cc - 1)"];
"1000354" [label="(Call,cc - 1)"];
"1000134" [label="(Call,cc -= stride)"];
"1000130" [label="(Call,cc > stride)"];
"1000125" [label="(Call,cc%stride)"];
"1000104" [label="(MethodParameterIn,tmsize_t cc)"];
"1000112" [label="(Call,stride = sp->stride)"];
"1000118" [label="(Call,* cp = (unsigned char*) cp0)"];
"1000120" [label="(Call,(unsigned char*) cp0)"];
"1000103" [label="(MethodParameterIn,uint8* cp0)"];
"1000368" [label="(Call,cp[stride] - cp[0])"];
"1000367" [label="(Call,(cp[stride] - cp[0])&0xff)"];
"1000365" [label="(Call,(unsigned char)((cp[stride] - cp[0])&0xff))"];
"1000361" [label="(Call,cp[stride] = (unsigned char)((cp[stride] - cp[0])&0xff))"];
"1000133" [label="(Block,)"];
"1000361" [label="(Call,cp[stride] = (unsigned char)((cp[stride] - cp[0])&0xff))"];
"1000124" [label="(Call,(cc%stride)==0)"];
"1000241" [label="(Call,r2 = cp[0])"];
"1000226" [label="(Call,cc -= 3)"];
"1000378" [label="(Identifier,cc)"];
"1000114" [label="(Call,sp->stride)"];
"1000359" [label="(Block,)"];
"1000128" [label="(Literal,0)"];
"1000285" [label="(Call,g1 = cp[5])"];
"1000372" [label="(Call,cp[0])"];
"1000134" [label="(Call,cc -= stride)"];
"1000118" [label="(Call,* cp = (unsigned char*) cp0)"];
"1000184" [label="(Call,g1 = cp[4])"];
"1000368" [label="(Call,cp[stride] - cp[0])"];
"1000367" [label="(Call,(cp[stride] - cp[0])&0xff)"];
"1000203" [label="(Call,b1 = cp[5])"];
"1000342" [label="(Call,cp += 4)"];
"1000125" [label="(Call,cc%stride)"];
"1000152" [label="(Call,g2 = cp[1])"];
"1000253" [label="(Call,b2 = cp[2])"];
"1000247" [label="(Call,g2 = cp[1])"];
"1000381" [label="(MethodReturn,RET)"];
"1000354" [label="(Call,cc - 1)"];
"1000119" [label="(Identifier,cp)"];
"1000120" [label="(Call,(unsigned char*) cp0)"];
"1000377" [label="(Call,cc -= stride)"];
"1000105" [label="(Block,)"];
"1000266" [label="(Call,r1 = cp[4])"];
"1000129" [label="(ControlStructure,if (cc > stride))"];
"1000369" [label="(Call,cp[stride])"];
"1000138" [label="(Call,stride == 3)"];
"1000127" [label="(Identifier,stride)"];
"1000126" [label="(Identifier,cc)"];
"1000130" [label="(Call,cc > stride)"];
"1000259" [label="(Call,a2 = cp[3])"];
"1000375" [label="(Literal,0xff)"];
"1000135" [label="(Identifier,cc)"];
"1000103" [label="(MethodParameterIn,uint8* cp0)"];
"1000146" [label="(Call,r2 = cp[0])"];
"1000351" [label="(Block,)"];
"1000356" [label="(Literal,1)"];
"1000112" [label="(Call,stride = sp->stride)"];
"1000139" [label="(Identifier,stride)"];
"1000352" [label="(Call,cp += cc - 1)"];
"1000323" [label="(Call,a1 = cp[7])"];
"1000346" [label="(Call,cc -= 4)"];
"1000158" [label="(Call,b2 = cp[2])"];
"1000362" [label="(Call,cp[stride])"];
"1000113" [label="(Identifier,stride)"];
"1000132" [label="(Identifier,stride)"];
"1000304" [label="(Call,b1 = cp[6])"];
"1000365" [label="(Call,(unsigned char)((cp[stride] - cp[0])&0xff))"];
"1000122" [label="(Identifier,cp0)"];
"1000360" [label="(Identifier,stride)"];
"1000355" [label="(Identifier,cc)"];
"1000353" [label="(Identifier,cp)"];
"1000131" [label="(Identifier,cc)"];
"1000222" [label="(Call,cp += 3)"];
"1000104" [label="(MethodParameterIn,tmsize_t cc)"];
"1000165" [label="(Call,r1 = cp[3])"];
"1000136" [label="(Identifier,stride)"];
"1000352" -> "1000351"  [label="AST: "];
"1000352" -> "1000354"  [label="CFG: "];
"1000353" -> "1000352"  [label="AST: "];
"1000354" -> "1000352"  [label="AST: "];
"1000360" -> "1000352"  [label="CFG: "];
"1000352" -> "1000381"  [label="DDG: cp"];
"1000352" -> "1000381"  [label="DDG: cc - 1"];
"1000354" -> "1000352"  [label="DDG: cc"];
"1000354" -> "1000352"  [label="DDG: 1"];
"1000118" -> "1000352"  [label="DDG: cp"];
"1000352" -> "1000368"  [label="DDG: cp"];
"1000354" -> "1000356"  [label="CFG: "];
"1000355" -> "1000354"  [label="AST: "];
"1000356" -> "1000354"  [label="AST: "];
"1000134" -> "1000354"  [label="DDG: cc"];
"1000104" -> "1000354"  [label="DDG: cc"];
"1000354" -> "1000377"  [label="DDG: cc"];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000139" -> "1000134"  [label="CFG: "];
"1000130" -> "1000134"  [label="DDG: stride"];
"1000130" -> "1000134"  [label="DDG: cc"];
"1000104" -> "1000134"  [label="DDG: cc"];
"1000134" -> "1000226"  [label="DDG: cc"];
"1000134" -> "1000346"  [label="DDG: cc"];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000135" -> "1000130"  [label="CFG: "];
"1000381" -> "1000130"  [label="CFG: "];
"1000130" -> "1000381"  [label="DDG: cc > stride"];
"1000130" -> "1000381"  [label="DDG: stride"];
"1000130" -> "1000381"  [label="DDG: cc"];
"1000125" -> "1000130"  [label="DDG: cc"];
"1000125" -> "1000130"  [label="DDG: stride"];
"1000104" -> "1000130"  [label="DDG: cc"];
"1000130" -> "1000138"  [label="DDG: stride"];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000128" -> "1000125"  [label="CFG: "];
"1000125" -> "1000124"  [label="DDG: cc"];
"1000125" -> "1000124"  [label="DDG: stride"];
"1000104" -> "1000125"  [label="DDG: cc"];
"1000112" -> "1000125"  [label="DDG: stride"];
"1000104" -> "1000101"  [label="AST: "];
"1000104" -> "1000381"  [label="DDG: cc"];
"1000104" -> "1000226"  [label="DDG: cc"];
"1000104" -> "1000346"  [label="DDG: cc"];
"1000104" -> "1000377"  [label="DDG: cc"];
"1000112" -> "1000105"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000119" -> "1000112"  [label="CFG: "];
"1000112" -> "1000381"  [label="DDG: sp->stride"];
"1000118" -> "1000105"  [label="AST: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="AST: "];
"1000126" -> "1000118"  [label="CFG: "];
"1000118" -> "1000381"  [label="DDG: (unsigned char*) cp0"];
"1000118" -> "1000381"  [label="DDG: cp"];
"1000120" -> "1000118"  [label="DDG: cp0"];
"1000118" -> "1000146"  [label="DDG: cp"];
"1000118" -> "1000152"  [label="DDG: cp"];
"1000118" -> "1000158"  [label="DDG: cp"];
"1000118" -> "1000165"  [label="DDG: cp"];
"1000118" -> "1000184"  [label="DDG: cp"];
"1000118" -> "1000203"  [label="DDG: cp"];
"1000118" -> "1000222"  [label="DDG: cp"];
"1000118" -> "1000241"  [label="DDG: cp"];
"1000118" -> "1000247"  [label="DDG: cp"];
"1000118" -> "1000253"  [label="DDG: cp"];
"1000118" -> "1000259"  [label="DDG: cp"];
"1000118" -> "1000266"  [label="DDG: cp"];
"1000118" -> "1000285"  [label="DDG: cp"];
"1000118" -> "1000304"  [label="DDG: cp"];
"1000118" -> "1000323"  [label="DDG: cp"];
"1000118" -> "1000342"  [label="DDG: cp"];
"1000120" -> "1000122"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000122" -> "1000120"  [label="AST: "];
"1000120" -> "1000381"  [label="DDG: cp0"];
"1000103" -> "1000120"  [label="DDG: cp0"];
"1000103" -> "1000101"  [label="AST: "];
"1000103" -> "1000381"  [label="DDG: cp0"];
"1000368" -> "1000367"  [label="AST: "];
"1000368" -> "1000372"  [label="CFG: "];
"1000369" -> "1000368"  [label="AST: "];
"1000372" -> "1000368"  [label="AST: "];
"1000375" -> "1000368"  [label="CFG: "];
"1000368" -> "1000381"  [label="DDG: cp[0]"];
"1000368" -> "1000367"  [label="DDG: cp[stride]"];
"1000368" -> "1000367"  [label="DDG: cp[0]"];
"1000361" -> "1000368"  [label="DDG: cp[stride]"];
"1000367" -> "1000365"  [label="AST: "];
"1000367" -> "1000375"  [label="CFG: "];
"1000375" -> "1000367"  [label="AST: "];
"1000365" -> "1000367"  [label="CFG: "];
"1000367" -> "1000381"  [label="DDG: cp[stride] - cp[0]"];
"1000367" -> "1000365"  [label="DDG: cp[stride] - cp[0]"];
"1000367" -> "1000365"  [label="DDG: 0xff"];
"1000365" -> "1000361"  [label="AST: "];
"1000366" -> "1000365"  [label="AST: "];
"1000361" -> "1000365"  [label="CFG: "];
"1000365" -> "1000381"  [label="DDG: (cp[stride] - cp[0])&0xff"];
"1000365" -> "1000361"  [label="DDG: (cp[stride] - cp[0])&0xff"];
"1000361" -> "1000359"  [label="AST: "];
"1000362" -> "1000361"  [label="AST: "];
"1000378" -> "1000361"  [label="CFG: "];
"1000361" -> "1000381"  [label="DDG: (unsigned char)((cp[stride] - cp[0])&0xff)"];
"1000361" -> "1000381"  [label="DDG: cp[stride]"];
}
