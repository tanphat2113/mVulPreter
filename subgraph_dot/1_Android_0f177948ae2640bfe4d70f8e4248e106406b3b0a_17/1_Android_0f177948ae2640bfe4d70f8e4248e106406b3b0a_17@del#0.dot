digraph "1_Android_0f177948ae2640bfe4d70f8e4248e106406b3b0a_17@del" {
"1000147" [label="(Call,portIndex == kPortIndexInput)"];
"1000125" [label="(Call,portIndex != kPortIndexInput)"];
"1000111" [label="(Call,findBufferHeader(buffer, portIndex))"];
"1000105" [label="(MethodParameterIn,OMX::buffer_id buffer)"];
"1000103" [label="(MethodParameterIn,OMX_U32 portIndex)"];
"1000128" [label="(Call,portIndex != kPortIndexOutput)"];
"1000145" [label="(Call,bufferMeta->getBuffer(\n            header, portIndex == kPortIndexInput /* backup */, false /* limit */))"];
"1000143" [label="(Call,data = bufferMeta->getBuffer(\n            header, portIndex == kPortIndexInput /* backup */, false /* limit */))"];
"1000197" [label="(Call,portString(portIndex))"];
"1000193" [label="(Call,CLOG_ERROR(updateNativeHandleInMeta, BAD_VALUE, \"%s:%u, %#x bad type (%d) or size (%zu)\",\n            portString(portIndex), portIndex, buffer, mMetadataType[portIndex], data->capacity()))"];
"1000205" [label="(Return,return BAD_VALUE;)"];
"1000210" [label="(Call,portString(portIndex))"];
"1000207" [label="(Call,CLOG_BUFFER(updateNativeHandleInMeta, \"%s:%u, %#x := %p\",\n            portString(portIndex), portIndex, buffer,\n            nativeHandle == NULL ? NULL : nativeHandle->handle()))"];
"1000111" [label="(Call,findBufferHeader(buffer, portIndex))"];
"1000208" [label="(Identifier,updateNativeHandleInMeta)"];
"1000149" [label="(Identifier,kPortIndexInput)"];
"1000145" [label="(Call,bufferMeta->getBuffer(\n            header, portIndex == kPortIndexInput /* backup */, false /* limit */))"];
"1000204" [label="(Call,data->capacity())"];
"1000193" [label="(Call,CLOG_ERROR(updateNativeHandleInMeta, BAD_VALUE, \"%s:%u, %#x bad type (%d) or size (%zu)\",\n            portString(portIndex), portIndex, buffer, mMetadataType[portIndex], data->capacity()))"];
"1000215" [label="(Call,nativeHandle == NULL)"];
"1000109" [label="(Call,*header = findBufferHeader(buffer, portIndex))"];
"1000112" [label="(Identifier,buffer)"];
"1000115" [label="(Call,header == NULL)"];
"1000201" [label="(Call,mMetadataType[portIndex])"];
"1000213" [label="(Identifier,buffer)"];
"1000128" [label="(Call,portIndex != kPortIndexOutput)"];
"1000130" [label="(Identifier,kPortIndexOutput)"];
"1000192" [label="(Block,)"];
"1000129" [label="(Identifier,portIndex)"];
"1000106" [label="(Block,)"];
"1000205" [label="(Return,return BAD_VALUE;)"];
"1000150" [label="(Identifier,false)"];
"1000214" [label="(Call,nativeHandle == NULL ? NULL : nativeHandle->handle())"];
"1000199" [label="(Identifier,portIndex)"];
"1000124" [label="(Call,portIndex != kPortIndexInput && portIndex != kPortIndexOutput)"];
"1000144" [label="(Identifier,data)"];
"1000196" [label="(Literal,\"%s:%u, %#x bad type (%d) or size (%zu)\")"];
"1000195" [label="(Identifier,BAD_VALUE)"];
"1000125" [label="(Call,portIndex != kPortIndexInput)"];
"1000147" [label="(Call,portIndex == kPortIndexInput)"];
"1000209" [label="(Literal,\"%s:%u, %#x := %p\")"];
"1000200" [label="(Identifier,buffer)"];
"1000188" [label="(Call,const_cast<native_handle*>(nativeHandle->handle()))"];
"1000103" [label="(MethodParameterIn,OMX_U32 portIndex)"];
"1000212" [label="(Identifier,portIndex)"];
"1000198" [label="(Identifier,portIndex)"];
"1000194" [label="(Identifier,updateNativeHandleInMeta)"];
"1000152" [label="(Identifier,nativeHandle)"];
"1000105" [label="(MethodParameterIn,OMX::buffer_id buffer)"];
"1000127" [label="(Identifier,kPortIndexInput)"];
"1000197" [label="(Call,portString(portIndex))"];
"1000148" [label="(Identifier,portIndex)"];
"1000221" [label="(Identifier,OK)"];
"1000206" [label="(Identifier,BAD_VALUE)"];
"1000222" [label="(MethodReturn,status_t)"];
"1000210" [label="(Call,portString(portIndex))"];
"1000126" [label="(Identifier,portIndex)"];
"1000113" [label="(Identifier,portIndex)"];
"1000146" [label="(Identifier,header)"];
"1000155" [label="(Call,mMetadataType[portIndex] == kMetadataBufferTypeNativeHandleSource)"];
"1000143" [label="(Call,data = bufferMeta->getBuffer(\n            header, portIndex == kPortIndexInput /* backup */, false /* limit */))"];
"1000211" [label="(Identifier,portIndex)"];
"1000207" [label="(Call,CLOG_BUFFER(updateNativeHandleInMeta, \"%s:%u, %#x := %p\",\n            portString(portIndex), portIndex, buffer,\n            nativeHandle == NULL ? NULL : nativeHandle->handle()))"];
"1000147" -> "1000145"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000150" -> "1000147"  [label="CFG: "];
"1000147" -> "1000222"  [label="DDG: "];
"1000147" -> "1000145"  [label="DDG: "];
"1000147" -> "1000145"  [label="DDG: "];
"1000125" -> "1000147"  [label="DDG: "];
"1000125" -> "1000147"  [label="DDG: "];
"1000128" -> "1000147"  [label="DDG: "];
"1000103" -> "1000147"  [label="DDG: "];
"1000147" -> "1000197"  [label="DDG: "];
"1000147" -> "1000210"  [label="DDG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000129" -> "1000125"  [label="CFG: "];
"1000124" -> "1000125"  [label="CFG: "];
"1000125" -> "1000222"  [label="DDG: "];
"1000125" -> "1000222"  [label="DDG: "];
"1000125" -> "1000124"  [label="DDG: "];
"1000125" -> "1000124"  [label="DDG: "];
"1000111" -> "1000125"  [label="DDG: "];
"1000103" -> "1000125"  [label="DDG: "];
"1000125" -> "1000128"  [label="DDG: "];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000113"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000113" -> "1000111"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000111" -> "1000222"  [label="DDG: "];
"1000111" -> "1000222"  [label="DDG: "];
"1000111" -> "1000109"  [label="DDG: "];
"1000111" -> "1000109"  [label="DDG: "];
"1000105" -> "1000111"  [label="DDG: "];
"1000103" -> "1000111"  [label="DDG: "];
"1000111" -> "1000193"  [label="DDG: "];
"1000111" -> "1000207"  [label="DDG: "];
"1000105" -> "1000102"  [label="AST: "];
"1000105" -> "1000222"  [label="DDG: "];
"1000105" -> "1000193"  [label="DDG: "];
"1000105" -> "1000207"  [label="DDG: "];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000222"  [label="DDG: "];
"1000103" -> "1000128"  [label="DDG: "];
"1000103" -> "1000197"  [label="DDG: "];
"1000103" -> "1000193"  [label="DDG: "];
"1000103" -> "1000210"  [label="DDG: "];
"1000103" -> "1000207"  [label="DDG: "];
"1000128" -> "1000124"  [label="AST: "];
"1000128" -> "1000130"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000128"  [label="AST: "];
"1000124" -> "1000128"  [label="CFG: "];
"1000128" -> "1000222"  [label="DDG: "];
"1000128" -> "1000222"  [label="DDG: "];
"1000128" -> "1000124"  [label="DDG: "];
"1000128" -> "1000124"  [label="DDG: "];
"1000145" -> "1000143"  [label="AST: "];
"1000145" -> "1000150"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000150" -> "1000145"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000145" -> "1000222"  [label="DDG: "];
"1000145" -> "1000222"  [label="DDG: "];
"1000145" -> "1000222"  [label="DDG: "];
"1000145" -> "1000143"  [label="DDG: "];
"1000145" -> "1000143"  [label="DDG: "];
"1000145" -> "1000143"  [label="DDG: "];
"1000115" -> "1000145"  [label="DDG: "];
"1000143" -> "1000106"  [label="AST: "];
"1000144" -> "1000143"  [label="AST: "];
"1000152" -> "1000143"  [label="CFG: "];
"1000143" -> "1000222"  [label="DDG: "];
"1000143" -> "1000222"  [label="DDG: "];
"1000197" -> "1000193"  [label="AST: "];
"1000197" -> "1000198"  [label="CFG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000199" -> "1000197"  [label="CFG: "];
"1000197" -> "1000193"  [label="DDG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000193" -> "1000204"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000195" -> "1000193"  [label="AST: "];
"1000196" -> "1000193"  [label="AST: "];
"1000199" -> "1000193"  [label="AST: "];
"1000200" -> "1000193"  [label="AST: "];
"1000201" -> "1000193"  [label="AST: "];
"1000204" -> "1000193"  [label="AST: "];
"1000206" -> "1000193"  [label="CFG: "];
"1000193" -> "1000222"  [label="DDG: "];
"1000193" -> "1000222"  [label="DDG: "];
"1000193" -> "1000222"  [label="DDG: "];
"1000193" -> "1000222"  [label="DDG: "];
"1000193" -> "1000222"  [label="DDG: "];
"1000193" -> "1000222"  [label="DDG: "];
"1000193" -> "1000222"  [label="DDG: "];
"1000193" -> "1000222"  [label="DDG: "];
"1000155" -> "1000193"  [label="DDG: "];
"1000193" -> "1000205"  [label="DDG: "];
"1000205" -> "1000192"  [label="AST: "];
"1000205" -> "1000206"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000222" -> "1000205"  [label="CFG: "];
"1000205" -> "1000222"  [label="DDG: "];
"1000206" -> "1000205"  [label="DDG: "];
"1000210" -> "1000207"  [label="AST: "];
"1000210" -> "1000211"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="CFG: "];
"1000210" -> "1000207"  [label="DDG: "];
"1000207" -> "1000106"  [label="AST: "];
"1000207" -> "1000214"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000209" -> "1000207"  [label="AST: "];
"1000212" -> "1000207"  [label="AST: "];
"1000213" -> "1000207"  [label="AST: "];
"1000214" -> "1000207"  [label="AST: "];
"1000221" -> "1000207"  [label="CFG: "];
"1000207" -> "1000222"  [label="DDG: "];
"1000207" -> "1000222"  [label="DDG: "];
"1000207" -> "1000222"  [label="DDG: "];
"1000207" -> "1000222"  [label="DDG: "];
"1000207" -> "1000222"  [label="DDG: "];
"1000207" -> "1000222"  [label="DDG: "];
"1000215" -> "1000207"  [label="DDG: "];
"1000188" -> "1000207"  [label="DDG: "];
}
