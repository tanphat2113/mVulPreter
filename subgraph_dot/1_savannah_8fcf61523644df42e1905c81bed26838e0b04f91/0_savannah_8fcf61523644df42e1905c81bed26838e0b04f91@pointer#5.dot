digraph "0_savannah_8fcf61523644df42e1905c81bed26838e0b04f91@pointer" {
"1001350" [label="(Call,*line_buf = line_next)"];
"1001343" [label="(Call,line_next < buf + size)"];
"1001376" [label="(Call,line_next = line_end + 1)"];
"1001365" [label="(Call,line_end == NULL)"];
"1001354" [label="(Call,*line_end = memchr (line_buf, eolbyte, (buf + size) - line_buf))"];
"1001356" [label="(Call,memchr (line_buf, eolbyte, (buf + size) - line_buf))"];
"1001359" [label="(Call,(buf + size) - line_buf)"];
"1001350" [label="(Call,*line_buf = line_next)"];
"1001123" [label="(Call,memchr (lastout, eolbyte, lim - lastout))"];
"1001126" [label="(Call,lim - lastout)"];
"1001116" [label="(Call,lastout < lim)"];
"1001153" [label="(Call,prline (lastout, nl + 1, SEP_CHAR_REJECTED))"];
"1001137" [label="(Call,execute (lastout, nl + 1 - lastout,\n                        &match_size, NULL))"];
"1001141" [label="(Call,1 - lastout)"];
"1001121" [label="(Call,*nl = memchr (lastout, eolbyte, lim - lastout))"];
"1001108" [label="(Call,lastout = bufbeg)"];
"1001106" [label="(Call,!lastout)"];
"1001097" [label="(Call,lastout = lim)"];
"1001054" [label="(Call,print_line_middle (beg, lim, line_color, match_color))"];
"1000988" [label="(Call,print_line_head (beg, lim, sep))"];
"1001027" [label="(Call,line_color = match_color = NULL)"];
"1001029" [label="(Call,match_color = NULL)"];
"1001004" [label="(Call,line_color = (((sep == SEP_CHAR_SELECTED)\n                     ^ (out_invert && (color_option < 0)))\n                    ? selected_line_color  : context_line_color))"];
"1001018" [label="(Call,match_color = (sep == SEP_CHAR_SELECTED\n                     ? selected_match_color : context_match_color))"];
"1001067" [label="(Call,print_line_tail (beg, lim, line_color))"];
"1001052" [label="(Call,beg = print_line_middle (beg, lim, line_color, match_color))"];
"1001075" [label="(Call,lim > beg)"];
"1001065" [label="(Call,beg = print_line_tail (beg, lim, line_color))"];
"1001081" [label="(Call,lim - beg)"];
"1001392" [label="(Call,line_next - line_buf)"];
"1001368" [label="(Call,line_next = line_end = buf + size)"];
"1001370" [label="(Call,line_end = buf + size)"];
"1001340" [label="(Call,line_next = buf)"];
"1001390" [label="(Call,execute (line_buf, line_next - line_buf, match_size, start_ptr))"];
"1001382" [label="(Call,start_ptr && start_ptr >= line_end)"];
"1001384" [label="(Call,start_ptr >= line_end)"];
"1001388" [label="(Call,result = execute (line_buf, line_next - line_buf, match_size, start_ptr))"];
"1001398" [label="(Call,result != (size_t) -1)"];
"1001405" [label="(Call,(line_buf - buf) + result)"];
"1001404" [label="(Return,return (line_buf - buf) + result;)"];
"1001406" [label="(Call,line_buf - buf)"];
"1001378" [label="(Call,line_end + 1)"];
"1001396" [label="(Identifier,start_ptr)"];
"1001045" [label="(ControlStructure,if (matching && (only_matching || *match_color)))"];
"1001415" [label="(MethodReturn,RET)"];
"1001005" [label="(Identifier,line_color)"];
"1001078" [label="(Call,fwrite (beg, 1, lim - beg, stdout))"];
"1001394" [label="(Identifier,line_buf)"];
"1001122" [label="(Identifier,nl)"];
"1001378" [label="(Call,line_end + 1)"];
"1001105" [label="(ControlStructure,if (!lastout))"];
"1001375" [label="(ControlStructure,else)"];
"1001399" [label="(Identifier,result)"];
"1001098" [label="(Identifier,lastout)"];
"1001409" [label="(Identifier,result)"];
"1000985" [label="(ControlStructure,if (!only_matching))"];
"1001074" [label="(Identifier,only_matching)"];
"1001070" [label="(Identifier,line_color)"];
"1001369" [label="(Identifier,line_next)"];
"1001059" [label="(ControlStructure,if (!only_matching && *line_color))"];
"1001388" [label="(Call,result = execute (line_buf, line_next - line_buf, match_size, start_ptr))"];
"1001144" [label="(Call,&match_size)"];
"1001356" [label="(Call,memchr (line_buf, eolbyte, (buf + size) - line_buf))"];
"1001052" [label="(Call,beg = print_line_middle (beg, lim, line_color, match_color))"];
"1001365" [label="(Call,line_end == NULL)"];
"1001384" [label="(Call,start_ptr >= line_end)"];
"1001153" [label="(Call,prline (lastout, nl + 1, SEP_CHAR_REJECTED))"];
"1001360" [label="(Call,buf + size)"];
"1000988" [label="(Call,print_line_head (beg, lim, sep))"];
"1001169" [label="(Call,eol = eolbyte)"];
"1001185" [label="(Call,lastout ? lastout : bufbeg)"];
"1001146" [label="(Identifier,NULL)"];
"1001065" [label="(Call,beg = print_line_tail (beg, lim, line_color))"];
"1001004" [label="(Call,line_color = (((sep == SEP_CHAR_SELECTED)\n                     ^ (out_invert && (color_option < 0)))\n                    ? selected_line_color  : context_line_color))"];
"1001376" [label="(Call,line_next = line_end + 1)"];
"1001053" [label="(Identifier,beg)"];
"1001391" [label="(Identifier,line_buf)"];
"1001405" [label="(Call,(line_buf - buf) + result)"];
"1000981" [label="(Block,)"];
"1001055" [label="(Identifier,beg)"];
"1001181" [label="(Call,prpending (beg))"];
"1001379" [label="(Identifier,line_end)"];
"1001357" [label="(Identifier,line_buf)"];
"1001121" [label="(Call,*nl = memchr (lastout, eolbyte, lim - lastout))"];
"1001068" [label="(Identifier,beg)"];
"1001112" [label="(Call,pending > 0 && lastout < lim)"];
"1001141" [label="(Call,1 - lastout)"];
"1001343" [label="(Call,line_next < buf + size)"];
"1001340" [label="(Call,line_next = buf)"];
"1001348" [label="(Block,)"];
"1000993" [label="(Identifier,matching)"];
"1001099" [label="(Identifier,lim)"];
"1001398" [label="(Call,result != (size_t) -1)"];
"1001035" [label="(Identifier,only_matching)"];
"1001018" [label="(Call,match_color = (sep == SEP_CHAR_SELECTED\n                     ? selected_match_color : context_match_color))"];
"1001003" [label="(Block,)"];
"1001066" [label="(Identifier,beg)"];
"1000990" [label="(Identifier,lim)"];
"1001031" [label="(Identifier,NULL)"];
"1001380" [label="(Literal,1)"];
"1001250" [label="(Call,prline (p, nl, SEP_CHAR_REJECTED))"];
"1001397" [label="(ControlStructure,if (result != (size_t) -1))"];
"1001370" [label="(Call,line_end = buf + size)"];
"1001109" [label="(Identifier,lastout)"];
"1001069" [label="(Identifier,lim)"];
"1001142" [label="(Literal,1)"];
"1001056" [label="(Identifier,lim)"];
"1001377" [label="(Identifier,line_next)"];
"1001392" [label="(Call,line_next - line_buf)"];
"1001219" [label="(Call,p != lastout)"];
"1001029" [label="(Call,match_color = NULL)"];
"1001359" [label="(Call,(buf + size) - line_buf)"];
"1001125" [label="(Identifier,eolbyte)"];
"1001138" [label="(Identifier,lastout)"];
"1001132" [label="(ControlStructure,if (outleft\n          || ((execute (lastout, nl + 1 - lastout,\n                        &match_size, NULL) == (size_t) -1)\n              == !out_invert)))"];
"1001107" [label="(Identifier,lastout)"];
"1001097" [label="(Call,lastout = lim)"];
"1001235" [label="(Call,p < beg)"];
"1001155" [label="(Call,nl + 1)"];
"1001350" [label="(Call,*line_buf = line_next)"];
"1000989" [label="(Identifier,beg)"];
"1001116" [label="(Call,lastout < lim)"];
"1000995" [label="(Call,sep == SEP_CHAR_SELECTED)"];
"1001382" [label="(Call,start_ptr && start_ptr >= line_end)"];
"1001077" [label="(Identifier,beg)"];
"1001106" [label="(Call,!lastout)"];
"1001358" [label="(Identifier,eolbyte)"];
"1001108" [label="(Call,lastout = bufbeg)"];
"1001372" [label="(Call,buf + size)"];
"1001364" [label="(ControlStructure,if (line_end == NULL))"];
"1000991" [label="(Identifier,sep)"];
"1001030" [label="(Identifier,match_color)"];
"1001054" [label="(Call,print_line_middle (beg, lim, line_color, match_color))"];
"1001386" [label="(Identifier,line_end)"];
"1001400" [label="(Call,(size_t) -1)"];
"1001341" [label="(Identifier,line_next)"];
"1001117" [label="(Identifier,lastout)"];
"1001344" [label="(Identifier,line_next)"];
"1001128" [label="(Identifier,lastout)"];
"1001154" [label="(Identifier,lastout)"];
"1001342" [label="(Identifier,buf)"];
"1001082" [label="(Identifier,lim)"];
"1001354" [label="(Call,*line_end = memchr (line_buf, eolbyte, (buf + size) - line_buf))"];
"1001139" [label="(Call,nl + 1 - lastout)"];
"1001006" [label="(Call,((sep == SEP_CHAR_SELECTED)\n                     ^ (out_invert && (color_option < 0)))\n                    ? selected_line_color  : context_line_color)"];
"1001081" [label="(Call,lim - beg)"];
"1001067" [label="(Call,print_line_tail (beg, lim, line_color))"];
"1001390" [label="(Call,execute (line_buf, line_next - line_buf, match_size, start_ptr))"];
"1001408" [label="(Identifier,buf)"];
"1001352" [label="(Identifier,line_next)"];
"1001118" [label="(Identifier,lim)"];
"1001363" [label="(Identifier,line_buf)"];
"1001062" [label="(Identifier,only_matching)"];
"1001137" [label="(Call,execute (lastout, nl + 1 - lastout,\n                        &match_size, NULL))"];
"1001371" [label="(Identifier,line_end)"];
"1001367" [label="(Identifier,NULL)"];
"1001126" [label="(Call,lim - lastout)"];
"1001351" [label="(Identifier,line_buf)"];
"1001027" [label="(Call,line_color = match_color = NULL)"];
"1001020" [label="(Call,sep == SEP_CHAR_SELECTED\n                     ? selected_match_color : context_match_color)"];
"1001123" [label="(Call,memchr (lastout, eolbyte, lim - lastout))"];
"1001404" [label="(Return,return (line_buf - buf) + result;)"];
"1001110" [label="(Identifier,bufbeg)"];
"1001345" [label="(Call,buf + size)"];
"1001127" [label="(Identifier,lim)"];
"1001026" [label="(ControlStructure,else)"];
"1001406" [label="(Call,line_buf - buf)"];
"1001393" [label="(Identifier,line_next)"];
"1001131" [label="(Identifier,pending)"];
"1001395" [label="(Identifier,match_size)"];
"1001407" [label="(Identifier,line_buf)"];
"1001028" [label="(Identifier,line_color)"];
"1001389" [label="(Identifier,result)"];
"1001183" [label="(Call,bp = lastout ? lastout : bufbeg)"];
"1001084" [label="(Identifier,stdout)"];
"1001057" [label="(Identifier,line_color)"];
"1001387" [label="(ControlStructure,continue;)"];
"1001101" [label="(Identifier,line_buffered)"];
"1001058" [label="(Identifier,match_color)"];
"1001381" [label="(ControlStructure,if (start_ptr && start_ptr >= line_end))"];
"1001083" [label="(Identifier,beg)"];
"1001072" [label="(Call,!only_matching && lim > beg)"];
"1001355" [label="(Identifier,line_end)"];
"1001265" [label="(Call,p < lim)"];
"1001310" [label="(Call,prline (beg, lim, SEP_CHAR_SELECTED))"];
"1001124" [label="(Identifier,lastout)"];
"1001114" [label="(Identifier,pending)"];
"1001339" [label="(ControlStructure,for (line_next = buf; line_next < buf + size; ))"];
"1001019" [label="(Identifier,match_color)"];
"1001136" [label="(Call,execute (lastout, nl + 1 - lastout,\n                        &match_size, NULL) == (size_t) -1)"];
"1001368" [label="(Call,line_next = line_end = buf + size)"];
"1001383" [label="(Identifier,start_ptr)"];
"1001385" [label="(Identifier,start_ptr)"];
"1001366" [label="(Identifier,line_end)"];
"1001143" [label="(Identifier,lastout)"];
"1001158" [label="(Identifier,SEP_CHAR_REJECTED)"];
"1001119" [label="(Block,)"];
"1001075" [label="(Call,lim > beg)"];
"1001076" [label="(Identifier,lim)"];
"1001350" -> "1001348"  [label="AST: "];
"1001350" -> "1001352"  [label="CFG: "];
"1001351" -> "1001350"  [label="AST: "];
"1001352" -> "1001350"  [label="AST: "];
"1001355" -> "1001350"  [label="CFG: "];
"1001343" -> "1001350"  [label="DDG: line_next"];
"1001350" -> "1001359"  [label="DDG: line_buf"];
"1001343" -> "1001339"  [label="AST: "];
"1001343" -> "1001345"  [label="CFG: "];
"1001344" -> "1001343"  [label="AST: "];
"1001345" -> "1001343"  [label="AST: "];
"1001351" -> "1001343"  [label="CFG: "];
"1001412" -> "1001343"  [label="CFG: "];
"1001343" -> "1001415"  [label="DDG: line_next < buf + size"];
"1001343" -> "1001415"  [label="DDG: line_next"];
"1001343" -> "1001415"  [label="DDG: buf + size"];
"1001376" -> "1001343"  [label="DDG: line_next"];
"1001392" -> "1001343"  [label="DDG: line_next"];
"1001340" -> "1001343"  [label="DDG: line_next"];
"1001368" -> "1001343"  [label="DDG: line_next"];
"1001376" -> "1001375"  [label="AST: "];
"1001376" -> "1001378"  [label="CFG: "];
"1001377" -> "1001376"  [label="AST: "];
"1001378" -> "1001376"  [label="AST: "];
"1001383" -> "1001376"  [label="CFG: "];
"1001376" -> "1001415"  [label="DDG: line_end + 1"];
"1001365" -> "1001376"  [label="DDG: line_end"];
"1001376" -> "1001392"  [label="DDG: line_next"];
"1001365" -> "1001364"  [label="AST: "];
"1001365" -> "1001367"  [label="CFG: "];
"1001366" -> "1001365"  [label="AST: "];
"1001367" -> "1001365"  [label="AST: "];
"1001369" -> "1001365"  [label="CFG: "];
"1001377" -> "1001365"  [label="CFG: "];
"1001365" -> "1001415"  [label="DDG: line_end == NULL"];
"1001365" -> "1001415"  [label="DDG: NULL"];
"1001354" -> "1001365"  [label="DDG: line_end"];
"1001137" -> "1001365"  [label="DDG: NULL"];
"1001365" -> "1001378"  [label="DDG: line_end"];
"1001365" -> "1001384"  [label="DDG: line_end"];
"1001354" -> "1001348"  [label="AST: "];
"1001354" -> "1001356"  [label="CFG: "];
"1001355" -> "1001354"  [label="AST: "];
"1001356" -> "1001354"  [label="AST: "];
"1001366" -> "1001354"  [label="CFG: "];
"1001354" -> "1001415"  [label="DDG: memchr (line_buf, eolbyte, (buf + size) - line_buf)"];
"1001356" -> "1001354"  [label="DDG: line_buf"];
"1001356" -> "1001354"  [label="DDG: eolbyte"];
"1001356" -> "1001354"  [label="DDG: (buf + size) - line_buf"];
"1001356" -> "1001359"  [label="CFG: "];
"1001357" -> "1001356"  [label="AST: "];
"1001358" -> "1001356"  [label="AST: "];
"1001359" -> "1001356"  [label="AST: "];
"1001356" -> "1001415"  [label="DDG: line_buf"];
"1001356" -> "1001415"  [label="DDG: (buf + size) - line_buf"];
"1001356" -> "1001415"  [label="DDG: eolbyte"];
"1001359" -> "1001356"  [label="DDG: line_buf"];
"1001359" -> "1001356"  [label="DDG: buf + size"];
"1001123" -> "1001356"  [label="DDG: eolbyte"];
"1001356" -> "1001392"  [label="DDG: line_buf"];
"1001359" -> "1001363"  [label="CFG: "];
"1001360" -> "1001359"  [label="AST: "];
"1001363" -> "1001359"  [label="AST: "];
"1001359" -> "1001415"  [label="DDG: buf + size"];
"1001123" -> "1001121"  [label="AST: "];
"1001123" -> "1001126"  [label="CFG: "];
"1001124" -> "1001123"  [label="AST: "];
"1001125" -> "1001123"  [label="AST: "];
"1001126" -> "1001123"  [label="AST: "];
"1001121" -> "1001123"  [label="CFG: "];
"1001123" -> "1001415"  [label="DDG: lim - lastout"];
"1001123" -> "1001116"  [label="DDG: lastout"];
"1001123" -> "1001121"  [label="DDG: lastout"];
"1001123" -> "1001121"  [label="DDG: eolbyte"];
"1001123" -> "1001121"  [label="DDG: lim - lastout"];
"1001126" -> "1001123"  [label="DDG: lastout"];
"1001126" -> "1001123"  [label="DDG: lim"];
"1001123" -> "1001126"  [label="DDG: lastout"];
"1001123" -> "1001141"  [label="DDG: lastout"];
"1001123" -> "1001153"  [label="DDG: lastout"];
"1001123" -> "1001169"  [label="DDG: eolbyte"];
"1001123" -> "1001183"  [label="DDG: lastout"];
"1001123" -> "1001185"  [label="DDG: lastout"];
"1001123" -> "1001219"  [label="DDG: lastout"];
"1001126" -> "1001128"  [label="CFG: "];
"1001127" -> "1001126"  [label="AST: "];
"1001128" -> "1001126"  [label="AST: "];
"1001126" -> "1001415"  [label="DDG: lim"];
"1001126" -> "1001116"  [label="DDG: lim"];
"1001116" -> "1001126"  [label="DDG: lim"];
"1001116" -> "1001126"  [label="DDG: lastout"];
"1001054" -> "1001126"  [label="DDG: lim"];
"1000988" -> "1001126"  [label="DDG: lim"];
"1001067" -> "1001126"  [label="DDG: lim"];
"1001075" -> "1001126"  [label="DDG: lim"];
"1001081" -> "1001126"  [label="DDG: lim"];
"1001153" -> "1001126"  [label="DDG: lastout"];
"1001108" -> "1001126"  [label="DDG: lastout"];
"1001137" -> "1001126"  [label="DDG: lastout"];
"1001106" -> "1001126"  [label="DDG: lastout"];
"1001126" -> "1001265"  [label="DDG: lim"];
"1001126" -> "1001310"  [label="DDG: lim"];
"1001116" -> "1001112"  [label="AST: "];
"1001116" -> "1001118"  [label="CFG: "];
"1001117" -> "1001116"  [label="AST: "];
"1001118" -> "1001116"  [label="AST: "];
"1001112" -> "1001116"  [label="CFG: "];
"1001116" -> "1001415"  [label="DDG: lim"];
"1001116" -> "1001112"  [label="DDG: lastout"];
"1001116" -> "1001112"  [label="DDG: lim"];
"1001153" -> "1001116"  [label="DDG: lastout"];
"1001108" -> "1001116"  [label="DDG: lastout"];
"1001137" -> "1001116"  [label="DDG: lastout"];
"1001106" -> "1001116"  [label="DDG: lastout"];
"1001054" -> "1001116"  [label="DDG: lim"];
"1000988" -> "1001116"  [label="DDG: lim"];
"1001067" -> "1001116"  [label="DDG: lim"];
"1001075" -> "1001116"  [label="DDG: lim"];
"1001081" -> "1001116"  [label="DDG: lim"];
"1001116" -> "1001183"  [label="DDG: lastout"];
"1001116" -> "1001185"  [label="DDG: lastout"];
"1001116" -> "1001219"  [label="DDG: lastout"];
"1001116" -> "1001265"  [label="DDG: lim"];
"1001116" -> "1001310"  [label="DDG: lim"];
"1001153" -> "1001132"  [label="AST: "];
"1001153" -> "1001158"  [label="CFG: "];
"1001154" -> "1001153"  [label="AST: "];
"1001155" -> "1001153"  [label="AST: "];
"1001158" -> "1001153"  [label="AST: "];
"1001114" -> "1001153"  [label="CFG: "];
"1001153" -> "1001415"  [label="DDG: nl + 1"];
"1001153" -> "1001415"  [label="DDG: prline (lastout, nl + 1, SEP_CHAR_REJECTED)"];
"1001153" -> "1001415"  [label="DDG: SEP_CHAR_REJECTED"];
"1001137" -> "1001153"  [label="DDG: lastout"];
"1001121" -> "1001153"  [label="DDG: nl"];
"1001153" -> "1001183"  [label="DDG: lastout"];
"1001153" -> "1001185"  [label="DDG: lastout"];
"1001153" -> "1001219"  [label="DDG: lastout"];
"1001153" -> "1001250"  [label="DDG: SEP_CHAR_REJECTED"];
"1001137" -> "1001136"  [label="AST: "];
"1001137" -> "1001146"  [label="CFG: "];
"1001138" -> "1001137"  [label="AST: "];
"1001139" -> "1001137"  [label="AST: "];
"1001144" -> "1001137"  [label="AST: "];
"1001146" -> "1001137"  [label="AST: "];
"1001148" -> "1001137"  [label="CFG: "];
"1001137" -> "1001415"  [label="DDG: NULL"];
"1001137" -> "1001415"  [label="DDG: nl + 1 - lastout"];
"1001137" -> "1001415"  [label="DDG: &match_size"];
"1001137" -> "1001136"  [label="DDG: lastout"];
"1001137" -> "1001136"  [label="DDG: nl + 1 - lastout"];
"1001137" -> "1001136"  [label="DDG: &match_size"];
"1001137" -> "1001136"  [label="DDG: NULL"];
"1001141" -> "1001137"  [label="DDG: lastout"];
"1001141" -> "1001137"  [label="DDG: 1"];
"1001121" -> "1001137"  [label="DDG: nl"];
"1001137" -> "1001183"  [label="DDG: lastout"];
"1001137" -> "1001185"  [label="DDG: lastout"];
"1001137" -> "1001219"  [label="DDG: lastout"];
"1001141" -> "1001139"  [label="AST: "];
"1001141" -> "1001143"  [label="CFG: "];
"1001142" -> "1001141"  [label="AST: "];
"1001143" -> "1001141"  [label="AST: "];
"1001139" -> "1001141"  [label="CFG: "];
"1001141" -> "1001139"  [label="DDG: 1"];
"1001141" -> "1001139"  [label="DDG: lastout"];
"1001121" -> "1001119"  [label="AST: "];
"1001122" -> "1001121"  [label="AST: "];
"1001131" -> "1001121"  [label="CFG: "];
"1001121" -> "1001415"  [label="DDG: memchr (lastout, eolbyte, lim - lastout)"];
"1001121" -> "1001415"  [label="DDG: nl"];
"1001121" -> "1001139"  [label="DDG: nl"];
"1001121" -> "1001155"  [label="DDG: nl"];
"1001108" -> "1001105"  [label="AST: "];
"1001108" -> "1001110"  [label="CFG: "];
"1001109" -> "1001108"  [label="AST: "];
"1001110" -> "1001108"  [label="AST: "];
"1001114" -> "1001108"  [label="CFG: "];
"1001108" -> "1001183"  [label="DDG: lastout"];
"1001108" -> "1001185"  [label="DDG: lastout"];
"1001108" -> "1001219"  [label="DDG: lastout"];
"1001106" -> "1001105"  [label="AST: "];
"1001106" -> "1001107"  [label="CFG: "];
"1001107" -> "1001106"  [label="AST: "];
"1001109" -> "1001106"  [label="CFG: "];
"1001114" -> "1001106"  [label="CFG: "];
"1001106" -> "1001415"  [label="DDG: !lastout"];
"1001097" -> "1001106"  [label="DDG: lastout"];
"1001106" -> "1001183"  [label="DDG: lastout"];
"1001106" -> "1001185"  [label="DDG: lastout"];
"1001106" -> "1001219"  [label="DDG: lastout"];
"1001097" -> "1000981"  [label="AST: "];
"1001097" -> "1001099"  [label="CFG: "];
"1001098" -> "1001097"  [label="AST: "];
"1001099" -> "1001097"  [label="AST: "];
"1001101" -> "1001097"  [label="CFG: "];
"1001097" -> "1001415"  [label="DDG: lim"];
"1001054" -> "1001097"  [label="DDG: lim"];
"1000988" -> "1001097"  [label="DDG: lim"];
"1001067" -> "1001097"  [label="DDG: lim"];
"1001075" -> "1001097"  [label="DDG: lim"];
"1001081" -> "1001097"  [label="DDG: lim"];
"1001054" -> "1001052"  [label="AST: "];
"1001054" -> "1001058"  [label="CFG: "];
"1001055" -> "1001054"  [label="AST: "];
"1001056" -> "1001054"  [label="AST: "];
"1001057" -> "1001054"  [label="AST: "];
"1001058" -> "1001054"  [label="AST: "];
"1001052" -> "1001054"  [label="CFG: "];
"1001054" -> "1001415"  [label="DDG: line_color"];
"1001054" -> "1001415"  [label="DDG: match_color"];
"1001054" -> "1001052"  [label="DDG: beg"];
"1001054" -> "1001052"  [label="DDG: lim"];
"1001054" -> "1001052"  [label="DDG: line_color"];
"1001054" -> "1001052"  [label="DDG: match_color"];
"1000988" -> "1001054"  [label="DDG: beg"];
"1000988" -> "1001054"  [label="DDG: lim"];
"1001027" -> "1001054"  [label="DDG: line_color"];
"1001004" -> "1001054"  [label="DDG: line_color"];
"1001018" -> "1001054"  [label="DDG: match_color"];
"1001029" -> "1001054"  [label="DDG: match_color"];
"1001054" -> "1001067"  [label="DDG: lim"];
"1001054" -> "1001067"  [label="DDG: line_color"];
"1001054" -> "1001075"  [label="DDG: lim"];
"1001054" -> "1001081"  [label="DDG: lim"];
"1001054" -> "1001265"  [label="DDG: lim"];
"1001054" -> "1001310"  [label="DDG: lim"];
"1000988" -> "1000985"  [label="AST: "];
"1000988" -> "1000991"  [label="CFG: "];
"1000989" -> "1000988"  [label="AST: "];
"1000990" -> "1000988"  [label="AST: "];
"1000991" -> "1000988"  [label="AST: "];
"1000993" -> "1000988"  [label="CFG: "];
"1000988" -> "1001415"  [label="DDG: print_line_head (beg, lim, sep)"];
"1000988" -> "1000995"  [label="DDG: sep"];
"1000988" -> "1001067"  [label="DDG: beg"];
"1000988" -> "1001067"  [label="DDG: lim"];
"1000988" -> "1001075"  [label="DDG: lim"];
"1000988" -> "1001075"  [label="DDG: beg"];
"1000988" -> "1001081"  [label="DDG: lim"];
"1000988" -> "1001081"  [label="DDG: beg"];
"1000988" -> "1001181"  [label="DDG: beg"];
"1000988" -> "1001235"  [label="DDG: beg"];
"1000988" -> "1001265"  [label="DDG: lim"];
"1000988" -> "1001310"  [label="DDG: lim"];
"1001027" -> "1001026"  [label="AST: "];
"1001027" -> "1001029"  [label="CFG: "];
"1001028" -> "1001027"  [label="AST: "];
"1001029" -> "1001027"  [label="AST: "];
"1001035" -> "1001027"  [label="CFG: "];
"1001027" -> "1001415"  [label="DDG: line_color"];
"1001029" -> "1001027"  [label="DDG: match_color"];
"1001027" -> "1001067"  [label="DDG: line_color"];
"1001029" -> "1001031"  [label="CFG: "];
"1001030" -> "1001029"  [label="AST: "];
"1001031" -> "1001029"  [label="AST: "];
"1001029" -> "1001415"  [label="DDG: match_color"];
"1001029" -> "1001415"  [label="DDG: NULL"];
"1001004" -> "1001003"  [label="AST: "];
"1001004" -> "1001006"  [label="CFG: "];
"1001005" -> "1001004"  [label="AST: "];
"1001006" -> "1001004"  [label="AST: "];
"1001019" -> "1001004"  [label="CFG: "];
"1001004" -> "1001415"  [label="DDG: line_color"];
"1001004" -> "1001415"  [label="DDG: ((sep == SEP_CHAR_SELECTED)\n                     ^ (out_invert && (color_option < 0)))\n                    ? selected_line_color  : context_line_color"];
"1001004" -> "1001067"  [label="DDG: line_color"];
"1001018" -> "1001003"  [label="AST: "];
"1001018" -> "1001020"  [label="CFG: "];
"1001019" -> "1001018"  [label="AST: "];
"1001020" -> "1001018"  [label="AST: "];
"1001035" -> "1001018"  [label="CFG: "];
"1001018" -> "1001415"  [label="DDG: match_color"];
"1001018" -> "1001415"  [label="DDG: sep == SEP_CHAR_SELECTED\n                     ? selected_match_color : context_match_color"];
"1001067" -> "1001065"  [label="AST: "];
"1001067" -> "1001070"  [label="CFG: "];
"1001068" -> "1001067"  [label="AST: "];
"1001069" -> "1001067"  [label="AST: "];
"1001070" -> "1001067"  [label="AST: "];
"1001065" -> "1001067"  [label="CFG: "];
"1001067" -> "1001415"  [label="DDG: line_color"];
"1001067" -> "1001065"  [label="DDG: beg"];
"1001067" -> "1001065"  [label="DDG: lim"];
"1001067" -> "1001065"  [label="DDG: line_color"];
"1001052" -> "1001067"  [label="DDG: beg"];
"1001067" -> "1001075"  [label="DDG: lim"];
"1001067" -> "1001081"  [label="DDG: lim"];
"1001067" -> "1001265"  [label="DDG: lim"];
"1001067" -> "1001310"  [label="DDG: lim"];
"1001052" -> "1001045"  [label="AST: "];
"1001053" -> "1001052"  [label="AST: "];
"1001062" -> "1001052"  [label="CFG: "];
"1001052" -> "1001415"  [label="DDG: print_line_middle (beg, lim, line_color, match_color)"];
"1001052" -> "1001075"  [label="DDG: beg"];
"1001052" -> "1001081"  [label="DDG: beg"];
"1001052" -> "1001181"  [label="DDG: beg"];
"1001052" -> "1001235"  [label="DDG: beg"];
"1001075" -> "1001072"  [label="AST: "];
"1001075" -> "1001077"  [label="CFG: "];
"1001076" -> "1001075"  [label="AST: "];
"1001077" -> "1001075"  [label="AST: "];
"1001072" -> "1001075"  [label="CFG: "];
"1001075" -> "1001072"  [label="DDG: lim"];
"1001075" -> "1001072"  [label="DDG: beg"];
"1001065" -> "1001075"  [label="DDG: beg"];
"1001075" -> "1001081"  [label="DDG: lim"];
"1001075" -> "1001081"  [label="DDG: beg"];
"1001075" -> "1001181"  [label="DDG: beg"];
"1001075" -> "1001235"  [label="DDG: beg"];
"1001075" -> "1001265"  [label="DDG: lim"];
"1001075" -> "1001310"  [label="DDG: lim"];
"1001065" -> "1001059"  [label="AST: "];
"1001066" -> "1001065"  [label="AST: "];
"1001074" -> "1001065"  [label="CFG: "];
"1001065" -> "1001415"  [label="DDG: print_line_tail (beg, lim, line_color)"];
"1001065" -> "1001081"  [label="DDG: beg"];
"1001065" -> "1001181"  [label="DDG: beg"];
"1001065" -> "1001235"  [label="DDG: beg"];
"1001081" -> "1001078"  [label="AST: "];
"1001081" -> "1001083"  [label="CFG: "];
"1001082" -> "1001081"  [label="AST: "];
"1001083" -> "1001081"  [label="AST: "];
"1001084" -> "1001081"  [label="CFG: "];
"1001081" -> "1001078"  [label="DDG: beg"];
"1001081" -> "1001078"  [label="DDG: lim"];
"1001081" -> "1001265"  [label="DDG: lim"];
"1001081" -> "1001310"  [label="DDG: lim"];
"1001392" -> "1001390"  [label="AST: "];
"1001392" -> "1001394"  [label="CFG: "];
"1001393" -> "1001392"  [label="AST: "];
"1001394" -> "1001392"  [label="AST: "];
"1001395" -> "1001392"  [label="CFG: "];
"1001392" -> "1001415"  [label="DDG: line_next"];
"1001392" -> "1001390"  [label="DDG: line_buf"];
"1001392" -> "1001390"  [label="DDG: line_next"];
"1001368" -> "1001392"  [label="DDG: line_next"];
"1001368" -> "1001364"  [label="AST: "];
"1001368" -> "1001370"  [label="CFG: "];
"1001369" -> "1001368"  [label="AST: "];
"1001370" -> "1001368"  [label="AST: "];
"1001383" -> "1001368"  [label="CFG: "];
"1001370" -> "1001368"  [label="DDG: line_end"];
"1001370" -> "1001372"  [label="CFG: "];
"1001371" -> "1001370"  [label="AST: "];
"1001372" -> "1001370"  [label="AST: "];
"1001370" -> "1001415"  [label="DDG: line_end"];
"1001370" -> "1001415"  [label="DDG: buf + size"];
"1001370" -> "1001384"  [label="DDG: line_end"];
"1001340" -> "1001339"  [label="AST: "];
"1001340" -> "1001342"  [label="CFG: "];
"1001341" -> "1001340"  [label="AST: "];
"1001342" -> "1001340"  [label="AST: "];
"1001344" -> "1001340"  [label="CFG: "];
"1001390" -> "1001388"  [label="AST: "];
"1001390" -> "1001396"  [label="CFG: "];
"1001391" -> "1001390"  [label="AST: "];
"1001395" -> "1001390"  [label="AST: "];
"1001396" -> "1001390"  [label="AST: "];
"1001388" -> "1001390"  [label="CFG: "];
"1001390" -> "1001415"  [label="DDG: line_next - line_buf"];
"1001390" -> "1001415"  [label="DDG: line_buf"];
"1001390" -> "1001415"  [label="DDG: match_size"];
"1001390" -> "1001415"  [label="DDG: start_ptr"];
"1001390" -> "1001382"  [label="DDG: start_ptr"];
"1001390" -> "1001384"  [label="DDG: start_ptr"];
"1001390" -> "1001388"  [label="DDG: line_buf"];
"1001390" -> "1001388"  [label="DDG: line_next - line_buf"];
"1001390" -> "1001388"  [label="DDG: match_size"];
"1001390" -> "1001388"  [label="DDG: start_ptr"];
"1001382" -> "1001390"  [label="DDG: start_ptr"];
"1001390" -> "1001406"  [label="DDG: line_buf"];
"1001382" -> "1001381"  [label="AST: "];
"1001382" -> "1001383"  [label="CFG: "];
"1001382" -> "1001384"  [label="CFG: "];
"1001383" -> "1001382"  [label="AST: "];
"1001384" -> "1001382"  [label="AST: "];
"1001387" -> "1001382"  [label="CFG: "];
"1001389" -> "1001382"  [label="CFG: "];
"1001382" -> "1001415"  [label="DDG: start_ptr"];
"1001382" -> "1001415"  [label="DDG: start_ptr >= line_end"];
"1001382" -> "1001415"  [label="DDG: start_ptr && start_ptr >= line_end"];
"1001384" -> "1001382"  [label="DDG: start_ptr"];
"1001384" -> "1001382"  [label="DDG: line_end"];
"1001382" -> "1001384"  [label="DDG: start_ptr"];
"1001384" -> "1001386"  [label="CFG: "];
"1001385" -> "1001384"  [label="AST: "];
"1001386" -> "1001384"  [label="AST: "];
"1001384" -> "1001415"  [label="DDG: line_end"];
"1001388" -> "1001348"  [label="AST: "];
"1001389" -> "1001388"  [label="AST: "];
"1001399" -> "1001388"  [label="CFG: "];
"1001388" -> "1001415"  [label="DDG: execute (line_buf, line_next - line_buf, match_size, start_ptr)"];
"1001388" -> "1001398"  [label="DDG: result"];
"1001398" -> "1001397"  [label="AST: "];
"1001398" -> "1001400"  [label="CFG: "];
"1001399" -> "1001398"  [label="AST: "];
"1001400" -> "1001398"  [label="AST: "];
"1001344" -> "1001398"  [label="CFG: "];
"1001407" -> "1001398"  [label="CFG: "];
"1001398" -> "1001415"  [label="DDG: (size_t) -1"];
"1001398" -> "1001415"  [label="DDG: result != (size_t) -1"];
"1001398" -> "1001415"  [label="DDG: result"];
"1001400" -> "1001398"  [label="DDG: -1"];
"1001398" -> "1001405"  [label="DDG: result"];
"1001405" -> "1001404"  [label="AST: "];
"1001405" -> "1001409"  [label="CFG: "];
"1001406" -> "1001405"  [label="AST: "];
"1001409" -> "1001405"  [label="AST: "];
"1001404" -> "1001405"  [label="CFG: "];
"1001405" -> "1001415"  [label="DDG: (line_buf - buf) + result"];
"1001405" -> "1001415"  [label="DDG: line_buf - buf"];
"1001405" -> "1001415"  [label="DDG: result"];
"1001405" -> "1001404"  [label="DDG: (line_buf - buf) + result"];
"1001406" -> "1001405"  [label="DDG: line_buf"];
"1001406" -> "1001405"  [label="DDG: buf"];
"1001404" -> "1001397"  [label="AST: "];
"1001415" -> "1001404"  [label="CFG: "];
"1001404" -> "1001415"  [label="DDG: <RET>"];
"1001406" -> "1001408"  [label="CFG: "];
"1001407" -> "1001406"  [label="AST: "];
"1001408" -> "1001406"  [label="AST: "];
"1001409" -> "1001406"  [label="CFG: "];
"1001406" -> "1001415"  [label="DDG: buf"];
"1001406" -> "1001415"  [label="DDG: line_buf"];
"1001378" -> "1001380"  [label="CFG: "];
"1001379" -> "1001378"  [label="AST: "];
"1001380" -> "1001378"  [label="AST: "];
"1001378" -> "1001415"  [label="DDG: line_end"];
}
