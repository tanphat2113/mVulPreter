digraph "0_savannah_8fcf61523644df42e1905c81bed26838e0b04f91@pointer" {
"1001048" [label="(Call,only_matching || *match_color)"];
"1001034" [label="(Call,only_matching && matching)"];
"1000986" [label="(Call,!only_matching)"];
"1000992" [label="(Call,matching = (sep == SEP_CHAR_SELECTED) ^ !!out_invert)"];
"1000994" [label="(Call,(sep == SEP_CHAR_SELECTED) ^ !!out_invert)"];
"1000995" [label="(Call,sep == SEP_CHAR_SELECTED)"];
"1000988" [label="(Call,print_line_head (beg, lim, sep))"];
"1000998" [label="(Call,!!out_invert)"];
"1000999" [label="(Call,!out_invert)"];
"1001039" [label="(Call,*line_color || *match_color)"];
"1001046" [label="(Call,matching && (only_matching || *match_color))"];
"1001061" [label="(Call,!only_matching)"];
"1001060" [label="(Call,!only_matching && *line_color)"];
"1001073" [label="(Call,!only_matching)"];
"1001072" [label="(Call,!only_matching && lim > beg)"];
"1001038" [label="(Identifier,color_option)"];
"1000993" [label="(Identifier,matching)"];
"1001415" [label="(MethodReturn,RET)"];
"1000998" [label="(Call,!!out_invert)"];
"1001037" [label="(Call,color_option  && (*line_color || *match_color))"];
"1001045" [label="(ControlStructure,if (matching && (only_matching || *match_color)))"];
"1001008" [label="(Call,sep == SEP_CHAR_SELECTED)"];
"1001042" [label="(Call,*match_color)"];
"1001035" [label="(Identifier,only_matching)"];
"1001002" [label="(Identifier,color_option)"];
"1001066" [label="(Identifier,beg)"];
"1001079" [label="(Identifier,beg)"];
"1001048" [label="(Call,only_matching || *match_color)"];
"1001036" [label="(Identifier,matching)"];
"1000991" [label="(Identifier,sep)"];
"1000990" [label="(Identifier,lim)"];
"1001040" [label="(Call,*line_color)"];
"1001054" [label="(Call,print_line_middle (beg, lim, line_color, match_color))"];
"1001047" [label="(Identifier,matching)"];
"1001151" [label="(Call,!out_invert)"];
"1001000" [label="(Identifier,out_invert)"];
"1000999" [label="(Call,!out_invert)"];
"1001064" [label="(Identifier,line_color)"];
"1001039" [label="(Call,*line_color || *match_color)"];
"1000985" [label="(ControlStructure,if (!only_matching))"];
"1001033" [label="(Call,(only_matching && matching)\n      || (color_option  && (*line_color || *match_color)))"];
"1001073" [label="(Call,!only_matching)"];
"1001074" [label="(Identifier,only_matching)"];
"1001059" [label="(ControlStructure,if (!only_matching && *line_color))"];
"1001072" [label="(Call,!only_matching && lim > beg)"];
"1001076" [label="(Identifier,lim)"];
"1001060" [label="(Call,!only_matching && *line_color)"];
"1001081" [label="(Call,lim - beg)"];
"1001067" [label="(Call,print_line_tail (beg, lim, line_color))"];
"1001265" [label="(Call,p < lim)"];
"1001310" [label="(Call,prline (beg, lim, SEP_CHAR_SELECTED))"];
"1000988" [label="(Call,print_line_head (beg, lim, sep))"];
"1001075" [label="(Call,lim > beg)"];
"1000994" [label="(Call,(sep == SEP_CHAR_SELECTED) ^ !!out_invert)"];
"1001062" [label="(Identifier,only_matching)"];
"1001087" [label="(Identifier,stdout)"];
"1001061" [label="(Call,!only_matching)"];
"1001071" [label="(ControlStructure,if (!only_matching && lim > beg))"];
"1000987" [label="(Identifier,only_matching)"];
"1001034" [label="(Call,only_matching && matching)"];
"1001063" [label="(Call,*line_color)"];
"1001053" [label="(Identifier,beg)"];
"1001126" [label="(Call,lim - lastout)"];
"1001097" [label="(Call,lastout = lim)"];
"1001011" [label="(Call,out_invert && (color_option < 0))"];
"1000986" [label="(Call,!only_matching)"];
"1000981" [label="(Block,)"];
"1000997" [label="(Identifier,SEP_CHAR_SELECTED)"];
"1000996" [label="(Identifier,sep)"];
"1001235" [label="(Call,p < beg)"];
"1001046" [label="(Call,matching && (only_matching || *match_color))"];
"1001049" [label="(Identifier,only_matching)"];
"1001181" [label="(Call,prpending (beg))"];
"1000992" [label="(Call,matching = (sep == SEP_CHAR_SELECTED) ^ !!out_invert)"];
"1001050" [label="(Call,*match_color)"];
"1001288" [label="(Call,prline (p, nl, SEP_CHAR_SELECTED))"];
"1000989" [label="(Identifier,beg)"];
"1001116" [label="(Call,lastout < lim)"];
"1000995" [label="(Call,sep == SEP_CHAR_SELECTED)"];
"1001048" -> "1001046"  [label="AST: "];
"1001048" -> "1001049"  [label="CFG: "];
"1001048" -> "1001050"  [label="CFG: "];
"1001049" -> "1001048"  [label="AST: "];
"1001050" -> "1001048"  [label="AST: "];
"1001046" -> "1001048"  [label="CFG: "];
"1001048" -> "1001415"  [label="DDG: *match_color"];
"1001048" -> "1001046"  [label="DDG: only_matching"];
"1001048" -> "1001046"  [label="DDG: *match_color"];
"1001034" -> "1001048"  [label="DDG: only_matching"];
"1001039" -> "1001048"  [label="DDG: *match_color"];
"1001048" -> "1001061"  [label="DDG: only_matching"];
"1001034" -> "1001033"  [label="AST: "];
"1001034" -> "1001035"  [label="CFG: "];
"1001034" -> "1001036"  [label="CFG: "];
"1001035" -> "1001034"  [label="AST: "];
"1001036" -> "1001034"  [label="AST: "];
"1001038" -> "1001034"  [label="CFG: "];
"1001033" -> "1001034"  [label="CFG: "];
"1001034" -> "1001415"  [label="DDG: matching"];
"1001034" -> "1001033"  [label="DDG: only_matching"];
"1001034" -> "1001033"  [label="DDG: matching"];
"1000986" -> "1001034"  [label="DDG: only_matching"];
"1000992" -> "1001034"  [label="DDG: matching"];
"1001034" -> "1001046"  [label="DDG: matching"];
"1001034" -> "1001061"  [label="DDG: only_matching"];
"1001034" -> "1001073"  [label="DDG: only_matching"];
"1000986" -> "1000985"  [label="AST: "];
"1000986" -> "1000987"  [label="CFG: "];
"1000987" -> "1000986"  [label="AST: "];
"1000989" -> "1000986"  [label="CFG: "];
"1000993" -> "1000986"  [label="CFG: "];
"1000992" -> "1000981"  [label="AST: "];
"1000992" -> "1000994"  [label="CFG: "];
"1000993" -> "1000992"  [label="AST: "];
"1000994" -> "1000992"  [label="AST: "];
"1001002" -> "1000992"  [label="CFG: "];
"1000992" -> "1001415"  [label="DDG: (sep == SEP_CHAR_SELECTED) ^ !!out_invert"];
"1000994" -> "1000992"  [label="DDG: sep == SEP_CHAR_SELECTED"];
"1000994" -> "1000992"  [label="DDG: !!out_invert"];
"1000994" -> "1000998"  [label="CFG: "];
"1000995" -> "1000994"  [label="AST: "];
"1000998" -> "1000994"  [label="AST: "];
"1000994" -> "1001415"  [label="DDG: !!out_invert"];
"1000994" -> "1001415"  [label="DDG: sep == SEP_CHAR_SELECTED"];
"1000995" -> "1000994"  [label="DDG: sep"];
"1000995" -> "1000994"  [label="DDG: SEP_CHAR_SELECTED"];
"1000998" -> "1000994"  [label="DDG: !out_invert"];
"1000995" -> "1000997"  [label="CFG: "];
"1000996" -> "1000995"  [label="AST: "];
"1000997" -> "1000995"  [label="AST: "];
"1001000" -> "1000995"  [label="CFG: "];
"1000995" -> "1001415"  [label="DDG: sep"];
"1000995" -> "1001415"  [label="DDG: SEP_CHAR_SELECTED"];
"1000988" -> "1000995"  [label="DDG: sep"];
"1000995" -> "1001008"  [label="DDG: sep"];
"1000995" -> "1001008"  [label="DDG: SEP_CHAR_SELECTED"];
"1000995" -> "1001288"  [label="DDG: SEP_CHAR_SELECTED"];
"1000995" -> "1001310"  [label="DDG: SEP_CHAR_SELECTED"];
"1000988" -> "1000985"  [label="AST: "];
"1000988" -> "1000991"  [label="CFG: "];
"1000989" -> "1000988"  [label="AST: "];
"1000990" -> "1000988"  [label="AST: "];
"1000991" -> "1000988"  [label="AST: "];
"1000993" -> "1000988"  [label="CFG: "];
"1000988" -> "1001415"  [label="DDG: print_line_head (beg, lim, sep)"];
"1000988" -> "1001054"  [label="DDG: beg"];
"1000988" -> "1001054"  [label="DDG: lim"];
"1000988" -> "1001067"  [label="DDG: beg"];
"1000988" -> "1001067"  [label="DDG: lim"];
"1000988" -> "1001075"  [label="DDG: lim"];
"1000988" -> "1001075"  [label="DDG: beg"];
"1000988" -> "1001081"  [label="DDG: lim"];
"1000988" -> "1001081"  [label="DDG: beg"];
"1000988" -> "1001097"  [label="DDG: lim"];
"1000988" -> "1001116"  [label="DDG: lim"];
"1000988" -> "1001126"  [label="DDG: lim"];
"1000988" -> "1001181"  [label="DDG: beg"];
"1000988" -> "1001235"  [label="DDG: beg"];
"1000988" -> "1001265"  [label="DDG: lim"];
"1000988" -> "1001310"  [label="DDG: lim"];
"1000998" -> "1000999"  [label="CFG: "];
"1000999" -> "1000998"  [label="AST: "];
"1000998" -> "1001415"  [label="DDG: !out_invert"];
"1000999" -> "1000998"  [label="DDG: out_invert"];
"1000999" -> "1001000"  [label="CFG: "];
"1001000" -> "1000999"  [label="AST: "];
"1000999" -> "1001415"  [label="DDG: out_invert"];
"1000999" -> "1001011"  [label="DDG: out_invert"];
"1000999" -> "1001151"  [label="DDG: out_invert"];
"1001039" -> "1001037"  [label="AST: "];
"1001039" -> "1001040"  [label="CFG: "];
"1001039" -> "1001042"  [label="CFG: "];
"1001040" -> "1001039"  [label="AST: "];
"1001042" -> "1001039"  [label="AST: "];
"1001037" -> "1001039"  [label="CFG: "];
"1001039" -> "1001415"  [label="DDG: *line_color"];
"1001039" -> "1001415"  [label="DDG: *match_color"];
"1001039" -> "1001037"  [label="DDG: *line_color"];
"1001039" -> "1001037"  [label="DDG: *match_color"];
"1001039" -> "1001060"  [label="DDG: *line_color"];
"1001046" -> "1001045"  [label="AST: "];
"1001046" -> "1001047"  [label="CFG: "];
"1001047" -> "1001046"  [label="AST: "];
"1001053" -> "1001046"  [label="CFG: "];
"1001062" -> "1001046"  [label="CFG: "];
"1001046" -> "1001415"  [label="DDG: matching"];
"1001046" -> "1001415"  [label="DDG: only_matching || *match_color"];
"1001046" -> "1001415"  [label="DDG: matching && (only_matching || *match_color)"];
"1001061" -> "1001060"  [label="AST: "];
"1001061" -> "1001062"  [label="CFG: "];
"1001062" -> "1001061"  [label="AST: "];
"1001064" -> "1001061"  [label="CFG: "];
"1001060" -> "1001061"  [label="CFG: "];
"1001061" -> "1001060"  [label="DDG: only_matching"];
"1001061" -> "1001073"  [label="DDG: only_matching"];
"1001060" -> "1001059"  [label="AST: "];
"1001060" -> "1001063"  [label="CFG: "];
"1001063" -> "1001060"  [label="AST: "];
"1001066" -> "1001060"  [label="CFG: "];
"1001074" -> "1001060"  [label="CFG: "];
"1001060" -> "1001415"  [label="DDG: *line_color"];
"1001060" -> "1001415"  [label="DDG: !only_matching && *line_color"];
"1001073" -> "1001072"  [label="AST: "];
"1001073" -> "1001074"  [label="CFG: "];
"1001074" -> "1001073"  [label="AST: "];
"1001076" -> "1001073"  [label="CFG: "];
"1001072" -> "1001073"  [label="CFG: "];
"1001073" -> "1001415"  [label="DDG: only_matching"];
"1001073" -> "1001072"  [label="DDG: only_matching"];
"1001072" -> "1001071"  [label="AST: "];
"1001072" -> "1001075"  [label="CFG: "];
"1001075" -> "1001072"  [label="AST: "];
"1001079" -> "1001072"  [label="CFG: "];
"1001087" -> "1001072"  [label="CFG: "];
"1001072" -> "1001415"  [label="DDG: lim > beg"];
"1001072" -> "1001415"  [label="DDG: !only_matching"];
"1001072" -> "1001415"  [label="DDG: !only_matching && lim > beg"];
"1001075" -> "1001072"  [label="DDG: lim"];
"1001075" -> "1001072"  [label="DDG: beg"];
}
