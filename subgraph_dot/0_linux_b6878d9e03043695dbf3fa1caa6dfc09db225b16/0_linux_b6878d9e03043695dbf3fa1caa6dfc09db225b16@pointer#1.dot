digraph "0_linux_b6878d9e03043695dbf3fa1caa6dfc09db225b16@pointer" {
"1000197" [label="(Call,copy_to_user(arg, file, sizeof(*file)))"];
"1000104" [label="(MethodParameterIn,void __user * arg)"];
"1000120" [label="(Call,!file)"];
"1000112" [label="(Call,file = kzalloc(sizeof(*file), GFP_NOIO))"];
"1000114" [label="(Call,kzalloc(sizeof(*file), GFP_NOIO))"];
"1000193" [label="(Call,err == 0 &&\n\t    copy_to_user(arg, file, sizeof(*file)))"];
"1000207" [label="(Call,kfree(file))"];
"1000119" [label="(ControlStructure,if (!file))"];
"1000105" [label="(Block,)"];
"1000200" [label="(Call,sizeof(*file))"];
"1000115" [label="(Call,sizeof(*file))"];
"1000118" [label="(Identifier,GFP_NOIO)"];
"1000113" [label="(Identifier,file)"];
"1000192" [label="(ControlStructure,if (err == 0 &&\n\t    copy_to_user(arg, file, sizeof(*file))))"];
"1000112" [label="(Call,file = kzalloc(sizeof(*file), GFP_NOIO))"];
"1000198" [label="(Identifier,arg)"];
"1000197" [label="(Call,copy_to_user(arg, file, sizeof(*file)))"];
"1000211" [label="(MethodReturn,static int)"];
"1000104" [label="(MethodParameterIn,void __user * arg)"];
"1000193" [label="(Call,err == 0 &&\n\t    copy_to_user(arg, file, sizeof(*file)))"];
"1000207" [label="(Call,kfree(file))"];
"1000126" [label="(Identifier,err)"];
"1000199" [label="(Identifier,file)"];
"1000210" [label="(Identifier,err)"];
"1000120" [label="(Call,!file)"];
"1000204" [label="(Identifier,err)"];
"1000114" [label="(Call,kzalloc(sizeof(*file), GFP_NOIO))"];
"1000121" [label="(Identifier,file)"];
"1000208" [label="(Identifier,file)"];
"1000194" [label="(Call,err == 0)"];
"1000124" [label="(Identifier,ENOMEM)"];
"1000197" -> "1000193"  [label="AST: "];
"1000197" -> "1000200"  [label="CFG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000199" -> "1000197"  [label="AST: "];
"1000200" -> "1000197"  [label="AST: "];
"1000193" -> "1000197"  [label="CFG: "];
"1000197" -> "1000211"  [label="DDG: arg"];
"1000197" -> "1000193"  [label="DDG: arg"];
"1000197" -> "1000193"  [label="DDG: file"];
"1000104" -> "1000197"  [label="DDG: arg"];
"1000120" -> "1000197"  [label="DDG: file"];
"1000197" -> "1000207"  [label="DDG: file"];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1000211"  [label="DDG: arg"];
"1000120" -> "1000119"  [label="AST: "];
"1000120" -> "1000121"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000124" -> "1000120"  [label="CFG: "];
"1000126" -> "1000120"  [label="CFG: "];
"1000120" -> "1000211"  [label="DDG: file"];
"1000120" -> "1000211"  [label="DDG: !file"];
"1000112" -> "1000120"  [label="DDG: file"];
"1000120" -> "1000207"  [label="DDG: file"];
"1000112" -> "1000105"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000121" -> "1000112"  [label="CFG: "];
"1000112" -> "1000211"  [label="DDG: kzalloc(sizeof(*file), GFP_NOIO)"];
"1000114" -> "1000112"  [label="DDG: GFP_NOIO"];
"1000114" -> "1000118"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000118" -> "1000114"  [label="AST: "];
"1000114" -> "1000211"  [label="DDG: GFP_NOIO"];
"1000193" -> "1000192"  [label="AST: "];
"1000193" -> "1000194"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000204" -> "1000193"  [label="CFG: "];
"1000208" -> "1000193"  [label="CFG: "];
"1000193" -> "1000211"  [label="DDG: copy_to_user(arg, file, sizeof(*file))"];
"1000193" -> "1000211"  [label="DDG: err == 0"];
"1000193" -> "1000211"  [label="DDG: err == 0 &&\n\t    copy_to_user(arg, file, sizeof(*file))"];
"1000194" -> "1000193"  [label="DDG: err"];
"1000194" -> "1000193"  [label="DDG: 0"];
"1000207" -> "1000105"  [label="AST: "];
"1000207" -> "1000208"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000210" -> "1000207"  [label="CFG: "];
"1000207" -> "1000211"  [label="DDG: file"];
"1000207" -> "1000211"  [label="DDG: kfree(file)"];
}
