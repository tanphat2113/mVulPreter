digraph "0_linux_197c949e7798fbf28cfadc69d9ca0c2abbf93191_0@API" {
"1000168" [label="(Call,__skb_recv_datagram(sk, flags | (noblock ? MSG_DONTWAIT : 0),\n\t\t\t\t  &peeked, &off, &err))"];
"1000466" [label="(Call,unlock_sock_fast(sk, slow))"];
"1000436" [label="(Call,skb_kill_datagram(sk, skb, flags))"];
"1000432" [label="(Call,lock_sock_fast(sk))"];
"1000168" [label="(Call,__skb_recv_datagram(sk, flags | (noblock ? MSG_DONTWAIT : 0),\n\t\t\t\t  &peeked, &off, &err))"];
"1000133" [label="(Call,IS_UDPLITE(sk))"];
"1000119" [label="(Call,inet_sk(sk))"];
"1000114" [label="(Call,inet6_sk(sk))"];
"1000104" [label="(MethodParameterIn,struct sock *sk)"];
"1000170" [label="(Call,flags | (noblock ? MSG_DONTWAIT : 0))"];
"1000138" [label="(Call,flags & MSG_ERRQUEUE)"];
"1000108" [label="(MethodParameterIn,int flags)"];
"1000107" [label="(MethodParameterIn,int noblock)"];
"1000251" [label="(Call,skb_copy_and_csum_datagram_msg(skb, sizeof(struct udphdr), msg))"];
"1000237" [label="(Call,skb_csum_unnecessary(skb))"];
"1000183" [label="(Call,!skb)"];
"1000166" [label="(Call,skb = __skb_recv_datagram(sk, flags | (noblock ? MSG_DONTWAIT : 0),\n\t\t\t\t  &peeked, &off, &err))"];
"1000228" [label="(Call,UDP_SKB_CB(skb))"];
"1000233" [label="(Call,udp_lib_checksum_complete(skb))"];
"1000105" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000462" [label="(Call,sock_net(sk))"];
"1000457" [label="(Call,sock_net(sk))"];
"1000450" [label="(Call,sock_net(sk))"];
"1000445" [label="(Call,sock_net(sk))"];
"1000430" [label="(Call,slow = lock_sock_fast(sk))"];
"1000241" [label="(Call,skb_copy_datagram_msg(skb, sizeof(struct udphdr),\n \t\t\t\t\t    msg, copied))"];
"1000239" [label="(Call,err = skb_copy_datagram_msg(skb, sizeof(struct udphdr),\n \t\t\t\t\t    msg, copied))"];
"1000263" [label="(Call,unlikely(err))"];
"1000427" [label="(Return,return err;)"];
"1000266" [label="(Call,trace_kfree_skb(skb, udpv6_recvmsg))"];
"1000423" [label="(Call,skb_free_datagram_locked(sk, skb))"];
"1000309" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000328" [label="(Call,udp_hdr(skb))"];
"1000341" [label="(Call,ip_hdr(skb))"];
"1000386" [label="(Call,ip6_datagram_recv_common_ctl(sk, msg, skb))"];
"1000397" [label="(Call,ip_cmsg_recv(msg, skb))"];
"1000408" [label="(Call,ip6_datagram_recv_specific_ctl(sk, msg, skb))"];
"1000360" [label="(Call,ipv6_hdr(skb))"];
"1000372" [label="(Call,inet6_iif(skb))"];
"1000367" [label="(Call,ipv6_iface_scope_id(&sin6->sin6_addr,\n\t\t\t\t\t\t    inet6_iif(skb)))"];
"1000363" [label="(Call,sin6->sin6_scope_id =\n\t\t\t\tipv6_iface_scope_id(&sin6->sin6_addr,\n\t\t\t\t\t\t    inet6_iif(skb)))"];
"1000412" [label="(Call,err = copied)"];
"1000249" [label="(Call,err = skb_copy_and_csum_datagram_msg(skb, sizeof(struct udphdr), msg))"];
"1000257" [label="(Call,err == -EINVAL)"];
"1000281" [label="(Call,sock_net(sk))"];
"1000280" [label="(Call,UDP_INC_STATS_USER(sock_net(sk),\n\t\t\t\t\t\t   UDP_MIB_INERRORS,\n\t\t\t\t\t\t   is_udplite))"];
"1000287" [label="(Call,sock_net(sk))"];
"1000286" [label="(Call,UDP6_INC_STATS_USER(sock_net(sk),\n\t\t\t\t\t\t    UDP_MIB_INERRORS,\n\t\t\t\t\t\t    is_udplite))"];
"1000299" [label="(Call,sock_net(sk))"];
"1000298" [label="(Call,UDP_INC_STATS_USER(sock_net(sk),\n\t\t\t\t\tUDP_MIB_INDATAGRAMS, is_udplite))"];
"1000305" [label="(Call,sock_net(sk))"];
"1000304" [label="(Call,UDP6_INC_STATS_USER(sock_net(sk),\n\t\t\t\t\tUDP_MIB_INDATAGRAMS, is_udplite))"];
"1000416" [label="(Call,flags & MSG_TRUNC)"];
"1000435" [label="(Call,!skb_kill_datagram(sk, skb, flags))"];
"1000444" [label="(Call,UDP_INC_STATS_USER(sock_net(sk),\n\t\t\t\t\tUDP_MIB_CSUMERRORS, is_udplite))"];
"1000449" [label="(Call,UDP_INC_STATS_USER(sock_net(sk),\n\t\t\t\t\tUDP_MIB_INERRORS, is_udplite))"];
"1000456" [label="(Call,UDP6_INC_STATS_USER(sock_net(sk),\n\t\t\t\t\tUDP_MIB_CSUMERRORS, is_udplite))"];
"1000461" [label="(Call,UDP6_INC_STATS_USER(sock_net(sk),\n\t\t\t\t\tUDP_MIB_INERRORS, is_udplite))"];
"1000104" [label="(MethodParameterIn,struct sock *sk)"];
"1000431" [label="(Identifier,slow)"];
"1000110" [label="(Block,)"];
"1000414" [label="(Identifier,copied)"];
"1000340" [label="(Call,ip_hdr(skb)->saddr)"];
"1000443" [label="(Block,)"];
"1000438" [label="(Identifier,skb)"];
"1000430" [label="(Call,slow = lock_sock_fast(sk))"];
"1000172" [label="(Call,noblock ? MSG_DONTWAIT : 0)"];
"1000435" [label="(Call,!skb_kill_datagram(sk, skb, flags))"];
"1000450" [label="(Call,sock_net(sk))"];
"1000281" [label="(Call,sock_net(sk))"];
"1000178" [label="(Call,&off)"];
"1000234" [label="(Identifier,skb)"];
"1000105" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000180" [label="(Call,&err)"];
"1000251" [label="(Call,skb_copy_and_csum_datagram_msg(skb, sizeof(struct udphdr), msg))"];
"1000268" [label="(Identifier,udpv6_recvmsg)"];
"1000248" [label="(Block,)"];
"1000242" [label="(Identifier,skb)"];
"1000271" [label="(Identifier,peeked)"];
"1000131" [label="(Call,is_udplite = IS_UDPLITE(sk))"];
"1000176" [label="(Call,&peeked)"];
"1000137" [label="(ControlStructure,if (flags & MSG_ERRQUEUE))"];
"1000423" [label="(Call,skb_free_datagram_locked(sk, skb))"];
"1000469" [label="(Call,cond_resched())"];
"1000263" [label="(Call,unlikely(err))"];
"1000150" [label="(Identifier,np)"];
"1000419" [label="(Call,err = ulen)"];
"1000417" [label="(Identifier,flags)"];
"1000388" [label="(Identifier,msg)"];
"1000436" [label="(Call,skb_kill_datagram(sk, skb, flags))"];
"1000457" [label="(Call,sock_net(sk))"];
"1000397" [label="(Call,ip_cmsg_recv(msg, skb))"];
"1000458" [label="(Identifier,sk)"];
"1000253" [label="(Call,sizeof(struct udphdr))"];
"1000280" [label="(Call,UDP_INC_STATS_USER(sock_net(sk),\n\t\t\t\t\t\t   UDP_MIB_INERRORS,\n\t\t\t\t\t\t   is_udplite))"];
"1000355" [label="(Call,sin6->sin6_addr = ipv6_hdr(skb)->saddr)"];
"1000311" [label="(Identifier,sk)"];
"1000262" [label="(ControlStructure,if (unlikely(err)))"];
"1000256" [label="(ControlStructure,if (err == -EINVAL))"];
"1000285" [label="(ControlStructure,else)"];
"1000224" [label="(Call,copied < ulen)"];
"1000182" [label="(ControlStructure,if (!skb))"];
"1000246" [label="(Identifier,copied)"];
"1000387" [label="(Identifier,sk)"];
"1000447" [label="(Identifier,UDP_MIB_CSUMERRORS)"];
"1000243" [label="(Call,sizeof(struct udphdr))"];
"1000427" [label="(Return,return err;)"];
"1000361" [label="(Identifier,skb)"];
"1000367" [label="(Call,ipv6_iface_scope_id(&sin6->sin6_addr,\n\t\t\t\t\t\t    inet6_iif(skb)))"];
"1000368" [label="(Call,&sin6->sin6_addr)"];
"1000240" [label="(Identifier,err)"];
"1000463" [label="(Identifier,sk)"];
"1000309" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000446" [label="(Identifier,sk)"];
"1000362" [label="(FieldIdentifier,saddr)"];
"1000289" [label="(Identifier,UDP_MIB_INERRORS)"];
"1000449" [label="(Call,UDP_INC_STATS_USER(sock_net(sk),\n\t\t\t\t\tUDP_MIB_INERRORS, is_udplite))"];
"1000342" [label="(Identifier,skb)"];
"1000476" [label="(MethodReturn,int)"];
"1000467" [label="(Identifier,sk)"];
"1000360" [label="(Call,ipv6_hdr(skb))"];
"1000107" [label="(MethodParameterIn,int noblock)"];
"1000434" [label="(ControlStructure,if (!skb_kill_datagram(sk, skb, flags)))"];
"1000439" [label="(Identifier,flags)"];
"1000442" [label="(Identifier,is_udp4)"];
"1000372" [label="(Call,inet6_iif(skb))"];
"1000239" [label="(Call,err = skb_copy_datagram_msg(skb, sizeof(struct udphdr),\n \t\t\t\t\t    msg, copied))"];
"1000433" [label="(Identifier,sk)"];
"1000415" [label="(ControlStructure,if (flags & MSG_TRUNC))"];
"1000177" [label="(Identifier,peeked)"];
"1000359" [label="(Call,ipv6_hdr(skb)->saddr)"];
"1000168" [label="(Call,__skb_recv_datagram(sk, flags | (noblock ? MSG_DONTWAIT : 0),\n\t\t\t\t  &peeked, &off, &err))"];
"1000115" [label="(Identifier,sk)"];
"1000304" [label="(Call,UDP6_INC_STATS_USER(sock_net(sk),\n\t\t\t\t\tUDP_MIB_INDATAGRAMS, is_udplite))"];
"1000286" [label="(Call,UDP6_INC_STATS_USER(sock_net(sk),\n\t\t\t\t\t\t    UDP_MIB_INERRORS,\n\t\t\t\t\t\t    is_udplite))"];
"1000455" [label="(Block,)"];
"1000133" [label="(Call,IS_UDPLITE(sk))"];
"1000227" [label="(Call,UDP_SKB_CB(skb)->partial_cov)"];
"1000312" [label="(Identifier,skb)"];
"1000315" [label="(Identifier,msg)"];
"1000139" [label="(Identifier,flags)"];
"1000456" [label="(Call,UDP6_INC_STATS_USER(sock_net(sk),\n\t\t\t\t\tUDP_MIB_CSUMERRORS, is_udplite))"];
"1000267" [label="(Identifier,skb)"];
"1000408" [label="(Call,ip6_datagram_recv_specific_ctl(sk, msg, skb))"];
"1000108" [label="(MethodParameterIn,int flags)"];
"1000250" [label="(Identifier,err)"];
"1000432" [label="(Call,lock_sock_fast(sk))"];
"1000328" [label="(Call,udp_hdr(skb))"];
"1000327" [label="(Call,udp_hdr(skb)->source)"];
"1000278" [label="(ControlStructure,if (is_udp4))"];
"1000236" [label="(ControlStructure,if (skb_csum_unnecessary(skb)))"];
"1000228" [label="(Call,UDP_SKB_CB(skb))"];
"1000451" [label="(Identifier,sk)"];
"1000230" [label="(FieldIdentifier,partial_cov)"];
"1000187" [label="(Identifier,ulen)"];
"1000343" [label="(FieldIdentifier,saddr)"];
"1000411" [label="(Identifier,skb)"];
"1000233" [label="(Call,udp_lib_checksum_complete(skb))"];
"1000418" [label="(Identifier,MSG_TRUNC)"];
"1000294" [label="(Identifier,peeked)"];
"1000282" [label="(Identifier,sk)"];
"1000305" [label="(Call,sock_net(sk))"];
"1000363" [label="(Call,sin6->sin6_scope_id =\n\t\t\t\tipv6_iface_scope_id(&sin6->sin6_addr,\n\t\t\t\t\t\t    inet6_iif(skb)))"];
"1000232" [label="(ControlStructure,if (udp_lib_checksum_complete(skb)))"];
"1000112" [label="(Call,*np = inet6_sk(sk))"];
"1000380" [label="(ControlStructure,if (np->rxopt.all))"];
"1000140" [label="(Identifier,MSG_ERRQUEUE)"];
"1000245" [label="(Identifier,msg)"];
"1000171" [label="(Identifier,flags)"];
"1000266" [label="(Call,trace_kfree_skb(skb, udpv6_recvmsg))"];
"1000235" [label="(ControlStructure,goto csum_copy_err;)"];
"1000308" [label="(Identifier,is_udplite)"];
"1000238" [label="(Identifier,skb)"];
"1000420" [label="(Identifier,err)"];
"1000376" [label="(Identifier,addr_len)"];
"1000209" [label="(Call,msg->msg_flags |= MSG_TRUNC)"];
"1000261" [label="(ControlStructure,goto csum_copy_err;)"];
"1000465" [label="(Identifier,is_udplite)"];
"1000307" [label="(Identifier,UDP_MIB_INDATAGRAMS)"];
"1000249" [label="(Call,err = skb_copy_and_csum_datagram_msg(skb, sizeof(struct udphdr), msg))"];
"1000119" [label="(Call,inet_sk(sk))"];
"1000468" [label="(Identifier,slow)"];
"1000120" [label="(Identifier,sk)"];
"1000184" [label="(Identifier,skb)"];
"1000117" [label="(Call,*inet = inet_sk(sk))"];
"1000229" [label="(Identifier,skb)"];
"1000264" [label="(Identifier,err)"];
"1000410" [label="(Identifier,msg)"];
"1000426" [label="(JumpTarget,out:)"];
"1000166" [label="(Call,skb = __skb_recv_datagram(sk, flags | (noblock ? MSG_DONTWAIT : 0),\n\t\t\t\t  &peeked, &off, &err))"];
"1000398" [label="(Identifier,msg)"];
"1000341" [label="(Call,ip_hdr(skb))"];
"1000143" [label="(Identifier,sk)"];
"1000409" [label="(Identifier,sk)"];
"1000170" [label="(Call,flags | (noblock ? MSG_DONTWAIT : 0))"];
"1000389" [label="(Identifier,skb)"];
"1000300" [label="(Identifier,sk)"];
"1000416" [label="(Call,flags & MSG_TRUNC)"];
"1000258" [label="(Identifier,err)"];
"1000453" [label="(Identifier,is_udplite)"];
"1000283" [label="(Identifier,UDP_MIB_INERRORS)"];
"1000306" [label="(Identifier,sk)"];
"1000444" [label="(Call,UDP_INC_STATS_USER(sock_net(sk),\n\t\t\t\t\tUDP_MIB_CSUMERRORS, is_udplite))"];
"1000160" [label="(Call,ipv6_recv_rxpmtu(sk, msg, len, addr_len))"];
"1000138" [label="(Call,flags & MSG_ERRQUEUE)"];
"1000241" [label="(Call,skb_copy_datagram_msg(skb, sizeof(struct udphdr),\n \t\t\t\t\t    msg, copied))"];
"1000425" [label="(Identifier,skb)"];
"1000301" [label="(Identifier,UDP_MIB_INDATAGRAMS)"];
"1000428" [label="(Identifier,err)"];
"1000413" [label="(Identifier,err)"];
"1000185" [label="(ControlStructure,goto out;)"];
"1000464" [label="(Identifier,UDP_MIB_INERRORS)"];
"1000330" [label="(FieldIdentifier,source)"];
"1000354" [label="(Block,)"];
"1000393" [label="(ControlStructure,if (inet->cmsg_flags))"];
"1000288" [label="(Identifier,sk)"];
"1000183" [label="(Call,!skb)"];
"1000329" [label="(Identifier,skb)"];
"1000296" [label="(ControlStructure,if (is_udp4))"];
"1000290" [label="(Identifier,is_udplite)"];
"1000114" [label="(Call,inet6_sk(sk))"];
"1000255" [label="(Identifier,msg)"];
"1000373" [label="(Identifier,skb)"];
"1000462" [label="(Call,sock_net(sk))"];
"1000402" [label="(ControlStructure,if (np->rxopt.all))"];
"1000399" [label="(Identifier,skb)"];
"1000299" [label="(Call,sock_net(sk))"];
"1000459" [label="(Identifier,UDP_MIB_CSUMERRORS)"];
"1000291" [label="(ControlStructure,goto out_free;)"];
"1000310" [label="(Identifier,msg)"];
"1000265" [label="(Block,)"];
"1000298" [label="(Call,UDP_INC_STATS_USER(sock_net(sk),\n\t\t\t\t\tUDP_MIB_INDATAGRAMS, is_udplite))"];
"1000303" [label="(ControlStructure,else)"];
"1000424" [label="(Identifier,sk)"];
"1000412" [label="(Call,err = copied)"];
"1000169" [label="(Identifier,sk)"];
"1000259" [label="(Call,-EINVAL)"];
"1000437" [label="(Identifier,sk)"];
"1000386" [label="(Call,ip6_datagram_recv_common_ctl(sk, msg, skb))"];
"1000284" [label="(Identifier,is_udplite)"];
"1000452" [label="(Identifier,UDP_MIB_INERRORS)"];
"1000391" [label="(Identifier,is_udp4)"];
"1000466" [label="(Call,unlock_sock_fast(sk, slow))"];
"1000448" [label="(Identifier,is_udplite)"];
"1000237" [label="(Call,skb_csum_unnecessary(skb))"];
"1000142" [label="(Call,ipv6_recv_error(sk, msg, len, addr_len))"];
"1000460" [label="(Identifier,is_udplite)"];
"1000445" [label="(Call,sock_net(sk))"];
"1000252" [label="(Identifier,skb)"];
"1000302" [label="(Identifier,is_udplite)"];
"1000257" [label="(Call,err == -EINVAL)"];
"1000461" [label="(Call,UDP6_INC_STATS_USER(sock_net(sk),\n\t\t\t\t\tUDP_MIB_INERRORS, is_udplite))"];
"1000287" [label="(Call,sock_net(sk))"];
"1000167" [label="(Identifier,skb)"];
"1000364" [label="(Call,sin6->sin6_scope_id)"];
"1000134" [label="(Identifier,sk)"];
"1000422" [label="(JumpTarget,out_free:)"];
"1000168" -> "1000166"  [label="AST: "];
"1000168" -> "1000180"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000176" -> "1000168"  [label="AST: "];
"1000178" -> "1000168"  [label="AST: "];
"1000180" -> "1000168"  [label="AST: "];
"1000166" -> "1000168"  [label="CFG: "];
"1000168" -> "1000476"  [label="DDG: &off"];
"1000168" -> "1000476"  [label="DDG: sk"];
"1000168" -> "1000476"  [label="DDG: &err"];
"1000168" -> "1000476"  [label="DDG: &peeked"];
"1000168" -> "1000476"  [label="DDG: flags | (noblock ? MSG_DONTWAIT : 0)"];
"1000168" -> "1000166"  [label="DDG: &off"];
"1000168" -> "1000166"  [label="DDG: flags | (noblock ? MSG_DONTWAIT : 0)"];
"1000168" -> "1000166"  [label="DDG: sk"];
"1000168" -> "1000166"  [label="DDG: &peeked"];
"1000168" -> "1000166"  [label="DDG: &err"];
"1000466" -> "1000168"  [label="DDG: sk"];
"1000133" -> "1000168"  [label="DDG: sk"];
"1000104" -> "1000168"  [label="DDG: sk"];
"1000170" -> "1000168"  [label="DDG: flags"];
"1000170" -> "1000168"  [label="DDG: noblock ? MSG_DONTWAIT : 0"];
"1000168" -> "1000281"  [label="DDG: sk"];
"1000168" -> "1000287"  [label="DDG: sk"];
"1000168" -> "1000299"  [label="DDG: sk"];
"1000168" -> "1000305"  [label="DDG: sk"];
"1000168" -> "1000309"  [label="DDG: sk"];
"1000168" -> "1000423"  [label="DDG: sk"];
"1000168" -> "1000432"  [label="DDG: sk"];
"1000466" -> "1000110"  [label="AST: "];
"1000466" -> "1000468"  [label="CFG: "];
"1000467" -> "1000466"  [label="AST: "];
"1000468" -> "1000466"  [label="AST: "];
"1000469" -> "1000466"  [label="CFG: "];
"1000466" -> "1000476"  [label="DDG: slow"];
"1000466" -> "1000476"  [label="DDG: unlock_sock_fast(sk, slow)"];
"1000436" -> "1000466"  [label="DDG: sk"];
"1000462" -> "1000466"  [label="DDG: sk"];
"1000450" -> "1000466"  [label="DDG: sk"];
"1000104" -> "1000466"  [label="DDG: sk"];
"1000430" -> "1000466"  [label="DDG: slow"];
"1000436" -> "1000435"  [label="AST: "];
"1000436" -> "1000439"  [label="CFG: "];
"1000437" -> "1000436"  [label="AST: "];
"1000438" -> "1000436"  [label="AST: "];
"1000439" -> "1000436"  [label="AST: "];
"1000435" -> "1000436"  [label="CFG: "];
"1000436" -> "1000170"  [label="DDG: flags"];
"1000436" -> "1000435"  [label="DDG: sk"];
"1000436" -> "1000435"  [label="DDG: skb"];
"1000436" -> "1000435"  [label="DDG: flags"];
"1000432" -> "1000436"  [label="DDG: sk"];
"1000104" -> "1000436"  [label="DDG: sk"];
"1000251" -> "1000436"  [label="DDG: skb"];
"1000233" -> "1000436"  [label="DDG: skb"];
"1000170" -> "1000436"  [label="DDG: flags"];
"1000108" -> "1000436"  [label="DDG: flags"];
"1000436" -> "1000445"  [label="DDG: sk"];
"1000436" -> "1000457"  [label="DDG: sk"];
"1000432" -> "1000430"  [label="AST: "];
"1000432" -> "1000433"  [label="CFG: "];
"1000433" -> "1000432"  [label="AST: "];
"1000430" -> "1000432"  [label="CFG: "];
"1000432" -> "1000430"  [label="DDG: sk"];
"1000104" -> "1000432"  [label="DDG: sk"];
"1000133" -> "1000131"  [label="AST: "];
"1000133" -> "1000134"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000131" -> "1000133"  [label="CFG: "];
"1000133" -> "1000131"  [label="DDG: sk"];
"1000119" -> "1000133"  [label="DDG: sk"];
"1000104" -> "1000133"  [label="DDG: sk"];
"1000133" -> "1000142"  [label="DDG: sk"];
"1000133" -> "1000160"  [label="DDG: sk"];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000119" -> "1000117"  [label="DDG: sk"];
"1000114" -> "1000119"  [label="DDG: sk"];
"1000104" -> "1000119"  [label="DDG: sk"];
"1000114" -> "1000112"  [label="AST: "];
"1000114" -> "1000115"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000114" -> "1000112"  [label="DDG: sk"];
"1000104" -> "1000114"  [label="DDG: sk"];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000476"  [label="DDG: sk"];
"1000104" -> "1000142"  [label="DDG: sk"];
"1000104" -> "1000160"  [label="DDG: sk"];
"1000104" -> "1000281"  [label="DDG: sk"];
"1000104" -> "1000287"  [label="DDG: sk"];
"1000104" -> "1000299"  [label="DDG: sk"];
"1000104" -> "1000305"  [label="DDG: sk"];
"1000104" -> "1000309"  [label="DDG: sk"];
"1000104" -> "1000386"  [label="DDG: sk"];
"1000104" -> "1000408"  [label="DDG: sk"];
"1000104" -> "1000423"  [label="DDG: sk"];
"1000104" -> "1000445"  [label="DDG: sk"];
"1000104" -> "1000450"  [label="DDG: sk"];
"1000104" -> "1000457"  [label="DDG: sk"];
"1000104" -> "1000462"  [label="DDG: sk"];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000177" -> "1000170"  [label="CFG: "];
"1000170" -> "1000476"  [label="DDG: noblock ? MSG_DONTWAIT : 0"];
"1000170" -> "1000476"  [label="DDG: flags"];
"1000138" -> "1000170"  [label="DDG: flags"];
"1000108" -> "1000170"  [label="DDG: flags"];
"1000107" -> "1000170"  [label="DDG: noblock"];
"1000170" -> "1000416"  [label="DDG: flags"];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000143" -> "1000138"  [label="CFG: "];
"1000150" -> "1000138"  [label="CFG: "];
"1000138" -> "1000476"  [label="DDG: flags"];
"1000138" -> "1000476"  [label="DDG: MSG_ERRQUEUE"];
"1000138" -> "1000476"  [label="DDG: flags & MSG_ERRQUEUE"];
"1000108" -> "1000138"  [label="DDG: flags"];
"1000108" -> "1000103"  [label="AST: "];
"1000108" -> "1000476"  [label="DDG: flags"];
"1000108" -> "1000416"  [label="DDG: flags"];
"1000107" -> "1000103"  [label="AST: "];
"1000107" -> "1000476"  [label="DDG: noblock"];
"1000107" -> "1000172"  [label="DDG: noblock"];
"1000251" -> "1000249"  [label="AST: "];
"1000251" -> "1000255"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="AST: "];
"1000255" -> "1000251"  [label="AST: "];
"1000249" -> "1000251"  [label="CFG: "];
"1000251" -> "1000476"  [label="DDG: msg"];
"1000251" -> "1000241"  [label="DDG: msg"];
"1000251" -> "1000249"  [label="DDG: skb"];
"1000251" -> "1000249"  [label="DDG: msg"];
"1000237" -> "1000251"  [label="DDG: skb"];
"1000105" -> "1000251"  [label="DDG: msg"];
"1000251" -> "1000266"  [label="DDG: skb"];
"1000251" -> "1000309"  [label="DDG: msg"];
"1000251" -> "1000309"  [label="DDG: skb"];
"1000237" -> "1000236"  [label="AST: "];
"1000237" -> "1000238"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000240" -> "1000237"  [label="CFG: "];
"1000250" -> "1000237"  [label="CFG: "];
"1000237" -> "1000476"  [label="DDG: skb_csum_unnecessary(skb)"];
"1000183" -> "1000237"  [label="DDG: skb"];
"1000228" -> "1000237"  [label="DDG: skb"];
"1000233" -> "1000237"  [label="DDG: skb"];
"1000237" -> "1000241"  [label="DDG: skb"];
"1000183" -> "1000182"  [label="AST: "];
"1000183" -> "1000184"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000185" -> "1000183"  [label="CFG: "];
"1000187" -> "1000183"  [label="CFG: "];
"1000183" -> "1000476"  [label="DDG: skb"];
"1000183" -> "1000476"  [label="DDG: !skb"];
"1000166" -> "1000183"  [label="DDG: skb"];
"1000183" -> "1000228"  [label="DDG: skb"];
"1000183" -> "1000233"  [label="DDG: skb"];
"1000166" -> "1000110"  [label="AST: "];
"1000167" -> "1000166"  [label="AST: "];
"1000184" -> "1000166"  [label="CFG: "];
"1000166" -> "1000476"  [label="DDG: __skb_recv_datagram(sk, flags | (noblock ? MSG_DONTWAIT : 0),\n\t\t\t\t  &peeked, &off, &err)"];
"1000228" -> "1000227"  [label="AST: "];
"1000228" -> "1000229"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000230" -> "1000228"  [label="CFG: "];
"1000228" -> "1000233"  [label="DDG: skb"];
"1000233" -> "1000232"  [label="AST: "];
"1000233" -> "1000234"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000235" -> "1000233"  [label="CFG: "];
"1000238" -> "1000233"  [label="CFG: "];
"1000233" -> "1000476"  [label="DDG: udp_lib_checksum_complete(skb)"];
"1000105" -> "1000103"  [label="AST: "];
"1000105" -> "1000476"  [label="DDG: msg"];
"1000105" -> "1000142"  [label="DDG: msg"];
"1000105" -> "1000160"  [label="DDG: msg"];
"1000105" -> "1000241"  [label="DDG: msg"];
"1000105" -> "1000309"  [label="DDG: msg"];
"1000105" -> "1000386"  [label="DDG: msg"];
"1000105" -> "1000397"  [label="DDG: msg"];
"1000105" -> "1000408"  [label="DDG: msg"];
"1000462" -> "1000461"  [label="AST: "];
"1000462" -> "1000463"  [label="CFG: "];
"1000463" -> "1000462"  [label="AST: "];
"1000464" -> "1000462"  [label="CFG: "];
"1000462" -> "1000461"  [label="DDG: sk"];
"1000457" -> "1000462"  [label="DDG: sk"];
"1000457" -> "1000456"  [label="AST: "];
"1000457" -> "1000458"  [label="CFG: "];
"1000458" -> "1000457"  [label="AST: "];
"1000459" -> "1000457"  [label="CFG: "];
"1000457" -> "1000456"  [label="DDG: sk"];
"1000450" -> "1000449"  [label="AST: "];
"1000450" -> "1000451"  [label="CFG: "];
"1000451" -> "1000450"  [label="AST: "];
"1000452" -> "1000450"  [label="CFG: "];
"1000450" -> "1000449"  [label="DDG: sk"];
"1000445" -> "1000450"  [label="DDG: sk"];
"1000445" -> "1000444"  [label="AST: "];
"1000445" -> "1000446"  [label="CFG: "];
"1000446" -> "1000445"  [label="AST: "];
"1000447" -> "1000445"  [label="CFG: "];
"1000445" -> "1000444"  [label="DDG: sk"];
"1000430" -> "1000110"  [label="AST: "];
"1000431" -> "1000430"  [label="AST: "];
"1000437" -> "1000430"  [label="CFG: "];
"1000430" -> "1000476"  [label="DDG: lock_sock_fast(sk)"];
"1000241" -> "1000239"  [label="AST: "];
"1000241" -> "1000246"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="AST: "];
"1000245" -> "1000241"  [label="AST: "];
"1000246" -> "1000241"  [label="AST: "];
"1000239" -> "1000241"  [label="CFG: "];
"1000241" -> "1000476"  [label="DDG: msg"];
"1000241" -> "1000476"  [label="DDG: copied"];
"1000241" -> "1000239"  [label="DDG: skb"];
"1000241" -> "1000239"  [label="DDG: msg"];
"1000241" -> "1000239"  [label="DDG: copied"];
"1000224" -> "1000241"  [label="DDG: copied"];
"1000241" -> "1000266"  [label="DDG: skb"];
"1000241" -> "1000309"  [label="DDG: msg"];
"1000241" -> "1000309"  [label="DDG: skb"];
"1000241" -> "1000412"  [label="DDG: copied"];
"1000239" -> "1000236"  [label="AST: "];
"1000240" -> "1000239"  [label="AST: "];
"1000264" -> "1000239"  [label="CFG: "];
"1000239" -> "1000476"  [label="DDG: skb_copy_datagram_msg(skb, sizeof(struct udphdr),\n \t\t\t\t\t    msg, copied)"];
"1000239" -> "1000263"  [label="DDG: err"];
"1000263" -> "1000262"  [label="AST: "];
"1000263" -> "1000264"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000267" -> "1000263"  [label="CFG: "];
"1000294" -> "1000263"  [label="CFG: "];
"1000263" -> "1000476"  [label="DDG: err"];
"1000263" -> "1000476"  [label="DDG: unlikely(err)"];
"1000257" -> "1000263"  [label="DDG: err"];
"1000263" -> "1000427"  [label="DDG: err"];
"1000427" -> "1000110"  [label="AST: "];
"1000427" -> "1000428"  [label="CFG: "];
"1000428" -> "1000427"  [label="AST: "];
"1000476" -> "1000427"  [label="CFG: "];
"1000427" -> "1000476"  [label="DDG: <RET>"];
"1000428" -> "1000427"  [label="DDG: err"];
"1000419" -> "1000427"  [label="DDG: err"];
"1000257" -> "1000427"  [label="DDG: err"];
"1000412" -> "1000427"  [label="DDG: err"];
"1000266" -> "1000265"  [label="AST: "];
"1000266" -> "1000268"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="AST: "];
"1000271" -> "1000266"  [label="CFG: "];
"1000266" -> "1000476"  [label="DDG: udpv6_recvmsg"];
"1000266" -> "1000476"  [label="DDG: trace_kfree_skb(skb, udpv6_recvmsg)"];
"1000266" -> "1000423"  [label="DDG: skb"];
"1000423" -> "1000110"  [label="AST: "];
"1000423" -> "1000425"  [label="CFG: "];
"1000424" -> "1000423"  [label="AST: "];
"1000425" -> "1000423"  [label="AST: "];
"1000426" -> "1000423"  [label="CFG: "];
"1000423" -> "1000476"  [label="DDG: skb_free_datagram_locked(sk, skb)"];
"1000423" -> "1000476"  [label="DDG: skb"];
"1000423" -> "1000476"  [label="DDG: sk"];
"1000281" -> "1000423"  [label="DDG: sk"];
"1000408" -> "1000423"  [label="DDG: sk"];
"1000408" -> "1000423"  [label="DDG: skb"];
"1000309" -> "1000423"  [label="DDG: sk"];
"1000309" -> "1000423"  [label="DDG: skb"];
"1000386" -> "1000423"  [label="DDG: sk"];
"1000386" -> "1000423"  [label="DDG: skb"];
"1000287" -> "1000423"  [label="DDG: sk"];
"1000372" -> "1000423"  [label="DDG: skb"];
"1000341" -> "1000423"  [label="DDG: skb"];
"1000397" -> "1000423"  [label="DDG: skb"];
"1000309" -> "1000110"  [label="AST: "];
"1000309" -> "1000312"  [label="CFG: "];
"1000310" -> "1000309"  [label="AST: "];
"1000311" -> "1000309"  [label="AST: "];
"1000312" -> "1000309"  [label="AST: "];
"1000315" -> "1000309"  [label="CFG: "];
"1000309" -> "1000476"  [label="DDG: msg"];
"1000309" -> "1000476"  [label="DDG: sock_recv_ts_and_drops(msg, sk, skb)"];
"1000305" -> "1000309"  [label="DDG: sk"];
"1000299" -> "1000309"  [label="DDG: sk"];
"1000309" -> "1000328"  [label="DDG: skb"];
"1000309" -> "1000386"  [label="DDG: sk"];
"1000309" -> "1000386"  [label="DDG: msg"];
"1000309" -> "1000386"  [label="DDG: skb"];
"1000309" -> "1000397"  [label="DDG: msg"];
"1000309" -> "1000397"  [label="DDG: skb"];
"1000309" -> "1000408"  [label="DDG: sk"];
"1000309" -> "1000408"  [label="DDG: msg"];
"1000309" -> "1000408"  [label="DDG: skb"];
"1000328" -> "1000327"  [label="AST: "];
"1000328" -> "1000329"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000330" -> "1000328"  [label="CFG: "];
"1000328" -> "1000341"  [label="DDG: skb"];
"1000328" -> "1000360"  [label="DDG: skb"];
"1000341" -> "1000340"  [label="AST: "];
"1000341" -> "1000342"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="CFG: "];
"1000341" -> "1000386"  [label="DDG: skb"];
"1000341" -> "1000397"  [label="DDG: skb"];
"1000341" -> "1000408"  [label="DDG: skb"];
"1000386" -> "1000380"  [label="AST: "];
"1000386" -> "1000389"  [label="CFG: "];
"1000387" -> "1000386"  [label="AST: "];
"1000388" -> "1000386"  [label="AST: "];
"1000389" -> "1000386"  [label="AST: "];
"1000391" -> "1000386"  [label="CFG: "];
"1000386" -> "1000476"  [label="DDG: msg"];
"1000386" -> "1000476"  [label="DDG: ip6_datagram_recv_common_ctl(sk, msg, skb)"];
"1000372" -> "1000386"  [label="DDG: skb"];
"1000386" -> "1000397"  [label="DDG: msg"];
"1000386" -> "1000397"  [label="DDG: skb"];
"1000386" -> "1000408"  [label="DDG: sk"];
"1000386" -> "1000408"  [label="DDG: msg"];
"1000386" -> "1000408"  [label="DDG: skb"];
"1000397" -> "1000393"  [label="AST: "];
"1000397" -> "1000399"  [label="CFG: "];
"1000398" -> "1000397"  [label="AST: "];
"1000399" -> "1000397"  [label="AST: "];
"1000413" -> "1000397"  [label="CFG: "];
"1000397" -> "1000476"  [label="DDG: ip_cmsg_recv(msg, skb)"];
"1000397" -> "1000476"  [label="DDG: msg"];
"1000372" -> "1000397"  [label="DDG: skb"];
"1000408" -> "1000402"  [label="AST: "];
"1000408" -> "1000411"  [label="CFG: "];
"1000409" -> "1000408"  [label="AST: "];
"1000410" -> "1000408"  [label="AST: "];
"1000411" -> "1000408"  [label="AST: "];
"1000413" -> "1000408"  [label="CFG: "];
"1000408" -> "1000476"  [label="DDG: ip6_datagram_recv_specific_ctl(sk, msg, skb)"];
"1000408" -> "1000476"  [label="DDG: msg"];
"1000372" -> "1000408"  [label="DDG: skb"];
"1000360" -> "1000359"  [label="AST: "];
"1000360" -> "1000361"  [label="CFG: "];
"1000361" -> "1000360"  [label="AST: "];
"1000362" -> "1000360"  [label="CFG: "];
"1000360" -> "1000372"  [label="DDG: skb"];
"1000372" -> "1000367"  [label="AST: "];
"1000372" -> "1000373"  [label="CFG: "];
"1000373" -> "1000372"  [label="AST: "];
"1000367" -> "1000372"  [label="CFG: "];
"1000372" -> "1000367"  [label="DDG: skb"];
"1000367" -> "1000363"  [label="AST: "];
"1000368" -> "1000367"  [label="AST: "];
"1000363" -> "1000367"  [label="CFG: "];
"1000367" -> "1000476"  [label="DDG: &sin6->sin6_addr"];
"1000367" -> "1000476"  [label="DDG: inet6_iif(skb)"];
"1000367" -> "1000363"  [label="DDG: &sin6->sin6_addr"];
"1000367" -> "1000363"  [label="DDG: inet6_iif(skb)"];
"1000355" -> "1000367"  [label="DDG: sin6->sin6_addr"];
"1000363" -> "1000354"  [label="AST: "];
"1000364" -> "1000363"  [label="AST: "];
"1000376" -> "1000363"  [label="CFG: "];
"1000363" -> "1000476"  [label="DDG: sin6->sin6_scope_id"];
"1000363" -> "1000476"  [label="DDG: ipv6_iface_scope_id(&sin6->sin6_addr,\n\t\t\t\t\t\t    inet6_iif(skb))"];
"1000412" -> "1000110"  [label="AST: "];
"1000412" -> "1000414"  [label="CFG: "];
"1000413" -> "1000412"  [label="AST: "];
"1000414" -> "1000412"  [label="AST: "];
"1000417" -> "1000412"  [label="CFG: "];
"1000412" -> "1000476"  [label="DDG: copied"];
"1000412" -> "1000476"  [label="DDG: err"];
"1000224" -> "1000412"  [label="DDG: copied"];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000249"  [label="AST: "];
"1000258" -> "1000249"  [label="CFG: "];
"1000249" -> "1000476"  [label="DDG: skb_copy_and_csum_datagram_msg(skb, sizeof(struct udphdr), msg)"];
"1000249" -> "1000257"  [label="DDG: err"];
"1000257" -> "1000256"  [label="AST: "];
"1000257" -> "1000259"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000259" -> "1000257"  [label="AST: "];
"1000261" -> "1000257"  [label="CFG: "];
"1000264" -> "1000257"  [label="CFG: "];
"1000257" -> "1000476"  [label="DDG: -EINVAL"];
"1000257" -> "1000476"  [label="DDG: err"];
"1000257" -> "1000476"  [label="DDG: err == -EINVAL"];
"1000259" -> "1000257"  [label="DDG: EINVAL"];
"1000281" -> "1000280"  [label="AST: "];
"1000281" -> "1000282"  [label="CFG: "];
"1000282" -> "1000281"  [label="AST: "];
"1000283" -> "1000281"  [label="CFG: "];
"1000281" -> "1000280"  [label="DDG: sk"];
"1000280" -> "1000278"  [label="AST: "];
"1000280" -> "1000284"  [label="CFG: "];
"1000283" -> "1000280"  [label="AST: "];
"1000284" -> "1000280"  [label="AST: "];
"1000291" -> "1000280"  [label="CFG: "];
"1000280" -> "1000476"  [label="DDG: is_udplite"];
"1000280" -> "1000476"  [label="DDG: UDP_INC_STATS_USER(sock_net(sk),\n\t\t\t\t\t\t   UDP_MIB_INERRORS,\n\t\t\t\t\t\t   is_udplite)"];
"1000280" -> "1000476"  [label="DDG: sock_net(sk)"];
"1000280" -> "1000476"  [label="DDG: UDP_MIB_INERRORS"];
"1000449" -> "1000280"  [label="DDG: UDP_MIB_INERRORS"];
"1000449" -> "1000280"  [label="DDG: is_udplite"];
"1000461" -> "1000280"  [label="DDG: UDP_MIB_INERRORS"];
"1000461" -> "1000280"  [label="DDG: is_udplite"];
"1000131" -> "1000280"  [label="DDG: is_udplite"];
"1000287" -> "1000286"  [label="AST: "];
"1000287" -> "1000288"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000287"  [label="CFG: "];
"1000287" -> "1000286"  [label="DDG: sk"];
"1000286" -> "1000285"  [label="AST: "];
"1000286" -> "1000290"  [label="CFG: "];
"1000289" -> "1000286"  [label="AST: "];
"1000290" -> "1000286"  [label="AST: "];
"1000291" -> "1000286"  [label="CFG: "];
"1000286" -> "1000476"  [label="DDG: UDP6_INC_STATS_USER(sock_net(sk),\n\t\t\t\t\t\t    UDP_MIB_INERRORS,\n\t\t\t\t\t\t    is_udplite)"];
"1000286" -> "1000476"  [label="DDG: is_udplite"];
"1000286" -> "1000476"  [label="DDG: sock_net(sk)"];
"1000286" -> "1000476"  [label="DDG: UDP_MIB_INERRORS"];
"1000449" -> "1000286"  [label="DDG: UDP_MIB_INERRORS"];
"1000449" -> "1000286"  [label="DDG: is_udplite"];
"1000461" -> "1000286"  [label="DDG: UDP_MIB_INERRORS"];
"1000461" -> "1000286"  [label="DDG: is_udplite"];
"1000131" -> "1000286"  [label="DDG: is_udplite"];
"1000299" -> "1000298"  [label="AST: "];
"1000299" -> "1000300"  [label="CFG: "];
"1000300" -> "1000299"  [label="AST: "];
"1000301" -> "1000299"  [label="CFG: "];
"1000299" -> "1000298"  [label="DDG: sk"];
"1000298" -> "1000296"  [label="AST: "];
"1000298" -> "1000302"  [label="CFG: "];
"1000301" -> "1000298"  [label="AST: "];
"1000302" -> "1000298"  [label="AST: "];
"1000310" -> "1000298"  [label="CFG: "];
"1000298" -> "1000476"  [label="DDG: UDP_INC_STATS_USER(sock_net(sk),\n\t\t\t\t\tUDP_MIB_INDATAGRAMS, is_udplite)"];
"1000298" -> "1000476"  [label="DDG: sock_net(sk)"];
"1000298" -> "1000476"  [label="DDG: UDP_MIB_INDATAGRAMS"];
"1000298" -> "1000476"  [label="DDG: is_udplite"];
"1000461" -> "1000298"  [label="DDG: is_udplite"];
"1000131" -> "1000298"  [label="DDG: is_udplite"];
"1000449" -> "1000298"  [label="DDG: is_udplite"];
"1000305" -> "1000304"  [label="AST: "];
"1000305" -> "1000306"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000307" -> "1000305"  [label="CFG: "];
"1000305" -> "1000304"  [label="DDG: sk"];
"1000304" -> "1000303"  [label="AST: "];
"1000304" -> "1000308"  [label="CFG: "];
"1000307" -> "1000304"  [label="AST: "];
"1000308" -> "1000304"  [label="AST: "];
"1000310" -> "1000304"  [label="CFG: "];
"1000304" -> "1000476"  [label="DDG: UDP6_INC_STATS_USER(sock_net(sk),\n\t\t\t\t\tUDP_MIB_INDATAGRAMS, is_udplite)"];
"1000304" -> "1000476"  [label="DDG: sock_net(sk)"];
"1000304" -> "1000476"  [label="DDG: UDP_MIB_INDATAGRAMS"];
"1000304" -> "1000476"  [label="DDG: is_udplite"];
"1000461" -> "1000304"  [label="DDG: is_udplite"];
"1000131" -> "1000304"  [label="DDG: is_udplite"];
"1000449" -> "1000304"  [label="DDG: is_udplite"];
"1000416" -> "1000415"  [label="AST: "];
"1000416" -> "1000418"  [label="CFG: "];
"1000417" -> "1000416"  [label="AST: "];
"1000418" -> "1000416"  [label="AST: "];
"1000420" -> "1000416"  [label="CFG: "];
"1000422" -> "1000416"  [label="CFG: "];
"1000416" -> "1000476"  [label="DDG: flags & MSG_TRUNC"];
"1000416" -> "1000476"  [label="DDG: MSG_TRUNC"];
"1000416" -> "1000476"  [label="DDG: flags"];
"1000209" -> "1000416"  [label="DDG: MSG_TRUNC"];
"1000435" -> "1000434"  [label="AST: "];
"1000442" -> "1000435"  [label="CFG: "];
"1000467" -> "1000435"  [label="CFG: "];
"1000435" -> "1000476"  [label="DDG: skb_kill_datagram(sk, skb, flags)"];
"1000435" -> "1000476"  [label="DDG: !skb_kill_datagram(sk, skb, flags)"];
"1000444" -> "1000443"  [label="AST: "];
"1000444" -> "1000448"  [label="CFG: "];
"1000447" -> "1000444"  [label="AST: "];
"1000448" -> "1000444"  [label="AST: "];
"1000451" -> "1000444"  [label="CFG: "];
"1000444" -> "1000476"  [label="DDG: UDP_MIB_CSUMERRORS"];
"1000444" -> "1000476"  [label="DDG: UDP_INC_STATS_USER(sock_net(sk),\n\t\t\t\t\tUDP_MIB_CSUMERRORS, is_udplite)"];
"1000456" -> "1000444"  [label="DDG: UDP_MIB_CSUMERRORS"];
"1000461" -> "1000444"  [label="DDG: is_udplite"];
"1000131" -> "1000444"  [label="DDG: is_udplite"];
"1000449" -> "1000444"  [label="DDG: is_udplite"];
"1000444" -> "1000449"  [label="DDG: is_udplite"];
"1000444" -> "1000456"  [label="DDG: UDP_MIB_CSUMERRORS"];
"1000449" -> "1000443"  [label="AST: "];
"1000449" -> "1000453"  [label="CFG: "];
"1000452" -> "1000449"  [label="AST: "];
"1000453" -> "1000449"  [label="AST: "];
"1000467" -> "1000449"  [label="CFG: "];
"1000449" -> "1000476"  [label="DDG: sock_net(sk)"];
"1000449" -> "1000476"  [label="DDG: UDP_MIB_INERRORS"];
"1000449" -> "1000476"  [label="DDG: UDP_INC_STATS_USER(sock_net(sk),\n\t\t\t\t\tUDP_MIB_INERRORS, is_udplite)"];
"1000449" -> "1000476"  [label="DDG: is_udplite"];
"1000461" -> "1000449"  [label="DDG: UDP_MIB_INERRORS"];
"1000449" -> "1000456"  [label="DDG: is_udplite"];
"1000449" -> "1000461"  [label="DDG: UDP_MIB_INERRORS"];
"1000456" -> "1000455"  [label="AST: "];
"1000456" -> "1000460"  [label="CFG: "];
"1000459" -> "1000456"  [label="AST: "];
"1000460" -> "1000456"  [label="AST: "];
"1000463" -> "1000456"  [label="CFG: "];
"1000456" -> "1000476"  [label="DDG: UDP_MIB_CSUMERRORS"];
"1000456" -> "1000476"  [label="DDG: UDP6_INC_STATS_USER(sock_net(sk),\n\t\t\t\t\tUDP_MIB_CSUMERRORS, is_udplite)"];
"1000461" -> "1000456"  [label="DDG: is_udplite"];
"1000131" -> "1000456"  [label="DDG: is_udplite"];
"1000456" -> "1000461"  [label="DDG: is_udplite"];
"1000461" -> "1000455"  [label="AST: "];
"1000461" -> "1000465"  [label="CFG: "];
"1000464" -> "1000461"  [label="AST: "];
"1000465" -> "1000461"  [label="AST: "];
"1000467" -> "1000461"  [label="CFG: "];
"1000461" -> "1000476"  [label="DDG: UDP6_INC_STATS_USER(sock_net(sk),\n\t\t\t\t\tUDP_MIB_INERRORS, is_udplite)"];
"1000461" -> "1000476"  [label="DDG: is_udplite"];
"1000461" -> "1000476"  [label="DDG: UDP_MIB_INERRORS"];
"1000461" -> "1000476"  [label="DDG: sock_net(sk)"];
}
