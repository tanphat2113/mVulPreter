digraph "0_postgres_31400a673325147e1205326008e32135a78b4d8a_3@API" {
"1000139" [label="(Call,MaxAllocSize / sizeof(Pairs))"];
"1000137" [label="(Call,key_count > MaxAllocSize / sizeof(Pairs))"];
"1000148" [label="(Call,errmsg(\"number of pairs (%d) exceeds the maximum allowed (%d)\",\n\t\t\t\t\t key_count, (int) (MaxAllocSize / sizeof(Pairs))))"];
"1000160" [label="(Call,sizeof(Pairs) * key_count)"];
"1000159" [label="(Call,palloc(sizeof(Pairs) * key_count))"];
"1000157" [label="(Call,key_pairs = palloc(sizeof(Pairs) * key_count))"];
"1000239" [label="(Call,hstoreUniquePairs(key_pairs, j, &bufsiz))"];
"1000236" [label="(Call,*npairs = hstoreUniquePairs(key_pairs, j, &bufsiz))"];
"1000244" [label="(Return,return key_pairs;)"];
"1000172" [label="(Call,i < key_count)"];
"1000175" [label="(Call,i++)"];
"1000153" [label="(Call,MaxAllocSize / sizeof(Pairs))"];
"1000151" [label="(Call,(int) (MaxAllocSize / sizeof(Pairs)))"];
"1000138" [label="(Identifier,key_count)"];
"1000244" [label="(Return,return key_pairs;)"];
"1000145" [label="(Block,)"];
"1000163" [label="(Identifier,key_count)"];
"1000151" [label="(Call,(int) (MaxAllocSize / sizeof(Pairs)))"];
"1000157" [label="(Call,key_pairs = palloc(sizeof(Pairs) * key_count))"];
"1000242" [label="(Call,&bufsiz)"];
"1000237" [label="(Call,*npairs)"];
"1000136" [label="(ControlStructure,if (key_count > MaxAllocSize / sizeof(Pairs)))"];
"1000167" [label="(Identifier,i)"];
"1000144" [label="(Identifier,ERROR)"];
"1000166" [label="(Call,i = 0)"];
"1000174" [label="(Identifier,key_count)"];
"1000240" [label="(Identifier,key_pairs)"];
"1000236" [label="(Call,*npairs = hstoreUniquePairs(key_pairs, j, &bufsiz))"];
"1000141" [label="(Call,sizeof(Pairs))"];
"1000173" [label="(Identifier,i)"];
"1000137" [label="(Call,key_count > MaxAllocSize / sizeof(Pairs))"];
"1000176" [label="(Identifier,i)"];
"1000150" [label="(Identifier,key_count)"];
"1000241" [label="(Identifier,j)"];
"1000159" [label="(Call,palloc(sizeof(Pairs) * key_count))"];
"1000246" [label="(MethodReturn,RET)"];
"1000149" [label="(Literal,\"number of pairs (%d) exceeds the maximum allowed (%d)\")"];
"1000238" [label="(Identifier,npairs)"];
"1000175" [label="(Call,i++)"];
"1000172" [label="(Call,i < key_count)"];
"1000239" [label="(Call,hstoreUniquePairs(key_pairs, j, &bufsiz))"];
"1000161" [label="(Call,sizeof(Pairs))"];
"1000158" [label="(Identifier,key_pairs)"];
"1000181" [label="(Identifier,key_nulls)"];
"1000245" [label="(Identifier,key_pairs)"];
"1000234" [label="(Call,j++)"];
"1000148" [label="(Call,errmsg(\"number of pairs (%d) exceeds the maximum allowed (%d)\",\n\t\t\t\t\t key_count, (int) (MaxAllocSize / sizeof(Pairs))))"];
"1000139" [label="(Call,MaxAllocSize / sizeof(Pairs))"];
"1000169" [label="(Call,j = 0)"];
"1000164" [label="(ControlStructure,for (i = 0, j = 0; i < key_count; i++))"];
"1000160" [label="(Call,sizeof(Pairs) * key_count)"];
"1000143" [label="(Call,ereport(ERROR,\n\t\t\t\t(errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED),\n\t\t\t  errmsg(\"number of pairs (%d) exceeds the maximum allowed (%d)\",\n\t\t\t\t\t key_count, (int) (MaxAllocSize / sizeof(Pairs))))))"];
"1000155" [label="(Call,sizeof(Pairs))"];
"1000154" [label="(Identifier,MaxAllocSize)"];
"1000126" [label="(Call,key_count == 0)"];
"1000104" [label="(Block,)"];
"1000153" [label="(Call,MaxAllocSize / sizeof(Pairs))"];
"1000140" [label="(Identifier,MaxAllocSize)"];
"1000139" -> "1000137"  [label="AST: "];
"1000139" -> "1000141"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000139" -> "1000246"  [label="DDG: "];
"1000139" -> "1000137"  [label="DDG: "];
"1000139" -> "1000153"  [label="DDG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000137"  [label="AST: "];
"1000144" -> "1000137"  [label="CFG: "];
"1000158" -> "1000137"  [label="CFG: "];
"1000137" -> "1000246"  [label="DDG: "];
"1000137" -> "1000246"  [label="DDG: "];
"1000126" -> "1000137"  [label="DDG: "];
"1000137" -> "1000148"  [label="DDG: "];
"1000137" -> "1000160"  [label="DDG: "];
"1000148" -> "1000145"  [label="AST: "];
"1000148" -> "1000151"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000150" -> "1000148"  [label="AST: "];
"1000151" -> "1000148"  [label="AST: "];
"1000143" -> "1000148"  [label="CFG: "];
"1000148" -> "1000246"  [label="DDG: "];
"1000148" -> "1000246"  [label="DDG: "];
"1000151" -> "1000148"  [label="DDG: "];
"1000148" -> "1000160"  [label="DDG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000160" -> "1000163"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000163" -> "1000160"  [label="AST: "];
"1000159" -> "1000160"  [label="CFG: "];
"1000160" -> "1000159"  [label="DDG: "];
"1000160" -> "1000172"  [label="DDG: "];
"1000159" -> "1000157"  [label="AST: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000159" -> "1000246"  [label="DDG: "];
"1000159" -> "1000157"  [label="DDG: "];
"1000157" -> "1000104"  [label="AST: "];
"1000158" -> "1000157"  [label="AST: "];
"1000167" -> "1000157"  [label="CFG: "];
"1000157" -> "1000246"  [label="DDG: "];
"1000157" -> "1000239"  [label="DDG: "];
"1000239" -> "1000236"  [label="AST: "];
"1000239" -> "1000242"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="AST: "];
"1000242" -> "1000239"  [label="AST: "];
"1000236" -> "1000239"  [label="CFG: "];
"1000239" -> "1000246"  [label="DDG: "];
"1000239" -> "1000246"  [label="DDG: "];
"1000239" -> "1000246"  [label="DDG: "];
"1000239" -> "1000236"  [label="DDG: "];
"1000239" -> "1000236"  [label="DDG: "];
"1000239" -> "1000236"  [label="DDG: "];
"1000234" -> "1000239"  [label="DDG: "];
"1000169" -> "1000239"  [label="DDG: "];
"1000239" -> "1000244"  [label="DDG: "];
"1000236" -> "1000104"  [label="AST: "];
"1000237" -> "1000236"  [label="AST: "];
"1000245" -> "1000236"  [label="CFG: "];
"1000236" -> "1000246"  [label="DDG: "];
"1000236" -> "1000246"  [label="DDG: "];
"1000244" -> "1000104"  [label="AST: "];
"1000244" -> "1000245"  [label="CFG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000246" -> "1000244"  [label="CFG: "];
"1000244" -> "1000246"  [label="DDG: "];
"1000245" -> "1000244"  [label="DDG: "];
"1000172" -> "1000164"  [label="AST: "];
"1000172" -> "1000174"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000174" -> "1000172"  [label="AST: "];
"1000181" -> "1000172"  [label="CFG: "];
"1000238" -> "1000172"  [label="CFG: "];
"1000172" -> "1000246"  [label="DDG: "];
"1000172" -> "1000246"  [label="DDG: "];
"1000172" -> "1000246"  [label="DDG: "];
"1000166" -> "1000172"  [label="DDG: "];
"1000175" -> "1000172"  [label="DDG: "];
"1000172" -> "1000175"  [label="DDG: "];
"1000175" -> "1000164"  [label="AST: "];
"1000175" -> "1000176"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000173" -> "1000175"  [label="CFG: "];
"1000153" -> "1000151"  [label="AST: "];
"1000153" -> "1000155"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000155" -> "1000153"  [label="AST: "];
"1000151" -> "1000153"  [label="CFG: "];
"1000153" -> "1000246"  [label="DDG: "];
"1000153" -> "1000151"  [label="DDG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000151" -> "1000246"  [label="DDG: "];
}
