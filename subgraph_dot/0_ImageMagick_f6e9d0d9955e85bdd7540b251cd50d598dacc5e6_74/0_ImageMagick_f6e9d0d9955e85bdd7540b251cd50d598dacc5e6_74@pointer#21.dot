digraph "0_ImageMagick_f6e9d0d9955e85bdd7540b251cd50d598dacc5e6_74@pointer" {
"1000596" [label="(Call,ddata->translate_x = 0-bbox.TL.x)"];
"1000600" [label="(Call,0-bbox.TL.x)"];
"1000565" [label="(Call,bbox.BR.x - bbox.TL.x)"];
"1000774" [label="(Call,LogMagickEvent(CoderEvent,GetMagickModule(),\n        \"  Translation:                 %g,%g\",\n        ddata->translate_x, ddata->translate_y))"];
"1000772" [label="(Call,(void) LogMagickEvent(CoderEvent,GetMagickModule(),\n        \"  Translation:                 %g,%g\",\n        ddata->translate_x, ddata->translate_y))"];
"1000887" [label="(Call,LogMagickEvent(CoderEvent,GetMagickModule(),\n           \"leave ReadWMFImage()\"))"];
"1000885" [label="(Call,(void) LogMagickEvent(CoderEvent,GetMagickModule(),\n           \"leave ReadWMFImage()\"))"];
"1000926" [label="(Call,LogMagickEvent(CoderEvent,GetMagickModule(),\n        \"  Creating canvas image with size %lux%lu\",(unsigned long) image->rows,\n       (unsigned long) image->columns))"];
"1000924" [label="(Call,(void) LogMagickEvent(CoderEvent,GetMagickModule(),\n        \"  Creating canvas image with size %lux%lu\",(unsigned long) image->rows,\n       (unsigned long) image->columns))"];
"1000973" [label="(Call,LogMagickEvent(CoderEvent,GetMagickModule(),\n      \"  Playing WMF to prepare vectors\"))"];
"1000971" [label="(Call,(void) LogMagickEvent(CoderEvent,GetMagickModule(),\n      \"  Playing WMF to prepare vectors\"))"];
"1001000" [label="(Call,LogMagickEvent(CoderEvent,GetMagickModule(),\n            \"  Playing WMF failed with wmf_error %d\", wmf_error))"];
"1000998" [label="(Call,(void) LogMagickEvent(CoderEvent,GetMagickModule(),\n            \"  Playing WMF failed with wmf_error %d\", wmf_error))"];
"1001007" [label="(Call,LogMagickEvent(CoderEvent,GetMagickModule(),\n            \"leave ReadWMFImage()\"))"];
"1001005" [label="(Call,(void) LogMagickEvent(CoderEvent,GetMagickModule(),\n            \"leave ReadWMFImage()\"))"];
"1001022" [label="(Call,LogMagickEvent(CoderEvent,GetMagickModule(),\n      \"  Rendering WMF vectors\"))"];
"1001020" [label="(Call,(void) LogMagickEvent(CoderEvent,GetMagickModule(),\n      \"  Rendering WMF vectors\"))"];
"1001038" [label="(Call,LogMagickEvent(CoderEvent,GetMagickModule(),\"leave ReadWMFImage()\"))"];
"1001036" [label="(Call,(void) LogMagickEvent(CoderEvent,GetMagickModule(),\"leave ReadWMFImage()\"))"];
"1000781" [label="(Call,ddata->translate_y)"];
"1000778" [label="(Call,ddata->translate_x)"];
"1000600" [label="(Call,0-bbox.TL.x)"];
"1000563" [label="(Call,bounding_width  = bbox.BR.x - bbox.TL.x)"];
"1000775" [label="(Identifier,CoderEvent)"];
"1000975" [label="(Call,GetMagickModule())"];
"1000879" [label="(ControlStructure,if (image->debug != MagickFalse))"];
"1000251" [label="(Call,LogMagickEvent(CoderEvent,GetMagickModule(),\n            \"leave ReadWMFImage()\"))"];
"1000131" [label="(Block,)"];
"1000634" [label="(Call,ddata->translate_y = 0-bbox.TL.y)"];
"1000571" [label="(Call,bbox.TL.x)"];
"1000890" [label="(Literal,\"leave ReadWMFImage()\")"];
"1001039" [label="(Identifier,CoderEvent)"];
"1000777" [label="(Literal,\"  Translation:                 %g,%g\")"];
"1001050" [label="(MethodReturn,static Image *)"];
"1000596" [label="(Call,ddata->translate_x = 0-bbox.TL.x)"];
"1001007" [label="(Call,LogMagickEvent(CoderEvent,GetMagickModule(),\n            \"leave ReadWMFImage()\"))"];
"1000974" [label="(Identifier,CoderEvent)"];
"1001003" [label="(Literal,\"  Playing WMF failed with wmf_error %d\")"];
"1001004" [label="(Identifier,wmf_error)"];
"1000965" [label="(ControlStructure,if (image->debug != MagickFalse))"];
"1000888" [label="(Identifier,CoderEvent)"];
"1000997" [label="(Block,)"];
"1001030" [label="(ControlStructure,if (image->debug != MagickFalse))"];
"1001001" [label="(Identifier,CoderEvent)"];
"1000928" [label="(Call,GetMagickModule())"];
"1000998" [label="(Call,(void) LogMagickEvent(CoderEvent,GetMagickModule(),\n            \"  Playing WMF failed with wmf_error %d\", wmf_error))"];
"1001005" [label="(Call,(void) LogMagickEvent(CoderEvent,GetMagickModule(),\n            \"leave ReadWMFImage()\"))"];
"1000789" [label="(Identifier,dc)"];
"1001043" [label="(Identifier,API)"];
"1000985" [label="(Call,wmf_error != wmf_E_None)"];
"1000655" [label="(Call,ddata->translate_y = 0-bbox.BR.y)"];
"1001009" [label="(Call,GetMagickModule())"];
"1000774" [label="(Call,LogMagickEvent(CoderEvent,GetMagickModule(),\n        \"  Translation:                 %g,%g\",\n        ddata->translate_x, ddata->translate_y))"];
"1001023" [label="(Identifier,CoderEvent)"];
"1000978" [label="(Identifier,wmf_error)"];
"1000929" [label="(Literal,\"  Creating canvas image with size %lux%lu\")"];
"1001025" [label="(Literal,\"  Rendering WMF vectors\")"];
"1000973" [label="(Call,LogMagickEvent(CoderEvent,GetMagickModule(),\n      \"  Playing WMF to prepare vectors\"))"];
"1000926" [label="(Call,LogMagickEvent(CoderEvent,GetMagickModule(),\n        \"  Creating canvas image with size %lux%lu\",(unsigned long) image->rows,\n       (unsigned long) image->columns))"];
"1000712" [label="(Call,LogMagickEvent(CoderEvent,GetMagickModule(),\n        \"  Bounding Box:                %g,%g %g,%g\",\n        bbox.TL.x, bbox.TL.y, bbox.BR.x, bbox.BR.y))"];
"1000893" [label="(Identifier,image)"];
"1000597" [label="(Call,ddata->translate_x)"];
"1000918" [label="(ControlStructure,if (image->debug != MagickFalse))"];
"1001002" [label="(Call,GetMagickModule())"];
"1000889" [label="(Call,GetMagickModule())"];
"1000971" [label="(Call,(void) LogMagickEvent(CoderEvent,GetMagickModule(),\n      \"  Playing WMF to prepare vectors\"))"];
"1001010" [label="(Literal,\"leave ReadWMFImage()\")"];
"1001041" [label="(Literal,\"leave ReadWMFImage()\")"];
"1000672" [label="(Block,)"];
"1000935" [label="(Call,(unsigned long) image->columns)"];
"1000976" [label="(Literal,\"  Playing WMF to prepare vectors\")"];
"1000943" [label="(Identifier,image)"];
"1000885" [label="(Call,(void) LogMagickEvent(CoderEvent,GetMagickModule(),\n           \"leave ReadWMFImage()\"))"];
"1000376" [label="(Call,LogMagickEvent(CoderEvent,GetMagickModule(),\n      \"  Scanning WMF to obtain bounding box\"))"];
"1001028" [label="(Identifier,ddata)"];
"1000410" [label="(Call,LogMagickEvent(CoderEvent,GetMagickModule(),\n            \"leave ReadWMFImage()\"))"];
"1000924" [label="(Call,(void) LogMagickEvent(CoderEvent,GetMagickModule(),\n        \"  Creating canvas image with size %lux%lu\",(unsigned long) image->rows,\n       (unsigned long) image->columns))"];
"1000601" [label="(Literal,0)"];
"1000930" [label="(Call,(unsigned long) image->rows)"];
"1001022" [label="(Call,LogMagickEvent(CoderEvent,GetMagickModule(),\n      \"  Rendering WMF vectors\"))"];
"1000565" [label="(Call,bbox.BR.x - bbox.TL.x)"];
"1001020" [label="(Call,(void) LogMagickEvent(CoderEvent,GetMagickModule(),\n      \"  Rendering WMF vectors\"))"];
"1000772" [label="(Call,(void) LogMagickEvent(CoderEvent,GetMagickModule(),\n        \"  Translation:                 %g,%g\",\n        ddata->translate_x, ddata->translate_y))"];
"1001038" [label="(Call,LogMagickEvent(CoderEvent,GetMagickModule(),\"leave ReadWMFImage()\"))"];
"1001040" [label="(Call,GetMagickModule())"];
"1001036" [label="(Call,(void) LogMagickEvent(CoderEvent,GetMagickModule(),\"leave ReadWMFImage()\"))"];
"1000887" [label="(Call,LogMagickEvent(CoderEvent,GetMagickModule(),\n           \"leave ReadWMFImage()\"))"];
"1000566" [label="(Call,bbox.BR.x)"];
"1001014" [label="(ControlStructure,if (image->debug != MagickFalse))"];
"1000609" [label="(Identifier,ddata)"];
"1001012" [label="(Identifier,DelegateError)"];
"1000927" [label="(Identifier,CoderEvent)"];
"1001000" [label="(Call,LogMagickEvent(CoderEvent,GetMagickModule(),\n            \"  Playing WMF failed with wmf_error %d\", wmf_error))"];
"1000501" [label="(Call,LogMagickEvent(CoderEvent,GetMagickModule(),\n            \"leave ReadWMFImage()\"))"];
"1001008" [label="(Identifier,CoderEvent)"];
"1000602" [label="(Call,bbox.TL.x)"];
"1000762" [label="(Call,LogMagickEvent(CoderEvent,GetMagickModule(),\n        \"  Bounding box scale factor:   %g,%g\",ddata->scale_x,\n        ddata->scale_y))"];
"1001024" [label="(Call,GetMagickModule())"];
"1000776" [label="(Call,GetMagickModule())"];
"1000596" -> "1000131"  [label="AST: "];
"1000596" -> "1000600"  [label="CFG: "];
"1000597" -> "1000596"  [label="AST: "];
"1000600" -> "1000596"  [label="AST: "];
"1000609" -> "1000596"  [label="CFG: "];
"1000596" -> "1001050"  [label="DDG: "];
"1000596" -> "1001050"  [label="DDG: "];
"1000600" -> "1000596"  [label="DDG: "];
"1000600" -> "1000596"  [label="DDG: "];
"1000596" -> "1000774"  [label="DDG: "];
"1000600" -> "1000602"  [label="CFG: "];
"1000601" -> "1000600"  [label="AST: "];
"1000602" -> "1000600"  [label="AST: "];
"1000600" -> "1001050"  [label="DDG: "];
"1000565" -> "1000600"  [label="DDG: "];
"1000600" -> "1000712"  [label="DDG: "];
"1000565" -> "1000563"  [label="AST: "];
"1000565" -> "1000571"  [label="CFG: "];
"1000566" -> "1000565"  [label="AST: "];
"1000571" -> "1000565"  [label="AST: "];
"1000563" -> "1000565"  [label="CFG: "];
"1000565" -> "1001050"  [label="DDG: "];
"1000565" -> "1000563"  [label="DDG: "];
"1000565" -> "1000563"  [label="DDG: "];
"1000565" -> "1000712"  [label="DDG: "];
"1000774" -> "1000772"  [label="AST: "];
"1000774" -> "1000781"  [label="CFG: "];
"1000775" -> "1000774"  [label="AST: "];
"1000776" -> "1000774"  [label="AST: "];
"1000777" -> "1000774"  [label="AST: "];
"1000778" -> "1000774"  [label="AST: "];
"1000781" -> "1000774"  [label="AST: "];
"1000772" -> "1000774"  [label="CFG: "];
"1000774" -> "1001050"  [label="DDG: "];
"1000774" -> "1001050"  [label="DDG: "];
"1000774" -> "1001050"  [label="DDG: "];
"1000774" -> "1001050"  [label="DDG: "];
"1000774" -> "1000772"  [label="DDG: "];
"1000774" -> "1000772"  [label="DDG: "];
"1000774" -> "1000772"  [label="DDG: "];
"1000774" -> "1000772"  [label="DDG: "];
"1000774" -> "1000772"  [label="DDG: "];
"1000762" -> "1000774"  [label="DDG: "];
"1000655" -> "1000774"  [label="DDG: "];
"1000634" -> "1000774"  [label="DDG: "];
"1000774" -> "1000887"  [label="DDG: "];
"1000774" -> "1000926"  [label="DDG: "];
"1000774" -> "1000973"  [label="DDG: "];
"1000774" -> "1001000"  [label="DDG: "];
"1000774" -> "1001022"  [label="DDG: "];
"1000774" -> "1001038"  [label="DDG: "];
"1000772" -> "1000672"  [label="AST: "];
"1000773" -> "1000772"  [label="AST: "];
"1000789" -> "1000772"  [label="CFG: "];
"1000772" -> "1001050"  [label="DDG: "];
"1000772" -> "1001050"  [label="DDG: "];
"1000887" -> "1000885"  [label="AST: "];
"1000887" -> "1000890"  [label="CFG: "];
"1000888" -> "1000887"  [label="AST: "];
"1000889" -> "1000887"  [label="AST: "];
"1000890" -> "1000887"  [label="AST: "];
"1000885" -> "1000887"  [label="CFG: "];
"1000887" -> "1001050"  [label="DDG: "];
"1000887" -> "1001050"  [label="DDG: "];
"1000887" -> "1000885"  [label="DDG: "];
"1000887" -> "1000885"  [label="DDG: "];
"1000887" -> "1000885"  [label="DDG: "];
"1000376" -> "1000887"  [label="DDG: "];
"1000410" -> "1000887"  [label="DDG: "];
"1000251" -> "1000887"  [label="DDG: "];
"1000501" -> "1000887"  [label="DDG: "];
"1000885" -> "1000879"  [label="AST: "];
"1000886" -> "1000885"  [label="AST: "];
"1000893" -> "1000885"  [label="CFG: "];
"1000885" -> "1001050"  [label="DDG: "];
"1000885" -> "1001050"  [label="DDG: "];
"1000926" -> "1000924"  [label="AST: "];
"1000926" -> "1000935"  [label="CFG: "];
"1000927" -> "1000926"  [label="AST: "];
"1000928" -> "1000926"  [label="AST: "];
"1000929" -> "1000926"  [label="AST: "];
"1000930" -> "1000926"  [label="AST: "];
"1000935" -> "1000926"  [label="AST: "];
"1000924" -> "1000926"  [label="CFG: "];
"1000926" -> "1001050"  [label="DDG: "];
"1000926" -> "1001050"  [label="DDG: "];
"1000926" -> "1001050"  [label="DDG: "];
"1000926" -> "1001050"  [label="DDG: "];
"1000926" -> "1000924"  [label="DDG: "];
"1000926" -> "1000924"  [label="DDG: "];
"1000926" -> "1000924"  [label="DDG: "];
"1000926" -> "1000924"  [label="DDG: "];
"1000926" -> "1000924"  [label="DDG: "];
"1000376" -> "1000926"  [label="DDG: "];
"1000410" -> "1000926"  [label="DDG: "];
"1000251" -> "1000926"  [label="DDG: "];
"1000501" -> "1000926"  [label="DDG: "];
"1000930" -> "1000926"  [label="DDG: "];
"1000935" -> "1000926"  [label="DDG: "];
"1000926" -> "1000973"  [label="DDG: "];
"1000926" -> "1001000"  [label="DDG: "];
"1000926" -> "1001022"  [label="DDG: "];
"1000926" -> "1001038"  [label="DDG: "];
"1000924" -> "1000918"  [label="AST: "];
"1000925" -> "1000924"  [label="AST: "];
"1000943" -> "1000924"  [label="CFG: "];
"1000924" -> "1001050"  [label="DDG: "];
"1000924" -> "1001050"  [label="DDG: "];
"1000973" -> "1000971"  [label="AST: "];
"1000973" -> "1000976"  [label="CFG: "];
"1000974" -> "1000973"  [label="AST: "];
"1000975" -> "1000973"  [label="AST: "];
"1000976" -> "1000973"  [label="AST: "];
"1000971" -> "1000973"  [label="CFG: "];
"1000973" -> "1001050"  [label="DDG: "];
"1000973" -> "1001050"  [label="DDG: "];
"1000973" -> "1000971"  [label="DDG: "];
"1000973" -> "1000971"  [label="DDG: "];
"1000973" -> "1000971"  [label="DDG: "];
"1000376" -> "1000973"  [label="DDG: "];
"1000410" -> "1000973"  [label="DDG: "];
"1000251" -> "1000973"  [label="DDG: "];
"1000501" -> "1000973"  [label="DDG: "];
"1000973" -> "1001000"  [label="DDG: "];
"1000973" -> "1001022"  [label="DDG: "];
"1000973" -> "1001038"  [label="DDG: "];
"1000971" -> "1000965"  [label="AST: "];
"1000972" -> "1000971"  [label="AST: "];
"1000978" -> "1000971"  [label="CFG: "];
"1000971" -> "1001050"  [label="DDG: "];
"1000971" -> "1001050"  [label="DDG: "];
"1001000" -> "1000998"  [label="AST: "];
"1001000" -> "1001004"  [label="CFG: "];
"1001001" -> "1001000"  [label="AST: "];
"1001002" -> "1001000"  [label="AST: "];
"1001003" -> "1001000"  [label="AST: "];
"1001004" -> "1001000"  [label="AST: "];
"1000998" -> "1001000"  [label="CFG: "];
"1001000" -> "1001050"  [label="DDG: "];
"1001000" -> "1000998"  [label="DDG: "];
"1001000" -> "1000998"  [label="DDG: "];
"1001000" -> "1000998"  [label="DDG: "];
"1001000" -> "1000998"  [label="DDG: "];
"1000376" -> "1001000"  [label="DDG: "];
"1000410" -> "1001000"  [label="DDG: "];
"1000251" -> "1001000"  [label="DDG: "];
"1000501" -> "1001000"  [label="DDG: "];
"1000985" -> "1001000"  [label="DDG: "];
"1001000" -> "1001007"  [label="DDG: "];
"1000998" -> "1000997"  [label="AST: "];
"1000999" -> "1000998"  [label="AST: "];
"1001006" -> "1000998"  [label="CFG: "];
"1000998" -> "1001050"  [label="DDG: "];
"1000998" -> "1001050"  [label="DDG: "];
"1001007" -> "1001005"  [label="AST: "];
"1001007" -> "1001010"  [label="CFG: "];
"1001008" -> "1001007"  [label="AST: "];
"1001009" -> "1001007"  [label="AST: "];
"1001010" -> "1001007"  [label="AST: "];
"1001005" -> "1001007"  [label="CFG: "];
"1001007" -> "1001050"  [label="DDG: "];
"1001007" -> "1001050"  [label="DDG: "];
"1001007" -> "1001005"  [label="DDG: "];
"1001007" -> "1001005"  [label="DDG: "];
"1001007" -> "1001005"  [label="DDG: "];
"1001007" -> "1001022"  [label="DDG: "];
"1001007" -> "1001038"  [label="DDG: "];
"1001005" -> "1000997"  [label="AST: "];
"1001006" -> "1001005"  [label="AST: "];
"1001012" -> "1001005"  [label="CFG: "];
"1001005" -> "1001050"  [label="DDG: "];
"1001005" -> "1001050"  [label="DDG: "];
"1001022" -> "1001020"  [label="AST: "];
"1001022" -> "1001025"  [label="CFG: "];
"1001023" -> "1001022"  [label="AST: "];
"1001024" -> "1001022"  [label="AST: "];
"1001025" -> "1001022"  [label="AST: "];
"1001020" -> "1001022"  [label="CFG: "];
"1001022" -> "1001050"  [label="DDG: "];
"1001022" -> "1001050"  [label="DDG: "];
"1001022" -> "1001020"  [label="DDG: "];
"1001022" -> "1001020"  [label="DDG: "];
"1001022" -> "1001020"  [label="DDG: "];
"1000376" -> "1001022"  [label="DDG: "];
"1000410" -> "1001022"  [label="DDG: "];
"1000251" -> "1001022"  [label="DDG: "];
"1000501" -> "1001022"  [label="DDG: "];
"1001022" -> "1001038"  [label="DDG: "];
"1001020" -> "1001014"  [label="AST: "];
"1001021" -> "1001020"  [label="AST: "];
"1001028" -> "1001020"  [label="CFG: "];
"1001020" -> "1001050"  [label="DDG: "];
"1001020" -> "1001050"  [label="DDG: "];
"1001038" -> "1001036"  [label="AST: "];
"1001038" -> "1001041"  [label="CFG: "];
"1001039" -> "1001038"  [label="AST: "];
"1001040" -> "1001038"  [label="AST: "];
"1001041" -> "1001038"  [label="AST: "];
"1001036" -> "1001038"  [label="CFG: "];
"1001038" -> "1001050"  [label="DDG: "];
"1001038" -> "1001050"  [label="DDG: "];
"1001038" -> "1001036"  [label="DDG: "];
"1001038" -> "1001036"  [label="DDG: "];
"1001038" -> "1001036"  [label="DDG: "];
"1000376" -> "1001038"  [label="DDG: "];
"1000410" -> "1001038"  [label="DDG: "];
"1000251" -> "1001038"  [label="DDG: "];
"1000501" -> "1001038"  [label="DDG: "];
"1001036" -> "1001030"  [label="AST: "];
"1001037" -> "1001036"  [label="AST: "];
"1001043" -> "1001036"  [label="CFG: "];
"1001036" -> "1001050"  [label="DDG: "];
"1001036" -> "1001050"  [label="DDG: "];
}
