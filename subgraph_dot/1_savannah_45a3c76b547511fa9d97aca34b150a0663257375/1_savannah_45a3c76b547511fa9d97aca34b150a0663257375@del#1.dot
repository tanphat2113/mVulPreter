digraph "1_savannah_45a3c76b547511fa9d97aca34b150a0663257375@del" {
"1000229" [label="(Call,stream->pos + count > stream->size)"];
"1000222" [label="(Call,stream->pos >= stream->size)"];
"1000109" [label="(MethodParameterIn,FT_ULong   count)"];
"1000221" [label="(Call,stream->pos >= stream->size        ||\n           stream->pos + count > stream->size)"];
"1000255" [label="(Call,stream->cursor = stream->base + stream->pos)"];
"1000220" [label="(ControlStructure,if ( stream->pos >= stream->size        ||\n           stream->pos + count > stream->size ))"];
"1000204" [label="(Call,stream->limit  = stream->cursor + count)"];
"1000275" [label="(Call,stream->pos   += count)"];
"1000136" [label="(Call,count > stream->size)"];
"1000109" [label="(MethodParameterIn,FT_ULong   count)"];
"1000160" [label="(Call,ft_mem_qalloc( memory, count, &error ))"];
"1000232" [label="(Identifier,stream)"];
"1000257" [label="(Identifier,stream)"];
"1000222" [label="(Call,stream->pos >= stream->size)"];
"1000283" [label="(MethodReturn,RET)"];
"1000208" [label="(Call,stream->cursor + count)"];
"1000270" [label="(Call,stream->cursor + count)"];
"1000241" [label="(Literal,\"FT_Stream_EnterFrame:\"\n                    \" invalid i/o; pos = 0x%lx, count = %lu, size = 0x%lx\n\")"];
"1000223" [label="(Call,stream->pos)"];
"1000170" [label="(Call,stream->read( stream, stream->pos,\n                                 stream->base, count ))"];
"1000229" [label="(Call,stream->pos + count > stream->size)"];
"1000259" [label="(Call,stream->base + stream->pos)"];
"1000266" [label="(Call,stream->limit  = stream->cursor + count)"];
"1000235" [label="(Call,stream->size)"];
"1000226" [label="(Call,stream->size)"];
"1000221" [label="(Call,stream->pos >= stream->size        ||\n           stream->pos + count > stream->size)"];
"1000180" [label="(Call,read_bytes < count)"];
"1000230" [label="(Call,stream->pos + count)"];
"1000229" -> "1000221"  [label="AST: "];
"1000229" -> "1000235"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000235" -> "1000229"  [label="AST: "];
"1000221" -> "1000229"  [label="CFG: "];
"1000229" -> "1000283"  [label="DDG: stream->size"];
"1000229" -> "1000283"  [label="DDG: stream->pos + count"];
"1000229" -> "1000221"  [label="DDG: stream->pos + count"];
"1000229" -> "1000221"  [label="DDG: stream->size"];
"1000222" -> "1000229"  [label="DDG: stream->pos"];
"1000222" -> "1000229"  [label="DDG: stream->size"];
"1000109" -> "1000229"  [label="DDG: count"];
"1000222" -> "1000221"  [label="AST: "];
"1000222" -> "1000226"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000226" -> "1000222"  [label="AST: "];
"1000232" -> "1000222"  [label="CFG: "];
"1000221" -> "1000222"  [label="CFG: "];
"1000222" -> "1000283"  [label="DDG: stream->size"];
"1000222" -> "1000283"  [label="DDG: stream->pos"];
"1000222" -> "1000221"  [label="DDG: stream->pos"];
"1000222" -> "1000221"  [label="DDG: stream->size"];
"1000222" -> "1000230"  [label="DDG: stream->pos"];
"1000222" -> "1000255"  [label="DDG: stream->pos"];
"1000222" -> "1000259"  [label="DDG: stream->pos"];
"1000222" -> "1000275"  [label="DDG: stream->pos"];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000283"  [label="DDG: count"];
"1000109" -> "1000136"  [label="DDG: count"];
"1000109" -> "1000160"  [label="DDG: count"];
"1000109" -> "1000170"  [label="DDG: count"];
"1000109" -> "1000180"  [label="DDG: count"];
"1000109" -> "1000204"  [label="DDG: count"];
"1000109" -> "1000208"  [label="DDG: count"];
"1000109" -> "1000230"  [label="DDG: count"];
"1000109" -> "1000266"  [label="DDG: count"];
"1000109" -> "1000270"  [label="DDG: count"];
"1000109" -> "1000275"  [label="DDG: count"];
"1000221" -> "1000220"  [label="AST: "];
"1000241" -> "1000221"  [label="CFG: "];
"1000257" -> "1000221"  [label="CFG: "];
"1000221" -> "1000283"  [label="DDG: stream->pos >= stream->size        ||\n           stream->pos + count > stream->size"];
"1000221" -> "1000283"  [label="DDG: stream->pos + count > stream->size"];
"1000221" -> "1000283"  [label="DDG: stream->pos >= stream->size"];
}
