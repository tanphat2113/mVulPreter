digraph "0_Chrome_e7b0b560a8f1c3f1c15a2c7486d212543660b8a6_0@API" {
"1000236" [label="(Call,main_task_runner()->PostTask(\n      FROM_HERE, base::BindOnce(&UrlFetcherDownloader::OnDownloadComplete,\n                                base::Unretained(this), is_handled, result,\n                                download_metrics)))"];
"1000228" [label="(Call,base::PostTask(FROM_HERE, kTaskTraits,\n                   base::BindOnce(IgnoreResult(&base::DeleteFileRecursively),\n                                  download_dir_)))"];
"1000231" [label="(Call,base::BindOnce(IgnoreResult(&base::DeleteFileRecursively),\n                                  download_dir_))"];
"1000232" [label="(Call,IgnoreResult(&base::DeleteFileRecursively))"];
"1000238" [label="(Call,base::BindOnce(&UrlFetcherDownloader::OnDownloadComplete,\n                                base::Unretained(this), is_handled, result,\n                                download_metrics))"];
"1000241" [label="(Call,base::Unretained(this))"];
"1000147" [label="(Call,is_handled = error == 0 || IsHttpServerError(error))"];
"1000149" [label="(Call,error == 0 || IsHttpServerError(error))"];
"1000150" [label="(Call,error == 0)"];
"1000139" [label="(Call,error = response_code_)"];
"1000135" [label="(Call,response_code_ != -1)"];
"1000127" [label="(Call,response_code_ == 200)"];
"1000137" [label="(Call,-1)"];
"1000143" [label="(Call,error = net_error)"];
"1000125" [label="(Call,!net_error)"];
"1000101" [label="(MethodParameterIn,int net_error)"];
"1000130" [label="(Call,error = 0)"];
"1000153" [label="(Call,IsHttpServerError(error))"];
"1000156" [label="(Call,result.error = error)"];
"1000164" [label="(Call,result.response = file_path_)"];
"1000185" [label="(Call,download_metrics.downloaded_bytes = error ? -1 : content_size)"];
"1000191" [label="(Call,-1)"];
"1000121" [label="(Call,-1)"];
"1000102" [label="(MethodParameterIn,int64_t content_size)"];
"1000199" [label="(Call,download_metrics.download_time_ms = download_time.InMilliseconds())"];
"1000194" [label="(Call,download_metrics.total_bytes = total_bytes_)"];
"1000180" [label="(Call,download_metrics.error = error)"];
"1000162" [label="(Call,!error)"];
"1000175" [label="(Call,download_metrics.downloader = DownloadMetrics::kUrlFetcher)"];
"1000170" [label="(Call,download_metrics.url = url())"];
"1000246" [label="(MethodReturn,void)"];
"1000244" [label="(Identifier,result)"];
"1000175" [label="(Call,download_metrics.downloader = DownloadMetrics::kUrlFetcher)"];
"1000195" [label="(Call,download_metrics.total_bytes)"];
"1000228" [label="(Call,base::PostTask(FROM_HERE, kTaskTraits,\n                   base::BindOnce(IgnoreResult(&base::DeleteFileRecursively),\n                                  download_dir_)))"];
"1000180" [label="(Call,download_metrics.error = error)"];
"1000142" [label="(ControlStructure,else)"];
"1000140" [label="(Identifier,error)"];
"1000153" [label="(Call,IsHttpServerError(error))"];
"1000103" [label="(Block,)"];
"1000235" [label="(Identifier,download_dir_)"];
"1000123" [label="(ControlStructure,if (!net_error && response_code_ == 200))"];
"1000177" [label="(Identifier,download_metrics)"];
"1000150" [label="(Call,error == 0)"];
"1000192" [label="(Literal,1)"];
"1000239" [label="(Call,&UrlFetcherDownloader::OnDownloadComplete)"];
"1000198" [label="(Identifier,total_bytes_)"];
"1000145" [label="(Identifier,net_error)"];
"1000189" [label="(Call,error ? -1 : content_size)"];
"1000241" [label="(Call,base::Unretained(this))"];
"1000236" [label="(Call,main_task_runner()->PostTask(\n      FROM_HERE, base::BindOnce(&UrlFetcherDownloader::OnDownloadComplete,\n                                base::Unretained(this), is_handled, result,\n                                download_metrics)))"];
"1000166" [label="(Identifier,result)"];
"1000181" [label="(Call,download_metrics.error)"];
"1000121" [label="(Call,-1)"];
"1000182" [label="(Identifier,download_metrics)"];
"1000194" [label="(Call,download_metrics.total_bytes = total_bytes_)"];
"1000101" [label="(MethodParameterIn,int net_error)"];
"1000141" [label="(Identifier,response_code_)"];
"1000162" [label="(Call,!error)"];
"1000156" [label="(Call,result.error = error)"];
"1000242" [label="(Identifier,this)"];
"1000163" [label="(Identifier,error)"];
"1000203" [label="(Call,download_time.InMilliseconds())"];
"1000135" [label="(Call,response_code_ != -1)"];
"1000129" [label="(Literal,200)"];
"1000176" [label="(Call,download_metrics.downloader)"];
"1000233" [label="(Call,&base::DeleteFileRecursively)"];
"1000147" [label="(Call,is_handled = error == 0 || IsHttpServerError(error))"];
"1000232" [label="(Call,IgnoreResult(&base::DeleteFileRecursively))"];
"1000209" [label="(Call,content_size << \" bytes in \"\n          << download_time.InMilliseconds() << \"ms from \" << url().spec()\n          << \" to \" << result.response.value())"];
"1000185" [label="(Call,download_metrics.downloaded_bytes = error ? -1 : content_size)"];
"1000229" [label="(Identifier,FROM_HERE)"];
"1000134" [label="(ControlStructure,if (response_code_ != -1))"];
"1000128" [label="(Identifier,response_code_)"];
"1000152" [label="(Literal,0)"];
"1000238" [label="(Call,base::BindOnce(&UrlFetcherDownloader::OnDownloadComplete,\n                                base::Unretained(this), is_handled, result,\n                                download_metrics))"];
"1000126" [label="(Identifier,net_error)"];
"1000199" [label="(Call,download_metrics.download_time_ms = download_time.InMilliseconds())"];
"1000132" [label="(Literal,0)"];
"1000158" [label="(Identifier,result)"];
"1000137" [label="(Call,-1)"];
"1000191" [label="(Call,-1)"];
"1000171" [label="(Call,download_metrics.url)"];
"1000143" [label="(Call,error = net_error)"];
"1000154" [label="(Identifier,error)"];
"1000138" [label="(Literal,1)"];
"1000237" [label="(Identifier,FROM_HERE)"];
"1000119" [label="(Call,error = -1)"];
"1000170" [label="(Call,download_metrics.url = url())"];
"1000151" [label="(Identifier,error)"];
"1000206" [label="(Literal,1)"];
"1000164" [label="(Call,result.response = file_path_)"];
"1000165" [label="(Call,result.response)"];
"1000149" [label="(Call,error == 0 || IsHttpServerError(error))"];
"1000122" [label="(Literal,1)"];
"1000187" [label="(Identifier,download_metrics)"];
"1000196" [label="(Identifier,download_metrics)"];
"1000102" [label="(MethodParameterIn,int64_t content_size)"];
"1000231" [label="(Call,base::BindOnce(IgnoreResult(&base::DeleteFileRecursively),\n                                  download_dir_))"];
"1000127" [label="(Call,response_code_ == 200)"];
"1000148" [label="(Identifier,is_handled)"];
"1000243" [label="(Identifier,is_handled)"];
"1000124" [label="(Call,!net_error && response_code_ == 200)"];
"1000144" [label="(Identifier,error)"];
"1000157" [label="(Call,result.error)"];
"1000200" [label="(Call,download_metrics.download_time_ms)"];
"1000168" [label="(Identifier,file_path_)"];
"1000227" [label="(Block,)"];
"1000186" [label="(Call,download_metrics.downloaded_bytes)"];
"1000136" [label="(Identifier,response_code_)"];
"1000161" [label="(ControlStructure,if (!error))"];
"1000160" [label="(Identifier,error)"];
"1000174" [label="(Call,url())"];
"1000131" [label="(Identifier,error)"];
"1000230" [label="(Identifier,kTaskTraits)"];
"1000184" [label="(Identifier,error)"];
"1000201" [label="(Identifier,download_metrics)"];
"1000125" [label="(Call,!net_error)"];
"1000139" [label="(Call,error = response_code_)"];
"1000130" [label="(Call,error = 0)"];
"1000245" [label="(Identifier,download_metrics)"];
"1000179" [label="(Identifier,DownloadMetrics::kUrlFetcher)"];
"1000172" [label="(Identifier,download_metrics)"];
"1000236" -> "1000103"  [label="AST: "];
"1000236" -> "1000238"  [label="CFG: "];
"1000237" -> "1000236"  [label="AST: "];
"1000238" -> "1000236"  [label="AST: "];
"1000246" -> "1000236"  [label="CFG: "];
"1000236" -> "1000246"  [label="DDG: FROM_HERE"];
"1000236" -> "1000246"  [label="DDG: main_task_runner()->PostTask(\n      FROM_HERE, base::BindOnce(&UrlFetcherDownloader::OnDownloadComplete,\n                                base::Unretained(this), is_handled, result,\n                                download_metrics))"];
"1000236" -> "1000246"  [label="DDG: base::BindOnce(&UrlFetcherDownloader::OnDownloadComplete,\n                                base::Unretained(this), is_handled, result,\n                                download_metrics)"];
"1000228" -> "1000236"  [label="DDG: FROM_HERE"];
"1000238" -> "1000236"  [label="DDG: result"];
"1000238" -> "1000236"  [label="DDG: base::Unretained(this)"];
"1000238" -> "1000236"  [label="DDG: &UrlFetcherDownloader::OnDownloadComplete"];
"1000238" -> "1000236"  [label="DDG: is_handled"];
"1000238" -> "1000236"  [label="DDG: download_metrics"];
"1000228" -> "1000227"  [label="AST: "];
"1000228" -> "1000231"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000230" -> "1000228"  [label="AST: "];
"1000231" -> "1000228"  [label="AST: "];
"1000237" -> "1000228"  [label="CFG: "];
"1000228" -> "1000246"  [label="DDG: base::BindOnce(IgnoreResult(&base::DeleteFileRecursively),\n                                  download_dir_)"];
"1000228" -> "1000246"  [label="DDG: base::PostTask(FROM_HERE, kTaskTraits,\n                   base::BindOnce(IgnoreResult(&base::DeleteFileRecursively),\n                                  download_dir_))"];
"1000228" -> "1000246"  [label="DDG: kTaskTraits"];
"1000231" -> "1000228"  [label="DDG: IgnoreResult(&base::DeleteFileRecursively)"];
"1000231" -> "1000228"  [label="DDG: download_dir_"];
"1000231" -> "1000235"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000235" -> "1000231"  [label="AST: "];
"1000231" -> "1000246"  [label="DDG: download_dir_"];
"1000231" -> "1000246"  [label="DDG: IgnoreResult(&base::DeleteFileRecursively)"];
"1000232" -> "1000231"  [label="DDG: &base::DeleteFileRecursively"];
"1000232" -> "1000233"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000235" -> "1000232"  [label="CFG: "];
"1000232" -> "1000246"  [label="DDG: &base::DeleteFileRecursively"];
"1000238" -> "1000245"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000241" -> "1000238"  [label="AST: "];
"1000243" -> "1000238"  [label="AST: "];
"1000244" -> "1000238"  [label="AST: "];
"1000245" -> "1000238"  [label="AST: "];
"1000238" -> "1000246"  [label="DDG: &UrlFetcherDownloader::OnDownloadComplete"];
"1000238" -> "1000246"  [label="DDG: result"];
"1000238" -> "1000246"  [label="DDG: download_metrics"];
"1000238" -> "1000246"  [label="DDG: base::Unretained(this)"];
"1000238" -> "1000246"  [label="DDG: is_handled"];
"1000241" -> "1000238"  [label="DDG: this"];
"1000147" -> "1000238"  [label="DDG: is_handled"];
"1000156" -> "1000238"  [label="DDG: result.error"];
"1000164" -> "1000238"  [label="DDG: result.response"];
"1000185" -> "1000238"  [label="DDG: download_metrics.downloaded_bytes"];
"1000199" -> "1000238"  [label="DDG: download_metrics.download_time_ms"];
"1000194" -> "1000238"  [label="DDG: download_metrics.total_bytes"];
"1000180" -> "1000238"  [label="DDG: download_metrics.error"];
"1000175" -> "1000238"  [label="DDG: download_metrics.downloader"];
"1000170" -> "1000238"  [label="DDG: download_metrics.url"];
"1000241" -> "1000242"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="CFG: "];
"1000241" -> "1000246"  [label="DDG: this"];
"1000147" -> "1000103"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000158" -> "1000147"  [label="CFG: "];
"1000147" -> "1000246"  [label="DDG: error == 0 || IsHttpServerError(error)"];
"1000149" -> "1000147"  [label="DDG: error == 0"];
"1000149" -> "1000147"  [label="DDG: IsHttpServerError(error)"];
"1000149" -> "1000150"  [label="CFG: "];
"1000149" -> "1000153"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000153" -> "1000149"  [label="AST: "];
"1000149" -> "1000246"  [label="DDG: IsHttpServerError(error)"];
"1000149" -> "1000246"  [label="DDG: error == 0"];
"1000150" -> "1000149"  [label="DDG: error"];
"1000150" -> "1000149"  [label="DDG: 0"];
"1000153" -> "1000149"  [label="DDG: error"];
"1000150" -> "1000152"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="AST: "];
"1000154" -> "1000150"  [label="CFG: "];
"1000139" -> "1000150"  [label="DDG: error"];
"1000143" -> "1000150"  [label="DDG: error"];
"1000130" -> "1000150"  [label="DDG: error"];
"1000150" -> "1000153"  [label="DDG: error"];
"1000150" -> "1000156"  [label="DDG: error"];
"1000150" -> "1000162"  [label="DDG: error"];
"1000139" -> "1000134"  [label="AST: "];
"1000139" -> "1000141"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="AST: "];
"1000148" -> "1000139"  [label="CFG: "];
"1000139" -> "1000246"  [label="DDG: response_code_"];
"1000135" -> "1000139"  [label="DDG: response_code_"];
"1000135" -> "1000134"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000140" -> "1000135"  [label="CFG: "];
"1000144" -> "1000135"  [label="CFG: "];
"1000135" -> "1000246"  [label="DDG: response_code_ != -1"];
"1000135" -> "1000246"  [label="DDG: response_code_"];
"1000127" -> "1000135"  [label="DDG: response_code_"];
"1000137" -> "1000135"  [label="DDG: 1"];
"1000135" -> "1000185"  [label="DDG: -1"];
"1000135" -> "1000189"  [label="DDG: -1"];
"1000127" -> "1000124"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000124" -> "1000127"  [label="CFG: "];
"1000127" -> "1000246"  [label="DDG: response_code_"];
"1000127" -> "1000124"  [label="DDG: response_code_"];
"1000127" -> "1000124"  [label="DDG: 200"];
"1000137" -> "1000138"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000145" -> "1000143"  [label="AST: "];
"1000148" -> "1000143"  [label="CFG: "];
"1000143" -> "1000246"  [label="DDG: net_error"];
"1000125" -> "1000143"  [label="DDG: net_error"];
"1000101" -> "1000143"  [label="DDG: net_error"];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000126"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000128" -> "1000125"  [label="CFG: "];
"1000124" -> "1000125"  [label="CFG: "];
"1000125" -> "1000246"  [label="DDG: net_error"];
"1000125" -> "1000124"  [label="DDG: net_error"];
"1000101" -> "1000125"  [label="DDG: net_error"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000246"  [label="DDG: net_error"];
"1000130" -> "1000123"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000148" -> "1000130"  [label="CFG: "];
"1000153" -> "1000154"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000153" -> "1000156"  [label="DDG: error"];
"1000153" -> "1000162"  [label="DDG: error"];
"1000156" -> "1000103"  [label="AST: "];
"1000156" -> "1000160"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000160" -> "1000156"  [label="AST: "];
"1000163" -> "1000156"  [label="CFG: "];
"1000156" -> "1000246"  [label="DDG: result.error"];
"1000164" -> "1000161"  [label="AST: "];
"1000164" -> "1000168"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000168" -> "1000164"  [label="AST: "];
"1000172" -> "1000164"  [label="CFG: "];
"1000164" -> "1000246"  [label="DDG: file_path_"];
"1000164" -> "1000246"  [label="DDG: result.response"];
"1000185" -> "1000103"  [label="AST: "];
"1000185" -> "1000189"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000189" -> "1000185"  [label="AST: "];
"1000196" -> "1000185"  [label="CFG: "];
"1000185" -> "1000246"  [label="DDG: download_metrics.downloaded_bytes"];
"1000185" -> "1000246"  [label="DDG: error ? -1 : content_size"];
"1000191" -> "1000185"  [label="DDG: 1"];
"1000121" -> "1000185"  [label="DDG: 1"];
"1000102" -> "1000185"  [label="DDG: content_size"];
"1000191" -> "1000189"  [label="AST: "];
"1000191" -> "1000192"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000189" -> "1000191"  [label="CFG: "];
"1000191" -> "1000189"  [label="DDG: 1"];
"1000121" -> "1000119"  [label="AST: "];
"1000121" -> "1000122"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000121" -> "1000119"  [label="DDG: 1"];
"1000121" -> "1000189"  [label="DDG: 1"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000246"  [label="DDG: content_size"];
"1000102" -> "1000189"  [label="DDG: content_size"];
"1000102" -> "1000209"  [label="DDG: content_size"];
"1000199" -> "1000103"  [label="AST: "];
"1000199" -> "1000203"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000203" -> "1000199"  [label="AST: "];
"1000206" -> "1000199"  [label="CFG: "];
"1000199" -> "1000246"  [label="DDG: download_metrics.download_time_ms"];
"1000194" -> "1000103"  [label="AST: "];
"1000194" -> "1000198"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000198" -> "1000194"  [label="AST: "];
"1000201" -> "1000194"  [label="CFG: "];
"1000194" -> "1000246"  [label="DDG: download_metrics.total_bytes"];
"1000194" -> "1000246"  [label="DDG: total_bytes_"];
"1000180" -> "1000103"  [label="AST: "];
"1000180" -> "1000184"  [label="CFG: "];
"1000181" -> "1000180"  [label="AST: "];
"1000184" -> "1000180"  [label="AST: "];
"1000187" -> "1000180"  [label="CFG: "];
"1000180" -> "1000246"  [label="DDG: download_metrics.error"];
"1000162" -> "1000180"  [label="DDG: error"];
"1000162" -> "1000161"  [label="AST: "];
"1000162" -> "1000163"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000166" -> "1000162"  [label="CFG: "];
"1000172" -> "1000162"  [label="CFG: "];
"1000162" -> "1000246"  [label="DDG: !error"];
"1000175" -> "1000103"  [label="AST: "];
"1000175" -> "1000179"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000179" -> "1000175"  [label="AST: "];
"1000182" -> "1000175"  [label="CFG: "];
"1000175" -> "1000246"  [label="DDG: DownloadMetrics::kUrlFetcher"];
"1000175" -> "1000246"  [label="DDG: download_metrics.downloader"];
"1000170" -> "1000103"  [label="AST: "];
"1000170" -> "1000174"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000174" -> "1000170"  [label="AST: "];
"1000177" -> "1000170"  [label="CFG: "];
"1000170" -> "1000246"  [label="DDG: download_metrics.url"];
"1000170" -> "1000246"  [label="DDG: url()"];
}
