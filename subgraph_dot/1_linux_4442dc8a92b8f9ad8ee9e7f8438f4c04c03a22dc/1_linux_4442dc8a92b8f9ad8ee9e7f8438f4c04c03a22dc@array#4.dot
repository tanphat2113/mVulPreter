digraph "1_linux_4442dc8a92b8f9ad8ee9e7f8438f4c04c03a22dc@array" {
"1000226" [label="(Call,sg_table[i].rd_sg_count = sg_per_table)"];
"1000216" [label="(Call,sg_init_table(sg, sg_per_table))"];
"1000208" [label="(Call,!sg)"];
"1000199" [label="(Call,sg = kzalloc(sg_per_table * sizeof(struct scatterlist),\n\t\t\t\tGFP_KERNEL))"];
"1000201" [label="(Call,kzalloc(sg_per_table * sizeof(struct scatterlist),\n\t\t\t\tGFP_KERNEL))"];
"1000202" [label="(Call,sg_per_table * sizeof(struct scatterlist))"];
"1000191" [label="(Call,sg_per_table = (total_sg_needed > max_sg_per_table) ?\n\t\t\tmax_sg_per_table : total_sg_needed)"];
"1000194" [label="(Call,total_sg_needed > max_sg_per_table)"];
"1000292" [label="(Call,total_sg_needed -= sg_per_table)"];
"1000256" [label="(Call,j < sg_per_table)"];
"1000259" [label="(Call,j++)"];
"1000253" [label="(Call,j = 0)"];
"1000157" [label="(Call,total_sg_needed / max_sg_per_table)"];
"1000149" [label="(Call,total_sg_needed = rd_dev->rd_page_count)"];
"1000127" [label="(Call,rd_dev->rd_page_count <= 0)"];
"1000117" [label="(Call,max_sg_per_table = (RD_MAX_ALLOCATION_SIZE /\n \t\t\t\tsizeof(struct scatterlist)))"];
"1000119" [label="(Call,RD_MAX_ALLOCATION_SIZE /\n \t\t\t\tsizeof(struct scatterlist))"];
"1000163" [label="(Call,kzalloc(sg_tables * sizeof(struct rd_dev_sg_table), GFP_KERNEL))"];
"1000164" [label="(Call,sg_tables * sizeof(struct rd_dev_sg_table))"];
"1000154" [label="(Call,sg_tables = (total_sg_needed / max_sg_per_table) + 1)"];
"1000264" [label="(Call,alloc_pages(GFP_KERNEL, 0))"];
"1000157" [label="(Call,total_sg_needed / max_sg_per_table)"];
"1000227" [label="(Call,sg_table[i].rd_sg_count)"];
"1000133" [label="(Call,pr_err(\"Illegal page count: %u for Ramdisk device\n\",\n\t\t\trd_dev->rd_page_count))"];
"1000193" [label="(Call,(total_sg_needed > max_sg_per_table) ?\n\t\t\tmax_sg_per_table : total_sg_needed)"];
"1000165" [label="(Identifier,sg_tables)"];
"1000209" [label="(Identifier,sg)"];
"1000247" [label="(Call,(page_offset + sg_per_table)\n\t\t\t\t\t\t- 1)"];
"1000103" [label="(Block,)"];
"1000194" [label="(Call,total_sg_needed > max_sg_per_table)"];
"1000208" [label="(Call,!sg)"];
"1000150" [label="(Identifier,total_sg_needed)"];
"1000118" [label="(Identifier,max_sg_per_table)"];
"1000255" [label="(Literal,0)"];
"1000190" [label="(Block,)"];
"1000218" [label="(Identifier,sg_per_table)"];
"1000129" [label="(Identifier,rd_dev)"];
"1000162" [label="(Identifier,sg_table)"];
"1000126" [label="(ControlStructure,if (rd_dev->rd_page_count <= 0))"];
"1000294" [label="(Identifier,sg_per_table)"];
"1000232" [label="(Identifier,sg_per_table)"];
"1000160" [label="(Literal,1)"];
"1000263" [label="(Identifier,pg)"];
"1000217" [label="(Identifier,sg)"];
"1000260" [label="(Identifier,j)"];
"1000204" [label="(Call,sizeof(struct scatterlist))"];
"1000262" [label="(Call,pg = alloc_pages(GFP_KERNEL, 0))"];
"1000161" [label="(Call,sg_table = kzalloc(sg_tables * sizeof(struct rd_dev_sg_table), GFP_KERNEL))"];
"1000127" [label="(Call,rd_dev->rd_page_count <= 0)"];
"1000196" [label="(Identifier,max_sg_per_table)"];
"1000212" [label="(Literal,\"Unable to allocate scatterlist array\"\n\t\t\t\t\" for struct rd_dev\n\")"];
"1000191" [label="(Call,sg_per_table = (total_sg_needed > max_sg_per_table) ?\n\t\t\tmax_sg_per_table : total_sg_needed)"];
"1000295" [label="(Call,pr_debug(\"CORE_RD[%u] - Built Ramdisk Device ID: %u space of\"\n\t\t\" %u pages in %u tables\n\", rd_dev->rd_host->rd_host_id,\n\t\trd_dev->rd_dev_id, rd_dev->rd_page_count,\n\t\trd_dev->sg_table_count))"];
"1000195" [label="(Identifier,total_sg_needed)"];
"1000164" [label="(Call,sg_tables * sizeof(struct rd_dev_sg_table))"];
"1000156" [label="(Call,(total_sg_needed / max_sg_per_table) + 1)"];
"1000203" [label="(Identifier,sg_per_table)"];
"1000192" [label="(Identifier,sg_per_table)"];
"1000264" [label="(Call,alloc_pages(GFP_KERNEL, 0))"];
"1000256" [label="(Call,j < sg_per_table)"];
"1000236" [label="(Identifier,sg_table)"];
"1000158" [label="(Identifier,total_sg_needed)"];
"1000202" [label="(Call,sg_per_table * sizeof(struct scatterlist))"];
"1000155" [label="(Identifier,sg_tables)"];
"1000149" [label="(Call,total_sg_needed = rd_dev->rd_page_count)"];
"1000154" [label="(Call,sg_tables = (total_sg_needed / max_sg_per_table) + 1)"];
"1000258" [label="(Identifier,sg_per_table)"];
"1000201" [label="(Call,kzalloc(sg_per_table * sizeof(struct scatterlist),\n\t\t\t\tGFP_KERNEL))"];
"1000134" [label="(Literal,\"Illegal page count: %u for Ramdisk device\n\")"];
"1000151" [label="(Call,rd_dev->rd_page_count)"];
"1000219" [label="(Call,sg_table[i].sg_table = sg)"];
"1000117" [label="(Call,max_sg_per_table = (RD_MAX_ALLOCATION_SIZE /\n \t\t\t\tsizeof(struct scatterlist)))"];
"1000290" [label="(Identifier,page_offset)"];
"1000252" [label="(ControlStructure,for (j = 0; j < sg_per_table; j++))"];
"1000120" [label="(Identifier,RD_MAX_ALLOCATION_SIZE)"];
"1000248" [label="(Call,page_offset + sg_per_table)"];
"1000189" [label="(Identifier,total_sg_needed)"];
"1000198" [label="(Identifier,total_sg_needed)"];
"1000163" [label="(Call,kzalloc(sg_tables * sizeof(struct rd_dev_sg_table), GFP_KERNEL))"];
"1000159" [label="(Identifier,max_sg_per_table)"];
"1000259" [label="(Call,j++)"];
"1000121" [label="(Call,sizeof(struct scatterlist))"];
"1000119" [label="(Call,RD_MAX_ALLOCATION_SIZE /\n \t\t\t\tsizeof(struct scatterlist))"];
"1000183" [label="(Call,rd_dev->sg_table_count = sg_tables)"];
"1000257" [label="(Identifier,j)"];
"1000128" [label="(Call,rd_dev->rd_page_count)"];
"1000206" [label="(Identifier,GFP_KERNEL)"];
"1000266" [label="(Literal,0)"];
"1000166" [label="(Call,sizeof(struct rd_dev_sg_table))"];
"1000292" [label="(Call,total_sg_needed -= sg_per_table)"];
"1000226" [label="(Call,sg_table[i].rd_sg_count = sg_per_table)"];
"1000216" [label="(Call,sg_init_table(sg, sg_per_table))"];
"1000199" [label="(Call,sg = kzalloc(sg_per_table * sizeof(struct scatterlist),\n\t\t\t\tGFP_KERNEL))"];
"1000289" [label="(Call,page_offset += sg_per_table)"];
"1000144" [label="(Identifier,rd_dev)"];
"1000131" [label="(Literal,0)"];
"1000200" [label="(Identifier,sg)"];
"1000313" [label="(MethodReturn,static int)"];
"1000207" [label="(ControlStructure,if (!sg))"];
"1000293" [label="(Identifier,total_sg_needed)"];
"1000253" [label="(Call,j = 0)"];
"1000197" [label="(Identifier,max_sg_per_table)"];
"1000222" [label="(Identifier,sg_table)"];
"1000168" [label="(Identifier,GFP_KERNEL)"];
"1000254" [label="(Identifier,j)"];
"1000265" [label="(Identifier,GFP_KERNEL)"];
"1000226" -> "1000190"  [label="AST: "];
"1000226" -> "1000232"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000232" -> "1000226"  [label="AST: "];
"1000236" -> "1000226"  [label="CFG: "];
"1000226" -> "1000313"  [label="DDG: sg_table[i].rd_sg_count"];
"1000216" -> "1000226"  [label="DDG: sg_per_table"];
"1000216" -> "1000190"  [label="AST: "];
"1000216" -> "1000218"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000218" -> "1000216"  [label="AST: "];
"1000222" -> "1000216"  [label="CFG: "];
"1000216" -> "1000313"  [label="DDG: sg_init_table(sg, sg_per_table)"];
"1000208" -> "1000216"  [label="DDG: sg"];
"1000202" -> "1000216"  [label="DDG: sg_per_table"];
"1000216" -> "1000219"  [label="DDG: sg"];
"1000216" -> "1000247"  [label="DDG: sg_per_table"];
"1000216" -> "1000248"  [label="DDG: sg_per_table"];
"1000216" -> "1000256"  [label="DDG: sg_per_table"];
"1000208" -> "1000207"  [label="AST: "];
"1000208" -> "1000209"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000212" -> "1000208"  [label="CFG: "];
"1000217" -> "1000208"  [label="CFG: "];
"1000208" -> "1000313"  [label="DDG: sg"];
"1000208" -> "1000313"  [label="DDG: !sg"];
"1000199" -> "1000208"  [label="DDG: sg"];
"1000199" -> "1000190"  [label="AST: "];
"1000199" -> "1000201"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000201" -> "1000199"  [label="AST: "];
"1000209" -> "1000199"  [label="CFG: "];
"1000199" -> "1000313"  [label="DDG: kzalloc(sg_per_table * sizeof(struct scatterlist),\n\t\t\t\tGFP_KERNEL)"];
"1000201" -> "1000199"  [label="DDG: sg_per_table * sizeof(struct scatterlist)"];
"1000201" -> "1000199"  [label="DDG: GFP_KERNEL"];
"1000201" -> "1000206"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000206" -> "1000201"  [label="AST: "];
"1000201" -> "1000313"  [label="DDG: GFP_KERNEL"];
"1000201" -> "1000313"  [label="DDG: sg_per_table * sizeof(struct scatterlist)"];
"1000202" -> "1000201"  [label="DDG: sg_per_table"];
"1000163" -> "1000201"  [label="DDG: GFP_KERNEL"];
"1000264" -> "1000201"  [label="DDG: GFP_KERNEL"];
"1000201" -> "1000264"  [label="DDG: GFP_KERNEL"];
"1000202" -> "1000204"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000206" -> "1000202"  [label="CFG: "];
"1000202" -> "1000313"  [label="DDG: sg_per_table"];
"1000191" -> "1000202"  [label="DDG: sg_per_table"];
"1000191" -> "1000190"  [label="AST: "];
"1000191" -> "1000193"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000193" -> "1000191"  [label="AST: "];
"1000200" -> "1000191"  [label="CFG: "];
"1000191" -> "1000313"  [label="DDG: (total_sg_needed > max_sg_per_table) ?\n\t\t\tmax_sg_per_table : total_sg_needed"];
"1000194" -> "1000191"  [label="DDG: max_sg_per_table"];
"1000194" -> "1000191"  [label="DDG: total_sg_needed"];
"1000194" -> "1000193"  [label="AST: "];
"1000194" -> "1000196"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000196" -> "1000194"  [label="AST: "];
"1000197" -> "1000194"  [label="CFG: "];
"1000198" -> "1000194"  [label="CFG: "];
"1000292" -> "1000194"  [label="DDG: total_sg_needed"];
"1000157" -> "1000194"  [label="DDG: total_sg_needed"];
"1000157" -> "1000194"  [label="DDG: max_sg_per_table"];
"1000194" -> "1000193"  [label="DDG: max_sg_per_table"];
"1000194" -> "1000193"  [label="DDG: total_sg_needed"];
"1000194" -> "1000292"  [label="DDG: total_sg_needed"];
"1000292" -> "1000190"  [label="AST: "];
"1000292" -> "1000294"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000294" -> "1000292"  [label="AST: "];
"1000189" -> "1000292"  [label="CFG: "];
"1000292" -> "1000313"  [label="DDG: sg_per_table"];
"1000292" -> "1000313"  [label="DDG: total_sg_needed"];
"1000256" -> "1000292"  [label="DDG: sg_per_table"];
"1000256" -> "1000252"  [label="AST: "];
"1000256" -> "1000258"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000258" -> "1000256"  [label="AST: "];
"1000263" -> "1000256"  [label="CFG: "];
"1000290" -> "1000256"  [label="CFG: "];
"1000256" -> "1000313"  [label="DDG: sg_per_table"];
"1000256" -> "1000313"  [label="DDG: j"];
"1000256" -> "1000313"  [label="DDG: j < sg_per_table"];
"1000259" -> "1000256"  [label="DDG: j"];
"1000253" -> "1000256"  [label="DDG: j"];
"1000256" -> "1000259"  [label="DDG: j"];
"1000256" -> "1000289"  [label="DDG: sg_per_table"];
"1000259" -> "1000252"  [label="AST: "];
"1000259" -> "1000260"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000257" -> "1000259"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000253" -> "1000255"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000255" -> "1000253"  [label="AST: "];
"1000257" -> "1000253"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000160" -> "1000157"  [label="CFG: "];
"1000157" -> "1000313"  [label="DDG: max_sg_per_table"];
"1000157" -> "1000313"  [label="DDG: total_sg_needed"];
"1000157" -> "1000154"  [label="DDG: total_sg_needed"];
"1000157" -> "1000154"  [label="DDG: max_sg_per_table"];
"1000157" -> "1000156"  [label="DDG: total_sg_needed"];
"1000157" -> "1000156"  [label="DDG: max_sg_per_table"];
"1000149" -> "1000157"  [label="DDG: total_sg_needed"];
"1000117" -> "1000157"  [label="DDG: max_sg_per_table"];
"1000149" -> "1000103"  [label="AST: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000155" -> "1000149"  [label="CFG: "];
"1000149" -> "1000313"  [label="DDG: rd_dev->rd_page_count"];
"1000127" -> "1000149"  [label="DDG: rd_dev->rd_page_count"];
"1000127" -> "1000126"  [label="AST: "];
"1000127" -> "1000131"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000131" -> "1000127"  [label="AST: "];
"1000134" -> "1000127"  [label="CFG: "];
"1000144" -> "1000127"  [label="CFG: "];
"1000127" -> "1000313"  [label="DDG: rd_dev->rd_page_count <= 0"];
"1000127" -> "1000313"  [label="DDG: rd_dev->rd_page_count"];
"1000127" -> "1000133"  [label="DDG: rd_dev->rd_page_count"];
"1000127" -> "1000295"  [label="DDG: rd_dev->rd_page_count"];
"1000117" -> "1000103"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000129" -> "1000117"  [label="CFG: "];
"1000117" -> "1000313"  [label="DDG: max_sg_per_table"];
"1000117" -> "1000313"  [label="DDG: RD_MAX_ALLOCATION_SIZE /\n \t\t\t\tsizeof(struct scatterlist)"];
"1000119" -> "1000117"  [label="DDG: RD_MAX_ALLOCATION_SIZE"];
"1000119" -> "1000121"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000119" -> "1000313"  [label="DDG: RD_MAX_ALLOCATION_SIZE"];
"1000163" -> "1000161"  [label="AST: "];
"1000163" -> "1000168"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000168" -> "1000163"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000163" -> "1000313"  [label="DDG: GFP_KERNEL"];
"1000163" -> "1000313"  [label="DDG: sg_tables * sizeof(struct rd_dev_sg_table)"];
"1000163" -> "1000161"  [label="DDG: sg_tables * sizeof(struct rd_dev_sg_table)"];
"1000163" -> "1000161"  [label="DDG: GFP_KERNEL"];
"1000164" -> "1000163"  [label="DDG: sg_tables"];
"1000164" -> "1000166"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000166" -> "1000164"  [label="AST: "];
"1000168" -> "1000164"  [label="CFG: "];
"1000164" -> "1000313"  [label="DDG: sg_tables"];
"1000154" -> "1000164"  [label="DDG: sg_tables"];
"1000164" -> "1000183"  [label="DDG: sg_tables"];
"1000154" -> "1000103"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000156" -> "1000154"  [label="AST: "];
"1000162" -> "1000154"  [label="CFG: "];
"1000154" -> "1000313"  [label="DDG: (total_sg_needed / max_sg_per_table) + 1"];
"1000264" -> "1000262"  [label="AST: "];
"1000264" -> "1000266"  [label="CFG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000266" -> "1000264"  [label="AST: "];
"1000262" -> "1000264"  [label="CFG: "];
"1000264" -> "1000313"  [label="DDG: GFP_KERNEL"];
"1000264" -> "1000262"  [label="DDG: GFP_KERNEL"];
"1000264" -> "1000262"  [label="DDG: 0"];
}
