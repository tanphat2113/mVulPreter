digraph "1_linux_4442dc8a92b8f9ad8ee9e7f8438f4c04c03a22dc@pointer" {
"1000178" [label="(Call,rd_dev->sg_table_array = sg_table)"];
"1000170" [label="(Call,!sg_table)"];
"1000161" [label="(Call,sg_table = kzalloc(sg_tables * sizeof(struct rd_dev_sg_table), GFP_KERNEL))"];
"1000163" [label="(Call,kzalloc(sg_tables * sizeof(struct rd_dev_sg_table), GFP_KERNEL))"];
"1000164" [label="(Call,sg_tables * sizeof(struct rd_dev_sg_table))"];
"1000154" [label="(Call,sg_tables = (total_sg_needed / max_sg_per_table) + 1)"];
"1000157" [label="(Call,total_sg_needed / max_sg_per_table)"];
"1000149" [label="(Call,total_sg_needed = rd_dev->rd_page_count)"];
"1000127" [label="(Call,rd_dev->rd_page_count <= 0)"];
"1000117" [label="(Call,max_sg_per_table = (RD_MAX_ALLOCATION_SIZE /\n \t\t\t\tsizeof(struct scatterlist)))"];
"1000119" [label="(Call,RD_MAX_ALLOCATION_SIZE /\n \t\t\t\tsizeof(struct scatterlist))"];
"1000180" [label="(Identifier,rd_dev)"];
"1000157" [label="(Call,total_sg_needed / max_sg_per_table)"];
"1000201" [label="(Call,kzalloc(sg_per_table * sizeof(struct scatterlist),\n\t\t\t\tGFP_KERNEL))"];
"1000169" [label="(ControlStructure,if (!sg_table))"];
"1000134" [label="(Literal,\"Illegal page count: %u for Ramdisk device\n\")"];
"1000166" [label="(Call,sizeof(struct rd_dev_sg_table))"];
"1000160" [label="(Literal,1)"];
"1000179" [label="(Call,rd_dev->sg_table_array)"];
"1000151" [label="(Call,rd_dev->rd_page_count)"];
"1000117" [label="(Call,max_sg_per_table = (RD_MAX_ALLOCATION_SIZE /\n \t\t\t\tsizeof(struct scatterlist)))"];
"1000133" [label="(Call,pr_err(\"Illegal page count: %u for Ramdisk device\n\",\n\t\t\trd_dev->rd_page_count))"];
"1000165" [label="(Identifier,sg_tables)"];
"1000174" [label="(Literal,\"Unable to allocate memory for Ramdisk\"\n\t\t\t\" scatterlist tables\n\")"];
"1000178" [label="(Call,rd_dev->sg_table_array = sg_table)"];
"1000161" [label="(Call,sg_table = kzalloc(sg_tables * sizeof(struct rd_dev_sg_table), GFP_KERNEL))"];
"1000120" [label="(Identifier,RD_MAX_ALLOCATION_SIZE)"];
"1000127" [label="(Call,rd_dev->rd_page_count <= 0)"];
"1000144" [label="(Identifier,rd_dev)"];
"1000295" [label="(Call,pr_debug(\"CORE_RD[%u] - Built Ramdisk Device ID: %u space of\"\n\t\t\" %u pages in %u tables\n\", rd_dev->rd_host->rd_host_id,\n\t\trd_dev->rd_dev_id, rd_dev->rd_page_count,\n\t\trd_dev->sg_table_count))"];
"1000131" [label="(Literal,0)"];
"1000313" [label="(MethodReturn,static int)"];
"1000164" [label="(Call,sg_tables * sizeof(struct rd_dev_sg_table))"];
"1000163" [label="(Call,kzalloc(sg_tables * sizeof(struct rd_dev_sg_table), GFP_KERNEL))"];
"1000103" [label="(Block,)"];
"1000159" [label="(Identifier,max_sg_per_table)"];
"1000156" [label="(Call,(total_sg_needed / max_sg_per_table) + 1)"];
"1000185" [label="(Identifier,rd_dev)"];
"1000194" [label="(Call,total_sg_needed > max_sg_per_table)"];
"1000170" [label="(Call,!sg_table)"];
"1000150" [label="(Identifier,total_sg_needed)"];
"1000118" [label="(Identifier,max_sg_per_table)"];
"1000158" [label="(Identifier,total_sg_needed)"];
"1000182" [label="(Identifier,sg_table)"];
"1000121" [label="(Call,sizeof(struct scatterlist))"];
"1000171" [label="(Identifier,sg_table)"];
"1000168" [label="(Identifier,GFP_KERNEL)"];
"1000119" [label="(Call,RD_MAX_ALLOCATION_SIZE /\n \t\t\t\tsizeof(struct scatterlist))"];
"1000183" [label="(Call,rd_dev->sg_table_count = sg_tables)"];
"1000155" [label="(Identifier,sg_tables)"];
"1000162" [label="(Identifier,sg_table)"];
"1000149" [label="(Call,total_sg_needed = rd_dev->rd_page_count)"];
"1000129" [label="(Identifier,rd_dev)"];
"1000126" [label="(ControlStructure,if (rd_dev->rd_page_count <= 0))"];
"1000154" [label="(Call,sg_tables = (total_sg_needed / max_sg_per_table) + 1)"];
"1000128" [label="(Call,rd_dev->rd_page_count)"];
"1000178" -> "1000103"  [label="AST: "];
"1000178" -> "1000182"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000182" -> "1000178"  [label="AST: "];
"1000185" -> "1000178"  [label="CFG: "];
"1000178" -> "1000313"  [label="DDG: rd_dev->sg_table_array"];
"1000178" -> "1000313"  [label="DDG: sg_table"];
"1000170" -> "1000178"  [label="DDG: sg_table"];
"1000170" -> "1000169"  [label="AST: "];
"1000170" -> "1000171"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000174" -> "1000170"  [label="CFG: "];
"1000180" -> "1000170"  [label="CFG: "];
"1000170" -> "1000313"  [label="DDG: sg_table"];
"1000170" -> "1000313"  [label="DDG: !sg_table"];
"1000161" -> "1000170"  [label="DDG: sg_table"];
"1000161" -> "1000103"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000171" -> "1000161"  [label="CFG: "];
"1000161" -> "1000313"  [label="DDG: kzalloc(sg_tables * sizeof(struct rd_dev_sg_table), GFP_KERNEL)"];
"1000163" -> "1000161"  [label="DDG: sg_tables * sizeof(struct rd_dev_sg_table)"];
"1000163" -> "1000161"  [label="DDG: GFP_KERNEL"];
"1000163" -> "1000168"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000168" -> "1000163"  [label="AST: "];
"1000163" -> "1000313"  [label="DDG: GFP_KERNEL"];
"1000163" -> "1000313"  [label="DDG: sg_tables * sizeof(struct rd_dev_sg_table)"];
"1000164" -> "1000163"  [label="DDG: sg_tables"];
"1000163" -> "1000201"  [label="DDG: GFP_KERNEL"];
"1000164" -> "1000166"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000166" -> "1000164"  [label="AST: "];
"1000168" -> "1000164"  [label="CFG: "];
"1000164" -> "1000313"  [label="DDG: sg_tables"];
"1000154" -> "1000164"  [label="DDG: sg_tables"];
"1000164" -> "1000183"  [label="DDG: sg_tables"];
"1000154" -> "1000103"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000156" -> "1000154"  [label="AST: "];
"1000162" -> "1000154"  [label="CFG: "];
"1000154" -> "1000313"  [label="DDG: (total_sg_needed / max_sg_per_table) + 1"];
"1000157" -> "1000154"  [label="DDG: total_sg_needed"];
"1000157" -> "1000154"  [label="DDG: max_sg_per_table"];
"1000157" -> "1000156"  [label="AST: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000160" -> "1000157"  [label="CFG: "];
"1000157" -> "1000313"  [label="DDG: max_sg_per_table"];
"1000157" -> "1000313"  [label="DDG: total_sg_needed"];
"1000157" -> "1000156"  [label="DDG: total_sg_needed"];
"1000157" -> "1000156"  [label="DDG: max_sg_per_table"];
"1000149" -> "1000157"  [label="DDG: total_sg_needed"];
"1000117" -> "1000157"  [label="DDG: max_sg_per_table"];
"1000157" -> "1000194"  [label="DDG: total_sg_needed"];
"1000157" -> "1000194"  [label="DDG: max_sg_per_table"];
"1000149" -> "1000103"  [label="AST: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000155" -> "1000149"  [label="CFG: "];
"1000149" -> "1000313"  [label="DDG: rd_dev->rd_page_count"];
"1000127" -> "1000149"  [label="DDG: rd_dev->rd_page_count"];
"1000127" -> "1000126"  [label="AST: "];
"1000127" -> "1000131"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000131" -> "1000127"  [label="AST: "];
"1000134" -> "1000127"  [label="CFG: "];
"1000144" -> "1000127"  [label="CFG: "];
"1000127" -> "1000313"  [label="DDG: rd_dev->rd_page_count <= 0"];
"1000127" -> "1000313"  [label="DDG: rd_dev->rd_page_count"];
"1000127" -> "1000133"  [label="DDG: rd_dev->rd_page_count"];
"1000127" -> "1000295"  [label="DDG: rd_dev->rd_page_count"];
"1000117" -> "1000103"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000129" -> "1000117"  [label="CFG: "];
"1000117" -> "1000313"  [label="DDG: max_sg_per_table"];
"1000117" -> "1000313"  [label="DDG: RD_MAX_ALLOCATION_SIZE /\n \t\t\t\tsizeof(struct scatterlist)"];
"1000119" -> "1000117"  [label="DDG: RD_MAX_ALLOCATION_SIZE"];
"1000119" -> "1000121"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000119" -> "1000313"  [label="DDG: RD_MAX_ALLOCATION_SIZE"];
}
