digraph "0_linux_197c949e7798fbf28cfadc69d9ca0c2abbf93191@API" {
"1000164" [label="(Call,skb->len - sizeof(struct udphdr))"];
"1000162" [label="(Call,ulen = skb->len - sizeof(struct udphdr))"];
"1000174" [label="(Call,copied > ulen)"];
"1000177" [label="(Call,copied = ulen)"];
"1000192" [label="(Call,copied < ulen)"];
"1000191" [label="(Call,copied < ulen || UDP_SKB_CB(skb)->partial_cov)"];
"1000209" [label="(Call,skb_copy_datagram_msg(skb, sizeof(struct udphdr),\n \t\t\t\t\t    msg, copied))"];
"1000207" [label="(Call,err = skb_copy_datagram_msg(skb, sizeof(struct udphdr),\n \t\t\t\t\t    msg, copied))"];
"1000231" [label="(Call,unlikely(err))"];
"1000329" [label="(Return,return err;)"];
"1000234" [label="(Call,trace_kfree_skb(skb, udp_recvmsg))"];
"1000325" [label="(Call,skb_free_datagram_locked(sk, skb))"];
"1000260" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000277" [label="(Call,udp_hdr(skb))"];
"1000287" [label="(Call,ip_hdr(skb))"];
"1000309" [label="(Call,ip_cmsg_recv_offset(msg, skb, sizeof(struct udphdr)))"];
"1000314" [label="(Call,err = copied)"];
"1000321" [label="(Call,err = ulen)"];
"1000182" [label="(Call,copied < ulen)"];
"1000175" [label="(Identifier,copied)"];
"1000195" [label="(Call,UDP_SKB_CB(skb)->partial_cov)"];
"1000363" [label="(MethodReturn,int)"];
"1000105" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000314" [label="(Call,err = copied)"];
"1000330" [label="(Identifier,err)"];
"1000235" [label="(Identifier,skb)"];
"1000177" [label="(Call,copied = ulen)"];
"1000317" [label="(ControlStructure,if (flags & MSG_TRUNC))"];
"1000192" [label="(Call,copied < ulen)"];
"1000239" [label="(Identifier,peeked)"];
"1000276" [label="(Call,udp_hdr(skb)->source)"];
"1000104" [label="(MethodParameterIn,struct sock *sk)"];
"1000193" [label="(Identifier,copied)"];
"1000236" [label="(Identifier,udp_recvmsg)"];
"1000328" [label="(JumpTarget,out:)"];
"1000277" [label="(Call,udp_hdr(skb))"];
"1000181" [label="(ControlStructure,if (copied < ulen))"];
"1000182" [label="(Call,copied < ulen)"];
"1000194" [label="(Identifier,ulen)"];
"1000213" [label="(Identifier,msg)"];
"1000210" [label="(Identifier,skb)"];
"1000162" [label="(Call,ulen = skb->len - sizeof(struct udphdr))"];
"1000183" [label="(Identifier,copied)"];
"1000163" [label="(Identifier,ulen)"];
"1000265" [label="(Identifier,sin)"];
"1000261" [label="(Identifier,msg)"];
"1000325" [label="(Call,skb_free_datagram_locked(sk, skb))"];
"1000312" [label="(Call,sizeof(struct udphdr))"];
"1000176" [label="(Identifier,ulen)"];
"1000233" [label="(Block,)"];
"1000219" [label="(Call,skb_copy_and_csum_datagram_msg(skb, sizeof(struct udphdr),\n\t\t\t\t\t\t     msg))"];
"1000232" [label="(Identifier,err)"];
"1000209" [label="(Call,skb_copy_datagram_msg(skb, sizeof(struct udphdr),\n \t\t\t\t\t    msg, copied))"];
"1000260" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000305" [label="(ControlStructure,if (inet->cmsg_flags))"];
"1000207" [label="(Call,err = skb_copy_datagram_msg(skb, sizeof(struct udphdr),\n \t\t\t\t\t    msg, copied))"];
"1000324" [label="(JumpTarget,out_free:)"];
"1000263" [label="(Identifier,skb)"];
"1000214" [label="(Identifier,copied)"];
"1000204" [label="(ControlStructure,if (skb_csum_unnecessary(skb)))"];
"1000234" [label="(Call,trace_kfree_skb(skb, udp_recvmsg))"];
"1000191" [label="(Call,copied < ulen || UDP_SKB_CB(skb)->partial_cov)"];
"1000171" [label="(Identifier,copied)"];
"1000256" [label="(Call,sock_net(sk))"];
"1000279" [label="(FieldIdentifier,source)"];
"1000262" [label="(Identifier,sk)"];
"1000327" [label="(Identifier,skb)"];
"1000323" [label="(Identifier,ulen)"];
"1000315" [label="(Identifier,err)"];
"1000110" [label="(Block,)"];
"1000173" [label="(ControlStructure,if (copied > ulen))"];
"1000170" [label="(Call,copied = len)"];
"1000206" [label="(Identifier,skb)"];
"1000164" [label="(Call,skb->len - sizeof(struct udphdr))"];
"1000254" [label="(Identifier,peeked)"];
"1000311" [label="(Identifier,skb)"];
"1000310" [label="(Identifier,msg)"];
"1000165" [label="(Call,skb->len)"];
"1000309" [label="(Call,ip_cmsg_recv_offset(msg, skb, sizeof(struct udphdr)))"];
"1000202" [label="(Identifier,skb)"];
"1000197" [label="(Identifier,skb)"];
"1000211" [label="(Call,sizeof(struct udphdr))"];
"1000287" [label="(Call,ip_hdr(skb))"];
"1000187" [label="(Identifier,msg)"];
"1000326" [label="(Identifier,sk)"];
"1000225" [label="(Call,err == -EINVAL)"];
"1000231" [label="(Call,unlikely(err))"];
"1000329" [label="(Return,return err;)"];
"1000286" [label="(Call,ip_hdr(skb)->saddr)"];
"1000289" [label="(FieldIdentifier,saddr)"];
"1000190" [label="(ControlStructure,if (copied < ulen || UDP_SKB_CB(skb)->partial_cov))"];
"1000144" [label="(Call,__skb_recv_datagram(sk, flags | (noblock ? MSG_DONTWAIT : 0),\n\t\t\t\t  &peeked, &off, &err))"];
"1000321" [label="(Call,err = ulen)"];
"1000168" [label="(Call,sizeof(struct udphdr))"];
"1000316" [label="(Identifier,copied)"];
"1000319" [label="(Identifier,flags)"];
"1000174" [label="(Call,copied > ulen)"];
"1000230" [label="(ControlStructure,if (unlikely(err)))"];
"1000184" [label="(Identifier,ulen)"];
"1000178" [label="(Identifier,copied)"];
"1000247" [label="(Call,sock_net(sk))"];
"1000288" [label="(Identifier,skb)"];
"1000322" [label="(Identifier,err)"];
"1000278" [label="(Identifier,skb)"];
"1000208" [label="(Identifier,err)"];
"1000179" [label="(Identifier,ulen)"];
"1000205" [label="(Call,skb_csum_unnecessary(skb))"];
"1000164" -> "1000162"  [label="AST: "];
"1000164" -> "1000168"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000168" -> "1000164"  [label="AST: "];
"1000162" -> "1000164"  [label="CFG: "];
"1000164" -> "1000363"  [label="DDG: skb->len"];
"1000164" -> "1000162"  [label="DDG: skb->len"];
"1000162" -> "1000110"  [label="AST: "];
"1000163" -> "1000162"  [label="AST: "];
"1000171" -> "1000162"  [label="CFG: "];
"1000162" -> "1000363"  [label="DDG: skb->len - sizeof(struct udphdr)"];
"1000162" -> "1000174"  [label="DDG: ulen"];
"1000174" -> "1000173"  [label="AST: "];
"1000174" -> "1000176"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000176" -> "1000174"  [label="AST: "];
"1000178" -> "1000174"  [label="CFG: "];
"1000183" -> "1000174"  [label="CFG: "];
"1000174" -> "1000363"  [label="DDG: copied > ulen"];
"1000170" -> "1000174"  [label="DDG: copied"];
"1000174" -> "1000177"  [label="DDG: ulen"];
"1000174" -> "1000182"  [label="DDG: copied"];
"1000174" -> "1000182"  [label="DDG: ulen"];
"1000174" -> "1000192"  [label="DDG: ulen"];
"1000177" -> "1000173"  [label="AST: "];
"1000177" -> "1000179"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000179" -> "1000177"  [label="AST: "];
"1000193" -> "1000177"  [label="CFG: "];
"1000177" -> "1000192"  [label="DDG: copied"];
"1000192" -> "1000191"  [label="AST: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000194" -> "1000192"  [label="AST: "];
"1000197" -> "1000192"  [label="CFG: "];
"1000191" -> "1000192"  [label="CFG: "];
"1000192" -> "1000363"  [label="DDG: ulen"];
"1000192" -> "1000363"  [label="DDG: copied"];
"1000192" -> "1000191"  [label="DDG: copied"];
"1000192" -> "1000191"  [label="DDG: ulen"];
"1000182" -> "1000192"  [label="DDG: copied"];
"1000182" -> "1000192"  [label="DDG: ulen"];
"1000192" -> "1000209"  [label="DDG: copied"];
"1000192" -> "1000314"  [label="DDG: copied"];
"1000192" -> "1000321"  [label="DDG: ulen"];
"1000191" -> "1000190"  [label="AST: "];
"1000191" -> "1000195"  [label="CFG: "];
"1000195" -> "1000191"  [label="AST: "];
"1000202" -> "1000191"  [label="CFG: "];
"1000206" -> "1000191"  [label="CFG: "];
"1000191" -> "1000363"  [label="DDG: UDP_SKB_CB(skb)->partial_cov"];
"1000191" -> "1000363"  [label="DDG: copied < ulen || UDP_SKB_CB(skb)->partial_cov"];
"1000191" -> "1000363"  [label="DDG: copied < ulen"];
"1000209" -> "1000207"  [label="AST: "];
"1000209" -> "1000214"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000211" -> "1000209"  [label="AST: "];
"1000213" -> "1000209"  [label="AST: "];
"1000214" -> "1000209"  [label="AST: "];
"1000207" -> "1000209"  [label="CFG: "];
"1000209" -> "1000363"  [label="DDG: copied"];
"1000209" -> "1000363"  [label="DDG: msg"];
"1000209" -> "1000207"  [label="DDG: skb"];
"1000209" -> "1000207"  [label="DDG: msg"];
"1000209" -> "1000207"  [label="DDG: copied"];
"1000205" -> "1000209"  [label="DDG: skb"];
"1000219" -> "1000209"  [label="DDG: msg"];
"1000105" -> "1000209"  [label="DDG: msg"];
"1000209" -> "1000234"  [label="DDG: skb"];
"1000209" -> "1000260"  [label="DDG: msg"];
"1000209" -> "1000260"  [label="DDG: skb"];
"1000209" -> "1000314"  [label="DDG: copied"];
"1000207" -> "1000204"  [label="AST: "];
"1000208" -> "1000207"  [label="AST: "];
"1000232" -> "1000207"  [label="CFG: "];
"1000207" -> "1000363"  [label="DDG: skb_copy_datagram_msg(skb, sizeof(struct udphdr),\n \t\t\t\t\t    msg, copied)"];
"1000207" -> "1000231"  [label="DDG: err"];
"1000231" -> "1000230"  [label="AST: "];
"1000231" -> "1000232"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000235" -> "1000231"  [label="CFG: "];
"1000254" -> "1000231"  [label="CFG: "];
"1000231" -> "1000363"  [label="DDG: unlikely(err)"];
"1000231" -> "1000363"  [label="DDG: err"];
"1000225" -> "1000231"  [label="DDG: err"];
"1000231" -> "1000329"  [label="DDG: err"];
"1000329" -> "1000110"  [label="AST: "];
"1000329" -> "1000330"  [label="CFG: "];
"1000330" -> "1000329"  [label="AST: "];
"1000363" -> "1000329"  [label="CFG: "];
"1000329" -> "1000363"  [label="DDG: <RET>"];
"1000330" -> "1000329"  [label="DDG: err"];
"1000314" -> "1000329"  [label="DDG: err"];
"1000225" -> "1000329"  [label="DDG: err"];
"1000321" -> "1000329"  [label="DDG: err"];
"1000234" -> "1000233"  [label="AST: "];
"1000234" -> "1000236"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000236" -> "1000234"  [label="AST: "];
"1000239" -> "1000234"  [label="CFG: "];
"1000234" -> "1000363"  [label="DDG: udp_recvmsg"];
"1000234" -> "1000363"  [label="DDG: trace_kfree_skb(skb, udp_recvmsg)"];
"1000219" -> "1000234"  [label="DDG: skb"];
"1000234" -> "1000325"  [label="DDG: skb"];
"1000325" -> "1000110"  [label="AST: "];
"1000325" -> "1000327"  [label="CFG: "];
"1000326" -> "1000325"  [label="AST: "];
"1000327" -> "1000325"  [label="AST: "];
"1000328" -> "1000325"  [label="CFG: "];
"1000325" -> "1000363"  [label="DDG: sk"];
"1000325" -> "1000363"  [label="DDG: skb_free_datagram_locked(sk, skb)"];
"1000325" -> "1000363"  [label="DDG: skb"];
"1000247" -> "1000325"  [label="DDG: sk"];
"1000260" -> "1000325"  [label="DDG: sk"];
"1000260" -> "1000325"  [label="DDG: skb"];
"1000144" -> "1000325"  [label="DDG: sk"];
"1000104" -> "1000325"  [label="DDG: sk"];
"1000309" -> "1000325"  [label="DDG: skb"];
"1000287" -> "1000325"  [label="DDG: skb"];
"1000260" -> "1000110"  [label="AST: "];
"1000260" -> "1000263"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000262" -> "1000260"  [label="AST: "];
"1000263" -> "1000260"  [label="AST: "];
"1000265" -> "1000260"  [label="CFG: "];
"1000260" -> "1000363"  [label="DDG: sock_recv_ts_and_drops(msg, sk, skb)"];
"1000260" -> "1000363"  [label="DDG: msg"];
"1000219" -> "1000260"  [label="DDG: msg"];
"1000219" -> "1000260"  [label="DDG: skb"];
"1000105" -> "1000260"  [label="DDG: msg"];
"1000144" -> "1000260"  [label="DDG: sk"];
"1000256" -> "1000260"  [label="DDG: sk"];
"1000104" -> "1000260"  [label="DDG: sk"];
"1000260" -> "1000277"  [label="DDG: skb"];
"1000260" -> "1000309"  [label="DDG: msg"];
"1000260" -> "1000309"  [label="DDG: skb"];
"1000277" -> "1000276"  [label="AST: "];
"1000277" -> "1000278"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000277"  [label="CFG: "];
"1000277" -> "1000287"  [label="DDG: skb"];
"1000287" -> "1000286"  [label="AST: "];
"1000287" -> "1000288"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000287"  [label="CFG: "];
"1000287" -> "1000309"  [label="DDG: skb"];
"1000309" -> "1000305"  [label="AST: "];
"1000309" -> "1000312"  [label="CFG: "];
"1000310" -> "1000309"  [label="AST: "];
"1000311" -> "1000309"  [label="AST: "];
"1000312" -> "1000309"  [label="AST: "];
"1000315" -> "1000309"  [label="CFG: "];
"1000309" -> "1000363"  [label="DDG: msg"];
"1000309" -> "1000363"  [label="DDG: ip_cmsg_recv_offset(msg, skb, sizeof(struct udphdr))"];
"1000105" -> "1000309"  [label="DDG: msg"];
"1000314" -> "1000110"  [label="AST: "];
"1000314" -> "1000316"  [label="CFG: "];
"1000315" -> "1000314"  [label="AST: "];
"1000316" -> "1000314"  [label="AST: "];
"1000319" -> "1000314"  [label="CFG: "];
"1000314" -> "1000363"  [label="DDG: err"];
"1000314" -> "1000363"  [label="DDG: copied"];
"1000321" -> "1000317"  [label="AST: "];
"1000321" -> "1000323"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000323" -> "1000321"  [label="AST: "];
"1000324" -> "1000321"  [label="CFG: "];
"1000321" -> "1000363"  [label="DDG: err"];
"1000321" -> "1000363"  [label="DDG: ulen"];
"1000182" -> "1000181"  [label="AST: "];
"1000182" -> "1000184"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000184" -> "1000182"  [label="AST: "];
"1000187" -> "1000182"  [label="CFG: "];
"1000193" -> "1000182"  [label="CFG: "];
}
