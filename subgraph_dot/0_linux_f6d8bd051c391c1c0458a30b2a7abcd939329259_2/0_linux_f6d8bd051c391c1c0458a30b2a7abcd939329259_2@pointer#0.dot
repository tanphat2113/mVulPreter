digraph "0_linux_f6d8bd051c391c1c0458a30b2a7abcd939329259_2@pointer" {
"1000147" [label="(Call,daddr = inet_opt->opt.faddr)"];
"1000157" [label="(Call,ip_route_output_ports(sock_net(sk), sk, daddr, inet->inet_saddr,\n \t\t\t\t   inet->inet_dport, inet->inet_sport,\n \t\t\t\t   sk->sk_protocol, RT_CONN_FLAGS(sk),\n\t\t\t\t   sk->sk_bound_dev_if))"];
"1000155" [label="(Call,rt = ip_route_output_ports(sock_net(sk), sk, daddr, inet->inet_saddr,\n \t\t\t\t   inet->inet_dport, inet->inet_sport,\n \t\t\t\t   sk->sk_protocol, RT_CONN_FLAGS(sk),\n\t\t\t\t   sk->sk_bound_dev_if))"];
"1000181" [label="(Call,IS_ERR(rt))"];
"1000180" [label="(Call,!IS_ERR(rt))"];
"1000197" [label="(Call,PTR_ERR(rt))"];
"1000195" [label="(Call,err = PTR_ERR(rt))"];
"1000230" [label="(Call,-err)"];
"1000226" [label="(Call,sk->sk_err_soft = -err)"];
"1000232" [label="(Return,return err;)"];
"1000187" [label="(Call,sk_setup_caps(sk, &rt->dst))"];
"1000223" [label="(Call,inet_sk_reselect_saddr(sk))"];
"1000220" [label="(Call,(err = inet_sk_reselect_saddr(sk)) != 0)"];
"1000214" [label="(Call,(sk->sk_userlocks & SOCK_BINDADDR_LOCK) ||\n\t\t    (err = inet_sk_reselect_saddr(sk)) != 0)"];
"1000208" [label="(Call,sk->sk_state != TCP_SYN_SENT ||\n\t\t    (sk->sk_userlocks & SOCK_BINDADDR_LOCK) ||\n\t\t    (err = inet_sk_reselect_saddr(sk)) != 0)"];
"1000205" [label="(Call,!sysctl_ip_dynaddr ||\n\t\t    sk->sk_state != TCP_SYN_SENT ||\n\t\t    (sk->sk_userlocks & SOCK_BINDADDR_LOCK) ||\n\t\t    (err = inet_sk_reselect_saddr(sk)) != 0)"];
"1000221" [label="(Call,err = inet_sk_reselect_saddr(sk))"];
"1000185" [label="(Identifier,err)"];
"1000160" [label="(Identifier,sk)"];
"1000157" [label="(Call,ip_route_output_ports(sock_net(sk), sk, daddr, inet->inet_saddr,\n \t\t\t\t   inet->inet_dport, inet->inet_sport,\n \t\t\t\t   sk->sk_protocol, RT_CONN_FLAGS(sk),\n\t\t\t\t   sk->sk_bound_dev_if))"];
"1000224" [label="(Identifier,sk)"];
"1000198" [label="(Identifier,rt)"];
"1000197" [label="(Call,PTR_ERR(rt))"];
"1000158" [label="(Call,sock_net(sk))"];
"1000156" [label="(Identifier,rt)"];
"1000225" [label="(Literal,0)"];
"1000187" [label="(Call,sk_setup_caps(sk, &rt->dst))"];
"1000161" [label="(Identifier,daddr)"];
"1000215" [label="(Call,sk->sk_userlocks & SOCK_BINDADDR_LOCK)"];
"1000201" [label="(Identifier,sk)"];
"1000162" [label="(Call,inet->inet_saddr)"];
"1000155" [label="(Call,rt = ip_route_output_ports(sock_net(sk), sk, daddr, inet->inet_saddr,\n \t\t\t\t   inet->inet_dport, inet->inet_sport,\n \t\t\t\t   sk->sk_protocol, RT_CONN_FLAGS(sk),\n\t\t\t\t   sk->sk_bound_dev_if))"];
"1000176" [label="(Call,sk->sk_bound_dev_if)"];
"1000194" [label="(Block,)"];
"1000232" [label="(Return,return err;)"];
"1000204" [label="(ControlStructure,if (!sysctl_ip_dynaddr ||\n\t\t    sk->sk_state != TCP_SYN_SENT ||\n\t\t    (sk->sk_userlocks & SOCK_BINDADDR_LOCK) ||\n\t\t    (err = inet_sk_reselect_saddr(sk)) != 0))"];
"1000179" [label="(ControlStructure,if (!IS_ERR(rt)))"];
"1000189" [label="(Call,&rt->dst)"];
"1000214" [label="(Call,(sk->sk_userlocks & SOCK_BINDADDR_LOCK) ||\n\t\t    (err = inet_sk_reselect_saddr(sk)) != 0)"];
"1000148" [label="(Identifier,daddr)"];
"1000209" [label="(Call,sk->sk_state != TCP_SYN_SENT)"];
"1000165" [label="(Call,inet->inet_dport)"];
"1000168" [label="(Call,inet->inet_sport)"];
"1000188" [label="(Identifier,sk)"];
"1000181" [label="(Call,IS_ERR(rt))"];
"1000154" [label="(Call,rcu_read_unlock())"];
"1000205" [label="(Call,!sysctl_ip_dynaddr ||\n\t\t    sk->sk_state != TCP_SYN_SENT ||\n\t\t    (sk->sk_userlocks & SOCK_BINDADDR_LOCK) ||\n\t\t    (err = inet_sk_reselect_saddr(sk)) != 0)"];
"1000134" [label="(Call,daddr = inet->inet_daddr)"];
"1000196" [label="(Identifier,err)"];
"1000206" [label="(Call,!sysctl_ip_dynaddr)"];
"1000174" [label="(Call,RT_CONN_FLAGS(sk))"];
"1000149" [label="(Call,inet_opt->opt.faddr)"];
"1000230" [label="(Call,-err)"];
"1000184" [label="(Call,err = 0)"];
"1000182" [label="(Identifier,rt)"];
"1000195" [label="(Call,err = PTR_ERR(rt))"];
"1000222" [label="(Identifier,err)"];
"1000233" [label="(Identifier,err)"];
"1000208" [label="(Call,sk->sk_state != TCP_SYN_SENT ||\n\t\t    (sk->sk_userlocks & SOCK_BINDADDR_LOCK) ||\n\t\t    (err = inet_sk_reselect_saddr(sk)) != 0)"];
"1000220" [label="(Call,(err = inet_sk_reselect_saddr(sk)) != 0)"];
"1000227" [label="(Call,sk->sk_err_soft)"];
"1000147" [label="(Call,daddr = inet_opt->opt.faddr)"];
"1000180" [label="(Call,!IS_ERR(rt))"];
"1000183" [label="(Block,)"];
"1000223" [label="(Call,inet_sk_reselect_saddr(sk))"];
"1000105" [label="(MethodParameterIn,struct sock *sk)"];
"1000139" [label="(ControlStructure,if (inet_opt && inet_opt->opt.srr))"];
"1000221" [label="(Call,err = inet_sk_reselect_saddr(sk))"];
"1000106" [label="(Block,)"];
"1000228" [label="(Identifier,sk)"];
"1000226" [label="(Call,sk->sk_err_soft = -err)"];
"1000171" [label="(Call,sk->sk_protocol)"];
"1000231" [label="(Identifier,err)"];
"1000234" [label="(MethodReturn,int)"];
"1000147" -> "1000139"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000154" -> "1000147"  [label="CFG: "];
"1000147" -> "1000234"  [label="DDG: inet_opt->opt.faddr"];
"1000147" -> "1000157"  [label="DDG: daddr"];
"1000157" -> "1000155"  [label="AST: "];
"1000157" -> "1000176"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000160" -> "1000157"  [label="AST: "];
"1000161" -> "1000157"  [label="AST: "];
"1000162" -> "1000157"  [label="AST: "];
"1000165" -> "1000157"  [label="AST: "];
"1000168" -> "1000157"  [label="AST: "];
"1000171" -> "1000157"  [label="AST: "];
"1000174" -> "1000157"  [label="AST: "];
"1000176" -> "1000157"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000157" -> "1000234"  [label="DDG: inet->inet_sport"];
"1000157" -> "1000234"  [label="DDG: sk"];
"1000157" -> "1000234"  [label="DDG: sock_net(sk)"];
"1000157" -> "1000234"  [label="DDG: sk->sk_bound_dev_if"];
"1000157" -> "1000234"  [label="DDG: sk->sk_protocol"];
"1000157" -> "1000234"  [label="DDG: inet->inet_saddr"];
"1000157" -> "1000234"  [label="DDG: daddr"];
"1000157" -> "1000234"  [label="DDG: RT_CONN_FLAGS(sk)"];
"1000157" -> "1000234"  [label="DDG: inet->inet_dport"];
"1000157" -> "1000155"  [label="DDG: inet->inet_sport"];
"1000157" -> "1000155"  [label="DDG: inet->inet_saddr"];
"1000157" -> "1000155"  [label="DDG: sock_net(sk)"];
"1000157" -> "1000155"  [label="DDG: sk"];
"1000157" -> "1000155"  [label="DDG: daddr"];
"1000157" -> "1000155"  [label="DDG: RT_CONN_FLAGS(sk)"];
"1000157" -> "1000155"  [label="DDG: sk->sk_bound_dev_if"];
"1000157" -> "1000155"  [label="DDG: inet->inet_dport"];
"1000157" -> "1000155"  [label="DDG: sk->sk_protocol"];
"1000158" -> "1000157"  [label="DDG: sk"];
"1000174" -> "1000157"  [label="DDG: sk"];
"1000105" -> "1000157"  [label="DDG: sk"];
"1000134" -> "1000157"  [label="DDG: daddr"];
"1000157" -> "1000187"  [label="DDG: sk"];
"1000157" -> "1000223"  [label="DDG: sk"];
"1000155" -> "1000106"  [label="AST: "];
"1000156" -> "1000155"  [label="AST: "];
"1000182" -> "1000155"  [label="CFG: "];
"1000155" -> "1000234"  [label="DDG: ip_route_output_ports(sock_net(sk), sk, daddr, inet->inet_saddr,\n \t\t\t\t   inet->inet_dport, inet->inet_sport,\n \t\t\t\t   sk->sk_protocol, RT_CONN_FLAGS(sk),\n\t\t\t\t   sk->sk_bound_dev_if)"];
"1000155" -> "1000181"  [label="DDG: rt"];
"1000181" -> "1000180"  [label="AST: "];
"1000181" -> "1000182"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000180" -> "1000181"  [label="CFG: "];
"1000181" -> "1000234"  [label="DDG: rt"];
"1000181" -> "1000180"  [label="DDG: rt"];
"1000181" -> "1000197"  [label="DDG: rt"];
"1000180" -> "1000179"  [label="AST: "];
"1000185" -> "1000180"  [label="CFG: "];
"1000196" -> "1000180"  [label="CFG: "];
"1000180" -> "1000234"  [label="DDG: IS_ERR(rt)"];
"1000180" -> "1000234"  [label="DDG: !IS_ERR(rt)"];
"1000197" -> "1000195"  [label="AST: "];
"1000197" -> "1000198"  [label="CFG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000195" -> "1000197"  [label="CFG: "];
"1000197" -> "1000234"  [label="DDG: rt"];
"1000197" -> "1000195"  [label="DDG: rt"];
"1000195" -> "1000194"  [label="AST: "];
"1000196" -> "1000195"  [label="AST: "];
"1000201" -> "1000195"  [label="CFG: "];
"1000195" -> "1000234"  [label="DDG: PTR_ERR(rt)"];
"1000195" -> "1000234"  [label="DDG: err"];
"1000195" -> "1000230"  [label="DDG: err"];
"1000195" -> "1000232"  [label="DDG: err"];
"1000230" -> "1000226"  [label="AST: "];
"1000230" -> "1000231"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000226" -> "1000230"  [label="CFG: "];
"1000230" -> "1000234"  [label="DDG: err"];
"1000230" -> "1000226"  [label="DDG: err"];
"1000221" -> "1000230"  [label="DDG: err"];
"1000230" -> "1000232"  [label="DDG: err"];
"1000226" -> "1000204"  [label="AST: "];
"1000227" -> "1000226"  [label="AST: "];
"1000233" -> "1000226"  [label="CFG: "];
"1000226" -> "1000234"  [label="DDG: sk->sk_err_soft"];
"1000226" -> "1000234"  [label="DDG: -err"];
"1000232" -> "1000106"  [label="AST: "];
"1000232" -> "1000233"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000234" -> "1000232"  [label="CFG: "];
"1000232" -> "1000234"  [label="DDG: <RET>"];
"1000233" -> "1000232"  [label="DDG: err"];
"1000184" -> "1000232"  [label="DDG: err"];
"1000221" -> "1000232"  [label="DDG: err"];
"1000187" -> "1000183"  [label="AST: "];
"1000187" -> "1000189"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000189" -> "1000187"  [label="AST: "];
"1000233" -> "1000187"  [label="CFG: "];
"1000187" -> "1000234"  [label="DDG: sk"];
"1000187" -> "1000234"  [label="DDG: sk_setup_caps(sk, &rt->dst)"];
"1000187" -> "1000234"  [label="DDG: &rt->dst"];
"1000105" -> "1000187"  [label="DDG: sk"];
"1000223" -> "1000221"  [label="AST: "];
"1000223" -> "1000224"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000223" -> "1000234"  [label="DDG: sk"];
"1000223" -> "1000220"  [label="DDG: sk"];
"1000223" -> "1000221"  [label="DDG: sk"];
"1000105" -> "1000223"  [label="DDG: sk"];
"1000220" -> "1000214"  [label="AST: "];
"1000220" -> "1000225"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000225" -> "1000220"  [label="AST: "];
"1000214" -> "1000220"  [label="CFG: "];
"1000220" -> "1000214"  [label="DDG: 0"];
"1000221" -> "1000220"  [label="DDG: err"];
"1000214" -> "1000208"  [label="AST: "];
"1000214" -> "1000215"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000208" -> "1000214"  [label="CFG: "];
"1000214" -> "1000234"  [label="DDG: sk->sk_userlocks & SOCK_BINDADDR_LOCK"];
"1000214" -> "1000234"  [label="DDG: (err = inet_sk_reselect_saddr(sk)) != 0"];
"1000214" -> "1000208"  [label="DDG: sk->sk_userlocks & SOCK_BINDADDR_LOCK"];
"1000214" -> "1000208"  [label="DDG: (err = inet_sk_reselect_saddr(sk)) != 0"];
"1000215" -> "1000214"  [label="DDG: sk->sk_userlocks"];
"1000215" -> "1000214"  [label="DDG: SOCK_BINDADDR_LOCK"];
"1000208" -> "1000205"  [label="AST: "];
"1000208" -> "1000209"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000205" -> "1000208"  [label="CFG: "];
"1000208" -> "1000234"  [label="DDG: sk->sk_state != TCP_SYN_SENT"];
"1000208" -> "1000234"  [label="DDG: (sk->sk_userlocks & SOCK_BINDADDR_LOCK) ||\n\t\t    (err = inet_sk_reselect_saddr(sk)) != 0"];
"1000208" -> "1000205"  [label="DDG: sk->sk_state != TCP_SYN_SENT"];
"1000208" -> "1000205"  [label="DDG: (sk->sk_userlocks & SOCK_BINDADDR_LOCK) ||\n\t\t    (err = inet_sk_reselect_saddr(sk)) != 0"];
"1000209" -> "1000208"  [label="DDG: sk->sk_state"];
"1000209" -> "1000208"  [label="DDG: TCP_SYN_SENT"];
"1000205" -> "1000204"  [label="AST: "];
"1000205" -> "1000206"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000228" -> "1000205"  [label="CFG: "];
"1000233" -> "1000205"  [label="CFG: "];
"1000205" -> "1000234"  [label="DDG: !sysctl_ip_dynaddr ||\n\t\t    sk->sk_state != TCP_SYN_SENT ||\n\t\t    (sk->sk_userlocks & SOCK_BINDADDR_LOCK) ||\n\t\t    (err = inet_sk_reselect_saddr(sk)) != 0"];
"1000205" -> "1000234"  [label="DDG: !sysctl_ip_dynaddr"];
"1000205" -> "1000234"  [label="DDG: sk->sk_state != TCP_SYN_SENT ||\n\t\t    (sk->sk_userlocks & SOCK_BINDADDR_LOCK) ||\n\t\t    (err = inet_sk_reselect_saddr(sk)) != 0"];
"1000206" -> "1000205"  [label="DDG: sysctl_ip_dynaddr"];
"1000222" -> "1000221"  [label="AST: "];
"1000225" -> "1000221"  [label="CFG: "];
"1000221" -> "1000234"  [label="DDG: inet_sk_reselect_saddr(sk)"];
"1000221" -> "1000234"  [label="DDG: err"];
}
