digraph "0_linux_e0e3cea46d31d23dc40df0a49a7a2c04fe8edfea_1@pointer" {
"1000230" [label="(Call,sk->sk_sndbuf >> 1)"];
"1000239" [label="(Call,sk->sk_sndbuf >> 1)"];
"1000230" [label="(Call,sk->sk_sndbuf >> 1)"];
"1000229" [label="(Call,(sk->sk_sndbuf >> 1) - 64)"];
"1000227" [label="(Call,size > ((sk->sk_sndbuf >> 1) - 64))"];
"1000246" [label="(Call,size > SKB_MAX_ALLOC)"];
"1000249" [label="(Call,size = SKB_MAX_ALLOC)"];
"1000254" [label="(Call,sock_alloc_send_skb(sk, size, msg->msg_flags&MSG_DONTWAIT,\n\t\t\t\t\t  &err))"];
"1000252" [label="(Call,skb = sock_alloc_send_skb(sk, size, msg->msg_flags&MSG_DONTWAIT,\n\t\t\t\t\t  &err))"];
"1000265" [label="(Call,skb == NULL)"];
"1000274" [label="(Call,skb_tailroom(skb))"];
"1000271" [label="(Call,min_t(int, size, skb_tailroom(skb)))"];
"1000269" [label="(Call,size = min_t(int, size, skb_tailroom(skb)))"];
"1000304" [label="(Call,skb_put(skb, size))"];
"1000303" [label="(Call,memcpy_fromiovec(skb_put(skb, size), msg->msg_iov, size))"];
"1000301" [label="(Call,err = memcpy_fromiovec(skb_put(skb, size), msg->msg_iov, size))"];
"1000355" [label="(Call,other->sk_data_ready(other, size))"];
"1000317" [label="(Call,unix_state_lock(other))"];
"1000321" [label="(Call,sock_flag(other, SOCK_DEAD))"];
"1000320" [label="(Call,sock_flag(other, SOCK_DEAD) ||\n\t\t    (other->sk_shutdown & RCV_SHUTDOWN))"];
"1000330" [label="(Call,maybe_add_creds(skb, sock, other))"];
"1000334" [label="(Call,skb_queue_tail(&other->sk_receive_queue, skb))"];
"1000344" [label="(Call,unix_sk(other))"];
"1000349" [label="(Call,unix_sk(other))"];
"1000353" [label="(Call,unix_state_unlock(other))"];
"1000373" [label="(Call,unix_state_unlock(other))"];
"1000358" [label="(Call,sent += size)"];
"1000217" [label="(Call,sent < len)"];
"1000223" [label="(Call,len-sent)"];
"1000221" [label="(Call,size = len-sent)"];
"1000380" [label="(Call,sent == 0)"];
"1000379" [label="(Call,sent == 0 && !(msg->msg_flags&MSG_NOSIGNAL))"];
"1000370" [label="(Return,return sent;)"];
"1000314" [label="(Call,kfree_skb(skb))"];
"1000375" [label="(Call,kfree_skb(skb))"];
"1000278" [label="(Call,unix_scm_to_skb(siocb->scm, skb, !fds_sent))"];
"1000276" [label="(Call,err = unix_scm_to_skb(siocb->scm, skb, !fds_sent))"];
"1000286" [label="(Call,err < 0)"];
"1000293" [label="(Call,max_level = err + 1)"];
"1000341" [label="(Call,max_level > unix_sk(other)->recursion_level)"];
"1000347" [label="(Call,unix_sk(other)->recursion_level = max_level)"];
"1000295" [label="(Call,err + 1)"];
"1000290" [label="(Call,kfree_skb(skb))"];
"1000361" [label="(Call,scm_destroy(siocb->scm))"];
"1000398" [label="(Call,scm_destroy(siocb->scm))"];
"1000365" [label="(Call,siocb->scm = NULL)"];
"1000402" [label="(Call,siocb->scm = NULL)"];
"1000238" [label="(Call,(sk->sk_sndbuf >> 1) - 64)"];
"1000236" [label="(Call,size = (sk->sk_sndbuf >> 1) - 64)"];
"1000292" [label="(ControlStructure,goto out_err;)"];
"1000326" [label="(Identifier,other)"];
"1000243" [label="(Literal,1)"];
"1000349" [label="(Call,unix_sk(other))"];
"1000220" [label="(Block,)"];
"1000315" [label="(Identifier,skb)"];
"1000314" [label="(Call,kfree_skb(skb))"];
"1000362" [label="(Call,siocb->scm)"];
"1000257" [label="(Call,msg->msg_flags&MSG_DONTWAIT)"];
"1000273" [label="(Identifier,size)"];
"1000270" [label="(Identifier,size)"];
"1000386" [label="(Identifier,msg)"];
"1000373" [label="(Call,unix_state_unlock(other))"];
"1000381" [label="(Identifier,sent)"];
"1000301" [label="(Call,err = memcpy_fromiovec(skb_put(skb, size), msg->msg_iov, size))"];
"1000380" [label="(Call,sent == 0)"];
"1000277" [label="(Identifier,err)"];
"1000219" [label="(Identifier,len)"];
"1000271" [label="(Call,min_t(int, size, skb_tailroom(skb)))"];
"1000290" [label="(Call,kfree_skb(skb))"];
"1000390" [label="(Identifier,SIGPIPE)"];
"1000346" [label="(FieldIdentifier,recursion_level)"];
"1000404" [label="(Identifier,siocb)"];
"1000217" [label="(Call,sent < len)"];
"1000402" [label="(Call,siocb->scm = NULL)"];
"1000240" [label="(Call,sk->sk_sndbuf)"];
"1000344" [label="(Call,unix_sk(other))"];
"1000265" [label="(Call,skb == NULL)"];
"1000304" [label="(Call,skb_put(skb, size))"];
"1000228" [label="(Identifier,size)"];
"1000275" [label="(Identifier,skb)"];
"1000154" [label="(Call,scm_send(sock, msg, siocb->scm))"];
"1000306" [label="(Identifier,size)"];
"1000313" [label="(Block,)"];
"1000234" [label="(Literal,1)"];
"1000356" [label="(Identifier,other)"];
"1000379" [label="(Call,sent == 0 && !(msg->msg_flags&MSG_NOSIGNAL))"];
"1000352" [label="(Identifier,max_level)"];
"1000236" [label="(Call,size = (sk->sk_sndbuf >> 1) - 64)"];
"1000227" [label="(Call,size > ((sk->sk_sndbuf >> 1) - 64))"];
"1000287" [label="(Identifier,err)"];
"1000321" [label="(Call,sock_flag(other, SOCK_DEAD))"];
"1000319" [label="(ControlStructure,if (sock_flag(other, SOCK_DEAD) ||\n\t\t    (other->sk_shutdown & RCV_SHUTDOWN)))"];
"1000247" [label="(Identifier,size)"];
"1000334" [label="(Call,skb_queue_tail(&other->sk_receive_queue, skb))"];
"1000335" [label="(Call,&other->sk_receive_queue)"];
"1000367" [label="(Identifier,siocb)"];
"1000252" [label="(Call,skb = sock_alloc_send_skb(sk, size, msg->msg_flags&MSG_DONTWAIT,\n\t\t\t\t\t  &err))"];
"1000256" [label="(Identifier,size)"];
"1000331" [label="(Identifier,skb)"];
"1000371" [label="(Identifier,sent)"];
"1000398" [label="(Call,scm_destroy(siocb->scm))"];
"1000291" [label="(Identifier,skb)"];
"1000297" [label="(Literal,1)"];
"1000206" [label="(Call,!other)"];
"1000248" [label="(Identifier,SKB_MAX_ALLOC)"];
"1000109" [label="(MethodParameterIn,size_t len)"];
"1000323" [label="(Identifier,SOCK_DEAD)"];
"1000251" [label="(Identifier,SKB_MAX_ALLOC)"];
"1000340" [label="(ControlStructure,if (max_level > unix_sk(other)->recursion_level))"];
"1000406" [label="(Identifier,NULL)"];
"1000216" [label="(ControlStructure,while (sent < len))"];
"1000308" [label="(Identifier,msg)"];
"1000264" [label="(ControlStructure,if (skb == NULL))"];
"1000245" [label="(ControlStructure,if (size > SKB_MAX_ALLOC))"];
"1000375" [label="(Call,kfree_skb(skb))"];
"1000341" [label="(Call,max_level > unix_sk(other)->recursion_level)"];
"1000407" [label="(Identifier,err)"];
"1000244" [label="(Literal,64)"];
"1000272" [label="(Identifier,int)"];
"1000383" [label="(Call,!(msg->msg_flags&MSG_NOSIGNAL))"];
"1000226" [label="(ControlStructure,if (size > ((sk->sk_sndbuf >> 1) - 64)))"];
"1000365" [label="(Call,siocb->scm = NULL)"];
"1000288" [label="(Literal,0)"];
"1000343" [label="(Call,unix_sk(other)->recursion_level)"];
"1000231" [label="(Call,sk->sk_sndbuf)"];
"1000361" [label="(Call,scm_destroy(siocb->scm))"];
"1000378" [label="(ControlStructure,if (sent == 0 && !(msg->msg_flags&MSG_NOSIGNAL)))"];
"1000310" [label="(Identifier,size)"];
"1000351" [label="(FieldIdentifier,recursion_level)"];
"1000318" [label="(Identifier,other)"];
"1000296" [label="(Identifier,err)"];
"1000285" [label="(ControlStructure,if (err < 0))"];
"1000348" [label="(Call,unix_sk(other)->recursion_level)"];
"1000279" [label="(Call,siocb->scm)"];
"1000250" [label="(Identifier,size)"];
"1000370" [label="(Return,return sent;)"];
"1000224" [label="(Identifier,len)"];
"1000330" [label="(Call,maybe_add_creds(skb, sock, other))"];
"1000345" [label="(Identifier,other)"];
"1000294" [label="(Identifier,max_level)"];
"1000130" [label="(Call,sent = 0)"];
"1000360" [label="(Identifier,size)"];
"1000249" [label="(Call,size = SKB_MAX_ALLOC)"];
"1000222" [label="(Identifier,size)"];
"1000303" [label="(Call,memcpy_fromiovec(skb_put(skb, size), msg->msg_iov, size))"];
"1000110" [label="(Block,)"];
"1000305" [label="(Identifier,skb)"];
"1000359" [label="(Identifier,sent)"];
"1000337" [label="(Identifier,other)"];
"1000354" [label="(Identifier,other)"];
"1000289" [label="(Block,)"];
"1000230" [label="(Call,sk->sk_sndbuf >> 1)"];
"1000320" [label="(Call,sock_flag(other, SOCK_DEAD) ||\n\t\t    (other->sk_shutdown & RCV_SHUTDOWN))"];
"1000376" [label="(Identifier,skb)"];
"1000299" [label="(Identifier,fds_sent)"];
"1000107" [label="(MethodParameterIn,struct socket *sock)"];
"1000282" [label="(Identifier,skb)"];
"1000269" [label="(Call,size = min_t(int, size, skb_tailroom(skb)))"];
"1000329" [label="(ControlStructure,goto pipe_err_free;)"];
"1000253" [label="(Identifier,skb)"];
"1000347" [label="(Call,unix_sk(other)->recursion_level = max_level)"];
"1000268" [label="(ControlStructure,goto out_err;)"];
"1000358" [label="(Call,sent += size)"];
"1000283" [label="(Call,!fds_sent)"];
"1000408" [label="(MethodReturn,static int)"];
"1000274" [label="(Call,skb_tailroom(skb))"];
"1000276" [label="(Call,err = unix_scm_to_skb(siocb->scm, skb, !fds_sent))"];
"1000317" [label="(Call,unix_state_lock(other))"];
"1000394" [label="(Identifier,err)"];
"1000262" [label="(Call,&err)"];
"1000403" [label="(Call,siocb->scm)"];
"1000342" [label="(Identifier,max_level)"];
"1000324" [label="(Call,other->sk_shutdown & RCV_SHUTDOWN)"];
"1000369" [label="(Identifier,NULL)"];
"1000254" [label="(Call,sock_alloc_send_skb(sk, size, msg->msg_flags&MSG_DONTWAIT,\n\t\t\t\t\t  &err))"];
"1000278" [label="(Call,unix_scm_to_skb(siocb->scm, skb, !fds_sent))"];
"1000307" [label="(Call,msg->msg_iov)"];
"1000382" [label="(Literal,0)"];
"1000355" [label="(Call,other->sk_data_ready(other, size))"];
"1000374" [label="(Identifier,other)"];
"1000316" [label="(ControlStructure,goto out_err;)"];
"1000221" [label="(Call,size = len-sent)"];
"1000246" [label="(Call,size > SKB_MAX_ALLOC)"];
"1000267" [label="(Identifier,NULL)"];
"1000223" [label="(Call,len-sent)"];
"1000332" [label="(Identifier,sock)"];
"1000225" [label="(Identifier,sent)"];
"1000295" [label="(Call,err + 1)"];
"1000140" [label="(Call,NULL == siocb->scm)"];
"1000286" [label="(Call,err < 0)"];
"1000353" [label="(Call,unix_state_unlock(other))"];
"1000203" [label="(Call,unix_peer(sk))"];
"1000312" [label="(Identifier,err)"];
"1000237" [label="(Identifier,size)"];
"1000229" [label="(Call,(sk->sk_sndbuf >> 1) - 64)"];
"1000266" [label="(Identifier,skb)"];
"1000377" [label="(JumpTarget,pipe_err:)"];
"1000293" [label="(Call,max_level = err + 1)"];
"1000255" [label="(Identifier,sk)"];
"1000322" [label="(Identifier,other)"];
"1000235" [label="(Literal,64)"];
"1000350" [label="(Identifier,other)"];
"1000238" [label="(Call,(sk->sk_sndbuf >> 1) - 64)"];
"1000399" [label="(Call,siocb->scm)"];
"1000357" [label="(Identifier,size)"];
"1000333" [label="(Identifier,other)"];
"1000218" [label="(Identifier,sent)"];
"1000339" [label="(Identifier,skb)"];
"1000363" [label="(Identifier,siocb)"];
"1000302" [label="(Identifier,err)"];
"1000239" [label="(Call,sk->sk_sndbuf >> 1)"];
"1000366" [label="(Call,siocb->scm)"];
"1000230" -> "1000229"  [label="AST: "];
"1000230" -> "1000234"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000234" -> "1000230"  [label="AST: "];
"1000235" -> "1000230"  [label="CFG: "];
"1000230" -> "1000408"  [label="DDG: sk->sk_sndbuf"];
"1000230" -> "1000229"  [label="DDG: sk->sk_sndbuf"];
"1000230" -> "1000229"  [label="DDG: 1"];
"1000239" -> "1000230"  [label="DDG: sk->sk_sndbuf"];
"1000230" -> "1000239"  [label="DDG: sk->sk_sndbuf"];
"1000239" -> "1000238"  [label="AST: "];
"1000239" -> "1000243"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000243" -> "1000239"  [label="AST: "];
"1000244" -> "1000239"  [label="CFG: "];
"1000239" -> "1000408"  [label="DDG: sk->sk_sndbuf"];
"1000239" -> "1000238"  [label="DDG: sk->sk_sndbuf"];
"1000239" -> "1000238"  [label="DDG: 1"];
"1000229" -> "1000227"  [label="AST: "];
"1000229" -> "1000235"  [label="CFG: "];
"1000235" -> "1000229"  [label="AST: "];
"1000227" -> "1000229"  [label="CFG: "];
"1000229" -> "1000408"  [label="DDG: sk->sk_sndbuf >> 1"];
"1000229" -> "1000227"  [label="DDG: sk->sk_sndbuf >> 1"];
"1000229" -> "1000227"  [label="DDG: 64"];
"1000227" -> "1000226"  [label="AST: "];
"1000228" -> "1000227"  [label="AST: "];
"1000237" -> "1000227"  [label="CFG: "];
"1000247" -> "1000227"  [label="CFG: "];
"1000227" -> "1000408"  [label="DDG: size > ((sk->sk_sndbuf >> 1) - 64)"];
"1000227" -> "1000408"  [label="DDG: (sk->sk_sndbuf >> 1) - 64"];
"1000221" -> "1000227"  [label="DDG: size"];
"1000227" -> "1000246"  [label="DDG: size"];
"1000246" -> "1000245"  [label="AST: "];
"1000246" -> "1000248"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000248" -> "1000246"  [label="AST: "];
"1000250" -> "1000246"  [label="CFG: "];
"1000253" -> "1000246"  [label="CFG: "];
"1000246" -> "1000408"  [label="DDG: SKB_MAX_ALLOC"];
"1000246" -> "1000408"  [label="DDG: size > SKB_MAX_ALLOC"];
"1000236" -> "1000246"  [label="DDG: size"];
"1000246" -> "1000249"  [label="DDG: SKB_MAX_ALLOC"];
"1000246" -> "1000254"  [label="DDG: size"];
"1000249" -> "1000245"  [label="AST: "];
"1000249" -> "1000251"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000251" -> "1000249"  [label="AST: "];
"1000253" -> "1000249"  [label="CFG: "];
"1000249" -> "1000408"  [label="DDG: SKB_MAX_ALLOC"];
"1000249" -> "1000254"  [label="DDG: size"];
"1000254" -> "1000252"  [label="AST: "];
"1000254" -> "1000262"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000256" -> "1000254"  [label="AST: "];
"1000257" -> "1000254"  [label="AST: "];
"1000262" -> "1000254"  [label="AST: "];
"1000252" -> "1000254"  [label="CFG: "];
"1000254" -> "1000408"  [label="DDG: sk"];
"1000254" -> "1000408"  [label="DDG: &err"];
"1000254" -> "1000408"  [label="DDG: msg->msg_flags&MSG_DONTWAIT"];
"1000254" -> "1000408"  [label="DDG: size"];
"1000254" -> "1000252"  [label="DDG: sk"];
"1000254" -> "1000252"  [label="DDG: size"];
"1000254" -> "1000252"  [label="DDG: msg->msg_flags&MSG_DONTWAIT"];
"1000254" -> "1000252"  [label="DDG: &err"];
"1000203" -> "1000254"  [label="DDG: sk"];
"1000257" -> "1000254"  [label="DDG: msg->msg_flags"];
"1000257" -> "1000254"  [label="DDG: MSG_DONTWAIT"];
"1000254" -> "1000271"  [label="DDG: size"];
"1000252" -> "1000220"  [label="AST: "];
"1000253" -> "1000252"  [label="AST: "];
"1000266" -> "1000252"  [label="CFG: "];
"1000252" -> "1000408"  [label="DDG: sock_alloc_send_skb(sk, size, msg->msg_flags&MSG_DONTWAIT,\n\t\t\t\t\t  &err)"];
"1000252" -> "1000265"  [label="DDG: skb"];
"1000265" -> "1000264"  [label="AST: "];
"1000265" -> "1000267"  [label="CFG: "];
"1000266" -> "1000265"  [label="AST: "];
"1000267" -> "1000265"  [label="AST: "];
"1000268" -> "1000265"  [label="CFG: "];
"1000270" -> "1000265"  [label="CFG: "];
"1000265" -> "1000408"  [label="DDG: skb == NULL"];
"1000265" -> "1000408"  [label="DDG: skb"];
"1000140" -> "1000265"  [label="DDG: NULL"];
"1000265" -> "1000274"  [label="DDG: skb"];
"1000265" -> "1000365"  [label="DDG: NULL"];
"1000265" -> "1000402"  [label="DDG: NULL"];
"1000274" -> "1000271"  [label="AST: "];
"1000274" -> "1000275"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000271" -> "1000274"  [label="CFG: "];
"1000274" -> "1000271"  [label="DDG: skb"];
"1000274" -> "1000278"  [label="DDG: skb"];
"1000271" -> "1000269"  [label="AST: "];
"1000272" -> "1000271"  [label="AST: "];
"1000273" -> "1000271"  [label="AST: "];
"1000269" -> "1000271"  [label="CFG: "];
"1000271" -> "1000408"  [label="DDG: skb_tailroom(skb)"];
"1000271" -> "1000408"  [label="DDG: int"];
"1000271" -> "1000269"  [label="DDG: int"];
"1000271" -> "1000269"  [label="DDG: size"];
"1000271" -> "1000269"  [label="DDG: skb_tailroom(skb)"];
"1000269" -> "1000220"  [label="AST: "];
"1000270" -> "1000269"  [label="AST: "];
"1000277" -> "1000269"  [label="CFG: "];
"1000269" -> "1000408"  [label="DDG: size"];
"1000269" -> "1000408"  [label="DDG: min_t(int, size, skb_tailroom(skb))"];
"1000269" -> "1000304"  [label="DDG: size"];
"1000304" -> "1000303"  [label="AST: "];
"1000304" -> "1000306"  [label="CFG: "];
"1000305" -> "1000304"  [label="AST: "];
"1000306" -> "1000304"  [label="AST: "];
"1000308" -> "1000304"  [label="CFG: "];
"1000304" -> "1000303"  [label="DDG: skb"];
"1000304" -> "1000303"  [label="DDG: size"];
"1000278" -> "1000304"  [label="DDG: skb"];
"1000304" -> "1000314"  [label="DDG: skb"];
"1000304" -> "1000330"  [label="DDG: skb"];
"1000304" -> "1000375"  [label="DDG: skb"];
"1000303" -> "1000301"  [label="AST: "];
"1000303" -> "1000310"  [label="CFG: "];
"1000307" -> "1000303"  [label="AST: "];
"1000310" -> "1000303"  [label="AST: "];
"1000301" -> "1000303"  [label="CFG: "];
"1000303" -> "1000408"  [label="DDG: size"];
"1000303" -> "1000408"  [label="DDG: skb_put(skb, size)"];
"1000303" -> "1000408"  [label="DDG: msg->msg_iov"];
"1000303" -> "1000301"  [label="DDG: skb_put(skb, size)"];
"1000303" -> "1000301"  [label="DDG: msg->msg_iov"];
"1000303" -> "1000301"  [label="DDG: size"];
"1000303" -> "1000355"  [label="DDG: size"];
"1000301" -> "1000220"  [label="AST: "];
"1000302" -> "1000301"  [label="AST: "];
"1000312" -> "1000301"  [label="CFG: "];
"1000301" -> "1000408"  [label="DDG: memcpy_fromiovec(skb_put(skb, size), msg->msg_iov, size)"];
"1000301" -> "1000408"  [label="DDG: err"];
"1000355" -> "1000220"  [label="AST: "];
"1000355" -> "1000357"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000357" -> "1000355"  [label="AST: "];
"1000359" -> "1000355"  [label="CFG: "];
"1000355" -> "1000408"  [label="DDG: other"];
"1000355" -> "1000408"  [label="DDG: other->sk_data_ready(other, size)"];
"1000355" -> "1000317"  [label="DDG: other"];
"1000353" -> "1000355"  [label="DDG: other"];
"1000355" -> "1000358"  [label="DDG: size"];
"1000317" -> "1000220"  [label="AST: "];
"1000317" -> "1000318"  [label="CFG: "];
"1000318" -> "1000317"  [label="AST: "];
"1000322" -> "1000317"  [label="CFG: "];
"1000317" -> "1000408"  [label="DDG: unix_state_lock(other)"];
"1000206" -> "1000317"  [label="DDG: other"];
"1000317" -> "1000321"  [label="DDG: other"];
"1000321" -> "1000320"  [label="AST: "];
"1000321" -> "1000323"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000323" -> "1000321"  [label="AST: "];
"1000326" -> "1000321"  [label="CFG: "];
"1000320" -> "1000321"  [label="CFG: "];
"1000321" -> "1000408"  [label="DDG: SOCK_DEAD"];
"1000321" -> "1000320"  [label="DDG: other"];
"1000321" -> "1000320"  [label="DDG: SOCK_DEAD"];
"1000321" -> "1000330"  [label="DDG: other"];
"1000321" -> "1000373"  [label="DDG: other"];
"1000320" -> "1000319"  [label="AST: "];
"1000320" -> "1000324"  [label="CFG: "];
"1000324" -> "1000320"  [label="AST: "];
"1000329" -> "1000320"  [label="CFG: "];
"1000331" -> "1000320"  [label="CFG: "];
"1000320" -> "1000408"  [label="DDG: other->sk_shutdown & RCV_SHUTDOWN"];
"1000320" -> "1000408"  [label="DDG: sock_flag(other, SOCK_DEAD)"];
"1000320" -> "1000408"  [label="DDG: sock_flag(other, SOCK_DEAD) ||\n\t\t    (other->sk_shutdown & RCV_SHUTDOWN)"];
"1000324" -> "1000320"  [label="DDG: other->sk_shutdown"];
"1000324" -> "1000320"  [label="DDG: RCV_SHUTDOWN"];
"1000330" -> "1000220"  [label="AST: "];
"1000330" -> "1000333"  [label="CFG: "];
"1000331" -> "1000330"  [label="AST: "];
"1000332" -> "1000330"  [label="AST: "];
"1000333" -> "1000330"  [label="AST: "];
"1000337" -> "1000330"  [label="CFG: "];
"1000330" -> "1000408"  [label="DDG: sock"];
"1000330" -> "1000408"  [label="DDG: maybe_add_creds(skb, sock, other)"];
"1000154" -> "1000330"  [label="DDG: sock"];
"1000107" -> "1000330"  [label="DDG: sock"];
"1000330" -> "1000334"  [label="DDG: skb"];
"1000330" -> "1000344"  [label="DDG: other"];
"1000334" -> "1000220"  [label="AST: "];
"1000334" -> "1000339"  [label="CFG: "];
"1000335" -> "1000334"  [label="AST: "];
"1000339" -> "1000334"  [label="AST: "];
"1000342" -> "1000334"  [label="CFG: "];
"1000334" -> "1000408"  [label="DDG: skb_queue_tail(&other->sk_receive_queue, skb)"];
"1000334" -> "1000408"  [label="DDG: skb"];
"1000334" -> "1000408"  [label="DDG: &other->sk_receive_queue"];
"1000344" -> "1000343"  [label="AST: "];
"1000344" -> "1000345"  [label="CFG: "];
"1000345" -> "1000344"  [label="AST: "];
"1000346" -> "1000344"  [label="CFG: "];
"1000344" -> "1000349"  [label="DDG: other"];
"1000344" -> "1000353"  [label="DDG: other"];
"1000349" -> "1000348"  [label="AST: "];
"1000349" -> "1000350"  [label="CFG: "];
"1000350" -> "1000349"  [label="AST: "];
"1000351" -> "1000349"  [label="CFG: "];
"1000349" -> "1000353"  [label="DDG: other"];
"1000353" -> "1000220"  [label="AST: "];
"1000353" -> "1000354"  [label="CFG: "];
"1000354" -> "1000353"  [label="AST: "];
"1000356" -> "1000353"  [label="CFG: "];
"1000353" -> "1000408"  [label="DDG: unix_state_unlock(other)"];
"1000373" -> "1000110"  [label="AST: "];
"1000373" -> "1000374"  [label="CFG: "];
"1000374" -> "1000373"  [label="AST: "];
"1000376" -> "1000373"  [label="CFG: "];
"1000373" -> "1000408"  [label="DDG: unix_state_unlock(other)"];
"1000373" -> "1000408"  [label="DDG: other"];
"1000358" -> "1000220"  [label="AST: "];
"1000358" -> "1000360"  [label="CFG: "];
"1000359" -> "1000358"  [label="AST: "];
"1000360" -> "1000358"  [label="AST: "];
"1000218" -> "1000358"  [label="CFG: "];
"1000358" -> "1000408"  [label="DDG: size"];
"1000358" -> "1000217"  [label="DDG: sent"];
"1000223" -> "1000358"  [label="DDG: sent"];
"1000217" -> "1000216"  [label="AST: "];
"1000217" -> "1000219"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000219" -> "1000217"  [label="AST: "];
"1000222" -> "1000217"  [label="CFG: "];
"1000363" -> "1000217"  [label="CFG: "];
"1000217" -> "1000408"  [label="DDG: len"];
"1000217" -> "1000408"  [label="DDG: sent < len"];
"1000217" -> "1000408"  [label="DDG: sent"];
"1000130" -> "1000217"  [label="DDG: sent"];
"1000223" -> "1000217"  [label="DDG: len"];
"1000109" -> "1000217"  [label="DDG: len"];
"1000217" -> "1000223"  [label="DDG: len"];
"1000217" -> "1000223"  [label="DDG: sent"];
"1000217" -> "1000370"  [label="DDG: sent"];
"1000223" -> "1000221"  [label="AST: "];
"1000223" -> "1000225"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000225" -> "1000223"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000223" -> "1000408"  [label="DDG: sent"];
"1000223" -> "1000408"  [label="DDG: len"];
"1000223" -> "1000221"  [label="DDG: len"];
"1000223" -> "1000221"  [label="DDG: sent"];
"1000109" -> "1000223"  [label="DDG: len"];
"1000223" -> "1000380"  [label="DDG: sent"];
"1000221" -> "1000220"  [label="AST: "];
"1000222" -> "1000221"  [label="AST: "];
"1000228" -> "1000221"  [label="CFG: "];
"1000221" -> "1000408"  [label="DDG: len-sent"];
"1000380" -> "1000379"  [label="AST: "];
"1000380" -> "1000382"  [label="CFG: "];
"1000381" -> "1000380"  [label="AST: "];
"1000382" -> "1000380"  [label="AST: "];
"1000386" -> "1000380"  [label="CFG: "];
"1000379" -> "1000380"  [label="CFG: "];
"1000380" -> "1000408"  [label="DDG: sent"];
"1000380" -> "1000379"  [label="DDG: sent"];
"1000380" -> "1000379"  [label="DDG: 0"];
"1000130" -> "1000380"  [label="DDG: sent"];
"1000379" -> "1000378"  [label="AST: "];
"1000379" -> "1000383"  [label="CFG: "];
"1000383" -> "1000379"  [label="AST: "];
"1000390" -> "1000379"  [label="CFG: "];
"1000394" -> "1000379"  [label="CFG: "];
"1000379" -> "1000408"  [label="DDG: !(msg->msg_flags&MSG_NOSIGNAL)"];
"1000379" -> "1000408"  [label="DDG: sent == 0"];
"1000379" -> "1000408"  [label="DDG: sent == 0 && !(msg->msg_flags&MSG_NOSIGNAL)"];
"1000383" -> "1000379"  [label="DDG: msg->msg_flags&MSG_NOSIGNAL"];
"1000370" -> "1000110"  [label="AST: "];
"1000370" -> "1000371"  [label="CFG: "];
"1000371" -> "1000370"  [label="AST: "];
"1000408" -> "1000370"  [label="CFG: "];
"1000370" -> "1000408"  [label="DDG: <RET>"];
"1000371" -> "1000370"  [label="DDG: sent"];
"1000314" -> "1000313"  [label="AST: "];
"1000314" -> "1000315"  [label="CFG: "];
"1000315" -> "1000314"  [label="AST: "];
"1000316" -> "1000314"  [label="CFG: "];
"1000314" -> "1000408"  [label="DDG: skb"];
"1000314" -> "1000408"  [label="DDG: kfree_skb(skb)"];
"1000375" -> "1000110"  [label="AST: "];
"1000375" -> "1000376"  [label="CFG: "];
"1000376" -> "1000375"  [label="AST: "];
"1000377" -> "1000375"  [label="CFG: "];
"1000375" -> "1000408"  [label="DDG: skb"];
"1000375" -> "1000408"  [label="DDG: kfree_skb(skb)"];
"1000278" -> "1000276"  [label="AST: "];
"1000278" -> "1000283"  [label="CFG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000282" -> "1000278"  [label="AST: "];
"1000283" -> "1000278"  [label="AST: "];
"1000276" -> "1000278"  [label="CFG: "];
"1000278" -> "1000408"  [label="DDG: !fds_sent"];
"1000278" -> "1000276"  [label="DDG: siocb->scm"];
"1000278" -> "1000276"  [label="DDG: skb"];
"1000278" -> "1000276"  [label="DDG: !fds_sent"];
"1000154" -> "1000278"  [label="DDG: siocb->scm"];
"1000283" -> "1000278"  [label="DDG: fds_sent"];
"1000278" -> "1000290"  [label="DDG: skb"];
"1000278" -> "1000361"  [label="DDG: siocb->scm"];
"1000278" -> "1000398"  [label="DDG: siocb->scm"];
"1000276" -> "1000220"  [label="AST: "];
"1000277" -> "1000276"  [label="AST: "];
"1000287" -> "1000276"  [label="CFG: "];
"1000276" -> "1000408"  [label="DDG: unix_scm_to_skb(siocb->scm, skb, !fds_sent)"];
"1000276" -> "1000286"  [label="DDG: err"];
"1000286" -> "1000285"  [label="AST: "];
"1000286" -> "1000288"  [label="CFG: "];
"1000287" -> "1000286"  [label="AST: "];
"1000288" -> "1000286"  [label="AST: "];
"1000291" -> "1000286"  [label="CFG: "];
"1000294" -> "1000286"  [label="CFG: "];
"1000286" -> "1000408"  [label="DDG: err < 0"];
"1000286" -> "1000408"  [label="DDG: err"];
"1000286" -> "1000293"  [label="DDG: err"];
"1000286" -> "1000295"  [label="DDG: err"];
"1000293" -> "1000220"  [label="AST: "];
"1000293" -> "1000295"  [label="CFG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000295" -> "1000293"  [label="AST: "];
"1000299" -> "1000293"  [label="CFG: "];
"1000293" -> "1000408"  [label="DDG: max_level"];
"1000293" -> "1000408"  [label="DDG: err + 1"];
"1000293" -> "1000341"  [label="DDG: max_level"];
"1000341" -> "1000340"  [label="AST: "];
"1000341" -> "1000343"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="AST: "];
"1000350" -> "1000341"  [label="CFG: "];
"1000354" -> "1000341"  [label="CFG: "];
"1000341" -> "1000408"  [label="DDG: unix_sk(other)->recursion_level"];
"1000341" -> "1000408"  [label="DDG: max_level"];
"1000341" -> "1000408"  [label="DDG: max_level > unix_sk(other)->recursion_level"];
"1000347" -> "1000341"  [label="DDG: unix_sk(other)->recursion_level"];
"1000341" -> "1000347"  [label="DDG: max_level"];
"1000347" -> "1000340"  [label="AST: "];
"1000347" -> "1000352"  [label="CFG: "];
"1000348" -> "1000347"  [label="AST: "];
"1000352" -> "1000347"  [label="AST: "];
"1000354" -> "1000347"  [label="CFG: "];
"1000347" -> "1000408"  [label="DDG: unix_sk(other)->recursion_level"];
"1000347" -> "1000408"  [label="DDG: max_level"];
"1000295" -> "1000297"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000297" -> "1000295"  [label="AST: "];
"1000290" -> "1000289"  [label="AST: "];
"1000290" -> "1000291"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000292" -> "1000290"  [label="CFG: "];
"1000290" -> "1000408"  [label="DDG: skb"];
"1000290" -> "1000408"  [label="DDG: kfree_skb(skb)"];
"1000361" -> "1000110"  [label="AST: "];
"1000361" -> "1000362"  [label="CFG: "];
"1000362" -> "1000361"  [label="AST: "];
"1000367" -> "1000361"  [label="CFG: "];
"1000361" -> "1000408"  [label="DDG: scm_destroy(siocb->scm)"];
"1000154" -> "1000361"  [label="DDG: siocb->scm"];
"1000398" -> "1000110"  [label="AST: "];
"1000398" -> "1000399"  [label="CFG: "];
"1000399" -> "1000398"  [label="AST: "];
"1000404" -> "1000398"  [label="CFG: "];
"1000398" -> "1000408"  [label="DDG: scm_destroy(siocb->scm)"];
"1000154" -> "1000398"  [label="DDG: siocb->scm"];
"1000365" -> "1000110"  [label="AST: "];
"1000365" -> "1000369"  [label="CFG: "];
"1000366" -> "1000365"  [label="AST: "];
"1000369" -> "1000365"  [label="AST: "];
"1000371" -> "1000365"  [label="CFG: "];
"1000365" -> "1000408"  [label="DDG: NULL"];
"1000365" -> "1000408"  [label="DDG: siocb->scm"];
"1000140" -> "1000365"  [label="DDG: NULL"];
"1000402" -> "1000110"  [label="AST: "];
"1000402" -> "1000406"  [label="CFG: "];
"1000403" -> "1000402"  [label="AST: "];
"1000406" -> "1000402"  [label="AST: "];
"1000407" -> "1000402"  [label="CFG: "];
"1000402" -> "1000408"  [label="DDG: siocb->scm"];
"1000402" -> "1000408"  [label="DDG: NULL"];
"1000140" -> "1000402"  [label="DDG: NULL"];
"1000238" -> "1000236"  [label="AST: "];
"1000238" -> "1000244"  [label="CFG: "];
"1000244" -> "1000238"  [label="AST: "];
"1000236" -> "1000238"  [label="CFG: "];
"1000238" -> "1000408"  [label="DDG: sk->sk_sndbuf >> 1"];
"1000238" -> "1000236"  [label="DDG: sk->sk_sndbuf >> 1"];
"1000238" -> "1000236"  [label="DDG: 64"];
"1000236" -> "1000226"  [label="AST: "];
"1000237" -> "1000236"  [label="AST: "];
"1000247" -> "1000236"  [label="CFG: "];
"1000236" -> "1000408"  [label="DDG: (sk->sk_sndbuf >> 1) - 64"];
}
