digraph "0_linux_f3d3342602f8bcbf37d7c46641cb9bca7618eb1c_21@API" {
"1000408" [label="(Call,skb_copy_datagram_iovec(skb, offset,\n\t\t\t\t\t\t\t msg->msg_iov, used))"];
"1000234" [label="(Call,skb = skb_peek(&sk->sk_receive_queue))"];
"1000236" [label="(Call,skb_peek(&sk->sk_receive_queue))"];
"1000387" [label="(Call,skb->len - offset)"];
"1000474" [label="(Call,used + offset < skb->len)"];
"1000396" [label="(Call,used = len)"];
"1000393" [label="(Call,len < used)"];
"1000206" [label="(Call,sock_rcvlowat(sk, flags & MSG_WAITALL, len))"];
"1000181" [label="(Call,sock_rcvtimeo(sk, nonblock))"];
"1000159" [label="(Call,lock_sock(sk))"];
"1000144" [label="(Call,llc_sk(sk))"];
"1000136" [label="(Call,*sk = sock->sk)"];
"1000126" [label="(Call,nonblock = flags & MSG_DONTWAIT)"];
"1000128" [label="(Call,flags & MSG_DONTWAIT)"];
"1000115" [label="(MethodParameterIn,int flags)"];
"1000208" [label="(Call,flags & MSG_WAITALL)"];
"1000191" [label="(Call,flags & MSG_PEEK)"];
"1000114" [label="(MethodParameterIn,size_t len)"];
"1000482" [label="(Call,len > 0)"];
"1000433" [label="(Call,len -= used)"];
"1000408" [label="(Call,skb_copy_datagram_iovec(skb, offset,\n\t\t\t\t\t\t\t msg->msg_iov, used))"];
"1000385" [label="(Call,used = skb->len - offset)"];
"1000244" [label="(Call,offset = *seq)"];
"1000426" [label="(Call,*seq += used)"];
"1000469" [label="(Call,*seq = 0)"];
"1000406" [label="(Call,rc = skb_copy_datagram_iovec(skb, offset,\n\t\t\t\t\t\t\t msg->msg_iov, used))"];
"1000430" [label="(Call,copied += used)"];
"1000251" [label="(Call,copied >= target)"];
"1000250" [label="(Call,copied >= target && !sk->sk_backlog.tail)"];
"1000347" [label="(Call,copied >= target)"];
"1000419" [label="(Call,!copied)"];
"1000488" [label="(Return,return copied;)"];
"1000457" [label="(Call,sk_eat_skb(sk, skb, false))"];
"1000291" [label="(Call,sock_flag(sk, SOCK_DONE))"];
"1000302" [label="(Call,sock_error(sk))"];
"1000300" [label="(Call,copied = sock_error(sk))"];
"1000486" [label="(Call,release_sock(sk))"];
"1000327" [label="(Call,sock_flag(sk, SOCK_DONE))"];
"1000326" [label="(Call,!sock_flag(sk, SOCK_DONE))"];
"1000351" [label="(Call,release_sock(sk))"];
"1000353" [label="(Call,lock_sock(sk))"];
"1000356" [label="(Call,sk_wait_data(sk, &timeo))"];
"1000516" [label="(Call,llc_sk(sk))"];
"1000536" [label="(Call,sk_eat_skb(sk, skb, false))"];
"1000475" [label="(Call,used + offset)"];
"1000496" [label="(Call,skb != NULL)"];
"1000492" [label="(Call,uaddr != NULL && skb != NULL)"];
"1000502" [label="(Call,llc_ui_skb_cb(skb))"];
"1000500" [label="(Call,memcpy(uaddr, llc_ui_skb_cb(skb), sizeof(*uaddr)))"];
"1000519" [label="(Call,llc_cmsg_rcv(msg, skb))"];
"1000396" [label="(Call,used = len)"];
"1000404" [label="(Block,)"];
"1000281" [label="(Call,!timeo ||\n\t\t\t    (flags & MSG_PEEK))"];
"1000244" [label="(Call,offset = *seq)"];
"1000484" [label="(Literal,0)"];
"1000246" [label="(Call,*seq)"];
"1000249" [label="(ControlStructure,if (copied >= target && !sk->sk_backlog.tail))"];
"1000465" [label="(Identifier,sk)"];
"1000354" [label="(Identifier,sk)"];
"1000500" [label="(Call,memcpy(uaddr, llc_ui_skb_cb(skb), sizeof(*uaddr)))"];
"1000409" [label="(Identifier,skb)"];
"1000142" [label="(Call,*llc = llc_sk(sk))"];
"1000363" [label="(Identifier,flags)"];
"1000235" [label="(Identifier,skb)"];
"1000386" [label="(Identifier,used)"];
"1000251" [label="(Call,copied >= target)"];
"1000472" [label="(Literal,0)"];
"1000300" [label="(Call,copied = sock_error(sk))"];
"1000497" [label="(Identifier,skb)"];
"1000422" [label="(Identifier,copied)"];
"1000478" [label="(Call,skb->len)"];
"1000411" [label="(Call,msg->msg_iov)"];
"1000216" [label="(Block,)"];
"1000192" [label="(Identifier,flags)"];
"1000351" [label="(Call,release_sock(sk))"];
"1000257" [label="(Identifier,sk)"];
"1000331" [label="(Call,copied = -ENOTCONN)"];
"1000439" [label="(Identifier,sk)"];
"1000458" [label="(Identifier,sk)"];
"1000297" [label="(Identifier,sk)"];
"1000394" [label="(Identifier,len)"];
"1000145" [label="(Identifier,sk)"];
"1000486" [label="(Call,release_sock(sk))"];
"1000193" [label="(Identifier,MSG_PEEK)"];
"1000427" [label="(Call,*seq)"];
"1000212" [label="(Call,copied = 0)"];
"1000236" [label="(Call,skb_peek(&sk->sk_receive_queue))"];
"1000393" [label="(Call,len < used)"];
"1000328" [label="(Identifier,sk)"];
"1000392" [label="(ControlStructure,if (len < used))"];
"1000544" [label="(Identifier,sk)"];
"1000114" [label="(MethodParameterIn,size_t len)"];
"1000488" [label="(Return,return copied;)"];
"1000181" [label="(Call,sock_rcvtimeo(sk, nonblock))"];
"1000302" [label="(Call,sock_error(sk))"];
"1000519" [label="(Call,llc_cmsg_rcv(msg, skb))"];
"1000477" [label="(Identifier,offset)"];
"1000502" [label="(Call,llc_ui_skb_cb(skb))"];
"1000385" [label="(Call,used = skb->len - offset)"];
"1000182" [label="(Identifier,sk)"];
"1000515" [label="(Call,llc_sk(sk)->cmsg_flags)"];
"1000210" [label="(Identifier,MSG_WAITALL)"];
"1000350" [label="(Block,)"];
"1000514" [label="(ControlStructure,if (llc_sk(sk)->cmsg_flags))"];
"1000391" [label="(Identifier,offset)"];
"1000162" [label="(Identifier,copied)"];
"1000445" [label="(Call,flags & MSG_PEEK)"];
"1000183" [label="(Identifier,nonblock)"];
"1000516" [label="(Call,llc_sk(sk))"];
"1000408" [label="(Call,skb_copy_datagram_iovec(skb, offset,\n\t\t\t\t\t\t\t msg->msg_iov, used))"];
"1000242" [label="(Identifier,skb)"];
"1000325" [label="(ControlStructure,if (!sock_flag(sk, SOCK_DONE)))"];
"1000129" [label="(Identifier,flags)"];
"1000284" [label="(Call,flags & MSG_PEEK)"];
"1000346" [label="(ControlStructure,if (copied >= target))"];
"1000538" [label="(Identifier,skb)"];
"1000491" [label="(ControlStructure,if (uaddr != NULL && skb != NULL))"];
"1000520" [label="(Identifier,msg)"];
"1000469" [label="(Call,*seq = 0)"];
"1000209" [label="(Identifier,flags)"];
"1000475" [label="(Call,used + offset)"];
"1000260" [label="(ControlStructure,break;)"];
"1000252" [label="(Identifier,copied)"];
"1000220" [label="(Identifier,current)"];
"1000431" [label="(Identifier,copied)"];
"1000470" [label="(Call,*seq)"];
"1000473" [label="(ControlStructure,if (used + offset < skb->len))"];
"1000128" [label="(Call,flags & MSG_DONTWAIT)"];
"1000207" [label="(Identifier,sk)"];
"1000126" [label="(Call,nonblock = flags & MSG_DONTWAIT)"];
"1000489" [label="(Identifier,copied)"];
"1000341" [label="(Call,copied = -EAGAIN)"];
"1000303" [label="(Identifier,sk)"];
"1000116" [label="(Block,)"];
"1000137" [label="(Identifier,sk)"];
"1000204" [label="(Call,target = sock_rcvlowat(sk, flags & MSG_WAITALL, len))"];
"1000234" [label="(Call,skb = skb_peek(&sk->sk_receive_queue))"];
"1000430" [label="(Call,copied += used)"];
"1000191" [label="(Call,flags & MSG_PEEK)"];
"1000474" [label="(Call,used + offset < skb->len)"];
"1000536" [label="(Call,sk_eat_skb(sk, skb, false))"];
"1000352" [label="(Identifier,sk)"];
"1000460" [label="(Identifier,false)"];
"1000143" [label="(Identifier,llc)"];
"1000432" [label="(Identifier,used)"];
"1000250" [label="(Call,copied >= target && !sk->sk_backlog.tail)"];
"1000459" [label="(Identifier,skb)"];
"1000501" [label="(Identifier,uaddr)"];
"1000499" [label="(Block,)"];
"1000416" [label="(Identifier,rc)"];
"1000503" [label="(Identifier,skb)"];
"1000262" [label="(Identifier,copied)"];
"1000426" [label="(Call,*seq += used)"];
"1000483" [label="(Identifier,len)"];
"1000327" [label="(Call,sock_flag(sk, SOCK_DONE))"];
"1000336" [label="(ControlStructure,break;)"];
"1000457" [label="(Call,sk_eat_skb(sk, skb, false))"];
"1000237" [label="(Call,&sk->sk_receive_queue)"];
"1000138" [label="(Call,sock->sk)"];
"1000205" [label="(Identifier,target)"];
"1000553" [label="(MethodReturn,static int)"];
"1000353" [label="(Call,lock_sock(sk))"];
"1000537" [label="(Identifier,sk)"];
"1000539" [label="(Identifier,false)"];
"1000387" [label="(Call,skb->len - offset)"];
"1000504" [label="(Call,sizeof(*uaddr))"];
"1000253" [label="(Identifier,target)"];
"1000395" [label="(Identifier,used)"];
"1000113" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000421" [label="(Call,copied = -EFAULT)"];
"1000206" [label="(Call,sock_rcvlowat(sk, flags & MSG_WAITALL, len))"];
"1000254" [label="(Call,!sk->sk_backlog.tail)"];
"1000397" [label="(Identifier,used)"];
"1000347" [label="(Call,copied >= target)"];
"1000349" [label="(Identifier,target)"];
"1000356" [label="(Call,sk_wait_data(sk, &timeo))"];
"1000357" [label="(Identifier,sk)"];
"1000496" [label="(Call,skb != NULL)"];
"1000493" [label="(Call,uaddr != NULL)"];
"1000498" [label="(Identifier,NULL)"];
"1000211" [label="(Identifier,len)"];
"1000425" [label="(ControlStructure,break;)"];
"1000407" [label="(Identifier,rc)"];
"1000492" [label="(Call,uaddr != NULL && skb != NULL)"];
"1000326" [label="(Call,!sock_flag(sk, SOCK_DONE))"];
"1000479" [label="(Identifier,skb)"];
"1000414" [label="(Identifier,used)"];
"1000433" [label="(Call,len -= used)"];
"1000196" [label="(Identifier,peek_seq)"];
"1000225" [label="(Call,copied = timeo ? sock_intr_errno(timeo) : -EAGAIN)"];
"1000304" [label="(ControlStructure,break;)"];
"1000329" [label="(Identifier,SOCK_DONE)"];
"1000248" [label="(ControlStructure,goto found_ok_skb;)"];
"1000509" [label="(Identifier,msg)"];
"1000127" [label="(Identifier,nonblock)"];
"1000487" [label="(Identifier,sk)"];
"1000506" [label="(Identifier,uaddr)"];
"1000243" [label="(Block,)"];
"1000476" [label="(Identifier,used)"];
"1000299" [label="(Block,)"];
"1000291" [label="(Call,sock_flag(sk, SOCK_DONE))"];
"1000190" [label="(ControlStructure,if (flags & MSG_PEEK))"];
"1000144" [label="(Call,llc_sk(sk))"];
"1000294" [label="(ControlStructure,break;)"];
"1000348" [label="(Identifier,copied)"];
"1000115" [label="(MethodParameterIn,int flags)"];
"1000136" [label="(Call,*sk = sock->sk)"];
"1000161" [label="(Call,copied = -ENOTCONN)"];
"1000332" [label="(Identifier,copied)"];
"1000301" [label="(Identifier,copied)"];
"1000518" [label="(FieldIdentifier,cmsg_flags)"];
"1000527" [label="(Block,)"];
"1000358" [label="(Call,&timeo)"];
"1000160" [label="(Identifier,sk)"];
"1000525" [label="(Identifier,flags)"];
"1000355" [label="(ControlStructure,else)"];
"1000517" [label="(Identifier,sk)"];
"1000406" [label="(Call,rc = skb_copy_datagram_iovec(skb, offset,\n\t\t\t\t\t\t\t msg->msg_iov, used))"];
"1000290" [label="(ControlStructure,if (sock_flag(sk, SOCK_DONE)))"];
"1000133" [label="(Identifier,skb)"];
"1000485" [label="(JumpTarget,out:)"];
"1000401" [label="(Call,flags & MSG_TRUNC)"];
"1000429" [label="(Identifier,used)"];
"1000448" [label="(Block,)"];
"1000292" [label="(Identifier,sk)"];
"1000398" [label="(Identifier,len)"];
"1000524" [label="(Call,flags & MSG_PEEK)"];
"1000420" [label="(Identifier,copied)"];
"1000521" [label="(Identifier,skb)"];
"1000419" [label="(Call,!copied)"];
"1000482" [label="(Call,len > 0)"];
"1000410" [label="(Identifier,offset)"];
"1000388" [label="(Call,skb->len)"];
"1000130" [label="(Identifier,MSG_DONTWAIT)"];
"1000159" [label="(Call,lock_sock(sk))"];
"1000245" [label="(Identifier,offset)"];
"1000434" [label="(Identifier,len)"];
"1000402" [label="(Identifier,flags)"];
"1000208" [label="(Call,flags & MSG_WAITALL)"];
"1000435" [label="(Identifier,used)"];
"1000179" [label="(Call,timeo = sock_rcvtimeo(sk, nonblock))"];
"1000481" [label="(ControlStructure,continue;)"];
"1000418" [label="(ControlStructure,if (!copied))"];
"1000362" [label="(Call,flags & MSG_PEEK)"];
"1000293" [label="(Identifier,SOCK_DONE)"];
"1000215" [label="(ControlStructure,do)"];
"1000408" -> "1000406"  [label="AST: "];
"1000408" -> "1000414"  [label="CFG: "];
"1000409" -> "1000408"  [label="AST: "];
"1000410" -> "1000408"  [label="AST: "];
"1000411" -> "1000408"  [label="AST: "];
"1000414" -> "1000408"  [label="AST: "];
"1000406" -> "1000408"  [label="CFG: "];
"1000408" -> "1000553"  [label="DDG: msg->msg_iov"];
"1000408" -> "1000553"  [label="DDG: skb"];
"1000408" -> "1000553"  [label="DDG: used"];
"1000408" -> "1000553"  [label="DDG: offset"];
"1000408" -> "1000406"  [label="DDG: skb"];
"1000408" -> "1000406"  [label="DDG: offset"];
"1000408" -> "1000406"  [label="DDG: msg->msg_iov"];
"1000408" -> "1000406"  [label="DDG: used"];
"1000234" -> "1000408"  [label="DDG: skb"];
"1000387" -> "1000408"  [label="DDG: offset"];
"1000396" -> "1000408"  [label="DDG: used"];
"1000393" -> "1000408"  [label="DDG: used"];
"1000408" -> "1000426"  [label="DDG: used"];
"1000408" -> "1000430"  [label="DDG: used"];
"1000408" -> "1000433"  [label="DDG: used"];
"1000408" -> "1000457"  [label="DDG: skb"];
"1000408" -> "1000474"  [label="DDG: used"];
"1000408" -> "1000474"  [label="DDG: offset"];
"1000408" -> "1000475"  [label="DDG: used"];
"1000408" -> "1000475"  [label="DDG: offset"];
"1000408" -> "1000496"  [label="DDG: skb"];
"1000408" -> "1000502"  [label="DDG: skb"];
"1000408" -> "1000519"  [label="DDG: skb"];
"1000408" -> "1000536"  [label="DDG: skb"];
"1000234" -> "1000216"  [label="AST: "];
"1000234" -> "1000236"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000236" -> "1000234"  [label="AST: "];
"1000242" -> "1000234"  [label="CFG: "];
"1000234" -> "1000553"  [label="DDG: skb_peek(&sk->sk_receive_queue)"];
"1000234" -> "1000553"  [label="DDG: skb"];
"1000236" -> "1000234"  [label="DDG: &sk->sk_receive_queue"];
"1000234" -> "1000457"  [label="DDG: skb"];
"1000234" -> "1000496"  [label="DDG: skb"];
"1000234" -> "1000502"  [label="DDG: skb"];
"1000234" -> "1000519"  [label="DDG: skb"];
"1000234" -> "1000536"  [label="DDG: skb"];
"1000236" -> "1000237"  [label="CFG: "];
"1000237" -> "1000236"  [label="AST: "];
"1000236" -> "1000553"  [label="DDG: &sk->sk_receive_queue"];
"1000387" -> "1000385"  [label="AST: "];
"1000387" -> "1000391"  [label="CFG: "];
"1000388" -> "1000387"  [label="AST: "];
"1000391" -> "1000387"  [label="AST: "];
"1000385" -> "1000387"  [label="CFG: "];
"1000387" -> "1000553"  [label="DDG: skb->len"];
"1000387" -> "1000553"  [label="DDG: offset"];
"1000387" -> "1000385"  [label="DDG: skb->len"];
"1000387" -> "1000385"  [label="DDG: offset"];
"1000474" -> "1000387"  [label="DDG: skb->len"];
"1000244" -> "1000387"  [label="DDG: offset"];
"1000387" -> "1000474"  [label="DDG: offset"];
"1000387" -> "1000474"  [label="DDG: skb->len"];
"1000387" -> "1000475"  [label="DDG: offset"];
"1000474" -> "1000473"  [label="AST: "];
"1000474" -> "1000478"  [label="CFG: "];
"1000475" -> "1000474"  [label="AST: "];
"1000478" -> "1000474"  [label="AST: "];
"1000483" -> "1000474"  [label="CFG: "];
"1000481" -> "1000474"  [label="CFG: "];
"1000474" -> "1000553"  [label="DDG: used + offset < skb->len"];
"1000474" -> "1000553"  [label="DDG: used + offset"];
"1000474" -> "1000553"  [label="DDG: skb->len"];
"1000396" -> "1000474"  [label="DDG: used"];
"1000393" -> "1000474"  [label="DDG: used"];
"1000396" -> "1000392"  [label="AST: "];
"1000396" -> "1000398"  [label="CFG: "];
"1000397" -> "1000396"  [label="AST: "];
"1000398" -> "1000396"  [label="AST: "];
"1000402" -> "1000396"  [label="CFG: "];
"1000396" -> "1000553"  [label="DDG: len"];
"1000393" -> "1000396"  [label="DDG: len"];
"1000114" -> "1000396"  [label="DDG: len"];
"1000396" -> "1000426"  [label="DDG: used"];
"1000396" -> "1000430"  [label="DDG: used"];
"1000396" -> "1000433"  [label="DDG: used"];
"1000396" -> "1000475"  [label="DDG: used"];
"1000393" -> "1000392"  [label="AST: "];
"1000393" -> "1000395"  [label="CFG: "];
"1000394" -> "1000393"  [label="AST: "];
"1000395" -> "1000393"  [label="AST: "];
"1000397" -> "1000393"  [label="CFG: "];
"1000402" -> "1000393"  [label="CFG: "];
"1000393" -> "1000553"  [label="DDG: len"];
"1000393" -> "1000553"  [label="DDG: len < used"];
"1000206" -> "1000393"  [label="DDG: len"];
"1000482" -> "1000393"  [label="DDG: len"];
"1000114" -> "1000393"  [label="DDG: len"];
"1000385" -> "1000393"  [label="DDG: used"];
"1000393" -> "1000426"  [label="DDG: used"];
"1000393" -> "1000430"  [label="DDG: used"];
"1000393" -> "1000433"  [label="DDG: used"];
"1000393" -> "1000433"  [label="DDG: len"];
"1000393" -> "1000475"  [label="DDG: used"];
"1000206" -> "1000204"  [label="AST: "];
"1000206" -> "1000211"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000206"  [label="AST: "];
"1000211" -> "1000206"  [label="AST: "];
"1000204" -> "1000206"  [label="CFG: "];
"1000206" -> "1000553"  [label="DDG: flags & MSG_WAITALL"];
"1000206" -> "1000553"  [label="DDG: len"];
"1000206" -> "1000204"  [label="DDG: sk"];
"1000206" -> "1000204"  [label="DDG: flags & MSG_WAITALL"];
"1000206" -> "1000204"  [label="DDG: len"];
"1000181" -> "1000206"  [label="DDG: sk"];
"1000208" -> "1000206"  [label="DDG: flags"];
"1000208" -> "1000206"  [label="DDG: MSG_WAITALL"];
"1000114" -> "1000206"  [label="DDG: len"];
"1000206" -> "1000291"  [label="DDG: sk"];
"1000206" -> "1000351"  [label="DDG: sk"];
"1000206" -> "1000356"  [label="DDG: sk"];
"1000206" -> "1000457"  [label="DDG: sk"];
"1000206" -> "1000482"  [label="DDG: len"];
"1000206" -> "1000486"  [label="DDG: sk"];
"1000206" -> "1000516"  [label="DDG: sk"];
"1000181" -> "1000179"  [label="AST: "];
"1000181" -> "1000183"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000183" -> "1000181"  [label="AST: "];
"1000179" -> "1000181"  [label="CFG: "];
"1000181" -> "1000553"  [label="DDG: nonblock"];
"1000181" -> "1000179"  [label="DDG: sk"];
"1000181" -> "1000179"  [label="DDG: nonblock"];
"1000159" -> "1000181"  [label="DDG: sk"];
"1000126" -> "1000181"  [label="DDG: nonblock"];
"1000159" -> "1000116"  [label="AST: "];
"1000159" -> "1000160"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000162" -> "1000159"  [label="CFG: "];
"1000159" -> "1000553"  [label="DDG: lock_sock(sk)"];
"1000144" -> "1000159"  [label="DDG: sk"];
"1000159" -> "1000486"  [label="DDG: sk"];
"1000144" -> "1000142"  [label="AST: "];
"1000144" -> "1000145"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000144" -> "1000142"  [label="DDG: sk"];
"1000136" -> "1000144"  [label="DDG: sk"];
"1000136" -> "1000116"  [label="AST: "];
"1000136" -> "1000138"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000143" -> "1000136"  [label="CFG: "];
"1000136" -> "1000553"  [label="DDG: sock->sk"];
"1000126" -> "1000116"  [label="AST: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000128" -> "1000126"  [label="AST: "];
"1000133" -> "1000126"  [label="CFG: "];
"1000126" -> "1000553"  [label="DDG: nonblock"];
"1000126" -> "1000553"  [label="DDG: flags & MSG_DONTWAIT"];
"1000128" -> "1000126"  [label="DDG: flags"];
"1000128" -> "1000126"  [label="DDG: MSG_DONTWAIT"];
"1000128" -> "1000130"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000128"  [label="AST: "];
"1000128" -> "1000553"  [label="DDG: MSG_DONTWAIT"];
"1000128" -> "1000553"  [label="DDG: flags"];
"1000115" -> "1000128"  [label="DDG: flags"];
"1000128" -> "1000191"  [label="DDG: flags"];
"1000115" -> "1000110"  [label="AST: "];
"1000115" -> "1000553"  [label="DDG: flags"];
"1000115" -> "1000191"  [label="DDG: flags"];
"1000115" -> "1000208"  [label="DDG: flags"];
"1000115" -> "1000284"  [label="DDG: flags"];
"1000115" -> "1000362"  [label="DDG: flags"];
"1000115" -> "1000401"  [label="DDG: flags"];
"1000115" -> "1000445"  [label="DDG: flags"];
"1000115" -> "1000524"  [label="DDG: flags"];
"1000208" -> "1000210"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000210" -> "1000208"  [label="AST: "];
"1000211" -> "1000208"  [label="CFG: "];
"1000208" -> "1000553"  [label="DDG: flags"];
"1000208" -> "1000553"  [label="DDG: MSG_WAITALL"];
"1000191" -> "1000208"  [label="DDG: flags"];
"1000208" -> "1000284"  [label="DDG: flags"];
"1000208" -> "1000362"  [label="DDG: flags"];
"1000208" -> "1000401"  [label="DDG: flags"];
"1000191" -> "1000190"  [label="AST: "];
"1000191" -> "1000193"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000193" -> "1000191"  [label="AST: "];
"1000196" -> "1000191"  [label="CFG: "];
"1000205" -> "1000191"  [label="CFG: "];
"1000191" -> "1000553"  [label="DDG: flags & MSG_PEEK"];
"1000191" -> "1000553"  [label="DDG: MSG_PEEK"];
"1000191" -> "1000281"  [label="DDG: flags & MSG_PEEK"];
"1000191" -> "1000284"  [label="DDG: MSG_PEEK"];
"1000191" -> "1000362"  [label="DDG: MSG_PEEK"];
"1000191" -> "1000445"  [label="DDG: MSG_PEEK"];
"1000191" -> "1000524"  [label="DDG: MSG_PEEK"];
"1000114" -> "1000110"  [label="AST: "];
"1000114" -> "1000553"  [label="DDG: len"];
"1000114" -> "1000433"  [label="DDG: len"];
"1000114" -> "1000482"  [label="DDG: len"];
"1000482" -> "1000215"  [label="AST: "];
"1000482" -> "1000484"  [label="CFG: "];
"1000483" -> "1000482"  [label="AST: "];
"1000484" -> "1000482"  [label="AST: "];
"1000220" -> "1000482"  [label="CFG: "];
"1000485" -> "1000482"  [label="CFG: "];
"1000482" -> "1000553"  [label="DDG: len"];
"1000482" -> "1000553"  [label="DDG: len > 0"];
"1000433" -> "1000482"  [label="DDG: len"];
"1000433" -> "1000216"  [label="AST: "];
"1000433" -> "1000435"  [label="CFG: "];
"1000434" -> "1000433"  [label="AST: "];
"1000435" -> "1000433"  [label="AST: "];
"1000439" -> "1000433"  [label="CFG: "];
"1000433" -> "1000553"  [label="DDG: len"];
"1000433" -> "1000553"  [label="DDG: used"];
"1000385" -> "1000216"  [label="AST: "];
"1000386" -> "1000385"  [label="AST: "];
"1000394" -> "1000385"  [label="CFG: "];
"1000385" -> "1000553"  [label="DDG: skb->len - offset"];
"1000244" -> "1000243"  [label="AST: "];
"1000244" -> "1000246"  [label="CFG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000246" -> "1000244"  [label="AST: "];
"1000248" -> "1000244"  [label="CFG: "];
"1000244" -> "1000553"  [label="DDG: *seq"];
"1000426" -> "1000244"  [label="DDG: *seq"];
"1000469" -> "1000244"  [label="DDG: *seq"];
"1000426" -> "1000216"  [label="AST: "];
"1000426" -> "1000429"  [label="CFG: "];
"1000427" -> "1000426"  [label="AST: "];
"1000429" -> "1000426"  [label="AST: "];
"1000431" -> "1000426"  [label="CFG: "];
"1000426" -> "1000553"  [label="DDG: *seq"];
"1000469" -> "1000426"  [label="DDG: *seq"];
"1000469" -> "1000448"  [label="AST: "];
"1000469" -> "1000472"  [label="CFG: "];
"1000470" -> "1000469"  [label="AST: "];
"1000472" -> "1000469"  [label="AST: "];
"1000476" -> "1000469"  [label="CFG: "];
"1000469" -> "1000553"  [label="DDG: *seq"];
"1000406" -> "1000404"  [label="AST: "];
"1000407" -> "1000406"  [label="AST: "];
"1000416" -> "1000406"  [label="CFG: "];
"1000406" -> "1000553"  [label="DDG: rc"];
"1000406" -> "1000553"  [label="DDG: skb_copy_datagram_iovec(skb, offset,\n\t\t\t\t\t\t\t msg->msg_iov, used)"];
"1000430" -> "1000216"  [label="AST: "];
"1000430" -> "1000432"  [label="CFG: "];
"1000431" -> "1000430"  [label="AST: "];
"1000432" -> "1000430"  [label="AST: "];
"1000434" -> "1000430"  [label="CFG: "];
"1000430" -> "1000553"  [label="DDG: copied"];
"1000430" -> "1000251"  [label="DDG: copied"];
"1000430" -> "1000419"  [label="DDG: copied"];
"1000347" -> "1000430"  [label="DDG: copied"];
"1000212" -> "1000430"  [label="DDG: copied"];
"1000430" -> "1000488"  [label="DDG: copied"];
"1000251" -> "1000250"  [label="AST: "];
"1000251" -> "1000253"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="AST: "];
"1000257" -> "1000251"  [label="CFG: "];
"1000250" -> "1000251"  [label="CFG: "];
"1000251" -> "1000553"  [label="DDG: target"];
"1000251" -> "1000553"  [label="DDG: copied"];
"1000251" -> "1000250"  [label="DDG: copied"];
"1000251" -> "1000250"  [label="DDG: target"];
"1000347" -> "1000251"  [label="DDG: copied"];
"1000347" -> "1000251"  [label="DDG: target"];
"1000212" -> "1000251"  [label="DDG: copied"];
"1000204" -> "1000251"  [label="DDG: target"];
"1000251" -> "1000347"  [label="DDG: copied"];
"1000251" -> "1000347"  [label="DDG: target"];
"1000251" -> "1000488"  [label="DDG: copied"];
"1000250" -> "1000249"  [label="AST: "];
"1000250" -> "1000254"  [label="CFG: "];
"1000254" -> "1000250"  [label="AST: "];
"1000260" -> "1000250"  [label="CFG: "];
"1000262" -> "1000250"  [label="CFG: "];
"1000250" -> "1000553"  [label="DDG: copied >= target"];
"1000250" -> "1000553"  [label="DDG: !sk->sk_backlog.tail"];
"1000250" -> "1000553"  [label="DDG: copied >= target && !sk->sk_backlog.tail"];
"1000254" -> "1000250"  [label="DDG: sk->sk_backlog.tail"];
"1000347" -> "1000346"  [label="AST: "];
"1000347" -> "1000349"  [label="CFG: "];
"1000348" -> "1000347"  [label="AST: "];
"1000349" -> "1000347"  [label="AST: "];
"1000352" -> "1000347"  [label="CFG: "];
"1000357" -> "1000347"  [label="CFG: "];
"1000347" -> "1000553"  [label="DDG: target"];
"1000347" -> "1000553"  [label="DDG: copied"];
"1000347" -> "1000553"  [label="DDG: copied >= target"];
"1000347" -> "1000419"  [label="DDG: copied"];
"1000347" -> "1000488"  [label="DDG: copied"];
"1000419" -> "1000418"  [label="AST: "];
"1000419" -> "1000420"  [label="CFG: "];
"1000420" -> "1000419"  [label="AST: "];
"1000422" -> "1000419"  [label="CFG: "];
"1000425" -> "1000419"  [label="CFG: "];
"1000419" -> "1000553"  [label="DDG: copied"];
"1000419" -> "1000553"  [label="DDG: !copied"];
"1000212" -> "1000419"  [label="DDG: copied"];
"1000419" -> "1000488"  [label="DDG: copied"];
"1000488" -> "1000116"  [label="AST: "];
"1000488" -> "1000489"  [label="CFG: "];
"1000489" -> "1000488"  [label="AST: "];
"1000553" -> "1000488"  [label="CFG: "];
"1000488" -> "1000553"  [label="DDG: <RET>"];
"1000489" -> "1000488"  [label="DDG: copied"];
"1000225" -> "1000488"  [label="DDG: copied"];
"1000300" -> "1000488"  [label="DDG: copied"];
"1000421" -> "1000488"  [label="DDG: copied"];
"1000212" -> "1000488"  [label="DDG: copied"];
"1000161" -> "1000488"  [label="DDG: copied"];
"1000331" -> "1000488"  [label="DDG: copied"];
"1000341" -> "1000488"  [label="DDG: copied"];
"1000457" -> "1000448"  [label="AST: "];
"1000457" -> "1000460"  [label="CFG: "];
"1000458" -> "1000457"  [label="AST: "];
"1000459" -> "1000457"  [label="AST: "];
"1000460" -> "1000457"  [label="AST: "];
"1000465" -> "1000457"  [label="CFG: "];
"1000457" -> "1000553"  [label="DDG: false"];
"1000457" -> "1000553"  [label="DDG: skb"];
"1000457" -> "1000553"  [label="DDG: sk_eat_skb(sk, skb, false)"];
"1000457" -> "1000291"  [label="DDG: sk"];
"1000457" -> "1000351"  [label="DDG: sk"];
"1000457" -> "1000356"  [label="DDG: sk"];
"1000356" -> "1000457"  [label="DDG: sk"];
"1000353" -> "1000457"  [label="DDG: sk"];
"1000457" -> "1000486"  [label="DDG: sk"];
"1000457" -> "1000516"  [label="DDG: sk"];
"1000457" -> "1000536"  [label="DDG: false"];
"1000291" -> "1000290"  [label="AST: "];
"1000291" -> "1000293"  [label="CFG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000293" -> "1000291"  [label="AST: "];
"1000294" -> "1000291"  [label="CFG: "];
"1000297" -> "1000291"  [label="CFG: "];
"1000291" -> "1000553"  [label="DDG: sock_flag(sk, SOCK_DONE)"];
"1000291" -> "1000553"  [label="DDG: SOCK_DONE"];
"1000356" -> "1000291"  [label="DDG: sk"];
"1000353" -> "1000291"  [label="DDG: sk"];
"1000291" -> "1000302"  [label="DDG: sk"];
"1000291" -> "1000327"  [label="DDG: sk"];
"1000291" -> "1000327"  [label="DDG: SOCK_DONE"];
"1000291" -> "1000351"  [label="DDG: sk"];
"1000291" -> "1000356"  [label="DDG: sk"];
"1000291" -> "1000486"  [label="DDG: sk"];
"1000302" -> "1000300"  [label="AST: "];
"1000302" -> "1000303"  [label="CFG: "];
"1000303" -> "1000302"  [label="AST: "];
"1000300" -> "1000302"  [label="CFG: "];
"1000302" -> "1000300"  [label="DDG: sk"];
"1000302" -> "1000486"  [label="DDG: sk"];
"1000300" -> "1000299"  [label="AST: "];
"1000301" -> "1000300"  [label="AST: "];
"1000304" -> "1000300"  [label="CFG: "];
"1000300" -> "1000553"  [label="DDG: copied"];
"1000300" -> "1000553"  [label="DDG: sock_error(sk)"];
"1000486" -> "1000116"  [label="AST: "];
"1000486" -> "1000487"  [label="CFG: "];
"1000487" -> "1000486"  [label="AST: "];
"1000489" -> "1000486"  [label="CFG: "];
"1000486" -> "1000553"  [label="DDG: release_sock(sk)"];
"1000486" -> "1000553"  [label="DDG: sk"];
"1000327" -> "1000486"  [label="DDG: sk"];
"1000353" -> "1000486"  [label="DDG: sk"];
"1000516" -> "1000486"  [label="DDG: sk"];
"1000536" -> "1000486"  [label="DDG: sk"];
"1000356" -> "1000486"  [label="DDG: sk"];
"1000327" -> "1000326"  [label="AST: "];
"1000327" -> "1000329"  [label="CFG: "];
"1000328" -> "1000327"  [label="AST: "];
"1000329" -> "1000327"  [label="AST: "];
"1000326" -> "1000327"  [label="CFG: "];
"1000327" -> "1000553"  [label="DDG: SOCK_DONE"];
"1000327" -> "1000326"  [label="DDG: sk"];
"1000327" -> "1000326"  [label="DDG: SOCK_DONE"];
"1000326" -> "1000325"  [label="AST: "];
"1000332" -> "1000326"  [label="CFG: "];
"1000336" -> "1000326"  [label="CFG: "];
"1000326" -> "1000553"  [label="DDG: !sock_flag(sk, SOCK_DONE)"];
"1000326" -> "1000553"  [label="DDG: sock_flag(sk, SOCK_DONE)"];
"1000351" -> "1000350"  [label="AST: "];
"1000351" -> "1000352"  [label="CFG: "];
"1000352" -> "1000351"  [label="AST: "];
"1000354" -> "1000351"  [label="CFG: "];
"1000356" -> "1000351"  [label="DDG: sk"];
"1000353" -> "1000351"  [label="DDG: sk"];
"1000351" -> "1000353"  [label="DDG: sk"];
"1000353" -> "1000350"  [label="AST: "];
"1000353" -> "1000354"  [label="CFG: "];
"1000354" -> "1000353"  [label="AST: "];
"1000363" -> "1000353"  [label="CFG: "];
"1000353" -> "1000553"  [label="DDG: lock_sock(sk)"];
"1000353" -> "1000356"  [label="DDG: sk"];
"1000353" -> "1000516"  [label="DDG: sk"];
"1000356" -> "1000355"  [label="AST: "];
"1000356" -> "1000358"  [label="CFG: "];
"1000357" -> "1000356"  [label="AST: "];
"1000358" -> "1000356"  [label="AST: "];
"1000363" -> "1000356"  [label="CFG: "];
"1000356" -> "1000553"  [label="DDG: sk_wait_data(sk, &timeo)"];
"1000356" -> "1000553"  [label="DDG: &timeo"];
"1000356" -> "1000516"  [label="DDG: sk"];
"1000516" -> "1000515"  [label="AST: "];
"1000516" -> "1000517"  [label="CFG: "];
"1000517" -> "1000516"  [label="AST: "];
"1000518" -> "1000516"  [label="CFG: "];
"1000516" -> "1000536"  [label="DDG: sk"];
"1000536" -> "1000527"  [label="AST: "];
"1000536" -> "1000539"  [label="CFG: "];
"1000537" -> "1000536"  [label="AST: "];
"1000538" -> "1000536"  [label="AST: "];
"1000539" -> "1000536"  [label="AST: "];
"1000544" -> "1000536"  [label="CFG: "];
"1000536" -> "1000553"  [label="DDG: sk_eat_skb(sk, skb, false)"];
"1000536" -> "1000553"  [label="DDG: false"];
"1000536" -> "1000553"  [label="DDG: skb"];
"1000502" -> "1000536"  [label="DDG: skb"];
"1000496" -> "1000536"  [label="DDG: skb"];
"1000519" -> "1000536"  [label="DDG: skb"];
"1000475" -> "1000477"  [label="CFG: "];
"1000476" -> "1000475"  [label="AST: "];
"1000477" -> "1000475"  [label="AST: "];
"1000479" -> "1000475"  [label="CFG: "];
"1000475" -> "1000553"  [label="DDG: used"];
"1000475" -> "1000553"  [label="DDG: offset"];
"1000496" -> "1000492"  [label="AST: "];
"1000496" -> "1000498"  [label="CFG: "];
"1000497" -> "1000496"  [label="AST: "];
"1000498" -> "1000496"  [label="AST: "];
"1000492" -> "1000496"  [label="CFG: "];
"1000496" -> "1000553"  [label="DDG: NULL"];
"1000496" -> "1000553"  [label="DDG: skb"];
"1000496" -> "1000492"  [label="DDG: skb"];
"1000496" -> "1000492"  [label="DDG: NULL"];
"1000493" -> "1000496"  [label="DDG: NULL"];
"1000496" -> "1000502"  [label="DDG: skb"];
"1000496" -> "1000519"  [label="DDG: skb"];
"1000492" -> "1000491"  [label="AST: "];
"1000492" -> "1000493"  [label="CFG: "];
"1000493" -> "1000492"  [label="AST: "];
"1000501" -> "1000492"  [label="CFG: "];
"1000517" -> "1000492"  [label="CFG: "];
"1000492" -> "1000553"  [label="DDG: skb != NULL"];
"1000492" -> "1000553"  [label="DDG: uaddr != NULL"];
"1000492" -> "1000553"  [label="DDG: uaddr != NULL && skb != NULL"];
"1000493" -> "1000492"  [label="DDG: uaddr"];
"1000493" -> "1000492"  [label="DDG: NULL"];
"1000502" -> "1000500"  [label="AST: "];
"1000502" -> "1000503"  [label="CFG: "];
"1000503" -> "1000502"  [label="AST: "];
"1000506" -> "1000502"  [label="CFG: "];
"1000502" -> "1000553"  [label="DDG: skb"];
"1000502" -> "1000500"  [label="DDG: skb"];
"1000502" -> "1000519"  [label="DDG: skb"];
"1000500" -> "1000499"  [label="AST: "];
"1000500" -> "1000504"  [label="CFG: "];
"1000501" -> "1000500"  [label="AST: "];
"1000504" -> "1000500"  [label="AST: "];
"1000509" -> "1000500"  [label="CFG: "];
"1000500" -> "1000553"  [label="DDG: llc_ui_skb_cb(skb)"];
"1000500" -> "1000553"  [label="DDG: memcpy(uaddr, llc_ui_skb_cb(skb), sizeof(*uaddr))"];
"1000500" -> "1000553"  [label="DDG: uaddr"];
"1000493" -> "1000500"  [label="DDG: uaddr"];
"1000519" -> "1000514"  [label="AST: "];
"1000519" -> "1000521"  [label="CFG: "];
"1000520" -> "1000519"  [label="AST: "];
"1000521" -> "1000519"  [label="AST: "];
"1000525" -> "1000519"  [label="CFG: "];
"1000519" -> "1000553"  [label="DDG: msg"];
"1000519" -> "1000553"  [label="DDG: llc_cmsg_rcv(msg, skb)"];
"1000519" -> "1000553"  [label="DDG: skb"];
"1000113" -> "1000519"  [label="DDG: msg"];
}
