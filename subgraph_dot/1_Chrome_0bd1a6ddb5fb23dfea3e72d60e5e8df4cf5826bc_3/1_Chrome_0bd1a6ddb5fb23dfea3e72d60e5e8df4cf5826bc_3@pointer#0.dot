digraph "1_Chrome_0bd1a6ddb5fb23dfea3e72d60e5e8df4cf5826bc_3@pointer" {
"1000141" [label="(Call,address == kInvalidAddress)"];
"1000130" [label="(Call,* address = shmat(shmkey, NULL /* desired address */, 0 /* flags */))"];
"1000132" [label="(Call,shmat(shmkey, NULL /* desired address */, 0 /* flags */))"];
"1000114" [label="(Call,shmkey == -1)"];
"1000107" [label="(Call,shmkey = shmget(IPC_PRIVATE, size, 0666))"];
"1000109" [label="(Call,shmget(IPC_PRIVATE, size, 0666))"];
"1000103" [label="(MethodParameterIn,size_t size)"];
"1000116" [label="(Call,-1)"];
"1000154" [label="(Call,dib->address_ = address)"];
"1000133" [label="(Identifier,shmkey)"];
"1000140" [label="(ControlStructure,if (address == kInvalidAddress))"];
"1000110" [label="(Identifier,IPC_PRIVATE)"];
"1000154" [label="(Call,dib->address_ = address)"];
"1000116" [label="(Call,-1)"];
"1000117" [label="(Literal,1)"];
"1000109" [label="(Call,shmget(IPC_PRIVATE, size, 0666))"];
"1000159" [label="(Call,dib->size_ = size)"];
"1000155" [label="(Call,dib->address_)"];
"1000161" [label="(Identifier,dib)"];
"1000136" [label="(Call,shmctl(shmkey, IPC_RMID, 0))"];
"1000113" [label="(ControlStructure,if (shmkey == -1))"];
"1000142" [label="(Identifier,address)"];
"1000112" [label="(Literal,0666)"];
"1000145" [label="(Identifier,NULL)"];
"1000103" [label="(MethodParameterIn,size_t size)"];
"1000130" [label="(Call,* address = shmat(shmkey, NULL /* desired address */, 0 /* flags */))"];
"1000121" [label="(Identifier,ERROR)"];
"1000144" [label="(Return,return NULL;)"];
"1000146" [label="(Identifier,TransportDIB)"];
"1000114" [label="(Call,shmkey == -1)"];
"1000135" [label="(Literal,0)"];
"1000132" [label="(Call,shmat(shmkey, NULL /* desired address */, 0 /* flags */))"];
"1000158" [label="(Identifier,address)"];
"1000166" [label="(MethodReturn,TransportDIB*)"];
"1000131" [label="(Identifier,address)"];
"1000107" [label="(Call,shmkey = shmget(IPC_PRIVATE, size, 0666))"];
"1000111" [label="(Identifier,size)"];
"1000108" [label="(Identifier,shmkey)"];
"1000141" [label="(Call,address == kInvalidAddress)"];
"1000134" [label="(Identifier,NULL)"];
"1000137" [label="(Identifier,shmkey)"];
"1000105" [label="(Block,)"];
"1000115" [label="(Identifier,shmkey)"];
"1000143" [label="(Identifier,kInvalidAddress)"];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000145" -> "1000141"  [label="CFG: "];
"1000146" -> "1000141"  [label="CFG: "];
"1000141" -> "1000166"  [label="DDG: address"];
"1000141" -> "1000166"  [label="DDG: address == kInvalidAddress"];
"1000141" -> "1000166"  [label="DDG: kInvalidAddress"];
"1000130" -> "1000141"  [label="DDG: address"];
"1000141" -> "1000154"  [label="DDG: address"];
"1000130" -> "1000105"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000137" -> "1000130"  [label="CFG: "];
"1000130" -> "1000166"  [label="DDG: shmat(shmkey, NULL /* desired address */, 0 /* flags */)"];
"1000132" -> "1000130"  [label="DDG: shmkey"];
"1000132" -> "1000130"  [label="DDG: NULL"];
"1000132" -> "1000130"  [label="DDG: 0"];
"1000132" -> "1000135"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="AST: "];
"1000135" -> "1000132"  [label="AST: "];
"1000132" -> "1000166"  [label="DDG: NULL"];
"1000114" -> "1000132"  [label="DDG: shmkey"];
"1000132" -> "1000136"  [label="DDG: shmkey"];
"1000132" -> "1000144"  [label="DDG: NULL"];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000116"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000121" -> "1000114"  [label="CFG: "];
"1000131" -> "1000114"  [label="CFG: "];
"1000114" -> "1000166"  [label="DDG: shmkey == -1"];
"1000114" -> "1000166"  [label="DDG: shmkey"];
"1000114" -> "1000166"  [label="DDG: -1"];
"1000107" -> "1000114"  [label="DDG: shmkey"];
"1000116" -> "1000114"  [label="DDG: 1"];
"1000107" -> "1000105"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000115" -> "1000107"  [label="CFG: "];
"1000107" -> "1000166"  [label="DDG: shmget(IPC_PRIVATE, size, 0666)"];
"1000109" -> "1000107"  [label="DDG: IPC_PRIVATE"];
"1000109" -> "1000107"  [label="DDG: size"];
"1000109" -> "1000107"  [label="DDG: 0666"];
"1000109" -> "1000112"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000112" -> "1000109"  [label="AST: "];
"1000109" -> "1000166"  [label="DDG: IPC_PRIVATE"];
"1000109" -> "1000166"  [label="DDG: size"];
"1000103" -> "1000109"  [label="DDG: size"];
"1000109" -> "1000159"  [label="DDG: size"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000166"  [label="DDG: size"];
"1000103" -> "1000159"  [label="DDG: size"];
"1000116" -> "1000117"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000154" -> "1000105"  [label="AST: "];
"1000154" -> "1000158"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000158" -> "1000154"  [label="AST: "];
"1000161" -> "1000154"  [label="CFG: "];
"1000154" -> "1000166"  [label="DDG: dib->address_"];
"1000154" -> "1000166"  [label="DDG: address"];
}
