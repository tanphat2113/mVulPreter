digraph "0_linux_bc3aae2bbac46dd894c89db5d5e98f7f0ef9e205@pointer" {
"1000357" [label="(Call,rt = skb_rtable(skb))"];
"1000359" [label="(Call,skb_rtable(skb))"];
"1000347" [label="(Call,ip_route_input_rcu(skb, dst, src, rtm->rtm_tos,\n\t\t\t\t\t dev, &res))"];
"1000258" [label="(Call,skb_reserve(skb, MAX_HEADER + sizeof(struct iphdr)))"];
"1000254" [label="(Call,ip_hdr(skb))"];
"1000248" [label="(Call,ip_hdr(skb))"];
"1000242" [label="(Call,ip_hdr(skb))"];
"1000175" [label="(Call,skb_reset_network_header(skb))"];
"1000173" [label="(Call,skb_reset_mac_header(skb))"];
"1000165" [label="(Call,!skb)"];
"1000159" [label="(Call,skb = alloc_skb(NLMSG_GOODSIZE, GFP_KERNEL))"];
"1000161" [label="(Call,alloc_skb(NLMSG_GOODSIZE, GFP_KERNEL))"];
"1000188" [label="(Call,dst = tb[RTA_DST] ? nla_get_in_addr(tb[RTA_DST]) : 0)"];
"1000194" [label="(Call,nla_get_in_addr(tb[RTA_DST]))"];
"1000141" [label="(Call,nlmsg_parse(nlh, sizeof(*rtm), tb, RTA_MAX, rtm_ipv4_policy,\n\t\t\t  extack))"];
"1000104" [label="(MethodParameterIn,struct nlmsghdr *nlh)"];
"1000105" [label="(MethodParameterIn,struct netlink_ext_ack *extack)"];
"1000177" [label="(Call,src = tb[RTA_SRC] ? nla_get_in_addr(tb[RTA_SRC]) : 0)"];
"1000183" [label="(Call,nla_get_in_addr(tb[RTA_SRC]))"];
"1000321" [label="(Call,!dev)"];
"1000315" [label="(Call,dev = dev_get_by_index_rcu(net, iif))"];
"1000317" [label="(Call,dev_get_by_index_rcu(net, iif))"];
"1000108" [label="(Call,*net = sock_net(in_skb->sk))"];
"1000110" [label="(Call,sock_net(in_skb->sk))"];
"1000199" [label="(Call,iif = tb[RTA_IIF] ? nla_get_u32(tb[RTA_IIF]) : 0)"];
"1000205" [label="(Call,nla_get_u32(tb[RTA_IIF]))"];
"1000345" [label="(Call,err = ip_route_input_rcu(skb, dst, src, rtm->rtm_tos,\n\t\t\t\t\t dev, &res))"];
"1000195" [label="(Call,tb[RTA_DST])"];
"1000104" [label="(MethodParameterIn,struct nlmsghdr *nlh)"];
"1000110" [label="(Call,sock_net(in_skb->sk))"];
"1000178" [label="(Identifier,src)"];
"1000270" [label="(Call,fl4.daddr = dst)"];
"1000105" [label="(MethodParameterIn,struct netlink_ext_ack *extack)"];
"1000162" [label="(Identifier,NLMSG_GOODSIZE)"];
"1000248" [label="(Call,ip_hdr(skb))"];
"1000351" [label="(Call,rtm->rtm_tos)"];
"1000242" [label="(Call,ip_hdr(skb))"];
"1000175" [label="(Call,skb_reset_network_header(skb))"];
"1000194" [label="(Call,nla_get_in_addr(tb[RTA_DST]))"];
"1000176" [label="(Identifier,skb)"];
"1000260" [label="(Call,MAX_HEADER + sizeof(struct iphdr))"];
"1000253" [label="(Call,ip_hdr(skb)->daddr)"];
"1000188" [label="(Call,dst = tb[RTA_DST] ? nla_get_in_addr(tb[RTA_DST]) : 0)"];
"1000355" [label="(Call,&res)"];
"1000321" [label="(Call,!dev)"];
"1000256" [label="(FieldIdentifier,daddr)"];
"1000275" [label="(Call,fl4.saddr = src)"];
"1000320" [label="(ControlStructure,if (!dev))"];
"1000246" [label="(Call,ip_hdr(skb)->saddr = src)"];
"1000243" [label="(Identifier,skb)"];
"1000316" [label="(Identifier,dev)"];
"1000530" [label="(Call,kfree_skb(skb))"];
"1000165" [label="(Call,!skb)"];
"1000331" [label="(Identifier,skb)"];
"1000247" [label="(Call,ip_hdr(skb)->saddr)"];
"1000313" [label="(Block,)"];
"1000216" [label="(Call,nla_get_u32(tb[RTA_MARK]))"];
"1000360" [label="(Identifier,skb)"];
"1000147" [label="(Identifier,RTA_MAX)"];
"1000148" [label="(Identifier,rtm_ipv4_policy)"];
"1000319" [label="(Identifier,iif)"];
"1000177" [label="(Call,src = tb[RTA_SRC] ? nla_get_in_addr(tb[RTA_SRC]) : 0)"];
"1000359" [label="(Call,skb_rtable(skb))"];
"1000106" [label="(Block,)"];
"1000146" [label="(Identifier,tb)"];
"1000357" [label="(Call,rt = skb_rtable(skb))"];
"1000161" [label="(Call,alloc_skb(NLMSG_GOODSIZE, GFP_KERNEL))"];
"1000111" [label="(Call,in_skb->sk)"];
"1000533" [label="(MethodReturn,static int)"];
"1000149" [label="(Identifier,extack)"];
"1000315" [label="(Call,dev = dev_get_by_index_rcu(net, iif))"];
"1000139" [label="(Call,err = nlmsg_parse(nlh, sizeof(*rtm), tb, RTA_MAX, rtm_ipv4_policy,\n\t\t\t  extack))"];
"1000163" [label="(Identifier,GFP_KERNEL)"];
"1000108" [label="(Call,*net = sock_net(in_skb->sk))"];
"1000250" [label="(FieldIdentifier,saddr)"];
"1000350" [label="(Identifier,src)"];
"1000295" [label="(Call,nla_get_u32(tb[RTA_OIF]))"];
"1000383" [label="(Call,ip_route_output_key_hash_rcu(net, &fl4, &res, skb))"];
"1000206" [label="(Call,tb[RTA_IIF])"];
"1000318" [label="(Identifier,net)"];
"1000335" [label="(Call,skb->dev\t= dev)"];
"1000358" [label="(Identifier,rt)"];
"1000164" [label="(ControlStructure,if (!skb))"];
"1000266" [label="(Identifier,fl4)"];
"1000325" [label="(Identifier,err)"];
"1000200" [label="(Identifier,iif)"];
"1000249" [label="(Identifier,skb)"];
"1000119" [label="(Identifier,rt)"];
"1000184" [label="(Call,tb[RTA_SRC])"];
"1000244" [label="(FieldIdentifier,protocol)"];
"1000229" [label="(Call,nla_get_u32(tb[RTA_UID]))"];
"1000166" [label="(Identifier,skb)"];
"1000348" [label="(Identifier,skb)"];
"1000143" [label="(Call,sizeof(*rtm))"];
"1000190" [label="(Call,tb[RTA_DST] ? nla_get_in_addr(tb[RTA_DST]) : 0)"];
"1000258" [label="(Call,skb_reserve(skb, MAX_HEADER + sizeof(struct iphdr)))"];
"1000160" [label="(Identifier,skb)"];
"1000241" [label="(Call,ip_hdr(skb)->protocol)"];
"1000322" [label="(Identifier,dev)"];
"1000349" [label="(Identifier,dst)"];
"1000464" [label="(Call,fib_dump_info(skb, NETLINK_CB(in_skb).portid,\n \t\t\t\t    nlh->nlmsg_seq, RTM_NEWROUTE, table_id,\n \t\t\t\t    rt->rt_type, res.prefix, res.prefixlen,\n \t\t\t\t    fl4.flowi4_tos, res.fi, 0))"];
"1000354" [label="(Identifier,dev)"];
"1000157" [label="(Call,nlmsg_data(nlh))"];
"1000211" [label="(Identifier,mark)"];
"1000179" [label="(Call,tb[RTA_SRC] ? nla_get_in_addr(tb[RTA_SRC]) : 0)"];
"1000495" [label="(Call,rt_fill_info(net, dst, src, table_id, &fl4, skb,\n \t\t\t\t   NETLINK_CB(in_skb).portid, nlh->nlmsg_seq))"];
"1000183" [label="(Call,nla_get_in_addr(tb[RTA_SRC]))"];
"1000317" [label="(Call,dev_get_by_index_rcu(net, iif))"];
"1000255" [label="(Identifier,skb)"];
"1000201" [label="(Call,tb[RTA_IIF] ? nla_get_u32(tb[RTA_IIF]) : 0)"];
"1000169" [label="(Identifier,err)"];
"1000259" [label="(Identifier,skb)"];
"1000199" [label="(Call,iif = tb[RTA_IIF] ? nla_get_u32(tb[RTA_IIF]) : 0)"];
"1000205" [label="(Call,nla_get_u32(tb[RTA_IIF]))"];
"1000174" [label="(Identifier,skb)"];
"1000518" [label="(Call,rtnl_unicast(skb, net, NETLINK_CB(in_skb).portid))"];
"1000159" [label="(Call,skb = alloc_skb(NLMSG_GOODSIZE, GFP_KERNEL))"];
"1000142" [label="(Identifier,nlh)"];
"1000109" [label="(Identifier,net)"];
"1000252" [label="(Call,ip_hdr(skb)->daddr = dst)"];
"1000347" [label="(Call,ip_route_input_rcu(skb, dst, src, rtm->rtm_tos,\n\t\t\t\t\t dev, &res))"];
"1000141" [label="(Call,nlmsg_parse(nlh, sizeof(*rtm), tb, RTA_MAX, rtm_ipv4_policy,\n\t\t\t  extack))"];
"1000254" [label="(Call,ip_hdr(skb))"];
"1000189" [label="(Identifier,dst)"];
"1000173" [label="(Call,skb_reset_mac_header(skb))"];
"1000364" [label="(Identifier,err)"];
"1000357" -> "1000313"  [label="AST: "];
"1000357" -> "1000359"  [label="CFG: "];
"1000358" -> "1000357"  [label="AST: "];
"1000359" -> "1000357"  [label="AST: "];
"1000364" -> "1000357"  [label="CFG: "];
"1000357" -> "1000533"  [label="DDG: rt"];
"1000357" -> "1000533"  [label="DDG: skb_rtable(skb)"];
"1000359" -> "1000357"  [label="DDG: skb"];
"1000359" -> "1000360"  [label="CFG: "];
"1000360" -> "1000359"  [label="AST: "];
"1000347" -> "1000359"  [label="DDG: skb"];
"1000359" -> "1000464"  [label="DDG: skb"];
"1000359" -> "1000495"  [label="DDG: skb"];
"1000359" -> "1000530"  [label="DDG: skb"];
"1000347" -> "1000345"  [label="AST: "];
"1000347" -> "1000355"  [label="CFG: "];
"1000348" -> "1000347"  [label="AST: "];
"1000349" -> "1000347"  [label="AST: "];
"1000350" -> "1000347"  [label="AST: "];
"1000351" -> "1000347"  [label="AST: "];
"1000354" -> "1000347"  [label="AST: "];
"1000355" -> "1000347"  [label="AST: "];
"1000345" -> "1000347"  [label="CFG: "];
"1000347" -> "1000533"  [label="DDG: dst"];
"1000347" -> "1000533"  [label="DDG: rtm->rtm_tos"];
"1000347" -> "1000533"  [label="DDG: src"];
"1000347" -> "1000533"  [label="DDG: dev"];
"1000347" -> "1000533"  [label="DDG: &res"];
"1000347" -> "1000345"  [label="DDG: dst"];
"1000347" -> "1000345"  [label="DDG: skb"];
"1000347" -> "1000345"  [label="DDG: &res"];
"1000347" -> "1000345"  [label="DDG: dev"];
"1000347" -> "1000345"  [label="DDG: rtm->rtm_tos"];
"1000347" -> "1000345"  [label="DDG: src"];
"1000258" -> "1000347"  [label="DDG: skb"];
"1000188" -> "1000347"  [label="DDG: dst"];
"1000177" -> "1000347"  [label="DDG: src"];
"1000321" -> "1000347"  [label="DDG: dev"];
"1000347" -> "1000495"  [label="DDG: dst"];
"1000347" -> "1000495"  [label="DDG: src"];
"1000258" -> "1000106"  [label="AST: "];
"1000258" -> "1000260"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000260" -> "1000258"  [label="AST: "];
"1000266" -> "1000258"  [label="CFG: "];
"1000258" -> "1000533"  [label="DDG: MAX_HEADER + sizeof(struct iphdr)"];
"1000258" -> "1000533"  [label="DDG: skb_reserve(skb, MAX_HEADER + sizeof(struct iphdr))"];
"1000254" -> "1000258"  [label="DDG: skb"];
"1000258" -> "1000383"  [label="DDG: skb"];
"1000258" -> "1000530"  [label="DDG: skb"];
"1000254" -> "1000253"  [label="AST: "];
"1000254" -> "1000255"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000256" -> "1000254"  [label="CFG: "];
"1000248" -> "1000254"  [label="DDG: skb"];
"1000248" -> "1000247"  [label="AST: "];
"1000248" -> "1000249"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="CFG: "];
"1000242" -> "1000248"  [label="DDG: skb"];
"1000242" -> "1000241"  [label="AST: "];
"1000242" -> "1000243"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000244" -> "1000242"  [label="CFG: "];
"1000175" -> "1000242"  [label="DDG: skb"];
"1000175" -> "1000106"  [label="AST: "];
"1000175" -> "1000176"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000178" -> "1000175"  [label="CFG: "];
"1000175" -> "1000533"  [label="DDG: skb_reset_network_header(skb)"];
"1000173" -> "1000175"  [label="DDG: skb"];
"1000173" -> "1000106"  [label="AST: "];
"1000173" -> "1000174"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000176" -> "1000173"  [label="CFG: "];
"1000173" -> "1000533"  [label="DDG: skb_reset_mac_header(skb)"];
"1000165" -> "1000173"  [label="DDG: skb"];
"1000165" -> "1000164"  [label="AST: "];
"1000165" -> "1000166"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000169" -> "1000165"  [label="CFG: "];
"1000174" -> "1000165"  [label="CFG: "];
"1000165" -> "1000533"  [label="DDG: skb"];
"1000165" -> "1000533"  [label="DDG: !skb"];
"1000159" -> "1000165"  [label="DDG: skb"];
"1000159" -> "1000106"  [label="AST: "];
"1000159" -> "1000161"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000161" -> "1000159"  [label="AST: "];
"1000166" -> "1000159"  [label="CFG: "];
"1000159" -> "1000533"  [label="DDG: alloc_skb(NLMSG_GOODSIZE, GFP_KERNEL)"];
"1000161" -> "1000159"  [label="DDG: NLMSG_GOODSIZE"];
"1000161" -> "1000159"  [label="DDG: GFP_KERNEL"];
"1000161" -> "1000163"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000161" -> "1000533"  [label="DDG: GFP_KERNEL"];
"1000161" -> "1000533"  [label="DDG: NLMSG_GOODSIZE"];
"1000188" -> "1000106"  [label="AST: "];
"1000188" -> "1000190"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000188"  [label="AST: "];
"1000200" -> "1000188"  [label="CFG: "];
"1000188" -> "1000533"  [label="DDG: tb[RTA_DST] ? nla_get_in_addr(tb[RTA_DST]) : 0"];
"1000194" -> "1000188"  [label="DDG: tb[RTA_DST]"];
"1000188" -> "1000252"  [label="DDG: dst"];
"1000188" -> "1000270"  [label="DDG: dst"];
"1000188" -> "1000495"  [label="DDG: dst"];
"1000194" -> "1000190"  [label="AST: "];
"1000194" -> "1000195"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000190" -> "1000194"  [label="CFG: "];
"1000194" -> "1000190"  [label="DDG: tb[RTA_DST]"];
"1000141" -> "1000194"  [label="DDG: tb"];
"1000141" -> "1000139"  [label="AST: "];
"1000141" -> "1000149"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000146" -> "1000141"  [label="AST: "];
"1000147" -> "1000141"  [label="AST: "];
"1000148" -> "1000141"  [label="AST: "];
"1000149" -> "1000141"  [label="AST: "];
"1000139" -> "1000141"  [label="CFG: "];
"1000141" -> "1000533"  [label="DDG: nlh"];
"1000141" -> "1000533"  [label="DDG: extack"];
"1000141" -> "1000533"  [label="DDG: rtm_ipv4_policy"];
"1000141" -> "1000533"  [label="DDG: tb"];
"1000141" -> "1000533"  [label="DDG: RTA_MAX"];
"1000141" -> "1000139"  [label="DDG: RTA_MAX"];
"1000141" -> "1000139"  [label="DDG: nlh"];
"1000141" -> "1000139"  [label="DDG: extack"];
"1000141" -> "1000139"  [label="DDG: tb"];
"1000141" -> "1000139"  [label="DDG: rtm_ipv4_policy"];
"1000104" -> "1000141"  [label="DDG: nlh"];
"1000105" -> "1000141"  [label="DDG: extack"];
"1000141" -> "1000157"  [label="DDG: nlh"];
"1000141" -> "1000183"  [label="DDG: tb"];
"1000141" -> "1000205"  [label="DDG: tb"];
"1000141" -> "1000216"  [label="DDG: tb"];
"1000141" -> "1000229"  [label="DDG: tb"];
"1000141" -> "1000295"  [label="DDG: tb"];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1000533"  [label="DDG: nlh"];
"1000104" -> "1000157"  [label="DDG: nlh"];
"1000105" -> "1000102"  [label="AST: "];
"1000105" -> "1000533"  [label="DDG: extack"];
"1000177" -> "1000106"  [label="AST: "];
"1000177" -> "1000179"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000179" -> "1000177"  [label="AST: "];
"1000189" -> "1000177"  [label="CFG: "];
"1000177" -> "1000533"  [label="DDG: tb[RTA_SRC] ? nla_get_in_addr(tb[RTA_SRC]) : 0"];
"1000183" -> "1000177"  [label="DDG: tb[RTA_SRC]"];
"1000177" -> "1000246"  [label="DDG: src"];
"1000177" -> "1000275"  [label="DDG: src"];
"1000177" -> "1000495"  [label="DDG: src"];
"1000183" -> "1000179"  [label="AST: "];
"1000183" -> "1000184"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000179" -> "1000183"  [label="CFG: "];
"1000183" -> "1000179"  [label="DDG: tb[RTA_SRC]"];
"1000321" -> "1000320"  [label="AST: "];
"1000321" -> "1000322"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000325" -> "1000321"  [label="CFG: "];
"1000331" -> "1000321"  [label="CFG: "];
"1000321" -> "1000533"  [label="DDG: dev"];
"1000321" -> "1000533"  [label="DDG: !dev"];
"1000315" -> "1000321"  [label="DDG: dev"];
"1000321" -> "1000335"  [label="DDG: dev"];
"1000315" -> "1000313"  [label="AST: "];
"1000315" -> "1000317"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000317" -> "1000315"  [label="AST: "];
"1000322" -> "1000315"  [label="CFG: "];
"1000315" -> "1000533"  [label="DDG: dev_get_by_index_rcu(net, iif)"];
"1000317" -> "1000315"  [label="DDG: net"];
"1000317" -> "1000315"  [label="DDG: iif"];
"1000317" -> "1000319"  [label="CFG: "];
"1000318" -> "1000317"  [label="AST: "];
"1000319" -> "1000317"  [label="AST: "];
"1000317" -> "1000533"  [label="DDG: net"];
"1000317" -> "1000533"  [label="DDG: iif"];
"1000108" -> "1000317"  [label="DDG: net"];
"1000199" -> "1000317"  [label="DDG: iif"];
"1000317" -> "1000495"  [label="DDG: net"];
"1000317" -> "1000518"  [label="DDG: net"];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000110"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000110" -> "1000108"  [label="AST: "];
"1000119" -> "1000108"  [label="CFG: "];
"1000108" -> "1000533"  [label="DDG: sock_net(in_skb->sk)"];
"1000108" -> "1000533"  [label="DDG: net"];
"1000110" -> "1000108"  [label="DDG: in_skb->sk"];
"1000108" -> "1000383"  [label="DDG: net"];
"1000110" -> "1000111"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000110" -> "1000533"  [label="DDG: in_skb->sk"];
"1000199" -> "1000106"  [label="AST: "];
"1000199" -> "1000201"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000201" -> "1000199"  [label="AST: "];
"1000211" -> "1000199"  [label="CFG: "];
"1000199" -> "1000533"  [label="DDG: tb[RTA_IIF] ? nla_get_u32(tb[RTA_IIF]) : 0"];
"1000199" -> "1000533"  [label="DDG: iif"];
"1000205" -> "1000199"  [label="DDG: tb[RTA_IIF]"];
"1000205" -> "1000201"  [label="AST: "];
"1000205" -> "1000206"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000201" -> "1000205"  [label="CFG: "];
"1000205" -> "1000201"  [label="DDG: tb[RTA_IIF]"];
}
