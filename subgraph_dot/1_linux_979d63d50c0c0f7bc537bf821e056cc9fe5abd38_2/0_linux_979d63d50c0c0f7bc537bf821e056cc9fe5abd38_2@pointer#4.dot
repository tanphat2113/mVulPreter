digraph "0_linux_979d63d50c0c0f7bc537bf821e056cc9fe5abd38_2@pointer" {
"1000528" [label="(Call,reg_type_mismatch(src_reg_type, *prev_src_type))"];
"1000469" [label="(Call,src_reg_type = regs[insn->src_reg].type)"];
"1000517" [label="(Call,*prev_src_type == NOT_INIT)"];
"1000530" [label="(Call,*prev_src_type)"];
"1000471" [label="(Call,regs[insn->src_reg].type)"];
"1000528" [label="(Call,reg_type_mismatch(src_reg_type, *prev_src_type))"];
"1000520" [label="(Identifier,NOT_INIT)"];
"1000529" [label="(Identifier,src_reg_type)"];
"1000534" [label="(Identifier,env)"];
"1001153" [label="(MethodReturn,static int)"];
"1000470" [label="(Identifier,src_reg_type)"];
"1000546" [label="(Identifier,insn)"];
"1000516" [label="(ControlStructure,if (*prev_src_type == NOT_INIT))"];
"1000524" [label="(Identifier,prev_src_type)"];
"1000469" [label="(Call,src_reg_type = regs[insn->src_reg].type)"];
"1000479" [label="(Identifier,err)"];
"1000639" [label="(Call,*prev_dst_type == NOT_INIT)"];
"1000522" [label="(Call,*prev_src_type = src_reg_type)"];
"1000518" [label="(Call,*prev_src_type)"];
"1000527" [label="(ControlStructure,if (reg_type_mismatch(src_reg_type, *prev_src_type)))"];
"1000517" [label="(Call,*prev_src_type == NOT_INIT)"];
"1000442" [label="(Block,)"];
"1000528" -> "1000527"  [label="AST: "];
"1000528" -> "1000530"  [label="CFG: "];
"1000529" -> "1000528"  [label="AST: "];
"1000530" -> "1000528"  [label="AST: "];
"1000534" -> "1000528"  [label="CFG: "];
"1000546" -> "1000528"  [label="CFG: "];
"1000528" -> "1001153"  [label="DDG: reg_type_mismatch(src_reg_type, *prev_src_type)"];
"1000528" -> "1001153"  [label="DDG: *prev_src_type"];
"1000528" -> "1001153"  [label="DDG: src_reg_type"];
"1000469" -> "1000528"  [label="DDG: src_reg_type"];
"1000517" -> "1000528"  [label="DDG: *prev_src_type"];
"1000469" -> "1000442"  [label="AST: "];
"1000469" -> "1000471"  [label="CFG: "];
"1000470" -> "1000469"  [label="AST: "];
"1000471" -> "1000469"  [label="AST: "];
"1000479" -> "1000469"  [label="CFG: "];
"1000469" -> "1001153"  [label="DDG: regs[insn->src_reg].type"];
"1000469" -> "1001153"  [label="DDG: src_reg_type"];
"1000469" -> "1000522"  [label="DDG: src_reg_type"];
"1000517" -> "1000516"  [label="AST: "];
"1000517" -> "1000520"  [label="CFG: "];
"1000518" -> "1000517"  [label="AST: "];
"1000520" -> "1000517"  [label="AST: "];
"1000524" -> "1000517"  [label="CFG: "];
"1000529" -> "1000517"  [label="CFG: "];
"1000517" -> "1001153"  [label="DDG: NOT_INIT"];
"1000517" -> "1001153"  [label="DDG: *prev_src_type == NOT_INIT"];
"1000517" -> "1000639"  [label="DDG: NOT_INIT"];
}
