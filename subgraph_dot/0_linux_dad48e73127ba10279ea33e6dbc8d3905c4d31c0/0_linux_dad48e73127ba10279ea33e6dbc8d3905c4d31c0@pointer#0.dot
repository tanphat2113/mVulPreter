digraph "0_linux_dad48e73127ba10279ea33e6dbc8d3905c4d31c0@pointer" {
"1000108" [label="(Call,F2FS_I_SB(inode))"];
"1000102" [label="(MethodParameterIn,struct inode *inode)"];
"1000106" [label="(Call,*sbi = F2FS_I_SB(inode))"];
"1000166" [label="(Call,__init_extent_tree(sbi, et, &ei))"];
"1000164" [label="(Call,en = __init_extent_tree(sbi, et, &ei))"];
"1000115" [label="(Call,f2fs_may_extent_tree(inode))"];
"1000114" [label="(Call,!f2fs_may_extent_tree(inode))"];
"1000136" [label="(Call,__grab_extent_tree(inode))"];
"1000134" [label="(Call,et = __grab_extent_tree(inode))"];
"1000104" [label="(Block,)"];
"1000148" [label="(Call,get_extent_info(&ei, i_ext))"];
"1000116" [label="(Identifier,inode)"];
"1000109" [label="(Identifier,inode)"];
"1000172" [label="(Identifier,en)"];
"1000167" [label="(Identifier,sbi)"];
"1000102" [label="(MethodParameterIn,struct inode *inode)"];
"1000136" [label="(Call,__grab_extent_tree(inode))"];
"1000113" [label="(ControlStructure,if (!f2fs_may_extent_tree(inode)))"];
"1000169" [label="(Call,&ei)"];
"1000168" [label="(Identifier,et)"];
"1000114" [label="(Call,!f2fs_may_extent_tree(inode))"];
"1000135" [label="(Identifier,et)"];
"1000201" [label="(MethodReturn,static bool)"];
"1000164" [label="(Call,en = __init_extent_tree(sbi, et, &ei))"];
"1000165" [label="(Identifier,en)"];
"1000166" [label="(Call,__init_extent_tree(sbi, et, &ei))"];
"1000107" [label="(Identifier,sbi)"];
"1000108" [label="(Call,F2FS_I_SB(inode))"];
"1000120" [label="(Identifier,i_ext)"];
"1000141" [label="(Identifier,i_ext)"];
"1000134" [label="(Call,et = __grab_extent_tree(inode))"];
"1000137" [label="(Identifier,inode)"];
"1000106" [label="(Call,*sbi = F2FS_I_SB(inode))"];
"1000115" [label="(Call,f2fs_may_extent_tree(inode))"];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000109"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000108" -> "1000106"  [label="DDG: inode"];
"1000102" -> "1000108"  [label="DDG: inode"];
"1000108" -> "1000115"  [label="DDG: inode"];
"1000102" -> "1000101"  [label="AST: "];
"1000102" -> "1000201"  [label="DDG: inode"];
"1000102" -> "1000115"  [label="DDG: inode"];
"1000102" -> "1000136"  [label="DDG: inode"];
"1000106" -> "1000104"  [label="AST: "];
"1000107" -> "1000106"  [label="AST: "];
"1000116" -> "1000106"  [label="CFG: "];
"1000106" -> "1000201"  [label="DDG: F2FS_I_SB(inode)"];
"1000106" -> "1000201"  [label="DDG: sbi"];
"1000106" -> "1000166"  [label="DDG: sbi"];
"1000166" -> "1000164"  [label="AST: "];
"1000166" -> "1000169"  [label="CFG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000168" -> "1000166"  [label="AST: "];
"1000169" -> "1000166"  [label="AST: "];
"1000164" -> "1000166"  [label="CFG: "];
"1000166" -> "1000201"  [label="DDG: &ei"];
"1000166" -> "1000201"  [label="DDG: et"];
"1000166" -> "1000201"  [label="DDG: sbi"];
"1000166" -> "1000164"  [label="DDG: sbi"];
"1000166" -> "1000164"  [label="DDG: et"];
"1000166" -> "1000164"  [label="DDG: &ei"];
"1000134" -> "1000166"  [label="DDG: et"];
"1000148" -> "1000166"  [label="DDG: &ei"];
"1000164" -> "1000104"  [label="AST: "];
"1000165" -> "1000164"  [label="AST: "];
"1000172" -> "1000164"  [label="CFG: "];
"1000164" -> "1000201"  [label="DDG: en"];
"1000164" -> "1000201"  [label="DDG: __init_extent_tree(sbi, et, &ei)"];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000114" -> "1000115"  [label="CFG: "];
"1000115" -> "1000201"  [label="DDG: inode"];
"1000115" -> "1000114"  [label="DDG: inode"];
"1000115" -> "1000136"  [label="DDG: inode"];
"1000114" -> "1000113"  [label="AST: "];
"1000120" -> "1000114"  [label="CFG: "];
"1000135" -> "1000114"  [label="CFG: "];
"1000114" -> "1000201"  [label="DDG: !f2fs_may_extent_tree(inode)"];
"1000114" -> "1000201"  [label="DDG: f2fs_may_extent_tree(inode)"];
"1000136" -> "1000134"  [label="AST: "];
"1000136" -> "1000137"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000136" -> "1000201"  [label="DDG: inode"];
"1000136" -> "1000134"  [label="DDG: inode"];
"1000134" -> "1000104"  [label="AST: "];
"1000135" -> "1000134"  [label="AST: "];
"1000141" -> "1000134"  [label="CFG: "];
"1000134" -> "1000201"  [label="DDG: et"];
"1000134" -> "1000201"  [label="DDG: __grab_extent_tree(inode)"];
}
