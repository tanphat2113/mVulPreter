digraph "0_libpcap_33834cb2a4d035b52aa2a26742f832a112e90a0a@API" {
"1000125" [label="(Call,sendbufidx = 0)"];
"1000266" [label="(Call,sock_send(pars->sockctrl, sendbuf, sendbufidx, errbuf, PCAP_ERRBUF_SIZE))"];
"1000265" [label="(Call,sock_send(pars->sockctrl, sendbuf, sendbufidx, errbuf, PCAP_ERRBUF_SIZE) == -1)"];
"1000277" [label="(Call,rpcapd_log(LOGPRIO_ERROR, \"Send to client failed: %s\", errbuf))"];
"1000278" [label="(Identifier,LOGPRIO_ERROR)"];
"1000280" [label="(Identifier,errbuf)"];
"1000267" [label="(Call,pars->sockctrl)"];
"1000126" [label="(Identifier,sendbufidx)"];
"1000272" [label="(Identifier,errbuf)"];
"1000127" [label="(Literal,0)"];
"1000279" [label="(Literal,\"Send to client failed: %s\")"];
"1000118" [label="(Block,)"];
"1000213" [label="(Call,(struct rpcap_header *) sendbuf)"];
"1000270" [label="(Identifier,sendbuf)"];
"1000322" [label="(MethodReturn,RET)"];
"1000283" [label="(Literal,1)"];
"1000264" [label="(ControlStructure,if (sock_send(pars->sockctrl, sendbuf, sendbufidx, errbuf, PCAP_ERRBUF_SIZE) == -1))"];
"1000265" [label="(Call,sock_send(pars->sockctrl, sendbuf, sendbufidx, errbuf, PCAP_ERRBUF_SIZE) == -1)"];
"1000131" [label="(Identifier,plen)"];
"1000276" [label="(Block,)"];
"1000273" [label="(Identifier,PCAP_ERRBUF_SIZE)"];
"1000231" [label="(Call,sock_bufferize(NULL, sizeof(struct rpcap_openreply), NULL, &sendbufidx,\n\t    RPCAP_NETBUF_SIZE, SOCKBUF_CHECKONLY, errmsgbuf, PCAP_ERRBUF_SIZE))"];
"1000266" [label="(Call,sock_send(pars->sockctrl, sendbuf, sendbufidx, errbuf, PCAP_ERRBUF_SIZE))"];
"1000277" [label="(Call,rpcapd_log(LOGPRIO_ERROR, \"Send to client failed: %s\", errbuf))"];
"1000143" [label="(Call,sock_recv(pars->sockctrl, source, plen,\n\t    SOCK_RECEIVEALL_YES|SOCK_EOF_IS_ERROR, errbuf, PCAP_ERRBUF_SIZE))"];
"1000285" [label="(Literal,0)"];
"1000125" [label="(Call,sendbufidx = 0)"];
"1000271" [label="(Identifier,sendbufidx)"];
"1000275" [label="(Literal,1)"];
"1000274" [label="(Call,-1)"];
"1000125" -> "1000118"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000131" -> "1000125"  [label="CFG: "];
"1000125" -> "1000322"  [label="DDG: "];
"1000125" -> "1000266"  [label="DDG: "];
"1000266" -> "1000265"  [label="AST: "];
"1000266" -> "1000273"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000270" -> "1000266"  [label="AST: "];
"1000271" -> "1000266"  [label="AST: "];
"1000272" -> "1000266"  [label="AST: "];
"1000273" -> "1000266"  [label="AST: "];
"1000275" -> "1000266"  [label="CFG: "];
"1000266" -> "1000322"  [label="DDG: "];
"1000266" -> "1000322"  [label="DDG: "];
"1000266" -> "1000322"  [label="DDG: "];
"1000266" -> "1000322"  [label="DDG: "];
"1000266" -> "1000322"  [label="DDG: "];
"1000266" -> "1000265"  [label="DDG: "];
"1000266" -> "1000265"  [label="DDG: "];
"1000266" -> "1000265"  [label="DDG: "];
"1000266" -> "1000265"  [label="DDG: "];
"1000266" -> "1000265"  [label="DDG: "];
"1000143" -> "1000266"  [label="DDG: "];
"1000143" -> "1000266"  [label="DDG: "];
"1000213" -> "1000266"  [label="DDG: "];
"1000231" -> "1000266"  [label="DDG: "];
"1000266" -> "1000277"  [label="DDG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000265" -> "1000274"  [label="CFG: "];
"1000274" -> "1000265"  [label="AST: "];
"1000278" -> "1000265"  [label="CFG: "];
"1000285" -> "1000265"  [label="CFG: "];
"1000265" -> "1000322"  [label="DDG: "];
"1000265" -> "1000322"  [label="DDG: "];
"1000265" -> "1000322"  [label="DDG: "];
"1000274" -> "1000265"  [label="DDG: "];
"1000277" -> "1000276"  [label="AST: "];
"1000277" -> "1000280"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000277"  [label="AST: "];
"1000280" -> "1000277"  [label="AST: "];
"1000283" -> "1000277"  [label="CFG: "];
"1000277" -> "1000322"  [label="DDG: "];
"1000277" -> "1000322"  [label="DDG: "];
"1000277" -> "1000322"  [label="DDG: "];
}
