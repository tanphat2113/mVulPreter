digraph "0_libpcap_33834cb2a4d035b52aa2a26742f832a112e90a0a@API" {
"1000179" [label="(Call,pcap_snprintf(errmsgbuf, PCAP_ERRBUF_SIZE, \"Source string refers to a remote device\"))"];
"1000143" [label="(Call,sock_recv(pars->sockctrl, source, plen,\n\t    SOCK_RECEIVEALL_YES|SOCK_EOF_IS_ERROR, errbuf, PCAP_ERRBUF_SIZE))"];
"1000116" [label="(MethodParameterIn,char *source)"];
"1000130" [label="(Call,plen > sourcelen - 1)"];
"1000115" [label="(MethodParameterIn,uint32 plen)"];
"1000132" [label="(Call,sourcelen - 1)"];
"1000117" [label="(MethodParameterIn,size_t sourcelen)"];
"1000149" [label="(Call,SOCK_RECEIVEALL_YES|SOCK_EOF_IS_ERROR)"];
"1000289" [label="(Call,rpcap_senderror(pars->sockctrl, ver, PCAP_ERR_OPEN,\n\t    errmsgbuf, errbuf))"];
"1000288" [label="(Call,rpcap_senderror(pars->sockctrl, ver, PCAP_ERR_OPEN,\n\t    errmsgbuf, errbuf) == -1)"];
"1000300" [label="(Call,rpcapd_log(LOGPRIO_ERROR, \"Send to client failed: %s\", errbuf))"];
"1000309" [label="(Call,rpcapd_discard(pars->sockctrl, plen))"];
"1000308" [label="(Call,rpcapd_discard(pars->sockctrl, plen) == -1)"];
"1000309" [label="(Call,rpcapd_discard(pars->sockctrl, plen))"];
"1000297" [label="(Call,-1)"];
"1000310" [label="(Call,pars->sockctrl)"];
"1000178" [label="(Block,)"];
"1000314" [label="(Call,-1)"];
"1000287" [label="(ControlStructure,if (rpcap_senderror(pars->sockctrl, ver, PCAP_ERR_OPEN,\n\t    errmsgbuf, errbuf) == -1))"];
"1000181" [label="(Identifier,PCAP_ERRBUF_SIZE)"];
"1000115" [label="(MethodParameterIn,uint32 plen)"];
"1000321" [label="(Literal,0)"];
"1000136" [label="(Call,pcap_snprintf(errmsgbuf, PCAP_ERRBUF_SIZE, \"Source string too long\"))"];
"1000116" [label="(MethodParameterIn,char *source)"];
"1000113" [label="(MethodParameterIn,uint8 ver)"];
"1000137" [label="(Identifier,errmsgbuf)"];
"1000322" [label="(MethodReturn,RET)"];
"1000149" [label="(Call,SOCK_RECEIVEALL_YES|SOCK_EOF_IS_ERROR)"];
"1000172" [label="(Call,plen -= nread)"];
"1000319" [label="(Literal,1)"];
"1000198" [label="(Call,sock_bufferize(NULL, sizeof(struct rpcap_header), NULL, &sendbufidx,\n\t    RPCAP_NETBUF_SIZE, SOCKBUF_CHECKONLY, errmsgbuf, PCAP_ERRBUF_SIZE))"];
"1000294" [label="(Identifier,PCAP_ERR_OPEN)"];
"1000141" [label="(Call,nread = sock_recv(pars->sockctrl, source, plen,\n\t    SOCK_RECEIVEALL_YES|SOCK_EOF_IS_ERROR, errbuf, PCAP_ERRBUF_SIZE))"];
"1000182" [label="(Literal,\"Source string refers to a remote device\")"];
"1000315" [label="(Literal,1)"];
"1000295" [label="(Identifier,errmsgbuf)"];
"1000131" [label="(Identifier,plen)"];
"1000302" [label="(Literal,\"Send to client failed: %s\")"];
"1000148" [label="(Identifier,plen)"];
"1000160" [label="(Call,rpcapd_log(LOGPRIO_ERROR, \"Read from client failed: %s\", errbuf))"];
"1000311" [label="(Identifier,pars)"];
"1000117" [label="(MethodParameterIn,size_t sourcelen)"];
"1000176" [label="(Call,is_url(source))"];
"1000129" [label="(ControlStructure,if (plen > sourcelen - 1))"];
"1000152" [label="(Identifier,errbuf)"];
"1000212" [label="(Call,rpcap_createhdr((struct rpcap_header *) sendbuf, ver,\n\t    RPCAP_MSG_OPEN_REPLY, 0, sizeof(struct rpcap_openreply)))"];
"1000153" [label="(Identifier,PCAP_ERRBUF_SIZE)"];
"1000167" [label="(Call,source[nread] = '\0')"];
"1000301" [label="(Identifier,LOGPRIO_ERROR)"];
"1000303" [label="(Identifier,errbuf)"];
"1000293" [label="(Identifier,ver)"];
"1000306" [label="(Literal,1)"];
"1000130" [label="(Call,plen > sourcelen - 1)"];
"1000313" [label="(Identifier,plen)"];
"1000307" [label="(ControlStructure,if (rpcapd_discard(pars->sockctrl, plen) == -1))"];
"1000231" [label="(Call,sock_bufferize(NULL, sizeof(struct rpcap_openreply), NULL, &sendbufidx,\n\t    RPCAP_NETBUF_SIZE, SOCKBUF_CHECKONLY, errmsgbuf, PCAP_ERRBUF_SIZE))"];
"1000147" [label="(Identifier,source)"];
"1000299" [label="(Block,)"];
"1000151" [label="(Identifier,SOCK_EOF_IS_ERROR)"];
"1000266" [label="(Call,sock_send(pars->sockctrl, sendbuf, sendbufidx, errbuf, PCAP_ERRBUF_SIZE))"];
"1000142" [label="(Identifier,nread)"];
"1000298" [label="(Literal,1)"];
"1000143" [label="(Call,sock_recv(pars->sockctrl, source, plen,\n\t    SOCK_RECEIVEALL_YES|SOCK_EOF_IS_ERROR, errbuf, PCAP_ERRBUF_SIZE))"];
"1000288" [label="(Call,rpcap_senderror(pars->sockctrl, ver, PCAP_ERR_OPEN,\n\t    errmsgbuf, errbuf) == -1)"];
"1000300" [label="(Call,rpcapd_log(LOGPRIO_ERROR, \"Send to client failed: %s\", errbuf))"];
"1000188" [label="(Call,pcap_open_live(source,\n\t\t\t1500 /* fake snaplen */,\n\t\t\t0 /* no promis */,\n\t\t\t1000 /* fake timeout */,\n\t\t\terrmsgbuf))"];
"1000132" [label="(Call,sourcelen - 1)"];
"1000180" [label="(Identifier,errmsgbuf)"];
"1000296" [label="(Identifier,errbuf)"];
"1000179" [label="(Call,pcap_snprintf(errmsgbuf, PCAP_ERRBUF_SIZE, \"Source string refers to a remote device\"))"];
"1000308" [label="(Call,rpcapd_discard(pars->sockctrl, plen) == -1)"];
"1000133" [label="(Identifier,sourcelen)"];
"1000183" [label="(ControlStructure,goto error;)"];
"1000289" [label="(Call,rpcap_senderror(pars->sockctrl, ver, PCAP_ERR_OPEN,\n\t    errmsgbuf, errbuf))"];
"1000150" [label="(Identifier,SOCK_RECEIVEALL_YES)"];
"1000134" [label="(Literal,1)"];
"1000290" [label="(Call,pars->sockctrl)"];
"1000144" [label="(Call,pars->sockctrl)"];
"1000179" -> "1000178"  [label="AST: "];
"1000179" -> "1000182"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000181" -> "1000179"  [label="AST: "];
"1000182" -> "1000179"  [label="AST: "];
"1000183" -> "1000179"  [label="CFG: "];
"1000179" -> "1000322"  [label="DDG: "];
"1000179" -> "1000322"  [label="DDG: "];
"1000143" -> "1000179"  [label="DDG: "];
"1000179" -> "1000289"  [label="DDG: "];
"1000143" -> "1000141"  [label="AST: "];
"1000143" -> "1000153"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000147" -> "1000143"  [label="AST: "];
"1000148" -> "1000143"  [label="AST: "];
"1000149" -> "1000143"  [label="AST: "];
"1000152" -> "1000143"  [label="AST: "];
"1000153" -> "1000143"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000143" -> "1000322"  [label="DDG: "];
"1000143" -> "1000322"  [label="DDG: "];
"1000143" -> "1000322"  [label="DDG: "];
"1000143" -> "1000322"  [label="DDG: "];
"1000143" -> "1000322"  [label="DDG: "];
"1000143" -> "1000141"  [label="DDG: "];
"1000143" -> "1000141"  [label="DDG: "];
"1000143" -> "1000141"  [label="DDG: "];
"1000143" -> "1000141"  [label="DDG: "];
"1000143" -> "1000141"  [label="DDG: "];
"1000143" -> "1000141"  [label="DDG: "];
"1000116" -> "1000143"  [label="DDG: "];
"1000130" -> "1000143"  [label="DDG: "];
"1000115" -> "1000143"  [label="DDG: "];
"1000149" -> "1000143"  [label="DDG: "];
"1000149" -> "1000143"  [label="DDG: "];
"1000143" -> "1000160"  [label="DDG: "];
"1000143" -> "1000172"  [label="DDG: "];
"1000143" -> "1000176"  [label="DDG: "];
"1000143" -> "1000198"  [label="DDG: "];
"1000143" -> "1000266"  [label="DDG: "];
"1000143" -> "1000266"  [label="DDG: "];
"1000143" -> "1000289"  [label="DDG: "];
"1000143" -> "1000289"  [label="DDG: "];
"1000116" -> "1000112"  [label="AST: "];
"1000116" -> "1000322"  [label="DDG: "];
"1000116" -> "1000167"  [label="DDG: "];
"1000116" -> "1000176"  [label="DDG: "];
"1000116" -> "1000188"  [label="DDG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000137" -> "1000130"  [label="CFG: "];
"1000142" -> "1000130"  [label="CFG: "];
"1000130" -> "1000322"  [label="DDG: "];
"1000130" -> "1000322"  [label="DDG: "];
"1000130" -> "1000322"  [label="DDG: "];
"1000115" -> "1000130"  [label="DDG: "];
"1000132" -> "1000130"  [label="DDG: "];
"1000132" -> "1000130"  [label="DDG: "];
"1000130" -> "1000309"  [label="DDG: "];
"1000115" -> "1000112"  [label="AST: "];
"1000115" -> "1000322"  [label="DDG: "];
"1000115" -> "1000172"  [label="DDG: "];
"1000115" -> "1000309"  [label="DDG: "];
"1000132" -> "1000134"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="AST: "];
"1000132" -> "1000322"  [label="DDG: "];
"1000117" -> "1000132"  [label="DDG: "];
"1000117" -> "1000112"  [label="AST: "];
"1000117" -> "1000322"  [label="DDG: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000152" -> "1000149"  [label="CFG: "];
"1000149" -> "1000322"  [label="DDG: "];
"1000149" -> "1000322"  [label="DDG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000289" -> "1000296"  [label="CFG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000293" -> "1000289"  [label="AST: "];
"1000294" -> "1000289"  [label="AST: "];
"1000295" -> "1000289"  [label="AST: "];
"1000296" -> "1000289"  [label="AST: "];
"1000298" -> "1000289"  [label="CFG: "];
"1000289" -> "1000322"  [label="DDG: "];
"1000289" -> "1000322"  [label="DDG: "];
"1000289" -> "1000322"  [label="DDG: "];
"1000289" -> "1000322"  [label="DDG: "];
"1000289" -> "1000322"  [label="DDG: "];
"1000289" -> "1000288"  [label="DDG: "];
"1000289" -> "1000288"  [label="DDG: "];
"1000289" -> "1000288"  [label="DDG: "];
"1000289" -> "1000288"  [label="DDG: "];
"1000289" -> "1000288"  [label="DDG: "];
"1000212" -> "1000289"  [label="DDG: "];
"1000113" -> "1000289"  [label="DDG: "];
"1000231" -> "1000289"  [label="DDG: "];
"1000198" -> "1000289"  [label="DDG: "];
"1000188" -> "1000289"  [label="DDG: "];
"1000136" -> "1000289"  [label="DDG: "];
"1000289" -> "1000300"  [label="DDG: "];
"1000289" -> "1000309"  [label="DDG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000288" -> "1000297"  [label="CFG: "];
"1000297" -> "1000288"  [label="AST: "];
"1000301" -> "1000288"  [label="CFG: "];
"1000311" -> "1000288"  [label="CFG: "];
"1000288" -> "1000322"  [label="DDG: "];
"1000288" -> "1000322"  [label="DDG: "];
"1000297" -> "1000288"  [label="DDG: "];
"1000300" -> "1000299"  [label="AST: "];
"1000300" -> "1000303"  [label="CFG: "];
"1000301" -> "1000300"  [label="AST: "];
"1000302" -> "1000300"  [label="AST: "];
"1000303" -> "1000300"  [label="AST: "];
"1000306" -> "1000300"  [label="CFG: "];
"1000300" -> "1000322"  [label="DDG: "];
"1000300" -> "1000322"  [label="DDG: "];
"1000300" -> "1000322"  [label="DDG: "];
"1000309" -> "1000308"  [label="AST: "];
"1000309" -> "1000313"  [label="CFG: "];
"1000310" -> "1000309"  [label="AST: "];
"1000313" -> "1000309"  [label="AST: "];
"1000315" -> "1000309"  [label="CFG: "];
"1000309" -> "1000322"  [label="DDG: "];
"1000309" -> "1000322"  [label="DDG: "];
"1000309" -> "1000308"  [label="DDG: "];
"1000309" -> "1000308"  [label="DDG: "];
"1000172" -> "1000309"  [label="DDG: "];
"1000308" -> "1000307"  [label="AST: "];
"1000308" -> "1000314"  [label="CFG: "];
"1000314" -> "1000308"  [label="AST: "];
"1000319" -> "1000308"  [label="CFG: "];
"1000321" -> "1000308"  [label="CFG: "];
"1000308" -> "1000322"  [label="DDG: "];
"1000308" -> "1000322"  [label="DDG: "];
"1000308" -> "1000322"  [label="DDG: "];
"1000314" -> "1000308"  [label="DDG: "];
}
