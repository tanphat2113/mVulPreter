digraph "0_libpcap_33834cb2a4d035b52aa2a26742f832a112e90a0a@API" {
"1000250" [label="(Call,openreply->linktype = htonl(pcap_datalink(fp)))"];
"1000254" [label="(Call,htonl(pcap_datalink(fp)))"];
"1000255" [label="(Call,pcap_datalink(fp))"];
"1000186" [label="(Call,fp = pcap_open_live(source,\n\t\t\t1500 /* fake snaplen */,\n\t\t\t0 /* no promis */,\n\t\t\t1000 /* fake timeout */,\n\t\t\terrmsgbuf))"];
"1000188" [label="(Call,pcap_open_live(source,\n\t\t\t1500 /* fake snaplen */,\n\t\t\t0 /* no promis */,\n\t\t\t1000 /* fake timeout */,\n\t\t\terrmsgbuf))"];
"1000167" [label="(Call,source[nread] = '\0')"];
"1000116" [label="(MethodParameterIn,char *source)"];
"1000176" [label="(Call,is_url(source))"];
"1000143" [label="(Call,sock_recv(pars->sockctrl, source, plen,\n\t    SOCK_RECEIVEALL_YES|SOCK_EOF_IS_ERROR, errbuf, PCAP_ERRBUF_SIZE))"];
"1000130" [label="(Call,plen > sourcelen - 1)"];
"1000115" [label="(MethodParameterIn,uint32 plen)"];
"1000132" [label="(Call,sourcelen - 1)"];
"1000117" [label="(MethodParameterIn,size_t sourcelen)"];
"1000149" [label="(Call,SOCK_RECEIVEALL_YES|SOCK_EOF_IS_ERROR)"];
"1000309" [label="(Call,rpcapd_discard(pars->sockctrl, plen))"];
"1000175" [label="(ControlStructure,if (is_url(source)))"];
"1000250" [label="(Call,openreply->linktype = htonl(pcap_datalink(fp)))"];
"1000194" [label="(Identifier,NULL)"];
"1000177" [label="(Identifier,source)"];
"1000193" [label="(Identifier,errmsgbuf)"];
"1000115" [label="(MethodParameterIn,uint32 plen)"];
"1000186" [label="(Call,fp = pcap_open_live(source,\n\t\t\t1500 /* fake snaplen */,\n\t\t\t0 /* no promis */,\n\t\t\t1000 /* fake timeout */,\n\t\t\terrmsgbuf))"];
"1000116" [label="(MethodParameterIn,char *source)"];
"1000256" [label="(Identifier,fp)"];
"1000171" [label="(Literal,'\0')"];
"1000118" [label="(Block,)"];
"1000137" [label="(Identifier,errmsgbuf)"];
"1000255" [label="(Call,pcap_datalink(fp))"];
"1000187" [label="(Identifier,fp)"];
"1000322" [label="(MethodReturn,RET)"];
"1000173" [label="(Identifier,plen)"];
"1000149" [label="(Call,SOCK_RECEIVEALL_YES|SOCK_EOF_IS_ERROR)"];
"1000172" [label="(Call,plen -= nread)"];
"1000198" [label="(Call,sock_bufferize(NULL, sizeof(struct rpcap_header), NULL, &sendbufidx,\n\t    RPCAP_NETBUF_SIZE, SOCKBUF_CHECKONLY, errmsgbuf, PCAP_ERRBUF_SIZE))"];
"1000141" [label="(Call,nread = sock_recv(pars->sockctrl, source, plen,\n\t    SOCK_RECEIVEALL_YES|SOCK_EOF_IS_ERROR, errbuf, PCAP_ERRBUF_SIZE))"];
"1000262" [label="(Call,pcap_close(fp))"];
"1000259" [label="(Identifier,openreply)"];
"1000190" [label="(Literal,1500)"];
"1000131" [label="(Identifier,plen)"];
"1000251" [label="(Call,openreply->linktype)"];
"1000148" [label="(Identifier,plen)"];
"1000160" [label="(Call,rpcapd_log(LOGPRIO_ERROR, \"Read from client failed: %s\", errbuf))"];
"1000117" [label="(MethodParameterIn,size_t sourcelen)"];
"1000176" [label="(Call,is_url(source))"];
"1000129" [label="(ControlStructure,if (plen > sourcelen - 1))"];
"1000152" [label="(Identifier,errbuf)"];
"1000153" [label="(Identifier,PCAP_ERRBUF_SIZE)"];
"1000167" [label="(Call,source[nread] = '\0')"];
"1000130" [label="(Call,plen > sourcelen - 1)"];
"1000147" [label="(Identifier,source)"];
"1000189" [label="(Identifier,source)"];
"1000151" [label="(Identifier,SOCK_EOF_IS_ERROR)"];
"1000266" [label="(Call,sock_send(pars->sockctrl, sendbuf, sendbufidx, errbuf, PCAP_ERRBUF_SIZE))"];
"1000142" [label="(Identifier,nread)"];
"1000168" [label="(Call,source[nread])"];
"1000143" [label="(Call,sock_recv(pars->sockctrl, source, plen,\n\t    SOCK_RECEIVEALL_YES|SOCK_EOF_IS_ERROR, errbuf, PCAP_ERRBUF_SIZE))"];
"1000188" [label="(Call,pcap_open_live(source,\n\t\t\t1500 /* fake snaplen */,\n\t\t\t0 /* no promis */,\n\t\t\t1000 /* fake timeout */,\n\t\t\terrmsgbuf))"];
"1000132" [label="(Call,sourcelen - 1)"];
"1000180" [label="(Identifier,errmsgbuf)"];
"1000192" [label="(Literal,1000)"];
"1000179" [label="(Call,pcap_snprintf(errmsgbuf, PCAP_ERRBUF_SIZE, \"Source string refers to a remote device\"))"];
"1000185" [label="(Call,(fp = pcap_open_live(source,\n\t\t\t1500 /* fake snaplen */,\n\t\t\t0 /* no promis */,\n\t\t\t1000 /* fake timeout */,\n\t\t\terrmsgbuf)) == NULL)"];
"1000133" [label="(Identifier,sourcelen)"];
"1000289" [label="(Call,rpcap_senderror(pars->sockctrl, ver, PCAP_ERR_OPEN,\n\t    errmsgbuf, errbuf))"];
"1000150" [label="(Identifier,SOCK_RECEIVEALL_YES)"];
"1000134" [label="(Literal,1)"];
"1000254" [label="(Call,htonl(pcap_datalink(fp)))"];
"1000191" [label="(Literal,0)"];
"1000144" [label="(Call,pars->sockctrl)"];
"1000250" -> "1000118"  [label="AST: "];
"1000250" -> "1000254"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000254" -> "1000250"  [label="AST: "];
"1000259" -> "1000250"  [label="CFG: "];
"1000250" -> "1000322"  [label="DDG: openreply->linktype"];
"1000250" -> "1000322"  [label="DDG: htonl(pcap_datalink(fp))"];
"1000254" -> "1000250"  [label="DDG: pcap_datalink(fp)"];
"1000254" -> "1000255"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000254" -> "1000322"  [label="DDG: pcap_datalink(fp)"];
"1000255" -> "1000254"  [label="DDG: fp"];
"1000255" -> "1000256"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000186" -> "1000255"  [label="DDG: fp"];
"1000255" -> "1000262"  [label="DDG: fp"];
"1000186" -> "1000185"  [label="AST: "];
"1000186" -> "1000188"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000188" -> "1000186"  [label="AST: "];
"1000194" -> "1000186"  [label="CFG: "];
"1000186" -> "1000322"  [label="DDG: pcap_open_live(source,\n\t\t\t1500 /* fake snaplen */,\n\t\t\t0 /* no promis */,\n\t\t\t1000 /* fake timeout */,\n\t\t\terrmsgbuf)"];
"1000186" -> "1000322"  [label="DDG: fp"];
"1000186" -> "1000185"  [label="DDG: fp"];
"1000188" -> "1000186"  [label="DDG: 0"];
"1000188" -> "1000186"  [label="DDG: 1000"];
"1000188" -> "1000186"  [label="DDG: 1500"];
"1000188" -> "1000186"  [label="DDG: source"];
"1000188" -> "1000186"  [label="DDG: errmsgbuf"];
"1000188" -> "1000193"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000188"  [label="AST: "];
"1000191" -> "1000188"  [label="AST: "];
"1000192" -> "1000188"  [label="AST: "];
"1000193" -> "1000188"  [label="AST: "];
"1000188" -> "1000322"  [label="DDG: source"];
"1000188" -> "1000185"  [label="DDG: 0"];
"1000188" -> "1000185"  [label="DDG: 1000"];
"1000188" -> "1000185"  [label="DDG: 1500"];
"1000188" -> "1000185"  [label="DDG: source"];
"1000188" -> "1000185"  [label="DDG: errmsgbuf"];
"1000167" -> "1000188"  [label="DDG: source[nread]"];
"1000176" -> "1000188"  [label="DDG: source"];
"1000116" -> "1000188"  [label="DDG: source"];
"1000188" -> "1000198"  [label="DDG: errmsgbuf"];
"1000188" -> "1000289"  [label="DDG: errmsgbuf"];
"1000167" -> "1000118"  [label="AST: "];
"1000167" -> "1000171"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000171" -> "1000167"  [label="AST: "];
"1000173" -> "1000167"  [label="CFG: "];
"1000167" -> "1000322"  [label="DDG: source[nread]"];
"1000116" -> "1000167"  [label="DDG: source"];
"1000167" -> "1000176"  [label="DDG: source[nread]"];
"1000116" -> "1000112"  [label="AST: "];
"1000116" -> "1000322"  [label="DDG: source"];
"1000116" -> "1000143"  [label="DDG: source"];
"1000116" -> "1000176"  [label="DDG: source"];
"1000176" -> "1000175"  [label="AST: "];
"1000176" -> "1000177"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000180" -> "1000176"  [label="CFG: "];
"1000187" -> "1000176"  [label="CFG: "];
"1000176" -> "1000322"  [label="DDG: is_url(source)"];
"1000176" -> "1000322"  [label="DDG: source"];
"1000143" -> "1000176"  [label="DDG: source"];
"1000143" -> "1000141"  [label="AST: "];
"1000143" -> "1000153"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000147" -> "1000143"  [label="AST: "];
"1000148" -> "1000143"  [label="AST: "];
"1000149" -> "1000143"  [label="AST: "];
"1000152" -> "1000143"  [label="AST: "];
"1000153" -> "1000143"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000143" -> "1000322"  [label="DDG: pars->sockctrl"];
"1000143" -> "1000322"  [label="DDG: SOCK_RECEIVEALL_YES|SOCK_EOF_IS_ERROR"];
"1000143" -> "1000322"  [label="DDG: plen"];
"1000143" -> "1000322"  [label="DDG: PCAP_ERRBUF_SIZE"];
"1000143" -> "1000322"  [label="DDG: source"];
"1000143" -> "1000141"  [label="DDG: source"];
"1000143" -> "1000141"  [label="DDG: plen"];
"1000143" -> "1000141"  [label="DDG: errbuf"];
"1000143" -> "1000141"  [label="DDG: SOCK_RECEIVEALL_YES|SOCK_EOF_IS_ERROR"];
"1000143" -> "1000141"  [label="DDG: pars->sockctrl"];
"1000143" -> "1000141"  [label="DDG: PCAP_ERRBUF_SIZE"];
"1000130" -> "1000143"  [label="DDG: plen"];
"1000115" -> "1000143"  [label="DDG: plen"];
"1000149" -> "1000143"  [label="DDG: SOCK_RECEIVEALL_YES"];
"1000149" -> "1000143"  [label="DDG: SOCK_EOF_IS_ERROR"];
"1000143" -> "1000160"  [label="DDG: errbuf"];
"1000143" -> "1000172"  [label="DDG: plen"];
"1000143" -> "1000179"  [label="DDG: PCAP_ERRBUF_SIZE"];
"1000143" -> "1000198"  [label="DDG: PCAP_ERRBUF_SIZE"];
"1000143" -> "1000266"  [label="DDG: pars->sockctrl"];
"1000143" -> "1000266"  [label="DDG: errbuf"];
"1000143" -> "1000289"  [label="DDG: pars->sockctrl"];
"1000143" -> "1000289"  [label="DDG: errbuf"];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000137" -> "1000130"  [label="CFG: "];
"1000142" -> "1000130"  [label="CFG: "];
"1000130" -> "1000322"  [label="DDG: plen > sourcelen - 1"];
"1000130" -> "1000322"  [label="DDG: sourcelen - 1"];
"1000130" -> "1000322"  [label="DDG: plen"];
"1000115" -> "1000130"  [label="DDG: plen"];
"1000132" -> "1000130"  [label="DDG: sourcelen"];
"1000132" -> "1000130"  [label="DDG: 1"];
"1000130" -> "1000309"  [label="DDG: plen"];
"1000115" -> "1000112"  [label="AST: "];
"1000115" -> "1000322"  [label="DDG: plen"];
"1000115" -> "1000172"  [label="DDG: plen"];
"1000115" -> "1000309"  [label="DDG: plen"];
"1000132" -> "1000134"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="AST: "];
"1000132" -> "1000322"  [label="DDG: sourcelen"];
"1000117" -> "1000132"  [label="DDG: sourcelen"];
"1000117" -> "1000112"  [label="AST: "];
"1000117" -> "1000322"  [label="DDG: sourcelen"];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000152" -> "1000149"  [label="CFG: "];
"1000149" -> "1000322"  [label="DDG: SOCK_EOF_IS_ERROR"];
"1000149" -> "1000322"  [label="DDG: SOCK_RECEIVEALL_YES"];
}
