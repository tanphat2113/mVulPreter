digraph "0_linux_70789d7052239992824628db8133de08dc78e593_0@pointer" {
"1000314" [label="(Call,fq->q.len = end)"];
"1000297" [label="(Call,end > fq->q.len)"];
"1000283" [label="(Call,end & 0x7)"];
"1000176" [label="(Call,(unsigned int)end)"];
"1000152" [label="(Call,end = offset + (ntohs(ipv6_hdr(skb)->payload_len) -\n\t\t\t((u8 *)(fhdr + 1) - (u8 *)(ipv6_hdr(skb) + 1))))"];
"1000144" [label="(Call,offset = ntohs(fhdr->frag_off) & ~0x7)"];
"1000146" [label="(Call,ntohs(fhdr->frag_off) & ~0x7)"];
"1000147" [label="(Call,ntohs(fhdr->frag_off))"];
"1000156" [label="(Call,ntohs(ipv6_hdr(skb)->payload_len) -\n\t\t\t((u8 *)(fhdr + 1) - (u8 *)(ipv6_hdr(skb) + 1)))"];
"1000157" [label="(Call,ntohs(ipv6_hdr(skb)->payload_len))"];
"1000162" [label="(Call,(u8 *)(fhdr + 1) - (u8 *)(ipv6_hdr(skb) + 1))"];
"1000163" [label="(Call,(u8 *)(fhdr + 1))"];
"1000119" [label="(MethodParameterIn,struct frag_hdr *fhdr)"];
"1000168" [label="(Call,(u8 *)(ipv6_hdr(skb) + 1))"];
"1000171" [label="(Call,ipv6_hdr(skb))"];
"1000159" [label="(Call,ipv6_hdr(skb))"];
"1000132" [label="(Call,skb_dst(skb))"];
"1000118" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000660" [label="(Call,fq->q.meat == fq->q.len)"];
"1000650" [label="(Call,fq->q.last_in == (INET_FRAG_FIRST_IN | INET_FRAG_LAST_IN) &&\n\t    fq->q.meat == fq->q.len)"];
"1000283" [label="(Call,end & 0x7)"];
"1000227" [label="(Call,fhdr + 1)"];
"1000133" [label="(Identifier,skb)"];
"1000660" [label="(Call,fq->q.meat == fq->q.len)"];
"1000651" [label="(Call,fq->q.last_in == (INET_FRAG_FIRST_IN | INET_FRAG_LAST_IN))"];
"1000134" [label="(FieldIdentifier,dev)"];
"1000118" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000187" [label="(Call,icmpv6_param_prob(skb, ICMPV6_HDR_FIELD,\n\t\t\t\t  ((u8 *)&fhdr->frag_off -\n\t\t\t\t   skb_network_header(skb))))"];
"1000548" [label="(Call,FRAG6_CB(skb))"];
"1000432" [label="(Call,pskb_pull(skb, i))"];
"1000175" [label="(Call,(unsigned int)end > IPV6_MAXPLEN)"];
"1000298" [label="(Identifier,end)"];
"1000297" [label="(Call,end > fq->q.len)"];
"1000132" [label="(Call,skb_dst(skb))"];
"1000225" [label="(Call,(u8 *)(fhdr + 1))"];
"1000172" [label="(Identifier,skb)"];
"1000179" [label="(Identifier,IPV6_MAXPLEN)"];
"1000322" [label="(Call,end == offset)"];
"1000131" [label="(Call,skb_dst(skb)->dev)"];
"1000165" [label="(Call,fhdr + 1)"];
"1000560" [label="(Call,fq->q.fragments_tail = skb)"];
"1000173" [label="(Literal,1)"];
"1000679" [label="(Identifier,ip6_frags)"];
"1000299" [label="(Call,fq->q.len)"];
"1000649" [label="(ControlStructure,if (fq->q.last_in == (INET_FRAG_FIRST_IN | INET_FRAG_LAST_IN) &&\n\t    fq->q.meat == fq->q.len))"];
"1000168" [label="(Call,(u8 *)(ipv6_hdr(skb) + 1))"];
"1000152" [label="(Call,end = offset + (ntohs(ipv6_hdr(skb)->payload_len) -\n\t\t\t((u8 *)(fhdr + 1) - (u8 *)(ipv6_hdr(skb) + 1))))"];
"1000212" [label="(Call,skb_network_header(skb))"];
"1000333" [label="(Call,fhdr + 1)"];
"1000119" [label="(MethodParameterIn,struct frag_hdr *fhdr)"];
"1000159" [label="(Call,ipv6_hdr(skb))"];
"1000191" [label="(Call,(u8 *)&fhdr->frag_off)"];
"1000162" [label="(Call,(u8 *)(fhdr + 1) - (u8 *)(ipv6_hdr(skb) + 1))"];
"1000157" [label="(Call,ntohs(ipv6_hdr(skb)->payload_len))"];
"1000341" [label="(Call,pskb_trim_rcsum(skb, end - offset))"];
"1000144" [label="(Call,offset = ntohs(fhdr->frag_off) & ~0x7)"];
"1000323" [label="(Identifier,end)"];
"1000284" [label="(Identifier,end)"];
"1000282" [label="(ControlStructure,if (end & 0x7))"];
"1000148" [label="(Call,fhdr->frag_off)"];
"1000153" [label="(Identifier,end)"];
"1000154" [label="(Call,offset + (ntohs(ipv6_hdr(skb)->payload_len) -\n\t\t\t((u8 *)(fhdr + 1) - (u8 *)(ipv6_hdr(skb) + 1))))"];
"1000151" [label="(Identifier,~0x7)"];
"1000161" [label="(FieldIdentifier,payload_len)"];
"1000285" [label="(Literal,0x7)"];
"1000184" [label="(Call,skb_dst(skb))"];
"1000309" [label="(Identifier,fq)"];
"1000711" [label="(Call,kfree_skb(skb))"];
"1000314" [label="(Call,fq->q.len = end)"];
"1000569" [label="(Call,prev->next = skb)"];
"1000315" [label="(Call,fq->q.len)"];
"1000234" [label="(Call,fhdr->frag_off & htons(IP6_MF))"];
"1000197" [label="(Call,skb_network_header(skb))"];
"1000666" [label="(Call,fq->q.len)"];
"1000176" [label="(Call,(unsigned int)end)"];
"1000170" [label="(Call,ipv6_hdr(skb) + 1)"];
"1000146" [label="(Call,ntohs(fhdr->frag_off) & ~0x7)"];
"1000121" [label="(Block,)"];
"1000290" [label="(Call,skb_dst(skb))"];
"1000650" [label="(Call,fq->q.last_in == (INET_FRAG_FIRST_IN | INET_FRAG_LAST_IN) &&\n\t    fq->q.meat == fq->q.len)"];
"1000158" [label="(Call,ipv6_hdr(skb)->payload_len)"];
"1000163" [label="(Call,(u8 *)(fhdr + 1))"];
"1000661" [label="(Call,fq->q.meat)"];
"1000304" [label="(Block,)"];
"1000147" [label="(Call,ntohs(fhdr->frag_off))"];
"1000320" [label="(Identifier,end)"];
"1000288" [label="(Identifier,net)"];
"1000156" [label="(Call,ntohs(ipv6_hdr(skb)->payload_len) -\n\t\t\t((u8 *)(fhdr + 1) - (u8 *)(ipv6_hdr(skb) + 1)))"];
"1000575" [label="(Call,fq->q.fragments = skb)"];
"1000296" [label="(ControlStructure,if (end > fq->q.len))"];
"1000708" [label="(Call,skb_dst(skb))"];
"1000145" [label="(Identifier,offset)"];
"1000171" [label="(Call,ipv6_hdr(skb))"];
"1000178" [label="(Identifier,end)"];
"1000328" [label="(Call,pskb_pull(skb, (u8 *) (fhdr + 1) - skb->data))"];
"1000611" [label="(Call,fq->q.meat += skb->len)"];
"1000716" [label="(MethodReturn,static int)"];
"1000273" [label="(Call,fq->q.len = end)"];
"1000331" [label="(Call,(u8 *) (fhdr + 1))"];
"1000243" [label="(Call,end < fq->q.len)"];
"1000673" [label="(Identifier,fq)"];
"1000160" [label="(Identifier,skb)"];
"1000314" -> "1000304"  [label="AST: "];
"1000314" -> "1000320"  [label="CFG: "];
"1000315" -> "1000314"  [label="AST: "];
"1000320" -> "1000314"  [label="AST: "];
"1000323" -> "1000314"  [label="CFG: "];
"1000314" -> "1000716"  [label="DDG: fq->q.len"];
"1000297" -> "1000314"  [label="DDG: end"];
"1000314" -> "1000660"  [label="DDG: fq->q.len"];
"1000297" -> "1000296"  [label="AST: "];
"1000297" -> "1000299"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000299" -> "1000297"  [label="AST: "];
"1000309" -> "1000297"  [label="CFG: "];
"1000323" -> "1000297"  [label="CFG: "];
"1000297" -> "1000716"  [label="DDG: end"];
"1000297" -> "1000716"  [label="DDG: fq->q.len"];
"1000297" -> "1000716"  [label="DDG: end > fq->q.len"];
"1000283" -> "1000297"  [label="DDG: end"];
"1000297" -> "1000322"  [label="DDG: end"];
"1000297" -> "1000660"  [label="DDG: fq->q.len"];
"1000283" -> "1000282"  [label="AST: "];
"1000283" -> "1000285"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000285" -> "1000283"  [label="AST: "];
"1000288" -> "1000283"  [label="CFG: "];
"1000298" -> "1000283"  [label="CFG: "];
"1000283" -> "1000716"  [label="DDG: end"];
"1000283" -> "1000716"  [label="DDG: end & 0x7"];
"1000176" -> "1000283"  [label="DDG: end"];
"1000176" -> "1000175"  [label="AST: "];
"1000176" -> "1000178"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000178" -> "1000176"  [label="AST: "];
"1000179" -> "1000176"  [label="CFG: "];
"1000176" -> "1000716"  [label="DDG: end"];
"1000176" -> "1000175"  [label="DDG: end"];
"1000152" -> "1000176"  [label="DDG: end"];
"1000176" -> "1000243"  [label="DDG: end"];
"1000152" -> "1000121"  [label="AST: "];
"1000152" -> "1000154"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000177" -> "1000152"  [label="CFG: "];
"1000152" -> "1000716"  [label="DDG: offset + (ntohs(ipv6_hdr(skb)->payload_len) -\n\t\t\t((u8 *)(fhdr + 1) - (u8 *)(ipv6_hdr(skb) + 1)))"];
"1000144" -> "1000152"  [label="DDG: offset"];
"1000156" -> "1000152"  [label="DDG: ntohs(ipv6_hdr(skb)->payload_len)"];
"1000156" -> "1000152"  [label="DDG: (u8 *)(fhdr + 1) - (u8 *)(ipv6_hdr(skb) + 1)"];
"1000144" -> "1000121"  [label="AST: "];
"1000144" -> "1000146"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000146" -> "1000144"  [label="AST: "];
"1000153" -> "1000144"  [label="CFG: "];
"1000144" -> "1000716"  [label="DDG: ntohs(fhdr->frag_off) & ~0x7"];
"1000146" -> "1000144"  [label="DDG: ntohs(fhdr->frag_off)"];
"1000146" -> "1000144"  [label="DDG: ~0x7"];
"1000144" -> "1000154"  [label="DDG: offset"];
"1000144" -> "1000322"  [label="DDG: offset"];
"1000146" -> "1000151"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000151" -> "1000146"  [label="AST: "];
"1000146" -> "1000716"  [label="DDG: ~0x7"];
"1000146" -> "1000716"  [label="DDG: ntohs(fhdr->frag_off)"];
"1000147" -> "1000146"  [label="DDG: fhdr->frag_off"];
"1000147" -> "1000148"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000151" -> "1000147"  [label="CFG: "];
"1000147" -> "1000716"  [label="DDG: fhdr->frag_off"];
"1000147" -> "1000191"  [label="DDG: fhdr->frag_off"];
"1000147" -> "1000234"  [label="DDG: fhdr->frag_off"];
"1000156" -> "1000154"  [label="AST: "];
"1000156" -> "1000162"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000162" -> "1000156"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000156" -> "1000716"  [label="DDG: ntohs(ipv6_hdr(skb)->payload_len)"];
"1000156" -> "1000716"  [label="DDG: (u8 *)(fhdr + 1) - (u8 *)(ipv6_hdr(skb) + 1)"];
"1000156" -> "1000154"  [label="DDG: ntohs(ipv6_hdr(skb)->payload_len)"];
"1000156" -> "1000154"  [label="DDG: (u8 *)(fhdr + 1) - (u8 *)(ipv6_hdr(skb) + 1)"];
"1000157" -> "1000156"  [label="DDG: ipv6_hdr(skb)->payload_len"];
"1000162" -> "1000156"  [label="DDG: (u8 *)(fhdr + 1)"];
"1000162" -> "1000156"  [label="DDG: (u8 *)(ipv6_hdr(skb) + 1)"];
"1000157" -> "1000158"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000164" -> "1000157"  [label="CFG: "];
"1000157" -> "1000716"  [label="DDG: ipv6_hdr(skb)->payload_len"];
"1000162" -> "1000168"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000168" -> "1000162"  [label="AST: "];
"1000162" -> "1000716"  [label="DDG: (u8 *)(ipv6_hdr(skb) + 1)"];
"1000162" -> "1000716"  [label="DDG: (u8 *)(fhdr + 1)"];
"1000163" -> "1000162"  [label="DDG: fhdr + 1"];
"1000168" -> "1000162"  [label="DDG: ipv6_hdr(skb) + 1"];
"1000163" -> "1000165"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000165" -> "1000163"  [label="AST: "];
"1000169" -> "1000163"  [label="CFG: "];
"1000163" -> "1000716"  [label="DDG: fhdr + 1"];
"1000119" -> "1000163"  [label="DDG: fhdr"];
"1000119" -> "1000116"  [label="AST: "];
"1000119" -> "1000716"  [label="DDG: fhdr"];
"1000119" -> "1000165"  [label="DDG: fhdr"];
"1000119" -> "1000225"  [label="DDG: fhdr"];
"1000119" -> "1000227"  [label="DDG: fhdr"];
"1000119" -> "1000331"  [label="DDG: fhdr"];
"1000119" -> "1000333"  [label="DDG: fhdr"];
"1000168" -> "1000170"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000168" -> "1000716"  [label="DDG: ipv6_hdr(skb) + 1"];
"1000171" -> "1000168"  [label="DDG: skb"];
"1000171" -> "1000170"  [label="AST: "];
"1000171" -> "1000172"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="CFG: "];
"1000171" -> "1000170"  [label="DDG: skb"];
"1000159" -> "1000171"  [label="DDG: skb"];
"1000118" -> "1000171"  [label="DDG: skb"];
"1000171" -> "1000184"  [label="DDG: skb"];
"1000171" -> "1000212"  [label="DDG: skb"];
"1000171" -> "1000290"  [label="DDG: skb"];
"1000171" -> "1000328"  [label="DDG: skb"];
"1000171" -> "1000708"  [label="DDG: skb"];
"1000159" -> "1000158"  [label="AST: "];
"1000159" -> "1000160"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000161" -> "1000159"  [label="CFG: "];
"1000132" -> "1000159"  [label="DDG: skb"];
"1000118" -> "1000159"  [label="DDG: skb"];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000133"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="CFG: "];
"1000118" -> "1000132"  [label="DDG: skb"];
"1000132" -> "1000708"  [label="DDG: skb"];
"1000118" -> "1000116"  [label="AST: "];
"1000118" -> "1000716"  [label="DDG: skb"];
"1000118" -> "1000184"  [label="DDG: skb"];
"1000118" -> "1000187"  [label="DDG: skb"];
"1000118" -> "1000197"  [label="DDG: skb"];
"1000118" -> "1000212"  [label="DDG: skb"];
"1000118" -> "1000290"  [label="DDG: skb"];
"1000118" -> "1000328"  [label="DDG: skb"];
"1000118" -> "1000341"  [label="DDG: skb"];
"1000118" -> "1000432"  [label="DDG: skb"];
"1000118" -> "1000548"  [label="DDG: skb"];
"1000118" -> "1000560"  [label="DDG: skb"];
"1000118" -> "1000569"  [label="DDG: skb"];
"1000118" -> "1000575"  [label="DDG: skb"];
"1000118" -> "1000708"  [label="DDG: skb"];
"1000118" -> "1000711"  [label="DDG: skb"];
"1000660" -> "1000650"  [label="AST: "];
"1000660" -> "1000666"  [label="CFG: "];
"1000661" -> "1000660"  [label="AST: "];
"1000666" -> "1000660"  [label="AST: "];
"1000650" -> "1000660"  [label="CFG: "];
"1000660" -> "1000716"  [label="DDG: fq->q.meat"];
"1000660" -> "1000716"  [label="DDG: fq->q.len"];
"1000660" -> "1000650"  [label="DDG: fq->q.meat"];
"1000660" -> "1000650"  [label="DDG: fq->q.len"];
"1000611" -> "1000660"  [label="DDG: fq->q.meat"];
"1000273" -> "1000660"  [label="DDG: fq->q.len"];
"1000650" -> "1000649"  [label="AST: "];
"1000650" -> "1000651"  [label="CFG: "];
"1000651" -> "1000650"  [label="AST: "];
"1000673" -> "1000650"  [label="CFG: "];
"1000679" -> "1000650"  [label="CFG: "];
"1000650" -> "1000716"  [label="DDG: fq->q.last_in == (INET_FRAG_FIRST_IN | INET_FRAG_LAST_IN) &&\n\t    fq->q.meat == fq->q.len"];
"1000650" -> "1000716"  [label="DDG: fq->q.last_in == (INET_FRAG_FIRST_IN | INET_FRAG_LAST_IN)"];
"1000650" -> "1000716"  [label="DDG: fq->q.meat == fq->q.len"];
"1000651" -> "1000650"  [label="DDG: fq->q.last_in"];
"1000651" -> "1000650"  [label="DDG: INET_FRAG_FIRST_IN | INET_FRAG_LAST_IN"];
}
