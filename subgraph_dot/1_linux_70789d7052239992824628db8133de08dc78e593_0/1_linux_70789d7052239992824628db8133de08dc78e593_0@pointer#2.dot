digraph "1_linux_70789d7052239992824628db8133de08dc78e593_0@pointer" {
"1000432" [label="(Call,pskb_pull(skb, i))"];
"1000341" [label="(Call,pskb_trim_rcsum(skb, end - offset))"];
"1000328" [label="(Call,pskb_pull(skb, (u8 *) (fhdr + 1) - skb->data))"];
"1000171" [label="(Call,ipv6_hdr(skb))"];
"1000159" [label="(Call,ipv6_hdr(skb))"];
"1000132" [label="(Call,skb_dst(skb))"];
"1000118" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000212" [label="(Call,skb_network_header(skb))"];
"1000330" [label="(Call,(u8 *) (fhdr + 1) - skb->data)"];
"1000331" [label="(Call,(u8 *) (fhdr + 1))"];
"1000119" [label="(MethodParameterIn,struct frag_hdr *fhdr)"];
"1000343" [label="(Call,end - offset)"];
"1000322" [label="(Call,end == offset)"];
"1000297" [label="(Call,end > fq->q.len)"];
"1000283" [label="(Call,end & 0x7)"];
"1000176" [label="(Call,(unsigned int)end)"];
"1000152" [label="(Call,end = offset + (ntohs(ipv6_hdr(skb)->payload_len) -\n\t\t\t((u8 *)(fhdr + 1) - (u8 *)(ipv6_hdr(skb) + 1))))"];
"1000144" [label="(Call,offset = ntohs(fhdr->frag_off) & ~0x7)"];
"1000146" [label="(Call,ntohs(fhdr->frag_off) & ~0x7)"];
"1000147" [label="(Call,ntohs(fhdr->frag_off))"];
"1000156" [label="(Call,ntohs(ipv6_hdr(skb)->payload_len) -\n\t\t\t((u8 *)(fhdr + 1) - (u8 *)(ipv6_hdr(skb) + 1)))"];
"1000157" [label="(Call,ntohs(ipv6_hdr(skb)->payload_len))"];
"1000162" [label="(Call,(u8 *)(fhdr + 1) - (u8 *)(ipv6_hdr(skb) + 1))"];
"1000163" [label="(Call,(u8 *)(fhdr + 1))"];
"1000168" [label="(Call,(u8 *)(ipv6_hdr(skb) + 1))"];
"1000258" [label="(Call,end != fq->q.len)"];
"1000243" [label="(Call,end < fq->q.len)"];
"1000418" [label="(Call,i > 0)"];
"1000405" [label="(Call,i = (FRAG6_CB(prev)->offset + prev->len) - offset)"];
"1000407" [label="(Call,(FRAG6_CB(prev)->offset + prev->len) - offset)"];
"1000358" [label="(Call,FRAG6_CB(prev)->offset < offset)"];
"1000390" [label="(Call,FRAG6_CB(next)->offset >= offset)"];
"1000431" [label="(Call,!pskb_pull(skb, i))"];
"1000548" [label="(Call,FRAG6_CB(skb))"];
"1000560" [label="(Call,fq->q.fragments_tail = skb)"];
"1000569" [label="(Call,prev->next = skb)"];
"1000575" [label="(Call,fq->q.fragments = skb)"];
"1000708" [label="(Call,skb_dst(skb))"];
"1000707" [label="(Call,ip6_dst_idev(skb_dst(skb)))"];
"1000705" [label="(Call,IP6_INC_STATS(net, ip6_dst_idev(skb_dst(skb)),\n \t\t      IPSTATS_MIB_REASMFAILS))"];
"1000711" [label="(Call,kfree_skb(skb))"];
"1000227" [label="(Call,fhdr + 1)"];
"1000133" [label="(Identifier,skb)"];
"1000283" [label="(Call,end & 0x7)"];
"1000576" [label="(Call,fq->q.fragments)"];
"1000660" [label="(Call,fq->q.meat == fq->q.len)"];
"1000359" [label="(Call,FRAG6_CB(prev)->offset)"];
"1000573" [label="(Identifier,skb)"];
"1000420" [label="(Literal,0)"];
"1000134" [label="(FieldIdentifier,dev)"];
"1000118" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000706" [label="(Identifier,net)"];
"1000416" [label="(Identifier,offset)"];
"1000406" [label="(Identifier,i)"];
"1000567" [label="(ControlStructure,if (prev))"];
"1000187" [label="(Call,icmpv6_param_prob(skb, ICMPV6_HDR_FIELD,\n\t\t\t\t  ((u8 *)&fhdr->frag_off -\n\t\t\t\t   skb_network_header(skb))))"];
"1000250" [label="(Call,(fq->q.last_in & INET_FRAG_LAST_IN) && end != fq->q.len)"];
"1000417" [label="(ControlStructure,if (i > 0))"];
"1000547" [label="(Call,FRAG6_CB(skb)->offset)"];
"1000710" [label="(Identifier,IPSTATS_MIB_REASMFAILS)"];
"1000548" [label="(Call,FRAG6_CB(skb))"];
"1000213" [label="(Identifier,skb)"];
"1000405" [label="(Call,i = (FRAG6_CB(prev)->offset + prev->len) - offset)"];
"1000432" [label="(Call,pskb_pull(skb, i))"];
"1000260" [label="(Call,fq->q.len)"];
"1000175" [label="(Call,(unsigned int)end > IPV6_MAXPLEN)"];
"1000298" [label="(Identifier,end)"];
"1000297" [label="(Call,end > fq->q.len)"];
"1000450" [label="(Call,FRAG6_CB(next)->offset < end)"];
"1000132" [label="(Call,skb_dst(skb))"];
"1000325" [label="(ControlStructure,goto err;)"];
"1000434" [label="(Identifier,i)"];
"1000225" [label="(Call,(u8 *)(fhdr + 1))"];
"1000355" [label="(Call,!prev || FRAG6_CB(prev)->offset < offset)"];
"1000172" [label="(Identifier,skb)"];
"1000426" [label="(Call,end <= offset)"];
"1000179" [label="(Identifier,IPV6_MAXPLEN)"];
"1000322" [label="(Call,end == offset)"];
"1000131" [label="(Call,skb_dst(skb)->dev)"];
"1000423" [label="(Identifier,offset)"];
"1000460" [label="(Call,end - FRAG6_CB(next)->offset)"];
"1000165" [label="(Call,fhdr + 1)"];
"1000560" [label="(Call,fq->q.fragments_tail = skb)"];
"1000570" [label="(Call,prev->next)"];
"1000173" [label="(Literal,1)"];
"1000258" [label="(Call,end != fq->q.len)"];
"1000330" [label="(Call,(u8 *) (fhdr + 1) - skb->data)"];
"1000299" [label="(Call,fq->q.len)"];
"1000336" [label="(Call,skb->data)"];
"1000329" [label="(Identifier,skb)"];
"1000168" [label="(Call,(u8 *)(ipv6_hdr(skb) + 1))"];
"1000324" [label="(Identifier,offset)"];
"1000568" [label="(Identifier,prev)"];
"1000152" [label="(Call,end = offset + (ntohs(ipv6_hdr(skb)->payload_len) -\n\t\t\t((u8 *)(fhdr + 1) - (u8 *)(ipv6_hdr(skb) + 1))))"];
"1000212" [label="(Call,skb_network_header(skb))"];
"1000433" [label="(Identifier,skb)"];
"1000333" [label="(Call,fhdr + 1)"];
"1000119" [label="(MethodParameterIn,struct frag_hdr *fhdr)"];
"1000159" [label="(Call,ipv6_hdr(skb))"];
"1000191" [label="(Call,(u8 *)&fhdr->frag_off)"];
"1000439" [label="(Identifier,skb)"];
"1000162" [label="(Call,(u8 *)(fhdr + 1) - (u8 *)(ipv6_hdr(skb) + 1))"];
"1000327" [label="(Call,!pskb_pull(skb, (u8 *) (fhdr + 1) - skb->data))"];
"1000418" [label="(Call,i > 0)"];
"1000157" [label="(Call,ntohs(ipv6_hdr(skb)->payload_len))"];
"1000550" [label="(FieldIdentifier,offset)"];
"1000419" [label="(Identifier,i)"];
"1000341" [label="(Call,pskb_trim_rcsum(skb, end - offset))"];
"1000144" [label="(Call,offset = ntohs(fhdr->frag_off) & ~0x7)"];
"1000345" [label="(Identifier,offset)"];
"1000259" [label="(Identifier,end)"];
"1000715" [label="(Literal,1)"];
"1000323" [label="(Identifier,end)"];
"1000284" [label="(Identifier,end)"];
"1000242" [label="(Call,end < fq->q.len ||\n\t\t    ((fq->q.last_in & INET_FRAG_LAST_IN) && end != fq->q.len))"];
"1000245" [label="(Call,fq->q.len)"];
"1000282" [label="(ControlStructure,if (end & 0x7))"];
"1000148" [label="(Call,fhdr->frag_off)"];
"1000153" [label="(Identifier,end)"];
"1000154" [label="(Call,offset + (ntohs(ipv6_hdr(skb)->payload_len) -\n\t\t\t((u8 *)(fhdr + 1) - (u8 *)(ipv6_hdr(skb) + 1))))"];
"1000396" [label="(ControlStructure,break;)"];
"1000561" [label="(Call,fq->q.fragments_tail)"];
"1000549" [label="(Identifier,skb)"];
"1000705" [label="(Call,IP6_INC_STATS(net, ip6_dst_idev(skb_dst(skb)),\n \t\t      IPSTATS_MIB_REASMFAILS))"];
"1000151" [label="(Identifier,~0x7)"];
"1000161" [label="(FieldIdentifier,payload_len)"];
"1000254" [label="(Identifier,fq)"];
"1000709" [label="(Identifier,skb)"];
"1000285" [label="(Literal,0x7)"];
"1000184" [label="(Call,skb_dst(skb))"];
"1000309" [label="(Identifier,fq)"];
"1000435" [label="(ControlStructure,goto err;)"];
"1000343" [label="(Call,end - offset)"];
"1000342" [label="(Identifier,skb)"];
"1000711" [label="(Call,kfree_skb(skb))"];
"1000314" [label="(Call,fq->q.len = end)"];
"1000583" [label="(Identifier,dev)"];
"1000569" [label="(Call,prev->next = skb)"];
"1000557" [label="(ControlStructure,if (!next))"];
"1000337" [label="(Identifier,skb)"];
"1000344" [label="(Identifier,end)"];
"1000234" [label="(Call,fhdr->frag_off & htons(IP6_MF))"];
"1000197" [label="(Call,skb_network_header(skb))"];
"1000244" [label="(Identifier,end)"];
"1000363" [label="(Identifier,offset)"];
"1000176" [label="(Call,(unsigned int)end)"];
"1000431" [label="(Call,!pskb_pull(skb, i))"];
"1000407" [label="(Call,(FRAG6_CB(prev)->offset + prev->len) - offset)"];
"1000170" [label="(Call,ipv6_hdr(skb) + 1)"];
"1000546" [label="(Call,FRAG6_CB(skb)->offset = offset)"];
"1000290" [label="(Call,skb_dst(skb))"];
"1000121" [label="(Block,)"];
"1000146" [label="(Call,ntohs(fhdr->frag_off) & ~0x7)"];
"1000346" [label="(ControlStructure,goto err;)"];
"1000158" [label="(Call,ipv6_hdr(skb)->payload_len)"];
"1000163" [label="(Call,(u8 *)(fhdr + 1))"];
"1000633" [label="(Call,offset == 0)"];
"1000574" [label="(ControlStructure,else)"];
"1000147" [label="(Call,ntohs(fhdr->frag_off))"];
"1000449" [label="(Identifier,next)"];
"1000391" [label="(Call,FRAG6_CB(next)->offset)"];
"1000288" [label="(Identifier,net)"];
"1000156" [label="(Call,ntohs(ipv6_hdr(skb)->payload_len) -\n\t\t\t((u8 *)(fhdr + 1) - (u8 *)(ipv6_hdr(skb) + 1)))"];
"1000575" [label="(Call,fq->q.fragments = skb)"];
"1000128" [label="(Call,*net = dev_net(skb_dst(skb)->dev))"];
"1000348" [label="(Identifier,prev)"];
"1000321" [label="(ControlStructure,if (end == offset))"];
"1000389" [label="(ControlStructure,if (FRAG6_CB(next)->offset >= offset))"];
"1000210" [label="(Call,*nh = skb_network_header(skb))"];
"1000581" [label="(Identifier,skb)"];
"1000390" [label="(Call,FRAG6_CB(next)->offset >= offset)"];
"1000296" [label="(ControlStructure,if (end > fq->q.len))"];
"1000708" [label="(Call,skb_dst(skb))"];
"1000712" [label="(Identifier,skb)"];
"1000145" [label="(Identifier,offset)"];
"1000171" [label="(Call,ipv6_hdr(skb))"];
"1000408" [label="(Call,FRAG6_CB(prev)->offset + prev->len)"];
"1000707" [label="(Call,ip6_dst_idev(skb_dst(skb)))"];
"1000395" [label="(Identifier,offset)"];
"1000178" [label="(Identifier,end)"];
"1000566" [label="(Identifier,skb)"];
"1000328" [label="(Call,pskb_pull(skb, (u8 *) (fhdr + 1) - skb->data))"];
"1000716" [label="(MethodReturn,static int)"];
"1000273" [label="(Call,fq->q.len = end)"];
"1000358" [label="(Call,FRAG6_CB(prev)->offset < offset)"];
"1000331" [label="(Call,(u8 *) (fhdr + 1))"];
"1000243" [label="(Call,end < fq->q.len)"];
"1000340" [label="(ControlStructure,if (pskb_trim_rcsum(skb, end - offset)))"];
"1000430" [label="(ControlStructure,if (!pskb_pull(skb, i)))"];
"1000398" [label="(Identifier,prev)"];
"1000422" [label="(Call,offset += i)"];
"1000160" [label="(Identifier,skb)"];
"1000403" [label="(Block,)"];
"1000432" -> "1000431"  [label="AST: "];
"1000432" -> "1000434"  [label="CFG: "];
"1000433" -> "1000432"  [label="AST: "];
"1000434" -> "1000432"  [label="AST: "];
"1000431" -> "1000432"  [label="CFG: "];
"1000432" -> "1000716"  [label="DDG: i"];
"1000432" -> "1000431"  [label="DDG: skb"];
"1000432" -> "1000431"  [label="DDG: i"];
"1000341" -> "1000432"  [label="DDG: skb"];
"1000118" -> "1000432"  [label="DDG: skb"];
"1000418" -> "1000432"  [label="DDG: i"];
"1000432" -> "1000548"  [label="DDG: skb"];
"1000432" -> "1000708"  [label="DDG: skb"];
"1000341" -> "1000340"  [label="AST: "];
"1000341" -> "1000343"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="AST: "];
"1000346" -> "1000341"  [label="CFG: "];
"1000348" -> "1000341"  [label="CFG: "];
"1000341" -> "1000716"  [label="DDG: end - offset"];
"1000341" -> "1000716"  [label="DDG: pskb_trim_rcsum(skb, end - offset)"];
"1000328" -> "1000341"  [label="DDG: skb"];
"1000118" -> "1000341"  [label="DDG: skb"];
"1000343" -> "1000341"  [label="DDG: end"];
"1000343" -> "1000341"  [label="DDG: offset"];
"1000341" -> "1000548"  [label="DDG: skb"];
"1000341" -> "1000708"  [label="DDG: skb"];
"1000328" -> "1000327"  [label="AST: "];
"1000328" -> "1000330"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000330" -> "1000328"  [label="AST: "];
"1000327" -> "1000328"  [label="CFG: "];
"1000328" -> "1000716"  [label="DDG: (u8 *) (fhdr + 1) - skb->data"];
"1000328" -> "1000327"  [label="DDG: skb"];
"1000328" -> "1000327"  [label="DDG: (u8 *) (fhdr + 1) - skb->data"];
"1000171" -> "1000328"  [label="DDG: skb"];
"1000212" -> "1000328"  [label="DDG: skb"];
"1000118" -> "1000328"  [label="DDG: skb"];
"1000330" -> "1000328"  [label="DDG: (u8 *) (fhdr + 1)"];
"1000330" -> "1000328"  [label="DDG: skb->data"];
"1000328" -> "1000708"  [label="DDG: skb"];
"1000171" -> "1000170"  [label="AST: "];
"1000171" -> "1000172"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="CFG: "];
"1000171" -> "1000168"  [label="DDG: skb"];
"1000171" -> "1000170"  [label="DDG: skb"];
"1000159" -> "1000171"  [label="DDG: skb"];
"1000118" -> "1000171"  [label="DDG: skb"];
"1000171" -> "1000184"  [label="DDG: skb"];
"1000171" -> "1000212"  [label="DDG: skb"];
"1000171" -> "1000290"  [label="DDG: skb"];
"1000171" -> "1000708"  [label="DDG: skb"];
"1000159" -> "1000158"  [label="AST: "];
"1000159" -> "1000160"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000161" -> "1000159"  [label="CFG: "];
"1000132" -> "1000159"  [label="DDG: skb"];
"1000118" -> "1000159"  [label="DDG: skb"];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000133"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="CFG: "];
"1000118" -> "1000132"  [label="DDG: skb"];
"1000132" -> "1000708"  [label="DDG: skb"];
"1000118" -> "1000116"  [label="AST: "];
"1000118" -> "1000716"  [label="DDG: skb"];
"1000118" -> "1000184"  [label="DDG: skb"];
"1000118" -> "1000187"  [label="DDG: skb"];
"1000118" -> "1000197"  [label="DDG: skb"];
"1000118" -> "1000212"  [label="DDG: skb"];
"1000118" -> "1000290"  [label="DDG: skb"];
"1000118" -> "1000548"  [label="DDG: skb"];
"1000118" -> "1000560"  [label="DDG: skb"];
"1000118" -> "1000569"  [label="DDG: skb"];
"1000118" -> "1000575"  [label="DDG: skb"];
"1000118" -> "1000708"  [label="DDG: skb"];
"1000118" -> "1000711"  [label="DDG: skb"];
"1000212" -> "1000210"  [label="AST: "];
"1000212" -> "1000213"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000210" -> "1000212"  [label="CFG: "];
"1000212" -> "1000210"  [label="DDG: skb"];
"1000212" -> "1000290"  [label="DDG: skb"];
"1000212" -> "1000708"  [label="DDG: skb"];
"1000330" -> "1000336"  [label="CFG: "];
"1000331" -> "1000330"  [label="AST: "];
"1000336" -> "1000330"  [label="AST: "];
"1000330" -> "1000716"  [label="DDG: (u8 *) (fhdr + 1)"];
"1000330" -> "1000716"  [label="DDG: skb->data"];
"1000331" -> "1000330"  [label="DDG: fhdr + 1"];
"1000331" -> "1000333"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000333" -> "1000331"  [label="AST: "];
"1000337" -> "1000331"  [label="CFG: "];
"1000331" -> "1000716"  [label="DDG: fhdr + 1"];
"1000119" -> "1000331"  [label="DDG: fhdr"];
"1000119" -> "1000116"  [label="AST: "];
"1000119" -> "1000716"  [label="DDG: fhdr"];
"1000119" -> "1000163"  [label="DDG: fhdr"];
"1000119" -> "1000165"  [label="DDG: fhdr"];
"1000119" -> "1000225"  [label="DDG: fhdr"];
"1000119" -> "1000227"  [label="DDG: fhdr"];
"1000119" -> "1000333"  [label="DDG: fhdr"];
"1000343" -> "1000345"  [label="CFG: "];
"1000344" -> "1000343"  [label="AST: "];
"1000345" -> "1000343"  [label="AST: "];
"1000343" -> "1000716"  [label="DDG: end"];
"1000343" -> "1000716"  [label="DDG: offset"];
"1000322" -> "1000343"  [label="DDG: end"];
"1000322" -> "1000343"  [label="DDG: offset"];
"1000343" -> "1000358"  [label="DDG: offset"];
"1000343" -> "1000390"  [label="DDG: offset"];
"1000343" -> "1000407"  [label="DDG: offset"];
"1000343" -> "1000426"  [label="DDG: end"];
"1000343" -> "1000450"  [label="DDG: end"];
"1000343" -> "1000460"  [label="DDG: end"];
"1000343" -> "1000546"  [label="DDG: offset"];
"1000343" -> "1000633"  [label="DDG: offset"];
"1000322" -> "1000321"  [label="AST: "];
"1000322" -> "1000324"  [label="CFG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000324" -> "1000322"  [label="AST: "];
"1000325" -> "1000322"  [label="CFG: "];
"1000329" -> "1000322"  [label="CFG: "];
"1000322" -> "1000716"  [label="DDG: offset"];
"1000322" -> "1000716"  [label="DDG: end == offset"];
"1000322" -> "1000716"  [label="DDG: end"];
"1000297" -> "1000322"  [label="DDG: end"];
"1000258" -> "1000322"  [label="DDG: end"];
"1000243" -> "1000322"  [label="DDG: end"];
"1000144" -> "1000322"  [label="DDG: offset"];
"1000297" -> "1000296"  [label="AST: "];
"1000297" -> "1000299"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000299" -> "1000297"  [label="AST: "];
"1000309" -> "1000297"  [label="CFG: "];
"1000323" -> "1000297"  [label="CFG: "];
"1000297" -> "1000716"  [label="DDG: end"];
"1000297" -> "1000716"  [label="DDG: fq->q.len"];
"1000297" -> "1000716"  [label="DDG: end > fq->q.len"];
"1000283" -> "1000297"  [label="DDG: end"];
"1000297" -> "1000314"  [label="DDG: end"];
"1000297" -> "1000660"  [label="DDG: fq->q.len"];
"1000283" -> "1000282"  [label="AST: "];
"1000283" -> "1000285"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000285" -> "1000283"  [label="AST: "];
"1000288" -> "1000283"  [label="CFG: "];
"1000298" -> "1000283"  [label="CFG: "];
"1000283" -> "1000716"  [label="DDG: end"];
"1000283" -> "1000716"  [label="DDG: end & 0x7"];
"1000176" -> "1000283"  [label="DDG: end"];
"1000176" -> "1000175"  [label="AST: "];
"1000176" -> "1000178"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000178" -> "1000176"  [label="AST: "];
"1000179" -> "1000176"  [label="CFG: "];
"1000176" -> "1000716"  [label="DDG: end"];
"1000176" -> "1000175"  [label="DDG: end"];
"1000152" -> "1000176"  [label="DDG: end"];
"1000176" -> "1000243"  [label="DDG: end"];
"1000152" -> "1000121"  [label="AST: "];
"1000152" -> "1000154"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000177" -> "1000152"  [label="CFG: "];
"1000152" -> "1000716"  [label="DDG: offset + (ntohs(ipv6_hdr(skb)->payload_len) -\n\t\t\t((u8 *)(fhdr + 1) - (u8 *)(ipv6_hdr(skb) + 1)))"];
"1000144" -> "1000152"  [label="DDG: offset"];
"1000156" -> "1000152"  [label="DDG: ntohs(ipv6_hdr(skb)->payload_len)"];
"1000156" -> "1000152"  [label="DDG: (u8 *)(fhdr + 1) - (u8 *)(ipv6_hdr(skb) + 1)"];
"1000144" -> "1000121"  [label="AST: "];
"1000144" -> "1000146"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000146" -> "1000144"  [label="AST: "];
"1000153" -> "1000144"  [label="CFG: "];
"1000144" -> "1000716"  [label="DDG: ntohs(fhdr->frag_off) & ~0x7"];
"1000146" -> "1000144"  [label="DDG: ntohs(fhdr->frag_off)"];
"1000146" -> "1000144"  [label="DDG: ~0x7"];
"1000144" -> "1000154"  [label="DDG: offset"];
"1000146" -> "1000151"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000151" -> "1000146"  [label="AST: "];
"1000146" -> "1000716"  [label="DDG: ~0x7"];
"1000146" -> "1000716"  [label="DDG: ntohs(fhdr->frag_off)"];
"1000147" -> "1000146"  [label="DDG: fhdr->frag_off"];
"1000147" -> "1000148"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000151" -> "1000147"  [label="CFG: "];
"1000147" -> "1000716"  [label="DDG: fhdr->frag_off"];
"1000147" -> "1000191"  [label="DDG: fhdr->frag_off"];
"1000147" -> "1000234"  [label="DDG: fhdr->frag_off"];
"1000156" -> "1000154"  [label="AST: "];
"1000156" -> "1000162"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000162" -> "1000156"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000156" -> "1000716"  [label="DDG: ntohs(ipv6_hdr(skb)->payload_len)"];
"1000156" -> "1000716"  [label="DDG: (u8 *)(fhdr + 1) - (u8 *)(ipv6_hdr(skb) + 1)"];
"1000156" -> "1000154"  [label="DDG: ntohs(ipv6_hdr(skb)->payload_len)"];
"1000156" -> "1000154"  [label="DDG: (u8 *)(fhdr + 1) - (u8 *)(ipv6_hdr(skb) + 1)"];
"1000157" -> "1000156"  [label="DDG: ipv6_hdr(skb)->payload_len"];
"1000162" -> "1000156"  [label="DDG: (u8 *)(fhdr + 1)"];
"1000162" -> "1000156"  [label="DDG: (u8 *)(ipv6_hdr(skb) + 1)"];
"1000157" -> "1000158"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000164" -> "1000157"  [label="CFG: "];
"1000157" -> "1000716"  [label="DDG: ipv6_hdr(skb)->payload_len"];
"1000162" -> "1000168"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000168" -> "1000162"  [label="AST: "];
"1000162" -> "1000716"  [label="DDG: (u8 *)(ipv6_hdr(skb) + 1)"];
"1000162" -> "1000716"  [label="DDG: (u8 *)(fhdr + 1)"];
"1000163" -> "1000162"  [label="DDG: fhdr + 1"];
"1000168" -> "1000162"  [label="DDG: ipv6_hdr(skb) + 1"];
"1000163" -> "1000165"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000165" -> "1000163"  [label="AST: "];
"1000169" -> "1000163"  [label="CFG: "];
"1000163" -> "1000716"  [label="DDG: fhdr + 1"];
"1000168" -> "1000170"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000168" -> "1000716"  [label="DDG: ipv6_hdr(skb) + 1"];
"1000258" -> "1000250"  [label="AST: "];
"1000258" -> "1000260"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000260" -> "1000258"  [label="AST: "];
"1000250" -> "1000258"  [label="CFG: "];
"1000258" -> "1000716"  [label="DDG: end"];
"1000258" -> "1000716"  [label="DDG: fq->q.len"];
"1000258" -> "1000250"  [label="DDG: end"];
"1000258" -> "1000250"  [label="DDG: fq->q.len"];
"1000243" -> "1000258"  [label="DDG: end"];
"1000243" -> "1000258"  [label="DDG: fq->q.len"];
"1000258" -> "1000273"  [label="DDG: end"];
"1000243" -> "1000242"  [label="AST: "];
"1000243" -> "1000245"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000245" -> "1000243"  [label="AST: "];
"1000254" -> "1000243"  [label="CFG: "];
"1000242" -> "1000243"  [label="CFG: "];
"1000243" -> "1000716"  [label="DDG: end"];
"1000243" -> "1000716"  [label="DDG: fq->q.len"];
"1000243" -> "1000242"  [label="DDG: end"];
"1000243" -> "1000242"  [label="DDG: fq->q.len"];
"1000243" -> "1000273"  [label="DDG: end"];
"1000418" -> "1000417"  [label="AST: "];
"1000418" -> "1000420"  [label="CFG: "];
"1000419" -> "1000418"  [label="AST: "];
"1000420" -> "1000418"  [label="AST: "];
"1000423" -> "1000418"  [label="CFG: "];
"1000449" -> "1000418"  [label="CFG: "];
"1000418" -> "1000716"  [label="DDG: i > 0"];
"1000418" -> "1000716"  [label="DDG: i"];
"1000405" -> "1000418"  [label="DDG: i"];
"1000418" -> "1000422"  [label="DDG: i"];
"1000405" -> "1000403"  [label="AST: "];
"1000405" -> "1000407"  [label="CFG: "];
"1000406" -> "1000405"  [label="AST: "];
"1000407" -> "1000405"  [label="AST: "];
"1000419" -> "1000405"  [label="CFG: "];
"1000405" -> "1000716"  [label="DDG: (FRAG6_CB(prev)->offset + prev->len) - offset"];
"1000407" -> "1000405"  [label="DDG: FRAG6_CB(prev)->offset + prev->len"];
"1000407" -> "1000405"  [label="DDG: offset"];
"1000407" -> "1000416"  [label="CFG: "];
"1000408" -> "1000407"  [label="AST: "];
"1000416" -> "1000407"  [label="AST: "];
"1000407" -> "1000716"  [label="DDG: FRAG6_CB(prev)->offset + prev->len"];
"1000407" -> "1000716"  [label="DDG: offset"];
"1000358" -> "1000407"  [label="DDG: FRAG6_CB(prev)->offset"];
"1000358" -> "1000407"  [label="DDG: offset"];
"1000390" -> "1000407"  [label="DDG: offset"];
"1000407" -> "1000422"  [label="DDG: offset"];
"1000407" -> "1000546"  [label="DDG: offset"];
"1000407" -> "1000633"  [label="DDG: offset"];
"1000358" -> "1000355"  [label="AST: "];
"1000358" -> "1000363"  [label="CFG: "];
"1000359" -> "1000358"  [label="AST: "];
"1000363" -> "1000358"  [label="AST: "];
"1000355" -> "1000358"  [label="CFG: "];
"1000358" -> "1000716"  [label="DDG: offset"];
"1000358" -> "1000716"  [label="DDG: FRAG6_CB(prev)->offset"];
"1000358" -> "1000355"  [label="DDG: FRAG6_CB(prev)->offset"];
"1000358" -> "1000355"  [label="DDG: offset"];
"1000358" -> "1000390"  [label="DDG: offset"];
"1000358" -> "1000408"  [label="DDG: FRAG6_CB(prev)->offset"];
"1000358" -> "1000546"  [label="DDG: offset"];
"1000358" -> "1000633"  [label="DDG: offset"];
"1000390" -> "1000389"  [label="AST: "];
"1000390" -> "1000395"  [label="CFG: "];
"1000391" -> "1000390"  [label="AST: "];
"1000395" -> "1000390"  [label="AST: "];
"1000396" -> "1000390"  [label="CFG: "];
"1000398" -> "1000390"  [label="CFG: "];
"1000390" -> "1000716"  [label="DDG: FRAG6_CB(next)->offset >= offset"];
"1000390" -> "1000716"  [label="DDG: FRAG6_CB(next)->offset"];
"1000390" -> "1000716"  [label="DDG: offset"];
"1000390" -> "1000450"  [label="DDG: FRAG6_CB(next)->offset"];
"1000390" -> "1000460"  [label="DDG: FRAG6_CB(next)->offset"];
"1000390" -> "1000546"  [label="DDG: offset"];
"1000390" -> "1000633"  [label="DDG: offset"];
"1000431" -> "1000430"  [label="AST: "];
"1000435" -> "1000431"  [label="CFG: "];
"1000439" -> "1000431"  [label="CFG: "];
"1000431" -> "1000716"  [label="DDG: pskb_pull(skb, i)"];
"1000431" -> "1000716"  [label="DDG: !pskb_pull(skb, i)"];
"1000548" -> "1000547"  [label="AST: "];
"1000548" -> "1000549"  [label="CFG: "];
"1000549" -> "1000548"  [label="AST: "];
"1000550" -> "1000548"  [label="CFG: "];
"1000548" -> "1000560"  [label="DDG: skb"];
"1000548" -> "1000569"  [label="DDG: skb"];
"1000548" -> "1000575"  [label="DDG: skb"];
"1000560" -> "1000557"  [label="AST: "];
"1000560" -> "1000566"  [label="CFG: "];
"1000561" -> "1000560"  [label="AST: "];
"1000566" -> "1000560"  [label="AST: "];
"1000568" -> "1000560"  [label="CFG: "];
"1000560" -> "1000716"  [label="DDG: fq->q.fragments_tail"];
"1000569" -> "1000567"  [label="AST: "];
"1000569" -> "1000573"  [label="CFG: "];
"1000570" -> "1000569"  [label="AST: "];
"1000573" -> "1000569"  [label="AST: "];
"1000583" -> "1000569"  [label="CFG: "];
"1000569" -> "1000716"  [label="DDG: prev->next"];
"1000569" -> "1000716"  [label="DDG: skb"];
"1000575" -> "1000574"  [label="AST: "];
"1000575" -> "1000581"  [label="CFG: "];
"1000576" -> "1000575"  [label="AST: "];
"1000581" -> "1000575"  [label="AST: "];
"1000583" -> "1000575"  [label="CFG: "];
"1000575" -> "1000716"  [label="DDG: skb"];
"1000575" -> "1000716"  [label="DDG: fq->q.fragments"];
"1000708" -> "1000707"  [label="AST: "];
"1000708" -> "1000709"  [label="CFG: "];
"1000709" -> "1000708"  [label="AST: "];
"1000707" -> "1000708"  [label="CFG: "];
"1000708" -> "1000707"  [label="DDG: skb"];
"1000708" -> "1000711"  [label="DDG: skb"];
"1000707" -> "1000705"  [label="AST: "];
"1000710" -> "1000707"  [label="CFG: "];
"1000707" -> "1000716"  [label="DDG: skb_dst(skb)"];
"1000707" -> "1000705"  [label="DDG: skb_dst(skb)"];
"1000705" -> "1000121"  [label="AST: "];
"1000705" -> "1000710"  [label="CFG: "];
"1000706" -> "1000705"  [label="AST: "];
"1000710" -> "1000705"  [label="AST: "];
"1000712" -> "1000705"  [label="CFG: "];
"1000705" -> "1000716"  [label="DDG: IPSTATS_MIB_REASMFAILS"];
"1000705" -> "1000716"  [label="DDG: net"];
"1000705" -> "1000716"  [label="DDG: IP6_INC_STATS(net, ip6_dst_idev(skb_dst(skb)),\n \t\t      IPSTATS_MIB_REASMFAILS)"];
"1000705" -> "1000716"  [label="DDG: ip6_dst_idev(skb_dst(skb))"];
"1000128" -> "1000705"  [label="DDG: net"];
"1000711" -> "1000121"  [label="AST: "];
"1000711" -> "1000712"  [label="CFG: "];
"1000712" -> "1000711"  [label="AST: "];
"1000715" -> "1000711"  [label="CFG: "];
"1000711" -> "1000716"  [label="DDG: kfree_skb(skb)"];
"1000711" -> "1000716"  [label="DDG: skb"];
}
