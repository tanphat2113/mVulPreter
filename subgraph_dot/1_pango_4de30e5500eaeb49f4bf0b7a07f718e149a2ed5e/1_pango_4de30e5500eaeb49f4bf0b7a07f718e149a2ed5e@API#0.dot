digraph "1_pango_4de30e5500eaeb49f4bf0b7a07f718e149a2ed5e@API" {
"1000154" [label="(Call,g_realloc (string->glyphs, string->space * sizeof (PangoGlyphInfo)))"];
"1000158" [label="(Call,string->space * sizeof (PangoGlyphInfo))"];
"1000109" [label="(Call,new_len > string->space)"];
"1000141" [label="(Call,new_len = string->space = G_MAXINT - 8)"];
"1000102" [label="(MethodParameterIn,gint new_len)"];
"1000143" [label="(Call,string->space = G_MAXINT - 8)"];
"1000147" [label="(Call,G_MAXINT - 8)"];
"1000105" [label="(Call,new_len >= 0)"];
"1000133" [label="(Call,string->space < 0)"];
"1000121" [label="(Call,string->space = 1)"];
"1000127" [label="(Call,string->space *= 2)"];
"1000116" [label="(Call,string->space == 0)"];
"1000150" [label="(Call,string->glyphs = g_realloc (string->glyphs, string->space * sizeof (PangoGlyphInfo)))"];
"1000166" [label="(Identifier,string)"];
"1000126" [label="(ControlStructure,else)"];
"1000128" [label="(Call,string->space)"];
"1000122" [label="(Call,string->space)"];
"1000151" [label="(Call,string->glyphs)"];
"1000143" [label="(Call,string->space = G_MAXINT - 8)"];
"1000137" [label="(Literal,0)"];
"1000155" [label="(Call,string->glyphs)"];
"1000104" [label="(Call,g_return_if_fail (new_len >= 0))"];
"1000111" [label="(Call,string->space)"];
"1000109" [label="(Call,new_len > string->space)"];
"1000141" [label="(Call,new_len = string->space = G_MAXINT - 8)"];
"1000140" [label="(Literal,\"glyph string length overflows maximum integer size, truncated\")"];
"1000117" [label="(Call,string->space)"];
"1000110" [label="(Identifier,new_len)"];
"1000120" [label="(Literal,0)"];
"1000142" [label="(Identifier,new_len)"];
"1000118" [label="(Identifier,string)"];
"1000138" [label="(Block,)"];
"1000108" [label="(ControlStructure,while (new_len > string->space))"];
"1000147" [label="(Call,G_MAXINT - 8)"];
"1000148" [label="(Identifier,G_MAXINT)"];
"1000135" [label="(Identifier,string)"];
"1000183" [label="(MethodReturn,RET)"];
"1000129" [label="(Identifier,string)"];
"1000178" [label="(Call,string->num_glyphs = new_len)"];
"1000133" [label="(Call,string->space < 0)"];
"1000131" [label="(Literal,2)"];
"1000107" [label="(Literal,0)"];
"1000159" [label="(Call,string->space)"];
"1000125" [label="(Literal,1)"];
"1000162" [label="(Call,sizeof (PangoGlyphInfo))"];
"1000127" [label="(Call,string->space *= 2)"];
"1000103" [label="(Block,)"];
"1000106" [label="(Identifier,new_len)"];
"1000102" [label="(MethodParameterIn,gint new_len)"];
"1000149" [label="(Literal,8)"];
"1000116" [label="(Call,string->space == 0)"];
"1000154" [label="(Call,g_realloc (string->glyphs, string->space * sizeof (PangoGlyphInfo)))"];
"1000115" [label="(ControlStructure,if (string->space == 0))"];
"1000134" [label="(Call,string->space)"];
"1000152" [label="(Identifier,string)"];
"1000132" [label="(ControlStructure,if (string->space < 0))"];
"1000150" [label="(Call,string->glyphs = g_realloc (string->glyphs, string->space * sizeof (PangoGlyphInfo)))"];
"1000105" [label="(Call,new_len >= 0)"];
"1000158" [label="(Call,string->space * sizeof (PangoGlyphInfo))"];
"1000172" [label="(Call,string->space * sizeof (gint))"];
"1000121" [label="(Call,string->space = 1)"];
"1000123" [label="(Identifier,string)"];
"1000144" [label="(Call,string->space)"];
"1000154" -> "1000150"  [label="AST: "];
"1000154" -> "1000158"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000158" -> "1000154"  [label="AST: "];
"1000150" -> "1000154"  [label="CFG: "];
"1000154" -> "1000183"  [label="DDG: string->space * sizeof (PangoGlyphInfo)"];
"1000154" -> "1000150"  [label="DDG: string->glyphs"];
"1000154" -> "1000150"  [label="DDG: string->space * sizeof (PangoGlyphInfo)"];
"1000158" -> "1000154"  [label="DDG: string->space"];
"1000158" -> "1000162"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000162" -> "1000158"  [label="AST: "];
"1000109" -> "1000158"  [label="DDG: string->space"];
"1000158" -> "1000172"  [label="DDG: string->space"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000118" -> "1000109"  [label="CFG: "];
"1000152" -> "1000109"  [label="CFG: "];
"1000109" -> "1000183"  [label="DDG: new_len > string->space"];
"1000141" -> "1000109"  [label="DDG: new_len"];
"1000105" -> "1000109"  [label="DDG: new_len"];
"1000102" -> "1000109"  [label="DDG: new_len"];
"1000143" -> "1000109"  [label="DDG: string->space"];
"1000133" -> "1000109"  [label="DDG: string->space"];
"1000109" -> "1000116"  [label="DDG: string->space"];
"1000109" -> "1000178"  [label="DDG: new_len"];
"1000141" -> "1000138"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000110" -> "1000141"  [label="CFG: "];
"1000102" -> "1000141"  [label="DDG: new_len"];
"1000143" -> "1000141"  [label="DDG: string->space"];
"1000147" -> "1000141"  [label="DDG: G_MAXINT"];
"1000147" -> "1000141"  [label="DDG: 8"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000183"  [label="DDG: new_len"];
"1000102" -> "1000105"  [label="DDG: new_len"];
"1000102" -> "1000178"  [label="DDG: new_len"];
"1000143" -> "1000147"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000147" -> "1000143"  [label="AST: "];
"1000143" -> "1000183"  [label="DDG: G_MAXINT - 8"];
"1000147" -> "1000143"  [label="DDG: G_MAXINT"];
"1000147" -> "1000143"  [label="DDG: 8"];
"1000147" -> "1000149"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000147" -> "1000183"  [label="DDG: G_MAXINT"];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000107"  [label="CFG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000107" -> "1000105"  [label="AST: "];
"1000104" -> "1000105"  [label="CFG: "];
"1000105" -> "1000104"  [label="DDG: new_len"];
"1000105" -> "1000104"  [label="DDG: 0"];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000137"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000137" -> "1000133"  [label="AST: "];
"1000110" -> "1000133"  [label="CFG: "];
"1000140" -> "1000133"  [label="CFG: "];
"1000133" -> "1000183"  [label="DDG: string->space < 0"];
"1000121" -> "1000133"  [label="DDG: string->space"];
"1000127" -> "1000133"  [label="DDG: string->space"];
"1000121" -> "1000115"  [label="AST: "];
"1000121" -> "1000125"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000125" -> "1000121"  [label="AST: "];
"1000135" -> "1000121"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000127" -> "1000131"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000131" -> "1000127"  [label="AST: "];
"1000135" -> "1000127"  [label="CFG: "];
"1000116" -> "1000127"  [label="DDG: string->space"];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000120"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000120" -> "1000116"  [label="AST: "];
"1000123" -> "1000116"  [label="CFG: "];
"1000129" -> "1000116"  [label="CFG: "];
"1000116" -> "1000183"  [label="DDG: string->space == 0"];
"1000150" -> "1000103"  [label="AST: "];
"1000151" -> "1000150"  [label="AST: "];
"1000166" -> "1000150"  [label="CFG: "];
"1000150" -> "1000183"  [label="DDG: string->glyphs"];
"1000150" -> "1000183"  [label="DDG: g_realloc (string->glyphs, string->space * sizeof (PangoGlyphInfo))"];
}
