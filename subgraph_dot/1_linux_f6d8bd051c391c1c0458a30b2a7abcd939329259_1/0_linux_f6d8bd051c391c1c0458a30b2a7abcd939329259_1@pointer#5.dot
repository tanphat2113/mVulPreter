digraph "0_linux_f6d8bd051c391c1c0458a30b2a7abcd939329259_1@pointer" {
"1000493" [label="(Call,inet6_iif(skb))"];
"1000341" [label="(Call,dccp_create_openreq_child(sk, req, skb))"];
"1000251" [label="(Call,sk_acceptq_is_full(sk))"];
"1000123" [label="(Call,inet6_sk(sk))"];
"1000109" [label="(MethodParameterIn,struct sock *sk)"];
"1000329" [label="(Call,ip6_dst_lookup_flow(sk, &fl6, final_p, false))"];
"1000322" [label="(Call,security_sk_classify_flow(sk, flowi6_to_flowi(&fl6)))"];
"1000324" [label="(Call,flowi6_to_flowi(&fl6))"];
"1000284" [label="(Call,fl6_update_dst(&fl6, opt, &final))"];
"1000262" [label="(Call,memset(&fl6, 0, sizeof(fl6)))"];
"1000245" [label="(Call,opt = np->opt)"];
"1000282" [label="(Call,final_p = fl6_update_dst(&fl6, opt, &final))"];
"1000117" [label="(Call,inet6_rsk(req))"];
"1000111" [label="(MethodParameterIn,struct request_sock *req)"];
"1000319" [label="(Call,inet_rsk(req))"];
"1000311" [label="(Call,inet_rsk(req))"];
"1000110" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000489" [label="(Call,newnp->mcast_oif  = inet6_iif(skb))"];
"1000500" [label="(Call,ipv6_hdr(skb))"];
"1000227" [label="(Call,inet6_iif(skb))"];
"1000493" [label="(Call,inet6_iif(skb))"];
"1000311" [label="(Call,inet_rsk(req))"];
"1000504" [label="(Call,opt != NULL)"];
"1000590" [label="(Call,sock_net(sk))"];
"1000284" [label="(Call,fl6_update_dst(&fl6, opt, &final))"];
"1000494" [label="(Identifier,skb)"];
"1000343" [label="(Identifier,req)"];
"1000253" [label="(ControlStructure,goto out_overflow;)"];
"1000258" [label="(Block,)"];
"1000262" [label="(Call,memset(&fl6, 0, sizeof(fl6)))"];
"1000251" [label="(Call,sk_acceptq_is_full(sk))"];
"1000270" [label="(Identifier,fl6)"];
"1000328" [label="(Identifier,dst)"];
"1000313" [label="(FieldIdentifier,rmt_port)"];
"1000342" [label="(Identifier,sk)"];
"1000234" [label="(Call,ipv6_hdr(skb))"];
"1000499" [label="(Call,ipv6_hdr(skb)->hop_limit)"];
"1000245" [label="(Call,opt = np->opt)"];
"1000611" [label="(Call,sock_kfree_s(sk, opt, opt->tot_len))"];
"1000123" [label="(Call,inet6_sk(sk))"];
"1000323" [label="(Identifier,sk)"];
"1000339" [label="(Call,newsk = dccp_create_openreq_child(sk, req, skb))"];
"1000490" [label="(Call,newnp->mcast_oif)"];
"1000293" [label="(Identifier,fl6)"];
"1000334" [label="(Identifier,false)"];
"1000250" [label="(ControlStructure,if (sk_acceptq_is_full(sk)))"];
"1000287" [label="(Identifier,opt)"];
"1000310" [label="(Call,inet_rsk(req)->rmt_port)"];
"1000265" [label="(Literal,0)"];
"1000312" [label="(Identifier,req)"];
"1000330" [label="(Identifier,sk)"];
"1000319" [label="(Call,inet_rsk(req))"];
"1000333" [label="(Identifier,final_p)"];
"1000110" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000109" [label="(MethodParameterIn,struct sock *sk)"];
"1000344" [label="(Identifier,skb)"];
"1000124" [label="(Identifier,sk)"];
"1000263" [label="(Call,&fl6)"];
"1000113" [label="(Block,)"];
"1000502" [label="(FieldIdentifier,hop_limit)"];
"1000256" [label="(Identifier,dst)"];
"1000117" [label="(Call,inet6_rsk(req))"];
"1000252" [label="(Identifier,sk)"];
"1000324" [label="(Call,flowi6_to_flowi(&fl6))"];
"1000288" [label="(Call,&final)"];
"1000619" [label="(MethodReturn,static struct sock *)"];
"1000325" [label="(Call,&fl6)"];
"1000247" [label="(Call,np->opt)"];
"1000318" [label="(Call,inet_rsk(req)->loc_port)"];
"1000341" [label="(Call,dccp_create_openreq_child(sk, req, skb))"];
"1000497" [label="(Identifier,newnp)"];
"1000501" [label="(Identifier,skb)"];
"1000121" [label="(Call,*np = inet6_sk(sk))"];
"1000283" [label="(Identifier,final_p)"];
"1000115" [label="(Call,*ireq6 = inet6_rsk(req))"];
"1000320" [label="(Identifier,req)"];
"1000266" [label="(Call,sizeof(fl6))"];
"1000603" [label="(Call,opt != NULL)"];
"1000598" [label="(Call,sock_net(sk))"];
"1000329" [label="(Call,ip6_dst_lookup_flow(sk, &fl6, final_p, false))"];
"1000331" [label="(Call,&fl6)"];
"1000575" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000139" [label="(Call,dccp_v4_request_recv_sock(sk, skb, req, dst))"];
"1000282" [label="(Call,final_p = fl6_update_dst(&fl6, opt, &final))"];
"1000285" [label="(Call,&fl6)"];
"1000521" [label="(Call,sock_kfree_s(sk, opt, opt->tot_len))"];
"1000321" [label="(FieldIdentifier,loc_port)"];
"1000322" [label="(Call,security_sk_classify_flow(sk, flowi6_to_flowi(&fl6)))"];
"1000111" [label="(MethodParameterIn,struct request_sock *req)"];
"1000327" [label="(Call,dst = ip6_dst_lookup_flow(sk, &fl6, final_p, false))"];
"1000500" [label="(Call,ipv6_hdr(skb))"];
"1000118" [label="(Identifier,req)"];
"1000246" [label="(Identifier,opt)"];
"1000489" [label="(Call,newnp->mcast_oif  = inet6_iif(skb))"];
"1000493" -> "1000489"  [label="AST: "];
"1000493" -> "1000494"  [label="CFG: "];
"1000494" -> "1000493"  [label="AST: "];
"1000489" -> "1000493"  [label="CFG: "];
"1000493" -> "1000489"  [label="DDG: skb"];
"1000341" -> "1000493"  [label="DDG: skb"];
"1000110" -> "1000493"  [label="DDG: skb"];
"1000493" -> "1000500"  [label="DDG: skb"];
"1000341" -> "1000339"  [label="AST: "];
"1000341" -> "1000344"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="AST: "];
"1000344" -> "1000341"  [label="AST: "];
"1000339" -> "1000341"  [label="CFG: "];
"1000341" -> "1000619"  [label="DDG: skb"];
"1000341" -> "1000619"  [label="DDG: req"];
"1000341" -> "1000339"  [label="DDG: sk"];
"1000341" -> "1000339"  [label="DDG: req"];
"1000341" -> "1000339"  [label="DDG: skb"];
"1000251" -> "1000341"  [label="DDG: sk"];
"1000329" -> "1000341"  [label="DDG: sk"];
"1000109" -> "1000341"  [label="DDG: sk"];
"1000117" -> "1000341"  [label="DDG: req"];
"1000319" -> "1000341"  [label="DDG: req"];
"1000111" -> "1000341"  [label="DDG: req"];
"1000110" -> "1000341"  [label="DDG: skb"];
"1000341" -> "1000521"  [label="DDG: sk"];
"1000341" -> "1000575"  [label="DDG: sk"];
"1000341" -> "1000598"  [label="DDG: sk"];
"1000251" -> "1000250"  [label="AST: "];
"1000251" -> "1000252"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="CFG: "];
"1000256" -> "1000251"  [label="CFG: "];
"1000251" -> "1000619"  [label="DDG: sk_acceptq_is_full(sk)"];
"1000123" -> "1000251"  [label="DDG: sk"];
"1000109" -> "1000251"  [label="DDG: sk"];
"1000251" -> "1000322"  [label="DDG: sk"];
"1000251" -> "1000590"  [label="DDG: sk"];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000123" -> "1000121"  [label="DDG: sk"];
"1000109" -> "1000123"  [label="DDG: sk"];
"1000123" -> "1000139"  [label="DDG: sk"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000619"  [label="DDG: sk"];
"1000109" -> "1000139"  [label="DDG: sk"];
"1000109" -> "1000322"  [label="DDG: sk"];
"1000109" -> "1000329"  [label="DDG: sk"];
"1000109" -> "1000521"  [label="DDG: sk"];
"1000109" -> "1000575"  [label="DDG: sk"];
"1000109" -> "1000590"  [label="DDG: sk"];
"1000109" -> "1000598"  [label="DDG: sk"];
"1000109" -> "1000611"  [label="DDG: sk"];
"1000329" -> "1000327"  [label="AST: "];
"1000329" -> "1000334"  [label="CFG: "];
"1000330" -> "1000329"  [label="AST: "];
"1000331" -> "1000329"  [label="AST: "];
"1000333" -> "1000329"  [label="AST: "];
"1000334" -> "1000329"  [label="AST: "];
"1000327" -> "1000329"  [label="CFG: "];
"1000329" -> "1000619"  [label="DDG: false"];
"1000329" -> "1000619"  [label="DDG: &fl6"];
"1000329" -> "1000619"  [label="DDG: final_p"];
"1000329" -> "1000327"  [label="DDG: sk"];
"1000329" -> "1000327"  [label="DDG: &fl6"];
"1000329" -> "1000327"  [label="DDG: final_p"];
"1000329" -> "1000327"  [label="DDG: false"];
"1000322" -> "1000329"  [label="DDG: sk"];
"1000324" -> "1000329"  [label="DDG: &fl6"];
"1000282" -> "1000329"  [label="DDG: final_p"];
"1000329" -> "1000598"  [label="DDG: sk"];
"1000322" -> "1000258"  [label="AST: "];
"1000322" -> "1000324"  [label="CFG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000324" -> "1000322"  [label="AST: "];
"1000328" -> "1000322"  [label="CFG: "];
"1000322" -> "1000619"  [label="DDG: flowi6_to_flowi(&fl6)"];
"1000322" -> "1000619"  [label="DDG: security_sk_classify_flow(sk, flowi6_to_flowi(&fl6))"];
"1000324" -> "1000322"  [label="DDG: &fl6"];
"1000324" -> "1000325"  [label="CFG: "];
"1000325" -> "1000324"  [label="AST: "];
"1000284" -> "1000324"  [label="DDG: &fl6"];
"1000284" -> "1000282"  [label="AST: "];
"1000284" -> "1000288"  [label="CFG: "];
"1000285" -> "1000284"  [label="AST: "];
"1000287" -> "1000284"  [label="AST: "];
"1000288" -> "1000284"  [label="AST: "];
"1000282" -> "1000284"  [label="CFG: "];
"1000284" -> "1000619"  [label="DDG: &final"];
"1000284" -> "1000282"  [label="DDG: &fl6"];
"1000284" -> "1000282"  [label="DDG: opt"];
"1000284" -> "1000282"  [label="DDG: &final"];
"1000262" -> "1000284"  [label="DDG: &fl6"];
"1000245" -> "1000284"  [label="DDG: opt"];
"1000284" -> "1000504"  [label="DDG: opt"];
"1000284" -> "1000603"  [label="DDG: opt"];
"1000262" -> "1000258"  [label="AST: "];
"1000262" -> "1000266"  [label="CFG: "];
"1000263" -> "1000262"  [label="AST: "];
"1000265" -> "1000262"  [label="AST: "];
"1000266" -> "1000262"  [label="AST: "];
"1000270" -> "1000262"  [label="CFG: "];
"1000262" -> "1000619"  [label="DDG: memset(&fl6, 0, sizeof(fl6))"];
"1000245" -> "1000113"  [label="AST: "];
"1000245" -> "1000247"  [label="CFG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000247" -> "1000245"  [label="AST: "];
"1000252" -> "1000245"  [label="CFG: "];
"1000245" -> "1000619"  [label="DDG: np->opt"];
"1000245" -> "1000504"  [label="DDG: opt"];
"1000245" -> "1000603"  [label="DDG: opt"];
"1000282" -> "1000258"  [label="AST: "];
"1000283" -> "1000282"  [label="AST: "];
"1000293" -> "1000282"  [label="CFG: "];
"1000282" -> "1000619"  [label="DDG: fl6_update_dst(&fl6, opt, &final)"];
"1000117" -> "1000115"  [label="AST: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000117" -> "1000619"  [label="DDG: req"];
"1000117" -> "1000115"  [label="DDG: req"];
"1000111" -> "1000117"  [label="DDG: req"];
"1000117" -> "1000139"  [label="DDG: req"];
"1000117" -> "1000311"  [label="DDG: req"];
"1000111" -> "1000108"  [label="AST: "];
"1000111" -> "1000619"  [label="DDG: req"];
"1000111" -> "1000139"  [label="DDG: req"];
"1000111" -> "1000311"  [label="DDG: req"];
"1000111" -> "1000319"  [label="DDG: req"];
"1000319" -> "1000318"  [label="AST: "];
"1000319" -> "1000320"  [label="CFG: "];
"1000320" -> "1000319"  [label="AST: "];
"1000321" -> "1000319"  [label="CFG: "];
"1000319" -> "1000619"  [label="DDG: req"];
"1000311" -> "1000319"  [label="DDG: req"];
"1000311" -> "1000310"  [label="AST: "];
"1000311" -> "1000312"  [label="CFG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000313" -> "1000311"  [label="CFG: "];
"1000110" -> "1000108"  [label="AST: "];
"1000110" -> "1000619"  [label="DDG: skb"];
"1000110" -> "1000139"  [label="DDG: skb"];
"1000110" -> "1000227"  [label="DDG: skb"];
"1000110" -> "1000234"  [label="DDG: skb"];
"1000110" -> "1000500"  [label="DDG: skb"];
"1000489" -> "1000113"  [label="AST: "];
"1000490" -> "1000489"  [label="AST: "];
"1000497" -> "1000489"  [label="CFG: "];
"1000489" -> "1000619"  [label="DDG: inet6_iif(skb)"];
"1000489" -> "1000619"  [label="DDG: newnp->mcast_oif"];
"1000500" -> "1000499"  [label="AST: "];
"1000500" -> "1000501"  [label="CFG: "];
"1000501" -> "1000500"  [label="AST: "];
"1000502" -> "1000500"  [label="CFG: "];
"1000500" -> "1000619"  [label="DDG: skb"];
}
