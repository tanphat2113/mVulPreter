digraph "0_linux_f6d8bd051c391c1c0458a30b2a7abcd939329259_1@pointer" {
"1000234" [label="(Call,ipv6_hdr(skb))"];
"1000227" [label="(Call,inet6_iif(skb))"];
"1000139" [label="(Call,dccp_v4_request_recv_sock(sk, skb, req, dst))"];
"1000123" [label="(Call,inet6_sk(sk))"];
"1000109" [label="(MethodParameterIn,struct sock *sk)"];
"1000110" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000117" [label="(Call,inet6_rsk(req))"];
"1000111" [label="(MethodParameterIn,struct request_sock *req)"];
"1000112" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000227" [label="(Call,inet6_iif(skb))"];
"1000493" [label="(Call,inet6_iif(skb))"];
"1000311" [label="(Call,inet_rsk(req))"];
"1000590" [label="(Call,sock_net(sk))"];
"1000327" [label="(Call,dst = ip6_dst_lookup_flow(sk, &fl6, final_p, false))"];
"1000141" [label="(Identifier,skb)"];
"1000234" [label="(Call,ipv6_hdr(skb))"];
"1000251" [label="(Call,sk_acceptq_is_full(sk))"];
"1000255" [label="(Call,dst == NULL)"];
"1000223" [label="(Call,newnp->mcast_oif   = inet6_iif(skb))"];
"1000336" [label="(Call,IS_ERR(dst))"];
"1000236" [label="(FieldIdentifier,hop_limit)"];
"1000611" [label="(Call,sock_kfree_s(sk, opt, opt->tot_len))"];
"1000123" [label="(Call,inet6_sk(sk))"];
"1000228" [label="(Identifier,skb)"];
"1000112" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000557" [label="(Call,dst_mtu(dst))"];
"1000350" [label="(Call,__ip6_dst_store(newsk, dst, NULL, NULL))"];
"1000319" [label="(Call,inet_rsk(req))"];
"1000110" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000109" [label="(MethodParameterIn,struct sock *sk)"];
"1000124" [label="(Identifier,sk)"];
"1000117" [label="(Call,inet6_rsk(req))"];
"1000142" [label="(Identifier,req)"];
"1000619" [label="(MethodReturn,static struct sock *)"];
"1000140" [label="(Identifier,sk)"];
"1000233" [label="(Call,ipv6_hdr(skb)->hop_limit)"];
"1000341" [label="(Call,dccp_create_openreq_child(sk, req, skb))"];
"1000121" [label="(Call,*np = inet6_sk(sk))"];
"1000115" [label="(Call,*ireq6 = inet6_rsk(req))"];
"1000143" [label="(Identifier,dst)"];
"1000598" [label="(Call,sock_net(sk))"];
"1000329" [label="(Call,ip6_dst_lookup_flow(sk, &fl6, final_p, false))"];
"1000575" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000139" [label="(Call,dccp_v4_request_recv_sock(sk, skb, req, dst))"];
"1000594" [label="(Call,dst_release(dst))"];
"1000521" [label="(Call,sock_kfree_s(sk, opt, opt->tot_len))"];
"1000322" [label="(Call,security_sk_classify_flow(sk, flowi6_to_flowi(&fl6)))"];
"1000111" [label="(MethodParameterIn,struct request_sock *req)"];
"1000235" [label="(Identifier,skb)"];
"1000500" [label="(Call,ipv6_hdr(skb))"];
"1000118" [label="(Identifier,req)"];
"1000137" [label="(Call,newsk = dccp_v4_request_recv_sock(sk, skb, req, dst))"];
"1000234" -> "1000233"  [label="AST: "];
"1000234" -> "1000235"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000236" -> "1000234"  [label="CFG: "];
"1000234" -> "1000619"  [label="DDG: skb"];
"1000227" -> "1000234"  [label="DDG: skb"];
"1000110" -> "1000234"  [label="DDG: skb"];
"1000227" -> "1000223"  [label="AST: "];
"1000227" -> "1000228"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000223" -> "1000227"  [label="CFG: "];
"1000227" -> "1000223"  [label="DDG: skb"];
"1000139" -> "1000227"  [label="DDG: skb"];
"1000110" -> "1000227"  [label="DDG: skb"];
"1000139" -> "1000137"  [label="AST: "];
"1000139" -> "1000143"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="AST: "];
"1000142" -> "1000139"  [label="AST: "];
"1000143" -> "1000139"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000139" -> "1000619"  [label="DDG: req"];
"1000139" -> "1000619"  [label="DDG: skb"];
"1000139" -> "1000619"  [label="DDG: sk"];
"1000139" -> "1000619"  [label="DDG: dst"];
"1000139" -> "1000137"  [label="DDG: sk"];
"1000139" -> "1000137"  [label="DDG: skb"];
"1000139" -> "1000137"  [label="DDG: req"];
"1000139" -> "1000137"  [label="DDG: dst"];
"1000123" -> "1000139"  [label="DDG: sk"];
"1000109" -> "1000139"  [label="DDG: sk"];
"1000110" -> "1000139"  [label="DDG: skb"];
"1000117" -> "1000139"  [label="DDG: req"];
"1000111" -> "1000139"  [label="DDG: req"];
"1000112" -> "1000139"  [label="DDG: dst"];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000123" -> "1000121"  [label="DDG: sk"];
"1000109" -> "1000123"  [label="DDG: sk"];
"1000123" -> "1000251"  [label="DDG: sk"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000619"  [label="DDG: sk"];
"1000109" -> "1000251"  [label="DDG: sk"];
"1000109" -> "1000322"  [label="DDG: sk"];
"1000109" -> "1000329"  [label="DDG: sk"];
"1000109" -> "1000341"  [label="DDG: sk"];
"1000109" -> "1000521"  [label="DDG: sk"];
"1000109" -> "1000575"  [label="DDG: sk"];
"1000109" -> "1000590"  [label="DDG: sk"];
"1000109" -> "1000598"  [label="DDG: sk"];
"1000109" -> "1000611"  [label="DDG: sk"];
"1000110" -> "1000108"  [label="AST: "];
"1000110" -> "1000619"  [label="DDG: skb"];
"1000110" -> "1000341"  [label="DDG: skb"];
"1000110" -> "1000493"  [label="DDG: skb"];
"1000110" -> "1000500"  [label="DDG: skb"];
"1000117" -> "1000115"  [label="AST: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000117" -> "1000619"  [label="DDG: req"];
"1000117" -> "1000115"  [label="DDG: req"];
"1000111" -> "1000117"  [label="DDG: req"];
"1000117" -> "1000311"  [label="DDG: req"];
"1000117" -> "1000341"  [label="DDG: req"];
"1000111" -> "1000108"  [label="AST: "];
"1000111" -> "1000619"  [label="DDG: req"];
"1000111" -> "1000311"  [label="DDG: req"];
"1000111" -> "1000319"  [label="DDG: req"];
"1000111" -> "1000341"  [label="DDG: req"];
"1000112" -> "1000108"  [label="AST: "];
"1000112" -> "1000619"  [label="DDG: dst"];
"1000112" -> "1000255"  [label="DDG: dst"];
"1000112" -> "1000327"  [label="DDG: dst"];
"1000112" -> "1000336"  [label="DDG: dst"];
"1000112" -> "1000350"  [label="DDG: dst"];
"1000112" -> "1000557"  [label="DDG: dst"];
"1000112" -> "1000594"  [label="DDG: dst"];
}
