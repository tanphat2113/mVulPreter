digraph "0_linux_f6d8bd051c391c1c0458a30b2a7abcd939329259_1@API" {
"1000282" [label="(Call,final_p = fl6_update_dst(&fl6, opt, &final))"];
"1000284" [label="(Call,fl6_update_dst(&fl6, opt, &final))"];
"1000262" [label="(Call,memset(&fl6, 0, sizeof(fl6)))"];
"1000245" [label="(Call,opt = np->opt)"];
"1000329" [label="(Call,ip6_dst_lookup_flow(sk, &fl6, final_p, false))"];
"1000327" [label="(Call,dst = ip6_dst_lookup_flow(sk, &fl6, final_p, false))"];
"1000336" [label="(Call,IS_ERR(dst))"];
"1000350" [label="(Call,__ip6_dst_store(newsk, dst, NULL, NULL))"];
"1000371" [label="(Call,(struct dccp6_sock *)newsk)"];
"1000369" [label="(Call,newdp6 = (struct dccp6_sock *)newsk)"];
"1000376" [label="(Call,inet_sk(newsk))"];
"1000374" [label="(Call,newinet = inet_sk(newsk))"];
"1000388" [label="(Call,inet6_sk(newsk))"];
"1000386" [label="(Call,newnp = inet6_sk(newsk))"];
"1000390" [label="(Call,memcpy(newnp, np, sizeof(struct ipv6_pinfo)))"];
"1000479" [label="(Call,skb_set_owner_r(newnp->pktoptions, newsk))"];
"1000512" [label="(Call,ipv6_dup_options(newsk, opt))"];
"1000508" [label="(Call,newnp->opt = ipv6_dup_options(newsk, opt))"];
"1000534" [label="(Call,newnp->opt != NULL)"];
"1000583" [label="(Call,__inet6_hash(newsk, NULL))"];
"1000586" [label="(Return,return newsk;)"];
"1000603" [label="(Call,opt != NULL)"];
"1000602" [label="(Call,opt != NULL && opt != np->opt)"];
"1000606" [label="(Call,opt != np->opt)"];
"1000611" [label="(Call,sock_kfree_s(sk, opt, opt->tot_len))"];
"1000617" [label="(Return,return NULL;)"];
"1000516" [label="(Call,opt != np->opt)"];
"1000521" [label="(Call,sock_kfree_s(sk, opt, opt->tot_len))"];
"1000575" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000574" [label="(Call,__inet_inherit_port(sk, newsk) < 0)"];
"1000580" [label="(Call,sock_put(newsk))"];
"1000598" [label="(Call,sock_net(sk))"];
"1000597" [label="(Call,NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENDROPS))"];
"1000529" [label="(Call,inet_csk(newsk))"];
"1000541" [label="(Call,inet_csk(newsk))"];
"1000555" [label="(Call,dccp_sync_mss(newsk, dst_mtu(dst)))"];
"1000429" [label="(Call,newinet->opt = NULL)"];
"1000445" [label="(Call,newnp->pktoptions = NULL)"];
"1000451" [label="(Call,ireq6->pktopts != NULL)"];
"1000461" [label="(Call,skb_clone(ireq6->pktopts, GFP_ATOMIC))"];
"1000457" [label="(Call,newnp->pktoptions = skb_clone(ireq6->pktopts, GFP_ATOMIC))"];
"1000466" [label="(Call,kfree_skb(ireq6->pktopts))"];
"1000470" [label="(Call,ireq6->pktopts = NULL)"];
"1000484" [label="(Call,newnp->opt\t  = NULL)"];
"1000504" [label="(Call,opt != NULL)"];
"1000557" [label="(Call,dst_mtu(dst))"];
"1000594" [label="(Call,dst_release(dst))"];
"1000341" [label="(Call,dccp_create_openreq_child(sk, req, skb))"];
"1000339" [label="(Call,newsk = dccp_create_openreq_child(sk, req, skb))"];
"1000346" [label="(Call,newsk == NULL)"];
"1000493" [label="(Call,inet6_iif(skb))"];
"1000489" [label="(Call,newnp->mcast_oif  = inet6_iif(skb))"];
"1000500" [label="(Call,ipv6_hdr(skb))"];
"1000335" [label="(ControlStructure,if (IS_ERR(dst)))"];
"1000393" [label="(Call,sizeof(struct ipv6_pinfo))"];
"1000528" [label="(Call,inet_csk(newsk)->icsk_ext_hdr_len)"];
"1000504" [label="(Call,opt != NULL)"];
"1000284" [label="(Call,fl6_update_dst(&fl6, opt, &final))"];
"1000398" [label="(Identifier,newnp)"];
"1000581" [label="(Identifier,newsk)"];
"1000343" [label="(Identifier,req)"];
"1000612" [label="(Identifier,sk)"];
"1000517" [label="(Identifier,opt)"];
"1000533" [label="(ControlStructure,if (newnp->opt != NULL))"];
"1000514" [label="(Identifier,opt)"];
"1000255" [label="(Call,dst == NULL)"];
"1000597" [label="(Call,NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENDROPS))"];
"1000510" [label="(Identifier,newnp)"];
"1000337" [label="(Identifier,dst)"];
"1000600" [label="(Identifier,LINUX_MIB_LISTENDROPS)"];
"1000347" [label="(Identifier,newsk)"];
"1000265" [label="(Literal,0)"];
"1000373" [label="(Identifier,newsk)"];
"1000350" [label="(Call,__ip6_dst_store(newsk, dst, NULL, NULL))"];
"1000387" [label="(Identifier,newnp)"];
"1000523" [label="(Identifier,opt)"];
"1000319" [label="(Call,inet_rsk(req))"];
"1000507" [label="(Block,)"];
"1000340" [label="(Identifier,newsk)"];
"1000263" [label="(Call,&fl6)"];
"1000375" [label="(Identifier,newinet)"];
"1000445" [label="(Call,newnp->pktoptions = NULL)"];
"1000619" [label="(MethodReturn,static struct sock *)"];
"1000613" [label="(Identifier,opt)"];
"1000451" [label="(Call,ireq6->pktopts != NULL)"];
"1000497" [label="(Identifier,newnp)"];
"1000121" [label="(Call,*np = inet6_sk(sk))"];
"1000479" [label="(Call,skb_set_owner_r(newnp->pktoptions, newsk))"];
"1000266" [label="(Call,sizeof(fl6))"];
"1000603" [label="(Call,opt != NULL)"];
"1000542" [label="(Identifier,newsk)"];
"1000369" [label="(Call,newdp6 = (struct dccp6_sock *)newsk)"];
"1000380" [label="(Identifier,newinet)"];
"1000285" [label="(Call,&fl6)"];
"1000429" [label="(Call,newinet->opt = NULL)"];
"1000524" [label="(Call,opt->tot_len)"];
"1000574" [label="(Call,__inet_inherit_port(sk, newsk) < 0)"];
"1000521" [label="(Call,sock_kfree_s(sk, opt, opt->tot_len))"];
"1000577" [label="(Identifier,newsk)"];
"1000573" [label="(ControlStructure,if (__inet_inherit_port(sk, newsk) < 0))"];
"1000543" [label="(FieldIdentifier,icsk_ext_hdr_len)"];
"1000485" [label="(Call,newnp->opt)"];
"1000388" [label="(Call,inet6_sk(newsk))"];
"1000555" [label="(Call,dccp_sync_mss(newsk, dst_mtu(dst)))"];
"1000590" [label="(Call,sock_net(sk))"];
"1000461" [label="(Call,skb_clone(ireq6->pktopts, GFP_ATOMIC))"];
"1000258" [label="(Block,)"];
"1000270" [label="(Identifier,fl6)"];
"1000251" [label="(Call,sk_acceptq_is_full(sk))"];
"1000583" [label="(Call,__inet6_hash(newsk, NULL))"];
"1000328" [label="(Identifier,dst)"];
"1000453" [label="(Identifier,ireq6)"];
"1000354" [label="(Identifier,NULL)"];
"1000376" [label="(Call,inet_sk(newsk))"];
"1000336" [label="(Call,IS_ERR(dst))"];
"1000617" [label="(Return,return NULL;)"];
"1000430" [label="(Call,newinet->opt)"];
"1000491" [label="(Identifier,newnp)"];
"1000558" [label="(Identifier,dst)"];
"1000293" [label="(Identifier,fl6)"];
"1000334" [label="(Identifier,false)"];
"1000601" [label="(ControlStructure,if (opt != NULL && opt != np->opt))"];
"1000584" [label="(Identifier,newsk)"];
"1000486" [label="(Identifier,newnp)"];
"1000456" [label="(Block,)"];
"1000346" [label="(Call,newsk == NULL)"];
"1000606" [label="(Call,opt != np->opt)"];
"1000522" [label="(Identifier,sk)"];
"1000540" [label="(Call,inet_csk(newsk)->icsk_ext_hdr_len)"];
"1000345" [label="(ControlStructure,if (newsk == NULL))"];
"1000333" [label="(Identifier,final_p)"];
"1000477" [label="(Identifier,newnp)"];
"1000579" [label="(Block,)"];
"1000541" [label="(Call,inet_csk(newsk))"];
"1000459" [label="(Identifier,newnp)"];
"1000467" [label="(Call,ireq6->pktopts)"];
"1000501" [label="(Identifier,skb)"];
"1000531" [label="(FieldIdentifier,icsk_ext_hdr_len)"];
"1000582" [label="(ControlStructure,goto out;)"];
"1000283" [label="(Identifier,final_p)"];
"1000499" [label="(Call,ipv6_hdr(skb)->hop_limit)"];
"1000338" [label="(ControlStructure,goto out;)"];
"1000352" [label="(Identifier,dst)"];
"1000329" [label="(Call,ip6_dst_lookup_flow(sk, &fl6, final_p, false))"];
"1000331" [label="(Call,&fl6)"];
"1000594" [label="(Call,dst_release(dst))"];
"1000605" [label="(Identifier,NULL)"];
"1000585" [label="(Identifier,NULL)"];
"1000392" [label="(Identifier,np)"];
"1000247" [label="(Call,np->opt)"];
"1000327" [label="(Call,dst = ip6_dst_lookup_flow(sk, &fl6, final_p, false))"];
"1000246" [label="(Identifier,opt)"];
"1000493" [label="(Call,inet6_iif(skb))"];
"1000538" [label="(Identifier,NULL)"];
"1000488" [label="(Identifier,NULL)"];
"1000599" [label="(Identifier,sk)"];
"1000614" [label="(Call,opt->tot_len)"];
"1000342" [label="(Identifier,sk)"];
"1000534" [label="(Call,newnp->opt != NULL)"];
"1000595" [label="(Identifier,dst)"];
"1000475" [label="(ControlStructure,if (newnp->pktoptions))"];
"1000468" [label="(Identifier,ireq6)"];
"1000611" [label="(Call,sock_kfree_s(sk, opt, opt->tot_len))"];
"1000490" [label="(Call,newnp->mcast_oif)"];
"1000351" [label="(Identifier,newsk)"];
"1000339" [label="(Call,newsk = dccp_create_openreq_child(sk, req, skb))"];
"1000557" [label="(Call,dst_mtu(dst))"];
"1000513" [label="(Identifier,newsk)"];
"1000580" [label="(Call,sock_put(newsk))"];
"1000433" [label="(Identifier,NULL)"];
"1000330" [label="(Identifier,sk)"];
"1000530" [label="(Identifier,newsk)"];
"1000109" [label="(MethodParameterIn,struct sock *sk)"];
"1000110" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000437" [label="(Identifier,newnp)"];
"1000607" [label="(Identifier,opt)"];
"1000113" [label="(Block,)"];
"1000596" [label="(JumpTarget,out:)"];
"1000578" [label="(Literal,0)"];
"1000288" [label="(Call,&final)"];
"1000117" [label="(Call,inet6_rsk(req))"];
"1000508" [label="(Call,newnp->opt = ipv6_dup_options(newsk, opt))"];
"1000374" [label="(Call,newinet = inet_sk(newsk))"];
"1000484" [label="(Call,newnp->opt\t  = NULL)"];
"1000341" [label="(Call,dccp_create_openreq_child(sk, req, skb))"];
"1000561" [label="(Identifier,newinet)"];
"1000455" [label="(Identifier,NULL)"];
"1000450" [label="(ControlStructure,if (ireq6->pktopts != NULL))"];
"1000458" [label="(Call,newnp->pktoptions)"];
"1000391" [label="(Identifier,newnp)"];
"1000282" [label="(Call,final_p = fl6_update_dst(&fl6, opt, &final))"];
"1000598" [label="(Call,sock_net(sk))"];
"1000587" [label="(Identifier,newsk)"];
"1000575" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000349" [label="(ControlStructure,goto out_nonewsk;)"];
"1000471" [label="(Call,ireq6->pktopts)"];
"1000322" [label="(Call,security_sk_classify_flow(sk, flowi6_to_flowi(&fl6)))"];
"1000576" [label="(Identifier,sk)"];
"1000489" [label="(Call,newnp->mcast_oif  = inet6_iif(skb))"];
"1000556" [label="(Identifier,newsk)"];
"1000535" [label="(Call,newnp->opt)"];
"1000348" [label="(Identifier,NULL)"];
"1000506" [label="(Identifier,NULL)"];
"1000494" [label="(Identifier,skb)"];
"1000262" [label="(Call,memset(&fl6, 0, sizeof(fl6)))"];
"1000357" [label="(Identifier,newsk)"];
"1000618" [label="(Identifier,NULL)"];
"1000446" [label="(Call,newnp->pktoptions)"];
"1000465" [label="(Identifier,GFP_ATOMIC)"];
"1000586" [label="(Return,return newsk;)"];
"1000245" [label="(Call,opt = np->opt)"];
"1000483" [label="(Identifier,newsk)"];
"1000353" [label="(Identifier,NULL)"];
"1000516" [label="(Call,opt != np->opt)"];
"1000462" [label="(Call,ireq6->pktopts)"];
"1000472" [label="(Identifier,ireq6)"];
"1000112" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000529" [label="(Call,inet_csk(newsk))"];
"1000390" [label="(Call,memcpy(newnp, np, sizeof(struct ipv6_pinfo)))"];
"1000287" [label="(Identifier,opt)"];
"1000503" [label="(ControlStructure,if (opt != NULL))"];
"1000505" [label="(Identifier,opt)"];
"1000457" [label="(Call,newnp->pktoptions = skb_clone(ireq6->pktopts, GFP_ATOMIC))"];
"1000512" [label="(Call,ipv6_dup_options(newsk, opt))"];
"1000370" [label="(Identifier,newdp6)"];
"1000470" [label="(Call,ireq6->pktopts = NULL)"];
"1000371" [label="(Call,(struct dccp6_sock *)newsk)"];
"1000602" [label="(Call,opt != NULL && opt != np->opt)"];
"1000389" [label="(Identifier,newsk)"];
"1000344" [label="(Identifier,skb)"];
"1000377" [label="(Identifier,newsk)"];
"1000466" [label="(Call,kfree_skb(ireq6->pktopts))"];
"1000502" [label="(FieldIdentifier,hop_limit)"];
"1000324" [label="(Call,flowi6_to_flowi(&fl6))"];
"1000252" [label="(Identifier,sk)"];
"1000386" [label="(Call,newnp = inet6_sk(newsk))"];
"1000452" [label="(Call,ireq6->pktopts)"];
"1000474" [label="(Identifier,NULL)"];
"1000518" [label="(Call,np->opt)"];
"1000509" [label="(Call,newnp->opt)"];
"1000480" [label="(Call,newnp->pktoptions)"];
"1000604" [label="(Identifier,opt)"];
"1000515" [label="(ControlStructure,if (opt != np->opt))"];
"1000111" [label="(MethodParameterIn,struct request_sock *req)"];
"1000500" [label="(Call,ipv6_hdr(skb))"];
"1000449" [label="(Identifier,NULL)"];
"1000608" [label="(Call,np->opt)"];
"1000282" -> "1000258"  [label="AST: "];
"1000282" -> "1000284"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000284" -> "1000282"  [label="AST: "];
"1000293" -> "1000282"  [label="CFG: "];
"1000282" -> "1000619"  [label="DDG: fl6_update_dst(&fl6, opt, &final)"];
"1000284" -> "1000282"  [label="DDG: &fl6"];
"1000284" -> "1000282"  [label="DDG: opt"];
"1000284" -> "1000282"  [label="DDG: &final"];
"1000282" -> "1000329"  [label="DDG: final_p"];
"1000284" -> "1000288"  [label="CFG: "];
"1000285" -> "1000284"  [label="AST: "];
"1000287" -> "1000284"  [label="AST: "];
"1000288" -> "1000284"  [label="AST: "];
"1000284" -> "1000619"  [label="DDG: &final"];
"1000262" -> "1000284"  [label="DDG: &fl6"];
"1000245" -> "1000284"  [label="DDG: opt"];
"1000284" -> "1000324"  [label="DDG: &fl6"];
"1000284" -> "1000504"  [label="DDG: opt"];
"1000284" -> "1000603"  [label="DDG: opt"];
"1000262" -> "1000258"  [label="AST: "];
"1000262" -> "1000266"  [label="CFG: "];
"1000263" -> "1000262"  [label="AST: "];
"1000265" -> "1000262"  [label="AST: "];
"1000266" -> "1000262"  [label="AST: "];
"1000270" -> "1000262"  [label="CFG: "];
"1000262" -> "1000619"  [label="DDG: memset(&fl6, 0, sizeof(fl6))"];
"1000245" -> "1000113"  [label="AST: "];
"1000245" -> "1000247"  [label="CFG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000247" -> "1000245"  [label="AST: "];
"1000252" -> "1000245"  [label="CFG: "];
"1000245" -> "1000619"  [label="DDG: np->opt"];
"1000245" -> "1000504"  [label="DDG: opt"];
"1000245" -> "1000603"  [label="DDG: opt"];
"1000329" -> "1000327"  [label="AST: "];
"1000329" -> "1000334"  [label="CFG: "];
"1000330" -> "1000329"  [label="AST: "];
"1000331" -> "1000329"  [label="AST: "];
"1000333" -> "1000329"  [label="AST: "];
"1000334" -> "1000329"  [label="AST: "];
"1000327" -> "1000329"  [label="CFG: "];
"1000329" -> "1000619"  [label="DDG: false"];
"1000329" -> "1000619"  [label="DDG: &fl6"];
"1000329" -> "1000619"  [label="DDG: final_p"];
"1000329" -> "1000327"  [label="DDG: sk"];
"1000329" -> "1000327"  [label="DDG: &fl6"];
"1000329" -> "1000327"  [label="DDG: final_p"];
"1000329" -> "1000327"  [label="DDG: false"];
"1000322" -> "1000329"  [label="DDG: sk"];
"1000109" -> "1000329"  [label="DDG: sk"];
"1000324" -> "1000329"  [label="DDG: &fl6"];
"1000329" -> "1000341"  [label="DDG: sk"];
"1000329" -> "1000598"  [label="DDG: sk"];
"1000327" -> "1000258"  [label="AST: "];
"1000328" -> "1000327"  [label="AST: "];
"1000337" -> "1000327"  [label="CFG: "];
"1000327" -> "1000619"  [label="DDG: ip6_dst_lookup_flow(sk, &fl6, final_p, false)"];
"1000112" -> "1000327"  [label="DDG: dst"];
"1000327" -> "1000336"  [label="DDG: dst"];
"1000336" -> "1000335"  [label="AST: "];
"1000336" -> "1000337"  [label="CFG: "];
"1000337" -> "1000336"  [label="AST: "];
"1000338" -> "1000336"  [label="CFG: "];
"1000340" -> "1000336"  [label="CFG: "];
"1000336" -> "1000619"  [label="DDG: IS_ERR(dst)"];
"1000336" -> "1000619"  [label="DDG: dst"];
"1000112" -> "1000336"  [label="DDG: dst"];
"1000336" -> "1000350"  [label="DDG: dst"];
"1000336" -> "1000594"  [label="DDG: dst"];
"1000350" -> "1000113"  [label="AST: "];
"1000350" -> "1000354"  [label="CFG: "];
"1000351" -> "1000350"  [label="AST: "];
"1000352" -> "1000350"  [label="AST: "];
"1000353" -> "1000350"  [label="AST: "];
"1000354" -> "1000350"  [label="AST: "];
"1000357" -> "1000350"  [label="CFG: "];
"1000350" -> "1000619"  [label="DDG: __ip6_dst_store(newsk, dst, NULL, NULL)"];
"1000346" -> "1000350"  [label="DDG: newsk"];
"1000346" -> "1000350"  [label="DDG: NULL"];
"1000255" -> "1000350"  [label="DDG: dst"];
"1000112" -> "1000350"  [label="DDG: dst"];
"1000350" -> "1000371"  [label="DDG: newsk"];
"1000350" -> "1000429"  [label="DDG: NULL"];
"1000350" -> "1000445"  [label="DDG: NULL"];
"1000350" -> "1000451"  [label="DDG: NULL"];
"1000350" -> "1000557"  [label="DDG: dst"];
"1000371" -> "1000369"  [label="AST: "];
"1000371" -> "1000373"  [label="CFG: "];
"1000372" -> "1000371"  [label="AST: "];
"1000373" -> "1000371"  [label="AST: "];
"1000369" -> "1000371"  [label="CFG: "];
"1000371" -> "1000369"  [label="DDG: newsk"];
"1000371" -> "1000376"  [label="DDG: newsk"];
"1000369" -> "1000113"  [label="AST: "];
"1000370" -> "1000369"  [label="AST: "];
"1000375" -> "1000369"  [label="CFG: "];
"1000369" -> "1000619"  [label="DDG: newdp6"];
"1000369" -> "1000619"  [label="DDG: (struct dccp6_sock *)newsk"];
"1000376" -> "1000374"  [label="AST: "];
"1000376" -> "1000377"  [label="CFG: "];
"1000377" -> "1000376"  [label="AST: "];
"1000374" -> "1000376"  [label="CFG: "];
"1000376" -> "1000374"  [label="DDG: newsk"];
"1000376" -> "1000388"  [label="DDG: newsk"];
"1000374" -> "1000113"  [label="AST: "];
"1000375" -> "1000374"  [label="AST: "];
"1000380" -> "1000374"  [label="CFG: "];
"1000374" -> "1000619"  [label="DDG: inet_sk(newsk)"];
"1000374" -> "1000619"  [label="DDG: newinet"];
"1000388" -> "1000386"  [label="AST: "];
"1000388" -> "1000389"  [label="CFG: "];
"1000389" -> "1000388"  [label="AST: "];
"1000386" -> "1000388"  [label="CFG: "];
"1000388" -> "1000386"  [label="DDG: newsk"];
"1000388" -> "1000479"  [label="DDG: newsk"];
"1000388" -> "1000512"  [label="DDG: newsk"];
"1000388" -> "1000529"  [label="DDG: newsk"];
"1000386" -> "1000113"  [label="AST: "];
"1000387" -> "1000386"  [label="AST: "];
"1000391" -> "1000386"  [label="CFG: "];
"1000386" -> "1000619"  [label="DDG: inet6_sk(newsk)"];
"1000386" -> "1000390"  [label="DDG: newnp"];
"1000390" -> "1000113"  [label="AST: "];
"1000390" -> "1000393"  [label="CFG: "];
"1000391" -> "1000390"  [label="AST: "];
"1000392" -> "1000390"  [label="AST: "];
"1000393" -> "1000390"  [label="AST: "];
"1000398" -> "1000390"  [label="CFG: "];
"1000390" -> "1000619"  [label="DDG: np"];
"1000390" -> "1000619"  [label="DDG: memcpy(newnp, np, sizeof(struct ipv6_pinfo))"];
"1000390" -> "1000619"  [label="DDG: newnp"];
"1000121" -> "1000390"  [label="DDG: np"];
"1000479" -> "1000475"  [label="AST: "];
"1000479" -> "1000483"  [label="CFG: "];
"1000480" -> "1000479"  [label="AST: "];
"1000483" -> "1000479"  [label="AST: "];
"1000486" -> "1000479"  [label="CFG: "];
"1000479" -> "1000619"  [label="DDG: skb_set_owner_r(newnp->pktoptions, newsk)"];
"1000479" -> "1000619"  [label="DDG: newnp->pktoptions"];
"1000457" -> "1000479"  [label="DDG: newnp->pktoptions"];
"1000479" -> "1000512"  [label="DDG: newsk"];
"1000479" -> "1000529"  [label="DDG: newsk"];
"1000512" -> "1000508"  [label="AST: "];
"1000512" -> "1000514"  [label="CFG: "];
"1000513" -> "1000512"  [label="AST: "];
"1000514" -> "1000512"  [label="AST: "];
"1000508" -> "1000512"  [label="CFG: "];
"1000512" -> "1000508"  [label="DDG: newsk"];
"1000512" -> "1000508"  [label="DDG: opt"];
"1000504" -> "1000512"  [label="DDG: opt"];
"1000512" -> "1000516"  [label="DDG: opt"];
"1000512" -> "1000529"  [label="DDG: newsk"];
"1000508" -> "1000507"  [label="AST: "];
"1000509" -> "1000508"  [label="AST: "];
"1000517" -> "1000508"  [label="CFG: "];
"1000508" -> "1000619"  [label="DDG: ipv6_dup_options(newsk, opt)"];
"1000508" -> "1000534"  [label="DDG: newnp->opt"];
"1000534" -> "1000533"  [label="AST: "];
"1000534" -> "1000538"  [label="CFG: "];
"1000535" -> "1000534"  [label="AST: "];
"1000538" -> "1000534"  [label="AST: "];
"1000542" -> "1000534"  [label="CFG: "];
"1000556" -> "1000534"  [label="CFG: "];
"1000534" -> "1000619"  [label="DDG: newnp->opt != NULL"];
"1000534" -> "1000619"  [label="DDG: newnp->opt"];
"1000484" -> "1000534"  [label="DDG: newnp->opt"];
"1000504" -> "1000534"  [label="DDG: NULL"];
"1000534" -> "1000583"  [label="DDG: NULL"];
"1000534" -> "1000603"  [label="DDG: NULL"];
"1000583" -> "1000113"  [label="AST: "];
"1000583" -> "1000585"  [label="CFG: "];
"1000584" -> "1000583"  [label="AST: "];
"1000585" -> "1000583"  [label="AST: "];
"1000587" -> "1000583"  [label="CFG: "];
"1000583" -> "1000619"  [label="DDG: __inet6_hash(newsk, NULL)"];
"1000583" -> "1000619"  [label="DDG: newsk"];
"1000583" -> "1000619"  [label="DDG: NULL"];
"1000575" -> "1000583"  [label="DDG: newsk"];
"1000583" -> "1000586"  [label="DDG: newsk"];
"1000586" -> "1000113"  [label="AST: "];
"1000586" -> "1000587"  [label="CFG: "];
"1000587" -> "1000586"  [label="AST: "];
"1000619" -> "1000586"  [label="CFG: "];
"1000586" -> "1000619"  [label="DDG: <RET>"];
"1000587" -> "1000586"  [label="DDG: newsk"];
"1000603" -> "1000602"  [label="AST: "];
"1000603" -> "1000605"  [label="CFG: "];
"1000604" -> "1000603"  [label="AST: "];
"1000605" -> "1000603"  [label="AST: "];
"1000607" -> "1000603"  [label="CFG: "];
"1000602" -> "1000603"  [label="CFG: "];
"1000603" -> "1000619"  [label="DDG: opt"];
"1000603" -> "1000619"  [label="DDG: NULL"];
"1000603" -> "1000602"  [label="DDG: opt"];
"1000603" -> "1000602"  [label="DDG: NULL"];
"1000504" -> "1000603"  [label="DDG: opt"];
"1000521" -> "1000603"  [label="DDG: opt"];
"1000516" -> "1000603"  [label="DDG: opt"];
"1000346" -> "1000603"  [label="DDG: NULL"];
"1000255" -> "1000603"  [label="DDG: NULL"];
"1000603" -> "1000606"  [label="DDG: opt"];
"1000603" -> "1000611"  [label="DDG: opt"];
"1000603" -> "1000617"  [label="DDG: NULL"];
"1000602" -> "1000601"  [label="AST: "];
"1000602" -> "1000606"  [label="CFG: "];
"1000606" -> "1000602"  [label="AST: "];
"1000612" -> "1000602"  [label="CFG: "];
"1000618" -> "1000602"  [label="CFG: "];
"1000602" -> "1000619"  [label="DDG: opt != NULL && opt != np->opt"];
"1000602" -> "1000619"  [label="DDG: opt != NULL"];
"1000602" -> "1000619"  [label="DDG: opt != np->opt"];
"1000606" -> "1000602"  [label="DDG: opt"];
"1000606" -> "1000602"  [label="DDG: np->opt"];
"1000516" -> "1000602"  [label="DDG: opt != np->opt"];
"1000606" -> "1000608"  [label="CFG: "];
"1000607" -> "1000606"  [label="AST: "];
"1000608" -> "1000606"  [label="AST: "];
"1000606" -> "1000619"  [label="DDG: opt"];
"1000606" -> "1000619"  [label="DDG: np->opt"];
"1000516" -> "1000606"  [label="DDG: np->opt"];
"1000606" -> "1000611"  [label="DDG: opt"];
"1000611" -> "1000601"  [label="AST: "];
"1000611" -> "1000614"  [label="CFG: "];
"1000612" -> "1000611"  [label="AST: "];
"1000613" -> "1000611"  [label="AST: "];
"1000614" -> "1000611"  [label="AST: "];
"1000618" -> "1000611"  [label="CFG: "];
"1000611" -> "1000619"  [label="DDG: opt->tot_len"];
"1000611" -> "1000619"  [label="DDG: opt"];
"1000611" -> "1000619"  [label="DDG: sock_kfree_s(sk, opt, opt->tot_len)"];
"1000611" -> "1000619"  [label="DDG: sk"];
"1000598" -> "1000611"  [label="DDG: sk"];
"1000109" -> "1000611"  [label="DDG: sk"];
"1000521" -> "1000611"  [label="DDG: opt->tot_len"];
"1000617" -> "1000113"  [label="AST: "];
"1000617" -> "1000618"  [label="CFG: "];
"1000618" -> "1000617"  [label="AST: "];
"1000619" -> "1000617"  [label="CFG: "];
"1000617" -> "1000619"  [label="DDG: <RET>"];
"1000618" -> "1000617"  [label="DDG: NULL"];
"1000516" -> "1000515"  [label="AST: "];
"1000516" -> "1000518"  [label="CFG: "];
"1000517" -> "1000516"  [label="AST: "];
"1000518" -> "1000516"  [label="AST: "];
"1000522" -> "1000516"  [label="CFG: "];
"1000530" -> "1000516"  [label="CFG: "];
"1000516" -> "1000619"  [label="DDG: np->opt"];
"1000516" -> "1000619"  [label="DDG: opt != np->opt"];
"1000516" -> "1000619"  [label="DDG: opt"];
"1000516" -> "1000521"  [label="DDG: opt"];
"1000521" -> "1000515"  [label="AST: "];
"1000521" -> "1000524"  [label="CFG: "];
"1000522" -> "1000521"  [label="AST: "];
"1000523" -> "1000521"  [label="AST: "];
"1000524" -> "1000521"  [label="AST: "];
"1000530" -> "1000521"  [label="CFG: "];
"1000521" -> "1000619"  [label="DDG: opt->tot_len"];
"1000521" -> "1000619"  [label="DDG: sock_kfree_s(sk, opt, opt->tot_len)"];
"1000521" -> "1000619"  [label="DDG: opt"];
"1000341" -> "1000521"  [label="DDG: sk"];
"1000109" -> "1000521"  [label="DDG: sk"];
"1000521" -> "1000575"  [label="DDG: sk"];
"1000575" -> "1000574"  [label="AST: "];
"1000575" -> "1000577"  [label="CFG: "];
"1000576" -> "1000575"  [label="AST: "];
"1000577" -> "1000575"  [label="AST: "];
"1000578" -> "1000575"  [label="CFG: "];
"1000575" -> "1000619"  [label="DDG: sk"];
"1000575" -> "1000574"  [label="DDG: sk"];
"1000575" -> "1000574"  [label="DDG: newsk"];
"1000341" -> "1000575"  [label="DDG: sk"];
"1000109" -> "1000575"  [label="DDG: sk"];
"1000555" -> "1000575"  [label="DDG: newsk"];
"1000575" -> "1000580"  [label="DDG: newsk"];
"1000575" -> "1000598"  [label="DDG: sk"];
"1000574" -> "1000573"  [label="AST: "];
"1000574" -> "1000578"  [label="CFG: "];
"1000578" -> "1000574"  [label="AST: "];
"1000581" -> "1000574"  [label="CFG: "];
"1000584" -> "1000574"  [label="CFG: "];
"1000574" -> "1000619"  [label="DDG: __inet_inherit_port(sk, newsk)"];
"1000574" -> "1000619"  [label="DDG: __inet_inherit_port(sk, newsk) < 0"];
"1000580" -> "1000579"  [label="AST: "];
"1000580" -> "1000581"  [label="CFG: "];
"1000581" -> "1000580"  [label="AST: "];
"1000582" -> "1000580"  [label="CFG: "];
"1000580" -> "1000619"  [label="DDG: sock_put(newsk)"];
"1000580" -> "1000619"  [label="DDG: newsk"];
"1000598" -> "1000597"  [label="AST: "];
"1000598" -> "1000599"  [label="CFG: "];
"1000599" -> "1000598"  [label="AST: "];
"1000600" -> "1000598"  [label="CFG: "];
"1000598" -> "1000619"  [label="DDG: sk"];
"1000598" -> "1000597"  [label="DDG: sk"];
"1000590" -> "1000598"  [label="DDG: sk"];
"1000341" -> "1000598"  [label="DDG: sk"];
"1000109" -> "1000598"  [label="DDG: sk"];
"1000597" -> "1000113"  [label="AST: "];
"1000597" -> "1000600"  [label="CFG: "];
"1000600" -> "1000597"  [label="AST: "];
"1000604" -> "1000597"  [label="CFG: "];
"1000597" -> "1000619"  [label="DDG: sock_net(sk)"];
"1000597" -> "1000619"  [label="DDG: NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENDROPS)"];
"1000597" -> "1000619"  [label="DDG: LINUX_MIB_LISTENDROPS"];
"1000529" -> "1000528"  [label="AST: "];
"1000529" -> "1000530"  [label="CFG: "];
"1000530" -> "1000529"  [label="AST: "];
"1000531" -> "1000529"  [label="CFG: "];
"1000529" -> "1000541"  [label="DDG: newsk"];
"1000529" -> "1000555"  [label="DDG: newsk"];
"1000541" -> "1000540"  [label="AST: "];
"1000541" -> "1000542"  [label="CFG: "];
"1000542" -> "1000541"  [label="AST: "];
"1000543" -> "1000541"  [label="CFG: "];
"1000541" -> "1000555"  [label="DDG: newsk"];
"1000555" -> "1000113"  [label="AST: "];
"1000555" -> "1000557"  [label="CFG: "];
"1000556" -> "1000555"  [label="AST: "];
"1000557" -> "1000555"  [label="AST: "];
"1000561" -> "1000555"  [label="CFG: "];
"1000555" -> "1000619"  [label="DDG: dst_mtu(dst)"];
"1000555" -> "1000619"  [label="DDG: dccp_sync_mss(newsk, dst_mtu(dst))"];
"1000557" -> "1000555"  [label="DDG: dst"];
"1000429" -> "1000113"  [label="AST: "];
"1000429" -> "1000433"  [label="CFG: "];
"1000430" -> "1000429"  [label="AST: "];
"1000433" -> "1000429"  [label="AST: "];
"1000437" -> "1000429"  [label="CFG: "];
"1000429" -> "1000619"  [label="DDG: newinet->opt"];
"1000445" -> "1000113"  [label="AST: "];
"1000445" -> "1000449"  [label="CFG: "];
"1000446" -> "1000445"  [label="AST: "];
"1000449" -> "1000445"  [label="AST: "];
"1000453" -> "1000445"  [label="CFG: "];
"1000445" -> "1000619"  [label="DDG: newnp->pktoptions"];
"1000451" -> "1000450"  [label="AST: "];
"1000451" -> "1000455"  [label="CFG: "];
"1000452" -> "1000451"  [label="AST: "];
"1000455" -> "1000451"  [label="AST: "];
"1000459" -> "1000451"  [label="CFG: "];
"1000486" -> "1000451"  [label="CFG: "];
"1000451" -> "1000619"  [label="DDG: ireq6->pktopts"];
"1000451" -> "1000619"  [label="DDG: ireq6->pktopts != NULL"];
"1000451" -> "1000461"  [label="DDG: ireq6->pktopts"];
"1000451" -> "1000470"  [label="DDG: NULL"];
"1000451" -> "1000484"  [label="DDG: NULL"];
"1000451" -> "1000504"  [label="DDG: NULL"];
"1000461" -> "1000457"  [label="AST: "];
"1000461" -> "1000465"  [label="CFG: "];
"1000462" -> "1000461"  [label="AST: "];
"1000465" -> "1000461"  [label="AST: "];
"1000457" -> "1000461"  [label="CFG: "];
"1000461" -> "1000619"  [label="DDG: GFP_ATOMIC"];
"1000461" -> "1000457"  [label="DDG: ireq6->pktopts"];
"1000461" -> "1000457"  [label="DDG: GFP_ATOMIC"];
"1000461" -> "1000466"  [label="DDG: ireq6->pktopts"];
"1000457" -> "1000456"  [label="AST: "];
"1000458" -> "1000457"  [label="AST: "];
"1000468" -> "1000457"  [label="CFG: "];
"1000457" -> "1000619"  [label="DDG: skb_clone(ireq6->pktopts, GFP_ATOMIC)"];
"1000457" -> "1000619"  [label="DDG: newnp->pktoptions"];
"1000466" -> "1000456"  [label="AST: "];
"1000466" -> "1000467"  [label="CFG: "];
"1000467" -> "1000466"  [label="AST: "];
"1000472" -> "1000466"  [label="CFG: "];
"1000466" -> "1000619"  [label="DDG: kfree_skb(ireq6->pktopts)"];
"1000470" -> "1000456"  [label="AST: "];
"1000470" -> "1000474"  [label="CFG: "];
"1000471" -> "1000470"  [label="AST: "];
"1000474" -> "1000470"  [label="AST: "];
"1000477" -> "1000470"  [label="CFG: "];
"1000470" -> "1000619"  [label="DDG: ireq6->pktopts"];
"1000484" -> "1000113"  [label="AST: "];
"1000484" -> "1000488"  [label="CFG: "];
"1000485" -> "1000484"  [label="AST: "];
"1000488" -> "1000484"  [label="AST: "];
"1000491" -> "1000484"  [label="CFG: "];
"1000504" -> "1000503"  [label="AST: "];
"1000504" -> "1000506"  [label="CFG: "];
"1000505" -> "1000504"  [label="AST: "];
"1000506" -> "1000504"  [label="AST: "];
"1000510" -> "1000504"  [label="CFG: "];
"1000530" -> "1000504"  [label="CFG: "];
"1000504" -> "1000619"  [label="DDG: opt"];
"1000504" -> "1000619"  [label="DDG: opt != NULL"];
"1000557" -> "1000558"  [label="CFG: "];
"1000558" -> "1000557"  [label="AST: "];
"1000557" -> "1000619"  [label="DDG: dst"];
"1000112" -> "1000557"  [label="DDG: dst"];
"1000594" -> "1000113"  [label="AST: "];
"1000594" -> "1000595"  [label="CFG: "];
"1000595" -> "1000594"  [label="AST: "];
"1000596" -> "1000594"  [label="CFG: "];
"1000594" -> "1000619"  [label="DDG: dst"];
"1000594" -> "1000619"  [label="DDG: dst_release(dst)"];
"1000255" -> "1000594"  [label="DDG: dst"];
"1000112" -> "1000594"  [label="DDG: dst"];
"1000341" -> "1000339"  [label="AST: "];
"1000341" -> "1000344"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="AST: "];
"1000344" -> "1000341"  [label="AST: "];
"1000339" -> "1000341"  [label="CFG: "];
"1000341" -> "1000619"  [label="DDG: skb"];
"1000341" -> "1000619"  [label="DDG: req"];
"1000341" -> "1000339"  [label="DDG: sk"];
"1000341" -> "1000339"  [label="DDG: req"];
"1000341" -> "1000339"  [label="DDG: skb"];
"1000251" -> "1000341"  [label="DDG: sk"];
"1000109" -> "1000341"  [label="DDG: sk"];
"1000117" -> "1000341"  [label="DDG: req"];
"1000319" -> "1000341"  [label="DDG: req"];
"1000111" -> "1000341"  [label="DDG: req"];
"1000110" -> "1000341"  [label="DDG: skb"];
"1000341" -> "1000493"  [label="DDG: skb"];
"1000339" -> "1000113"  [label="AST: "];
"1000340" -> "1000339"  [label="AST: "];
"1000347" -> "1000339"  [label="CFG: "];
"1000339" -> "1000619"  [label="DDG: dccp_create_openreq_child(sk, req, skb)"];
"1000339" -> "1000346"  [label="DDG: newsk"];
"1000346" -> "1000345"  [label="AST: "];
"1000346" -> "1000348"  [label="CFG: "];
"1000347" -> "1000346"  [label="AST: "];
"1000348" -> "1000346"  [label="AST: "];
"1000349" -> "1000346"  [label="CFG: "];
"1000351" -> "1000346"  [label="CFG: "];
"1000346" -> "1000619"  [label="DDG: newsk"];
"1000346" -> "1000619"  [label="DDG: newsk == NULL"];
"1000255" -> "1000346"  [label="DDG: NULL"];
"1000493" -> "1000489"  [label="AST: "];
"1000493" -> "1000494"  [label="CFG: "];
"1000494" -> "1000493"  [label="AST: "];
"1000489" -> "1000493"  [label="CFG: "];
"1000493" -> "1000489"  [label="DDG: skb"];
"1000110" -> "1000493"  [label="DDG: skb"];
"1000493" -> "1000500"  [label="DDG: skb"];
"1000489" -> "1000113"  [label="AST: "];
"1000490" -> "1000489"  [label="AST: "];
"1000497" -> "1000489"  [label="CFG: "];
"1000489" -> "1000619"  [label="DDG: inet6_iif(skb)"];
"1000489" -> "1000619"  [label="DDG: newnp->mcast_oif"];
"1000500" -> "1000499"  [label="AST: "];
"1000500" -> "1000501"  [label="CFG: "];
"1000501" -> "1000500"  [label="AST: "];
"1000502" -> "1000500"  [label="CFG: "];
"1000500" -> "1000619"  [label="DDG: skb"];
"1000110" -> "1000500"  [label="DDG: skb"];
}
