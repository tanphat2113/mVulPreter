digraph "0_httpd_6a974059190b8a0c7e499f4ab12fe108127099cb@pointer" {
"1000437" [label="(Call,pro[1] == 'T')"];
"1000419" [label="(Call,apr_pstrmemdup(r->pool, pro, len))"];
"1000305" [label="(Call,ap_getword_white(r->pool, &ll))"];
"1000297" [label="(Call,ap_getword_white(r->pool, &ll))"];
"1000276" [label="(Call,ap_escape_logitem(r->pool, r->the_request))"];
"1000175" [label="(Call,r->the_request = NULL)"];
"1000182" [label="(Call,ap_rgetline(&(r->the_request), (apr_size_t)(r->server->limit_req_line + 2),\n                         &len, r, 0, bb))"];
"1000187" [label="(Call,(apr_size_t)(r->server->limit_req_line + 2))"];
"1000110" [label="(MethodParameterIn,request_rec *r)"];
"1000111" [label="(MethodParameterIn,apr_bucket_brigade *bb)"];
"1000352" [label="(Call,pro = ll)"];
"1000288" [label="(Call,ll = r->the_request)"];
"1000366" [label="(Call,pro = \"HTTP/0.9\")"];
"1000355" [label="(Call,len = strlen(ll))"];
"1000357" [label="(Call,strlen(ll))"];
"1000369" [label="(Call,len = 8)"];
"1000436" [label="(Call,pro[1] == 'T' && pro[2] == 'T' && pro[3] == 'P'\n        && pro[4] == '/' && apr_isdigit(pro[5]) && pro[6] == '.'\n        && apr_isdigit(pro[7]))"];
"1000430" [label="(Call,pro[0] == 'H' && pro[1] == 'T' && pro[2] == 'T' && pro[3] == 'P'\n        && pro[4] == '/' && apr_isdigit(pro[5]) && pro[6] == '.'\n        && apr_isdigit(pro[7]))"];
"1000426" [label="(Call,len == 8\n        && pro[0] == 'H' && pro[1] == 'T' && pro[2] == 'T' && pro[3] == 'P'\n        && pro[4] == '/' && apr_isdigit(pro[5]) && pro[6] == '.'\n        && apr_isdigit(pro[7]))"];
"1000173" [label="(Block,)"];
"1000288" [label="(Call,ll = r->the_request)"];
"1000267" [label="(Call,APLOGrtrace5(r))"];
"1000438" [label="(Call,pro[1])"];
"1000388" [label="(Call,apr_pstrmemdup(r->pool, pro, len))"];
"1000289" [label="(Identifier,ll)"];
"1000455" [label="(Call,pro[4] == '/')"];
"1000280" [label="(Call,r->the_request)"];
"1000443" [label="(Call,pro[2] == 'T')"];
"1000366" [label="(Call,pro = \"HTTP/0.9\")"];
"1000461" [label="(Call,apr_isdigit(pro[5]))"];
"1000339" [label="(Call,ap_parse_uri(r, uri))"];
"1000277" [label="(Call,r->pool)"];
"1000436" [label="(Call,pro[1] == 'T' && pro[2] == 'T' && pro[3] == 'P'\n        && pro[4] == '/' && apr_isdigit(pro[5]) && pro[6] == '.'\n        && apr_isdigit(pro[7]))"];
"1000420" [label="(Call,r->pool)"];
"1000200" [label="(Identifier,bb)"];
"1000367" [label="(Identifier,pro)"];
"1000309" [label="(Call,&ll)"];
"1000368" [label="(Literal,\"HTTP/0.9\")"];
"1000295" [label="(Identifier,r)"];
"1000424" [label="(Identifier,len)"];
"1000371" [label="(Literal,8)"];
"1000354" [label="(Identifier,ll)"];
"1000182" [label="(Call,ap_rgetline(&(r->the_request), (apr_size_t)(r->server->limit_req_line + 2),\n                         &len, r, 0, bb))"];
"1000198" [label="(Identifier,r)"];
"1000357" [label="(Call,strlen(ll))"];
"1000110" [label="(MethodParameterIn,request_rec *r)"];
"1000187" [label="(Call,(apr_size_t)(r->server->limit_req_line + 2))"];
"1000441" [label="(Literal,'T')"];
"1000417" [label="(Identifier,r)"];
"1000369" [label="(Call,len = 8)"];
"1000442" [label="(Call,pro[2] == 'T' && pro[3] == 'P'\n        && pro[4] == '/' && apr_isdigit(pro[5]) && pro[6] == '.'\n        && apr_isdigit(pro[7]))"];
"1000415" [label="(Call,r->protocol = apr_pstrmemdup(r->pool, pro, len))"];
"1000419" [label="(Call,apr_pstrmemdup(r->pool, pro, len))"];
"1000183" [label="(Call,&(r->the_request))"];
"1000197" [label="(Identifier,len)"];
"1000189" [label="(Call,r->server->limit_req_line + 2)"];
"1000466" [label="(Call,pro[6] == '.')"];
"1000176" [label="(Call,r->the_request)"];
"1000431" [label="(Call,pro[0] == 'H')"];
"1000301" [label="(Call,&ll)"];
"1000370" [label="(Identifier,len)"];
"1000375" [label="(Identifier,conf)"];
"1000478" [label="(Identifier,r)"];
"1000290" [label="(Call,r->the_request)"];
"1000356" [label="(Identifier,len)"];
"1000111" [label="(MethodParameterIn,apr_bucket_brigade *bb)"];
"1000112" [label="(Block,)"];
"1000358" [label="(Identifier,ll)"];
"1000306" [label="(Call,r->pool)"];
"1000352" [label="(Call,pro = ll)"];
"1000425" [label="(ControlStructure,if (len == 8\n        && pro[0] == 'H' && pro[1] == 'T' && pro[2] == 'T' && pro[3] == 'P'\n        && pro[4] == '/' && apr_isdigit(pro[5]) && pro[6] == '.'\n        && apr_isdigit(pro[7])))"];
"1000494" [label="(Identifier,strict)"];
"1000437" [label="(Call,pro[1] == 'T')"];
"1000175" [label="(Call,r->the_request = NULL)"];
"1000298" [label="(Call,r->pool)"];
"1000196" [label="(Call,&len)"];
"1000180" [label="(Call,rv = ap_rgetline(&(r->the_request), (apr_size_t)(r->server->limit_req_line + 2),\n                         &len, r, 0, bb))"];
"1000556" [label="(Call,ap_has_cntrl(r->the_request))"];
"1000297" [label="(Call,ap_getword_white(r->pool, &ll))"];
"1000635" [label="(MethodReturn,static int)"];
"1000346" [label="(Block,)"];
"1000303" [label="(Call,uri = ap_getword_white(r->pool, &ll))"];
"1000293" [label="(Call,r->method = ap_getword_white(r->pool, &ll))"];
"1000445" [label="(Identifier,pro)"];
"1000430" [label="(Call,pro[0] == 'H' && pro[1] == 'T' && pro[2] == 'T' && pro[3] == 'P'\n        && pro[4] == '/' && apr_isdigit(pro[5]) && pro[6] == '.'\n        && apr_isdigit(pro[7]))"];
"1000360" [label="(Block,)"];
"1000305" [label="(Call,ap_getword_white(r->pool, &ll))"];
"1000355" [label="(Call,len = strlen(ll))"];
"1000427" [label="(Call,len == 8)"];
"1000179" [label="(Identifier,NULL)"];
"1000486" [label="(Call,pro[7] - '0')"];
"1000471" [label="(Call,apr_isdigit(pro[7]))"];
"1000449" [label="(Call,pro[3] == 'P')"];
"1000481" [label="(Call,pro[5] - '0')"];
"1000270" [label="(Call,ap_log_rerror(APLOG_MARK, APLOG_TRACE5, 0, r,\n                      \"Request received from client: %s\",\n                      ap_escape_logitem(r->pool, r->the_request)))"];
"1000181" [label="(Identifier,rv)"];
"1000353" [label="(Identifier,pro)"];
"1000199" [label="(Literal,0)"];
"1000276" [label="(Call,ap_escape_logitem(r->pool, r->the_request))"];
"1000423" [label="(Identifier,pro)"];
"1000426" [label="(Call,len == 8\n        && pro[0] == 'H' && pro[1] == 'T' && pro[2] == 'T' && pro[3] == 'P'\n        && pro[4] == '/' && apr_isdigit(pro[5]) && pro[6] == '.'\n        && apr_isdigit(pro[7]))"];
"1000437" -> "1000436"  [label="AST: "];
"1000437" -> "1000441"  [label="CFG: "];
"1000438" -> "1000437"  [label="AST: "];
"1000441" -> "1000437"  [label="AST: "];
"1000445" -> "1000437"  [label="CFG: "];
"1000436" -> "1000437"  [label="CFG: "];
"1000437" -> "1000635"  [label="DDG: pro[1]"];
"1000437" -> "1000436"  [label="DDG: pro[1]"];
"1000437" -> "1000436"  [label="DDG: 'T'"];
"1000419" -> "1000437"  [label="DDG: pro"];
"1000419" -> "1000415"  [label="AST: "];
"1000419" -> "1000424"  [label="CFG: "];
"1000420" -> "1000419"  [label="AST: "];
"1000423" -> "1000419"  [label="AST: "];
"1000424" -> "1000419"  [label="AST: "];
"1000415" -> "1000419"  [label="CFG: "];
"1000419" -> "1000635"  [label="DDG: r->pool"];
"1000419" -> "1000635"  [label="DDG: pro"];
"1000419" -> "1000415"  [label="DDG: r->pool"];
"1000419" -> "1000415"  [label="DDG: pro"];
"1000419" -> "1000415"  [label="DDG: len"];
"1000305" -> "1000419"  [label="DDG: r->pool"];
"1000352" -> "1000419"  [label="DDG: pro"];
"1000366" -> "1000419"  [label="DDG: pro"];
"1000355" -> "1000419"  [label="DDG: len"];
"1000369" -> "1000419"  [label="DDG: len"];
"1000419" -> "1000427"  [label="DDG: len"];
"1000419" -> "1000431"  [label="DDG: pro"];
"1000419" -> "1000443"  [label="DDG: pro"];
"1000419" -> "1000449"  [label="DDG: pro"];
"1000419" -> "1000455"  [label="DDG: pro"];
"1000419" -> "1000461"  [label="DDG: pro"];
"1000419" -> "1000466"  [label="DDG: pro"];
"1000419" -> "1000471"  [label="DDG: pro"];
"1000419" -> "1000481"  [label="DDG: pro"];
"1000419" -> "1000486"  [label="DDG: pro"];
"1000305" -> "1000303"  [label="AST: "];
"1000305" -> "1000309"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000309" -> "1000305"  [label="AST: "];
"1000303" -> "1000305"  [label="CFG: "];
"1000305" -> "1000635"  [label="DDG: &ll"];
"1000305" -> "1000303"  [label="DDG: r->pool"];
"1000305" -> "1000303"  [label="DDG: &ll"];
"1000297" -> "1000305"  [label="DDG: r->pool"];
"1000297" -> "1000305"  [label="DDG: &ll"];
"1000305" -> "1000388"  [label="DDG: r->pool"];
"1000297" -> "1000293"  [label="AST: "];
"1000297" -> "1000301"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000301" -> "1000297"  [label="AST: "];
"1000293" -> "1000297"  [label="CFG: "];
"1000297" -> "1000293"  [label="DDG: r->pool"];
"1000297" -> "1000293"  [label="DDG: &ll"];
"1000276" -> "1000297"  [label="DDG: r->pool"];
"1000276" -> "1000270"  [label="AST: "];
"1000276" -> "1000280"  [label="CFG: "];
"1000277" -> "1000276"  [label="AST: "];
"1000280" -> "1000276"  [label="AST: "];
"1000270" -> "1000276"  [label="CFG: "];
"1000276" -> "1000270"  [label="DDG: r->pool"];
"1000276" -> "1000270"  [label="DDG: r->the_request"];
"1000175" -> "1000276"  [label="DDG: r->the_request"];
"1000182" -> "1000276"  [label="DDG: &(r->the_request)"];
"1000276" -> "1000288"  [label="DDG: r->the_request"];
"1000276" -> "1000556"  [label="DDG: r->the_request"];
"1000175" -> "1000173"  [label="AST: "];
"1000175" -> "1000179"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000179" -> "1000175"  [label="AST: "];
"1000181" -> "1000175"  [label="CFG: "];
"1000175" -> "1000635"  [label="DDG: NULL"];
"1000175" -> "1000635"  [label="DDG: r->the_request"];
"1000175" -> "1000182"  [label="DDG: r->the_request"];
"1000175" -> "1000288"  [label="DDG: r->the_request"];
"1000175" -> "1000556"  [label="DDG: r->the_request"];
"1000182" -> "1000180"  [label="AST: "];
"1000182" -> "1000200"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000187" -> "1000182"  [label="AST: "];
"1000196" -> "1000182"  [label="AST: "];
"1000198" -> "1000182"  [label="AST: "];
"1000199" -> "1000182"  [label="AST: "];
"1000200" -> "1000182"  [label="AST: "];
"1000180" -> "1000182"  [label="CFG: "];
"1000182" -> "1000635"  [label="DDG: (apr_size_t)(r->server->limit_req_line + 2)"];
"1000182" -> "1000635"  [label="DDG: bb"];
"1000182" -> "1000635"  [label="DDG: &len"];
"1000182" -> "1000635"  [label="DDG: &(r->the_request)"];
"1000182" -> "1000635"  [label="DDG: r"];
"1000182" -> "1000180"  [label="DDG: (apr_size_t)(r->server->limit_req_line + 2)"];
"1000182" -> "1000180"  [label="DDG: &(r->the_request)"];
"1000182" -> "1000180"  [label="DDG: bb"];
"1000182" -> "1000180"  [label="DDG: 0"];
"1000182" -> "1000180"  [label="DDG: &len"];
"1000182" -> "1000180"  [label="DDG: r"];
"1000187" -> "1000182"  [label="DDG: r->server->limit_req_line + 2"];
"1000110" -> "1000182"  [label="DDG: r"];
"1000111" -> "1000182"  [label="DDG: bb"];
"1000182" -> "1000267"  [label="DDG: r"];
"1000182" -> "1000288"  [label="DDG: &(r->the_request)"];
"1000182" -> "1000556"  [label="DDG: &(r->the_request)"];
"1000187" -> "1000189"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000189" -> "1000187"  [label="AST: "];
"1000197" -> "1000187"  [label="CFG: "];
"1000187" -> "1000635"  [label="DDG: r->server->limit_req_line + 2"];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000635"  [label="DDG: r"];
"1000110" -> "1000267"  [label="DDG: r"];
"1000110" -> "1000270"  [label="DDG: r"];
"1000110" -> "1000339"  [label="DDG: r"];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000635"  [label="DDG: bb"];
"1000352" -> "1000346"  [label="AST: "];
"1000352" -> "1000354"  [label="CFG: "];
"1000353" -> "1000352"  [label="AST: "];
"1000354" -> "1000352"  [label="AST: "];
"1000356" -> "1000352"  [label="CFG: "];
"1000288" -> "1000352"  [label="DDG: ll"];
"1000288" -> "1000112"  [label="AST: "];
"1000288" -> "1000290"  [label="CFG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000290" -> "1000288"  [label="AST: "];
"1000295" -> "1000288"  [label="CFG: "];
"1000288" -> "1000635"  [label="DDG: r->the_request"];
"1000288" -> "1000635"  [label="DDG: ll"];
"1000288" -> "1000357"  [label="DDG: ll"];
"1000366" -> "1000360"  [label="AST: "];
"1000366" -> "1000368"  [label="CFG: "];
"1000367" -> "1000366"  [label="AST: "];
"1000368" -> "1000366"  [label="AST: "];
"1000370" -> "1000366"  [label="CFG: "];
"1000366" -> "1000388"  [label="DDG: pro"];
"1000355" -> "1000346"  [label="AST: "];
"1000355" -> "1000357"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000357" -> "1000355"  [label="AST: "];
"1000417" -> "1000355"  [label="CFG: "];
"1000355" -> "1000635"  [label="DDG: strlen(ll)"];
"1000357" -> "1000355"  [label="DDG: ll"];
"1000357" -> "1000358"  [label="CFG: "];
"1000358" -> "1000357"  [label="AST: "];
"1000357" -> "1000635"  [label="DDG: ll"];
"1000369" -> "1000360"  [label="AST: "];
"1000369" -> "1000371"  [label="CFG: "];
"1000370" -> "1000369"  [label="AST: "];
"1000371" -> "1000369"  [label="AST: "];
"1000375" -> "1000369"  [label="CFG: "];
"1000369" -> "1000388"  [label="DDG: len"];
"1000436" -> "1000430"  [label="AST: "];
"1000436" -> "1000442"  [label="CFG: "];
"1000442" -> "1000436"  [label="AST: "];
"1000430" -> "1000436"  [label="CFG: "];
"1000436" -> "1000635"  [label="DDG: pro[2] == 'T' && pro[3] == 'P'\n        && pro[4] == '/' && apr_isdigit(pro[5]) && pro[6] == '.'\n        && apr_isdigit(pro[7])"];
"1000436" -> "1000635"  [label="DDG: pro[1] == 'T'"];
"1000436" -> "1000430"  [label="DDG: pro[1] == 'T'"];
"1000436" -> "1000430"  [label="DDG: pro[2] == 'T' && pro[3] == 'P'\n        && pro[4] == '/' && apr_isdigit(pro[5]) && pro[6] == '.'\n        && apr_isdigit(pro[7])"];
"1000442" -> "1000436"  [label="DDG: pro[2] == 'T'"];
"1000442" -> "1000436"  [label="DDG: pro[3] == 'P'\n        && pro[4] == '/' && apr_isdigit(pro[5]) && pro[6] == '.'\n        && apr_isdigit(pro[7])"];
"1000430" -> "1000426"  [label="AST: "];
"1000430" -> "1000431"  [label="CFG: "];
"1000431" -> "1000430"  [label="AST: "];
"1000426" -> "1000430"  [label="CFG: "];
"1000430" -> "1000635"  [label="DDG: pro[1] == 'T' && pro[2] == 'T' && pro[3] == 'P'\n        && pro[4] == '/' && apr_isdigit(pro[5]) && pro[6] == '.'\n        && apr_isdigit(pro[7])"];
"1000430" -> "1000635"  [label="DDG: pro[0] == 'H'"];
"1000430" -> "1000426"  [label="DDG: pro[0] == 'H'"];
"1000430" -> "1000426"  [label="DDG: pro[1] == 'T' && pro[2] == 'T' && pro[3] == 'P'\n        && pro[4] == '/' && apr_isdigit(pro[5]) && pro[6] == '.'\n        && apr_isdigit(pro[7])"];
"1000431" -> "1000430"  [label="DDG: pro[0]"];
"1000431" -> "1000430"  [label="DDG: 'H'"];
"1000426" -> "1000425"  [label="AST: "];
"1000426" -> "1000427"  [label="CFG: "];
"1000427" -> "1000426"  [label="AST: "];
"1000478" -> "1000426"  [label="CFG: "];
"1000494" -> "1000426"  [label="CFG: "];
"1000426" -> "1000635"  [label="DDG: len == 8"];
"1000426" -> "1000635"  [label="DDG: len == 8\n        && pro[0] == 'H' && pro[1] == 'T' && pro[2] == 'T' && pro[3] == 'P'\n        && pro[4] == '/' && apr_isdigit(pro[5]) && pro[6] == '.'\n        && apr_isdigit(pro[7])"];
"1000426" -> "1000635"  [label="DDG: pro[0] == 'H' && pro[1] == 'T' && pro[2] == 'T' && pro[3] == 'P'\n        && pro[4] == '/' && apr_isdigit(pro[5]) && pro[6] == '.'\n        && apr_isdigit(pro[7])"];
"1000427" -> "1000426"  [label="DDG: len"];
"1000427" -> "1000426"  [label="DDG: 8"];
}
