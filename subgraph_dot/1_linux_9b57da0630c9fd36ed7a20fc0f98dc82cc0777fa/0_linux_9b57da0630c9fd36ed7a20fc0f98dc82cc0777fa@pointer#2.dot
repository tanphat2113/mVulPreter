digraph "0_linux_9b57da0630c9fd36ed7a20fc0f98dc82cc0777fa@pointer" {
"1000174" [label="(Call,fq_find(net, fhdr->identification, user, &hdr->saddr, &hdr->daddr,\n\t\t     skb->dev ? skb->dev->ifindex : 0, ip6_frag_ecn(hdr)))"];
"1000103" [label="(MethodParameterIn,struct net *net)"];
"1000105" [label="(MethodParameterIn,u32 user)"];
"1000198" [label="(Call,ip6_frag_ecn(hdr))"];
"1000162" [label="(Call,hdr = ipv6_hdr(skb))"];
"1000164" [label="(Call,ipv6_hdr(skb))"];
"1000159" [label="(Call,skb_set_transport_header(skb, fhoff))"];
"1000149" [label="(Call,pskb_may_pull(skb, fhoff + sizeof(*fhdr)))"];
"1000135" [label="(Call,find_prev_fhdr(skb, &prevhdr, &nhoff, &fhoff))"];
"1000123" [label="(Call,ipv6_hdr(skb))"];
"1000104" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000172" [label="(Call,fq = fq_find(net, fhdr->identification, user, &hdr->saddr, &hdr->daddr,\n\t\t     skb->dev ? skb->dev->ifindex : 0, ip6_frag_ecn(hdr)))"];
"1000201" [label="(Call,fq == NULL)"];
"1000219" [label="(Call,nf_ct_frag6_queue(fq, skb, fhdr, nhoff))"];
"1000218" [label="(Call,nf_ct_frag6_queue(fq, skb, fhdr, nhoff) < 0)"];
"1000258" [label="(Call,nf_ct_frag6_reasm(fq, skb, dev))"];
"1000246" [label="(Call,fq->q.meat == fq->q.len &&\n\t    nf_ct_frag6_reasm(fq, skb, dev))"];
"1000236" [label="(Call,fq->q.flags == (INET_FRAG_FIRST_IN | INET_FRAG_LAST_IN) &&\n\t    fq->q.meat == fq->q.len &&\n\t    nf_ct_frag6_reasm(fq, skb, dev))"];
"1000123" [label="(Call,ipv6_hdr(skb))"];
"1000167" [label="(Identifier,fhdr)"];
"1000261" [label="(Identifier,dev)"];
"1000173" [label="(Identifier,fq)"];
"1000179" [label="(Identifier,user)"];
"1000223" [label="(Identifier,nhoff)"];
"1000103" [label="(MethodParameterIn,struct net *net)"];
"1000159" [label="(Call,skb_set_transport_header(skb, fhoff))"];
"1000104" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000151" [label="(Call,fhoff + sizeof(*fhdr))"];
"1000141" [label="(Call,&fhoff)"];
"1000137" [label="(Call,&prevhdr)"];
"1000219" [label="(Call,nf_ct_frag6_queue(fq, skb, fhdr, nhoff))"];
"1000172" [label="(Call,fq = fq_find(net, fhdr->identification, user, &hdr->saddr, &hdr->daddr,\n\t\t     skb->dev ? skb->dev->ifindex : 0, ip6_frag_ecn(hdr)))"];
"1000143" [label="(Literal,0)"];
"1000203" [label="(Identifier,NULL)"];
"1000237" [label="(Call,fq->q.flags == (INET_FRAG_FIRST_IN | INET_FRAG_LAST_IN))"];
"1000175" [label="(Identifier,net)"];
"1000201" [label="(Call,fq == NULL)"];
"1000150" [label="(Identifier,skb)"];
"1000214" [label="(Identifier,fq)"];
"1000198" [label="(Call,ip6_frag_ecn(hdr))"];
"1000174" [label="(Call,fq_find(net, fhdr->identification, user, &hdr->saddr, &hdr->daddr,\n\t\t     skb->dev ? skb->dev->ifindex : 0, ip6_frag_ecn(hdr)))"];
"1000106" [label="(Block,)"];
"1000163" [label="(Identifier,hdr)"];
"1000125" [label="(FieldIdentifier,payload_len)"];
"1000162" [label="(Call,hdr = ipv6_hdr(skb))"];
"1000136" [label="(Identifier,skb)"];
"1000220" [label="(Identifier,fq)"];
"1000224" [label="(Literal,0)"];
"1000160" [label="(Identifier,skb)"];
"1000176" [label="(Call,fhdr->identification)"];
"1000221" [label="(Identifier,skb)"];
"1000165" [label="(Identifier,skb)"];
"1000166" [label="(Call,fhdr = (struct frag_hdr *)skb_transport_header(skb))"];
"1000134" [label="(Call,find_prev_fhdr(skb, &prevhdr, &nhoff, &fhoff) < 0)"];
"1000188" [label="(Call,skb->dev ? skb->dev->ifindex : 0)"];
"1000217" [label="(ControlStructure,if (nf_ct_frag6_queue(fq, skb, fhdr, nhoff) < 0))"];
"1000206" [label="(Literal,\"Can't find and can't create new queue\n\")"];
"1000259" [label="(Identifier,fq)"];
"1000247" [label="(Call,fq->q.meat == fq->q.len)"];
"1000135" [label="(Call,find_prev_fhdr(skb, &prevhdr, &nhoff, &fhoff))"];
"1000222" [label="(Identifier,fhdr)"];
"1000200" [label="(ControlStructure,if (fq == NULL))"];
"1000265" [label="(JumpTarget,out_unlock:)"];
"1000122" [label="(Call,ipv6_hdr(skb)->payload_len)"];
"1000105" [label="(MethodParameterIn,u32 user)"];
"1000202" [label="(Identifier,fq)"];
"1000246" [label="(Call,fq->q.meat == fq->q.len &&\n\t    nf_ct_frag6_reasm(fq, skb, dev))"];
"1000139" [label="(Call,&nhoff)"];
"1000218" [label="(Call,nf_ct_frag6_queue(fq, skb, fhdr, nhoff) < 0)"];
"1000282" [label="(MethodReturn,int)"];
"1000170" [label="(Call,skb_transport_header(skb))"];
"1000164" [label="(Call,ipv6_hdr(skb))"];
"1000258" [label="(Call,nf_ct_frag6_reasm(fq, skb, dev))"];
"1000180" [label="(Call,&hdr->saddr)"];
"1000149" [label="(Call,pskb_may_pull(skb, fhoff + sizeof(*fhdr)))"];
"1000236" [label="(Call,fq->q.flags == (INET_FRAG_FIRST_IN | INET_FRAG_LAST_IN) &&\n\t    fq->q.meat == fq->q.len &&\n\t    nf_ct_frag6_reasm(fq, skb, dev))"];
"1000108" [label="(Call,*dev = skb->dev)"];
"1000161" [label="(Identifier,fhoff)"];
"1000260" [label="(Identifier,skb)"];
"1000148" [label="(Call,!pskb_may_pull(skb, fhoff + sizeof(*fhdr)))"];
"1000263" [label="(Identifier,ret)"];
"1000199" [label="(Identifier,hdr)"];
"1000232" [label="(Identifier,ret)"];
"1000227" [label="(Identifier,ret)"];
"1000235" [label="(ControlStructure,if (fq->q.flags == (INET_FRAG_FIRST_IN | INET_FRAG_LAST_IN) &&\n\t    fq->q.meat == fq->q.len &&\n\t    nf_ct_frag6_reasm(fq, skb, dev)))"];
"1000124" [label="(Identifier,skb)"];
"1000184" [label="(Call,&hdr->daddr)"];
"1000174" -> "1000172"  [label="AST: "];
"1000174" -> "1000198"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000176" -> "1000174"  [label="AST: "];
"1000179" -> "1000174"  [label="AST: "];
"1000180" -> "1000174"  [label="AST: "];
"1000184" -> "1000174"  [label="AST: "];
"1000188" -> "1000174"  [label="AST: "];
"1000198" -> "1000174"  [label="AST: "];
"1000172" -> "1000174"  [label="CFG: "];
"1000174" -> "1000282"  [label="DDG: skb->dev ? skb->dev->ifindex : 0"];
"1000174" -> "1000282"  [label="DDG: user"];
"1000174" -> "1000282"  [label="DDG: &hdr->daddr"];
"1000174" -> "1000282"  [label="DDG: &hdr->saddr"];
"1000174" -> "1000282"  [label="DDG: fhdr->identification"];
"1000174" -> "1000282"  [label="DDG: net"];
"1000174" -> "1000282"  [label="DDG: ip6_frag_ecn(hdr)"];
"1000174" -> "1000172"  [label="DDG: &hdr->daddr"];
"1000174" -> "1000172"  [label="DDG: ip6_frag_ecn(hdr)"];
"1000174" -> "1000172"  [label="DDG: user"];
"1000174" -> "1000172"  [label="DDG: net"];
"1000174" -> "1000172"  [label="DDG: skb->dev ? skb->dev->ifindex : 0"];
"1000174" -> "1000172"  [label="DDG: fhdr->identification"];
"1000174" -> "1000172"  [label="DDG: &hdr->saddr"];
"1000103" -> "1000174"  [label="DDG: net"];
"1000105" -> "1000174"  [label="DDG: user"];
"1000198" -> "1000174"  [label="DDG: hdr"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000282"  [label="DDG: net"];
"1000105" -> "1000102"  [label="AST: "];
"1000105" -> "1000282"  [label="DDG: user"];
"1000198" -> "1000199"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000198" -> "1000282"  [label="DDG: hdr"];
"1000162" -> "1000198"  [label="DDG: hdr"];
"1000162" -> "1000106"  [label="AST: "];
"1000162" -> "1000164"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000164" -> "1000162"  [label="AST: "];
"1000167" -> "1000162"  [label="CFG: "];
"1000162" -> "1000282"  [label="DDG: ipv6_hdr(skb)"];
"1000164" -> "1000162"  [label="DDG: skb"];
"1000164" -> "1000165"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000159" -> "1000164"  [label="DDG: skb"];
"1000104" -> "1000164"  [label="DDG: skb"];
"1000164" -> "1000170"  [label="DDG: skb"];
"1000159" -> "1000106"  [label="AST: "];
"1000159" -> "1000161"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000161" -> "1000159"  [label="AST: "];
"1000163" -> "1000159"  [label="CFG: "];
"1000159" -> "1000282"  [label="DDG: skb_set_transport_header(skb, fhoff)"];
"1000159" -> "1000282"  [label="DDG: fhoff"];
"1000149" -> "1000159"  [label="DDG: skb"];
"1000104" -> "1000159"  [label="DDG: skb"];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000148" -> "1000149"  [label="CFG: "];
"1000149" -> "1000282"  [label="DDG: fhoff + sizeof(*fhdr)"];
"1000149" -> "1000282"  [label="DDG: skb"];
"1000149" -> "1000148"  [label="DDG: skb"];
"1000149" -> "1000148"  [label="DDG: fhoff + sizeof(*fhdr)"];
"1000135" -> "1000149"  [label="DDG: skb"];
"1000104" -> "1000149"  [label="DDG: skb"];
"1000135" -> "1000134"  [label="AST: "];
"1000135" -> "1000141"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000139" -> "1000135"  [label="AST: "];
"1000141" -> "1000135"  [label="AST: "];
"1000143" -> "1000135"  [label="CFG: "];
"1000135" -> "1000282"  [label="DDG: &fhoff"];
"1000135" -> "1000282"  [label="DDG: &nhoff"];
"1000135" -> "1000282"  [label="DDG: skb"];
"1000135" -> "1000282"  [label="DDG: &prevhdr"];
"1000135" -> "1000134"  [label="DDG: skb"];
"1000135" -> "1000134"  [label="DDG: &prevhdr"];
"1000135" -> "1000134"  [label="DDG: &nhoff"];
"1000135" -> "1000134"  [label="DDG: &fhoff"];
"1000123" -> "1000135"  [label="DDG: skb"];
"1000104" -> "1000135"  [label="DDG: skb"];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="CFG: "];
"1000123" -> "1000282"  [label="DDG: skb"];
"1000104" -> "1000123"  [label="DDG: skb"];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1000282"  [label="DDG: skb"];
"1000104" -> "1000170"  [label="DDG: skb"];
"1000104" -> "1000219"  [label="DDG: skb"];
"1000104" -> "1000258"  [label="DDG: skb"];
"1000172" -> "1000106"  [label="AST: "];
"1000173" -> "1000172"  [label="AST: "];
"1000202" -> "1000172"  [label="CFG: "];
"1000172" -> "1000282"  [label="DDG: fq_find(net, fhdr->identification, user, &hdr->saddr, &hdr->daddr,\n\t\t     skb->dev ? skb->dev->ifindex : 0, ip6_frag_ecn(hdr))"];
"1000172" -> "1000201"  [label="DDG: fq"];
"1000201" -> "1000200"  [label="AST: "];
"1000201" -> "1000203"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000203" -> "1000201"  [label="AST: "];
"1000206" -> "1000201"  [label="CFG: "];
"1000214" -> "1000201"  [label="CFG: "];
"1000201" -> "1000282"  [label="DDG: fq == NULL"];
"1000201" -> "1000282"  [label="DDG: NULL"];
"1000201" -> "1000282"  [label="DDG: fq"];
"1000201" -> "1000219"  [label="DDG: fq"];
"1000219" -> "1000218"  [label="AST: "];
"1000219" -> "1000223"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000221" -> "1000219"  [label="AST: "];
"1000222" -> "1000219"  [label="AST: "];
"1000223" -> "1000219"  [label="AST: "];
"1000224" -> "1000219"  [label="CFG: "];
"1000219" -> "1000282"  [label="DDG: skb"];
"1000219" -> "1000282"  [label="DDG: nhoff"];
"1000219" -> "1000282"  [label="DDG: fhdr"];
"1000219" -> "1000282"  [label="DDG: fq"];
"1000219" -> "1000218"  [label="DDG: fq"];
"1000219" -> "1000218"  [label="DDG: skb"];
"1000219" -> "1000218"  [label="DDG: fhdr"];
"1000219" -> "1000218"  [label="DDG: nhoff"];
"1000170" -> "1000219"  [label="DDG: skb"];
"1000166" -> "1000219"  [label="DDG: fhdr"];
"1000219" -> "1000258"  [label="DDG: fq"];
"1000219" -> "1000258"  [label="DDG: skb"];
"1000218" -> "1000217"  [label="AST: "];
"1000218" -> "1000224"  [label="CFG: "];
"1000224" -> "1000218"  [label="AST: "];
"1000227" -> "1000218"  [label="CFG: "];
"1000232" -> "1000218"  [label="CFG: "];
"1000218" -> "1000282"  [label="DDG: nf_ct_frag6_queue(fq, skb, fhdr, nhoff)"];
"1000218" -> "1000282"  [label="DDG: nf_ct_frag6_queue(fq, skb, fhdr, nhoff) < 0"];
"1000258" -> "1000246"  [label="AST: "];
"1000258" -> "1000261"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000260" -> "1000258"  [label="AST: "];
"1000261" -> "1000258"  [label="AST: "];
"1000246" -> "1000258"  [label="CFG: "];
"1000258" -> "1000282"  [label="DDG: fq"];
"1000258" -> "1000282"  [label="DDG: skb"];
"1000258" -> "1000282"  [label="DDG: dev"];
"1000258" -> "1000246"  [label="DDG: fq"];
"1000258" -> "1000246"  [label="DDG: skb"];
"1000258" -> "1000246"  [label="DDG: dev"];
"1000108" -> "1000258"  [label="DDG: dev"];
"1000246" -> "1000236"  [label="AST: "];
"1000246" -> "1000247"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000236" -> "1000246"  [label="CFG: "];
"1000246" -> "1000282"  [label="DDG: nf_ct_frag6_reasm(fq, skb, dev)"];
"1000246" -> "1000282"  [label="DDG: fq->q.meat == fq->q.len"];
"1000246" -> "1000236"  [label="DDG: fq->q.meat == fq->q.len"];
"1000246" -> "1000236"  [label="DDG: nf_ct_frag6_reasm(fq, skb, dev)"];
"1000247" -> "1000246"  [label="DDG: fq->q.meat"];
"1000247" -> "1000246"  [label="DDG: fq->q.len"];
"1000236" -> "1000235"  [label="AST: "];
"1000236" -> "1000237"  [label="CFG: "];
"1000237" -> "1000236"  [label="AST: "];
"1000263" -> "1000236"  [label="CFG: "];
"1000265" -> "1000236"  [label="CFG: "];
"1000236" -> "1000282"  [label="DDG: fq->q.flags == (INET_FRAG_FIRST_IN | INET_FRAG_LAST_IN)"];
"1000236" -> "1000282"  [label="DDG: fq->q.flags == (INET_FRAG_FIRST_IN | INET_FRAG_LAST_IN) &&\n\t    fq->q.meat == fq->q.len &&\n\t    nf_ct_frag6_reasm(fq, skb, dev)"];
"1000236" -> "1000282"  [label="DDG: fq->q.meat == fq->q.len &&\n\t    nf_ct_frag6_reasm(fq, skb, dev)"];
"1000237" -> "1000236"  [label="DDG: fq->q.flags"];
"1000237" -> "1000236"  [label="DDG: INET_FRAG_FIRST_IN | INET_FRAG_LAST_IN"];
}
