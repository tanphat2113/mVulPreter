digraph "0_heimdal_b1e699103f08d6a0ca46a122193c9da65f6cf837_1@pointer" {
"1000131" [label="(MethodParameterIn,const METHOD_DATA *enc_pa_data)"];
"1000996" [label="(Call,copy_METHOD_DATA(enc_pa_data, rep.padata))"];
"1000994" [label="(Call,ret = copy_METHOD_DATA(enc_pa_data, rep.padata))"];
"1001125" [label="(Return,return ret;)"];
"1001002" [label="(Identifier,ret)"];
"1000952" [label="(Call,ret = _kdc_add_KRB5SignedPath(context,\n\t\t\t\t\t  config,\n\t\t\t\t\t  krbtgt,\n\t\t\t\t\t  krbtgt_etype,\n\t\t\t\t\t  client_principal,\n\t\t\t\t\t  NULL,\n\t\t\t\t\t  spp,\n\t\t\t\t\t  &et))"];
"1000843" [label="(Call,ret = ENOMEM)"];
"1000223" [label="(Call,ret = fix_transited_encoding(context, config,\n\t\t\t\t !f.disable_transited_check ||\n\t\t\t\t GLOBAL_FORCE_TRANSITED_CHECK ||\n\t\t\t\t PRINCIPAL_FORCE_TRANSITED_CHECK(server) ||\n\t\t\t\t !((GLOBAL_ALLOW_PER_PRINCIPAL &&\n\t\t\t\t    PRINCIPAL_ALLOW_DISABLE_TRANSITED_CHECK(server)) ||\n\t\t\t\t   GLOBAL_ALLOW_DISABLE_TRANSITED_CHECK),\n \t\t\t\t &tgt->transited, &et,\n \t\t\t\t krb5_principal_get_realm(context, client_principal),\n \t\t\t\t krb5_principal_get_realm(context, server->entry.principal),\n\t\t\t\t krb5_principal_get_realm(context, krbtgt->entry.principal)))"];
"1000786" [label="(Call,ret = krb5_copy_keyblock_contents(context, sessionkey, &et.key))"];
"1000691" [label="(Call,krb5_set_error_message(context, ret, \"malloc: out of memory\"))"];
"1000645" [label="(Call,ret = _kdc_tkt_add_if_relevant_ad(context, &et,\n\t\t\t\t\t  KRB5_AUTHDATA_WIN2K_PAC, rspac))"];
"1000131" [label="(MethodParameterIn,const METHOD_DATA *enc_pa_data)"];
"1000134" [label="(Block,)"];
"1000211" [label="(Call,ret = check_tgs_flags(context, config, b, tgt, &et))"];
"1000984" [label="(Call,rep.padata == NULL)"];
"1001031" [label="(Call,ret = _kdc_encode_reply(context, config, NULL, 0,\n\t\t\t    &rep, &et, &ek, serverkey->keytype,\n\t\t\t    kvno,\n\t\t\t    serverkey, 0, replykey, rk_is_subkey,\n\t\t\t    e_text, reply))"];
"1000560" [label="(Call,ret = KRB5KDC_ERR_NEVER_VALID)"];
"1000995" [label="(Identifier,ret)"];
"1000996" [label="(Call,copy_METHOD_DATA(enc_pa_data, rep.padata))"];
"1001125" [label="(Return,return ret;)"];
"1001127" [label="(MethodReturn,RET)"];
"1000971" [label="(Block,)"];
"1000997" [label="(Identifier,enc_pa_data)"];
"1000723" [label="(Call,krb5_set_error_message(context, ret, \"malloc: out of memory\"))"];
"1000998" [label="(Call,rep.padata)"];
"1001126" [label="(Identifier,ret)"];
"1000990" [label="(Call,ret = ENOMEM)"];
"1000994" [label="(Call,ret = copy_METHOD_DATA(enc_pa_data, rep.padata))"];
"1000131" -> "1000110"  [label="AST: "];
"1000131" -> "1001127"  [label="DDG: enc_pa_data"];
"1000131" -> "1000996"  [label="DDG: enc_pa_data"];
"1000996" -> "1000994"  [label="AST: "];
"1000996" -> "1000998"  [label="CFG: "];
"1000997" -> "1000996"  [label="AST: "];
"1000998" -> "1000996"  [label="AST: "];
"1000994" -> "1000996"  [label="CFG: "];
"1000996" -> "1001127"  [label="DDG: rep.padata"];
"1000996" -> "1001127"  [label="DDG: enc_pa_data"];
"1000996" -> "1000994"  [label="DDG: enc_pa_data"];
"1000996" -> "1000994"  [label="DDG: rep.padata"];
"1000984" -> "1000996"  [label="DDG: rep.padata"];
"1000994" -> "1000971"  [label="AST: "];
"1000995" -> "1000994"  [label="AST: "];
"1001002" -> "1000994"  [label="CFG: "];
"1000994" -> "1001127"  [label="DDG: copy_METHOD_DATA(enc_pa_data, rep.padata)"];
"1000994" -> "1001127"  [label="DDG: ret"];
"1000994" -> "1001125"  [label="DDG: ret"];
"1001125" -> "1000134"  [label="AST: "];
"1001125" -> "1001126"  [label="CFG: "];
"1001126" -> "1001125"  [label="AST: "];
"1001127" -> "1001125"  [label="CFG: "];
"1001125" -> "1001127"  [label="DDG: <RET>"];
"1001126" -> "1001125"  [label="DDG: ret"];
"1000691" -> "1001125"  [label="DDG: ret"];
"1000645" -> "1001125"  [label="DDG: ret"];
"1000952" -> "1001125"  [label="DDG: ret"];
"1000843" -> "1001125"  [label="DDG: ret"];
"1000990" -> "1001125"  [label="DDG: ret"];
"1000786" -> "1001125"  [label="DDG: ret"];
"1000211" -> "1001125"  [label="DDG: ret"];
"1000723" -> "1001125"  [label="DDG: ret"];
"1001031" -> "1001125"  [label="DDG: ret"];
"1000560" -> "1001125"  [label="DDG: ret"];
"1000223" -> "1001125"  [label="DDG: ret"];
}
