digraph "0_exempi_65a8492832b7335ffabd01f5f64d89dec757c260@pointer" {
"1000164" [label="(Call,parent != 0)"];
"1000103" [label="(MethodParameterIn,ContainerChunk* parent)"];
"1000207" [label="(Call,parent == 0)"];
"1000205" [label="(Call,repairFile && (parent == 0))"];
"1000202" [label="(Call,(! isUpdate) || (repairFile && (parent == 0)))"];
"1000206" [label="(Identifier,repairFile)"];
"1000205" [label="(Call,repairFile && (parent == 0))"];
"1000163" [label="(ControlStructure,if ( parent != 0 ))"];
"1000103" [label="(MethodParameterIn,ContainerChunk* parent)"];
"1000208" [label="(Identifier,parent)"];
"1000209" [label="(Literal,0)"];
"1000203" [label="(Call,! isUpdate)"];
"1000164" [label="(Call,parent != 0)"];
"1000111" [label="(Call,this->parent = parent)"];
"1000223" [label="(Literal,\"Bad RIFF chunk size\")"];
"1000202" [label="(Call,(! isUpdate) || (repairFile && (parent == 0)))"];
"1000201" [label="(ControlStructure,if ( (! isUpdate) || (repairFile && (parent == 0)) ))"];
"1000168" [label="(Identifier,chunkLimit)"];
"1000269" [label="(MethodReturn,RET)"];
"1000213" [label="(Identifier,this)"];
"1000166" [label="(Literal,0)"];
"1000192" [label="(Call,repairFile = XMP_OptionIsSet ( handler->parent->openFlags, kXMPFiles_OpenRepairFile ))"];
"1000178" [label="(Identifier,chunkEnd)"];
"1000165" [label="(Identifier,parent)"];
"1000207" [label="(Call,parent == 0)"];
"1000164" -> "1000163"  [label="AST: "];
"1000164" -> "1000166"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000166" -> "1000164"  [label="AST: "];
"1000168" -> "1000164"  [label="CFG: "];
"1000178" -> "1000164"  [label="CFG: "];
"1000164" -> "1000269"  [label="DDG: parent != 0"];
"1000164" -> "1000269"  [label="DDG: parent"];
"1000103" -> "1000164"  [label="DDG: parent"];
"1000164" -> "1000207"  [label="DDG: parent"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000269"  [label="DDG: parent"];
"1000103" -> "1000111"  [label="DDG: parent"];
"1000103" -> "1000207"  [label="DDG: parent"];
"1000207" -> "1000205"  [label="AST: "];
"1000207" -> "1000209"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000209" -> "1000207"  [label="AST: "];
"1000205" -> "1000207"  [label="CFG: "];
"1000207" -> "1000269"  [label="DDG: parent"];
"1000207" -> "1000205"  [label="DDG: parent"];
"1000207" -> "1000205"  [label="DDG: 0"];
"1000205" -> "1000202"  [label="AST: "];
"1000205" -> "1000206"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000202" -> "1000205"  [label="CFG: "];
"1000205" -> "1000269"  [label="DDG: repairFile"];
"1000205" -> "1000269"  [label="DDG: parent == 0"];
"1000205" -> "1000202"  [label="DDG: repairFile"];
"1000205" -> "1000202"  [label="DDG: parent == 0"];
"1000192" -> "1000205"  [label="DDG: repairFile"];
"1000202" -> "1000201"  [label="AST: "];
"1000202" -> "1000203"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000213" -> "1000202"  [label="CFG: "];
"1000223" -> "1000202"  [label="CFG: "];
"1000202" -> "1000269"  [label="DDG: ! isUpdate"];
"1000202" -> "1000269"  [label="DDG: repairFile && (parent == 0)"];
"1000202" -> "1000269"  [label="DDG: (! isUpdate) || (repairFile && (parent == 0))"];
"1000203" -> "1000202"  [label="DDG: isUpdate"];
}
