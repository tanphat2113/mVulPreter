digraph "0_linux_82981930125abfd39d7c8378a9cfdf5e1be2002b_0@pointer" {
"1000574" [label="(Call,sk_attach_filter(&fprog, sk))"];
"1000565" [label="(Call,copy_from_user(&fprog, optval, sizeof(fprog)))"];
"1000147" [label="(Call,(int __user *)optval)"];
"1000111" [label="(MethodParameterIn,char __user *optval)"];
"1000159" [label="(Call,lock_sock(sk))"];
"1000115" [label="(Call,*sk = sock->sk)"];
"1000572" [label="(Call,ret = sk_attach_filter(&fprog, sk))"];
"1000660" [label="(Return,return ret;)"];
"1000658" [label="(Call,release_sock(sk))"];
"1000448" [label="(Call,sock_reset_flag(sk, SOCK_RCVTSTAMP))"];
"1000653" [label="(Call,ret = -ENOPROTOOPT)"];
"1000162" [label="(Identifier,optname)"];
"1000113" [label="(Block,)"];
"1000116" [label="(Identifier,sk)"];
"1000332" [label="(Call,ret = -EPERM)"];
"1000145" [label="(Call,get_user(val, (int __user *)optval))"];
"1000509" [label="(Call,sock_valbool_flag(sk, SOCK_TIMESTAMPING_RAW_HARDWARE,\n\t\t\t\t  val & SOF_TIMESTAMPING_RAW_HARDWARE))"];
"1000566" [label="(Call,&fprog)"];
"1000171" [label="(Call,ret = -EACCES)"];
"1000399" [label="(Call,sock_set_flag(sk, SOCK_LINGER))"];
"1000159" [label="(Call,lock_sock(sk))"];
"1000176" [label="(Call,sock_valbool_flag(sk, SOCK_DBG, valbool))"];
"1000578" [label="(ControlStructure,break;)"];
"1000124" [label="(Call,ret = 0)"];
"1000344" [label="(Call,ret = -EINVAL)"];
"1000625" [label="(Call,sock_valbool_flag(sk, SOCK_WIFI_STATUS, valbool))"];
"1000540" [label="(Call,sock_set_timeout(&sk->sk_sndtimeo, optval, optlen))"];
"1000660" [label="(Return,return ret;)"];
"1000466" [label="(Call,sock_valbool_flag(sk, SOCK_TIMESTAMPING_TX_HARDWARE,\n\t\t\t\t  val & SOF_TIMESTAMPING_TX_HARDWARE))"];
"1000641" [label="(Call,ret = -EOPNOTSUPP)"];
"1000575" [label="(Call,&fprog)"];
"1000235" [label="(Call,sk->sk_write_space(sk))"];
"1000661" [label="(Identifier,ret)"];
"1000577" [label="(Identifier,sk)"];
"1000565" [label="(Call,copy_from_user(&fprog, optval, sizeof(fprog)))"];
"1000574" [label="(Call,sk_attach_filter(&fprog, sk))"];
"1000280" [label="(Call,ret = -EPERM)"];
"1000647" [label="(Call,sock_valbool_flag(sk, SOCK_NOFCS, valbool))"];
"1000619" [label="(Call,sock_valbool_flag(sk, SOCK_RXQ_OVFL, valbool))"];
"1000201" [label="(Call,sock_valbool_flag(sk, SOCK_LOCALROUTE, valbool))"];
"1000572" [label="(Call,ret = sk_attach_filter(&fprog, sk))"];
"1000433" [label="(Call,sock_reset_flag(sk, SOCK_RCVTSTAMPNS))"];
"1000569" [label="(Call,sizeof(fprog))"];
"1000573" [label="(Identifier,ret)"];
"1000564" [label="(ControlStructure,if (copy_from_user(&fprog, optval, sizeof(fprog))))"];
"1000147" [label="(Call,(int __user *)optval)"];
"1000367" [label="(Call,sock_reset_flag(sk, SOCK_LINGER))"];
"1000659" [label="(Identifier,sk)"];
"1000350" [label="(Call,copy_from_user(&ling, optval, sizeof(ling)))"];
"1000111" [label="(MethodParameterIn,char __user *optval)"];
"1000538" [label="(Call,ret = sock_set_timeout(&sk->sk_sndtimeo, optval, optlen))"];
"1000244" [label="(Call,ret = -EPERM)"];
"1000558" [label="(Block,)"];
"1000607" [label="(Call,ret = -EPERM)"];
"1000117" [label="(Call,sock->sk)"];
"1000568" [label="(Identifier,optval)"];
"1000527" [label="(Call,ret = sock_set_timeout(&sk->sk_rcvtimeo, optval, optlen))"];
"1000296" [label="(Call,sock_valbool_flag(sk, SOCK_KEEPOPEN, valbool))"];
"1000658" [label="(Call,release_sock(sk))"];
"1000451" [label="(Call,sock_reset_flag(sk, SOCK_RCVTSTAMPNS))"];
"1000207" [label="(Call,sock_valbool_flag(sk, SOCK_BROADCAST, valbool))"];
"1000662" [label="(MethodReturn,int)"];
"1000160" [label="(Identifier,sk)"];
"1000125" [label="(Identifier,ret)"];
"1000149" [label="(Identifier,optval)"];
"1000293" [label="(Call,tcp_set_keepalive(sk, valbool))"];
"1000560" [label="(Call,ret = -EFAULT)"];
"1000132" [label="(Call,sock_bindtodevice(sk, optval, optlen))"];
"1000437" [label="(Call,sock_set_flag(sk, SOCK_RCVTSTAMPNS))"];
"1000582" [label="(Call,sk_detach_filter(sk))"];
"1000357" [label="(Call,ret = -EFAULT)"];
"1000529" [label="(Call,sock_set_timeout(&sk->sk_rcvtimeo, optval, optlen))"];
"1000302" [label="(Call,sock_valbool_flag(sk, SOCK_URGINLINE, valbool))"];
"1000115" [label="(Call,*sk = sock->sk)"];
"1000549" [label="(Call,ret = -EINVAL)"];
"1000195" [label="(Call,ret = -ENOPROTOOPT)"];
"1000571" [label="(ControlStructure,break;)"];
"1000443" [label="(Call,sock_enable_timestamp(sk, SOCK_TIMESTAMP))"];
"1000461" [label="(Call,ret = -EINVAL)"];
"1000580" [label="(Call,ret = sk_detach_filter(sk))"];
"1000637" [label="(Call,sock->ops->set_peek_off(sk, val))"];
"1000574" -> "1000572"  [label="AST: "];
"1000574" -> "1000577"  [label="CFG: "];
"1000575" -> "1000574"  [label="AST: "];
"1000577" -> "1000574"  [label="AST: "];
"1000572" -> "1000574"  [label="CFG: "];
"1000574" -> "1000662"  [label="DDG: &fprog"];
"1000574" -> "1000572"  [label="DDG: &fprog"];
"1000574" -> "1000572"  [label="DDG: sk"];
"1000565" -> "1000574"  [label="DDG: &fprog"];
"1000159" -> "1000574"  [label="DDG: sk"];
"1000574" -> "1000658"  [label="DDG: sk"];
"1000565" -> "1000564"  [label="AST: "];
"1000565" -> "1000569"  [label="CFG: "];
"1000566" -> "1000565"  [label="AST: "];
"1000568" -> "1000565"  [label="AST: "];
"1000569" -> "1000565"  [label="AST: "];
"1000571" -> "1000565"  [label="CFG: "];
"1000573" -> "1000565"  [label="CFG: "];
"1000565" -> "1000662"  [label="DDG: optval"];
"1000565" -> "1000662"  [label="DDG: &fprog"];
"1000565" -> "1000662"  [label="DDG: copy_from_user(&fprog, optval, sizeof(fprog))"];
"1000147" -> "1000565"  [label="DDG: optval"];
"1000111" -> "1000565"  [label="DDG: optval"];
"1000147" -> "1000145"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000147" -> "1000662"  [label="DDG: optval"];
"1000147" -> "1000145"  [label="DDG: optval"];
"1000111" -> "1000147"  [label="DDG: optval"];
"1000147" -> "1000350"  [label="DDG: optval"];
"1000147" -> "1000529"  [label="DDG: optval"];
"1000147" -> "1000540"  [label="DDG: optval"];
"1000111" -> "1000107"  [label="AST: "];
"1000111" -> "1000662"  [label="DDG: optval"];
"1000111" -> "1000132"  [label="DDG: optval"];
"1000111" -> "1000350"  [label="DDG: optval"];
"1000111" -> "1000529"  [label="DDG: optval"];
"1000111" -> "1000540"  [label="DDG: optval"];
"1000159" -> "1000113"  [label="AST: "];
"1000159" -> "1000160"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000162" -> "1000159"  [label="CFG: "];
"1000159" -> "1000662"  [label="DDG: lock_sock(sk)"];
"1000115" -> "1000159"  [label="DDG: sk"];
"1000159" -> "1000176"  [label="DDG: sk"];
"1000159" -> "1000201"  [label="DDG: sk"];
"1000159" -> "1000207"  [label="DDG: sk"];
"1000159" -> "1000235"  [label="DDG: sk"];
"1000159" -> "1000293"  [label="DDG: sk"];
"1000159" -> "1000296"  [label="DDG: sk"];
"1000159" -> "1000302"  [label="DDG: sk"];
"1000159" -> "1000367"  [label="DDG: sk"];
"1000159" -> "1000399"  [label="DDG: sk"];
"1000159" -> "1000433"  [label="DDG: sk"];
"1000159" -> "1000437"  [label="DDG: sk"];
"1000159" -> "1000448"  [label="DDG: sk"];
"1000159" -> "1000466"  [label="DDG: sk"];
"1000159" -> "1000582"  [label="DDG: sk"];
"1000159" -> "1000619"  [label="DDG: sk"];
"1000159" -> "1000625"  [label="DDG: sk"];
"1000159" -> "1000637"  [label="DDG: sk"];
"1000159" -> "1000647"  [label="DDG: sk"];
"1000159" -> "1000658"  [label="DDG: sk"];
"1000115" -> "1000113"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000125" -> "1000115"  [label="CFG: "];
"1000115" -> "1000662"  [label="DDG: sock->sk"];
"1000115" -> "1000662"  [label="DDG: sk"];
"1000115" -> "1000132"  [label="DDG: sk"];
"1000572" -> "1000558"  [label="AST: "];
"1000573" -> "1000572"  [label="AST: "];
"1000578" -> "1000572"  [label="CFG: "];
"1000572" -> "1000662"  [label="DDG: sk_attach_filter(&fprog, sk)"];
"1000572" -> "1000662"  [label="DDG: ret"];
"1000572" -> "1000660"  [label="DDG: ret"];
"1000660" -> "1000113"  [label="AST: "];
"1000660" -> "1000661"  [label="CFG: "];
"1000661" -> "1000660"  [label="AST: "];
"1000662" -> "1000660"  [label="CFG: "];
"1000660" -> "1000662"  [label="DDG: <RET>"];
"1000661" -> "1000660"  [label="DDG: ret"];
"1000549" -> "1000660"  [label="DDG: ret"];
"1000171" -> "1000660"  [label="DDG: ret"];
"1000527" -> "1000660"  [label="DDG: ret"];
"1000607" -> "1000660"  [label="DDG: ret"];
"1000357" -> "1000660"  [label="DDG: ret"];
"1000580" -> "1000660"  [label="DDG: ret"];
"1000280" -> "1000660"  [label="DDG: ret"];
"1000653" -> "1000660"  [label="DDG: ret"];
"1000244" -> "1000660"  [label="DDG: ret"];
"1000560" -> "1000660"  [label="DDG: ret"];
"1000124" -> "1000660"  [label="DDG: ret"];
"1000332" -> "1000660"  [label="DDG: ret"];
"1000461" -> "1000660"  [label="DDG: ret"];
"1000538" -> "1000660"  [label="DDG: ret"];
"1000344" -> "1000660"  [label="DDG: ret"];
"1000195" -> "1000660"  [label="DDG: ret"];
"1000641" -> "1000660"  [label="DDG: ret"];
"1000658" -> "1000113"  [label="AST: "];
"1000658" -> "1000659"  [label="CFG: "];
"1000659" -> "1000658"  [label="AST: "];
"1000661" -> "1000658"  [label="CFG: "];
"1000658" -> "1000662"  [label="DDG: release_sock(sk)"];
"1000658" -> "1000662"  [label="DDG: sk"];
"1000637" -> "1000658"  [label="DDG: sk"];
"1000367" -> "1000658"  [label="DDG: sk"];
"1000647" -> "1000658"  [label="DDG: sk"];
"1000451" -> "1000658"  [label="DDG: sk"];
"1000207" -> "1000658"  [label="DDG: sk"];
"1000399" -> "1000658"  [label="DDG: sk"];
"1000296" -> "1000658"  [label="DDG: sk"];
"1000176" -> "1000658"  [label="DDG: sk"];
"1000509" -> "1000658"  [label="DDG: sk"];
"1000201" -> "1000658"  [label="DDG: sk"];
"1000625" -> "1000658"  [label="DDG: sk"];
"1000235" -> "1000658"  [label="DDG: sk"];
"1000302" -> "1000658"  [label="DDG: sk"];
"1000582" -> "1000658"  [label="DDG: sk"];
"1000443" -> "1000658"  [label="DDG: sk"];
"1000619" -> "1000658"  [label="DDG: sk"];
}
