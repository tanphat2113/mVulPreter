digraph "0_linux_82981930125abfd39d7c8378a9cfdf5e1be2002b_0@API" {
"1000137" [label="(Call,optlen < sizeof(int))"];
"1000112" [label="(MethodParameterIn,unsigned int optlen)"];
"1000339" [label="(Call,optlen < sizeof(ling))"];
"1000529" [label="(Call,sock_set_timeout(&sk->sk_rcvtimeo, optval, optlen))"];
"1000527" [label="(Call,ret = sock_set_timeout(&sk->sk_rcvtimeo, optval, optlen))"];
"1000660" [label="(Return,return ret;)"];
"1000540" [label="(Call,sock_set_timeout(&sk->sk_sndtimeo, optval, optlen))"];
"1000538" [label="(Call,ret = sock_set_timeout(&sk->sk_sndtimeo, optval, optlen))"];
"1000554" [label="(Call,optlen == sizeof(struct sock_fprog))"];
"1000136" [label="(ControlStructure,if (optlen < sizeof(int)))"];
"1000653" [label="(Call,ret = -ENOPROTOOPT)"];
"1000113" [label="(Block,)"];
"1000332" [label="(Call,ret = -EPERM)"];
"1000546" [label="(Identifier,optlen)"];
"1000171" [label="(Call,ret = -EACCES)"];
"1000554" [label="(Call,optlen == sizeof(struct sock_fprog))"];
"1000578" [label="(ControlStructure,break;)"];
"1000339" [label="(Call,optlen < sizeof(ling))"];
"1000124" [label="(Call,ret = 0)"];
"1000340" [label="(Identifier,optlen)"];
"1000344" [label="(Call,ret = -EINVAL)"];
"1000540" [label="(Call,sock_set_timeout(&sk->sk_sndtimeo, optval, optlen))"];
"1000660" [label="(Return,return ret;)"];
"1000143" [label="(Identifier,EINVAL)"];
"1000641" [label="(Call,ret = -EOPNOTSUPP)"];
"1000556" [label="(Call,sizeof(struct sock_fprog))"];
"1000163" [label="(Block,)"];
"1000661" [label="(Identifier,ret)"];
"1000555" [label="(Identifier,optlen)"];
"1000561" [label="(Identifier,ret)"];
"1000536" [label="(ControlStructure,break;)"];
"1000280" [label="(Call,ret = -EPERM)"];
"1000138" [label="(Identifier,optlen)"];
"1000572" [label="(Call,ret = sk_attach_filter(&fprog, sk))"];
"1000553" [label="(ControlStructure,if (optlen == sizeof(struct sock_fprog)))"];
"1000535" [label="(Identifier,optlen)"];
"1000539" [label="(Identifier,ret)"];
"1000147" [label="(Call,(int __user *)optval)"];
"1000534" [label="(Identifier,optval)"];
"1000538" [label="(Call,ret = sock_set_timeout(&sk->sk_sndtimeo, optval, optlen))"];
"1000111" [label="(MethodParameterIn,char __user *optval)"];
"1000244" [label="(Call,ret = -EPERM)"];
"1000341" [label="(Call,sizeof(ling))"];
"1000541" [label="(Call,&sk->sk_sndtimeo)"];
"1000607" [label="(Call,ret = -EPERM)"];
"1000146" [label="(Identifier,val)"];
"1000139" [label="(Call,sizeof(int))"];
"1000527" [label="(Call,ret = sock_set_timeout(&sk->sk_rcvtimeo, optval, optlen))"];
"1000528" [label="(Identifier,ret)"];
"1000530" [label="(Call,&sk->sk_rcvtimeo)"];
"1000545" [label="(Identifier,optval)"];
"1000662" [label="(MethodReturn,int)"];
"1000137" [label="(Call,optlen < sizeof(int))"];
"1000352" [label="(Identifier,ling)"];
"1000560" [label="(Call,ret = -EFAULT)"];
"1000112" [label="(MethodParameterIn,unsigned int optlen)"];
"1000345" [label="(Identifier,ret)"];
"1000529" [label="(Call,sock_set_timeout(&sk->sk_rcvtimeo, optval, optlen))"];
"1000357" [label="(Call,ret = -EFAULT)"];
"1000195" [label="(Call,ret = -ENOPROTOOPT)"];
"1000549" [label="(Call,ret = -EINVAL)"];
"1000547" [label="(ControlStructure,break;)"];
"1000461" [label="(Call,ret = -EINVAL)"];
"1000580" [label="(Call,ret = sk_detach_filter(sk))"];
"1000132" [label="(Call,sock_bindtodevice(sk, optval, optlen))"];
"1000338" [label="(ControlStructure,if (optlen < sizeof(ling)))"];
"1000137" -> "1000136"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000143" -> "1000137"  [label="CFG: "];
"1000146" -> "1000137"  [label="CFG: "];
"1000137" -> "1000662"  [label="DDG: optlen"];
"1000137" -> "1000662"  [label="DDG: optlen < sizeof(int)"];
"1000112" -> "1000137"  [label="DDG: optlen"];
"1000137" -> "1000339"  [label="DDG: optlen"];
"1000137" -> "1000529"  [label="DDG: optlen"];
"1000137" -> "1000540"  [label="DDG: optlen"];
"1000137" -> "1000554"  [label="DDG: optlen"];
"1000112" -> "1000107"  [label="AST: "];
"1000112" -> "1000662"  [label="DDG: optlen"];
"1000112" -> "1000132"  [label="DDG: optlen"];
"1000112" -> "1000339"  [label="DDG: optlen"];
"1000112" -> "1000529"  [label="DDG: optlen"];
"1000112" -> "1000540"  [label="DDG: optlen"];
"1000112" -> "1000554"  [label="DDG: optlen"];
"1000339" -> "1000338"  [label="AST: "];
"1000339" -> "1000341"  [label="CFG: "];
"1000340" -> "1000339"  [label="AST: "];
"1000341" -> "1000339"  [label="AST: "];
"1000345" -> "1000339"  [label="CFG: "];
"1000352" -> "1000339"  [label="CFG: "];
"1000339" -> "1000662"  [label="DDG: optlen < sizeof(ling)"];
"1000339" -> "1000662"  [label="DDG: optlen"];
"1000529" -> "1000527"  [label="AST: "];
"1000529" -> "1000535"  [label="CFG: "];
"1000530" -> "1000529"  [label="AST: "];
"1000534" -> "1000529"  [label="AST: "];
"1000535" -> "1000529"  [label="AST: "];
"1000527" -> "1000529"  [label="CFG: "];
"1000529" -> "1000662"  [label="DDG: &sk->sk_rcvtimeo"];
"1000529" -> "1000662"  [label="DDG: optval"];
"1000529" -> "1000662"  [label="DDG: optlen"];
"1000529" -> "1000527"  [label="DDG: &sk->sk_rcvtimeo"];
"1000529" -> "1000527"  [label="DDG: optval"];
"1000529" -> "1000527"  [label="DDG: optlen"];
"1000147" -> "1000529"  [label="DDG: optval"];
"1000111" -> "1000529"  [label="DDG: optval"];
"1000527" -> "1000163"  [label="AST: "];
"1000528" -> "1000527"  [label="AST: "];
"1000536" -> "1000527"  [label="CFG: "];
"1000527" -> "1000662"  [label="DDG: ret"];
"1000527" -> "1000662"  [label="DDG: sock_set_timeout(&sk->sk_rcvtimeo, optval, optlen)"];
"1000527" -> "1000660"  [label="DDG: ret"];
"1000660" -> "1000113"  [label="AST: "];
"1000660" -> "1000661"  [label="CFG: "];
"1000661" -> "1000660"  [label="AST: "];
"1000662" -> "1000660"  [label="CFG: "];
"1000660" -> "1000662"  [label="DDG: <RET>"];
"1000661" -> "1000660"  [label="DDG: ret"];
"1000549" -> "1000660"  [label="DDG: ret"];
"1000171" -> "1000660"  [label="DDG: ret"];
"1000607" -> "1000660"  [label="DDG: ret"];
"1000357" -> "1000660"  [label="DDG: ret"];
"1000580" -> "1000660"  [label="DDG: ret"];
"1000280" -> "1000660"  [label="DDG: ret"];
"1000653" -> "1000660"  [label="DDG: ret"];
"1000244" -> "1000660"  [label="DDG: ret"];
"1000560" -> "1000660"  [label="DDG: ret"];
"1000124" -> "1000660"  [label="DDG: ret"];
"1000332" -> "1000660"  [label="DDG: ret"];
"1000461" -> "1000660"  [label="DDG: ret"];
"1000538" -> "1000660"  [label="DDG: ret"];
"1000572" -> "1000660"  [label="DDG: ret"];
"1000344" -> "1000660"  [label="DDG: ret"];
"1000195" -> "1000660"  [label="DDG: ret"];
"1000641" -> "1000660"  [label="DDG: ret"];
"1000540" -> "1000538"  [label="AST: "];
"1000540" -> "1000546"  [label="CFG: "];
"1000541" -> "1000540"  [label="AST: "];
"1000545" -> "1000540"  [label="AST: "];
"1000546" -> "1000540"  [label="AST: "];
"1000538" -> "1000540"  [label="CFG: "];
"1000540" -> "1000662"  [label="DDG: optlen"];
"1000540" -> "1000662"  [label="DDG: optval"];
"1000540" -> "1000662"  [label="DDG: &sk->sk_sndtimeo"];
"1000540" -> "1000538"  [label="DDG: &sk->sk_sndtimeo"];
"1000540" -> "1000538"  [label="DDG: optval"];
"1000540" -> "1000538"  [label="DDG: optlen"];
"1000147" -> "1000540"  [label="DDG: optval"];
"1000111" -> "1000540"  [label="DDG: optval"];
"1000538" -> "1000163"  [label="AST: "];
"1000539" -> "1000538"  [label="AST: "];
"1000547" -> "1000538"  [label="CFG: "];
"1000538" -> "1000662"  [label="DDG: sock_set_timeout(&sk->sk_sndtimeo, optval, optlen)"];
"1000538" -> "1000662"  [label="DDG: ret"];
"1000554" -> "1000553"  [label="AST: "];
"1000554" -> "1000556"  [label="CFG: "];
"1000555" -> "1000554"  [label="AST: "];
"1000556" -> "1000554"  [label="AST: "];
"1000561" -> "1000554"  [label="CFG: "];
"1000578" -> "1000554"  [label="CFG: "];
"1000554" -> "1000662"  [label="DDG: optlen == sizeof(struct sock_fprog)"];
"1000554" -> "1000662"  [label="DDG: optlen"];
}
