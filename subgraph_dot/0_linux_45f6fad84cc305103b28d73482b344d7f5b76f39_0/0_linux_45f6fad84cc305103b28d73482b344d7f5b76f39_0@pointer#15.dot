digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_0@pointer" {
"1000491" [label="(Call,sock_net(sk))"];
"1000232" [label="(Call,sk_acceptq_is_full(sk))"];
"1000125" [label="(Call,inet6_sk(sk))"];
"1000109" [label="(MethodParameterIn,const struct sock *sk)"];
"1000490" [label="(Call,NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENOVERFLOWS))"];
"1000499" [label="(Call,sock_net(sk))"];
"1000498" [label="(Call,NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENDROPS))"];
"1000493" [label="(Identifier,LINUX_MIB_LISTENOVERFLOWS)"];
"1000254" [label="(Call,dccp_create_openreq_child(sk, req, skb))"];
"1000491" [label="(Call,sock_net(sk))"];
"1000499" [label="(Call,sock_net(sk))"];
"1000141" [label="(Call,dccp_v4_request_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t\t  req_unhash, own_req))"];
"1000123" [label="(Call,*np = inet6_sk(sk))"];
"1000435" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000492" [label="(Identifier,sk)"];
"1000125" [label="(Call,inet6_sk(sk))"];
"1000115" [label="(Block,)"];
"1000503" [label="(Identifier,NULL)"];
"1000234" [label="(ControlStructure,goto out_overflow;)"];
"1000126" [label="(Identifier,sk)"];
"1000500" [label="(Identifier,sk)"];
"1000498" [label="(Call,NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENDROPS))"];
"1000501" [label="(Identifier,LINUX_MIB_LISTENDROPS)"];
"1000233" [label="(Identifier,sk)"];
"1000231" [label="(ControlStructure,if (sk_acceptq_is_full(sk)))"];
"1000490" [label="(Call,NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENOVERFLOWS))"];
"1000494" [label="(JumpTarget,out_nonewsk:)"];
"1000242" [label="(Call,inet6_csk_route_req(sk, &fl6, req, IPPROTO_DCCP))"];
"1000237" [label="(Identifier,dst)"];
"1000109" [label="(MethodParameterIn,const struct sock *sk)"];
"1000232" [label="(Call,sk_acceptq_is_full(sk))"];
"1000504" [label="(MethodReturn,static struct sock *)"];
"1000491" -> "1000490"  [label="AST: "];
"1000491" -> "1000492"  [label="CFG: "];
"1000492" -> "1000491"  [label="AST: "];
"1000493" -> "1000491"  [label="CFG: "];
"1000491" -> "1000490"  [label="DDG: sk"];
"1000232" -> "1000491"  [label="DDG: sk"];
"1000109" -> "1000491"  [label="DDG: sk"];
"1000491" -> "1000499"  [label="DDG: sk"];
"1000232" -> "1000231"  [label="AST: "];
"1000232" -> "1000233"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000234" -> "1000232"  [label="CFG: "];
"1000237" -> "1000232"  [label="CFG: "];
"1000232" -> "1000504"  [label="DDG: sk_acceptq_is_full(sk)"];
"1000125" -> "1000232"  [label="DDG: sk"];
"1000109" -> "1000232"  [label="DDG: sk"];
"1000232" -> "1000242"  [label="DDG: sk"];
"1000232" -> "1000254"  [label="DDG: sk"];
"1000125" -> "1000123"  [label="AST: "];
"1000125" -> "1000126"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000125" -> "1000123"  [label="DDG: sk"];
"1000109" -> "1000125"  [label="DDG: sk"];
"1000125" -> "1000141"  [label="DDG: sk"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000504"  [label="DDG: sk"];
"1000109" -> "1000141"  [label="DDG: sk"];
"1000109" -> "1000242"  [label="DDG: sk"];
"1000109" -> "1000254"  [label="DDG: sk"];
"1000109" -> "1000435"  [label="DDG: sk"];
"1000109" -> "1000499"  [label="DDG: sk"];
"1000490" -> "1000115"  [label="AST: "];
"1000490" -> "1000493"  [label="CFG: "];
"1000493" -> "1000490"  [label="AST: "];
"1000494" -> "1000490"  [label="CFG: "];
"1000490" -> "1000504"  [label="DDG: LINUX_MIB_LISTENOVERFLOWS"];
"1000490" -> "1000504"  [label="DDG: NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENOVERFLOWS)"];
"1000499" -> "1000498"  [label="AST: "];
"1000499" -> "1000500"  [label="CFG: "];
"1000500" -> "1000499"  [label="AST: "];
"1000501" -> "1000499"  [label="CFG: "];
"1000499" -> "1000504"  [label="DDG: sk"];
"1000499" -> "1000498"  [label="DDG: sk"];
"1000435" -> "1000499"  [label="DDG: sk"];
"1000254" -> "1000499"  [label="DDG: sk"];
"1000242" -> "1000499"  [label="DDG: sk"];
"1000498" -> "1000115"  [label="AST: "];
"1000498" -> "1000501"  [label="CFG: "];
"1000501" -> "1000498"  [label="AST: "];
"1000503" -> "1000498"  [label="CFG: "];
"1000498" -> "1000504"  [label="DDG: NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENDROPS)"];
"1000498" -> "1000504"  [label="DDG: sock_net(sk)"];
"1000498" -> "1000504"  [label="DDG: LINUX_MIB_LISTENDROPS"];
}
