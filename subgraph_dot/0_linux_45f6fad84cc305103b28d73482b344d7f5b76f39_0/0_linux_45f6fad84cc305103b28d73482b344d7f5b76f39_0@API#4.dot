digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_0@API" {
"1000440" [label="(Call,inet_csk_prepare_forced_close(newsk))"];
"1000435" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000254" [label="(Call,dccp_create_openreq_child(sk, req, skb))"];
"1000232" [label="(Call,sk_acceptq_is_full(sk))"];
"1000125" [label="(Call,inet6_sk(sk))"];
"1000109" [label="(MethodParameterIn,const struct sock *sk)"];
"1000242" [label="(Call,inet6_csk_route_req(sk, &fl6, req, IPPROTO_DCCP))"];
"1000119" [label="(Call,inet_rsk(req))"];
"1000111" [label="(MethodParameterIn,struct request_sock *req)"];
"1000110" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000415" [label="(Call,dccp_sync_mss(newsk, dst_mtu(dst)))"];
"1000397" [label="(Call,inet_csk(newsk))"];
"1000387" [label="(Call,ipv6_dup_options(newsk, opt))"];
"1000301" [label="(Call,inet6_sk(newsk))"];
"1000289" [label="(Call,inet_sk(newsk))"];
"1000284" [label="(Call,(struct dccp6_sock *)newsk)"];
"1000263" [label="(Call,__ip6_dst_store(newsk, dst, NULL, NULL))"];
"1000259" [label="(Call,newsk == NULL)"];
"1000252" [label="(Call,newsk = dccp_create_openreq_child(sk, req, skb))"];
"1000236" [label="(Call,!dst)"];
"1000112" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000249" [label="(Call,!dst)"];
"1000240" [label="(Call,dst = inet6_csk_route_req(sk, &fl6, req, IPPROTO_DCCP))"];
"1000376" [label="(Call,opt = rcu_dereference(np->opt))"];
"1000378" [label="(Call,rcu_dereference(np->opt))"];
"1000405" [label="(Call,inet_csk(newsk))"];
"1000417" [label="(Call,dst_mtu(dst))"];
"1000442" [label="(Call,dccp_done(newsk))"];
"1000241" [label="(Identifier,dst)"];
"1000438" [label="(Literal,0)"];
"1000385" [label="(Call,opt = ipv6_dup_options(newsk, opt))"];
"1000388" [label="(Identifier,newsk)"];
"1000491" [label="(Call,sock_net(sk))"];
"1000443" [label="(Identifier,newsk)"];
"1000252" [label="(Call,newsk = dccp_create_openreq_child(sk, req, skb))"];
"1000416" [label="(Identifier,newsk)"];
"1000264" [label="(Identifier,newsk)"];
"1000406" [label="(Identifier,newsk)"];
"1000399" [label="(FieldIdentifier,icsk_ext_hdr_len)"];
"1000257" [label="(Identifier,skb)"];
"1000357" [label="(Call,newnp->opt\t  = NULL)"];
"1000417" [label="(Call,dst_mtu(dst))"];
"1000250" [label="(Identifier,dst)"];
"1000442" [label="(Call,dccp_done(newsk))"];
"1000302" [label="(Identifier,newsk)"];
"1000213" [label="(Call,inet6_iif(skb))"];
"1000233" [label="(Identifier,sk)"];
"1000301" [label="(Call,inet6_sk(newsk))"];
"1000405" [label="(Call,inet_csk(newsk))"];
"1000473" [label="(Call,ireq->pktopts = NULL)"];
"1000260" [label="(Identifier,newsk)"];
"1000109" [label="(MethodParameterIn,const struct sock *sk)"];
"1000434" [label="(Call,__inet_inherit_port(sk, newsk) < 0)"];
"1000246" [label="(Identifier,req)"];
"1000404" [label="(Call,inet_csk(newsk)->icsk_ext_hdr_len)"];
"1000270" [label="(Identifier,newsk)"];
"1000258" [label="(ControlStructure,if (newsk == NULL))"];
"1000299" [label="(Call,newnp = inet6_sk(newsk))"];
"1000336" [label="(Call,newinet->inet_opt = NULL)"];
"1000265" [label="(Identifier,dst)"];
"1000366" [label="(Call,inet6_iif(skb))"];
"1000123" [label="(Call,*np = inet6_sk(sk))"];
"1000286" [label="(Identifier,newsk)"];
"1000253" [label="(Identifier,newsk)"];
"1000115" [label="(Block,)"];
"1000119" [label="(Call,inet_rsk(req))"];
"1000439" [label="(Block,)"];
"1000120" [label="(Identifier,req)"];
"1000261" [label="(Identifier,NULL)"];
"1000418" [label="(Identifier,dst)"];
"1000415" [label="(Call,dccp_sync_mss(newsk, dst_mtu(dst)))"];
"1000259" [label="(Call,newsk == NULL)"];
"1000117" [label="(Call,*ireq = inet_rsk(req))"];
"1000376" [label="(Call,opt = rcu_dereference(np->opt))"];
"1000387" [label="(Call,ipv6_dup_options(newsk, opt))"];
"1000235" [label="(ControlStructure,if (!dst))"];
"1000284" [label="(Call,(struct dccp6_sock *)newsk)"];
"1000242" [label="(Call,inet6_csk_route_req(sk, &fl6, req, IPPROTO_DCCP))"];
"1000352" [label="(Call,newnp->pktoptions = NULL)"];
"1000282" [label="(Call,newdp6 = (struct dccp6_sock *)newsk)"];
"1000437" [label="(Identifier,newsk)"];
"1000287" [label="(Call,newinet = inet_sk(newsk))"];
"1000232" [label="(Call,sk_acceptq_is_full(sk))"];
"1000396" [label="(Call,inet_csk(newsk)->icsk_ext_hdr_len)"];
"1000448" [label="(Call,inet_ehash_nolisten(newsk, req_to_sk(req_unhash)))"];
"1000444" [label="(ControlStructure,goto out;)"];
"1000379" [label="(Call,np->opt)"];
"1000263" [label="(Call,__ip6_dst_store(newsk, dst, NULL, NULL))"];
"1000267" [label="(Identifier,NULL)"];
"1000440" [label="(Call,inet_csk_prepare_forced_close(newsk))"];
"1000254" [label="(Call,dccp_create_openreq_child(sk, req, skb))"];
"1000499" [label="(Call,sock_net(sk))"];
"1000141" [label="(Call,dccp_v4_request_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t\t  req_unhash, own_req))"];
"1000435" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000383" [label="(Identifier,opt)"];
"1000377" [label="(Identifier,opt)"];
"1000110" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000441" [label="(Identifier,newsk)"];
"1000240" [label="(Call,dst = inet6_csk_route_req(sk, &fl6, req, IPPROTO_DCCP))"];
"1000266" [label="(Identifier,NULL)"];
"1000234" [label="(ControlStructure,goto out_overflow;)"];
"1000126" [label="(Identifier,sk)"];
"1000248" [label="(ControlStructure,if (!dst))"];
"1000244" [label="(Call,&fl6)"];
"1000407" [label="(FieldIdentifier,icsk_ext_hdr_len)"];
"1000290" [label="(Identifier,newsk)"];
"1000112" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000502" [label="(Return,return NULL;)"];
"1000238" [label="(Block,)"];
"1000495" [label="(Call,dst_release(dst))"];
"1000262" [label="(ControlStructure,goto out_nonewsk;)"];
"1000255" [label="(Identifier,sk)"];
"1000289" [label="(Call,inet_sk(newsk))"];
"1000378" [label="(Call,rcu_dereference(np->opt))"];
"1000220" [label="(Call,ipv6_hdr(skb))"];
"1000436" [label="(Identifier,sk)"];
"1000389" [label="(Identifier,opt)"];
"1000125" [label="(Call,inet6_sk(sk))"];
"1000247" [label="(Identifier,IPPROTO_DCCP)"];
"1000251" [label="(ControlStructure,goto out;)"];
"1000256" [label="(Identifier,req)"];
"1000397" [label="(Call,inet_csk(newsk))"];
"1000236" [label="(Call,!dst)"];
"1000249" [label="(Call,!dst)"];
"1000111" [label="(MethodParameterIn,struct request_sock *req)"];
"1000231" [label="(ControlStructure,if (sk_acceptq_is_full(sk)))"];
"1000373" [label="(Call,ipv6_hdr(skb))"];
"1000237" [label="(Identifier,dst)"];
"1000243" [label="(Identifier,sk)"];
"1000504" [label="(MethodReturn,static struct sock *)"];
"1000421" [label="(Identifier,newinet)"];
"1000398" [label="(Identifier,newsk)"];
"1000440" -> "1000439"  [label="AST: "];
"1000440" -> "1000441"  [label="CFG: "];
"1000441" -> "1000440"  [label="AST: "];
"1000443" -> "1000440"  [label="CFG: "];
"1000440" -> "1000504"  [label="DDG: inet_csk_prepare_forced_close(newsk)"];
"1000435" -> "1000440"  [label="DDG: newsk"];
"1000440" -> "1000442"  [label="DDG: newsk"];
"1000435" -> "1000434"  [label="AST: "];
"1000435" -> "1000437"  [label="CFG: "];
"1000436" -> "1000435"  [label="AST: "];
"1000437" -> "1000435"  [label="AST: "];
"1000438" -> "1000435"  [label="CFG: "];
"1000435" -> "1000504"  [label="DDG: sk"];
"1000435" -> "1000434"  [label="DDG: sk"];
"1000435" -> "1000434"  [label="DDG: newsk"];
"1000254" -> "1000435"  [label="DDG: sk"];
"1000109" -> "1000435"  [label="DDG: sk"];
"1000415" -> "1000435"  [label="DDG: newsk"];
"1000435" -> "1000448"  [label="DDG: newsk"];
"1000435" -> "1000499"  [label="DDG: sk"];
"1000254" -> "1000252"  [label="AST: "];
"1000254" -> "1000257"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000256" -> "1000254"  [label="AST: "];
"1000257" -> "1000254"  [label="AST: "];
"1000252" -> "1000254"  [label="CFG: "];
"1000254" -> "1000504"  [label="DDG: skb"];
"1000254" -> "1000504"  [label="DDG: req"];
"1000254" -> "1000252"  [label="DDG: sk"];
"1000254" -> "1000252"  [label="DDG: req"];
"1000254" -> "1000252"  [label="DDG: skb"];
"1000232" -> "1000254"  [label="DDG: sk"];
"1000242" -> "1000254"  [label="DDG: sk"];
"1000242" -> "1000254"  [label="DDG: req"];
"1000109" -> "1000254"  [label="DDG: sk"];
"1000119" -> "1000254"  [label="DDG: req"];
"1000111" -> "1000254"  [label="DDG: req"];
"1000110" -> "1000254"  [label="DDG: skb"];
"1000254" -> "1000366"  [label="DDG: skb"];
"1000254" -> "1000499"  [label="DDG: sk"];
"1000232" -> "1000231"  [label="AST: "];
"1000232" -> "1000233"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000234" -> "1000232"  [label="CFG: "];
"1000237" -> "1000232"  [label="CFG: "];
"1000232" -> "1000504"  [label="DDG: sk_acceptq_is_full(sk)"];
"1000125" -> "1000232"  [label="DDG: sk"];
"1000109" -> "1000232"  [label="DDG: sk"];
"1000232" -> "1000242"  [label="DDG: sk"];
"1000232" -> "1000491"  [label="DDG: sk"];
"1000125" -> "1000123"  [label="AST: "];
"1000125" -> "1000126"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000125" -> "1000123"  [label="DDG: sk"];
"1000109" -> "1000125"  [label="DDG: sk"];
"1000125" -> "1000141"  [label="DDG: sk"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000504"  [label="DDG: sk"];
"1000109" -> "1000141"  [label="DDG: sk"];
"1000109" -> "1000242"  [label="DDG: sk"];
"1000109" -> "1000491"  [label="DDG: sk"];
"1000109" -> "1000499"  [label="DDG: sk"];
"1000242" -> "1000240"  [label="AST: "];
"1000242" -> "1000247"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000244" -> "1000242"  [label="AST: "];
"1000246" -> "1000242"  [label="AST: "];
"1000247" -> "1000242"  [label="AST: "];
"1000240" -> "1000242"  [label="CFG: "];
"1000242" -> "1000504"  [label="DDG: &fl6"];
"1000242" -> "1000504"  [label="DDG: req"];
"1000242" -> "1000504"  [label="DDG: IPPROTO_DCCP"];
"1000242" -> "1000240"  [label="DDG: sk"];
"1000242" -> "1000240"  [label="DDG: &fl6"];
"1000242" -> "1000240"  [label="DDG: req"];
"1000242" -> "1000240"  [label="DDG: IPPROTO_DCCP"];
"1000119" -> "1000242"  [label="DDG: req"];
"1000111" -> "1000242"  [label="DDG: req"];
"1000242" -> "1000499"  [label="DDG: sk"];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000119" -> "1000504"  [label="DDG: req"];
"1000119" -> "1000117"  [label="DDG: req"];
"1000111" -> "1000119"  [label="DDG: req"];
"1000119" -> "1000141"  [label="DDG: req"];
"1000111" -> "1000108"  [label="AST: "];
"1000111" -> "1000504"  [label="DDG: req"];
"1000111" -> "1000141"  [label="DDG: req"];
"1000110" -> "1000108"  [label="AST: "];
"1000110" -> "1000504"  [label="DDG: skb"];
"1000110" -> "1000141"  [label="DDG: skb"];
"1000110" -> "1000213"  [label="DDG: skb"];
"1000110" -> "1000220"  [label="DDG: skb"];
"1000110" -> "1000366"  [label="DDG: skb"];
"1000110" -> "1000373"  [label="DDG: skb"];
"1000415" -> "1000115"  [label="AST: "];
"1000415" -> "1000417"  [label="CFG: "];
"1000416" -> "1000415"  [label="AST: "];
"1000417" -> "1000415"  [label="AST: "];
"1000421" -> "1000415"  [label="CFG: "];
"1000415" -> "1000504"  [label="DDG: dccp_sync_mss(newsk, dst_mtu(dst))"];
"1000415" -> "1000504"  [label="DDG: dst_mtu(dst)"];
"1000397" -> "1000415"  [label="DDG: newsk"];
"1000405" -> "1000415"  [label="DDG: newsk"];
"1000417" -> "1000415"  [label="DDG: dst"];
"1000397" -> "1000396"  [label="AST: "];
"1000397" -> "1000398"  [label="CFG: "];
"1000398" -> "1000397"  [label="AST: "];
"1000399" -> "1000397"  [label="CFG: "];
"1000387" -> "1000397"  [label="DDG: newsk"];
"1000301" -> "1000397"  [label="DDG: newsk"];
"1000397" -> "1000405"  [label="DDG: newsk"];
"1000387" -> "1000385"  [label="AST: "];
"1000387" -> "1000389"  [label="CFG: "];
"1000388" -> "1000387"  [label="AST: "];
"1000389" -> "1000387"  [label="AST: "];
"1000385" -> "1000387"  [label="CFG: "];
"1000387" -> "1000385"  [label="DDG: newsk"];
"1000387" -> "1000385"  [label="DDG: opt"];
"1000301" -> "1000387"  [label="DDG: newsk"];
"1000376" -> "1000387"  [label="DDG: opt"];
"1000301" -> "1000299"  [label="AST: "];
"1000301" -> "1000302"  [label="CFG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000299" -> "1000301"  [label="CFG: "];
"1000301" -> "1000299"  [label="DDG: newsk"];
"1000289" -> "1000301"  [label="DDG: newsk"];
"1000289" -> "1000287"  [label="AST: "];
"1000289" -> "1000290"  [label="CFG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000287" -> "1000289"  [label="CFG: "];
"1000289" -> "1000287"  [label="DDG: newsk"];
"1000284" -> "1000289"  [label="DDG: newsk"];
"1000284" -> "1000282"  [label="AST: "];
"1000284" -> "1000286"  [label="CFG: "];
"1000285" -> "1000284"  [label="AST: "];
"1000286" -> "1000284"  [label="AST: "];
"1000282" -> "1000284"  [label="CFG: "];
"1000284" -> "1000282"  [label="DDG: newsk"];
"1000263" -> "1000284"  [label="DDG: newsk"];
"1000263" -> "1000115"  [label="AST: "];
"1000263" -> "1000267"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000263"  [label="AST: "];
"1000266" -> "1000263"  [label="AST: "];
"1000267" -> "1000263"  [label="AST: "];
"1000270" -> "1000263"  [label="CFG: "];
"1000263" -> "1000504"  [label="DDG: __ip6_dst_store(newsk, dst, NULL, NULL)"];
"1000259" -> "1000263"  [label="DDG: newsk"];
"1000259" -> "1000263"  [label="DDG: NULL"];
"1000236" -> "1000263"  [label="DDG: dst"];
"1000249" -> "1000263"  [label="DDG: dst"];
"1000112" -> "1000263"  [label="DDG: dst"];
"1000263" -> "1000336"  [label="DDG: NULL"];
"1000263" -> "1000352"  [label="DDG: NULL"];
"1000263" -> "1000357"  [label="DDG: NULL"];
"1000263" -> "1000417"  [label="DDG: dst"];
"1000263" -> "1000473"  [label="DDG: NULL"];
"1000263" -> "1000502"  [label="DDG: NULL"];
"1000259" -> "1000258"  [label="AST: "];
"1000259" -> "1000261"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000259"  [label="AST: "];
"1000262" -> "1000259"  [label="CFG: "];
"1000264" -> "1000259"  [label="CFG: "];
"1000259" -> "1000504"  [label="DDG: newsk == NULL"];
"1000259" -> "1000504"  [label="DDG: newsk"];
"1000259" -> "1000504"  [label="DDG: NULL"];
"1000252" -> "1000259"  [label="DDG: newsk"];
"1000259" -> "1000502"  [label="DDG: NULL"];
"1000252" -> "1000115"  [label="AST: "];
"1000253" -> "1000252"  [label="AST: "];
"1000260" -> "1000252"  [label="CFG: "];
"1000252" -> "1000504"  [label="DDG: dccp_create_openreq_child(sk, req, skb)"];
"1000236" -> "1000235"  [label="AST: "];
"1000236" -> "1000237"  [label="CFG: "];
"1000237" -> "1000236"  [label="AST: "];
"1000241" -> "1000236"  [label="CFG: "];
"1000253" -> "1000236"  [label="CFG: "];
"1000236" -> "1000504"  [label="DDG: !dst"];
"1000112" -> "1000236"  [label="DDG: dst"];
"1000236" -> "1000495"  [label="DDG: dst"];
"1000112" -> "1000108"  [label="AST: "];
"1000112" -> "1000504"  [label="DDG: dst"];
"1000112" -> "1000141"  [label="DDG: dst"];
"1000112" -> "1000240"  [label="DDG: dst"];
"1000112" -> "1000249"  [label="DDG: dst"];
"1000112" -> "1000417"  [label="DDG: dst"];
"1000112" -> "1000495"  [label="DDG: dst"];
"1000249" -> "1000248"  [label="AST: "];
"1000249" -> "1000250"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000251" -> "1000249"  [label="CFG: "];
"1000253" -> "1000249"  [label="CFG: "];
"1000249" -> "1000504"  [label="DDG: dst"];
"1000249" -> "1000504"  [label="DDG: !dst"];
"1000240" -> "1000249"  [label="DDG: dst"];
"1000249" -> "1000495"  [label="DDG: dst"];
"1000240" -> "1000238"  [label="AST: "];
"1000241" -> "1000240"  [label="AST: "];
"1000250" -> "1000240"  [label="CFG: "];
"1000240" -> "1000504"  [label="DDG: inet6_csk_route_req(sk, &fl6, req, IPPROTO_DCCP)"];
"1000376" -> "1000115"  [label="AST: "];
"1000376" -> "1000378"  [label="CFG: "];
"1000377" -> "1000376"  [label="AST: "];
"1000378" -> "1000376"  [label="AST: "];
"1000383" -> "1000376"  [label="CFG: "];
"1000376" -> "1000504"  [label="DDG: opt"];
"1000376" -> "1000504"  [label="DDG: rcu_dereference(np->opt)"];
"1000378" -> "1000376"  [label="DDG: np->opt"];
"1000378" -> "1000379"  [label="CFG: "];
"1000379" -> "1000378"  [label="AST: "];
"1000378" -> "1000504"  [label="DDG: np->opt"];
"1000405" -> "1000404"  [label="AST: "];
"1000405" -> "1000406"  [label="CFG: "];
"1000406" -> "1000405"  [label="AST: "];
"1000407" -> "1000405"  [label="CFG: "];
"1000417" -> "1000418"  [label="CFG: "];
"1000418" -> "1000417"  [label="AST: "];
"1000417" -> "1000504"  [label="DDG: dst"];
"1000442" -> "1000439"  [label="AST: "];
"1000442" -> "1000443"  [label="CFG: "];
"1000443" -> "1000442"  [label="AST: "];
"1000444" -> "1000442"  [label="CFG: "];
"1000442" -> "1000504"  [label="DDG: dccp_done(newsk)"];
"1000442" -> "1000504"  [label="DDG: newsk"];
}
