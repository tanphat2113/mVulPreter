digraph "0_FreeRDP_602f4a2e14b41703b5f431de3154cd46a5750a2d@API" {
"1000224" [label="(Call,segmentCount * sizeof(UINT32))"];
"1000214" [label="(Call,Stream_Read_UINT16(stream, segmentCount))"];
"1000210" [label="(Call,Stream_GetRemainingLength(stream))"];
"1000138" [label="(Call,Stream_Read_UINT8(stream, descriptor))"];
"1000134" [label="(Call,Stream_GetRemainingLength(stream))"];
"1000127" [label="(Call,!stream)"];
"1000119" [label="(Call,* stream = Stream_New((BYTE*)pSrcData, SrcSize))"];
"1000121" [label="(Call,Stream_New((BYTE*)pSrcData, SrcSize))"];
"1000122" [label="(Call,(BYTE*)pSrcData)"];
"1000106" [label="(MethodParameterIn,const BYTE* pSrcData)"];
"1000107" [label="(MethodParameterIn,UINT32 SrcSize)"];
"1000221" [label="(Call,Stream_GetRemainingLength(stream) < segmentCount * sizeof(UINT32))"];
"1000251" [label="(Call,segmentNumber < segmentCount)"];
"1000254" [label="(Call,segmentNumber++)"];
"1000128" [label="(Identifier,stream)"];
"1000135" [label="(Identifier,stream)"];
"1000142" [label="(Call,descriptor == ZGFX_SEGMENTED_SINGLE)"];
"1000220" [label="(ControlStructure,if (Stream_GetRemainingLength(stream) < segmentCount * sizeof(UINT32)))"];
"1000260" [label="(Identifier,stream)"];
"1000228" [label="(ControlStructure,goto fail;)"];
"1000138" [label="(Call,Stream_Read_UINT8(stream, descriptor))"];
"1000254" [label="(Call,segmentNumber++)"];
"1000217" [label="(Call,Stream_Read_UINT32(stream, uncompressedSize))"];
"1000119" [label="(Call,* stream = Stream_New((BYTE*)pSrcData, SrcSize))"];
"1000253" [label="(Identifier,segmentCount)"];
"1000122" [label="(Call,(BYTE*)pSrcData)"];
"1000216" [label="(Identifier,segmentCount)"];
"1000211" [label="(Identifier,stream)"];
"1000224" [label="(Call,segmentCount * sizeof(UINT32))"];
"1000226" [label="(Call,sizeof(UINT32))"];
"1000322" [label="(MethodReturn,int)"];
"1000218" [label="(Identifier,stream)"];
"1000139" [label="(Identifier,stream)"];
"1000120" [label="(Identifier,stream)"];
"1000225" [label="(Identifier,segmentCount)"];
"1000140" [label="(Identifier,descriptor)"];
"1000317" [label="(Call,Stream_Free(stream, FALSE))"];
"1000209" [label="(Call,Stream_GetRemainingLength(stream) < 6)"];
"1000252" [label="(Identifier,segmentNumber)"];
"1000151" [label="(Call,Stream_GetRemainingLength(stream))"];
"1000125" [label="(Identifier,SrcSize)"];
"1000131" [label="(Literal,1)"];
"1000143" [label="(Identifier,descriptor)"];
"1000107" [label="(MethodParameterIn,UINT32 SrcSize)"];
"1000248" [label="(Call,segmentNumber = 0)"];
"1000127" [label="(Call,!stream)"];
"1000212" [label="(Literal,6)"];
"1000221" [label="(Call,Stream_GetRemainingLength(stream) < segmentCount * sizeof(UINT32))"];
"1000215" [label="(Identifier,stream)"];
"1000222" [label="(Call,Stream_GetRemainingLength(stream))"];
"1000198" [label="(Block,)"];
"1000255" [label="(Identifier,segmentNumber)"];
"1000121" [label="(Call,Stream_New((BYTE*)pSrcData, SrcSize))"];
"1000106" [label="(MethodParameterIn,const BYTE* pSrcData)"];
"1000230" [label="(Identifier,pConcatenated)"];
"1000247" [label="(ControlStructure,for (segmentNumber = 0; segmentNumber < segmentCount; segmentNumber++))"];
"1000133" [label="(Call,Stream_GetRemainingLength(stream) < 1)"];
"1000210" [label="(Call,Stream_GetRemainingLength(stream))"];
"1000136" [label="(Literal,1)"];
"1000126" [label="(ControlStructure,if (!stream))"];
"1000124" [label="(Identifier,pSrcData)"];
"1000214" [label="(Call,Stream_Read_UINT16(stream, segmentCount))"];
"1000134" [label="(Call,Stream_GetRemainingLength(stream))"];
"1000251" [label="(Call,segmentNumber < segmentCount)"];
"1000314" [label="(Identifier,status)"];
"1000111" [label="(Block,)"];
"1000224" -> "1000221"  [label="AST: "];
"1000224" -> "1000226"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000221" -> "1000224"  [label="CFG: "];
"1000224" -> "1000322"  [label="DDG: segmentCount"];
"1000224" -> "1000221"  [label="DDG: segmentCount"];
"1000214" -> "1000224"  [label="DDG: segmentCount"];
"1000224" -> "1000251"  [label="DDG: segmentCount"];
"1000214" -> "1000198"  [label="AST: "];
"1000214" -> "1000216"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000216" -> "1000214"  [label="AST: "];
"1000218" -> "1000214"  [label="CFG: "];
"1000214" -> "1000322"  [label="DDG: Stream_Read_UINT16(stream, segmentCount)"];
"1000210" -> "1000214"  [label="DDG: stream"];
"1000214" -> "1000217"  [label="DDG: stream"];
"1000210" -> "1000209"  [label="AST: "];
"1000210" -> "1000211"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="CFG: "];
"1000210" -> "1000209"  [label="DDG: stream"];
"1000138" -> "1000210"  [label="DDG: stream"];
"1000210" -> "1000317"  [label="DDG: stream"];
"1000138" -> "1000111"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000143" -> "1000138"  [label="CFG: "];
"1000138" -> "1000322"  [label="DDG: Stream_Read_UINT8(stream, descriptor)"];
"1000134" -> "1000138"  [label="DDG: stream"];
"1000138" -> "1000142"  [label="DDG: descriptor"];
"1000138" -> "1000151"  [label="DDG: stream"];
"1000138" -> "1000317"  [label="DDG: stream"];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000135"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="CFG: "];
"1000134" -> "1000133"  [label="DDG: stream"];
"1000127" -> "1000134"  [label="DDG: stream"];
"1000134" -> "1000317"  [label="DDG: stream"];
"1000127" -> "1000126"  [label="AST: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000131" -> "1000127"  [label="CFG: "];
"1000135" -> "1000127"  [label="CFG: "];
"1000127" -> "1000322"  [label="DDG: !stream"];
"1000127" -> "1000322"  [label="DDG: stream"];
"1000119" -> "1000127"  [label="DDG: stream"];
"1000119" -> "1000111"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000128" -> "1000119"  [label="CFG: "];
"1000119" -> "1000322"  [label="DDG: Stream_New((BYTE*)pSrcData, SrcSize)"];
"1000121" -> "1000119"  [label="DDG: (BYTE*)pSrcData"];
"1000121" -> "1000119"  [label="DDG: SrcSize"];
"1000121" -> "1000125"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000125" -> "1000121"  [label="AST: "];
"1000121" -> "1000322"  [label="DDG: SrcSize"];
"1000121" -> "1000322"  [label="DDG: (BYTE*)pSrcData"];
"1000122" -> "1000121"  [label="DDG: pSrcData"];
"1000107" -> "1000121"  [label="DDG: SrcSize"];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000125" -> "1000122"  [label="CFG: "];
"1000122" -> "1000322"  [label="DDG: pSrcData"];
"1000106" -> "1000122"  [label="DDG: pSrcData"];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000322"  [label="DDG: pSrcData"];
"1000107" -> "1000104"  [label="AST: "];
"1000107" -> "1000322"  [label="DDG: SrcSize"];
"1000221" -> "1000220"  [label="AST: "];
"1000222" -> "1000221"  [label="AST: "];
"1000228" -> "1000221"  [label="CFG: "];
"1000230" -> "1000221"  [label="CFG: "];
"1000221" -> "1000322"  [label="DDG: Stream_GetRemainingLength(stream) < segmentCount * sizeof(UINT32)"];
"1000221" -> "1000322"  [label="DDG: Stream_GetRemainingLength(stream)"];
"1000221" -> "1000322"  [label="DDG: segmentCount * sizeof(UINT32)"];
"1000222" -> "1000221"  [label="DDG: stream"];
"1000251" -> "1000247"  [label="AST: "];
"1000251" -> "1000253"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="AST: "];
"1000260" -> "1000251"  [label="CFG: "];
"1000314" -> "1000251"  [label="CFG: "];
"1000251" -> "1000322"  [label="DDG: segmentNumber < segmentCount"];
"1000251" -> "1000322"  [label="DDG: segmentCount"];
"1000251" -> "1000322"  [label="DDG: segmentNumber"];
"1000254" -> "1000251"  [label="DDG: segmentNumber"];
"1000248" -> "1000251"  [label="DDG: segmentNumber"];
"1000251" -> "1000254"  [label="DDG: segmentNumber"];
"1000254" -> "1000247"  [label="AST: "];
"1000254" -> "1000255"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000252" -> "1000254"  [label="CFG: "];
}
