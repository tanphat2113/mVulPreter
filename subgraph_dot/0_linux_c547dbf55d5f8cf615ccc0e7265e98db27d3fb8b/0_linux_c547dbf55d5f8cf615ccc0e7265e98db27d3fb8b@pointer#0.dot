digraph "0_linux_c547dbf55d5f8cf615ccc0e7265e98db27d3fb8b@pointer" {
"1000123" [label="(Call,skb = skb_peek_tail(&sk->sk_write_queue))"];
"1000125" [label="(Call,skb_peek_tail(&sk->sk_write_queue))"];
"1000122" [label="(Call,(skb = skb_peek_tail(&sk->sk_write_queue)) == NULL)"];
"1000149" [label="(Call,skb == NULL)"];
"1000154" [label="(Call,skb_reserve(skb, hh_len))"];
"1000157" [label="(Call,skb_put(skb,fragheaderlen + transhdrlen))"];
"1000162" [label="(Call,skb_reset_network_header(skb))"];
"1000184" [label="(Call,__skb_queue_tail(&sk->sk_write_queue, skb))"];
"1000203" [label="(Call,skb_shinfo(skb))"];
"1000216" [label="(Call,skb_shinfo(skb))"];
"1000226" [label="(Call,skb_shinfo(skb))"];
"1000234" [label="(Call,skb_append_datato_frags(sk, skb, getfrag, from,\n \t\t\t\t       (length - transhdrlen)))"];
"1000233" [label="(Return,return skb_append_datato_frags(sk, skb, getfrag, from,\n \t\t\t\t       (length - transhdrlen));)"];
"1000192" [label="(Call,skb_is_gso(skb))"];
"1000130" [label="(Identifier,NULL)"];
"1000123" [label="(Call,skb = skb_peek_tail(&sk->sk_write_queue))"];
"1000113" [label="(MethodParameterIn,int transhdrlen)"];
"1000203" [label="(Call,skb_shinfo(skb))"];
"1000242" [label="(MethodReturn,static inline int)"];
"1000192" [label="(Call,skb_is_gso(skb))"];
"1000131" [label="(Block,)"];
"1000185" [label="(Call,&sk->sk_write_queue)"];
"1000193" [label="(Identifier,skb)"];
"1000235" [label="(Identifier,sk)"];
"1000189" [label="(Identifier,skb)"];
"1000233" [label="(Return,return skb_append_datato_frags(sk, skb, getfrag, from,\n \t\t\t\t       (length - transhdrlen));)"];
"1000236" [label="(Identifier,skb)"];
"1000237" [label="(Identifier,getfrag)"];
"1000234" [label="(Call,skb_append_datato_frags(sk, skb, getfrag, from,\n \t\t\t\t       (length - transhdrlen)))"];
"1000150" [label="(Identifier,skb)"];
"1000122" [label="(Call,(skb = skb_peek_tail(&sk->sk_write_queue)) == NULL)"];
"1000155" [label="(Identifier,skb)"];
"1000163" [label="(Identifier,skb)"];
"1000204" [label="(Identifier,skb)"];
"1000162" [label="(Call,skb_reset_network_header(skb))"];
"1000124" [label="(Identifier,skb)"];
"1000218" [label="(FieldIdentifier,gso_type)"];
"1000226" [label="(Call,skb_shinfo(skb))"];
"1000166" [label="(Identifier,skb)"];
"1000126" [label="(Call,&sk->sk_write_queue)"];
"1000134" [label="(Call,sock_alloc_send_skb(sk,\n \t\t\thh_len + fragheaderlen + transhdrlen + 20,\n \t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000148" [label="(ControlStructure,if (skb == NULL))"];
"1000125" [label="(Call,skb_peek_tail(&sk->sk_write_queue))"];
"1000184" [label="(Call,__skb_queue_tail(&sk->sk_write_queue, skb))"];
"1000159" [label="(Call,fragheaderlen + transhdrlen)"];
"1000198" [label="(Identifier,skb)"];
"1000132" [label="(Call,skb = sock_alloc_send_skb(sk,\n \t\t\thh_len + fragheaderlen + transhdrlen + 20,\n \t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000111" [label="(MethodParameterIn,int hh_len)"];
"1000117" [label="(Block,)"];
"1000108" [label="(MethodParameterIn,int getfrag(void *from, char *to, int offset, int len,\n\t\t\tint odd, struct sk_buff *skb))"];
"1000195" [label="(ControlStructure,goto append;)"];
"1000227" [label="(Identifier,skb)"];
"1000157" [label="(Call,skb_put(skb,fragheaderlen + transhdrlen))"];
"1000225" [label="(Call,skb_shinfo(skb)->ip6_frag_id)"];
"1000109" [label="(MethodParameterIn,void *from)"];
"1000158" [label="(Identifier,skb)"];
"1000112" [label="(MethodParameterIn,int fragheaderlen)"];
"1000153" [label="(Identifier,err)"];
"1000238" [label="(Identifier,from)"];
"1000191" [label="(ControlStructure,if (skb_is_gso(skb)))"];
"1000156" [label="(Identifier,hh_len)"];
"1000149" [label="(Call,skb == NULL)"];
"1000215" [label="(Call,skb_shinfo(skb)->gso_type)"];
"1000151" [label="(Identifier,NULL)"];
"1000216" [label="(Call,skb_shinfo(skb))"];
"1000205" [label="(FieldIdentifier,gso_size)"];
"1000239" [label="(Call,length - transhdrlen)"];
"1000107" [label="(MethodParameterIn,struct sock *sk)"];
"1000202" [label="(Call,skb_shinfo(skb)->gso_size)"];
"1000133" [label="(Identifier,skb)"];
"1000154" [label="(Call,skb_reserve(skb, hh_len))"];
"1000121" [label="(ControlStructure,if ((skb = skb_peek_tail(&sk->sk_write_queue)) == NULL))"];
"1000217" [label="(Identifier,skb)"];
"1000228" [label="(FieldIdentifier,ip6_frag_id)"];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000130" -> "1000123"  [label="CFG: "];
"1000123" -> "1000242"  [label="DDG: skb_peek_tail(&sk->sk_write_queue)"];
"1000123" -> "1000122"  [label="DDG: skb"];
"1000125" -> "1000123"  [label="DDG: &sk->sk_write_queue"];
"1000123" -> "1000192"  [label="DDG: skb"];
"1000125" -> "1000126"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000125" -> "1000242"  [label="DDG: &sk->sk_write_queue"];
"1000125" -> "1000122"  [label="DDG: &sk->sk_write_queue"];
"1000125" -> "1000184"  [label="DDG: &sk->sk_write_queue"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000130"  [label="CFG: "];
"1000130" -> "1000122"  [label="AST: "];
"1000133" -> "1000122"  [label="CFG: "];
"1000193" -> "1000122"  [label="CFG: "];
"1000122" -> "1000242"  [label="DDG: NULL"];
"1000122" -> "1000242"  [label="DDG: (skb = skb_peek_tail(&sk->sk_write_queue)) == NULL"];
"1000122" -> "1000149"  [label="DDG: NULL"];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000153" -> "1000149"  [label="CFG: "];
"1000155" -> "1000149"  [label="CFG: "];
"1000149" -> "1000242"  [label="DDG: NULL"];
"1000149" -> "1000242"  [label="DDG: skb == NULL"];
"1000149" -> "1000242"  [label="DDG: skb"];
"1000132" -> "1000149"  [label="DDG: skb"];
"1000149" -> "1000154"  [label="DDG: skb"];
"1000154" -> "1000131"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000156" -> "1000154"  [label="AST: "];
"1000158" -> "1000154"  [label="CFG: "];
"1000154" -> "1000242"  [label="DDG: skb_reserve(skb, hh_len)"];
"1000154" -> "1000242"  [label="DDG: hh_len"];
"1000111" -> "1000154"  [label="DDG: hh_len"];
"1000154" -> "1000157"  [label="DDG: skb"];
"1000157" -> "1000131"  [label="AST: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000163" -> "1000157"  [label="CFG: "];
"1000157" -> "1000242"  [label="DDG: fragheaderlen + transhdrlen"];
"1000157" -> "1000242"  [label="DDG: skb_put(skb,fragheaderlen + transhdrlen)"];
"1000112" -> "1000157"  [label="DDG: fragheaderlen"];
"1000113" -> "1000157"  [label="DDG: transhdrlen"];
"1000157" -> "1000162"  [label="DDG: skb"];
"1000162" -> "1000131"  [label="AST: "];
"1000162" -> "1000163"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000166" -> "1000162"  [label="CFG: "];
"1000162" -> "1000242"  [label="DDG: skb_reset_network_header(skb)"];
"1000162" -> "1000184"  [label="DDG: skb"];
"1000184" -> "1000131"  [label="AST: "];
"1000184" -> "1000189"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000189" -> "1000184"  [label="AST: "];
"1000198" -> "1000184"  [label="CFG: "];
"1000184" -> "1000242"  [label="DDG: &sk->sk_write_queue"];
"1000184" -> "1000242"  [label="DDG: __skb_queue_tail(&sk->sk_write_queue, skb)"];
"1000184" -> "1000203"  [label="DDG: skb"];
"1000203" -> "1000202"  [label="AST: "];
"1000203" -> "1000204"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000203"  [label="CFG: "];
"1000192" -> "1000203"  [label="DDG: skb"];
"1000203" -> "1000216"  [label="DDG: skb"];
"1000216" -> "1000215"  [label="AST: "];
"1000216" -> "1000217"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000218" -> "1000216"  [label="CFG: "];
"1000216" -> "1000226"  [label="DDG: skb"];
"1000226" -> "1000225"  [label="AST: "];
"1000226" -> "1000227"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000228" -> "1000226"  [label="CFG: "];
"1000226" -> "1000234"  [label="DDG: skb"];
"1000234" -> "1000233"  [label="AST: "];
"1000234" -> "1000239"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000236" -> "1000234"  [label="AST: "];
"1000237" -> "1000234"  [label="AST: "];
"1000238" -> "1000234"  [label="AST: "];
"1000239" -> "1000234"  [label="AST: "];
"1000233" -> "1000234"  [label="CFG: "];
"1000234" -> "1000242"  [label="DDG: getfrag"];
"1000234" -> "1000242"  [label="DDG: skb"];
"1000234" -> "1000242"  [label="DDG: length - transhdrlen"];
"1000234" -> "1000242"  [label="DDG: sk"];
"1000234" -> "1000242"  [label="DDG: from"];
"1000234" -> "1000242"  [label="DDG: skb_append_datato_frags(sk, skb, getfrag, from,\n \t\t\t\t       (length - transhdrlen))"];
"1000234" -> "1000233"  [label="DDG: skb_append_datato_frags(sk, skb, getfrag, from,\n \t\t\t\t       (length - transhdrlen))"];
"1000134" -> "1000234"  [label="DDG: sk"];
"1000107" -> "1000234"  [label="DDG: sk"];
"1000192" -> "1000234"  [label="DDG: skb"];
"1000108" -> "1000234"  [label="DDG: getfrag"];
"1000109" -> "1000234"  [label="DDG: from"];
"1000239" -> "1000234"  [label="DDG: length"];
"1000239" -> "1000234"  [label="DDG: transhdrlen"];
"1000233" -> "1000117"  [label="AST: "];
"1000242" -> "1000233"  [label="CFG: "];
"1000233" -> "1000242"  [label="DDG: <RET>"];
"1000192" -> "1000191"  [label="AST: "];
"1000192" -> "1000193"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000195" -> "1000192"  [label="CFG: "];
"1000198" -> "1000192"  [label="CFG: "];
"1000192" -> "1000242"  [label="DDG: skb_is_gso(skb)"];
}
