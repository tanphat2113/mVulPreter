digraph "0_linux_d3bd7413e0ca40b60cf60d4003246d067cafdeda_0@pointer" {
"1000103" [label="(MethodParameterIn,struct bpf_verifier_env *env)"];
"1000118" [label="(Call,cur_aux(env))"];
"1000116" [label="(Call,*aux = cur_aux(env))"];
"1000170" [label="(Call,update_alu_sanitation_state(aux, alu_state, alu_limit))"];
"1000138" [label="(Call,can_skip_alu_sanitation(env, insn))"];
"1000193" [label="(Call,push_stack(env, env->insn_idx + 1, env->insn_idx, true))"];
"1000191" [label="(Call,ret = push_stack(env, env->insn_idx + 1, env->insn_idx, true))"];
"1000213" [label="(Call,!ret)"];
"1000104" [label="(MethodParameterIn,struct bpf_insn *insn)"];
"1000140" [label="(Identifier,insn)"];
"1000218" [label="(MethodReturn,static int)"];
"1000177" [label="(JumpTarget,do_sim:)"];
"1000154" [label="(Call,alu_state |= ptr_is_dst_reg ?\n\t\t     BPF_ALU_SANITIZE_SRC : BPF_ALU_SANITIZE_DST)"];
"1000116" [label="(Call,*aux = cur_aux(env))"];
"1000117" [label="(Identifier,aux)"];
"1000172" [label="(Identifier,alu_state)"];
"1000170" [label="(Call,update_alu_sanitation_state(aux, alu_state, alu_limit))"];
"1000203" [label="(Identifier,true)"];
"1000216" [label="(Identifier,EFAULT)"];
"1000139" [label="(Identifier,env)"];
"1000142" [label="(Literal,0)"];
"1000192" [label="(Identifier,ret)"];
"1000213" [label="(Call,!ret)"];
"1000138" [label="(Call,can_skip_alu_sanitation(env, insn))"];
"1000103" [label="(MethodParameterIn,struct bpf_verifier_env *env)"];
"1000171" [label="(Identifier,aux)"];
"1000145" [label="(Identifier,vstate)"];
"1000169" [label="(ControlStructure,if (update_alu_sanitation_state(aux, alu_state, alu_limit)))"];
"1000119" [label="(Identifier,env)"];
"1000217" [label="(Literal,0)"];
"1000212" [label="(Call,!ret ? -EFAULT : 0)"];
"1000122" [label="(Identifier,ptr_is_dst_reg)"];
"1000118" [label="(Call,cur_aux(env))"];
"1000176" [label="(Identifier,EACCES)"];
"1000173" [label="(Identifier,alu_limit)"];
"1000191" [label="(Call,ret = push_stack(env, env->insn_idx + 1, env->insn_idx, true))"];
"1000200" [label="(Call,env->insn_idx)"];
"1000214" [label="(Identifier,ret)"];
"1000195" [label="(Call,env->insn_idx + 1)"];
"1000206" [label="(Identifier,ptr_is_dst_reg)"];
"1000108" [label="(Block,)"];
"1000194" [label="(Identifier,env)"];
"1000137" [label="(ControlStructure,if (can_skip_alu_sanitation(env, insn)))"];
"1000193" [label="(Call,push_stack(env, env->insn_idx + 1, env->insn_idx, true))"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000218"  [label="DDG: env"];
"1000103" -> "1000118"  [label="DDG: env"];
"1000103" -> "1000138"  [label="DDG: env"];
"1000103" -> "1000193"  [label="DDG: env"];
"1000118" -> "1000116"  [label="AST: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000118" -> "1000116"  [label="DDG: env"];
"1000118" -> "1000138"  [label="DDG: env"];
"1000116" -> "1000108"  [label="AST: "];
"1000117" -> "1000116"  [label="AST: "];
"1000122" -> "1000116"  [label="CFG: "];
"1000116" -> "1000218"  [label="DDG: cur_aux(env)"];
"1000116" -> "1000218"  [label="DDG: aux"];
"1000116" -> "1000170"  [label="DDG: aux"];
"1000170" -> "1000169"  [label="AST: "];
"1000170" -> "1000173"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000173" -> "1000170"  [label="AST: "];
"1000176" -> "1000170"  [label="CFG: "];
"1000177" -> "1000170"  [label="CFG: "];
"1000170" -> "1000218"  [label="DDG: alu_state"];
"1000170" -> "1000218"  [label="DDG: alu_limit"];
"1000170" -> "1000218"  [label="DDG: aux"];
"1000170" -> "1000218"  [label="DDG: update_alu_sanitation_state(aux, alu_state, alu_limit)"];
"1000154" -> "1000170"  [label="DDG: alu_state"];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000142" -> "1000138"  [label="CFG: "];
"1000145" -> "1000138"  [label="CFG: "];
"1000138" -> "1000218"  [label="DDG: env"];
"1000138" -> "1000218"  [label="DDG: insn"];
"1000138" -> "1000218"  [label="DDG: can_skip_alu_sanitation(env, insn)"];
"1000104" -> "1000138"  [label="DDG: insn"];
"1000138" -> "1000193"  [label="DDG: env"];
"1000193" -> "1000191"  [label="AST: "];
"1000193" -> "1000203"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000195" -> "1000193"  [label="AST: "];
"1000200" -> "1000193"  [label="AST: "];
"1000203" -> "1000193"  [label="AST: "];
"1000191" -> "1000193"  [label="CFG: "];
"1000193" -> "1000218"  [label="DDG: env"];
"1000193" -> "1000218"  [label="DDG: env->insn_idx"];
"1000193" -> "1000218"  [label="DDG: env->insn_idx + 1"];
"1000193" -> "1000218"  [label="DDG: true"];
"1000193" -> "1000191"  [label="DDG: env"];
"1000193" -> "1000191"  [label="DDG: env->insn_idx + 1"];
"1000193" -> "1000191"  [label="DDG: env->insn_idx"];
"1000193" -> "1000191"  [label="DDG: true"];
"1000191" -> "1000108"  [label="AST: "];
"1000192" -> "1000191"  [label="AST: "];
"1000206" -> "1000191"  [label="CFG: "];
"1000191" -> "1000218"  [label="DDG: push_stack(env, env->insn_idx + 1, env->insn_idx, true)"];
"1000191" -> "1000213"  [label="DDG: ret"];
"1000213" -> "1000212"  [label="AST: "];
"1000213" -> "1000214"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000216" -> "1000213"  [label="CFG: "];
"1000217" -> "1000213"  [label="CFG: "];
"1000213" -> "1000218"  [label="DDG: ret"];
}
