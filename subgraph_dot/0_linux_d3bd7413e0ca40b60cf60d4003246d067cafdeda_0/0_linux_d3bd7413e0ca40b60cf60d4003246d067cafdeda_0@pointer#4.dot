digraph "0_linux_d3bd7413e0ca40b60cf60d4003246d067cafdeda_0@pointer" {
"1000129" [label="(Call,BPF_OP(insn->code))"];
"1000127" [label="(Call,opcode = BPF_OP(insn->code))"];
"1000161" [label="(Call,retrieve_ptr_limit(ptr_reg, &alu_limit, opcode, off_is_neg))"];
"1000218" [label="(MethodReturn,static int)"];
"1000129" [label="(Call,BPF_OP(insn->code))"];
"1000171" [label="(Identifier,aux)"];
"1000130" [label="(Call,insn->code)"];
"1000127" [label="(Call,opcode = BPF_OP(insn->code))"];
"1000107" [label="(MethodParameterIn,bool off_is_neg)"];
"1000163" [label="(Call,&alu_limit)"];
"1000108" [label="(Block,)"];
"1000160" [label="(ControlStructure,if (retrieve_ptr_limit(ptr_reg, &alu_limit, opcode, off_is_neg)))"];
"1000123" [label="(Call,ptr_reg == dst_reg)"];
"1000128" [label="(Identifier,opcode)"];
"1000168" [label="(Literal,0)"];
"1000105" [label="(MethodParameterIn,const struct bpf_reg_state *ptr_reg)"];
"1000161" [label="(Call,retrieve_ptr_limit(ptr_reg, &alu_limit, opcode, off_is_neg))"];
"1000165" [label="(Identifier,opcode)"];
"1000166" [label="(Identifier,off_is_neg)"];
"1000139" [label="(Identifier,env)"];
"1000162" [label="(Identifier,ptr_reg)"];
"1000129" -> "1000127"  [label="AST: "];
"1000129" -> "1000130"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000129" -> "1000218"  [label="DDG: insn->code"];
"1000129" -> "1000127"  [label="DDG: insn->code"];
"1000127" -> "1000108"  [label="AST: "];
"1000128" -> "1000127"  [label="AST: "];
"1000139" -> "1000127"  [label="CFG: "];
"1000127" -> "1000218"  [label="DDG: BPF_OP(insn->code)"];
"1000127" -> "1000218"  [label="DDG: opcode"];
"1000127" -> "1000161"  [label="DDG: opcode"];
"1000161" -> "1000160"  [label="AST: "];
"1000161" -> "1000166"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000165" -> "1000161"  [label="AST: "];
"1000166" -> "1000161"  [label="AST: "];
"1000168" -> "1000161"  [label="CFG: "];
"1000171" -> "1000161"  [label="CFG: "];
"1000161" -> "1000218"  [label="DDG: off_is_neg"];
"1000161" -> "1000218"  [label="DDG: &alu_limit"];
"1000161" -> "1000218"  [label="DDG: ptr_reg"];
"1000161" -> "1000218"  [label="DDG: retrieve_ptr_limit(ptr_reg, &alu_limit, opcode, off_is_neg)"];
"1000161" -> "1000218"  [label="DDG: opcode"];
"1000123" -> "1000161"  [label="DDG: ptr_reg"];
"1000105" -> "1000161"  [label="DDG: ptr_reg"];
"1000107" -> "1000161"  [label="DDG: off_is_neg"];
}
