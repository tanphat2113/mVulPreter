digraph "0_savannah_73be9f9ab67842cfbec36ee99e8d2301434c84ca_0@array" {
"1000475" [label="(Call,name_table->elements[n][len] = '\0')"];
"1000493" [label="(Call,(const char*)(name_table->elements[n]))"];
"1000491" [label="(Call,ft_strcmp( \".notdef\",\n                        (const char*)(name_table->elements[n]) ))"];
"1000490" [label="(Call,ft_strcmp( \".notdef\",\n                        (const char*)(name_table->elements[n]) ) == 0)"];
"1000485" [label="(Call,*cur == '.'                                              &&\n             ft_strcmp( \".notdef\",\n                        (const char*)(name_table->elements[n]) ) == 0)"];
"1000483" [label="(Literal,'\0')"];
"1000369" [label="(Block,)"];
"1000500" [label="(Literal,0)"];
"1000495" [label="(Call,name_table->elements[n])"];
"1000485" [label="(Call,*cur == '.'                                              &&\n             ft_strcmp( \".notdef\",\n                        (const char*)(name_table->elements[n]) ) == 0)"];
"1000491" [label="(Call,ft_strcmp( \".notdef\",\n                        (const char*)(name_table->elements[n]) ))"];
"1000576" [label="(MethodReturn,RET)"];
"1000484" [label="(ControlStructure,if ( *cur == '.'                                              &&\n             ft_strcmp( \".notdef\",\n                        (const char*)(name_table->elements[n]) ) == 0 ))"];
"1000488" [label="(Identifier,cur)"];
"1000492" [label="(Literal,\".notdef\")"];
"1000486" [label="(Call,*cur == '.')"];
"1000476" [label="(Call,name_table->elements[n][len])"];
"1000490" [label="(Call,ft_strcmp( \".notdef\",\n                        (const char*)(name_table->elements[n]) ) == 0)"];
"1000493" [label="(Call,(const char*)(name_table->elements[n]))"];
"1000503" [label="(Identifier,notdef_index)"];
"1000509" [label="(Identifier,parser)"];
"1000475" [label="(Call,name_table->elements[n][len] = '\0')"];
"1000475" -> "1000369"  [label="AST: "];
"1000475" -> "1000483"  [label="CFG: "];
"1000476" -> "1000475"  [label="AST: "];
"1000483" -> "1000475"  [label="AST: "];
"1000488" -> "1000475"  [label="CFG: "];
"1000475" -> "1000576"  [label="DDG: "];
"1000475" -> "1000493"  [label="DDG: "];
"1000493" -> "1000491"  [label="AST: "];
"1000493" -> "1000495"  [label="CFG: "];
"1000494" -> "1000493"  [label="AST: "];
"1000495" -> "1000493"  [label="AST: "];
"1000491" -> "1000493"  [label="CFG: "];
"1000493" -> "1000576"  [label="DDG: "];
"1000493" -> "1000491"  [label="DDG: "];
"1000491" -> "1000490"  [label="AST: "];
"1000492" -> "1000491"  [label="AST: "];
"1000500" -> "1000491"  [label="CFG: "];
"1000491" -> "1000576"  [label="DDG: "];
"1000491" -> "1000490"  [label="DDG: "];
"1000491" -> "1000490"  [label="DDG: "];
"1000490" -> "1000485"  [label="AST: "];
"1000490" -> "1000500"  [label="CFG: "];
"1000500" -> "1000490"  [label="AST: "];
"1000485" -> "1000490"  [label="CFG: "];
"1000490" -> "1000576"  [label="DDG: "];
"1000490" -> "1000485"  [label="DDG: "];
"1000490" -> "1000485"  [label="DDG: "];
"1000485" -> "1000484"  [label="AST: "];
"1000485" -> "1000486"  [label="CFG: "];
"1000486" -> "1000485"  [label="AST: "];
"1000503" -> "1000485"  [label="CFG: "];
"1000509" -> "1000485"  [label="CFG: "];
"1000485" -> "1000576"  [label="DDG: "];
"1000485" -> "1000576"  [label="DDG: "];
"1000485" -> "1000576"  [label="DDG: "];
"1000486" -> "1000485"  [label="DDG: "];
"1000486" -> "1000485"  [label="DDG: "];
}
