digraph "0_linux_f6d8bd051c391c1c0458a30b2a7abcd939329259_17@pointer" {
"1000107" [label="(Call,*opt = ip_options_get_alloc(optlen))"];
"1000109" [label="(Call,ip_options_get_alloc(optlen))"];
"1000104" [label="(MethodParameterIn,int optlen)"];
"1000112" [label="(Call,!opt)"];
"1000128" [label="(Call,ip_options_get_finish(net, optp, opt, optlen))"];
"1000127" [label="(Return,return ip_options_get_finish(net, optp, opt, optlen);)"];
"1000110" [label="(Identifier,optlen)"];
"1000111" [label="(ControlStructure,if (!opt))"];
"1000112" [label="(Call,!opt)"];
"1000108" [label="(Identifier,opt)"];
"1000116" [label="(Identifier,ENOMEM)"];
"1000127" [label="(Return,return ip_options_get_finish(net, optp, opt, optlen);)"];
"1000131" [label="(Identifier,opt)"];
"1000102" [label="(MethodParameterIn,struct ip_options_rcu **optp)"];
"1000128" [label="(Call,ip_options_get_finish(net, optp, opt, optlen))"];
"1000107" [label="(Call,*opt = ip_options_get_alloc(optlen))"];
"1000130" [label="(Identifier,optp)"];
"1000129" [label="(Identifier,net)"];
"1000119" [label="(Call,memcpy(opt->opt.__data, data, optlen))"];
"1000101" [label="(MethodParameterIn,struct net *net)"];
"1000105" [label="(Block,)"];
"1000133" [label="(MethodReturn,int)"];
"1000104" [label="(MethodParameterIn,int optlen)"];
"1000118" [label="(Identifier,optlen)"];
"1000113" [label="(Identifier,opt)"];
"1000132" [label="(Identifier,optlen)"];
"1000109" [label="(Call,ip_options_get_alloc(optlen))"];
"1000107" -> "1000105"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000113" -> "1000107"  [label="CFG: "];
"1000107" -> "1000133"  [label="DDG: ip_options_get_alloc(optlen)"];
"1000109" -> "1000107"  [label="DDG: optlen"];
"1000107" -> "1000112"  [label="DDG: opt"];
"1000109" -> "1000110"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000109" -> "1000133"  [label="DDG: optlen"];
"1000104" -> "1000109"  [label="DDG: optlen"];
"1000109" -> "1000119"  [label="DDG: optlen"];
"1000109" -> "1000128"  [label="DDG: optlen"];
"1000104" -> "1000100"  [label="AST: "];
"1000104" -> "1000133"  [label="DDG: optlen"];
"1000104" -> "1000119"  [label="DDG: optlen"];
"1000104" -> "1000128"  [label="DDG: optlen"];
"1000112" -> "1000111"  [label="AST: "];
"1000112" -> "1000113"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000116" -> "1000112"  [label="CFG: "];
"1000118" -> "1000112"  [label="CFG: "];
"1000112" -> "1000133"  [label="DDG: !opt"];
"1000112" -> "1000133"  [label="DDG: opt"];
"1000112" -> "1000128"  [label="DDG: opt"];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000132"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000128"  [label="AST: "];
"1000131" -> "1000128"  [label="AST: "];
"1000132" -> "1000128"  [label="AST: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000133"  [label="DDG: optp"];
"1000128" -> "1000133"  [label="DDG: optlen"];
"1000128" -> "1000133"  [label="DDG: ip_options_get_finish(net, optp, opt, optlen)"];
"1000128" -> "1000133"  [label="DDG: opt"];
"1000128" -> "1000133"  [label="DDG: net"];
"1000128" -> "1000127"  [label="DDG: ip_options_get_finish(net, optp, opt, optlen)"];
"1000101" -> "1000128"  [label="DDG: net"];
"1000102" -> "1000128"  [label="DDG: optp"];
"1000119" -> "1000128"  [label="DDG: optlen"];
"1000127" -> "1000105"  [label="AST: "];
"1000133" -> "1000127"  [label="CFG: "];
"1000127" -> "1000133"  [label="DDG: <RET>"];
}
