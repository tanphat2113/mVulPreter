digraph "0_enlightment_37a96801663b7b4cd3fbe56cc0eb8b6a17e766a8@array" {
"1000306" [label="(Call,j = intoffset[i])"];
"1000117" [label="(Call,intoffset[] = { 0, 4, 2, 1 })"];
"1000311" [label="(Call,j < h)"];
"1000314" [label="(Call,j += intjump[i])"];
"1000426" [label="(Call,im->h = h)"];
"1000581" [label="(Call,w * h)"];
"1000578" [label="(Call,sizeof(DATA32) * w * h)"];
"1000577" [label="(Call,malloc(sizeof(DATA32) * w * h))"];
"1000575" [label="(Call,(DATA32 *) malloc(sizeof(DATA32) * w * h))"];
"1000571" [label="(Call,im->data = (DATA32 *) malloc(sizeof(DATA32) * w * h))"];
"1000585" [label="(Call,!im->data)"];
"1000653" [label="(Call,j < w)"];
"1000656" [label="(Call,j++)"];
"1000743" [label="(Call,progress(im, 100, 0, last_y, w, h))"];
"1000758" [label="(Call,i < h)"];
"1000761" [label="(Call,i++)"];
"1000761" [label="(Call,i++)"];
"1000338" [label="(Call,DGifGetLine(gif, rows[i], w))"];
"1000748" [label="(Identifier,w)"];
"1000649" [label="(ControlStructure,for (j = 0; j < w; j++))"];
"1000694" [label="(Call,last_y = i)"];
"1000759" [label="(Identifier,i)"];
"1000653" [label="(Call,j < w)"];
"1000758" [label="(Call,i < h)"];
"1000575" [label="(Call,(DATA32 *) malloc(sizeof(DATA32) * w * h))"];
"1000657" [label="(Identifier,j)"];
"1000321" [label="(Identifier,gif)"];
"1000585" [label="(Call,!im->data)"];
"1000589" [label="(ControlStructure,goto quit;)"];
"1000584" [label="(ControlStructure,if (!im->data))"];
"1000313" [label="(Identifier,h)"];
"1000744" [label="(Identifier,im)"];
"1000745" [label="(Literal,100)"];
"1000118" [label="(Identifier,intoffset)"];
"1000581" [label="(Call,w * h)"];
"1000768" [label="(Identifier,rows)"];
"1000314" [label="(Call,j += intjump[i])"];
"1000583" [label="(Identifier,h)"];
"1000115" [label="(Block,)"];
"1000760" [label="(Identifier,h)"];
"1000578" [label="(Call,sizeof(DATA32) * w * h)"];
"1000746" [label="(Literal,0)"];
"1000120" [label="(Call,intjump[] = { 8, 8, 4, 2 })"];
"1000140" [label="(Call,h = 0)"];
"1000699" [label="(Identifier,r)"];
"1000754" [label="(ControlStructure,for (i = 0; i < h; i++))"];
"1000755" [label="(Call,i = 0)"];
"1000315" [label="(Identifier,j)"];
"1000250" [label="(Call,IMAGE_DIMENSIONS_OK(w, h))"];
"1000765" [label="(Identifier,rows)"];
"1000311" [label="(Call,j < h)"];
"1000587" [label="(Identifier,im)"];
"1000577" [label="(Call,malloc(sizeof(DATA32) * w * h))"];
"1000117" [label="(Call,intoffset[] = { 0, 4, 2, 1 })"];
"1000571" [label="(Call,im->data = (DATA32 *) malloc(sizeof(DATA32) * w * h))"];
"1000762" [label="(Identifier,i)"];
"1000593" [label="(Identifier,r)"];
"1000775" [label="(MethodReturn,RET)"];
"1000121" [label="(Identifier,intjump)"];
"1000650" [label="(Call,j = 0)"];
"1000579" [label="(Call,sizeof(DATA32))"];
"1000332" [label="(Call,i < h)"];
"1000741" [label="(ControlStructure,if (progress))"];
"1000306" [label="(Call,j = intoffset[i])"];
"1000654" [label="(Identifier,j)"];
"1000749" [label="(Identifier,h)"];
"1000747" [label="(Identifier,last_y)"];
"1000111" [label="(MethodParameterIn,ImlibImage * im)"];
"1000312" [label="(Identifier,j)"];
"1000450" [label="(Block,)"];
"1000153" [label="(Call,last_y = 0)"];
"1000303" [label="(Identifier,i)"];
"1000430" [label="(Identifier,h)"];
"1000268" [label="(Call,i < h)"];
"1000656" [label="(Call,j++)"];
"1000434" [label="(Identifier,im)"];
"1000308" [label="(Call,intoffset[i])"];
"1000305" [label="(ControlStructure,for (j = intoffset[i]; j < h; j += intjump[i]))"];
"1000572" [label="(Call,im->data)"];
"1000426" [label="(Call,im->h = h)"];
"1000307" [label="(Identifier,j)"];
"1000427" [label="(Call,im->h)"];
"1000278" [label="(Call,calloc(w, sizeof(GifPixelType)))"];
"1000586" [label="(Call,im->data)"];
"1000316" [label="(Call,intjump[i])"];
"1000582" [label="(Identifier,w)"];
"1000743" [label="(Call,progress(im, 100, 0, last_y, w, h))"];
"1000655" [label="(Identifier,w)"];
"1000751" [label="(Identifier,rc)"];
"1000662" [label="(Identifier,ptr)"];
"1000320" [label="(Call,DGifGetLine(gif, rows[j], w))"];
"1000136" [label="(Call,w = 0)"];
"1000306" -> "1000305"  [label="AST: "];
"1000306" -> "1000308"  [label="CFG: "];
"1000307" -> "1000306"  [label="AST: "];
"1000308" -> "1000306"  [label="AST: "];
"1000312" -> "1000306"  [label="CFG: "];
"1000306" -> "1000775"  [label="DDG: intoffset[i]"];
"1000117" -> "1000306"  [label="DDG: intoffset"];
"1000306" -> "1000311"  [label="DDG: j"];
"1000117" -> "1000115"  [label="AST: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000121" -> "1000117"  [label="CFG: "];
"1000117" -> "1000775"  [label="DDG: intoffset"];
"1000311" -> "1000305"  [label="AST: "];
"1000311" -> "1000313"  [label="CFG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000313" -> "1000311"  [label="AST: "];
"1000321" -> "1000311"  [label="CFG: "];
"1000303" -> "1000311"  [label="CFG: "];
"1000311" -> "1000775"  [label="DDG: j"];
"1000311" -> "1000775"  [label="DDG: h"];
"1000311" -> "1000775"  [label="DDG: j < h"];
"1000314" -> "1000311"  [label="DDG: j"];
"1000268" -> "1000311"  [label="DDG: h"];
"1000311" -> "1000314"  [label="DDG: j"];
"1000311" -> "1000426"  [label="DDG: h"];
"1000311" -> "1000581"  [label="DDG: h"];
"1000311" -> "1000758"  [label="DDG: h"];
"1000314" -> "1000305"  [label="AST: "];
"1000314" -> "1000316"  [label="CFG: "];
"1000315" -> "1000314"  [label="AST: "];
"1000316" -> "1000314"  [label="AST: "];
"1000312" -> "1000314"  [label="CFG: "];
"1000314" -> "1000775"  [label="DDG: intjump[i]"];
"1000120" -> "1000314"  [label="DDG: intjump"];
"1000426" -> "1000115"  [label="AST: "];
"1000426" -> "1000430"  [label="CFG: "];
"1000427" -> "1000426"  [label="AST: "];
"1000430" -> "1000426"  [label="AST: "];
"1000434" -> "1000426"  [label="CFG: "];
"1000426" -> "1000775"  [label="DDG: im->h"];
"1000332" -> "1000426"  [label="DDG: h"];
"1000140" -> "1000426"  [label="DDG: h"];
"1000268" -> "1000426"  [label="DDG: h"];
"1000581" -> "1000578"  [label="AST: "];
"1000581" -> "1000583"  [label="CFG: "];
"1000582" -> "1000581"  [label="AST: "];
"1000583" -> "1000581"  [label="AST: "];
"1000578" -> "1000581"  [label="CFG: "];
"1000581" -> "1000775"  [label="DDG: w"];
"1000581" -> "1000578"  [label="DDG: w"];
"1000581" -> "1000578"  [label="DDG: h"];
"1000250" -> "1000581"  [label="DDG: w"];
"1000338" -> "1000581"  [label="DDG: w"];
"1000320" -> "1000581"  [label="DDG: w"];
"1000278" -> "1000581"  [label="DDG: w"];
"1000136" -> "1000581"  [label="DDG: w"];
"1000332" -> "1000581"  [label="DDG: h"];
"1000140" -> "1000581"  [label="DDG: h"];
"1000268" -> "1000581"  [label="DDG: h"];
"1000581" -> "1000653"  [label="DDG: w"];
"1000581" -> "1000743"  [label="DDG: h"];
"1000581" -> "1000758"  [label="DDG: h"];
"1000578" -> "1000577"  [label="AST: "];
"1000579" -> "1000578"  [label="AST: "];
"1000577" -> "1000578"  [label="CFG: "];
"1000578" -> "1000775"  [label="DDG: w * h"];
"1000578" -> "1000577"  [label="DDG: w * h"];
"1000577" -> "1000575"  [label="AST: "];
"1000575" -> "1000577"  [label="CFG: "];
"1000577" -> "1000775"  [label="DDG: sizeof(DATA32) * w * h"];
"1000577" -> "1000575"  [label="DDG: sizeof(DATA32) * w * h"];
"1000575" -> "1000571"  [label="AST: "];
"1000576" -> "1000575"  [label="AST: "];
"1000571" -> "1000575"  [label="CFG: "];
"1000575" -> "1000775"  [label="DDG: malloc(sizeof(DATA32) * w * h)"];
"1000575" -> "1000571"  [label="DDG: malloc(sizeof(DATA32) * w * h)"];
"1000571" -> "1000450"  [label="AST: "];
"1000572" -> "1000571"  [label="AST: "];
"1000587" -> "1000571"  [label="CFG: "];
"1000571" -> "1000775"  [label="DDG: (DATA32 *) malloc(sizeof(DATA32) * w * h)"];
"1000571" -> "1000585"  [label="DDG: im->data"];
"1000585" -> "1000584"  [label="AST: "];
"1000585" -> "1000586"  [label="CFG: "];
"1000586" -> "1000585"  [label="AST: "];
"1000589" -> "1000585"  [label="CFG: "];
"1000593" -> "1000585"  [label="CFG: "];
"1000585" -> "1000775"  [label="DDG: im->data"];
"1000585" -> "1000775"  [label="DDG: !im->data"];
"1000653" -> "1000649"  [label="AST: "];
"1000653" -> "1000655"  [label="CFG: "];
"1000654" -> "1000653"  [label="AST: "];
"1000655" -> "1000653"  [label="AST: "];
"1000662" -> "1000653"  [label="CFG: "];
"1000699" -> "1000653"  [label="CFG: "];
"1000653" -> "1000775"  [label="DDG: w"];
"1000653" -> "1000775"  [label="DDG: j < w"];
"1000653" -> "1000775"  [label="DDG: j"];
"1000650" -> "1000653"  [label="DDG: j"];
"1000656" -> "1000653"  [label="DDG: j"];
"1000653" -> "1000656"  [label="DDG: j"];
"1000653" -> "1000743"  [label="DDG: w"];
"1000656" -> "1000649"  [label="AST: "];
"1000656" -> "1000657"  [label="CFG: "];
"1000657" -> "1000656"  [label="AST: "];
"1000654" -> "1000656"  [label="CFG: "];
"1000743" -> "1000741"  [label="AST: "];
"1000743" -> "1000749"  [label="CFG: "];
"1000744" -> "1000743"  [label="AST: "];
"1000745" -> "1000743"  [label="AST: "];
"1000746" -> "1000743"  [label="AST: "];
"1000747" -> "1000743"  [label="AST: "];
"1000748" -> "1000743"  [label="AST: "];
"1000749" -> "1000743"  [label="AST: "];
"1000751" -> "1000743"  [label="CFG: "];
"1000743" -> "1000775"  [label="DDG: w"];
"1000743" -> "1000775"  [label="DDG: im"];
"1000743" -> "1000775"  [label="DDG: last_y"];
"1000743" -> "1000775"  [label="DDG: progress(im, 100, 0, last_y, w, h)"];
"1000111" -> "1000743"  [label="DDG: im"];
"1000694" -> "1000743"  [label="DDG: last_y"];
"1000153" -> "1000743"  [label="DDG: last_y"];
"1000743" -> "1000758"  [label="DDG: h"];
"1000758" -> "1000754"  [label="AST: "];
"1000758" -> "1000760"  [label="CFG: "];
"1000759" -> "1000758"  [label="AST: "];
"1000760" -> "1000758"  [label="AST: "];
"1000765" -> "1000758"  [label="CFG: "];
"1000768" -> "1000758"  [label="CFG: "];
"1000758" -> "1000775"  [label="DDG: i < h"];
"1000758" -> "1000775"  [label="DDG: h"];
"1000758" -> "1000775"  [label="DDG: i"];
"1000761" -> "1000758"  [label="DDG: i"];
"1000755" -> "1000758"  [label="DDG: i"];
"1000268" -> "1000758"  [label="DDG: h"];
"1000332" -> "1000758"  [label="DDG: h"];
"1000140" -> "1000758"  [label="DDG: h"];
"1000758" -> "1000761"  [label="DDG: i"];
"1000761" -> "1000754"  [label="AST: "];
"1000761" -> "1000762"  [label="CFG: "];
"1000762" -> "1000761"  [label="AST: "];
"1000759" -> "1000761"  [label="CFG: "];
}
