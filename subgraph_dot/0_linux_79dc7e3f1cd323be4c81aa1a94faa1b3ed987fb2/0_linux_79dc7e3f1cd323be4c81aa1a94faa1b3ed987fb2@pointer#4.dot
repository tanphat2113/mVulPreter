digraph "0_linux_79dc7e3f1cd323be4c81aa1a94faa1b3ed987fb2@pointer" {
"1000250" [label="(Call,ipv6_addr_type(&hdr->saddr))"];
"1000248" [label="(Call,addr_type = ipv6_addr_type(&hdr->saddr))"];
"1000256" [label="(Call,__ipv6_addr_needs_scope_id(addr_type))"];
"1000284" [label="(Call,addr_type == IPV6_ADDR_ANY)"];
"1000283" [label="(Call,(addr_type == IPV6_ADDR_ANY) || (addr_type & IPV6_ADDR_MULTICAST))"];
"1000287" [label="(Call,addr_type & IPV6_ADDR_MULTICAST)"];
"1000291" [label="(Call,net_dbg_ratelimited(\"icmp6_send: addr_any/mcast source [%pI6c > %pI6c]\n\",\n\t\t\t\t    &hdr->saddr, &hdr->daddr))"];
"1000306" [label="(Call,net_dbg_ratelimited(\"icmp6_send: no reply to icmp error [%pI6c > %pI6c]\n\",\n\t\t\t\t    &hdr->saddr, &hdr->daddr))"];
"1000330" [label="(Call,fl6.daddr = hdr->saddr)"];
"1000427" [label="(Call,ipv6_addr_is_multicast(&fl6.daddr))"];
"1000422" [label="(Call,!fl6.flowi6_oif && ipv6_addr_is_multicast(&fl6.daddr))"];
"1000533" [label="(Call,net_dbg_ratelimited(\"icmp: len problem [%pI6c > %pI6c]\n\",\n\t\t\t\t    &hdr->saddr, &hdr->daddr))"];
"1000604" [label="(MethodReturn,static void)"];
"1000306" [label="(Call,net_dbg_ratelimited(\"icmp6_send: no reply to icmp error [%pI6c > %pI6c]\n\",\n\t\t\t\t    &hdr->saddr, &hdr->daddr))"];
"1000334" [label="(Call,hdr->saddr)"];
"1000443" [label="(Identifier,fl6)"];
"1000218" [label="(Call,addr_type & IPV6_ADDR_MULTICAST)"];
"1000291" [label="(Call,net_dbg_ratelimited(\"icmp6_send: addr_any/mcast source [%pI6c > %pI6c]\n\",\n\t\t\t\t    &hdr->saddr, &hdr->daddr))"];
"1000255" [label="(ControlStructure,if (__ipv6_addr_needs_scope_id(addr_type)))"];
"1000217" [label="(Call,addr_type & IPV6_ADDR_MULTICAST || skb->pkt_type != PACKET_HOST)"];
"1000297" [label="(Call,&hdr->daddr)"];
"1000534" [label="(Literal,\"icmp: len problem [%pI6c > %pI6c]\n\")"];
"1000111" [label="(Block,)"];
"1000251" [label="(Call,&hdr->saddr)"];
"1000293" [label="(Call,&hdr->saddr)"];
"1000282" [label="(ControlStructure,if ((addr_type == IPV6_ADDR_ANY) || (addr_type & IPV6_ADDR_MULTICAST)))"];
"1000286" [label="(Identifier,IPV6_ADDR_ANY)"];
"1000268" [label="(Identifier,dst)"];
"1000532" [label="(Block,)"];
"1000307" [label="(Literal,\"icmp6_send: no reply to icmp error [%pI6c > %pI6c]\n\")"];
"1000423" [label="(Call,!fl6.flowi6_oif)"];
"1000422" [label="(Call,!fl6.flowi6_oif && ipv6_addr_is_multicast(&fl6.daddr))"];
"1000533" [label="(Call,net_dbg_ratelimited(\"icmp: len problem [%pI6c > %pI6c]\n\",\n\t\t\t\t    &hdr->saddr, &hdr->daddr))"];
"1000283" [label="(Call,(addr_type == IPV6_ADDR_ANY) || (addr_type & IPV6_ADDR_MULTICAST))"];
"1000288" [label="(Identifier,addr_type)"];
"1000201" [label="(Call,ipv6_chk_acast_addr_src(net, skb->dev, &hdr->daddr))"];
"1000256" [label="(Call,__ipv6_addr_needs_scope_id(addr_type))"];
"1000312" [label="(Call,&hdr->daddr)"];
"1000427" [label="(Call,ipv6_addr_is_multicast(&fl6.daddr))"];
"1000434" [label="(Identifier,fl6)"];
"1000289" [label="(Identifier,IPV6_ADDR_MULTICAST)"];
"1000292" [label="(Literal,\"icmp6_send: addr_any/mcast source [%pI6c > %pI6c]\n\")"];
"1000301" [label="(Return,return;)"];
"1000287" [label="(Call,addr_type & IPV6_ADDR_MULTICAST)"];
"1000539" [label="(Call,&hdr->daddr)"];
"1000308" [label="(Call,&hdr->saddr)"];
"1000248" [label="(Call,addr_type = ipv6_addr_type(&hdr->saddr))"];
"1000284" [label="(Call,addr_type == IPV6_ADDR_ANY)"];
"1000304" [label="(Identifier,skb)"];
"1000191" [label="(Call,ipv6_chk_addr(net, &hdr->daddr, skb->dev, 0))"];
"1000421" [label="(ControlStructure,if (!fl6.flowi6_oif && ipv6_addr_is_multicast(&fl6.daddr)))"];
"1000428" [label="(Call,&fl6.daddr)"];
"1000330" [label="(Call,fl6.daddr = hdr->saddr)"];
"1000259" [label="(Identifier,iif)"];
"1000285" [label="(Identifier,addr_type)"];
"1000331" [label="(Call,fl6.daddr)"];
"1000535" [label="(Call,&hdr->saddr)"];
"1000257" [label="(Identifier,addr_type)"];
"1000338" [label="(Identifier,force_saddr)"];
"1000250" [label="(Call,ipv6_addr_type(&hdr->saddr))"];
"1000305" [label="(Block,)"];
"1000290" [label="(Block,)"];
"1000249" [label="(Identifier,addr_type)"];
"1000316" [label="(Return,return;)"];
"1000543" [label="(ControlStructure,goto out_dst_release;)"];
"1000250" -> "1000248"  [label="AST: "];
"1000250" -> "1000251"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000248" -> "1000250"  [label="CFG: "];
"1000250" -> "1000604"  [label="DDG: "];
"1000250" -> "1000248"  [label="DDG: "];
"1000250" -> "1000291"  [label="DDG: "];
"1000250" -> "1000306"  [label="DDG: "];
"1000250" -> "1000330"  [label="DDG: "];
"1000250" -> "1000533"  [label="DDG: "];
"1000248" -> "1000111"  [label="AST: "];
"1000249" -> "1000248"  [label="AST: "];
"1000257" -> "1000248"  [label="CFG: "];
"1000248" -> "1000604"  [label="DDG: "];
"1000248" -> "1000256"  [label="DDG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000256" -> "1000257"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000259" -> "1000256"  [label="CFG: "];
"1000268" -> "1000256"  [label="CFG: "];
"1000256" -> "1000604"  [label="DDG: "];
"1000256" -> "1000284"  [label="DDG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000284" -> "1000286"  [label="CFG: "];
"1000285" -> "1000284"  [label="AST: "];
"1000286" -> "1000284"  [label="AST: "];
"1000288" -> "1000284"  [label="CFG: "];
"1000283" -> "1000284"  [label="CFG: "];
"1000284" -> "1000604"  [label="DDG: "];
"1000284" -> "1000604"  [label="DDG: "];
"1000284" -> "1000283"  [label="DDG: "];
"1000284" -> "1000283"  [label="DDG: "];
"1000284" -> "1000287"  [label="DDG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000283" -> "1000287"  [label="CFG: "];
"1000287" -> "1000283"  [label="AST: "];
"1000292" -> "1000283"  [label="CFG: "];
"1000304" -> "1000283"  [label="CFG: "];
"1000283" -> "1000604"  [label="DDG: "];
"1000283" -> "1000604"  [label="DDG: "];
"1000283" -> "1000604"  [label="DDG: "];
"1000217" -> "1000283"  [label="DDG: "];
"1000287" -> "1000283"  [label="DDG: "];
"1000287" -> "1000283"  [label="DDG: "];
"1000287" -> "1000289"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000287"  [label="AST: "];
"1000287" -> "1000604"  [label="DDG: "];
"1000287" -> "1000604"  [label="DDG: "];
"1000218" -> "1000287"  [label="DDG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000291" -> "1000297"  [label="CFG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000293" -> "1000291"  [label="AST: "];
"1000297" -> "1000291"  [label="AST: "];
"1000301" -> "1000291"  [label="CFG: "];
"1000291" -> "1000604"  [label="DDG: "];
"1000291" -> "1000604"  [label="DDG: "];
"1000291" -> "1000604"  [label="DDG: "];
"1000201" -> "1000291"  [label="DDG: "];
"1000191" -> "1000291"  [label="DDG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000306" -> "1000312"  [label="CFG: "];
"1000307" -> "1000306"  [label="AST: "];
"1000308" -> "1000306"  [label="AST: "];
"1000312" -> "1000306"  [label="AST: "];
"1000316" -> "1000306"  [label="CFG: "];
"1000306" -> "1000604"  [label="DDG: "];
"1000306" -> "1000604"  [label="DDG: "];
"1000306" -> "1000604"  [label="DDG: "];
"1000201" -> "1000306"  [label="DDG: "];
"1000191" -> "1000306"  [label="DDG: "];
"1000330" -> "1000111"  [label="AST: "];
"1000330" -> "1000334"  [label="CFG: "];
"1000331" -> "1000330"  [label="AST: "];
"1000334" -> "1000330"  [label="AST: "];
"1000338" -> "1000330"  [label="CFG: "];
"1000330" -> "1000604"  [label="DDG: "];
"1000330" -> "1000604"  [label="DDG: "];
"1000330" -> "1000427"  [label="DDG: "];
"1000427" -> "1000422"  [label="AST: "];
"1000427" -> "1000428"  [label="CFG: "];
"1000428" -> "1000427"  [label="AST: "];
"1000422" -> "1000427"  [label="CFG: "];
"1000427" -> "1000604"  [label="DDG: "];
"1000427" -> "1000422"  [label="DDG: "];
"1000422" -> "1000421"  [label="AST: "];
"1000422" -> "1000423"  [label="CFG: "];
"1000423" -> "1000422"  [label="AST: "];
"1000434" -> "1000422"  [label="CFG: "];
"1000443" -> "1000422"  [label="CFG: "];
"1000422" -> "1000604"  [label="DDG: "];
"1000422" -> "1000604"  [label="DDG: "];
"1000422" -> "1000604"  [label="DDG: "];
"1000423" -> "1000422"  [label="DDG: "];
"1000533" -> "1000532"  [label="AST: "];
"1000533" -> "1000539"  [label="CFG: "];
"1000534" -> "1000533"  [label="AST: "];
"1000535" -> "1000533"  [label="AST: "];
"1000539" -> "1000533"  [label="AST: "];
"1000543" -> "1000533"  [label="CFG: "];
"1000533" -> "1000604"  [label="DDG: "];
"1000533" -> "1000604"  [label="DDG: "];
"1000533" -> "1000604"  [label="DDG: "];
"1000201" -> "1000533"  [label="DDG: "];
"1000191" -> "1000533"  [label="DDG: "];
}
