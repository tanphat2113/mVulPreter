digraph "0_xserver_8caed4df36b1f802b4992edcfd282cbeeec35d9d@pointer" {
"1000202" [label="(Call,list = (XEventClass *) (first + stuff->num_events))"];
"1000204" [label="(Call,(XEventClass *) (first + stuff->num_events))"];
"1000159" [label="(Call,first = ((xEvent *) &stuff[1]))"];
"1000161" [label="(Call,(xEvent *) &stuff[1])"];
"1000152" [label="(Call,stuff->num_events == 0)"];
"1000126" [label="(Call,stuff->num_events * bytes_to_int32(sizeof(xEvent)))"];
"1000153" [label="(Call,stuff->num_events)"];
"1000103" [label="(Block,)"];
"1000156" [label="(Literal,0)"];
"1000242" [label="(MethodReturn,RET)"];
"1000163" [label="(Call,&stuff[1])"];
"1000118" [label="(Call,bytes_to_int32(sizeof(xSendExtensionEventReq)) + stuff->count +\n        (stuff->num_events * bytes_to_int32(sizeof(xEvent))))"];
"1000203" [label="(Identifier,list)"];
"1000161" [label="(Call,(xEvent *) &stuff[1])"];
"1000151" [label="(ControlStructure,if (stuff->num_events == 0))"];
"1000206" [label="(Call,first + stuff->num_events)"];
"1000160" [label="(Identifier,first)"];
"1000202" [label="(Call,list = (XEventClass *) (first + stuff->num_events))"];
"1000122" [label="(Call,stuff->count +\n        (stuff->num_events * bytes_to_int32(sizeof(xEvent))))"];
"1000152" [label="(Call,stuff->num_events == 0)"];
"1000126" [label="(Call,stuff->num_events * bytes_to_int32(sizeof(xEvent)))"];
"1000158" [label="(Identifier,ret)"];
"1000212" [label="(Identifier,ret)"];
"1000204" [label="(Call,(XEventClass *) (first + stuff->num_events))"];
"1000127" [label="(Call,stuff->num_events)"];
"1000114" [label="(Call,stuff->length !=\n        bytes_to_int32(sizeof(xSendExtensionEventReq)) + stuff->count +\n        (stuff->num_events * bytes_to_int32(sizeof(xEvent))))"];
"1000171" [label="(Identifier,EXTENSION_EVENT_BASE)"];
"1000130" [label="(Call,bytes_to_int32(sizeof(xEvent)))"];
"1000159" [label="(Call,first = ((xEvent *) &stuff[1]))"];
"1000202" -> "1000103"  [label="AST: "];
"1000202" -> "1000204"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000212" -> "1000202"  [label="CFG: "];
"1000202" -> "1000242"  [label="DDG: list"];
"1000202" -> "1000242"  [label="DDG: (XEventClass *) (first + stuff->num_events)"];
"1000204" -> "1000202"  [label="DDG: first + stuff->num_events"];
"1000204" -> "1000206"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000206" -> "1000204"  [label="AST: "];
"1000204" -> "1000242"  [label="DDG: first + stuff->num_events"];
"1000159" -> "1000204"  [label="DDG: first"];
"1000152" -> "1000204"  [label="DDG: stuff->num_events"];
"1000159" -> "1000103"  [label="AST: "];
"1000159" -> "1000161"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000161" -> "1000159"  [label="AST: "];
"1000171" -> "1000159"  [label="CFG: "];
"1000159" -> "1000242"  [label="DDG: first"];
"1000159" -> "1000242"  [label="DDG: (xEvent *) &stuff[1]"];
"1000161" -> "1000159"  [label="DDG: &stuff[1]"];
"1000159" -> "1000206"  [label="DDG: first"];
"1000161" -> "1000163"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000161" -> "1000242"  [label="DDG: &stuff[1]"];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000156"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000156" -> "1000152"  [label="AST: "];
"1000158" -> "1000152"  [label="CFG: "];
"1000160" -> "1000152"  [label="CFG: "];
"1000152" -> "1000242"  [label="DDG: stuff->num_events == 0"];
"1000152" -> "1000242"  [label="DDG: stuff->num_events"];
"1000126" -> "1000152"  [label="DDG: stuff->num_events"];
"1000152" -> "1000206"  [label="DDG: stuff->num_events"];
"1000126" -> "1000122"  [label="AST: "];
"1000126" -> "1000130"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000130" -> "1000126"  [label="AST: "];
"1000122" -> "1000126"  [label="CFG: "];
"1000126" -> "1000242"  [label="DDG: bytes_to_int32(sizeof(xEvent))"];
"1000126" -> "1000242"  [label="DDG: stuff->num_events"];
"1000126" -> "1000114"  [label="DDG: stuff->num_events"];
"1000126" -> "1000114"  [label="DDG: bytes_to_int32(sizeof(xEvent))"];
"1000126" -> "1000118"  [label="DDG: stuff->num_events"];
"1000126" -> "1000118"  [label="DDG: bytes_to_int32(sizeof(xEvent))"];
"1000126" -> "1000122"  [label="DDG: stuff->num_events"];
"1000126" -> "1000122"  [label="DDG: bytes_to_int32(sizeof(xEvent))"];
}
