digraph "0_linux_20e1db19db5d6b9e4e83021595eab0dc8f107bef@pointer" {
"1000131" [label="(Call,rcu_assign_pointer(nl_table[NETLINK_USERSOCK].listeners, listeners))"];
"1000119" [label="(Call,!listeners)"];
"1000108" [label="(Call,listeners = kzalloc(sizeof(*listeners) + NLGRPSZ(groups), GFP_KERNEL))"];
"1000110" [label="(Call,kzalloc(sizeof(*listeners) + NLGRPSZ(groups), GFP_KERNEL))"];
"1000115" [label="(Call,NLGRPSZ(groups))"];
"1000105" [label="(Call,groups = 32)"];
"1000109" [label="(Identifier,listeners)"];
"1000122" [label="(Literal,\"netlink_add_usersock_entry: Cannot allocate listeners\n\")"];
"1000117" [label="(Identifier,GFP_KERNEL)"];
"1000141" [label="(Identifier,nl_table)"];
"1000116" [label="(Identifier,groups)"];
"1000118" [label="(ControlStructure,if (!listeners))"];
"1000105" [label="(Call,groups = 32)"];
"1000119" [label="(Call,!listeners)"];
"1000160" [label="(MethodReturn,static void __init)"];
"1000110" [label="(Call,kzalloc(sizeof(*listeners) + NLGRPSZ(groups), GFP_KERNEL))"];
"1000131" [label="(Call,rcu_assign_pointer(nl_table[NETLINK_USERSOCK].listeners, listeners))"];
"1000120" [label="(Identifier,listeners)"];
"1000102" [label="(Block,)"];
"1000111" [label="(Call,sizeof(*listeners) + NLGRPSZ(groups))"];
"1000107" [label="(Literal,32)"];
"1000137" [label="(Identifier,listeners)"];
"1000123" [label="(Call,netlink_table_grab())"];
"1000108" [label="(Call,listeners = kzalloc(sizeof(*listeners) + NLGRPSZ(groups), GFP_KERNEL))"];
"1000115" [label="(Call,NLGRPSZ(groups))"];
"1000124" [label="(Call,nl_table[NETLINK_USERSOCK].groups = groups)"];
"1000106" [label="(Identifier,groups)"];
"1000132" [label="(Call,nl_table[NETLINK_USERSOCK].listeners)"];
"1000131" -> "1000102"  [label="AST: "];
"1000131" -> "1000137"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000137" -> "1000131"  [label="AST: "];
"1000141" -> "1000131"  [label="CFG: "];
"1000131" -> "1000160"  [label="DDG: listeners"];
"1000131" -> "1000160"  [label="DDG: nl_table[NETLINK_USERSOCK].listeners"];
"1000131" -> "1000160"  [label="DDG: rcu_assign_pointer(nl_table[NETLINK_USERSOCK].listeners, listeners)"];
"1000119" -> "1000131"  [label="DDG: listeners"];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000122" -> "1000119"  [label="CFG: "];
"1000123" -> "1000119"  [label="CFG: "];
"1000119" -> "1000160"  [label="DDG: !listeners"];
"1000108" -> "1000119"  [label="DDG: listeners"];
"1000108" -> "1000102"  [label="AST: "];
"1000108" -> "1000110"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000110" -> "1000108"  [label="AST: "];
"1000120" -> "1000108"  [label="CFG: "];
"1000108" -> "1000160"  [label="DDG: kzalloc(sizeof(*listeners) + NLGRPSZ(groups), GFP_KERNEL)"];
"1000110" -> "1000108"  [label="DDG: sizeof(*listeners) + NLGRPSZ(groups)"];
"1000110" -> "1000108"  [label="DDG: GFP_KERNEL"];
"1000110" -> "1000117"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000117" -> "1000110"  [label="AST: "];
"1000110" -> "1000160"  [label="DDG: sizeof(*listeners) + NLGRPSZ(groups)"];
"1000110" -> "1000160"  [label="DDG: GFP_KERNEL"];
"1000115" -> "1000110"  [label="DDG: groups"];
"1000115" -> "1000111"  [label="AST: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000111" -> "1000115"  [label="CFG: "];
"1000115" -> "1000111"  [label="DDG: groups"];
"1000105" -> "1000115"  [label="DDG: groups"];
"1000115" -> "1000124"  [label="DDG: groups"];
"1000105" -> "1000102"  [label="AST: "];
"1000105" -> "1000107"  [label="CFG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000107" -> "1000105"  [label="AST: "];
"1000109" -> "1000105"  [label="CFG: "];
}
