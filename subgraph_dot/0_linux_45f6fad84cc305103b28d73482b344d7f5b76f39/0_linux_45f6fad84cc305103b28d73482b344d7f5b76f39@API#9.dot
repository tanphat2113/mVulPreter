digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39@API" {
"1000252" [label="(Call,addr_len >= sizeof(struct sockaddr_in6))"];
"1000153" [label="(Call,addr_len < SIN6_LEN_RFC2133)"];
"1000108" [label="(MethodParameterIn,int addr_len)"];
"1000251" [label="(Call,addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    usin->sin6_scope_id)"];
"1000265" [label="(Call,sk->sk_bound_dev_if != usin->sin6_scope_id)"];
"1000261" [label="(Call,sk->sk_bound_dev_if &&\n\t\t\t    sk->sk_bound_dev_if != usin->sin6_scope_id)"];
"1000275" [label="(Call,sk->sk_bound_dev_if = usin->sin6_scope_id)"];
"1000283" [label="(Call,!sk->sk_bound_dev_if)"];
"1000436" [label="(Call,fl6.flowi6_oif = sk->sk_bound_dev_if)"];
"1000436" [label="(Call,fl6.flowi6_oif = sk->sk_bound_dev_if)"];
"1000109" [label="(Block,)"];
"1000261" [label="(Call,sk->sk_bound_dev_if &&\n\t\t\t    sk->sk_bound_dev_if != usin->sin6_scope_id)"];
"1000252" [label="(Call,addr_len >= sizeof(struct sockaddr_in6))"];
"1000250" [label="(ControlStructure,if (addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    usin->sin6_scope_id))"];
"1000265" [label="(Call,sk->sk_bound_dev_if != usin->sin6_scope_id)"];
"1000283" [label="(Call,!sk->sk_bound_dev_if)"];
"1000289" [label="(Identifier,EINVAL)"];
"1000162" [label="(Identifier,usin)"];
"1000253" [label="(Identifier,addr_len)"];
"1000153" [label="(Call,addr_len < SIN6_LEN_RFC2133)"];
"1000277" [label="(Identifier,sk)"];
"1000440" [label="(Call,sk->sk_bound_dev_if)"];
"1000152" [label="(ControlStructure,if (addr_len < SIN6_LEN_RFC2133))"];
"1000254" [label="(Call,sizeof(struct sockaddr_in6))"];
"1000276" [label="(Call,sk->sk_bound_dev_if)"];
"1000269" [label="(Call,usin->sin6_scope_id)"];
"1000282" [label="(ControlStructure,if (!sk->sk_bound_dev_if))"];
"1000292" [label="(Identifier,sk)"];
"1000266" [label="(Call,sk->sk_bound_dev_if)"];
"1000275" [label="(Call,sk->sk_bound_dev_if = usin->sin6_scope_id)"];
"1000257" [label="(Identifier,usin)"];
"1000262" [label="(Call,sk->sk_bound_dev_if)"];
"1000284" [label="(Call,sk->sk_bound_dev_if)"];
"1000260" [label="(ControlStructure,if (sk->sk_bound_dev_if &&\n\t\t\t    sk->sk_bound_dev_if != usin->sin6_scope_id))"];
"1000613" [label="(MethodReturn,static int)"];
"1000155" [label="(Identifier,SIN6_LEN_RFC2133)"];
"1000263" [label="(Identifier,sk)"];
"1000158" [label="(Identifier,EINVAL)"];
"1000437" [label="(Call,fl6.flowi6_oif)"];
"1000279" [label="(Call,usin->sin6_scope_id)"];
"1000256" [label="(Call,usin->sin6_scope_id)"];
"1000259" [label="(Block,)"];
"1000445" [label="(Identifier,fl6)"];
"1000154" [label="(Identifier,addr_len)"];
"1000108" [label="(MethodParameterIn,int addr_len)"];
"1000251" [label="(Call,addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    usin->sin6_scope_id)"];
"1000285" [label="(Identifier,sk)"];
"1000274" [label="(Identifier,EINVAL)"];
"1000252" -> "1000251"  [label="AST: "];
"1000252" -> "1000254"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000254" -> "1000252"  [label="AST: "];
"1000257" -> "1000252"  [label="CFG: "];
"1000251" -> "1000252"  [label="CFG: "];
"1000252" -> "1000613"  [label="DDG: addr_len"];
"1000252" -> "1000251"  [label="DDG: addr_len"];
"1000153" -> "1000252"  [label="DDG: addr_len"];
"1000108" -> "1000252"  [label="DDG: addr_len"];
"1000153" -> "1000152"  [label="AST: "];
"1000153" -> "1000155"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000155" -> "1000153"  [label="AST: "];
"1000158" -> "1000153"  [label="CFG: "];
"1000162" -> "1000153"  [label="CFG: "];
"1000153" -> "1000613"  [label="DDG: SIN6_LEN_RFC2133"];
"1000153" -> "1000613"  [label="DDG: addr_len < SIN6_LEN_RFC2133"];
"1000153" -> "1000613"  [label="DDG: addr_len"];
"1000108" -> "1000153"  [label="DDG: addr_len"];
"1000108" -> "1000105"  [label="AST: "];
"1000108" -> "1000613"  [label="DDG: addr_len"];
"1000251" -> "1000250"  [label="AST: "];
"1000251" -> "1000256"  [label="CFG: "];
"1000256" -> "1000251"  [label="AST: "];
"1000263" -> "1000251"  [label="CFG: "];
"1000285" -> "1000251"  [label="CFG: "];
"1000251" -> "1000613"  [label="DDG: addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    usin->sin6_scope_id"];
"1000251" -> "1000613"  [label="DDG: addr_len >= sizeof(struct sockaddr_in6)"];
"1000251" -> "1000613"  [label="DDG: usin->sin6_scope_id"];
"1000251" -> "1000265"  [label="DDG: usin->sin6_scope_id"];
"1000251" -> "1000275"  [label="DDG: usin->sin6_scope_id"];
"1000265" -> "1000261"  [label="AST: "];
"1000265" -> "1000269"  [label="CFG: "];
"1000266" -> "1000265"  [label="AST: "];
"1000269" -> "1000265"  [label="AST: "];
"1000261" -> "1000265"  [label="CFG: "];
"1000265" -> "1000613"  [label="DDG: usin->sin6_scope_id"];
"1000265" -> "1000261"  [label="DDG: sk->sk_bound_dev_if"];
"1000265" -> "1000261"  [label="DDG: usin->sin6_scope_id"];
"1000265" -> "1000275"  [label="DDG: usin->sin6_scope_id"];
"1000261" -> "1000260"  [label="AST: "];
"1000261" -> "1000262"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000274" -> "1000261"  [label="CFG: "];
"1000277" -> "1000261"  [label="CFG: "];
"1000261" -> "1000613"  [label="DDG: sk->sk_bound_dev_if != usin->sin6_scope_id"];
"1000261" -> "1000613"  [label="DDG: sk->sk_bound_dev_if"];
"1000261" -> "1000613"  [label="DDG: sk->sk_bound_dev_if &&\n\t\t\t    sk->sk_bound_dev_if != usin->sin6_scope_id"];
"1000275" -> "1000259"  [label="AST: "];
"1000275" -> "1000279"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000279" -> "1000275"  [label="AST: "];
"1000285" -> "1000275"  [label="CFG: "];
"1000275" -> "1000613"  [label="DDG: usin->sin6_scope_id"];
"1000275" -> "1000283"  [label="DDG: sk->sk_bound_dev_if"];
"1000283" -> "1000282"  [label="AST: "];
"1000283" -> "1000284"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000289" -> "1000283"  [label="CFG: "];
"1000292" -> "1000283"  [label="CFG: "];
"1000283" -> "1000613"  [label="DDG: sk->sk_bound_dev_if"];
"1000283" -> "1000613"  [label="DDG: !sk->sk_bound_dev_if"];
"1000283" -> "1000436"  [label="DDG: sk->sk_bound_dev_if"];
"1000436" -> "1000109"  [label="AST: "];
"1000436" -> "1000440"  [label="CFG: "];
"1000437" -> "1000436"  [label="AST: "];
"1000440" -> "1000436"  [label="AST: "];
"1000445" -> "1000436"  [label="CFG: "];
"1000436" -> "1000613"  [label="DDG: fl6.flowi6_oif"];
"1000436" -> "1000613"  [label="DDG: sk->sk_bound_dev_if"];
}
