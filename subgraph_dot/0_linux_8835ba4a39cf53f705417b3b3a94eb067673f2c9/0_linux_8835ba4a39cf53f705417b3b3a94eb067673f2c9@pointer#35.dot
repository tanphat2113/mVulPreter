digraph "0_linux_8835ba4a39cf53f705417b3b3a94eb067673f2c9@pointer" {
"1001315" [label="(Call,cfd->bLength - 4)"];
"1001300" [label="(Call,cfd->bLength - 4)"];
"1001284" [label="(Call,cfd->bLength - 4)"];
"1001305" [label="(Call,memcpy(acm->country_codes, (u8 *)&cfd->wCountyCode0,\n\t\t\t\t\t\t\tcfd->bLength - 4))"];
"1001341" [label="(Call,kfree(acm->country_codes))"];
"1001377" [label="(Call,kfree(acm->country_codes))"];
"1001538" [label="(Call,kfree(acm->country_codes))"];
"1001283" [label="(Call,kmalloc(cfd->bLength - 4, GFP_KERNEL))"];
"1001340" [label="(Block,)"];
"1001519" [label="(Block,)"];
"1001278" [label="(Block,)"];
"1001546" [label="(Identifier,acm)"];
"1001341" [label="(Call,kfree(acm->country_codes))"];
"1001296" [label="(Call,acm->country_code_size = cfd->bLength - 4)"];
"1001284" [label="(Call,cfd->bLength - 4)"];
"1001309" [label="(Call,(u8 *)&cfd->wCountyCode0)"];
"1001539" [label="(Call,acm->country_codes)"];
"1001304" [label="(Literal,4)"];
"1001377" [label="(Call,kfree(acm->country_codes))"];
"1001538" [label="(Call,kfree(acm->country_codes))"];
"1001291" [label="(Call,!acm->country_codes)"];
"1001378" [label="(Call,acm->country_codes)"];
"1001381" [label="(Call,acm->country_codes = NULL)"];
"1001345" [label="(Call,acm->country_codes = NULL)"];
"1001342" [label="(Call,acm->country_codes)"];
"1001383" [label="(Identifier,acm)"];
"1001301" [label="(Call,cfd->bLength)"];
"1001289" [label="(Identifier,GFP_KERNEL)"];
"1001305" [label="(Call,memcpy(acm->country_codes, (u8 *)&cfd->wCountyCode0,\n\t\t\t\t\t\t\tcfd->bLength - 4))"];
"1001288" [label="(Literal,4)"];
"1001322" [label="(Identifier,acm)"];
"1001316" [label="(Call,cfd->bLength)"];
"1001285" [label="(Call,cfd->bLength)"];
"1001347" [label="(Identifier,acm)"];
"1001315" [label="(Call,cfd->bLength - 4)"];
"1001300" [label="(Call,cfd->bLength - 4)"];
"1001306" [label="(Call,acm->country_codes)"];
"1001319" [label="(Literal,4)"];
"1001369" [label="(Block,)"];
"1001615" [label="(MethodReturn,static int)"];
"1001315" -> "1001305"  [label="AST: "];
"1001315" -> "1001319"  [label="CFG: "];
"1001316" -> "1001315"  [label="AST: "];
"1001319" -> "1001315"  [label="AST: "];
"1001305" -> "1001315"  [label="CFG: "];
"1001315" -> "1001615"  [label="DDG: cfd->bLength"];
"1001315" -> "1001305"  [label="DDG: cfd->bLength"];
"1001315" -> "1001305"  [label="DDG: 4"];
"1001300" -> "1001315"  [label="DDG: cfd->bLength"];
"1001300" -> "1001296"  [label="AST: "];
"1001300" -> "1001304"  [label="CFG: "];
"1001301" -> "1001300"  [label="AST: "];
"1001304" -> "1001300"  [label="AST: "];
"1001296" -> "1001300"  [label="CFG: "];
"1001300" -> "1001296"  [label="DDG: cfd->bLength"];
"1001300" -> "1001296"  [label="DDG: 4"];
"1001284" -> "1001300"  [label="DDG: cfd->bLength"];
"1001284" -> "1001283"  [label="AST: "];
"1001284" -> "1001288"  [label="CFG: "];
"1001285" -> "1001284"  [label="AST: "];
"1001288" -> "1001284"  [label="AST: "];
"1001289" -> "1001284"  [label="CFG: "];
"1001284" -> "1001615"  [label="DDG: cfd->bLength"];
"1001284" -> "1001283"  [label="DDG: cfd->bLength"];
"1001284" -> "1001283"  [label="DDG: 4"];
"1001305" -> "1001278"  [label="AST: "];
"1001306" -> "1001305"  [label="AST: "];
"1001309" -> "1001305"  [label="AST: "];
"1001322" -> "1001305"  [label="CFG: "];
"1001305" -> "1001615"  [label="DDG: (u8 *)&cfd->wCountyCode0"];
"1001305" -> "1001615"  [label="DDG: cfd->bLength - 4"];
"1001305" -> "1001615"  [label="DDG: memcpy(acm->country_codes, (u8 *)&cfd->wCountyCode0,\n\t\t\t\t\t\t\tcfd->bLength - 4)"];
"1001305" -> "1001615"  [label="DDG: acm->country_codes"];
"1001291" -> "1001305"  [label="DDG: acm->country_codes"];
"1001309" -> "1001305"  [label="DDG: &cfd->wCountyCode0"];
"1001305" -> "1001341"  [label="DDG: acm->country_codes"];
"1001305" -> "1001377"  [label="DDG: acm->country_codes"];
"1001305" -> "1001538"  [label="DDG: acm->country_codes"];
"1001341" -> "1001340"  [label="AST: "];
"1001341" -> "1001342"  [label="CFG: "];
"1001342" -> "1001341"  [label="AST: "];
"1001347" -> "1001341"  [label="CFG: "];
"1001341" -> "1001615"  [label="DDG: kfree(acm->country_codes)"];
"1001377" -> "1001369"  [label="AST: "];
"1001377" -> "1001378"  [label="CFG: "];
"1001378" -> "1001377"  [label="AST: "];
"1001383" -> "1001377"  [label="CFG: "];
"1001377" -> "1001615"  [label="DDG: kfree(acm->country_codes)"];
"1001538" -> "1001519"  [label="AST: "];
"1001538" -> "1001539"  [label="CFG: "];
"1001539" -> "1001538"  [label="AST: "];
"1001546" -> "1001538"  [label="CFG: "];
"1001538" -> "1001615"  [label="DDG: kfree(acm->country_codes)"];
"1001538" -> "1001615"  [label="DDG: acm->country_codes"];
"1001381" -> "1001538"  [label="DDG: acm->country_codes"];
"1001345" -> "1001538"  [label="DDG: acm->country_codes"];
"1001291" -> "1001538"  [label="DDG: acm->country_codes"];
}
