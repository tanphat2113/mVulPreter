digraph "0_virglrenderer_e534b51ca3c3cd25f3990589932a9ed711c59b27@API" {
"1003021" [label="(Call,!parse_opt_writemask( ctx, &writemask ))"];
"1003022" [label="(Call,parse_opt_writemask( ctx, &writemask ))"];
"1003011" [label="(Call,parse_register_dcl( ctx, &file, brackets, &num_brackets))"];
"1003015" [label="(Identifier,brackets)"];
"1003642" [label="(Call,report_error( ctx, \"Expected `]'\" ))"];
"1003024" [label="(Call,&writemask)"];
"1003010" [label="(Call,!parse_register_dcl( ctx, &file, brackets, &num_brackets))"];
"1003013" [label="(Call,&file)"];
"1003021" [label="(Call,!parse_opt_writemask( ctx, &writemask ))"];
"1003020" [label="(ControlStructure,if (!parse_opt_writemask( ctx, &writemask )))"];
"1003029" [label="(Identifier,decl)"];
"1003745" [label="(Call,report_error( ctx, \"Expected semantic or interpolate attribute\" ))"];
"1003160" [label="(Call,report_error( ctx, \"Expected `('\" ))"];
"1003192" [label="(Call,report_error( ctx, \"Expected `)'\" ))"];
"1003178" [label="(Call,report_error( ctx, \"Expected `,'\" ))"];
"1003272" [label="(Call,report_error(ctx, \"Expected texture target\"))"];
"1004167" [label="(MethodReturn,static boolean)"];
"1003012" [label="(Identifier,ctx)"];
"1003022" [label="(Call,parse_opt_writemask( ctx, &writemask ))"];
"1003372" [label="(Call,report_error(ctx, \"Expected texture target\"))"];
"1003386" [label="(Call,report_error( ctx, \"Expected `,'\" ))"];
"1003027" [label="(Identifier,FALSE)"];
"1003628" [label="(Call,report_error( ctx, \"Expected literal integer\" ))"];
"1003011" [label="(Call,parse_register_dcl( ctx, &file, brackets, &num_brackets))"];
"1003481" [label="(Call,report_error(ctx, \"Expected type name\"))"];
"1003023" [label="(Identifier,ctx)"];
"1003016" [label="(Call,&num_brackets)"];
"1003021" -> "1003020"  [label="AST: "];
"1003021" -> "1003022"  [label="CFG: "];
"1003022" -> "1003021"  [label="AST: "];
"1003027" -> "1003021"  [label="CFG: "];
"1003029" -> "1003021"  [label="CFG: "];
"1003021" -> "1004167"  [label="DDG: !parse_opt_writemask( ctx, &writemask )"];
"1003021" -> "1004167"  [label="DDG: parse_opt_writemask( ctx, &writemask )"];
"1003022" -> "1003021"  [label="DDG: ctx"];
"1003022" -> "1003021"  [label="DDG: &writemask"];
"1003022" -> "1003024"  [label="CFG: "];
"1003023" -> "1003022"  [label="AST: "];
"1003024" -> "1003022"  [label="AST: "];
"1003022" -> "1004167"  [label="DDG: &writemask"];
"1003022" -> "1004167"  [label="DDG: ctx"];
"1003011" -> "1003022"  [label="DDG: ctx"];
"1003022" -> "1003160"  [label="DDG: ctx"];
"1003022" -> "1003178"  [label="DDG: ctx"];
"1003022" -> "1003192"  [label="DDG: ctx"];
"1003022" -> "1003272"  [label="DDG: ctx"];
"1003022" -> "1003372"  [label="DDG: ctx"];
"1003022" -> "1003386"  [label="DDG: ctx"];
"1003022" -> "1003481"  [label="DDG: ctx"];
"1003022" -> "1003628"  [label="DDG: ctx"];
"1003022" -> "1003642"  [label="DDG: ctx"];
"1003022" -> "1003745"  [label="DDG: ctx"];
"1003011" -> "1003010"  [label="AST: "];
"1003011" -> "1003016"  [label="CFG: "];
"1003012" -> "1003011"  [label="AST: "];
"1003013" -> "1003011"  [label="AST: "];
"1003015" -> "1003011"  [label="AST: "];
"1003016" -> "1003011"  [label="AST: "];
"1003010" -> "1003011"  [label="CFG: "];
"1003011" -> "1004167"  [label="DDG: &file"];
"1003011" -> "1004167"  [label="DDG: &num_brackets"];
"1003011" -> "1004167"  [label="DDG: ctx"];
"1003011" -> "1004167"  [label="DDG: brackets"];
"1003011" -> "1003010"  [label="DDG: ctx"];
"1003011" -> "1003010"  [label="DDG: &file"];
"1003011" -> "1003010"  [label="DDG: brackets"];
"1003011" -> "1003010"  [label="DDG: &num_brackets"];
}
