digraph "0_linux_d846f71195d57b0bbb143382647c2c6638b04c5a@API" {
"1000243" [label="(Call,copy_from_user(\n\t   newinfo->entries, tmp.entries, tmp.entries_size))"];
"1000231" [label="(Call,!newinfo->entries)"];
"1000222" [label="(Call,newinfo->entries = vmalloc(tmp.entries_size))"];
"1000226" [label="(Call,vmalloc(tmp.entries_size))"];
"1000138" [label="(Call,tmp.entries_size == 0)"];
"1000242" [label="(Call,copy_from_user(\n\t   newinfo->entries, tmp.entries, tmp.entries_size) != 0)"];
"1000276" [label="(Call,vfree(newinfo->entries))"];
"1000244" [label="(Call,newinfo->entries)"];
"1000226" [label="(Call,vmalloc(tmp.entries_size))"];
"1000142" [label="(Literal,0)"];
"1000138" [label="(Call,tmp.entries_size == 0)"];
"1000237" [label="(Identifier,ret)"];
"1000105" [label="(Block,)"];
"1000242" [label="(Call,copy_from_user(\n\t   newinfo->entries, tmp.entries, tmp.entries_size) != 0)"];
"1000227" [label="(Call,tmp.entries_size)"];
"1000253" [label="(Literal,0)"];
"1000223" [label="(Call,newinfo->entries)"];
"1000233" [label="(Identifier,newinfo)"];
"1000232" [label="(Call,newinfo->entries)"];
"1000280" [label="(JumpTarget,free_newinfo:)"];
"1000222" [label="(Call,newinfo->entries = vmalloc(tmp.entries_size))"];
"1000230" [label="(ControlStructure,if (!newinfo->entries))"];
"1000145" [label="(Literal,\"Entries_size never zero\n\")"];
"1000276" [label="(Call,vfree(newinfo->entries))"];
"1000152" [label="(Identifier,tmp)"];
"1000263" [label="(Identifier,ret)"];
"1000231" [label="(Call,!newinfo->entries)"];
"1000241" [label="(ControlStructure,if (copy_from_user(\n\t   newinfo->entries, tmp.entries, tmp.entries_size) != 0))"];
"1000139" [label="(Call,tmp.entries_size)"];
"1000137" [label="(ControlStructure,if (tmp.entries_size == 0))"];
"1000247" [label="(Call,tmp.entries)"];
"1000285" [label="(MethodReturn,static int)"];
"1000256" [label="(Literal,\"Couldn't copy entries from userspace\n\")"];
"1000277" [label="(Call,newinfo->entries)"];
"1000250" [label="(Call,tmp.entries_size)"];
"1000245" [label="(Identifier,newinfo)"];
"1000243" [label="(Call,copy_from_user(\n\t   newinfo->entries, tmp.entries, tmp.entries_size))"];
"1000243" -> "1000242"  [label="AST: "];
"1000243" -> "1000250"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000247" -> "1000243"  [label="AST: "];
"1000250" -> "1000243"  [label="AST: "];
"1000253" -> "1000243"  [label="CFG: "];
"1000243" -> "1000285"  [label="DDG: newinfo->entries"];
"1000243" -> "1000285"  [label="DDG: tmp.entries_size"];
"1000243" -> "1000285"  [label="DDG: tmp.entries"];
"1000243" -> "1000242"  [label="DDG: newinfo->entries"];
"1000243" -> "1000242"  [label="DDG: tmp.entries"];
"1000243" -> "1000242"  [label="DDG: tmp.entries_size"];
"1000231" -> "1000243"  [label="DDG: newinfo->entries"];
"1000226" -> "1000243"  [label="DDG: tmp.entries_size"];
"1000243" -> "1000276"  [label="DDG: newinfo->entries"];
"1000231" -> "1000230"  [label="AST: "];
"1000231" -> "1000232"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000237" -> "1000231"  [label="CFG: "];
"1000245" -> "1000231"  [label="CFG: "];
"1000231" -> "1000285"  [label="DDG: !newinfo->entries"];
"1000231" -> "1000285"  [label="DDG: newinfo->entries"];
"1000222" -> "1000231"  [label="DDG: newinfo->entries"];
"1000222" -> "1000105"  [label="AST: "];
"1000222" -> "1000226"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000226" -> "1000222"  [label="AST: "];
"1000233" -> "1000222"  [label="CFG: "];
"1000222" -> "1000285"  [label="DDG: vmalloc(tmp.entries_size)"];
"1000226" -> "1000222"  [label="DDG: tmp.entries_size"];
"1000226" -> "1000227"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000226" -> "1000285"  [label="DDG: tmp.entries_size"];
"1000138" -> "1000226"  [label="DDG: tmp.entries_size"];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000142"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000142" -> "1000138"  [label="AST: "];
"1000145" -> "1000138"  [label="CFG: "];
"1000152" -> "1000138"  [label="CFG: "];
"1000138" -> "1000285"  [label="DDG: tmp.entries_size"];
"1000138" -> "1000285"  [label="DDG: tmp.entries_size == 0"];
"1000242" -> "1000241"  [label="AST: "];
"1000242" -> "1000253"  [label="CFG: "];
"1000253" -> "1000242"  [label="AST: "];
"1000256" -> "1000242"  [label="CFG: "];
"1000263" -> "1000242"  [label="CFG: "];
"1000242" -> "1000285"  [label="DDG: copy_from_user(\n\t   newinfo->entries, tmp.entries, tmp.entries_size) != 0"];
"1000242" -> "1000285"  [label="DDG: copy_from_user(\n\t   newinfo->entries, tmp.entries, tmp.entries_size)"];
"1000276" -> "1000105"  [label="AST: "];
"1000276" -> "1000277"  [label="CFG: "];
"1000277" -> "1000276"  [label="AST: "];
"1000280" -> "1000276"  [label="CFG: "];
"1000276" -> "1000285"  [label="DDG: vfree(newinfo->entries)"];
"1000276" -> "1000285"  [label="DDG: newinfo->entries"];
}
