digraph "0_linux_d846f71195d57b0bbb143382647c2c6638b04c5a@API" {
"1000202" [label="(Call,vmalloc(sizeof(*newinfo) + countersize))"];
"1000192" [label="(Call,countersize = COUNTER_OFFSET(tmp.nentries) * nr_cpu_ids)"];
"1000194" [label="(Call,COUNTER_OFFSET(tmp.nentries) * nr_cpu_ids)"];
"1000195" [label="(Call,COUNTER_OFFSET(tmp.nentries))"];
"1000150" [label="(Call,tmp.nentries >= ((INT_MAX - sizeof(struct ebt_table_info)) /\n\t\t\tNR_CPUS - SMP_CACHE_BYTES) / sizeof(struct ebt_counter))"];
"1000154" [label="(Call,((INT_MAX - sizeof(struct ebt_table_info)) /\n\t\t\tNR_CPUS - SMP_CACHE_BYTES) / sizeof(struct ebt_counter))"];
"1000155" [label="(Call,(INT_MAX - sizeof(struct ebt_table_info)) /\n\t\t\tNR_CPUS - SMP_CACHE_BYTES)"];
"1000156" [label="(Call,(INT_MAX - sizeof(struct ebt_table_info)) /\n\t\t\tNR_CPUS)"];
"1000157" [label="(Call,INT_MAX - sizeof(struct ebt_table_info))"];
"1000200" [label="(Call,newinfo = vmalloc(sizeof(*newinfo) + countersize))"];
"1000209" [label="(Call,!newinfo)"];
"1000264" [label="(Call,do_replace_finish(net, &tmp, newinfo))"];
"1000262" [label="(Call,ret = do_replace_finish(net, &tmp, newinfo))"];
"1000270" [label="(Call,ret == 0)"];
"1000273" [label="(Return,return ret;)"];
"1000283" [label="(Return,return ret;)"];
"1000281" [label="(Call,vfree(newinfo))"];
"1000281" [label="(Call,vfree(newinfo))"];
"1000157" [label="(Call,INT_MAX - sizeof(struct ebt_table_info))"];
"1000154" [label="(Call,((INT_MAX - sizeof(struct ebt_table_info)) /\n\t\t\tNR_CPUS - SMP_CACHE_BYTES) / sizeof(struct ebt_counter))"];
"1000195" [label="(Call,COUNTER_OFFSET(tmp.nentries))"];
"1000272" [label="(Literal,0)"];
"1000162" [label="(Identifier,SMP_CACHE_BYTES)"];
"1000283" [label="(Return,return ret;)"];
"1000282" [label="(Identifier,newinfo)"];
"1000105" [label="(Block,)"];
"1000268" [label="(Identifier,newinfo)"];
"1000200" [label="(Call,newinfo = vmalloc(sizeof(*newinfo) + countersize))"];
"1000156" [label="(Call,(INT_MAX - sizeof(struct ebt_table_info)) /\n\t\t\tNR_CPUS)"];
"1000163" [label="(Call,sizeof(struct ebt_counter))"];
"1000265" [label="(Identifier,net)"];
"1000155" [label="(Call,(INT_MAX - sizeof(struct ebt_table_info)) /\n\t\t\tNR_CPUS - SMP_CACHE_BYTES)"];
"1000173" [label="(Call,INT_MAX / sizeof(struct ebt_counter))"];
"1000273" [label="(Return,return ret;)"];
"1000203" [label="(Call,sizeof(*newinfo) + countersize)"];
"1000161" [label="(Identifier,NR_CPUS)"];
"1000284" [label="(Identifier,ret)"];
"1000266" [label="(Call,&tmp)"];
"1000270" [label="(Call,ret == 0)"];
"1000150" [label="(Call,tmp.nentries >= ((INT_MAX - sizeof(struct ebt_table_info)) /\n\t\t\tNR_CPUS - SMP_CACHE_BYTES) / sizeof(struct ebt_counter))"];
"1000151" [label="(Call,tmp.nentries)"];
"1000192" [label="(Call,countersize = COUNTER_OFFSET(tmp.nentries) * nr_cpu_ids)"];
"1000216" [label="(Call,memset(newinfo->counters, 0, countersize))"];
"1000257" [label="(Call,ret = -EFAULT)"];
"1000209" [label="(Call,!newinfo)"];
"1000275" [label="(JumpTarget,free_entries:)"];
"1000112" [label="(Call,copy_from_user(&tmp, user, sizeof(tmp)))"];
"1000274" [label="(Identifier,ret)"];
"1000202" [label="(Call,vmalloc(sizeof(*newinfo) + countersize))"];
"1000149" [label="(ControlStructure,if (tmp.nentries >= ((INT_MAX - sizeof(struct ebt_table_info)) /\n\t\t\tNR_CPUS - SMP_CACHE_BYTES) / sizeof(struct ebt_counter)))"];
"1000193" [label="(Identifier,countersize)"];
"1000271" [label="(Identifier,ret)"];
"1000196" [label="(Call,tmp.nentries)"];
"1000199" [label="(Identifier,nr_cpu_ids)"];
"1000102" [label="(MethodParameterIn,struct net *net)"];
"1000201" [label="(Identifier,newinfo)"];
"1000263" [label="(Identifier,ret)"];
"1000158" [label="(Identifier,INT_MAX)"];
"1000167" [label="(Identifier,ENOMEM)"];
"1000236" [label="(Call,ret = -ENOMEM)"];
"1000285" [label="(MethodReturn,static int)"];
"1000269" [label="(ControlStructure,if (ret == 0))"];
"1000171" [label="(Identifier,tmp)"];
"1000264" [label="(Call,do_replace_finish(net, &tmp, newinfo))"];
"1000159" [label="(Call,sizeof(struct ebt_table_info))"];
"1000208" [label="(ControlStructure,if (!newinfo))"];
"1000213" [label="(Identifier,ENOMEM)"];
"1000194" [label="(Call,COUNTER_OFFSET(tmp.nentries) * nr_cpu_ids)"];
"1000262" [label="(Call,ret = do_replace_finish(net, &tmp, newinfo))"];
"1000210" [label="(Identifier,newinfo)"];
"1000215" [label="(Identifier,countersize)"];
"1000202" -> "1000200"  [label="AST: "];
"1000202" -> "1000203"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000200" -> "1000202"  [label="CFG: "];
"1000202" -> "1000285"  [label="DDG: sizeof(*newinfo) + countersize"];
"1000202" -> "1000200"  [label="DDG: sizeof(*newinfo) + countersize"];
"1000192" -> "1000202"  [label="DDG: countersize"];
"1000192" -> "1000105"  [label="AST: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000194" -> "1000192"  [label="AST: "];
"1000201" -> "1000192"  [label="CFG: "];
"1000192" -> "1000285"  [label="DDG: COUNTER_OFFSET(tmp.nentries) * nr_cpu_ids"];
"1000194" -> "1000192"  [label="DDG: COUNTER_OFFSET(tmp.nentries)"];
"1000194" -> "1000192"  [label="DDG: nr_cpu_ids"];
"1000192" -> "1000203"  [label="DDG: countersize"];
"1000192" -> "1000216"  [label="DDG: countersize"];
"1000194" -> "1000199"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000199" -> "1000194"  [label="AST: "];
"1000194" -> "1000285"  [label="DDG: COUNTER_OFFSET(tmp.nentries)"];
"1000194" -> "1000285"  [label="DDG: nr_cpu_ids"];
"1000195" -> "1000194"  [label="DDG: tmp.nentries"];
"1000195" -> "1000196"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000199" -> "1000195"  [label="CFG: "];
"1000195" -> "1000285"  [label="DDG: tmp.nentries"];
"1000150" -> "1000195"  [label="DDG: tmp.nentries"];
"1000150" -> "1000149"  [label="AST: "];
"1000150" -> "1000154"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000154" -> "1000150"  [label="AST: "];
"1000167" -> "1000150"  [label="CFG: "];
"1000171" -> "1000150"  [label="CFG: "];
"1000150" -> "1000285"  [label="DDG: tmp.nentries"];
"1000150" -> "1000285"  [label="DDG: ((INT_MAX - sizeof(struct ebt_table_info)) /\n\t\t\tNR_CPUS - SMP_CACHE_BYTES) / sizeof(struct ebt_counter)"];
"1000150" -> "1000285"  [label="DDG: tmp.nentries >= ((INT_MAX - sizeof(struct ebt_table_info)) /\n\t\t\tNR_CPUS - SMP_CACHE_BYTES) / sizeof(struct ebt_counter)"];
"1000154" -> "1000150"  [label="DDG: (INT_MAX - sizeof(struct ebt_table_info)) /\n\t\t\tNR_CPUS - SMP_CACHE_BYTES"];
"1000154" -> "1000163"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000163" -> "1000154"  [label="AST: "];
"1000154" -> "1000285"  [label="DDG: (INT_MAX - sizeof(struct ebt_table_info)) /\n\t\t\tNR_CPUS - SMP_CACHE_BYTES"];
"1000155" -> "1000154"  [label="DDG: (INT_MAX - sizeof(struct ebt_table_info)) /\n\t\t\tNR_CPUS"];
"1000155" -> "1000154"  [label="DDG: SMP_CACHE_BYTES"];
"1000155" -> "1000162"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000162" -> "1000155"  [label="AST: "];
"1000164" -> "1000155"  [label="CFG: "];
"1000155" -> "1000285"  [label="DDG: (INT_MAX - sizeof(struct ebt_table_info)) /\n\t\t\tNR_CPUS"];
"1000155" -> "1000285"  [label="DDG: SMP_CACHE_BYTES"];
"1000156" -> "1000155"  [label="DDG: INT_MAX - sizeof(struct ebt_table_info)"];
"1000156" -> "1000155"  [label="DDG: NR_CPUS"];
"1000156" -> "1000161"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000161" -> "1000156"  [label="AST: "];
"1000162" -> "1000156"  [label="CFG: "];
"1000156" -> "1000285"  [label="DDG: INT_MAX - sizeof(struct ebt_table_info)"];
"1000156" -> "1000285"  [label="DDG: NR_CPUS"];
"1000157" -> "1000156"  [label="DDG: INT_MAX"];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000161" -> "1000157"  [label="CFG: "];
"1000157" -> "1000285"  [label="DDG: INT_MAX"];
"1000157" -> "1000173"  [label="DDG: INT_MAX"];
"1000200" -> "1000105"  [label="AST: "];
"1000201" -> "1000200"  [label="AST: "];
"1000210" -> "1000200"  [label="CFG: "];
"1000200" -> "1000285"  [label="DDG: vmalloc(sizeof(*newinfo) + countersize)"];
"1000200" -> "1000209"  [label="DDG: newinfo"];
"1000209" -> "1000208"  [label="AST: "];
"1000209" -> "1000210"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000213" -> "1000209"  [label="CFG: "];
"1000215" -> "1000209"  [label="CFG: "];
"1000209" -> "1000285"  [label="DDG: !newinfo"];
"1000209" -> "1000285"  [label="DDG: newinfo"];
"1000209" -> "1000264"  [label="DDG: newinfo"];
"1000209" -> "1000281"  [label="DDG: newinfo"];
"1000264" -> "1000262"  [label="AST: "];
"1000264" -> "1000268"  [label="CFG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000266" -> "1000264"  [label="AST: "];
"1000268" -> "1000264"  [label="AST: "];
"1000262" -> "1000264"  [label="CFG: "];
"1000264" -> "1000285"  [label="DDG: net"];
"1000264" -> "1000285"  [label="DDG: newinfo"];
"1000264" -> "1000285"  [label="DDG: &tmp"];
"1000264" -> "1000262"  [label="DDG: net"];
"1000264" -> "1000262"  [label="DDG: &tmp"];
"1000264" -> "1000262"  [label="DDG: newinfo"];
"1000102" -> "1000264"  [label="DDG: net"];
"1000112" -> "1000264"  [label="DDG: &tmp"];
"1000264" -> "1000281"  [label="DDG: newinfo"];
"1000262" -> "1000105"  [label="AST: "];
"1000263" -> "1000262"  [label="AST: "];
"1000271" -> "1000262"  [label="CFG: "];
"1000262" -> "1000285"  [label="DDG: do_replace_finish(net, &tmp, newinfo)"];
"1000262" -> "1000270"  [label="DDG: ret"];
"1000270" -> "1000269"  [label="AST: "];
"1000270" -> "1000272"  [label="CFG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000272" -> "1000270"  [label="AST: "];
"1000274" -> "1000270"  [label="CFG: "];
"1000275" -> "1000270"  [label="CFG: "];
"1000270" -> "1000285"  [label="DDG: ret == 0"];
"1000270" -> "1000285"  [label="DDG: ret"];
"1000270" -> "1000273"  [label="DDG: ret"];
"1000270" -> "1000283"  [label="DDG: ret"];
"1000273" -> "1000269"  [label="AST: "];
"1000273" -> "1000274"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000285" -> "1000273"  [label="CFG: "];
"1000273" -> "1000285"  [label="DDG: <RET>"];
"1000274" -> "1000273"  [label="DDG: ret"];
"1000283" -> "1000105"  [label="AST: "];
"1000283" -> "1000284"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000285" -> "1000283"  [label="CFG: "];
"1000283" -> "1000285"  [label="DDG: <RET>"];
"1000284" -> "1000283"  [label="DDG: ret"];
"1000236" -> "1000283"  [label="DDG: ret"];
"1000257" -> "1000283"  [label="DDG: ret"];
"1000281" -> "1000105"  [label="AST: "];
"1000281" -> "1000282"  [label="CFG: "];
"1000282" -> "1000281"  [label="AST: "];
"1000284" -> "1000281"  [label="CFG: "];
"1000281" -> "1000285"  [label="DDG: newinfo"];
"1000281" -> "1000285"  [label="DDG: vfree(newinfo)"];
}
