digraph "0_radare2_bbb4af56003c1afdad67af0c4339267ca38b1017@pointer" {
"1000306" [label="(Call,op->id = data[0])"];
"1000267" [label="(MethodParameterIn,const ut8 *data)"];
"1000711" [label="(Call,data[0] == 0x49)"];
"1000918" [label="(Call,_6502_anal_esil_get_addr_pattern2 (op, data, addrbuf, buffsize, 'x'))"];
"1000705" [label="(Call,_6502_anal_esil_get_addr_pattern1 (op, data, addrbuf, buffsize))"];
"1001288" [label="(Call,data[2] << 8)"];
"1000310" [label="(Call,data[0])"];
"1001590" [label="(Call,_6502_anal_esil_get_addr_pattern3 (op, data, addrbuf, buffsize, 'x'))"];
"1001547" [label="(Call,_6502_anal_esil_get_addr_pattern1 (op, data, addrbuf, buffsize))"];
"1001108" [label="(Call,data[0] == 0xc0)"];
"1001018" [label="(Call,data[0] == 0xc9)"];
"1001729" [label="(MethodReturn,static int)"];
"1000267" [label="(MethodParameterIn,const ut8 *data)"];
"1001655" [label="(Call,_6502_anal_esil_pop (op, data[0]))"];
"1001177" [label="(Call,addr + data[1] + op->size)"];
"1000973" [label="(Call,_6502_anal_esil_inc_reg (op, data[0], \"+\"))"];
"1000479" [label="(Call,_6502_anal_esil_flags (op, data[0]))"];
"1000492" [label="(Call,_6502_anal_esil_get_addr_pattern3 (op, data, addrbuf, buffsize, 0))"];
"1001697" [label="(Call,_6502_anal_esil_mov (op, data[0]))"];
"1001463" [label="(Call,_6502_anal_esil_get_addr_pattern2 (op, data, addrbuf, buffsize, 'y'))"];
"1001511" [label="(Call,data[0] == 0xa0)"];
"1001101" [label="(Call,_6502_anal_esil_get_addr_pattern3 (op, data, addrbuf, buffsize, 0))"];
"1001429" [label="(Call,data[0] == 0xa9)"];
"1001504" [label="(Call,_6502_anal_esil_get_addr_pattern3 (op, data, addrbuf, buffsize, 'x'))"];
"1000570" [label="(Call,_6502_anal_esil_get_addr_pattern1 (op, data, addrbuf, buffsize))"];
"1001470" [label="(Call,data[0] == 0xa2)"];
"1000789" [label="(Call,data[0] == 0x4a)"];
"1000876" [label="(Call,data[0] == 0x6a)"];
"1000668" [label="(Call,data[0] == 0x29)"];
"1001056" [label="(Call,_6502_anal_esil_get_addr_pattern3 (op, data, addrbuf, buffsize, 0))"];
"1000269" [label="(Block,)"];
"1001626" [label="(Call,_6502_anal_esil_push (op, data[0]))"];
"1000746" [label="(Call,data[0] == 0x0a)"];
"1000944" [label="(Call,_6502_anal_esil_get_addr_pattern2 (op, data, addrbuf, buffsize, 'x'))"];
"1001423" [label="(Call,_6502_anal_esil_get_addr_pattern1 (op, data, addrbuf, buffsize))"];
"1001675" [label="(Call,_6502_anal_esil_mov (op, data[0]))"];
"1001324" [label="(Call,data[2] << 8)"];
"1000833" [label="(Call,data[0] == 0x2a)"];
"1000847" [label="(Call,_6502_anal_esil_get_addr_pattern2 (op, data, addrbuf, buffsize, 'x'))"];
"1000890" [label="(Call,_6502_anal_esil_get_addr_pattern2 (op, data, addrbuf, buffsize, 'x'))"];
"1001219" [label="(Call,_6502_anal_esil_ccall (op, data[0]))"];
"1001173" [label="(Call,op->jump = addr + data[1] + op->size)"];
"1001320" [label="(Call,data[1] | data[2] << 8)"];
"1000307" [label="(Call,op->id)"];
"1000306" [label="(Call,op->id = data[0])"];
"1001240" [label="(Call,data[1] | data[2] << 8)"];
"1001195" [label="(Call,256 - data[1])"];
"1000521" [label="(Call,_6502_anal_esil_get_addr_pattern1 (op, data, addrbuf, buffsize))"];
"1001568" [label="(Call,_6502_anal_esil_get_addr_pattern2 (op, data, addrbuf, buffsize, 'y'))"];
"1000662" [label="(Call,_6502_anal_esil_get_addr_pattern1 (op, data, addrbuf, buffsize))"];
"1001167" [label="(Call,data[1] <= 127)"];
"1001063" [label="(Call,data[0] == 0xe0)"];
"1000576" [label="(Call,data[0] == 0xe9)"];
"1000625" [label="(Call,data[0] == 0x09)"];
"1001284" [label="(Call,data[1] | data[2] << 8)"];
"1001012" [label="(Call,_6502_anal_esil_get_addr_pattern1 (op, data, addrbuf, buffsize))"];
"1000619" [label="(Call,_6502_anal_esil_get_addr_pattern1 (op, data, addrbuf, buffsize))"];
"1000316" [label="(Identifier,op)"];
"1000527" [label="(Call,data[0] == 0x69)"];
"1001244" [label="(Call,data[2] << 8)"];
"1001179" [label="(Call,data[1] + op->size)"];
"1000992" [label="(Call,_6502_anal_esil_inc_reg (op, data[0], \"-\"))"];
"1000760" [label="(Call,_6502_anal_esil_get_addr_pattern2 (op, data, addrbuf, buffsize, 'x'))"];
"1000803" [label="(Call,_6502_anal_esil_get_addr_pattern2 (op, data, addrbuf, buffsize, 'x'))"];
"1001719" [label="(Call,_6502_anal_esil_mov (op, data[0]))"];
"1000306" -> "1000269"  [label="AST: "];
"1000306" -> "1000310"  [label="CFG: "];
"1000307" -> "1000306"  [label="AST: "];
"1000310" -> "1000306"  [label="AST: "];
"1000316" -> "1000306"  [label="CFG: "];
"1000306" -> "1001729"  [label="DDG: data[0]"];
"1000306" -> "1001729"  [label="DDG: op->id"];
"1000267" -> "1000306"  [label="DDG: data"];
"1000267" -> "1000263"  [label="AST: "];
"1000267" -> "1001729"  [label="DDG: data"];
"1000267" -> "1000479"  [label="DDG: data"];
"1000267" -> "1000492"  [label="DDG: data"];
"1000267" -> "1000521"  [label="DDG: data"];
"1000267" -> "1000527"  [label="DDG: data"];
"1000267" -> "1000570"  [label="DDG: data"];
"1000267" -> "1000576"  [label="DDG: data"];
"1000267" -> "1000619"  [label="DDG: data"];
"1000267" -> "1000625"  [label="DDG: data"];
"1000267" -> "1000662"  [label="DDG: data"];
"1000267" -> "1000668"  [label="DDG: data"];
"1000267" -> "1000705"  [label="DDG: data"];
"1000267" -> "1000711"  [label="DDG: data"];
"1000267" -> "1000746"  [label="DDG: data"];
"1000267" -> "1000760"  [label="DDG: data"];
"1000267" -> "1000789"  [label="DDG: data"];
"1000267" -> "1000803"  [label="DDG: data"];
"1000267" -> "1000833"  [label="DDG: data"];
"1000267" -> "1000847"  [label="DDG: data"];
"1000267" -> "1000876"  [label="DDG: data"];
"1000267" -> "1000890"  [label="DDG: data"];
"1000267" -> "1000918"  [label="DDG: data"];
"1000267" -> "1000944"  [label="DDG: data"];
"1000267" -> "1000973"  [label="DDG: data"];
"1000267" -> "1000992"  [label="DDG: data"];
"1000267" -> "1001012"  [label="DDG: data"];
"1000267" -> "1001018"  [label="DDG: data"];
"1000267" -> "1001056"  [label="DDG: data"];
"1000267" -> "1001063"  [label="DDG: data"];
"1000267" -> "1001101"  [label="DDG: data"];
"1000267" -> "1001108"  [label="DDG: data"];
"1000267" -> "1001167"  [label="DDG: data"];
"1000267" -> "1001173"  [label="DDG: data"];
"1000267" -> "1001177"  [label="DDG: data"];
"1000267" -> "1001179"  [label="DDG: data"];
"1000267" -> "1001195"  [label="DDG: data"];
"1000267" -> "1001219"  [label="DDG: data"];
"1000267" -> "1001240"  [label="DDG: data"];
"1000267" -> "1001244"  [label="DDG: data"];
"1000267" -> "1001284"  [label="DDG: data"];
"1000267" -> "1001288"  [label="DDG: data"];
"1000267" -> "1001320"  [label="DDG: data"];
"1000267" -> "1001324"  [label="DDG: data"];
"1000267" -> "1001423"  [label="DDG: data"];
"1000267" -> "1001429"  [label="DDG: data"];
"1000267" -> "1001463"  [label="DDG: data"];
"1000267" -> "1001470"  [label="DDG: data"];
"1000267" -> "1001504"  [label="DDG: data"];
"1000267" -> "1001511"  [label="DDG: data"];
"1000267" -> "1001547"  [label="DDG: data"];
"1000267" -> "1001568"  [label="DDG: data"];
"1000267" -> "1001590"  [label="DDG: data"];
"1000267" -> "1001626"  [label="DDG: data"];
"1000267" -> "1001655"  [label="DDG: data"];
"1000267" -> "1001675"  [label="DDG: data"];
"1000267" -> "1001697"  [label="DDG: data"];
"1000267" -> "1001719"  [label="DDG: data"];
}
