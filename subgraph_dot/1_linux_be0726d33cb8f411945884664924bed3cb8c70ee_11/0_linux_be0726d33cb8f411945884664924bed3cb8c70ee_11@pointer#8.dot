digraph "0_linux_be0726d33cb8f411945884664924bed3cb8c70ee_11@pointer" {
"1000158" [label="(Call,unlock_buffer(new_bh))"];
"1000147" [label="(Call,ea_bdebug(new_bh, \"reusing block\"))"];
"1000138" [label="(Call,new_bh == old_bh)"];
"1000129" [label="(Call,new_bh = ext2_xattr_cache_find(inode, header))"];
"1000131" [label="(Call,ext2_xattr_cache_find(inode, header))"];
"1000111" [label="(MethodParameterIn,struct inode *inode)"];
"1000113" [label="(MethodParameterIn,struct ext2_xattr_header *header)"];
"1000112" [label="(MethodParameterIn,struct buffer_head *old_bh)"];
"1000411" [label="(Call,brelse(new_bh))"];
"1000405" [label="(Call,HDR(old_bh))"];
"1000143" [label="(Identifier,new_bh)"];
"1000315" [label="(Call,new_bh != old_bh)"];
"1000146" [label="(Block,)"];
"1000148" [label="(Identifier,new_bh)"];
"1000182" [label="(Call,header == HDR(old_bh))"];
"1000140" [label="(Identifier,old_bh)"];
"1000129" [label="(Call,new_bh = ext2_xattr_cache_find(inode, header))"];
"1000159" [label="(Identifier,new_bh)"];
"1000152" [label="(Call,dquot_alloc_block(inode, 1))"];
"1000396" [label="(Call,mark_inode_dirty(inode))"];
"1000139" [label="(Identifier,new_bh)"];
"1000208" [label="(Call,ext2_new_block(inode, goal, &error))"];
"1000377" [label="(Call,bforget(old_bh))"];
"1000364" [label="(Call,ea_bdebug(old_bh, \"freeing\"))"];
"1000130" [label="(Identifier,new_bh)"];
"1000393" [label="(Call,dquot_free_block_nodirty(inode, 1))"];
"1000384" [label="(Call,HDR(old_bh))"];
"1000332" [label="(Call,old_bh && old_bh != new_bh)"];
"1000216" [label="(Call,ea_idebug(inode, \"creating block %d\", block))"];
"1000398" [label="(Call,mark_buffer_dirty(old_bh))"];
"1000114" [label="(Block,)"];
"1000319" [label="(Call,dquot_free_block_nodirty(inode, 1))"];
"1000301" [label="(Call,sync_inode_metadata(inode, 1))"];
"1000367" [label="(Call,ext2_free_blocks(inode, old_bh->b_blocknr, 1))"];
"1000262" [label="(Call,IS_SYNC(inode))"];
"1000164" [label="(Call,HDR(new_bh))"];
"1000111" [label="(MethodParameterIn,struct inode *inode)"];
"1000373" [label="(Call,mark_inode_dirty(inode))"];
"1000187" [label="(Call,new_bh = old_bh)"];
"1000276" [label="(Call,buffer_uptodate(new_bh))"];
"1000151" [label="(Identifier,error)"];
"1000149" [label="(Literal,\"reusing block\")"];
"1000411" [label="(Call,brelse(new_bh))"];
"1000128" [label="(Block,)"];
"1000131" [label="(Call,ext2_xattr_cache_find(inode, header))"];
"1000142" [label="(Call,ea_bdebug(new_bh, \"keeping this block\"))"];
"1000230" [label="(Call,ext2_free_blocks(inode, block, 1))"];
"1000234" [label="(Call,mark_inode_dirty(inode))"];
"1000408" [label="(Call,unlock_buffer(old_bh))"];
"1000135" [label="(Identifier,new_bh)"];
"1000349" [label="(Call,lock_buffer(old_bh))"];
"1000400" [label="(Call,ea_bdebug(old_bh, \"refcount now=%d\",\n\t\t\t\tle32_to_cpu(HDR(old_bh)->h_refcount)))"];
"1000322" [label="(Call,mark_inode_dirty(inode))"];
"1000414" [label="(Identifier,error)"];
"1000137" [label="(ControlStructure,if (new_bh == old_bh))"];
"1000160" [label="(ControlStructure,goto cleanup;)"];
"1000243" [label="(Call,memcpy(new_bh->b_data, header, new_bh->b_size))"];
"1000112" [label="(MethodParameterIn,struct buffer_head *old_bh)"];
"1000326" [label="(Call,mark_inode_dirty(inode))"];
"1000313" [label="(Call,new_bh && new_bh != old_bh)"];
"1000180" [label="(Call,old_bh && header == HDR(old_bh))"];
"1000158" [label="(Call,unlock_buffer(new_bh))"];
"1000132" [label="(Identifier,inode)"];
"1000375" [label="(Call,get_bh(old_bh))"];
"1000227" [label="(Call,!new_bh)"];
"1000202" [label="(Call,EXT2_I(inode))"];
"1000412" [label="(Identifier,new_bh)"];
"1000133" [label="(Identifier,header)"];
"1000184" [label="(Call,HDR(old_bh))"];
"1000354" [label="(Call,HDR(old_bh))"];
"1000138" [label="(Call,new_bh == old_bh)"];
"1000147" [label="(Call,ea_bdebug(new_bh, \"reusing block\"))"];
"1000281" [label="(Call,EXT2_I(inode))"];
"1000296" [label="(Call,IS_SYNC(inode))"];
"1000273" [label="(Call,buffer_req(new_bh))"];
"1000113" [label="(MethodParameterIn,struct ext2_xattr_header *header)"];
"1000415" [label="(MethodReturn,RET)"];
"1000157" [label="(Block,)"];
"1000334" [label="(Call,old_bh != new_bh)"];
"1000158" -> "1000157"  [label="AST: "];
"1000158" -> "1000159"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="CFG: "];
"1000158" -> "1000415"  [label="DDG: "];
"1000147" -> "1000158"  [label="DDG: "];
"1000158" -> "1000411"  [label="DDG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000151" -> "1000147"  [label="CFG: "];
"1000147" -> "1000415"  [label="DDG: "];
"1000138" -> "1000147"  [label="DDG: "];
"1000147" -> "1000164"  [label="DDG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000143" -> "1000138"  [label="CFG: "];
"1000148" -> "1000138"  [label="CFG: "];
"1000138" -> "1000415"  [label="DDG: "];
"1000138" -> "1000415"  [label="DDG: "];
"1000129" -> "1000138"  [label="DDG: "];
"1000112" -> "1000138"  [label="DDG: "];
"1000138" -> "1000142"  [label="DDG: "];
"1000138" -> "1000315"  [label="DDG: "];
"1000138" -> "1000332"  [label="DDG: "];
"1000138" -> "1000334"  [label="DDG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000129"  [label="AST: "];
"1000135" -> "1000129"  [label="CFG: "];
"1000129" -> "1000415"  [label="DDG: "];
"1000131" -> "1000129"  [label="DDG: "];
"1000131" -> "1000129"  [label="DDG: "];
"1000129" -> "1000411"  [label="DDG: "];
"1000131" -> "1000133"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="AST: "];
"1000131" -> "1000415"  [label="DDG: "];
"1000111" -> "1000131"  [label="DDG: "];
"1000113" -> "1000131"  [label="DDG: "];
"1000131" -> "1000152"  [label="DDG: "];
"1000131" -> "1000182"  [label="DDG: "];
"1000131" -> "1000202"  [label="DDG: "];
"1000131" -> "1000243"  [label="DDG: "];
"1000131" -> "1000262"  [label="DDG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000415"  [label="DDG: "];
"1000111" -> "1000152"  [label="DDG: "];
"1000111" -> "1000202"  [label="DDG: "];
"1000111" -> "1000208"  [label="DDG: "];
"1000111" -> "1000216"  [label="DDG: "];
"1000111" -> "1000230"  [label="DDG: "];
"1000111" -> "1000234"  [label="DDG: "];
"1000111" -> "1000262"  [label="DDG: "];
"1000111" -> "1000281"  [label="DDG: "];
"1000111" -> "1000296"  [label="DDG: "];
"1000111" -> "1000301"  [label="DDG: "];
"1000111" -> "1000319"  [label="DDG: "];
"1000111" -> "1000322"  [label="DDG: "];
"1000111" -> "1000326"  [label="DDG: "];
"1000111" -> "1000367"  [label="DDG: "];
"1000111" -> "1000373"  [label="DDG: "];
"1000111" -> "1000393"  [label="DDG: "];
"1000111" -> "1000396"  [label="DDG: "];
"1000113" -> "1000110"  [label="AST: "];
"1000113" -> "1000415"  [label="DDG: "];
"1000113" -> "1000182"  [label="DDG: "];
"1000113" -> "1000243"  [label="DDG: "];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000415"  [label="DDG: "];
"1000112" -> "1000180"  [label="DDG: "];
"1000112" -> "1000184"  [label="DDG: "];
"1000112" -> "1000187"  [label="DDG: "];
"1000112" -> "1000315"  [label="DDG: "];
"1000112" -> "1000332"  [label="DDG: "];
"1000112" -> "1000334"  [label="DDG: "];
"1000112" -> "1000349"  [label="DDG: "];
"1000112" -> "1000354"  [label="DDG: "];
"1000112" -> "1000364"  [label="DDG: "];
"1000112" -> "1000375"  [label="DDG: "];
"1000112" -> "1000377"  [label="DDG: "];
"1000112" -> "1000384"  [label="DDG: "];
"1000112" -> "1000398"  [label="DDG: "];
"1000112" -> "1000400"  [label="DDG: "];
"1000112" -> "1000405"  [label="DDG: "];
"1000112" -> "1000408"  [label="DDG: "];
"1000411" -> "1000114"  [label="AST: "];
"1000411" -> "1000412"  [label="CFG: "];
"1000412" -> "1000411"  [label="AST: "];
"1000414" -> "1000411"  [label="CFG: "];
"1000411" -> "1000415"  [label="DDG: "];
"1000411" -> "1000415"  [label="DDG: "];
"1000334" -> "1000411"  [label="DDG: "];
"1000227" -> "1000411"  [label="DDG: "];
"1000273" -> "1000411"  [label="DDG: "];
"1000276" -> "1000411"  [label="DDG: "];
"1000313" -> "1000411"  [label="DDG: "];
}
