digraph "0_libndp_a4892df306e0532487f1634ba6d4c6d4bb381c7f_1@pointer" {
"1000118" [label="(Call,ndp_msg_payload_maxlen(msg))"];
"1000111" [label="(Call,!msg)"];
"1000107" [label="(Call,msg = ndp_msg_alloc())"];
"1000116" [label="(Call,len = ndp_msg_payload_maxlen(msg))"];
"1000159" [label="(Call,len < sizeof(*msg->icmp6_hdr))"];
"1000167" [label="(Call,warn(ndp, \"rcvd icmp6 packet too short (%luB)\", len))"];
"1000195" [label="(Call,ndp_msg_payload_len_set(msg, len))"];
"1000200" [label="(Call,ndp_msg_check_valid(msg))"];
"1000199" [label="(Call,!ndp_msg_check_valid(msg))"];
"1000220" [label="(Call,ndp_msg_check_opts(msg))"];
"1000219" [label="(Call,!ndp_msg_check_opts(msg))"];
"1000229" [label="(Call,ndp_call_handlers(ndp, msg))"];
"1000227" [label="(Call,err = ndp_call_handlers(ndp, msg))"];
"1000235" [label="(Return,return err;)"];
"1000233" [label="(Call,ndp_msg_destroy(msg))"];
"1000210" [label="(Call,dbg(ndp, \"rcvd %s, len: %zuB\",\n\t\t ndp_msg_type_info(msg_type)->strabbr, len))"];
"1000192" [label="(Call,ndp_msg_init(msg, msg_type))"];
"1000214" [label="(Call,ndp_msg_type_info(msg_type))"];
"1000224" [label="(Identifier,err)"];
"1000116" [label="(Call,len = ndp_msg_payload_maxlen(msg))"];
"1000204" [label="(Identifier,ndp)"];
"1000227" [label="(Call,err = ndp_call_handlers(ndp, msg))"];
"1000161" [label="(Call,sizeof(*msg->icmp6_hdr))"];
"1000194" [label="(Identifier,msg_type)"];
"1000192" [label="(Call,ndp_msg_init(msg, msg_type))"];
"1000220" [label="(Call,ndp_msg_check_opts(msg))"];
"1000168" [label="(Identifier,ndp)"];
"1000218" [label="(ControlStructure,if (!ndp_msg_check_opts(msg)))"];
"1000200" [label="(Call,ndp_msg_check_valid(msg))"];
"1000118" [label="(Call,ndp_msg_payload_maxlen(msg))"];
"1000210" [label="(Call,dbg(ndp, \"rcvd %s, len: %zuB\",\n\t\t ndp_msg_type_info(msg_type)->strabbr, len))"];
"1000195" [label="(Call,ndp_msg_payload_len_set(msg, len))"];
"1000166" [label="(Block,)"];
"1000115" [label="(Identifier,ENOMEM)"];
"1000212" [label="(Literal,\"rcvd %s, len: %zuB\")"];
"1000119" [label="(Identifier,msg)"];
"1000230" [label="(Identifier,ndp)"];
"1000159" [label="(Call,len < sizeof(*msg->icmp6_hdr))"];
"1000198" [label="(ControlStructure,if (!ndp_msg_check_valid(msg)))"];
"1000120" [label="(Call,err = myrecvfrom6(ndp->sock, msg->buf, &len, 0,\n\t\t\t  &msg->addrto, &msg->ifindex))"];
"1000110" [label="(ControlStructure,if (!msg))"];
"1000219" [label="(Call,!ndp_msg_check_opts(msg))"];
"1000211" [label="(Identifier,ndp)"];
"1000171" [label="(Call,err = 0)"];
"1000234" [label="(Identifier,msg)"];
"1000217" [label="(Identifier,len)"];
"1000214" [label="(Call,ndp_msg_type_info(msg_type))"];
"1000108" [label="(Identifier,msg)"];
"1000197" [label="(Identifier,len)"];
"1000229" [label="(Call,ndp_call_handlers(ndp, msg))"];
"1000201" [label="(Identifier,msg)"];
"1000236" [label="(Identifier,err)"];
"1000117" [label="(Identifier,len)"];
"1000176" [label="(Identifier,err)"];
"1000213" [label="(Call,ndp_msg_type_info(msg_type)->strabbr)"];
"1000233" [label="(Call,ndp_msg_destroy(msg))"];
"1000107" [label="(Call,msg = ndp_msg_alloc())"];
"1000170" [label="(Identifier,len)"];
"1000121" [label="(Identifier,err)"];
"1000112" [label="(Identifier,msg)"];
"1000111" [label="(Call,!msg)"];
"1000235" [label="(Return,return err;)"];
"1000101" [label="(MethodParameterIn,struct ndp *ndp)"];
"1000221" [label="(Identifier,msg)"];
"1000231" [label="(Identifier,msg)"];
"1000215" [label="(Identifier,msg_type)"];
"1000237" [label="(MethodReturn,static int)"];
"1000158" [label="(ControlStructure,if (len < sizeof(*msg->icmp6_hdr)))"];
"1000196" [label="(Identifier,msg)"];
"1000206" [label="(Call,err = 0)"];
"1000228" [label="(Identifier,err)"];
"1000102" [label="(Block,)"];
"1000109" [label="(Call,ndp_msg_alloc())"];
"1000223" [label="(Call,err = 0)"];
"1000232" [label="(JumpTarget,free_msg:)"];
"1000188" [label="(Call,err = 0)"];
"1000172" [label="(Identifier,err)"];
"1000216" [label="(FieldIdentifier,strabbr)"];
"1000160" [label="(Identifier,len)"];
"1000147" [label="(Call,dbg(ndp, \"rcvd from: %s, ifindex: %u\",\n\t\t str_in6_addr(&msg->addrto), msg->ifindex))"];
"1000193" [label="(Identifier,msg)"];
"1000167" [label="(Call,warn(ndp, \"rcvd icmp6 packet too short (%luB)\", len))"];
"1000199" [label="(Call,!ndp_msg_check_valid(msg))"];
"1000169" [label="(Literal,\"rcvd icmp6 packet too short (%luB)\")"];
"1000118" -> "1000116"  [label="AST: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000118" -> "1000116"  [label="DDG: "];
"1000111" -> "1000118"  [label="DDG: "];
"1000118" -> "1000192"  [label="DDG: "];
"1000118" -> "1000233"  [label="DDG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000112"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000115" -> "1000111"  [label="CFG: "];
"1000117" -> "1000111"  [label="CFG: "];
"1000111" -> "1000237"  [label="DDG: "];
"1000111" -> "1000237"  [label="DDG: "];
"1000107" -> "1000111"  [label="DDG: "];
"1000107" -> "1000102"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000112" -> "1000107"  [label="CFG: "];
"1000107" -> "1000237"  [label="DDG: "];
"1000116" -> "1000102"  [label="AST: "];
"1000117" -> "1000116"  [label="AST: "];
"1000121" -> "1000116"  [label="CFG: "];
"1000116" -> "1000237"  [label="DDG: "];
"1000116" -> "1000237"  [label="DDG: "];
"1000116" -> "1000159"  [label="DDG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000159" -> "1000161"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000161" -> "1000159"  [label="AST: "];
"1000168" -> "1000159"  [label="CFG: "];
"1000176" -> "1000159"  [label="CFG: "];
"1000159" -> "1000237"  [label="DDG: "];
"1000159" -> "1000237"  [label="DDG: "];
"1000159" -> "1000167"  [label="DDG: "];
"1000159" -> "1000195"  [label="DDG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000167" -> "1000170"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000169" -> "1000167"  [label="AST: "];
"1000170" -> "1000167"  [label="AST: "];
"1000172" -> "1000167"  [label="CFG: "];
"1000167" -> "1000237"  [label="DDG: "];
"1000167" -> "1000237"  [label="DDG: "];
"1000167" -> "1000237"  [label="DDG: "];
"1000147" -> "1000167"  [label="DDG: "];
"1000101" -> "1000167"  [label="DDG: "];
"1000195" -> "1000102"  [label="AST: "];
"1000195" -> "1000197"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000197" -> "1000195"  [label="AST: "];
"1000201" -> "1000195"  [label="CFG: "];
"1000195" -> "1000237"  [label="DDG: "];
"1000195" -> "1000237"  [label="DDG: "];
"1000192" -> "1000195"  [label="DDG: "];
"1000195" -> "1000200"  [label="DDG: "];
"1000195" -> "1000210"  [label="DDG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000200" -> "1000201"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000199" -> "1000200"  [label="CFG: "];
"1000200" -> "1000199"  [label="DDG: "];
"1000200" -> "1000220"  [label="DDG: "];
"1000200" -> "1000233"  [label="DDG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000204" -> "1000199"  [label="CFG: "];
"1000211" -> "1000199"  [label="CFG: "];
"1000199" -> "1000237"  [label="DDG: "];
"1000199" -> "1000237"  [label="DDG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000220" -> "1000221"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000219" -> "1000220"  [label="CFG: "];
"1000220" -> "1000219"  [label="DDG: "];
"1000220" -> "1000229"  [label="DDG: "];
"1000220" -> "1000233"  [label="DDG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000224" -> "1000219"  [label="CFG: "];
"1000228" -> "1000219"  [label="CFG: "];
"1000219" -> "1000237"  [label="DDG: "];
"1000219" -> "1000237"  [label="DDG: "];
"1000229" -> "1000227"  [label="AST: "];
"1000229" -> "1000231"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000231" -> "1000229"  [label="AST: "];
"1000227" -> "1000229"  [label="CFG: "];
"1000229" -> "1000237"  [label="DDG: "];
"1000229" -> "1000227"  [label="DDG: "];
"1000229" -> "1000227"  [label="DDG: "];
"1000210" -> "1000229"  [label="DDG: "];
"1000101" -> "1000229"  [label="DDG: "];
"1000229" -> "1000233"  [label="DDG: "];
"1000227" -> "1000102"  [label="AST: "];
"1000228" -> "1000227"  [label="AST: "];
"1000232" -> "1000227"  [label="CFG: "];
"1000227" -> "1000237"  [label="DDG: "];
"1000227" -> "1000237"  [label="DDG: "];
"1000227" -> "1000235"  [label="DDG: "];
"1000235" -> "1000102"  [label="AST: "];
"1000235" -> "1000236"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="CFG: "];
"1000235" -> "1000237"  [label="DDG: "];
"1000236" -> "1000235"  [label="DDG: "];
"1000171" -> "1000235"  [label="DDG: "];
"1000120" -> "1000235"  [label="DDG: "];
"1000206" -> "1000235"  [label="DDG: "];
"1000223" -> "1000235"  [label="DDG: "];
"1000188" -> "1000235"  [label="DDG: "];
"1000233" -> "1000102"  [label="AST: "];
"1000233" -> "1000234"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000236" -> "1000233"  [label="CFG: "];
"1000233" -> "1000237"  [label="DDG: "];
"1000233" -> "1000237"  [label="DDG: "];
"1000210" -> "1000102"  [label="AST: "];
"1000210" -> "1000217"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="AST: "];
"1000213" -> "1000210"  [label="AST: "];
"1000217" -> "1000210"  [label="AST: "];
"1000221" -> "1000210"  [label="CFG: "];
"1000210" -> "1000237"  [label="DDG: "];
"1000210" -> "1000237"  [label="DDG: "];
"1000210" -> "1000237"  [label="DDG: "];
"1000210" -> "1000237"  [label="DDG: "];
"1000147" -> "1000210"  [label="DDG: "];
"1000101" -> "1000210"  [label="DDG: "];
"1000192" -> "1000102"  [label="AST: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000194" -> "1000192"  [label="AST: "];
"1000196" -> "1000192"  [label="CFG: "];
"1000192" -> "1000237"  [label="DDG: "];
"1000192" -> "1000237"  [label="DDG: "];
"1000192" -> "1000214"  [label="DDG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000214" -> "1000215"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000216" -> "1000214"  [label="CFG: "];
"1000214" -> "1000237"  [label="DDG: "];
}
