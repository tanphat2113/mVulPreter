digraph "1_libndp_a4892df306e0532487f1634ba6d4c6d4bb381c7f_1@del" {
"1000150" [label="(Call,str_in6_addr(&msg->addrto))"];
"1000122" [label="(Call,myrecvfrom6(ndp->sock, msg->buf, &len, 0,\n\t\t\t  &msg->addrto, &msg->ifindex))"];
"1000147" [label="(Call,dbg(ndp, \"rcvd from: %s, ifindex: %u\",\n\t\t str_in6_addr(&msg->addrto), msg->ifindex))"];
"1000167" [label="(Call,warn(ndp, \"rcvd icmp6 packet too short (%luB)\", len))"];
"1000203" [label="(Call,warn(ndp, \"rcvd invalid ND message\"))"];
"1000210" [label="(Call,dbg(ndp, \"rcvd %s, len: %zuB\",\n\t\t ndp_msg_type_info(msg_type)->strabbr, len))"];
"1000229" [label="(Call,ndp_call_handlers(ndp, msg))"];
"1000227" [label="(Call,err = ndp_call_handlers(ndp, msg))"];
"1000235" [label="(Return,return err;)"];
"1000233" [label="(Call,ndp_msg_destroy(msg))"];
"1000234" [label="(Identifier,msg)"];
"1000156" [label="(Identifier,msg)"];
"1000203" [label="(Call,warn(ndp, \"rcvd invalid ND message\"))"];
"1000220" [label="(Call,ndp_msg_check_opts(msg))"];
"1000122" [label="(Call,myrecvfrom6(ndp->sock, msg->buf, &len, 0,\n\t\t\t  &msg->addrto, &msg->ifindex))"];
"1000148" [label="(Identifier,ndp)"];
"1000204" [label="(Identifier,ndp)"];
"1000231" [label="(Identifier,msg)"];
"1000233" [label="(Call,ndp_msg_destroy(msg))"];
"1000136" [label="(Call,&msg->ifindex)"];
"1000102" [label="(Block,)"];
"1000212" [label="(Literal,\"rcvd %s, len: %zuB\")"];
"1000150" [label="(Call,str_in6_addr(&msg->addrto))"];
"1000171" [label="(Call,err = 0)"];
"1000147" [label="(Call,dbg(ndp, \"rcvd from: %s, ifindex: %u\",\n\t\t str_in6_addr(&msg->addrto), msg->ifindex))"];
"1000200" [label="(Call,ndp_msg_check_valid(msg))"];
"1000217" [label="(Identifier,len)"];
"1000151" [label="(Call,&msg->addrto)"];
"1000160" [label="(Identifier,len)"];
"1000213" [label="(Call,ndp_msg_type_info(msg_type)->strabbr)"];
"1000210" [label="(Call,dbg(ndp, \"rcvd %s, len: %zuB\",\n\t\t ndp_msg_type_info(msg_type)->strabbr, len))"];
"1000232" [label="(JumpTarget,free_msg:)"];
"1000131" [label="(Literal,0)"];
"1000207" [label="(Identifier,err)"];
"1000188" [label="(Call,err = 0)"];
"1000205" [label="(Literal,\"rcvd invalid ND message\")"];
"1000169" [label="(Literal,\"rcvd icmp6 packet too short (%luB)\")"];
"1000129" [label="(Call,&len)"];
"1000237" [label="(MethodReturn,static int)"];
"1000132" [label="(Call,&msg->addrto)"];
"1000120" [label="(Call,err = myrecvfrom6(ndp->sock, msg->buf, &len, 0,\n\t\t\t  &msg->addrto, &msg->ifindex))"];
"1000170" [label="(Identifier,len)"];
"1000159" [label="(Call,len < sizeof(*msg->icmp6_hdr))"];
"1000223" [label="(Call,err = 0)"];
"1000123" [label="(Call,ndp->sock)"];
"1000195" [label="(Call,ndp_msg_payload_len_set(msg, len))"];
"1000166" [label="(Block,)"];
"1000229" [label="(Call,ndp_call_handlers(ndp, msg))"];
"1000101" [label="(MethodParameterIn,struct ndp *ndp)"];
"1000118" [label="(Call,ndp_msg_payload_maxlen(msg))"];
"1000172" [label="(Identifier,err)"];
"1000126" [label="(Call,msg->buf)"];
"1000235" [label="(Return,return err;)"];
"1000211" [label="(Identifier,ndp)"];
"1000202" [label="(Block,)"];
"1000228" [label="(Identifier,err)"];
"1000167" [label="(Call,warn(ndp, \"rcvd icmp6 packet too short (%luB)\", len))"];
"1000149" [label="(Literal,\"rcvd from: %s, ifindex: %u\")"];
"1000221" [label="(Identifier,msg)"];
"1000168" [label="(Identifier,ndp)"];
"1000206" [label="(Call,err = 0)"];
"1000227" [label="(Call,err = ndp_call_handlers(ndp, msg))"];
"1000155" [label="(Call,msg->ifindex)"];
"1000236" [label="(Identifier,err)"];
"1000230" [label="(Identifier,ndp)"];
"1000150" -> "1000147"  [label="AST: "];
"1000150" -> "1000151"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000156" -> "1000150"  [label="CFG: "];
"1000150" -> "1000237"  [label="DDG: "];
"1000150" -> "1000147"  [label="DDG: "];
"1000122" -> "1000150"  [label="DDG: "];
"1000122" -> "1000120"  [label="AST: "];
"1000122" -> "1000136"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000126" -> "1000122"  [label="AST: "];
"1000129" -> "1000122"  [label="AST: "];
"1000131" -> "1000122"  [label="AST: "];
"1000132" -> "1000122"  [label="AST: "];
"1000136" -> "1000122"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000122" -> "1000237"  [label="DDG: "];
"1000122" -> "1000237"  [label="DDG: "];
"1000122" -> "1000237"  [label="DDG: "];
"1000122" -> "1000237"  [label="DDG: "];
"1000122" -> "1000237"  [label="DDG: "];
"1000122" -> "1000120"  [label="DDG: "];
"1000122" -> "1000120"  [label="DDG: "];
"1000122" -> "1000120"  [label="DDG: "];
"1000122" -> "1000120"  [label="DDG: "];
"1000122" -> "1000120"  [label="DDG: "];
"1000122" -> "1000120"  [label="DDG: "];
"1000122" -> "1000147"  [label="DDG: "];
"1000147" -> "1000102"  [label="AST: "];
"1000147" -> "1000155"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000155" -> "1000147"  [label="AST: "];
"1000160" -> "1000147"  [label="CFG: "];
"1000147" -> "1000237"  [label="DDG: "];
"1000147" -> "1000237"  [label="DDG: "];
"1000147" -> "1000237"  [label="DDG: "];
"1000147" -> "1000237"  [label="DDG: "];
"1000101" -> "1000147"  [label="DDG: "];
"1000147" -> "1000167"  [label="DDG: "];
"1000147" -> "1000203"  [label="DDG: "];
"1000147" -> "1000210"  [label="DDG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000167" -> "1000170"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000169" -> "1000167"  [label="AST: "];
"1000170" -> "1000167"  [label="AST: "];
"1000172" -> "1000167"  [label="CFG: "];
"1000167" -> "1000237"  [label="DDG: "];
"1000167" -> "1000237"  [label="DDG: "];
"1000167" -> "1000237"  [label="DDG: "];
"1000101" -> "1000167"  [label="DDG: "];
"1000159" -> "1000167"  [label="DDG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000203" -> "1000205"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000203"  [label="AST: "];
"1000207" -> "1000203"  [label="CFG: "];
"1000203" -> "1000237"  [label="DDG: "];
"1000203" -> "1000237"  [label="DDG: "];
"1000101" -> "1000203"  [label="DDG: "];
"1000210" -> "1000102"  [label="AST: "];
"1000210" -> "1000217"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="AST: "];
"1000213" -> "1000210"  [label="AST: "];
"1000217" -> "1000210"  [label="AST: "];
"1000221" -> "1000210"  [label="CFG: "];
"1000210" -> "1000237"  [label="DDG: "];
"1000210" -> "1000237"  [label="DDG: "];
"1000210" -> "1000237"  [label="DDG: "];
"1000210" -> "1000237"  [label="DDG: "];
"1000101" -> "1000210"  [label="DDG: "];
"1000195" -> "1000210"  [label="DDG: "];
"1000210" -> "1000229"  [label="DDG: "];
"1000229" -> "1000227"  [label="AST: "];
"1000229" -> "1000231"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000231" -> "1000229"  [label="AST: "];
"1000227" -> "1000229"  [label="CFG: "];
"1000229" -> "1000237"  [label="DDG: "];
"1000229" -> "1000227"  [label="DDG: "];
"1000229" -> "1000227"  [label="DDG: "];
"1000101" -> "1000229"  [label="DDG: "];
"1000220" -> "1000229"  [label="DDG: "];
"1000229" -> "1000233"  [label="DDG: "];
"1000227" -> "1000102"  [label="AST: "];
"1000228" -> "1000227"  [label="AST: "];
"1000232" -> "1000227"  [label="CFG: "];
"1000227" -> "1000237"  [label="DDG: "];
"1000227" -> "1000237"  [label="DDG: "];
"1000227" -> "1000235"  [label="DDG: "];
"1000235" -> "1000102"  [label="AST: "];
"1000235" -> "1000236"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="CFG: "];
"1000235" -> "1000237"  [label="DDG: "];
"1000236" -> "1000235"  [label="DDG: "];
"1000171" -> "1000235"  [label="DDG: "];
"1000120" -> "1000235"  [label="DDG: "];
"1000206" -> "1000235"  [label="DDG: "];
"1000223" -> "1000235"  [label="DDG: "];
"1000188" -> "1000235"  [label="DDG: "];
"1000233" -> "1000102"  [label="AST: "];
"1000233" -> "1000234"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000236" -> "1000233"  [label="CFG: "];
"1000233" -> "1000237"  [label="DDG: "];
"1000233" -> "1000237"  [label="DDG: "];
"1000118" -> "1000233"  [label="DDG: "];
"1000220" -> "1000233"  [label="DDG: "];
"1000200" -> "1000233"  [label="DDG: "];
}
