digraph "0_Android_8e7a2b4d13bff03973dbad2bfb88a04296140433_0@pointer" {
"1000328" [label="(Call,ALOGE(\"%s: Entry index %zu had bad alignment (address %p),\"\n \" expected alignment %zu\",\n                  __FUNCTION__, i, &entries[i], ENTRY_ALIGNMENT))"];
"1000307" [label="(Call,i < entry_count)"];
"1000310" [label="(Call,++i)"];
"1000304" [label="(Call,i = 0)"];
"1000292" [label="(Call,entry_count = metadata->entry_count)"];
"1000196" [label="(Call,metadata->entry_count > metadata->entry_capacity)"];
"1000321" [label="(Call,ALIGN_TO(&entries[i], ENTRY_ALIGNMENT))"];
"1000315" [label="(Call,(uintptr_t)&entries[i])"];
"1000327" [label="(Block,)"];
"1000292" [label="(Call,entry_count = metadata->entry_count)"];
"1000197" [label="(Call,metadata->entry_count)"];
"1000326" [label="(Identifier,ENTRY_ALIGNMENT)"];
"1000307" [label="(Call,i < entry_count)"];
"1000196" [label="(Call,metadata->entry_count > metadata->entry_capacity)"];
"1000330" [label="(Identifier,__FUNCTION__)"];
"1000321" [label="(Call,ALIGN_TO(&entries[i], ENTRY_ALIGNMENT))"];
"1000500" [label="(Identifier,OK)"];
"1000315" [label="(Call,(uintptr_t)&entries[i])"];
"1000311" [label="(Identifier,i)"];
"1000314" [label="(Call,(uintptr_t)&entries[i] != ALIGN_TO(&entries[i], ENTRY_ALIGNMENT))"];
"1000294" [label="(Call,metadata->entry_count)"];
"1000331" [label="(Identifier,i)"];
"1000332" [label="(Call,&entries[i])"];
"1000205" [label="(Literal,\"%s: Entry count (%\" PRIu32 \") should be <= entry capacity \"\n \"(%\" PRIu32 \")\")"];
"1000204" [label="(Call,ALOGE(\"%s: Entry count (%\" PRIu32 \") should be <= entry capacity \"\n \"(%\" PRIu32 \")\",\n              __FUNCTION__, metadata->entry_count, metadata->entry_capacity))"];
"1000305" [label="(Identifier,i)"];
"1000309" [label="(Identifier,entry_count)"];
"1000108" [label="(Block,)"];
"1000308" [label="(Identifier,i)"];
"1000216" [label="(Call,entries_end =\n        metadata->entries_start + metadata->entry_capacity)"];
"1000200" [label="(Call,metadata->entry_capacity)"];
"1000501" [label="(MethodReturn,int)"];
"1000299" [label="(Identifier,entries)"];
"1000217" [label="(Identifier,entries_end)"];
"1000293" [label="(Identifier,entry_count)"];
"1000304" [label="(Call,i = 0)"];
"1000322" [label="(Call,&entries[i])"];
"1000241" [label="(Call,metadata->entries_start + metadata->entry_capacity)"];
"1000329" [label="(Literal,\"%s: Entry index %zu had bad alignment (address %p),\"\n \" expected alignment %zu\")"];
"1000338" [label="(Identifier,ERROR)"];
"1000195" [label="(ControlStructure,if (metadata->entry_count > metadata->entry_capacity))"];
"1000238" [label="(Call,ALOGE(\"%s: Entry start + capacity (%\" PRIu32 \") should be <= data start \"\n \"(%\" PRIu32 \")\",\n               __FUNCTION__,\n (metadata->entries_start + metadata->entry_capacity),\n              metadata->data_start))"];
"1000306" [label="(Literal,0)"];
"1000218" [label="(Call,metadata->entries_start + metadata->entry_capacity)"];
"1000317" [label="(Call,&entries[i])"];
"1000336" [label="(Identifier,ENTRY_ALIGNMENT)"];
"1000328" [label="(Call,ALOGE(\"%s: Entry index %zu had bad alignment (address %p),\"\n \" expected alignment %zu\",\n                  __FUNCTION__, i, &entries[i], ENTRY_ALIGNMENT))"];
"1000352" [label="(Call,ALOGE(\"%s: Entry index %zu had a bad type %d\",\n                  __FUNCTION__, i, entry.type))"];
"1000389" [label="(Call,ALOGE(\"%s: Entry index %zu had tag type %d, but the type was %d\",\n                  __FUNCTION__, i, tag_type, entry.type))"];
"1000310" [label="(Call,++i)"];
"1000302" [label="(ControlStructure,for (size_t i = 0; i < entry_count; ++i))"];
"1000324" [label="(Identifier,entries)"];
"1000328" -> "1000327"  [label="AST: "];
"1000328" -> "1000336"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000330" -> "1000328"  [label="AST: "];
"1000331" -> "1000328"  [label="AST: "];
"1000332" -> "1000328"  [label="AST: "];
"1000336" -> "1000328"  [label="AST: "];
"1000338" -> "1000328"  [label="CFG: "];
"1000328" -> "1000501"  [label="DDG: "];
"1000328" -> "1000501"  [label="DDG: "];
"1000328" -> "1000501"  [label="DDG: "];
"1000328" -> "1000501"  [label="DDG: "];
"1000328" -> "1000501"  [label="DDG: "];
"1000307" -> "1000328"  [label="DDG: "];
"1000321" -> "1000328"  [label="DDG: "];
"1000321" -> "1000328"  [label="DDG: "];
"1000307" -> "1000302"  [label="AST: "];
"1000307" -> "1000309"  [label="CFG: "];
"1000308" -> "1000307"  [label="AST: "];
"1000309" -> "1000307"  [label="AST: "];
"1000316" -> "1000307"  [label="CFG: "];
"1000500" -> "1000307"  [label="CFG: "];
"1000307" -> "1000501"  [label="DDG: "];
"1000307" -> "1000501"  [label="DDG: "];
"1000307" -> "1000501"  [label="DDG: "];
"1000310" -> "1000307"  [label="DDG: "];
"1000304" -> "1000307"  [label="DDG: "];
"1000292" -> "1000307"  [label="DDG: "];
"1000307" -> "1000310"  [label="DDG: "];
"1000307" -> "1000352"  [label="DDG: "];
"1000307" -> "1000389"  [label="DDG: "];
"1000310" -> "1000302"  [label="AST: "];
"1000310" -> "1000311"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000308" -> "1000310"  [label="CFG: "];
"1000304" -> "1000302"  [label="AST: "];
"1000304" -> "1000306"  [label="CFG: "];
"1000305" -> "1000304"  [label="AST: "];
"1000306" -> "1000304"  [label="AST: "];
"1000308" -> "1000304"  [label="CFG: "];
"1000292" -> "1000108"  [label="AST: "];
"1000292" -> "1000294"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000294" -> "1000292"  [label="AST: "];
"1000299" -> "1000292"  [label="CFG: "];
"1000292" -> "1000501"  [label="DDG: "];
"1000196" -> "1000292"  [label="DDG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000196" -> "1000200"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000200" -> "1000196"  [label="AST: "];
"1000205" -> "1000196"  [label="CFG: "];
"1000217" -> "1000196"  [label="CFG: "];
"1000196" -> "1000501"  [label="DDG: "];
"1000196" -> "1000501"  [label="DDG: "];
"1000196" -> "1000204"  [label="DDG: "];
"1000196" -> "1000204"  [label="DDG: "];
"1000196" -> "1000216"  [label="DDG: "];
"1000196" -> "1000218"  [label="DDG: "];
"1000196" -> "1000238"  [label="DDG: "];
"1000196" -> "1000241"  [label="DDG: "];
"1000321" -> "1000314"  [label="AST: "];
"1000321" -> "1000326"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000326" -> "1000321"  [label="AST: "];
"1000314" -> "1000321"  [label="CFG: "];
"1000321" -> "1000501"  [label="DDG: "];
"1000321" -> "1000501"  [label="DDG: "];
"1000321" -> "1000315"  [label="DDG: "];
"1000321" -> "1000314"  [label="DDG: "];
"1000321" -> "1000314"  [label="DDG: "];
"1000315" -> "1000321"  [label="DDG: "];
"1000315" -> "1000314"  [label="AST: "];
"1000315" -> "1000317"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000317" -> "1000315"  [label="AST: "];
"1000324" -> "1000315"  [label="CFG: "];
"1000315" -> "1000314"  [label="DDG: "];
}
