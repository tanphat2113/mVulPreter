digraph "0_linux_b769f49463711205d57286e64cf535ed4daf59e9@API" {
"1000210" [label="(Call,i < left && !signal_pending(current))"];
"1000211" [label="(Call,i < left)"];
"1000217" [label="(Call,i++)"];
"1000253" [label="(Call,i == 0)"];
"1000237" [label="(Call,i > 0)"];
"1000207" [label="(Call,i = 0)"];
"1000198" [label="(Call,left = sysex.len)"];
"1000193" [label="(Call,sysex.len = count)"];
"1000185" [label="(Call,(unsigned)count)"];
"1000171" [label="(Call,count -= hdr_size)"];
"1000165" [label="(Call,count < hdr_size)"];
"1000109" [label="(MethodParameterIn,int count)"];
"1000133" [label="(Call,hdr_size = (unsigned long) &sysex.data[0] - (unsigned long) &sysex)"];
"1000135" [label="(Call,(unsigned long) &sysex.data[0] - (unsigned long) &sysex)"];
"1000136" [label="(Call,(unsigned long) &sysex.data[0])"];
"1000144" [label="(Call,(unsigned long) &sysex)"];
"1000188" [label="(Call,(unsigned)sysex.len)"];
"1000214" [label="(Call,!signal_pending(current))"];
"1000215" [label="(Call,signal_pending(current))"];
"1000276" [label="(Call,signal_pending(current))"];
"1000266" [label="(Call,!midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff)) &&\n\t\t\t!signal_pending(current))"];
"1000267" [label="(Call,!midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff)))"];
"1000268" [label="(Call,midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff)))"];
"1000152" [label="(Call,prefix_cmd(orig_dev, 0xf0))"];
"1000113" [label="(Call,orig_dev = synth_devs[dev]->midi_dev)"];
"1000270" [label="(Call,(unsigned char) (data & 0xff))"];
"1000272" [label="(Call,data & 0xff)"];
"1000258" [label="(Call,data != 0xf0)"];
"1000222" [label="(Call,get_user(data,\n\t\t    (unsigned char __user *)(addr + hdr_size + i)))"];
"1000283" [label="(Call,data & 0x80)"];
"1000224" [label="(Call,(unsigned char __user *)(addr + hdr_size + i))"];
"1000175" [label="(Call,copy_from_user(&sysex, addr, hdr_size))"];
"1000108" [label="(MethodParameterIn,const char __user *addr)"];
"1000249" [label="(Call,data = 0xf7)"];
"1000240" [label="(Call,data & 0x80)"];
"1000246" [label="(Call,data != 0xf7)"];
"1000275" [label="(Call,!signal_pending(current))"];
"1000210" [label="(Call,i < left && !signal_pending(current))"];
"1000175" [label="(Call,copy_from_user(&sysex, addr, hdr_size))"];
"1000133" [label="(Call,hdr_size = (unsigned long) &sysex.data[0] - (unsigned long) &sysex)"];
"1000210" [label="(Call,i < left && !signal_pending(current))"];
"1000177" [label="(Identifier,sysex)"];
"1000233" [label="(Identifier,EFAULT)"];
"1000183" [label="(ControlStructure,if ((unsigned)count < (unsigned)sysex.len))"];
"1000254" [label="(Identifier,i)"];
"1000194" [label="(Call,sysex.len)"];
"1000246" [label="(Call,data != 0xf7)"];
"1000235" [label="(Identifier,eox_seen)"];
"1000253" [label="(Call,i == 0)"];
"1000134" [label="(Identifier,hdr_size)"];
"1000247" [label="(Identifier,data)"];
"1000190" [label="(Call,sysex.len)"];
"1000213" [label="(Identifier,left)"];
"1000276" [label="(Call,signal_pending(current))"];
"1000274" [label="(Literal,0xff)"];
"1000273" [label="(Identifier,data)"];
"1000212" [label="(Identifier,i)"];
"1000197" [label="(Identifier,count)"];
"1000269" [label="(Identifier,orig_dev)"];
"1000209" [label="(Literal,0)"];
"1000277" [label="(Identifier,current)"];
"1000242" [label="(Literal,0x80)"];
"1000187" [label="(Identifier,count)"];
"1000294" [label="(Call,midi_outc(orig_dev, 0xf7))"];
"1000214" [label="(Call,!signal_pending(current))"];
"1000151" [label="(Call,!prefix_cmd(orig_dev, 0xf0))"];
"1000275" [label="(Call,!signal_pending(current))"];
"1000208" [label="(Identifier,i)"];
"1000217" [label="(Call,i++)"];
"1000270" [label="(Call,(unsigned char) (data & 0xff))"];
"1000206" [label="(ControlStructure,for (i = 0; i < left && !signal_pending(current); i++))"];
"1000136" [label="(Call,(unsigned long) &sysex.data[0])"];
"1000267" [label="(Call,!midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff)))"];
"1000280" [label="(Call,!first_byte && data & 0x80)"];
"1000258" [label="(Call,data != 0xf0)"];
"1000111" [label="(Block,)"];
"1000135" [label="(Call,(unsigned long) &sysex.data[0] - (unsigned long) &sysex)"];
"1000165" [label="(Call,count < hdr_size)"];
"1000284" [label="(Identifier,data)"];
"1000167" [label="(Identifier,hdr_size)"];
"1000198" [label="(Call,left = sysex.len)"];
"1000239" [label="(Literal,0)"];
"1000265" [label="(ControlStructure,while (!midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff)) &&\n\t\t\t!signal_pending(current)))"];
"1000250" [label="(Identifier,data)"];
"1000126" [label="(Identifier,eox_seen)"];
"1000283" [label="(Call,data & 0x80)"];
"1000164" [label="(ControlStructure,if (count < hdr_size))"];
"1000172" [label="(Identifier,count)"];
"1000109" [label="(MethodParameterIn,int count)"];
"1000236" [label="(Call,i > 0 && data & 0x80)"];
"1000154" [label="(Literal,0xf0)"];
"1000251" [label="(Literal,0xf7)"];
"1000166" [label="(Identifier,count)"];
"1000244" [label="(Call,eox_seen && data != 0xf7)"];
"1000144" [label="(Call,(unsigned long) &sysex)"];
"1000282" [label="(Identifier,first_byte)"];
"1000285" [label="(Literal,0x80)"];
"1000260" [label="(Literal,0xf0)"];
"1000248" [label="(Literal,0xf7)"];
"1000204" [label="(Identifier,src_offs)"];
"1000185" [label="(Call,(unsigned)count)"];
"1000182" [label="(Identifier,EFAULT)"];
"1000223" [label="(Identifier,data)"];
"1000173" [label="(Identifier,hdr_size)"];
"1000238" [label="(Identifier,i)"];
"1000272" [label="(Call,data & 0xff)"];
"1000113" [label="(Call,orig_dev = synth_devs[dev]->midi_dev)"];
"1000199" [label="(Identifier,left)"];
"1000237" [label="(Call,i > 0)"];
"1000240" [label="(Call,data & 0x80)"];
"1000293" [label="(Identifier,eox_seen)"];
"1000224" [label="(Call,(unsigned char __user *)(addr + hdr_size + i))"];
"1000211" [label="(Call,i < left)"];
"1000226" [label="(Call,addr + hdr_size + i)"];
"1000249" [label="(Call,data = 0xf7)"];
"1000222" [label="(Call,get_user(data,\n\t\t    (unsigned char __user *)(addr + hdr_size + i)))"];
"1000266" [label="(Call,!midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff)) &&\n\t\t\t!signal_pending(current))"];
"1000184" [label="(Call,(unsigned)count < (unsigned)sysex.len)"];
"1000176" [label="(Call,&sysex)"];
"1000216" [label="(Identifier,current)"];
"1000153" [label="(Identifier,orig_dev)"];
"1000278" [label="(Call,schedule())"];
"1000241" [label="(Identifier,data)"];
"1000228" [label="(Call,hdr_size + i)"];
"1000221" [label="(ControlStructure,if (get_user(data,\n\t\t    (unsigned char __user *)(addr + hdr_size + i))))"];
"1000174" [label="(ControlStructure,if (copy_from_user(&sysex, addr, hdr_size)))"];
"1000215" [label="(Call,signal_pending(current))"];
"1000114" [label="(Identifier,orig_dev)"];
"1000171" [label="(Call,count -= hdr_size)"];
"1000193" [label="(Call,sysex.len = count)"];
"1000243" [label="(ControlStructure,if (eox_seen && data != 0xf7))"];
"1000257" [label="(ControlStructure,if (data != 0xf0))"];
"1000200" [label="(Call,sysex.len)"];
"1000207" [label="(Call,i = 0)"];
"1000179" [label="(Identifier,hdr_size)"];
"1000299" [label="(MethodReturn,RET)"];
"1000138" [label="(Call,&sysex.data[0])"];
"1000152" [label="(Call,prefix_cmd(orig_dev, 0xf0))"];
"1000170" [label="(Identifier,EINVAL)"];
"1000264" [label="(Identifier,EINVAL)"];
"1000178" [label="(Identifier,addr)"];
"1000149" [label="(Identifier,dev)"];
"1000108" [label="(MethodParameterIn,const char __user *addr)"];
"1000115" [label="(Call,synth_devs[dev]->midi_dev)"];
"1000259" [label="(Identifier,data)"];
"1000188" [label="(Call,(unsigned)sysex.len)"];
"1000146" [label="(Call,&sysex)"];
"1000268" [label="(Call,midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff)))"];
"1000218" [label="(Identifier,i)"];
"1000252" [label="(ControlStructure,if (i == 0))"];
"1000255" [label="(Literal,0)"];
"1000210" -> "1000206"  [label="AST: "];
"1000210" -> "1000211"  [label="CFG: "];
"1000210" -> "1000214"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000214" -> "1000210"  [label="AST: "];
"1000223" -> "1000210"  [label="CFG: "];
"1000293" -> "1000210"  [label="CFG: "];
"1000210" -> "1000299"  [label="DDG: i < left && !signal_pending(current)"];
"1000210" -> "1000299"  [label="DDG: !signal_pending(current)"];
"1000210" -> "1000299"  [label="DDG: i < left"];
"1000211" -> "1000210"  [label="DDG: i"];
"1000211" -> "1000210"  [label="DDG: left"];
"1000214" -> "1000210"  [label="DDG: signal_pending(current)"];
"1000266" -> "1000210"  [label="DDG: !signal_pending(current)"];
"1000210" -> "1000266"  [label="DDG: !signal_pending(current)"];
"1000211" -> "1000213"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000213" -> "1000211"  [label="AST: "];
"1000216" -> "1000211"  [label="CFG: "];
"1000211" -> "1000299"  [label="DDG: i"];
"1000211" -> "1000299"  [label="DDG: left"];
"1000217" -> "1000211"  [label="DDG: i"];
"1000207" -> "1000211"  [label="DDG: i"];
"1000198" -> "1000211"  [label="DDG: left"];
"1000211" -> "1000224"  [label="DDG: i"];
"1000211" -> "1000226"  [label="DDG: i"];
"1000211" -> "1000228"  [label="DDG: i"];
"1000211" -> "1000237"  [label="DDG: i"];
"1000217" -> "1000206"  [label="AST: "];
"1000217" -> "1000218"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000212" -> "1000217"  [label="CFG: "];
"1000253" -> "1000217"  [label="DDG: i"];
"1000253" -> "1000252"  [label="AST: "];
"1000253" -> "1000255"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000255" -> "1000253"  [label="AST: "];
"1000259" -> "1000253"  [label="CFG: "];
"1000269" -> "1000253"  [label="CFG: "];
"1000253" -> "1000299"  [label="DDG: i == 0"];
"1000253" -> "1000299"  [label="DDG: i"];
"1000237" -> "1000253"  [label="DDG: i"];
"1000237" -> "1000236"  [label="AST: "];
"1000237" -> "1000239"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000239" -> "1000237"  [label="AST: "];
"1000241" -> "1000237"  [label="CFG: "];
"1000236" -> "1000237"  [label="CFG: "];
"1000237" -> "1000236"  [label="DDG: i"];
"1000237" -> "1000236"  [label="DDG: 0"];
"1000207" -> "1000206"  [label="AST: "];
"1000207" -> "1000209"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000209" -> "1000207"  [label="AST: "];
"1000212" -> "1000207"  [label="CFG: "];
"1000198" -> "1000111"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000204" -> "1000198"  [label="CFG: "];
"1000198" -> "1000299"  [label="DDG: sysex.len"];
"1000193" -> "1000198"  [label="DDG: sysex.len"];
"1000188" -> "1000198"  [label="DDG: sysex.len"];
"1000193" -> "1000183"  [label="AST: "];
"1000193" -> "1000197"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000197" -> "1000193"  [label="AST: "];
"1000199" -> "1000193"  [label="CFG: "];
"1000193" -> "1000299"  [label="DDG: count"];
"1000185" -> "1000193"  [label="DDG: count"];
"1000109" -> "1000193"  [label="DDG: count"];
"1000185" -> "1000184"  [label="AST: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="AST: "];
"1000189" -> "1000185"  [label="CFG: "];
"1000185" -> "1000299"  [label="DDG: count"];
"1000185" -> "1000184"  [label="DDG: count"];
"1000171" -> "1000185"  [label="DDG: count"];
"1000109" -> "1000185"  [label="DDG: count"];
"1000171" -> "1000111"  [label="AST: "];
"1000171" -> "1000173"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="AST: "];
"1000177" -> "1000171"  [label="CFG: "];
"1000171" -> "1000299"  [label="DDG: count"];
"1000165" -> "1000171"  [label="DDG: hdr_size"];
"1000165" -> "1000171"  [label="DDG: count"];
"1000109" -> "1000171"  [label="DDG: count"];
"1000165" -> "1000164"  [label="AST: "];
"1000165" -> "1000167"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000167" -> "1000165"  [label="AST: "];
"1000170" -> "1000165"  [label="CFG: "];
"1000172" -> "1000165"  [label="CFG: "];
"1000165" -> "1000299"  [label="DDG: count"];
"1000165" -> "1000299"  [label="DDG: hdr_size"];
"1000165" -> "1000299"  [label="DDG: count < hdr_size"];
"1000109" -> "1000165"  [label="DDG: count"];
"1000133" -> "1000165"  [label="DDG: hdr_size"];
"1000165" -> "1000175"  [label="DDG: hdr_size"];
"1000109" -> "1000105"  [label="AST: "];
"1000109" -> "1000299"  [label="DDG: count"];
"1000133" -> "1000111"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000149" -> "1000133"  [label="CFG: "];
"1000133" -> "1000299"  [label="DDG: hdr_size"];
"1000133" -> "1000299"  [label="DDG: (unsigned long) &sysex.data[0] - (unsigned long) &sysex"];
"1000135" -> "1000133"  [label="DDG: (unsigned long) &sysex.data[0]"];
"1000135" -> "1000133"  [label="DDG: (unsigned long) &sysex"];
"1000135" -> "1000144"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000144" -> "1000135"  [label="AST: "];
"1000135" -> "1000299"  [label="DDG: (unsigned long) &sysex"];
"1000135" -> "1000299"  [label="DDG: (unsigned long) &sysex.data[0]"];
"1000136" -> "1000135"  [label="DDG: &sysex.data[0]"];
"1000144" -> "1000135"  [label="DDG: &sysex"];
"1000136" -> "1000138"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000145" -> "1000136"  [label="CFG: "];
"1000136" -> "1000299"  [label="DDG: &sysex.data[0]"];
"1000144" -> "1000146"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000146" -> "1000144"  [label="AST: "];
"1000144" -> "1000299"  [label="DDG: &sysex"];
"1000144" -> "1000175"  [label="DDG: &sysex"];
"1000188" -> "1000184"  [label="AST: "];
"1000188" -> "1000190"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000188"  [label="AST: "];
"1000184" -> "1000188"  [label="CFG: "];
"1000188" -> "1000184"  [label="DDG: sysex.len"];
"1000214" -> "1000215"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000214" -> "1000299"  [label="DDG: signal_pending(current)"];
"1000215" -> "1000214"  [label="DDG: current"];
"1000215" -> "1000216"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000215" -> "1000299"  [label="DDG: current"];
"1000276" -> "1000215"  [label="DDG: current"];
"1000215" -> "1000276"  [label="DDG: current"];
"1000276" -> "1000275"  [label="AST: "];
"1000276" -> "1000277"  [label="CFG: "];
"1000277" -> "1000276"  [label="AST: "];
"1000275" -> "1000276"  [label="CFG: "];
"1000276" -> "1000299"  [label="DDG: current"];
"1000276" -> "1000275"  [label="DDG: current"];
"1000266" -> "1000265"  [label="AST: "];
"1000266" -> "1000267"  [label="CFG: "];
"1000266" -> "1000275"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000275" -> "1000266"  [label="AST: "];
"1000278" -> "1000266"  [label="CFG: "];
"1000282" -> "1000266"  [label="CFG: "];
"1000266" -> "1000299"  [label="DDG: !signal_pending(current)"];
"1000266" -> "1000299"  [label="DDG: !midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff))"];
"1000266" -> "1000299"  [label="DDG: !midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff)) &&\n\t\t\t!signal_pending(current)"];
"1000267" -> "1000266"  [label="DDG: midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff))"];
"1000275" -> "1000266"  [label="DDG: signal_pending(current)"];
"1000267" -> "1000268"  [label="CFG: "];
"1000268" -> "1000267"  [label="AST: "];
"1000277" -> "1000267"  [label="CFG: "];
"1000267" -> "1000299"  [label="DDG: midi_devs[orig_dev]->outputc(orig_dev, (unsigned char) (data & 0xff))"];
"1000268" -> "1000267"  [label="DDG: orig_dev"];
"1000268" -> "1000267"  [label="DDG: (unsigned char) (data & 0xff)"];
"1000268" -> "1000270"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000270" -> "1000268"  [label="AST: "];
"1000268" -> "1000299"  [label="DDG: orig_dev"];
"1000268" -> "1000299"  [label="DDG: (unsigned char) (data & 0xff)"];
"1000152" -> "1000268"  [label="DDG: orig_dev"];
"1000270" -> "1000268"  [label="DDG: data & 0xff"];
"1000268" -> "1000294"  [label="DDG: orig_dev"];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000154"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000151" -> "1000152"  [label="CFG: "];
"1000152" -> "1000299"  [label="DDG: orig_dev"];
"1000152" -> "1000151"  [label="DDG: orig_dev"];
"1000152" -> "1000151"  [label="DDG: 0xf0"];
"1000113" -> "1000152"  [label="DDG: orig_dev"];
"1000152" -> "1000294"  [label="DDG: orig_dev"];
"1000113" -> "1000111"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000126" -> "1000113"  [label="CFG: "];
"1000113" -> "1000299"  [label="DDG: synth_devs[dev]->midi_dev"];
"1000270" -> "1000272"  [label="CFG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000272" -> "1000270"  [label="AST: "];
"1000270" -> "1000299"  [label="DDG: data & 0xff"];
"1000272" -> "1000270"  [label="DDG: data"];
"1000272" -> "1000270"  [label="DDG: 0xff"];
"1000272" -> "1000274"  [label="CFG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000274" -> "1000272"  [label="AST: "];
"1000272" -> "1000299"  [label="DDG: data"];
"1000272" -> "1000222"  [label="DDG: data"];
"1000258" -> "1000272"  [label="DDG: data"];
"1000222" -> "1000272"  [label="DDG: data"];
"1000249" -> "1000272"  [label="DDG: data"];
"1000240" -> "1000272"  [label="DDG: data"];
"1000246" -> "1000272"  [label="DDG: data"];
"1000272" -> "1000283"  [label="DDG: data"];
"1000258" -> "1000257"  [label="AST: "];
"1000258" -> "1000260"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000260" -> "1000258"  [label="AST: "];
"1000264" -> "1000258"  [label="CFG: "];
"1000269" -> "1000258"  [label="CFG: "];
"1000258" -> "1000299"  [label="DDG: data"];
"1000258" -> "1000299"  [label="DDG: data != 0xf0"];
"1000222" -> "1000258"  [label="DDG: data"];
"1000249" -> "1000258"  [label="DDG: data"];
"1000240" -> "1000258"  [label="DDG: data"];
"1000246" -> "1000258"  [label="DDG: data"];
"1000222" -> "1000221"  [label="AST: "];
"1000222" -> "1000224"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000224" -> "1000222"  [label="AST: "];
"1000233" -> "1000222"  [label="CFG: "];
"1000235" -> "1000222"  [label="CFG: "];
"1000222" -> "1000299"  [label="DDG: data"];
"1000222" -> "1000299"  [label="DDG: get_user(data,\n\t\t    (unsigned char __user *)(addr + hdr_size + i))"];
"1000222" -> "1000299"  [label="DDG: (unsigned char __user *)(addr + hdr_size + i)"];
"1000283" -> "1000222"  [label="DDG: data"];
"1000224" -> "1000222"  [label="DDG: addr + hdr_size + i"];
"1000222" -> "1000240"  [label="DDG: data"];
"1000222" -> "1000246"  [label="DDG: data"];
"1000283" -> "1000280"  [label="AST: "];
"1000283" -> "1000285"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000285" -> "1000283"  [label="AST: "];
"1000280" -> "1000283"  [label="CFG: "];
"1000283" -> "1000299"  [label="DDG: data"];
"1000283" -> "1000280"  [label="DDG: data"];
"1000283" -> "1000280"  [label="DDG: 0x80"];
"1000224" -> "1000226"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000224" -> "1000299"  [label="DDG: addr + hdr_size + i"];
"1000175" -> "1000224"  [label="DDG: addr"];
"1000175" -> "1000224"  [label="DDG: hdr_size"];
"1000108" -> "1000224"  [label="DDG: addr"];
"1000175" -> "1000174"  [label="AST: "];
"1000175" -> "1000179"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000178" -> "1000175"  [label="AST: "];
"1000179" -> "1000175"  [label="AST: "];
"1000182" -> "1000175"  [label="CFG: "];
"1000186" -> "1000175"  [label="CFG: "];
"1000175" -> "1000299"  [label="DDG: hdr_size"];
"1000175" -> "1000299"  [label="DDG: addr"];
"1000175" -> "1000299"  [label="DDG: &sysex"];
"1000175" -> "1000299"  [label="DDG: copy_from_user(&sysex, addr, hdr_size)"];
"1000108" -> "1000175"  [label="DDG: addr"];
"1000175" -> "1000226"  [label="DDG: addr"];
"1000175" -> "1000226"  [label="DDG: hdr_size"];
"1000175" -> "1000228"  [label="DDG: hdr_size"];
"1000108" -> "1000105"  [label="AST: "];
"1000108" -> "1000299"  [label="DDG: addr"];
"1000108" -> "1000226"  [label="DDG: addr"];
"1000249" -> "1000243"  [label="AST: "];
"1000249" -> "1000251"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000251" -> "1000249"  [label="AST: "];
"1000254" -> "1000249"  [label="CFG: "];
"1000240" -> "1000236"  [label="AST: "];
"1000240" -> "1000242"  [label="CFG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000242" -> "1000240"  [label="AST: "];
"1000236" -> "1000240"  [label="CFG: "];
"1000240" -> "1000236"  [label="DDG: data"];
"1000240" -> "1000236"  [label="DDG: 0x80"];
"1000240" -> "1000246"  [label="DDG: data"];
"1000246" -> "1000244"  [label="AST: "];
"1000246" -> "1000248"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000248" -> "1000246"  [label="AST: "];
"1000244" -> "1000246"  [label="CFG: "];
"1000246" -> "1000244"  [label="DDG: data"];
"1000246" -> "1000244"  [label="DDG: 0xf7"];
"1000275" -> "1000299"  [label="DDG: signal_pending(current)"];
}
