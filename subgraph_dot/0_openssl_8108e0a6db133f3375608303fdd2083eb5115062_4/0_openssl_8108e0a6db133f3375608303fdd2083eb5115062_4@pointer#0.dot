digraph "0_openssl_8108e0a6db133f3375608303fdd2083eb5115062_4@pointer" {
"1000146" [label="(Call,GetCipher(self, ctx))"];
"1000122" [label="(Call,rb_attr_get(self, id_key_set))"];
"1000103" [label="(MethodParameterIn,VALUE self)"];
"1000153" [label="(Call,EVP_CIPHER_CTX_block_size(ctx))"];
"1000149" [label="(Call,out_len = in_len+EVP_CIPHER_CTX_block_size(ctx))"];
"1000156" [label="(Call,out_len <= 0)"];
"1000170" [label="(Call,rb_str_new(0, out_len))"];
"1000168" [label="(Call,str = rb_str_new(0, out_len))"];
"1000186" [label="(Call,RSTRING_PTR(str))"];
"1000184" [label="(Call,(unsigned char *)RSTRING_PTR(str))"];
"1000182" [label="(Call,ossl_cipher_update_long(ctx, (unsigned char *)RSTRING_PTR(str), &out_len, in, in_len))"];
"1000181" [label="(Call,!ossl_cipher_update_long(ctx, (unsigned char *)RSTRING_PTR(str), &out_len, in, in_len))"];
"1000198" [label="(Call,RSTRING_LEN(str))"];
"1000196" [label="(Call,out_len < RSTRING_LEN(str))"];
"1000195" [label="(Call,assert(out_len < RSTRING_LEN(str)))"];
"1000200" [label="(Call,rb_str_set_len(str, out_len))"];
"1000203" [label="(Return,return str;)"];
"1000177" [label="(Call,rb_str_resize(str, out_len))"];
"1000151" [label="(Call,in_len+EVP_CIPHER_CTX_block_size(ctx))"];
"1000189" [label="(Identifier,out_len)"];
"1000161" [label="(Identifier,rb_eRangeError)"];
"1000178" [label="(Identifier,str)"];
"1000104" [label="(Block,)"];
"1000157" [label="(Identifier,out_len)"];
"1000171" [label="(Literal,0)"];
"1000195" [label="(Call,assert(out_len < RSTRING_LEN(str)))"];
"1000202" [label="(Identifier,out_len)"];
"1000198" [label="(Call,RSTRING_LEN(str))"];
"1000191" [label="(Identifier,in_len)"];
"1000186" [label="(Call,RSTRING_PTR(str))"];
"1000160" [label="(Call,ossl_raise(rb_eRangeError,\n\t\t   \"data too big to make output buffer: %ld bytes\", in_len))"];
"1000150" [label="(Identifier,out_len)"];
"1000169" [label="(Identifier,str)"];
"1000197" [label="(Identifier,out_len)"];
"1000200" [label="(Call,rb_str_set_len(str, out_len))"];
"1000152" [label="(Identifier,in_len)"];
"1000170" [label="(Call,rb_str_new(0, out_len))"];
"1000182" [label="(Call,ossl_cipher_update_long(ctx, (unsigned char *)RSTRING_PTR(str), &out_len, in, in_len))"];
"1000166" [label="(Identifier,str)"];
"1000156" [label="(Call,out_len <= 0)"];
"1000187" [label="(Identifier,str)"];
"1000196" [label="(Call,out_len < RSTRING_LEN(str))"];
"1000180" [label="(ControlStructure,if (!ossl_cipher_update_long(ctx, (unsigned char *)RSTRING_PTR(str), &out_len, in, in_len)))"];
"1000153" [label="(Call,EVP_CIPHER_CTX_block_size(ctx))"];
"1000123" [label="(Identifier,self)"];
"1000201" [label="(Identifier,str)"];
"1000204" [label="(Identifier,str)"];
"1000174" [label="(Block,)"];
"1000188" [label="(Call,&out_len)"];
"1000121" [label="(Call,RTEST(rb_attr_get(self, id_key_set)))"];
"1000184" [label="(Call,(unsigned char *)RSTRING_PTR(str))"];
"1000148" [label="(Identifier,ctx)"];
"1000183" [label="(Identifier,ctx)"];
"1000179" [label="(Identifier,out_len)"];
"1000167" [label="(Block,)"];
"1000155" [label="(ControlStructure,if (out_len <= 0))"];
"1000203" [label="(Return,return str;)"];
"1000181" [label="(Call,!ossl_cipher_update_long(ctx, (unsigned char *)RSTRING_PTR(str), &out_len, in, in_len))"];
"1000124" [label="(Identifier,id_key_set)"];
"1000190" [label="(Identifier,in)"];
"1000158" [label="(Literal,0)"];
"1000168" [label="(Call,str = rb_str_new(0, out_len))"];
"1000154" [label="(Identifier,ctx)"];
"1000146" [label="(Call,GetCipher(self, ctx))"];
"1000103" [label="(MethodParameterIn,VALUE self)"];
"1000138" [label="(Call,in_len = RSTRING_LEN(data))"];
"1000122" [label="(Call,rb_attr_get(self, id_key_set))"];
"1000149" [label="(Call,out_len = in_len+EVP_CIPHER_CTX_block_size(ctx))"];
"1000175" [label="(Call,StringValue(str))"];
"1000130" [label="(Call,in = (unsigned char *)RSTRING_PTR(data))"];
"1000199" [label="(Identifier,str)"];
"1000193" [label="(Identifier,eCipherError)"];
"1000151" [label="(Call,in_len+EVP_CIPHER_CTX_block_size(ctx))"];
"1000147" [label="(Identifier,self)"];
"1000177" [label="(Call,rb_str_resize(str, out_len))"];
"1000172" [label="(Identifier,out_len)"];
"1000205" [label="(MethodReturn,RET)"];
"1000146" -> "1000104"  [label="AST: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000150" -> "1000146"  [label="CFG: "];
"1000146" -> "1000205"  [label="DDG: GetCipher(self, ctx)"];
"1000146" -> "1000205"  [label="DDG: self"];
"1000122" -> "1000146"  [label="DDG: self"];
"1000103" -> "1000146"  [label="DDG: self"];
"1000146" -> "1000153"  [label="DDG: ctx"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000121" -> "1000122"  [label="CFG: "];
"1000122" -> "1000205"  [label="DDG: id_key_set"];
"1000122" -> "1000121"  [label="DDG: self"];
"1000122" -> "1000121"  [label="DDG: id_key_set"];
"1000103" -> "1000122"  [label="DDG: self"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000205"  [label="DDG: self"];
"1000153" -> "1000151"  [label="AST: "];
"1000153" -> "1000154"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000151" -> "1000153"  [label="CFG: "];
"1000153" -> "1000149"  [label="DDG: ctx"];
"1000153" -> "1000151"  [label="DDG: ctx"];
"1000153" -> "1000182"  [label="DDG: ctx"];
"1000149" -> "1000104"  [label="AST: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000157" -> "1000149"  [label="CFG: "];
"1000149" -> "1000205"  [label="DDG: in_len+EVP_CIPHER_CTX_block_size(ctx)"];
"1000138" -> "1000149"  [label="DDG: in_len"];
"1000149" -> "1000156"  [label="DDG: out_len"];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000158"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000158" -> "1000156"  [label="AST: "];
"1000161" -> "1000156"  [label="CFG: "];
"1000166" -> "1000156"  [label="CFG: "];
"1000156" -> "1000205"  [label="DDG: out_len <= 0"];
"1000156" -> "1000170"  [label="DDG: out_len"];
"1000156" -> "1000177"  [label="DDG: out_len"];
"1000170" -> "1000168"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000170" -> "1000168"  [label="DDG: 0"];
"1000170" -> "1000168"  [label="DDG: out_len"];
"1000170" -> "1000196"  [label="DDG: out_len"];
"1000168" -> "1000167"  [label="AST: "];
"1000169" -> "1000168"  [label="AST: "];
"1000183" -> "1000168"  [label="CFG: "];
"1000168" -> "1000205"  [label="DDG: rb_str_new(0, out_len)"];
"1000168" -> "1000186"  [label="DDG: str"];
"1000186" -> "1000184"  [label="AST: "];
"1000186" -> "1000187"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000184" -> "1000186"  [label="CFG: "];
"1000186" -> "1000184"  [label="DDG: str"];
"1000177" -> "1000186"  [label="DDG: str"];
"1000186" -> "1000198"  [label="DDG: str"];
"1000184" -> "1000182"  [label="AST: "];
"1000185" -> "1000184"  [label="AST: "];
"1000189" -> "1000184"  [label="CFG: "];
"1000184" -> "1000205"  [label="DDG: RSTRING_PTR(str)"];
"1000184" -> "1000182"  [label="DDG: RSTRING_PTR(str)"];
"1000182" -> "1000181"  [label="AST: "];
"1000182" -> "1000191"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000188" -> "1000182"  [label="AST: "];
"1000190" -> "1000182"  [label="AST: "];
"1000191" -> "1000182"  [label="AST: "];
"1000181" -> "1000182"  [label="CFG: "];
"1000182" -> "1000205"  [label="DDG: in"];
"1000182" -> "1000205"  [label="DDG: &out_len"];
"1000182" -> "1000205"  [label="DDG: (unsigned char *)RSTRING_PTR(str)"];
"1000182" -> "1000205"  [label="DDG: in_len"];
"1000182" -> "1000205"  [label="DDG: ctx"];
"1000182" -> "1000181"  [label="DDG: (unsigned char *)RSTRING_PTR(str)"];
"1000182" -> "1000181"  [label="DDG: in_len"];
"1000182" -> "1000181"  [label="DDG: ctx"];
"1000182" -> "1000181"  [label="DDG: &out_len"];
"1000182" -> "1000181"  [label="DDG: in"];
"1000130" -> "1000182"  [label="DDG: in"];
"1000160" -> "1000182"  [label="DDG: in_len"];
"1000138" -> "1000182"  [label="DDG: in_len"];
"1000181" -> "1000180"  [label="AST: "];
"1000193" -> "1000181"  [label="CFG: "];
"1000197" -> "1000181"  [label="CFG: "];
"1000181" -> "1000205"  [label="DDG: !ossl_cipher_update_long(ctx, (unsigned char *)RSTRING_PTR(str), &out_len, in, in_len)"];
"1000181" -> "1000205"  [label="DDG: ossl_cipher_update_long(ctx, (unsigned char *)RSTRING_PTR(str), &out_len, in, in_len)"];
"1000198" -> "1000196"  [label="AST: "];
"1000198" -> "1000199"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000196" -> "1000198"  [label="CFG: "];
"1000198" -> "1000196"  [label="DDG: str"];
"1000198" -> "1000200"  [label="DDG: str"];
"1000196" -> "1000195"  [label="AST: "];
"1000197" -> "1000196"  [label="AST: "];
"1000195" -> "1000196"  [label="CFG: "];
"1000196" -> "1000205"  [label="DDG: RSTRING_LEN(str)"];
"1000196" -> "1000195"  [label="DDG: out_len"];
"1000196" -> "1000195"  [label="DDG: RSTRING_LEN(str)"];
"1000177" -> "1000196"  [label="DDG: out_len"];
"1000196" -> "1000200"  [label="DDG: out_len"];
"1000195" -> "1000104"  [label="AST: "];
"1000201" -> "1000195"  [label="CFG: "];
"1000195" -> "1000205"  [label="DDG: assert(out_len < RSTRING_LEN(str))"];
"1000195" -> "1000205"  [label="DDG: out_len < RSTRING_LEN(str)"];
"1000200" -> "1000104"  [label="AST: "];
"1000200" -> "1000202"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000202" -> "1000200"  [label="AST: "];
"1000204" -> "1000200"  [label="CFG: "];
"1000200" -> "1000205"  [label="DDG: rb_str_set_len(str, out_len)"];
"1000200" -> "1000205"  [label="DDG: str"];
"1000200" -> "1000205"  [label="DDG: out_len"];
"1000200" -> "1000203"  [label="DDG: str"];
"1000203" -> "1000104"  [label="AST: "];
"1000203" -> "1000204"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000203"  [label="CFG: "];
"1000203" -> "1000205"  [label="DDG: <RET>"];
"1000204" -> "1000203"  [label="DDG: str"];
"1000177" -> "1000174"  [label="AST: "];
"1000177" -> "1000179"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000179" -> "1000177"  [label="AST: "];
"1000183" -> "1000177"  [label="CFG: "];
"1000177" -> "1000205"  [label="DDG: rb_str_resize(str, out_len)"];
"1000175" -> "1000177"  [label="DDG: str"];
"1000152" -> "1000151"  [label="AST: "];
"1000151" -> "1000205"  [label="DDG: EVP_CIPHER_CTX_block_size(ctx)"];
"1000138" -> "1000151"  [label="DDG: in_len"];
}
