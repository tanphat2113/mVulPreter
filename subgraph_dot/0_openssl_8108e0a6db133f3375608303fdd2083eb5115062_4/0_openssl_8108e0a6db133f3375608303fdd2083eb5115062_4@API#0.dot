digraph "0_openssl_8108e0a6db133f3375608303fdd2083eb5115062_4@API" {
"1000195" [label="(Call,assert(out_len < RSTRING_LEN(str)))"];
"1000196" [label="(Call,out_len < RSTRING_LEN(str))"];
"1000170" [label="(Call,rb_str_new(0, out_len))"];
"1000156" [label="(Call,out_len <= 0)"];
"1000149" [label="(Call,out_len = in_len+EVP_CIPHER_CTX_block_size(ctx))"];
"1000138" [label="(Call,in_len = RSTRING_LEN(data))"];
"1000140" [label="(Call,RSTRING_LEN(data))"];
"1000134" [label="(Call,RSTRING_PTR(data))"];
"1000128" [label="(Call,StringValue(data))"];
"1000153" [label="(Call,EVP_CIPHER_CTX_block_size(ctx))"];
"1000146" [label="(Call,GetCipher(self, ctx))"];
"1000122" [label="(Call,rb_attr_get(self, id_key_set))"];
"1000103" [label="(MethodParameterIn,VALUE self)"];
"1000177" [label="(Call,rb_str_resize(str, out_len))"];
"1000175" [label="(Call,StringValue(str))"];
"1000165" [label="(Call,NIL_P(str))"];
"1000198" [label="(Call,RSTRING_LEN(str))"];
"1000186" [label="(Call,RSTRING_PTR(str))"];
"1000168" [label="(Call,str = rb_str_new(0, out_len))"];
"1000129" [label="(Identifier,data)"];
"1000161" [label="(Identifier,rb_eRangeError)"];
"1000178" [label="(Identifier,str)"];
"1000104" [label="(Block,)"];
"1000195" [label="(Call,assert(out_len < RSTRING_LEN(str)))"];
"1000171" [label="(Literal,0)"];
"1000157" [label="(Identifier,out_len)"];
"1000131" [label="(Identifier,in)"];
"1000198" [label="(Call,RSTRING_LEN(str))"];
"1000200" [label="(Call,rb_str_set_len(str, out_len))"];
"1000197" [label="(Identifier,out_len)"];
"1000160" [label="(Call,ossl_raise(rb_eRangeError,\n\t\t   \"data too big to make output buffer: %ld bytes\", in_len))"];
"1000150" [label="(Identifier,out_len)"];
"1000186" [label="(Call,RSTRING_PTR(str))"];
"1000164" [label="(ControlStructure,if (NIL_P(str)))"];
"1000169" [label="(Identifier,str)"];
"1000128" [label="(Call,StringValue(data))"];
"1000170" [label="(Call,rb_str_new(0, out_len))"];
"1000166" [label="(Identifier,str)"];
"1000182" [label="(Call,ossl_cipher_update_long(ctx, (unsigned char *)RSTRING_PTR(str), &out_len, in, in_len))"];
"1000134" [label="(Call,RSTRING_PTR(data))"];
"1000156" [label="(Call,out_len <= 0)"];
"1000201" [label="(Identifier,str)"];
"1000196" [label="(Call,out_len < RSTRING_LEN(str))"];
"1000142" [label="(Literal,0)"];
"1000153" [label="(Call,EVP_CIPHER_CTX_block_size(ctx))"];
"1000123" [label="(Identifier,self)"];
"1000174" [label="(Block,)"];
"1000165" [label="(Call,NIL_P(str))"];
"1000187" [label="(Identifier,str)"];
"1000132" [label="(Call,(unsigned char *)RSTRING_PTR(data))"];
"1000141" [label="(Identifier,data)"];
"1000135" [label="(Identifier,data)"];
"1000121" [label="(Call,RTEST(rb_attr_get(self, id_key_set)))"];
"1000184" [label="(Call,(unsigned char *)RSTRING_PTR(str))"];
"1000148" [label="(Identifier,ctx)"];
"1000183" [label="(Identifier,ctx)"];
"1000179" [label="(Identifier,out_len)"];
"1000167" [label="(Block,)"];
"1000137" [label="(Call,(in_len = RSTRING_LEN(data)) == 0)"];
"1000155" [label="(ControlStructure,if (out_len <= 0))"];
"1000176" [label="(Identifier,str)"];
"1000124" [label="(Identifier,id_key_set)"];
"1000140" [label="(Call,RSTRING_LEN(data))"];
"1000168" [label="(Call,str = rb_str_new(0, out_len))"];
"1000158" [label="(Literal,0)"];
"1000138" [label="(Call,in_len = RSTRING_LEN(data))"];
"1000154" [label="(Identifier,ctx)"];
"1000146" [label="(Call,GetCipher(self, ctx))"];
"1000103" [label="(MethodParameterIn,VALUE self)"];
"1000122" [label="(Call,rb_attr_get(self, id_key_set))"];
"1000149" [label="(Call,out_len = in_len+EVP_CIPHER_CTX_block_size(ctx))"];
"1000175" [label="(Call,StringValue(str))"];
"1000199" [label="(Identifier,str)"];
"1000151" [label="(Call,in_len+EVP_CIPHER_CTX_block_size(ctx))"];
"1000139" [label="(Identifier,in_len)"];
"1000147" [label="(Identifier,self)"];
"1000177" [label="(Call,rb_str_resize(str, out_len))"];
"1000172" [label="(Identifier,out_len)"];
"1000205" [label="(MethodReturn,RET)"];
"1000195" -> "1000104"  [label="AST: "];
"1000195" -> "1000196"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000201" -> "1000195"  [label="CFG: "];
"1000195" -> "1000205"  [label="DDG: assert(out_len < RSTRING_LEN(str))"];
"1000195" -> "1000205"  [label="DDG: out_len < RSTRING_LEN(str)"];
"1000196" -> "1000195"  [label="DDG: out_len"];
"1000196" -> "1000195"  [label="DDG: RSTRING_LEN(str)"];
"1000196" -> "1000198"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000198" -> "1000196"  [label="AST: "];
"1000196" -> "1000205"  [label="DDG: RSTRING_LEN(str)"];
"1000170" -> "1000196"  [label="DDG: out_len"];
"1000177" -> "1000196"  [label="DDG: out_len"];
"1000198" -> "1000196"  [label="DDG: str"];
"1000196" -> "1000200"  [label="DDG: out_len"];
"1000170" -> "1000168"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000170" -> "1000168"  [label="DDG: 0"];
"1000170" -> "1000168"  [label="DDG: out_len"];
"1000156" -> "1000170"  [label="DDG: out_len"];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000158"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000158" -> "1000156"  [label="AST: "];
"1000161" -> "1000156"  [label="CFG: "];
"1000166" -> "1000156"  [label="CFG: "];
"1000156" -> "1000205"  [label="DDG: out_len <= 0"];
"1000149" -> "1000156"  [label="DDG: out_len"];
"1000156" -> "1000177"  [label="DDG: out_len"];
"1000149" -> "1000104"  [label="AST: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000157" -> "1000149"  [label="CFG: "];
"1000149" -> "1000205"  [label="DDG: in_len+EVP_CIPHER_CTX_block_size(ctx)"];
"1000138" -> "1000149"  [label="DDG: in_len"];
"1000153" -> "1000149"  [label="DDG: ctx"];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000142" -> "1000138"  [label="CFG: "];
"1000138" -> "1000205"  [label="DDG: RSTRING_LEN(data)"];
"1000138" -> "1000137"  [label="DDG: in_len"];
"1000140" -> "1000138"  [label="DDG: data"];
"1000138" -> "1000151"  [label="DDG: in_len"];
"1000138" -> "1000160"  [label="DDG: in_len"];
"1000138" -> "1000182"  [label="DDG: in_len"];
"1000140" -> "1000141"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000140" -> "1000205"  [label="DDG: data"];
"1000140" -> "1000137"  [label="DDG: data"];
"1000134" -> "1000140"  [label="DDG: data"];
"1000134" -> "1000132"  [label="AST: "];
"1000134" -> "1000135"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000132" -> "1000134"  [label="CFG: "];
"1000134" -> "1000132"  [label="DDG: data"];
"1000128" -> "1000134"  [label="DDG: data"];
"1000128" -> "1000104"  [label="AST: "];
"1000128" -> "1000129"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000131" -> "1000128"  [label="CFG: "];
"1000128" -> "1000205"  [label="DDG: StringValue(data)"];
"1000153" -> "1000151"  [label="AST: "];
"1000153" -> "1000154"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000151" -> "1000153"  [label="CFG: "];
"1000153" -> "1000151"  [label="DDG: ctx"];
"1000146" -> "1000153"  [label="DDG: ctx"];
"1000153" -> "1000182"  [label="DDG: ctx"];
"1000146" -> "1000104"  [label="AST: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000150" -> "1000146"  [label="CFG: "];
"1000146" -> "1000205"  [label="DDG: GetCipher(self, ctx)"];
"1000146" -> "1000205"  [label="DDG: self"];
"1000122" -> "1000146"  [label="DDG: self"];
"1000103" -> "1000146"  [label="DDG: self"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000121" -> "1000122"  [label="CFG: "];
"1000122" -> "1000205"  [label="DDG: id_key_set"];
"1000122" -> "1000121"  [label="DDG: self"];
"1000122" -> "1000121"  [label="DDG: id_key_set"];
"1000103" -> "1000122"  [label="DDG: self"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000205"  [label="DDG: self"];
"1000177" -> "1000174"  [label="AST: "];
"1000177" -> "1000179"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000179" -> "1000177"  [label="AST: "];
"1000183" -> "1000177"  [label="CFG: "];
"1000177" -> "1000205"  [label="DDG: rb_str_resize(str, out_len)"];
"1000175" -> "1000177"  [label="DDG: str"];
"1000177" -> "1000186"  [label="DDG: str"];
"1000175" -> "1000174"  [label="AST: "];
"1000175" -> "1000176"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000178" -> "1000175"  [label="CFG: "];
"1000175" -> "1000205"  [label="DDG: StringValue(str)"];
"1000165" -> "1000175"  [label="DDG: str"];
"1000165" -> "1000164"  [label="AST: "];
"1000165" -> "1000166"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000169" -> "1000165"  [label="CFG: "];
"1000176" -> "1000165"  [label="CFG: "];
"1000165" -> "1000205"  [label="DDG: NIL_P(str)"];
"1000198" -> "1000199"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000186" -> "1000198"  [label="DDG: str"];
"1000198" -> "1000200"  [label="DDG: str"];
"1000186" -> "1000184"  [label="AST: "];
"1000186" -> "1000187"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000184" -> "1000186"  [label="CFG: "];
"1000186" -> "1000184"  [label="DDG: str"];
"1000168" -> "1000186"  [label="DDG: str"];
"1000168" -> "1000167"  [label="AST: "];
"1000169" -> "1000168"  [label="AST: "];
"1000183" -> "1000168"  [label="CFG: "];
"1000168" -> "1000205"  [label="DDG: rb_str_new(0, out_len)"];
}
