digraph "1_tcpdump_d17507ffa3e9742199b02a66aa940e79ababfa30@pointer" {
"1000108" [label="(Call,*len <= 0)"];
"1000107" [label="(Call,*len <= 0 || !pptr || !*pptr)"];
"1000146" [label="(Call,*len >= 0)"];
"1000145" [label="(Call,*len >= 0 && **pptr)"];
"1000136" [label="(Call,*pptr <= (const char *) ndo->ndo_snapend && *len >= 0 && **pptr)"];
"1000157" [label="(Call,(*len)--)"];
"1000163" [label="(Call,(*len)--)"];
"1000168" [label="(Call,*len < 0)"];
"1000167" [label="(Call,*len < 0 || *pptr > (const char *) ndo->ndo_snapend)"];
"1000104" [label="(Block,)"];
"1000109" [label="(Call,*len)"];
"1000172" [label="(Call,*pptr > (const char *) ndo->ndo_snapend)"];
"1000167" [label="(Call,*len < 0 || *pptr > (const char *) ndo->ndo_snapend)"];
"1000170" [label="(Identifier,len)"];
"1000181" [label="(Identifier,NULL)"];
"1000136" [label="(Call,*pptr <= (const char *) ndo->ndo_snapend && *len >= 0 && **pptr)"];
"1000147" [label="(Call,*len)"];
"1000139" [label="(Identifier,pptr)"];
"1000112" [label="(Call,!pptr || !*pptr)"];
"1000145" [label="(Call,*len >= 0 && **pptr)"];
"1000171" [label="(Literal,0)"];
"1000169" [label="(Call,*len)"];
"1000119" [label="(Identifier,NULL)"];
"1000174" [label="(Identifier,pptr)"];
"1000121" [label="(Call,*pptr > (const char *) ndo->ndo_snapend)"];
"1000183" [label="(Identifier,s)"];
"1000152" [label="(Identifier,pptr)"];
"1000168" [label="(Call,*len < 0)"];
"1000146" [label="(Call,*len >= 0)"];
"1000114" [label="(Identifier,pptr)"];
"1000153" [label="(Block,)"];
"1000135" [label="(ControlStructure,while (*pptr <= (const char *) ndo->ndo_snapend && *len >= 0 && **pptr))"];
"1000156" [label="(Identifier,pptr)"];
"1000149" [label="(Literal,0)"];
"1000163" [label="(Call,(*len)--)"];
"1000164" [label="(Call,*len)"];
"1000158" [label="(Call,*len)"];
"1000166" [label="(ControlStructure,if (*len < 0 || *pptr > (const char *) ndo->ndo_snapend))"];
"1000162" [label="(Identifier,pptr)"];
"1000107" [label="(Call,*len <= 0 || !pptr || !*pptr)"];
"1000111" [label="(Literal,0)"];
"1000157" [label="(Call,(*len)--)"];
"1000150" [label="(Call,**pptr)"];
"1000108" [label="(Call,*len <= 0)"];
"1000123" [label="(Identifier,pptr)"];
"1000137" [label="(Call,*pptr <= (const char *) ndo->ndo_snapend)"];
"1000106" [label="(ControlStructure,if (*len <= 0 || !pptr || !*pptr))"];
"1000184" [label="(MethodReturn,RET)"];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000111"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000111" -> "1000108"  [label="AST: "];
"1000114" -> "1000108"  [label="CFG: "];
"1000107" -> "1000108"  [label="CFG: "];
"1000108" -> "1000184"  [label="DDG: *len"];
"1000108" -> "1000107"  [label="DDG: *len"];
"1000108" -> "1000107"  [label="DDG: 0"];
"1000108" -> "1000146"  [label="DDG: *len"];
"1000108" -> "1000157"  [label="DDG: *len"];
"1000108" -> "1000163"  [label="DDG: *len"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000112"  [label="CFG: "];
"1000112" -> "1000107"  [label="AST: "];
"1000119" -> "1000107"  [label="CFG: "];
"1000123" -> "1000107"  [label="CFG: "];
"1000107" -> "1000184"  [label="DDG: *len <= 0"];
"1000107" -> "1000184"  [label="DDG: *len <= 0 || !pptr || !*pptr"];
"1000107" -> "1000184"  [label="DDG: !pptr || !*pptr"];
"1000112" -> "1000107"  [label="DDG: !pptr"];
"1000112" -> "1000107"  [label="DDG: !*pptr"];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000149"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000149" -> "1000146"  [label="AST: "];
"1000152" -> "1000146"  [label="CFG: "];
"1000145" -> "1000146"  [label="CFG: "];
"1000146" -> "1000145"  [label="DDG: *len"];
"1000146" -> "1000145"  [label="DDG: 0"];
"1000157" -> "1000146"  [label="DDG: *len"];
"1000146" -> "1000157"  [label="DDG: *len"];
"1000146" -> "1000163"  [label="DDG: *len"];
"1000145" -> "1000136"  [label="AST: "];
"1000145" -> "1000150"  [label="CFG: "];
"1000150" -> "1000145"  [label="AST: "];
"1000136" -> "1000145"  [label="CFG: "];
"1000145" -> "1000184"  [label="DDG: **pptr"];
"1000145" -> "1000184"  [label="DDG: *len >= 0"];
"1000145" -> "1000136"  [label="DDG: *len >= 0"];
"1000145" -> "1000136"  [label="DDG: **pptr"];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000137"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000156" -> "1000136"  [label="CFG: "];
"1000162" -> "1000136"  [label="CFG: "];
"1000136" -> "1000184"  [label="DDG: *pptr <= (const char *) ndo->ndo_snapend && *len >= 0 && **pptr"];
"1000136" -> "1000184"  [label="DDG: *len >= 0 && **pptr"];
"1000136" -> "1000184"  [label="DDG: *pptr <= (const char *) ndo->ndo_snapend"];
"1000137" -> "1000136"  [label="DDG: *pptr"];
"1000137" -> "1000136"  [label="DDG: (const char *) ndo->ndo_snapend"];
"1000157" -> "1000153"  [label="AST: "];
"1000157" -> "1000158"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000139" -> "1000157"  [label="CFG: "];
"1000157" -> "1000163"  [label="DDG: *len"];
"1000163" -> "1000104"  [label="AST: "];
"1000163" -> "1000164"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000170" -> "1000163"  [label="CFG: "];
"1000163" -> "1000168"  [label="DDG: *len"];
"1000168" -> "1000167"  [label="AST: "];
"1000168" -> "1000171"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000171" -> "1000168"  [label="AST: "];
"1000174" -> "1000168"  [label="CFG: "];
"1000167" -> "1000168"  [label="CFG: "];
"1000168" -> "1000184"  [label="DDG: *len"];
"1000168" -> "1000167"  [label="DDG: *len"];
"1000168" -> "1000167"  [label="DDG: 0"];
"1000167" -> "1000166"  [label="AST: "];
"1000167" -> "1000172"  [label="CFG: "];
"1000172" -> "1000167"  [label="AST: "];
"1000181" -> "1000167"  [label="CFG: "];
"1000183" -> "1000167"  [label="CFG: "];
"1000167" -> "1000184"  [label="DDG: *len < 0"];
"1000167" -> "1000184"  [label="DDG: *pptr > (const char *) ndo->ndo_snapend"];
"1000167" -> "1000184"  [label="DDG: *len < 0 || *pptr > (const char *) ndo->ndo_snapend"];
"1000172" -> "1000167"  [label="DDG: *pptr"];
"1000172" -> "1000167"  [label="DDG: (const char *) ndo->ndo_snapend"];
"1000121" -> "1000167"  [label="DDG: *pptr > (const char *) ndo->ndo_snapend"];
}
