digraph "0_linux_bceaa90240b6019ed73b49965eac7d167610be69_2@API" {
"1000145" [label="(Call,ip_recv_error(sk, msg, len))"];
"1000137" [label="(Call,IS_UDPLITE(sk))"];
"1000115" [label="(Call,inet_sk(sk))"];
"1000105" [label="(MethodParameterIn,struct sock *sk)"];
"1000106" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000107" [label="(MethodParameterIn,size_t len)"];
"1000144" [label="(Return,return ip_recv_error(sk, msg, len);)"];
"1000335" [label="(Call,skb_free_datagram_locked(sk, skb))"];
"1000321" [label="(Call,ip_cmsg_recv(msg, skb))"];
"1000359" [label="(Call,sock_net(sk))"];
"1000113" [label="(Call,*inet = inet_sk(sk))"];
"1000268" [label="(Call,sock_net(sk))"];
"1000106" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000105" [label="(MethodParameterIn,struct sock *sk)"];
"1000363" [label="(Call,unlock_sock_fast(sk, slow))"];
"1000115" [label="(Call,inet_sk(sk))"];
"1000140" [label="(ControlStructure,if (flags & MSG_ERRQUEUE))"];
"1000144" [label="(Return,return ip_recv_error(sk, msg, len);)"];
"1000147" [label="(Identifier,msg)"];
"1000135" [label="(Call,is_udplite = IS_UDPLITE(sk))"];
"1000354" [label="(Call,sock_net(sk))"];
"1000116" [label="(Identifier,sk)"];
"1000107" [label="(MethodParameterIn,size_t len)"];
"1000272" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000344" [label="(Call,lock_sock_fast(sk))"];
"1000259" [label="(Call,sock_net(sk))"];
"1000152" [label="(Call,__skb_recv_datagram(sk, flags | (noblock ? MSG_DONTWAIT : 0),\n\t\t\t\t  &peeked, &off, &err))"];
"1000178" [label="(Call,copied = len)"];
"1000138" [label="(Identifier,sk)"];
"1000348" [label="(Call,skb_kill_datagram(sk, skb, flags))"];
"1000377" [label="(MethodReturn,int)"];
"1000137" [label="(Call,IS_UDPLITE(sk))"];
"1000146" [label="(Identifier,sk)"];
"1000148" [label="(Identifier,len)"];
"1000145" [label="(Call,ip_recv_error(sk, msg, len))"];
"1000145" -> "1000144"  [label="AST: "];
"1000145" -> "1000148"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000148" -> "1000145"  [label="AST: "];
"1000144" -> "1000145"  [label="CFG: "];
"1000145" -> "1000377"  [label="DDG: len"];
"1000145" -> "1000377"  [label="DDG: ip_recv_error(sk, msg, len)"];
"1000145" -> "1000377"  [label="DDG: sk"];
"1000145" -> "1000377"  [label="DDG: msg"];
"1000145" -> "1000144"  [label="DDG: ip_recv_error(sk, msg, len)"];
"1000137" -> "1000145"  [label="DDG: sk"];
"1000105" -> "1000145"  [label="DDG: sk"];
"1000106" -> "1000145"  [label="DDG: msg"];
"1000107" -> "1000145"  [label="DDG: len"];
"1000137" -> "1000135"  [label="AST: "];
"1000137" -> "1000138"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000137" -> "1000135"  [label="DDG: sk"];
"1000115" -> "1000137"  [label="DDG: sk"];
"1000105" -> "1000137"  [label="DDG: sk"];
"1000137" -> "1000152"  [label="DDG: sk"];
"1000115" -> "1000113"  [label="AST: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000115" -> "1000113"  [label="DDG: sk"];
"1000105" -> "1000115"  [label="DDG: sk"];
"1000105" -> "1000103"  [label="AST: "];
"1000105" -> "1000377"  [label="DDG: sk"];
"1000105" -> "1000152"  [label="DDG: sk"];
"1000105" -> "1000259"  [label="DDG: sk"];
"1000105" -> "1000268"  [label="DDG: sk"];
"1000105" -> "1000272"  [label="DDG: sk"];
"1000105" -> "1000335"  [label="DDG: sk"];
"1000105" -> "1000344"  [label="DDG: sk"];
"1000105" -> "1000348"  [label="DDG: sk"];
"1000105" -> "1000354"  [label="DDG: sk"];
"1000105" -> "1000359"  [label="DDG: sk"];
"1000105" -> "1000363"  [label="DDG: sk"];
"1000106" -> "1000103"  [label="AST: "];
"1000106" -> "1000377"  [label="DDG: msg"];
"1000106" -> "1000272"  [label="DDG: msg"];
"1000106" -> "1000321"  [label="DDG: msg"];
"1000107" -> "1000103"  [label="AST: "];
"1000107" -> "1000377"  [label="DDG: len"];
"1000107" -> "1000178"  [label="DDG: len"];
"1000144" -> "1000140"  [label="AST: "];
"1000377" -> "1000144"  [label="CFG: "];
"1000144" -> "1000377"  [label="DDG: <RET>"];
}
