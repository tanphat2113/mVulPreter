digraph "1_Chrome_96dbafe288dbe2f0cc45fa3c39daf6d0c37acbab_19@API" {
"1000261" [label="(Call,max = sizeof(numarray)/sizeof(numarray[0]))"];
"1000272" [label="(Call,xsltNumberFormatGetMultipleLevel(ctxt,\n\t\t\t\t\t\t      node,\n \t\t\t\t\t\t      data->countPat,\n \t\t\t\t\t\t      data->fromPat,\n \t\t\t\t\t\t      numarray,\n\t\t\t\t\t\t      max,\n\t\t\t\t\t\t      data->doc,\n\t\t\t\t\t\t      data->node))"];
"1000270" [label="(Call,amount = xsltNumberFormatGetMultipleLevel(ctxt,\n\t\t\t\t\t\t      node,\n \t\t\t\t\t\t      data->countPat,\n \t\t\t\t\t\t      data->fromPat,\n \t\t\t\t\t\t      numarray,\n\t\t\t\t\t\t      max,\n\t\t\t\t\t\t      data->doc,\n\t\t\t\t\t\t      data->node))"];
"1000290" [label="(Call,amount > 0)"];
"1000294" [label="(Call,xsltNumberFormatInsertNumbers(data,\n \t\t\t\t\t      numarray,\n\t\t\t\t\t      amount,\n\t\t\t\t\t      &tokens,\n\t\t\t\t\t      output))"];
"1000348" [label="(Call,xmlBufferContent(output))"];
"1000343" [label="(Call,xsltCopyTextString(ctxt, ctxt->insert, xmlBufferContent(output), 0))"];
"1000413" [label="(Call,output != NULL)"];
"1000416" [label="(Call,xmlBufferFree(output))"];
"1000137" [label="(Call,xsltEvalAttrValueTemplate(ctxt, data->node,\n \t\t\t\t\t     (const xmlChar *) \"format\",\n \t\t\t\t\t     XSLT_NAMESPACE))"];
"1000261" [label="(Call,max = sizeof(numarray)/sizeof(numarray[0]))"];
"1000283" [label="(Call,data->doc)"];
"1000289" [label="(ControlStructure,if (amount > 0))"];
"1000258" [label="(Block,)"];
"1000362" [label="(Call,tokens.end != NULL)"];
"1000193" [label="(Call,xsltNumberFormatInsertNumbers(data,\n\t\t\t\t\t  &number,\n\t\t\t\t\t  1,\n\t\t\t\t\t  &tokens,\n\t\t\t\t\t  output))"];
"1000273" [label="(Identifier,ctxt)"];
"1000291" [label="(Identifier,amount)"];
"1000295" [label="(Identifier,data)"];
"1000294" [label="(Call,xsltNumberFormatInsertNumbers(data,\n \t\t\t\t\t      numarray,\n\t\t\t\t\t      amount,\n\t\t\t\t\t      &tokens,\n\t\t\t\t\t      output))"];
"1000349" [label="(Identifier,output)"];
"1000165" [label="(Call,xsltNumberFormatTokenize(data->format, &tokens))"];
"1000414" [label="(Identifier,output)"];
"1000241" [label="(Call,xsltNumberFormatInsertNumbers(data,\n \t\t\t\t\t      &number,\n\t\t\t\t\t      1,\n\t\t\t\t\t      &tokens,\n\t\t\t\t\t      output))"];
"1000412" [label="(ControlStructure,if (output != NULL))"];
"1000300" [label="(Identifier,output)"];
"1000415" [label="(Identifier,NULL)"];
"1000282" [label="(Identifier,max)"];
"1000296" [label="(Identifier,numarray)"];
"1000218" [label="(Call,xsltNumberFormatGetMultipleLevel(ctxt,\n\t\t\t\t\t\t      node,\n \t\t\t\t\t\t      data->countPat,\n \t\t\t\t\t\t      data->fromPat,\n \t\t\t\t\t\t      &number,\n\t\t\t\t\t\t      1,\n\t\t\t\t\t\t      data->doc,\n\t\t\t\t\t\t      data->node))"];
"1000292" [label="(Literal,0)"];
"1000105" [label="(MethodParameterIn,xsltNumberDataPtr data)"];
"1000270" [label="(Call,amount = xsltNumberFormatGetMultipleLevel(ctxt,\n\t\t\t\t\t\t      node,\n \t\t\t\t\t\t      data->countPat,\n \t\t\t\t\t\t      data->fromPat,\n \t\t\t\t\t\t      numarray,\n\t\t\t\t\t\t      max,\n\t\t\t\t\t\t      data->doc,\n\t\t\t\t\t\t      data->node))"];
"1000275" [label="(Call,data->countPat)"];
"1000272" [label="(Call,xsltNumberFormatGetMultipleLevel(ctxt,\n\t\t\t\t\t\t      node,\n \t\t\t\t\t\t      data->countPat,\n \t\t\t\t\t\t      data->fromPat,\n \t\t\t\t\t\t      numarray,\n\t\t\t\t\t\t      max,\n\t\t\t\t\t\t      data->doc,\n\t\t\t\t\t\t      data->node))"];
"1000262" [label="(Identifier,max)"];
"1000161" [label="(Call,output == NULL)"];
"1000335" [label="(Call,xsltNumberFormatInsertNumbers(data,\n \t\t\t\t\t      &number,\n\t\t\t\t\t      1,\n\t\t\t\t\t      &tokens,\n\t\t\t\t\t      output))"];
"1000343" [label="(Call,xsltCopyTextString(ctxt, ctxt->insert, xmlBufferContent(output), 0))"];
"1000107" [label="(Block,)"];
"1000313" [label="(Call,xsltNumberFormatGetAnyLevel(ctxt,\n \t\t\t\t\t\t node,\n \t\t\t\t\t\t data->countPat,\n \t\t\t\t\t\t data->fromPat,\n\t\t\t\t\t\t &number,\n\t\t\t\t\t\t data->doc,\n\t\t\t\t\t\t data->node))"];
"1000417" [label="(Identifier,output)"];
"1000418" [label="(MethodReturn,RET)"];
"1000286" [label="(Call,data->node)"];
"1000297" [label="(Identifier,amount)"];
"1000350" [label="(Literal,0)"];
"1000104" [label="(MethodParameterIn,xsltTransformContextPtr ctxt)"];
"1000293" [label="(Block,)"];
"1000384" [label="(Call,tokens.tokens[i].separator != NULL)"];
"1000278" [label="(Call,data->fromPat)"];
"1000416" [label="(Call,xmlBufferFree(output))"];
"1000106" [label="(MethodParameterIn,xmlNodePtr node)"];
"1000345" [label="(Call,ctxt->insert)"];
"1000263" [label="(Call,sizeof(numarray)/sizeof(numarray[0]))"];
"1000298" [label="(Call,&tokens)"];
"1000354" [label="(Identifier,tokens)"];
"1000271" [label="(Identifier,amount)"];
"1000344" [label="(Identifier,ctxt)"];
"1000348" [label="(Call,xmlBufferContent(output))"];
"1000281" [label="(Identifier,numarray)"];
"1000290" [label="(Call,amount > 0)"];
"1000413" [label="(Call,output != NULL)"];
"1000274" [label="(Identifier,node)"];
"1000261" -> "1000258"  [label="AST: "];
"1000261" -> "1000263"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000263" -> "1000261"  [label="AST: "];
"1000271" -> "1000261"  [label="CFG: "];
"1000261" -> "1000418"  [label="DDG: sizeof(numarray)/sizeof(numarray[0])"];
"1000261" -> "1000272"  [label="DDG: max"];
"1000272" -> "1000270"  [label="AST: "];
"1000272" -> "1000286"  [label="CFG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000274" -> "1000272"  [label="AST: "];
"1000275" -> "1000272"  [label="AST: "];
"1000278" -> "1000272"  [label="AST: "];
"1000281" -> "1000272"  [label="AST: "];
"1000282" -> "1000272"  [label="AST: "];
"1000283" -> "1000272"  [label="AST: "];
"1000286" -> "1000272"  [label="AST: "];
"1000270" -> "1000272"  [label="CFG: "];
"1000272" -> "1000418"  [label="DDG: data->node"];
"1000272" -> "1000418"  [label="DDG: max"];
"1000272" -> "1000418"  [label="DDG: data->countPat"];
"1000272" -> "1000418"  [label="DDG: node"];
"1000272" -> "1000418"  [label="DDG: data->fromPat"];
"1000272" -> "1000418"  [label="DDG: numarray"];
"1000272" -> "1000418"  [label="DDG: data->doc"];
"1000272" -> "1000270"  [label="DDG: data->fromPat"];
"1000272" -> "1000270"  [label="DDG: ctxt"];
"1000272" -> "1000270"  [label="DDG: data->countPat"];
"1000272" -> "1000270"  [label="DDG: data->doc"];
"1000272" -> "1000270"  [label="DDG: numarray"];
"1000272" -> "1000270"  [label="DDG: node"];
"1000272" -> "1000270"  [label="DDG: max"];
"1000272" -> "1000270"  [label="DDG: data->node"];
"1000137" -> "1000272"  [label="DDG: ctxt"];
"1000137" -> "1000272"  [label="DDG: data->node"];
"1000104" -> "1000272"  [label="DDG: ctxt"];
"1000106" -> "1000272"  [label="DDG: node"];
"1000272" -> "1000294"  [label="DDG: numarray"];
"1000272" -> "1000343"  [label="DDG: ctxt"];
"1000270" -> "1000258"  [label="AST: "];
"1000271" -> "1000270"  [label="AST: "];
"1000291" -> "1000270"  [label="CFG: "];
"1000270" -> "1000418"  [label="DDG: xsltNumberFormatGetMultipleLevel(ctxt,\n\t\t\t\t\t\t      node,\n \t\t\t\t\t\t      data->countPat,\n \t\t\t\t\t\t      data->fromPat,\n \t\t\t\t\t\t      numarray,\n\t\t\t\t\t\t      max,\n\t\t\t\t\t\t      data->doc,\n\t\t\t\t\t\t      data->node)"];
"1000270" -> "1000290"  [label="DDG: amount"];
"1000290" -> "1000289"  [label="AST: "];
"1000290" -> "1000292"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000292" -> "1000290"  [label="AST: "];
"1000295" -> "1000290"  [label="CFG: "];
"1000344" -> "1000290"  [label="CFG: "];
"1000290" -> "1000418"  [label="DDG: amount"];
"1000290" -> "1000418"  [label="DDG: amount > 0"];
"1000290" -> "1000294"  [label="DDG: amount"];
"1000294" -> "1000293"  [label="AST: "];
"1000294" -> "1000300"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000296" -> "1000294"  [label="AST: "];
"1000297" -> "1000294"  [label="AST: "];
"1000298" -> "1000294"  [label="AST: "];
"1000300" -> "1000294"  [label="AST: "];
"1000344" -> "1000294"  [label="CFG: "];
"1000294" -> "1000418"  [label="DDG: &tokens"];
"1000294" -> "1000418"  [label="DDG: xsltNumberFormatInsertNumbers(data,\n \t\t\t\t\t      numarray,\n\t\t\t\t\t      amount,\n\t\t\t\t\t      &tokens,\n\t\t\t\t\t      output)"];
"1000294" -> "1000418"  [label="DDG: numarray"];
"1000294" -> "1000418"  [label="DDG: amount"];
"1000294" -> "1000418"  [label="DDG: data"];
"1000105" -> "1000294"  [label="DDG: data"];
"1000165" -> "1000294"  [label="DDG: &tokens"];
"1000161" -> "1000294"  [label="DDG: output"];
"1000294" -> "1000348"  [label="DDG: output"];
"1000348" -> "1000343"  [label="AST: "];
"1000348" -> "1000349"  [label="CFG: "];
"1000349" -> "1000348"  [label="AST: "];
"1000350" -> "1000348"  [label="CFG: "];
"1000348" -> "1000343"  [label="DDG: output"];
"1000241" -> "1000348"  [label="DDG: output"];
"1000193" -> "1000348"  [label="DDG: output"];
"1000335" -> "1000348"  [label="DDG: output"];
"1000161" -> "1000348"  [label="DDG: output"];
"1000348" -> "1000413"  [label="DDG: output"];
"1000343" -> "1000107"  [label="AST: "];
"1000343" -> "1000350"  [label="CFG: "];
"1000344" -> "1000343"  [label="AST: "];
"1000345" -> "1000343"  [label="AST: "];
"1000350" -> "1000343"  [label="AST: "];
"1000354" -> "1000343"  [label="CFG: "];
"1000343" -> "1000418"  [label="DDG: ctxt"];
"1000343" -> "1000418"  [label="DDG: xsltCopyTextString(ctxt, ctxt->insert, xmlBufferContent(output), 0)"];
"1000343" -> "1000418"  [label="DDG: xmlBufferContent(output)"];
"1000343" -> "1000418"  [label="DDG: ctxt->insert"];
"1000218" -> "1000343"  [label="DDG: ctxt"];
"1000137" -> "1000343"  [label="DDG: ctxt"];
"1000313" -> "1000343"  [label="DDG: ctxt"];
"1000104" -> "1000343"  [label="DDG: ctxt"];
"1000413" -> "1000412"  [label="AST: "];
"1000413" -> "1000415"  [label="CFG: "];
"1000414" -> "1000413"  [label="AST: "];
"1000415" -> "1000413"  [label="AST: "];
"1000417" -> "1000413"  [label="CFG: "];
"1000418" -> "1000413"  [label="CFG: "];
"1000413" -> "1000418"  [label="DDG: output"];
"1000413" -> "1000418"  [label="DDG: output != NULL"];
"1000413" -> "1000418"  [label="DDG: NULL"];
"1000161" -> "1000413"  [label="DDG: output"];
"1000161" -> "1000413"  [label="DDG: NULL"];
"1000384" -> "1000413"  [label="DDG: NULL"];
"1000362" -> "1000413"  [label="DDG: NULL"];
"1000413" -> "1000416"  [label="DDG: output"];
"1000416" -> "1000412"  [label="AST: "];
"1000416" -> "1000417"  [label="CFG: "];
"1000417" -> "1000416"  [label="AST: "];
"1000418" -> "1000416"  [label="CFG: "];
"1000416" -> "1000418"  [label="DDG: xmlBufferFree(output)"];
"1000416" -> "1000418"  [label="DDG: output"];
}
