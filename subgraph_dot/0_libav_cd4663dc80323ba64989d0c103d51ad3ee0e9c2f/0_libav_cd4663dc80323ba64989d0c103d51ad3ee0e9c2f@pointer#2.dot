digraph "0_libav_cd4663dc80323ba64989d0c103d51ad3ee0e9c2f@pointer" {
"1000213" [label="(Call,smacker_decode_tree(bc, hc, prefix, length))"];
"1000121" [label="(Call,bitstream_read_bit(bc))"];
"1000103" [label="(MethodParameterIn,BitstreamContext *bc)"];
"1000104" [label="(MethodParameterIn,HuffContext *hc)"];
"1000105" [label="(MethodParameterIn,uint32_t prefix)"];
"1000209" [label="(Call,length++)"];
"1000109" [label="(Call,length > SMKTREE_DECODE_MAX_RECURSION)"];
"1000106" [label="(MethodParameterIn,int length)"];
"1000211" [label="(Call,r = smacker_decode_tree(bc, hc, prefix, length))"];
"1000220" [label="(Return,return r;)"];
"1000223" [label="(Call,smacker_decode_tree(bc, hc, prefix | (1 << (length - 1)), length))"];
"1000222" [label="(Return,return smacker_decode_tree(bc, hc, prefix | (1 << (length - 1)), length);)"];
"1000226" [label="(Call,prefix | (1 << (length - 1)))"];
"1000230" [label="(Call,length - 1)"];
"1000228" [label="(Call,1 << (length - 1))"];
"1000120" [label="(Call,!bitstream_read_bit(bc))"];
"1000234" [label="(MethodReturn,static int)"];
"1000109" [label="(Call,length > SMKTREE_DECODE_MAX_RECURSION)"];
"1000227" [label="(Identifier,prefix)"];
"1000214" [label="(Identifier,bc)"];
"1000149" [label="(Call,hc->lengths[hc->current] = length)"];
"1000121" [label="(Call,bitstream_read_bit(bc))"];
"1000211" [label="(Call,r = smacker_decode_tree(bc, hc, prefix, length))"];
"1000219" [label="(Identifier,r)"];
"1000213" [label="(Call,smacker_decode_tree(bc, hc, prefix, length))"];
"1000122" [label="(Identifier,bc)"];
"1000224" [label="(Identifier,bc)"];
"1000233" [label="(Identifier,length)"];
"1000229" [label="(Literal,1)"];
"1000232" [label="(Literal,1)"];
"1000231" [label="(Identifier,length)"];
"1000210" [label="(Identifier,length)"];
"1000212" [label="(Identifier,r)"];
"1000223" [label="(Call,smacker_decode_tree(bc, hc, prefix | (1 << (length - 1)), length))"];
"1000194" [label="(Call,hc->maxlength < length)"];
"1000218" [label="(ControlStructure,if(r))"];
"1000105" [label="(MethodParameterIn,uint32_t prefix)"];
"1000216" [label="(Identifier,prefix)"];
"1000228" [label="(Call,1 << (length - 1))"];
"1000114" [label="(Identifier,NULL)"];
"1000186" [label="(Call,bitstream_read(bc, 8))"];
"1000104" [label="(MethodParameterIn,HuffContext *hc)"];
"1000221" [label="(Identifier,r)"];
"1000106" [label="(MethodParameterIn,int length)"];
"1000220" [label="(Return,return r;)"];
"1000199" [label="(Call,hc->maxlength = length)"];
"1000222" [label="(Return,return smacker_decode_tree(bc, hc, prefix | (1 << (length - 1)), length);)"];
"1000111" [label="(Identifier,SMKTREE_DECODE_MAX_RECURSION)"];
"1000226" [label="(Call,prefix | (1 << (length - 1)))"];
"1000209" [label="(Call,length++)"];
"1000225" [label="(Identifier,hc)"];
"1000230" [label="(Call,length - 1)"];
"1000140" [label="(Call,hc->bits[hc->current] = prefix)"];
"1000108" [label="(ControlStructure,if (length > SMKTREE_DECODE_MAX_RECURSION))"];
"1000215" [label="(Identifier,hc)"];
"1000103" [label="(MethodParameterIn,BitstreamContext *bc)"];
"1000207" [label="(Block,)"];
"1000217" [label="(Identifier,length)"];
"1000110" [label="(Identifier,length)"];
"1000213" -> "1000211"  [label="AST: "];
"1000213" -> "1000217"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000215" -> "1000213"  [label="AST: "];
"1000216" -> "1000213"  [label="AST: "];
"1000217" -> "1000213"  [label="AST: "];
"1000211" -> "1000213"  [label="CFG: "];
"1000213" -> "1000234"  [label="DDG: prefix"];
"1000213" -> "1000234"  [label="DDG: length"];
"1000213" -> "1000234"  [label="DDG: bc"];
"1000213" -> "1000234"  [label="DDG: hc"];
"1000213" -> "1000211"  [label="DDG: bc"];
"1000213" -> "1000211"  [label="DDG: hc"];
"1000213" -> "1000211"  [label="DDG: prefix"];
"1000213" -> "1000211"  [label="DDG: length"];
"1000121" -> "1000213"  [label="DDG: bc"];
"1000103" -> "1000213"  [label="DDG: bc"];
"1000104" -> "1000213"  [label="DDG: hc"];
"1000105" -> "1000213"  [label="DDG: prefix"];
"1000209" -> "1000213"  [label="DDG: length"];
"1000106" -> "1000213"  [label="DDG: length"];
"1000213" -> "1000223"  [label="DDG: bc"];
"1000213" -> "1000223"  [label="DDG: hc"];
"1000213" -> "1000226"  [label="DDG: prefix"];
"1000213" -> "1000230"  [label="DDG: length"];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000122"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000120" -> "1000121"  [label="CFG: "];
"1000121" -> "1000234"  [label="DDG: bc"];
"1000121" -> "1000120"  [label="DDG: bc"];
"1000103" -> "1000121"  [label="DDG: bc"];
"1000121" -> "1000186"  [label="DDG: bc"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000234"  [label="DDG: bc"];
"1000103" -> "1000186"  [label="DDG: bc"];
"1000103" -> "1000223"  [label="DDG: bc"];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1000234"  [label="DDG: hc"];
"1000104" -> "1000223"  [label="DDG: hc"];
"1000105" -> "1000102"  [label="AST: "];
"1000105" -> "1000234"  [label="DDG: prefix"];
"1000105" -> "1000140"  [label="DDG: prefix"];
"1000105" -> "1000226"  [label="DDG: prefix"];
"1000209" -> "1000207"  [label="AST: "];
"1000209" -> "1000210"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000212" -> "1000209"  [label="CFG: "];
"1000109" -> "1000209"  [label="DDG: length"];
"1000106" -> "1000209"  [label="DDG: length"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000114" -> "1000109"  [label="CFG: "];
"1000122" -> "1000109"  [label="CFG: "];
"1000109" -> "1000234"  [label="DDG: length"];
"1000109" -> "1000234"  [label="DDG: SMKTREE_DECODE_MAX_RECURSION"];
"1000109" -> "1000234"  [label="DDG: length > SMKTREE_DECODE_MAX_RECURSION"];
"1000106" -> "1000109"  [label="DDG: length"];
"1000109" -> "1000149"  [label="DDG: length"];
"1000109" -> "1000194"  [label="DDG: length"];
"1000106" -> "1000102"  [label="AST: "];
"1000106" -> "1000234"  [label="DDG: length"];
"1000106" -> "1000149"  [label="DDG: length"];
"1000106" -> "1000194"  [label="DDG: length"];
"1000106" -> "1000199"  [label="DDG: length"];
"1000106" -> "1000223"  [label="DDG: length"];
"1000106" -> "1000230"  [label="DDG: length"];
"1000211" -> "1000207"  [label="AST: "];
"1000212" -> "1000211"  [label="AST: "];
"1000219" -> "1000211"  [label="CFG: "];
"1000211" -> "1000234"  [label="DDG: r"];
"1000211" -> "1000234"  [label="DDG: smacker_decode_tree(bc, hc, prefix, length)"];
"1000211" -> "1000220"  [label="DDG: r"];
"1000220" -> "1000218"  [label="AST: "];
"1000220" -> "1000221"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000234" -> "1000220"  [label="CFG: "];
"1000220" -> "1000234"  [label="DDG: <RET>"];
"1000221" -> "1000220"  [label="DDG: r"];
"1000223" -> "1000222"  [label="AST: "];
"1000223" -> "1000233"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000225" -> "1000223"  [label="AST: "];
"1000226" -> "1000223"  [label="AST: "];
"1000233" -> "1000223"  [label="AST: "];
"1000222" -> "1000223"  [label="CFG: "];
"1000223" -> "1000234"  [label="DDG: length"];
"1000223" -> "1000234"  [label="DDG: hc"];
"1000223" -> "1000234"  [label="DDG: smacker_decode_tree(bc, hc, prefix | (1 << (length - 1)), length)"];
"1000223" -> "1000234"  [label="DDG: prefix | (1 << (length - 1))"];
"1000223" -> "1000234"  [label="DDG: bc"];
"1000223" -> "1000222"  [label="DDG: smacker_decode_tree(bc, hc, prefix | (1 << (length - 1)), length)"];
"1000226" -> "1000223"  [label="DDG: prefix"];
"1000226" -> "1000223"  [label="DDG: 1 << (length - 1)"];
"1000230" -> "1000223"  [label="DDG: length"];
"1000222" -> "1000207"  [label="AST: "];
"1000234" -> "1000222"  [label="CFG: "];
"1000222" -> "1000234"  [label="DDG: <RET>"];
"1000226" -> "1000228"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000228" -> "1000226"  [label="AST: "];
"1000233" -> "1000226"  [label="CFG: "];
"1000226" -> "1000234"  [label="DDG: prefix"];
"1000226" -> "1000234"  [label="DDG: 1 << (length - 1)"];
"1000228" -> "1000226"  [label="DDG: 1"];
"1000228" -> "1000226"  [label="DDG: length - 1"];
"1000230" -> "1000228"  [label="AST: "];
"1000230" -> "1000232"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000232" -> "1000230"  [label="AST: "];
"1000228" -> "1000230"  [label="CFG: "];
"1000230" -> "1000228"  [label="DDG: length"];
"1000230" -> "1000228"  [label="DDG: 1"];
"1000229" -> "1000228"  [label="AST: "];
"1000228" -> "1000234"  [label="DDG: length - 1"];
}
