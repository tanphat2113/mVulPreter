digraph "0_ghostscript_c3476dde7743761a4e1d39a631716199b696b880@API" {
"1000574" [label="(Call,!pdev->is_ps2write)"];
"1000573" [label="(Call,!pdev->is_ps2write && !(locked && pdev->params.LockDistillerParams))"];
"1000569" [label="(Call,code == 0 && !pdev->is_ps2write && !(locked && pdev->params.LockDistillerParams))"];
"1000689" [label="(Call,pdev->is_ps2write && (code = param_read_bool(plist, \"ProduceDSC\", &pdev->ProduceDSC)) < 0)"];
"1001430" [label="(Call,pdev->Linearise && pdev->is_ps2write)"];
"1001449" [label="(Call,pdev->Linearise && pdev->OwnerPassword.size != 0)"];
"1001429" [label="(ControlStructure,if (pdev->Linearise && pdev->is_ps2write))"];
"1001473" [label="(Identifier,pdev)"];
"1000580" [label="(Identifier,locked)"];
"1001449" [label="(Call,pdev->Linearise && pdev->OwnerPassword.size != 0)"];
"1001440" [label="(Identifier,pdev)"];
"1000690" [label="(Call,pdev->is_ps2write)"];
"1001451" [label="(Identifier,pdev)"];
"1001448" [label="(ControlStructure,if (pdev->Linearise && pdev->OwnerPassword.size != 0))"];
"1001549" [label="(MethodReturn,RET)"];
"1001434" [label="(Call,pdev->is_ps2write)"];
"1000569" [label="(Call,code == 0 && !pdev->is_ps2write && !(locked && pdev->params.LockDistillerParams))"];
"1000693" [label="(Call,(code = param_read_bool(plist, \"ProduceDSC\", &pdev->ProduceDSC)) < 0)"];
"1000578" [label="(Call,!(locked && pdev->params.LockDistillerParams))"];
"1000588" [label="(Identifier,pdev)"];
"1000570" [label="(Call,code == 0)"];
"1000573" [label="(Call,!pdev->is_ps2write && !(locked && pdev->params.LockDistillerParams))"];
"1001450" [label="(Call,pdev->Linearise)"];
"1000575" [label="(Call,pdev->is_ps2write)"];
"1000568" [label="(ControlStructure,if (code == 0 && !pdev->is_ps2write && !(locked && pdev->params.LockDistillerParams)))"];
"1001463" [label="(Identifier,pdev)"];
"1001378" [label="(Call,pdev->OwnerPassword.size != 0 &&\n         memcmp(pdev->OwnerPassword.data, save_dev->OwnerPassword.data,\n         pdev->OwnerPassword.size) != 0)"];
"1001430" [label="(Call,pdev->Linearise && pdev->is_ps2write)"];
"1000713" [label="(Identifier,pdev)"];
"1001453" [label="(Call,pdev->OwnerPassword.size != 0)"];
"1001443" [label="(Call,pdev->Linearise = false)"];
"1000574" [label="(Call,!pdev->is_ps2write)"];
"1000689" [label="(Call,pdev->is_ps2write && (code = param_read_bool(plist, \"ProduceDSC\", &pdev->ProduceDSC)) < 0)"];
"1000706" [label="(Identifier,plist)"];
"1001431" [label="(Call,pdev->Linearise)"];
"1000593" [label="(Identifier,plist)"];
"1000688" [label="(ControlStructure,if (pdev->is_ps2write && (code = param_read_bool(plist, \"ProduceDSC\", &pdev->ProduceDSC)) < 0))"];
"1000417" [label="(Call,!(locked && pdev->params.LockDistillerParams))"];
"1000574" -> "1000573"  [label="AST: "];
"1000574" -> "1000575"  [label="CFG: "];
"1000575" -> "1000574"  [label="AST: "];
"1000580" -> "1000574"  [label="CFG: "];
"1000573" -> "1000574"  [label="CFG: "];
"1000574" -> "1001549"  [label="DDG: "];
"1000574" -> "1000573"  [label="DDG: "];
"1000574" -> "1000689"  [label="DDG: "];
"1000573" -> "1000569"  [label="AST: "];
"1000573" -> "1000578"  [label="CFG: "];
"1000578" -> "1000573"  [label="AST: "];
"1000569" -> "1000573"  [label="CFG: "];
"1000573" -> "1001549"  [label="DDG: "];
"1000573" -> "1001549"  [label="DDG: "];
"1000573" -> "1000569"  [label="DDG: "];
"1000573" -> "1000569"  [label="DDG: "];
"1000578" -> "1000573"  [label="DDG: "];
"1000417" -> "1000573"  [label="DDG: "];
"1000569" -> "1000568"  [label="AST: "];
"1000569" -> "1000570"  [label="CFG: "];
"1000570" -> "1000569"  [label="AST: "];
"1000588" -> "1000569"  [label="CFG: "];
"1000593" -> "1000569"  [label="CFG: "];
"1000569" -> "1001549"  [label="DDG: "];
"1000569" -> "1001549"  [label="DDG: "];
"1000569" -> "1001549"  [label="DDG: "];
"1000570" -> "1000569"  [label="DDG: "];
"1000570" -> "1000569"  [label="DDG: "];
"1000689" -> "1000688"  [label="AST: "];
"1000689" -> "1000690"  [label="CFG: "];
"1000689" -> "1000693"  [label="CFG: "];
"1000690" -> "1000689"  [label="AST: "];
"1000693" -> "1000689"  [label="AST: "];
"1000706" -> "1000689"  [label="CFG: "];
"1000713" -> "1000689"  [label="CFG: "];
"1000689" -> "1001549"  [label="DDG: "];
"1000689" -> "1001549"  [label="DDG: "];
"1000689" -> "1001549"  [label="DDG: "];
"1000693" -> "1000689"  [label="DDG: "];
"1000689" -> "1001430"  [label="DDG: "];
"1001430" -> "1001429"  [label="AST: "];
"1001430" -> "1001431"  [label="CFG: "];
"1001430" -> "1001434"  [label="CFG: "];
"1001431" -> "1001430"  [label="AST: "];
"1001434" -> "1001430"  [label="AST: "];
"1001440" -> "1001430"  [label="CFG: "];
"1001451" -> "1001430"  [label="CFG: "];
"1001430" -> "1001549"  [label="DDG: "];
"1001430" -> "1001549"  [label="DDG: "];
"1001430" -> "1001449"  [label="DDG: "];
"1001449" -> "1001448"  [label="AST: "];
"1001449" -> "1001450"  [label="CFG: "];
"1001449" -> "1001453"  [label="CFG: "];
"1001450" -> "1001449"  [label="AST: "];
"1001453" -> "1001449"  [label="AST: "];
"1001463" -> "1001449"  [label="CFG: "];
"1001473" -> "1001449"  [label="CFG: "];
"1001449" -> "1001549"  [label="DDG: "];
"1001449" -> "1001549"  [label="DDG: "];
"1001449" -> "1001549"  [label="DDG: "];
"1001443" -> "1001449"  [label="DDG: "];
"1001378" -> "1001449"  [label="DDG: "];
"1001453" -> "1001449"  [label="DDG: "];
"1001453" -> "1001449"  [label="DDG: "];
}
