digraph "0_savannah_ba6b44f6745b14dce414761a8e4b35d31b176bba@pointer" {
"1000541" [label="(Call,opt.limit_rate || elapsed)"];
"1000348" [label="(Call,opt.limit_rate && opt.limit_rate < dlbufsize)"];
"1000335" [label="(Call,opt.limit_rate || elapsed)"];
"1000122" [label="(MethodParameterIn,double *elapsed)"];
"1000352" [label="(Call,opt.limit_rate < dlbufsize)"];
"1000192" [label="(Call,dlbufsize * 4)"];
"1000141" [label="(Call,xmalloc (dlbufsize))"];
"1000131" [label="(Call,dlbufsize = max (BUFSIZ, 8 * 1024))"];
"1000133" [label="(Call,max (BUFSIZ, 8 * 1024))"];
"1000135" [label="(Call,8 * 1024)"];
"1000539" [label="(Call,progress || opt.limit_rate || elapsed)"];
"1000760" [label="(Call,progress_update (progress, ret, ptimer_read (timer)))"];
"1000122" [label="(MethodParameterIn,double *elapsed)"];
"1000365" [label="(Call,exact ? MIN (toread - sum_read, dlbufsize) : dlbufsize)"];
"1000131" [label="(Call,dlbufsize = max (BUFSIZ, 8 * 1024))"];
"1000136" [label="(Literal,8)"];
"1000357" [label="(Call,dlbufsize = opt.limit_rate)"];
"1000336" [label="(Call,opt.limit_rate)"];
"1000758" [label="(ControlStructure,if (progress))"];
"1000542" [label="(Call,opt.limit_rate)"];
"1000356" [label="(Identifier,dlbufsize)"];
"1000461" [label="(Call,MIN (remaining_chunk_size, dlbufsize))"];
"1000761" [label="(Identifier,progress)"];
"1000358" [label="(Identifier,dlbufsize)"];
"1000139" [label="(Call,*dlbuf = xmalloc (dlbufsize))"];
"1000133" [label="(Call,max (BUFSIZ, 8 * 1024))"];
"1000760" [label="(Call,progress_update (progress, ret, ptimer_read (timer)))"];
"1000558" [label="(Call,ret > 0)"];
"1000367" [label="(Call,MIN (toread - sum_read, dlbufsize))"];
"1000347" [label="(ControlStructure,if (opt.limit_rate && opt.limit_rate < dlbufsize))"];
"1000339" [label="(Identifier,elapsed)"];
"1000192" [label="(Call,dlbufsize * 4)"];
"1000137" [label="(Literal,1024)"];
"1000142" [label="(Identifier,dlbufsize)"];
"1000349" [label="(Call,opt.limit_rate)"];
"1000762" [label="(Identifier,ret)"];
"1000755" [label="(Call,limit_bandwidth (ret, timer))"];
"1000352" [label="(Call,opt.limit_rate < dlbufsize)"];
"1000335" [label="(Call,opt.limit_rate || elapsed)"];
"1000685" [label="(Call,write_data (out, out2, dlbuf, ret, &skip,\n                                      &sum_written))"];
"1000193" [label="(Identifier,dlbufsize)"];
"1000333" [label="(Call,progress || opt.limit_rate || elapsed)"];
"1000540" [label="(Identifier,progress)"];
"1000134" [label="(Identifier,BUFSIZ)"];
"1000539" [label="(Call,progress || opt.limit_rate || elapsed)"];
"1000559" [label="(Identifier,ret)"];
"1000140" [label="(Identifier,dlbuf)"];
"1000348" [label="(Call,opt.limit_rate && opt.limit_rate < dlbufsize)"];
"1000538" [label="(ControlStructure,if (progress || opt.limit_rate || elapsed))"];
"1000141" [label="(Call,xmalloc (dlbufsize))"];
"1000541" [label="(Call,opt.limit_rate || elapsed)"];
"1000125" [label="(Block,)"];
"1000353" [label="(Call,opt.limit_rate)"];
"1000768" [label="(Identifier,toread)"];
"1000135" [label="(Call,8 * 1024)"];
"1000190" [label="(Call,gzbufsize = dlbufsize * 4)"];
"1000194" [label="(Literal,4)"];
"1000548" [label="(Identifier,timer)"];
"1000545" [label="(Identifier,elapsed)"];
"1000363" [label="(Call,rdsize = exact ? MIN (toread - sum_read, dlbufsize) : dlbufsize)"];
"1000783" [label="(MethodReturn,RET)"];
"1000763" [label="(Call,ptimer_read (timer))"];
"1000132" [label="(Identifier,dlbufsize)"];
"1000364" [label="(Identifier,rdsize)"];
"1000541" -> "1000539"  [label="AST: "];
"1000541" -> "1000542"  [label="CFG: "];
"1000541" -> "1000545"  [label="CFG: "];
"1000542" -> "1000541"  [label="AST: "];
"1000545" -> "1000541"  [label="AST: "];
"1000539" -> "1000541"  [label="CFG: "];
"1000541" -> "1000783"  [label="DDG: opt.limit_rate"];
"1000541" -> "1000783"  [label="DDG: elapsed"];
"1000541" -> "1000539"  [label="DDG: opt.limit_rate"];
"1000541" -> "1000539"  [label="DDG: elapsed"];
"1000348" -> "1000541"  [label="DDG: opt.limit_rate"];
"1000335" -> "1000541"  [label="DDG: elapsed"];
"1000122" -> "1000541"  [label="DDG: elapsed"];
"1000348" -> "1000347"  [label="AST: "];
"1000348" -> "1000349"  [label="CFG: "];
"1000348" -> "1000352"  [label="CFG: "];
"1000349" -> "1000348"  [label="AST: "];
"1000352" -> "1000348"  [label="AST: "];
"1000358" -> "1000348"  [label="CFG: "];
"1000364" -> "1000348"  [label="CFG: "];
"1000348" -> "1000783"  [label="DDG: opt.limit_rate"];
"1000348" -> "1000783"  [label="DDG: opt.limit_rate && opt.limit_rate < dlbufsize"];
"1000348" -> "1000783"  [label="DDG: opt.limit_rate < dlbufsize"];
"1000335" -> "1000348"  [label="DDG: opt.limit_rate"];
"1000352" -> "1000348"  [label="DDG: opt.limit_rate"];
"1000352" -> "1000348"  [label="DDG: dlbufsize"];
"1000348" -> "1000357"  [label="DDG: opt.limit_rate"];
"1000335" -> "1000333"  [label="AST: "];
"1000335" -> "1000336"  [label="CFG: "];
"1000335" -> "1000339"  [label="CFG: "];
"1000336" -> "1000335"  [label="AST: "];
"1000339" -> "1000335"  [label="AST: "];
"1000333" -> "1000335"  [label="CFG: "];
"1000335" -> "1000783"  [label="DDG: elapsed"];
"1000335" -> "1000333"  [label="DDG: opt.limit_rate"];
"1000335" -> "1000333"  [label="DDG: elapsed"];
"1000122" -> "1000335"  [label="DDG: elapsed"];
"1000335" -> "1000352"  [label="DDG: opt.limit_rate"];
"1000122" -> "1000114"  [label="AST: "];
"1000122" -> "1000783"  [label="DDG: elapsed"];
"1000352" -> "1000356"  [label="CFG: "];
"1000353" -> "1000352"  [label="AST: "];
"1000356" -> "1000352"  [label="AST: "];
"1000192" -> "1000352"  [label="DDG: dlbufsize"];
"1000352" -> "1000363"  [label="DDG: dlbufsize"];
"1000352" -> "1000367"  [label="DDG: dlbufsize"];
"1000352" -> "1000365"  [label="DDG: dlbufsize"];
"1000352" -> "1000461"  [label="DDG: dlbufsize"];
"1000192" -> "1000190"  [label="AST: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000194" -> "1000192"  [label="AST: "];
"1000190" -> "1000192"  [label="CFG: "];
"1000192" -> "1000190"  [label="DDG: dlbufsize"];
"1000192" -> "1000190"  [label="DDG: 4"];
"1000141" -> "1000192"  [label="DDG: dlbufsize"];
"1000192" -> "1000363"  [label="DDG: dlbufsize"];
"1000192" -> "1000367"  [label="DDG: dlbufsize"];
"1000192" -> "1000365"  [label="DDG: dlbufsize"];
"1000192" -> "1000461"  [label="DDG: dlbufsize"];
"1000141" -> "1000139"  [label="AST: "];
"1000141" -> "1000142"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000139" -> "1000141"  [label="CFG: "];
"1000141" -> "1000139"  [label="DDG: dlbufsize"];
"1000131" -> "1000141"  [label="DDG: dlbufsize"];
"1000131" -> "1000125"  [label="AST: "];
"1000131" -> "1000133"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="AST: "];
"1000140" -> "1000131"  [label="CFG: "];
"1000131" -> "1000783"  [label="DDG: max (BUFSIZ, 8 * 1024)"];
"1000133" -> "1000131"  [label="DDG: BUFSIZ"];
"1000133" -> "1000131"  [label="DDG: 8 * 1024"];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000133" -> "1000783"  [label="DDG: BUFSIZ"];
"1000133" -> "1000783"  [label="DDG: 8 * 1024"];
"1000135" -> "1000133"  [label="DDG: 8"];
"1000135" -> "1000133"  [label="DDG: 1024"];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000539" -> "1000538"  [label="AST: "];
"1000539" -> "1000540"  [label="CFG: "];
"1000540" -> "1000539"  [label="AST: "];
"1000548" -> "1000539"  [label="CFG: "];
"1000559" -> "1000539"  [label="CFG: "];
"1000539" -> "1000783"  [label="DDG: progress"];
"1000539" -> "1000783"  [label="DDG: progress || opt.limit_rate || elapsed"];
"1000539" -> "1000783"  [label="DDG: opt.limit_rate || elapsed"];
"1000333" -> "1000539"  [label="DDG: progress"];
"1000333" -> "1000539"  [label="DDG: opt.limit_rate || elapsed"];
"1000539" -> "1000760"  [label="DDG: progress"];
"1000760" -> "1000758"  [label="AST: "];
"1000760" -> "1000763"  [label="CFG: "];
"1000761" -> "1000760"  [label="AST: "];
"1000762" -> "1000760"  [label="AST: "];
"1000763" -> "1000760"  [label="AST: "];
"1000768" -> "1000760"  [label="CFG: "];
"1000760" -> "1000783"  [label="DDG: ret"];
"1000760" -> "1000783"  [label="DDG: progress_update (progress, ret, ptimer_read (timer))"];
"1000760" -> "1000783"  [label="DDG: ptimer_read (timer)"];
"1000760" -> "1000783"  [label="DDG: progress"];
"1000685" -> "1000760"  [label="DDG: ret"];
"1000558" -> "1000760"  [label="DDG: ret"];
"1000755" -> "1000760"  [label="DDG: ret"];
"1000763" -> "1000760"  [label="DDG: timer"];
}
