digraph "0_linux_9e2dcf72023d1447f09c47d77c99b0c49659e5ce@pointer" {
"1000219" [label="(Call,fq_find(fhdr->identification, user, &hdr->saddr, &hdr->daddr))"];
"1000104" [label="(MethodParameterIn,u32 user)"];
"1000217" [label="(Call,fq = fq_find(fhdr->identification, user, &hdr->saddr, &hdr->daddr))"];
"1000233" [label="(Call,fq == NULL)"];
"1000249" [label="(Call,nf_ct_frag6_queue(fq, clone, fhdr, nhoff))"];
"1000248" [label="(Call,nf_ct_frag6_queue(fq, clone, fhdr, nhoff) < 0)"];
"1000265" [label="(Call,fq_put(fq))"];
"1000293" [label="(Call,nf_ct_frag6_reasm(fq, dev))"];
"1000291" [label="(Call,ret_skb = nf_ct_frag6_reasm(fq, dev))"];
"1000297" [label="(Call,ret_skb == NULL)"];
"1000311" [label="(Return,return ret_skb;)"];
"1000309" [label="(Call,fq_put(fq))"];
"1000314" [label="(Call,kfree_skb(clone))"];
"1000292" [label="(Identifier,ret_skb)"];
"1000188" [label="(Call,fhdr = (struct frag_hdr *)skb_transport_header(clone))"];
"1000250" [label="(Identifier,fq)"];
"1000224" [label="(Call,&hdr->saddr)"];
"1000220" [label="(Call,fhdr->identification)"];
"1000247" [label="(ControlStructure,if (nf_ct_frag6_queue(fq, clone, fhdr, nhoff) < 0))"];
"1000315" [label="(Identifier,clone)"];
"1000267" [label="(ControlStructure,goto ret_orig;)"];
"1000311" [label="(Return,return ret_skb;)"];
"1000314" [label="(Call,kfree_skb(clone))"];
"1000232" [label="(ControlStructure,if (fq == NULL))"];
"1000273" [label="(Identifier,fq)"];
"1000294" [label="(Identifier,fq)"];
"1000297" [label="(Call,ret_skb == NULL)"];
"1000223" [label="(Identifier,user)"];
"1000252" [label="(Identifier,fhdr)"];
"1000291" [label="(Call,ret_skb = nf_ct_frag6_reasm(fq, dev))"];
"1000249" [label="(Call,nf_ct_frag6_queue(fq, clone, fhdr, nhoff))"];
"1000301" [label="(Literal,\"Can't reassemble fragmented packets\n\")"];
"1000104" [label="(MethodParameterIn,u32 user)"];
"1000248" [label="(Call,nf_ct_frag6_queue(fq, clone, fhdr, nhoff) < 0)"];
"1000295" [label="(Identifier,dev)"];
"1000251" [label="(Identifier,clone)"];
"1000120" [label="(Call,*ret_skb = NULL)"];
"1000219" [label="(Call,fq_find(fhdr->identification, user, &hdr->saddr, &hdr->daddr))"];
"1000290" [label="(Block,)"];
"1000309" [label="(Call,fq_put(fq))"];
"1000108" [label="(Call,*dev = skb->dev)"];
"1000298" [label="(Identifier,ret_skb)"];
"1000312" [label="(Identifier,ret_skb)"];
"1000299" [label="(Identifier,NULL)"];
"1000217" [label="(Call,fq = fq_find(fhdr->identification, user, &hdr->saddr, &hdr->daddr))"];
"1000266" [label="(Identifier,fq)"];
"1000265" [label="(Call,fq_put(fq))"];
"1000293" [label="(Call,nf_ct_frag6_reasm(fq, dev))"];
"1000255" [label="(Block,)"];
"1000235" [label="(Identifier,NULL)"];
"1000228" [label="(Call,&hdr->daddr)"];
"1000233" [label="(Call,fq == NULL)"];
"1000244" [label="(Identifier,fq)"];
"1000253" [label="(Identifier,nhoff)"];
"1000238" [label="(Literal,\"Can't find and can't create new queue\n\")"];
"1000154" [label="(Call,clone == NULL)"];
"1000306" [label="(Identifier,fq)"];
"1000192" [label="(Call,skb_transport_header(clone))"];
"1000170" [label="(Call,pskb_may_pull(clone, fhoff + sizeof(*fhdr)))"];
"1000260" [label="(Identifier,fq)"];
"1000218" [label="(Identifier,fq)"];
"1000234" [label="(Identifier,fq)"];
"1000105" [label="(Block,)"];
"1000317" [label="(Identifier,skb)"];
"1000310" [label="(Identifier,fq)"];
"1000318" [label="(MethodReturn,struct sk_buff *)"];
"1000296" [label="(ControlStructure,if (ret_skb == NULL))"];
"1000254" [label="(Literal,0)"];
"1000219" -> "1000217"  [label="AST: "];
"1000219" -> "1000228"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000223" -> "1000219"  [label="AST: "];
"1000224" -> "1000219"  [label="AST: "];
"1000228" -> "1000219"  [label="AST: "];
"1000217" -> "1000219"  [label="CFG: "];
"1000219" -> "1000318"  [label="DDG: user"];
"1000219" -> "1000318"  [label="DDG: &hdr->daddr"];
"1000219" -> "1000318"  [label="DDG: fhdr->identification"];
"1000219" -> "1000318"  [label="DDG: &hdr->saddr"];
"1000219" -> "1000217"  [label="DDG: fhdr->identification"];
"1000219" -> "1000217"  [label="DDG: user"];
"1000219" -> "1000217"  [label="DDG: &hdr->saddr"];
"1000219" -> "1000217"  [label="DDG: &hdr->daddr"];
"1000104" -> "1000219"  [label="DDG: user"];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1000318"  [label="DDG: user"];
"1000217" -> "1000105"  [label="AST: "];
"1000218" -> "1000217"  [label="AST: "];
"1000234" -> "1000217"  [label="CFG: "];
"1000217" -> "1000318"  [label="DDG: fq_find(fhdr->identification, user, &hdr->saddr, &hdr->daddr)"];
"1000217" -> "1000233"  [label="DDG: fq"];
"1000233" -> "1000232"  [label="AST: "];
"1000233" -> "1000235"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000235" -> "1000233"  [label="AST: "];
"1000238" -> "1000233"  [label="CFG: "];
"1000244" -> "1000233"  [label="CFG: "];
"1000233" -> "1000318"  [label="DDG: fq == NULL"];
"1000233" -> "1000318"  [label="DDG: NULL"];
"1000233" -> "1000318"  [label="DDG: fq"];
"1000154" -> "1000233"  [label="DDG: NULL"];
"1000233" -> "1000249"  [label="DDG: fq"];
"1000233" -> "1000297"  [label="DDG: NULL"];
"1000249" -> "1000248"  [label="AST: "];
"1000249" -> "1000253"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000251" -> "1000249"  [label="AST: "];
"1000252" -> "1000249"  [label="AST: "];
"1000253" -> "1000249"  [label="AST: "];
"1000254" -> "1000249"  [label="CFG: "];
"1000249" -> "1000318"  [label="DDG: clone"];
"1000249" -> "1000318"  [label="DDG: nhoff"];
"1000249" -> "1000318"  [label="DDG: fhdr"];
"1000249" -> "1000248"  [label="DDG: fq"];
"1000249" -> "1000248"  [label="DDG: clone"];
"1000249" -> "1000248"  [label="DDG: fhdr"];
"1000249" -> "1000248"  [label="DDG: nhoff"];
"1000192" -> "1000249"  [label="DDG: clone"];
"1000188" -> "1000249"  [label="DDG: fhdr"];
"1000249" -> "1000265"  [label="DDG: fq"];
"1000249" -> "1000293"  [label="DDG: fq"];
"1000249" -> "1000309"  [label="DDG: fq"];
"1000249" -> "1000314"  [label="DDG: clone"];
"1000248" -> "1000247"  [label="AST: "];
"1000248" -> "1000254"  [label="CFG: "];
"1000254" -> "1000248"  [label="AST: "];
"1000260" -> "1000248"  [label="CFG: "];
"1000273" -> "1000248"  [label="CFG: "];
"1000248" -> "1000318"  [label="DDG: nf_ct_frag6_queue(fq, clone, fhdr, nhoff) < 0"];
"1000248" -> "1000318"  [label="DDG: nf_ct_frag6_queue(fq, clone, fhdr, nhoff)"];
"1000265" -> "1000255"  [label="AST: "];
"1000265" -> "1000266"  [label="CFG: "];
"1000266" -> "1000265"  [label="AST: "];
"1000267" -> "1000265"  [label="CFG: "];
"1000265" -> "1000318"  [label="DDG: fq_put(fq)"];
"1000265" -> "1000318"  [label="DDG: fq"];
"1000293" -> "1000291"  [label="AST: "];
"1000293" -> "1000295"  [label="CFG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000295" -> "1000293"  [label="AST: "];
"1000291" -> "1000293"  [label="CFG: "];
"1000293" -> "1000318"  [label="DDG: dev"];
"1000293" -> "1000291"  [label="DDG: fq"];
"1000293" -> "1000291"  [label="DDG: dev"];
"1000108" -> "1000293"  [label="DDG: dev"];
"1000293" -> "1000309"  [label="DDG: fq"];
"1000291" -> "1000290"  [label="AST: "];
"1000292" -> "1000291"  [label="AST: "];
"1000298" -> "1000291"  [label="CFG: "];
"1000291" -> "1000318"  [label="DDG: nf_ct_frag6_reasm(fq, dev)"];
"1000291" -> "1000297"  [label="DDG: ret_skb"];
"1000297" -> "1000296"  [label="AST: "];
"1000297" -> "1000299"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000299" -> "1000297"  [label="AST: "];
"1000301" -> "1000297"  [label="CFG: "];
"1000306" -> "1000297"  [label="CFG: "];
"1000297" -> "1000318"  [label="DDG: ret_skb"];
"1000297" -> "1000318"  [label="DDG: NULL"];
"1000297" -> "1000318"  [label="DDG: ret_skb == NULL"];
"1000297" -> "1000311"  [label="DDG: ret_skb"];
"1000311" -> "1000105"  [label="AST: "];
"1000311" -> "1000312"  [label="CFG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000318" -> "1000311"  [label="CFG: "];
"1000311" -> "1000318"  [label="DDG: <RET>"];
"1000312" -> "1000311"  [label="DDG: ret_skb"];
"1000120" -> "1000311"  [label="DDG: ret_skb"];
"1000309" -> "1000105"  [label="AST: "];
"1000309" -> "1000310"  [label="CFG: "];
"1000310" -> "1000309"  [label="AST: "];
"1000312" -> "1000309"  [label="CFG: "];
"1000309" -> "1000318"  [label="DDG: fq"];
"1000309" -> "1000318"  [label="DDG: fq_put(fq)"];
"1000314" -> "1000105"  [label="AST: "];
"1000314" -> "1000315"  [label="CFG: "];
"1000315" -> "1000314"  [label="AST: "];
"1000317" -> "1000314"  [label="CFG: "];
"1000314" -> "1000318"  [label="DDG: clone"];
"1000314" -> "1000318"  [label="DDG: kfree_skb(clone)"];
"1000192" -> "1000314"  [label="DDG: clone"];
"1000170" -> "1000314"  [label="DDG: clone"];
}
