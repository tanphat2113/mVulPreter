digraph "1_Chrome_3aad1a37affb1ab70d1897f2b03eb8c077264984_2@API" {
"1000217" [label="(Call,kSizeOfFloat = sizeof(float))"];
"1000228" [label="(Call,SafeMultiply(elements_needed, kSizeOfFloat, &size_needed))"];
"1000227" [label="(Call,!SafeMultiply(elements_needed, kSizeOfFloat, &size_needed))"];
"1000226" [label="(Call,!SafeMultiply(elements_needed, kSizeOfFloat, &size_needed) ||\n       size_needed > 0x7FFFFFFFU)"];
"1000335" [label="(Call,info->size() * kSizeOfFloat)"];
"1000333" [label="(Call,num_elements = info->size() * kSizeOfFloat)"];
"1000341" [label="(Call,num_elements * num_vertices)"];
"1000339" [label="(Call,size = num_elements * num_vertices)"];
"1000350" [label="(Call,info->buffer()->GetRange(info->offset(), size))"];
"1000348" [label="(Call,reinterpret_cast<const int32 *>(\n          info->buffer()->GetRange(info->offset(), size)))"];
"1000346" [label="(Call,* src = reinterpret_cast<const int32 *>(\n          info->buffer()->GetRange(info->offset(), size)))"];
"1000354" [label="(Call,* end = src + num_elements)"];
"1000364" [label="(Call,src != end)"];
"1000376" [label="(Call,src++)"];
"1000356" [label="(Call,src + num_elements)"];
"1000379" [label="(Call,glBufferSubData(GL_ARRAY_BUFFER, offset, size, data.get()))"];
"1000390" [label="(Call,reinterpret_cast<GLvoid*>(offset))"];
"1000384" [label="(Call,glVertexAttribPointer(\n          info->index(), info->size(), GL_FLOAT, false, 0,\n          reinterpret_cast<GLvoid*>(offset)))"];
"1000320" [label="(Return,return false;)"];
"1000393" [label="(Call,offset += size)"];
"1000380" [label="(Identifier,GL_ARRAY_BUFFER)"];
"1000337" [label="(Identifier,kSizeOfFloat)"];
"1000231" [label="(Call,&size_needed)"];
"1000315" [label="(Block,)"];
"1000312" [label="(Call,num_vertices == 0)"];
"1000386" [label="(Call,info->size())"];
"1000226" [label="(Call,!SafeMultiply(elements_needed, kSizeOfFloat, &size_needed) ||\n       size_needed > 0x7FFFFFFFU)"];
"1000227" [label="(Call,!SafeMultiply(elements_needed, kSizeOfFloat, &size_needed))"];
"1000377" [label="(Identifier,src)"];
"1000339" [label="(Call,size = num_elements * num_vertices)"];
"1000342" [label="(Identifier,num_elements)"];
"1000340" [label="(Identifier,size)"];
"1000229" [label="(Identifier,elements_needed)"];
"1000354" [label="(Call,* end = src + num_elements)"];
"1000383" [label="(Call,data.get())"];
"1000331" [label="(Block,)"];
"1000402" [label="(MethodReturn,bool)"];
"1000243" [label="(Call,CopyRealGLErrorsToWrapper())"];
"1000392" [label="(Identifier,offset)"];
"1000387" [label="(Identifier,GL_FLOAT)"];
"1000254" [label="(Call,glBufferData(GL_ARRAY_BUFFER, size_needed, NULL, GL_DYNAMIC_DRAW))"];
"1000389" [label="(Literal,0)"];
"1000375" [label="(Call,*src++)"];
"1000233" [label="(Call,size_needed > 0x7FFFFFFFU)"];
"1000350" [label="(Call,info->buffer()->GetRange(info->offset(), size))"];
"1000244" [label="(Call,glBindBuffer(GL_ARRAY_BUFFER, fixed_attrib_buffer_id_))"];
"1000341" [label="(Call,num_elements * num_vertices)"];
"1000287" [label="(Identifier,it)"];
"1000219" [label="(Call,sizeof(float))"];
"1000336" [label="(Call,info->size())"];
"1000356" [label="(Call,src + num_elements)"];
"1000106" [label="(Block,)"];
"1000128" [label="(Call,elements_needed = 0)"];
"1000346" [label="(Call,* src = reinterpret_cast<const int32 *>(\n          info->buffer()->GetRange(info->offset(), size)))"];
"1000217" [label="(Call,kSizeOfFloat = sizeof(float))"];
"1000355" [label="(Identifier,end)"];
"1000361" [label="(Identifier,dst)"];
"1000365" [label="(Identifier,src)"];
"1000358" [label="(Identifier,num_elements)"];
"1000381" [label="(Identifier,offset)"];
"1000333" [label="(Call,num_elements = info->size() * kSizeOfFloat)"];
"1000238" [label="(Identifier,GL_OUT_OF_MEMORY)"];
"1000379" [label="(Call,glBufferSubData(GL_ARRAY_BUFFER, offset, size, data.get()))"];
"1000218" [label="(Identifier,kSizeOfFloat)"];
"1000390" [label="(Call,reinterpret_cast<GLvoid*>(offset))"];
"1000388" [label="(Identifier,false)"];
"1000320" [label="(Return,return false;)"];
"1000376" [label="(Call,src++)"];
"1000395" [label="(Identifier,size)"];
"1000343" [label="(Identifier,num_vertices)"];
"1000348" [label="(Call,reinterpret_cast<const int32 *>(\n          info->buffer()->GetRange(info->offset(), size)))"];
"1000352" [label="(Identifier,size)"];
"1000364" [label="(Call,src != end)"];
"1000363" [label="(ControlStructure,while (src != end))"];
"1000351" [label="(Call,info->offset())"];
"1000334" [label="(Identifier,num_elements)"];
"1000275" [label="(Call,offset = 0)"];
"1000357" [label="(Identifier,src)"];
"1000393" [label="(Call,offset += size)"];
"1000384" [label="(Call,glVertexAttribPointer(\n          info->index(), info->size(), GL_FLOAT, false, 0,\n          reinterpret_cast<GLvoid*>(offset)))"];
"1000335" [label="(Call,info->size() * kSizeOfFloat)"];
"1000382" [label="(Identifier,size)"];
"1000385" [label="(Call,info->index())"];
"1000225" [label="(ControlStructure,if (!SafeMultiply(elements_needed, kSizeOfFloat, &size_needed) ||\n       size_needed > 0x7FFFFFFFU))"];
"1000347" [label="(Identifier,src)"];
"1000366" [label="(Identifier,end)"];
"1000321" [label="(Identifier,false)"];
"1000394" [label="(Identifier,offset)"];
"1000230" [label="(Identifier,kSizeOfFloat)"];
"1000204" [label="(Call,SafeAdd(elements_needed, elements_used, &elements_needed))"];
"1000371" [label="(Identifier,dst)"];
"1000223" [label="(Identifier,size_needed)"];
"1000234" [label="(Identifier,size_needed)"];
"1000228" [label="(Call,SafeMultiply(elements_needed, kSizeOfFloat, &size_needed))"];
"1000217" -> "1000106"  [label="AST: "];
"1000217" -> "1000219"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000219" -> "1000217"  [label="AST: "];
"1000223" -> "1000217"  [label="CFG: "];
"1000217" -> "1000228"  [label="DDG: kSizeOfFloat"];
"1000228" -> "1000227"  [label="AST: "];
"1000228" -> "1000231"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000230" -> "1000228"  [label="AST: "];
"1000231" -> "1000228"  [label="AST: "];
"1000227" -> "1000228"  [label="CFG: "];
"1000228" -> "1000402"  [label="DDG: elements_needed"];
"1000228" -> "1000402"  [label="DDG: &size_needed"];
"1000228" -> "1000402"  [label="DDG: kSizeOfFloat"];
"1000228" -> "1000227"  [label="DDG: elements_needed"];
"1000228" -> "1000227"  [label="DDG: kSizeOfFloat"];
"1000228" -> "1000227"  [label="DDG: &size_needed"];
"1000128" -> "1000228"  [label="DDG: elements_needed"];
"1000204" -> "1000228"  [label="DDG: elements_needed"];
"1000228" -> "1000335"  [label="DDG: kSizeOfFloat"];
"1000227" -> "1000226"  [label="AST: "];
"1000234" -> "1000227"  [label="CFG: "];
"1000226" -> "1000227"  [label="CFG: "];
"1000227" -> "1000402"  [label="DDG: SafeMultiply(elements_needed, kSizeOfFloat, &size_needed)"];
"1000227" -> "1000226"  [label="DDG: SafeMultiply(elements_needed, kSizeOfFloat, &size_needed)"];
"1000226" -> "1000225"  [label="AST: "];
"1000226" -> "1000233"  [label="CFG: "];
"1000233" -> "1000226"  [label="AST: "];
"1000238" -> "1000226"  [label="CFG: "];
"1000243" -> "1000226"  [label="CFG: "];
"1000226" -> "1000402"  [label="DDG: !SafeMultiply(elements_needed, kSizeOfFloat, &size_needed)"];
"1000226" -> "1000402"  [label="DDG: size_needed > 0x7FFFFFFFU"];
"1000226" -> "1000402"  [label="DDG: !SafeMultiply(elements_needed, kSizeOfFloat, &size_needed) ||\n       size_needed > 0x7FFFFFFFU"];
"1000233" -> "1000226"  [label="DDG: size_needed"];
"1000233" -> "1000226"  [label="DDG: 0x7FFFFFFFU"];
"1000335" -> "1000333"  [label="AST: "];
"1000335" -> "1000337"  [label="CFG: "];
"1000336" -> "1000335"  [label="AST: "];
"1000337" -> "1000335"  [label="AST: "];
"1000333" -> "1000335"  [label="CFG: "];
"1000335" -> "1000402"  [label="DDG: kSizeOfFloat"];
"1000335" -> "1000333"  [label="DDG: info->size()"];
"1000335" -> "1000333"  [label="DDG: kSizeOfFloat"];
"1000333" -> "1000331"  [label="AST: "];
"1000334" -> "1000333"  [label="AST: "];
"1000340" -> "1000333"  [label="CFG: "];
"1000333" -> "1000402"  [label="DDG: info->size() * kSizeOfFloat"];
"1000333" -> "1000341"  [label="DDG: num_elements"];
"1000341" -> "1000339"  [label="AST: "];
"1000341" -> "1000343"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="AST: "];
"1000339" -> "1000341"  [label="CFG: "];
"1000341" -> "1000402"  [label="DDG: num_vertices"];
"1000341" -> "1000339"  [label="DDG: num_elements"];
"1000341" -> "1000339"  [label="DDG: num_vertices"];
"1000312" -> "1000341"  [label="DDG: num_vertices"];
"1000341" -> "1000354"  [label="DDG: num_elements"];
"1000341" -> "1000356"  [label="DDG: num_elements"];
"1000339" -> "1000331"  [label="AST: "];
"1000340" -> "1000339"  [label="AST: "];
"1000347" -> "1000339"  [label="CFG: "];
"1000339" -> "1000402"  [label="DDG: num_elements * num_vertices"];
"1000339" -> "1000350"  [label="DDG: size"];
"1000350" -> "1000348"  [label="AST: "];
"1000350" -> "1000352"  [label="CFG: "];
"1000351" -> "1000350"  [label="AST: "];
"1000352" -> "1000350"  [label="AST: "];
"1000348" -> "1000350"  [label="CFG: "];
"1000350" -> "1000402"  [label="DDG: info->offset()"];
"1000350" -> "1000348"  [label="DDG: info->offset()"];
"1000350" -> "1000348"  [label="DDG: size"];
"1000350" -> "1000379"  [label="DDG: size"];
"1000348" -> "1000346"  [label="AST: "];
"1000349" -> "1000348"  [label="AST: "];
"1000346" -> "1000348"  [label="CFG: "];
"1000348" -> "1000402"  [label="DDG: info->buffer()->GetRange(info->offset(), size)"];
"1000348" -> "1000346"  [label="DDG: info->buffer()->GetRange(info->offset(), size)"];
"1000346" -> "1000331"  [label="AST: "];
"1000347" -> "1000346"  [label="AST: "];
"1000355" -> "1000346"  [label="CFG: "];
"1000346" -> "1000402"  [label="DDG: reinterpret_cast<const int32 *>(\n          info->buffer()->GetRange(info->offset(), size))"];
"1000346" -> "1000354"  [label="DDG: src"];
"1000346" -> "1000356"  [label="DDG: src"];
"1000346" -> "1000364"  [label="DDG: src"];
"1000354" -> "1000331"  [label="AST: "];
"1000354" -> "1000356"  [label="CFG: "];
"1000355" -> "1000354"  [label="AST: "];
"1000356" -> "1000354"  [label="AST: "];
"1000361" -> "1000354"  [label="CFG: "];
"1000354" -> "1000402"  [label="DDG: src + num_elements"];
"1000354" -> "1000364"  [label="DDG: end"];
"1000364" -> "1000363"  [label="AST: "];
"1000364" -> "1000366"  [label="CFG: "];
"1000365" -> "1000364"  [label="AST: "];
"1000366" -> "1000364"  [label="AST: "];
"1000371" -> "1000364"  [label="CFG: "];
"1000380" -> "1000364"  [label="CFG: "];
"1000364" -> "1000402"  [label="DDG: src"];
"1000364" -> "1000402"  [label="DDG: src != end"];
"1000364" -> "1000402"  [label="DDG: end"];
"1000376" -> "1000364"  [label="DDG: src"];
"1000364" -> "1000376"  [label="DDG: src"];
"1000376" -> "1000375"  [label="AST: "];
"1000376" -> "1000377"  [label="CFG: "];
"1000377" -> "1000376"  [label="AST: "];
"1000375" -> "1000376"  [label="CFG: "];
"1000356" -> "1000358"  [label="CFG: "];
"1000357" -> "1000356"  [label="AST: "];
"1000358" -> "1000356"  [label="AST: "];
"1000356" -> "1000402"  [label="DDG: num_elements"];
"1000379" -> "1000331"  [label="AST: "];
"1000379" -> "1000383"  [label="CFG: "];
"1000380" -> "1000379"  [label="AST: "];
"1000381" -> "1000379"  [label="AST: "];
"1000382" -> "1000379"  [label="AST: "];
"1000383" -> "1000379"  [label="AST: "];
"1000385" -> "1000379"  [label="CFG: "];
"1000379" -> "1000402"  [label="DDG: data.get()"];
"1000379" -> "1000402"  [label="DDG: GL_ARRAY_BUFFER"];
"1000379" -> "1000402"  [label="DDG: glBufferSubData(GL_ARRAY_BUFFER, offset, size, data.get())"];
"1000254" -> "1000379"  [label="DDG: GL_ARRAY_BUFFER"];
"1000244" -> "1000379"  [label="DDG: GL_ARRAY_BUFFER"];
"1000393" -> "1000379"  [label="DDG: offset"];
"1000275" -> "1000379"  [label="DDG: offset"];
"1000379" -> "1000390"  [label="DDG: offset"];
"1000379" -> "1000393"  [label="DDG: size"];
"1000390" -> "1000384"  [label="AST: "];
"1000390" -> "1000392"  [label="CFG: "];
"1000391" -> "1000390"  [label="AST: "];
"1000392" -> "1000390"  [label="AST: "];
"1000384" -> "1000390"  [label="CFG: "];
"1000390" -> "1000384"  [label="DDG: offset"];
"1000390" -> "1000393"  [label="DDG: offset"];
"1000384" -> "1000331"  [label="AST: "];
"1000385" -> "1000384"  [label="AST: "];
"1000386" -> "1000384"  [label="AST: "];
"1000387" -> "1000384"  [label="AST: "];
"1000388" -> "1000384"  [label="AST: "];
"1000389" -> "1000384"  [label="AST: "];
"1000394" -> "1000384"  [label="CFG: "];
"1000384" -> "1000402"  [label="DDG: glVertexAttribPointer(\n          info->index(), info->size(), GL_FLOAT, false, 0,\n          reinterpret_cast<GLvoid*>(offset))"];
"1000384" -> "1000402"  [label="DDG: false"];
"1000384" -> "1000402"  [label="DDG: GL_FLOAT"];
"1000384" -> "1000402"  [label="DDG: reinterpret_cast<GLvoid*>(offset)"];
"1000384" -> "1000402"  [label="DDG: info->size()"];
"1000384" -> "1000402"  [label="DDG: info->index()"];
"1000384" -> "1000320"  [label="DDG: false"];
"1000320" -> "1000315"  [label="AST: "];
"1000320" -> "1000321"  [label="CFG: "];
"1000321" -> "1000320"  [label="AST: "];
"1000402" -> "1000320"  [label="CFG: "];
"1000320" -> "1000402"  [label="DDG: <RET>"];
"1000321" -> "1000320"  [label="DDG: false"];
"1000393" -> "1000331"  [label="AST: "];
"1000393" -> "1000395"  [label="CFG: "];
"1000394" -> "1000393"  [label="AST: "];
"1000395" -> "1000393"  [label="AST: "];
"1000287" -> "1000393"  [label="CFG: "];
"1000393" -> "1000402"  [label="DDG: offset"];
"1000393" -> "1000402"  [label="DDG: size"];
}
