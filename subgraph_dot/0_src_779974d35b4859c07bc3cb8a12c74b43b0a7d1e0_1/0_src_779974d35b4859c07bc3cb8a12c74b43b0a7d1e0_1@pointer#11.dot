digraph "0_src_779974d35b4859c07bc3cb8a12c74b43b0a7d1e0_1@pointer" {
"1000259" [label="(Call,sshkey_type_plain(key->type))"];
"1000242" [label="(Call,key->type != pktype)"];
"1000205" [label="(Call,pktype == KEY_UNSPEC)"];
"1000200" [label="(Call,pktype = sshkey_type_from_name(pkalg))"];
"1000202" [label="(Call,sshkey_type_from_name(pkalg))"];
"1000129" [label="(Call,*pkalg = NULL)"];
"1000258" [label="(Call,sshkey_type_plain(key->type) == KEY_RSA)"];
"1000257" [label="(Call,sshkey_type_plain(key->type) == KEY_RSA &&\n\t    (ssh->compat & SSH_BUG_RSASIGMD5) != 0)"];
"1000241" [label="(ControlStructure,if (key->type != pktype))"];
"1000206" [label="(Identifier,pktype)"];
"1000204" [label="(ControlStructure,if (pktype == KEY_UNSPEC))"];
"1000236" [label="(Call,error(\"%s: cannot decode key: %s\", __func__, pkalg))"];
"1000277" [label="(Identifier,authctxt)"];
"1000107" [label="(Block,)"];
"1000201" [label="(Identifier,pktype)"];
"1000130" [label="(Identifier,pkalg)"];
"1000248" [label="(Call,error(\"%s: type mismatch for decoded key \"\n\t\t    \"(received %d, expected %d)\", __func__, key->type, pktype))"];
"1000202" [label="(Call,sshkey_type_from_name(pkalg))"];
"1000702" [label="(MethodReturn,RET)"];
"1000242" [label="(Call,key->type != pktype)"];
"1000129" [label="(Call,*pkalg = NULL)"];
"1000259" [label="(Call,sshkey_type_plain(key->type))"];
"1000131" [label="(Identifier,NULL)"];
"1000263" [label="(Identifier,KEY_RSA)"];
"1000260" [label="(Call,key->type)"];
"1000205" [label="(Call,pktype == KEY_UNSPEC)"];
"1000200" [label="(Call,pktype = sshkey_type_from_name(pkalg))"];
"1000261" [label="(Identifier,key)"];
"1000209" [label="(Call,verbose(\"%s: unsupported public key algorithm: %s\",\n\t\t    __func__, pkalg))"];
"1000273" [label="(Literal,\"Refusing RSA key because client uses unsafe \"\n\t\t    \"signature scheme\")"];
"1000679" [label="(Call,debug2(\"%s: authenticated %d pkalg %s\", __func__, authenticated, pkalg))"];
"1000210" [label="(Literal,\"%s: unsupported public key algorithm: %s\")"];
"1000249" [label="(Literal,\"%s: type mismatch for decoded key \"\n\t\t    \"(received %d, expected %d)\")"];
"1000264" [label="(Call,(ssh->compat & SSH_BUG_RSASIGMD5) != 0)"];
"1000256" [label="(ControlStructure,if (sshkey_type_plain(key->type) == KEY_RSA &&\n\t    (ssh->compat & SSH_BUG_RSASIGMD5) != 0))"];
"1000267" [label="(Identifier,ssh)"];
"1000217" [label="(Identifier,r)"];
"1000203" [label="(Identifier,pkalg)"];
"1000246" [label="(Identifier,pktype)"];
"1000243" [label="(Call,key->type)"];
"1000257" [label="(Call,sshkey_type_plain(key->type) == KEY_RSA &&\n\t    (ssh->compat & SSH_BUG_RSASIGMD5) != 0)"];
"1000287" [label="(Call,match_pattern_list(pkalg, options.pubkey_key_types, 0))"];
"1000207" [label="(Identifier,KEY_UNSPEC)"];
"1000258" [label="(Call,sshkey_type_plain(key->type) == KEY_RSA)"];
"1000134" [label="(Identifier,userstyle)"];
"1000259" -> "1000258"  [label="AST: "];
"1000259" -> "1000260"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000263" -> "1000259"  [label="CFG: "];
"1000259" -> "1000702"  [label="DDG: key->type"];
"1000259" -> "1000258"  [label="DDG: key->type"];
"1000242" -> "1000259"  [label="DDG: key->type"];
"1000242" -> "1000241"  [label="AST: "];
"1000242" -> "1000246"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000246" -> "1000242"  [label="AST: "];
"1000249" -> "1000242"  [label="CFG: "];
"1000261" -> "1000242"  [label="CFG: "];
"1000242" -> "1000702"  [label="DDG: key->type != pktype"];
"1000242" -> "1000702"  [label="DDG: pktype"];
"1000205" -> "1000242"  [label="DDG: pktype"];
"1000242" -> "1000248"  [label="DDG: key->type"];
"1000242" -> "1000248"  [label="DDG: pktype"];
"1000205" -> "1000204"  [label="AST: "];
"1000205" -> "1000207"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000207" -> "1000205"  [label="AST: "];
"1000210" -> "1000205"  [label="CFG: "];
"1000217" -> "1000205"  [label="CFG: "];
"1000205" -> "1000702"  [label="DDG: pktype"];
"1000205" -> "1000702"  [label="DDG: KEY_UNSPEC"];
"1000205" -> "1000702"  [label="DDG: pktype == KEY_UNSPEC"];
"1000200" -> "1000205"  [label="DDG: pktype"];
"1000200" -> "1000107"  [label="AST: "];
"1000200" -> "1000202"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000202" -> "1000200"  [label="AST: "];
"1000206" -> "1000200"  [label="CFG: "];
"1000200" -> "1000702"  [label="DDG: sshkey_type_from_name(pkalg)"];
"1000202" -> "1000200"  [label="DDG: pkalg"];
"1000202" -> "1000203"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000129" -> "1000202"  [label="DDG: pkalg"];
"1000202" -> "1000209"  [label="DDG: pkalg"];
"1000202" -> "1000236"  [label="DDG: pkalg"];
"1000202" -> "1000287"  [label="DDG: pkalg"];
"1000202" -> "1000679"  [label="DDG: pkalg"];
"1000129" -> "1000107"  [label="AST: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000129"  [label="AST: "];
"1000134" -> "1000129"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000258" -> "1000263"  [label="CFG: "];
"1000263" -> "1000258"  [label="AST: "];
"1000267" -> "1000258"  [label="CFG: "];
"1000257" -> "1000258"  [label="CFG: "];
"1000258" -> "1000702"  [label="DDG: sshkey_type_plain(key->type)"];
"1000258" -> "1000702"  [label="DDG: KEY_RSA"];
"1000258" -> "1000257"  [label="DDG: sshkey_type_plain(key->type)"];
"1000258" -> "1000257"  [label="DDG: KEY_RSA"];
"1000257" -> "1000256"  [label="AST: "];
"1000257" -> "1000264"  [label="CFG: "];
"1000264" -> "1000257"  [label="AST: "];
"1000273" -> "1000257"  [label="CFG: "];
"1000277" -> "1000257"  [label="CFG: "];
"1000257" -> "1000702"  [label="DDG: (ssh->compat & SSH_BUG_RSASIGMD5) != 0"];
"1000257" -> "1000702"  [label="DDG: sshkey_type_plain(key->type) == KEY_RSA"];
"1000257" -> "1000702"  [label="DDG: sshkey_type_plain(key->type) == KEY_RSA &&\n\t    (ssh->compat & SSH_BUG_RSASIGMD5) != 0"];
"1000264" -> "1000257"  [label="DDG: ssh->compat & SSH_BUG_RSASIGMD5"];
"1000264" -> "1000257"  [label="DDG: 0"];
}
