digraph "0_pam-u2f_18b1914e32b74ff52000f10e97067e841e5fff62_1@pointer" {
"1000161" [label="(Call,D(debug_file, \"Cannot open file: %s (%s)\", authfile, strerror(errno)))"];
"1000108" [label="(MethodParameterIn,FILE *debug_file)"];
"1000147" [label="(Call,open(authfile, O_RDONLY | O_CLOEXEC | O_NOCTTY))"];
"1000104" [label="(MethodParameterIn,const char *authfile)"];
"1000149" [label="(Call,O_RDONLY | O_CLOEXEC | O_NOCTTY)"];
"1000151" [label="(Call,O_CLOEXEC | O_NOCTTY)"];
"1000165" [label="(Call,strerror(errno))"];
"1000150" [label="(Identifier,O_RDONLY)"];
"1000472" [label="(Call,D(debug_file, \"Found more than %d devices, ignoring the remaining ones\",\n               MAX_DEVS))"];
"1000149" [label="(Call,O_RDONLY | O_CLOEXEC | O_NOCTTY)"];
"1000151" [label="(Call,O_CLOEXEC | O_NOCTTY)"];
"1000162" [label="(Identifier,debug_file)"];
"1000147" [label="(Call,open(authfile, O_RDONLY | O_CLOEXEC | O_NOCTTY))"];
"1000167" [label="(ControlStructure,goto err;)"];
"1000504" [label="(Call,D(debug_file, \"Unable to allocate memory for keyHandle number %d\", i))"];
"1000153" [label="(Identifier,O_NOCTTY)"];
"1000268" [label="(Call,D(debug_file, \"The owner of the authentication file is neither %s nor root\",\n         username))"];
"1000732" [label="(MethodReturn,int)"];
"1000317" [label="(Call,D(debug_file, \"Unable to allocate memory\"))"];
"1000208" [label="(Call,D(debug_file, \"File %s is empty\", authfile))"];
"1000165" [label="(Call,strerror(errno))"];
"1000164" [label="(Identifier,authfile)"];
"1000567" [label="(Call,D(debug_file, \"Length of key number %d is %zu\", i + 1, devices[i].key_len))"];
"1000152" [label="(Identifier,O_CLOEXEC)"];
"1000178" [label="(Call,D(debug_file, \"Cannot stat file: %s (%s)\", authfile, strerror(errno)))"];
"1000479" [label="(Call,D(debug_file, \"KeyHandle for device number %d: %s\", i + 1, s_token))"];
"1000194" [label="(Call,D(debug_file, \"%s is not a regular file\", authfile))"];
"1000548" [label="(Call,D(debug_file, \"Length of key number %d not even\", i + 1))"];
"1000159" [label="(ControlStructure,if (verbose))"];
"1000163" [label="(Literal,\"Cannot open file: %s (%s)\")"];
"1000161" [label="(Call,D(debug_file, \"Cannot open file: %s (%s)\", authfile, strerror(errno)))"];
"1000531" [label="(Call,D(debug_file, \"publicKey for device number %d: %s\", i + 1, s_token))"];
"1000360" [label="(Call,D(debug_file, \"Authorization line: %s\", buf))"];
"1000166" [label="(Identifier,errno)"];
"1000104" [label="(MethodParameterIn,const char *authfile)"];
"1000658" [label="(Call,D(debug_file, \"Found %d device(s) for user %s\", *n_devs, username))"];
"1000522" [label="(Call,D(debug_file, \"Unable to retrieve publicKey number %d\", i + 1))"];
"1000639" [label="(Call,D(debug_file, \"Invalid hex number in key\"))"];
"1000148" [label="(Identifier,authfile)"];
"1000145" [label="(Call,fd = open(authfile, O_RDONLY | O_CLOEXEC | O_NOCTTY))"];
"1000108" [label="(MethodParameterIn,FILE *debug_file)"];
"1000382" [label="(Call,D(debug_file, \"Matched user: %s\", s_user))"];
"1000603" [label="(Call,D(debug_file, \"Unable to allocate memory for publicKey number %d\", i))"];
"1000235" [label="(Call,D(debug_file, \"Unable to retrieve credentials for uid %u, (%s)\", st.st_uid,\n       strerror(errno)))"];
"1000290" [label="(Call,D(debug_file, \"fdopen: %s\", strerror(errno)))"];
"1000274" [label="(Call,D(debug_file, \"The owner of the authentication file is not root\"))"];
"1000161" -> "1000159"  [label="AST: "];
"1000161" -> "1000165"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000164" -> "1000161"  [label="AST: "];
"1000165" -> "1000161"  [label="AST: "];
"1000167" -> "1000161"  [label="CFG: "];
"1000161" -> "1000732"  [label="DDG: "];
"1000161" -> "1000732"  [label="DDG: "];
"1000161" -> "1000732"  [label="DDG: "];
"1000161" -> "1000732"  [label="DDG: "];
"1000108" -> "1000161"  [label="DDG: "];
"1000147" -> "1000161"  [label="DDG: "];
"1000104" -> "1000161"  [label="DDG: "];
"1000165" -> "1000161"  [label="DDG: "];
"1000108" -> "1000103"  [label="AST: "];
"1000108" -> "1000732"  [label="DDG: "];
"1000108" -> "1000178"  [label="DDG: "];
"1000108" -> "1000194"  [label="DDG: "];
"1000108" -> "1000208"  [label="DDG: "];
"1000108" -> "1000235"  [label="DDG: "];
"1000108" -> "1000268"  [label="DDG: "];
"1000108" -> "1000274"  [label="DDG: "];
"1000108" -> "1000290"  [label="DDG: "];
"1000108" -> "1000317"  [label="DDG: "];
"1000108" -> "1000360"  [label="DDG: "];
"1000108" -> "1000382"  [label="DDG: "];
"1000108" -> "1000472"  [label="DDG: "];
"1000108" -> "1000479"  [label="DDG: "];
"1000108" -> "1000504"  [label="DDG: "];
"1000108" -> "1000522"  [label="DDG: "];
"1000108" -> "1000531"  [label="DDG: "];
"1000108" -> "1000548"  [label="DDG: "];
"1000108" -> "1000567"  [label="DDG: "];
"1000108" -> "1000603"  [label="DDG: "];
"1000108" -> "1000639"  [label="DDG: "];
"1000108" -> "1000658"  [label="DDG: "];
"1000147" -> "1000145"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000147" -> "1000732"  [label="DDG: "];
"1000147" -> "1000732"  [label="DDG: "];
"1000147" -> "1000145"  [label="DDG: "];
"1000147" -> "1000145"  [label="DDG: "];
"1000104" -> "1000147"  [label="DDG: "];
"1000149" -> "1000147"  [label="DDG: "];
"1000149" -> "1000147"  [label="DDG: "];
"1000147" -> "1000178"  [label="DDG: "];
"1000147" -> "1000194"  [label="DDG: "];
"1000147" -> "1000208"  [label="DDG: "];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000732"  [label="DDG: "];
"1000104" -> "1000178"  [label="DDG: "];
"1000104" -> "1000194"  [label="DDG: "];
"1000104" -> "1000208"  [label="DDG: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000149" -> "1000732"  [label="DDG: "];
"1000149" -> "1000732"  [label="DDG: "];
"1000151" -> "1000149"  [label="DDG: "];
"1000151" -> "1000149"  [label="DDG: "];
"1000151" -> "1000153"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000153" -> "1000151"  [label="AST: "];
"1000151" -> "1000732"  [label="DDG: "];
"1000151" -> "1000732"  [label="DDG: "];
"1000165" -> "1000166"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000165" -> "1000732"  [label="DDG: "];
}
