digraph "0_sgminer_910c36089940e81fb85c65b8e63dcd2fac71470c@API" {
"1000497" [label="(Call,strlen(pool->swork.ntime) +\n\t\t\t\t strlen(pool->swork.nbit) +\n\t/* nonce */\t\t 8 +\n\t/* workpadding */\t 96)"];
"1000498" [label="(Call,strlen(pool->swork.ntime))"];
"1000315" [label="(Call,pool->swork.ntime = ntime)"];
"1000208" [label="(Call,!ntime)"];
"1000178" [label="(Call,ntime = json_array_string(val, 7))"];
"1000180" [label="(Call,json_array_string(val, 7))"];
"1000175" [label="(Call,json_array_string(val, 6))"];
"1000170" [label="(Call,json_array_string(val, 5))"];
"1000165" [label="(Call,json_array_string(val, 3))"];
"1000160" [label="(Call,json_array_string(val, 2))"];
"1000155" [label="(Call,json_array_string(val, 1))"];
"1000150" [label="(Call,json_array_string(val, 0))"];
"1000133" [label="(Call,json_array_get(val, 4))"];
"1000108" [label="(MethodParameterIn,json_t *val)"];
"1000505" [label="(Call,strlen(pool->swork.nbit))"];
"1000308" [label="(Call,pool->swork.nbit = nbit)"];
"1000206" [label="(Call,!nbit)"];
"1000173" [label="(Call,nbit = json_array_string(val, 6))"];
"1000205" [label="(Call,!nbit || !ntime)"];
"1000168" [label="(Call,bbversion = json_array_string(val, 5))"];
"1000135" [label="(Literal,4)"];
"1000148" [label="(Call,job_id = json_array_string(val, 0))"];
"1000315" [label="(Call,pool->swork.ntime = ntime)"];
"1000316" [label="(Call,pool->swork.ntime)"];
"1000309" [label="(Call,pool->swork.nbit)"];
"1000512" [label="(Literal,8)"];
"1000721" [label="(Call,applog(LOG_DEBUG, \"ntime: %s\", ntime))"];
"1000175" [label="(Call,json_array_string(val, 6))"];
"1000321" [label="(Identifier,ntime)"];
"1000208" [label="(Call,!ntime)"];
"1000499" [label="(Call,pool->swork.ntime)"];
"1000182" [label="(Literal,7)"];
"1000176" [label="(Identifier,val)"];
"1000163" [label="(Call,coinbase2 = json_array_string(val, 3))"];
"1000109" [label="(Block,)"];
"1000318" [label="(Identifier,pool)"];
"1000325" [label="(Identifier,pool)"];
"1000485" [label="(Call,pool->swork.header_len = pool->merkle_offset +\n\t/* merkle_hash */\t 32 +\n\t\t\t\t strlen(pool->swork.ntime) +\n\t\t\t\t strlen(pool->swork.nbit) +\n\t/* nonce */\t\t 8 +\n\t/* workpadding */\t 96)"];
"1000504" [label="(Call,strlen(pool->swork.nbit) +\n\t/* nonce */\t\t 8 +\n\t/* workpadding */\t 96)"];
"1000155" [label="(Call,json_array_string(val, 1))"];
"1000508" [label="(Identifier,pool)"];
"1000179" [label="(Identifier,ntime)"];
"1000506" [label="(Call,pool->swork.nbit)"];
"1000717" [label="(Call,applog(LOG_DEBUG, \"nbit: %s\", nbit))"];
"1000491" [label="(Call,pool->merkle_offset +\n\t/* merkle_hash */\t 32 +\n\t\t\t\t strlen(pool->swork.ntime) +\n\t\t\t\t strlen(pool->swork.nbit) +\n\t/* nonce */\t\t 8 +\n\t/* workpadding */\t 96)"];
"1000551" [label="(Call,snprintf(header, pool->swork.header_len,\n\t\t\"%s%s%s%s%s%s%s\",\n\t\tpool->swork.bbversion,\n\t\tpool->swork.prev_hash,\n\t\tblank_merkel,\n\t\tpool->swork.ntime,\n \t\tpool->swork.nbit,\n \t\t\"00000000\", /* nonce */\n \t\tworkpadding))"];
"1000174" [label="(Identifier,nbit)"];
"1000108" [label="(MethodParameterIn,json_t *val)"];
"1000170" [label="(Call,json_array_string(val, 5))"];
"1000171" [label="(Identifier,val)"];
"1000237" [label="(Call,free(ntime))"];
"1000166" [label="(Identifier,val)"];
"1000152" [label="(Literal,0)"];
"1000497" [label="(Call,strlen(pool->swork.ntime) +\n\t\t\t\t strlen(pool->swork.nbit) +\n\t/* nonce */\t\t 8 +\n\t/* workpadding */\t 96)"];
"1000206" [label="(Call,!nbit)"];
"1000233" [label="(Call,free(nbit))"];
"1000209" [label="(Identifier,ntime)"];
"1000162" [label="(Literal,2)"];
"1000178" [label="(Call,ntime = json_array_string(val, 7))"];
"1000180" [label="(Call,json_array_string(val, 7))"];
"1000181" [label="(Identifier,val)"];
"1000161" [label="(Identifier,val)"];
"1000308" [label="(Call,pool->swork.nbit = nbit)"];
"1000151" [label="(Identifier,val)"];
"1000186" [label="(Call,json_array_get(val, 8))"];
"1000177" [label="(Literal,6)"];
"1000131" [label="(Call,arr = json_array_get(val, 4))"];
"1000153" [label="(Call,prev_hash = json_array_string(val, 1))"];
"1000150" [label="(Call,json_array_string(val, 0))"];
"1000160" [label="(Call,json_array_string(val, 2))"];
"1000173" [label="(Call,nbit = json_array_string(val, 6))"];
"1000165" [label="(Call,json_array_string(val, 3))"];
"1000207" [label="(Identifier,nbit)"];
"1000498" [label="(Call,strlen(pool->swork.ntime))"];
"1000505" [label="(Call,strlen(pool->swork.nbit))"];
"1000156" [label="(Identifier,val)"];
"1000495" [label="(Call,32 +\n\t\t\t\t strlen(pool->swork.ntime) +\n\t\t\t\t strlen(pool->swork.nbit) +\n\t/* nonce */\t\t 8 +\n\t/* workpadding */\t 96)"];
"1000158" [label="(Call,coinbase1 = json_array_string(val, 2))"];
"1000184" [label="(Identifier,clean)"];
"1000759" [label="(MethodReturn,static bool)"];
"1000133" [label="(Call,json_array_get(val, 4))"];
"1000167" [label="(Literal,3)"];
"1000157" [label="(Literal,1)"];
"1000134" [label="(Identifier,val)"];
"1000314" [label="(Identifier,nbit)"];
"1000172" [label="(Literal,5)"];
"1000497" -> "1000495"  [label="AST: "];
"1000497" -> "1000504"  [label="CFG: "];
"1000498" -> "1000497"  [label="AST: "];
"1000504" -> "1000497"  [label="AST: "];
"1000495" -> "1000497"  [label="CFG: "];
"1000497" -> "1000759"  [label="DDG: strlen(pool->swork.ntime)"];
"1000497" -> "1000759"  [label="DDG: strlen(pool->swork.nbit) +\n\t/* nonce */\t\t 8 +\n\t/* workpadding */\t 96"];
"1000498" -> "1000497"  [label="DDG: pool->swork.ntime"];
"1000505" -> "1000497"  [label="DDG: pool->swork.nbit"];
"1000498" -> "1000499"  [label="CFG: "];
"1000499" -> "1000498"  [label="AST: "];
"1000508" -> "1000498"  [label="CFG: "];
"1000498" -> "1000485"  [label="DDG: pool->swork.ntime"];
"1000498" -> "1000491"  [label="DDG: pool->swork.ntime"];
"1000498" -> "1000495"  [label="DDG: pool->swork.ntime"];
"1000315" -> "1000498"  [label="DDG: pool->swork.ntime"];
"1000498" -> "1000551"  [label="DDG: pool->swork.ntime"];
"1000315" -> "1000109"  [label="AST: "];
"1000315" -> "1000321"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000321" -> "1000315"  [label="AST: "];
"1000325" -> "1000315"  [label="CFG: "];
"1000315" -> "1000759"  [label="DDG: ntime"];
"1000208" -> "1000315"  [label="DDG: ntime"];
"1000178" -> "1000315"  [label="DDG: ntime"];
"1000208" -> "1000205"  [label="AST: "];
"1000208" -> "1000209"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000205" -> "1000208"  [label="CFG: "];
"1000208" -> "1000759"  [label="DDG: ntime"];
"1000208" -> "1000205"  [label="DDG: ntime"];
"1000178" -> "1000208"  [label="DDG: ntime"];
"1000208" -> "1000237"  [label="DDG: ntime"];
"1000208" -> "1000721"  [label="DDG: ntime"];
"1000178" -> "1000109"  [label="AST: "];
"1000178" -> "1000180"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000180" -> "1000178"  [label="AST: "];
"1000184" -> "1000178"  [label="CFG: "];
"1000178" -> "1000759"  [label="DDG: ntime"];
"1000178" -> "1000759"  [label="DDG: json_array_string(val, 7)"];
"1000180" -> "1000178"  [label="DDG: val"];
"1000180" -> "1000178"  [label="DDG: 7"];
"1000178" -> "1000237"  [label="DDG: ntime"];
"1000178" -> "1000721"  [label="DDG: ntime"];
"1000180" -> "1000182"  [label="CFG: "];
"1000181" -> "1000180"  [label="AST: "];
"1000182" -> "1000180"  [label="AST: "];
"1000175" -> "1000180"  [label="DDG: val"];
"1000108" -> "1000180"  [label="DDG: val"];
"1000180" -> "1000186"  [label="DDG: val"];
"1000175" -> "1000173"  [label="AST: "];
"1000175" -> "1000177"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000177" -> "1000175"  [label="AST: "];
"1000173" -> "1000175"  [label="CFG: "];
"1000175" -> "1000173"  [label="DDG: val"];
"1000175" -> "1000173"  [label="DDG: 6"];
"1000170" -> "1000175"  [label="DDG: val"];
"1000108" -> "1000175"  [label="DDG: val"];
"1000170" -> "1000168"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000170" -> "1000168"  [label="DDG: val"];
"1000170" -> "1000168"  [label="DDG: 5"];
"1000165" -> "1000170"  [label="DDG: val"];
"1000108" -> "1000170"  [label="DDG: val"];
"1000165" -> "1000163"  [label="AST: "];
"1000165" -> "1000167"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000167" -> "1000165"  [label="AST: "];
"1000163" -> "1000165"  [label="CFG: "];
"1000165" -> "1000163"  [label="DDG: val"];
"1000165" -> "1000163"  [label="DDG: 3"];
"1000160" -> "1000165"  [label="DDG: val"];
"1000108" -> "1000165"  [label="DDG: val"];
"1000160" -> "1000158"  [label="AST: "];
"1000160" -> "1000162"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000162" -> "1000160"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000160" -> "1000158"  [label="DDG: val"];
"1000160" -> "1000158"  [label="DDG: 2"];
"1000155" -> "1000160"  [label="DDG: val"];
"1000108" -> "1000160"  [label="DDG: val"];
"1000155" -> "1000153"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000157" -> "1000155"  [label="AST: "];
"1000153" -> "1000155"  [label="CFG: "];
"1000155" -> "1000153"  [label="DDG: val"];
"1000155" -> "1000153"  [label="DDG: 1"];
"1000150" -> "1000155"  [label="DDG: val"];
"1000108" -> "1000155"  [label="DDG: val"];
"1000150" -> "1000148"  [label="AST: "];
"1000150" -> "1000152"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="AST: "];
"1000148" -> "1000150"  [label="CFG: "];
"1000150" -> "1000148"  [label="DDG: val"];
"1000150" -> "1000148"  [label="DDG: 0"];
"1000133" -> "1000150"  [label="DDG: val"];
"1000108" -> "1000150"  [label="DDG: val"];
"1000133" -> "1000131"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000131" -> "1000133"  [label="CFG: "];
"1000133" -> "1000759"  [label="DDG: val"];
"1000133" -> "1000131"  [label="DDG: val"];
"1000133" -> "1000131"  [label="DDG: 4"];
"1000108" -> "1000133"  [label="DDG: val"];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000759"  [label="DDG: val"];
"1000108" -> "1000186"  [label="DDG: val"];
"1000505" -> "1000504"  [label="AST: "];
"1000505" -> "1000506"  [label="CFG: "];
"1000506" -> "1000505"  [label="AST: "];
"1000512" -> "1000505"  [label="CFG: "];
"1000505" -> "1000485"  [label="DDG: pool->swork.nbit"];
"1000505" -> "1000491"  [label="DDG: pool->swork.nbit"];
"1000505" -> "1000495"  [label="DDG: pool->swork.nbit"];
"1000505" -> "1000504"  [label="DDG: pool->swork.nbit"];
"1000308" -> "1000505"  [label="DDG: pool->swork.nbit"];
"1000505" -> "1000551"  [label="DDG: pool->swork.nbit"];
"1000308" -> "1000109"  [label="AST: "];
"1000308" -> "1000314"  [label="CFG: "];
"1000309" -> "1000308"  [label="AST: "];
"1000314" -> "1000308"  [label="AST: "];
"1000318" -> "1000308"  [label="CFG: "];
"1000308" -> "1000759"  [label="DDG: nbit"];
"1000206" -> "1000308"  [label="DDG: nbit"];
"1000173" -> "1000308"  [label="DDG: nbit"];
"1000206" -> "1000205"  [label="AST: "];
"1000206" -> "1000207"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000209" -> "1000206"  [label="CFG: "];
"1000205" -> "1000206"  [label="CFG: "];
"1000206" -> "1000759"  [label="DDG: nbit"];
"1000206" -> "1000205"  [label="DDG: nbit"];
"1000173" -> "1000206"  [label="DDG: nbit"];
"1000206" -> "1000233"  [label="DDG: nbit"];
"1000206" -> "1000717"  [label="DDG: nbit"];
"1000173" -> "1000109"  [label="AST: "];
"1000174" -> "1000173"  [label="AST: "];
"1000179" -> "1000173"  [label="CFG: "];
"1000173" -> "1000759"  [label="DDG: nbit"];
"1000173" -> "1000759"  [label="DDG: json_array_string(val, 6)"];
"1000173" -> "1000233"  [label="DDG: nbit"];
"1000173" -> "1000717"  [label="DDG: nbit"];
}
