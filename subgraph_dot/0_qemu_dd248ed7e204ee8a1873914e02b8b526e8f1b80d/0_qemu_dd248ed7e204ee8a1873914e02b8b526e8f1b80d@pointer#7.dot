digraph "0_qemu_dd248ed7e204ee8a1873914e02b8b526e8f1b80d@pointer" {
"1000563" [label="(Call,scanout->x = ss.r.x)"];
"1000425" [label="(Call,ss.r.x * bpp)"];
"1000285" [label="(Call,ss.r.x > res->width)"];
"1000114" [label="(Call,trace_virtio_gpu_cmd_set_scanout(ss.scanout_id, ss.resource_id,\n                                     ss.r.width, ss.r.height, ss.r.x, ss.r.y))"];
"1000112" [label="(Call,VIRTIO_GPU_FILL_CMD(ss))"];
"1000414" [label="(Call,bpp = (PIXMAN_FORMAT_BPP(format) + 7) / 8)"];
"1000416" [label="(Call,(PIXMAN_FORMAT_BPP(format) + 7) / 8)"];
"1000418" [label="(Call,PIXMAN_FORMAT_BPP(format))"];
"1000408" [label="(Call,format = pixman_image_get_format(res->image))"];
"1000410" [label="(Call,pixman_image_get_format(res->image))"];
"1000438" [label="(Call,pixman_image_get_stride(res->image))"];
"1000112" [label="(Call,VIRTIO_GPU_FILL_CMD(ss))"];
"1000219" [label="(Call,qemu_log_mask(LOG_GUEST_ERROR,\n                          \"%s: illegal scanout id specified %d\",\n                          __func__, ss.scanout_id))"];
"1000113" [label="(Identifier,ss)"];
"1000116" [label="(Identifier,ss)"];
"1000435" [label="(Identifier,ss)"];
"1000114" [label="(Call,trace_virtio_gpu_cmd_set_scanout(ss.scanout_id, ss.resource_id,\n                                     ss.r.width, ss.r.height, ss.r.x, ss.r.y))"];
"1000415" [label="(Identifier,bpp)"];
"1000414" [label="(Call,bpp = (PIXMAN_FORMAT_BPP(format) + 7) / 8)"];
"1000284" [label="(Call,ss.r.x > res->width ||\n        ss.r.y > res->height ||\n        ss.r.width > res->width ||\n        ss.r.height > res->height ||\n        ss.r.x + ss.r.width > res->width ||\n        ss.r.y + ss.r.height > res->height)"];
"1000563" [label="(Call,scanout->x = ss.r.x)"];
"1000126" [label="(Call,ss.r.height)"];
"1000144" [label="(Identifier,ss)"];
"1000152" [label="(Call,qemu_log_mask(LOG_GUEST_ERROR, \"%s: illegal scanout id specified %d\",\n                      __func__, ss.scanout_id))"];
"1000118" [label="(Call,ss.resource_id)"];
"1000432" [label="(Call,ss.r.y * pixman_image_get_stride(res->image))"];
"1000270" [label="(Call,qemu_log_mask(LOG_GUEST_ERROR, \"%s: illegal resource specified %d\n\",\n                      __func__, ss.resource_id))"];
"1000496" [label="(Call,pixman_image_create_bits(format, ss.r.width, ss.r.height, ptr,\n                                        pixman_image_get_stride(res->image)))"];
"1000325" [label="(Call,ss.r.x + ss.r.width > res->width)"];
"1000207" [label="(Call,1 << ss.scanout_id)"];
"1000286" [label="(Call,ss.r.x)"];
"1000213" [label="(Call,ss.scanout_id == 0)"];
"1000419" [label="(Identifier,format)"];
"1000564" [label="(Call,scanout->x)"];
"1000408" [label="(Call,format = pixman_image_get_format(res->image))"];
"1000426" [label="(Call,ss.r.x)"];
"1000418" [label="(Call,PIXMAN_FORMAT_BPP(format))"];
"1000425" [label="(Call,ss.r.x * bpp)"];
"1000315" [label="(Call,ss.r.height > res->height)"];
"1000581" [label="(Call,scanout->width = ss.r.width)"];
"1000131" [label="(Call,ss.r.x)"];
"1000136" [label="(Call,ss.r.y)"];
"1000171" [label="(Call,ss.resource_id == 0)"];
"1000463" [label="(Call,scanout->width != ss.r.width)"];
"1000411" [label="(Call,res->image)"];
"1000326" [label="(Call,ss.r.x + ss.r.width)"];
"1000599" [label="(MethodReturn,static void)"];
"1000261" [label="(Call,virtio_gpu_find_resource(g, ss.resource_id))"];
"1000115" [label="(Call,ss.scanout_id)"];
"1000121" [label="(Call,ss.r.width)"];
"1000574" [label="(Identifier,scanout)"];
"1000567" [label="(Call,ss.r.x)"];
"1000142" [label="(Call,ss.scanout_id >= g->conf.max_outputs)"];
"1000295" [label="(Call,ss.r.y > res->height)"];
"1000556" [label="(Call,scanout->resource_id = ss.resource_id)"];
"1000416" [label="(Call,(PIXMAN_FORMAT_BPP(format) + 7) / 8)"];
"1000423" [label="(Identifier,offset)"];
"1000417" [label="(Call,PIXMAN_FORMAT_BPP(format) + 7)"];
"1000105" [label="(Block,)"];
"1000431" [label="(Identifier,bpp)"];
"1000420" [label="(Literal,7)"];
"1000305" [label="(Call,ss.r.width > res->width)"];
"1000285" [label="(Call,ss.r.x > res->width)"];
"1000472" [label="(Call,scanout->height != ss.r.height)"];
"1000590" [label="(Call,scanout->height = ss.r.height)"];
"1000410" [label="(Call,pixman_image_get_format(res->image))"];
"1000291" [label="(Call,res->width)"];
"1000422" [label="(Call,offset = (ss.r.x * bpp) + ss.r.y * pixman_image_get_stride(res->image))"];
"1000421" [label="(Literal,8)"];
"1000409" [label="(Identifier,format)"];
"1000356" [label="(Call,qemu_log_mask(LOG_GUEST_ERROR, \"%s: illegal scanout %d bounds for\"\n                      \" resource %d, (%d,%d)+%d,%d vs %d %d\n\",\n                      __func__, ss.scanout_id, ss.resource_id, ss.r.x, ss.r.y,\n                      ss.r.width, ss.r.height, res->width, res->height))"];
"1000298" [label="(Identifier,ss)"];
"1000424" [label="(Call,(ss.r.x * bpp) + ss.r.y * pixman_image_get_stride(res->image))"];
"1000563" -> "1000105"  [label="AST: "];
"1000563" -> "1000567"  [label="CFG: "];
"1000564" -> "1000563"  [label="AST: "];
"1000567" -> "1000563"  [label="AST: "];
"1000574" -> "1000563"  [label="CFG: "];
"1000563" -> "1000599"  [label="DDG: ss.r.x"];
"1000563" -> "1000599"  [label="DDG: scanout->x"];
"1000425" -> "1000563"  [label="DDG: ss.r.x"];
"1000425" -> "1000424"  [label="AST: "];
"1000425" -> "1000431"  [label="CFG: "];
"1000426" -> "1000425"  [label="AST: "];
"1000431" -> "1000425"  [label="AST: "];
"1000435" -> "1000425"  [label="CFG: "];
"1000425" -> "1000599"  [label="DDG: ss.r.x"];
"1000425" -> "1000599"  [label="DDG: bpp"];
"1000425" -> "1000422"  [label="DDG: ss.r.x"];
"1000425" -> "1000422"  [label="DDG: bpp"];
"1000425" -> "1000424"  [label="DDG: ss.r.x"];
"1000425" -> "1000424"  [label="DDG: bpp"];
"1000285" -> "1000425"  [label="DDG: ss.r.x"];
"1000414" -> "1000425"  [label="DDG: bpp"];
"1000285" -> "1000284"  [label="AST: "];
"1000285" -> "1000291"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000291" -> "1000285"  [label="AST: "];
"1000298" -> "1000285"  [label="CFG: "];
"1000284" -> "1000285"  [label="CFG: "];
"1000285" -> "1000599"  [label="DDG: res->width"];
"1000285" -> "1000284"  [label="DDG: ss.r.x"];
"1000285" -> "1000284"  [label="DDG: res->width"];
"1000114" -> "1000285"  [label="DDG: ss.r.x"];
"1000285" -> "1000305"  [label="DDG: res->width"];
"1000285" -> "1000325"  [label="DDG: ss.r.x"];
"1000285" -> "1000326"  [label="DDG: ss.r.x"];
"1000285" -> "1000356"  [label="DDG: ss.r.x"];
"1000285" -> "1000356"  [label="DDG: res->width"];
"1000114" -> "1000105"  [label="AST: "];
"1000114" -> "1000136"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000118" -> "1000114"  [label="AST: "];
"1000121" -> "1000114"  [label="AST: "];
"1000126" -> "1000114"  [label="AST: "];
"1000131" -> "1000114"  [label="AST: "];
"1000136" -> "1000114"  [label="AST: "];
"1000144" -> "1000114"  [label="CFG: "];
"1000114" -> "1000599"  [label="DDG: ss.r.height"];
"1000114" -> "1000599"  [label="DDG: trace_virtio_gpu_cmd_set_scanout(ss.scanout_id, ss.resource_id,\n                                     ss.r.width, ss.r.height, ss.r.x, ss.r.y)"];
"1000114" -> "1000599"  [label="DDG: ss.r.width"];
"1000114" -> "1000599"  [label="DDG: ss.resource_id"];
"1000114" -> "1000599"  [label="DDG: ss.r.y"];
"1000114" -> "1000599"  [label="DDG: ss.r.x"];
"1000112" -> "1000114"  [label="DDG: ss"];
"1000114" -> "1000142"  [label="DDG: ss.scanout_id"];
"1000114" -> "1000171"  [label="DDG: ss.resource_id"];
"1000114" -> "1000295"  [label="DDG: ss.r.y"];
"1000114" -> "1000305"  [label="DDG: ss.r.width"];
"1000114" -> "1000315"  [label="DDG: ss.r.height"];
"1000114" -> "1000356"  [label="DDG: ss.r.y"];
"1000114" -> "1000356"  [label="DDG: ss.r.width"];
"1000114" -> "1000356"  [label="DDG: ss.r.height"];
"1000114" -> "1000432"  [label="DDG: ss.r.y"];
"1000114" -> "1000463"  [label="DDG: ss.r.width"];
"1000114" -> "1000472"  [label="DDG: ss.r.height"];
"1000114" -> "1000496"  [label="DDG: ss.r.width"];
"1000114" -> "1000496"  [label="DDG: ss.r.height"];
"1000114" -> "1000581"  [label="DDG: ss.r.width"];
"1000114" -> "1000590"  [label="DDG: ss.r.height"];
"1000112" -> "1000105"  [label="AST: "];
"1000112" -> "1000113"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000116" -> "1000112"  [label="CFG: "];
"1000112" -> "1000599"  [label="DDG: VIRTIO_GPU_FILL_CMD(ss)"];
"1000112" -> "1000599"  [label="DDG: ss"];
"1000112" -> "1000142"  [label="DDG: ss"];
"1000112" -> "1000152"  [label="DDG: ss"];
"1000112" -> "1000171"  [label="DDG: ss"];
"1000112" -> "1000207"  [label="DDG: ss"];
"1000112" -> "1000213"  [label="DDG: ss"];
"1000112" -> "1000219"  [label="DDG: ss"];
"1000112" -> "1000261"  [label="DDG: ss"];
"1000112" -> "1000270"  [label="DDG: ss"];
"1000112" -> "1000356"  [label="DDG: ss"];
"1000112" -> "1000556"  [label="DDG: ss"];
"1000414" -> "1000105"  [label="AST: "];
"1000414" -> "1000416"  [label="CFG: "];
"1000415" -> "1000414"  [label="AST: "];
"1000416" -> "1000414"  [label="AST: "];
"1000423" -> "1000414"  [label="CFG: "];
"1000414" -> "1000599"  [label="DDG: (PIXMAN_FORMAT_BPP(format) + 7) / 8"];
"1000416" -> "1000414"  [label="DDG: PIXMAN_FORMAT_BPP(format) + 7"];
"1000416" -> "1000414"  [label="DDG: 8"];
"1000416" -> "1000421"  [label="CFG: "];
"1000417" -> "1000416"  [label="AST: "];
"1000421" -> "1000416"  [label="AST: "];
"1000416" -> "1000599"  [label="DDG: PIXMAN_FORMAT_BPP(format) + 7"];
"1000418" -> "1000416"  [label="DDG: format"];
"1000418" -> "1000417"  [label="AST: "];
"1000418" -> "1000419"  [label="CFG: "];
"1000419" -> "1000418"  [label="AST: "];
"1000420" -> "1000418"  [label="CFG: "];
"1000418" -> "1000599"  [label="DDG: format"];
"1000418" -> "1000417"  [label="DDG: format"];
"1000408" -> "1000418"  [label="DDG: format"];
"1000418" -> "1000496"  [label="DDG: format"];
"1000408" -> "1000105"  [label="AST: "];
"1000408" -> "1000410"  [label="CFG: "];
"1000409" -> "1000408"  [label="AST: "];
"1000410" -> "1000408"  [label="AST: "];
"1000415" -> "1000408"  [label="CFG: "];
"1000408" -> "1000599"  [label="DDG: pixman_image_get_format(res->image)"];
"1000410" -> "1000408"  [label="DDG: res->image"];
"1000410" -> "1000411"  [label="CFG: "];
"1000411" -> "1000410"  [label="AST: "];
"1000410" -> "1000438"  [label="DDG: res->image"];
}
