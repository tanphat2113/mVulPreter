digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_11@pointer" {
"1001005" [label="(Call,*opt = NULL)"];
"1001131" [label="(Call,ipv6_update_options(sk, opt))"];
"1001129" [label="(Call,opt = ipv6_update_options(sk, opt))"];
"1001137" [label="(Call,sock_kfree_s(sk, opt, opt->tot_len))"];
"1002030" [label="(Call,release_sock(sk))"];
"1001007" [label="(Identifier,NULL)"];
"1001402" [label="(Call,ipv6_sock_mc_drop(sk, mreq.ipv6mr_ifindex, &mreq.ipv6mr_multiaddr))"];
"1001129" [label="(Call,opt = ipv6_update_options(sk, opt))"];
"1001049" [label="(Call,sock_kmalloc(sk, sizeof(*opt) + optlen, GFP_KERNEL))"];
"1001140" [label="(Call,opt->tot_len)"];
"1001762" [label="(Call,ip6_ra_control(sk, val))"];
"1001657" [label="(Call,ip6_mc_source(add, omode, sk, &greqs))"];
"1001624" [label="(Call,ipv6_sock_mc_join(sk, greqs.gsr_interface,\n\t\t\t\t\t\t &psin6->sin6_addr))"];
"1001747" [label="(Call,ip6_mc_msfilter(sk, gsf))"];
"1001131" [label="(Call,ipv6_update_options(sk, opt))"];
"1001138" [label="(Identifier,sk)"];
"1001065" [label="(Call,memset(opt, 0, sizeof(*opt)))"];
"1000420" [label="(Call,sk_refcnt_debug_inc(sk))"];
"1001005" [label="(Call,*opt = NULL)"];
"1001130" [label="(Identifier,opt)"];
"1001452" [label="(Call,ipv6_sock_ac_drop(sk, mreq.ipv6mr_ifindex, &mreq.ipv6mr_acaddr))"];
"1001013" [label="(Identifier,fl6)"];
"1000229" [label="(Call,udp_sk(sk))"];
"1001513" [label="(Call,ipv6_sock_mc_join(sk, greq.gr_interface,\n\t\t\t\t\t\t &psin6->sin6_addr))"];
"1001135" [label="(ControlStructure,if (opt))"];
"1001139" [label="(Identifier,opt)"];
"1000437" [label="(Call,inet_sk(sk))"];
"1000120" [label="(Block,)"];
"1001137" [label="(Call,sock_kfree_s(sk, opt, opt->tot_len))"];
"1000115" [label="(MethodParameterIn,struct sock *sk)"];
"1001368" [label="(Call,inet_sk(sk))"];
"1000187" [label="(Call,lock_sock(sk))"];
"1001134" [label="(JumpTarget,done:)"];
"1001071" [label="(Call,opt->tot_len = sizeof(*opt) + optlen)"];
"1000923" [label="(Call,ipv6_update_options(sk, opt))"];
"1001878" [label="(Call,xfrm_user_policy(sk, optname, optval, optlen))"];
"1002031" [label="(Identifier,sk)"];
"1000929" [label="(Call,sock_kfree_s(sk, opt, opt->tot_len))"];
"1001003" [label="(Block,)"];
"1001133" [label="(Identifier,opt)"];
"1001440" [label="(Call,ipv6_sock_ac_join(sk, mreq.ipv6mr_ifindex, &mreq.ipv6mr_acaddr))"];
"1000856" [label="(Call,ipv6_renew_options(sk, np->opt, optname,\n \t\t\t\t\t (struct ipv6_opt_hdr __user *)optval,\n \t\t\t\t\t optlen))"];
"1001108" [label="(Call,ip6_datagram_send_ctl(net, sk, &msg, &fl6, opt, &junk,\n\t\t\t\t\t     &junk, &junk))"];
"1002030" [label="(Call,release_sock(sk))"];
"1001143" [label="(ControlStructure,break;)"];
"1002033" [label="(Identifier,needs_rtnl)"];
"1001132" [label="(Identifier,sk)"];
"1001006" [label="(Identifier,opt)"];
"1001857" [label="(Call,ipv6_flowlabel_opt(sk, optval, optlen))"];
"1000775" [label="(Call,inet_sk(sk))"];
"1000265" [label="(Call,ipv6_only_sock(sk))"];
"1002046" [label="(MethodReturn,static int)"];
"1001390" [label="(Call,ipv6_sock_mc_join(sk, mreq.ipv6mr_ifindex, &mreq.ipv6mr_multiaddr))"];
"1001525" [label="(Call,ipv6_sock_mc_drop(sk, greq.gr_interface,\n\t\t\t\t\t\t &psin6->sin6_addr))"];
"1001005" -> "1001003"  [label="AST: "];
"1001005" -> "1001007"  [label="CFG: "];
"1001006" -> "1001005"  [label="AST: "];
"1001007" -> "1001005"  [label="AST: "];
"1001013" -> "1001005"  [label="CFG: "];
"1001005" -> "1002046"  [label="DDG: NULL"];
"1001005" -> "1002046"  [label="DDG: opt"];
"1001005" -> "1001131"  [label="DDG: opt"];
"1001131" -> "1001129"  [label="AST: "];
"1001131" -> "1001133"  [label="CFG: "];
"1001132" -> "1001131"  [label="AST: "];
"1001133" -> "1001131"  [label="AST: "];
"1001129" -> "1001131"  [label="CFG: "];
"1001131" -> "1001129"  [label="DDG: sk"];
"1001131" -> "1001129"  [label="DDG: opt"];
"1000187" -> "1001131"  [label="DDG: sk"];
"1001108" -> "1001131"  [label="DDG: sk"];
"1001108" -> "1001131"  [label="DDG: opt"];
"1000115" -> "1001131"  [label="DDG: sk"];
"1001131" -> "1001137"  [label="DDG: sk"];
"1001131" -> "1002030"  [label="DDG: sk"];
"1001129" -> "1001003"  [label="AST: "];
"1001130" -> "1001129"  [label="AST: "];
"1001134" -> "1001129"  [label="CFG: "];
"1001129" -> "1002046"  [label="DDG: opt"];
"1001129" -> "1002046"  [label="DDG: ipv6_update_options(sk, opt)"];
"1001129" -> "1001137"  [label="DDG: opt"];
"1001137" -> "1001135"  [label="AST: "];
"1001137" -> "1001140"  [label="CFG: "];
"1001138" -> "1001137"  [label="AST: "];
"1001139" -> "1001137"  [label="AST: "];
"1001140" -> "1001137"  [label="AST: "];
"1001143" -> "1001137"  [label="CFG: "];
"1001137" -> "1002046"  [label="DDG: opt->tot_len"];
"1001137" -> "1002046"  [label="DDG: sock_kfree_s(sk, opt, opt->tot_len)"];
"1001137" -> "1002046"  [label="DDG: opt"];
"1001108" -> "1001137"  [label="DDG: sk"];
"1001108" -> "1001137"  [label="DDG: opt"];
"1001049" -> "1001137"  [label="DDG: sk"];
"1000115" -> "1001137"  [label="DDG: sk"];
"1001065" -> "1001137"  [label="DDG: opt"];
"1001071" -> "1001137"  [label="DDG: opt->tot_len"];
"1001137" -> "1002030"  [label="DDG: sk"];
"1002030" -> "1000120"  [label="AST: "];
"1002030" -> "1002031"  [label="CFG: "];
"1002031" -> "1002030"  [label="AST: "];
"1002033" -> "1002030"  [label="CFG: "];
"1002030" -> "1002046"  [label="DDG: release_sock(sk)"];
"1002030" -> "1002046"  [label="DDG: sk"];
"1000187" -> "1002030"  [label="DDG: sk"];
"1001657" -> "1002030"  [label="DDG: sk"];
"1000856" -> "1002030"  [label="DDG: sk"];
"1001857" -> "1002030"  [label="DDG: sk"];
"1001747" -> "1002030"  [label="DDG: sk"];
"1001108" -> "1002030"  [label="DDG: sk"];
"1000775" -> "1002030"  [label="DDG: sk"];
"1001049" -> "1002030"  [label="DDG: sk"];
"1000437" -> "1002030"  [label="DDG: sk"];
"1000265" -> "1002030"  [label="DDG: sk"];
"1001402" -> "1002030"  [label="DDG: sk"];
"1000929" -> "1002030"  [label="DDG: sk"];
"1001390" -> "1002030"  [label="DDG: sk"];
"1001762" -> "1002030"  [label="DDG: sk"];
"1001525" -> "1002030"  [label="DDG: sk"];
"1001513" -> "1002030"  [label="DDG: sk"];
"1001452" -> "1002030"  [label="DDG: sk"];
"1001878" -> "1002030"  [label="DDG: sk"];
"1000229" -> "1002030"  [label="DDG: sk"];
"1000420" -> "1002030"  [label="DDG: sk"];
"1000923" -> "1002030"  [label="DDG: sk"];
"1001368" -> "1002030"  [label="DDG: sk"];
"1001440" -> "1002030"  [label="DDG: sk"];
"1001624" -> "1002030"  [label="DDG: sk"];
"1000115" -> "1002030"  [label="DDG: sk"];
}
