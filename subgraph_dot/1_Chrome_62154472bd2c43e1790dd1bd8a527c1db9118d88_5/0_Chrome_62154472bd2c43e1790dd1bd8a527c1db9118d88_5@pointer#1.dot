digraph "0_Chrome_62154472bd2c43e1790dd1bd8a527c1db9118d88_5@pointer" {
"1000108" [label="(Call,ExecutionContext::From(script_state))"];
"1000101" [label="(MethodParameterIn,ScriptState* script_state)"];
"1000106" [label="(Call,* context = ExecutionContext::From(script_state))"];
"1000110" [label="(Call,DCHECK(context))"];
"1000125" [label="(Call,Document>(context))"];
"1000122" [label="(Call,*To<Document>(context))"];
"1000120" [label="(Call,& doc = *To<Document>(context))"];
"1000137" [label="(Call,ScriptPromise::Reject(\n        script_state, V8ThrowException::CreateTypeError(\n                          script_state->GetIsolate(), \"Document not active\")))"];
"1000136" [label="(Return,return ScriptPromise::Reject(\n        script_state, V8ThrowException::CreateTypeError(\n                          script_state->GetIsolate(), \"Document not active\"));)"];
"1000148" [label="(Call,ScriptPromise::RejectWithDOMException(\n        script_state,\n        MakeGarbageCollected<DOMException>(\n            DOMExceptionCode::kSecurityError,\n             \"Must be handling a user gesture to show a permission request.\")))"];
"1000147" [label="(Return,return ScriptPromise::RejectWithDOMException(\n        script_state,\n        MakeGarbageCollected<DOMException>(\n            DOMExceptionCode::kSecurityError,\n             \"Must be handling a user gesture to show a permission request.\"));)"];
"1000187" [label="(Call,ScriptPromiseResolver>(script_state))"];
"1000185" [label="(Call,MakeGarbageCollected<ScriptPromiseResolver>(script_state))"];
"1000183" [label="(Call,* resolver = MakeGarbageCollected<ScriptPromiseResolver>(script_state))"];
"1000215" [label="(Call,WrapPersistent(resolver))"];
"1000210" [label="(Call,WTF::Bind(&Bluetooth::RequestScanningCallback, WrapPersistent(this),\n                WrapPersistent(resolver), id))"];
"1000205" [label="(Call,service_->RequestScanningStart(\n      std::move(client), std::move(scan_options),\n      WTF::Bind(&Bluetooth::RequestScanningCallback, WrapPersistent(this),\n                WrapPersistent(resolver), id)))"];
"1000150" [label="(Call,MakeGarbageCollected<DOMException>(\n            DOMExceptionCode::kSecurityError,\n             \"Must be handling a user gesture to show a permission request.\"))"];
"1000120" [label="(Call,& doc = *To<Document>(context))"];
"1000137" [label="(Call,ScriptPromise::Reject(\n        script_state, V8ThrowException::CreateTypeError(\n                          script_state->GetIsolate(), \"Document not active\")))"];
"1000109" [label="(Identifier,script_state)"];
"1000149" [label="(Identifier,script_state)"];
"1000121" [label="(Identifier,doc)"];
"1000126" [label="(Identifier,Document)"];
"1000147" [label="(Return,return ScriptPromise::RejectWithDOMException(\n        script_state,\n        MakeGarbageCollected<DOMException>(\n            DOMExceptionCode::kSecurityError,\n             \"Must be handling a user gesture to show a permission request.\"));)"];
"1000146" [label="(Block,)"];
"1000211" [label="(Call,&Bluetooth::RequestScanningCallback)"];
"1000219" [label="(Identifier,promise)"];
"1000213" [label="(Call,WrapPersistent(this))"];
"1000184" [label="(Identifier,resolver)"];
"1000208" [label="(Call,std::move(scan_options))"];
"1000122" [label="(Call,*To<Document>(context))"];
"1000101" [label="(MethodParameterIn,ScriptState* script_state)"];
"1000127" [label="(Identifier,context)"];
"1000189" [label="(Identifier,script_state)"];
"1000192" [label="(Identifier,promise)"];
"1000210" [label="(Call,WTF::Bind(&Bluetooth::RequestScanningCallback, WrapPersistent(this),\n                WrapPersistent(resolver), id))"];
"1000139" [label="(Call,V8ThrowException::CreateTypeError(\n                          script_state->GetIsolate(), \"Document not active\"))"];
"1000216" [label="(Identifier,resolver)"];
"1000125" [label="(Call,Document>(context))"];
"1000114" [label="(Identifier,mojom::ConsoleMessageSource::kJavaScript)"];
"1000107" [label="(Identifier,context)"];
"1000186" [label="(Identifier,MakeGarbageCollected)"];
"1000136" [label="(Return,return ScriptPromise::Reject(\n        script_state, V8ThrowException::CreateTypeError(\n                          script_state->GetIsolate(), \"Document not active\"));)"];
"1000104" [label="(Block,)"];
"1000188" [label="(Identifier,ScriptPromiseResolver)"];
"1000187" [label="(Call,ScriptPromiseResolver>(script_state))"];
"1000148" [label="(Call,ScriptPromise::RejectWithDOMException(\n        script_state,\n        MakeGarbageCollected<DOMException>(\n            DOMExceptionCode::kSecurityError,\n             \"Must be handling a user gesture to show a permission request.\")))"];
"1000106" [label="(Call,* context = ExecutionContext::From(script_state))"];
"1000123" [label="(Call,*To)"];
"1000183" [label="(Call,* resolver = MakeGarbageCollected<ScriptPromiseResolver>(script_state))"];
"1000220" [label="(MethodReturn,ScriptPromise)"];
"1000138" [label="(Identifier,script_state)"];
"1000111" [label="(Identifier,context)"];
"1000206" [label="(Call,std::move(client))"];
"1000108" [label="(Call,ExecutionContext::From(script_state))"];
"1000215" [label="(Call,WrapPersistent(resolver))"];
"1000135" [label="(Block,)"];
"1000205" [label="(Call,service_->RequestScanningStart(\n      std::move(client), std::move(scan_options),\n      WTF::Bind(&Bluetooth::RequestScanningCallback, WrapPersistent(this),\n                WrapPersistent(resolver), id)))"];
"1000196" [label="(Call,id = client_bindings_.AddBinding(\n      this, mojo::MakeRequest(&client),\n      context->GetTaskRunner(TaskType::kMiscPlatformAPI)))"];
"1000130" [label="(Identifier,frame)"];
"1000217" [label="(Identifier,id)"];
"1000185" [label="(Call,MakeGarbageCollected<ScriptPromiseResolver>(script_state))"];
"1000110" [label="(Call,DCHECK(context))"];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000109"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000108" -> "1000220"  [label="DDG: "];
"1000108" -> "1000106"  [label="DDG: "];
"1000101" -> "1000108"  [label="DDG: "];
"1000108" -> "1000137"  [label="DDG: "];
"1000108" -> "1000148"  [label="DDG: "];
"1000108" -> "1000187"  [label="DDG: "];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000220"  [label="DDG: "];
"1000101" -> "1000137"  [label="DDG: "];
"1000101" -> "1000148"  [label="DDG: "];
"1000101" -> "1000187"  [label="DDG: "];
"1000106" -> "1000104"  [label="AST: "];
"1000107" -> "1000106"  [label="AST: "];
"1000111" -> "1000106"  [label="CFG: "];
"1000106" -> "1000220"  [label="DDG: "];
"1000106" -> "1000110"  [label="DDG: "];
"1000110" -> "1000104"  [label="AST: "];
"1000110" -> "1000111"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000114" -> "1000110"  [label="CFG: "];
"1000110" -> "1000220"  [label="DDG: "];
"1000110" -> "1000125"  [label="DDG: "];
"1000125" -> "1000122"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000122" -> "1000125"  [label="CFG: "];
"1000125" -> "1000220"  [label="DDG: "];
"1000125" -> "1000220"  [label="DDG: "];
"1000125" -> "1000122"  [label="DDG: "];
"1000125" -> "1000122"  [label="DDG: "];
"1000122" -> "1000120"  [label="AST: "];
"1000123" -> "1000122"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000122" -> "1000220"  [label="DDG: "];
"1000122" -> "1000220"  [label="DDG: "];
"1000122" -> "1000120"  [label="DDG: "];
"1000122" -> "1000120"  [label="DDG: "];
"1000120" -> "1000104"  [label="AST: "];
"1000121" -> "1000120"  [label="AST: "];
"1000130" -> "1000120"  [label="CFG: "];
"1000120" -> "1000220"  [label="DDG: "];
"1000120" -> "1000220"  [label="DDG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000136" -> "1000137"  [label="CFG: "];
"1000137" -> "1000220"  [label="DDG: "];
"1000137" -> "1000220"  [label="DDG: "];
"1000137" -> "1000220"  [label="DDG: "];
"1000137" -> "1000136"  [label="DDG: "];
"1000139" -> "1000137"  [label="DDG: "];
"1000139" -> "1000137"  [label="DDG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000220" -> "1000136"  [label="CFG: "];
"1000136" -> "1000220"  [label="DDG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000148" -> "1000150"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000150" -> "1000148"  [label="AST: "];
"1000147" -> "1000148"  [label="CFG: "];
"1000148" -> "1000220"  [label="DDG: "];
"1000148" -> "1000220"  [label="DDG: "];
"1000148" -> "1000220"  [label="DDG: "];
"1000148" -> "1000147"  [label="DDG: "];
"1000150" -> "1000148"  [label="DDG: "];
"1000150" -> "1000148"  [label="DDG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000220" -> "1000147"  [label="CFG: "];
"1000147" -> "1000220"  [label="DDG: "];
"1000187" -> "1000185"  [label="AST: "];
"1000187" -> "1000189"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000189" -> "1000187"  [label="AST: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000187" -> "1000220"  [label="DDG: "];
"1000187" -> "1000220"  [label="DDG: "];
"1000187" -> "1000185"  [label="DDG: "];
"1000187" -> "1000185"  [label="DDG: "];
"1000185" -> "1000183"  [label="AST: "];
"1000186" -> "1000185"  [label="AST: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000185" -> "1000220"  [label="DDG: "];
"1000185" -> "1000220"  [label="DDG: "];
"1000185" -> "1000183"  [label="DDG: "];
"1000185" -> "1000183"  [label="DDG: "];
"1000183" -> "1000104"  [label="AST: "];
"1000184" -> "1000183"  [label="AST: "];
"1000192" -> "1000183"  [label="CFG: "];
"1000183" -> "1000220"  [label="DDG: "];
"1000183" -> "1000215"  [label="DDG: "];
"1000215" -> "1000210"  [label="AST: "];
"1000215" -> "1000216"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000217" -> "1000215"  [label="CFG: "];
"1000215" -> "1000220"  [label="DDG: "];
"1000215" -> "1000210"  [label="DDG: "];
"1000210" -> "1000205"  [label="AST: "];
"1000210" -> "1000217"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000213" -> "1000210"  [label="AST: "];
"1000217" -> "1000210"  [label="AST: "];
"1000205" -> "1000210"  [label="CFG: "];
"1000210" -> "1000220"  [label="DDG: "];
"1000210" -> "1000220"  [label="DDG: "];
"1000210" -> "1000220"  [label="DDG: "];
"1000210" -> "1000220"  [label="DDG: "];
"1000210" -> "1000205"  [label="DDG: "];
"1000210" -> "1000205"  [label="DDG: "];
"1000210" -> "1000205"  [label="DDG: "];
"1000210" -> "1000205"  [label="DDG: "];
"1000213" -> "1000210"  [label="DDG: "];
"1000196" -> "1000210"  [label="DDG: "];
"1000205" -> "1000104"  [label="AST: "];
"1000206" -> "1000205"  [label="AST: "];
"1000208" -> "1000205"  [label="AST: "];
"1000219" -> "1000205"  [label="CFG: "];
"1000205" -> "1000220"  [label="DDG: "];
"1000205" -> "1000220"  [label="DDG: "];
"1000205" -> "1000220"  [label="DDG: "];
"1000205" -> "1000220"  [label="DDG: "];
"1000206" -> "1000205"  [label="DDG: "];
"1000208" -> "1000205"  [label="DDG: "];
}
