digraph "0_linux_234f3ce485d54017f15cf5e0699cff4100121601_3@pointer" {
"1000105" [label="(Call,reg_rmw(ctxt, VCPU_REGS_RCX))"];
"1000101" [label="(MethodParameterIn,struct x86_emulate_ctxt *ctxt)"];
"1000103" [label="(Call,register_address_increment(ctxt, reg_rmw(ctxt, VCPU_REGS_RCX), -1))"];
"1000115" [label="(Call,reg_read(ctxt, VCPU_REGS_RCX))"];
"1000113" [label="(Call,address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX)))"];
"1000112" [label="(Call,address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX)) != 0)"];
"1000111" [label="(Call,(address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX)) != 0) &&\n \t    (ctxt->b == 0xe2 || test_cc(ctxt->b ^ 0x5, ctxt->eflags)))"];
"1000134" [label="(Call,jmp_rel(ctxt, ctxt->src.val))"];
"1000104" [label="(Identifier,ctxt)"];
"1000105" [label="(Call,reg_rmw(ctxt, VCPU_REGS_RCX))"];
"1000122" [label="(Identifier,ctxt)"];
"1000136" [label="(Call,ctxt->src.val)"];
"1000114" [label="(Identifier,ctxt)"];
"1000112" [label="(Call,address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX)) != 0)"];
"1000106" [label="(Identifier,ctxt)"];
"1000103" [label="(Call,register_address_increment(ctxt, reg_rmw(ctxt, VCPU_REGS_RCX), -1))"];
"1000109" [label="(Literal,1)"];
"1000110" [label="(ControlStructure,if ((address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX)) != 0) &&\n \t    (ctxt->b == 0xe2 || test_cc(ctxt->b ^ 0x5, ctxt->eflags))))"];
"1000119" [label="(Call,ctxt->b == 0xe2 || test_cc(ctxt->b ^ 0x5, ctxt->eflags))"];
"1000113" [label="(Call,address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX)))"];
"1000117" [label="(Identifier,VCPU_REGS_RCX)"];
"1000142" [label="(Identifier,X86EMUL_CONTINUE)"];
"1000107" [label="(Identifier,VCPU_REGS_RCX)"];
"1000108" [label="(Call,-1)"];
"1000134" [label="(Call,jmp_rel(ctxt, ctxt->src.val))"];
"1000115" [label="(Call,reg_read(ctxt, VCPU_REGS_RCX))"];
"1000143" [label="(MethodReturn,static int)"];
"1000116" [label="(Identifier,ctxt)"];
"1000102" [label="(Block,)"];
"1000101" [label="(MethodParameterIn,struct x86_emulate_ctxt *ctxt)"];
"1000111" [label="(Call,(address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX)) != 0) &&\n \t    (ctxt->b == 0xe2 || test_cc(ctxt->b ^ 0x5, ctxt->eflags)))"];
"1000118" [label="(Literal,0)"];
"1000135" [label="(Identifier,ctxt)"];
"1000105" -> "1000103"  [label="AST: "];
"1000105" -> "1000107"  [label="CFG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000107" -> "1000105"  [label="AST: "];
"1000109" -> "1000105"  [label="CFG: "];
"1000105" -> "1000103"  [label="DDG: ctxt"];
"1000105" -> "1000103"  [label="DDG: VCPU_REGS_RCX"];
"1000101" -> "1000105"  [label="DDG: ctxt"];
"1000105" -> "1000115"  [label="DDG: VCPU_REGS_RCX"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000143"  [label="DDG: ctxt"];
"1000101" -> "1000103"  [label="DDG: ctxt"];
"1000101" -> "1000113"  [label="DDG: ctxt"];
"1000101" -> "1000115"  [label="DDG: ctxt"];
"1000101" -> "1000134"  [label="DDG: ctxt"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000108"  [label="CFG: "];
"1000104" -> "1000103"  [label="AST: "];
"1000108" -> "1000103"  [label="AST: "];
"1000114" -> "1000103"  [label="CFG: "];
"1000103" -> "1000143"  [label="DDG: -1"];
"1000103" -> "1000143"  [label="DDG: reg_rmw(ctxt, VCPU_REGS_RCX)"];
"1000103" -> "1000143"  [label="DDG: register_address_increment(ctxt, reg_rmw(ctxt, VCPU_REGS_RCX), -1)"];
"1000108" -> "1000103"  [label="DDG: 1"];
"1000103" -> "1000115"  [label="DDG: ctxt"];
"1000115" -> "1000113"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000115" -> "1000143"  [label="DDG: VCPU_REGS_RCX"];
"1000115" -> "1000113"  [label="DDG: ctxt"];
"1000115" -> "1000113"  [label="DDG: VCPU_REGS_RCX"];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000113"  [label="AST: "];
"1000118" -> "1000113"  [label="CFG: "];
"1000113" -> "1000143"  [label="DDG: ctxt"];
"1000113" -> "1000143"  [label="DDG: reg_read(ctxt, VCPU_REGS_RCX)"];
"1000113" -> "1000112"  [label="DDG: ctxt"];
"1000113" -> "1000112"  [label="DDG: reg_read(ctxt, VCPU_REGS_RCX)"];
"1000113" -> "1000134"  [label="DDG: ctxt"];
"1000112" -> "1000111"  [label="AST: "];
"1000112" -> "1000118"  [label="CFG: "];
"1000118" -> "1000112"  [label="AST: "];
"1000122" -> "1000112"  [label="CFG: "];
"1000111" -> "1000112"  [label="CFG: "];
"1000112" -> "1000143"  [label="DDG: address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX))"];
"1000112" -> "1000111"  [label="DDG: address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX))"];
"1000112" -> "1000111"  [label="DDG: 0"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000119"  [label="CFG: "];
"1000119" -> "1000111"  [label="AST: "];
"1000135" -> "1000111"  [label="CFG: "];
"1000142" -> "1000111"  [label="CFG: "];
"1000111" -> "1000143"  [label="DDG: address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX)) != 0"];
"1000111" -> "1000143"  [label="DDG: ctxt->b == 0xe2 || test_cc(ctxt->b ^ 0x5, ctxt->eflags)"];
"1000111" -> "1000143"  [label="DDG: (address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX)) != 0) &&\n \t    (ctxt->b == 0xe2 || test_cc(ctxt->b ^ 0x5, ctxt->eflags))"];
"1000119" -> "1000111"  [label="DDG: ctxt->b == 0xe2"];
"1000119" -> "1000111"  [label="DDG: test_cc(ctxt->b ^ 0x5, ctxt->eflags)"];
"1000134" -> "1000110"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000142" -> "1000134"  [label="CFG: "];
"1000134" -> "1000143"  [label="DDG: ctxt->src.val"];
"1000134" -> "1000143"  [label="DDG: jmp_rel(ctxt, ctxt->src.val)"];
"1000134" -> "1000143"  [label="DDG: ctxt"];
}
