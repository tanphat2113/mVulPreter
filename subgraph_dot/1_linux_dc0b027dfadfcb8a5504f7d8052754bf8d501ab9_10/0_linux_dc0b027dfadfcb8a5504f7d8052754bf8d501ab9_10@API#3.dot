digraph "0_linux_dc0b027dfadfcb8a5504f7d8052754bf8d501ab9_10@API" {
"1000119" [label="(Call,ret = nfs_may_open(state->inode,\n \t\t\t\tstate->owner->so_cred,\n \t\t\t\tnd->intent.open.flags))"];
"1000121" [label="(Call,nfs_may_open(state->inode,\n \t\t\t\tstate->owner->so_cred,\n \t\t\t\tnd->intent.open.flags))"];
"1000109" [label="(Call,nd->intent.open.flags & FMODE_EXEC)"];
"1000138" [label="(Call,ret < 0)"];
"1000182" [label="(Return,return ret;)"];
"1000138" [label="(Call,ret < 0)"];
"1000140" [label="(Literal,0)"];
"1000130" [label="(Call,nd->intent.open.flags)"];
"1000141" [label="(ControlStructure,goto out_close;)"];
"1000137" [label="(ControlStructure,if (ret < 0))"];
"1000117" [label="(Identifier,FMODE_EXEC)"];
"1000139" [label="(Identifier,ret)"];
"1000183" [label="(Identifier,ret)"];
"1000172" [label="(Call,nfs4_close_sync(path, state, nd->intent.open.flags))"];
"1000121" [label="(Call,nfs_may_open(state->inode,\n \t\t\t\tstate->owner->so_cred,\n \t\t\t\tnd->intent.open.flags))"];
"1000143" [label="(Identifier,filp)"];
"1000119" [label="(Call,ret = nfs_may_open(state->inode,\n \t\t\t\tstate->owner->so_cred,\n \t\t\t\tnd->intent.open.flags))"];
"1000109" [label="(Call,nd->intent.open.flags & FMODE_EXEC)"];
"1000105" [label="(Block,)"];
"1000122" [label="(Call,state->inode)"];
"1000167" [label="(Call,ret = PTR_ERR(filp))"];
"1000182" [label="(Return,return ret;)"];
"1000125" [label="(Call,state->owner->so_cred)"];
"1000110" [label="(Call,nd->intent.open.flags)"];
"1000120" [label="(Identifier,ret)"];
"1000118" [label="(Block,)"];
"1000108" [label="(ControlStructure,if (nd->intent.open.flags & FMODE_EXEC))"];
"1000184" [label="(MethodReturn,static int)"];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000139" -> "1000119"  [label="CFG: "];
"1000119" -> "1000184"  [label="DDG: nfs_may_open(state->inode,\n \t\t\t\tstate->owner->so_cred,\n \t\t\t\tnd->intent.open.flags)"];
"1000121" -> "1000119"  [label="DDG: state->inode"];
"1000121" -> "1000119"  [label="DDG: state->owner->so_cred"];
"1000121" -> "1000119"  [label="DDG: nd->intent.open.flags"];
"1000119" -> "1000138"  [label="DDG: ret"];
"1000121" -> "1000130"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000125" -> "1000121"  [label="AST: "];
"1000130" -> "1000121"  [label="AST: "];
"1000121" -> "1000184"  [label="DDG: state->owner->so_cred"];
"1000121" -> "1000184"  [label="DDG: nd->intent.open.flags"];
"1000121" -> "1000184"  [label="DDG: state->inode"];
"1000109" -> "1000121"  [label="DDG: nd->intent.open.flags"];
"1000121" -> "1000172"  [label="DDG: nd->intent.open.flags"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000117"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000117" -> "1000109"  [label="AST: "];
"1000120" -> "1000109"  [label="CFG: "];
"1000143" -> "1000109"  [label="CFG: "];
"1000109" -> "1000184"  [label="DDG: FMODE_EXEC"];
"1000109" -> "1000184"  [label="DDG: nd->intent.open.flags"];
"1000109" -> "1000184"  [label="DDG: nd->intent.open.flags & FMODE_EXEC"];
"1000109" -> "1000172"  [label="DDG: nd->intent.open.flags"];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000141" -> "1000138"  [label="CFG: "];
"1000143" -> "1000138"  [label="CFG: "];
"1000138" -> "1000184"  [label="DDG: ret"];
"1000138" -> "1000184"  [label="DDG: ret < 0"];
"1000138" -> "1000182"  [label="DDG: ret"];
"1000182" -> "1000105"  [label="AST: "];
"1000182" -> "1000183"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000184" -> "1000182"  [label="CFG: "];
"1000182" -> "1000184"  [label="DDG: <RET>"];
"1000183" -> "1000182"  [label="DDG: ret"];
"1000167" -> "1000182"  [label="DDG: ret"];
}
