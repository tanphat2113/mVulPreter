digraph "0_linux_64dd153c83743af81f20924c6343652d731eeecb_2@integer" {
"1000154" [label="(Call,next = (offset + len - 1) >> sdp->sd_sb.sb_bsize_shift)"];
"1000156" [label="(Call,(offset + len - 1) >> sdp->sd_sb.sb_bsize_shift)"];
"1000104" [label="(MethodParameterIn,loff_t offset)"];
"1000159" [label="(Call,len - 1)"];
"1000105" [label="(MethodParameterIn,loff_t len)"];
"1000175" [label="(Call,(next + 1) << sdp->sd_sb.sb_bsize_shift)"];
"1000173" [label="(Call,next = (next + 1) << sdp->sd_sb.sb_bsize_shift)"];
"1000196" [label="(Call,next - offset)"];
"1000194" [label="(Call,len = next - offset)"];
"1000255" [label="(Call,gfs2_write_alloc_required(ip, offset, len))"];
"1000254" [label="(Call,!gfs2_write_alloc_required(ip, offset, len))"];
"1000261" [label="(Call,len > 0)"];
"1000266" [label="(Call,len < bytes)"];
"1000269" [label="(Call,bytes = len)"];
"1000293" [label="(Call,gfs2_write_calc_reserv(ip, bytes, &data_blocks, &ind_blocks))"];
"1000309" [label="(Call,gfs2_inplace_reserve(ip))"];
"1000307" [label="(Call,error = gfs2_inplace_reserve(ip))"];
"1000316" [label="(Call,error == -ENOSPC)"];
"1000315" [label="(Call,error == -ENOSPC && bytes > sdp->sd_sb.sb_bsize)"];
"1000455" [label="(Return,return error;)"];
"1000350" [label="(Call,calc_max_reserv(ip, (len > max_chunk_size)? max_chunk_size: len,\n\t\t\t\t&max_bytes, &data_blocks, &ind_blocks))"];
"1000383" [label="(Call,gfs2_rg_blocks(ip))"];
"1000371" [label="(Call,rblocks = RES_DINODE + ind_blocks + RES_STATFS + RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip))"];
"1000388" [label="(Call,rblocks += data_blocks ? data_blocks : 1)"];
"1000396" [label="(Call,gfs2_trans_begin(sdp, rblocks,\n\t\t\t\t\t PAGE_CACHE_SIZE/sdp->sd_sb.sb_bsize))"];
"1000394" [label="(Call,error = gfs2_trans_begin(sdp, rblocks,\n\t\t\t\t\t PAGE_CACHE_SIZE/sdp->sd_sb.sb_bsize))"];
"1000416" [label="(Call,gfs2_trans_end(sdp))"];
"1000373" [label="(Call,RES_DINODE + ind_blocks + RES_STATFS + RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip))"];
"1000375" [label="(Call,ind_blocks + RES_STATFS + RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip))"];
"1000377" [label="(Call,RES_STATFS + RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip))"];
"1000379" [label="(Call,RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip))"];
"1000381" [label="(Call,RES_RG_HDR + gfs2_rg_blocks(ip))"];
"1000386" [label="(Call,gfs2_is_jdata(ip))"];
"1000427" [label="(Call,gfs2_inplace_release(ip))"];
"1000429" [label="(Call,gfs2_quota_unlock(ip))"];
"1000431" [label="(Call,gfs2_alloc_put(ip))"];
"1000274" [label="(Call,gfs2_alloc_get(ip))"];
"1000272" [label="(Call,al = gfs2_alloc_get(ip))"];
"1000277" [label="(Call,!al)"];
"1000287" [label="(Call,gfs2_quota_lock_check(ip))"];
"1000285" [label="(Call,error = gfs2_quota_lock_check(ip))"];
"1000441" [label="(Call,gfs2_alloc_put(ip))"];
"1000435" [label="(Call,gfs2_inplace_release(ip))"];
"1000438" [label="(Call,gfs2_quota_unlock(ip))"];
"1000320" [label="(Call,bytes > sdp->sd_sb.sb_bsize)"];
"1000328" [label="(Call,bytes >>= 1)"];
"1000331" [label="(Call,bytes &= bsize_mask)"];
"1000335" [label="(Call,bytes == 0)"];
"1000338" [label="(Call,bytes = sdp->sd_sb.sb_bsize)"];
"1000399" [label="(Call,PAGE_CACHE_SIZE/sdp->sd_sb.sb_bsize)"];
"1000347" [label="(Call,max_bytes = bytes)"];
"1000411" [label="(Call,fallocate_chunk(inode, offset, max_bytes, mode))"];
"1000409" [label="(Call,error = fallocate_chunk(inode, offset, max_bytes, mode))"];
"1000421" [label="(Call,len -= max_bytes)"];
"1000424" [label="(Call,offset += max_bytes)"];
"1000353" [label="(Call,len > max_chunk_size)"];
"1000352" [label="(Call,(len > max_chunk_size)? max_chunk_size: len)"];
"1000176" [label="(Call,next + 1)"];
"1000175" [label="(Call,(next + 1) << sdp->sd_sb.sb_bsize_shift)"];
"1000429" [label="(Call,gfs2_quota_unlock(ip))"];
"1000440" [label="(JumpTarget,out_alloc_put:)"];
"1000412" [label="(Identifier,inode)"];
"1000347" [label="(Call,max_bytes = bytes)"];
"1000390" [label="(Call,data_blocks ? data_blocks : 1)"];
"1000437" [label="(JumpTarget,out_qunlock:)"];
"1000349" [label="(Identifier,bytes)"];
"1000194" [label="(Call,len = next - offset)"];
"1000419" [label="(Identifier,error)"];
"1000414" [label="(Identifier,max_bytes)"];
"1000413" [label="(Identifier,offset)"];
"1000338" [label="(Call,bytes = sdp->sd_sb.sb_bsize)"];
"1000290" [label="(Identifier,error)"];
"1000435" [label="(Call,gfs2_inplace_release(ip))"];
"1000264" [label="(Block,)"];
"1000410" [label="(Identifier,error)"];
"1000198" [label="(Identifier,offset)"];
"1000155" [label="(Identifier,next)"];
"1000332" [label="(Identifier,bytes)"];
"1000417" [label="(Identifier,sdp)"];
"1000159" [label="(Call,len - 1)"];
"1000295" [label="(Identifier,bytes)"];
"1000388" [label="(Call,rblocks += data_blocks ? data_blocks : 1)"];
"1000357" [label="(Identifier,len)"];
"1000354" [label="(Identifier,len)"];
"1000423" [label="(Identifier,max_bytes)"];
"1000442" [label="(Identifier,ip)"];
"1000310" [label="(Identifier,ip)"];
"1000250" [label="(Call,unlikely(error))"];
"1000169" [label="(Identifier,max_chunk_size)"];
"1000433" [label="(ControlStructure,goto out_unlock;)"];
"1000271" [label="(Identifier,len)"];
"1000351" [label="(Identifier,ip)"];
"1000253" [label="(ControlStructure,if (!gfs2_write_alloc_required(ip, offset, len)))"];
"1000309" [label="(Call,gfs2_inplace_reserve(ip))"];
"1000105" [label="(MethodParameterIn,loff_t len)"];
"1000286" [label="(Identifier,error)"];
"1000336" [label="(Identifier,bytes)"];
"1000335" [label="(Call,bytes == 0)"];
"1000296" [label="(Call,&data_blocks)"];
"1000222" [label="(Call,bytes == 0)"];
"1000345" [label="(ControlStructure,goto retry;)"];
"1000176" [label="(Call,next + 1)"];
"1000268" [label="(Identifier,bytes)"];
"1000383" [label="(Call,gfs2_rg_blocks(ip))"];
"1000407" [label="(Identifier,error)"];
"1000353" [label="(Call,len > max_chunk_size)"];
"1000400" [label="(Identifier,PAGE_CACHE_SIZE)"];
"1000339" [label="(Identifier,bytes)"];
"1000329" [label="(Identifier,bytes)"];
"1000430" [label="(Identifier,ip)"];
"1000118" [label="(Call,*sdp = GFS2_SB(inode))"];
"1000314" [label="(ControlStructure,if (error == -ENOSPC && bytes > sdp->sd_sb.sb_bsize))"];
"1000205" [label="(Call,sdp->sd_sb.sb_bsize / 2)"];
"1000330" [label="(Literal,1)"];
"1000425" [label="(Identifier,offset)"];
"1000378" [label="(Identifier,RES_STATFS)"];
"1000278" [label="(Identifier,al)"];
"1000397" [label="(Identifier,sdp)"];
"1000355" [label="(Identifier,max_chunk_size)"];
"1000427" [label="(Call,gfs2_inplace_release(ip))"];
"1000399" [label="(Call,PAGE_CACHE_SIZE/sdp->sd_sb.sb_bsize)"];
"1000328" [label="(Call,bytes >>= 1)"];
"1000382" [label="(Identifier,RES_RG_HDR)"];
"1000307" [label="(Call,error = gfs2_inplace_reserve(ip))"];
"1000389" [label="(Identifier,rblocks)"];
"1000298" [label="(Call,&ind_blocks)"];
"1000254" [label="(Call,!gfs2_write_alloc_required(ip, offset, len))"];
"1000103" [label="(MethodParameterIn,int mode)"];
"1000178" [label="(Literal,1)"];
"1000255" [label="(Call,gfs2_write_alloc_required(ip, offset, len))"];
"1000294" [label="(Identifier,ip)"];
"1000409" [label="(Call,error = fallocate_chunk(inode, offset, max_bytes, mode))"];
"1000334" [label="(ControlStructure,if (bytes == 0))"];
"1000195" [label="(Identifier,len)"];
"1000348" [label="(Identifier,max_bytes)"];
"1000317" [label="(Identifier,error)"];
"1000262" [label="(Identifier,len)"];
"1000327" [label="(Block,)"];
"1000267" [label="(Identifier,len)"];
"1000438" [label="(Call,gfs2_quota_unlock(ip))"];
"1000360" [label="(Call,&data_blocks)"];
"1000362" [label="(Call,&ind_blocks)"];
"1000123" [label="(Call,*ip = GFS2_I(inode))"];
"1000377" [label="(Call,RES_STATFS + RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip))"];
"1000398" [label="(Identifier,rblocks)"];
"1000270" [label="(Identifier,bytes)"];
"1000160" [label="(Identifier,len)"];
"1000272" [label="(Call,al = gfs2_alloc_get(ip))"];
"1000132" [label="(Call,ind_blocks = 0)"];
"1000174" [label="(Identifier,next)"];
"1000385" [label="(ControlStructure,if (gfs2_is_jdata(ip)))"];
"1000375" [label="(Call,ind_blocks + RES_STATFS + RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip))"];
"1000376" [label="(Identifier,ind_blocks)"];
"1000280" [label="(Call,error = -ENOMEM)"];
"1000411" [label="(Call,fallocate_chunk(inode, offset, max_bytes, mode))"];
"1000394" [label="(Call,error = gfs2_trans_begin(sdp, rblocks,\n\t\t\t\t\t PAGE_CACHE_SIZE/sdp->sd_sb.sb_bsize))"];
"1000261" [label="(Call,len > 0)"];
"1000293" [label="(Call,gfs2_write_calc_reserv(ip, bytes, &data_blocks, &ind_blocks))"];
"1000333" [label="(Identifier,bsize_mask)"];
"1000401" [label="(Call,sdp->sd_sb.sb_bsize)"];
"1000162" [label="(Call,sdp->sd_sb.sb_bsize_shift)"];
"1000260" [label="(ControlStructure,while (len > 0))"];
"1000387" [label="(Identifier,ip)"];
"1000256" [label="(Identifier,ip)"];
"1000259" [label="(ControlStructure,goto out_unlock;)"];
"1000384" [label="(Identifier,ip)"];
"1000200" [label="(Identifier,bytes)"];
"1000337" [label="(Literal,0)"];
"1000177" [label="(Identifier,next)"];
"1000318" [label="(Call,-ENOSPC)"];
"1000218" [label="(Call,bytes &= bsize_mask)"];
"1000443" [label="(JumpTarget,out_unlock:)"];
"1000415" [label="(Identifier,mode)"];
"1000321" [label="(Identifier,bytes)"];
"1000104" [label="(MethodParameterIn,loff_t offset)"];
"1000312" [label="(Identifier,error)"];
"1000322" [label="(Call,sdp->sd_sb.sb_bsize)"];
"1000173" [label="(Call,next = (next + 1) << sdp->sd_sb.sb_bsize_shift)"];
"1000315" [label="(Call,error == -ENOSPC && bytes > sdp->sd_sb.sb_bsize)"];
"1000416" [label="(Call,gfs2_trans_end(sdp))"];
"1000191" [label="(Call,offset &= bsize_mask)"];
"1000168" [label="(Call,max_chunk_size = UINT_MAX & bsize_mask)"];
"1000441" [label="(Call,gfs2_alloc_put(ip))"];
"1000372" [label="(Identifier,rblocks)"];
"1000426" [label="(Identifier,max_bytes)"];
"1000287" [label="(Call,gfs2_quota_lock_check(ip))"];
"1000436" [label="(Identifier,ip)"];
"1000185" [label="(Call,mode & ~FALLOC_FL_KEEP_SIZE)"];
"1000380" [label="(Identifier,RES_QUOTA)"];
"1000179" [label="(Call,sdp->sd_sb.sb_bsize_shift)"];
"1000308" [label="(Identifier,error)"];
"1000263" [label="(Literal,0)"];
"1000269" [label="(Call,bytes = len)"];
"1000381" [label="(Call,RES_RG_HDR + gfs2_rg_blocks(ip))"];
"1000358" [label="(Call,&max_bytes)"];
"1000386" [label="(Call,gfs2_is_jdata(ip))"];
"1000197" [label="(Identifier,next)"];
"1000374" [label="(Identifier,RES_DINODE)"];
"1000432" [label="(Identifier,ip)"];
"1000356" [label="(Identifier,max_chunk_size)"];
"1000302" [label="(Identifier,al)"];
"1000276" [label="(ControlStructure,if (!al))"];
"1000161" [label="(Literal,1)"];
"1000373" [label="(Call,RES_DINODE + ind_blocks + RES_STATFS + RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip))"];
"1000281" [label="(Identifier,error)"];
"1000396" [label="(Call,gfs2_trans_begin(sdp, rblocks,\n\t\t\t\t\t PAGE_CACHE_SIZE/sdp->sd_sb.sb_bsize))"];
"1000274" [label="(Call,gfs2_alloc_get(ip))"];
"1000154" [label="(Call,next = (offset + len - 1) >> sdp->sd_sb.sb_bsize_shift)"];
"1000428" [label="(Identifier,ip)"];
"1000277" [label="(Call,!al)"];
"1000456" [label="(Identifier,error)"];
"1000316" [label="(Call,error == -ENOSPC)"];
"1000455" [label="(Return,return error;)"];
"1000431" [label="(Call,gfs2_alloc_put(ip))"];
"1000331" [label="(Call,bytes &= bsize_mask)"];
"1000181" [label="(Identifier,sdp)"];
"1000439" [label="(Identifier,ip)"];
"1000258" [label="(Identifier,len)"];
"1000125" [label="(Call,GFS2_I(inode))"];
"1000421" [label="(Call,len -= max_bytes)"];
"1000273" [label="(Identifier,al)"];
"1000371" [label="(Call,rblocks = RES_DINODE + ind_blocks + RES_STATFS + RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip))"];
"1000186" [label="(Identifier,mode)"];
"1000340" [label="(Call,sdp->sd_sb.sb_bsize)"];
"1000350" [label="(Call,calc_max_reserv(ip, (len > max_chunk_size)? max_chunk_size: len,\n\t\t\t\t&max_bytes, &data_blocks, &ind_blocks))"];
"1000106" [label="(Block,)"];
"1000457" [label="(MethodReturn,static long)"];
"1000266" [label="(Call,len < bytes)"];
"1000424" [label="(Call,offset += max_bytes)"];
"1000359" [label="(Identifier,max_bytes)"];
"1000395" [label="(Identifier,error)"];
"1000257" [label="(Identifier,offset)"];
"1000379" [label="(Call,RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip))"];
"1000422" [label="(Identifier,len)"];
"1000352" [label="(Call,(len > max_chunk_size)? max_chunk_size: len)"];
"1000346" [label="(ControlStructure,goto out_qunlock;)"];
"1000275" [label="(Identifier,ip)"];
"1000157" [label="(Call,offset + len - 1)"];
"1000285" [label="(Call,error = gfs2_quota_lock_check(ip))"];
"1000366" [label="(Identifier,al)"];
"1000265" [label="(ControlStructure,if (len < bytes))"];
"1000225" [label="(Call,bytes = sdp->sd_sb.sb_bsize)"];
"1000156" [label="(Call,(offset + len - 1) >> sdp->sd_sb.sb_bsize_shift)"];
"1000320" [label="(Call,bytes > sdp->sd_sb.sb_bsize)"];
"1000196" [label="(Call,next - offset)"];
"1000288" [label="(Identifier,ip)"];
"1000154" -> "1000106"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000156" -> "1000154"  [label="AST: "];
"1000169" -> "1000154"  [label="CFG: "];
"1000154" -> "1000457"  [label="DDG: (offset + len - 1) >> sdp->sd_sb.sb_bsize_shift"];
"1000156" -> "1000154"  [label="DDG: offset + len - 1"];
"1000156" -> "1000154"  [label="DDG: sdp->sd_sb.sb_bsize_shift"];
"1000154" -> "1000175"  [label="DDG: next"];
"1000154" -> "1000176"  [label="DDG: next"];
"1000156" -> "1000162"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000162" -> "1000156"  [label="AST: "];
"1000156" -> "1000457"  [label="DDG: offset + len - 1"];
"1000104" -> "1000156"  [label="DDG: offset"];
"1000159" -> "1000156"  [label="DDG: len"];
"1000159" -> "1000156"  [label="DDG: 1"];
"1000156" -> "1000175"  [label="DDG: sdp->sd_sb.sb_bsize_shift"];
"1000104" -> "1000101"  [label="AST: "];
"1000104" -> "1000457"  [label="DDG: offset"];
"1000104" -> "1000157"  [label="DDG: offset"];
"1000104" -> "1000191"  [label="DDG: offset"];
"1000104" -> "1000196"  [label="DDG: offset"];
"1000104" -> "1000255"  [label="DDG: offset"];
"1000104" -> "1000411"  [label="DDG: offset"];
"1000104" -> "1000424"  [label="DDG: offset"];
"1000159" -> "1000157"  [label="AST: "];
"1000159" -> "1000161"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000161" -> "1000159"  [label="AST: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000159" -> "1000457"  [label="DDG: len"];
"1000159" -> "1000157"  [label="DDG: len"];
"1000159" -> "1000157"  [label="DDG: 1"];
"1000105" -> "1000159"  [label="DDG: len"];
"1000105" -> "1000101"  [label="AST: "];
"1000105" -> "1000457"  [label="DDG: len"];
"1000105" -> "1000194"  [label="DDG: len"];
"1000105" -> "1000255"  [label="DDG: len"];
"1000105" -> "1000261"  [label="DDG: len"];
"1000105" -> "1000266"  [label="DDG: len"];
"1000105" -> "1000269"  [label="DDG: len"];
"1000105" -> "1000350"  [label="DDG: len"];
"1000105" -> "1000353"  [label="DDG: len"];
"1000105" -> "1000352"  [label="DDG: len"];
"1000105" -> "1000421"  [label="DDG: len"];
"1000175" -> "1000173"  [label="AST: "];
"1000175" -> "1000179"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000179" -> "1000175"  [label="AST: "];
"1000173" -> "1000175"  [label="CFG: "];
"1000175" -> "1000457"  [label="DDG: sdp->sd_sb.sb_bsize_shift"];
"1000175" -> "1000457"  [label="DDG: next + 1"];
"1000175" -> "1000173"  [label="DDG: next + 1"];
"1000175" -> "1000173"  [label="DDG: sdp->sd_sb.sb_bsize_shift"];
"1000173" -> "1000106"  [label="AST: "];
"1000174" -> "1000173"  [label="AST: "];
"1000186" -> "1000173"  [label="CFG: "];
"1000173" -> "1000457"  [label="DDG: next"];
"1000173" -> "1000457"  [label="DDG: (next + 1) << sdp->sd_sb.sb_bsize_shift"];
"1000173" -> "1000196"  [label="DDG: next"];
"1000196" -> "1000194"  [label="AST: "];
"1000196" -> "1000198"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000198" -> "1000196"  [label="AST: "];
"1000194" -> "1000196"  [label="CFG: "];
"1000196" -> "1000457"  [label="DDG: next"];
"1000196" -> "1000457"  [label="DDG: offset"];
"1000196" -> "1000194"  [label="DDG: next"];
"1000196" -> "1000194"  [label="DDG: offset"];
"1000191" -> "1000196"  [label="DDG: offset"];
"1000196" -> "1000255"  [label="DDG: offset"];
"1000194" -> "1000106"  [label="AST: "];
"1000195" -> "1000194"  [label="AST: "];
"1000200" -> "1000194"  [label="CFG: "];
"1000194" -> "1000457"  [label="DDG: len"];
"1000194" -> "1000457"  [label="DDG: next - offset"];
"1000194" -> "1000255"  [label="DDG: len"];
"1000255" -> "1000254"  [label="AST: "];
"1000255" -> "1000258"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000257" -> "1000255"  [label="AST: "];
"1000258" -> "1000255"  [label="AST: "];
"1000254" -> "1000255"  [label="CFG: "];
"1000255" -> "1000457"  [label="DDG: len"];
"1000255" -> "1000457"  [label="DDG: offset"];
"1000255" -> "1000457"  [label="DDG: ip"];
"1000255" -> "1000254"  [label="DDG: ip"];
"1000255" -> "1000254"  [label="DDG: offset"];
"1000255" -> "1000254"  [label="DDG: len"];
"1000123" -> "1000255"  [label="DDG: ip"];
"1000255" -> "1000261"  [label="DDG: len"];
"1000255" -> "1000274"  [label="DDG: ip"];
"1000255" -> "1000411"  [label="DDG: offset"];
"1000254" -> "1000253"  [label="AST: "];
"1000259" -> "1000254"  [label="CFG: "];
"1000262" -> "1000254"  [label="CFG: "];
"1000254" -> "1000457"  [label="DDG: gfs2_write_alloc_required(ip, offset, len)"];
"1000254" -> "1000457"  [label="DDG: !gfs2_write_alloc_required(ip, offset, len)"];
"1000261" -> "1000260"  [label="AST: "];
"1000261" -> "1000263"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000263" -> "1000261"  [label="AST: "];
"1000267" -> "1000261"  [label="CFG: "];
"1000433" -> "1000261"  [label="CFG: "];
"1000261" -> "1000457"  [label="DDG: len"];
"1000261" -> "1000457"  [label="DDG: len > 0"];
"1000421" -> "1000261"  [label="DDG: len"];
"1000261" -> "1000266"  [label="DDG: len"];
"1000266" -> "1000265"  [label="AST: "];
"1000266" -> "1000268"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="AST: "];
"1000270" -> "1000266"  [label="CFG: "];
"1000273" -> "1000266"  [label="CFG: "];
"1000266" -> "1000457"  [label="DDG: bytes"];
"1000266" -> "1000457"  [label="DDG: len"];
"1000266" -> "1000457"  [label="DDG: len < bytes"];
"1000222" -> "1000266"  [label="DDG: bytes"];
"1000225" -> "1000266"  [label="DDG: bytes"];
"1000293" -> "1000266"  [label="DDG: bytes"];
"1000266" -> "1000269"  [label="DDG: len"];
"1000266" -> "1000293"  [label="DDG: bytes"];
"1000266" -> "1000353"  [label="DDG: len"];
"1000269" -> "1000265"  [label="AST: "];
"1000269" -> "1000271"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000271" -> "1000269"  [label="AST: "];
"1000273" -> "1000269"  [label="CFG: "];
"1000269" -> "1000457"  [label="DDG: bytes"];
"1000269" -> "1000457"  [label="DDG: len"];
"1000269" -> "1000293"  [label="DDG: bytes"];
"1000293" -> "1000264"  [label="AST: "];
"1000293" -> "1000298"  [label="CFG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000295" -> "1000293"  [label="AST: "];
"1000296" -> "1000293"  [label="AST: "];
"1000298" -> "1000293"  [label="AST: "];
"1000302" -> "1000293"  [label="CFG: "];
"1000293" -> "1000457"  [label="DDG: &ind_blocks"];
"1000293" -> "1000457"  [label="DDG: gfs2_write_calc_reserv(ip, bytes, &data_blocks, &ind_blocks)"];
"1000293" -> "1000457"  [label="DDG: &data_blocks"];
"1000293" -> "1000457"  [label="DDG: bytes"];
"1000309" -> "1000293"  [label="DDG: ip"];
"1000287" -> "1000293"  [label="DDG: ip"];
"1000338" -> "1000293"  [label="DDG: bytes"];
"1000335" -> "1000293"  [label="DDG: bytes"];
"1000350" -> "1000293"  [label="DDG: &data_blocks"];
"1000350" -> "1000293"  [label="DDG: &ind_blocks"];
"1000293" -> "1000309"  [label="DDG: ip"];
"1000293" -> "1000320"  [label="DDG: bytes"];
"1000293" -> "1000328"  [label="DDG: bytes"];
"1000293" -> "1000347"  [label="DDG: bytes"];
"1000293" -> "1000350"  [label="DDG: &data_blocks"];
"1000293" -> "1000350"  [label="DDG: &ind_blocks"];
"1000309" -> "1000307"  [label="AST: "];
"1000309" -> "1000310"  [label="CFG: "];
"1000310" -> "1000309"  [label="AST: "];
"1000307" -> "1000309"  [label="CFG: "];
"1000309" -> "1000307"  [label="DDG: ip"];
"1000309" -> "1000350"  [label="DDG: ip"];
"1000309" -> "1000438"  [label="DDG: ip"];
"1000307" -> "1000264"  [label="AST: "];
"1000308" -> "1000307"  [label="AST: "];
"1000312" -> "1000307"  [label="CFG: "];
"1000307" -> "1000457"  [label="DDG: gfs2_inplace_reserve(ip)"];
"1000307" -> "1000316"  [label="DDG: error"];
"1000316" -> "1000315"  [label="AST: "];
"1000316" -> "1000318"  [label="CFG: "];
"1000317" -> "1000316"  [label="AST: "];
"1000318" -> "1000316"  [label="AST: "];
"1000321" -> "1000316"  [label="CFG: "];
"1000315" -> "1000316"  [label="CFG: "];
"1000316" -> "1000457"  [label="DDG: -ENOSPC"];
"1000316" -> "1000457"  [label="DDG: error"];
"1000316" -> "1000315"  [label="DDG: error"];
"1000316" -> "1000315"  [label="DDG: -ENOSPC"];
"1000318" -> "1000316"  [label="DDG: ENOSPC"];
"1000316" -> "1000455"  [label="DDG: error"];
"1000315" -> "1000314"  [label="AST: "];
"1000315" -> "1000320"  [label="CFG: "];
"1000320" -> "1000315"  [label="AST: "];
"1000329" -> "1000315"  [label="CFG: "];
"1000346" -> "1000315"  [label="CFG: "];
"1000315" -> "1000457"  [label="DDG: error == -ENOSPC && bytes > sdp->sd_sb.sb_bsize"];
"1000315" -> "1000457"  [label="DDG: error == -ENOSPC"];
"1000315" -> "1000457"  [label="DDG: bytes > sdp->sd_sb.sb_bsize"];
"1000320" -> "1000315"  [label="DDG: bytes"];
"1000320" -> "1000315"  [label="DDG: sdp->sd_sb.sb_bsize"];
"1000455" -> "1000106"  [label="AST: "];
"1000455" -> "1000456"  [label="CFG: "];
"1000456" -> "1000455"  [label="AST: "];
"1000457" -> "1000455"  [label="CFG: "];
"1000455" -> "1000457"  [label="DDG: <RET>"];
"1000456" -> "1000455"  [label="DDG: error"];
"1000285" -> "1000455"  [label="DDG: error"];
"1000250" -> "1000455"  [label="DDG: error"];
"1000409" -> "1000455"  [label="DDG: error"];
"1000280" -> "1000455"  [label="DDG: error"];
"1000394" -> "1000455"  [label="DDG: error"];
"1000350" -> "1000264"  [label="AST: "];
"1000350" -> "1000362"  [label="CFG: "];
"1000351" -> "1000350"  [label="AST: "];
"1000352" -> "1000350"  [label="AST: "];
"1000358" -> "1000350"  [label="AST: "];
"1000360" -> "1000350"  [label="AST: "];
"1000362" -> "1000350"  [label="AST: "];
"1000366" -> "1000350"  [label="CFG: "];
"1000350" -> "1000457"  [label="DDG: &max_bytes"];
"1000350" -> "1000457"  [label="DDG: calc_max_reserv(ip, (len > max_chunk_size)? max_chunk_size: len,\n\t\t\t\t&max_bytes, &data_blocks, &ind_blocks)"];
"1000350" -> "1000457"  [label="DDG: &data_blocks"];
"1000350" -> "1000457"  [label="DDG: &ind_blocks"];
"1000350" -> "1000457"  [label="DDG: (len > max_chunk_size)? max_chunk_size: len"];
"1000353" -> "1000350"  [label="DDG: max_chunk_size"];
"1000353" -> "1000350"  [label="DDG: len"];
"1000350" -> "1000383"  [label="DDG: ip"];
"1000383" -> "1000381"  [label="AST: "];
"1000383" -> "1000384"  [label="CFG: "];
"1000384" -> "1000383"  [label="AST: "];
"1000381" -> "1000383"  [label="CFG: "];
"1000383" -> "1000371"  [label="DDG: ip"];
"1000383" -> "1000373"  [label="DDG: ip"];
"1000383" -> "1000375"  [label="DDG: ip"];
"1000383" -> "1000377"  [label="DDG: ip"];
"1000383" -> "1000379"  [label="DDG: ip"];
"1000383" -> "1000381"  [label="DDG: ip"];
"1000383" -> "1000386"  [label="DDG: ip"];
"1000371" -> "1000264"  [label="AST: "];
"1000371" -> "1000373"  [label="CFG: "];
"1000372" -> "1000371"  [label="AST: "];
"1000373" -> "1000371"  [label="AST: "];
"1000387" -> "1000371"  [label="CFG: "];
"1000371" -> "1000457"  [label="DDG: RES_DINODE + ind_blocks + RES_STATFS + RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip)"];
"1000132" -> "1000371"  [label="DDG: ind_blocks"];
"1000371" -> "1000388"  [label="DDG: rblocks"];
"1000371" -> "1000396"  [label="DDG: rblocks"];
"1000388" -> "1000385"  [label="AST: "];
"1000388" -> "1000390"  [label="CFG: "];
"1000389" -> "1000388"  [label="AST: "];
"1000390" -> "1000388"  [label="AST: "];
"1000395" -> "1000388"  [label="CFG: "];
"1000388" -> "1000457"  [label="DDG: data_blocks ? data_blocks : 1"];
"1000388" -> "1000396"  [label="DDG: rblocks"];
"1000396" -> "1000394"  [label="AST: "];
"1000396" -> "1000399"  [label="CFG: "];
"1000397" -> "1000396"  [label="AST: "];
"1000398" -> "1000396"  [label="AST: "];
"1000399" -> "1000396"  [label="AST: "];
"1000394" -> "1000396"  [label="CFG: "];
"1000396" -> "1000457"  [label="DDG: sdp"];
"1000396" -> "1000457"  [label="DDG: rblocks"];
"1000396" -> "1000457"  [label="DDG: PAGE_CACHE_SIZE/sdp->sd_sb.sb_bsize"];
"1000396" -> "1000394"  [label="DDG: sdp"];
"1000396" -> "1000394"  [label="DDG: rblocks"];
"1000396" -> "1000394"  [label="DDG: PAGE_CACHE_SIZE/sdp->sd_sb.sb_bsize"];
"1000416" -> "1000396"  [label="DDG: sdp"];
"1000118" -> "1000396"  [label="DDG: sdp"];
"1000399" -> "1000396"  [label="DDG: PAGE_CACHE_SIZE"];
"1000399" -> "1000396"  [label="DDG: sdp->sd_sb.sb_bsize"];
"1000396" -> "1000416"  [label="DDG: sdp"];
"1000394" -> "1000264"  [label="AST: "];
"1000395" -> "1000394"  [label="AST: "];
"1000407" -> "1000394"  [label="CFG: "];
"1000394" -> "1000457"  [label="DDG: gfs2_trans_begin(sdp, rblocks,\n\t\t\t\t\t PAGE_CACHE_SIZE/sdp->sd_sb.sb_bsize)"];
"1000394" -> "1000457"  [label="DDG: error"];
"1000416" -> "1000264"  [label="AST: "];
"1000416" -> "1000417"  [label="CFG: "];
"1000417" -> "1000416"  [label="AST: "];
"1000419" -> "1000416"  [label="CFG: "];
"1000416" -> "1000457"  [label="DDG: gfs2_trans_end(sdp)"];
"1000416" -> "1000457"  [label="DDG: sdp"];
"1000373" -> "1000375"  [label="CFG: "];
"1000374" -> "1000373"  [label="AST: "];
"1000375" -> "1000373"  [label="AST: "];
"1000373" -> "1000457"  [label="DDG: ind_blocks + RES_STATFS + RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip)"];
"1000373" -> "1000457"  [label="DDG: RES_DINODE"];
"1000132" -> "1000373"  [label="DDG: ind_blocks"];
"1000375" -> "1000377"  [label="CFG: "];
"1000376" -> "1000375"  [label="AST: "];
"1000377" -> "1000375"  [label="AST: "];
"1000375" -> "1000457"  [label="DDG: ind_blocks"];
"1000375" -> "1000457"  [label="DDG: RES_STATFS + RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip)"];
"1000132" -> "1000375"  [label="DDG: ind_blocks"];
"1000377" -> "1000379"  [label="CFG: "];
"1000378" -> "1000377"  [label="AST: "];
"1000379" -> "1000377"  [label="AST: "];
"1000377" -> "1000457"  [label="DDG: RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip)"];
"1000377" -> "1000457"  [label="DDG: RES_STATFS"];
"1000379" -> "1000381"  [label="CFG: "];
"1000380" -> "1000379"  [label="AST: "];
"1000381" -> "1000379"  [label="AST: "];
"1000379" -> "1000457"  [label="DDG: RES_QUOTA"];
"1000379" -> "1000457"  [label="DDG: RES_RG_HDR + gfs2_rg_blocks(ip)"];
"1000382" -> "1000381"  [label="AST: "];
"1000381" -> "1000457"  [label="DDG: gfs2_rg_blocks(ip)"];
"1000381" -> "1000457"  [label="DDG: RES_RG_HDR"];
"1000386" -> "1000385"  [label="AST: "];
"1000386" -> "1000387"  [label="CFG: "];
"1000387" -> "1000386"  [label="AST: "];
"1000389" -> "1000386"  [label="CFG: "];
"1000395" -> "1000386"  [label="CFG: "];
"1000386" -> "1000457"  [label="DDG: gfs2_is_jdata(ip)"];
"1000386" -> "1000427"  [label="DDG: ip"];
"1000386" -> "1000435"  [label="DDG: ip"];
"1000427" -> "1000264"  [label="AST: "];
"1000427" -> "1000428"  [label="CFG: "];
"1000428" -> "1000427"  [label="AST: "];
"1000430" -> "1000427"  [label="CFG: "];
"1000427" -> "1000457"  [label="DDG: gfs2_inplace_release(ip)"];
"1000427" -> "1000429"  [label="DDG: ip"];
"1000429" -> "1000264"  [label="AST: "];
"1000429" -> "1000430"  [label="CFG: "];
"1000430" -> "1000429"  [label="AST: "];
"1000432" -> "1000429"  [label="CFG: "];
"1000429" -> "1000457"  [label="DDG: gfs2_quota_unlock(ip)"];
"1000429" -> "1000431"  [label="DDG: ip"];
"1000431" -> "1000264"  [label="AST: "];
"1000431" -> "1000432"  [label="CFG: "];
"1000432" -> "1000431"  [label="AST: "];
"1000262" -> "1000431"  [label="CFG: "];
"1000431" -> "1000457"  [label="DDG: ip"];
"1000431" -> "1000457"  [label="DDG: gfs2_alloc_put(ip)"];
"1000431" -> "1000274"  [label="DDG: ip"];
"1000274" -> "1000272"  [label="AST: "];
"1000274" -> "1000275"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000272" -> "1000274"  [label="CFG: "];
"1000274" -> "1000457"  [label="DDG: ip"];
"1000274" -> "1000272"  [label="DDG: ip"];
"1000274" -> "1000287"  [label="DDG: ip"];
"1000272" -> "1000264"  [label="AST: "];
"1000273" -> "1000272"  [label="AST: "];
"1000278" -> "1000272"  [label="CFG: "];
"1000272" -> "1000457"  [label="DDG: gfs2_alloc_get(ip)"];
"1000272" -> "1000277"  [label="DDG: al"];
"1000277" -> "1000276"  [label="AST: "];
"1000277" -> "1000278"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000281" -> "1000277"  [label="CFG: "];
"1000286" -> "1000277"  [label="CFG: "];
"1000277" -> "1000457"  [label="DDG: al"];
"1000277" -> "1000457"  [label="DDG: !al"];
"1000287" -> "1000285"  [label="AST: "];
"1000287" -> "1000288"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000285" -> "1000287"  [label="CFG: "];
"1000287" -> "1000285"  [label="DDG: ip"];
"1000287" -> "1000441"  [label="DDG: ip"];
"1000285" -> "1000264"  [label="AST: "];
"1000286" -> "1000285"  [label="AST: "];
"1000290" -> "1000285"  [label="CFG: "];
"1000285" -> "1000457"  [label="DDG: error"];
"1000285" -> "1000457"  [label="DDG: gfs2_quota_lock_check(ip)"];
"1000441" -> "1000106"  [label="AST: "];
"1000441" -> "1000442"  [label="CFG: "];
"1000442" -> "1000441"  [label="AST: "];
"1000443" -> "1000441"  [label="CFG: "];
"1000441" -> "1000457"  [label="DDG: ip"];
"1000441" -> "1000457"  [label="DDG: gfs2_alloc_put(ip)"];
"1000438" -> "1000441"  [label="DDG: ip"];
"1000435" -> "1000106"  [label="AST: "];
"1000435" -> "1000436"  [label="CFG: "];
"1000436" -> "1000435"  [label="AST: "];
"1000437" -> "1000435"  [label="CFG: "];
"1000435" -> "1000457"  [label="DDG: gfs2_inplace_release(ip)"];
"1000435" -> "1000438"  [label="DDG: ip"];
"1000438" -> "1000106"  [label="AST: "];
"1000438" -> "1000439"  [label="CFG: "];
"1000439" -> "1000438"  [label="AST: "];
"1000440" -> "1000438"  [label="CFG: "];
"1000438" -> "1000457"  [label="DDG: gfs2_quota_unlock(ip)"];
"1000320" -> "1000322"  [label="CFG: "];
"1000321" -> "1000320"  [label="AST: "];
"1000322" -> "1000320"  [label="AST: "];
"1000320" -> "1000457"  [label="DDG: sdp->sd_sb.sb_bsize"];
"1000320" -> "1000457"  [label="DDG: bytes"];
"1000399" -> "1000320"  [label="DDG: sdp->sd_sb.sb_bsize"];
"1000205" -> "1000320"  [label="DDG: sdp->sd_sb.sb_bsize"];
"1000320" -> "1000328"  [label="DDG: bytes"];
"1000320" -> "1000338"  [label="DDG: sdp->sd_sb.sb_bsize"];
"1000320" -> "1000399"  [label="DDG: sdp->sd_sb.sb_bsize"];
"1000328" -> "1000327"  [label="AST: "];
"1000328" -> "1000330"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000330" -> "1000328"  [label="AST: "];
"1000332" -> "1000328"  [label="CFG: "];
"1000328" -> "1000457"  [label="DDG: bytes >>= 1"];
"1000328" -> "1000331"  [label="DDG: bytes"];
"1000331" -> "1000327"  [label="AST: "];
"1000331" -> "1000333"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000333" -> "1000331"  [label="AST: "];
"1000336" -> "1000331"  [label="CFG: "];
"1000331" -> "1000457"  [label="DDG: bytes &= bsize_mask"];
"1000331" -> "1000457"  [label="DDG: bsize_mask"];
"1000218" -> "1000331"  [label="DDG: bsize_mask"];
"1000331" -> "1000335"  [label="DDG: bytes"];
"1000335" -> "1000334"  [label="AST: "];
"1000335" -> "1000337"  [label="CFG: "];
"1000336" -> "1000335"  [label="AST: "];
"1000337" -> "1000335"  [label="AST: "];
"1000339" -> "1000335"  [label="CFG: "];
"1000345" -> "1000335"  [label="CFG: "];
"1000335" -> "1000457"  [label="DDG: bytes == 0"];
"1000338" -> "1000334"  [label="AST: "];
"1000338" -> "1000340"  [label="CFG: "];
"1000339" -> "1000338"  [label="AST: "];
"1000340" -> "1000338"  [label="AST: "];
"1000345" -> "1000338"  [label="CFG: "];
"1000338" -> "1000457"  [label="DDG: sdp->sd_sb.sb_bsize"];
"1000399" -> "1000338"  [label="DDG: sdp->sd_sb.sb_bsize"];
"1000205" -> "1000338"  [label="DDG: sdp->sd_sb.sb_bsize"];
"1000399" -> "1000401"  [label="CFG: "];
"1000400" -> "1000399"  [label="AST: "];
"1000401" -> "1000399"  [label="AST: "];
"1000399" -> "1000457"  [label="DDG: sdp->sd_sb.sb_bsize"];
"1000399" -> "1000457"  [label="DDG: PAGE_CACHE_SIZE"];
"1000205" -> "1000399"  [label="DDG: sdp->sd_sb.sb_bsize"];
"1000347" -> "1000264"  [label="AST: "];
"1000347" -> "1000349"  [label="CFG: "];
"1000348" -> "1000347"  [label="AST: "];
"1000349" -> "1000347"  [label="AST: "];
"1000351" -> "1000347"  [label="CFG: "];
"1000347" -> "1000457"  [label="DDG: bytes"];
"1000347" -> "1000457"  [label="DDG: max_bytes"];
"1000347" -> "1000411"  [label="DDG: max_bytes"];
"1000411" -> "1000409"  [label="AST: "];
"1000411" -> "1000415"  [label="CFG: "];
"1000412" -> "1000411"  [label="AST: "];
"1000413" -> "1000411"  [label="AST: "];
"1000414" -> "1000411"  [label="AST: "];
"1000415" -> "1000411"  [label="AST: "];
"1000409" -> "1000411"  [label="CFG: "];
"1000411" -> "1000457"  [label="DDG: inode"];
"1000411" -> "1000457"  [label="DDG: max_bytes"];
"1000411" -> "1000457"  [label="DDG: offset"];
"1000411" -> "1000457"  [label="DDG: mode"];
"1000411" -> "1000409"  [label="DDG: inode"];
"1000411" -> "1000409"  [label="DDG: offset"];
"1000411" -> "1000409"  [label="DDG: max_bytes"];
"1000411" -> "1000409"  [label="DDG: mode"];
"1000125" -> "1000411"  [label="DDG: inode"];
"1000424" -> "1000411"  [label="DDG: offset"];
"1000185" -> "1000411"  [label="DDG: mode"];
"1000103" -> "1000411"  [label="DDG: mode"];
"1000411" -> "1000421"  [label="DDG: max_bytes"];
"1000411" -> "1000424"  [label="DDG: max_bytes"];
"1000411" -> "1000424"  [label="DDG: offset"];
"1000409" -> "1000264"  [label="AST: "];
"1000410" -> "1000409"  [label="AST: "];
"1000417" -> "1000409"  [label="CFG: "];
"1000409" -> "1000457"  [label="DDG: fallocate_chunk(inode, offset, max_bytes, mode)"];
"1000409" -> "1000457"  [label="DDG: error"];
"1000421" -> "1000264"  [label="AST: "];
"1000421" -> "1000423"  [label="CFG: "];
"1000422" -> "1000421"  [label="AST: "];
"1000423" -> "1000421"  [label="AST: "];
"1000425" -> "1000421"  [label="CFG: "];
"1000353" -> "1000421"  [label="DDG: len"];
"1000424" -> "1000264"  [label="AST: "];
"1000424" -> "1000426"  [label="CFG: "];
"1000425" -> "1000424"  [label="AST: "];
"1000426" -> "1000424"  [label="AST: "];
"1000428" -> "1000424"  [label="CFG: "];
"1000424" -> "1000457"  [label="DDG: max_bytes"];
"1000424" -> "1000457"  [label="DDG: offset"];
"1000353" -> "1000352"  [label="AST: "];
"1000353" -> "1000355"  [label="CFG: "];
"1000354" -> "1000353"  [label="AST: "];
"1000355" -> "1000353"  [label="AST: "];
"1000356" -> "1000353"  [label="CFG: "];
"1000357" -> "1000353"  [label="CFG: "];
"1000168" -> "1000353"  [label="DDG: max_chunk_size"];
"1000353" -> "1000352"  [label="DDG: max_chunk_size"];
"1000353" -> "1000352"  [label="DDG: len"];
"1000352" -> "1000356"  [label="CFG: "];
"1000352" -> "1000357"  [label="CFG: "];
"1000356" -> "1000352"  [label="AST: "];
"1000357" -> "1000352"  [label="AST: "];
"1000359" -> "1000352"  [label="CFG: "];
"1000352" -> "1000457"  [label="DDG: max_chunk_size"];
"1000352" -> "1000457"  [label="DDG: len"];
"1000352" -> "1000457"  [label="DDG: len > max_chunk_size"];
"1000176" -> "1000178"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000178" -> "1000176"  [label="AST: "];
"1000181" -> "1000176"  [label="CFG: "];
}
