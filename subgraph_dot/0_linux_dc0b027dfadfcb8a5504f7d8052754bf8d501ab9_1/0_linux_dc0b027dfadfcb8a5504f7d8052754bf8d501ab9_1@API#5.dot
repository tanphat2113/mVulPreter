digraph "0_linux_dc0b027dfadfcb8a5504f7d8052754bf8d501ab9_1@API" {
"1000197" [label="(Call,status = _nfs4_proc_open(opendata))"];
"1000199" [label="(Call,_nfs4_proc_open(opendata))"];
"1000174" [label="(Call,opendata == NULL)"];
"1000165" [label="(Call,opendata = nfs4_opendata_alloc(path, sp, fmode, flags, sattr))"];
"1000167" [label="(Call,nfs4_opendata_alloc(path, sp, fmode, flags, sattr))"];
"1000103" [label="(MethodParameterIn,struct path *path)"];
"1000128" [label="(Call,sp = nfs4_get_state_owner(server, cred))"];
"1000130" [label="(Call,nfs4_get_state_owner(server, cred))"];
"1000116" [label="(Call,*server = NFS_SERVER(dir))"];
"1000118" [label="(Call,NFS_SERVER(dir))"];
"1000102" [label="(MethodParameterIn,struct inode *dir)"];
"1000107" [label="(MethodParameterIn,struct rpc_cred *cred)"];
"1000154" [label="(Call,nfs4_return_incompatible_delegation(path->dentry->d_inode, fmode))"];
"1000147" [label="(Call,path->dentry->d_inode != NULL)"];
"1000104" [label="(MethodParameterIn,fmode_t fmode)"];
"1000105" [label="(MethodParameterIn,int flags)"];
"1000106" [label="(MethodParameterIn,struct iattr *sattr)"];
"1000202" [label="(Call,status != 0)"];
"1000250" [label="(Return,return status;)"];
"1000173" [label="(ControlStructure,if (opendata == NULL))"];
"1000116" [label="(Call,*server = NFS_SERVER(dir))"];
"1000190" [label="(Call,nfs4_get_open_state(path->dentry->d_inode, sp))"];
"1000204" [label="(Literal,0)"];
"1000161" [label="(Call,status = -ENOMEM)"];
"1000177" [label="(ControlStructure,goto err_put_state_owner;)"];
"1000128" [label="(Call,sp = nfs4_get_state_owner(server, cred))"];
"1000168" [label="(Identifier,path)"];
"1000200" [label="(Identifier,opendata)"];
"1000252" [label="(MethodReturn,static int)"];
"1000118" [label="(Call,NFS_SERVER(dir))"];
"1000123" [label="(Identifier,status)"];
"1000210" [label="(Identifier,opendata)"];
"1000203" [label="(Identifier,status)"];
"1000155" [label="(Call,path->dentry->d_inode)"];
"1000166" [label="(Identifier,opendata)"];
"1000182" [label="(Identifier,path)"];
"1000174" [label="(Call,opendata == NULL)"];
"1000119" [label="(Identifier,dir)"];
"1000198" [label="(Identifier,status)"];
"1000142" [label="(Call,status != 0)"];
"1000251" [label="(Identifier,status)"];
"1000105" [label="(MethodParameterIn,int flags)"];
"1000162" [label="(Identifier,status)"];
"1000219" [label="(Call,nfs4_opendata_to_nfs4_state(opendata))"];
"1000250" [label="(Return,return status;)"];
"1000240" [label="(Call,nfs4_opendata_put(opendata))"];
"1000171" [label="(Identifier,flags)"];
"1000129" [label="(Identifier,sp)"];
"1000214" [label="(Call,nfs4_exclusive_attrset(opendata, sattr))"];
"1000157" [label="(Identifier,path)"];
"1000127" [label="(Call,!(sp = nfs4_get_state_owner(server, cred)))"];
"1000197" [label="(Call,status = _nfs4_proc_open(opendata))"];
"1000130" [label="(Call,nfs4_get_state_owner(server, cred))"];
"1000205" [label="(ControlStructure,goto err_opendata_put;)"];
"1000201" [label="(ControlStructure,if (status != 0))"];
"1000117" [label="(Identifier,server)"];
"1000176" [label="(Identifier,NULL)"];
"1000107" [label="(MethodParameterIn,struct rpc_cred *cred)"];
"1000170" [label="(Identifier,fmode)"];
"1000103" [label="(MethodParameterIn,struct path *path)"];
"1000146" [label="(ControlStructure,if (path->dentry->d_inode != NULL))"];
"1000106" [label="(MethodParameterIn,struct iattr *sattr)"];
"1000231" [label="(Call,nfs4_put_state_owner(sp))"];
"1000139" [label="(Call,nfs4_recover_expired_lease(server))"];
"1000221" [label="(Call,status = PTR_ERR(state))"];
"1000175" [label="(Identifier,opendata)"];
"1000148" [label="(Call,path->dentry->d_inode)"];
"1000102" [label="(MethodParameterIn,struct inode *dir)"];
"1000153" [label="(Identifier,NULL)"];
"1000109" [label="(Block,)"];
"1000243" [label="(Call,nfs4_put_state_owner(sp))"];
"1000132" [label="(Identifier,cred)"];
"1000154" [label="(Call,nfs4_return_incompatible_delegation(path->dentry->d_inode, fmode))"];
"1000122" [label="(Call,status = -ENOMEM)"];
"1000172" [label="(Identifier,sattr)"];
"1000147" [label="(Call,path->dentry->d_inode != NULL)"];
"1000179" [label="(Call,path->dentry->d_inode != NULL)"];
"1000246" [label="(Call,*res = NULL)"];
"1000202" [label="(Call,status != 0)"];
"1000131" [label="(Identifier,server)"];
"1000167" [label="(Call,nfs4_opendata_alloc(path, sp, fmode, flags, sattr))"];
"1000104" [label="(MethodParameterIn,fmode_t fmode)"];
"1000160" [label="(Identifier,fmode)"];
"1000199" [label="(Call,_nfs4_proc_open(opendata))"];
"1000169" [label="(Identifier,sp)"];
"1000165" [label="(Call,opendata = nfs4_opendata_alloc(path, sp, fmode, flags, sattr))"];
"1000197" -> "1000109"  [label="AST: "];
"1000197" -> "1000199"  [label="CFG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000199" -> "1000197"  [label="AST: "];
"1000203" -> "1000197"  [label="CFG: "];
"1000197" -> "1000252"  [label="DDG: _nfs4_proc_open(opendata)"];
"1000199" -> "1000197"  [label="DDG: opendata"];
"1000197" -> "1000202"  [label="DDG: status"];
"1000199" -> "1000200"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000174" -> "1000199"  [label="DDG: opendata"];
"1000199" -> "1000214"  [label="DDG: opendata"];
"1000199" -> "1000219"  [label="DDG: opendata"];
"1000199" -> "1000240"  [label="DDG: opendata"];
"1000174" -> "1000173"  [label="AST: "];
"1000174" -> "1000176"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000176" -> "1000174"  [label="AST: "];
"1000177" -> "1000174"  [label="CFG: "];
"1000182" -> "1000174"  [label="CFG: "];
"1000174" -> "1000252"  [label="DDG: opendata == NULL"];
"1000174" -> "1000252"  [label="DDG: opendata"];
"1000165" -> "1000174"  [label="DDG: opendata"];
"1000147" -> "1000174"  [label="DDG: NULL"];
"1000174" -> "1000179"  [label="DDG: NULL"];
"1000174" -> "1000246"  [label="DDG: NULL"];
"1000165" -> "1000109"  [label="AST: "];
"1000165" -> "1000167"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000167" -> "1000165"  [label="AST: "];
"1000175" -> "1000165"  [label="CFG: "];
"1000165" -> "1000252"  [label="DDG: nfs4_opendata_alloc(path, sp, fmode, flags, sattr)"];
"1000167" -> "1000165"  [label="DDG: path"];
"1000167" -> "1000165"  [label="DDG: sattr"];
"1000167" -> "1000165"  [label="DDG: fmode"];
"1000167" -> "1000165"  [label="DDG: sp"];
"1000167" -> "1000165"  [label="DDG: flags"];
"1000167" -> "1000172"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000169" -> "1000167"  [label="AST: "];
"1000170" -> "1000167"  [label="AST: "];
"1000171" -> "1000167"  [label="AST: "];
"1000172" -> "1000167"  [label="AST: "];
"1000167" -> "1000252"  [label="DDG: path"];
"1000167" -> "1000252"  [label="DDG: sattr"];
"1000167" -> "1000252"  [label="DDG: flags"];
"1000167" -> "1000252"  [label="DDG: fmode"];
"1000103" -> "1000167"  [label="DDG: path"];
"1000128" -> "1000167"  [label="DDG: sp"];
"1000154" -> "1000167"  [label="DDG: fmode"];
"1000104" -> "1000167"  [label="DDG: fmode"];
"1000105" -> "1000167"  [label="DDG: flags"];
"1000106" -> "1000167"  [label="DDG: sattr"];
"1000167" -> "1000190"  [label="DDG: sp"];
"1000167" -> "1000214"  [label="DDG: sattr"];
"1000167" -> "1000231"  [label="DDG: sp"];
"1000167" -> "1000243"  [label="DDG: sp"];
"1000103" -> "1000101"  [label="AST: "];
"1000103" -> "1000252"  [label="DDG: path"];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000130"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000128"  [label="AST: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000252"  [label="DDG: nfs4_get_state_owner(server, cred)"];
"1000128" -> "1000252"  [label="DDG: sp"];
"1000128" -> "1000127"  [label="DDG: sp"];
"1000130" -> "1000128"  [label="DDG: server"];
"1000130" -> "1000128"  [label="DDG: cred"];
"1000128" -> "1000243"  [label="DDG: sp"];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000130" -> "1000252"  [label="DDG: cred"];
"1000130" -> "1000252"  [label="DDG: server"];
"1000130" -> "1000127"  [label="DDG: server"];
"1000130" -> "1000127"  [label="DDG: cred"];
"1000116" -> "1000130"  [label="DDG: server"];
"1000107" -> "1000130"  [label="DDG: cred"];
"1000130" -> "1000139"  [label="DDG: server"];
"1000116" -> "1000109"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000123" -> "1000116"  [label="CFG: "];
"1000116" -> "1000252"  [label="DDG: NFS_SERVER(dir)"];
"1000118" -> "1000116"  [label="DDG: dir"];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000118" -> "1000252"  [label="DDG: dir"];
"1000102" -> "1000118"  [label="DDG: dir"];
"1000102" -> "1000101"  [label="AST: "];
"1000102" -> "1000252"  [label="DDG: dir"];
"1000107" -> "1000101"  [label="AST: "];
"1000107" -> "1000252"  [label="DDG: cred"];
"1000154" -> "1000146"  [label="AST: "];
"1000154" -> "1000160"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000160" -> "1000154"  [label="AST: "];
"1000162" -> "1000154"  [label="CFG: "];
"1000154" -> "1000252"  [label="DDG: nfs4_return_incompatible_delegation(path->dentry->d_inode, fmode)"];
"1000154" -> "1000252"  [label="DDG: path->dentry->d_inode"];
"1000147" -> "1000154"  [label="DDG: path->dentry->d_inode"];
"1000104" -> "1000154"  [label="DDG: fmode"];
"1000154" -> "1000179"  [label="DDG: path->dentry->d_inode"];
"1000147" -> "1000146"  [label="AST: "];
"1000147" -> "1000153"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000153" -> "1000147"  [label="AST: "];
"1000157" -> "1000147"  [label="CFG: "];
"1000162" -> "1000147"  [label="CFG: "];
"1000147" -> "1000252"  [label="DDG: path->dentry->d_inode"];
"1000147" -> "1000252"  [label="DDG: path->dentry->d_inode != NULL"];
"1000147" -> "1000179"  [label="DDG: path->dentry->d_inode"];
"1000104" -> "1000101"  [label="AST: "];
"1000104" -> "1000252"  [label="DDG: fmode"];
"1000105" -> "1000101"  [label="AST: "];
"1000105" -> "1000252"  [label="DDG: flags"];
"1000106" -> "1000101"  [label="AST: "];
"1000106" -> "1000252"  [label="DDG: sattr"];
"1000106" -> "1000214"  [label="DDG: sattr"];
"1000202" -> "1000201"  [label="AST: "];
"1000202" -> "1000204"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000205" -> "1000202"  [label="CFG: "];
"1000210" -> "1000202"  [label="CFG: "];
"1000202" -> "1000252"  [label="DDG: status"];
"1000202" -> "1000252"  [label="DDG: status != 0"];
"1000202" -> "1000250"  [label="DDG: status"];
"1000250" -> "1000109"  [label="AST: "];
"1000250" -> "1000251"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000252" -> "1000250"  [label="CFG: "];
"1000250" -> "1000252"  [label="DDG: <RET>"];
"1000251" -> "1000250"  [label="DDG: status"];
"1000122" -> "1000250"  [label="DDG: status"];
"1000221" -> "1000250"  [label="DDG: status"];
"1000142" -> "1000250"  [label="DDG: status"];
"1000161" -> "1000250"  [label="DDG: status"];
}
