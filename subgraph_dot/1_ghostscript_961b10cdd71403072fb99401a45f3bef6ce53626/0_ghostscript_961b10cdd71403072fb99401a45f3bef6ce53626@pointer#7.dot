digraph "0_ghostscript_961b10cdd71403072fb99401a45f3bef6ce53626@pointer" {
"1000763" [label="(Call,u32(&table[16 + (Group * 12) + 4]))"];
"1000761" [label="(Call,endCharCode = u32(&table[16 + (Group * 12) + 4]))"];
"1000797" [label="(Call,endCharCode - startCharCode)"];
"1000793" [label="(Call,code <= (startGlyphCode + (endCharCode - startCharCode)))"];
"1000790" [label="(Call,code >= startGlyphCode)"];
"1000789" [label="(Call,code >= startGlyphCode && code <= (startGlyphCode + (endCharCode - startCharCode)))"];
"1000795" [label="(Call,startGlyphCode + (endCharCode - startCharCode))"];
"1000802" [label="(Call,startGlyphCode + (code - startCharCode))"];
"1000801" [label="(Return,return startGlyphCode + (code - startCharCode);)"];
"1000804" [label="(Call,code - startCharCode)"];
"1000801" [label="(Return,return startGlyphCode + (code - startCharCode);)"];
"1000792" [label="(Identifier,startGlyphCode)"];
"1000802" [label="(Call,startGlyphCode + (code - startCharCode))"];
"1000746" [label="(Identifier,Group)"];
"1000775" [label="(Call,startGlyphCode = u32(&table[16 + (Group * 12) + 8]))"];
"1000800" [label="(Block,)"];
"1000793" [label="(Call,code <= (startGlyphCode + (endCharCode - startCharCode)))"];
"1000788" [label="(ControlStructure,if (code >= startGlyphCode && code <= (startGlyphCode + (endCharCode - startCharCode))))"];
"1000790" [label="(Call,code >= startGlyphCode)"];
"1000763" [label="(Call,u32(&table[16 + (Group * 12) + 4]))"];
"1000805" [label="(Identifier,code)"];
"1000764" [label="(Call,&table[16 + (Group * 12) + 4])"];
"1000789" [label="(Call,code >= startGlyphCode && code <= (startGlyphCode + (endCharCode - startCharCode)))"];
"1000799" [label="(Identifier,startCharCode)"];
"1000803" [label="(Identifier,startGlyphCode)"];
"1000795" [label="(Call,startGlyphCode + (endCharCode - startCharCode))"];
"1000798" [label="(Identifier,endCharCode)"];
"1000797" [label="(Call,endCharCode - startCharCode)"];
"1000794" [label="(Identifier,code)"];
"1000806" [label="(Identifier,startCharCode)"];
"1000818" [label="(MethodReturn,RET)"];
"1000749" [label="(Call,startCharCode = u32(&table[16 + (Group * 12)]))"];
"1000762" [label="(Identifier,endCharCode)"];
"1000761" [label="(Call,endCharCode = u32(&table[16 + (Group * 12) + 4]))"];
"1000776" [label="(Identifier,startGlyphCode)"];
"1000796" [label="(Identifier,startGlyphCode)"];
"1000804" [label="(Call,code - startCharCode)"];
"1000791" [label="(Identifier,code)"];
"1000747" [label="(Block,)"];
"1000763" -> "1000761"  [label="AST: "];
"1000763" -> "1000764"  [label="CFG: "];
"1000764" -> "1000763"  [label="AST: "];
"1000761" -> "1000763"  [label="CFG: "];
"1000763" -> "1000818"  [label="DDG: &table[16 + (Group * 12) + 4]"];
"1000763" -> "1000761"  [label="DDG: &table[16 + (Group * 12) + 4]"];
"1000761" -> "1000747"  [label="AST: "];
"1000762" -> "1000761"  [label="AST: "];
"1000776" -> "1000761"  [label="CFG: "];
"1000761" -> "1000818"  [label="DDG: endCharCode"];
"1000761" -> "1000818"  [label="DDG: u32(&table[16 + (Group * 12) + 4])"];
"1000761" -> "1000797"  [label="DDG: endCharCode"];
"1000797" -> "1000795"  [label="AST: "];
"1000797" -> "1000799"  [label="CFG: "];
"1000798" -> "1000797"  [label="AST: "];
"1000799" -> "1000797"  [label="AST: "];
"1000795" -> "1000797"  [label="CFG: "];
"1000797" -> "1000818"  [label="DDG: startCharCode"];
"1000797" -> "1000818"  [label="DDG: endCharCode"];
"1000797" -> "1000793"  [label="DDG: endCharCode"];
"1000797" -> "1000793"  [label="DDG: startCharCode"];
"1000797" -> "1000795"  [label="DDG: endCharCode"];
"1000797" -> "1000795"  [label="DDG: startCharCode"];
"1000749" -> "1000797"  [label="DDG: startCharCode"];
"1000797" -> "1000804"  [label="DDG: startCharCode"];
"1000793" -> "1000789"  [label="AST: "];
"1000793" -> "1000795"  [label="CFG: "];
"1000794" -> "1000793"  [label="AST: "];
"1000795" -> "1000793"  [label="AST: "];
"1000789" -> "1000793"  [label="CFG: "];
"1000793" -> "1000818"  [label="DDG: startGlyphCode + (endCharCode - startCharCode)"];
"1000793" -> "1000818"  [label="DDG: code"];
"1000793" -> "1000790"  [label="DDG: code"];
"1000793" -> "1000789"  [label="DDG: code"];
"1000793" -> "1000789"  [label="DDG: startGlyphCode + (endCharCode - startCharCode)"];
"1000790" -> "1000793"  [label="DDG: code"];
"1000790" -> "1000793"  [label="DDG: startGlyphCode"];
"1000793" -> "1000804"  [label="DDG: code"];
"1000790" -> "1000789"  [label="AST: "];
"1000790" -> "1000792"  [label="CFG: "];
"1000791" -> "1000790"  [label="AST: "];
"1000792" -> "1000790"  [label="AST: "];
"1000794" -> "1000790"  [label="CFG: "];
"1000789" -> "1000790"  [label="CFG: "];
"1000790" -> "1000818"  [label="DDG: startGlyphCode"];
"1000790" -> "1000818"  [label="DDG: code"];
"1000790" -> "1000789"  [label="DDG: code"];
"1000790" -> "1000789"  [label="DDG: startGlyphCode"];
"1000775" -> "1000790"  [label="DDG: startGlyphCode"];
"1000790" -> "1000795"  [label="DDG: startGlyphCode"];
"1000790" -> "1000802"  [label="DDG: startGlyphCode"];
"1000790" -> "1000804"  [label="DDG: code"];
"1000789" -> "1000788"  [label="AST: "];
"1000803" -> "1000789"  [label="CFG: "];
"1000746" -> "1000789"  [label="CFG: "];
"1000789" -> "1000818"  [label="DDG: code >= startGlyphCode && code <= (startGlyphCode + (endCharCode - startCharCode))"];
"1000789" -> "1000818"  [label="DDG: code <= (startGlyphCode + (endCharCode - startCharCode))"];
"1000789" -> "1000818"  [label="DDG: code >= startGlyphCode"];
"1000796" -> "1000795"  [label="AST: "];
"1000795" -> "1000818"  [label="DDG: startGlyphCode"];
"1000795" -> "1000818"  [label="DDG: endCharCode - startCharCode"];
"1000802" -> "1000801"  [label="AST: "];
"1000802" -> "1000804"  [label="CFG: "];
"1000803" -> "1000802"  [label="AST: "];
"1000804" -> "1000802"  [label="AST: "];
"1000801" -> "1000802"  [label="CFG: "];
"1000802" -> "1000818"  [label="DDG: startGlyphCode"];
"1000802" -> "1000818"  [label="DDG: startGlyphCode + (code - startCharCode)"];
"1000802" -> "1000818"  [label="DDG: code - startCharCode"];
"1000802" -> "1000801"  [label="DDG: startGlyphCode + (code - startCharCode)"];
"1000804" -> "1000802"  [label="DDG: code"];
"1000804" -> "1000802"  [label="DDG: startCharCode"];
"1000801" -> "1000800"  [label="AST: "];
"1000818" -> "1000801"  [label="CFG: "];
"1000801" -> "1000818"  [label="DDG: <RET>"];
"1000804" -> "1000806"  [label="CFG: "];
"1000805" -> "1000804"  [label="AST: "];
"1000806" -> "1000804"  [label="AST: "];
"1000804" -> "1000818"  [label="DDG: code"];
"1000804" -> "1000818"  [label="DDG: startCharCode"];
"1000749" -> "1000804"  [label="DDG: startCharCode"];
}
