digraph "0_linux_759c01142a5d0f364a462346168a56de28a80f52@pointer" {
"1000132" [label="(Call,pipe->bufs = kzalloc(sizeof(struct pipe_buffer) * pipe_bufs, GFP_KERNEL))"];
"1000136" [label="(Call,kzalloc(sizeof(struct pipe_buffer) * pipe_bufs, GFP_KERNEL))"];
"1000137" [label="(Call,sizeof(struct pipe_buffer) * pipe_bufs)"];
"1000129" [label="(Call,pipe_bufs = 1)"];
"1000114" [label="(Call,pipe_bufs = PIPE_DEF_BUFFERS)"];
"1000106" [label="(Call,kzalloc(sizeof(struct pipe_inode_info), GFP_KERNEL))"];
"1000130" [label="(Identifier,pipe_bufs)"];
"1000131" [label="(Literal,1)"];
"1000140" [label="(Identifier,pipe_bufs)"];
"1000115" [label="(Identifier,pipe_bufs)"];
"1000119" [label="(Identifier,user)"];
"1000161" [label="(Call,pipe->buffers = pipe_bufs)"];
"1000137" [label="(Call,sizeof(struct pipe_buffer) * pipe_bufs)"];
"1000144" [label="(Identifier,pipe)"];
"1000136" [label="(Call,kzalloc(sizeof(struct pipe_buffer) * pipe_bufs, GFP_KERNEL))"];
"1000114" [label="(Call,pipe_bufs = PIPE_DEF_BUFFERS)"];
"1000126" [label="(ControlStructure,if (too_many_pipe_buffers_soft(user)))"];
"1000134" [label="(Identifier,pipe)"];
"1000116" [label="(Identifier,PIPE_DEF_BUFFERS)"];
"1000125" [label="(Block,)"];
"1000138" [label="(Call,sizeof(struct pipe_buffer))"];
"1000132" [label="(Call,pipe->bufs = kzalloc(sizeof(struct pipe_buffer) * pipe_bufs, GFP_KERNEL))"];
"1000109" [label="(Identifier,GFP_KERNEL)"];
"1000188" [label="(MethodReturn,struct pipe_inode_info *)"];
"1000112" [label="(Block,)"];
"1000106" [label="(Call,kzalloc(sizeof(struct pipe_inode_info), GFP_KERNEL))"];
"1000171" [label="(Call,account_pipe_buffers(pipe, 0, pipe_bufs))"];
"1000141" [label="(Identifier,GFP_KERNEL)"];
"1000107" [label="(Call,sizeof(struct pipe_inode_info))"];
"1000129" [label="(Call,pipe_bufs = 1)"];
"1000133" [label="(Call,pipe->bufs)"];
"1000104" [label="(Call,pipe = kzalloc(sizeof(struct pipe_inode_info), GFP_KERNEL))"];
"1000132" -> "1000125"  [label="AST: "];
"1000132" -> "1000136"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000136" -> "1000132"  [label="AST: "];
"1000144" -> "1000132"  [label="CFG: "];
"1000132" -> "1000188"  [label="DDG: pipe->bufs"];
"1000132" -> "1000188"  [label="DDG: kzalloc(sizeof(struct pipe_buffer) * pipe_bufs, GFP_KERNEL)"];
"1000136" -> "1000132"  [label="DDG: sizeof(struct pipe_buffer) * pipe_bufs"];
"1000136" -> "1000132"  [label="DDG: GFP_KERNEL"];
"1000136" -> "1000141"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000141" -> "1000136"  [label="AST: "];
"1000136" -> "1000188"  [label="DDG: GFP_KERNEL"];
"1000136" -> "1000188"  [label="DDG: sizeof(struct pipe_buffer) * pipe_bufs"];
"1000137" -> "1000136"  [label="DDG: pipe_bufs"];
"1000106" -> "1000136"  [label="DDG: GFP_KERNEL"];
"1000137" -> "1000140"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000140" -> "1000137"  [label="AST: "];
"1000141" -> "1000137"  [label="CFG: "];
"1000137" -> "1000188"  [label="DDG: pipe_bufs"];
"1000129" -> "1000137"  [label="DDG: pipe_bufs"];
"1000114" -> "1000137"  [label="DDG: pipe_bufs"];
"1000137" -> "1000161"  [label="DDG: pipe_bufs"];
"1000137" -> "1000171"  [label="DDG: pipe_bufs"];
"1000129" -> "1000126"  [label="AST: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000129"  [label="AST: "];
"1000134" -> "1000129"  [label="CFG: "];
"1000114" -> "1000112"  [label="AST: "];
"1000114" -> "1000116"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000119" -> "1000114"  [label="CFG: "];
"1000114" -> "1000188"  [label="DDG: pipe_bufs"];
"1000114" -> "1000188"  [label="DDG: PIPE_DEF_BUFFERS"];
"1000114" -> "1000161"  [label="DDG: pipe_bufs"];
"1000114" -> "1000171"  [label="DDG: pipe_bufs"];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000109"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000109" -> "1000106"  [label="AST: "];
"1000104" -> "1000106"  [label="CFG: "];
"1000106" -> "1000188"  [label="DDG: GFP_KERNEL"];
"1000106" -> "1000104"  [label="DDG: GFP_KERNEL"];
}
