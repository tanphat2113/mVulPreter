digraph "0_linux_afca6c5b2595fc44383919fba740c194b0b76aff_0@API" {
"1000134" [label="(Call,error = xfs_iread(mp, tp, ip, flags))"];
"1000136" [label="(Call,xfs_iread(mp, tp, ip, flags))"];
"1000125" [label="(Call,xfs_inode_alloc(mp, ino))"];
"1000119" [label="(Call,XFS_INO_TO_AGINO(mp, ino))"];
"1000106" [label="(MethodParameterIn,struct xfs_mount\t*mp)"];
"1000109" [label="(MethodParameterIn,xfs_ino_t\t\tino)"];
"1000108" [label="(MethodParameterIn,xfs_trans_t\t\t*tp)"];
"1000129" [label="(Call,!ip)"];
"1000123" [label="(Call,ip = xfs_inode_alloc(mp, ino))"];
"1000111" [label="(MethodParameterIn,int\t\t\tflags)"];
"1000317" [label="(Return,return error;)"];
"1000135" [label="(Identifier,error)"];
"1000119" [label="(Call,XFS_INO_TO_AGINO(mp, ino))"];
"1000157" [label="(Call,flags & XFS_IGET_CREATE)"];
"1000138" [label="(Identifier,tp)"];
"1000129" [label="(Call,!ip)"];
"1000128" [label="(ControlStructure,if (!ip))"];
"1000146" [label="(Call,xfs_inode_verify_forks(ip))"];
"1000111" [label="(MethodParameterIn,int\t\t\tflags)"];
"1000191" [label="(Call,error = -EFSCORRUPTED)"];
"1000187" [label="(Call,xfs_warn(mp,\n\"Corruption detected! Free inode 0x%llx has blocks allocated!\",\n\t\t\t\tino))"];
"1000142" [label="(Identifier,error)"];
"1000127" [label="(Identifier,ino)"];
"1000279" [label="(Call,XFS_STATS_INC(mp, xs_ig_dup))"];
"1000317" [label="(Return,return error;)"];
"1000130" [label="(Identifier,ip)"];
"1000108" [label="(MethodParameterIn,xfs_trans_t\t\t*tp)"];
"1000232" [label="(Call,flags & XFS_IGET_DONTCACHE)"];
"1000169" [label="(Call,xfs_warn(mp,\n\"Corruption detected! Free inode 0x%llx not marked free on disk\",\n\t\t\t\tino))"];
"1000214" [label="(Call,error = -EAGAIN)"];
"1000136" [label="(Call,xfs_iread(mp, tp, ip, flags))"];
"1000109" [label="(MethodParameterIn,xfs_ino_t\t\tino)"];
"1000125" [label="(Call,xfs_inode_alloc(mp, ino))"];
"1000140" [label="(Identifier,flags)"];
"1000205" [label="(Call,error = -ENOENT)"];
"1000134" [label="(Call,error = xfs_iread(mp, tp, ip, flags))"];
"1000318" [label="(Identifier,error)"];
"1000282" [label="(Call,error = -EAGAIN)"];
"1000149" [label="(Call,error = -EFSCORRUPTED)"];
"1000121" [label="(Identifier,ino)"];
"1000133" [label="(Identifier,ENOMEM)"];
"1000113" [label="(Block,)"];
"1000173" [label="(Call,error = -EFSCORRUPTED)"];
"1000313" [label="(Call,VFS_I(ip))"];
"1000126" [label="(Identifier,mp)"];
"1000319" [label="(MethodReturn,RET)"];
"1000139" [label="(Identifier,ip)"];
"1000120" [label="(Identifier,mp)"];
"1000106" [label="(MethodParameterIn,struct xfs_mount\t*mp)"];
"1000137" [label="(Identifier,mp)"];
"1000123" [label="(Call,ip = xfs_inode_alloc(mp, ino))"];
"1000124" [label="(Identifier,ip)"];
"1000117" [label="(Call,agino = XFS_INO_TO_AGINO(mp, ino))"];
"1000134" -> "1000113"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000142" -> "1000134"  [label="CFG: "];
"1000134" -> "1000319"  [label="DDG: error"];
"1000134" -> "1000319"  [label="DDG: xfs_iread(mp, tp, ip, flags)"];
"1000136" -> "1000134"  [label="DDG: mp"];
"1000136" -> "1000134"  [label="DDG: tp"];
"1000136" -> "1000134"  [label="DDG: ip"];
"1000136" -> "1000134"  [label="DDG: flags"];
"1000134" -> "1000317"  [label="DDG: error"];
"1000136" -> "1000140"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000139" -> "1000136"  [label="AST: "];
"1000140" -> "1000136"  [label="AST: "];
"1000136" -> "1000319"  [label="DDG: flags"];
"1000136" -> "1000319"  [label="DDG: tp"];
"1000136" -> "1000319"  [label="DDG: mp"];
"1000125" -> "1000136"  [label="DDG: mp"];
"1000106" -> "1000136"  [label="DDG: mp"];
"1000108" -> "1000136"  [label="DDG: tp"];
"1000129" -> "1000136"  [label="DDG: ip"];
"1000111" -> "1000136"  [label="DDG: flags"];
"1000136" -> "1000146"  [label="DDG: ip"];
"1000136" -> "1000157"  [label="DDG: flags"];
"1000136" -> "1000169"  [label="DDG: mp"];
"1000136" -> "1000187"  [label="DDG: mp"];
"1000136" -> "1000279"  [label="DDG: mp"];
"1000136" -> "1000313"  [label="DDG: ip"];
"1000125" -> "1000123"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000125" -> "1000319"  [label="DDG: mp"];
"1000125" -> "1000319"  [label="DDG: ino"];
"1000125" -> "1000123"  [label="DDG: mp"];
"1000125" -> "1000123"  [label="DDG: ino"];
"1000119" -> "1000125"  [label="DDG: mp"];
"1000119" -> "1000125"  [label="DDG: ino"];
"1000106" -> "1000125"  [label="DDG: mp"];
"1000109" -> "1000125"  [label="DDG: ino"];
"1000125" -> "1000169"  [label="DDG: ino"];
"1000125" -> "1000187"  [label="DDG: ino"];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000119" -> "1000117"  [label="DDG: mp"];
"1000119" -> "1000117"  [label="DDG: ino"];
"1000106" -> "1000119"  [label="DDG: mp"];
"1000109" -> "1000119"  [label="DDG: ino"];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000319"  [label="DDG: mp"];
"1000106" -> "1000169"  [label="DDG: mp"];
"1000106" -> "1000187"  [label="DDG: mp"];
"1000106" -> "1000279"  [label="DDG: mp"];
"1000109" -> "1000105"  [label="AST: "];
"1000109" -> "1000319"  [label="DDG: ino"];
"1000109" -> "1000169"  [label="DDG: ino"];
"1000109" -> "1000187"  [label="DDG: ino"];
"1000108" -> "1000105"  [label="AST: "];
"1000108" -> "1000319"  [label="DDG: tp"];
"1000129" -> "1000128"  [label="AST: "];
"1000129" -> "1000130"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000133" -> "1000129"  [label="CFG: "];
"1000135" -> "1000129"  [label="CFG: "];
"1000129" -> "1000319"  [label="DDG: ip"];
"1000129" -> "1000319"  [label="DDG: !ip"];
"1000123" -> "1000129"  [label="DDG: ip"];
"1000123" -> "1000113"  [label="AST: "];
"1000124" -> "1000123"  [label="AST: "];
"1000130" -> "1000123"  [label="CFG: "];
"1000123" -> "1000319"  [label="DDG: xfs_inode_alloc(mp, ino)"];
"1000111" -> "1000105"  [label="AST: "];
"1000111" -> "1000319"  [label="DDG: flags"];
"1000111" -> "1000157"  [label="DDG: flags"];
"1000111" -> "1000232"  [label="DDG: flags"];
"1000317" -> "1000113"  [label="AST: "];
"1000317" -> "1000318"  [label="CFG: "];
"1000318" -> "1000317"  [label="AST: "];
"1000319" -> "1000317"  [label="CFG: "];
"1000317" -> "1000319"  [label="DDG: <RET>"];
"1000318" -> "1000317"  [label="DDG: error"];
"1000205" -> "1000317"  [label="DDG: error"];
"1000282" -> "1000317"  [label="DDG: error"];
"1000191" -> "1000317"  [label="DDG: error"];
"1000173" -> "1000317"  [label="DDG: error"];
"1000214" -> "1000317"  [label="DDG: error"];
"1000149" -> "1000317"  [label="DDG: error"];
}
