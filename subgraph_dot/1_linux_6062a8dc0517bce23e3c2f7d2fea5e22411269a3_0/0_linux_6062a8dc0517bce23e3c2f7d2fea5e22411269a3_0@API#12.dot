digraph "0_linux_6062a8dc0517bce23e3c2f7d2fea5e22411269a3_0@API" {
"1000604" [label="(Call,error == -EINTR && !signal_pending(current))"];
"1000605" [label="(Call,error == -EINTR)"];
"1000587" [label="(Call,error != -EINTR)"];
"1000576" [label="(Call,error = get_queue_result(&queue))"];
"1000578" [label="(Call,get_queue_result(&queue))"];
"1000560" [label="(Call,get_queue_result(&queue))"];
"1000589" [label="(Call,-EINTR)"];
"1000566" [label="(Call,-EINTR)"];
"1000607" [label="(Call,-EINTR)"];
"1000535" [label="(Call,-EINTR)"];
"1000599" [label="(Call,error = -EAGAIN)"];
"1000601" [label="(Call,-EAGAIN)"];
"1000609" [label="(Call,!signal_pending(current))"];
"1000610" [label="(Call,signal_pending(current))"];
"1000460" [label="(Call,task_tgid_vnr(current))"];
"1000420" [label="(Call,task_tgid_vnr(current))"];
"1000561" [label="(Call,&queue)"];
"1000456" [label="(Call,queue.pid = task_tgid_vnr(current))"];
"1000558" [label="(Call,error = get_queue_result(&queue))"];
"1000605" [label="(Call,error == -EINTR)"];
"1000611" [label="(Identifier,current)"];
"1000600" [label="(Identifier,error)"];
"1000583" [label="(Identifier,sma)"];
"1000461" [label="(Identifier,current)"];
"1000421" [label="(Identifier,current)"];
"1000602" [label="(Identifier,EAGAIN)"];
"1000587" [label="(Call,error != -EINTR)"];
"1000595" [label="(Identifier,timeout)"];
"1000604" [label="(Call,error == -EINTR && !signal_pending(current))"];
"1000579" [label="(Call,&queue)"];
"1000631" [label="(Return,return error;)"];
"1000537" [label="(Call,queue.sleeper = current)"];
"1000599" [label="(Call,error = -EAGAIN)"];
"1000560" [label="(Call,get_queue_result(&queue))"];
"1000590" [label="(Identifier,EINTR)"];
"1000578" [label="(Call,get_queue_result(&queue))"];
"1000119" [label="(Block,)"];
"1000588" [label="(Identifier,error)"];
"1000564" [label="(Call,error != -EINTR)"];
"1000603" [label="(ControlStructure,if (error == -EINTR && !signal_pending(current)))"];
"1000531" [label="(Call,queue.status = -EINTR)"];
"1000536" [label="(Identifier,EINTR)"];
"1000610" [label="(Call,signal_pending(current))"];
"1000577" [label="(Identifier,error)"];
"1000566" [label="(Call,-EINTR)"];
"1000607" [label="(Call,-EINTR)"];
"1000586" [label="(ControlStructure,if (error != -EINTR))"];
"1000606" [label="(Identifier,error)"];
"1000592" [label="(ControlStructure,goto out_unlock_free;)"];
"1000633" [label="(MethodReturn,RET)"];
"1000535" [label="(Call,-EINTR)"];
"1000415" [label="(Call,try_atomic_semop (sma, sops, nsops, un, task_tgid_vnr(current)))"];
"1000576" [label="(Call,error = get_queue_result(&queue))"];
"1000609" [label="(Call,!signal_pending(current))"];
"1000612" [label="(ControlStructure,goto sleep_again;)"];
"1000601" [label="(Call,-EAGAIN)"];
"1000593" [label="(ControlStructure,if (timeout && jiffies_left == 0))"];
"1000613" [label="(Call,unlink_queue(sma, &queue))"];
"1000589" [label="(Call,-EINTR)"];
"1000567" [label="(Identifier,EINTR)"];
"1000608" [label="(Identifier,EINTR)"];
"1000460" [label="(Call,task_tgid_vnr(current))"];
"1000420" [label="(Call,task_tgid_vnr(current))"];
"1000614" [label="(Identifier,sma)"];
"1000604" -> "1000603"  [label="AST: "];
"1000604" -> "1000605"  [label="CFG: "];
"1000604" -> "1000609"  [label="CFG: "];
"1000605" -> "1000604"  [label="AST: "];
"1000609" -> "1000604"  [label="AST: "];
"1000612" -> "1000604"  [label="CFG: "];
"1000614" -> "1000604"  [label="CFG: "];
"1000604" -> "1000633"  [label="DDG: error == -EINTR && !signal_pending(current)"];
"1000604" -> "1000633"  [label="DDG: error == -EINTR"];
"1000604" -> "1000633"  [label="DDG: !signal_pending(current)"];
"1000605" -> "1000604"  [label="DDG: error"];
"1000605" -> "1000604"  [label="DDG: -EINTR"];
"1000609" -> "1000604"  [label="DDG: signal_pending(current)"];
"1000605" -> "1000607"  [label="CFG: "];
"1000606" -> "1000605"  [label="AST: "];
"1000607" -> "1000605"  [label="AST: "];
"1000611" -> "1000605"  [label="CFG: "];
"1000605" -> "1000633"  [label="DDG: -EINTR"];
"1000605" -> "1000633"  [label="DDG: error"];
"1000587" -> "1000605"  [label="DDG: error"];
"1000599" -> "1000605"  [label="DDG: error"];
"1000607" -> "1000605"  [label="DDG: EINTR"];
"1000605" -> "1000631"  [label="DDG: error"];
"1000587" -> "1000586"  [label="AST: "];
"1000587" -> "1000589"  [label="CFG: "];
"1000588" -> "1000587"  [label="AST: "];
"1000589" -> "1000587"  [label="AST: "];
"1000592" -> "1000587"  [label="CFG: "];
"1000595" -> "1000587"  [label="CFG: "];
"1000587" -> "1000633"  [label="DDG: -EINTR"];
"1000587" -> "1000633"  [label="DDG: error"];
"1000587" -> "1000633"  [label="DDG: error != -EINTR"];
"1000576" -> "1000587"  [label="DDG: error"];
"1000589" -> "1000587"  [label="DDG: EINTR"];
"1000587" -> "1000631"  [label="DDG: error"];
"1000576" -> "1000119"  [label="AST: "];
"1000576" -> "1000578"  [label="CFG: "];
"1000577" -> "1000576"  [label="AST: "];
"1000578" -> "1000576"  [label="AST: "];
"1000583" -> "1000576"  [label="CFG: "];
"1000576" -> "1000633"  [label="DDG: error"];
"1000576" -> "1000633"  [label="DDG: get_queue_result(&queue)"];
"1000578" -> "1000576"  [label="DDG: &queue"];
"1000576" -> "1000631"  [label="DDG: error"];
"1000578" -> "1000579"  [label="CFG: "];
"1000579" -> "1000578"  [label="AST: "];
"1000578" -> "1000633"  [label="DDG: &queue"];
"1000578" -> "1000560"  [label="DDG: &queue"];
"1000560" -> "1000578"  [label="DDG: &queue"];
"1000578" -> "1000613"  [label="DDG: &queue"];
"1000560" -> "1000558"  [label="AST: "];
"1000560" -> "1000561"  [label="CFG: "];
"1000561" -> "1000560"  [label="AST: "];
"1000558" -> "1000560"  [label="CFG: "];
"1000560" -> "1000633"  [label="DDG: &queue"];
"1000560" -> "1000558"  [label="DDG: &queue"];
"1000589" -> "1000590"  [label="CFG: "];
"1000590" -> "1000589"  [label="AST: "];
"1000589" -> "1000633"  [label="DDG: EINTR"];
"1000566" -> "1000589"  [label="DDG: EINTR"];
"1000589" -> "1000607"  [label="DDG: EINTR"];
"1000566" -> "1000564"  [label="AST: "];
"1000566" -> "1000567"  [label="CFG: "];
"1000567" -> "1000566"  [label="AST: "];
"1000564" -> "1000566"  [label="CFG: "];
"1000566" -> "1000633"  [label="DDG: EINTR"];
"1000566" -> "1000564"  [label="DDG: EINTR"];
"1000607" -> "1000566"  [label="DDG: EINTR"];
"1000535" -> "1000566"  [label="DDG: EINTR"];
"1000607" -> "1000608"  [label="CFG: "];
"1000608" -> "1000607"  [label="AST: "];
"1000607" -> "1000633"  [label="DDG: EINTR"];
"1000535" -> "1000531"  [label="AST: "];
"1000535" -> "1000536"  [label="CFG: "];
"1000536" -> "1000535"  [label="AST: "];
"1000531" -> "1000535"  [label="CFG: "];
"1000535" -> "1000531"  [label="DDG: EINTR"];
"1000599" -> "1000593"  [label="AST: "];
"1000599" -> "1000601"  [label="CFG: "];
"1000600" -> "1000599"  [label="AST: "];
"1000601" -> "1000599"  [label="AST: "];
"1000606" -> "1000599"  [label="CFG: "];
"1000599" -> "1000633"  [label="DDG: -EAGAIN"];
"1000601" -> "1000599"  [label="DDG: EAGAIN"];
"1000601" -> "1000602"  [label="CFG: "];
"1000602" -> "1000601"  [label="AST: "];
"1000601" -> "1000633"  [label="DDG: EAGAIN"];
"1000609" -> "1000610"  [label="CFG: "];
"1000610" -> "1000609"  [label="AST: "];
"1000609" -> "1000633"  [label="DDG: signal_pending(current)"];
"1000610" -> "1000609"  [label="DDG: current"];
"1000610" -> "1000611"  [label="CFG: "];
"1000611" -> "1000610"  [label="AST: "];
"1000610" -> "1000633"  [label="DDG: current"];
"1000460" -> "1000610"  [label="DDG: current"];
"1000460" -> "1000456"  [label="AST: "];
"1000460" -> "1000461"  [label="CFG: "];
"1000461" -> "1000460"  [label="AST: "];
"1000456" -> "1000460"  [label="CFG: "];
"1000460" -> "1000456"  [label="DDG: current"];
"1000420" -> "1000460"  [label="DDG: current"];
"1000460" -> "1000537"  [label="DDG: current"];
"1000420" -> "1000415"  [label="AST: "];
"1000420" -> "1000421"  [label="CFG: "];
"1000421" -> "1000420"  [label="AST: "];
"1000415" -> "1000420"  [label="CFG: "];
"1000420" -> "1000633"  [label="DDG: current"];
"1000420" -> "1000415"  [label="DDG: current"];
}
