digraph "0_linux_6062a8dc0517bce23e3c2f7d2fea5e22411269a3_0@pointer" {
"1000317" [label="(Call,PTR_ERR(un))"];
"1000312" [label="(Call,IS_ERR(un))"];
"1000306" [label="(Call,un = find_alloc_undo(ns, semid))"];
"1000308" [label="(Call,find_alloc_undo(ns, semid))"];
"1000149" [label="(Call,ns = current->nsproxy->ipc_ns)"];
"1000161" [label="(Call,semid < 0)"];
"1000315" [label="(Call,error = PTR_ERR(un))"];
"1000631" [label="(Return,return error;)"];
"1000249" [label="(Call,error = -EINVAL)"];
"1000307" [label="(Identifier,un)"];
"1000326" [label="(Identifier,tasks)"];
"1000312" [label="(Call,IS_ERR(un))"];
"1000605" [label="(Call,error == -EINTR)"];
"1000308" [label="(Call,find_alloc_undo(ns, semid))"];
"1000163" [label="(Literal,0)"];
"1000151" [label="(Call,current->nsproxy->ipc_ns)"];
"1000315" [label="(Call,error = PTR_ERR(un))"];
"1000157" [label="(Call,nsops < 1 || semid < 0)"];
"1000340" [label="(Call,error = PTR_ERR(sma))"];
"1000587" [label="(Call,error != -EINTR)"];
"1000631" [label="(Return,return error;)"];
"1000225" [label="(Call,error = -EFAULT)"];
"1000564" [label="(Call,error != -EINTR)"];
"1000119" [label="(Block,)"];
"1000311" [label="(ControlStructure,if (IS_ERR(un)))"];
"1000207" [label="(Call,error=-EFAULT)"];
"1000319" [label="(ControlStructure,goto out_free;)"];
"1000376" [label="(Call,error = security_sem_semop(sma, sops, nsops, alter))"];
"1000388" [label="(Call,error = -EIDRM)"];
"1000150" [label="(Identifier,ns)"];
"1000318" [label="(Identifier,un)"];
"1000345" [label="(Call,error = -EFBIG)"];
"1000306" [label="(Call,un = find_alloc_undo(ns, semid))"];
"1000159" [label="(Identifier,nsops)"];
"1000149" [label="(Call,ns = current->nsproxy->ipc_ns)"];
"1000161" [label="(Call,semid < 0)"];
"1000310" [label="(Identifier,semid)"];
"1000313" [label="(Identifier,un)"];
"1000633" [label="(MethodReturn,RET)"];
"1000415" [label="(Call,try_atomic_semop (sma, sops, nsops, un, task_tgid_vnr(current)))"];
"1000317" [label="(Call,PTR_ERR(un))"];
"1000358" [label="(Call,error = -EACCES)"];
"1000576" [label="(Call,error = get_queue_result(&queue))"];
"1000330" [label="(Call,sem_obtain_object_check(ns, semid))"];
"1000423" [label="(Call,error <= 0)"];
"1000316" [label="(Identifier,error)"];
"1000162" [label="(Identifier,semid)"];
"1000430" [label="(Call,error == 0)"];
"1000309" [label="(Identifier,ns)"];
"1000314" [label="(Block,)"];
"1000305" [label="(Block,)"];
"1000632" [label="(Identifier,error)"];
"1000317" -> "1000315"  [label="AST: "];
"1000317" -> "1000318"  [label="CFG: "];
"1000318" -> "1000317"  [label="AST: "];
"1000315" -> "1000317"  [label="CFG: "];
"1000317" -> "1000633"  [label="DDG: un"];
"1000317" -> "1000315"  [label="DDG: un"];
"1000312" -> "1000317"  [label="DDG: un"];
"1000312" -> "1000311"  [label="AST: "];
"1000312" -> "1000313"  [label="CFG: "];
"1000313" -> "1000312"  [label="AST: "];
"1000316" -> "1000312"  [label="CFG: "];
"1000326" -> "1000312"  [label="CFG: "];
"1000312" -> "1000633"  [label="DDG: IS_ERR(un)"];
"1000312" -> "1000633"  [label="DDG: un"];
"1000306" -> "1000312"  [label="DDG: un"];
"1000312" -> "1000415"  [label="DDG: un"];
"1000306" -> "1000305"  [label="AST: "];
"1000306" -> "1000308"  [label="CFG: "];
"1000307" -> "1000306"  [label="AST: "];
"1000308" -> "1000306"  [label="AST: "];
"1000313" -> "1000306"  [label="CFG: "];
"1000306" -> "1000633"  [label="DDG: find_alloc_undo(ns, semid)"];
"1000308" -> "1000306"  [label="DDG: ns"];
"1000308" -> "1000306"  [label="DDG: semid"];
"1000308" -> "1000310"  [label="CFG: "];
"1000309" -> "1000308"  [label="AST: "];
"1000310" -> "1000308"  [label="AST: "];
"1000308" -> "1000633"  [label="DDG: semid"];
"1000308" -> "1000633"  [label="DDG: ns"];
"1000149" -> "1000308"  [label="DDG: ns"];
"1000161" -> "1000308"  [label="DDG: semid"];
"1000308" -> "1000330"  [label="DDG: ns"];
"1000308" -> "1000330"  [label="DDG: semid"];
"1000149" -> "1000119"  [label="AST: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000159" -> "1000149"  [label="CFG: "];
"1000149" -> "1000633"  [label="DDG: current->nsproxy->ipc_ns"];
"1000149" -> "1000633"  [label="DDG: ns"];
"1000149" -> "1000330"  [label="DDG: ns"];
"1000161" -> "1000157"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000157" -> "1000161"  [label="CFG: "];
"1000161" -> "1000633"  [label="DDG: semid"];
"1000161" -> "1000157"  [label="DDG: semid"];
"1000161" -> "1000157"  [label="DDG: 0"];
"1000161" -> "1000330"  [label="DDG: semid"];
"1000315" -> "1000314"  [label="AST: "];
"1000316" -> "1000315"  [label="AST: "];
"1000319" -> "1000315"  [label="CFG: "];
"1000315" -> "1000633"  [label="DDG: error"];
"1000315" -> "1000633"  [label="DDG: PTR_ERR(un)"];
"1000315" -> "1000631"  [label="DDG: error"];
"1000631" -> "1000119"  [label="AST: "];
"1000631" -> "1000632"  [label="CFG: "];
"1000632" -> "1000631"  [label="AST: "];
"1000633" -> "1000631"  [label="CFG: "];
"1000631" -> "1000633"  [label="DDG: <RET>"];
"1000632" -> "1000631"  [label="DDG: error"];
"1000376" -> "1000631"  [label="DDG: error"];
"1000388" -> "1000631"  [label="DDG: error"];
"1000576" -> "1000631"  [label="DDG: error"];
"1000587" -> "1000631"  [label="DDG: error"];
"1000207" -> "1000631"  [label="DDG: error"];
"1000423" -> "1000631"  [label="DDG: error"];
"1000605" -> "1000631"  [label="DDG: error"];
"1000340" -> "1000631"  [label="DDG: error"];
"1000358" -> "1000631"  [label="DDG: error"];
"1000225" -> "1000631"  [label="DDG: error"];
"1000564" -> "1000631"  [label="DDG: error"];
"1000430" -> "1000631"  [label="DDG: error"];
"1000249" -> "1000631"  [label="DDG: error"];
"1000345" -> "1000631"  [label="DDG: error"];
}
