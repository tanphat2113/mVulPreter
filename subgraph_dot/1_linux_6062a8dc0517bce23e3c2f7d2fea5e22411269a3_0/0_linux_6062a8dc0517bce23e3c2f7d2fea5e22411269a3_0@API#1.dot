digraph "0_linux_6062a8dc0517bce23e3c2f7d2fea5e22411269a3_0@API" {
"1000613" [label="(Call,unlink_queue(sma, &queue))"];
"1000582" [label="(Call,IS_ERR(sma))"];
"1000571" [label="(Call,sma = sem_obtain_lock(ns, semid))"];
"1000573" [label="(Call,sem_obtain_lock(ns, semid))"];
"1000363" [label="(Call,ipcperms(ns, &sma->sem_perm, alter ? S_IWUGO : S_IRUGO))"];
"1000330" [label="(Call,sem_obtain_object_check(ns, semid))"];
"1000308" [label="(Call,find_alloc_undo(ns, semid))"];
"1000149" [label="(Call,ns = current->nsproxy->ipc_ns)"];
"1000161" [label="(Call,semid < 0)"];
"1000578" [label="(Call,get_queue_result(&queue))"];
"1000560" [label="(Call,get_queue_result(&queue))"];
"1000618" [label="(Call,sem_unlock(sma))"];
"1000561" [label="(Call,&queue)"];
"1000433" [label="(Call,do_smart_update(sma, sops, nsops, 1, &tasks))"];
"1000365" [label="(Call,&sma->sem_perm)"];
"1000571" [label="(Call,sma = sem_obtain_lock(ns, semid))"];
"1000558" [label="(Call,error = get_queue_result(&queue))"];
"1000620" [label="(JumpTarget,out_wakeup:)"];
"1000308" [label="(Call,find_alloc_undo(ns, semid))"];
"1000583" [label="(Identifier,sma)"];
"1000392" [label="(Call,ipc_lock_object(&sma->sem_perm))"];
"1000163" [label="(Literal,0)"];
"1000332" [label="(Identifier,semid)"];
"1000151" [label="(Call,current->nsproxy->ipc_ns)"];
"1000157" [label="(Call,nsops < 1 || semid < 0)"];
"1000579" [label="(Call,&queue)"];
"1000585" [label="(ControlStructure,goto out_free;)"];
"1000560" [label="(Call,get_queue_result(&queue))"];
"1000369" [label="(Call,alter ? S_IWUGO : S_IRUGO)"];
"1000578" [label="(Call,get_queue_result(&queue))"];
"1000119" [label="(Block,)"];
"1000588" [label="(Identifier,error)"];
"1000362" [label="(ControlStructure,if (ipcperms(ns, &sma->sem_perm, alter ? S_IWUGO : S_IRUGO)))"];
"1000363" [label="(Call,ipcperms(ns, &sma->sem_perm, alter ? S_IWUGO : S_IRUGO))"];
"1000328" [label="(Call,sma = sem_obtain_object_check(ns, semid))"];
"1000582" [label="(Call,IS_ERR(sma))"];
"1000573" [label="(Call,sem_obtain_lock(ns, semid))"];
"1000548" [label="(Call,sem_unlock(sma))"];
"1000150" [label="(Identifier,ns)"];
"1000581" [label="(ControlStructure,if (IS_ERR(sma)))"];
"1000575" [label="(Identifier,semid)"];
"1000306" [label="(Call,un = find_alloc_undo(ns, semid))"];
"1000159" [label="(Identifier,nsops)"];
"1000577" [label="(Identifier,error)"];
"1000377" [label="(Identifier,error)"];
"1000149" [label="(Call,ns = current->nsproxy->ipc_ns)"];
"1000161" [label="(Call,semid < 0)"];
"1000618" [label="(Call,sem_unlock(sma))"];
"1000310" [label="(Identifier,semid)"];
"1000633" [label="(MethodReturn,RET)"];
"1000617" [label="(JumpTarget,out_unlock_free:)"];
"1000378" [label="(Call,security_sem_semop(sma, sops, nsops, alter))"];
"1000415" [label="(Call,try_atomic_semop (sma, sops, nsops, un, task_tgid_vnr(current)))"];
"1000364" [label="(Identifier,ns)"];
"1000576" [label="(Call,error = get_queue_result(&queue))"];
"1000574" [label="(Identifier,ns)"];
"1000330" [label="(Call,sem_obtain_object_check(ns, semid))"];
"1000613" [label="(Call,unlink_queue(sma, &queue))"];
"1000572" [label="(Identifier,sma)"];
"1000331" [label="(Identifier,ns)"];
"1000162" [label="(Identifier,semid)"];
"1000309" [label="(Identifier,ns)"];
"1000619" [label="(Identifier,sma)"];
"1000374" [label="(Call,rcu_read_unlock())"];
"1000614" [label="(Identifier,sma)"];
"1000615" [label="(Call,&queue)"];
"1000613" -> "1000119"  [label="AST: "];
"1000613" -> "1000615"  [label="CFG: "];
"1000614" -> "1000613"  [label="AST: "];
"1000615" -> "1000613"  [label="AST: "];
"1000617" -> "1000613"  [label="CFG: "];
"1000613" -> "1000633"  [label="DDG: unlink_queue(sma, &queue)"];
"1000613" -> "1000633"  [label="DDG: &queue"];
"1000582" -> "1000613"  [label="DDG: sma"];
"1000578" -> "1000613"  [label="DDG: &queue"];
"1000613" -> "1000618"  [label="DDG: sma"];
"1000582" -> "1000581"  [label="AST: "];
"1000582" -> "1000583"  [label="CFG: "];
"1000583" -> "1000582"  [label="AST: "];
"1000585" -> "1000582"  [label="CFG: "];
"1000588" -> "1000582"  [label="CFG: "];
"1000582" -> "1000633"  [label="DDG: sma"];
"1000582" -> "1000633"  [label="DDG: IS_ERR(sma)"];
"1000582" -> "1000548"  [label="DDG: sma"];
"1000571" -> "1000582"  [label="DDG: sma"];
"1000582" -> "1000618"  [label="DDG: sma"];
"1000571" -> "1000119"  [label="AST: "];
"1000571" -> "1000573"  [label="CFG: "];
"1000572" -> "1000571"  [label="AST: "];
"1000573" -> "1000571"  [label="AST: "];
"1000577" -> "1000571"  [label="CFG: "];
"1000571" -> "1000633"  [label="DDG: sem_obtain_lock(ns, semid)"];
"1000573" -> "1000571"  [label="DDG: ns"];
"1000573" -> "1000571"  [label="DDG: semid"];
"1000573" -> "1000575"  [label="CFG: "];
"1000574" -> "1000573"  [label="AST: "];
"1000575" -> "1000573"  [label="AST: "];
"1000573" -> "1000633"  [label="DDG: semid"];
"1000573" -> "1000633"  [label="DDG: ns"];
"1000363" -> "1000573"  [label="DDG: ns"];
"1000330" -> "1000573"  [label="DDG: semid"];
"1000363" -> "1000362"  [label="AST: "];
"1000363" -> "1000369"  [label="CFG: "];
"1000364" -> "1000363"  [label="AST: "];
"1000365" -> "1000363"  [label="AST: "];
"1000369" -> "1000363"  [label="AST: "];
"1000374" -> "1000363"  [label="CFG: "];
"1000377" -> "1000363"  [label="CFG: "];
"1000363" -> "1000633"  [label="DDG: &sma->sem_perm"];
"1000363" -> "1000633"  [label="DDG: alter ? S_IWUGO : S_IRUGO"];
"1000363" -> "1000633"  [label="DDG: ns"];
"1000363" -> "1000633"  [label="DDG: ipcperms(ns, &sma->sem_perm, alter ? S_IWUGO : S_IRUGO)"];
"1000330" -> "1000363"  [label="DDG: ns"];
"1000363" -> "1000392"  [label="DDG: &sma->sem_perm"];
"1000330" -> "1000328"  [label="AST: "];
"1000330" -> "1000332"  [label="CFG: "];
"1000331" -> "1000330"  [label="AST: "];
"1000332" -> "1000330"  [label="AST: "];
"1000328" -> "1000330"  [label="CFG: "];
"1000330" -> "1000633"  [label="DDG: ns"];
"1000330" -> "1000633"  [label="DDG: semid"];
"1000330" -> "1000328"  [label="DDG: ns"];
"1000330" -> "1000328"  [label="DDG: semid"];
"1000308" -> "1000330"  [label="DDG: ns"];
"1000308" -> "1000330"  [label="DDG: semid"];
"1000149" -> "1000330"  [label="DDG: ns"];
"1000161" -> "1000330"  [label="DDG: semid"];
"1000308" -> "1000306"  [label="AST: "];
"1000308" -> "1000310"  [label="CFG: "];
"1000309" -> "1000308"  [label="AST: "];
"1000310" -> "1000308"  [label="AST: "];
"1000306" -> "1000308"  [label="CFG: "];
"1000308" -> "1000633"  [label="DDG: semid"];
"1000308" -> "1000633"  [label="DDG: ns"];
"1000308" -> "1000306"  [label="DDG: ns"];
"1000308" -> "1000306"  [label="DDG: semid"];
"1000149" -> "1000308"  [label="DDG: ns"];
"1000161" -> "1000308"  [label="DDG: semid"];
"1000149" -> "1000119"  [label="AST: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000159" -> "1000149"  [label="CFG: "];
"1000149" -> "1000633"  [label="DDG: current->nsproxy->ipc_ns"];
"1000149" -> "1000633"  [label="DDG: ns"];
"1000161" -> "1000157"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000157" -> "1000161"  [label="CFG: "];
"1000161" -> "1000633"  [label="DDG: semid"];
"1000161" -> "1000157"  [label="DDG: semid"];
"1000161" -> "1000157"  [label="DDG: 0"];
"1000578" -> "1000576"  [label="AST: "];
"1000578" -> "1000579"  [label="CFG: "];
"1000579" -> "1000578"  [label="AST: "];
"1000576" -> "1000578"  [label="CFG: "];
"1000578" -> "1000633"  [label="DDG: &queue"];
"1000578" -> "1000560"  [label="DDG: &queue"];
"1000578" -> "1000576"  [label="DDG: &queue"];
"1000560" -> "1000578"  [label="DDG: &queue"];
"1000560" -> "1000558"  [label="AST: "];
"1000560" -> "1000561"  [label="CFG: "];
"1000561" -> "1000560"  [label="AST: "];
"1000558" -> "1000560"  [label="CFG: "];
"1000560" -> "1000633"  [label="DDG: &queue"];
"1000560" -> "1000558"  [label="DDG: &queue"];
"1000618" -> "1000119"  [label="AST: "];
"1000618" -> "1000619"  [label="CFG: "];
"1000619" -> "1000618"  [label="AST: "];
"1000620" -> "1000618"  [label="CFG: "];
"1000618" -> "1000633"  [label="DDG: sem_unlock(sma)"];
"1000618" -> "1000633"  [label="DDG: sma"];
"1000433" -> "1000618"  [label="DDG: sma"];
"1000378" -> "1000618"  [label="DDG: sma"];
"1000415" -> "1000618"  [label="DDG: sma"];
}
