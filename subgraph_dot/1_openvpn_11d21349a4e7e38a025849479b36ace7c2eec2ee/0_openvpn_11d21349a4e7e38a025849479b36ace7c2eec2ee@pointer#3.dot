digraph "0_openvpn_11d21349a4e7e38a025849479b36ace7c2eec2ee@pointer" {
"1000471" [label="(Call,packet_id_reap_test (&opt->packet_id->rec))"];
"1000479" [label="(Call,packet_id_test (&opt->packet_id->rec, &pin))"];
"1000489" [label="(Call,packet_id_add (&opt->packet_id->rec, &pin))"];
"1000528" [label="(Call,packet_id_net_print (&pin, true, &gc))"];
"1000524" [label="(Call,msg (D_REPLAY_ERRORS, \"%s: bad packet ID (may be a replay): %s -- see the man page entry for --no-replay and --replay-window for more info or silence this warning with --mute-replay-warnings\",\n\t\t   error_prefix, packet_id_net_print (&pin, true, &gc)))"];
"1000551" [label="(Call,gc_free (&gc))"];
"1000493" [label="(Identifier,opt)"];
"1000526" [label="(Literal,\"%s: bad packet ID (may be a replay): %s -- see the man page entry for --no-replay and --replay-window for more info or silence this warning with --mute-replay-warnings\")"];
"1000124" [label="(Call,error_prefix[] = \"Authenticate/Decrypt packet error\")"];
"1000496" [label="(Call,&pin)"];
"1000532" [label="(Call,&gc)"];
"1000529" [label="(Call,&pin)"];
"1000488" [label="(Block,)"];
"1000128" [label="(Call,gc_init (&gc))"];
"1000517" [label="(ControlStructure,if (!(opt->flags & CO_MUTE_REPLAY_WARNINGS)))"];
"1000524" [label="(Call,msg (D_REPLAY_ERRORS, \"%s: bad packet ID (may be a replay): %s -- see the man page entry for --no-replay and --replay-window for more info or silence this warning with --mute-replay-warnings\",\n\t\t   error_prefix, packet_id_net_print (&pin, true, &gc)))"];
"1000480" [label="(Call,&opt->packet_id->rec)"];
"1000525" [label="(Identifier,D_REPLAY_ERRORS)"];
"1000552" [label="(Call,&gc)"];
"1000534" [label="(ControlStructure,goto error_exit;)"];
"1000521" [label="(Identifier,opt)"];
"1000489" [label="(Call,packet_id_add (&opt->packet_id->rec, &pin))"];
"1000418" [label="(Call,packet_id_read (&pin, &b, true))"];
"1000531" [label="(Identifier,true)"];
"1000472" [label="(Call,&opt->packet_id->rec)"];
"1000374" [label="(Call,packet_id_read (&pin, &work, BOOL_CAST (opt->flags & CO_PACKET_ID_LONG_FORM)))"];
"1000501" [label="(Identifier,opt)"];
"1000555" [label="(Identifier,false)"];
"1000478" [label="(ControlStructure,if (packet_id_test (&opt->packet_id->rec, &pin)))"];
"1000351" [label="(Call,format_hex (BPTR (&work), BLEN (&work), 80, &gc))"];
"1000528" [label="(Call,packet_id_net_print (&pin, true, &gc))"];
"1000490" [label="(Call,&opt->packet_id->rec)"];
"1000446" [label="(Call,packet_id_read (&pin, &work, BOOL_CAST (opt->flags & CO_PACKET_ID_LONG_FORM)))"];
"1000483" [label="(Identifier,opt)"];
"1000551" [label="(Call,gc_free (&gc))"];
"1000479" [label="(Call,packet_id_test (&opt->packet_id->rec, &pin))"];
"1000556" [label="(MethodReturn,RET)"];
"1000122" [label="(Block,)"];
"1000470" [label="(Block,)"];
"1000486" [label="(Call,&pin)"];
"1000471" [label="(Call,packet_id_reap_test (&opt->packet_id->rec))"];
"1000527" [label="(Identifier,error_prefix)"];
"1000471" -> "1000470"  [label="AST: "];
"1000471" -> "1000472"  [label="CFG: "];
"1000472" -> "1000471"  [label="AST: "];
"1000483" -> "1000471"  [label="CFG: "];
"1000471" -> "1000556"  [label="DDG: "];
"1000471" -> "1000479"  [label="DDG: "];
"1000479" -> "1000478"  [label="AST: "];
"1000479" -> "1000486"  [label="CFG: "];
"1000480" -> "1000479"  [label="AST: "];
"1000486" -> "1000479"  [label="AST: "];
"1000493" -> "1000479"  [label="CFG: "];
"1000521" -> "1000479"  [label="CFG: "];
"1000479" -> "1000556"  [label="DDG: "];
"1000479" -> "1000556"  [label="DDG: "];
"1000479" -> "1000556"  [label="DDG: "];
"1000374" -> "1000479"  [label="DDG: "];
"1000446" -> "1000479"  [label="DDG: "];
"1000418" -> "1000479"  [label="DDG: "];
"1000479" -> "1000489"  [label="DDG: "];
"1000479" -> "1000489"  [label="DDG: "];
"1000479" -> "1000528"  [label="DDG: "];
"1000489" -> "1000488"  [label="AST: "];
"1000489" -> "1000496"  [label="CFG: "];
"1000490" -> "1000489"  [label="AST: "];
"1000496" -> "1000489"  [label="AST: "];
"1000501" -> "1000489"  [label="CFG: "];
"1000489" -> "1000556"  [label="DDG: "];
"1000489" -> "1000556"  [label="DDG: "];
"1000489" -> "1000556"  [label="DDG: "];
"1000528" -> "1000524"  [label="AST: "];
"1000528" -> "1000532"  [label="CFG: "];
"1000529" -> "1000528"  [label="AST: "];
"1000531" -> "1000528"  [label="AST: "];
"1000532" -> "1000528"  [label="AST: "];
"1000524" -> "1000528"  [label="CFG: "];
"1000528" -> "1000556"  [label="DDG: "];
"1000528" -> "1000556"  [label="DDG: "];
"1000528" -> "1000524"  [label="DDG: "];
"1000528" -> "1000524"  [label="DDG: "];
"1000528" -> "1000524"  [label="DDG: "];
"1000418" -> "1000528"  [label="DDG: "];
"1000128" -> "1000528"  [label="DDG: "];
"1000351" -> "1000528"  [label="DDG: "];
"1000528" -> "1000551"  [label="DDG: "];
"1000524" -> "1000517"  [label="AST: "];
"1000525" -> "1000524"  [label="AST: "];
"1000526" -> "1000524"  [label="AST: "];
"1000527" -> "1000524"  [label="AST: "];
"1000534" -> "1000524"  [label="CFG: "];
"1000524" -> "1000556"  [label="DDG: "];
"1000524" -> "1000556"  [label="DDG: "];
"1000524" -> "1000556"  [label="DDG: "];
"1000524" -> "1000556"  [label="DDG: "];
"1000124" -> "1000524"  [label="DDG: "];
"1000551" -> "1000122"  [label="AST: "];
"1000551" -> "1000552"  [label="CFG: "];
"1000552" -> "1000551"  [label="AST: "];
"1000555" -> "1000551"  [label="CFG: "];
"1000551" -> "1000556"  [label="DDG: "];
"1000551" -> "1000556"  [label="DDG: "];
"1000128" -> "1000551"  [label="DDG: "];
"1000351" -> "1000551"  [label="DDG: "];
}
