digraph "0_suricata_4a04f814b15762eb446a5ead4d69d021512df6f8_1@API" {
"1000139" [label="(Call,memset(packets, 0x00, sizeof(packets)))"];
"1000362" [label="(Call,Defrag(NULL, NULL, packets[i], NULL))"];
"1000360" [label="(Call,*tp = Defrag(NULL, NULL, packets[i], NULL))"];
"1000370" [label="(Call,tp != NULL)"];
"1000374" [label="(Call,SCFree(tp))"];
"1000399" [label="(Call,Defrag(NULL, NULL, packets[i], NULL))"];
"1000397" [label="(Call,*tp = Defrag(NULL, NULL, packets[i], NULL))"];
"1000407" [label="(Call,tp != NULL)"];
"1000411" [label="(Call,SCFree(tp))"];
"1000431" [label="(Call,Defrag(NULL, NULL, packets[16], NULL))"];
"1000429" [label="(Call,*reassembled = Defrag(NULL, NULL, packets[16], NULL))"];
"1000439" [label="(Call,reassembled == NULL)"];
"1000446" [label="(Call,IPV4_GET_HLEN(reassembled))"];
"1000445" [label="(Call,IPV4_GET_HLEN(reassembled) != 20)"];
"1000453" [label="(Call,IPV4_GET_IPLEN(reassembled))"];
"1000452" [label="(Call,IPV4_GET_IPLEN(reassembled) != 20 + 192)"];
"1000464" [label="(Call,GET_PKT_DATA(reassembled))"];
"1000462" [label="(Call,memcmp(GET_PKT_DATA(reassembled) + 20, expected, expected_len))"];
"1000461" [label="(Call,memcmp(GET_PKT_DATA(reassembled) + 20, expected, expected_len) != 0)"];
"1000463" [label="(Call,GET_PKT_DATA(reassembled) + 20)"];
"1000472" [label="(Call,SCFree(reassembled))"];
"1000415" [label="(Call,ENGINE_ISSET_EVENT(packets[i], IPV4_FRAG_OVERLAP))"];
"1000498" [label="(Call,SCFree(packets[i]))"];
"1000378" [label="(Call,ENGINE_ISSET_EVENT(packets[i], IPV4_FRAG_OVERLAP))"];
"1000365" [label="(Call,packets[i])"];
"1000382" [label="(Identifier,IPV4_FRAG_OVERLAP)"];
"1000453" [label="(Call,IPV4_GET_IPLEN(reassembled))"];
"1000401" [label="(Identifier,NULL)"];
"1000464" [label="(Call,GET_PKT_DATA(reassembled))"];
"1000469" [label="(Literal,0)"];
"1000371" [label="(Identifier,tp)"];
"1000375" [label="(Identifier,tp)"];
"1000402" [label="(Call,packets[i])"];
"1000127" [label="(Block,)"];
"1000451" [label="(ControlStructure,if (IPV4_GET_IPLEN(reassembled) != 20 + 192))"];
"1000362" [label="(Call,Defrag(NULL, NULL, packets[i], NULL))"];
"1000363" [label="(Identifier,NULL)"];
"1000376" [label="(ControlStructure,goto end;)"];
"1000377" [label="(ControlStructure,if (ENGINE_ISSET_EVENT(packets[i], IPV4_FRAG_OVERLAP)))"];
"1000505" [label="(MethodReturn,RET)"];
"1000360" [label="(Call,*tp = Defrag(NULL, NULL, packets[i], NULL))"];
"1000415" [label="(Call,ENGINE_ISSET_EVENT(packets[i], IPV4_FRAG_OVERLAP))"];
"1000444" [label="(ControlStructure,if (IPV4_GET_HLEN(reassembled) != 20))"];
"1000139" [label="(Call,memset(packets, 0x00, sizeof(packets)))"];
"1000361" [label="(Identifier,tp)"];
"1000433" [label="(Identifier,NULL)"];
"1000466" [label="(Literal,20)"];
"1000437" [label="(Identifier,NULL)"];
"1000125" [label="(MethodParameterIn,u_char *expected)"];
"1000455" [label="(Call,20 + 192)"];
"1000454" [label="(Identifier,reassembled)"];
"1000405" [label="(Identifier,NULL)"];
"1000461" [label="(Call,memcmp(GET_PKT_DATA(reassembled) + 20, expected, expected_len) != 0)"];
"1000478" [label="(Identifier,defrag_context)"];
"1000498" [label="(Call,SCFree(packets[i]))"];
"1000413" [label="(ControlStructure,goto end;)"];
"1000422" [label="(Identifier,overlap)"];
"1000432" [label="(Identifier,NULL)"];
"1000434" [label="(Call,packets[16])"];
"1000459" [label="(ControlStructure,goto end;)"];
"1000370" [label="(Call,tp != NULL)"];
"1000450" [label="(ControlStructure,goto end;)"];
"1000499" [label="(Call,packets[i])"];
"1000357" [label="(Identifier,i)"];
"1000430" [label="(Identifier,reassembled)"];
"1000373" [label="(Block,)"];
"1000126" [label="(MethodParameterIn,size_t expected_len)"];
"1000438" [label="(ControlStructure,if (reassembled == NULL))"];
"1000448" [label="(Literal,20)"];
"1000140" [label="(Identifier,packets)"];
"1000446" [label="(Call,IPV4_GET_HLEN(reassembled))"];
"1000417" [label="(Identifier,packets)"];
"1000497" [label="(Block,)"];
"1000142" [label="(Call,sizeof(packets))"];
"1000463" [label="(Call,GET_PKT_DATA(reassembled) + 20)"];
"1000439" [label="(Call,reassembled == NULL)"];
"1000443" [label="(ControlStructure,goto end;)"];
"1000395" [label="(Block,)"];
"1000368" [label="(Identifier,NULL)"];
"1000380" [label="(Identifier,packets)"];
"1000141" [label="(Literal,0x00)"];
"1000431" [label="(Call,Defrag(NULL, NULL, packets[16], NULL))"];
"1000379" [label="(Call,packets[i])"];
"1000407" [label="(Call,tp != NULL)"];
"1000411" [label="(Call,SCFree(tp))"];
"1000408" [label="(Identifier,tp)"];
"1000419" [label="(Identifier,IPV4_FRAG_OVERLAP)"];
"1000406" [label="(ControlStructure,if (tp != NULL))"];
"1000400" [label="(Identifier,NULL)"];
"1000334" [label="(Call,packets[16] = BuildTestPacket(id, 176 >> 3, 0, 'Q', 16))"];
"1000364" [label="(Identifier,NULL)"];
"1000397" [label="(Call,*tp = Defrag(NULL, NULL, packets[i], NULL))"];
"1000462" [label="(Call,memcmp(GET_PKT_DATA(reassembled) + 20, expected, expected_len))"];
"1000429" [label="(Call,*reassembled = Defrag(NULL, NULL, packets[16], NULL))"];
"1000460" [label="(ControlStructure,if (memcmp(GET_PKT_DATA(reassembled) + 20, expected, expected_len) != 0))"];
"1000146" [label="(Identifier,packets)"];
"1000399" [label="(Call,Defrag(NULL, NULL, packets[i], NULL))"];
"1000468" [label="(Identifier,expected_len)"];
"1000452" [label="(Call,IPV4_GET_IPLEN(reassembled) != 20 + 192)"];
"1000496" [label="(Identifier,i)"];
"1000456" [label="(Literal,20)"];
"1000471" [label="(ControlStructure,goto end;)"];
"1000394" [label="(Identifier,i)"];
"1000410" [label="(Block,)"];
"1000465" [label="(Identifier,reassembled)"];
"1000447" [label="(Identifier,reassembled)"];
"1000369" [label="(ControlStructure,if (tp != NULL))"];
"1000440" [label="(Identifier,reassembled)"];
"1000398" [label="(Identifier,tp)"];
"1000441" [label="(Identifier,NULL)"];
"1000467" [label="(Identifier,expected)"];
"1000378" [label="(Call,ENGINE_ISSET_EVENT(packets[i], IPV4_FRAG_OVERLAP))"];
"1000358" [label="(Block,)"];
"1000472" [label="(Call,SCFree(reassembled))"];
"1000372" [label="(Identifier,NULL)"];
"1000445" [label="(Call,IPV4_GET_HLEN(reassembled) != 20)"];
"1000414" [label="(ControlStructure,if (ENGINE_ISSET_EVENT(packets[i], IPV4_FRAG_OVERLAP)))"];
"1000384" [label="(ControlStructure,goto end;)"];
"1000473" [label="(Identifier,reassembled)"];
"1000412" [label="(Identifier,tp)"];
"1000416" [label="(Call,packets[i])"];
"1000409" [label="(Identifier,NULL)"];
"1000374" [label="(Call,SCFree(tp))"];
"1000139" -> "1000127"  [label="AST: "];
"1000139" -> "1000142"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="AST: "];
"1000142" -> "1000139"  [label="AST: "];
"1000146" -> "1000139"  [label="CFG: "];
"1000139" -> "1000505"  [label="DDG: memset(packets, 0x00, sizeof(packets))"];
"1000139" -> "1000505"  [label="DDG: packets"];
"1000139" -> "1000362"  [label="DDG: packets"];
"1000139" -> "1000378"  [label="DDG: packets"];
"1000139" -> "1000399"  [label="DDG: packets"];
"1000139" -> "1000415"  [label="DDG: packets"];
"1000139" -> "1000431"  [label="DDG: packets"];
"1000139" -> "1000498"  [label="DDG: packets"];
"1000362" -> "1000360"  [label="AST: "];
"1000362" -> "1000368"  [label="CFG: "];
"1000363" -> "1000362"  [label="AST: "];
"1000364" -> "1000362"  [label="AST: "];
"1000365" -> "1000362"  [label="AST: "];
"1000368" -> "1000362"  [label="AST: "];
"1000360" -> "1000362"  [label="CFG: "];
"1000362" -> "1000505"  [label="DDG: packets[i]"];
"1000362" -> "1000360"  [label="DDG: NULL"];
"1000362" -> "1000360"  [label="DDG: packets[i]"];
"1000370" -> "1000362"  [label="DDG: NULL"];
"1000378" -> "1000362"  [label="DDG: packets[i]"];
"1000362" -> "1000370"  [label="DDG: NULL"];
"1000362" -> "1000378"  [label="DDG: packets[i]"];
"1000362" -> "1000498"  [label="DDG: packets[i]"];
"1000360" -> "1000358"  [label="AST: "];
"1000361" -> "1000360"  [label="AST: "];
"1000371" -> "1000360"  [label="CFG: "];
"1000360" -> "1000505"  [label="DDG: Defrag(NULL, NULL, packets[i], NULL)"];
"1000360" -> "1000370"  [label="DDG: tp"];
"1000370" -> "1000369"  [label="AST: "];
"1000370" -> "1000372"  [label="CFG: "];
"1000371" -> "1000370"  [label="AST: "];
"1000372" -> "1000370"  [label="AST: "];
"1000375" -> "1000370"  [label="CFG: "];
"1000380" -> "1000370"  [label="CFG: "];
"1000370" -> "1000505"  [label="DDG: tp != NULL"];
"1000370" -> "1000505"  [label="DDG: NULL"];
"1000370" -> "1000505"  [label="DDG: tp"];
"1000370" -> "1000374"  [label="DDG: tp"];
"1000370" -> "1000399"  [label="DDG: NULL"];
"1000370" -> "1000431"  [label="DDG: NULL"];
"1000374" -> "1000373"  [label="AST: "];
"1000374" -> "1000375"  [label="CFG: "];
"1000375" -> "1000374"  [label="AST: "];
"1000376" -> "1000374"  [label="CFG: "];
"1000374" -> "1000505"  [label="DDG: tp"];
"1000374" -> "1000505"  [label="DDG: SCFree(tp)"];
"1000399" -> "1000397"  [label="AST: "];
"1000399" -> "1000405"  [label="CFG: "];
"1000400" -> "1000399"  [label="AST: "];
"1000401" -> "1000399"  [label="AST: "];
"1000402" -> "1000399"  [label="AST: "];
"1000405" -> "1000399"  [label="AST: "];
"1000397" -> "1000399"  [label="CFG: "];
"1000399" -> "1000505"  [label="DDG: packets[i]"];
"1000399" -> "1000397"  [label="DDG: NULL"];
"1000399" -> "1000397"  [label="DDG: packets[i]"];
"1000407" -> "1000399"  [label="DDG: NULL"];
"1000378" -> "1000399"  [label="DDG: packets[i]"];
"1000415" -> "1000399"  [label="DDG: packets[i]"];
"1000399" -> "1000407"  [label="DDG: NULL"];
"1000399" -> "1000415"  [label="DDG: packets[i]"];
"1000399" -> "1000498"  [label="DDG: packets[i]"];
"1000397" -> "1000395"  [label="AST: "];
"1000398" -> "1000397"  [label="AST: "];
"1000408" -> "1000397"  [label="CFG: "];
"1000397" -> "1000505"  [label="DDG: Defrag(NULL, NULL, packets[i], NULL)"];
"1000397" -> "1000407"  [label="DDG: tp"];
"1000407" -> "1000406"  [label="AST: "];
"1000407" -> "1000409"  [label="CFG: "];
"1000408" -> "1000407"  [label="AST: "];
"1000409" -> "1000407"  [label="AST: "];
"1000412" -> "1000407"  [label="CFG: "];
"1000417" -> "1000407"  [label="CFG: "];
"1000407" -> "1000505"  [label="DDG: NULL"];
"1000407" -> "1000505"  [label="DDG: tp != NULL"];
"1000407" -> "1000505"  [label="DDG: tp"];
"1000407" -> "1000411"  [label="DDG: tp"];
"1000407" -> "1000431"  [label="DDG: NULL"];
"1000411" -> "1000410"  [label="AST: "];
"1000411" -> "1000412"  [label="CFG: "];
"1000412" -> "1000411"  [label="AST: "];
"1000413" -> "1000411"  [label="CFG: "];
"1000411" -> "1000505"  [label="DDG: SCFree(tp)"];
"1000411" -> "1000505"  [label="DDG: tp"];
"1000431" -> "1000429"  [label="AST: "];
"1000431" -> "1000437"  [label="CFG: "];
"1000432" -> "1000431"  [label="AST: "];
"1000433" -> "1000431"  [label="AST: "];
"1000434" -> "1000431"  [label="AST: "];
"1000437" -> "1000431"  [label="AST: "];
"1000429" -> "1000431"  [label="CFG: "];
"1000431" -> "1000505"  [label="DDG: packets[16]"];
"1000431" -> "1000429"  [label="DDG: NULL"];
"1000431" -> "1000429"  [label="DDG: packets[16]"];
"1000334" -> "1000431"  [label="DDG: packets[16]"];
"1000431" -> "1000439"  [label="DDG: NULL"];
"1000429" -> "1000127"  [label="AST: "];
"1000430" -> "1000429"  [label="AST: "];
"1000440" -> "1000429"  [label="CFG: "];
"1000429" -> "1000505"  [label="DDG: Defrag(NULL, NULL, packets[16], NULL)"];
"1000429" -> "1000439"  [label="DDG: reassembled"];
"1000439" -> "1000438"  [label="AST: "];
"1000439" -> "1000441"  [label="CFG: "];
"1000440" -> "1000439"  [label="AST: "];
"1000441" -> "1000439"  [label="AST: "];
"1000443" -> "1000439"  [label="CFG: "];
"1000447" -> "1000439"  [label="CFG: "];
"1000439" -> "1000505"  [label="DDG: reassembled"];
"1000439" -> "1000505"  [label="DDG: NULL"];
"1000439" -> "1000505"  [label="DDG: reassembled == NULL"];
"1000439" -> "1000446"  [label="DDG: reassembled"];
"1000446" -> "1000445"  [label="AST: "];
"1000446" -> "1000447"  [label="CFG: "];
"1000447" -> "1000446"  [label="AST: "];
"1000448" -> "1000446"  [label="CFG: "];
"1000446" -> "1000505"  [label="DDG: reassembled"];
"1000446" -> "1000445"  [label="DDG: reassembled"];
"1000446" -> "1000453"  [label="DDG: reassembled"];
"1000445" -> "1000444"  [label="AST: "];
"1000445" -> "1000448"  [label="CFG: "];
"1000448" -> "1000445"  [label="AST: "];
"1000450" -> "1000445"  [label="CFG: "];
"1000454" -> "1000445"  [label="CFG: "];
"1000445" -> "1000505"  [label="DDG: IPV4_GET_HLEN(reassembled)"];
"1000445" -> "1000505"  [label="DDG: IPV4_GET_HLEN(reassembled) != 20"];
"1000453" -> "1000452"  [label="AST: "];
"1000453" -> "1000454"  [label="CFG: "];
"1000454" -> "1000453"  [label="AST: "];
"1000456" -> "1000453"  [label="CFG: "];
"1000453" -> "1000505"  [label="DDG: reassembled"];
"1000453" -> "1000452"  [label="DDG: reassembled"];
"1000453" -> "1000464"  [label="DDG: reassembled"];
"1000452" -> "1000451"  [label="AST: "];
"1000452" -> "1000455"  [label="CFG: "];
"1000455" -> "1000452"  [label="AST: "];
"1000459" -> "1000452"  [label="CFG: "];
"1000465" -> "1000452"  [label="CFG: "];
"1000452" -> "1000505"  [label="DDG: 20 + 192"];
"1000452" -> "1000505"  [label="DDG: IPV4_GET_IPLEN(reassembled) != 20 + 192"];
"1000452" -> "1000505"  [label="DDG: IPV4_GET_IPLEN(reassembled)"];
"1000464" -> "1000463"  [label="AST: "];
"1000464" -> "1000465"  [label="CFG: "];
"1000465" -> "1000464"  [label="AST: "];
"1000466" -> "1000464"  [label="CFG: "];
"1000464" -> "1000505"  [label="DDG: reassembled"];
"1000464" -> "1000462"  [label="DDG: reassembled"];
"1000464" -> "1000463"  [label="DDG: reassembled"];
"1000464" -> "1000472"  [label="DDG: reassembled"];
"1000462" -> "1000461"  [label="AST: "];
"1000462" -> "1000468"  [label="CFG: "];
"1000463" -> "1000462"  [label="AST: "];
"1000467" -> "1000462"  [label="AST: "];
"1000468" -> "1000462"  [label="AST: "];
"1000469" -> "1000462"  [label="CFG: "];
"1000462" -> "1000505"  [label="DDG: expected_len"];
"1000462" -> "1000505"  [label="DDG: GET_PKT_DATA(reassembled) + 20"];
"1000462" -> "1000505"  [label="DDG: expected"];
"1000462" -> "1000461"  [label="DDG: GET_PKT_DATA(reassembled) + 20"];
"1000462" -> "1000461"  [label="DDG: expected"];
"1000462" -> "1000461"  [label="DDG: expected_len"];
"1000125" -> "1000462"  [label="DDG: expected"];
"1000126" -> "1000462"  [label="DDG: expected_len"];
"1000461" -> "1000460"  [label="AST: "];
"1000461" -> "1000469"  [label="CFG: "];
"1000469" -> "1000461"  [label="AST: "];
"1000471" -> "1000461"  [label="CFG: "];
"1000473" -> "1000461"  [label="CFG: "];
"1000461" -> "1000505"  [label="DDG: memcmp(GET_PKT_DATA(reassembled) + 20, expected, expected_len) != 0"];
"1000461" -> "1000505"  [label="DDG: memcmp(GET_PKT_DATA(reassembled) + 20, expected, expected_len)"];
"1000463" -> "1000466"  [label="CFG: "];
"1000466" -> "1000463"  [label="AST: "];
"1000467" -> "1000463"  [label="CFG: "];
"1000463" -> "1000505"  [label="DDG: GET_PKT_DATA(reassembled)"];
"1000472" -> "1000127"  [label="AST: "];
"1000472" -> "1000473"  [label="CFG: "];
"1000473" -> "1000472"  [label="AST: "];
"1000478" -> "1000472"  [label="CFG: "];
"1000472" -> "1000505"  [label="DDG: SCFree(reassembled)"];
"1000472" -> "1000505"  [label="DDG: reassembled"];
"1000415" -> "1000414"  [label="AST: "];
"1000415" -> "1000419"  [label="CFG: "];
"1000416" -> "1000415"  [label="AST: "];
"1000419" -> "1000415"  [label="AST: "];
"1000422" -> "1000415"  [label="CFG: "];
"1000394" -> "1000415"  [label="CFG: "];
"1000415" -> "1000505"  [label="DDG: packets[i]"];
"1000415" -> "1000505"  [label="DDG: ENGINE_ISSET_EVENT(packets[i], IPV4_FRAG_OVERLAP)"];
"1000415" -> "1000505"  [label="DDG: IPV4_FRAG_OVERLAP"];
"1000378" -> "1000415"  [label="DDG: IPV4_FRAG_OVERLAP"];
"1000415" -> "1000498"  [label="DDG: packets[i]"];
"1000498" -> "1000497"  [label="AST: "];
"1000498" -> "1000499"  [label="CFG: "];
"1000499" -> "1000498"  [label="AST: "];
"1000496" -> "1000498"  [label="CFG: "];
"1000498" -> "1000505"  [label="DDG: SCFree(packets[i])"];
"1000498" -> "1000505"  [label="DDG: packets[i]"];
"1000378" -> "1000498"  [label="DDG: packets[i]"];
"1000378" -> "1000377"  [label="AST: "];
"1000378" -> "1000382"  [label="CFG: "];
"1000379" -> "1000378"  [label="AST: "];
"1000382" -> "1000378"  [label="AST: "];
"1000384" -> "1000378"  [label="CFG: "];
"1000357" -> "1000378"  [label="CFG: "];
"1000378" -> "1000505"  [label="DDG: packets[i]"];
"1000378" -> "1000505"  [label="DDG: ENGINE_ISSET_EVENT(packets[i], IPV4_FRAG_OVERLAP)"];
"1000378" -> "1000505"  [label="DDG: IPV4_FRAG_OVERLAP"];
}
