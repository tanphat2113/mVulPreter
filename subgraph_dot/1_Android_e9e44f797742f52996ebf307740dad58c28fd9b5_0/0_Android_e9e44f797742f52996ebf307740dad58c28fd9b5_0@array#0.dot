digraph "0_Android_e9e44f797742f52996ebf307740dad58c28fd9b5_0@array" {
"1000315" [label="(Call,(uintptr_t)&entries[i])"];
"1000321" [label="(Call,ALIGN_TO(&entries[i], ENTRY_ALIGNMENT))"];
"1000315" [label="(Call,(uintptr_t)&entries[i])"];
"1000314" [label="(Call,(uintptr_t)&entries[i] != ALIGN_TO(&entries[i], ENTRY_ALIGNMENT))"];
"1000328" [label="(Call,ALOGE(\"%s: Entry index %zu had bad alignment (address %p),\"\n \" expected alignment %zu\",\n                  __FUNCTION__, i, &entries[i], ENTRY_ALIGNMENT))"];
"1000501" [label="(MethodReturn,int)"];
"1000341" [label="(Identifier,entry)"];
"1000338" [label="(Identifier,ERROR)"];
"1000327" [label="(Block,)"];
"1000332" [label="(Call,&entries[i])"];
"1000322" [label="(Call,&entries[i])"];
"1000326" [label="(Identifier,ENTRY_ALIGNMENT)"];
"1000329" [label="(Literal,\"%s: Entry index %zu had bad alignment (address %p),\"\n \" expected alignment %zu\")"];
"1000336" [label="(Identifier,ENTRY_ALIGNMENT)"];
"1000315" [label="(Call,(uintptr_t)&entries[i])"];
"1000314" [label="(Call,(uintptr_t)&entries[i] != ALIGN_TO(&entries[i], ENTRY_ALIGNMENT))"];
"1000324" [label="(Identifier,entries)"];
"1000313" [label="(ControlStructure,if ((uintptr_t)&entries[i] != ALIGN_TO(&entries[i], ENTRY_ALIGNMENT)))"];
"1000307" [label="(Call,i < entry_count)"];
"1000328" [label="(Call,ALOGE(\"%s: Entry index %zu had bad alignment (address %p),\"\n \" expected alignment %zu\",\n                  __FUNCTION__, i, &entries[i], ENTRY_ALIGNMENT))"];
"1000331" [label="(Identifier,i)"];
"1000321" [label="(Call,ALIGN_TO(&entries[i], ENTRY_ALIGNMENT))"];
"1000330" [label="(Identifier,__FUNCTION__)"];
"1000317" [label="(Call,&entries[i])"];
"1000315" -> "1000314"  [label="AST: "];
"1000315" -> "1000317"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000317" -> "1000315"  [label="AST: "];
"1000324" -> "1000315"  [label="CFG: "];
"1000315" -> "1000314"  [label="DDG: "];
"1000321" -> "1000315"  [label="DDG: "];
"1000315" -> "1000321"  [label="DDG: "];
"1000321" -> "1000314"  [label="AST: "];
"1000321" -> "1000326"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000326" -> "1000321"  [label="AST: "];
"1000314" -> "1000321"  [label="CFG: "];
"1000321" -> "1000501"  [label="DDG: "];
"1000321" -> "1000501"  [label="DDG: "];
"1000321" -> "1000314"  [label="DDG: "];
"1000321" -> "1000314"  [label="DDG: "];
"1000321" -> "1000328"  [label="DDG: "];
"1000321" -> "1000328"  [label="DDG: "];
"1000314" -> "1000313"  [label="AST: "];
"1000329" -> "1000314"  [label="CFG: "];
"1000341" -> "1000314"  [label="CFG: "];
"1000314" -> "1000501"  [label="DDG: "];
"1000314" -> "1000501"  [label="DDG: "];
"1000314" -> "1000501"  [label="DDG: "];
"1000328" -> "1000327"  [label="AST: "];
"1000328" -> "1000336"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000330" -> "1000328"  [label="AST: "];
"1000331" -> "1000328"  [label="AST: "];
"1000332" -> "1000328"  [label="AST: "];
"1000336" -> "1000328"  [label="AST: "];
"1000338" -> "1000328"  [label="CFG: "];
"1000328" -> "1000501"  [label="DDG: "];
"1000328" -> "1000501"  [label="DDG: "];
"1000328" -> "1000501"  [label="DDG: "];
"1000328" -> "1000501"  [label="DDG: "];
"1000328" -> "1000501"  [label="DDG: "];
"1000307" -> "1000328"  [label="DDG: "];
}
