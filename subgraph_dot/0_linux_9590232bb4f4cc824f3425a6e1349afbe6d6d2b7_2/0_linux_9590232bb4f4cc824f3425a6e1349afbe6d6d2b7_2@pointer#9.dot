digraph "0_linux_9590232bb4f4cc824f3425a6e1349afbe6d6d2b7_2@pointer" {
"1000345" [label="(Call,dev->custom_ioctl(client, data.custom.cmd,\n\t\t\t\t\t\tdata.custom.arg))"];
"1000106" [label="(Call,*client = filp->private_data)"];
"1000343" [label="(Call,ret = dev->custom_ioctl(client, data.custom.cmd,\n\t\t\t\t\t\tdata.custom.arg))"];
"1000385" [label="(Return,return ret;)"];
"1000379" [label="(Call,ion_free(client, cleanup_handle))"];
"1000379" [label="(Call,ion_free(client, cleanup_handle))"];
"1000347" [label="(Call,data.custom.cmd)"];
"1000270" [label="(Call,ion_share_dma_buf_fd(client, handle))"];
"1000113" [label="(Identifier,dev)"];
"1000283" [label="(Call,ret = data.fd.fd)"];
"1000386" [label="(Identifier,ret)"];
"1000344" [label="(Identifier,ret)"];
"1000334" [label="(Block,)"];
"1000352" [label="(Call,data.custom.arg)"];
"1000234" [label="(Call,ion_free_nolock(client, handle))"];
"1000296" [label="(Call,ion_import_dma_buf_fd(client, data.fd.fd))"];
"1000122" [label="(Call,ret = 0)"];
"1000380" [label="(Identifier,client)"];
"1000164" [label="(Call,ion_alloc(client, data.allocation.len,\n\t\t\t\t\t\tdata.allocation.align,\n\t\t\t\t\t\tdata.allocation.heap_id_mask,\n\t\t\t\t\t\tdata.allocation.flags))"];
"1000306" [label="(Call,ret = PTR_ERR(handle))"];
"1000385" [label="(Return,return ret;)"];
"1000346" [label="(Identifier,client)"];
"1000381" [label="(Identifier,cleanup_handle)"];
"1000325" [label="(Call,ion_sync_for_device(client, data.fd.fd))"];
"1000357" [label="(ControlStructure,break;)"];
"1000343" [label="(Call,ret = dev->custom_ioctl(client, data.custom.cmd,\n\t\t\t\t\t\tdata.custom.arg))"];
"1000108" [label="(Call,filp->private_data)"];
"1000384" [label="(Identifier,EFAULT)"];
"1000387" [label="(MethodReturn,static long)"];
"1000106" [label="(Call,*client = filp->private_data)"];
"1000377" [label="(ControlStructure,if (cleanup_handle))"];
"1000323" [label="(Call,ret = ion_sync_for_device(client, data.fd.fd))"];
"1000215" [label="(Call,ion_handle_get_by_id_nolock(client, data.handle.handle))"];
"1000251" [label="(Call,ion_handle_get_by_id(client, data.handle.handle))"];
"1000107" [label="(Identifier,client)"];
"1000104" [label="(Block,)"];
"1000201" [label="(Call,cleanup_handle = handle)"];
"1000118" [label="(Call,*cleanup_handle = NULL)"];
"1000345" [label="(Call,dev->custom_ioctl(client, data.custom.cmd,\n\t\t\t\t\t\tdata.custom.arg))"];
"1000345" -> "1000343"  [label="AST: "];
"1000345" -> "1000352"  [label="CFG: "];
"1000346" -> "1000345"  [label="AST: "];
"1000347" -> "1000345"  [label="AST: "];
"1000352" -> "1000345"  [label="AST: "];
"1000343" -> "1000345"  [label="CFG: "];
"1000345" -> "1000387"  [label="DDG: data.custom.cmd"];
"1000345" -> "1000387"  [label="DDG: data.custom.arg"];
"1000345" -> "1000387"  [label="DDG: client"];
"1000345" -> "1000343"  [label="DDG: client"];
"1000345" -> "1000343"  [label="DDG: data.custom.cmd"];
"1000345" -> "1000343"  [label="DDG: data.custom.arg"];
"1000106" -> "1000345"  [label="DDG: client"];
"1000345" -> "1000379"  [label="DDG: client"];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000108" -> "1000106"  [label="AST: "];
"1000113" -> "1000106"  [label="CFG: "];
"1000106" -> "1000387"  [label="DDG: filp->private_data"];
"1000106" -> "1000387"  [label="DDG: client"];
"1000106" -> "1000164"  [label="DDG: client"];
"1000106" -> "1000215"  [label="DDG: client"];
"1000106" -> "1000251"  [label="DDG: client"];
"1000106" -> "1000296"  [label="DDG: client"];
"1000106" -> "1000325"  [label="DDG: client"];
"1000343" -> "1000334"  [label="AST: "];
"1000344" -> "1000343"  [label="AST: "];
"1000357" -> "1000343"  [label="CFG: "];
"1000343" -> "1000387"  [label="DDG: ret"];
"1000343" -> "1000387"  [label="DDG: dev->custom_ioctl(client, data.custom.cmd,\n\t\t\t\t\t\tdata.custom.arg)"];
"1000343" -> "1000385"  [label="DDG: ret"];
"1000385" -> "1000104"  [label="AST: "];
"1000385" -> "1000386"  [label="CFG: "];
"1000386" -> "1000385"  [label="AST: "];
"1000387" -> "1000385"  [label="CFG: "];
"1000385" -> "1000387"  [label="DDG: <RET>"];
"1000386" -> "1000385"  [label="DDG: ret"];
"1000283" -> "1000385"  [label="DDG: ret"];
"1000323" -> "1000385"  [label="DDG: ret"];
"1000122" -> "1000385"  [label="DDG: ret"];
"1000306" -> "1000385"  [label="DDG: ret"];
"1000379" -> "1000377"  [label="AST: "];
"1000379" -> "1000381"  [label="CFG: "];
"1000380" -> "1000379"  [label="AST: "];
"1000381" -> "1000379"  [label="AST: "];
"1000384" -> "1000379"  [label="CFG: "];
"1000379" -> "1000387"  [label="DDG: client"];
"1000379" -> "1000387"  [label="DDG: ion_free(client, cleanup_handle)"];
"1000379" -> "1000387"  [label="DDG: cleanup_handle"];
"1000325" -> "1000379"  [label="DDG: client"];
"1000234" -> "1000379"  [label="DDG: client"];
"1000296" -> "1000379"  [label="DDG: client"];
"1000270" -> "1000379"  [label="DDG: client"];
"1000164" -> "1000379"  [label="DDG: client"];
"1000118" -> "1000379"  [label="DDG: cleanup_handle"];
"1000201" -> "1000379"  [label="DDG: cleanup_handle"];
}
