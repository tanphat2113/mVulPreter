digraph "0_linux_9590232bb4f4cc824f3425a6e1349afbe6d6d2b7_2@pointer" {
"1000162" [label="(Call,handle = ion_alloc(client, data.allocation.len,\n\t\t\t\t\t\tdata.allocation.align,\n\t\t\t\t\t\tdata.allocation.heap_id_mask,\n\t\t\t\t\t\tdata.allocation.flags))"];
"1000164" [label="(Call,ion_alloc(client, data.allocation.len,\n\t\t\t\t\t\tdata.allocation.align,\n\t\t\t\t\t\tdata.allocation.heap_id_mask,\n\t\t\t\t\t\tdata.allocation.flags))"];
"1000106" [label="(Call,*client = filp->private_data)"];
"1000187" [label="(Call,IS_ERR(handle))"];
"1000190" [label="(Call,PTR_ERR(handle))"];
"1000189" [label="(Return,return PTR_ERR(handle);)"];
"1000201" [label="(Call,cleanup_handle = handle)"];
"1000379" [label="(Call,ion_free(client, cleanup_handle))"];
"1000187" [label="(Call,IS_ERR(handle))"];
"1000379" [label="(Call,ion_free(client, cleanup_handle))"];
"1000270" [label="(Call,ion_share_dma_buf_fd(client, handle))"];
"1000113" [label="(Identifier,dev)"];
"1000203" [label="(Identifier,handle)"];
"1000165" [label="(Identifier,client)"];
"1000186" [label="(ControlStructure,if (IS_ERR(handle)))"];
"1000189" [label="(Return,return PTR_ERR(handle);)"];
"1000234" [label="(Call,ion_free_nolock(client, handle))"];
"1000296" [label="(Call,ion_import_dma_buf_fd(client, data.fd.fd))"];
"1000380" [label="(Identifier,client)"];
"1000164" [label="(Call,ion_alloc(client, data.allocation.len,\n\t\t\t\t\t\tdata.allocation.align,\n\t\t\t\t\t\tdata.allocation.heap_id_mask,\n\t\t\t\t\t\tdata.allocation.flags))"];
"1000163" [label="(Identifier,handle)"];
"1000204" [label="(ControlStructure,break;)"];
"1000176" [label="(Call,data.allocation.heap_id_mask)"];
"1000162" [label="(Call,handle = ion_alloc(client, data.allocation.len,\n\t\t\t\t\t\tdata.allocation.align,\n\t\t\t\t\t\tdata.allocation.heap_id_mask,\n\t\t\t\t\t\tdata.allocation.flags))"];
"1000166" [label="(Call,data.allocation.len)"];
"1000381" [label="(Identifier,cleanup_handle)"];
"1000181" [label="(Call,data.allocation.flags)"];
"1000325" [label="(Call,ion_sync_for_device(client, data.fd.fd))"];
"1000190" [label="(Call,PTR_ERR(handle))"];
"1000118" [label="(Call,*cleanup_handle = NULL)"];
"1000108" [label="(Call,filp->private_data)"];
"1000195" [label="(Identifier,data)"];
"1000384" [label="(Identifier,EFAULT)"];
"1000387" [label="(MethodReturn,static long)"];
"1000188" [label="(Identifier,handle)"];
"1000106" [label="(Call,*client = filp->private_data)"];
"1000171" [label="(Call,data.allocation.align)"];
"1000191" [label="(Identifier,handle)"];
"1000377" [label="(ControlStructure,if (cleanup_handle))"];
"1000215" [label="(Call,ion_handle_get_by_id_nolock(client, data.handle.handle))"];
"1000251" [label="(Call,ion_handle_get_by_id(client, data.handle.handle))"];
"1000107" [label="(Identifier,client)"];
"1000202" [label="(Identifier,cleanup_handle)"];
"1000104" [label="(Block,)"];
"1000201" [label="(Call,cleanup_handle = handle)"];
"1000160" [label="(Block,)"];
"1000345" [label="(Call,dev->custom_ioctl(client, data.custom.cmd,\n\t\t\t\t\t\tdata.custom.arg))"];
"1000162" -> "1000160"  [label="AST: "];
"1000162" -> "1000164"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000164" -> "1000162"  [label="AST: "];
"1000188" -> "1000162"  [label="CFG: "];
"1000162" -> "1000387"  [label="DDG: ion_alloc(client, data.allocation.len,\n\t\t\t\t\t\tdata.allocation.align,\n\t\t\t\t\t\tdata.allocation.heap_id_mask,\n\t\t\t\t\t\tdata.allocation.flags)"];
"1000164" -> "1000162"  [label="DDG: data.allocation.flags"];
"1000164" -> "1000162"  [label="DDG: data.allocation.len"];
"1000164" -> "1000162"  [label="DDG: data.allocation.heap_id_mask"];
"1000164" -> "1000162"  [label="DDG: client"];
"1000164" -> "1000162"  [label="DDG: data.allocation.align"];
"1000162" -> "1000187"  [label="DDG: handle"];
"1000164" -> "1000181"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000166" -> "1000164"  [label="AST: "];
"1000171" -> "1000164"  [label="AST: "];
"1000176" -> "1000164"  [label="AST: "];
"1000181" -> "1000164"  [label="AST: "];
"1000164" -> "1000387"  [label="DDG: data.allocation.flags"];
"1000164" -> "1000387"  [label="DDG: data.allocation.len"];
"1000164" -> "1000387"  [label="DDG: data.allocation.heap_id_mask"];
"1000164" -> "1000387"  [label="DDG: data.allocation.align"];
"1000164" -> "1000387"  [label="DDG: client"];
"1000106" -> "1000164"  [label="DDG: client"];
"1000164" -> "1000379"  [label="DDG: client"];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000108" -> "1000106"  [label="AST: "];
"1000113" -> "1000106"  [label="CFG: "];
"1000106" -> "1000387"  [label="DDG: filp->private_data"];
"1000106" -> "1000387"  [label="DDG: client"];
"1000106" -> "1000215"  [label="DDG: client"];
"1000106" -> "1000251"  [label="DDG: client"];
"1000106" -> "1000296"  [label="DDG: client"];
"1000106" -> "1000325"  [label="DDG: client"];
"1000106" -> "1000345"  [label="DDG: client"];
"1000187" -> "1000186"  [label="AST: "];
"1000187" -> "1000188"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000191" -> "1000187"  [label="CFG: "];
"1000195" -> "1000187"  [label="CFG: "];
"1000187" -> "1000387"  [label="DDG: IS_ERR(handle)"];
"1000187" -> "1000190"  [label="DDG: handle"];
"1000187" -> "1000201"  [label="DDG: handle"];
"1000190" -> "1000189"  [label="AST: "];
"1000190" -> "1000191"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000189" -> "1000190"  [label="CFG: "];
"1000190" -> "1000387"  [label="DDG: PTR_ERR(handle)"];
"1000190" -> "1000387"  [label="DDG: handle"];
"1000190" -> "1000189"  [label="DDG: PTR_ERR(handle)"];
"1000189" -> "1000186"  [label="AST: "];
"1000387" -> "1000189"  [label="CFG: "];
"1000189" -> "1000387"  [label="DDG: <RET>"];
"1000201" -> "1000160"  [label="AST: "];
"1000201" -> "1000203"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000203" -> "1000201"  [label="AST: "];
"1000204" -> "1000201"  [label="CFG: "];
"1000201" -> "1000387"  [label="DDG: handle"];
"1000201" -> "1000387"  [label="DDG: cleanup_handle"];
"1000201" -> "1000379"  [label="DDG: cleanup_handle"];
"1000379" -> "1000377"  [label="AST: "];
"1000379" -> "1000381"  [label="CFG: "];
"1000380" -> "1000379"  [label="AST: "];
"1000381" -> "1000379"  [label="AST: "];
"1000384" -> "1000379"  [label="CFG: "];
"1000379" -> "1000387"  [label="DDG: client"];
"1000379" -> "1000387"  [label="DDG: ion_free(client, cleanup_handle)"];
"1000379" -> "1000387"  [label="DDG: cleanup_handle"];
"1000325" -> "1000379"  [label="DDG: client"];
"1000234" -> "1000379"  [label="DDG: client"];
"1000296" -> "1000379"  [label="DDG: client"];
"1000345" -> "1000379"  [label="DDG: client"];
"1000270" -> "1000379"  [label="DDG: client"];
"1000118" -> "1000379"  [label="DDG: cleanup_handle"];
}
