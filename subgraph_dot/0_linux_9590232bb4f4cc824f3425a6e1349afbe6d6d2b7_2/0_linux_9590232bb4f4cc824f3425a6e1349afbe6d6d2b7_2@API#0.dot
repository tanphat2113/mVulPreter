digraph "0_linux_9590232bb4f4cc824f3425a6e1349afbe6d6d2b7_2@API" {
"1000379" [label="(Call,ion_free(client, cleanup_handle))"];
"1000325" [label="(Call,ion_sync_for_device(client, data.fd.fd))"];
"1000106" [label="(Call,*client = filp->private_data)"];
"1000234" [label="(Call,ion_free_nolock(client, handle))"];
"1000215" [label="(Call,ion_handle_get_by_id_nolock(client, data.handle.handle))"];
"1000223" [label="(Call,IS_ERR(handle))"];
"1000213" [label="(Call,handle = ion_handle_get_by_id_nolock(client, data.handle.handle))"];
"1000296" [label="(Call,ion_import_dma_buf_fd(client, data.fd.fd))"];
"1000345" [label="(Call,dev->custom_ioctl(client, data.custom.cmd,\n\t\t\t\t\t\tdata.custom.arg))"];
"1000270" [label="(Call,ion_share_dma_buf_fd(client, handle))"];
"1000251" [label="(Call,ion_handle_get_by_id(client, data.handle.handle))"];
"1000259" [label="(Call,IS_ERR(handle))"];
"1000249" [label="(Call,handle = ion_handle_get_by_id(client, data.handle.handle))"];
"1000164" [label="(Call,ion_alloc(client, data.allocation.len,\n\t\t\t\t\t\tdata.allocation.align,\n\t\t\t\t\t\tdata.allocation.heap_id_mask,\n\t\t\t\t\t\tdata.allocation.flags))"];
"1000118" [label="(Call,*cleanup_handle = NULL)"];
"1000201" [label="(Call,cleanup_handle = handle)"];
"1000187" [label="(Call,IS_ERR(handle))"];
"1000162" [label="(Call,handle = ion_alloc(client, data.allocation.len,\n\t\t\t\t\t\tdata.allocation.align,\n\t\t\t\t\t\tdata.allocation.heap_id_mask,\n\t\t\t\t\t\tdata.allocation.flags))"];
"1000379" [label="(Call,ion_free(client, cleanup_handle))"];
"1000270" [label="(Call,ion_share_dma_buf_fd(client, handle))"];
"1000347" [label="(Call,data.custom.cmd)"];
"1000249" [label="(Call,handle = ion_handle_get_by_id(client, data.handle.handle))"];
"1000113" [label="(Identifier,dev)"];
"1000123" [label="(Identifier,ret)"];
"1000203" [label="(Identifier,handle)"];
"1000187" [label="(Call,IS_ERR(handle))"];
"1000327" [label="(Call,data.fd.fd)"];
"1000326" [label="(Identifier,client)"];
"1000165" [label="(Identifier,client)"];
"1000232" [label="(Call,PTR_ERR(handle))"];
"1000119" [label="(Identifier,cleanup_handle)"];
"1000186" [label="(ControlStructure,if (IS_ERR(handle)))"];
"1000235" [label="(Identifier,client)"];
"1000224" [label="(Identifier,handle)"];
"1000222" [label="(ControlStructure,if (IS_ERR(handle)))"];
"1000236" [label="(Identifier,handle)"];
"1000237" [label="(Call,ion_handle_put_nolock(handle))"];
"1000352" [label="(Call,data.custom.arg)"];
"1000258" [label="(ControlStructure,if (IS_ERR(handle)))"];
"1000234" [label="(Call,ion_free_nolock(client, handle))"];
"1000160" [label="(Block,)"];
"1000380" [label="(Identifier,client)"];
"1000296" [label="(Call,ion_import_dma_buf_fd(client, data.fd.fd))"];
"1000206" [label="(Block,)"];
"1000164" [label="(Call,ion_alloc(client, data.allocation.len,\n\t\t\t\t\t\tdata.allocation.align,\n\t\t\t\t\t\tdata.allocation.heap_id_mask,\n\t\t\t\t\t\tdata.allocation.flags))"];
"1000247" [label="(Block,)"];
"1000163" [label="(Identifier,handle)"];
"1000271" [label="(Identifier,client)"];
"1000250" [label="(Identifier,handle)"];
"1000176" [label="(Call,data.allocation.heap_id_mask)"];
"1000162" [label="(Call,handle = ion_alloc(client, data.allocation.len,\n\t\t\t\t\t\tdata.allocation.align,\n\t\t\t\t\t\tdata.allocation.heap_id_mask,\n\t\t\t\t\t\tdata.allocation.flags))"];
"1000204" [label="(ControlStructure,break;)"];
"1000346" [label="(Identifier,client)"];
"1000273" [label="(Call,ion_handle_put(handle))"];
"1000166" [label="(Call,data.allocation.len)"];
"1000381" [label="(Identifier,cleanup_handle)"];
"1000181" [label="(Call,data.allocation.flags)"];
"1000297" [label="(Identifier,client)"];
"1000325" [label="(Call,ion_sync_for_device(client, data.fd.fd))"];
"1000294" [label="(Call,handle = ion_import_dma_buf_fd(client, data.fd.fd))"];
"1000190" [label="(Call,PTR_ERR(handle))"];
"1000253" [label="(Call,data.handle.handle)"];
"1000214" [label="(Identifier,handle)"];
"1000343" [label="(Call,ret = dev->custom_ioctl(client, data.custom.cmd,\n\t\t\t\t\t\tdata.custom.arg))"];
"1000252" [label="(Identifier,client)"];
"1000108" [label="(Call,filp->private_data)"];
"1000384" [label="(Identifier,EFAULT)"];
"1000195" [label="(Identifier,data)"];
"1000229" [label="(Identifier,client)"];
"1000223" [label="(Call,IS_ERR(handle))"];
"1000259" [label="(Call,IS_ERR(handle))"];
"1000387" [label="(MethodReturn,static long)"];
"1000263" [label="(Identifier,handle)"];
"1000188" [label="(Identifier,handle)"];
"1000106" [label="(Call,*client = filp->private_data)"];
"1000267" [label="(Identifier,data)"];
"1000298" [label="(Call,data.fd.fd)"];
"1000238" [label="(Identifier,handle)"];
"1000171" [label="(Call,data.allocation.align)"];
"1000191" [label="(Identifier,handle)"];
"1000377" [label="(ControlStructure,if (cleanup_handle))"];
"1000213" [label="(Call,handle = ion_handle_get_by_id_nolock(client, data.handle.handle))"];
"1000323" [label="(Call,ret = ion_sync_for_device(client, data.fd.fd))"];
"1000120" [label="(Identifier,NULL)"];
"1000215" [label="(Call,ion_handle_get_by_id_nolock(client, data.handle.handle))"];
"1000251" [label="(Call,ion_handle_get_by_id(client, data.handle.handle))"];
"1000216" [label="(Identifier,client)"];
"1000264" [label="(Call,data.fd.fd = ion_share_dma_buf_fd(client, handle))"];
"1000272" [label="(Identifier,handle)"];
"1000107" [label="(Identifier,client)"];
"1000260" [label="(Identifier,handle)"];
"1000202" [label="(Identifier,cleanup_handle)"];
"1000201" [label="(Call,cleanup_handle = handle)"];
"1000104" [label="(Block,)"];
"1000118" [label="(Call,*cleanup_handle = NULL)"];
"1000345" [label="(Call,dev->custom_ioctl(client, data.custom.cmd,\n\t\t\t\t\t\tdata.custom.arg))"];
"1000262" [label="(Call,PTR_ERR(handle))"];
"1000217" [label="(Call,data.handle.handle)"];
"1000379" -> "1000377"  [label="AST: "];
"1000379" -> "1000381"  [label="CFG: "];
"1000380" -> "1000379"  [label="AST: "];
"1000381" -> "1000379"  [label="AST: "];
"1000384" -> "1000379"  [label="CFG: "];
"1000379" -> "1000387"  [label="DDG: client"];
"1000379" -> "1000387"  [label="DDG: ion_free(client, cleanup_handle)"];
"1000379" -> "1000387"  [label="DDG: cleanup_handle"];
"1000325" -> "1000379"  [label="DDG: client"];
"1000234" -> "1000379"  [label="DDG: client"];
"1000296" -> "1000379"  [label="DDG: client"];
"1000345" -> "1000379"  [label="DDG: client"];
"1000270" -> "1000379"  [label="DDG: client"];
"1000164" -> "1000379"  [label="DDG: client"];
"1000118" -> "1000379"  [label="DDG: cleanup_handle"];
"1000201" -> "1000379"  [label="DDG: cleanup_handle"];
"1000325" -> "1000323"  [label="AST: "];
"1000325" -> "1000327"  [label="CFG: "];
"1000326" -> "1000325"  [label="AST: "];
"1000327" -> "1000325"  [label="AST: "];
"1000323" -> "1000325"  [label="CFG: "];
"1000325" -> "1000387"  [label="DDG: client"];
"1000325" -> "1000387"  [label="DDG: data.fd.fd"];
"1000325" -> "1000323"  [label="DDG: client"];
"1000325" -> "1000323"  [label="DDG: data.fd.fd"];
"1000106" -> "1000325"  [label="DDG: client"];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000108" -> "1000106"  [label="AST: "];
"1000113" -> "1000106"  [label="CFG: "];
"1000106" -> "1000387"  [label="DDG: filp->private_data"];
"1000106" -> "1000387"  [label="DDG: client"];
"1000106" -> "1000164"  [label="DDG: client"];
"1000106" -> "1000215"  [label="DDG: client"];
"1000106" -> "1000251"  [label="DDG: client"];
"1000106" -> "1000296"  [label="DDG: client"];
"1000106" -> "1000345"  [label="DDG: client"];
"1000234" -> "1000206"  [label="AST: "];
"1000234" -> "1000236"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000236" -> "1000234"  [label="AST: "];
"1000238" -> "1000234"  [label="CFG: "];
"1000234" -> "1000387"  [label="DDG: client"];
"1000234" -> "1000387"  [label="DDG: ion_free_nolock(client, handle)"];
"1000215" -> "1000234"  [label="DDG: client"];
"1000223" -> "1000234"  [label="DDG: handle"];
"1000234" -> "1000237"  [label="DDG: handle"];
"1000215" -> "1000213"  [label="AST: "];
"1000215" -> "1000217"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000217" -> "1000215"  [label="AST: "];
"1000213" -> "1000215"  [label="CFG: "];
"1000215" -> "1000387"  [label="DDG: client"];
"1000215" -> "1000387"  [label="DDG: data.handle.handle"];
"1000215" -> "1000213"  [label="DDG: client"];
"1000215" -> "1000213"  [label="DDG: data.handle.handle"];
"1000223" -> "1000222"  [label="AST: "];
"1000223" -> "1000224"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000229" -> "1000223"  [label="CFG: "];
"1000235" -> "1000223"  [label="CFG: "];
"1000223" -> "1000387"  [label="DDG: IS_ERR(handle)"];
"1000213" -> "1000223"  [label="DDG: handle"];
"1000223" -> "1000232"  [label="DDG: handle"];
"1000213" -> "1000206"  [label="AST: "];
"1000214" -> "1000213"  [label="AST: "];
"1000224" -> "1000213"  [label="CFG: "];
"1000213" -> "1000387"  [label="DDG: ion_handle_get_by_id_nolock(client, data.handle.handle)"];
"1000296" -> "1000294"  [label="AST: "];
"1000296" -> "1000298"  [label="CFG: "];
"1000297" -> "1000296"  [label="AST: "];
"1000298" -> "1000296"  [label="AST: "];
"1000294" -> "1000296"  [label="CFG: "];
"1000296" -> "1000387"  [label="DDG: data.fd.fd"];
"1000296" -> "1000387"  [label="DDG: client"];
"1000296" -> "1000294"  [label="DDG: client"];
"1000296" -> "1000294"  [label="DDG: data.fd.fd"];
"1000345" -> "1000343"  [label="AST: "];
"1000345" -> "1000352"  [label="CFG: "];
"1000346" -> "1000345"  [label="AST: "];
"1000347" -> "1000345"  [label="AST: "];
"1000352" -> "1000345"  [label="AST: "];
"1000343" -> "1000345"  [label="CFG: "];
"1000345" -> "1000387"  [label="DDG: data.custom.cmd"];
"1000345" -> "1000387"  [label="DDG: data.custom.arg"];
"1000345" -> "1000387"  [label="DDG: client"];
"1000345" -> "1000343"  [label="DDG: client"];
"1000345" -> "1000343"  [label="DDG: data.custom.cmd"];
"1000345" -> "1000343"  [label="DDG: data.custom.arg"];
"1000270" -> "1000264"  [label="AST: "];
"1000270" -> "1000272"  [label="CFG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000272" -> "1000270"  [label="AST: "];
"1000264" -> "1000270"  [label="CFG: "];
"1000270" -> "1000387"  [label="DDG: client"];
"1000270" -> "1000264"  [label="DDG: client"];
"1000270" -> "1000264"  [label="DDG: handle"];
"1000251" -> "1000270"  [label="DDG: client"];
"1000259" -> "1000270"  [label="DDG: handle"];
"1000270" -> "1000273"  [label="DDG: handle"];
"1000251" -> "1000249"  [label="AST: "];
"1000251" -> "1000253"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="AST: "];
"1000249" -> "1000251"  [label="CFG: "];
"1000251" -> "1000387"  [label="DDG: data.handle.handle"];
"1000251" -> "1000387"  [label="DDG: client"];
"1000251" -> "1000249"  [label="DDG: client"];
"1000251" -> "1000249"  [label="DDG: data.handle.handle"];
"1000259" -> "1000258"  [label="AST: "];
"1000259" -> "1000260"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000263" -> "1000259"  [label="CFG: "];
"1000267" -> "1000259"  [label="CFG: "];
"1000259" -> "1000387"  [label="DDG: IS_ERR(handle)"];
"1000249" -> "1000259"  [label="DDG: handle"];
"1000259" -> "1000262"  [label="DDG: handle"];
"1000249" -> "1000247"  [label="AST: "];
"1000250" -> "1000249"  [label="AST: "];
"1000260" -> "1000249"  [label="CFG: "];
"1000249" -> "1000387"  [label="DDG: ion_handle_get_by_id(client, data.handle.handle)"];
"1000164" -> "1000162"  [label="AST: "];
"1000164" -> "1000181"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000166" -> "1000164"  [label="AST: "];
"1000171" -> "1000164"  [label="AST: "];
"1000176" -> "1000164"  [label="AST: "];
"1000181" -> "1000164"  [label="AST: "];
"1000162" -> "1000164"  [label="CFG: "];
"1000164" -> "1000387"  [label="DDG: data.allocation.flags"];
"1000164" -> "1000387"  [label="DDG: data.allocation.len"];
"1000164" -> "1000387"  [label="DDG: data.allocation.heap_id_mask"];
"1000164" -> "1000387"  [label="DDG: data.allocation.align"];
"1000164" -> "1000387"  [label="DDG: client"];
"1000164" -> "1000162"  [label="DDG: data.allocation.flags"];
"1000164" -> "1000162"  [label="DDG: data.allocation.len"];
"1000164" -> "1000162"  [label="DDG: data.allocation.heap_id_mask"];
"1000164" -> "1000162"  [label="DDG: client"];
"1000164" -> "1000162"  [label="DDG: data.allocation.align"];
"1000118" -> "1000104"  [label="AST: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="AST: "];
"1000123" -> "1000118"  [label="CFG: "];
"1000118" -> "1000387"  [label="DDG: NULL"];
"1000118" -> "1000387"  [label="DDG: cleanup_handle"];
"1000201" -> "1000160"  [label="AST: "];
"1000201" -> "1000203"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000203" -> "1000201"  [label="AST: "];
"1000204" -> "1000201"  [label="CFG: "];
"1000201" -> "1000387"  [label="DDG: handle"];
"1000201" -> "1000387"  [label="DDG: cleanup_handle"];
"1000187" -> "1000201"  [label="DDG: handle"];
"1000187" -> "1000186"  [label="AST: "];
"1000187" -> "1000188"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000191" -> "1000187"  [label="CFG: "];
"1000195" -> "1000187"  [label="CFG: "];
"1000187" -> "1000387"  [label="DDG: IS_ERR(handle)"];
"1000162" -> "1000187"  [label="DDG: handle"];
"1000187" -> "1000190"  [label="DDG: handle"];
"1000162" -> "1000160"  [label="AST: "];
"1000163" -> "1000162"  [label="AST: "];
"1000188" -> "1000162"  [label="CFG: "];
"1000162" -> "1000387"  [label="DDG: ion_alloc(client, data.allocation.len,\n\t\t\t\t\t\tdata.allocation.align,\n\t\t\t\t\t\tdata.allocation.heap_id_mask,\n\t\t\t\t\t\tdata.allocation.flags)"];
}
