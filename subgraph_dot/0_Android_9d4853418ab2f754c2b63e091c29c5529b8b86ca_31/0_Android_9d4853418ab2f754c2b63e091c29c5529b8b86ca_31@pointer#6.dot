digraph "0_Android_9d4853418ab2f754c2b63e091c29c5529b8b86ca_31@pointer" {
"1000273" [label="(Call,logerror(image, name, \": write failed\", \"\"))"];
"1000107" [label="(MethodParameterIn,Image *image)"];
"1000228" [label="(Call,png_image_write_to_file(&image->image, name, convert_to_8bit,\n         image->buffer+16, (png_int_32)image->stride, image->colormap))"];
"1000221" [label="(Call,sprintf(name, \"%s%d.png\", tmpf, ++counter))"];
"1000225" [label="(Call,++counter)"];
"1000217" [label="(Call,counter = 0)"];
"1000108" [label="(MethodParameterIn,int convert_to_8bit)"];
"1000240" [label="(Call,(png_int_32)image->stride)"];
"1000272" [label="(Return,return logerror(image, name, \": write failed\", \"\");)"];
"1000234" [label="(Identifier,convert_to_8bit)"];
"1000227" [label="(ControlStructure,if (png_image_write_to_file(&image->image, name, convert_to_8bit,\n         image->buffer+16, (png_int_32)image->stride, image->colormap)))"];
"1000316" [label="(Call,logerror(image, image->file_name, \": format changed on read: \",\n            output->file_name))"];
"1000250" [label="(Identifier,output)"];
"1000201" [label="(Call,logerror(image, \"tmpfile\", \": write failed\", \"\"))"];
"1000273" [label="(Call,logerror(image, name, \": write failed\", \"\"))"];
"1000219" [label="(Literal,0)"];
"1000277" [label="(Literal,\"\")"];
"1000208" [label="(Call,logerror(image, \"tmpfile\", \": open: \", strerror(errno)))"];
"1000224" [label="(Identifier,tmpf)"];
"1000233" [label="(Identifier,name)"];
"1000229" [label="(Call,&image->image)"];
"1000340" [label="(MethodReturn,RET)"];
"1000276" [label="(Literal,\": write failed\")"];
"1000231" [label="(Identifier,image)"];
"1000223" [label="(Literal,\"%s%d.png\")"];
"1000218" [label="(Identifier,counter)"];
"1000228" [label="(Call,png_image_write_to_file(&image->image, name, convert_to_8bit,\n         image->buffer+16, (png_int_32)image->stride, image->colormap))"];
"1000275" [label="(Identifier,name)"];
"1000242" [label="(Call,image->stride)"];
"1000272" [label="(Return,return logerror(image, name, \": write failed\", \"\");)"];
"1000107" [label="(MethodParameterIn,Image *image)"];
"1000245" [label="(Call,image->colormap)"];
"1000260" [label="(Call,strcpy(output->tmpfile_name, name))"];
"1000191" [label="(Call,logclose(image, f, \"tmpfile\", \": flush: \"))"];
"1000221" [label="(Call,sprintf(name, \"%s%d.png\", tmpf, ++counter))"];
"1000267" [label="(Call,checkopaque(image))"];
"1000217" [label="(Call,counter = 0)"];
"1000222" [label="(Identifier,name)"];
"1000271" [label="(ControlStructure,else)"];
"1000326" [label="(Call,compare_two_images(image, output, 0/*via linear*/, NULL))"];
"1000226" [label="(Identifier,counter)"];
"1000225" [label="(Call,++counter)"];
"1000246" [label="(Identifier,image)"];
"1000240" [label="(Call,(png_int_32)image->stride)"];
"1000140" [label="(Call,png_image_write_to_stdio(&image->image, f, convert_to_8bit,\n            image->buffer+16, (png_int_32)image->stride, image->colormap))"];
"1000108" [label="(MethodParameterIn,int convert_to_8bit)"];
"1000215" [label="(Block,)"];
"1000235" [label="(Call,image->buffer+16)"];
"1000274" [label="(Identifier,image)"];
"1000185" [label="(Call,checkopaque(image))"];
"1000273" -> "1000272"  [label="AST: "];
"1000273" -> "1000277"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000275" -> "1000273"  [label="AST: "];
"1000276" -> "1000273"  [label="AST: "];
"1000277" -> "1000273"  [label="AST: "];
"1000272" -> "1000273"  [label="CFG: "];
"1000273" -> "1000340"  [label="DDG: "];
"1000273" -> "1000340"  [label="DDG: "];
"1000273" -> "1000340"  [label="DDG: "];
"1000273" -> "1000272"  [label="DDG: "];
"1000107" -> "1000273"  [label="DDG: "];
"1000228" -> "1000273"  [label="DDG: "];
"1000107" -> "1000105"  [label="AST: "];
"1000107" -> "1000340"  [label="DDG: "];
"1000107" -> "1000185"  [label="DDG: "];
"1000107" -> "1000191"  [label="DDG: "];
"1000107" -> "1000201"  [label="DDG: "];
"1000107" -> "1000208"  [label="DDG: "];
"1000107" -> "1000267"  [label="DDG: "];
"1000107" -> "1000316"  [label="DDG: "];
"1000107" -> "1000326"  [label="DDG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000228" -> "1000245"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000233" -> "1000228"  [label="AST: "];
"1000234" -> "1000228"  [label="AST: "];
"1000235" -> "1000228"  [label="AST: "];
"1000240" -> "1000228"  [label="AST: "];
"1000245" -> "1000228"  [label="AST: "];
"1000250" -> "1000228"  [label="CFG: "];
"1000274" -> "1000228"  [label="CFG: "];
"1000228" -> "1000340"  [label="DDG: "];
"1000228" -> "1000340"  [label="DDG: "];
"1000228" -> "1000340"  [label="DDG: "];
"1000228" -> "1000340"  [label="DDG: "];
"1000228" -> "1000340"  [label="DDG: "];
"1000228" -> "1000340"  [label="DDG: "];
"1000221" -> "1000228"  [label="DDG: "];
"1000108" -> "1000228"  [label="DDG: "];
"1000240" -> "1000228"  [label="DDG: "];
"1000228" -> "1000260"  [label="DDG: "];
"1000221" -> "1000215"  [label="AST: "];
"1000221" -> "1000225"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000224" -> "1000221"  [label="AST: "];
"1000225" -> "1000221"  [label="AST: "];
"1000231" -> "1000221"  [label="CFG: "];
"1000221" -> "1000340"  [label="DDG: "];
"1000221" -> "1000340"  [label="DDG: "];
"1000225" -> "1000221"  [label="DDG: "];
"1000225" -> "1000226"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000225" -> "1000340"  [label="DDG: "];
"1000217" -> "1000225"  [label="DDG: "];
"1000217" -> "1000215"  [label="AST: "];
"1000217" -> "1000219"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000219" -> "1000217"  [label="AST: "];
"1000222" -> "1000217"  [label="CFG: "];
"1000108" -> "1000105"  [label="AST: "];
"1000108" -> "1000340"  [label="DDG: "];
"1000108" -> "1000140"  [label="DDG: "];
"1000240" -> "1000242"  [label="CFG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000242" -> "1000240"  [label="AST: "];
"1000246" -> "1000240"  [label="CFG: "];
"1000240" -> "1000340"  [label="DDG: "];
"1000272" -> "1000271"  [label="AST: "];
"1000340" -> "1000272"  [label="CFG: "];
"1000272" -> "1000340"  [label="DDG: "];
}
