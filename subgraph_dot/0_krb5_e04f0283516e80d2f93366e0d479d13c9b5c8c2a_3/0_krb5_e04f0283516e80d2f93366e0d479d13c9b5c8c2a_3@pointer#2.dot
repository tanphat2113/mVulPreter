digraph "0_krb5_e04f0283516e80d2f93366e0d479d13c9b5c8c2a_3@pointer" {
"1000287" [label="(Call,*minor_status = code)"];
"1000283" [label="(Call,code != 0)"];
"1000276" [label="(Call,code == KRB5_BAD_MSIZE)"];
"1000266" [label="(Call,code = iakerb_initiator_step(ctx,\n                                     kcred,\n                                     kname,\n                                     time_req,\n                                     input_token,\n                                     output_token))"];
"1000268" [label="(Call,iakerb_initiator_step(ctx,\n                                     kcred,\n                                     kname,\n                                     time_req,\n                                     input_token,\n                                     output_token))"];
"1000185" [label="(Call,ctx = (iakerb_ctx_id_t)*context_handle)"];
"1000187" [label="(Call,(iakerb_ctx_id_t)*context_handle)"];
"1000132" [label="(Call,*context_handle == GSS_C_NO_CONTEXT)"];
"1000256" [label="(Call,(gss_ctx_id_t)ctx)"];
"1000234" [label="(Call,iakerb_get_initial_state(ctx, kcred, kname, time_req,\n                                        &ctx->state))"];
"1000221" [label="(Call,kcred = (krb5_gss_cred_id_t)claimant_cred_handle)"];
"1000223" [label="(Call,(krb5_gss_cred_id_t)claimant_cred_handle)"];
"1000207" [label="(Call,kg_cred_resolve(minor_status, ctx->k5c,\n                                   claimant_cred_handle, target_name))"];
"1000162" [label="(Call,iakerb_gss_acquire_cred(minor_status, NULL,\n                                                   GSS_C_INDEFINITE,\n                                                   GSS_C_NULL_OID_SET,\n                                                   GSS_C_INITIATE,\n                                                   &ctx->defcred, NULL, NULL))"];
"1000103" [label="(MethodParameterIn,OM_uint32 *minor_status)"];
"1000156" [label="(Call,claimant_cred_handle == GSS_C_NO_CREDENTIAL)"];
"1000104" [label="(MethodParameterIn,gss_cred_id_t claimant_cred_handle)"];
"1000192" [label="(Call,claimant_cred_handle == GSS_C_NO_CREDENTIAL)"];
"1000195" [label="(Call,claimant_cred_handle = ctx->defcred)"];
"1000178" [label="(Call,claimant_cred_handle = ctx->defcred)"];
"1000202" [label="(Call,(krb5_gss_name_t)target_name)"];
"1000106" [label="(MethodParameterIn,gss_name_t target_name)"];
"1000200" [label="(Call,kname = (krb5_gss_name_t)target_name)"];
"1000109" [label="(MethodParameterIn,OM_uint32 time_req)"];
"1000111" [label="(MethodParameterIn,gss_buffer_t input_token)"];
"1000113" [label="(MethodParameterIn,gss_buffer_t output_token)"];
"1000326" [label="(Call,krb5_gss_init_sec_context_ext(minor_status,\n                                                     (gss_cred_id_t) kcred,\n                                                     &ctx->gssc,\n                                                     target_name,\n                                                     (gss_OID)gss_mech_iakerb,\n                                                     req_flags,\n                                                     time_req,\n                                                     input_chan_bindings,\n                                                     input_token,\n                                                     NULL,\n                                                     output_token,\n                                                      ret_flags,\n                                                      time_rec,\n                                                      &exts))"];
"1000258" [label="(Identifier,ctx)"];
"1000311" [label="(Call,iakerb_make_exts(ctx, &exts))"];
"1000186" [label="(Identifier,ctx)"];
"1000273" [label="(Identifier,input_token)"];
"1000232" [label="(Call,code = iakerb_get_initial_state(ctx, kcred, kname, time_req,\n                                        &ctx->state))"];
"1000212" [label="(Identifier,claimant_cred_handle)"];
"1000270" [label="(Identifier,kcred)"];
"1000277" [label="(Identifier,code)"];
"1000213" [label="(Identifier,target_name)"];
"1000156" [label="(Call,claimant_cred_handle == GSS_C_NO_CREDENTIAL)"];
"1000290" [label="(Identifier,code)"];
"1000271" [label="(Identifier,kname)"];
"1000178" [label="(Call,claimant_cred_handle = ctx->defcred)"];
"1000162" [label="(Call,iakerb_gss_acquire_cred(minor_status, NULL,\n                                                   GSS_C_INDEFINITE,\n                                                   GSS_C_NULL_OID_SET,\n                                                   GSS_C_INITIATE,\n                                                   &ctx->defcred, NULL, NULL))"];
"1000265" [label="(Block,)"];
"1000275" [label="(ControlStructure,if (code == KRB5_BAD_MSIZE))"];
"1000116" [label="(Block,)"];
"1000195" [label="(Call,claimant_cred_handle = ctx->defcred)"];
"1000179" [label="(Identifier,claimant_cred_handle)"];
"1000132" [label="(Call,*context_handle == GSS_C_NO_CONTEXT)"];
"1000234" [label="(Call,iakerb_get_initial_state(ctx, kcred, kname, time_req,\n                                        &ctx->state))"];
"1000209" [label="(Call,ctx->k5c)"];
"1000328" [label="(Call,(gss_cred_id_t) kcred)"];
"1000236" [label="(Identifier,kcred)"];
"1000227" [label="(Identifier,major_status)"];
"1000287" [label="(Call,*minor_status = code)"];
"1000321" [label="(Call,input_token = GSS_C_NO_BUFFER)"];
"1000291" [label="(ControlStructure,goto cleanup;)"];
"1000256" [label="(Call,(gss_ctx_id_t)ctx)"];
"1000167" [label="(Identifier,GSS_C_INITIATE)"];
"1000371" [label="(Call,actual_mech_type != NULL)"];
"1000205" [label="(Call,major_status = kg_cred_resolve(minor_status, ctx->k5c,\n                                   claimant_cred_handle, target_name))"];
"1000206" [label="(Identifier,major_status)"];
"1000109" [label="(MethodParameterIn,OM_uint32 time_req)"];
"1000189" [label="(Call,*context_handle)"];
"1000161" [label="(Identifier,major_status)"];
"1000164" [label="(Identifier,NULL)"];
"1000160" [label="(Call,major_status = iakerb_gss_acquire_cred(minor_status, NULL,\n                                                   GSS_C_INDEFINITE,\n                                                   GSS_C_NULL_OID_SET,\n                                                   GSS_C_INITIATE,\n                                                   &ctx->defcred, NULL, NULL))"];
"1000200" [label="(Call,kname = (krb5_gss_name_t)target_name)"];
"1000168" [label="(Call,&ctx->defcred)"];
"1000272" [label="(Identifier,time_req)"];
"1000288" [label="(Call,*minor_status)"];
"1000192" [label="(Call,claimant_cred_handle == GSS_C_NO_CREDENTIAL)"];
"1000260" [label="(Call,ctx->state != IAKERB_AP_REQ)"];
"1000285" [label="(Literal,0)"];
"1000130" [label="(Call,initialContextToken = (*context_handle == GSS_C_NO_CONTEXT))"];
"1000222" [label="(Identifier,kcred)"];
"1000155" [label="(ControlStructure,if (claimant_cred_handle == GSS_C_NO_CREDENTIAL))"];
"1000157" [label="(Identifier,claimant_cred_handle)"];
"1000104" [label="(MethodParameterIn,gss_cred_id_t claimant_cred_handle)"];
"1000111" [label="(MethodParameterIn,gss_buffer_t input_token)"];
"1000204" [label="(Identifier,target_name)"];
"1000289" [label="(Identifier,minor_status)"];
"1000133" [label="(Call,*context_handle)"];
"1000421" [label="(MethodReturn,RET)"];
"1000103" [label="(MethodParameterIn,OM_uint32 *minor_status)"];
"1000106" [label="(MethodParameterIn,gss_name_t target_name)"];
"1000282" [label="(ControlStructure,if (code != 0))"];
"1000269" [label="(Identifier,ctx)"];
"1000253" [label="(Call,*context_handle = (gss_ctx_id_t)ctx)"];
"1000268" [label="(Call,iakerb_initiator_step(ctx,\n                                     kcred,\n                                     kname,\n                                     time_req,\n                                     input_token,\n                                     output_token))"];
"1000283" [label="(Call,code != 0)"];
"1000274" [label="(Identifier,output_token)"];
"1000280" [label="(Identifier,major_status)"];
"1000276" [label="(Call,code == KRB5_BAD_MSIZE)"];
"1000158" [label="(Identifier,GSS_C_NO_CREDENTIAL)"];
"1000208" [label="(Identifier,minor_status)"];
"1000278" [label="(Identifier,KRB5_BAD_MSIZE)"];
"1000197" [label="(Call,ctx->defcred)"];
"1000166" [label="(Identifier,GSS_C_NULL_OID_SET)"];
"1000413" [label="(Call,iakerb_release_context(ctx))"];
"1000196" [label="(Identifier,claimant_cred_handle)"];
"1000316" [label="(Call,ctx->gssc == GSS_C_NO_CONTEXT)"];
"1000221" [label="(Call,kcred = (krb5_gss_cred_id_t)claimant_cred_handle)"];
"1000267" [label="(Identifier,code)"];
"1000191" [label="(ControlStructure,if (claimant_cred_handle == GSS_C_NO_CREDENTIAL))"];
"1000223" [label="(Call,(krb5_gss_cred_id_t)claimant_cred_handle)"];
"1000194" [label="(Identifier,GSS_C_NO_CREDENTIAL)"];
"1000180" [label="(Call,ctx->defcred)"];
"1000284" [label="(Identifier,code)"];
"1000225" [label="(Identifier,claimant_cred_handle)"];
"1000295" [label="(Identifier,ctx)"];
"1000165" [label="(Identifier,GSS_C_INDEFINITE)"];
"1000286" [label="(Block,)"];
"1000113" [label="(MethodParameterIn,gss_buffer_t output_token)"];
"1000184" [label="(Block,)"];
"1000135" [label="(Identifier,GSS_C_NO_CONTEXT)"];
"1000237" [label="(Identifier,kname)"];
"1000266" [label="(Call,code = iakerb_initiator_step(ctx,\n                                     kcred,\n                                     kname,\n                                     time_req,\n                                     input_token,\n                                     output_token))"];
"1000207" [label="(Call,kg_cred_resolve(minor_status, ctx->k5c,\n                                   claimant_cred_handle, target_name))"];
"1000159" [label="(Block,)"];
"1000187" [label="(Call,(iakerb_ctx_id_t)*context_handle)"];
"1000293" [label="(Call,ctx->state == IAKERB_AP_REQ)"];
"1000163" [label="(Identifier,minor_status)"];
"1000235" [label="(Identifier,ctx)"];
"1000202" [label="(Call,(krb5_gss_name_t)target_name)"];
"1000238" [label="(Identifier,time_req)"];
"1000201" [label="(Identifier,kname)"];
"1000173" [label="(Identifier,NULL)"];
"1000415" [label="(Call,*context_handle = GSS_C_NO_CONTEXT)"];
"1000172" [label="(Identifier,NULL)"];
"1000185" [label="(Call,ctx = (iakerb_ctx_id_t)*context_handle)"];
"1000193" [label="(Identifier,claimant_cred_handle)"];
"1000239" [label="(Call,&ctx->state)"];
"1000287" -> "1000286"  [label="AST: "];
"1000287" -> "1000290"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000290" -> "1000287"  [label="AST: "];
"1000291" -> "1000287"  [label="CFG: "];
"1000287" -> "1000421"  [label="DDG: code"];
"1000287" -> "1000421"  [label="DDG: *minor_status"];
"1000283" -> "1000287"  [label="DDG: code"];
"1000283" -> "1000282"  [label="AST: "];
"1000283" -> "1000285"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000285" -> "1000283"  [label="AST: "];
"1000289" -> "1000283"  [label="CFG: "];
"1000295" -> "1000283"  [label="CFG: "];
"1000283" -> "1000421"  [label="DDG: code"];
"1000283" -> "1000421"  [label="DDG: code != 0"];
"1000276" -> "1000283"  [label="DDG: code"];
"1000276" -> "1000275"  [label="AST: "];
"1000276" -> "1000278"  [label="CFG: "];
"1000277" -> "1000276"  [label="AST: "];
"1000278" -> "1000276"  [label="AST: "];
"1000280" -> "1000276"  [label="CFG: "];
"1000284" -> "1000276"  [label="CFG: "];
"1000276" -> "1000421"  [label="DDG: KRB5_BAD_MSIZE"];
"1000276" -> "1000421"  [label="DDG: code == KRB5_BAD_MSIZE"];
"1000266" -> "1000276"  [label="DDG: code"];
"1000266" -> "1000265"  [label="AST: "];
"1000266" -> "1000268"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="AST: "];
"1000277" -> "1000266"  [label="CFG: "];
"1000266" -> "1000421"  [label="DDG: iakerb_initiator_step(ctx,\n                                     kcred,\n                                     kname,\n                                     time_req,\n                                     input_token,\n                                     output_token)"];
"1000268" -> "1000266"  [label="DDG: input_token"];
"1000268" -> "1000266"  [label="DDG: kname"];
"1000268" -> "1000266"  [label="DDG: time_req"];
"1000268" -> "1000266"  [label="DDG: output_token"];
"1000268" -> "1000266"  [label="DDG: kcred"];
"1000268" -> "1000266"  [label="DDG: ctx"];
"1000268" -> "1000274"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000270" -> "1000268"  [label="AST: "];
"1000271" -> "1000268"  [label="AST: "];
"1000272" -> "1000268"  [label="AST: "];
"1000273" -> "1000268"  [label="AST: "];
"1000274" -> "1000268"  [label="AST: "];
"1000268" -> "1000421"  [label="DDG: ctx"];
"1000268" -> "1000421"  [label="DDG: output_token"];
"1000268" -> "1000421"  [label="DDG: input_token"];
"1000268" -> "1000421"  [label="DDG: kcred"];
"1000268" -> "1000421"  [label="DDG: time_req"];
"1000268" -> "1000421"  [label="DDG: kname"];
"1000185" -> "1000268"  [label="DDG: ctx"];
"1000256" -> "1000268"  [label="DDG: ctx"];
"1000234" -> "1000268"  [label="DDG: kcred"];
"1000234" -> "1000268"  [label="DDG: kname"];
"1000234" -> "1000268"  [label="DDG: time_req"];
"1000221" -> "1000268"  [label="DDG: kcred"];
"1000200" -> "1000268"  [label="DDG: kname"];
"1000109" -> "1000268"  [label="DDG: time_req"];
"1000111" -> "1000268"  [label="DDG: input_token"];
"1000113" -> "1000268"  [label="DDG: output_token"];
"1000268" -> "1000311"  [label="DDG: ctx"];
"1000268" -> "1000328"  [label="DDG: kcred"];
"1000268" -> "1000326"  [label="DDG: time_req"];
"1000268" -> "1000326"  [label="DDG: input_token"];
"1000268" -> "1000326"  [label="DDG: output_token"];
"1000268" -> "1000413"  [label="DDG: ctx"];
"1000185" -> "1000184"  [label="AST: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="AST: "];
"1000193" -> "1000185"  [label="CFG: "];
"1000185" -> "1000421"  [label="DDG: ctx"];
"1000185" -> "1000421"  [label="DDG: (iakerb_ctx_id_t)*context_handle"];
"1000187" -> "1000185"  [label="DDG: *context_handle"];
"1000185" -> "1000234"  [label="DDG: ctx"];
"1000185" -> "1000311"  [label="DDG: ctx"];
"1000185" -> "1000413"  [label="DDG: ctx"];
"1000187" -> "1000189"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000189" -> "1000187"  [label="AST: "];
"1000187" -> "1000421"  [label="DDG: *context_handle"];
"1000132" -> "1000187"  [label="DDG: *context_handle"];
"1000132" -> "1000130"  [label="AST: "];
"1000132" -> "1000135"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000135" -> "1000132"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000132" -> "1000421"  [label="DDG: *context_handle"];
"1000132" -> "1000421"  [label="DDG: GSS_C_NO_CONTEXT"];
"1000132" -> "1000130"  [label="DDG: *context_handle"];
"1000132" -> "1000130"  [label="DDG: GSS_C_NO_CONTEXT"];
"1000132" -> "1000316"  [label="DDG: GSS_C_NO_CONTEXT"];
"1000132" -> "1000415"  [label="DDG: GSS_C_NO_CONTEXT"];
"1000256" -> "1000253"  [label="AST: "];
"1000256" -> "1000258"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000258" -> "1000256"  [label="AST: "];
"1000253" -> "1000256"  [label="CFG: "];
"1000256" -> "1000421"  [label="DDG: ctx"];
"1000256" -> "1000253"  [label="DDG: ctx"];
"1000234" -> "1000256"  [label="DDG: ctx"];
"1000256" -> "1000311"  [label="DDG: ctx"];
"1000256" -> "1000413"  [label="DDG: ctx"];
"1000234" -> "1000232"  [label="AST: "];
"1000234" -> "1000239"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000236" -> "1000234"  [label="AST: "];
"1000237" -> "1000234"  [label="AST: "];
"1000238" -> "1000234"  [label="AST: "];
"1000239" -> "1000234"  [label="AST: "];
"1000232" -> "1000234"  [label="CFG: "];
"1000234" -> "1000421"  [label="DDG: kname"];
"1000234" -> "1000421"  [label="DDG: kcred"];
"1000234" -> "1000421"  [label="DDG: &ctx->state"];
"1000234" -> "1000421"  [label="DDG: ctx"];
"1000234" -> "1000421"  [label="DDG: time_req"];
"1000234" -> "1000232"  [label="DDG: time_req"];
"1000234" -> "1000232"  [label="DDG: kcred"];
"1000234" -> "1000232"  [label="DDG: &ctx->state"];
"1000234" -> "1000232"  [label="DDG: ctx"];
"1000234" -> "1000232"  [label="DDG: kname"];
"1000221" -> "1000234"  [label="DDG: kcred"];
"1000200" -> "1000234"  [label="DDG: kname"];
"1000109" -> "1000234"  [label="DDG: time_req"];
"1000234" -> "1000260"  [label="DDG: &ctx->state"];
"1000234" -> "1000293"  [label="DDG: &ctx->state"];
"1000234" -> "1000328"  [label="DDG: kcred"];
"1000234" -> "1000326"  [label="DDG: time_req"];
"1000234" -> "1000413"  [label="DDG: ctx"];
"1000221" -> "1000116"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000227" -> "1000221"  [label="CFG: "];
"1000221" -> "1000421"  [label="DDG: (krb5_gss_cred_id_t)claimant_cred_handle"];
"1000221" -> "1000421"  [label="DDG: kcred"];
"1000223" -> "1000221"  [label="DDG: claimant_cred_handle"];
"1000221" -> "1000328"  [label="DDG: kcred"];
"1000223" -> "1000225"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000225" -> "1000223"  [label="AST: "];
"1000223" -> "1000421"  [label="DDG: claimant_cred_handle"];
"1000207" -> "1000223"  [label="DDG: claimant_cred_handle"];
"1000104" -> "1000223"  [label="DDG: claimant_cred_handle"];
"1000207" -> "1000205"  [label="AST: "];
"1000207" -> "1000213"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000209" -> "1000207"  [label="AST: "];
"1000212" -> "1000207"  [label="AST: "];
"1000213" -> "1000207"  [label="AST: "];
"1000205" -> "1000207"  [label="CFG: "];
"1000207" -> "1000421"  [label="DDG: ctx->k5c"];
"1000207" -> "1000421"  [label="DDG: minor_status"];
"1000207" -> "1000421"  [label="DDG: claimant_cred_handle"];
"1000207" -> "1000421"  [label="DDG: target_name"];
"1000207" -> "1000205"  [label="DDG: minor_status"];
"1000207" -> "1000205"  [label="DDG: ctx->k5c"];
"1000207" -> "1000205"  [label="DDG: claimant_cred_handle"];
"1000207" -> "1000205"  [label="DDG: target_name"];
"1000162" -> "1000207"  [label="DDG: minor_status"];
"1000103" -> "1000207"  [label="DDG: minor_status"];
"1000156" -> "1000207"  [label="DDG: claimant_cred_handle"];
"1000192" -> "1000207"  [label="DDG: claimant_cred_handle"];
"1000195" -> "1000207"  [label="DDG: claimant_cred_handle"];
"1000178" -> "1000207"  [label="DDG: claimant_cred_handle"];
"1000104" -> "1000207"  [label="DDG: claimant_cred_handle"];
"1000202" -> "1000207"  [label="DDG: target_name"];
"1000106" -> "1000207"  [label="DDG: target_name"];
"1000207" -> "1000326"  [label="DDG: minor_status"];
"1000207" -> "1000326"  [label="DDG: target_name"];
"1000162" -> "1000160"  [label="AST: "];
"1000162" -> "1000173"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000164" -> "1000162"  [label="AST: "];
"1000165" -> "1000162"  [label="AST: "];
"1000166" -> "1000162"  [label="AST: "];
"1000167" -> "1000162"  [label="AST: "];
"1000168" -> "1000162"  [label="AST: "];
"1000172" -> "1000162"  [label="AST: "];
"1000173" -> "1000162"  [label="AST: "];
"1000160" -> "1000162"  [label="CFG: "];
"1000162" -> "1000421"  [label="DDG: &ctx->defcred"];
"1000162" -> "1000421"  [label="DDG: NULL"];
"1000162" -> "1000421"  [label="DDG: GSS_C_NULL_OID_SET"];
"1000162" -> "1000421"  [label="DDG: GSS_C_INITIATE"];
"1000162" -> "1000421"  [label="DDG: minor_status"];
"1000162" -> "1000421"  [label="DDG: GSS_C_INDEFINITE"];
"1000162" -> "1000160"  [label="DDG: &ctx->defcred"];
"1000162" -> "1000160"  [label="DDG: NULL"];
"1000162" -> "1000160"  [label="DDG: GSS_C_NULL_OID_SET"];
"1000162" -> "1000160"  [label="DDG: minor_status"];
"1000162" -> "1000160"  [label="DDG: GSS_C_INDEFINITE"];
"1000162" -> "1000160"  [label="DDG: GSS_C_INITIATE"];
"1000103" -> "1000162"  [label="DDG: minor_status"];
"1000162" -> "1000178"  [label="DDG: &ctx->defcred"];
"1000162" -> "1000326"  [label="DDG: NULL"];
"1000162" -> "1000371"  [label="DDG: NULL"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000421"  [label="DDG: minor_status"];
"1000103" -> "1000326"  [label="DDG: minor_status"];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000158"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000158" -> "1000156"  [label="AST: "];
"1000161" -> "1000156"  [label="CFG: "];
"1000201" -> "1000156"  [label="CFG: "];
"1000156" -> "1000421"  [label="DDG: claimant_cred_handle"];
"1000156" -> "1000421"  [label="DDG: GSS_C_NO_CREDENTIAL"];
"1000156" -> "1000421"  [label="DDG: claimant_cred_handle == GSS_C_NO_CREDENTIAL"];
"1000104" -> "1000156"  [label="DDG: claimant_cred_handle"];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1000421"  [label="DDG: claimant_cred_handle"];
"1000104" -> "1000178"  [label="DDG: claimant_cred_handle"];
"1000104" -> "1000192"  [label="DDG: claimant_cred_handle"];
"1000104" -> "1000195"  [label="DDG: claimant_cred_handle"];
"1000192" -> "1000191"  [label="AST: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000194" -> "1000192"  [label="AST: "];
"1000196" -> "1000192"  [label="CFG: "];
"1000201" -> "1000192"  [label="CFG: "];
"1000192" -> "1000421"  [label="DDG: GSS_C_NO_CREDENTIAL"];
"1000192" -> "1000421"  [label="DDG: claimant_cred_handle == GSS_C_NO_CREDENTIAL"];
"1000195" -> "1000191"  [label="AST: "];
"1000195" -> "1000197"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000197" -> "1000195"  [label="AST: "];
"1000201" -> "1000195"  [label="CFG: "];
"1000195" -> "1000421"  [label="DDG: ctx->defcred"];
"1000178" -> "1000159"  [label="AST: "];
"1000178" -> "1000180"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000180" -> "1000178"  [label="AST: "];
"1000201" -> "1000178"  [label="CFG: "];
"1000178" -> "1000421"  [label="DDG: ctx->defcred"];
"1000202" -> "1000200"  [label="AST: "];
"1000202" -> "1000204"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000200" -> "1000202"  [label="CFG: "];
"1000202" -> "1000200"  [label="DDG: target_name"];
"1000106" -> "1000202"  [label="DDG: target_name"];
"1000106" -> "1000102"  [label="AST: "];
"1000106" -> "1000421"  [label="DDG: target_name"];
"1000106" -> "1000326"  [label="DDG: target_name"];
"1000200" -> "1000116"  [label="AST: "];
"1000201" -> "1000200"  [label="AST: "];
"1000206" -> "1000200"  [label="CFG: "];
"1000200" -> "1000421"  [label="DDG: kname"];
"1000200" -> "1000421"  [label="DDG: (krb5_gss_name_t)target_name"];
"1000109" -> "1000102"  [label="AST: "];
"1000109" -> "1000421"  [label="DDG: time_req"];
"1000109" -> "1000326"  [label="DDG: time_req"];
"1000111" -> "1000102"  [label="AST: "];
"1000111" -> "1000421"  [label="DDG: input_token"];
"1000111" -> "1000321"  [label="DDG: input_token"];
"1000111" -> "1000326"  [label="DDG: input_token"];
"1000113" -> "1000102"  [label="AST: "];
"1000113" -> "1000421"  [label="DDG: output_token"];
"1000113" -> "1000326"  [label="DDG: output_token"];
}
