digraph "1_linux_82939d7999dfc1f1998c4b1c12e2f19edbdff272_1@API" {
"1000238" [label="(Call,memcpy(buffer, bh->b_data + le16_to_cpu(entry->e_value_offs),\n\t\t       size))"];
"1000119" [label="(Call,ea_idebug(inode, \"name=%d.%s, buffer=%p, buffer_size=%ld\",\n \t\t  name_index, name, buffer, (long)buffer_size))"];
"1000117" [label="(Call,EXT4_GET_MB_CACHE(inode))"];
"1000101" [label="(MethodParameterIn,struct inode *inode)"];
"1000102" [label="(MethodParameterIn,int name_index)"];
"1000103" [label="(MethodParameterIn,const char *name)"];
"1000104" [label="(MethodParameterIn,void *buffer)"];
"1000125" [label="(Call,(long)buffer_size)"];
"1000105" [label="(MethodParameterIn,size_t buffer_size)"];
"1000244" [label="(Call,le16_to_cpu(entry->e_value_offs))"];
"1000234" [label="(Call,size > buffer_size)"];
"1000220" [label="(Call,size = le32_to_cpu(entry->e_value_size))"];
"1000222" [label="(Call,le32_to_cpu(entry->e_value_size))"];
"1000249" [label="(Call,error = size)"];
"1000255" [label="(Return,return error;)"];
"1000238" [label="(Call,memcpy(buffer, bh->b_data + le16_to_cpu(entry->e_value_offs),\n\t\t       size))"];
"1000117" [label="(Call,EXT4_GET_MB_CACHE(inode))"];
"1000118" [label="(Identifier,inode)"];
"1000240" [label="(Call,bh->b_data + le16_to_cpu(entry->e_value_offs))"];
"1000239" [label="(Identifier,buffer)"];
"1000125" [label="(Call,(long)buffer_size)"];
"1000129" [label="(Identifier,error)"];
"1000119" [label="(Call,ea_idebug(inode, \"name=%d.%s, buffer=%p, buffer_size=%ld\",\n \t\t  name_index, name, buffer, (long)buffer_size))"];
"1000233" [label="(ControlStructure,if (size > buffer_size))"];
"1000248" [label="(Identifier,size)"];
"1000103" [label="(MethodParameterIn,const char *name)"];
"1000244" [label="(Call,le16_to_cpu(entry->e_value_offs))"];
"1000139" [label="(Call,ea_idebug(inode, \"reading block %llu\",\n\t\t  (unsigned long long)EXT4_I(inode)->i_file_acl))"];
"1000237" [label="(ControlStructure,goto cleanup;)"];
"1000124" [label="(Identifier,buffer)"];
"1000104" [label="(MethodParameterIn,void *buffer)"];
"1000222" [label="(Call,le32_to_cpu(entry->e_value_size))"];
"1000212" [label="(Call,error == -EFSCORRUPTED)"];
"1000145" [label="(Call,EXT4_I(inode))"];
"1000234" [label="(Call,size > buffer_size)"];
"1000128" [label="(Call,error = -ENODATA)"];
"1000256" [label="(Identifier,error)"];
"1000257" [label="(MethodReturn,RET)"];
"1000251" [label="(Identifier,size)"];
"1000181" [label="(Call,EXT4_ERROR_INODE(inode, \"bad block %llu\",\n\t\t\t\t EXT4_I(inode)->i_file_acl))"];
"1000135" [label="(Call,EXT4_I(inode))"];
"1000228" [label="(Block,)"];
"1000101" [label="(MethodParameterIn,struct inode *inode)"];
"1000123" [label="(Identifier,name)"];
"1000223" [label="(Call,entry->e_value_size)"];
"1000236" [label="(Identifier,buffer_size)"];
"1000127" [label="(Identifier,buffer_size)"];
"1000155" [label="(Call,EXT4_I(inode))"];
"1000185" [label="(Call,EXT4_I(inode))"];
"1000105" [label="(MethodParameterIn,size_t buffer_size)"];
"1000106" [label="(Block,)"];
"1000235" [label="(Identifier,size)"];
"1000176" [label="(Call,ext4_xattr_check_block(inode, bh))"];
"1000220" [label="(Call,size = le32_to_cpu(entry->e_value_size))"];
"1000121" [label="(Literal,\"name=%d.%s, buffer=%p, buffer_size=%ld\")"];
"1000221" [label="(Identifier,size)"];
"1000227" [label="(Identifier,buffer)"];
"1000202" [label="(Call,ext4_xattr_find_entry(&entry, name_index, name, bh->b_size, 1))"];
"1000120" [label="(Identifier,inode)"];
"1000102" [label="(MethodParameterIn,int name_index)"];
"1000250" [label="(Identifier,error)"];
"1000245" [label="(Call,entry->e_value_offs)"];
"1000229" [label="(Call,error = -ERANGE)"];
"1000122" [label="(Identifier,name_index)"];
"1000255" [label="(Return,return error;)"];
"1000115" [label="(Call,*ext4_mb_cache = EXT4_GET_MB_CACHE(inode))"];
"1000188" [label="(Call,error = -EFSCORRUPTED)"];
"1000252" [label="(JumpTarget,cleanup:)"];
"1000249" [label="(Call,error = size)"];
"1000238" -> "1000228"  [label="AST: "];
"1000238" -> "1000248"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="AST: "];
"1000248" -> "1000238"  [label="AST: "];
"1000250" -> "1000238"  [label="CFG: "];
"1000238" -> "1000257"  [label="DDG: "];
"1000238" -> "1000257"  [label="DDG: "];
"1000238" -> "1000257"  [label="DDG: "];
"1000119" -> "1000238"  [label="DDG: "];
"1000104" -> "1000238"  [label="DDG: "];
"1000244" -> "1000238"  [label="DDG: "];
"1000234" -> "1000238"  [label="DDG: "];
"1000238" -> "1000249"  [label="DDG: "];
"1000119" -> "1000106"  [label="AST: "];
"1000119" -> "1000125"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000122" -> "1000119"  [label="AST: "];
"1000123" -> "1000119"  [label="AST: "];
"1000124" -> "1000119"  [label="AST: "];
"1000125" -> "1000119"  [label="AST: "];
"1000129" -> "1000119"  [label="CFG: "];
"1000119" -> "1000257"  [label="DDG: "];
"1000119" -> "1000257"  [label="DDG: "];
"1000119" -> "1000257"  [label="DDG: "];
"1000119" -> "1000257"  [label="DDG: "];
"1000119" -> "1000257"  [label="DDG: "];
"1000117" -> "1000119"  [label="DDG: "];
"1000101" -> "1000119"  [label="DDG: "];
"1000102" -> "1000119"  [label="DDG: "];
"1000103" -> "1000119"  [label="DDG: "];
"1000104" -> "1000119"  [label="DDG: "];
"1000125" -> "1000119"  [label="DDG: "];
"1000119" -> "1000135"  [label="DDG: "];
"1000119" -> "1000202"  [label="DDG: "];
"1000119" -> "1000202"  [label="DDG: "];
"1000117" -> "1000115"  [label="AST: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000117" -> "1000115"  [label="DDG: "];
"1000101" -> "1000117"  [label="DDG: "];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000257"  [label="DDG: "];
"1000101" -> "1000135"  [label="DDG: "];
"1000101" -> "1000139"  [label="DDG: "];
"1000101" -> "1000145"  [label="DDG: "];
"1000101" -> "1000155"  [label="DDG: "];
"1000101" -> "1000176"  [label="DDG: "];
"1000101" -> "1000181"  [label="DDG: "];
"1000101" -> "1000185"  [label="DDG: "];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000257"  [label="DDG: "];
"1000102" -> "1000202"  [label="DDG: "];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000257"  [label="DDG: "];
"1000103" -> "1000202"  [label="DDG: "];
"1000104" -> "1000100"  [label="AST: "];
"1000104" -> "1000257"  [label="DDG: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000125" -> "1000257"  [label="DDG: "];
"1000105" -> "1000125"  [label="DDG: "];
"1000125" -> "1000234"  [label="DDG: "];
"1000105" -> "1000100"  [label="AST: "];
"1000105" -> "1000257"  [label="DDG: "];
"1000105" -> "1000234"  [label="DDG: "];
"1000244" -> "1000240"  [label="AST: "];
"1000244" -> "1000245"  [label="CFG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000240" -> "1000244"  [label="CFG: "];
"1000244" -> "1000257"  [label="DDG: "];
"1000244" -> "1000240"  [label="DDG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000234" -> "1000236"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000236" -> "1000234"  [label="AST: "];
"1000237" -> "1000234"  [label="CFG: "];
"1000239" -> "1000234"  [label="CFG: "];
"1000234" -> "1000257"  [label="DDG: "];
"1000234" -> "1000257"  [label="DDG: "];
"1000234" -> "1000257"  [label="DDG: "];
"1000220" -> "1000234"  [label="DDG: "];
"1000220" -> "1000106"  [label="AST: "];
"1000220" -> "1000222"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000222" -> "1000220"  [label="AST: "];
"1000227" -> "1000220"  [label="CFG: "];
"1000220" -> "1000257"  [label="DDG: "];
"1000222" -> "1000220"  [label="DDG: "];
"1000220" -> "1000249"  [label="DDG: "];
"1000222" -> "1000223"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000222" -> "1000257"  [label="DDG: "];
"1000249" -> "1000106"  [label="AST: "];
"1000249" -> "1000251"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000251" -> "1000249"  [label="AST: "];
"1000252" -> "1000249"  [label="CFG: "];
"1000249" -> "1000257"  [label="DDG: "];
"1000249" -> "1000257"  [label="DDG: "];
"1000249" -> "1000255"  [label="DDG: "];
"1000255" -> "1000106"  [label="AST: "];
"1000255" -> "1000256"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000257" -> "1000255"  [label="CFG: "];
"1000255" -> "1000257"  [label="DDG: "];
"1000256" -> "1000255"  [label="DDG: "];
"1000188" -> "1000255"  [label="DDG: "];
"1000128" -> "1000255"  [label="DDG: "];
"1000212" -> "1000255"  [label="DDG: "];
"1000229" -> "1000255"  [label="DDG: "];
}
