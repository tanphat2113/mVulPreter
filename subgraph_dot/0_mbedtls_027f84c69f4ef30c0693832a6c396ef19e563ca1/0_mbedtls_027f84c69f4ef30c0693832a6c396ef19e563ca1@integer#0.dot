digraph "0_mbedtls_027f84c69f4ef30c0693832a6c396ef19e563ca1@integer" {
"1000425" [label="(Call,ret = mbedtls_ecjpake_read_round_two( &ssl->handshake->ecjpake_ctx,\n                                              p, end - p ))"];
"1000427" [label="(Call,mbedtls_ecjpake_read_round_two( &ssl->handshake->ecjpake_ctx,\n                                              p, end - p ))"];
"1000435" [label="(Call,end - p)"];
"1000401" [label="(Call,ssl_parse_server_ecdh_params( ssl, &p, end ))"];
"1000274" [label="(Call,mbedtls_ssl_hs_hdr_len( ssl ))"];
"1000205" [label="(Call,mbedtls_ssl_read_record( ssl ))"];
"1000111" [label="(MethodParameterIn,mbedtls_ssl_context *ssl)"];
"1000363" [label="(Call,ssl_parse_server_dh_params( ssl, &p, end ))"];
"1000319" [label="(Call,ssl_parse_server_psk_hint( ssl, &p, end ))"];
"1000289" [label="(Call,end - p)"];
"1000276" [label="(Call,end = ssl->in_msg + ssl->in_hslen)"];
"1000232" [label="(Call,ssl->in_msg[0] != MBEDTLS_SSL_HS_SERVER_KEY_EXCHANGE)"];
"1000268" [label="(Call,p   = ssl->in_msg + mbedtls_ssl_hs_hdr_len( ssl ))"];
"1000285" [label="(Call,MBEDTLS_SSL_DEBUG_BUF( 3,   \"server key exchange\", p, end - p ))"];
"1000439" [label="(Call,ret != 0)"];
"1000443" [label="(Call,MBEDTLS_SSL_DEBUG_RET( 1, \"mbedtls_ecjpake_read_round_two\", ret ))"];
"1000205" [label="(Call,mbedtls_ssl_read_record( ssl ))"];
"1000287" [label="(Literal,\"server key exchange\")"];
"1000440" [label="(Identifier,ret)"];
"1000499" [label="(Call,ssl_parse_signature_algorithm( ssl, &p, end,\n                                               &md_alg, &pk_alg ))"];
"1000373" [label="(Call,mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,\n                                            MBEDTLS_SSL_ALERT_MSG_ILLEGAL_PARAMETER ))"];
"1000320" [label="(Identifier,ssl)"];
"1000625" [label="(Call,mbedtls_ssl_get_key_exchange_md_ssl_tls( ssl, hash, params,\n                                                           params_len ))"];
"1000276" [label="(Call,end = ssl->in_msg + ssl->in_hslen)"];
"1000425" [label="(Call,ret = mbedtls_ecjpake_read_round_two( &ssl->handshake->ecjpake_ctx,\n                                              p, end - p ))"];
"1000478" [label="(Call,ssl->in_msg + mbedtls_ssl_hs_hdr_len( ssl ))"];
"1000290" [label="(Identifier,end)"];
"1000363" [label="(Call,ssl_parse_server_dh_params( ssl, &p, end ))"];
"1000329" [label="(Call,mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,\n                                            MBEDTLS_SSL_ALERT_MSG_ILLEGAL_PARAMETER ))"];
"1000291" [label="(Identifier,p)"];
"1000482" [label="(Call,mbedtls_ssl_hs_hdr_len( ssl ))"];
"1000172" [label="(Call,ssl_get_ecdh_params_from_cert( ssl ))"];
"1000368" [label="(Literal,0)"];
"1000447" [label="(Call,mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,\n                                            MBEDTLS_SSL_ALERT_MSG_ILLEGAL_PARAMETER ))"];
"1000647" [label="(Call,mbedtls_ssl_get_key_exchange_md_tls1_2( ssl, hash, params,\n                                                          params_len, md_alg ))"];
"1000401" [label="(Call,ssl_parse_server_ecdh_params( ssl, &p, end ))"];
"1000321" [label="(Call,&p)"];
"1000203" [label="(Call,ret = mbedtls_ssl_read_record( ssl ))"];
"1000441" [label="(Literal,0)"];
"1000296" [label="(Identifier,ciphersuite_info)"];
"1000367" [label="(Identifier,end)"];
"1000225" [label="(Call,mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,\n                                        MBEDTLS_SSL_ALERT_MSG_UNEXPECTED_MESSAGE ))"];
"1000323" [label="(Identifier,end)"];
"1000476" [label="(Call,*params = ssl->in_msg + mbedtls_ssl_hs_hdr_len( ssl ))"];
"1000437" [label="(Identifier,p)"];
"1000444" [label="(Literal,1)"];
"1000285" [label="(Call,MBEDTLS_SSL_DEBUG_BUF( 3,   \"server key exchange\", p, end - p ))"];
"1000288" [label="(Identifier,p)"];
"1000462" [label="(Identifier,ciphersuite_info)"];
"1000232" [label="(Call,ssl->in_msg[0] != MBEDTLS_SSL_HS_SERVER_KEY_EXCHANGE)"];
"1000238" [label="(Identifier,MBEDTLS_SSL_HS_SERVER_KEY_EXCHANGE)"];
"1000567" [label="(Call,end - 2)"];
"1000400" [label="(Call,ssl_parse_server_ecdh_params( ssl, &p, end ) != 0)"];
"1000268" [label="(Call,p   = ssl->in_msg + mbedtls_ssl_hs_hdr_len( ssl ))"];
"1000274" [label="(Call,mbedtls_ssl_hs_hdr_len( ssl ))"];
"1000443" [label="(Call,MBEDTLS_SSL_DEBUG_RET( 1, \"mbedtls_ecjpake_read_round_two\", ret ))"];
"1000362" [label="(Call,ssl_parse_server_dh_params( ssl, &p, end ) != 0)"];
"1000402" [label="(Identifier,ssl)"];
"1000446" [label="(Identifier,ret)"];
"1000604" [label="(Call,mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,\n                                            MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR ))"];
"1000206" [label="(Identifier,ssl)"];
"1000233" [label="(Call,ssl->in_msg[0])"];
"1000277" [label="(Identifier,end)"];
"1000427" [label="(Call,mbedtls_ecjpake_read_round_two( &ssl->handshake->ecjpake_ctx,\n                                              p, end - p ))"];
"1000411" [label="(Call,mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,\n                                            MBEDTLS_SSL_ALERT_MSG_ILLEGAL_PARAMETER ))"];
"1000262" [label="(Call,mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,\n                                        MBEDTLS_SSL_ALERT_MSG_UNEXPECTED_MESSAGE ))"];
"1000180" [label="(Call,mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,\n                                            MBEDTLS_SSL_ALERT_MSG_HANDSHAKE_FAILURE ))"];
"1000244" [label="(Identifier,ciphersuite_info)"];
"1000439" [label="(Call,ret != 0)"];
"1000424" [label="(Block,)"];
"1000436" [label="(Identifier,end)"];
"1000319" [label="(Call,ssl_parse_server_psk_hint( ssl, &p, end ))"];
"1000231" [label="(ControlStructure,if( ssl->in_msg[0] != MBEDTLS_SSL_HS_SERVER_KEY_EXCHANGE ))"];
"1000286" [label="(Literal,3)"];
"1000445" [label="(Literal,\"mbedtls_ecjpake_read_round_two\")"];
"1000574" [label="(Call,mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,\n                                            MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR ))"];
"1000403" [label="(Call,&p)"];
"1000434" [label="(Identifier,p)"];
"1000269" [label="(Identifier,p)"];
"1000448" [label="(Identifier,ssl)"];
"1000438" [label="(ControlStructure,if( ret != 0 ))"];
"1000528" [label="(Call,mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,\n                                                MBEDTLS_SSL_ALERT_MSG_ILLEGAL_PARAMETER ))"];
"1000112" [label="(Block,)"];
"1000275" [label="(Identifier,ssl)"];
"1000318" [label="(Call,ssl_parse_server_psk_hint( ssl, &p, end ) != 0)"];
"1000278" [label="(Call,ssl->in_msg + ssl->in_hslen)"];
"1000365" [label="(Call,&p)"];
"1000426" [label="(Identifier,ret)"];
"1000364" [label="(Identifier,ssl)"];
"1000270" [label="(Call,ssl->in_msg + mbedtls_ssl_hs_hdr_len( ssl ))"];
"1000202" [label="(Call,( ret = mbedtls_ssl_read_record( ssl ) ) != 0)"];
"1000406" [label="(Literal,0)"];
"1000405" [label="(Identifier,end)"];
"1000324" [label="(Literal,0)"];
"1000435" [label="(Call,end - p)"];
"1000442" [label="(Block,)"];
"1000289" [label="(Call,end - p)"];
"1000428" [label="(Call,&ssl->handshake->ecjpake_ctx)"];
"1000760" [label="(MethodReturn,static int)"];
"1000487" [label="(Call,p - params)"];
"1000513" [label="(Call,mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,\n                                                MBEDTLS_SSL_ALERT_MSG_ILLEGAL_PARAMETER ))"];
"1000111" [label="(MethodParameterIn,mbedtls_ssl_context *ssl)"];
"1000425" -> "1000424"  [label="AST: "];
"1000425" -> "1000427"  [label="CFG: "];
"1000426" -> "1000425"  [label="AST: "];
"1000427" -> "1000425"  [label="AST: "];
"1000440" -> "1000425"  [label="CFG: "];
"1000425" -> "1000760"  [label="DDG: "];
"1000427" -> "1000425"  [label="DDG: "];
"1000427" -> "1000425"  [label="DDG: "];
"1000427" -> "1000425"  [label="DDG: "];
"1000425" -> "1000439"  [label="DDG: "];
"1000427" -> "1000435"  [label="CFG: "];
"1000428" -> "1000427"  [label="AST: "];
"1000434" -> "1000427"  [label="AST: "];
"1000435" -> "1000427"  [label="AST: "];
"1000427" -> "1000760"  [label="DDG: "];
"1000427" -> "1000760"  [label="DDG: "];
"1000427" -> "1000760"  [label="DDG: "];
"1000435" -> "1000427"  [label="DDG: "];
"1000435" -> "1000427"  [label="DDG: "];
"1000427" -> "1000487"  [label="DDG: "];
"1000435" -> "1000437"  [label="CFG: "];
"1000436" -> "1000435"  [label="AST: "];
"1000437" -> "1000435"  [label="AST: "];
"1000435" -> "1000760"  [label="DDG: "];
"1000401" -> "1000435"  [label="DDG: "];
"1000289" -> "1000435"  [label="DDG: "];
"1000363" -> "1000435"  [label="DDG: "];
"1000319" -> "1000435"  [label="DDG: "];
"1000285" -> "1000435"  [label="DDG: "];
"1000435" -> "1000499"  [label="DDG: "];
"1000435" -> "1000567"  [label="DDG: "];
"1000401" -> "1000400"  [label="AST: "];
"1000401" -> "1000405"  [label="CFG: "];
"1000402" -> "1000401"  [label="AST: "];
"1000403" -> "1000401"  [label="AST: "];
"1000405" -> "1000401"  [label="AST: "];
"1000406" -> "1000401"  [label="CFG: "];
"1000401" -> "1000760"  [label="DDG: "];
"1000401" -> "1000760"  [label="DDG: "];
"1000401" -> "1000760"  [label="DDG: "];
"1000401" -> "1000400"  [label="DDG: "];
"1000401" -> "1000400"  [label="DDG: "];
"1000401" -> "1000400"  [label="DDG: "];
"1000274" -> "1000401"  [label="DDG: "];
"1000363" -> "1000401"  [label="DDG: "];
"1000363" -> "1000401"  [label="DDG: "];
"1000363" -> "1000401"  [label="DDG: "];
"1000319" -> "1000401"  [label="DDG: "];
"1000319" -> "1000401"  [label="DDG: "];
"1000319" -> "1000401"  [label="DDG: "];
"1000111" -> "1000401"  [label="DDG: "];
"1000289" -> "1000401"  [label="DDG: "];
"1000401" -> "1000411"  [label="DDG: "];
"1000401" -> "1000447"  [label="DDG: "];
"1000401" -> "1000482"  [label="DDG: "];
"1000401" -> "1000499"  [label="DDG: "];
"1000274" -> "1000270"  [label="AST: "];
"1000274" -> "1000275"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000270" -> "1000274"  [label="CFG: "];
"1000274" -> "1000760"  [label="DDG: "];
"1000274" -> "1000268"  [label="DDG: "];
"1000274" -> "1000270"  [label="DDG: "];
"1000205" -> "1000274"  [label="DDG: "];
"1000111" -> "1000274"  [label="DDG: "];
"1000274" -> "1000319"  [label="DDG: "];
"1000274" -> "1000363"  [label="DDG: "];
"1000274" -> "1000447"  [label="DDG: "];
"1000274" -> "1000482"  [label="DDG: "];
"1000205" -> "1000203"  [label="AST: "];
"1000205" -> "1000206"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000203" -> "1000205"  [label="CFG: "];
"1000205" -> "1000760"  [label="DDG: "];
"1000205" -> "1000202"  [label="DDG: "];
"1000205" -> "1000203"  [label="DDG: "];
"1000111" -> "1000205"  [label="DDG: "];
"1000205" -> "1000225"  [label="DDG: "];
"1000205" -> "1000262"  [label="DDG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000760"  [label="DDG: "];
"1000111" -> "1000172"  [label="DDG: "];
"1000111" -> "1000180"  [label="DDG: "];
"1000111" -> "1000225"  [label="DDG: "];
"1000111" -> "1000262"  [label="DDG: "];
"1000111" -> "1000319"  [label="DDG: "];
"1000111" -> "1000329"  [label="DDG: "];
"1000111" -> "1000363"  [label="DDG: "];
"1000111" -> "1000373"  [label="DDG: "];
"1000111" -> "1000411"  [label="DDG: "];
"1000111" -> "1000447"  [label="DDG: "];
"1000111" -> "1000482"  [label="DDG: "];
"1000111" -> "1000499"  [label="DDG: "];
"1000111" -> "1000513"  [label="DDG: "];
"1000111" -> "1000528"  [label="DDG: "];
"1000111" -> "1000574"  [label="DDG: "];
"1000111" -> "1000604"  [label="DDG: "];
"1000111" -> "1000625"  [label="DDG: "];
"1000111" -> "1000647"  [label="DDG: "];
"1000363" -> "1000362"  [label="AST: "];
"1000363" -> "1000367"  [label="CFG: "];
"1000364" -> "1000363"  [label="AST: "];
"1000365" -> "1000363"  [label="AST: "];
"1000367" -> "1000363"  [label="AST: "];
"1000368" -> "1000363"  [label="CFG: "];
"1000363" -> "1000760"  [label="DDG: "];
"1000363" -> "1000760"  [label="DDG: "];
"1000363" -> "1000760"  [label="DDG: "];
"1000363" -> "1000362"  [label="DDG: "];
"1000363" -> "1000362"  [label="DDG: "];
"1000363" -> "1000362"  [label="DDG: "];
"1000319" -> "1000363"  [label="DDG: "];
"1000319" -> "1000363"  [label="DDG: "];
"1000319" -> "1000363"  [label="DDG: "];
"1000289" -> "1000363"  [label="DDG: "];
"1000363" -> "1000373"  [label="DDG: "];
"1000363" -> "1000447"  [label="DDG: "];
"1000363" -> "1000482"  [label="DDG: "];
"1000363" -> "1000499"  [label="DDG: "];
"1000319" -> "1000318"  [label="AST: "];
"1000319" -> "1000323"  [label="CFG: "];
"1000320" -> "1000319"  [label="AST: "];
"1000321" -> "1000319"  [label="AST: "];
"1000323" -> "1000319"  [label="AST: "];
"1000324" -> "1000319"  [label="CFG: "];
"1000319" -> "1000760"  [label="DDG: "];
"1000319" -> "1000760"  [label="DDG: "];
"1000319" -> "1000760"  [label="DDG: "];
"1000319" -> "1000318"  [label="DDG: "];
"1000319" -> "1000318"  [label="DDG: "];
"1000319" -> "1000318"  [label="DDG: "];
"1000289" -> "1000319"  [label="DDG: "];
"1000319" -> "1000329"  [label="DDG: "];
"1000319" -> "1000447"  [label="DDG: "];
"1000319" -> "1000482"  [label="DDG: "];
"1000319" -> "1000499"  [label="DDG: "];
"1000289" -> "1000285"  [label="AST: "];
"1000289" -> "1000291"  [label="CFG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000291" -> "1000289"  [label="AST: "];
"1000285" -> "1000289"  [label="CFG: "];
"1000289" -> "1000760"  [label="DDG: "];
"1000289" -> "1000285"  [label="DDG: "];
"1000289" -> "1000285"  [label="DDG: "];
"1000276" -> "1000289"  [label="DDG: "];
"1000268" -> "1000289"  [label="DDG: "];
"1000276" -> "1000112"  [label="AST: "];
"1000276" -> "1000278"  [label="CFG: "];
"1000277" -> "1000276"  [label="AST: "];
"1000278" -> "1000276"  [label="AST: "];
"1000286" -> "1000276"  [label="CFG: "];
"1000276" -> "1000760"  [label="DDG: "];
"1000232" -> "1000276"  [label="DDG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000232" -> "1000238"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000238" -> "1000232"  [label="AST: "];
"1000244" -> "1000232"  [label="CFG: "];
"1000269" -> "1000232"  [label="CFG: "];
"1000232" -> "1000760"  [label="DDG: "];
"1000232" -> "1000760"  [label="DDG: "];
"1000232" -> "1000760"  [label="DDG: "];
"1000232" -> "1000268"  [label="DDG: "];
"1000232" -> "1000270"  [label="DDG: "];
"1000232" -> "1000278"  [label="DDG: "];
"1000232" -> "1000476"  [label="DDG: "];
"1000232" -> "1000478"  [label="DDG: "];
"1000268" -> "1000112"  [label="AST: "];
"1000268" -> "1000270"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000270" -> "1000268"  [label="AST: "];
"1000277" -> "1000268"  [label="CFG: "];
"1000268" -> "1000760"  [label="DDG: "];
"1000285" -> "1000112"  [label="AST: "];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000285"  [label="AST: "];
"1000288" -> "1000285"  [label="AST: "];
"1000296" -> "1000285"  [label="CFG: "];
"1000285" -> "1000760"  [label="DDG: "];
"1000285" -> "1000760"  [label="DDG: "];
"1000285" -> "1000760"  [label="DDG: "];
"1000439" -> "1000438"  [label="AST: "];
"1000439" -> "1000441"  [label="CFG: "];
"1000440" -> "1000439"  [label="AST: "];
"1000441" -> "1000439"  [label="AST: "];
"1000444" -> "1000439"  [label="CFG: "];
"1000462" -> "1000439"  [label="CFG: "];
"1000439" -> "1000760"  [label="DDG: "];
"1000439" -> "1000760"  [label="DDG: "];
"1000439" -> "1000443"  [label="DDG: "];
"1000443" -> "1000442"  [label="AST: "];
"1000443" -> "1000446"  [label="CFG: "];
"1000444" -> "1000443"  [label="AST: "];
"1000445" -> "1000443"  [label="AST: "];
"1000446" -> "1000443"  [label="AST: "];
"1000448" -> "1000443"  [label="CFG: "];
"1000443" -> "1000760"  [label="DDG: "];
"1000443" -> "1000760"  [label="DDG: "];
}
