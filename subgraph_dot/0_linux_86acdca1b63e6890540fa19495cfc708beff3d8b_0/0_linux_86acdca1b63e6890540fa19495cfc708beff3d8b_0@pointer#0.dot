digraph "0_linux_86acdca1b63e6890540fa19495cfc708beff3d8b_0@pointer" {
"1000107" [label="(Call,*inode = dentry->d_inode)"];
"1000124" [label="(Call,proc_fd_access_allowed(inode))"];
"1000123" [label="(Call,!proc_fd_access_allowed(inode))"];
"1000129" [label="(Call,PROC_I(inode)->op.proc_get_link(inode, &nd->path))"];
"1000127" [label="(Call,error = PROC_I(inode)->op.proc_get_link(inode, &nd->path))"];
"1000137" [label="(Call,ERR_PTR(error))"];
"1000136" [label="(Return,return ERR_PTR(error);)"];
"1000126" [label="(ControlStructure,goto out;)"];
"1000125" [label="(Identifier,inode)"];
"1000114" [label="(Identifier,error)"];
"1000127" [label="(Call,error = PROC_I(inode)->op.proc_get_link(inode, &nd->path))"];
"1000108" [label="(Identifier,inode)"];
"1000117" [label="(Call,path_put(&nd->path))"];
"1000123" [label="(Call,!proc_fd_access_allowed(inode))"];
"1000137" [label="(Call,ERR_PTR(error))"];
"1000113" [label="(Call,error = -EACCES)"];
"1000135" [label="(JumpTarget,out:)"];
"1000139" [label="(MethodReturn,static void *)"];
"1000131" [label="(Call,&nd->path)"];
"1000130" [label="(Identifier,inode)"];
"1000136" [label="(Return,return ERR_PTR(error);)"];
"1000124" [label="(Call,proc_fd_access_allowed(inode))"];
"1000107" [label="(Call,*inode = dentry->d_inode)"];
"1000105" [label="(Block,)"];
"1000122" [label="(ControlStructure,if (!proc_fd_access_allowed(inode)))"];
"1000109" [label="(Call,dentry->d_inode)"];
"1000138" [label="(Identifier,error)"];
"1000129" [label="(Call,PROC_I(inode)->op.proc_get_link(inode, &nd->path))"];
"1000128" [label="(Identifier,error)"];
"1000107" -> "1000105"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000114" -> "1000107"  [label="CFG: "];
"1000107" -> "1000139"  [label="DDG: dentry->d_inode"];
"1000107" -> "1000124"  [label="DDG: inode"];
"1000124" -> "1000123"  [label="AST: "];
"1000124" -> "1000125"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000139"  [label="DDG: inode"];
"1000124" -> "1000123"  [label="DDG: inode"];
"1000124" -> "1000129"  [label="DDG: inode"];
"1000123" -> "1000122"  [label="AST: "];
"1000126" -> "1000123"  [label="CFG: "];
"1000128" -> "1000123"  [label="CFG: "];
"1000123" -> "1000139"  [label="DDG: !proc_fd_access_allowed(inode)"];
"1000123" -> "1000139"  [label="DDG: proc_fd_access_allowed(inode)"];
"1000129" -> "1000127"  [label="AST: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000129"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000129" -> "1000139"  [label="DDG: inode"];
"1000129" -> "1000139"  [label="DDG: &nd->path"];
"1000129" -> "1000127"  [label="DDG: inode"];
"1000129" -> "1000127"  [label="DDG: &nd->path"];
"1000117" -> "1000129"  [label="DDG: &nd->path"];
"1000127" -> "1000105"  [label="AST: "];
"1000128" -> "1000127"  [label="AST: "];
"1000135" -> "1000127"  [label="CFG: "];
"1000127" -> "1000139"  [label="DDG: PROC_I(inode)->op.proc_get_link(inode, &nd->path)"];
"1000127" -> "1000137"  [label="DDG: error"];
"1000137" -> "1000136"  [label="AST: "];
"1000137" -> "1000138"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000136" -> "1000137"  [label="CFG: "];
"1000137" -> "1000139"  [label="DDG: error"];
"1000137" -> "1000139"  [label="DDG: ERR_PTR(error)"];
"1000137" -> "1000136"  [label="DDG: ERR_PTR(error)"];
"1000113" -> "1000137"  [label="DDG: error"];
"1000136" -> "1000105"  [label="AST: "];
"1000139" -> "1000136"  [label="CFG: "];
"1000136" -> "1000139"  [label="DDG: <RET>"];
}
