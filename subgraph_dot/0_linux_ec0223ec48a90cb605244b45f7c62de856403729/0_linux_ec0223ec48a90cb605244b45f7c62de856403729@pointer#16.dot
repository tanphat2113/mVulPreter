digraph "0_linux_ec0223ec48a90cb605244b45f7c62de856403729@pointer" {
"1000354" [label="(Call,sctp_sf_pdiscard(net, ep, asoc, type, arg, commands))"];
"1000121" [label="(MethodParameterIn,struct net *net)"];
"1000241" [label="(Call,sctp_unpack_cookie(ep, asoc, chunk, GFP_ATOMIC, &error,\n\t\t\t\t      &err_chk_p))"];
"1000147" [label="(Call,ep == sctp_sk(net->sctp.ctl_sock)->ep)"];
"1000122" [label="(MethodParameterIn,const struct sctp_endpoint *ep)"];
"1000123" [label="(MethodParameterIn,const struct sctp_association *asoc)"];
"1000171" [label="(Call,sctp_chunk_length_valid(chunk, sizeof(sctp_chunkhdr_t)))"];
"1000129" [label="(Call,*chunk = arg)"];
"1000125" [label="(MethodParameterIn,void *arg)"];
"1000124" [label="(MethodParameterIn,const sctp_subtype_t type)"];
"1000126" [label="(MethodParameterIn,sctp_cmd_seq_t *commands)"];
"1000353" [label="(Return,return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);)"];
"1000514" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_REPLY, SCTP_CHUNK(repl)))"];
"1000162" [label="(Call,sctp_sf_tabort_8_4_8(net, ep, asoc, type, arg, commands))"];
"1000359" [label="(Identifier,arg)"];
"1000126" [label="(MethodParameterIn,sctp_cmd_seq_t *commands)"];
"1000278" [label="(Call,sctp_sf_pdiscard(net, ep, asoc, type, arg, commands))"];
"1000242" [label="(Identifier,ep)"];
"1000499" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_HB_TIMERS_START, SCTP_NULL()))"];
"1000483" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_NEW_ASOC, SCTP_ASOC(new_asoc)))"];
"1000509" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_TIMER_START,\n\t\t\t\tSCTP_TO(SCTP_EVENT_TIMEOUT_AUTOCLOSE)))"];
"1000171" [label="(Call,sctp_chunk_length_valid(chunk, sizeof(sctp_chunkhdr_t)))"];
"1000245" [label="(Identifier,GFP_ATOMIC)"];
"1000176" [label="(Call,sctp_sf_pdiscard(net, ep, asoc, type, arg, commands))"];
"1000159" [label="(Identifier,net)"];
"1000124" [label="(MethodParameterIn,const sctp_subtype_t type)"];
"1000354" [label="(Call,sctp_sf_pdiscard(net, ep, asoc, type, arg, commands))"];
"1000241" [label="(Call,sctp_unpack_cookie(ep, asoc, chunk, GFP_ATOMIC, &error,\n\t\t\t\t      &err_chk_p))"];
"1000170" [label="(Call,!sctp_chunk_length_valid(chunk, sizeof(sctp_chunkhdr_t)))"];
"1000246" [label="(Call,&error)"];
"1000158" [label="(Call,SCTP_INC_STATS(net, SCTP_MIB_OUTOFBLUES))"];
"1000243" [label="(Identifier,asoc)"];
"1000138" [label="(Identifier,ai_ev)"];
"1000129" [label="(Call,*chunk = arg)"];
"1000519" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_EVENT_ULP, SCTP_ULPEVENT(ev)))"];
"1000526" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_EVENT_ULP,\n\t\t\t\tSCTP_ULPEVENT(ai_ev)))"];
"1000123" [label="(MethodParameterIn,const struct sctp_association *asoc)"];
"1000127" [label="(Block,)"];
"1000239" [label="(Call,new_asoc = sctp_unpack_cookie(ep, asoc, chunk, GFP_ATOMIC, &error,\n\t\t\t\t      &err_chk_p))"];
"1000147" [label="(Call,ep == sctp_sk(net->sctp.ctl_sock)->ep)"];
"1000148" [label="(Identifier,ep)"];
"1000121" [label="(MethodParameterIn,struct net *net)"];
"1000488" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_NEW_STATE,\n\t\t\tSCTP_STATE(SCTP_STATE_ESTABLISHED)))"];
"1000244" [label="(Identifier,chunk)"];
"1000356" [label="(Identifier,ep)"];
"1000131" [label="(Identifier,arg)"];
"1000146" [label="(ControlStructure,if (ep == sctp_sk(net->sctp.ctl_sock)->ep))"];
"1000360" [label="(Identifier,commands)"];
"1000346" [label="(Block,)"];
"1000355" [label="(Identifier,net)"];
"1000353" [label="(Return,return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);)"];
"1000545" [label="(MethodReturn,sctp_disposition_t)"];
"1000409" [label="(Call,sctp_sf_authenticate(net, ep, new_asoc, type, &auth))"];
"1000496" [label="(Call,SCTP_INC_STATS(net, SCTP_MIB_PASSIVEESTABS))"];
"1000122" [label="(MethodParameterIn,const struct sctp_endpoint *ep)"];
"1000125" [label="(MethodParameterIn,void *arg)"];
"1000301" [label="(Call,sctp_process_init(new_asoc, chunk,\n\t\t\t       &chunk->subh.cookie_hdr->c.peer_addr,\n\t\t\t       peer_init, GFP_ATOMIC))"];
"1000248" [label="(Call,&err_chk_p)"];
"1000149" [label="(Call,sctp_sk(net->sctp.ctl_sock)->ep)"];
"1000493" [label="(Call,SCTP_INC_STATS(net, SCTP_MIB_CURRESTAB))"];
"1000173" [label="(Call,sizeof(sctp_chunkhdr_t))"];
"1000172" [label="(Identifier,chunk)"];
"1000357" [label="(Identifier,asoc)"];
"1000203" [label="(Call,sctp_sf_tabort_8_4_8(net, ep, asoc, type, arg, commands))"];
"1000428" [label="(Call,sctp_sf_pdiscard(net, ep, asoc, type, arg, commands))"];
"1000130" [label="(Identifier,chunk)"];
"1000358" [label="(Identifier,type)"];
"1000354" -> "1000353"  [label="AST: "];
"1000354" -> "1000360"  [label="CFG: "];
"1000355" -> "1000354"  [label="AST: "];
"1000356" -> "1000354"  [label="AST: "];
"1000357" -> "1000354"  [label="AST: "];
"1000358" -> "1000354"  [label="AST: "];
"1000359" -> "1000354"  [label="AST: "];
"1000360" -> "1000354"  [label="AST: "];
"1000353" -> "1000354"  [label="CFG: "];
"1000354" -> "1000545"  [label="DDG: ep"];
"1000354" -> "1000545"  [label="DDG: asoc"];
"1000354" -> "1000545"  [label="DDG: type"];
"1000354" -> "1000545"  [label="DDG: commands"];
"1000354" -> "1000545"  [label="DDG: sctp_sf_pdiscard(net, ep, asoc, type, arg, commands)"];
"1000354" -> "1000545"  [label="DDG: net"];
"1000354" -> "1000545"  [label="DDG: arg"];
"1000354" -> "1000353"  [label="DDG: sctp_sf_pdiscard(net, ep, asoc, type, arg, commands)"];
"1000121" -> "1000354"  [label="DDG: net"];
"1000241" -> "1000354"  [label="DDG: ep"];
"1000241" -> "1000354"  [label="DDG: asoc"];
"1000122" -> "1000354"  [label="DDG: ep"];
"1000123" -> "1000354"  [label="DDG: asoc"];
"1000124" -> "1000354"  [label="DDG: type"];
"1000125" -> "1000354"  [label="DDG: arg"];
"1000126" -> "1000354"  [label="DDG: commands"];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000545"  [label="DDG: net"];
"1000121" -> "1000158"  [label="DDG: net"];
"1000121" -> "1000162"  [label="DDG: net"];
"1000121" -> "1000176"  [label="DDG: net"];
"1000121" -> "1000203"  [label="DDG: net"];
"1000121" -> "1000278"  [label="DDG: net"];
"1000121" -> "1000409"  [label="DDG: net"];
"1000121" -> "1000428"  [label="DDG: net"];
"1000121" -> "1000493"  [label="DDG: net"];
"1000121" -> "1000496"  [label="DDG: net"];
"1000241" -> "1000239"  [label="AST: "];
"1000241" -> "1000248"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="AST: "];
"1000244" -> "1000241"  [label="AST: "];
"1000245" -> "1000241"  [label="AST: "];
"1000246" -> "1000241"  [label="AST: "];
"1000248" -> "1000241"  [label="AST: "];
"1000239" -> "1000241"  [label="CFG: "];
"1000241" -> "1000545"  [label="DDG: &err_chk_p"];
"1000241" -> "1000545"  [label="DDG: ep"];
"1000241" -> "1000545"  [label="DDG: chunk"];
"1000241" -> "1000545"  [label="DDG: GFP_ATOMIC"];
"1000241" -> "1000545"  [label="DDG: &error"];
"1000241" -> "1000545"  [label="DDG: asoc"];
"1000241" -> "1000239"  [label="DDG: &err_chk_p"];
"1000241" -> "1000239"  [label="DDG: chunk"];
"1000241" -> "1000239"  [label="DDG: asoc"];
"1000241" -> "1000239"  [label="DDG: ep"];
"1000241" -> "1000239"  [label="DDG: GFP_ATOMIC"];
"1000241" -> "1000239"  [label="DDG: &error"];
"1000147" -> "1000241"  [label="DDG: ep"];
"1000122" -> "1000241"  [label="DDG: ep"];
"1000123" -> "1000241"  [label="DDG: asoc"];
"1000171" -> "1000241"  [label="DDG: chunk"];
"1000241" -> "1000278"  [label="DDG: ep"];
"1000241" -> "1000278"  [label="DDG: asoc"];
"1000241" -> "1000301"  [label="DDG: chunk"];
"1000241" -> "1000301"  [label="DDG: GFP_ATOMIC"];
"1000241" -> "1000409"  [label="DDG: ep"];
"1000241" -> "1000428"  [label="DDG: asoc"];
"1000147" -> "1000146"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000159" -> "1000147"  [label="CFG: "];
"1000172" -> "1000147"  [label="CFG: "];
"1000147" -> "1000545"  [label="DDG: sctp_sk(net->sctp.ctl_sock)->ep"];
"1000147" -> "1000545"  [label="DDG: ep"];
"1000147" -> "1000545"  [label="DDG: ep == sctp_sk(net->sctp.ctl_sock)->ep"];
"1000122" -> "1000147"  [label="DDG: ep"];
"1000147" -> "1000162"  [label="DDG: ep"];
"1000147" -> "1000176"  [label="DDG: ep"];
"1000147" -> "1000203"  [label="DDG: ep"];
"1000122" -> "1000120"  [label="AST: "];
"1000122" -> "1000545"  [label="DDG: ep"];
"1000122" -> "1000162"  [label="DDG: ep"];
"1000122" -> "1000176"  [label="DDG: ep"];
"1000122" -> "1000203"  [label="DDG: ep"];
"1000122" -> "1000278"  [label="DDG: ep"];
"1000122" -> "1000409"  [label="DDG: ep"];
"1000122" -> "1000428"  [label="DDG: ep"];
"1000123" -> "1000120"  [label="AST: "];
"1000123" -> "1000545"  [label="DDG: asoc"];
"1000123" -> "1000162"  [label="DDG: asoc"];
"1000123" -> "1000176"  [label="DDG: asoc"];
"1000123" -> "1000203"  [label="DDG: asoc"];
"1000123" -> "1000278"  [label="DDG: asoc"];
"1000123" -> "1000428"  [label="DDG: asoc"];
"1000171" -> "1000170"  [label="AST: "];
"1000171" -> "1000173"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="AST: "];
"1000170" -> "1000171"  [label="CFG: "];
"1000171" -> "1000545"  [label="DDG: chunk"];
"1000171" -> "1000170"  [label="DDG: chunk"];
"1000129" -> "1000171"  [label="DDG: chunk"];
"1000129" -> "1000127"  [label="AST: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000129"  [label="AST: "];
"1000138" -> "1000129"  [label="CFG: "];
"1000129" -> "1000545"  [label="DDG: chunk"];
"1000129" -> "1000545"  [label="DDG: arg"];
"1000125" -> "1000129"  [label="DDG: arg"];
"1000125" -> "1000120"  [label="AST: "];
"1000125" -> "1000545"  [label="DDG: arg"];
"1000125" -> "1000162"  [label="DDG: arg"];
"1000125" -> "1000176"  [label="DDG: arg"];
"1000125" -> "1000203"  [label="DDG: arg"];
"1000125" -> "1000278"  [label="DDG: arg"];
"1000125" -> "1000428"  [label="DDG: arg"];
"1000124" -> "1000120"  [label="AST: "];
"1000124" -> "1000545"  [label="DDG: type"];
"1000124" -> "1000162"  [label="DDG: type"];
"1000124" -> "1000176"  [label="DDG: type"];
"1000124" -> "1000203"  [label="DDG: type"];
"1000124" -> "1000278"  [label="DDG: type"];
"1000124" -> "1000409"  [label="DDG: type"];
"1000124" -> "1000428"  [label="DDG: type"];
"1000126" -> "1000120"  [label="AST: "];
"1000126" -> "1000545"  [label="DDG: commands"];
"1000126" -> "1000162"  [label="DDG: commands"];
"1000126" -> "1000176"  [label="DDG: commands"];
"1000126" -> "1000203"  [label="DDG: commands"];
"1000126" -> "1000278"  [label="DDG: commands"];
"1000126" -> "1000428"  [label="DDG: commands"];
"1000126" -> "1000483"  [label="DDG: commands"];
"1000126" -> "1000488"  [label="DDG: commands"];
"1000126" -> "1000499"  [label="DDG: commands"];
"1000126" -> "1000509"  [label="DDG: commands"];
"1000126" -> "1000514"  [label="DDG: commands"];
"1000126" -> "1000519"  [label="DDG: commands"];
"1000126" -> "1000526"  [label="DDG: commands"];
"1000353" -> "1000346"  [label="AST: "];
"1000545" -> "1000353"  [label="CFG: "];
"1000353" -> "1000545"  [label="DDG: <RET>"];
}
