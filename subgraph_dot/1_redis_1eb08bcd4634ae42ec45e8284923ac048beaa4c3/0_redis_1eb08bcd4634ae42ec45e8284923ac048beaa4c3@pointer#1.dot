digraph "0_redis_1eb08bcd4634ae42ec45e8284923ac048beaa4c3@pointer" {
"1000143" [label="(Call,fmt++)"];
"1000106" [label="(Call,*fmt = luaL_checkstring(L, 1))"];
"1000108" [label="(Call,luaL_checkstring(L, 1))"];
"1000102" [label="(MethodParameterIn,lua_State *L)"];
"1000204" [label="(Call,lua_pushnumber(L, res))"];
"1000161" [label="(Call,luaL_argcheck(L, pos+size <= ld, 2, \"data string too short\"))"];
"1000170" [label="(Call,luaL_checkstack(L, 1, \"too many results\"))"];
"1000284" [label="(Call,luaL_argcheck(L, pos+size <= ld, 2, \"data string too short\"))"];
"1000255" [label="(Call,lua_pushnumber(L, d))"];
"1000361" [label="(MethodReturn,static int)"];
"1000351" [label="(Call,lua_pushinteger(L, pos + 1))"];
"1000272" [label="(Call,luaL_error(L, \"format `c0' needs a previous size\"))"];
"1000144" [label="(Identifier,fmt)"];
"1000114" [label="(Identifier,data)"];
"1000293" [label="(Call,lua_pushlstring(L, data+pos, size))"];
"1000106" [label="(Call,*fmt = luaL_checkstring(L, 1))"];
"1000277" [label="(Call,lua_tonumber(L, -1))"];
"1000281" [label="(Call,lua_pop(L, 1))"];
"1000319" [label="(Call,luaL_error(L, \"unfinished string in data\"))"];
"1000103" [label="(Block,)"];
"1000110" [label="(Literal,1)"];
"1000109" [label="(Identifier,L)"];
"1000124" [label="(Call,luaL_optinteger(L, 3, 1))"];
"1000148" [label="(Call,optsize(L, opt, &fmt))"];
"1000231" [label="(Call,lua_pushnumber(L, f))"];
"1000142" [label="(Call,*fmt++)"];
"1000108" [label="(Call,luaL_checkstring(L, 1))"];
"1000341" [label="(Call,controloptions(L, opt, &fmt, &h))"];
"1000115" [label="(Call,luaL_checklstring(L, 2, &ld))"];
"1000132" [label="(Call,lua_settop(L, 2))"];
"1000143" [label="(Call,fmt++)"];
"1000331" [label="(Call,lua_pushlstring(L, data+pos, size - 1))"];
"1000102" [label="(MethodParameterIn,lua_State *L)"];
"1000268" [label="(Call,lua_isnumber(L, -1))"];
"1000107" [label="(Identifier,fmt)"];
"1000358" [label="(Call,lua_gettop(L))"];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000144"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000142" -> "1000143"  [label="CFG: "];
"1000143" -> "1000361"  [label="DDG: fmt"];
"1000106" -> "1000143"  [label="DDG: fmt"];
"1000106" -> "1000103"  [label="AST: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000108" -> "1000106"  [label="AST: "];
"1000114" -> "1000106"  [label="CFG: "];
"1000106" -> "1000361"  [label="DDG: luaL_checkstring(L, 1)"];
"1000106" -> "1000361"  [label="DDG: fmt"];
"1000108" -> "1000106"  [label="DDG: L"];
"1000108" -> "1000106"  [label="DDG: 1"];
"1000108" -> "1000110"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000110" -> "1000108"  [label="AST: "];
"1000102" -> "1000108"  [label="DDG: L"];
"1000108" -> "1000115"  [label="DDG: L"];
"1000102" -> "1000101"  [label="AST: "];
"1000102" -> "1000361"  [label="DDG: L"];
"1000102" -> "1000115"  [label="DDG: L"];
"1000102" -> "1000124"  [label="DDG: L"];
"1000102" -> "1000132"  [label="DDG: L"];
"1000102" -> "1000148"  [label="DDG: L"];
"1000102" -> "1000161"  [label="DDG: L"];
"1000102" -> "1000170"  [label="DDG: L"];
"1000102" -> "1000204"  [label="DDG: L"];
"1000102" -> "1000231"  [label="DDG: L"];
"1000102" -> "1000255"  [label="DDG: L"];
"1000102" -> "1000268"  [label="DDG: L"];
"1000102" -> "1000272"  [label="DDG: L"];
"1000102" -> "1000277"  [label="DDG: L"];
"1000102" -> "1000281"  [label="DDG: L"];
"1000102" -> "1000284"  [label="DDG: L"];
"1000102" -> "1000293"  [label="DDG: L"];
"1000102" -> "1000319"  [label="DDG: L"];
"1000102" -> "1000331"  [label="DDG: L"];
"1000102" -> "1000341"  [label="DDG: L"];
"1000102" -> "1000351"  [label="DDG: L"];
"1000102" -> "1000358"  [label="DDG: L"];
}
