digraph "0_httpd_3f1693d558d0758f829c8b53993f1749ddf6ffcb_0@API" {
"1000110" [label="(Call,apr_pcalloc(cmd->pool, sizeof(lua_authz_provider_func)))"];
"1000108" [label="(Call,*func = apr_pcalloc(cmd->pool, sizeof(lua_authz_provider_func)))"];
"1000176" [label="(Call,*parsed_require_line = func)"];
"1000155" [label="(Call,apr_array_make(cmd->pool, 2, sizeof(const char *)))"];
"1000151" [label="(Call,func->args = apr_array_make(cmd->pool, 2, sizeof(const char *)))"];
"1000166" [label="(Call,ap_getword_conf(cmd->pool, &require_line))"];
"1000163" [label="(Call,(arg = ap_getword_conf(cmd->pool, &require_line)) && *arg)"];
"1000164" [label="(Call,arg = ap_getword_conf(cmd->pool, &require_line))"];
"1000173" [label="(Identifier,arg)"];
"1000177" [label="(Call,*parsed_require_line)"];
"1000156" [label="(Call,cmd->pool)"];
"1000114" [label="(Call,sizeof(lua_authz_provider_func))"];
"1000155" [label="(Call,apr_array_make(cmd->pool, 2, sizeof(const char *)))"];
"1000166" [label="(Call,ap_getword_conf(cmd->pool, &require_line))"];
"1000152" [label="(Call,func->args)"];
"1000182" [label="(MethodReturn,static const char *)"];
"1000164" [label="(Call,arg = ap_getword_conf(cmd->pool, &require_line))"];
"1000159" [label="(Literal,2)"];
"1000110" [label="(Call,apr_pcalloc(cmd->pool, sizeof(lua_authz_provider_func)))"];
"1000162" [label="(ControlStructure,while ((arg = ap_getword_conf(cmd->pool, &require_line)) && *arg))"];
"1000108" [label="(Call,*func = apr_pcalloc(cmd->pool, sizeof(lua_authz_provider_func)))"];
"1000178" [label="(Identifier,parsed_require_line)"];
"1000176" [label="(Call,*parsed_require_line = func)"];
"1000170" [label="(Call,&require_line)"];
"1000111" [label="(Call,cmd->pool)"];
"1000175" [label="(Identifier,arg)"];
"1000149" [label="(Block,)"];
"1000163" [label="(Call,(arg = ap_getword_conf(cmd->pool, &require_line)) && *arg)"];
"1000109" [label="(Identifier,func)"];
"1000172" [label="(Call,*arg)"];
"1000160" [label="(Call,sizeof(const char *))"];
"1000179" [label="(Identifier,func)"];
"1000181" [label="(Identifier,NULL)"];
"1000167" [label="(Call,cmd->pool)"];
"1000104" [label="(Block,)"];
"1000151" [label="(Call,func->args = apr_array_make(cmd->pool, 2, sizeof(const char *)))"];
"1000165" [label="(Identifier,arg)"];
"1000110" -> "1000108"  [label="AST: "];
"1000110" -> "1000114"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000114" -> "1000110"  [label="AST: "];
"1000108" -> "1000110"  [label="CFG: "];
"1000110" -> "1000182"  [label="DDG: cmd->pool"];
"1000110" -> "1000108"  [label="DDG: cmd->pool"];
"1000110" -> "1000155"  [label="DDG: cmd->pool"];
"1000108" -> "1000104"  [label="AST: "];
"1000109" -> "1000108"  [label="AST: "];
"1000118" -> "1000108"  [label="CFG: "];
"1000108" -> "1000182"  [label="DDG: apr_pcalloc(cmd->pool, sizeof(lua_authz_provider_func))"];
"1000108" -> "1000176"  [label="DDG: func"];
"1000176" -> "1000104"  [label="AST: "];
"1000176" -> "1000179"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000179" -> "1000176"  [label="AST: "];
"1000181" -> "1000176"  [label="CFG: "];
"1000176" -> "1000182"  [label="DDG: func"];
"1000176" -> "1000182"  [label="DDG: *parsed_require_line"];
"1000155" -> "1000151"  [label="AST: "];
"1000155" -> "1000160"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000159" -> "1000155"  [label="AST: "];
"1000160" -> "1000155"  [label="AST: "];
"1000151" -> "1000155"  [label="CFG: "];
"1000155" -> "1000151"  [label="DDG: cmd->pool"];
"1000155" -> "1000151"  [label="DDG: 2"];
"1000155" -> "1000166"  [label="DDG: cmd->pool"];
"1000151" -> "1000149"  [label="AST: "];
"1000152" -> "1000151"  [label="AST: "];
"1000165" -> "1000151"  [label="CFG: "];
"1000151" -> "1000182"  [label="DDG: func->args"];
"1000151" -> "1000182"  [label="DDG: apr_array_make(cmd->pool, 2, sizeof(const char *))"];
"1000166" -> "1000164"  [label="AST: "];
"1000166" -> "1000170"  [label="CFG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000170" -> "1000166"  [label="AST: "];
"1000164" -> "1000166"  [label="CFG: "];
"1000166" -> "1000182"  [label="DDG: cmd->pool"];
"1000166" -> "1000182"  [label="DDG: &require_line"];
"1000166" -> "1000163"  [label="DDG: cmd->pool"];
"1000166" -> "1000163"  [label="DDG: &require_line"];
"1000166" -> "1000164"  [label="DDG: cmd->pool"];
"1000166" -> "1000164"  [label="DDG: &require_line"];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000164"  [label="CFG: "];
"1000163" -> "1000172"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000172" -> "1000163"  [label="AST: "];
"1000175" -> "1000163"  [label="CFG: "];
"1000178" -> "1000163"  [label="CFG: "];
"1000163" -> "1000182"  [label="DDG: *arg"];
"1000163" -> "1000182"  [label="DDG: (arg = ap_getword_conf(cmd->pool, &require_line)) && *arg"];
"1000164" -> "1000163"  [label="DDG: arg"];
"1000165" -> "1000164"  [label="AST: "];
"1000173" -> "1000164"  [label="CFG: "];
"1000164" -> "1000182"  [label="DDG: ap_getword_conf(cmd->pool, &require_line)"];
"1000164" -> "1000182"  [label="DDG: arg"];
}
