digraph "0_FreeRDP_0773bb9303d24473fe1185d85a424dfe159aff53@API" {
"1000191" [label="(Call,RegOpenKeyEx(HKEY_LOCAL_MACHINE, _T(\"Software\\FreeRDP\\Server\"),\n\t\t\t\t\t0, KEY_READ | KEY_WOW64_64KEY, &hKey))"];
"1000193" [label="(Call,_T(\"Software\\FreeRDP\\Server\"))"];
"1000196" [label="(Call,KEY_READ | KEY_WOW64_64KEY)"];
"1000189" [label="(Call,status = RegOpenKeyEx(HKEY_LOCAL_MACHINE, _T(\"Software\\FreeRDP\\Server\"),\n\t\t\t\t\t0, KEY_READ | KEY_WOW64_64KEY, &hKey))"];
"1000202" [label="(Call,status == ERROR_SUCCESS)"];
"1000219" [label="(Call,status == ERROR_SUCCESS)"];
"1000251" [label="(Call,status == ERROR_SUCCESS)"];
"1000251" [label="(Call,status == ERROR_SUCCESS)"];
"1000218" [label="(ControlStructure,if (status == ERROR_SUCCESS))"];
"1000203" [label="(Identifier,status)"];
"1000190" [label="(Identifier,status)"];
"1000265" [label="(MethodReturn,rdpCredssp*)"];
"1000192" [label="(Identifier,HKEY_LOCAL_MACHINE)"];
"1000189" [label="(Call,status = RegOpenKeyEx(HKEY_LOCAL_MACHINE, _T(\"Software\\FreeRDP\\Server\"),\n\t\t\t\t\t0, KEY_READ | KEY_WOW64_64KEY, &hKey))"];
"1000193" [label="(Call,_T(\"Software\\FreeRDP\\Server\"))"];
"1000202" [label="(Call,status == ERROR_SUCCESS)"];
"1000188" [label="(Block,)"];
"1000220" [label="(Identifier,status)"];
"1000204" [label="(Identifier,ERROR_SUCCESS)"];
"1000201" [label="(ControlStructure,if (status == ERROR_SUCCESS))"];
"1000257" [label="(Literal,\"Using SSPI Module: %s\n\")"];
"1000197" [label="(Identifier,KEY_READ)"];
"1000196" [label="(Call,KEY_READ | KEY_WOW64_64KEY)"];
"1000250" [label="(ControlStructure,if (status == ERROR_SUCCESS))"];
"1000199" [label="(Call,&hKey)"];
"1000225" [label="(Identifier,credssp)"];
"1000253" [label="(Identifier,ERROR_SUCCESS)"];
"1000221" [label="(Identifier,ERROR_SUCCESS)"];
"1000191" [label="(Call,RegOpenKeyEx(HKEY_LOCAL_MACHINE, _T(\"Software\\FreeRDP\\Server\"),\n\t\t\t\t\t0, KEY_READ | KEY_WOW64_64KEY, &hKey))"];
"1000219" [label="(Call,status == ERROR_SUCCESS)"];
"1000200" [label="(Identifier,hKey)"];
"1000234" [label="(Call,status = RegQueryValueEx(hKey, _T(\"SspiModule\"), NULL, &dwType,\n\t\t\t\t\t\t\t(BYTE*) credssp->SspiModule, &dwSize))"];
"1000207" [label="(Identifier,status)"];
"1000195" [label="(Literal,0)"];
"1000206" [label="(Call,status = RegQueryValueEx(hKey, _T(\"SspiModule\"), NULL, &dwType, NULL, &dwSize))"];
"1000264" [label="(Identifier,credssp)"];
"1000194" [label="(Literal,\"Software\\FreeRDP\\Server\")"];
"1000198" [label="(Identifier,KEY_WOW64_64KEY)"];
"1000252" [label="(Identifier,status)"];
"1000191" -> "1000189"  [label="AST: "];
"1000191" -> "1000199"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000193" -> "1000191"  [label="AST: "];
"1000195" -> "1000191"  [label="AST: "];
"1000196" -> "1000191"  [label="AST: "];
"1000199" -> "1000191"  [label="AST: "];
"1000189" -> "1000191"  [label="CFG: "];
"1000191" -> "1000265"  [label="DDG: "];
"1000191" -> "1000265"  [label="DDG: "];
"1000191" -> "1000265"  [label="DDG: "];
"1000191" -> "1000265"  [label="DDG: "];
"1000191" -> "1000189"  [label="DDG: "];
"1000191" -> "1000189"  [label="DDG: "];
"1000191" -> "1000189"  [label="DDG: "];
"1000191" -> "1000189"  [label="DDG: "];
"1000191" -> "1000189"  [label="DDG: "];
"1000193" -> "1000191"  [label="DDG: "];
"1000196" -> "1000191"  [label="DDG: "];
"1000196" -> "1000191"  [label="DDG: "];
"1000193" -> "1000194"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000195" -> "1000193"  [label="CFG: "];
"1000196" -> "1000198"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000198" -> "1000196"  [label="AST: "];
"1000200" -> "1000196"  [label="CFG: "];
"1000196" -> "1000265"  [label="DDG: "];
"1000196" -> "1000265"  [label="DDG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000189"  [label="AST: "];
"1000203" -> "1000189"  [label="CFG: "];
"1000189" -> "1000265"  [label="DDG: "];
"1000189" -> "1000202"  [label="DDG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000202" -> "1000204"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000207" -> "1000202"  [label="CFG: "];
"1000264" -> "1000202"  [label="CFG: "];
"1000202" -> "1000265"  [label="DDG: "];
"1000202" -> "1000265"  [label="DDG: "];
"1000202" -> "1000265"  [label="DDG: "];
"1000202" -> "1000219"  [label="DDG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000219" -> "1000221"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000221" -> "1000219"  [label="AST: "];
"1000225" -> "1000219"  [label="CFG: "];
"1000264" -> "1000219"  [label="CFG: "];
"1000219" -> "1000265"  [label="DDG: "];
"1000219" -> "1000265"  [label="DDG: "];
"1000219" -> "1000265"  [label="DDG: "];
"1000206" -> "1000219"  [label="DDG: "];
"1000219" -> "1000251"  [label="DDG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000251" -> "1000253"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="AST: "];
"1000257" -> "1000251"  [label="CFG: "];
"1000264" -> "1000251"  [label="CFG: "];
"1000251" -> "1000265"  [label="DDG: "];
"1000251" -> "1000265"  [label="DDG: "];
"1000251" -> "1000265"  [label="DDG: "];
"1000234" -> "1000251"  [label="DDG: "];
}
