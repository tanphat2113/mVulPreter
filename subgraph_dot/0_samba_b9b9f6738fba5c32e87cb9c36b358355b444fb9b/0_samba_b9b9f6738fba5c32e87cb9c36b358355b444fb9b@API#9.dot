digraph "0_samba_b9b9f6738fba5c32e87cb9c36b358355b444fb9b@API" {
"1000487" [label="(Call,close(ctcp->listen_fd))"];
"1000456" [label="(Call,listen(ctcp->listen_fd, 10))"];
"1000345" [label="(Call,bind(ctcp->listen_fd, (struct sockaddr * )&sock, sock_size))"];
"1000331" [label="(Call,setsockopt(ctcp->listen_fd,SOL_SOCKET,SO_REUSEADDR,(char *)&one,sizeof(one)))"];
"1000327" [label="(Call,set_close_on_exec(ctcp->listen_fd))"];
"1000316" [label="(Call,ctcp->listen_fd == -1)"];
"1000303" [label="(Call,ctcp->listen_fd = socket(sock.sa.sa_family, SOCK_STREAM, IPPROTO_TCP))"];
"1000307" [label="(Call,socket(sock.sa.sa_family, SOCK_STREAM, IPPROTO_TCP))"];
"1000320" [label="(Call,-1)"];
"1000337" [label="(Call,(char *)&one)"];
"1000349" [label="(Call,(struct sockaddr * )&sock)"];
"1000223" [label="(Call,ctdb_tcp_get_address(ctdb,\n\t\t\t\tctdb->nodes[i]->address.address, \n\t\t\t\t&sock))"];
"1000323" [label="(Call,ctdb_set_error(ctdb, \"socket failed\n\"))"];
"1000103" [label="(MethodParameterIn,struct ctdb_context *ctdb)"];
"1000263" [label="(Call,sock_size = sizeof(sock.ip))"];
"1000287" [label="(Call,sock_size = sizeof(sock.ip6))"];
"1000349" [label="(Call,(struct sockaddr * )&sock)"];
"1000500" [label="(MethodReturn,static int)"];
"1000234" [label="(Call,&sock)"];
"1000321" [label="(Literal,1)"];
"1000488" [label="(Call,ctcp->listen_fd)"];
"1000467" [label="(Call,event_add_fd(ctdb->ev, ctcp, ctcp->listen_fd, EVENT_FD_READ,\n\t\t\t   ctdb_listen_event, ctdb))"];
"1000222" [label="(Call,ctdb_tcp_get_address(ctdb,\n\t\t\t\tctdb->nodes[i]->address.address, \n\t\t\t\t&sock) != 0)"];
"1000411" [label="(Call,talloc_asprintf(ctdb, \"%s:%u\", \n\t\t\t\t     ctdb->address.address, \n\t\t\t\t     ctdb->address.port))"];
"1000487" [label="(Call,close(ctcp->listen_fd))"];
"1000457" [label="(Call,ctcp->listen_fd)"];
"1000337" [label="(Call,(char *)&one)"];
"1000263" [label="(Call,sock_size = sizeof(sock.ip))"];
"1000269" [label="(ControlStructure,break;)"];
"1000331" [label="(Call,setsockopt(ctcp->listen_fd,SOL_SOCKET,SO_REUSEADDR,(char *)&one,sizeof(one)))"];
"1000323" [label="(Call,ctdb_set_error(ctdb, \"socket failed\n\"))"];
"1000326" [label="(ControlStructure,continue;)"];
"1000354" [label="(Literal,0)"];
"1000303" [label="(Call,ctcp->listen_fd = socket(sock.sa.sa_family, SOCK_STREAM, IPPROTO_TCP))"];
"1000335" [label="(Identifier,SOL_SOCKET)"];
"1000353" [label="(Identifier,sock_size)"];
"1000333" [label="(Identifier,ctcp)"];
"1000381" [label="(Call,talloc_strdup(ctdb, ctdb->nodes[i]->address.address))"];
"1000346" [label="(Call,ctcp->listen_fd)"];
"1000320" [label="(Call,-1)"];
"1000345" [label="(Call,bind(ctcp->listen_fd, (struct sockaddr * )&sock, sock_size))"];
"1000347" [label="(Identifier,ctcp)"];
"1000318" [label="(Identifier,ctcp)"];
"1000344" [label="(Call,bind(ctcp->listen_fd, (struct sockaddr * )&sock, sock_size) == 0)"];
"1000316" [label="(Call,ctcp->listen_fd == -1)"];
"1000324" [label="(Identifier,ctdb)"];
"1000289" [label="(Call,sizeof(sock.ip6))"];
"1000493" [label="(Identifier,ctcp)"];
"1000456" [label="(Call,listen(ctcp->listen_fd, 10))"];
"1000327" [label="(Call,set_close_on_exec(ctcp->listen_fd))"];
"1000315" [label="(ControlStructure,if (ctcp->listen_fd == -1))"];
"1000329" [label="(Identifier,ctcp)"];
"1000223" [label="(Call,ctdb_tcp_get_address(ctdb,\n\t\t\t\tctdb->nodes[i]->address.address, \n\t\t\t\t&sock))"];
"1000322" [label="(Block,)"];
"1000341" [label="(Call,sizeof(one))"];
"1000336" [label="(Identifier,SO_REUSEADDR)"];
"1000206" [label="(Block,)"];
"1000293" [label="(ControlStructure,break;)"];
"1000462" [label="(Literal,1)"];
"1000225" [label="(Call,ctdb->nodes[i]->address.address)"];
"1000328" [label="(Call,ctcp->listen_fd)"];
"1000287" [label="(Call,sock_size = sizeof(sock.ip6))"];
"1000236" [label="(Literal,0)"];
"1000264" [label="(Identifier,sock_size)"];
"1000104" [label="(Block,)"];
"1000308" [label="(Call,sock.sa.sa_family)"];
"1000460" [label="(Literal,10)"];
"1000325" [label="(Literal,\"socket failed\n\")"];
"1000455" [label="(Call,listen(ctcp->listen_fd, 10) == -1)"];
"1000342" [label="(Identifier,one)"];
"1000224" [label="(Identifier,ctdb)"];
"1000332" [label="(Call,ctcp->listen_fd)"];
"1000288" [label="(Identifier,sock_size)"];
"1000296" [label="(Call,sock.ip.sin_len = sock_size)"];
"1000317" [label="(Call,ctcp->listen_fd)"];
"1000307" [label="(Call,socket(sock.sa.sa_family, SOCK_STREAM, IPPROTO_TCP))"];
"1000265" [label="(Call,sizeof(sock.ip))"];
"1000339" [label="(Call,&one)"];
"1000103" [label="(MethodParameterIn,struct ctdb_context *ctdb)"];
"1000304" [label="(Call,ctcp->listen_fd)"];
"1000314" [label="(Identifier,IPPROTO_TCP)"];
"1000313" [label="(Identifier,SOCK_STREAM)"];
"1000245" [label="(Block,)"];
"1000351" [label="(Call,&sock)"];
"1000487" -> "1000104"  [label="AST: "];
"1000487" -> "1000488"  [label="CFG: "];
"1000488" -> "1000487"  [label="AST: "];
"1000493" -> "1000487"  [label="CFG: "];
"1000487" -> "1000500"  [label="DDG: "];
"1000456" -> "1000487"  [label="DDG: "];
"1000345" -> "1000487"  [label="DDG: "];
"1000316" -> "1000487"  [label="DDG: "];
"1000456" -> "1000455"  [label="AST: "];
"1000456" -> "1000460"  [label="CFG: "];
"1000457" -> "1000456"  [label="AST: "];
"1000460" -> "1000456"  [label="AST: "];
"1000462" -> "1000456"  [label="CFG: "];
"1000456" -> "1000455"  [label="DDG: "];
"1000456" -> "1000455"  [label="DDG: "];
"1000345" -> "1000456"  [label="DDG: "];
"1000316" -> "1000456"  [label="DDG: "];
"1000456" -> "1000467"  [label="DDG: "];
"1000345" -> "1000344"  [label="AST: "];
"1000345" -> "1000353"  [label="CFG: "];
"1000346" -> "1000345"  [label="AST: "];
"1000349" -> "1000345"  [label="AST: "];
"1000353" -> "1000345"  [label="AST: "];
"1000354" -> "1000345"  [label="CFG: "];
"1000345" -> "1000500"  [label="DDG: "];
"1000345" -> "1000500"  [label="DDG: "];
"1000345" -> "1000344"  [label="DDG: "];
"1000345" -> "1000344"  [label="DDG: "];
"1000345" -> "1000344"  [label="DDG: "];
"1000331" -> "1000345"  [label="DDG: "];
"1000349" -> "1000345"  [label="DDG: "];
"1000263" -> "1000345"  [label="DDG: "];
"1000287" -> "1000345"  [label="DDG: "];
"1000331" -> "1000206"  [label="AST: "];
"1000331" -> "1000341"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000335" -> "1000331"  [label="AST: "];
"1000336" -> "1000331"  [label="AST: "];
"1000337" -> "1000331"  [label="AST: "];
"1000341" -> "1000331"  [label="AST: "];
"1000347" -> "1000331"  [label="CFG: "];
"1000331" -> "1000500"  [label="DDG: "];
"1000331" -> "1000500"  [label="DDG: "];
"1000331" -> "1000500"  [label="DDG: "];
"1000331" -> "1000500"  [label="DDG: "];
"1000327" -> "1000331"  [label="DDG: "];
"1000337" -> "1000331"  [label="DDG: "];
"1000327" -> "1000206"  [label="AST: "];
"1000327" -> "1000328"  [label="CFG: "];
"1000328" -> "1000327"  [label="AST: "];
"1000333" -> "1000327"  [label="CFG: "];
"1000327" -> "1000500"  [label="DDG: "];
"1000316" -> "1000327"  [label="DDG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000316" -> "1000320"  [label="CFG: "];
"1000317" -> "1000316"  [label="AST: "];
"1000320" -> "1000316"  [label="AST: "];
"1000324" -> "1000316"  [label="CFG: "];
"1000329" -> "1000316"  [label="CFG: "];
"1000316" -> "1000500"  [label="DDG: "];
"1000303" -> "1000316"  [label="DDG: "];
"1000320" -> "1000316"  [label="DDG: "];
"1000303" -> "1000206"  [label="AST: "];
"1000303" -> "1000307"  [label="CFG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000307" -> "1000303"  [label="AST: "];
"1000318" -> "1000303"  [label="CFG: "];
"1000303" -> "1000500"  [label="DDG: "];
"1000307" -> "1000303"  [label="DDG: "];
"1000307" -> "1000303"  [label="DDG: "];
"1000307" -> "1000303"  [label="DDG: "];
"1000307" -> "1000314"  [label="CFG: "];
"1000308" -> "1000307"  [label="AST: "];
"1000313" -> "1000307"  [label="AST: "];
"1000314" -> "1000307"  [label="AST: "];
"1000307" -> "1000500"  [label="DDG: "];
"1000307" -> "1000500"  [label="DDG: "];
"1000307" -> "1000500"  [label="DDG: "];
"1000320" -> "1000321"  [label="CFG: "];
"1000321" -> "1000320"  [label="AST: "];
"1000337" -> "1000339"  [label="CFG: "];
"1000338" -> "1000337"  [label="AST: "];
"1000339" -> "1000337"  [label="AST: "];
"1000342" -> "1000337"  [label="CFG: "];
"1000337" -> "1000500"  [label="DDG: "];
"1000349" -> "1000351"  [label="CFG: "];
"1000350" -> "1000349"  [label="AST: "];
"1000351" -> "1000349"  [label="AST: "];
"1000353" -> "1000349"  [label="CFG: "];
"1000349" -> "1000500"  [label="DDG: "];
"1000349" -> "1000223"  [label="DDG: "];
"1000223" -> "1000349"  [label="DDG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000223" -> "1000234"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000225" -> "1000223"  [label="AST: "];
"1000234" -> "1000223"  [label="AST: "];
"1000236" -> "1000223"  [label="CFG: "];
"1000223" -> "1000500"  [label="DDG: "];
"1000223" -> "1000500"  [label="DDG: "];
"1000223" -> "1000500"  [label="DDG: "];
"1000223" -> "1000222"  [label="DDG: "];
"1000223" -> "1000222"  [label="DDG: "];
"1000223" -> "1000222"  [label="DDG: "];
"1000323" -> "1000223"  [label="DDG: "];
"1000103" -> "1000223"  [label="DDG: "];
"1000223" -> "1000323"  [label="DDG: "];
"1000223" -> "1000381"  [label="DDG: "];
"1000223" -> "1000381"  [label="DDG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000323" -> "1000325"  [label="CFG: "];
"1000324" -> "1000323"  [label="AST: "];
"1000325" -> "1000323"  [label="AST: "];
"1000326" -> "1000323"  [label="CFG: "];
"1000323" -> "1000500"  [label="DDG: "];
"1000323" -> "1000500"  [label="DDG: "];
"1000103" -> "1000323"  [label="DDG: "];
"1000323" -> "1000381"  [label="DDG: "];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000500"  [label="DDG: "];
"1000103" -> "1000381"  [label="DDG: "];
"1000103" -> "1000411"  [label="DDG: "];
"1000103" -> "1000467"  [label="DDG: "];
"1000263" -> "1000245"  [label="AST: "];
"1000263" -> "1000265"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000263"  [label="AST: "];
"1000269" -> "1000263"  [label="CFG: "];
"1000263" -> "1000500"  [label="DDG: "];
"1000263" -> "1000296"  [label="DDG: "];
"1000287" -> "1000245"  [label="AST: "];
"1000287" -> "1000289"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000287"  [label="AST: "];
"1000293" -> "1000287"  [label="CFG: "];
"1000287" -> "1000500"  [label="DDG: "];
"1000287" -> "1000296"  [label="DDG: "];
}
