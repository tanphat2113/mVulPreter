digraph "0_samba_b9b9f6738fba5c32e87cb9c36b358355b444fb9b@API" {
"1000263" [label="(Call,sock_size = sizeof(sock.ip))"];
"1000296" [label="(Call,sock.ip.sin_len = sock_size)"];
"1000345" [label="(Call,bind(ctcp->listen_fd, (struct sockaddr * )&sock, sock_size))"];
"1000344" [label="(Call,bind(ctcp->listen_fd, (struct sockaddr * )&sock, sock_size) == 0)"];
"1000456" [label="(Call,listen(ctcp->listen_fd, 10))"];
"1000455" [label="(Call,listen(ctcp->listen_fd, 10) == -1)"];
"1000467" [label="(Call,event_add_fd(ctdb->ev, ctcp, ctcp->listen_fd, EVENT_FD_READ,\n\t\t\t   ctdb_listen_event, ctdb))"];
"1000465" [label="(Call,fde = event_add_fd(ctdb->ev, ctcp, ctcp->listen_fd, EVENT_FD_READ,\n\t\t\t   ctdb_listen_event, ctdb))"];
"1000478" [label="(Call,tevent_fd_set_auto_close(fde))"];
"1000487" [label="(Call,close(ctcp->listen_fd))"];
"1000349" [label="(Call,(struct sockaddr * )&sock)"];
"1000500" [label="(MethodReturn,static int)"];
"1000411" [label="(Call,talloc_asprintf(ctdb, \"%s:%u\", \n\t\t\t\t     ctdb->address.address, \n\t\t\t\t     ctdb->address.port))"];
"1000467" [label="(Call,event_add_fd(ctdb->ev, ctcp, ctcp->listen_fd, EVENT_FD_READ,\n\t\t\t   ctdb_listen_event, ctdb))"];
"1000472" [label="(Call,ctcp->listen_fd)"];
"1000488" [label="(Call,ctcp->listen_fd)"];
"1000487" [label="(Call,close(ctcp->listen_fd))"];
"1000457" [label="(Call,ctcp->listen_fd)"];
"1000461" [label="(Call,-1)"];
"1000468" [label="(Call,ctdb->ev)"];
"1000263" [label="(Call,sock_size = sizeof(sock.ip))"];
"1000269" [label="(ControlStructure,break;)"];
"1000331" [label="(Call,setsockopt(ctcp->listen_fd,SOL_SOCKET,SO_REUSEADDR,(char *)&one,sizeof(one)))"];
"1000466" [label="(Identifier,fde)"];
"1000354" [label="(Literal,0)"];
"1000479" [label="(Identifier,fde)"];
"1000353" [label="(Identifier,sock_size)"];
"1000346" [label="(Call,ctcp->listen_fd)"];
"1000359" [label="(Identifier,errno)"];
"1000454" [label="(ControlStructure,if (listen(ctcp->listen_fd, 10) == -1))"];
"1000345" [label="(Call,bind(ctcp->listen_fd, (struct sockaddr * )&sock, sock_size))"];
"1000343" [label="(ControlStructure,if (bind(ctcp->listen_fd, (struct sockaddr * )&sock, sock_size) == 0))"];
"1000481" [label="(Identifier,lock_fd)"];
"1000344" [label="(Call,bind(ctcp->listen_fd, (struct sockaddr * )&sock, sock_size) == 0)"];
"1000316" [label="(Call,ctcp->listen_fd == -1)"];
"1000493" [label="(Identifier,ctcp)"];
"1000456" [label="(Call,listen(ctcp->listen_fd, 10))"];
"1000478" [label="(Call,tevent_fd_set_auto_close(fde))"];
"1000302" [label="(Identifier,sock_size)"];
"1000206" [label="(Block,)"];
"1000465" [label="(Call,fde = event_add_fd(ctdb->ev, ctcp, ctcp->listen_fd, EVENT_FD_READ,\n\t\t\t   ctdb_listen_event, ctdb))"];
"1000477" [label="(Identifier,ctdb)"];
"1000462" [label="(Literal,1)"];
"1000287" [label="(Call,sock_size = sizeof(sock.ip6))"];
"1000264" [label="(Identifier,sock_size)"];
"1000104" [label="(Block,)"];
"1000460" [label="(Literal,10)"];
"1000305" [label="(Identifier,ctcp)"];
"1000455" [label="(Call,listen(ctcp->listen_fd, 10) == -1)"];
"1000476" [label="(Identifier,ctdb_listen_event)"];
"1000471" [label="(Identifier,ctcp)"];
"1000296" [label="(Call,sock.ip.sin_len = sock_size)"];
"1000297" [label="(Call,sock.ip.sin_len)"];
"1000265" [label="(Call,sizeof(sock.ip))"];
"1000475" [label="(Identifier,EVENT_FD_READ)"];
"1000245" [label="(Block,)"];
"1000356" [label="(ControlStructure,break;)"];
"1000464" [label="(ControlStructure,goto failed;)"];
"1000103" [label="(MethodParameterIn,struct ctdb_context *ctdb)"];
"1000263" -> "1000245"  [label="AST: "];
"1000263" -> "1000265"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000263"  [label="AST: "];
"1000269" -> "1000263"  [label="CFG: "];
"1000263" -> "1000500"  [label="DDG: sock_size"];
"1000263" -> "1000296"  [label="DDG: sock_size"];
"1000263" -> "1000345"  [label="DDG: sock_size"];
"1000296" -> "1000206"  [label="AST: "];
"1000296" -> "1000302"  [label="CFG: "];
"1000297" -> "1000296"  [label="AST: "];
"1000302" -> "1000296"  [label="AST: "];
"1000305" -> "1000296"  [label="CFG: "];
"1000296" -> "1000500"  [label="DDG: sock.ip.sin_len"];
"1000296" -> "1000500"  [label="DDG: sock_size"];
"1000287" -> "1000296"  [label="DDG: sock_size"];
"1000345" -> "1000344"  [label="AST: "];
"1000345" -> "1000353"  [label="CFG: "];
"1000346" -> "1000345"  [label="AST: "];
"1000349" -> "1000345"  [label="AST: "];
"1000353" -> "1000345"  [label="AST: "];
"1000354" -> "1000345"  [label="CFG: "];
"1000345" -> "1000500"  [label="DDG: (struct sockaddr * )&sock"];
"1000345" -> "1000500"  [label="DDG: sock_size"];
"1000345" -> "1000344"  [label="DDG: ctcp->listen_fd"];
"1000345" -> "1000344"  [label="DDG: (struct sockaddr * )&sock"];
"1000345" -> "1000344"  [label="DDG: sock_size"];
"1000331" -> "1000345"  [label="DDG: ctcp->listen_fd"];
"1000349" -> "1000345"  [label="DDG: &sock"];
"1000287" -> "1000345"  [label="DDG: sock_size"];
"1000345" -> "1000456"  [label="DDG: ctcp->listen_fd"];
"1000345" -> "1000487"  [label="DDG: ctcp->listen_fd"];
"1000344" -> "1000343"  [label="AST: "];
"1000344" -> "1000354"  [label="CFG: "];
"1000354" -> "1000344"  [label="AST: "];
"1000356" -> "1000344"  [label="CFG: "];
"1000359" -> "1000344"  [label="CFG: "];
"1000344" -> "1000500"  [label="DDG: bind(ctcp->listen_fd, (struct sockaddr * )&sock, sock_size) == 0"];
"1000344" -> "1000500"  [label="DDG: bind(ctcp->listen_fd, (struct sockaddr * )&sock, sock_size)"];
"1000456" -> "1000455"  [label="AST: "];
"1000456" -> "1000460"  [label="CFG: "];
"1000457" -> "1000456"  [label="AST: "];
"1000460" -> "1000456"  [label="AST: "];
"1000462" -> "1000456"  [label="CFG: "];
"1000456" -> "1000455"  [label="DDG: ctcp->listen_fd"];
"1000456" -> "1000455"  [label="DDG: 10"];
"1000316" -> "1000456"  [label="DDG: ctcp->listen_fd"];
"1000456" -> "1000467"  [label="DDG: ctcp->listen_fd"];
"1000456" -> "1000487"  [label="DDG: ctcp->listen_fd"];
"1000455" -> "1000454"  [label="AST: "];
"1000455" -> "1000461"  [label="CFG: "];
"1000461" -> "1000455"  [label="AST: "];
"1000464" -> "1000455"  [label="CFG: "];
"1000466" -> "1000455"  [label="CFG: "];
"1000455" -> "1000500"  [label="DDG: listen(ctcp->listen_fd, 10) == -1"];
"1000455" -> "1000500"  [label="DDG: -1"];
"1000455" -> "1000500"  [label="DDG: listen(ctcp->listen_fd, 10)"];
"1000461" -> "1000455"  [label="DDG: 1"];
"1000467" -> "1000465"  [label="AST: "];
"1000467" -> "1000477"  [label="CFG: "];
"1000468" -> "1000467"  [label="AST: "];
"1000471" -> "1000467"  [label="AST: "];
"1000472" -> "1000467"  [label="AST: "];
"1000475" -> "1000467"  [label="AST: "];
"1000476" -> "1000467"  [label="AST: "];
"1000477" -> "1000467"  [label="AST: "];
"1000465" -> "1000467"  [label="CFG: "];
"1000467" -> "1000500"  [label="DDG: ctcp->listen_fd"];
"1000467" -> "1000500"  [label="DDG: ctdb->ev"];
"1000467" -> "1000500"  [label="DDG: ctdb_listen_event"];
"1000467" -> "1000500"  [label="DDG: ctdb"];
"1000467" -> "1000500"  [label="DDG: EVENT_FD_READ"];
"1000467" -> "1000500"  [label="DDG: ctcp"];
"1000467" -> "1000465"  [label="DDG: ctcp"];
"1000467" -> "1000465"  [label="DDG: EVENT_FD_READ"];
"1000467" -> "1000465"  [label="DDG: ctdb->ev"];
"1000467" -> "1000465"  [label="DDG: ctdb_listen_event"];
"1000467" -> "1000465"  [label="DDG: ctdb"];
"1000467" -> "1000465"  [label="DDG: ctcp->listen_fd"];
"1000411" -> "1000467"  [label="DDG: ctdb"];
"1000103" -> "1000467"  [label="DDG: ctdb"];
"1000465" -> "1000104"  [label="AST: "];
"1000466" -> "1000465"  [label="AST: "];
"1000479" -> "1000465"  [label="CFG: "];
"1000465" -> "1000500"  [label="DDG: event_add_fd(ctdb->ev, ctcp, ctcp->listen_fd, EVENT_FD_READ,\n\t\t\t   ctdb_listen_event, ctdb)"];
"1000465" -> "1000478"  [label="DDG: fde"];
"1000478" -> "1000104"  [label="AST: "];
"1000478" -> "1000479"  [label="CFG: "];
"1000479" -> "1000478"  [label="AST: "];
"1000481" -> "1000478"  [label="CFG: "];
"1000478" -> "1000500"  [label="DDG: fde"];
"1000478" -> "1000500"  [label="DDG: tevent_fd_set_auto_close(fde)"];
"1000487" -> "1000104"  [label="AST: "];
"1000487" -> "1000488"  [label="CFG: "];
"1000488" -> "1000487"  [label="AST: "];
"1000493" -> "1000487"  [label="CFG: "];
"1000487" -> "1000500"  [label="DDG: close(ctcp->listen_fd)"];
"1000316" -> "1000487"  [label="DDG: ctcp->listen_fd"];
}
