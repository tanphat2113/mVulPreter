digraph "0_samba_b9b9f6738fba5c32e87cb9c36b358355b444fb9b@API" {
"1000407" [label="(Call,ctdb->name = talloc_asprintf(ctdb, \"%s:%u\", \n\t\t\t\t     ctdb->address.address, \n\t\t\t\t     ctdb->address.port))"];
"1000411" [label="(Call,talloc_asprintf(ctdb, \"%s:%u\", \n\t\t\t\t     ctdb->address.address, \n\t\t\t\t     ctdb->address.port))"];
"1000381" [label="(Call,talloc_strdup(ctdb, ctdb->nodes[i]->address.address))"];
"1000323" [label="(Call,ctdb_set_error(ctdb, \"socket failed\n\"))"];
"1000223" [label="(Call,ctdb_tcp_get_address(ctdb,\n\t\t\t\tctdb->nodes[i]->address.address, \n\t\t\t\t&sock))"];
"1000103" [label="(MethodParameterIn,struct ctdb_context *ctdb)"];
"1000349" [label="(Call,(struct sockaddr * )&sock)"];
"1000375" [label="(Call,ctdb->address.address = talloc_strdup(ctdb, ctdb->nodes[i]->address.address))"];
"1000392" [label="(Call,ctdb->address.port    = ctdb->nodes[i]->address.port)"];
"1000253" [label="(Call,htons(ctdb->nodes[i]->address.port))"];
"1000277" [label="(Call,htons(ctdb->nodes[i]->address.port))"];
"1000349" [label="(Call,(struct sockaddr * )&sock)"];
"1000500" [label="(MethodReturn,static int)"];
"1000234" [label="(Call,&sock)"];
"1000411" [label="(Call,talloc_asprintf(ctdb, \"%s:%u\", \n\t\t\t\t     ctdb->address.address, \n\t\t\t\t     ctdb->address.port))"];
"1000375" [label="(Call,ctdb->address.address = talloc_strdup(ctdb, ctdb->nodes[i]->address.address))"];
"1000467" [label="(Call,event_add_fd(ctdb->ev, ctcp, ctcp->listen_fd, EVENT_FD_READ,\n\t\t\t   ctdb_listen_event, ctdb))"];
"1000414" [label="(Call,ctdb->address.address)"];
"1000412" [label="(Identifier,ctdb)"];
"1000222" [label="(Call,ctdb_tcp_get_address(ctdb,\n\t\t\t\tctdb->nodes[i]->address.address, \n\t\t\t\t&sock) != 0)"];
"1000398" [label="(Call,ctdb->nodes[i]->address.port)"];
"1000254" [label="(Call,ctdb->nodes[i]->address.port)"];
"1000323" [label="(Call,ctdb_set_error(ctdb, \"socket failed\n\"))"];
"1000326" [label="(ControlStructure,continue;)"];
"1000393" [label="(Call,ctdb->address.port)"];
"1000353" [label="(Identifier,sock_size)"];
"1000381" [label="(Call,talloc_strdup(ctdb, ctdb->nodes[i]->address.address))"];
"1000419" [label="(Call,ctdb->address.port)"];
"1000345" [label="(Call,bind(ctcp->listen_fd, (struct sockaddr * )&sock, sock_size))"];
"1000382" [label="(Identifier,ctdb)"];
"1000324" [label="(Identifier,ctdb)"];
"1000426" [label="(Identifier,ctdb)"];
"1000223" [label="(Call,ctdb_tcp_get_address(ctdb,\n\t\t\t\tctdb->nodes[i]->address.address, \n\t\t\t\t&sock))"];
"1000322" [label="(Block,)"];
"1000408" [label="(Call,ctdb->name)"];
"1000225" [label="(Call,ctdb->nodes[i]->address.address)"];
"1000409" [label="(Identifier,ctdb)"];
"1000236" [label="(Literal,0)"];
"1000271" [label="(Call,sock.ip6.sin6_port = htons(ctdb->nodes[i]->address.port))"];
"1000277" [label="(Call,htons(ctdb->nodes[i]->address.port))"];
"1000104" [label="(Block,)"];
"1000278" [label="(Call,ctdb->nodes[i]->address.port)"];
"1000395" [label="(Identifier,ctdb)"];
"1000247" [label="(Call,sock.ip.sin_port = htons(ctdb->nodes[i]->address.port))"];
"1000407" [label="(Call,ctdb->name = talloc_asprintf(ctdb, \"%s:%u\", \n\t\t\t\t     ctdb->address.address, \n\t\t\t\t     ctdb->address.port))"];
"1000413" [label="(Literal,\"%s:%u\")"];
"1000325" [label="(Literal,\"socket failed\n\")"];
"1000253" [label="(Call,htons(ctdb->nodes[i]->address.port))"];
"1000224" [label="(Identifier,ctdb)"];
"1000392" [label="(Call,ctdb->address.port    = ctdb->nodes[i]->address.port)"];
"1000103" [label="(MethodParameterIn,struct ctdb_context *ctdb)"];
"1000383" [label="(Call,ctdb->nodes[i]->address.address)"];
"1000376" [label="(Call,ctdb->address.address)"];
"1000351" [label="(Call,&sock)"];
"1000407" -> "1000104"  [label="AST: "];
"1000407" -> "1000411"  [label="CFG: "];
"1000408" -> "1000407"  [label="AST: "];
"1000411" -> "1000407"  [label="AST: "];
"1000426" -> "1000407"  [label="CFG: "];
"1000407" -> "1000500"  [label="DDG: "];
"1000407" -> "1000500"  [label="DDG: "];
"1000411" -> "1000407"  [label="DDG: "];
"1000411" -> "1000407"  [label="DDG: "];
"1000411" -> "1000407"  [label="DDG: "];
"1000411" -> "1000407"  [label="DDG: "];
"1000411" -> "1000419"  [label="CFG: "];
"1000412" -> "1000411"  [label="AST: "];
"1000413" -> "1000411"  [label="AST: "];
"1000414" -> "1000411"  [label="AST: "];
"1000419" -> "1000411"  [label="AST: "];
"1000411" -> "1000500"  [label="DDG: "];
"1000411" -> "1000500"  [label="DDG: "];
"1000411" -> "1000500"  [label="DDG: "];
"1000381" -> "1000411"  [label="DDG: "];
"1000103" -> "1000411"  [label="DDG: "];
"1000375" -> "1000411"  [label="DDG: "];
"1000392" -> "1000411"  [label="DDG: "];
"1000411" -> "1000467"  [label="DDG: "];
"1000381" -> "1000375"  [label="AST: "];
"1000381" -> "1000383"  [label="CFG: "];
"1000382" -> "1000381"  [label="AST: "];
"1000383" -> "1000381"  [label="AST: "];
"1000375" -> "1000381"  [label="CFG: "];
"1000381" -> "1000500"  [label="DDG: "];
"1000381" -> "1000375"  [label="DDG: "];
"1000381" -> "1000375"  [label="DDG: "];
"1000323" -> "1000381"  [label="DDG: "];
"1000223" -> "1000381"  [label="DDG: "];
"1000223" -> "1000381"  [label="DDG: "];
"1000103" -> "1000381"  [label="DDG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000323" -> "1000325"  [label="CFG: "];
"1000324" -> "1000323"  [label="AST: "];
"1000325" -> "1000323"  [label="AST: "];
"1000326" -> "1000323"  [label="CFG: "];
"1000323" -> "1000500"  [label="DDG: "];
"1000323" -> "1000500"  [label="DDG: "];
"1000323" -> "1000223"  [label="DDG: "];
"1000223" -> "1000323"  [label="DDG: "];
"1000103" -> "1000323"  [label="DDG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000223" -> "1000234"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000225" -> "1000223"  [label="AST: "];
"1000234" -> "1000223"  [label="AST: "];
"1000236" -> "1000223"  [label="CFG: "];
"1000223" -> "1000500"  [label="DDG: "];
"1000223" -> "1000500"  [label="DDG: "];
"1000223" -> "1000500"  [label="DDG: "];
"1000223" -> "1000222"  [label="DDG: "];
"1000223" -> "1000222"  [label="DDG: "];
"1000223" -> "1000222"  [label="DDG: "];
"1000103" -> "1000223"  [label="DDG: "];
"1000349" -> "1000223"  [label="DDG: "];
"1000223" -> "1000349"  [label="DDG: "];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000500"  [label="DDG: "];
"1000103" -> "1000467"  [label="DDG: "];
"1000349" -> "1000345"  [label="AST: "];
"1000349" -> "1000351"  [label="CFG: "];
"1000350" -> "1000349"  [label="AST: "];
"1000351" -> "1000349"  [label="AST: "];
"1000353" -> "1000349"  [label="CFG: "];
"1000349" -> "1000500"  [label="DDG: "];
"1000349" -> "1000345"  [label="DDG: "];
"1000375" -> "1000104"  [label="AST: "];
"1000376" -> "1000375"  [label="AST: "];
"1000395" -> "1000375"  [label="CFG: "];
"1000375" -> "1000500"  [label="DDG: "];
"1000392" -> "1000104"  [label="AST: "];
"1000392" -> "1000398"  [label="CFG: "];
"1000393" -> "1000392"  [label="AST: "];
"1000398" -> "1000392"  [label="AST: "];
"1000409" -> "1000392"  [label="CFG: "];
"1000392" -> "1000500"  [label="DDG: "];
"1000253" -> "1000392"  [label="DDG: "];
"1000277" -> "1000392"  [label="DDG: "];
"1000253" -> "1000247"  [label="AST: "];
"1000253" -> "1000254"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000247" -> "1000253"  [label="CFG: "];
"1000253" -> "1000500"  [label="DDG: "];
"1000253" -> "1000247"  [label="DDG: "];
"1000277" -> "1000253"  [label="DDG: "];
"1000253" -> "1000277"  [label="DDG: "];
"1000277" -> "1000271"  [label="AST: "];
"1000277" -> "1000278"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000271" -> "1000277"  [label="CFG: "];
"1000277" -> "1000500"  [label="DDG: "];
"1000277" -> "1000271"  [label="DDG: "];
}
