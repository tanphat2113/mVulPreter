digraph "0_linux_680d04e0ba7e926233e3b9cee59125ce181f66ba@API" {
"1000141" [label="(Call,skb = skb_recv_datagram(&vsk->sk, flags, noblock, &err))"];
"1000143" [label="(Call,skb_recv_datagram(&vsk->sk, flags, noblock, &err))"];
"1000124" [label="(Call,flags & MSG_OOB)"];
"1000119" [label="(Call,flags & MSG_DONTWAIT)"];
"1000110" [label="(MethodParameterIn,int flags)"];
"1000127" [label="(Call,flags & MSG_ERRQUEUE)"];
"1000117" [label="(Call,noblock = flags & MSG_DONTWAIT)"];
"1000157" [label="(Call,!skb)"];
"1000209" [label="(Call,skb_copy_datagram_iovec(skb, sizeof(*dg), msg->msg_iov,\n\t\tpayload_len))"];
"1000207" [label="(Call,err = skb_copy_datagram_iovec(skb, sizeof(*dg), msg->msg_iov,\n\t\tpayload_len))"];
"1000263" [label="(Return,return err;)"];
"1000253" [label="(Call,err = payload_len)"];
"1000257" [label="(Call,skb_free_datagram(&vsk->sk, skb))"];
"1000128" [label="(Identifier,flags)"];
"1000142" [label="(Identifier,skb)"];
"1000189" [label="(Call,err = -EINVAL)"];
"1000148" [label="(Identifier,flags)"];
"1000195" [label="(Call,payload_len > len)"];
"1000138" [label="(Call,err = 0)"];
"1000254" [label="(Identifier,err)"];
"1000217" [label="(Identifier,payload_len)"];
"1000110" [label="(MethodParameterIn,int flags)"];
"1000208" [label="(Identifier,err)"];
"1000119" [label="(Call,flags & MSG_DONTWAIT)"];
"1000149" [label="(Identifier,noblock)"];
"1000117" [label="(Call,noblock = flags & MSG_DONTWAIT)"];
"1000163" [label="(Identifier,dg)"];
"1000253" [label="(Call,err = payload_len)"];
"1000256" [label="(JumpTarget,out:)"];
"1000211" [label="(Call,sizeof(*dg))"];
"1000120" [label="(Identifier,flags)"];
"1000257" [label="(Call,skb_free_datagram(&vsk->sk, skb))"];
"1000209" [label="(Call,skb_copy_datagram_iovec(skb, sizeof(*dg), msg->msg_iov,\n\t\tpayload_len))"];
"1000265" [label="(MethodReturn,static int)"];
"1000262" [label="(Identifier,skb)"];
"1000219" [label="(Identifier,err)"];
"1000161" [label="(Identifier,EAGAIN)"];
"1000125" [label="(Identifier,flags)"];
"1000153" [label="(Identifier,err)"];
"1000144" [label="(Call,&vsk->sk)"];
"1000143" [label="(Call,skb_recv_datagram(&vsk->sk, flags, noblock, &err))"];
"1000150" [label="(Call,&err)"];
"1000264" [label="(Identifier,err)"];
"1000258" [label="(Call,&vsk->sk)"];
"1000127" [label="(Call,flags & MSG_ERRQUEUE)"];
"1000118" [label="(Identifier,noblock)"];
"1000207" [label="(Call,err = skb_copy_datagram_iovec(skb, sizeof(*dg), msg->msg_iov,\n\t\tpayload_len))"];
"1000199" [label="(Call,payload_len = len)"];
"1000141" [label="(Call,skb = skb_recv_datagram(&vsk->sk, flags, noblock, &err))"];
"1000255" [label="(Identifier,payload_len)"];
"1000121" [label="(Identifier,MSG_DONTWAIT)"];
"1000156" [label="(ControlStructure,if (!skb))"];
"1000123" [label="(Call,flags & MSG_OOB || flags & MSG_ERRQUEUE)"];
"1000158" [label="(Identifier,skb)"];
"1000263" [label="(Return,return err;)"];
"1000210" [label="(Identifier,skb)"];
"1000124" [label="(Call,flags & MSG_OOB)"];
"1000126" [label="(Identifier,MSG_OOB)"];
"1000129" [label="(Identifier,MSG_ERRQUEUE)"];
"1000157" [label="(Call,!skb)"];
"1000214" [label="(Call,msg->msg_iov)"];
"1000111" [label="(Block,)"];
"1000141" -> "1000111"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000153" -> "1000141"  [label="CFG: "];
"1000141" -> "1000265"  [label="DDG: skb"];
"1000141" -> "1000265"  [label="DDG: skb_recv_datagram(&vsk->sk, flags, noblock, &err)"];
"1000143" -> "1000141"  [label="DDG: &vsk->sk"];
"1000143" -> "1000141"  [label="DDG: flags"];
"1000143" -> "1000141"  [label="DDG: noblock"];
"1000143" -> "1000141"  [label="DDG: &err"];
"1000141" -> "1000157"  [label="DDG: skb"];
"1000143" -> "1000150"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000148" -> "1000143"  [label="AST: "];
"1000149" -> "1000143"  [label="AST: "];
"1000150" -> "1000143"  [label="AST: "];
"1000143" -> "1000265"  [label="DDG: &vsk->sk"];
"1000143" -> "1000265"  [label="DDG: noblock"];
"1000143" -> "1000265"  [label="DDG: flags"];
"1000143" -> "1000265"  [label="DDG: &err"];
"1000124" -> "1000143"  [label="DDG: flags"];
"1000127" -> "1000143"  [label="DDG: flags"];
"1000110" -> "1000143"  [label="DDG: flags"];
"1000117" -> "1000143"  [label="DDG: noblock"];
"1000143" -> "1000257"  [label="DDG: &vsk->sk"];
"1000124" -> "1000123"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000128" -> "1000124"  [label="CFG: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000265"  [label="DDG: MSG_OOB"];
"1000124" -> "1000265"  [label="DDG: flags"];
"1000124" -> "1000123"  [label="DDG: flags"];
"1000124" -> "1000123"  [label="DDG: MSG_OOB"];
"1000119" -> "1000124"  [label="DDG: flags"];
"1000110" -> "1000124"  [label="DDG: flags"];
"1000124" -> "1000127"  [label="DDG: flags"];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000119" -> "1000265"  [label="DDG: MSG_DONTWAIT"];
"1000119" -> "1000117"  [label="DDG: flags"];
"1000119" -> "1000117"  [label="DDG: MSG_DONTWAIT"];
"1000110" -> "1000119"  [label="DDG: flags"];
"1000110" -> "1000105"  [label="AST: "];
"1000110" -> "1000265"  [label="DDG: flags"];
"1000110" -> "1000127"  [label="DDG: flags"];
"1000127" -> "1000123"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000123" -> "1000127"  [label="CFG: "];
"1000127" -> "1000265"  [label="DDG: MSG_ERRQUEUE"];
"1000127" -> "1000265"  [label="DDG: flags"];
"1000127" -> "1000123"  [label="DDG: flags"];
"1000127" -> "1000123"  [label="DDG: MSG_ERRQUEUE"];
"1000117" -> "1000111"  [label="AST: "];
"1000118" -> "1000117"  [label="AST: "];
"1000125" -> "1000117"  [label="CFG: "];
"1000117" -> "1000265"  [label="DDG: flags & MSG_DONTWAIT"];
"1000117" -> "1000265"  [label="DDG: noblock"];
"1000157" -> "1000156"  [label="AST: "];
"1000157" -> "1000158"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000161" -> "1000157"  [label="CFG: "];
"1000163" -> "1000157"  [label="CFG: "];
"1000157" -> "1000265"  [label="DDG: !skb"];
"1000157" -> "1000265"  [label="DDG: skb"];
"1000157" -> "1000209"  [label="DDG: skb"];
"1000157" -> "1000257"  [label="DDG: skb"];
"1000209" -> "1000207"  [label="AST: "];
"1000209" -> "1000217"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000211" -> "1000209"  [label="AST: "];
"1000214" -> "1000209"  [label="AST: "];
"1000217" -> "1000209"  [label="AST: "];
"1000207" -> "1000209"  [label="CFG: "];
"1000209" -> "1000265"  [label="DDG: payload_len"];
"1000209" -> "1000265"  [label="DDG: msg->msg_iov"];
"1000209" -> "1000207"  [label="DDG: skb"];
"1000209" -> "1000207"  [label="DDG: msg->msg_iov"];
"1000209" -> "1000207"  [label="DDG: payload_len"];
"1000199" -> "1000209"  [label="DDG: payload_len"];
"1000195" -> "1000209"  [label="DDG: payload_len"];
"1000209" -> "1000253"  [label="DDG: payload_len"];
"1000209" -> "1000257"  [label="DDG: skb"];
"1000207" -> "1000111"  [label="AST: "];
"1000208" -> "1000207"  [label="AST: "];
"1000219" -> "1000207"  [label="CFG: "];
"1000207" -> "1000265"  [label="DDG: skb_copy_datagram_iovec(skb, sizeof(*dg), msg->msg_iov,\n\t\tpayload_len)"];
"1000207" -> "1000265"  [label="DDG: err"];
"1000207" -> "1000263"  [label="DDG: err"];
"1000263" -> "1000111"  [label="AST: "];
"1000263" -> "1000264"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000263"  [label="CFG: "];
"1000263" -> "1000265"  [label="DDG: <RET>"];
"1000264" -> "1000263"  [label="DDG: err"];
"1000189" -> "1000263"  [label="DDG: err"];
"1000253" -> "1000263"  [label="DDG: err"];
"1000138" -> "1000263"  [label="DDG: err"];
"1000253" -> "1000111"  [label="AST: "];
"1000253" -> "1000255"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000255" -> "1000253"  [label="AST: "];
"1000256" -> "1000253"  [label="CFG: "];
"1000253" -> "1000265"  [label="DDG: payload_len"];
"1000253" -> "1000265"  [label="DDG: err"];
"1000257" -> "1000111"  [label="AST: "];
"1000257" -> "1000262"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000262" -> "1000257"  [label="AST: "];
"1000264" -> "1000257"  [label="CFG: "];
"1000257" -> "1000265"  [label="DDG: &vsk->sk"];
"1000257" -> "1000265"  [label="DDG: skb"];
"1000257" -> "1000265"  [label="DDG: skb_free_datagram(&vsk->sk, skb)"];
}
