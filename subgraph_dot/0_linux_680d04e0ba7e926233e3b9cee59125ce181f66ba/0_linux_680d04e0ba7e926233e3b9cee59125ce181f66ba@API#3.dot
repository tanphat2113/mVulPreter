digraph "0_linux_680d04e0ba7e926233e3b9cee59125ce181f66ba@API" {
"1000181" [label="(Call,skb->len - sizeof(*dg))"];
"1000179" [label="(Call,payload_len != skb->len - sizeof(*dg))"];
"1000195" [label="(Call,payload_len > len)"];
"1000199" [label="(Call,payload_len = len)"];
"1000209" [label="(Call,skb_copy_datagram_iovec(skb, sizeof(*dg), msg->msg_iov,\n\t\tpayload_len))"];
"1000207" [label="(Call,err = skb_copy_datagram_iovec(skb, sizeof(*dg), msg->msg_iov,\n\t\tpayload_len))"];
"1000263" [label="(Return,return err;)"];
"1000253" [label="(Call,err = payload_len)"];
"1000257" [label="(Call,skb_free_datagram(&vsk->sk, skb))"];
"1000201" [label="(Identifier,len)"];
"1000189" [label="(Call,err = -EINVAL)"];
"1000195" [label="(Call,payload_len > len)"];
"1000138" [label="(Call,err = 0)"];
"1000190" [label="(Identifier,err)"];
"1000254" [label="(Identifier,err)"];
"1000217" [label="(Identifier,payload_len)"];
"1000185" [label="(Call,sizeof(*dg))"];
"1000208" [label="(Identifier,err)"];
"1000182" [label="(Call,skb->len)"];
"1000256" [label="(JumpTarget,out:)"];
"1000109" [label="(MethodParameterIn,size_t len)"];
"1000196" [label="(Identifier,payload_len)"];
"1000253" [label="(Call,err = payload_len)"];
"1000179" [label="(Call,payload_len != skb->len - sizeof(*dg))"];
"1000211" [label="(Call,sizeof(*dg))"];
"1000257" [label="(Call,skb_free_datagram(&vsk->sk, skb))"];
"1000209" [label="(Call,skb_copy_datagram_iovec(skb, sizeof(*dg), msg->msg_iov,\n\t\tpayload_len))"];
"1000265" [label="(MethodReturn,static int)"];
"1000200" [label="(Identifier,payload_len)"];
"1000178" [label="(ControlStructure,if (payload_len != skb->len - sizeof(*dg)))"];
"1000181" [label="(Call,skb->len - sizeof(*dg))"];
"1000180" [label="(Identifier,payload_len)"];
"1000219" [label="(Identifier,err)"];
"1000262" [label="(Identifier,skb)"];
"1000204" [label="(Identifier,msg)"];
"1000143" [label="(Call,skb_recv_datagram(&vsk->sk, flags, noblock, &err))"];
"1000264" [label="(Identifier,err)"];
"1000173" [label="(Call,payload_len = dg->payload_size)"];
"1000258" [label="(Call,&vsk->sk)"];
"1000207" [label="(Call,err = skb_copy_datagram_iovec(skb, sizeof(*dg), msg->msg_iov,\n\t\tpayload_len))"];
"1000199" [label="(Call,payload_len = len)"];
"1000198" [label="(Block,)"];
"1000255" [label="(Identifier,payload_len)"];
"1000194" [label="(ControlStructure,if (payload_len > len))"];
"1000263" [label="(Return,return err;)"];
"1000210" [label="(Identifier,skb)"];
"1000214" [label="(Call,msg->msg_iov)"];
"1000157" [label="(Call,!skb)"];
"1000111" [label="(Block,)"];
"1000197" [label="(Identifier,len)"];
"1000181" -> "1000179"  [label="AST: "];
"1000181" -> "1000185"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000185" -> "1000181"  [label="AST: "];
"1000179" -> "1000181"  [label="CFG: "];
"1000181" -> "1000265"  [label="DDG: skb->len"];
"1000181" -> "1000179"  [label="DDG: skb->len"];
"1000179" -> "1000178"  [label="AST: "];
"1000180" -> "1000179"  [label="AST: "];
"1000190" -> "1000179"  [label="CFG: "];
"1000196" -> "1000179"  [label="CFG: "];
"1000179" -> "1000265"  [label="DDG: skb->len - sizeof(*dg)"];
"1000179" -> "1000265"  [label="DDG: payload_len != skb->len - sizeof(*dg)"];
"1000179" -> "1000265"  [label="DDG: payload_len"];
"1000173" -> "1000179"  [label="DDG: payload_len"];
"1000179" -> "1000195"  [label="DDG: payload_len"];
"1000195" -> "1000194"  [label="AST: "];
"1000195" -> "1000197"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000197" -> "1000195"  [label="AST: "];
"1000200" -> "1000195"  [label="CFG: "];
"1000208" -> "1000195"  [label="CFG: "];
"1000195" -> "1000265"  [label="DDG: payload_len > len"];
"1000195" -> "1000265"  [label="DDG: len"];
"1000109" -> "1000195"  [label="DDG: len"];
"1000195" -> "1000199"  [label="DDG: len"];
"1000195" -> "1000209"  [label="DDG: payload_len"];
"1000199" -> "1000198"  [label="AST: "];
"1000199" -> "1000201"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000201" -> "1000199"  [label="AST: "];
"1000204" -> "1000199"  [label="CFG: "];
"1000199" -> "1000265"  [label="DDG: len"];
"1000109" -> "1000199"  [label="DDG: len"];
"1000199" -> "1000209"  [label="DDG: payload_len"];
"1000209" -> "1000207"  [label="AST: "];
"1000209" -> "1000217"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000211" -> "1000209"  [label="AST: "];
"1000214" -> "1000209"  [label="AST: "];
"1000217" -> "1000209"  [label="AST: "];
"1000207" -> "1000209"  [label="CFG: "];
"1000209" -> "1000265"  [label="DDG: payload_len"];
"1000209" -> "1000265"  [label="DDG: msg->msg_iov"];
"1000209" -> "1000207"  [label="DDG: skb"];
"1000209" -> "1000207"  [label="DDG: msg->msg_iov"];
"1000209" -> "1000207"  [label="DDG: payload_len"];
"1000157" -> "1000209"  [label="DDG: skb"];
"1000209" -> "1000253"  [label="DDG: payload_len"];
"1000209" -> "1000257"  [label="DDG: skb"];
"1000207" -> "1000111"  [label="AST: "];
"1000208" -> "1000207"  [label="AST: "];
"1000219" -> "1000207"  [label="CFG: "];
"1000207" -> "1000265"  [label="DDG: skb_copy_datagram_iovec(skb, sizeof(*dg), msg->msg_iov,\n\t\tpayload_len)"];
"1000207" -> "1000265"  [label="DDG: err"];
"1000207" -> "1000263"  [label="DDG: err"];
"1000263" -> "1000111"  [label="AST: "];
"1000263" -> "1000264"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000263"  [label="CFG: "];
"1000263" -> "1000265"  [label="DDG: <RET>"];
"1000264" -> "1000263"  [label="DDG: err"];
"1000189" -> "1000263"  [label="DDG: err"];
"1000253" -> "1000263"  [label="DDG: err"];
"1000138" -> "1000263"  [label="DDG: err"];
"1000253" -> "1000111"  [label="AST: "];
"1000253" -> "1000255"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000255" -> "1000253"  [label="AST: "];
"1000256" -> "1000253"  [label="CFG: "];
"1000253" -> "1000265"  [label="DDG: payload_len"];
"1000253" -> "1000265"  [label="DDG: err"];
"1000257" -> "1000111"  [label="AST: "];
"1000257" -> "1000262"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000262" -> "1000257"  [label="AST: "];
"1000264" -> "1000257"  [label="CFG: "];
"1000257" -> "1000265"  [label="DDG: &vsk->sk"];
"1000257" -> "1000265"  [label="DDG: skb"];
"1000257" -> "1000265"  [label="DDG: skb_free_datagram(&vsk->sk, skb)"];
"1000143" -> "1000257"  [label="DDG: &vsk->sk"];
"1000157" -> "1000257"  [label="DDG: skb"];
}
