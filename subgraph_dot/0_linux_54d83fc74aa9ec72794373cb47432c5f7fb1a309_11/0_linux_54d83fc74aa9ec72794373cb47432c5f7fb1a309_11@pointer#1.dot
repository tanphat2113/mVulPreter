digraph "0_linux_54d83fc74aa9ec72794373cb47432c5f7fb1a309_11@pointer" {
"1000133" [label="(Call,*e = (struct ip6t_entry *)(entry0 + pos))"];
"1000135" [label="(Call,(struct ip6t_entry *)(entry0 + pos))"];
"1000111" [label="(MethodParameterIn,void *entry0)"];
"1000125" [label="(Call,pos = newinfo->hook_entry[hook])"];
"1000162" [label="(Call,ip6t_get_target_c(e))"];
"1000160" [label="(Call,(void *)ip6t_get_target_c(e))"];
"1000158" [label="(Call,*t\n\t\t\t\t= (void *)ip6t_get_target_c(e))"];
"1000206" [label="(Call,unconditional(e))"];
"1000205" [label="(Call,unconditional(e) &&\n \t\t\t     (strcmp(t->target.u.user.name,\n \t\t\t\t     XT_STANDARD_TARGET) == 0) &&\n\t\t\t     t->verdict < 0)"];
"1000204" [label="(Call,(unconditional(e) &&\n \t\t\t     (strcmp(t->target.u.user.name,\n \t\t\t\t     XT_STANDARD_TARGET) == 0) &&\n\t\t\t     t->verdict < 0) || visited)"];
"1000123" [label="(Block,)"];
"1000284" [label="(Call,oldpos = pos)"];
"1000310" [label="(Call,entry0 + pos)"];
"1000183" [label="(Call,pr_err(\"iptables: loop hook %u pos %u %08X.\n\",\n\t\t\t\t       hook, pos, e->comefrom))"];
"1000137" [label="(Call,entry0 + pos)"];
"1000159" [label="(Identifier,t)"];
"1000111" [label="(MethodParameterIn,void *entry0)"];
"1000203" [label="(ControlStructure,if ((unconditional(e) &&\n \t\t\t     (strcmp(t->target.u.user.name,\n \t\t\t\t     XT_STANDARD_TARGET) == 0) &&\n\t\t\t     t->verdict < 0) || visited))"];
"1000143" [label="(Identifier,valid_hooks)"];
"1000308" [label="(Call,(struct ip6t_entry *)\n\t\t\t\t\t\t(entry0 + pos))"];
"1000156" [label="(Block,)"];
"1000325" [label="(Call,e = (struct ip6t_entry *)\n\t\t\t\t\t(entry0 + pos + size))"];
"1000163" [label="(Identifier,e)"];
"1000125" [label="(Call,pos = newinfo->hook_entry[hook])"];
"1000162" [label="(Call,ip6t_get_target_c(e))"];
"1000386" [label="(Call,duprintf(\"Jump rule %u -> %u\n\",\n\t\t\t\t\t\t pos, newpos))"];
"1000160" [label="(Call,(void *)ip6t_get_target_c(e))"];
"1000239" [label="(Identifier,t)"];
"1000127" [label="(Call,newinfo->hook_entry[hook])"];
"1000165" [label="(Call,visited = e->comefrom & (1 << hook))"];
"1000166" [label="(Identifier,visited)"];
"1000329" [label="(Call,entry0 + pos + size)"];
"1000134" [label="(Identifier,e)"];
"1000206" [label="(Call,unconditional(e))"];
"1000126" [label="(Identifier,pos)"];
"1000327" [label="(Call,(struct ip6t_entry *)\n\t\t\t\t\t(entry0 + pos + size))"];
"1000135" [label="(Call,(struct ip6t_entry *)(entry0 + pos))"];
"1000392" [label="(Call,newpos = pos + e->next_offset)"];
"1000399" [label="(Call,e = (struct ip6t_entry *)\n\t\t\t\t\t(entry0 + newpos))"];
"1000158" [label="(Call,*t\n\t\t\t\t= (void *)ip6t_get_target_c(e))"];
"1000394" [label="(Call,pos + e->next_offset)"];
"1000403" [label="(Call,entry0 + newpos)"];
"1000422" [label="(MethodReturn,RET)"];
"1000133" [label="(Call,*e = (struct ip6t_entry *)(entry0 + pos))"];
"1000406" [label="(Call,e->counters.pcnt = pos)"];
"1000348" [label="(Identifier,newpos)"];
"1000215" [label="(Identifier,t)"];
"1000205" [label="(Call,unconditional(e) &&\n \t\t\t     (strcmp(t->target.u.user.name,\n \t\t\t\t     XT_STANDARD_TARGET) == 0) &&\n\t\t\t     t->verdict < 0)"];
"1000148" [label="(Call,e->counters.pcnt = pos)"];
"1000208" [label="(Call,(strcmp(t->target.u.user.name,\n \t\t\t\t     XT_STANDARD_TARGET) == 0) &&\n\t\t\t     t->verdict < 0)"];
"1000207" [label="(Identifier,e)"];
"1000204" [label="(Call,(unconditional(e) &&\n \t\t\t     (strcmp(t->target.u.user.name,\n \t\t\t\t     XT_STANDARD_TARGET) == 0) &&\n\t\t\t     t->verdict < 0) || visited)"];
"1000227" [label="(Identifier,visited)"];
"1000280" [label="(Call,duprintf(\"Back unset \"\n\t\t\t\t\t\t\t \"on hook %u \"\n\t\t\t\t\t\t\t \"rule %u\n\",\n\t\t\t\t\t\t\t hook, pos))"];
"1000401" [label="(Call,(struct ip6t_entry *)\n\t\t\t\t\t(entry0 + newpos))"];
"1000133" -> "1000123"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000143" -> "1000133"  [label="CFG: "];
"1000133" -> "1000422"  [label="DDG: e"];
"1000133" -> "1000422"  [label="DDG: (struct ip6t_entry *)(entry0 + pos)"];
"1000135" -> "1000133"  [label="DDG: entry0 + pos"];
"1000133" -> "1000162"  [label="DDG: e"];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000135" -> "1000422"  [label="DDG: entry0 + pos"];
"1000111" -> "1000135"  [label="DDG: entry0"];
"1000125" -> "1000135"  [label="DDG: pos"];
"1000111" -> "1000108"  [label="AST: "];
"1000111" -> "1000422"  [label="DDG: entry0"];
"1000111" -> "1000137"  [label="DDG: entry0"];
"1000111" -> "1000308"  [label="DDG: entry0"];
"1000111" -> "1000310"  [label="DDG: entry0"];
"1000111" -> "1000327"  [label="DDG: entry0"];
"1000111" -> "1000329"  [label="DDG: entry0"];
"1000111" -> "1000401"  [label="DDG: entry0"];
"1000111" -> "1000403"  [label="DDG: entry0"];
"1000125" -> "1000123"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000134" -> "1000125"  [label="CFG: "];
"1000125" -> "1000422"  [label="DDG: newinfo->hook_entry[hook]"];
"1000125" -> "1000137"  [label="DDG: pos"];
"1000125" -> "1000148"  [label="DDG: pos"];
"1000125" -> "1000183"  [label="DDG: pos"];
"1000125" -> "1000280"  [label="DDG: pos"];
"1000125" -> "1000284"  [label="DDG: pos"];
"1000125" -> "1000386"  [label="DDG: pos"];
"1000125" -> "1000392"  [label="DDG: pos"];
"1000125" -> "1000394"  [label="DDG: pos"];
"1000125" -> "1000406"  [label="DDG: pos"];
"1000162" -> "1000160"  [label="AST: "];
"1000162" -> "1000163"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000160" -> "1000162"  [label="CFG: "];
"1000162" -> "1000422"  [label="DDG: e"];
"1000162" -> "1000160"  [label="DDG: e"];
"1000325" -> "1000162"  [label="DDG: e"];
"1000399" -> "1000162"  [label="DDG: e"];
"1000162" -> "1000206"  [label="DDG: e"];
"1000160" -> "1000158"  [label="AST: "];
"1000161" -> "1000160"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000160" -> "1000422"  [label="DDG: ip6t_get_target_c(e)"];
"1000160" -> "1000158"  [label="DDG: ip6t_get_target_c(e)"];
"1000158" -> "1000156"  [label="AST: "];
"1000159" -> "1000158"  [label="AST: "];
"1000166" -> "1000158"  [label="CFG: "];
"1000158" -> "1000422"  [label="DDG: t"];
"1000158" -> "1000422"  [label="DDG: (void *)ip6t_get_target_c(e)"];
"1000206" -> "1000205"  [label="AST: "];
"1000206" -> "1000207"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000215" -> "1000206"  [label="CFG: "];
"1000205" -> "1000206"  [label="CFG: "];
"1000206" -> "1000422"  [label="DDG: e"];
"1000206" -> "1000205"  [label="DDG: e"];
"1000205" -> "1000204"  [label="AST: "];
"1000205" -> "1000208"  [label="CFG: "];
"1000208" -> "1000205"  [label="AST: "];
"1000227" -> "1000205"  [label="CFG: "];
"1000204" -> "1000205"  [label="CFG: "];
"1000205" -> "1000422"  [label="DDG: unconditional(e)"];
"1000205" -> "1000422"  [label="DDG: (strcmp(t->target.u.user.name,\n \t\t\t\t     XT_STANDARD_TARGET) == 0) &&\n\t\t\t     t->verdict < 0"];
"1000205" -> "1000204"  [label="DDG: unconditional(e)"];
"1000205" -> "1000204"  [label="DDG: (strcmp(t->target.u.user.name,\n \t\t\t\t     XT_STANDARD_TARGET) == 0) &&\n\t\t\t     t->verdict < 0"];
"1000208" -> "1000205"  [label="DDG: strcmp(t->target.u.user.name,\n \t\t\t\t     XT_STANDARD_TARGET) == 0"];
"1000208" -> "1000205"  [label="DDG: t->verdict < 0"];
"1000204" -> "1000203"  [label="AST: "];
"1000204" -> "1000227"  [label="CFG: "];
"1000227" -> "1000204"  [label="AST: "];
"1000239" -> "1000204"  [label="CFG: "];
"1000348" -> "1000204"  [label="CFG: "];
"1000204" -> "1000422"  [label="DDG: visited"];
"1000204" -> "1000422"  [label="DDG: unconditional(e) &&\n \t\t\t     (strcmp(t->target.u.user.name,\n \t\t\t\t     XT_STANDARD_TARGET) == 0) &&\n\t\t\t     t->verdict < 0"];
"1000204" -> "1000422"  [label="DDG: (unconditional(e) &&\n \t\t\t     (strcmp(t->target.u.user.name,\n \t\t\t\t     XT_STANDARD_TARGET) == 0) &&\n\t\t\t     t->verdict < 0) || visited"];
"1000165" -> "1000204"  [label="DDG: visited"];
}
