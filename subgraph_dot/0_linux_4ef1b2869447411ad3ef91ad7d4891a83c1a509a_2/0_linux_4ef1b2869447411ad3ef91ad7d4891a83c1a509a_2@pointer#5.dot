digraph "0_linux_4ef1b2869447411ad3ef91ad7d4891a83c1a509a_2@pointer" {
"1000229" [label="(Call,skb_is_err_queue(skb))"];
"1000157" [label="(Call,skb_get_timestampns(skb, &ts))"];
"1000120" [label="(Call,skb_hwtstamps(skb))"];
"1000104" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000130" [label="(Call,__net_timestamp(skb))"];
"1000142" [label="(Call,skb_get_timestamp(skb, &tv))"];
"1000228" [label="(Call,skb_is_err_queue(skb) && skb->len &&\n\t\t    SKB_EXT_ERR(skb)->opt_stats)"];
"1000236" [label="(Call,SKB_EXT_ERR(skb))"];
"1000157" [label="(Call,skb_get_timestampns(skb, &ts))"];
"1000143" [label="(Identifier,skb)"];
"1000146" [label="(Call,put_cmsg(msg, SOL_SOCKET, SCM_TIMESTAMP,\n\t\t\t\t sizeof(tv), &tv))"];
"1000227" [label="(ControlStructure,if (skb_is_err_queue(skb) && skb->len &&\n\t\t    SKB_EXT_ERR(skb)->opt_stats))"];
"1000228" [label="(Call,skb_is_err_queue(skb) && skb->len &&\n\t\t    SKB_EXT_ERR(skb)->opt_stats)"];
"1000104" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000133" [label="(Identifier,need_software_tstamp)"];
"1000229" [label="(Call,skb_is_err_queue(skb))"];
"1000161" [label="(Call,put_cmsg(msg, SOL_SOCKET, SCM_TIMESTAMPNS,\n\t\t\t\t sizeof(ts), &ts))"];
"1000230" [label="(Identifier,skb)"];
"1000240" [label="(Identifier,msg)"];
"1000120" [label="(Call,skb_hwtstamps(skb))"];
"1000144" [label="(Call,&tv)"];
"1000142" [label="(Call,skb_get_timestamp(skb, &tv))"];
"1000235" [label="(Call,SKB_EXT_ERR(skb)->opt_stats)"];
"1000131" [label="(Identifier,skb)"];
"1000231" [label="(Call,skb->len &&\n\t\t    SKB_EXT_ERR(skb)->opt_stats)"];
"1000159" [label="(Call,&ts)"];
"1000147" [label="(Identifier,msg)"];
"1000237" [label="(Identifier,skb)"];
"1000118" [label="(Call,*shhwtstamps =\n\t\tskb_hwtstamps(skb))"];
"1000238" [label="(FieldIdentifier,opt_stats)"];
"1000140" [label="(Block,)"];
"1000158" [label="(Identifier,skb)"];
"1000236" [label="(Call,SKB_EXT_ERR(skb))"];
"1000121" [label="(Identifier,skb)"];
"1000155" [label="(Block,)"];
"1000162" [label="(Identifier,msg)"];
"1000122" [label="(ControlStructure,if (need_software_tstamp && skb->tstamp == 0))"];
"1000249" [label="(MethodReturn,void)"];
"1000130" [label="(Call,__net_timestamp(skb))"];
"1000233" [label="(Identifier,skb)"];
"1000229" -> "1000228"  [label="AST: "];
"1000229" -> "1000230"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000233" -> "1000229"  [label="CFG: "];
"1000228" -> "1000229"  [label="CFG: "];
"1000229" -> "1000249"  [label="DDG: skb"];
"1000229" -> "1000228"  [label="DDG: skb"];
"1000157" -> "1000229"  [label="DDG: skb"];
"1000120" -> "1000229"  [label="DDG: skb"];
"1000142" -> "1000229"  [label="DDG: skb"];
"1000130" -> "1000229"  [label="DDG: skb"];
"1000104" -> "1000229"  [label="DDG: skb"];
"1000229" -> "1000236"  [label="DDG: skb"];
"1000157" -> "1000155"  [label="AST: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000162" -> "1000157"  [label="CFG: "];
"1000157" -> "1000249"  [label="DDG: skb_get_timestampns(skb, &ts)"];
"1000157" -> "1000249"  [label="DDG: skb"];
"1000120" -> "1000157"  [label="DDG: skb"];
"1000130" -> "1000157"  [label="DDG: skb"];
"1000104" -> "1000157"  [label="DDG: skb"];
"1000157" -> "1000161"  [label="DDG: &ts"];
"1000120" -> "1000118"  [label="AST: "];
"1000120" -> "1000121"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000120" -> "1000249"  [label="DDG: skb"];
"1000120" -> "1000118"  [label="DDG: skb"];
"1000104" -> "1000120"  [label="DDG: skb"];
"1000120" -> "1000130"  [label="DDG: skb"];
"1000120" -> "1000142"  [label="DDG: skb"];
"1000104" -> "1000101"  [label="AST: "];
"1000104" -> "1000249"  [label="DDG: skb"];
"1000104" -> "1000130"  [label="DDG: skb"];
"1000104" -> "1000142"  [label="DDG: skb"];
"1000104" -> "1000236"  [label="DDG: skb"];
"1000130" -> "1000122"  [label="AST: "];
"1000130" -> "1000131"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000133" -> "1000130"  [label="CFG: "];
"1000130" -> "1000249"  [label="DDG: __net_timestamp(skb)"];
"1000130" -> "1000249"  [label="DDG: skb"];
"1000130" -> "1000142"  [label="DDG: skb"];
"1000142" -> "1000140"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000147" -> "1000142"  [label="CFG: "];
"1000142" -> "1000249"  [label="DDG: skb_get_timestamp(skb, &tv)"];
"1000142" -> "1000249"  [label="DDG: skb"];
"1000142" -> "1000146"  [label="DDG: &tv"];
"1000228" -> "1000227"  [label="AST: "];
"1000228" -> "1000231"  [label="CFG: "];
"1000231" -> "1000228"  [label="AST: "];
"1000240" -> "1000228"  [label="CFG: "];
"1000249" -> "1000228"  [label="CFG: "];
"1000228" -> "1000249"  [label="DDG: skb_is_err_queue(skb) && skb->len &&\n\t\t    SKB_EXT_ERR(skb)->opt_stats"];
"1000228" -> "1000249"  [label="DDG: skb_is_err_queue(skb)"];
"1000228" -> "1000249"  [label="DDG: skb->len &&\n\t\t    SKB_EXT_ERR(skb)->opt_stats"];
"1000231" -> "1000228"  [label="DDG: skb->len"];
"1000231" -> "1000228"  [label="DDG: SKB_EXT_ERR(skb)->opt_stats"];
"1000236" -> "1000235"  [label="AST: "];
"1000236" -> "1000237"  [label="CFG: "];
"1000237" -> "1000236"  [label="AST: "];
"1000238" -> "1000236"  [label="CFG: "];
"1000236" -> "1000249"  [label="DDG: skb"];
}
