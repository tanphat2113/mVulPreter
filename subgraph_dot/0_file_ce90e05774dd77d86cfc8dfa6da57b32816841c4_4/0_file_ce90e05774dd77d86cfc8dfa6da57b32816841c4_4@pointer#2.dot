digraph "0_file_ce90e05774dd77d86cfc8dfa6da57b32816841c4_4@pointer" {
"1000142" [label="(Call,file_printf(ms, \", corrupted program header size\"))"];
"1000107" [label="(MethodParameterIn,struct magic_set *ms)"];
"1000141" [label="(Call,file_printf(ms, \", corrupted program header size\") == -1)"];
"1000144" [label="(Literal,\", corrupted program header size\")"];
"1000209" [label="(Call,file_printf(ms, \n\t\t\t\t    \", invalid note alignment 0x%lx\",\n\t\t\t\t    (unsigned long)align))"];
"1000149" [label="(Literal,1)"];
"1000143" [label="(Identifier,ms)"];
"1000345" [label="(Call,file_printf(ms, \", interpreter %s\",\n\t\t    file_printable(ibuf, sizeof(ibuf), interp)))"];
"1000330" [label="(Call,file_printf(ms, \", %s linked\", linking_style))"];
"1000247" [label="(Call,file_badread(ms))"];
"1000360" [label="(MethodReturn,RET)"];
"1000107" [label="(MethodParameterIn,struct magic_set *ms)"];
"1000308" [label="(Call,donote(ms, nbuf, offset,\n \t\t\t\t    (size_t)bufsize, clazz, swap, align,\n\t\t\t\t    flags, notecount))"];
"1000146" [label="(Literal,1)"];
"1000142" [label="(Call,file_printf(ms, \", corrupted program header size\"))"];
"1000140" [label="(ControlStructure,if (file_printf(ms, \", corrupted program header size\") == -1))"];
"1000168" [label="(Call,file_badread(ms))"];
"1000145" [label="(Call,-1)"];
"1000141" [label="(Call,file_printf(ms, \", corrupted program header size\") == -1)"];
"1000151" [label="(Literal,0)"];
"1000142" -> "1000141"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000146" -> "1000142"  [label="CFG: "];
"1000142" -> "1000360"  [label="DDG: "];
"1000142" -> "1000141"  [label="DDG: "];
"1000142" -> "1000141"  [label="DDG: "];
"1000107" -> "1000142"  [label="DDG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000360"  [label="DDG: "];
"1000107" -> "1000168"  [label="DDG: "];
"1000107" -> "1000209"  [label="DDG: "];
"1000107" -> "1000247"  [label="DDG: "];
"1000107" -> "1000308"  [label="DDG: "];
"1000107" -> "1000330"  [label="DDG: "];
"1000107" -> "1000345"  [label="DDG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000145"  [label="CFG: "];
"1000145" -> "1000141"  [label="AST: "];
"1000149" -> "1000141"  [label="CFG: "];
"1000151" -> "1000141"  [label="CFG: "];
"1000141" -> "1000360"  [label="DDG: "];
"1000141" -> "1000360"  [label="DDG: "];
"1000141" -> "1000360"  [label="DDG: "];
"1000145" -> "1000141"  [label="DDG: "];
}
