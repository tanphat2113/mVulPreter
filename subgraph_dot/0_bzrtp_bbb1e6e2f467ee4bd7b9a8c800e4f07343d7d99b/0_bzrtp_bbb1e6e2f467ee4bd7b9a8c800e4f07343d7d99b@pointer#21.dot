digraph "0_bzrtp_bbb1e6e2f467ee4bd7b9a8c800e4f07343d7d99b@pointer" {
"1000756" [label="(Call,messageData->keyAgreementAlgo = cryptoAlgoTypeStringToInt(messageContent, ZRTP_KEYAGREEMENT_TYPE))"];
"1000760" [label="(Call,cryptoAlgoTypeStringToInt(messageContent, ZRTP_KEYAGREEMENT_TYPE))"];
"1000753" [label="(Call,messageContent += 4)"];
"1000750" [label="(Call,cryptoAlgoTypeStringToInt(messageContent, ZRTP_AUTHTAG_TYPE))"];
"1000743" [label="(Call,messageContent += 4)"];
"1000740" [label="(Call,cryptoAlgoTypeStringToInt(messageContent, ZRTP_CIPHERBLOCK_TYPE))"];
"1000733" [label="(Call,messageContent += 4)"];
"1000730" [label="(Call,cryptoAlgoTypeStringToInt(messageContent, ZRTP_HASH_TYPE))"];
"1000723" [label="(Call,messageContent +=12)"];
"1000717" [label="(Call,memcpy(messageData->ZID, messageContent, 12))"];
"1000630" [label="(Call,messageContent +=32)"];
"1000624" [label="(Call,memcpy(messageData->H2, messageContent, 32))"];
"1000200" [label="(Call,*messageContent = (uint8_t *)(input+ZRTP_PACKET_HEADER_LENGTH+ZRTP_MESSAGE_HEADER_LENGTH))"];
"1000202" [label="(Call,(uint8_t *)(input+ZRTP_PACKET_HEADER_LENGTH+ZRTP_MESSAGE_HEADER_LENGTH))"];
"1000194" [label="(MethodParameterIn,const uint8_t * input)"];
"1000820" [label="(Call,messageData->keyAgreementAlgo == ZRTP_KEYAGREEMENT_Prsh)"];
"1000819" [label="(Call,(messageData->keyAgreementAlgo == ZRTP_KEYAGREEMENT_Prsh) || (messageData->keyAgreementAlgo == ZRTP_KEYAGREEMENT_Mult))"];
"1000825" [label="(Call,messageData->keyAgreementAlgo == ZRTP_KEYAGREEMENT_Mult)"];
"1000841" [label="(Call,messageData->keyAgreementAlgo == ZRTP_KEYAGREEMENT_Prsh)"];
"1000718" [label="(Call,messageData->ZID)"];
"1000744" [label="(Identifier,messageContent)"];
"1000211" [label="(Identifier,zrtpPacket)"];
"1000631" [label="(Identifier,messageContent)"];
"1000202" [label="(Call,(uint8_t *)(input+ZRTP_PACKET_HEADER_LENGTH+ZRTP_MESSAGE_HEADER_LENGTH))"];
"1000608" [label="(Block,)"];
"1000756" [label="(Call,messageData->keyAgreementAlgo = cryptoAlgoTypeStringToInt(messageContent, ZRTP_KEYAGREEMENT_TYPE))"];
"1000630" [label="(Call,messageContent +=32)"];
"1000891" [label="(Call,memcpy(zrtpPacket->packetString, input, inputLength))"];
"1000224" [label="(Call,memcpy(messageData->version, messageContent, 4))"];
"1000201" [label="(Identifier,messageContent)"];
"1000738" [label="(Identifier,messageData)"];
"1000734" [label="(Identifier,messageContent)"];
"1000758" [label="(Identifier,messageData)"];
"1000588" [label="(Call,memcpy(zrtpPacket->packetString, input, inputLength))"];
"1000757" [label="(Call,messageData->keyAgreementAlgo)"];
"1000755" [label="(Literal,4)"];
"1001078" [label="(Call,memcpy(DHPartHelloMessageString, input+ZRTP_PACKET_HEADER_LENGTH, zrtpPacket->messageLength))"];
"1000743" [label="(Call,messageContent += 4)"];
"1000723" [label="(Call,messageContent +=12)"];
"1000820" [label="(Call,messageData->keyAgreementAlgo == ZRTP_KEYAGREEMENT_Prsh)"];
"1000840" [label="(ControlStructure,if (messageData->keyAgreementAlgo == ZRTP_KEYAGREEMENT_Prsh))"];
"1000657" [label="(Call,bctoolbox_sha256(messageData->H2, 32, 32, checkH3))"];
"1000761" [label="(Identifier,messageContent)"];
"1000732" [label="(Identifier,ZRTP_HASH_TYPE)"];
"1000742" [label="(Identifier,ZRTP_CIPHERBLOCK_TYPE)"];
"1000725" [label="(Literal,12)"];
"1000731" [label="(Identifier,messageContent)"];
"1000760" [label="(Call,cryptoAlgoTypeStringToInt(messageContent, ZRTP_KEYAGREEMENT_TYPE))"];
"1000721" [label="(Identifier,messageContent)"];
"1000748" [label="(Identifier,messageData)"];
"1000637" [label="(Identifier,zrtpChannelContext)"];
"1000827" [label="(Identifier,messageData)"];
"1000728" [label="(Identifier,messageData)"];
"1000818" [label="(ControlStructure,if ((messageData->keyAgreementAlgo == ZRTP_KEYAGREEMENT_Prsh) || (messageData->keyAgreementAlgo == ZRTP_KEYAGREEMENT_Mult)))"];
"1000842" [label="(Call,messageData->keyAgreementAlgo)"];
"1000754" [label="(Identifier,messageContent)"];
"1000869" [label="(Identifier,messageData)"];
"1000717" [label="(Call,memcpy(messageData->ZID, messageContent, 12))"];
"1001379" [label="(Call,memcpy(messageData->confirm_mac, messageContent, 8))"];
"1001941" [label="(Call,memcpy(messageData->version, messageContent, 4))"];
"1000812" [label="(Call,cryptoAlgoTypeStringToInt(messageContent, ZRTP_SAS_TYPE))"];
"1001915" [label="(Call,memcpy(zrtpPacket->packetString, input, inputLength))"];
"1000197" [label="(Block,)"];
"1000726" [label="(Call,messageData->hashAlgo = cryptoAlgoTypeStringToInt(messageContent, ZRTP_HASH_TYPE))"];
"1000194" [label="(MethodParameterIn,const uint8_t * input)"];
"1000826" [label="(Call,messageData->keyAgreementAlgo)"];
"1000741" [label="(Identifier,messageContent)"];
"1000860" [label="(Identifier,messageData)"];
"1000751" [label="(Identifier,messageContent)"];
"1000629" [label="(Literal,32)"];
"1000824" [label="(Identifier,ZRTP_KEYAGREEMENT_Prsh)"];
"1000735" [label="(Literal,4)"];
"1000736" [label="(Call,messageData->cipherAlgo = cryptoAlgoTypeStringToInt(messageContent, ZRTP_CIPHERBLOCK_TYPE))"];
"1000746" [label="(Call,messageData->authTagAlgo = cryptoAlgoTypeStringToInt(messageContent, ZRTP_AUTHTAG_TYPE))"];
"1000841" [label="(Call,messageData->keyAgreementAlgo == ZRTP_KEYAGREEMENT_Prsh)"];
"1000753" [label="(Call,messageContent += 4)"];
"1000750" [label="(Call,cryptoAlgoTypeStringToInt(messageContent, ZRTP_AUTHTAG_TYPE))"];
"1000740" [label="(Call,cryptoAlgoTypeStringToInt(messageContent, ZRTP_CIPHERBLOCK_TYPE))"];
"1000628" [label="(Identifier,messageContent)"];
"1000204" [label="(Call,input+ZRTP_PACKET_HEADER_LENGTH+ZRTP_MESSAGE_HEADER_LENGTH)"];
"1000833" [label="(Identifier,messageData)"];
"1000733" [label="(Call,messageContent += 4)"];
"1000624" [label="(Call,memcpy(messageData->H2, messageContent, 32))"];
"1000762" [label="(Identifier,ZRTP_KEYAGREEMENT_TYPE)"];
"1000745" [label="(Literal,4)"];
"1000821" [label="(Call,messageData->keyAgreementAlgo)"];
"1000764" [label="(Identifier,messageContent)"];
"1000200" [label="(Call,*messageContent = (uint8_t *)(input+ZRTP_PACKET_HEADER_LENGTH+ZRTP_MESSAGE_HEADER_LENGTH))"];
"1000724" [label="(Identifier,messageContent)"];
"1000945" [label="(Call,memcpy(messageData->H1, messageContent, 32))"];
"1000849" [label="(Identifier,messageData)"];
"1001080" [label="(Call,input+ZRTP_PACKET_HEADER_LENGTH)"];
"1000845" [label="(Identifier,ZRTP_KEYAGREEMENT_Prsh)"];
"1000730" [label="(Call,cryptoAlgoTypeStringToInt(messageContent, ZRTP_HASH_TYPE))"];
"1000829" [label="(Identifier,ZRTP_KEYAGREEMENT_Mult)"];
"1000819" [label="(Call,(messageData->keyAgreementAlgo == ZRTP_KEYAGREEMENT_Prsh) || (messageData->keyAgreementAlgo == ZRTP_KEYAGREEMENT_Mult))"];
"1000763" [label="(Call,messageContent += 4)"];
"1000722" [label="(Literal,12)"];
"1000632" [label="(Literal,32)"];
"1000625" [label="(Call,messageData->H2)"];
"1001966" [label="(MethodReturn,int)"];
"1000752" [label="(Identifier,ZRTP_AUTHTAG_TYPE)"];
"1001285" [label="(Call,memcpy(zrtpPacket->packetString, input, inputLength))"];
"1000825" [label="(Call,messageData->keyAgreementAlgo == ZRTP_KEYAGREEMENT_Mult)"];
"1000756" -> "1000608"  [label="AST: "];
"1000756" -> "1000760"  [label="CFG: "];
"1000757" -> "1000756"  [label="AST: "];
"1000760" -> "1000756"  [label="AST: "];
"1000764" -> "1000756"  [label="CFG: "];
"1000756" -> "1001966"  [label="DDG: messageData->keyAgreementAlgo"];
"1000756" -> "1001966"  [label="DDG: cryptoAlgoTypeStringToInt(messageContent, ZRTP_KEYAGREEMENT_TYPE)"];
"1000760" -> "1000756"  [label="DDG: messageContent"];
"1000760" -> "1000756"  [label="DDG: ZRTP_KEYAGREEMENT_TYPE"];
"1000756" -> "1000820"  [label="DDG: messageData->keyAgreementAlgo"];
"1000760" -> "1000762"  [label="CFG: "];
"1000761" -> "1000760"  [label="AST: "];
"1000762" -> "1000760"  [label="AST: "];
"1000760" -> "1001966"  [label="DDG: ZRTP_KEYAGREEMENT_TYPE"];
"1000753" -> "1000760"  [label="DDG: messageContent"];
"1000760" -> "1000763"  [label="DDG: messageContent"];
"1000753" -> "1000608"  [label="AST: "];
"1000753" -> "1000755"  [label="CFG: "];
"1000754" -> "1000753"  [label="AST: "];
"1000755" -> "1000753"  [label="AST: "];
"1000758" -> "1000753"  [label="CFG: "];
"1000750" -> "1000753"  [label="DDG: messageContent"];
"1000750" -> "1000746"  [label="AST: "];
"1000750" -> "1000752"  [label="CFG: "];
"1000751" -> "1000750"  [label="AST: "];
"1000752" -> "1000750"  [label="AST: "];
"1000746" -> "1000750"  [label="CFG: "];
"1000750" -> "1001966"  [label="DDG: ZRTP_AUTHTAG_TYPE"];
"1000750" -> "1000746"  [label="DDG: messageContent"];
"1000750" -> "1000746"  [label="DDG: ZRTP_AUTHTAG_TYPE"];
"1000743" -> "1000750"  [label="DDG: messageContent"];
"1000743" -> "1000608"  [label="AST: "];
"1000743" -> "1000745"  [label="CFG: "];
"1000744" -> "1000743"  [label="AST: "];
"1000745" -> "1000743"  [label="AST: "];
"1000748" -> "1000743"  [label="CFG: "];
"1000740" -> "1000743"  [label="DDG: messageContent"];
"1000740" -> "1000736"  [label="AST: "];
"1000740" -> "1000742"  [label="CFG: "];
"1000741" -> "1000740"  [label="AST: "];
"1000742" -> "1000740"  [label="AST: "];
"1000736" -> "1000740"  [label="CFG: "];
"1000740" -> "1001966"  [label="DDG: ZRTP_CIPHERBLOCK_TYPE"];
"1000740" -> "1000736"  [label="DDG: messageContent"];
"1000740" -> "1000736"  [label="DDG: ZRTP_CIPHERBLOCK_TYPE"];
"1000733" -> "1000740"  [label="DDG: messageContent"];
"1000733" -> "1000608"  [label="AST: "];
"1000733" -> "1000735"  [label="CFG: "];
"1000734" -> "1000733"  [label="AST: "];
"1000735" -> "1000733"  [label="AST: "];
"1000738" -> "1000733"  [label="CFG: "];
"1000730" -> "1000733"  [label="DDG: messageContent"];
"1000730" -> "1000726"  [label="AST: "];
"1000730" -> "1000732"  [label="CFG: "];
"1000731" -> "1000730"  [label="AST: "];
"1000732" -> "1000730"  [label="AST: "];
"1000726" -> "1000730"  [label="CFG: "];
"1000730" -> "1001966"  [label="DDG: ZRTP_HASH_TYPE"];
"1000730" -> "1000726"  [label="DDG: messageContent"];
"1000730" -> "1000726"  [label="DDG: ZRTP_HASH_TYPE"];
"1000723" -> "1000730"  [label="DDG: messageContent"];
"1000723" -> "1000608"  [label="AST: "];
"1000723" -> "1000725"  [label="CFG: "];
"1000724" -> "1000723"  [label="AST: "];
"1000725" -> "1000723"  [label="AST: "];
"1000728" -> "1000723"  [label="CFG: "];
"1000717" -> "1000723"  [label="DDG: messageContent"];
"1000717" -> "1000608"  [label="AST: "];
"1000717" -> "1000722"  [label="CFG: "];
"1000718" -> "1000717"  [label="AST: "];
"1000721" -> "1000717"  [label="AST: "];
"1000722" -> "1000717"  [label="AST: "];
"1000724" -> "1000717"  [label="CFG: "];
"1000717" -> "1001966"  [label="DDG: memcpy(messageData->ZID, messageContent, 12)"];
"1000717" -> "1001966"  [label="DDG: messageData->ZID"];
"1000630" -> "1000717"  [label="DDG: messageContent"];
"1000630" -> "1000608"  [label="AST: "];
"1000630" -> "1000632"  [label="CFG: "];
"1000631" -> "1000630"  [label="AST: "];
"1000632" -> "1000630"  [label="AST: "];
"1000637" -> "1000630"  [label="CFG: "];
"1000630" -> "1001966"  [label="DDG: messageContent"];
"1000624" -> "1000630"  [label="DDG: messageContent"];
"1000624" -> "1000608"  [label="AST: "];
"1000624" -> "1000629"  [label="CFG: "];
"1000625" -> "1000624"  [label="AST: "];
"1000628" -> "1000624"  [label="AST: "];
"1000629" -> "1000624"  [label="AST: "];
"1000631" -> "1000624"  [label="CFG: "];
"1000624" -> "1001966"  [label="DDG: memcpy(messageData->H2, messageContent, 32)"];
"1000624" -> "1001966"  [label="DDG: messageData->H2"];
"1000200" -> "1000624"  [label="DDG: messageContent"];
"1000624" -> "1000657"  [label="DDG: messageData->H2"];
"1000200" -> "1000197"  [label="AST: "];
"1000200" -> "1000202"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000202" -> "1000200"  [label="AST: "];
"1000211" -> "1000200"  [label="CFG: "];
"1000200" -> "1001966"  [label="DDG: messageContent"];
"1000200" -> "1001966"  [label="DDG: (uint8_t *)(input+ZRTP_PACKET_HEADER_LENGTH+ZRTP_MESSAGE_HEADER_LENGTH)"];
"1000202" -> "1000200"  [label="DDG: input+ZRTP_PACKET_HEADER_LENGTH+ZRTP_MESSAGE_HEADER_LENGTH"];
"1000200" -> "1000224"  [label="DDG: messageContent"];
"1000200" -> "1000812"  [label="DDG: messageContent"];
"1000200" -> "1000945"  [label="DDG: messageContent"];
"1000200" -> "1001379"  [label="DDG: messageContent"];
"1000200" -> "1001941"  [label="DDG: messageContent"];
"1000202" -> "1000204"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000202" -> "1001966"  [label="DDG: input+ZRTP_PACKET_HEADER_LENGTH+ZRTP_MESSAGE_HEADER_LENGTH"];
"1000194" -> "1000202"  [label="DDG: input"];
"1000194" -> "1000191"  [label="AST: "];
"1000194" -> "1001966"  [label="DDG: input"];
"1000194" -> "1000204"  [label="DDG: input"];
"1000194" -> "1000588"  [label="DDG: input"];
"1000194" -> "1000891"  [label="DDG: input"];
"1000194" -> "1001078"  [label="DDG: input"];
"1000194" -> "1001080"  [label="DDG: input"];
"1000194" -> "1001285"  [label="DDG: input"];
"1000194" -> "1001915"  [label="DDG: input"];
"1000820" -> "1000819"  [label="AST: "];
"1000820" -> "1000824"  [label="CFG: "];
"1000821" -> "1000820"  [label="AST: "];
"1000824" -> "1000820"  [label="AST: "];
"1000827" -> "1000820"  [label="CFG: "];
"1000819" -> "1000820"  [label="CFG: "];
"1000820" -> "1001966"  [label="DDG: ZRTP_KEYAGREEMENT_Prsh"];
"1000820" -> "1001966"  [label="DDG: messageData->keyAgreementAlgo"];
"1000820" -> "1000819"  [label="DDG: messageData->keyAgreementAlgo"];
"1000820" -> "1000819"  [label="DDG: ZRTP_KEYAGREEMENT_Prsh"];
"1000820" -> "1000825"  [label="DDG: messageData->keyAgreementAlgo"];
"1000820" -> "1000841"  [label="DDG: messageData->keyAgreementAlgo"];
"1000820" -> "1000841"  [label="DDG: ZRTP_KEYAGREEMENT_Prsh"];
"1000819" -> "1000818"  [label="AST: "];
"1000819" -> "1000825"  [label="CFG: "];
"1000825" -> "1000819"  [label="AST: "];
"1000833" -> "1000819"  [label="CFG: "];
"1000860" -> "1000819"  [label="CFG: "];
"1000819" -> "1001966"  [label="DDG: messageData->keyAgreementAlgo == ZRTP_KEYAGREEMENT_Prsh"];
"1000819" -> "1001966"  [label="DDG: (messageData->keyAgreementAlgo == ZRTP_KEYAGREEMENT_Prsh) || (messageData->keyAgreementAlgo == ZRTP_KEYAGREEMENT_Mult)"];
"1000819" -> "1001966"  [label="DDG: messageData->keyAgreementAlgo == ZRTP_KEYAGREEMENT_Mult"];
"1000825" -> "1000819"  [label="DDG: messageData->keyAgreementAlgo"];
"1000825" -> "1000819"  [label="DDG: ZRTP_KEYAGREEMENT_Mult"];
"1000825" -> "1000829"  [label="CFG: "];
"1000826" -> "1000825"  [label="AST: "];
"1000829" -> "1000825"  [label="AST: "];
"1000825" -> "1001966"  [label="DDG: ZRTP_KEYAGREEMENT_Mult"];
"1000825" -> "1001966"  [label="DDG: messageData->keyAgreementAlgo"];
"1000825" -> "1000841"  [label="DDG: messageData->keyAgreementAlgo"];
"1000841" -> "1000840"  [label="AST: "];
"1000841" -> "1000845"  [label="CFG: "];
"1000842" -> "1000841"  [label="AST: "];
"1000845" -> "1000841"  [label="AST: "];
"1000849" -> "1000841"  [label="CFG: "];
"1000869" -> "1000841"  [label="CFG: "];
"1000841" -> "1001966"  [label="DDG: messageData->keyAgreementAlgo"];
"1000841" -> "1001966"  [label="DDG: ZRTP_KEYAGREEMENT_Prsh"];
"1000841" -> "1001966"  [label="DDG: messageData->keyAgreementAlgo == ZRTP_KEYAGREEMENT_Prsh"];
}
