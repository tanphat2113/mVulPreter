digraph "0_bzrtp_bbb1e6e2f467ee4bd7b9a8c800e4f07343d7d99b@API" {
"1000251" [label="(Call,memcpy(messageData->ZID, messageContent, 12))"];
"1000248" [label="(Call,messageContent +=32)"];
"1000242" [label="(Call,memcpy(messageData->H3, messageContent, 32))"];
"1000239" [label="(Call,messageContent +=16)"];
"1000233" [label="(Call,memcpy(messageData->clientIdentifier, messageContent, 16))"];
"1000230" [label="(Call,messageContent +=4)"];
"1000224" [label="(Call,memcpy(messageData->version, messageContent, 4))"];
"1000200" [label="(Call,*messageContent = (uint8_t *)(input+ZRTP_PACKET_HEADER_LENGTH+ZRTP_MESSAGE_HEADER_LENGTH))"];
"1000202" [label="(Call,(uint8_t *)(input+ZRTP_PACKET_HEADER_LENGTH+ZRTP_MESSAGE_HEADER_LENGTH))"];
"1000194" [label="(MethodParameterIn,const uint8_t * input)"];
"1000257" [label="(Call,messageContent +=12)"];
"1000290" [label="(Call,messageContent +=1)"];
"1000303" [label="(Call,messageContent +=1)"];
"1000328" [label="(Call,messageContent +=1)"];
"1000353" [label="(Call,messageContent +=1)"];
"1000417" [label="(Call,cryptoAlgoTypeStringToInt(messageContent, ZRTP_HASH_TYPE))"];
"1000411" [label="(Call,messageData->supportedHash[i] = cryptoAlgoTypeStringToInt(messageContent, ZRTP_HASH_TYPE))"];
"1000519" [label="(Call,addMandatoryCryptoTypesIfNeeded(ZRTP_HASH_TYPE, messageData->supportedHash, &messageData->hc))"];
"1000420" [label="(Call,messageContent +=4)"];
"1000441" [label="(Call,cryptoAlgoTypeStringToInt(messageContent, ZRTP_CIPHERBLOCK_TYPE))"];
"1000435" [label="(Call,messageData->supportedCipher[i] = cryptoAlgoTypeStringToInt(messageContent, ZRTP_CIPHERBLOCK_TYPE))"];
"1000528" [label="(Call,addMandatoryCryptoTypesIfNeeded(ZRTP_CIPHERBLOCK_TYPE, messageData->supportedCipher, &messageData->cc))"];
"1000444" [label="(Call,messageContent +=4)"];
"1000465" [label="(Call,cryptoAlgoTypeStringToInt(messageContent, ZRTP_AUTHTAG_TYPE))"];
"1000459" [label="(Call,messageData->supportedAuthTag[i] = cryptoAlgoTypeStringToInt(messageContent, ZRTP_AUTHTAG_TYPE))"];
"1000537" [label="(Call,addMandatoryCryptoTypesIfNeeded(ZRTP_AUTHTAG_TYPE, messageData->supportedAuthTag, &messageData->ac))"];
"1000468" [label="(Call,messageContent +=4)"];
"1000489" [label="(Call,cryptoAlgoTypeStringToInt(messageContent, ZRTP_KEYAGREEMENT_TYPE))"];
"1000483" [label="(Call,messageData->supportedKeyAgreement[i] = cryptoAlgoTypeStringToInt(messageContent, ZRTP_KEYAGREEMENT_TYPE))"];
"1000546" [label="(Call,addMandatoryCryptoTypesIfNeeded(ZRTP_KEYAGREEMENT_TYPE, messageData->supportedKeyAgreement, &messageData->kc))"];
"1000492" [label="(Call,messageContent +=4)"];
"1000513" [label="(Call,cryptoAlgoTypeStringToInt(messageContent, ZRTP_SAS_TYPE))"];
"1000507" [label="(Call,messageData->supportedSas[i] = cryptoAlgoTypeStringToInt(messageContent, ZRTP_SAS_TYPE))"];
"1000555" [label="(Call,addMandatoryCryptoTypesIfNeeded(ZRTP_SAS_TYPE, messageData->supportedSas, &messageData->sc))"];
"1000516" [label="(Call,messageContent +=4)"];
"1000564" [label="(Call,memcpy(messageData->MAC, messageContent, 8))"];
"1000441" [label="(Call,cryptoAlgoTypeStringToInt(messageContent, ZRTP_CIPHERBLOCK_TYPE))"];
"1000530" [label="(Call,messageData->supportedCipher)"];
"1000457" [label="(Identifier,i)"];
"1000253" [label="(Identifier,messageData)"];
"1000481" [label="(Identifier,i)"];
"1000211" [label="(Identifier,zrtpPacket)"];
"1000246" [label="(Identifier,messageContent)"];
"1000251" [label="(Call,memcpy(messageData->ZID, messageContent, 12))"];
"1000520" [label="(Identifier,ZRTP_HASH_TYPE)"];
"1000243" [label="(Call,messageData->H3)"];
"1000484" [label="(Call,messageData->supportedKeyAgreement[i])"];
"1000202" [label="(Call,(uint8_t *)(input+ZRTP_PACKET_HEADER_LENGTH+ZRTP_MESSAGE_HEADER_LENGTH))"];
"1000436" [label="(Call,messageData->supportedCipher[i])"];
"1000466" [label="(Identifier,messageContent)"];
"1000538" [label="(Identifier,ZRTP_AUTHTAG_TYPE)"];
"1000524" [label="(Call,&messageData->hc)"];
"1000422" [label="(Literal,4)"];
"1000891" [label="(Call,memcpy(zrtpPacket->packetString, input, inputLength))"];
"1000418" [label="(Identifier,messageContent)"];
"1000333" [label="(Identifier,messageData)"];
"1000533" [label="(Call,&messageData->cc)"];
"1000556" [label="(Identifier,ZRTP_SAS_TYPE)"];
"1000224" [label="(Call,memcpy(messageData->version, messageContent, 4))"];
"1000201" [label="(Identifier,messageContent)"];
"1000435" [label="(Call,messageData->supportedCipher[i] = cryptoAlgoTypeStringToInt(messageContent, ZRTP_CIPHERBLOCK_TYPE))"];
"1000427" [label="(Call,i<messageData->cc)"];
"1000514" [label="(Identifier,messageContent)"];
"1000588" [label="(Call,memcpy(zrtpPacket->packetString, input, inputLength))"];
"1000469" [label="(Identifier,messageContent)"];
"1001078" [label="(Call,memcpy(DHPartHelloMessageString, input+ZRTP_PACKET_HEADER_LENGTH, zrtpPacket->messageLength))"];
"1000458" [label="(Block,)"];
"1000444" [label="(Call,messageContent +=4)"];
"1000551" [label="(Call,&messageData->kc)"];
"1000231" [label="(Identifier,messageContent)"];
"1000225" [label="(Call,messageData->version)"];
"1000493" [label="(Identifier,messageContent)"];
"1000483" [label="(Call,messageData->supportedKeyAgreement[i] = cryptoAlgoTypeStringToInt(messageContent, ZRTP_KEYAGREEMENT_TYPE))"];
"1000257" [label="(Call,messageContent +=12)"];
"1000489" [label="(Call,cryptoAlgoTypeStringToInt(messageContent, ZRTP_KEYAGREEMENT_TYPE))"];
"1000250" [label="(Literal,32)"];
"1000290" [label="(Call,messageContent +=1)"];
"1000460" [label="(Call,messageData->supportedAuthTag[i])"];
"1000491" [label="(Identifier,ZRTP_KEYAGREEMENT_TYPE)"];
"1000529" [label="(Identifier,ZRTP_CIPHERBLOCK_TYPE)"];
"1000291" [label="(Identifier,messageContent)"];
"1000235" [label="(Identifier,messageData)"];
"1000451" [label="(Call,i<messageData->ac)"];
"1000467" [label="(Identifier,ZRTP_AUTHTAG_TYPE)"];
"1000518" [label="(Literal,4)"];
"1000515" [label="(Identifier,ZRTP_SAS_TYPE)"];
"1000568" [label="(Identifier,messageContent)"];
"1000499" [label="(Call,i<messageData->sc)"];
"1000528" [label="(Call,addMandatoryCryptoTypesIfNeeded(ZRTP_CIPHERBLOCK_TYPE, messageData->supportedCipher, &messageData->cc))"];
"1000248" [label="(Call,messageContent +=32)"];
"1000354" [label="(Identifier,messageContent)"];
"1000507" [label="(Call,messageData->supportedSas[i] = cryptoAlgoTypeStringToInt(messageContent, ZRTP_SAS_TYPE))"];
"1000547" [label="(Identifier,ZRTP_KEYAGREEMENT_TYPE)"];
"1000259" [label="(Literal,12)"];
"1001379" [label="(Call,memcpy(messageData->confirm_mac, messageContent, 8))"];
"1001941" [label="(Call,memcpy(messageData->version, messageContent, 4))"];
"1000513" [label="(Call,cryptoAlgoTypeStringToInt(messageContent, ZRTP_SAS_TYPE))"];
"1000812" [label="(Call,cryptoAlgoTypeStringToInt(messageContent, ZRTP_SAS_TYPE))"];
"1001915" [label="(Call,memcpy(zrtpPacket->packetString, input, inputLength))"];
"1000465" [label="(Call,cryptoAlgoTypeStringToInt(messageContent, ZRTP_AUTHTAG_TYPE))"];
"1000197" [label="(Block,)"];
"1000305" [label="(Literal,1)"];
"1000194" [label="(MethodParameterIn,const uint8_t * input)"];
"1000445" [label="(Identifier,messageContent)"];
"1000353" [label="(Call,messageContent +=1)"];
"1000572" [label="(Identifier,zrtpPacket)"];
"1000255" [label="(Identifier,messageContent)"];
"1000232" [label="(Literal,4)"];
"1000494" [label="(Literal,4)"];
"1000468" [label="(Call,messageContent +=4)"];
"1000519" [label="(Call,addMandatoryCryptoTypesIfNeeded(ZRTP_HASH_TYPE, messageData->supportedHash, &messageData->hc))"];
"1000295" [label="(Identifier,messageData)"];
"1000412" [label="(Call,messageData->supportedHash[i])"];
"1000537" [label="(Call,addMandatoryCryptoTypesIfNeeded(ZRTP_AUTHTAG_TYPE, messageData->supportedAuthTag, &messageData->ac))"];
"1000244" [label="(Identifier,messageData)"];
"1000419" [label="(Identifier,ZRTP_HASH_TYPE)"];
"1000328" [label="(Call,messageContent +=1)"];
"1000420" [label="(Call,messageContent +=4)"];
"1000434" [label="(Block,)"];
"1000249" [label="(Identifier,messageContent)"];
"1000247" [label="(Literal,32)"];
"1000240" [label="(Identifier,messageContent)"];
"1000237" [label="(Identifier,messageContent)"];
"1000303" [label="(Call,messageContent +=1)"];
"1000292" [label="(Literal,1)"];
"1000446" [label="(Literal,4)"];
"1000215" [label="(Block,)"];
"1000252" [label="(Call,messageData->ZID)"];
"1000242" [label="(Call,memcpy(messageData->H3, messageContent, 32))"];
"1000539" [label="(Call,messageData->supportedAuthTag)"];
"1000308" [label="(Identifier,messageData)"];
"1000470" [label="(Literal,4)"];
"1000517" [label="(Identifier,messageContent)"];
"1000355" [label="(Literal,1)"];
"1000475" [label="(Call,i<messageData->kc)"];
"1000569" [label="(Literal,8)"];
"1000560" [label="(Call,&messageData->sc)"];
"1000417" [label="(Call,cryptoAlgoTypeStringToInt(messageContent, ZRTP_HASH_TYPE))"];
"1000506" [label="(Block,)"];
"1000492" [label="(Call,messageContent +=4)"];
"1000204" [label="(Call,input+ZRTP_PACKET_HEADER_LENGTH+ZRTP_MESSAGE_HEADER_LENGTH)"];
"1000239" [label="(Call,messageContent +=16)"];
"1000409" [label="(Identifier,i)"];
"1000624" [label="(Call,memcpy(messageData->H2, messageContent, 32))"];
"1000459" [label="(Call,messageData->supportedAuthTag[i] = cryptoAlgoTypeStringToInt(messageContent, ZRTP_AUTHTAG_TYPE))"];
"1000557" [label="(Call,messageData->supportedSas)"];
"1000505" [label="(Identifier,i)"];
"1000403" [label="(Call,i<messageData->hc)"];
"1000443" [label="(Identifier,ZRTP_CIPHERBLOCK_TYPE)"];
"1000359" [label="(Identifier,zrtpPacket)"];
"1000200" [label="(Call,*messageContent = (uint8_t *)(input+ZRTP_PACKET_HEADER_LENGTH+ZRTP_MESSAGE_HEADER_LENGTH))"];
"1000945" [label="(Call,memcpy(messageData->H1, messageContent, 32))"];
"1000482" [label="(Block,)"];
"1000516" [label="(Call,messageContent +=4)"];
"1000546" [label="(Call,addMandatoryCryptoTypesIfNeeded(ZRTP_KEYAGREEMENT_TYPE, messageData->supportedKeyAgreement, &messageData->kc))"];
"1001080" [label="(Call,input+ZRTP_PACKET_HEADER_LENGTH)"];
"1000258" [label="(Identifier,messageContent)"];
"1000230" [label="(Call,messageContent +=4)"];
"1000262" [label="(Identifier,messageData)"];
"1000256" [label="(Literal,12)"];
"1000566" [label="(Identifier,messageData)"];
"1000548" [label="(Call,messageData->supportedKeyAgreement)"];
"1000411" [label="(Call,messageData->supportedHash[i] = cryptoAlgoTypeStringToInt(messageContent, ZRTP_HASH_TYPE))"];
"1000565" [label="(Call,messageData->MAC)"];
"1000241" [label="(Literal,16)"];
"1000564" [label="(Call,memcpy(messageData->MAC, messageContent, 8))"];
"1000521" [label="(Call,messageData->supportedHash)"];
"1000433" [label="(Identifier,i)"];
"1000442" [label="(Identifier,messageContent)"];
"1000542" [label="(Call,&messageData->ac)"];
"1000410" [label="(Block,)"];
"1000233" [label="(Call,memcpy(messageData->clientIdentifier, messageContent, 16))"];
"1000555" [label="(Call,addMandatoryCryptoTypesIfNeeded(ZRTP_SAS_TYPE, messageData->supportedSas, &messageData->sc))"];
"1000490" [label="(Identifier,messageContent)"];
"1000228" [label="(Identifier,messageContent)"];
"1000304" [label="(Identifier,messageContent)"];
"1000421" [label="(Identifier,messageContent)"];
"1000329" [label="(Identifier,messageContent)"];
"1000330" [label="(Literal,1)"];
"1000238" [label="(Literal,16)"];
"1000234" [label="(Call,messageData->clientIdentifier)"];
"1001966" [label="(MethodReturn,int)"];
"1000508" [label="(Call,messageData->supportedSas[i])"];
"1001285" [label="(Call,memcpy(zrtpPacket->packetString, input, inputLength))"];
"1000229" [label="(Literal,4)"];
"1000251" -> "1000215"  [label="AST: "];
"1000251" -> "1000256"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000255" -> "1000251"  [label="AST: "];
"1000256" -> "1000251"  [label="AST: "];
"1000258" -> "1000251"  [label="CFG: "];
"1000251" -> "1001966"  [label="DDG: memcpy(messageData->ZID, messageContent, 12)"];
"1000251" -> "1001966"  [label="DDG: messageData->ZID"];
"1000248" -> "1000251"  [label="DDG: messageContent"];
"1000251" -> "1000257"  [label="DDG: messageContent"];
"1000248" -> "1000215"  [label="AST: "];
"1000248" -> "1000250"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="AST: "];
"1000253" -> "1000248"  [label="CFG: "];
"1000242" -> "1000248"  [label="DDG: messageContent"];
"1000242" -> "1000215"  [label="AST: "];
"1000242" -> "1000247"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000246" -> "1000242"  [label="AST: "];
"1000247" -> "1000242"  [label="AST: "];
"1000249" -> "1000242"  [label="CFG: "];
"1000242" -> "1001966"  [label="DDG: memcpy(messageData->H3, messageContent, 32)"];
"1000242" -> "1001966"  [label="DDG: messageData->H3"];
"1000239" -> "1000242"  [label="DDG: messageContent"];
"1000239" -> "1000215"  [label="AST: "];
"1000239" -> "1000241"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="AST: "];
"1000244" -> "1000239"  [label="CFG: "];
"1000233" -> "1000239"  [label="DDG: messageContent"];
"1000233" -> "1000215"  [label="AST: "];
"1000233" -> "1000238"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000237" -> "1000233"  [label="AST: "];
"1000238" -> "1000233"  [label="AST: "];
"1000240" -> "1000233"  [label="CFG: "];
"1000233" -> "1001966"  [label="DDG: memcpy(messageData->clientIdentifier, messageContent, 16)"];
"1000233" -> "1001966"  [label="DDG: messageData->clientIdentifier"];
"1000230" -> "1000233"  [label="DDG: messageContent"];
"1000230" -> "1000215"  [label="AST: "];
"1000230" -> "1000232"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000232" -> "1000230"  [label="AST: "];
"1000235" -> "1000230"  [label="CFG: "];
"1000224" -> "1000230"  [label="DDG: messageContent"];
"1000224" -> "1000215"  [label="AST: "];
"1000224" -> "1000229"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000228" -> "1000224"  [label="AST: "];
"1000229" -> "1000224"  [label="AST: "];
"1000231" -> "1000224"  [label="CFG: "];
"1000224" -> "1001966"  [label="DDG: messageData->version"];
"1000224" -> "1001966"  [label="DDG: memcpy(messageData->version, messageContent, 4)"];
"1000200" -> "1000224"  [label="DDG: messageContent"];
"1000200" -> "1000197"  [label="AST: "];
"1000200" -> "1000202"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000202" -> "1000200"  [label="AST: "];
"1000211" -> "1000200"  [label="CFG: "];
"1000200" -> "1001966"  [label="DDG: messageContent"];
"1000200" -> "1001966"  [label="DDG: (uint8_t *)(input+ZRTP_PACKET_HEADER_LENGTH+ZRTP_MESSAGE_HEADER_LENGTH)"];
"1000202" -> "1000200"  [label="DDG: input+ZRTP_PACKET_HEADER_LENGTH+ZRTP_MESSAGE_HEADER_LENGTH"];
"1000200" -> "1000624"  [label="DDG: messageContent"];
"1000200" -> "1000812"  [label="DDG: messageContent"];
"1000200" -> "1000945"  [label="DDG: messageContent"];
"1000200" -> "1001379"  [label="DDG: messageContent"];
"1000200" -> "1001941"  [label="DDG: messageContent"];
"1000202" -> "1000204"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000202" -> "1001966"  [label="DDG: input+ZRTP_PACKET_HEADER_LENGTH+ZRTP_MESSAGE_HEADER_LENGTH"];
"1000194" -> "1000202"  [label="DDG: input"];
"1000194" -> "1000191"  [label="AST: "];
"1000194" -> "1001966"  [label="DDG: input"];
"1000194" -> "1000204"  [label="DDG: input"];
"1000194" -> "1000588"  [label="DDG: input"];
"1000194" -> "1000891"  [label="DDG: input"];
"1000194" -> "1001078"  [label="DDG: input"];
"1000194" -> "1001080"  [label="DDG: input"];
"1000194" -> "1001285"  [label="DDG: input"];
"1000194" -> "1001915"  [label="DDG: input"];
"1000257" -> "1000215"  [label="AST: "];
"1000257" -> "1000259"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000259" -> "1000257"  [label="AST: "];
"1000262" -> "1000257"  [label="CFG: "];
"1000257" -> "1000290"  [label="DDG: messageContent"];
"1000290" -> "1000215"  [label="AST: "];
"1000290" -> "1000292"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000292" -> "1000290"  [label="AST: "];
"1000295" -> "1000290"  [label="CFG: "];
"1000290" -> "1000303"  [label="DDG: messageContent"];
"1000303" -> "1000215"  [label="AST: "];
"1000303" -> "1000305"  [label="CFG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000305" -> "1000303"  [label="AST: "];
"1000308" -> "1000303"  [label="CFG: "];
"1000303" -> "1000328"  [label="DDG: messageContent"];
"1000328" -> "1000215"  [label="AST: "];
"1000328" -> "1000330"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000330" -> "1000328"  [label="AST: "];
"1000333" -> "1000328"  [label="CFG: "];
"1000328" -> "1000353"  [label="DDG: messageContent"];
"1000353" -> "1000215"  [label="AST: "];
"1000353" -> "1000355"  [label="CFG: "];
"1000354" -> "1000353"  [label="AST: "];
"1000355" -> "1000353"  [label="AST: "];
"1000359" -> "1000353"  [label="CFG: "];
"1000353" -> "1001966"  [label="DDG: messageContent"];
"1000353" -> "1000417"  [label="DDG: messageContent"];
"1000353" -> "1000441"  [label="DDG: messageContent"];
"1000353" -> "1000465"  [label="DDG: messageContent"];
"1000353" -> "1000489"  [label="DDG: messageContent"];
"1000353" -> "1000513"  [label="DDG: messageContent"];
"1000353" -> "1000564"  [label="DDG: messageContent"];
"1000417" -> "1000411"  [label="AST: "];
"1000417" -> "1000419"  [label="CFG: "];
"1000418" -> "1000417"  [label="AST: "];
"1000419" -> "1000417"  [label="AST: "];
"1000411" -> "1000417"  [label="CFG: "];
"1000417" -> "1000411"  [label="DDG: messageContent"];
"1000417" -> "1000411"  [label="DDG: ZRTP_HASH_TYPE"];
"1000420" -> "1000417"  [label="DDG: messageContent"];
"1000417" -> "1000420"  [label="DDG: messageContent"];
"1000417" -> "1000519"  [label="DDG: ZRTP_HASH_TYPE"];
"1000411" -> "1000410"  [label="AST: "];
"1000412" -> "1000411"  [label="AST: "];
"1000421" -> "1000411"  [label="CFG: "];
"1000411" -> "1001966"  [label="DDG: messageData->supportedHash[i]"];
"1000411" -> "1001966"  [label="DDG: cryptoAlgoTypeStringToInt(messageContent, ZRTP_HASH_TYPE)"];
"1000411" -> "1000519"  [label="DDG: messageData->supportedHash[i]"];
"1000519" -> "1000215"  [label="AST: "];
"1000519" -> "1000524"  [label="CFG: "];
"1000520" -> "1000519"  [label="AST: "];
"1000521" -> "1000519"  [label="AST: "];
"1000524" -> "1000519"  [label="AST: "];
"1000529" -> "1000519"  [label="CFG: "];
"1000519" -> "1001966"  [label="DDG: &messageData->hc"];
"1000519" -> "1001966"  [label="DDG: ZRTP_HASH_TYPE"];
"1000519" -> "1001966"  [label="DDG: addMandatoryCryptoTypesIfNeeded(ZRTP_HASH_TYPE, messageData->supportedHash, &messageData->hc)"];
"1000519" -> "1001966"  [label="DDG: messageData->supportedHash"];
"1000403" -> "1000519"  [label="DDG: messageData->hc"];
"1000420" -> "1000410"  [label="AST: "];
"1000420" -> "1000422"  [label="CFG: "];
"1000421" -> "1000420"  [label="AST: "];
"1000422" -> "1000420"  [label="AST: "];
"1000409" -> "1000420"  [label="CFG: "];
"1000420" -> "1000441"  [label="DDG: messageContent"];
"1000420" -> "1000465"  [label="DDG: messageContent"];
"1000420" -> "1000489"  [label="DDG: messageContent"];
"1000420" -> "1000513"  [label="DDG: messageContent"];
"1000420" -> "1000564"  [label="DDG: messageContent"];
"1000441" -> "1000435"  [label="AST: "];
"1000441" -> "1000443"  [label="CFG: "];
"1000442" -> "1000441"  [label="AST: "];
"1000443" -> "1000441"  [label="AST: "];
"1000435" -> "1000441"  [label="CFG: "];
"1000441" -> "1000435"  [label="DDG: messageContent"];
"1000441" -> "1000435"  [label="DDG: ZRTP_CIPHERBLOCK_TYPE"];
"1000444" -> "1000441"  [label="DDG: messageContent"];
"1000441" -> "1000444"  [label="DDG: messageContent"];
"1000441" -> "1000528"  [label="DDG: ZRTP_CIPHERBLOCK_TYPE"];
"1000435" -> "1000434"  [label="AST: "];
"1000436" -> "1000435"  [label="AST: "];
"1000445" -> "1000435"  [label="CFG: "];
"1000435" -> "1001966"  [label="DDG: messageData->supportedCipher[i]"];
"1000435" -> "1001966"  [label="DDG: cryptoAlgoTypeStringToInt(messageContent, ZRTP_CIPHERBLOCK_TYPE)"];
"1000435" -> "1000528"  [label="DDG: messageData->supportedCipher[i]"];
"1000528" -> "1000215"  [label="AST: "];
"1000528" -> "1000533"  [label="CFG: "];
"1000529" -> "1000528"  [label="AST: "];
"1000530" -> "1000528"  [label="AST: "];
"1000533" -> "1000528"  [label="AST: "];
"1000538" -> "1000528"  [label="CFG: "];
"1000528" -> "1001966"  [label="DDG: &messageData->cc"];
"1000528" -> "1001966"  [label="DDG: addMandatoryCryptoTypesIfNeeded(ZRTP_CIPHERBLOCK_TYPE, messageData->supportedCipher, &messageData->cc)"];
"1000528" -> "1001966"  [label="DDG: messageData->supportedCipher"];
"1000528" -> "1001966"  [label="DDG: ZRTP_CIPHERBLOCK_TYPE"];
"1000427" -> "1000528"  [label="DDG: messageData->cc"];
"1000444" -> "1000434"  [label="AST: "];
"1000444" -> "1000446"  [label="CFG: "];
"1000445" -> "1000444"  [label="AST: "];
"1000446" -> "1000444"  [label="AST: "];
"1000433" -> "1000444"  [label="CFG: "];
"1000444" -> "1000465"  [label="DDG: messageContent"];
"1000444" -> "1000489"  [label="DDG: messageContent"];
"1000444" -> "1000513"  [label="DDG: messageContent"];
"1000444" -> "1000564"  [label="DDG: messageContent"];
"1000465" -> "1000459"  [label="AST: "];
"1000465" -> "1000467"  [label="CFG: "];
"1000466" -> "1000465"  [label="AST: "];
"1000467" -> "1000465"  [label="AST: "];
"1000459" -> "1000465"  [label="CFG: "];
"1000465" -> "1000459"  [label="DDG: messageContent"];
"1000465" -> "1000459"  [label="DDG: ZRTP_AUTHTAG_TYPE"];
"1000468" -> "1000465"  [label="DDG: messageContent"];
"1000465" -> "1000468"  [label="DDG: messageContent"];
"1000465" -> "1000537"  [label="DDG: ZRTP_AUTHTAG_TYPE"];
"1000459" -> "1000458"  [label="AST: "];
"1000460" -> "1000459"  [label="AST: "];
"1000469" -> "1000459"  [label="CFG: "];
"1000459" -> "1001966"  [label="DDG: messageData->supportedAuthTag[i]"];
"1000459" -> "1001966"  [label="DDG: cryptoAlgoTypeStringToInt(messageContent, ZRTP_AUTHTAG_TYPE)"];
"1000459" -> "1000537"  [label="DDG: messageData->supportedAuthTag[i]"];
"1000537" -> "1000215"  [label="AST: "];
"1000537" -> "1000542"  [label="CFG: "];
"1000538" -> "1000537"  [label="AST: "];
"1000539" -> "1000537"  [label="AST: "];
"1000542" -> "1000537"  [label="AST: "];
"1000547" -> "1000537"  [label="CFG: "];
"1000537" -> "1001966"  [label="DDG: &messageData->ac"];
"1000537" -> "1001966"  [label="DDG: messageData->supportedAuthTag"];
"1000537" -> "1001966"  [label="DDG: ZRTP_AUTHTAG_TYPE"];
"1000537" -> "1001966"  [label="DDG: addMandatoryCryptoTypesIfNeeded(ZRTP_AUTHTAG_TYPE, messageData->supportedAuthTag, &messageData->ac)"];
"1000451" -> "1000537"  [label="DDG: messageData->ac"];
"1000468" -> "1000458"  [label="AST: "];
"1000468" -> "1000470"  [label="CFG: "];
"1000469" -> "1000468"  [label="AST: "];
"1000470" -> "1000468"  [label="AST: "];
"1000457" -> "1000468"  [label="CFG: "];
"1000468" -> "1000489"  [label="DDG: messageContent"];
"1000468" -> "1000513"  [label="DDG: messageContent"];
"1000468" -> "1000564"  [label="DDG: messageContent"];
"1000489" -> "1000483"  [label="AST: "];
"1000489" -> "1000491"  [label="CFG: "];
"1000490" -> "1000489"  [label="AST: "];
"1000491" -> "1000489"  [label="AST: "];
"1000483" -> "1000489"  [label="CFG: "];
"1000489" -> "1000483"  [label="DDG: messageContent"];
"1000489" -> "1000483"  [label="DDG: ZRTP_KEYAGREEMENT_TYPE"];
"1000492" -> "1000489"  [label="DDG: messageContent"];
"1000489" -> "1000492"  [label="DDG: messageContent"];
"1000489" -> "1000546"  [label="DDG: ZRTP_KEYAGREEMENT_TYPE"];
"1000483" -> "1000482"  [label="AST: "];
"1000484" -> "1000483"  [label="AST: "];
"1000493" -> "1000483"  [label="CFG: "];
"1000483" -> "1001966"  [label="DDG: cryptoAlgoTypeStringToInt(messageContent, ZRTP_KEYAGREEMENT_TYPE)"];
"1000483" -> "1001966"  [label="DDG: messageData->supportedKeyAgreement[i]"];
"1000483" -> "1000546"  [label="DDG: messageData->supportedKeyAgreement[i]"];
"1000546" -> "1000215"  [label="AST: "];
"1000546" -> "1000551"  [label="CFG: "];
"1000547" -> "1000546"  [label="AST: "];
"1000548" -> "1000546"  [label="AST: "];
"1000551" -> "1000546"  [label="AST: "];
"1000556" -> "1000546"  [label="CFG: "];
"1000546" -> "1001966"  [label="DDG: messageData->supportedKeyAgreement"];
"1000546" -> "1001966"  [label="DDG: addMandatoryCryptoTypesIfNeeded(ZRTP_KEYAGREEMENT_TYPE, messageData->supportedKeyAgreement, &messageData->kc)"];
"1000546" -> "1001966"  [label="DDG: &messageData->kc"];
"1000546" -> "1001966"  [label="DDG: ZRTP_KEYAGREEMENT_TYPE"];
"1000475" -> "1000546"  [label="DDG: messageData->kc"];
"1000492" -> "1000482"  [label="AST: "];
"1000492" -> "1000494"  [label="CFG: "];
"1000493" -> "1000492"  [label="AST: "];
"1000494" -> "1000492"  [label="AST: "];
"1000481" -> "1000492"  [label="CFG: "];
"1000492" -> "1000513"  [label="DDG: messageContent"];
"1000492" -> "1000564"  [label="DDG: messageContent"];
"1000513" -> "1000507"  [label="AST: "];
"1000513" -> "1000515"  [label="CFG: "];
"1000514" -> "1000513"  [label="AST: "];
"1000515" -> "1000513"  [label="AST: "];
"1000507" -> "1000513"  [label="CFG: "];
"1000513" -> "1000507"  [label="DDG: messageContent"];
"1000513" -> "1000507"  [label="DDG: ZRTP_SAS_TYPE"];
"1000516" -> "1000513"  [label="DDG: messageContent"];
"1000513" -> "1000516"  [label="DDG: messageContent"];
"1000513" -> "1000555"  [label="DDG: ZRTP_SAS_TYPE"];
"1000507" -> "1000506"  [label="AST: "];
"1000508" -> "1000507"  [label="AST: "];
"1000517" -> "1000507"  [label="CFG: "];
"1000507" -> "1001966"  [label="DDG: cryptoAlgoTypeStringToInt(messageContent, ZRTP_SAS_TYPE)"];
"1000507" -> "1001966"  [label="DDG: messageData->supportedSas[i]"];
"1000507" -> "1000555"  [label="DDG: messageData->supportedSas[i]"];
"1000555" -> "1000215"  [label="AST: "];
"1000555" -> "1000560"  [label="CFG: "];
"1000556" -> "1000555"  [label="AST: "];
"1000557" -> "1000555"  [label="AST: "];
"1000560" -> "1000555"  [label="AST: "];
"1000566" -> "1000555"  [label="CFG: "];
"1000555" -> "1001966"  [label="DDG: &messageData->sc"];
"1000555" -> "1001966"  [label="DDG: messageData->supportedSas"];
"1000555" -> "1001966"  [label="DDG: addMandatoryCryptoTypesIfNeeded(ZRTP_SAS_TYPE, messageData->supportedSas, &messageData->sc)"];
"1000555" -> "1001966"  [label="DDG: ZRTP_SAS_TYPE"];
"1000499" -> "1000555"  [label="DDG: messageData->sc"];
"1000516" -> "1000506"  [label="AST: "];
"1000516" -> "1000518"  [label="CFG: "];
"1000517" -> "1000516"  [label="AST: "];
"1000518" -> "1000516"  [label="AST: "];
"1000505" -> "1000516"  [label="CFG: "];
"1000516" -> "1000564"  [label="DDG: messageContent"];
"1000564" -> "1000215"  [label="AST: "];
"1000564" -> "1000569"  [label="CFG: "];
"1000565" -> "1000564"  [label="AST: "];
"1000568" -> "1000564"  [label="AST: "];
"1000569" -> "1000564"  [label="AST: "];
"1000572" -> "1000564"  [label="CFG: "];
"1000564" -> "1001966"  [label="DDG: messageContent"];
"1000564" -> "1001966"  [label="DDG: messageData->MAC"];
"1000564" -> "1001966"  [label="DDG: memcpy(messageData->MAC, messageContent, 8)"];
}
