digraph "0_bzrtp_bbb1e6e2f467ee4bd7b9a8c800e4f07343d7d99b@API" {
"1000945" [label="(Call,memcpy(messageData->H1, messageContent, 32))"];
"1000200" [label="(Call,*messageContent = (uint8_t *)(input+ZRTP_PACKET_HEADER_LENGTH+ZRTP_MESSAGE_HEADER_LENGTH))"];
"1000202" [label="(Call,(uint8_t *)(input+ZRTP_PACKET_HEADER_LENGTH+ZRTP_MESSAGE_HEADER_LENGTH))"];
"1000194" [label="(MethodParameterIn,const uint8_t * input)"];
"1000951" [label="(Call,messageContent +=32)"];
"1001216" [label="(Call,memcpy(messageData->rs1ID, messageContent, 8))"];
"1001222" [label="(Call,messageContent +=8)"];
"1001225" [label="(Call,memcpy(messageData->rs2ID, messageContent, 8))"];
"1001231" [label="(Call,messageContent +=8)"];
"1001234" [label="(Call,memcpy(messageData->auxsecretID, messageContent, 8))"];
"1001240" [label="(Call,messageContent +=8)"];
"1001243" [label="(Call,memcpy(messageData->pbxsecretID, messageContent, 8))"];
"1001249" [label="(Call,messageContent +=8)"];
"1001252" [label="(Call,memcpy(messageData->pv, messageContent, pvLength))"];
"1001258" [label="(Call,messageContent +=pvLength)"];
"1001261" [label="(Call,memcpy(messageData->MAC, messageContent, 8))"];
"1000988" [label="(Call,bctoolbox_sha256(messageData->H1, 32, 32, checkH2))"];
"1000997" [label="(Call,memcmp(checkH2, peerCommitMessageData->H2, 32))"];
"1000996" [label="(Call,memcmp(checkH2, peerCommitMessageData->H2, 32) != 0)"];
"1001009" [label="(Call,bctoolbox_hmacSha256(messageData->H1, 32, zrtpChannelContext->peerPackets[COMMIT_MESSAGE_STORE_ID]->packetString+ZRTP_PACKET_HEADER_LENGTH, zrtpChannelContext->peerPackets[COMMIT_MESSAGE_STORE_ID]->messageLength-8, 8, checkMAC))"];
"1001036" [label="(Call,memcmp(checkMAC, peerCommitMessageData->MAC, 8))"];
"1001035" [label="(Call,memcmp(checkMAC, peerCommitMessageData->MAC, 8) != 0)"];
"1001153" [label="(Call,bctoolbox_sha256(messageData->H1, 32, 32, checkH2))"];
"1001160" [label="(Call,bctoolbox_sha256(checkH2, 32, 32, checkH3))"];
"1001167" [label="(Call,memcmp(checkH3, peerHelloMessageData->H3, 32))"];
"1001166" [label="(Call,memcmp(checkH3, peerHelloMessageData->H3, 32) != 0)"];
"1001179" [label="(Call,bctoolbox_hmacSha256(checkH2, 32, zrtpChannelContext->peerPackets[HELLO_MESSAGE_STORE_ID]->packetString+ZRTP_PACKET_HEADER_LENGTH, zrtpChannelContext->peerPackets[HELLO_MESSAGE_STORE_ID]->messageLength-8, 8, checkMAC))"];
"1001204" [label="(Call,memcmp(checkMAC, peerHelloMessageData->MAC, 8))"];
"1001203" [label="(Call,memcmp(checkMAC, peerHelloMessageData->MAC, 8) != 0)"];
"1001259" [label="(Identifier,messageContent)"];
"1001258" [label="(Call,messageContent +=pvLength)"];
"1000211" [label="(Identifier,zrtpPacket)"];
"1000941" [label="(Call,pvLength*sizeof(uint8_t))"];
"1001033" [label="(Identifier,checkMAC)"];
"1000202" [label="(Call,(uint8_t *)(input+ZRTP_PACKET_HEADER_LENGTH+ZRTP_MESSAGE_HEADER_LENGTH))"];
"1001232" [label="(Identifier,messageContent)"];
"1001201" [label="(Identifier,checkMAC)"];
"1001182" [label="(Call,zrtpChannelContext->peerPackets[HELLO_MESSAGE_STORE_ID]->packetString+ZRTP_PACKET_HEADER_LENGTH)"];
"1001204" [label="(Call,memcmp(checkMAC, peerHelloMessageData->MAC, 8))"];
"1001035" [label="(Call,memcmp(checkMAC, peerCommitMessageData->MAC, 8) != 0)"];
"1000891" [label="(Call,memcpy(zrtpPacket->packetString, input, inputLength))"];
"1001179" [label="(Call,bctoolbox_hmacSha256(checkH2, 32, zrtpChannelContext->peerPackets[HELLO_MESSAGE_STORE_ID]->packetString+ZRTP_PACKET_HEADER_LENGTH, zrtpChannelContext->peerPackets[HELLO_MESSAGE_STORE_ID]->messageLength-8, 8, checkMAC))"];
"1000224" [label="(Call,memcpy(messageData->version, messageContent, 4))"];
"1000201" [label="(Identifier,messageContent)"];
"1001203" [label="(Call,memcmp(checkMAC, peerHelloMessageData->MAC, 8) != 0)"];
"1001226" [label="(Call,messageData->rs2ID)"];
"1001220" [label="(Identifier,messageContent)"];
"1001241" [label="(Identifier,messageContent)"];
"1000999" [label="(Call,peerCommitMessageData->H2)"];
"1000934" [label="(Call,messageData->pv = (uint8_t *)malloc(pvLength*sizeof(uint8_t)))"];
"1001231" [label="(Call,messageContent +=8)"];
"1000588" [label="(Call,memcpy(zrtpPacket->packetString, input, inputLength))"];
"1001248" [label="(Literal,8)"];
"1001257" [label="(Identifier,pvLength)"];
"1001223" [label="(Identifier,messageContent)"];
"1001011" [label="(Identifier,messageData)"];
"1001078" [label="(Call,memcpy(DHPartHelloMessageString, input+ZRTP_PACKET_HEADER_LENGTH, zrtpPacket->messageLength))"];
"1000992" [label="(Literal,32)"];
"1001036" [label="(Call,memcmp(checkMAC, peerCommitMessageData->MAC, 8))"];
"1001023" [label="(Call,zrtpChannelContext->peerPackets[COMMIT_MESSAGE_STORE_ID]->messageLength-8)"];
"1001181" [label="(Literal,32)"];
"1001045" [label="(Identifier,messageData)"];
"1001161" [label="(Identifier,checkH2)"];
"1001251" [label="(Literal,8)"];
"1001253" [label="(Call,messageData->pv)"];
"1001010" [label="(Call,messageData->H1)"];
"1000957" [label="(Identifier,zrtpChannelContext)"];
"1001037" [label="(Identifier,checkMAC)"];
"1001164" [label="(Identifier,checkH3)"];
"1001261" [label="(Call,memcpy(messageData->MAC, messageContent, 8))"];
"1001006" [label="(Identifier,messageData)"];
"1001249" [label="(Call,messageContent +=8)"];
"1001247" [label="(Identifier,messageContent)"];
"1001238" [label="(Identifier,messageContent)"];
"1001191" [label="(Call,zrtpChannelContext->peerPackets[HELLO_MESSAGE_STORE_ID]->messageLength-8)"];
"1001200" [label="(Literal,8)"];
"1001176" [label="(Identifier,messageData)"];
"1001216" [label="(Call,memcpy(messageData->rs1ID, messageContent, 8))"];
"1001225" [label="(Call,memcpy(messageData->rs2ID, messageContent, 8))"];
"1001038" [label="(Call,peerCommitMessageData->MAC)"];
"1001244" [label="(Call,messageData->pbxsecretID)"];
"1001233" [label="(Literal,8)"];
"1000960" [label="(Block,)"];
"1001236" [label="(Identifier,messageData)"];
"1001032" [label="(Literal,8)"];
"1000952" [label="(Identifier,messageContent)"];
"1001162" [label="(Literal,32)"];
"1001210" [label="(Literal,0)"];
"1000949" [label="(Identifier,messageContent)"];
"1001269" [label="(Identifier,zrtpPacket)"];
"1000989" [label="(Call,messageData->H1)"];
"1001265" [label="(Identifier,messageContent)"];
"1000995" [label="(ControlStructure,if (memcmp(checkH2, peerCommitMessageData->H2, 32) != 0))"];
"1001221" [label="(Literal,8)"];
"1001243" [label="(Call,memcpy(messageData->pbxsecretID, messageContent, 8))"];
"1001034" [label="(ControlStructure,if (memcmp(checkMAC, peerCommitMessageData->MAC, 8) != 0))"];
"1001256" [label="(Identifier,messageContent)"];
"1001379" [label="(Call,memcpy(messageData->confirm_mac, messageContent, 8))"];
"1001941" [label="(Call,memcpy(messageData->version, messageContent, 4))"];
"1000812" [label="(Call,cryptoAlgoTypeStringToInt(messageContent, ZRTP_SAS_TYPE))"];
"1001165" [label="(ControlStructure,if (memcmp(checkH3, peerHelloMessageData->H3, 32) != 0))"];
"1001915" [label="(Call,memcpy(zrtpPacket->packetString, input, inputLength))"];
"1001254" [label="(Identifier,messageData)"];
"1000197" [label="(Block,)"];
"1000194" [label="(MethodParameterIn,const uint8_t * input)"];
"1001229" [label="(Identifier,messageContent)"];
"1001157" [label="(Literal,32)"];
"1001240" [label="(Call,messageContent +=8)"];
"1001252" [label="(Call,memcpy(messageData->pv, messageContent, pvLength))"];
"1001041" [label="(Literal,8)"];
"1001218" [label="(Identifier,messageData)"];
"1001224" [label="(Literal,8)"];
"1001168" [label="(Identifier,checkH3)"];
"1001003" [label="(Literal,0)"];
"1001042" [label="(Literal,0)"];
"1000953" [label="(Literal,32)"];
"1000946" [label="(Call,messageData->H1)"];
"1001052" [label="(Identifier,HelloMessageLength)"];
"1001242" [label="(Literal,8)"];
"1001167" [label="(Call,memcmp(checkH3, peerHelloMessageData->H3, 32))"];
"1000988" [label="(Call,bctoolbox_sha256(messageData->H1, 32, 32, checkH2))"];
"1000951" [label="(Call,messageContent +=32)"];
"1001009" [label="(Call,bctoolbox_hmacSha256(messageData->H1, 32, zrtpChannelContext->peerPackets[COMMIT_MESSAGE_STORE_ID]->packetString+ZRTP_PACKET_HEADER_LENGTH, zrtpChannelContext->peerPackets[COMMIT_MESSAGE_STORE_ID]->messageLength-8, 8, checkMAC))"];
"1001245" [label="(Identifier,messageData)"];
"1001230" [label="(Literal,8)"];
"1001158" [label="(Literal,32)"];
"1001166" [label="(Call,memcmp(checkH3, peerHelloMessageData->H3, 32) != 0)"];
"1001213" [label="(Identifier,messageData)"];
"1001014" [label="(Call,zrtpChannelContext->peerPackets[COMMIT_MESSAGE_STORE_ID]->packetString+ZRTP_PACKET_HEADER_LENGTH)"];
"1001180" [label="(Identifier,checkH2)"];
"1001222" [label="(Call,messageContent +=8)"];
"1001260" [label="(Identifier,pvLength)"];
"1000204" [label="(Call,input+ZRTP_PACKET_HEADER_LENGTH+ZRTP_MESSAGE_HEADER_LENGTH)"];
"1001154" [label="(Call,messageData->H1)"];
"1001235" [label="(Call,messageData->auxsecretID)"];
"1000624" [label="(Call,memcpy(messageData->H2, messageContent, 32))"];
"1000994" [label="(Identifier,checkH2)"];
"1001227" [label="(Identifier,messageData)"];
"1001172" [label="(Literal,32)"];
"1001163" [label="(Literal,32)"];
"1000200" [label="(Call,*messageContent = (uint8_t *)(input+ZRTP_PACKET_HEADER_LENGTH+ZRTP_MESSAGE_HEADER_LENGTH))"];
"1000945" [label="(Call,memcpy(messageData->H1, messageContent, 32))"];
"1001217" [label="(Call,messageData->rs1ID)"];
"1001013" [label="(Literal,32)"];
"1001262" [label="(Call,messageData->MAC)"];
"1001169" [label="(Call,peerHelloMessageData->H3)"];
"1001206" [label="(Call,peerHelloMessageData->MAC)"];
"1001173" [label="(Literal,0)"];
"1001080" [label="(Call,input+ZRTP_PACKET_HEADER_LENGTH)"];
"1001202" [label="(ControlStructure,if (memcmp(checkMAC, peerHelloMessageData->MAC, 8) != 0))"];
"1001159" [label="(Identifier,checkH2)"];
"1001239" [label="(Literal,8)"];
"1001153" [label="(Call,bctoolbox_sha256(messageData->H1, 32, 32, checkH2))"];
"1000998" [label="(Identifier,checkH2)"];
"1000996" [label="(Call,memcmp(checkH2, peerCommitMessageData->H2, 32) != 0)"];
"1001160" [label="(Call,bctoolbox_sha256(checkH2, 32, 32, checkH3))"];
"1000900" [label="(Block,)"];
"1000993" [label="(Literal,32)"];
"1000997" [label="(Call,memcmp(checkH2, peerCommitMessageData->H2, 32))"];
"1001209" [label="(Literal,8)"];
"1001002" [label="(Literal,32)"];
"1001263" [label="(Identifier,messageData)"];
"1001124" [label="(Block,)"];
"1000950" [label="(Literal,32)"];
"1001266" [label="(Literal,8)"];
"1001205" [label="(Identifier,checkMAC)"];
"1001966" [label="(MethodReturn,int)"];
"1001234" [label="(Call,memcpy(messageData->auxsecretID, messageContent, 8))"];
"1001285" [label="(Call,memcpy(zrtpPacket->packetString, input, inputLength))"];
"1001250" [label="(Identifier,messageContent)"];
"1000945" -> "1000900"  [label="AST: "];
"1000945" -> "1000950"  [label="CFG: "];
"1000946" -> "1000945"  [label="AST: "];
"1000949" -> "1000945"  [label="AST: "];
"1000950" -> "1000945"  [label="AST: "];
"1000952" -> "1000945"  [label="CFG: "];
"1000945" -> "1001966"  [label="DDG: messageData->H1"];
"1000945" -> "1001966"  [label="DDG: memcpy(messageData->H1, messageContent, 32)"];
"1000200" -> "1000945"  [label="DDG: messageContent"];
"1000945" -> "1000951"  [label="DDG: messageContent"];
"1000945" -> "1000988"  [label="DDG: messageData->H1"];
"1000945" -> "1001153"  [label="DDG: messageData->H1"];
"1000200" -> "1000197"  [label="AST: "];
"1000200" -> "1000202"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000202" -> "1000200"  [label="AST: "];
"1000211" -> "1000200"  [label="CFG: "];
"1000200" -> "1001966"  [label="DDG: messageContent"];
"1000200" -> "1001966"  [label="DDG: (uint8_t *)(input+ZRTP_PACKET_HEADER_LENGTH+ZRTP_MESSAGE_HEADER_LENGTH)"];
"1000202" -> "1000200"  [label="DDG: input+ZRTP_PACKET_HEADER_LENGTH+ZRTP_MESSAGE_HEADER_LENGTH"];
"1000200" -> "1000224"  [label="DDG: messageContent"];
"1000200" -> "1000624"  [label="DDG: messageContent"];
"1000200" -> "1000812"  [label="DDG: messageContent"];
"1000200" -> "1001379"  [label="DDG: messageContent"];
"1000200" -> "1001941"  [label="DDG: messageContent"];
"1000202" -> "1000204"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000202" -> "1001966"  [label="DDG: input+ZRTP_PACKET_HEADER_LENGTH+ZRTP_MESSAGE_HEADER_LENGTH"];
"1000194" -> "1000202"  [label="DDG: input"];
"1000194" -> "1000191"  [label="AST: "];
"1000194" -> "1001966"  [label="DDG: input"];
"1000194" -> "1000204"  [label="DDG: input"];
"1000194" -> "1000588"  [label="DDG: input"];
"1000194" -> "1000891"  [label="DDG: input"];
"1000194" -> "1001078"  [label="DDG: input"];
"1000194" -> "1001080"  [label="DDG: input"];
"1000194" -> "1001285"  [label="DDG: input"];
"1000194" -> "1001915"  [label="DDG: input"];
"1000951" -> "1000900"  [label="AST: "];
"1000951" -> "1000953"  [label="CFG: "];
"1000952" -> "1000951"  [label="AST: "];
"1000953" -> "1000951"  [label="AST: "];
"1000957" -> "1000951"  [label="CFG: "];
"1000951" -> "1001966"  [label="DDG: messageContent"];
"1000951" -> "1001216"  [label="DDG: messageContent"];
"1001216" -> "1000900"  [label="AST: "];
"1001216" -> "1001221"  [label="CFG: "];
"1001217" -> "1001216"  [label="AST: "];
"1001220" -> "1001216"  [label="AST: "];
"1001221" -> "1001216"  [label="AST: "];
"1001223" -> "1001216"  [label="CFG: "];
"1001216" -> "1001966"  [label="DDG: memcpy(messageData->rs1ID, messageContent, 8)"];
"1001216" -> "1001966"  [label="DDG: messageData->rs1ID"];
"1001216" -> "1001222"  [label="DDG: messageContent"];
"1001222" -> "1000900"  [label="AST: "];
"1001222" -> "1001224"  [label="CFG: "];
"1001223" -> "1001222"  [label="AST: "];
"1001224" -> "1001222"  [label="AST: "];
"1001227" -> "1001222"  [label="CFG: "];
"1001222" -> "1001225"  [label="DDG: messageContent"];
"1001225" -> "1000900"  [label="AST: "];
"1001225" -> "1001230"  [label="CFG: "];
"1001226" -> "1001225"  [label="AST: "];
"1001229" -> "1001225"  [label="AST: "];
"1001230" -> "1001225"  [label="AST: "];
"1001232" -> "1001225"  [label="CFG: "];
"1001225" -> "1001966"  [label="DDG: memcpy(messageData->rs2ID, messageContent, 8)"];
"1001225" -> "1001966"  [label="DDG: messageData->rs2ID"];
"1001225" -> "1001231"  [label="DDG: messageContent"];
"1001231" -> "1000900"  [label="AST: "];
"1001231" -> "1001233"  [label="CFG: "];
"1001232" -> "1001231"  [label="AST: "];
"1001233" -> "1001231"  [label="AST: "];
"1001236" -> "1001231"  [label="CFG: "];
"1001231" -> "1001234"  [label="DDG: messageContent"];
"1001234" -> "1000900"  [label="AST: "];
"1001234" -> "1001239"  [label="CFG: "];
"1001235" -> "1001234"  [label="AST: "];
"1001238" -> "1001234"  [label="AST: "];
"1001239" -> "1001234"  [label="AST: "];
"1001241" -> "1001234"  [label="CFG: "];
"1001234" -> "1001966"  [label="DDG: messageData->auxsecretID"];
"1001234" -> "1001966"  [label="DDG: memcpy(messageData->auxsecretID, messageContent, 8)"];
"1001234" -> "1001240"  [label="DDG: messageContent"];
"1001240" -> "1000900"  [label="AST: "];
"1001240" -> "1001242"  [label="CFG: "];
"1001241" -> "1001240"  [label="AST: "];
"1001242" -> "1001240"  [label="AST: "];
"1001245" -> "1001240"  [label="CFG: "];
"1001240" -> "1001243"  [label="DDG: messageContent"];
"1001243" -> "1000900"  [label="AST: "];
"1001243" -> "1001248"  [label="CFG: "];
"1001244" -> "1001243"  [label="AST: "];
"1001247" -> "1001243"  [label="AST: "];
"1001248" -> "1001243"  [label="AST: "];
"1001250" -> "1001243"  [label="CFG: "];
"1001243" -> "1001966"  [label="DDG: memcpy(messageData->pbxsecretID, messageContent, 8)"];
"1001243" -> "1001966"  [label="DDG: messageData->pbxsecretID"];
"1001243" -> "1001249"  [label="DDG: messageContent"];
"1001249" -> "1000900"  [label="AST: "];
"1001249" -> "1001251"  [label="CFG: "];
"1001250" -> "1001249"  [label="AST: "];
"1001251" -> "1001249"  [label="AST: "];
"1001254" -> "1001249"  [label="CFG: "];
"1001249" -> "1001252"  [label="DDG: messageContent"];
"1001252" -> "1000900"  [label="AST: "];
"1001252" -> "1001257"  [label="CFG: "];
"1001253" -> "1001252"  [label="AST: "];
"1001256" -> "1001252"  [label="AST: "];
"1001257" -> "1001252"  [label="AST: "];
"1001259" -> "1001252"  [label="CFG: "];
"1001252" -> "1001966"  [label="DDG: messageData->pv"];
"1001252" -> "1001966"  [label="DDG: memcpy(messageData->pv, messageContent, pvLength)"];
"1000934" -> "1001252"  [label="DDG: messageData->pv"];
"1000941" -> "1001252"  [label="DDG: pvLength"];
"1001252" -> "1001258"  [label="DDG: pvLength"];
"1001252" -> "1001258"  [label="DDG: messageContent"];
"1001258" -> "1000900"  [label="AST: "];
"1001258" -> "1001260"  [label="CFG: "];
"1001259" -> "1001258"  [label="AST: "];
"1001260" -> "1001258"  [label="AST: "];
"1001263" -> "1001258"  [label="CFG: "];
"1001258" -> "1001966"  [label="DDG: pvLength"];
"1001258" -> "1001261"  [label="DDG: messageContent"];
"1001261" -> "1000900"  [label="AST: "];
"1001261" -> "1001266"  [label="CFG: "];
"1001262" -> "1001261"  [label="AST: "];
"1001265" -> "1001261"  [label="AST: "];
"1001266" -> "1001261"  [label="AST: "];
"1001269" -> "1001261"  [label="CFG: "];
"1001261" -> "1001966"  [label="DDG: messageContent"];
"1001261" -> "1001966"  [label="DDG: messageData->MAC"];
"1001261" -> "1001966"  [label="DDG: memcpy(messageData->MAC, messageContent, 8)"];
"1000988" -> "1000960"  [label="AST: "];
"1000988" -> "1000994"  [label="CFG: "];
"1000989" -> "1000988"  [label="AST: "];
"1000992" -> "1000988"  [label="AST: "];
"1000993" -> "1000988"  [label="AST: "];
"1000994" -> "1000988"  [label="AST: "];
"1000998" -> "1000988"  [label="CFG: "];
"1000988" -> "1001966"  [label="DDG: bctoolbox_sha256(messageData->H1, 32, 32, checkH2)"];
"1000988" -> "1001966"  [label="DDG: messageData->H1"];
"1000988" -> "1000997"  [label="DDG: checkH2"];
"1000988" -> "1001009"  [label="DDG: messageData->H1"];
"1000997" -> "1000996"  [label="AST: "];
"1000997" -> "1001002"  [label="CFG: "];
"1000998" -> "1000997"  [label="AST: "];
"1000999" -> "1000997"  [label="AST: "];
"1001002" -> "1000997"  [label="AST: "];
"1001003" -> "1000997"  [label="CFG: "];
"1000997" -> "1001966"  [label="DDG: checkH2"];
"1000997" -> "1001966"  [label="DDG: peerCommitMessageData->H2"];
"1000997" -> "1000996"  [label="DDG: checkH2"];
"1000997" -> "1000996"  [label="DDG: peerCommitMessageData->H2"];
"1000997" -> "1000996"  [label="DDG: 32"];
"1000996" -> "1000995"  [label="AST: "];
"1000996" -> "1001003"  [label="CFG: "];
"1001003" -> "1000996"  [label="AST: "];
"1001006" -> "1000996"  [label="CFG: "];
"1001011" -> "1000996"  [label="CFG: "];
"1000996" -> "1001966"  [label="DDG: memcmp(checkH2, peerCommitMessageData->H2, 32) != 0"];
"1000996" -> "1001966"  [label="DDG: memcmp(checkH2, peerCommitMessageData->H2, 32)"];
"1001009" -> "1000960"  [label="AST: "];
"1001009" -> "1001033"  [label="CFG: "];
"1001010" -> "1001009"  [label="AST: "];
"1001013" -> "1001009"  [label="AST: "];
"1001014" -> "1001009"  [label="AST: "];
"1001023" -> "1001009"  [label="AST: "];
"1001032" -> "1001009"  [label="AST: "];
"1001033" -> "1001009"  [label="AST: "];
"1001037" -> "1001009"  [label="CFG: "];
"1001009" -> "1001966"  [label="DDG: bctoolbox_hmacSha256(messageData->H1, 32, zrtpChannelContext->peerPackets[COMMIT_MESSAGE_STORE_ID]->packetString+ZRTP_PACKET_HEADER_LENGTH, zrtpChannelContext->peerPackets[COMMIT_MESSAGE_STORE_ID]->messageLength-8, 8, checkMAC)"];
"1001009" -> "1001966"  [label="DDG: zrtpChannelContext->peerPackets[COMMIT_MESSAGE_STORE_ID]->packetString+ZRTP_PACKET_HEADER_LENGTH"];
"1001009" -> "1001966"  [label="DDG: zrtpChannelContext->peerPackets[COMMIT_MESSAGE_STORE_ID]->messageLength-8"];
"1001009" -> "1001966"  [label="DDG: messageData->H1"];
"1001023" -> "1001009"  [label="DDG: zrtpChannelContext->peerPackets[COMMIT_MESSAGE_STORE_ID]->messageLength"];
"1001023" -> "1001009"  [label="DDG: 8"];
"1001009" -> "1001036"  [label="DDG: checkMAC"];
"1001036" -> "1001035"  [label="AST: "];
"1001036" -> "1001041"  [label="CFG: "];
"1001037" -> "1001036"  [label="AST: "];
"1001038" -> "1001036"  [label="AST: "];
"1001041" -> "1001036"  [label="AST: "];
"1001042" -> "1001036"  [label="CFG: "];
"1001036" -> "1001966"  [label="DDG: peerCommitMessageData->MAC"];
"1001036" -> "1001966"  [label="DDG: checkMAC"];
"1001036" -> "1001035"  [label="DDG: checkMAC"];
"1001036" -> "1001035"  [label="DDG: peerCommitMessageData->MAC"];
"1001036" -> "1001035"  [label="DDG: 8"];
"1001035" -> "1001034"  [label="AST: "];
"1001035" -> "1001042"  [label="CFG: "];
"1001042" -> "1001035"  [label="AST: "];
"1001045" -> "1001035"  [label="CFG: "];
"1001052" -> "1001035"  [label="CFG: "];
"1001035" -> "1001966"  [label="DDG: memcmp(checkMAC, peerCommitMessageData->MAC, 8)"];
"1001035" -> "1001966"  [label="DDG: memcmp(checkMAC, peerCommitMessageData->MAC, 8) != 0"];
"1001153" -> "1001124"  [label="AST: "];
"1001153" -> "1001159"  [label="CFG: "];
"1001154" -> "1001153"  [label="AST: "];
"1001157" -> "1001153"  [label="AST: "];
"1001158" -> "1001153"  [label="AST: "];
"1001159" -> "1001153"  [label="AST: "];
"1001161" -> "1001153"  [label="CFG: "];
"1001153" -> "1001966"  [label="DDG: messageData->H1"];
"1001153" -> "1001966"  [label="DDG: bctoolbox_sha256(messageData->H1, 32, 32, checkH2)"];
"1001153" -> "1001160"  [label="DDG: checkH2"];
"1001160" -> "1001124"  [label="AST: "];
"1001160" -> "1001164"  [label="CFG: "];
"1001161" -> "1001160"  [label="AST: "];
"1001162" -> "1001160"  [label="AST: "];
"1001163" -> "1001160"  [label="AST: "];
"1001164" -> "1001160"  [label="AST: "];
"1001168" -> "1001160"  [label="CFG: "];
"1001160" -> "1001966"  [label="DDG: bctoolbox_sha256(checkH2, 32, 32, checkH3)"];
"1001160" -> "1001966"  [label="DDG: checkH2"];
"1001160" -> "1001167"  [label="DDG: checkH3"];
"1001160" -> "1001179"  [label="DDG: checkH2"];
"1001167" -> "1001166"  [label="AST: "];
"1001167" -> "1001172"  [label="CFG: "];
"1001168" -> "1001167"  [label="AST: "];
"1001169" -> "1001167"  [label="AST: "];
"1001172" -> "1001167"  [label="AST: "];
"1001173" -> "1001167"  [label="CFG: "];
"1001167" -> "1001966"  [label="DDG: peerHelloMessageData->H3"];
"1001167" -> "1001966"  [label="DDG: checkH3"];
"1001167" -> "1001166"  [label="DDG: checkH3"];
"1001167" -> "1001166"  [label="DDG: peerHelloMessageData->H3"];
"1001167" -> "1001166"  [label="DDG: 32"];
"1001166" -> "1001165"  [label="AST: "];
"1001166" -> "1001173"  [label="CFG: "];
"1001173" -> "1001166"  [label="AST: "];
"1001176" -> "1001166"  [label="CFG: "];
"1001180" -> "1001166"  [label="CFG: "];
"1001166" -> "1001966"  [label="DDG: memcmp(checkH3, peerHelloMessageData->H3, 32) != 0"];
"1001166" -> "1001966"  [label="DDG: memcmp(checkH3, peerHelloMessageData->H3, 32)"];
"1001179" -> "1001124"  [label="AST: "];
"1001179" -> "1001201"  [label="CFG: "];
"1001180" -> "1001179"  [label="AST: "];
"1001181" -> "1001179"  [label="AST: "];
"1001182" -> "1001179"  [label="AST: "];
"1001191" -> "1001179"  [label="AST: "];
"1001200" -> "1001179"  [label="AST: "];
"1001201" -> "1001179"  [label="AST: "];
"1001205" -> "1001179"  [label="CFG: "];
"1001179" -> "1001966"  [label="DDG: bctoolbox_hmacSha256(checkH2, 32, zrtpChannelContext->peerPackets[HELLO_MESSAGE_STORE_ID]->packetString+ZRTP_PACKET_HEADER_LENGTH, zrtpChannelContext->peerPackets[HELLO_MESSAGE_STORE_ID]->messageLength-8, 8, checkMAC)"];
"1001179" -> "1001966"  [label="DDG: zrtpChannelContext->peerPackets[HELLO_MESSAGE_STORE_ID]->packetString+ZRTP_PACKET_HEADER_LENGTH"];
"1001179" -> "1001966"  [label="DDG: zrtpChannelContext->peerPackets[HELLO_MESSAGE_STORE_ID]->messageLength-8"];
"1001179" -> "1001966"  [label="DDG: checkH2"];
"1001191" -> "1001179"  [label="DDG: zrtpChannelContext->peerPackets[HELLO_MESSAGE_STORE_ID]->messageLength"];
"1001191" -> "1001179"  [label="DDG: 8"];
"1001179" -> "1001204"  [label="DDG: checkMAC"];
"1001204" -> "1001203"  [label="AST: "];
"1001204" -> "1001209"  [label="CFG: "];
"1001205" -> "1001204"  [label="AST: "];
"1001206" -> "1001204"  [label="AST: "];
"1001209" -> "1001204"  [label="AST: "];
"1001210" -> "1001204"  [label="CFG: "];
"1001204" -> "1001966"  [label="DDG: checkMAC"];
"1001204" -> "1001966"  [label="DDG: peerHelloMessageData->MAC"];
"1001204" -> "1001203"  [label="DDG: checkMAC"];
"1001204" -> "1001203"  [label="DDG: peerHelloMessageData->MAC"];
"1001204" -> "1001203"  [label="DDG: 8"];
"1001203" -> "1001202"  [label="AST: "];
"1001203" -> "1001210"  [label="CFG: "];
"1001210" -> "1001203"  [label="AST: "];
"1001213" -> "1001203"  [label="CFG: "];
"1001218" -> "1001203"  [label="CFG: "];
"1001203" -> "1001966"  [label="DDG: memcmp(checkMAC, peerHelloMessageData->MAC, 8)"];
"1001203" -> "1001966"  [label="DDG: memcmp(checkMAC, peerHelloMessageData->MAC, 8) != 0"];
}
