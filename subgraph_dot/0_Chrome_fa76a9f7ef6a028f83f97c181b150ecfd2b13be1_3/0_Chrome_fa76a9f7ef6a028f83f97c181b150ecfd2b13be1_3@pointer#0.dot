digraph "0_Chrome_fa76a9f7ef6a028f83f97c181b150ecfd2b13be1_3@pointer" {
"1000137" [label="(Call,clients_.emplace(client_process, std::move(client_info)))"];
"1000111" [label="(Call,base::BindOnce(&CoordinatorImpl::UnregisterClientProcess,\n                     weak_ptr_factory_.GetWeakPtr(), client_process))"];
"1000107" [label="(Call,* client_process = client_process_ptr.get())"];
"1000139" [label="(Call,std::move(client_info))"];
"1000121" [label="(Call,client_info = std::make_unique<ClientInfo>(\n       std::move(identity), std::move(client_process_ptr), process_type))"];
"1000123" [label="(Call,std::make_unique<ClientInfo>(\n       std::move(identity), std::move(client_process_ptr), process_type))"];
"1000125" [label="(Call,ClientInfo>(\n       std::move(identity), std::move(client_process_ptr), process_type))"];
"1000135" [label="(Call,iterator_and_inserted =\n      clients_.emplace(client_process, std::move(client_info)))"];
"1000141" [label="(Call,DCHECK(iterator_and_inserted.second))"];
"1000123" [label="(Call,std::make_unique<ClientInfo>(\n       std::move(identity), std::move(client_process_ptr), process_type))"];
"1000112" [label="(Call,&CoordinatorImpl::UnregisterClientProcess)"];
"1000127" [label="(Block,)"];
"1000107" [label="(Call,* client_process = client_process_ptr.get())"];
"1000136" [label="(Identifier,iterator_and_inserted)"];
"1000121" [label="(Call,client_info = std::make_unique<ClientInfo>(\n       std::move(identity), std::move(client_process_ptr), process_type))"];
"1000114" [label="(Call,weak_ptr_factory_.GetWeakPtr())"];
"1000126" [label="(Identifier,ClientInfo)"];
"1000124" [label="(Identifier,std::make_unique)"];
"1000138" [label="(Identifier,client_process)"];
"1000125" [label="(Call,ClientInfo>(\n       std::move(identity), std::move(client_process_ptr), process_type))"];
"1000109" [label="(Call,client_process_ptr.get())"];
"1000142" [label="(Call,iterator_and_inserted.second)"];
"1000113" [label="(Identifier,CoordinatorImpl::UnregisterClientProcess)"];
"1000110" [label="(Call,client_process_ptr.set_connection_error_handler(\n       base::BindOnce(&CoordinatorImpl::UnregisterClientProcess,\n                     weak_ptr_factory_.GetWeakPtr(), client_process)))"];
"1000137" [label="(Call,clients_.emplace(client_process, std::move(client_info)))"];
"1000115" [label="(Identifier,client_process)"];
"1000133" [label="(Identifier,process_type)"];
"1000140" [label="(Identifier,client_info)"];
"1000111" [label="(Call,base::BindOnce(&CoordinatorImpl::UnregisterClientProcess,\n                     weak_ptr_factory_.GetWeakPtr(), client_process))"];
"1000135" [label="(Call,iterator_and_inserted =\n      clients_.emplace(client_process, std::move(client_info)))"];
"1000108" [label="(Identifier,client_process)"];
"1000141" [label="(Call,DCHECK(iterator_and_inserted.second))"];
"1000143" [label="(Identifier,iterator_and_inserted)"];
"1000139" [label="(Call,std::move(client_info))"];
"1000122" [label="(Identifier,client_info)"];
"1000145" [label="(MethodReturn,void)"];
"1000103" [label="(Block,)"];
"1000137" -> "1000135"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000137" -> "1000145"  [label="DDG: std::move(client_info)"];
"1000137" -> "1000145"  [label="DDG: client_process"];
"1000137" -> "1000135"  [label="DDG: client_process"];
"1000137" -> "1000135"  [label="DDG: std::move(client_info)"];
"1000111" -> "1000137"  [label="DDG: client_process"];
"1000139" -> "1000137"  [label="DDG: client_info"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000115"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000114" -> "1000111"  [label="AST: "];
"1000115" -> "1000111"  [label="AST: "];
"1000110" -> "1000111"  [label="CFG: "];
"1000111" -> "1000145"  [label="DDG: weak_ptr_factory_.GetWeakPtr()"];
"1000111" -> "1000145"  [label="DDG: &CoordinatorImpl::UnregisterClientProcess"];
"1000111" -> "1000110"  [label="DDG: &CoordinatorImpl::UnregisterClientProcess"];
"1000111" -> "1000110"  [label="DDG: weak_ptr_factory_.GetWeakPtr()"];
"1000111" -> "1000110"  [label="DDG: client_process"];
"1000107" -> "1000111"  [label="DDG: client_process"];
"1000107" -> "1000103"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000113" -> "1000107"  [label="CFG: "];
"1000107" -> "1000145"  [label="DDG: client_process_ptr.get()"];
"1000139" -> "1000140"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000139" -> "1000145"  [label="DDG: client_info"];
"1000121" -> "1000139"  [label="DDG: client_info"];
"1000121" -> "1000103"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000136" -> "1000121"  [label="CFG: "];
"1000121" -> "1000145"  [label="DDG: std::make_unique<ClientInfo>(\n       std::move(identity), std::move(client_process_ptr), process_type)"];
"1000123" -> "1000121"  [label="DDG: std::make_unique"];
"1000123" -> "1000121"  [label="DDG: ClientInfo>(\n       std::move(identity), std::move(client_process_ptr), process_type)"];
"1000123" -> "1000125"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000123" -> "1000145"  [label="DDG: ClientInfo>(\n       std::move(identity), std::move(client_process_ptr), process_type)"];
"1000123" -> "1000145"  [label="DDG: std::make_unique"];
"1000125" -> "1000123"  [label="DDG: ClientInfo"];
"1000125" -> "1000133"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000125" -> "1000145"  [label="DDG: ClientInfo"];
"1000135" -> "1000103"  [label="AST: "];
"1000136" -> "1000135"  [label="AST: "];
"1000143" -> "1000135"  [label="CFG: "];
"1000135" -> "1000145"  [label="DDG: iterator_and_inserted"];
"1000135" -> "1000145"  [label="DDG: clients_.emplace(client_process, std::move(client_info))"];
"1000135" -> "1000141"  [label="DDG: iterator_and_inserted"];
"1000141" -> "1000103"  [label="AST: "];
"1000141" -> "1000142"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000145" -> "1000141"  [label="CFG: "];
"1000141" -> "1000145"  [label="DDG: iterator_and_inserted.second"];
"1000141" -> "1000145"  [label="DDG: DCHECK(iterator_and_inserted.second)"];
}
