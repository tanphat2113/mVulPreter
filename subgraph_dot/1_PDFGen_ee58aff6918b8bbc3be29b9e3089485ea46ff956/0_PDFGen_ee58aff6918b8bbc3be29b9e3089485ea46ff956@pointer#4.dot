digraph "0_PDFGen_ee58aff6918b8bbc3be29b9e3089485ea46ff956@pointer" {
"1000201" [label="(Call,data[i] * 256)"];
"1000118" [label="(Call,data[i] == 0xFF)"];
"1000101" [label="(MethodParameterIn,unsigned char* data)"];
"1000198" [label="(Call,block_length = data[i] * 256 + data[i+1])"];
"1000216" [label="(Call,i+=block_length)"];
"1000220" [label="(Call,(i + 1) >= data_size)"];
"1000212" [label="(Call,i<data_size)"];
"1000221" [label="(Call,i + 1)"];
"1000241" [label="(Call,i+1)"];
"1000253" [label="(Call,i+5)"];
"1000259" [label="(Call,i+6)"];
"1000269" [label="(Call,i+7)"];
"1000275" [label="(Call,i+8)"];
"1000280" [label="(Call,i+=2)"];
"1000293" [label="(Call,i+1)"];
"1000200" [label="(Call,data[i] * 256 + data[i+1])"];
"1000229" [label="(Call,data[i] != 0xFF)"];
"1000286" [label="(Call,data[i] * 256)"];
"1000283" [label="(Call,block_length = data[i] * 256 + data[i+1])"];
"1000285" [label="(Call,data[i] * 256 + data[i+1])"];
"1000227" [label="(Literal,1)"];
"1000202" [label="(Call,data[i])"];
"1000295" [label="(Literal,1)"];
"1000287" [label="(Call,data[i])"];
"1000277" [label="(Literal,8)"];
"1000233" [label="(Literal,0xFF)"];
"1000152" [label="(Call,i + 6 < data_size)"];
"1000254" [label="(Identifier,i)"];
"1000269" [label="(Call,i+7)"];
"1000243" [label="(Literal,1)"];
"1000212" [label="(Call,i<data_size)"];
"1000218" [label="(Identifier,block_length)"];
"1000223" [label="(Literal,1)"];
"1000139" [label="(Call,data[i+3] == 0xE0)"];
"1000242" [label="(Identifier,i)"];
"1000262" [label="(Call,*width = data[i+7]*256 + data[i+8])"];
"1000255" [label="(Literal,5)"];
"1000260" [label="(Identifier,i)"];
"1000221" [label="(Call,i + 1)"];
"1000200" [label="(Call,data[i] * 256 + data[i+1])"];
"1000267" [label="(Call,data[i+7])"];
"1000215" [label="(Block,)"];
"1000117" [label="(Call,data[i] == 0xFF && data[i+1] == 0xD8 &&\n            data[i+2] == 0xFF && data[i+3] == 0xE0)"];
"1000251" [label="(Call,data[i+5])"];
"1000281" [label="(Identifier,i)"];
"1000217" [label="(Identifier,i)"];
"1000174" [label="(Call,data[i+4] == 'I')"];
"1000124" [label="(Call,data[i+1] == 0xD8)"];
"1000261" [label="(Literal,6)"];
"1000214" [label="(Identifier,data_size)"];
"1000147" [label="(Call,i += 4)"];
"1000273" [label="(Call,data[i+8])"];
"1000198" [label="(Call,block_length = data[i] * 256 + data[i+1])"];
"1000213" [label="(Identifier,i)"];
"1000122" [label="(Literal,0xFF)"];
"1000224" [label="(Identifier,data_size)"];
"1000241" [label="(Call,i+1)"];
"1000292" [label="(Identifier,data)"];
"1000266" [label="(Call,data[i+7]*256)"];
"1000275" [label="(Call,i+8)"];
"1000270" [label="(Identifier,i)"];
"1000228" [label="(ControlStructure,if(data[i] != 0xFF))"];
"1000284" [label="(Identifier,block_length)"];
"1000286" [label="(Call,data[i] * 256)"];
"1000166" [label="(Call,data[i+3] == 'F')"];
"1000222" [label="(Identifier,i)"];
"1000299" [label="(MethodReturn,static int)"];
"1000259" [label="(Call,i+6)"];
"1000240" [label="(Identifier,data)"];
"1000236" [label="(Literal,1)"];
"1000280" [label="(Call,i+=2)"];
"1000196" [label="(Block,)"];
"1000290" [label="(Literal,256)"];
"1000265" [label="(Call,data[i+7]*256 + data[i+8])"];
"1000283" [label="(Call,block_length = data[i] * 256 + data[i+1])"];
"1000126" [label="(Identifier,data)"];
"1000219" [label="(ControlStructure,if((i + 1) >= data_size))"];
"1000294" [label="(Identifier,i)"];
"1000229" [label="(Call,data[i] != 0xFF)"];
"1000231" [label="(Identifier,data)"];
"1000182" [label="(Call,data[i+5] == 'F')"];
"1000257" [label="(Call,data[i+6])"];
"1000249" [label="(Call,data[i+5]*256 + data[i+6])"];
"1000132" [label="(Call,data[i+2] == 0xFF)"];
"1000298" [label="(Literal,1)"];
"1000271" [label="(Literal,7)"];
"1000246" [label="(Call,*height = data[i+5]*256 + data[i+6])"];
"1000206" [label="(Call,data[i+1])"];
"1000205" [label="(Literal,256)"];
"1000285" [label="(Call,data[i] * 256 + data[i+1])"];
"1000207" [label="(Identifier,data)"];
"1000238" [label="(Call,data[i+1] == 0xC0)"];
"1000250" [label="(Call,data[i+5]*256)"];
"1000102" [label="(MethodParameterIn,unsigned int data_size)"];
"1000201" [label="(Call,data[i] * 256)"];
"1000211" [label="(ControlStructure,while(i<data_size))"];
"1000253" [label="(Call,i+5)"];
"1000291" [label="(Call,data[i+1])"];
"1000101" [label="(MethodParameterIn,unsigned char* data)"];
"1000189" [label="(Call,data[i+6] == 0x00)"];
"1000276" [label="(Identifier,i)"];
"1000118" [label="(Call,data[i] == 0xFF)"];
"1000119" [label="(Call,data[i])"];
"1000282" [label="(Literal,2)"];
"1000216" [label="(Call,i+=block_length)"];
"1000293" [label="(Call,i+1)"];
"1000158" [label="(Call,data[i+2] == 'J')"];
"1000220" [label="(Call,(i + 1) >= data_size)"];
"1000199" [label="(Identifier,block_length)"];
"1000230" [label="(Call,data[i])"];
"1000239" [label="(Call,data[i+1])"];
"1000201" -> "1000200"  [label="AST: "];
"1000201" -> "1000205"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000205" -> "1000201"  [label="AST: "];
"1000207" -> "1000201"  [label="CFG: "];
"1000201" -> "1000299"  [label="DDG: data[i]"];
"1000201" -> "1000198"  [label="DDG: data[i]"];
"1000201" -> "1000198"  [label="DDG: 256"];
"1000201" -> "1000200"  [label="DDG: data[i]"];
"1000201" -> "1000200"  [label="DDG: 256"];
"1000118" -> "1000201"  [label="DDG: data[i]"];
"1000101" -> "1000201"  [label="DDG: data"];
"1000201" -> "1000229"  [label="DDG: data[i]"];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000122"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000122" -> "1000118"  [label="AST: "];
"1000126" -> "1000118"  [label="CFG: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000118" -> "1000299"  [label="DDG: data[i]"];
"1000118" -> "1000117"  [label="DDG: data[i]"];
"1000118" -> "1000117"  [label="DDG: 0xFF"];
"1000101" -> "1000118"  [label="DDG: data"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000299"  [label="DDG: data"];
"1000101" -> "1000124"  [label="DDG: data"];
"1000101" -> "1000132"  [label="DDG: data"];
"1000101" -> "1000139"  [label="DDG: data"];
"1000101" -> "1000158"  [label="DDG: data"];
"1000101" -> "1000166"  [label="DDG: data"];
"1000101" -> "1000174"  [label="DDG: data"];
"1000101" -> "1000182"  [label="DDG: data"];
"1000101" -> "1000189"  [label="DDG: data"];
"1000101" -> "1000198"  [label="DDG: data"];
"1000101" -> "1000200"  [label="DDG: data"];
"1000101" -> "1000229"  [label="DDG: data"];
"1000101" -> "1000238"  [label="DDG: data"];
"1000101" -> "1000246"  [label="DDG: data"];
"1000101" -> "1000250"  [label="DDG: data"];
"1000101" -> "1000249"  [label="DDG: data"];
"1000101" -> "1000262"  [label="DDG: data"];
"1000101" -> "1000266"  [label="DDG: data"];
"1000101" -> "1000265"  [label="DDG: data"];
"1000101" -> "1000283"  [label="DDG: data"];
"1000101" -> "1000286"  [label="DDG: data"];
"1000101" -> "1000285"  [label="DDG: data"];
"1000198" -> "1000196"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000213" -> "1000198"  [label="CFG: "];
"1000198" -> "1000299"  [label="DDG: data[i] * 256 + data[i+1]"];
"1000198" -> "1000299"  [label="DDG: block_length"];
"1000124" -> "1000198"  [label="DDG: data[i+1]"];
"1000198" -> "1000216"  [label="DDG: block_length"];
"1000216" -> "1000215"  [label="AST: "];
"1000216" -> "1000218"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000218" -> "1000216"  [label="AST: "];
"1000222" -> "1000216"  [label="CFG: "];
"1000216" -> "1000299"  [label="DDG: block_length"];
"1000283" -> "1000216"  [label="DDG: block_length"];
"1000212" -> "1000216"  [label="DDG: i"];
"1000216" -> "1000220"  [label="DDG: i"];
"1000216" -> "1000221"  [label="DDG: i"];
"1000216" -> "1000241"  [label="DDG: i"];
"1000216" -> "1000253"  [label="DDG: i"];
"1000216" -> "1000259"  [label="DDG: i"];
"1000216" -> "1000269"  [label="DDG: i"];
"1000216" -> "1000275"  [label="DDG: i"];
"1000216" -> "1000280"  [label="DDG: i"];
"1000220" -> "1000219"  [label="AST: "];
"1000220" -> "1000224"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000224" -> "1000220"  [label="AST: "];
"1000227" -> "1000220"  [label="CFG: "];
"1000231" -> "1000220"  [label="CFG: "];
"1000220" -> "1000299"  [label="DDG: i + 1"];
"1000220" -> "1000299"  [label="DDG: (i + 1) >= data_size"];
"1000220" -> "1000299"  [label="DDG: data_size"];
"1000220" -> "1000212"  [label="DDG: data_size"];
"1000212" -> "1000220"  [label="DDG: data_size"];
"1000102" -> "1000220"  [label="DDG: data_size"];
"1000212" -> "1000211"  [label="AST: "];
"1000212" -> "1000214"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000214" -> "1000212"  [label="AST: "];
"1000217" -> "1000212"  [label="CFG: "];
"1000298" -> "1000212"  [label="CFG: "];
"1000212" -> "1000299"  [label="DDG: data_size"];
"1000212" -> "1000299"  [label="DDG: i<data_size"];
"1000212" -> "1000299"  [label="DDG: i"];
"1000147" -> "1000212"  [label="DDG: i"];
"1000280" -> "1000212"  [label="DDG: i"];
"1000152" -> "1000212"  [label="DDG: data_size"];
"1000102" -> "1000212"  [label="DDG: data_size"];
"1000221" -> "1000223"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000224" -> "1000221"  [label="CFG: "];
"1000221" -> "1000299"  [label="DDG: i"];
"1000241" -> "1000239"  [label="AST: "];
"1000241" -> "1000243"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="AST: "];
"1000239" -> "1000241"  [label="CFG: "];
"1000253" -> "1000251"  [label="AST: "];
"1000253" -> "1000255"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000255" -> "1000253"  [label="AST: "];
"1000251" -> "1000253"  [label="CFG: "];
"1000259" -> "1000257"  [label="AST: "];
"1000259" -> "1000261"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000259"  [label="AST: "];
"1000257" -> "1000259"  [label="CFG: "];
"1000269" -> "1000267"  [label="AST: "];
"1000269" -> "1000271"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000271" -> "1000269"  [label="AST: "];
"1000267" -> "1000269"  [label="CFG: "];
"1000275" -> "1000273"  [label="AST: "];
"1000275" -> "1000277"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000277" -> "1000275"  [label="AST: "];
"1000273" -> "1000275"  [label="CFG: "];
"1000275" -> "1000299"  [label="DDG: i"];
"1000280" -> "1000215"  [label="AST: "];
"1000280" -> "1000282"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000282" -> "1000280"  [label="AST: "];
"1000284" -> "1000280"  [label="CFG: "];
"1000280" -> "1000293"  [label="DDG: i"];
"1000293" -> "1000291"  [label="AST: "];
"1000293" -> "1000295"  [label="CFG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000295" -> "1000293"  [label="AST: "];
"1000291" -> "1000293"  [label="CFG: "];
"1000200" -> "1000206"  [label="CFG: "];
"1000206" -> "1000200"  [label="AST: "];
"1000200" -> "1000299"  [label="DDG: data[i] * 256"];
"1000200" -> "1000299"  [label="DDG: data[i+1]"];
"1000124" -> "1000200"  [label="DDG: data[i+1]"];
"1000229" -> "1000228"  [label="AST: "];
"1000229" -> "1000233"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000233" -> "1000229"  [label="AST: "];
"1000236" -> "1000229"  [label="CFG: "];
"1000240" -> "1000229"  [label="CFG: "];
"1000229" -> "1000299"  [label="DDG: data[i] != 0xFF"];
"1000229" -> "1000299"  [label="DDG: data[i]"];
"1000286" -> "1000229"  [label="DDG: data[i]"];
"1000229" -> "1000286"  [label="DDG: data[i]"];
"1000286" -> "1000285"  [label="AST: "];
"1000286" -> "1000290"  [label="CFG: "];
"1000287" -> "1000286"  [label="AST: "];
"1000290" -> "1000286"  [label="AST: "];
"1000292" -> "1000286"  [label="CFG: "];
"1000286" -> "1000299"  [label="DDG: data[i]"];
"1000286" -> "1000283"  [label="DDG: data[i]"];
"1000286" -> "1000283"  [label="DDG: 256"];
"1000286" -> "1000285"  [label="DDG: data[i]"];
"1000286" -> "1000285"  [label="DDG: 256"];
"1000283" -> "1000215"  [label="AST: "];
"1000283" -> "1000285"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000285" -> "1000283"  [label="AST: "];
"1000213" -> "1000283"  [label="CFG: "];
"1000283" -> "1000299"  [label="DDG: data[i] * 256 + data[i+1]"];
"1000283" -> "1000299"  [label="DDG: block_length"];
"1000238" -> "1000283"  [label="DDG: data[i+1]"];
"1000285" -> "1000291"  [label="CFG: "];
"1000291" -> "1000285"  [label="AST: "];
"1000285" -> "1000299"  [label="DDG: data[i] * 256"];
"1000285" -> "1000299"  [label="DDG: data[i+1]"];
"1000238" -> "1000285"  [label="DDG: data[i+1]"];
}
