digraph "0_libmspack_2f084136cfe0d05e5bf5703f3e83c6d955234b4d@API" {
"1000369" [label="(Call,sys->read(fh, &buf[0], chmhs0_SIZEOF) != chmhs0_SIZEOF)"];
"1000370" [label="(Call,sys->read(fh, &buf[0], chmhs0_SIZEOF))"];
"1000361" [label="(Call,sys->seek(fh, offset, MSPACK_SYS_SEEK_START))"];
"1000344" [label="(Call,read_off64(&chm->sec0.offset, &buf[chmhst3_OffsetCS0], sys, fh))"];
"1000310" [label="(Call,sys->read(fh, &buf[0], chmhst3_SIZEOF))"];
"1000305" [label="(Call,sys->message(fh, \"WARNING; CHM version > 3\"))"];
"1000233" [label="(Call,sys->read(fh, &buf[0], chmhead_SIZEOF))"];
"1000127" [label="(MethodParameterIn,struct mspack_file *fh)"];
"1000333" [label="(Call,read_off64(&chm->dir_offset,  &buf[chmhst_OffsetHS1],  sys, fh))"];
"1000323" [label="(Call,read_off64(&offset,           &buf[chmhst_OffsetHS0],  sys, fh))"];
"1000126" [label="(MethodParameterIn,struct mspack_system *sys)"];
"1000309" [label="(Call,sys->read(fh, &buf[0], chmhst3_SIZEOF) != chmhst3_SIZEOF)"];
"1000596" [label="(Call,sys->message(fh, \"WARNING; first PMGL chunk is not zero\"))"];
"1000360" [label="(ControlStructure,if (sys->seek(fh, offset, MSPACK_SYS_SEEK_START)))"];
"1000311" [label="(Identifier,fh)"];
"1000333" [label="(Call,read_off64(&chm->dir_offset,  &buf[chmhst_OffsetHS1],  sys, fh))"];
"1000344" [label="(Call,read_off64(&chm->sec0.offset, &buf[chmhst3_OffsetCS0], sys, fh))"];
"1000376" [label="(Identifier,chmhs0_SIZEOF)"];
"1000332" [label="(Call,read_off64(&chm->dir_offset,  &buf[chmhst_OffsetHS1],  sys, fh) ||\n      read_off64(&chm->sec0.offset, &buf[chmhst3_OffsetCS0], sys, fh))"];
"1000495" [label="(Call,chm->sec0.offset = chm->dir_offset + (chm->chunk_size * chm->num_chunks))"];
"1000326" [label="(Call,&buf[chmhst_OffsetHS0])"];
"1000232" [label="(Call,sys->read(fh, &buf[0], chmhead_SIZEOF) != chmhead_SIZEOF)"];
"1000317" [label="(Identifier,chmhst3_SIZEOF)"];
"1000240" [label="(Identifier,chmhead_SIZEOF)"];
"1000690" [label="(Call,sys->read(fh, chunk, (int)chm->chunk_size))"];
"1000322" [label="(Call,read_off64(&offset,           &buf[chmhst_OffsetHS0],  sys, fh) ||\n      read_off64(&chm->dir_offset,  &buf[chmhst_OffsetHS1],  sys, fh) ||\n      read_off64(&chm->sec0.offset, &buf[chmhst3_OffsetCS0], sys, fh))"];
"1000372" [label="(Call,&buf[0])"];
"1000586" [label="(Call,sys->message(fh, \"WARNING; chunk size is not a power of two\"))"];
"1000235" [label="(Call,&buf[0])"];
"1000334" [label="(Call,&chm->dir_offset)"];
"1000348" [label="(Identifier,chm)"];
"1000671" [label="(Call,sys->alloc(sys, (size_t)chm->chunk_size))"];
"1000423" [label="(Call,sys->tell(fh))"];
"1000233" [label="(Call,sys->read(fh, &buf[0], chmhead_SIZEOF))"];
"1000257" [label="(Call,memcmp(&buf[chmhead_GUID1], &guids[0], 32L))"];
"1000368" [label="(ControlStructure,if (sys->read(fh, &buf[0], chmhs0_SIZEOF) != chmhs0_SIZEOF))"];
"1000330" [label="(Identifier,sys)"];
"1000234" [label="(Identifier,fh)"];
"1000356" [label="(Identifier,fh)"];
"1000304" [label="(Block,)"];
"1000342" [label="(Identifier,sys)"];
"1000380" [label="(Identifier,MSPACK_ERR_READ)"];
"1000382" [label="(Call,read_off64(&chm->length, &buf[chmhs0_FileLen], sys, fh))"];
"1000284" [label="(Call,EndGetM32(&buf[chmhead_Timestamp]))"];
"1000408" [label="(Call,sys->read(fh, &buf[0], chmhs1_SIZEOF))"];
"1000355" [label="(Identifier,sys)"];
"1000364" [label="(Identifier,MSPACK_SYS_SEEK_START)"];
"1000306" [label="(Identifier,fh)"];
"1000305" [label="(Call,sys->message(fh, \"WARNING; CHM version > 3\"))"];
"1000338" [label="(Call,&buf[chmhst_OffsetHS1])"];
"1000643" [label="(Call,sys->seek(fh,(off_t) (x * chm->chunk_size), MSPACK_SYS_SEEK_CUR))"];
"1000385" [label="(Identifier,chm)"];
"1000275" [label="(Call,EndGetI32(&buf[chmhead_Version]))"];
"1000126" [label="(MethodParameterIn,struct mspack_system *sys)"];
"1000331" [label="(Identifier,fh)"];
"1000293" [label="(Call,EndGetI32(&buf[chmhead_LanguageID]))"];
"1000127" [label="(MethodParameterIn,struct mspack_file *fh)"];
"1000312" [label="(Call,&buf[0])"];
"1000343" [label="(Identifier,fh)"];
"1000836" [label="(Call,sys->message(fh, \"invalid section number '%u'.\", section))"];
"1000362" [label="(Identifier,fh)"];
"1000324" [label="(Call,&offset)"];
"1000363" [label="(Identifier,offset)"];
"1000307" [label="(Literal,\"WARNING; CHM version > 3\")"];
"1000367" [label="(Identifier,MSPACK_ERR_SEEK)"];
"1000351" [label="(Call,&buf[chmhst3_OffsetCS0])"];
"1000501" [label="(Call,chm->dir_offset + (chm->chunk_size * chm->num_chunks))"];
"1000847" [label="(Call,sys->alloc(sys, sizeof(struct mschmd_file) + name_len + 1))"];
"1000397" [label="(Call,sys->seek(fh, chm->dir_offset, MSPACK_SYS_SEEK_START))"];
"1000377" [label="(Identifier,chmhs0_SIZEOF)"];
"1001059" [label="(MethodReturn,static int)"];
"1000323" [label="(Call,read_off64(&offset,           &buf[chmhst_OffsetHS0],  sys, fh))"];
"1000790" [label="(Call,READ_ENCINT(offset))"];
"1000246" [label="(Call,EndGetI32(&buf[chmhead_Signature]))"];
"1000239" [label="(Identifier,chmhead_SIZEOF)"];
"1000726" [label="(Call,sys->message(fh, \"WARNING; PMGL quickref area is too small\"))"];
"1000513" [label="(Call,chm->sec0.offset > chm->length)"];
"1000744" [label="(Call,sys->message(fh, \"WARNING; PMGL quickref area is too large\"))"];
"1000371" [label="(Identifier,fh)"];
"1000361" [label="(Call,sys->seek(fh, offset, MSPACK_SYS_SEEK_START))"];
"1000310" [label="(Call,sys->read(fh, &buf[0], chmhst3_SIZEOF))"];
"1000316" [label="(Identifier,chmhst3_SIZEOF)"];
"1000345" [label="(Call,&chm->sec0.offset)"];
"1000369" [label="(Call,sys->read(fh, &buf[0], chmhs0_SIZEOF) != chmhs0_SIZEOF)"];
"1000336" [label="(Identifier,chm)"];
"1000370" [label="(Call,sys->read(fh, &buf[0], chmhs0_SIZEOF))"];
"1000369" -> "1000368"  [label="AST: "];
"1000369" -> "1000377"  [label="CFG: "];
"1000370" -> "1000369"  [label="AST: "];
"1000377" -> "1000369"  [label="AST: "];
"1000380" -> "1000369"  [label="CFG: "];
"1000385" -> "1000369"  [label="CFG: "];
"1000369" -> "1001059"  [label="DDG: "];
"1000369" -> "1001059"  [label="DDG: "];
"1000369" -> "1001059"  [label="DDG: "];
"1000370" -> "1000369"  [label="DDG: "];
"1000370" -> "1000369"  [label="DDG: "];
"1000370" -> "1000369"  [label="DDG: "];
"1000370" -> "1000376"  [label="CFG: "];
"1000371" -> "1000370"  [label="AST: "];
"1000372" -> "1000370"  [label="AST: "];
"1000376" -> "1000370"  [label="AST: "];
"1000377" -> "1000370"  [label="CFG: "];
"1000370" -> "1001059"  [label="DDG: "];
"1000370" -> "1001059"  [label="DDG: "];
"1000361" -> "1000370"  [label="DDG: "];
"1000127" -> "1000370"  [label="DDG: "];
"1000310" -> "1000370"  [label="DDG: "];
"1000370" -> "1000382"  [label="DDG: "];
"1000370" -> "1000382"  [label="DDG: "];
"1000370" -> "1000408"  [label="DDG: "];
"1000361" -> "1000360"  [label="AST: "];
"1000361" -> "1000364"  [label="CFG: "];
"1000362" -> "1000361"  [label="AST: "];
"1000363" -> "1000361"  [label="AST: "];
"1000364" -> "1000361"  [label="AST: "];
"1000367" -> "1000361"  [label="CFG: "];
"1000371" -> "1000361"  [label="CFG: "];
"1000361" -> "1001059"  [label="DDG: "];
"1000361" -> "1001059"  [label="DDG: "];
"1000361" -> "1001059"  [label="DDG: "];
"1000361" -> "1001059"  [label="DDG: "];
"1000344" -> "1000361"  [label="DDG: "];
"1000323" -> "1000361"  [label="DDG: "];
"1000333" -> "1000361"  [label="DDG: "];
"1000127" -> "1000361"  [label="DDG: "];
"1000361" -> "1000397"  [label="DDG: "];
"1000361" -> "1000790"  [label="DDG: "];
"1000344" -> "1000332"  [label="AST: "];
"1000344" -> "1000356"  [label="CFG: "];
"1000345" -> "1000344"  [label="AST: "];
"1000351" -> "1000344"  [label="AST: "];
"1000355" -> "1000344"  [label="AST: "];
"1000356" -> "1000344"  [label="AST: "];
"1000332" -> "1000344"  [label="CFG: "];
"1000344" -> "1001059"  [label="DDG: "];
"1000344" -> "1001059"  [label="DDG: "];
"1000344" -> "1001059"  [label="DDG: "];
"1000344" -> "1001059"  [label="DDG: "];
"1000344" -> "1000332"  [label="DDG: "];
"1000344" -> "1000332"  [label="DDG: "];
"1000344" -> "1000332"  [label="DDG: "];
"1000344" -> "1000332"  [label="DDG: "];
"1000310" -> "1000344"  [label="DDG: "];
"1000333" -> "1000344"  [label="DDG: "];
"1000333" -> "1000344"  [label="DDG: "];
"1000126" -> "1000344"  [label="DDG: "];
"1000127" -> "1000344"  [label="DDG: "];
"1000344" -> "1000382"  [label="DDG: "];
"1000344" -> "1000513"  [label="DDG: "];
"1000310" -> "1000309"  [label="AST: "];
"1000310" -> "1000316"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000312" -> "1000310"  [label="AST: "];
"1000316" -> "1000310"  [label="AST: "];
"1000317" -> "1000310"  [label="CFG: "];
"1000310" -> "1001059"  [label="DDG: "];
"1000310" -> "1001059"  [label="DDG: "];
"1000310" -> "1000309"  [label="DDG: "];
"1000310" -> "1000309"  [label="DDG: "];
"1000310" -> "1000309"  [label="DDG: "];
"1000305" -> "1000310"  [label="DDG: "];
"1000233" -> "1000310"  [label="DDG: "];
"1000233" -> "1000310"  [label="DDG: "];
"1000127" -> "1000310"  [label="DDG: "];
"1000310" -> "1000323"  [label="DDG: "];
"1000310" -> "1000323"  [label="DDG: "];
"1000310" -> "1000333"  [label="DDG: "];
"1000305" -> "1000304"  [label="AST: "];
"1000305" -> "1000307"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000307" -> "1000305"  [label="AST: "];
"1000311" -> "1000305"  [label="CFG: "];
"1000305" -> "1001059"  [label="DDG: "];
"1000233" -> "1000305"  [label="DDG: "];
"1000127" -> "1000305"  [label="DDG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000233" -> "1000239"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000235" -> "1000233"  [label="AST: "];
"1000239" -> "1000233"  [label="AST: "];
"1000240" -> "1000233"  [label="CFG: "];
"1000233" -> "1001059"  [label="DDG: "];
"1000233" -> "1001059"  [label="DDG: "];
"1000233" -> "1000232"  [label="DDG: "];
"1000233" -> "1000232"  [label="DDG: "];
"1000233" -> "1000232"  [label="DDG: "];
"1000127" -> "1000233"  [label="DDG: "];
"1000233" -> "1000246"  [label="DDG: "];
"1000233" -> "1000257"  [label="DDG: "];
"1000233" -> "1000275"  [label="DDG: "];
"1000233" -> "1000284"  [label="DDG: "];
"1000233" -> "1000293"  [label="DDG: "];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1001059"  [label="DDG: "];
"1000127" -> "1000323"  [label="DDG: "];
"1000127" -> "1000333"  [label="DDG: "];
"1000127" -> "1000382"  [label="DDG: "];
"1000127" -> "1000397"  [label="DDG: "];
"1000127" -> "1000408"  [label="DDG: "];
"1000127" -> "1000423"  [label="DDG: "];
"1000127" -> "1000586"  [label="DDG: "];
"1000127" -> "1000596"  [label="DDG: "];
"1000127" -> "1000643"  [label="DDG: "];
"1000127" -> "1000690"  [label="DDG: "];
"1000127" -> "1000726"  [label="DDG: "];
"1000127" -> "1000744"  [label="DDG: "];
"1000127" -> "1000836"  [label="DDG: "];
"1000333" -> "1000332"  [label="AST: "];
"1000333" -> "1000343"  [label="CFG: "];
"1000334" -> "1000333"  [label="AST: "];
"1000338" -> "1000333"  [label="AST: "];
"1000342" -> "1000333"  [label="AST: "];
"1000343" -> "1000333"  [label="AST: "];
"1000348" -> "1000333"  [label="CFG: "];
"1000332" -> "1000333"  [label="CFG: "];
"1000333" -> "1001059"  [label="DDG: "];
"1000333" -> "1001059"  [label="DDG: "];
"1000333" -> "1001059"  [label="DDG: "];
"1000333" -> "1001059"  [label="DDG: "];
"1000333" -> "1000332"  [label="DDG: "];
"1000333" -> "1000332"  [label="DDG: "];
"1000333" -> "1000332"  [label="DDG: "];
"1000333" -> "1000332"  [label="DDG: "];
"1000323" -> "1000333"  [label="DDG: "];
"1000323" -> "1000333"  [label="DDG: "];
"1000126" -> "1000333"  [label="DDG: "];
"1000333" -> "1000382"  [label="DDG: "];
"1000333" -> "1000397"  [label="DDG: "];
"1000333" -> "1000495"  [label="DDG: "];
"1000333" -> "1000501"  [label="DDG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000323" -> "1000331"  [label="CFG: "];
"1000324" -> "1000323"  [label="AST: "];
"1000326" -> "1000323"  [label="AST: "];
"1000330" -> "1000323"  [label="AST: "];
"1000331" -> "1000323"  [label="AST: "];
"1000336" -> "1000323"  [label="CFG: "];
"1000322" -> "1000323"  [label="CFG: "];
"1000323" -> "1001059"  [label="DDG: "];
"1000323" -> "1001059"  [label="DDG: "];
"1000323" -> "1001059"  [label="DDG: "];
"1000323" -> "1001059"  [label="DDG: "];
"1000323" -> "1000322"  [label="DDG: "];
"1000323" -> "1000322"  [label="DDG: "];
"1000323" -> "1000322"  [label="DDG: "];
"1000323" -> "1000322"  [label="DDG: "];
"1000126" -> "1000323"  [label="DDG: "];
"1000323" -> "1000382"  [label="DDG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1001059"  [label="DDG: "];
"1000126" -> "1000382"  [label="DDG: "];
"1000126" -> "1000671"  [label="DDG: "];
"1000126" -> "1000847"  [label="DDG: "];
}
