digraph "0_php_4435b9142ff9813845d5c97ab29a5d637bedb257_1@integer" {
"1000252" [label="(Call,body_size = font->w * font->h * font->nchars)"];
"1000254" [label="(Call,font->w * font->h * font->nchars)"];
"1000228" [label="(Call,font->w = FLIPWORD(font->w))"];
"1000232" [label="(Call,FLIPWORD(font->w))"];
"1000212" [label="(Call,font->w * font->h * font->nchars)"];
"1000216" [label="(Call,font->h * font->nchars)"];
"1000258" [label="(Call,font->h * font->nchars)"];
"1000236" [label="(Call,font->h = FLIPWORD(font->h))"];
"1000240" [label="(Call,FLIPWORD(font->h))"];
"1000244" [label="(Call,font->nchars = FLIPWORD(font->nchars))"];
"1000248" [label="(Call,FLIPWORD(font->nchars))"];
"1000298" [label="(Call,body_size != body_size_check)"];
"1000311" [label="(Call,emalloc(body_size))"];
"1000307" [label="(Call,font->data = emalloc(body_size))"];
"1000323" [label="(Call,php_stream_read(stream, &font->data[b], body_size - b))"];
"1000317" [label="(Call,b < body_size && (n = php_stream_read(stream, &font->data[b], body_size - b)))"];
"1000321" [label="(Call,n = php_stream_read(stream, &font->data[b], body_size - b))"];
"1000335" [label="(Call,b += n)"];
"1000318" [label="(Call,b < body_size)"];
"1000331" [label="(Call,body_size - b)"];
"1000339" [label="(Call,!n)"];
"1000349" [label="(Call,php_stream_eof(stream))"];
"1000354" [label="(Call,php_stream_close(stream))"];
"1000357" [label="(Call,php_stream_close(stream))"];
"1000342" [label="(Call,efree(font->data))"];
"1000249" [label="(Call,font->nchars)"];
"1000357" [label="(Call,php_stream_close(stream))"];
"1000245" [label="(Call,font->nchars)"];
"1000320" [label="(Identifier,body_size)"];
"1000303" [label="(Identifier,font)"];
"1000213" [label="(Call,font->w)"];
"1000280" [label="(Call,overflow2(font->nchars * font->h, font->w ))"];
"1000360" [label="(Identifier,ind)"];
"1000232" [label="(Call,FLIPWORD(font->w))"];
"1000266" [label="(Call,overflow2(font->nchars, font->h))"];
"1000297" [label="(ControlStructure,if (body_size != body_size_check))"];
"1000229" [label="(Call,font->w)"];
"1000254" [label="(Call,font->w * font->h * font->nchars)"];
"1000304" [label="(Call,php_stream_close(stream))"];
"1000312" [label="(Identifier,body_size)"];
"1000349" [label="(Call,php_stream_eof(stream))"];
"1000344" [label="(Identifier,font)"];
"1000212" [label="(Call,font->w * font->h * font->nchars)"];
"1000356" [label="(Identifier,RETURN_FALSE)"];
"1000228" [label="(Call,font->w = FLIPWORD(font->w))"];
"1000361" [label="(MethodReturn,RET)"];
"1000300" [label="(Identifier,body_size_check)"];
"1000104" [label="(Block,)"];
"1000340" [label="(Identifier,n)"];
"1000294" [label="(Call,php_stream_close(stream))"];
"1000339" [label="(Call,!n)"];
"1000236" [label="(Call,font->h = FLIPWORD(font->h))"];
"1000309" [label="(Identifier,font)"];
"1000299" [label="(Identifier,body_size)"];
"1000318" [label="(Call,b < body_size)"];
"1000323" [label="(Call,php_stream_read(stream, &font->data[b], body_size - b))"];
"1000350" [label="(Identifier,stream)"];
"1000307" [label="(Call,font->data = emalloc(body_size))"];
"1000233" [label="(Call,font->w)"];
"1000343" [label="(Call,font->data)"];
"1000313" [label="(Call,b = 0)"];
"1000259" [label="(Call,font->h)"];
"1000244" [label="(Call,font->nchars = FLIPWORD(font->nchars))"];
"1000332" [label="(Identifier,body_size)"];
"1000237" [label="(Call,font->h)"];
"1000298" [label="(Call,body_size != body_size_check)"];
"1000333" [label="(Identifier,b)"];
"1000342" [label="(Call,efree(font->data))"];
"1000268" [label="(Identifier,font)"];
"1000217" [label="(Call,font->h)"];
"1000240" [label="(Call,FLIPWORD(font->h))"];
"1000224" [label="(Call,body_size != body_size_check)"];
"1000324" [label="(Identifier,stream)"];
"1000354" [label="(Call,php_stream_close(stream))"];
"1000311" [label="(Call,emalloc(body_size))"];
"1000317" [label="(Call,b < body_size && (n = php_stream_read(stream, &font->data[b], body_size - b)))"];
"1000358" [label="(Identifier,stream)"];
"1000314" [label="(Identifier,b)"];
"1000338" [label="(ControlStructure,if (!n))"];
"1000348" [label="(ControlStructure,if (php_stream_eof(stream)))"];
"1000322" [label="(Identifier,n)"];
"1000206" [label="(Call,php_stream_seek(stream, i, SEEK_SET))"];
"1000220" [label="(Call,font->nchars)"];
"1000325" [label="(Call,&font->data[b])"];
"1000253" [label="(Identifier,body_size)"];
"1000248" [label="(Call,FLIPWORD(font->nchars))"];
"1000246" [label="(Identifier,font)"];
"1000331" [label="(Call,body_size - b)"];
"1000216" [label="(Call,font->h * font->nchars)"];
"1000334" [label="(Block,)"];
"1000262" [label="(Call,font->nchars)"];
"1000210" [label="(Call,body_size = font->w * font->h * font->nchars)"];
"1000258" [label="(Call,font->h * font->nchars)"];
"1000178" [label="(Call,!n)"];
"1000341" [label="(Block,)"];
"1000241" [label="(Call,font->h)"];
"1000238" [label="(Identifier,font)"];
"1000347" [label="(Identifier,font)"];
"1000227" [label="(Block,)"];
"1000308" [label="(Call,font->data)"];
"1000335" [label="(Call,b += n)"];
"1000337" [label="(Identifier,n)"];
"1000355" [label="(Identifier,stream)"];
"1000316" [label="(ControlStructure,while (b < body_size && (n = php_stream_read(stream, &font->data[b], body_size - b))))"];
"1000321" [label="(Call,n = php_stream_read(stream, &font->data[b], body_size - b))"];
"1000319" [label="(Identifier,b)"];
"1000252" [label="(Call,body_size = font->w * font->h * font->nchars)"];
"1000336" [label="(Identifier,b)"];
"1000276" [label="(Call,php_stream_close(stream))"];
"1000255" [label="(Call,font->w)"];
"1000252" -> "1000227"  [label="AST: "];
"1000252" -> "1000254"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000254" -> "1000252"  [label="AST: "];
"1000268" -> "1000252"  [label="CFG: "];
"1000252" -> "1000361"  [label="DDG: font->w * font->h * font->nchars"];
"1000254" -> "1000252"  [label="DDG: font->w"];
"1000254" -> "1000252"  [label="DDG: font->h * font->nchars"];
"1000252" -> "1000298"  [label="DDG: body_size"];
"1000254" -> "1000258"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000258" -> "1000254"  [label="AST: "];
"1000254" -> "1000361"  [label="DDG: font->h * font->nchars"];
"1000228" -> "1000254"  [label="DDG: font->w"];
"1000258" -> "1000254"  [label="DDG: font->h"];
"1000258" -> "1000254"  [label="DDG: font->nchars"];
"1000254" -> "1000280"  [label="DDG: font->w"];
"1000228" -> "1000227"  [label="AST: "];
"1000228" -> "1000232"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000232" -> "1000228"  [label="AST: "];
"1000238" -> "1000228"  [label="CFG: "];
"1000228" -> "1000361"  [label="DDG: FLIPWORD(font->w)"];
"1000232" -> "1000228"  [label="DDG: font->w"];
"1000232" -> "1000233"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000212" -> "1000232"  [label="DDG: font->w"];
"1000212" -> "1000210"  [label="AST: "];
"1000212" -> "1000216"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000216" -> "1000212"  [label="AST: "];
"1000210" -> "1000212"  [label="CFG: "];
"1000212" -> "1000361"  [label="DDG: font->h * font->nchars"];
"1000212" -> "1000210"  [label="DDG: font->w"];
"1000212" -> "1000210"  [label="DDG: font->h * font->nchars"];
"1000216" -> "1000212"  [label="DDG: font->h"];
"1000216" -> "1000212"  [label="DDG: font->nchars"];
"1000212" -> "1000280"  [label="DDG: font->w"];
"1000216" -> "1000220"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000220" -> "1000216"  [label="AST: "];
"1000216" -> "1000240"  [label="DDG: font->h"];
"1000216" -> "1000248"  [label="DDG: font->nchars"];
"1000216" -> "1000266"  [label="DDG: font->nchars"];
"1000216" -> "1000266"  [label="DDG: font->h"];
"1000258" -> "1000262"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000262" -> "1000258"  [label="AST: "];
"1000236" -> "1000258"  [label="DDG: font->h"];
"1000244" -> "1000258"  [label="DDG: font->nchars"];
"1000258" -> "1000266"  [label="DDG: font->nchars"];
"1000258" -> "1000266"  [label="DDG: font->h"];
"1000236" -> "1000227"  [label="AST: "];
"1000236" -> "1000240"  [label="CFG: "];
"1000237" -> "1000236"  [label="AST: "];
"1000240" -> "1000236"  [label="AST: "];
"1000246" -> "1000236"  [label="CFG: "];
"1000236" -> "1000361"  [label="DDG: FLIPWORD(font->h)"];
"1000240" -> "1000236"  [label="DDG: font->h"];
"1000240" -> "1000241"  [label="CFG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000244" -> "1000227"  [label="AST: "];
"1000244" -> "1000248"  [label="CFG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000248" -> "1000244"  [label="AST: "];
"1000253" -> "1000244"  [label="CFG: "];
"1000244" -> "1000361"  [label="DDG: FLIPWORD(font->nchars)"];
"1000248" -> "1000244"  [label="DDG: font->nchars"];
"1000248" -> "1000249"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000298" -> "1000297"  [label="AST: "];
"1000298" -> "1000300"  [label="CFG: "];
"1000299" -> "1000298"  [label="AST: "];
"1000300" -> "1000298"  [label="AST: "];
"1000303" -> "1000298"  [label="CFG: "];
"1000309" -> "1000298"  [label="CFG: "];
"1000298" -> "1000361"  [label="DDG: body_size != body_size_check"];
"1000298" -> "1000361"  [label="DDG: body_size_check"];
"1000224" -> "1000298"  [label="DDG: body_size"];
"1000224" -> "1000298"  [label="DDG: body_size_check"];
"1000298" -> "1000311"  [label="DDG: body_size"];
"1000311" -> "1000307"  [label="AST: "];
"1000311" -> "1000312"  [label="CFG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000307" -> "1000311"  [label="CFG: "];
"1000311" -> "1000307"  [label="DDG: body_size"];
"1000311" -> "1000318"  [label="DDG: body_size"];
"1000307" -> "1000104"  [label="AST: "];
"1000308" -> "1000307"  [label="AST: "];
"1000314" -> "1000307"  [label="CFG: "];
"1000307" -> "1000361"  [label="DDG: emalloc(body_size)"];
"1000307" -> "1000361"  [label="DDG: font->data"];
"1000307" -> "1000323"  [label="DDG: font->data"];
"1000307" -> "1000342"  [label="DDG: font->data"];
"1000323" -> "1000321"  [label="AST: "];
"1000323" -> "1000331"  [label="CFG: "];
"1000324" -> "1000323"  [label="AST: "];
"1000325" -> "1000323"  [label="AST: "];
"1000331" -> "1000323"  [label="AST: "];
"1000321" -> "1000323"  [label="CFG: "];
"1000323" -> "1000361"  [label="DDG: body_size - b"];
"1000323" -> "1000361"  [label="DDG: &font->data[b]"];
"1000323" -> "1000317"  [label="DDG: stream"];
"1000323" -> "1000317"  [label="DDG: &font->data[b]"];
"1000323" -> "1000317"  [label="DDG: body_size - b"];
"1000323" -> "1000321"  [label="DDG: stream"];
"1000323" -> "1000321"  [label="DDG: &font->data[b]"];
"1000323" -> "1000321"  [label="DDG: body_size - b"];
"1000304" -> "1000323"  [label="DDG: stream"];
"1000206" -> "1000323"  [label="DDG: stream"];
"1000276" -> "1000323"  [label="DDG: stream"];
"1000294" -> "1000323"  [label="DDG: stream"];
"1000331" -> "1000323"  [label="DDG: body_size"];
"1000331" -> "1000323"  [label="DDG: b"];
"1000323" -> "1000349"  [label="DDG: stream"];
"1000323" -> "1000357"  [label="DDG: stream"];
"1000317" -> "1000316"  [label="AST: "];
"1000317" -> "1000318"  [label="CFG: "];
"1000317" -> "1000321"  [label="CFG: "];
"1000318" -> "1000317"  [label="AST: "];
"1000321" -> "1000317"  [label="AST: "];
"1000336" -> "1000317"  [label="CFG: "];
"1000340" -> "1000317"  [label="CFG: "];
"1000317" -> "1000361"  [label="DDG: b < body_size"];
"1000317" -> "1000361"  [label="DDG: b < body_size && (n = php_stream_read(stream, &font->data[b], body_size - b))"];
"1000318" -> "1000317"  [label="DDG: b"];
"1000318" -> "1000317"  [label="DDG: body_size"];
"1000321" -> "1000317"  [label="DDG: n"];
"1000322" -> "1000321"  [label="AST: "];
"1000321" -> "1000361"  [label="DDG: php_stream_read(stream, &font->data[b], body_size - b)"];
"1000321" -> "1000335"  [label="DDG: n"];
"1000321" -> "1000339"  [label="DDG: n"];
"1000335" -> "1000334"  [label="AST: "];
"1000335" -> "1000337"  [label="CFG: "];
"1000336" -> "1000335"  [label="AST: "];
"1000337" -> "1000335"  [label="AST: "];
"1000319" -> "1000335"  [label="CFG: "];
"1000335" -> "1000318"  [label="DDG: b"];
"1000178" -> "1000335"  [label="DDG: n"];
"1000331" -> "1000335"  [label="DDG: b"];
"1000318" -> "1000335"  [label="DDG: b"];
"1000318" -> "1000320"  [label="CFG: "];
"1000319" -> "1000318"  [label="AST: "];
"1000320" -> "1000318"  [label="AST: "];
"1000322" -> "1000318"  [label="CFG: "];
"1000318" -> "1000361"  [label="DDG: b"];
"1000318" -> "1000361"  [label="DDG: body_size"];
"1000313" -> "1000318"  [label="DDG: b"];
"1000331" -> "1000318"  [label="DDG: body_size"];
"1000318" -> "1000331"  [label="DDG: body_size"];
"1000318" -> "1000331"  [label="DDG: b"];
"1000331" -> "1000333"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000333" -> "1000331"  [label="AST: "];
"1000331" -> "1000361"  [label="DDG: b"];
"1000331" -> "1000361"  [label="DDG: body_size"];
"1000339" -> "1000338"  [label="AST: "];
"1000339" -> "1000340"  [label="CFG: "];
"1000340" -> "1000339"  [label="AST: "];
"1000344" -> "1000339"  [label="CFG: "];
"1000358" -> "1000339"  [label="CFG: "];
"1000339" -> "1000361"  [label="DDG: !n"];
"1000339" -> "1000361"  [label="DDG: n"];
"1000178" -> "1000339"  [label="DDG: n"];
"1000349" -> "1000348"  [label="AST: "];
"1000349" -> "1000350"  [label="CFG: "];
"1000350" -> "1000349"  [label="AST: "];
"1000355" -> "1000349"  [label="CFG: "];
"1000349" -> "1000361"  [label="DDG: php_stream_eof(stream)"];
"1000304" -> "1000349"  [label="DDG: stream"];
"1000206" -> "1000349"  [label="DDG: stream"];
"1000276" -> "1000349"  [label="DDG: stream"];
"1000294" -> "1000349"  [label="DDG: stream"];
"1000349" -> "1000354"  [label="DDG: stream"];
"1000354" -> "1000341"  [label="AST: "];
"1000354" -> "1000355"  [label="CFG: "];
"1000355" -> "1000354"  [label="AST: "];
"1000356" -> "1000354"  [label="CFG: "];
"1000354" -> "1000357"  [label="DDG: stream"];
"1000357" -> "1000104"  [label="AST: "];
"1000357" -> "1000358"  [label="CFG: "];
"1000358" -> "1000357"  [label="AST: "];
"1000360" -> "1000357"  [label="CFG: "];
"1000357" -> "1000361"  [label="DDG: php_stream_close(stream)"];
"1000357" -> "1000361"  [label="DDG: stream"];
"1000304" -> "1000357"  [label="DDG: stream"];
"1000206" -> "1000357"  [label="DDG: stream"];
"1000276" -> "1000357"  [label="DDG: stream"];
"1000294" -> "1000357"  [label="DDG: stream"];
"1000342" -> "1000341"  [label="AST: "];
"1000342" -> "1000343"  [label="CFG: "];
"1000343" -> "1000342"  [label="AST: "];
"1000347" -> "1000342"  [label="CFG: "];
"1000342" -> "1000361"  [label="DDG: font->data"];
"1000342" -> "1000361"  [label="DDG: efree(font->data)"];
}
