digraph "1_Chrome_96dbafe288dbe2f0cc45fa3c39daf6d0c37acbab_40@del" {
"1000367" [label="(Call,xpctxt->node = contextNode)"];
"1000113" [label="(MethodParameterIn,xmlNodePtr contextNode)"];
"1000148" [label="(Call,contextNode == NULL)"];
"1000144" [label="(Call,ctxt == NULL)"];
"1000112" [label="(MethodParameterIn,xsltTransformContextPtr ctxt)"];
"1000405" [label="(Call,xslHandleDebugger(curInst, contextNode, NULL, ctxt))"];
"1000149" [label="(Identifier,contextNode)"];
"1000145" [label="(Identifier,ctxt)"];
"1000428" [label="(Call,xsltTransformError(ctxt, NULL, curInst,\n\t\t    \"The number of xsl:sort instructions exceeds the \"\n\t\t    \"maximum (%d) allowed by this processor.\n\",\n\t\t    XSLT_MAX_SORT))"];
"1000112" [label="(MethodParameterIn,xsltTransformContextPtr ctxt)"];
"1000317" [label="(Call,XSLT_TRACE(ctxt,XSLT_TRACE_FOR_EACH,xsltGenericDebug(xsltGenericDebugContext,\n\t\t\"xsltForEach: select didn't evaluate to a node list\n\")))"];
"1000566" [label="(MethodReturn,RET)"];
"1000326" [label="(Call,xsltTransformError(ctxt, NULL, inst,\n\t    \"Failed to evaluate the 'select' expression.\n\"))"];
"1000150" [label="(Identifier,NULL)"];
"1000348" [label="(Call,XSLT_TRACE(ctxt,XSLT_TRACE_FOR_EACH,xsltGenericDebug(xsltGenericDebugContext,\n \t\"xsltForEach: select evaluates to %d nodes\n\", list->nodeNr)))"];
"1000447" [label="(Call,xslHandleDebugger(curInst, contextNode, NULL, ctxt))"];
"1000312" [label="(Call,xsltTransformError(ctxt, NULL, inst,\n\t\t\"The 'select' expression does not evaluate to a node set.\n\"))"];
"1000457" [label="(Call,xsltDoSortFunction(ctxt, sorts, nbsorts))"];
"1000144" [label="(Call,ctxt == NULL)"];
"1000160" [label="(Call,comp == NULL)"];
"1000164" [label="(Call,xsltTransformError(ctxt, NULL, inst,\n\t    \"Internal error in xsltForEach(): \"\n\t    \"The XSLT 'for-each' instruction was not compiled.\n\"))"];
"1000151" [label="(Call,inst == NULL)"];
"1000147" [label="(Call,(contextNode == NULL) || (inst == NULL))"];
"1000374" [label="(Identifier,ctxt)"];
"1000116" [label="(Block,)"];
"1000368" [label="(Call,xpctxt->node)"];
"1000367" [label="(Call,xpctxt->node = contextNode)"];
"1000371" [label="(Identifier,contextNode)"];
"1000243" [label="(Call,xpctxt->node = contextNode)"];
"1000194" [label="(Call,XSLT_TRACE(ctxt,XSLT_TRACE_FOR_EACH,xsltGenericDebug(xsltGenericDebugContext,\n\t \"xsltForEach: select %s\n\", comp->select)))"];
"1000152" [label="(Identifier,inst)"];
"1000148" [label="(Call,contextNode == NULL)"];
"1000518" [label="(Call,xsltApplySequenceConstructor(ctxt, cur, curInst, NULL))"];
"1000113" [label="(MethodParameterIn,xmlNodePtr contextNode)"];
"1000146" [label="(Identifier,NULL)"];
"1000143" [label="(Call,(ctxt == NULL) || (contextNode == NULL) || (inst == NULL))"];
"1000183" [label="(Call,xsltTransformError(ctxt, NULL, inst,\n\t    \"Internal error in xsltForEach(): \"\n\t    \"The selecting expression of the XSLT 'for-each' \"\n\t    \"instruction was not compiled correctly.\n\"))"];
"1000367" -> "1000116"  [label="AST: "];
"1000367" -> "1000371"  [label="CFG: "];
"1000368" -> "1000367"  [label="AST: "];
"1000371" -> "1000367"  [label="AST: "];
"1000374" -> "1000367"  [label="CFG: "];
"1000367" -> "1000566"  [label="DDG: xpctxt->node"];
"1000367" -> "1000566"  [label="DDG: contextNode"];
"1000113" -> "1000367"  [label="DDG: contextNode"];
"1000148" -> "1000367"  [label="DDG: contextNode"];
"1000113" -> "1000111"  [label="AST: "];
"1000113" -> "1000566"  [label="DDG: contextNode"];
"1000113" -> "1000148"  [label="DDG: contextNode"];
"1000113" -> "1000243"  [label="DDG: contextNode"];
"1000113" -> "1000405"  [label="DDG: contextNode"];
"1000113" -> "1000447"  [label="DDG: contextNode"];
"1000148" -> "1000147"  [label="AST: "];
"1000148" -> "1000150"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000150" -> "1000148"  [label="AST: "];
"1000152" -> "1000148"  [label="CFG: "];
"1000147" -> "1000148"  [label="CFG: "];
"1000148" -> "1000566"  [label="DDG: contextNode"];
"1000148" -> "1000566"  [label="DDG: NULL"];
"1000148" -> "1000147"  [label="DDG: contextNode"];
"1000148" -> "1000147"  [label="DDG: NULL"];
"1000144" -> "1000148"  [label="DDG: NULL"];
"1000148" -> "1000151"  [label="DDG: NULL"];
"1000148" -> "1000160"  [label="DDG: NULL"];
"1000148" -> "1000243"  [label="DDG: contextNode"];
"1000148" -> "1000405"  [label="DDG: contextNode"];
"1000148" -> "1000447"  [label="DDG: contextNode"];
"1000144" -> "1000143"  [label="AST: "];
"1000144" -> "1000146"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000146" -> "1000144"  [label="AST: "];
"1000149" -> "1000144"  [label="CFG: "];
"1000143" -> "1000144"  [label="CFG: "];
"1000144" -> "1000566"  [label="DDG: ctxt"];
"1000144" -> "1000566"  [label="DDG: NULL"];
"1000144" -> "1000143"  [label="DDG: ctxt"];
"1000144" -> "1000143"  [label="DDG: NULL"];
"1000112" -> "1000144"  [label="DDG: ctxt"];
"1000144" -> "1000160"  [label="DDG: NULL"];
"1000144" -> "1000164"  [label="DDG: ctxt"];
"1000144" -> "1000183"  [label="DDG: ctxt"];
"1000144" -> "1000194"  [label="DDG: ctxt"];
"1000112" -> "1000111"  [label="AST: "];
"1000112" -> "1000566"  [label="DDG: ctxt"];
"1000112" -> "1000164"  [label="DDG: ctxt"];
"1000112" -> "1000183"  [label="DDG: ctxt"];
"1000112" -> "1000194"  [label="DDG: ctxt"];
"1000112" -> "1000312"  [label="DDG: ctxt"];
"1000112" -> "1000317"  [label="DDG: ctxt"];
"1000112" -> "1000326"  [label="DDG: ctxt"];
"1000112" -> "1000348"  [label="DDG: ctxt"];
"1000112" -> "1000405"  [label="DDG: ctxt"];
"1000112" -> "1000428"  [label="DDG: ctxt"];
"1000112" -> "1000447"  [label="DDG: ctxt"];
"1000112" -> "1000457"  [label="DDG: ctxt"];
"1000112" -> "1000518"  [label="DDG: ctxt"];
}
