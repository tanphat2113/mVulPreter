digraph "0_OpenSC_8fe377e93b4b56060e5bbfb6f3142ceaeca744fa_22@API" {
"1000218" [label="(Call,memcpy(tmppath.value + tmppath.len, files + 2*i, 2))"];
"1000232" [label="(Call,tmppath.len += 2)"];
"1000165" [label="(Call,sc_list_files(card, files, sizeof(files)))"];
"1000157" [label="(Call,sc_lock(card))"];
"1000136" [label="(Call,print_file(card, file, &path, depth))"];
"1000124" [label="(Call,sc_unlock(card))"];
"1000118" [label="(Call,sc_select_file(card, &path, &file))"];
"1000110" [label="(Call,sc_lock(card))"];
"1000102" [label="(MethodParameterIn,int depth)"];
"1000228" [label="(Call,2*i)"];
"1000196" [label="(Call,i < r/2)"];
"1000193" [label="(Call,i = 0)"];
"1000201" [label="(Call,i++)"];
"1000198" [label="(Call,r/2)"];
"1000185" [label="(Call,r == 0)"];
"1000173" [label="(Call,r < 0)"];
"1000163" [label="(Call,r = sc_list_files(card, files, sizeof(files)))"];
"1000160" [label="(Call,r == SC_SUCCESS)"];
"1000155" [label="(Call,r = sc_lock(card))"];
"1000113" [label="(Call,r == SC_SUCCESS)"];
"1000108" [label="(Call,r = sc_lock(card))"];
"1000219" [label="(Call,tmppath.value + tmppath.len)"];
"1000211" [label="(Call,memcpy(&tmppath, &path, sizeof(path)))"];
"1000119" [label="(Identifier,card)"];
"1000243" [label="(Literal,0)"];
"1000202" [label="(Identifier,i)"];
"1000160" [label="(Call,r == SC_SUCCESS)"];
"1000132" [label="(Call,sc_strerror(r))"];
"1000167" [label="(Identifier,files)"];
"1000201" [label="(Call,i++)"];
"1000155" [label="(Call,r = sc_lock(card))"];
"1000174" [label="(Identifier,r)"];
"1000124" [label="(Call,sc_unlock(card))"];
"1000231" [label="(Literal,2)"];
"1000138" [label="(Identifier,file)"];
"1000112" [label="(ControlStructure,if (r == SC_SUCCESS))"];
"1000195" [label="(Literal,0)"];
"1000193" [label="(Call,i = 0)"];
"1000118" [label="(Call,sc_select_file(card, &path, &file))"];
"1000172" [label="(ControlStructure,if (r < 0))"];
"1000120" [label="(Call,&path)"];
"1000125" [label="(Identifier,card)"];
"1000115" [label="(Identifier,SC_SUCCESS)"];
"1000173" [label="(Call,r < 0)"];
"1000226" [label="(Call,files + 2*i)"];
"1000186" [label="(Identifier,r)"];
"1000110" [label="(Call,sc_lock(card))"];
"1000166" [label="(Identifier,card)"];
"1000136" [label="(Call,print_file(card, file, &path, depth))"];
"1000116" [label="(Call,r = sc_select_file(card, &path, &file))"];
"1000184" [label="(ControlStructure,if (r == 0))"];
"1000109" [label="(Identifier,r)"];
"1000197" [label="(Identifier,i)"];
"1000108" [label="(Call,r = sc_lock(card))"];
"1000194" [label="(Identifier,i)"];
"1000232" [label="(Call,tmppath.len += 2)"];
"1000111" [label="(Identifier,card)"];
"1000158" [label="(Identifier,card)"];
"1000113" [label="(Call,r == SC_SUCCESS)"];
"1000165" [label="(Call,sc_list_files(card, files, sizeof(files)))"];
"1000244" [label="(MethodReturn,static int)"];
"1000159" [label="(ControlStructure,if (r == SC_SUCCESS))"];
"1000162" [label="(Identifier,SC_SUCCESS)"];
"1000156" [label="(Identifier,r)"];
"1000171" [label="(Identifier,card)"];
"1000122" [label="(Call,&file)"];
"1000237" [label="(Call,enum_dir(tmppath, depth + 1))"];
"1000147" [label="(Call,sc_file_free(file))"];
"1000117" [label="(Identifier,r)"];
"1000141" [label="(Identifier,depth)"];
"1000168" [label="(Call,sizeof(files))"];
"1000187" [label="(Literal,0)"];
"1000190" [label="(Literal,\"Empty directory\n\")"];
"1000127" [label="(Identifier,r)"];
"1000164" [label="(Identifier,r)"];
"1000239" [label="(Call,depth + 1)"];
"1000137" [label="(Identifier,card)"];
"1000153" [label="(Block,)"];
"1000199" [label="(Identifier,r)"];
"1000218" [label="(Call,memcpy(tmppath.value + tmppath.len, files + 2*i, 2))"];
"1000170" [label="(Call,sc_unlock(card))"];
"1000139" [label="(Call,&path)"];
"1000175" [label="(Literal,0)"];
"1000200" [label="(Literal,2)"];
"1000161" [label="(Identifier,r)"];
"1000207" [label="(Identifier,tmppath)"];
"1000163" [label="(Call,r = sc_list_files(card, files, sizeof(files)))"];
"1000114" [label="(Identifier,r)"];
"1000203" [label="(Block,)"];
"1000230" [label="(Identifier,i)"];
"1000157" [label="(Call,sc_lock(card))"];
"1000103" [label="(Block,)"];
"1000143" [label="(Identifier,file_type)"];
"1000180" [label="(Call,sc_strerror(r))"];
"1000102" [label="(MethodParameterIn,int depth)"];
"1000185" [label="(Call,r == 0)"];
"1000236" [label="(Literal,2)"];
"1000198" [label="(Call,r/2)"];
"1000233" [label="(Call,tmppath.len)"];
"1000228" [label="(Call,2*i)"];
"1000192" [label="(ControlStructure,for (i = 0; i < r/2; i++))"];
"1000196" [label="(Call,i < r/2)"];
"1000178" [label="(Identifier,stderr)"];
"1000238" [label="(Identifier,tmppath)"];
"1000234" [label="(Identifier,tmppath)"];
"1000229" [label="(Literal,2)"];
"1000218" -> "1000203"  [label="AST: "];
"1000218" -> "1000231"  [label="CFG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000226" -> "1000218"  [label="AST: "];
"1000231" -> "1000218"  [label="AST: "];
"1000234" -> "1000218"  [label="CFG: "];
"1000218" -> "1000244"  [label="DDG: files + 2*i"];
"1000218" -> "1000244"  [label="DDG: tmppath.value + tmppath.len"];
"1000218" -> "1000244"  [label="DDG: memcpy(tmppath.value + tmppath.len, files + 2*i, 2)"];
"1000232" -> "1000218"  [label="DDG: tmppath.len"];
"1000165" -> "1000218"  [label="DDG: files"];
"1000228" -> "1000218"  [label="DDG: 2"];
"1000228" -> "1000218"  [label="DDG: i"];
"1000232" -> "1000203"  [label="AST: "];
"1000232" -> "1000236"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000236" -> "1000232"  [label="AST: "];
"1000238" -> "1000232"  [label="CFG: "];
"1000232" -> "1000244"  [label="DDG: tmppath.len"];
"1000232" -> "1000219"  [label="DDG: tmppath.len"];
"1000232" -> "1000237"  [label="DDG: tmppath.len"];
"1000165" -> "1000163"  [label="AST: "];
"1000165" -> "1000168"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000167" -> "1000165"  [label="AST: "];
"1000168" -> "1000165"  [label="AST: "];
"1000163" -> "1000165"  [label="CFG: "];
"1000165" -> "1000244"  [label="DDG: files"];
"1000165" -> "1000163"  [label="DDG: card"];
"1000165" -> "1000163"  [label="DDG: files"];
"1000157" -> "1000165"  [label="DDG: card"];
"1000165" -> "1000170"  [label="DDG: card"];
"1000165" -> "1000226"  [label="DDG: files"];
"1000157" -> "1000155"  [label="AST: "];
"1000157" -> "1000158"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000157" -> "1000155"  [label="DDG: card"];
"1000136" -> "1000157"  [label="DDG: card"];
"1000157" -> "1000170"  [label="DDG: card"];
"1000136" -> "1000103"  [label="AST: "];
"1000136" -> "1000141"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000139" -> "1000136"  [label="AST: "];
"1000141" -> "1000136"  [label="AST: "];
"1000143" -> "1000136"  [label="CFG: "];
"1000136" -> "1000244"  [label="DDG: card"];
"1000136" -> "1000244"  [label="DDG: depth"];
"1000136" -> "1000244"  [label="DDG: &path"];
"1000136" -> "1000244"  [label="DDG: print_file(card, file, &path, depth)"];
"1000124" -> "1000136"  [label="DDG: card"];
"1000118" -> "1000136"  [label="DDG: &path"];
"1000102" -> "1000136"  [label="DDG: depth"];
"1000136" -> "1000147"  [label="DDG: file"];
"1000136" -> "1000211"  [label="DDG: &path"];
"1000136" -> "1000237"  [label="DDG: depth"];
"1000136" -> "1000239"  [label="DDG: depth"];
"1000124" -> "1000103"  [label="AST: "];
"1000124" -> "1000125"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000127" -> "1000124"  [label="CFG: "];
"1000124" -> "1000244"  [label="DDG: card"];
"1000124" -> "1000244"  [label="DDG: sc_unlock(card)"];
"1000118" -> "1000124"  [label="DDG: card"];
"1000110" -> "1000124"  [label="DDG: card"];
"1000118" -> "1000116"  [label="AST: "];
"1000118" -> "1000122"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="AST: "];
"1000122" -> "1000118"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000118" -> "1000244"  [label="DDG: &path"];
"1000118" -> "1000244"  [label="DDG: &file"];
"1000118" -> "1000116"  [label="DDG: card"];
"1000118" -> "1000116"  [label="DDG: &path"];
"1000118" -> "1000116"  [label="DDG: &file"];
"1000110" -> "1000118"  [label="DDG: card"];
"1000110" -> "1000108"  [label="AST: "];
"1000110" -> "1000111"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000108" -> "1000110"  [label="CFG: "];
"1000110" -> "1000108"  [label="DDG: card"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000244"  [label="DDG: depth"];
"1000102" -> "1000237"  [label="DDG: depth"];
"1000102" -> "1000239"  [label="DDG: depth"];
"1000228" -> "1000226"  [label="AST: "];
"1000228" -> "1000230"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000230" -> "1000228"  [label="AST: "];
"1000226" -> "1000228"  [label="CFG: "];
"1000228" -> "1000201"  [label="DDG: i"];
"1000228" -> "1000226"  [label="DDG: 2"];
"1000228" -> "1000226"  [label="DDG: i"];
"1000196" -> "1000228"  [label="DDG: i"];
"1000196" -> "1000192"  [label="AST: "];
"1000196" -> "1000198"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000198" -> "1000196"  [label="AST: "];
"1000207" -> "1000196"  [label="CFG: "];
"1000243" -> "1000196"  [label="CFG: "];
"1000196" -> "1000244"  [label="DDG: i"];
"1000196" -> "1000244"  [label="DDG: i < r/2"];
"1000196" -> "1000244"  [label="DDG: r/2"];
"1000193" -> "1000196"  [label="DDG: i"];
"1000201" -> "1000196"  [label="DDG: i"];
"1000198" -> "1000196"  [label="DDG: r"];
"1000198" -> "1000196"  [label="DDG: 2"];
"1000193" -> "1000192"  [label="AST: "];
"1000193" -> "1000195"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000195" -> "1000193"  [label="AST: "];
"1000197" -> "1000193"  [label="CFG: "];
"1000201" -> "1000192"  [label="AST: "];
"1000201" -> "1000202"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000197" -> "1000201"  [label="CFG: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000198" -> "1000244"  [label="DDG: r"];
"1000185" -> "1000198"  [label="DDG: r"];
"1000185" -> "1000184"  [label="AST: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="AST: "];
"1000190" -> "1000185"  [label="CFG: "];
"1000194" -> "1000185"  [label="CFG: "];
"1000185" -> "1000244"  [label="DDG: r == 0"];
"1000185" -> "1000244"  [label="DDG: r"];
"1000173" -> "1000185"  [label="DDG: r"];
"1000173" -> "1000172"  [label="AST: "];
"1000173" -> "1000175"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000175" -> "1000173"  [label="AST: "];
"1000178" -> "1000173"  [label="CFG: "];
"1000186" -> "1000173"  [label="CFG: "];
"1000173" -> "1000244"  [label="DDG: r < 0"];
"1000163" -> "1000173"  [label="DDG: r"];
"1000160" -> "1000173"  [label="DDG: r"];
"1000173" -> "1000180"  [label="DDG: r"];
"1000163" -> "1000159"  [label="AST: "];
"1000164" -> "1000163"  [label="AST: "];
"1000171" -> "1000163"  [label="CFG: "];
"1000163" -> "1000244"  [label="DDG: sc_list_files(card, files, sizeof(files))"];
"1000160" -> "1000159"  [label="AST: "];
"1000160" -> "1000162"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000162" -> "1000160"  [label="AST: "];
"1000164" -> "1000160"  [label="CFG: "];
"1000171" -> "1000160"  [label="CFG: "];
"1000160" -> "1000244"  [label="DDG: r == SC_SUCCESS"];
"1000160" -> "1000244"  [label="DDG: SC_SUCCESS"];
"1000155" -> "1000160"  [label="DDG: r"];
"1000113" -> "1000160"  [label="DDG: SC_SUCCESS"];
"1000155" -> "1000153"  [label="AST: "];
"1000156" -> "1000155"  [label="AST: "];
"1000161" -> "1000155"  [label="CFG: "];
"1000155" -> "1000244"  [label="DDG: sc_lock(card)"];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000117" -> "1000113"  [label="CFG: "];
"1000125" -> "1000113"  [label="CFG: "];
"1000113" -> "1000244"  [label="DDG: r"];
"1000113" -> "1000244"  [label="DDG: SC_SUCCESS"];
"1000113" -> "1000244"  [label="DDG: r == SC_SUCCESS"];
"1000108" -> "1000113"  [label="DDG: r"];
"1000113" -> "1000132"  [label="DDG: r"];
"1000108" -> "1000103"  [label="AST: "];
"1000109" -> "1000108"  [label="AST: "];
"1000114" -> "1000108"  [label="CFG: "];
"1000108" -> "1000244"  [label="DDG: sc_lock(card)"];
}
