digraph "0_linux_83eaddab4378db256d00d295bda6ca997cd13a52@API" {
"1000141" [label="(Call,dccp_v4_request_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t\t  req_unhash, own_req))"];
"1000125" [label="(Call,inet6_sk(sk))"];
"1000109" [label="(MethodParameterIn,const struct sock *sk)"];
"1000110" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000119" [label="(Call,inet_rsk(req))"];
"1000111" [label="(MethodParameterIn,struct request_sock *req)"];
"1000112" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000113" [label="(MethodParameterIn,struct request_sock *req_unhash)"];
"1000114" [label="(MethodParameterIn,bool *own_req)"];
"1000139" [label="(Call,newsk = dccp_v4_request_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t\t  req_unhash, own_req))"];
"1000149" [label="(Call,newsk == NULL)"];
"1000152" [label="(Return,return NULL;)"];
"1000156" [label="(Call,(struct dccp6_sock *)newsk)"];
"1000154" [label="(Call,newdp6 = (struct dccp6_sock *)newsk)"];
"1000161" [label="(Call,inet_sk(newsk))"];
"1000159" [label="(Call,newinet = inet_sk(newsk))"];
"1000173" [label="(Call,inet6_sk(newsk))"];
"1000171" [label="(Call,newnp = inet6_sk(newsk))"];
"1000175" [label="(Call,memcpy(newnp, np, sizeof(struct ipv6_pinfo)))"];
"1000189" [label="(Call,inet_csk(newsk))"];
"1000241" [label="(Call,inet_csk(newsk))"];
"1000238" [label="(Call,dccp_sync_mss(newsk, inet_csk(newsk)->icsk_pmtu_cookie))"];
"1000244" [label="(Return,return newsk;)"];
"1000199" [label="(Call,newnp->pktoptions  = NULL)"];
"1000204" [label="(Call,newnp->opt\t   = NULL)"];
"1000209" [label="(Call,newnp->ipv6_mc_list = NULL)"];
"1000214" [label="(Call,newnp->ipv6_ac_list = NULL)"];
"1000219" [label="(Call,newnp->ipv6_fl_list = NULL)"];
"1000228" [label="(Call,inet6_iif(skb))"];
"1000224" [label="(Call,newnp->mcast_oif   = inet6_iif(skb))"];
"1000235" [label="(Call,ipv6_hdr(skb))"];
"1000147" [label="(Identifier,own_req)"];
"1000203" [label="(Identifier,NULL)"];
"1000142" [label="(Identifier,sk)"];
"1000232" [label="(Identifier,newnp)"];
"1000257" [label="(Call,inet6_csk_route_req(sk, &fl6, req, IPPROTO_DCCP))"];
"1000145" [label="(Identifier,dst)"];
"1000126" [label="(Identifier,sk)"];
"1000204" [label="(Call,newnp->opt\t   = NULL)"];
"1000213" [label="(Identifier,NULL)"];
"1000243" [label="(FieldIdentifier,icsk_pmtu_cookie)"];
"1000215" [label="(Call,newnp->ipv6_ac_list)"];
"1000245" [label="(Identifier,newsk)"];
"1000139" [label="(Call,newsk = dccp_v4_request_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t\t  req_unhash, own_req))"];
"1000455" [label="(Call,dst_mtu(dst))"];
"1000224" [label="(Call,newnp->mcast_oif   = inet6_iif(skb))"];
"1000529" [label="(Call,sock_net(sk))"];
"1000140" [label="(Identifier,newsk)"];
"1000156" [label="(Call,(struct dccp6_sock *)newsk)"];
"1000269" [label="(Call,dccp_create_openreq_child(sk, req, skb))"];
"1000141" [label="(Call,dccp_v4_request_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t\t  req_unhash, own_req))"];
"1000114" [label="(MethodParameterIn,bool *own_req)"];
"1000473" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000155" [label="(Identifier,newdp6)"];
"1000176" [label="(Identifier,newnp)"];
"1000396" [label="(Call,inet6_iif(skb))"];
"1000255" [label="(Call,dst = inet6_csk_route_req(sk, &fl6, req, IPPROTO_DCCP))"];
"1000206" [label="(Identifier,newnp)"];
"1000223" [label="(Identifier,NULL)"];
"1000111" [label="(MethodParameterIn,struct request_sock *req)"];
"1000149" [label="(Call,newsk == NULL)"];
"1000225" [label="(Call,newnp->mcast_oif)"];
"1000138" [label="(Block,)"];
"1000235" [label="(Call,ipv6_hdr(skb))"];
"1000244" [label="(Return,return newsk;)"];
"1000125" [label="(Call,inet6_sk(sk))"];
"1000251" [label="(Call,!dst)"];
"1000237" [label="(FieldIdentifier,hop_limit)"];
"1000153" [label="(Identifier,NULL)"];
"1000221" [label="(Identifier,newnp)"];
"1000144" [label="(Identifier,req)"];
"1000150" [label="(Identifier,newsk)"];
"1000199" [label="(Call,newnp->pktoptions  = NULL)"];
"1000119" [label="(Call,inet_rsk(req))"];
"1000488" [label="(Call,req_to_sk(req_unhash))"];
"1000177" [label="(Identifier,np)"];
"1000537" [label="(Call,sock_net(sk))"];
"1000110" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000113" [label="(MethodParameterIn,struct request_sock *req_unhash)"];
"1000220" [label="(Call,newnp->ipv6_fl_list)"];
"1000542" [label="(MethodReturn,static struct sock *)"];
"1000154" [label="(Call,newdp6 = (struct dccp6_sock *)newsk)"];
"1000226" [label="(Identifier,newnp)"];
"1000236" [label="(Identifier,skb)"];
"1000109" [label="(MethodParameterIn,const struct sock *sk)"];
"1000174" [label="(Identifier,newsk)"];
"1000218" [label="(Identifier,NULL)"];
"1000173" [label="(Call,inet6_sk(newsk))"];
"1000191" [label="(FieldIdentifier,icsk_af_ops)"];
"1000239" [label="(Identifier,newsk)"];
"1000210" [label="(Call,newnp->ipv6_mc_list)"];
"1000123" [label="(Call,*np = inet6_sk(sk))"];
"1000219" [label="(Call,newnp->ipv6_fl_list = NULL)"];
"1000151" [label="(Identifier,NULL)"];
"1000175" [label="(Call,memcpy(newnp, np, sizeof(struct ipv6_pinfo)))"];
"1000148" [label="(ControlStructure,if (newsk == NULL))"];
"1000229" [label="(Identifier,skb)"];
"1000160" [label="(Identifier,newinet)"];
"1000165" [label="(Identifier,newinet)"];
"1000146" [label="(Identifier,req_unhash)"];
"1000208" [label="(Identifier,NULL)"];
"1000533" [label="(Call,dst_release(dst))"];
"1000234" [label="(Call,ipv6_hdr(skb)->hop_limit)"];
"1000117" [label="(Call,*ireq = inet_rsk(req))"];
"1000182" [label="(Identifier,newnp)"];
"1000211" [label="(Identifier,newnp)"];
"1000209" [label="(Call,newnp->ipv6_mc_list = NULL)"];
"1000238" [label="(Call,dccp_sync_mss(newsk, inet_csk(newsk)->icsk_pmtu_cookie))"];
"1000152" [label="(Return,return NULL;)"];
"1000120" [label="(Identifier,req)"];
"1000264" [label="(Call,!dst)"];
"1000178" [label="(Call,sizeof(struct ipv6_pinfo))"];
"1000190" [label="(Identifier,newsk)"];
"1000205" [label="(Call,newnp->opt)"];
"1000278" [label="(Call,ip6_dst_store(newsk, dst, NULL, NULL))"];
"1000216" [label="(Identifier,newnp)"];
"1000158" [label="(Identifier,newsk)"];
"1000161" [label="(Call,inet_sk(newsk))"];
"1000240" [label="(Call,inet_csk(newsk)->icsk_pmtu_cookie)"];
"1000159" [label="(Call,newinet = inet_sk(newsk))"];
"1000143" [label="(Identifier,skb)"];
"1000162" [label="(Identifier,newsk)"];
"1000172" [label="(Identifier,newnp)"];
"1000189" [label="(Call,inet_csk(newsk))"];
"1000242" [label="(Identifier,newsk)"];
"1000200" [label="(Call,newnp->pktoptions)"];
"1000241" [label="(Call,inet_csk(newsk))"];
"1000112" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000228" [label="(Call,inet6_iif(skb))"];
"1000188" [label="(Call,inet_csk(newsk)->icsk_af_ops)"];
"1000247" [label="(Call,sk_acceptq_is_full(sk))"];
"1000403" [label="(Call,ipv6_hdr(skb))"];
"1000214" [label="(Call,newnp->ipv6_ac_list = NULL)"];
"1000171" [label="(Call,newnp = inet6_sk(newsk))"];
"1000141" -> "1000139"  [label="AST: "];
"1000141" -> "1000147"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000144" -> "1000141"  [label="AST: "];
"1000145" -> "1000141"  [label="AST: "];
"1000146" -> "1000141"  [label="AST: "];
"1000147" -> "1000141"  [label="AST: "];
"1000139" -> "1000141"  [label="CFG: "];
"1000141" -> "1000542"  [label="DDG: sk"];
"1000141" -> "1000542"  [label="DDG: req"];
"1000141" -> "1000542"  [label="DDG: dst"];
"1000141" -> "1000542"  [label="DDG: skb"];
"1000141" -> "1000542"  [label="DDG: req_unhash"];
"1000141" -> "1000542"  [label="DDG: own_req"];
"1000141" -> "1000139"  [label="DDG: req"];
"1000141" -> "1000139"  [label="DDG: own_req"];
"1000141" -> "1000139"  [label="DDG: sk"];
"1000141" -> "1000139"  [label="DDG: req_unhash"];
"1000141" -> "1000139"  [label="DDG: dst"];
"1000141" -> "1000139"  [label="DDG: skb"];
"1000125" -> "1000141"  [label="DDG: sk"];
"1000109" -> "1000141"  [label="DDG: sk"];
"1000110" -> "1000141"  [label="DDG: skb"];
"1000119" -> "1000141"  [label="DDG: req"];
"1000111" -> "1000141"  [label="DDG: req"];
"1000112" -> "1000141"  [label="DDG: dst"];
"1000113" -> "1000141"  [label="DDG: req_unhash"];
"1000114" -> "1000141"  [label="DDG: own_req"];
"1000141" -> "1000228"  [label="DDG: skb"];
"1000125" -> "1000123"  [label="AST: "];
"1000125" -> "1000126"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000125" -> "1000123"  [label="DDG: sk"];
"1000109" -> "1000125"  [label="DDG: sk"];
"1000125" -> "1000247"  [label="DDG: sk"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000542"  [label="DDG: sk"];
"1000109" -> "1000247"  [label="DDG: sk"];
"1000109" -> "1000257"  [label="DDG: sk"];
"1000109" -> "1000269"  [label="DDG: sk"];
"1000109" -> "1000473"  [label="DDG: sk"];
"1000109" -> "1000529"  [label="DDG: sk"];
"1000109" -> "1000537"  [label="DDG: sk"];
"1000110" -> "1000108"  [label="AST: "];
"1000110" -> "1000542"  [label="DDG: skb"];
"1000110" -> "1000228"  [label="DDG: skb"];
"1000110" -> "1000235"  [label="DDG: skb"];
"1000110" -> "1000269"  [label="DDG: skb"];
"1000110" -> "1000396"  [label="DDG: skb"];
"1000110" -> "1000403"  [label="DDG: skb"];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000119" -> "1000542"  [label="DDG: req"];
"1000119" -> "1000117"  [label="DDG: req"];
"1000111" -> "1000119"  [label="DDG: req"];
"1000119" -> "1000257"  [label="DDG: req"];
"1000119" -> "1000269"  [label="DDG: req"];
"1000111" -> "1000108"  [label="AST: "];
"1000111" -> "1000542"  [label="DDG: req"];
"1000111" -> "1000257"  [label="DDG: req"];
"1000111" -> "1000269"  [label="DDG: req"];
"1000112" -> "1000108"  [label="AST: "];
"1000112" -> "1000542"  [label="DDG: dst"];
"1000112" -> "1000251"  [label="DDG: dst"];
"1000112" -> "1000255"  [label="DDG: dst"];
"1000112" -> "1000264"  [label="DDG: dst"];
"1000112" -> "1000278"  [label="DDG: dst"];
"1000112" -> "1000455"  [label="DDG: dst"];
"1000112" -> "1000533"  [label="DDG: dst"];
"1000113" -> "1000108"  [label="AST: "];
"1000113" -> "1000542"  [label="DDG: req_unhash"];
"1000113" -> "1000488"  [label="DDG: req_unhash"];
"1000114" -> "1000108"  [label="AST: "];
"1000114" -> "1000542"  [label="DDG: own_req"];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000139"  [label="AST: "];
"1000150" -> "1000139"  [label="CFG: "];
"1000139" -> "1000542"  [label="DDG: dccp_v4_request_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t\t  req_unhash, own_req)"];
"1000139" -> "1000149"  [label="DDG: newsk"];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000153" -> "1000149"  [label="CFG: "];
"1000155" -> "1000149"  [label="CFG: "];
"1000149" -> "1000542"  [label="DDG: NULL"];
"1000149" -> "1000542"  [label="DDG: newsk == NULL"];
"1000149" -> "1000542"  [label="DDG: newsk"];
"1000149" -> "1000152"  [label="DDG: NULL"];
"1000149" -> "1000156"  [label="DDG: newsk"];
"1000149" -> "1000199"  [label="DDG: NULL"];
"1000149" -> "1000204"  [label="DDG: NULL"];
"1000149" -> "1000209"  [label="DDG: NULL"];
"1000149" -> "1000214"  [label="DDG: NULL"];
"1000149" -> "1000219"  [label="DDG: NULL"];
"1000152" -> "1000148"  [label="AST: "];
"1000152" -> "1000153"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000542" -> "1000152"  [label="CFG: "];
"1000152" -> "1000542"  [label="DDG: <RET>"];
"1000153" -> "1000152"  [label="DDG: NULL"];
"1000156" -> "1000154"  [label="AST: "];
"1000156" -> "1000158"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000158" -> "1000156"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000156" -> "1000154"  [label="DDG: newsk"];
"1000156" -> "1000161"  [label="DDG: newsk"];
"1000154" -> "1000138"  [label="AST: "];
"1000155" -> "1000154"  [label="AST: "];
"1000160" -> "1000154"  [label="CFG: "];
"1000154" -> "1000542"  [label="DDG: newdp6"];
"1000154" -> "1000542"  [label="DDG: (struct dccp6_sock *)newsk"];
"1000161" -> "1000159"  [label="AST: "];
"1000161" -> "1000162"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000159" -> "1000161"  [label="CFG: "];
"1000161" -> "1000159"  [label="DDG: newsk"];
"1000161" -> "1000173"  [label="DDG: newsk"];
"1000159" -> "1000138"  [label="AST: "];
"1000160" -> "1000159"  [label="AST: "];
"1000165" -> "1000159"  [label="CFG: "];
"1000159" -> "1000542"  [label="DDG: newinet"];
"1000159" -> "1000542"  [label="DDG: inet_sk(newsk)"];
"1000173" -> "1000171"  [label="AST: "];
"1000173" -> "1000174"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000171" -> "1000173"  [label="CFG: "];
"1000173" -> "1000171"  [label="DDG: newsk"];
"1000173" -> "1000189"  [label="DDG: newsk"];
"1000171" -> "1000138"  [label="AST: "];
"1000172" -> "1000171"  [label="AST: "];
"1000176" -> "1000171"  [label="CFG: "];
"1000171" -> "1000542"  [label="DDG: inet6_sk(newsk)"];
"1000171" -> "1000175"  [label="DDG: newnp"];
"1000175" -> "1000138"  [label="AST: "];
"1000175" -> "1000178"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000177" -> "1000175"  [label="AST: "];
"1000178" -> "1000175"  [label="AST: "];
"1000182" -> "1000175"  [label="CFG: "];
"1000175" -> "1000542"  [label="DDG: newnp"];
"1000175" -> "1000542"  [label="DDG: np"];
"1000175" -> "1000542"  [label="DDG: memcpy(newnp, np, sizeof(struct ipv6_pinfo))"];
"1000123" -> "1000175"  [label="DDG: np"];
"1000189" -> "1000188"  [label="AST: "];
"1000189" -> "1000190"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000191" -> "1000189"  [label="CFG: "];
"1000189" -> "1000241"  [label="DDG: newsk"];
"1000241" -> "1000240"  [label="AST: "];
"1000241" -> "1000242"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="CFG: "];
"1000241" -> "1000238"  [label="DDG: newsk"];
"1000238" -> "1000138"  [label="AST: "];
"1000238" -> "1000240"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="AST: "];
"1000245" -> "1000238"  [label="CFG: "];
"1000238" -> "1000542"  [label="DDG: newsk"];
"1000238" -> "1000542"  [label="DDG: inet_csk(newsk)->icsk_pmtu_cookie"];
"1000238" -> "1000542"  [label="DDG: dccp_sync_mss(newsk, inet_csk(newsk)->icsk_pmtu_cookie)"];
"1000238" -> "1000244"  [label="DDG: newsk"];
"1000244" -> "1000138"  [label="AST: "];
"1000244" -> "1000245"  [label="CFG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000542" -> "1000244"  [label="CFG: "];
"1000244" -> "1000542"  [label="DDG: <RET>"];
"1000245" -> "1000244"  [label="DDG: newsk"];
"1000199" -> "1000138"  [label="AST: "];
"1000199" -> "1000203"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000203" -> "1000199"  [label="AST: "];
"1000206" -> "1000199"  [label="CFG: "];
"1000199" -> "1000542"  [label="DDG: newnp->pktoptions"];
"1000204" -> "1000138"  [label="AST: "];
"1000204" -> "1000208"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000208" -> "1000204"  [label="AST: "];
"1000211" -> "1000204"  [label="CFG: "];
"1000204" -> "1000542"  [label="DDG: newnp->opt"];
"1000209" -> "1000138"  [label="AST: "];
"1000209" -> "1000213"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000213" -> "1000209"  [label="AST: "];
"1000216" -> "1000209"  [label="CFG: "];
"1000209" -> "1000542"  [label="DDG: newnp->ipv6_mc_list"];
"1000214" -> "1000138"  [label="AST: "];
"1000214" -> "1000218"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000218" -> "1000214"  [label="AST: "];
"1000221" -> "1000214"  [label="CFG: "];
"1000214" -> "1000542"  [label="DDG: newnp->ipv6_ac_list"];
"1000219" -> "1000138"  [label="AST: "];
"1000219" -> "1000223"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000223" -> "1000219"  [label="AST: "];
"1000226" -> "1000219"  [label="CFG: "];
"1000219" -> "1000542"  [label="DDG: NULL"];
"1000219" -> "1000542"  [label="DDG: newnp->ipv6_fl_list"];
"1000228" -> "1000224"  [label="AST: "];
"1000228" -> "1000229"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000224" -> "1000228"  [label="CFG: "];
"1000228" -> "1000224"  [label="DDG: skb"];
"1000228" -> "1000235"  [label="DDG: skb"];
"1000224" -> "1000138"  [label="AST: "];
"1000225" -> "1000224"  [label="AST: "];
"1000232" -> "1000224"  [label="CFG: "];
"1000224" -> "1000542"  [label="DDG: newnp->mcast_oif"];
"1000224" -> "1000542"  [label="DDG: inet6_iif(skb)"];
"1000235" -> "1000234"  [label="AST: "];
"1000235" -> "1000236"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="CFG: "];
"1000235" -> "1000542"  [label="DDG: skb"];
}
