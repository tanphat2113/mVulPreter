digraph "0_linux_83eaddab4378db256d00d295bda6ca997cd13a52@API" {
"1000318" [label="(Call,memcpy(newnp, np, sizeof(struct ipv6_pinfo)))"];
"1000314" [label="(Call,newnp = inet6_sk(newsk))"];
"1000316" [label="(Call,inet6_sk(newsk))"];
"1000304" [label="(Call,inet_sk(newsk))"];
"1000299" [label="(Call,(struct dccp6_sock *)newsk)"];
"1000278" [label="(Call,ip6_dst_store(newsk, dst, NULL, NULL))"];
"1000274" [label="(Call,newsk == NULL)"];
"1000267" [label="(Call,newsk = dccp_create_openreq_child(sk, req, skb))"];
"1000269" [label="(Call,dccp_create_openreq_child(sk, req, skb))"];
"1000247" [label="(Call,sk_acceptq_is_full(sk))"];
"1000125" [label="(Call,inet6_sk(sk))"];
"1000109" [label="(MethodParameterIn,const struct sock *sk)"];
"1000257" [label="(Call,inet6_csk_route_req(sk, &fl6, req, IPPROTO_DCCP))"];
"1000119" [label="(Call,inet_rsk(req))"];
"1000111" [label="(MethodParameterIn,struct request_sock *req)"];
"1000110" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000264" [label="(Call,!dst)"];
"1000255" [label="(Call,dst = inet6_csk_route_req(sk, &fl6, req, IPPROTO_DCCP))"];
"1000112" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000251" [label="(Call,!dst)"];
"1000123" [label="(Call,*np = inet6_sk(sk))"];
"1000246" [label="(ControlStructure,if (sk_acceptq_is_full(sk)))"];
"1000248" [label="(Identifier,sk)"];
"1000257" [label="(Call,inet6_csk_route_req(sk, &fl6, req, IPPROTO_DCCP))"];
"1000252" [label="(Identifier,dst)"];
"1000262" [label="(Identifier,IPPROTO_DCCP)"];
"1000126" [label="(Identifier,sk)"];
"1000367" [label="(Call,newnp->ipv6_mc_list = NULL)"];
"1000280" [label="(Identifier,dst)"];
"1000282" [label="(Identifier,NULL)"];
"1000263" [label="(ControlStructure,if (!dst))"];
"1000455" [label="(Call,dst_mtu(dst))"];
"1000511" [label="(Call,ireq->pktopts = NULL)"];
"1000529" [label="(Call,sock_net(sk))"];
"1000271" [label="(Identifier,req)"];
"1000276" [label="(Identifier,NULL)"];
"1000269" [label="(Call,dccp_create_openreq_child(sk, req, skb))"];
"1000268" [label="(Identifier,newsk)"];
"1000377" [label="(Call,newnp->ipv6_fl_list = NULL)"];
"1000141" [label="(Call,dccp_v4_request_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t\t  req_unhash, own_req))"];
"1000473" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000396" [label="(Call,inet6_iif(skb))"];
"1000255" [label="(Call,dst = inet6_csk_route_req(sk, &fl6, req, IPPROTO_DCCP))"];
"1000111" [label="(MethodParameterIn,struct request_sock *req)"];
"1000382" [label="(Call,newnp->pktoptions = NULL)"];
"1000277" [label="(ControlStructure,goto out_nonewsk;)"];
"1000235" [label="(Call,ipv6_hdr(skb))"];
"1000305" [label="(Identifier,newsk)"];
"1000125" [label="(Call,inet6_sk(sk))"];
"1000251" [label="(Call,!dst)"];
"1000279" [label="(Identifier,newsk)"];
"1000273" [label="(ControlStructure,if (newsk == NULL))"];
"1000387" [label="(Call,newnp->opt\t  = NULL)"];
"1000119" [label="(Call,inet_rsk(req))"];
"1000124" [label="(Identifier,np)"];
"1000537" [label="(Call,sock_net(sk))"];
"1000110" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000115" [label="(Block,)"];
"1000249" [label="(ControlStructure,goto out_overflow;)"];
"1000435" [label="(Call,inet_csk(newsk))"];
"1000320" [label="(Identifier,np)"];
"1000542" [label="(MethodReturn,static struct sock *)"];
"1000299" [label="(Call,(struct dccp6_sock *)newsk)"];
"1000302" [label="(Call,newinet = inet_sk(newsk))"];
"1000267" [label="(Call,newsk = dccp_create_openreq_child(sk, req, skb))"];
"1000109" [label="(MethodParameterIn,const struct sock *sk)"];
"1000372" [label="(Call,newnp->ipv6_ac_list = NULL)"];
"1000270" [label="(Identifier,sk)"];
"1000540" [label="(Return,return NULL;)"];
"1000351" [label="(Call,newinet->inet_opt = NULL)"];
"1000123" [label="(Call,*np = inet6_sk(sk))"];
"1000134" [label="(Identifier,skb)"];
"1000316" [label="(Call,inet6_sk(newsk))"];
"1000175" [label="(Call,memcpy(newnp, np, sizeof(struct ipv6_pinfo)))"];
"1000250" [label="(ControlStructure,if (!dst))"];
"1000297" [label="(Call,newdp6 = (struct dccp6_sock *)newsk)"];
"1000285" [label="(Identifier,newsk)"];
"1000301" [label="(Identifier,newsk)"];
"1000315" [label="(Identifier,newnp)"];
"1000256" [label="(Identifier,dst)"];
"1000533" [label="(Call,dst_release(dst))"];
"1000117" [label="(Call,*ireq = inet_rsk(req))"];
"1000259" [label="(Call,&fl6)"];
"1000317" [label="(Identifier,newsk)"];
"1000321" [label="(Call,sizeof(struct ipv6_pinfo))"];
"1000275" [label="(Identifier,newsk)"];
"1000120" [label="(Identifier,req)"];
"1000264" [label="(Call,!dst)"];
"1000258" [label="(Identifier,sk)"];
"1000278" [label="(Call,ip6_dst_store(newsk, dst, NULL, NULL))"];
"1000318" [label="(Call,memcpy(newnp, np, sizeof(struct ipv6_pinfo)))"];
"1000319" [label="(Identifier,newnp)"];
"1000314" [label="(Call,newnp = inet6_sk(newsk))"];
"1000325" [label="(Identifier,newsk)"];
"1000265" [label="(Identifier,dst)"];
"1000274" [label="(Call,newsk == NULL)"];
"1000112" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000228" [label="(Call,inet6_iif(skb))"];
"1000253" [label="(Block,)"];
"1000304" [label="(Call,inet_sk(newsk))"];
"1000261" [label="(Identifier,req)"];
"1000272" [label="(Identifier,skb)"];
"1000425" [label="(Call,ipv6_dup_options(newsk, opt))"];
"1000266" [label="(ControlStructure,goto out;)"];
"1000247" [label="(Call,sk_acceptq_is_full(sk))"];
"1000403" [label="(Call,ipv6_hdr(skb))"];
"1000281" [label="(Identifier,NULL)"];
"1000318" -> "1000115"  [label="AST: "];
"1000318" -> "1000321"  [label="CFG: "];
"1000319" -> "1000318"  [label="AST: "];
"1000320" -> "1000318"  [label="AST: "];
"1000321" -> "1000318"  [label="AST: "];
"1000325" -> "1000318"  [label="CFG: "];
"1000318" -> "1000542"  [label="DDG: memcpy(newnp, np, sizeof(struct ipv6_pinfo))"];
"1000318" -> "1000542"  [label="DDG: newnp"];
"1000318" -> "1000542"  [label="DDG: np"];
"1000314" -> "1000318"  [label="DDG: newnp"];
"1000123" -> "1000318"  [label="DDG: np"];
"1000314" -> "1000115"  [label="AST: "];
"1000314" -> "1000316"  [label="CFG: "];
"1000315" -> "1000314"  [label="AST: "];
"1000316" -> "1000314"  [label="AST: "];
"1000319" -> "1000314"  [label="CFG: "];
"1000314" -> "1000542"  [label="DDG: inet6_sk(newsk)"];
"1000316" -> "1000314"  [label="DDG: newsk"];
"1000316" -> "1000317"  [label="CFG: "];
"1000317" -> "1000316"  [label="AST: "];
"1000304" -> "1000316"  [label="DDG: newsk"];
"1000316" -> "1000425"  [label="DDG: newsk"];
"1000316" -> "1000435"  [label="DDG: newsk"];
"1000304" -> "1000302"  [label="AST: "];
"1000304" -> "1000305"  [label="CFG: "];
"1000305" -> "1000304"  [label="AST: "];
"1000302" -> "1000304"  [label="CFG: "];
"1000304" -> "1000302"  [label="DDG: newsk"];
"1000299" -> "1000304"  [label="DDG: newsk"];
"1000299" -> "1000297"  [label="AST: "];
"1000299" -> "1000301"  [label="CFG: "];
"1000300" -> "1000299"  [label="AST: "];
"1000301" -> "1000299"  [label="AST: "];
"1000297" -> "1000299"  [label="CFG: "];
"1000299" -> "1000297"  [label="DDG: newsk"];
"1000278" -> "1000299"  [label="DDG: newsk"];
"1000278" -> "1000115"  [label="AST: "];
"1000278" -> "1000282"  [label="CFG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000280" -> "1000278"  [label="AST: "];
"1000281" -> "1000278"  [label="AST: "];
"1000282" -> "1000278"  [label="AST: "];
"1000285" -> "1000278"  [label="CFG: "];
"1000278" -> "1000542"  [label="DDG: ip6_dst_store(newsk, dst, NULL, NULL)"];
"1000274" -> "1000278"  [label="DDG: newsk"];
"1000274" -> "1000278"  [label="DDG: NULL"];
"1000264" -> "1000278"  [label="DDG: dst"];
"1000251" -> "1000278"  [label="DDG: dst"];
"1000112" -> "1000278"  [label="DDG: dst"];
"1000278" -> "1000351"  [label="DDG: NULL"];
"1000278" -> "1000367"  [label="DDG: NULL"];
"1000278" -> "1000372"  [label="DDG: NULL"];
"1000278" -> "1000377"  [label="DDG: NULL"];
"1000278" -> "1000382"  [label="DDG: NULL"];
"1000278" -> "1000387"  [label="DDG: NULL"];
"1000278" -> "1000455"  [label="DDG: dst"];
"1000278" -> "1000511"  [label="DDG: NULL"];
"1000278" -> "1000540"  [label="DDG: NULL"];
"1000274" -> "1000273"  [label="AST: "];
"1000274" -> "1000276"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000276" -> "1000274"  [label="AST: "];
"1000277" -> "1000274"  [label="CFG: "];
"1000279" -> "1000274"  [label="CFG: "];
"1000274" -> "1000542"  [label="DDG: newsk"];
"1000274" -> "1000542"  [label="DDG: newsk == NULL"];
"1000274" -> "1000542"  [label="DDG: NULL"];
"1000267" -> "1000274"  [label="DDG: newsk"];
"1000274" -> "1000540"  [label="DDG: NULL"];
"1000267" -> "1000115"  [label="AST: "];
"1000267" -> "1000269"  [label="CFG: "];
"1000268" -> "1000267"  [label="AST: "];
"1000269" -> "1000267"  [label="AST: "];
"1000275" -> "1000267"  [label="CFG: "];
"1000267" -> "1000542"  [label="DDG: dccp_create_openreq_child(sk, req, skb)"];
"1000269" -> "1000267"  [label="DDG: sk"];
"1000269" -> "1000267"  [label="DDG: req"];
"1000269" -> "1000267"  [label="DDG: skb"];
"1000269" -> "1000272"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000271" -> "1000269"  [label="AST: "];
"1000272" -> "1000269"  [label="AST: "];
"1000269" -> "1000542"  [label="DDG: skb"];
"1000269" -> "1000542"  [label="DDG: req"];
"1000247" -> "1000269"  [label="DDG: sk"];
"1000257" -> "1000269"  [label="DDG: sk"];
"1000257" -> "1000269"  [label="DDG: req"];
"1000109" -> "1000269"  [label="DDG: sk"];
"1000119" -> "1000269"  [label="DDG: req"];
"1000111" -> "1000269"  [label="DDG: req"];
"1000110" -> "1000269"  [label="DDG: skb"];
"1000269" -> "1000396"  [label="DDG: skb"];
"1000269" -> "1000473"  [label="DDG: sk"];
"1000269" -> "1000537"  [label="DDG: sk"];
"1000247" -> "1000246"  [label="AST: "];
"1000247" -> "1000248"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000249" -> "1000247"  [label="CFG: "];
"1000252" -> "1000247"  [label="CFG: "];
"1000247" -> "1000542"  [label="DDG: sk_acceptq_is_full(sk)"];
"1000125" -> "1000247"  [label="DDG: sk"];
"1000109" -> "1000247"  [label="DDG: sk"];
"1000247" -> "1000257"  [label="DDG: sk"];
"1000247" -> "1000529"  [label="DDG: sk"];
"1000125" -> "1000123"  [label="AST: "];
"1000125" -> "1000126"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000125" -> "1000123"  [label="DDG: sk"];
"1000109" -> "1000125"  [label="DDG: sk"];
"1000125" -> "1000141"  [label="DDG: sk"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000542"  [label="DDG: sk"];
"1000109" -> "1000141"  [label="DDG: sk"];
"1000109" -> "1000257"  [label="DDG: sk"];
"1000109" -> "1000473"  [label="DDG: sk"];
"1000109" -> "1000529"  [label="DDG: sk"];
"1000109" -> "1000537"  [label="DDG: sk"];
"1000257" -> "1000255"  [label="AST: "];
"1000257" -> "1000262"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000259" -> "1000257"  [label="AST: "];
"1000261" -> "1000257"  [label="AST: "];
"1000262" -> "1000257"  [label="AST: "];
"1000255" -> "1000257"  [label="CFG: "];
"1000257" -> "1000542"  [label="DDG: &fl6"];
"1000257" -> "1000542"  [label="DDG: IPPROTO_DCCP"];
"1000257" -> "1000542"  [label="DDG: req"];
"1000257" -> "1000255"  [label="DDG: sk"];
"1000257" -> "1000255"  [label="DDG: &fl6"];
"1000257" -> "1000255"  [label="DDG: req"];
"1000257" -> "1000255"  [label="DDG: IPPROTO_DCCP"];
"1000119" -> "1000257"  [label="DDG: req"];
"1000111" -> "1000257"  [label="DDG: req"];
"1000257" -> "1000537"  [label="DDG: sk"];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000119" -> "1000542"  [label="DDG: req"];
"1000119" -> "1000117"  [label="DDG: req"];
"1000111" -> "1000119"  [label="DDG: req"];
"1000119" -> "1000141"  [label="DDG: req"];
"1000111" -> "1000108"  [label="AST: "];
"1000111" -> "1000542"  [label="DDG: req"];
"1000111" -> "1000141"  [label="DDG: req"];
"1000110" -> "1000108"  [label="AST: "];
"1000110" -> "1000542"  [label="DDG: skb"];
"1000110" -> "1000141"  [label="DDG: skb"];
"1000110" -> "1000228"  [label="DDG: skb"];
"1000110" -> "1000235"  [label="DDG: skb"];
"1000110" -> "1000396"  [label="DDG: skb"];
"1000110" -> "1000403"  [label="DDG: skb"];
"1000264" -> "1000263"  [label="AST: "];
"1000264" -> "1000265"  [label="CFG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000266" -> "1000264"  [label="CFG: "];
"1000268" -> "1000264"  [label="CFG: "];
"1000264" -> "1000542"  [label="DDG: dst"];
"1000264" -> "1000542"  [label="DDG: !dst"];
"1000255" -> "1000264"  [label="DDG: dst"];
"1000112" -> "1000264"  [label="DDG: dst"];
"1000264" -> "1000533"  [label="DDG: dst"];
"1000255" -> "1000253"  [label="AST: "];
"1000256" -> "1000255"  [label="AST: "];
"1000265" -> "1000255"  [label="CFG: "];
"1000255" -> "1000542"  [label="DDG: inet6_csk_route_req(sk, &fl6, req, IPPROTO_DCCP)"];
"1000112" -> "1000255"  [label="DDG: dst"];
"1000112" -> "1000108"  [label="AST: "];
"1000112" -> "1000542"  [label="DDG: dst"];
"1000112" -> "1000141"  [label="DDG: dst"];
"1000112" -> "1000251"  [label="DDG: dst"];
"1000112" -> "1000455"  [label="DDG: dst"];
"1000112" -> "1000533"  [label="DDG: dst"];
"1000251" -> "1000250"  [label="AST: "];
"1000251" -> "1000252"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000256" -> "1000251"  [label="CFG: "];
"1000268" -> "1000251"  [label="CFG: "];
"1000251" -> "1000542"  [label="DDG: !dst"];
"1000251" -> "1000533"  [label="DDG: dst"];
"1000123" -> "1000115"  [label="AST: "];
"1000124" -> "1000123"  [label="AST: "];
"1000134" -> "1000123"  [label="CFG: "];
"1000123" -> "1000542"  [label="DDG: inet6_sk(sk)"];
"1000123" -> "1000542"  [label="DDG: np"];
"1000123" -> "1000175"  [label="DDG: np"];
}
