digraph "0_linux_83eaddab4378db256d00d295bda6ca997cd13a52@pointer" {
"1000406" [label="(Call,opt = ireq->ipv6_opt)"];
"1000412" [label="(Call,!opt)"];
"1000425" [label="(Call,ipv6_dup_options(newsk, opt))"];
"1000423" [label="(Call,opt = ipv6_dup_options(newsk, opt))"];
"1000428" [label="(Call,RCU_INIT_POINTER(newnp->opt, opt))"];
"1000435" [label="(Call,inet_csk(newsk))"];
"1000443" [label="(Call,inet_csk(newsk))"];
"1000453" [label="(Call,dccp_sync_mss(newsk, dst_mtu(dst)))"];
"1000473" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000472" [label="(Call,__inet_inherit_port(sk, newsk) < 0)"];
"1000478" [label="(Call,inet_csk_prepare_forced_close(newsk))"];
"1000480" [label="(Call,dccp_done(newsk))"];
"1000486" [label="(Call,inet_ehash_nolisten(newsk, req_to_sk(req_unhash)))"];
"1000483" [label="(Call,*own_req = inet_ehash_nolisten(newsk, req_to_sk(req_unhash)))"];
"1000491" [label="(Call,*own_req && ireq->pktopts)"];
"1000502" [label="(Call,skb_clone(ireq->pktopts, GFP_ATOMIC))"];
"1000498" [label="(Call,newnp->pktoptions = skb_clone(ireq->pktopts, GFP_ATOMIC))"];
"1000520" [label="(Call,skb_set_owner_r(newnp->pktoptions, newsk))"];
"1000525" [label="(Return,return newsk;)"];
"1000507" [label="(Call,consume_skb(ireq->pktopts))"];
"1000537" [label="(Call,sock_net(sk))"];
"1000536" [label="(Call,__NET_INC_STATS(sock_net(sk), LINUX_MIB_LISTENDROPS))"];
"1000471" [label="(ControlStructure,if (__inet_inherit_port(sk, newsk) < 0))"];
"1000421" [label="(Identifier,opt)"];
"1000109" [label="(MethodParameterIn,const struct sock *sk)"];
"1000473" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000443" [label="(Call,inet_csk(newsk))"];
"1000521" [label="(Call,newnp->pktoptions)"];
"1000423" [label="(Call,opt = ipv6_dup_options(newsk, opt))"];
"1000408" [label="(Call,ireq->ipv6_opt)"];
"1000474" [label="(Identifier,sk)"];
"1000483" [label="(Call,*own_req = inet_ehash_nolisten(newsk, req_to_sk(req_unhash)))"];
"1000493" [label="(Identifier,own_req)"];
"1000490" [label="(ControlStructure,if (*own_req && ireq->pktopts))"];
"1000526" [label="(Identifier,newsk)"];
"1000503" [label="(Call,ireq->pktopts)"];
"1000507" [label="(Call,consume_skb(ireq->pktopts))"];
"1000538" [label="(Identifier,sk)"];
"1000524" [label="(Identifier,newsk)"];
"1000412" [label="(Call,!opt)"];
"1000415" [label="(Identifier,opt)"];
"1000475" [label="(Identifier,newsk)"];
"1000513" [label="(Identifier,ireq)"];
"1000257" [label="(Call,inet6_csk_route_req(sk, &fl6, req, IPPROTO_DCCP))"];
"1000486" [label="(Call,inet_ehash_nolisten(newsk, req_to_sk(req_unhash)))"];
"1000485" [label="(Identifier,own_req)"];
"1000536" [label="(Call,__NET_INC_STATS(sock_net(sk), LINUX_MIB_LISTENDROPS))"];
"1000424" [label="(Identifier,opt)"];
"1000316" [label="(Call,inet6_sk(newsk))"];
"1000444" [label="(Identifier,newsk)"];
"1000506" [label="(Identifier,GFP_ATOMIC)"];
"1000427" [label="(Identifier,opt)"];
"1000520" [label="(Call,skb_set_owner_r(newnp->pktoptions, newsk))"];
"1000480" [label="(Call,dccp_done(newsk))"];
"1000411" [label="(ControlStructure,if (!opt))"];
"1000459" [label="(Identifier,newinet)"];
"1000539" [label="(Identifier,LINUX_MIB_LISTENDROPS)"];
"1000484" [label="(Call,*own_req)"];
"1000481" [label="(Identifier,newsk)"];
"1000482" [label="(ControlStructure,goto out;)"];
"1000509" [label="(Identifier,ireq)"];
"1000508" [label="(Call,ireq->pktopts)"];
"1000491" [label="(Call,*own_req && ireq->pktopts)"];
"1000478" [label="(Call,inet_csk_prepare_forced_close(newsk))"];
"1000492" [label="(Call,*own_req)"];
"1000499" [label="(Call,newnp->pktoptions)"];
"1000422" [label="(Block,)"];
"1000406" [label="(Call,opt = ireq->ipv6_opt)"];
"1000498" [label="(Call,newnp->pktoptions = skb_clone(ireq->pktopts, GFP_ATOMIC))"];
"1000477" [label="(Block,)"];
"1000455" [label="(Call,dst_mtu(dst))"];
"1000387" [label="(Call,newnp->opt\t  = NULL)"];
"1000476" [label="(Literal,0)"];
"1000488" [label="(Call,req_to_sk(req_unhash))"];
"1000541" [label="(Identifier,NULL)"];
"1000437" [label="(FieldIdentifier,icsk_ext_hdr_len)"];
"1000429" [label="(Call,newnp->opt)"];
"1000502" [label="(Call,skb_clone(ireq->pktopts, GFP_ATOMIC))"];
"1000537" [label="(Call,sock_net(sk))"];
"1000407" [label="(Identifier,opt)"];
"1000434" [label="(Call,inet_csk(newsk)->icsk_ext_hdr_len)"];
"1000413" [label="(Identifier,opt)"];
"1000479" [label="(Identifier,newsk)"];
"1000115" [label="(Block,)"];
"1000453" [label="(Call,dccp_sync_mss(newsk, dst_mtu(dst)))"];
"1000500" [label="(Identifier,newnp)"];
"1000529" [label="(Call,sock_net(sk))"];
"1000426" [label="(Identifier,newsk)"];
"1000525" [label="(Return,return newsk;)"];
"1000516" [label="(ControlStructure,if (newnp->pktoptions))"];
"1000435" [label="(Call,inet_csk(newsk))"];
"1000445" [label="(FieldIdentifier,icsk_ext_hdr_len)"];
"1000472" [label="(Call,__inet_inherit_port(sk, newsk) < 0)"];
"1000414" [label="(Call,opt = rcu_dereference(np->opt))"];
"1000442" [label="(Call,inet_csk(newsk)->icsk_ext_hdr_len)"];
"1000425" [label="(Call,ipv6_dup_options(newsk, opt))"];
"1000269" [label="(Call,dccp_create_openreq_child(sk, req, skb))"];
"1000542" [label="(MethodReturn,static struct sock *)"];
"1000454" [label="(Identifier,newsk)"];
"1000432" [label="(Identifier,opt)"];
"1000487" [label="(Identifier,newsk)"];
"1000497" [label="(Block,)"];
"1000428" [label="(Call,RCU_INIT_POINTER(newnp->opt, opt))"];
"1000436" [label="(Identifier,newsk)"];
"1000430" [label="(Identifier,newnp)"];
"1000494" [label="(Call,ireq->pktopts)"];
"1000406" -> "1000115"  [label="AST: "];
"1000406" -> "1000408"  [label="CFG: "];
"1000407" -> "1000406"  [label="AST: "];
"1000408" -> "1000406"  [label="AST: "];
"1000413" -> "1000406"  [label="CFG: "];
"1000406" -> "1000542"  [label="DDG: ireq->ipv6_opt"];
"1000406" -> "1000412"  [label="DDG: opt"];
"1000412" -> "1000411"  [label="AST: "];
"1000412" -> "1000413"  [label="CFG: "];
"1000413" -> "1000412"  [label="AST: "];
"1000415" -> "1000412"  [label="CFG: "];
"1000421" -> "1000412"  [label="CFG: "];
"1000412" -> "1000542"  [label="DDG: !opt"];
"1000412" -> "1000542"  [label="DDG: opt"];
"1000412" -> "1000425"  [label="DDG: opt"];
"1000425" -> "1000423"  [label="AST: "];
"1000425" -> "1000427"  [label="CFG: "];
"1000426" -> "1000425"  [label="AST: "];
"1000427" -> "1000425"  [label="AST: "];
"1000423" -> "1000425"  [label="CFG: "];
"1000425" -> "1000423"  [label="DDG: newsk"];
"1000425" -> "1000423"  [label="DDG: opt"];
"1000316" -> "1000425"  [label="DDG: newsk"];
"1000414" -> "1000425"  [label="DDG: opt"];
"1000425" -> "1000435"  [label="DDG: newsk"];
"1000423" -> "1000422"  [label="AST: "];
"1000424" -> "1000423"  [label="AST: "];
"1000430" -> "1000423"  [label="CFG: "];
"1000423" -> "1000542"  [label="DDG: ipv6_dup_options(newsk, opt)"];
"1000423" -> "1000428"  [label="DDG: opt"];
"1000428" -> "1000422"  [label="AST: "];
"1000428" -> "1000432"  [label="CFG: "];
"1000429" -> "1000428"  [label="AST: "];
"1000432" -> "1000428"  [label="AST: "];
"1000436" -> "1000428"  [label="CFG: "];
"1000428" -> "1000542"  [label="DDG: RCU_INIT_POINTER(newnp->opt, opt)"];
"1000428" -> "1000542"  [label="DDG: opt"];
"1000428" -> "1000542"  [label="DDG: newnp->opt"];
"1000387" -> "1000428"  [label="DDG: newnp->opt"];
"1000435" -> "1000434"  [label="AST: "];
"1000435" -> "1000436"  [label="CFG: "];
"1000436" -> "1000435"  [label="AST: "];
"1000437" -> "1000435"  [label="CFG: "];
"1000316" -> "1000435"  [label="DDG: newsk"];
"1000435" -> "1000443"  [label="DDG: newsk"];
"1000435" -> "1000453"  [label="DDG: newsk"];
"1000443" -> "1000442"  [label="AST: "];
"1000443" -> "1000444"  [label="CFG: "];
"1000444" -> "1000443"  [label="AST: "];
"1000445" -> "1000443"  [label="CFG: "];
"1000443" -> "1000453"  [label="DDG: newsk"];
"1000453" -> "1000115"  [label="AST: "];
"1000453" -> "1000455"  [label="CFG: "];
"1000454" -> "1000453"  [label="AST: "];
"1000455" -> "1000453"  [label="AST: "];
"1000459" -> "1000453"  [label="CFG: "];
"1000453" -> "1000542"  [label="DDG: dst_mtu(dst)"];
"1000453" -> "1000542"  [label="DDG: dccp_sync_mss(newsk, dst_mtu(dst))"];
"1000455" -> "1000453"  [label="DDG: dst"];
"1000453" -> "1000473"  [label="DDG: newsk"];
"1000473" -> "1000472"  [label="AST: "];
"1000473" -> "1000475"  [label="CFG: "];
"1000474" -> "1000473"  [label="AST: "];
"1000475" -> "1000473"  [label="AST: "];
"1000476" -> "1000473"  [label="CFG: "];
"1000473" -> "1000542"  [label="DDG: sk"];
"1000473" -> "1000472"  [label="DDG: sk"];
"1000473" -> "1000472"  [label="DDG: newsk"];
"1000269" -> "1000473"  [label="DDG: sk"];
"1000109" -> "1000473"  [label="DDG: sk"];
"1000473" -> "1000478"  [label="DDG: newsk"];
"1000473" -> "1000486"  [label="DDG: newsk"];
"1000473" -> "1000537"  [label="DDG: sk"];
"1000472" -> "1000471"  [label="AST: "];
"1000472" -> "1000476"  [label="CFG: "];
"1000476" -> "1000472"  [label="AST: "];
"1000479" -> "1000472"  [label="CFG: "];
"1000485" -> "1000472"  [label="CFG: "];
"1000472" -> "1000542"  [label="DDG: __inet_inherit_port(sk, newsk) < 0"];
"1000472" -> "1000542"  [label="DDG: __inet_inherit_port(sk, newsk)"];
"1000478" -> "1000477"  [label="AST: "];
"1000478" -> "1000479"  [label="CFG: "];
"1000479" -> "1000478"  [label="AST: "];
"1000481" -> "1000478"  [label="CFG: "];
"1000478" -> "1000542"  [label="DDG: inet_csk_prepare_forced_close(newsk)"];
"1000478" -> "1000480"  [label="DDG: newsk"];
"1000480" -> "1000477"  [label="AST: "];
"1000480" -> "1000481"  [label="CFG: "];
"1000481" -> "1000480"  [label="AST: "];
"1000482" -> "1000480"  [label="CFG: "];
"1000480" -> "1000542"  [label="DDG: dccp_done(newsk)"];
"1000480" -> "1000542"  [label="DDG: newsk"];
"1000486" -> "1000483"  [label="AST: "];
"1000486" -> "1000488"  [label="CFG: "];
"1000487" -> "1000486"  [label="AST: "];
"1000488" -> "1000486"  [label="AST: "];
"1000483" -> "1000486"  [label="CFG: "];
"1000486" -> "1000542"  [label="DDG: req_to_sk(req_unhash)"];
"1000486" -> "1000542"  [label="DDG: newsk"];
"1000486" -> "1000483"  [label="DDG: newsk"];
"1000486" -> "1000483"  [label="DDG: req_to_sk(req_unhash)"];
"1000488" -> "1000486"  [label="DDG: req_unhash"];
"1000486" -> "1000520"  [label="DDG: newsk"];
"1000486" -> "1000525"  [label="DDG: newsk"];
"1000483" -> "1000115"  [label="AST: "];
"1000484" -> "1000483"  [label="AST: "];
"1000493" -> "1000483"  [label="CFG: "];
"1000483" -> "1000542"  [label="DDG: inet_ehash_nolisten(newsk, req_to_sk(req_unhash))"];
"1000483" -> "1000491"  [label="DDG: *own_req"];
"1000491" -> "1000490"  [label="AST: "];
"1000491" -> "1000492"  [label="CFG: "];
"1000491" -> "1000494"  [label="CFG: "];
"1000492" -> "1000491"  [label="AST: "];
"1000494" -> "1000491"  [label="AST: "];
"1000500" -> "1000491"  [label="CFG: "];
"1000526" -> "1000491"  [label="CFG: "];
"1000491" -> "1000542"  [label="DDG: ireq->pktopts"];
"1000491" -> "1000542"  [label="DDG: *own_req && ireq->pktopts"];
"1000491" -> "1000542"  [label="DDG: *own_req"];
"1000491" -> "1000502"  [label="DDG: ireq->pktopts"];
"1000502" -> "1000498"  [label="AST: "];
"1000502" -> "1000506"  [label="CFG: "];
"1000503" -> "1000502"  [label="AST: "];
"1000506" -> "1000502"  [label="AST: "];
"1000498" -> "1000502"  [label="CFG: "];
"1000502" -> "1000542"  [label="DDG: GFP_ATOMIC"];
"1000502" -> "1000498"  [label="DDG: ireq->pktopts"];
"1000502" -> "1000498"  [label="DDG: GFP_ATOMIC"];
"1000502" -> "1000507"  [label="DDG: ireq->pktopts"];
"1000498" -> "1000497"  [label="AST: "];
"1000499" -> "1000498"  [label="AST: "];
"1000509" -> "1000498"  [label="CFG: "];
"1000498" -> "1000542"  [label="DDG: skb_clone(ireq->pktopts, GFP_ATOMIC)"];
"1000498" -> "1000542"  [label="DDG: newnp->pktoptions"];
"1000498" -> "1000520"  [label="DDG: newnp->pktoptions"];
"1000520" -> "1000516"  [label="AST: "];
"1000520" -> "1000524"  [label="CFG: "];
"1000521" -> "1000520"  [label="AST: "];
"1000524" -> "1000520"  [label="AST: "];
"1000526" -> "1000520"  [label="CFG: "];
"1000520" -> "1000542"  [label="DDG: skb_set_owner_r(newnp->pktoptions, newsk)"];
"1000520" -> "1000542"  [label="DDG: newsk"];
"1000520" -> "1000542"  [label="DDG: newnp->pktoptions"];
"1000520" -> "1000525"  [label="DDG: newsk"];
"1000525" -> "1000115"  [label="AST: "];
"1000525" -> "1000526"  [label="CFG: "];
"1000526" -> "1000525"  [label="AST: "];
"1000542" -> "1000525"  [label="CFG: "];
"1000525" -> "1000542"  [label="DDG: <RET>"];
"1000526" -> "1000525"  [label="DDG: newsk"];
"1000507" -> "1000497"  [label="AST: "];
"1000507" -> "1000508"  [label="CFG: "];
"1000508" -> "1000507"  [label="AST: "];
"1000513" -> "1000507"  [label="CFG: "];
"1000507" -> "1000542"  [label="DDG: consume_skb(ireq->pktopts)"];
"1000537" -> "1000536"  [label="AST: "];
"1000537" -> "1000538"  [label="CFG: "];
"1000538" -> "1000537"  [label="AST: "];
"1000539" -> "1000537"  [label="CFG: "];
"1000537" -> "1000542"  [label="DDG: sk"];
"1000537" -> "1000536"  [label="DDG: sk"];
"1000257" -> "1000537"  [label="DDG: sk"];
"1000529" -> "1000537"  [label="DDG: sk"];
"1000269" -> "1000537"  [label="DDG: sk"];
"1000109" -> "1000537"  [label="DDG: sk"];
"1000536" -> "1000115"  [label="AST: "];
"1000536" -> "1000539"  [label="CFG: "];
"1000539" -> "1000536"  [label="AST: "];
"1000541" -> "1000536"  [label="CFG: "];
"1000536" -> "1000542"  [label="DDG: __NET_INC_STATS(sock_net(sk), LINUX_MIB_LISTENDROPS)"];
"1000536" -> "1000542"  [label="DDG: LINUX_MIB_LISTENDROPS"];
"1000536" -> "1000542"  [label="DDG: sock_net(sk)"];
}
