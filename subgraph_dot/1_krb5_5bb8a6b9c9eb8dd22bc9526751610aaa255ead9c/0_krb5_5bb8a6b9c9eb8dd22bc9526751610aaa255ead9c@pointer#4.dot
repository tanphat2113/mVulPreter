digraph "0_krb5_5bb8a6b9c9eb8dd22bc9526751610aaa255ead9c@pointer" {
"1000253" [label="(Call,xdrmem_create(&xdrs, rqst->rq_cred.oa_base,\n\t\t      rqst->rq_cred.oa_length, XDR_DECODE))"];
"1000241" [label="(Call,log_debug(\"oa_base=%p, oa_length=%u\", rqst->rq_cred.oa_base,\n\t\t  rqst->rq_cred.oa_length))"];
"1000217" [label="(Call,rqst->rq_cred.oa_length <= 0)"];
"1000271" [label="(Call,xdr_rpc_gss_cred(&xdrs, gc))"];
"1000270" [label="(Call,!xdr_rpc_gss_cred(&xdrs, gc))"];
"1000278" [label="(Call,XDR_DESTROY(&xdrs))"];
"1000283" [label="(Call,XDR_DESTROY(&xdrs))"];
"1000624" [label="(Call,xdr_free(xdr_rpc_gss_cred, gc))"];
"1000285" [label="(Identifier,xdrs)"];
"1000278" [label="(Call,XDR_DESTROY(&xdrs))"];
"1000279" [label="(Call,&xdrs)"];
"1000242" [label="(Literal,\"oa_base=%p, oa_length=%u\")"];
"1000287" [label="(Identifier,retstat)"];
"1000243" [label="(Call,rqst->rq_cred.oa_base)"];
"1000223" [label="(Literal,0)"];
"1000256" [label="(Call,rqst->rq_cred.oa_base)"];
"1000270" [label="(Call,!xdr_rpc_gss_cred(&xdrs, gc))"];
"1000628" [label="(Literal,\"returning %d from svcauth_gss()\")"];
"1000284" [label="(Call,&xdrs)"];
"1000225" [label="(Identifier,AUTH_BADCRED)"];
"1000248" [label="(Call,rqst->rq_cred.oa_length)"];
"1000277" [label="(Literal,\"xdr_rpc_gss_cred() failed\")"];
"1000113" [label="(Block,)"];
"1000626" [label="(Identifier,gc)"];
"1000271" [label="(Call,xdr_rpc_gss_cred(&xdrs, gc))"];
"1000216" [label="(ControlStructure,if (rqst->rq_cred.oa_length <= 0))"];
"1000217" [label="(Call,rqst->rq_cred.oa_length <= 0)"];
"1000266" [label="(Identifier,XDR_DECODE)"];
"1000632" [label="(MethodReturn,RET)"];
"1000255" [label="(Identifier,xdrs)"];
"1000275" [label="(Block,)"];
"1000233" [label="(Call,memset(gc, 0, sizeof(*gc)))"];
"1000241" [label="(Call,log_debug(\"oa_base=%p, oa_length=%u\", rqst->rq_cred.oa_base,\n\t\t  rqst->rq_cred.oa_length))"];
"1000269" [label="(ControlStructure,if (!xdr_rpc_gss_cred(&xdrs, gc)))"];
"1000253" [label="(Call,xdrmem_create(&xdrs, rqst->rq_cred.oa_base,\n\t\t      rqst->rq_cred.oa_length, XDR_DECODE))"];
"1000282" [label="(Identifier,AUTH_BADCRED)"];
"1000272" [label="(Call,&xdrs)"];
"1000268" [label="(Literal,\"xdrmem_create() returned\")"];
"1000625" [label="(Identifier,xdr_rpc_gss_cred)"];
"1000283" [label="(Call,XDR_DESTROY(&xdrs))"];
"1000274" [label="(Identifier,gc)"];
"1000261" [label="(Call,rqst->rq_cred.oa_length)"];
"1000218" [label="(Call,rqst->rq_cred.oa_length)"];
"1000624" [label="(Call,xdr_free(xdr_rpc_gss_cred, gc))"];
"1000227" [label="(Identifier,gc)"];
"1000254" [label="(Call,&xdrs)"];
"1000253" -> "1000113"  [label="AST: "];
"1000253" -> "1000266"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000256" -> "1000253"  [label="AST: "];
"1000261" -> "1000253"  [label="AST: "];
"1000266" -> "1000253"  [label="AST: "];
"1000268" -> "1000253"  [label="CFG: "];
"1000253" -> "1000632"  [label="DDG: "];
"1000253" -> "1000632"  [label="DDG: "];
"1000253" -> "1000632"  [label="DDG: "];
"1000253" -> "1000632"  [label="DDG: "];
"1000241" -> "1000253"  [label="DDG: "];
"1000241" -> "1000253"  [label="DDG: "];
"1000253" -> "1000271"  [label="DDG: "];
"1000241" -> "1000113"  [label="AST: "];
"1000241" -> "1000248"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="AST: "];
"1000248" -> "1000241"  [label="AST: "];
"1000255" -> "1000241"  [label="CFG: "];
"1000241" -> "1000632"  [label="DDG: "];
"1000217" -> "1000241"  [label="DDG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000217" -> "1000223"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000223" -> "1000217"  [label="AST: "];
"1000225" -> "1000217"  [label="CFG: "];
"1000227" -> "1000217"  [label="CFG: "];
"1000217" -> "1000632"  [label="DDG: "];
"1000217" -> "1000632"  [label="DDG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000271" -> "1000274"  [label="CFG: "];
"1000272" -> "1000271"  [label="AST: "];
"1000274" -> "1000271"  [label="AST: "];
"1000270" -> "1000271"  [label="CFG: "];
"1000271" -> "1000632"  [label="DDG: "];
"1000271" -> "1000270"  [label="DDG: "];
"1000271" -> "1000270"  [label="DDG: "];
"1000233" -> "1000271"  [label="DDG: "];
"1000271" -> "1000278"  [label="DDG: "];
"1000271" -> "1000283"  [label="DDG: "];
"1000271" -> "1000624"  [label="DDG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000277" -> "1000270"  [label="CFG: "];
"1000285" -> "1000270"  [label="CFG: "];
"1000270" -> "1000632"  [label="DDG: "];
"1000270" -> "1000632"  [label="DDG: "];
"1000278" -> "1000275"  [label="AST: "];
"1000278" -> "1000279"  [label="CFG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000282" -> "1000278"  [label="CFG: "];
"1000278" -> "1000632"  [label="DDG: "];
"1000278" -> "1000632"  [label="DDG: "];
"1000283" -> "1000113"  [label="AST: "];
"1000283" -> "1000284"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000287" -> "1000283"  [label="CFG: "];
"1000283" -> "1000632"  [label="DDG: "];
"1000283" -> "1000632"  [label="DDG: "];
"1000624" -> "1000113"  [label="AST: "];
"1000624" -> "1000626"  [label="CFG: "];
"1000625" -> "1000624"  [label="AST: "];
"1000626" -> "1000624"  [label="AST: "];
"1000628" -> "1000624"  [label="CFG: "];
"1000624" -> "1000632"  [label="DDG: "];
"1000624" -> "1000632"  [label="DDG: "];
"1000624" -> "1000632"  [label="DDG: "];
}
