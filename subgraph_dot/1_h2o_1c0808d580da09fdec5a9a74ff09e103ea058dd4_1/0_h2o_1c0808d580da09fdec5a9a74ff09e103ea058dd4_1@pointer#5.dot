digraph "0_h2o_1c0808d580da09fdec5a9a74ff09e103ea058dd4_1@pointer" {
"1000194" [label="(Call,(uint8_t *)conn->sock->input->bytes)"];
"1000192" [label="(Call,conn->_read_expect(conn, (uint8_t *)conn->sock->input->bytes, conn->sock->input->size, &err_desc))"];
"1000152" [label="(Call,conn->sock->input->size != 0)"];
"1000146" [label="(Call,conn->state < H2O_HTTP2_CONN_STATE_IS_CLOSING && conn->sock->input->size != 0)"];
"1000190" [label="(Call,ret = conn->_read_expect(conn, (uint8_t *)conn->sock->input->bytes, conn->sock->input->size, &err_desc))"];
"1000213" [label="(Call,ret == H2O_HTTP2_ERROR_INCOMPLETE)"];
"1000220" [label="(Call,ret < 0)"];
"1000225" [label="(Call,ret != H2O_HTTP2_ERROR_PROTOCOL_CLOSE_IMMEDIATELY)"];
"1000234" [label="(Call,h2o_buffer_consume(&conn->sock->input, ret))"];
"1000231" [label="(Call,close_connection(conn))"];
"1000246" [label="(Identifier,conn)"];
"1000226" [label="(Identifier,ret)"];
"1000153" [label="(Call,conn->sock->input->size)"];
"1000235" [label="(Call,&conn->sock->input)"];
"1000227" [label="(Identifier,H2O_HTTP2_ERROR_PROTOCOL_CLOSE_IMMEDIATELY)"];
"1000203" [label="(Call,conn->sock->input->size)"];
"1000161" [label="(Block,)"];
"1000223" [label="(Block,)"];
"1000206" [label="(Identifier,conn)"];
"1000192" [label="(Call,conn->_read_expect(conn, (uint8_t *)conn->sock->input->bytes, conn->sock->input->size, &err_desc))"];
"1000233" [label="(Return,return;)"];
"1000219" [label="(ControlStructure,if (ret < 0))"];
"1000147" [label="(Call,conn->state < H2O_HTTP2_CONN_STATE_IS_CLOSING)"];
"1000160" [label="(Literal,0)"];
"1000232" [label="(Identifier,conn)"];
"1000165" [label="(Identifier,perform_early_exit)"];
"1000222" [label="(Literal,0)"];
"1000221" [label="(Identifier,ret)"];
"1000145" [label="(ControlStructure,while (conn->state < H2O_HTTP2_CONN_STATE_IS_CLOSING && conn->sock->input->size != 0))"];
"1000149" [label="(Identifier,conn)"];
"1000220" [label="(Call,ret < 0)"];
"1000104" [label="(MethodParameterIn,h2o_http2_conn_t *conn)"];
"1000193" [label="(Identifier,conn)"];
"1000152" [label="(Call,conn->sock->input->size != 0)"];
"1000238" [label="(Identifier,conn)"];
"1000196" [label="(Call,conn->sock->input->bytes)"];
"1000225" [label="(Call,ret != H2O_HTTP2_ERROR_PROTOCOL_CLOSE_IMMEDIATELY)"];
"1000231" [label="(Call,close_connection(conn))"];
"1000241" [label="(Identifier,ret)"];
"1000214" [label="(Identifier,ret)"];
"1000212" [label="(ControlStructure,if (ret == H2O_HTTP2_ERROR_INCOMPLETE))"];
"1000217" [label="(ControlStructure,break;)"];
"1000234" [label="(Call,h2o_buffer_consume(&conn->sock->input, ret))"];
"1000191" [label="(Identifier,ret)"];
"1000224" [label="(ControlStructure,if (ret != H2O_HTTP2_ERROR_PROTOCOL_CLOSE_IMMEDIATELY))"];
"1000264" [label="(MethodReturn,static void)"];
"1000146" [label="(Call,conn->state < H2O_HTTP2_CONN_STATE_IS_CLOSING && conn->sock->input->size != 0)"];
"1000213" [label="(Call,ret == H2O_HTTP2_ERROR_INCOMPLETE)"];
"1000194" [label="(Call,(uint8_t *)conn->sock->input->bytes)"];
"1000190" [label="(Call,ret = conn->_read_expect(conn, (uint8_t *)conn->sock->input->bytes, conn->sock->input->size, &err_desc))"];
"1000210" [label="(Call,&err_desc)"];
"1000215" [label="(Identifier,H2O_HTTP2_ERROR_INCOMPLETE)"];
"1000194" -> "1000192"  [label="AST: "];
"1000194" -> "1000196"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000196" -> "1000194"  [label="AST: "];
"1000206" -> "1000194"  [label="CFG: "];
"1000194" -> "1000264"  [label="DDG: conn->sock->input->bytes"];
"1000194" -> "1000192"  [label="DDG: conn->sock->input->bytes"];
"1000192" -> "1000190"  [label="AST: "];
"1000192" -> "1000210"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000203" -> "1000192"  [label="AST: "];
"1000210" -> "1000192"  [label="AST: "];
"1000190" -> "1000192"  [label="CFG: "];
"1000192" -> "1000264"  [label="DDG: (uint8_t *)conn->sock->input->bytes"];
"1000192" -> "1000264"  [label="DDG: &err_desc"];
"1000192" -> "1000264"  [label="DDG: conn->sock->input->size"];
"1000192" -> "1000264"  [label="DDG: conn"];
"1000192" -> "1000152"  [label="DDG: conn->sock->input->size"];
"1000192" -> "1000190"  [label="DDG: conn"];
"1000192" -> "1000190"  [label="DDG: (uint8_t *)conn->sock->input->bytes"];
"1000192" -> "1000190"  [label="DDG: conn->sock->input->size"];
"1000192" -> "1000190"  [label="DDG: &err_desc"];
"1000104" -> "1000192"  [label="DDG: conn"];
"1000152" -> "1000192"  [label="DDG: conn->sock->input->size"];
"1000192" -> "1000231"  [label="DDG: conn"];
"1000152" -> "1000146"  [label="AST: "];
"1000152" -> "1000160"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000160" -> "1000152"  [label="AST: "];
"1000146" -> "1000152"  [label="CFG: "];
"1000152" -> "1000264"  [label="DDG: conn->sock->input->size"];
"1000152" -> "1000146"  [label="DDG: conn->sock->input->size"];
"1000152" -> "1000146"  [label="DDG: 0"];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000147"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000165" -> "1000146"  [label="CFG: "];
"1000246" -> "1000146"  [label="CFG: "];
"1000146" -> "1000264"  [label="DDG: conn->sock->input->size != 0"];
"1000146" -> "1000264"  [label="DDG: conn->state < H2O_HTTP2_CONN_STATE_IS_CLOSING && conn->sock->input->size != 0"];
"1000146" -> "1000264"  [label="DDG: conn->state < H2O_HTTP2_CONN_STATE_IS_CLOSING"];
"1000147" -> "1000146"  [label="DDG: conn->state"];
"1000147" -> "1000146"  [label="DDG: H2O_HTTP2_CONN_STATE_IS_CLOSING"];
"1000190" -> "1000161"  [label="AST: "];
"1000191" -> "1000190"  [label="AST: "];
"1000214" -> "1000190"  [label="CFG: "];
"1000190" -> "1000264"  [label="DDG: conn->_read_expect(conn, (uint8_t *)conn->sock->input->bytes, conn->sock->input->size, &err_desc)"];
"1000190" -> "1000213"  [label="DDG: ret"];
"1000213" -> "1000212"  [label="AST: "];
"1000213" -> "1000215"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000215" -> "1000213"  [label="AST: "];
"1000217" -> "1000213"  [label="CFG: "];
"1000221" -> "1000213"  [label="CFG: "];
"1000213" -> "1000264"  [label="DDG: ret"];
"1000213" -> "1000264"  [label="DDG: ret == H2O_HTTP2_ERROR_INCOMPLETE"];
"1000213" -> "1000264"  [label="DDG: H2O_HTTP2_ERROR_INCOMPLETE"];
"1000213" -> "1000220"  [label="DDG: ret"];
"1000220" -> "1000219"  [label="AST: "];
"1000220" -> "1000222"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000222" -> "1000220"  [label="AST: "];
"1000226" -> "1000220"  [label="CFG: "];
"1000238" -> "1000220"  [label="CFG: "];
"1000220" -> "1000264"  [label="DDG: ret < 0"];
"1000220" -> "1000225"  [label="DDG: ret"];
"1000220" -> "1000234"  [label="DDG: ret"];
"1000225" -> "1000224"  [label="AST: "];
"1000225" -> "1000227"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000227" -> "1000225"  [label="AST: "];
"1000232" -> "1000225"  [label="CFG: "];
"1000225" -> "1000264"  [label="DDG: ret"];
"1000225" -> "1000264"  [label="DDG: ret != H2O_HTTP2_ERROR_PROTOCOL_CLOSE_IMMEDIATELY"];
"1000225" -> "1000264"  [label="DDG: H2O_HTTP2_ERROR_PROTOCOL_CLOSE_IMMEDIATELY"];
"1000234" -> "1000161"  [label="AST: "];
"1000234" -> "1000241"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000241" -> "1000234"  [label="AST: "];
"1000149" -> "1000234"  [label="CFG: "];
"1000234" -> "1000264"  [label="DDG: &conn->sock->input"];
"1000234" -> "1000264"  [label="DDG: h2o_buffer_consume(&conn->sock->input, ret)"];
"1000234" -> "1000264"  [label="DDG: ret"];
"1000231" -> "1000223"  [label="AST: "];
"1000231" -> "1000232"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000233" -> "1000231"  [label="CFG: "];
"1000231" -> "1000264"  [label="DDG: close_connection(conn)"];
"1000231" -> "1000264"  [label="DDG: conn"];
"1000104" -> "1000231"  [label="DDG: conn"];
}
