digraph "0_firejail_eecf35c2f8249489a1d3e512bb07f0d427183134@API" {
"1000187" [label="(Call,fclose(fp))"];
"1000168" [label="(Call,fgets(buf, MAXBUF, fp))"];
"1000185" [label="(Call,fslib_duplicate(buf))"];
"1000176" [label="(Call,strchr(buf, '\n'))"];
"1000162" [label="(Call,!fp)"];
"1000156" [label="(Call,*fp = fopen(RUN_LIB_FILE, \"r\"))"];
"1000158" [label="(Call,fopen(RUN_LIB_FILE, \"r\"))"];
"1000145" [label="(Call,sbox_run(SBOX_USER | SBOX_SECCOMP | SBOX_CAPS_NONE, 3, PATH_FLDD, full_path, RUN_LIB_FILE))"];
"1000146" [label="(Call,SBOX_USER | SBOX_SECCOMP | SBOX_CAPS_NONE)"];
"1000148" [label="(Call,SBOX_SECCOMP | SBOX_CAPS_NONE)"];
"1000142" [label="(Call,printf(\"    running fldd %s\n\", full_path))"];
"1000114" [label="(Call,access(full_path, R_OK))"];
"1000104" [label="(Call,assert(full_path))"];
"1000102" [label="(MethodParameterIn,const char *full_path)"];
"1000110" [label="(Call,printf(\"    fslib_copy_libs %s\n\", full_path))"];
"1000132" [label="(Call,chown(RUN_LIB_FILE, getuid(), getgid()))"];
"1000128" [label="(Call,create_empty_file_as_root(RUN_LIB_FILE, 0644))"];
"1000126" [label="(Call,unlink(RUN_LIB_FILE))"];
"1000157" [label="(Identifier,fp)"];
"1000188" [label="(Identifier,fp)"];
"1000190" [label="(Identifier,RUN_LIB_FILE)"];
"1000170" [label="(Identifier,MAXBUF)"];
"1000127" [label="(Identifier,RUN_LIB_FILE)"];
"1000116" [label="(Identifier,R_OK)"];
"1000112" [label="(Identifier,full_path)"];
"1000151" [label="(Literal,3)"];
"1000174" [label="(Call,*ptr = strchr(buf, '\n'))"];
"1000158" [label="(Call,fopen(RUN_LIB_FILE, \"r\"))"];
"1000187" [label="(Call,fclose(fp))"];
"1000148" [label="(Call,SBOX_SECCOMP | SBOX_CAPS_NONE)"];
"1000144" [label="(Identifier,full_path)"];
"1000129" [label="(Identifier,RUN_LIB_FILE)"];
"1000114" [label="(Call,access(full_path, R_OK))"];
"1000126" [label="(Call,unlink(RUN_LIB_FILE))"];
"1000178" [label="(Literal,'\n')"];
"1000159" [label="(Identifier,RUN_LIB_FILE)"];
"1000138" [label="(ControlStructure,if (arg_debug || arg_debug_private_lib))"];
"1000186" [label="(Identifier,buf)"];
"1000142" [label="(Call,printf(\"    running fldd %s\n\", full_path))"];
"1000105" [label="(Identifier,full_path)"];
"1000113" [label="(ControlStructure,if (access(full_path, R_OK)))"];
"1000169" [label="(Identifier,buf)"];
"1000185" [label="(Call,fslib_duplicate(buf))"];
"1000102" [label="(MethodParameterIn,const char *full_path)"];
"1000110" [label="(Call,printf(\"    fslib_copy_libs %s\n\", full_path))"];
"1000152" [label="(Identifier,PATH_FLDD)"];
"1000115" [label="(Identifier,full_path)"];
"1000133" [label="(Identifier,RUN_LIB_FILE)"];
"1000134" [label="(Call,getuid())"];
"1000162" [label="(Call,!fp)"];
"1000137" [label="(Literal,\"chown\")"];
"1000176" [label="(Call,strchr(buf, '\n'))"];
"1000189" [label="(Call,unlink(RUN_LIB_FILE))"];
"1000149" [label="(Identifier,SBOX_SECCOMP)"];
"1000111" [label="(Literal,\"    fslib_copy_libs %s\n\")"];
"1000135" [label="(Call,getgid())"];
"1000108" [label="(Identifier,arg_debug)"];
"1000140" [label="(Identifier,arg_debug)"];
"1000172" [label="(Block,)"];
"1000128" [label="(Call,create_empty_file_as_root(RUN_LIB_FILE, 0644))"];
"1000165" [label="(Literal,\"fopen\")"];
"1000104" [label="(Call,assert(full_path))"];
"1000171" [label="(Identifier,fp)"];
"1000120" [label="(Identifier,arg_debug)"];
"1000161" [label="(ControlStructure,if (!fp))"];
"1000163" [label="(Identifier,fp)"];
"1000143" [label="(Literal,\"    running fldd %s\n\")"];
"1000150" [label="(Identifier,SBOX_CAPS_NONE)"];
"1000122" [label="(Call,printf(\"cannot find %s for private-lib, skipping...\n\", full_path))"];
"1000106" [label="(ControlStructure,if (arg_debug || arg_debug_private_lib))"];
"1000131" [label="(ControlStructure,if (chown(RUN_LIB_FILE, getuid(), getgid())))"];
"1000156" [label="(Call,*fp = fopen(RUN_LIB_FILE, \"r\"))"];
"1000167" [label="(ControlStructure,while (fgets(buf, MAXBUF, fp)))"];
"1000145" [label="(Call,sbox_run(SBOX_USER | SBOX_SECCOMP | SBOX_CAPS_NONE, 3, PATH_FLDD, full_path, RUN_LIB_FILE))"];
"1000191" [label="(MethodReturn,void)"];
"1000147" [label="(Identifier,SBOX_USER)"];
"1000177" [label="(Identifier,buf)"];
"1000132" [label="(Call,chown(RUN_LIB_FILE, getuid(), getgid()))"];
"1000160" [label="(Literal,\"r\")"];
"1000103" [label="(Block,)"];
"1000175" [label="(Identifier,ptr)"];
"1000146" [label="(Call,SBOX_USER | SBOX_SECCOMP | SBOX_CAPS_NONE)"];
"1000153" [label="(Identifier,full_path)"];
"1000130" [label="(Literal,0644)"];
"1000154" [label="(Identifier,RUN_LIB_FILE)"];
"1000168" [label="(Call,fgets(buf, MAXBUF, fp))"];
"1000187" -> "1000103"  [label="AST: "];
"1000187" -> "1000188"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000190" -> "1000187"  [label="CFG: "];
"1000187" -> "1000191"  [label="DDG: "];
"1000187" -> "1000191"  [label="DDG: "];
"1000168" -> "1000187"  [label="DDG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000168" -> "1000171"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000171" -> "1000168"  [label="AST: "];
"1000175" -> "1000168"  [label="CFG: "];
"1000188" -> "1000168"  [label="CFG: "];
"1000168" -> "1000191"  [label="DDG: "];
"1000168" -> "1000191"  [label="DDG: "];
"1000168" -> "1000191"  [label="DDG: "];
"1000185" -> "1000168"  [label="DDG: "];
"1000162" -> "1000168"  [label="DDG: "];
"1000168" -> "1000176"  [label="DDG: "];
"1000185" -> "1000172"  [label="AST: "];
"1000185" -> "1000186"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000169" -> "1000185"  [label="CFG: "];
"1000185" -> "1000191"  [label="DDG: "];
"1000176" -> "1000185"  [label="DDG: "];
"1000176" -> "1000174"  [label="AST: "];
"1000176" -> "1000178"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000178" -> "1000176"  [label="AST: "];
"1000174" -> "1000176"  [label="CFG: "];
"1000176" -> "1000174"  [label="DDG: "];
"1000176" -> "1000174"  [label="DDG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000162" -> "1000163"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000165" -> "1000162"  [label="CFG: "];
"1000169" -> "1000162"  [label="CFG: "];
"1000162" -> "1000191"  [label="DDG: "];
"1000156" -> "1000162"  [label="DDG: "];
"1000156" -> "1000103"  [label="AST: "];
"1000156" -> "1000158"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000158" -> "1000156"  [label="AST: "];
"1000163" -> "1000156"  [label="CFG: "];
"1000156" -> "1000191"  [label="DDG: "];
"1000158" -> "1000156"  [label="DDG: "];
"1000158" -> "1000156"  [label="DDG: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000145" -> "1000158"  [label="DDG: "];
"1000158" -> "1000189"  [label="DDG: "];
"1000145" -> "1000103"  [label="AST: "];
"1000145" -> "1000154"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000151" -> "1000145"  [label="AST: "];
"1000152" -> "1000145"  [label="AST: "];
"1000153" -> "1000145"  [label="AST: "];
"1000154" -> "1000145"  [label="AST: "];
"1000157" -> "1000145"  [label="CFG: "];
"1000145" -> "1000191"  [label="DDG: "];
"1000145" -> "1000191"  [label="DDG: "];
"1000145" -> "1000191"  [label="DDG: "];
"1000145" -> "1000191"  [label="DDG: "];
"1000146" -> "1000145"  [label="DDG: "];
"1000146" -> "1000145"  [label="DDG: "];
"1000142" -> "1000145"  [label="DDG: "];
"1000114" -> "1000145"  [label="DDG: "];
"1000102" -> "1000145"  [label="DDG: "];
"1000132" -> "1000145"  [label="DDG: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000151" -> "1000146"  [label="CFG: "];
"1000146" -> "1000191"  [label="DDG: "];
"1000146" -> "1000191"  [label="DDG: "];
"1000148" -> "1000146"  [label="DDG: "];
"1000148" -> "1000146"  [label="DDG: "];
"1000148" -> "1000150"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000150" -> "1000148"  [label="AST: "];
"1000148" -> "1000191"  [label="DDG: "];
"1000148" -> "1000191"  [label="DDG: "];
"1000142" -> "1000138"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000147" -> "1000142"  [label="CFG: "];
"1000142" -> "1000191"  [label="DDG: "];
"1000114" -> "1000142"  [label="DDG: "];
"1000102" -> "1000142"  [label="DDG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000116"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000120" -> "1000114"  [label="CFG: "];
"1000127" -> "1000114"  [label="CFG: "];
"1000114" -> "1000191"  [label="DDG: "];
"1000114" -> "1000191"  [label="DDG: "];
"1000114" -> "1000191"  [label="DDG: "];
"1000104" -> "1000114"  [label="DDG: "];
"1000110" -> "1000114"  [label="DDG: "];
"1000102" -> "1000114"  [label="DDG: "];
"1000114" -> "1000122"  [label="DDG: "];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000105"  [label="CFG: "];
"1000105" -> "1000104"  [label="AST: "];
"1000108" -> "1000104"  [label="CFG: "];
"1000104" -> "1000191"  [label="DDG: "];
"1000102" -> "1000104"  [label="DDG: "];
"1000104" -> "1000110"  [label="DDG: "];
"1000102" -> "1000101"  [label="AST: "];
"1000102" -> "1000191"  [label="DDG: "];
"1000102" -> "1000110"  [label="DDG: "];
"1000102" -> "1000122"  [label="DDG: "];
"1000110" -> "1000106"  [label="AST: "];
"1000110" -> "1000112"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000112" -> "1000110"  [label="AST: "];
"1000115" -> "1000110"  [label="CFG: "];
"1000110" -> "1000191"  [label="DDG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000135"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="AST: "];
"1000135" -> "1000132"  [label="AST: "];
"1000137" -> "1000132"  [label="CFG: "];
"1000140" -> "1000132"  [label="CFG: "];
"1000132" -> "1000191"  [label="DDG: "];
"1000132" -> "1000191"  [label="DDG: "];
"1000132" -> "1000191"  [label="DDG: "];
"1000128" -> "1000132"  [label="DDG: "];
"1000128" -> "1000103"  [label="AST: "];
"1000128" -> "1000130"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000128"  [label="AST: "];
"1000133" -> "1000128"  [label="CFG: "];
"1000128" -> "1000191"  [label="DDG: "];
"1000126" -> "1000128"  [label="DDG: "];
"1000126" -> "1000103"  [label="AST: "];
"1000126" -> "1000127"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000129" -> "1000126"  [label="CFG: "];
}
