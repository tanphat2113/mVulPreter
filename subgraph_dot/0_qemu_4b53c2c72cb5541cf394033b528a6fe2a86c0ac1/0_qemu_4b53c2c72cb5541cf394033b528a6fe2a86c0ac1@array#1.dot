digraph "0_qemu_4b53c2c72cb5541cf394033b528a6fe2a86c0ac1@array" {
"1000305" [label="(Call,vring_avail_idx(&vdev->vq[i]))"];
"1000295" [label="(Call,virtqueue_init(&vdev->vq[i]))"];
"1000305" [label="(Call,vring_avail_idx(&vdev->vq[i]))"];
"1000304" [label="(Call,vring_avail_idx(&vdev->vq[i]) - vdev->vq[i].last_avail_idx)"];
"1000302" [label="(Call,nheads = vring_avail_idx(&vdev->vq[i]) - vdev->vq[i].last_avail_idx)"];
"1000320" [label="(Call,nheads > vdev->vq[i].vring.num)"];
"1000332" [label="(Call,error_report(\"VQ %d size 0x%x Guest index 0x%x \"\n                             \"inconsistent with Host index 0x%x: delta 0x%x\",\n                             i, vdev->vq[i].vring.num,\n                             vring_avail_idx(&vdev->vq[i]),\n                             vdev->vq[i].last_avail_idx, nheads))"];
"1000372" [label="(Call,error_report(\"VQ %d address 0x0 \"\n                         \"inconsistent with Host index 0x%x\",\n                         i, vdev->vq[i].last_avail_idx))"];
"1000344" [label="(Call,vring_avail_idx(&vdev->vq[i]))"];
"1000334" [label="(Identifier,i)"];
"1000375" [label="(Call,vdev->vq[i].last_avail_idx)"];
"1000373" [label="(Literal,\"VQ %d address 0x0 \"\n                         \"inconsistent with Host index 0x%x\")"];
"1000374" [label="(Identifier,i)"];
"1000303" [label="(Identifier,nheads)"];
"1000371" [label="(Block,)"];
"1000354" [label="(Identifier,vdev)"];
"1000351" [label="(Call,vdev->vq[i].last_avail_idx)"];
"1000320" [label="(Call,nheads > vdev->vq[i].vring.num)"];
"1000296" [label="(Call,&vdev->vq[i])"];
"1000331" [label="(Block,)"];
"1000407" [label="(MethodReturn,int)"];
"1000358" [label="(Identifier,nheads)"];
"1000387" [label="(Identifier,k)"];
"1000315" [label="(Identifier,vdev)"];
"1000321" [label="(Identifier,nheads)"];
"1000305" [label="(Call,vring_avail_idx(&vdev->vq[i]))"];
"1000345" [label="(Call,&vdev->vq[i])"];
"1000293" [label="(Block,)"];
"1000319" [label="(ControlStructure,if (nheads > vdev->vq[i].vring.num))"];
"1000361" [label="(Literal,1)"];
"1000304" [label="(Call,vring_avail_idx(&vdev->vq[i]) - vdev->vq[i].last_avail_idx)"];
"1000212" [label="(Call,i < num)"];
"1000372" [label="(Call,error_report(\"VQ %d address 0x0 \"\n                         \"inconsistent with Host index 0x%x\",\n                         i, vdev->vq[i].last_avail_idx))"];
"1000335" [label="(Call,vdev->vq[i].vring.num)"];
"1000302" [label="(Call,nheads = vring_avail_idx(&vdev->vq[i]) - vdev->vq[i].last_avail_idx)"];
"1000322" [label="(Call,vdev->vq[i].vring.num)"];
"1000333" [label="(Literal,\"VQ %d size 0x%x Guest index 0x%x \"\n                             \"inconsistent with Host index 0x%x: delta 0x%x\")"];
"1000312" [label="(Call,vdev->vq[i].last_avail_idx)"];
"1000295" [label="(Call,virtqueue_init(&vdev->vq[i]))"];
"1000218" [label="(Call,vdev->vq[i].vring.num = qemu_get_be32(f))"];
"1000344" [label="(Call,vring_avail_idx(&vdev->vq[i]))"];
"1000332" [label="(Call,error_report(\"VQ %d size 0x%x Guest index 0x%x \"\n                             \"inconsistent with Host index 0x%x: delta 0x%x\",\n                             i, vdev->vq[i].vring.num,\n                             vring_avail_idx(&vdev->vq[i]),\n                             vdev->vq[i].last_avail_idx, nheads))"];
"1000306" [label="(Call,&vdev->vq[i])"];
"1000384" [label="(Literal,1)"];
"1000305" -> "1000304"  [label="AST: "];
"1000305" -> "1000306"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000315" -> "1000305"  [label="CFG: "];
"1000305" -> "1000407"  [label="DDG: "];
"1000305" -> "1000295"  [label="DDG: "];
"1000305" -> "1000304"  [label="DDG: "];
"1000295" -> "1000305"  [label="DDG: "];
"1000305" -> "1000344"  [label="DDG: "];
"1000295" -> "1000293"  [label="AST: "];
"1000295" -> "1000296"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000303" -> "1000295"  [label="CFG: "];
"1000295" -> "1000407"  [label="DDG: "];
"1000304" -> "1000302"  [label="AST: "];
"1000304" -> "1000312"  [label="CFG: "];
"1000312" -> "1000304"  [label="AST: "];
"1000302" -> "1000304"  [label="CFG: "];
"1000304" -> "1000407"  [label="DDG: "];
"1000304" -> "1000407"  [label="DDG: "];
"1000304" -> "1000302"  [label="DDG: "];
"1000304" -> "1000302"  [label="DDG: "];
"1000304" -> "1000332"  [label="DDG: "];
"1000304" -> "1000372"  [label="DDG: "];
"1000302" -> "1000293"  [label="AST: "];
"1000303" -> "1000302"  [label="AST: "];
"1000321" -> "1000302"  [label="CFG: "];
"1000302" -> "1000407"  [label="DDG: "];
"1000302" -> "1000320"  [label="DDG: "];
"1000320" -> "1000319"  [label="AST: "];
"1000320" -> "1000322"  [label="CFG: "];
"1000321" -> "1000320"  [label="AST: "];
"1000322" -> "1000320"  [label="AST: "];
"1000333" -> "1000320"  [label="CFG: "];
"1000387" -> "1000320"  [label="CFG: "];
"1000320" -> "1000407"  [label="DDG: "];
"1000320" -> "1000407"  [label="DDG: "];
"1000320" -> "1000407"  [label="DDG: "];
"1000218" -> "1000320"  [label="DDG: "];
"1000320" -> "1000332"  [label="DDG: "];
"1000320" -> "1000332"  [label="DDG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000332" -> "1000358"  [label="CFG: "];
"1000333" -> "1000332"  [label="AST: "];
"1000334" -> "1000332"  [label="AST: "];
"1000335" -> "1000332"  [label="AST: "];
"1000344" -> "1000332"  [label="AST: "];
"1000351" -> "1000332"  [label="AST: "];
"1000358" -> "1000332"  [label="AST: "];
"1000361" -> "1000332"  [label="CFG: "];
"1000332" -> "1000407"  [label="DDG: "];
"1000332" -> "1000407"  [label="DDG: "];
"1000332" -> "1000407"  [label="DDG: "];
"1000332" -> "1000407"  [label="DDG: "];
"1000332" -> "1000407"  [label="DDG: "];
"1000332" -> "1000407"  [label="DDG: "];
"1000212" -> "1000332"  [label="DDG: "];
"1000344" -> "1000332"  [label="DDG: "];
"1000372" -> "1000371"  [label="AST: "];
"1000372" -> "1000375"  [label="CFG: "];
"1000373" -> "1000372"  [label="AST: "];
"1000374" -> "1000372"  [label="AST: "];
"1000375" -> "1000372"  [label="AST: "];
"1000384" -> "1000372"  [label="CFG: "];
"1000372" -> "1000407"  [label="DDG: "];
"1000372" -> "1000407"  [label="DDG: "];
"1000372" -> "1000407"  [label="DDG: "];
"1000212" -> "1000372"  [label="DDG: "];
"1000344" -> "1000345"  [label="CFG: "];
"1000345" -> "1000344"  [label="AST: "];
"1000354" -> "1000344"  [label="CFG: "];
"1000344" -> "1000407"  [label="DDG: "];
}
