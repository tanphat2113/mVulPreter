digraph "0_libarchive_65a23f5dbee4497064e9bb467f81138a62b0dae1@API" {
"1000211" [label="(Call,minimum > zip->uncompressed_buffer_bytes_remaining)"];
"1000109" [label="(MethodParameterIn,size_t minimum)"];
"1000219" [label="(Call,extract_pack_stream(a, minimum))"];
"1000218" [label="(Call,extract_pack_stream(a, minimum) < 0)"];
"1000226" [label="(Call,size > zip->uncompressed_buffer_bytes_remaining)"];
"1000233" [label="(Call,(ssize_t)\n\t\t\t    zip->uncompressed_buffer_bytes_remaining)"];
"1000231" [label="(Call,bytes_avail = (ssize_t)\n\t\t\t    zip->uncompressed_buffer_bytes_remaining)"];
"1000250" [label="(Call,zip->uncompressed_buffer_pointer += bytes_avail)"];
"1000255" [label="(Call,zip->uncompressed_buffer_bytes_remaining -= bytes_avail)"];
"1000260" [label="(Return,return (bytes_avail);)"];
"1000241" [label="(Call,(ssize_t)size)"];
"1000239" [label="(Call,bytes_avail = (ssize_t)size)"];
"1000209" [label="(Block,)"];
"1000227" [label="(Identifier,size)"];
"1000224" [label="(Identifier,ARCHIVE_FATAL)"];
"1000255" [label="(Call,zip->uncompressed_buffer_bytes_remaining -= bytes_avail)"];
"1000161" [label="(Call,(size_t)bytes_avail >\n\t\t    zip->uncompressed_buffer_bytes_remaining)"];
"1000177" [label="(Call,(size_t)bytes_avail)"];
"1000241" [label="(Call,(ssize_t)size)"];
"1000226" [label="(Call,size > zip->uncompressed_buffer_bytes_remaining)"];
"1000254" [label="(Identifier,bytes_avail)"];
"1000239" [label="(Call,bytes_avail = (ssize_t)size)"];
"1000220" [label="(Identifier,a)"];
"1000218" [label="(Call,extract_pack_stream(a, minimum) < 0)"];
"1000210" [label="(ControlStructure,if (minimum > zip->uncompressed_buffer_bytes_remaining))"];
"1000212" [label="(Identifier,minimum)"];
"1000257" [label="(Identifier,zip)"];
"1000261" [label="(Identifier,bytes_avail)"];
"1000251" [label="(Call,zip->uncompressed_buffer_pointer)"];
"1000110" [label="(Block,)"];
"1000219" [label="(Call,extract_pack_stream(a, minimum))"];
"1000250" [label="(Call,zip->uncompressed_buffer_pointer += bytes_avail)"];
"1000240" [label="(Identifier,bytes_avail)"];
"1000217" [label="(ControlStructure,if (extract_pack_stream(a, minimum) < 0))"];
"1000211" [label="(Call,minimum > zip->uncompressed_buffer_bytes_remaining)"];
"1000256" [label="(Call,zip->uncompressed_buffer_bytes_remaining)"];
"1000108" [label="(MethodParameterIn,size_t size)"];
"1000259" [label="(Identifier,bytes_avail)"];
"1000213" [label="(Call,zip->uncompressed_buffer_bytes_remaining)"];
"1000233" [label="(Call,(ssize_t)\n\t\t\t    zip->uncompressed_buffer_bytes_remaining)"];
"1000170" [label="(Call,(ssize_t)\n\t\t\t    zip->uncompressed_buffer_bytes_remaining)"];
"1000106" [label="(MethodParameterIn,struct archive_read *a)"];
"1000235" [label="(Call,zip->uncompressed_buffer_bytes_remaining)"];
"1000221" [label="(Identifier,minimum)"];
"1000231" [label="(Call,bytes_avail = (ssize_t)\n\t\t\t    zip->uncompressed_buffer_bytes_remaining)"];
"1000260" [label="(Return,return (bytes_avail);)"];
"1000228" [label="(Call,zip->uncompressed_buffer_bytes_remaining)"];
"1000238" [label="(ControlStructure,else)"];
"1000109" [label="(MethodParameterIn,size_t minimum)"];
"1000243" [label="(Identifier,size)"];
"1000232" [label="(Identifier,bytes_avail)"];
"1000225" [label="(ControlStructure,if (size > zip->uncompressed_buffer_bytes_remaining))"];
"1000246" [label="(Identifier,buff)"];
"1000193" [label="(Call,zip->uncompressed_buffer_pointer == NULL)"];
"1000222" [label="(Literal,0)"];
"1000181" [label="(Call,bytes_avail = (ssize_t)size)"];
"1000262" [label="(MethodReturn,RET)"];
"1000211" -> "1000210"  [label="AST: "];
"1000211" -> "1000213"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000213" -> "1000211"  [label="AST: "];
"1000220" -> "1000211"  [label="CFG: "];
"1000227" -> "1000211"  [label="CFG: "];
"1000211" -> "1000262"  [label="DDG: minimum"];
"1000211" -> "1000262"  [label="DDG: zip->uncompressed_buffer_bytes_remaining"];
"1000211" -> "1000262"  [label="DDG: minimum > zip->uncompressed_buffer_bytes_remaining"];
"1000109" -> "1000211"  [label="DDG: minimum"];
"1000211" -> "1000219"  [label="DDG: minimum"];
"1000211" -> "1000226"  [label="DDG: zip->uncompressed_buffer_bytes_remaining"];
"1000109" -> "1000105"  [label="AST: "];
"1000109" -> "1000262"  [label="DDG: minimum"];
"1000109" -> "1000219"  [label="DDG: minimum"];
"1000219" -> "1000218"  [label="AST: "];
"1000219" -> "1000221"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000221" -> "1000219"  [label="AST: "];
"1000222" -> "1000219"  [label="CFG: "];
"1000219" -> "1000262"  [label="DDG: a"];
"1000219" -> "1000262"  [label="DDG: minimum"];
"1000219" -> "1000218"  [label="DDG: a"];
"1000219" -> "1000218"  [label="DDG: minimum"];
"1000106" -> "1000219"  [label="DDG: a"];
"1000218" -> "1000217"  [label="AST: "];
"1000218" -> "1000222"  [label="CFG: "];
"1000222" -> "1000218"  [label="AST: "];
"1000224" -> "1000218"  [label="CFG: "];
"1000227" -> "1000218"  [label="CFG: "];
"1000218" -> "1000262"  [label="DDG: extract_pack_stream(a, minimum)"];
"1000218" -> "1000262"  [label="DDG: extract_pack_stream(a, minimum) < 0"];
"1000226" -> "1000225"  [label="AST: "];
"1000226" -> "1000228"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000228" -> "1000226"  [label="AST: "];
"1000232" -> "1000226"  [label="CFG: "];
"1000240" -> "1000226"  [label="CFG: "];
"1000226" -> "1000262"  [label="DDG: size"];
"1000226" -> "1000262"  [label="DDG: size > zip->uncompressed_buffer_bytes_remaining"];
"1000108" -> "1000226"  [label="DDG: size"];
"1000226" -> "1000233"  [label="DDG: zip->uncompressed_buffer_bytes_remaining"];
"1000226" -> "1000241"  [label="DDG: size"];
"1000226" -> "1000255"  [label="DDG: zip->uncompressed_buffer_bytes_remaining"];
"1000233" -> "1000231"  [label="AST: "];
"1000233" -> "1000235"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000235" -> "1000233"  [label="AST: "];
"1000231" -> "1000233"  [label="CFG: "];
"1000233" -> "1000231"  [label="DDG: zip->uncompressed_buffer_bytes_remaining"];
"1000233" -> "1000255"  [label="DDG: zip->uncompressed_buffer_bytes_remaining"];
"1000231" -> "1000225"  [label="AST: "];
"1000232" -> "1000231"  [label="AST: "];
"1000246" -> "1000231"  [label="CFG: "];
"1000231" -> "1000262"  [label="DDG: (ssize_t)\n\t\t\t    zip->uncompressed_buffer_bytes_remaining"];
"1000231" -> "1000250"  [label="DDG: bytes_avail"];
"1000231" -> "1000255"  [label="DDG: bytes_avail"];
"1000231" -> "1000260"  [label="DDG: bytes_avail"];
"1000250" -> "1000209"  [label="AST: "];
"1000250" -> "1000254"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000254" -> "1000250"  [label="AST: "];
"1000257" -> "1000250"  [label="CFG: "];
"1000250" -> "1000262"  [label="DDG: zip->uncompressed_buffer_pointer"];
"1000239" -> "1000250"  [label="DDG: bytes_avail"];
"1000193" -> "1000250"  [label="DDG: zip->uncompressed_buffer_pointer"];
"1000255" -> "1000110"  [label="AST: "];
"1000255" -> "1000259"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000259" -> "1000255"  [label="AST: "];
"1000261" -> "1000255"  [label="CFG: "];
"1000255" -> "1000262"  [label="DDG: bytes_avail"];
"1000255" -> "1000262"  [label="DDG: zip->uncompressed_buffer_bytes_remaining"];
"1000181" -> "1000255"  [label="DDG: bytes_avail"];
"1000177" -> "1000255"  [label="DDG: bytes_avail"];
"1000239" -> "1000255"  [label="DDG: bytes_avail"];
"1000170" -> "1000255"  [label="DDG: zip->uncompressed_buffer_bytes_remaining"];
"1000161" -> "1000255"  [label="DDG: zip->uncompressed_buffer_bytes_remaining"];
"1000260" -> "1000110"  [label="AST: "];
"1000260" -> "1000261"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000262" -> "1000260"  [label="CFG: "];
"1000260" -> "1000262"  [label="DDG: <RET>"];
"1000261" -> "1000260"  [label="DDG: bytes_avail"];
"1000181" -> "1000260"  [label="DDG: bytes_avail"];
"1000177" -> "1000260"  [label="DDG: bytes_avail"];
"1000239" -> "1000260"  [label="DDG: bytes_avail"];
"1000241" -> "1000239"  [label="AST: "];
"1000241" -> "1000243"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="AST: "];
"1000239" -> "1000241"  [label="CFG: "];
"1000241" -> "1000262"  [label="DDG: size"];
"1000241" -> "1000239"  [label="DDG: size"];
"1000108" -> "1000241"  [label="DDG: size"];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000239"  [label="AST: "];
"1000246" -> "1000239"  [label="CFG: "];
"1000239" -> "1000262"  [label="DDG: (ssize_t)size"];
}
