digraph "0_krb5_dc7ed55c689d57de7f7408b34631bf06fec9dab1@array" {
"1000374" [label="(Call,ret[num_versions] = NULL)"];
"1000307" [label="(Call,ret[j] == NULL)"];
"1000297" [label="(Call,ret[j] = k5alloc(sizeof(struct berval), &err))"];
"1000301" [label="(Call,k5alloc(sizeof(struct berval), &err))"];
"1000134" [label="(Call,k5calloc(n_key_data, sizeof(*key_data), &err))"];
"1000127" [label="(Call,n_key_data <= 0)"];
"1000106" [label="(MethodParameterIn,int n_key_data)"];
"1000245" [label="(Call,ret == NULL)"];
"1000234" [label="(Call,ret = (struct berval **) calloc (num_versions + 1, sizeof (struct berval *)))"];
"1000236" [label="(Call,(struct berval **) calloc (num_versions + 1, sizeof (struct berval *)))"];
"1000238" [label="(Call,calloc (num_versions + 1, sizeof (struct berval *)))"];
"1000232" [label="(Call,num_versions++)"];
"1000115" [label="(Call,num_versions = 1)"];
"1000142" [label="(Call,key_data_in == NULL)"];
"1000105" [label="(MethodParameterIn,krb5_key_data *key_data_in)"];
"1000388" [label="(Call,ret != NULL)"];
"1000402" [label="(Call,ret[i] != NULL)"];
"1000407" [label="(Call,free (ret[i]))"];
"1000411" [label="(Call,free (ret))"];
"1000416" [label="(Return,return ret;)"];
"1000413" [label="(Call,ret = NULL)"];
"1000284" [label="(Call,n_key_data - 1)"];
"1000314" [label="(Identifier,err)"];
"1000256" [label="(Identifier,i)"];
"1000147" [label="(Identifier,key_data)"];
"1000108" [label="(Block,)"];
"1000133" [label="(Identifier,key_data)"];
"1000413" [label="(Call,ret = NULL)"];
"1000246" [label="(Identifier,ret)"];
"1000129" [label="(Literal,0)"];
"1000149" [label="(Call,n_key_data * sizeof(*key_data))"];
"1000123" [label="(Identifier,err)"];
"1000134" [label="(Call,k5calloc(n_key_data, sizeof(*key_data), &err))"];
"1000132" [label="(Call,key_data = k5calloc(n_key_data, sizeof(*key_data), &err))"];
"1000309" [label="(Identifier,ret)"];
"1000127" [label="(Call,n_key_data <= 0)"];
"1000234" [label="(Call,ret = (struct berval **) calloc (num_versions + 1, sizeof (struct berval *)))"];
"1000311" [label="(Identifier,NULL)"];
"1000146" [label="(Call,memcpy(key_data, key_data_in, n_key_data * sizeof(*key_data)))"];
"1000394" [label="(Identifier,i)"];
"1000242" [label="(Call,sizeof (struct berval *))"];
"1000116" [label="(Identifier,num_versions)"];
"1000245" [label="(Call,ret == NULL)"];
"1000403" [label="(Call,ret[i])"];
"1000144" [label="(Identifier,NULL)"];
"1000128" [label="(Identifier,n_key_data)"];
"1000407" [label="(Call,free (ret[i]))"];
"1000244" [label="(ControlStructure,if (ret == NULL))"];
"1000131" [label="(Identifier,NULL)"];
"1000406" [label="(Identifier,NULL)"];
"1000304" [label="(Call,&err)"];
"1000302" [label="(Call,sizeof(struct berval))"];
"1000143" [label="(Identifier,key_data_in)"];
"1000308" [label="(Call,ret[j])"];
"1000247" [label="(Identifier,NULL)"];
"1000238" [label="(Call,calloc (num_versions + 1, sizeof (struct berval *)))"];
"1000141" [label="(ControlStructure,if (key_data_in == NULL))"];
"1000250" [label="(Identifier,err)"];
"1000117" [label="(Literal,1)"];
"1000301" [label="(Call,k5alloc(sizeof(struct berval), &err))"];
"1000106" [label="(MethodParameterIn,int n_key_data)"];
"1000389" [label="(Identifier,ret)"];
"1000273" [label="(Call,i < n_key_data)"];
"1000139" [label="(Call,&err)"];
"1000232" [label="(Call,num_versions++)"];
"1000307" [label="(Call,ret[j] == NULL)"];
"1000414" [label="(Identifier,ret)"];
"1000126" [label="(ControlStructure,if (n_key_data <= 0))"];
"1000375" [label="(Call,ret[num_versions])"];
"1000233" [label="(Identifier,num_versions)"];
"1000213" [label="(Call,n_key_data - 1)"];
"1000158" [label="(Call,i < n_key_data)"];
"1000198" [label="(Call,key_data[i].key_data_contents[1] = NULL)"];
"1000418" [label="(MethodReturn,RET)"];
"1000110" [label="(Call,**ret = NULL)"];
"1000379" [label="(JumpTarget,cleanup:)"];
"1000306" [label="(ControlStructure,if (ret[j] == NULL))"];
"1000362" [label="(Call,n_key_data - 1)"];
"1000400" [label="(Identifier,i)"];
"1000411" [label="(Call,free (ret))"];
"1000391" [label="(Block,)"];
"1000217" [label="(Identifier,i)"];
"1000412" [label="(Identifier,ret)"];
"1000417" [label="(Identifier,ret)"];
"1000135" [label="(Identifier,n_key_data)"];
"1000239" [label="(Call,num_versions + 1)"];
"1000390" [label="(Identifier,NULL)"];
"1000297" [label="(Call,ret[j] = k5alloc(sizeof(struct berval), &err))"];
"1000298" [label="(Call,ret[j])"];
"1000401" [label="(ControlStructure,if (ret[i] != NULL))"];
"1000296" [label="(Block,)"];
"1000235" [label="(Identifier,ret)"];
"1000415" [label="(Identifier,NULL)"];
"1000388" [label="(Call,ret != NULL)"];
"1000218" [label="(ControlStructure,if (key_data[i].key_data_kvno != key_data[i + 1].key_data_kvno))"];
"1000387" [label="(ControlStructure,if (ret != NULL))"];
"1000408" [label="(Call,ret[i])"];
"1000136" [label="(Call,sizeof(*key_data))"];
"1000374" [label="(Call,ret[num_versions] = NULL)"];
"1000236" [label="(Call,(struct berval **) calloc (num_versions + 1, sizeof (struct berval *)))"];
"1000115" [label="(Call,num_versions = 1)"];
"1000396" [label="(Call,i <= num_versions)"];
"1000312" [label="(ControlStructure,goto cleanup;)"];
"1000416" [label="(Return,return ret;)"];
"1000142" [label="(Call,key_data_in == NULL)"];
"1000402" [label="(Call,ret[i] != NULL)"];
"1000105" [label="(MethodParameterIn,krb5_key_data *key_data_in)"];
"1000378" [label="(Identifier,NULL)"];
"1000409" [label="(Identifier,ret)"];
"1000145" [label="(ControlStructure,goto cleanup;)"];
"1000374" -> "1000108"  [label="AST: "];
"1000374" -> "1000378"  [label="CFG: "];
"1000375" -> "1000374"  [label="AST: "];
"1000378" -> "1000374"  [label="AST: "];
"1000379" -> "1000374"  [label="CFG: "];
"1000374" -> "1000418"  [label="DDG: ret[num_versions]"];
"1000374" -> "1000418"  [label="DDG: NULL"];
"1000307" -> "1000374"  [label="DDG: NULL"];
"1000245" -> "1000374"  [label="DDG: NULL"];
"1000374" -> "1000388"  [label="DDG: ret[num_versions]"];
"1000374" -> "1000411"  [label="DDG: ret[num_versions]"];
"1000374" -> "1000416"  [label="DDG: ret[num_versions]"];
"1000307" -> "1000306"  [label="AST: "];
"1000307" -> "1000311"  [label="CFG: "];
"1000308" -> "1000307"  [label="AST: "];
"1000311" -> "1000307"  [label="AST: "];
"1000312" -> "1000307"  [label="CFG: "];
"1000314" -> "1000307"  [label="CFG: "];
"1000307" -> "1000418"  [label="DDG: NULL"];
"1000307" -> "1000418"  [label="DDG: ret[j] == NULL"];
"1000307" -> "1000418"  [label="DDG: ret[j]"];
"1000297" -> "1000307"  [label="DDG: ret[j]"];
"1000245" -> "1000307"  [label="DDG: ret"];
"1000245" -> "1000307"  [label="DDG: NULL"];
"1000307" -> "1000388"  [label="DDG: ret[j]"];
"1000307" -> "1000388"  [label="DDG: NULL"];
"1000307" -> "1000411"  [label="DDG: ret[j]"];
"1000307" -> "1000416"  [label="DDG: ret[j]"];
"1000297" -> "1000296"  [label="AST: "];
"1000297" -> "1000301"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000301" -> "1000297"  [label="AST: "];
"1000309" -> "1000297"  [label="CFG: "];
"1000297" -> "1000418"  [label="DDG: k5alloc(sizeof(struct berval), &err)"];
"1000301" -> "1000297"  [label="DDG: &err"];
"1000301" -> "1000304"  [label="CFG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000304" -> "1000301"  [label="AST: "];
"1000301" -> "1000418"  [label="DDG: &err"];
"1000134" -> "1000301"  [label="DDG: &err"];
"1000134" -> "1000132"  [label="AST: "];
"1000134" -> "1000139"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000139" -> "1000134"  [label="AST: "];
"1000132" -> "1000134"  [label="CFG: "];
"1000134" -> "1000418"  [label="DDG: &err"];
"1000134" -> "1000418"  [label="DDG: n_key_data"];
"1000134" -> "1000132"  [label="DDG: n_key_data"];
"1000134" -> "1000132"  [label="DDG: &err"];
"1000127" -> "1000134"  [label="DDG: n_key_data"];
"1000106" -> "1000134"  [label="DDG: n_key_data"];
"1000134" -> "1000149"  [label="DDG: n_key_data"];
"1000127" -> "1000126"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000131" -> "1000127"  [label="CFG: "];
"1000133" -> "1000127"  [label="CFG: "];
"1000127" -> "1000418"  [label="DDG: n_key_data <= 0"];
"1000127" -> "1000418"  [label="DDG: n_key_data"];
"1000106" -> "1000127"  [label="DDG: n_key_data"];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000418"  [label="DDG: n_key_data"];
"1000106" -> "1000149"  [label="DDG: n_key_data"];
"1000106" -> "1000158"  [label="DDG: n_key_data"];
"1000106" -> "1000213"  [label="DDG: n_key_data"];
"1000106" -> "1000273"  [label="DDG: n_key_data"];
"1000106" -> "1000284"  [label="DDG: n_key_data"];
"1000106" -> "1000362"  [label="DDG: n_key_data"];
"1000245" -> "1000244"  [label="AST: "];
"1000245" -> "1000247"  [label="CFG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000247" -> "1000245"  [label="AST: "];
"1000250" -> "1000245"  [label="CFG: "];
"1000256" -> "1000245"  [label="CFG: "];
"1000245" -> "1000418"  [label="DDG: ret == NULL"];
"1000245" -> "1000418"  [label="DDG: ret"];
"1000245" -> "1000418"  [label="DDG: NULL"];
"1000234" -> "1000245"  [label="DDG: ret"];
"1000142" -> "1000245"  [label="DDG: NULL"];
"1000245" -> "1000388"  [label="DDG: ret"];
"1000245" -> "1000388"  [label="DDG: NULL"];
"1000245" -> "1000416"  [label="DDG: ret"];
"1000234" -> "1000108"  [label="AST: "];
"1000234" -> "1000236"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000236" -> "1000234"  [label="AST: "];
"1000246" -> "1000234"  [label="CFG: "];
"1000234" -> "1000418"  [label="DDG: (struct berval **) calloc (num_versions + 1, sizeof (struct berval *))"];
"1000236" -> "1000234"  [label="DDG: calloc (num_versions + 1, sizeof (struct berval *))"];
"1000236" -> "1000238"  [label="CFG: "];
"1000237" -> "1000236"  [label="AST: "];
"1000238" -> "1000236"  [label="AST: "];
"1000236" -> "1000418"  [label="DDG: calloc (num_versions + 1, sizeof (struct berval *))"];
"1000238" -> "1000236"  [label="DDG: num_versions + 1"];
"1000238" -> "1000242"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000242" -> "1000238"  [label="AST: "];
"1000238" -> "1000418"  [label="DDG: num_versions + 1"];
"1000232" -> "1000238"  [label="DDG: num_versions"];
"1000115" -> "1000238"  [label="DDG: num_versions"];
"1000232" -> "1000218"  [label="AST: "];
"1000232" -> "1000233"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000217" -> "1000232"  [label="CFG: "];
"1000115" -> "1000232"  [label="DDG: num_versions"];
"1000232" -> "1000239"  [label="DDG: num_versions"];
"1000232" -> "1000396"  [label="DDG: num_versions"];
"1000115" -> "1000108"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000123" -> "1000115"  [label="CFG: "];
"1000115" -> "1000418"  [label="DDG: num_versions"];
"1000115" -> "1000239"  [label="DDG: num_versions"];
"1000115" -> "1000396"  [label="DDG: num_versions"];
"1000142" -> "1000141"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000145" -> "1000142"  [label="CFG: "];
"1000147" -> "1000142"  [label="CFG: "];
"1000142" -> "1000418"  [label="DDG: key_data_in == NULL"];
"1000142" -> "1000418"  [label="DDG: NULL"];
"1000142" -> "1000418"  [label="DDG: key_data_in"];
"1000105" -> "1000142"  [label="DDG: key_data_in"];
"1000142" -> "1000146"  [label="DDG: key_data_in"];
"1000142" -> "1000198"  [label="DDG: NULL"];
"1000142" -> "1000388"  [label="DDG: NULL"];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000418"  [label="DDG: key_data_in"];
"1000105" -> "1000146"  [label="DDG: key_data_in"];
"1000388" -> "1000387"  [label="AST: "];
"1000388" -> "1000390"  [label="CFG: "];
"1000389" -> "1000388"  [label="AST: "];
"1000390" -> "1000388"  [label="AST: "];
"1000394" -> "1000388"  [label="CFG: "];
"1000417" -> "1000388"  [label="CFG: "];
"1000388" -> "1000418"  [label="DDG: ret"];
"1000388" -> "1000418"  [label="DDG: ret != NULL"];
"1000388" -> "1000418"  [label="DDG: NULL"];
"1000110" -> "1000388"  [label="DDG: ret"];
"1000388" -> "1000402"  [label="DDG: ret"];
"1000388" -> "1000402"  [label="DDG: NULL"];
"1000388" -> "1000407"  [label="DDG: ret"];
"1000388" -> "1000411"  [label="DDG: ret"];
"1000388" -> "1000413"  [label="DDG: NULL"];
"1000388" -> "1000416"  [label="DDG: ret"];
"1000402" -> "1000401"  [label="AST: "];
"1000402" -> "1000406"  [label="CFG: "];
"1000403" -> "1000402"  [label="AST: "];
"1000406" -> "1000402"  [label="AST: "];
"1000409" -> "1000402"  [label="CFG: "];
"1000400" -> "1000402"  [label="CFG: "];
"1000402" -> "1000418"  [label="DDG: ret[i] != NULL"];
"1000402" -> "1000418"  [label="DDG: ret[i]"];
"1000407" -> "1000402"  [label="DDG: ret[i]"];
"1000402" -> "1000407"  [label="DDG: ret[i]"];
"1000402" -> "1000411"  [label="DDG: ret[i]"];
"1000402" -> "1000413"  [label="DDG: NULL"];
"1000402" -> "1000416"  [label="DDG: ret[i]"];
"1000407" -> "1000401"  [label="AST: "];
"1000407" -> "1000408"  [label="CFG: "];
"1000408" -> "1000407"  [label="AST: "];
"1000400" -> "1000407"  [label="CFG: "];
"1000407" -> "1000418"  [label="DDG: ret[i]"];
"1000407" -> "1000411"  [label="DDG: ret[i]"];
"1000407" -> "1000416"  [label="DDG: ret[i]"];
"1000411" -> "1000391"  [label="AST: "];
"1000411" -> "1000412"  [label="CFG: "];
"1000412" -> "1000411"  [label="AST: "];
"1000414" -> "1000411"  [label="CFG: "];
"1000416" -> "1000108"  [label="AST: "];
"1000416" -> "1000417"  [label="CFG: "];
"1000417" -> "1000416"  [label="AST: "];
"1000418" -> "1000416"  [label="CFG: "];
"1000416" -> "1000418"  [label="DDG: <RET>"];
"1000417" -> "1000416"  [label="DDG: ret"];
"1000413" -> "1000416"  [label="DDG: ret"];
"1000110" -> "1000416"  [label="DDG: ret"];
"1000413" -> "1000391"  [label="AST: "];
"1000413" -> "1000415"  [label="CFG: "];
"1000414" -> "1000413"  [label="AST: "];
"1000415" -> "1000413"  [label="AST: "];
"1000417" -> "1000413"  [label="CFG: "];
"1000413" -> "1000418"  [label="DDG: ret"];
"1000413" -> "1000418"  [label="DDG: NULL"];
}
