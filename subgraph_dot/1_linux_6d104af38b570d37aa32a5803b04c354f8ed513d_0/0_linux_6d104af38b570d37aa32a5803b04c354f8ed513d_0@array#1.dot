digraph "0_linux_6d104af38b570d37aa32a5803b04c354f8ed513d_0@array" {
"1000164" [label="(Call,dev_warn(dev, \"Read invalid current profile: %02hhx.\n\",\n \t\t\t data[7]))"];
"1000101" [label="(MethodParameterIn,struct device *dev)"];
"1000122" [label="(Call,usb_control_msg(usbdev, usb_rcvctrlpipe(usbdev, 0),\n \t\t\t      K90_REQUEST_STATUS,\n\t\t\t      USB_DIR_IN | USB_TYPE_VENDOR |\n\t\t\t      USB_RECIP_DEVICE, 0, 0, data, 8,\n\t\t\t      USB_CTRL_SET_TIMEOUT))"];
"1000124" [label="(Call,usb_rcvctrlpipe(usbdev, 0))"];
"1000114" [label="(Call,*usbdev = interface_to_usbdev(usbif))"];
"1000116" [label="(Call,interface_to_usbdev(usbif))"];
"1000107" [label="(Call,*usbif = to_usb_interface(dev->parent))"];
"1000109" [label="(Call,to_usb_interface(dev->parent))"];
"1000128" [label="(Call,USB_DIR_IN | USB_TYPE_VENDOR |\n\t\t\t      USB_RECIP_DEVICE)"];
"1000130" [label="(Call,USB_TYPE_VENDOR |\n\t\t\t      USB_RECIP_DEVICE)"];
"1000166" [label="(Literal,\"Read invalid current profile: %02hhx.\n\")"];
"1000121" [label="(Identifier,ret)"];
"1000126" [label="(Literal,0)"];
"1000128" [label="(Call,USB_DIR_IN | USB_TYPE_VENDOR |\n\t\t\t      USB_RECIP_DEVICE)"];
"1000122" [label="(Call,usb_control_msg(usbdev, usb_rcvctrlpipe(usbdev, 0),\n \t\t\t      K90_REQUEST_STATUS,\n\t\t\t      USB_DIR_IN | USB_TYPE_VENDOR |\n\t\t\t      USB_RECIP_DEVICE, 0, 0, data, 8,\n\t\t\t      USB_CTRL_SET_TIMEOUT))"];
"1000137" [label="(Identifier,USB_CTRL_SET_TIMEOUT)"];
"1000143" [label="(Call,dev_warn(dev, \"Failed to get K90 initial state (error %d).\n\",\n \t\t\t ret))"];
"1000167" [label="(Call,data[7])"];
"1000130" [label="(Call,USB_TYPE_VENDOR |\n\t\t\t      USB_RECIP_DEVICE)"];
"1000104" [label="(Block,)"];
"1000117" [label="(Identifier,usbif)"];
"1000109" [label="(Call,to_usb_interface(dev->parent))"];
"1000165" [label="(Identifier,dev)"];
"1000110" [label="(Call,dev->parent)"];
"1000120" [label="(Call,ret = usb_control_msg(usbdev, usb_rcvctrlpipe(usbdev, 0),\n \t\t\t      K90_REQUEST_STATUS,\n\t\t\t      USB_DIR_IN | USB_TYPE_VENDOR |\n\t\t\t      USB_RECIP_DEVICE, 0, 0, data, 8,\n\t\t\t      USB_CTRL_SET_TIMEOUT))"];
"1000164" [label="(Call,dev_warn(dev, \"Read invalid current profile: %02hhx.\n\",\n \t\t\t data[7]))"];
"1000101" [label="(MethodParameterIn,struct device *dev)"];
"1000136" [label="(Literal,8)"];
"1000135" [label="(Identifier,data)"];
"1000108" [label="(Identifier,usbif)"];
"1000124" [label="(Call,usb_rcvctrlpipe(usbdev, 0))"];
"1000129" [label="(Identifier,USB_DIR_IN)"];
"1000133" [label="(Literal,0)"];
"1000131" [label="(Identifier,USB_TYPE_VENDOR)"];
"1000107" [label="(Call,*usbif = to_usb_interface(dev->parent))"];
"1000125" [label="(Identifier,usbdev)"];
"1000127" [label="(Identifier,K90_REQUEST_STATUS)"];
"1000163" [label="(Block,)"];
"1000116" [label="(Call,interface_to_usbdev(usbif))"];
"1000115" [label="(Identifier,usbdev)"];
"1000179" [label="(MethodReturn,static ssize_t)"];
"1000134" [label="(Literal,0)"];
"1000114" [label="(Call,*usbdev = interface_to_usbdev(usbif))"];
"1000132" [label="(Identifier,USB_RECIP_DEVICE)"];
"1000150" [label="(Call,current_profile = data[7])"];
"1000172" [label="(Identifier,EIO)"];
"1000123" [label="(Identifier,usbdev)"];
"1000164" -> "1000163"  [label="AST: "];
"1000164" -> "1000167"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000166" -> "1000164"  [label="AST: "];
"1000167" -> "1000164"  [label="AST: "];
"1000172" -> "1000164"  [label="CFG: "];
"1000164" -> "1000179"  [label="DDG: "];
"1000164" -> "1000179"  [label="DDG: "];
"1000164" -> "1000179"  [label="DDG: "];
"1000101" -> "1000164"  [label="DDG: "];
"1000122" -> "1000164"  [label="DDG: "];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000179"  [label="DDG: "];
"1000101" -> "1000143"  [label="DDG: "];
"1000122" -> "1000120"  [label="AST: "];
"1000122" -> "1000137"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000127" -> "1000122"  [label="AST: "];
"1000128" -> "1000122"  [label="AST: "];
"1000133" -> "1000122"  [label="AST: "];
"1000134" -> "1000122"  [label="AST: "];
"1000135" -> "1000122"  [label="AST: "];
"1000136" -> "1000122"  [label="AST: "];
"1000137" -> "1000122"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000122" -> "1000179"  [label="DDG: "];
"1000122" -> "1000179"  [label="DDG: "];
"1000122" -> "1000179"  [label="DDG: "];
"1000122" -> "1000179"  [label="DDG: "];
"1000122" -> "1000179"  [label="DDG: "];
"1000122" -> "1000179"  [label="DDG: "];
"1000122" -> "1000120"  [label="DDG: "];
"1000122" -> "1000120"  [label="DDG: "];
"1000122" -> "1000120"  [label="DDG: "];
"1000122" -> "1000120"  [label="DDG: "];
"1000122" -> "1000120"  [label="DDG: "];
"1000122" -> "1000120"  [label="DDG: "];
"1000122" -> "1000120"  [label="DDG: "];
"1000122" -> "1000120"  [label="DDG: "];
"1000124" -> "1000122"  [label="DDG: "];
"1000124" -> "1000122"  [label="DDG: "];
"1000128" -> "1000122"  [label="DDG: "];
"1000128" -> "1000122"  [label="DDG: "];
"1000122" -> "1000150"  [label="DDG: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000127" -> "1000124"  [label="CFG: "];
"1000114" -> "1000124"  [label="DDG: "];
"1000114" -> "1000104"  [label="AST: "];
"1000114" -> "1000116"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000121" -> "1000114"  [label="CFG: "];
"1000114" -> "1000179"  [label="DDG: "];
"1000116" -> "1000114"  [label="DDG: "];
"1000116" -> "1000117"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000116" -> "1000179"  [label="DDG: "];
"1000107" -> "1000116"  [label="DDG: "];
"1000107" -> "1000104"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000115" -> "1000107"  [label="CFG: "];
"1000107" -> "1000179"  [label="DDG: "];
"1000109" -> "1000107"  [label="DDG: "];
"1000109" -> "1000110"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000109" -> "1000179"  [label="DDG: "];
"1000128" -> "1000130"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000128"  [label="AST: "];
"1000133" -> "1000128"  [label="CFG: "];
"1000128" -> "1000179"  [label="DDG: "];
"1000128" -> "1000179"  [label="DDG: "];
"1000130" -> "1000128"  [label="DDG: "];
"1000130" -> "1000128"  [label="DDG: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000130" -> "1000179"  [label="DDG: "];
"1000130" -> "1000179"  [label="DDG: "];
}
