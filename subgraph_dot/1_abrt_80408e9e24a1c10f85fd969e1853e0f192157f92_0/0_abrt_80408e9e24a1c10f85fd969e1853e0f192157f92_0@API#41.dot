digraph "0_abrt_80408e9e24a1c10f85fd969e1853e0f192157f92_0@API" {
"1000402" [label="(Call,proc_pid_status = xmalloc_xopen_read_close(path, /*maxsz:*/ NULL))"];
"1000404" [label="(Call,xmalloc_xopen_read_close(path, /*maxsz:*/ NULL))"];
"1000396" [label="(Call,sprintf(path, \"/proc/%lu/status\", (long)pid))"];
"1000399" [label="(Call,(long)pid)"];
"1000391" [label="(Call,get_cwd(pid))"];
"1000369" [label="(Call,get_executable(pid, setting_SaveBinaryImage ? &src_fd_binary : NULL))"];
"1000300" [label="(Call,pid = xatoi_positive(argv[3]))"];
"1000302" [label="(Call,xatoi_positive(argv[3]))"];
"1000143" [label="(MethodParameterIn,char** argv)"];
"1000316" [label="(Call,pid <= 0)"];
"1000269" [label="(Call,strtoull(argv[2], NULL, 10))"];
"1000385" [label="(Call,(long)pid)"];
"1000452" [label="(Call,executable == NULL)"];
"1000383" [label="(Call,error_msg_and_die(\"PID %lu is '%s', not dumping it to avoid recursion\",\n                        (long)pid, executable))"];
"1000458" [label="(Call,(long)pid)"];
"1000273" [label="(Identifier,NULL)"];
"1000398" [label="(Literal,\"/proc/%lu/status\")"];
"1000170" [label="(Call,error_msg_and_die(\"Usage: %s SIGNO CORE_SIZE_LIMIT PID UID GID TIME BINARY_NAME [HOSTNAME]\", argv[0]))"];
"1000269" [label="(Call,strtoull(argv[2], NULL, 10))"];
"1000301" [label="(Identifier,pid)"];
"1000388" [label="(Identifier,executable)"];
"1000385" [label="(Call,(long)pid)"];
"1000303" [label="(Call,argv[3])"];
"1000144" [label="(Block,)"];
"1000404" [label="(Call,xmalloc_xopen_read_close(path, /*maxsz:*/ NULL))"];
"1000353" [label="(Call,argv[8] = uts.nodename)"];
"1000371" [label="(Call,setting_SaveBinaryImage ? &src_fd_binary : NULL)"];
"1000389" [label="(Call,user_pwd = get_cwd(pid))"];
"1000367" [label="(Call,*executable = get_executable(pid, setting_SaveBinaryImage ? &src_fd_binary : NULL))"];
"1000443" [label="(Call,open_user_core(uid, fsuid, pid, &argv[1]))"];
"1000320" [label="(Call,perror_msg_and_die(\"PID '%s' or limit '%s' is bogus\", argv[3], argv[2]))"];
"1000345" [label="(Call,!argv[8])"];
"1000589" [label="(Call,(long)pid)"];
"1000369" [label="(Call,get_executable(pid, setting_SaveBinaryImage ? &src_fd_binary : NULL))"];
"1000318" [label="(Literal,0)"];
"1001168" [label="(MethodReturn,int)"];
"1000403" [label="(Identifier,proc_pid_status)"];
"1000316" [label="(Call,pid <= 0)"];
"1000387" [label="(Identifier,pid)"];
"1000302" [label="(Call,xatoi_positive(argv[3]))"];
"1000397" [label="(Identifier,path)"];
"1000300" [label="(Call,pid = xatoi_positive(argv[3]))"];
"1000270" [label="(Call,argv[2])"];
"1000370" [label="(Identifier,pid)"];
"1000309" [label="(Call,xatoi_positive(argv[4]))"];
"1000274" [label="(Literal,10)"];
"1000176" [label="(Call,strchr(argv[1], ' '))"];
"1000409" [label="(Identifier,fsuid)"];
"1000294" [label="(Call,*pid_str = argv[3])"];
"1000195" [label="(Call,strchrnul(argv[i], ' '))"];
"1000405" [label="(Identifier,path)"];
"1000308" [label="(Identifier,uid)"];
"1000396" [label="(Call,sprintf(path, \"/proc/%lu/status\", (long)pid))"];
"1000256" [label="(Call,* signal_str = argv[1])"];
"1000267" [label="(Call,ulimit_c = strtoull(argv[2], NULL, 10))"];
"1000143" [label="(MethodParameterIn,char** argv)"];
"1000406" [label="(Identifier,NULL)"];
"1000610" [label="(Call,(long)pid)"];
"1001159" [label="(Call,(long)pid)"];
"1000392" [label="(Identifier,pid)"];
"1000391" [label="(Call,get_cwd(pid))"];
"1000317" [label="(Identifier,pid)"];
"1000314" [label="(Call,errno || pid <= 0)"];
"1000399" [label="(Call,(long)pid)"];
"1000401" [label="(Identifier,pid)"];
"1000402" [label="(Call,proc_pid_status = xmalloc_xopen_read_close(path, /*maxsz:*/ NULL))"];
"1000402" -> "1000144"  [label="AST: "];
"1000402" -> "1000404"  [label="CFG: "];
"1000403" -> "1000402"  [label="AST: "];
"1000404" -> "1000402"  [label="AST: "];
"1000409" -> "1000402"  [label="CFG: "];
"1000402" -> "1001168"  [label="DDG: "];
"1000402" -> "1001168"  [label="DDG: "];
"1000404" -> "1000402"  [label="DDG: "];
"1000404" -> "1000402"  [label="DDG: "];
"1000404" -> "1000406"  [label="CFG: "];
"1000405" -> "1000404"  [label="AST: "];
"1000406" -> "1000404"  [label="AST: "];
"1000404" -> "1001168"  [label="DDG: "];
"1000396" -> "1000404"  [label="DDG: "];
"1000269" -> "1000404"  [label="DDG: "];
"1000404" -> "1000452"  [label="DDG: "];
"1000396" -> "1000144"  [label="AST: "];
"1000396" -> "1000399"  [label="CFG: "];
"1000397" -> "1000396"  [label="AST: "];
"1000398" -> "1000396"  [label="AST: "];
"1000399" -> "1000396"  [label="AST: "];
"1000403" -> "1000396"  [label="CFG: "];
"1000396" -> "1001168"  [label="DDG: "];
"1000396" -> "1001168"  [label="DDG: "];
"1000399" -> "1000396"  [label="DDG: "];
"1000399" -> "1000401"  [label="CFG: "];
"1000400" -> "1000399"  [label="AST: "];
"1000401" -> "1000399"  [label="AST: "];
"1000399" -> "1001168"  [label="DDG: "];
"1000391" -> "1000399"  [label="DDG: "];
"1000399" -> "1000443"  [label="DDG: "];
"1000399" -> "1000458"  [label="DDG: "];
"1000399" -> "1000589"  [label="DDG: "];
"1000399" -> "1000610"  [label="DDG: "];
"1000399" -> "1001159"  [label="DDG: "];
"1000391" -> "1000389"  [label="AST: "];
"1000391" -> "1000392"  [label="CFG: "];
"1000392" -> "1000391"  [label="AST: "];
"1000389" -> "1000391"  [label="CFG: "];
"1000391" -> "1000389"  [label="DDG: "];
"1000369" -> "1000391"  [label="DDG: "];
"1000385" -> "1000391"  [label="DDG: "];
"1000369" -> "1000367"  [label="AST: "];
"1000369" -> "1000371"  [label="CFG: "];
"1000370" -> "1000369"  [label="AST: "];
"1000371" -> "1000369"  [label="AST: "];
"1000367" -> "1000369"  [label="CFG: "];
"1000369" -> "1001168"  [label="DDG: "];
"1000369" -> "1000367"  [label="DDG: "];
"1000369" -> "1000367"  [label="DDG: "];
"1000300" -> "1000369"  [label="DDG: "];
"1000316" -> "1000369"  [label="DDG: "];
"1000269" -> "1000369"  [label="DDG: "];
"1000369" -> "1000385"  [label="DDG: "];
"1000300" -> "1000144"  [label="AST: "];
"1000300" -> "1000302"  [label="CFG: "];
"1000301" -> "1000300"  [label="AST: "];
"1000302" -> "1000300"  [label="AST: "];
"1000308" -> "1000300"  [label="CFG: "];
"1000300" -> "1001168"  [label="DDG: "];
"1000302" -> "1000300"  [label="DDG: "];
"1000300" -> "1000316"  [label="DDG: "];
"1000302" -> "1000303"  [label="CFG: "];
"1000303" -> "1000302"  [label="AST: "];
"1000302" -> "1001168"  [label="DDG: "];
"1000143" -> "1000302"  [label="DDG: "];
"1000302" -> "1000320"  [label="DDG: "];
"1000143" -> "1000141"  [label="AST: "];
"1000143" -> "1001168"  [label="DDG: "];
"1000143" -> "1000170"  [label="DDG: "];
"1000143" -> "1000176"  [label="DDG: "];
"1000143" -> "1000195"  [label="DDG: "];
"1000143" -> "1000256"  [label="DDG: "];
"1000143" -> "1000269"  [label="DDG: "];
"1000143" -> "1000294"  [label="DDG: "];
"1000143" -> "1000309"  [label="DDG: "];
"1000143" -> "1000320"  [label="DDG: "];
"1000143" -> "1000345"  [label="DDG: "];
"1000143" -> "1000353"  [label="DDG: "];
"1000316" -> "1000314"  [label="AST: "];
"1000316" -> "1000318"  [label="CFG: "];
"1000317" -> "1000316"  [label="AST: "];
"1000318" -> "1000316"  [label="AST: "];
"1000314" -> "1000316"  [label="CFG: "];
"1000316" -> "1000314"  [label="DDG: "];
"1000316" -> "1000314"  [label="DDG: "];
"1000269" -> "1000267"  [label="AST: "];
"1000269" -> "1000274"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000273" -> "1000269"  [label="AST: "];
"1000274" -> "1000269"  [label="AST: "];
"1000267" -> "1000269"  [label="CFG: "];
"1000269" -> "1001168"  [label="DDG: "];
"1000269" -> "1000267"  [label="DDG: "];
"1000269" -> "1000267"  [label="DDG: "];
"1000269" -> "1000267"  [label="DDG: "];
"1000269" -> "1000320"  [label="DDG: "];
"1000269" -> "1000371"  [label="DDG: "];
"1000385" -> "1000383"  [label="AST: "];
"1000385" -> "1000387"  [label="CFG: "];
"1000386" -> "1000385"  [label="AST: "];
"1000387" -> "1000385"  [label="AST: "];
"1000388" -> "1000385"  [label="CFG: "];
"1000385" -> "1000383"  [label="DDG: "];
}
