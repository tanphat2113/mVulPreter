digraph "0_linux_83eaddab4378db256d00d295bda6ca997cd13a52_0@pointer" {
"1000239" [label="(Call,tcp_v6_iif(skb))"];
"1000142" [label="(Call,tcp_v4_syn_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t     req_unhash, own_req))"];
"1000123" [label="(Call,inet6_sk(sk))"];
"1000111" [label="(MethodParameterIn,const struct sock *sk)"];
"1000112" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000113" [label="(MethodParameterIn,struct request_sock *req)"];
"1000114" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000115" [label="(MethodParameterIn,struct request_sock *req_unhash)"];
"1000116" [label="(MethodParameterIn,bool *own_req)"];
"1000235" [label="(Call,newnp->mcast_oif   = tcp_v6_iif(skb))"];
"1000246" [label="(Call,ipv6_hdr(skb))"];
"1000254" [label="(Call,ipv6_hdr(skb))"];
"1000253" [label="(Call,ip6_flowinfo(ipv6_hdr(skb)))"];
"1000249" [label="(Call,newnp->rcv_flowinfo = ip6_flowinfo(ipv6_hdr(skb)))"];
"1000265" [label="(Call,ipv6_hdr(skb))"];
"1000264" [label="(Call,ip6_flowlabel(ipv6_hdr(skb)))"];
"1000260" [label="(Call,newnp->flow_label = ip6_flowlabel(ipv6_hdr(skb)))"];
"1000433" [label="(Call,ipv6_hdr(skb))"];
"1000559" [label="(Call,sk_gfp_mask(sk, GFP_ATOMIC))"];
"1000249" [label="(Call,newnp->rcv_flowinfo = ip6_flowinfo(ipv6_hdr(skb)))"];
"1000116" [label="(MethodParameterIn,bool *own_req)"];
"1000268" [label="(Identifier,newsk)"];
"1000265" [label="(Call,ipv6_hdr(skb))"];
"1000142" [label="(Call,tcp_v4_syn_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t     req_unhash, own_req))"];
"1000111" [label="(MethodParameterIn,const struct sock *sk)"];
"1000277" [label="(Call,inet_rsk(req))"];
"1000247" [label="(Identifier,skb)"];
"1000638" [label="(Call,tcp_listendrop(sk))"];
"1000513" [label="(Call,tcp_sk(sk))"];
"1000515" [label="(Call,dst_metric_advmss(dst))"];
"1000145" [label="(Identifier,req)"];
"1000235" [label="(Call,newnp->mcast_oif   = tcp_v6_iif(skb))"];
"1000243" [label="(Identifier,newnp)"];
"1000114" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000264" [label="(Call,ip6_flowlabel(ipv6_hdr(skb)))"];
"1000115" [label="(MethodParameterIn,struct request_sock *req_unhash)"];
"1000144" [label="(Identifier,skb)"];
"1000631" [label="(Call,sock_net(sk))"];
"1000579" [label="(Call,req_to_sk(req_unhash))"];
"1000585" [label="(Call,tcp_move_syn(newtp, req))"];
"1000266" [label="(Identifier,skb)"];
"1000564" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000426" [label="(Call,tcp_v6_iif(skb))"];
"1000506" [label="(Call,dst_mtu(dst))"];
"1000240" [label="(Identifier,skb)"];
"1000124" [label="(Identifier,sk)"];
"1000284" [label="(Call,!dst)"];
"1000113" [label="(MethodParameterIn,struct request_sock *req)"];
"1000140" [label="(Call,newsk = tcp_v4_syn_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t     req_unhash, own_req))"];
"1000319" [label="(Call,inet6_sk_rx_dst_set(newsk, skb))"];
"1000236" [label="(Call,newnp->mcast_oif)"];
"1000253" [label="(Call,ip6_flowinfo(ipv6_hdr(skb)))"];
"1000255" [label="(Identifier,skb)"];
"1000258" [label="(Identifier,np)"];
"1000256" [label="(ControlStructure,if (np->repflow))"];
"1000123" [label="(Call,inet6_sk(sk))"];
"1000254" [label="(Call,ipv6_hdr(skb))"];
"1000260" [label="(Call,newnp->flow_label = ip6_flowlabel(ipv6_hdr(skb)))"];
"1000147" [label="(Identifier,req_unhash)"];
"1000301" [label="(Call,tcp_create_openreq_child(sk, req, skb))"];
"1000441" [label="(Call,ipv6_hdr(skb))"];
"1000635" [label="(Call,dst_release(dst))"];
"1000112" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000246" [label="(Call,ipv6_hdr(skb))"];
"1000287" [label="(Call,dst = inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP))"];
"1000239" [label="(Call,tcp_v6_iif(skb))"];
"1000535" [label="(Call,tcp_v6_md5_do_lookup(sk, &newsk->sk_v6_daddr))"];
"1000280" [label="(Call,sk_acceptq_is_full(sk))"];
"1000642" [label="(MethodReturn,static struct sock *)"];
"1000289" [label="(Call,inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP))"];
"1000501" [label="(Call,tcp_ca_openreq_child(newsk, dst))"];
"1000261" [label="(Call,newnp->flow_label)"];
"1000245" [label="(Call,ipv6_hdr(skb)->hop_limit)"];
"1000601" [label="(Call,sk_gfp_mask(sk, GFP_ATOMIC))"];
"1000296" [label="(Call,!dst)"];
"1000250" [label="(Call,newnp->rcv_flowinfo)"];
"1000148" [label="(Identifier,own_req)"];
"1000139" [label="(Block,)"];
"1000143" [label="(Identifier,sk)"];
"1000248" [label="(FieldIdentifier,hop_limit)"];
"1000146" [label="(Identifier,dst)"];
"1000314" [label="(Call,ip6_dst_store(newsk, dst, NULL, NULL))"];
"1000121" [label="(Call,*np = inet6_sk(sk))"];
"1000452" [label="(Call,ipv6_hdr(skb))"];
"1000239" -> "1000235"  [label="AST: "];
"1000239" -> "1000240"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000235" -> "1000239"  [label="CFG: "];
"1000239" -> "1000235"  [label="DDG: skb"];
"1000142" -> "1000239"  [label="DDG: skb"];
"1000112" -> "1000239"  [label="DDG: skb"];
"1000239" -> "1000246"  [label="DDG: skb"];
"1000142" -> "1000140"  [label="AST: "];
"1000142" -> "1000148"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000145" -> "1000142"  [label="AST: "];
"1000146" -> "1000142"  [label="AST: "];
"1000147" -> "1000142"  [label="AST: "];
"1000148" -> "1000142"  [label="AST: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000142" -> "1000642"  [label="DDG: skb"];
"1000142" -> "1000642"  [label="DDG: own_req"];
"1000142" -> "1000642"  [label="DDG: req"];
"1000142" -> "1000642"  [label="DDG: sk"];
"1000142" -> "1000642"  [label="DDG: dst"];
"1000142" -> "1000642"  [label="DDG: req_unhash"];
"1000142" -> "1000140"  [label="DDG: skb"];
"1000142" -> "1000140"  [label="DDG: req_unhash"];
"1000142" -> "1000140"  [label="DDG: req"];
"1000142" -> "1000140"  [label="DDG: sk"];
"1000142" -> "1000140"  [label="DDG: dst"];
"1000142" -> "1000140"  [label="DDG: own_req"];
"1000123" -> "1000142"  [label="DDG: sk"];
"1000111" -> "1000142"  [label="DDG: sk"];
"1000112" -> "1000142"  [label="DDG: skb"];
"1000113" -> "1000142"  [label="DDG: req"];
"1000114" -> "1000142"  [label="DDG: dst"];
"1000115" -> "1000142"  [label="DDG: req_unhash"];
"1000116" -> "1000142"  [label="DDG: own_req"];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000123" -> "1000121"  [label="DDG: sk"];
"1000111" -> "1000123"  [label="DDG: sk"];
"1000123" -> "1000280"  [label="DDG: sk"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000642"  [label="DDG: sk"];
"1000111" -> "1000280"  [label="DDG: sk"];
"1000111" -> "1000289"  [label="DDG: sk"];
"1000111" -> "1000301"  [label="DDG: sk"];
"1000111" -> "1000513"  [label="DDG: sk"];
"1000111" -> "1000535"  [label="DDG: sk"];
"1000111" -> "1000559"  [label="DDG: sk"];
"1000111" -> "1000564"  [label="DDG: sk"];
"1000111" -> "1000601"  [label="DDG: sk"];
"1000111" -> "1000631"  [label="DDG: sk"];
"1000111" -> "1000638"  [label="DDG: sk"];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000642"  [label="DDG: skb"];
"1000112" -> "1000246"  [label="DDG: skb"];
"1000112" -> "1000254"  [label="DDG: skb"];
"1000112" -> "1000265"  [label="DDG: skb"];
"1000112" -> "1000301"  [label="DDG: skb"];
"1000112" -> "1000319"  [label="DDG: skb"];
"1000112" -> "1000426"  [label="DDG: skb"];
"1000112" -> "1000433"  [label="DDG: skb"];
"1000112" -> "1000441"  [label="DDG: skb"];
"1000112" -> "1000452"  [label="DDG: skb"];
"1000113" -> "1000110"  [label="AST: "];
"1000113" -> "1000642"  [label="DDG: req"];
"1000113" -> "1000277"  [label="DDG: req"];
"1000113" -> "1000289"  [label="DDG: req"];
"1000113" -> "1000301"  [label="DDG: req"];
"1000113" -> "1000585"  [label="DDG: req"];
"1000114" -> "1000110"  [label="AST: "];
"1000114" -> "1000642"  [label="DDG: dst"];
"1000114" -> "1000284"  [label="DDG: dst"];
"1000114" -> "1000287"  [label="DDG: dst"];
"1000114" -> "1000296"  [label="DDG: dst"];
"1000114" -> "1000314"  [label="DDG: dst"];
"1000114" -> "1000501"  [label="DDG: dst"];
"1000114" -> "1000506"  [label="DDG: dst"];
"1000114" -> "1000515"  [label="DDG: dst"];
"1000114" -> "1000635"  [label="DDG: dst"];
"1000115" -> "1000110"  [label="AST: "];
"1000115" -> "1000642"  [label="DDG: req_unhash"];
"1000115" -> "1000579"  [label="DDG: req_unhash"];
"1000116" -> "1000110"  [label="AST: "];
"1000116" -> "1000642"  [label="DDG: own_req"];
"1000235" -> "1000139"  [label="AST: "];
"1000236" -> "1000235"  [label="AST: "];
"1000243" -> "1000235"  [label="CFG: "];
"1000235" -> "1000642"  [label="DDG: newnp->mcast_oif"];
"1000235" -> "1000642"  [label="DDG: tcp_v6_iif(skb)"];
"1000246" -> "1000245"  [label="AST: "];
"1000246" -> "1000247"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000248" -> "1000246"  [label="CFG: "];
"1000246" -> "1000254"  [label="DDG: skb"];
"1000254" -> "1000253"  [label="AST: "];
"1000254" -> "1000255"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000253" -> "1000254"  [label="CFG: "];
"1000254" -> "1000642"  [label="DDG: skb"];
"1000254" -> "1000253"  [label="DDG: skb"];
"1000254" -> "1000265"  [label="DDG: skb"];
"1000253" -> "1000249"  [label="AST: "];
"1000249" -> "1000253"  [label="CFG: "];
"1000253" -> "1000642"  [label="DDG: ipv6_hdr(skb)"];
"1000253" -> "1000249"  [label="DDG: ipv6_hdr(skb)"];
"1000249" -> "1000139"  [label="AST: "];
"1000250" -> "1000249"  [label="AST: "];
"1000258" -> "1000249"  [label="CFG: "];
"1000249" -> "1000642"  [label="DDG: ip6_flowinfo(ipv6_hdr(skb))"];
"1000249" -> "1000642"  [label="DDG: newnp->rcv_flowinfo"];
"1000265" -> "1000264"  [label="AST: "];
"1000265" -> "1000266"  [label="CFG: "];
"1000266" -> "1000265"  [label="AST: "];
"1000264" -> "1000265"  [label="CFG: "];
"1000265" -> "1000642"  [label="DDG: skb"];
"1000265" -> "1000264"  [label="DDG: skb"];
"1000264" -> "1000260"  [label="AST: "];
"1000260" -> "1000264"  [label="CFG: "];
"1000264" -> "1000642"  [label="DDG: ipv6_hdr(skb)"];
"1000264" -> "1000260"  [label="DDG: ipv6_hdr(skb)"];
"1000260" -> "1000256"  [label="AST: "];
"1000261" -> "1000260"  [label="AST: "];
"1000268" -> "1000260"  [label="CFG: "];
"1000260" -> "1000642"  [label="DDG: ip6_flowlabel(ipv6_hdr(skb))"];
"1000260" -> "1000642"  [label="DDG: newnp->flow_label"];
}
