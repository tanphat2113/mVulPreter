digraph "0_linux_83eaddab4378db256d00d295bda6ca997cd13a52_0@pointer" {
"1000462" [label="(Call,opt = rcu_dereference(np->opt))"];
"1000464" [label="(Call,rcu_dereference(np->opt))"];
"1000473" [label="(Call,ipv6_dup_options(newsk, opt))"];
"1000471" [label="(Call,opt = ipv6_dup_options(newsk, opt))"];
"1000476" [label="(Call,RCU_INIT_POINTER(newnp->opt, opt))"];
"1000483" [label="(Call,inet_csk(newsk))"];
"1000491" [label="(Call,inet_csk(newsk))"];
"1000501" [label="(Call,tcp_ca_openreq_child(newsk, dst))"];
"1000504" [label="(Call,tcp_sync_mss(newsk, dst_mtu(dst)))"];
"1000517" [label="(Call,tcp_initialize_rcv_mss(newsk))"];
"1000544" [label="(Call,tcp_md5_do_add(newsk, (union tcp_md5_addr *)&newsk->sk_v6_daddr,\n\t\t\t       AF_INET6, key->key, key->keylen,\n\t\t\t       sk_gfp_mask(sk, GFP_ATOMIC)))"];
"1000564" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000563" [label="(Call,__inet_inherit_port(sk, newsk) < 0)"];
"1000569" [label="(Call,inet_csk_prepare_forced_close(newsk))"];
"1000571" [label="(Call,tcp_done(newsk))"];
"1000577" [label="(Call,inet_ehash_nolisten(newsk, req_to_sk(req_unhash)))"];
"1000574" [label="(Call,*own_req = inet_ehash_nolisten(newsk, req_to_sk(req_unhash)))"];
"1000622" [label="(Call,skb_set_owner_r(newnp->pktoptions, newsk))"];
"1000627" [label="(Return,return newsk;)"];
"1000601" [label="(Call,sk_gfp_mask(sk, GFP_ATOMIC))"];
"1000597" [label="(Call,skb_clone(ireq->pktopts,\n\t\t\t\t\t\t      sk_gfp_mask(sk, GFP_ATOMIC)))"];
"1000593" [label="(Call,newnp->pktoptions = skb_clone(ireq->pktopts,\n\t\t\t\t\t\t      sk_gfp_mask(sk, GFP_ATOMIC)))"];
"1000618" [label="(Call,tcp_v6_restore_cb(newnp->pktoptions))"];
"1000604" [label="(Call,consume_skb(ireq->pktopts))"];
"1000638" [label="(Call,tcp_listendrop(sk))"];
"1000506" [label="(Call,dst_mtu(dst))"];
"1000515" [label="(Call,dst_metric_advmss(dst))"];
"1000512" [label="(Call,tcp_mss_clamp(tcp_sk(sk), dst_metric_advmss(dst)))"];
"1000508" [label="(Call,newtp->advmss = tcp_mss_clamp(tcp_sk(sk), dst_metric_advmss(dst)))"];
"1000482" [label="(Call,inet_csk(newsk)->icsk_ext_hdr_len)"];
"1000117" [label="(Block,)"];
"1000515" [label="(Call,dst_metric_advmss(dst))"];
"1000477" [label="(Call,newnp->opt)"];
"1000509" [label="(Call,newtp->advmss)"];
"1000464" [label="(Call,rcu_dereference(np->opt))"];
"1000469" [label="(Identifier,opt)"];
"1000114" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000475" [label="(Identifier,opt)"];
"1000506" [label="(Call,dst_mtu(dst))"];
"1000622" [label="(Call,skb_set_owner_r(newnp->pktoptions, newsk))"];
"1000628" [label="(Identifier,newsk)"];
"1000573" [label="(ControlStructure,goto out;)"];
"1000568" [label="(Block,)"];
"1000485" [label="(FieldIdentifier,icsk_ext_hdr_len)"];
"1000577" [label="(Call,inet_ehash_nolisten(newsk, req_to_sk(req_unhash)))"];
"1000470" [label="(Block,)"];
"1000492" [label="(Identifier,newsk)"];
"1000505" [label="(Identifier,newsk)"];
"1000594" [label="(Call,newnp->pktoptions)"];
"1000601" [label="(Call,sk_gfp_mask(sk, GFP_ATOMIC))"];
"1000491" [label="(Call,inet_csk(newsk))"];
"1000314" [label="(Call,ip6_dst_store(newsk, dst, NULL, NULL))"];
"1000517" [label="(Call,tcp_initialize_rcv_mss(newsk))"];
"1000605" [label="(Call,ireq->pktopts)"];
"1000502" [label="(Identifier,newsk)"];
"1000504" [label="(Call,tcp_sync_mss(newsk, dst_mtu(dst)))"];
"1000513" [label="(Call,tcp_sk(sk))"];
"1000583" [label="(Identifier,own_req)"];
"1000478" [label="(Identifier,newnp)"];
"1000565" [label="(Identifier,sk)"];
"1000569" [label="(Call,inet_csk_prepare_forced_close(newsk))"];
"1000597" [label="(Call,skb_clone(ireq->pktopts,\n\t\t\t\t\t\t      sk_gfp_mask(sk, GFP_ATOMIC)))"];
"1000603" [label="(Identifier,GFP_ATOMIC)"];
"1000639" [label="(Identifier,sk)"];
"1000346" [label="(Call,inet6_sk(newsk))"];
"1000623" [label="(Call,newnp->pktoptions)"];
"1000483" [label="(Call,inet_csk(newsk))"];
"1000459" [label="(ControlStructure,if (!opt))"];
"1000575" [label="(Call,*own_req)"];
"1000493" [label="(FieldIdentifier,icsk_ext_hdr_len)"];
"1000546" [label="(Call,(union tcp_md5_addr *)&newsk->sk_v6_daddr)"];
"1000618" [label="(Call,tcp_v6_restore_cb(newnp->pktoptions))"];
"1000535" [label="(Call,tcp_v6_md5_do_lookup(sk, &newsk->sk_v6_daddr))"];
"1000617" [label="(Block,)"];
"1000642" [label="(MethodReturn,static struct sock *)"];
"1000593" [label="(Call,newnp->pktoptions = skb_clone(ireq->pktopts,\n\t\t\t\t\t\t      sk_gfp_mask(sk, GFP_ATOMIC)))"];
"1000521" [label="(Identifier,newinet)"];
"1000474" [label="(Identifier,newsk)"];
"1000417" [label="(Call,newnp->opt\t  = NULL)"];
"1000559" [label="(Call,sk_gfp_mask(sk, GFP_ATOMIC))"];
"1000571" [label="(Call,tcp_done(newsk))"];
"1000463" [label="(Identifier,opt)"];
"1000507" [label="(Identifier,dst)"];
"1000579" [label="(Call,req_to_sk(req_unhash))"];
"1000631" [label="(Call,sock_net(sk))"];
"1000564" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000578" [label="(Identifier,newsk)"];
"1000570" [label="(Identifier,newsk)"];
"1000516" [label="(Identifier,dst)"];
"1000627" [label="(Return,return newsk;)"];
"1000510" [label="(Identifier,newtp)"];
"1000626" [label="(Identifier,newsk)"];
"1000501" [label="(Call,tcp_ca_openreq_child(newsk, dst))"];
"1000576" [label="(Identifier,own_req)"];
"1000574" [label="(Call,*own_req = inet_ehash_nolisten(newsk, req_to_sk(req_unhash)))"];
"1000462" [label="(Call,opt = rcu_dereference(np->opt))"];
"1000624" [label="(Identifier,newnp)"];
"1000460" [label="(Call,!opt)"];
"1000619" [label="(Call,newnp->pktoptions)"];
"1000503" [label="(Identifier,dst)"];
"1000556" [label="(Call,key->keylen)"];
"1000641" [label="(Identifier,NULL)"];
"1000471" [label="(Call,opt = ipv6_dup_options(newsk, opt))"];
"1000111" [label="(MethodParameterIn,const struct sock *sk)"];
"1000476" [label="(Call,RCU_INIT_POINTER(newnp->opt, opt))"];
"1000563" [label="(Call,__inet_inherit_port(sk, newsk) < 0)"];
"1000638" [label="(Call,tcp_listendrop(sk))"];
"1000465" [label="(Call,np->opt)"];
"1000602" [label="(Identifier,sk)"];
"1000545" [label="(Identifier,newsk)"];
"1000604" [label="(Call,consume_skb(ireq->pktopts))"];
"1000512" [label="(Call,tcp_mss_clamp(tcp_sk(sk), dst_metric_advmss(dst)))"];
"1000480" [label="(Identifier,opt)"];
"1000553" [label="(Call,key->key)"];
"1000552" [label="(Identifier,AF_INET6)"];
"1000301" [label="(Call,tcp_create_openreq_child(sk, req, skb))"];
"1000562" [label="(ControlStructure,if (__inet_inherit_port(sk, newsk) < 0))"];
"1000610" [label="(Identifier,ireq)"];
"1000566" [label="(Identifier,newsk)"];
"1000598" [label="(Call,ireq->pktopts)"];
"1000544" [label="(Call,tcp_md5_do_add(newsk, (union tcp_md5_addr *)&newsk->sk_v6_daddr,\n\t\t\t       AF_INET6, key->key, key->keylen,\n\t\t\t       sk_gfp_mask(sk, GFP_ATOMIC)))"];
"1000592" [label="(Block,)"];
"1000606" [label="(Identifier,ireq)"];
"1000289" [label="(Call,inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP))"];
"1000472" [label="(Identifier,opt)"];
"1000543" [label="(Block,)"];
"1000518" [label="(Identifier,newsk)"];
"1000508" [label="(Call,newtp->advmss = tcp_mss_clamp(tcp_sk(sk), dst_metric_advmss(dst)))"];
"1000484" [label="(Identifier,newsk)"];
"1000567" [label="(Literal,0)"];
"1000473" [label="(Call,ipv6_dup_options(newsk, opt))"];
"1000572" [label="(Identifier,newsk)"];
"1000490" [label="(Call,inet_csk(newsk)->icsk_ext_hdr_len)"];
"1000462" -> "1000459"  [label="AST: "];
"1000462" -> "1000464"  [label="CFG: "];
"1000463" -> "1000462"  [label="AST: "];
"1000464" -> "1000462"  [label="AST: "];
"1000469" -> "1000462"  [label="CFG: "];
"1000462" -> "1000642"  [label="DDG: opt"];
"1000462" -> "1000642"  [label="DDG: rcu_dereference(np->opt)"];
"1000464" -> "1000462"  [label="DDG: np->opt"];
"1000462" -> "1000473"  [label="DDG: opt"];
"1000464" -> "1000465"  [label="CFG: "];
"1000465" -> "1000464"  [label="AST: "];
"1000464" -> "1000642"  [label="DDG: np->opt"];
"1000473" -> "1000471"  [label="AST: "];
"1000473" -> "1000475"  [label="CFG: "];
"1000474" -> "1000473"  [label="AST: "];
"1000475" -> "1000473"  [label="AST: "];
"1000471" -> "1000473"  [label="CFG: "];
"1000473" -> "1000471"  [label="DDG: newsk"];
"1000473" -> "1000471"  [label="DDG: opt"];
"1000346" -> "1000473"  [label="DDG: newsk"];
"1000460" -> "1000473"  [label="DDG: opt"];
"1000473" -> "1000483"  [label="DDG: newsk"];
"1000471" -> "1000470"  [label="AST: "];
"1000472" -> "1000471"  [label="AST: "];
"1000478" -> "1000471"  [label="CFG: "];
"1000471" -> "1000642"  [label="DDG: ipv6_dup_options(newsk, opt)"];
"1000471" -> "1000476"  [label="DDG: opt"];
"1000476" -> "1000470"  [label="AST: "];
"1000476" -> "1000480"  [label="CFG: "];
"1000477" -> "1000476"  [label="AST: "];
"1000480" -> "1000476"  [label="AST: "];
"1000484" -> "1000476"  [label="CFG: "];
"1000476" -> "1000642"  [label="DDG: RCU_INIT_POINTER(newnp->opt, opt)"];
"1000476" -> "1000642"  [label="DDG: newnp->opt"];
"1000476" -> "1000642"  [label="DDG: opt"];
"1000417" -> "1000476"  [label="DDG: newnp->opt"];
"1000483" -> "1000482"  [label="AST: "];
"1000483" -> "1000484"  [label="CFG: "];
"1000484" -> "1000483"  [label="AST: "];
"1000485" -> "1000483"  [label="CFG: "];
"1000346" -> "1000483"  [label="DDG: newsk"];
"1000483" -> "1000491"  [label="DDG: newsk"];
"1000483" -> "1000501"  [label="DDG: newsk"];
"1000491" -> "1000490"  [label="AST: "];
"1000491" -> "1000492"  [label="CFG: "];
"1000492" -> "1000491"  [label="AST: "];
"1000493" -> "1000491"  [label="CFG: "];
"1000491" -> "1000501"  [label="DDG: newsk"];
"1000501" -> "1000117"  [label="AST: "];
"1000501" -> "1000503"  [label="CFG: "];
"1000502" -> "1000501"  [label="AST: "];
"1000503" -> "1000501"  [label="AST: "];
"1000505" -> "1000501"  [label="CFG: "];
"1000501" -> "1000642"  [label="DDG: tcp_ca_openreq_child(newsk, dst)"];
"1000314" -> "1000501"  [label="DDG: dst"];
"1000114" -> "1000501"  [label="DDG: dst"];
"1000501" -> "1000504"  [label="DDG: newsk"];
"1000501" -> "1000506"  [label="DDG: dst"];
"1000504" -> "1000117"  [label="AST: "];
"1000504" -> "1000506"  [label="CFG: "];
"1000505" -> "1000504"  [label="AST: "];
"1000506" -> "1000504"  [label="AST: "];
"1000510" -> "1000504"  [label="CFG: "];
"1000504" -> "1000642"  [label="DDG: dst_mtu(dst)"];
"1000504" -> "1000642"  [label="DDG: tcp_sync_mss(newsk, dst_mtu(dst))"];
"1000506" -> "1000504"  [label="DDG: dst"];
"1000504" -> "1000517"  [label="DDG: newsk"];
"1000517" -> "1000117"  [label="AST: "];
"1000517" -> "1000518"  [label="CFG: "];
"1000518" -> "1000517"  [label="AST: "];
"1000521" -> "1000517"  [label="CFG: "];
"1000517" -> "1000642"  [label="DDG: tcp_initialize_rcv_mss(newsk)"];
"1000517" -> "1000544"  [label="DDG: newsk"];
"1000517" -> "1000564"  [label="DDG: newsk"];
"1000544" -> "1000543"  [label="AST: "];
"1000544" -> "1000559"  [label="CFG: "];
"1000545" -> "1000544"  [label="AST: "];
"1000546" -> "1000544"  [label="AST: "];
"1000552" -> "1000544"  [label="AST: "];
"1000553" -> "1000544"  [label="AST: "];
"1000556" -> "1000544"  [label="AST: "];
"1000559" -> "1000544"  [label="AST: "];
"1000565" -> "1000544"  [label="CFG: "];
"1000544" -> "1000642"  [label="DDG: key->key"];
"1000544" -> "1000642"  [label="DDG: (union tcp_md5_addr *)&newsk->sk_v6_daddr"];
"1000544" -> "1000642"  [label="DDG: key->keylen"];
"1000544" -> "1000642"  [label="DDG: sk_gfp_mask(sk, GFP_ATOMIC)"];
"1000544" -> "1000642"  [label="DDG: tcp_md5_do_add(newsk, (union tcp_md5_addr *)&newsk->sk_v6_daddr,\n\t\t\t       AF_INET6, key->key, key->keylen,\n\t\t\t       sk_gfp_mask(sk, GFP_ATOMIC))"];
"1000544" -> "1000642"  [label="DDG: AF_INET6"];
"1000546" -> "1000544"  [label="DDG: &newsk->sk_v6_daddr"];
"1000559" -> "1000544"  [label="DDG: sk"];
"1000559" -> "1000544"  [label="DDG: GFP_ATOMIC"];
"1000544" -> "1000564"  [label="DDG: newsk"];
"1000564" -> "1000563"  [label="AST: "];
"1000564" -> "1000566"  [label="CFG: "];
"1000565" -> "1000564"  [label="AST: "];
"1000566" -> "1000564"  [label="AST: "];
"1000567" -> "1000564"  [label="CFG: "];
"1000564" -> "1000642"  [label="DDG: sk"];
"1000564" -> "1000563"  [label="DDG: sk"];
"1000564" -> "1000563"  [label="DDG: newsk"];
"1000559" -> "1000564"  [label="DDG: sk"];
"1000535" -> "1000564"  [label="DDG: sk"];
"1000111" -> "1000564"  [label="DDG: sk"];
"1000564" -> "1000569"  [label="DDG: newsk"];
"1000564" -> "1000577"  [label="DDG: newsk"];
"1000564" -> "1000601"  [label="DDG: sk"];
"1000564" -> "1000638"  [label="DDG: sk"];
"1000563" -> "1000562"  [label="AST: "];
"1000563" -> "1000567"  [label="CFG: "];
"1000567" -> "1000563"  [label="AST: "];
"1000570" -> "1000563"  [label="CFG: "];
"1000576" -> "1000563"  [label="CFG: "];
"1000563" -> "1000642"  [label="DDG: __inet_inherit_port(sk, newsk) < 0"];
"1000563" -> "1000642"  [label="DDG: __inet_inherit_port(sk, newsk)"];
"1000569" -> "1000568"  [label="AST: "];
"1000569" -> "1000570"  [label="CFG: "];
"1000570" -> "1000569"  [label="AST: "];
"1000572" -> "1000569"  [label="CFG: "];
"1000569" -> "1000642"  [label="DDG: inet_csk_prepare_forced_close(newsk)"];
"1000569" -> "1000571"  [label="DDG: newsk"];
"1000571" -> "1000568"  [label="AST: "];
"1000571" -> "1000572"  [label="CFG: "];
"1000572" -> "1000571"  [label="AST: "];
"1000573" -> "1000571"  [label="CFG: "];
"1000571" -> "1000642"  [label="DDG: tcp_done(newsk)"];
"1000571" -> "1000642"  [label="DDG: newsk"];
"1000577" -> "1000574"  [label="AST: "];
"1000577" -> "1000579"  [label="CFG: "];
"1000578" -> "1000577"  [label="AST: "];
"1000579" -> "1000577"  [label="AST: "];
"1000574" -> "1000577"  [label="CFG: "];
"1000577" -> "1000642"  [label="DDG: req_to_sk(req_unhash)"];
"1000577" -> "1000642"  [label="DDG: newsk"];
"1000577" -> "1000574"  [label="DDG: newsk"];
"1000577" -> "1000574"  [label="DDG: req_to_sk(req_unhash)"];
"1000579" -> "1000577"  [label="DDG: req_unhash"];
"1000577" -> "1000622"  [label="DDG: newsk"];
"1000577" -> "1000627"  [label="DDG: newsk"];
"1000574" -> "1000117"  [label="AST: "];
"1000575" -> "1000574"  [label="AST: "];
"1000583" -> "1000574"  [label="CFG: "];
"1000574" -> "1000642"  [label="DDG: *own_req"];
"1000574" -> "1000642"  [label="DDG: inet_ehash_nolisten(newsk, req_to_sk(req_unhash))"];
"1000622" -> "1000617"  [label="AST: "];
"1000622" -> "1000626"  [label="CFG: "];
"1000623" -> "1000622"  [label="AST: "];
"1000626" -> "1000622"  [label="AST: "];
"1000628" -> "1000622"  [label="CFG: "];
"1000622" -> "1000642"  [label="DDG: skb_set_owner_r(newnp->pktoptions, newsk)"];
"1000622" -> "1000642"  [label="DDG: newnp->pktoptions"];
"1000622" -> "1000642"  [label="DDG: newsk"];
"1000618" -> "1000622"  [label="DDG: newnp->pktoptions"];
"1000622" -> "1000627"  [label="DDG: newsk"];
"1000627" -> "1000117"  [label="AST: "];
"1000627" -> "1000628"  [label="CFG: "];
"1000628" -> "1000627"  [label="AST: "];
"1000642" -> "1000627"  [label="CFG: "];
"1000627" -> "1000642"  [label="DDG: <RET>"];
"1000628" -> "1000627"  [label="DDG: newsk"];
"1000601" -> "1000597"  [label="AST: "];
"1000601" -> "1000603"  [label="CFG: "];
"1000602" -> "1000601"  [label="AST: "];
"1000603" -> "1000601"  [label="AST: "];
"1000597" -> "1000601"  [label="CFG: "];
"1000601" -> "1000642"  [label="DDG: sk"];
"1000601" -> "1000642"  [label="DDG: GFP_ATOMIC"];
"1000601" -> "1000597"  [label="DDG: sk"];
"1000601" -> "1000597"  [label="DDG: GFP_ATOMIC"];
"1000111" -> "1000601"  [label="DDG: sk"];
"1000559" -> "1000601"  [label="DDG: GFP_ATOMIC"];
"1000597" -> "1000593"  [label="AST: "];
"1000598" -> "1000597"  [label="AST: "];
"1000593" -> "1000597"  [label="CFG: "];
"1000597" -> "1000642"  [label="DDG: sk_gfp_mask(sk, GFP_ATOMIC)"];
"1000597" -> "1000593"  [label="DDG: ireq->pktopts"];
"1000597" -> "1000593"  [label="DDG: sk_gfp_mask(sk, GFP_ATOMIC)"];
"1000597" -> "1000604"  [label="DDG: ireq->pktopts"];
"1000593" -> "1000592"  [label="AST: "];
"1000594" -> "1000593"  [label="AST: "];
"1000606" -> "1000593"  [label="CFG: "];
"1000593" -> "1000642"  [label="DDG: skb_clone(ireq->pktopts,\n\t\t\t\t\t\t      sk_gfp_mask(sk, GFP_ATOMIC))"];
"1000593" -> "1000642"  [label="DDG: newnp->pktoptions"];
"1000593" -> "1000618"  [label="DDG: newnp->pktoptions"];
"1000618" -> "1000617"  [label="AST: "];
"1000618" -> "1000619"  [label="CFG: "];
"1000619" -> "1000618"  [label="AST: "];
"1000624" -> "1000618"  [label="CFG: "];
"1000618" -> "1000642"  [label="DDG: tcp_v6_restore_cb(newnp->pktoptions)"];
"1000604" -> "1000592"  [label="AST: "];
"1000604" -> "1000605"  [label="CFG: "];
"1000605" -> "1000604"  [label="AST: "];
"1000610" -> "1000604"  [label="CFG: "];
"1000604" -> "1000642"  [label="DDG: consume_skb(ireq->pktopts)"];
"1000638" -> "1000117"  [label="AST: "];
"1000638" -> "1000639"  [label="CFG: "];
"1000639" -> "1000638"  [label="AST: "];
"1000641" -> "1000638"  [label="CFG: "];
"1000638" -> "1000642"  [label="DDG: tcp_listendrop(sk)"];
"1000638" -> "1000642"  [label="DDG: sk"];
"1000631" -> "1000638"  [label="DDG: sk"];
"1000289" -> "1000638"  [label="DDG: sk"];
"1000301" -> "1000638"  [label="DDG: sk"];
"1000111" -> "1000638"  [label="DDG: sk"];
"1000506" -> "1000507"  [label="CFG: "];
"1000507" -> "1000506"  [label="AST: "];
"1000114" -> "1000506"  [label="DDG: dst"];
"1000506" -> "1000515"  [label="DDG: dst"];
"1000515" -> "1000512"  [label="AST: "];
"1000515" -> "1000516"  [label="CFG: "];
"1000516" -> "1000515"  [label="AST: "];
"1000512" -> "1000515"  [label="CFG: "];
"1000515" -> "1000642"  [label="DDG: dst"];
"1000515" -> "1000512"  [label="DDG: dst"];
"1000114" -> "1000515"  [label="DDG: dst"];
"1000512" -> "1000508"  [label="AST: "];
"1000513" -> "1000512"  [label="AST: "];
"1000508" -> "1000512"  [label="CFG: "];
"1000512" -> "1000642"  [label="DDG: tcp_sk(sk)"];
"1000512" -> "1000642"  [label="DDG: dst_metric_advmss(dst)"];
"1000512" -> "1000508"  [label="DDG: tcp_sk(sk)"];
"1000512" -> "1000508"  [label="DDG: dst_metric_advmss(dst)"];
"1000513" -> "1000512"  [label="DDG: sk"];
"1000508" -> "1000117"  [label="AST: "];
"1000509" -> "1000508"  [label="AST: "];
"1000518" -> "1000508"  [label="CFG: "];
"1000508" -> "1000642"  [label="DDG: newtp->advmss"];
"1000508" -> "1000642"  [label="DDG: tcp_mss_clamp(tcp_sk(sk), dst_metric_advmss(dst))"];
}
