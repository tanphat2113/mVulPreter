digraph "0_linux_83eaddab4378db256d00d295bda6ca997cd13a52_0@API" {
"1000348" [label="(Call,memcpy(newnp, np, sizeof(struct ipv6_pinfo)))"];
"1000344" [label="(Call,newnp = inet6_sk(newsk))"];
"1000346" [label="(Call,inet6_sk(newsk))"];
"1000342" [label="(Call,inet_sk(newsk))"];
"1000338" [label="(Call,tcp_sk(newsk))"];
"1000329" [label="(Call,inet_sk(newsk))"];
"1000324" [label="(Call,(struct tcp6_sock *)newsk)"];
"1000319" [label="(Call,inet6_sk_rx_dst_set(newsk, skb))"];
"1000314" [label="(Call,ip6_dst_store(newsk, dst, NULL, NULL))"];
"1000306" [label="(Call,!newsk)"];
"1000299" [label="(Call,newsk = tcp_create_openreq_child(sk, req, skb))"];
"1000301" [label="(Call,tcp_create_openreq_child(sk, req, skb))"];
"1000289" [label="(Call,inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP))"];
"1000280" [label="(Call,sk_acceptq_is_full(sk))"];
"1000123" [label="(Call,inet6_sk(sk))"];
"1000111" [label="(MethodParameterIn,const struct sock *sk)"];
"1000277" [label="(Call,inet_rsk(req))"];
"1000113" [label="(MethodParameterIn,struct request_sock *req)"];
"1000112" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000284" [label="(Call,!dst)"];
"1000114" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000296" [label="(Call,!dst)"];
"1000287" [label="(Call,dst = inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP))"];
"1000121" [label="(Call,*np = inet6_sk(sk))"];
"1000265" [label="(Call,ipv6_hdr(skb))"];
"1000326" [label="(Identifier,newsk)"];
"1000391" [label="(Call,newnp->ipv6_ac_list = NULL)"];
"1000117" [label="(Block,)"];
"1000308" [label="(ControlStructure,goto out_nonewsk;)"];
"1000515" [label="(Call,dst_metric_advmss(dst))"];
"1000340" [label="(Call,newinet = inet_sk(newsk))"];
"1000114" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000288" [label="(Identifier,dst)"];
"1000298" [label="(ControlStructure,goto out;)"];
"1000295" [label="(ControlStructure,if (!dst))"];
"1000286" [label="(Block,)"];
"1000180" [label="(Call,memcpy(newnp, np, sizeof(struct ipv6_pinfo)))"];
"1000506" [label="(Call,dst_mtu(dst))"];
"1000293" [label="(Identifier,req)"];
"1000304" [label="(Identifier,skb)"];
"1000254" [label="(Call,ipv6_hdr(skb))"];
"1000635" [label="(Call,dst_release(dst))"];
"1000345" [label="(Identifier,newnp)"];
"1000336" [label="(Call,newtp = tcp_sk(newsk))"];
"1000330" [label="(Identifier,newsk)"];
"1000601" [label="(Call,sk_gfp_mask(sk, GFP_ATOMIC))"];
"1000122" [label="(Identifier,np)"];
"1000608" [label="(Call,ireq->pktopts = NULL)"];
"1000314" [label="(Call,ip6_dst_store(newsk, dst, NULL, NULL))"];
"1000290" [label="(Identifier,sk)"];
"1000285" [label="(Identifier,dst)"];
"1000433" [label="(Call,ipv6_hdr(skb))"];
"1000307" [label="(Identifier,newsk)"];
"1000277" [label="(Call,inet_rsk(req))"];
"1000513" [label="(Call,tcp_sk(sk))"];
"1000302" [label="(Identifier,sk)"];
"1000297" [label="(Identifier,dst)"];
"1000275" [label="(Call,ireq = inet_rsk(req))"];
"1000640" [label="(Return,return NULL;)"];
"1000311" [label="(Identifier,newsk)"];
"1000319" [label="(Call,inet6_sk_rx_dst_set(newsk, skb))"];
"1000323" [label="(Identifier,newtcp6sk)"];
"1000346" [label="(Call,inet6_sk(newsk))"];
"1000322" [label="(Call,newtcp6sk = (struct tcp6_sock *)newsk)"];
"1000483" [label="(Call,inet_csk(newsk))"];
"1000112" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000349" [label="(Identifier,newnp)"];
"1000246" [label="(Call,ipv6_hdr(skb))"];
"1000344" [label="(Call,newnp = inet6_sk(newsk))"];
"1000535" [label="(Call,tcp_v6_md5_do_lookup(sk, &newsk->sk_v6_daddr))"];
"1000280" [label="(Call,sk_acceptq_is_full(sk))"];
"1000642" [label="(MethodReturn,static struct sock *)"];
"1000351" [label="(Call,sizeof(struct ipv6_pinfo))"];
"1000329" [label="(Call,inet_sk(newsk))"];
"1000386" [label="(Call,newnp->ipv6_mc_list = NULL)"];
"1000417" [label="(Call,newnp->opt\t  = NULL)"];
"1000559" [label="(Call,sk_gfp_mask(sk, GFP_ATOMIC))"];
"1000324" [label="(Call,(struct tcp6_sock *)newsk)"];
"1000142" [label="(Call,tcp_v4_syn_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t     req_unhash, own_req))"];
"1000279" [label="(ControlStructure,if (sk_acceptq_is_full(sk)))"];
"1000355" [label="(Identifier,newsk)"];
"1000315" [label="(Identifier,newsk)"];
"1000299" [label="(Call,newsk = tcp_create_openreq_child(sk, req, skb))"];
"1000631" [label="(Call,sock_net(sk))"];
"1000585" [label="(Call,tcp_move_syn(newtp, req))"];
"1000564" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000426" [label="(Call,tcp_v6_iif(skb))"];
"1000113" [label="(MethodParameterIn,struct request_sock *req)"];
"1000396" [label="(Call,newnp->ipv6_fl_list = NULL)"];
"1000328" [label="(Call,inet_sk(newsk)->pinet6)"];
"1000300" [label="(Identifier,newsk)"];
"1000342" [label="(Call,inet_sk(newsk))"];
"1000320" [label="(Identifier,newsk)"];
"1000294" [label="(Identifier,IPPROTO_TCP)"];
"1000239" [label="(Call,tcp_v6_iif(skb))"];
"1000348" [label="(Call,memcpy(newnp, np, sizeof(struct ipv6_pinfo)))"];
"1000317" [label="(Identifier,NULL)"];
"1000501" [label="(Call,tcp_ca_openreq_child(newsk, dst))"];
"1000296" [label="(Call,!dst)"];
"1000316" [label="(Identifier,dst)"];
"1000338" [label="(Call,tcp_sk(newsk))"];
"1000305" [label="(ControlStructure,if (!newsk))"];
"1000452" [label="(Call,ipv6_hdr(skb))"];
"1000343" [label="(Identifier,newsk)"];
"1000111" [label="(MethodParameterIn,const struct sock *sk)"];
"1000283" [label="(ControlStructure,if (!dst))"];
"1000638" [label="(Call,tcp_listendrop(sk))"];
"1000291" [label="(Call,&fl6)"];
"1000303" [label="(Identifier,req)"];
"1000278" [label="(Identifier,req)"];
"1000347" [label="(Identifier,newsk)"];
"1000124" [label="(Identifier,sk)"];
"1000284" [label="(Call,!dst)"];
"1000135" [label="(Identifier,skb)"];
"1000123" [label="(Call,inet6_sk(sk))"];
"1000301" [label="(Call,tcp_create_openreq_child(sk, req, skb))"];
"1000318" [label="(Identifier,NULL)"];
"1000281" [label="(Identifier,sk)"];
"1000441" [label="(Call,ipv6_hdr(skb))"];
"1000306" [label="(Call,!newsk)"];
"1000282" [label="(ControlStructure,goto out_overflow;)"];
"1000287" [label="(Call,dst = inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP))"];
"1000339" [label="(Identifier,newsk)"];
"1000350" [label="(Identifier,np)"];
"1000289" [label="(Call,inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP))"];
"1000321" [label="(Identifier,skb)"];
"1000381" [label="(Call,newinet->inet_opt = NULL)"];
"1000331" [label="(FieldIdentifier,pinet6)"];
"1000473" [label="(Call,ipv6_dup_options(newsk, opt))"];
"1000412" [label="(Call,newnp->pktoptions = NULL)"];
"1000121" [label="(Call,*np = inet6_sk(sk))"];
"1000348" -> "1000117"  [label="AST: "];
"1000348" -> "1000351"  [label="CFG: "];
"1000349" -> "1000348"  [label="AST: "];
"1000350" -> "1000348"  [label="AST: "];
"1000351" -> "1000348"  [label="AST: "];
"1000355" -> "1000348"  [label="CFG: "];
"1000348" -> "1000642"  [label="DDG: newnp"];
"1000348" -> "1000642"  [label="DDG: memcpy(newnp, np, sizeof(struct ipv6_pinfo))"];
"1000348" -> "1000642"  [label="DDG: np"];
"1000344" -> "1000348"  [label="DDG: newnp"];
"1000121" -> "1000348"  [label="DDG: np"];
"1000344" -> "1000117"  [label="AST: "];
"1000344" -> "1000346"  [label="CFG: "];
"1000345" -> "1000344"  [label="AST: "];
"1000346" -> "1000344"  [label="AST: "];
"1000349" -> "1000344"  [label="CFG: "];
"1000344" -> "1000642"  [label="DDG: inet6_sk(newsk)"];
"1000346" -> "1000344"  [label="DDG: newsk"];
"1000346" -> "1000347"  [label="CFG: "];
"1000347" -> "1000346"  [label="AST: "];
"1000342" -> "1000346"  [label="DDG: newsk"];
"1000346" -> "1000473"  [label="DDG: newsk"];
"1000346" -> "1000483"  [label="DDG: newsk"];
"1000342" -> "1000340"  [label="AST: "];
"1000342" -> "1000343"  [label="CFG: "];
"1000343" -> "1000342"  [label="AST: "];
"1000340" -> "1000342"  [label="CFG: "];
"1000342" -> "1000340"  [label="DDG: newsk"];
"1000338" -> "1000342"  [label="DDG: newsk"];
"1000338" -> "1000336"  [label="AST: "];
"1000338" -> "1000339"  [label="CFG: "];
"1000339" -> "1000338"  [label="AST: "];
"1000336" -> "1000338"  [label="CFG: "];
"1000338" -> "1000336"  [label="DDG: newsk"];
"1000329" -> "1000338"  [label="DDG: newsk"];
"1000329" -> "1000328"  [label="AST: "];
"1000329" -> "1000330"  [label="CFG: "];
"1000330" -> "1000329"  [label="AST: "];
"1000331" -> "1000329"  [label="CFG: "];
"1000324" -> "1000329"  [label="DDG: newsk"];
"1000324" -> "1000322"  [label="AST: "];
"1000324" -> "1000326"  [label="CFG: "];
"1000325" -> "1000324"  [label="AST: "];
"1000326" -> "1000324"  [label="AST: "];
"1000322" -> "1000324"  [label="CFG: "];
"1000324" -> "1000322"  [label="DDG: newsk"];
"1000319" -> "1000324"  [label="DDG: newsk"];
"1000319" -> "1000117"  [label="AST: "];
"1000319" -> "1000321"  [label="CFG: "];
"1000320" -> "1000319"  [label="AST: "];
"1000321" -> "1000319"  [label="AST: "];
"1000323" -> "1000319"  [label="CFG: "];
"1000319" -> "1000642"  [label="DDG: inet6_sk_rx_dst_set(newsk, skb)"];
"1000314" -> "1000319"  [label="DDG: newsk"];
"1000301" -> "1000319"  [label="DDG: skb"];
"1000112" -> "1000319"  [label="DDG: skb"];
"1000319" -> "1000426"  [label="DDG: skb"];
"1000314" -> "1000117"  [label="AST: "];
"1000314" -> "1000318"  [label="CFG: "];
"1000315" -> "1000314"  [label="AST: "];
"1000316" -> "1000314"  [label="AST: "];
"1000317" -> "1000314"  [label="AST: "];
"1000318" -> "1000314"  [label="AST: "];
"1000320" -> "1000314"  [label="CFG: "];
"1000314" -> "1000642"  [label="DDG: ip6_dst_store(newsk, dst, NULL, NULL)"];
"1000306" -> "1000314"  [label="DDG: newsk"];
"1000284" -> "1000314"  [label="DDG: dst"];
"1000296" -> "1000314"  [label="DDG: dst"];
"1000114" -> "1000314"  [label="DDG: dst"];
"1000314" -> "1000381"  [label="DDG: NULL"];
"1000314" -> "1000386"  [label="DDG: NULL"];
"1000314" -> "1000391"  [label="DDG: NULL"];
"1000314" -> "1000396"  [label="DDG: NULL"];
"1000314" -> "1000412"  [label="DDG: NULL"];
"1000314" -> "1000417"  [label="DDG: NULL"];
"1000314" -> "1000501"  [label="DDG: dst"];
"1000314" -> "1000608"  [label="DDG: NULL"];
"1000314" -> "1000640"  [label="DDG: NULL"];
"1000306" -> "1000305"  [label="AST: "];
"1000306" -> "1000307"  [label="CFG: "];
"1000307" -> "1000306"  [label="AST: "];
"1000308" -> "1000306"  [label="CFG: "];
"1000311" -> "1000306"  [label="CFG: "];
"1000306" -> "1000642"  [label="DDG: newsk"];
"1000306" -> "1000642"  [label="DDG: !newsk"];
"1000299" -> "1000306"  [label="DDG: newsk"];
"1000299" -> "1000117"  [label="AST: "];
"1000299" -> "1000301"  [label="CFG: "];
"1000300" -> "1000299"  [label="AST: "];
"1000301" -> "1000299"  [label="AST: "];
"1000307" -> "1000299"  [label="CFG: "];
"1000299" -> "1000642"  [label="DDG: tcp_create_openreq_child(sk, req, skb)"];
"1000301" -> "1000299"  [label="DDG: sk"];
"1000301" -> "1000299"  [label="DDG: req"];
"1000301" -> "1000299"  [label="DDG: skb"];
"1000301" -> "1000304"  [label="CFG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000303" -> "1000301"  [label="AST: "];
"1000304" -> "1000301"  [label="AST: "];
"1000301" -> "1000642"  [label="DDG: skb"];
"1000301" -> "1000642"  [label="DDG: req"];
"1000289" -> "1000301"  [label="DDG: sk"];
"1000289" -> "1000301"  [label="DDG: req"];
"1000280" -> "1000301"  [label="DDG: sk"];
"1000111" -> "1000301"  [label="DDG: sk"];
"1000277" -> "1000301"  [label="DDG: req"];
"1000113" -> "1000301"  [label="DDG: req"];
"1000112" -> "1000301"  [label="DDG: skb"];
"1000301" -> "1000513"  [label="DDG: sk"];
"1000301" -> "1000585"  [label="DDG: req"];
"1000301" -> "1000638"  [label="DDG: sk"];
"1000289" -> "1000287"  [label="AST: "];
"1000289" -> "1000294"  [label="CFG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000291" -> "1000289"  [label="AST: "];
"1000293" -> "1000289"  [label="AST: "];
"1000294" -> "1000289"  [label="AST: "];
"1000287" -> "1000289"  [label="CFG: "];
"1000289" -> "1000642"  [label="DDG: &fl6"];
"1000289" -> "1000642"  [label="DDG: IPPROTO_TCP"];
"1000289" -> "1000642"  [label="DDG: req"];
"1000289" -> "1000287"  [label="DDG: sk"];
"1000289" -> "1000287"  [label="DDG: &fl6"];
"1000289" -> "1000287"  [label="DDG: req"];
"1000289" -> "1000287"  [label="DDG: IPPROTO_TCP"];
"1000280" -> "1000289"  [label="DDG: sk"];
"1000111" -> "1000289"  [label="DDG: sk"];
"1000277" -> "1000289"  [label="DDG: req"];
"1000113" -> "1000289"  [label="DDG: req"];
"1000289" -> "1000638"  [label="DDG: sk"];
"1000280" -> "1000279"  [label="AST: "];
"1000280" -> "1000281"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000282" -> "1000280"  [label="CFG: "];
"1000285" -> "1000280"  [label="CFG: "];
"1000280" -> "1000642"  [label="DDG: sk_acceptq_is_full(sk)"];
"1000123" -> "1000280"  [label="DDG: sk"];
"1000111" -> "1000280"  [label="DDG: sk"];
"1000280" -> "1000631"  [label="DDG: sk"];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000123" -> "1000121"  [label="DDG: sk"];
"1000111" -> "1000123"  [label="DDG: sk"];
"1000123" -> "1000142"  [label="DDG: sk"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000642"  [label="DDG: sk"];
"1000111" -> "1000142"  [label="DDG: sk"];
"1000111" -> "1000513"  [label="DDG: sk"];
"1000111" -> "1000535"  [label="DDG: sk"];
"1000111" -> "1000559"  [label="DDG: sk"];
"1000111" -> "1000564"  [label="DDG: sk"];
"1000111" -> "1000601"  [label="DDG: sk"];
"1000111" -> "1000631"  [label="DDG: sk"];
"1000111" -> "1000638"  [label="DDG: sk"];
"1000277" -> "1000275"  [label="AST: "];
"1000277" -> "1000278"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000275" -> "1000277"  [label="CFG: "];
"1000277" -> "1000642"  [label="DDG: req"];
"1000277" -> "1000275"  [label="DDG: req"];
"1000113" -> "1000277"  [label="DDG: req"];
"1000113" -> "1000110"  [label="AST: "];
"1000113" -> "1000642"  [label="DDG: req"];
"1000113" -> "1000142"  [label="DDG: req"];
"1000113" -> "1000585"  [label="DDG: req"];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000642"  [label="DDG: skb"];
"1000112" -> "1000142"  [label="DDG: skb"];
"1000112" -> "1000239"  [label="DDG: skb"];
"1000112" -> "1000246"  [label="DDG: skb"];
"1000112" -> "1000254"  [label="DDG: skb"];
"1000112" -> "1000265"  [label="DDG: skb"];
"1000112" -> "1000426"  [label="DDG: skb"];
"1000112" -> "1000433"  [label="DDG: skb"];
"1000112" -> "1000441"  [label="DDG: skb"];
"1000112" -> "1000452"  [label="DDG: skb"];
"1000284" -> "1000283"  [label="AST: "];
"1000284" -> "1000285"  [label="CFG: "];
"1000285" -> "1000284"  [label="AST: "];
"1000288" -> "1000284"  [label="CFG: "];
"1000300" -> "1000284"  [label="CFG: "];
"1000284" -> "1000642"  [label="DDG: !dst"];
"1000114" -> "1000284"  [label="DDG: dst"];
"1000284" -> "1000635"  [label="DDG: dst"];
"1000114" -> "1000110"  [label="AST: "];
"1000114" -> "1000642"  [label="DDG: dst"];
"1000114" -> "1000142"  [label="DDG: dst"];
"1000114" -> "1000287"  [label="DDG: dst"];
"1000114" -> "1000296"  [label="DDG: dst"];
"1000114" -> "1000501"  [label="DDG: dst"];
"1000114" -> "1000506"  [label="DDG: dst"];
"1000114" -> "1000515"  [label="DDG: dst"];
"1000114" -> "1000635"  [label="DDG: dst"];
"1000296" -> "1000295"  [label="AST: "];
"1000296" -> "1000297"  [label="CFG: "];
"1000297" -> "1000296"  [label="AST: "];
"1000298" -> "1000296"  [label="CFG: "];
"1000300" -> "1000296"  [label="CFG: "];
"1000296" -> "1000642"  [label="DDG: !dst"];
"1000296" -> "1000642"  [label="DDG: dst"];
"1000287" -> "1000296"  [label="DDG: dst"];
"1000296" -> "1000635"  [label="DDG: dst"];
"1000287" -> "1000286"  [label="AST: "];
"1000288" -> "1000287"  [label="AST: "];
"1000297" -> "1000287"  [label="CFG: "];
"1000287" -> "1000642"  [label="DDG: inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP)"];
"1000121" -> "1000117"  [label="AST: "];
"1000122" -> "1000121"  [label="AST: "];
"1000135" -> "1000121"  [label="CFG: "];
"1000121" -> "1000642"  [label="DDG: inet6_sk(sk)"];
"1000121" -> "1000642"  [label="DDG: np"];
"1000121" -> "1000180"  [label="DDG: np"];
}
