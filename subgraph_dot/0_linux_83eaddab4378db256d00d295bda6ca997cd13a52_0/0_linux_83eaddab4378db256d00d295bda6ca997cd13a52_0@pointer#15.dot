digraph "0_linux_83eaddab4378db256d00d295bda6ca997cd13a52_0@pointer" {
"1000579" [label="(Call,req_to_sk(req_unhash))"];
"1000115" [label="(MethodParameterIn,struct request_sock *req_unhash)"];
"1000577" [label="(Call,inet_ehash_nolisten(newsk, req_to_sk(req_unhash)))"];
"1000574" [label="(Call,*own_req = inet_ehash_nolisten(newsk, req_to_sk(req_unhash)))"];
"1000622" [label="(Call,skb_set_owner_r(newnp->pktoptions, newsk))"];
"1000627" [label="(Return,return newsk;)"];
"1000623" [label="(Call,newnp->pktoptions)"];
"1000115" [label="(MethodParameterIn,struct request_sock *req_unhash)"];
"1000579" [label="(Call,req_to_sk(req_unhash))"];
"1000574" [label="(Call,*own_req = inet_ehash_nolisten(newsk, req_to_sk(req_unhash)))"];
"1000627" [label="(Return,return newsk;)"];
"1000142" [label="(Call,tcp_v4_syn_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t     req_unhash, own_req))"];
"1000575" [label="(Call,*own_req)"];
"1000580" [label="(Identifier,req_unhash)"];
"1000578" [label="(Identifier,newsk)"];
"1000577" [label="(Call,inet_ehash_nolisten(newsk, req_to_sk(req_unhash)))"];
"1000564" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000622" [label="(Call,skb_set_owner_r(newnp->pktoptions, newsk))"];
"1000117" [label="(Block,)"];
"1000626" [label="(Identifier,newsk)"];
"1000618" [label="(Call,tcp_v6_restore_cb(newnp->pktoptions))"];
"1000628" [label="(Identifier,newsk)"];
"1000583" [label="(Identifier,own_req)"];
"1000617" [label="(Block,)"];
"1000642" [label="(MethodReturn,static struct sock *)"];
"1000579" -> "1000577"  [label="AST: "];
"1000579" -> "1000580"  [label="CFG: "];
"1000580" -> "1000579"  [label="AST: "];
"1000577" -> "1000579"  [label="CFG: "];
"1000579" -> "1000642"  [label="DDG: req_unhash"];
"1000579" -> "1000577"  [label="DDG: req_unhash"];
"1000115" -> "1000579"  [label="DDG: req_unhash"];
"1000115" -> "1000110"  [label="AST: "];
"1000115" -> "1000642"  [label="DDG: req_unhash"];
"1000115" -> "1000142"  [label="DDG: req_unhash"];
"1000577" -> "1000574"  [label="AST: "];
"1000578" -> "1000577"  [label="AST: "];
"1000574" -> "1000577"  [label="CFG: "];
"1000577" -> "1000642"  [label="DDG: req_to_sk(req_unhash)"];
"1000577" -> "1000642"  [label="DDG: newsk"];
"1000577" -> "1000574"  [label="DDG: newsk"];
"1000577" -> "1000574"  [label="DDG: req_to_sk(req_unhash)"];
"1000564" -> "1000577"  [label="DDG: newsk"];
"1000577" -> "1000622"  [label="DDG: newsk"];
"1000577" -> "1000627"  [label="DDG: newsk"];
"1000574" -> "1000117"  [label="AST: "];
"1000575" -> "1000574"  [label="AST: "];
"1000583" -> "1000574"  [label="CFG: "];
"1000574" -> "1000642"  [label="DDG: *own_req"];
"1000574" -> "1000642"  [label="DDG: inet_ehash_nolisten(newsk, req_to_sk(req_unhash))"];
"1000622" -> "1000617"  [label="AST: "];
"1000622" -> "1000626"  [label="CFG: "];
"1000623" -> "1000622"  [label="AST: "];
"1000626" -> "1000622"  [label="AST: "];
"1000628" -> "1000622"  [label="CFG: "];
"1000622" -> "1000642"  [label="DDG: skb_set_owner_r(newnp->pktoptions, newsk)"];
"1000622" -> "1000642"  [label="DDG: newnp->pktoptions"];
"1000622" -> "1000642"  [label="DDG: newsk"];
"1000618" -> "1000622"  [label="DDG: newnp->pktoptions"];
"1000622" -> "1000627"  [label="DDG: newsk"];
"1000627" -> "1000117"  [label="AST: "];
"1000627" -> "1000628"  [label="CFG: "];
"1000628" -> "1000627"  [label="AST: "];
"1000642" -> "1000627"  [label="CFG: "];
"1000627" -> "1000642"  [label="DDG: <RET>"];
"1000628" -> "1000627"  [label="DDG: newsk"];
}
