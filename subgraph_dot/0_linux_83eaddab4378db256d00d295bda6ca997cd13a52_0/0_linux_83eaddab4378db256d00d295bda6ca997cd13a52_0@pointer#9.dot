digraph "0_linux_83eaddab4378db256d00d295bda6ca997cd13a52_0@pointer" {
"1000353" [label="(Call,newsk->sk_v6_daddr = ireq->ir_v6_rmt_addr)"];
"1000535" [label="(Call,tcp_v6_md5_do_lookup(sk, &newsk->sk_v6_daddr))"];
"1000533" [label="(Call,key = tcp_v6_md5_do_lookup(sk, &newsk->sk_v6_daddr))"];
"1000546" [label="(Call,(union tcp_md5_addr *)&newsk->sk_v6_daddr)"];
"1000544" [label="(Call,tcp_md5_do_add(newsk, (union tcp_md5_addr *)&newsk->sk_v6_daddr,\n\t\t\t       AF_INET6, key->key, key->keylen,\n\t\t\t       sk_gfp_mask(sk, GFP_ATOMIC)))"];
"1000564" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000563" [label="(Call,__inet_inherit_port(sk, newsk) < 0)"];
"1000569" [label="(Call,inet_csk_prepare_forced_close(newsk))"];
"1000571" [label="(Call,tcp_done(newsk))"];
"1000577" [label="(Call,inet_ehash_nolisten(newsk, req_to_sk(req_unhash)))"];
"1000574" [label="(Call,*own_req = inet_ehash_nolisten(newsk, req_to_sk(req_unhash)))"];
"1000622" [label="(Call,skb_set_owner_r(newnp->pktoptions, newsk))"];
"1000627" [label="(Return,return newsk;)"];
"1000601" [label="(Call,sk_gfp_mask(sk, GFP_ATOMIC))"];
"1000597" [label="(Call,skb_clone(ireq->pktopts,\n\t\t\t\t\t\t      sk_gfp_mask(sk, GFP_ATOMIC)))"];
"1000593" [label="(Call,newnp->pktoptions = skb_clone(ireq->pktopts,\n\t\t\t\t\t\t      sk_gfp_mask(sk, GFP_ATOMIC)))"];
"1000618" [label="(Call,tcp_v6_restore_cb(newnp->pktoptions))"];
"1000604" [label="(Call,consume_skb(ireq->pktopts))"];
"1000638" [label="(Call,tcp_listendrop(sk))"];
"1000559" [label="(Call,sk_gfp_mask(sk, GFP_ATOMIC))"];
"1000556" [label="(Call,key->keylen)"];
"1000559" [label="(Call,sk_gfp_mask(sk, GFP_ATOMIC))"];
"1000561" [label="(Identifier,GFP_ATOMIC)"];
"1000542" [label="(Identifier,key)"];
"1000571" [label="(Call,tcp_done(newsk))"];
"1000641" [label="(Identifier,NULL)"];
"1000111" [label="(MethodParameterIn,const struct sock *sk)"];
"1000605" [label="(Call,ireq->pktopts)"];
"1000117" [label="(Block,)"];
"1000563" [label="(Call,__inet_inherit_port(sk, newsk) < 0)"];
"1000638" [label="(Call,tcp_listendrop(sk))"];
"1000513" [label="(Call,tcp_sk(sk))"];
"1000583" [label="(Identifier,own_req)"];
"1000602" [label="(Identifier,sk)"];
"1000545" [label="(Identifier,newsk)"];
"1000533" [label="(Call,key = tcp_v6_md5_do_lookup(sk, &newsk->sk_v6_daddr))"];
"1000537" [label="(Call,&newsk->sk_v6_daddr)"];
"1000579" [label="(Call,req_to_sk(req_unhash))"];
"1000565" [label="(Identifier,sk)"];
"1000604" [label="(Call,consume_skb(ireq->pktopts))"];
"1000631" [label="(Call,sock_net(sk))"];
"1000560" [label="(Identifier,sk)"];
"1000569" [label="(Call,inet_csk_prepare_forced_close(newsk))"];
"1000354" [label="(Call,newsk->sk_v6_daddr)"];
"1000564" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000578" [label="(Identifier,newsk)"];
"1000570" [label="(Identifier,newsk)"];
"1000622" [label="(Call,skb_set_owner_r(newnp->pktoptions, newsk))"];
"1000597" [label="(Call,skb_clone(ireq->pktopts,\n\t\t\t\t\t\t      sk_gfp_mask(sk, GFP_ATOMIC)))"];
"1000603" [label="(Identifier,GFP_ATOMIC)"];
"1000362" [label="(Identifier,newnp)"];
"1000534" [label="(Identifier,key)"];
"1000628" [label="(Identifier,newsk)"];
"1000639" [label="(Identifier,sk)"];
"1000573" [label="(ControlStructure,goto out;)"];
"1000536" [label="(Identifier,sk)"];
"1000553" [label="(Call,key->key)"];
"1000623" [label="(Call,newnp->pktoptions)"];
"1000548" [label="(Call,&newsk->sk_v6_daddr)"];
"1000552" [label="(Identifier,AF_INET6)"];
"1000301" [label="(Call,tcp_create_openreq_child(sk, req, skb))"];
"1000627" [label="(Return,return newsk;)"];
"1000568" [label="(Block,)"];
"1000575" [label="(Call,*own_req)"];
"1000562" [label="(ControlStructure,if (__inet_inherit_port(sk, newsk) < 0))"];
"1000610" [label="(Identifier,ireq)"];
"1000577" [label="(Call,inet_ehash_nolisten(newsk, req_to_sk(req_unhash)))"];
"1000546" [label="(Call,(union tcp_md5_addr *)&newsk->sk_v6_daddr)"];
"1000626" [label="(Identifier,newsk)"];
"1000566" [label="(Identifier,newsk)"];
"1000353" [label="(Call,newsk->sk_v6_daddr = ireq->ir_v6_rmt_addr)"];
"1000618" [label="(Call,tcp_v6_restore_cb(newnp->pktoptions))"];
"1000598" [label="(Call,ireq->pktopts)"];
"1000544" [label="(Call,tcp_md5_do_add(newsk, (union tcp_md5_addr *)&newsk->sk_v6_daddr,\n\t\t\t       AF_INET6, key->key, key->keylen,\n\t\t\t       sk_gfp_mask(sk, GFP_ATOMIC)))"];
"1000592" [label="(Block,)"];
"1000535" [label="(Call,tcp_v6_md5_do_lookup(sk, &newsk->sk_v6_daddr))"];
"1000617" [label="(Block,)"];
"1000642" [label="(MethodReturn,static struct sock *)"];
"1000594" [label="(Call,newnp->pktoptions)"];
"1000606" [label="(Identifier,ireq)"];
"1000619" [label="(Call,newnp->pktoptions)"];
"1000576" [label="(Identifier,own_req)"];
"1000543" [label="(Block,)"];
"1000289" [label="(Call,inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP))"];
"1000601" [label="(Call,sk_gfp_mask(sk, GFP_ATOMIC))"];
"1000574" [label="(Call,*own_req = inet_ehash_nolisten(newsk, req_to_sk(req_unhash)))"];
"1000357" [label="(Call,ireq->ir_v6_rmt_addr)"];
"1000593" [label="(Call,newnp->pktoptions = skb_clone(ireq->pktopts,\n\t\t\t\t\t\t      sk_gfp_mask(sk, GFP_ATOMIC)))"];
"1000572" [label="(Identifier,newsk)"];
"1000567" [label="(Literal,0)"];
"1000624" [label="(Identifier,newnp)"];
"1000517" [label="(Call,tcp_initialize_rcv_mss(newsk))"];
"1000353" -> "1000117"  [label="AST: "];
"1000353" -> "1000357"  [label="CFG: "];
"1000354" -> "1000353"  [label="AST: "];
"1000357" -> "1000353"  [label="AST: "];
"1000362" -> "1000353"  [label="CFG: "];
"1000353" -> "1000642"  [label="DDG: ireq->ir_v6_rmt_addr"];
"1000353" -> "1000642"  [label="DDG: newsk->sk_v6_daddr"];
"1000353" -> "1000535"  [label="DDG: newsk->sk_v6_daddr"];
"1000353" -> "1000546"  [label="DDG: newsk->sk_v6_daddr"];
"1000535" -> "1000533"  [label="AST: "];
"1000535" -> "1000537"  [label="CFG: "];
"1000536" -> "1000535"  [label="AST: "];
"1000537" -> "1000535"  [label="AST: "];
"1000533" -> "1000535"  [label="CFG: "];
"1000535" -> "1000642"  [label="DDG: &newsk->sk_v6_daddr"];
"1000535" -> "1000533"  [label="DDG: sk"];
"1000535" -> "1000533"  [label="DDG: &newsk->sk_v6_daddr"];
"1000513" -> "1000535"  [label="DDG: sk"];
"1000111" -> "1000535"  [label="DDG: sk"];
"1000535" -> "1000546"  [label="DDG: &newsk->sk_v6_daddr"];
"1000535" -> "1000559"  [label="DDG: sk"];
"1000535" -> "1000564"  [label="DDG: sk"];
"1000533" -> "1000117"  [label="AST: "];
"1000534" -> "1000533"  [label="AST: "];
"1000542" -> "1000533"  [label="CFG: "];
"1000533" -> "1000642"  [label="DDG: key"];
"1000533" -> "1000642"  [label="DDG: tcp_v6_md5_do_lookup(sk, &newsk->sk_v6_daddr)"];
"1000546" -> "1000544"  [label="AST: "];
"1000546" -> "1000548"  [label="CFG: "];
"1000547" -> "1000546"  [label="AST: "];
"1000548" -> "1000546"  [label="AST: "];
"1000552" -> "1000546"  [label="CFG: "];
"1000546" -> "1000642"  [label="DDG: &newsk->sk_v6_daddr"];
"1000546" -> "1000544"  [label="DDG: &newsk->sk_v6_daddr"];
"1000544" -> "1000543"  [label="AST: "];
"1000544" -> "1000559"  [label="CFG: "];
"1000545" -> "1000544"  [label="AST: "];
"1000552" -> "1000544"  [label="AST: "];
"1000553" -> "1000544"  [label="AST: "];
"1000556" -> "1000544"  [label="AST: "];
"1000559" -> "1000544"  [label="AST: "];
"1000565" -> "1000544"  [label="CFG: "];
"1000544" -> "1000642"  [label="DDG: key->key"];
"1000544" -> "1000642"  [label="DDG: (union tcp_md5_addr *)&newsk->sk_v6_daddr"];
"1000544" -> "1000642"  [label="DDG: key->keylen"];
"1000544" -> "1000642"  [label="DDG: sk_gfp_mask(sk, GFP_ATOMIC)"];
"1000544" -> "1000642"  [label="DDG: tcp_md5_do_add(newsk, (union tcp_md5_addr *)&newsk->sk_v6_daddr,\n\t\t\t       AF_INET6, key->key, key->keylen,\n\t\t\t       sk_gfp_mask(sk, GFP_ATOMIC))"];
"1000544" -> "1000642"  [label="DDG: AF_INET6"];
"1000517" -> "1000544"  [label="DDG: newsk"];
"1000559" -> "1000544"  [label="DDG: sk"];
"1000559" -> "1000544"  [label="DDG: GFP_ATOMIC"];
"1000544" -> "1000564"  [label="DDG: newsk"];
"1000564" -> "1000563"  [label="AST: "];
"1000564" -> "1000566"  [label="CFG: "];
"1000565" -> "1000564"  [label="AST: "];
"1000566" -> "1000564"  [label="AST: "];
"1000567" -> "1000564"  [label="CFG: "];
"1000564" -> "1000642"  [label="DDG: sk"];
"1000564" -> "1000563"  [label="DDG: sk"];
"1000564" -> "1000563"  [label="DDG: newsk"];
"1000559" -> "1000564"  [label="DDG: sk"];
"1000111" -> "1000564"  [label="DDG: sk"];
"1000517" -> "1000564"  [label="DDG: newsk"];
"1000564" -> "1000569"  [label="DDG: newsk"];
"1000564" -> "1000577"  [label="DDG: newsk"];
"1000564" -> "1000601"  [label="DDG: sk"];
"1000564" -> "1000638"  [label="DDG: sk"];
"1000563" -> "1000562"  [label="AST: "];
"1000563" -> "1000567"  [label="CFG: "];
"1000567" -> "1000563"  [label="AST: "];
"1000570" -> "1000563"  [label="CFG: "];
"1000576" -> "1000563"  [label="CFG: "];
"1000563" -> "1000642"  [label="DDG: __inet_inherit_port(sk, newsk) < 0"];
"1000563" -> "1000642"  [label="DDG: __inet_inherit_port(sk, newsk)"];
"1000569" -> "1000568"  [label="AST: "];
"1000569" -> "1000570"  [label="CFG: "];
"1000570" -> "1000569"  [label="AST: "];
"1000572" -> "1000569"  [label="CFG: "];
"1000569" -> "1000642"  [label="DDG: inet_csk_prepare_forced_close(newsk)"];
"1000569" -> "1000571"  [label="DDG: newsk"];
"1000571" -> "1000568"  [label="AST: "];
"1000571" -> "1000572"  [label="CFG: "];
"1000572" -> "1000571"  [label="AST: "];
"1000573" -> "1000571"  [label="CFG: "];
"1000571" -> "1000642"  [label="DDG: tcp_done(newsk)"];
"1000571" -> "1000642"  [label="DDG: newsk"];
"1000577" -> "1000574"  [label="AST: "];
"1000577" -> "1000579"  [label="CFG: "];
"1000578" -> "1000577"  [label="AST: "];
"1000579" -> "1000577"  [label="AST: "];
"1000574" -> "1000577"  [label="CFG: "];
"1000577" -> "1000642"  [label="DDG: req_to_sk(req_unhash)"];
"1000577" -> "1000642"  [label="DDG: newsk"];
"1000577" -> "1000574"  [label="DDG: newsk"];
"1000577" -> "1000574"  [label="DDG: req_to_sk(req_unhash)"];
"1000579" -> "1000577"  [label="DDG: req_unhash"];
"1000577" -> "1000622"  [label="DDG: newsk"];
"1000577" -> "1000627"  [label="DDG: newsk"];
"1000574" -> "1000117"  [label="AST: "];
"1000575" -> "1000574"  [label="AST: "];
"1000583" -> "1000574"  [label="CFG: "];
"1000574" -> "1000642"  [label="DDG: *own_req"];
"1000574" -> "1000642"  [label="DDG: inet_ehash_nolisten(newsk, req_to_sk(req_unhash))"];
"1000622" -> "1000617"  [label="AST: "];
"1000622" -> "1000626"  [label="CFG: "];
"1000623" -> "1000622"  [label="AST: "];
"1000626" -> "1000622"  [label="AST: "];
"1000628" -> "1000622"  [label="CFG: "];
"1000622" -> "1000642"  [label="DDG: skb_set_owner_r(newnp->pktoptions, newsk)"];
"1000622" -> "1000642"  [label="DDG: newnp->pktoptions"];
"1000622" -> "1000642"  [label="DDG: newsk"];
"1000618" -> "1000622"  [label="DDG: newnp->pktoptions"];
"1000622" -> "1000627"  [label="DDG: newsk"];
"1000627" -> "1000117"  [label="AST: "];
"1000627" -> "1000628"  [label="CFG: "];
"1000628" -> "1000627"  [label="AST: "];
"1000642" -> "1000627"  [label="CFG: "];
"1000627" -> "1000642"  [label="DDG: <RET>"];
"1000628" -> "1000627"  [label="DDG: newsk"];
"1000601" -> "1000597"  [label="AST: "];
"1000601" -> "1000603"  [label="CFG: "];
"1000602" -> "1000601"  [label="AST: "];
"1000603" -> "1000601"  [label="AST: "];
"1000597" -> "1000601"  [label="CFG: "];
"1000601" -> "1000642"  [label="DDG: sk"];
"1000601" -> "1000642"  [label="DDG: GFP_ATOMIC"];
"1000601" -> "1000597"  [label="DDG: sk"];
"1000601" -> "1000597"  [label="DDG: GFP_ATOMIC"];
"1000111" -> "1000601"  [label="DDG: sk"];
"1000559" -> "1000601"  [label="DDG: GFP_ATOMIC"];
"1000597" -> "1000593"  [label="AST: "];
"1000598" -> "1000597"  [label="AST: "];
"1000593" -> "1000597"  [label="CFG: "];
"1000597" -> "1000642"  [label="DDG: sk_gfp_mask(sk, GFP_ATOMIC)"];
"1000597" -> "1000593"  [label="DDG: ireq->pktopts"];
"1000597" -> "1000593"  [label="DDG: sk_gfp_mask(sk, GFP_ATOMIC)"];
"1000597" -> "1000604"  [label="DDG: ireq->pktopts"];
"1000593" -> "1000592"  [label="AST: "];
"1000594" -> "1000593"  [label="AST: "];
"1000606" -> "1000593"  [label="CFG: "];
"1000593" -> "1000642"  [label="DDG: skb_clone(ireq->pktopts,\n\t\t\t\t\t\t      sk_gfp_mask(sk, GFP_ATOMIC))"];
"1000593" -> "1000642"  [label="DDG: newnp->pktoptions"];
"1000593" -> "1000618"  [label="DDG: newnp->pktoptions"];
"1000618" -> "1000617"  [label="AST: "];
"1000618" -> "1000619"  [label="CFG: "];
"1000619" -> "1000618"  [label="AST: "];
"1000624" -> "1000618"  [label="CFG: "];
"1000618" -> "1000642"  [label="DDG: tcp_v6_restore_cb(newnp->pktoptions)"];
"1000604" -> "1000592"  [label="AST: "];
"1000604" -> "1000605"  [label="CFG: "];
"1000605" -> "1000604"  [label="AST: "];
"1000610" -> "1000604"  [label="CFG: "];
"1000604" -> "1000642"  [label="DDG: consume_skb(ireq->pktopts)"];
"1000638" -> "1000117"  [label="AST: "];
"1000638" -> "1000639"  [label="CFG: "];
"1000639" -> "1000638"  [label="AST: "];
"1000641" -> "1000638"  [label="CFG: "];
"1000638" -> "1000642"  [label="DDG: tcp_listendrop(sk)"];
"1000638" -> "1000642"  [label="DDG: sk"];
"1000631" -> "1000638"  [label="DDG: sk"];
"1000289" -> "1000638"  [label="DDG: sk"];
"1000301" -> "1000638"  [label="DDG: sk"];
"1000111" -> "1000638"  [label="DDG: sk"];
"1000559" -> "1000561"  [label="CFG: "];
"1000560" -> "1000559"  [label="AST: "];
"1000561" -> "1000559"  [label="AST: "];
"1000559" -> "1000642"  [label="DDG: GFP_ATOMIC"];
"1000111" -> "1000559"  [label="DDG: sk"];
}
