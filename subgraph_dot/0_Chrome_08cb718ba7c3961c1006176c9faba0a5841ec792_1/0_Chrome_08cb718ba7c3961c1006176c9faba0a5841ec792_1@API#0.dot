digraph "0_Chrome_08cb718ba7c3961c1006176c9faba0a5841ec792_1@API" {
"1000123" [label="(Call,!memcmp(comp, kIdnPrefix, sizeof(kIdnPrefix)))"];
"1000124" [label="(Call,memcmp(comp, kIdnPrefix, sizeof(kIdnPrefix)))"];
"1000101" [label="(MethodParameterIn,const base::char16* comp)"];
"1000118" [label="(Call,(comp_len > arraysize(kIdnPrefix)) &&\n      !memcmp(comp, kIdnPrefix, sizeof(kIdnPrefix)))"];
"1000164" [label="(Call,uidna_labelToUnicode(\n          uidna, comp, static_cast<int32_t>(comp_len), &(*out)[original_length],\n          output_length, &info, &status))"];
"1000117" [label="(ControlStructure,if ((comp_len > arraysize(kIdnPrefix)) &&\n      !memcmp(comp, kIdnPrefix, sizeof(kIdnPrefix))))"];
"1000123" [label="(Call,!memcmp(comp, kIdnPrefix, sizeof(kIdnPrefix)))"];
"1000119" [label="(Call,comp_len > arraysize(kIdnPrefix))"];
"1000220" [label="(Identifier,comp)"];
"1000127" [label="(Call,sizeof(kIdnPrefix))"];
"1000125" [label="(Identifier,comp)"];
"1000126" [label="(Identifier,kIdnPrefix)"];
"1000101" [label="(MethodParameterIn,const base::char16* comp)"];
"1000118" [label="(Call,(comp_len > arraysize(kIdnPrefix)) &&\n      !memcmp(comp, kIdnPrefix, sizeof(kIdnPrefix)))"];
"1000219" [label="(Call,out->append(comp, comp_len))"];
"1000132" [label="(Identifier,uidna)"];
"1000124" [label="(Call,memcmp(comp, kIdnPrefix, sizeof(kIdnPrefix)))"];
"1000224" [label="(MethodReturn,bool)"];
"1000123" -> "1000118"  [label="AST: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000118" -> "1000123"  [label="CFG: "];
"1000123" -> "1000224"  [label="DDG: memcmp(comp, kIdnPrefix, sizeof(kIdnPrefix))"];
"1000123" -> "1000118"  [label="DDG: memcmp(comp, kIdnPrefix, sizeof(kIdnPrefix))"];
"1000124" -> "1000123"  [label="DDG: comp"];
"1000124" -> "1000123"  [label="DDG: kIdnPrefix"];
"1000124" -> "1000127"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000127" -> "1000124"  [label="AST: "];
"1000124" -> "1000224"  [label="DDG: kIdnPrefix"];
"1000101" -> "1000124"  [label="DDG: comp"];
"1000124" -> "1000164"  [label="DDG: comp"];
"1000124" -> "1000219"  [label="DDG: comp"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000224"  [label="DDG: comp"];
"1000101" -> "1000164"  [label="DDG: comp"];
"1000101" -> "1000219"  [label="DDG: comp"];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000132" -> "1000118"  [label="CFG: "];
"1000220" -> "1000118"  [label="CFG: "];
"1000118" -> "1000224"  [label="DDG: (comp_len > arraysize(kIdnPrefix)) &&\n      !memcmp(comp, kIdnPrefix, sizeof(kIdnPrefix))"];
"1000118" -> "1000224"  [label="DDG: !memcmp(comp, kIdnPrefix, sizeof(kIdnPrefix))"];
"1000118" -> "1000224"  [label="DDG: comp_len > arraysize(kIdnPrefix)"];
"1000119" -> "1000118"  [label="DDG: comp_len"];
"1000119" -> "1000118"  [label="DDG: arraysize(kIdnPrefix)"];
}
