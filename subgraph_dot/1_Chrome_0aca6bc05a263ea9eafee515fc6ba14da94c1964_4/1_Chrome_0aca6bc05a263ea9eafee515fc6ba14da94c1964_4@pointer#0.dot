digraph "1_Chrome_0aca6bc05a263ea9eafee515fc6ba14da94c1964_4@pointer" {
"1000115" [label="(Call,IsAllowedScript(extension, url, tab_id))"];
"1000101" [label="(MethodParameterIn,const Extension* extension)"];
"1000103" [label="(MethodParameterIn,int tab_id)"];
"1000113" [label="(Call,allowed = IsAllowedScript(extension, url, tab_id))"];
"1000120" [label="(Call,allowed && !allowed_urls.count(url))"];
"1000132" [label="(Call,!allowed)"];
"1000131" [label="(Call,!allowed && allowed_urls.count(url))"];
"1000123" [label="(Call,allowed_urls.count(url))"];
"1000122" [label="(Call,!allowed_urls.count(url))"];
"1000134" [label="(Call,allowed_urls.count(url))"];
"1000101" [label="(MethodParameterIn,const Extension* extension)"];
"1000117" [label="(Identifier,url)"];
"1000119" [label="(ControlStructure,if (allowed && !allowed_urls.count(url)))"];
"1000138" [label="(Literal,\"Script unexpectedly allowed on \")"];
"1000142" [label="(Call,errors.empty())"];
"1000103" [label="(MethodParameterIn,int tab_id)"];
"1000115" [label="(Call,IsAllowedScript(extension, url, tab_id))"];
"1000123" [label="(Call,allowed_urls.count(url))"];
"1000118" [label="(Identifier,tab_id)"];
"1000135" [label="(Identifier,url)"];
"1000113" [label="(Call,allowed = IsAllowedScript(extension, url, tab_id))"];
"1000151" [label="(MethodReturn,testing::AssertionResult)"];
"1000111" [label="(Block,)"];
"1000131" [label="(Call,!allowed && allowed_urls.count(url))"];
"1000133" [label="(Identifier,allowed)"];
"1000134" [label="(Call,allowed_urls.count(url))"];
"1000122" [label="(Call,!allowed_urls.count(url))"];
"1000132" [label="(Call,!allowed)"];
"1000116" [label="(Identifier,extension)"];
"1000120" [label="(Call,allowed && !allowed_urls.count(url))"];
"1000127" [label="(Literal,\"Script unexpectedly disallowed on \")"];
"1000114" [label="(Identifier,allowed)"];
"1000130" [label="(ControlStructure,if (!allowed && allowed_urls.count(url)))"];
"1000121" [label="(Identifier,allowed)"];
"1000124" [label="(Identifier,url)"];
"1000115" -> "1000113"  [label="AST: "];
"1000115" -> "1000118"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000118" -> "1000115"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000115" -> "1000151"  [label="DDG: url"];
"1000115" -> "1000151"  [label="DDG: tab_id"];
"1000115" -> "1000151"  [label="DDG: extension"];
"1000115" -> "1000113"  [label="DDG: extension"];
"1000115" -> "1000113"  [label="DDG: url"];
"1000115" -> "1000113"  [label="DDG: tab_id"];
"1000101" -> "1000115"  [label="DDG: extension"];
"1000103" -> "1000115"  [label="DDG: tab_id"];
"1000115" -> "1000123"  [label="DDG: url"];
"1000115" -> "1000134"  [label="DDG: url"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000151"  [label="DDG: extension"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000151"  [label="DDG: tab_id"];
"1000113" -> "1000111"  [label="AST: "];
"1000114" -> "1000113"  [label="AST: "];
"1000121" -> "1000113"  [label="CFG: "];
"1000113" -> "1000151"  [label="DDG: IsAllowedScript(extension, url, tab_id)"];
"1000113" -> "1000120"  [label="DDG: allowed"];
"1000120" -> "1000119"  [label="AST: "];
"1000120" -> "1000121"  [label="CFG: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000122" -> "1000120"  [label="AST: "];
"1000127" -> "1000120"  [label="CFG: "];
"1000133" -> "1000120"  [label="CFG: "];
"1000120" -> "1000151"  [label="DDG: allowed"];
"1000120" -> "1000151"  [label="DDG: allowed && !allowed_urls.count(url)"];
"1000120" -> "1000151"  [label="DDG: !allowed_urls.count(url)"];
"1000122" -> "1000120"  [label="DDG: allowed_urls.count(url)"];
"1000120" -> "1000132"  [label="DDG: allowed"];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000133"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000135" -> "1000132"  [label="CFG: "];
"1000131" -> "1000132"  [label="CFG: "];
"1000132" -> "1000151"  [label="DDG: allowed"];
"1000132" -> "1000131"  [label="DDG: allowed"];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000134"  [label="CFG: "];
"1000134" -> "1000131"  [label="AST: "];
"1000138" -> "1000131"  [label="CFG: "];
"1000142" -> "1000131"  [label="CFG: "];
"1000131" -> "1000151"  [label="DDG: !allowed"];
"1000131" -> "1000151"  [label="DDG: allowed_urls.count(url)"];
"1000131" -> "1000151"  [label="DDG: !allowed && allowed_urls.count(url)"];
"1000134" -> "1000131"  [label="DDG: url"];
"1000122" -> "1000131"  [label="DDG: allowed_urls.count(url)"];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000122" -> "1000123"  [label="CFG: "];
"1000123" -> "1000151"  [label="DDG: url"];
"1000123" -> "1000122"  [label="DDG: url"];
"1000123" -> "1000134"  [label="DDG: url"];
"1000122" -> "1000151"  [label="DDG: allowed_urls.count(url)"];
"1000134" -> "1000135"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000134" -> "1000151"  [label="DDG: url"];
}
