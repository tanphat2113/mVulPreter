digraph "0_linux_7d267278a9ece963d77eefec61630223fce08c6c_2@API" {
"1000146" [label="(Call,scm_send(sock, msg, &scm, false))"];
"1000104" [label="(MethodParameterIn,struct socket *sock)"];
"1000105" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000144" [label="(Call,err = scm_send(sock, msg, &scm, false))"];
"1000153" [label="(Call,err < 0)"];
"1000156" [label="(Return,return err;)"];
"1000224" [label="(Call,unix_autobind(sock))"];
"1000221" [label="(Call,(err = unix_autobind(sock)) != 0)"];
"1000216" [label="(Call,!u->addr\n\t    && (err = unix_autobind(sock)) != 0)"];
"1000209" [label="(Call,test_bit(SOCK_PASSCRED, &sock->flags) && !u->addr\n\t    && (err = unix_autobind(sock)) != 0)"];
"1000222" [label="(Call,err = unix_autobind(sock))"];
"1000605" [label="(Return,return err;)"];
"1000553" [label="(Call,maybe_add_creds(skb, sock, other))"];
"1000557" [label="(Call,skb_queue_tail(&other->sk_receive_queue, skb))"];
"1000567" [label="(Call,unix_sk(other))"];
"1000572" [label="(Call,unix_sk(other))"];
"1000576" [label="(Call,unix_state_unlock(other))"];
"1000578" [label="(Call,other->sk_data_ready(other))"];
"1000580" [label="(Call,sock_put(other))"];
"1000287" [label="(Call,unix_scm_to_skb(&scm, skb, true))"];
"1000285" [label="(Call,err = unix_scm_to_skb(&scm, skb, true))"];
"1000293" [label="(Call,err < 0)"];
"1000297" [label="(Call,max_level = err + 1)"];
"1000564" [label="(Call,max_level > unix_sk(other)->recursion_level)"];
"1000570" [label="(Call,unix_sk(other)->recursion_level = max_level)"];
"1000299" [label="(Call,err + 1)"];
"1000302" [label="(Call,skb_put(skb, len - data_len))"];
"1000319" [label="(Call,skb_copy_datagram_from_iter(skb, 0, &msg->msg_iter, len))"];
"1000317" [label="(Call,err = skb_copy_datagram_from_iter(skb, 0, &msg->msg_iter, len))"];
"1000372" [label="(Call,sk_filter(other, skb))"];
"1000371" [label="(Call,sk_filter(other, skb) < 0)"];
"1000384" [label="(Call,unix_state_lock(other))"];
"1000393" [label="(Call,unix_may_send(sk, other))"];
"1000392" [label="(Call,!unix_may_send(sk, other))"];
"1000399" [label="(Call,sock_flag(other, SOCK_DEAD))"];
"1000398" [label="(Call,unlikely(sock_flag(other, SOCK_DEAD)))"];
"1000403" [label="(Call,unix_state_unlock(other))"];
"1000405" [label="(Call,sock_put(other))"];
"1000416" [label="(Call,unix_peer(sk) == other)"];
"1000425" [label="(Call,unix_dgram_peer_wake_disconnect_wakeup(sk, other))"];
"1000428" [label="(Call,unix_state_unlock(sk))"];
"1000430" [label="(Call,unix_dgram_disconnected(sk, other))"];
"1000433" [label="(Call,sock_put(other))"];
"1000484" [label="(Call,unix_peer(other))"];
"1000483" [label="(Call,unix_peer(other) != sk)"];
"1000482" [label="(Call,unix_peer(other) != sk && unix_recvq_full(other))"];
"1000481" [label="(Call,unlikely(unix_peer(other) != sk && unix_recvq_full(other)))"];
"1000513" [label="(Call,unix_state_double_lock(sk, other))"];
"1000519" [label="(Call,unix_peer(sk))"];
"1000518" [label="(Call,unix_peer(sk) != other)"];
"1000517" [label="(Call,unix_peer(sk) != other ||\n\t\t    unix_dgram_peer_wake_me(sk, other))"];
"1000522" [label="(Call,unix_dgram_peer_wake_me(sk, other))"];
"1000545" [label="(Call,unix_state_unlock(sk))"];
"1000548" [label="(Call,sock_flag(other, SOCK_RCVTSTAMP))"];
"1000590" [label="(Call,unix_state_unlock(sk))"];
"1000592" [label="(Call,unix_state_unlock(other))"];
"1000600" [label="(Call,sock_put(other))"];
"1000487" [label="(Call,unix_recvq_full(other))"];
"1000495" [label="(Call,unix_wait_for_peer(other, timeo))"];
"1000341" [label="(Call,!other)"];
"1000493" [label="(Call,timeo = unix_wait_for_peer(other, timeo))"];
"1000500" [label="(Call,sock_intr_errno(timeo))"];
"1000498" [label="(Call,err = sock_intr_errno(timeo))"];
"1000511" [label="(Call,unix_state_unlock(other))"];
"1000410" [label="(Call,unix_state_lock(sk))"];
"1000417" [label="(Call,unix_peer(sk))"];
"1000422" [label="(Call,unix_peer(sk))"];
"1000441" [label="(Call,unix_state_unlock(sk))"];
"1000551" [label="(Call,__net_timestamp(skb))"];
"1000595" [label="(Call,kfree_skb(skb))"];
"1000377" [label="(Call,err = len)"];
"1000585" [label="(Return,return len;)"];
"1000582" [label="(Call,scm_destroy(&scm))"];
"1000602" [label="(Call,scm_destroy(&scm))"];
"1000584" [label="(Identifier,scm)"];
"1000342" [label="(Identifier,other)"];
"1000576" [label="(Call,unix_state_unlock(other))"];
"1000491" [label="(Identifier,timeo)"];
"1000321" [label="(Literal,0)"];
"1000222" [label="(Call,err = unix_autobind(sock))"];
"1000153" [label="(Call,err < 0)"];
"1000480" [label="(ControlStructure,if (unlikely(unix_peer(other) != sk && unix_recvq_full(other))))"];
"1000563" [label="(ControlStructure,if (max_level > unix_sk(other)->recursion_level))"];
"1000295" [label="(Literal,0)"];
"1000526" [label="(Call,err = -EAGAIN)"];
"1000566" [label="(Call,unix_sk(other)->recursion_level)"];
"1000485" [label="(Identifier,other)"];
"1000372" [label="(Call,sk_filter(other, skb))"];
"1000594" [label="(JumpTarget,out_free:)"];
"1000493" [label="(Call,timeo = unix_wait_for_peer(other, timeo))"];
"1000225" [label="(Identifier,sock)"];
"1000496" [label="(Identifier,other)"];
"1000375" [label="(Literal,0)"];
"1000556" [label="(Identifier,other)"];
"1000216" [label="(Call,!u->addr\n\t    && (err = unix_autobind(sock)) != 0)"];
"1000326" [label="(Identifier,len)"];
"1000570" [label="(Call,unix_sk(other)->recursion_level = max_level)"];
"1000400" [label="(Identifier,other)"];
"1000154" [label="(Identifier,err)"];
"1000376" [label="(Block,)"];
"1000580" [label="(Call,sock_put(other))"];
"1000288" [label="(Call,&scm)"];
"1000443" [label="(Call,other = NULL)"];
"1000395" [label="(Identifier,other)"];
"1000512" [label="(Identifier,other)"];
"1000415" [label="(ControlStructure,if (unix_peer(sk) == other))"];
"1000217" [label="(Call,!u->addr)"];
"1000593" [label="(Identifier,other)"];
"1000402" [label="(Block,)"];
"1000318" [label="(Identifier,err)"];
"1000304" [label="(Call,len - data_len)"];
"1000403" [label="(Call,unix_state_unlock(other))"];
"1000422" [label="(Call,unix_peer(sk))"];
"1000285" [label="(Call,err = unix_scm_to_skb(&scm, skb, true))"];
"1000293" [label="(Call,err < 0)"];
"1000522" [label="(Call,unix_dgram_peer_wake_me(sk, other))"];
"1000281" [label="(Call,skb == NULL)"];
"1000431" [label="(Identifier,sk)"];
"1000520" [label="(Identifier,sk)"];
"1000510" [label="(Block,)"];
"1000145" [label="(Identifier,err)"];
"1000392" [label="(Call,!unix_may_send(sk, other))"];
"1000514" [label="(Identifier,sk)"];
"1000536" [label="(Identifier,sk_locked)"];
"1000552" [label="(Identifier,skb)"];
"1000494" [label="(Identifier,timeo)"];
"1000602" [label="(Call,scm_destroy(&scm))"];
"1000549" [label="(Identifier,other)"];
"1000598" [label="(ControlStructure,if (other))"];
"1000228" [label="(Call,err = -EMSGSIZE)"];
"1000378" [label="(Identifier,err)"];
"1000603" [label="(Call,&scm)"];
"1000413" [label="(Identifier,err)"];
"1000592" [label="(Call,unix_state_unlock(other))"];
"1000406" [label="(Identifier,other)"];
"1000147" [label="(Identifier,sock)"];
"1000498" [label="(Call,err = sock_intr_errno(timeo))"];
"1000567" [label="(Call,unix_sk(other))"];
"1000595" [label="(Call,kfree_skb(skb))"];
"1000184" [label="(Call,err < 0)"];
"1000344" [label="(Call,err = -ECONNRESET)"];
"1000104" [label="(MethodParameterIn,struct socket *sock)"];
"1000396" [label="(ControlStructure,goto out_unlock;)"];
"1000345" [label="(Identifier,err)"];
"1000320" [label="(Identifier,skb)"];
"1000420" [label="(Block,)"];
"1000605" [label="(Return,return err;)"];
"1000386" [label="(JumpTarget,restart_locked:)"];
"1000229" [label="(Identifier,err)"];
"1000156" [label="(Return,return err;)"];
"1000208" [label="(ControlStructure,if (test_bit(SOCK_PASSCRED, &sock->flags) && !u->addr\n\t    && (err = unix_autobind(sock)) != 0))"];
"1000577" [label="(Identifier,other)"];
"1000542" [label="(ControlStructure,if (unlikely(sk_locked)))"];
"1000572" [label="(Call,unix_sk(other))"];
"1000429" [label="(Identifier,sk)"];
"1000151" [label="(Identifier,false)"];
"1000495" [label="(Call,unix_wait_for_peer(other, timeo))"];
"1000517" [label="(Call,unix_peer(sk) != other ||\n\t\t    unix_dgram_peer_wake_me(sk, other))"];
"1000574" [label="(FieldIdentifier,recursion_level)"];
"1000511" [label="(Call,unix_state_unlock(other))"];
"1000596" [label="(Identifier,skb)"];
"1000303" [label="(Identifier,skb)"];
"1000299" [label="(Call,err + 1)"];
"1000366" [label="(Call,other == NULL)"];
"1000606" [label="(Identifier,err)"];
"1000544" [label="(Identifier,sk_locked)"];
"1000548" [label="(Call,sock_flag(other, SOCK_RCVTSTAMP))"];
"1000322" [label="(Call,&msg->msg_iter)"];
"1000564" [label="(Call,max_level > unix_sk(other)->recursion_level)"];
"1000317" [label="(Call,err = skb_copy_datagram_from_iter(skb, 0, &msg->msg_iter, len))"];
"1000500" [label="(Call,sock_intr_errno(timeo))"];
"1000504" [label="(Identifier,current)"];
"1000571" [label="(Call,unix_sk(other)->recursion_level)"];
"1000575" [label="(Identifier,max_level)"];
"1000573" [label="(Identifier,other)"];
"1000421" [label="(Call,unix_peer(sk) = NULL)"];
"1000554" [label="(Identifier,skb)"];
"1000296" [label="(ControlStructure,goto out_free;)"];
"1000332" [label="(Call,sock_sndtimeo(sk, msg->msg_flags & MSG_DONTWAIT))"];
"1000451" [label="(Identifier,err)"];
"1000158" [label="(Call,err = -EOPNOTSUPP)"];
"1000425" [label="(Call,unix_dgram_peer_wake_disconnect_wakeup(sk, other))"];
"1000393" [label="(Call,unix_may_send(sk, other))"];
"1000405" [label="(Call,sock_put(other))"];
"1000557" [label="(Call,skb_queue_tail(&other->sk_receive_queue, skb))"];
"1000309" [label="(Identifier,skb)"];
"1000407" [label="(ControlStructure,if (!sk_locked))"];
"1000205" [label="(Call,!other)"];
"1000409" [label="(Identifier,sk_locked)"];
"1000416" [label="(Call,unix_peer(sk) == other)"];
"1000497" [label="(Identifier,timeo)"];
"1000196" [label="(Call,err = -ENOTCONN)"];
"1000398" [label="(Call,unlikely(sock_flag(other, SOCK_DEAD)))"];
"1000152" [label="(ControlStructure,if (err < 0))"];
"1000106" [label="(MethodParameterIn,size_t len)"];
"1000546" [label="(Identifier,sk)"];
"1000424" [label="(Identifier,NULL)"];
"1000569" [label="(FieldIdentifier,recursion_level)"];
"1000370" [label="(ControlStructure,if (sk_filter(other, skb) < 0))"];
"1000221" [label="(Call,(err = unix_autobind(sock)) != 0)"];
"1000340" [label="(ControlStructure,if (!other))"];
"1000591" [label="(Identifier,sk)"];
"1000583" [label="(Call,&scm)"];
"1000397" [label="(ControlStructure,if (unlikely(sock_flag(other, SOCK_DEAD))))"];
"1000411" [label="(Identifier,sk)"];
"1000585" [label="(Return,return len;)"];
"1000292" [label="(ControlStructure,if (err < 0))"];
"1000524" [label="(Identifier,other)"];
"1000499" [label="(Identifier,err)"];
"1000159" [label="(Identifier,err)"];
"1000419" [label="(Identifier,other)"];
"1000302" [label="(Call,skb_put(skb, len - data_len))"];
"1000513" [label="(Call,unix_state_double_lock(sk, other))"];
"1000297" [label="(Call,max_level = err + 1)"];
"1000301" [label="(Literal,1)"];
"1000600" [label="(Call,sock_put(other))"];
"1000484" [label="(Call,unix_peer(other))"];
"1000294" [label="(Identifier,err)"];
"1000527" [label="(Identifier,err)"];
"1000486" [label="(Identifier,sk)"];
"1000568" [label="(Identifier,other)"];
"1000291" [label="(Identifier,true)"];
"1000501" [label="(Identifier,timeo)"];
"1000545" [label="(Call,unix_state_unlock(sk))"];
"1000146" [label="(Call,scm_send(sock, msg, &scm, false))"];
"1000226" [label="(Literal,0)"];
"1000387" [label="(Call,err = -EPERM)"];
"1000492" [label="(Block,)"];
"1000341" [label="(Call,!other)"];
"1000385" [label="(Identifier,other)"];
"1000433" [label="(Call,sock_put(other))"];
"1000149" [label="(Call,&scm)"];
"1000210" [label="(Call,test_bit(SOCK_PASSCRED, &sock->flags))"];
"1000401" [label="(Identifier,SOCK_DEAD)"];
"1000483" [label="(Call,unix_peer(other) != sk)"];
"1000588" [label="(ControlStructure,if (sk_locked))"];
"1000377" [label="(Call,err = len)"];
"1000558" [label="(Call,&other->sk_receive_queue)"];
"1000391" [label="(ControlStructure,if (!unix_may_send(sk, other)))"];
"1000428" [label="(Call,unix_state_unlock(sk))"];
"1000224" [label="(Call,unix_autobind(sock))"];
"1000157" [label="(Identifier,err)"];
"1000523" [label="(Identifier,sk)"];
"1000382" [label="(Identifier,sk_locked)"];
"1000516" [label="(ControlStructure,if (unix_peer(sk) != other ||\n\t\t    unix_dgram_peer_wake_me(sk, other)))"];
"1000107" [label="(Block,)"];
"1000227" [label="(ControlStructure,goto out;)"];
"1000519" [label="(Call,unix_peer(sk))"];
"1000586" [label="(Identifier,len)"];
"1000410" [label="(Call,unix_state_lock(sk))"];
"1000155" [label="(Literal,0)"];
"1000209" [label="(Call,test_bit(SOCK_PASSCRED, &sock->flags) && !u->addr\n\t    && (err = unix_autobind(sock)) != 0)"];
"1000290" [label="(Identifier,skb)"];
"1000373" [label="(Identifier,other)"];
"1000394" [label="(Identifier,sk)"];
"1000604" [label="(Identifier,scm)"];
"1000426" [label="(Identifier,sk)"];
"1000404" [label="(Identifier,other)"];
"1000440" [label="(Block,)"];
"1000553" [label="(Call,maybe_add_creds(skb, sock, other))"];
"1000597" [label="(JumpTarget,out:)"];
"1000380" [label="(ControlStructure,goto out_free;)"];
"1000550" [label="(Identifier,SOCK_RCVTSTAMP)"];
"1000330" [label="(Call,timeo = sock_sndtimeo(sk, msg->msg_flags & MSG_DONTWAIT))"];
"1000148" [label="(Identifier,msg)"];
"1000444" [label="(Identifier,other)"];
"1000482" [label="(Call,unix_peer(other) != sk && unix_recvq_full(other))"];
"1000581" [label="(Identifier,other)"];
"1000521" [label="(Identifier,other)"];
"1000590" [label="(Call,unix_state_unlock(sk))"];
"1000578" [label="(Call,other->sk_data_ready(other))"];
"1000328" [label="(Identifier,err)"];
"1000384" [label="(Call,unix_state_lock(other))"];
"1000436" [label="(Identifier,err)"];
"1000562" [label="(Identifier,skb)"];
"1000579" [label="(Identifier,other)"];
"1000518" [label="(Call,unix_peer(sk) != other)"];
"1000468" [label="(Call,err = security_unix_may_send(sk->sk_socket, other->sk_socket))"];
"1000298" [label="(Identifier,max_level)"];
"1000379" [label="(Identifier,len)"];
"1000399" [label="(Call,sock_flag(other, SOCK_DEAD))"];
"1000601" [label="(Identifier,other)"];
"1000144" [label="(Call,err = scm_send(sock, msg, &scm, false))"];
"1000371" [label="(Call,sk_filter(other, skb) < 0)"];
"1000434" [label="(Identifier,other)"];
"1000441" [label="(Call,unix_state_unlock(sk))"];
"1000487" [label="(Call,unix_recvq_full(other))"];
"1000442" [label="(Identifier,sk)"];
"1000300" [label="(Identifier,err)"];
"1000427" [label="(Identifier,other)"];
"1000319" [label="(Call,skb_copy_datagram_from_iter(skb, 0, &msg->msg_iter, len))"];
"1000223" [label="(Identifier,err)"];
"1000430" [label="(Call,unix_dgram_disconnected(sk, other))"];
"1000607" [label="(MethodReturn,static int)"];
"1000555" [label="(Identifier,sock)"];
"1000374" [label="(Identifier,skb)"];
"1000125" [label="(Call,*other = NULL)"];
"1000435" [label="(Call,err = -ECONNREFUSED)"];
"1000560" [label="(Identifier,other)"];
"1000582" [label="(Call,scm_destroy(&scm))"];
"1000423" [label="(Identifier,sk)"];
"1000287" [label="(Call,unix_scm_to_skb(&scm, skb, true))"];
"1000432" [label="(Identifier,other)"];
"1000105" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000417" [label="(Call,unix_peer(sk))"];
"1000286" [label="(Identifier,err)"];
"1000450" [label="(Call,err = -EPIPE)"];
"1000565" [label="(Identifier,max_level)"];
"1000547" [label="(ControlStructure,if (sock_flag(other, SOCK_RCVTSTAMP)))"];
"1000488" [label="(Identifier,other)"];
"1000481" [label="(Call,unlikely(unix_peer(other) != sk && unix_recvq_full(other)))"];
"1000515" [label="(Identifier,other)"];
"1000418" [label="(Identifier,sk)"];
"1000412" [label="(Call,err = 0)"];
"1000551" [label="(Call,__net_timestamp(skb))"];
"1000146" -> "1000144"  [label="AST: "];
"1000146" -> "1000151"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000149" -> "1000146"  [label="AST: "];
"1000151" -> "1000146"  [label="AST: "];
"1000144" -> "1000146"  [label="CFG: "];
"1000146" -> "1000607"  [label="DDG: false"];
"1000146" -> "1000607"  [label="DDG: &scm"];
"1000146" -> "1000607"  [label="DDG: msg"];
"1000146" -> "1000607"  [label="DDG: sock"];
"1000146" -> "1000144"  [label="DDG: sock"];
"1000146" -> "1000144"  [label="DDG: msg"];
"1000146" -> "1000144"  [label="DDG: &scm"];
"1000146" -> "1000144"  [label="DDG: false"];
"1000104" -> "1000146"  [label="DDG: sock"];
"1000105" -> "1000146"  [label="DDG: msg"];
"1000146" -> "1000224"  [label="DDG: sock"];
"1000146" -> "1000287"  [label="DDG: &scm"];
"1000146" -> "1000553"  [label="DDG: sock"];
"1000146" -> "1000602"  [label="DDG: &scm"];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000607"  [label="DDG: sock"];
"1000104" -> "1000224"  [label="DDG: sock"];
"1000104" -> "1000553"  [label="DDG: sock"];
"1000105" -> "1000103"  [label="AST: "];
"1000105" -> "1000607"  [label="DDG: msg"];
"1000144" -> "1000107"  [label="AST: "];
"1000145" -> "1000144"  [label="AST: "];
"1000154" -> "1000144"  [label="CFG: "];
"1000144" -> "1000607"  [label="DDG: scm_send(sock, msg, &scm, false)"];
"1000144" -> "1000153"  [label="DDG: err"];
"1000153" -> "1000152"  [label="AST: "];
"1000153" -> "1000155"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000155" -> "1000153"  [label="AST: "];
"1000157" -> "1000153"  [label="CFG: "];
"1000159" -> "1000153"  [label="CFG: "];
"1000153" -> "1000607"  [label="DDG: err < 0"];
"1000153" -> "1000607"  [label="DDG: err"];
"1000153" -> "1000156"  [label="DDG: err"];
"1000156" -> "1000152"  [label="AST: "];
"1000156" -> "1000157"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000607" -> "1000156"  [label="CFG: "];
"1000156" -> "1000607"  [label="DDG: <RET>"];
"1000157" -> "1000156"  [label="DDG: err"];
"1000224" -> "1000222"  [label="AST: "];
"1000224" -> "1000225"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000222" -> "1000224"  [label="CFG: "];
"1000224" -> "1000607"  [label="DDG: sock"];
"1000224" -> "1000221"  [label="DDG: sock"];
"1000224" -> "1000222"  [label="DDG: sock"];
"1000224" -> "1000553"  [label="DDG: sock"];
"1000221" -> "1000216"  [label="AST: "];
"1000221" -> "1000226"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000226" -> "1000221"  [label="AST: "];
"1000216" -> "1000221"  [label="CFG: "];
"1000221" -> "1000216"  [label="DDG: 0"];
"1000222" -> "1000221"  [label="DDG: err"];
"1000216" -> "1000209"  [label="AST: "];
"1000216" -> "1000217"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000209" -> "1000216"  [label="CFG: "];
"1000216" -> "1000607"  [label="DDG: (err = unix_autobind(sock)) != 0"];
"1000216" -> "1000607"  [label="DDG: !u->addr"];
"1000216" -> "1000209"  [label="DDG: !u->addr"];
"1000216" -> "1000209"  [label="DDG: (err = unix_autobind(sock)) != 0"];
"1000217" -> "1000216"  [label="DDG: u->addr"];
"1000209" -> "1000208"  [label="AST: "];
"1000209" -> "1000210"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000227" -> "1000209"  [label="CFG: "];
"1000229" -> "1000209"  [label="CFG: "];
"1000209" -> "1000607"  [label="DDG: test_bit(SOCK_PASSCRED, &sock->flags) && !u->addr\n\t    && (err = unix_autobind(sock)) != 0"];
"1000209" -> "1000607"  [label="DDG: test_bit(SOCK_PASSCRED, &sock->flags)"];
"1000209" -> "1000607"  [label="DDG: !u->addr\n\t    && (err = unix_autobind(sock)) != 0"];
"1000210" -> "1000209"  [label="DDG: SOCK_PASSCRED"];
"1000210" -> "1000209"  [label="DDG: &sock->flags"];
"1000223" -> "1000222"  [label="AST: "];
"1000226" -> "1000222"  [label="CFG: "];
"1000222" -> "1000607"  [label="DDG: err"];
"1000222" -> "1000607"  [label="DDG: unix_autobind(sock)"];
"1000222" -> "1000605"  [label="DDG: err"];
"1000605" -> "1000107"  [label="AST: "];
"1000605" -> "1000606"  [label="CFG: "];
"1000606" -> "1000605"  [label="AST: "];
"1000607" -> "1000605"  [label="CFG: "];
"1000605" -> "1000607"  [label="DDG: <RET>"];
"1000606" -> "1000605"  [label="DDG: err"];
"1000158" -> "1000605"  [label="DDG: err"];
"1000184" -> "1000605"  [label="DDG: err"];
"1000293" -> "1000605"  [label="DDG: err"];
"1000228" -> "1000605"  [label="DDG: err"];
"1000387" -> "1000605"  [label="DDG: err"];
"1000412" -> "1000605"  [label="DDG: err"];
"1000450" -> "1000605"  [label="DDG: err"];
"1000344" -> "1000605"  [label="DDG: err"];
"1000435" -> "1000605"  [label="DDG: err"];
"1000317" -> "1000605"  [label="DDG: err"];
"1000468" -> "1000605"  [label="DDG: err"];
"1000498" -> "1000605"  [label="DDG: err"];
"1000196" -> "1000605"  [label="DDG: err"];
"1000526" -> "1000605"  [label="DDG: err"];
"1000377" -> "1000605"  [label="DDG: err"];
"1000553" -> "1000107"  [label="AST: "];
"1000553" -> "1000556"  [label="CFG: "];
"1000554" -> "1000553"  [label="AST: "];
"1000555" -> "1000553"  [label="AST: "];
"1000556" -> "1000553"  [label="AST: "];
"1000560" -> "1000553"  [label="CFG: "];
"1000553" -> "1000607"  [label="DDG: maybe_add_creds(skb, sock, other)"];
"1000553" -> "1000607"  [label="DDG: sock"];
"1000372" -> "1000553"  [label="DDG: skb"];
"1000551" -> "1000553"  [label="DDG: skb"];
"1000548" -> "1000553"  [label="DDG: other"];
"1000553" -> "1000557"  [label="DDG: skb"];
"1000553" -> "1000567"  [label="DDG: other"];
"1000557" -> "1000107"  [label="AST: "];
"1000557" -> "1000562"  [label="CFG: "];
"1000558" -> "1000557"  [label="AST: "];
"1000562" -> "1000557"  [label="AST: "];
"1000565" -> "1000557"  [label="CFG: "];
"1000557" -> "1000607"  [label="DDG: skb"];
"1000557" -> "1000607"  [label="DDG: skb_queue_tail(&other->sk_receive_queue, skb)"];
"1000557" -> "1000607"  [label="DDG: &other->sk_receive_queue"];
"1000567" -> "1000566"  [label="AST: "];
"1000567" -> "1000568"  [label="CFG: "];
"1000568" -> "1000567"  [label="AST: "];
"1000569" -> "1000567"  [label="CFG: "];
"1000567" -> "1000572"  [label="DDG: other"];
"1000567" -> "1000576"  [label="DDG: other"];
"1000572" -> "1000571"  [label="AST: "];
"1000572" -> "1000573"  [label="CFG: "];
"1000573" -> "1000572"  [label="AST: "];
"1000574" -> "1000572"  [label="CFG: "];
"1000572" -> "1000576"  [label="DDG: other"];
"1000576" -> "1000107"  [label="AST: "];
"1000576" -> "1000577"  [label="CFG: "];
"1000577" -> "1000576"  [label="AST: "];
"1000579" -> "1000576"  [label="CFG: "];
"1000576" -> "1000607"  [label="DDG: unix_state_unlock(other)"];
"1000576" -> "1000578"  [label="DDG: other"];
"1000578" -> "1000107"  [label="AST: "];
"1000578" -> "1000579"  [label="CFG: "];
"1000579" -> "1000578"  [label="AST: "];
"1000581" -> "1000578"  [label="CFG: "];
"1000578" -> "1000607"  [label="DDG: other->sk_data_ready(other)"];
"1000578" -> "1000580"  [label="DDG: other"];
"1000580" -> "1000107"  [label="AST: "];
"1000580" -> "1000581"  [label="CFG: "];
"1000581" -> "1000580"  [label="AST: "];
"1000584" -> "1000580"  [label="CFG: "];
"1000580" -> "1000607"  [label="DDG: sock_put(other)"];
"1000580" -> "1000607"  [label="DDG: other"];
"1000287" -> "1000285"  [label="AST: "];
"1000287" -> "1000291"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000290" -> "1000287"  [label="AST: "];
"1000291" -> "1000287"  [label="AST: "];
"1000285" -> "1000287"  [label="CFG: "];
"1000287" -> "1000607"  [label="DDG: true"];
"1000287" -> "1000285"  [label="DDG: &scm"];
"1000287" -> "1000285"  [label="DDG: skb"];
"1000287" -> "1000285"  [label="DDG: true"];
"1000281" -> "1000287"  [label="DDG: skb"];
"1000287" -> "1000302"  [label="DDG: skb"];
"1000287" -> "1000582"  [label="DDG: &scm"];
"1000287" -> "1000595"  [label="DDG: skb"];
"1000287" -> "1000602"  [label="DDG: &scm"];
"1000285" -> "1000107"  [label="AST: "];
"1000286" -> "1000285"  [label="AST: "];
"1000294" -> "1000285"  [label="CFG: "];
"1000285" -> "1000607"  [label="DDG: unix_scm_to_skb(&scm, skb, true)"];
"1000285" -> "1000293"  [label="DDG: err"];
"1000293" -> "1000292"  [label="AST: "];
"1000293" -> "1000295"  [label="CFG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000295" -> "1000293"  [label="AST: "];
"1000296" -> "1000293"  [label="CFG: "];
"1000298" -> "1000293"  [label="CFG: "];
"1000293" -> "1000607"  [label="DDG: err"];
"1000293" -> "1000607"  [label="DDG: err < 0"];
"1000293" -> "1000297"  [label="DDG: err"];
"1000293" -> "1000299"  [label="DDG: err"];
"1000297" -> "1000107"  [label="AST: "];
"1000297" -> "1000299"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000299" -> "1000297"  [label="AST: "];
"1000303" -> "1000297"  [label="CFG: "];
"1000297" -> "1000607"  [label="DDG: max_level"];
"1000297" -> "1000607"  [label="DDG: err + 1"];
"1000297" -> "1000564"  [label="DDG: max_level"];
"1000564" -> "1000563"  [label="AST: "];
"1000564" -> "1000566"  [label="CFG: "];
"1000565" -> "1000564"  [label="AST: "];
"1000566" -> "1000564"  [label="AST: "];
"1000573" -> "1000564"  [label="CFG: "];
"1000577" -> "1000564"  [label="CFG: "];
"1000564" -> "1000607"  [label="DDG: unix_sk(other)->recursion_level"];
"1000564" -> "1000607"  [label="DDG: max_level"];
"1000564" -> "1000607"  [label="DDG: max_level > unix_sk(other)->recursion_level"];
"1000564" -> "1000570"  [label="DDG: max_level"];
"1000570" -> "1000563"  [label="AST: "];
"1000570" -> "1000575"  [label="CFG: "];
"1000571" -> "1000570"  [label="AST: "];
"1000575" -> "1000570"  [label="AST: "];
"1000577" -> "1000570"  [label="CFG: "];
"1000570" -> "1000607"  [label="DDG: max_level"];
"1000570" -> "1000607"  [label="DDG: unix_sk(other)->recursion_level"];
"1000299" -> "1000301"  [label="CFG: "];
"1000300" -> "1000299"  [label="AST: "];
"1000301" -> "1000299"  [label="AST: "];
"1000302" -> "1000107"  [label="AST: "];
"1000302" -> "1000304"  [label="CFG: "];
"1000303" -> "1000302"  [label="AST: "];
"1000304" -> "1000302"  [label="AST: "];
"1000309" -> "1000302"  [label="CFG: "];
"1000302" -> "1000607"  [label="DDG: len - data_len"];
"1000302" -> "1000607"  [label="DDG: skb_put(skb, len - data_len)"];
"1000304" -> "1000302"  [label="DDG: len"];
"1000304" -> "1000302"  [label="DDG: data_len"];
"1000302" -> "1000319"  [label="DDG: skb"];
"1000319" -> "1000317"  [label="AST: "];
"1000319" -> "1000326"  [label="CFG: "];
"1000320" -> "1000319"  [label="AST: "];
"1000321" -> "1000319"  [label="AST: "];
"1000322" -> "1000319"  [label="AST: "];
"1000326" -> "1000319"  [label="AST: "];
"1000317" -> "1000319"  [label="CFG: "];
"1000319" -> "1000607"  [label="DDG: len"];
"1000319" -> "1000607"  [label="DDG: &msg->msg_iter"];
"1000319" -> "1000317"  [label="DDG: skb"];
"1000319" -> "1000317"  [label="DDG: 0"];
"1000319" -> "1000317"  [label="DDG: &msg->msg_iter"];
"1000319" -> "1000317"  [label="DDG: len"];
"1000106" -> "1000319"  [label="DDG: len"];
"1000304" -> "1000319"  [label="DDG: len"];
"1000319" -> "1000372"  [label="DDG: skb"];
"1000319" -> "1000377"  [label="DDG: len"];
"1000319" -> "1000585"  [label="DDG: len"];
"1000319" -> "1000595"  [label="DDG: skb"];
"1000317" -> "1000107"  [label="AST: "];
"1000318" -> "1000317"  [label="AST: "];
"1000328" -> "1000317"  [label="CFG: "];
"1000317" -> "1000607"  [label="DDG: err"];
"1000317" -> "1000607"  [label="DDG: skb_copy_datagram_from_iter(skb, 0, &msg->msg_iter, len)"];
"1000372" -> "1000371"  [label="AST: "];
"1000372" -> "1000374"  [label="CFG: "];
"1000373" -> "1000372"  [label="AST: "];
"1000374" -> "1000372"  [label="AST: "];
"1000375" -> "1000372"  [label="CFG: "];
"1000372" -> "1000607"  [label="DDG: other"];
"1000372" -> "1000371"  [label="DDG: other"];
"1000372" -> "1000371"  [label="DDG: skb"];
"1000341" -> "1000372"  [label="DDG: other"];
"1000366" -> "1000372"  [label="DDG: other"];
"1000372" -> "1000384"  [label="DDG: other"];
"1000372" -> "1000551"  [label="DDG: skb"];
"1000372" -> "1000595"  [label="DDG: skb"];
"1000372" -> "1000600"  [label="DDG: other"];
"1000371" -> "1000370"  [label="AST: "];
"1000371" -> "1000375"  [label="CFG: "];
"1000375" -> "1000371"  [label="AST: "];
"1000378" -> "1000371"  [label="CFG: "];
"1000382" -> "1000371"  [label="CFG: "];
"1000371" -> "1000607"  [label="DDG: sk_filter(other, skb)"];
"1000371" -> "1000607"  [label="DDG: sk_filter(other, skb) < 0"];
"1000384" -> "1000107"  [label="AST: "];
"1000384" -> "1000385"  [label="CFG: "];
"1000385" -> "1000384"  [label="AST: "];
"1000386" -> "1000384"  [label="CFG: "];
"1000384" -> "1000607"  [label="DDG: unix_state_lock(other)"];
"1000384" -> "1000393"  [label="DDG: other"];
"1000393" -> "1000392"  [label="AST: "];
"1000393" -> "1000395"  [label="CFG: "];
"1000394" -> "1000393"  [label="AST: "];
"1000395" -> "1000393"  [label="AST: "];
"1000392" -> "1000393"  [label="CFG: "];
"1000393" -> "1000607"  [label="DDG: sk"];
"1000393" -> "1000392"  [label="DDG: sk"];
"1000393" -> "1000392"  [label="DDG: other"];
"1000332" -> "1000393"  [label="DDG: sk"];
"1000519" -> "1000393"  [label="DDG: sk"];
"1000430" -> "1000393"  [label="DDG: sk"];
"1000522" -> "1000393"  [label="DDG: sk"];
"1000522" -> "1000393"  [label="DDG: other"];
"1000441" -> "1000393"  [label="DDG: sk"];
"1000483" -> "1000393"  [label="DDG: sk"];
"1000518" -> "1000393"  [label="DDG: other"];
"1000393" -> "1000399"  [label="DDG: other"];
"1000393" -> "1000410"  [label="DDG: sk"];
"1000393" -> "1000417"  [label="DDG: sk"];
"1000393" -> "1000483"  [label="DDG: sk"];
"1000393" -> "1000590"  [label="DDG: sk"];
"1000393" -> "1000592"  [label="DDG: other"];
"1000392" -> "1000391"  [label="AST: "];
"1000396" -> "1000392"  [label="CFG: "];
"1000400" -> "1000392"  [label="CFG: "];
"1000392" -> "1000607"  [label="DDG: !unix_may_send(sk, other)"];
"1000392" -> "1000607"  [label="DDG: unix_may_send(sk, other)"];
"1000399" -> "1000398"  [label="AST: "];
"1000399" -> "1000401"  [label="CFG: "];
"1000400" -> "1000399"  [label="AST: "];
"1000401" -> "1000399"  [label="AST: "];
"1000398" -> "1000399"  [label="CFG: "];
"1000399" -> "1000607"  [label="DDG: SOCK_DEAD"];
"1000399" -> "1000398"  [label="DDG: other"];
"1000399" -> "1000398"  [label="DDG: SOCK_DEAD"];
"1000399" -> "1000403"  [label="DDG: other"];
"1000399" -> "1000484"  [label="DDG: other"];
"1000399" -> "1000592"  [label="DDG: other"];
"1000398" -> "1000397"  [label="AST: "];
"1000404" -> "1000398"  [label="CFG: "];
"1000451" -> "1000398"  [label="CFG: "];
"1000398" -> "1000607"  [label="DDG: unlikely(sock_flag(other, SOCK_DEAD))"];
"1000398" -> "1000607"  [label="DDG: sock_flag(other, SOCK_DEAD)"];
"1000403" -> "1000402"  [label="AST: "];
"1000403" -> "1000404"  [label="CFG: "];
"1000404" -> "1000403"  [label="AST: "];
"1000406" -> "1000403"  [label="CFG: "];
"1000403" -> "1000607"  [label="DDG: unix_state_unlock(other)"];
"1000403" -> "1000405"  [label="DDG: other"];
"1000405" -> "1000402"  [label="AST: "];
"1000405" -> "1000406"  [label="CFG: "];
"1000406" -> "1000405"  [label="AST: "];
"1000409" -> "1000405"  [label="CFG: "];
"1000405" -> "1000607"  [label="DDG: sock_put(other)"];
"1000405" -> "1000416"  [label="DDG: other"];
"1000416" -> "1000415"  [label="AST: "];
"1000416" -> "1000419"  [label="CFG: "];
"1000417" -> "1000416"  [label="AST: "];
"1000419" -> "1000416"  [label="AST: "];
"1000423" -> "1000416"  [label="CFG: "];
"1000442" -> "1000416"  [label="CFG: "];
"1000416" -> "1000607"  [label="DDG: unix_peer(sk) == other"];
"1000416" -> "1000607"  [label="DDG: unix_peer(sk)"];
"1000417" -> "1000416"  [label="DDG: sk"];
"1000416" -> "1000425"  [label="DDG: other"];
"1000425" -> "1000420"  [label="AST: "];
"1000425" -> "1000427"  [label="CFG: "];
"1000426" -> "1000425"  [label="AST: "];
"1000427" -> "1000425"  [label="AST: "];
"1000429" -> "1000425"  [label="CFG: "];
"1000425" -> "1000607"  [label="DDG: unix_dgram_peer_wake_disconnect_wakeup(sk, other)"];
"1000422" -> "1000425"  [label="DDG: sk"];
"1000425" -> "1000428"  [label="DDG: sk"];
"1000425" -> "1000430"  [label="DDG: other"];
"1000428" -> "1000420"  [label="AST: "];
"1000428" -> "1000429"  [label="CFG: "];
"1000429" -> "1000428"  [label="AST: "];
"1000431" -> "1000428"  [label="CFG: "];
"1000428" -> "1000607"  [label="DDG: unix_state_unlock(sk)"];
"1000428" -> "1000430"  [label="DDG: sk"];
"1000430" -> "1000420"  [label="AST: "];
"1000430" -> "1000432"  [label="CFG: "];
"1000431" -> "1000430"  [label="AST: "];
"1000432" -> "1000430"  [label="AST: "];
"1000434" -> "1000430"  [label="CFG: "];
"1000430" -> "1000607"  [label="DDG: sk"];
"1000430" -> "1000607"  [label="DDG: unix_dgram_disconnected(sk, other)"];
"1000430" -> "1000433"  [label="DDG: other"];
"1000433" -> "1000420"  [label="AST: "];
"1000433" -> "1000434"  [label="CFG: "];
"1000434" -> "1000433"  [label="AST: "];
"1000436" -> "1000433"  [label="CFG: "];
"1000433" -> "1000607"  [label="DDG: sock_put(other)"];
"1000484" -> "1000483"  [label="AST: "];
"1000484" -> "1000485"  [label="CFG: "];
"1000485" -> "1000484"  [label="AST: "];
"1000486" -> "1000484"  [label="CFG: "];
"1000484" -> "1000483"  [label="DDG: other"];
"1000484" -> "1000487"  [label="DDG: other"];
"1000484" -> "1000495"  [label="DDG: other"];
"1000484" -> "1000511"  [label="DDG: other"];
"1000484" -> "1000518"  [label="DDG: other"];
"1000484" -> "1000548"  [label="DDG: other"];
"1000483" -> "1000482"  [label="AST: "];
"1000483" -> "1000486"  [label="CFG: "];
"1000486" -> "1000483"  [label="AST: "];
"1000488" -> "1000483"  [label="CFG: "];
"1000482" -> "1000483"  [label="CFG: "];
"1000483" -> "1000607"  [label="DDG: sk"];
"1000483" -> "1000607"  [label="DDG: unix_peer(other)"];
"1000483" -> "1000482"  [label="DDG: unix_peer(other)"];
"1000483" -> "1000482"  [label="DDG: sk"];
"1000483" -> "1000513"  [label="DDG: sk"];
"1000483" -> "1000519"  [label="DDG: sk"];
"1000483" -> "1000545"  [label="DDG: sk"];
"1000482" -> "1000481"  [label="AST: "];
"1000482" -> "1000487"  [label="CFG: "];
"1000487" -> "1000482"  [label="AST: "];
"1000481" -> "1000482"  [label="CFG: "];
"1000482" -> "1000607"  [label="DDG: unix_peer(other) != sk"];
"1000482" -> "1000607"  [label="DDG: unix_recvq_full(other)"];
"1000482" -> "1000481"  [label="DDG: unix_peer(other) != sk"];
"1000482" -> "1000481"  [label="DDG: unix_recvq_full(other)"];
"1000487" -> "1000482"  [label="DDG: other"];
"1000481" -> "1000480"  [label="AST: "];
"1000491" -> "1000481"  [label="CFG: "];
"1000544" -> "1000481"  [label="CFG: "];
"1000481" -> "1000607"  [label="DDG: unlikely(unix_peer(other) != sk && unix_recvq_full(other))"];
"1000481" -> "1000607"  [label="DDG: unix_peer(other) != sk && unix_recvq_full(other)"];
"1000513" -> "1000510"  [label="AST: "];
"1000513" -> "1000515"  [label="CFG: "];
"1000514" -> "1000513"  [label="AST: "];
"1000515" -> "1000513"  [label="AST: "];
"1000520" -> "1000513"  [label="CFG: "];
"1000513" -> "1000607"  [label="DDG: unix_state_double_lock(sk, other)"];
"1000511" -> "1000513"  [label="DDG: other"];
"1000513" -> "1000519"  [label="DDG: sk"];
"1000513" -> "1000518"  [label="DDG: other"];
"1000519" -> "1000518"  [label="AST: "];
"1000519" -> "1000520"  [label="CFG: "];
"1000520" -> "1000519"  [label="AST: "];
"1000521" -> "1000519"  [label="CFG: "];
"1000519" -> "1000607"  [label="DDG: sk"];
"1000519" -> "1000518"  [label="DDG: sk"];
"1000519" -> "1000522"  [label="DDG: sk"];
"1000519" -> "1000545"  [label="DDG: sk"];
"1000519" -> "1000590"  [label="DDG: sk"];
"1000518" -> "1000517"  [label="AST: "];
"1000518" -> "1000521"  [label="CFG: "];
"1000521" -> "1000518"  [label="AST: "];
"1000523" -> "1000518"  [label="CFG: "];
"1000517" -> "1000518"  [label="CFG: "];
"1000518" -> "1000607"  [label="DDG: unix_peer(sk)"];
"1000518" -> "1000517"  [label="DDG: unix_peer(sk)"];
"1000518" -> "1000517"  [label="DDG: other"];
"1000487" -> "1000518"  [label="DDG: other"];
"1000518" -> "1000522"  [label="DDG: other"];
"1000518" -> "1000548"  [label="DDG: other"];
"1000518" -> "1000592"  [label="DDG: other"];
"1000517" -> "1000516"  [label="AST: "];
"1000517" -> "1000522"  [label="CFG: "];
"1000522" -> "1000517"  [label="AST: "];
"1000527" -> "1000517"  [label="CFG: "];
"1000536" -> "1000517"  [label="CFG: "];
"1000517" -> "1000607"  [label="DDG: unix_dgram_peer_wake_me(sk, other)"];
"1000517" -> "1000607"  [label="DDG: unix_peer(sk) != other"];
"1000517" -> "1000607"  [label="DDG: unix_peer(sk) != other ||\n\t\t    unix_dgram_peer_wake_me(sk, other)"];
"1000522" -> "1000517"  [label="DDG: sk"];
"1000522" -> "1000517"  [label="DDG: other"];
"1000522" -> "1000524"  [label="CFG: "];
"1000523" -> "1000522"  [label="AST: "];
"1000524" -> "1000522"  [label="AST: "];
"1000522" -> "1000607"  [label="DDG: sk"];
"1000522" -> "1000545"  [label="DDG: sk"];
"1000522" -> "1000548"  [label="DDG: other"];
"1000522" -> "1000590"  [label="DDG: sk"];
"1000522" -> "1000592"  [label="DDG: other"];
"1000545" -> "1000542"  [label="AST: "];
"1000545" -> "1000546"  [label="CFG: "];
"1000546" -> "1000545"  [label="AST: "];
"1000549" -> "1000545"  [label="CFG: "];
"1000545" -> "1000607"  [label="DDG: sk"];
"1000545" -> "1000607"  [label="DDG: unix_state_unlock(sk)"];
"1000548" -> "1000547"  [label="AST: "];
"1000548" -> "1000550"  [label="CFG: "];
"1000549" -> "1000548"  [label="AST: "];
"1000550" -> "1000548"  [label="AST: "];
"1000552" -> "1000548"  [label="CFG: "];
"1000554" -> "1000548"  [label="CFG: "];
"1000548" -> "1000607"  [label="DDG: SOCK_RCVTSTAMP"];
"1000548" -> "1000607"  [label="DDG: sock_flag(other, SOCK_RCVTSTAMP)"];
"1000487" -> "1000548"  [label="DDG: other"];
"1000590" -> "1000588"  [label="AST: "];
"1000590" -> "1000591"  [label="CFG: "];
"1000591" -> "1000590"  [label="AST: "];
"1000593" -> "1000590"  [label="CFG: "];
"1000590" -> "1000607"  [label="DDG: unix_state_unlock(sk)"];
"1000590" -> "1000607"  [label="DDG: sk"];
"1000592" -> "1000107"  [label="AST: "];
"1000592" -> "1000593"  [label="CFG: "];
"1000593" -> "1000592"  [label="AST: "];
"1000594" -> "1000592"  [label="CFG: "];
"1000592" -> "1000607"  [label="DDG: unix_state_unlock(other)"];
"1000592" -> "1000607"  [label="DDG: other"];
"1000592" -> "1000600"  [label="DDG: other"];
"1000600" -> "1000598"  [label="AST: "];
"1000600" -> "1000601"  [label="CFG: "];
"1000601" -> "1000600"  [label="AST: "];
"1000604" -> "1000600"  [label="CFG: "];
"1000600" -> "1000607"  [label="DDG: sock_put(other)"];
"1000600" -> "1000607"  [label="DDG: other"];
"1000125" -> "1000600"  [label="DDG: other"];
"1000495" -> "1000600"  [label="DDG: other"];
"1000205" -> "1000600"  [label="DDG: other"];
"1000443" -> "1000600"  [label="DDG: other"];
"1000341" -> "1000600"  [label="DDG: other"];
"1000366" -> "1000600"  [label="DDG: other"];
"1000487" -> "1000488"  [label="CFG: "];
"1000488" -> "1000487"  [label="AST: "];
"1000487" -> "1000495"  [label="DDG: other"];
"1000487" -> "1000511"  [label="DDG: other"];
"1000495" -> "1000493"  [label="AST: "];
"1000495" -> "1000497"  [label="CFG: "];
"1000496" -> "1000495"  [label="AST: "];
"1000497" -> "1000495"  [label="AST: "];
"1000493" -> "1000495"  [label="CFG: "];
"1000495" -> "1000607"  [label="DDG: other"];
"1000495" -> "1000341"  [label="DDG: other"];
"1000495" -> "1000493"  [label="DDG: other"];
"1000495" -> "1000493"  [label="DDG: timeo"];
"1000330" -> "1000495"  [label="DDG: timeo"];
"1000500" -> "1000495"  [label="DDG: timeo"];
"1000341" -> "1000340"  [label="AST: "];
"1000341" -> "1000342"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000345" -> "1000341"  [label="CFG: "];
"1000373" -> "1000341"  [label="CFG: "];
"1000341" -> "1000607"  [label="DDG: other"];
"1000341" -> "1000607"  [label="DDG: !other"];
"1000125" -> "1000341"  [label="DDG: other"];
"1000205" -> "1000341"  [label="DDG: other"];
"1000443" -> "1000341"  [label="DDG: other"];
"1000493" -> "1000492"  [label="AST: "];
"1000494" -> "1000493"  [label="AST: "];
"1000499" -> "1000493"  [label="CFG: "];
"1000493" -> "1000607"  [label="DDG: unix_wait_for_peer(other, timeo)"];
"1000493" -> "1000500"  [label="DDG: timeo"];
"1000500" -> "1000498"  [label="AST: "];
"1000500" -> "1000501"  [label="CFG: "];
"1000501" -> "1000500"  [label="AST: "];
"1000498" -> "1000500"  [label="CFG: "];
"1000500" -> "1000607"  [label="DDG: timeo"];
"1000500" -> "1000498"  [label="DDG: timeo"];
"1000498" -> "1000492"  [label="AST: "];
"1000499" -> "1000498"  [label="AST: "];
"1000504" -> "1000498"  [label="CFG: "];
"1000498" -> "1000607"  [label="DDG: err"];
"1000498" -> "1000607"  [label="DDG: sock_intr_errno(timeo)"];
"1000511" -> "1000510"  [label="AST: "];
"1000511" -> "1000512"  [label="CFG: "];
"1000512" -> "1000511"  [label="AST: "];
"1000514" -> "1000511"  [label="CFG: "];
"1000511" -> "1000607"  [label="DDG: unix_state_unlock(other)"];
"1000410" -> "1000407"  [label="AST: "];
"1000410" -> "1000411"  [label="CFG: "];
"1000411" -> "1000410"  [label="AST: "];
"1000413" -> "1000410"  [label="CFG: "];
"1000410" -> "1000607"  [label="DDG: unix_state_lock(sk)"];
"1000410" -> "1000417"  [label="DDG: sk"];
"1000417" -> "1000418"  [label="CFG: "];
"1000418" -> "1000417"  [label="AST: "];
"1000419" -> "1000417"  [label="CFG: "];
"1000417" -> "1000422"  [label="DDG: sk"];
"1000417" -> "1000441"  [label="DDG: sk"];
"1000422" -> "1000421"  [label="AST: "];
"1000422" -> "1000423"  [label="CFG: "];
"1000423" -> "1000422"  [label="AST: "];
"1000424" -> "1000422"  [label="CFG: "];
"1000441" -> "1000440"  [label="AST: "];
"1000441" -> "1000442"  [label="CFG: "];
"1000442" -> "1000441"  [label="AST: "];
"1000444" -> "1000441"  [label="CFG: "];
"1000441" -> "1000607"  [label="DDG: sk"];
"1000441" -> "1000607"  [label="DDG: unix_state_unlock(sk)"];
"1000551" -> "1000547"  [label="AST: "];
"1000551" -> "1000552"  [label="CFG: "];
"1000552" -> "1000551"  [label="AST: "];
"1000554" -> "1000551"  [label="CFG: "];
"1000551" -> "1000607"  [label="DDG: __net_timestamp(skb)"];
"1000595" -> "1000107"  [label="AST: "];
"1000595" -> "1000596"  [label="CFG: "];
"1000596" -> "1000595"  [label="AST: "];
"1000597" -> "1000595"  [label="CFG: "];
"1000595" -> "1000607"  [label="DDG: kfree_skb(skb)"];
"1000595" -> "1000607"  [label="DDG: skb"];
"1000377" -> "1000376"  [label="AST: "];
"1000377" -> "1000379"  [label="CFG: "];
"1000378" -> "1000377"  [label="AST: "];
"1000379" -> "1000377"  [label="AST: "];
"1000380" -> "1000377"  [label="CFG: "];
"1000377" -> "1000607"  [label="DDG: len"];
"1000377" -> "1000607"  [label="DDG: err"];
"1000106" -> "1000377"  [label="DDG: len"];
"1000585" -> "1000107"  [label="AST: "];
"1000585" -> "1000586"  [label="CFG: "];
"1000586" -> "1000585"  [label="AST: "];
"1000607" -> "1000585"  [label="CFG: "];
"1000585" -> "1000607"  [label="DDG: <RET>"];
"1000586" -> "1000585"  [label="DDG: len"];
"1000106" -> "1000585"  [label="DDG: len"];
"1000582" -> "1000107"  [label="AST: "];
"1000582" -> "1000583"  [label="CFG: "];
"1000583" -> "1000582"  [label="AST: "];
"1000586" -> "1000582"  [label="CFG: "];
"1000582" -> "1000607"  [label="DDG: &scm"];
"1000582" -> "1000607"  [label="DDG: scm_destroy(&scm)"];
"1000602" -> "1000107"  [label="AST: "];
"1000602" -> "1000603"  [label="CFG: "];
"1000603" -> "1000602"  [label="AST: "];
"1000606" -> "1000602"  [label="CFG: "];
"1000602" -> "1000607"  [label="DDG: scm_destroy(&scm)"];
"1000602" -> "1000607"  [label="DDG: &scm"];
}
