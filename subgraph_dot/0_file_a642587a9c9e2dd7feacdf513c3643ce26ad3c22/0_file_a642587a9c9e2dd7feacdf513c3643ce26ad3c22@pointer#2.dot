digraph "0_file_a642587a9c9e2dd7feacdf513c3643ce26ad3c22@pointer" {
"1000401" [label="(Call,isprint(nbuf[no]))"];
"1000111" [label="(MethodParameterIn,unsigned char *nbuf)"];
"1000331" [label="(Call,c = nbuf[noffset])"];
"1000337" [label="(Call,c == '\0')"];
"1000353" [label="(Call,isprint(c))"];
"1000352" [label="(Call,!isprint(c))"];
"1000351" [label="(Call,!isprint(c) || isquote(c))"];
"1000355" [label="(Call,isquote(c))"];
"1000399" [label="(Call,adjust\n\t\t\t\t\t\t         && isprint(nbuf[no]))"];
"1000397" [label="(Call,adjust = adjust\n\t\t\t\t\t\t         && isprint(nbuf[no]))"];
"1000426" [label="(Call,cp < nbuf + size)"];
"1000425" [label="(Call,cp < nbuf + size && *cp\n\t\t\t\t    && isprint(*cp))"];
"1000437" [label="(Call,cp++)"];
"1000442" [label="(Call,cp > cname)"];
"1000441" [label="(Call,cp > cname && isspace(cp[-1]))"];
"1000445" [label="(Call,isspace(cp[-1]))"];
"1000450" [label="(Call,cp--)"];
"1000459" [label="(Call,cp - cname)"];
"1000457" [label="(Call,(int)(cp - cname))"];
"1000454" [label="(Call,file_printf(ms, \", from '%.*s'\",\n\t\t\t\t    (int)(cp - cname), cname))"];
"1000453" [label="(Call,file_printf(ms, \", from '%.*s'\",\n\t\t\t\t    (int)(cp - cname), cname) == -1)"];
"1000428" [label="(Call,nbuf + size)"];
"1000439" [label="(ControlStructure,continue;)"];
"1000444" [label="(Identifier,cname)"];
"1000382" [label="(ControlStructure,for (no = doff + prpsoffsets(k);\n\t\t\t\t\t     no < doff + prpsoffsets(i); no++))"];
"1000355" [label="(Call,isquote(c))"];
"1000437" [label="(Call,cp++)"];
"1000445" [label="(Call,isspace(cp[-1]))"];
"1000464" [label="(Literal,1)"];
"1000427" [label="(Identifier,cp)"];
"1000462" [label="(Identifier,cname)"];
"1000401" [label="(Call,isprint(nbuf[no]))"];
"1000314" [label="(Identifier,j)"];
"1000422" [label="(Call,cp = cname)"];
"1000446" [label="(Call,cp[-1])"];
"1000331" [label="(Call,c = nbuf[noffset])"];
"1000398" [label="(Identifier,adjust)"];
"1000372" [label="(Call,adjust = 1)"];
"1000332" [label="(Identifier,c)"];
"1000469" [label="(Identifier,flags)"];
"1000111" [label="(MethodParameterIn,unsigned char *nbuf)"];
"1000443" [label="(Identifier,cp)"];
"1000110" [label="(MethodParameterIn,struct magic_set *ms)"];
"1000251" [label="(Call,memcpy(&pi, nbuf + doff, descsz))"];
"1000453" [label="(Call,file_printf(ms, \", from '%.*s'\",\n\t\t\t\t    (int)(cp - cname), cname) == -1)"];
"1000466" [label="(Literal,1)"];
"1000353" [label="(Call,isprint(c))"];
"1000337" [label="(Call,c == '\0')"];
"1000119" [label="(MethodParameterIn,size_t size)"];
"1000457" [label="(Call,(int)(cp - cname))"];
"1000216" [label="(Call,file_printf(ms, \", %s-style\", os_style_names[os_style]))"];
"1000354" [label="(Identifier,c)"];
"1000477" [label="(MethodReturn,RET)"];
"1000320" [label="(Block,)"];
"1000441" [label="(Call,cp > cname && isspace(cp[-1]))"];
"1000460" [label="(Identifier,cp)"];
"1000396" [label="(Identifier,no)"];
"1000452" [label="(ControlStructure,if (file_printf(ms, \", from '%.*s'\",\n\t\t\t\t    (int)(cp - cname), cname) == -1))"];
"1000402" [label="(Call,nbuf[no])"];
"1000410" [label="(Call,cname = (unsigned char *)\n \t\t\t\t    &nbuf[doff + prpsoffsets(i)])"];
"1000461" [label="(Identifier,cname)"];
"1000421" [label="(ControlStructure,for (cp = cname; cp < nbuf + size && *cp\n\t\t\t\t    && isprint(*cp); cp++))"];
"1000433" [label="(Identifier,cp)"];
"1000429" [label="(Identifier,nbuf)"];
"1000322" [label="(Call,noffset >= size)"];
"1000397" [label="(Call,adjust = adjust\n\t\t\t\t\t\t         && isprint(nbuf[no]))"];
"1000451" [label="(Identifier,cp)"];
"1000428" [label="(Call,nbuf + size)"];
"1000400" [label="(Identifier,adjust)"];
"1000426" [label="(Call,cp < nbuf + size)"];
"1000338" [label="(Identifier,c)"];
"1000350" [label="(ControlStructure,if (!isprint(c) || isquote(c)))"];
"1000399" [label="(Call,adjust\n\t\t\t\t\t\t         && isprint(nbuf[no]))"];
"1000454" [label="(Call,file_printf(ms, \", from '%.*s'\",\n\t\t\t\t    (int)(cp - cname), cname))"];
"1000450" [label="(Call,cp--)"];
"1000438" [label="(Identifier,cp)"];
"1000463" [label="(Call,-1)"];
"1000343" [label="(Identifier,j)"];
"1000430" [label="(Identifier,size)"];
"1000440" [label="(ControlStructure,while (cp > cname && isspace(cp[-1])))"];
"1000357" [label="(ControlStructure,goto tryanother;)"];
"1000333" [label="(Call,nbuf[noffset])"];
"1000447" [label="(Identifier,cp)"];
"1000455" [label="(Identifier,ms)"];
"1000339" [label="(Literal,'\0')"];
"1000336" [label="(ControlStructure,if (c == '\0'))"];
"1000356" [label="(Identifier,c)"];
"1000431" [label="(Call,*cp\n\t\t\t\t    && isprint(*cp))"];
"1000442" [label="(Call,cp > cname)"];
"1000459" [label="(Call,cp - cname)"];
"1000352" [label="(Call,!isprint(c))"];
"1000456" [label="(Literal,\", from '%.*s'\")"];
"1000351" [label="(Call,!isprint(c) || isquote(c))"];
"1000425" [label="(Call,cp < nbuf + size && *cp\n\t\t\t\t    && isprint(*cp))"];
"1000254" [label="(Call,nbuf + doff)"];
"1000401" -> "1000399"  [label="AST: "];
"1000401" -> "1000402"  [label="CFG: "];
"1000402" -> "1000401"  [label="AST: "];
"1000399" -> "1000401"  [label="CFG: "];
"1000401" -> "1000477"  [label="DDG: "];
"1000401" -> "1000331"  [label="DDG: "];
"1000401" -> "1000399"  [label="DDG: "];
"1000111" -> "1000401"  [label="DDG: "];
"1000401" -> "1000426"  [label="DDG: "];
"1000401" -> "1000428"  [label="DDG: "];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000477"  [label="DDG: "];
"1000111" -> "1000251"  [label="DDG: "];
"1000111" -> "1000254"  [label="DDG: "];
"1000111" -> "1000331"  [label="DDG: "];
"1000111" -> "1000426"  [label="DDG: "];
"1000111" -> "1000428"  [label="DDG: "];
"1000331" -> "1000320"  [label="AST: "];
"1000331" -> "1000333"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000333" -> "1000331"  [label="AST: "];
"1000338" -> "1000331"  [label="CFG: "];
"1000331" -> "1000477"  [label="DDG: "];
"1000331" -> "1000337"  [label="DDG: "];
"1000337" -> "1000336"  [label="AST: "];
"1000337" -> "1000339"  [label="CFG: "];
"1000338" -> "1000337"  [label="AST: "];
"1000339" -> "1000337"  [label="AST: "];
"1000343" -> "1000337"  [label="CFG: "];
"1000354" -> "1000337"  [label="CFG: "];
"1000337" -> "1000477"  [label="DDG: "];
"1000337" -> "1000477"  [label="DDG: "];
"1000337" -> "1000353"  [label="DDG: "];
"1000353" -> "1000352"  [label="AST: "];
"1000353" -> "1000354"  [label="CFG: "];
"1000354" -> "1000353"  [label="AST: "];
"1000352" -> "1000353"  [label="CFG: "];
"1000353" -> "1000477"  [label="DDG: "];
"1000353" -> "1000352"  [label="DDG: "];
"1000353" -> "1000355"  [label="DDG: "];
"1000352" -> "1000351"  [label="AST: "];
"1000356" -> "1000352"  [label="CFG: "];
"1000351" -> "1000352"  [label="CFG: "];
"1000352" -> "1000477"  [label="DDG: "];
"1000352" -> "1000351"  [label="DDG: "];
"1000351" -> "1000350"  [label="AST: "];
"1000351" -> "1000355"  [label="CFG: "];
"1000355" -> "1000351"  [label="AST: "];
"1000357" -> "1000351"  [label="CFG: "];
"1000314" -> "1000351"  [label="CFG: "];
"1000351" -> "1000477"  [label="DDG: "];
"1000351" -> "1000477"  [label="DDG: "];
"1000351" -> "1000477"  [label="DDG: "];
"1000355" -> "1000351"  [label="DDG: "];
"1000355" -> "1000356"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000355" -> "1000477"  [label="DDG: "];
"1000399" -> "1000397"  [label="AST: "];
"1000399" -> "1000400"  [label="CFG: "];
"1000400" -> "1000399"  [label="AST: "];
"1000397" -> "1000399"  [label="CFG: "];
"1000399" -> "1000477"  [label="DDG: "];
"1000399" -> "1000397"  [label="DDG: "];
"1000399" -> "1000397"  [label="DDG: "];
"1000397" -> "1000399"  [label="DDG: "];
"1000372" -> "1000399"  [label="DDG: "];
"1000397" -> "1000382"  [label="AST: "];
"1000398" -> "1000397"  [label="AST: "];
"1000396" -> "1000397"  [label="CFG: "];
"1000397" -> "1000477"  [label="DDG: "];
"1000397" -> "1000477"  [label="DDG: "];
"1000426" -> "1000425"  [label="AST: "];
"1000426" -> "1000428"  [label="CFG: "];
"1000427" -> "1000426"  [label="AST: "];
"1000428" -> "1000426"  [label="AST: "];
"1000433" -> "1000426"  [label="CFG: "];
"1000425" -> "1000426"  [label="CFG: "];
"1000426" -> "1000477"  [label="DDG: "];
"1000426" -> "1000477"  [label="DDG: "];
"1000426" -> "1000425"  [label="DDG: "];
"1000426" -> "1000425"  [label="DDG: "];
"1000437" -> "1000426"  [label="DDG: "];
"1000422" -> "1000426"  [label="DDG: "];
"1000322" -> "1000426"  [label="DDG: "];
"1000119" -> "1000426"  [label="DDG: "];
"1000426" -> "1000437"  [label="DDG: "];
"1000426" -> "1000442"  [label="DDG: "];
"1000425" -> "1000421"  [label="AST: "];
"1000425" -> "1000431"  [label="CFG: "];
"1000431" -> "1000425"  [label="AST: "];
"1000439" -> "1000425"  [label="CFG: "];
"1000443" -> "1000425"  [label="CFG: "];
"1000425" -> "1000477"  [label="DDG: "];
"1000425" -> "1000477"  [label="DDG: "];
"1000425" -> "1000477"  [label="DDG: "];
"1000431" -> "1000425"  [label="DDG: "];
"1000431" -> "1000425"  [label="DDG: "];
"1000437" -> "1000421"  [label="AST: "];
"1000437" -> "1000438"  [label="CFG: "];
"1000438" -> "1000437"  [label="AST: "];
"1000427" -> "1000437"  [label="CFG: "];
"1000442" -> "1000441"  [label="AST: "];
"1000442" -> "1000444"  [label="CFG: "];
"1000443" -> "1000442"  [label="AST: "];
"1000444" -> "1000442"  [label="AST: "];
"1000447" -> "1000442"  [label="CFG: "];
"1000441" -> "1000442"  [label="CFG: "];
"1000442" -> "1000441"  [label="DDG: "];
"1000442" -> "1000441"  [label="DDG: "];
"1000445" -> "1000442"  [label="DDG: "];
"1000450" -> "1000442"  [label="DDG: "];
"1000410" -> "1000442"  [label="DDG: "];
"1000442" -> "1000445"  [label="DDG: "];
"1000442" -> "1000450"  [label="DDG: "];
"1000442" -> "1000459"  [label="DDG: "];
"1000442" -> "1000459"  [label="DDG: "];
"1000441" -> "1000440"  [label="AST: "];
"1000441" -> "1000445"  [label="CFG: "];
"1000445" -> "1000441"  [label="AST: "];
"1000451" -> "1000441"  [label="CFG: "];
"1000455" -> "1000441"  [label="CFG: "];
"1000441" -> "1000477"  [label="DDG: "];
"1000441" -> "1000477"  [label="DDG: "];
"1000441" -> "1000477"  [label="DDG: "];
"1000445" -> "1000441"  [label="DDG: "];
"1000445" -> "1000446"  [label="CFG: "];
"1000446" -> "1000445"  [label="AST: "];
"1000445" -> "1000477"  [label="DDG: "];
"1000445" -> "1000450"  [label="DDG: "];
"1000445" -> "1000459"  [label="DDG: "];
"1000450" -> "1000440"  [label="AST: "];
"1000450" -> "1000451"  [label="CFG: "];
"1000451" -> "1000450"  [label="AST: "];
"1000443" -> "1000450"  [label="CFG: "];
"1000459" -> "1000457"  [label="AST: "];
"1000459" -> "1000461"  [label="CFG: "];
"1000460" -> "1000459"  [label="AST: "];
"1000461" -> "1000459"  [label="AST: "];
"1000457" -> "1000459"  [label="CFG: "];
"1000459" -> "1000477"  [label="DDG: "];
"1000459" -> "1000457"  [label="DDG: "];
"1000459" -> "1000457"  [label="DDG: "];
"1000459" -> "1000454"  [label="DDG: "];
"1000457" -> "1000454"  [label="AST: "];
"1000458" -> "1000457"  [label="AST: "];
"1000462" -> "1000457"  [label="CFG: "];
"1000457" -> "1000477"  [label="DDG: "];
"1000457" -> "1000454"  [label="DDG: "];
"1000454" -> "1000453"  [label="AST: "];
"1000454" -> "1000462"  [label="CFG: "];
"1000455" -> "1000454"  [label="AST: "];
"1000456" -> "1000454"  [label="AST: "];
"1000462" -> "1000454"  [label="AST: "];
"1000464" -> "1000454"  [label="CFG: "];
"1000454" -> "1000477"  [label="DDG: "];
"1000454" -> "1000477"  [label="DDG: "];
"1000454" -> "1000477"  [label="DDG: "];
"1000454" -> "1000453"  [label="DDG: "];
"1000454" -> "1000453"  [label="DDG: "];
"1000454" -> "1000453"  [label="DDG: "];
"1000454" -> "1000453"  [label="DDG: "];
"1000216" -> "1000454"  [label="DDG: "];
"1000110" -> "1000454"  [label="DDG: "];
"1000453" -> "1000452"  [label="AST: "];
"1000453" -> "1000463"  [label="CFG: "];
"1000463" -> "1000453"  [label="AST: "];
"1000466" -> "1000453"  [label="CFG: "];
"1000469" -> "1000453"  [label="CFG: "];
"1000453" -> "1000477"  [label="DDG: "];
"1000453" -> "1000477"  [label="DDG: "];
"1000453" -> "1000477"  [label="DDG: "];
"1000463" -> "1000453"  [label="DDG: "];
"1000428" -> "1000430"  [label="CFG: "];
"1000429" -> "1000428"  [label="AST: "];
"1000430" -> "1000428"  [label="AST: "];
"1000428" -> "1000477"  [label="DDG: "];
"1000428" -> "1000477"  [label="DDG: "];
"1000322" -> "1000428"  [label="DDG: "];
"1000119" -> "1000428"  [label="DDG: "];
}
