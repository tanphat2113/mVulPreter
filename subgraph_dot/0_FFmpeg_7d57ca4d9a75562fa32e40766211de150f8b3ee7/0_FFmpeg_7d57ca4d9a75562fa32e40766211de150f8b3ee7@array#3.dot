digraph "0_FFmpeg_7d57ca4d9a75562fa32e40766211de150f8b3ee7@array" {
"1000215" [label="(Call,ts_field = prev_pkt[channel_id].ts_field)"];
"1000303" [label="(Call,ts_field == 0xFFFFFF)"];
"1000323" [label="(Call,timestamp = ts_field)"];
"1000330" [label="(Call,timestamp += prev_pkt[channel_id].timestamp)"];
"1000386" [label="(Call,ff_rtmp_packet_create(p, channel_id, type, timestamp,\n                                          size))"];
"1000383" [label="(Call,(ret = ff_rtmp_packet_create(p, channel_id, type, timestamp,\n                                          size)) < 0)"];
"1000384" [label="(Call,ret = ff_rtmp_packet_create(p, channel_id, type, timestamp,\n                                          size))"];
"1000393" [label="(Return,return ret;)"];
"1000412" [label="(Call,prev_pkt[channel_id].timestamp  = timestamp)"];
"1000503" [label="(Call,prev_pkt[channel_id].channel_id = channel_id)"];
"1000510" [label="(Call,prev_pkt[channel_id].type       = type)"];
"1000517" [label="(Call,prev_pkt[channel_id].size       = size)"];
"1000533" [label="(Call,size - p->offset)"];
"1000531" [label="(Call,size = size - p->offset)"];
"1000540" [label="(Call,FFMIN(size, chunk_size))"];
"1000538" [label="(Call,toread = FFMIN(size, chunk_size))"];
"1000545" [label="(Call,ffurl_read_complete(h, p->data + p->offset, toread))"];
"1000544" [label="(Call,ffurl_read_complete(h, p->data + p->offset, toread) != toread)"];
"1000562" [label="(Call,size      -= toread)"];
"1000576" [label="(Call,size > 0)"];
"1000565" [label="(Call,p->read   += toread)"];
"1000594" [label="(Call,prev->read = p->read)"];
"1000623" [label="(Return,return p->read;)"];
"1000570" [label="(Call,p->offset += toread)"];
"1000601" [label="(Call,prev->offset = p->offset)"];
"1000547" [label="(Call,p->data + p->offset)"];
"1000557" [label="(Call,ff_rtmp_packet_destroy(p))"];
"1000405" [label="(Call,prev_pkt[channel_id].ts_field   = ts_field)"];
"1000303" [label="(Call,ts_field == 0xFFFFFF)"];
"1000503" [label="(Call,prev_pkt[channel_id].channel_id = channel_id)"];
"1000513" [label="(Identifier,prev_pkt)"];
"1000400" [label="(Call,p->offset = 0)"];
"1000598" [label="(Call,p->read)"];
"1000305" [label="(Literal,0xFFFFFF)"];
"1000538" [label="(Call,toread = FFMIN(size, chunk_size))"];
"1000397" [label="(Identifier,p)"];
"1000565" [label="(Call,p->read   += toread)"];
"1000389" [label="(Identifier,type)"];
"1000603" [label="(Identifier,prev)"];
"1000324" [label="(Identifier,timestamp)"];
"1000541" [label="(Identifier,size)"];
"1000572" [label="(Identifier,p)"];
"1000578" [label="(Literal,0)"];
"1000214" [label="(Block,)"];
"1000510" [label="(Call,prev_pkt[channel_id].type       = type)"];
"1000265" [label="(Call,ffurl_read_complete(h, buf, 1))"];
"1000558" [label="(Identifier,p)"];
"1000111" [label="(Block,)"];
"1000328" [label="(Identifier,hdr)"];
"1000386" [label="(Call,ff_rtmp_packet_create(p, channel_id, type, timestamp,\n                                          size))"];
"1000322" [label="(Block,)"];
"1000563" [label="(Identifier,size)"];
"1000548" [label="(Call,p->data)"];
"1000567" [label="(Identifier,p)"];
"1000341" [label="(Identifier,prev_pkt)"];
"1000534" [label="(Identifier,size)"];
"1000106" [label="(MethodParameterIn,RTMPPacket *p)"];
"1000516" [label="(Identifier,type)"];
"1000533" [label="(Call,size - p->offset)"];
"1000518" [label="(Call,prev_pkt[channel_id].size)"];
"1000511" [label="(Call,prev_pkt[channel_id].type)"];
"1000579" [label="(Block,)"];
"1000390" [label="(Identifier,timestamp)"];
"1000623" [label="(Return,return p->read;)"];
"1000186" [label="(Call,size  = prev_pkt[channel_id].size)"];
"1000547" [label="(Call,p->data + p->offset)"];
"1000545" [label="(Call,ffurl_read_complete(h, p->data + p->offset, toread))"];
"1000325" [label="(Identifier,ts_field)"];
"1000383" [label="(Call,(ret = ff_rtmp_packet_create(p, channel_id, type, timestamp,\n                                          size)) < 0)"];
"1000569" [label="(Identifier,toread)"];
"1000561" [label="(Identifier,EIO)"];
"1000384" [label="(Call,ret = ff_rtmp_packet_create(p, channel_id, type, timestamp,\n                                          size))"];
"1000564" [label="(Identifier,toread)"];
"1000605" [label="(Call,p->offset)"];
"1000562" [label="(Call,size      -= toread)"];
"1000330" [label="(Call,timestamp += prev_pkt[channel_id].timestamp)"];
"1000393" [label="(Return,return ret;)"];
"1000226" [label="(Call,ffurl_read_complete(h, buf, 3))"];
"1000215" [label="(Call,ts_field = prev_pkt[channel_id].ts_field)"];
"1000575" [label="(ControlStructure,if (size > 0))"];
"1000543" [label="(ControlStructure,if (ffurl_read_complete(h, p->data + p->offset, toread) != toread))"];
"1000470" [label="(Call,p->offset        = prev->offset)"];
"1000412" [label="(Call,prev_pkt[channel_id].timestamp  = timestamp)"];
"1000344" [label="(Call,size != prev_pkt[channel_id].size)"];
"1000415" [label="(Identifier,prev_pkt)"];
"1000175" [label="(Call,ff_rtmp_check_alloc_array(prev_pkt_ptr, nb_prev_pkt,\n                                         channel_id))"];
"1000388" [label="(Identifier,channel_id)"];
"1000381" [label="(Block,)"];
"1000107" [label="(MethodParameterIn,int chunk_size)"];
"1000554" [label="(Identifier,toread)"];
"1000595" [label="(Call,prev->read)"];
"1000217" [label="(Call,prev_pkt[channel_id].ts_field)"];
"1000551" [label="(Call,p->offset)"];
"1000527" [label="(Identifier,prev_pkt)"];
"1000594" [label="(Call,prev->read = p->read)"];
"1000302" [label="(ControlStructure,if (ts_field == 0xFFFFFF))"];
"1000105" [label="(MethodParameterIn,URLContext *h)"];
"1000601" [label="(Call,prev->offset = p->offset)"];
"1000556" [label="(Block,)"];
"1000304" [label="(Identifier,ts_field)"];
"1000523" [label="(Identifier,size)"];
"1000602" [label="(Call,prev->offset)"];
"1000411" [label="(Identifier,ts_field)"];
"1000392" [label="(Literal,0)"];
"1000323" [label="(Call,timestamp = ts_field)"];
"1000540" [label="(Call,FFMIN(size, chunk_size))"];
"1000520" [label="(Identifier,prev_pkt)"];
"1000310" [label="(Identifier,h)"];
"1000577" [label="(Identifier,size)"];
"1000395" [label="(Call,p->read = written)"];
"1000148" [label="(Call,ffurl_read_complete(h, buf, channel_id + 1))"];
"1000542" [label="(Identifier,chunk_size)"];
"1000391" [label="(Identifier,size)"];
"1000555" [label="(Identifier,toread)"];
"1000385" [label="(Identifier,ret)"];
"1000428" [label="(Call,p->data          = prev->data)"];
"1000624" [label="(Call,p->read)"];
"1000571" [label="(Call,p->offset)"];
"1000566" [label="(Call,p->read)"];
"1000627" [label="(MethodReturn,static int)"];
"1000535" [label="(Call,p->offset)"];
"1000309" [label="(Call,ffurl_read_complete(h, buf, 4))"];
"1000544" [label="(Call,ffurl_read_complete(h, p->data + p->offset, toread) != toread)"];
"1000570" [label="(Call,p->offset += toread)"];
"1000387" [label="(Identifier,p)"];
"1000326" [label="(ControlStructure,if (hdr != RTMP_PS_TWELVEBYTES))"];
"1000331" [label="(Identifier,timestamp)"];
"1000557" [label="(Call,ff_rtmp_packet_destroy(p))"];
"1000406" [label="(Call,prev_pkt[channel_id].ts_field)"];
"1000418" [label="(Identifier,timestamp)"];
"1000352" [label="(Call,av_log(NULL, AV_LOG_ERROR, \"RTMP packet size mismatch %d != %d\n\",\n                size,\n                prev_pkt[channel_id].size))"];
"1000539" [label="(Identifier,toread)"];
"1000531" [label="(Call,size = size - p->offset)"];
"1000216" [label="(Identifier,ts_field)"];
"1000413" [label="(Call,prev_pkt[channel_id].timestamp)"];
"1000610" [label="(Identifier,p)"];
"1000275" [label="(Call,type = buf[0])"];
"1000317" [label="(Call,timestamp = AV_RB32(buf))"];
"1000394" [label="(Identifier,ret)"];
"1000532" [label="(Identifier,size)"];
"1000382" [label="(ControlStructure,if ((ret = ff_rtmp_packet_create(p, channel_id, type, timestamp,\n                                          size)) < 0))"];
"1000500" [label="(Identifier,p)"];
"1000582" [label="(Identifier,prev)"];
"1000574" [label="(Identifier,toread)"];
"1000619" [label="(Identifier,prev_pkt)"];
"1000287" [label="(Call,ffurl_read_complete(h, buf, 4))"];
"1000237" [label="(Call,ts_field = AV_RB24(buf))"];
"1000509" [label="(Identifier,channel_id)"];
"1000332" [label="(Call,prev_pkt[channel_id].timestamp)"];
"1000504" [label="(Call,prev_pkt[channel_id].channel_id)"];
"1000405" [label="(Call,prev_pkt[channel_id].ts_field   = ts_field)"];
"1000546" [label="(Identifier,h)"];
"1000576" [label="(Call,size > 0)"];
"1000259" [label="(Call,size = AV_RB24(buf))"];
"1000477" [label="(Call,p->read          = prev->read + written)"];
"1000193" [label="(Call,type  = prev_pkt[channel_id].type)"];
"1000517" [label="(Call,prev_pkt[channel_id].size       = size)"];
"1000215" -> "1000214"  [label="AST: "];
"1000215" -> "1000217"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000217" -> "1000215"  [label="AST: "];
"1000304" -> "1000215"  [label="CFG: "];
"1000215" -> "1000627"  [label="DDG: prev_pkt[channel_id].ts_field"];
"1000215" -> "1000303"  [label="DDG: ts_field"];
"1000303" -> "1000302"  [label="AST: "];
"1000303" -> "1000305"  [label="CFG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000305" -> "1000303"  [label="AST: "];
"1000310" -> "1000303"  [label="CFG: "];
"1000324" -> "1000303"  [label="CFG: "];
"1000303" -> "1000627"  [label="DDG: ts_field"];
"1000303" -> "1000627"  [label="DDG: ts_field == 0xFFFFFF"];
"1000237" -> "1000303"  [label="DDG: ts_field"];
"1000303" -> "1000323"  [label="DDG: ts_field"];
"1000303" -> "1000405"  [label="DDG: ts_field"];
"1000323" -> "1000322"  [label="AST: "];
"1000323" -> "1000325"  [label="CFG: "];
"1000324" -> "1000323"  [label="AST: "];
"1000325" -> "1000323"  [label="AST: "];
"1000328" -> "1000323"  [label="CFG: "];
"1000323" -> "1000627"  [label="DDG: timestamp"];
"1000323" -> "1000627"  [label="DDG: ts_field"];
"1000323" -> "1000330"  [label="DDG: timestamp"];
"1000323" -> "1000386"  [label="DDG: timestamp"];
"1000330" -> "1000326"  [label="AST: "];
"1000330" -> "1000332"  [label="CFG: "];
"1000331" -> "1000330"  [label="AST: "];
"1000332" -> "1000330"  [label="AST: "];
"1000341" -> "1000330"  [label="CFG: "];
"1000330" -> "1000627"  [label="DDG: timestamp"];
"1000330" -> "1000627"  [label="DDG: prev_pkt[channel_id].timestamp"];
"1000317" -> "1000330"  [label="DDG: timestamp"];
"1000330" -> "1000386"  [label="DDG: timestamp"];
"1000386" -> "1000384"  [label="AST: "];
"1000386" -> "1000391"  [label="CFG: "];
"1000387" -> "1000386"  [label="AST: "];
"1000388" -> "1000386"  [label="AST: "];
"1000389" -> "1000386"  [label="AST: "];
"1000390" -> "1000386"  [label="AST: "];
"1000391" -> "1000386"  [label="AST: "];
"1000384" -> "1000386"  [label="CFG: "];
"1000386" -> "1000627"  [label="DDG: type"];
"1000386" -> "1000627"  [label="DDG: channel_id"];
"1000386" -> "1000627"  [label="DDG: p"];
"1000386" -> "1000627"  [label="DDG: timestamp"];
"1000386" -> "1000627"  [label="DDG: size"];
"1000386" -> "1000383"  [label="DDG: type"];
"1000386" -> "1000383"  [label="DDG: channel_id"];
"1000386" -> "1000383"  [label="DDG: size"];
"1000386" -> "1000383"  [label="DDG: p"];
"1000386" -> "1000383"  [label="DDG: timestamp"];
"1000386" -> "1000384"  [label="DDG: type"];
"1000386" -> "1000384"  [label="DDG: channel_id"];
"1000386" -> "1000384"  [label="DDG: size"];
"1000386" -> "1000384"  [label="DDG: p"];
"1000386" -> "1000384"  [label="DDG: timestamp"];
"1000106" -> "1000386"  [label="DDG: p"];
"1000175" -> "1000386"  [label="DDG: channel_id"];
"1000193" -> "1000386"  [label="DDG: type"];
"1000275" -> "1000386"  [label="DDG: type"];
"1000317" -> "1000386"  [label="DDG: timestamp"];
"1000186" -> "1000386"  [label="DDG: size"];
"1000344" -> "1000386"  [label="DDG: size"];
"1000352" -> "1000386"  [label="DDG: size"];
"1000259" -> "1000386"  [label="DDG: size"];
"1000386" -> "1000412"  [label="DDG: timestamp"];
"1000386" -> "1000503"  [label="DDG: channel_id"];
"1000386" -> "1000510"  [label="DDG: type"];
"1000386" -> "1000517"  [label="DDG: size"];
"1000386" -> "1000533"  [label="DDG: size"];
"1000386" -> "1000557"  [label="DDG: p"];
"1000383" -> "1000382"  [label="AST: "];
"1000383" -> "1000392"  [label="CFG: "];
"1000384" -> "1000383"  [label="AST: "];
"1000392" -> "1000383"  [label="AST: "];
"1000394" -> "1000383"  [label="CFG: "];
"1000397" -> "1000383"  [label="CFG: "];
"1000383" -> "1000627"  [label="DDG: (ret = ff_rtmp_packet_create(p, channel_id, type, timestamp,\n                                          size)) < 0"];
"1000384" -> "1000383"  [label="DDG: ret"];
"1000385" -> "1000384"  [label="AST: "];
"1000392" -> "1000384"  [label="CFG: "];
"1000384" -> "1000627"  [label="DDG: ff_rtmp_packet_create(p, channel_id, type, timestamp,\n                                          size)"];
"1000384" -> "1000627"  [label="DDG: ret"];
"1000384" -> "1000393"  [label="DDG: ret"];
"1000393" -> "1000382"  [label="AST: "];
"1000393" -> "1000394"  [label="CFG: "];
"1000394" -> "1000393"  [label="AST: "];
"1000627" -> "1000393"  [label="CFG: "];
"1000393" -> "1000627"  [label="DDG: <RET>"];
"1000394" -> "1000393"  [label="DDG: ret"];
"1000412" -> "1000381"  [label="AST: "];
"1000412" -> "1000418"  [label="CFG: "];
"1000413" -> "1000412"  [label="AST: "];
"1000418" -> "1000412"  [label="AST: "];
"1000500" -> "1000412"  [label="CFG: "];
"1000412" -> "1000627"  [label="DDG: prev_pkt[channel_id].timestamp"];
"1000412" -> "1000627"  [label="DDG: timestamp"];
"1000503" -> "1000111"  [label="AST: "];
"1000503" -> "1000509"  [label="CFG: "];
"1000504" -> "1000503"  [label="AST: "];
"1000509" -> "1000503"  [label="AST: "];
"1000513" -> "1000503"  [label="CFG: "];
"1000503" -> "1000627"  [label="DDG: channel_id"];
"1000503" -> "1000627"  [label="DDG: prev_pkt[channel_id].channel_id"];
"1000175" -> "1000503"  [label="DDG: channel_id"];
"1000510" -> "1000111"  [label="AST: "];
"1000510" -> "1000516"  [label="CFG: "];
"1000511" -> "1000510"  [label="AST: "];
"1000516" -> "1000510"  [label="AST: "];
"1000520" -> "1000510"  [label="CFG: "];
"1000510" -> "1000627"  [label="DDG: prev_pkt[channel_id].type"];
"1000510" -> "1000627"  [label="DDG: type"];
"1000193" -> "1000510"  [label="DDG: type"];
"1000275" -> "1000510"  [label="DDG: type"];
"1000517" -> "1000111"  [label="AST: "];
"1000517" -> "1000523"  [label="CFG: "];
"1000518" -> "1000517"  [label="AST: "];
"1000523" -> "1000517"  [label="AST: "];
"1000527" -> "1000517"  [label="CFG: "];
"1000517" -> "1000627"  [label="DDG: prev_pkt[channel_id].size"];
"1000186" -> "1000517"  [label="DDG: size"];
"1000344" -> "1000517"  [label="DDG: size"];
"1000352" -> "1000517"  [label="DDG: size"];
"1000259" -> "1000517"  [label="DDG: size"];
"1000533" -> "1000531"  [label="AST: "];
"1000533" -> "1000535"  [label="CFG: "];
"1000534" -> "1000533"  [label="AST: "];
"1000535" -> "1000533"  [label="AST: "];
"1000531" -> "1000533"  [label="CFG: "];
"1000533" -> "1000531"  [label="DDG: size"];
"1000533" -> "1000531"  [label="DDG: p->offset"];
"1000186" -> "1000533"  [label="DDG: size"];
"1000344" -> "1000533"  [label="DDG: size"];
"1000352" -> "1000533"  [label="DDG: size"];
"1000259" -> "1000533"  [label="DDG: size"];
"1000400" -> "1000533"  [label="DDG: p->offset"];
"1000470" -> "1000533"  [label="DDG: p->offset"];
"1000533" -> "1000545"  [label="DDG: p->offset"];
"1000533" -> "1000547"  [label="DDG: p->offset"];
"1000533" -> "1000570"  [label="DDG: p->offset"];
"1000531" -> "1000111"  [label="AST: "];
"1000532" -> "1000531"  [label="AST: "];
"1000539" -> "1000531"  [label="CFG: "];
"1000531" -> "1000627"  [label="DDG: size - p->offset"];
"1000531" -> "1000540"  [label="DDG: size"];
"1000540" -> "1000538"  [label="AST: "];
"1000540" -> "1000542"  [label="CFG: "];
"1000541" -> "1000540"  [label="AST: "];
"1000542" -> "1000540"  [label="AST: "];
"1000538" -> "1000540"  [label="CFG: "];
"1000540" -> "1000627"  [label="DDG: chunk_size"];
"1000540" -> "1000627"  [label="DDG: size"];
"1000540" -> "1000538"  [label="DDG: size"];
"1000540" -> "1000538"  [label="DDG: chunk_size"];
"1000107" -> "1000540"  [label="DDG: chunk_size"];
"1000540" -> "1000562"  [label="DDG: size"];
"1000538" -> "1000111"  [label="AST: "];
"1000539" -> "1000538"  [label="AST: "];
"1000546" -> "1000538"  [label="CFG: "];
"1000538" -> "1000627"  [label="DDG: FFMIN(size, chunk_size)"];
"1000538" -> "1000545"  [label="DDG: toread"];
"1000545" -> "1000544"  [label="AST: "];
"1000545" -> "1000554"  [label="CFG: "];
"1000546" -> "1000545"  [label="AST: "];
"1000547" -> "1000545"  [label="AST: "];
"1000554" -> "1000545"  [label="AST: "];
"1000555" -> "1000545"  [label="CFG: "];
"1000545" -> "1000627"  [label="DDG: h"];
"1000545" -> "1000627"  [label="DDG: p->data + p->offset"];
"1000545" -> "1000544"  [label="DDG: h"];
"1000545" -> "1000544"  [label="DDG: p->data + p->offset"];
"1000545" -> "1000544"  [label="DDG: toread"];
"1000309" -> "1000545"  [label="DDG: h"];
"1000226" -> "1000545"  [label="DDG: h"];
"1000148" -> "1000545"  [label="DDG: h"];
"1000265" -> "1000545"  [label="DDG: h"];
"1000287" -> "1000545"  [label="DDG: h"];
"1000105" -> "1000545"  [label="DDG: h"];
"1000428" -> "1000545"  [label="DDG: p->data"];
"1000544" -> "1000543"  [label="AST: "];
"1000544" -> "1000555"  [label="CFG: "];
"1000555" -> "1000544"  [label="AST: "];
"1000558" -> "1000544"  [label="CFG: "];
"1000563" -> "1000544"  [label="CFG: "];
"1000544" -> "1000627"  [label="DDG: toread"];
"1000544" -> "1000627"  [label="DDG: ffurl_read_complete(h, p->data + p->offset, toread)"];
"1000544" -> "1000627"  [label="DDG: ffurl_read_complete(h, p->data + p->offset, toread) != toread"];
"1000544" -> "1000562"  [label="DDG: toread"];
"1000544" -> "1000565"  [label="DDG: toread"];
"1000544" -> "1000570"  [label="DDG: toread"];
"1000562" -> "1000111"  [label="AST: "];
"1000562" -> "1000564"  [label="CFG: "];
"1000563" -> "1000562"  [label="AST: "];
"1000564" -> "1000562"  [label="AST: "];
"1000567" -> "1000562"  [label="CFG: "];
"1000562" -> "1000576"  [label="DDG: size"];
"1000576" -> "1000575"  [label="AST: "];
"1000576" -> "1000578"  [label="CFG: "];
"1000577" -> "1000576"  [label="AST: "];
"1000578" -> "1000576"  [label="AST: "];
"1000582" -> "1000576"  [label="CFG: "];
"1000619" -> "1000576"  [label="CFG: "];
"1000576" -> "1000627"  [label="DDG: size"];
"1000576" -> "1000627"  [label="DDG: size > 0"];
"1000565" -> "1000111"  [label="AST: "];
"1000565" -> "1000569"  [label="CFG: "];
"1000566" -> "1000565"  [label="AST: "];
"1000569" -> "1000565"  [label="AST: "];
"1000572" -> "1000565"  [label="CFG: "];
"1000565" -> "1000627"  [label="DDG: p->read"];
"1000395" -> "1000565"  [label="DDG: p->read"];
"1000477" -> "1000565"  [label="DDG: p->read"];
"1000565" -> "1000594"  [label="DDG: p->read"];
"1000565" -> "1000623"  [label="DDG: p->read"];
"1000594" -> "1000579"  [label="AST: "];
"1000594" -> "1000598"  [label="CFG: "];
"1000595" -> "1000594"  [label="AST: "];
"1000598" -> "1000594"  [label="AST: "];
"1000603" -> "1000594"  [label="CFG: "];
"1000594" -> "1000627"  [label="DDG: p->read"];
"1000594" -> "1000627"  [label="DDG: prev->read"];
"1000623" -> "1000111"  [label="AST: "];
"1000623" -> "1000624"  [label="CFG: "];
"1000624" -> "1000623"  [label="AST: "];
"1000627" -> "1000623"  [label="CFG: "];
"1000623" -> "1000627"  [label="DDG: <RET>"];
"1000570" -> "1000111"  [label="AST: "];
"1000570" -> "1000574"  [label="CFG: "];
"1000571" -> "1000570"  [label="AST: "];
"1000574" -> "1000570"  [label="AST: "];
"1000577" -> "1000570"  [label="CFG: "];
"1000570" -> "1000627"  [label="DDG: p->offset"];
"1000570" -> "1000627"  [label="DDG: toread"];
"1000570" -> "1000601"  [label="DDG: p->offset"];
"1000601" -> "1000579"  [label="AST: "];
"1000601" -> "1000605"  [label="CFG: "];
"1000602" -> "1000601"  [label="AST: "];
"1000605" -> "1000601"  [label="AST: "];
"1000610" -> "1000601"  [label="CFG: "];
"1000601" -> "1000627"  [label="DDG: prev->offset"];
"1000601" -> "1000627"  [label="DDG: p->offset"];
"1000547" -> "1000551"  [label="CFG: "];
"1000548" -> "1000547"  [label="AST: "];
"1000551" -> "1000547"  [label="AST: "];
"1000554" -> "1000547"  [label="CFG: "];
"1000547" -> "1000627"  [label="DDG: p->data"];
"1000547" -> "1000627"  [label="DDG: p->offset"];
"1000428" -> "1000547"  [label="DDG: p->data"];
"1000557" -> "1000556"  [label="AST: "];
"1000557" -> "1000558"  [label="CFG: "];
"1000558" -> "1000557"  [label="AST: "];
"1000561" -> "1000557"  [label="CFG: "];
"1000557" -> "1000627"  [label="DDG: ff_rtmp_packet_destroy(p)"];
"1000557" -> "1000627"  [label="DDG: p"];
"1000106" -> "1000557"  [label="DDG: p"];
"1000405" -> "1000381"  [label="AST: "];
"1000405" -> "1000411"  [label="CFG: "];
"1000406" -> "1000405"  [label="AST: "];
"1000411" -> "1000405"  [label="AST: "];
"1000415" -> "1000405"  [label="CFG: "];
"1000405" -> "1000627"  [label="DDG: ts_field"];
"1000405" -> "1000627"  [label="DDG: prev_pkt[channel_id].ts_field"];
}
