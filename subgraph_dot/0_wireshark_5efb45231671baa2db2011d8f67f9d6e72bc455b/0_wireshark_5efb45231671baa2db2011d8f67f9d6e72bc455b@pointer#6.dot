digraph "0_wireshark_5efb45231671baa2db2011d8f67f9d6e72bc455b@pointer" {
"1000402" [label="(Call,pd = ws_buffer_start_ptr(buf))"];
"1000404" [label="(Call,ws_buffer_start_ptr(buf))"];
"1000399" [label="(Call,ws_buffer_assure_space(buf, pkt_len))"];
"1000111" [label="(MethodParameterIn,Buffer *buf)"];
"1000258" [label="(Call,pkt_len > WTAP_MAX_PACKET_SIZE)"];
"1000456" [label="(Call,parse_single_hex_dump_line(line, pd, i * 16))"];
"1000430" [label="(Call,file_gets(line, TOSHIBA_LINE_LENGTH, fh))"];
"1000429" [label="(Call,file_gets(line, TOSHIBA_LINE_LENGTH, fh) == NULL)"];
"1000439" [label="(Call,file_error(fh, err_info))"];
"1000436" [label="(Call,*err = file_error(fh, err_info))"];
"1000443" [label="(Call,*err == 0)"];
"1000455" [label="(Call,!parse_single_hex_dump_line(line, pd, i * 16))"];
"1000258" [label="(Call,pkt_len > WTAP_MAX_PACKET_SIZE)"];
"1000465" [label="(Identifier,err)"];
"1000400" [label="(Identifier,buf)"];
"1000438" [label="(Identifier,err)"];
"1000440" [label="(Identifier,fh)"];
"1000409" [label="(Call,pkt_len / 16)"];
"1000455" [label="(Call,!parse_single_hex_dump_line(line, pd, i * 16))"];
"1000114" [label="(Block,)"];
"1000443" [label="(Call,*err == 0)"];
"1000476" [label="(MethodReturn,RET)"];
"1000277" [label="(Identifier,phdr)"];
"1000436" [label="(Call,*err = file_error(fh, err_info))"];
"1000454" [label="(ControlStructure,if (!parse_single_hex_dump_line(line, pd, i * 16)))"];
"1000435" [label="(Block,)"];
"1000264" [label="(Identifier,err)"];
"1000458" [label="(Identifier,pd)"];
"1000399" [label="(Call,ws_buffer_assure_space(buf, pkt_len))"];
"1000433" [label="(Identifier,fh)"];
"1000257" [label="(ControlStructure,if (pkt_len > WTAP_MAX_PACKET_SIZE))"];
"1000429" [label="(Call,file_gets(line, TOSHIBA_LINE_LENGTH, fh) == NULL)"];
"1000198" [label="(Call,file_gets(line, TOSHIBA_LINE_LENGTH, fh))"];
"1000439" [label="(Call,file_error(fh, err_info))"];
"1000453" [label="(Identifier,FALSE)"];
"1000269" [label="(Call,g_strdup_printf(\"toshiba: File has %u-byte packet, bigger than maximum of %u\",\n\t\t    pkt_len, WTAP_MAX_PACKET_SIZE))"];
"1000441" [label="(Identifier,err_info)"];
"1000311" [label="(Call,phdr->caplen = pkt_len)"];
"1000442" [label="(ControlStructure,if (*err == 0))"];
"1000197" [label="(Call,file_gets(line, TOSHIBA_LINE_LENGTH, fh) == NULL)"];
"1000457" [label="(Identifier,line)"];
"1000402" [label="(Call,pd = ws_buffer_start_ptr(buf))"];
"1000259" [label="(Identifier,pkt_len)"];
"1000428" [label="(ControlStructure,if (file_gets(line, TOSHIBA_LINE_LENGTH, fh) == NULL))"];
"1000431" [label="(Identifier,line)"];
"1000407" [label="(Identifier,hex_lines)"];
"1000405" [label="(Identifier,buf)"];
"1000351" [label="(Call,strtol(&channel[1], NULL, 10))"];
"1000432" [label="(Identifier,TOSHIBA_LINE_LENGTH)"];
"1000111" [label="(MethodParameterIn,Buffer *buf)"];
"1000260" [label="(Identifier,WTAP_MAX_PACKET_SIZE)"];
"1000446" [label="(Literal,0)"];
"1000437" [label="(Call,*err)"];
"1000456" [label="(Call,parse_single_hex_dump_line(line, pd, i * 16))"];
"1000113" [label="(MethodParameterIn,gchar **err_info)"];
"1000450" [label="(Identifier,err)"];
"1000109" [label="(MethodParameterIn,FILE_T fh)"];
"1000430" [label="(Call,file_gets(line, TOSHIBA_LINE_LENGTH, fh))"];
"1000445" [label="(Identifier,err)"];
"1000434" [label="(Identifier,NULL)"];
"1000401" [label="(Identifier,pkt_len)"];
"1000426" [label="(Identifier,i)"];
"1000404" [label="(Call,ws_buffer_start_ptr(buf))"];
"1000444" [label="(Call,*err)"];
"1000316" [label="(Call,phdr->len = pkt_len)"];
"1000222" [label="(Call,line[16] = '\0')"];
"1000459" [label="(Call,i * 16)"];
"1000403" [label="(Identifier,pd)"];
"1000402" -> "1000114"  [label="AST: "];
"1000402" -> "1000404"  [label="CFG: "];
"1000403" -> "1000402"  [label="AST: "];
"1000404" -> "1000402"  [label="AST: "];
"1000407" -> "1000402"  [label="CFG: "];
"1000402" -> "1000476"  [label="DDG: ws_buffer_start_ptr(buf)"];
"1000402" -> "1000476"  [label="DDG: pd"];
"1000404" -> "1000402"  [label="DDG: buf"];
"1000402" -> "1000456"  [label="DDG: pd"];
"1000404" -> "1000405"  [label="CFG: "];
"1000405" -> "1000404"  [label="AST: "];
"1000404" -> "1000476"  [label="DDG: buf"];
"1000399" -> "1000404"  [label="DDG: buf"];
"1000111" -> "1000404"  [label="DDG: buf"];
"1000399" -> "1000114"  [label="AST: "];
"1000399" -> "1000401"  [label="CFG: "];
"1000400" -> "1000399"  [label="AST: "];
"1000401" -> "1000399"  [label="AST: "];
"1000403" -> "1000399"  [label="CFG: "];
"1000399" -> "1000476"  [label="DDG: ws_buffer_assure_space(buf, pkt_len)"];
"1000111" -> "1000399"  [label="DDG: buf"];
"1000258" -> "1000399"  [label="DDG: pkt_len"];
"1000399" -> "1000409"  [label="DDG: pkt_len"];
"1000111" -> "1000108"  [label="AST: "];
"1000111" -> "1000476"  [label="DDG: buf"];
"1000258" -> "1000257"  [label="AST: "];
"1000258" -> "1000260"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000260" -> "1000258"  [label="AST: "];
"1000264" -> "1000258"  [label="CFG: "];
"1000277" -> "1000258"  [label="CFG: "];
"1000258" -> "1000476"  [label="DDG: WTAP_MAX_PACKET_SIZE"];
"1000258" -> "1000476"  [label="DDG: pkt_len > WTAP_MAX_PACKET_SIZE"];
"1000258" -> "1000269"  [label="DDG: pkt_len"];
"1000258" -> "1000269"  [label="DDG: WTAP_MAX_PACKET_SIZE"];
"1000258" -> "1000311"  [label="DDG: pkt_len"];
"1000258" -> "1000316"  [label="DDG: pkt_len"];
"1000456" -> "1000455"  [label="AST: "];
"1000456" -> "1000459"  [label="CFG: "];
"1000457" -> "1000456"  [label="AST: "];
"1000458" -> "1000456"  [label="AST: "];
"1000459" -> "1000456"  [label="AST: "];
"1000455" -> "1000456"  [label="CFG: "];
"1000456" -> "1000476"  [label="DDG: i * 16"];
"1000456" -> "1000476"  [label="DDG: line"];
"1000456" -> "1000476"  [label="DDG: pd"];
"1000456" -> "1000430"  [label="DDG: line"];
"1000456" -> "1000455"  [label="DDG: line"];
"1000456" -> "1000455"  [label="DDG: pd"];
"1000456" -> "1000455"  [label="DDG: i * 16"];
"1000222" -> "1000456"  [label="DDG: line[16]"];
"1000430" -> "1000456"  [label="DDG: line"];
"1000459" -> "1000456"  [label="DDG: i"];
"1000459" -> "1000456"  [label="DDG: 16"];
"1000430" -> "1000429"  [label="AST: "];
"1000430" -> "1000433"  [label="CFG: "];
"1000431" -> "1000430"  [label="AST: "];
"1000432" -> "1000430"  [label="AST: "];
"1000433" -> "1000430"  [label="AST: "];
"1000434" -> "1000430"  [label="CFG: "];
"1000430" -> "1000476"  [label="DDG: TOSHIBA_LINE_LENGTH"];
"1000430" -> "1000476"  [label="DDG: line"];
"1000430" -> "1000476"  [label="DDG: fh"];
"1000430" -> "1000429"  [label="DDG: line"];
"1000430" -> "1000429"  [label="DDG: TOSHIBA_LINE_LENGTH"];
"1000430" -> "1000429"  [label="DDG: fh"];
"1000222" -> "1000430"  [label="DDG: line[16]"];
"1000198" -> "1000430"  [label="DDG: line"];
"1000198" -> "1000430"  [label="DDG: TOSHIBA_LINE_LENGTH"];
"1000198" -> "1000430"  [label="DDG: fh"];
"1000109" -> "1000430"  [label="DDG: fh"];
"1000430" -> "1000439"  [label="DDG: fh"];
"1000429" -> "1000428"  [label="AST: "];
"1000429" -> "1000434"  [label="CFG: "];
"1000434" -> "1000429"  [label="AST: "];
"1000438" -> "1000429"  [label="CFG: "];
"1000457" -> "1000429"  [label="CFG: "];
"1000429" -> "1000476"  [label="DDG: NULL"];
"1000429" -> "1000476"  [label="DDG: file_gets(line, TOSHIBA_LINE_LENGTH, fh)"];
"1000429" -> "1000476"  [label="DDG: file_gets(line, TOSHIBA_LINE_LENGTH, fh) == NULL"];
"1000351" -> "1000429"  [label="DDG: NULL"];
"1000197" -> "1000429"  [label="DDG: NULL"];
"1000439" -> "1000436"  [label="AST: "];
"1000439" -> "1000441"  [label="CFG: "];
"1000440" -> "1000439"  [label="AST: "];
"1000441" -> "1000439"  [label="AST: "];
"1000436" -> "1000439"  [label="CFG: "];
"1000439" -> "1000476"  [label="DDG: fh"];
"1000439" -> "1000476"  [label="DDG: err_info"];
"1000439" -> "1000436"  [label="DDG: fh"];
"1000439" -> "1000436"  [label="DDG: err_info"];
"1000109" -> "1000439"  [label="DDG: fh"];
"1000113" -> "1000439"  [label="DDG: err_info"];
"1000436" -> "1000435"  [label="AST: "];
"1000437" -> "1000436"  [label="AST: "];
"1000445" -> "1000436"  [label="CFG: "];
"1000436" -> "1000476"  [label="DDG: file_error(fh, err_info)"];
"1000436" -> "1000443"  [label="DDG: *err"];
"1000443" -> "1000442"  [label="AST: "];
"1000443" -> "1000446"  [label="CFG: "];
"1000444" -> "1000443"  [label="AST: "];
"1000446" -> "1000443"  [label="AST: "];
"1000450" -> "1000443"  [label="CFG: "];
"1000453" -> "1000443"  [label="CFG: "];
"1000443" -> "1000476"  [label="DDG: *err == 0"];
"1000443" -> "1000476"  [label="DDG: *err"];
"1000455" -> "1000454"  [label="AST: "];
"1000465" -> "1000455"  [label="CFG: "];
"1000426" -> "1000455"  [label="CFG: "];
"1000455" -> "1000476"  [label="DDG: !parse_single_hex_dump_line(line, pd, i * 16)"];
"1000455" -> "1000476"  [label="DDG: parse_single_hex_dump_line(line, pd, i * 16)"];
}
