digraph "0_openbsd_0654414afcce51a16d35d05060190a3ec4618d42@API" {
"1000205" [label="(Call,sk_OPENSSL_STRING_free(id->hosts))"];
"1000199" [label="(Call,sk_OPENSSL_STRING_num(id->hosts))"];
"1000189" [label="(Call,sk_OPENSSL_STRING_push(id->hosts, copy))"];
"1000170" [label="(Call,id->hosts == NULL)"];
"1000130" [label="(Call,mode == SET_HOST && id->hosts)"];
"1000131" [label="(Call,mode == SET_HOST)"];
"1000103" [label="(MethodParameterIn,int mode)"];
"1000142" [label="(Call,id->hosts = NULL)"];
"1000110" [label="(Call,name != NULL)"];
"1000104" [label="(MethodParameterIn,const char *name)"];
"1000163" [label="(Call,copy == NULL)"];
"1000157" [label="(Call,copy = strndup(name, namelen))"];
"1000159" [label="(Call,strndup(name, namelen))"];
"1000149" [label="(Call,name == NULL)"];
"1000121" [label="(Call,name && memchr(name, '\0', namelen))"];
"1000118" [label="(Call,strlen(name))"];
"1000123" [label="(Call,memchr(name, '\0', namelen))"];
"1000116" [label="(Call,namelen = strlen(name))"];
"1000105" [label="(MethodParameterIn,size_t namelen)"];
"1000113" [label="(Call,namelen == 0)"];
"1000152" [label="(Call,namelen == 0)"];
"1000176" [label="(Call,id->hosts = sk_OPENSSL_STRING_new_null())"];
"1000205" [label="(Call,sk_OPENSSL_STRING_free(id->hosts))"];
"1000154" [label="(Literal,0)"];
"1000128" [label="(Literal,0)"];
"1000135" [label="(Identifier,id)"];
"1000142" [label="(Call,id->hosts = NULL)"];
"1000189" [label="(Call,sk_OPENSSL_STRING_push(id->hosts, copy))"];
"1000148" [label="(Call,name == NULL || namelen == 0)"];
"1000195" [label="(Call,free(copy))"];
"1000138" [label="(Call,string_stack_free(id->hosts))"];
"1000190" [label="(Call,id->hosts)"];
"1000193" [label="(Identifier,copy)"];
"1000175" [label="(Call,(id->hosts = sk_OPENSSL_STRING_new_null()) == NULL)"];
"1000110" [label="(Call,name != NULL)"];
"1000112" [label="(Identifier,NULL)"];
"1000176" [label="(Call,id->hosts = sk_OPENSSL_STRING_new_null())"];
"1000119" [label="(Identifier,name)"];
"1000163" [label="(Call,copy == NULL)"];
"1000149" [label="(Call,name == NULL)"];
"1000203" [label="(Literal,0)"];
"1000109" [label="(Call,name != NULL && namelen == 0)"];
"1000117" [label="(Identifier,namelen)"];
"1000169" [label="(Call,id->hosts == NULL &&\n\t    (id->hosts = sk_OPENSSL_STRING_new_null()) == NULL)"];
"1000122" [label="(Identifier,name)"];
"1000211" [label="(Identifier,id)"];
"1000113" [label="(Call,namelen == 0)"];
"1000218" [label="(MethodReturn,RET)"];
"1000174" [label="(Identifier,NULL)"];
"1000120" [label="(ControlStructure,if (name && memchr(name, '\0', namelen)))"];
"1000170" [label="(Call,id->hosts == NULL)"];
"1000206" [label="(Call,id->hosts)"];
"1000171" [label="(Call,id->hosts)"];
"1000152" [label="(Call,namelen == 0)"];
"1000159" [label="(Call,strndup(name, namelen))"];
"1000108" [label="(ControlStructure,if (name != NULL && namelen == 0))"];
"1000140" [label="(Identifier,id)"];
"1000209" [label="(Call,id->hosts = NULL)"];
"1000162" [label="(ControlStructure,if (copy == NULL))"];
"1000200" [label="(Call,id->hosts)"];
"1000178" [label="(Identifier,id)"];
"1000180" [label="(Call,sk_OPENSSL_STRING_new_null())"];
"1000181" [label="(Identifier,NULL)"];
"1000161" [label="(Identifier,namelen)"];
"1000151" [label="(Identifier,NULL)"];
"1000125" [label="(Literal,'\0')"];
"1000177" [label="(Call,id->hosts)"];
"1000131" [label="(Call,mode == SET_HOST)"];
"1000104" [label="(MethodParameterIn,const char *name)"];
"1000204" [label="(Block,)"];
"1000153" [label="(Identifier,namelen)"];
"1000143" [label="(Call,id->hosts)"];
"1000150" [label="(Identifier,name)"];
"1000160" [label="(Identifier,name)"];
"1000116" [label="(Call,namelen = strlen(name))"];
"1000137" [label="(Block,)"];
"1000164" [label="(Identifier,copy)"];
"1000132" [label="(Identifier,mode)"];
"1000118" [label="(Call,strlen(name))"];
"1000165" [label="(Identifier,NULL)"];
"1000115" [label="(Literal,0)"];
"1000199" [label="(Call,sk_OPENSSL_STRING_num(id->hosts))"];
"1000146" [label="(Identifier,NULL)"];
"1000198" [label="(Call,sk_OPENSSL_STRING_num(id->hosts) == 0)"];
"1000121" [label="(Call,name && memchr(name, '\0', namelen))"];
"1000114" [label="(Identifier,namelen)"];
"1000106" [label="(Block,)"];
"1000105" [label="(MethodParameterIn,size_t namelen)"];
"1000123" [label="(Call,memchr(name, '\0', namelen))"];
"1000133" [label="(Identifier,SET_HOST)"];
"1000158" [label="(Identifier,copy)"];
"1000103" [label="(MethodParameterIn,int mode)"];
"1000130" [label="(Call,mode == SET_HOST && id->hosts)"];
"1000124" [label="(Identifier,name)"];
"1000129" [label="(ControlStructure,if (mode == SET_HOST && id->hosts))"];
"1000167" [label="(Literal,0)"];
"1000134" [label="(Call,id->hosts)"];
"1000157" [label="(Call,copy = strndup(name, namelen))"];
"1000183" [label="(Call,free(copy))"];
"1000126" [label="(Identifier,namelen)"];
"1000111" [label="(Identifier,name)"];
"1000188" [label="(Call,!sk_OPENSSL_STRING_push(id->hosts, copy))"];
"1000172" [label="(Identifier,id)"];
"1000205" -> "1000204"  [label="AST: "];
"1000205" -> "1000206"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000211" -> "1000205"  [label="CFG: "];
"1000205" -> "1000218"  [label="DDG: sk_OPENSSL_STRING_free(id->hosts)"];
"1000199" -> "1000205"  [label="DDG: id->hosts"];
"1000199" -> "1000198"  [label="AST: "];
"1000199" -> "1000200"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000203" -> "1000199"  [label="CFG: "];
"1000199" -> "1000218"  [label="DDG: id->hosts"];
"1000199" -> "1000198"  [label="DDG: id->hosts"];
"1000189" -> "1000199"  [label="DDG: id->hosts"];
"1000189" -> "1000188"  [label="AST: "];
"1000189" -> "1000193"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000193" -> "1000189"  [label="AST: "];
"1000188" -> "1000189"  [label="CFG: "];
"1000189" -> "1000218"  [label="DDG: id->hosts"];
"1000189" -> "1000218"  [label="DDG: copy"];
"1000189" -> "1000188"  [label="DDG: id->hosts"];
"1000189" -> "1000188"  [label="DDG: copy"];
"1000170" -> "1000189"  [label="DDG: id->hosts"];
"1000176" -> "1000189"  [label="DDG: id->hosts"];
"1000163" -> "1000189"  [label="DDG: copy"];
"1000189" -> "1000195"  [label="DDG: copy"];
"1000170" -> "1000169"  [label="AST: "];
"1000170" -> "1000174"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000174" -> "1000170"  [label="AST: "];
"1000178" -> "1000170"  [label="CFG: "];
"1000169" -> "1000170"  [label="CFG: "];
"1000170" -> "1000218"  [label="DDG: id->hosts"];
"1000170" -> "1000218"  [label="DDG: NULL"];
"1000170" -> "1000169"  [label="DDG: id->hosts"];
"1000170" -> "1000169"  [label="DDG: NULL"];
"1000130" -> "1000170"  [label="DDG: id->hosts"];
"1000142" -> "1000170"  [label="DDG: id->hosts"];
"1000163" -> "1000170"  [label="DDG: NULL"];
"1000170" -> "1000175"  [label="DDG: NULL"];
"1000170" -> "1000209"  [label="DDG: NULL"];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000131"  [label="CFG: "];
"1000130" -> "1000134"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000134" -> "1000130"  [label="AST: "];
"1000140" -> "1000130"  [label="CFG: "];
"1000150" -> "1000130"  [label="CFG: "];
"1000130" -> "1000218"  [label="DDG: mode == SET_HOST && id->hosts"];
"1000130" -> "1000218"  [label="DDG: id->hosts"];
"1000130" -> "1000218"  [label="DDG: mode == SET_HOST"];
"1000131" -> "1000130"  [label="DDG: mode"];
"1000131" -> "1000130"  [label="DDG: SET_HOST"];
"1000130" -> "1000138"  [label="DDG: id->hosts"];
"1000131" -> "1000133"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="AST: "];
"1000135" -> "1000131"  [label="CFG: "];
"1000131" -> "1000218"  [label="DDG: mode"];
"1000131" -> "1000218"  [label="DDG: SET_HOST"];
"1000103" -> "1000131"  [label="DDG: mode"];
"1000103" -> "1000101"  [label="AST: "];
"1000103" -> "1000218"  [label="DDG: mode"];
"1000142" -> "1000137"  [label="AST: "];
"1000142" -> "1000146"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000146" -> "1000142"  [label="AST: "];
"1000150" -> "1000142"  [label="CFG: "];
"1000142" -> "1000218"  [label="DDG: id->hosts"];
"1000110" -> "1000142"  [label="DDG: NULL"];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000112"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000112" -> "1000110"  [label="AST: "];
"1000114" -> "1000110"  [label="CFG: "];
"1000109" -> "1000110"  [label="CFG: "];
"1000110" -> "1000218"  [label="DDG: NULL"];
"1000110" -> "1000109"  [label="DDG: name"];
"1000110" -> "1000109"  [label="DDG: NULL"];
"1000104" -> "1000110"  [label="DDG: name"];
"1000110" -> "1000118"  [label="DDG: name"];
"1000110" -> "1000121"  [label="DDG: name"];
"1000110" -> "1000123"  [label="DDG: name"];
"1000110" -> "1000149"  [label="DDG: NULL"];
"1000104" -> "1000101"  [label="AST: "];
"1000104" -> "1000218"  [label="DDG: name"];
"1000104" -> "1000118"  [label="DDG: name"];
"1000104" -> "1000121"  [label="DDG: name"];
"1000104" -> "1000123"  [label="DDG: name"];
"1000104" -> "1000149"  [label="DDG: name"];
"1000104" -> "1000159"  [label="DDG: name"];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000165"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000165" -> "1000163"  [label="AST: "];
"1000167" -> "1000163"  [label="CFG: "];
"1000172" -> "1000163"  [label="CFG: "];
"1000163" -> "1000218"  [label="DDG: copy"];
"1000163" -> "1000218"  [label="DDG: copy == NULL"];
"1000163" -> "1000218"  [label="DDG: NULL"];
"1000157" -> "1000163"  [label="DDG: copy"];
"1000149" -> "1000163"  [label="DDG: NULL"];
"1000163" -> "1000183"  [label="DDG: copy"];
"1000157" -> "1000106"  [label="AST: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000164" -> "1000157"  [label="CFG: "];
"1000157" -> "1000218"  [label="DDG: strndup(name, namelen)"];
"1000159" -> "1000157"  [label="DDG: name"];
"1000159" -> "1000157"  [label="DDG: namelen"];
"1000159" -> "1000161"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000161" -> "1000159"  [label="AST: "];
"1000159" -> "1000218"  [label="DDG: name"];
"1000159" -> "1000218"  [label="DDG: namelen"];
"1000149" -> "1000159"  [label="DDG: name"];
"1000116" -> "1000159"  [label="DDG: namelen"];
"1000123" -> "1000159"  [label="DDG: namelen"];
"1000113" -> "1000159"  [label="DDG: namelen"];
"1000152" -> "1000159"  [label="DDG: namelen"];
"1000105" -> "1000159"  [label="DDG: namelen"];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000153" -> "1000149"  [label="CFG: "];
"1000148" -> "1000149"  [label="CFG: "];
"1000149" -> "1000218"  [label="DDG: NULL"];
"1000149" -> "1000218"  [label="DDG: name"];
"1000149" -> "1000148"  [label="DDG: name"];
"1000149" -> "1000148"  [label="DDG: NULL"];
"1000121" -> "1000149"  [label="DDG: name"];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000122"  [label="CFG: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000128" -> "1000121"  [label="CFG: "];
"1000132" -> "1000121"  [label="CFG: "];
"1000121" -> "1000218"  [label="DDG: memchr(name, '\0', namelen)"];
"1000121" -> "1000218"  [label="DDG: name && memchr(name, '\0', namelen)"];
"1000121" -> "1000218"  [label="DDG: name"];
"1000118" -> "1000121"  [label="DDG: name"];
"1000123" -> "1000121"  [label="DDG: name"];
"1000123" -> "1000121"  [label="DDG: '\0'"];
"1000123" -> "1000121"  [label="DDG: namelen"];
"1000118" -> "1000116"  [label="AST: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000118" -> "1000116"  [label="DDG: name"];
"1000118" -> "1000123"  [label="DDG: name"];
"1000123" -> "1000126"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000126" -> "1000123"  [label="AST: "];
"1000123" -> "1000218"  [label="DDG: namelen"];
"1000116" -> "1000123"  [label="DDG: namelen"];
"1000113" -> "1000123"  [label="DDG: namelen"];
"1000105" -> "1000123"  [label="DDG: namelen"];
"1000123" -> "1000152"  [label="DDG: namelen"];
"1000116" -> "1000108"  [label="AST: "];
"1000117" -> "1000116"  [label="AST: "];
"1000122" -> "1000116"  [label="CFG: "];
"1000116" -> "1000218"  [label="DDG: strlen(name)"];
"1000116" -> "1000218"  [label="DDG: namelen"];
"1000105" -> "1000116"  [label="DDG: namelen"];
"1000116" -> "1000152"  [label="DDG: namelen"];
"1000105" -> "1000101"  [label="AST: "];
"1000105" -> "1000218"  [label="DDG: namelen"];
"1000105" -> "1000113"  [label="DDG: namelen"];
"1000105" -> "1000152"  [label="DDG: namelen"];
"1000113" -> "1000109"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000109" -> "1000113"  [label="CFG: "];
"1000113" -> "1000218"  [label="DDG: namelen"];
"1000113" -> "1000109"  [label="DDG: namelen"];
"1000113" -> "1000109"  [label="DDG: 0"];
"1000113" -> "1000152"  [label="DDG: namelen"];
"1000152" -> "1000148"  [label="AST: "];
"1000152" -> "1000154"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000148" -> "1000152"  [label="CFG: "];
"1000152" -> "1000218"  [label="DDG: namelen"];
"1000152" -> "1000148"  [label="DDG: namelen"];
"1000152" -> "1000148"  [label="DDG: 0"];
"1000176" -> "1000175"  [label="AST: "];
"1000176" -> "1000180"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000180" -> "1000176"  [label="AST: "];
"1000181" -> "1000176"  [label="CFG: "];
"1000176" -> "1000218"  [label="DDG: sk_OPENSSL_STRING_new_null()"];
"1000176" -> "1000218"  [label="DDG: id->hosts"];
"1000176" -> "1000175"  [label="DDG: id->hosts"];
}
