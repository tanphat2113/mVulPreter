digraph "0_file_447558595a3650db2886cd2f416ad0beba965801@pointer" {
"1002600" [label="(Call,sbuf = m->value.s)"];
"1002613" [label="(Call,sbuf++)"];
"1002621" [label="(Call,file_magicfind(ms, sbuf, &ml))"];
"1002620" [label="(Call,file_magicfind(ms, sbuf, &ml) == -1)"];
"1002629" [label="(Call,file_error(ms, 0, \"cannot find entry `%s'\", sbuf))"];
"1002653" [label="(Call,match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,\n\t\t    mode, text, flip, recursion_level, printed_something,\n\t\t    need_separator, returnval))"];
"1002651" [label="(Call,rv = match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,\n\t\t    mode, text, flip, recursion_level, printed_something,\n\t\t    need_separator, returnval))"];
"1002674" [label="(Call,rv != 1)"];
"1002681" [label="(Return,return rv;)"];
"1002601" [label="(Identifier,sbuf)"];
"1002626" [label="(Call,-1)"];
"1002600" [label="(Call,sbuf = m->value.s)"];
"1000157" [label="(Call,mcopy(ms, p, m->type, m->flag & INDIR, s, (uint32_t)(offset + o),\n\t    (uint32_t)nbytes, count))"];
"1000424" [label="(Call,cvt_flip(m->in_type, flip))"];
"1002636" [label="(Literal,1)"];
"1002633" [label="(Identifier,sbuf)"];
"1002613" [label="(Call,sbuf++)"];
"1002658" [label="(Call,ml.nmagic)"];
"1000110" [label="(MethodParameterIn,int text)"];
"1000103" [label="(MethodParameterIn,struct magic_set *ms)"];
"1002682" [label="(Identifier,rv)"];
"1002610" [label="(Identifier,sbuf)"];
"1000115" [label="(MethodParameterIn,int *returnval)"];
"1002614" [label="(Identifier,sbuf)"];
"1002674" [label="(Call,rv != 1)"];
"1002652" [label="(Identifier,rv)"];
"1002602" [label="(Call,m->value.s)"];
"1002349" [label="(Call,mcopy(ms, p, m->type, 0, s, offset, nbytes, count))"];
"1002622" [label="(Identifier,ms)"];
"1002654" [label="(Identifier,ms)"];
"1002661" [label="(Identifier,s)"];
"1002628" [label="(Block,)"];
"1000113" [label="(MethodParameterIn,int *printed_something)"];
"1002668" [label="(Identifier,flip)"];
"1002620" [label="(Call,file_magicfind(ms, sbuf, &ml) == -1)"];
"1002651" [label="(Call,rv = match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,\n\t\t    mode, text, flip, recursion_level, printed_something,\n\t\t    need_separator, returnval))"];
"1000192" [label="(Call,fprintf(stderr, \"mget(type=%d, flag=%x, offset=%u, o=%zu, \"\n\t\t    \"nbytes=%zu, count=%u)\n\", m->type, m->flag, offset, o,\n\t\t    nbytes, count))"];
"1002667" [label="(Identifier,text)"];
"1000111" [label="(MethodParameterIn,int flip)"];
"1002616" [label="(Identifier,flip)"];
"1002663" [label="(Call,offset + o)"];
"1000106" [label="(MethodParameterIn,size_t nbytes)"];
"1000112" [label="(MethodParameterIn,int recursion_level)"];
"1002675" [label="(Identifier,rv)"];
"1002676" [label="(Literal,1)"];
"1002638" [label="(Identifier,oneed_separator)"];
"1002713" [label="(MethodReturn,RET)"];
"1000107" [label="(MethodParameterIn,size_t o)"];
"1002666" [label="(Identifier,mode)"];
"1002653" [label="(Call,match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,\n\t\t    mode, text, flip, recursion_level, printed_something,\n\t\t    need_separator, returnval))"];
"1002662" [label="(Identifier,nbytes)"];
"1002681" [label="(Return,return rv;)"];
"1000104" [label="(MethodParameterIn,const unsigned char *s)"];
"1002394" [label="(Block,)"];
"1002624" [label="(Call,&ml)"];
"1002623" [label="(Identifier,sbuf)"];
"1002619" [label="(ControlStructure,if (file_magicfind(ms, sbuf, &ml) == -1))"];
"1002632" [label="(Literal,\"cannot find entry `%s'\")"];
"1002671" [label="(Identifier,need_separator)"];
"1002621" [label="(Call,file_magicfind(ms, sbuf, &ml))"];
"1002673" [label="(ControlStructure,if (rv != 1))"];
"1002670" [label="(Identifier,printed_something)"];
"1002630" [label="(Identifier,ms)"];
"1002669" [label="(Identifier,recursion_level)"];
"1002594" [label="(Call,OFFSET_OOB(nbytes, offset, 0))"];
"1000114" [label="(MethodParameterIn,int *need_separator)"];
"1002679" [label="(Identifier,need_separator)"];
"1002615" [label="(Call,flip = !flip)"];
"1002627" [label="(Literal,1)"];
"1002655" [label="(Call,ml.magic)"];
"1002629" [label="(Call,file_error(ms, 0, \"cannot find entry `%s'\", sbuf))"];
"1000109" [label="(MethodParameterIn,int mode)"];
"1002612" [label="(Block,)"];
"1002631" [label="(Literal,0)"];
"1002672" [label="(Identifier,returnval)"];
"1000144" [label="(Call,recursion_level >= 20)"];
"1002600" -> "1002394"  [label="AST: "];
"1002600" -> "1002602"  [label="CFG: "];
"1002601" -> "1002600"  [label="AST: "];
"1002602" -> "1002600"  [label="AST: "];
"1002610" -> "1002600"  [label="CFG: "];
"1002600" -> "1002713"  [label="DDG: "];
"1002600" -> "1002613"  [label="DDG: "];
"1002600" -> "1002621"  [label="DDG: "];
"1002613" -> "1002612"  [label="AST: "];
"1002613" -> "1002614"  [label="CFG: "];
"1002614" -> "1002613"  [label="AST: "];
"1002616" -> "1002613"  [label="CFG: "];
"1002613" -> "1002621"  [label="DDG: "];
"1002621" -> "1002620"  [label="AST: "];
"1002621" -> "1002624"  [label="CFG: "];
"1002622" -> "1002621"  [label="AST: "];
"1002623" -> "1002621"  [label="AST: "];
"1002624" -> "1002621"  [label="AST: "];
"1002627" -> "1002621"  [label="CFG: "];
"1002621" -> "1002713"  [label="DDG: "];
"1002621" -> "1002713"  [label="DDG: "];
"1002621" -> "1002620"  [label="DDG: "];
"1002621" -> "1002620"  [label="DDG: "];
"1002621" -> "1002620"  [label="DDG: "];
"1002349" -> "1002621"  [label="DDG: "];
"1000157" -> "1002621"  [label="DDG: "];
"1000103" -> "1002621"  [label="DDG: "];
"1002621" -> "1002629"  [label="DDG: "];
"1002621" -> "1002629"  [label="DDG: "];
"1002621" -> "1002653"  [label="DDG: "];
"1002620" -> "1002619"  [label="AST: "];
"1002620" -> "1002626"  [label="CFG: "];
"1002626" -> "1002620"  [label="AST: "];
"1002630" -> "1002620"  [label="CFG: "];
"1002638" -> "1002620"  [label="CFG: "];
"1002620" -> "1002713"  [label="DDG: "];
"1002620" -> "1002713"  [label="DDG: "];
"1002620" -> "1002713"  [label="DDG: "];
"1002626" -> "1002620"  [label="DDG: "];
"1002629" -> "1002628"  [label="AST: "];
"1002629" -> "1002633"  [label="CFG: "];
"1002630" -> "1002629"  [label="AST: "];
"1002631" -> "1002629"  [label="AST: "];
"1002632" -> "1002629"  [label="AST: "];
"1002633" -> "1002629"  [label="AST: "];
"1002636" -> "1002629"  [label="CFG: "];
"1002629" -> "1002713"  [label="DDG: "];
"1002629" -> "1002713"  [label="DDG: "];
"1002629" -> "1002713"  [label="DDG: "];
"1000103" -> "1002629"  [label="DDG: "];
"1002653" -> "1002651"  [label="AST: "];
"1002653" -> "1002672"  [label="CFG: "];
"1002654" -> "1002653"  [label="AST: "];
"1002655" -> "1002653"  [label="AST: "];
"1002658" -> "1002653"  [label="AST: "];
"1002661" -> "1002653"  [label="AST: "];
"1002662" -> "1002653"  [label="AST: "];
"1002663" -> "1002653"  [label="AST: "];
"1002666" -> "1002653"  [label="AST: "];
"1002667" -> "1002653"  [label="AST: "];
"1002668" -> "1002653"  [label="AST: "];
"1002669" -> "1002653"  [label="AST: "];
"1002670" -> "1002653"  [label="AST: "];
"1002671" -> "1002653"  [label="AST: "];
"1002672" -> "1002653"  [label="AST: "];
"1002651" -> "1002653"  [label="CFG: "];
"1002653" -> "1002713"  [label="DDG: "];
"1002653" -> "1002713"  [label="DDG: "];
"1002653" -> "1002713"  [label="DDG: "];
"1002653" -> "1002713"  [label="DDG: "];
"1002653" -> "1002713"  [label="DDG: "];
"1002653" -> "1002713"  [label="DDG: "];
"1002653" -> "1002713"  [label="DDG: "];
"1002653" -> "1002713"  [label="DDG: "];
"1002653" -> "1002713"  [label="DDG: "];
"1002653" -> "1002713"  [label="DDG: "];
"1002653" -> "1002713"  [label="DDG: "];
"1002653" -> "1002713"  [label="DDG: "];
"1002653" -> "1002713"  [label="DDG: "];
"1002653" -> "1002651"  [label="DDG: "];
"1002653" -> "1002651"  [label="DDG: "];
"1002653" -> "1002651"  [label="DDG: "];
"1002653" -> "1002651"  [label="DDG: "];
"1002653" -> "1002651"  [label="DDG: "];
"1002653" -> "1002651"  [label="DDG: "];
"1002653" -> "1002651"  [label="DDG: "];
"1002653" -> "1002651"  [label="DDG: "];
"1002653" -> "1002651"  [label="DDG: "];
"1002653" -> "1002651"  [label="DDG: "];
"1002653" -> "1002651"  [label="DDG: "];
"1002653" -> "1002651"  [label="DDG: "];
"1002653" -> "1002651"  [label="DDG: "];
"1000103" -> "1002653"  [label="DDG: "];
"1000157" -> "1002653"  [label="DDG: "];
"1002349" -> "1002653"  [label="DDG: "];
"1000104" -> "1002653"  [label="DDG: "];
"1002594" -> "1002653"  [label="DDG: "];
"1002594" -> "1002653"  [label="DDG: "];
"1000106" -> "1002653"  [label="DDG: "];
"1000192" -> "1002653"  [label="DDG: "];
"1000107" -> "1002653"  [label="DDG: "];
"1000109" -> "1002653"  [label="DDG: "];
"1000110" -> "1002653"  [label="DDG: "];
"1000424" -> "1002653"  [label="DDG: "];
"1002615" -> "1002653"  [label="DDG: "];
"1000111" -> "1002653"  [label="DDG: "];
"1000144" -> "1002653"  [label="DDG: "];
"1000112" -> "1002653"  [label="DDG: "];
"1000113" -> "1002653"  [label="DDG: "];
"1000114" -> "1002653"  [label="DDG: "];
"1000115" -> "1002653"  [label="DDG: "];
"1002651" -> "1002394"  [label="AST: "];
"1002652" -> "1002651"  [label="AST: "];
"1002675" -> "1002651"  [label="CFG: "];
"1002651" -> "1002713"  [label="DDG: "];
"1002651" -> "1002674"  [label="DDG: "];
"1002674" -> "1002673"  [label="AST: "];
"1002674" -> "1002676"  [label="CFG: "];
"1002675" -> "1002674"  [label="AST: "];
"1002676" -> "1002674"  [label="AST: "];
"1002679" -> "1002674"  [label="CFG: "];
"1002682" -> "1002674"  [label="CFG: "];
"1002674" -> "1002713"  [label="DDG: "];
"1002674" -> "1002713"  [label="DDG: "];
"1002674" -> "1002681"  [label="DDG: "];
"1002681" -> "1002394"  [label="AST: "];
"1002681" -> "1002682"  [label="CFG: "];
"1002682" -> "1002681"  [label="AST: "];
"1002713" -> "1002681"  [label="CFG: "];
"1002681" -> "1002713"  [label="DDG: "];
"1002682" -> "1002681"  [label="DDG: "];
}
