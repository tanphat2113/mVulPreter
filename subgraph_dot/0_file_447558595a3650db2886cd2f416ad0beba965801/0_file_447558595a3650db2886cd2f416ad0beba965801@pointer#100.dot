digraph "0_file_447558595a3650db2886cd2f416ad0beba965801@pointer" {
"1000424" [label="(Call,cvt_flip(m->in_type, flip))"];
"1000237" [label="(Call,cvt_flip(m->in_type, flip))"];
"1000111" [label="(MethodParameterIn,int flip)"];
"1000422" [label="(Call,in_type = cvt_flip(m->in_type, flip))"];
"1002617" [label="(Call,!flip)"];
"1002615" [label="(Call,flip = !flip)"];
"1002653" [label="(Call,match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,\n\t\t    mode, text, flip, recursion_level, printed_something,\n\t\t    need_separator, returnval))"];
"1002651" [label="(Call,rv = match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,\n\t\t    mode, text, flip, recursion_level, printed_something,\n\t\t    need_separator, returnval))"];
"1002674" [label="(Call,rv != 1)"];
"1002681" [label="(Return,return rv;)"];
"1002705" [label="(Call,mconvert(ms, m, flip))"];
"1002704" [label="(Call,!mconvert(ms, m, flip))"];
"1000484" [label="(JumpTarget,case FILE_OPMINUS:)"];
"1000810" [label="(JumpTarget,case FILE_OPXOR:)"];
"1001045" [label="(JumpTarget,case FILE_OPMODULO:)"];
"1000105" [label="(MethodParameterIn,struct magic *m)"];
"1000103" [label="(MethodParameterIn,struct magic_set *ms)"];
"1002710" [label="(Literal,0)"];
"1001559" [label="(JumpTarget,case FILE_OPADD:)"];
"1002708" [label="(Identifier,flip)"];
"1002654" [label="(Identifier,ms)"];
"1000422" [label="(Call,in_type = cvt_flip(m->in_type, flip))"];
"1001027" [label="(JumpTarget,case FILE_OPMULTIPLY:)"];
"1002668" [label="(Identifier,flip)"];
"1000192" [label="(Call,fprintf(stderr, \"mget(type=%d, flag=%x, offset=%u, o=%zu, \"\n\t\t    \"nbytes=%zu, count=%u)\n\", m->type, m->flag, offset, o,\n\t\t    nbytes, count))"];
"1000257" [label="(JumpTarget,case FILE_BESHORT:)"];
"1002703" [label="(ControlStructure,if (!mconvert(ms, m, flip)))"];
"1000111" [label="(MethodParameterIn,int flip)"];
"1002667" [label="(Identifier,text)"];
"1002663" [label="(Call,offset + o)"];
"1000106" [label="(MethodParameterIn,size_t nbytes)"];
"1000112" [label="(MethodParameterIn,int recursion_level)"];
"1000638" [label="(JumpTarget,case FILE_OPMINUS:)"];
"1002065" [label="(JumpTarget,case FILE_OPMODULO:)"];
"1000413" [label="(Identifier,ms)"];
"1000276" [label="(JumpTarget,case FILE_LESHORT:)"];
"1000831" [label="(JumpTarget,case FILE_OPADD:)"];
"1000104" [label="(MethodParameterIn,const unsigned char *s)"];
"1000241" [label="(Identifier,flip)"];
"1001018" [label="(JumpTarget,case FILE_OPMINUS:)"];
"1000236" [label="(ControlStructure,switch (cvt_flip(m->in_type, flip)))"];
"1002669" [label="(Identifier,recursion_level)"];
"1002594" [label="(Call,OFFSET_OOB(nbytes, offset, 0))"];
"1000114" [label="(MethodParameterIn,int *need_separator)"];
"1002704" [label="(Call,!mconvert(ms, m, flip))"];
"1002707" [label="(Identifier,m)"];
"1001707" [label="(JumpTarget,case FILE_OPMODULO:)"];
"1000789" [label="(JumpTarget,case FILE_OPOR:)"];
"1001200" [label="(JumpTarget,case FILE_OPADD:)"];
"1001348" [label="(JumpTarget,case FILE_OPMODULO:)"];
"1000302" [label="(JumpTarget,case FILE_BELONG:)"];
"1002191" [label="(JumpTarget,case FILE_OPADD:)"];
"1002209" [label="(JumpTarget,case FILE_OPMULTIPLY:)"];
"1000502" [label="(JumpTarget,case FILE_OPDIVIDE:)"];
"1000424" [label="(Call,cvt_flip(m->in_type, flip))"];
"1001009" [label="(JumpTarget,case FILE_OPADD:)"];
"1000750" [label="(JumpTarget,case FILE_LESHORT:)"];
"1001163" [label="(JumpTarget,case FILE_OPXOR:)"];
"1001991" [label="(JumpTarget,case FILE_OPMULTIPLY:)"];
"1001071" [label="(JumpTarget,case FILE_BEID3:)"];
"1002652" [label="(Identifier,rv)"];
"1002028" [label="(JumpTarget,case FILE_OPDIVIDE:)"];
"1001089" [label="(JumpTarget,case FILE_OPAND:)"];
"1002616" [label="(Identifier,flip)"];
"1000991" [label="(JumpTarget,case FILE_OPOR:)"];
"1000475" [label="(JumpTarget,case FILE_OPADD:)"];
"1002681" [label="(Return,return rv;)"];
"1000982" [label="(JumpTarget,case FILE_OPAND:)"];
"1000768" [label="(JumpTarget,case FILE_OPAND:)"];
"1000575" [label="(JumpTarget,case FILE_OPOR:)"];
"1000238" [label="(Call,m->in_type)"];
"1001880" [label="(JumpTarget,case FILE_OPXOR:)"];
"1000303" [label="(JumpTarget,case FILE_BEID3:)"];
"1002671" [label="(Identifier,need_separator)"];
"1000214" [label="(Call,file_mdump(m))"];
"1002673" [label="(ControlStructure,if (rv != 1))"];
"1002670" [label="(Identifier,printed_something)"];
"1000295" [label="(JumpTarget,case FILE_LONG:)"];
"1000430" [label="(JumpTarget,case FILE_BYTE:)"];
"1001485" [label="(JumpTarget,case FILE_OPOR:)"];
"1002173" [label="(JumpTarget,case FILE_OPOR:)"];
"1000536" [label="(JumpTarget,case FILE_BESHORT:)"];
"1000250" [label="(JumpTarget,case FILE_SHORT:)"];
"1002615" [label="(Call,flip = !flip)"];
"1000457" [label="(JumpTarget,case FILE_OPOR:)"];
"1000237" [label="(Call,cvt_flip(m->in_type, flip))"];
"1000554" [label="(JumpTarget,case FILE_OPAND:)"];
"1000110" [label="(MethodParameterIn,int text)"];
"1001670" [label="(JumpTarget,case FILE_OPDIVIDE:)"];
"1000466" [label="(JumpTarget,case FILE_OPXOR:)"];
"1002617" [label="(Call,!flip)"];
"1000873" [label="(JumpTarget,case FILE_OPMULTIPLY:)"];
"1000374" [label="(JumpTarget,case FILE_MELONG:)"];
"1001788" [label="(JumpTarget,case FILE_MELONG:)"];
"1002622" [label="(Identifier,ms)"];
"1002661" [label="(Identifier,s)"];
"1000113" [label="(MethodParameterIn,int *printed_something)"];
"1000421" [label="(ControlStructure,switch (in_type = cvt_flip(m->in_type, flip)))"];
"1001311" [label="(JumpTarget,case FILE_OPDIVIDE:)"];
"1002705" [label="(Call,mconvert(ms, m, flip))"];
"1002712" [label="(Literal,1)"];
"1000493" [label="(JumpTarget,case FILE_OPMULTIPLY:)"];
"1001237" [label="(JumpTarget,case FILE_OPMINUS:)"];
"1001274" [label="(JumpTarget,case FILE_OPMULTIPLY:)"];
"1002146" [label="(JumpTarget,case FILE_LONG:)"];
"1000511" [label="(JumpTarget,case FILE_OPMODULO:)"];
"1001806" [label="(JumpTarget,case FILE_OPAND:)"];
"1001522" [label="(JumpTarget,case FILE_OPXOR:)"];
"1002713" [label="(MethodReturn,RET)"];
"1000107" [label="(MethodParameterIn,size_t o)"];
"1002164" [label="(JumpTarget,case FILE_OPAND:)"];
"1000425" [label="(Call,m->in_type)"];
"1000339" [label="(JumpTarget,case FILE_LELONG:)"];
"1002227" [label="(JumpTarget,case FILE_OPMODULO:)"];
"1000659" [label="(JumpTarget,case FILE_OPMULTIPLY:)"];
"1001036" [label="(JumpTarget,case FILE_OPDIVIDE:)"];
"1000964" [label="(JumpTarget,case FILE_SHORT:)"];
"1002394" [label="(Block,)"];
"1000617" [label="(JumpTarget,case FILE_OPADD:)"];
"1002621" [label="(Call,file_magicfind(ms, sbuf, &ml))"];
"1001596" [label="(JumpTarget,case FILE_OPMINUS:)"];
"1001917" [label="(JumpTarget,case FILE_OPADD:)"];
"1000701" [label="(JumpTarget,case FILE_OPMODULO:)"];
"1000243" [label="(JumpTarget,case FILE_BYTE:)"];
"1000338" [label="(JumpTarget,case FILE_LEID3:)"];
"1000852" [label="(JumpTarget,case FILE_OPMINUS:)"];
"1000109" [label="(MethodParameterIn,int mode)"];
"1000428" [label="(Identifier,flip)"];
"1002618" [label="(Identifier,flip)"];
"1001126" [label="(JumpTarget,case FILE_OPOR:)"];
"1000144" [label="(Call,recursion_level >= 20)"];
"1000680" [label="(JumpTarget,case FILE_OPDIVIDE:)"];
"1000894" [label="(JumpTarget,case FILE_OPDIVIDE:)"];
"1001429" [label="(JumpTarget,case FILE_LELONG:)"];
"1001843" [label="(JumpTarget,case FILE_OPOR:)"];
"1000157" [label="(Call,mcopy(ms, p, m->type, m->flag & INDIR, s, (uint32_t)(offset + o),\n\t    (uint32_t)nbytes, count))"];
"1001954" [label="(JumpTarget,case FILE_OPMINUS:)"];
"1002658" [label="(Call,ml.nmagic)"];
"1002682" [label="(Identifier,rv)"];
"1000115" [label="(MethodParameterIn,int *returnval)"];
"1001070" [label="(JumpTarget,case FILE_BELONG:)"];
"1002674" [label="(Call,rv != 1)"];
"1001448" [label="(JumpTarget,case FILE_OPAND:)"];
"1002349" [label="(Call,mcopy(ms, p, m->type, 0, s, offset, nbytes, count))"];
"1002200" [label="(JumpTarget,case FILE_OPMINUS:)"];
"1002651" [label="(Call,rv = match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,\n\t\t    mode, text, flip, recursion_level, printed_something,\n\t\t    need_separator, returnval))"];
"1000596" [label="(JumpTarget,case FILE_OPXOR:)"];
"1002675" [label="(Identifier,rv)"];
"1002676" [label="(Literal,1)"];
"1002252" [label="(JumpTarget,default:)"];
"1002666" [label="(Identifier,mode)"];
"1002182" [label="(JumpTarget,case FILE_OPXOR:)"];
"1002653" [label="(Call,match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,\n\t\t    mode, text, flip, recursion_level, printed_something,\n\t\t    need_separator, returnval))"];
"1002662" [label="(Identifier,nbytes)"];
"1002218" [label="(JumpTarget,case FILE_OPDIVIDE:)"];
"1000448" [label="(JumpTarget,case FILE_OPAND:)"];
"1000423" [label="(Identifier,in_type)"];
"1001430" [label="(JumpTarget,case FILE_LEID3:)"];
"1002388" [label="(Call,file_mdump(m))"];
"1000915" [label="(JumpTarget,case FILE_OPMODULO:)"];
"1001633" [label="(JumpTarget,case FILE_OPMULTIPLY:)"];
"1002679" [label="(Identifier,need_separator)"];
"1002706" [label="(Identifier,ms)"];
"1002655" [label="(Call,ml.magic)"];
"1001000" [label="(JumpTarget,case FILE_OPXOR:)"];
"1002612" [label="(Block,)"];
"1002672" [label="(Identifier,returnval)"];
"1000424" -> "1000422"  [label="AST: "];
"1000424" -> "1000428"  [label="CFG: "];
"1000425" -> "1000424"  [label="AST: "];
"1000428" -> "1000424"  [label="AST: "];
"1000422" -> "1000424"  [label="CFG: "];
"1000424" -> "1002713"  [label="DDG: flip"];
"1000424" -> "1002713"  [label="DDG: m->in_type"];
"1000424" -> "1000422"  [label="DDG: m->in_type"];
"1000424" -> "1000422"  [label="DDG: flip"];
"1000237" -> "1000424"  [label="DDG: m->in_type"];
"1000237" -> "1000424"  [label="DDG: flip"];
"1000111" -> "1000424"  [label="DDG: flip"];
"1000424" -> "1002617"  [label="DDG: flip"];
"1000424" -> "1002653"  [label="DDG: flip"];
"1000424" -> "1002705"  [label="DDG: flip"];
"1000237" -> "1000236"  [label="AST: "];
"1000237" -> "1000241"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000241" -> "1000237"  [label="AST: "];
"1000243" -> "1000237"  [label="CFG: "];
"1000250" -> "1000237"  [label="CFG: "];
"1000257" -> "1000237"  [label="CFG: "];
"1000276" -> "1000237"  [label="CFG: "];
"1000295" -> "1000237"  [label="CFG: "];
"1000302" -> "1000237"  [label="CFG: "];
"1000303" -> "1000237"  [label="CFG: "];
"1000338" -> "1000237"  [label="CFG: "];
"1000339" -> "1000237"  [label="CFG: "];
"1000374" -> "1000237"  [label="CFG: "];
"1000413" -> "1000237"  [label="CFG: "];
"1000111" -> "1000237"  [label="DDG: flip"];
"1000111" -> "1000102"  [label="AST: "];
"1000111" -> "1002713"  [label="DDG: flip"];
"1000111" -> "1002615"  [label="DDG: flip"];
"1000111" -> "1002617"  [label="DDG: flip"];
"1000111" -> "1002653"  [label="DDG: flip"];
"1000111" -> "1002705"  [label="DDG: flip"];
"1000422" -> "1000421"  [label="AST: "];
"1000423" -> "1000422"  [label="AST: "];
"1000430" -> "1000422"  [label="CFG: "];
"1000448" -> "1000422"  [label="CFG: "];
"1000457" -> "1000422"  [label="CFG: "];
"1000466" -> "1000422"  [label="CFG: "];
"1000475" -> "1000422"  [label="CFG: "];
"1000484" -> "1000422"  [label="CFG: "];
"1000493" -> "1000422"  [label="CFG: "];
"1000502" -> "1000422"  [label="CFG: "];
"1000511" -> "1000422"  [label="CFG: "];
"1000536" -> "1000422"  [label="CFG: "];
"1000554" -> "1000422"  [label="CFG: "];
"1000575" -> "1000422"  [label="CFG: "];
"1000596" -> "1000422"  [label="CFG: "];
"1000617" -> "1000422"  [label="CFG: "];
"1000638" -> "1000422"  [label="CFG: "];
"1000659" -> "1000422"  [label="CFG: "];
"1000680" -> "1000422"  [label="CFG: "];
"1000701" -> "1000422"  [label="CFG: "];
"1000750" -> "1000422"  [label="CFG: "];
"1000768" -> "1000422"  [label="CFG: "];
"1000789" -> "1000422"  [label="CFG: "];
"1000810" -> "1000422"  [label="CFG: "];
"1000831" -> "1000422"  [label="CFG: "];
"1000852" -> "1000422"  [label="CFG: "];
"1000873" -> "1000422"  [label="CFG: "];
"1000894" -> "1000422"  [label="CFG: "];
"1000915" -> "1000422"  [label="CFG: "];
"1000964" -> "1000422"  [label="CFG: "];
"1000982" -> "1000422"  [label="CFG: "];
"1000991" -> "1000422"  [label="CFG: "];
"1001000" -> "1000422"  [label="CFG: "];
"1001009" -> "1000422"  [label="CFG: "];
"1001018" -> "1000422"  [label="CFG: "];
"1001027" -> "1000422"  [label="CFG: "];
"1001036" -> "1000422"  [label="CFG: "];
"1001045" -> "1000422"  [label="CFG: "];
"1001070" -> "1000422"  [label="CFG: "];
"1001071" -> "1000422"  [label="CFG: "];
"1001089" -> "1000422"  [label="CFG: "];
"1001126" -> "1000422"  [label="CFG: "];
"1001163" -> "1000422"  [label="CFG: "];
"1001200" -> "1000422"  [label="CFG: "];
"1001237" -> "1000422"  [label="CFG: "];
"1001274" -> "1000422"  [label="CFG: "];
"1001311" -> "1000422"  [label="CFG: "];
"1001348" -> "1000422"  [label="CFG: "];
"1001429" -> "1000422"  [label="CFG: "];
"1001430" -> "1000422"  [label="CFG: "];
"1001448" -> "1000422"  [label="CFG: "];
"1001485" -> "1000422"  [label="CFG: "];
"1001522" -> "1000422"  [label="CFG: "];
"1001559" -> "1000422"  [label="CFG: "];
"1001596" -> "1000422"  [label="CFG: "];
"1001633" -> "1000422"  [label="CFG: "];
"1001670" -> "1000422"  [label="CFG: "];
"1001707" -> "1000422"  [label="CFG: "];
"1001788" -> "1000422"  [label="CFG: "];
"1001806" -> "1000422"  [label="CFG: "];
"1001843" -> "1000422"  [label="CFG: "];
"1001880" -> "1000422"  [label="CFG: "];
"1001917" -> "1000422"  [label="CFG: "];
"1001954" -> "1000422"  [label="CFG: "];
"1001991" -> "1000422"  [label="CFG: "];
"1002028" -> "1000422"  [label="CFG: "];
"1002065" -> "1000422"  [label="CFG: "];
"1002146" -> "1000422"  [label="CFG: "];
"1002164" -> "1000422"  [label="CFG: "];
"1002173" -> "1000422"  [label="CFG: "];
"1002182" -> "1000422"  [label="CFG: "];
"1002191" -> "1000422"  [label="CFG: "];
"1002200" -> "1000422"  [label="CFG: "];
"1002209" -> "1000422"  [label="CFG: "];
"1002218" -> "1000422"  [label="CFG: "];
"1002227" -> "1000422"  [label="CFG: "];
"1002252" -> "1000422"  [label="CFG: "];
"1000422" -> "1002713"  [label="DDG: in_type"];
"1000422" -> "1002713"  [label="DDG: cvt_flip(m->in_type, flip)"];
"1002617" -> "1002615"  [label="AST: "];
"1002617" -> "1002618"  [label="CFG: "];
"1002618" -> "1002617"  [label="AST: "];
"1002615" -> "1002617"  [label="CFG: "];
"1002617" -> "1002615"  [label="DDG: flip"];
"1002615" -> "1002612"  [label="AST: "];
"1002616" -> "1002615"  [label="AST: "];
"1002622" -> "1002615"  [label="CFG: "];
"1002615" -> "1002713"  [label="DDG: !flip"];
"1002615" -> "1002713"  [label="DDG: flip"];
"1002615" -> "1002653"  [label="DDG: flip"];
"1002653" -> "1002651"  [label="AST: "];
"1002653" -> "1002672"  [label="CFG: "];
"1002654" -> "1002653"  [label="AST: "];
"1002655" -> "1002653"  [label="AST: "];
"1002658" -> "1002653"  [label="AST: "];
"1002661" -> "1002653"  [label="AST: "];
"1002662" -> "1002653"  [label="AST: "];
"1002663" -> "1002653"  [label="AST: "];
"1002666" -> "1002653"  [label="AST: "];
"1002667" -> "1002653"  [label="AST: "];
"1002668" -> "1002653"  [label="AST: "];
"1002669" -> "1002653"  [label="AST: "];
"1002670" -> "1002653"  [label="AST: "];
"1002671" -> "1002653"  [label="AST: "];
"1002672" -> "1002653"  [label="AST: "];
"1002651" -> "1002653"  [label="CFG: "];
"1002653" -> "1002713"  [label="DDG: text"];
"1002653" -> "1002713"  [label="DDG: ml.nmagic"];
"1002653" -> "1002713"  [label="DDG: recursion_level"];
"1002653" -> "1002713"  [label="DDG: mode"];
"1002653" -> "1002713"  [label="DDG: flip"];
"1002653" -> "1002713"  [label="DDG: s"];
"1002653" -> "1002713"  [label="DDG: nbytes"];
"1002653" -> "1002713"  [label="DDG: returnval"];
"1002653" -> "1002713"  [label="DDG: ml.magic"];
"1002653" -> "1002713"  [label="DDG: need_separator"];
"1002653" -> "1002713"  [label="DDG: offset + o"];
"1002653" -> "1002713"  [label="DDG: printed_something"];
"1002653" -> "1002713"  [label="DDG: ms"];
"1002653" -> "1002651"  [label="DDG: ml.nmagic"];
"1002653" -> "1002651"  [label="DDG: ms"];
"1002653" -> "1002651"  [label="DDG: recursion_level"];
"1002653" -> "1002651"  [label="DDG: ml.magic"];
"1002653" -> "1002651"  [label="DDG: s"];
"1002653" -> "1002651"  [label="DDG: offset + o"];
"1002653" -> "1002651"  [label="DDG: flip"];
"1002653" -> "1002651"  [label="DDG: need_separator"];
"1002653" -> "1002651"  [label="DDG: returnval"];
"1002653" -> "1002651"  [label="DDG: nbytes"];
"1002653" -> "1002651"  [label="DDG: text"];
"1002653" -> "1002651"  [label="DDG: mode"];
"1002653" -> "1002651"  [label="DDG: printed_something"];
"1002621" -> "1002653"  [label="DDG: ms"];
"1000103" -> "1002653"  [label="DDG: ms"];
"1000157" -> "1002653"  [label="DDG: s"];
"1002349" -> "1002653"  [label="DDG: s"];
"1000104" -> "1002653"  [label="DDG: s"];
"1002594" -> "1002653"  [label="DDG: nbytes"];
"1002594" -> "1002653"  [label="DDG: offset"];
"1000106" -> "1002653"  [label="DDG: nbytes"];
"1000192" -> "1002653"  [label="DDG: o"];
"1000107" -> "1002653"  [label="DDG: o"];
"1000109" -> "1002653"  [label="DDG: mode"];
"1000110" -> "1002653"  [label="DDG: text"];
"1000144" -> "1002653"  [label="DDG: recursion_level"];
"1000112" -> "1002653"  [label="DDG: recursion_level"];
"1000113" -> "1002653"  [label="DDG: printed_something"];
"1000114" -> "1002653"  [label="DDG: need_separator"];
"1000115" -> "1002653"  [label="DDG: returnval"];
"1002651" -> "1002394"  [label="AST: "];
"1002652" -> "1002651"  [label="AST: "];
"1002675" -> "1002651"  [label="CFG: "];
"1002651" -> "1002713"  [label="DDG: match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,\n\t\t    mode, text, flip, recursion_level, printed_something,\n\t\t    need_separator, returnval)"];
"1002651" -> "1002674"  [label="DDG: rv"];
"1002674" -> "1002673"  [label="AST: "];
"1002674" -> "1002676"  [label="CFG: "];
"1002675" -> "1002674"  [label="AST: "];
"1002676" -> "1002674"  [label="AST: "];
"1002679" -> "1002674"  [label="CFG: "];
"1002682" -> "1002674"  [label="CFG: "];
"1002674" -> "1002713"  [label="DDG: rv != 1"];
"1002674" -> "1002713"  [label="DDG: rv"];
"1002674" -> "1002681"  [label="DDG: rv"];
"1002681" -> "1002394"  [label="AST: "];
"1002681" -> "1002682"  [label="CFG: "];
"1002682" -> "1002681"  [label="AST: "];
"1002713" -> "1002681"  [label="CFG: "];
"1002681" -> "1002713"  [label="DDG: <RET>"];
"1002682" -> "1002681"  [label="DDG: rv"];
"1002705" -> "1002704"  [label="AST: "];
"1002705" -> "1002708"  [label="CFG: "];
"1002706" -> "1002705"  [label="AST: "];
"1002707" -> "1002705"  [label="AST: "];
"1002708" -> "1002705"  [label="AST: "];
"1002704" -> "1002705"  [label="CFG: "];
"1002705" -> "1002713"  [label="DDG: ms"];
"1002705" -> "1002713"  [label="DDG: m"];
"1002705" -> "1002713"  [label="DDG: flip"];
"1002705" -> "1002704"  [label="DDG: ms"];
"1002705" -> "1002704"  [label="DDG: m"];
"1002705" -> "1002704"  [label="DDG: flip"];
"1002349" -> "1002705"  [label="DDG: ms"];
"1000157" -> "1002705"  [label="DDG: ms"];
"1000103" -> "1002705"  [label="DDG: ms"];
"1002388" -> "1002705"  [label="DDG: m"];
"1000214" -> "1002705"  [label="DDG: m"];
"1000105" -> "1002705"  [label="DDG: m"];
"1002704" -> "1002703"  [label="AST: "];
"1002710" -> "1002704"  [label="CFG: "];
"1002712" -> "1002704"  [label="CFG: "];
"1002704" -> "1002713"  [label="DDG: !mconvert(ms, m, flip)"];
"1002704" -> "1002713"  [label="DDG: mconvert(ms, m, flip)"];
}
