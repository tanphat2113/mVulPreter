digraph "0_file_447558595a3650db2886cd2f416ad0beba965801@pointer" {
"1000148" [label="(Call,file_error(ms, 0, \"recursion nesting exceeded\"))"];
"1000103" [label="(MethodParameterIn,struct magic_set *ms)"];
"1002713" [label="(MethodReturn,RET)"];
"1000157" [label="(Call,mcopy(ms, p, m->type, m->flag & INDIR, s, (uint32_t)(offset + o),\n\t    (uint32_t)nbytes, count))"];
"1000148" [label="(Call,file_error(ms, 0, \"recursion nesting exceeded\"))"];
"1000154" [label="(Literal,1)"];
"1002349" [label="(Call,mcopy(ms, p, m->type, 0, s, offset, nbytes, count))"];
"1002505" [label="(Call,file_softmagic(ms, s + offset, nbytes - offset,\n\t\t    BINTEST, text))"];
"1000149" [label="(Identifier,ms)"];
"1000150" [label="(Literal,0)"];
"1002653" [label="(Call,match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,\n\t\t    mode, text, flip, recursion_level, printed_something,\n\t\t    need_separator, returnval))"];
"1000151" [label="(Literal,\"recursion nesting exceeded\")"];
"1002579" [label="(Call,file_printf(ms, \"%s\", rbuf))"];
"1002686" [label="(Call,file_printf(ms, \"%s\", m->desc))"];
"1002705" [label="(Call,mconvert(ms, m, flip))"];
"1002621" [label="(Call,file_magicfind(ms, sbuf, &ml))"];
"1000147" [label="(Block,)"];
"1000103" [label="(MethodParameterIn,struct magic_set *ms)"];
"1002629" [label="(Call,file_error(ms, 0, \"cannot find entry `%s'\", sbuf))"];
"1002564" [label="(Call,file_printf(ms, F(m->desc, \"%u\"), offset))"];
"1000148" -> "1000147"  [label="AST: "];
"1000148" -> "1000151"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000150" -> "1000148"  [label="AST: "];
"1000151" -> "1000148"  [label="AST: "];
"1000154" -> "1000148"  [label="CFG: "];
"1000148" -> "1002713"  [label="DDG: "];
"1000148" -> "1002713"  [label="DDG: "];
"1000103" -> "1000148"  [label="DDG: "];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1002713"  [label="DDG: "];
"1000103" -> "1000157"  [label="DDG: "];
"1000103" -> "1002349"  [label="DDG: "];
"1000103" -> "1002505"  [label="DDG: "];
"1000103" -> "1002564"  [label="DDG: "];
"1000103" -> "1002579"  [label="DDG: "];
"1000103" -> "1002621"  [label="DDG: "];
"1000103" -> "1002629"  [label="DDG: "];
"1000103" -> "1002653"  [label="DDG: "];
"1000103" -> "1002686"  [label="DDG: "];
"1000103" -> "1002705"  [label="DDG: "];
}
