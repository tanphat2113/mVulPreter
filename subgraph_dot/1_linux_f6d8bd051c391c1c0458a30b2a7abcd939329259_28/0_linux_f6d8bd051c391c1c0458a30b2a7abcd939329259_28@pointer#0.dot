digraph "0_linux_f6d8bd051c391c1c0458a30b2a7abcd939329259_28@pointer" {
"1000211" [label="(Call,inet_rsk(req))"];
"1000206" [label="(Call,!req)"];
"1000200" [label="(Call,req = inet_reqsk_alloc(&tcp_request_sock_ops))"];
"1000202" [label="(Call,inet_reqsk_alloc(&tcp_request_sock_ops))"];
"1000209" [label="(Call,ireq = inet_rsk(req))"];
"1000215" [label="(Call,tcp_rsk(req))"];
"1000213" [label="(Call,treq = tcp_rsk(req))"];
"1000358" [label="(Call,security_inet_conn_request(sk, skb, req))"];
"1000363" [label="(Call,reqsk_free(req))"];
"1000385" [label="(Call,RT_CONN_FLAGS(sk))"];
"1000378" [label="(Call,flowi4_init_output(&fl4, 0, sk->sk_mark, RT_CONN_FLAGS(sk),\n\t\t\t\t   RT_SCOPE_UNIVERSE, IPPROTO_TCP,\n\t\t\t\t   inet_sk_flowi_flags(sk),\n\t\t\t\t   (opt && opt->srr) ? opt->faddr : ireq->rmt_addr,\n\t\t\t\t   ireq->loc_addr, th->source, th->dest))"];
"1000414" [label="(Call,flowi4_to_flowi(&fl4))"];
"1000412" [label="(Call,security_req_classify_flow(req, flowi4_to_flowi(&fl4)))"];
"1000428" [label="(Call,reqsk_free(req))"];
"1000469" [label="(Call,get_cookie_sock(sk, skb, req, &rt->dst))"];
"1000467" [label="(Call,ret = get_cookie_sock(sk, skb, req, &rt->dst))"];
"1000478" [label="(Return,return ret;)"];
"1000419" [label="(Call,ip_route_output_key(sock_net(sk), &fl4))"];
"1000417" [label="(Call,rt = ip_route_output_key(sock_net(sk), &fl4))"];
"1000425" [label="(Call,IS_ERR(rt))"];
"1000389" [label="(Call,inet_sk_flowi_flags(sk))"];
"1000420" [label="(Call,sock_net(sk))"];
"1000438" [label="(Call,tcp_full_space(sk))"];
"1000437" [label="(Call,tcp_select_initial_window(tcp_full_space(sk), req->mss,\n\t\t\t\t  &req->rcv_wnd, &req->window_clamp,\n\t\t\t\t  ireq->wscale_ok, &rcv_wscale,\n\t\t\t\t  dst_metric(&rt->dst, RTAX_INITRWND)))"];
"1000441" [label="(Identifier,req)"];
"1000219" [label="(Identifier,treq)"];
"1000389" [label="(Call,inet_sk_flowi_flags(sk))"];
"1000264" [label="(Call,ip_hdr(skb))"];
"1000211" [label="(Call,inet_rsk(req))"];
"1000251" [label="(Call,ireq->loc_addr\t\t= ip_hdr(skb)->daddr)"];
"1000454" [label="(Call,&rcv_wscale)"];
"1000202" [label="(Call,inet_reqsk_alloc(&tcp_request_sock_ops))"];
"1000216" [label="(Identifier,req)"];
"1000208" [label="(ControlStructure,goto out;)"];
"1000422" [label="(Call,&fl4)"];
"1000418" [label="(Identifier,rt)"];
"1000358" [label="(Call,security_inet_conn_request(sk, skb, req))"];
"1000201" [label="(Identifier,req)"];
"1000210" [label="(Identifier,ireq)"];
"1000427" [label="(Block,)"];
"1000134" [label="(Call,*ret = sk)"];
"1000390" [label="(Identifier,sk)"];
"1000469" [label="(Call,get_cookie_sock(sk, skb, req, &rt->dst))"];
"1000378" [label="(Call,flowi4_init_output(&fl4, 0, sk->sk_mark, RT_CONN_FLAGS(sk),\n\t\t\t\t   RT_SCOPE_UNIVERSE, IPPROTO_TCP,\n\t\t\t\t   inet_sk_flowi_flags(sk),\n\t\t\t\t   (opt && opt->srr) ? opt->faddr : ireq->rmt_addr,\n\t\t\t\t   ireq->loc_addr, th->source, th->dest))"];
"1000209" [label="(Call,ireq = inet_rsk(req))"];
"1000107" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000361" [label="(Identifier,req)"];
"1000342" [label="(Call,ip_options_echo(ireq->opt, skb))"];
"1000357" [label="(ControlStructure,if (security_inet_conn_request(sk, skb, req)))"];
"1000388" [label="(Identifier,IPPROTO_TCP)"];
"1000381" [label="(Literal,0)"];
"1000387" [label="(Identifier,RT_SCOPE_UNIVERSE)"];
"1000477" [label="(JumpTarget,out:)"];
"1000368" [label="(Identifier,req)"];
"1000212" [label="(Identifier,req)"];
"1000451" [label="(Call,ireq->wscale_ok)"];
"1000467" [label="(Call,ret = get_cookie_sock(sk, skb, req, &rt->dst))"];
"1000480" [label="(MethodReturn,struct sock *)"];
"1000173" [label="(Call,sock_net(sk))"];
"1000206" [label="(Call,!req)"];
"1000471" [label="(Identifier,skb)"];
"1000382" [label="(Call,sk->sk_mark)"];
"1000376" [label="(Block,)"];
"1000472" [label="(Identifier,req)"];
"1000428" [label="(Call,reqsk_free(req))"];
"1000109" [label="(Block,)"];
"1000259" [label="(Call,ireq->rmt_addr\t\t= ip_hdr(skb)->saddr)"];
"1000205" [label="(ControlStructure,if (!req))"];
"1000197" [label="(Call,ret = NULL)"];
"1000439" [label="(Identifier,sk)"];
"1000214" [label="(Identifier,treq)"];
"1000464" [label="(Identifier,ireq)"];
"1000385" [label="(Call,RT_CONN_FLAGS(sk))"];
"1000232" [label="(Call,req->mss\t\t= mss)"];
"1000440" [label="(Call,req->mss)"];
"1000426" [label="(Identifier,rt)"];
"1000473" [label="(Call,&rt->dst)"];
"1000468" [label="(Identifier,ret)"];
"1000286" [label="(Call,ireq->wscale_ok\t\t= tcp_opt.wscale_ok)"];
"1000412" [label="(Call,security_req_classify_flow(req, flowi4_to_flowi(&fl4)))"];
"1000423" [label="(Identifier,fl4)"];
"1000419" [label="(Call,ip_route_output_key(sock_net(sk), &fl4))"];
"1000379" [label="(Call,&fl4)"];
"1000363" [label="(Call,reqsk_free(req))"];
"1000420" [label="(Call,sock_net(sk))"];
"1000434" [label="(Identifier,rt)"];
"1000414" [label="(Call,flowi4_to_flowi(&fl4))"];
"1000215" [label="(Call,tcp_rsk(req))"];
"1000470" [label="(Identifier,sk)"];
"1000456" [label="(Call,dst_metric(&rt->dst, RTAX_INITRWND))"];
"1000430" [label="(ControlStructure,goto out;)"];
"1000417" [label="(Call,rt = ip_route_output_key(sock_net(sk), &fl4))"];
"1000425" [label="(Call,IS_ERR(rt))"];
"1000393" [label="(Identifier,opt)"];
"1000360" [label="(Identifier,skb)"];
"1000409" [label="(Call,th->dest)"];
"1000362" [label="(Block,)"];
"1000424" [label="(ControlStructure,if (IS_ERR(rt)))"];
"1000403" [label="(Call,ireq->loc_addr)"];
"1000443" [label="(Call,&req->rcv_wnd)"];
"1000406" [label="(Call,th->source)"];
"1000386" [label="(Identifier,sk)"];
"1000213" [label="(Call,treq = tcp_rsk(req))"];
"1000359" [label="(Identifier,sk)"];
"1000200" [label="(Call,req = inet_reqsk_alloc(&tcp_request_sock_ops))"];
"1000438" [label="(Call,tcp_full_space(sk))"];
"1000478" [label="(Return,return ret;)"];
"1000207" [label="(Identifier,req)"];
"1000447" [label="(Call,&req->window_clamp)"];
"1000106" [label="(MethodParameterIn,struct sock *sk)"];
"1000479" [label="(Identifier,ret)"];
"1000203" [label="(Call,&tcp_request_sock_ops)"];
"1000437" [label="(Call,tcp_select_initial_window(tcp_full_space(sk), req->mss,\n\t\t\t\t  &req->rcv_wnd, &req->window_clamp,\n\t\t\t\t  ireq->wscale_ok, &rcv_wscale,\n\t\t\t\t  dst_metric(&rt->dst, RTAX_INITRWND)))"];
"1000364" [label="(Identifier,req)"];
"1000413" [label="(Identifier,req)"];
"1000429" [label="(Identifier,req)"];
"1000391" [label="(Call,(opt && opt->srr) ? opt->faddr : ireq->rmt_addr)"];
"1000415" [label="(Call,&fl4)"];
"1000421" [label="(Identifier,sk)"];
"1000365" [label="(ControlStructure,goto out;)"];
"1000211" -> "1000209"  [label="AST: "];
"1000211" -> "1000212"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000209" -> "1000211"  [label="CFG: "];
"1000211" -> "1000209"  [label="DDG: req"];
"1000206" -> "1000211"  [label="DDG: req"];
"1000211" -> "1000215"  [label="DDG: req"];
"1000206" -> "1000205"  [label="AST: "];
"1000206" -> "1000207"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000206"  [label="CFG: "];
"1000210" -> "1000206"  [label="CFG: "];
"1000206" -> "1000480"  [label="DDG: !req"];
"1000206" -> "1000480"  [label="DDG: req"];
"1000200" -> "1000206"  [label="DDG: req"];
"1000200" -> "1000109"  [label="AST: "];
"1000200" -> "1000202"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000202" -> "1000200"  [label="AST: "];
"1000207" -> "1000200"  [label="CFG: "];
"1000200" -> "1000480"  [label="DDG: inet_reqsk_alloc(&tcp_request_sock_ops)"];
"1000202" -> "1000200"  [label="DDG: &tcp_request_sock_ops"];
"1000202" -> "1000203"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000202" -> "1000480"  [label="DDG: &tcp_request_sock_ops"];
"1000209" -> "1000109"  [label="AST: "];
"1000210" -> "1000209"  [label="AST: "];
"1000214" -> "1000209"  [label="CFG: "];
"1000209" -> "1000480"  [label="DDG: ireq"];
"1000209" -> "1000480"  [label="DDG: inet_rsk(req)"];
"1000215" -> "1000213"  [label="AST: "];
"1000215" -> "1000216"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000213" -> "1000215"  [label="CFG: "];
"1000215" -> "1000213"  [label="DDG: req"];
"1000215" -> "1000358"  [label="DDG: req"];
"1000213" -> "1000109"  [label="AST: "];
"1000214" -> "1000213"  [label="AST: "];
"1000219" -> "1000213"  [label="CFG: "];
"1000213" -> "1000480"  [label="DDG: treq"];
"1000213" -> "1000480"  [label="DDG: tcp_rsk(req)"];
"1000358" -> "1000357"  [label="AST: "];
"1000358" -> "1000361"  [label="CFG: "];
"1000359" -> "1000358"  [label="AST: "];
"1000360" -> "1000358"  [label="AST: "];
"1000361" -> "1000358"  [label="AST: "];
"1000364" -> "1000358"  [label="CFG: "];
"1000368" -> "1000358"  [label="CFG: "];
"1000358" -> "1000480"  [label="DDG: security_inet_conn_request(sk, skb, req)"];
"1000358" -> "1000480"  [label="DDG: skb"];
"1000358" -> "1000480"  [label="DDG: sk"];
"1000173" -> "1000358"  [label="DDG: sk"];
"1000106" -> "1000358"  [label="DDG: sk"];
"1000264" -> "1000358"  [label="DDG: skb"];
"1000342" -> "1000358"  [label="DDG: skb"];
"1000107" -> "1000358"  [label="DDG: skb"];
"1000358" -> "1000363"  [label="DDG: req"];
"1000358" -> "1000385"  [label="DDG: sk"];
"1000358" -> "1000412"  [label="DDG: req"];
"1000358" -> "1000469"  [label="DDG: skb"];
"1000363" -> "1000362"  [label="AST: "];
"1000363" -> "1000364"  [label="CFG: "];
"1000364" -> "1000363"  [label="AST: "];
"1000365" -> "1000363"  [label="CFG: "];
"1000363" -> "1000480"  [label="DDG: req"];
"1000363" -> "1000480"  [label="DDG: reqsk_free(req)"];
"1000385" -> "1000378"  [label="AST: "];
"1000385" -> "1000386"  [label="CFG: "];
"1000386" -> "1000385"  [label="AST: "];
"1000387" -> "1000385"  [label="CFG: "];
"1000385" -> "1000378"  [label="DDG: sk"];
"1000106" -> "1000385"  [label="DDG: sk"];
"1000385" -> "1000389"  [label="DDG: sk"];
"1000378" -> "1000376"  [label="AST: "];
"1000378" -> "1000409"  [label="CFG: "];
"1000379" -> "1000378"  [label="AST: "];
"1000381" -> "1000378"  [label="AST: "];
"1000382" -> "1000378"  [label="AST: "];
"1000387" -> "1000378"  [label="AST: "];
"1000388" -> "1000378"  [label="AST: "];
"1000389" -> "1000378"  [label="AST: "];
"1000391" -> "1000378"  [label="AST: "];
"1000403" -> "1000378"  [label="AST: "];
"1000406" -> "1000378"  [label="AST: "];
"1000409" -> "1000378"  [label="AST: "];
"1000413" -> "1000378"  [label="CFG: "];
"1000378" -> "1000480"  [label="DDG: inet_sk_flowi_flags(sk)"];
"1000378" -> "1000480"  [label="DDG: th->dest"];
"1000378" -> "1000480"  [label="DDG: IPPROTO_TCP"];
"1000378" -> "1000480"  [label="DDG: ireq->loc_addr"];
"1000378" -> "1000480"  [label="DDG: RT_SCOPE_UNIVERSE"];
"1000378" -> "1000480"  [label="DDG: flowi4_init_output(&fl4, 0, sk->sk_mark, RT_CONN_FLAGS(sk),\n\t\t\t\t   RT_SCOPE_UNIVERSE, IPPROTO_TCP,\n\t\t\t\t   inet_sk_flowi_flags(sk),\n\t\t\t\t   (opt && opt->srr) ? opt->faddr : ireq->rmt_addr,\n\t\t\t\t   ireq->loc_addr, th->source, th->dest)"];
"1000378" -> "1000480"  [label="DDG: sk->sk_mark"];
"1000378" -> "1000480"  [label="DDG: th->source"];
"1000378" -> "1000480"  [label="DDG: (opt && opt->srr) ? opt->faddr : ireq->rmt_addr"];
"1000378" -> "1000480"  [label="DDG: RT_CONN_FLAGS(sk)"];
"1000389" -> "1000378"  [label="DDG: sk"];
"1000259" -> "1000378"  [label="DDG: ireq->rmt_addr"];
"1000251" -> "1000378"  [label="DDG: ireq->loc_addr"];
"1000378" -> "1000414"  [label="DDG: &fl4"];
"1000414" -> "1000412"  [label="AST: "];
"1000414" -> "1000415"  [label="CFG: "];
"1000415" -> "1000414"  [label="AST: "];
"1000412" -> "1000414"  [label="CFG: "];
"1000414" -> "1000412"  [label="DDG: &fl4"];
"1000414" -> "1000419"  [label="DDG: &fl4"];
"1000412" -> "1000376"  [label="AST: "];
"1000413" -> "1000412"  [label="AST: "];
"1000418" -> "1000412"  [label="CFG: "];
"1000412" -> "1000480"  [label="DDG: security_req_classify_flow(req, flowi4_to_flowi(&fl4))"];
"1000412" -> "1000480"  [label="DDG: flowi4_to_flowi(&fl4)"];
"1000412" -> "1000428"  [label="DDG: req"];
"1000412" -> "1000469"  [label="DDG: req"];
"1000428" -> "1000427"  [label="AST: "];
"1000428" -> "1000429"  [label="CFG: "];
"1000429" -> "1000428"  [label="AST: "];
"1000430" -> "1000428"  [label="CFG: "];
"1000428" -> "1000480"  [label="DDG: reqsk_free(req)"];
"1000428" -> "1000480"  [label="DDG: req"];
"1000469" -> "1000467"  [label="AST: "];
"1000469" -> "1000473"  [label="CFG: "];
"1000470" -> "1000469"  [label="AST: "];
"1000471" -> "1000469"  [label="AST: "];
"1000472" -> "1000469"  [label="AST: "];
"1000473" -> "1000469"  [label="AST: "];
"1000467" -> "1000469"  [label="CFG: "];
"1000469" -> "1000480"  [label="DDG: req"];
"1000469" -> "1000480"  [label="DDG: &rt->dst"];
"1000469" -> "1000480"  [label="DDG: skb"];
"1000469" -> "1000480"  [label="DDG: sk"];
"1000469" -> "1000467"  [label="DDG: sk"];
"1000469" -> "1000467"  [label="DDG: skb"];
"1000469" -> "1000467"  [label="DDG: req"];
"1000469" -> "1000467"  [label="DDG: &rt->dst"];
"1000438" -> "1000469"  [label="DDG: sk"];
"1000106" -> "1000469"  [label="DDG: sk"];
"1000107" -> "1000469"  [label="DDG: skb"];
"1000456" -> "1000469"  [label="DDG: &rt->dst"];
"1000467" -> "1000109"  [label="AST: "];
"1000468" -> "1000467"  [label="AST: "];
"1000477" -> "1000467"  [label="CFG: "];
"1000467" -> "1000480"  [label="DDG: ret"];
"1000467" -> "1000480"  [label="DDG: get_cookie_sock(sk, skb, req, &rt->dst)"];
"1000467" -> "1000478"  [label="DDG: ret"];
"1000478" -> "1000109"  [label="AST: "];
"1000478" -> "1000479"  [label="CFG: "];
"1000479" -> "1000478"  [label="AST: "];
"1000480" -> "1000478"  [label="CFG: "];
"1000478" -> "1000480"  [label="DDG: <RET>"];
"1000479" -> "1000478"  [label="DDG: ret"];
"1000134" -> "1000478"  [label="DDG: ret"];
"1000197" -> "1000478"  [label="DDG: ret"];
"1000419" -> "1000417"  [label="AST: "];
"1000419" -> "1000422"  [label="CFG: "];
"1000420" -> "1000419"  [label="AST: "];
"1000422" -> "1000419"  [label="AST: "];
"1000417" -> "1000419"  [label="CFG: "];
"1000419" -> "1000480"  [label="DDG: sock_net(sk)"];
"1000419" -> "1000480"  [label="DDG: &fl4"];
"1000419" -> "1000417"  [label="DDG: sock_net(sk)"];
"1000419" -> "1000417"  [label="DDG: &fl4"];
"1000420" -> "1000419"  [label="DDG: sk"];
"1000417" -> "1000376"  [label="AST: "];
"1000418" -> "1000417"  [label="AST: "];
"1000426" -> "1000417"  [label="CFG: "];
"1000417" -> "1000480"  [label="DDG: ip_route_output_key(sock_net(sk), &fl4)"];
"1000417" -> "1000425"  [label="DDG: rt"];
"1000425" -> "1000424"  [label="AST: "];
"1000425" -> "1000426"  [label="CFG: "];
"1000426" -> "1000425"  [label="AST: "];
"1000429" -> "1000425"  [label="CFG: "];
"1000434" -> "1000425"  [label="CFG: "];
"1000425" -> "1000480"  [label="DDG: rt"];
"1000425" -> "1000480"  [label="DDG: IS_ERR(rt)"];
"1000389" -> "1000390"  [label="CFG: "];
"1000390" -> "1000389"  [label="AST: "];
"1000393" -> "1000389"  [label="CFG: "];
"1000106" -> "1000389"  [label="DDG: sk"];
"1000389" -> "1000420"  [label="DDG: sk"];
"1000420" -> "1000421"  [label="CFG: "];
"1000421" -> "1000420"  [label="AST: "];
"1000423" -> "1000420"  [label="CFG: "];
"1000420" -> "1000480"  [label="DDG: sk"];
"1000106" -> "1000420"  [label="DDG: sk"];
"1000420" -> "1000438"  [label="DDG: sk"];
"1000438" -> "1000437"  [label="AST: "];
"1000438" -> "1000439"  [label="CFG: "];
"1000439" -> "1000438"  [label="AST: "];
"1000441" -> "1000438"  [label="CFG: "];
"1000438" -> "1000437"  [label="DDG: sk"];
"1000106" -> "1000438"  [label="DDG: sk"];
"1000437" -> "1000109"  [label="AST: "];
"1000437" -> "1000456"  [label="CFG: "];
"1000440" -> "1000437"  [label="AST: "];
"1000443" -> "1000437"  [label="AST: "];
"1000447" -> "1000437"  [label="AST: "];
"1000451" -> "1000437"  [label="AST: "];
"1000454" -> "1000437"  [label="AST: "];
"1000456" -> "1000437"  [label="AST: "];
"1000464" -> "1000437"  [label="CFG: "];
"1000437" -> "1000480"  [label="DDG: tcp_select_initial_window(tcp_full_space(sk), req->mss,\n\t\t\t\t  &req->rcv_wnd, &req->window_clamp,\n\t\t\t\t  ireq->wscale_ok, &rcv_wscale,\n\t\t\t\t  dst_metric(&rt->dst, RTAX_INITRWND))"];
"1000437" -> "1000480"  [label="DDG: &req->rcv_wnd"];
"1000437" -> "1000480"  [label="DDG: req->mss"];
"1000437" -> "1000480"  [label="DDG: tcp_full_space(sk)"];
"1000437" -> "1000480"  [label="DDG: &req->window_clamp"];
"1000437" -> "1000480"  [label="DDG: ireq->wscale_ok"];
"1000437" -> "1000480"  [label="DDG: &rcv_wscale"];
"1000437" -> "1000480"  [label="DDG: dst_metric(&rt->dst, RTAX_INITRWND)"];
"1000232" -> "1000437"  [label="DDG: req->mss"];
"1000286" -> "1000437"  [label="DDG: ireq->wscale_ok"];
"1000456" -> "1000437"  [label="DDG: &rt->dst"];
"1000456" -> "1000437"  [label="DDG: RTAX_INITRWND"];
}
