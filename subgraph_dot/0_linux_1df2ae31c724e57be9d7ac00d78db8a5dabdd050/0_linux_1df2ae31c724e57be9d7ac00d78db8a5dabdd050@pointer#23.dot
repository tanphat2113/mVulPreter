digraph "0_linux_1df2ae31c724e57be9d7ac00d78db8a5dabdd050@pointer" {
"1000355" [label="(Call,(struct sparablePartitionMap *)gpm)"];
"1000282" [label="(Call,(struct udfPartitionMap2 *)gpm)"];
"1000221" [label="(Call,gpm = (struct genericPartitionMap *)\n\t\t\t\t&(lvd->partitionMaps[offset]))"];
"1000223" [label="(Call,(struct genericPartitionMap *)\n\t\t\t\t&(lvd->partitionMaps[offset]))"];
"1000385" [label="(Call,(struct metadataPartitionMap *)\n\t\t\t\t\t\t&(lvd->partitionMaps[offset]))"];
"1000352" [label="(Call,udf_load_sparable_map(sb, map,\n\t\t\t\t    (struct sparablePartitionMap *)gpm))"];
"1000351" [label="(Call,udf_load_sparable_map(sb, map,\n\t\t\t\t    (struct sparablePartitionMap *)gpm) < 0)"];
"1000579" [label="(Call,udf_load_logicalvolint(sb, leea_to_cpu(lvd->integritySeqExt)))"];
"1000282" [label="(Call,(struct udfPartitionMap2 *)gpm)"];
"1000101" [label="(MethodParameterIn,struct super_block *sb)"];
"1000579" [label="(Call,udf_load_logicalvolint(sb, leea_to_cpu(lvd->integritySeqExt)))"];
"1000573" [label="(ControlStructure,if (lvd->integritySeqExt.extLength))"];
"1000581" [label="(Call,leea_to_cpu(lvd->integritySeqExt))"];
"1000280" [label="(Call,*upm2 =\n\t\t\t\t\t\t(struct udfPartitionMap2 *)gpm)"];
"1000351" [label="(Call,udf_load_sparable_map(sb, map,\n\t\t\t\t    (struct sparablePartitionMap *)gpm) < 0)"];
"1000387" [label="(Call,&(lvd->partitionMaps[offset]))"];
"1000211" [label="(Block,)"];
"1000520" [label="(Identifier,map)"];
"1000225" [label="(Call,&(lvd->partitionMaps[offset]))"];
"1000354" [label="(Identifier,map)"];
"1000357" [label="(Identifier,gpm)"];
"1000353" [label="(Identifier,sb)"];
"1000355" [label="(Call,(struct sparablePartitionMap *)gpm)"];
"1000284" [label="(Identifier,gpm)"];
"1000590" [label="(MethodReturn,static int)"];
"1000213" [label="(Call,*map = &sbi->s_partmaps[i])"];
"1000383" [label="(Call,*mdm =\n\t\t\t\t\t\t(struct metadataPartitionMap *)\n\t\t\t\t\t\t&(lvd->partitionMaps[offset]))"];
"1000244" [label="(Call,(struct genericPartitionMap1 *)gpm)"];
"1000358" [label="(Literal,0)"];
"1000177" [label="(Call,udf_sb_alloc_partition_maps(sb, le32_to_cpu(lvd->numPartitionMaps)))"];
"1000352" [label="(Call,udf_load_sparable_map(sb, map,\n\t\t\t\t    (struct sparablePartitionMap *)gpm))"];
"1000232" [label="(Identifier,type)"];
"1000222" [label="(Identifier,gpm)"];
"1000221" [label="(Call,gpm = (struct genericPartitionMap *)\n\t\t\t\t&(lvd->partitionMaps[offset]))"];
"1000359" [label="(ControlStructure,goto out_bh;)"];
"1000385" [label="(Call,(struct metadataPartitionMap *)\n\t\t\t\t\t\t&(lvd->partitionMaps[offset]))"];
"1000350" [label="(ControlStructure,if (udf_load_sparable_map(sb, map,\n\t\t\t\t    (struct sparablePartitionMap *)gpm) < 0))"];
"1000585" [label="(JumpTarget,out_bh:)"];
"1000580" [label="(Identifier,sb)"];
"1000223" [label="(Call,(struct genericPartitionMap *)\n\t\t\t\t&(lvd->partitionMaps[offset]))"];
"1000355" -> "1000352"  [label="AST: "];
"1000355" -> "1000357"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000357" -> "1000355"  [label="AST: "];
"1000352" -> "1000355"  [label="CFG: "];
"1000355" -> "1000590"  [label="DDG: gpm"];
"1000355" -> "1000352"  [label="DDG: gpm"];
"1000282" -> "1000355"  [label="DDG: gpm"];
"1000282" -> "1000280"  [label="AST: "];
"1000282" -> "1000284"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000284" -> "1000282"  [label="AST: "];
"1000280" -> "1000282"  [label="CFG: "];
"1000282" -> "1000590"  [label="DDG: gpm"];
"1000282" -> "1000280"  [label="DDG: gpm"];
"1000221" -> "1000282"  [label="DDG: gpm"];
"1000221" -> "1000211"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000232" -> "1000221"  [label="CFG: "];
"1000221" -> "1000590"  [label="DDG: (struct genericPartitionMap *)\n\t\t\t\t&(lvd->partitionMaps[offset])"];
"1000221" -> "1000590"  [label="DDG: gpm"];
"1000223" -> "1000221"  [label="DDG: &(lvd->partitionMaps[offset])"];
"1000221" -> "1000244"  [label="DDG: gpm"];
"1000223" -> "1000225"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000225" -> "1000223"  [label="AST: "];
"1000223" -> "1000590"  [label="DDG: &(lvd->partitionMaps[offset])"];
"1000385" -> "1000223"  [label="DDG: &(lvd->partitionMaps[offset])"];
"1000223" -> "1000385"  [label="DDG: &(lvd->partitionMaps[offset])"];
"1000385" -> "1000383"  [label="AST: "];
"1000385" -> "1000387"  [label="CFG: "];
"1000386" -> "1000385"  [label="AST: "];
"1000387" -> "1000385"  [label="AST: "];
"1000383" -> "1000385"  [label="CFG: "];
"1000385" -> "1000590"  [label="DDG: &(lvd->partitionMaps[offset])"];
"1000385" -> "1000383"  [label="DDG: &(lvd->partitionMaps[offset])"];
"1000352" -> "1000351"  [label="AST: "];
"1000353" -> "1000352"  [label="AST: "];
"1000354" -> "1000352"  [label="AST: "];
"1000358" -> "1000352"  [label="CFG: "];
"1000352" -> "1000590"  [label="DDG: sb"];
"1000352" -> "1000590"  [label="DDG: map"];
"1000352" -> "1000590"  [label="DDG: (struct sparablePartitionMap *)gpm"];
"1000352" -> "1000351"  [label="DDG: sb"];
"1000352" -> "1000351"  [label="DDG: map"];
"1000352" -> "1000351"  [label="DDG: (struct sparablePartitionMap *)gpm"];
"1000177" -> "1000352"  [label="DDG: sb"];
"1000101" -> "1000352"  [label="DDG: sb"];
"1000213" -> "1000352"  [label="DDG: map"];
"1000352" -> "1000579"  [label="DDG: sb"];
"1000351" -> "1000350"  [label="AST: "];
"1000351" -> "1000358"  [label="CFG: "];
"1000358" -> "1000351"  [label="AST: "];
"1000359" -> "1000351"  [label="CFG: "];
"1000520" -> "1000351"  [label="CFG: "];
"1000351" -> "1000590"  [label="DDG: udf_load_sparable_map(sb, map,\n\t\t\t\t    (struct sparablePartitionMap *)gpm) < 0"];
"1000351" -> "1000590"  [label="DDG: udf_load_sparable_map(sb, map,\n\t\t\t\t    (struct sparablePartitionMap *)gpm)"];
"1000579" -> "1000573"  [label="AST: "];
"1000579" -> "1000581"  [label="CFG: "];
"1000580" -> "1000579"  [label="AST: "];
"1000581" -> "1000579"  [label="AST: "];
"1000585" -> "1000579"  [label="CFG: "];
"1000579" -> "1000590"  [label="DDG: udf_load_logicalvolint(sb, leea_to_cpu(lvd->integritySeqExt))"];
"1000579" -> "1000590"  [label="DDG: sb"];
"1000579" -> "1000590"  [label="DDG: leea_to_cpu(lvd->integritySeqExt)"];
"1000177" -> "1000579"  [label="DDG: sb"];
"1000101" -> "1000579"  [label="DDG: sb"];
"1000581" -> "1000579"  [label="DDG: lvd->integritySeqExt"];
}
