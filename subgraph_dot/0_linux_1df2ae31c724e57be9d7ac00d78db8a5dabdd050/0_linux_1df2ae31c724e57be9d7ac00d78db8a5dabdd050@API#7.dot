digraph "0_linux_1df2ae31c724e57be9d7ac00d78db8a5dabdd050@API" {
"1000124" [label="(Call,udf_read_tagged(sb, block, block, &ident))"];
"1000112" [label="(Call,UDF_SB(sb))"];
"1000101" [label="(MethodParameterIn,struct super_block *sb)"];
"1000102" [label="(MethodParameterIn,sector_t block)"];
"1000122" [label="(Call,bh = udf_read_tagged(sb, block, block, &ident))"];
"1000131" [label="(Call,!bh)"];
"1000586" [label="(Call,brelse(bh))"];
"1000163" [label="(Call,udf_err(sb, \"error loading logical volume descriptor: \"\n\t\t\t\"Partition table too long (%u > %lu)\n\", table_len,\n\t\t\tsb->s_blocksize - sizeof(*lvd)))"];
"1000177" [label="(Call,udf_sb_alloc_partition_maps(sb, le32_to_cpu(lvd->numPartitionMaps)))"];
"1000175" [label="(Call,ret = udf_sb_alloc_partition_maps(sb, le32_to_cpu(lvd->numPartitionMaps)))"];
"1000588" [label="(Return,return ret;)"];
"1000352" [label="(Call,udf_load_sparable_map(sb, map,\n\t\t\t\t    (struct sparablePartitionMap *)gpm))"];
"1000351" [label="(Call,udf_load_sparable_map(sb, map,\n\t\t\t\t    (struct sparablePartitionMap *)gpm) < 0)"];
"1000579" [label="(Call,udf_load_logicalvolint(sb, leea_to_cpu(lvd->integritySeqExt)))"];
"1000128" [label="(Call,&ident)"];
"1000101" [label="(MethodParameterIn,struct super_block *sb)"];
"1000579" [label="(Call,udf_load_logicalvolint(sb, leea_to_cpu(lvd->integritySeqExt)))"];
"1000573" [label="(ControlStructure,if (lvd->integritySeqExt.extLength))"];
"1000581" [label="(Call,leea_to_cpu(lvd->integritySeqExt))"];
"1000587" [label="(Identifier,bh)"];
"1000351" [label="(Call,udf_load_sparable_map(sb, map,\n\t\t\t\t    (struct sparablePartitionMap *)gpm) < 0)"];
"1000589" [label="(Identifier,ret)"];
"1000112" [label="(Call,UDF_SB(sb))"];
"1000110" [label="(Call,*sbi = UDF_SB(sb))"];
"1000175" [label="(Call,ret = udf_sb_alloc_partition_maps(sb, le32_to_cpu(lvd->numPartitionMaps)))"];
"1000176" [label="(Identifier,ret)"];
"1000119" [label="(Call,ret = 0)"];
"1000163" [label="(Call,udf_err(sb, \"error loading logical volume descriptor: \"\n\t\t\t\"Partition table too long (%u > %lu)\n\", table_len,\n\t\t\tsb->s_blocksize - sizeof(*lvd)))"];
"1000122" [label="(Call,bh = udf_read_tagged(sb, block, block, &ident))"];
"1000179" [label="(Call,le32_to_cpu(lvd->numPartitionMaps))"];
"1000520" [label="(Identifier,map)"];
"1000113" [label="(Identifier,sb)"];
"1000174" [label="(ControlStructure,goto out_bh;)"];
"1000588" [label="(Return,return ret;)"];
"1000166" [label="(Identifier,table_len)"];
"1000354" [label="(Identifier,map)"];
"1000353" [label="(Identifier,sb)"];
"1000162" [label="(Block,)"];
"1000355" [label="(Call,(struct sparablePartitionMap *)gpm)"];
"1000178" [label="(Identifier,sb)"];
"1000590" [label="(MethodReturn,static int)"];
"1000213" [label="(Call,*map = &sbi->s_partmaps[i])"];
"1000125" [label="(Identifier,sb)"];
"1000358" [label="(Literal,0)"];
"1000177" [label="(Call,udf_sb_alloc_partition_maps(sb, le32_to_cpu(lvd->numPartitionMaps)))"];
"1000104" [label="(Block,)"];
"1000131" [label="(Call,!bh)"];
"1000352" [label="(Call,udf_load_sparable_map(sb, map,\n\t\t\t\t    (struct sparablePartitionMap *)gpm))"];
"1000137" [label="(Identifier,ident)"];
"1000164" [label="(Identifier,sb)"];
"1000127" [label="(Identifier,block)"];
"1000132" [label="(Identifier,bh)"];
"1000165" [label="(Literal,\"error loading logical volume descriptor: \"\n\t\t\t\"Partition table too long (%u > %lu)\n\")"];
"1000146" [label="(Call,table_len = le32_to_cpu(lvd->mapTableLength))"];
"1000359" [label="(ControlStructure,goto out_bh;)"];
"1000586" [label="(Call,brelse(bh))"];
"1000350" [label="(ControlStructure,if (udf_load_sparable_map(sb, map,\n\t\t\t\t    (struct sparablePartitionMap *)gpm) < 0))"];
"1000585" [label="(JumpTarget,out_bh:)"];
"1000123" [label="(Identifier,bh)"];
"1000184" [label="(Identifier,ret)"];
"1000580" [label="(Identifier,sb)"];
"1000130" [label="(ControlStructure,if (!bh))"];
"1000124" [label="(Call,udf_read_tagged(sb, block, block, &ident))"];
"1000126" [label="(Identifier,block)"];
"1000167" [label="(Call,sb->s_blocksize - sizeof(*lvd))"];
"1000134" [label="(Literal,1)"];
"1000102" [label="(MethodParameterIn,sector_t block)"];
"1000124" -> "1000122"  [label="AST: "];
"1000124" -> "1000128"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000127" -> "1000124"  [label="AST: "];
"1000128" -> "1000124"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000124" -> "1000590"  [label="DDG: "];
"1000124" -> "1000590"  [label="DDG: "];
"1000124" -> "1000590"  [label="DDG: "];
"1000124" -> "1000122"  [label="DDG: "];
"1000124" -> "1000122"  [label="DDG: "];
"1000124" -> "1000122"  [label="DDG: "];
"1000112" -> "1000124"  [label="DDG: "];
"1000101" -> "1000124"  [label="DDG: "];
"1000102" -> "1000124"  [label="DDG: "];
"1000124" -> "1000163"  [label="DDG: "];
"1000124" -> "1000177"  [label="DDG: "];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000113"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000110" -> "1000112"  [label="CFG: "];
"1000112" -> "1000110"  [label="DDG: "];
"1000101" -> "1000112"  [label="DDG: "];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000590"  [label="DDG: "];
"1000101" -> "1000163"  [label="DDG: "];
"1000101" -> "1000177"  [label="DDG: "];
"1000101" -> "1000352"  [label="DDG: "];
"1000101" -> "1000579"  [label="DDG: "];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000590"  [label="DDG: "];
"1000122" -> "1000104"  [label="AST: "];
"1000123" -> "1000122"  [label="AST: "];
"1000132" -> "1000122"  [label="CFG: "];
"1000122" -> "1000590"  [label="DDG: "];
"1000122" -> "1000131"  [label="DDG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000132"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000134" -> "1000131"  [label="CFG: "];
"1000137" -> "1000131"  [label="CFG: "];
"1000131" -> "1000590"  [label="DDG: "];
"1000131" -> "1000590"  [label="DDG: "];
"1000131" -> "1000586"  [label="DDG: "];
"1000586" -> "1000104"  [label="AST: "];
"1000586" -> "1000587"  [label="CFG: "];
"1000587" -> "1000586"  [label="AST: "];
"1000589" -> "1000586"  [label="CFG: "];
"1000586" -> "1000590"  [label="DDG: "];
"1000586" -> "1000590"  [label="DDG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000167"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000165" -> "1000163"  [label="AST: "];
"1000166" -> "1000163"  [label="AST: "];
"1000167" -> "1000163"  [label="AST: "];
"1000174" -> "1000163"  [label="CFG: "];
"1000163" -> "1000590"  [label="DDG: "];
"1000163" -> "1000590"  [label="DDG: "];
"1000163" -> "1000590"  [label="DDG: "];
"1000163" -> "1000590"  [label="DDG: "];
"1000146" -> "1000163"  [label="DDG: "];
"1000167" -> "1000163"  [label="DDG: "];
"1000177" -> "1000175"  [label="AST: "];
"1000177" -> "1000179"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000179" -> "1000177"  [label="AST: "];
"1000175" -> "1000177"  [label="CFG: "];
"1000177" -> "1000590"  [label="DDG: "];
"1000177" -> "1000590"  [label="DDG: "];
"1000177" -> "1000175"  [label="DDG: "];
"1000177" -> "1000175"  [label="DDG: "];
"1000179" -> "1000177"  [label="DDG: "];
"1000177" -> "1000352"  [label="DDG: "];
"1000177" -> "1000579"  [label="DDG: "];
"1000175" -> "1000104"  [label="AST: "];
"1000176" -> "1000175"  [label="AST: "];
"1000184" -> "1000175"  [label="CFG: "];
"1000175" -> "1000590"  [label="DDG: "];
"1000175" -> "1000590"  [label="DDG: "];
"1000175" -> "1000588"  [label="DDG: "];
"1000588" -> "1000104"  [label="AST: "];
"1000588" -> "1000589"  [label="CFG: "];
"1000589" -> "1000588"  [label="AST: "];
"1000590" -> "1000588"  [label="CFG: "];
"1000588" -> "1000590"  [label="DDG: "];
"1000589" -> "1000588"  [label="DDG: "];
"1000119" -> "1000588"  [label="DDG: "];
"1000352" -> "1000351"  [label="AST: "];
"1000352" -> "1000355"  [label="CFG: "];
"1000353" -> "1000352"  [label="AST: "];
"1000354" -> "1000352"  [label="AST: "];
"1000355" -> "1000352"  [label="AST: "];
"1000358" -> "1000352"  [label="CFG: "];
"1000352" -> "1000590"  [label="DDG: "];
"1000352" -> "1000590"  [label="DDG: "];
"1000352" -> "1000590"  [label="DDG: "];
"1000352" -> "1000351"  [label="DDG: "];
"1000352" -> "1000351"  [label="DDG: "];
"1000352" -> "1000351"  [label="DDG: "];
"1000213" -> "1000352"  [label="DDG: "];
"1000355" -> "1000352"  [label="DDG: "];
"1000352" -> "1000579"  [label="DDG: "];
"1000351" -> "1000350"  [label="AST: "];
"1000351" -> "1000358"  [label="CFG: "];
"1000358" -> "1000351"  [label="AST: "];
"1000359" -> "1000351"  [label="CFG: "];
"1000520" -> "1000351"  [label="CFG: "];
"1000351" -> "1000590"  [label="DDG: "];
"1000351" -> "1000590"  [label="DDG: "];
"1000579" -> "1000573"  [label="AST: "];
"1000579" -> "1000581"  [label="CFG: "];
"1000580" -> "1000579"  [label="AST: "];
"1000581" -> "1000579"  [label="AST: "];
"1000585" -> "1000579"  [label="CFG: "];
"1000579" -> "1000590"  [label="DDG: "];
"1000579" -> "1000590"  [label="DDG: "];
"1000579" -> "1000590"  [label="DDG: "];
"1000581" -> "1000579"  [label="DDG: "];
}
