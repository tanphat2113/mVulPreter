digraph "0_linux_d5e0d0f607a7a029c6563a0470d88255c89a8d11@pointer" {
"1000413" [label="(Call,-sk->sk_err)"];
"1000333" [label="(Call,sk->sk_err != 0)"];
"1000411" [label="(Call,err = -sk->sk_err)"];
"1000473" [label="(Return,return err;)"];
"1000385" [label="(Call,err = sock_intr_errno(timeout))"];
"1000114" [label="(Block,)"];
"1000461" [label="(Call,err = copied)"];
"1000168" [label="(Call,err = -EOPNOTSUPP)"];
"1000313" [label="(Call,err < 0)"];
"1000252" [label="(Call,err = -ENOMEM)"];
"1000411" [label="(Call,err = -sk->sk_err)"];
"1000424" [label="(Call,err = 0)"];
"1000333" [label="(Call,sk->sk_err != 0)"];
"1000429" [label="(Identifier,copied)"];
"1000337" [label="(Literal,0)"];
"1000292" [label="(Call,err = -ENOMEM)"];
"1000272" [label="(Call,err < 0)"];
"1000369" [label="(Call,err < 0)"];
"1000475" [label="(MethodReturn,RET)"];
"1000341" [label="(Identifier,sk)"];
"1000229" [label="(Call,err < 0)"];
"1000407" [label="(ControlStructure,if (sk->sk_err))"];
"1000413" [label="(Call,-sk->sk_err)"];
"1000356" [label="(Call,err = -EAGAIN)"];
"1000332" [label="(Call,sk->sk_err != 0 || (sk->sk_shutdown & RCV_SHUTDOWN)\n\t\t\t    || (vsk->peer_shutdown & SEND_SHUTDOWN))"];
"1000473" [label="(Return,return err;)"];
"1000158" [label="(Call,err = -ENOTCONN)"];
"1000206" [label="(Call,err = -ENOMEM)"];
"1000180" [label="(Call,err = 0)"];
"1000412" [label="(Identifier,err)"];
"1000154" [label="(Call,err = 0)"];
"1000396" [label="(Call,err = -EAGAIN)"];
"1000334" [label="(Call,sk->sk_err)"];
"1000188" [label="(Call,err = 0)"];
"1000474" [label="(Identifier,err)"];
"1000414" [label="(Call,sk->sk_err)"];
"1000413" -> "1000411"  [label="AST: "];
"1000413" -> "1000414"  [label="CFG: "];
"1000414" -> "1000413"  [label="AST: "];
"1000411" -> "1000413"  [label="CFG: "];
"1000413" -> "1000475"  [label="DDG: sk->sk_err"];
"1000413" -> "1000411"  [label="DDG: sk->sk_err"];
"1000333" -> "1000413"  [label="DDG: sk->sk_err"];
"1000333" -> "1000332"  [label="AST: "];
"1000333" -> "1000337"  [label="CFG: "];
"1000334" -> "1000333"  [label="AST: "];
"1000337" -> "1000333"  [label="AST: "];
"1000341" -> "1000333"  [label="CFG: "];
"1000332" -> "1000333"  [label="CFG: "];
"1000333" -> "1000475"  [label="DDG: sk->sk_err"];
"1000333" -> "1000332"  [label="DDG: sk->sk_err"];
"1000333" -> "1000332"  [label="DDG: 0"];
"1000411" -> "1000407"  [label="AST: "];
"1000412" -> "1000411"  [label="AST: "];
"1000429" -> "1000411"  [label="CFG: "];
"1000411" -> "1000475"  [label="DDG: err"];
"1000411" -> "1000475"  [label="DDG: -sk->sk_err"];
"1000411" -> "1000473"  [label="DDG: err"];
"1000473" -> "1000114"  [label="AST: "];
"1000473" -> "1000474"  [label="CFG: "];
"1000474" -> "1000473"  [label="AST: "];
"1000475" -> "1000473"  [label="CFG: "];
"1000473" -> "1000475"  [label="DDG: <RET>"];
"1000474" -> "1000473"  [label="DDG: err"];
"1000158" -> "1000473"  [label="DDG: err"];
"1000396" -> "1000473"  [label="DDG: err"];
"1000292" -> "1000473"  [label="DDG: err"];
"1000188" -> "1000473"  [label="DDG: err"];
"1000154" -> "1000473"  [label="DDG: err"];
"1000180" -> "1000473"  [label="DDG: err"];
"1000424" -> "1000473"  [label="DDG: err"];
"1000206" -> "1000473"  [label="DDG: err"];
"1000272" -> "1000473"  [label="DDG: err"];
"1000385" -> "1000473"  [label="DDG: err"];
"1000313" -> "1000473"  [label="DDG: err"];
"1000252" -> "1000473"  [label="DDG: err"];
"1000369" -> "1000473"  [label="DDG: err"];
"1000168" -> "1000473"  [label="DDG: err"];
"1000356" -> "1000473"  [label="DDG: err"];
"1000229" -> "1000473"  [label="DDG: err"];
"1000461" -> "1000473"  [label="DDG: err"];
}
