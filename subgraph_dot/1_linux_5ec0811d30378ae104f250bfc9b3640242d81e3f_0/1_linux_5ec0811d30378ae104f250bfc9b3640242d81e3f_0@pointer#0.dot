digraph "1_linux_5ec0811d30378ae104f250bfc9b3640242d81e3f_0@pointer" {
"1000110" [label="(Call,IS_MNT_NEW(m))"];
"1000105" [label="(MethodParameterIn,struct mount *m)"];
"1000128" [label="(Call,peers(m, last_dest))"];
"1000140" [label="(Call,n = m)"];
"1000179" [label="(Call,peers(n, last_dest))"];
"1000178" [label="(Call,!peers(n, last_dest))"];
"1000198" [label="(Call,IS_MNT_SHARED(m))"];
"1000237" [label="(Call,mnt_set_mountpoint(m, mp, child))"];
"1000241" [label="(Call,last_dest = m)"];
"1000244" [label="(Call,last_source = child)"];
"1000193" [label="(ControlStructure,break;)"];
"1000241" [label="(Call,last_dest = m)"];
"1000110" [label="(Call,IS_MNT_NEW(m))"];
"1000179" [label="(Call,peers(n, last_dest))"];
"1000225" [label="(Call,IS_ERR(child))"];
"1000148" [label="(Identifier,p)"];
"1000172" [label="(Call,last_dest = last_source->mnt_parent)"];
"1000239" [label="(Identifier,mp)"];
"1000113" [label="(Literal,0)"];
"1000178" [label="(Call,!peers(n, last_dest))"];
"1000201" [label="(Identifier,type)"];
"1000177" [label="(ControlStructure,if (!peers(n, last_dest)))"];
"1000130" [label="(Identifier,last_dest)"];
"1000106" [label="(Block,)"];
"1000105" [label="(MethodParameterIn,struct mount *m)"];
"1000180" [label="(Identifier,n)"];
"1000140" [label="(Call,n = m)"];
"1000245" [label="(Identifier,last_source)"];
"1000242" [label="(Identifier,last_dest)"];
"1000129" [label="(Identifier,m)"];
"1000198" [label="(Call,IS_MNT_SHARED(m))"];
"1000238" [label="(Identifier,m)"];
"1000118" [label="(Identifier,mp)"];
"1000199" [label="(Identifier,m)"];
"1000111" [label="(Identifier,m)"];
"1000133" [label="(Identifier,type)"];
"1000181" [label="(Identifier,last_dest)"];
"1000197" [label="(ControlStructure,if (IS_MNT_SHARED(m)))"];
"1000237" [label="(Call,mnt_set_mountpoint(m, mp, child))"];
"1000184" [label="(Identifier,last_source)"];
"1000142" [label="(Identifier,m)"];
"1000139" [label="(ControlStructure,for (n = m; ; n = p))"];
"1000244" [label="(Call,last_source = child)"];
"1000127" [label="(ControlStructure,if (peers(m, last_dest)))"];
"1000109" [label="(ControlStructure,if (IS_MNT_NEW(m)))"];
"1000250" [label="(Identifier,m)"];
"1000141" [label="(Identifier,n)"];
"1000246" [label="(Identifier,child)"];
"1000243" [label="(Identifier,m)"];
"1000272" [label="(MethodReturn,static int)"];
"1000143" [label="(Call,n = p)"];
"1000240" [label="(Identifier,child)"];
"1000128" [label="(Call,peers(m, last_dest))"];
"1000207" [label="(Identifier,m)"];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000111"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000113" -> "1000110"  [label="CFG: "];
"1000118" -> "1000110"  [label="CFG: "];
"1000110" -> "1000272"  [label="DDG: IS_MNT_NEW(m)"];
"1000110" -> "1000272"  [label="DDG: m"];
"1000105" -> "1000110"  [label="DDG: m"];
"1000110" -> "1000128"  [label="DDG: m"];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000272"  [label="DDG: m"];
"1000105" -> "1000128"  [label="DDG: m"];
"1000105" -> "1000140"  [label="DDG: m"];
"1000105" -> "1000198"  [label="DDG: m"];
"1000105" -> "1000237"  [label="DDG: m"];
"1000105" -> "1000241"  [label="DDG: m"];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000130"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000128"  [label="AST: "];
"1000133" -> "1000128"  [label="CFG: "];
"1000141" -> "1000128"  [label="CFG: "];
"1000128" -> "1000272"  [label="DDG: last_dest"];
"1000128" -> "1000272"  [label="DDG: m"];
"1000128" -> "1000272"  [label="DDG: peers(m, last_dest)"];
"1000128" -> "1000140"  [label="DDG: m"];
"1000128" -> "1000179"  [label="DDG: last_dest"];
"1000128" -> "1000198"  [label="DDG: m"];
"1000128" -> "1000237"  [label="DDG: m"];
"1000140" -> "1000139"  [label="AST: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000142" -> "1000140"  [label="AST: "];
"1000148" -> "1000140"  [label="CFG: "];
"1000140" -> "1000179"  [label="DDG: n"];
"1000179" -> "1000178"  [label="AST: "];
"1000179" -> "1000181"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000181" -> "1000179"  [label="AST: "];
"1000178" -> "1000179"  [label="CFG: "];
"1000179" -> "1000272"  [label="DDG: last_dest"];
"1000179" -> "1000272"  [label="DDG: n"];
"1000179" -> "1000178"  [label="DDG: n"];
"1000179" -> "1000178"  [label="DDG: last_dest"];
"1000143" -> "1000179"  [label="DDG: n"];
"1000172" -> "1000179"  [label="DDG: last_dest"];
"1000178" -> "1000177"  [label="AST: "];
"1000184" -> "1000178"  [label="CFG: "];
"1000193" -> "1000178"  [label="CFG: "];
"1000178" -> "1000272"  [label="DDG: peers(n, last_dest)"];
"1000178" -> "1000272"  [label="DDG: !peers(n, last_dest)"];
"1000198" -> "1000197"  [label="AST: "];
"1000198" -> "1000199"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000201" -> "1000198"  [label="CFG: "];
"1000207" -> "1000198"  [label="CFG: "];
"1000198" -> "1000272"  [label="DDG: m"];
"1000198" -> "1000272"  [label="DDG: IS_MNT_SHARED(m)"];
"1000198" -> "1000237"  [label="DDG: m"];
"1000237" -> "1000106"  [label="AST: "];
"1000237" -> "1000240"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000239" -> "1000237"  [label="AST: "];
"1000240" -> "1000237"  [label="AST: "];
"1000242" -> "1000237"  [label="CFG: "];
"1000237" -> "1000272"  [label="DDG: mnt_set_mountpoint(m, mp, child)"];
"1000237" -> "1000272"  [label="DDG: mp"];
"1000225" -> "1000237"  [label="DDG: child"];
"1000237" -> "1000241"  [label="DDG: m"];
"1000237" -> "1000244"  [label="DDG: child"];
"1000241" -> "1000106"  [label="AST: "];
"1000241" -> "1000243"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="AST: "];
"1000245" -> "1000241"  [label="CFG: "];
"1000241" -> "1000272"  [label="DDG: last_dest"];
"1000241" -> "1000272"  [label="DDG: m"];
"1000244" -> "1000106"  [label="AST: "];
"1000244" -> "1000246"  [label="CFG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000246" -> "1000244"  [label="AST: "];
"1000250" -> "1000244"  [label="CFG: "];
"1000244" -> "1000272"  [label="DDG: last_source"];
"1000244" -> "1000272"  [label="DDG: child"];
}
