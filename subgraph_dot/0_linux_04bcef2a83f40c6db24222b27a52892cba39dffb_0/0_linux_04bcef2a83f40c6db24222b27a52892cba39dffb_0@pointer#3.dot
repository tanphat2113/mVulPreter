digraph "0_linux_04bcef2a83f40c6db24222b27a52892cba39dffb_0@pointer" {
"1000344" [label="(Call,svc = __ip_vs_service_get(usvc.af, usvc.protocol,\n\t\t\t\t\t  &usvc.addr, usvc.port))"];
"1000346" [label="(Call,__ip_vs_service_get(usvc.af, usvc.protocol,\n\t\t\t\t\t  &usvc.addr, usvc.port))"];
"1000309" [label="(Call,usvc.protocol != IPPROTO_UDP)"];
"1000304" [label="(Call,usvc.protocol != IPPROTO_TCP)"];
"1000293" [label="(Call,!usvc.port)"];
"1000376" [label="(Call,svc == NULL)"];
"1000375" [label="(Call,svc == NULL || svc->protocol != usvc.protocol)"];
"1000371" [label="(Call,cmd != IP_VS_SO_SET_ADD\n\t    && (svc == NULL || svc->protocol != usvc.protocol))"];
"1000397" [label="(Call,svc != NULL)"];
"1000468" [label="(Call,ip_vs_service_put(svc))"];
"1000416" [label="(Call,ip_vs_edit_service(svc, &usvc))"];
"1000414" [label="(Call,ret = ip_vs_edit_service(svc, &usvc))"];
"1000476" [label="(Return,return ret;)"];
"1000424" [label="(Call,ip_vs_del_service(svc))"];
"1000422" [label="(Call,ret = ip_vs_del_service(svc))"];
"1000427" [label="(Call,!ret)"];
"1000434" [label="(Call,ip_vs_zero_service(svc))"];
"1000432" [label="(Call,ret = ip_vs_zero_service(svc))"];
"1000440" [label="(Call,ip_vs_add_dest(svc, &udest))"];
"1000438" [label="(Call,ret = ip_vs_add_dest(svc, &udest))"];
"1000448" [label="(Call,ip_vs_edit_dest(svc, &udest))"];
"1000446" [label="(Call,ret = ip_vs_edit_dest(svc, &udest))"];
"1000456" [label="(Call,ip_vs_del_dest(svc, &udest))"];
"1000454" [label="(Call,ret = ip_vs_del_dest(svc, &udest))"];
"1000430" [label="(ControlStructure,break;)"];
"1000433" [label="(Identifier,ret)"];
"1000223" [label="(Call,ret = start_sync_thread(dm->state, dm->mcast_ifn, dm->syncid))"];
"1000440" [label="(Call,ip_vs_add_dest(svc, &udest))"];
"1000432" [label="(Call,ret = ip_vs_zero_service(svc))"];
"1000311" [label="(Identifier,usvc)"];
"1000378" [label="(Identifier,NULL)"];
"1000457" [label="(Identifier,svc)"];
"1000399" [label="(Identifier,NULL)"];
"1000345" [label="(Identifier,svc)"];
"1000417" [label="(Identifier,svc)"];
"1000400" [label="(Call,ret = -EEXIST)"];
"1000304" [label="(Call,usvc.protocol != IPPROTO_TCP)"];
"1000371" [label="(Call,cmd != IP_VS_SO_SET_ADD\n\t    && (svc == NULL || svc->protocol != usvc.protocol))"];
"1000406" [label="(Identifier,ret)"];
"1000460" [label="(ControlStructure,break;)"];
"1000373" [label="(Identifier,cmd)"];
"1000393" [label="(Identifier,cmd)"];
"1000456" [label="(Call,ip_vs_del_dest(svc, &udest))"];
"1000427" [label="(Call,!ret)"];
"1000298" [label="(Call,ret = ip_vs_zero_all())"];
"1000357" [label="(Call,usvc.port)"];
"1000194" [label="(Call,ret = ip_vs_flush())"];
"1000462" [label="(Call,ret = -EINVAL)"];
"1000468" [label="(Call,ip_vs_service_put(svc))"];
"1000425" [label="(Identifier,svc)"];
"1000426" [label="(ControlStructure,if (!ret))"];
"1000394" [label="(Block,)"];
"1000271" [label="(Call,ip_vs_copy_udest_compat(&udest, udest_compat))"];
"1000415" [label="(Identifier,ret)"];
"1000305" [label="(Call,usvc.protocol)"];
"1000381" [label="(Identifier,svc)"];
"1000455" [label="(Identifier,ret)"];
"1000398" [label="(Identifier,svc)"];
"1000416" [label="(Call,ip_vs_edit_service(svc, &usvc))"];
"1000396" [label="(ControlStructure,if (svc != NULL))"];
"1000248" [label="(Call,ret = stop_sync_thread(dm->state))"];
"1000350" [label="(Call,usvc.protocol)"];
"1000466" [label="(ControlStructure,if (svc))"];
"1000458" [label="(Call,&udest)"];
"1000452" [label="(ControlStructure,break;)"];
"1000344" [label="(Call,svc = __ip_vs_service_get(usvc.af, usvc.protocol,\n\t\t\t\t\t  &usvc.addr, usvc.port))"];
"1000450" [label="(Call,&udest)"];
"1000370" [label="(ControlStructure,if (cmd != IP_VS_SO_SET_ADD\n\t    && (svc == NULL || svc->protocol != usvc.protocol)))"];
"1000353" [label="(Call,&usvc.addr)"];
"1000420" [label="(ControlStructure,break;)"];
"1000267" [label="(Call,ip_vs_copy_usvc_compat(&usvc, usvc_compat))"];
"1000346" [label="(Call,__ip_vs_service_get(usvc.af, usvc.protocol,\n\t\t\t\t\t  &usvc.addr, usvc.port))"];
"1000309" [label="(Call,usvc.protocol != IPPROTO_UDP)"];
"1000478" [label="(MethodReturn,RET)"];
"1000423" [label="(Identifier,ret)"];
"1000308" [label="(Identifier,IPPROTO_TCP)"];
"1000377" [label="(Identifier,svc)"];
"1000476" [label="(Return,return ret;)"];
"1000454" [label="(Call,ret = ip_vs_del_dest(svc, &udest))"];
"1000376" [label="(Call,svc == NULL)"];
"1000303" [label="(Call,usvc.protocol != IPPROTO_TCP && usvc.protocol != IPPROTO_UDP)"];
"1000434" [label="(Call,ip_vs_zero_service(svc))"];
"1000333" [label="(Call,ret = -EFAULT)"];
"1000446" [label="(Call,ret = ip_vs_edit_dest(svc, &udest))"];
"1000444" [label="(ControlStructure,break;)"];
"1000418" [label="(Call,&usvc)"];
"1000113" [label="(Block,)"];
"1000347" [label="(Call,usvc.af)"];
"1000379" [label="(Call,svc->protocol != usvc.protocol)"];
"1000422" [label="(Call,ret = ip_vs_del_service(svc))"];
"1000372" [label="(Call,cmd != IP_VS_SO_SET_ADD)"];
"1000388" [label="(Identifier,ret)"];
"1000477" [label="(Identifier,ret)"];
"1000449" [label="(Identifier,svc)"];
"1000429" [label="(ControlStructure,goto out_unlock;)"];
"1000204" [label="(Call,ret = ip_vs_set_timeout((struct ip_vs_timeout_user *)arg))"];
"1000361" [label="(Call,svc = __ip_vs_svc_fwm_get(usvc.af, usvc.fwmark))"];
"1000439" [label="(Identifier,ret)"];
"1000441" [label="(Identifier,svc)"];
"1000401" [label="(Identifier,ret)"];
"1000315" [label="(Call,pr_err(\"set_ctl: invalid protocol: %d %pI4:%d %s\n\",\n\t\t       usvc.protocol, &usvc.addr.ip,\n\t\t       ntohs(usvc.port), usvc.sched_name))"];
"1000442" [label="(Call,&udest)"];
"1000310" [label="(Call,usvc.protocol)"];
"1000375" [label="(Call,svc == NULL || svc->protocol != usvc.protocol)"];
"1000470" [label="(JumpTarget,out_unlock:)"];
"1000313" [label="(Identifier,IPPROTO_UDP)"];
"1000326" [label="(Call,ntohs(usvc.port))"];
"1000447" [label="(Identifier,ret)"];
"1000414" [label="(Call,ret = ip_vs_edit_service(svc, &usvc))"];
"1000397" [label="(Call,svc != NULL)"];
"1000405" [label="(Call,ret = ip_vs_add_service(&usvc, &svc))"];
"1000436" [label="(ControlStructure,break;)"];
"1000438" [label="(Call,ret = ip_vs_add_dest(svc, &udest))"];
"1000294" [label="(Call,usvc.port)"];
"1000435" [label="(Identifier,svc)"];
"1000428" [label="(Identifier,ret)"];
"1000338" [label="(ControlStructure,if (usvc.fwmark == 0))"];
"1000286" [label="(Call,!usvc.addr.ip && !usvc.port)"];
"1000293" [label="(Call,!usvc.port)"];
"1000469" [label="(Identifier,svc)"];
"1000387" [label="(Call,ret = -ESRCH)"];
"1000424" [label="(Call,ip_vs_del_service(svc))"];
"1000448" [label="(Call,ip_vs_edit_dest(svc, &udest))"];
"1000184" [label="(Call,ret = -ERESTARTSYS)"];
"1000344" -> "1000338"  [label="AST: "];
"1000344" -> "1000346"  [label="CFG: "];
"1000345" -> "1000344"  [label="AST: "];
"1000346" -> "1000344"  [label="AST: "];
"1000373" -> "1000344"  [label="CFG: "];
"1000344" -> "1000478"  [label="DDG: __ip_vs_service_get(usvc.af, usvc.protocol,\n\t\t\t\t\t  &usvc.addr, usvc.port)"];
"1000344" -> "1000478"  [label="DDG: svc"];
"1000346" -> "1000344"  [label="DDG: usvc.af"];
"1000346" -> "1000344"  [label="DDG: usvc.protocol"];
"1000346" -> "1000344"  [label="DDG: &usvc.addr"];
"1000346" -> "1000344"  [label="DDG: usvc.port"];
"1000344" -> "1000376"  [label="DDG: svc"];
"1000344" -> "1000397"  [label="DDG: svc"];
"1000344" -> "1000416"  [label="DDG: svc"];
"1000344" -> "1000424"  [label="DDG: svc"];
"1000344" -> "1000434"  [label="DDG: svc"];
"1000344" -> "1000440"  [label="DDG: svc"];
"1000344" -> "1000448"  [label="DDG: svc"];
"1000344" -> "1000456"  [label="DDG: svc"];
"1000344" -> "1000468"  [label="DDG: svc"];
"1000346" -> "1000357"  [label="CFG: "];
"1000347" -> "1000346"  [label="AST: "];
"1000350" -> "1000346"  [label="AST: "];
"1000353" -> "1000346"  [label="AST: "];
"1000357" -> "1000346"  [label="AST: "];
"1000346" -> "1000478"  [label="DDG: usvc.port"];
"1000346" -> "1000478"  [label="DDG: &usvc.addr"];
"1000346" -> "1000478"  [label="DDG: usvc.af"];
"1000346" -> "1000478"  [label="DDG: usvc.protocol"];
"1000309" -> "1000346"  [label="DDG: usvc.protocol"];
"1000304" -> "1000346"  [label="DDG: usvc.protocol"];
"1000293" -> "1000346"  [label="DDG: usvc.port"];
"1000346" -> "1000379"  [label="DDG: usvc.protocol"];
"1000309" -> "1000303"  [label="AST: "];
"1000309" -> "1000313"  [label="CFG: "];
"1000310" -> "1000309"  [label="AST: "];
"1000313" -> "1000309"  [label="AST: "];
"1000303" -> "1000309"  [label="CFG: "];
"1000309" -> "1000478"  [label="DDG: usvc.protocol"];
"1000309" -> "1000478"  [label="DDG: IPPROTO_UDP"];
"1000309" -> "1000303"  [label="DDG: usvc.protocol"];
"1000309" -> "1000303"  [label="DDG: IPPROTO_UDP"];
"1000304" -> "1000309"  [label="DDG: usvc.protocol"];
"1000309" -> "1000315"  [label="DDG: usvc.protocol"];
"1000309" -> "1000379"  [label="DDG: usvc.protocol"];
"1000304" -> "1000303"  [label="AST: "];
"1000304" -> "1000308"  [label="CFG: "];
"1000305" -> "1000304"  [label="AST: "];
"1000308" -> "1000304"  [label="AST: "];
"1000311" -> "1000304"  [label="CFG: "];
"1000303" -> "1000304"  [label="CFG: "];
"1000304" -> "1000478"  [label="DDG: usvc.protocol"];
"1000304" -> "1000478"  [label="DDG: IPPROTO_TCP"];
"1000304" -> "1000303"  [label="DDG: usvc.protocol"];
"1000304" -> "1000303"  [label="DDG: IPPROTO_TCP"];
"1000304" -> "1000315"  [label="DDG: usvc.protocol"];
"1000304" -> "1000379"  [label="DDG: usvc.protocol"];
"1000293" -> "1000286"  [label="AST: "];
"1000293" -> "1000294"  [label="CFG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000286" -> "1000293"  [label="CFG: "];
"1000293" -> "1000478"  [label="DDG: usvc.port"];
"1000293" -> "1000286"  [label="DDG: usvc.port"];
"1000293" -> "1000326"  [label="DDG: usvc.port"];
"1000376" -> "1000375"  [label="AST: "];
"1000376" -> "1000378"  [label="CFG: "];
"1000377" -> "1000376"  [label="AST: "];
"1000378" -> "1000376"  [label="AST: "];
"1000381" -> "1000376"  [label="CFG: "];
"1000375" -> "1000376"  [label="CFG: "];
"1000376" -> "1000478"  [label="DDG: svc"];
"1000376" -> "1000478"  [label="DDG: NULL"];
"1000376" -> "1000375"  [label="DDG: svc"];
"1000376" -> "1000375"  [label="DDG: NULL"];
"1000361" -> "1000376"  [label="DDG: svc"];
"1000376" -> "1000397"  [label="DDG: svc"];
"1000376" -> "1000397"  [label="DDG: NULL"];
"1000376" -> "1000416"  [label="DDG: svc"];
"1000376" -> "1000424"  [label="DDG: svc"];
"1000376" -> "1000434"  [label="DDG: svc"];
"1000376" -> "1000440"  [label="DDG: svc"];
"1000376" -> "1000448"  [label="DDG: svc"];
"1000376" -> "1000456"  [label="DDG: svc"];
"1000376" -> "1000468"  [label="DDG: svc"];
"1000375" -> "1000371"  [label="AST: "];
"1000375" -> "1000379"  [label="CFG: "];
"1000379" -> "1000375"  [label="AST: "];
"1000371" -> "1000375"  [label="CFG: "];
"1000375" -> "1000478"  [label="DDG: svc == NULL"];
"1000375" -> "1000478"  [label="DDG: svc->protocol != usvc.protocol"];
"1000375" -> "1000371"  [label="DDG: svc == NULL"];
"1000375" -> "1000371"  [label="DDG: svc->protocol != usvc.protocol"];
"1000379" -> "1000375"  [label="DDG: svc->protocol"];
"1000379" -> "1000375"  [label="DDG: usvc.protocol"];
"1000371" -> "1000370"  [label="AST: "];
"1000371" -> "1000372"  [label="CFG: "];
"1000372" -> "1000371"  [label="AST: "];
"1000388" -> "1000371"  [label="CFG: "];
"1000393" -> "1000371"  [label="CFG: "];
"1000371" -> "1000478"  [label="DDG: svc == NULL || svc->protocol != usvc.protocol"];
"1000371" -> "1000478"  [label="DDG: cmd != IP_VS_SO_SET_ADD"];
"1000371" -> "1000478"  [label="DDG: cmd != IP_VS_SO_SET_ADD\n\t    && (svc == NULL || svc->protocol != usvc.protocol)"];
"1000372" -> "1000371"  [label="DDG: cmd"];
"1000372" -> "1000371"  [label="DDG: IP_VS_SO_SET_ADD"];
"1000397" -> "1000396"  [label="AST: "];
"1000397" -> "1000399"  [label="CFG: "];
"1000398" -> "1000397"  [label="AST: "];
"1000399" -> "1000397"  [label="AST: "];
"1000401" -> "1000397"  [label="CFG: "];
"1000406" -> "1000397"  [label="CFG: "];
"1000397" -> "1000478"  [label="DDG: svc != NULL"];
"1000397" -> "1000478"  [label="DDG: svc"];
"1000397" -> "1000478"  [label="DDG: NULL"];
"1000361" -> "1000397"  [label="DDG: svc"];
"1000397" -> "1000468"  [label="DDG: svc"];
"1000468" -> "1000466"  [label="AST: "];
"1000468" -> "1000469"  [label="CFG: "];
"1000469" -> "1000468"  [label="AST: "];
"1000470" -> "1000468"  [label="CFG: "];
"1000468" -> "1000478"  [label="DDG: ip_vs_service_put(svc)"];
"1000468" -> "1000478"  [label="DDG: svc"];
"1000434" -> "1000468"  [label="DDG: svc"];
"1000416" -> "1000468"  [label="DDG: svc"];
"1000361" -> "1000468"  [label="DDG: svc"];
"1000440" -> "1000468"  [label="DDG: svc"];
"1000456" -> "1000468"  [label="DDG: svc"];
"1000448" -> "1000468"  [label="DDG: svc"];
"1000424" -> "1000468"  [label="DDG: svc"];
"1000416" -> "1000414"  [label="AST: "];
"1000416" -> "1000418"  [label="CFG: "];
"1000417" -> "1000416"  [label="AST: "];
"1000418" -> "1000416"  [label="AST: "];
"1000414" -> "1000416"  [label="CFG: "];
"1000416" -> "1000478"  [label="DDG: &usvc"];
"1000416" -> "1000478"  [label="DDG: svc"];
"1000416" -> "1000414"  [label="DDG: svc"];
"1000416" -> "1000414"  [label="DDG: &usvc"];
"1000361" -> "1000416"  [label="DDG: svc"];
"1000267" -> "1000416"  [label="DDG: &usvc"];
"1000414" -> "1000394"  [label="AST: "];
"1000415" -> "1000414"  [label="AST: "];
"1000420" -> "1000414"  [label="CFG: "];
"1000414" -> "1000478"  [label="DDG: ip_vs_edit_service(svc, &usvc)"];
"1000414" -> "1000478"  [label="DDG: ret"];
"1000414" -> "1000476"  [label="DDG: ret"];
"1000476" -> "1000113"  [label="AST: "];
"1000476" -> "1000477"  [label="CFG: "];
"1000477" -> "1000476"  [label="AST: "];
"1000478" -> "1000476"  [label="CFG: "];
"1000476" -> "1000478"  [label="DDG: <RET>"];
"1000477" -> "1000476"  [label="DDG: ret"];
"1000333" -> "1000476"  [label="DDG: ret"];
"1000184" -> "1000476"  [label="DDG: ret"];
"1000462" -> "1000476"  [label="DDG: ret"];
"1000194" -> "1000476"  [label="DDG: ret"];
"1000387" -> "1000476"  [label="DDG: ret"];
"1000446" -> "1000476"  [label="DDG: ret"];
"1000432" -> "1000476"  [label="DDG: ret"];
"1000405" -> "1000476"  [label="DDG: ret"];
"1000248" -> "1000476"  [label="DDG: ret"];
"1000223" -> "1000476"  [label="DDG: ret"];
"1000454" -> "1000476"  [label="DDG: ret"];
"1000427" -> "1000476"  [label="DDG: ret"];
"1000298" -> "1000476"  [label="DDG: ret"];
"1000400" -> "1000476"  [label="DDG: ret"];
"1000204" -> "1000476"  [label="DDG: ret"];
"1000438" -> "1000476"  [label="DDG: ret"];
"1000424" -> "1000422"  [label="AST: "];
"1000424" -> "1000425"  [label="CFG: "];
"1000425" -> "1000424"  [label="AST: "];
"1000422" -> "1000424"  [label="CFG: "];
"1000424" -> "1000478"  [label="DDG: svc"];
"1000424" -> "1000422"  [label="DDG: svc"];
"1000361" -> "1000424"  [label="DDG: svc"];
"1000422" -> "1000394"  [label="AST: "];
"1000423" -> "1000422"  [label="AST: "];
"1000428" -> "1000422"  [label="CFG: "];
"1000422" -> "1000478"  [label="DDG: ip_vs_del_service(svc)"];
"1000422" -> "1000427"  [label="DDG: ret"];
"1000427" -> "1000426"  [label="AST: "];
"1000427" -> "1000428"  [label="CFG: "];
"1000428" -> "1000427"  [label="AST: "];
"1000429" -> "1000427"  [label="CFG: "];
"1000430" -> "1000427"  [label="CFG: "];
"1000427" -> "1000478"  [label="DDG: ret"];
"1000427" -> "1000478"  [label="DDG: !ret"];
"1000434" -> "1000432"  [label="AST: "];
"1000434" -> "1000435"  [label="CFG: "];
"1000435" -> "1000434"  [label="AST: "];
"1000432" -> "1000434"  [label="CFG: "];
"1000434" -> "1000478"  [label="DDG: svc"];
"1000434" -> "1000432"  [label="DDG: svc"];
"1000361" -> "1000434"  [label="DDG: svc"];
"1000432" -> "1000394"  [label="AST: "];
"1000433" -> "1000432"  [label="AST: "];
"1000436" -> "1000432"  [label="CFG: "];
"1000432" -> "1000478"  [label="DDG: ip_vs_zero_service(svc)"];
"1000432" -> "1000478"  [label="DDG: ret"];
"1000440" -> "1000438"  [label="AST: "];
"1000440" -> "1000442"  [label="CFG: "];
"1000441" -> "1000440"  [label="AST: "];
"1000442" -> "1000440"  [label="AST: "];
"1000438" -> "1000440"  [label="CFG: "];
"1000440" -> "1000478"  [label="DDG: &udest"];
"1000440" -> "1000478"  [label="DDG: svc"];
"1000440" -> "1000438"  [label="DDG: svc"];
"1000440" -> "1000438"  [label="DDG: &udest"];
"1000361" -> "1000440"  [label="DDG: svc"];
"1000271" -> "1000440"  [label="DDG: &udest"];
"1000438" -> "1000394"  [label="AST: "];
"1000439" -> "1000438"  [label="AST: "];
"1000444" -> "1000438"  [label="CFG: "];
"1000438" -> "1000478"  [label="DDG: ip_vs_add_dest(svc, &udest)"];
"1000438" -> "1000478"  [label="DDG: ret"];
"1000448" -> "1000446"  [label="AST: "];
"1000448" -> "1000450"  [label="CFG: "];
"1000449" -> "1000448"  [label="AST: "];
"1000450" -> "1000448"  [label="AST: "];
"1000446" -> "1000448"  [label="CFG: "];
"1000448" -> "1000478"  [label="DDG: &udest"];
"1000448" -> "1000478"  [label="DDG: svc"];
"1000448" -> "1000446"  [label="DDG: svc"];
"1000448" -> "1000446"  [label="DDG: &udest"];
"1000361" -> "1000448"  [label="DDG: svc"];
"1000271" -> "1000448"  [label="DDG: &udest"];
"1000446" -> "1000394"  [label="AST: "];
"1000447" -> "1000446"  [label="AST: "];
"1000452" -> "1000446"  [label="CFG: "];
"1000446" -> "1000478"  [label="DDG: ret"];
"1000446" -> "1000478"  [label="DDG: ip_vs_edit_dest(svc, &udest)"];
"1000456" -> "1000454"  [label="AST: "];
"1000456" -> "1000458"  [label="CFG: "];
"1000457" -> "1000456"  [label="AST: "];
"1000458" -> "1000456"  [label="AST: "];
"1000454" -> "1000456"  [label="CFG: "];
"1000456" -> "1000478"  [label="DDG: svc"];
"1000456" -> "1000478"  [label="DDG: &udest"];
"1000456" -> "1000454"  [label="DDG: svc"];
"1000456" -> "1000454"  [label="DDG: &udest"];
"1000361" -> "1000456"  [label="DDG: svc"];
"1000271" -> "1000456"  [label="DDG: &udest"];
"1000454" -> "1000394"  [label="AST: "];
"1000455" -> "1000454"  [label="AST: "];
"1000460" -> "1000454"  [label="CFG: "];
"1000454" -> "1000478"  [label="DDG: ret"];
"1000454" -> "1000478"  [label="DDG: ip_vs_del_dest(svc, &udest)"];
}
