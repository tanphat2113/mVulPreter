digraph "0_openssl_4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2@pointer" {
"1000639" [label="(Call,totlen += pipelens[j])"];
"1000623" [label="(Call,(int)pipelens[j])"];
"1000132" [label="(MethodParameterIn,unsigned int *pipelens)"];
"1000518" [label="(Call,totlen = 0)"];
"1000870" [label="(Call,s->rlayer.wpend_tot = totlen)"];
"1000891" [label="(Call,s->rlayer.wpend_ret = totlen)"];
"1000899" [label="(Call,ssl3_write_pending(s, type, buf, totlen))"];
"1000898" [label="(Return,return ssl3_write_pending(s, type, buf, totlen);)"];
"1000135" [label="(Block,)"];
"1000898" [label="(Return,return ssl3_write_pending(s, type, buf, totlen);)"];
"1000647" [label="(Identifier,s)"];
"1000870" [label="(Call,s->rlayer.wpend_tot = totlen)"];
"1000749" [label="(Call,s->method->ssl3_enc->enc(s, wr, numpipes, 1))"];
"1000618" [label="(Call,SSL3_RECORD_set_length(&wr[j], (int)pipelens[j]))"];
"1000902" [label="(Identifier,buf)"];
"1000520" [label="(Literal,0)"];
"1000298" [label="(Call,type == SSL3_RT_APPLICATION_DATA)"];
"1000768" [label="(Call,SSL_WRITE_ETM(s))"];
"1000813" [label="(Call,s->msg_callback(1, 0, SSL3_RT_HEADER, plen[j] - 5, 5, s,\n                            s->msg_callback_arg))"];
"1000518" [label="(Call,totlen = 0)"];
"1000170" [label="(Call,totlen += pipelens[j])"];
"1000522" [label="(Identifier,wr)"];
"1000625" [label="(Call,pipelens[j])"];
"1000892" [label="(Call,s->rlayer.wpend_ret)"];
"1000903" [label="(Identifier,totlen)"];
"1000545" [label="(Call,SSL3_RECORD_set_type(&wr[j], type))"];
"1000891" [label="(Call,s->rlayer.wpend_ret = totlen)"];
"1000308" [label="(Call,do_ssl3_write(s, type, buf, &tmppipelen, 1, 1))"];
"1000641" [label="(Call,pipelens[j])"];
"1000535" [label="(Block,)"];
"1000131" [label="(MethodParameterIn,const unsigned char *buf)"];
"1000900" [label="(Identifier,s)"];
"1000776" [label="(Call,s->method->ssl3_enc->mac(s, &wr[j],\n                                          outbuf[j] + wr[j].length, 1))"];
"1000897" [label="(Identifier,totlen)"];
"1000132" [label="(MethodParameterIn,unsigned int *pipelens)"];
"1000880" [label="(Identifier,s)"];
"1000827" [label="(Call,SSL3_RECORD_set_type(&wr[j], type))"];
"1000908" [label="(MethodReturn,int)"];
"1000871" [label="(Call,s->rlayer.wpend_tot)"];
"1000876" [label="(Identifier,totlen)"];
"1000639" [label="(Call,totlen += pipelens[j])"];
"1000640" [label="(Identifier,totlen)"];
"1000623" [label="(Call,(int)pipelens[j])"];
"1000899" [label="(Call,ssl3_write_pending(s, type, buf, totlen))"];
"1000130" [label="(MethodParameterIn,int type)"];
"1000901" [label="(Identifier,type)"];
"1000129" [label="(MethodParameterIn,SSL *s)"];
"1000519" [label="(Identifier,totlen)"];
"1000639" -> "1000535"  [label="AST: "];
"1000639" -> "1000641"  [label="CFG: "];
"1000640" -> "1000639"  [label="AST: "];
"1000641" -> "1000639"  [label="AST: "];
"1000647" -> "1000639"  [label="CFG: "];
"1000639" -> "1000908"  [label="DDG: pipelens[j]"];
"1000639" -> "1000908"  [label="DDG: totlen"];
"1000623" -> "1000639"  [label="DDG: pipelens[j]"];
"1000132" -> "1000639"  [label="DDG: pipelens"];
"1000518" -> "1000639"  [label="DDG: totlen"];
"1000639" -> "1000870"  [label="DDG: totlen"];
"1000639" -> "1000891"  [label="DDG: totlen"];
"1000639" -> "1000899"  [label="DDG: totlen"];
"1000623" -> "1000618"  [label="AST: "];
"1000623" -> "1000625"  [label="CFG: "];
"1000624" -> "1000623"  [label="AST: "];
"1000625" -> "1000623"  [label="AST: "];
"1000618" -> "1000623"  [label="CFG: "];
"1000623" -> "1000618"  [label="DDG: pipelens[j]"];
"1000132" -> "1000623"  [label="DDG: pipelens"];
"1000132" -> "1000128"  [label="AST: "];
"1000132" -> "1000908"  [label="DDG: pipelens"];
"1000132" -> "1000170"  [label="DDG: pipelens"];
"1000518" -> "1000135"  [label="AST: "];
"1000518" -> "1000520"  [label="CFG: "];
"1000519" -> "1000518"  [label="AST: "];
"1000520" -> "1000518"  [label="AST: "];
"1000522" -> "1000518"  [label="CFG: "];
"1000518" -> "1000908"  [label="DDG: totlen"];
"1000518" -> "1000870"  [label="DDG: totlen"];
"1000518" -> "1000891"  [label="DDG: totlen"];
"1000518" -> "1000899"  [label="DDG: totlen"];
"1000870" -> "1000135"  [label="AST: "];
"1000870" -> "1000876"  [label="CFG: "];
"1000871" -> "1000870"  [label="AST: "];
"1000876" -> "1000870"  [label="AST: "];
"1000880" -> "1000870"  [label="CFG: "];
"1000870" -> "1000908"  [label="DDG: s->rlayer.wpend_tot"];
"1000891" -> "1000135"  [label="AST: "];
"1000891" -> "1000897"  [label="CFG: "];
"1000892" -> "1000891"  [label="AST: "];
"1000897" -> "1000891"  [label="AST: "];
"1000900" -> "1000891"  [label="CFG: "];
"1000891" -> "1000908"  [label="DDG: s->rlayer.wpend_ret"];
"1000899" -> "1000898"  [label="AST: "];
"1000899" -> "1000903"  [label="CFG: "];
"1000900" -> "1000899"  [label="AST: "];
"1000901" -> "1000899"  [label="AST: "];
"1000902" -> "1000899"  [label="AST: "];
"1000903" -> "1000899"  [label="AST: "];
"1000898" -> "1000899"  [label="CFG: "];
"1000899" -> "1000908"  [label="DDG: ssl3_write_pending(s, type, buf, totlen)"];
"1000899" -> "1000908"  [label="DDG: s"];
"1000899" -> "1000908"  [label="DDG: totlen"];
"1000899" -> "1000908"  [label="DDG: buf"];
"1000899" -> "1000908"  [label="DDG: type"];
"1000899" -> "1000898"  [label="DDG: ssl3_write_pending(s, type, buf, totlen)"];
"1000768" -> "1000899"  [label="DDG: s"];
"1000813" -> "1000899"  [label="DDG: s"];
"1000749" -> "1000899"  [label="DDG: s"];
"1000776" -> "1000899"  [label="DDG: s"];
"1000129" -> "1000899"  [label="DDG: s"];
"1000130" -> "1000899"  [label="DDG: type"];
"1000298" -> "1000899"  [label="DDG: type"];
"1000827" -> "1000899"  [label="DDG: type"];
"1000545" -> "1000899"  [label="DDG: type"];
"1000308" -> "1000899"  [label="DDG: type"];
"1000308" -> "1000899"  [label="DDG: buf"];
"1000131" -> "1000899"  [label="DDG: buf"];
"1000898" -> "1000135"  [label="AST: "];
"1000908" -> "1000898"  [label="CFG: "];
"1000898" -> "1000908"  [label="DDG: <RET>"];
}
