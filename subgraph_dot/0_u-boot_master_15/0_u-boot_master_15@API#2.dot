digraph "0_u-boot_master_15@API" {
"1000248" [label="(Call,info->read(info,\n\t\t\t       sector + get_aligned_image_offset(info, offset),\n\t\t\t       nr_sectors, (void *)load_ptr))"];
"1000252" [label="(Call,get_aligned_image_offset(info, offset))"];
"1000242" [label="(Call,get_aligned_image_size(info, length, offset))"];
"1000237" [label="(Call,get_aligned_image_overhead(info, offset))"];
"1000103" [label="(MethodParameterIn,struct spl_load_info *info)"];
"1000207" [label="(Call,offset += base_offset)"];
"1000106" [label="(MethodParameterIn,ulong base_offset)"];
"1000232" [label="(Call,length = len)"];
"1000104" [label="(MethodParameterIn,ulong sector)"];
"1000240" [label="(Call,nr_sectors = get_aligned_image_size(info, length, offset))"];
"1000256" [label="(Call,(void *)load_ptr)"];
"1000225" [label="(Call,load_ptr = (load_addr + align_len) & ~align_len)"];
"1000227" [label="(Call,(load_addr + align_len) & ~align_len)"];
"1000182" [label="(Call,load_addr = image_info->load_addr)"];
"1000120" [label="(Call,align_len = ARCH_DMA_MINALIGN - 1)"];
"1000122" [label="(Call,ARCH_DMA_MINALIGN - 1)"];
"1000247" [label="(Call,info->read(info,\n\t\t\t       sector + get_aligned_image_offset(info, offset),\n\t\t\t       nr_sectors, (void *)load_ptr) != nr_sectors)"];
"1000209" [label="(Identifier,base_offset)"];
"1000227" [label="(Call,(load_addr + align_len) & ~align_len)"];
"1000255" [label="(Identifier,nr_sectors)"];
"1000258" [label="(Identifier,load_ptr)"];
"1000190" [label="(Identifier,fit)"];
"1000124" [label="(Literal,1)"];
"1000267" [label="(Call,(unsigned long)length)"];
"1000241" [label="(Identifier,nr_sectors)"];
"1000226" [label="(Identifier,load_ptr)"];
"1000254" [label="(Identifier,offset)"];
"1000239" [label="(Identifier,offset)"];
"1000359" [label="(Call,(void *)load_addr)"];
"1000252" [label="(Call,get_aligned_image_offset(info, offset))"];
"1000184" [label="(Call,image_info->load_addr)"];
"1000123" [label="(Identifier,ARCH_DMA_MINALIGN)"];
"1000264" [label="(Literal,\"External data: dst=%lx, offset=%x, size=%lx\n\")"];
"1000253" [label="(Identifier,info)"];
"1000247" [label="(Call,info->read(info,\n\t\t\t       sector + get_aligned_image_offset(info, offset),\n\t\t\t       nr_sectors, (void *)load_ptr) != nr_sectors)"];
"1000182" [label="(Call,load_addr = image_info->load_addr)"];
"1000120" [label="(Call,align_len = ARCH_DMA_MINALIGN - 1)"];
"1000256" [label="(Call,(void *)load_ptr)"];
"1000250" [label="(Call,sector + get_aligned_image_offset(info, offset))"];
"1000240" [label="(Call,nr_sectors = get_aligned_image_size(info, length, offset))"];
"1000211" [label="(Identifier,external_data)"];
"1000234" [label="(Identifier,len)"];
"1000183" [label="(Identifier,load_addr)"];
"1000127" [label="(Identifier,image_comp)"];
"1000248" [label="(Call,info->read(info,\n\t\t\t       sector + get_aligned_image_offset(info, offset),\n\t\t\t       nr_sectors, (void *)load_ptr))"];
"1000259" [label="(Identifier,nr_sectors)"];
"1000236" [label="(Identifier,overhead)"];
"1000244" [label="(Identifier,length)"];
"1000249" [label="(Identifier,info)"];
"1000176" [label="(ControlStructure,if (fit_image_get_load(fit, node, &load_addr)))"];
"1000233" [label="(Identifier,length)"];
"1000103" [label="(MethodParameterIn,struct spl_load_info *info)"];
"1000106" [label="(MethodParameterIn,ulong base_offset)"];
"1000121" [label="(Identifier,align_len)"];
"1000387" [label="(MethodReturn,static int)"];
"1000235" [label="(Call,overhead = get_aligned_image_overhead(info, offset))"];
"1000231" [label="(Identifier,~align_len)"];
"1000245" [label="(Identifier,offset)"];
"1000242" [label="(Call,get_aligned_image_size(info, length, offset))"];
"1000215" [label="(Block,)"];
"1000237" [label="(Call,get_aligned_image_overhead(info, offset))"];
"1000206" [label="(Block,)"];
"1000228" [label="(Call,load_addr + align_len)"];
"1000238" [label="(Identifier,info)"];
"1000293" [label="(Call,debug(\"Embedded data: dst=%lx, size=%lx\n\", load_addr,\n\t\t      (unsigned long)length))"];
"1000243" [label="(Identifier,info)"];
"1000232" [label="(Call,length = len)"];
"1000340" [label="(Call,(void *)load_addr)"];
"1000109" [label="(Block,)"];
"1000122" [label="(Call,ARCH_DMA_MINALIGN - 1)"];
"1000225" [label="(Call,load_ptr = (load_addr + align_len) & ~align_len)"];
"1000208" [label="(Identifier,offset)"];
"1000246" [label="(ControlStructure,if (info->read(info,\n\t\t\t       sector + get_aligned_image_offset(info, offset),\n\t\t\t       nr_sectors, (void *)load_ptr) != nr_sectors))"];
"1000262" [label="(Identifier,EIO)"];
"1000104" [label="(MethodParameterIn,ulong sector)"];
"1000207" [label="(Call,offset += base_offset)"];
"1000263" [label="(Call,debug(\"External data: dst=%lx, offset=%x, size=%lx\n\",\n\t\t      load_ptr, offset, (unsigned long)length))"];
"1000248" -> "1000247"  [label="AST: "];
"1000248" -> "1000256"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="AST: "];
"1000255" -> "1000248"  [label="AST: "];
"1000256" -> "1000248"  [label="AST: "];
"1000259" -> "1000248"  [label="CFG: "];
"1000248" -> "1000387"  [label="DDG: "];
"1000248" -> "1000387"  [label="DDG: "];
"1000248" -> "1000387"  [label="DDG: "];
"1000248" -> "1000247"  [label="DDG: "];
"1000248" -> "1000247"  [label="DDG: "];
"1000248" -> "1000247"  [label="DDG: "];
"1000248" -> "1000247"  [label="DDG: "];
"1000252" -> "1000248"  [label="DDG: "];
"1000252" -> "1000248"  [label="DDG: "];
"1000103" -> "1000248"  [label="DDG: "];
"1000104" -> "1000248"  [label="DDG: "];
"1000240" -> "1000248"  [label="DDG: "];
"1000256" -> "1000248"  [label="DDG: "];
"1000252" -> "1000250"  [label="AST: "];
"1000252" -> "1000254"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000254" -> "1000252"  [label="AST: "];
"1000250" -> "1000252"  [label="CFG: "];
"1000252" -> "1000387"  [label="DDG: "];
"1000252" -> "1000250"  [label="DDG: "];
"1000252" -> "1000250"  [label="DDG: "];
"1000242" -> "1000252"  [label="DDG: "];
"1000242" -> "1000252"  [label="DDG: "];
"1000103" -> "1000252"  [label="DDG: "];
"1000252" -> "1000263"  [label="DDG: "];
"1000242" -> "1000240"  [label="AST: "];
"1000242" -> "1000245"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000244" -> "1000242"  [label="AST: "];
"1000245" -> "1000242"  [label="AST: "];
"1000240" -> "1000242"  [label="CFG: "];
"1000242" -> "1000387"  [label="DDG: "];
"1000242" -> "1000240"  [label="DDG: "];
"1000242" -> "1000240"  [label="DDG: "];
"1000242" -> "1000240"  [label="DDG: "];
"1000237" -> "1000242"  [label="DDG: "];
"1000237" -> "1000242"  [label="DDG: "];
"1000103" -> "1000242"  [label="DDG: "];
"1000232" -> "1000242"  [label="DDG: "];
"1000242" -> "1000267"  [label="DDG: "];
"1000237" -> "1000235"  [label="AST: "];
"1000237" -> "1000239"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000239" -> "1000237"  [label="AST: "];
"1000235" -> "1000237"  [label="CFG: "];
"1000237" -> "1000235"  [label="DDG: "];
"1000237" -> "1000235"  [label="DDG: "];
"1000103" -> "1000237"  [label="DDG: "];
"1000207" -> "1000237"  [label="DDG: "];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000387"  [label="DDG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000207" -> "1000209"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000209" -> "1000207"  [label="AST: "];
"1000211" -> "1000207"  [label="CFG: "];
"1000207" -> "1000387"  [label="DDG: "];
"1000207" -> "1000387"  [label="DDG: "];
"1000106" -> "1000207"  [label="DDG: "];
"1000106" -> "1000102"  [label="AST: "];
"1000106" -> "1000387"  [label="DDG: "];
"1000232" -> "1000215"  [label="AST: "];
"1000232" -> "1000234"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000234" -> "1000232"  [label="AST: "];
"1000236" -> "1000232"  [label="CFG: "];
"1000232" -> "1000387"  [label="DDG: "];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1000387"  [label="DDG: "];
"1000104" -> "1000250"  [label="DDG: "];
"1000240" -> "1000215"  [label="AST: "];
"1000241" -> "1000240"  [label="AST: "];
"1000249" -> "1000240"  [label="CFG: "];
"1000240" -> "1000387"  [label="DDG: "];
"1000256" -> "1000258"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000258" -> "1000256"  [label="AST: "];
"1000256" -> "1000387"  [label="DDG: "];
"1000225" -> "1000256"  [label="DDG: "];
"1000256" -> "1000263"  [label="DDG: "];
"1000225" -> "1000215"  [label="AST: "];
"1000225" -> "1000227"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000227" -> "1000225"  [label="AST: "];
"1000233" -> "1000225"  [label="CFG: "];
"1000225" -> "1000387"  [label="DDG: "];
"1000227" -> "1000225"  [label="DDG: "];
"1000227" -> "1000225"  [label="DDG: "];
"1000227" -> "1000231"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000231" -> "1000227"  [label="AST: "];
"1000227" -> "1000387"  [label="DDG: "];
"1000227" -> "1000387"  [label="DDG: "];
"1000182" -> "1000227"  [label="DDG: "];
"1000120" -> "1000227"  [label="DDG: "];
"1000182" -> "1000176"  [label="AST: "];
"1000182" -> "1000184"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000184" -> "1000182"  [label="AST: "];
"1000190" -> "1000182"  [label="CFG: "];
"1000182" -> "1000387"  [label="DDG: "];
"1000182" -> "1000387"  [label="DDG: "];
"1000182" -> "1000228"  [label="DDG: "];
"1000182" -> "1000293"  [label="DDG: "];
"1000182" -> "1000340"  [label="DDG: "];
"1000182" -> "1000359"  [label="DDG: "];
"1000120" -> "1000109"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000122" -> "1000120"  [label="AST: "];
"1000127" -> "1000120"  [label="CFG: "];
"1000120" -> "1000387"  [label="DDG: "];
"1000120" -> "1000387"  [label="DDG: "];
"1000122" -> "1000120"  [label="DDG: "];
"1000122" -> "1000120"  [label="DDG: "];
"1000120" -> "1000228"  [label="DDG: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000122" -> "1000387"  [label="DDG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000247" -> "1000259"  [label="CFG: "];
"1000259" -> "1000247"  [label="AST: "];
"1000262" -> "1000247"  [label="CFG: "];
"1000264" -> "1000247"  [label="CFG: "];
"1000247" -> "1000387"  [label="DDG: "];
"1000247" -> "1000387"  [label="DDG: "];
"1000247" -> "1000387"  [label="DDG: "];
}
