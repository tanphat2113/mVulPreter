digraph "0_linux_07d86ca93db7e5cdf4743564d98292042ec21af7@API" {
"1000539" [label="(Call,err = snd_usbmidi_create_endpoints_midiman(umidi, &endpoints[0]))"];
"1000541" [label="(Call,snd_usbmidi_create_endpoints_midiman(umidi, &endpoints[0]))"];
"1000518" [label="(Call,snd_usbmidi_create_rawmidi(umidi, out_ports, in_ports))"];
"1000441" [label="(Call,snd_usbmidi_detect_per_port_endpoints(umidi, endpoints))"];
"1000203" [label="(Call,(unsigned long)umidi)"];
"1000129" [label="(Call,!umidi)"];
"1000121" [label="(Call,umidi = kzalloc(sizeof(*umidi), GFP_KERNEL))"];
"1000123" [label="(Call,kzalloc(sizeof(*umidi), GFP_KERNEL))"];
"1000206" [label="(Call,memset(endpoints, 0, sizeof(endpoints)))"];
"1000318" [label="(Call,snd_usbmidi_detect_per_port_endpoints(umidi, endpoints))"];
"1000398" [label="(Call,snd_usbmidi_detect_per_port_endpoints(umidi, endpoints))"];
"1000368" [label="(Call,snd_usbmidi_detect_endpoints(umidi, &endpoints[0], 1))"];
"1000356" [label="(Call,memcpy(&endpoints[0], quirk->data,\n\t\t       sizeof(struct snd_usb_midi_endpoint_info)))"];
"1000454" [label="(Call,snd_usbmidi_detect_per_port_endpoints(umidi, endpoints))"];
"1000222" [label="(Call,snd_usbmidi_get_ms_info(umidi, endpoints))"];
"1000281" [label="(Call,snd_usbmidi_detect_roland(umidi, &endpoints[0]))"];
"1000260" [label="(Call,snd_usbmidi_detect_endpoints(umidi, &endpoints[0], 1))"];
"1000248" [label="(Call,memcpy(&endpoints[0], quirk->data,\n\t\t       sizeof(struct snd_usb_midi_endpoint_info)))"];
"1000385" [label="(Call,snd_usbmidi_detect_per_port_endpoints(umidi, endpoints))"];
"1000345" [label="(Call,snd_usbmidi_detect_per_port_endpoints(umidi, endpoints))"];
"1000271" [label="(Call,snd_usbmidi_detect_yamaha(umidi, &endpoints[0]))"];
"1000500" [label="(Call,out_ports += hweight16(endpoints[i].out_cables))"];
"1000502" [label="(Call,hweight16(endpoints[i].out_cables))"];
"1000484" [label="(Call,out_ports = 0)"];
"1000508" [label="(Call,in_ports += hweight16(endpoints[i].in_cables))"];
"1000510" [label="(Call,hweight16(endpoints[i].in_cables))"];
"1000487" [label="(Call,in_ports = 0)"];
"1000295" [label="(Call,memcpy(&endpoints[0], quirk->data,\n\t\t       sizeof(struct snd_usb_midi_endpoint_info)))"];
"1000554" [label="(Call,err < 0)"];
"1000560" [label="(Return,return err;)"];
"1000541" [label="(Call,snd_usbmidi_create_endpoints_midiman(umidi, &endpoints[0]))"];
"1000498" [label="(Identifier,i)"];
"1000269" [label="(Call,err = snd_usbmidi_detect_yamaha(umidi, &endpoints[0]))"];
"1000383" [label="(Call,err = snd_usbmidi_detect_per_port_endpoints(umidi, endpoints))"];
"1000114" [label="(Block,)"];
"1000222" [label="(Call,snd_usbmidi_get_ms_info(umidi, endpoints))"];
"1000452" [label="(Call,err = snd_usbmidi_detect_per_port_endpoints(umidi, endpoints))"];
"1000500" [label="(Call,out_ports += hweight16(endpoints[i].out_cables))"];
"1000347" [label="(Identifier,endpoints)"];
"1000554" [label="(Call,err < 0)"];
"1000256" [label="(Call,sizeof(struct snd_usb_midi_endpoint_info))"];
"1000266" [label="(Literal,1)"];
"1000207" [label="(Identifier,endpoints)"];
"1000249" [label="(Call,&endpoints[0])"];
"1000442" [label="(Identifier,umidi)"];
"1000484" [label="(Call,out_ports = 0)"];
"1000262" [label="(Call,&endpoints[0])"];
"1000489" [label="(Literal,0)"];
"1000133" [label="(Identifier,ENOMEM)"];
"1000540" [label="(Identifier,err)"];
"1000283" [label="(Call,&endpoints[0])"];
"1000543" [label="(Call,&endpoints[0])"];
"1000486" [label="(Literal,0)"];
"1000521" [label="(Identifier,in_ports)"];
"1000487" [label="(Call,in_ports = 0)"];
"1000499" [label="(Block,)"];
"1000518" [label="(Call,snd_usbmidi_create_rawmidi(umidi, out_ports, in_ports))"];
"1000129" [label="(Call,!umidi)"];
"1000516" [label="(Call,err = snd_usbmidi_create_rawmidi(umidi, out_ports, in_ports))"];
"1000455" [label="(Identifier,umidi)"];
"1000123" [label="(Call,kzalloc(sizeof(*umidi), GFP_KERNEL))"];
"1000370" [label="(Call,&endpoints[0])"];
"1000259" [label="(Identifier,err)"];
"1000127" [label="(Identifier,GFP_KERNEL)"];
"1000356" [label="(Call,memcpy(&endpoints[0], quirk->data,\n\t\t       sizeof(struct snd_usb_midi_endpoint_info)))"];
"1000124" [label="(Call,sizeof(*umidi))"];
"1000319" [label="(Identifier,umidi)"];
"1000561" [label="(Identifier,err)"];
"1000271" [label="(Call,snd_usbmidi_detect_yamaha(umidi, &endpoints[0]))"];
"1000550" [label="(Call,snd_usbmidi_create_endpoints(umidi, endpoints))"];
"1000316" [label="(Call,err = snd_usbmidi_detect_per_port_endpoints(umidi, endpoints))"];
"1000343" [label="(Call,err = snd_usbmidi_detect_per_port_endpoints(umidi, endpoints))"];
"1000501" [label="(Identifier,out_ports)"];
"1000508" [label="(Call,in_ports += hweight16(endpoints[i].in_cables))"];
"1000303" [label="(Call,sizeof(struct snd_usb_midi_endpoint_info))"];
"1000560" [label="(Return,return err;)"];
"1000128" [label="(ControlStructure,if (!umidi))"];
"1000398" [label="(Call,snd_usbmidi_detect_per_port_endpoints(umidi, endpoints))"];
"1000205" [label="(Identifier,umidi)"];
"1000519" [label="(Identifier,umidi)"];
"1000509" [label="(Identifier,in_ports)"];
"1000203" [label="(Call,(unsigned long)umidi)"];
"1000555" [label="(Identifier,err)"];
"1000261" [label="(Identifier,umidi)"];
"1000130" [label="(Identifier,umidi)"];
"1000367" [label="(Identifier,err)"];
"1000441" [label="(Call,snd_usbmidi_detect_per_port_endpoints(umidi, endpoints))"];
"1000260" [label="(Call,snd_usbmidi_detect_endpoints(umidi, &endpoints[0], 1))"];
"1000273" [label="(Call,&endpoints[0])"];
"1000558" [label="(Call,snd_usbmidi_free(umidi))"];
"1000345" [label="(Call,snd_usbmidi_detect_per_port_endpoints(umidi, endpoints))"];
"1000122" [label="(Identifier,umidi)"];
"1000318" [label="(Call,snd_usbmidi_detect_per_port_endpoints(umidi, endpoints))"];
"1000542" [label="(Identifier,umidi)"];
"1000480" [label="(Call,kfree(umidi))"];
"1000456" [label="(Identifier,endpoints)"];
"1000385" [label="(Call,snd_usbmidi_detect_per_port_endpoints(umidi, endpoints))"];
"1000213" [label="(Identifier,quirk)"];
"1000520" [label="(Identifier,out_ports)"];
"1000208" [label="(Literal,0)"];
"1000364" [label="(Call,sizeof(struct snd_usb_midi_endpoint_info))"];
"1000400" [label="(Identifier,endpoints)"];
"1000306" [label="(Identifier,err)"];
"1000366" [label="(Call,err = snd_usbmidi_detect_endpoints(umidi, &endpoints[0], 1))"];
"1000368" [label="(Call,snd_usbmidi_detect_endpoints(umidi, &endpoints[0], 1))"];
"1000454" [label="(Call,snd_usbmidi_detect_per_port_endpoints(umidi, endpoints))"];
"1000492" [label="(Identifier,i)"];
"1000511" [label="(Call,endpoints[i].in_cables)"];
"1000121" [label="(Call,umidi = kzalloc(sizeof(*umidi), GFP_KERNEL))"];
"1000548" [label="(Call,err = snd_usbmidi_create_endpoints(umidi, endpoints))"];
"1000295" [label="(Call,memcpy(&endpoints[0], quirk->data,\n\t\t       sizeof(struct snd_usb_midi_endpoint_info)))"];
"1000539" [label="(Call,err = snd_usbmidi_create_endpoints_midiman(umidi, &endpoints[0]))"];
"1000556" [label="(Literal,0)"];
"1000220" [label="(Call,err = snd_usbmidi_get_ms_info(umidi, endpoints))"];
"1000399" [label="(Identifier,umidi)"];
"1000272" [label="(Identifier,umidi)"];
"1000258" [label="(Call,err = snd_usbmidi_detect_endpoints(umidi, &endpoints[0], 1))"];
"1000300" [label="(Call,quirk->data)"];
"1000346" [label="(Identifier,umidi)"];
"1000531" [label="(ControlStructure,if (quirk && quirk->type == QUIRK_MIDI_MIDIMAN))"];
"1000281" [label="(Call,snd_usbmidi_detect_roland(umidi, &endpoints[0]))"];
"1000197" [label="(Call,setup_timer(&umidi->error_timer, snd_usbmidi_error_timer,\n\t\t    (unsigned long)umidi))"];
"1000357" [label="(Call,&endpoints[0])"];
"1000223" [label="(Identifier,umidi)"];
"1000296" [label="(Call,&endpoints[0])"];
"1000559" [label="(Identifier,umidi)"];
"1000218" [label="(Block,)"];
"1000485" [label="(Identifier,out_ports)"];
"1000206" [label="(Call,memset(endpoints, 0, sizeof(endpoints)))"];
"1000553" [label="(ControlStructure,if (err < 0))"];
"1000488" [label="(Identifier,in_ports)"];
"1000387" [label="(Identifier,endpoints)"];
"1000248" [label="(Call,memcpy(&endpoints[0], quirk->data,\n\t\t       sizeof(struct snd_usb_midi_endpoint_info)))"];
"1000527" [label="(Call,kfree(umidi))"];
"1000386" [label="(Identifier,umidi)"];
"1000502" [label="(Call,hweight16(endpoints[i].out_cables))"];
"1000361" [label="(Call,quirk->data)"];
"1000279" [label="(Call,err = snd_usbmidi_detect_roland(umidi, &endpoints[0]))"];
"1000564" [label="(Identifier,umidi)"];
"1000224" [label="(Identifier,endpoints)"];
"1000209" [label="(Call,sizeof(endpoints))"];
"1000369" [label="(Identifier,umidi)"];
"1000557" [label="(Block,)"];
"1000136" [label="(Identifier,umidi)"];
"1000253" [label="(Call,quirk->data)"];
"1000374" [label="(Literal,1)"];
"1000503" [label="(Call,endpoints[i].out_cables)"];
"1000396" [label="(Call,err = snd_usbmidi_detect_per_port_endpoints(umidi, endpoints))"];
"1000510" [label="(Call,hweight16(endpoints[i].in_cables))"];
"1000574" [label="(MethodReturn,int)"];
"1000282" [label="(Identifier,umidi)"];
"1000439" [label="(Call,err = snd_usbmidi_detect_per_port_endpoints(umidi, endpoints))"];
"1000320" [label="(Identifier,endpoints)"];
"1000443" [label="(Identifier,endpoints)"];
"1000539" -> "1000531"  [label="AST: "];
"1000539" -> "1000541"  [label="CFG: "];
"1000540" -> "1000539"  [label="AST: "];
"1000541" -> "1000539"  [label="AST: "];
"1000555" -> "1000539"  [label="CFG: "];
"1000539" -> "1000574"  [label="DDG: snd_usbmidi_create_endpoints_midiman(umidi, &endpoints[0])"];
"1000541" -> "1000539"  [label="DDG: umidi"];
"1000541" -> "1000539"  [label="DDG: &endpoints[0]"];
"1000539" -> "1000554"  [label="DDG: err"];
"1000541" -> "1000543"  [label="CFG: "];
"1000542" -> "1000541"  [label="AST: "];
"1000543" -> "1000541"  [label="AST: "];
"1000541" -> "1000574"  [label="DDG: umidi"];
"1000541" -> "1000574"  [label="DDG: &endpoints[0]"];
"1000518" -> "1000541"  [label="DDG: umidi"];
"1000368" -> "1000541"  [label="DDG: &endpoints[0]"];
"1000295" -> "1000541"  [label="DDG: &endpoints[0]"];
"1000260" -> "1000541"  [label="DDG: &endpoints[0]"];
"1000271" -> "1000541"  [label="DDG: &endpoints[0]"];
"1000281" -> "1000541"  [label="DDG: &endpoints[0]"];
"1000541" -> "1000558"  [label="DDG: umidi"];
"1000518" -> "1000516"  [label="AST: "];
"1000518" -> "1000521"  [label="CFG: "];
"1000519" -> "1000518"  [label="AST: "];
"1000520" -> "1000518"  [label="AST: "];
"1000521" -> "1000518"  [label="AST: "];
"1000516" -> "1000518"  [label="CFG: "];
"1000518" -> "1000574"  [label="DDG: out_ports"];
"1000518" -> "1000574"  [label="DDG: in_ports"];
"1000518" -> "1000516"  [label="DDG: umidi"];
"1000518" -> "1000516"  [label="DDG: out_ports"];
"1000518" -> "1000516"  [label="DDG: in_ports"];
"1000441" -> "1000518"  [label="DDG: umidi"];
"1000318" -> "1000518"  [label="DDG: umidi"];
"1000203" -> "1000518"  [label="DDG: umidi"];
"1000398" -> "1000518"  [label="DDG: umidi"];
"1000368" -> "1000518"  [label="DDG: umidi"];
"1000454" -> "1000518"  [label="DDG: umidi"];
"1000222" -> "1000518"  [label="DDG: umidi"];
"1000281" -> "1000518"  [label="DDG: umidi"];
"1000260" -> "1000518"  [label="DDG: umidi"];
"1000385" -> "1000518"  [label="DDG: umidi"];
"1000345" -> "1000518"  [label="DDG: umidi"];
"1000271" -> "1000518"  [label="DDG: umidi"];
"1000500" -> "1000518"  [label="DDG: out_ports"];
"1000484" -> "1000518"  [label="DDG: out_ports"];
"1000508" -> "1000518"  [label="DDG: in_ports"];
"1000487" -> "1000518"  [label="DDG: in_ports"];
"1000518" -> "1000527"  [label="DDG: umidi"];
"1000518" -> "1000550"  [label="DDG: umidi"];
"1000441" -> "1000439"  [label="AST: "];
"1000441" -> "1000443"  [label="CFG: "];
"1000442" -> "1000441"  [label="AST: "];
"1000443" -> "1000441"  [label="AST: "];
"1000439" -> "1000441"  [label="CFG: "];
"1000441" -> "1000574"  [label="DDG: endpoints"];
"1000441" -> "1000439"  [label="DDG: umidi"];
"1000441" -> "1000439"  [label="DDG: endpoints"];
"1000203" -> "1000441"  [label="DDG: umidi"];
"1000206" -> "1000441"  [label="DDG: endpoints"];
"1000441" -> "1000480"  [label="DDG: umidi"];
"1000441" -> "1000550"  [label="DDG: endpoints"];
"1000203" -> "1000197"  [label="AST: "];
"1000203" -> "1000205"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000203"  [label="AST: "];
"1000197" -> "1000203"  [label="CFG: "];
"1000203" -> "1000197"  [label="DDG: umidi"];
"1000129" -> "1000203"  [label="DDG: umidi"];
"1000203" -> "1000222"  [label="DDG: umidi"];
"1000203" -> "1000260"  [label="DDG: umidi"];
"1000203" -> "1000271"  [label="DDG: umidi"];
"1000203" -> "1000281"  [label="DDG: umidi"];
"1000203" -> "1000318"  [label="DDG: umidi"];
"1000203" -> "1000345"  [label="DDG: umidi"];
"1000203" -> "1000368"  [label="DDG: umidi"];
"1000203" -> "1000385"  [label="DDG: umidi"];
"1000203" -> "1000398"  [label="DDG: umidi"];
"1000203" -> "1000454"  [label="DDG: umidi"];
"1000203" -> "1000480"  [label="DDG: umidi"];
"1000129" -> "1000128"  [label="AST: "];
"1000129" -> "1000130"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000133" -> "1000129"  [label="CFG: "];
"1000136" -> "1000129"  [label="CFG: "];
"1000129" -> "1000574"  [label="DDG: umidi"];
"1000129" -> "1000574"  [label="DDG: !umidi"];
"1000121" -> "1000129"  [label="DDG: umidi"];
"1000121" -> "1000114"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000130" -> "1000121"  [label="CFG: "];
"1000121" -> "1000574"  [label="DDG: kzalloc(sizeof(*umidi), GFP_KERNEL)"];
"1000123" -> "1000121"  [label="DDG: GFP_KERNEL"];
"1000123" -> "1000127"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000127" -> "1000123"  [label="AST: "];
"1000123" -> "1000574"  [label="DDG: GFP_KERNEL"];
"1000206" -> "1000114"  [label="AST: "];
"1000206" -> "1000209"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000206"  [label="AST: "];
"1000209" -> "1000206"  [label="AST: "];
"1000213" -> "1000206"  [label="CFG: "];
"1000206" -> "1000574"  [label="DDG: memset(endpoints, 0, sizeof(endpoints))"];
"1000206" -> "1000574"  [label="DDG: endpoints"];
"1000206" -> "1000222"  [label="DDG: endpoints"];
"1000206" -> "1000318"  [label="DDG: endpoints"];
"1000206" -> "1000345"  [label="DDG: endpoints"];
"1000206" -> "1000385"  [label="DDG: endpoints"];
"1000206" -> "1000398"  [label="DDG: endpoints"];
"1000206" -> "1000454"  [label="DDG: endpoints"];
"1000206" -> "1000550"  [label="DDG: endpoints"];
"1000318" -> "1000316"  [label="AST: "];
"1000318" -> "1000320"  [label="CFG: "];
"1000319" -> "1000318"  [label="AST: "];
"1000320" -> "1000318"  [label="AST: "];
"1000316" -> "1000318"  [label="CFG: "];
"1000318" -> "1000574"  [label="DDG: endpoints"];
"1000318" -> "1000316"  [label="DDG: umidi"];
"1000318" -> "1000316"  [label="DDG: endpoints"];
"1000318" -> "1000480"  [label="DDG: umidi"];
"1000318" -> "1000550"  [label="DDG: endpoints"];
"1000398" -> "1000396"  [label="AST: "];
"1000398" -> "1000400"  [label="CFG: "];
"1000399" -> "1000398"  [label="AST: "];
"1000400" -> "1000398"  [label="AST: "];
"1000396" -> "1000398"  [label="CFG: "];
"1000398" -> "1000574"  [label="DDG: endpoints"];
"1000398" -> "1000396"  [label="DDG: umidi"];
"1000398" -> "1000396"  [label="DDG: endpoints"];
"1000398" -> "1000480"  [label="DDG: umidi"];
"1000398" -> "1000550"  [label="DDG: endpoints"];
"1000368" -> "1000366"  [label="AST: "];
"1000368" -> "1000374"  [label="CFG: "];
"1000369" -> "1000368"  [label="AST: "];
"1000370" -> "1000368"  [label="AST: "];
"1000374" -> "1000368"  [label="AST: "];
"1000366" -> "1000368"  [label="CFG: "];
"1000368" -> "1000574"  [label="DDG: &endpoints[0]"];
"1000368" -> "1000366"  [label="DDG: umidi"];
"1000368" -> "1000366"  [label="DDG: &endpoints[0]"];
"1000368" -> "1000366"  [label="DDG: 1"];
"1000356" -> "1000368"  [label="DDG: &endpoints[0]"];
"1000368" -> "1000480"  [label="DDG: umidi"];
"1000356" -> "1000218"  [label="AST: "];
"1000356" -> "1000364"  [label="CFG: "];
"1000357" -> "1000356"  [label="AST: "];
"1000361" -> "1000356"  [label="AST: "];
"1000364" -> "1000356"  [label="AST: "];
"1000367" -> "1000356"  [label="CFG: "];
"1000356" -> "1000574"  [label="DDG: memcpy(&endpoints[0], quirk->data,\n\t\t       sizeof(struct snd_usb_midi_endpoint_info))"];
"1000356" -> "1000574"  [label="DDG: quirk->data"];
"1000454" -> "1000452"  [label="AST: "];
"1000454" -> "1000456"  [label="CFG: "];
"1000455" -> "1000454"  [label="AST: "];
"1000456" -> "1000454"  [label="AST: "];
"1000452" -> "1000454"  [label="CFG: "];
"1000454" -> "1000574"  [label="DDG: endpoints"];
"1000454" -> "1000452"  [label="DDG: umidi"];
"1000454" -> "1000452"  [label="DDG: endpoints"];
"1000454" -> "1000480"  [label="DDG: umidi"];
"1000454" -> "1000550"  [label="DDG: endpoints"];
"1000222" -> "1000220"  [label="AST: "];
"1000222" -> "1000224"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000224" -> "1000222"  [label="AST: "];
"1000220" -> "1000222"  [label="CFG: "];
"1000222" -> "1000574"  [label="DDG: endpoints"];
"1000222" -> "1000220"  [label="DDG: umidi"];
"1000222" -> "1000220"  [label="DDG: endpoints"];
"1000222" -> "1000480"  [label="DDG: umidi"];
"1000222" -> "1000550"  [label="DDG: endpoints"];
"1000281" -> "1000279"  [label="AST: "];
"1000281" -> "1000283"  [label="CFG: "];
"1000282" -> "1000281"  [label="AST: "];
"1000283" -> "1000281"  [label="AST: "];
"1000279" -> "1000281"  [label="CFG: "];
"1000281" -> "1000574"  [label="DDG: &endpoints[0]"];
"1000281" -> "1000279"  [label="DDG: umidi"];
"1000281" -> "1000279"  [label="DDG: &endpoints[0]"];
"1000281" -> "1000480"  [label="DDG: umidi"];
"1000260" -> "1000258"  [label="AST: "];
"1000260" -> "1000266"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000262" -> "1000260"  [label="AST: "];
"1000266" -> "1000260"  [label="AST: "];
"1000258" -> "1000260"  [label="CFG: "];
"1000260" -> "1000574"  [label="DDG: &endpoints[0]"];
"1000260" -> "1000258"  [label="DDG: umidi"];
"1000260" -> "1000258"  [label="DDG: &endpoints[0]"];
"1000260" -> "1000258"  [label="DDG: 1"];
"1000248" -> "1000260"  [label="DDG: &endpoints[0]"];
"1000260" -> "1000480"  [label="DDG: umidi"];
"1000248" -> "1000218"  [label="AST: "];
"1000248" -> "1000256"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000253" -> "1000248"  [label="AST: "];
"1000256" -> "1000248"  [label="AST: "];
"1000259" -> "1000248"  [label="CFG: "];
"1000248" -> "1000574"  [label="DDG: memcpy(&endpoints[0], quirk->data,\n\t\t       sizeof(struct snd_usb_midi_endpoint_info))"];
"1000248" -> "1000574"  [label="DDG: quirk->data"];
"1000385" -> "1000383"  [label="AST: "];
"1000385" -> "1000387"  [label="CFG: "];
"1000386" -> "1000385"  [label="AST: "];
"1000387" -> "1000385"  [label="AST: "];
"1000383" -> "1000385"  [label="CFG: "];
"1000385" -> "1000574"  [label="DDG: endpoints"];
"1000385" -> "1000383"  [label="DDG: umidi"];
"1000385" -> "1000383"  [label="DDG: endpoints"];
"1000385" -> "1000480"  [label="DDG: umidi"];
"1000385" -> "1000550"  [label="DDG: endpoints"];
"1000345" -> "1000343"  [label="AST: "];
"1000345" -> "1000347"  [label="CFG: "];
"1000346" -> "1000345"  [label="AST: "];
"1000347" -> "1000345"  [label="AST: "];
"1000343" -> "1000345"  [label="CFG: "];
"1000345" -> "1000574"  [label="DDG: endpoints"];
"1000345" -> "1000343"  [label="DDG: umidi"];
"1000345" -> "1000343"  [label="DDG: endpoints"];
"1000345" -> "1000480"  [label="DDG: umidi"];
"1000345" -> "1000550"  [label="DDG: endpoints"];
"1000271" -> "1000269"  [label="AST: "];
"1000271" -> "1000273"  [label="CFG: "];
"1000272" -> "1000271"  [label="AST: "];
"1000273" -> "1000271"  [label="AST: "];
"1000269" -> "1000271"  [label="CFG: "];
"1000271" -> "1000574"  [label="DDG: &endpoints[0]"];
"1000271" -> "1000269"  [label="DDG: umidi"];
"1000271" -> "1000269"  [label="DDG: &endpoints[0]"];
"1000271" -> "1000480"  [label="DDG: umidi"];
"1000500" -> "1000499"  [label="AST: "];
"1000500" -> "1000502"  [label="CFG: "];
"1000501" -> "1000500"  [label="AST: "];
"1000502" -> "1000500"  [label="AST: "];
"1000509" -> "1000500"  [label="CFG: "];
"1000500" -> "1000574"  [label="DDG: hweight16(endpoints[i].out_cables)"];
"1000502" -> "1000500"  [label="DDG: endpoints[i].out_cables"];
"1000484" -> "1000500"  [label="DDG: out_ports"];
"1000502" -> "1000503"  [label="CFG: "];
"1000503" -> "1000502"  [label="AST: "];
"1000502" -> "1000574"  [label="DDG: endpoints[i].out_cables"];
"1000484" -> "1000114"  [label="AST: "];
"1000484" -> "1000486"  [label="CFG: "];
"1000485" -> "1000484"  [label="AST: "];
"1000486" -> "1000484"  [label="AST: "];
"1000488" -> "1000484"  [label="CFG: "];
"1000508" -> "1000499"  [label="AST: "];
"1000508" -> "1000510"  [label="CFG: "];
"1000509" -> "1000508"  [label="AST: "];
"1000510" -> "1000508"  [label="AST: "];
"1000498" -> "1000508"  [label="CFG: "];
"1000508" -> "1000574"  [label="DDG: hweight16(endpoints[i].in_cables)"];
"1000510" -> "1000508"  [label="DDG: endpoints[i].in_cables"];
"1000487" -> "1000508"  [label="DDG: in_ports"];
"1000510" -> "1000511"  [label="CFG: "];
"1000511" -> "1000510"  [label="AST: "];
"1000510" -> "1000574"  [label="DDG: endpoints[i].in_cables"];
"1000487" -> "1000114"  [label="AST: "];
"1000487" -> "1000489"  [label="CFG: "];
"1000488" -> "1000487"  [label="AST: "];
"1000489" -> "1000487"  [label="AST: "];
"1000492" -> "1000487"  [label="CFG: "];
"1000295" -> "1000218"  [label="AST: "];
"1000295" -> "1000303"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000300" -> "1000295"  [label="AST: "];
"1000303" -> "1000295"  [label="AST: "];
"1000306" -> "1000295"  [label="CFG: "];
"1000295" -> "1000574"  [label="DDG: &endpoints[0]"];
"1000295" -> "1000574"  [label="DDG: quirk->data"];
"1000295" -> "1000574"  [label="DDG: memcpy(&endpoints[0], quirk->data,\n\t\t       sizeof(struct snd_usb_midi_endpoint_info))"];
"1000554" -> "1000553"  [label="AST: "];
"1000554" -> "1000556"  [label="CFG: "];
"1000555" -> "1000554"  [label="AST: "];
"1000556" -> "1000554"  [label="AST: "];
"1000559" -> "1000554"  [label="CFG: "];
"1000564" -> "1000554"  [label="CFG: "];
"1000554" -> "1000574"  [label="DDG: err < 0"];
"1000554" -> "1000574"  [label="DDG: err"];
"1000548" -> "1000554"  [label="DDG: err"];
"1000554" -> "1000560"  [label="DDG: err"];
"1000560" -> "1000557"  [label="AST: "];
"1000560" -> "1000561"  [label="CFG: "];
"1000561" -> "1000560"  [label="AST: "];
"1000574" -> "1000560"  [label="CFG: "];
"1000560" -> "1000574"  [label="DDG: <RET>"];
"1000561" -> "1000560"  [label="DDG: err"];
}
