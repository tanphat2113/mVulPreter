digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_19@pointer" {
"1000651" [label="(Call,msg->msg_flags & MSG_PROBE)"];
"1000583" [label="(Call,msg->msg_flags & MSG_CONFIRM)"];
"1000177" [label="(Call,msg->msg_flags & MSG_OOB)"];
"1000594" [label="(Call,ip6_append_data(sk, ip_generic_getfrag, msg,\n\t\t\t      ulen, transhdrlen, hlimit, tclass, opt,\n\t\t\t      &fl6, (struct rt6_info *)dst,\n\t\t\t      msg->msg_flags, dontfrag))"];
"1000592" [label="(Call,err = ip6_append_data(sk, ip_generic_getfrag, msg,\n\t\t\t      ulen, transhdrlen, hlimit, tclass, opt,\n\t\t\t      &fl6, (struct rt6_info *)dst,\n\t\t\t      msg->msg_flags, dontfrag))"];
"1000640" [label="(Call,err < 0)"];
"1000639" [label="(Call,err < 0 ? err : len)"];
"1000638" [label="(Return,return err < 0 ? err : len;)"];
"1000614" [label="(Call,ip6_flush_pending_frames(sk))"];
"1000628" [label="(Call,release_sock(sk))"];
"1000619" [label="(Call,msg->msg_flags & MSG_MORE)"];
"1000618" [label="(Call,!(msg->msg_flags & MSG_MORE))"];
"1000626" [label="(Call,l2tp_ip6_push_pending_frames(sk))"];
"1000624" [label="(Call,err = l2tp_ip6_push_pending_frames(sk))"];
"1000650" [label="(Call,!(msg->msg_flags & MSG_PROBE))"];
"1000649" [label="(Call,!(msg->msg_flags & MSG_PROBE) || len)"];
"1000109" [label="(MethodParameterIn,size_t len)"];
"1000611" [label="(Identifier,dontfrag)"];
"1000565" [label="(Call,tclass < 0)"];
"1000641" [label="(Identifier,err)"];
"1000598" [label="(Identifier,ulen)"];
"1000601" [label="(Identifier,tclass)"];
"1000648" [label="(ControlStructure,if (!(msg->msg_flags & MSG_PROBE) || len))"];
"1000627" [label="(Identifier,sk)"];
"1000625" [label="(Identifier,err)"];
"1000618" [label="(Call,!(msg->msg_flags & MSG_MORE))"];
"1000630" [label="(JumpTarget,done:)"];
"1000617" [label="(ControlStructure,if (!(msg->msg_flags & MSG_MORE)))"];
"1000587" [label="(Identifier,MSG_CONFIRM)"];
"1000548" [label="(Call,err = PTR_ERR(dst))"];
"1000574" [label="(Call,dontfrag < 0)"];
"1000181" [label="(Identifier,MSG_OOB)"];
"1000577" [label="(Call,dontfrag = np->dontfrag)"];
"1000640" [label="(Call,err < 0)"];
"1000184" [label="(Identifier,EOPNOTSUPP)"];
"1000176" [label="(ControlStructure,if (msg->msg_flags & MSG_OOB))"];
"1000662" [label="(MethodReturn,static int)"];
"1000559" [label="(Call,ip6_sk_dst_hoplimit(np, &fl6, dst))"];
"1000642" [label="(Literal,0)"];
"1000623" [label="(Identifier,MSG_MORE)"];
"1000603" [label="(Call,&fl6)"];
"1000652" [label="(Call,msg->msg_flags)"];
"1000599" [label="(Identifier,transhdrlen)"];
"1000159" [label="(Call,transhdrlen = 4)"];
"1000614" [label="(Call,ip6_flush_pending_frames(sk))"];
"1000584" [label="(Call,msg->msg_flags)"];
"1000177" [label="(Call,msg->msg_flags & MSG_OOB)"];
"1000613" [label="(Identifier,err)"];
"1000657" [label="(ControlStructure,goto back_from_confirm;)"];
"1000110" [label="(Block,)"];
"1000596" [label="(Identifier,ip_generic_getfrag)"];
"1000595" [label="(Identifier,sk)"];
"1000589" [label="(JumpTarget,back_from_confirm:)"];
"1000568" [label="(Call,tclass = np->tclass)"];
"1000651" [label="(Call,msg->msg_flags & MSG_PROBE)"];
"1000107" [label="(MethodParameterIn,struct sock *sk)"];
"1000615" [label="(Identifier,sk)"];
"1000554" [label="(Call,hlimit < 0)"];
"1000649" [label="(Call,!(msg->msg_flags & MSG_PROBE) || len)"];
"1000644" [label="(Identifier,len)"];
"1000582" [label="(ControlStructure,if (msg->msg_flags & MSG_CONFIRM))"];
"1000608" [label="(Call,msg->msg_flags)"];
"1000619" [label="(Call,msg->msg_flags & MSG_MORE)"];
"1000626" [label="(Call,l2tp_ip6_push_pending_frames(sk))"];
"1000643" [label="(Identifier,err)"];
"1000602" [label="(Identifier,opt)"];
"1000624" [label="(Call,err = l2tp_ip6_push_pending_frames(sk))"];
"1000620" [label="(Call,msg->msg_flags)"];
"1000656" [label="(Identifier,len)"];
"1000592" [label="(Call,err = ip6_append_data(sk, ip_generic_getfrag, msg,\n\t\t\t      ulen, transhdrlen, hlimit, tclass, opt,\n\t\t\t      &fl6, (struct rt6_info *)dst,\n\t\t\t      msg->msg_flags, dontfrag))"];
"1000612" [label="(ControlStructure,if (err))"];
"1000628" [label="(Call,release_sock(sk))"];
"1000594" [label="(Call,ip6_append_data(sk, ip_generic_getfrag, msg,\n\t\t\t      ulen, transhdrlen, hlimit, tclass, opt,\n\t\t\t      &fl6, (struct rt6_info *)dst,\n\t\t\t      msg->msg_flags, dontfrag))"];
"1000597" [label="(Identifier,msg)"];
"1000361" [label="(Call,ip6_datagram_send_ctl(sock_net(sk), sk, msg, &fl6, opt,\n\t\t\t\t\t    &hlimit, &tclass, &dontfrag))"];
"1000539" [label="(Call,ip6_dst_lookup_flow(sk, &fl6, final_p))"];
"1000593" [label="(Identifier,err)"];
"1000655" [label="(Identifier,MSG_PROBE)"];
"1000600" [label="(Identifier,hlimit)"];
"1000170" [label="(Call,len > INT_MAX)"];
"1000178" [label="(Call,msg->msg_flags)"];
"1000108" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000588" [label="(ControlStructure,goto do_confirm;)"];
"1000583" [label="(Call,msg->msg_flags & MSG_CONFIRM)"];
"1000187" [label="(Identifier,fl6)"];
"1000590" [label="(Call,lock_sock(sk))"];
"1000650" [label="(Call,!(msg->msg_flags & MSG_PROBE))"];
"1000639" [label="(Call,err < 0 ? err : len)"];
"1000495" [label="(Call,fl6_update_dst(&fl6, opt, &final))"];
"1000629" [label="(Identifier,sk)"];
"1000658" [label="(Call,err = 0)"];
"1000638" [label="(Return,return err < 0 ? err : len;)"];
"1000163" [label="(Call,ulen = len + transhdrlen)"];
"1000557" [label="(Call,hlimit = ip6_sk_dst_hoplimit(np, &fl6, dst))"];
"1000659" [label="(Identifier,err)"];
"1000605" [label="(Call,(struct rt6_info *)dst)"];
"1000651" -> "1000650"  [label="AST: "];
"1000651" -> "1000655"  [label="CFG: "];
"1000652" -> "1000651"  [label="AST: "];
"1000655" -> "1000651"  [label="AST: "];
"1000650" -> "1000651"  [label="CFG: "];
"1000651" -> "1000662"  [label="DDG: MSG_PROBE"];
"1000651" -> "1000662"  [label="DDG: msg->msg_flags"];
"1000651" -> "1000594"  [label="DDG: msg->msg_flags"];
"1000651" -> "1000650"  [label="DDG: msg->msg_flags"];
"1000651" -> "1000650"  [label="DDG: MSG_PROBE"];
"1000583" -> "1000651"  [label="DDG: msg->msg_flags"];
"1000583" -> "1000582"  [label="AST: "];
"1000583" -> "1000587"  [label="CFG: "];
"1000584" -> "1000583"  [label="AST: "];
"1000587" -> "1000583"  [label="AST: "];
"1000588" -> "1000583"  [label="CFG: "];
"1000589" -> "1000583"  [label="CFG: "];
"1000583" -> "1000662"  [label="DDG: msg->msg_flags & MSG_CONFIRM"];
"1000583" -> "1000662"  [label="DDG: MSG_CONFIRM"];
"1000177" -> "1000583"  [label="DDG: msg->msg_flags"];
"1000583" -> "1000594"  [label="DDG: msg->msg_flags"];
"1000177" -> "1000176"  [label="AST: "];
"1000177" -> "1000181"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000181" -> "1000177"  [label="AST: "];
"1000184" -> "1000177"  [label="CFG: "];
"1000187" -> "1000177"  [label="CFG: "];
"1000177" -> "1000662"  [label="DDG: msg->msg_flags"];
"1000177" -> "1000662"  [label="DDG: MSG_OOB"];
"1000177" -> "1000662"  [label="DDG: msg->msg_flags & MSG_OOB"];
"1000594" -> "1000592"  [label="AST: "];
"1000594" -> "1000611"  [label="CFG: "];
"1000595" -> "1000594"  [label="AST: "];
"1000596" -> "1000594"  [label="AST: "];
"1000597" -> "1000594"  [label="AST: "];
"1000598" -> "1000594"  [label="AST: "];
"1000599" -> "1000594"  [label="AST: "];
"1000600" -> "1000594"  [label="AST: "];
"1000601" -> "1000594"  [label="AST: "];
"1000602" -> "1000594"  [label="AST: "];
"1000603" -> "1000594"  [label="AST: "];
"1000605" -> "1000594"  [label="AST: "];
"1000608" -> "1000594"  [label="AST: "];
"1000611" -> "1000594"  [label="AST: "];
"1000592" -> "1000594"  [label="CFG: "];
"1000594" -> "1000662"  [label="DDG: transhdrlen"];
"1000594" -> "1000662"  [label="DDG: ulen"];
"1000594" -> "1000662"  [label="DDG: msg"];
"1000594" -> "1000662"  [label="DDG: opt"];
"1000594" -> "1000662"  [label="DDG: hlimit"];
"1000594" -> "1000662"  [label="DDG: msg->msg_flags"];
"1000594" -> "1000662"  [label="DDG: ip_generic_getfrag"];
"1000594" -> "1000662"  [label="DDG: dontfrag"];
"1000594" -> "1000662"  [label="DDG: (struct rt6_info *)dst"];
"1000594" -> "1000662"  [label="DDG: &fl6"];
"1000594" -> "1000662"  [label="DDG: tclass"];
"1000594" -> "1000592"  [label="DDG: msg->msg_flags"];
"1000594" -> "1000592"  [label="DDG: dontfrag"];
"1000594" -> "1000592"  [label="DDG: (struct rt6_info *)dst"];
"1000594" -> "1000592"  [label="DDG: sk"];
"1000594" -> "1000592"  [label="DDG: ulen"];
"1000594" -> "1000592"  [label="DDG: tclass"];
"1000594" -> "1000592"  [label="DDG: opt"];
"1000594" -> "1000592"  [label="DDG: hlimit"];
"1000594" -> "1000592"  [label="DDG: &fl6"];
"1000594" -> "1000592"  [label="DDG: transhdrlen"];
"1000594" -> "1000592"  [label="DDG: msg"];
"1000594" -> "1000592"  [label="DDG: ip_generic_getfrag"];
"1000590" -> "1000594"  [label="DDG: sk"];
"1000107" -> "1000594"  [label="DDG: sk"];
"1000361" -> "1000594"  [label="DDG: msg"];
"1000108" -> "1000594"  [label="DDG: msg"];
"1000163" -> "1000594"  [label="DDG: ulen"];
"1000159" -> "1000594"  [label="DDG: transhdrlen"];
"1000554" -> "1000594"  [label="DDG: hlimit"];
"1000557" -> "1000594"  [label="DDG: hlimit"];
"1000568" -> "1000594"  [label="DDG: tclass"];
"1000565" -> "1000594"  [label="DDG: tclass"];
"1000495" -> "1000594"  [label="DDG: opt"];
"1000539" -> "1000594"  [label="DDG: &fl6"];
"1000559" -> "1000594"  [label="DDG: &fl6"];
"1000605" -> "1000594"  [label="DDG: dst"];
"1000574" -> "1000594"  [label="DDG: dontfrag"];
"1000577" -> "1000594"  [label="DDG: dontfrag"];
"1000594" -> "1000614"  [label="DDG: sk"];
"1000594" -> "1000619"  [label="DDG: msg->msg_flags"];
"1000594" -> "1000626"  [label="DDG: sk"];
"1000594" -> "1000628"  [label="DDG: sk"];
"1000592" -> "1000110"  [label="AST: "];
"1000593" -> "1000592"  [label="AST: "];
"1000613" -> "1000592"  [label="CFG: "];
"1000592" -> "1000662"  [label="DDG: ip6_append_data(sk, ip_generic_getfrag, msg,\n\t\t\t      ulen, transhdrlen, hlimit, tclass, opt,\n\t\t\t      &fl6, (struct rt6_info *)dst,\n\t\t\t      msg->msg_flags, dontfrag)"];
"1000592" -> "1000640"  [label="DDG: err"];
"1000640" -> "1000639"  [label="AST: "];
"1000640" -> "1000642"  [label="CFG: "];
"1000641" -> "1000640"  [label="AST: "];
"1000642" -> "1000640"  [label="AST: "];
"1000643" -> "1000640"  [label="CFG: "];
"1000644" -> "1000640"  [label="CFG: "];
"1000640" -> "1000639"  [label="DDG: err"];
"1000624" -> "1000640"  [label="DDG: err"];
"1000658" -> "1000640"  [label="DDG: err"];
"1000548" -> "1000640"  [label="DDG: err"];
"1000639" -> "1000638"  [label="AST: "];
"1000639" -> "1000643"  [label="CFG: "];
"1000639" -> "1000644"  [label="CFG: "];
"1000643" -> "1000639"  [label="AST: "];
"1000644" -> "1000639"  [label="AST: "];
"1000638" -> "1000639"  [label="CFG: "];
"1000639" -> "1000662"  [label="DDG: err"];
"1000639" -> "1000662"  [label="DDG: err < 0 ? err : len"];
"1000639" -> "1000662"  [label="DDG: err < 0"];
"1000639" -> "1000662"  [label="DDG: len"];
"1000639" -> "1000638"  [label="DDG: err < 0 ? err : len"];
"1000649" -> "1000639"  [label="DDG: len"];
"1000170" -> "1000639"  [label="DDG: len"];
"1000109" -> "1000639"  [label="DDG: len"];
"1000638" -> "1000110"  [label="AST: "];
"1000662" -> "1000638"  [label="CFG: "];
"1000638" -> "1000662"  [label="DDG: <RET>"];
"1000614" -> "1000612"  [label="AST: "];
"1000614" -> "1000615"  [label="CFG: "];
"1000615" -> "1000614"  [label="AST: "];
"1000629" -> "1000614"  [label="CFG: "];
"1000614" -> "1000662"  [label="DDG: ip6_flush_pending_frames(sk)"];
"1000107" -> "1000614"  [label="DDG: sk"];
"1000614" -> "1000628"  [label="DDG: sk"];
"1000628" -> "1000110"  [label="AST: "];
"1000628" -> "1000629"  [label="CFG: "];
"1000629" -> "1000628"  [label="AST: "];
"1000630" -> "1000628"  [label="CFG: "];
"1000628" -> "1000662"  [label="DDG: sk"];
"1000628" -> "1000662"  [label="DDG: release_sock(sk)"];
"1000626" -> "1000628"  [label="DDG: sk"];
"1000107" -> "1000628"  [label="DDG: sk"];
"1000619" -> "1000618"  [label="AST: "];
"1000619" -> "1000623"  [label="CFG: "];
"1000620" -> "1000619"  [label="AST: "];
"1000623" -> "1000619"  [label="AST: "];
"1000618" -> "1000619"  [label="CFG: "];
"1000619" -> "1000662"  [label="DDG: MSG_MORE"];
"1000619" -> "1000662"  [label="DDG: msg->msg_flags"];
"1000619" -> "1000618"  [label="DDG: msg->msg_flags"];
"1000619" -> "1000618"  [label="DDG: MSG_MORE"];
"1000618" -> "1000617"  [label="AST: "];
"1000625" -> "1000618"  [label="CFG: "];
"1000629" -> "1000618"  [label="CFG: "];
"1000618" -> "1000662"  [label="DDG: !(msg->msg_flags & MSG_MORE)"];
"1000618" -> "1000662"  [label="DDG: msg->msg_flags & MSG_MORE"];
"1000626" -> "1000624"  [label="AST: "];
"1000626" -> "1000627"  [label="CFG: "];
"1000627" -> "1000626"  [label="AST: "];
"1000624" -> "1000626"  [label="CFG: "];
"1000626" -> "1000624"  [label="DDG: sk"];
"1000107" -> "1000626"  [label="DDG: sk"];
"1000624" -> "1000617"  [label="AST: "];
"1000625" -> "1000624"  [label="AST: "];
"1000629" -> "1000624"  [label="CFG: "];
"1000624" -> "1000662"  [label="DDG: l2tp_ip6_push_pending_frames(sk)"];
"1000650" -> "1000649"  [label="AST: "];
"1000656" -> "1000650"  [label="CFG: "];
"1000649" -> "1000650"  [label="CFG: "];
"1000650" -> "1000662"  [label="DDG: msg->msg_flags & MSG_PROBE"];
"1000650" -> "1000649"  [label="DDG: msg->msg_flags & MSG_PROBE"];
"1000649" -> "1000648"  [label="AST: "];
"1000649" -> "1000656"  [label="CFG: "];
"1000656" -> "1000649"  [label="AST: "];
"1000657" -> "1000649"  [label="CFG: "];
"1000659" -> "1000649"  [label="CFG: "];
"1000649" -> "1000662"  [label="DDG: !(msg->msg_flags & MSG_PROBE)"];
"1000649" -> "1000662"  [label="DDG: !(msg->msg_flags & MSG_PROBE) || len"];
"1000170" -> "1000649"  [label="DDG: len"];
"1000109" -> "1000649"  [label="DDG: len"];
}
