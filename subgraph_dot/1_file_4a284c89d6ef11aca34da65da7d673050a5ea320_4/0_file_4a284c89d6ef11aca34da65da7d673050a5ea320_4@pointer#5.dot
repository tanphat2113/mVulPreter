digraph "0_file_4a284c89d6ef11aca34da65da7d673050a5ea320_4@pointer" {
"1000238" [label="(Call,cvt_flip(m->in_type, flip))"];
"1000111" [label="(MethodParameterIn,int flip)"];
"1000425" [label="(Call,cvt_flip(m->in_type, flip))"];
"1000423" [label="(Call,in_type = cvt_flip(m->in_type, flip))"];
"1001688" [label="(Call,!flip)"];
"1001686" [label="(Call,flip = !flip)"];
"1001724" [label="(Call,match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,\n\t\t    mode, text, flip, recursion_level, printed_something,\n\t\t    need_separator, returnval))"];
"1001722" [label="(Call,rv = match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,\n\t\t    mode, text, flip, recursion_level, printed_something,\n\t\t    need_separator, returnval))"];
"1001745" [label="(Call,rv != 1)"];
"1001752" [label="(Return,return rv;)"];
"1001776" [label="(Call,mconvert(ms, m, flip))"];
"1001775" [label="(Call,!mconvert(ms, m, flip))"];
"1000948" [label="(JumpTarget,case FILE_OPMODULO:)"];
"1000296" [label="(JumpTarget,case FILE_LONG:)"];
"1001159" [label="(JumpTarget,case FILE_OPADD:)"];
"1000906" [label="(JumpTarget,case FILE_OPOR:)"];
"1000797" [label="(JumpTarget,case FILE_OPMINUS:)"];
"1000612" [label="(JumpTarget,case FILE_OPDIVIDE:)"];
"1001688" [label="(Call,!flip)"];
"1001693" [label="(Identifier,ms)"];
"1001740" [label="(Identifier,recursion_level)"];
"1000304" [label="(JumpTarget,case FILE_BEID3:)"];
"1001738" [label="(Identifier,text)"];
"1001737" [label="(Identifier,mode)"];
"1001741" [label="(Identifier,printed_something)"];
"1000145" [label="(Call,recursion_level >= 20)"];
"1001732" [label="(Identifier,s)"];
"1001783" [label="(Literal,1)"];
"1001026" [label="(JumpTarget,case FILE_OPOR:)"];
"1000591" [label="(JumpTarget,case FILE_OPADD:)"];
"1001411" [label="(Call,mcopy(ms, p, m->type, 0, s, offset, nbytes, count))"];
"1000340" [label="(JumpTarget,case FILE_LELONG:)"];
"1000640" [label="(JumpTarget,case FILE_LESHORT:)"];
"1000375" [label="(JumpTarget,case FILE_MELONG:)"];
"1000619" [label="(JumpTarget,case FILE_OPMODULO:)"];
"1001166" [label="(JumpTarget,case FILE_OPMINUS:)"];
"1001744" [label="(ControlStructure,if (rv != 1))"];
"1000237" [label="(ControlStructure,switch (cvt_flip(m->in_type, flip)))"];
"1001692" [label="(Call,file_magicfind(ms, sbuf, &ml))"];
"1000570" [label="(JumpTarget,case FILE_OPAND:)"];
"1000424" [label="(Identifier,in_type)"];
"1000429" [label="(Identifier,flip)"];
"1000577" [label="(JumpTarget,case FILE_OPOR:)"];
"1001187" [label="(JumpTarget,case FILE_OPMODULO:)"];
"1001262" [label="(JumpTarget,case FILE_OPMINUS:)"];
"1000708" [label="(JumpTarget,case FILE_OPMULTIPLY:)"];
"1001729" [label="(Call,ml.nmagic)"];
"1000485" [label="(JumpTarget,case FILE_OPMINUS:)"];
"1000969" [label="(JumpTarget,case FILE_LELONG:)"];
"1000238" [label="(Call,cvt_flip(m->in_type, flip))"];
"1001779" [label="(Identifier,flip)"];
"1000426" [label="(Call,m->in_type)"];
"1001781" [label="(Literal,0)"];
"1000239" [label="(Call,m->in_type)"];
"1001450" [label="(Call,file_mdump(m))"];
"1000244" [label="(JumpTarget,case FILE_BYTE:)"];
"1000258" [label="(JumpTarget,case FILE_BESHORT:)"];
"1000537" [label="(JumpTarget,case FILE_BESHORT:)"];
"1000251" [label="(JumpTarget,case FILE_SHORT:)"];
"1000193" [label="(Call,fprintf(stderr, \"mget(type=%d, flag=%x, offset=%u, o=%zu, \"\n\t\t    \"nbytes=%zu, count=%u)\n\", m->type, m->flag, offset, o,\n\t\t    nbytes, count))"];
"1000779" [label="(JumpTarget,case FILE_OPXOR:)"];
"1001724" [label="(Call,match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,\n\t\t    mode, text, flip, recursion_level, printed_something,\n\t\t    need_separator, returnval))"];
"1000414" [label="(Identifier,ms)"];
"1001271" [label="(JumpTarget,case FILE_OPMULTIPLY:)"];
"1000431" [label="(JumpTarget,case FILE_BYTE:)"];
"1000913" [label="(JumpTarget,case FILE_OPXOR:)"];
"1000584" [label="(JumpTarget,case FILE_OPXOR:)"];
"1001314" [label="(JumpTarget,default:)"];
"1000422" [label="(ControlStructure,switch (in_type = cvt_flip(m->in_type, flip)))"];
"1001784" [label="(MethodReturn,RET)"];
"1000277" [label="(JumpTarget,case FILE_LESHORT:)"];
"1000899" [label="(JumpTarget,case FILE_OPAND:)"];
"1001180" [label="(JumpTarget,case FILE_OPDIVIDE:)"];
"1001734" [label="(Call,offset + o)"];
"1001208" [label="(JumpTarget,case FILE_LONG:)"];
"1001747" [label="(Literal,1)"];
"1000423" [label="(Call,in_type = cvt_flip(m->in_type, flip))"];
"1001753" [label="(Identifier,rv)"];
"1000467" [label="(JumpTarget,case FILE_OPXOR:)"];
"1001145" [label="(JumpTarget,case FILE_OPOR:)"];
"1000761" [label="(JumpTarget,case FILE_OPAND:)"];
"1000242" [label="(Identifier,flip)"];
"1000934" [label="(JumpTarget,case FILE_OPMULTIPLY:)"];
"1001723" [label="(Identifier,rv)"];
"1001683" [label="(Block,)"];
"1000476" [label="(JumpTarget,case FILE_OPADD:)"];
"1000941" [label="(JumpTarget,case FILE_OPDIVIDE:)"];
"1000425" [label="(Call,cvt_flip(m->in_type, flip))"];
"1000215" [label="(Call,file_mdump(m))"];
"1000605" [label="(JumpTarget,case FILE_OPMULTIPLY:)"];
"1001047" [label="(JumpTarget,case FILE_OPMINUS:)"];
"1001089" [label="(JumpTarget,case FILE_MELONG:)"];
"1001226" [label="(JumpTarget,case FILE_OPAND:)"];
"1001019" [label="(JumpTarget,case FILE_OPAND:)"];
"1000815" [label="(JumpTarget,case FILE_OPDIVIDE:)"];
"1000850" [label="(JumpTarget,case FILE_BEID3:)"];
"1001456" [label="(Block,)"];
"1001778" [label="(Identifier,m)"];
"1001061" [label="(JumpTarget,case FILE_OPDIVIDE:)"];
"1000303" [label="(JumpTarget,case FILE_BELONG:)"];
"1000339" [label="(JumpTarget,case FILE_LEID3:)"];
"1000722" [label="(JumpTarget,case FILE_OPMODULO:)"];
"1000715" [label="(JumpTarget,case FILE_OPDIVIDE:)"];
"1001033" [label="(JumpTarget,case FILE_OPXOR:)"];
"1001235" [label="(JumpTarget,case FILE_OPOR:)"];
"1000920" [label="(JumpTarget,case FILE_OPADD:)"];
"1001742" [label="(Identifier,need_separator)"];
"1001777" [label="(Identifier,ms)"];
"1001253" [label="(JumpTarget,case FILE_OPADD:)"];
"1001746" [label="(Identifier,rv)"];
"1001745" [label="(Call,rv != 1)"];
"1001138" [label="(JumpTarget,case FILE_OPAND:)"];
"1000109" [label="(MethodParameterIn,int mode)"];
"1001739" [label="(Identifier,flip)"];
"1000110" [label="(MethodParameterIn,int text)"];
"1000927" [label="(JumpTarget,case FILE_OPMINUS:)"];
"1000113" [label="(MethodParameterIn,int *printed_something)"];
"1000694" [label="(JumpTarget,case FILE_OPADD:)"];
"1001725" [label="(Identifier,ms)"];
"1001743" [label="(Identifier,returnval)"];
"1000849" [label="(JumpTarget,case FILE_BELONG:)"];
"1000115" [label="(MethodParameterIn,int *returnval)"];
"1000458" [label="(JumpTarget,case FILE_OPOR:)"];
"1000598" [label="(JumpTarget,case FILE_OPMINUS:)"];
"1001040" [label="(JumpTarget,case FILE_OPADD:)"];
"1000107" [label="(MethodParameterIn,size_t o)"];
"1000105" [label="(MethodParameterIn,struct magic *m)"];
"1001054" [label="(JumpTarget,case FILE_OPMULTIPLY:)"];
"1001173" [label="(JumpTarget,case FILE_OPMULTIPLY:)"];
"1000970" [label="(JumpTarget,case FILE_LEID3:)"];
"1000743" [label="(JumpTarget,case FILE_SHORT:)"];
"1000701" [label="(JumpTarget,case FILE_OPMINUS:)"];
"1000104" [label="(MethodParameterIn,const unsigned char *s)"];
"1000494" [label="(JumpTarget,case FILE_OPMULTIPLY:)"];
"1001752" [label="(Return,return rv;)"];
"1001686" [label="(Call,flip = !flip)"];
"1001289" [label="(JumpTarget,case FILE_OPMODULO:)"];
"1001775" [label="(Call,!mconvert(ms, m, flip))"];
"1000824" [label="(JumpTarget,case FILE_OPMODULO:)"];
"1000806" [label="(JumpTarget,case FILE_OPMULTIPLY:)"];
"1001726" [label="(Call,ml.magic)"];
"1000503" [label="(JumpTarget,case FILE_OPDIVIDE:)"];
"1000112" [label="(MethodParameterIn,int recursion_level)"];
"1000158" [label="(Call,mcopy(ms, p, m->type, m->flag & INDIR, s, (uint32_t)(offset + o),\n\t    (uint32_t)nbytes, count))"];
"1000114" [label="(MethodParameterIn,int *need_separator)"];
"1001687" [label="(Identifier,flip)"];
"1000770" [label="(JumpTarget,case FILE_OPOR:)"];
"1000106" [label="(MethodParameterIn,size_t nbytes)"];
"1001068" [label="(JumpTarget,case FILE_OPMODULO:)"];
"1001152" [label="(JumpTarget,case FILE_OPXOR:)"];
"1001689" [label="(Identifier,flip)"];
"1000680" [label="(JumpTarget,case FILE_OPOR:)"];
"1001666" [label="(Call,nbytes < offset)"];
"1000512" [label="(JumpTarget,case FILE_OPMODULO:)"];
"1001280" [label="(JumpTarget,case FILE_OPDIVIDE:)"];
"1001774" [label="(ControlStructure,if (!mconvert(ms, m, flip)))"];
"1000103" [label="(MethodParameterIn,struct magic_set *ms)"];
"1001244" [label="(JumpTarget,case FILE_OPXOR:)"];
"1000788" [label="(JumpTarget,case FILE_OPADD:)"];
"1001733" [label="(Identifier,nbytes)"];
"1001750" [label="(Identifier,need_separator)"];
"1001776" [label="(Call,mconvert(ms, m, flip))"];
"1000687" [label="(JumpTarget,case FILE_OPXOR:)"];
"1001722" [label="(Call,rv = match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,\n\t\t    mode, text, flip, recursion_level, printed_something,\n\t\t    need_separator, returnval))"];
"1000111" [label="(MethodParameterIn,int flip)"];
"1000449" [label="(JumpTarget,case FILE_OPAND:)"];
"1000673" [label="(JumpTarget,case FILE_OPAND:)"];
"1000238" -> "1000237"  [label="AST: "];
"1000238" -> "1000242"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000242" -> "1000238"  [label="AST: "];
"1000244" -> "1000238"  [label="CFG: "];
"1000251" -> "1000238"  [label="CFG: "];
"1000258" -> "1000238"  [label="CFG: "];
"1000277" -> "1000238"  [label="CFG: "];
"1000296" -> "1000238"  [label="CFG: "];
"1000303" -> "1000238"  [label="CFG: "];
"1000304" -> "1000238"  [label="CFG: "];
"1000339" -> "1000238"  [label="CFG: "];
"1000340" -> "1000238"  [label="CFG: "];
"1000375" -> "1000238"  [label="CFG: "];
"1000414" -> "1000238"  [label="CFG: "];
"1000111" -> "1000238"  [label="DDG: flip"];
"1000238" -> "1000425"  [label="DDG: m->in_type"];
"1000238" -> "1000425"  [label="DDG: flip"];
"1000111" -> "1000102"  [label="AST: "];
"1000111" -> "1001784"  [label="DDG: flip"];
"1000111" -> "1000425"  [label="DDG: flip"];
"1000111" -> "1001686"  [label="DDG: flip"];
"1000111" -> "1001688"  [label="DDG: flip"];
"1000111" -> "1001724"  [label="DDG: flip"];
"1000111" -> "1001776"  [label="DDG: flip"];
"1000425" -> "1000423"  [label="AST: "];
"1000425" -> "1000429"  [label="CFG: "];
"1000426" -> "1000425"  [label="AST: "];
"1000429" -> "1000425"  [label="AST: "];
"1000423" -> "1000425"  [label="CFG: "];
"1000425" -> "1001784"  [label="DDG: m->in_type"];
"1000425" -> "1001784"  [label="DDG: flip"];
"1000425" -> "1000423"  [label="DDG: m->in_type"];
"1000425" -> "1000423"  [label="DDG: flip"];
"1000425" -> "1001688"  [label="DDG: flip"];
"1000425" -> "1001724"  [label="DDG: flip"];
"1000425" -> "1001776"  [label="DDG: flip"];
"1000423" -> "1000422"  [label="AST: "];
"1000424" -> "1000423"  [label="AST: "];
"1000431" -> "1000423"  [label="CFG: "];
"1000449" -> "1000423"  [label="CFG: "];
"1000458" -> "1000423"  [label="CFG: "];
"1000467" -> "1000423"  [label="CFG: "];
"1000476" -> "1000423"  [label="CFG: "];
"1000485" -> "1000423"  [label="CFG: "];
"1000494" -> "1000423"  [label="CFG: "];
"1000503" -> "1000423"  [label="CFG: "];
"1000512" -> "1000423"  [label="CFG: "];
"1000537" -> "1000423"  [label="CFG: "];
"1000570" -> "1000423"  [label="CFG: "];
"1000577" -> "1000423"  [label="CFG: "];
"1000584" -> "1000423"  [label="CFG: "];
"1000591" -> "1000423"  [label="CFG: "];
"1000598" -> "1000423"  [label="CFG: "];
"1000605" -> "1000423"  [label="CFG: "];
"1000612" -> "1000423"  [label="CFG: "];
"1000619" -> "1000423"  [label="CFG: "];
"1000640" -> "1000423"  [label="CFG: "];
"1000673" -> "1000423"  [label="CFG: "];
"1000680" -> "1000423"  [label="CFG: "];
"1000687" -> "1000423"  [label="CFG: "];
"1000694" -> "1000423"  [label="CFG: "];
"1000701" -> "1000423"  [label="CFG: "];
"1000708" -> "1000423"  [label="CFG: "];
"1000715" -> "1000423"  [label="CFG: "];
"1000722" -> "1000423"  [label="CFG: "];
"1000743" -> "1000423"  [label="CFG: "];
"1000761" -> "1000423"  [label="CFG: "];
"1000770" -> "1000423"  [label="CFG: "];
"1000779" -> "1000423"  [label="CFG: "];
"1000788" -> "1000423"  [label="CFG: "];
"1000797" -> "1000423"  [label="CFG: "];
"1000806" -> "1000423"  [label="CFG: "];
"1000815" -> "1000423"  [label="CFG: "];
"1000824" -> "1000423"  [label="CFG: "];
"1000849" -> "1000423"  [label="CFG: "];
"1000850" -> "1000423"  [label="CFG: "];
"1000899" -> "1000423"  [label="CFG: "];
"1000906" -> "1000423"  [label="CFG: "];
"1000913" -> "1000423"  [label="CFG: "];
"1000920" -> "1000423"  [label="CFG: "];
"1000927" -> "1000423"  [label="CFG: "];
"1000934" -> "1000423"  [label="CFG: "];
"1000941" -> "1000423"  [label="CFG: "];
"1000948" -> "1000423"  [label="CFG: "];
"1000969" -> "1000423"  [label="CFG: "];
"1000970" -> "1000423"  [label="CFG: "];
"1001019" -> "1000423"  [label="CFG: "];
"1001026" -> "1000423"  [label="CFG: "];
"1001033" -> "1000423"  [label="CFG: "];
"1001040" -> "1000423"  [label="CFG: "];
"1001047" -> "1000423"  [label="CFG: "];
"1001054" -> "1000423"  [label="CFG: "];
"1001061" -> "1000423"  [label="CFG: "];
"1001068" -> "1000423"  [label="CFG: "];
"1001089" -> "1000423"  [label="CFG: "];
"1001138" -> "1000423"  [label="CFG: "];
"1001145" -> "1000423"  [label="CFG: "];
"1001152" -> "1000423"  [label="CFG: "];
"1001159" -> "1000423"  [label="CFG: "];
"1001166" -> "1000423"  [label="CFG: "];
"1001173" -> "1000423"  [label="CFG: "];
"1001180" -> "1000423"  [label="CFG: "];
"1001187" -> "1000423"  [label="CFG: "];
"1001208" -> "1000423"  [label="CFG: "];
"1001226" -> "1000423"  [label="CFG: "];
"1001235" -> "1000423"  [label="CFG: "];
"1001244" -> "1000423"  [label="CFG: "];
"1001253" -> "1000423"  [label="CFG: "];
"1001262" -> "1000423"  [label="CFG: "];
"1001271" -> "1000423"  [label="CFG: "];
"1001280" -> "1000423"  [label="CFG: "];
"1001289" -> "1000423"  [label="CFG: "];
"1001314" -> "1000423"  [label="CFG: "];
"1000423" -> "1001784"  [label="DDG: cvt_flip(m->in_type, flip)"];
"1000423" -> "1001784"  [label="DDG: in_type"];
"1001688" -> "1001686"  [label="AST: "];
"1001688" -> "1001689"  [label="CFG: "];
"1001689" -> "1001688"  [label="AST: "];
"1001686" -> "1001688"  [label="CFG: "];
"1001688" -> "1001686"  [label="DDG: flip"];
"1001686" -> "1001683"  [label="AST: "];
"1001687" -> "1001686"  [label="AST: "];
"1001693" -> "1001686"  [label="CFG: "];
"1001686" -> "1001784"  [label="DDG: !flip"];
"1001686" -> "1001784"  [label="DDG: flip"];
"1001686" -> "1001724"  [label="DDG: flip"];
"1001724" -> "1001722"  [label="AST: "];
"1001724" -> "1001743"  [label="CFG: "];
"1001725" -> "1001724"  [label="AST: "];
"1001726" -> "1001724"  [label="AST: "];
"1001729" -> "1001724"  [label="AST: "];
"1001732" -> "1001724"  [label="AST: "];
"1001733" -> "1001724"  [label="AST: "];
"1001734" -> "1001724"  [label="AST: "];
"1001737" -> "1001724"  [label="AST: "];
"1001738" -> "1001724"  [label="AST: "];
"1001739" -> "1001724"  [label="AST: "];
"1001740" -> "1001724"  [label="AST: "];
"1001741" -> "1001724"  [label="AST: "];
"1001742" -> "1001724"  [label="AST: "];
"1001743" -> "1001724"  [label="AST: "];
"1001722" -> "1001724"  [label="CFG: "];
"1001724" -> "1001784"  [label="DDG: ml.magic"];
"1001724" -> "1001784"  [label="DDG: returnval"];
"1001724" -> "1001784"  [label="DDG: s"];
"1001724" -> "1001784"  [label="DDG: ml.nmagic"];
"1001724" -> "1001784"  [label="DDG: need_separator"];
"1001724" -> "1001784"  [label="DDG: ms"];
"1001724" -> "1001784"  [label="DDG: offset + o"];
"1001724" -> "1001784"  [label="DDG: printed_something"];
"1001724" -> "1001784"  [label="DDG: recursion_level"];
"1001724" -> "1001784"  [label="DDG: mode"];
"1001724" -> "1001784"  [label="DDG: text"];
"1001724" -> "1001784"  [label="DDG: nbytes"];
"1001724" -> "1001784"  [label="DDG: flip"];
"1001724" -> "1001722"  [label="DDG: offset + o"];
"1001724" -> "1001722"  [label="DDG: returnval"];
"1001724" -> "1001722"  [label="DDG: flip"];
"1001724" -> "1001722"  [label="DDG: ml.magic"];
"1001724" -> "1001722"  [label="DDG: recursion_level"];
"1001724" -> "1001722"  [label="DDG: printed_something"];
"1001724" -> "1001722"  [label="DDG: text"];
"1001724" -> "1001722"  [label="DDG: need_separator"];
"1001724" -> "1001722"  [label="DDG: ml.nmagic"];
"1001724" -> "1001722"  [label="DDG: nbytes"];
"1001724" -> "1001722"  [label="DDG: ms"];
"1001724" -> "1001722"  [label="DDG: s"];
"1001724" -> "1001722"  [label="DDG: mode"];
"1001692" -> "1001724"  [label="DDG: ms"];
"1000103" -> "1001724"  [label="DDG: ms"];
"1000158" -> "1001724"  [label="DDG: s"];
"1001411" -> "1001724"  [label="DDG: s"];
"1000104" -> "1001724"  [label="DDG: s"];
"1001666" -> "1001724"  [label="DDG: nbytes"];
"1001666" -> "1001724"  [label="DDG: offset"];
"1000106" -> "1001724"  [label="DDG: nbytes"];
"1000193" -> "1001724"  [label="DDG: o"];
"1000107" -> "1001724"  [label="DDG: o"];
"1000109" -> "1001724"  [label="DDG: mode"];
"1000110" -> "1001724"  [label="DDG: text"];
"1000145" -> "1001724"  [label="DDG: recursion_level"];
"1000112" -> "1001724"  [label="DDG: recursion_level"];
"1000113" -> "1001724"  [label="DDG: printed_something"];
"1000114" -> "1001724"  [label="DDG: need_separator"];
"1000115" -> "1001724"  [label="DDG: returnval"];
"1001722" -> "1001456"  [label="AST: "];
"1001723" -> "1001722"  [label="AST: "];
"1001746" -> "1001722"  [label="CFG: "];
"1001722" -> "1001784"  [label="DDG: match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,\n\t\t    mode, text, flip, recursion_level, printed_something,\n\t\t    need_separator, returnval)"];
"1001722" -> "1001745"  [label="DDG: rv"];
"1001745" -> "1001744"  [label="AST: "];
"1001745" -> "1001747"  [label="CFG: "];
"1001746" -> "1001745"  [label="AST: "];
"1001747" -> "1001745"  [label="AST: "];
"1001750" -> "1001745"  [label="CFG: "];
"1001753" -> "1001745"  [label="CFG: "];
"1001745" -> "1001784"  [label="DDG: rv"];
"1001745" -> "1001784"  [label="DDG: rv != 1"];
"1001745" -> "1001752"  [label="DDG: rv"];
"1001752" -> "1001456"  [label="AST: "];
"1001752" -> "1001753"  [label="CFG: "];
"1001753" -> "1001752"  [label="AST: "];
"1001784" -> "1001752"  [label="CFG: "];
"1001752" -> "1001784"  [label="DDG: <RET>"];
"1001753" -> "1001752"  [label="DDG: rv"];
"1001776" -> "1001775"  [label="AST: "];
"1001776" -> "1001779"  [label="CFG: "];
"1001777" -> "1001776"  [label="AST: "];
"1001778" -> "1001776"  [label="AST: "];
"1001779" -> "1001776"  [label="AST: "];
"1001775" -> "1001776"  [label="CFG: "];
"1001776" -> "1001784"  [label="DDG: m"];
"1001776" -> "1001784"  [label="DDG: ms"];
"1001776" -> "1001784"  [label="DDG: flip"];
"1001776" -> "1001775"  [label="DDG: ms"];
"1001776" -> "1001775"  [label="DDG: m"];
"1001776" -> "1001775"  [label="DDG: flip"];
"1000158" -> "1001776"  [label="DDG: ms"];
"1001411" -> "1001776"  [label="DDG: ms"];
"1000103" -> "1001776"  [label="DDG: ms"];
"1001450" -> "1001776"  [label="DDG: m"];
"1000215" -> "1001776"  [label="DDG: m"];
"1000105" -> "1001776"  [label="DDG: m"];
"1001775" -> "1001774"  [label="AST: "];
"1001781" -> "1001775"  [label="CFG: "];
"1001783" -> "1001775"  [label="CFG: "];
"1001775" -> "1001784"  [label="DDG: !mconvert(ms, m, flip)"];
"1001775" -> "1001784"  [label="DDG: mconvert(ms, m, flip)"];
}
