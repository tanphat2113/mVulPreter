digraph "0_openjpeg_afb308b9ccbe129608c9205cf3bb39bbefad90b9@API" {
"1000164" [label="(Call,opj_malloc(l_data_size + 1))"];
"1000141" [label="(Call,l_data_size > p_code_block->data_size)"];
"1000114" [label="(Call,l_data_size = 2 + (OPJ_UINT32)((p_code_block->x1 - p_code_block->x0) *\n                                    (p_code_block->y1 - p_code_block->y0) * (OPJ_INT32)sizeof(OPJ_UINT32)))"];
"1000118" [label="(Call,(OPJ_UINT32)((p_code_block->x1 - p_code_block->x0) *\n                                    (p_code_block->y1 - p_code_block->y0) * (OPJ_INT32)sizeof(OPJ_UINT32)))"];
"1000120" [label="(Call,(p_code_block->x1 - p_code_block->x0) *\n                                    (p_code_block->y1 - p_code_block->y0) * (OPJ_INT32)sizeof(OPJ_UINT32))"];
"1000121" [label="(Call,p_code_block->x1 - p_code_block->x0)"];
"1000128" [label="(Call,(p_code_block->y1 - p_code_block->y0) * (OPJ_INT32)sizeof(OPJ_UINT32))"];
"1000129" [label="(Call,p_code_block->y1 - p_code_block->y0)"];
"1000162" [label="(Call,(OPJ_BYTE*) opj_malloc(l_data_size + 1))"];
"1000158" [label="(Call,p_code_block->data = (OPJ_BYTE*) opj_malloc(l_data_size + 1))"];
"1000169" [label="(Call,! p_code_block->data)"];
"1000193" [label="(Call,p_code_block->data += 1)"];
"1000129" [label="(Call,p_code_block->y1 - p_code_block->y0)"];
"1000128" [label="(Call,(p_code_block->y1 - p_code_block->y0) * (OPJ_INT32)sizeof(OPJ_UINT32))"];
"1000197" [label="(Literal,1)"];
"1000116" [label="(Call,2 + (OPJ_UINT32)((p_code_block->x1 - p_code_block->x0) *\n                                    (p_code_block->y1 - p_code_block->y0) * (OPJ_INT32)sizeof(OPJ_UINT32)))"];
"1000158" [label="(Call,p_code_block->data = (OPJ_BYTE*) opj_malloc(l_data_size + 1))"];
"1000146" [label="(Block,)"];
"1000115" [label="(Identifier,l_data_size)"];
"1000142" [label="(Identifier,l_data_size)"];
"1000162" [label="(Call,(OPJ_BYTE*) opj_malloc(l_data_size + 1))"];
"1000122" [label="(Call,p_code_block->x1)"];
"1000130" [label="(Call,p_code_block->y1)"];
"1000199" [label="(Identifier,OPJ_TRUE)"];
"1000176" [label="(Identifier,p_code_block)"];
"1000194" [label="(Call,p_code_block->data)"];
"1000169" [label="(Call,! p_code_block->data)"];
"1000136" [label="(Call,(OPJ_INT32)sizeof(OPJ_UINT32))"];
"1000125" [label="(Call,p_code_block->x0)"];
"1000170" [label="(Call,p_code_block->data)"];
"1000165" [label="(Call,l_data_size + 1)"];
"1000168" [label="(ControlStructure,if (! p_code_block->data))"];
"1000140" [label="(ControlStructure,if (l_data_size > p_code_block->data_size))"];
"1000143" [label="(Call,p_code_block->data_size)"];
"1000181" [label="(Call,p_code_block->data_size = l_data_size)"];
"1000200" [label="(MethodReturn,static OPJ_BOOL)"];
"1000159" [label="(Call,p_code_block->data)"];
"1000131" [label="(Identifier,p_code_block)"];
"1000149" [label="(Identifier,p_code_block)"];
"1000121" [label="(Call,p_code_block->x1 - p_code_block->x0)"];
"1000133" [label="(Call,p_code_block->y0)"];
"1000164" [label="(Call,opj_malloc(l_data_size + 1))"];
"1000141" [label="(Call,l_data_size > p_code_block->data_size)"];
"1000112" [label="(Block,)"];
"1000186" [label="(Call,p_code_block->data[0] = 0)"];
"1000114" [label="(Call,l_data_size = 2 + (OPJ_UINT32)((p_code_block->x1 - p_code_block->x0) *\n                                    (p_code_block->y1 - p_code_block->y0) * (OPJ_INT32)sizeof(OPJ_UINT32)))"];
"1000183" [label="(Identifier,p_code_block)"];
"1000193" [label="(Call,p_code_block->data += 1)"];
"1000120" [label="(Call,(p_code_block->x1 - p_code_block->x0) *\n                                    (p_code_block->y1 - p_code_block->y0) * (OPJ_INT32)sizeof(OPJ_UINT32))"];
"1000118" [label="(Call,(OPJ_UINT32)((p_code_block->x1 - p_code_block->x0) *\n                                    (p_code_block->y1 - p_code_block->y0) * (OPJ_INT32)sizeof(OPJ_UINT32)))"];
"1000171" [label="(Identifier,p_code_block)"];
"1000164" -> "1000162"  [label="AST: "];
"1000164" -> "1000165"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000162" -> "1000164"  [label="CFG: "];
"1000164" -> "1000200"  [label="DDG: l_data_size + 1"];
"1000164" -> "1000162"  [label="DDG: l_data_size + 1"];
"1000141" -> "1000164"  [label="DDG: l_data_size"];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000149" -> "1000141"  [label="CFG: "];
"1000199" -> "1000141"  [label="CFG: "];
"1000141" -> "1000200"  [label="DDG: l_data_size"];
"1000141" -> "1000200"  [label="DDG: l_data_size > p_code_block->data_size"];
"1000141" -> "1000200"  [label="DDG: p_code_block->data_size"];
"1000114" -> "1000141"  [label="DDG: l_data_size"];
"1000141" -> "1000165"  [label="DDG: l_data_size"];
"1000141" -> "1000181"  [label="DDG: l_data_size"];
"1000114" -> "1000112"  [label="AST: "];
"1000114" -> "1000116"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000142" -> "1000114"  [label="CFG: "];
"1000114" -> "1000200"  [label="DDG: 2 + (OPJ_UINT32)((p_code_block->x1 - p_code_block->x0) *\n                                    (p_code_block->y1 - p_code_block->y0) * (OPJ_INT32)sizeof(OPJ_UINT32))"];
"1000118" -> "1000114"  [label="DDG: (p_code_block->x1 - p_code_block->x0) *\n                                    (p_code_block->y1 - p_code_block->y0) * (OPJ_INT32)sizeof(OPJ_UINT32)"];
"1000118" -> "1000116"  [label="AST: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000118" -> "1000200"  [label="DDG: (p_code_block->x1 - p_code_block->x0) *\n                                    (p_code_block->y1 - p_code_block->y0) * (OPJ_INT32)sizeof(OPJ_UINT32)"];
"1000118" -> "1000116"  [label="DDG: (p_code_block->x1 - p_code_block->x0) *\n                                    (p_code_block->y1 - p_code_block->y0) * (OPJ_INT32)sizeof(OPJ_UINT32)"];
"1000120" -> "1000118"  [label="DDG: p_code_block->x1 - p_code_block->x0"];
"1000120" -> "1000118"  [label="DDG: (p_code_block->y1 - p_code_block->y0) * (OPJ_INT32)sizeof(OPJ_UINT32)"];
"1000120" -> "1000128"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000128" -> "1000120"  [label="AST: "];
"1000120" -> "1000200"  [label="DDG: p_code_block->x1 - p_code_block->x0"];
"1000120" -> "1000200"  [label="DDG: (p_code_block->y1 - p_code_block->y0) * (OPJ_INT32)sizeof(OPJ_UINT32)"];
"1000121" -> "1000120"  [label="DDG: p_code_block->x1"];
"1000121" -> "1000120"  [label="DDG: p_code_block->x0"];
"1000128" -> "1000120"  [label="DDG: p_code_block->y1 - p_code_block->y0"];
"1000128" -> "1000120"  [label="DDG: (OPJ_INT32)sizeof(OPJ_UINT32)"];
"1000121" -> "1000125"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000125" -> "1000121"  [label="AST: "];
"1000131" -> "1000121"  [label="CFG: "];
"1000121" -> "1000200"  [label="DDG: p_code_block->x0"];
"1000121" -> "1000200"  [label="DDG: p_code_block->x1"];
"1000128" -> "1000136"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000136" -> "1000128"  [label="AST: "];
"1000128" -> "1000200"  [label="DDG: p_code_block->y1 - p_code_block->y0"];
"1000128" -> "1000200"  [label="DDG: (OPJ_INT32)sizeof(OPJ_UINT32)"];
"1000129" -> "1000128"  [label="DDG: p_code_block->y1"];
"1000129" -> "1000128"  [label="DDG: p_code_block->y0"];
"1000129" -> "1000133"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000133" -> "1000129"  [label="AST: "];
"1000137" -> "1000129"  [label="CFG: "];
"1000129" -> "1000200"  [label="DDG: p_code_block->y0"];
"1000129" -> "1000200"  [label="DDG: p_code_block->y1"];
"1000162" -> "1000158"  [label="AST: "];
"1000163" -> "1000162"  [label="AST: "];
"1000158" -> "1000162"  [label="CFG: "];
"1000162" -> "1000200"  [label="DDG: opj_malloc(l_data_size + 1)"];
"1000162" -> "1000158"  [label="DDG: opj_malloc(l_data_size + 1)"];
"1000158" -> "1000146"  [label="AST: "];
"1000159" -> "1000158"  [label="AST: "];
"1000171" -> "1000158"  [label="CFG: "];
"1000158" -> "1000200"  [label="DDG: (OPJ_BYTE*) opj_malloc(l_data_size + 1)"];
"1000158" -> "1000169"  [label="DDG: p_code_block->data"];
"1000169" -> "1000168"  [label="AST: "];
"1000169" -> "1000170"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000176" -> "1000169"  [label="CFG: "];
"1000183" -> "1000169"  [label="CFG: "];
"1000169" -> "1000200"  [label="DDG: ! p_code_block->data"];
"1000169" -> "1000200"  [label="DDG: p_code_block->data"];
"1000169" -> "1000193"  [label="DDG: p_code_block->data"];
"1000193" -> "1000146"  [label="AST: "];
"1000193" -> "1000197"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000197" -> "1000193"  [label="AST: "];
"1000199" -> "1000193"  [label="CFG: "];
"1000193" -> "1000200"  [label="DDG: p_code_block->data"];
"1000186" -> "1000193"  [label="DDG: p_code_block->data[0]"];
}
