digraph "1_linux_5b6698b0e4a37053de35cc24ee695b98a7eb712b@integer" {
"1000192" [label="(Call,size = entry->skb->len - hdr_size)"];
"1000194" [label="(Call,entry->skb->len - hdr_size)"];
"1000171" [label="(Call,skb_pull_rcsum(skb_out, hdr_size))"];
"1000154" [label="(Call,pskb_expand_head(skb_out, 0, size - skb->len, GFP_ATOMIC))"];
"1000145" [label="(Call,skb_out = entry->skb)"];
"1000157" [label="(Call,size - skb->len)"];
"1000136" [label="(Call,size > batadv_frag_size_limit())"];
"1000129" [label="(Call,size = ntohs(packet->total_size))"];
"1000131" [label="(Call,ntohs(packet->total_size))"];
"1000118" [label="(Call,hdr_size = sizeof(struct batadv_frag_packet))"];
"1000202" [label="(Call,skb_put(skb_out, size))"];
"1000201" [label="(Call,memcpy(skb_put(skb_out, size), entry->skb->data + hdr_size,\n\t\t       size))"];
"1000216" [label="(Return,return skb_out;)"];
"1000205" [label="(Call,entry->skb->data + hdr_size)"];
"1000109" [label="(Block,)"];
"1000131" [label="(Call,ntohs(packet->total_size))"];
"1000167" [label="(Call,skb_out = NULL)"];
"1000203" [label="(Identifier,skb_out)"];
"1000136" [label="(Call,size > batadv_frag_size_limit())"];
"1000155" [label="(Identifier,skb_out)"];
"1000119" [label="(Identifier,hdr_size)"];
"1000216" [label="(Return,return skb_out;)"];
"1000195" [label="(Call,entry->skb->len)"];
"1000146" [label="(Identifier,skb_out)"];
"1000138" [label="(Call,batadv_frag_size_limit())"];
"1000204" [label="(Identifier,size)"];
"1000139" [label="(ControlStructure,goto free;)"];
"1000173" [label="(Identifier,hdr_size)"];
"1000213" [label="(JumpTarget,free:)"];
"1000192" [label="(Call,size = entry->skb->len - hdr_size)"];
"1000177" [label="(Identifier,skb_out)"];
"1000171" [label="(Call,skb_pull_rcsum(skb_out, hdr_size))"];
"1000201" [label="(Call,memcpy(skb_put(skb_out, size), entry->skb->data + hdr_size,\n\t\t       size))"];
"1000180" [label="(Call,skb_mac_header(skb_out))"];
"1000129" [label="(Call,size = ntohs(packet->total_size))"];
"1000165" [label="(Call,kfree_skb(skb_out))"];
"1000137" [label="(Identifier,size)"];
"1000153" [label="(Call,pskb_expand_head(skb_out, 0, size - skb->len, GFP_ATOMIC) < 0)"];
"1000118" [label="(Call,hdr_size = sizeof(struct batadv_frag_packet))"];
"1000189" [label="(Call,skb_reset_transport_header(skb_out))"];
"1000212" [label="(Identifier,size)"];
"1000156" [label="(Literal,0)"];
"1000193" [label="(Identifier,size)"];
"1000143" [label="(Identifier,entry)"];
"1000157" [label="(Call,size - skb->len)"];
"1000130" [label="(Identifier,size)"];
"1000158" [label="(Identifier,size)"];
"1000172" [label="(Identifier,skb_out)"];
"1000113" [label="(Call,*skb_out = NULL)"];
"1000132" [label="(Call,packet->total_size)"];
"1000202" [label="(Call,skb_put(skb_out, size))"];
"1000217" [label="(Identifier,skb_out)"];
"1000163" [label="(Literal,0)"];
"1000218" [label="(MethodReturn,RET)"];
"1000151" [label="(Identifier,entry)"];
"1000154" [label="(Call,pskb_expand_head(skb_out, 0, size - skb->len, GFP_ATOMIC))"];
"1000147" [label="(Call,entry->skb)"];
"1000159" [label="(Call,skb->len)"];
"1000162" [label="(Identifier,GFP_ATOMIC)"];
"1000208" [label="(Identifier,entry)"];
"1000135" [label="(ControlStructure,if (size > batadv_frag_size_limit()))"];
"1000120" [label="(Call,sizeof(struct batadv_frag_packet))"];
"1000191" [label="(Block,)"];
"1000200" [label="(Identifier,hdr_size)"];
"1000194" [label="(Call,entry->skb->len - hdr_size)"];
"1000145" [label="(Call,skb_out = entry->skb)"];
"1000123" [label="(Identifier,packet)"];
"1000192" -> "1000191"  [label="AST: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000194" -> "1000192"  [label="AST: "];
"1000203" -> "1000192"  [label="CFG: "];
"1000192" -> "1000218"  [label="DDG: entry->skb->len - hdr_size"];
"1000194" -> "1000192"  [label="DDG: entry->skb->len"];
"1000194" -> "1000192"  [label="DDG: hdr_size"];
"1000192" -> "1000202"  [label="DDG: size"];
"1000194" -> "1000200"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000200" -> "1000194"  [label="AST: "];
"1000194" -> "1000218"  [label="DDG: entry->skb->len"];
"1000171" -> "1000194"  [label="DDG: hdr_size"];
"1000194" -> "1000201"  [label="DDG: hdr_size"];
"1000194" -> "1000205"  [label="DDG: hdr_size"];
"1000171" -> "1000109"  [label="AST: "];
"1000171" -> "1000173"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="AST: "];
"1000177" -> "1000171"  [label="CFG: "];
"1000171" -> "1000218"  [label="DDG: skb_pull_rcsum(skb_out, hdr_size)"];
"1000154" -> "1000171"  [label="DDG: skb_out"];
"1000118" -> "1000171"  [label="DDG: hdr_size"];
"1000171" -> "1000180"  [label="DDG: skb_out"];
"1000154" -> "1000153"  [label="AST: "];
"1000154" -> "1000162"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000156" -> "1000154"  [label="AST: "];
"1000157" -> "1000154"  [label="AST: "];
"1000162" -> "1000154"  [label="AST: "];
"1000163" -> "1000154"  [label="CFG: "];
"1000154" -> "1000218"  [label="DDG: size - skb->len"];
"1000154" -> "1000218"  [label="DDG: GFP_ATOMIC"];
"1000154" -> "1000153"  [label="DDG: skb_out"];
"1000154" -> "1000153"  [label="DDG: 0"];
"1000154" -> "1000153"  [label="DDG: size - skb->len"];
"1000154" -> "1000153"  [label="DDG: GFP_ATOMIC"];
"1000145" -> "1000154"  [label="DDG: skb_out"];
"1000157" -> "1000154"  [label="DDG: size"];
"1000157" -> "1000154"  [label="DDG: skb->len"];
"1000154" -> "1000165"  [label="DDG: skb_out"];
"1000145" -> "1000109"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000151" -> "1000145"  [label="CFG: "];
"1000145" -> "1000218"  [label="DDG: entry->skb"];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000162" -> "1000157"  [label="CFG: "];
"1000157" -> "1000218"  [label="DDG: skb->len"];
"1000157" -> "1000218"  [label="DDG: size"];
"1000136" -> "1000157"  [label="DDG: size"];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000138"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000139" -> "1000136"  [label="CFG: "];
"1000143" -> "1000136"  [label="CFG: "];
"1000136" -> "1000218"  [label="DDG: batadv_frag_size_limit()"];
"1000136" -> "1000218"  [label="DDG: size > batadv_frag_size_limit()"];
"1000136" -> "1000218"  [label="DDG: size"];
"1000129" -> "1000136"  [label="DDG: size"];
"1000129" -> "1000109"  [label="AST: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000129"  [label="AST: "];
"1000137" -> "1000129"  [label="CFG: "];
"1000129" -> "1000218"  [label="DDG: ntohs(packet->total_size)"];
"1000131" -> "1000129"  [label="DDG: packet->total_size"];
"1000131" -> "1000132"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000131" -> "1000218"  [label="DDG: packet->total_size"];
"1000118" -> "1000109"  [label="AST: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="AST: "];
"1000123" -> "1000118"  [label="CFG: "];
"1000118" -> "1000218"  [label="DDG: hdr_size"];
"1000202" -> "1000201"  [label="AST: "];
"1000202" -> "1000204"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000208" -> "1000202"  [label="CFG: "];
"1000202" -> "1000218"  [label="DDG: skb_out"];
"1000202" -> "1000201"  [label="DDG: skb_out"];
"1000202" -> "1000201"  [label="DDG: size"];
"1000189" -> "1000202"  [label="DDG: skb_out"];
"1000202" -> "1000216"  [label="DDG: skb_out"];
"1000201" -> "1000191"  [label="AST: "];
"1000201" -> "1000212"  [label="CFG: "];
"1000205" -> "1000201"  [label="AST: "];
"1000212" -> "1000201"  [label="AST: "];
"1000213" -> "1000201"  [label="CFG: "];
"1000201" -> "1000218"  [label="DDG: memcpy(skb_put(skb_out, size), entry->skb->data + hdr_size,\n\t\t       size)"];
"1000201" -> "1000218"  [label="DDG: size"];
"1000201" -> "1000218"  [label="DDG: entry->skb->data + hdr_size"];
"1000201" -> "1000218"  [label="DDG: skb_put(skb_out, size)"];
"1000216" -> "1000109"  [label="AST: "];
"1000216" -> "1000217"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000218" -> "1000216"  [label="CFG: "];
"1000216" -> "1000218"  [label="DDG: <RET>"];
"1000217" -> "1000216"  [label="DDG: skb_out"];
"1000167" -> "1000216"  [label="DDG: skb_out"];
"1000113" -> "1000216"  [label="DDG: skb_out"];
}
