digraph "0_Android_ca8ac8acdad662230ae37998c6c4091bb39402b6_1@API" {
"1000171" [label="(Call,start = readU16(data, kHeaderSize + 2 * (segCount + i)))"];
"1000173" [label="(Call,readU16(data, kHeaderSize + 2 * (segCount + i)))"];
"1000163" [label="(Call,readU16(data, kEndCountOffset + 2 * i))"];
"1000314" [label="(Call,readU16(data, actualRangeOffset))"];
"1000192" [label="(Call,readU16(data, kHeaderSize + 2 * (3 * segCount + i)))"];
"1000104" [label="(MethodParameterIn,const uint8_t* data)"];
"1000196" [label="(Call,2 * (3 * segCount + i))"];
"1000199" [label="(Call,3 * segCount)"];
"1000154" [label="(Call,i < segCount)"];
"1000151" [label="(Call,i = 0)"];
"1000157" [label="(Call,i++)"];
"1000167" [label="(Call,2 * i)"];
"1000290" [label="(Call,6 * segCount)"];
"1000142" [label="(Call,segCount * kSegmentSize)"];
"1000131" [label="(Call,segCount = readU16(data, kSegCountOffset) >> 1)"];
"1000133" [label="(Call,readU16(data, kSegCountOffset) >> 1)"];
"1000134" [label="(Call,readU16(data, kSegCountOffset))"];
"1000108" [label="(Call,kSegCountOffset = 6)"];
"1000120" [label="(Call,kSegmentSize = 8)"];
"1000218" [label="(Call,2 * segCount)"];
"1000285" [label="(Call,actualRangeOffset = kHeaderSize + 6 * segCount + rangeOffset +\n                     (i + j - start) * 2)"];
"1000204" [label="(Call,rangeOffset == 0)"];
"1000190" [label="(Call,rangeOffset = readU16(data, kHeaderSize + 2 * (3 * segCount + i)))"];
"1000295" [label="(Call,(i + j - start) * 2)"];
"1000298" [label="(Call,j - start)"];
"1000276" [label="(Call,j < end + 1)"];
"1000281" [label="(Call,j++)"];
"1000322" [label="(Call,addRange(coverage, j, j + 1))"];
"1000263" [label="(Call,addRange(coverage, j, j + 1))"];
"1000233" [label="(Call,addRange(coverage, start, end + 1))"];
"1000103" [label="(MethodParameterIn,vector<uint32_t>& coverage)"];
"1000229" [label="(Call,end - start)"];
"1000183" [label="(Call,end < start)"];
"1000161" [label="(Call,end = readU16(data, kEndCountOffset + 2 * i))"];
"1000171" [label="(Call,start = readU16(data, kHeaderSize + 2 * (segCount + i)))"];
"1000246" [label="(Call,j < end + 1)"];
"1000251" [label="(Call,j++)"];
"1000243" [label="(Call,j = start)"];
"1000273" [label="(Call,j = start)"];
"1000211" [label="(Call,readU16(data, kHeaderSize + 2 * (2 * segCount + i)))"];
"1000215" [label="(Call,2 * (2 * segCount + i))"];
"1000124" [label="(Call,kEndCountOffset > size)"];
"1000112" [label="(Call,kEndCountOffset = 14)"];
"1000105" [label="(MethodParameterIn,size_t size)"];
"1000116" [label="(Call,kHeaderSize = 16)"];
"1000177" [label="(Call,2 * (segCount + i))"];
"1000224" [label="(Call,(end + delta) & 0xffff)"];
"1000223" [label="(Call,((end + delta) & 0xffff) > end - start)"];
"1000225" [label="(Call,end + delta)"];
"1000256" [label="(Call,(j + delta) & 0xffff)"];
"1000255" [label="(Call,((j + delta) & 0xffff) != 0)"];
"1000257" [label="(Call,j + delta)"];
"1000266" [label="(Call,j + 1)"];
"1000303" [label="(Call,actualRangeOffset + 2 > size)"];
"1000304" [label="(Call,actualRangeOffset + 2)"];
"1000287" [label="(Call,kHeaderSize + 6 * segCount + rangeOffset +\n                     (i + j - start) * 2)"];
"1000289" [label="(Call,6 * segCount + rangeOffset +\n                     (i + j - start) * 2)"];
"1000293" [label="(Call,rangeOffset +\n                     (i + j - start) * 2)"];
"1000209" [label="(Call,delta = readU16(data, kHeaderSize + 2 * (2 * segCount + i)))"];
"1000312" [label="(Call,glyphId = readU16(data, actualRangeOffset))"];
"1000318" [label="(Call,glyphId != 0)"];
"1000296" [label="(Call,i + j - start)"];
"1000325" [label="(Call,j + 1)"];
"1000236" [label="(Call,end + 1)"];
"1000248" [label="(Call,end + 1)"];
"1000278" [label="(Call,end + 1)"];
"1000283" [label="(Block,)"];
"1000133" [label="(Call,readU16(data, kSegCountOffset) >> 1)"];
"1000204" [label="(Call,rangeOffset == 0)"];
"1000224" [label="(Call,(end + delta) & 0xffff)"];
"1000227" [label="(Identifier,delta)"];
"1000124" [label="(Call,kEndCountOffset > size)"];
"1000177" [label="(Call,2 * (segCount + i))"];
"1000241" [label="(ControlStructure,for (uint32_t j = start; j < end + 1; j++))"];
"1000226" [label="(Identifier,end)"];
"1000275" [label="(Identifier,start)"];
"1000137" [label="(Literal,1)"];
"1000279" [label="(Identifier,end)"];
"1000277" [label="(Identifier,j)"];
"1000134" [label="(Call,readU16(data, kSegCountOffset))"];
"1000252" [label="(Identifier,j)"];
"1000118" [label="(Literal,16)"];
"1000203" [label="(ControlStructure,if (rangeOffset == 0))"];
"1000264" [label="(Identifier,coverage)"];
"1000257" [label="(Call,j + delta)"];
"1000250" [label="(Literal,1)"];
"1000129" [label="(Identifier,false)"];
"1000183" [label="(Call,end < start)"];
"1000201" [label="(Identifier,segCount)"];
"1000302" [label="(ControlStructure,if (actualRangeOffset + 2 > size))"];
"1000213" [label="(Call,kHeaderSize + 2 * (2 * segCount + i))"];
"1000233" [label="(Call,addRange(coverage, start, end + 1))"];
"1000301" [label="(Literal,2)"];
"1000135" [label="(Identifier,data)"];
"1000139" [label="(Call,kHeaderSize + segCount * kSegmentSize > size)"];
"1000260" [label="(Literal,0xffff)"];
"1000175" [label="(Call,kHeaderSize + 2 * (segCount + i))"];
"1000298" [label="(Call,j - start)"];
"1000312" [label="(Call,glyphId = readU16(data, actualRangeOffset))"];
"1000297" [label="(Identifier,i)"];
"1000109" [label="(Identifier,kSegCountOffset)"];
"1000132" [label="(Identifier,segCount)"];
"1000268" [label="(Literal,1)"];
"1000325" [label="(Call,j + 1)"];
"1000225" [label="(Call,end + delta)"];
"1000188" [label="(Identifier,false)"];
"1000172" [label="(Identifier,start)"];
"1000246" [label="(Call,j < end + 1)"];
"1000179" [label="(Call,segCount + i)"];
"1000322" [label="(Call,addRange(coverage, j, j + 1))"];
"1000316" [label="(Identifier,actualRangeOffset)"];
"1000131" [label="(Call,segCount = readU16(data, kSegCountOffset) >> 1)"];
"1000222" [label="(ControlStructure,if (((end + delta) & 0xffff) > end - start))"];
"1000185" [label="(Identifier,start)"];
"1000199" [label="(Call,3 * segCount)"];
"1000165" [label="(Call,kEndCountOffset + 2 * i)"];
"1000209" [label="(Call,delta = readU16(data, kHeaderSize + 2 * (2 * segCount + i)))"];
"1000173" [label="(Call,readU16(data, kHeaderSize + 2 * (segCount + i)))"];
"1000116" [label="(Call,kHeaderSize = 16)"];
"1000258" [label="(Identifier,j)"];
"1000330" [label="(MethodReturn,static bool)"];
"1000299" [label="(Identifier,j)"];
"1000194" [label="(Call,kHeaderSize + 2 * (3 * segCount + i))"];
"1000265" [label="(Identifier,j)"];
"1000329" [label="(Identifier,true)"];
"1000168" [label="(Literal,2)"];
"1000324" [label="(Identifier,j)"];
"1000123" [label="(ControlStructure,if (kEndCountOffset > size))"];
"1000286" [label="(Identifier,actualRangeOffset)"];
"1000152" [label="(Identifier,i)"];
"1000212" [label="(Identifier,data)"];
"1000230" [label="(Identifier,end)"];
"1000159" [label="(Block,)"];
"1000198" [label="(Call,3 * segCount + i)"];
"1000140" [label="(Call,kHeaderSize + segCount * kSegmentSize)"];
"1000120" [label="(Call,kSegmentSize = 8)"];
"1000191" [label="(Identifier,rangeOffset)"];
"1000162" [label="(Identifier,end)"];
"1000105" [label="(MethodParameterIn,size_t size)"];
"1000261" [label="(Literal,0)"];
"1000217" [label="(Call,2 * segCount + i)"];
"1000327" [label="(Literal,1)"];
"1000157" [label="(Call,i++)"];
"1000144" [label="(Identifier,kSegmentSize)"];
"1000229" [label="(Call,end - start)"];
"1000259" [label="(Identifier,delta)"];
"1000117" [label="(Identifier,kHeaderSize)"];
"1000235" [label="(Identifier,start)"];
"1000323" [label="(Identifier,coverage)"];
"1000245" [label="(Identifier,start)"];
"1000306" [label="(Literal,2)"];
"1000326" [label="(Identifier,j)"];
"1000282" [label="(Identifier,j)"];
"1000228" [label="(Literal,0xffff)"];
"1000153" [label="(Literal,0)"];
"1000300" [label="(Identifier,start)"];
"1000287" [label="(Call,kHeaderSize + 6 * segCount + rangeOffset +\n                     (i + j - start) * 2)"];
"1000303" [label="(Call,actualRangeOffset + 2 > size)"];
"1000232" [label="(Block,)"];
"1000154" [label="(Call,i < segCount)"];
"1000305" [label="(Identifier,actualRangeOffset)"];
"1000216" [label="(Literal,2)"];
"1000104" [label="(MethodParameterIn,const uint8_t* data)"];
"1000151" [label="(Call,i = 0)"];
"1000169" [label="(Identifier,i)"];
"1000263" [label="(Call,addRange(coverage, j, j + 1))"];
"1000143" [label="(Identifier,segCount)"];
"1000190" [label="(Call,rangeOffset = readU16(data, kHeaderSize + 2 * (3 * segCount + i)))"];
"1000161" [label="(Call,end = readU16(data, kEndCountOffset + 2 * i))"];
"1000267" [label="(Identifier,j)"];
"1000254" [label="(ControlStructure,if (((j + delta) & 0xffff) != 0))"];
"1000114" [label="(Literal,14)"];
"1000285" [label="(Call,actualRangeOffset = kHeaderSize + 6 * segCount + rangeOffset +\n                     (i + j - start) * 2)"];
"1000291" [label="(Literal,6)"];
"1000141" [label="(Identifier,kHeaderSize)"];
"1000200" [label="(Literal,3)"];
"1000184" [label="(Identifier,end)"];
"1000314" [label="(Call,readU16(data, actualRangeOffset))"];
"1000155" [label="(Identifier,i)"];
"1000142" [label="(Call,segCount * kSegmentSize)"];
"1000292" [label="(Identifier,segCount)"];
"1000110" [label="(Literal,6)"];
"1000315" [label="(Identifier,data)"];
"1000211" [label="(Call,readU16(data, kHeaderSize + 2 * (2 * segCount + i)))"];
"1000266" [label="(Call,j + 1)"];
"1000234" [label="(Identifier,coverage)"];
"1000108" [label="(Call,kSegCountOffset = 6)"];
"1000197" [label="(Literal,2)"];
"1000126" [label="(Identifier,size)"];
"1000248" [label="(Call,end + 1)"];
"1000244" [label="(Identifier,j)"];
"1000318" [label="(Call,glyphId != 0)"];
"1000290" [label="(Call,6 * segCount)"];
"1000121" [label="(Identifier,kSegmentSize)"];
"1000112" [label="(Call,kEndCountOffset = 14)"];
"1000158" [label="(Identifier,i)"];
"1000196" [label="(Call,2 * (3 * segCount + i))"];
"1000271" [label="(ControlStructure,for (uint32_t j = start; j < end + 1; j++))"];
"1000163" [label="(Call,readU16(data, kEndCountOffset + 2 * i))"];
"1000149" [label="(ControlStructure,for (size_t i = 0; i < segCount; i++))"];
"1000238" [label="(Literal,1)"];
"1000293" [label="(Call,rangeOffset +\n                     (i + j - start) * 2)"];
"1000223" [label="(Call,((end + delta) & 0xffff) > end - start)"];
"1000304" [label="(Call,actualRangeOffset + 2)"];
"1000122" [label="(Literal,8)"];
"1000193" [label="(Identifier,data)"];
"1000276" [label="(Call,j < end + 1)"];
"1000207" [label="(Block,)"];
"1000262" [label="(Block,)"];
"1000320" [label="(Literal,0)"];
"1000255" [label="(Call,((j + delta) & 0xffff) != 0)"];
"1000294" [label="(Identifier,rangeOffset)"];
"1000288" [label="(Identifier,kHeaderSize)"];
"1000192" [label="(Call,readU16(data, kHeaderSize + 2 * (3 * segCount + i)))"];
"1000289" [label="(Call,6 * segCount + rangeOffset +\n                     (i + j - start) * 2)"];
"1000156" [label="(Identifier,segCount)"];
"1000280" [label="(Literal,1)"];
"1000321" [label="(Block,)"];
"1000220" [label="(Identifier,segCount)"];
"1000218" [label="(Call,2 * segCount)"];
"1000313" [label="(Identifier,glyphId)"];
"1000210" [label="(Identifier,delta)"];
"1000295" [label="(Call,(i + j - start) * 2)"];
"1000296" [label="(Call,i + j - start)"];
"1000125" [label="(Identifier,kEndCountOffset)"];
"1000247" [label="(Identifier,j)"];
"1000164" [label="(Identifier,data)"];
"1000174" [label="(Identifier,data)"];
"1000182" [label="(ControlStructure,if (end < start))"];
"1000251" [label="(Call,j++)"];
"1000256" [label="(Call,(j + delta) & 0xffff)"];
"1000219" [label="(Literal,2)"];
"1000171" [label="(Call,start = readU16(data, kHeaderSize + 2 * (segCount + i)))"];
"1000178" [label="(Literal,2)"];
"1000281" [label="(Call,j++)"];
"1000205" [label="(Identifier,rangeOffset)"];
"1000236" [label="(Call,end + 1)"];
"1000249" [label="(Identifier,end)"];
"1000103" [label="(MethodParameterIn,vector<uint32_t>& coverage)"];
"1000106" [label="(Block,)"];
"1000273" [label="(Call,j = start)"];
"1000221" [label="(Identifier,i)"];
"1000231" [label="(Identifier,start)"];
"1000215" [label="(Call,2 * (2 * segCount + i))"];
"1000237" [label="(Identifier,end)"];
"1000206" [label="(Literal,0)"];
"1000319" [label="(Identifier,glyphId)"];
"1000113" [label="(Identifier,kEndCountOffset)"];
"1000243" [label="(Call,j = start)"];
"1000317" [label="(ControlStructure,if (glyphId != 0))"];
"1000278" [label="(Call,end + 1)"];
"1000307" [label="(Identifier,size)"];
"1000202" [label="(Identifier,i)"];
"1000167" [label="(Call,2 * i)"];
"1000274" [label="(Identifier,j)"];
"1000310" [label="(Identifier,false)"];
"1000136" [label="(Identifier,kSegCountOffset)"];
"1000171" -> "1000159"  [label="AST: "];
"1000171" -> "1000173"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="AST: "];
"1000184" -> "1000171"  [label="CFG: "];
"1000171" -> "1000330"  [label="DDG: readU16(data, kHeaderSize + 2 * (segCount + i))"];
"1000173" -> "1000171"  [label="DDG: data"];
"1000173" -> "1000171"  [label="DDG: kHeaderSize + 2 * (segCount + i)"];
"1000171" -> "1000183"  [label="DDG: start"];
"1000173" -> "1000175"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000175" -> "1000173"  [label="AST: "];
"1000173" -> "1000330"  [label="DDG: data"];
"1000173" -> "1000330"  [label="DDG: kHeaderSize + 2 * (segCount + i)"];
"1000163" -> "1000173"  [label="DDG: data"];
"1000104" -> "1000173"  [label="DDG: data"];
"1000116" -> "1000173"  [label="DDG: kHeaderSize"];
"1000177" -> "1000173"  [label="DDG: 2"];
"1000177" -> "1000173"  [label="DDG: segCount + i"];
"1000173" -> "1000192"  [label="DDG: data"];
"1000163" -> "1000161"  [label="AST: "];
"1000163" -> "1000165"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000165" -> "1000163"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000163" -> "1000330"  [label="DDG: kEndCountOffset + 2 * i"];
"1000163" -> "1000161"  [label="DDG: data"];
"1000163" -> "1000161"  [label="DDG: kEndCountOffset + 2 * i"];
"1000314" -> "1000163"  [label="DDG: data"];
"1000211" -> "1000163"  [label="DDG: data"];
"1000134" -> "1000163"  [label="DDG: data"];
"1000192" -> "1000163"  [label="DDG: data"];
"1000104" -> "1000163"  [label="DDG: data"];
"1000124" -> "1000163"  [label="DDG: kEndCountOffset"];
"1000167" -> "1000163"  [label="DDG: 2"];
"1000167" -> "1000163"  [label="DDG: i"];
"1000314" -> "1000312"  [label="AST: "];
"1000314" -> "1000316"  [label="CFG: "];
"1000315" -> "1000314"  [label="AST: "];
"1000316" -> "1000314"  [label="AST: "];
"1000312" -> "1000314"  [label="CFG: "];
"1000314" -> "1000330"  [label="DDG: data"];
"1000314" -> "1000330"  [label="DDG: actualRangeOffset"];
"1000314" -> "1000312"  [label="DDG: data"];
"1000314" -> "1000312"  [label="DDG: actualRangeOffset"];
"1000192" -> "1000314"  [label="DDG: data"];
"1000104" -> "1000314"  [label="DDG: data"];
"1000285" -> "1000314"  [label="DDG: actualRangeOffset"];
"1000192" -> "1000190"  [label="AST: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000194" -> "1000192"  [label="AST: "];
"1000190" -> "1000192"  [label="CFG: "];
"1000192" -> "1000330"  [label="DDG: kHeaderSize + 2 * (3 * segCount + i)"];
"1000192" -> "1000330"  [label="DDG: data"];
"1000192" -> "1000190"  [label="DDG: data"];
"1000192" -> "1000190"  [label="DDG: kHeaderSize + 2 * (3 * segCount + i)"];
"1000104" -> "1000192"  [label="DDG: data"];
"1000196" -> "1000192"  [label="DDG: 2"];
"1000196" -> "1000192"  [label="DDG: 3 * segCount + i"];
"1000192" -> "1000211"  [label="DDG: data"];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1000330"  [label="DDG: data"];
"1000104" -> "1000134"  [label="DDG: data"];
"1000104" -> "1000211"  [label="DDG: data"];
"1000196" -> "1000194"  [label="AST: "];
"1000196" -> "1000198"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000198" -> "1000196"  [label="AST: "];
"1000194" -> "1000196"  [label="CFG: "];
"1000196" -> "1000330"  [label="DDG: 3 * segCount + i"];
"1000196" -> "1000194"  [label="DDG: 2"];
"1000196" -> "1000194"  [label="DDG: 3 * segCount + i"];
"1000199" -> "1000196"  [label="DDG: 3"];
"1000199" -> "1000196"  [label="DDG: segCount"];
"1000167" -> "1000196"  [label="DDG: i"];
"1000199" -> "1000198"  [label="AST: "];
"1000199" -> "1000201"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000201" -> "1000199"  [label="AST: "];
"1000202" -> "1000199"  [label="CFG: "];
"1000199" -> "1000154"  [label="DDG: segCount"];
"1000199" -> "1000198"  [label="DDG: 3"];
"1000199" -> "1000198"  [label="DDG: segCount"];
"1000154" -> "1000199"  [label="DDG: segCount"];
"1000199" -> "1000218"  [label="DDG: segCount"];
"1000199" -> "1000290"  [label="DDG: segCount"];
"1000154" -> "1000149"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000156" -> "1000154"  [label="AST: "];
"1000162" -> "1000154"  [label="CFG: "];
"1000329" -> "1000154"  [label="CFG: "];
"1000154" -> "1000330"  [label="DDG: segCount"];
"1000154" -> "1000330"  [label="DDG: i"];
"1000154" -> "1000330"  [label="DDG: i < segCount"];
"1000151" -> "1000154"  [label="DDG: i"];
"1000157" -> "1000154"  [label="DDG: i"];
"1000290" -> "1000154"  [label="DDG: segCount"];
"1000142" -> "1000154"  [label="DDG: segCount"];
"1000218" -> "1000154"  [label="DDG: segCount"];
"1000154" -> "1000167"  [label="DDG: i"];
"1000154" -> "1000177"  [label="DDG: segCount"];
"1000154" -> "1000179"  [label="DDG: segCount"];
"1000151" -> "1000149"  [label="AST: "];
"1000151" -> "1000153"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000153" -> "1000151"  [label="AST: "];
"1000155" -> "1000151"  [label="CFG: "];
"1000157" -> "1000149"  [label="AST: "];
"1000157" -> "1000158"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000167" -> "1000157"  [label="DDG: i"];
"1000167" -> "1000165"  [label="AST: "];
"1000167" -> "1000169"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000169" -> "1000167"  [label="AST: "];
"1000165" -> "1000167"  [label="CFG: "];
"1000167" -> "1000165"  [label="DDG: 2"];
"1000167" -> "1000165"  [label="DDG: i"];
"1000167" -> "1000177"  [label="DDG: i"];
"1000167" -> "1000179"  [label="DDG: i"];
"1000167" -> "1000198"  [label="DDG: i"];
"1000167" -> "1000215"  [label="DDG: i"];
"1000167" -> "1000217"  [label="DDG: i"];
"1000167" -> "1000295"  [label="DDG: i"];
"1000167" -> "1000296"  [label="DDG: i"];
"1000290" -> "1000289"  [label="AST: "];
"1000290" -> "1000292"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000292" -> "1000290"  [label="AST: "];
"1000294" -> "1000290"  [label="CFG: "];
"1000290" -> "1000330"  [label="DDG: segCount"];
"1000290" -> "1000285"  [label="DDG: 6"];
"1000290" -> "1000285"  [label="DDG: segCount"];
"1000290" -> "1000287"  [label="DDG: 6"];
"1000290" -> "1000287"  [label="DDG: segCount"];
"1000290" -> "1000289"  [label="DDG: 6"];
"1000290" -> "1000289"  [label="DDG: segCount"];
"1000142" -> "1000140"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000142" -> "1000330"  [label="DDG: kSegmentSize"];
"1000142" -> "1000330"  [label="DDG: segCount"];
"1000142" -> "1000139"  [label="DDG: segCount"];
"1000142" -> "1000139"  [label="DDG: kSegmentSize"];
"1000142" -> "1000140"  [label="DDG: segCount"];
"1000142" -> "1000140"  [label="DDG: kSegmentSize"];
"1000131" -> "1000142"  [label="DDG: segCount"];
"1000120" -> "1000142"  [label="DDG: kSegmentSize"];
"1000131" -> "1000106"  [label="AST: "];
"1000131" -> "1000133"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="AST: "];
"1000141" -> "1000131"  [label="CFG: "];
"1000131" -> "1000330"  [label="DDG: readU16(data, kSegCountOffset) >> 1"];
"1000133" -> "1000131"  [label="DDG: readU16(data, kSegCountOffset)"];
"1000133" -> "1000131"  [label="DDG: 1"];
"1000133" -> "1000137"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000137" -> "1000133"  [label="AST: "];
"1000133" -> "1000330"  [label="DDG: readU16(data, kSegCountOffset)"];
"1000134" -> "1000133"  [label="DDG: data"];
"1000134" -> "1000133"  [label="DDG: kSegCountOffset"];
"1000134" -> "1000136"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000137" -> "1000134"  [label="CFG: "];
"1000134" -> "1000330"  [label="DDG: data"];
"1000134" -> "1000330"  [label="DDG: kSegCountOffset"];
"1000108" -> "1000134"  [label="DDG: kSegCountOffset"];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000110"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000110" -> "1000108"  [label="AST: "];
"1000113" -> "1000108"  [label="CFG: "];
"1000108" -> "1000330"  [label="DDG: kSegCountOffset"];
"1000120" -> "1000106"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000122" -> "1000120"  [label="AST: "];
"1000125" -> "1000120"  [label="CFG: "];
"1000120" -> "1000330"  [label="DDG: kSegmentSize"];
"1000218" -> "1000217"  [label="AST: "];
"1000218" -> "1000220"  [label="CFG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000220" -> "1000218"  [label="AST: "];
"1000221" -> "1000218"  [label="CFG: "];
"1000218" -> "1000215"  [label="DDG: 2"];
"1000218" -> "1000215"  [label="DDG: segCount"];
"1000218" -> "1000217"  [label="DDG: 2"];
"1000218" -> "1000217"  [label="DDG: segCount"];
"1000285" -> "1000283"  [label="AST: "];
"1000285" -> "1000287"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000285"  [label="AST: "];
"1000305" -> "1000285"  [label="CFG: "];
"1000285" -> "1000330"  [label="DDG: kHeaderSize + 6 * segCount + rangeOffset +\n                     (i + j - start) * 2"];
"1000204" -> "1000285"  [label="DDG: rangeOffset"];
"1000295" -> "1000285"  [label="DDG: i + j - start"];
"1000295" -> "1000285"  [label="DDG: 2"];
"1000285" -> "1000303"  [label="DDG: actualRangeOffset"];
"1000285" -> "1000304"  [label="DDG: actualRangeOffset"];
"1000204" -> "1000203"  [label="AST: "];
"1000204" -> "1000206"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000206" -> "1000204"  [label="AST: "];
"1000210" -> "1000204"  [label="CFG: "];
"1000274" -> "1000204"  [label="CFG: "];
"1000204" -> "1000330"  [label="DDG: rangeOffset"];
"1000204" -> "1000330"  [label="DDG: rangeOffset == 0"];
"1000190" -> "1000204"  [label="DDG: rangeOffset"];
"1000204" -> "1000287"  [label="DDG: rangeOffset"];
"1000204" -> "1000289"  [label="DDG: rangeOffset"];
"1000204" -> "1000293"  [label="DDG: rangeOffset"];
"1000190" -> "1000159"  [label="AST: "];
"1000191" -> "1000190"  [label="AST: "];
"1000205" -> "1000190"  [label="CFG: "];
"1000190" -> "1000330"  [label="DDG: readU16(data, kHeaderSize + 2 * (3 * segCount + i))"];
"1000295" -> "1000293"  [label="AST: "];
"1000295" -> "1000301"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000301" -> "1000295"  [label="AST: "];
"1000293" -> "1000295"  [label="CFG: "];
"1000295" -> "1000330"  [label="DDG: i + j - start"];
"1000295" -> "1000287"  [label="DDG: i + j - start"];
"1000295" -> "1000287"  [label="DDG: 2"];
"1000295" -> "1000289"  [label="DDG: i + j - start"];
"1000295" -> "1000289"  [label="DDG: 2"];
"1000295" -> "1000293"  [label="DDG: i + j - start"];
"1000295" -> "1000293"  [label="DDG: 2"];
"1000298" -> "1000295"  [label="DDG: j"];
"1000298" -> "1000295"  [label="DDG: start"];
"1000298" -> "1000296"  [label="AST: "];
"1000298" -> "1000300"  [label="CFG: "];
"1000299" -> "1000298"  [label="AST: "];
"1000300" -> "1000298"  [label="AST: "];
"1000296" -> "1000298"  [label="CFG: "];
"1000298" -> "1000330"  [label="DDG: j"];
"1000298" -> "1000330"  [label="DDG: start"];
"1000298" -> "1000281"  [label="DDG: j"];
"1000298" -> "1000296"  [label="DDG: j"];
"1000298" -> "1000296"  [label="DDG: start"];
"1000276" -> "1000298"  [label="DDG: j"];
"1000183" -> "1000298"  [label="DDG: start"];
"1000298" -> "1000322"  [label="DDG: j"];
"1000298" -> "1000325"  [label="DDG: j"];
"1000276" -> "1000271"  [label="AST: "];
"1000276" -> "1000278"  [label="CFG: "];
"1000277" -> "1000276"  [label="AST: "];
"1000278" -> "1000276"  [label="AST: "];
"1000286" -> "1000276"  [label="CFG: "];
"1000158" -> "1000276"  [label="CFG: "];
"1000276" -> "1000330"  [label="DDG: end + 1"];
"1000276" -> "1000330"  [label="DDG: j < end + 1"];
"1000276" -> "1000330"  [label="DDG: j"];
"1000281" -> "1000276"  [label="DDG: j"];
"1000273" -> "1000276"  [label="DDG: j"];
"1000183" -> "1000276"  [label="DDG: end"];
"1000281" -> "1000271"  [label="AST: "];
"1000281" -> "1000282"  [label="CFG: "];
"1000282" -> "1000281"  [label="AST: "];
"1000277" -> "1000281"  [label="CFG: "];
"1000322" -> "1000281"  [label="DDG: j"];
"1000322" -> "1000321"  [label="AST: "];
"1000322" -> "1000325"  [label="CFG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000324" -> "1000322"  [label="AST: "];
"1000325" -> "1000322"  [label="AST: "];
"1000282" -> "1000322"  [label="CFG: "];
"1000322" -> "1000330"  [label="DDG: addRange(coverage, j, j + 1)"];
"1000322" -> "1000330"  [label="DDG: j + 1"];
"1000322" -> "1000330"  [label="DDG: coverage"];
"1000322" -> "1000233"  [label="DDG: coverage"];
"1000322" -> "1000263"  [label="DDG: coverage"];
"1000263" -> "1000322"  [label="DDG: coverage"];
"1000233" -> "1000322"  [label="DDG: coverage"];
"1000103" -> "1000322"  [label="DDG: coverage"];
"1000263" -> "1000262"  [label="AST: "];
"1000263" -> "1000266"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000263"  [label="AST: "];
"1000266" -> "1000263"  [label="AST: "];
"1000252" -> "1000263"  [label="CFG: "];
"1000263" -> "1000330"  [label="DDG: j + 1"];
"1000263" -> "1000330"  [label="DDG: addRange(coverage, j, j + 1)"];
"1000263" -> "1000330"  [label="DDG: coverage"];
"1000263" -> "1000233"  [label="DDG: coverage"];
"1000263" -> "1000251"  [label="DDG: j"];
"1000233" -> "1000263"  [label="DDG: coverage"];
"1000103" -> "1000263"  [label="DDG: coverage"];
"1000246" -> "1000263"  [label="DDG: j"];
"1000233" -> "1000232"  [label="AST: "];
"1000233" -> "1000236"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000235" -> "1000233"  [label="AST: "];
"1000236" -> "1000233"  [label="AST: "];
"1000158" -> "1000233"  [label="CFG: "];
"1000233" -> "1000330"  [label="DDG: end + 1"];
"1000233" -> "1000330"  [label="DDG: addRange(coverage, start, end + 1)"];
"1000233" -> "1000330"  [label="DDG: start"];
"1000233" -> "1000330"  [label="DDG: coverage"];
"1000103" -> "1000233"  [label="DDG: coverage"];
"1000229" -> "1000233"  [label="DDG: start"];
"1000229" -> "1000233"  [label="DDG: end"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000330"  [label="DDG: coverage"];
"1000229" -> "1000223"  [label="AST: "];
"1000229" -> "1000231"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000231" -> "1000229"  [label="AST: "];
"1000223" -> "1000229"  [label="CFG: "];
"1000229" -> "1000223"  [label="DDG: end"];
"1000229" -> "1000223"  [label="DDG: start"];
"1000183" -> "1000229"  [label="DDG: end"];
"1000183" -> "1000229"  [label="DDG: start"];
"1000229" -> "1000236"  [label="DDG: end"];
"1000229" -> "1000243"  [label="DDG: start"];
"1000229" -> "1000246"  [label="DDG: end"];
"1000229" -> "1000248"  [label="DDG: end"];
"1000183" -> "1000182"  [label="AST: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000185" -> "1000183"  [label="AST: "];
"1000188" -> "1000183"  [label="CFG: "];
"1000191" -> "1000183"  [label="CFG: "];
"1000183" -> "1000330"  [label="DDG: start"];
"1000183" -> "1000330"  [label="DDG: end"];
"1000183" -> "1000330"  [label="DDG: end < start"];
"1000161" -> "1000183"  [label="DDG: end"];
"1000183" -> "1000224"  [label="DDG: end"];
"1000183" -> "1000225"  [label="DDG: end"];
"1000183" -> "1000273"  [label="DDG: start"];
"1000183" -> "1000278"  [label="DDG: end"];
"1000161" -> "1000159"  [label="AST: "];
"1000162" -> "1000161"  [label="AST: "];
"1000172" -> "1000161"  [label="CFG: "];
"1000161" -> "1000330"  [label="DDG: readU16(data, kEndCountOffset + 2 * i)"];
"1000246" -> "1000241"  [label="AST: "];
"1000246" -> "1000248"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000248" -> "1000246"  [label="AST: "];
"1000258" -> "1000246"  [label="CFG: "];
"1000158" -> "1000246"  [label="CFG: "];
"1000246" -> "1000330"  [label="DDG: end + 1"];
"1000246" -> "1000330"  [label="DDG: j < end + 1"];
"1000246" -> "1000330"  [label="DDG: j"];
"1000251" -> "1000246"  [label="DDG: j"];
"1000243" -> "1000246"  [label="DDG: j"];
"1000246" -> "1000251"  [label="DDG: j"];
"1000246" -> "1000256"  [label="DDG: j"];
"1000246" -> "1000257"  [label="DDG: j"];
"1000246" -> "1000266"  [label="DDG: j"];
"1000251" -> "1000241"  [label="AST: "];
"1000251" -> "1000252"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000247" -> "1000251"  [label="CFG: "];
"1000243" -> "1000241"  [label="AST: "];
"1000243" -> "1000245"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000245" -> "1000243"  [label="AST: "];
"1000247" -> "1000243"  [label="CFG: "];
"1000243" -> "1000330"  [label="DDG: start"];
"1000273" -> "1000271"  [label="AST: "];
"1000273" -> "1000275"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000275" -> "1000273"  [label="AST: "];
"1000277" -> "1000273"  [label="CFG: "];
"1000273" -> "1000330"  [label="DDG: start"];
"1000211" -> "1000209"  [label="AST: "];
"1000211" -> "1000213"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000213" -> "1000211"  [label="AST: "];
"1000209" -> "1000211"  [label="CFG: "];
"1000211" -> "1000330"  [label="DDG: data"];
"1000211" -> "1000330"  [label="DDG: kHeaderSize + 2 * (2 * segCount + i)"];
"1000211" -> "1000209"  [label="DDG: data"];
"1000211" -> "1000209"  [label="DDG: kHeaderSize + 2 * (2 * segCount + i)"];
"1000215" -> "1000211"  [label="DDG: 2"];
"1000215" -> "1000211"  [label="DDG: 2 * segCount + i"];
"1000215" -> "1000213"  [label="AST: "];
"1000215" -> "1000217"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000217" -> "1000215"  [label="AST: "];
"1000213" -> "1000215"  [label="CFG: "];
"1000215" -> "1000330"  [label="DDG: 2 * segCount + i"];
"1000215" -> "1000213"  [label="DDG: 2"];
"1000215" -> "1000213"  [label="DDG: 2 * segCount + i"];
"1000124" -> "1000123"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000129" -> "1000124"  [label="CFG: "];
"1000132" -> "1000124"  [label="CFG: "];
"1000124" -> "1000330"  [label="DDG: size"];
"1000124" -> "1000330"  [label="DDG: kEndCountOffset"];
"1000124" -> "1000330"  [label="DDG: kEndCountOffset > size"];
"1000112" -> "1000124"  [label="DDG: kEndCountOffset"];
"1000105" -> "1000124"  [label="DDG: size"];
"1000124" -> "1000139"  [label="DDG: size"];
"1000124" -> "1000165"  [label="DDG: kEndCountOffset"];
"1000112" -> "1000106"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000117" -> "1000112"  [label="CFG: "];
"1000105" -> "1000102"  [label="AST: "];
"1000105" -> "1000330"  [label="DDG: size"];
"1000105" -> "1000139"  [label="DDG: size"];
"1000105" -> "1000303"  [label="DDG: size"];
"1000116" -> "1000106"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000121" -> "1000116"  [label="CFG: "];
"1000116" -> "1000330"  [label="DDG: kHeaderSize"];
"1000116" -> "1000139"  [label="DDG: kHeaderSize"];
"1000116" -> "1000140"  [label="DDG: kHeaderSize"];
"1000116" -> "1000175"  [label="DDG: kHeaderSize"];
"1000177" -> "1000175"  [label="AST: "];
"1000177" -> "1000179"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000179" -> "1000177"  [label="AST: "];
"1000175" -> "1000177"  [label="CFG: "];
"1000177" -> "1000330"  [label="DDG: segCount + i"];
"1000177" -> "1000175"  [label="DDG: 2"];
"1000177" -> "1000175"  [label="DDG: segCount + i"];
"1000224" -> "1000223"  [label="AST: "];
"1000224" -> "1000228"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000228" -> "1000224"  [label="AST: "];
"1000230" -> "1000224"  [label="CFG: "];
"1000224" -> "1000330"  [label="DDG: end + delta"];
"1000224" -> "1000223"  [label="DDG: end + delta"];
"1000224" -> "1000223"  [label="DDG: 0xffff"];
"1000209" -> "1000224"  [label="DDG: delta"];
"1000223" -> "1000222"  [label="AST: "];
"1000234" -> "1000223"  [label="CFG: "];
"1000244" -> "1000223"  [label="CFG: "];
"1000223" -> "1000330"  [label="DDG: ((end + delta) & 0xffff) > end - start"];
"1000223" -> "1000330"  [label="DDG: end - start"];
"1000223" -> "1000330"  [label="DDG: (end + delta) & 0xffff"];
"1000225" -> "1000227"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000227" -> "1000225"  [label="AST: "];
"1000228" -> "1000225"  [label="CFG: "];
"1000225" -> "1000330"  [label="DDG: delta"];
"1000209" -> "1000225"  [label="DDG: delta"];
"1000256" -> "1000255"  [label="AST: "];
"1000256" -> "1000260"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000260" -> "1000256"  [label="AST: "];
"1000261" -> "1000256"  [label="CFG: "];
"1000256" -> "1000330"  [label="DDG: j + delta"];
"1000256" -> "1000255"  [label="DDG: j + delta"];
"1000256" -> "1000255"  [label="DDG: 0xffff"];
"1000209" -> "1000256"  [label="DDG: delta"];
"1000255" -> "1000254"  [label="AST: "];
"1000255" -> "1000261"  [label="CFG: "];
"1000261" -> "1000255"  [label="AST: "];
"1000264" -> "1000255"  [label="CFG: "];
"1000252" -> "1000255"  [label="CFG: "];
"1000255" -> "1000330"  [label="DDG: ((j + delta) & 0xffff) != 0"];
"1000255" -> "1000330"  [label="DDG: (j + delta) & 0xffff"];
"1000257" -> "1000259"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000259" -> "1000257"  [label="AST: "];
"1000260" -> "1000257"  [label="CFG: "];
"1000257" -> "1000330"  [label="DDG: delta"];
"1000209" -> "1000257"  [label="DDG: delta"];
"1000266" -> "1000268"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="AST: "];
"1000303" -> "1000302"  [label="AST: "];
"1000303" -> "1000307"  [label="CFG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000307" -> "1000303"  [label="AST: "];
"1000310" -> "1000303"  [label="CFG: "];
"1000313" -> "1000303"  [label="CFG: "];
"1000303" -> "1000330"  [label="DDG: actualRangeOffset + 2"];
"1000303" -> "1000330"  [label="DDG: actualRangeOffset + 2 > size"];
"1000303" -> "1000330"  [label="DDG: size"];
"1000139" -> "1000303"  [label="DDG: size"];
"1000304" -> "1000306"  [label="CFG: "];
"1000305" -> "1000304"  [label="AST: "];
"1000306" -> "1000304"  [label="AST: "];
"1000307" -> "1000304"  [label="CFG: "];
"1000304" -> "1000330"  [label="DDG: actualRangeOffset"];
"1000287" -> "1000289"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000287"  [label="AST: "];
"1000287" -> "1000330"  [label="DDG: 6 * segCount + rangeOffset +\n                     (i + j - start) * 2"];
"1000287" -> "1000330"  [label="DDG: kHeaderSize"];
"1000289" -> "1000293"  [label="CFG: "];
"1000293" -> "1000289"  [label="AST: "];
"1000289" -> "1000330"  [label="DDG: 6 * segCount"];
"1000289" -> "1000330"  [label="DDG: rangeOffset +\n                     (i + j - start) * 2"];
"1000294" -> "1000293"  [label="AST: "];
"1000293" -> "1000330"  [label="DDG: rangeOffset"];
"1000293" -> "1000330"  [label="DDG: (i + j - start) * 2"];
"1000209" -> "1000207"  [label="AST: "];
"1000210" -> "1000209"  [label="AST: "];
"1000226" -> "1000209"  [label="CFG: "];
"1000209" -> "1000330"  [label="DDG: readU16(data, kHeaderSize + 2 * (2 * segCount + i))"];
"1000312" -> "1000283"  [label="AST: "];
"1000313" -> "1000312"  [label="AST: "];
"1000319" -> "1000312"  [label="CFG: "];
"1000312" -> "1000330"  [label="DDG: readU16(data, actualRangeOffset)"];
"1000312" -> "1000318"  [label="DDG: glyphId"];
"1000318" -> "1000317"  [label="AST: "];
"1000318" -> "1000320"  [label="CFG: "];
"1000319" -> "1000318"  [label="AST: "];
"1000320" -> "1000318"  [label="AST: "];
"1000323" -> "1000318"  [label="CFG: "];
"1000282" -> "1000318"  [label="CFG: "];
"1000318" -> "1000330"  [label="DDG: glyphId != 0"];
"1000318" -> "1000330"  [label="DDG: glyphId"];
"1000297" -> "1000296"  [label="AST: "];
"1000301" -> "1000296"  [label="CFG: "];
"1000296" -> "1000330"  [label="DDG: j - start"];
"1000296" -> "1000330"  [label="DDG: i"];
"1000325" -> "1000327"  [label="CFG: "];
"1000326" -> "1000325"  [label="AST: "];
"1000327" -> "1000325"  [label="AST: "];
"1000236" -> "1000238"  [label="CFG: "];
"1000237" -> "1000236"  [label="AST: "];
"1000238" -> "1000236"  [label="AST: "];
"1000236" -> "1000330"  [label="DDG: end"];
"1000248" -> "1000250"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="AST: "];
"1000248" -> "1000330"  [label="DDG: end"];
"1000278" -> "1000280"  [label="CFG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000280" -> "1000278"  [label="AST: "];
"1000278" -> "1000330"  [label="DDG: end"];
}
