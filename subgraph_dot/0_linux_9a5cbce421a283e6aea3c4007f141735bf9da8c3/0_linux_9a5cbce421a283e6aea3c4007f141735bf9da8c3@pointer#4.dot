digraph "0_linux_9a5cbce421a283e6aea3c4007f141735bf9da8c3@pointer" {
"1000121" [label="(Call,lr = regs->link)"];
"1000189" [label="(Call,is_sigreturn_64_address(lr, sp))"];
"1000185" [label="(Call,level <= 1 && is_sigreturn_64_address(lr, sp))"];
"1000181" [label="(Call,is_sigreturn_64_address(next_ip, sp) ||\n\t\t     (level <= 1 && is_sigreturn_64_address(lr, sp)))"];
"1000180" [label="(Call,(is_sigreturn_64_address(next_ip, sp) ||\n\t\t     (level <= 1 && is_sigreturn_64_address(lr, sp))) &&\n\t\t    sane_signal_64_frame(sp))"];
"1000173" [label="(Call,next_sp - sp >= sizeof(struct signal_frame_64) &&\n\t\t    (is_sigreturn_64_address(next_ip, sp) ||\n\t\t     (level <= 1 && is_sigreturn_64_address(lr, sp))) &&\n\t\t    sane_signal_64_frame(sp))"];
"1000192" [label="(Call,sane_signal_64_frame(sp))"];
"1000197" [label="(Call,(struct signal_frame_64 __user *) sp)"];
"1000145" [label="(Call,(unsigned long __user *) sp)"];
"1000143" [label="(Call,fp = (unsigned long __user *) sp)"];
"1000154" [label="(Call,read_user_stack_64(fp, &next_sp))"];
"1000149" [label="(Call,!valid_user_sp(sp, 1) || read_user_stack_64(fp, &next_sp))"];
"1000151" [label="(Call,valid_user_sp(sp, 1))"];
"1000150" [label="(Call,!valid_user_sp(sp, 1))"];
"1000175" [label="(Call,next_sp - sp)"];
"1000174" [label="(Call,next_sp - sp >= sizeof(struct signal_frame_64))"];
"1000182" [label="(Call,is_sigreturn_64_address(next_ip, sp))"];
"1000240" [label="(Call,perf_callchain_store(entry, next_ip))"];
"1000237" [label="(Call,perf_callchain_store(entry, PERF_CONTEXT_USER))"];
"1000251" [label="(Call,perf_callchain_store(entry, next_ip))"];
"1000256" [label="(Call,sp = next_sp)"];
"1000195" [label="(Call,sigframe = (struct signal_frame_64 __user *) sp)"];
"1000248" [label="(Call,next_ip = lr)"];
"1000193" [label="(Identifier,sp)"];
"1000199" [label="(Identifier,sp)"];
"1000142" [label="(Block,)"];
"1000253" [label="(Identifier,next_ip)"];
"1000255" [label="(Identifier,level)"];
"1000183" [label="(Identifier,next_ip)"];
"1000175" [label="(Call,next_sp - sp)"];
"1000149" [label="(Call,!valid_user_sp(sp, 1) || read_user_stack_64(fp, &next_sp))"];
"1000139" [label="(Identifier,entry)"];
"1000246" [label="(Identifier,level)"];
"1000158" [label="(Return,return;)"];
"1000251" [label="(Call,perf_callchain_store(entry, next_ip))"];
"1000243" [label="(ControlStructure,continue;)"];
"1000237" [label="(Call,perf_callchain_store(entry, PERF_CONTEXT_USER))"];
"1000244" [label="(ControlStructure,if (level == 0))"];
"1000172" [label="(ControlStructure,if (next_sp - sp >= sizeof(struct signal_frame_64) &&\n\t\t    (is_sigreturn_64_address(next_ip, sp) ||\n\t\t     (level <= 1 && is_sigreturn_64_address(lr, sp))) &&\n\t\t    sane_signal_64_frame(sp)))"];
"1000162" [label="(Identifier,level)"];
"1000105" [label="(Block,)"];
"1000258" [label="(Identifier,next_sp)"];
"1000156" [label="(Call,&next_sp)"];
"1000201" [label="(Identifier,uregs)"];
"1000143" [label="(Call,fp = (unsigned long __user *) sp)"];
"1000180" [label="(Call,(is_sigreturn_64_address(next_ip, sp) ||\n\t\t     (level <= 1 && is_sigreturn_64_address(lr, sp))) &&\n\t\t    sane_signal_64_frame(sp))"];
"1000103" [label="(MethodParameterIn,struct perf_callchain_entry *entry)"];
"1000256" [label="(Call,sp = next_sp)"];
"1000122" [label="(Identifier,lr)"];
"1000249" [label="(Identifier,next_ip)"];
"1000155" [label="(Identifier,fp)"];
"1000173" [label="(Call,next_sp - sp >= sizeof(struct signal_frame_64) &&\n\t\t    (is_sigreturn_64_address(next_ip, sp) ||\n\t\t     (level <= 1 && is_sigreturn_64_address(lr, sp))) &&\n\t\t    sane_signal_64_frame(sp))"];
"1000144" [label="(Identifier,fp)"];
"1000189" [label="(Call,is_sigreturn_64_address(lr, sp))"];
"1000153" [label="(Literal,1)"];
"1000240" [label="(Call,perf_callchain_store(entry, next_ip))"];
"1000126" [label="(Call,sp = regs->gpr[1])"];
"1000241" [label="(Identifier,entry)"];
"1000186" [label="(Call,level <= 1)"];
"1000185" [label="(Call,level <= 1 && is_sigreturn_64_address(lr, sp))"];
"1000147" [label="(Identifier,sp)"];
"1000174" [label="(Call,next_sp - sp >= sizeof(struct signal_frame_64))"];
"1000176" [label="(Identifier,next_sp)"];
"1000150" [label="(Call,!valid_user_sp(sp, 1))"];
"1000242" [label="(Identifier,next_ip)"];
"1000252" [label="(Identifier,entry)"];
"1000181" [label="(Call,is_sigreturn_64_address(next_ip, sp) ||\n\t\t     (level <= 1 && is_sigreturn_64_address(lr, sp)))"];
"1000248" [label="(Call,next_ip = lr)"];
"1000123" [label="(Call,regs->link)"];
"1000133" [label="(Call,perf_callchain_store(entry, next_ip))"];
"1000187" [label="(Identifier,level)"];
"1000191" [label="(Identifier,sp)"];
"1000192" [label="(Call,sane_signal_64_frame(sp))"];
"1000196" [label="(Identifier,sigframe)"];
"1000184" [label="(Identifier,sp)"];
"1000194" [label="(Block,)"];
"1000190" [label="(Identifier,lr)"];
"1000259" [label="(MethodReturn,static void)"];
"1000152" [label="(Identifier,sp)"];
"1000177" [label="(Identifier,sp)"];
"1000178" [label="(Call,sizeof(struct signal_frame_64))"];
"1000127" [label="(Identifier,sp)"];
"1000238" [label="(Identifier,entry)"];
"1000257" [label="(Identifier,sp)"];
"1000250" [label="(Identifier,lr)"];
"1000182" [label="(Call,is_sigreturn_64_address(next_ip, sp))"];
"1000121" [label="(Call,lr = regs->link)"];
"1000197" [label="(Call,(struct signal_frame_64 __user *) sp)"];
"1000195" [label="(Call,sigframe = (struct signal_frame_64 __user *) sp)"];
"1000148" [label="(ControlStructure,if (!valid_user_sp(sp, 1) || read_user_stack_64(fp, &next_sp)))"];
"1000154" [label="(Call,read_user_stack_64(fp, &next_sp))"];
"1000239" [label="(Identifier,PERF_CONTEXT_USER)"];
"1000145" [label="(Call,(unsigned long __user *) sp)"];
"1000151" [label="(Call,valid_user_sp(sp, 1))"];
"1000121" -> "1000105"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000127" -> "1000121"  [label="CFG: "];
"1000121" -> "1000259"  [label="DDG: regs->link"];
"1000121" -> "1000259"  [label="DDG: lr"];
"1000121" -> "1000189"  [label="DDG: lr"];
"1000121" -> "1000248"  [label="DDG: lr"];
"1000189" -> "1000185"  [label="AST: "];
"1000189" -> "1000191"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000191" -> "1000189"  [label="AST: "];
"1000185" -> "1000189"  [label="CFG: "];
"1000189" -> "1000259"  [label="DDG: lr"];
"1000189" -> "1000185"  [label="DDG: lr"];
"1000189" -> "1000185"  [label="DDG: sp"];
"1000182" -> "1000189"  [label="DDG: sp"];
"1000189" -> "1000192"  [label="DDG: sp"];
"1000189" -> "1000197"  [label="DDG: sp"];
"1000189" -> "1000248"  [label="DDG: lr"];
"1000185" -> "1000181"  [label="AST: "];
"1000185" -> "1000186"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000181" -> "1000185"  [label="CFG: "];
"1000185" -> "1000259"  [label="DDG: level <= 1"];
"1000185" -> "1000259"  [label="DDG: is_sigreturn_64_address(lr, sp)"];
"1000185" -> "1000181"  [label="DDG: level <= 1"];
"1000185" -> "1000181"  [label="DDG: is_sigreturn_64_address(lr, sp)"];
"1000186" -> "1000185"  [label="DDG: level"];
"1000186" -> "1000185"  [label="DDG: 1"];
"1000181" -> "1000180"  [label="AST: "];
"1000181" -> "1000182"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000193" -> "1000181"  [label="CFG: "];
"1000180" -> "1000181"  [label="CFG: "];
"1000181" -> "1000259"  [label="DDG: level <= 1 && is_sigreturn_64_address(lr, sp)"];
"1000181" -> "1000259"  [label="DDG: is_sigreturn_64_address(next_ip, sp)"];
"1000181" -> "1000180"  [label="DDG: is_sigreturn_64_address(next_ip, sp)"];
"1000181" -> "1000180"  [label="DDG: level <= 1 && is_sigreturn_64_address(lr, sp)"];
"1000182" -> "1000181"  [label="DDG: next_ip"];
"1000182" -> "1000181"  [label="DDG: sp"];
"1000180" -> "1000173"  [label="AST: "];
"1000180" -> "1000192"  [label="CFG: "];
"1000192" -> "1000180"  [label="AST: "];
"1000173" -> "1000180"  [label="CFG: "];
"1000180" -> "1000259"  [label="DDG: is_sigreturn_64_address(next_ip, sp) ||\n\t\t     (level <= 1 && is_sigreturn_64_address(lr, sp))"];
"1000180" -> "1000259"  [label="DDG: sane_signal_64_frame(sp)"];
"1000180" -> "1000173"  [label="DDG: is_sigreturn_64_address(next_ip, sp) ||\n\t\t     (level <= 1 && is_sigreturn_64_address(lr, sp))"];
"1000180" -> "1000173"  [label="DDG: sane_signal_64_frame(sp)"];
"1000192" -> "1000180"  [label="DDG: sp"];
"1000173" -> "1000172"  [label="AST: "];
"1000173" -> "1000174"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000196" -> "1000173"  [label="CFG: "];
"1000246" -> "1000173"  [label="CFG: "];
"1000173" -> "1000259"  [label="DDG: (is_sigreturn_64_address(next_ip, sp) ||\n\t\t     (level <= 1 && is_sigreturn_64_address(lr, sp))) &&\n\t\t    sane_signal_64_frame(sp)"];
"1000173" -> "1000259"  [label="DDG: next_sp - sp >= sizeof(struct signal_frame_64) &&\n\t\t    (is_sigreturn_64_address(next_ip, sp) ||\n\t\t     (level <= 1 && is_sigreturn_64_address(lr, sp))) &&\n\t\t    sane_signal_64_frame(sp)"];
"1000173" -> "1000259"  [label="DDG: next_sp - sp >= sizeof(struct signal_frame_64)"];
"1000174" -> "1000173"  [label="DDG: next_sp - sp"];
"1000192" -> "1000193"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000182" -> "1000192"  [label="DDG: sp"];
"1000192" -> "1000197"  [label="DDG: sp"];
"1000197" -> "1000195"  [label="AST: "];
"1000197" -> "1000199"  [label="CFG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000199" -> "1000197"  [label="AST: "];
"1000195" -> "1000197"  [label="CFG: "];
"1000197" -> "1000259"  [label="DDG: sp"];
"1000197" -> "1000145"  [label="DDG: sp"];
"1000197" -> "1000195"  [label="DDG: sp"];
"1000182" -> "1000197"  [label="DDG: sp"];
"1000175" -> "1000197"  [label="DDG: sp"];
"1000145" -> "1000143"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000145" -> "1000143"  [label="DDG: sp"];
"1000126" -> "1000145"  [label="DDG: sp"];
"1000256" -> "1000145"  [label="DDG: sp"];
"1000145" -> "1000151"  [label="DDG: sp"];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000143"  [label="AST: "];
"1000152" -> "1000143"  [label="CFG: "];
"1000143" -> "1000259"  [label="DDG: fp"];
"1000143" -> "1000259"  [label="DDG: (unsigned long __user *) sp"];
"1000143" -> "1000154"  [label="DDG: fp"];
"1000154" -> "1000149"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000156" -> "1000154"  [label="AST: "];
"1000149" -> "1000154"  [label="CFG: "];
"1000154" -> "1000259"  [label="DDG: fp"];
"1000154" -> "1000259"  [label="DDG: &next_sp"];
"1000154" -> "1000149"  [label="DDG: fp"];
"1000154" -> "1000149"  [label="DDG: &next_sp"];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000158" -> "1000149"  [label="CFG: "];
"1000162" -> "1000149"  [label="CFG: "];
"1000149" -> "1000259"  [label="DDG: !valid_user_sp(sp, 1) || read_user_stack_64(fp, &next_sp)"];
"1000149" -> "1000259"  [label="DDG: read_user_stack_64(fp, &next_sp)"];
"1000149" -> "1000259"  [label="DDG: !valid_user_sp(sp, 1)"];
"1000150" -> "1000149"  [label="DDG: valid_user_sp(sp, 1)"];
"1000151" -> "1000150"  [label="AST: "];
"1000151" -> "1000153"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000153" -> "1000151"  [label="AST: "];
"1000150" -> "1000151"  [label="CFG: "];
"1000151" -> "1000259"  [label="DDG: sp"];
"1000151" -> "1000150"  [label="DDG: sp"];
"1000151" -> "1000150"  [label="DDG: 1"];
"1000151" -> "1000175"  [label="DDG: sp"];
"1000155" -> "1000150"  [label="CFG: "];
"1000150" -> "1000259"  [label="DDG: valid_user_sp(sp, 1)"];
"1000175" -> "1000174"  [label="AST: "];
"1000175" -> "1000177"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000177" -> "1000175"  [label="AST: "];
"1000179" -> "1000175"  [label="CFG: "];
"1000175" -> "1000259"  [label="DDG: next_sp"];
"1000175" -> "1000174"  [label="DDG: next_sp"];
"1000175" -> "1000174"  [label="DDG: sp"];
"1000175" -> "1000182"  [label="DDG: sp"];
"1000175" -> "1000256"  [label="DDG: next_sp"];
"1000174" -> "1000178"  [label="CFG: "];
"1000178" -> "1000174"  [label="AST: "];
"1000183" -> "1000174"  [label="CFG: "];
"1000174" -> "1000259"  [label="DDG: next_sp - sp"];
"1000182" -> "1000184"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000184" -> "1000182"  [label="AST: "];
"1000187" -> "1000182"  [label="CFG: "];
"1000182" -> "1000259"  [label="DDG: next_ip"];
"1000251" -> "1000182"  [label="DDG: next_ip"];
"1000133" -> "1000182"  [label="DDG: next_ip"];
"1000240" -> "1000182"  [label="DDG: next_ip"];
"1000182" -> "1000240"  [label="DDG: next_ip"];
"1000182" -> "1000251"  [label="DDG: next_ip"];
"1000240" -> "1000194"  [label="AST: "];
"1000240" -> "1000242"  [label="CFG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000242" -> "1000240"  [label="AST: "];
"1000243" -> "1000240"  [label="CFG: "];
"1000240" -> "1000259"  [label="DDG: perf_callchain_store(entry, next_ip)"];
"1000240" -> "1000259"  [label="DDG: next_ip"];
"1000240" -> "1000259"  [label="DDG: entry"];
"1000240" -> "1000237"  [label="DDG: entry"];
"1000237" -> "1000240"  [label="DDG: entry"];
"1000103" -> "1000240"  [label="DDG: entry"];
"1000251" -> "1000240"  [label="DDG: next_ip"];
"1000133" -> "1000240"  [label="DDG: next_ip"];
"1000240" -> "1000251"  [label="DDG: entry"];
"1000240" -> "1000251"  [label="DDG: next_ip"];
"1000237" -> "1000194"  [label="AST: "];
"1000237" -> "1000239"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000239" -> "1000237"  [label="AST: "];
"1000241" -> "1000237"  [label="CFG: "];
"1000237" -> "1000259"  [label="DDG: perf_callchain_store(entry, PERF_CONTEXT_USER)"];
"1000237" -> "1000259"  [label="DDG: PERF_CONTEXT_USER"];
"1000251" -> "1000237"  [label="DDG: entry"];
"1000133" -> "1000237"  [label="DDG: entry"];
"1000103" -> "1000237"  [label="DDG: entry"];
"1000251" -> "1000142"  [label="AST: "];
"1000251" -> "1000253"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="AST: "];
"1000255" -> "1000251"  [label="CFG: "];
"1000251" -> "1000259"  [label="DDG: perf_callchain_store(entry, next_ip)"];
"1000251" -> "1000259"  [label="DDG: next_ip"];
"1000251" -> "1000259"  [label="DDG: entry"];
"1000133" -> "1000251"  [label="DDG: entry"];
"1000133" -> "1000251"  [label="DDG: next_ip"];
"1000103" -> "1000251"  [label="DDG: entry"];
"1000248" -> "1000251"  [label="DDG: next_ip"];
"1000256" -> "1000142"  [label="AST: "];
"1000256" -> "1000258"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000258" -> "1000256"  [label="AST: "];
"1000139" -> "1000256"  [label="CFG: "];
"1000256" -> "1000259"  [label="DDG: next_sp"];
"1000256" -> "1000259"  [label="DDG: sp"];
"1000195" -> "1000194"  [label="AST: "];
"1000196" -> "1000195"  [label="AST: "];
"1000201" -> "1000195"  [label="CFG: "];
"1000195" -> "1000259"  [label="DDG: (struct signal_frame_64 __user *) sp"];
"1000195" -> "1000259"  [label="DDG: sigframe"];
"1000248" -> "1000244"  [label="AST: "];
"1000248" -> "1000250"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="AST: "];
"1000252" -> "1000248"  [label="CFG: "];
"1000248" -> "1000259"  [label="DDG: lr"];
}
