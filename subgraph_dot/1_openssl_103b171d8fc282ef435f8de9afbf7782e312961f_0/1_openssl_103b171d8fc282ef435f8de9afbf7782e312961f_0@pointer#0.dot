digraph "1_openssl_103b171d8fc282ef435f8de9afbf7782e312961f_0@pointer" {
"1000353" [label="(Call,i=rr->length)"];
"1000343" [label="(Call,rr->length > s->packet_length-DTLS1_RT_HEADER_LENGTH)"];
"1000325" [label="(Call,rr->length > SSL3_RT_MAX_ENCRYPTED_LENGTH)"];
"1000273" [label="(Call,n2s(p,rr->length))"];
"1000270" [label="(Call,p+=6)"];
"1000259" [label="(Call,memcpy(&(s->s3->read_sequence[2]), p, 6))"];
"1000254" [label="(Call,n2s(p,rr->epoch))"];
"1000245" [label="(Call,p++)"];
"1000240" [label="(Call,p++)"];
"1000235" [label="(Call,p++)"];
"1000211" [label="(Call,p=s->packet)"];
"1000436" [label="(Call,s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO)"];
"1000220" [label="(Call,s->msg_callback(0, 0, SSL3_RT_HEADER, p, DTLS1_RT_HEADER_LENGTH, s, s->msg_callback_arg))"];
"1000194" [label="(Call,s->packet_length != DTLS1_RT_HEADER_LENGTH)"];
"1000375" [label="(Call,s->packet_length = 0)"];
"1000200" [label="(Call,s->packet_length = 0)"];
"1000168" [label="(Call,s->packet_length < DTLS1_RT_HEADER_LENGTH)"];
"1000347" [label="(Call,s->packet_length-DTLS1_RT_HEADER_LENGTH)"];
"1000431" [label="(Call,s->packet_length > DTLS1_RT_HEADER_LENGTH)"];
"1000500" [label="(Call,s->packet_length = 0)"];
"1000296" [label="(Call,s->packet_length = 0)"];
"1000516" [label="(Call,s->packet_length = 0)"];
"1000453" [label="(Call,s->packet_length=0)"];
"1000336" [label="(Call,s->packet_length = 0)"];
"1000403" [label="(Call,s->packet_length = 0)"];
"1000318" [label="(Call,s->packet_length = 0)"];
"1000176" [label="(Call,ssl3_read_n(s, DTLS1_RT_HEADER_LENGTH, s->s3->rbuf.len, 0))"];
"1000360" [label="(Call,ssl3_read_n(s,i,i,1))"];
"1000156" [label="(Call,dtls1_get_processed_record(s))"];
"1000153" [label="(Call,dtls1_process_buffered_records(s))"];
"1000131" [label="(MethodParameterIn,SSL *s)"];
"1000472" [label="(Call,SSL_in_init(s))"];
"1000412" [label="(Call,SSL_get_rbio(s))"];
"1000388" [label="(Call,dtls1_get_bitmap(s, rr, &is_next_epoch))"];
"1000484" [label="(Call,dtls1_buffer_record(s, &(s->d1->unprocessed_rcds), rr->seq_num))"];
"1000508" [label="(Call,dtls1_process_record(s))"];
"1000444" [label="(Call,dtls1_record_replay_check(s, bitmap))"];
"1000394" [label="(Call,bitmap == NULL)"];
"1000386" [label="(Call,bitmap = dtls1_get_bitmap(s, rr, &is_next_epoch))"];
"1000145" [label="(Call,rr= &(s->s3->rrec))"];
"1000353" [label="(Call,i=rr->length)"];
"1000460" [label="(Call,rr->length == 0)"];
"1000291" [label="(Call,rr->length = 0)"];
"1000495" [label="(Call,rr->length = 0)"];
"1000331" [label="(Call,rr->length = 0)"];
"1000448" [label="(Call,rr->length = 0)"];
"1000511" [label="(Call,rr->length = 0)"];
"1000313" [label="(Call,rr->length = 0)"];
"1000398" [label="(Call,rr->length = 0)"];
"1000370" [label="(Call,rr->length = 0)"];
"1000174" [label="(Call,n=ssl3_read_n(s, DTLS1_RT_HEADER_LENGTH, s->s3->rbuf.len, 0))"];
"1000188" [label="(Call,n <= 0)"];
"1000191" [label="(Return,return(n);)"];
"1000162" [label="(Call,(s->rstate != SSL_ST_READ_BODY) ||\n\t\t(s->packet_length < DTLS1_RT_HEADER_LENGTH))"];
"1000430" [label="(Call,s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO)"];
"1000424" [label="(Call,rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO)"];
"1000418" [label="(Call,s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO)"];
"1000417" [label="(Call,!(s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO))"];
"1000416" [label="(Call,!(s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO) &&\n\t\t    !dtls1_record_replay_check(s, bitmap))"];
"1000477" [label="(Call,!s->d1->listen)"];
"1000470" [label="(Call,(SSL_in_init(s) || s->in_handshake) && !s->d1->listen)"];
"1000443" [label="(Call,!dtls1_record_replay_check(s, bitmap))"];
"1000471" [label="(Call,SSL_in_init(s) || s->in_handshake)"];
"1000507" [label="(Call,!dtls1_process_record(s))"];
"1000411" [label="(Call,BIO_dgram_is_sctp(SSL_get_rbio(s)))"];
"1000410" [label="(Call,!BIO_dgram_is_sctp(SSL_get_rbio(s)))"];
"1000358" [label="(Call,n=ssl3_read_n(s,i,i,1))"];
"1000366" [label="(Call,n != i)"];
"1000292" [label="(Call,rr->length)"];
"1000509" [label="(Identifier,s)"];
"1000326" [label="(Call,rr->length)"];
"1000467" [label="(Identifier,is_next_epoch)"];
"1000486" [label="(Call,&(s->d1->unprocessed_rcds))"];
"1000445" [label="(Identifier,s)"];
"1000464" [label="(Literal,0)"];
"1000220" [label="(Call,s->msg_callback(0, 0, SSL3_RT_HEADER, p, DTLS1_RT_HEADER_LENGTH, s, s->msg_callback_arg))"];
"1000462" [label="(Identifier,rr)"];
"1000362" [label="(Identifier,i)"];
"1000186" [label="(Literal,0)"];
"1000314" [label="(Call,rr->length)"];
"1000273" [label="(Call,n2s(p,rr->length))"];
"1000232" [label="(Identifier,rr)"];
"1000212" [label="(Identifier,p)"];
"1000270" [label="(Call,p+=6)"];
"1000386" [label="(Call,bitmap = dtls1_get_bitmap(s, rr, &is_next_epoch))"];
"1000380" [label="(ControlStructure,goto again;)"];
"1000301" [label="(ControlStructure,goto again;)"];
"1000213" [label="(Call,s->packet)"];
"1000505" [label="(ControlStructure,goto again;)"];
"1000156" [label="(Call,dtls1_get_processed_record(s))"];
"1000468" [label="(Block,)"];
"1000271" [label="(Identifier,p)"];
"1000290" [label="(Block,)"];
"1000390" [label="(Identifier,rr)"];
"1000460" [label="(Call,rr->length == 0)"];
"1000211" [label="(Call,p=s->packet)"];
"1000404" [label="(Call,s->packet_length)"];
"1000511" [label="(Call,rr->length = 0)"];
"1000178" [label="(Identifier,DTLS1_RT_HEADER_LENGTH)"];
"1000146" [label="(Identifier,rr)"];
"1000240" [label="(Call,p++)"];
"1000402" [label="(Literal,0)"];
"1000410" [label="(Call,!BIO_dgram_is_sctp(SSL_get_rbio(s)))"];
"1000461" [label="(Call,rr->length)"];
"1000344" [label="(Call,rr->length)"];
"1000162" [label="(Call,(s->rstate != SSL_ST_READ_BODY) ||\n\t\t(s->packet_length < DTLS1_RT_HEADER_LENGTH))"];
"1000470" [label="(Call,(SSL_in_init(s) || s->in_handshake) && !s->d1->listen)"];
"1000275" [label="(Call,rr->length)"];
"1000241" [label="(Identifier,p)"];
"1000454" [label="(Call,s->packet_length)"];
"1000195" [label="(Call,s->packet_length)"];
"1000154" [label="(Identifier,s)"];
"1000179" [label="(Call,s->s3->rbuf.len)"];
"1000176" [label="(Call,ssl3_read_n(s, DTLS1_RT_HEADER_LENGTH, s->s3->rbuf.len, 0))"];
"1000510" [label="(Block,)"];
"1000313" [label="(Call,rr->length = 0)"];
"1000132" [label="(Block,)"];
"1000447" [label="(Block,)"];
"1000145" [label="(Call,rr= &(s->s3->rrec))"];
"1000234" [label="(Call,*(p++))"];
"1000431" [label="(Call,s->packet_length > DTLS1_RT_HEADER_LENGTH)"];
"1000484" [label="(Call,dtls1_buffer_record(s, &(s->d1->unprocessed_rcds), rr->seq_num))"];
"1000395" [label="(Identifier,bitmap)"];
"1000379" [label="(Literal,0)"];
"1000352" [label="(Block,)"];
"1000236" [label="(Identifier,p)"];
"1000227" [label="(Call,s->msg_callback_arg)"];
"1000325" [label="(Call,rr->length > SSL3_RT_MAX_ENCRYPTED_LENGTH)"];
"1000512" [label="(Call,rr->length)"];
"1000319" [label="(Call,s->packet_length)"];
"1000495" [label="(Call,rr->length = 0)"];
"1000473" [label="(Identifier,s)"];
"1000335" [label="(Literal,0)"];
"1000177" [label="(Identifier,s)"];
"1000367" [label="(Identifier,n)"];
"1000446" [label="(Identifier,bitmap)"];
"1000297" [label="(Call,s->packet_length)"];
"1000331" [label="(Call,rr->length = 0)"];
"1000291" [label="(Call,rr->length = 0)"];
"1000398" [label="(Call,rr->length = 0)"];
"1000256" [label="(Call,rr->epoch)"];
"1000483" [label="(Block,)"];
"1000496" [label="(Call,rr->length)"];
"1000371" [label="(Call,rr->length)"];
"1000205" [label="(ControlStructure,goto again;)"];
"1000513" [label="(Identifier,rr)"];
"1000458" [label="(ControlStructure,goto again;)"];
"1000323" [label="(ControlStructure,goto again;)"];
"1000443" [label="(Call,!dtls1_record_replay_check(s, bitmap))"];
"1000189" [label="(Identifier,n)"];
"1000453" [label="(Call,s->packet_length=0)"];
"1000520" [label="(Literal,0)"];
"1000340" [label="(Literal,0)"];
"1000432" [label="(Call,s->packet_length)"];
"1000161" [label="(ControlStructure,if (\t(s->rstate != SSL_ST_READ_BODY) ||\n\t\t(s->packet_length < DTLS1_RT_HEADER_LENGTH)))"];
"1000457" [label="(Literal,0)"];
"1000216" [label="(ControlStructure,if (s->msg_callback))"];
"1000169" [label="(Call,s->packet_length)"];
"1000160" [label="(JumpTarget,again:)"];
"1000492" [label="(Call,rr->seq_num)"];
"1000200" [label="(Call,s->packet_length = 0)"];
"1000264" [label="(Identifier,s)"];
"1000477" [label="(Call,!s->d1->listen)"];
"1000245" [label="(Call,p++)"];
"1000375" [label="(Call,s->packet_length = 0)"];
"1000452" [label="(Literal,0)"];
"1000341" [label="(ControlStructure,goto again;)"];
"1000168" [label="(Call,s->packet_length < DTLS1_RT_HEADER_LENGTH)"];
"1000407" [label="(Literal,0)"];
"1000244" [label="(Call,*(p++))"];
"1000400" [label="(Identifier,rr)"];
"1000383" [label="(Identifier,s)"];
"1000272" [label="(Literal,6)"];
"1000226" [label="(Identifier,s)"];
"1000365" [label="(ControlStructure,if ( n != i))"];
"1000343" [label="(Call,rr->length > s->packet_length-DTLS1_RT_HEADER_LENGTH)"];
"1000192" [label="(Identifier,n)"];
"1000260" [label="(Call,&(s->s3->read_sequence[2]))"];
"1000361" [label="(Identifier,s)"];
"1000405" [label="(Identifier,s)"];
"1000521" [label="(ControlStructure,goto again;)"];
"1000351" [label="(Identifier,DTLS1_RT_HEADER_LENGTH)"];
"1000523" [label="(Literal,1)"];
"1000425" [label="(Call,rr->type == SSL3_RT_HANDSHAKE)"];
"1000318" [label="(Call,s->packet_length = 0)"];
"1000296" [label="(Call,s->packet_length = 0)"];
"1000436" [label="(Call,s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO)"];
"1000348" [label="(Call,s->packet_length)"];
"1000444" [label="(Call,dtls1_record_replay_check(s, bitmap))"];
"1000497" [label="(Identifier,rr)"];
"1000387" [label="(Identifier,bitmap)"];
"1000175" [label="(Identifier,n)"];
"1000370" [label="(Call,rr->length = 0)"];
"1000437" [label="(Call,s->packet[DTLS1_RT_HEADER_LENGTH])"];
"1000224" [label="(Identifier,p)"];
"1000330" [label="(Block,)"];
"1000345" [label="(Identifier,rr)"];
"1000475" [label="(Identifier,s)"];
"1000281" [label="(Identifier,s)"];
"1000360" [label="(Call,ssl3_read_n(s,i,i,1))"];
"1000372" [label="(Identifier,rr)"];
"1000448" [label="(Call,rr->length = 0)"];
"1000222" [label="(Literal,0)"];
"1000517" [label="(Call,s->packet_length)"];
"1000155" [label="(ControlStructure,if (dtls1_get_processed_record(s)))"];
"1000157" [label="(Identifier,s)"];
"1000204" [label="(Literal,0)"];
"1000485" [label="(Identifier,s)"];
"1000190" [label="(Literal,0)"];
"1000359" [label="(Identifier,n)"];
"1000474" [label="(Call,s->in_handshake)"];
"1000480" [label="(Identifier,s)"];
"1000337" [label="(Call,s->packet_length)"];
"1000465" [label="(ControlStructure,goto again;)"];
"1000449" [label="(Call,rr->length)"];
"1000147" [label="(Call,&(s->s3->rrec))"];
"1000354" [label="(Identifier,i)"];
"1000393" [label="(ControlStructure,if ( bitmap == NULL))"];
"1000376" [label="(Call,s->packet_length)"];
"1000320" [label="(Identifier,s)"];
"1000409" [label="(ControlStructure,if (!BIO_dgram_is_sctp(SSL_get_rbio(s))))"];
"1000300" [label="(Literal,0)"];
"1000153" [label="(Call,dtls1_process_buffered_records(s))"];
"1000131" [label="(MethodParameterIn,SSL *s)"];
"1000421" [label="(Identifier,s)"];
"1000347" [label="(Call,s->packet_length-DTLS1_RT_HEADER_LENGTH)"];
"1000329" [label="(Identifier,SSL3_RT_MAX_ENCRYPTED_LENGTH)"];
"1000269" [label="(Literal,6)"];
"1000338" [label="(Identifier,s)"];
"1000507" [label="(Call,!dtls1_process_record(s))"];
"1000268" [label="(Identifier,p)"];
"1000358" [label="(Call,n=ssl3_read_n(s,i,i,1))"];
"1000368" [label="(Identifier,i)"];
"1000274" [label="(Identifier,p)"];
"1000408" [label="(ControlStructure,goto again;)"];
"1000516" [label="(Call,s->packet_length = 0)"];
"1000174" [label="(Call,n=ssl3_read_n(s, DTLS1_RT_HEADER_LENGTH, s->s3->rbuf.len, 0))"];
"1000524" [label="(MethodReturn,int)"];
"1000417" [label="(Call,!(s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO))"];
"1000317" [label="(Literal,0)"];
"1000336" [label="(Call,s->packet_length = 0)"];
"1000394" [label="(Call,bitmap == NULL)"];
"1000259" [label="(Call,memcpy(&(s->s3->read_sequence[2]), p, 6))"];
"1000208" [label="(Identifier,s)"];
"1000403" [label="(Call,s->packet_length = 0)"];
"1000389" [label="(Identifier,s)"];
"1000342" [label="(ControlStructure,if (rr->length > s->packet_length-DTLS1_RT_HEADER_LENGTH))"];
"1000515" [label="(Literal,0)"];
"1000324" [label="(ControlStructure,if (rr->length > SSL3_RT_MAX_ENCRYPTED_LENGTH))"];
"1000369" [label="(Block,)"];
"1000254" [label="(Call,n2s(p,rr->epoch))"];
"1000364" [label="(Literal,1)"];
"1000439" [label="(Identifier,s)"];
"1000388" [label="(Call,dtls1_get_bitmap(s, rr, &is_next_epoch))"];
"1000188" [label="(Call,n <= 0)"];
"1000198" [label="(Identifier,DTLS1_RT_HEADER_LENGTH)"];
"1000413" [label="(Identifier,s)"];
"1000196" [label="(Identifier,s)"];
"1000355" [label="(Call,rr->length)"];
"1000374" [label="(Literal,0)"];
"1000500" [label="(Call,s->packet_length = 0)"];
"1000221" [label="(Literal,0)"];
"1000246" [label="(Identifier,p)"];
"1000411" [label="(Call,BIO_dgram_is_sctp(SSL_get_rbio(s)))"];
"1000191" [label="(Return,return(n);)"];
"1000424" [label="(Call,rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO)"];
"1000223" [label="(Identifier,SSL3_RT_HEADER)"];
"1000194" [label="(Call,s->packet_length != DTLS1_RT_HEADER_LENGTH)"];
"1000478" [label="(Call,s->d1->listen)"];
"1000416" [label="(Call,!(s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO) &&\n\t\t    !dtls1_record_replay_check(s, bitmap))"];
"1000332" [label="(Call,rr->length)"];
"1000225" [label="(Identifier,DTLS1_RT_HEADER_LENGTH)"];
"1000518" [label="(Identifier,s)"];
"1000295" [label="(Literal,0)"];
"1000499" [label="(Literal,0)"];
"1000502" [label="(Identifier,s)"];
"1000504" [label="(Literal,0)"];
"1000471" [label="(Call,SSL_in_init(s) || s->in_handshake)"];
"1000353" [label="(Call,i=rr->length)"];
"1000418" [label="(Call,s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO)"];
"1000298" [label="(Identifier,s)"];
"1000312" [label="(Block,)"];
"1000391" [label="(Call,&is_next_epoch)"];
"1000501" [label="(Call,s->packet_length)"];
"1000419" [label="(Call,s->d1->listen)"];
"1000396" [label="(Identifier,NULL)"];
"1000472" [label="(Call,SSL_in_init(s))"];
"1000508" [label="(Call,dtls1_process_record(s))"];
"1000159" [label="(Literal,1)"];
"1000187" [label="(ControlStructure,if (n <= 0))"];
"1000506" [label="(ControlStructure,if (!dtls1_process_record(s)))"];
"1000377" [label="(Identifier,s)"];
"1000255" [label="(Identifier,p)"];
"1000322" [label="(Literal,0)"];
"1000235" [label="(Call,p++)"];
"1000397" [label="(Block,)"];
"1000163" [label="(Call,s->rstate != SSL_ST_READ_BODY)"];
"1000202" [label="(Identifier,s)"];
"1000399" [label="(Call,rr->length)"];
"1000201" [label="(Call,s->packet_length)"];
"1000450" [label="(Identifier,rr)"];
"1000430" [label="(Call,s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO)"];
"1000412" [label="(Call,SSL_get_rbio(s))"];
"1000469" [label="(ControlStructure,if ((SSL_in_init(s) || s->in_handshake) && !s->d1->listen))"];
"1000455" [label="(Identifier,s)"];
"1000333" [label="(Identifier,rr)"];
"1000173" [label="(Block,)"];
"1000218" [label="(Identifier,s)"];
"1000459" [label="(ControlStructure,if (rr->length == 0))"];
"1000415" [label="(ControlStructure,if (!(s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO) &&\n\t\t    !dtls1_record_replay_check(s, bitmap)))"];
"1000442" [label="(Identifier,SSL3_MT_CLIENT_HELLO)"];
"1000172" [label="(Identifier,DTLS1_RT_HEADER_LENGTH)"];
"1000199" [label="(Block,)"];
"1000193" [label="(ControlStructure,if (s->packet_length != DTLS1_RT_HEADER_LENGTH))"];
"1000363" [label="(Identifier,i)"];
"1000435" [label="(Identifier,DTLS1_RT_HEADER_LENGTH)"];
"1000239" [label="(Call,*(p++))"];
"1000366" [label="(Call,n != i)"];
"1000353" -> "1000352"  [label="AST: "];
"1000353" -> "1000355"  [label="CFG: "];
"1000354" -> "1000353"  [label="AST: "];
"1000355" -> "1000353"  [label="AST: "];
"1000359" -> "1000353"  [label="CFG: "];
"1000343" -> "1000353"  [label="DDG: rr->length"];
"1000353" -> "1000360"  [label="DDG: i"];
"1000343" -> "1000342"  [label="AST: "];
"1000343" -> "1000347"  [label="CFG: "];
"1000344" -> "1000343"  [label="AST: "];
"1000347" -> "1000343"  [label="AST: "];
"1000354" -> "1000343"  [label="CFG: "];
"1000383" -> "1000343"  [label="CFG: "];
"1000343" -> "1000524"  [label="DDG: rr->length > s->packet_length-DTLS1_RT_HEADER_LENGTH"];
"1000343" -> "1000524"  [label="DDG: s->packet_length-DTLS1_RT_HEADER_LENGTH"];
"1000325" -> "1000343"  [label="DDG: rr->length"];
"1000460" -> "1000343"  [label="DDG: rr->length"];
"1000291" -> "1000343"  [label="DDG: rr->length"];
"1000495" -> "1000343"  [label="DDG: rr->length"];
"1000331" -> "1000343"  [label="DDG: rr->length"];
"1000448" -> "1000343"  [label="DDG: rr->length"];
"1000511" -> "1000343"  [label="DDG: rr->length"];
"1000313" -> "1000343"  [label="DDG: rr->length"];
"1000398" -> "1000343"  [label="DDG: rr->length"];
"1000370" -> "1000343"  [label="DDG: rr->length"];
"1000347" -> "1000343"  [label="DDG: s->packet_length"];
"1000347" -> "1000343"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000343" -> "1000460"  [label="DDG: rr->length"];
"1000325" -> "1000324"  [label="AST: "];
"1000325" -> "1000329"  [label="CFG: "];
"1000326" -> "1000325"  [label="AST: "];
"1000329" -> "1000325"  [label="AST: "];
"1000333" -> "1000325"  [label="CFG: "];
"1000345" -> "1000325"  [label="CFG: "];
"1000325" -> "1000524"  [label="DDG: SSL3_RT_MAX_ENCRYPTED_LENGTH"];
"1000325" -> "1000524"  [label="DDG: rr->length > SSL3_RT_MAX_ENCRYPTED_LENGTH"];
"1000273" -> "1000325"  [label="DDG: rr->length"];
"1000273" -> "1000173"  [label="AST: "];
"1000273" -> "1000275"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000275" -> "1000273"  [label="AST: "];
"1000281" -> "1000273"  [label="CFG: "];
"1000273" -> "1000524"  [label="DDG: p"];
"1000273" -> "1000524"  [label="DDG: n2s(p,rr->length)"];
"1000270" -> "1000273"  [label="DDG: p"];
"1000460" -> "1000273"  [label="DDG: rr->length"];
"1000291" -> "1000273"  [label="DDG: rr->length"];
"1000495" -> "1000273"  [label="DDG: rr->length"];
"1000331" -> "1000273"  [label="DDG: rr->length"];
"1000448" -> "1000273"  [label="DDG: rr->length"];
"1000511" -> "1000273"  [label="DDG: rr->length"];
"1000313" -> "1000273"  [label="DDG: rr->length"];
"1000398" -> "1000273"  [label="DDG: rr->length"];
"1000370" -> "1000273"  [label="DDG: rr->length"];
"1000270" -> "1000173"  [label="AST: "];
"1000270" -> "1000272"  [label="CFG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000272" -> "1000270"  [label="AST: "];
"1000274" -> "1000270"  [label="CFG: "];
"1000259" -> "1000270"  [label="DDG: p"];
"1000259" -> "1000173"  [label="AST: "];
"1000259" -> "1000269"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000268" -> "1000259"  [label="AST: "];
"1000269" -> "1000259"  [label="AST: "];
"1000271" -> "1000259"  [label="CFG: "];
"1000259" -> "1000524"  [label="DDG: memcpy(&(s->s3->read_sequence[2]), p, 6)"];
"1000259" -> "1000524"  [label="DDG: &(s->s3->read_sequence[2])"];
"1000254" -> "1000259"  [label="DDG: p"];
"1000254" -> "1000173"  [label="AST: "];
"1000254" -> "1000256"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000256" -> "1000254"  [label="AST: "];
"1000264" -> "1000254"  [label="CFG: "];
"1000254" -> "1000524"  [label="DDG: n2s(p,rr->epoch)"];
"1000254" -> "1000524"  [label="DDG: rr->epoch"];
"1000245" -> "1000254"  [label="DDG: p"];
"1000245" -> "1000244"  [label="AST: "];
"1000245" -> "1000246"  [label="CFG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000244" -> "1000245"  [label="CFG: "];
"1000240" -> "1000245"  [label="DDG: p"];
"1000240" -> "1000239"  [label="AST: "];
"1000240" -> "1000241"  [label="CFG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000239" -> "1000240"  [label="CFG: "];
"1000235" -> "1000240"  [label="DDG: p"];
"1000235" -> "1000234"  [label="AST: "];
"1000235" -> "1000236"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000234" -> "1000235"  [label="CFG: "];
"1000211" -> "1000235"  [label="DDG: p"];
"1000220" -> "1000235"  [label="DDG: p"];
"1000211" -> "1000173"  [label="AST: "];
"1000211" -> "1000213"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000213" -> "1000211"  [label="AST: "];
"1000218" -> "1000211"  [label="CFG: "];
"1000211" -> "1000524"  [label="DDG: s->packet"];
"1000436" -> "1000211"  [label="DDG: s->packet[DTLS1_RT_HEADER_LENGTH]"];
"1000211" -> "1000220"  [label="DDG: p"];
"1000436" -> "1000430"  [label="AST: "];
"1000436" -> "1000442"  [label="CFG: "];
"1000437" -> "1000436"  [label="AST: "];
"1000442" -> "1000436"  [label="AST: "];
"1000430" -> "1000436"  [label="CFG: "];
"1000436" -> "1000524"  [label="DDG: SSL3_MT_CLIENT_HELLO"];
"1000436" -> "1000524"  [label="DDG: s->packet[DTLS1_RT_HEADER_LENGTH]"];
"1000436" -> "1000430"  [label="DDG: s->packet[DTLS1_RT_HEADER_LENGTH]"];
"1000436" -> "1000430"  [label="DDG: SSL3_MT_CLIENT_HELLO"];
"1000220" -> "1000216"  [label="AST: "];
"1000220" -> "1000227"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000222" -> "1000220"  [label="AST: "];
"1000223" -> "1000220"  [label="AST: "];
"1000224" -> "1000220"  [label="AST: "];
"1000225" -> "1000220"  [label="AST: "];
"1000226" -> "1000220"  [label="AST: "];
"1000227" -> "1000220"  [label="AST: "];
"1000232" -> "1000220"  [label="CFG: "];
"1000220" -> "1000524"  [label="DDG: s->msg_callback_arg"];
"1000220" -> "1000524"  [label="DDG: SSL3_RT_HEADER"];
"1000220" -> "1000524"  [label="DDG: s->msg_callback(0, 0, SSL3_RT_HEADER, p, DTLS1_RT_HEADER_LENGTH, s, s->msg_callback_arg)"];
"1000220" -> "1000168"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000220" -> "1000176"  [label="DDG: s"];
"1000220" -> "1000176"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000194" -> "1000220"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000176" -> "1000220"  [label="DDG: s"];
"1000131" -> "1000220"  [label="DDG: s"];
"1000220" -> "1000347"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000220" -> "1000360"  [label="DDG: s"];
"1000220" -> "1000388"  [label="DDG: s"];
"1000194" -> "1000193"  [label="AST: "];
"1000194" -> "1000198"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000198" -> "1000194"  [label="AST: "];
"1000202" -> "1000194"  [label="CFG: "];
"1000208" -> "1000194"  [label="CFG: "];
"1000194" -> "1000524"  [label="DDG: s->packet_length != DTLS1_RT_HEADER_LENGTH"];
"1000194" -> "1000168"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000194" -> "1000176"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000375" -> "1000194"  [label="DDG: s->packet_length"];
"1000200" -> "1000194"  [label="DDG: s->packet_length"];
"1000168" -> "1000194"  [label="DDG: s->packet_length"];
"1000347" -> "1000194"  [label="DDG: s->packet_length"];
"1000431" -> "1000194"  [label="DDG: s->packet_length"];
"1000500" -> "1000194"  [label="DDG: s->packet_length"];
"1000296" -> "1000194"  [label="DDG: s->packet_length"];
"1000516" -> "1000194"  [label="DDG: s->packet_length"];
"1000453" -> "1000194"  [label="DDG: s->packet_length"];
"1000336" -> "1000194"  [label="DDG: s->packet_length"];
"1000403" -> "1000194"  [label="DDG: s->packet_length"];
"1000318" -> "1000194"  [label="DDG: s->packet_length"];
"1000176" -> "1000194"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000194" -> "1000347"  [label="DDG: s->packet_length"];
"1000194" -> "1000347"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000375" -> "1000369"  [label="AST: "];
"1000375" -> "1000379"  [label="CFG: "];
"1000376" -> "1000375"  [label="AST: "];
"1000379" -> "1000375"  [label="AST: "];
"1000380" -> "1000375"  [label="CFG: "];
"1000375" -> "1000524"  [label="DDG: s->packet_length"];
"1000375" -> "1000168"  [label="DDG: s->packet_length"];
"1000375" -> "1000347"  [label="DDG: s->packet_length"];
"1000200" -> "1000199"  [label="AST: "];
"1000200" -> "1000204"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000204" -> "1000200"  [label="AST: "];
"1000205" -> "1000200"  [label="CFG: "];
"1000200" -> "1000524"  [label="DDG: s->packet_length"];
"1000200" -> "1000168"  [label="DDG: s->packet_length"];
"1000200" -> "1000347"  [label="DDG: s->packet_length"];
"1000168" -> "1000162"  [label="AST: "];
"1000168" -> "1000172"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000172" -> "1000168"  [label="AST: "];
"1000162" -> "1000168"  [label="CFG: "];
"1000168" -> "1000524"  [label="DDG: s->packet_length"];
"1000168" -> "1000162"  [label="DDG: s->packet_length"];
"1000168" -> "1000162"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000347" -> "1000168"  [label="DDG: s->packet_length"];
"1000347" -> "1000168"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000431" -> "1000168"  [label="DDG: s->packet_length"];
"1000431" -> "1000168"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000500" -> "1000168"  [label="DDG: s->packet_length"];
"1000296" -> "1000168"  [label="DDG: s->packet_length"];
"1000516" -> "1000168"  [label="DDG: s->packet_length"];
"1000453" -> "1000168"  [label="DDG: s->packet_length"];
"1000336" -> "1000168"  [label="DDG: s->packet_length"];
"1000403" -> "1000168"  [label="DDG: s->packet_length"];
"1000318" -> "1000168"  [label="DDG: s->packet_length"];
"1000168" -> "1000176"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000168" -> "1000347"  [label="DDG: s->packet_length"];
"1000168" -> "1000347"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000347" -> "1000351"  [label="CFG: "];
"1000348" -> "1000347"  [label="AST: "];
"1000351" -> "1000347"  [label="AST: "];
"1000347" -> "1000524"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000347" -> "1000524"  [label="DDG: s->packet_length"];
"1000347" -> "1000176"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000431" -> "1000347"  [label="DDG: s->packet_length"];
"1000431" -> "1000347"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000500" -> "1000347"  [label="DDG: s->packet_length"];
"1000296" -> "1000347"  [label="DDG: s->packet_length"];
"1000516" -> "1000347"  [label="DDG: s->packet_length"];
"1000453" -> "1000347"  [label="DDG: s->packet_length"];
"1000336" -> "1000347"  [label="DDG: s->packet_length"];
"1000403" -> "1000347"  [label="DDG: s->packet_length"];
"1000318" -> "1000347"  [label="DDG: s->packet_length"];
"1000347" -> "1000431"  [label="DDG: s->packet_length"];
"1000347" -> "1000431"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000431" -> "1000430"  [label="AST: "];
"1000431" -> "1000435"  [label="CFG: "];
"1000432" -> "1000431"  [label="AST: "];
"1000435" -> "1000431"  [label="AST: "];
"1000439" -> "1000431"  [label="CFG: "];
"1000430" -> "1000431"  [label="CFG: "];
"1000431" -> "1000524"  [label="DDG: s->packet_length"];
"1000431" -> "1000524"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000431" -> "1000176"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000431" -> "1000430"  [label="DDG: s->packet_length"];
"1000431" -> "1000430"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000500" -> "1000468"  [label="AST: "];
"1000500" -> "1000504"  [label="CFG: "];
"1000501" -> "1000500"  [label="AST: "];
"1000504" -> "1000500"  [label="AST: "];
"1000505" -> "1000500"  [label="CFG: "];
"1000500" -> "1000524"  [label="DDG: s->packet_length"];
"1000296" -> "1000290"  [label="AST: "];
"1000296" -> "1000300"  [label="CFG: "];
"1000297" -> "1000296"  [label="AST: "];
"1000300" -> "1000296"  [label="AST: "];
"1000301" -> "1000296"  [label="CFG: "];
"1000296" -> "1000524"  [label="DDG: s->packet_length"];
"1000516" -> "1000510"  [label="AST: "];
"1000516" -> "1000520"  [label="CFG: "];
"1000517" -> "1000516"  [label="AST: "];
"1000520" -> "1000516"  [label="AST: "];
"1000521" -> "1000516"  [label="CFG: "];
"1000516" -> "1000524"  [label="DDG: s->packet_length"];
"1000453" -> "1000447"  [label="AST: "];
"1000453" -> "1000457"  [label="CFG: "];
"1000454" -> "1000453"  [label="AST: "];
"1000457" -> "1000453"  [label="AST: "];
"1000458" -> "1000453"  [label="CFG: "];
"1000453" -> "1000524"  [label="DDG: s->packet_length"];
"1000336" -> "1000330"  [label="AST: "];
"1000336" -> "1000340"  [label="CFG: "];
"1000337" -> "1000336"  [label="AST: "];
"1000340" -> "1000336"  [label="AST: "];
"1000341" -> "1000336"  [label="CFG: "];
"1000336" -> "1000524"  [label="DDG: s->packet_length"];
"1000403" -> "1000397"  [label="AST: "];
"1000403" -> "1000407"  [label="CFG: "];
"1000404" -> "1000403"  [label="AST: "];
"1000407" -> "1000403"  [label="AST: "];
"1000408" -> "1000403"  [label="CFG: "];
"1000403" -> "1000524"  [label="DDG: s->packet_length"];
"1000318" -> "1000312"  [label="AST: "];
"1000318" -> "1000322"  [label="CFG: "];
"1000319" -> "1000318"  [label="AST: "];
"1000322" -> "1000318"  [label="AST: "];
"1000323" -> "1000318"  [label="CFG: "];
"1000318" -> "1000524"  [label="DDG: s->packet_length"];
"1000176" -> "1000174"  [label="AST: "];
"1000176" -> "1000186"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000178" -> "1000176"  [label="AST: "];
"1000179" -> "1000176"  [label="AST: "];
"1000186" -> "1000176"  [label="AST: "];
"1000174" -> "1000176"  [label="CFG: "];
"1000176" -> "1000524"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000176" -> "1000524"  [label="DDG: s->s3->rbuf.len"];
"1000176" -> "1000524"  [label="DDG: s"];
"1000176" -> "1000174"  [label="DDG: s"];
"1000176" -> "1000174"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000176" -> "1000174"  [label="DDG: s->s3->rbuf.len"];
"1000176" -> "1000174"  [label="DDG: 0"];
"1000360" -> "1000176"  [label="DDG: s"];
"1000156" -> "1000176"  [label="DDG: s"];
"1000472" -> "1000176"  [label="DDG: s"];
"1000484" -> "1000176"  [label="DDG: s"];
"1000508" -> "1000176"  [label="DDG: s"];
"1000388" -> "1000176"  [label="DDG: s"];
"1000412" -> "1000176"  [label="DDG: s"];
"1000444" -> "1000176"  [label="DDG: s"];
"1000131" -> "1000176"  [label="DDG: s"];
"1000176" -> "1000360"  [label="DDG: s"];
"1000176" -> "1000388"  [label="DDG: s"];
"1000360" -> "1000358"  [label="AST: "];
"1000360" -> "1000364"  [label="CFG: "];
"1000361" -> "1000360"  [label="AST: "];
"1000362" -> "1000360"  [label="AST: "];
"1000363" -> "1000360"  [label="AST: "];
"1000364" -> "1000360"  [label="AST: "];
"1000358" -> "1000360"  [label="CFG: "];
"1000360" -> "1000358"  [label="DDG: s"];
"1000360" -> "1000358"  [label="DDG: i"];
"1000360" -> "1000358"  [label="DDG: 1"];
"1000156" -> "1000360"  [label="DDG: s"];
"1000472" -> "1000360"  [label="DDG: s"];
"1000484" -> "1000360"  [label="DDG: s"];
"1000508" -> "1000360"  [label="DDG: s"];
"1000388" -> "1000360"  [label="DDG: s"];
"1000412" -> "1000360"  [label="DDG: s"];
"1000444" -> "1000360"  [label="DDG: s"];
"1000131" -> "1000360"  [label="DDG: s"];
"1000360" -> "1000366"  [label="DDG: i"];
"1000360" -> "1000388"  [label="DDG: s"];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000157"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000159" -> "1000156"  [label="CFG: "];
"1000160" -> "1000156"  [label="CFG: "];
"1000156" -> "1000524"  [label="DDG: s"];
"1000156" -> "1000524"  [label="DDG: dtls1_get_processed_record(s)"];
"1000153" -> "1000156"  [label="DDG: s"];
"1000131" -> "1000156"  [label="DDG: s"];
"1000156" -> "1000388"  [label="DDG: s"];
"1000153" -> "1000132"  [label="AST: "];
"1000153" -> "1000154"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000157" -> "1000153"  [label="CFG: "];
"1000153" -> "1000524"  [label="DDG: dtls1_process_buffered_records(s)"];
"1000131" -> "1000153"  [label="DDG: s"];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000524"  [label="DDG: s"];
"1000131" -> "1000388"  [label="DDG: s"];
"1000131" -> "1000412"  [label="DDG: s"];
"1000131" -> "1000444"  [label="DDG: s"];
"1000131" -> "1000472"  [label="DDG: s"];
"1000131" -> "1000484"  [label="DDG: s"];
"1000131" -> "1000508"  [label="DDG: s"];
"1000472" -> "1000471"  [label="AST: "];
"1000472" -> "1000473"  [label="CFG: "];
"1000473" -> "1000472"  [label="AST: "];
"1000475" -> "1000472"  [label="CFG: "];
"1000471" -> "1000472"  [label="CFG: "];
"1000472" -> "1000388"  [label="DDG: s"];
"1000472" -> "1000471"  [label="DDG: s"];
"1000412" -> "1000472"  [label="DDG: s"];
"1000444" -> "1000472"  [label="DDG: s"];
"1000472" -> "1000484"  [label="DDG: s"];
"1000412" -> "1000411"  [label="AST: "];
"1000412" -> "1000413"  [label="CFG: "];
"1000413" -> "1000412"  [label="AST: "];
"1000411" -> "1000412"  [label="CFG: "];
"1000412" -> "1000388"  [label="DDG: s"];
"1000412" -> "1000411"  [label="DDG: s"];
"1000388" -> "1000412"  [label="DDG: s"];
"1000412" -> "1000444"  [label="DDG: s"];
"1000412" -> "1000508"  [label="DDG: s"];
"1000388" -> "1000386"  [label="AST: "];
"1000388" -> "1000391"  [label="CFG: "];
"1000389" -> "1000388"  [label="AST: "];
"1000390" -> "1000388"  [label="AST: "];
"1000391" -> "1000388"  [label="AST: "];
"1000386" -> "1000388"  [label="CFG: "];
"1000388" -> "1000524"  [label="DDG: rr"];
"1000388" -> "1000524"  [label="DDG: &is_next_epoch"];
"1000388" -> "1000386"  [label="DDG: s"];
"1000388" -> "1000386"  [label="DDG: rr"];
"1000388" -> "1000386"  [label="DDG: &is_next_epoch"];
"1000484" -> "1000388"  [label="DDG: s"];
"1000508" -> "1000388"  [label="DDG: s"];
"1000444" -> "1000388"  [label="DDG: s"];
"1000145" -> "1000388"  [label="DDG: rr"];
"1000484" -> "1000483"  [label="AST: "];
"1000484" -> "1000492"  [label="CFG: "];
"1000485" -> "1000484"  [label="AST: "];
"1000486" -> "1000484"  [label="AST: "];
"1000492" -> "1000484"  [label="AST: "];
"1000497" -> "1000484"  [label="CFG: "];
"1000484" -> "1000524"  [label="DDG: &(s->d1->unprocessed_rcds)"];
"1000484" -> "1000524"  [label="DDG: rr->seq_num"];
"1000484" -> "1000524"  [label="DDG: dtls1_buffer_record(s, &(s->d1->unprocessed_rcds), rr->seq_num)"];
"1000508" -> "1000507"  [label="AST: "];
"1000508" -> "1000509"  [label="CFG: "];
"1000509" -> "1000508"  [label="AST: "];
"1000507" -> "1000508"  [label="CFG: "];
"1000508" -> "1000524"  [label="DDG: s"];
"1000508" -> "1000507"  [label="DDG: s"];
"1000444" -> "1000508"  [label="DDG: s"];
"1000444" -> "1000443"  [label="AST: "];
"1000444" -> "1000446"  [label="CFG: "];
"1000445" -> "1000444"  [label="AST: "];
"1000446" -> "1000444"  [label="AST: "];
"1000443" -> "1000444"  [label="CFG: "];
"1000444" -> "1000524"  [label="DDG: bitmap"];
"1000444" -> "1000443"  [label="DDG: s"];
"1000444" -> "1000443"  [label="DDG: bitmap"];
"1000394" -> "1000444"  [label="DDG: bitmap"];
"1000394" -> "1000393"  [label="AST: "];
"1000394" -> "1000396"  [label="CFG: "];
"1000395" -> "1000394"  [label="AST: "];
"1000396" -> "1000394"  [label="AST: "];
"1000400" -> "1000394"  [label="CFG: "];
"1000413" -> "1000394"  [label="CFG: "];
"1000394" -> "1000524"  [label="DDG: NULL"];
"1000394" -> "1000524"  [label="DDG: bitmap == NULL"];
"1000394" -> "1000524"  [label="DDG: bitmap"];
"1000386" -> "1000394"  [label="DDG: bitmap"];
"1000386" -> "1000132"  [label="AST: "];
"1000387" -> "1000386"  [label="AST: "];
"1000395" -> "1000386"  [label="CFG: "];
"1000386" -> "1000524"  [label="DDG: dtls1_get_bitmap(s, rr, &is_next_epoch)"];
"1000145" -> "1000132"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000154" -> "1000145"  [label="CFG: "];
"1000145" -> "1000524"  [label="DDG: rr"];
"1000145" -> "1000524"  [label="DDG: &(s->s3->rrec)"];
"1000460" -> "1000459"  [label="AST: "];
"1000460" -> "1000464"  [label="CFG: "];
"1000461" -> "1000460"  [label="AST: "];
"1000464" -> "1000460"  [label="AST: "];
"1000465" -> "1000460"  [label="CFG: "];
"1000467" -> "1000460"  [label="CFG: "];
"1000460" -> "1000524"  [label="DDG: rr->length"];
"1000460" -> "1000524"  [label="DDG: rr->length == 0"];
"1000291" -> "1000290"  [label="AST: "];
"1000291" -> "1000295"  [label="CFG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000295" -> "1000291"  [label="AST: "];
"1000298" -> "1000291"  [label="CFG: "];
"1000291" -> "1000524"  [label="DDG: rr->length"];
"1000495" -> "1000468"  [label="AST: "];
"1000495" -> "1000499"  [label="CFG: "];
"1000496" -> "1000495"  [label="AST: "];
"1000499" -> "1000495"  [label="AST: "];
"1000502" -> "1000495"  [label="CFG: "];
"1000495" -> "1000524"  [label="DDG: rr->length"];
"1000331" -> "1000330"  [label="AST: "];
"1000331" -> "1000335"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000335" -> "1000331"  [label="AST: "];
"1000338" -> "1000331"  [label="CFG: "];
"1000331" -> "1000524"  [label="DDG: rr->length"];
"1000448" -> "1000447"  [label="AST: "];
"1000448" -> "1000452"  [label="CFG: "];
"1000449" -> "1000448"  [label="AST: "];
"1000452" -> "1000448"  [label="AST: "];
"1000455" -> "1000448"  [label="CFG: "];
"1000448" -> "1000524"  [label="DDG: rr->length"];
"1000511" -> "1000510"  [label="AST: "];
"1000511" -> "1000515"  [label="CFG: "];
"1000512" -> "1000511"  [label="AST: "];
"1000515" -> "1000511"  [label="AST: "];
"1000518" -> "1000511"  [label="CFG: "];
"1000511" -> "1000524"  [label="DDG: rr->length"];
"1000313" -> "1000312"  [label="AST: "];
"1000313" -> "1000317"  [label="CFG: "];
"1000314" -> "1000313"  [label="AST: "];
"1000317" -> "1000313"  [label="AST: "];
"1000320" -> "1000313"  [label="CFG: "];
"1000313" -> "1000524"  [label="DDG: rr->length"];
"1000398" -> "1000397"  [label="AST: "];
"1000398" -> "1000402"  [label="CFG: "];
"1000399" -> "1000398"  [label="AST: "];
"1000402" -> "1000398"  [label="AST: "];
"1000405" -> "1000398"  [label="CFG: "];
"1000398" -> "1000524"  [label="DDG: rr->length"];
"1000370" -> "1000369"  [label="AST: "];
"1000370" -> "1000374"  [label="CFG: "];
"1000371" -> "1000370"  [label="AST: "];
"1000374" -> "1000370"  [label="AST: "];
"1000377" -> "1000370"  [label="CFG: "];
"1000370" -> "1000524"  [label="DDG: rr->length"];
"1000174" -> "1000173"  [label="AST: "];
"1000175" -> "1000174"  [label="AST: "];
"1000189" -> "1000174"  [label="CFG: "];
"1000174" -> "1000524"  [label="DDG: ssl3_read_n(s, DTLS1_RT_HEADER_LENGTH, s->s3->rbuf.len, 0)"];
"1000174" -> "1000188"  [label="DDG: n"];
"1000188" -> "1000187"  [label="AST: "];
"1000188" -> "1000190"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000188"  [label="AST: "];
"1000192" -> "1000188"  [label="CFG: "];
"1000196" -> "1000188"  [label="CFG: "];
"1000188" -> "1000524"  [label="DDG: n <= 0"];
"1000188" -> "1000524"  [label="DDG: n"];
"1000188" -> "1000191"  [label="DDG: n"];
"1000191" -> "1000187"  [label="AST: "];
"1000191" -> "1000192"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000524" -> "1000191"  [label="CFG: "];
"1000191" -> "1000524"  [label="DDG: <RET>"];
"1000192" -> "1000191"  [label="DDG: n"];
"1000162" -> "1000161"  [label="AST: "];
"1000162" -> "1000163"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000175" -> "1000162"  [label="CFG: "];
"1000345" -> "1000162"  [label="CFG: "];
"1000162" -> "1000524"  [label="DDG: s->packet_length < DTLS1_RT_HEADER_LENGTH"];
"1000162" -> "1000524"  [label="DDG: s->rstate != SSL_ST_READ_BODY"];
"1000162" -> "1000524"  [label="DDG: (s->rstate != SSL_ST_READ_BODY) ||\n\t\t(s->packet_length < DTLS1_RT_HEADER_LENGTH)"];
"1000163" -> "1000162"  [label="DDG: s->rstate"];
"1000163" -> "1000162"  [label="DDG: SSL_ST_READ_BODY"];
"1000430" -> "1000424"  [label="AST: "];
"1000424" -> "1000430"  [label="CFG: "];
"1000430" -> "1000524"  [label="DDG: s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO"];
"1000430" -> "1000524"  [label="DDG: s->packet_length > DTLS1_RT_HEADER_LENGTH"];
"1000430" -> "1000424"  [label="DDG: s->packet_length > DTLS1_RT_HEADER_LENGTH"];
"1000430" -> "1000424"  [label="DDG: s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO"];
"1000424" -> "1000418"  [label="AST: "];
"1000424" -> "1000425"  [label="CFG: "];
"1000425" -> "1000424"  [label="AST: "];
"1000418" -> "1000424"  [label="CFG: "];
"1000424" -> "1000524"  [label="DDG: rr->type == SSL3_RT_HANDSHAKE"];
"1000424" -> "1000524"  [label="DDG: s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO"];
"1000424" -> "1000418"  [label="DDG: rr->type == SSL3_RT_HANDSHAKE"];
"1000424" -> "1000418"  [label="DDG: s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO"];
"1000425" -> "1000424"  [label="DDG: rr->type"];
"1000425" -> "1000424"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000418" -> "1000417"  [label="AST: "];
"1000418" -> "1000419"  [label="CFG: "];
"1000419" -> "1000418"  [label="AST: "];
"1000417" -> "1000418"  [label="CFG: "];
"1000418" -> "1000524"  [label="DDG: rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO"];
"1000418" -> "1000524"  [label="DDG: s->d1->listen"];
"1000418" -> "1000417"  [label="DDG: s->d1->listen"];
"1000418" -> "1000417"  [label="DDG: rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO"];
"1000477" -> "1000418"  [label="DDG: s->d1->listen"];
"1000418" -> "1000477"  [label="DDG: s->d1->listen"];
"1000417" -> "1000416"  [label="AST: "];
"1000445" -> "1000417"  [label="CFG: "];
"1000416" -> "1000417"  [label="CFG: "];
"1000417" -> "1000524"  [label="DDG: s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO"];
"1000417" -> "1000416"  [label="DDG: s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO"];
"1000416" -> "1000415"  [label="AST: "];
"1000416" -> "1000443"  [label="CFG: "];
"1000443" -> "1000416"  [label="AST: "];
"1000450" -> "1000416"  [label="CFG: "];
"1000462" -> "1000416"  [label="CFG: "];
"1000416" -> "1000524"  [label="DDG: !dtls1_record_replay_check(s, bitmap)"];
"1000416" -> "1000524"  [label="DDG: !(s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO) &&\n\t\t    !dtls1_record_replay_check(s, bitmap)"];
"1000416" -> "1000524"  [label="DDG: !(s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO)"];
"1000443" -> "1000416"  [label="DDG: dtls1_record_replay_check(s, bitmap)"];
"1000477" -> "1000470"  [label="AST: "];
"1000477" -> "1000478"  [label="CFG: "];
"1000478" -> "1000477"  [label="AST: "];
"1000470" -> "1000477"  [label="CFG: "];
"1000477" -> "1000524"  [label="DDG: s->d1->listen"];
"1000477" -> "1000470"  [label="DDG: s->d1->listen"];
"1000470" -> "1000469"  [label="AST: "];
"1000470" -> "1000471"  [label="CFG: "];
"1000471" -> "1000470"  [label="AST: "];
"1000485" -> "1000470"  [label="CFG: "];
"1000497" -> "1000470"  [label="CFG: "];
"1000470" -> "1000524"  [label="DDG: !s->d1->listen"];
"1000470" -> "1000524"  [label="DDG: SSL_in_init(s) || s->in_handshake"];
"1000470" -> "1000524"  [label="DDG: (SSL_in_init(s) || s->in_handshake) && !s->d1->listen"];
"1000471" -> "1000470"  [label="DDG: SSL_in_init(s)"];
"1000471" -> "1000470"  [label="DDG: s->in_handshake"];
"1000443" -> "1000524"  [label="DDG: dtls1_record_replay_check(s, bitmap)"];
"1000471" -> "1000474"  [label="CFG: "];
"1000474" -> "1000471"  [label="AST: "];
"1000480" -> "1000471"  [label="CFG: "];
"1000471" -> "1000524"  [label="DDG: SSL_in_init(s)"];
"1000471" -> "1000524"  [label="DDG: s->in_handshake"];
"1000507" -> "1000506"  [label="AST: "];
"1000513" -> "1000507"  [label="CFG: "];
"1000523" -> "1000507"  [label="CFG: "];
"1000507" -> "1000524"  [label="DDG: !dtls1_process_record(s)"];
"1000507" -> "1000524"  [label="DDG: dtls1_process_record(s)"];
"1000411" -> "1000410"  [label="AST: "];
"1000410" -> "1000411"  [label="CFG: "];
"1000411" -> "1000524"  [label="DDG: SSL_get_rbio(s)"];
"1000411" -> "1000410"  [label="DDG: SSL_get_rbio(s)"];
"1000410" -> "1000409"  [label="AST: "];
"1000421" -> "1000410"  [label="CFG: "];
"1000462" -> "1000410"  [label="CFG: "];
"1000410" -> "1000524"  [label="DDG: BIO_dgram_is_sctp(SSL_get_rbio(s))"];
"1000410" -> "1000524"  [label="DDG: !BIO_dgram_is_sctp(SSL_get_rbio(s))"];
"1000358" -> "1000352"  [label="AST: "];
"1000359" -> "1000358"  [label="AST: "];
"1000367" -> "1000358"  [label="CFG: "];
"1000358" -> "1000524"  [label="DDG: ssl3_read_n(s,i,i,1)"];
"1000358" -> "1000366"  [label="DDG: n"];
"1000366" -> "1000365"  [label="AST: "];
"1000366" -> "1000368"  [label="CFG: "];
"1000367" -> "1000366"  [label="AST: "];
"1000368" -> "1000366"  [label="AST: "];
"1000372" -> "1000366"  [label="CFG: "];
"1000383" -> "1000366"  [label="CFG: "];
"1000366" -> "1000524"  [label="DDG: i"];
"1000366" -> "1000524"  [label="DDG: n"];
"1000366" -> "1000524"  [label="DDG: n != i"];
}
