digraph "1_savannah_3788187e0c396952cd7d905c6c61f3ff8e84b2b4_0@array" {
"1000581" [label="(Call,face->ttf_data[count++] = string_buf[n])"];
"1000390" [label="(Call,!string_buf)"];
"1000168" [label="(Call,*    string_buf = NULL)"];
"1000298" [label="(Call,T1_ToBytes( parser, string_buf, string_size, &real_size, 1 ))"];
"1000254" [label="(Call,T1_Skip_PS_Token( parser ))"];
"1000343" [label="(Call,T1_Skip_PS_Token( parser ))"];
"1000329" [label="(Call,T1_ToInt( parser ))"];
"1000204" [label="(Call,T1_Skip_Spaces( parser ))"];
"1000176" [label="(Call,T1_Skip_Spaces( parser ))"];
"1000130" [label="(Call,parser = &loader->parser)"];
"1000281" [label="(Call,FT_REALLOC( string_buf, old_string_size, string_size ))"];
"1000405" [label="(Call,string_buf[string_size - 1] == 0)"];
"1000305" [label="(Call,old_string_size = string_size)"];
"1000212" [label="(Call,old_string_size = 0)"];
"1000263" [label="(Call,string_size = (FT_Long)( ( parser->root.cursor - cur - 2 + 1 ) / 2 ))"];
"1000265" [label="(Call,(FT_Long)( ( parser->root.cursor - cur - 2 + 1 ) / 2 ))"];
"1000267" [label="(Call,( parser->root.cursor - cur - 2 + 1 ) / 2)"];
"1000268" [label="(Call,parser->root.cursor - cur - 2 + 1)"];
"1000219" [label="(Call,parser->root.cursor < limit)"];
"1000180" [label="(Call,parser->root.cursor >= limit)"];
"1000146" [label="(Call,*    limit  = parser->root.limit)"];
"1000380" [label="(Call,parser->root.cursor += string_size + 1)"];
"1000362" [label="(Call,limit - parser->root.cursor < string_size)"];
"1000363" [label="(Call,limit - parser->root.cursor)"];
"1000332" [label="(Call,string_size < 0)"];
"1000327" [label="(Call,string_size = T1_ToInt( parser ))"];
"1000289" [label="(Call,parser->root.cursor = cur)"];
"1000274" [label="(Call,cur - 2 + 1)"];
"1000227" [label="(Call,cur = parser->root.cursor)"];
"1000189" [label="(Call,parser->root.cursor++)"];
"1000352" [label="(Call,string_buf = parser->root.cursor + 1)"];
"1000483" [label="(Call,FT_REALLOC( face->ttf_data, 12, ttf_size ))"];
"1000492" [label="(Call,count < ttf_size)"];
"1000501" [label="(Call,count++)"];
"1000440" [label="(Call,count < 12)"];
"1000449" [label="(Call,count++)"];
"1000570" [label="(Call,count >= ttf_size)"];
"1000586" [label="(Call,count++)"];
"1000539" [label="(Call,ttf_size += ( len + 3 ) & ~3)"];
"1000549" [label="(Call,face->ttf_size = ttf_size)"];
"1000555" [label="(Call,FT_REALLOC( face->ttf_data, 12 + 16 * num_tables,\n                             ttf_size + 1 ))"];
"1000522" [label="(Call,*  p = face->ttf_data + 12 + 16 * i + 12)"];
"1000537" [label="(Call,FT_PEEK_ULONG( p ))"];
"1000535" [label="(Call,len = FT_PEEK_ULONG( p ))"];
"1000541" [label="(Call,( len + 3 ) & ~3)"];
"1000542" [label="(Call,len + 3)"];
"1000524" [label="(Call,face->ttf_data + 12 + 16 * i + 12)"];
"1000564" [label="(Call,ttf_size + 1)"];
"1000572" [label="(Identifier,ttf_size)"];
"1000564" [label="(Call,ttf_size + 1)"];
"1000445" [label="(Call,face->ttf_data[count++])"];
"1000128" [label="(Block,)"];
"1000220" [label="(Call,parser->root.cursor)"];
"1000362" [label="(Call,limit - parser->root.cursor < string_size)"];
"1000186" [label="(Identifier,limit)"];
"1000522" [label="(Call,*  p = face->ttf_data + 12 + 16 * i + 12)"];
"1000212" [label="(Call,old_string_size = 0)"];
"1000386" [label="(Call,string_size + 1)"];
"1000381" [label="(Call,parser->root.cursor)"];
"1000373" [label="(Literal,\"t42_parse_sfnts: too many binary data\n\")"];
"1000301" [label="(Identifier,string_size)"];
"1000380" [label="(Call,parser->root.cursor += string_size + 1)"];
"1000487" [label="(Literal,12)"];
"1000213" [label="(Identifier,old_string_size)"];
"1000181" [label="(Call,parser->root.cursor)"];
"1000219" [label="(Call,parser->root.cursor < limit)"];
"1000156" [label="(Identifier,num_tables)"];
"1000290" [label="(Call,parser->root.cursor)"];
"1000494" [label="(Identifier,ttf_size)"];
"1000390" [label="(Call,!string_buf)"];
"1000591" [label="(Call,T1_Skip_Spaces( parser ))"];
"1000460" [label="(Call,16 * face->ttf_data[4])"];
"1000146" [label="(Call,*    limit  = parser->root.limit)"];
"1000441" [label="(Identifier,count)"];
"1000402" [label="(Call,string_size & 1)"];
"1000240" [label="(Call,parser->root.cursor++)"];
"1000344" [label="(Identifier,parser)"];
"1000541" [label="(Call,( len + 3 ) & ~3)"];
"1000265" [label="(Call,(FT_Long)( ( parser->root.cursor - cur - 2 + 1 ) / 2 ))"];
"1000304" [label="(Literal,1)"];
"1000592" [label="(Identifier,parser)"];
"1000228" [label="(Identifier,cur)"];
"1000275" [label="(Identifier,cur)"];
"1000587" [label="(Identifier,count)"];
"1000537" [label="(Call,FT_PEEK_ULONG( p ))"];
"1000179" [label="(Call,parser->root.cursor >= limit || *parser->root.cursor++ != '[')"];
"1000306" [label="(Identifier,old_string_size)"];
"1000176" [label="(Call,T1_Skip_Spaces( parser ))"];
"1000571" [label="(Identifier,count)"];
"1000170" [label="(Identifier,NULL)"];
"1000132" [label="(Call,&loader->parser)"];
"1000447" [label="(Identifier,face)"];
"1000484" [label="(Call,face->ttf_data)"];
"1000328" [label="(Identifier,string_size)"];
"1000581" [label="(Call,face->ttf_data[count++] = string_buf[n])"];
"1000352" [label="(Call,string_buf = parser->root.cursor + 1)"];
"1000379" [label="(ControlStructure,else)"];
"1000227" [label="(Call,cur = parser->root.cursor)"];
"1000568" [label="(JumpTarget,case OTHER_TABLES:)"];
"1000287" [label="(Identifier,allocated)"];
"1000401" [label="(Call,( string_size & 1 ) && string_buf[string_size - 1] == 0)"];
"1000593" [label="(MethodReturn,RET)"];
"1000334" [label="(Literal,0)"];
"1000177" [label="(Identifier,parser)"];
"1000331" [label="(ControlStructure,if ( string_size < 0 ))"];
"1000513" [label="(Identifier,i)"];
"1000496" [label="(Call,face->ttf_data[count++] = string_buf[n])"];
"1000483" [label="(Call,FT_REALLOC( face->ttf_data, 12, ttf_size ))"];
"1000215" [label="(Call,count           = 0)"];
"1000205" [label="(Identifier,parser)"];
"1000458" [label="(Identifier,num_tables)"];
"1000189" [label="(Call,parser->root.cursor++)"];
"1000520" [label="(Block,)"];
"1000406" [label="(Call,string_buf[string_size - 1])"];
"1000309" [label="(Identifier,string_size)"];
"1000216" [label="(Identifier,count)"];
"1000169" [label="(Identifier,string_buf)"];
"1000492" [label="(Call,count < ttf_size)"];
"1000160" [label="(Call,ttf_size = 0)"];
"1000575" [label="(Literal,\"t42_parse_sfnts: too many binary data\n\")"];
"1000264" [label="(Identifier,string_size)"];
"1000488" [label="(Identifier,ttf_size)"];
"1000542" [label="(Call,len + 3)"];
"1000557" [label="(Identifier,face)"];
"1000489" [label="(ControlStructure,goto Fail;)"];
"1000544" [label="(Literal,3)"];
"1000433" [label="(Identifier,n)"];
"1000588" [label="(Call,string_buf[n])"];
"1000168" [label="(Call,*    string_buf = NULL)"];
"1000383" [label="(Identifier,parser)"];
"1000263" [label="(Call,string_size = (FT_Long)( ( parser->root.cursor - cur - 2 + 1 ) / 2 ))"];
"1000365" [label="(Call,parser->root.cursor)"];
"1000226" [label="(Block,)"];
"1000343" [label="(Call,T1_Skip_PS_Token( parser ))"];
"1000192" [label="(Identifier,parser)"];
"1000361" [label="(ControlStructure,if ( limit - parser->root.cursor < string_size ))"];
"1000405" [label="(Call,string_buf[string_size - 1] == 0)"];
"1000523" [label="(Identifier,p)"];
"1000296" [label="(Call,(void)T1_ToBytes( parser, string_buf, string_size, &real_size, 1 ))"];
"1000285" [label="(ControlStructure,goto Fail;)"];
"1000444" [label="(Call,face->ttf_data[count++] = string_buf[n])"];
"1000348" [label="(Identifier,parser)"];
"1000279" [label="(Literal,2)"];
"1000482" [label="(ControlStructure,if ( FT_REALLOC( face->ttf_data, 12, ttf_size ) ))"];
"1000497" [label="(Call,face->ttf_data[count++])"];
"1000370" [label="(Identifier,string_size)"];
"1000330" [label="(Identifier,parser)"];
"1000490" [label="(JumpTarget,case BEFORE_TABLE_DIR:)"];
"1000586" [label="(Call,count++)"];
"1000491" [label="(ControlStructure,if ( count < ttf_size ))"];
"1000475" [label="(Call,ttf_size   = 12 + 16 * num_tables)"];
"1000281" [label="(Call,FT_REALLOC( string_buf, old_string_size, string_size ))"];
"1000130" [label="(Call,parser = &loader->parser)"];
"1000540" [label="(Identifier,ttf_size)"];
"1000531" [label="(Call,16 * i)"];
"1000545" [label="(Identifier,~3)"];
"1000553" [label="(Identifier,ttf_size)"];
"1000204" [label="(Call,T1_Skip_Spaces( parser ))"];
"1000305" [label="(Call,old_string_size = string_size)"];
"1000535" [label="(Call,len = FT_PEEK_ULONG( p ))"];
"1000190" [label="(Call,parser->root.cursor)"];
"1000538" [label="(Identifier,p)"];
"1000337" [label="(Literal,\"t42_parse_sfnts: invalid string size\n\")"];
"1000536" [label="(Identifier,len)"];
"1000148" [label="(Call,parser->root.limit)"];
"1000147" [label="(Identifier,limit)"];
"1000449" [label="(Call,count++)"];
"1000289" [label="(Call,parser->root.cursor = cur)"];
"1000354" [label="(Call,parser->root.cursor + 1)"];
"1000299" [label="(Identifier,parser)"];
"1000183" [label="(Identifier,parser)"];
"1000300" [label="(Identifier,string_buf)"];
"1000131" [label="(Identifier,parser)"];
"1000539" [label="(Call,ttf_size += ( len + 3 ) & ~3)"];
"1000554" [label="(ControlStructure,if ( FT_REALLOC( face->ttf_data, 12 + 16 * num_tables,\n                             ttf_size + 1 ) ))"];
"1000567" [label="(ControlStructure,goto Fail;)"];
"1000549" [label="(Call,face->ttf_size = ttf_size)"];
"1000282" [label="(Identifier,string_buf)"];
"1000269" [label="(Call,parser->root.cursor)"];
"1000329" [label="(Call,T1_ToInt( parser ))"];
"1000253" [label="(Block,)"];
"1000268" [label="(Call,parser->root.cursor - cur - 2 + 1)"];
"1000525" [label="(Call,face->ttf_data)"];
"1000283" [label="(Identifier,old_string_size)"];
"1000274" [label="(Call,cur - 2 + 1)"];
"1000280" [label="(ControlStructure,if ( FT_REALLOC( string_buf, old_string_size, string_size ) ))"];
"1000524" [label="(Call,face->ttf_data + 12 + 16 * i + 12)"];
"1000276" [label="(Call,2 + 1)"];
"1000394" [label="(Literal,\"t42_parse_sfnts: invalid data in sfnts array\n\")"];
"1000259" [label="(Identifier,parser)"];
"1000543" [label="(Identifier,len)"];
"1000403" [label="(Identifier,string_size)"];
"1000389" [label="(ControlStructure,if ( !string_buf ))"];
"1000582" [label="(Call,face->ttf_data[count++])"];
"1000519" [label="(Identifier,i)"];
"1000569" [label="(ControlStructure,if ( count >= ttf_size ))"];
"1000364" [label="(Identifier,limit)"];
"1000254" [label="(Call,T1_Skip_PS_Token( parser ))"];
"1000327" [label="(Call,string_size = T1_ToInt( parser ))"];
"1000439" [label="(ControlStructure,if ( count < 12 ))"];
"1000188" [label="(Call,*parser->root.cursor++)"];
"1000307" [label="(Identifier,string_size)"];
"1000559" [label="(Call,12 + 16 * num_tables)"];
"1000316" [label="(Block,)"];
"1000570" [label="(Call,count >= ttf_size)"];
"1000267" [label="(Call,( parser->root.cursor - cur - 2 + 1 ) / 2)"];
"1000411" [label="(Literal,0)"];
"1000584" [label="(Identifier,face)"];
"1000332" [label="(Call,string_size < 0)"];
"1000180" [label="(Call,parser->root.cursor >= limit)"];
"1000284" [label="(Identifier,string_size)"];
"1000225" [label="(Identifier,limit)"];
"1000565" [label="(Identifier,ttf_size)"];
"1000295" [label="(Identifier,cur)"];
"1000499" [label="(Identifier,face)"];
"1000502" [label="(Identifier,count)"];
"1000353" [label="(Identifier,string_buf)"];
"1000138" [label="(Identifier,memory)"];
"1000214" [label="(Literal,0)"];
"1000298" [label="(Call,T1_ToBytes( parser, string_buf, string_size, &real_size, 1 ))"];
"1000391" [label="(Identifier,string_buf)"];
"1000561" [label="(Call,16 * num_tables)"];
"1000501" [label="(Call,count++)"];
"1000237" [label="(Identifier,cur)"];
"1000229" [label="(Call,parser->root.cursor)"];
"1000207" [label="(Identifier,status)"];
"1000508" [label="(Block,)"];
"1000556" [label="(Call,face->ttf_data)"];
"1000255" [label="(Identifier,parser)"];
"1000493" [label="(Identifier,count)"];
"1000528" [label="(Call,12 + 16 * i + 12)"];
"1000434" [label="(Block,)"];
"1000450" [label="(Identifier,count)"];
"1000550" [label="(Call,face->ttf_size)"];
"1000440" [label="(Call,count < 12)"];
"1000173" [label="(Identifier,allocated)"];
"1000218" [label="(ControlStructure,while ( parser->root.cursor < limit ))"];
"1000333" [label="(Identifier,string_size)"];
"1000566" [label="(Literal,1)"];
"1000442" [label="(Literal,12)"];
"1000363" [label="(Call,limit - parser->root.cursor)"];
"1000302" [label="(Call,&real_size)"];
"1000555" [label="(Call,FT_REALLOC( face->ttf_data, 12 + 16 * num_tables,\n                             ttf_size + 1 ))"];
"1000581" -> "1000434"  [label="AST: "];
"1000581" -> "1000588"  [label="CFG: "];
"1000582" -> "1000581"  [label="AST: "];
"1000588" -> "1000581"  [label="AST: "];
"1000433" -> "1000581"  [label="CFG: "];
"1000581" -> "1000593"  [label="DDG: string_buf[n]"];
"1000581" -> "1000593"  [label="DDG: face->ttf_data[count++]"];
"1000581" -> "1000483"  [label="DDG: face->ttf_data[count++]"];
"1000581" -> "1000522"  [label="DDG: face->ttf_data[count++]"];
"1000581" -> "1000524"  [label="DDG: face->ttf_data[count++]"];
"1000581" -> "1000555"  [label="DDG: face->ttf_data[count++]"];
"1000390" -> "1000581"  [label="DDG: string_buf"];
"1000390" -> "1000389"  [label="AST: "];
"1000390" -> "1000391"  [label="CFG: "];
"1000391" -> "1000390"  [label="AST: "];
"1000394" -> "1000390"  [label="CFG: "];
"1000403" -> "1000390"  [label="CFG: "];
"1000390" -> "1000593"  [label="DDG: !string_buf"];
"1000390" -> "1000593"  [label="DDG: string_buf"];
"1000390" -> "1000281"  [label="DDG: string_buf"];
"1000390" -> "1000298"  [label="DDG: string_buf"];
"1000168" -> "1000390"  [label="DDG: string_buf"];
"1000298" -> "1000390"  [label="DDG: string_buf"];
"1000405" -> "1000390"  [label="DDG: string_buf[string_size - 1]"];
"1000352" -> "1000390"  [label="DDG: string_buf"];
"1000390" -> "1000405"  [label="DDG: string_buf"];
"1000390" -> "1000444"  [label="DDG: string_buf"];
"1000390" -> "1000496"  [label="DDG: string_buf"];
"1000168" -> "1000128"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000173" -> "1000168"  [label="CFG: "];
"1000168" -> "1000593"  [label="DDG: string_buf"];
"1000168" -> "1000593"  [label="DDG: NULL"];
"1000168" -> "1000281"  [label="DDG: string_buf"];
"1000298" -> "1000296"  [label="AST: "];
"1000298" -> "1000304"  [label="CFG: "];
"1000299" -> "1000298"  [label="AST: "];
"1000300" -> "1000298"  [label="AST: "];
"1000301" -> "1000298"  [label="AST: "];
"1000302" -> "1000298"  [label="AST: "];
"1000304" -> "1000298"  [label="AST: "];
"1000296" -> "1000298"  [label="CFG: "];
"1000298" -> "1000593"  [label="DDG: &real_size"];
"1000298" -> "1000254"  [label="DDG: parser"];
"1000298" -> "1000296"  [label="DDG: parser"];
"1000298" -> "1000296"  [label="DDG: &real_size"];
"1000298" -> "1000296"  [label="DDG: string_size"];
"1000298" -> "1000296"  [label="DDG: 1"];
"1000298" -> "1000296"  [label="DDG: string_buf"];
"1000254" -> "1000298"  [label="DDG: parser"];
"1000281" -> "1000298"  [label="DDG: string_buf"];
"1000281" -> "1000298"  [label="DDG: string_size"];
"1000405" -> "1000298"  [label="DDG: string_buf[string_size - 1]"];
"1000298" -> "1000305"  [label="DDG: string_size"];
"1000298" -> "1000329"  [label="DDG: parser"];
"1000298" -> "1000591"  [label="DDG: parser"];
"1000254" -> "1000253"  [label="AST: "];
"1000254" -> "1000255"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000259" -> "1000254"  [label="CFG: "];
"1000254" -> "1000593"  [label="DDG: T1_Skip_PS_Token( parser )"];
"1000343" -> "1000254"  [label="DDG: parser"];
"1000204" -> "1000254"  [label="DDG: parser"];
"1000343" -> "1000316"  [label="AST: "];
"1000343" -> "1000344"  [label="CFG: "];
"1000344" -> "1000343"  [label="AST: "];
"1000348" -> "1000343"  [label="CFG: "];
"1000343" -> "1000593"  [label="DDG: parser"];
"1000343" -> "1000593"  [label="DDG: T1_Skip_PS_Token( parser )"];
"1000343" -> "1000329"  [label="DDG: parser"];
"1000329" -> "1000343"  [label="DDG: parser"];
"1000343" -> "1000591"  [label="DDG: parser"];
"1000329" -> "1000327"  [label="AST: "];
"1000329" -> "1000330"  [label="CFG: "];
"1000330" -> "1000329"  [label="AST: "];
"1000327" -> "1000329"  [label="CFG: "];
"1000329" -> "1000327"  [label="DDG: parser"];
"1000204" -> "1000329"  [label="DDG: parser"];
"1000204" -> "1000128"  [label="AST: "];
"1000204" -> "1000205"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000207" -> "1000204"  [label="CFG: "];
"1000204" -> "1000593"  [label="DDG: T1_Skip_Spaces( parser )"];
"1000176" -> "1000204"  [label="DDG: parser"];
"1000204" -> "1000591"  [label="DDG: parser"];
"1000176" -> "1000128"  [label="AST: "];
"1000176" -> "1000177"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000183" -> "1000176"  [label="CFG: "];
"1000130" -> "1000176"  [label="DDG: parser"];
"1000130" -> "1000128"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000138" -> "1000130"  [label="CFG: "];
"1000130" -> "1000593"  [label="DDG: &loader->parser"];
"1000281" -> "1000280"  [label="AST: "];
"1000281" -> "1000284"  [label="CFG: "];
"1000282" -> "1000281"  [label="AST: "];
"1000283" -> "1000281"  [label="AST: "];
"1000284" -> "1000281"  [label="AST: "];
"1000285" -> "1000281"  [label="CFG: "];
"1000287" -> "1000281"  [label="CFG: "];
"1000281" -> "1000593"  [label="DDG: FT_REALLOC( string_buf, old_string_size, string_size )"];
"1000405" -> "1000281"  [label="DDG: string_buf[string_size - 1]"];
"1000305" -> "1000281"  [label="DDG: old_string_size"];
"1000212" -> "1000281"  [label="DDG: old_string_size"];
"1000263" -> "1000281"  [label="DDG: string_size"];
"1000405" -> "1000401"  [label="AST: "];
"1000405" -> "1000411"  [label="CFG: "];
"1000406" -> "1000405"  [label="AST: "];
"1000411" -> "1000405"  [label="AST: "];
"1000401" -> "1000405"  [label="CFG: "];
"1000405" -> "1000593"  [label="DDG: string_buf[string_size - 1]"];
"1000405" -> "1000401"  [label="DDG: string_buf[string_size - 1]"];
"1000405" -> "1000401"  [label="DDG: 0"];
"1000305" -> "1000253"  [label="AST: "];
"1000305" -> "1000307"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000307" -> "1000305"  [label="AST: "];
"1000309" -> "1000305"  [label="CFG: "];
"1000305" -> "1000593"  [label="DDG: old_string_size"];
"1000212" -> "1000128"  [label="AST: "];
"1000212" -> "1000214"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000214" -> "1000212"  [label="AST: "];
"1000216" -> "1000212"  [label="CFG: "];
"1000212" -> "1000593"  [label="DDG: old_string_size"];
"1000263" -> "1000253"  [label="AST: "];
"1000263" -> "1000265"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000263"  [label="AST: "];
"1000282" -> "1000263"  [label="CFG: "];
"1000263" -> "1000593"  [label="DDG: (FT_Long)( ( parser->root.cursor - cur - 2 + 1 ) / 2 )"];
"1000265" -> "1000263"  [label="DDG: ( parser->root.cursor - cur - 2 + 1 ) / 2"];
"1000265" -> "1000267"  [label="CFG: "];
"1000266" -> "1000265"  [label="AST: "];
"1000267" -> "1000265"  [label="AST: "];
"1000265" -> "1000593"  [label="DDG: ( parser->root.cursor - cur - 2 + 1 ) / 2"];
"1000267" -> "1000265"  [label="DDG: parser->root.cursor - cur - 2 + 1"];
"1000267" -> "1000265"  [label="DDG: 2"];
"1000267" -> "1000279"  [label="CFG: "];
"1000268" -> "1000267"  [label="AST: "];
"1000279" -> "1000267"  [label="AST: "];
"1000267" -> "1000593"  [label="DDG: parser->root.cursor - cur - 2 + 1"];
"1000268" -> "1000267"  [label="DDG: parser->root.cursor"];
"1000268" -> "1000267"  [label="DDG: cur - 2 + 1"];
"1000268" -> "1000274"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000274" -> "1000268"  [label="AST: "];
"1000279" -> "1000268"  [label="CFG: "];
"1000268" -> "1000593"  [label="DDG: cur - 2 + 1"];
"1000219" -> "1000268"  [label="DDG: parser->root.cursor"];
"1000274" -> "1000268"  [label="DDG: cur"];
"1000274" -> "1000268"  [label="DDG: 2 + 1"];
"1000219" -> "1000218"  [label="AST: "];
"1000219" -> "1000225"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000225" -> "1000219"  [label="AST: "];
"1000228" -> "1000219"  [label="CFG: "];
"1000592" -> "1000219"  [label="CFG: "];
"1000219" -> "1000593"  [label="DDG: limit"];
"1000219" -> "1000593"  [label="DDG: parser->root.cursor < limit"];
"1000219" -> "1000593"  [label="DDG: parser->root.cursor"];
"1000180" -> "1000219"  [label="DDG: parser->root.cursor"];
"1000180" -> "1000219"  [label="DDG: limit"];
"1000380" -> "1000219"  [label="DDG: parser->root.cursor"];
"1000289" -> "1000219"  [label="DDG: parser->root.cursor"];
"1000189" -> "1000219"  [label="DDG: parser->root.cursor"];
"1000363" -> "1000219"  [label="DDG: limit"];
"1000219" -> "1000227"  [label="DDG: parser->root.cursor"];
"1000219" -> "1000240"  [label="DDG: parser->root.cursor"];
"1000219" -> "1000352"  [label="DDG: parser->root.cursor"];
"1000219" -> "1000354"  [label="DDG: parser->root.cursor"];
"1000219" -> "1000363"  [label="DDG: limit"];
"1000219" -> "1000363"  [label="DDG: parser->root.cursor"];
"1000180" -> "1000179"  [label="AST: "];
"1000180" -> "1000186"  [label="CFG: "];
"1000181" -> "1000180"  [label="AST: "];
"1000186" -> "1000180"  [label="AST: "];
"1000192" -> "1000180"  [label="CFG: "];
"1000179" -> "1000180"  [label="CFG: "];
"1000180" -> "1000179"  [label="DDG: parser->root.cursor"];
"1000180" -> "1000179"  [label="DDG: limit"];
"1000146" -> "1000180"  [label="DDG: limit"];
"1000180" -> "1000189"  [label="DDG: parser->root.cursor"];
"1000146" -> "1000128"  [label="AST: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000156" -> "1000146"  [label="CFG: "];
"1000146" -> "1000593"  [label="DDG: parser->root.limit"];
"1000380" -> "1000379"  [label="AST: "];
"1000380" -> "1000386"  [label="CFG: "];
"1000381" -> "1000380"  [label="AST: "];
"1000386" -> "1000380"  [label="AST: "];
"1000391" -> "1000380"  [label="CFG: "];
"1000380" -> "1000593"  [label="DDG: string_size + 1"];
"1000362" -> "1000380"  [label="DDG: string_size"];
"1000363" -> "1000380"  [label="DDG: parser->root.cursor"];
"1000362" -> "1000361"  [label="AST: "];
"1000362" -> "1000370"  [label="CFG: "];
"1000363" -> "1000362"  [label="AST: "];
"1000370" -> "1000362"  [label="AST: "];
"1000373" -> "1000362"  [label="CFG: "];
"1000383" -> "1000362"  [label="CFG: "];
"1000362" -> "1000593"  [label="DDG: limit - parser->root.cursor < string_size"];
"1000362" -> "1000593"  [label="DDG: limit - parser->root.cursor"];
"1000363" -> "1000362"  [label="DDG: limit"];
"1000363" -> "1000362"  [label="DDG: parser->root.cursor"];
"1000332" -> "1000362"  [label="DDG: string_size"];
"1000362" -> "1000386"  [label="DDG: string_size"];
"1000362" -> "1000402"  [label="DDG: string_size"];
"1000363" -> "1000365"  [label="CFG: "];
"1000364" -> "1000363"  [label="AST: "];
"1000365" -> "1000363"  [label="AST: "];
"1000370" -> "1000363"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000332" -> "1000334"  [label="CFG: "];
"1000333" -> "1000332"  [label="AST: "];
"1000334" -> "1000332"  [label="AST: "];
"1000337" -> "1000332"  [label="CFG: "];
"1000344" -> "1000332"  [label="CFG: "];
"1000332" -> "1000593"  [label="DDG: string_size"];
"1000332" -> "1000593"  [label="DDG: string_size < 0"];
"1000327" -> "1000332"  [label="DDG: string_size"];
"1000327" -> "1000316"  [label="AST: "];
"1000328" -> "1000327"  [label="AST: "];
"1000333" -> "1000327"  [label="CFG: "];
"1000327" -> "1000593"  [label="DDG: T1_ToInt( parser )"];
"1000289" -> "1000253"  [label="AST: "];
"1000289" -> "1000295"  [label="CFG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000295" -> "1000289"  [label="AST: "];
"1000297" -> "1000289"  [label="CFG: "];
"1000289" -> "1000593"  [label="DDG: cur"];
"1000274" -> "1000289"  [label="DDG: cur"];
"1000274" -> "1000276"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000276" -> "1000274"  [label="AST: "];
"1000274" -> "1000593"  [label="DDG: 2 + 1"];
"1000227" -> "1000274"  [label="DDG: cur"];
"1000227" -> "1000226"  [label="AST: "];
"1000227" -> "1000229"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000227"  [label="AST: "];
"1000237" -> "1000227"  [label="CFG: "];
"1000227" -> "1000593"  [label="DDG: cur"];
"1000227" -> "1000593"  [label="DDG: parser->root.cursor"];
"1000189" -> "1000188"  [label="AST: "];
"1000189" -> "1000190"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000188" -> "1000189"  [label="CFG: "];
"1000352" -> "1000316"  [label="AST: "];
"1000352" -> "1000354"  [label="CFG: "];
"1000353" -> "1000352"  [label="AST: "];
"1000354" -> "1000352"  [label="AST: "];
"1000364" -> "1000352"  [label="CFG: "];
"1000352" -> "1000593"  [label="DDG: parser->root.cursor + 1"];
"1000483" -> "1000482"  [label="AST: "];
"1000483" -> "1000488"  [label="CFG: "];
"1000484" -> "1000483"  [label="AST: "];
"1000487" -> "1000483"  [label="AST: "];
"1000488" -> "1000483"  [label="AST: "];
"1000489" -> "1000483"  [label="CFG: "];
"1000490" -> "1000483"  [label="CFG: "];
"1000483" -> "1000593"  [label="DDG: FT_REALLOC( face->ttf_data, 12, ttf_size )"];
"1000483" -> "1000593"  [label="DDG: face->ttf_data"];
"1000496" -> "1000483"  [label="DDG: face->ttf_data[count++]"];
"1000555" -> "1000483"  [label="DDG: face->ttf_data"];
"1000444" -> "1000483"  [label="DDG: face->ttf_data[count++]"];
"1000460" -> "1000483"  [label="DDG: face->ttf_data[4]"];
"1000475" -> "1000483"  [label="DDG: ttf_size"];
"1000483" -> "1000492"  [label="DDG: ttf_size"];
"1000483" -> "1000522"  [label="DDG: face->ttf_data"];
"1000483" -> "1000524"  [label="DDG: face->ttf_data"];
"1000483" -> "1000555"  [label="DDG: face->ttf_data"];
"1000492" -> "1000491"  [label="AST: "];
"1000492" -> "1000494"  [label="CFG: "];
"1000493" -> "1000492"  [label="AST: "];
"1000494" -> "1000492"  [label="AST: "];
"1000499" -> "1000492"  [label="CFG: "];
"1000513" -> "1000492"  [label="CFG: "];
"1000492" -> "1000593"  [label="DDG: ttf_size"];
"1000492" -> "1000593"  [label="DDG: count < ttf_size"];
"1000215" -> "1000492"  [label="DDG: count"];
"1000449" -> "1000492"  [label="DDG: count"];
"1000586" -> "1000492"  [label="DDG: count"];
"1000501" -> "1000492"  [label="DDG: count"];
"1000440" -> "1000492"  [label="DDG: count"];
"1000570" -> "1000492"  [label="DDG: ttf_size"];
"1000160" -> "1000492"  [label="DDG: ttf_size"];
"1000492" -> "1000501"  [label="DDG: count"];
"1000492" -> "1000539"  [label="DDG: ttf_size"];
"1000492" -> "1000549"  [label="DDG: ttf_size"];
"1000492" -> "1000555"  [label="DDG: ttf_size"];
"1000492" -> "1000564"  [label="DDG: ttf_size"];
"1000492" -> "1000570"  [label="DDG: count"];
"1000492" -> "1000570"  [label="DDG: ttf_size"];
"1000501" -> "1000497"  [label="AST: "];
"1000501" -> "1000502"  [label="CFG: "];
"1000502" -> "1000501"  [label="AST: "];
"1000497" -> "1000501"  [label="CFG: "];
"1000501" -> "1000593"  [label="DDG: count"];
"1000501" -> "1000440"  [label="DDG: count"];
"1000501" -> "1000570"  [label="DDG: count"];
"1000501" -> "1000586"  [label="DDG: count"];
"1000440" -> "1000439"  [label="AST: "];
"1000440" -> "1000442"  [label="CFG: "];
"1000441" -> "1000440"  [label="AST: "];
"1000442" -> "1000440"  [label="AST: "];
"1000447" -> "1000440"  [label="CFG: "];
"1000458" -> "1000440"  [label="CFG: "];
"1000440" -> "1000593"  [label="DDG: count < 12"];
"1000215" -> "1000440"  [label="DDG: count"];
"1000449" -> "1000440"  [label="DDG: count"];
"1000586" -> "1000440"  [label="DDG: count"];
"1000440" -> "1000449"  [label="DDG: count"];
"1000449" -> "1000445"  [label="AST: "];
"1000449" -> "1000450"  [label="CFG: "];
"1000450" -> "1000449"  [label="AST: "];
"1000445" -> "1000449"  [label="CFG: "];
"1000449" -> "1000593"  [label="DDG: count"];
"1000449" -> "1000570"  [label="DDG: count"];
"1000449" -> "1000586"  [label="DDG: count"];
"1000570" -> "1000569"  [label="AST: "];
"1000570" -> "1000572"  [label="CFG: "];
"1000571" -> "1000570"  [label="AST: "];
"1000572" -> "1000570"  [label="AST: "];
"1000575" -> "1000570"  [label="CFG: "];
"1000584" -> "1000570"  [label="CFG: "];
"1000570" -> "1000593"  [label="DDG: ttf_size"];
"1000570" -> "1000593"  [label="DDG: count >= ttf_size"];
"1000215" -> "1000570"  [label="DDG: count"];
"1000586" -> "1000570"  [label="DDG: count"];
"1000160" -> "1000570"  [label="DDG: ttf_size"];
"1000539" -> "1000570"  [label="DDG: ttf_size"];
"1000570" -> "1000586"  [label="DDG: count"];
"1000586" -> "1000582"  [label="AST: "];
"1000586" -> "1000587"  [label="CFG: "];
"1000587" -> "1000586"  [label="AST: "];
"1000582" -> "1000586"  [label="CFG: "];
"1000586" -> "1000593"  [label="DDG: count"];
"1000215" -> "1000586"  [label="DDG: count"];
"1000539" -> "1000520"  [label="AST: "];
"1000539" -> "1000541"  [label="CFG: "];
"1000540" -> "1000539"  [label="AST: "];
"1000541" -> "1000539"  [label="AST: "];
"1000519" -> "1000539"  [label="CFG: "];
"1000539" -> "1000593"  [label="DDG: ( len + 3 ) & ~3"];
"1000541" -> "1000539"  [label="DDG: len + 3"];
"1000541" -> "1000539"  [label="DDG: ~3"];
"1000539" -> "1000549"  [label="DDG: ttf_size"];
"1000539" -> "1000555"  [label="DDG: ttf_size"];
"1000539" -> "1000564"  [label="DDG: ttf_size"];
"1000549" -> "1000508"  [label="AST: "];
"1000549" -> "1000553"  [label="CFG: "];
"1000550" -> "1000549"  [label="AST: "];
"1000553" -> "1000549"  [label="AST: "];
"1000557" -> "1000549"  [label="CFG: "];
"1000549" -> "1000593"  [label="DDG: face->ttf_size"];
"1000555" -> "1000554"  [label="AST: "];
"1000555" -> "1000564"  [label="CFG: "];
"1000556" -> "1000555"  [label="AST: "];
"1000559" -> "1000555"  [label="AST: "];
"1000564" -> "1000555"  [label="AST: "];
"1000567" -> "1000555"  [label="CFG: "];
"1000568" -> "1000555"  [label="CFG: "];
"1000555" -> "1000593"  [label="DDG: FT_REALLOC( face->ttf_data, 12 + 16 * num_tables,\n                             ttf_size + 1 )"];
"1000555" -> "1000593"  [label="DDG: face->ttf_data"];
"1000555" -> "1000593"  [label="DDG: 12 + 16 * num_tables"];
"1000555" -> "1000593"  [label="DDG: ttf_size + 1"];
"1000555" -> "1000522"  [label="DDG: face->ttf_data"];
"1000555" -> "1000524"  [label="DDG: face->ttf_data"];
"1000496" -> "1000555"  [label="DDG: face->ttf_data[count++]"];
"1000444" -> "1000555"  [label="DDG: face->ttf_data[count++]"];
"1000460" -> "1000555"  [label="DDG: face->ttf_data[4]"];
"1000561" -> "1000555"  [label="DDG: 16"];
"1000561" -> "1000555"  [label="DDG: num_tables"];
"1000522" -> "1000520"  [label="AST: "];
"1000522" -> "1000524"  [label="CFG: "];
"1000523" -> "1000522"  [label="AST: "];
"1000524" -> "1000522"  [label="AST: "];
"1000536" -> "1000522"  [label="CFG: "];
"1000522" -> "1000593"  [label="DDG: face->ttf_data + 12 + 16 * i + 12"];
"1000496" -> "1000522"  [label="DDG: face->ttf_data[count++]"];
"1000444" -> "1000522"  [label="DDG: face->ttf_data[count++]"];
"1000460" -> "1000522"  [label="DDG: face->ttf_data[4]"];
"1000531" -> "1000522"  [label="DDG: 16"];
"1000531" -> "1000522"  [label="DDG: i"];
"1000522" -> "1000537"  [label="DDG: p"];
"1000537" -> "1000535"  [label="AST: "];
"1000537" -> "1000538"  [label="CFG: "];
"1000538" -> "1000537"  [label="AST: "];
"1000535" -> "1000537"  [label="CFG: "];
"1000537" -> "1000593"  [label="DDG: p"];
"1000537" -> "1000535"  [label="DDG: p"];
"1000535" -> "1000520"  [label="AST: "];
"1000536" -> "1000535"  [label="AST: "];
"1000540" -> "1000535"  [label="CFG: "];
"1000535" -> "1000593"  [label="DDG: FT_PEEK_ULONG( p )"];
"1000535" -> "1000541"  [label="DDG: len"];
"1000535" -> "1000542"  [label="DDG: len"];
"1000541" -> "1000545"  [label="CFG: "];
"1000542" -> "1000541"  [label="AST: "];
"1000545" -> "1000541"  [label="AST: "];
"1000541" -> "1000593"  [label="DDG: len + 3"];
"1000541" -> "1000593"  [label="DDG: ~3"];
"1000542" -> "1000544"  [label="CFG: "];
"1000543" -> "1000542"  [label="AST: "];
"1000544" -> "1000542"  [label="AST: "];
"1000545" -> "1000542"  [label="CFG: "];
"1000542" -> "1000593"  [label="DDG: len"];
"1000524" -> "1000528"  [label="CFG: "];
"1000525" -> "1000524"  [label="AST: "];
"1000528" -> "1000524"  [label="AST: "];
"1000524" -> "1000593"  [label="DDG: 12 + 16 * i + 12"];
"1000496" -> "1000524"  [label="DDG: face->ttf_data[count++]"];
"1000444" -> "1000524"  [label="DDG: face->ttf_data[count++]"];
"1000460" -> "1000524"  [label="DDG: face->ttf_data[4]"];
"1000531" -> "1000524"  [label="DDG: 16"];
"1000531" -> "1000524"  [label="DDG: i"];
"1000564" -> "1000566"  [label="CFG: "];
"1000565" -> "1000564"  [label="AST: "];
"1000566" -> "1000564"  [label="AST: "];
}
