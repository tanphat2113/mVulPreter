digraph "0_linux_d3bd7413e0ca40b60cf60d4003246d067cafdeda@pointer" {
"1000131" [label="(MethodParameterIn,struct bpf_insn *insn)"];
"1000265" [label="(Call,sanitize_val_alu(env, insn))"];
"1000263" [label="(Call,ret = sanitize_val_alu(env, insn))"];
"1000269" [label="(Call,ret < 0)"];
"1000277" [label="(Return,return ret;)"];
"1000273" [label="(Call,verbose(env, \"R%d tried to add from different pointers or scalars\n\", dst))"];
"1000368" [label="(Call,sanitize_val_alu(env, insn))"];
"1000366" [label="(Call,ret = sanitize_val_alu(env, insn))"];
"1000372" [label="(Call,ret < 0)"];
"1000380" [label="(Return,return ret;)"];
"1000376" [label="(Call,verbose(env, \"R%d tried to sub from different pointers or scalars\n\", dst))"];
"1000369" [label="(Identifier,env)"];
"1000381" [label="(Identifier,ret)"];
"1000272" [label="(Block,)"];
"1000373" [label="(Identifier,ret)"];
"1000138" [label="(Call,cur_regs(env))"];
"1000283" [label="(Identifier,dst_reg)"];
"1000268" [label="(ControlStructure,if (ret < 0))"];
"1000273" [label="(Call,verbose(env, \"R%d tried to add from different pointers or scalars\n\", dst))"];
"1000265" [label="(Call,sanitize_val_alu(env, insn))"];
"1000386" [label="(Identifier,dst_reg)"];
"1000261" [label="(Block,)"];
"1000267" [label="(Identifier,insn)"];
"1000375" [label="(Block,)"];
"1000266" [label="(Identifier,env)"];
"1000374" [label="(Literal,0)"];
"1000270" [label="(Identifier,ret)"];
"1000903" [label="(MethodReturn,static int)"];
"1000370" [label="(Identifier,insn)"];
"1000275" [label="(Literal,\"R%d tried to add from different pointers or scalars\n\")"];
"1000377" [label="(Identifier,env)"];
"1000131" [label="(MethodParameterIn,struct bpf_insn *insn)"];
"1000378" [label="(Literal,\"R%d tried to sub from different pointers or scalars\n\")"];
"1000274" [label="(Identifier,env)"];
"1000366" [label="(Call,ret = sanitize_val_alu(env, insn))"];
"1000376" [label="(Call,verbose(env, \"R%d tried to sub from different pointers or scalars\n\", dst))"];
"1000276" [label="(Identifier,dst)"];
"1000367" [label="(Identifier,ret)"];
"1000371" [label="(ControlStructure,if (ret < 0))"];
"1000271" [label="(Literal,0)"];
"1000263" [label="(Call,ret = sanitize_val_alu(env, insn))"];
"1000269" [label="(Call,ret < 0)"];
"1000264" [label="(Identifier,ret)"];
"1000278" [label="(Identifier,ret)"];
"1000380" [label="(Return,return ret;)"];
"1000130" [label="(MethodParameterIn,struct bpf_verifier_env *env)"];
"1000277" [label="(Return,return ret;)"];
"1000166" [label="(Call,dst = insn->dst_reg)"];
"1000379" [label="(Identifier,dst)"];
"1000368" [label="(Call,sanitize_val_alu(env, insn))"];
"1000372" [label="(Call,ret < 0)"];
"1000131" -> "1000129"  [label="AST: "];
"1000131" -> "1000903"  [label="DDG: "];
"1000131" -> "1000265"  [label="DDG: "];
"1000131" -> "1000368"  [label="DDG: "];
"1000265" -> "1000263"  [label="AST: "];
"1000265" -> "1000267"  [label="CFG: "];
"1000266" -> "1000265"  [label="AST: "];
"1000267" -> "1000265"  [label="AST: "];
"1000263" -> "1000265"  [label="CFG: "];
"1000265" -> "1000903"  [label="DDG: "];
"1000265" -> "1000903"  [label="DDG: "];
"1000265" -> "1000263"  [label="DDG: "];
"1000265" -> "1000263"  [label="DDG: "];
"1000138" -> "1000265"  [label="DDG: "];
"1000130" -> "1000265"  [label="DDG: "];
"1000265" -> "1000273"  [label="DDG: "];
"1000263" -> "1000261"  [label="AST: "];
"1000264" -> "1000263"  [label="AST: "];
"1000270" -> "1000263"  [label="CFG: "];
"1000263" -> "1000903"  [label="DDG: "];
"1000263" -> "1000269"  [label="DDG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000269" -> "1000271"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000271" -> "1000269"  [label="AST: "];
"1000274" -> "1000269"  [label="CFG: "];
"1000283" -> "1000269"  [label="CFG: "];
"1000269" -> "1000903"  [label="DDG: "];
"1000269" -> "1000903"  [label="DDG: "];
"1000269" -> "1000277"  [label="DDG: "];
"1000277" -> "1000272"  [label="AST: "];
"1000277" -> "1000278"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000903" -> "1000277"  [label="CFG: "];
"1000277" -> "1000903"  [label="DDG: "];
"1000278" -> "1000277"  [label="DDG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000273" -> "1000276"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000275" -> "1000273"  [label="AST: "];
"1000276" -> "1000273"  [label="AST: "];
"1000278" -> "1000273"  [label="CFG: "];
"1000273" -> "1000903"  [label="DDG: "];
"1000273" -> "1000903"  [label="DDG: "];
"1000273" -> "1000903"  [label="DDG: "];
"1000130" -> "1000273"  [label="DDG: "];
"1000166" -> "1000273"  [label="DDG: "];
"1000368" -> "1000366"  [label="AST: "];
"1000368" -> "1000370"  [label="CFG: "];
"1000369" -> "1000368"  [label="AST: "];
"1000370" -> "1000368"  [label="AST: "];
"1000366" -> "1000368"  [label="CFG: "];
"1000368" -> "1000903"  [label="DDG: "];
"1000368" -> "1000903"  [label="DDG: "];
"1000368" -> "1000366"  [label="DDG: "];
"1000368" -> "1000366"  [label="DDG: "];
"1000138" -> "1000368"  [label="DDG: "];
"1000130" -> "1000368"  [label="DDG: "];
"1000368" -> "1000376"  [label="DDG: "];
"1000366" -> "1000261"  [label="AST: "];
"1000367" -> "1000366"  [label="AST: "];
"1000373" -> "1000366"  [label="CFG: "];
"1000366" -> "1000903"  [label="DDG: "];
"1000366" -> "1000372"  [label="DDG: "];
"1000372" -> "1000371"  [label="AST: "];
"1000372" -> "1000374"  [label="CFG: "];
"1000373" -> "1000372"  [label="AST: "];
"1000374" -> "1000372"  [label="AST: "];
"1000377" -> "1000372"  [label="CFG: "];
"1000386" -> "1000372"  [label="CFG: "];
"1000372" -> "1000903"  [label="DDG: "];
"1000372" -> "1000903"  [label="DDG: "];
"1000372" -> "1000380"  [label="DDG: "];
"1000380" -> "1000375"  [label="AST: "];
"1000380" -> "1000381"  [label="CFG: "];
"1000381" -> "1000380"  [label="AST: "];
"1000903" -> "1000380"  [label="CFG: "];
"1000380" -> "1000903"  [label="DDG: "];
"1000381" -> "1000380"  [label="DDG: "];
"1000376" -> "1000375"  [label="AST: "];
"1000376" -> "1000379"  [label="CFG: "];
"1000377" -> "1000376"  [label="AST: "];
"1000378" -> "1000376"  [label="AST: "];
"1000379" -> "1000376"  [label="AST: "];
"1000381" -> "1000376"  [label="CFG: "];
"1000376" -> "1000903"  [label="DDG: "];
"1000376" -> "1000903"  [label="DDG: "];
"1000376" -> "1000903"  [label="DDG: "];
"1000130" -> "1000376"  [label="DDG: "];
"1000166" -> "1000376"  [label="DDG: "];
}
