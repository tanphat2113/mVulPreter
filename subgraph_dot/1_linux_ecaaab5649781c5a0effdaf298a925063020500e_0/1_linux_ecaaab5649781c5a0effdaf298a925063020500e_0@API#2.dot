digraph "1_linux_ecaaab5649781c5a0effdaf298a925063020500e_0@API" {
"1000216" [label="(Call,salsa20_encrypt_bytes(ctx, walk.dst.virt.addr,\n\t\t\t\t      walk.src.virt.addr, walk.nbytes))"];
"1000175" [label="(Call,salsa20_encrypt_bytes(ctx, walk.dst.virt.addr,\n \t\t\t\t      walk.src.virt.addr,\n\t\t\t\t      walk.nbytes - (walk.nbytes % 64)))"];
"1000132" [label="(Call,salsa20_ivsetup(ctx, walk.iv))"];
"1000114" [label="(Call,*ctx = crypto_blkcipher_ctx(tfm))"];
"1000116" [label="(Call,crypto_blkcipher_ctx(tfm))"];
"1000108" [label="(Call,*tfm = desc->tfm)"];
"1000191" [label="(Call,walk.nbytes - (walk.nbytes % 64))"];
"1000195" [label="(Call,walk.nbytes % 64)"];
"1000169" [label="(Call,walk.nbytes >= 64)"];
"1000139" [label="(Call,walk.nbytes == nbytes)"];
"1000119" [label="(Call,blkcipher_walk_init(&walk, dst, src, nbytes))"];
"1000102" [label="(MethodParameterIn,struct scatterlist *dst)"];
"1000103" [label="(MethodParameterIn,struct scatterlist *src)"];
"1000104" [label="(MethodParameterIn,unsigned int nbytes)"];
"1000206" [label="(Call,walk.nbytes % 64)"];
"1000244" [label="(MethodReturn,static int)"];
"1000175" [label="(Call,salsa20_encrypt_bytes(ctx, walk.dst.virt.addr,\n \t\t\t\t      walk.src.virt.addr,\n\t\t\t\t      walk.nbytes - (walk.nbytes % 64)))"];
"1000195" [label="(Call,walk.nbytes % 64)"];
"1000141" [label="(Identifier,walk)"];
"1000117" [label="(Identifier,tfm)"];
"1000138" [label="(Call,likely(walk.nbytes == nbytes))"];
"1000119" [label="(Call,blkcipher_walk_init(&walk, dst, src, nbytes))"];
"1000105" [label="(Block,)"];
"1000140" [label="(Call,walk.nbytes)"];
"1000110" [label="(Call,desc->tfm)"];
"1000168" [label="(ControlStructure,while (walk.nbytes >= 64))"];
"1000108" [label="(Call,*tfm = desc->tfm)"];
"1000115" [label="(Identifier,ctx)"];
"1000123" [label="(Identifier,src)"];
"1000103" [label="(MethodParameterIn,struct scatterlist *src)"];
"1000173" [label="(Literal,64)"];
"1000170" [label="(Call,walk.nbytes)"];
"1000176" [label="(Identifier,ctx)"];
"1000177" [label="(Call,walk.dst.virt.addr)"];
"1000206" [label="(Call,walk.nbytes % 64)"];
"1000216" [label="(Call,salsa20_encrypt_bytes(ctx, walk.dst.virt.addr,\n\t\t\t\t      walk.src.virt.addr, walk.nbytes))"];
"1000192" [label="(Call,walk.nbytes)"];
"1000232" [label="(Call,walk.nbytes)"];
"1000169" [label="(Call,walk.nbytes >= 64)"];
"1000174" [label="(Block,)"];
"1000133" [label="(Identifier,ctx)"];
"1000134" [label="(Call,walk.iv)"];
"1000202" [label="(Call,blkcipher_walk_done(desc, &walk, walk.nbytes % 64))"];
"1000145" [label="(Call,salsa20_encrypt_bytes(ctx, walk.dst.virt.addr,\n\t\t\t\t      walk.src.virt.addr, nbytes))"];
"1000184" [label="(Call,walk.src.virt.addr)"];
"1000104" [label="(MethodParameterIn,unsigned int nbytes)"];
"1000122" [label="(Identifier,dst)"];
"1000207" [label="(Call,walk.nbytes)"];
"1000126" [label="(Identifier,err)"];
"1000196" [label="(Call,walk.nbytes)"];
"1000199" [label="(Literal,64)"];
"1000225" [label="(Call,walk.src.virt.addr)"];
"1000201" [label="(Identifier,err)"];
"1000132" [label="(Call,salsa20_ivsetup(ctx, walk.iv))"];
"1000102" [label="(MethodParameterIn,struct scatterlist *dst)"];
"1000116" [label="(Call,crypto_blkcipher_ctx(tfm))"];
"1000139" [label="(Call,walk.nbytes == nbytes)"];
"1000120" [label="(Call,&walk)"];
"1000210" [label="(Literal,64)"];
"1000236" [label="(Identifier,err)"];
"1000127" [label="(Call,blkcipher_walk_virt_block(desc, &walk, 64))"];
"1000217" [label="(Identifier,ctx)"];
"1000191" [label="(Call,walk.nbytes - (walk.nbytes % 64))"];
"1000114" [label="(Call,*ctx = crypto_blkcipher_ctx(tfm))"];
"1000143" [label="(Identifier,nbytes)"];
"1000121" [label="(Identifier,walk)"];
"1000218" [label="(Call,walk.dst.virt.addr)"];
"1000213" [label="(Identifier,walk)"];
"1000109" [label="(Identifier,tfm)"];
"1000124" [label="(Identifier,nbytes)"];
"1000215" [label="(Block,)"];
"1000216" -> "1000215"  [label="AST: "];
"1000216" -> "1000232"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000218" -> "1000216"  [label="AST: "];
"1000225" -> "1000216"  [label="AST: "];
"1000232" -> "1000216"  [label="AST: "];
"1000236" -> "1000216"  [label="CFG: "];
"1000216" -> "1000244"  [label="DDG: walk.src.virt.addr"];
"1000216" -> "1000244"  [label="DDG: walk.nbytes"];
"1000216" -> "1000244"  [label="DDG: salsa20_encrypt_bytes(ctx, walk.dst.virt.addr,\n\t\t\t\t      walk.src.virt.addr, walk.nbytes)"];
"1000216" -> "1000244"  [label="DDG: ctx"];
"1000216" -> "1000244"  [label="DDG: walk.dst.virt.addr"];
"1000175" -> "1000216"  [label="DDG: ctx"];
"1000175" -> "1000216"  [label="DDG: walk.dst.virt.addr"];
"1000175" -> "1000216"  [label="DDG: walk.src.virt.addr"];
"1000132" -> "1000216"  [label="DDG: ctx"];
"1000169" -> "1000216"  [label="DDG: walk.nbytes"];
"1000175" -> "1000174"  [label="AST: "];
"1000175" -> "1000191"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000177" -> "1000175"  [label="AST: "];
"1000184" -> "1000175"  [label="AST: "];
"1000191" -> "1000175"  [label="AST: "];
"1000201" -> "1000175"  [label="CFG: "];
"1000175" -> "1000244"  [label="DDG: ctx"];
"1000175" -> "1000244"  [label="DDG: salsa20_encrypt_bytes(ctx, walk.dst.virt.addr,\n \t\t\t\t      walk.src.virt.addr,\n\t\t\t\t      walk.nbytes - (walk.nbytes % 64))"];
"1000175" -> "1000244"  [label="DDG: walk.src.virt.addr"];
"1000175" -> "1000244"  [label="DDG: walk.nbytes - (walk.nbytes % 64)"];
"1000175" -> "1000244"  [label="DDG: walk.dst.virt.addr"];
"1000132" -> "1000175"  [label="DDG: ctx"];
"1000191" -> "1000175"  [label="DDG: walk.nbytes"];
"1000191" -> "1000175"  [label="DDG: walk.nbytes % 64"];
"1000132" -> "1000105"  [label="AST: "];
"1000132" -> "1000134"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="AST: "];
"1000141" -> "1000132"  [label="CFG: "];
"1000132" -> "1000244"  [label="DDG: salsa20_ivsetup(ctx, walk.iv)"];
"1000132" -> "1000244"  [label="DDG: walk.iv"];
"1000132" -> "1000244"  [label="DDG: ctx"];
"1000114" -> "1000132"  [label="DDG: ctx"];
"1000132" -> "1000145"  [label="DDG: ctx"];
"1000114" -> "1000105"  [label="AST: "];
"1000114" -> "1000116"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000121" -> "1000114"  [label="CFG: "];
"1000114" -> "1000244"  [label="DDG: crypto_blkcipher_ctx(tfm)"];
"1000116" -> "1000114"  [label="DDG: tfm"];
"1000116" -> "1000117"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000116" -> "1000244"  [label="DDG: tfm"];
"1000108" -> "1000116"  [label="DDG: tfm"];
"1000108" -> "1000105"  [label="AST: "];
"1000108" -> "1000110"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000110" -> "1000108"  [label="AST: "];
"1000115" -> "1000108"  [label="CFG: "];
"1000108" -> "1000244"  [label="DDG: desc->tfm"];
"1000191" -> "1000195"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000195" -> "1000191"  [label="AST: "];
"1000195" -> "1000191"  [label="DDG: walk.nbytes"];
"1000195" -> "1000191"  [label="DDG: 64"];
"1000191" -> "1000206"  [label="DDG: walk.nbytes"];
"1000195" -> "1000199"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000199" -> "1000195"  [label="AST: "];
"1000169" -> "1000195"  [label="DDG: walk.nbytes"];
"1000169" -> "1000168"  [label="AST: "];
"1000169" -> "1000173"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000173" -> "1000169"  [label="AST: "];
"1000176" -> "1000169"  [label="CFG: "];
"1000213" -> "1000169"  [label="CFG: "];
"1000169" -> "1000244"  [label="DDG: walk.nbytes >= 64"];
"1000169" -> "1000244"  [label="DDG: walk.nbytes"];
"1000139" -> "1000169"  [label="DDG: walk.nbytes"];
"1000206" -> "1000169"  [label="DDG: walk.nbytes"];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000143"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000143" -> "1000139"  [label="AST: "];
"1000138" -> "1000139"  [label="CFG: "];
"1000139" -> "1000244"  [label="DDG: walk.nbytes"];
"1000139" -> "1000244"  [label="DDG: nbytes"];
"1000139" -> "1000138"  [label="DDG: walk.nbytes"];
"1000139" -> "1000138"  [label="DDG: nbytes"];
"1000119" -> "1000139"  [label="DDG: nbytes"];
"1000104" -> "1000139"  [label="DDG: nbytes"];
"1000139" -> "1000145"  [label="DDG: nbytes"];
"1000119" -> "1000105"  [label="AST: "];
"1000119" -> "1000124"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000122" -> "1000119"  [label="AST: "];
"1000123" -> "1000119"  [label="AST: "];
"1000124" -> "1000119"  [label="AST: "];
"1000126" -> "1000119"  [label="CFG: "];
"1000119" -> "1000244"  [label="DDG: blkcipher_walk_init(&walk, dst, src, nbytes)"];
"1000119" -> "1000244"  [label="DDG: src"];
"1000119" -> "1000244"  [label="DDG: dst"];
"1000102" -> "1000119"  [label="DDG: dst"];
"1000103" -> "1000119"  [label="DDG: src"];
"1000104" -> "1000119"  [label="DDG: nbytes"];
"1000119" -> "1000127"  [label="DDG: &walk"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000244"  [label="DDG: dst"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000244"  [label="DDG: src"];
"1000104" -> "1000100"  [label="AST: "];
"1000104" -> "1000244"  [label="DDG: nbytes"];
"1000104" -> "1000145"  [label="DDG: nbytes"];
"1000206" -> "1000202"  [label="AST: "];
"1000206" -> "1000210"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000210" -> "1000206"  [label="AST: "];
"1000202" -> "1000206"  [label="CFG: "];
"1000206" -> "1000202"  [label="DDG: walk.nbytes"];
"1000206" -> "1000202"  [label="DDG: 64"];
}
