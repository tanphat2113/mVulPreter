digraph "0_linux_a8b0ca17b80e92faab46ee7179ba9e99ccb61233_39@API" {
"1000124" [label="(Call,current_thread_info()->kern_una_insn = insn)"];
"1000114" [label="(Call,decode_access_size(regs, insn))"];
"1000103" [label="(MethodParameterIn,struct pt_regs *regs)"];
"1000109" [label="(Call,decode_direction(insn))"];
"1000104" [label="(MethodParameterIn,unsigned int insn)"];
"1000128" [label="(Identifier,insn)"];
"1000221" [label="(Call,decode_signedness(insn))"];
"1000297" [label="(MethodReturn,asmlinkage void)"];
"1000130" [label="(Identifier,orig_asi)"];
"1000180" [label="(Call,perf_sw_event(PERF_COUNT_SW_ALIGNMENT_FAULTS, 1, 0, regs, addr))"];
"1000206" [label="(Call,fetch_reg_addr(((insn>>25)&0x1f), regs))"];
"1000104" [label="(MethodParameterIn,unsigned int insn)"];
"1000109" [label="(Call,decode_direction(insn))"];
"1000295" [label="(Call,advance(regs))"];
"1000110" [label="(Identifier,insn)"];
"1000119" [label="(Call,current_thread_info()->kern_una_regs = regs)"];
"1000160" [label="(Call,unaligned_panic(\"Kernel does fpu/atomic \"\n\t\t\t\t\"unaligned load/store.\", regs))"];
"1000124" [label="(Call,current_thread_info()->kern_una_insn = insn)"];
"1000133" [label="(Call,decode_asi(insn, regs))"];
"1000107" [label="(Call,dir = decode_direction(insn))"];
"1000125" [label="(Call,current_thread_info()->kern_una_insn)"];
"1000112" [label="(Call,size = decode_access_size(regs, insn))"];
"1000103" [label="(MethodParameterIn,struct pt_regs *regs)"];
"1000149" [label="(Call,ok_for_kernel(insn))"];
"1000116" [label="(Identifier,insn)"];
"1000115" [label="(Identifier,regs)"];
"1000272" [label="(Call,do_int_store(((insn>>25)&0x1f), size,\n\t\t\t\t\t   (unsigned long *) addr, regs,\n\t\t\t\t\t   asi, orig_asi))"];
"1000176" [label="(Call,insn >> 25)"];
"1000274" [label="(Call,insn>>25)"];
"1000114" [label="(Call,decode_access_size(regs, insn))"];
"1000105" [label="(Block,)"];
"1000172" [label="(Call,compute_effective_address(regs, insn,\n \t\t\t\t\t\t ((insn >> 25) & 0x1f)))"];
"1000208" [label="(Call,insn>>25)"];
"1000144" [label="(Call,log_unaligned(regs))"];
"1000124" -> "1000105"  [label="AST: "];
"1000124" -> "1000128"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000128" -> "1000124"  [label="AST: "];
"1000130" -> "1000124"  [label="CFG: "];
"1000124" -> "1000297"  [label="DDG: current_thread_info()->kern_una_insn"];
"1000114" -> "1000124"  [label="DDG: insn"];
"1000104" -> "1000124"  [label="DDG: insn"];
"1000114" -> "1000112"  [label="AST: "];
"1000114" -> "1000116"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000114" -> "1000112"  [label="DDG: regs"];
"1000114" -> "1000112"  [label="DDG: insn"];
"1000103" -> "1000114"  [label="DDG: regs"];
"1000109" -> "1000114"  [label="DDG: insn"];
"1000104" -> "1000114"  [label="DDG: insn"];
"1000114" -> "1000119"  [label="DDG: regs"];
"1000114" -> "1000133"  [label="DDG: insn"];
"1000114" -> "1000133"  [label="DDG: regs"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000297"  [label="DDG: regs"];
"1000103" -> "1000119"  [label="DDG: regs"];
"1000103" -> "1000133"  [label="DDG: regs"];
"1000103" -> "1000144"  [label="DDG: regs"];
"1000103" -> "1000160"  [label="DDG: regs"];
"1000103" -> "1000172"  [label="DDG: regs"];
"1000103" -> "1000180"  [label="DDG: regs"];
"1000103" -> "1000206"  [label="DDG: regs"];
"1000103" -> "1000272"  [label="DDG: regs"];
"1000103" -> "1000295"  [label="DDG: regs"];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000110"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000109" -> "1000107"  [label="DDG: insn"];
"1000104" -> "1000109"  [label="DDG: insn"];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1000297"  [label="DDG: insn"];
"1000104" -> "1000133"  [label="DDG: insn"];
"1000104" -> "1000149"  [label="DDG: insn"];
"1000104" -> "1000172"  [label="DDG: insn"];
"1000104" -> "1000176"  [label="DDG: insn"];
"1000104" -> "1000208"  [label="DDG: insn"];
"1000104" -> "1000221"  [label="DDG: insn"];
"1000104" -> "1000274"  [label="DDG: insn"];
}
