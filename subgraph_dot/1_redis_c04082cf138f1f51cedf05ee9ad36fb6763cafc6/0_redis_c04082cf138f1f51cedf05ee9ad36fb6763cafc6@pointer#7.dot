digraph "0_redis_c04082cf138f1f51cedf05ee9ad36fb6763cafc6@pointer" {
"1000417" [label="(Call,addReplyHelp(c, help))"];
"1000143" [label="(Call,lookupKeyWriteOrReply(c,c->argv[2],shared.nokeyerr))"];
"1000106" [label="(MethodParameterIn,client *c)"];
"1000109" [label="(Call,*help[] = {\n\"CREATE      <key> <groupname> <id or $>  -- Create a new consumer group.\",\n\"SETID       <key> <groupname> <id or $>  -- Set the current group ID.\",\n\"DELGROUP    <key> <groupname>            -- Remove the specified group.\",\n\"DELCONSUMER <key> <groupname> <consumer> -- Remove the specified conusmer.\",\n\"HELP                                     -- Prints this help.\",\nNULL\n    })"];
"1000109" [label="(Call,*help[] = {\n\"CREATE      <key> <groupname> <id or $>  -- Create a new consumer group.\",\n\"SETID       <key> <groupname> <id or $>  -- Set the current group ID.\",\n\"DELGROUP    <key> <groupname>            -- Remove the specified group.\",\n\"DELCONSUMER <key> <groupname> <consumer> -- Remove the specified conusmer.\",\n\"HELP                                     -- Prints this help.\",\nNULL\n    })"];
"1000418" [label="(Identifier,c)"];
"1000191" [label="(Call,addReplyErrorFormat(c, \"-NOGROUP No such consumer group '%s' \"\n                                   \"for key name '%s'\",\n                                   (char*)grpname, (char*)c->argv[2]->ptr))"];
"1000145" [label="(Call,c->argv[2])"];
"1000427" [label="(MethodReturn,void)"];
"1000240" [label="(Call,streamParseIDOrReply(c,c->argv[4],&id,0))"];
"1000373" [label="(Call,addReply(c,shared.czero))"];
"1000143" [label="(Call,lookupKeyWriteOrReply(c,c->argv[2],shared.nokeyerr))"];
"1000277" [label="(Call,addReplySds(c,\n                sdsnew(\"-BUSYGROUP Consumer Group name already exists\r\n\")))"];
"1000417" [label="(Call,addReplyHelp(c, help))"];
"1000416" [label="(Block,)"];
"1000366" [label="(Call,addReply(c,shared.cone))"];
"1000315" [label="(Call,streamParseIDOrReply(c,c->argv[4],&id,0))"];
"1000422" [label="(Call,addReply(c,shared.syntaxerr))"];
"1000106" [label="(MethodParameterIn,client *c)"];
"1000150" [label="(Call,shared.nokeyerr)"];
"1000144" [label="(Identifier,c)"];
"1000107" [label="(Block,)"];
"1000110" [label="(Identifier,help)"];
"1000113" [label="(Identifier,s)"];
"1000333" [label="(Call,addReply(c,shared.ok))"];
"1000266" [label="(Call,addReply(c,shared.ok))"];
"1000403" [label="(Call,addReplyLongLong(c,pending))"];
"1000141" [label="(Call,*o = lookupKeyWriteOrReply(c,c->argv[2],shared.nokeyerr))"];
"1000419" [label="(Identifier,help)"];
"1000417" -> "1000416"  [label="AST: "];
"1000417" -> "1000419"  [label="CFG: "];
"1000418" -> "1000417"  [label="AST: "];
"1000419" -> "1000417"  [label="AST: "];
"1000427" -> "1000417"  [label="CFG: "];
"1000417" -> "1000427"  [label="DDG: c"];
"1000417" -> "1000427"  [label="DDG: addReplyHelp(c, help)"];
"1000417" -> "1000427"  [label="DDG: help"];
"1000143" -> "1000417"  [label="DDG: c"];
"1000106" -> "1000417"  [label="DDG: c"];
"1000109" -> "1000417"  [label="DDG: help"];
"1000143" -> "1000141"  [label="AST: "];
"1000143" -> "1000150"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000145" -> "1000143"  [label="AST: "];
"1000150" -> "1000143"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000143" -> "1000427"  [label="DDG: c"];
"1000143" -> "1000427"  [label="DDG: c->argv[2]"];
"1000143" -> "1000427"  [label="DDG: shared.nokeyerr"];
"1000143" -> "1000141"  [label="DDG: c"];
"1000143" -> "1000141"  [label="DDG: c->argv[2]"];
"1000143" -> "1000141"  [label="DDG: shared.nokeyerr"];
"1000106" -> "1000143"  [label="DDG: c"];
"1000143" -> "1000191"  [label="DDG: c"];
"1000143" -> "1000240"  [label="DDG: c"];
"1000143" -> "1000266"  [label="DDG: c"];
"1000143" -> "1000277"  [label="DDG: c"];
"1000143" -> "1000315"  [label="DDG: c"];
"1000143" -> "1000333"  [label="DDG: c"];
"1000143" -> "1000366"  [label="DDG: c"];
"1000143" -> "1000373"  [label="DDG: c"];
"1000143" -> "1000403"  [label="DDG: c"];
"1000143" -> "1000422"  [label="DDG: c"];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000427"  [label="DDG: c"];
"1000106" -> "1000191"  [label="DDG: c"];
"1000106" -> "1000240"  [label="DDG: c"];
"1000106" -> "1000266"  [label="DDG: c"];
"1000106" -> "1000277"  [label="DDG: c"];
"1000106" -> "1000315"  [label="DDG: c"];
"1000106" -> "1000333"  [label="DDG: c"];
"1000106" -> "1000366"  [label="DDG: c"];
"1000106" -> "1000373"  [label="DDG: c"];
"1000106" -> "1000403"  [label="DDG: c"];
"1000106" -> "1000422"  [label="DDG: c"];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000110"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000113" -> "1000109"  [label="CFG: "];
"1000109" -> "1000427"  [label="DDG: help"];
}
