digraph "0_linux_87c48fa3b4630905f98268dde838ee43626a060c_2@pointer" {
"1000238" [label="(Call,kfree_skb(skb))"];
"1000186" [label="(Call,skb_append_datato_frags(sk,skb, getfrag, from,\n\t\t\t\t      (length - transhdrlen)))"];
"1000134" [label="(Call,sock_alloc_send_skb(sk,\n\t\t\thh_len + fragheaderlen + transhdrlen + 20,\n\t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000108" [label="(MethodParameterIn,struct sock *sk)"];
"1000112" [label="(MethodParameterIn,int hh_len)"];
"1000113" [label="(MethodParameterIn,int fragheaderlen)"];
"1000114" [label="(MethodParameterIn,int transhdrlen)"];
"1000143" [label="(Call,flags & MSG_DONTWAIT)"];
"1000116" [label="(MethodParameterIn,unsigned int flags)"];
"1000163" [label="(Call,skb_reset_network_header(skb))"];
"1000158" [label="(Call,skb_put(skb,fragheaderlen + transhdrlen))"];
"1000155" [label="(Call,skb_reserve(skb, hh_len))"];
"1000149" [label="(Call,skb == NULL)"];
"1000132" [label="(Call,skb = sock_alloc_send_skb(sk,\n\t\t\thh_len + fragheaderlen + transhdrlen + 20,\n\t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000122" [label="(Call,(skb = skb_peek_tail(&sk->sk_write_queue)) == NULL)"];
"1000123" [label="(Call,skb = skb_peek_tail(&sk->sk_write_queue))"];
"1000125" [label="(Call,skb_peek_tail(&sk->sk_write_queue))"];
"1000109" [label="(MethodParameterIn,int getfrag(void *from, char *to, int offset, int len,\n \t\t\tint odd, struct sk_buff *skb))"];
"1000110" [label="(MethodParameterIn,void *from)"];
"1000191" [label="(Call,length - transhdrlen)"];
"1000111" [label="(MethodParameterIn,int length)"];
"1000146" [label="(Call,&err)"];
"1000230" [label="(Call,__skb_queue_tail(&sk->sk_write_queue, skb))"];
"1000109" [label="(MethodParameterIn,int getfrag(void *from, char *to, int offset, int len,\n \t\t\tint odd, struct sk_buff *skb))"];
"1000154" [label="(Identifier,ENOMEM)"];
"1000112" [label="(MethodParameterIn,int hh_len)"];
"1000126" [label="(Call,&sk->sk_write_queue)"];
"1000193" [label="(Identifier,transhdrlen)"];
"1000136" [label="(Call,hh_len + fragheaderlen + transhdrlen + 20)"];
"1000186" [label="(Call,skb_append_datato_frags(sk,skb, getfrag, from,\n\t\t\t\t      (length - transhdrlen)))"];
"1000138" [label="(Call,fragheaderlen + transhdrlen + 20)"];
"1000116" [label="(MethodParameterIn,unsigned int flags)"];
"1000114" [label="(MethodParameterIn,int transhdrlen)"];
"1000110" [label="(MethodParameterIn,void *from)"];
"1000118" [label="(Block,)"];
"1000113" [label="(MethodParameterIn,int fragheaderlen)"];
"1000155" [label="(Call,skb_reserve(skb, hh_len))"];
"1000156" [label="(Identifier,skb)"];
"1000145" [label="(Identifier,MSG_DONTWAIT)"];
"1000201" [label="(Call,skb_shinfo(skb))"];
"1000124" [label="(Identifier,skb)"];
"1000135" [label="(Identifier,sk)"];
"1000111" [label="(MethodParameterIn,int length)"];
"1000121" [label="(ControlStructure,if ((skb = skb_peek_tail(&sk->sk_write_queue)) == NULL))"];
"1000187" [label="(Identifier,sk)"];
"1000149" [label="(Call,skb == NULL)"];
"1000123" [label="(Call,skb = skb_peek_tail(&sk->sk_write_queue))"];
"1000184" [label="(Call,err = skb_append_datato_frags(sk,skb, getfrag, from,\n\t\t\t\t      (length - transhdrlen)))"];
"1000122" [label="(Call,(skb = skb_peek_tail(&sk->sk_write_queue)) == NULL)"];
"1000163" [label="(Call,skb_reset_network_header(skb))"];
"1000157" [label="(Identifier,hh_len)"];
"1000131" [label="(Block,)"];
"1000190" [label="(Identifier,from)"];
"1000148" [label="(ControlStructure,if (skb == NULL))"];
"1000160" [label="(Call,fragheaderlen + transhdrlen)"];
"1000144" [label="(Identifier,flags)"];
"1000167" [label="(Identifier,skb)"];
"1000241" [label="(Identifier,err)"];
"1000130" [label="(Identifier,NULL)"];
"1000164" [label="(Identifier,skb)"];
"1000147" [label="(Identifier,err)"];
"1000242" [label="(MethodReturn,static inline int)"];
"1000189" [label="(Identifier,getfrag)"];
"1000151" [label="(Identifier,NULL)"];
"1000158" [label="(Call,skb_put(skb,fragheaderlen + transhdrlen))"];
"1000143" [label="(Call,flags & MSG_DONTWAIT)"];
"1000188" [label="(Identifier,skb)"];
"1000132" [label="(Call,skb = sock_alloc_send_skb(sk,\n\t\t\thh_len + fragheaderlen + transhdrlen + 20,\n\t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000140" [label="(Call,transhdrlen + 20)"];
"1000192" [label="(Identifier,length)"];
"1000125" [label="(Call,skb_peek_tail(&sk->sk_write_queue))"];
"1000239" [label="(Identifier,skb)"];
"1000165" [label="(Call,skb->transport_header = skb->network_header + fragheaderlen)"];
"1000159" [label="(Identifier,skb)"];
"1000133" [label="(Identifier,skb)"];
"1000108" [label="(MethodParameterIn,struct sock *sk)"];
"1000169" [label="(Call,skb->network_header + fragheaderlen)"];
"1000150" [label="(Identifier,skb)"];
"1000134" [label="(Call,sock_alloc_send_skb(sk,\n\t\t\thh_len + fragheaderlen + transhdrlen + 20,\n\t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000185" [label="(Identifier,err)"];
"1000238" [label="(Call,kfree_skb(skb))"];
"1000191" [label="(Call,length - transhdrlen)"];
"1000207" [label="(Call,fragheaderlen -\n \t\t\t\t\t     sizeof(struct frag_hdr))"];
"1000238" -> "1000118"  [label="AST: "];
"1000238" -> "1000239"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000241" -> "1000238"  [label="CFG: "];
"1000238" -> "1000242"  [label="DDG: skb"];
"1000238" -> "1000242"  [label="DDG: kfree_skb(skb)"];
"1000186" -> "1000238"  [label="DDG: skb"];
"1000186" -> "1000184"  [label="AST: "];
"1000186" -> "1000191"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000188" -> "1000186"  [label="AST: "];
"1000189" -> "1000186"  [label="AST: "];
"1000190" -> "1000186"  [label="AST: "];
"1000191" -> "1000186"  [label="AST: "];
"1000184" -> "1000186"  [label="CFG: "];
"1000186" -> "1000242"  [label="DDG: sk"];
"1000186" -> "1000242"  [label="DDG: from"];
"1000186" -> "1000242"  [label="DDG: getfrag"];
"1000186" -> "1000242"  [label="DDG: length - transhdrlen"];
"1000186" -> "1000184"  [label="DDG: sk"];
"1000186" -> "1000184"  [label="DDG: length - transhdrlen"];
"1000186" -> "1000184"  [label="DDG: skb"];
"1000186" -> "1000184"  [label="DDG: from"];
"1000186" -> "1000184"  [label="DDG: getfrag"];
"1000134" -> "1000186"  [label="DDG: sk"];
"1000108" -> "1000186"  [label="DDG: sk"];
"1000163" -> "1000186"  [label="DDG: skb"];
"1000123" -> "1000186"  [label="DDG: skb"];
"1000109" -> "1000186"  [label="DDG: getfrag"];
"1000110" -> "1000186"  [label="DDG: from"];
"1000191" -> "1000186"  [label="DDG: length"];
"1000191" -> "1000186"  [label="DDG: transhdrlen"];
"1000186" -> "1000201"  [label="DDG: skb"];
"1000134" -> "1000132"  [label="AST: "];
"1000134" -> "1000146"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000143" -> "1000134"  [label="AST: "];
"1000146" -> "1000134"  [label="AST: "];
"1000132" -> "1000134"  [label="CFG: "];
"1000134" -> "1000242"  [label="DDG: sk"];
"1000134" -> "1000242"  [label="DDG: hh_len + fragheaderlen + transhdrlen + 20"];
"1000134" -> "1000242"  [label="DDG: flags & MSG_DONTWAIT"];
"1000134" -> "1000242"  [label="DDG: &err"];
"1000134" -> "1000132"  [label="DDG: sk"];
"1000134" -> "1000132"  [label="DDG: hh_len + fragheaderlen + transhdrlen + 20"];
"1000134" -> "1000132"  [label="DDG: flags & MSG_DONTWAIT"];
"1000134" -> "1000132"  [label="DDG: &err"];
"1000108" -> "1000134"  [label="DDG: sk"];
"1000112" -> "1000134"  [label="DDG: hh_len"];
"1000113" -> "1000134"  [label="DDG: fragheaderlen"];
"1000114" -> "1000134"  [label="DDG: transhdrlen"];
"1000143" -> "1000134"  [label="DDG: flags"];
"1000143" -> "1000134"  [label="DDG: MSG_DONTWAIT"];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000242"  [label="DDG: sk"];
"1000112" -> "1000107"  [label="AST: "];
"1000112" -> "1000242"  [label="DDG: hh_len"];
"1000112" -> "1000136"  [label="DDG: hh_len"];
"1000112" -> "1000155"  [label="DDG: hh_len"];
"1000113" -> "1000107"  [label="AST: "];
"1000113" -> "1000242"  [label="DDG: fragheaderlen"];
"1000113" -> "1000136"  [label="DDG: fragheaderlen"];
"1000113" -> "1000138"  [label="DDG: fragheaderlen"];
"1000113" -> "1000158"  [label="DDG: fragheaderlen"];
"1000113" -> "1000160"  [label="DDG: fragheaderlen"];
"1000113" -> "1000165"  [label="DDG: fragheaderlen"];
"1000113" -> "1000169"  [label="DDG: fragheaderlen"];
"1000113" -> "1000207"  [label="DDG: fragheaderlen"];
"1000114" -> "1000107"  [label="AST: "];
"1000114" -> "1000242"  [label="DDG: transhdrlen"];
"1000114" -> "1000136"  [label="DDG: transhdrlen"];
"1000114" -> "1000138"  [label="DDG: transhdrlen"];
"1000114" -> "1000140"  [label="DDG: transhdrlen"];
"1000114" -> "1000158"  [label="DDG: transhdrlen"];
"1000114" -> "1000160"  [label="DDG: transhdrlen"];
"1000114" -> "1000191"  [label="DDG: transhdrlen"];
"1000143" -> "1000145"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000145" -> "1000143"  [label="AST: "];
"1000147" -> "1000143"  [label="CFG: "];
"1000143" -> "1000242"  [label="DDG: flags"];
"1000143" -> "1000242"  [label="DDG: MSG_DONTWAIT"];
"1000116" -> "1000143"  [label="DDG: flags"];
"1000116" -> "1000107"  [label="AST: "];
"1000116" -> "1000242"  [label="DDG: flags"];
"1000163" -> "1000131"  [label="AST: "];
"1000163" -> "1000164"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000167" -> "1000163"  [label="CFG: "];
"1000163" -> "1000242"  [label="DDG: skb_reset_network_header(skb)"];
"1000158" -> "1000163"  [label="DDG: skb"];
"1000158" -> "1000131"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000164" -> "1000158"  [label="CFG: "];
"1000158" -> "1000242"  [label="DDG: fragheaderlen + transhdrlen"];
"1000158" -> "1000242"  [label="DDG: skb_put(skb,fragheaderlen + transhdrlen)"];
"1000155" -> "1000158"  [label="DDG: skb"];
"1000155" -> "1000131"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000157" -> "1000155"  [label="AST: "];
"1000159" -> "1000155"  [label="CFG: "];
"1000155" -> "1000242"  [label="DDG: hh_len"];
"1000155" -> "1000242"  [label="DDG: skb_reserve(skb, hh_len)"];
"1000149" -> "1000155"  [label="DDG: skb"];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000154" -> "1000149"  [label="CFG: "];
"1000156" -> "1000149"  [label="CFG: "];
"1000149" -> "1000242"  [label="DDG: NULL"];
"1000149" -> "1000242"  [label="DDG: skb == NULL"];
"1000149" -> "1000242"  [label="DDG: skb"];
"1000132" -> "1000149"  [label="DDG: skb"];
"1000122" -> "1000149"  [label="DDG: NULL"];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000132"  [label="AST: "];
"1000150" -> "1000132"  [label="CFG: "];
"1000132" -> "1000242"  [label="DDG: sock_alloc_send_skb(sk,\n\t\t\thh_len + fragheaderlen + transhdrlen + 20,\n\t\t\t(flags & MSG_DONTWAIT), &err)"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000130"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000130" -> "1000122"  [label="AST: "];
"1000133" -> "1000122"  [label="CFG: "];
"1000185" -> "1000122"  [label="CFG: "];
"1000122" -> "1000242"  [label="DDG: NULL"];
"1000122" -> "1000242"  [label="DDG: (skb = skb_peek_tail(&sk->sk_write_queue)) == NULL"];
"1000123" -> "1000122"  [label="DDG: skb"];
"1000125" -> "1000122"  [label="DDG: &sk->sk_write_queue"];
"1000123" -> "1000125"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000130" -> "1000123"  [label="CFG: "];
"1000123" -> "1000242"  [label="DDG: skb_peek_tail(&sk->sk_write_queue)"];
"1000125" -> "1000123"  [label="DDG: &sk->sk_write_queue"];
"1000125" -> "1000126"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000125" -> "1000242"  [label="DDG: &sk->sk_write_queue"];
"1000125" -> "1000230"  [label="DDG: &sk->sk_write_queue"];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000242"  [label="DDG: getfrag"];
"1000110" -> "1000107"  [label="AST: "];
"1000110" -> "1000242"  [label="DDG: from"];
"1000191" -> "1000193"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000193" -> "1000191"  [label="AST: "];
"1000191" -> "1000242"  [label="DDG: transhdrlen"];
"1000191" -> "1000242"  [label="DDG: length"];
"1000111" -> "1000191"  [label="DDG: length"];
"1000111" -> "1000107"  [label="AST: "];
"1000111" -> "1000242"  [label="DDG: length"];
}
