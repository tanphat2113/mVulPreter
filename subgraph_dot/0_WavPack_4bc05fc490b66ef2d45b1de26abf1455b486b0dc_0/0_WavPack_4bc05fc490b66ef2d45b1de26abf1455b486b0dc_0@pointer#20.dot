digraph "0_WavPack_4bc05fc490b66ef2d45b1de26abf1455b486b0dc_0@pointer" {
"1000543" [label="(Call,wps->w.holding_one = ones_count & 1)"];
"1000549" [label="(Call,ones_count & 1)"];
"1000513" [label="(Call,ones_count += LIMIT_ONES)"];
"1000452" [label="(Call,ones_count == LIMIT_ONES)"];
"1000444" [label="(Call,ones_count == (LIMIT_ONES + 1))"];
"1000431" [label="(Call,ones_count < (LIMIT_ONES + 1))"];
"1000422" [label="(Call,wps->wvbits.sr >>= ones_count)"];
"1000369" [label="(Call,wps->wvbits.sr |= *(wps->wvbits.ptr) << wps->wvbits.bc)"];
"1000375" [label="(Call,*(wps->wvbits.ptr) << wps->wvbits.bc)"];
"1000343" [label="(Call,wps->wvbits.bc < LIMIT_ONES)"];
"1000387" [label="(Call,wps->wvbits.bc += sizeof (*(wps->wvbits.ptr)) * 8)"];
"1000393" [label="(Call,sizeof (*(wps->wvbits.ptr)) * 8)"];
"1000411" [label="(Call,ones_count >= LIMIT_ONES)"];
"1000441" [label="(Call,++ones_count)"];
"1000510" [label="(Call,ones_count |= mask)"];
"1000493" [label="(Call,ones_count = 0)"];
"1000507" [label="(Call,ones_count |= mask)"];
"1000498" [label="(Call,mask <<= 1)"];
"1000490" [label="(Call,mask = 1)"];
"1000483" [label="(Call,ones_count = cbits)"];
"1000480" [label="(Call,cbits < 2)"];
"1000474" [label="(Call,cbits == 33)"];
"1000463" [label="(Call,cbits < 33)"];
"1000459" [label="(Call,cbits = 0)"];
"1000471" [label="(Call,++cbits)"];
"1000342" [label="(ControlStructure,while (wps->wvbits.bc < LIMIT_ONES))"];
"1000498" [label="(Call,mask <<= 1)"];
"1000412" [label="(Identifier,ones_count)"];
"1000343" [label="(Call,wps->wvbits.bc < LIMIT_ONES)"];
"1000369" [label="(Call,wps->wvbits.sr |= *(wps->wvbits.ptr) << wps->wvbits.bc)"];
"1000518" [label="(Call,wps->wvbits.bc -= ones_count + 1)"];
"1000474" [label="(Call,cbits == 33)"];
"1000404" [label="(Identifier,ones_count)"];
"1000458" [label="(ControlStructure,for (cbits = 0; cbits < 33 && getbit (&wps->wvbits); ++cbits))"];
"1000514" [label="(Identifier,ones_count)"];
"1000446" [label="(Call,LIMIT_ONES + 1)"];
"1000453" [label="(Identifier,ones_count)"];
"1000481" [label="(Identifier,cbits)"];
"1000450" [label="(Identifier,WORD_EOF)"];
"1000508" [label="(Identifier,ones_count)"];
"1000382" [label="(Call,wps->wvbits.bc)"];
"1000432" [label="(Identifier,ones_count)"];
"1000491" [label="(Identifier,mask)"];
"1000475" [label="(Identifier,cbits)"];
"1000422" [label="(Call,wps->wvbits.sr >>= ones_count)"];
"1000501" [label="(ControlStructure,if (getbit (&wps->wvbits)))"];
"1000476" [label="(Literal,33)"];
"1000533" [label="(Call,ones_count + 1)"];
"1000463" [label="(Call,cbits < 33)"];
"1000497" [label="(Identifier,cbits)"];
"1000489" [label="(Block,)"];
"1000462" [label="(Call,cbits < 33 && getbit (&wps->wvbits))"];
"1000415" [label="(Call,wps->wvbits.bc -= ones_count)"];
"1000480" [label="(Call,cbits < 2)"];
"1000442" [label="(Identifier,ones_count)"];
"1000451" [label="(ControlStructure,if (ones_count == LIMIT_ONES))"];
"1000460" [label="(Identifier,cbits)"];
"1000393" [label="(Call,sizeof (*(wps->wvbits.ptr)) * 8)"];
"1000492" [label="(Literal,1)"];
"1000551" [label="(Literal,1)"];
"1000510" [label="(Call,ones_count |= mask)"];
"1000521" [label="(Identifier,wps)"];
"1000479" [label="(ControlStructure,if (cbits < 2))"];
"1000350" [label="(Block,)"];
"1000496" [label="(Call,--cbits)"];
"1000388" [label="(Call,wps->wvbits.bc)"];
"1000375" [label="(Call,*(wps->wvbits.ptr) << wps->wvbits.bc)"];
"1000433" [label="(Call,LIMIT_ONES + 1)"];
"1000499" [label="(Identifier,mask)"];
"1000413" [label="(Identifier,LIMIT_ONES)"];
"1000429" [label="(ControlStructure,for (; ones_count < (LIMIT_ONES + 1) && getbit (&wps->wvbits); ++ones_count))"];
"1000494" [label="(Identifier,ones_count)"];
"1000485" [label="(Identifier,cbits)"];
"1000452" [label="(Call,ones_count == LIMIT_ONES)"];
"1000376" [label="(Call,*(wps->wvbits.ptr))"];
"1000471" [label="(Call,++cbits)"];
"1000459" [label="(Call,cbits = 0)"];
"1000469" [label="(Identifier,wps)"];
"1000488" [label="(ControlStructure,for (mask = 1, ones_count = 0; --cbits; mask <<= 1))"];
"1000461" [label="(Literal,0)"];
"1000455" [label="(Block,)"];
"1000346" [label="(Identifier,wps)"];
"1000387" [label="(Call,wps->wvbits.bc += sizeof (*(wps->wvbits.ptr)) * 8)"];
"1000829" [label="(MethodReturn,int32_t FASTCALL)"];
"1000567" [label="(Call,ones_count & 1)"];
"1000465" [label="(Literal,33)"];
"1000414" [label="(Block,)"];
"1000418" [label="(Identifier,wps)"];
"1000344" [label="(Call,wps->wvbits.bc)"];
"1000524" [label="(Call,ones_count + 1)"];
"1000423" [label="(Call,wps->wvbits.sr)"];
"1000349" [label="(Identifier,LIMIT_ONES)"];
"1000464" [label="(Identifier,cbits)"];
"1000473" [label="(ControlStructure,if (cbits == 33))"];
"1000484" [label="(Identifier,ones_count)"];
"1000482" [label="(Literal,2)"];
"1000454" [label="(Identifier,LIMIT_ONES)"];
"1000356" [label="(Identifier,wps)"];
"1000370" [label="(Call,wps->wvbits.sr)"];
"1000553" [label="(Identifier,ones_count)"];
"1000441" [label="(Call,++ones_count)"];
"1000549" [label="(Call,ones_count & 1)"];
"1000507" [label="(Call,ones_count |= mask)"];
"1000555" [label="(Call,ones_count >> 1)"];
"1000401" [label="(Literal,8)"];
"1000444" [label="(Call,ones_count == (LIMIT_ONES + 1))"];
"1000500" [label="(Literal,1)"];
"1000390" [label="(Identifier,wps)"];
"1000512" [label="(Identifier,mask)"];
"1000511" [label="(Identifier,ones_count)"];
"1000490" [label="(Call,mask = 1)"];
"1000445" [label="(Identifier,ones_count)"];
"1000410" [label="(ControlStructure,if (ones_count >= LIMIT_ONES))"];
"1000487" [label="(Block,)"];
"1000495" [label="(Literal,0)"];
"1000483" [label="(Call,ones_count = cbits)"];
"1000394" [label="(Call,sizeof (*(wps->wvbits.ptr)))"];
"1000478" [label="(Identifier,WORD_EOF)"];
"1000513" [label="(Call,ones_count += LIMIT_ONES)"];
"1000543" [label="(Call,wps->w.holding_one = ones_count & 1)"];
"1000515" [label="(Identifier,LIMIT_ONES)"];
"1000542" [label="(Block,)"];
"1000527" [label="(Call,wps->wvbits.sr >>= ones_count + 1)"];
"1000493" [label="(Call,ones_count = 0)"];
"1000443" [label="(ControlStructure,if (ones_count == (LIMIT_ONES + 1)))"];
"1000544" [label="(Call,wps->w.holding_one)"];
"1000431" [label="(Call,ones_count < (LIMIT_ONES + 1))"];
"1000472" [label="(Identifier,cbits)"];
"1000539" [label="(Identifier,wps)"];
"1000509" [label="(Identifier,mask)"];
"1000550" [label="(Identifier,ones_count)"];
"1000411" [label="(Call,ones_count >= LIMIT_ONES)"];
"1000428" [label="(Identifier,ones_count)"];
"1000430" [label="(Call,ones_count < (LIMIT_ONES + 1) && getbit (&wps->wvbits))"];
"1000439" [label="(Identifier,wps)"];
"1000543" -> "1000542"  [label="AST: "];
"1000543" -> "1000549"  [label="CFG: "];
"1000544" -> "1000543"  [label="AST: "];
"1000549" -> "1000543"  [label="AST: "];
"1000553" -> "1000543"  [label="CFG: "];
"1000543" -> "1000829"  [label="DDG: wps->w.holding_one"];
"1000543" -> "1000829"  [label="DDG: ones_count & 1"];
"1000549" -> "1000543"  [label="DDG: ones_count"];
"1000549" -> "1000543"  [label="DDG: 1"];
"1000549" -> "1000551"  [label="CFG: "];
"1000550" -> "1000549"  [label="AST: "];
"1000551" -> "1000549"  [label="AST: "];
"1000513" -> "1000549"  [label="DDG: ones_count"];
"1000452" -> "1000549"  [label="DDG: ones_count"];
"1000411" -> "1000549"  [label="DDG: ones_count"];
"1000549" -> "1000555"  [label="DDG: ones_count"];
"1000513" -> "1000455"  [label="AST: "];
"1000513" -> "1000515"  [label="CFG: "];
"1000514" -> "1000513"  [label="AST: "];
"1000515" -> "1000513"  [label="AST: "];
"1000539" -> "1000513"  [label="CFG: "];
"1000513" -> "1000829"  [label="DDG: LIMIT_ONES"];
"1000452" -> "1000513"  [label="DDG: LIMIT_ONES"];
"1000510" -> "1000513"  [label="DDG: ones_count"];
"1000483" -> "1000513"  [label="DDG: ones_count"];
"1000513" -> "1000567"  [label="DDG: ones_count"];
"1000452" -> "1000451"  [label="AST: "];
"1000452" -> "1000454"  [label="CFG: "];
"1000453" -> "1000452"  [label="AST: "];
"1000454" -> "1000452"  [label="AST: "];
"1000460" -> "1000452"  [label="CFG: "];
"1000539" -> "1000452"  [label="CFG: "];
"1000452" -> "1000829"  [label="DDG: ones_count == LIMIT_ONES"];
"1000452" -> "1000829"  [label="DDG: ones_count"];
"1000452" -> "1000829"  [label="DDG: LIMIT_ONES"];
"1000444" -> "1000452"  [label="DDG: ones_count"];
"1000411" -> "1000452"  [label="DDG: LIMIT_ONES"];
"1000452" -> "1000567"  [label="DDG: ones_count"];
"1000444" -> "1000443"  [label="AST: "];
"1000444" -> "1000446"  [label="CFG: "];
"1000445" -> "1000444"  [label="AST: "];
"1000446" -> "1000444"  [label="AST: "];
"1000450" -> "1000444"  [label="CFG: "];
"1000453" -> "1000444"  [label="CFG: "];
"1000444" -> "1000829"  [label="DDG: LIMIT_ONES + 1"];
"1000444" -> "1000829"  [label="DDG: ones_count"];
"1000444" -> "1000829"  [label="DDG: ones_count == (LIMIT_ONES + 1)"];
"1000431" -> "1000444"  [label="DDG: ones_count"];
"1000411" -> "1000444"  [label="DDG: LIMIT_ONES"];
"1000431" -> "1000430"  [label="AST: "];
"1000431" -> "1000433"  [label="CFG: "];
"1000432" -> "1000431"  [label="AST: "];
"1000433" -> "1000431"  [label="AST: "];
"1000439" -> "1000431"  [label="CFG: "];
"1000430" -> "1000431"  [label="CFG: "];
"1000431" -> "1000430"  [label="DDG: ones_count"];
"1000431" -> "1000430"  [label="DDG: LIMIT_ONES + 1"];
"1000422" -> "1000431"  [label="DDG: ones_count"];
"1000441" -> "1000431"  [label="DDG: ones_count"];
"1000411" -> "1000431"  [label="DDG: LIMIT_ONES"];
"1000431" -> "1000441"  [label="DDG: ones_count"];
"1000422" -> "1000414"  [label="AST: "];
"1000422" -> "1000428"  [label="CFG: "];
"1000423" -> "1000422"  [label="AST: "];
"1000428" -> "1000422"  [label="AST: "];
"1000432" -> "1000422"  [label="CFG: "];
"1000422" -> "1000829"  [label="DDG: wps->wvbits.sr"];
"1000422" -> "1000829"  [label="DDG: wps->wvbits.sr >>= ones_count"];
"1000369" -> "1000422"  [label="DDG: wps->wvbits.sr"];
"1000411" -> "1000422"  [label="DDG: ones_count"];
"1000369" -> "1000350"  [label="AST: "];
"1000369" -> "1000375"  [label="CFG: "];
"1000370" -> "1000369"  [label="AST: "];
"1000375" -> "1000369"  [label="AST: "];
"1000390" -> "1000369"  [label="CFG: "];
"1000369" -> "1000829"  [label="DDG: wps->wvbits.sr |= *(wps->wvbits.ptr) << wps->wvbits.bc"];
"1000369" -> "1000829"  [label="DDG: *(wps->wvbits.ptr) << wps->wvbits.bc"];
"1000375" -> "1000369"  [label="DDG: *(wps->wvbits.ptr)"];
"1000375" -> "1000369"  [label="DDG: wps->wvbits.bc"];
"1000369" -> "1000527"  [label="DDG: wps->wvbits.sr"];
"1000375" -> "1000382"  [label="CFG: "];
"1000376" -> "1000375"  [label="AST: "];
"1000382" -> "1000375"  [label="AST: "];
"1000343" -> "1000375"  [label="DDG: wps->wvbits.bc"];
"1000375" -> "1000387"  [label="DDG: wps->wvbits.bc"];
"1000343" -> "1000342"  [label="AST: "];
"1000343" -> "1000349"  [label="CFG: "];
"1000344" -> "1000343"  [label="AST: "];
"1000349" -> "1000343"  [label="AST: "];
"1000356" -> "1000343"  [label="CFG: "];
"1000404" -> "1000343"  [label="CFG: "];
"1000343" -> "1000829"  [label="DDG: wps->wvbits.bc < LIMIT_ONES"];
"1000387" -> "1000343"  [label="DDG: wps->wvbits.bc"];
"1000343" -> "1000411"  [label="DDG: LIMIT_ONES"];
"1000343" -> "1000415"  [label="DDG: wps->wvbits.bc"];
"1000343" -> "1000518"  [label="DDG: wps->wvbits.bc"];
"1000387" -> "1000350"  [label="AST: "];
"1000387" -> "1000393"  [label="CFG: "];
"1000388" -> "1000387"  [label="AST: "];
"1000393" -> "1000387"  [label="AST: "];
"1000346" -> "1000387"  [label="CFG: "];
"1000387" -> "1000829"  [label="DDG: sizeof (*(wps->wvbits.ptr)) * 8"];
"1000393" -> "1000387"  [label="DDG: 8"];
"1000393" -> "1000401"  [label="CFG: "];
"1000394" -> "1000393"  [label="AST: "];
"1000401" -> "1000393"  [label="AST: "];
"1000411" -> "1000410"  [label="AST: "];
"1000411" -> "1000413"  [label="CFG: "];
"1000412" -> "1000411"  [label="AST: "];
"1000413" -> "1000411"  [label="AST: "];
"1000418" -> "1000411"  [label="CFG: "];
"1000521" -> "1000411"  [label="CFG: "];
"1000411" -> "1000829"  [label="DDG: ones_count >= LIMIT_ONES"];
"1000411" -> "1000829"  [label="DDG: LIMIT_ONES"];
"1000411" -> "1000415"  [label="DDG: ones_count"];
"1000411" -> "1000433"  [label="DDG: LIMIT_ONES"];
"1000411" -> "1000446"  [label="DDG: LIMIT_ONES"];
"1000411" -> "1000518"  [label="DDG: ones_count"];
"1000411" -> "1000524"  [label="DDG: ones_count"];
"1000411" -> "1000527"  [label="DDG: ones_count"];
"1000411" -> "1000533"  [label="DDG: ones_count"];
"1000411" -> "1000567"  [label="DDG: ones_count"];
"1000441" -> "1000429"  [label="AST: "];
"1000441" -> "1000442"  [label="CFG: "];
"1000442" -> "1000441"  [label="AST: "];
"1000432" -> "1000441"  [label="CFG: "];
"1000510" -> "1000487"  [label="AST: "];
"1000510" -> "1000512"  [label="CFG: "];
"1000511" -> "1000510"  [label="AST: "];
"1000512" -> "1000510"  [label="AST: "];
"1000514" -> "1000510"  [label="CFG: "];
"1000510" -> "1000829"  [label="DDG: mask"];
"1000510" -> "1000829"  [label="DDG: ones_count |= mask"];
"1000493" -> "1000510"  [label="DDG: ones_count"];
"1000507" -> "1000510"  [label="DDG: ones_count"];
"1000498" -> "1000510"  [label="DDG: mask"];
"1000490" -> "1000510"  [label="DDG: mask"];
"1000493" -> "1000489"  [label="AST: "];
"1000493" -> "1000495"  [label="CFG: "];
"1000494" -> "1000493"  [label="AST: "];
"1000495" -> "1000493"  [label="AST: "];
"1000497" -> "1000493"  [label="CFG: "];
"1000493" -> "1000507"  [label="DDG: ones_count"];
"1000507" -> "1000501"  [label="AST: "];
"1000507" -> "1000509"  [label="CFG: "];
"1000508" -> "1000507"  [label="AST: "];
"1000509" -> "1000507"  [label="AST: "];
"1000499" -> "1000507"  [label="CFG: "];
"1000507" -> "1000498"  [label="DDG: mask"];
"1000498" -> "1000507"  [label="DDG: mask"];
"1000490" -> "1000507"  [label="DDG: mask"];
"1000498" -> "1000488"  [label="AST: "];
"1000498" -> "1000500"  [label="CFG: "];
"1000499" -> "1000498"  [label="AST: "];
"1000500" -> "1000498"  [label="AST: "];
"1000497" -> "1000498"  [label="CFG: "];
"1000498" -> "1000829"  [label="DDG: mask <<= 1"];
"1000490" -> "1000498"  [label="DDG: mask"];
"1000490" -> "1000489"  [label="AST: "];
"1000490" -> "1000492"  [label="CFG: "];
"1000491" -> "1000490"  [label="AST: "];
"1000492" -> "1000490"  [label="AST: "];
"1000494" -> "1000490"  [label="CFG: "];
"1000483" -> "1000479"  [label="AST: "];
"1000483" -> "1000485"  [label="CFG: "];
"1000484" -> "1000483"  [label="AST: "];
"1000485" -> "1000483"  [label="AST: "];
"1000514" -> "1000483"  [label="CFG: "];
"1000483" -> "1000829"  [label="DDG: cbits"];
"1000480" -> "1000483"  [label="DDG: cbits"];
"1000480" -> "1000479"  [label="AST: "];
"1000480" -> "1000482"  [label="CFG: "];
"1000481" -> "1000480"  [label="AST: "];
"1000482" -> "1000480"  [label="AST: "];
"1000484" -> "1000480"  [label="CFG: "];
"1000491" -> "1000480"  [label="CFG: "];
"1000480" -> "1000829"  [label="DDG: cbits < 2"];
"1000474" -> "1000480"  [label="DDG: cbits"];
"1000480" -> "1000496"  [label="DDG: cbits"];
"1000474" -> "1000473"  [label="AST: "];
"1000474" -> "1000476"  [label="CFG: "];
"1000475" -> "1000474"  [label="AST: "];
"1000476" -> "1000474"  [label="AST: "];
"1000478" -> "1000474"  [label="CFG: "];
"1000481" -> "1000474"  [label="CFG: "];
"1000474" -> "1000829"  [label="DDG: cbits == 33"];
"1000474" -> "1000829"  [label="DDG: cbits"];
"1000463" -> "1000474"  [label="DDG: cbits"];
"1000463" -> "1000462"  [label="AST: "];
"1000463" -> "1000465"  [label="CFG: "];
"1000464" -> "1000463"  [label="AST: "];
"1000465" -> "1000463"  [label="AST: "];
"1000469" -> "1000463"  [label="CFG: "];
"1000462" -> "1000463"  [label="CFG: "];
"1000463" -> "1000462"  [label="DDG: cbits"];
"1000463" -> "1000462"  [label="DDG: 33"];
"1000459" -> "1000463"  [label="DDG: cbits"];
"1000471" -> "1000463"  [label="DDG: cbits"];
"1000463" -> "1000471"  [label="DDG: cbits"];
"1000459" -> "1000458"  [label="AST: "];
"1000459" -> "1000461"  [label="CFG: "];
"1000460" -> "1000459"  [label="AST: "];
"1000461" -> "1000459"  [label="AST: "];
"1000464" -> "1000459"  [label="CFG: "];
"1000471" -> "1000458"  [label="AST: "];
"1000471" -> "1000472"  [label="CFG: "];
"1000472" -> "1000471"  [label="AST: "];
"1000464" -> "1000471"  [label="CFG: "];
}
