digraph "0_WavPack_4bc05fc490b66ef2d45b1de26abf1455b486b0dc_0@API" {
"1000393" [label="(Call,sizeof (*(wps->wvbits.ptr)) * 8)"];
"1000387" [label="(Call,wps->wvbits.bc += sizeof (*(wps->wvbits.ptr)) * 8)"];
"1000343" [label="(Call,wps->wvbits.bc < LIMIT_ONES)"];
"1000375" [label="(Call,*(wps->wvbits.ptr) << wps->wvbits.bc)"];
"1000369" [label="(Call,wps->wvbits.sr |= *(wps->wvbits.ptr) << wps->wvbits.bc)"];
"1000422" [label="(Call,wps->wvbits.sr >>= ones_count)"];
"1000431" [label="(Call,ones_count < (LIMIT_ONES + 1))"];
"1000430" [label="(Call,ones_count < (LIMIT_ONES + 1) && getbit (&wps->wvbits))"];
"1000462" [label="(Call,cbits < 33 && getbit (&wps->wvbits))"];
"1000441" [label="(Call,++ones_count)"];
"1000444" [label="(Call,ones_count == (LIMIT_ONES + 1))"];
"1000452" [label="(Call,ones_count == LIMIT_ONES)"];
"1000513" [label="(Call,ones_count += LIMIT_ONES)"];
"1000549" [label="(Call,ones_count & 1)"];
"1000543" [label="(Call,wps->w.holding_one = ones_count & 1)"];
"1000555" [label="(Call,ones_count >> 1)"];
"1000552" [label="(Call,ones_count = (ones_count >> 1) + 1)"];
"1000600" [label="(Call,ones_count == 0)"];
"1000622" [label="(Call,ones_count == 1)"];
"1000643" [label="(Call,ones_count == 2)"];
"1000661" [label="(Call,ones_count - 2)"];
"1000660" [label="(Call,(ones_count - 2) * GET_MED (2))"];
"1000658" [label="(Call,low += (ones_count - 2) * GET_MED (2))"];
"1000666" [label="(Call,high = low + GET_MED (2) - 1)"];
"1000678" [label="(Call,high &= 0x7fffffff)"];
"1000682" [label="(Call,low > high)"];
"1000685" [label="(Call,high = low)"];
"1000690" [label="(Call,(high + low + 1) >> 1)"];
"1000688" [label="(Call,mid = (high + low + 1) >> 1)"];
"1000735" [label="(Call,(low = mid) + 1)"];
"1000736" [label="(Call,low = mid)"];
"1000717" [label="(Call,high - low)"];
"1000716" [label="(Call,high - low > c->error_limit)"];
"1000763" [label="(Call,bs_is_open (&wps->wvcbits) && c->error_limit)"];
"1000732" [label="(Call,(high + (low = mid) + 1) >> 1)"];
"1000730" [label="(Call,mid = (high + (low = mid) + 1) >> 1)"];
"1000748" [label="(Call,mid - 1)"];
"1000745" [label="(Call,(high = mid - 1) + low + 1)"];
"1000746" [label="(Call,high = mid - 1)"];
"1000792" [label="(Call,mid - value)"];
"1000787" [label="(Call,*correction = sign ? (mid - value) : (value - mid))"];
"1000790" [label="(Call,sign ? (mid - value) : (value - mid))"];
"1000822" [label="(Call,wp_log2 (mid))"];
"1000818" [label="(Call,c->slow_level += wp_log2 (mid))"];
"1000825" [label="(Call,sign ? ~mid : mid)"];
"1000824" [label="(Return,return sign ? ~mid : mid;)"];
"1000795" [label="(Call,value - mid)"];
"1000733" [label="(Call,high + (low = mid) + 1)"];
"1000744" [label="(Call,((high = mid - 1) + low + 1) >> 1)"];
"1000742" [label="(Call,mid = ((high = mid - 1) + low + 1) >> 1)"];
"1000751" [label="(Call,low + 1)"];
"1000781" [label="(Call,high - low)"];
"1000773" [label="(Call,value = read_code (&wps->wvcbits, high - low) + low)"];
"1000776" [label="(Call,read_code (&wps->wvcbits, high - low))"];
"1000775" [label="(Call,read_code (&wps->wvcbits, high - low) + low)"];
"1000691" [label="(Call,high + low + 1)"];
"1000710" [label="(Call,high - low)"];
"1000702" [label="(Call,mid = read_code (&wps->wvbits, high - low) + low)"];
"1000705" [label="(Call,read_code (&wps->wvbits, high - low))"];
"1000704" [label="(Call,read_code (&wps->wvbits, high - low) + low)"];
"1000757" [label="(Call,getbit (&wps->wvbits))"];
"1000755" [label="(Call,sign = getbit (&wps->wvbits))"];
"1000693" [label="(Call,low + 1)"];
"1000668" [label="(Call,low + GET_MED (2) - 1)"];
"1000675" [label="(Call,low &= 0x7fffffff)"];
"1000554" [label="(Call,(ones_count >> 1) + 1)"];
"1000567" [label="(Call,ones_count & 1)"];
"1000561" [label="(Call,wps->w.holding_one = ones_count & 1)"];
"1000570" [label="(Call,ones_count >>= 1)"];
"1000527" [label="(Call,wps->wvbits.sr >>= ones_count + 1)"];
"1000411" [label="(Call,ones_count >= LIMIT_ONES)"];
"1000415" [label="(Call,wps->wvbits.bc -= ones_count)"];
"1000433" [label="(Call,LIMIT_ONES + 1)"];
"1000446" [label="(Call,LIMIT_ONES + 1)"];
"1000518" [label="(Call,wps->wvbits.bc -= ones_count + 1)"];
"1000524" [label="(Call,ones_count + 1)"];
"1000533" [label="(Call,ones_count + 1)"];
"1000746" [label="(Call,high = mid - 1)"];
"1000342" [label="(ControlStructure,while (wps->wvbits.bc < LIMIT_ONES))"];
"1000792" [label="(Call,mid - value)"];
"1000732" [label="(Call,(high + (low = mid) + 1) >> 1)"];
"1000747" [label="(Identifier,high)"];
"1000343" [label="(Call,wps->wvbits.bc < LIMIT_ONES)"];
"1000412" [label="(Identifier,ones_count)"];
"1000711" [label="(Identifier,high)"];
"1000781" [label="(Call,high - low)"];
"1000825" [label="(Call,sign ? ~mid : mid)"];
"1000675" [label="(Call,low &= 0x7fffffff)"];
"1000693" [label="(Call,low + 1)"];
"1000369" [label="(Call,wps->wvbits.sr |= *(wps->wvbits.ptr) << wps->wvbits.bc)"];
"1000644" [label="(Identifier,ones_count)"];
"1000518" [label="(Call,wps->wvbits.bc -= ones_count + 1)"];
"1000416" [label="(Call,wps->wvbits.bc)"];
"1000616" [label="(Call,low = GET_MED (0))"];
"1000754" [label="(Literal,1)"];
"1000748" [label="(Call,mid - 1)"];
"1000750" [label="(Literal,1)"];
"1000364" [label="(Call,wps->wvbits.wrap (&wps->wvbits))"];
"1000782" [label="(Identifier,high)"];
"1000600" [label="(Call,ones_count == 0)"];
"1000793" [label="(Identifier,mid)"];
"1000828" [label="(Identifier,mid)"];
"1000725" [label="(Call,getbit (&wps->wvbits))"];
"1000554" [label="(Call,(ones_count >> 1) + 1)"];
"1000404" [label="(Identifier,ones_count)"];
"1000773" [label="(Call,value = read_code (&wps->wvcbits, high - low) + low)"];
"1000466" [label="(Call,getbit (&wps->wvbits))"];
"1000762" [label="(ControlStructure,if (bs_is_open (&wps->wvcbits) && c->error_limit))"];
"1000788" [label="(Call,*correction)"];
"1000458" [label="(ControlStructure,for (cbits = 0; cbits < 33 && getbit (&wps->wvbits); ++cbits))"];
"1000680" [label="(Literal,0x7fffffff)"];
"1000514" [label="(Identifier,ones_count)"];
"1000447" [label="(Identifier,LIMIT_ONES)"];
"1000222" [label="(Call,getbit (&wps->wvbits))"];
"1000674" [label="(Call,INC_MED2 ())"];
"1000525" [label="(Identifier,ones_count)"];
"1000717" [label="(Call,high - low)"];
"1000670" [label="(Call,GET_MED (2) - 1)"];
"1000657" [label="(Block,)"];
"1000446" [label="(Call,LIMIT_ONES + 1)"];
"1000739" [label="(Literal,1)"];
"1000453" [label="(Identifier,ones_count)"];
"1000645" [label="(Literal,2)"];
"1000450" [label="(Identifier,WORD_EOF)"];
"1000105" [label="(Block,)"];
"1000623" [label="(Identifier,ones_count)"];
"1000662" [label="(Identifier,ones_count)"];
"1000382" [label="(Call,wps->wvbits.bc)"];
"1000519" [label="(Call,wps->wvbits.bc)"];
"1000432" [label="(Identifier,ones_count)"];
"1000605" [label="(Identifier,low)"];
"1000744" [label="(Call,((high = mid - 1) + low + 1) >> 1)"];
"1000724" [label="(ControlStructure,if (getbit (&wps->wvbits)))"];
"1000475" [label="(Identifier,cbits)"];
"1000422" [label="(Call,wps->wvbits.sr >>= ones_count)"];
"1000692" [label="(Identifier,high)"];
"1000421" [label="(Identifier,ones_count)"];
"1000783" [label="(Identifier,low)"];
"1000533" [label="(Call,ones_count + 1)"];
"1000436" [label="(Call,getbit (&wps->wvbits))"];
"1000463" [label="(Call,cbits < 33)"];
"1000678" [label="(Call,high &= 0x7fffffff)"];
"1000571" [label="(Identifier,ones_count)"];
"1000434" [label="(Identifier,LIMIT_ONES)"];
"1000818" [label="(Call,c->slow_level += wp_log2 (mid))"];
"1000823" [label="(Identifier,mid)"];
"1000621" [label="(ControlStructure,if (ones_count == 1))"];
"1000715" [label="(ControlStructure,while (high - low > c->error_limit))"];
"1000758" [label="(Call,&wps->wvbits)"];
"1000462" [label="(Call,cbits < 33 && getbit (&wps->wvbits))"];
"1000415" [label="(Call,wps->wvbits.bc -= ones_count)"];
"1000720" [label="(Call,c->error_limit)"];
"1000687" [label="(Identifier,low)"];
"1000534" [label="(Identifier,ones_count)"];
"1000568" [label="(Identifier,ones_count)"];
"1000562" [label="(Call,wps->w.holding_one)"];
"1000607" [label="(Call,high = GET_MED (0) - 1)"];
"1000442" [label="(Identifier,ones_count)"];
"1000451" [label="(ControlStructure,if (ones_count == LIMIT_ONES))"];
"1000460" [label="(Identifier,cbits)"];
"1000736" [label="(Call,low = mid)"];
"1000393" [label="(Call,sizeof (*(wps->wvbits.ptr)) * 8)"];
"1000696" [label="(Literal,1)"];
"1000551" [label="(Literal,1)"];
"1000627" [label="(Identifier,high)"];
"1000510" [label="(Call,ones_count |= mask)"];
"1000685" [label="(Call,high = low)"];
"1000777" [label="(Call,&wps->wvcbits)"];
"1000521" [label="(Identifier,wps)"];
"1000530" [label="(Identifier,wps)"];
"1000681" [label="(ControlStructure,if (low > high))"];
"1000742" [label="(Call,mid = ((high = mid - 1) + low + 1) >> 1)"];
"1000713" [label="(Identifier,low)"];
"1000576" [label="(Identifier,wps)"];
"1000350" [label="(Block,)"];
"1000266" [label="(Call,getbit (&wps->wvbits))"];
"1000716" [label="(Call,high - low > c->error_limit)"];
"1000764" [label="(Call,bs_is_open (&wps->wvcbits))"];
"1000712" [label="(Identifier,low)"];
"1000388" [label="(Call,wps->wvbits.bc)"];
"1000617" [label="(Identifier,low)"];
"1000375" [label="(Call,*(wps->wvbits.ptr) << wps->wvbits.bc)"];
"1000734" [label="(Identifier,high)"];
"1000433" [label="(Call,LIMIT_ONES + 1)"];
"1000642" [label="(ControlStructure,if (ones_count == 2))"];
"1000741" [label="(ControlStructure,else)"];
"1000663" [label="(Literal,2)"];
"1000794" [label="(Identifier,value)"];
"1000413" [label="(Identifier,LIMIT_ONES)"];
"1000691" [label="(Call,high + low + 1)"];
"1000624" [label="(Literal,1)"];
"1000429" [label="(ControlStructure,for (; ones_count < (LIMIT_ONES + 1) && getbit (&wps->wvbits); ++ones_count))"];
"1000558" [label="(Literal,1)"];
"1000684" [label="(Identifier,high)"];
"1000694" [label="(Identifier,low)"];
"1000738" [label="(Identifier,mid)"];
"1000452" [label="(Call,ones_count == LIMIT_ONES)"];
"1000376" [label="(Call,*(wps->wvbits.ptr))"];
"1000698" [label="(Call,!c->error_limit)"];
"1000802" [label="(Identifier,wps)"];
"1000731" [label="(Identifier,mid)"];
"1000556" [label="(Identifier,ones_count)"];
"1000718" [label="(Identifier,high)"];
"1000786" [label="(Identifier,correction)"];
"1000667" [label="(Identifier,high)"];
"1000751" [label="(Call,low + 1)"];
"1000647" [label="(Call,high = low + GET_MED (2) - 1)"];
"1000455" [label="(Block,)"];
"1000745" [label="(Call,(high = mid - 1) + low + 1)"];
"1000755" [label="(Call,sign = getbit (&wps->wvbits))"];
"1000448" [label="(Literal,1)"];
"1000346" [label="(Identifier,wps)"];
"1000387" [label="(Call,wps->wvbits.bc += sizeof (*(wps->wvbits.ptr)) * 8)"];
"1000683" [label="(Identifier,low)"];
"1000797" [label="(Identifier,mid)"];
"1000659" [label="(Identifier,low)"];
"1000526" [label="(Literal,1)"];
"1000829" [label="(MethodReturn,int32_t FASTCALL)"];
"1000567" [label="(Call,ones_count & 1)"];
"1000806" [label="(Block,)"];
"1000824" [label="(Return,return sign ? ~mid : mid;)"];
"1000688" [label="(Call,mid = (high + low + 1) >> 1)"];
"1000414" [label="(Block,)"];
"1000552" [label="(Call,ones_count = (ones_count >> 1) + 1)"];
"1000784" [label="(Identifier,low)"];
"1000561" [label="(Call,wps->w.holding_one = ones_count & 1)"];
"1000700" [label="(Identifier,c)"];
"1000626" [label="(Call,high = low + GET_MED (1) - 1)"];
"1000740" [label="(Literal,1)"];
"1000677" [label="(Literal,0x7fffffff)"];
"1000604" [label="(Call,low = 0)"];
"1000795" [label="(Call,value - mid)"];
"1000774" [label="(Identifier,value)"];
"1000787" [label="(Call,*correction = sign ? (mid - value) : (value - mid))"];
"1000601" [label="(Identifier,ones_count)"];
"1000418" [label="(Identifier,wps)"];
"1000344" [label="(Call,wps->wvbits.bc)"];
"1000776" [label="(Call,read_code (&wps->wvcbits, high - low))"];
"1000524" [label="(Call,ones_count + 1)"];
"1000423" [label="(Call,wps->wvbits.sr)"];
"1000349" [label="(Identifier,LIMIT_ONES)"];
"1000331" [label="(Call,ones_count = wps->w.holding_zero = 0)"];
"1000660" [label="(Call,(ones_count - 2) * GET_MED (2))"];
"1000661" [label="(Call,ones_count - 2)"];
"1000668" [label="(Call,low + GET_MED (2) - 1)"];
"1000425" [label="(Identifier,wps)"];
"1000602" [label="(Literal,0)"];
"1000733" [label="(Call,high + (low = mid) + 1)"];
"1000454" [label="(Identifier,LIMIT_ONES)"];
"1000356" [label="(Identifier,wps)"];
"1000743" [label="(Identifier,mid)"];
"1000775" [label="(Call,read_code (&wps->wvcbits, high - low) + low)"];
"1000730" [label="(Call,mid = (high + (low = mid) + 1) >> 1)"];
"1000370" [label="(Call,wps->wvbits.sr)"];
"1000502" [label="(Call,getbit (&wps->wvbits))"];
"1000441" [label="(Call,++ones_count)"];
"1000553" [label="(Identifier,ones_count)"];
"1000549" [label="(Call,ones_count & 1)"];
"1000555" [label="(Call,ones_count >> 1)"];
"1000401" [label="(Literal,8)"];
"1000669" [label="(Identifier,low)"];
"1000643" [label="(Call,ones_count == 2)"];
"1000444" [label="(Call,ones_count == (LIMIT_ONES + 1))"];
"1000769" [label="(Call,c->error_limit)"];
"1000772" [label="(Block,)"];
"1000638" [label="(Identifier,low)"];
"1000390" [label="(Identifier,wps)"];
"1000528" [label="(Call,wps->wvbits.sr)"];
"1000599" [label="(ControlStructure,if (ones_count == 0))"];
"1000535" [label="(Literal,1)"];
"1000807" [label="(Call,c->slow_level -= (c->slow_level + SLO) >> SLS)"];
"1000752" [label="(Identifier,low)"];
"1000445" [label="(Identifier,ones_count)"];
"1000658" [label="(Call,low += (ones_count - 2) * GET_MED (2))"];
"1000410" [label="(ControlStructure,if (ones_count >= LIMIT_ONES))"];
"1000735" [label="(Call,(low = mid) + 1)"];
"1000483" [label="(Call,ones_count = cbits)"];
"1000690" [label="(Call,(high + low + 1) >> 1)"];
"1000394" [label="(Call,sizeof (*(wps->wvbits.ptr)))"];
"1000664" [label="(Call,GET_MED (2))"];
"1000819" [label="(Call,c->slow_level)"];
"1000827" [label="(Identifier,~mid)"];
"1000570" [label="(Call,ones_count >>= 1)"];
"1000513" [label="(Call,ones_count += LIMIT_ONES)"];
"1000435" [label="(Literal,1)"];
"1000749" [label="(Identifier,mid)"];
"1000676" [label="(Identifier,low)"];
"1000753" [label="(Literal,1)"];
"1000702" [label="(Call,mid = read_code (&wps->wvbits, high - low) + low)"];
"1000572" [label="(Literal,1)"];
"1000666" [label="(Call,high = low + GET_MED (2) - 1)"];
"1000703" [label="(Identifier,mid)"];
"1000560" [label="(Block,)"];
"1000622" [label="(Call,ones_count == 1)"];
"1000543" [label="(Call,wps->w.holding_one = ones_count & 1)"];
"1000689" [label="(Identifier,mid)"];
"1000515" [label="(Identifier,LIMIT_ONES)"];
"1000763" [label="(Call,bs_is_open (&wps->wvcbits) && c->error_limit)"];
"1000637" [label="(Call,low += GET_MED (1))"];
"1000710" [label="(Call,high - low)"];
"1000790" [label="(Call,sign ? (mid - value) : (value - mid))"];
"1000542" [label="(Block,)"];
"1000527" [label="(Call,wps->wvbits.sr >>= ones_count + 1)"];
"1000218" [label="(Call,cbits < 33 && getbit (&wps->wvbits))"];
"1000826" [label="(Identifier,sign)"];
"1000721" [label="(Identifier,c)"];
"1000682" [label="(Call,low > high)"];
"1000706" [label="(Call,&wps->wvbits)"];
"1000648" [label="(Identifier,high)"];
"1000704" [label="(Call,read_code (&wps->wvbits, high - low) + low)"];
"1000443" [label="(ControlStructure,if (ones_count == (LIMIT_ONES + 1)))"];
"1000822" [label="(Call,wp_log2 (mid))"];
"1000544" [label="(Call,wps->w.holding_one)"];
"1000737" [label="(Identifier,low)"];
"1000767" [label="(Identifier,wps)"];
"1000431" [label="(Call,ones_count < (LIMIT_ONES + 1))"];
"1000686" [label="(Identifier,high)"];
"1000791" [label="(Identifier,sign)"];
"1000796" [label="(Identifier,value)"];
"1000705" [label="(Call,read_code (&wps->wvbits, high - low))"];
"1000472" [label="(Identifier,cbits)"];
"1000569" [label="(Literal,1)"];
"1000539" [label="(Identifier,wps)"];
"1000679" [label="(Identifier,high)"];
"1000695" [label="(Literal,1)"];
"1000728" [label="(Identifier,wps)"];
"1000756" [label="(Identifier,sign)"];
"1000697" [label="(ControlStructure,if (!c->error_limit))"];
"1000550" [label="(Identifier,ones_count)"];
"1000785" [label="(ControlStructure,if (correction))"];
"1000557" [label="(Literal,1)"];
"1000665" [label="(Literal,2)"];
"1000757" [label="(Call,getbit (&wps->wvbits))"];
"1000517" [label="(Block,)"];
"1000411" [label="(Call,ones_count >= LIMIT_ONES)"];
"1000428" [label="(Identifier,ones_count)"];
"1000430" [label="(Call,ones_count < (LIMIT_ONES + 1) && getbit (&wps->wvbits))"];
"1000439" [label="(Identifier,wps)"];
"1000719" [label="(Identifier,low)"];
"1000393" -> "1000387"  [label="AST: "];
"1000393" -> "1000401"  [label="CFG: "];
"1000394" -> "1000393"  [label="AST: "];
"1000401" -> "1000393"  [label="AST: "];
"1000387" -> "1000393"  [label="CFG: "];
"1000393" -> "1000387"  [label="DDG: 8"];
"1000387" -> "1000350"  [label="AST: "];
"1000388" -> "1000387"  [label="AST: "];
"1000346" -> "1000387"  [label="CFG: "];
"1000387" -> "1000829"  [label="DDG: sizeof (*(wps->wvbits.ptr)) * 8"];
"1000387" -> "1000343"  [label="DDG: wps->wvbits.bc"];
"1000375" -> "1000387"  [label="DDG: wps->wvbits.bc"];
"1000343" -> "1000342"  [label="AST: "];
"1000343" -> "1000349"  [label="CFG: "];
"1000344" -> "1000343"  [label="AST: "];
"1000349" -> "1000343"  [label="AST: "];
"1000356" -> "1000343"  [label="CFG: "];
"1000404" -> "1000343"  [label="CFG: "];
"1000343" -> "1000829"  [label="DDG: wps->wvbits.bc < LIMIT_ONES"];
"1000343" -> "1000375"  [label="DDG: wps->wvbits.bc"];
"1000343" -> "1000411"  [label="DDG: LIMIT_ONES"];
"1000343" -> "1000415"  [label="DDG: wps->wvbits.bc"];
"1000343" -> "1000518"  [label="DDG: wps->wvbits.bc"];
"1000375" -> "1000369"  [label="AST: "];
"1000375" -> "1000382"  [label="CFG: "];
"1000376" -> "1000375"  [label="AST: "];
"1000382" -> "1000375"  [label="AST: "];
"1000369" -> "1000375"  [label="CFG: "];
"1000375" -> "1000369"  [label="DDG: *(wps->wvbits.ptr)"];
"1000375" -> "1000369"  [label="DDG: wps->wvbits.bc"];
"1000369" -> "1000350"  [label="AST: "];
"1000370" -> "1000369"  [label="AST: "];
"1000390" -> "1000369"  [label="CFG: "];
"1000369" -> "1000829"  [label="DDG: wps->wvbits.sr |= *(wps->wvbits.ptr) << wps->wvbits.bc"];
"1000369" -> "1000829"  [label="DDG: *(wps->wvbits.ptr) << wps->wvbits.bc"];
"1000369" -> "1000422"  [label="DDG: wps->wvbits.sr"];
"1000369" -> "1000527"  [label="DDG: wps->wvbits.sr"];
"1000422" -> "1000414"  [label="AST: "];
"1000422" -> "1000428"  [label="CFG: "];
"1000423" -> "1000422"  [label="AST: "];
"1000428" -> "1000422"  [label="AST: "];
"1000432" -> "1000422"  [label="CFG: "];
"1000422" -> "1000829"  [label="DDG: wps->wvbits.sr"];
"1000422" -> "1000829"  [label="DDG: wps->wvbits.sr >>= ones_count"];
"1000411" -> "1000422"  [label="DDG: ones_count"];
"1000422" -> "1000431"  [label="DDG: ones_count"];
"1000431" -> "1000430"  [label="AST: "];
"1000431" -> "1000433"  [label="CFG: "];
"1000432" -> "1000431"  [label="AST: "];
"1000433" -> "1000431"  [label="AST: "];
"1000439" -> "1000431"  [label="CFG: "];
"1000430" -> "1000431"  [label="CFG: "];
"1000431" -> "1000430"  [label="DDG: ones_count"];
"1000431" -> "1000430"  [label="DDG: LIMIT_ONES + 1"];
"1000441" -> "1000431"  [label="DDG: ones_count"];
"1000411" -> "1000431"  [label="DDG: LIMIT_ONES"];
"1000431" -> "1000441"  [label="DDG: ones_count"];
"1000431" -> "1000444"  [label="DDG: ones_count"];
"1000430" -> "1000429"  [label="AST: "];
"1000430" -> "1000436"  [label="CFG: "];
"1000436" -> "1000430"  [label="AST: "];
"1000442" -> "1000430"  [label="CFG: "];
"1000445" -> "1000430"  [label="CFG: "];
"1000430" -> "1000829"  [label="DDG: getbit (&wps->wvbits)"];
"1000430" -> "1000829"  [label="DDG: ones_count < (LIMIT_ONES + 1)"];
"1000430" -> "1000829"  [label="DDG: ones_count < (LIMIT_ONES + 1) && getbit (&wps->wvbits)"];
"1000436" -> "1000430"  [label="DDG: &wps->wvbits"];
"1000218" -> "1000430"  [label="DDG: getbit (&wps->wvbits)"];
"1000266" -> "1000430"  [label="DDG: getbit (&wps->wvbits)"];
"1000430" -> "1000462"  [label="DDG: getbit (&wps->wvbits)"];
"1000462" -> "1000458"  [label="AST: "];
"1000462" -> "1000463"  [label="CFG: "];
"1000462" -> "1000466"  [label="CFG: "];
"1000463" -> "1000462"  [label="AST: "];
"1000466" -> "1000462"  [label="AST: "];
"1000472" -> "1000462"  [label="CFG: "];
"1000475" -> "1000462"  [label="CFG: "];
"1000462" -> "1000829"  [label="DDG: cbits < 33"];
"1000462" -> "1000829"  [label="DDG: cbits < 33 && getbit (&wps->wvbits)"];
"1000462" -> "1000829"  [label="DDG: getbit (&wps->wvbits)"];
"1000463" -> "1000462"  [label="DDG: cbits"];
"1000463" -> "1000462"  [label="DDG: 33"];
"1000466" -> "1000462"  [label="DDG: &wps->wvbits"];
"1000441" -> "1000429"  [label="AST: "];
"1000441" -> "1000442"  [label="CFG: "];
"1000442" -> "1000441"  [label="AST: "];
"1000432" -> "1000441"  [label="CFG: "];
"1000444" -> "1000443"  [label="AST: "];
"1000444" -> "1000446"  [label="CFG: "];
"1000445" -> "1000444"  [label="AST: "];
"1000446" -> "1000444"  [label="AST: "];
"1000450" -> "1000444"  [label="CFG: "];
"1000453" -> "1000444"  [label="CFG: "];
"1000444" -> "1000829"  [label="DDG: LIMIT_ONES + 1"];
"1000444" -> "1000829"  [label="DDG: ones_count"];
"1000444" -> "1000829"  [label="DDG: ones_count == (LIMIT_ONES + 1)"];
"1000411" -> "1000444"  [label="DDG: LIMIT_ONES"];
"1000444" -> "1000452"  [label="DDG: ones_count"];
"1000452" -> "1000451"  [label="AST: "];
"1000452" -> "1000454"  [label="CFG: "];
"1000453" -> "1000452"  [label="AST: "];
"1000454" -> "1000452"  [label="AST: "];
"1000460" -> "1000452"  [label="CFG: "];
"1000539" -> "1000452"  [label="CFG: "];
"1000452" -> "1000829"  [label="DDG: ones_count == LIMIT_ONES"];
"1000452" -> "1000829"  [label="DDG: ones_count"];
"1000452" -> "1000829"  [label="DDG: LIMIT_ONES"];
"1000411" -> "1000452"  [label="DDG: LIMIT_ONES"];
"1000452" -> "1000513"  [label="DDG: LIMIT_ONES"];
"1000452" -> "1000549"  [label="DDG: ones_count"];
"1000452" -> "1000567"  [label="DDG: ones_count"];
"1000513" -> "1000455"  [label="AST: "];
"1000513" -> "1000515"  [label="CFG: "];
"1000514" -> "1000513"  [label="AST: "];
"1000515" -> "1000513"  [label="AST: "];
"1000539" -> "1000513"  [label="CFG: "];
"1000513" -> "1000829"  [label="DDG: LIMIT_ONES"];
"1000510" -> "1000513"  [label="DDG: ones_count"];
"1000483" -> "1000513"  [label="DDG: ones_count"];
"1000513" -> "1000549"  [label="DDG: ones_count"];
"1000513" -> "1000567"  [label="DDG: ones_count"];
"1000549" -> "1000543"  [label="AST: "];
"1000549" -> "1000551"  [label="CFG: "];
"1000550" -> "1000549"  [label="AST: "];
"1000551" -> "1000549"  [label="AST: "];
"1000543" -> "1000549"  [label="CFG: "];
"1000549" -> "1000543"  [label="DDG: ones_count"];
"1000549" -> "1000543"  [label="DDG: 1"];
"1000411" -> "1000549"  [label="DDG: ones_count"];
"1000549" -> "1000555"  [label="DDG: ones_count"];
"1000543" -> "1000542"  [label="AST: "];
"1000544" -> "1000543"  [label="AST: "];
"1000553" -> "1000543"  [label="CFG: "];
"1000543" -> "1000829"  [label="DDG: wps->w.holding_one"];
"1000543" -> "1000829"  [label="DDG: ones_count & 1"];
"1000555" -> "1000554"  [label="AST: "];
"1000555" -> "1000557"  [label="CFG: "];
"1000556" -> "1000555"  [label="AST: "];
"1000557" -> "1000555"  [label="AST: "];
"1000558" -> "1000555"  [label="CFG: "];
"1000555" -> "1000552"  [label="DDG: ones_count"];
"1000555" -> "1000552"  [label="DDG: 1"];
"1000555" -> "1000554"  [label="DDG: ones_count"];
"1000555" -> "1000554"  [label="DDG: 1"];
"1000552" -> "1000542"  [label="AST: "];
"1000552" -> "1000554"  [label="CFG: "];
"1000553" -> "1000552"  [label="AST: "];
"1000554" -> "1000552"  [label="AST: "];
"1000576" -> "1000552"  [label="CFG: "];
"1000552" -> "1000829"  [label="DDG: (ones_count >> 1) + 1"];
"1000552" -> "1000600"  [label="DDG: ones_count"];
"1000600" -> "1000599"  [label="AST: "];
"1000600" -> "1000602"  [label="CFG: "];
"1000601" -> "1000600"  [label="AST: "];
"1000602" -> "1000600"  [label="AST: "];
"1000605" -> "1000600"  [label="CFG: "];
"1000617" -> "1000600"  [label="CFG: "];
"1000600" -> "1000829"  [label="DDG: ones_count == 0"];
"1000600" -> "1000829"  [label="DDG: ones_count"];
"1000570" -> "1000600"  [label="DDG: ones_count"];
"1000331" -> "1000600"  [label="DDG: ones_count"];
"1000600" -> "1000622"  [label="DDG: ones_count"];
"1000622" -> "1000621"  [label="AST: "];
"1000622" -> "1000624"  [label="CFG: "];
"1000623" -> "1000622"  [label="AST: "];
"1000624" -> "1000622"  [label="AST: "];
"1000627" -> "1000622"  [label="CFG: "];
"1000638" -> "1000622"  [label="CFG: "];
"1000622" -> "1000829"  [label="DDG: ones_count == 1"];
"1000622" -> "1000829"  [label="DDG: ones_count"];
"1000622" -> "1000643"  [label="DDG: ones_count"];
"1000643" -> "1000642"  [label="AST: "];
"1000643" -> "1000645"  [label="CFG: "];
"1000644" -> "1000643"  [label="AST: "];
"1000645" -> "1000643"  [label="AST: "];
"1000648" -> "1000643"  [label="CFG: "];
"1000659" -> "1000643"  [label="CFG: "];
"1000643" -> "1000829"  [label="DDG: ones_count == 2"];
"1000643" -> "1000829"  [label="DDG: ones_count"];
"1000643" -> "1000661"  [label="DDG: ones_count"];
"1000661" -> "1000660"  [label="AST: "];
"1000661" -> "1000663"  [label="CFG: "];
"1000662" -> "1000661"  [label="AST: "];
"1000663" -> "1000661"  [label="AST: "];
"1000665" -> "1000661"  [label="CFG: "];
"1000661" -> "1000829"  [label="DDG: ones_count"];
"1000661" -> "1000660"  [label="DDG: ones_count"];
"1000661" -> "1000660"  [label="DDG: 2"];
"1000660" -> "1000658"  [label="AST: "];
"1000660" -> "1000664"  [label="CFG: "];
"1000664" -> "1000660"  [label="AST: "];
"1000658" -> "1000660"  [label="CFG: "];
"1000660" -> "1000829"  [label="DDG: ones_count - 2"];
"1000660" -> "1000658"  [label="DDG: ones_count - 2"];
"1000660" -> "1000658"  [label="DDG: GET_MED (2)"];
"1000664" -> "1000660"  [label="DDG: 2"];
"1000658" -> "1000657"  [label="AST: "];
"1000659" -> "1000658"  [label="AST: "];
"1000667" -> "1000658"  [label="CFG: "];
"1000658" -> "1000829"  [label="DDG: (ones_count - 2) * GET_MED (2)"];
"1000637" -> "1000658"  [label="DDG: low"];
"1000658" -> "1000666"  [label="DDG: low"];
"1000658" -> "1000668"  [label="DDG: low"];
"1000658" -> "1000675"  [label="DDG: low"];
"1000666" -> "1000657"  [label="AST: "];
"1000666" -> "1000668"  [label="CFG: "];
"1000667" -> "1000666"  [label="AST: "];
"1000668" -> "1000666"  [label="AST: "];
"1000674" -> "1000666"  [label="CFG: "];
"1000666" -> "1000829"  [label="DDG: low + GET_MED (2) - 1"];
"1000670" -> "1000666"  [label="DDG: GET_MED (2)"];
"1000670" -> "1000666"  [label="DDG: 1"];
"1000666" -> "1000678"  [label="DDG: high"];
"1000678" -> "1000105"  [label="AST: "];
"1000678" -> "1000680"  [label="CFG: "];
"1000679" -> "1000678"  [label="AST: "];
"1000680" -> "1000678"  [label="AST: "];
"1000683" -> "1000678"  [label="CFG: "];
"1000678" -> "1000829"  [label="DDG: high &= 0x7fffffff"];
"1000626" -> "1000678"  [label="DDG: high"];
"1000607" -> "1000678"  [label="DDG: high"];
"1000647" -> "1000678"  [label="DDG: high"];
"1000678" -> "1000682"  [label="DDG: high"];
"1000682" -> "1000681"  [label="AST: "];
"1000682" -> "1000684"  [label="CFG: "];
"1000683" -> "1000682"  [label="AST: "];
"1000684" -> "1000682"  [label="AST: "];
"1000686" -> "1000682"  [label="CFG: "];
"1000689" -> "1000682"  [label="CFG: "];
"1000682" -> "1000829"  [label="DDG: low > high"];
"1000675" -> "1000682"  [label="DDG: low"];
"1000682" -> "1000685"  [label="DDG: low"];
"1000682" -> "1000690"  [label="DDG: high"];
"1000682" -> "1000690"  [label="DDG: low"];
"1000682" -> "1000691"  [label="DDG: high"];
"1000682" -> "1000691"  [label="DDG: low"];
"1000682" -> "1000693"  [label="DDG: low"];
"1000682" -> "1000710"  [label="DDG: high"];
"1000682" -> "1000710"  [label="DDG: low"];
"1000682" -> "1000717"  [label="DDG: high"];
"1000682" -> "1000717"  [label="DDG: low"];
"1000685" -> "1000681"  [label="AST: "];
"1000685" -> "1000687"  [label="CFG: "];
"1000686" -> "1000685"  [label="AST: "];
"1000687" -> "1000685"  [label="AST: "];
"1000689" -> "1000685"  [label="CFG: "];
"1000685" -> "1000690"  [label="DDG: high"];
"1000685" -> "1000691"  [label="DDG: high"];
"1000685" -> "1000710"  [label="DDG: high"];
"1000685" -> "1000717"  [label="DDG: high"];
"1000690" -> "1000688"  [label="AST: "];
"1000690" -> "1000696"  [label="CFG: "];
"1000691" -> "1000690"  [label="AST: "];
"1000696" -> "1000690"  [label="AST: "];
"1000688" -> "1000690"  [label="CFG: "];
"1000690" -> "1000829"  [label="DDG: high + low + 1"];
"1000690" -> "1000688"  [label="DDG: high + low + 1"];
"1000690" -> "1000688"  [label="DDG: 1"];
"1000688" -> "1000105"  [label="AST: "];
"1000689" -> "1000688"  [label="AST: "];
"1000700" -> "1000688"  [label="CFG: "];
"1000688" -> "1000829"  [label="DDG: (high + low + 1) >> 1"];
"1000688" -> "1000735"  [label="DDG: mid"];
"1000688" -> "1000736"  [label="DDG: mid"];
"1000688" -> "1000748"  [label="DDG: mid"];
"1000688" -> "1000792"  [label="DDG: mid"];
"1000688" -> "1000795"  [label="DDG: mid"];
"1000688" -> "1000822"  [label="DDG: mid"];
"1000688" -> "1000825"  [label="DDG: mid"];
"1000735" -> "1000733"  [label="AST: "];
"1000735" -> "1000739"  [label="CFG: "];
"1000736" -> "1000735"  [label="AST: "];
"1000739" -> "1000735"  [label="AST: "];
"1000733" -> "1000735"  [label="CFG: "];
"1000736" -> "1000735"  [label="DDG: low"];
"1000730" -> "1000735"  [label="DDG: mid"];
"1000742" -> "1000735"  [label="DDG: mid"];
"1000736" -> "1000738"  [label="CFG: "];
"1000737" -> "1000736"  [label="AST: "];
"1000738" -> "1000736"  [label="AST: "];
"1000739" -> "1000736"  [label="CFG: "];
"1000736" -> "1000717"  [label="DDG: low"];
"1000730" -> "1000736"  [label="DDG: mid"];
"1000742" -> "1000736"  [label="DDG: mid"];
"1000717" -> "1000716"  [label="AST: "];
"1000717" -> "1000719"  [label="CFG: "];
"1000718" -> "1000717"  [label="AST: "];
"1000719" -> "1000717"  [label="AST: "];
"1000721" -> "1000717"  [label="CFG: "];
"1000717" -> "1000829"  [label="DDG: low"];
"1000717" -> "1000829"  [label="DDG: high"];
"1000717" -> "1000716"  [label="DDG: high"];
"1000717" -> "1000716"  [label="DDG: low"];
"1000746" -> "1000717"  [label="DDG: high"];
"1000717" -> "1000732"  [label="DDG: high"];
"1000717" -> "1000733"  [label="DDG: high"];
"1000717" -> "1000744"  [label="DDG: low"];
"1000717" -> "1000745"  [label="DDG: low"];
"1000717" -> "1000751"  [label="DDG: low"];
"1000717" -> "1000781"  [label="DDG: high"];
"1000717" -> "1000781"  [label="DDG: low"];
"1000716" -> "1000715"  [label="AST: "];
"1000716" -> "1000720"  [label="CFG: "];
"1000720" -> "1000716"  [label="AST: "];
"1000728" -> "1000716"  [label="CFG: "];
"1000756" -> "1000716"  [label="CFG: "];
"1000716" -> "1000829"  [label="DDG: high - low > c->error_limit"];
"1000716" -> "1000829"  [label="DDG: high - low"];
"1000698" -> "1000716"  [label="DDG: c->error_limit"];
"1000716" -> "1000763"  [label="DDG: c->error_limit"];
"1000763" -> "1000762"  [label="AST: "];
"1000763" -> "1000764"  [label="CFG: "];
"1000763" -> "1000769"  [label="CFG: "];
"1000764" -> "1000763"  [label="AST: "];
"1000769" -> "1000763"  [label="AST: "];
"1000774" -> "1000763"  [label="CFG: "];
"1000802" -> "1000763"  [label="CFG: "];
"1000763" -> "1000829"  [label="DDG: c->error_limit"];
"1000763" -> "1000829"  [label="DDG: bs_is_open (&wps->wvcbits) && c->error_limit"];
"1000763" -> "1000829"  [label="DDG: bs_is_open (&wps->wvcbits)"];
"1000764" -> "1000763"  [label="DDG: &wps->wvcbits"];
"1000698" -> "1000763"  [label="DDG: c->error_limit"];
"1000732" -> "1000730"  [label="AST: "];
"1000732" -> "1000740"  [label="CFG: "];
"1000733" -> "1000732"  [label="AST: "];
"1000740" -> "1000732"  [label="AST: "];
"1000730" -> "1000732"  [label="CFG: "];
"1000732" -> "1000829"  [label="DDG: high + (low = mid) + 1"];
"1000732" -> "1000730"  [label="DDG: high + (low = mid) + 1"];
"1000732" -> "1000730"  [label="DDG: 1"];
"1000730" -> "1000724"  [label="AST: "];
"1000731" -> "1000730"  [label="AST: "];
"1000718" -> "1000730"  [label="CFG: "];
"1000730" -> "1000829"  [label="DDG: (high + (low = mid) + 1) >> 1"];
"1000730" -> "1000748"  [label="DDG: mid"];
"1000730" -> "1000792"  [label="DDG: mid"];
"1000730" -> "1000795"  [label="DDG: mid"];
"1000730" -> "1000822"  [label="DDG: mid"];
"1000730" -> "1000825"  [label="DDG: mid"];
"1000748" -> "1000746"  [label="AST: "];
"1000748" -> "1000750"  [label="CFG: "];
"1000749" -> "1000748"  [label="AST: "];
"1000750" -> "1000748"  [label="AST: "];
"1000746" -> "1000748"  [label="CFG: "];
"1000748" -> "1000745"  [label="DDG: mid"];
"1000748" -> "1000745"  [label="DDG: 1"];
"1000748" -> "1000746"  [label="DDG: mid"];
"1000748" -> "1000746"  [label="DDG: 1"];
"1000742" -> "1000748"  [label="DDG: mid"];
"1000745" -> "1000744"  [label="AST: "];
"1000745" -> "1000751"  [label="CFG: "];
"1000746" -> "1000745"  [label="AST: "];
"1000751" -> "1000745"  [label="AST: "];
"1000754" -> "1000745"  [label="CFG: "];
"1000745" -> "1000829"  [label="DDG: low + 1"];
"1000746" -> "1000745"  [label="DDG: high"];
"1000747" -> "1000746"  [label="AST: "];
"1000752" -> "1000746"  [label="CFG: "];
"1000746" -> "1000829"  [label="DDG: mid - 1"];
"1000792" -> "1000790"  [label="AST: "];
"1000792" -> "1000794"  [label="CFG: "];
"1000793" -> "1000792"  [label="AST: "];
"1000794" -> "1000792"  [label="AST: "];
"1000790" -> "1000792"  [label="CFG: "];
"1000792" -> "1000829"  [label="DDG: value"];
"1000792" -> "1000787"  [label="DDG: mid"];
"1000792" -> "1000787"  [label="DDG: value"];
"1000792" -> "1000790"  [label="DDG: mid"];
"1000792" -> "1000790"  [label="DDG: value"];
"1000742" -> "1000792"  [label="DDG: mid"];
"1000702" -> "1000792"  [label="DDG: mid"];
"1000773" -> "1000792"  [label="DDG: value"];
"1000792" -> "1000822"  [label="DDG: mid"];
"1000792" -> "1000825"  [label="DDG: mid"];
"1000787" -> "1000785"  [label="AST: "];
"1000787" -> "1000790"  [label="CFG: "];
"1000788" -> "1000787"  [label="AST: "];
"1000790" -> "1000787"  [label="AST: "];
"1000802" -> "1000787"  [label="CFG: "];
"1000787" -> "1000829"  [label="DDG: *correction"];
"1000787" -> "1000829"  [label="DDG: sign ? (mid - value) : (value - mid)"];
"1000795" -> "1000787"  [label="DDG: value"];
"1000795" -> "1000787"  [label="DDG: mid"];
"1000790" -> "1000795"  [label="CFG: "];
"1000791" -> "1000790"  [label="AST: "];
"1000795" -> "1000790"  [label="AST: "];
"1000790" -> "1000829"  [label="DDG: mid - value"];
"1000790" -> "1000829"  [label="DDG: value - mid"];
"1000795" -> "1000790"  [label="DDG: value"];
"1000795" -> "1000790"  [label="DDG: mid"];
"1000822" -> "1000818"  [label="AST: "];
"1000822" -> "1000823"  [label="CFG: "];
"1000823" -> "1000822"  [label="AST: "];
"1000818" -> "1000822"  [label="CFG: "];
"1000822" -> "1000818"  [label="DDG: mid"];
"1000742" -> "1000822"  [label="DDG: mid"];
"1000702" -> "1000822"  [label="DDG: mid"];
"1000795" -> "1000822"  [label="DDG: mid"];
"1000822" -> "1000825"  [label="DDG: mid"];
"1000818" -> "1000806"  [label="AST: "];
"1000819" -> "1000818"  [label="AST: "];
"1000826" -> "1000818"  [label="CFG: "];
"1000818" -> "1000829"  [label="DDG: c->slow_level"];
"1000818" -> "1000829"  [label="DDG: wp_log2 (mid)"];
"1000807" -> "1000818"  [label="DDG: c->slow_level"];
"1000825" -> "1000824"  [label="AST: "];
"1000825" -> "1000827"  [label="CFG: "];
"1000825" -> "1000828"  [label="CFG: "];
"1000826" -> "1000825"  [label="AST: "];
"1000827" -> "1000825"  [label="AST: "];
"1000828" -> "1000825"  [label="AST: "];
"1000824" -> "1000825"  [label="CFG: "];
"1000825" -> "1000829"  [label="DDG: ~mid"];
"1000825" -> "1000829"  [label="DDG: mid"];
"1000825" -> "1000829"  [label="DDG: sign"];
"1000825" -> "1000829"  [label="DDG: sign ? ~mid : mid"];
"1000825" -> "1000824"  [label="DDG: sign ? ~mid : mid"];
"1000742" -> "1000825"  [label="DDG: mid"];
"1000702" -> "1000825"  [label="DDG: mid"];
"1000795" -> "1000825"  [label="DDG: mid"];
"1000824" -> "1000105"  [label="AST: "];
"1000829" -> "1000824"  [label="CFG: "];
"1000824" -> "1000829"  [label="DDG: <RET>"];
"1000795" -> "1000797"  [label="CFG: "];
"1000796" -> "1000795"  [label="AST: "];
"1000797" -> "1000795"  [label="AST: "];
"1000795" -> "1000829"  [label="DDG: value"];
"1000773" -> "1000795"  [label="DDG: value"];
"1000742" -> "1000795"  [label="DDG: mid"];
"1000702" -> "1000795"  [label="DDG: mid"];
"1000734" -> "1000733"  [label="AST: "];
"1000740" -> "1000733"  [label="CFG: "];
"1000733" -> "1000829"  [label="DDG: (low = mid) + 1"];
"1000744" -> "1000742"  [label="AST: "];
"1000744" -> "1000754"  [label="CFG: "];
"1000754" -> "1000744"  [label="AST: "];
"1000742" -> "1000744"  [label="CFG: "];
"1000744" -> "1000829"  [label="DDG: (high = mid - 1) + low + 1"];
"1000744" -> "1000742"  [label="DDG: (high = mid - 1) + low + 1"];
"1000744" -> "1000742"  [label="DDG: 1"];
"1000742" -> "1000741"  [label="AST: "];
"1000743" -> "1000742"  [label="AST: "];
"1000718" -> "1000742"  [label="CFG: "];
"1000742" -> "1000829"  [label="DDG: ((high = mid - 1) + low + 1) >> 1"];
"1000751" -> "1000753"  [label="CFG: "];
"1000752" -> "1000751"  [label="AST: "];
"1000753" -> "1000751"  [label="AST: "];
"1000781" -> "1000776"  [label="AST: "];
"1000781" -> "1000783"  [label="CFG: "];
"1000782" -> "1000781"  [label="AST: "];
"1000783" -> "1000781"  [label="AST: "];
"1000776" -> "1000781"  [label="CFG: "];
"1000781" -> "1000829"  [label="DDG: high"];
"1000781" -> "1000773"  [label="DDG: low"];
"1000781" -> "1000776"  [label="DDG: high"];
"1000781" -> "1000776"  [label="DDG: low"];
"1000710" -> "1000781"  [label="DDG: high"];
"1000710" -> "1000781"  [label="DDG: low"];
"1000781" -> "1000775"  [label="DDG: low"];
"1000773" -> "1000772"  [label="AST: "];
"1000773" -> "1000775"  [label="CFG: "];
"1000774" -> "1000773"  [label="AST: "];
"1000775" -> "1000773"  [label="AST: "];
"1000786" -> "1000773"  [label="CFG: "];
"1000773" -> "1000829"  [label="DDG: value"];
"1000773" -> "1000829"  [label="DDG: read_code (&wps->wvcbits, high - low) + low"];
"1000776" -> "1000773"  [label="DDG: &wps->wvcbits"];
"1000776" -> "1000773"  [label="DDG: high - low"];
"1000776" -> "1000775"  [label="AST: "];
"1000777" -> "1000776"  [label="AST: "];
"1000784" -> "1000776"  [label="CFG: "];
"1000776" -> "1000829"  [label="DDG: high - low"];
"1000776" -> "1000829"  [label="DDG: &wps->wvcbits"];
"1000776" -> "1000775"  [label="DDG: &wps->wvcbits"];
"1000776" -> "1000775"  [label="DDG: high - low"];
"1000764" -> "1000776"  [label="DDG: &wps->wvcbits"];
"1000775" -> "1000784"  [label="CFG: "];
"1000784" -> "1000775"  [label="AST: "];
"1000775" -> "1000829"  [label="DDG: read_code (&wps->wvcbits, high - low)"];
"1000775" -> "1000829"  [label="DDG: low"];
"1000691" -> "1000693"  [label="CFG: "];
"1000692" -> "1000691"  [label="AST: "];
"1000693" -> "1000691"  [label="AST: "];
"1000696" -> "1000691"  [label="CFG: "];
"1000691" -> "1000829"  [label="DDG: low + 1"];
"1000710" -> "1000705"  [label="AST: "];
"1000710" -> "1000712"  [label="CFG: "];
"1000711" -> "1000710"  [label="AST: "];
"1000712" -> "1000710"  [label="AST: "];
"1000705" -> "1000710"  [label="CFG: "];
"1000710" -> "1000829"  [label="DDG: high"];
"1000710" -> "1000702"  [label="DDG: low"];
"1000710" -> "1000705"  [label="DDG: high"];
"1000710" -> "1000705"  [label="DDG: low"];
"1000710" -> "1000704"  [label="DDG: low"];
"1000702" -> "1000697"  [label="AST: "];
"1000702" -> "1000704"  [label="CFG: "];
"1000703" -> "1000702"  [label="AST: "];
"1000704" -> "1000702"  [label="AST: "];
"1000756" -> "1000702"  [label="CFG: "];
"1000702" -> "1000829"  [label="DDG: read_code (&wps->wvbits, high - low) + low"];
"1000705" -> "1000702"  [label="DDG: &wps->wvbits"];
"1000705" -> "1000702"  [label="DDG: high - low"];
"1000705" -> "1000704"  [label="AST: "];
"1000706" -> "1000705"  [label="AST: "];
"1000713" -> "1000705"  [label="CFG: "];
"1000705" -> "1000829"  [label="DDG: high - low"];
"1000705" -> "1000704"  [label="DDG: &wps->wvbits"];
"1000705" -> "1000704"  [label="DDG: high - low"];
"1000364" -> "1000705"  [label="DDG: &wps->wvbits"];
"1000222" -> "1000705"  [label="DDG: &wps->wvbits"];
"1000436" -> "1000705"  [label="DDG: &wps->wvbits"];
"1000502" -> "1000705"  [label="DDG: &wps->wvbits"];
"1000466" -> "1000705"  [label="DDG: &wps->wvbits"];
"1000266" -> "1000705"  [label="DDG: &wps->wvbits"];
"1000705" -> "1000757"  [label="DDG: &wps->wvbits"];
"1000704" -> "1000713"  [label="CFG: "];
"1000713" -> "1000704"  [label="AST: "];
"1000704" -> "1000829"  [label="DDG: read_code (&wps->wvbits, high - low)"];
"1000704" -> "1000829"  [label="DDG: low"];
"1000757" -> "1000755"  [label="AST: "];
"1000757" -> "1000758"  [label="CFG: "];
"1000758" -> "1000757"  [label="AST: "];
"1000755" -> "1000757"  [label="CFG: "];
"1000757" -> "1000829"  [label="DDG: &wps->wvbits"];
"1000757" -> "1000755"  [label="DDG: &wps->wvbits"];
"1000364" -> "1000757"  [label="DDG: &wps->wvbits"];
"1000222" -> "1000757"  [label="DDG: &wps->wvbits"];
"1000436" -> "1000757"  [label="DDG: &wps->wvbits"];
"1000502" -> "1000757"  [label="DDG: &wps->wvbits"];
"1000466" -> "1000757"  [label="DDG: &wps->wvbits"];
"1000266" -> "1000757"  [label="DDG: &wps->wvbits"];
"1000725" -> "1000757"  [label="DDG: &wps->wvbits"];
"1000755" -> "1000105"  [label="AST: "];
"1000756" -> "1000755"  [label="AST: "];
"1000767" -> "1000755"  [label="CFG: "];
"1000755" -> "1000829"  [label="DDG: getbit (&wps->wvbits)"];
"1000693" -> "1000695"  [label="CFG: "];
"1000694" -> "1000693"  [label="AST: "];
"1000695" -> "1000693"  [label="AST: "];
"1000668" -> "1000670"  [label="CFG: "];
"1000669" -> "1000668"  [label="AST: "];
"1000670" -> "1000668"  [label="AST: "];
"1000668" -> "1000829"  [label="DDG: GET_MED (2) - 1"];
"1000670" -> "1000668"  [label="DDG: GET_MED (2)"];
"1000670" -> "1000668"  [label="DDG: 1"];
"1000675" -> "1000105"  [label="AST: "];
"1000675" -> "1000677"  [label="CFG: "];
"1000676" -> "1000675"  [label="AST: "];
"1000677" -> "1000675"  [label="AST: "];
"1000679" -> "1000675"  [label="CFG: "];
"1000675" -> "1000829"  [label="DDG: low &= 0x7fffffff"];
"1000604" -> "1000675"  [label="DDG: low"];
"1000637" -> "1000675"  [label="DDG: low"];
"1000616" -> "1000675"  [label="DDG: low"];
"1000554" -> "1000558"  [label="CFG: "];
"1000558" -> "1000554"  [label="AST: "];
"1000554" -> "1000829"  [label="DDG: ones_count >> 1"];
"1000567" -> "1000561"  [label="AST: "];
"1000567" -> "1000569"  [label="CFG: "];
"1000568" -> "1000567"  [label="AST: "];
"1000569" -> "1000567"  [label="AST: "];
"1000561" -> "1000567"  [label="CFG: "];
"1000567" -> "1000561"  [label="DDG: ones_count"];
"1000567" -> "1000561"  [label="DDG: 1"];
"1000411" -> "1000567"  [label="DDG: ones_count"];
"1000567" -> "1000570"  [label="DDG: ones_count"];
"1000561" -> "1000560"  [label="AST: "];
"1000562" -> "1000561"  [label="AST: "];
"1000571" -> "1000561"  [label="CFG: "];
"1000561" -> "1000829"  [label="DDG: wps->w.holding_one"];
"1000561" -> "1000829"  [label="DDG: ones_count & 1"];
"1000570" -> "1000560"  [label="AST: "];
"1000570" -> "1000572"  [label="CFG: "];
"1000571" -> "1000570"  [label="AST: "];
"1000572" -> "1000570"  [label="AST: "];
"1000576" -> "1000570"  [label="CFG: "];
"1000570" -> "1000829"  [label="DDG: ones_count >>= 1"];
"1000527" -> "1000517"  [label="AST: "];
"1000527" -> "1000533"  [label="CFG: "];
"1000528" -> "1000527"  [label="AST: "];
"1000533" -> "1000527"  [label="AST: "];
"1000539" -> "1000527"  [label="CFG: "];
"1000527" -> "1000829"  [label="DDG: ones_count + 1"];
"1000527" -> "1000829"  [label="DDG: wps->wvbits.sr"];
"1000527" -> "1000829"  [label="DDG: wps->wvbits.sr >>= ones_count + 1"];
"1000411" -> "1000527"  [label="DDG: ones_count"];
"1000411" -> "1000410"  [label="AST: "];
"1000411" -> "1000413"  [label="CFG: "];
"1000412" -> "1000411"  [label="AST: "];
"1000413" -> "1000411"  [label="AST: "];
"1000418" -> "1000411"  [label="CFG: "];
"1000521" -> "1000411"  [label="CFG: "];
"1000411" -> "1000829"  [label="DDG: ones_count >= LIMIT_ONES"];
"1000411" -> "1000829"  [label="DDG: LIMIT_ONES"];
"1000411" -> "1000415"  [label="DDG: ones_count"];
"1000411" -> "1000433"  [label="DDG: LIMIT_ONES"];
"1000411" -> "1000446"  [label="DDG: LIMIT_ONES"];
"1000411" -> "1000518"  [label="DDG: ones_count"];
"1000411" -> "1000524"  [label="DDG: ones_count"];
"1000411" -> "1000533"  [label="DDG: ones_count"];
"1000415" -> "1000414"  [label="AST: "];
"1000415" -> "1000421"  [label="CFG: "];
"1000416" -> "1000415"  [label="AST: "];
"1000421" -> "1000415"  [label="AST: "];
"1000425" -> "1000415"  [label="CFG: "];
"1000415" -> "1000829"  [label="DDG: wps->wvbits.bc"];
"1000433" -> "1000435"  [label="CFG: "];
"1000434" -> "1000433"  [label="AST: "];
"1000435" -> "1000433"  [label="AST: "];
"1000446" -> "1000448"  [label="CFG: "];
"1000447" -> "1000446"  [label="AST: "];
"1000448" -> "1000446"  [label="AST: "];
"1000446" -> "1000829"  [label="DDG: LIMIT_ONES"];
"1000518" -> "1000517"  [label="AST: "];
"1000518" -> "1000524"  [label="CFG: "];
"1000519" -> "1000518"  [label="AST: "];
"1000524" -> "1000518"  [label="AST: "];
"1000530" -> "1000518"  [label="CFG: "];
"1000518" -> "1000829"  [label="DDG: wps->wvbits.bc"];
"1000524" -> "1000526"  [label="CFG: "];
"1000525" -> "1000524"  [label="AST: "];
"1000526" -> "1000524"  [label="AST: "];
"1000533" -> "1000535"  [label="CFG: "];
"1000534" -> "1000533"  [label="AST: "];
"1000535" -> "1000533"  [label="AST: "];
}
