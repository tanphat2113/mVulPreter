digraph "0_iperf_91f2fa59e8ed80dfbf400add0164ee0e508e412a_42@pointer" {
"1000646" [label="(Call,cJSON_free(entries[i]))"];
"1000522" [label="(Call,memset(entries,0,sizeof(char*)*numentries))"];
"1000501" [label="(Call,!entries)"];
"1000491" [label="(Call,entries=(char**)cJSON_malloc(numentries*sizeof(char*)))"];
"1000493" [label="(Call,(char**)cJSON_malloc(numentries*sizeof(char*)))"];
"1000495" [label="(Call,cJSON_malloc(numentries*sizeof(char*)))"];
"1000496" [label="(Call,numentries*sizeof(char*))"];
"1000167" [label="(Call,!numentries)"];
"1000159" [label="(Call,numentries++)"];
"1000145" [label="(Call,numentries=0)"];
"1000525" [label="(Call,sizeof(char*)*numentries)"];
"1000510" [label="(Call,numentries*sizeof(char*))"];
"1000652" [label="(Call,cJSON_free(entries))"];
"1000772" [label="(Call,cJSON_free(entries))"];
"1000166" [label="(ControlStructure,if (!numentries))"];
"1000509" [label="(Call,cJSON_malloc(numentries*sizeof(char*)))"];
"1000497" [label="(Identifier,numentries)"];
"1000242" [label="(Identifier,p)"];
"1000512" [label="(Call,sizeof(char*))"];
"1000490" [label="(Block,)"];
"1000500" [label="(ControlStructure,if (!entries))"];
"1000766" [label="(Call,cJSON_free(entries[i]))"];
"1000646" [label="(Call,cJSON_free(entries[i]))"];
"1000491" [label="(Call,entries=(char**)cJSON_malloc(numentries*sizeof(char*)))"];
"1000495" [label="(Call,cJSON_malloc(numentries*sizeof(char*)))"];
"1000526" [label="(Call,sizeof(char*))"];
"1000804" [label="(MethodReturn,static char *)"];
"1000522" [label="(Call,memset(entries,0,sizeof(char*)*numentries))"];
"1000530" [label="(Identifier,names)"];
"1000167" [label="(Call,!numentries)"];
"1000496" [label="(Call,numentries*sizeof(char*))"];
"1000652" [label="(Call,cJSON_free(entries))"];
"1000498" [label="(Call,sizeof(char*))"];
"1000653" [label="(Identifier,entries)"];
"1000518" [label="(Call,cJSON_free(entries))"];
"1000502" [label="(Identifier,entries)"];
"1000171" [label="(Identifier,p)"];
"1000729" [label="(Call,strcpy(ptr,entries[i]))"];
"1000565" [label="(Call,entries[i++]=ret=print_value(child,depth,fmt,0))"];
"1000504" [label="(Literal,0)"];
"1000113" [label="(Block,)"];
"1000160" [label="(Identifier,numentries)"];
"1000147" [label="(Literal,0)"];
"1000492" [label="(Identifier,entries)"];
"1000501" [label="(Call,!entries)"];
"1000146" [label="(Identifier,numentries)"];
"1000511" [label="(Identifier,numentries)"];
"1000632" [label="(Identifier,i)"];
"1000159" [label="(Call,numentries++)"];
"1000162" [label="(Identifier,child)"];
"1000506" [label="(Identifier,names)"];
"1000532" [label="(Call,sizeof(char*)*numentries)"];
"1000168" [label="(Identifier,numentries)"];
"1000623" [label="(Block,)"];
"1000655" [label="(Literal,0)"];
"1000493" [label="(Call,(char**)cJSON_malloc(numentries*sizeof(char*)))"];
"1000528" [label="(Identifier,numentries)"];
"1000525" [label="(Call,sizeof(char*)*numentries)"];
"1000642" [label="(ControlStructure,if (entries[i]))"];
"1000510" [label="(Call,numentries*sizeof(char*))"];
"1000647" [label="(Call,entries[i])"];
"1000524" [label="(Literal,0)"];
"1000145" [label="(Call,numentries=0)"];
"1000736" [label="(Call,strlen(entries[i]))"];
"1000150" [label="(Identifier,fail)"];
"1000158" [label="(Block,)"];
"1000523" [label="(Identifier,entries)"];
"1000646" -> "1000642"  [label="AST: "];
"1000646" -> "1000647"  [label="CFG: "];
"1000647" -> "1000646"  [label="AST: "];
"1000632" -> "1000646"  [label="CFG: "];
"1000646" -> "1000804"  [label="DDG: cJSON_free(entries[i])"];
"1000646" -> "1000804"  [label="DDG: entries[i]"];
"1000522" -> "1000646"  [label="DDG: entries"];
"1000646" -> "1000652"  [label="DDG: entries[i]"];
"1000522" -> "1000490"  [label="AST: "];
"1000522" -> "1000525"  [label="CFG: "];
"1000523" -> "1000522"  [label="AST: "];
"1000524" -> "1000522"  [label="AST: "];
"1000525" -> "1000522"  [label="AST: "];
"1000530" -> "1000522"  [label="CFG: "];
"1000522" -> "1000804"  [label="DDG: memset(entries,0,sizeof(char*)*numentries)"];
"1000501" -> "1000522"  [label="DDG: entries"];
"1000525" -> "1000522"  [label="DDG: numentries"];
"1000522" -> "1000652"  [label="DDG: entries"];
"1000522" -> "1000729"  [label="DDG: entries"];
"1000522" -> "1000736"  [label="DDG: entries"];
"1000522" -> "1000766"  [label="DDG: entries"];
"1000522" -> "1000772"  [label="DDG: entries"];
"1000501" -> "1000500"  [label="AST: "];
"1000501" -> "1000502"  [label="CFG: "];
"1000502" -> "1000501"  [label="AST: "];
"1000504" -> "1000501"  [label="CFG: "];
"1000506" -> "1000501"  [label="CFG: "];
"1000501" -> "1000804"  [label="DDG: entries"];
"1000501" -> "1000804"  [label="DDG: !entries"];
"1000491" -> "1000501"  [label="DDG: entries"];
"1000501" -> "1000518"  [label="DDG: entries"];
"1000491" -> "1000490"  [label="AST: "];
"1000491" -> "1000493"  [label="CFG: "];
"1000492" -> "1000491"  [label="AST: "];
"1000493" -> "1000491"  [label="AST: "];
"1000502" -> "1000491"  [label="CFG: "];
"1000491" -> "1000804"  [label="DDG: (char**)cJSON_malloc(numentries*sizeof(char*))"];
"1000493" -> "1000491"  [label="DDG: cJSON_malloc(numentries*sizeof(char*))"];
"1000493" -> "1000495"  [label="CFG: "];
"1000494" -> "1000493"  [label="AST: "];
"1000495" -> "1000493"  [label="AST: "];
"1000493" -> "1000804"  [label="DDG: cJSON_malloc(numentries*sizeof(char*))"];
"1000495" -> "1000493"  [label="DDG: numentries*sizeof(char*)"];
"1000495" -> "1000496"  [label="CFG: "];
"1000496" -> "1000495"  [label="AST: "];
"1000495" -> "1000804"  [label="DDG: numentries*sizeof(char*)"];
"1000496" -> "1000495"  [label="DDG: numentries"];
"1000496" -> "1000498"  [label="CFG: "];
"1000497" -> "1000496"  [label="AST: "];
"1000498" -> "1000496"  [label="AST: "];
"1000496" -> "1000804"  [label="DDG: numentries"];
"1000167" -> "1000496"  [label="DDG: numentries"];
"1000496" -> "1000510"  [label="DDG: numentries"];
"1000167" -> "1000166"  [label="AST: "];
"1000167" -> "1000168"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000171" -> "1000167"  [label="CFG: "];
"1000242" -> "1000167"  [label="CFG: "];
"1000167" -> "1000804"  [label="DDG: numentries"];
"1000167" -> "1000804"  [label="DDG: !numentries"];
"1000159" -> "1000167"  [label="DDG: numentries"];
"1000145" -> "1000167"  [label="DDG: numentries"];
"1000159" -> "1000158"  [label="AST: "];
"1000159" -> "1000160"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000162" -> "1000159"  [label="CFG: "];
"1000145" -> "1000159"  [label="DDG: numentries"];
"1000145" -> "1000113"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000150" -> "1000145"  [label="CFG: "];
"1000525" -> "1000528"  [label="CFG: "];
"1000526" -> "1000525"  [label="AST: "];
"1000528" -> "1000525"  [label="AST: "];
"1000510" -> "1000525"  [label="DDG: numentries"];
"1000525" -> "1000532"  [label="DDG: numentries"];
"1000510" -> "1000509"  [label="AST: "];
"1000510" -> "1000512"  [label="CFG: "];
"1000511" -> "1000510"  [label="AST: "];
"1000512" -> "1000510"  [label="AST: "];
"1000509" -> "1000510"  [label="CFG: "];
"1000510" -> "1000804"  [label="DDG: numentries"];
"1000510" -> "1000509"  [label="DDG: numentries"];
"1000652" -> "1000623"  [label="AST: "];
"1000652" -> "1000653"  [label="CFG: "];
"1000653" -> "1000652"  [label="AST: "];
"1000655" -> "1000652"  [label="CFG: "];
"1000652" -> "1000804"  [label="DDG: cJSON_free(entries)"];
"1000652" -> "1000804"  [label="DDG: entries"];
"1000565" -> "1000652"  [label="DDG: entries[i++]"];
}
