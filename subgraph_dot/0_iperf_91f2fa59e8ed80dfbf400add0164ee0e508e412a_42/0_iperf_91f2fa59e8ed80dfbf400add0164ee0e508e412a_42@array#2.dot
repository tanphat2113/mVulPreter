digraph "0_iperf_91f2fa59e8ed80dfbf400add0164ee0e508e412a_42@array" {
"1000638" [label="(Call,cJSON_free(names[i]))"];
"1000554" [label="(Call,names[i]=str=print_string_ptr(child->string,0))"];
"1000558" [label="(Call,str=print_string_ptr(child->string,0))"];
"1000560" [label="(Call,print_string_ptr(child->string,0))"];
"1000529" [label="(Call,memset(names,0,sizeof(char*)*numentries))"];
"1000515" [label="(Call,!names)"];
"1000505" [label="(Call,names=(char**)cJSON_malloc(numentries*sizeof(char*)))"];
"1000507" [label="(Call,(char**)cJSON_malloc(numentries*sizeof(char*)))"];
"1000509" [label="(Call,cJSON_malloc(numentries*sizeof(char*)))"];
"1000510" [label="(Call,numentries*sizeof(char*))"];
"1000496" [label="(Call,numentries*sizeof(char*))"];
"1000167" [label="(Call,!numentries)"];
"1000159" [label="(Call,numentries++)"];
"1000145" [label="(Call,numentries=0)"];
"1000532" [label="(Call,sizeof(char*)*numentries)"];
"1000525" [label="(Call,sizeof(char*)*numentries)"];
"1000650" [label="(Call,cJSON_free(names))"];
"1000166" [label="(ControlStructure,if (!numentries))"];
"1000509" [label="(Call,cJSON_malloc(numentries*sizeof(char*)))"];
"1000564" [label="(Literal,0)"];
"1000512" [label="(Call,sizeof(char*))"];
"1000497" [label="(Identifier,numentries)"];
"1000242" [label="(Identifier,p)"];
"1000559" [label="(Identifier,str)"];
"1000490" [label="(Block,)"];
"1000526" [label="(Call,sizeof(char*))"];
"1000495" [label="(Call,cJSON_malloc(numentries*sizeof(char*)))"];
"1000804" [label="(MethodReturn,static char *)"];
"1000522" [label="(Call,memset(entries,0,sizeof(char*)*numentries))"];
"1000530" [label="(Identifier,names)"];
"1000531" [label="(Literal,0)"];
"1000496" [label="(Call,numentries*sizeof(char*))"];
"1000167" [label="(Call,!numentries)"];
"1000628" [label="(Call,i<numentries)"];
"1000553" [label="(Block,)"];
"1000498" [label="(Call,sizeof(char*))"];
"1000653" [label="(Identifier,entries)"];
"1000171" [label="(Identifier,p)"];
"1000505" [label="(Call,names=(char**)cJSON_malloc(numentries*sizeof(char*)))"];
"1000529" [label="(Call,memset(names,0,sizeof(char*)*numentries))"];
"1000113" [label="(Block,)"];
"1000535" [label="(Identifier,numentries)"];
"1000519" [label="(Identifier,entries)"];
"1000650" [label="(Call,cJSON_free(names))"];
"1000160" [label="(Identifier,numentries)"];
"1000147" [label="(Literal,0)"];
"1000561" [label="(Call,child->string)"];
"1000146" [label="(Identifier,numentries)"];
"1000511" [label="(Identifier,numentries)"];
"1000638" [label="(Call,cJSON_free(names[i]))"];
"1000554" [label="(Call,names[i]=str=print_string_ptr(child->string,0))"];
"1000567" [label="(Identifier,entries)"];
"1000560" [label="(Call,print_string_ptr(child->string,0))"];
"1000506" [label="(Identifier,names)"];
"1000532" [label="(Call,sizeof(char*)*numentries)"];
"1000159" [label="(Call,numentries++)"];
"1000168" [label="(Identifier,numentries)"];
"1000162" [label="(Identifier,child)"];
"1000623" [label="(Block,)"];
"1000514" [label="(ControlStructure,if (!names))"];
"1000578" [label="(Call,str && ret)"];
"1000634" [label="(ControlStructure,if (names[i]))"];
"1000762" [label="(Call,cJSON_free(names[i]))"];
"1000537" [label="(Identifier,child)"];
"1000507" [label="(Call,(char**)cJSON_malloc(numentries*sizeof(char*)))"];
"1000525" [label="(Call,sizeof(char*)*numentries)"];
"1000533" [label="(Call,sizeof(char*))"];
"1000528" [label="(Identifier,numentries)"];
"1000704" [label="(Call,strlen(names[i]))"];
"1000639" [label="(Call,names[i])"];
"1000516" [label="(Identifier,names)"];
"1000510" [label="(Call,numentries*sizeof(char*))"];
"1000145" [label="(Call,numentries=0)"];
"1000651" [label="(Identifier,names)"];
"1000644" [label="(Identifier,entries)"];
"1000150" [label="(Identifier,fail)"];
"1000558" [label="(Call,str=print_string_ptr(child->string,0))"];
"1000708" [label="(Call,memcpy(ptr,names[i],tmplen))"];
"1000158" [label="(Block,)"];
"1000770" [label="(Call,cJSON_free(names))"];
"1000680" [label="(Call,i<numentries)"];
"1000523" [label="(Identifier,entries)"];
"1000515" [label="(Call,!names)"];
"1000555" [label="(Call,names[i])"];
"1000638" -> "1000634"  [label="AST: "];
"1000638" -> "1000639"  [label="CFG: "];
"1000639" -> "1000638"  [label="AST: "];
"1000644" -> "1000638"  [label="CFG: "];
"1000638" -> "1000804"  [label="DDG: cJSON_free(names[i])"];
"1000638" -> "1000804"  [label="DDG: names[i]"];
"1000554" -> "1000638"  [label="DDG: names[i]"];
"1000529" -> "1000638"  [label="DDG: names"];
"1000638" -> "1000650"  [label="DDG: names[i]"];
"1000554" -> "1000553"  [label="AST: "];
"1000554" -> "1000558"  [label="CFG: "];
"1000555" -> "1000554"  [label="AST: "];
"1000558" -> "1000554"  [label="AST: "];
"1000567" -> "1000554"  [label="CFG: "];
"1000554" -> "1000804"  [label="DDG: names[i]"];
"1000558" -> "1000554"  [label="DDG: str"];
"1000560" -> "1000554"  [label="DDG: child->string"];
"1000560" -> "1000554"  [label="DDG: 0"];
"1000554" -> "1000650"  [label="DDG: names[i]"];
"1000554" -> "1000704"  [label="DDG: names[i]"];
"1000554" -> "1000770"  [label="DDG: names[i]"];
"1000558" -> "1000560"  [label="CFG: "];
"1000559" -> "1000558"  [label="AST: "];
"1000560" -> "1000558"  [label="AST: "];
"1000558" -> "1000804"  [label="DDG: print_string_ptr(child->string,0)"];
"1000560" -> "1000558"  [label="DDG: child->string"];
"1000560" -> "1000558"  [label="DDG: 0"];
"1000558" -> "1000578"  [label="DDG: str"];
"1000560" -> "1000564"  [label="CFG: "];
"1000561" -> "1000560"  [label="AST: "];
"1000564" -> "1000560"  [label="AST: "];
"1000560" -> "1000804"  [label="DDG: child->string"];
"1000529" -> "1000490"  [label="AST: "];
"1000529" -> "1000532"  [label="CFG: "];
"1000530" -> "1000529"  [label="AST: "];
"1000531" -> "1000529"  [label="AST: "];
"1000532" -> "1000529"  [label="AST: "];
"1000537" -> "1000529"  [label="CFG: "];
"1000529" -> "1000804"  [label="DDG: memset(names,0,sizeof(char*)*numentries)"];
"1000529" -> "1000804"  [label="DDG: sizeof(char*)*numentries"];
"1000515" -> "1000529"  [label="DDG: names"];
"1000532" -> "1000529"  [label="DDG: numentries"];
"1000529" -> "1000650"  [label="DDG: names"];
"1000529" -> "1000704"  [label="DDG: names"];
"1000529" -> "1000708"  [label="DDG: names"];
"1000529" -> "1000762"  [label="DDG: names"];
"1000529" -> "1000770"  [label="DDG: names"];
"1000515" -> "1000514"  [label="AST: "];
"1000515" -> "1000516"  [label="CFG: "];
"1000516" -> "1000515"  [label="AST: "];
"1000519" -> "1000515"  [label="CFG: "];
"1000523" -> "1000515"  [label="CFG: "];
"1000515" -> "1000804"  [label="DDG: !names"];
"1000515" -> "1000804"  [label="DDG: names"];
"1000505" -> "1000515"  [label="DDG: names"];
"1000505" -> "1000490"  [label="AST: "];
"1000505" -> "1000507"  [label="CFG: "];
"1000506" -> "1000505"  [label="AST: "];
"1000507" -> "1000505"  [label="AST: "];
"1000516" -> "1000505"  [label="CFG: "];
"1000505" -> "1000804"  [label="DDG: (char**)cJSON_malloc(numentries*sizeof(char*))"];
"1000507" -> "1000505"  [label="DDG: cJSON_malloc(numentries*sizeof(char*))"];
"1000507" -> "1000509"  [label="CFG: "];
"1000508" -> "1000507"  [label="AST: "];
"1000509" -> "1000507"  [label="AST: "];
"1000507" -> "1000804"  [label="DDG: cJSON_malloc(numentries*sizeof(char*))"];
"1000509" -> "1000507"  [label="DDG: numentries*sizeof(char*)"];
"1000509" -> "1000510"  [label="CFG: "];
"1000510" -> "1000509"  [label="AST: "];
"1000509" -> "1000804"  [label="DDG: numentries*sizeof(char*)"];
"1000510" -> "1000509"  [label="DDG: numentries"];
"1000510" -> "1000512"  [label="CFG: "];
"1000511" -> "1000510"  [label="AST: "];
"1000512" -> "1000510"  [label="AST: "];
"1000510" -> "1000804"  [label="DDG: numentries"];
"1000496" -> "1000510"  [label="DDG: numentries"];
"1000510" -> "1000525"  [label="DDG: numentries"];
"1000496" -> "1000495"  [label="AST: "];
"1000496" -> "1000498"  [label="CFG: "];
"1000497" -> "1000496"  [label="AST: "];
"1000498" -> "1000496"  [label="AST: "];
"1000495" -> "1000496"  [label="CFG: "];
"1000496" -> "1000804"  [label="DDG: numentries"];
"1000496" -> "1000495"  [label="DDG: numentries"];
"1000167" -> "1000496"  [label="DDG: numentries"];
"1000167" -> "1000166"  [label="AST: "];
"1000167" -> "1000168"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000171" -> "1000167"  [label="CFG: "];
"1000242" -> "1000167"  [label="CFG: "];
"1000167" -> "1000804"  [label="DDG: numentries"];
"1000167" -> "1000804"  [label="DDG: !numentries"];
"1000159" -> "1000167"  [label="DDG: numentries"];
"1000145" -> "1000167"  [label="DDG: numentries"];
"1000159" -> "1000158"  [label="AST: "];
"1000159" -> "1000160"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000162" -> "1000159"  [label="CFG: "];
"1000145" -> "1000159"  [label="DDG: numentries"];
"1000145" -> "1000113"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000150" -> "1000145"  [label="CFG: "];
"1000532" -> "1000535"  [label="CFG: "];
"1000533" -> "1000532"  [label="AST: "];
"1000535" -> "1000532"  [label="AST: "];
"1000525" -> "1000532"  [label="DDG: numentries"];
"1000532" -> "1000628"  [label="DDG: numentries"];
"1000532" -> "1000680"  [label="DDG: numentries"];
"1000525" -> "1000522"  [label="AST: "];
"1000525" -> "1000528"  [label="CFG: "];
"1000526" -> "1000525"  [label="AST: "];
"1000528" -> "1000525"  [label="AST: "];
"1000522" -> "1000525"  [label="CFG: "];
"1000525" -> "1000522"  [label="DDG: numentries"];
"1000650" -> "1000623"  [label="AST: "];
"1000650" -> "1000651"  [label="CFG: "];
"1000651" -> "1000650"  [label="AST: "];
"1000653" -> "1000650"  [label="CFG: "];
"1000650" -> "1000804"  [label="DDG: cJSON_free(names)"];
"1000650" -> "1000804"  [label="DDG: names"];
}
