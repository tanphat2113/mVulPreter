digraph "0_Chrome_d0947db40187f4708c58e64cbd6013faf9eddeed_27@array" {
"1000604" [label="(Call,ctxt->input->cur[-1] == '\r')"];
"1000595" [label="(Call,(*ctxt->input->cur == '\n') && (ctxt->input->cur[-1] == '\r'))"];
"1000619" [label="(Call,ctxt->input->cur - (len + 1))"];
"1000615" [label="(Call,xmlDictLookup(ctxt->dict, ctxt->input->cur - (len + 1), len))"];
"1000614" [label="(Return,return(xmlDictLookup(ctxt->dict, ctxt->input->cur - (len + 1), len));)"];
"1000634" [label="(Call,ctxt->input->cur - len)"];
"1000630" [label="(Call,xmlDictLookup(ctxt->dict, ctxt->input->cur - len, len))"];
"1000629" [label="(Return,return(xmlDictLookup(ctxt->dict, ctxt->input->cur - len, len));)"];
"1000641" [label="(Identifier,len)"];
"1000640" [label="(Identifier,len)"];
"1000283" [label="(Call,len += l)"];
"1000613" [label="(Literal,'\r')"];
"1000634" [label="(Call,ctxt->input->cur - len)"];
"1000619" [label="(Call,ctxt->input->cur - (len + 1))"];
"1000614" [label="(Return,return(xmlDictLookup(ctxt->dict, ctxt->input->cur - (len + 1), len));)"];
"1000630" [label="(Call,xmlDictLookup(ctxt->dict, ctxt->input->cur - len, len))"];
"1000596" [label="(Call,*ctxt->input->cur == '\n')"];
"1000628" [label="(Identifier,len)"];
"1000517" [label="(Call,len += l)"];
"1000632" [label="(Identifier,ctxt)"];
"1000112" [label="(Block,)"];
"1000629" [label="(Return,return(xmlDictLookup(ctxt->dict, ctxt->input->cur - len, len));)"];
"1000479" [label="(Call,len += l)"];
"1000642" [label="(MethodReturn,RET)"];
"1000620" [label="(Call,ctxt->input->cur)"];
"1000605" [label="(Call,ctxt->input->cur[-1])"];
"1000617" [label="(Identifier,ctxt)"];
"1000604" [label="(Call,ctxt->input->cur[-1] == '\r')"];
"1000585" [label="(Call,len += l)"];
"1000616" [label="(Call,ctxt->dict)"];
"1000615" [label="(Call,xmlDictLookup(ctxt->dict, ctxt->input->cur - (len + 1), len))"];
"1000625" [label="(Call,len + 1)"];
"1000631" [label="(Call,ctxt->dict)"];
"1000594" [label="(ControlStructure,if ((*ctxt->input->cur == '\n') && (ctxt->input->cur[-1] == '\r')))"];
"1000635" [label="(Call,ctxt->input->cur)"];
"1000595" [label="(Call,(*ctxt->input->cur == '\n') && (ctxt->input->cur[-1] == '\r'))"];
"1000604" -> "1000595"  [label="AST: "];
"1000604" -> "1000613"  [label="CFG: "];
"1000605" -> "1000604"  [label="AST: "];
"1000613" -> "1000604"  [label="AST: "];
"1000595" -> "1000604"  [label="CFG: "];
"1000604" -> "1000642"  [label="DDG: ctxt->input->cur[-1]"];
"1000604" -> "1000595"  [label="DDG: ctxt->input->cur[-1]"];
"1000604" -> "1000595"  [label="DDG: '\r'"];
"1000604" -> "1000619"  [label="DDG: ctxt->input->cur[-1]"];
"1000604" -> "1000634"  [label="DDG: ctxt->input->cur[-1]"];
"1000595" -> "1000594"  [label="AST: "];
"1000595" -> "1000596"  [label="CFG: "];
"1000596" -> "1000595"  [label="AST: "];
"1000617" -> "1000595"  [label="CFG: "];
"1000632" -> "1000595"  [label="CFG: "];
"1000595" -> "1000642"  [label="DDG: (*ctxt->input->cur == '\n') && (ctxt->input->cur[-1] == '\r')"];
"1000595" -> "1000642"  [label="DDG: *ctxt->input->cur == '\n'"];
"1000595" -> "1000642"  [label="DDG: ctxt->input->cur[-1] == '\r'"];
"1000596" -> "1000595"  [label="DDG: *ctxt->input->cur"];
"1000596" -> "1000595"  [label="DDG: '\n'"];
"1000619" -> "1000615"  [label="AST: "];
"1000619" -> "1000625"  [label="CFG: "];
"1000620" -> "1000619"  [label="AST: "];
"1000625" -> "1000619"  [label="AST: "];
"1000628" -> "1000619"  [label="CFG: "];
"1000619" -> "1000642"  [label="DDG: len + 1"];
"1000619" -> "1000642"  [label="DDG: ctxt->input->cur"];
"1000619" -> "1000615"  [label="DDG: ctxt->input->cur"];
"1000619" -> "1000615"  [label="DDG: len + 1"];
"1000283" -> "1000619"  [label="DDG: len"];
"1000479" -> "1000619"  [label="DDG: len"];
"1000585" -> "1000619"  [label="DDG: len"];
"1000517" -> "1000619"  [label="DDG: len"];
"1000615" -> "1000614"  [label="AST: "];
"1000615" -> "1000628"  [label="CFG: "];
"1000616" -> "1000615"  [label="AST: "];
"1000628" -> "1000615"  [label="AST: "];
"1000614" -> "1000615"  [label="CFG: "];
"1000615" -> "1000642"  [label="DDG: ctxt->dict"];
"1000615" -> "1000642"  [label="DDG: len"];
"1000615" -> "1000642"  [label="DDG: xmlDictLookup(ctxt->dict, ctxt->input->cur - (len + 1), len)"];
"1000615" -> "1000642"  [label="DDG: ctxt->input->cur - (len + 1)"];
"1000615" -> "1000614"  [label="DDG: xmlDictLookup(ctxt->dict, ctxt->input->cur - (len + 1), len)"];
"1000283" -> "1000615"  [label="DDG: len"];
"1000479" -> "1000615"  [label="DDG: len"];
"1000585" -> "1000615"  [label="DDG: len"];
"1000517" -> "1000615"  [label="DDG: len"];
"1000614" -> "1000594"  [label="AST: "];
"1000642" -> "1000614"  [label="CFG: "];
"1000614" -> "1000642"  [label="DDG: <RET>"];
"1000634" -> "1000630"  [label="AST: "];
"1000634" -> "1000640"  [label="CFG: "];
"1000635" -> "1000634"  [label="AST: "];
"1000640" -> "1000634"  [label="AST: "];
"1000641" -> "1000634"  [label="CFG: "];
"1000634" -> "1000642"  [label="DDG: ctxt->input->cur"];
"1000634" -> "1000630"  [label="DDG: ctxt->input->cur"];
"1000634" -> "1000630"  [label="DDG: len"];
"1000283" -> "1000634"  [label="DDG: len"];
"1000479" -> "1000634"  [label="DDG: len"];
"1000585" -> "1000634"  [label="DDG: len"];
"1000517" -> "1000634"  [label="DDG: len"];
"1000630" -> "1000629"  [label="AST: "];
"1000630" -> "1000641"  [label="CFG: "];
"1000631" -> "1000630"  [label="AST: "];
"1000641" -> "1000630"  [label="AST: "];
"1000629" -> "1000630"  [label="CFG: "];
"1000630" -> "1000642"  [label="DDG: xmlDictLookup(ctxt->dict, ctxt->input->cur - len, len)"];
"1000630" -> "1000642"  [label="DDG: len"];
"1000630" -> "1000642"  [label="DDG: ctxt->dict"];
"1000630" -> "1000642"  [label="DDG: ctxt->input->cur - len"];
"1000630" -> "1000629"  [label="DDG: xmlDictLookup(ctxt->dict, ctxt->input->cur - len, len)"];
"1000629" -> "1000112"  [label="AST: "];
"1000642" -> "1000629"  [label="CFG: "];
"1000629" -> "1000642"  [label="DDG: <RET>"];
}
