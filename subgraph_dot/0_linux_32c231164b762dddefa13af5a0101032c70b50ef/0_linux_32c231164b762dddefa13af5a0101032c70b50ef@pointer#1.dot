digraph "0_linux_32c231164b762dddefa13af5a0101032c70b50ef@pointer" {
"1000170" [label="(Call,sock_flag(sk, SOCK_ZAPPED))"];
"1000166" [label="(Call,lock_sock(sk))"];
"1000120" [label="(Call,sock_net(sk))"];
"1000109" [label="(Call,inet_sk(sk))"];
"1000102" [label="(MethodParameterIn,struct sock *sk)"];
"1000169" [label="(Call,!sock_flag(sk, SOCK_ZAPPED))"];
"1000250" [label="(Call,sk_dst_reset(sk))"];
"1000254" [label="(Call,l2tp_ip_sk(sk))"];
"1000263" [label="(Call,sk_add_bind_node(sk, &l2tp_ip_bind_table))"];
"1000267" [label="(Call,sk_del_node_init(sk))"];
"1000275" [label="(Call,sock_reset_flag(sk, SOCK_ZAPPED))"];
"1000279" [label="(Call,release_sock(sk))"];
"1000120" [label="(Call,sock_net(sk))"];
"1000109" [label="(Call,inet_sk(sk))"];
"1000265" [label="(Call,&l2tp_ip_bind_table)"];
"1000250" [label="(Call,sk_dst_reset(sk))"];
"1000171" [label="(Identifier,sk)"];
"1000289" [label="(MethodReturn,static int)"];
"1000102" [label="(MethodParameterIn,struct sock *sk)"];
"1000121" [label="(Identifier,sk)"];
"1000253" [label="(Call,l2tp_ip_sk(sk)->conn_id)"];
"1000167" [label="(Identifier,sk)"];
"1000268" [label="(Identifier,sk)"];
"1000277" [label="(Identifier,SOCK_ZAPPED)"];
"1000254" [label="(Call,l2tp_ip_sk(sk))"];
"1000276" [label="(Identifier,sk)"];
"1000118" [label="(Call,*net = sock_net(sk))"];
"1000178" [label="(Identifier,sk)"];
"1000282" [label="(Identifier,ret)"];
"1000105" [label="(Block,)"];
"1000275" [label="(Call,sock_reset_flag(sk, SOCK_ZAPPED))"];
"1000107" [label="(Call,*inet = inet_sk(sk))"];
"1000170" [label="(Call,sock_flag(sk, SOCK_ZAPPED))"];
"1000255" [label="(Identifier,sk)"];
"1000264" [label="(Identifier,sk)"];
"1000166" [label="(Call,lock_sock(sk))"];
"1000278" [label="(JumpTarget,out:)"];
"1000267" [label="(Call,sk_del_node_init(sk))"];
"1000173" [label="(ControlStructure,goto out;)"];
"1000263" [label="(Call,sk_add_bind_node(sk, &l2tp_ip_bind_table))"];
"1000279" [label="(Call,release_sock(sk))"];
"1000256" [label="(FieldIdentifier,conn_id)"];
"1000271" [label="(Identifier,l2tp_ip_lock)"];
"1000169" [label="(Call,!sock_flag(sk, SOCK_ZAPPED))"];
"1000172" [label="(Identifier,SOCK_ZAPPED)"];
"1000280" [label="(Identifier,sk)"];
"1000251" [label="(Identifier,sk)"];
"1000168" [label="(ControlStructure,if (!sock_flag(sk, SOCK_ZAPPED)))"];
"1000110" [label="(Identifier,sk)"];
"1000170" -> "1000169"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000169" -> "1000170"  [label="CFG: "];
"1000170" -> "1000289"  [label="DDG: SOCK_ZAPPED"];
"1000170" -> "1000169"  [label="DDG: sk"];
"1000170" -> "1000169"  [label="DDG: SOCK_ZAPPED"];
"1000166" -> "1000170"  [label="DDG: sk"];
"1000102" -> "1000170"  [label="DDG: sk"];
"1000170" -> "1000250"  [label="DDG: sk"];
"1000170" -> "1000275"  [label="DDG: SOCK_ZAPPED"];
"1000170" -> "1000279"  [label="DDG: sk"];
"1000166" -> "1000105"  [label="AST: "];
"1000166" -> "1000167"  [label="CFG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000171" -> "1000166"  [label="CFG: "];
"1000166" -> "1000289"  [label="DDG: lock_sock(sk)"];
"1000120" -> "1000166"  [label="DDG: sk"];
"1000102" -> "1000166"  [label="DDG: sk"];
"1000120" -> "1000118"  [label="AST: "];
"1000120" -> "1000121"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000120" -> "1000289"  [label="DDG: sk"];
"1000120" -> "1000118"  [label="DDG: sk"];
"1000109" -> "1000120"  [label="DDG: sk"];
"1000102" -> "1000120"  [label="DDG: sk"];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000110"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000109" -> "1000107"  [label="DDG: sk"];
"1000102" -> "1000109"  [label="DDG: sk"];
"1000102" -> "1000101"  [label="AST: "];
"1000102" -> "1000289"  [label="DDG: sk"];
"1000102" -> "1000250"  [label="DDG: sk"];
"1000102" -> "1000254"  [label="DDG: sk"];
"1000102" -> "1000263"  [label="DDG: sk"];
"1000102" -> "1000267"  [label="DDG: sk"];
"1000102" -> "1000275"  [label="DDG: sk"];
"1000102" -> "1000279"  [label="DDG: sk"];
"1000169" -> "1000168"  [label="AST: "];
"1000173" -> "1000169"  [label="CFG: "];
"1000178" -> "1000169"  [label="CFG: "];
"1000169" -> "1000289"  [label="DDG: !sock_flag(sk, SOCK_ZAPPED)"];
"1000169" -> "1000289"  [label="DDG: sock_flag(sk, SOCK_ZAPPED)"];
"1000250" -> "1000105"  [label="AST: "];
"1000250" -> "1000251"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000255" -> "1000250"  [label="CFG: "];
"1000250" -> "1000289"  [label="DDG: sk_dst_reset(sk)"];
"1000250" -> "1000254"  [label="DDG: sk"];
"1000254" -> "1000253"  [label="AST: "];
"1000254" -> "1000255"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000256" -> "1000254"  [label="CFG: "];
"1000254" -> "1000263"  [label="DDG: sk"];
"1000263" -> "1000105"  [label="AST: "];
"1000263" -> "1000265"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000263"  [label="AST: "];
"1000268" -> "1000263"  [label="CFG: "];
"1000263" -> "1000289"  [label="DDG: &l2tp_ip_bind_table"];
"1000263" -> "1000289"  [label="DDG: sk_add_bind_node(sk, &l2tp_ip_bind_table)"];
"1000263" -> "1000267"  [label="DDG: sk"];
"1000267" -> "1000105"  [label="AST: "];
"1000267" -> "1000268"  [label="CFG: "];
"1000268" -> "1000267"  [label="AST: "];
"1000271" -> "1000267"  [label="CFG: "];
"1000267" -> "1000289"  [label="DDG: sk_del_node_init(sk)"];
"1000267" -> "1000275"  [label="DDG: sk"];
"1000275" -> "1000105"  [label="AST: "];
"1000275" -> "1000277"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000277" -> "1000275"  [label="AST: "];
"1000278" -> "1000275"  [label="CFG: "];
"1000275" -> "1000289"  [label="DDG: sock_reset_flag(sk, SOCK_ZAPPED)"];
"1000275" -> "1000289"  [label="DDG: SOCK_ZAPPED"];
"1000275" -> "1000279"  [label="DDG: sk"];
"1000279" -> "1000105"  [label="AST: "];
"1000279" -> "1000280"  [label="CFG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000282" -> "1000279"  [label="CFG: "];
"1000279" -> "1000289"  [label="DDG: sk"];
"1000279" -> "1000289"  [label="DDG: release_sock(sk)"];
}
