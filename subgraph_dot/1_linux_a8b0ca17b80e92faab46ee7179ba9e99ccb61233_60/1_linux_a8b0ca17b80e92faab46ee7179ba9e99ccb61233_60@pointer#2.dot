digraph "1_linux_a8b0ca17b80e92faab46ee7179ba9e99ccb61233_60@pointer" {
"1000104" [label="(MethodParameterIn,struct pt_regs *regs)"];
"1000107" [label="(Call,__perf_event_overflow(event, nmi, 1, data, regs))"];
"1000106" [label="(Return,return __perf_event_overflow(event, nmi, 1, data, regs);)"];
"1000107" [label="(Call,__perf_event_overflow(event, nmi, 1, data, regs))"];
"1000108" [label="(Identifier,event)"];
"1000110" [label="(Literal,1)"];
"1000112" [label="(Identifier,regs)"];
"1000109" [label="(Identifier,nmi)"];
"1000111" [label="(Identifier,data)"];
"1000103" [label="(MethodParameterIn,struct perf_sample_data *data)"];
"1000102" [label="(MethodParameterIn,int nmi)"];
"1000113" [label="(MethodReturn,int)"];
"1000104" [label="(MethodParameterIn,struct pt_regs *regs)"];
"1000106" [label="(Return,return __perf_event_overflow(event, nmi, 1, data, regs);)"];
"1000101" [label="(MethodParameterIn,struct perf_event *event)"];
"1000105" [label="(Block,)"];
"1000104" -> "1000100"  [label="AST: "];
"1000104" -> "1000113"  [label="DDG: regs"];
"1000104" -> "1000107"  [label="DDG: regs"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000112"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000110" -> "1000107"  [label="AST: "];
"1000111" -> "1000107"  [label="AST: "];
"1000112" -> "1000107"  [label="AST: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000107" -> "1000113"  [label="DDG: event"];
"1000107" -> "1000113"  [label="DDG: __perf_event_overflow(event, nmi, 1, data, regs)"];
"1000107" -> "1000113"  [label="DDG: data"];
"1000107" -> "1000113"  [label="DDG: nmi"];
"1000107" -> "1000113"  [label="DDG: regs"];
"1000107" -> "1000106"  [label="DDG: __perf_event_overflow(event, nmi, 1, data, regs)"];
"1000101" -> "1000107"  [label="DDG: event"];
"1000102" -> "1000107"  [label="DDG: nmi"];
"1000103" -> "1000107"  [label="DDG: data"];
"1000106" -> "1000105"  [label="AST: "];
"1000113" -> "1000106"  [label="CFG: "];
"1000106" -> "1000113"  [label="DDG: <RET>"];
}
