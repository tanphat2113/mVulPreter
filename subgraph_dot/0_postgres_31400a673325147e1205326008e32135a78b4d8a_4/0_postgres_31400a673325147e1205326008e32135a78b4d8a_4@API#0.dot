digraph "0_postgres_31400a673325147e1205326008e32135a78b4d8a_4@API" {
"1000162" [label="(Call,sizeof(Pairs) * nkeys)"];
"1000147" [label="(Call,nkeys == 0)"];
"1000161" [label="(Call,palloc(sizeof(Pairs) * nkeys))"];
"1000159" [label="(Call,out_pairs = palloc(sizeof(Pairs) * nkeys))"];
"1000266" [label="(Call,hstorePairs(out_pairs, out_count, bufsiz))"];
"1000264" [label="(Call,out = hstorePairs(out_pairs, out_count, bufsiz))"];
"1000270" [label="(Call,PG_RETURN_POINTER(out))"];
"1000173" [label="(Call,i < nkeys)"];
"1000176" [label="(Call,++i)"];
"1000262" [label="(Call,++out_count)"];
"1000177" [label="(Identifier,i)"];
"1000270" [label="(Call,PG_RETURN_POINTER(out))"];
"1000148" [label="(Identifier,nkeys)"];
"1000267" [label="(Identifier,out_pairs)"];
"1000159" [label="(Call,out_pairs = palloc(sizeof(Pairs) * nkeys))"];
"1000161" [label="(Call,palloc(sizeof(Pairs) * nkeys))"];
"1000167" [label="(Identifier,bufsiz)"];
"1000271" [label="(Identifier,out)"];
"1000181" [label="(Identifier,idx)"];
"1000170" [label="(Call,i = 0)"];
"1000147" [label="(Call,nkeys == 0)"];
"1000265" [label="(Identifier,out)"];
"1000169" [label="(ControlStructure,for (i = 0; i < nkeys; ++i))"];
"1000174" [label="(Identifier,i)"];
"1000152" [label="(Identifier,out)"];
"1000269" [label="(Identifier,bufsiz)"];
"1000146" [label="(ControlStructure,if (nkeys == 0))"];
"1000268" [label="(Identifier,out_count)"];
"1000176" [label="(Call,++i)"];
"1000149" [label="(Literal,0)"];
"1000163" [label="(Call,sizeof(Pairs))"];
"1000272" [label="(MethodReturn,RET)"];
"1000266" [label="(Call,hstorePairs(out_pairs, out_count, bufsiz))"];
"1000235" [label="(Call,bufsiz += (out_pairs[out_count].vallen = HS_VALLEN(entries, idx)))"];
"1000175" [label="(Identifier,nkeys)"];
"1000160" [label="(Identifier,out_pairs)"];
"1000173" [label="(Call,i < nkeys)"];
"1000165" [label="(Identifier,nkeys)"];
"1000166" [label="(Call,bufsiz = 0)"];
"1000162" [label="(Call,sizeof(Pairs) * nkeys)"];
"1000264" [label="(Call,out = hstorePairs(out_pairs, out_count, bufsiz))"];
"1000105" [label="(Block,)"];
"1000143" [label="(Call,out_count = 0)"];
"1000162" -> "1000161"  [label="AST: "];
"1000162" -> "1000165"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000165" -> "1000162"  [label="AST: "];
"1000161" -> "1000162"  [label="CFG: "];
"1000162" -> "1000161"  [label="DDG: nkeys"];
"1000147" -> "1000162"  [label="DDG: nkeys"];
"1000162" -> "1000173"  [label="DDG: nkeys"];
"1000147" -> "1000146"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000152" -> "1000147"  [label="CFG: "];
"1000160" -> "1000147"  [label="CFG: "];
"1000147" -> "1000272"  [label="DDG: nkeys == 0"];
"1000161" -> "1000159"  [label="AST: "];
"1000159" -> "1000161"  [label="CFG: "];
"1000161" -> "1000272"  [label="DDG: sizeof(Pairs) * nkeys"];
"1000161" -> "1000159"  [label="DDG: sizeof(Pairs) * nkeys"];
"1000159" -> "1000105"  [label="AST: "];
"1000160" -> "1000159"  [label="AST: "];
"1000167" -> "1000159"  [label="CFG: "];
"1000159" -> "1000272"  [label="DDG: palloc(sizeof(Pairs) * nkeys)"];
"1000159" -> "1000266"  [label="DDG: out_pairs"];
"1000266" -> "1000264"  [label="AST: "];
"1000266" -> "1000269"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="AST: "];
"1000269" -> "1000266"  [label="AST: "];
"1000264" -> "1000266"  [label="CFG: "];
"1000266" -> "1000272"  [label="DDG: bufsiz"];
"1000266" -> "1000272"  [label="DDG: out_count"];
"1000266" -> "1000272"  [label="DDG: out_pairs"];
"1000266" -> "1000264"  [label="DDG: out_pairs"];
"1000266" -> "1000264"  [label="DDG: out_count"];
"1000266" -> "1000264"  [label="DDG: bufsiz"];
"1000143" -> "1000266"  [label="DDG: out_count"];
"1000262" -> "1000266"  [label="DDG: out_count"];
"1000235" -> "1000266"  [label="DDG: bufsiz"];
"1000166" -> "1000266"  [label="DDG: bufsiz"];
"1000264" -> "1000105"  [label="AST: "];
"1000265" -> "1000264"  [label="AST: "];
"1000271" -> "1000264"  [label="CFG: "];
"1000264" -> "1000272"  [label="DDG: hstorePairs(out_pairs, out_count, bufsiz)"];
"1000264" -> "1000270"  [label="DDG: out"];
"1000270" -> "1000105"  [label="AST: "];
"1000270" -> "1000271"  [label="CFG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000272" -> "1000270"  [label="CFG: "];
"1000270" -> "1000272"  [label="DDG: PG_RETURN_POINTER(out)"];
"1000270" -> "1000272"  [label="DDG: out"];
"1000173" -> "1000169"  [label="AST: "];
"1000173" -> "1000175"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000175" -> "1000173"  [label="AST: "];
"1000181" -> "1000173"  [label="CFG: "];
"1000265" -> "1000173"  [label="CFG: "];
"1000173" -> "1000272"  [label="DDG: i < nkeys"];
"1000173" -> "1000272"  [label="DDG: i"];
"1000173" -> "1000272"  [label="DDG: nkeys"];
"1000170" -> "1000173"  [label="DDG: i"];
"1000176" -> "1000173"  [label="DDG: i"];
"1000173" -> "1000176"  [label="DDG: i"];
"1000176" -> "1000169"  [label="AST: "];
"1000176" -> "1000177"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000174" -> "1000176"  [label="CFG: "];
}
