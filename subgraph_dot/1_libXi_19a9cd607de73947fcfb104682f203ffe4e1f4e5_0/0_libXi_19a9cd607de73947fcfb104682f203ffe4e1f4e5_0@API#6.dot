digraph "0_libXi_19a9cd607de73947fcfb104682f203ffe4e1f4e5_0@API" {
"1000261" [label="(Call,sizeof(int) * r->num_valuators)"];
"1000246" [label="(Call,r->num_valuators >= (INT_MAX / (3 * sizeof(int))))"];
"1000250" [label="(Call,INT_MAX / (3 * sizeof(int)))"];
"1000252" [label="(Call,3 * sizeof(int))"];
"1000259" [label="(Call,3 * sizeof(int) * r->num_valuators)"];
"1000257" [label="(Call,val_size = 3 * sizeof(int) * r->num_valuators)"];
"1000268" [label="(Call,(sizeof(xDeviceResolutionState) + val_size) > nbytes)"];
"1000278" [label="(Call,sizeof(xDeviceAbsCalibState) > nbytes)"];
"1000269" [label="(Call,sizeof(xDeviceResolutionState) + val_size)"];
"1000373" [label="(Call,R->num_valuators = r->num_valuators)"];
"1000399" [label="(Call,R->min_resolutions = iptr + R->num_valuators)"];
"1000403" [label="(Call,iptr + R->num_valuators)"];
"1000414" [label="(Call,2 * R->num_valuators)"];
"1000408" [label="(Call,R->max_resolutions = iptr + (2 * R->num_valuators))"];
"1000412" [label="(Call,iptr + (2 * R->num_valuators))"];
"1000425" [label="(Call,3 * R->num_valuators)"];
"1000423" [label="(Call,i < (3 * R->num_valuators))"];
"1000430" [label="(Call,i++)"];
"1000268" [label="(Call,(sizeof(xDeviceResolutionState) + val_size) > nbytes)"];
"1000282" [label="(ControlStructure,goto out;)"];
"1000399" [label="(Call,R->min_resolutions = iptr + R->num_valuators)"];
"1000260" [label="(Literal,3)"];
"1000269" [label="(Call,sizeof(xDeviceResolutionState) + val_size)"];
"1000246" [label="(Call,r->num_valuators >= (INT_MAX / (3 * sizeof(int))))"];
"1000254" [label="(Call,sizeof(int))"];
"1000274" [label="(ControlStructure,break;)"];
"1000414" [label="(Call,2 * R->num_valuators)"];
"1000245" [label="(ControlStructure,if (r->num_valuators >= (INT_MAX / (3 * sizeof(int)))))"];
"1000261" [label="(Call,sizeof(int) * r->num_valuators)"];
"1000380" [label="(Call,iptr = (int *)(R + 1))"];
"1000415" [label="(Literal,2)"];
"1000416" [label="(Call,R->num_valuators)"];
"1000275" [label="(JumpTarget,case DEVICE_ABS_CALIB:)"];
"1000256" [label="(ControlStructure,goto out;)"];
"1000278" [label="(Call,sizeof(xDeviceAbsCalibState) > nbytes)"];
"1000253" [label="(Literal,3)"];
"1000426" [label="(Literal,3)"];
"1000373" [label="(Call,R->num_valuators = r->num_valuators)"];
"1000236" [label="(Block,)"];
"1000409" [label="(Call,R->max_resolutions)"];
"1000271" [label="(Identifier,xDeviceResolutionState)"];
"1000224" [label="(Call,_XRead(dpy, (char *)d, nbytes))"];
"1000346" [label="(Block,)"];
"1000413" [label="(Identifier,iptr)"];
"1000270" [label="(Call,sizeof(xDeviceResolutionState))"];
"1000277" [label="(ControlStructure,if (sizeof(xDeviceAbsCalibState) > nbytes))"];
"1000419" [label="(ControlStructure,for (i = 0; i < (3 * R->num_valuators); i++))"];
"1000257" [label="(Call,val_size = 3 * sizeof(int) * r->num_valuators)"];
"1000259" [label="(Call,3 * sizeof(int) * r->num_valuators)"];
"1000252" [label="(Call,3 * sizeof(int))"];
"1000408" [label="(Call,R->max_resolutions = iptr + (2 * R->num_valuators))"];
"1000377" [label="(Call,r->num_valuators)"];
"1000427" [label="(Call,R->num_valuators)"];
"1000284" [label="(Identifier,size)"];
"1000262" [label="(Call,sizeof(int))"];
"1000423" [label="(Call,i < (3 * R->num_valuators))"];
"1000405" [label="(Call,R->num_valuators)"];
"1000267" [label="(ControlStructure,if ((sizeof(xDeviceResolutionState) + val_size) > nbytes))"];
"1000435" [label="(Identifier,iptr)"];
"1000374" [label="(Call,R->num_valuators)"];
"1000410" [label="(Identifier,R)"];
"1000404" [label="(Identifier,iptr)"];
"1000281" [label="(Identifier,nbytes)"];
"1000272" [label="(Identifier,val_size)"];
"1000425" [label="(Call,3 * R->num_valuators)"];
"1000250" [label="(Call,INT_MAX / (3 * sizeof(int)))"];
"1000439" [label="(ControlStructure,break;)"];
"1000424" [label="(Identifier,i)"];
"1000264" [label="(Call,r->num_valuators)"];
"1000258" [label="(Identifier,val_size)"];
"1000381" [label="(Identifier,iptr)"];
"1000412" [label="(Call,iptr + (2 * R->num_valuators))"];
"1000420" [label="(Call,i = 0)"];
"1000273" [label="(Identifier,nbytes)"];
"1000431" [label="(Identifier,i)"];
"1000247" [label="(Call,r->num_valuators)"];
"1000665" [label="(MethodReturn,RET)"];
"1000400" [label="(Call,R->min_resolutions)"];
"1000279" [label="(Call,sizeof(xDeviceAbsCalibState))"];
"1000430" [label="(Call,i++)"];
"1000251" [label="(Identifier,INT_MAX)"];
"1000421" [label="(Identifier,i)"];
"1000403" [label="(Call,iptr + R->num_valuators)"];
"1000261" -> "1000259"  [label="AST: "];
"1000261" -> "1000264"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000264" -> "1000261"  [label="AST: "];
"1000259" -> "1000261"  [label="CFG: "];
"1000261" -> "1000665"  [label="DDG: r->num_valuators"];
"1000261" -> "1000259"  [label="DDG: r->num_valuators"];
"1000246" -> "1000261"  [label="DDG: r->num_valuators"];
"1000261" -> "1000373"  [label="DDG: r->num_valuators"];
"1000246" -> "1000245"  [label="AST: "];
"1000246" -> "1000250"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000250" -> "1000246"  [label="AST: "];
"1000256" -> "1000246"  [label="CFG: "];
"1000258" -> "1000246"  [label="CFG: "];
"1000246" -> "1000665"  [label="DDG: INT_MAX / (3 * sizeof(int))"];
"1000246" -> "1000665"  [label="DDG: r->num_valuators >= (INT_MAX / (3 * sizeof(int)))"];
"1000250" -> "1000246"  [label="DDG: INT_MAX"];
"1000250" -> "1000246"  [label="DDG: 3 * sizeof(int)"];
"1000250" -> "1000252"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000252" -> "1000250"  [label="AST: "];
"1000250" -> "1000665"  [label="DDG: INT_MAX"];
"1000250" -> "1000665"  [label="DDG: 3 * sizeof(int)"];
"1000252" -> "1000250"  [label="DDG: 3"];
"1000252" -> "1000254"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000254" -> "1000252"  [label="AST: "];
"1000259" -> "1000257"  [label="AST: "];
"1000260" -> "1000259"  [label="AST: "];
"1000257" -> "1000259"  [label="CFG: "];
"1000259" -> "1000665"  [label="DDG: sizeof(int) * r->num_valuators"];
"1000259" -> "1000257"  [label="DDG: 3"];
"1000259" -> "1000257"  [label="DDG: sizeof(int) * r->num_valuators"];
"1000257" -> "1000236"  [label="AST: "];
"1000258" -> "1000257"  [label="AST: "];
"1000271" -> "1000257"  [label="CFG: "];
"1000257" -> "1000665"  [label="DDG: 3 * sizeof(int) * r->num_valuators"];
"1000257" -> "1000268"  [label="DDG: val_size"];
"1000257" -> "1000269"  [label="DDG: val_size"];
"1000268" -> "1000267"  [label="AST: "];
"1000268" -> "1000273"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000273" -> "1000268"  [label="AST: "];
"1000274" -> "1000268"  [label="CFG: "];
"1000275" -> "1000268"  [label="CFG: "];
"1000268" -> "1000665"  [label="DDG: sizeof(xDeviceResolutionState) + val_size"];
"1000268" -> "1000665"  [label="DDG: (sizeof(xDeviceResolutionState) + val_size) > nbytes"];
"1000268" -> "1000665"  [label="DDG: nbytes"];
"1000224" -> "1000268"  [label="DDG: nbytes"];
"1000268" -> "1000278"  [label="DDG: nbytes"];
"1000278" -> "1000277"  [label="AST: "];
"1000278" -> "1000281"  [label="CFG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000281" -> "1000278"  [label="AST: "];
"1000282" -> "1000278"  [label="CFG: "];
"1000284" -> "1000278"  [label="CFG: "];
"1000278" -> "1000665"  [label="DDG: sizeof(xDeviceAbsCalibState) > nbytes"];
"1000278" -> "1000665"  [label="DDG: nbytes"];
"1000224" -> "1000278"  [label="DDG: nbytes"];
"1000269" -> "1000272"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000272" -> "1000269"  [label="AST: "];
"1000273" -> "1000269"  [label="CFG: "];
"1000269" -> "1000665"  [label="DDG: val_size"];
"1000373" -> "1000346"  [label="AST: "];
"1000373" -> "1000377"  [label="CFG: "];
"1000374" -> "1000373"  [label="AST: "];
"1000377" -> "1000373"  [label="AST: "];
"1000381" -> "1000373"  [label="CFG: "];
"1000373" -> "1000665"  [label="DDG: r->num_valuators"];
"1000373" -> "1000399"  [label="DDG: R->num_valuators"];
"1000373" -> "1000403"  [label="DDG: R->num_valuators"];
"1000373" -> "1000414"  [label="DDG: R->num_valuators"];
"1000399" -> "1000346"  [label="AST: "];
"1000399" -> "1000403"  [label="CFG: "];
"1000400" -> "1000399"  [label="AST: "];
"1000403" -> "1000399"  [label="AST: "];
"1000410" -> "1000399"  [label="CFG: "];
"1000399" -> "1000665"  [label="DDG: iptr + R->num_valuators"];
"1000399" -> "1000665"  [label="DDG: R->min_resolutions"];
"1000380" -> "1000399"  [label="DDG: iptr"];
"1000403" -> "1000405"  [label="CFG: "];
"1000404" -> "1000403"  [label="AST: "];
"1000405" -> "1000403"  [label="AST: "];
"1000380" -> "1000403"  [label="DDG: iptr"];
"1000414" -> "1000412"  [label="AST: "];
"1000414" -> "1000416"  [label="CFG: "];
"1000415" -> "1000414"  [label="AST: "];
"1000416" -> "1000414"  [label="AST: "];
"1000412" -> "1000414"  [label="CFG: "];
"1000414" -> "1000408"  [label="DDG: 2"];
"1000414" -> "1000408"  [label="DDG: R->num_valuators"];
"1000414" -> "1000412"  [label="DDG: 2"];
"1000414" -> "1000412"  [label="DDG: R->num_valuators"];
"1000414" -> "1000425"  [label="DDG: R->num_valuators"];
"1000408" -> "1000346"  [label="AST: "];
"1000408" -> "1000412"  [label="CFG: "];
"1000409" -> "1000408"  [label="AST: "];
"1000412" -> "1000408"  [label="AST: "];
"1000421" -> "1000408"  [label="CFG: "];
"1000408" -> "1000665"  [label="DDG: R->max_resolutions"];
"1000408" -> "1000665"  [label="DDG: iptr + (2 * R->num_valuators)"];
"1000380" -> "1000408"  [label="DDG: iptr"];
"1000413" -> "1000412"  [label="AST: "];
"1000412" -> "1000665"  [label="DDG: 2 * R->num_valuators"];
"1000412" -> "1000665"  [label="DDG: iptr"];
"1000380" -> "1000412"  [label="DDG: iptr"];
"1000425" -> "1000423"  [label="AST: "];
"1000425" -> "1000427"  [label="CFG: "];
"1000426" -> "1000425"  [label="AST: "];
"1000427" -> "1000425"  [label="AST: "];
"1000423" -> "1000425"  [label="CFG: "];
"1000425" -> "1000665"  [label="DDG: R->num_valuators"];
"1000425" -> "1000423"  [label="DDG: 3"];
"1000425" -> "1000423"  [label="DDG: R->num_valuators"];
"1000423" -> "1000419"  [label="AST: "];
"1000424" -> "1000423"  [label="AST: "];
"1000435" -> "1000423"  [label="CFG: "];
"1000439" -> "1000423"  [label="CFG: "];
"1000423" -> "1000665"  [label="DDG: i < (3 * R->num_valuators)"];
"1000423" -> "1000665"  [label="DDG: 3 * R->num_valuators"];
"1000423" -> "1000665"  [label="DDG: i"];
"1000430" -> "1000423"  [label="DDG: i"];
"1000420" -> "1000423"  [label="DDG: i"];
"1000423" -> "1000430"  [label="DDG: i"];
"1000430" -> "1000419"  [label="AST: "];
"1000430" -> "1000431"  [label="CFG: "];
"1000431" -> "1000430"  [label="AST: "];
"1000424" -> "1000430"  [label="CFG: "];
}
