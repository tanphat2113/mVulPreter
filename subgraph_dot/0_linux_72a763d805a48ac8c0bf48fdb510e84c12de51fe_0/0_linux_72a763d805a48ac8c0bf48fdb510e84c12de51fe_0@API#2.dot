digraph "0_linux_72a763d805a48ac8c0bf48fdb510e84c12de51fe_0@API" {
"1000278" [label="(Call,ctx->enc ?\n\t\t\t\t\tcrypto_ablkcipher_encrypt(&ctx->req) :\n\t\t\t\t\tcrypto_ablkcipher_decrypt(&ctx->req))"];
"1000282" [label="(Call,crypto_ablkcipher_encrypt(&ctx->req))"];
"1000260" [label="(Call,ablkcipher_request_set_crypt(&ctx->req, sg,\n\t\t\t\t\t\t     ctx->rsgl.sg, used,\n\t\t\t\t\t\t     ctx->iv))"];
"1000128" [label="(Call,crypto_ablkcipher_reqtfm(\n\t\t&ctx->req))"];
"1000287" [label="(Call,crypto_ablkcipher_decrypt(&ctx->req))"];
"1000200" [label="(Call,sg++)"];
"1000190" [label="(Call,sg = sgl->sg)"];
"1000257" [label="(Call,!used)"];
"1000247" [label="(Call,used -= used % bs)"];
"1000249" [label="(Call,used % bs)"];
"1000242" [label="(Call,used < ctx->used)"];
"1000219" [label="(Call,used = af_alg_make_sg(&ctx->rsgl, from, used, 1))"];
"1000221" [label="(Call,af_alg_make_sg(&ctx->rsgl, from, used, 1))"];
"1000297" [label="(Call,af_alg_free_sg(&ctx->rsgl))"];
"1000308" [label="(Call,from += used)"];
"1000182" [label="(Call,*from = iov->iov_base)"];
"1000208" [label="(Call,!used)"];
"1000202" [label="(Call,used = ctx->used)"];
"1000125" [label="(Call,bs = crypto_ablkcipher_blocksize(crypto_ablkcipher_reqtfm(\n\t\t&ctx->req)))"];
"1000127" [label="(Call,crypto_ablkcipher_blocksize(crypto_ablkcipher_reqtfm(\n\t\t&ctx->req)))"];
"1000288" [label="(Call,&ctx->req)"];
"1000271" [label="(Identifier,used)"];
"1000201" [label="(Identifier,sg)"];
"1000266" [label="(Call,ctx->rsgl.sg)"];
"1000298" [label="(Call,&ctx->rsgl)"];
"1000263" [label="(Identifier,ctx)"];
"1000221" [label="(Call,af_alg_make_sg(&ctx->rsgl, from, used, 1))"];
"1000184" [label="(Call,iov->iov_base)"];
"1000279" [label="(Call,ctx->enc)"];
"1000227" [label="(Identifier,used)"];
"1000228" [label="(Literal,1)"];
"1000226" [label="(Identifier,from)"];
"1000260" [label="(Call,ablkcipher_request_set_crypt(&ctx->req, sg,\n\t\t\t\t\t\t     ctx->rsgl.sg, used,\n\t\t\t\t\t\t     ctx->iv))"];
"1000219" [label="(Call,used = af_alg_make_sg(&ctx->rsgl, from, used, 1))"];
"1000125" [label="(Call,bs = crypto_ablkcipher_blocksize(crypto_ablkcipher_reqtfm(\n\t\t&ctx->req)))"];
"1000303" [label="(Identifier,err)"];
"1000312" [label="(Identifier,seglen)"];
"1000283" [label="(Call,&ctx->req)"];
"1000229" [label="(Call,err = used)"];
"1000174" [label="(Block,)"];
"1000309" [label="(Identifier,from)"];
"1000204" [label="(Call,ctx->used)"];
"1000272" [label="(Call,ctx->iv)"];
"1000243" [label="(Identifier,used)"];
"1000230" [label="(Identifier,err)"];
"1000311" [label="(Call,seglen -= used)"];
"1000314" [label="(Call,skcipher_pull_sgl(sk, used))"];
"1000326" [label="(MethodReturn,static int)"];
"1000308" [label="(Call,from += used)"];
"1000127" [label="(Call,crypto_ablkcipher_blocksize(crypto_ablkcipher_reqtfm(\n\t\t&ctx->req)))"];
"1000248" [label="(Identifier,used)"];
"1000297" [label="(Call,af_alg_free_sg(&ctx->rsgl))"];
"1000188" [label="(Identifier,seglen)"];
"1000261" [label="(Call,&ctx->req)"];
"1000189" [label="(Block,)"];
"1000191" [label="(Identifier,sg)"];
"1000212" [label="(Identifier,err)"];
"1000305" [label="(Call,copied += used)"];
"1000209" [label="(Identifier,used)"];
"1000247" [label="(Call,used -= used % bs)"];
"1000276" [label="(Identifier,err)"];
"1000200" [label="(Call,sg++)"];
"1000287" [label="(Call,crypto_ablkcipher_decrypt(&ctx->req))"];
"1000195" [label="(ControlStructure,while (!sg->length))"];
"1000282" [label="(Call,crypto_ablkcipher_encrypt(&ctx->req))"];
"1000198" [label="(Identifier,sg)"];
"1000220" [label="(Identifier,used)"];
"1000310" [label="(Identifier,used)"];
"1000207" [label="(ControlStructure,if (!used))"];
"1000237" [label="(ControlStructure,if (ctx->more || used < ctx->used))"];
"1000203" [label="(Identifier,used)"];
"1000259" [label="(ControlStructure,goto free;)"];
"1000208" [label="(Call,!used)"];
"1000277" [label="(Call,af_alg_wait_for_completion(\n\t\t\t\tctx->enc ?\n\t\t\t\t\tcrypto_ablkcipher_encrypt(&ctx->req) :\n\t\t\t\t\tcrypto_ablkcipher_decrypt(&ctx->req),\n\t\t\t\t&ctx->completion))"];
"1000192" [label="(Call,sgl->sg)"];
"1000251" [label="(Identifier,bs)"];
"1000238" [label="(Call,ctx->more || used < ctx->used)"];
"1000256" [label="(ControlStructure,if (!used))"];
"1000253" [label="(Identifier,err)"];
"1000244" [label="(Call,ctx->used)"];
"1000242" [label="(Call,used < ctx->used)"];
"1000222" [label="(Call,&ctx->rsgl)"];
"1000202" [label="(Call,used = ctx->used)"];
"1000182" [label="(Call,*from = iov->iov_base)"];
"1000139" [label="(Identifier,err)"];
"1000190" [label="(Call,sg = sgl->sg)"];
"1000129" [label="(Call,&ctx->req)"];
"1000250" [label="(Identifier,used)"];
"1000183" [label="(Identifier,from)"];
"1000257" [label="(Call,!used)"];
"1000249" [label="(Call,used % bs)"];
"1000126" [label="(Identifier,bs)"];
"1000265" [label="(Identifier,sg)"];
"1000294" [label="(Identifier,ctx)"];
"1000128" [label="(Call,crypto_ablkcipher_reqtfm(\n\t\t&ctx->req))"];
"1000106" [label="(Block,)"];
"1000278" [label="(Call,ctx->enc ?\n\t\t\t\t\tcrypto_ablkcipher_encrypt(&ctx->req) :\n\t\t\t\t\tcrypto_ablkcipher_decrypt(&ctx->req))"];
"1000258" [label="(Identifier,used)"];
"1000278" -> "1000277"  [label="AST: "];
"1000278" -> "1000282"  [label="CFG: "];
"1000278" -> "1000287"  [label="CFG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000282" -> "1000278"  [label="AST: "];
"1000287" -> "1000278"  [label="AST: "];
"1000294" -> "1000278"  [label="CFG: "];
"1000278" -> "1000326"  [label="DDG: crypto_ablkcipher_encrypt(&ctx->req)"];
"1000278" -> "1000326"  [label="DDG: crypto_ablkcipher_decrypt(&ctx->req)"];
"1000278" -> "1000326"  [label="DDG: ctx->enc"];
"1000282" -> "1000278"  [label="DDG: &ctx->req"];
"1000287" -> "1000278"  [label="DDG: &ctx->req"];
"1000282" -> "1000283"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000282" -> "1000326"  [label="DDG: &ctx->req"];
"1000282" -> "1000260"  [label="DDG: &ctx->req"];
"1000282" -> "1000277"  [label="DDG: &ctx->req"];
"1000260" -> "1000282"  [label="DDG: &ctx->req"];
"1000260" -> "1000189"  [label="AST: "];
"1000260" -> "1000272"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000265" -> "1000260"  [label="AST: "];
"1000266" -> "1000260"  [label="AST: "];
"1000271" -> "1000260"  [label="AST: "];
"1000272" -> "1000260"  [label="AST: "];
"1000276" -> "1000260"  [label="CFG: "];
"1000260" -> "1000326"  [label="DDG: ablkcipher_request_set_crypt(&ctx->req, sg,\n\t\t\t\t\t\t     ctx->rsgl.sg, used,\n\t\t\t\t\t\t     ctx->iv)"];
"1000260" -> "1000326"  [label="DDG: sg"];
"1000260" -> "1000326"  [label="DDG: ctx->rsgl.sg"];
"1000260" -> "1000326"  [label="DDG: ctx->iv"];
"1000260" -> "1000326"  [label="DDG: used"];
"1000128" -> "1000260"  [label="DDG: &ctx->req"];
"1000287" -> "1000260"  [label="DDG: &ctx->req"];
"1000200" -> "1000260"  [label="DDG: sg"];
"1000190" -> "1000260"  [label="DDG: sg"];
"1000257" -> "1000260"  [label="DDG: used"];
"1000260" -> "1000287"  [label="DDG: &ctx->req"];
"1000260" -> "1000305"  [label="DDG: used"];
"1000260" -> "1000308"  [label="DDG: used"];
"1000260" -> "1000311"  [label="DDG: used"];
"1000260" -> "1000314"  [label="DDG: used"];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000129"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000326"  [label="DDG: &ctx->req"];
"1000128" -> "1000127"  [label="DDG: &ctx->req"];
"1000287" -> "1000288"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000287" -> "1000326"  [label="DDG: &ctx->req"];
"1000287" -> "1000277"  [label="DDG: &ctx->req"];
"1000200" -> "1000195"  [label="AST: "];
"1000200" -> "1000201"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000200" -> "1000326"  [label="DDG: sg"];
"1000190" -> "1000200"  [label="DDG: sg"];
"1000190" -> "1000189"  [label="AST: "];
"1000190" -> "1000192"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000192" -> "1000190"  [label="AST: "];
"1000198" -> "1000190"  [label="CFG: "];
"1000190" -> "1000326"  [label="DDG: sg"];
"1000190" -> "1000326"  [label="DDG: sgl->sg"];
"1000257" -> "1000256"  [label="AST: "];
"1000257" -> "1000258"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000259" -> "1000257"  [label="CFG: "];
"1000263" -> "1000257"  [label="CFG: "];
"1000257" -> "1000326"  [label="DDG: used"];
"1000257" -> "1000326"  [label="DDG: !used"];
"1000247" -> "1000257"  [label="DDG: used"];
"1000242" -> "1000257"  [label="DDG: used"];
"1000219" -> "1000257"  [label="DDG: used"];
"1000257" -> "1000305"  [label="DDG: used"];
"1000257" -> "1000308"  [label="DDG: used"];
"1000257" -> "1000311"  [label="DDG: used"];
"1000257" -> "1000314"  [label="DDG: used"];
"1000247" -> "1000237"  [label="AST: "];
"1000247" -> "1000249"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000249" -> "1000247"  [label="AST: "];
"1000253" -> "1000247"  [label="CFG: "];
"1000247" -> "1000326"  [label="DDG: used % bs"];
"1000249" -> "1000247"  [label="DDG: used"];
"1000249" -> "1000247"  [label="DDG: bs"];
"1000249" -> "1000251"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000251" -> "1000249"  [label="AST: "];
"1000249" -> "1000326"  [label="DDG: bs"];
"1000242" -> "1000249"  [label="DDG: used"];
"1000219" -> "1000249"  [label="DDG: used"];
"1000125" -> "1000249"  [label="DDG: bs"];
"1000242" -> "1000238"  [label="AST: "];
"1000242" -> "1000244"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000244" -> "1000242"  [label="AST: "];
"1000238" -> "1000242"  [label="CFG: "];
"1000242" -> "1000326"  [label="DDG: ctx->used"];
"1000242" -> "1000202"  [label="DDG: ctx->used"];
"1000242" -> "1000238"  [label="DDG: used"];
"1000242" -> "1000238"  [label="DDG: ctx->used"];
"1000219" -> "1000242"  [label="DDG: used"];
"1000219" -> "1000189"  [label="AST: "];
"1000219" -> "1000221"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000221" -> "1000219"  [label="AST: "];
"1000230" -> "1000219"  [label="CFG: "];
"1000219" -> "1000326"  [label="DDG: af_alg_make_sg(&ctx->rsgl, from, used, 1)"];
"1000221" -> "1000219"  [label="DDG: &ctx->rsgl"];
"1000221" -> "1000219"  [label="DDG: from"];
"1000221" -> "1000219"  [label="DDG: used"];
"1000221" -> "1000219"  [label="DDG: 1"];
"1000219" -> "1000229"  [label="DDG: used"];
"1000221" -> "1000228"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000226" -> "1000221"  [label="AST: "];
"1000227" -> "1000221"  [label="AST: "];
"1000228" -> "1000221"  [label="AST: "];
"1000221" -> "1000326"  [label="DDG: from"];
"1000221" -> "1000326"  [label="DDG: &ctx->rsgl"];
"1000297" -> "1000221"  [label="DDG: &ctx->rsgl"];
"1000308" -> "1000221"  [label="DDG: from"];
"1000182" -> "1000221"  [label="DDG: from"];
"1000208" -> "1000221"  [label="DDG: used"];
"1000221" -> "1000297"  [label="DDG: &ctx->rsgl"];
"1000221" -> "1000308"  [label="DDG: from"];
"1000297" -> "1000189"  [label="AST: "];
"1000297" -> "1000298"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000303" -> "1000297"  [label="CFG: "];
"1000297" -> "1000326"  [label="DDG: &ctx->rsgl"];
"1000297" -> "1000326"  [label="DDG: af_alg_free_sg(&ctx->rsgl)"];
"1000308" -> "1000189"  [label="AST: "];
"1000308" -> "1000310"  [label="CFG: "];
"1000309" -> "1000308"  [label="AST: "];
"1000310" -> "1000308"  [label="AST: "];
"1000312" -> "1000308"  [label="CFG: "];
"1000308" -> "1000326"  [label="DDG: from"];
"1000182" -> "1000174"  [label="AST: "];
"1000182" -> "1000184"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000184" -> "1000182"  [label="AST: "];
"1000188" -> "1000182"  [label="CFG: "];
"1000182" -> "1000326"  [label="DDG: iov->iov_base"];
"1000182" -> "1000326"  [label="DDG: from"];
"1000208" -> "1000207"  [label="AST: "];
"1000208" -> "1000209"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000212" -> "1000208"  [label="CFG: "];
"1000220" -> "1000208"  [label="CFG: "];
"1000208" -> "1000326"  [label="DDG: used"];
"1000208" -> "1000326"  [label="DDG: !used"];
"1000202" -> "1000208"  [label="DDG: used"];
"1000202" -> "1000189"  [label="AST: "];
"1000202" -> "1000204"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000209" -> "1000202"  [label="CFG: "];
"1000202" -> "1000326"  [label="DDG: ctx->used"];
"1000125" -> "1000106"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000139" -> "1000125"  [label="CFG: "];
"1000125" -> "1000326"  [label="DDG: bs"];
"1000125" -> "1000326"  [label="DDG: crypto_ablkcipher_blocksize(crypto_ablkcipher_reqtfm(\n\t\t&ctx->req))"];
"1000127" -> "1000125"  [label="DDG: crypto_ablkcipher_reqtfm(\n\t\t&ctx->req)"];
"1000127" -> "1000326"  [label="DDG: crypto_ablkcipher_reqtfm(\n\t\t&ctx->req)"];
}
