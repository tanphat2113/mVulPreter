digraph "0_lxc_81f466d05f2a89cb4f122ef7f593ff3f279b165c_1@pointer" {
"1000350" [label="(Call,cgroup_attach(name, lxcpath, pid))"];
"1000263" [label="(Call,lxc_cmd_get_clone_flags(name, lxcpath))"];
"1000217" [label="(Call,lxc_container_new(name, lxcpath))"];
"1000191" [label="(Call,get_personality(name, lxcpath))"];
"1000160" [label="(Call,lxc_cmd_get_init_pid(name, lxcpath))"];
"1000133" [label="(MethodParameterIn,const char* name)"];
"1000134" [label="(MethodParameterIn,const char* lxcpath)"];
"1000310" [label="(Call,pid < 0)"];
"1000306" [label="(Call,pid = fork())"];
"1000349" [label="(Call,!cgroup_attach(name, lxcpath, pid))"];
"1000431" [label="(Call,wait_for_pid(pid))"];
"1000429" [label="(Call,ret = wait_for_pid(pid))"];
"1000434" [label="(Call,ret < 0)"];
"1000353" [label="(Identifier,pid)"];
"1000352" [label="(Identifier,lxcpath)"];
"1000315" [label="(Literal,\"failed to create first subprocess\")"];
"1000356" [label="(Identifier,procfd)"];
"1000310" [label="(Call,pid < 0)"];
"1000430" [label="(Identifier,ret)"];
"1000433" [label="(ControlStructure,if (ret < 0))"];
"1000213" [label="(Call,init_ctx->container = lxc_container_new(name, lxcpath))"];
"1000309" [label="(ControlStructure,if (pid < 0))"];
"1000219" [label="(Identifier,lxcpath)"];
"1000189" [label="(Call,personality = get_personality(name, lxcpath))"];
"1000308" [label="(Call,fork())"];
"1000332" [label="(Call,to_cleanup_pid = pid)"];
"1000307" [label="(Identifier,pid)"];
"1000432" [label="(Identifier,pid)"];
"1000191" [label="(Call,get_personality(name, lxcpath))"];
"1000325" [label="(Block,)"];
"1000439" [label="(Identifier,to_cleanup_pid)"];
"1000311" [label="(Identifier,pid)"];
"1000324" [label="(Identifier,pid)"];
"1000162" [label="(Identifier,lxcpath)"];
"1000160" [label="(Call,lxc_cmd_get_init_pid(name, lxcpath))"];
"1000434" [label="(Call,ret < 0)"];
"1000431" [label="(Call,wait_for_pid(pid))"];
"1000134" [label="(MethodParameterIn,const char* lxcpath)"];
"1000217" [label="(Call,lxc_container_new(name, lxcpath))"];
"1000436" [label="(Literal,0)"];
"1000259" [label="(Call,options->namespaces = lxc_cmd_get_clone_flags(name, lxcpath))"];
"1000158" [label="(Call,init_pid = lxc_cmd_get_init_pid(name, lxcpath))"];
"1000354" [label="(ControlStructure,goto cleanup_error;)"];
"1000351" [label="(Identifier,name)"];
"1000265" [label="(Identifier,lxcpath)"];
"1000192" [label="(Identifier,name)"];
"1000791" [label="(MethodReturn,int)"];
"1000139" [label="(Block,)"];
"1000133" [label="(MethodParameterIn,const char* name)"];
"1000218" [label="(Identifier,name)"];
"1000435" [label="(Identifier,ret)"];
"1000429" [label="(Call,ret = wait_for_pid(pid))"];
"1000264" [label="(Identifier,name)"];
"1000348" [label="(ControlStructure,if (!cgroup_attach(name, lxcpath, pid)))"];
"1000349" [label="(Call,!cgroup_attach(name, lxcpath, pid))"];
"1000350" [label="(Call,cgroup_attach(name, lxcpath, pid))"];
"1000437" [label="(ControlStructure,goto cleanup_error;)"];
"1000161" [label="(Identifier,name)"];
"1000312" [label="(Literal,0)"];
"1000263" [label="(Call,lxc_cmd_get_clone_flags(name, lxcpath))"];
"1000193" [label="(Identifier,lxcpath)"];
"1000306" [label="(Call,pid = fork())"];
"1000350" -> "1000349"  [label="AST: "];
"1000350" -> "1000353"  [label="CFG: "];
"1000351" -> "1000350"  [label="AST: "];
"1000352" -> "1000350"  [label="AST: "];
"1000353" -> "1000350"  [label="AST: "];
"1000349" -> "1000350"  [label="CFG: "];
"1000350" -> "1000791"  [label="DDG: name"];
"1000350" -> "1000791"  [label="DDG: pid"];
"1000350" -> "1000791"  [label="DDG: lxcpath"];
"1000350" -> "1000349"  [label="DDG: name"];
"1000350" -> "1000349"  [label="DDG: lxcpath"];
"1000350" -> "1000349"  [label="DDG: pid"];
"1000263" -> "1000350"  [label="DDG: name"];
"1000263" -> "1000350"  [label="DDG: lxcpath"];
"1000217" -> "1000350"  [label="DDG: name"];
"1000217" -> "1000350"  [label="DDG: lxcpath"];
"1000133" -> "1000350"  [label="DDG: name"];
"1000134" -> "1000350"  [label="DDG: lxcpath"];
"1000310" -> "1000350"  [label="DDG: pid"];
"1000350" -> "1000431"  [label="DDG: pid"];
"1000263" -> "1000259"  [label="AST: "];
"1000263" -> "1000265"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000263"  [label="AST: "];
"1000259" -> "1000263"  [label="CFG: "];
"1000263" -> "1000791"  [label="DDG: lxcpath"];
"1000263" -> "1000791"  [label="DDG: name"];
"1000263" -> "1000259"  [label="DDG: name"];
"1000263" -> "1000259"  [label="DDG: lxcpath"];
"1000217" -> "1000263"  [label="DDG: name"];
"1000217" -> "1000263"  [label="DDG: lxcpath"];
"1000133" -> "1000263"  [label="DDG: name"];
"1000134" -> "1000263"  [label="DDG: lxcpath"];
"1000217" -> "1000213"  [label="AST: "];
"1000217" -> "1000219"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000219" -> "1000217"  [label="AST: "];
"1000213" -> "1000217"  [label="CFG: "];
"1000217" -> "1000791"  [label="DDG: lxcpath"];
"1000217" -> "1000791"  [label="DDG: name"];
"1000217" -> "1000213"  [label="DDG: name"];
"1000217" -> "1000213"  [label="DDG: lxcpath"];
"1000191" -> "1000217"  [label="DDG: name"];
"1000191" -> "1000217"  [label="DDG: lxcpath"];
"1000133" -> "1000217"  [label="DDG: name"];
"1000134" -> "1000217"  [label="DDG: lxcpath"];
"1000191" -> "1000189"  [label="AST: "];
"1000191" -> "1000193"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000193" -> "1000191"  [label="AST: "];
"1000189" -> "1000191"  [label="CFG: "];
"1000191" -> "1000791"  [label="DDG: lxcpath"];
"1000191" -> "1000791"  [label="DDG: name"];
"1000191" -> "1000189"  [label="DDG: name"];
"1000191" -> "1000189"  [label="DDG: lxcpath"];
"1000160" -> "1000191"  [label="DDG: name"];
"1000160" -> "1000191"  [label="DDG: lxcpath"];
"1000133" -> "1000191"  [label="DDG: name"];
"1000134" -> "1000191"  [label="DDG: lxcpath"];
"1000160" -> "1000158"  [label="AST: "];
"1000160" -> "1000162"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000162" -> "1000160"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000160" -> "1000791"  [label="DDG: lxcpath"];
"1000160" -> "1000791"  [label="DDG: name"];
"1000160" -> "1000158"  [label="DDG: name"];
"1000160" -> "1000158"  [label="DDG: lxcpath"];
"1000133" -> "1000160"  [label="DDG: name"];
"1000134" -> "1000160"  [label="DDG: lxcpath"];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000791"  [label="DDG: name"];
"1000134" -> "1000132"  [label="AST: "];
"1000134" -> "1000791"  [label="DDG: lxcpath"];
"1000310" -> "1000309"  [label="AST: "];
"1000310" -> "1000312"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000312" -> "1000310"  [label="AST: "];
"1000315" -> "1000310"  [label="CFG: "];
"1000324" -> "1000310"  [label="CFG: "];
"1000310" -> "1000791"  [label="DDG: pid < 0"];
"1000310" -> "1000791"  [label="DDG: pid"];
"1000306" -> "1000310"  [label="DDG: pid"];
"1000310" -> "1000332"  [label="DDG: pid"];
"1000310" -> "1000431"  [label="DDG: pid"];
"1000306" -> "1000139"  [label="AST: "];
"1000306" -> "1000308"  [label="CFG: "];
"1000307" -> "1000306"  [label="AST: "];
"1000308" -> "1000306"  [label="AST: "];
"1000311" -> "1000306"  [label="CFG: "];
"1000306" -> "1000791"  [label="DDG: fork()"];
"1000349" -> "1000348"  [label="AST: "];
"1000354" -> "1000349"  [label="CFG: "];
"1000356" -> "1000349"  [label="CFG: "];
"1000349" -> "1000791"  [label="DDG: !cgroup_attach(name, lxcpath, pid)"];
"1000349" -> "1000791"  [label="DDG: cgroup_attach(name, lxcpath, pid)"];
"1000431" -> "1000429"  [label="AST: "];
"1000431" -> "1000432"  [label="CFG: "];
"1000432" -> "1000431"  [label="AST: "];
"1000429" -> "1000431"  [label="CFG: "];
"1000431" -> "1000791"  [label="DDG: pid"];
"1000431" -> "1000429"  [label="DDG: pid"];
"1000429" -> "1000325"  [label="AST: "];
"1000430" -> "1000429"  [label="AST: "];
"1000435" -> "1000429"  [label="CFG: "];
"1000429" -> "1000791"  [label="DDG: wait_for_pid(pid)"];
"1000429" -> "1000434"  [label="DDG: ret"];
"1000434" -> "1000433"  [label="AST: "];
"1000434" -> "1000436"  [label="CFG: "];
"1000435" -> "1000434"  [label="AST: "];
"1000436" -> "1000434"  [label="AST: "];
"1000437" -> "1000434"  [label="CFG: "];
"1000439" -> "1000434"  [label="CFG: "];
"1000434" -> "1000791"  [label="DDG: ret < 0"];
"1000434" -> "1000791"  [label="DDG: ret"];
}
