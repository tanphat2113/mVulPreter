digraph "1_tcpdump_e942fb84fbe3a73a98a00d2a279425872b5fb9d2@API" {
"1000320" [label="(Call,i >= sizeof(*ni))"];
"1000303" [label="(Call,(i / sizeof(*ni)) * sizeof(*ni) != i)"];
"1000304" [label="(Call,(i / sizeof(*ni)) * sizeof(*ni))"];
"1000305" [label="(Call,i / sizeof(*ni))"];
"1000144" [label="(Call,i -= (sizeof(struct rip6) - sizeof(struct netinfo6)))"];
"1000136" [label="(Call,i < (sizeof(struct rip6) - sizeof(struct netinfo6)))"];
"1000130" [label="(Call,i = min(length, amt))"];
"1000132" [label="(Call,min(length, amt))"];
"1000103" [label="(MethodParameterIn,unsigned int length)"];
"1000123" [label="(Call,amt = ndo->ndo_snapend - dat)"];
"1000125" [label="(Call,ndo->ndo_snapend - dat)"];
"1000117" [label="(Call,ndo->ndo_snapend < dat)"];
"1000108" [label="(Call,(const struct rip6 *)dat)"];
"1000102" [label="(MethodParameterIn,const u_char *dat)"];
"1000326" [label="(Call,i -= sizeof(*ni))"];
"1000320" [label="(Call,i >= sizeof(*ni))"];
"1000388" [label="(MethodReturn,RET)"];
"1000325" [label="(Block,)"];
"1000271" [label="(Call,length / sizeof(*ni))"];
"1000137" [label="(Identifier,i)"];
"1000134" [label="(Identifier,amt)"];
"1000136" [label="(Call,i < (sizeof(struct rip6) - sizeof(struct netinfo6)))"];
"1000143" [label="(Return,return;)"];
"1000146" [label="(Call,sizeof(struct rip6) - sizeof(struct netinfo6))"];
"1000123" [label="(Call,amt = ndo->ndo_snapend - dat)"];
"1000303" [label="(Call,(i / sizeof(*ni)) * sizeof(*ni) != i)"];
"1000219" [label="(Call,i / sizeof(*ni))"];
"1000125" [label="(Call,ndo->ndo_snapend - dat)"];
"1000312" [label="(Identifier,ni)"];
"1000304" [label="(Call,(i / sizeof(*ni)) * sizeof(*ni))"];
"1000104" [label="(Block,)"];
"1000117" [label="(Call,ndo->ndo_snapend < dat)"];
"1000133" [label="(Identifier,length)"];
"1000145" [label="(Identifier,i)"];
"1000283" [label="(Call,length - 4)"];
"1000332" [label="(Identifier,ni)"];
"1000116" [label="(ControlStructure,if (ndo->ndo_snapend < dat))"];
"1000322" [label="(Call,sizeof(*ni))"];
"1000314" [label="(ControlStructure,for (ni = rp->rip6_nets; i >= sizeof(*ni);\n\t\t    i -= sizeof(*ni), ++ni))"];
"1000132" [label="(Call,min(length, amt))"];
"1000326" [label="(Call,i -= sizeof(*ni))"];
"1000356" [label="(Identifier,trunc)"];
"1000306" [label="(Identifier,i)"];
"1000144" [label="(Call,i -= (sizeof(struct rip6) - sizeof(struct netinfo6)))"];
"1000307" [label="(Call,sizeof(*ni))"];
"1000305" [label="(Call,i / sizeof(*ni))"];
"1000124" [label="(Identifier,amt)"];
"1000131" [label="(Identifier,i)"];
"1000313" [label="(Identifier,i)"];
"1000310" [label="(Call,sizeof(*ni))"];
"1000103" [label="(MethodParameterIn,unsigned int length)"];
"1000159" [label="(Call,length / sizeof(*ni))"];
"1000320" [label="(Call,i >= sizeof(*ni))"];
"1000110" [label="(Identifier,dat)"];
"1000301" [label="(Call,trunc = ((i / sizeof(*ni)) * sizeof(*ni) != i))"];
"1000327" [label="(Identifier,i)"];
"1000118" [label="(Call,ndo->ndo_snapend)"];
"1000328" [label="(Call,sizeof(*ni))"];
"1000108" [label="(Call,(const struct rip6 *)dat)"];
"1000197" [label="(Call,length - 4)"];
"1000135" [label="(ControlStructure,if (i < (sizeof(struct rip6) - sizeof(struct netinfo6))))"];
"1000337" [label="(Identifier,ndo)"];
"1000153" [label="(Identifier,rp)"];
"1000121" [label="(Identifier,dat)"];
"1000129" [label="(Identifier,dat)"];
"1000122" [label="(Return,return;)"];
"1000126" [label="(Call,ndo->ndo_snapend)"];
"1000138" [label="(Call,sizeof(struct rip6) - sizeof(struct netinfo6))"];
"1000321" [label="(Identifier,i)"];
"1000130" [label="(Call,i = min(length, amt))"];
"1000106" [label="(Call,*rp = (const struct rip6 *)dat)"];
"1000102" [label="(MethodParameterIn,const u_char *dat)"];
"1000320" -> "1000314"  [label="AST: "];
"1000320" -> "1000322"  [label="CFG: "];
"1000321" -> "1000320"  [label="AST: "];
"1000322" -> "1000320"  [label="AST: "];
"1000337" -> "1000320"  [label="CFG: "];
"1000356" -> "1000320"  [label="CFG: "];
"1000320" -> "1000388"  [label="DDG: i"];
"1000320" -> "1000388"  [label="DDG: i >= sizeof(*ni)"];
"1000303" -> "1000320"  [label="DDG: i"];
"1000326" -> "1000320"  [label="DDG: i"];
"1000320" -> "1000326"  [label="DDG: i"];
"1000303" -> "1000301"  [label="AST: "];
"1000303" -> "1000313"  [label="CFG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000313" -> "1000303"  [label="AST: "];
"1000301" -> "1000303"  [label="CFG: "];
"1000303" -> "1000388"  [label="DDG: (i / sizeof(*ni)) * sizeof(*ni)"];
"1000303" -> "1000301"  [label="DDG: (i / sizeof(*ni)) * sizeof(*ni)"];
"1000303" -> "1000301"  [label="DDG: i"];
"1000304" -> "1000303"  [label="DDG: i / sizeof(*ni)"];
"1000305" -> "1000303"  [label="DDG: i"];
"1000304" -> "1000310"  [label="CFG: "];
"1000305" -> "1000304"  [label="AST: "];
"1000310" -> "1000304"  [label="AST: "];
"1000313" -> "1000304"  [label="CFG: "];
"1000304" -> "1000388"  [label="DDG: i / sizeof(*ni)"];
"1000305" -> "1000304"  [label="DDG: i"];
"1000305" -> "1000307"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000307" -> "1000305"  [label="AST: "];
"1000312" -> "1000305"  [label="CFG: "];
"1000144" -> "1000305"  [label="DDG: i"];
"1000144" -> "1000104"  [label="AST: "];
"1000144" -> "1000146"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000146" -> "1000144"  [label="AST: "];
"1000153" -> "1000144"  [label="CFG: "];
"1000144" -> "1000388"  [label="DDG: i"];
"1000144" -> "1000388"  [label="DDG: sizeof(struct rip6) - sizeof(struct netinfo6)"];
"1000136" -> "1000144"  [label="DDG: i"];
"1000144" -> "1000219"  [label="DDG: i"];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000138"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000143" -> "1000136"  [label="CFG: "];
"1000145" -> "1000136"  [label="CFG: "];
"1000136" -> "1000388"  [label="DDG: i < (sizeof(struct rip6) - sizeof(struct netinfo6))"];
"1000136" -> "1000388"  [label="DDG: sizeof(struct rip6) - sizeof(struct netinfo6)"];
"1000136" -> "1000388"  [label="DDG: i"];
"1000130" -> "1000136"  [label="DDG: i"];
"1000130" -> "1000104"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000137" -> "1000130"  [label="CFG: "];
"1000130" -> "1000388"  [label="DDG: min(length, amt)"];
"1000132" -> "1000130"  [label="DDG: length"];
"1000132" -> "1000130"  [label="DDG: amt"];
"1000132" -> "1000134"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="AST: "];
"1000132" -> "1000388"  [label="DDG: amt"];
"1000132" -> "1000388"  [label="DDG: length"];
"1000103" -> "1000132"  [label="DDG: length"];
"1000123" -> "1000132"  [label="DDG: amt"];
"1000132" -> "1000159"  [label="DDG: length"];
"1000132" -> "1000271"  [label="DDG: length"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000388"  [label="DDG: length"];
"1000103" -> "1000159"  [label="DDG: length"];
"1000103" -> "1000197"  [label="DDG: length"];
"1000103" -> "1000271"  [label="DDG: length"];
"1000103" -> "1000283"  [label="DDG: length"];
"1000123" -> "1000104"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000131" -> "1000123"  [label="CFG: "];
"1000123" -> "1000388"  [label="DDG: ndo->ndo_snapend - dat"];
"1000125" -> "1000123"  [label="DDG: ndo->ndo_snapend"];
"1000125" -> "1000123"  [label="DDG: dat"];
"1000125" -> "1000129"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000129" -> "1000125"  [label="AST: "];
"1000125" -> "1000388"  [label="DDG: ndo->ndo_snapend"];
"1000125" -> "1000388"  [label="DDG: dat"];
"1000117" -> "1000125"  [label="DDG: ndo->ndo_snapend"];
"1000117" -> "1000125"  [label="DDG: dat"];
"1000102" -> "1000125"  [label="DDG: dat"];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1000121"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000121" -> "1000117"  [label="AST: "];
"1000122" -> "1000117"  [label="CFG: "];
"1000124" -> "1000117"  [label="CFG: "];
"1000117" -> "1000388"  [label="DDG: ndo->ndo_snapend < dat"];
"1000117" -> "1000388"  [label="DDG: dat"];
"1000117" -> "1000388"  [label="DDG: ndo->ndo_snapend"];
"1000108" -> "1000117"  [label="DDG: dat"];
"1000102" -> "1000117"  [label="DDG: dat"];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000110"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000110" -> "1000108"  [label="AST: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000108" -> "1000106"  [label="DDG: dat"];
"1000102" -> "1000108"  [label="DDG: dat"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000388"  [label="DDG: dat"];
"1000326" -> "1000325"  [label="AST: "];
"1000326" -> "1000328"  [label="CFG: "];
"1000327" -> "1000326"  [label="AST: "];
"1000328" -> "1000326"  [label="AST: "];
"1000332" -> "1000326"  [label="CFG: "];
}
