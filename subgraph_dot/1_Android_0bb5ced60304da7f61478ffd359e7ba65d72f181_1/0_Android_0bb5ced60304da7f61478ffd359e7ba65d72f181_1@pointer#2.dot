digraph "0_Android_0bb5ced60304da7f61478ffd359e7ba65d72f181_1@pointer" {
"1000261" [label="(Call,meta->findData(kKeyOpusCodecDelay, &type, &data, &size))"];
"1000248" [label="(Call,meta->findData(kKeyOpusHeader, &type, &data, &size))"];
"1000222" [label="(Call,meta->findData(kKeyVorbisInfo, &type, &data, &size))"];
"1000187" [label="(Call,meta->findData(kKeyHVCC, &type, &data, &size))"];
"1000150" [label="(Call,meta->findData(kKeyAVCC, &type, &data, &size))"];
"1000123" [label="(Call,meta->findData(kKeyESDS, &type, &data, &size))"];
"1000260" [label="(Call,CHECK(meta->findData(kKeyOpusCodecDelay, &type, &data, &size)))"];
"1000273" [label="(Call,meta->findData(kKeyOpusSeekPreRoll, &type, &data, &size))"];
"1000272" [label="(Call,CHECK(meta->findData(kKeyOpusSeekPreRoll, &type, &data, &size)))"];
"1000187" [label="(Call,meta->findData(kKeyHVCC, &type, &data, &size))"];
"1000188" [label="(Identifier,kKeyHVCC)"];
"1000154" [label="(Call,&data)"];
"1000149" [label="(ControlStructure,if (meta->findData(kKeyAVCC, &type, &data, &size)))"];
"1000222" [label="(Call,meta->findData(kKeyVorbisInfo, &type, &data, &size))"];
"1000272" [label="(Call,CHECK(meta->findData(kKeyOpusSeekPreRoll, &type, &data, &size)))"];
"1000235" [label="(Call,meta->findData(kKeyVorbisBooks, &type, &data, &size))"];
"1000221" [label="(ControlStructure,if (meta->findData(kKeyVorbisInfo, &type, &data, &size)))"];
"1000248" [label="(Call,meta->findData(kKeyOpusHeader, &type, &data, &size))"];
"1000124" [label="(Identifier,kKeyESDS)"];
"1000125" [label="(Call,&type)"];
"1000249" [label="(Identifier,kKeyOpusHeader)"];
"1000258" [label="(Identifier,data)"];
"1000122" [label="(ControlStructure,if (meta->findData(kKeyESDS, &type, &data, &size)))"];
"1000261" [label="(Call,meta->findData(kKeyOpusCodecDelay, &type, &data, &size))"];
"1000623" [label="(MethodReturn,status_t)"];
"1000202" [label="(Identifier,err)"];
"1000263" [label="(Call,&type)"];
"1000150" [label="(Call,meta->findData(kKeyAVCC, &type, &data, &size))"];
"1000151" [label="(Identifier,kKeyAVCC)"];
"1000127" [label="(Call,&data)"];
"1000262" [label="(Identifier,kKeyOpusCodecDelay)"];
"1000228" [label="(Call,&size)"];
"1000270" [label="(Identifier,data)"];
"1000279" [label="(Call,&size)"];
"1000189" [label="(Call,&type)"];
"1000232" [label="(Identifier,data)"];
"1000282" [label="(Identifier,data)"];
"1000254" [label="(Call,&size)"];
"1000267" [label="(Call,&size)"];
"1000277" [label="(Call,&data)"];
"1000256" [label="(Block,)"];
"1000273" [label="(Call,meta->findData(kKeyOpusSeekPreRoll, &type, &data, &size))"];
"1000224" [label="(Call,&type)"];
"1000165" [label="(Identifier,err)"];
"1000275" [label="(Call,&type)"];
"1000274" [label="(Identifier,kKeyOpusSeekPreRoll)"];
"1000223" [label="(Identifier,kKeyVorbisInfo)"];
"1000186" [label="(ControlStructure,if (meta->findData(kKeyHVCC, &type, &data, &size)))"];
"1000252" [label="(Call,&data)"];
"1000250" [label="(Call,&type)"];
"1000247" [label="(ControlStructure,if (meta->findData(kKeyOpusHeader, &type, &data, &size)))"];
"1000152" [label="(Call,&type)"];
"1000286" [label="(Identifier,bitRate)"];
"1000260" [label="(Call,CHECK(meta->findData(kKeyOpusCodecDelay, &type, &data, &size)))"];
"1000134" [label="(Call,esds.InitCheck())"];
"1000265" [label="(Call,&data)"];
"1000156" [label="(Call,&size)"];
"1000191" [label="(Call,&data)"];
"1000226" [label="(Call,&data)"];
"1000123" [label="(Call,meta->findData(kKeyESDS, &type, &data, &size))"];
"1000129" [label="(Call,&size)"];
"1000193" [label="(Call,&size)"];
"1000261" -> "1000260"  [label="AST: "];
"1000261" -> "1000267"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000263" -> "1000261"  [label="AST: "];
"1000265" -> "1000261"  [label="AST: "];
"1000267" -> "1000261"  [label="AST: "];
"1000260" -> "1000261"  [label="CFG: "];
"1000261" -> "1000623"  [label="DDG: kKeyOpusCodecDelay"];
"1000261" -> "1000260"  [label="DDG: kKeyOpusCodecDelay"];
"1000261" -> "1000260"  [label="DDG: &type"];
"1000261" -> "1000260"  [label="DDG: &data"];
"1000261" -> "1000260"  [label="DDG: &size"];
"1000248" -> "1000261"  [label="DDG: &type"];
"1000248" -> "1000261"  [label="DDG: &data"];
"1000248" -> "1000261"  [label="DDG: &size"];
"1000261" -> "1000273"  [label="DDG: &type"];
"1000261" -> "1000273"  [label="DDG: &data"];
"1000261" -> "1000273"  [label="DDG: &size"];
"1000248" -> "1000247"  [label="AST: "];
"1000248" -> "1000254"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="AST: "];
"1000252" -> "1000248"  [label="AST: "];
"1000254" -> "1000248"  [label="AST: "];
"1000258" -> "1000248"  [label="CFG: "];
"1000286" -> "1000248"  [label="CFG: "];
"1000248" -> "1000623"  [label="DDG: meta->findData(kKeyOpusHeader, &type, &data, &size)"];
"1000248" -> "1000623"  [label="DDG: &size"];
"1000248" -> "1000623"  [label="DDG: &data"];
"1000248" -> "1000623"  [label="DDG: &type"];
"1000248" -> "1000623"  [label="DDG: kKeyOpusHeader"];
"1000222" -> "1000248"  [label="DDG: &type"];
"1000222" -> "1000248"  [label="DDG: &data"];
"1000222" -> "1000248"  [label="DDG: &size"];
"1000222" -> "1000221"  [label="AST: "];
"1000222" -> "1000228"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000224" -> "1000222"  [label="AST: "];
"1000226" -> "1000222"  [label="AST: "];
"1000228" -> "1000222"  [label="AST: "];
"1000232" -> "1000222"  [label="CFG: "];
"1000249" -> "1000222"  [label="CFG: "];
"1000222" -> "1000623"  [label="DDG: kKeyVorbisInfo"];
"1000222" -> "1000623"  [label="DDG: meta->findData(kKeyVorbisInfo, &type, &data, &size)"];
"1000187" -> "1000222"  [label="DDG: &type"];
"1000187" -> "1000222"  [label="DDG: &data"];
"1000187" -> "1000222"  [label="DDG: &size"];
"1000222" -> "1000235"  [label="DDG: &type"];
"1000222" -> "1000235"  [label="DDG: &data"];
"1000222" -> "1000235"  [label="DDG: &size"];
"1000187" -> "1000186"  [label="AST: "];
"1000187" -> "1000193"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000189" -> "1000187"  [label="AST: "];
"1000191" -> "1000187"  [label="AST: "];
"1000193" -> "1000187"  [label="AST: "];
"1000202" -> "1000187"  [label="CFG: "];
"1000223" -> "1000187"  [label="CFG: "];
"1000187" -> "1000623"  [label="DDG: kKeyHVCC"];
"1000187" -> "1000623"  [label="DDG: meta->findData(kKeyHVCC, &type, &data, &size)"];
"1000187" -> "1000623"  [label="DDG: &type"];
"1000187" -> "1000623"  [label="DDG: &data"];
"1000187" -> "1000623"  [label="DDG: &size"];
"1000150" -> "1000187"  [label="DDG: &type"];
"1000150" -> "1000187"  [label="DDG: &data"];
"1000150" -> "1000187"  [label="DDG: &size"];
"1000150" -> "1000149"  [label="AST: "];
"1000150" -> "1000156"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="AST: "];
"1000154" -> "1000150"  [label="AST: "];
"1000156" -> "1000150"  [label="AST: "];
"1000165" -> "1000150"  [label="CFG: "];
"1000188" -> "1000150"  [label="CFG: "];
"1000150" -> "1000623"  [label="DDG: kKeyAVCC"];
"1000150" -> "1000623"  [label="DDG: &type"];
"1000150" -> "1000623"  [label="DDG: &data"];
"1000150" -> "1000623"  [label="DDG: meta->findData(kKeyAVCC, &type, &data, &size)"];
"1000150" -> "1000623"  [label="DDG: &size"];
"1000123" -> "1000150"  [label="DDG: &type"];
"1000123" -> "1000150"  [label="DDG: &data"];
"1000123" -> "1000150"  [label="DDG: &size"];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000129"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000127" -> "1000123"  [label="AST: "];
"1000129" -> "1000123"  [label="AST: "];
"1000134" -> "1000123"  [label="CFG: "];
"1000151" -> "1000123"  [label="CFG: "];
"1000123" -> "1000623"  [label="DDG: &type"];
"1000123" -> "1000623"  [label="DDG: meta->findData(kKeyESDS, &type, &data, &size)"];
"1000123" -> "1000623"  [label="DDG: &size"];
"1000123" -> "1000623"  [label="DDG: &data"];
"1000123" -> "1000623"  [label="DDG: kKeyESDS"];
"1000260" -> "1000256"  [label="AST: "];
"1000270" -> "1000260"  [label="CFG: "];
"1000260" -> "1000623"  [label="DDG: CHECK(meta->findData(kKeyOpusCodecDelay, &type, &data, &size))"];
"1000260" -> "1000623"  [label="DDG: meta->findData(kKeyOpusCodecDelay, &type, &data, &size)"];
"1000273" -> "1000272"  [label="AST: "];
"1000273" -> "1000279"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000275" -> "1000273"  [label="AST: "];
"1000277" -> "1000273"  [label="AST: "];
"1000279" -> "1000273"  [label="AST: "];
"1000272" -> "1000273"  [label="CFG: "];
"1000273" -> "1000623"  [label="DDG: &type"];
"1000273" -> "1000623"  [label="DDG: kKeyOpusSeekPreRoll"];
"1000273" -> "1000623"  [label="DDG: &data"];
"1000273" -> "1000623"  [label="DDG: &size"];
"1000273" -> "1000272"  [label="DDG: kKeyOpusSeekPreRoll"];
"1000273" -> "1000272"  [label="DDG: &type"];
"1000273" -> "1000272"  [label="DDG: &data"];
"1000273" -> "1000272"  [label="DDG: &size"];
"1000272" -> "1000256"  [label="AST: "];
"1000282" -> "1000272"  [label="CFG: "];
"1000272" -> "1000623"  [label="DDG: meta->findData(kKeyOpusSeekPreRoll, &type, &data, &size)"];
"1000272" -> "1000623"  [label="DDG: CHECK(meta->findData(kKeyOpusSeekPreRoll, &type, &data, &size))"];
}
