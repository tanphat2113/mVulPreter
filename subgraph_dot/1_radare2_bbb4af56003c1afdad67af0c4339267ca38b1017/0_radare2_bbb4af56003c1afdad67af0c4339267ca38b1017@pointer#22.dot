digraph "0_radare2_bbb4af56003c1afdad67af0c4339267ca38b1017@pointer" {
"1001162" [label="(Call,data[1] <= 127)"];
"1000267" [label="(MethodParameterIn,const ut8 *data)"];
"1001167" [label="(Call,op->jump = addr + data[1] + op->size)"];
"1001171" [label="(Call,addr + data[1] + op->size)"];
"1001173" [label="(Call,data[1] + op->size)"];
"1001188" [label="(Call,256 - data[1])"];
"1001185" [label="(Call,addr - (256 - data[1]) + op->size)"];
"1001181" [label="(Call,op->jump = addr - (256 - data[1]) + op->size)"];
"1001196" [label="(Call,op->fail = addr + op->size)"];
"1001200" [label="(Call,addr + op->size)"];
"1001187" [label="(Call,(256 - data[1]) + op->size)"];
"1001415" [label="(Call,data[0] == 0xa9)"];
"1001189" [label="(Literal,256)"];
"1000662" [label="(Call,_6502_anal_esil_get_addr_pattern1 (op, data, addrbuf, buffsize))"];
"1000992" [label="(Call,_6502_anal_esil_inc_reg (op, data[0], \"-\"))"];
"1001310" [label="(Call,data[2] << 8)"];
"1001185" [label="(Call,addr - (256 - data[1]) + op->size)"];
"1001181" [label="(Call,op->jump = addr - (256 - data[1]) + op->size)"];
"1001063" [label="(Call,data[0] == 0xe0)"];
"1000267" [label="(MethodParameterIn,const ut8 *data)"];
"1001198" [label="(Identifier,op)"];
"1001194" [label="(Identifier,op)"];
"1001182" [label="(Call,op->jump)"];
"1001171" [label="(Call,addr + data[1] + op->size)"];
"1001018" [label="(Call,data[0] == 0xc9)"];
"1001576" [label="(Call,_6502_anal_esil_get_addr_pattern3 (op, data, addrbuf, buffsize, 'x'))"];
"1000789" [label="(Call,data[0] == 0x4a)"];
"1001172" [label="(Identifier,addr)"];
"1000306" [label="(Call,op->id = data[0])"];
"1000847" [label="(Call,_6502_anal_esil_get_addr_pattern2 (op, data, addrbuf, buffsize, 'x'))"];
"1000266" [label="(MethodParameterIn,ut64 addr)"];
"1000918" [label="(Call,_6502_anal_esil_get_addr_pattern2 (op, data, addrbuf, buffsize, 'x'))"];
"1000833" [label="(Call,data[0] == 0x2a)"];
"1001174" [label="(Call,data[1])"];
"1001187" [label="(Call,(256 - data[1]) + op->size)"];
"1001201" [label="(Identifier,addr)"];
"1001202" [label="(Call,op->size)"];
"1000746" [label="(Call,data[0] == 0x0a)"];
"1001162" [label="(Call,data[1] <= 127)"];
"1001533" [label="(Call,_6502_anal_esil_get_addr_pattern1 (op, data, addrbuf, buffsize))"];
"1001197" [label="(Call,op->fail)"];
"1001188" [label="(Call,256 - data[1])"];
"1000890" [label="(Call,_6502_anal_esil_get_addr_pattern2 (op, data, addrbuf, buffsize, 'x'))"];
"1001456" [label="(Call,data[0] == 0xa2)"];
"1000876" [label="(Call,data[0] == 0x6a)"];
"1001661" [label="(Call,_6502_anal_esil_mov (op, data[0]))"];
"1001409" [label="(Call,_6502_anal_esil_get_addr_pattern1 (op, data, addrbuf, buffsize))"];
"1001226" [label="(Call,data[1] | data[2] << 8)"];
"1001196" [label="(Call,op->fail = addr + op->size)"];
"1001612" [label="(Call,_6502_anal_esil_push (op, data[0]))"];
"1000527" [label="(Call,data[0] == 0x69)"];
"1001012" [label="(Call,_6502_anal_esil_get_addr_pattern1 (op, data, addrbuf, buffsize))"];
"1001200" [label="(Call,addr + op->size)"];
"1001161" [label="(ControlStructure,if (data[1] <= 127))"];
"1001705" [label="(Call,_6502_anal_esil_mov (op, data[0]))"];
"1000479" [label="(Call,_6502_anal_esil_flags (op, data[0]))"];
"1001168" [label="(Call,op->jump)"];
"1001683" [label="(Call,_6502_anal_esil_mov (op, data[0]))"];
"1000576" [label="(Call,data[0] == 0xe9)"];
"1000625" [label="(Call,data[0] == 0x09)"];
"1000492" [label="(Call,_6502_anal_esil_get_addr_pattern3 (op, data, addrbuf, buffsize, 0))"];
"1001177" [label="(Call,op->size)"];
"1001163" [label="(Call,data[1])"];
"1001554" [label="(Call,_6502_anal_esil_get_addr_pattern2 (op, data, addrbuf, buffsize, 'y'))"];
"1001166" [label="(Literal,127)"];
"1000619" [label="(Call,_6502_anal_esil_get_addr_pattern1 (op, data, addrbuf, buffsize))"];
"1001108" [label="(Call,data[0] == 0xc0)"];
"1001186" [label="(Identifier,addr)"];
"1001190" [label="(Call,data[1])"];
"1000668" [label="(Call,data[0] == 0x29)"];
"1000283" [label="(Call,op->size = snes_op_get_size (1, 1, &snes_op[data[0]]))"];
"1001641" [label="(Call,_6502_anal_esil_pop (op, data[0]))"];
"1001206" [label="(Identifier,op)"];
"1001169" [label="(Identifier,op)"];
"1001183" [label="(Identifier,op)"];
"1001056" [label="(Call,_6502_anal_esil_get_addr_pattern3 (op, data, addrbuf, buffsize, 0))"];
"1001193" [label="(Call,op->size)"];
"1001101" [label="(Call,_6502_anal_esil_get_addr_pattern3 (op, data, addrbuf, buffsize, 0))"];
"1001497" [label="(Call,data[0] == 0xa0)"];
"1001230" [label="(Call,data[2] << 8)"];
"1000570" [label="(Call,_6502_anal_esil_get_addr_pattern1 (op, data, addrbuf, buffsize))"];
"1001167" [label="(Call,op->jump = addr + data[1] + op->size)"];
"1001274" [label="(Call,data[2] << 8)"];
"1000973" [label="(Call,_6502_anal_esil_inc_reg (op, data[0], \"+\"))"];
"1000711" [label="(Call,data[0] == 0x49)"];
"1001449" [label="(Call,_6502_anal_esil_get_addr_pattern2 (op, data, addrbuf, buffsize, 'y'))"];
"1000803" [label="(Call,_6502_anal_esil_get_addr_pattern2 (op, data, addrbuf, buffsize, 'x'))"];
"1000944" [label="(Call,_6502_anal_esil_get_addr_pattern2 (op, data, addrbuf, buffsize, 'x'))"];
"1001205" [label="(Call,_6502_anal_esil_ccall (op, data[0]))"];
"1001715" [label="(MethodReturn,static int)"];
"1000521" [label="(Call,_6502_anal_esil_get_addr_pattern1 (op, data, addrbuf, buffsize))"];
"1001306" [label="(Call,data[1] | data[2] << 8)"];
"1001490" [label="(Call,_6502_anal_esil_get_addr_pattern3 (op, data, addrbuf, buffsize, 'x'))"];
"1000760" [label="(Call,_6502_anal_esil_get_addr_pattern2 (op, data, addrbuf, buffsize, 'x'))"];
"1000705" [label="(Call,_6502_anal_esil_get_addr_pattern1 (op, data, addrbuf, buffsize))"];
"1000322" [label="(Block,)"];
"1001173" [label="(Call,data[1] + op->size)"];
"1001270" [label="(Call,data[1] | data[2] << 8)"];
"1001180" [label="(ControlStructure,else)"];
"1001162" -> "1001161"  [label="AST: "];
"1001162" -> "1001166"  [label="CFG: "];
"1001163" -> "1001162"  [label="AST: "];
"1001166" -> "1001162"  [label="AST: "];
"1001169" -> "1001162"  [label="CFG: "];
"1001183" -> "1001162"  [label="CFG: "];
"1001162" -> "1001715"  [label="DDG: data[1] <= 127"];
"1000267" -> "1001162"  [label="DDG: data"];
"1001162" -> "1001167"  [label="DDG: data[1]"];
"1001162" -> "1001171"  [label="DDG: data[1]"];
"1001162" -> "1001173"  [label="DDG: data[1]"];
"1001162" -> "1001188"  [label="DDG: data[1]"];
"1000267" -> "1000263"  [label="AST: "];
"1000267" -> "1001715"  [label="DDG: data"];
"1000267" -> "1000306"  [label="DDG: data"];
"1000267" -> "1000479"  [label="DDG: data"];
"1000267" -> "1000492"  [label="DDG: data"];
"1000267" -> "1000521"  [label="DDG: data"];
"1000267" -> "1000527"  [label="DDG: data"];
"1000267" -> "1000570"  [label="DDG: data"];
"1000267" -> "1000576"  [label="DDG: data"];
"1000267" -> "1000619"  [label="DDG: data"];
"1000267" -> "1000625"  [label="DDG: data"];
"1000267" -> "1000662"  [label="DDG: data"];
"1000267" -> "1000668"  [label="DDG: data"];
"1000267" -> "1000705"  [label="DDG: data"];
"1000267" -> "1000711"  [label="DDG: data"];
"1000267" -> "1000746"  [label="DDG: data"];
"1000267" -> "1000760"  [label="DDG: data"];
"1000267" -> "1000789"  [label="DDG: data"];
"1000267" -> "1000803"  [label="DDG: data"];
"1000267" -> "1000833"  [label="DDG: data"];
"1000267" -> "1000847"  [label="DDG: data"];
"1000267" -> "1000876"  [label="DDG: data"];
"1000267" -> "1000890"  [label="DDG: data"];
"1000267" -> "1000918"  [label="DDG: data"];
"1000267" -> "1000944"  [label="DDG: data"];
"1000267" -> "1000973"  [label="DDG: data"];
"1000267" -> "1000992"  [label="DDG: data"];
"1000267" -> "1001012"  [label="DDG: data"];
"1000267" -> "1001018"  [label="DDG: data"];
"1000267" -> "1001056"  [label="DDG: data"];
"1000267" -> "1001063"  [label="DDG: data"];
"1000267" -> "1001101"  [label="DDG: data"];
"1000267" -> "1001108"  [label="DDG: data"];
"1000267" -> "1001167"  [label="DDG: data"];
"1000267" -> "1001171"  [label="DDG: data"];
"1000267" -> "1001173"  [label="DDG: data"];
"1000267" -> "1001188"  [label="DDG: data"];
"1000267" -> "1001205"  [label="DDG: data"];
"1000267" -> "1001226"  [label="DDG: data"];
"1000267" -> "1001230"  [label="DDG: data"];
"1000267" -> "1001270"  [label="DDG: data"];
"1000267" -> "1001274"  [label="DDG: data"];
"1000267" -> "1001306"  [label="DDG: data"];
"1000267" -> "1001310"  [label="DDG: data"];
"1000267" -> "1001409"  [label="DDG: data"];
"1000267" -> "1001415"  [label="DDG: data"];
"1000267" -> "1001449"  [label="DDG: data"];
"1000267" -> "1001456"  [label="DDG: data"];
"1000267" -> "1001490"  [label="DDG: data"];
"1000267" -> "1001497"  [label="DDG: data"];
"1000267" -> "1001533"  [label="DDG: data"];
"1000267" -> "1001554"  [label="DDG: data"];
"1000267" -> "1001576"  [label="DDG: data"];
"1000267" -> "1001612"  [label="DDG: data"];
"1000267" -> "1001641"  [label="DDG: data"];
"1000267" -> "1001661"  [label="DDG: data"];
"1000267" -> "1001683"  [label="DDG: data"];
"1000267" -> "1001705"  [label="DDG: data"];
"1001167" -> "1001161"  [label="AST: "];
"1001167" -> "1001171"  [label="CFG: "];
"1001168" -> "1001167"  [label="AST: "];
"1001171" -> "1001167"  [label="AST: "];
"1001198" -> "1001167"  [label="CFG: "];
"1001167" -> "1001715"  [label="DDG: op->jump"];
"1001167" -> "1001715"  [label="DDG: addr + data[1] + op->size"];
"1000266" -> "1001167"  [label="DDG: addr"];
"1000283" -> "1001167"  [label="DDG: op->size"];
"1001171" -> "1001173"  [label="CFG: "];
"1001172" -> "1001171"  [label="AST: "];
"1001173" -> "1001171"  [label="AST: "];
"1001171" -> "1001715"  [label="DDG: data[1] + op->size"];
"1000266" -> "1001171"  [label="DDG: addr"];
"1000283" -> "1001171"  [label="DDG: op->size"];
"1001173" -> "1001177"  [label="CFG: "];
"1001174" -> "1001173"  [label="AST: "];
"1001177" -> "1001173"  [label="AST: "];
"1001173" -> "1001715"  [label="DDG: data[1]"];
"1000283" -> "1001173"  [label="DDG: op->size"];
"1001188" -> "1001187"  [label="AST: "];
"1001188" -> "1001190"  [label="CFG: "];
"1001189" -> "1001188"  [label="AST: "];
"1001190" -> "1001188"  [label="AST: "];
"1001194" -> "1001188"  [label="CFG: "];
"1001188" -> "1001715"  [label="DDG: data[1]"];
"1001188" -> "1001185"  [label="DDG: 256"];
"1001188" -> "1001185"  [label="DDG: data[1]"];
"1001188" -> "1001187"  [label="DDG: 256"];
"1001188" -> "1001187"  [label="DDG: data[1]"];
"1001185" -> "1001181"  [label="AST: "];
"1001185" -> "1001187"  [label="CFG: "];
"1001186" -> "1001185"  [label="AST: "];
"1001187" -> "1001185"  [label="AST: "];
"1001181" -> "1001185"  [label="CFG: "];
"1001185" -> "1001715"  [label="DDG: (256 - data[1]) + op->size"];
"1001185" -> "1001181"  [label="DDG: addr"];
"1001185" -> "1001181"  [label="DDG: (256 - data[1]) + op->size"];
"1000266" -> "1001185"  [label="DDG: addr"];
"1000283" -> "1001185"  [label="DDG: op->size"];
"1001185" -> "1001196"  [label="DDG: addr"];
"1001185" -> "1001200"  [label="DDG: addr"];
"1001181" -> "1001180"  [label="AST: "];
"1001182" -> "1001181"  [label="AST: "];
"1001198" -> "1001181"  [label="CFG: "];
"1001181" -> "1001715"  [label="DDG: addr - (256 - data[1]) + op->size"];
"1001181" -> "1001715"  [label="DDG: op->jump"];
"1001196" -> "1000322"  [label="AST: "];
"1001196" -> "1001200"  [label="CFG: "];
"1001197" -> "1001196"  [label="AST: "];
"1001200" -> "1001196"  [label="AST: "];
"1001206" -> "1001196"  [label="CFG: "];
"1001196" -> "1001715"  [label="DDG: op->fail"];
"1001196" -> "1001715"  [label="DDG: addr + op->size"];
"1000266" -> "1001196"  [label="DDG: addr"];
"1000283" -> "1001196"  [label="DDG: op->size"];
"1001200" -> "1001202"  [label="CFG: "];
"1001201" -> "1001200"  [label="AST: "];
"1001202" -> "1001200"  [label="AST: "];
"1001200" -> "1001715"  [label="DDG: op->size"];
"1001200" -> "1001715"  [label="DDG: addr"];
"1000266" -> "1001200"  [label="DDG: addr"];
"1000283" -> "1001200"  [label="DDG: op->size"];
"1001187" -> "1001193"  [label="CFG: "];
"1001193" -> "1001187"  [label="AST: "];
"1001187" -> "1001715"  [label="DDG: 256 - data[1]"];
"1000283" -> "1001187"  [label="DDG: op->size"];
}
