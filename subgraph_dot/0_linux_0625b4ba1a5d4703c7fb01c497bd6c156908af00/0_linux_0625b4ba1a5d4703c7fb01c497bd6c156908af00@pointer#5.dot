digraph "0_linux_0625b4ba1a5d4703c7fb01c497bd6c156908af00@pointer" {
"1000466" [label="(Call,init_attr->qp_type != IB_QPT_RAW_PACKET)"];
"1000311" [label="(Call,init_attr->qp_type != IB_QPT_RAW_PACKET)"];
"1000281" [label="(Call,init_attr->qp_type == IB_QPT_UD)"];
"1000165" [label="(Call,to_mlx5_st(init_attr->qp_type))"];
"1000381" [label="(Call,init_attr->qp_type != IB_QPT_RAW_PACKET)"];
"1000465" [label="(Call,init_attr->qp_type != IB_QPT_RAW_PACKET ||\n\t\t\t    !tunnel_offload_supported(mdev))"];
"1000495" [label="(Call,init_attr->qp_type != IB_QPT_UD)"];
"1000494" [label="(Call,init_attr->qp_type != IB_QPT_UD ||\n\t\t\t    (MLX5_CAP_GEN(dev->mdev, port_type) !=\n\t\t\t     MLX5_CAP_PORT_TYPE_IB) ||\n\t\t\t    !mlx5_get_flow_namespace(dev->mdev, MLX5_FLOW_NAMESPACE_BYPASS))"];
"1000546" [label="(Call,init_attr->qp_type == IB_QPT_RAW_PACKET)"];
"1000545" [label="(Call,init_attr->qp_type == IB_QPT_RAW_PACKET ||\n\t\tqp->flags & MLX5_IB_QP_UNDERLAY)"];
"1001262" [label="(Call,init_attr->qp_type == IB_QPT_RAW_PACKET ||\n\t    qp->flags & MLX5_IB_QP_UNDERLAY)"];
"1000748" [label="(Call,is_sqp(init_attr->qp_type))"];
"1000776" [label="(Call,init_attr->qp_type != MLX5_IB_QPT_REG_UMR)"];
"1000858" [label="(Call,is_connected(init_attr->qp_type))"];
"1000854" [label="(Call,qp->scat_cqe && is_connected(init_attr->qp_type))"];
"1001187" [label="(Call,init_attr->qp_type == IB_QPT_UD)"];
"1001186" [label="(Call,init_attr->qp_type == IB_QPT_UD &&\n\t    (init_attr->create_flags & IB_QP_CREATE_IPOIB_UD_LSO))"];
"1001233" [label="(Call,init_attr->qp_type != IB_QPT_RAW_PACKET)"];
"1001263" [label="(Call,init_attr->qp_type == IB_QPT_RAW_PACKET)"];
"1001336" [label="(Call,get_cqs(init_attr->qp_type, init_attr->send_cq, init_attr->recv_cq,\n\t\t&send_cq, &recv_cq))"];
"1001185" [label="(ControlStructure,if (init_attr->qp_type == IB_QPT_UD &&\n\t    (init_attr->create_flags & IB_QP_CREATE_IPOIB_UD_LSO)))"];
"1000470" [label="(Identifier,IB_QPT_RAW_PACKET)"];
"1000777" [label="(Call,init_attr->qp_type)"];
"1001194" [label="(Identifier,init_attr)"];
"1000775" [label="(ControlStructure,if (init_attr->qp_type != MLX5_IB_QPT_REG_UMR))"];
"1000466" [label="(Call,init_attr->qp_type != IB_QPT_RAW_PACKET)"];
"1000866" [label="(Identifier,rcqe_sz)"];
"1000315" [label="(Identifier,IB_QPT_RAW_PACKET)"];
"1001199" [label="(Identifier,qpc)"];
"1000483" [label="(Identifier,qp)"];
"1000500" [label="(Call,(MLX5_CAP_GEN(dev->mdev, port_type) !=\n\t\t\t     MLX5_CAP_PORT_TYPE_IB) ||\n\t\t\t    !mlx5_get_flow_namespace(dev->mdev, MLX5_FLOW_NAMESPACE_BYPASS))"];
"1000495" [label="(Call,init_attr->qp_type != IB_QPT_UD)"];
"1000545" [label="(Call,init_attr->qp_type == IB_QPT_RAW_PACKET ||\n\t\tqp->flags & MLX5_IB_QP_UNDERLAY)"];
"1000464" [label="(ControlStructure,if (init_attr->qp_type != IB_QPT_RAW_PACKET ||\n\t\t\t    !tunnel_offload_supported(mdev)))"];
"1001262" [label="(Call,init_attr->qp_type == IB_QPT_RAW_PACKET ||\n\t    qp->flags & MLX5_IB_QP_UNDERLAY)"];
"1001428" [label="(MethodReturn,static int)"];
"1000312" [label="(Call,init_attr->qp_type)"];
"1001264" [label="(Call,init_attr->qp_type)"];
"1000553" [label="(Identifier,qp)"];
"1000473" [label="(Identifier,mdev)"];
"1000385" [label="(Identifier,IB_QPT_RAW_PACKET)"];
"1000285" [label="(Identifier,IB_QPT_UD)"];
"1000282" [label="(Call,init_attr->qp_type)"];
"1000867" [label="(Call,mlx5_ib_get_cqe_size(dev, init_attr->recv_cq))"];
"1000560" [label="(Identifier,qp)"];
"1000516" [label="(Identifier,dev)"];
"1000476" [label="(Identifier,dev)"];
"1000858" [label="(Call,is_connected(init_attr->qp_type))"];
"1001248" [label="(Identifier,qp)"];
"1001187" [label="(Call,init_attr->qp_type == IB_QPT_UD)"];
"1000465" [label="(Call,init_attr->qp_type != IB_QPT_RAW_PACKET ||\n\t\t\t    !tunnel_offload_supported(mdev))"];
"1001232" [label="(ControlStructure,if (init_attr->qp_type != IB_QPT_RAW_PACKET))"];
"1000311" [label="(Call,init_attr->qp_type != IB_QPT_RAW_PACKET)"];
"1000551" [label="(Call,qp->flags & MLX5_IB_QP_UNDERLAY)"];
"1000754" [label="(Identifier,qp)"];
"1000550" [label="(Identifier,IB_QPT_RAW_PACKET)"];
"1000776" [label="(Call,init_attr->qp_type != MLX5_IB_QPT_REG_UMR)"];
"1000165" [label="(Call,to_mlx5_st(init_attr->qp_type))"];
"1001188" [label="(Call,init_attr->qp_type)"];
"1000853" [label="(ControlStructure,if (qp->scat_cqe && is_connected(init_attr->qp_type)))"];
"1000499" [label="(Identifier,IB_QPT_UD)"];
"1000567" [label="(Identifier,qp)"];
"1001234" [label="(Call,init_attr->qp_type)"];
"1001192" [label="(Call,init_attr->create_flags & IB_QP_CREATE_IPOIB_UD_LSO)"];
"1001348" [label="(Call,&recv_cq)"];
"1000782" [label="(Identifier,qpc)"];
"1001343" [label="(Call,init_attr->recv_cq)"];
"1000855" [label="(Call,qp->scat_cqe)"];
"1000467" [label="(Call,init_attr->qp_type)"];
"1000747" [label="(ControlStructure,if (is_sqp(init_attr->qp_type)))"];
"1000382" [label="(Call,init_attr->qp_type)"];
"1000368" [label="(Call,!(MLX5_CAP_GEN(dev->mdev, eth_net_offloads) &&\n\t\t      MLX5_CAP_ETH(dev->mdev, vlan_cap)) ||\n\t\t    (init_attr->qp_type != IB_QPT_RAW_PACKET))"];
"1000919" [label="(Identifier,qp)"];
"1001336" [label="(Call,get_cqs(init_attr->qp_type, init_attr->send_cq, init_attr->recv_cq,\n\t\t&send_cq, &recv_cq))"];
"1000310" [label="(ControlStructure,if (init_attr->qp_type != IB_QPT_RAW_PACKET))"];
"1000859" [label="(Call,init_attr->qp_type)"];
"1000547" [label="(Call,init_attr->qp_type)"];
"1000748" [label="(Call,is_sqp(init_attr->qp_type))"];
"1001353" [label="(Identifier,dev)"];
"1000874" [label="(Call,mlx5_ib_get_cqe_size(dev, init_attr->send_cq))"];
"1001279" [label="(Identifier,qp)"];
"1001186" [label="(Call,init_attr->qp_type == IB_QPT_UD &&\n\t    (init_attr->create_flags & IB_QP_CREATE_IPOIB_UD_LSO))"];
"1000493" [label="(ControlStructure,if (init_attr->qp_type != IB_QPT_UD ||\n\t\t\t    (MLX5_CAP_GEN(dev->mdev, port_type) !=\n\t\t\t     MLX5_CAP_PORT_TYPE_IB) ||\n\t\t\t    !mlx5_get_flow_namespace(dev->mdev, MLX5_FLOW_NAMESPACE_BYPASS)))"];
"1000288" [label="(Identifier,init_attr)"];
"1001304" [label="(Identifier,err)"];
"1000446" [label="(Call,qp->scat_cqe = !!(ucmd.flags & MLX5_QP_FLAG_SCATTER_CQE))"];
"1000166" [label="(Call,init_attr->qp_type)"];
"1000504" [label="(Identifier,dev)"];
"1000494" [label="(Call,init_attr->qp_type != IB_QPT_UD ||\n\t\t\t    (MLX5_CAP_GEN(dev->mdev, port_type) !=\n\t\t\t     MLX5_CAP_PORT_TYPE_IB) ||\n\t\t\t    !mlx5_get_flow_namespace(dev->mdev, MLX5_FLOW_NAMESPACE_BYPASS))"];
"1000749" [label="(Call,init_attr->qp_type)"];
"1001159" [label="(Call,to_mcq(init_attr->recv_cq))"];
"1001337" [label="(Call,init_attr->qp_type)"];
"1001261" [label="(ControlStructure,if (init_attr->qp_type == IB_QPT_RAW_PACKET ||\n\t    qp->flags & MLX5_IB_QP_UNDERLAY))"];
"1000381" [label="(Call,init_attr->qp_type != IB_QPT_RAW_PACKET)"];
"1001267" [label="(Identifier,IB_QPT_RAW_PACKET)"];
"1000328" [label="(Identifier,dev)"];
"1000780" [label="(Identifier,MLX5_IB_QPT_REG_UMR)"];
"1000854" [label="(Call,qp->scat_cqe && is_connected(init_attr->qp_type))"];
"1001143" [label="(Call,to_mcq(init_attr->send_cq))"];
"1000471" [label="(Call,!tunnel_offload_supported(mdev))"];
"1000163" [label="(Call,mlx5_st = to_mlx5_st(init_attr->qp_type))"];
"1000281" [label="(Call,init_attr->qp_type == IB_QPT_UD)"];
"1001237" [label="(Identifier,IB_QPT_RAW_PACKET)"];
"1000496" [label="(Call,init_attr->qp_type)"];
"1000318" [label="(Identifier,dev)"];
"1000796" [label="(Identifier,qpc)"];
"1001346" [label="(Call,&send_cq)"];
"1001263" [label="(Call,init_attr->qp_type == IB_QPT_RAW_PACKET)"];
"1000280" [label="(Call,init_attr->qp_type == IB_QPT_UD &&\n\t    (init_attr->create_flags & IB_QP_CREATE_IPOIB_UD_LSO))"];
"1000546" [label="(Call,init_attr->qp_type == IB_QPT_RAW_PACKET)"];
"1001233" [label="(Call,init_attr->qp_type != IB_QPT_RAW_PACKET)"];
"1001191" [label="(Identifier,IB_QPT_UD)"];
"1000760" [label="(Identifier,qpc)"];
"1000523" [label="(Identifier,qp)"];
"1001268" [label="(Call,qp->flags & MLX5_IB_QP_UNDERLAY)"];
"1000544" [label="(Call,(init_attr->qp_type == IB_QPT_RAW_PACKET ||\n\t\tqp->flags & MLX5_IB_QP_UNDERLAY) ?\n\t       &qp->raw_packet_qp.rq.base :\n\t       &qp->trans_qp.base)"];
"1001211" [label="(Identifier,init_attr)"];
"1001340" [label="(Call,init_attr->send_cq)"];
"1000111" [label="(Block,)"];
"1001270" [label="(Identifier,qp)"];
"1001240" [label="(Identifier,qpc)"];
"1000466" -> "1000465"  [label="AST: "];
"1000466" -> "1000470"  [label="CFG: "];
"1000467" -> "1000466"  [label="AST: "];
"1000470" -> "1000466"  [label="AST: "];
"1000473" -> "1000466"  [label="CFG: "];
"1000465" -> "1000466"  [label="CFG: "];
"1000466" -> "1001428"  [label="DDG: init_attr->qp_type"];
"1000466" -> "1001428"  [label="DDG: IB_QPT_RAW_PACKET"];
"1000466" -> "1000465"  [label="DDG: init_attr->qp_type"];
"1000466" -> "1000465"  [label="DDG: IB_QPT_RAW_PACKET"];
"1000311" -> "1000466"  [label="DDG: init_attr->qp_type"];
"1000311" -> "1000466"  [label="DDG: IB_QPT_RAW_PACKET"];
"1000281" -> "1000466"  [label="DDG: init_attr->qp_type"];
"1000381" -> "1000466"  [label="DDG: init_attr->qp_type"];
"1000381" -> "1000466"  [label="DDG: IB_QPT_RAW_PACKET"];
"1000466" -> "1000495"  [label="DDG: init_attr->qp_type"];
"1000466" -> "1000546"  [label="DDG: init_attr->qp_type"];
"1000466" -> "1000546"  [label="DDG: IB_QPT_RAW_PACKET"];
"1000311" -> "1000310"  [label="AST: "];
"1000311" -> "1000315"  [label="CFG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000315" -> "1000311"  [label="AST: "];
"1000318" -> "1000311"  [label="CFG: "];
"1000328" -> "1000311"  [label="CFG: "];
"1000311" -> "1001428"  [label="DDG: init_attr->qp_type"];
"1000311" -> "1001428"  [label="DDG: IB_QPT_RAW_PACKET"];
"1000311" -> "1001428"  [label="DDG: init_attr->qp_type != IB_QPT_RAW_PACKET"];
"1000281" -> "1000311"  [label="DDG: init_attr->qp_type"];
"1000311" -> "1000368"  [label="DDG: init_attr->qp_type != IB_QPT_RAW_PACKET"];
"1000311" -> "1000381"  [label="DDG: init_attr->qp_type"];
"1000311" -> "1000381"  [label="DDG: IB_QPT_RAW_PACKET"];
"1000311" -> "1000495"  [label="DDG: init_attr->qp_type"];
"1000311" -> "1000546"  [label="DDG: init_attr->qp_type"];
"1000311" -> "1000546"  [label="DDG: IB_QPT_RAW_PACKET"];
"1000281" -> "1000280"  [label="AST: "];
"1000281" -> "1000285"  [label="CFG: "];
"1000282" -> "1000281"  [label="AST: "];
"1000285" -> "1000281"  [label="AST: "];
"1000288" -> "1000281"  [label="CFG: "];
"1000280" -> "1000281"  [label="CFG: "];
"1000281" -> "1001428"  [label="DDG: IB_QPT_UD"];
"1000281" -> "1001428"  [label="DDG: init_attr->qp_type"];
"1000281" -> "1000280"  [label="DDG: init_attr->qp_type"];
"1000281" -> "1000280"  [label="DDG: IB_QPT_UD"];
"1000165" -> "1000281"  [label="DDG: init_attr->qp_type"];
"1000281" -> "1000381"  [label="DDG: init_attr->qp_type"];
"1000281" -> "1000495"  [label="DDG: init_attr->qp_type"];
"1000281" -> "1000495"  [label="DDG: IB_QPT_UD"];
"1000281" -> "1000546"  [label="DDG: init_attr->qp_type"];
"1000281" -> "1001187"  [label="DDG: IB_QPT_UD"];
"1000165" -> "1000163"  [label="AST: "];
"1000165" -> "1000166"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000163" -> "1000165"  [label="CFG: "];
"1000165" -> "1001428"  [label="DDG: init_attr->qp_type"];
"1000165" -> "1000163"  [label="DDG: init_attr->qp_type"];
"1000381" -> "1000368"  [label="AST: "];
"1000381" -> "1000385"  [label="CFG: "];
"1000382" -> "1000381"  [label="AST: "];
"1000385" -> "1000381"  [label="AST: "];
"1000368" -> "1000381"  [label="CFG: "];
"1000381" -> "1001428"  [label="DDG: init_attr->qp_type"];
"1000381" -> "1001428"  [label="DDG: IB_QPT_RAW_PACKET"];
"1000381" -> "1000368"  [label="DDG: init_attr->qp_type"];
"1000381" -> "1000368"  [label="DDG: IB_QPT_RAW_PACKET"];
"1000381" -> "1000495"  [label="DDG: init_attr->qp_type"];
"1000381" -> "1000546"  [label="DDG: init_attr->qp_type"];
"1000381" -> "1000546"  [label="DDG: IB_QPT_RAW_PACKET"];
"1000465" -> "1000464"  [label="AST: "];
"1000465" -> "1000471"  [label="CFG: "];
"1000471" -> "1000465"  [label="AST: "];
"1000476" -> "1000465"  [label="CFG: "];
"1000483" -> "1000465"  [label="CFG: "];
"1000465" -> "1001428"  [label="DDG: init_attr->qp_type != IB_QPT_RAW_PACKET ||\n\t\t\t    !tunnel_offload_supported(mdev)"];
"1000465" -> "1001428"  [label="DDG: !tunnel_offload_supported(mdev)"];
"1000465" -> "1001428"  [label="DDG: init_attr->qp_type != IB_QPT_RAW_PACKET"];
"1000471" -> "1000465"  [label="DDG: tunnel_offload_supported(mdev)"];
"1000495" -> "1000494"  [label="AST: "];
"1000495" -> "1000499"  [label="CFG: "];
"1000496" -> "1000495"  [label="AST: "];
"1000499" -> "1000495"  [label="AST: "];
"1000504" -> "1000495"  [label="CFG: "];
"1000494" -> "1000495"  [label="CFG: "];
"1000495" -> "1001428"  [label="DDG: init_attr->qp_type"];
"1000495" -> "1001428"  [label="DDG: IB_QPT_UD"];
"1000495" -> "1000494"  [label="DDG: init_attr->qp_type"];
"1000495" -> "1000494"  [label="DDG: IB_QPT_UD"];
"1000495" -> "1000546"  [label="DDG: init_attr->qp_type"];
"1000495" -> "1001187"  [label="DDG: IB_QPT_UD"];
"1000494" -> "1000493"  [label="AST: "];
"1000494" -> "1000500"  [label="CFG: "];
"1000500" -> "1000494"  [label="AST: "];
"1000516" -> "1000494"  [label="CFG: "];
"1000523" -> "1000494"  [label="CFG: "];
"1000494" -> "1001428"  [label="DDG: init_attr->qp_type != IB_QPT_UD ||\n\t\t\t    (MLX5_CAP_GEN(dev->mdev, port_type) !=\n\t\t\t     MLX5_CAP_PORT_TYPE_IB) ||\n\t\t\t    !mlx5_get_flow_namespace(dev->mdev, MLX5_FLOW_NAMESPACE_BYPASS)"];
"1000494" -> "1001428"  [label="DDG: init_attr->qp_type != IB_QPT_UD"];
"1000494" -> "1001428"  [label="DDG: (MLX5_CAP_GEN(dev->mdev, port_type) !=\n\t\t\t     MLX5_CAP_PORT_TYPE_IB) ||\n\t\t\t    !mlx5_get_flow_namespace(dev->mdev, MLX5_FLOW_NAMESPACE_BYPASS)"];
"1000500" -> "1000494"  [label="DDG: MLX5_CAP_GEN(dev->mdev, port_type) !=\n\t\t\t     MLX5_CAP_PORT_TYPE_IB"];
"1000500" -> "1000494"  [label="DDG: !mlx5_get_flow_namespace(dev->mdev, MLX5_FLOW_NAMESPACE_BYPASS)"];
"1000546" -> "1000545"  [label="AST: "];
"1000546" -> "1000550"  [label="CFG: "];
"1000547" -> "1000546"  [label="AST: "];
"1000550" -> "1000546"  [label="AST: "];
"1000553" -> "1000546"  [label="CFG: "];
"1000545" -> "1000546"  [label="CFG: "];
"1000546" -> "1001428"  [label="DDG: IB_QPT_RAW_PACKET"];
"1000546" -> "1001428"  [label="DDG: init_attr->qp_type"];
"1000546" -> "1000545"  [label="DDG: init_attr->qp_type"];
"1000546" -> "1000545"  [label="DDG: IB_QPT_RAW_PACKET"];
"1000546" -> "1000748"  [label="DDG: init_attr->qp_type"];
"1000546" -> "1001233"  [label="DDG: IB_QPT_RAW_PACKET"];
"1000546" -> "1001263"  [label="DDG: IB_QPT_RAW_PACKET"];
"1000545" -> "1000544"  [label="AST: "];
"1000545" -> "1000551"  [label="CFG: "];
"1000551" -> "1000545"  [label="AST: "];
"1000560" -> "1000545"  [label="CFG: "];
"1000567" -> "1000545"  [label="CFG: "];
"1000545" -> "1001428"  [label="DDG: init_attr->qp_type == IB_QPT_RAW_PACKET"];
"1000545" -> "1001428"  [label="DDG: qp->flags & MLX5_IB_QP_UNDERLAY"];
"1000551" -> "1000545"  [label="DDG: qp->flags"];
"1000551" -> "1000545"  [label="DDG: MLX5_IB_QP_UNDERLAY"];
"1000545" -> "1001262"  [label="DDG: qp->flags & MLX5_IB_QP_UNDERLAY"];
"1001262" -> "1001261"  [label="AST: "];
"1001262" -> "1001263"  [label="CFG: "];
"1001262" -> "1001268"  [label="CFG: "];
"1001263" -> "1001262"  [label="AST: "];
"1001268" -> "1001262"  [label="AST: "];
"1001279" -> "1001262"  [label="CFG: "];
"1001304" -> "1001262"  [label="CFG: "];
"1001262" -> "1001428"  [label="DDG: qp->flags & MLX5_IB_QP_UNDERLAY"];
"1001262" -> "1001428"  [label="DDG: init_attr->qp_type == IB_QPT_RAW_PACKET ||\n\t    qp->flags & MLX5_IB_QP_UNDERLAY"];
"1001262" -> "1001428"  [label="DDG: init_attr->qp_type == IB_QPT_RAW_PACKET"];
"1001263" -> "1001262"  [label="DDG: init_attr->qp_type"];
"1001263" -> "1001262"  [label="DDG: IB_QPT_RAW_PACKET"];
"1001268" -> "1001262"  [label="DDG: qp->flags"];
"1001268" -> "1001262"  [label="DDG: MLX5_IB_QP_UNDERLAY"];
"1000748" -> "1000747"  [label="AST: "];
"1000748" -> "1000749"  [label="CFG: "];
"1000749" -> "1000748"  [label="AST: "];
"1000754" -> "1000748"  [label="CFG: "];
"1000760" -> "1000748"  [label="CFG: "];
"1000748" -> "1001428"  [label="DDG: is_sqp(init_attr->qp_type)"];
"1000748" -> "1000776"  [label="DDG: init_attr->qp_type"];
"1000776" -> "1000775"  [label="AST: "];
"1000776" -> "1000780"  [label="CFG: "];
"1000777" -> "1000776"  [label="AST: "];
"1000780" -> "1000776"  [label="AST: "];
"1000782" -> "1000776"  [label="CFG: "];
"1000796" -> "1000776"  [label="CFG: "];
"1000776" -> "1001428"  [label="DDG: MLX5_IB_QPT_REG_UMR"];
"1000776" -> "1001428"  [label="DDG: init_attr->qp_type != MLX5_IB_QPT_REG_UMR"];
"1000776" -> "1000858"  [label="DDG: init_attr->qp_type"];
"1000776" -> "1001187"  [label="DDG: init_attr->qp_type"];
"1000858" -> "1000854"  [label="AST: "];
"1000858" -> "1000859"  [label="CFG: "];
"1000859" -> "1000858"  [label="AST: "];
"1000854" -> "1000858"  [label="CFG: "];
"1000858" -> "1000854"  [label="DDG: init_attr->qp_type"];
"1000858" -> "1001187"  [label="DDG: init_attr->qp_type"];
"1000854" -> "1000853"  [label="AST: "];
"1000854" -> "1000855"  [label="CFG: "];
"1000855" -> "1000854"  [label="AST: "];
"1000866" -> "1000854"  [label="CFG: "];
"1000919" -> "1000854"  [label="CFG: "];
"1000854" -> "1001428"  [label="DDG: is_connected(init_attr->qp_type)"];
"1000854" -> "1001428"  [label="DDG: qp->scat_cqe"];
"1000854" -> "1001428"  [label="DDG: qp->scat_cqe && is_connected(init_attr->qp_type)"];
"1000446" -> "1000854"  [label="DDG: qp->scat_cqe"];
"1001187" -> "1001186"  [label="AST: "];
"1001187" -> "1001191"  [label="CFG: "];
"1001188" -> "1001187"  [label="AST: "];
"1001191" -> "1001187"  [label="AST: "];
"1001194" -> "1001187"  [label="CFG: "];
"1001186" -> "1001187"  [label="CFG: "];
"1001187" -> "1001428"  [label="DDG: init_attr->qp_type"];
"1001187" -> "1001428"  [label="DDG: IB_QPT_UD"];
"1001187" -> "1001186"  [label="DDG: init_attr->qp_type"];
"1001187" -> "1001186"  [label="DDG: IB_QPT_UD"];
"1001187" -> "1001233"  [label="DDG: init_attr->qp_type"];
"1001187" -> "1001263"  [label="DDG: init_attr->qp_type"];
"1001186" -> "1001185"  [label="AST: "];
"1001186" -> "1001192"  [label="CFG: "];
"1001192" -> "1001186"  [label="AST: "];
"1001199" -> "1001186"  [label="CFG: "];
"1001211" -> "1001186"  [label="CFG: "];
"1001186" -> "1001428"  [label="DDG: init_attr->qp_type == IB_QPT_UD &&\n\t    (init_attr->create_flags & IB_QP_CREATE_IPOIB_UD_LSO)"];
"1001186" -> "1001428"  [label="DDG: init_attr->create_flags & IB_QP_CREATE_IPOIB_UD_LSO"];
"1001186" -> "1001428"  [label="DDG: init_attr->qp_type == IB_QPT_UD"];
"1000280" -> "1001186"  [label="DDG: init_attr->create_flags & IB_QP_CREATE_IPOIB_UD_LSO"];
"1001192" -> "1001186"  [label="DDG: init_attr->create_flags"];
"1001192" -> "1001186"  [label="DDG: IB_QP_CREATE_IPOIB_UD_LSO"];
"1001233" -> "1001232"  [label="AST: "];
"1001233" -> "1001237"  [label="CFG: "];
"1001234" -> "1001233"  [label="AST: "];
"1001237" -> "1001233"  [label="AST: "];
"1001240" -> "1001233"  [label="CFG: "];
"1001248" -> "1001233"  [label="CFG: "];
"1001233" -> "1001428"  [label="DDG: init_attr->qp_type != IB_QPT_RAW_PACKET"];
"1001233" -> "1001428"  [label="DDG: IB_QPT_RAW_PACKET"];
"1001233" -> "1001428"  [label="DDG: init_attr->qp_type"];
"1001233" -> "1001263"  [label="DDG: init_attr->qp_type"];
"1001233" -> "1001263"  [label="DDG: IB_QPT_RAW_PACKET"];
"1001263" -> "1001267"  [label="CFG: "];
"1001264" -> "1001263"  [label="AST: "];
"1001267" -> "1001263"  [label="AST: "];
"1001270" -> "1001263"  [label="CFG: "];
"1001263" -> "1001428"  [label="DDG: IB_QPT_RAW_PACKET"];
"1001263" -> "1001428"  [label="DDG: init_attr->qp_type"];
"1001263" -> "1001336"  [label="DDG: init_attr->qp_type"];
"1001336" -> "1000111"  [label="AST: "];
"1001336" -> "1001348"  [label="CFG: "];
"1001337" -> "1001336"  [label="AST: "];
"1001340" -> "1001336"  [label="AST: "];
"1001343" -> "1001336"  [label="AST: "];
"1001346" -> "1001336"  [label="AST: "];
"1001348" -> "1001336"  [label="AST: "];
"1001353" -> "1001336"  [label="CFG: "];
"1001336" -> "1001428"  [label="DDG: init_attr->qp_type"];
"1001336" -> "1001428"  [label="DDG: init_attr->recv_cq"];
"1001336" -> "1001428"  [label="DDG: &recv_cq"];
"1001336" -> "1001428"  [label="DDG: &send_cq"];
"1001336" -> "1001428"  [label="DDG: get_cqs(init_attr->qp_type, init_attr->send_cq, init_attr->recv_cq,\n\t\t&send_cq, &recv_cq)"];
"1001336" -> "1001428"  [label="DDG: init_attr->send_cq"];
"1000874" -> "1001336"  [label="DDG: init_attr->send_cq"];
"1001143" -> "1001336"  [label="DDG: init_attr->send_cq"];
"1001159" -> "1001336"  [label="DDG: init_attr->recv_cq"];
"1000867" -> "1001336"  [label="DDG: init_attr->recv_cq"];
}
