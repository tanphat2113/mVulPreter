digraph "0_linux_0625b4ba1a5d4703c7fb01c497bd6c156908af00@pointer" {
"1000679" [label="(Call,mlx5_ib_dbg(dev, \"user-space is not allowed to create UD QPs spoofing as QP1\n\"))"];
"1000622" [label="(Call,mlx5_ib_dbg(dev, \"requested sq_wqe_count (%d)\n\", ucmd.sq_wqe_count))"];
"1000578" [label="(Call,set_rq_size(dev, &init_attr->cap, qp->has_rq,\n\t\t\t  qp, (pd && pd->uobject) ? &ucmd : NULL))"];
"1000106" [label="(MethodParameterIn,struct mlx5_ib_dev *dev)"];
"1000570" [label="(Call,qp->has_rq = qp_has_rq(init_attr))"];
"1000574" [label="(Call,qp_has_rq(init_attr))"];
"1000108" [label="(MethodParameterIn,struct ib_qp_init_attr *init_attr)"];
"1000110" [label="(MethodParameterIn,struct mlx5_ib_qp *qp)"];
"1000417" [label="(Call,get_qp_user_index(to_mucontext(pd->uobject->context),\n\t\t\t\t\t&ucmd, udata->inlen, &uidx))"];
"1000418" [label="(Call,to_mucontext(pd->uobject->context))"];
"1000402" [label="(Call,ib_copy_from_udata(&ucmd, udata, sizeof(ucmd)))"];
"1000109" [label="(MethodParameterIn,struct ib_udata *udata)"];
"1000623" [label="(Identifier,dev)"];
"1000210" [label="(Call,mlx5_ib_dbg(dev, \"block multicast loopback isn't supported\n\"))"];
"1000108" [label="(MethodParameterIn,struct ib_qp_init_attr *init_attr)"];
"1000867" [label="(Call,mlx5_ib_get_cqe_size(dev, init_attr->recv_cq))"];
"1000402" [label="(Call,ib_copy_from_udata(&ucmd, udata, sizeof(ucmd)))"];
"1000600" [label="(Call,mlx5_ib_dbg(dev, \"err %d\n\", err))"];
"1000632" [label="(Identifier,ucmd)"];
"1000662" [label="(Call,mlx5_ib_dbg(dev, \"requested sq_wqe_count (%d) > max allowed (%d)\n\",\n\t\t\t\t\t    ucmd.sq_wqe_count, max_wqes))"];
"1000584" [label="(Call,qp->has_rq)"];
"1000625" [label="(Call,ucmd.sq_wqe_count)"];
"1000576" [label="(Call,err = set_rq_size(dev, &init_attr->cap, qp->has_rq,\n\t\t\t  qp, (pd && pd->uobject) ? &ucmd : NULL))"];
"1000656" [label="(Call,ucmd.sq_wqe_count > max_wqes)"];
"1000681" [label="(Literal,\"user-space is not allowed to create UD QPs spoofing as QP1\n\")"];
"1000574" [label="(Call,qp_has_rq(init_attr))"];
"1000409" [label="(Call,mlx5_ib_dbg(dev, \"copy failed\n\"))"];
"1000406" [label="(Call,sizeof(ucmd))"];
"1000297" [label="(Call,mlx5_ib_dbg(dev, \"ipoib UD lso qp isn't supported\n\"))"];
"1000874" [label="(Call,mlx5_ib_get_cqe_size(dev, init_attr->send_cq))"];
"1000401" [label="(ControlStructure,if (ib_copy_from_udata(&ucmd, udata, sizeof(ucmd))))"];
"1000424" [label="(Call,&ucmd)"];
"1000110" [label="(MethodParameterIn,struct mlx5_ib_qp *qp)"];
"1000948" [label="(Call,get_rx_type(qp, init_attr))"];
"1000579" [label="(Identifier,dev)"];
"1000317" [label="(Call,mlx5_ib_dbg(dev, \"Scatter FCS is supported only for Raw Packet QPs\"))"];
"1000403" [label="(Call,&ucmd)"];
"1000106" [label="(MethodParameterIn,struct mlx5_ib_dev *dev)"];
"1000419" [label="(Call,pd->uobject->context)"];
"1000416" [label="(Identifier,err)"];
"1000680" [label="(Identifier,dev)"];
"1000622" [label="(Call,mlx5_ib_dbg(dev, \"requested sq_wqe_count (%d)\n\", ucmd.sq_wqe_count))"];
"1000613" [label="(Block,)"];
"1000580" [label="(Call,&init_attr->cap)"];
"1000710" [label="(Call,create_kernel_qp(dev, init_attr, qp, &in, &inlen,\n\t\t\t\t\t       base))"];
"1001295" [label="(Call,create_raw_packet_qp(dev, qp, in, inlen, pd))"];
"1001223" [label="(Call,mlx5_ib_dbg(dev, \"scatter end padding is not supported\n\"))"];
"1000702" [label="(Call,mlx5_ib_dbg(dev, \"err %d\n\", err))"];
"1001324" [label="(Call,base->container_mibqp = qp)"];
"1000418" [label="(Call,to_mucontext(pd->uobject->context))"];
"1000678" [label="(Block,)"];
"1000687" [label="(Call,create_user_qp(dev, pd, qp, udata, init_attr, &in,\n\t\t\t\t\t     &resp, &inlen, base))"];
"1000587" [label="(Identifier,qp)"];
"1000417" [label="(Call,get_qp_user_index(to_mucontext(pd->uobject->context),\n\t\t\t\t\t&ucmd, udata->inlen, &uidx))"];
"1001287" [label="(Call,raw_packet_qp_copy_info(qp, &qp->raw_packet_qp))"];
"1000405" [label="(Identifier,udata)"];
"1000624" [label="(Literal,\"requested sq_wqe_count (%d)\n\")"];
"1000109" [label="(MethodParameterIn,struct ib_udata *udata)"];
"1000577" [label="(Identifier,err)"];
"1000425" [label="(Identifier,ucmd)"];
"1000588" [label="(Call,(pd && pd->uobject) ? &ucmd : NULL)"];
"1000578" [label="(Call,set_rq_size(dev, &init_attr->cap, qp->has_rq,\n\t\t\t  qp, (pd && pd->uobject) ? &ucmd : NULL))"];
"1000515" [label="(Call,mlx5_ib_dbg(dev, \"Source QP option isn't supported\n\"))"];
"1000240" [label="(Call,mlx5_ib_dbg(dev, \"cross-channel isn't supported\n\"))"];
"1001428" [label="(MethodReturn,static int)"];
"1000679" [label="(Call,mlx5_ib_dbg(dev, \"user-space is not allowed to create UD QPs spoofing as QP1\n\"))"];
"1001408" [label="(Call,destroy_qp_user(dev, pd, qp, base))"];
"1000475" [label="(Call,mlx5_ib_dbg(dev, \"Tunnel offload isn't supported\n\"))"];
"1000415" [label="(Call,err = get_qp_user_index(to_mucontext(pd->uobject->context),\n\t\t\t\t\t&ucmd, udata->inlen, &uidx))"];
"1000426" [label="(Call,udata->inlen)"];
"1000575" [label="(Identifier,init_attr)"];
"1000111" [label="(Block,)"];
"1000570" [label="(Call,qp->has_rq = qp_has_rq(init_attr))"];
"1001318" [label="(Call,mlx5_ib_dbg(dev, \"create qp failed\n\"))"];
"1000338" [label="(Call,mlx5_ib_dbg(dev, \"Scatter FCS isn't supported\n\"))"];
"1000721" [label="(Call,mlx5_ib_dbg(dev, \"err %d\n\", err))"];
"1000684" [label="(Identifier,EINVAL)"];
"1000189" [label="(Call,create_rss_raw_qp_tir(dev, qp, pd, init_attr, udata))"];
"1000429" [label="(Call,&uidx)"];
"1000649" [label="(Call,mlx5_ib_dbg(dev, \"invalid rq params\n\"))"];
"1000410" [label="(Identifier,dev)"];
"1000571" [label="(Call,qp->has_rq)"];
"1001420" [label="(Call,destroy_qp_kernel(dev, qp))"];
"1000182" [label="(Call,!udata)"];
"1000679" -> "1000678"  [label="AST: "];
"1000679" -> "1000681"  [label="CFG: "];
"1000680" -> "1000679"  [label="AST: "];
"1000681" -> "1000679"  [label="AST: "];
"1000684" -> "1000679"  [label="CFG: "];
"1000679" -> "1001428"  [label="DDG: "];
"1000679" -> "1001428"  [label="DDG: "];
"1000622" -> "1000679"  [label="DDG: "];
"1000106" -> "1000679"  [label="DDG: "];
"1000622" -> "1000613"  [label="AST: "];
"1000622" -> "1000625"  [label="CFG: "];
"1000623" -> "1000622"  [label="AST: "];
"1000624" -> "1000622"  [label="AST: "];
"1000625" -> "1000622"  [label="AST: "];
"1000632" -> "1000622"  [label="CFG: "];
"1000622" -> "1001428"  [label="DDG: "];
"1000622" -> "1001428"  [label="DDG: "];
"1000578" -> "1000622"  [label="DDG: "];
"1000106" -> "1000622"  [label="DDG: "];
"1000622" -> "1000649"  [label="DDG: "];
"1000622" -> "1000656"  [label="DDG: "];
"1000622" -> "1000662"  [label="DDG: "];
"1000622" -> "1000687"  [label="DDG: "];
"1000578" -> "1000576"  [label="AST: "];
"1000578" -> "1000588"  [label="CFG: "];
"1000579" -> "1000578"  [label="AST: "];
"1000580" -> "1000578"  [label="AST: "];
"1000584" -> "1000578"  [label="AST: "];
"1000587" -> "1000578"  [label="AST: "];
"1000588" -> "1000578"  [label="AST: "];
"1000576" -> "1000578"  [label="CFG: "];
"1000578" -> "1001428"  [label="DDG: "];
"1000578" -> "1001428"  [label="DDG: "];
"1000578" -> "1001428"  [label="DDG: "];
"1000578" -> "1001428"  [label="DDG: "];
"1000578" -> "1001428"  [label="DDG: "];
"1000578" -> "1000576"  [label="DDG: "];
"1000578" -> "1000576"  [label="DDG: "];
"1000578" -> "1000576"  [label="DDG: "];
"1000578" -> "1000576"  [label="DDG: "];
"1000578" -> "1000576"  [label="DDG: "];
"1000106" -> "1000578"  [label="DDG: "];
"1000570" -> "1000578"  [label="DDG: "];
"1000110" -> "1000578"  [label="DDG: "];
"1000417" -> "1000578"  [label="DDG: "];
"1000578" -> "1000600"  [label="DDG: "];
"1000578" -> "1000687"  [label="DDG: "];
"1000578" -> "1000710"  [label="DDG: "];
"1000578" -> "1000710"  [label="DDG: "];
"1000578" -> "1000867"  [label="DDG: "];
"1000578" -> "1000948"  [label="DDG: "];
"1000578" -> "1001223"  [label="DDG: "];
"1000578" -> "1001295"  [label="DDG: "];
"1000578" -> "1001318"  [label="DDG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1001428"  [label="DDG: "];
"1000106" -> "1000189"  [label="DDG: "];
"1000106" -> "1000210"  [label="DDG: "];
"1000106" -> "1000240"  [label="DDG: "];
"1000106" -> "1000297"  [label="DDG: "];
"1000106" -> "1000317"  [label="DDG: "];
"1000106" -> "1000338"  [label="DDG: "];
"1000106" -> "1000409"  [label="DDG: "];
"1000106" -> "1000475"  [label="DDG: "];
"1000106" -> "1000515"  [label="DDG: "];
"1000106" -> "1000600"  [label="DDG: "];
"1000106" -> "1000649"  [label="DDG: "];
"1000106" -> "1000662"  [label="DDG: "];
"1000106" -> "1000687"  [label="DDG: "];
"1000106" -> "1000702"  [label="DDG: "];
"1000106" -> "1000710"  [label="DDG: "];
"1000106" -> "1000721"  [label="DDG: "];
"1000106" -> "1000867"  [label="DDG: "];
"1000106" -> "1000874"  [label="DDG: "];
"1000106" -> "1001223"  [label="DDG: "];
"1000106" -> "1001295"  [label="DDG: "];
"1000106" -> "1001318"  [label="DDG: "];
"1000106" -> "1001408"  [label="DDG: "];
"1000106" -> "1001420"  [label="DDG: "];
"1000570" -> "1000111"  [label="AST: "];
"1000570" -> "1000574"  [label="CFG: "];
"1000571" -> "1000570"  [label="AST: "];
"1000574" -> "1000570"  [label="AST: "];
"1000577" -> "1000570"  [label="CFG: "];
"1000570" -> "1001428"  [label="DDG: "];
"1000574" -> "1000570"  [label="DDG: "];
"1000574" -> "1000575"  [label="CFG: "];
"1000575" -> "1000574"  [label="AST: "];
"1000574" -> "1001428"  [label="DDG: "];
"1000108" -> "1000574"  [label="DDG: "];
"1000574" -> "1000687"  [label="DDG: "];
"1000574" -> "1000710"  [label="DDG: "];
"1000574" -> "1000948"  [label="DDG: "];
"1000108" -> "1000105"  [label="AST: "];
"1000108" -> "1001428"  [label="DDG: "];
"1000108" -> "1000189"  [label="DDG: "];
"1000108" -> "1000687"  [label="DDG: "];
"1000108" -> "1000710"  [label="DDG: "];
"1000108" -> "1000948"  [label="DDG: "];
"1000110" -> "1000105"  [label="AST: "];
"1000110" -> "1001428"  [label="DDG: "];
"1000110" -> "1000189"  [label="DDG: "];
"1000110" -> "1000687"  [label="DDG: "];
"1000110" -> "1000710"  [label="DDG: "];
"1000110" -> "1000948"  [label="DDG: "];
"1000110" -> "1001287"  [label="DDG: "];
"1000110" -> "1001295"  [label="DDG: "];
"1000110" -> "1001324"  [label="DDG: "];
"1000110" -> "1001408"  [label="DDG: "];
"1000110" -> "1001420"  [label="DDG: "];
"1000417" -> "1000415"  [label="AST: "];
"1000417" -> "1000429"  [label="CFG: "];
"1000418" -> "1000417"  [label="AST: "];
"1000424" -> "1000417"  [label="AST: "];
"1000426" -> "1000417"  [label="AST: "];
"1000429" -> "1000417"  [label="AST: "];
"1000415" -> "1000417"  [label="CFG: "];
"1000417" -> "1001428"  [label="DDG: "];
"1000417" -> "1001428"  [label="DDG: "];
"1000417" -> "1001428"  [label="DDG: "];
"1000417" -> "1001428"  [label="DDG: "];
"1000417" -> "1000415"  [label="DDG: "];
"1000417" -> "1000415"  [label="DDG: "];
"1000417" -> "1000415"  [label="DDG: "];
"1000417" -> "1000415"  [label="DDG: "];
"1000418" -> "1000417"  [label="DDG: "];
"1000402" -> "1000417"  [label="DDG: "];
"1000417" -> "1000588"  [label="DDG: "];
"1000418" -> "1000419"  [label="CFG: "];
"1000419" -> "1000418"  [label="AST: "];
"1000425" -> "1000418"  [label="CFG: "];
"1000418" -> "1001428"  [label="DDG: "];
"1000402" -> "1000401"  [label="AST: "];
"1000402" -> "1000406"  [label="CFG: "];
"1000403" -> "1000402"  [label="AST: "];
"1000405" -> "1000402"  [label="AST: "];
"1000406" -> "1000402"  [label="AST: "];
"1000410" -> "1000402"  [label="CFG: "];
"1000416" -> "1000402"  [label="CFG: "];
"1000402" -> "1001428"  [label="DDG: "];
"1000402" -> "1001428"  [label="DDG: "];
"1000402" -> "1001428"  [label="DDG: "];
"1000109" -> "1000402"  [label="DDG: "];
"1000402" -> "1000687"  [label="DDG: "];
"1000109" -> "1000105"  [label="AST: "];
"1000109" -> "1001428"  [label="DDG: "];
"1000109" -> "1000182"  [label="DDG: "];
"1000109" -> "1000189"  [label="DDG: "];
"1000109" -> "1000687"  [label="DDG: "];
}
