digraph "1_Chrome_08cb718ba7c3961c1006176c9faba0a5841ec792@del" {
"1000141" [label="(Call,result == USPOOF_ASCII)"];
"1000136" [label="(Call,result &= USPOOF_RESTRICTION_LEVEL_MASK)"];
"1000125" [label="(Call,result & USPOOF_ALL_CHECKS)"];
"1000108" [label="(Call,result = uspoof_check(checker_, label.data(),\n                                 base::checked_cast<int32_t>(label.size()),\n                                NULL, &status))"];
"1000110" [label="(Call,uspoof_check(checker_, label.data(),\n                                 base::checked_cast<int32_t>(label.size()),\n                                NULL, &status))"];
"1000113" [label="(Call,base::checked_cast<int32_t>(label.size()))"];
"1000115" [label="(Call,int32_t>(label.size()))"];
"1000140" [label="(Call,result == USPOOF_ASCII ||\n      (result == USPOOF_SINGLE_SCRIPT_RESTRICTIVE &&\n       kana_letters_exceptions_.containsNone(label_string)))"];
"1000145" [label="(Call,result == USPOOF_SINGLE_SCRIPT_RESTRICTIVE)"];
"1000144" [label="(Call,result == USPOOF_SINGLE_SCRIPT_RESTRICTIVE &&\n       kana_letters_exceptions_.containsNone(label_string))"];
"1000111" [label="(Identifier,checker_)"];
"1000149" [label="(Identifier,label_string)"];
"1000145" [label="(Call,result == USPOOF_SINGLE_SCRIPT_RESTRICTIVE)"];
"1000110" [label="(Call,uspoof_check(checker_, label.data(),\n                                 base::checked_cast<int32_t>(label.size()),\n                                NULL, &status))"];
"1000109" [label="(Identifier,result)"];
"1000112" [label="(Call,label.data())"];
"1000115" [label="(Call,int32_t>(label.size()))"];
"1000138" [label="(Identifier,USPOOF_RESTRICTION_LEVEL_MASK)"];
"1000124" [label="(Identifier,status)"];
"1000119" [label="(Call,&status)"];
"1000114" [label="(Identifier,base::checked_cast)"];
"1000144" [label="(Call,result == USPOOF_SINGLE_SCRIPT_RESTRICTIVE &&\n       kana_letters_exceptions_.containsNone(label_string))"];
"1000125" [label="(Call,result & USPOOF_ALL_CHECKS)"];
"1000122" [label="(Call,U_FAILURE(status) || (result & USPOOF_ALL_CHECKS))"];
"1000140" [label="(Call,result == USPOOF_ASCII ||\n      (result == USPOOF_SINGLE_SCRIPT_RESTRICTIVE &&\n       kana_letters_exceptions_.containsNone(label_string)))"];
"1000108" [label="(Call,result = uspoof_check(checker_, label.data(),\n                                 base::checked_cast<int32_t>(label.size()),\n                                NULL, &status))"];
"1000151" [label="(Identifier,true)"];
"1000184" [label="(MethodReturn,bool)"];
"1000136" [label="(Call,result &= USPOOF_RESTRICTION_LEVEL_MASK)"];
"1000147" [label="(Identifier,USPOOF_SINGLE_SCRIPT_RESTRICTIVE)"];
"1000137" [label="(Identifier,result)"];
"1000102" [label="(Block,)"];
"1000116" [label="(Identifier,int32_t)"];
"1000141" [label="(Call,result == USPOOF_ASCII)"];
"1000142" [label="(Identifier,result)"];
"1000154" [label="(Identifier,label_string)"];
"1000118" [label="(Identifier,NULL)"];
"1000127" [label="(Identifier,USPOOF_ALL_CHECKS)"];
"1000139" [label="(ControlStructure,if (result == USPOOF_ASCII ||\n      (result == USPOOF_SINGLE_SCRIPT_RESTRICTIVE &&\n       kana_letters_exceptions_.containsNone(label_string))))"];
"1000148" [label="(Call,kana_letters_exceptions_.containsNone(label_string))"];
"1000126" [label="(Identifier,result)"];
"1000113" [label="(Call,base::checked_cast<int32_t>(label.size()))"];
"1000146" [label="(Identifier,result)"];
"1000143" [label="(Identifier,USPOOF_ASCII)"];
"1000117" [label="(Call,label.size())"];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000146" -> "1000141"  [label="CFG: "];
"1000140" -> "1000141"  [label="CFG: "];
"1000141" -> "1000184"  [label="DDG: result"];
"1000141" -> "1000184"  [label="DDG: USPOOF_ASCII"];
"1000141" -> "1000140"  [label="DDG: result"];
"1000141" -> "1000140"  [label="DDG: USPOOF_ASCII"];
"1000136" -> "1000141"  [label="DDG: result"];
"1000141" -> "1000145"  [label="DDG: result"];
"1000136" -> "1000102"  [label="AST: "];
"1000136" -> "1000138"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000142" -> "1000136"  [label="CFG: "];
"1000136" -> "1000184"  [label="DDG: USPOOF_RESTRICTION_LEVEL_MASK"];
"1000136" -> "1000184"  [label="DDG: result &= USPOOF_RESTRICTION_LEVEL_MASK"];
"1000125" -> "1000136"  [label="DDG: result"];
"1000108" -> "1000136"  [label="DDG: result"];
"1000125" -> "1000122"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000122" -> "1000125"  [label="CFG: "];
"1000125" -> "1000184"  [label="DDG: result"];
"1000125" -> "1000184"  [label="DDG: USPOOF_ALL_CHECKS"];
"1000125" -> "1000122"  [label="DDG: result"];
"1000125" -> "1000122"  [label="DDG: USPOOF_ALL_CHECKS"];
"1000108" -> "1000125"  [label="DDG: result"];
"1000108" -> "1000102"  [label="AST: "];
"1000108" -> "1000110"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000110" -> "1000108"  [label="AST: "];
"1000124" -> "1000108"  [label="CFG: "];
"1000108" -> "1000184"  [label="DDG: uspoof_check(checker_, label.data(),\n                                 base::checked_cast<int32_t>(label.size()),\n                                NULL, &status)"];
"1000108" -> "1000184"  [label="DDG: result"];
"1000110" -> "1000108"  [label="DDG: checker_"];
"1000110" -> "1000108"  [label="DDG: &status"];
"1000110" -> "1000108"  [label="DDG: NULL"];
"1000110" -> "1000108"  [label="DDG: label.data()"];
"1000110" -> "1000108"  [label="DDG: base::checked_cast<int32_t>(label.size())"];
"1000110" -> "1000119"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000112" -> "1000110"  [label="AST: "];
"1000113" -> "1000110"  [label="AST: "];
"1000118" -> "1000110"  [label="AST: "];
"1000119" -> "1000110"  [label="AST: "];
"1000110" -> "1000184"  [label="DDG: NULL"];
"1000110" -> "1000184"  [label="DDG: &status"];
"1000110" -> "1000184"  [label="DDG: label.data()"];
"1000110" -> "1000184"  [label="DDG: base::checked_cast<int32_t>(label.size())"];
"1000110" -> "1000184"  [label="DDG: checker_"];
"1000113" -> "1000110"  [label="DDG: base::checked_cast"];
"1000113" -> "1000110"  [label="DDG: int32_t>(label.size())"];
"1000113" -> "1000115"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000118" -> "1000113"  [label="CFG: "];
"1000113" -> "1000184"  [label="DDG: base::checked_cast"];
"1000113" -> "1000184"  [label="DDG: int32_t>(label.size())"];
"1000115" -> "1000113"  [label="DDG: int32_t"];
"1000115" -> "1000113"  [label="DDG: label.size()"];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000115" -> "1000184"  [label="DDG: label.size()"];
"1000115" -> "1000184"  [label="DDG: int32_t"];
"1000140" -> "1000139"  [label="AST: "];
"1000140" -> "1000144"  [label="CFG: "];
"1000144" -> "1000140"  [label="AST: "];
"1000151" -> "1000140"  [label="CFG: "];
"1000154" -> "1000140"  [label="CFG: "];
"1000140" -> "1000184"  [label="DDG: result == USPOOF_ASCII"];
"1000140" -> "1000184"  [label="DDG: result == USPOOF_ASCII ||\n      (result == USPOOF_SINGLE_SCRIPT_RESTRICTIVE &&\n       kana_letters_exceptions_.containsNone(label_string))"];
"1000140" -> "1000184"  [label="DDG: result == USPOOF_SINGLE_SCRIPT_RESTRICTIVE &&\n       kana_letters_exceptions_.containsNone(label_string)"];
"1000144" -> "1000140"  [label="DDG: result == USPOOF_SINGLE_SCRIPT_RESTRICTIVE"];
"1000144" -> "1000140"  [label="DDG: kana_letters_exceptions_.containsNone(label_string)"];
"1000145" -> "1000144"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000149" -> "1000145"  [label="CFG: "];
"1000144" -> "1000145"  [label="CFG: "];
"1000145" -> "1000184"  [label="DDG: result"];
"1000145" -> "1000184"  [label="DDG: USPOOF_SINGLE_SCRIPT_RESTRICTIVE"];
"1000145" -> "1000144"  [label="DDG: result"];
"1000145" -> "1000144"  [label="DDG: USPOOF_SINGLE_SCRIPT_RESTRICTIVE"];
"1000144" -> "1000148"  [label="CFG: "];
"1000148" -> "1000144"  [label="AST: "];
"1000144" -> "1000184"  [label="DDG: kana_letters_exceptions_.containsNone(label_string)"];
"1000144" -> "1000184"  [label="DDG: result == USPOOF_SINGLE_SCRIPT_RESTRICTIVE"];
"1000148" -> "1000144"  [label="DDG: label_string"];
}
