digraph "0_Chrome_a6f7726de20450074a01493e4e85409ce3f2595a_0@API" {
"1000157" [label="(Call,identifier = m_identifierForLoadWithoutResourceLoader ? m_identifierForLoadWithoutResourceLoader : m_mainResource->identifier())"];
"1000163" [label="(Call,ASSERT(identifier))"];
"1000166" [label="(Call,frameLoader()->shouldInterruptLoadForXFrameOptions(content, response.url(), identifier))"];
"1000171" [label="(Call,InspectorInstrumentation::continueAfterXFrameOptionsDenied(m_frame, this, identifier, response))"];
"1000188" [label="(Call,frame()->document()->addConsoleMessage(SecurityMessageSource, ErrorMessageLevel, message, identifier))"];
"1000177" [label="(Call,message = \"Refused to display '\" + response.url().elidedString() + \"' in a frame because it set 'X-Frame-Options' to '\" + content + \"'.\")"];
"1000179" [label="(Call,\"Refused to display '\" + response.url().elidedString() + \"' in a frame because it set 'X-Frame-Options' to '\" + content + \"'.\")"];
"1000181" [label="(Call,response.url().elidedString() + \"' in a frame because it set 'X-Frame-Options' to '\" + content + \"'.\")"];
"1000183" [label="(Call,\"' in a frame because it set 'X-Frame-Options' to '\" + content + \"'.\")"];
"1000185" [label="(Call,content + \"'.\")"];
"1000159" [label="(Call,m_identifierForLoadWithoutResourceLoader ? m_identifierForLoadWithoutResourceLoader : m_mainResource->identifier())"];
"1000182" [label="(Call,response.url().elidedString())"];
"1000170" [label="(Block,)"];
"1000177" [label="(Call,message = \"Refused to display '\" + response.url().elidedString() + \"' in a frame because it set 'X-Frame-Options' to '\" + content + \"'.\")"];
"1000166" [label="(Call,frameLoader()->shouldInterruptLoadForXFrameOptions(content, response.url(), identifier))"];
"1000158" [label="(Identifier,identifier)"];
"1000113" [label="(Call,m_applicationCacheHost->maybeLoadFallbackForMainResponse(request(), response))"];
"1000173" [label="(Identifier,this)"];
"1000178" [label="(Identifier,message)"];
"1000282" [label="(MethodReturn,void)"];
"1000174" [label="(Identifier,identifier)"];
"1000169" [label="(Identifier,identifier)"];
"1000186" [label="(Identifier,content)"];
"1000163" [label="(Call,ASSERT(identifier))"];
"1000147" [label="(Block,)"];
"1000184" [label="(Literal,\"' in a frame because it set 'X-Frame-Options' to '\")"];
"1000189" [label="(Identifier,SecurityMessageSource)"];
"1000172" [label="(Identifier,m_frame)"];
"1000175" [label="(Identifier,response)"];
"1000213" [label="(Call,mainResourceLoader())"];
"1000179" [label="(Call,\"Refused to display '\" + response.url().elidedString() + \"' in a frame because it set 'X-Frame-Options' to '\" + content + \"'.\")"];
"1000187" [label="(Literal,\"'.\")"];
"1000164" [label="(Identifier,identifier)"];
"1000191" [label="(Identifier,message)"];
"1000102" [label="(MethodParameterIn,const ResourceResponse& response)"];
"1000190" [label="(Identifier,ErrorMessageLevel)"];
"1000196" [label="(Identifier,HTMLFrameOwnerElement)"];
"1000157" [label="(Call,identifier = m_identifierForLoadWithoutResourceLoader ? m_identifierForLoadWithoutResourceLoader : m_mainResource->identifier())"];
"1000149" [label="(Call,content = it->value)"];
"1000165" [label="(ControlStructure,if (frameLoader()->shouldInterruptLoadForXFrameOptions(content, response.url(), identifier)))"];
"1000188" [label="(Call,frame()->document()->addConsoleMessage(SecurityMessageSource, ErrorMessageLevel, message, identifier))"];
"1000192" [label="(Identifier,identifier)"];
"1000183" [label="(Call,\"' in a frame because it set 'X-Frame-Options' to '\" + content + \"'.\")"];
"1000180" [label="(Literal,\"Refused to display '\")"];
"1000167" [label="(Identifier,content)"];
"1000168" [label="(Call,response.url())"];
"1000185" [label="(Call,content + \"'.\")"];
"1000181" [label="(Call,response.url().elidedString() + \"' in a frame because it set 'X-Frame-Options' to '\" + content + \"'.\")"];
"1000171" [label="(Call,InspectorInstrumentation::continueAfterXFrameOptionsDenied(m_frame, this, identifier, response))"];
"1000157" -> "1000147"  [label="AST: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000164" -> "1000157"  [label="CFG: "];
"1000157" -> "1000282"  [label="DDG: "];
"1000157" -> "1000163"  [label="DDG: "];
"1000163" -> "1000147"  [label="AST: "];
"1000163" -> "1000164"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000167" -> "1000163"  [label="CFG: "];
"1000163" -> "1000282"  [label="DDG: "];
"1000163" -> "1000166"  [label="DDG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000166" -> "1000169"  [label="CFG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000168" -> "1000166"  [label="AST: "];
"1000169" -> "1000166"  [label="AST: "];
"1000172" -> "1000166"  [label="CFG: "];
"1000213" -> "1000166"  [label="CFG: "];
"1000166" -> "1000282"  [label="DDG: "];
"1000166" -> "1000282"  [label="DDG: "];
"1000166" -> "1000282"  [label="DDG: "];
"1000166" -> "1000282"  [label="DDG: "];
"1000149" -> "1000166"  [label="DDG: "];
"1000166" -> "1000171"  [label="DDG: "];
"1000166" -> "1000177"  [label="DDG: "];
"1000166" -> "1000179"  [label="DDG: "];
"1000166" -> "1000181"  [label="DDG: "];
"1000166" -> "1000183"  [label="DDG: "];
"1000166" -> "1000185"  [label="DDG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000171" -> "1000175"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="AST: "];
"1000174" -> "1000171"  [label="AST: "];
"1000175" -> "1000171"  [label="AST: "];
"1000178" -> "1000171"  [label="CFG: "];
"1000171" -> "1000282"  [label="DDG: "];
"1000171" -> "1000282"  [label="DDG: "];
"1000171" -> "1000282"  [label="DDG: "];
"1000171" -> "1000282"  [label="DDG: "];
"1000113" -> "1000171"  [label="DDG: "];
"1000102" -> "1000171"  [label="DDG: "];
"1000171" -> "1000188"  [label="DDG: "];
"1000188" -> "1000170"  [label="AST: "];
"1000188" -> "1000192"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000188"  [label="AST: "];
"1000191" -> "1000188"  [label="AST: "];
"1000192" -> "1000188"  [label="AST: "];
"1000196" -> "1000188"  [label="CFG: "];
"1000188" -> "1000282"  [label="DDG: "];
"1000188" -> "1000282"  [label="DDG: "];
"1000188" -> "1000282"  [label="DDG: "];
"1000188" -> "1000282"  [label="DDG: "];
"1000188" -> "1000282"  [label="DDG: "];
"1000177" -> "1000188"  [label="DDG: "];
"1000177" -> "1000170"  [label="AST: "];
"1000177" -> "1000179"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000179" -> "1000177"  [label="AST: "];
"1000189" -> "1000177"  [label="CFG: "];
"1000177" -> "1000282"  [label="DDG: "];
"1000179" -> "1000181"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000181" -> "1000179"  [label="AST: "];
"1000179" -> "1000282"  [label="DDG: "];
"1000181" -> "1000183"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000183" -> "1000181"  [label="AST: "];
"1000181" -> "1000282"  [label="DDG: "];
"1000181" -> "1000282"  [label="DDG: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000185" -> "1000183"  [label="AST: "];
"1000183" -> "1000282"  [label="DDG: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="AST: "];
"1000185" -> "1000282"  [label="DDG: "];
}
