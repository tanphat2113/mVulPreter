digraph "0_redis_1eb08bcd4634ae42ec45e8284923ac048beaa4c3@pointer" {
"1000109" [label="(Call,*fmt = luaL_checkstring(L, 1))"];
"1000111" [label="(Call,luaL_checkstring(L, 1))"];
"1000105" [label="(MethodParameterIn,lua_State *L)"];
"1000147" [label="(Call,fmt++)"];
"1000375" [label="(Call,lua_pushinteger(L, pos + 1))"];
"1000109" [label="(Call,*fmt = luaL_checkstring(L, 1))"];
"1000117" [label="(Identifier,data)"];
"1000112" [label="(Identifier,L)"];
"1000263" [label="(Call,lua_pushnumber(L, d))"];
"1000365" [label="(Call,controloptions(L, opt, &fmt, &h))"];
"1000174" [label="(Call,luaL_checkstack(L, 2, \"too many results\"))"];
"1000286" [label="(Call,luaL_error(L, \"format 'c0' needs a previous size\"))"];
"1000111" [label="(Call,luaL_checkstring(L, 1))"];
"1000146" [label="(Call,*fmt++)"];
"1000110" [label="(Identifier,fmt)"];
"1000105" [label="(MethodParameterIn,lua_State *L)"];
"1000237" [label="(Call,lua_pushnumber(L, f))"];
"1000282" [label="(Call,lua_isnumber(L, -1))"];
"1000165" [label="(Call,luaL_argcheck(L, pos+size <= ld, 2, \"data string too short\"))"];
"1000118" [label="(Call,luaL_checklstring(L, 2, &ld))"];
"1000291" [label="(Call,lua_tonumber(L, -1))"];
"1000127" [label="(Call,luaL_optinteger(L, 3, 1))"];
"1000341" [label="(Call,luaL_error(L, \"unfinished string in data\"))"];
"1000106" [label="(Block,)"];
"1000113" [label="(Literal,1)"];
"1000295" [label="(Call,lua_pop(L, 1))"];
"1000152" [label="(Call,optsize(L, opt, &fmt))"];
"1000147" [label="(Call,fmt++)"];
"1000313" [label="(Call,lua_pushlstring(L, data+pos, size))"];
"1000208" [label="(Call,lua_pushnumber(L, res))"];
"1000148" [label="(Identifier,fmt)"];
"1000300" [label="(Call,luaL_argcheck(L, size <= ld && pos <= ld - size,\n                           2, \"data string too short\"))"];
"1000353" [label="(Call,lua_pushlstring(L, data+pos, size - 1))"];
"1000384" [label="(MethodReturn,static int)"];
"1000109" -> "1000106"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000117" -> "1000109"  [label="CFG: "];
"1000109" -> "1000384"  [label="DDG: fmt"];
"1000109" -> "1000384"  [label="DDG: luaL_checkstring(L, 1)"];
"1000111" -> "1000109"  [label="DDG: L"];
"1000111" -> "1000109"  [label="DDG: 1"];
"1000109" -> "1000147"  [label="DDG: fmt"];
"1000111" -> "1000113"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000113" -> "1000111"  [label="AST: "];
"1000105" -> "1000111"  [label="DDG: L"];
"1000111" -> "1000118"  [label="DDG: L"];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000384"  [label="DDG: L"];
"1000105" -> "1000118"  [label="DDG: L"];
"1000105" -> "1000127"  [label="DDG: L"];
"1000105" -> "1000152"  [label="DDG: L"];
"1000105" -> "1000165"  [label="DDG: L"];
"1000105" -> "1000174"  [label="DDG: L"];
"1000105" -> "1000208"  [label="DDG: L"];
"1000105" -> "1000237"  [label="DDG: L"];
"1000105" -> "1000263"  [label="DDG: L"];
"1000105" -> "1000282"  [label="DDG: L"];
"1000105" -> "1000286"  [label="DDG: L"];
"1000105" -> "1000291"  [label="DDG: L"];
"1000105" -> "1000295"  [label="DDG: L"];
"1000105" -> "1000300"  [label="DDG: L"];
"1000105" -> "1000313"  [label="DDG: L"];
"1000105" -> "1000341"  [label="DDG: L"];
"1000105" -> "1000353"  [label="DDG: L"];
"1000105" -> "1000365"  [label="DDG: L"];
"1000105" -> "1000375"  [label="DDG: L"];
"1000147" -> "1000146"  [label="AST: "];
"1000147" -> "1000148"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000146" -> "1000147"  [label="CFG: "];
"1000147" -> "1000384"  [label="DDG: fmt"];
}
