digraph "0_libgd_01c61f8ab110a77ae64b5ca67c244c728c506f03@pointer" {
"1000252" [label="(Call,gdFree(conversion_buffer))"];
"1000244" [label="(Call,gdGetBuf(conversion_buffer, image_block_size, ctx))"];
"1000235" [label="(Call,conversion_buffer == NULL)"];
"1000225" [label="(Call,conversion_buffer = (unsigned char *) gdMalloc(image_block_size * sizeof(unsigned char)))"];
"1000227" [label="(Call,(unsigned char *) gdMalloc(image_block_size * sizeof(unsigned char)))"];
"1000229" [label="(Call,gdMalloc(image_block_size * sizeof(unsigned char)))"];
"1000230" [label="(Call,image_block_size * sizeof(unsigned char))"];
"1000206" [label="(Call,image_block_size * sizeof(int))"];
"1000176" [label="(Call,overflow2(image_block_size, sizeof(int)))"];
"1000117" [label="(Call,image_block_size = (tga->width * tga->height) * pixel_block_size)"];
"1000119" [label="(Call,(tga->width * tga->height) * pixel_block_size)"];
"1000120" [label="(Call,tga->width * tga->height)"];
"1000109" [label="(Call,pixel_block_size = (tga->bits / 8))"];
"1000111" [label="(Call,tga->bits / 8)"];
"1000211" [label="(Call,tga->bitmap == NULL)"];
"1000199" [label="(Call,tga->bitmap = (int *) gdMalloc(image_block_size * sizeof(int)))"];
"1000203" [label="(Call,(int *) gdMalloc(image_block_size * sizeof(int)))"];
"1000205" [label="(Call,gdMalloc(image_block_size * sizeof(int)))"];
"1000105" [label="(MethodParameterIn,gdIOCtx *ctx)"];
"1000188" [label="(Identifier,tga)"];
"1000175" [label="(ControlStructure,if(overflow2(image_block_size, sizeof(int))))"];
"1000243" [label="(Call,gdGetBuf(conversion_buffer, image_block_size, ctx) != image_block_size)"];
"1000319" [label="(Call,gdGetBuf(conversion_buffer, image_block_size, ctx))"];
"1000247" [label="(Identifier,ctx)"];
"1000221" [label="(Identifier,tga)"];
"1000246" [label="(Identifier,image_block_size)"];
"1000232" [label="(Call,sizeof(unsigned char))"];
"1000177" [label="(Identifier,image_block_size)"];
"1000252" [label="(Call,gdFree(conversion_buffer))"];
"1000256" [label="(Literal,1)"];
"1000223" [label="(Block,)"];
"1000478" [label="(MethodReturn,int)"];
"1000130" [label="(Identifier,decompression_buffer)"];
"1000249" [label="(Block,)"];
"1000215" [label="(Identifier,NULL)"];
"1000212" [label="(Call,tga->bitmap)"];
"1000206" [label="(Call,image_block_size * sizeof(int))"];
"1000225" [label="(Call,conversion_buffer = (unsigned char *) gdMalloc(image_block_size * sizeof(unsigned char)))"];
"1000205" [label="(Call,gdMalloc(image_block_size * sizeof(int)))"];
"1000248" [label="(Identifier,image_block_size)"];
"1000284" [label="(Call,image_block_size * sizeof(uint8_t))"];
"1000117" [label="(Call,image_block_size = (tga->width * tga->height) * pixel_block_size)"];
"1000109" [label="(Call,pixel_block_size = (tga->bits / 8))"];
"1000111" [label="(Call,tga->bits / 8)"];
"1000210" [label="(ControlStructure,if (tga->bitmap == NULL))"];
"1000110" [label="(Identifier,pixel_block_size)"];
"1000213" [label="(Identifier,tga)"];
"1000120" [label="(Call,tga->width * tga->height)"];
"1000406" [label="(Call,memcpy(tga->bitmap + bitmap_caret, decompression_buffer + buffer_caret, pixel_block_size))"];
"1000119" [label="(Call,(tga->width * tga->height) * pixel_block_size)"];
"1000118" [label="(Identifier,image_block_size)"];
"1000449" [label="(Call,memcpy(tga->bitmap + bitmap_caret, decompression_buffer + buffer_caret, encoded_pixels * pixel_block_size))"];
"1000289" [label="(Call,decompression_buffer == NULL)"];
"1000203" [label="(Call,(int *) gdMalloc(image_block_size * sizeof(int)))"];
"1000200" [label="(Call,tga->bitmap)"];
"1000230" [label="(Call,image_block_size * sizeof(unsigned char))"];
"1000211" [label="(Call,tga->bitmap == NULL)"];
"1000245" [label="(Identifier,conversion_buffer)"];
"1000237" [label="(Identifier,NULL)"];
"1000178" [label="(Call,sizeof(int))"];
"1000229" [label="(Call,gdMalloc(image_block_size * sizeof(unsigned char)))"];
"1000183" [label="(Literal,1)"];
"1000124" [label="(Call,tga->height)"];
"1000207" [label="(Identifier,image_block_size)"];
"1000107" [label="(Block,)"];
"1000127" [label="(Identifier,pixel_block_size)"];
"1000162" [label="(Call,overflow2(tga->width * tga->height, pixel_block_size))"];
"1000112" [label="(Call,tga->bits)"];
"1000235" [label="(Call,conversion_buffer == NULL)"];
"1000407" [label="(Call,tga->bitmap + bitmap_caret)"];
"1000275" [label="(Call,gdFree(conversion_buffer))"];
"1000241" [label="(Literal,1)"];
"1000244" [label="(Call,gdGetBuf(conversion_buffer, image_block_size, ctx))"];
"1000253" [label="(Identifier,conversion_buffer)"];
"1000115" [label="(Literal,8)"];
"1000268" [label="(Call,(int) conversion_buffer[buffer_caret])"];
"1000226" [label="(Identifier,conversion_buffer)"];
"1000450" [label="(Call,tga->bitmap + bitmap_caret)"];
"1000176" [label="(Call,overflow2(image_block_size, sizeof(int)))"];
"1000231" [label="(Identifier,image_block_size)"];
"1000218" [label="(Literal,1)"];
"1000234" [label="(ControlStructure,if (conversion_buffer == NULL))"];
"1000105" [label="(MethodParameterIn,gdIOCtx *ctx)"];
"1000150" [label="(Call,overflow2(tga->width, tga->height))"];
"1000208" [label="(Call,sizeof(int))"];
"1000199" [label="(Call,tga->bitmap = (int *) gdMalloc(image_block_size * sizeof(int)))"];
"1000236" [label="(Identifier,conversion_buffer)"];
"1000121" [label="(Call,tga->width)"];
"1000227" [label="(Call,(unsigned char *) gdMalloc(image_block_size * sizeof(unsigned char)))"];
"1000252" -> "1000249"  [label="AST: "];
"1000252" -> "1000253"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000256" -> "1000252"  [label="CFG: "];
"1000252" -> "1000478"  [label="DDG: conversion_buffer"];
"1000252" -> "1000478"  [label="DDG: gdFree(conversion_buffer)"];
"1000244" -> "1000252"  [label="DDG: conversion_buffer"];
"1000244" -> "1000243"  [label="AST: "];
"1000244" -> "1000247"  [label="CFG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000246" -> "1000244"  [label="AST: "];
"1000247" -> "1000244"  [label="AST: "];
"1000248" -> "1000244"  [label="CFG: "];
"1000244" -> "1000478"  [label="DDG: ctx"];
"1000244" -> "1000243"  [label="DDG: conversion_buffer"];
"1000244" -> "1000243"  [label="DDG: image_block_size"];
"1000244" -> "1000243"  [label="DDG: ctx"];
"1000235" -> "1000244"  [label="DDG: conversion_buffer"];
"1000230" -> "1000244"  [label="DDG: image_block_size"];
"1000105" -> "1000244"  [label="DDG: ctx"];
"1000244" -> "1000268"  [label="DDG: conversion_buffer"];
"1000244" -> "1000275"  [label="DDG: conversion_buffer"];
"1000235" -> "1000234"  [label="AST: "];
"1000235" -> "1000237"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="AST: "];
"1000241" -> "1000235"  [label="CFG: "];
"1000245" -> "1000235"  [label="CFG: "];
"1000235" -> "1000478"  [label="DDG: NULL"];
"1000235" -> "1000478"  [label="DDG: conversion_buffer"];
"1000235" -> "1000478"  [label="DDG: conversion_buffer == NULL"];
"1000225" -> "1000235"  [label="DDG: conversion_buffer"];
"1000211" -> "1000235"  [label="DDG: NULL"];
"1000225" -> "1000223"  [label="AST: "];
"1000225" -> "1000227"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000227" -> "1000225"  [label="AST: "];
"1000236" -> "1000225"  [label="CFG: "];
"1000225" -> "1000478"  [label="DDG: (unsigned char *) gdMalloc(image_block_size * sizeof(unsigned char))"];
"1000227" -> "1000225"  [label="DDG: gdMalloc(image_block_size * sizeof(unsigned char))"];
"1000227" -> "1000229"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000227"  [label="AST: "];
"1000227" -> "1000478"  [label="DDG: gdMalloc(image_block_size * sizeof(unsigned char))"];
"1000229" -> "1000227"  [label="DDG: image_block_size * sizeof(unsigned char)"];
"1000229" -> "1000230"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000229" -> "1000478"  [label="DDG: image_block_size * sizeof(unsigned char)"];
"1000230" -> "1000229"  [label="DDG: image_block_size"];
"1000230" -> "1000232"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000232" -> "1000230"  [label="AST: "];
"1000230" -> "1000478"  [label="DDG: image_block_size"];
"1000206" -> "1000230"  [label="DDG: image_block_size"];
"1000206" -> "1000205"  [label="AST: "];
"1000206" -> "1000208"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000206"  [label="AST: "];
"1000205" -> "1000206"  [label="CFG: "];
"1000206" -> "1000478"  [label="DDG: image_block_size"];
"1000206" -> "1000205"  [label="DDG: image_block_size"];
"1000176" -> "1000206"  [label="DDG: image_block_size"];
"1000206" -> "1000284"  [label="DDG: image_block_size"];
"1000176" -> "1000175"  [label="AST: "];
"1000176" -> "1000178"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000178" -> "1000176"  [label="AST: "];
"1000183" -> "1000176"  [label="CFG: "];
"1000188" -> "1000176"  [label="CFG: "];
"1000176" -> "1000478"  [label="DDG: overflow2(image_block_size, sizeof(int))"];
"1000176" -> "1000478"  [label="DDG: image_block_size"];
"1000117" -> "1000176"  [label="DDG: image_block_size"];
"1000117" -> "1000107"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000130" -> "1000117"  [label="CFG: "];
"1000117" -> "1000478"  [label="DDG: image_block_size"];
"1000117" -> "1000478"  [label="DDG: (tga->width * tga->height) * pixel_block_size"];
"1000119" -> "1000117"  [label="DDG: tga->width * tga->height"];
"1000119" -> "1000117"  [label="DDG: pixel_block_size"];
"1000119" -> "1000127"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000127" -> "1000119"  [label="AST: "];
"1000119" -> "1000478"  [label="DDG: pixel_block_size"];
"1000119" -> "1000478"  [label="DDG: tga->width * tga->height"];
"1000120" -> "1000119"  [label="DDG: tga->width"];
"1000120" -> "1000119"  [label="DDG: tga->height"];
"1000109" -> "1000119"  [label="DDG: pixel_block_size"];
"1000119" -> "1000162"  [label="DDG: pixel_block_size"];
"1000120" -> "1000124"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000124" -> "1000120"  [label="AST: "];
"1000127" -> "1000120"  [label="CFG: "];
"1000120" -> "1000150"  [label="DDG: tga->width"];
"1000120" -> "1000150"  [label="DDG: tga->height"];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000118" -> "1000109"  [label="CFG: "];
"1000109" -> "1000478"  [label="DDG: tga->bits / 8"];
"1000111" -> "1000109"  [label="DDG: tga->bits"];
"1000111" -> "1000109"  [label="DDG: 8"];
"1000111" -> "1000115"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000115" -> "1000111"  [label="AST: "];
"1000111" -> "1000478"  [label="DDG: tga->bits"];
"1000211" -> "1000210"  [label="AST: "];
"1000211" -> "1000215"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000215" -> "1000211"  [label="AST: "];
"1000218" -> "1000211"  [label="CFG: "];
"1000221" -> "1000211"  [label="CFG: "];
"1000211" -> "1000478"  [label="DDG: tga->bitmap"];
"1000211" -> "1000478"  [label="DDG: tga->bitmap == NULL"];
"1000211" -> "1000478"  [label="DDG: NULL"];
"1000199" -> "1000211"  [label="DDG: tga->bitmap"];
"1000211" -> "1000289"  [label="DDG: NULL"];
"1000211" -> "1000406"  [label="DDG: tga->bitmap"];
"1000211" -> "1000407"  [label="DDG: tga->bitmap"];
"1000211" -> "1000449"  [label="DDG: tga->bitmap"];
"1000211" -> "1000450"  [label="DDG: tga->bitmap"];
"1000199" -> "1000107"  [label="AST: "];
"1000199" -> "1000203"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000203" -> "1000199"  [label="AST: "];
"1000213" -> "1000199"  [label="CFG: "];
"1000199" -> "1000478"  [label="DDG: (int *) gdMalloc(image_block_size * sizeof(int))"];
"1000203" -> "1000199"  [label="DDG: gdMalloc(image_block_size * sizeof(int))"];
"1000203" -> "1000205"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000203"  [label="AST: "];
"1000203" -> "1000478"  [label="DDG: gdMalloc(image_block_size * sizeof(int))"];
"1000205" -> "1000203"  [label="DDG: image_block_size * sizeof(int)"];
"1000205" -> "1000478"  [label="DDG: image_block_size * sizeof(int)"];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000478"  [label="DDG: ctx"];
"1000105" -> "1000319"  [label="DDG: ctx"];
}
