digraph "1_linux_667eff35a1f56fa74ce98a0c7c29a40adc1ba4e3_0@integer" {
"1000161" [label="(Call,eof_block = (inode->i_size + inode->i_sb->s_blocksize - 1) >>\n \t\tinode->i_sb->s_blocksize_bits)"];
"1000163" [label="(Call,(inode->i_size + inode->i_sb->s_blocksize - 1) >>\n \t\tinode->i_sb->s_blocksize_bits)"];
"1000168" [label="(Call,inode->i_sb->s_blocksize - 1)"];
"1000181" [label="(Call,eof_block < map->m_lblk + map->m_len)"];
"1000262" [label="(Call,ee_block + ee_len <= eof_block)"];
"1000260" [label="(Call,may_zeroout = ee_block + ee_len <= eof_block)"];
"1000387" [label="(Call,err == -ENOSPC && may_zeroout)"];
"1000580" [label="(Call,err == -ENOSPC && may_zeroout)"];
"1000450" [label="(Call,ee_block + ee_len <= eof_block)"];
"1000448" [label="(Call,may_zeroout = ee_block + ee_len <= eof_block)"];
"1000388" [label="(Call,err == -ENOSPC)"];
"1000341" [label="(Block,)"];
"1000386" [label="(ControlStructure,if (err == -ENOSPC && may_zeroout))"];
"1000253" [label="(Call,cpu_to_le16(ee_len))"];
"1000183" [label="(Call,map->m_lblk + map->m_len)"];
"1000175" [label="(Call,inode->i_sb->s_blocksize_bits)"];
"1000271" [label="(Identifier,map)"];
"1000161" [label="(Call,eof_block = (inode->i_size + inode->i_sb->s_blocksize - 1) >>\n \t\tinode->i_sb->s_blocksize_bits)"];
"1000200" [label="(Identifier,depth)"];
"1000454" [label="(Identifier,eof_block)"];
"1000581" [label="(Call,err == -ENOSPC)"];
"1000163" [label="(Call,(inode->i_size + inode->i_sb->s_blocksize - 1) >>\n \t\tinode->i_sb->s_blocksize_bits)"];
"1000585" [label="(Identifier,may_zeroout)"];
"1000293" [label="(Call,map->m_lblk > ee_block)"];
"1000169" [label="(Call,inode->i_sb->s_blocksize)"];
"1000432" [label="(Identifier,err)"];
"1000387" [label="(Call,err == -ENOSPC && may_zeroout)"];
"1000580" [label="(Call,err == -ENOSPC && may_zeroout)"];
"1000307" [label="(Call,map->m_lblk - ee_block)"];
"1000162" [label="(Identifier,eof_block)"];
"1000266" [label="(Identifier,eof_block)"];
"1000392" [label="(Identifier,may_zeroout)"];
"1000451" [label="(Call,ee_block + ee_len)"];
"1000224" [label="(Call,map->m_lblk - ee_block)"];
"1000262" [label="(Call,ee_block + ee_len <= eof_block)"];
"1000263" [label="(Call,ee_block + ee_len)"];
"1000395" [label="(Identifier,err)"];
"1000180" [label="(ControlStructure,if (eof_block < map->m_lblk + map->m_len))"];
"1000448" [label="(Call,may_zeroout = ee_block + ee_len <= eof_block)"];
"1000450" [label="(Call,ee_block + ee_len <= eof_block)"];
"1000588" [label="(Identifier,err)"];
"1000260" [label="(Call,may_zeroout = ee_block + ee_len <= eof_block)"];
"1000446" [label="(Call,cpu_to_le16(ee_len))"];
"1000174" [label="(Literal,1)"];
"1000181" [label="(Call,eof_block < map->m_lblk + map->m_len)"];
"1000168" [label="(Call,inode->i_sb->s_blocksize - 1)"];
"1000579" [label="(ControlStructure,if (err == -ENOSPC && may_zeroout))"];
"1000456" [label="(Identifier,depth)"];
"1000191" [label="(Identifier,eof_block)"];
"1000190" [label="(Call,eof_block = map->m_lblk + map->m_len)"];
"1000164" [label="(Call,inode->i_size + inode->i_sb->s_blocksize - 1)"];
"1000261" [label="(Identifier,may_zeroout)"];
"1000625" [label="(Identifier,err)"];
"1000449" [label="(Identifier,may_zeroout)"];
"1000182" [label="(Identifier,eof_block)"];
"1000121" [label="(Block,)"];
"1000666" [label="(MethodReturn,static int)"];
"1000148" [label="(Call,ext_debug(\"ext4_split_unwritten_extents: inode %lu, logical\"\n \t\t\"block %llu, max_blocks %u\n\", inode->i_ino,\n\t\t(unsigned long long)map->m_lblk, map->m_len))"];
"1000153" [label="(Call,(unsigned long long)map->m_lblk)"];
"1000161" -> "1000121"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000182" -> "1000161"  [label="CFG: "];
"1000161" -> "1000666"  [label="DDG: (inode->i_size + inode->i_sb->s_blocksize - 1) >>\n \t\tinode->i_sb->s_blocksize_bits"];
"1000163" -> "1000161"  [label="DDG: inode->i_size + inode->i_sb->s_blocksize - 1"];
"1000163" -> "1000161"  [label="DDG: inode->i_sb->s_blocksize_bits"];
"1000161" -> "1000181"  [label="DDG: eof_block"];
"1000163" -> "1000175"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000175" -> "1000163"  [label="AST: "];
"1000163" -> "1000666"  [label="DDG: inode->i_size + inode->i_sb->s_blocksize - 1"];
"1000163" -> "1000666"  [label="DDG: inode->i_sb->s_blocksize_bits"];
"1000168" -> "1000163"  [label="DDG: inode->i_sb->s_blocksize"];
"1000168" -> "1000163"  [label="DDG: 1"];
"1000168" -> "1000164"  [label="AST: "];
"1000168" -> "1000174"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000174" -> "1000168"  [label="AST: "];
"1000164" -> "1000168"  [label="CFG: "];
"1000168" -> "1000666"  [label="DDG: inode->i_sb->s_blocksize"];
"1000168" -> "1000164"  [label="DDG: inode->i_sb->s_blocksize"];
"1000168" -> "1000164"  [label="DDG: 1"];
"1000181" -> "1000180"  [label="AST: "];
"1000181" -> "1000183"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000183" -> "1000181"  [label="AST: "];
"1000191" -> "1000181"  [label="CFG: "];
"1000200" -> "1000181"  [label="CFG: "];
"1000181" -> "1000666"  [label="DDG: eof_block < map->m_lblk + map->m_len"];
"1000181" -> "1000666"  [label="DDG: map->m_lblk + map->m_len"];
"1000153" -> "1000181"  [label="DDG: map->m_lblk"];
"1000148" -> "1000181"  [label="DDG: map->m_len"];
"1000181" -> "1000262"  [label="DDG: eof_block"];
"1000262" -> "1000260"  [label="AST: "];
"1000262" -> "1000266"  [label="CFG: "];
"1000263" -> "1000262"  [label="AST: "];
"1000266" -> "1000262"  [label="AST: "];
"1000260" -> "1000262"  [label="CFG: "];
"1000262" -> "1000666"  [label="DDG: ee_block + ee_len"];
"1000262" -> "1000666"  [label="DDG: eof_block"];
"1000262" -> "1000260"  [label="DDG: ee_block + ee_len"];
"1000262" -> "1000260"  [label="DDG: eof_block"];
"1000224" -> "1000262"  [label="DDG: ee_block"];
"1000253" -> "1000262"  [label="DDG: ee_len"];
"1000190" -> "1000262"  [label="DDG: eof_block"];
"1000262" -> "1000450"  [label="DDG: eof_block"];
"1000260" -> "1000121"  [label="AST: "];
"1000261" -> "1000260"  [label="AST: "];
"1000271" -> "1000260"  [label="CFG: "];
"1000260" -> "1000666"  [label="DDG: ee_block + ee_len <= eof_block"];
"1000260" -> "1000666"  [label="DDG: may_zeroout"];
"1000260" -> "1000387"  [label="DDG: may_zeroout"];
"1000260" -> "1000580"  [label="DDG: may_zeroout"];
"1000387" -> "1000386"  [label="AST: "];
"1000387" -> "1000388"  [label="CFG: "];
"1000387" -> "1000392"  [label="CFG: "];
"1000388" -> "1000387"  [label="AST: "];
"1000392" -> "1000387"  [label="AST: "];
"1000395" -> "1000387"  [label="CFG: "];
"1000432" -> "1000387"  [label="CFG: "];
"1000387" -> "1000666"  [label="DDG: may_zeroout"];
"1000387" -> "1000666"  [label="DDG: err == -ENOSPC"];
"1000387" -> "1000666"  [label="DDG: err == -ENOSPC && may_zeroout"];
"1000388" -> "1000387"  [label="DDG: err"];
"1000388" -> "1000387"  [label="DDG: -ENOSPC"];
"1000580" -> "1000579"  [label="AST: "];
"1000580" -> "1000581"  [label="CFG: "];
"1000580" -> "1000585"  [label="CFG: "];
"1000581" -> "1000580"  [label="AST: "];
"1000585" -> "1000580"  [label="AST: "];
"1000588" -> "1000580"  [label="CFG: "];
"1000625" -> "1000580"  [label="CFG: "];
"1000580" -> "1000666"  [label="DDG: err == -ENOSPC && may_zeroout"];
"1000580" -> "1000666"  [label="DDG: err == -ENOSPC"];
"1000580" -> "1000666"  [label="DDG: may_zeroout"];
"1000581" -> "1000580"  [label="DDG: err"];
"1000581" -> "1000580"  [label="DDG: -ENOSPC"];
"1000448" -> "1000580"  [label="DDG: may_zeroout"];
"1000450" -> "1000448"  [label="AST: "];
"1000450" -> "1000454"  [label="CFG: "];
"1000451" -> "1000450"  [label="AST: "];
"1000454" -> "1000450"  [label="AST: "];
"1000448" -> "1000450"  [label="CFG: "];
"1000450" -> "1000666"  [label="DDG: ee_block + ee_len"];
"1000450" -> "1000666"  [label="DDG: eof_block"];
"1000450" -> "1000448"  [label="DDG: ee_block + ee_len"];
"1000450" -> "1000448"  [label="DDG: eof_block"];
"1000307" -> "1000450"  [label="DDG: ee_block"];
"1000293" -> "1000450"  [label="DDG: ee_block"];
"1000446" -> "1000450"  [label="DDG: ee_len"];
"1000448" -> "1000341"  [label="AST: "];
"1000449" -> "1000448"  [label="AST: "];
"1000456" -> "1000448"  [label="CFG: "];
"1000448" -> "1000666"  [label="DDG: ee_block + ee_len <= eof_block"];
"1000448" -> "1000666"  [label="DDG: may_zeroout"];
}
