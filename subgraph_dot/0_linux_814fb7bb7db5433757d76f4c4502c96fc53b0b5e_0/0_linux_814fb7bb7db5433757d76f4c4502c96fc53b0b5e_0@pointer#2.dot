digraph "0_linux_814fb7bb7db5433757d76f4c4502c96fc53b0b5e_0@pointer" {
"1000149" [label="(Call,!buf)"];
"1000113" [label="(Call,buf != buf_fx)"];
"1000106" [label="(MethodParameterIn,void __user *buf)"];
"1000107" [label="(MethodParameterIn,void __user *buf_fx)"];
"1000158" [label="(Call,access_ok(VERIFY_READ, buf, size))"];
"1000157" [label="(Call,!access_ok(VERIFY_READ, buf, size))"];
"1000173" [label="(Call,fpregs_soft_set(current, NULL,\n\t\t\t\t       0, sizeof(struct user_i387_ia32_struct),\n\t\t\t\t       NULL, buf))"];
"1000172" [label="(Call,fpregs_soft_set(current, NULL,\n\t\t\t\t       0, sizeof(struct user_i387_ia32_struct),\n\t\t\t\t       NULL, buf) != 0)"];
"1000171" [label="(Return,return fpregs_soft_set(current, NULL,\n\t\t\t\t       0, sizeof(struct user_i387_ia32_struct),\n\t\t\t\t       NULL, buf) != 0;)"];
"1000267" [label="(Call,__copy_from_user(&env, buf, sizeof(env)))"];
"1000265" [label="(Call,err || __copy_from_user(&env, buf, sizeof(env)))"];
"1000302" [label="(Return,return err;)"];
"1000287" [label="(Call,sanitize_restored_xstate(tsk, &env, xfeatures, fx_only))"];
"1000251" [label="(Call,__copy_from_user(&fpu->state.xsave, buf_fx, state_size))"];
"1000160" [label="(Identifier,buf)"];
"1000166" [label="(Identifier,fpu)"];
"1000268" [label="(Call,&env)"];
"1000217" [label="(Block,)"];
"1000157" [label="(Call,!access_ok(VERIFY_READ, buf, size))"];
"1000198" [label="(Call,fx_only = 1)"];
"1000138" [label="(Call,fx_only = 0)"];
"1000150" [label="(Identifier,buf)"];
"1000288" [label="(Identifier,tsk)"];
"1000295" [label="(Identifier,fpu)"];
"1000158" [label="(Call,access_ok(VERIFY_READ, buf, size))"];
"1000156" [label="(ControlStructure,if (!access_ok(VERIFY_READ, buf, size)))"];
"1000111" [label="(Call,ia32_fxstate = (buf != buf_fx))"];
"1000302" [label="(Return,return err;)"];
"1000161" [label="(Identifier,size)"];
"1000115" [label="(Identifier,buf_fx)"];
"1000265" [label="(Call,err || __copy_from_user(&env, buf, sizeof(env)))"];
"1000175" [label="(Identifier,NULL)"];
"1000320" [label="(MethodReturn,static int)"];
"1000303" [label="(Identifier,err)"];
"1000176" [label="(Literal,0)"];
"1000108" [label="(MethodParameterIn,int size)"];
"1000177" [label="(Call,sizeof(struct user_i387_ia32_struct))"];
"1000271" [label="(Call,sizeof(env))"];
"1000266" [label="(Identifier,err)"];
"1000179" [label="(Identifier,NULL)"];
"1000277" [label="(Identifier,fpu)"];
"1000286" [label="(Block,)"];
"1000148" [label="(ControlStructure,if (!buf))"];
"1000107" [label="(MethodParameterIn,void __user *buf_fx)"];
"1000291" [label="(Identifier,xfeatures)"];
"1000292" [label="(Identifier,fx_only)"];
"1000188" [label="(Call,check_for_xstate(buf_fx, buf_fx, &fx_sw_user))"];
"1000281" [label="(Call,err = -1)"];
"1000181" [label="(Literal,0)"];
"1000264" [label="(ControlStructure,if (err || __copy_from_user(&env, buf, sizeof(env))))"];
"1000167" [label="(ControlStructure,if (!static_cpu_has(X86_FEATURE_FPU)))"];
"1000134" [label="(Call,xfeatures = 0)"];
"1000159" [label="(Identifier,VERIFY_READ)"];
"1000174" [label="(Identifier,current)"];
"1000239" [label="(Call,copy_user_to_xstate(&fpu->state.xsave, buf_fx))"];
"1000149" [label="(Call,!buf)"];
"1000210" [label="(Call,xfeatures = fx_sw_user.xfeatures)"];
"1000270" [label="(Identifier,buf)"];
"1000260" [label="(Call,err = -EINVAL)"];
"1000164" [label="(Identifier,EACCES)"];
"1000289" [label="(Call,&env)"];
"1000172" [label="(Call,fpregs_soft_set(current, NULL,\n\t\t\t\t       0, sizeof(struct user_i387_ia32_struct),\n\t\t\t\t       NULL, buf) != 0)"];
"1000113" [label="(Call,buf != buf_fx)"];
"1000173" [label="(Call,fpregs_soft_set(current, NULL,\n\t\t\t\t       0, sizeof(struct user_i387_ia32_struct),\n\t\t\t\t       NULL, buf))"];
"1000114" [label="(Identifier,buf)"];
"1000153" [label="(Identifier,fpu)"];
"1000308" [label="(Call,copy_user_to_fpregs_zeroing(buf_fx, xfeatures, fx_only))"];
"1000287" [label="(Call,sanitize_restored_xstate(tsk, &env, xfeatures, fx_only))"];
"1000180" [label="(Identifier,buf)"];
"1000106" [label="(MethodParameterIn,void __user *buf)"];
"1000237" [label="(Call,err = copy_user_to_xstate(&fpu->state.xsave, buf_fx))"];
"1000267" [label="(Call,__copy_from_user(&env, buf, sizeof(env)))"];
"1000171" [label="(Return,return fpregs_soft_set(current, NULL,\n\t\t\t\t       0, sizeof(struct user_i387_ia32_struct),\n\t\t\t\t       NULL, buf) != 0;)"];
"1000117" [label="(Call,*tsk = current)"];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000153" -> "1000149"  [label="CFG: "];
"1000159" -> "1000149"  [label="CFG: "];
"1000149" -> "1000320"  [label="DDG: !buf"];
"1000149" -> "1000320"  [label="DDG: buf"];
"1000113" -> "1000149"  [label="DDG: buf"];
"1000106" -> "1000149"  [label="DDG: buf"];
"1000149" -> "1000158"  [label="DDG: buf"];
"1000113" -> "1000111"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000111" -> "1000113"  [label="CFG: "];
"1000113" -> "1000320"  [label="DDG: buf_fx"];
"1000113" -> "1000111"  [label="DDG: buf"];
"1000113" -> "1000111"  [label="DDG: buf_fx"];
"1000106" -> "1000113"  [label="DDG: buf"];
"1000107" -> "1000113"  [label="DDG: buf_fx"];
"1000113" -> "1000188"  [label="DDG: buf_fx"];
"1000113" -> "1000239"  [label="DDG: buf_fx"];
"1000113" -> "1000251"  [label="DDG: buf_fx"];
"1000113" -> "1000308"  [label="DDG: buf_fx"];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000320"  [label="DDG: buf"];
"1000106" -> "1000158"  [label="DDG: buf"];
"1000106" -> "1000173"  [label="DDG: buf"];
"1000106" -> "1000267"  [label="DDG: buf"];
"1000107" -> "1000105"  [label="AST: "];
"1000107" -> "1000320"  [label="DDG: buf_fx"];
"1000107" -> "1000188"  [label="DDG: buf_fx"];
"1000107" -> "1000239"  [label="DDG: buf_fx"];
"1000107" -> "1000251"  [label="DDG: buf_fx"];
"1000107" -> "1000308"  [label="DDG: buf_fx"];
"1000158" -> "1000157"  [label="AST: "];
"1000158" -> "1000161"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000161" -> "1000158"  [label="AST: "];
"1000157" -> "1000158"  [label="CFG: "];
"1000158" -> "1000320"  [label="DDG: VERIFY_READ"];
"1000158" -> "1000320"  [label="DDG: buf"];
"1000158" -> "1000320"  [label="DDG: size"];
"1000158" -> "1000157"  [label="DDG: VERIFY_READ"];
"1000158" -> "1000157"  [label="DDG: buf"];
"1000158" -> "1000157"  [label="DDG: size"];
"1000108" -> "1000158"  [label="DDG: size"];
"1000158" -> "1000173"  [label="DDG: buf"];
"1000158" -> "1000267"  [label="DDG: buf"];
"1000157" -> "1000156"  [label="AST: "];
"1000164" -> "1000157"  [label="CFG: "];
"1000166" -> "1000157"  [label="CFG: "];
"1000157" -> "1000320"  [label="DDG: !access_ok(VERIFY_READ, buf, size)"];
"1000157" -> "1000320"  [label="DDG: access_ok(VERIFY_READ, buf, size)"];
"1000173" -> "1000172"  [label="AST: "];
"1000173" -> "1000180"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000175" -> "1000173"  [label="AST: "];
"1000176" -> "1000173"  [label="AST: "];
"1000177" -> "1000173"  [label="AST: "];
"1000179" -> "1000173"  [label="AST: "];
"1000180" -> "1000173"  [label="AST: "];
"1000181" -> "1000173"  [label="CFG: "];
"1000173" -> "1000320"  [label="DDG: NULL"];
"1000173" -> "1000320"  [label="DDG: buf"];
"1000173" -> "1000320"  [label="DDG: current"];
"1000173" -> "1000172"  [label="DDG: NULL"];
"1000173" -> "1000172"  [label="DDG: current"];
"1000173" -> "1000172"  [label="DDG: 0"];
"1000173" -> "1000172"  [label="DDG: buf"];
"1000172" -> "1000171"  [label="AST: "];
"1000172" -> "1000181"  [label="CFG: "];
"1000181" -> "1000172"  [label="AST: "];
"1000171" -> "1000172"  [label="CFG: "];
"1000172" -> "1000320"  [label="DDG: fpregs_soft_set(current, NULL,\n\t\t\t\t       0, sizeof(struct user_i387_ia32_struct),\n\t\t\t\t       NULL, buf) != 0"];
"1000172" -> "1000320"  [label="DDG: fpregs_soft_set(current, NULL,\n\t\t\t\t       0, sizeof(struct user_i387_ia32_struct),\n\t\t\t\t       NULL, buf)"];
"1000172" -> "1000171"  [label="DDG: fpregs_soft_set(current, NULL,\n\t\t\t\t       0, sizeof(struct user_i387_ia32_struct),\n\t\t\t\t       NULL, buf) != 0"];
"1000171" -> "1000167"  [label="AST: "];
"1000320" -> "1000171"  [label="CFG: "];
"1000171" -> "1000320"  [label="DDG: <RET>"];
"1000267" -> "1000265"  [label="AST: "];
"1000267" -> "1000271"  [label="CFG: "];
"1000268" -> "1000267"  [label="AST: "];
"1000270" -> "1000267"  [label="AST: "];
"1000271" -> "1000267"  [label="AST: "];
"1000265" -> "1000267"  [label="CFG: "];
"1000267" -> "1000320"  [label="DDG: &env"];
"1000267" -> "1000320"  [label="DDG: buf"];
"1000267" -> "1000265"  [label="DDG: &env"];
"1000267" -> "1000265"  [label="DDG: buf"];
"1000267" -> "1000287"  [label="DDG: &env"];
"1000265" -> "1000264"  [label="AST: "];
"1000265" -> "1000266"  [label="CFG: "];
"1000266" -> "1000265"  [label="AST: "];
"1000277" -> "1000265"  [label="CFG: "];
"1000288" -> "1000265"  [label="CFG: "];
"1000265" -> "1000320"  [label="DDG: err || __copy_from_user(&env, buf, sizeof(env))"];
"1000265" -> "1000320"  [label="DDG: __copy_from_user(&env, buf, sizeof(env))"];
"1000265" -> "1000320"  [label="DDG: err"];
"1000237" -> "1000265"  [label="DDG: err"];
"1000260" -> "1000265"  [label="DDG: err"];
"1000265" -> "1000302"  [label="DDG: err"];
"1000302" -> "1000217"  [label="AST: "];
"1000302" -> "1000303"  [label="CFG: "];
"1000303" -> "1000302"  [label="AST: "];
"1000320" -> "1000302"  [label="CFG: "];
"1000302" -> "1000320"  [label="DDG: <RET>"];
"1000303" -> "1000302"  [label="DDG: err"];
"1000281" -> "1000302"  [label="DDG: err"];
"1000287" -> "1000286"  [label="AST: "];
"1000287" -> "1000292"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000287"  [label="AST: "];
"1000291" -> "1000287"  [label="AST: "];
"1000292" -> "1000287"  [label="AST: "];
"1000295" -> "1000287"  [label="CFG: "];
"1000287" -> "1000320"  [label="DDG: xfeatures"];
"1000287" -> "1000320"  [label="DDG: fx_only"];
"1000287" -> "1000320"  [label="DDG: sanitize_restored_xstate(tsk, &env, xfeatures, fx_only)"];
"1000287" -> "1000320"  [label="DDG: &env"];
"1000287" -> "1000320"  [label="DDG: tsk"];
"1000117" -> "1000287"  [label="DDG: tsk"];
"1000134" -> "1000287"  [label="DDG: xfeatures"];
"1000210" -> "1000287"  [label="DDG: xfeatures"];
"1000138" -> "1000287"  [label="DDG: fx_only"];
"1000198" -> "1000287"  [label="DDG: fx_only"];
}
