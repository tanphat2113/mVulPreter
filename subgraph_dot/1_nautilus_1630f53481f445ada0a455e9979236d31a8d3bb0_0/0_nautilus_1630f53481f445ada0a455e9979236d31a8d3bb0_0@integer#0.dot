digraph "0_nautilus_1630f53481f445ada0a455e9979236d31a8d3bb0_0@integer" {
"1000332" [label="(Call,response = run_cancel_or_skip_warning (job,\n                                               primary,\n                                               secondary,\n                                               NULL,\n                                               source_info->num_files,\n                                               source_info->num_files - transfer_info->num_files))"];
"1000334" [label="(Call,run_cancel_or_skip_warning (job,\n                                               primary,\n                                               secondary,\n                                               NULL,\n                                               source_info->num_files,\n                                               source_info->num_files - transfer_info->num_files))"];
"1000167" [label="(Call,should_skip_file (job, src))"];
"1000161" [label="(Call,job = (CommonJob *) copy_job)"];
"1000163" [label="(Call,(CommonJob *) copy_job)"];
"1000128" [label="(MethodParameterIn,CopyMoveJob   *copy_job)"];
"1000129" [label="(MethodParameterIn,GFile         *src)"];
"1000315" [label="(Call,primary = copy_job->is_move ? g_strdup (_(\"You cannot move a file over itself.\"))\n                  : g_strdup (_(\"You cannot copy a file over itself.\")))"];
"1000321" [label="(Call,g_strdup (_(\"You cannot move a file over itself.\")))"];
"1000322" [label="(Call,_(\"You cannot move a file over itself.\"))"];
"1000324" [label="(Call,g_strdup (_(\"You cannot copy a file over itself.\")))"];
"1000325" [label="(Call,_(\"You cannot copy a file over itself.\"))"];
"1000327" [label="(Call,secondary = g_strdup (_(\"The source file would be overwritten by the destination.\")))"];
"1000329" [label="(Call,g_strdup (_(\"The source file would be overwritten by the destination.\")))"];
"1000330" [label="(Call,_(\"The source file would be overwritten by the destination.\"))"];
"1000181" [label="(Call,*dest_fs_type != NULL)"];
"1000200" [label="(Call,copy_job->target_name != NULL)"];
"1000342" [label="(Call,source_info->num_files - transfer_info->num_files)"];
"1000351" [label="(Call,response == 0)"];
"1000350" [label="(Call,response == 0 || response == GTK_RESPONSE_DELETE_EVENT)"];
"1000354" [label="(Call,response == GTK_RESPONSE_DELETE_EVENT)"];
"1000362" [label="(Call,response == 1)"];
"1000373" [label="(Call,response == 2)"];
"1000334" [label="(Call,run_cancel_or_skip_warning (job,\n                                               primary,\n                                               secondary,\n                                               NULL,\n                                               source_info->num_files,\n                                               source_info->num_files - transfer_info->num_files))"];
"1000354" [label="(Call,response == GTK_RESPONSE_DELETE_EVENT)"];
"1000228" [label="(Call,test_dir_is_parent (dest_dir, src))"];
"1000710" [label="(Call,handle_copy_move_conflict (job, src, dest, dest_dir))"];
"1000363" [label="(Identifier,response)"];
"1000330" [label="(Call,_(\"The source file would be overwritten by the destination.\"))"];
"1000549" [label="(Call,is_trusted_desktop_file (src, job->cancellable))"];
"1000909" [label="(Call,f (_(\"Error while moving ?%B?.\"), src))"];
"1001011" [label="(Call,*dest_fs_type != NULL)"];
"1000177" [label="(Identifier,unique_name_nr)"];
"1000591" [label="(Call,*dest_fs_type == NULL)"];
"1000317" [label="(Call,copy_job->is_move ? g_strdup (_(\"You cannot move a file over itself.\"))\n                  : g_strdup (_(\"You cannot copy a file over itself.\")))"];
"1000257" [label="(Call,run_cancel_or_skip_warning (job,\n                                               primary,\n                                               secondary,\n                                               NULL,\n                                               source_info->num_files,\n                                               source_info->num_files - transfer_info->num_files))"];
"1000351" [label="(Call,response == 0)"];
"1000169" [label="(Identifier,src)"];
"1000331" [label="(Literal,\"The source file would be overwritten by the destination.\")"];
"1000342" [label="(Call,source_info->num_files - transfer_info->num_files)"];
"1000364" [label="(Literal,1)"];
"1000427" [label="(Call,g_file_move (src, dest,\n                           flags,\n                           job->cancellable,\n                           copy_file_progress_callback,\n                           &pdata,\n                           &error))"];
"1000983" [label="(Call,error = NULL)"];
"1000368" [label="(Identifier,job)"];
"1000328" [label="(Identifier,secondary)"];
"1000821" [label="(Call,data.job = job)"];
"1000166" [label="(ControlStructure,if (should_skip_file (job, src)))"];
"1000335" [label="(Identifier,job)"];
"1000181" [label="(Call,*dest_fs_type != NULL)"];
"1000182" [label="(Call,*dest_fs_type)"];
"1000350" [label="(Call,response == 0 || response == GTK_RESPONSE_DELETE_EVENT)"];
"1000400" [label="(Call,pdata.job = copy_job)"];
"1001114" [label="(MethodReturn,RET)"];
"1000555" [label="(Call,mark_desktop_file_trusted (job,\n                                       job->cancellable,\n                                       dest,\n                                       FALSE))"];
"1000141" [label="(Block,)"];
"1000162" [label="(Identifier,job)"];
"1000826" [label="(Call,data.source = src)"];
"1000163" [label="(Call,(CommonJob *) copy_job)"];
"1000375" [label="(Literal,2)"];
"1000325" [label="(Call,_(\"You cannot copy a file over itself.\"))"];
"1000129" [label="(MethodParameterIn,GFile         *src)"];
"1000346" [label="(Call,transfer_info->num_files)"];
"1000538" [label="(Call,copy_job->desktop_location != NULL)"];
"1000469" [label="(Call,real == NULL)"];
"1000608" [label="(Call,get_unique_target_file (src, dest_dir, same_fs, *dest_fs_type, unique_name_nr))"];
"1000220" [label="(Identifier,dest)"];
"1000305" [label="(Call,test_dir_is_parent (src, dest))"];
"1000128" [label="(MethodParameterIn,CopyMoveJob   *copy_job)"];
"1000324" [label="(Call,g_strdup (_(\"You cannot copy a file over itself.\")))"];
"1000207" [label="(Identifier,dest)"];
"1000199" [label="(ControlStructure,if (copy_job->target_name != NULL))"];
"1000678" [label="(Call,is_dir (src))"];
"1000662" [label="(Call,get_unique_target_file (src, dest_dir, same_fs, *dest_fs_type, unique_name_nr++))"];
"1000204" [label="(Identifier,NULL)"];
"1000352" [label="(Identifier,response)"];
"1000569" [label="(Call,nautilus_file_undo_info_ext_add_origin_target_pair (NAUTILUS_FILE_UNDO_INFO_EXT (job->undo_info),\n                                                                src, dest))"];
"1000337" [label="(Identifier,secondary)"];
"1000327" [label="(Call,secondary = g_strdup (_(\"The source file would be overwritten by the destination.\")))"];
"1000336" [label="(Identifier,primary)"];
"1000373" [label="(Call,response == 2)"];
"1000323" [label="(Literal,\"You cannot move a file over itself.\")"];
"1000315" [label="(Call,primary = copy_job->is_move ? g_strdup (_(\"You cannot move a file over itself.\"))\n                  : g_strdup (_(\"You cannot copy a file over itself.\")))"];
"1000353" [label="(Literal,0)"];
"1000443" [label="(Call,g_file_copy (src, dest,\n                           flags,\n                           job->cancellable,\n                           copy_file_progress_callback,\n                           &pdata,\n                           &error))"];
"1000173" [label="(Identifier,skipped_file)"];
"1000619" [label="(Call,get_target_file (src, dest_dir, *dest_fs_type, same_fs))"];
"1000374" [label="(Identifier,response)"];
"1000308" [label="(Block,)"];
"1000349" [label="(ControlStructure,if (response == 0 || response == GTK_RESPONSE_DELETE_EVENT))"];
"1000356" [label="(Identifier,GTK_RESPONSE_DELETE_EVENT)"];
"1000165" [label="(Identifier,copy_job)"];
"1000382" [label="(Call,error = NULL)"];
"1000339" [label="(Call,source_info->num_files)"];
"1000326" [label="(Literal,\"You cannot copy a file over itself.\")"];
"1000333" [label="(Identifier,response)"];
"1000329" [label="(Call,g_strdup (_(\"The source file would be overwritten by the destination.\")))"];
"1000167" [label="(Call,should_skip_file (job, src))"];
"1000876" [label="(Call,error = NULL)"];
"1000338" [label="(Identifier,NULL)"];
"1000490" [label="(Call,report_copy_progress (copy_job, source_info, transfer_info))"];
"1000361" [label="(ControlStructure,if (response == 1))"];
"1000529" [label="(Call,nautilus_file_changes_queue_file_moved (src, dest))"];
"1000190" [label="(Call,get_unique_target_file (src, dest_dir, same_fs, *dest_fs_type, unique_name_nr++))"];
"1000372" [label="(ControlStructure,if (response == 2))"];
"1001059" [label="(Call,run_cancel_or_skip_warning (job,\n                                               primary,\n                                               secondary,\n                                               details,\n                                               source_info->num_files,\n                                               source_info->num_files - transfer_info->num_files))"];
"1000321" [label="(Call,g_strdup (_(\"You cannot move a file over itself.\")))"];
"1000200" [label="(Call,copy_job->target_name != NULL)"];
"1000168" [label="(Identifier,job)"];
"1000316" [label="(Identifier,primary)"];
"1000161" [label="(Call,job = (CommonJob *) copy_job)"];
"1000332" [label="(Call,response = run_cancel_or_skip_warning (job,\n                                               primary,\n                                               secondary,\n                                               NULL,\n                                               source_info->num_files,\n                                               source_info->num_files - transfer_info->num_files))"];
"1000359" [label="(Identifier,job)"];
"1000355" [label="(Identifier,response)"];
"1000934" [label="(Call,run_warning (job,\n                                        primary,\n                                        secondary,\n                                        details,\n                                        TRUE,\n                                        CANCEL, SKIP_ALL, SKIP,\n                                        NULL))"];
"1000221" [label="(Call,get_target_file (src, dest_dir, *dest_fs_type, same_fs))"];
"1000184" [label="(Identifier,NULL)"];
"1001042" [label="(Call,f (_(\"Error while copying ?%B?.\"), src))"];
"1000917" [label="(Call,f (_(\"Error while copying ?%B?.\"), src))"];
"1000201" [label="(Call,copy_job->target_name)"];
"1000996" [label="(Call,copy_move_directory (copy_job, src, &dest, same_fs,\n                                  would_recurse, dest_fs_type,\n                                  source_info, transfer_info,\n                                  debuting_files, skipped_file,\n                                  readonly_source_fs))"];
"1000322" [label="(Call,_(\"You cannot move a file over itself.\"))"];
"1000343" [label="(Call,source_info->num_files)"];
"1000208" [label="(Call,get_target_file_with_custom_name (src, dest_dir, *dest_fs_type, same_fs,\n                                                 copy_job->target_name))"];
"1000179" [label="(Call,handled_invalid_filename = *dest_fs_type != NULL)"];
"1000379" [label="(Call,g_assert_not_reached ())"];
"1000362" [label="(Call,response == 1)"];
"1000358" [label="(Call,abort_job (job))"];
"1000332" -> "1000308"  [label="AST: "];
"1000332" -> "1000334"  [label="CFG: "];
"1000333" -> "1000332"  [label="AST: "];
"1000334" -> "1000332"  [label="AST: "];
"1000352" -> "1000332"  [label="CFG: "];
"1000332" -> "1001114"  [label="DDG: "];
"1000334" -> "1000332"  [label="DDG: "];
"1000334" -> "1000332"  [label="DDG: "];
"1000334" -> "1000332"  [label="DDG: "];
"1000334" -> "1000332"  [label="DDG: "];
"1000334" -> "1000332"  [label="DDG: "];
"1000334" -> "1000332"  [label="DDG: "];
"1000332" -> "1000351"  [label="DDG: "];
"1000334" -> "1000342"  [label="CFG: "];
"1000335" -> "1000334"  [label="AST: "];
"1000336" -> "1000334"  [label="AST: "];
"1000337" -> "1000334"  [label="AST: "];
"1000338" -> "1000334"  [label="AST: "];
"1000339" -> "1000334"  [label="AST: "];
"1000342" -> "1000334"  [label="AST: "];
"1000334" -> "1001114"  [label="DDG: "];
"1000334" -> "1001114"  [label="DDG: "];
"1000334" -> "1001114"  [label="DDG: "];
"1000334" -> "1001114"  [label="DDG: "];
"1000334" -> "1001114"  [label="DDG: "];
"1000334" -> "1001114"  [label="DDG: "];
"1000167" -> "1000334"  [label="DDG: "];
"1000315" -> "1000334"  [label="DDG: "];
"1000327" -> "1000334"  [label="DDG: "];
"1000181" -> "1000334"  [label="DDG: "];
"1000200" -> "1000334"  [label="DDG: "];
"1000342" -> "1000334"  [label="DDG: "];
"1000342" -> "1000334"  [label="DDG: "];
"1000334" -> "1000358"  [label="DDG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000167" -> "1000169"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000169" -> "1000167"  [label="AST: "];
"1000173" -> "1000167"  [label="CFG: "];
"1000177" -> "1000167"  [label="CFG: "];
"1000167" -> "1001114"  [label="DDG: "];
"1000167" -> "1001114"  [label="DDG: "];
"1000167" -> "1001114"  [label="DDG: "];
"1000161" -> "1000167"  [label="DDG: "];
"1000129" -> "1000167"  [label="DDG: "];
"1000167" -> "1000190"  [label="DDG: "];
"1000167" -> "1000208"  [label="DDG: "];
"1000167" -> "1000221"  [label="DDG: "];
"1000167" -> "1000257"  [label="DDG: "];
"1000167" -> "1000555"  [label="DDG: "];
"1000167" -> "1000710"  [label="DDG: "];
"1000167" -> "1000821"  [label="DDG: "];
"1000167" -> "1000934"  [label="DDG: "];
"1000167" -> "1001059"  [label="DDG: "];
"1000161" -> "1000141"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000168" -> "1000161"  [label="CFG: "];
"1000161" -> "1001114"  [label="DDG: "];
"1000163" -> "1000161"  [label="DDG: "];
"1000163" -> "1000165"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000165" -> "1000163"  [label="AST: "];
"1000163" -> "1001114"  [label="DDG: "];
"1000128" -> "1000163"  [label="DDG: "];
"1000163" -> "1000400"  [label="DDG: "];
"1000163" -> "1000490"  [label="DDG: "];
"1000163" -> "1000996"  [label="DDG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1001114"  [label="DDG: "];
"1000128" -> "1000400"  [label="DDG: "];
"1000128" -> "1000490"  [label="DDG: "];
"1000128" -> "1000996"  [label="DDG: "];
"1000129" -> "1000127"  [label="AST: "];
"1000129" -> "1001114"  [label="DDG: "];
"1000129" -> "1000190"  [label="DDG: "];
"1000129" -> "1000208"  [label="DDG: "];
"1000129" -> "1000221"  [label="DDG: "];
"1000129" -> "1000228"  [label="DDG: "];
"1000129" -> "1000305"  [label="DDG: "];
"1000129" -> "1000427"  [label="DDG: "];
"1000129" -> "1000443"  [label="DDG: "];
"1000129" -> "1000529"  [label="DDG: "];
"1000129" -> "1000549"  [label="DDG: "];
"1000129" -> "1000569"  [label="DDG: "];
"1000129" -> "1000608"  [label="DDG: "];
"1000129" -> "1000619"  [label="DDG: "];
"1000129" -> "1000662"  [label="DDG: "];
"1000129" -> "1000678"  [label="DDG: "];
"1000129" -> "1000710"  [label="DDG: "];
"1000129" -> "1000826"  [label="DDG: "];
"1000129" -> "1000909"  [label="DDG: "];
"1000129" -> "1000917"  [label="DDG: "];
"1000129" -> "1000996"  [label="DDG: "];
"1000129" -> "1001042"  [label="DDG: "];
"1000315" -> "1000308"  [label="AST: "];
"1000315" -> "1000317"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000317" -> "1000315"  [label="AST: "];
"1000328" -> "1000315"  [label="CFG: "];
"1000315" -> "1001114"  [label="DDG: "];
"1000321" -> "1000315"  [label="DDG: "];
"1000324" -> "1000315"  [label="DDG: "];
"1000321" -> "1000317"  [label="AST: "];
"1000321" -> "1000322"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000317" -> "1000321"  [label="CFG: "];
"1000321" -> "1001114"  [label="DDG: "];
"1000321" -> "1000317"  [label="DDG: "];
"1000322" -> "1000321"  [label="DDG: "];
"1000322" -> "1000323"  [label="CFG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000324" -> "1000317"  [label="AST: "];
"1000324" -> "1000325"  [label="CFG: "];
"1000325" -> "1000324"  [label="AST: "];
"1000317" -> "1000324"  [label="CFG: "];
"1000324" -> "1001114"  [label="DDG: "];
"1000324" -> "1000317"  [label="DDG: "];
"1000325" -> "1000324"  [label="DDG: "];
"1000325" -> "1000326"  [label="CFG: "];
"1000326" -> "1000325"  [label="AST: "];
"1000327" -> "1000308"  [label="AST: "];
"1000327" -> "1000329"  [label="CFG: "];
"1000328" -> "1000327"  [label="AST: "];
"1000329" -> "1000327"  [label="AST: "];
"1000333" -> "1000327"  [label="CFG: "];
"1000327" -> "1001114"  [label="DDG: "];
"1000329" -> "1000327"  [label="DDG: "];
"1000329" -> "1000330"  [label="CFG: "];
"1000330" -> "1000329"  [label="AST: "];
"1000329" -> "1001114"  [label="DDG: "];
"1000330" -> "1000329"  [label="DDG: "];
"1000330" -> "1000331"  [label="CFG: "];
"1000331" -> "1000330"  [label="AST: "];
"1000181" -> "1000179"  [label="AST: "];
"1000181" -> "1000184"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000184" -> "1000181"  [label="AST: "];
"1000179" -> "1000181"  [label="CFG: "];
"1000181" -> "1001114"  [label="DDG: "];
"1000181" -> "1000179"  [label="DDG: "];
"1000181" -> "1000179"  [label="DDG: "];
"1000181" -> "1000190"  [label="DDG: "];
"1000181" -> "1000200"  [label="DDG: "];
"1000181" -> "1000208"  [label="DDG: "];
"1000181" -> "1000221"  [label="DDG: "];
"1000181" -> "1000257"  [label="DDG: "];
"1000181" -> "1000382"  [label="DDG: "];
"1000181" -> "1000469"  [label="DDG: "];
"1000181" -> "1000538"  [label="DDG: "];
"1000181" -> "1000591"  [label="DDG: "];
"1000181" -> "1000876"  [label="DDG: "];
"1000181" -> "1000934"  [label="DDG: "];
"1000181" -> "1000983"  [label="DDG: "];
"1000181" -> "1001011"  [label="DDG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000200" -> "1000204"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000204" -> "1000200"  [label="AST: "];
"1000207" -> "1000200"  [label="CFG: "];
"1000220" -> "1000200"  [label="CFG: "];
"1000200" -> "1001114"  [label="DDG: "];
"1000200" -> "1001114"  [label="DDG: "];
"1000200" -> "1001114"  [label="DDG: "];
"1000200" -> "1000208"  [label="DDG: "];
"1000200" -> "1000257"  [label="DDG: "];
"1000200" -> "1000382"  [label="DDG: "];
"1000200" -> "1000469"  [label="DDG: "];
"1000200" -> "1000538"  [label="DDG: "];
"1000200" -> "1000591"  [label="DDG: "];
"1000200" -> "1000876"  [label="DDG: "];
"1000200" -> "1000934"  [label="DDG: "];
"1000200" -> "1000983"  [label="DDG: "];
"1000200" -> "1001011"  [label="DDG: "];
"1000342" -> "1000346"  [label="CFG: "];
"1000343" -> "1000342"  [label="AST: "];
"1000346" -> "1000342"  [label="AST: "];
"1000342" -> "1001114"  [label="DDG: "];
"1000351" -> "1000350"  [label="AST: "];
"1000351" -> "1000353"  [label="CFG: "];
"1000352" -> "1000351"  [label="AST: "];
"1000353" -> "1000351"  [label="AST: "];
"1000355" -> "1000351"  [label="CFG: "];
"1000350" -> "1000351"  [label="CFG: "];
"1000351" -> "1001114"  [label="DDG: "];
"1000351" -> "1000350"  [label="DDG: "];
"1000351" -> "1000350"  [label="DDG: "];
"1000351" -> "1000354"  [label="DDG: "];
"1000351" -> "1000362"  [label="DDG: "];
"1000350" -> "1000349"  [label="AST: "];
"1000350" -> "1000354"  [label="CFG: "];
"1000354" -> "1000350"  [label="AST: "];
"1000359" -> "1000350"  [label="CFG: "];
"1000363" -> "1000350"  [label="CFG: "];
"1000350" -> "1001114"  [label="DDG: "];
"1000350" -> "1001114"  [label="DDG: "];
"1000350" -> "1001114"  [label="DDG: "];
"1000354" -> "1000350"  [label="DDG: "];
"1000354" -> "1000350"  [label="DDG: "];
"1000354" -> "1000356"  [label="CFG: "];
"1000355" -> "1000354"  [label="AST: "];
"1000356" -> "1000354"  [label="AST: "];
"1000354" -> "1001114"  [label="DDG: "];
"1000354" -> "1001114"  [label="DDG: "];
"1000354" -> "1000362"  [label="DDG: "];
"1000362" -> "1000361"  [label="AST: "];
"1000362" -> "1000364"  [label="CFG: "];
"1000363" -> "1000362"  [label="AST: "];
"1000364" -> "1000362"  [label="AST: "];
"1000368" -> "1000362"  [label="CFG: "];
"1000374" -> "1000362"  [label="CFG: "];
"1000362" -> "1001114"  [label="DDG: "];
"1000362" -> "1001114"  [label="DDG: "];
"1000362" -> "1000373"  [label="DDG: "];
"1000373" -> "1000372"  [label="AST: "];
"1000373" -> "1000375"  [label="CFG: "];
"1000374" -> "1000373"  [label="AST: "];
"1000375" -> "1000373"  [label="AST: "];
"1000379" -> "1000373"  [label="CFG: "];
"1000373" -> "1001114"  [label="DDG: "];
"1000373" -> "1001114"  [label="DDG: "];
}
