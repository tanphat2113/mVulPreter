digraph "0_Android_db829699d3293f254a7387894303451a91278986@API" {
"1000405" [label="(Call,err = data.read(params, size))"];
"1000407" [label="(Call,data.read(params, size))"];
"1000401" [label="(Call,params != MAP_FAILED)"];
"1000303" [label="(Call,*params = NULL)"];
"1000386" [label="(Call,params = mmap(NULL, allocSize, PROT_READ | PROT_WRITE,\n                            MAP_PRIVATE | MAP_ANONYMOUS, -1 /* fd */, 0 /* offset */))"];
"1000388" [label="(Call,mmap(NULL, allocSize, PROT_READ | PROT_WRITE,\n                            MAP_PRIVATE | MAP_ANONYMOUS, -1 /* fd */, 0 /* offset */))"];
"1000374" [label="(Call,allocSize = (size + pageSize * 2) & ~(pageSize - 1))"];
"1000376" [label="(Call,(size + pageSize * 2) & ~(pageSize - 1))"];
"1000362" [label="(Call,size > SIZE_MAX - (pageSize * 2))"];
"1000295" [label="(Call,size = data.readInt64())"];
"1000326" [label="(Call,size < 4)"];
"1000336" [label="(Call,size < 8)"];
"1000364" [label="(Call,SIZE_MAX - (pageSize * 2))"];
"1000366" [label="(Call,pageSize * 2)"];
"1000355" [label="(Call,pageSize = (size_t) sysconf(_SC_PAGE_SIZE))"];
"1000357" [label="(Call,(size_t) sysconf(_SC_PAGE_SIZE))"];
"1000359" [label="(Call,sysconf(_SC_PAGE_SIZE))"];
"1000379" [label="(Call,pageSize * 2)"];
"1000382" [label="(Call,~(pageSize - 1))"];
"1000383" [label="(Call,pageSize - 1)"];
"1000391" [label="(Call,PROT_READ | PROT_WRITE)"];
"1000394" [label="(Call,MAP_PRIVATE | MAP_ANONYMOUS)"];
"1000397" [label="(Call,-1)"];
"1000411" [label="(Call,err != OK)"];
"1000528" [label="(Call,reply->writeInt32(err))"];
"1000539" [label="(Call,err == OK)"];
"1000531" [label="(Call,(code == GET_PARAMETER || code == GET_CONFIG) && err == OK)"];
"1000365" [label="(Identifier,SIZE_MAX)"];
"1000326" [label="(Call,size < 4)"];
"1000382" [label="(Call,~(pageSize - 1))"];
"1000391" [label="(Call,PROT_READ | PROT_WRITE)"];
"1000401" [label="(Call,params != MAP_FAILED)"];
"1000308" [label="(Identifier,pageSize)"];
"1000477" [label="(Call,err = setParameter(node, index, params, size))"];
"1000340" [label="(Call,ALOGE(\"b/27207275 (%zu) (%d/%d)\", size, int(index), int(code)))"];
"1000547" [label="(Identifier,params)"];
"1000375" [label="(Identifier,allocSize)"];
"1000402" [label="(Identifier,params)"];
"1000371" [label="(Literal,\"requested param size too big\")"];
"1000295" [label="(Call,size = data.readInt64())"];
"1000362" [label="(Call,size > SIZE_MAX - (pageSize * 2))"];
"1000363" [label="(Identifier,size)"];
"1000528" [label="(Call,reply->writeInt32(err))"];
"1000304" [label="(Identifier,params)"];
"1000376" [label="(Call,(size + pageSize * 2) & ~(pageSize - 1))"];
"1000495" [label="(Call,err = setConfig(node, index, params, size))"];
"1000383" [label="(Call,pageSize - 1)"];
"1000470" [label="(Call,getParameter(node, index, params, size))"];
"1000377" [label="(Call,size + pageSize * 2)"];
"1000352" [label="(Call,err = NO_MEMORY)"];
"1000532" [label="(Call,code == GET_PARAMETER || code == GET_CONFIG)"];
"1000336" [label="(Call,size < 8)"];
"1000360" [label="(Identifier,_SC_PAGE_SIZE)"];
"1000403" [label="(Identifier,MAP_FAILED)"];
"1001364" [label="(MethodReturn,status_t)"];
"1000361" [label="(ControlStructure,if (size > SIZE_MAX - (pageSize * 2)))"];
"1000479" [label="(Call,setParameter(node, index, params, size))"];
"1000277" [label="(Block,)"];
"1000530" [label="(ControlStructure,if ((code == GET_PARAMETER || code == GET_CONFIG) && err == OK))"];
"1000513" [label="(Call,setInternalOption(node, index, type, params, size))"];
"1000359" [label="(Call,sysconf(_SC_PAGE_SIZE))"];
"1000405" [label="(Call,err = data.read(params, size))"];
"1000421" [label="(Identifier,err)"];
"1000297" [label="(Call,data.readInt64())"];
"1000356" [label="(Identifier,pageSize)"];
"1000413" [label="(Identifier,OK)"];
"1000531" [label="(Call,(code == GET_PARAMETER || code == GET_CONFIG) && err == OK)"];
"1000541" [label="(Identifier,OK)"];
"1000389" [label="(Identifier,NULL)"];
"1000459" [label="(Call,allocSize - pageSize)"];
"1000366" [label="(Call,pageSize * 2)"];
"1000351" [label="(Block,)"];
"1000357" [label="(Call,(size_t) sysconf(_SC_PAGE_SIZE))"];
"1000393" [label="(Identifier,PROT_WRITE)"];
"1000386" [label="(Call,params = mmap(NULL, allocSize, PROT_READ | PROT_WRITE,\n                            MAP_PRIVATE | MAP_ANONYMOUS, -1 /* fd */, 0 /* offset */))"];
"1000373" [label="(Block,)"];
"1000488" [label="(Call,getConfig(node, index, params, size))"];
"1000324" [label="(Call,isUsageBits && size < 4)"];
"1000497" [label="(Call,setConfig(node, index, params, size))"];
"1000385" [label="(Literal,1)"];
"1000529" [label="(Identifier,err)"];
"1000395" [label="(Identifier,MAP_PRIVATE)"];
"1000368" [label="(Literal,2)"];
"1000355" [label="(Call,pageSize = (size_t) sysconf(_SC_PAGE_SIZE))"];
"1000486" [label="(Call,err = getConfig(node, index, params, size))"];
"1000392" [label="(Identifier,PROT_READ)"];
"1000332" [label="(Call,code != SET_INTERNAL_OPTION && size < 8)"];
"1000299" [label="(Call,err = NOT_ENOUGH_DATA)"];
"1000380" [label="(Identifier,pageSize)"];
"1000396" [label="(Identifier,MAP_ANONYMOUS)"];
"1000511" [label="(Call,err = setInternalOption(node, index, type, params, size))"];
"1000379" [label="(Call,pageSize * 2)"];
"1000328" [label="(Literal,4)"];
"1000407" [label="(Call,data.read(params, size))"];
"1000387" [label="(Identifier,params)"];
"1000300" [label="(Identifier,err)"];
"1000411" [label="(Call,err != OK)"];
"1000408" [label="(Identifier,params)"];
"1000406" [label="(Identifier,err)"];
"1000400" [label="(ControlStructure,if (params != MAP_FAILED))"];
"1000364" [label="(Call,SIZE_MAX - (pageSize * 2))"];
"1000296" [label="(Identifier,size)"];
"1000397" [label="(Call,-1)"];
"1000549" [label="(Call,munmap(params, allocSize))"];
"1000338" [label="(Literal,8)"];
"1000468" [label="(Call,err = getParameter(node, index, params, size))"];
"1000399" [label="(Literal,0)"];
"1000305" [label="(Identifier,NULL)"];
"1000327" [label="(Identifier,size)"];
"1000420" [label="(Call,err = NOT_ENOUGH_DATA)"];
"1000394" [label="(Call,MAP_PRIVATE | MAP_ANONYMOUS)"];
"1000539" [label="(Call,err == OK)"];
"1000410" [label="(ControlStructure,if (err != OK))"];
"1000303" [label="(Call,*params = NULL)"];
"1000525" [label="(Literal,\"couldn't map: %s\")"];
"1000534" [label="(Identifier,code)"];
"1000427" [label="(Call,(OMX_U32*)params)"];
"1000388" [label="(Call,mmap(NULL, allocSize, PROT_READ | PROT_WRITE,\n                            MAP_PRIVATE | MAP_ANONYMOUS, -1 /* fd */, 0 /* offset */))"];
"1000552" [label="(Call,params = NULL)"];
"1000398" [label="(Literal,1)"];
"1000441" [label="(Call,declaredSize > size)"];
"1000390" [label="(Identifier,allocSize)"];
"1000540" [label="(Identifier,err)"];
"1000367" [label="(Identifier,pageSize)"];
"1000544" [label="(Identifier,params)"];
"1000445" [label="(Call,ALOGE(\"b/27207275 (%u/%zu)\", declaredSize, size))"];
"1000337" [label="(Identifier,size)"];
"1000543" [label="(Call,reply->write(params, size))"];
"1000404" [label="(Block,)"];
"1000381" [label="(Literal,2)"];
"1000384" [label="(Identifier,pageSize)"];
"1000416" [label="(Literal,0x534e4554)"];
"1000412" [label="(Identifier,err)"];
"1000409" [label="(Identifier,size)"];
"1000374" [label="(Call,allocSize = (size + pageSize * 2) & ~(pageSize - 1))"];
"1000405" -> "1000404"  [label="AST: "];
"1000405" -> "1000407"  [label="CFG: "];
"1000406" -> "1000405"  [label="AST: "];
"1000407" -> "1000405"  [label="AST: "];
"1000412" -> "1000405"  [label="CFG: "];
"1000405" -> "1001364"  [label="DDG: data.read(params, size)"];
"1000407" -> "1000405"  [label="DDG: params"];
"1000407" -> "1000405"  [label="DDG: size"];
"1000405" -> "1000411"  [label="DDG: err"];
"1000407" -> "1000409"  [label="CFG: "];
"1000408" -> "1000407"  [label="AST: "];
"1000409" -> "1000407"  [label="AST: "];
"1000407" -> "1001364"  [label="DDG: size"];
"1000401" -> "1000407"  [label="DDG: params"];
"1000362" -> "1000407"  [label="DDG: size"];
"1000407" -> "1000427"  [label="DDG: params"];
"1000407" -> "1000441"  [label="DDG: size"];
"1000407" -> "1000445"  [label="DDG: size"];
"1000407" -> "1000470"  [label="DDG: size"];
"1000407" -> "1000479"  [label="DDG: size"];
"1000407" -> "1000488"  [label="DDG: size"];
"1000407" -> "1000497"  [label="DDG: size"];
"1000407" -> "1000513"  [label="DDG: size"];
"1000407" -> "1000543"  [label="DDG: params"];
"1000407" -> "1000543"  [label="DDG: size"];
"1000407" -> "1000549"  [label="DDG: params"];
"1000401" -> "1000400"  [label="AST: "];
"1000401" -> "1000403"  [label="CFG: "];
"1000402" -> "1000401"  [label="AST: "];
"1000403" -> "1000401"  [label="AST: "];
"1000406" -> "1000401"  [label="CFG: "];
"1000525" -> "1000401"  [label="CFG: "];
"1000401" -> "1001364"  [label="DDG: params != MAP_FAILED"];
"1000401" -> "1001364"  [label="DDG: MAP_FAILED"];
"1000303" -> "1000401"  [label="DDG: params"];
"1000386" -> "1000401"  [label="DDG: params"];
"1000401" -> "1000543"  [label="DDG: params"];
"1000401" -> "1000549"  [label="DDG: params"];
"1000303" -> "1000277"  [label="AST: "];
"1000303" -> "1000305"  [label="CFG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000305" -> "1000303"  [label="AST: "];
"1000308" -> "1000303"  [label="CFG: "];
"1000303" -> "1001364"  [label="DDG: NULL"];
"1000303" -> "1000543"  [label="DDG: params"];
"1000303" -> "1000549"  [label="DDG: params"];
"1000386" -> "1000373"  [label="AST: "];
"1000386" -> "1000388"  [label="CFG: "];
"1000387" -> "1000386"  [label="AST: "];
"1000388" -> "1000386"  [label="AST: "];
"1000402" -> "1000386"  [label="CFG: "];
"1000386" -> "1001364"  [label="DDG: mmap(NULL, allocSize, PROT_READ | PROT_WRITE,\n                            MAP_PRIVATE | MAP_ANONYMOUS, -1 /* fd */, 0 /* offset */)"];
"1000388" -> "1000386"  [label="DDG: -1"];
"1000388" -> "1000386"  [label="DDG: NULL"];
"1000388" -> "1000386"  [label="DDG: PROT_READ | PROT_WRITE"];
"1000388" -> "1000386"  [label="DDG: 0"];
"1000388" -> "1000386"  [label="DDG: allocSize"];
"1000388" -> "1000386"  [label="DDG: MAP_PRIVATE | MAP_ANONYMOUS"];
"1000388" -> "1000399"  [label="CFG: "];
"1000389" -> "1000388"  [label="AST: "];
"1000390" -> "1000388"  [label="AST: "];
"1000391" -> "1000388"  [label="AST: "];
"1000394" -> "1000388"  [label="AST: "];
"1000397" -> "1000388"  [label="AST: "];
"1000399" -> "1000388"  [label="AST: "];
"1000388" -> "1001364"  [label="DDG: -1"];
"1000388" -> "1001364"  [label="DDG: MAP_PRIVATE | MAP_ANONYMOUS"];
"1000388" -> "1001364"  [label="DDG: NULL"];
"1000388" -> "1001364"  [label="DDG: allocSize"];
"1000388" -> "1001364"  [label="DDG: PROT_READ | PROT_WRITE"];
"1000374" -> "1000388"  [label="DDG: allocSize"];
"1000391" -> "1000388"  [label="DDG: PROT_READ"];
"1000391" -> "1000388"  [label="DDG: PROT_WRITE"];
"1000394" -> "1000388"  [label="DDG: MAP_PRIVATE"];
"1000394" -> "1000388"  [label="DDG: MAP_ANONYMOUS"];
"1000397" -> "1000388"  [label="DDG: 1"];
"1000388" -> "1000459"  [label="DDG: allocSize"];
"1000388" -> "1000549"  [label="DDG: allocSize"];
"1000388" -> "1000552"  [label="DDG: NULL"];
"1000374" -> "1000373"  [label="AST: "];
"1000374" -> "1000376"  [label="CFG: "];
"1000375" -> "1000374"  [label="AST: "];
"1000376" -> "1000374"  [label="AST: "];
"1000387" -> "1000374"  [label="CFG: "];
"1000374" -> "1001364"  [label="DDG: (size + pageSize * 2) & ~(pageSize - 1)"];
"1000376" -> "1000374"  [label="DDG: size + pageSize * 2"];
"1000376" -> "1000374"  [label="DDG: ~(pageSize - 1)"];
"1000376" -> "1000382"  [label="CFG: "];
"1000377" -> "1000376"  [label="AST: "];
"1000382" -> "1000376"  [label="AST: "];
"1000376" -> "1001364"  [label="DDG: size + pageSize * 2"];
"1000376" -> "1001364"  [label="DDG: ~(pageSize - 1)"];
"1000362" -> "1000376"  [label="DDG: size"];
"1000379" -> "1000376"  [label="DDG: pageSize"];
"1000379" -> "1000376"  [label="DDG: 2"];
"1000382" -> "1000376"  [label="DDG: pageSize - 1"];
"1000362" -> "1000361"  [label="AST: "];
"1000362" -> "1000364"  [label="CFG: "];
"1000363" -> "1000362"  [label="AST: "];
"1000364" -> "1000362"  [label="AST: "];
"1000371" -> "1000362"  [label="CFG: "];
"1000375" -> "1000362"  [label="CFG: "];
"1000362" -> "1001364"  [label="DDG: SIZE_MAX - (pageSize * 2)"];
"1000362" -> "1001364"  [label="DDG: size > SIZE_MAX - (pageSize * 2)"];
"1000362" -> "1001364"  [label="DDG: size"];
"1000295" -> "1000362"  [label="DDG: size"];
"1000326" -> "1000362"  [label="DDG: size"];
"1000336" -> "1000362"  [label="DDG: size"];
"1000364" -> "1000362"  [label="DDG: SIZE_MAX"];
"1000364" -> "1000362"  [label="DDG: pageSize * 2"];
"1000362" -> "1000377"  [label="DDG: size"];
"1000362" -> "1000543"  [label="DDG: size"];
"1000295" -> "1000277"  [label="AST: "];
"1000295" -> "1000297"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000297" -> "1000295"  [label="AST: "];
"1000300" -> "1000295"  [label="CFG: "];
"1000295" -> "1001364"  [label="DDG: data.readInt64()"];
"1000295" -> "1000326"  [label="DDG: size"];
"1000295" -> "1000336"  [label="DDG: size"];
"1000295" -> "1000340"  [label="DDG: size"];
"1000326" -> "1000324"  [label="AST: "];
"1000326" -> "1000328"  [label="CFG: "];
"1000327" -> "1000326"  [label="AST: "];
"1000328" -> "1000326"  [label="AST: "];
"1000324" -> "1000326"  [label="CFG: "];
"1000326" -> "1000324"  [label="DDG: size"];
"1000326" -> "1000324"  [label="DDG: 4"];
"1000326" -> "1000336"  [label="DDG: size"];
"1000326" -> "1000340"  [label="DDG: size"];
"1000336" -> "1000332"  [label="AST: "];
"1000336" -> "1000338"  [label="CFG: "];
"1000337" -> "1000336"  [label="AST: "];
"1000338" -> "1000336"  [label="AST: "];
"1000332" -> "1000336"  [label="CFG: "];
"1000336" -> "1000332"  [label="DDG: size"];
"1000336" -> "1000332"  [label="DDG: 8"];
"1000336" -> "1000340"  [label="DDG: size"];
"1000364" -> "1000366"  [label="CFG: "];
"1000365" -> "1000364"  [label="AST: "];
"1000366" -> "1000364"  [label="AST: "];
"1000364" -> "1001364"  [label="DDG: SIZE_MAX"];
"1000364" -> "1001364"  [label="DDG: pageSize * 2"];
"1000366" -> "1000364"  [label="DDG: pageSize"];
"1000366" -> "1000364"  [label="DDG: 2"];
"1000366" -> "1000368"  [label="CFG: "];
"1000367" -> "1000366"  [label="AST: "];
"1000368" -> "1000366"  [label="AST: "];
"1000366" -> "1001364"  [label="DDG: pageSize"];
"1000355" -> "1000366"  [label="DDG: pageSize"];
"1000366" -> "1000379"  [label="DDG: pageSize"];
"1000366" -> "1000459"  [label="DDG: pageSize"];
"1000355" -> "1000351"  [label="AST: "];
"1000355" -> "1000357"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000357" -> "1000355"  [label="AST: "];
"1000363" -> "1000355"  [label="CFG: "];
"1000355" -> "1001364"  [label="DDG: (size_t) sysconf(_SC_PAGE_SIZE)"];
"1000357" -> "1000355"  [label="DDG: sysconf(_SC_PAGE_SIZE)"];
"1000357" -> "1000359"  [label="CFG: "];
"1000358" -> "1000357"  [label="AST: "];
"1000359" -> "1000357"  [label="AST: "];
"1000357" -> "1001364"  [label="DDG: sysconf(_SC_PAGE_SIZE)"];
"1000359" -> "1000357"  [label="DDG: _SC_PAGE_SIZE"];
"1000359" -> "1000360"  [label="CFG: "];
"1000360" -> "1000359"  [label="AST: "];
"1000359" -> "1001364"  [label="DDG: _SC_PAGE_SIZE"];
"1000379" -> "1000377"  [label="AST: "];
"1000379" -> "1000381"  [label="CFG: "];
"1000380" -> "1000379"  [label="AST: "];
"1000381" -> "1000379"  [label="AST: "];
"1000377" -> "1000379"  [label="CFG: "];
"1000379" -> "1000377"  [label="DDG: pageSize"];
"1000379" -> "1000377"  [label="DDG: 2"];
"1000379" -> "1000383"  [label="DDG: pageSize"];
"1000382" -> "1000383"  [label="CFG: "];
"1000383" -> "1000382"  [label="AST: "];
"1000382" -> "1001364"  [label="DDG: pageSize - 1"];
"1000383" -> "1000382"  [label="DDG: pageSize"];
"1000383" -> "1000382"  [label="DDG: 1"];
"1000383" -> "1000385"  [label="CFG: "];
"1000384" -> "1000383"  [label="AST: "];
"1000385" -> "1000383"  [label="AST: "];
"1000383" -> "1001364"  [label="DDG: pageSize"];
"1000383" -> "1000459"  [label="DDG: pageSize"];
"1000391" -> "1000393"  [label="CFG: "];
"1000392" -> "1000391"  [label="AST: "];
"1000393" -> "1000391"  [label="AST: "];
"1000395" -> "1000391"  [label="CFG: "];
"1000391" -> "1001364"  [label="DDG: PROT_READ"];
"1000391" -> "1001364"  [label="DDG: PROT_WRITE"];
"1000394" -> "1000396"  [label="CFG: "];
"1000395" -> "1000394"  [label="AST: "];
"1000396" -> "1000394"  [label="AST: "];
"1000398" -> "1000394"  [label="CFG: "];
"1000394" -> "1001364"  [label="DDG: MAP_ANONYMOUS"];
"1000394" -> "1001364"  [label="DDG: MAP_PRIVATE"];
"1000397" -> "1000398"  [label="CFG: "];
"1000398" -> "1000397"  [label="AST: "];
"1000399" -> "1000397"  [label="CFG: "];
"1000411" -> "1000410"  [label="AST: "];
"1000411" -> "1000413"  [label="CFG: "];
"1000412" -> "1000411"  [label="AST: "];
"1000413" -> "1000411"  [label="AST: "];
"1000416" -> "1000411"  [label="CFG: "];
"1000421" -> "1000411"  [label="CFG: "];
"1000411" -> "1001364"  [label="DDG: err != OK"];
"1000411" -> "1001364"  [label="DDG: OK"];
"1000411" -> "1000528"  [label="DDG: err"];
"1000411" -> "1000539"  [label="DDG: OK"];
"1000528" -> "1000277"  [label="AST: "];
"1000528" -> "1000529"  [label="CFG: "];
"1000529" -> "1000528"  [label="AST: "];
"1000534" -> "1000528"  [label="CFG: "];
"1000528" -> "1001364"  [label="DDG: reply->writeInt32(err)"];
"1000528" -> "1001364"  [label="DDG: err"];
"1000495" -> "1000528"  [label="DDG: err"];
"1000352" -> "1000528"  [label="DDG: err"];
"1000468" -> "1000528"  [label="DDG: err"];
"1000299" -> "1000528"  [label="DDG: err"];
"1000477" -> "1000528"  [label="DDG: err"];
"1000486" -> "1000528"  [label="DDG: err"];
"1000420" -> "1000528"  [label="DDG: err"];
"1000511" -> "1000528"  [label="DDG: err"];
"1000528" -> "1000539"  [label="DDG: err"];
"1000539" -> "1000531"  [label="AST: "];
"1000539" -> "1000541"  [label="CFG: "];
"1000540" -> "1000539"  [label="AST: "];
"1000541" -> "1000539"  [label="AST: "];
"1000531" -> "1000539"  [label="CFG: "];
"1000539" -> "1001364"  [label="DDG: err"];
"1000539" -> "1001364"  [label="DDG: OK"];
"1000539" -> "1000531"  [label="DDG: err"];
"1000539" -> "1000531"  [label="DDG: OK"];
"1000531" -> "1000530"  [label="AST: "];
"1000531" -> "1000532"  [label="CFG: "];
"1000532" -> "1000531"  [label="AST: "];
"1000544" -> "1000531"  [label="CFG: "];
"1000547" -> "1000531"  [label="CFG: "];
"1000531" -> "1001364"  [label="DDG: (code == GET_PARAMETER || code == GET_CONFIG) && err == OK"];
"1000531" -> "1001364"  [label="DDG: err == OK"];
"1000531" -> "1001364"  [label="DDG: code == GET_PARAMETER || code == GET_CONFIG"];
"1000532" -> "1000531"  [label="DDG: code == GET_PARAMETER"];
"1000532" -> "1000531"  [label="DDG: code == GET_CONFIG"];
}
