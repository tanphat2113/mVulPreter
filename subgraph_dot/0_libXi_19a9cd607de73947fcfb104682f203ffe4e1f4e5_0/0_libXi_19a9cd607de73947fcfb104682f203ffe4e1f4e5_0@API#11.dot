digraph "0_libXi_19a9cd607de73947fcfb104682f203ffe4e1f4e5_0@API" {
"1000292" [label="(Call,sizeof(xDeviceAbsCalibState) > nbytes)"];
"1000282" [label="(Call,(sizeof(xDeviceResolutionState) + val_size) > nbytes)"];
"1000271" [label="(Call,val_size = 3 * sizeof(int) * r->num_valuators)"];
"1000273" [label="(Call,3 * sizeof(int) * r->num_valuators)"];
"1000275" [label="(Call,sizeof(int) * r->num_valuators)"];
"1000260" [label="(Call,r->num_valuators >= (INT_MAX / (3 * sizeof(int))))"];
"1000264" [label="(Call,INT_MAX / (3 * sizeof(int)))"];
"1000266" [label="(Call,3 * sizeof(int))"];
"1000256" [label="(Call,sizeof(xDeviceResolutionState) > nbytes)"];
"1000233" [label="(Call,_XRead(dpy, (char *)d, nbytes))"];
"1000172" [label="(Call,_XReply(dpy, (xReply *) & rep, 0, xFalse))"];
"1000133" [label="(Call,_XiCheckExtInit(dpy, XInput_Add_XChangeDeviceControl, info))"];
"1000129" [label="(Call,LockDisplay(dpy))"];
"1000127" [label="(Call,XInput_find_display(dpy))"];
"1000102" [label="(MethodParameterIn,register Display\t*dpy)"];
"1000125" [label="(Call,*info = XInput_find_display(dpy))"];
"1000174" [label="(Call,(xReply *) & rep)"];
"1000235" [label="(Call,(char *)d)"];
"1000115" [label="(Call,*d = NULL)"];
"1000251" [label="(Call,(xDeviceResolutionState *) d)"];
"1000268" [label="(Call,sizeof(int))"];
"1000135" [label="(Identifier,XInput_Add_XChangeDeviceControl)"];
"1000224" [label="(Call,_XEatDataWords(dpy, rep.length))"];
"1000274" [label="(Literal,3)"];
"1000138" [label="(Literal,1)"];
"1000129" [label="(Call,LockDisplay(dpy))"];
"1000288" [label="(ControlStructure,break;)"];
"1000295" [label="(Identifier,nbytes)"];
"1000273" [label="(Call,3 * sizeof(int) * r->num_valuators)"];
"1000272" [label="(Identifier,val_size)"];
"1000245" [label="(Block,)"];
"1000261" [label="(Call,r->num_valuators)"];
"1000128" [label="(Identifier,dpy)"];
"1000116" [label="(Identifier,d)"];
"1000115" [label="(Call,*d = NULL)"];
"1000265" [label="(Identifier,INT_MAX)"];
"1000257" [label="(Call,sizeof(xDeviceResolutionState))"];
"1000127" [label="(Call,XInput_find_display(dpy))"];
"1000679" [label="(MethodReturn,RET)"];
"1000132" [label="(Call,_XiCheckExtInit(dpy, XInput_Add_XChangeDeviceControl, info) == -1)"];
"1000130" [label="(Identifier,dpy)"];
"1000271" [label="(Call,val_size = 3 * sizeof(int) * r->num_valuators)"];
"1000176" [label="(Call,& rep)"];
"1000266" [label="(Call,3 * sizeof(int))"];
"1000179" [label="(Identifier,xFalse)"];
"1000256" [label="(Call,sizeof(xDeviceResolutionState) > nbytes)"];
"1000136" [label="(Identifier,info)"];
"1000125" [label="(Call,*info = XInput_find_display(dpy))"];
"1000296" [label="(ControlStructure,goto out;)"];
"1000291" [label="(ControlStructure,if (sizeof(xDeviceAbsCalibState) > nbytes))"];
"1000292" [label="(Call,sizeof(xDeviceAbsCalibState) > nbytes)"];
"1000275" [label="(Call,sizeof(int) * r->num_valuators)"];
"1000281" [label="(ControlStructure,if ((sizeof(xDeviceResolutionState) + val_size) > nbytes))"];
"1000283" [label="(Call,sizeof(xDeviceResolutionState) + val_size)"];
"1000264" [label="(Call,INT_MAX / (3 * sizeof(int)))"];
"1000330" [label="(Call,d->length > nbytes)"];
"1000134" [label="(Identifier,dpy)"];
"1000262" [label="(Identifier,r)"];
"1000318" [label="(Call,sizeof(xDeviceCoreState) > nbytes)"];
"1000174" [label="(Call,(xReply *) & rep)"];
"1000282" [label="(Call,(sizeof(xDeviceResolutionState) + val_size) > nbytes)"];
"1000230" [label="(Call,sav = d)"];
"1000133" [label="(Call,_XiCheckExtInit(dpy, XInput_Add_XChangeDeviceControl, info))"];
"1000117" [label="(Identifier,NULL)"];
"1000278" [label="(Call,r->num_valuators)"];
"1000289" [label="(JumpTarget,case DEVICE_ABS_CALIB:)"];
"1000260" [label="(Call,r->num_valuators >= (INT_MAX / (3 * sizeof(int))))"];
"1000102" [label="(MethodParameterIn,register Display\t*dpy)"];
"1000305" [label="(Call,sizeof(xDeviceAbsAreaState) > nbytes)"];
"1000172" [label="(Call,_XReply(dpy, (xReply *) & rep, 0, xFalse))"];
"1000178" [label="(Literal,0)"];
"1000173" [label="(Identifier,dpy)"];
"1000241" [label="(Identifier,d)"];
"1000233" [label="(Call,_XRead(dpy, (char *)d, nbytes))"];
"1000238" [label="(Identifier,nbytes)"];
"1000287" [label="(Identifier,nbytes)"];
"1000126" [label="(Identifier,info)"];
"1000259" [label="(Identifier,nbytes)"];
"1000171" [label="(Call,!_XReply(dpy, (xReply *) & rep, 0, xFalse))"];
"1000105" [label="(Block,)"];
"1000285" [label="(Identifier,xDeviceResolutionState)"];
"1000120" [label="(Identifier,sav)"];
"1000235" [label="(Call,(char *)d)"];
"1000276" [label="(Call,sizeof(int))"];
"1000237" [label="(Identifier,d)"];
"1000267" [label="(Literal,3)"];
"1000298" [label="(Identifier,size)"];
"1000293" [label="(Call,sizeof(xDeviceAbsCalibState))"];
"1000234" [label="(Identifier,dpy)"];
"1000387" [label="(Call,R->num_valuators = r->num_valuators)"];
"1000255" [label="(Call,sizeof(xDeviceResolutionState) > nbytes ||\n\t\tr->num_valuators >= (INT_MAX / (3 * sizeof(int))))"];
"1000292" -> "1000291"  [label="AST: "];
"1000292" -> "1000295"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000295" -> "1000292"  [label="AST: "];
"1000296" -> "1000292"  [label="CFG: "];
"1000298" -> "1000292"  [label="CFG: "];
"1000292" -> "1000679"  [label="DDG: sizeof(xDeviceAbsCalibState) > nbytes"];
"1000292" -> "1000679"  [label="DDG: nbytes"];
"1000282" -> "1000292"  [label="DDG: nbytes"];
"1000233" -> "1000292"  [label="DDG: nbytes"];
"1000282" -> "1000281"  [label="AST: "];
"1000282" -> "1000287"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000287" -> "1000282"  [label="AST: "];
"1000288" -> "1000282"  [label="CFG: "];
"1000289" -> "1000282"  [label="CFG: "];
"1000282" -> "1000679"  [label="DDG: (sizeof(xDeviceResolutionState) + val_size) > nbytes"];
"1000282" -> "1000679"  [label="DDG: nbytes"];
"1000282" -> "1000679"  [label="DDG: sizeof(xDeviceResolutionState) + val_size"];
"1000271" -> "1000282"  [label="DDG: val_size"];
"1000256" -> "1000282"  [label="DDG: nbytes"];
"1000271" -> "1000245"  [label="AST: "];
"1000271" -> "1000273"  [label="CFG: "];
"1000272" -> "1000271"  [label="AST: "];
"1000273" -> "1000271"  [label="AST: "];
"1000285" -> "1000271"  [label="CFG: "];
"1000271" -> "1000679"  [label="DDG: 3 * sizeof(int) * r->num_valuators"];
"1000273" -> "1000271"  [label="DDG: 3"];
"1000273" -> "1000271"  [label="DDG: sizeof(int) * r->num_valuators"];
"1000271" -> "1000283"  [label="DDG: val_size"];
"1000273" -> "1000275"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000275" -> "1000273"  [label="AST: "];
"1000273" -> "1000679"  [label="DDG: sizeof(int) * r->num_valuators"];
"1000275" -> "1000273"  [label="DDG: r->num_valuators"];
"1000275" -> "1000278"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000278" -> "1000275"  [label="AST: "];
"1000275" -> "1000679"  [label="DDG: r->num_valuators"];
"1000260" -> "1000275"  [label="DDG: r->num_valuators"];
"1000275" -> "1000387"  [label="DDG: r->num_valuators"];
"1000260" -> "1000255"  [label="AST: "];
"1000260" -> "1000264"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000264" -> "1000260"  [label="AST: "];
"1000255" -> "1000260"  [label="CFG: "];
"1000260" -> "1000679"  [label="DDG: INT_MAX / (3 * sizeof(int))"];
"1000260" -> "1000255"  [label="DDG: r->num_valuators"];
"1000260" -> "1000255"  [label="DDG: INT_MAX / (3 * sizeof(int))"];
"1000264" -> "1000260"  [label="DDG: INT_MAX"];
"1000264" -> "1000260"  [label="DDG: 3 * sizeof(int)"];
"1000264" -> "1000266"  [label="CFG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000266" -> "1000264"  [label="AST: "];
"1000264" -> "1000679"  [label="DDG: INT_MAX"];
"1000264" -> "1000679"  [label="DDG: 3 * sizeof(int)"];
"1000266" -> "1000264"  [label="DDG: 3"];
"1000266" -> "1000268"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="AST: "];
"1000256" -> "1000255"  [label="AST: "];
"1000256" -> "1000259"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000259" -> "1000256"  [label="AST: "];
"1000262" -> "1000256"  [label="CFG: "];
"1000255" -> "1000256"  [label="CFG: "];
"1000256" -> "1000255"  [label="DDG: nbytes"];
"1000233" -> "1000256"  [label="DDG: nbytes"];
"1000233" -> "1000105"  [label="AST: "];
"1000233" -> "1000238"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000235" -> "1000233"  [label="AST: "];
"1000238" -> "1000233"  [label="AST: "];
"1000241" -> "1000233"  [label="CFG: "];
"1000233" -> "1000679"  [label="DDG: _XRead(dpy, (char *)d, nbytes)"];
"1000233" -> "1000679"  [label="DDG: (char *)d"];
"1000233" -> "1000679"  [label="DDG: dpy"];
"1000172" -> "1000233"  [label="DDG: dpy"];
"1000102" -> "1000233"  [label="DDG: dpy"];
"1000235" -> "1000233"  [label="DDG: d"];
"1000233" -> "1000305"  [label="DDG: nbytes"];
"1000233" -> "1000318"  [label="DDG: nbytes"];
"1000233" -> "1000330"  [label="DDG: nbytes"];
"1000172" -> "1000171"  [label="AST: "];
"1000172" -> "1000179"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000174" -> "1000172"  [label="AST: "];
"1000178" -> "1000172"  [label="AST: "];
"1000179" -> "1000172"  [label="AST: "];
"1000171" -> "1000172"  [label="CFG: "];
"1000172" -> "1000679"  [label="DDG: xFalse"];
"1000172" -> "1000679"  [label="DDG: (xReply *) & rep"];
"1000172" -> "1000171"  [label="DDG: dpy"];
"1000172" -> "1000171"  [label="DDG: (xReply *) & rep"];
"1000172" -> "1000171"  [label="DDG: 0"];
"1000172" -> "1000171"  [label="DDG: xFalse"];
"1000133" -> "1000172"  [label="DDG: dpy"];
"1000102" -> "1000172"  [label="DDG: dpy"];
"1000174" -> "1000172"  [label="DDG: & rep"];
"1000172" -> "1000224"  [label="DDG: dpy"];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000136"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000136" -> "1000133"  [label="AST: "];
"1000138" -> "1000133"  [label="CFG: "];
"1000133" -> "1000679"  [label="DDG: dpy"];
"1000133" -> "1000679"  [label="DDG: XInput_Add_XChangeDeviceControl"];
"1000133" -> "1000679"  [label="DDG: info"];
"1000133" -> "1000132"  [label="DDG: dpy"];
"1000133" -> "1000132"  [label="DDG: XInput_Add_XChangeDeviceControl"];
"1000133" -> "1000132"  [label="DDG: info"];
"1000129" -> "1000133"  [label="DDG: dpy"];
"1000102" -> "1000133"  [label="DDG: dpy"];
"1000125" -> "1000133"  [label="DDG: info"];
"1000129" -> "1000105"  [label="AST: "];
"1000129" -> "1000130"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000134" -> "1000129"  [label="CFG: "];
"1000129" -> "1000679"  [label="DDG: LockDisplay(dpy)"];
"1000127" -> "1000129"  [label="DDG: dpy"];
"1000102" -> "1000129"  [label="DDG: dpy"];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000127" -> "1000125"  [label="DDG: dpy"];
"1000102" -> "1000127"  [label="DDG: dpy"];
"1000102" -> "1000101"  [label="AST: "];
"1000102" -> "1000679"  [label="DDG: dpy"];
"1000102" -> "1000224"  [label="DDG: dpy"];
"1000125" -> "1000105"  [label="AST: "];
"1000126" -> "1000125"  [label="AST: "];
"1000130" -> "1000125"  [label="CFG: "];
"1000125" -> "1000679"  [label="DDG: XInput_find_display(dpy)"];
"1000174" -> "1000176"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000176" -> "1000174"  [label="AST: "];
"1000178" -> "1000174"  [label="CFG: "];
"1000174" -> "1000679"  [label="DDG: & rep"];
"1000235" -> "1000237"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="AST: "];
"1000238" -> "1000235"  [label="CFG: "];
"1000115" -> "1000235"  [label="DDG: d"];
"1000235" -> "1000251"  [label="DDG: d"];
"1000115" -> "1000105"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000120" -> "1000115"  [label="CFG: "];
"1000115" -> "1000679"  [label="DDG: d"];
"1000115" -> "1000230"  [label="DDG: d"];
}
