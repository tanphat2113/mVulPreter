digraph "0_savannah_f958c48ee431bef8d4d466b40c9cb2d4dbcb7791@pointer" {
"1000679" [label="(Call,(FT_UInt32)ip[1])"];
"1000693" [label="(Call,(FT_UInt32)ip[3])"];
"1000687" [label="(Call,(FT_UInt32)ip[2])"];
"1000802" [label="(Call,ip[-2] - 251)"];
"1000765" [label="(Call,++ip)"];
"1000679" [label="(Call,(FT_UInt32)ip[1])"];
"1000497" [label="(Call,ip++)"];
"1000783" [label="(Call,ip[-2] - 247)"];
"1000773" [label="(Call,ip[-2] < 251)"];
"1000671" [label="(Call,(FT_UInt32)ip[0])"];
"1000754" [label="(Call,(FT_Int32)ip[-1])"];
"1000745" [label="(Call,ip[-1] < 247)"];
"1000737" [label="(Call,ip[-1] >= 32)"];
"1000453" [label="(Call,ip < limit)"];
"1000596" [label="(Call,ip++)"];
"1000587" [label="(Call,ip >= limit)"];
"1000698" [label="(Call,ip += 4)"];
"1000417" [label="(Call,ip    = zone->cursor = zone->base)"];
"1000419" [label="(Call,zone->cursor = zone->base)"];
"1000403" [label="(Call,zone->base           = charstring_base)"];
"1000262" [label="(MethodParameterIn,FT_Byte*    charstring_base)"];
"1002322" [label="(Call,ip            = zone->base)"];
"1002309" [label="(Call,!zone->base)"];
"1002276" [label="(Call,zone->base  += ( decoder->lenIV >= 0 ? decoder->lenIV : 0 ))"];
"1002281" [label="(Call,decoder->lenIV >= 0)"];
"1002248" [label="(Call,zone->base = decoder->subrs[idx])"];
"1002372" [label="(Call,ip            = zone->cursor)"];
"1002301" [label="(Call,zone->cursor = zone->base)"];
"1000656" [label="(Call,ip + 4 > limit)"];
"1000408" [label="(Call,limit = zone->limit  = charstring_base + charstring_len)"];
"1000410" [label="(Call,zone->limit  = charstring_base + charstring_len)"];
"1000263" [label="(MethodParameterIn,FT_UInt     charstring_len)"];
"1000764" [label="(Call,++ip > limit)"];
"1002377" [label="(Call,limit         = zone->limit)"];
"1002290" [label="(Call,zone->limit  = decoder->subrs[idx + 1])"];
"1002261" [label="(Call,zone->limit = zone->base + decoder->subrs_len[idx])"];
"1002327" [label="(Call,limit         = zone->limit)"];
"1002241" [label="(Call,zone->cursor = ip)"];
"1000657" [label="(Call,ip + 4)"];
"1000670" [label="(Call,(FT_UInt32)ip[0] << 24)"];
"1000669" [label="(Call,( (FT_UInt32)ip[0] << 24 ) |\n                            ( (FT_UInt32)ip[1] << 16 ) |\n                            ( (FT_UInt32)ip[2] << 8  ) |\n                              (FT_UInt32)ip[3])"];
"1000667" [label="(Call,(FT_Int32)( ( (FT_UInt32)ip[0] << 24 ) |\n                            ( (FT_UInt32)ip[1] << 16 ) |\n                            ( (FT_UInt32)ip[2] << 8  ) |\n                              (FT_UInt32)ip[3]         ))"];
"1000665" [label="(Call,value = (FT_Int32)( ( (FT_UInt32)ip[0] << 24 ) |\n                            ( (FT_UInt32)ip[1] << 16 ) |\n                            ( (FT_UInt32)ip[2] << 8  ) |\n                              (FT_UInt32)ip[3]         ))"];
"1000703" [label="(Call,value > 32000)"];
"1000702" [label="(Call,value > 32000 || value < -32000)"];
"1000706" [label="(Call,value < -32000)"];
"1000730" [label="(Call,(FT_UInt32)value)"];
"1000729" [label="(Call,(FT_UInt32)value << 16)"];
"1000727" [label="(Call,(FT_Int32)( (FT_UInt32)value << 16 ))"];
"1000725" [label="(Call,value = (FT_Int32)( (FT_UInt32)value << 16 ))"];
"1000899" [label="(Call,value / 65536)"];
"1000902" [label="(Call,*top++       = value)"];
"1000678" [label="(Call,(FT_UInt32)ip[1] << 16)"];
"1000677" [label="(Call,( (FT_UInt32)ip[1] << 16 ) |\n                            ( (FT_UInt32)ip[2] << 8  ) |\n                              (FT_UInt32)ip[3])"];
"1000686" [label="(Call,(FT_UInt32)ip[2] << 8)"];
"1000685" [label="(Call,( (FT_UInt32)ip[2] << 8  ) |\n                              (FT_UInt32)ip[3])"];
"1000753" [label="(Call,(FT_Int32)ip[-1] - 139)"];
"1000751" [label="(Call,value = (FT_Int32)ip[-1] - 139)"];
"1000823" [label="(Call,(FT_UInt32)value)"];
"1000822" [label="(Call,(FT_UInt32)value << 16)"];
"1000820" [label="(Call,(FT_Int32)( (FT_UInt32)value << 16 ))"];
"1000818" [label="(Call,value = (FT_Int32)( (FT_UInt32)value << 16 ))"];
"1000779" [label="(Call,value =    ( ( ip[-2] - 247 ) * 256 ) + ip[-1] + 108)"];
"1000781" [label="(Call,( ( ip[-2] - 247 ) * 256 ) + ip[-1] + 108)"];
"1000790" [label="(Call,ip[-1] + 108)"];
"1000799" [label="(Call,-( ( ( ip[-2] - 251 ) * 256 ) + ip[-1] + 108 ))"];
"1000797" [label="(Call,value = -( ( ( ip[-2] - 251 ) * 256 ) + ip[-1] + 108 ))"];
"1000800" [label="(Call,( ( ip[-2] - 251 ) * 256 ) + ip[-1] + 108)"];
"1000809" [label="(Call,ip[-1] + 108)"];
"1000782" [label="(Call,( ip[-2] - 247 ) * 256)"];
"1000801" [label="(Call,( ip[-2] - 251 ) * 256)"];
"1002328" [label="(Identifier,limit)"];
"1002292" [label="(Identifier,zone)"];
"1000660" [label="(Identifier,limit)"];
"1002290" [label="(Call,zone->limit  = decoder->subrs[idx + 1])"];
"1000727" [label="(Call,(FT_Int32)( (FT_UInt32)value << 16 ))"];
"1000597" [label="(Identifier,ip)"];
"1000745" [label="(Call,ip[-1] < 247)"];
"1000744" [label="(ControlStructure,if ( ip[-1] < 247 ))"];
"1000420" [label="(Call,zone->cursor)"];
"1000706" [label="(Call,value < -32000)"];
"1000722" [label="(ControlStructure,if ( !large_int ))"];
"1000810" [label="(Call,ip[-1])"];
"1000685" [label="(Call,( (FT_UInt32)ip[2] << 8  ) |\n                              (FT_UInt32)ip[3])"];
"1000264" [label="(Block,)"];
"1000693" [label="(Call,(FT_UInt32)ip[3])"];
"1000780" [label="(Identifier,value)"];
"1000760" [label="(Literal,139)"];
"1000663" [label="(Literal,\"t1_decoder_parse_charstrings:\"\n                     \" unexpected EOF in integer\n\")"];
"1002275" [label="(Block,)"];
"1000754" [label="(Call,(FT_Int32)ip[-1])"];
"1000738" [label="(Call,ip[-1])"];
"1000417" [label="(Call,ip    = zone->cursor = zone->base)"];
"1000815" [label="(ControlStructure,if ( !large_int ))"];
"1000704" [label="(Identifier,value)"];
"1000689" [label="(Call,ip[2])"];
"1000498" [label="(Identifier,ip)"];
"1000782" [label="(Call,( ip[-2] - 247 ) * 256)"];
"1002285" [label="(Literal,0)"];
"1002241" [label="(Call,zone->cursor = ip)"];
"1002373" [label="(Identifier,ip)"];
"1000676" [label="(Literal,24)"];
"1000747" [label="(Identifier,ip)"];
"1000736" [label="(ControlStructure,if ( ip[-1] >= 32 ))"];
"1002374" [label="(Call,zone->cursor)"];
"1000900" [label="(Identifier,value)"];
"1002303" [label="(Identifier,zone)"];
"1000497" [label="(Call,ip++)"];
"1000876" [label="(Block,)"];
"1002329" [label="(Call,zone->limit)"];
"1000901" [label="(Literal,65536)"];
"1000818" [label="(Call,value = (FT_Int32)( (FT_UInt32)value << 16 ))"];
"1000404" [label="(Call,zone->base)"];
"1002249" [label="(Call,zone->base)"];
"1002384" [label="(Identifier,decoder)"];
"1000819" [label="(Identifier,value)"];
"1000751" [label="(Call,value = (FT_Int32)ip[-1] - 139)"];
"1000423" [label="(Call,zone->base)"];
"1000700" [label="(Literal,4)"];
"1000799" [label="(Call,-( ( ( ip[-2] - 251 ) * 256 ) + ip[-1] + 108 ))"];
"1000752" [label="(Identifier,value)"];
"1000679" [label="(Call,(FT_UInt32)ip[1])"];
"1000596" [label="(Call,ip++)"];
"1000732" [label="(Identifier,value)"];
"1000681" [label="(Call,ip[1])"];
"1000496" [label="(Call,*ip++)"];
"1002309" [label="(Call,!zone->base)"];
"1000734" [label="(ControlStructure,break;)"];
"1000669" [label="(Call,( (FT_UInt32)ip[0] << 24 ) |\n                            ( (FT_UInt32)ip[1] << 16 ) |\n                            ( (FT_UInt32)ip[2] << 8  ) |\n                              (FT_UInt32)ip[3])"];
"1000906" [label="(Identifier,value)"];
"1000756" [label="(Call,ip[-1])"];
"1000678" [label="(Call,(FT_UInt32)ip[1] << 16)"];
"1002530" [label="(MethodReturn,RET)"];
"1000671" [label="(Call,(FT_UInt32)ip[0])"];
"1000784" [label="(Call,ip[-2])"];
"1002302" [label="(Call,zone->cursor)"];
"1000592" [label="(Literal,\"t1_decoder_parse_charstrings:\"\n                     \" invalid escape (12+EOF)\n\")"];
"1000770" [label="(Literal,\"t1_decoder_parse_charstrings:\"\n                         \" unexpected EOF in integer\n\")"];
"1000788" [label="(Literal,247)"];
"1000811" [label="(Identifier,ip)"];
"1000726" [label="(Identifier,value)"];
"1000677" [label="(Call,( (FT_UInt32)ip[1] << 16 ) |\n                            ( (FT_UInt32)ip[2] << 8  ) |\n                              (FT_UInt32)ip[3])"];
"1000699" [label="(Identifier,ip)"];
"1000595" [label="(Call,*ip++)"];
"1000418" [label="(Identifier,ip)"];
"1002245" [label="(Identifier,ip)"];
"1000899" [label="(Call,value / 65536)"];
"1000909" [label="(Identifier,decoder)"];
"1002319" [label="(Identifier,decoder)"];
"1000419" [label="(Call,zone->cursor = zone->base)"];
"1000659" [label="(Literal,4)"];
"1000410" [label="(Call,zone->limit  = charstring_base + charstring_len)"];
"1000588" [label="(Identifier,ip)"];
"1000826" [label="(Literal,16)"];
"1002257" [label="(ControlStructure,if ( decoder->subrs_len ))"];
"1000792" [label="(Identifier,ip)"];
"1000692" [label="(Literal,8)"];
"1000764" [label="(Call,++ip > limit)"];
"1000831" [label="(Literal,\"t1_decoder_parse_charstrings:\"\n                     \" invalid byte (%d)\n\")"];
"1000733" [label="(Literal,16)"];
"1000774" [label="(Call,ip[-2])"];
"1000742" [label="(Literal,32)"];
"1000656" [label="(Call,ip + 4 > limit)"];
"1002291" [label="(Call,zone->limit)"];
"1002289" [label="(Literal,0)"];
"1002247" [label="(Identifier,zone)"];
"1000779" [label="(Call,value =    ( ( ip[-2] - 247 ) * 256 ) + ip[-1] + 108)"];
"1000427" [label="(Identifier,error)"];
"1002332" [label="(ControlStructure,break;)"];
"1000586" [label="(ControlStructure,if ( ip >= limit ))"];
"1002282" [label="(Call,decoder->lenIV)"];
"1000655" [label="(ControlStructure,if ( ip + 4 > limit ))"];
"1000705" [label="(Literal,32000)"];
"1000459" [label="(Identifier,top)"];
"1000903" [label="(Call,*top++)"];
"1000263" [label="(MethodParameterIn,FT_UInt     charstring_len)"];
"1002276" [label="(Call,zone->base  += ( decoder->lenIV >= 0 ? decoder->lenIV : 0 ))"];
"1000737" [label="(Call,ip[-1] >= 32)"];
"1002377" [label="(Call,limit         = zone->limit)"];
"1002311" [label="(Identifier,zone)"];
"1000452" [label="(ControlStructure,while ( ip < limit ))"];
"1000803" [label="(Call,ip[-2])"];
"1000409" [label="(Identifier,limit)"];
"1000455" [label="(Identifier,limit)"];
"1000795" [label="(Literal,108)"];
"1002181" [label="(Block,)"];
"1000499" [label="(Block,)"];
"1000902" [label="(Call,*top++       = value)"];
"1000823" [label="(Call,(FT_UInt32)value)"];
"1002262" [label="(Call,zone->limit)"];
"1000750" [label="(Literal,247)"];
"1000411" [label="(Call,zone->limit)"];
"1000730" [label="(Call,(FT_UInt32)value)"];
"1000809" [label="(Call,ip[-1] + 108)"];
"1002322" [label="(Call,ip            = zone->base)"];
"1000796" [label="(ControlStructure,else)"];
"1000695" [label="(Call,ip[3])"];
"1000746" [label="(Call,ip[-1])"];
"1002261" [label="(Call,zone->limit = zone->base + decoder->subrs_len[idx])"];
"1002379" [label="(Call,zone->limit)"];
"1000765" [label="(Call,++ip)"];
"1000790" [label="(Call,ip[-1] + 108)"];
"1000814" [label="(Literal,108)"];
"1001597" [label="(Block,)"];
"1002308" [label="(ControlStructure,if ( !zone->base ))"];
"1000773" [label="(Call,ip[-2] < 251)"];
"1000687" [label="(Call,(FT_UInt32)ip[2])"];
"1000587" [label="(Call,ip >= limit)"];
"1002252" [label="(Call,decoder->subrs[idx])"];
"1000666" [label="(Identifier,value)"];
"1000468" [label="(Call,value = 0)"];
"1000783" [label="(Call,ip[-2] - 247)"];
"1000658" [label="(Identifier,ip)"];
"1000407" [label="(Identifier,charstring_base)"];
"1000808" [label="(Literal,256)"];
"1002242" [label="(Call,zone->cursor)"];
"1000791" [label="(Call,ip[-1])"];
"1002372" [label="(Call,ip            = zone->cursor)"];
"1000667" [label="(Call,(FT_Int32)( ( (FT_UInt32)ip[0] << 24 ) |\n                            ( (FT_UInt32)ip[1] << 16 ) |\n                            ( (FT_UInt32)ip[2] << 8  ) |\n                              (FT_UInt32)ip[3]         ))"];
"1000817" [label="(Identifier,large_int)"];
"1000822" [label="(Call,(FT_UInt32)value << 16)"];
"1002310" [label="(Call,zone->base)"];
"1000665" [label="(Call,value = (FT_Int32)( ( (FT_UInt32)ip[0] << 24 ) |\n                            ( (FT_UInt32)ip[1] << 16 ) |\n                            ( (FT_UInt32)ip[2] << 8  ) |\n                              (FT_UInt32)ip[3]         ))"];
"1000767" [label="(Identifier,limit)"];
"1000725" [label="(Call,value = (FT_Int32)( (FT_UInt32)value << 16 ))"];
"1002323" [label="(Identifier,ip)"];
"1000896" [label="(Call,FT_TRACE4(( \" %d\", value / 65536 )))"];
"1000684" [label="(Literal,16)"];
"1000798" [label="(Identifier,value)"];
"1002327" [label="(Call,limit         = zone->limit)"];
"1002280" [label="(Call,decoder->lenIV >= 0 ? decoder->lenIV : 0)"];
"1000766" [label="(Identifier,ip)"];
"1000262" [label="(MethodParameterIn,FT_Byte*    charstring_base)"];
"1000414" [label="(Call,charstring_base + charstring_len)"];
"1000753" [label="(Call,(FT_Int32)ip[-1] - 139)"];
"1002287" [label="(Identifier,decoder)"];
"1002281" [label="(Call,decoder->lenIV >= 0)"];
"1002518" [label="(Literal,\"..end..\n\n\")"];
"1000801" [label="(Call,( ip[-2] - 251 ) * 256)"];
"1000703" [label="(Call,value > 32000)"];
"1000800" [label="(Call,( ( ip[-2] - 251 ) * 256 ) + ip[-1] + 108)"];
"1000670" [label="(Call,(FT_UInt32)ip[0] << 24)"];
"1000589" [label="(Identifier,limit)"];
"1002248" [label="(Call,zone->base = decoder->subrs[idx])"];
"1000454" [label="(Identifier,ip)"];
"1002265" [label="(Call,zone->base + decoder->subrs_len[idx])"];
"1000724" [label="(Identifier,large_int)"];
"1000897" [label="(Block,)"];
"1000807" [label="(Literal,251)"];
"1000708" [label="(Call,-32000)"];
"1000712" [label="(Identifier,large_int)"];
"1000825" [label="(Identifier,value)"];
"1000686" [label="(Call,(FT_UInt32)ip[2] << 8)"];
"1002259" [label="(Identifier,decoder)"];
"1000453" [label="(Call,ip < limit)"];
"1000839" [label="(Identifier,unknown_othersubr_result_cnt)"];
"1000408" [label="(Call,limit = zone->limit  = charstring_base + charstring_len)"];
"1000707" [label="(Identifier,value)"];
"1002294" [label="(Call,decoder->subrs[idx + 1])"];
"1000781" [label="(Call,( ( ip[-2] - 247 ) * 256 ) + ip[-1] + 108)"];
"1000775" [label="(Identifier,ip)"];
"1000772" [label="(ControlStructure,if ( ip[-2] < 251 ))"];
"1002378" [label="(Identifier,limit)"];
"1000763" [label="(ControlStructure,if ( ++ip > limit ))"];
"1000698" [label="(Call,ip += 4)"];
"1000802" [label="(Call,ip[-2] - 251)"];
"1000789" [label="(Literal,256)"];
"1002324" [label="(Call,zone->base)"];
"1000820" [label="(Call,(FT_Int32)( (FT_UInt32)value << 16 ))"];
"1000702" [label="(Call,value > 32000 || value < -32000)"];
"1002315" [label="(Literal,\"t1_decoder_parse_charstrings:\"\n                         \" invoking empty subrs\n\")"];
"1000701" [label="(ControlStructure,if ( value > 32000 || value < -32000 ))"];
"1000673" [label="(Call,ip[0])"];
"1002305" [label="(Call,zone->base)"];
"1002301" [label="(Call,zone->cursor = zone->base)"];
"1000657" [label="(Call,ip + 4)"];
"1000778" [label="(Literal,251)"];
"1000403" [label="(Call,zone->base           = charstring_base)"];
"1000797" [label="(Call,value = -( ( ( ip[-2] - 251 ) * 256 ) + ip[-1] + 108 ))"];
"1000729" [label="(Call,(FT_UInt32)value << 16)"];
"1002277" [label="(Call,zone->base)"];
"1000679" -> "1000678"  [label="AST: "];
"1000679" -> "1000681"  [label="CFG: "];
"1000680" -> "1000679"  [label="AST: "];
"1000681" -> "1000679"  [label="AST: "];
"1000684" -> "1000679"  [label="CFG: "];
"1000679" -> "1002530"  [label="DDG: ip[1]"];
"1000679" -> "1000453"  [label="DDG: ip[1]"];
"1000679" -> "1000497"  [label="DDG: ip[1]"];
"1000679" -> "1000587"  [label="DDG: ip[1]"];
"1000679" -> "1000596"  [label="DDG: ip[1]"];
"1000679" -> "1000656"  [label="DDG: ip[1]"];
"1000679" -> "1000657"  [label="DDG: ip[1]"];
"1000679" -> "1000671"  [label="DDG: ip[1]"];
"1000679" -> "1000678"  [label="DDG: ip[1]"];
"1000693" -> "1000679"  [label="DDG: ip[3]"];
"1000687" -> "1000679"  [label="DDG: ip[2]"];
"1000802" -> "1000679"  [label="DDG: ip[-2]"];
"1000497" -> "1000679"  [label="DDG: ip"];
"1000783" -> "1000679"  [label="DDG: ip[-2]"];
"1000671" -> "1000679"  [label="DDG: ip[0]"];
"1000754" -> "1000679"  [label="DDG: ip[-1]"];
"1000745" -> "1000679"  [label="DDG: ip[-1]"];
"1000765" -> "1000679"  [label="DDG: ip"];
"1000679" -> "1000687"  [label="DDG: ip[1]"];
"1000679" -> "1000693"  [label="DDG: ip[1]"];
"1000679" -> "1000698"  [label="DDG: ip[1]"];
"1000679" -> "1000765"  [label="DDG: ip[1]"];
"1000679" -> "1002241"  [label="DDG: ip[1]"];
"1000693" -> "1000685"  [label="AST: "];
"1000693" -> "1000695"  [label="CFG: "];
"1000694" -> "1000693"  [label="AST: "];
"1000695" -> "1000693"  [label="AST: "];
"1000685" -> "1000693"  [label="CFG: "];
"1000693" -> "1002530"  [label="DDG: ip[3]"];
"1000693" -> "1000453"  [label="DDG: ip[3]"];
"1000693" -> "1000497"  [label="DDG: ip[3]"];
"1000693" -> "1000587"  [label="DDG: ip[3]"];
"1000693" -> "1000596"  [label="DDG: ip[3]"];
"1000693" -> "1000656"  [label="DDG: ip[3]"];
"1000693" -> "1000657"  [label="DDG: ip[3]"];
"1000693" -> "1000671"  [label="DDG: ip[3]"];
"1000693" -> "1000687"  [label="DDG: ip[3]"];
"1000693" -> "1000685"  [label="DDG: ip[3]"];
"1000687" -> "1000693"  [label="DDG: ip[2]"];
"1000802" -> "1000693"  [label="DDG: ip[-2]"];
"1000497" -> "1000693"  [label="DDG: ip"];
"1000783" -> "1000693"  [label="DDG: ip[-2]"];
"1000671" -> "1000693"  [label="DDG: ip[0]"];
"1000754" -> "1000693"  [label="DDG: ip[-1]"];
"1000745" -> "1000693"  [label="DDG: ip[-1]"];
"1000765" -> "1000693"  [label="DDG: ip"];
"1000693" -> "1000698"  [label="DDG: ip[3]"];
"1000693" -> "1000765"  [label="DDG: ip[3]"];
"1000693" -> "1002241"  [label="DDG: ip[3]"];
"1000687" -> "1000686"  [label="AST: "];
"1000687" -> "1000689"  [label="CFG: "];
"1000688" -> "1000687"  [label="AST: "];
"1000689" -> "1000687"  [label="AST: "];
"1000692" -> "1000687"  [label="CFG: "];
"1000687" -> "1002530"  [label="DDG: ip[2]"];
"1000687" -> "1000453"  [label="DDG: ip[2]"];
"1000687" -> "1000497"  [label="DDG: ip[2]"];
"1000687" -> "1000587"  [label="DDG: ip[2]"];
"1000687" -> "1000596"  [label="DDG: ip[2]"];
"1000687" -> "1000656"  [label="DDG: ip[2]"];
"1000687" -> "1000657"  [label="DDG: ip[2]"];
"1000687" -> "1000671"  [label="DDG: ip[2]"];
"1000687" -> "1000686"  [label="DDG: ip[2]"];
"1000802" -> "1000687"  [label="DDG: ip[-2]"];
"1000497" -> "1000687"  [label="DDG: ip"];
"1000783" -> "1000687"  [label="DDG: ip[-2]"];
"1000671" -> "1000687"  [label="DDG: ip[0]"];
"1000754" -> "1000687"  [label="DDG: ip[-1]"];
"1000745" -> "1000687"  [label="DDG: ip[-1]"];
"1000765" -> "1000687"  [label="DDG: ip"];
"1000687" -> "1000698"  [label="DDG: ip[2]"];
"1000687" -> "1000765"  [label="DDG: ip[2]"];
"1000687" -> "1002241"  [label="DDG: ip[2]"];
"1000802" -> "1000801"  [label="AST: "];
"1000802" -> "1000807"  [label="CFG: "];
"1000803" -> "1000802"  [label="AST: "];
"1000807" -> "1000802"  [label="AST: "];
"1000808" -> "1000802"  [label="CFG: "];
"1000802" -> "1002530"  [label="DDG: ip[-2]"];
"1000802" -> "1000453"  [label="DDG: ip[-2]"];
"1000802" -> "1000497"  [label="DDG: ip[-2]"];
"1000802" -> "1000587"  [label="DDG: ip[-2]"];
"1000802" -> "1000596"  [label="DDG: ip[-2]"];
"1000802" -> "1000656"  [label="DDG: ip[-2]"];
"1000802" -> "1000657"  [label="DDG: ip[-2]"];
"1000802" -> "1000671"  [label="DDG: ip[-2]"];
"1000802" -> "1000698"  [label="DDG: ip[-2]"];
"1000802" -> "1000765"  [label="DDG: ip[-2]"];
"1000802" -> "1000773"  [label="DDG: ip[-2]"];
"1000802" -> "1000801"  [label="DDG: ip[-2]"];
"1000802" -> "1000801"  [label="DDG: 251"];
"1000765" -> "1000802"  [label="DDG: ip"];
"1000773" -> "1000802"  [label="DDG: ip[-2]"];
"1000802" -> "1002241"  [label="DDG: ip[-2]"];
"1000765" -> "1000764"  [label="AST: "];
"1000765" -> "1000766"  [label="CFG: "];
"1000766" -> "1000765"  [label="AST: "];
"1000767" -> "1000765"  [label="CFG: "];
"1000765" -> "1002530"  [label="DDG: ip"];
"1000765" -> "1000453"  [label="DDG: ip"];
"1000765" -> "1000497"  [label="DDG: ip"];
"1000765" -> "1000587"  [label="DDG: ip"];
"1000765" -> "1000596"  [label="DDG: ip"];
"1000765" -> "1000656"  [label="DDG: ip"];
"1000765" -> "1000657"  [label="DDG: ip"];
"1000765" -> "1000671"  [label="DDG: ip"];
"1000765" -> "1000698"  [label="DDG: ip"];
"1000765" -> "1000737"  [label="DDG: ip"];
"1000765" -> "1000764"  [label="DDG: ip"];
"1000497" -> "1000765"  [label="DDG: ip"];
"1000671" -> "1000765"  [label="DDG: ip[0]"];
"1000745" -> "1000765"  [label="DDG: ip[-1]"];
"1000783" -> "1000765"  [label="DDG: ip[-2]"];
"1000765" -> "1000773"  [label="DDG: ip"];
"1000765" -> "1000779"  [label="DDG: ip"];
"1000765" -> "1000783"  [label="DDG: ip"];
"1000765" -> "1000781"  [label="DDG: ip"];
"1000765" -> "1000790"  [label="DDG: ip"];
"1000765" -> "1000799"  [label="DDG: ip"];
"1000765" -> "1000800"  [label="DDG: ip"];
"1000765" -> "1000809"  [label="DDG: ip"];
"1000765" -> "1002241"  [label="DDG: ip"];
"1000497" -> "1000496"  [label="AST: "];
"1000497" -> "1000498"  [label="CFG: "];
"1000498" -> "1000497"  [label="AST: "];
"1000496" -> "1000497"  [label="CFG: "];
"1000497" -> "1002530"  [label="DDG: ip"];
"1000497" -> "1000453"  [label="DDG: ip"];
"1000783" -> "1000497"  [label="DDG: ip[-2]"];
"1000671" -> "1000497"  [label="DDG: ip[0]"];
"1000754" -> "1000497"  [label="DDG: ip[-1]"];
"1000453" -> "1000497"  [label="DDG: ip"];
"1000745" -> "1000497"  [label="DDG: ip[-1]"];
"1000497" -> "1000587"  [label="DDG: ip"];
"1000497" -> "1000656"  [label="DDG: ip"];
"1000497" -> "1000657"  [label="DDG: ip"];
"1000497" -> "1000671"  [label="DDG: ip"];
"1000497" -> "1000698"  [label="DDG: ip"];
"1000497" -> "1000737"  [label="DDG: ip"];
"1000497" -> "1000745"  [label="DDG: ip"];
"1000497" -> "1000754"  [label="DDG: ip"];
"1000497" -> "1002241"  [label="DDG: ip"];
"1000783" -> "1000782"  [label="AST: "];
"1000783" -> "1000788"  [label="CFG: "];
"1000784" -> "1000783"  [label="AST: "];
"1000788" -> "1000783"  [label="AST: "];
"1000789" -> "1000783"  [label="CFG: "];
"1000783" -> "1002530"  [label="DDG: ip[-2]"];
"1000783" -> "1000453"  [label="DDG: ip[-2]"];
"1000783" -> "1000587"  [label="DDG: ip[-2]"];
"1000783" -> "1000596"  [label="DDG: ip[-2]"];
"1000783" -> "1000656"  [label="DDG: ip[-2]"];
"1000783" -> "1000657"  [label="DDG: ip[-2]"];
"1000783" -> "1000671"  [label="DDG: ip[-2]"];
"1000783" -> "1000698"  [label="DDG: ip[-2]"];
"1000783" -> "1000773"  [label="DDG: ip[-2]"];
"1000783" -> "1000782"  [label="DDG: ip[-2]"];
"1000783" -> "1000782"  [label="DDG: 247"];
"1000773" -> "1000783"  [label="DDG: ip[-2]"];
"1000783" -> "1002241"  [label="DDG: ip[-2]"];
"1000773" -> "1000772"  [label="AST: "];
"1000773" -> "1000778"  [label="CFG: "];
"1000774" -> "1000773"  [label="AST: "];
"1000778" -> "1000773"  [label="AST: "];
"1000780" -> "1000773"  [label="CFG: "];
"1000798" -> "1000773"  [label="CFG: "];
"1000773" -> "1002530"  [label="DDG: ip[-2] < 251"];
"1000671" -> "1000670"  [label="AST: "];
"1000671" -> "1000673"  [label="CFG: "];
"1000672" -> "1000671"  [label="AST: "];
"1000673" -> "1000671"  [label="AST: "];
"1000676" -> "1000671"  [label="CFG: "];
"1000671" -> "1002530"  [label="DDG: ip[0]"];
"1000671" -> "1000453"  [label="DDG: ip[0]"];
"1000671" -> "1000587"  [label="DDG: ip[0]"];
"1000671" -> "1000596"  [label="DDG: ip[0]"];
"1000671" -> "1000656"  [label="DDG: ip[0]"];
"1000671" -> "1000657"  [label="DDG: ip[0]"];
"1000671" -> "1000670"  [label="DDG: ip[0]"];
"1000754" -> "1000671"  [label="DDG: ip[-1]"];
"1000745" -> "1000671"  [label="DDG: ip[-1]"];
"1000671" -> "1000698"  [label="DDG: ip[0]"];
"1000671" -> "1002241"  [label="DDG: ip[0]"];
"1000754" -> "1000753"  [label="AST: "];
"1000754" -> "1000756"  [label="CFG: "];
"1000755" -> "1000754"  [label="AST: "];
"1000756" -> "1000754"  [label="AST: "];
"1000760" -> "1000754"  [label="CFG: "];
"1000754" -> "1002530"  [label="DDG: ip[-1]"];
"1000754" -> "1000453"  [label="DDG: ip[-1]"];
"1000754" -> "1000587"  [label="DDG: ip[-1]"];
"1000754" -> "1000596"  [label="DDG: ip[-1]"];
"1000754" -> "1000656"  [label="DDG: ip[-1]"];
"1000754" -> "1000657"  [label="DDG: ip[-1]"];
"1000754" -> "1000698"  [label="DDG: ip[-1]"];
"1000754" -> "1000737"  [label="DDG: ip[-1]"];
"1000754" -> "1000753"  [label="DDG: ip[-1]"];
"1000745" -> "1000754"  [label="DDG: ip[-1]"];
"1000754" -> "1002241"  [label="DDG: ip[-1]"];
"1000745" -> "1000744"  [label="AST: "];
"1000745" -> "1000750"  [label="CFG: "];
"1000746" -> "1000745"  [label="AST: "];
"1000750" -> "1000745"  [label="AST: "];
"1000752" -> "1000745"  [label="CFG: "];
"1000766" -> "1000745"  [label="CFG: "];
"1000745" -> "1002530"  [label="DDG: ip[-1] < 247"];
"1000745" -> "1002530"  [label="DDG: ip[-1]"];
"1000745" -> "1000453"  [label="DDG: ip[-1]"];
"1000745" -> "1000587"  [label="DDG: ip[-1]"];
"1000745" -> "1000596"  [label="DDG: ip[-1]"];
"1000745" -> "1000656"  [label="DDG: ip[-1]"];
"1000745" -> "1000657"  [label="DDG: ip[-1]"];
"1000745" -> "1000698"  [label="DDG: ip[-1]"];
"1000745" -> "1000737"  [label="DDG: ip[-1]"];
"1000737" -> "1000745"  [label="DDG: ip[-1]"];
"1000745" -> "1000779"  [label="DDG: ip[-1]"];
"1000745" -> "1000781"  [label="DDG: ip[-1]"];
"1000745" -> "1000790"  [label="DDG: ip[-1]"];
"1000745" -> "1000799"  [label="DDG: ip[-1]"];
"1000745" -> "1000800"  [label="DDG: ip[-1]"];
"1000745" -> "1000809"  [label="DDG: ip[-1]"];
"1000745" -> "1002241"  [label="DDG: ip[-1]"];
"1000737" -> "1000736"  [label="AST: "];
"1000737" -> "1000742"  [label="CFG: "];
"1000738" -> "1000737"  [label="AST: "];
"1000742" -> "1000737"  [label="AST: "];
"1000747" -> "1000737"  [label="CFG: "];
"1000831" -> "1000737"  [label="CFG: "];
"1000737" -> "1002530"  [label="DDG: ip[-1]"];
"1000737" -> "1002530"  [label="DDG: ip[-1] >= 32"];
"1000453" -> "1000452"  [label="AST: "];
"1000453" -> "1000455"  [label="CFG: "];
"1000454" -> "1000453"  [label="AST: "];
"1000455" -> "1000453"  [label="AST: "];
"1000459" -> "1000453"  [label="CFG: "];
"1002518" -> "1000453"  [label="CFG: "];
"1000453" -> "1002530"  [label="DDG: limit"];
"1000453" -> "1002530"  [label="DDG: ip < limit"];
"1000453" -> "1002530"  [label="DDG: ip"];
"1000596" -> "1000453"  [label="DDG: ip"];
"1000698" -> "1000453"  [label="DDG: ip"];
"1000417" -> "1000453"  [label="DDG: ip"];
"1002322" -> "1000453"  [label="DDG: ip"];
"1002372" -> "1000453"  [label="DDG: ip"];
"1000587" -> "1000453"  [label="DDG: limit"];
"1000656" -> "1000453"  [label="DDG: limit"];
"1000408" -> "1000453"  [label="DDG: limit"];
"1000764" -> "1000453"  [label="DDG: limit"];
"1002377" -> "1000453"  [label="DDG: limit"];
"1002327" -> "1000453"  [label="DDG: limit"];
"1000453" -> "1000587"  [label="DDG: limit"];
"1000453" -> "1000656"  [label="DDG: limit"];
"1000453" -> "1000764"  [label="DDG: limit"];
"1000596" -> "1000595"  [label="AST: "];
"1000596" -> "1000597"  [label="CFG: "];
"1000597" -> "1000596"  [label="AST: "];
"1000595" -> "1000596"  [label="CFG: "];
"1000596" -> "1002530"  [label="DDG: ip"];
"1000587" -> "1000596"  [label="DDG: ip"];
"1000596" -> "1002241"  [label="DDG: ip"];
"1000587" -> "1000586"  [label="AST: "];
"1000587" -> "1000589"  [label="CFG: "];
"1000588" -> "1000587"  [label="AST: "];
"1000589" -> "1000587"  [label="AST: "];
"1000592" -> "1000587"  [label="CFG: "];
"1000597" -> "1000587"  [label="CFG: "];
"1000587" -> "1002530"  [label="DDG: limit"];
"1000587" -> "1002530"  [label="DDG: ip"];
"1000587" -> "1002530"  [label="DDG: ip >= limit"];
"1000698" -> "1000499"  [label="AST: "];
"1000698" -> "1000700"  [label="CFG: "];
"1000699" -> "1000698"  [label="AST: "];
"1000700" -> "1000698"  [label="AST: "];
"1000704" -> "1000698"  [label="CFG: "];
"1000698" -> "1002530"  [label="DDG: ip"];
"1000698" -> "1002241"  [label="DDG: ip"];
"1000417" -> "1000264"  [label="AST: "];
"1000417" -> "1000419"  [label="CFG: "];
"1000418" -> "1000417"  [label="AST: "];
"1000419" -> "1000417"  [label="AST: "];
"1000427" -> "1000417"  [label="CFG: "];
"1000419" -> "1000417"  [label="DDG: zone->cursor"];
"1000403" -> "1000417"  [label="DDG: zone->base"];
"1000419" -> "1000423"  [label="CFG: "];
"1000420" -> "1000419"  [label="AST: "];
"1000423" -> "1000419"  [label="AST: "];
"1000419" -> "1002530"  [label="DDG: zone->cursor"];
"1000419" -> "1002530"  [label="DDG: zone->base"];
"1000403" -> "1000419"  [label="DDG: zone->base"];
"1000419" -> "1002372"  [label="DDG: zone->cursor"];
"1000403" -> "1000264"  [label="AST: "];
"1000403" -> "1000407"  [label="CFG: "];
"1000404" -> "1000403"  [label="AST: "];
"1000407" -> "1000403"  [label="AST: "];
"1000409" -> "1000403"  [label="CFG: "];
"1000262" -> "1000403"  [label="DDG: charstring_base"];
"1000262" -> "1000260"  [label="AST: "];
"1000262" -> "1002530"  [label="DDG: charstring_base"];
"1000262" -> "1000408"  [label="DDG: charstring_base"];
"1000262" -> "1000410"  [label="DDG: charstring_base"];
"1000262" -> "1000414"  [label="DDG: charstring_base"];
"1002322" -> "1002181"  [label="AST: "];
"1002322" -> "1002324"  [label="CFG: "];
"1002323" -> "1002322"  [label="AST: "];
"1002324" -> "1002322"  [label="AST: "];
"1002328" -> "1002322"  [label="CFG: "];
"1002322" -> "1002530"  [label="DDG: zone->base"];
"1002322" -> "1002530"  [label="DDG: ip"];
"1002309" -> "1002322"  [label="DDG: zone->base"];
"1002309" -> "1002308"  [label="AST: "];
"1002309" -> "1002310"  [label="CFG: "];
"1002310" -> "1002309"  [label="AST: "];
"1002315" -> "1002309"  [label="CFG: "];
"1002319" -> "1002309"  [label="CFG: "];
"1002309" -> "1002530"  [label="DDG: !zone->base"];
"1002309" -> "1002530"  [label="DDG: zone->base"];
"1002276" -> "1002309"  [label="DDG: zone->base"];
"1002248" -> "1002309"  [label="DDG: zone->base"];
"1002276" -> "1002275"  [label="AST: "];
"1002276" -> "1002280"  [label="CFG: "];
"1002277" -> "1002276"  [label="AST: "];
"1002280" -> "1002276"  [label="AST: "];
"1002292" -> "1002276"  [label="CFG: "];
"1002276" -> "1002530"  [label="DDG: decoder->lenIV >= 0 ? decoder->lenIV : 0"];
"1002281" -> "1002276"  [label="DDG: decoder->lenIV"];
"1002248" -> "1002276"  [label="DDG: zone->base"];
"1002276" -> "1002301"  [label="DDG: zone->base"];
"1002281" -> "1002280"  [label="AST: "];
"1002281" -> "1002285"  [label="CFG: "];
"1002282" -> "1002281"  [label="AST: "];
"1002285" -> "1002281"  [label="AST: "];
"1002287" -> "1002281"  [label="CFG: "];
"1002289" -> "1002281"  [label="CFG: "];
"1002281" -> "1002280"  [label="DDG: decoder->lenIV"];
"1002248" -> "1002181"  [label="AST: "];
"1002248" -> "1002252"  [label="CFG: "];
"1002249" -> "1002248"  [label="AST: "];
"1002252" -> "1002248"  [label="AST: "];
"1002259" -> "1002248"  [label="CFG: "];
"1002248" -> "1002530"  [label="DDG: decoder->subrs[idx]"];
"1002248" -> "1002261"  [label="DDG: zone->base"];
"1002248" -> "1002265"  [label="DDG: zone->base"];
"1002248" -> "1002301"  [label="DDG: zone->base"];
"1002372" -> "1001597"  [label="AST: "];
"1002372" -> "1002374"  [label="CFG: "];
"1002373" -> "1002372"  [label="AST: "];
"1002374" -> "1002372"  [label="AST: "];
"1002378" -> "1002372"  [label="CFG: "];
"1002372" -> "1002530"  [label="DDG: ip"];
"1002372" -> "1002530"  [label="DDG: zone->cursor"];
"1002301" -> "1002372"  [label="DDG: zone->cursor"];
"1002301" -> "1002181"  [label="AST: "];
"1002301" -> "1002305"  [label="CFG: "];
"1002302" -> "1002301"  [label="AST: "];
"1002305" -> "1002301"  [label="AST: "];
"1002311" -> "1002301"  [label="CFG: "];
"1002301" -> "1002530"  [label="DDG: zone->cursor"];
"1000656" -> "1000655"  [label="AST: "];
"1000656" -> "1000660"  [label="CFG: "];
"1000657" -> "1000656"  [label="AST: "];
"1000660" -> "1000656"  [label="AST: "];
"1000663" -> "1000656"  [label="CFG: "];
"1000666" -> "1000656"  [label="CFG: "];
"1000656" -> "1002530"  [label="DDG: ip + 4 > limit"];
"1000656" -> "1002530"  [label="DDG: limit"];
"1000656" -> "1002530"  [label="DDG: ip + 4"];
"1000408" -> "1000264"  [label="AST: "];
"1000408" -> "1000410"  [label="CFG: "];
"1000409" -> "1000408"  [label="AST: "];
"1000410" -> "1000408"  [label="AST: "];
"1000418" -> "1000408"  [label="CFG: "];
"1000410" -> "1000408"  [label="DDG: zone->limit"];
"1000263" -> "1000408"  [label="DDG: charstring_len"];
"1000410" -> "1000414"  [label="CFG: "];
"1000411" -> "1000410"  [label="AST: "];
"1000414" -> "1000410"  [label="AST: "];
"1000410" -> "1002530"  [label="DDG: zone->limit"];
"1000410" -> "1002530"  [label="DDG: charstring_base + charstring_len"];
"1000263" -> "1000410"  [label="DDG: charstring_len"];
"1000410" -> "1002377"  [label="DDG: zone->limit"];
"1000263" -> "1000260"  [label="AST: "];
"1000263" -> "1002530"  [label="DDG: charstring_len"];
"1000263" -> "1000414"  [label="DDG: charstring_len"];
"1000764" -> "1000763"  [label="AST: "];
"1000764" -> "1000767"  [label="CFG: "];
"1000767" -> "1000764"  [label="AST: "];
"1000770" -> "1000764"  [label="CFG: "];
"1000775" -> "1000764"  [label="CFG: "];
"1000764" -> "1002530"  [label="DDG: limit"];
"1000764" -> "1002530"  [label="DDG: ++ip > limit"];
"1002377" -> "1001597"  [label="AST: "];
"1002377" -> "1002379"  [label="CFG: "];
"1002378" -> "1002377"  [label="AST: "];
"1002379" -> "1002377"  [label="AST: "];
"1002384" -> "1002377"  [label="CFG: "];
"1002377" -> "1002530"  [label="DDG: zone->limit"];
"1002377" -> "1002530"  [label="DDG: limit"];
"1002290" -> "1002377"  [label="DDG: zone->limit"];
"1002261" -> "1002377"  [label="DDG: zone->limit"];
"1002290" -> "1002275"  [label="AST: "];
"1002290" -> "1002294"  [label="CFG: "];
"1002291" -> "1002290"  [label="AST: "];
"1002294" -> "1002290"  [label="AST: "];
"1002303" -> "1002290"  [label="CFG: "];
"1002290" -> "1002530"  [label="DDG: decoder->subrs[idx + 1]"];
"1002290" -> "1002530"  [label="DDG: zone->limit"];
"1002290" -> "1002327"  [label="DDG: zone->limit"];
"1002261" -> "1002257"  [label="AST: "];
"1002261" -> "1002265"  [label="CFG: "];
"1002262" -> "1002261"  [label="AST: "];
"1002265" -> "1002261"  [label="AST: "];
"1002303" -> "1002261"  [label="CFG: "];
"1002261" -> "1002530"  [label="DDG: zone->base + decoder->subrs_len[idx]"];
"1002261" -> "1002530"  [label="DDG: zone->limit"];
"1002261" -> "1002327"  [label="DDG: zone->limit"];
"1002327" -> "1002181"  [label="AST: "];
"1002327" -> "1002329"  [label="CFG: "];
"1002328" -> "1002327"  [label="AST: "];
"1002329" -> "1002327"  [label="AST: "];
"1002332" -> "1002327"  [label="CFG: "];
"1002327" -> "1002530"  [label="DDG: zone->limit"];
"1002327" -> "1002530"  [label="DDG: limit"];
"1002241" -> "1002181"  [label="AST: "];
"1002241" -> "1002245"  [label="CFG: "];
"1002242" -> "1002241"  [label="AST: "];
"1002245" -> "1002241"  [label="AST: "];
"1002247" -> "1002241"  [label="CFG: "];
"1002241" -> "1002530"  [label="DDG: ip"];
"1000657" -> "1000659"  [label="CFG: "];
"1000658" -> "1000657"  [label="AST: "];
"1000659" -> "1000657"  [label="AST: "];
"1000660" -> "1000657"  [label="CFG: "];
"1000657" -> "1002530"  [label="DDG: ip"];
"1000670" -> "1000669"  [label="AST: "];
"1000670" -> "1000676"  [label="CFG: "];
"1000676" -> "1000670"  [label="AST: "];
"1000680" -> "1000670"  [label="CFG: "];
"1000670" -> "1002530"  [label="DDG: (FT_UInt32)ip[0]"];
"1000670" -> "1000669"  [label="DDG: (FT_UInt32)ip[0]"];
"1000670" -> "1000669"  [label="DDG: 24"];
"1000669" -> "1000667"  [label="AST: "];
"1000669" -> "1000677"  [label="CFG: "];
"1000677" -> "1000669"  [label="AST: "];
"1000667" -> "1000669"  [label="CFG: "];
"1000669" -> "1002530"  [label="DDG: ( (FT_UInt32)ip[1] << 16 ) |\n                            ( (FT_UInt32)ip[2] << 8  ) |\n                              (FT_UInt32)ip[3]"];
"1000669" -> "1002530"  [label="DDG: (FT_UInt32)ip[0] << 24"];
"1000669" -> "1000667"  [label="DDG: (FT_UInt32)ip[0] << 24"];
"1000669" -> "1000667"  [label="DDG: ( (FT_UInt32)ip[1] << 16 ) |\n                            ( (FT_UInt32)ip[2] << 8  ) |\n                              (FT_UInt32)ip[3]"];
"1000677" -> "1000669"  [label="DDG: (FT_UInt32)ip[1] << 16"];
"1000677" -> "1000669"  [label="DDG: ( (FT_UInt32)ip[2] << 8  ) |\n                              (FT_UInt32)ip[3]"];
"1000667" -> "1000665"  [label="AST: "];
"1000668" -> "1000667"  [label="AST: "];
"1000665" -> "1000667"  [label="CFG: "];
"1000667" -> "1002530"  [label="DDG: ( (FT_UInt32)ip[0] << 24 ) |\n                            ( (FT_UInt32)ip[1] << 16 ) |\n                            ( (FT_UInt32)ip[2] << 8  ) |\n                              (FT_UInt32)ip[3]"];
"1000667" -> "1000665"  [label="DDG: ( (FT_UInt32)ip[0] << 24 ) |\n                            ( (FT_UInt32)ip[1] << 16 ) |\n                            ( (FT_UInt32)ip[2] << 8  ) |\n                              (FT_UInt32)ip[3]"];
"1000665" -> "1000499"  [label="AST: "];
"1000666" -> "1000665"  [label="AST: "];
"1000699" -> "1000665"  [label="CFG: "];
"1000665" -> "1002530"  [label="DDG: (FT_Int32)( ( (FT_UInt32)ip[0] << 24 ) |\n                            ( (FT_UInt32)ip[1] << 16 ) |\n                            ( (FT_UInt32)ip[2] << 8  ) |\n                              (FT_UInt32)ip[3]         )"];
"1000665" -> "1000703"  [label="DDG: value"];
"1000703" -> "1000702"  [label="AST: "];
"1000703" -> "1000705"  [label="CFG: "];
"1000704" -> "1000703"  [label="AST: "];
"1000705" -> "1000703"  [label="AST: "];
"1000707" -> "1000703"  [label="CFG: "];
"1000702" -> "1000703"  [label="CFG: "];
"1000703" -> "1002530"  [label="DDG: value"];
"1000703" -> "1000702"  [label="DDG: value"];
"1000703" -> "1000702"  [label="DDG: 32000"];
"1000703" -> "1000706"  [label="DDG: value"];
"1000703" -> "1000730"  [label="DDG: value"];
"1000703" -> "1000899"  [label="DDG: value"];
"1000703" -> "1000902"  [label="DDG: value"];
"1000702" -> "1000701"  [label="AST: "];
"1000702" -> "1000706"  [label="CFG: "];
"1000706" -> "1000702"  [label="AST: "];
"1000712" -> "1000702"  [label="CFG: "];
"1000724" -> "1000702"  [label="CFG: "];
"1000702" -> "1002530"  [label="DDG: value < -32000"];
"1000702" -> "1002530"  [label="DDG: value > 32000 || value < -32000"];
"1000702" -> "1002530"  [label="DDG: value > 32000"];
"1000706" -> "1000702"  [label="DDG: value"];
"1000706" -> "1000702"  [label="DDG: -32000"];
"1000706" -> "1000708"  [label="CFG: "];
"1000707" -> "1000706"  [label="AST: "];
"1000708" -> "1000706"  [label="AST: "];
"1000706" -> "1002530"  [label="DDG: -32000"];
"1000706" -> "1002530"  [label="DDG: value"];
"1000708" -> "1000706"  [label="DDG: 32000"];
"1000706" -> "1000730"  [label="DDG: value"];
"1000706" -> "1000899"  [label="DDG: value"];
"1000706" -> "1000902"  [label="DDG: value"];
"1000730" -> "1000729"  [label="AST: "];
"1000730" -> "1000732"  [label="CFG: "];
"1000731" -> "1000730"  [label="AST: "];
"1000732" -> "1000730"  [label="AST: "];
"1000733" -> "1000730"  [label="CFG: "];
"1000730" -> "1000729"  [label="DDG: value"];
"1000729" -> "1000727"  [label="AST: "];
"1000729" -> "1000733"  [label="CFG: "];
"1000733" -> "1000729"  [label="AST: "];
"1000727" -> "1000729"  [label="CFG: "];
"1000729" -> "1002530"  [label="DDG: (FT_UInt32)value"];
"1000729" -> "1000727"  [label="DDG: (FT_UInt32)value"];
"1000729" -> "1000727"  [label="DDG: 16"];
"1000727" -> "1000725"  [label="AST: "];
"1000728" -> "1000727"  [label="AST: "];
"1000725" -> "1000727"  [label="CFG: "];
"1000727" -> "1002530"  [label="DDG: (FT_UInt32)value << 16"];
"1000727" -> "1000725"  [label="DDG: (FT_UInt32)value << 16"];
"1000725" -> "1000722"  [label="AST: "];
"1000726" -> "1000725"  [label="AST: "];
"1000734" -> "1000725"  [label="CFG: "];
"1000725" -> "1002530"  [label="DDG: (FT_Int32)( (FT_UInt32)value << 16 )"];
"1000725" -> "1002530"  [label="DDG: value"];
"1000725" -> "1000899"  [label="DDG: value"];
"1000725" -> "1000902"  [label="DDG: value"];
"1000899" -> "1000897"  [label="AST: "];
"1000899" -> "1000901"  [label="CFG: "];
"1000900" -> "1000899"  [label="AST: "];
"1000901" -> "1000899"  [label="AST: "];
"1000896" -> "1000899"  [label="CFG: "];
"1000899" -> "1002530"  [label="DDG: value / 65536"];
"1000779" -> "1000899"  [label="DDG: value"];
"1000468" -> "1000899"  [label="DDG: value"];
"1000751" -> "1000899"  [label="DDG: value"];
"1000818" -> "1000899"  [label="DDG: value"];
"1000797" -> "1000899"  [label="DDG: value"];
"1000899" -> "1000902"  [label="DDG: value"];
"1000902" -> "1000876"  [label="AST: "];
"1000902" -> "1000906"  [label="CFG: "];
"1000903" -> "1000902"  [label="AST: "];
"1000906" -> "1000902"  [label="AST: "];
"1000909" -> "1000902"  [label="CFG: "];
"1000902" -> "1002530"  [label="DDG: value"];
"1000902" -> "1002530"  [label="DDG: *top++"];
"1000779" -> "1000902"  [label="DDG: value"];
"1000468" -> "1000902"  [label="DDG: value"];
"1000751" -> "1000902"  [label="DDG: value"];
"1000818" -> "1000902"  [label="DDG: value"];
"1000797" -> "1000902"  [label="DDG: value"];
"1000678" -> "1000677"  [label="AST: "];
"1000678" -> "1000684"  [label="CFG: "];
"1000684" -> "1000678"  [label="AST: "];
"1000688" -> "1000678"  [label="CFG: "];
"1000678" -> "1002530"  [label="DDG: (FT_UInt32)ip[1]"];
"1000678" -> "1000677"  [label="DDG: (FT_UInt32)ip[1]"];
"1000678" -> "1000677"  [label="DDG: 16"];
"1000677" -> "1000685"  [label="CFG: "];
"1000685" -> "1000677"  [label="AST: "];
"1000677" -> "1002530"  [label="DDG: (FT_UInt32)ip[1] << 16"];
"1000677" -> "1002530"  [label="DDG: ( (FT_UInt32)ip[2] << 8  ) |\n                              (FT_UInt32)ip[3]"];
"1000685" -> "1000677"  [label="DDG: (FT_UInt32)ip[2] << 8"];
"1000685" -> "1000677"  [label="DDG: (FT_UInt32)ip[3]"];
"1000686" -> "1000685"  [label="AST: "];
"1000686" -> "1000692"  [label="CFG: "];
"1000692" -> "1000686"  [label="AST: "];
"1000694" -> "1000686"  [label="CFG: "];
"1000686" -> "1002530"  [label="DDG: (FT_UInt32)ip[2]"];
"1000686" -> "1000685"  [label="DDG: (FT_UInt32)ip[2]"];
"1000686" -> "1000685"  [label="DDG: 8"];
"1000685" -> "1002530"  [label="DDG: (FT_UInt32)ip[3]"];
"1000685" -> "1002530"  [label="DDG: (FT_UInt32)ip[2] << 8"];
"1000753" -> "1000751"  [label="AST: "];
"1000753" -> "1000760"  [label="CFG: "];
"1000760" -> "1000753"  [label="AST: "];
"1000751" -> "1000753"  [label="CFG: "];
"1000753" -> "1002530"  [label="DDG: (FT_Int32)ip[-1]"];
"1000753" -> "1000751"  [label="DDG: (FT_Int32)ip[-1]"];
"1000753" -> "1000751"  [label="DDG: 139"];
"1000751" -> "1000744"  [label="AST: "];
"1000752" -> "1000751"  [label="AST: "];
"1000817" -> "1000751"  [label="CFG: "];
"1000751" -> "1002530"  [label="DDG: (FT_Int32)ip[-1] - 139"];
"1000751" -> "1002530"  [label="DDG: value"];
"1000751" -> "1000823"  [label="DDG: value"];
"1000823" -> "1000822"  [label="AST: "];
"1000823" -> "1000825"  [label="CFG: "];
"1000824" -> "1000823"  [label="AST: "];
"1000825" -> "1000823"  [label="AST: "];
"1000826" -> "1000823"  [label="CFG: "];
"1000823" -> "1000822"  [label="DDG: value"];
"1000779" -> "1000823"  [label="DDG: value"];
"1000797" -> "1000823"  [label="DDG: value"];
"1000822" -> "1000820"  [label="AST: "];
"1000822" -> "1000826"  [label="CFG: "];
"1000826" -> "1000822"  [label="AST: "];
"1000820" -> "1000822"  [label="CFG: "];
"1000822" -> "1002530"  [label="DDG: (FT_UInt32)value"];
"1000822" -> "1000820"  [label="DDG: (FT_UInt32)value"];
"1000822" -> "1000820"  [label="DDG: 16"];
"1000820" -> "1000818"  [label="AST: "];
"1000821" -> "1000820"  [label="AST: "];
"1000818" -> "1000820"  [label="CFG: "];
"1000820" -> "1002530"  [label="DDG: (FT_UInt32)value << 16"];
"1000820" -> "1000818"  [label="DDG: (FT_UInt32)value << 16"];
"1000818" -> "1000815"  [label="AST: "];
"1000819" -> "1000818"  [label="AST: "];
"1000839" -> "1000818"  [label="CFG: "];
"1000818" -> "1002530"  [label="DDG: (FT_Int32)( (FT_UInt32)value << 16 )"];
"1000818" -> "1002530"  [label="DDG: value"];
"1000779" -> "1000772"  [label="AST: "];
"1000779" -> "1000781"  [label="CFG: "];
"1000780" -> "1000779"  [label="AST: "];
"1000781" -> "1000779"  [label="AST: "];
"1000817" -> "1000779"  [label="CFG: "];
"1000779" -> "1002530"  [label="DDG: value"];
"1000779" -> "1002530"  [label="DDG: ( ( ip[-2] - 247 ) * 256 ) + ip[-1] + 108"];
"1000782" -> "1000779"  [label="DDG: ip[-2] - 247"];
"1000782" -> "1000779"  [label="DDG: 256"];
"1000781" -> "1000790"  [label="CFG: "];
"1000782" -> "1000781"  [label="AST: "];
"1000790" -> "1000781"  [label="AST: "];
"1000781" -> "1002530"  [label="DDG: ip[-1] + 108"];
"1000781" -> "1002530"  [label="DDG: ( ip[-2] - 247 ) * 256"];
"1000782" -> "1000781"  [label="DDG: ip[-2] - 247"];
"1000782" -> "1000781"  [label="DDG: 256"];
"1000790" -> "1000795"  [label="CFG: "];
"1000791" -> "1000790"  [label="AST: "];
"1000795" -> "1000790"  [label="AST: "];
"1000790" -> "1002530"  [label="DDG: ip[-1]"];
"1000799" -> "1000797"  [label="AST: "];
"1000799" -> "1000800"  [label="CFG: "];
"1000800" -> "1000799"  [label="AST: "];
"1000797" -> "1000799"  [label="CFG: "];
"1000799" -> "1002530"  [label="DDG: ( ( ip[-2] - 251 ) * 256 ) + ip[-1] + 108"];
"1000799" -> "1000797"  [label="DDG: ( ( ip[-2] - 251 ) * 256 ) + ip[-1] + 108"];
"1000801" -> "1000799"  [label="DDG: ip[-2] - 251"];
"1000801" -> "1000799"  [label="DDG: 256"];
"1000797" -> "1000796"  [label="AST: "];
"1000798" -> "1000797"  [label="AST: "];
"1000817" -> "1000797"  [label="CFG: "];
"1000797" -> "1002530"  [label="DDG: -( ( ( ip[-2] - 251 ) * 256 ) + ip[-1] + 108 )"];
"1000797" -> "1002530"  [label="DDG: value"];
"1000800" -> "1000809"  [label="CFG: "];
"1000801" -> "1000800"  [label="AST: "];
"1000809" -> "1000800"  [label="AST: "];
"1000800" -> "1002530"  [label="DDG: ip[-1] + 108"];
"1000800" -> "1002530"  [label="DDG: ( ip[-2] - 251 ) * 256"];
"1000801" -> "1000800"  [label="DDG: ip[-2] - 251"];
"1000801" -> "1000800"  [label="DDG: 256"];
"1000809" -> "1000814"  [label="CFG: "];
"1000810" -> "1000809"  [label="AST: "];
"1000814" -> "1000809"  [label="AST: "];
"1000809" -> "1002530"  [label="DDG: ip[-1]"];
"1000782" -> "1000789"  [label="CFG: "];
"1000789" -> "1000782"  [label="AST: "];
"1000792" -> "1000782"  [label="CFG: "];
"1000782" -> "1002530"  [label="DDG: ip[-2] - 247"];
"1000801" -> "1000808"  [label="CFG: "];
"1000808" -> "1000801"  [label="AST: "];
"1000811" -> "1000801"  [label="CFG: "];
"1000801" -> "1002530"  [label="DDG: ip[-2] - 251"];
}
