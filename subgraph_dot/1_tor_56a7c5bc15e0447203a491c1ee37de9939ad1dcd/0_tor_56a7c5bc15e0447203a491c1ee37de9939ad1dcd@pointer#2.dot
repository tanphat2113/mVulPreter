digraph "0_tor_56a7c5bc15e0447203a491c1ee37de9939ad1dcd@pointer" {
"1000141" [label="(Call,relay_header_unpack(&rh, cell->payload))"];
"1000249" [label="(Call,connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint))"];
"1000248" [label="(Return,return connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint);)"];
"1000429" [label="(Call,(char*)(cell->payload + RELAY_HEADER_SIZE))"];
"1000428" [label="(Call,connection_write_to_buf((char*)(cell->payload + RELAY_HEADER_SIZE),\n                              rh.length, TO_CONN(conn)))"];
"1000431" [label="(Call,cell->payload + RELAY_HEADER_SIZE)"];
"1000458" [label="(Call,get_uint8(cell->payload+RELAY_HEADER_SIZE))"];
"1000450" [label="(Call,reason = rh.length > 0 ?\n        get_uint8(cell->payload+RELAY_HEADER_SIZE) : END_STREAM_REASON_MISC)"];
"1000472" [label="(Call,stream_end_reason_to_string(reason))"];
"1000469" [label="(Call,log_info(domain,\"end cell (%s) dropped, unknown stream.\",\n                 stream_end_reason_to_string(reason)))"];
"1000518" [label="(Call,reason | END_STREAM_REASON_FLAG_REMOTE)"];
"1000514" [label="(Call,conn->end_reason = reason | END_STREAM_REASON_FLAG_REMOTE)"];
"1000452" [label="(Call,rh.length > 0 ?\n        get_uint8(cell->payload+RELAY_HEADER_SIZE) : END_STREAM_REASON_MISC)"];
"1000459" [label="(Call,cell->payload+RELAY_HEADER_SIZE)"];
"1000660" [label="(Call,(const uint8_t*)cell->payload)"];
"1000653" [label="(Call,extended_cell_parse(&extended_cell, rh.command,\n                        (const uint8_t*)cell->payload+RELAY_HEADER_SIZE,\n                        rh.length))"];
"1000652" [label="(Call,extended_cell_parse(&extended_cell, rh.command,\n                        (const uint8_t*)cell->payload+RELAY_HEADER_SIZE,\n                        rh.length)<0)"];
"1000659" [label="(Call,(const uint8_t*)cell->payload+RELAY_HEADER_SIZE)"];
"1000757" [label="(Call,get_uint8(cell->payload + RELAY_HEADER_SIZE))"];
"1000755" [label="(Call,trunc_reason = get_uint8(cell->payload + RELAY_HEADER_SIZE))"];
"1000768" [label="(Call,channel_send_destroy(circ->n_circ_id, circ->n_chan,\n                             trunc_reason))"];
"1000758" [label="(Call,cell->payload + RELAY_HEADER_SIZE)"];
"1000817" [label="(Call,get_uint8(cell->payload + RELAY_HEADER_SIZE))"];
"1000813" [label="(Call,circuit_truncated(TO_ORIGIN_CIRCUIT(circ), layer_hint,\n                        get_uint8(cell->payload + RELAY_HEADER_SIZE)))"];
"1000818" [label="(Call,cell->payload + RELAY_HEADER_SIZE)"];
"1001033" [label="(Call,rend_process_relay_cell(circ, layer_hint,\n                              rh.command, rh.length,\n                              cell->payload+RELAY_HEADER_SIZE))"];
"1001042" [label="(Call,cell->payload+RELAY_HEADER_SIZE)"];
"1000813" [label="(Call,circuit_truncated(TO_ORIGIN_CIRCUIT(circ), layer_hint,\n                        get_uint8(cell->payload + RELAY_HEADER_SIZE)))"];
"1001034" [label="(Identifier,circ)"];
"1000768" [label="(Call,channel_send_destroy(circ->n_circ_id, circ->n_chan,\n                             trunc_reason))"];
"1000137" [label="(Call,tor_assert(cell))"];
"1000471" [label="(Literal,\"end cell (%s) dropped, unknown stream.\")"];
"1000148" [label="(Identifier,num_seen)"];
"1000818" [label="(Call,cell->payload + RELAY_HEADER_SIZE)"];
"1000472" [label="(Call,stream_end_reason_to_string(reason))"];
"1000467" [label="(Identifier,conn)"];
"1000672" [label="(Identifier,LD_PROTOCOL)"];
"1000116" [label="(MethodParameterIn,circuit_t *circ)"];
"1000762" [label="(Identifier,RELAY_HEADER_SIZE)"];
"1000659" [label="(Call,(const uint8_t*)cell->payload+RELAY_HEADER_SIZE)"];
"1000680" [label="(Identifier,reason)"];
"1000519" [label="(Identifier,reason)"];
"1000247" [label="(Block,)"];
"1000469" [label="(Call,log_info(domain,\"end cell (%s) dropped, unknown stream.\",\n                 stream_end_reason_to_string(reason)))"];
"1000662" [label="(Call,cell->payload)"];
"1001036" [label="(Call,rh.command)"];
"1000804" [label="(Call,!layer_hint)"];
"1000525" [label="(Identifier,conn)"];
"1000819" [label="(Call,cell->payload)"];
"1000118" [label="(MethodParameterIn,crypt_path_t *layer_hint)"];
"1000459" [label="(Call,cell->payload+RELAY_HEADER_SIZE)"];
"1000139" [label="(Call,tor_assert(circ))"];
"1000255" [label="(Identifier,layer_hint)"];
"1000656" [label="(Call,rh.command)"];
"1000452" [label="(Call,rh.length > 0 ?\n        get_uint8(cell->payload+RELAY_HEADER_SIZE) : END_STREAM_REASON_MISC)"];
"1000660" [label="(Call,(const uint8_t*)cell->payload)"];
"1000769" [label="(Call,circ->n_circ_id)"];
"1000817" [label="(Call,get_uint8(cell->payload + RELAY_HEADER_SIZE))"];
"1000757" [label="(Call,get_uint8(cell->payload + RELAY_HEADER_SIZE))"];
"1000160" [label="(Call,rh.length > RELAY_PAYLOAD_SIZE)"];
"1000515" [label="(Call,conn->end_reason)"];
"1000260" [label="(Block,)"];
"1001035" [label="(Identifier,layer_hint)"];
"1000764" [label="(Identifier,circ)"];
"1000437" [label="(Identifier,rh)"];
"1000814" [label="(Call,TO_ORIGIN_CIRCUIT(circ))"];
"1000816" [label="(Identifier,layer_hint)"];
"1000654" [label="(Call,&extended_cell)"];
"1000237" [label="(Call,rh.command == RELAY_COMMAND_DATA)"];
"1000473" [label="(Identifier,reason)"];
"1000822" [label="(Identifier,RELAY_HEADER_SIZE)"];
"1000520" [label="(Identifier,END_STREAM_REASON_FLAG_REMOTE)"];
"1000205" [label="(Call,conn && !connection_state_is_open(TO_CONN(conn)))"];
"1000436" [label="(Call,rh.length)"];
"1000460" [label="(Call,cell->payload)"];
"1001033" [label="(Call,rend_process_relay_cell(circ, layer_hint,\n                              rh.command, rh.length,\n                              cell->payload+RELAY_HEADER_SIZE))"];
"1000141" [label="(Call,relay_header_unpack(&rh, cell->payload))"];
"1000514" [label="(Call,conn->end_reason = reason | END_STREAM_REASON_FLAG_REMOTE)"];
"1000149" [label="(Call,log_debug(domain, \"Now seen %d relay cells here (command %d, stream %d).\",\n            num_seen, rh.command, rh.stream_id))"];
"1000249" [label="(Call,connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint))"];
"1000772" [label="(Call,circ->n_chan)"];
"1000450" [label="(Call,reason = rh.length > 0 ?\n        get_uint8(cell->payload+RELAY_HEADER_SIZE) : END_STREAM_REASON_MISC)"];
"1000428" [label="(Call,connection_write_to_buf((char*)(cell->payload + RELAY_HEADER_SIZE),\n                              rh.length, TO_CONN(conn)))"];
"1000669" [label="(Literal,0)"];
"1000759" [label="(Call,cell->payload)"];
"1000667" [label="(Identifier,rh)"];
"1001042" [label="(Call,cell->payload+RELAY_HEADER_SIZE)"];
"1000509" [label="(ControlStructure,if (!conn->end_reason))"];
"1000117" [label="(MethodParameterIn,edge_connection_t *conn)"];
"1000470" [label="(Identifier,domain)"];
"1000252" [label="(Identifier,cell)"];
"1000755" [label="(Call,trunc_reason = get_uint8(cell->payload + RELAY_HEADER_SIZE))"];
"1000431" [label="(Call,cell->payload + RELAY_HEADER_SIZE)"];
"1000248" [label="(Return,return connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint);)"];
"1001048" [label="(Literal,0)"];
"1001039" [label="(Call,rh.length)"];
"1000115" [label="(MethodParameterIn,cell_t *cell)"];
"1000142" [label="(Call,&rh)"];
"1000432" [label="(Call,cell->payload)"];
"1000458" [label="(Call,get_uint8(cell->payload+RELAY_HEADER_SIZE))"];
"1000463" [label="(Identifier,RELAY_HEADER_SIZE)"];
"1000651" [label="(ControlStructure,if (extended_cell_parse(&extended_cell, rh.command,\n                        (const uint8_t*)cell->payload+RELAY_HEADER_SIZE,\n                        rh.length)<0))"];
"1000753" [label="(Block,)"];
"1000119" [label="(Block,)"];
"1000451" [label="(Identifier,reason)"];
"1000777" [label="(Identifier,circ)"];
"1000453" [label="(Call,rh.length > 0)"];
"1000763" [label="(Call,circuit_clear_cell_queue(circ, circ->n_chan))"];
"1000665" [label="(Identifier,RELAY_HEADER_SIZE)"];
"1000518" [label="(Call,reason | END_STREAM_REASON_FLAG_REMOTE)"];
"1000429" [label="(Call,(char*)(cell->payload + RELAY_HEADER_SIZE))"];
"1000443" [label="(Identifier,optimistic_data)"];
"1001058" [label="(MethodReturn,RET)"];
"1000439" [label="(Call,TO_CONN(conn))"];
"1000653" [label="(Call,extended_cell_parse(&extended_cell, rh.command,\n                        (const uint8_t*)cell->payload+RELAY_HEADER_SIZE,\n                        rh.length))"];
"1000758" [label="(Call,cell->payload + RELAY_HEADER_SIZE)"];
"1001046" [label="(Identifier,RELAY_HEADER_SIZE)"];
"1000475" [label="(Literal,0)"];
"1000756" [label="(Identifier,trunc_reason)"];
"1001043" [label="(Call,cell->payload)"];
"1000144" [label="(Call,cell->payload)"];
"1000464" [label="(Identifier,END_STREAM_REASON_MISC)"];
"1000652" [label="(Call,extended_cell_parse(&extended_cell, rh.command,\n                        (const uint8_t*)cell->payload+RELAY_HEADER_SIZE,\n                        rh.length)<0)"];
"1000824" [label="(Literal,0)"];
"1000253" [label="(Identifier,circ)"];
"1000468" [label="(Block,)"];
"1000435" [label="(Identifier,RELAY_HEADER_SIZE)"];
"1000250" [label="(Call,&rh)"];
"1000775" [label="(Identifier,trunc_reason)"];
"1000254" [label="(Identifier,conn)"];
"1000666" [label="(Call,rh.length)"];
"1000141" -> "1000119"  [label="AST: "];
"1000141" -> "1000144"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000144" -> "1000141"  [label="AST: "];
"1000148" -> "1000141"  [label="CFG: "];
"1000141" -> "1001058"  [label="DDG: "];
"1000141" -> "1001058"  [label="DDG: "];
"1000141" -> "1001058"  [label="DDG: "];
"1000141" -> "1000249"  [label="DDG: "];
"1000141" -> "1000429"  [label="DDG: "];
"1000141" -> "1000431"  [label="DDG: "];
"1000141" -> "1000458"  [label="DDG: "];
"1000141" -> "1000459"  [label="DDG: "];
"1000141" -> "1000660"  [label="DDG: "];
"1000141" -> "1000757"  [label="DDG: "];
"1000141" -> "1000758"  [label="DDG: "];
"1000141" -> "1000817"  [label="DDG: "];
"1000141" -> "1000818"  [label="DDG: "];
"1000141" -> "1001033"  [label="DDG: "];
"1000141" -> "1001042"  [label="DDG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000249" -> "1000255"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000252" -> "1000249"  [label="AST: "];
"1000253" -> "1000249"  [label="AST: "];
"1000254" -> "1000249"  [label="AST: "];
"1000255" -> "1000249"  [label="AST: "];
"1000248" -> "1000249"  [label="CFG: "];
"1000249" -> "1001058"  [label="DDG: "];
"1000249" -> "1001058"  [label="DDG: "];
"1000249" -> "1001058"  [label="DDG: "];
"1000249" -> "1001058"  [label="DDG: "];
"1000249" -> "1001058"  [label="DDG: "];
"1000249" -> "1001058"  [label="DDG: "];
"1000249" -> "1000248"  [label="DDG: "];
"1000137" -> "1000249"  [label="DDG: "];
"1000115" -> "1000249"  [label="DDG: "];
"1000139" -> "1000249"  [label="DDG: "];
"1000116" -> "1000249"  [label="DDG: "];
"1000205" -> "1000249"  [label="DDG: "];
"1000117" -> "1000249"  [label="DDG: "];
"1000118" -> "1000249"  [label="DDG: "];
"1000248" -> "1000247"  [label="AST: "];
"1001058" -> "1000248"  [label="CFG: "];
"1000248" -> "1001058"  [label="DDG: "];
"1000429" -> "1000428"  [label="AST: "];
"1000429" -> "1000431"  [label="CFG: "];
"1000430" -> "1000429"  [label="AST: "];
"1000431" -> "1000429"  [label="AST: "];
"1000437" -> "1000429"  [label="CFG: "];
"1000429" -> "1001058"  [label="DDG: "];
"1000429" -> "1000428"  [label="DDG: "];
"1000428" -> "1000260"  [label="AST: "];
"1000428" -> "1000439"  [label="CFG: "];
"1000436" -> "1000428"  [label="AST: "];
"1000439" -> "1000428"  [label="AST: "];
"1000443" -> "1000428"  [label="CFG: "];
"1000428" -> "1001058"  [label="DDG: "];
"1000428" -> "1001058"  [label="DDG: "];
"1000428" -> "1001058"  [label="DDG: "];
"1000428" -> "1001058"  [label="DDG: "];
"1000160" -> "1000428"  [label="DDG: "];
"1000439" -> "1000428"  [label="DDG: "];
"1000431" -> "1000435"  [label="CFG: "];
"1000432" -> "1000431"  [label="AST: "];
"1000435" -> "1000431"  [label="AST: "];
"1000431" -> "1001058"  [label="DDG: "];
"1000431" -> "1001058"  [label="DDG: "];
"1000458" -> "1000452"  [label="AST: "];
"1000458" -> "1000459"  [label="CFG: "];
"1000459" -> "1000458"  [label="AST: "];
"1000452" -> "1000458"  [label="CFG: "];
"1000458" -> "1001058"  [label="DDG: "];
"1000458" -> "1000450"  [label="DDG: "];
"1000458" -> "1000452"  [label="DDG: "];
"1000450" -> "1000260"  [label="AST: "];
"1000450" -> "1000452"  [label="CFG: "];
"1000451" -> "1000450"  [label="AST: "];
"1000452" -> "1000450"  [label="AST: "];
"1000467" -> "1000450"  [label="CFG: "];
"1000450" -> "1001058"  [label="DDG: "];
"1000450" -> "1001058"  [label="DDG: "];
"1000450" -> "1000472"  [label="DDG: "];
"1000450" -> "1000518"  [label="DDG: "];
"1000472" -> "1000469"  [label="AST: "];
"1000472" -> "1000473"  [label="CFG: "];
"1000473" -> "1000472"  [label="AST: "];
"1000469" -> "1000472"  [label="CFG: "];
"1000472" -> "1001058"  [label="DDG: "];
"1000472" -> "1000469"  [label="DDG: "];
"1000469" -> "1000468"  [label="AST: "];
"1000470" -> "1000469"  [label="AST: "];
"1000471" -> "1000469"  [label="AST: "];
"1000475" -> "1000469"  [label="CFG: "];
"1000469" -> "1001058"  [label="DDG: "];
"1000469" -> "1001058"  [label="DDG: "];
"1000469" -> "1001058"  [label="DDG: "];
"1000149" -> "1000469"  [label="DDG: "];
"1000518" -> "1000514"  [label="AST: "];
"1000518" -> "1000520"  [label="CFG: "];
"1000519" -> "1000518"  [label="AST: "];
"1000520" -> "1000518"  [label="AST: "];
"1000514" -> "1000518"  [label="CFG: "];
"1000518" -> "1001058"  [label="DDG: "];
"1000518" -> "1001058"  [label="DDG: "];
"1000518" -> "1000514"  [label="DDG: "];
"1000518" -> "1000514"  [label="DDG: "];
"1000514" -> "1000509"  [label="AST: "];
"1000515" -> "1000514"  [label="AST: "];
"1000525" -> "1000514"  [label="CFG: "];
"1000514" -> "1001058"  [label="DDG: "];
"1000514" -> "1001058"  [label="DDG: "];
"1000452" -> "1000464"  [label="CFG: "];
"1000453" -> "1000452"  [label="AST: "];
"1000464" -> "1000452"  [label="AST: "];
"1000452" -> "1001058"  [label="DDG: "];
"1000452" -> "1001058"  [label="DDG: "];
"1000452" -> "1001058"  [label="DDG: "];
"1000459" -> "1000463"  [label="CFG: "];
"1000460" -> "1000459"  [label="AST: "];
"1000463" -> "1000459"  [label="AST: "];
"1000459" -> "1001058"  [label="DDG: "];
"1000459" -> "1001058"  [label="DDG: "];
"1000660" -> "1000659"  [label="AST: "];
"1000660" -> "1000662"  [label="CFG: "];
"1000661" -> "1000660"  [label="AST: "];
"1000662" -> "1000660"  [label="AST: "];
"1000665" -> "1000660"  [label="CFG: "];
"1000660" -> "1001058"  [label="DDG: "];
"1000660" -> "1000653"  [label="DDG: "];
"1000660" -> "1000659"  [label="DDG: "];
"1000653" -> "1000652"  [label="AST: "];
"1000653" -> "1000666"  [label="CFG: "];
"1000654" -> "1000653"  [label="AST: "];
"1000656" -> "1000653"  [label="AST: "];
"1000659" -> "1000653"  [label="AST: "];
"1000666" -> "1000653"  [label="AST: "];
"1000669" -> "1000653"  [label="CFG: "];
"1000653" -> "1001058"  [label="DDG: "];
"1000653" -> "1001058"  [label="DDG: "];
"1000653" -> "1001058"  [label="DDG: "];
"1000653" -> "1001058"  [label="DDG: "];
"1000653" -> "1000652"  [label="DDG: "];
"1000653" -> "1000652"  [label="DDG: "];
"1000653" -> "1000652"  [label="DDG: "];
"1000653" -> "1000652"  [label="DDG: "];
"1000237" -> "1000653"  [label="DDG: "];
"1000149" -> "1000653"  [label="DDG: "];
"1000160" -> "1000653"  [label="DDG: "];
"1000652" -> "1000651"  [label="AST: "];
"1000652" -> "1000669"  [label="CFG: "];
"1000669" -> "1000652"  [label="AST: "];
"1000672" -> "1000652"  [label="CFG: "];
"1000680" -> "1000652"  [label="CFG: "];
"1000652" -> "1001058"  [label="DDG: "];
"1000652" -> "1001058"  [label="DDG: "];
"1000659" -> "1000665"  [label="CFG: "];
"1000665" -> "1000659"  [label="AST: "];
"1000667" -> "1000659"  [label="CFG: "];
"1000659" -> "1001058"  [label="DDG: "];
"1000659" -> "1001058"  [label="DDG: "];
"1000757" -> "1000755"  [label="AST: "];
"1000757" -> "1000758"  [label="CFG: "];
"1000758" -> "1000757"  [label="AST: "];
"1000755" -> "1000757"  [label="CFG: "];
"1000757" -> "1001058"  [label="DDG: "];
"1000757" -> "1000755"  [label="DDG: "];
"1000755" -> "1000753"  [label="AST: "];
"1000756" -> "1000755"  [label="AST: "];
"1000764" -> "1000755"  [label="CFG: "];
"1000755" -> "1001058"  [label="DDG: "];
"1000755" -> "1000768"  [label="DDG: "];
"1000768" -> "1000753"  [label="AST: "];
"1000768" -> "1000775"  [label="CFG: "];
"1000769" -> "1000768"  [label="AST: "];
"1000772" -> "1000768"  [label="AST: "];
"1000775" -> "1000768"  [label="AST: "];
"1000777" -> "1000768"  [label="CFG: "];
"1000768" -> "1001058"  [label="DDG: "];
"1000768" -> "1001058"  [label="DDG: "];
"1000768" -> "1001058"  [label="DDG: "];
"1000768" -> "1001058"  [label="DDG: "];
"1000763" -> "1000768"  [label="DDG: "];
"1000758" -> "1000762"  [label="CFG: "];
"1000759" -> "1000758"  [label="AST: "];
"1000762" -> "1000758"  [label="AST: "];
"1000758" -> "1001058"  [label="DDG: "];
"1000758" -> "1001058"  [label="DDG: "];
"1000817" -> "1000813"  [label="AST: "];
"1000817" -> "1000818"  [label="CFG: "];
"1000818" -> "1000817"  [label="AST: "];
"1000813" -> "1000817"  [label="CFG: "];
"1000817" -> "1001058"  [label="DDG: "];
"1000817" -> "1000813"  [label="DDG: "];
"1000813" -> "1000260"  [label="AST: "];
"1000814" -> "1000813"  [label="AST: "];
"1000816" -> "1000813"  [label="AST: "];
"1000824" -> "1000813"  [label="CFG: "];
"1000813" -> "1001058"  [label="DDG: "];
"1000813" -> "1001058"  [label="DDG: "];
"1000813" -> "1001058"  [label="DDG: "];
"1000813" -> "1001058"  [label="DDG: "];
"1000814" -> "1000813"  [label="DDG: "];
"1000804" -> "1000813"  [label="DDG: "];
"1000118" -> "1000813"  [label="DDG: "];
"1000818" -> "1000822"  [label="CFG: "];
"1000819" -> "1000818"  [label="AST: "];
"1000822" -> "1000818"  [label="AST: "];
"1000818" -> "1001058"  [label="DDG: "];
"1000818" -> "1001058"  [label="DDG: "];
"1001033" -> "1000260"  [label="AST: "];
"1001033" -> "1001042"  [label="CFG: "];
"1001034" -> "1001033"  [label="AST: "];
"1001035" -> "1001033"  [label="AST: "];
"1001036" -> "1001033"  [label="AST: "];
"1001039" -> "1001033"  [label="AST: "];
"1001042" -> "1001033"  [label="AST: "];
"1001048" -> "1001033"  [label="CFG: "];
"1001033" -> "1001058"  [label="DDG: "];
"1001033" -> "1001058"  [label="DDG: "];
"1001033" -> "1001058"  [label="DDG: "];
"1001033" -> "1001058"  [label="DDG: "];
"1001033" -> "1001058"  [label="DDG: "];
"1001033" -> "1001058"  [label="DDG: "];
"1000139" -> "1001033"  [label="DDG: "];
"1000116" -> "1001033"  [label="DDG: "];
"1000118" -> "1001033"  [label="DDG: "];
"1000237" -> "1001033"  [label="DDG: "];
"1000149" -> "1001033"  [label="DDG: "];
"1000160" -> "1001033"  [label="DDG: "];
"1001042" -> "1001046"  [label="CFG: "];
"1001043" -> "1001042"  [label="AST: "];
"1001046" -> "1001042"  [label="AST: "];
"1001042" -> "1001058"  [label="DDG: "];
"1001042" -> "1001058"  [label="DDG: "];
}
