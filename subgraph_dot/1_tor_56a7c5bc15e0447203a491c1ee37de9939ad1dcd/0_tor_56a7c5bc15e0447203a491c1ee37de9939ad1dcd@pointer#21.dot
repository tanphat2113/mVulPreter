digraph "0_tor_56a7c5bc15e0447203a491c1ee37de9939ad1dcd@pointer" {
"1000804" [label="(Call,!layer_hint)"];
"1000118" [label="(MethodParameterIn,crypt_path_t *layer_hint)"];
"1000813" [label="(Call,circuit_truncated(TO_ORIGIN_CIRCUIT(circ), layer_hint,\n                        get_uint8(cell->payload + RELAY_HEADER_SIZE)))"];
"1000817" [label="(Call,get_uint8(cell->payload + RELAY_HEADER_SIZE))"];
"1000813" [label="(Call,circuit_truncated(TO_ORIGIN_CIRCUIT(circ), layer_hint,\n                        get_uint8(cell->payload + RELAY_HEADER_SIZE)))"];
"1000637" [label="(Call,!layer_hint)"];
"1000815" [label="(Identifier,circ)"];
"1000260" [label="(Block,)"];
"1001058" [label="(MethodReturn,RET)"];
"1000393" [label="(Call,circuit_consider_sending_sendme(circ, layer_hint))"];
"1000385" [label="(Call,layer_hint ?\n                layer_hint->deliver_window : circ->deliver_window)"];
"1000803" [label="(ControlStructure,if (!layer_hint))"];
"1000357" [label="(Call,!layer_hint)"];
"1000808" [label="(Identifier,LOG_PROTOCOL_WARN)"];
"1000814" [label="(Call,TO_ORIGIN_CIRCUIT(circ))"];
"1000816" [label="(Identifier,layer_hint)"];
"1000804" [label="(Call,!layer_hint)"];
"1000878" [label="(Call,circuit_resume_edge_reading(circ, layer_hint))"];
"1000913" [label="(Call,circuit_resume_edge_reading(circ, layer_hint))"];
"1000824" [label="(Literal,0)"];
"1000382" [label="(Call,log_debug(domain,\"circ deliver_window now %d.\", layer_hint ?\n                layer_hint->deliver_window : circ->deliver_window))"];
"1000118" [label="(MethodParameterIn,crypt_path_t *layer_hint)"];
"1001033" [label="(Call,rend_process_relay_cell(circ, layer_hint,\n                              rh.command, rh.length,\n                              cell->payload+RELAY_HEADER_SIZE))"];
"1000249" [label="(Call,connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint))"];
"1000126" [label="(Call,domain = layer_hint?LD_APP:LD_EXIT)"];
"1000267" [label="(Call,layer_hint &&\n          circ->purpose != CIRCUIT_PURPOSE_S_REND_JOINED)"];
"1000805" [label="(Identifier,layer_hint)"];
"1000128" [label="(Call,layer_hint?LD_APP:LD_EXIT)"];
"1000348" [label="(Call,layer_hint && --layer_hint->deliver_window < 0)"];
"1000288" [label="(Call,layer_hint != TO_ORIGIN_CIRCUIT(circ)->cpath->prev)"];
"1000804" -> "1000803"  [label="AST: "];
"1000804" -> "1000805"  [label="CFG: "];
"1000805" -> "1000804"  [label="AST: "];
"1000808" -> "1000804"  [label="CFG: "];
"1000815" -> "1000804"  [label="CFG: "];
"1000804" -> "1001058"  [label="DDG: layer_hint"];
"1000804" -> "1001058"  [label="DDG: !layer_hint"];
"1000118" -> "1000804"  [label="DDG: layer_hint"];
"1000804" -> "1000813"  [label="DDG: layer_hint"];
"1000118" -> "1000114"  [label="AST: "];
"1000118" -> "1001058"  [label="DDG: layer_hint"];
"1000118" -> "1000126"  [label="DDG: layer_hint"];
"1000118" -> "1000128"  [label="DDG: layer_hint"];
"1000118" -> "1000249"  [label="DDG: layer_hint"];
"1000118" -> "1000267"  [label="DDG: layer_hint"];
"1000118" -> "1000288"  [label="DDG: layer_hint"];
"1000118" -> "1000348"  [label="DDG: layer_hint"];
"1000118" -> "1000357"  [label="DDG: layer_hint"];
"1000118" -> "1000382"  [label="DDG: layer_hint"];
"1000118" -> "1000385"  [label="DDG: layer_hint"];
"1000118" -> "1000393"  [label="DDG: layer_hint"];
"1000118" -> "1000637"  [label="DDG: layer_hint"];
"1000118" -> "1000813"  [label="DDG: layer_hint"];
"1000118" -> "1000878"  [label="DDG: layer_hint"];
"1000118" -> "1000913"  [label="DDG: layer_hint"];
"1000118" -> "1001033"  [label="DDG: layer_hint"];
"1000813" -> "1000260"  [label="AST: "];
"1000813" -> "1000817"  [label="CFG: "];
"1000814" -> "1000813"  [label="AST: "];
"1000816" -> "1000813"  [label="AST: "];
"1000817" -> "1000813"  [label="AST: "];
"1000824" -> "1000813"  [label="CFG: "];
"1000813" -> "1001058"  [label="DDG: layer_hint"];
"1000813" -> "1001058"  [label="DDG: get_uint8(cell->payload + RELAY_HEADER_SIZE)"];
"1000813" -> "1001058"  [label="DDG: TO_ORIGIN_CIRCUIT(circ)"];
"1000813" -> "1001058"  [label="DDG: circuit_truncated(TO_ORIGIN_CIRCUIT(circ), layer_hint,\n                        get_uint8(cell->payload + RELAY_HEADER_SIZE))"];
"1000814" -> "1000813"  [label="DDG: circ"];
"1000817" -> "1000813"  [label="DDG: cell->payload + RELAY_HEADER_SIZE"];
}
