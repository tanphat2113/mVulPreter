digraph "0_tor_56a7c5bc15e0447203a491c1ee37de9939ad1dcd@API" {
"1000249" [label="(Call,connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint))"];
"1000141" [label="(Call,relay_header_unpack(&rh, cell->payload))"];
"1000137" [label="(Call,tor_assert(cell))"];
"1000115" [label="(MethodParameterIn,cell_t *cell)"];
"1000139" [label="(Call,tor_assert(circ))"];
"1000116" [label="(MethodParameterIn,circuit_t *circ)"];
"1000205" [label="(Call,conn && !connection_state_is_open(TO_CONN(conn)))"];
"1000209" [label="(Call,TO_CONN(conn))"];
"1000117" [label="(MethodParameterIn,edge_connection_t *conn)"];
"1000207" [label="(Call,!connection_state_is_open(TO_CONN(conn)))"];
"1000208" [label="(Call,connection_state_is_open(TO_CONN(conn)))"];
"1000118" [label="(MethodParameterIn,crypt_path_t *layer_hint)"];
"1000248" [label="(Return,return connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint);)"];
"1000817" [label="(Call,get_uint8(cell->payload + RELAY_HEADER_SIZE))"];
"1000813" [label="(Call,circuit_truncated(TO_ORIGIN_CIRCUIT(circ), layer_hint,\n                        get_uint8(cell->payload + RELAY_HEADER_SIZE)))"];
"1000763" [label="(Call,circuit_clear_cell_queue(circ, circ->n_chan))"];
"1000952" [label="(Call,connection_edge_package_raw_inbuf(conn, 1, NULL))"];
"1000637" [label="(Call,!layer_hint)"];
"1000757" [label="(Call,get_uint8(cell->payload + RELAY_HEADER_SIZE))"];
"1000137" [label="(Call,tor_assert(cell))"];
"1000292" [label="(Call,TO_ORIGIN_CIRCUIT(circ))"];
"1000148" [label="(Identifier,num_seen)"];
"1000530" [label="(Call,TO_CONN(conn))"];
"1000143" [label="(Identifier,rh)"];
"1000429" [label="(Call,(char*)(cell->payload + RELAY_HEADER_SIZE))"];
"1000818" [label="(Call,cell->payload + RELAY_HEADER_SIZE)"];
"1001042" [label="(Call,cell->payload+RELAY_HEADER_SIZE)"];
"1000217" [label="(Identifier,conn)"];
"1000682" [label="(Call,TO_ORIGIN_CIRCUIT(circ))"];
"1000117" [label="(MethodParameterIn,edge_connection_t *conn)"];
"1001058" [label="(MethodReturn,RET)"];
"1000393" [label="(Call,circuit_consider_sending_sendme(circ, layer_hint))"];
"1000792" [label="(Call,relay_send_command_from_edge(0, circ, RELAY_COMMAND_TRUNCATED,\n                                     payload, sizeof(payload), NULL))"];
"1000439" [label="(Call,TO_CONN(conn))"];
"1000942" [label="(Call,circuit_queue_streams_are_blocked(circ))"];
"1000488" [label="(Call,EDGE_TO_ENTRY_CONN(conn))"];
"1000385" [label="(Call,layer_hint ?\n                layer_hint->deliver_window : circ->deliver_window)"];
"1001004" [label="(Call,TO_OR_CIRCUIT(circ))"];
"1000758" [label="(Call,cell->payload + RELAY_HEADER_SIZE)"];
"1000340" [label="(Call,connection_exit_begin_conn(cell, circ))"];
"1000252" [label="(Identifier,cell)"];
"1000116" [label="(MethodParameterIn,circuit_t *circ)"];
"1000332" [label="(Call,TO_OR_CIRCUIT(circ))"];
"1000204" [label="(ControlStructure,if (conn && !connection_state_is_open(TO_CONN(conn))))"];
"1000431" [label="(Call,cell->payload + RELAY_HEADER_SIZE)"];
"1000248" [label="(Return,return connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint);)"];
"1000357" [label="(Call,!layer_hint)"];
"1000144" [label="(Call,cell->payload)"];
"1000115" [label="(MethodParameterIn,cell_t *cell)"];
"1000142" [label="(Call,&rh)"];
"1000814" [label="(Call,TO_ORIGIN_CIRCUIT(circ))"];
"1000209" [label="(Call,TO_CONN(conn))"];
"1000247" [label="(Block,)"];
"1000804" [label="(Call,!layer_hint)"];
"1000207" [label="(Call,!connection_state_is_open(TO_CONN(conn)))"];
"1000878" [label="(Call,circuit_resume_edge_reading(circ, layer_hint))"];
"1000913" [label="(Call,circuit_resume_edge_reading(circ, layer_hint))"];
"1000959" [label="(Call,TO_CONN(conn))"];
"1000458" [label="(Call,get_uint8(cell->payload+RELAY_HEADER_SIZE))"];
"1000382" [label="(Call,log_debug(domain,\"circ deliver_window now %d.\", layer_hint ?\n                layer_hint->deliver_window : circ->deliver_window))"];
"1000128" [label="(Call,layer_hint?LD_APP:LD_EXIT)"];
"1000208" [label="(Call,connection_state_is_open(TO_CONN(conn)))"];
"1000377" [label="(Call,TO_CONN(conn))"];
"1000118" [label="(MethodParameterIn,crypt_path_t *layer_hint)"];
"1000205" [label="(Call,conn && !connection_state_is_open(TO_CONN(conn)))"];
"1000140" [label="(Identifier,circ)"];
"1000746" [label="(Call,circuit_set_state(circ, CIRCUIT_STATE_OPEN))"];
"1000253" [label="(Identifier,circ)"];
"1000459" [label="(Call,cell->payload+RELAY_HEADER_SIZE)"];
"1000141" [label="(Call,relay_header_unpack(&rh, cell->payload))"];
"1001033" [label="(Call,rend_process_relay_cell(circ, layer_hint,\n                              rh.command, rh.length,\n                              cell->payload+RELAY_HEADER_SIZE))"];
"1000700" [label="(Call,TO_ORIGIN_CIRCUIT(circ))"];
"1000373" [label="(Call,connection_edge_end(conn, END_STREAM_REASON_TORPROTOCOL))"];
"1000139" [label="(Call,tor_assert(circ))"];
"1000255" [label="(Identifier,layer_hint)"];
"1000919" [label="(Call,!conn)"];
"1000119" [label="(Block,)"];
"1000948" [label="(Call,TO_CONN(conn))"];
"1000397" [label="(Call,!conn)"];
"1000250" [label="(Call,&rh)"];
"1000776" [label="(Call,circuit_set_n_circid_chan(circ, 0, NULL))"];
"1000249" [label="(Call,connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint))"];
"1000210" [label="(Identifier,conn)"];
"1000126" [label="(Call,domain = layer_hint?LD_APP:LD_EXIT)"];
"1000138" [label="(Identifier,cell)"];
"1000631" [label="(Call,circuit_extend(cell, circ))"];
"1001002" [label="(Call,connection_exit_begin_resolve(cell, TO_OR_CIRCUIT(circ)))"];
"1000445" [label="(Call,connection_edge_consider_sending_sendme(conn))"];
"1000254" [label="(Identifier,conn)"];
"1000466" [label="(Call,!conn)"];
"1000267" [label="(Call,layer_hint &&\n          circ->purpose != CIRCUIT_PURPOSE_S_REND_JOINED)"];
"1000660" [label="(Call,(const uint8_t*)cell->payload)"];
"1000206" [label="(Identifier,conn)"];
"1000348" [label="(Call,layer_hint && --layer_hint->deliver_window < 0)"];
"1000288" [label="(Call,layer_hint != TO_ORIGIN_CIRCUIT(circ)->cpath->prev)"];
"1000258" [label="(Identifier,rh)"];
"1000249" -> "1000248"  [label="AST: "];
"1000249" -> "1000255"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000252" -> "1000249"  [label="AST: "];
"1000253" -> "1000249"  [label="AST: "];
"1000254" -> "1000249"  [label="AST: "];
"1000255" -> "1000249"  [label="AST: "];
"1000248" -> "1000249"  [label="CFG: "];
"1000249" -> "1001058"  [label="DDG: circ"];
"1000249" -> "1001058"  [label="DDG: layer_hint"];
"1000249" -> "1001058"  [label="DDG: conn"];
"1000249" -> "1001058"  [label="DDG: cell"];
"1000249" -> "1001058"  [label="DDG: &rh"];
"1000249" -> "1001058"  [label="DDG: connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint)"];
"1000249" -> "1000248"  [label="DDG: connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint)"];
"1000141" -> "1000249"  [label="DDG: &rh"];
"1000137" -> "1000249"  [label="DDG: cell"];
"1000115" -> "1000249"  [label="DDG: cell"];
"1000139" -> "1000249"  [label="DDG: circ"];
"1000116" -> "1000249"  [label="DDG: circ"];
"1000205" -> "1000249"  [label="DDG: conn"];
"1000117" -> "1000249"  [label="DDG: conn"];
"1000118" -> "1000249"  [label="DDG: layer_hint"];
"1000141" -> "1000119"  [label="AST: "];
"1000141" -> "1000144"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000144" -> "1000141"  [label="AST: "];
"1000148" -> "1000141"  [label="CFG: "];
"1000141" -> "1001058"  [label="DDG: &rh"];
"1000141" -> "1001058"  [label="DDG: relay_header_unpack(&rh, cell->payload)"];
"1000141" -> "1001058"  [label="DDG: cell->payload"];
"1000141" -> "1000429"  [label="DDG: cell->payload"];
"1000141" -> "1000431"  [label="DDG: cell->payload"];
"1000141" -> "1000458"  [label="DDG: cell->payload"];
"1000141" -> "1000459"  [label="DDG: cell->payload"];
"1000141" -> "1000660"  [label="DDG: cell->payload"];
"1000141" -> "1000757"  [label="DDG: cell->payload"];
"1000141" -> "1000758"  [label="DDG: cell->payload"];
"1000141" -> "1000817"  [label="DDG: cell->payload"];
"1000141" -> "1000818"  [label="DDG: cell->payload"];
"1000141" -> "1001033"  [label="DDG: cell->payload"];
"1000141" -> "1001042"  [label="DDG: cell->payload"];
"1000137" -> "1000119"  [label="AST: "];
"1000137" -> "1000138"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000140" -> "1000137"  [label="CFG: "];
"1000137" -> "1001058"  [label="DDG: cell"];
"1000137" -> "1001058"  [label="DDG: tor_assert(cell)"];
"1000115" -> "1000137"  [label="DDG: cell"];
"1000137" -> "1000340"  [label="DDG: cell"];
"1000137" -> "1000631"  [label="DDG: cell"];
"1000137" -> "1001002"  [label="DDG: cell"];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1001058"  [label="DDG: cell"];
"1000115" -> "1000340"  [label="DDG: cell"];
"1000115" -> "1000631"  [label="DDG: cell"];
"1000115" -> "1001002"  [label="DDG: cell"];
"1000139" -> "1000119"  [label="AST: "];
"1000139" -> "1000140"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000143" -> "1000139"  [label="CFG: "];
"1000139" -> "1001058"  [label="DDG: tor_assert(circ)"];
"1000139" -> "1001058"  [label="DDG: circ"];
"1000116" -> "1000139"  [label="DDG: circ"];
"1000139" -> "1000292"  [label="DDG: circ"];
"1000139" -> "1000332"  [label="DDG: circ"];
"1000139" -> "1000340"  [label="DDG: circ"];
"1000139" -> "1000393"  [label="DDG: circ"];
"1000139" -> "1000631"  [label="DDG: circ"];
"1000139" -> "1000682"  [label="DDG: circ"];
"1000139" -> "1000746"  [label="DDG: circ"];
"1000139" -> "1000763"  [label="DDG: circ"];
"1000139" -> "1000792"  [label="DDG: circ"];
"1000139" -> "1000814"  [label="DDG: circ"];
"1000139" -> "1000878"  [label="DDG: circ"];
"1000139" -> "1000913"  [label="DDG: circ"];
"1000139" -> "1000942"  [label="DDG: circ"];
"1000139" -> "1001004"  [label="DDG: circ"];
"1000139" -> "1001033"  [label="DDG: circ"];
"1000116" -> "1000114"  [label="AST: "];
"1000116" -> "1001058"  [label="DDG: circ"];
"1000116" -> "1000292"  [label="DDG: circ"];
"1000116" -> "1000332"  [label="DDG: circ"];
"1000116" -> "1000340"  [label="DDG: circ"];
"1000116" -> "1000393"  [label="DDG: circ"];
"1000116" -> "1000631"  [label="DDG: circ"];
"1000116" -> "1000682"  [label="DDG: circ"];
"1000116" -> "1000700"  [label="DDG: circ"];
"1000116" -> "1000746"  [label="DDG: circ"];
"1000116" -> "1000763"  [label="DDG: circ"];
"1000116" -> "1000776"  [label="DDG: circ"];
"1000116" -> "1000792"  [label="DDG: circ"];
"1000116" -> "1000814"  [label="DDG: circ"];
"1000116" -> "1000878"  [label="DDG: circ"];
"1000116" -> "1000913"  [label="DDG: circ"];
"1000116" -> "1000942"  [label="DDG: circ"];
"1000116" -> "1001004"  [label="DDG: circ"];
"1000116" -> "1001033"  [label="DDG: circ"];
"1000205" -> "1000204"  [label="AST: "];
"1000205" -> "1000206"  [label="CFG: "];
"1000205" -> "1000207"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000207" -> "1000205"  [label="AST: "];
"1000217" -> "1000205"  [label="CFG: "];
"1000258" -> "1000205"  [label="CFG: "];
"1000205" -> "1001058"  [label="DDG: conn"];
"1000205" -> "1001058"  [label="DDG: !connection_state_is_open(TO_CONN(conn))"];
"1000205" -> "1001058"  [label="DDG: conn && !connection_state_is_open(TO_CONN(conn))"];
"1000209" -> "1000205"  [label="DDG: conn"];
"1000117" -> "1000205"  [label="DDG: conn"];
"1000207" -> "1000205"  [label="DDG: connection_state_is_open(TO_CONN(conn))"];
"1000205" -> "1000373"  [label="DDG: conn"];
"1000205" -> "1000397"  [label="DDG: conn"];
"1000205" -> "1000466"  [label="DDG: conn"];
"1000205" -> "1000919"  [label="DDG: conn"];
"1000209" -> "1000208"  [label="AST: "];
"1000209" -> "1000210"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000208" -> "1000209"  [label="CFG: "];
"1000209" -> "1000208"  [label="DDG: conn"];
"1000117" -> "1000209"  [label="DDG: conn"];
"1000117" -> "1000114"  [label="AST: "];
"1000117" -> "1001058"  [label="DDG: conn"];
"1000117" -> "1000373"  [label="DDG: conn"];
"1000117" -> "1000377"  [label="DDG: conn"];
"1000117" -> "1000397"  [label="DDG: conn"];
"1000117" -> "1000439"  [label="DDG: conn"];
"1000117" -> "1000445"  [label="DDG: conn"];
"1000117" -> "1000466"  [label="DDG: conn"];
"1000117" -> "1000488"  [label="DDG: conn"];
"1000117" -> "1000530"  [label="DDG: conn"];
"1000117" -> "1000919"  [label="DDG: conn"];
"1000117" -> "1000948"  [label="DDG: conn"];
"1000117" -> "1000952"  [label="DDG: conn"];
"1000117" -> "1000959"  [label="DDG: conn"];
"1000207" -> "1000208"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000207" -> "1001058"  [label="DDG: connection_state_is_open(TO_CONN(conn))"];
"1000208" -> "1000207"  [label="DDG: TO_CONN(conn)"];
"1000208" -> "1001058"  [label="DDG: TO_CONN(conn)"];
"1000118" -> "1000114"  [label="AST: "];
"1000118" -> "1001058"  [label="DDG: layer_hint"];
"1000118" -> "1000126"  [label="DDG: layer_hint"];
"1000118" -> "1000128"  [label="DDG: layer_hint"];
"1000118" -> "1000267"  [label="DDG: layer_hint"];
"1000118" -> "1000288"  [label="DDG: layer_hint"];
"1000118" -> "1000348"  [label="DDG: layer_hint"];
"1000118" -> "1000357"  [label="DDG: layer_hint"];
"1000118" -> "1000382"  [label="DDG: layer_hint"];
"1000118" -> "1000385"  [label="DDG: layer_hint"];
"1000118" -> "1000393"  [label="DDG: layer_hint"];
"1000118" -> "1000637"  [label="DDG: layer_hint"];
"1000118" -> "1000804"  [label="DDG: layer_hint"];
"1000118" -> "1000813"  [label="DDG: layer_hint"];
"1000118" -> "1000878"  [label="DDG: layer_hint"];
"1000118" -> "1000913"  [label="DDG: layer_hint"];
"1000118" -> "1001033"  [label="DDG: layer_hint"];
"1000248" -> "1000247"  [label="AST: "];
"1001058" -> "1000248"  [label="CFG: "];
"1000248" -> "1001058"  [label="DDG: <RET>"];
}
