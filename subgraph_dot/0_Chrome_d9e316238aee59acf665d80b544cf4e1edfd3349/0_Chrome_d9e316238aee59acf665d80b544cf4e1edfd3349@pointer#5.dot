digraph "0_Chrome_d9e316238aee59acf665d80b544cf4e1edfd3349@pointer" {
"1000209" [label="(Call,LOG(\"%s: Failed to find end of central directory in %s\n\",\n        __FUNCTION__, zip_file))"];
"1000122" [label="(Call,stat(zip_file, &stat_buf))"];
"1000110" [label="(Call,fd.OpenReadOnly(zip_file))"];
"1000104" [label="(MethodParameterIn,const char* zip_file)"];
"1000209" [label="(Call,LOG(\"%s: Failed to find end of central directory in %s\n\",\n        __FUNCTION__, zip_file))"];
"1000124" [label="(Call,&stat_buf)"];
"1000254" [label="(Call,LOG(\"%s: Found out of range offset %u for end of directory in %s\n\",\n        __FUNCTION__, end_of_central_dir, zip_file))"];
"1000123" [label="(Identifier,zip_file)"];
"1000210" [label="(Literal,\"%s: Failed to find end of central directory in %s\n\")"];
"1000212" [label="(Identifier,zip_file)"];
"1000142" [label="(Call,LOG(\"%s: The size %ld of %s is too large to map\n\",\n        __FUNCTION__, stat_buf.st_size, zip_file))"];
"1000110" [label="(Call,fd.OpenReadOnly(zip_file))"];
"1000129" [label="(Call,LOG_ERRNO(\"%s: stat failed trying to stat zip file %s\n\",\n              __FUNCTION__, zip_file))"];
"1000211" [label="(Identifier,__FUNCTION__)"];
"1000214" [label="(Identifier,CRAZY_OFFSET_FAILED)"];
"1000127" [label="(Literal,1)"];
"1000236" [label="(Call,LOG(\"%s: Found out of range offset %u for start of directory in %s\n\",\n        __FUNCTION__, start_of_central_dir, zip_file))"];
"1000466" [label="(Call,LOG(\"%s: Did not find %s in %s\n\", __FUNCTION__, filename, zip_file))"];
"1000405" [label="(Call,LOG(\"%s: %s is compressed within %s. \"\n            \"Found compression method %u but expected %u\n\", __FUNCTION__,\n            filename, zip_file, compression_method, kCompressionMethodStored))"];
"1000384" [label="(Call,LOG(\"%s: Failed to find local file header marker in %s. \"\n            \"Found 0x%x but expected 0x%x\n\", __FUNCTION__,\n            zip_file, marker, kLocalHeaderMarker))"];
"1000121" [label="(Call,stat(zip_file, &stat_buf) == -1)"];
"1000111" [label="(Identifier,zip_file)"];
"1000473" [label="(MethodReturn,int)"];
"1000113" [label="(Call,LOG_ERRNO(\"%s: open failed trying to open zip file %s\n\",\n              __FUNCTION__, zip_file))"];
"1000303" [label="(Call,LOG(\"%s: Failed to find central directory header marker in %s. \"\n          \"Found 0x%x but expected 0x%x\n\", __FUNCTION__,\n          zip_file, marker, kCentralDirHeaderMarker))"];
"1000109" [label="(Call,!fd.OpenReadOnly(zip_file))"];
"1000122" [label="(Call,stat(zip_file, &stat_buf))"];
"1000208" [label="(Block,)"];
"1000167" [label="(Call,LOG_ERRNO(\"%s: mmap failed trying to mmap zip file %s\n\",\n              __FUNCTION__, zip_file))"];
"1000104" [label="(MethodParameterIn,const char* zip_file)"];
"1000209" -> "1000208"  [label="AST: "];
"1000209" -> "1000212"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000211" -> "1000209"  [label="AST: "];
"1000212" -> "1000209"  [label="AST: "];
"1000214" -> "1000209"  [label="CFG: "];
"1000209" -> "1000473"  [label="DDG: "];
"1000209" -> "1000473"  [label="DDG: "];
"1000209" -> "1000473"  [label="DDG: "];
"1000122" -> "1000209"  [label="DDG: "];
"1000104" -> "1000209"  [label="DDG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000127" -> "1000122"  [label="CFG: "];
"1000122" -> "1000473"  [label="DDG: "];
"1000122" -> "1000473"  [label="DDG: "];
"1000122" -> "1000121"  [label="DDG: "];
"1000122" -> "1000121"  [label="DDG: "];
"1000110" -> "1000122"  [label="DDG: "];
"1000104" -> "1000122"  [label="DDG: "];
"1000122" -> "1000129"  [label="DDG: "];
"1000122" -> "1000142"  [label="DDG: "];
"1000122" -> "1000167"  [label="DDG: "];
"1000122" -> "1000236"  [label="DDG: "];
"1000122" -> "1000254"  [label="DDG: "];
"1000122" -> "1000303"  [label="DDG: "];
"1000122" -> "1000384"  [label="DDG: "];
"1000122" -> "1000405"  [label="DDG: "];
"1000122" -> "1000466"  [label="DDG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000111"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000109" -> "1000110"  [label="CFG: "];
"1000110" -> "1000109"  [label="DDG: "];
"1000104" -> "1000110"  [label="DDG: "];
"1000110" -> "1000113"  [label="DDG: "];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000473"  [label="DDG: "];
"1000104" -> "1000113"  [label="DDG: "];
"1000104" -> "1000129"  [label="DDG: "];
"1000104" -> "1000142"  [label="DDG: "];
"1000104" -> "1000167"  [label="DDG: "];
"1000104" -> "1000236"  [label="DDG: "];
"1000104" -> "1000254"  [label="DDG: "];
"1000104" -> "1000303"  [label="DDG: "];
"1000104" -> "1000384"  [label="DDG: "];
"1000104" -> "1000405"  [label="DDG: "];
"1000104" -> "1000466"  [label="DDG: "];
}
