digraph "0_linux_a8b0ca17b80e92faab46ee7179ba9e99ccb61233_29@API" {
"1000143" [label="(Call,vmalloc_fault(address) >= 0)"];
"1000144" [label="(Call,vmalloc_fault(address))"];
"1000139" [label="(Call,fault_in_kernel_space(address))"];
"1000114" [label="(MethodParameterIn,unsigned long address)"];
"1000281" [label="(Call,perf_sw_event(PERF_COUNT_SW_PAGE_FAULTS_MAJ, 1, 0,\n \t\t\t\t     regs, address))"];
"1000188" [label="(Call,find_vma(mm, address))"];
"1000144" [label="(Call,vmalloc_fault(address))"];
"1000335" [label="(Call,(void *) address)"];
"1000114" [label="(MethodParameterIn,unsigned long address)"];
"1000138" [label="(Call,unlikely(fault_in_kernel_space(address)))"];
"1000142" [label="(ControlStructure,if (vmalloc_fault(address) >= 0))"];
"1000246" [label="(Call,handle_mm_fault(mm, vma, address, writeaccess ? FAULT_FLAG_WRITE : 0))"];
"1000446" [label="(MethodReturn,asmlinkage void __kprobes)"];
"1000384" [label="(Call,address &= 0x003ff000)"];
"1000169" [label="(Call,perf_sw_event(PERF_COUNT_SW_PAGE_FAULTS, 1, 0, regs, address))"];
"1000196" [label="(Call,vma->vm_start <= address)"];
"1000140" [label="(Identifier,address)"];
"1000350" [label="(Call,handle_trapped_io(regs, address))"];
"1000211" [label="(Call,expand_stack(vma, address))"];
"1000361" [label="(Call,address < PAGE_SIZE)"];
"1000143" [label="(Call,vmalloc_fault(address) >= 0)"];
"1000150" [label="(Identifier,regs)"];
"1000139" [label="(Call,fault_in_kernel_space(address))"];
"1000365" [label="(Call,printk(\" at virtual address %08lx\n\", address))"];
"1000145" [label="(Identifier,address)"];
"1000147" [label="(Return,return;)"];
"1000433" [label="(Call,(void *)address)"];
"1000146" [label="(Literal,0)"];
"1000293" [label="(Call,perf_sw_event(PERF_COUNT_SW_PAGE_FAULTS_MIN, 1, 0,\n \t\t\t\t     regs, address))"];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000146"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000146" -> "1000143"  [label="AST: "];
"1000147" -> "1000143"  [label="CFG: "];
"1000150" -> "1000143"  [label="CFG: "];
"1000143" -> "1000446"  [label="DDG: vmalloc_fault(address)"];
"1000143" -> "1000446"  [label="DDG: vmalloc_fault(address) >= 0"];
"1000144" -> "1000143"  [label="DDG: address"];
"1000144" -> "1000145"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000146" -> "1000144"  [label="CFG: "];
"1000144" -> "1000446"  [label="DDG: address"];
"1000139" -> "1000144"  [label="DDG: address"];
"1000114" -> "1000144"  [label="DDG: address"];
"1000144" -> "1000335"  [label="DDG: address"];
"1000144" -> "1000350"  [label="DDG: address"];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000140"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000138" -> "1000139"  [label="CFG: "];
"1000139" -> "1000446"  [label="DDG: address"];
"1000139" -> "1000138"  [label="DDG: address"];
"1000114" -> "1000139"  [label="DDG: address"];
"1000139" -> "1000169"  [label="DDG: address"];
"1000114" -> "1000111"  [label="AST: "];
"1000114" -> "1000446"  [label="DDG: address"];
"1000114" -> "1000169"  [label="DDG: address"];
"1000114" -> "1000188"  [label="DDG: address"];
"1000114" -> "1000196"  [label="DDG: address"];
"1000114" -> "1000211"  [label="DDG: address"];
"1000114" -> "1000246"  [label="DDG: address"];
"1000114" -> "1000281"  [label="DDG: address"];
"1000114" -> "1000293"  [label="DDG: address"];
"1000114" -> "1000335"  [label="DDG: address"];
"1000114" -> "1000350"  [label="DDG: address"];
"1000114" -> "1000361"  [label="DDG: address"];
"1000114" -> "1000365"  [label="DDG: address"];
"1000114" -> "1000384"  [label="DDG: address"];
"1000114" -> "1000433"  [label="DDG: address"];
}
