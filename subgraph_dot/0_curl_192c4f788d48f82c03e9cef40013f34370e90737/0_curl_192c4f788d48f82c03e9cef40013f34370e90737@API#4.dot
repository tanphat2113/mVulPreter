digraph "0_curl_192c4f788d48f82c03e9cef40013f34370e90737@API" {
"1000127" [label="(Call,malloc(alloc))"];
"1000115" [label="(Call,alloc = (length?length:strlen(string))+1)"];
"1000109" [label="(MethodParameterIn,size_t length)"];
"1000121" [label="(Call,strlen(string))"];
"1000108" [label="(MethodParameterIn,const char *string)"];
"1000125" [label="(Call,*ns = malloc(alloc))"];
"1000137" [label="(Call,!ns)"];
"1000212" [label="(Call,free(ns))"];
"1000229" [label="(Call,free(ns))"];
"1000254" [label="(Call,*ostring = ns)"];
"1000143" [label="(Call,--alloc)"];
"1000142" [label="(Call,--alloc > 0)"];
"1000157" [label="(Call,alloc > 2)"];
"1000156" [label="(Call,(alloc > 2) &&\n       ISXDIGIT(string[1]) && ISXDIGIT(string[2]))"];
"1000152" [label="(Call,('%' == in) && (alloc > 2) &&\n       ISXDIGIT(string[1]) && ISXDIGIT(string[2]))"];
"1000219" [label="(Call,alloc-=2)"];
"1000160" [label="(Call,ISXDIGIT(string[1]) && ISXDIGIT(string[2]))"];
"1000157" [label="(Call,alloc > 2)"];
"1000219" [label="(Call,alloc-=2)"];
"1000224" [label="(Identifier,reject_ctrl)"];
"1000138" [label="(Identifier,ns)"];
"1000128" [label="(Identifier,alloc)"];
"1000116" [label="(Identifier,alloc)"];
"1000156" [label="(Call,(alloc > 2) &&\n       ISXDIGIT(string[1]) && ISXDIGIT(string[2]))"];
"1000243" [label="(Identifier,ns)"];
"1000158" [label="(Identifier,alloc)"];
"1000163" [label="(Identifier,string)"];
"1000255" [label="(Call,*ostring)"];
"1000161" [label="(Call,ISXDIGIT(string[1]))"];
"1000115" [label="(Call,alloc = (length?length:strlen(string))+1)"];
"1000215" [label="(Identifier,res)"];
"1000142" [label="(Call,--alloc > 0)"];
"1000257" [label="(Identifier,ns)"];
"1000127" [label="(Call,malloc(alloc))"];
"1000132" [label="(Identifier,strindex)"];
"1000122" [label="(Identifier,string)"];
"1000213" [label="(Identifier,ns)"];
"1000108" [label="(MethodParameterIn,const char *string)"];
"1000232" [label="(Identifier,CURLE_URL_MALFORMAT)"];
"1000169" [label="(Block,)"];
"1000179" [label="(Call,hexstr[1] = string[2])"];
"1000211" [label="(Block,)"];
"1000216" [label="(Call,string+=2)"];
"1000109" [label="(MethodParameterIn,size_t length)"];
"1000136" [label="(ControlStructure,if(!ns))"];
"1000125" [label="(Call,*ns = malloc(alloc))"];
"1000229" [label="(Call,free(ns))"];
"1000148" [label="(Identifier,in)"];
"1000165" [label="(Call,ISXDIGIT(string[2]))"];
"1000143" [label="(Call,--alloc)"];
"1000140" [label="(Identifier,CURLE_OUT_OF_MEMORY)"];
"1000254" [label="(Call,*ostring = ns)"];
"1000159" [label="(Literal,2)"];
"1000174" [label="(Identifier,hexstr)"];
"1000239" [label="(Call,string++)"];
"1000230" [label="(Identifier,ns)"];
"1000121" [label="(Call,strlen(string))"];
"1000260" [label="(MethodReturn,CURLcode)"];
"1000172" [label="(Call,hexstr[0] = string[1])"];
"1000113" [label="(Block,)"];
"1000141" [label="(ControlStructure,while(--alloc > 0))"];
"1000241" [label="(Call,ns[strindex]=0)"];
"1000233" [label="(Call,ns[strindex++] = in)"];
"1000220" [label="(Identifier,alloc)"];
"1000153" [label="(Call,'%' == in)"];
"1000151" [label="(ControlStructure,if(('%' == in) && (alloc > 2) &&\n       ISXDIGIT(string[1]) && ISXDIGIT(string[2])))"];
"1000126" [label="(Identifier,ns)"];
"1000259" [label="(Identifier,CURLE_OK)"];
"1000145" [label="(Literal,0)"];
"1000212" [label="(Call,free(ns))"];
"1000152" [label="(Call,('%' == in) && (alloc > 2) &&\n       ISXDIGIT(string[1]) && ISXDIGIT(string[2]))"];
"1000252" [label="(ControlStructure,if(ostring))"];
"1000221" [label="(Literal,2)"];
"1000228" [label="(Block,)"];
"1000118" [label="(Call,length?length:strlen(string))"];
"1000144" [label="(Identifier,alloc)"];
"1000137" [label="(Call,!ns)"];
"1000117" [label="(Call,(length?length:strlen(string))+1)"];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000127" -> "1000260"  [label="DDG: alloc"];
"1000127" -> "1000125"  [label="DDG: alloc"];
"1000115" -> "1000127"  [label="DDG: alloc"];
"1000127" -> "1000143"  [label="DDG: alloc"];
"1000115" -> "1000113"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000126" -> "1000115"  [label="CFG: "];
"1000115" -> "1000260"  [label="DDG: (length?length:strlen(string))+1"];
"1000109" -> "1000115"  [label="DDG: length"];
"1000121" -> "1000115"  [label="DDG: string"];
"1000109" -> "1000106"  [label="AST: "];
"1000109" -> "1000260"  [label="DDG: length"];
"1000109" -> "1000117"  [label="DDG: length"];
"1000109" -> "1000118"  [label="DDG: length"];
"1000121" -> "1000118"  [label="AST: "];
"1000121" -> "1000122"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000118" -> "1000121"  [label="CFG: "];
"1000121" -> "1000260"  [label="DDG: string"];
"1000121" -> "1000117"  [label="DDG: string"];
"1000121" -> "1000118"  [label="DDG: string"];
"1000108" -> "1000121"  [label="DDG: string"];
"1000121" -> "1000161"  [label="DDG: string"];
"1000121" -> "1000165"  [label="DDG: string"];
"1000121" -> "1000172"  [label="DDG: string"];
"1000121" -> "1000179"  [label="DDG: string"];
"1000121" -> "1000216"  [label="DDG: string"];
"1000121" -> "1000239"  [label="DDG: string"];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000260"  [label="DDG: string"];
"1000108" -> "1000161"  [label="DDG: string"];
"1000108" -> "1000165"  [label="DDG: string"];
"1000108" -> "1000172"  [label="DDG: string"];
"1000108" -> "1000179"  [label="DDG: string"];
"1000108" -> "1000216"  [label="DDG: string"];
"1000108" -> "1000239"  [label="DDG: string"];
"1000125" -> "1000113"  [label="AST: "];
"1000126" -> "1000125"  [label="AST: "];
"1000132" -> "1000125"  [label="CFG: "];
"1000125" -> "1000260"  [label="DDG: malloc(alloc)"];
"1000125" -> "1000137"  [label="DDG: ns"];
"1000137" -> "1000136"  [label="AST: "];
"1000137" -> "1000138"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000140" -> "1000137"  [label="CFG: "];
"1000144" -> "1000137"  [label="CFG: "];
"1000137" -> "1000260"  [label="DDG: ns"];
"1000137" -> "1000260"  [label="DDG: !ns"];
"1000137" -> "1000212"  [label="DDG: ns"];
"1000137" -> "1000229"  [label="DDG: ns"];
"1000137" -> "1000254"  [label="DDG: ns"];
"1000212" -> "1000211"  [label="AST: "];
"1000212" -> "1000213"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000215" -> "1000212"  [label="CFG: "];
"1000212" -> "1000260"  [label="DDG: ns"];
"1000233" -> "1000212"  [label="DDG: ns[strindex++]"];
"1000229" -> "1000228"  [label="AST: "];
"1000229" -> "1000230"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000232" -> "1000229"  [label="CFG: "];
"1000229" -> "1000260"  [label="DDG: ns"];
"1000233" -> "1000229"  [label="DDG: ns[strindex++]"];
"1000254" -> "1000252"  [label="AST: "];
"1000254" -> "1000257"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000257" -> "1000254"  [label="AST: "];
"1000259" -> "1000254"  [label="CFG: "];
"1000254" -> "1000260"  [label="DDG: ns"];
"1000254" -> "1000260"  [label="DDG: *ostring"];
"1000233" -> "1000254"  [label="DDG: ns[strindex++]"];
"1000241" -> "1000254"  [label="DDG: ns[strindex]"];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000144"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000145" -> "1000143"  [label="CFG: "];
"1000143" -> "1000260"  [label="DDG: alloc"];
"1000143" -> "1000142"  [label="DDG: alloc"];
"1000219" -> "1000143"  [label="DDG: alloc"];
"1000157" -> "1000143"  [label="DDG: alloc"];
"1000143" -> "1000157"  [label="DDG: alloc"];
"1000143" -> "1000219"  [label="DDG: alloc"];
"1000142" -> "1000141"  [label="AST: "];
"1000142" -> "1000145"  [label="CFG: "];
"1000145" -> "1000142"  [label="AST: "];
"1000148" -> "1000142"  [label="CFG: "];
"1000243" -> "1000142"  [label="CFG: "];
"1000142" -> "1000260"  [label="DDG: --alloc > 0"];
"1000157" -> "1000156"  [label="AST: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000163" -> "1000157"  [label="CFG: "];
"1000156" -> "1000157"  [label="CFG: "];
"1000157" -> "1000260"  [label="DDG: alloc"];
"1000157" -> "1000156"  [label="DDG: alloc"];
"1000157" -> "1000156"  [label="DDG: 2"];
"1000157" -> "1000219"  [label="DDG: alloc"];
"1000156" -> "1000152"  [label="AST: "];
"1000156" -> "1000160"  [label="CFG: "];
"1000160" -> "1000156"  [label="AST: "];
"1000152" -> "1000156"  [label="CFG: "];
"1000156" -> "1000260"  [label="DDG: alloc > 2"];
"1000156" -> "1000260"  [label="DDG: ISXDIGIT(string[1]) && ISXDIGIT(string[2])"];
"1000156" -> "1000152"  [label="DDG: alloc > 2"];
"1000156" -> "1000152"  [label="DDG: ISXDIGIT(string[1]) && ISXDIGIT(string[2])"];
"1000160" -> "1000156"  [label="DDG: ISXDIGIT(string[1])"];
"1000160" -> "1000156"  [label="DDG: ISXDIGIT(string[2])"];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000153"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000174" -> "1000152"  [label="CFG: "];
"1000224" -> "1000152"  [label="CFG: "];
"1000152" -> "1000260"  [label="DDG: ('%' == in) && (alloc > 2) &&\n       ISXDIGIT(string[1]) && ISXDIGIT(string[2])"];
"1000152" -> "1000260"  [label="DDG: '%' == in"];
"1000152" -> "1000260"  [label="DDG: (alloc > 2) &&\n       ISXDIGIT(string[1]) && ISXDIGIT(string[2])"];
"1000153" -> "1000152"  [label="DDG: '%'"];
"1000153" -> "1000152"  [label="DDG: in"];
"1000219" -> "1000169"  [label="AST: "];
"1000219" -> "1000221"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000221" -> "1000219"  [label="AST: "];
"1000224" -> "1000219"  [label="CFG: "];
"1000219" -> "1000260"  [label="DDG: alloc"];
}
