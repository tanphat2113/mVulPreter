digraph "0_optee_os_70697bf3c5dc3d201341b01a1a8e5bc6d2fb48f8@pointer" {
"1000353" [label="(Call,label_len = params[n].content.ref.length)"];
"1000374" [label="(Call,crypto_acipher_rsaes_encrypt(cs->algo, o->attr,\n\t\t\t\t\t\t\t   label, label_len,\n\t\t\t\t\t\t\t   src_data, src_len,\n\t\t\t\t\t\t\t   dst_data, &dlen))"];
"1000372" [label="(Call,res = crypto_acipher_rsaes_encrypt(cs->algo, o->attr,\n\t\t\t\t\t\t\t   label, label_len,\n\t\t\t\t\t\t\t   src_data, src_len,\n\t\t\t\t\t\t\t   dst_data, &dlen))"];
"1000511" [label="(Call,res == TEE_SUCCESS)"];
"1000510" [label="(Call,res == TEE_SUCCESS || res == TEE_ERROR_SHORT_BUFFER)"];
"1000514" [label="(Call,res == TEE_ERROR_SHORT_BUFFER)"];
"1000537" [label="(Return,return res;)"];
"1000532" [label="(Call,res2 != TEE_SUCCESS)"];
"1000535" [label="(Return,return res2;)"];
"1000398" [label="(Call,crypto_acipher_rsaes_decrypt(\n\t\t\t\t\tcs->algo, o->attr, label, label_len,\n\t\t\t\t\tsrc_data, src_len, dst_data, &dlen))"];
"1000396" [label="(Call,res = crypto_acipher_rsaes_decrypt(\n\t\t\t\t\tcs->algo, o->attr, label, label_len,\n\t\t\t\t\tsrc_data, src_len, dst_data, &dlen))"];
"1000105" [label="(MethodParameterIn,const void *src_data)"];
"1000249" [label="(Call,res != TEE_SUCCESS)"];
"1000386" [label="(Call,&dlen)"];
"1000539" [label="(MethodReturn,TEE_Result)"];
"1000300" [label="(Call,res = crypto_acipher_rsanopad_decrypt(o->attr, src_data,\n\t\t\t\t\t\t\t      src_len, dst_data,\n\t\t\t\t\t\t\t      &dlen))"];
"1000414" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000514" [label="(Call,res == TEE_ERROR_SHORT_BUFFER)"];
"1000516" [label="(Identifier,TEE_ERROR_SHORT_BUFFER)"];
"1000417" [label="(ControlStructure,break;)"];
"1000398" [label="(Call,crypto_acipher_rsaes_decrypt(\n\t\t\t\t\tcs->algo, o->attr, label, label_len,\n\t\t\t\t\tsrc_data, src_len, dst_data, &dlen))"];
"1000486" [label="(Call,res = crypto_acipher_ecc_sign(cs->algo, o->attr, src_data,\n\t\t\t\t\t      src_len, dst_data, &dlen))"];
"1000372" [label="(Call,res = crypto_acipher_rsaes_encrypt(cs->algo, o->attr,\n\t\t\t\t\t\t\t   label, label_len,\n\t\t\t\t\t\t\t   src_data, src_len,\n\t\t\t\t\t\t\t   dst_data, &dlen))"];
"1000235" [label="(Call,res != TEE_SUCCESS)"];
"1000354" [label="(Identifier,label_len)"];
"1000353" [label="(Call,label_len = params[n].content.ref.length)"];
"1000510" [label="(Call,res == TEE_SUCCESS || res == TEE_ERROR_SHORT_BUFFER)"];
"1000383" [label="(Identifier,src_data)"];
"1000342" [label="(Call,label = params[n].content.ref.buffer)"];
"1000515" [label="(Identifier,res)"];
"1000382" [label="(Identifier,label_len)"];
"1000355" [label="(Call,params[n].content.ref.length)"];
"1000164" [label="(Call,tee_mmu_check_access_rights(\n\t\tutc,\n\t\tTEE_MEMORY_ACCESS_READ | TEE_MEMORY_ACCESS_ANY_OWNER,\n\t\t(uaddr_t) src_data, src_len))"];
"1000364" [label="(ControlStructure,break;)"];
"1000408" [label="(Identifier,src_len)"];
"1000395" [label="(Block,)"];
"1000531" [label="(ControlStructure,if (res2 != TEE_SUCCESS))"];
"1000385" [label="(Identifier,dst_data)"];
"1000374" [label="(Call,crypto_acipher_rsaes_encrypt(cs->algo, o->attr,\n\t\t\t\t\t\t\t   label, label_len,\n\t\t\t\t\t\t\t   src_data, src_len,\n\t\t\t\t\t\t\t   dst_data, &dlen))"];
"1000381" [label="(Identifier,label)"];
"1000406" [label="(Identifier,label_len)"];
"1000399" [label="(Call,cs->algo)"];
"1000509" [label="(ControlStructure,if (res == TEE_SUCCESS || res == TEE_ERROR_SHORT_BUFFER))"];
"1000522" [label="(Call,res2 = tee_svc_copy_to_user(dst_len, &dlen64, sizeof(*dst_len)))"];
"1000537" [label="(Return,return res;)"];
"1000536" [label="(Identifier,res2)"];
"1000410" [label="(Call,&dlen)"];
"1000281" [label="(Call,res = crypto_acipher_rsanopad_encrypt(o->attr, src_data,\n\t\t\t\t\t\t\t      src_len, dst_data,\n\t\t\t\t\t\t\t      &dlen))"];
"1000378" [label="(Call,o->attr)"];
"1000373" [label="(Identifier,res)"];
"1000117" [label="(Call,*label = NULL)"];
"1000502" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000511" [label="(Call,res == TEE_SUCCESS)"];
"1000520" [label="(Identifier,dlen64)"];
"1000384" [label="(Identifier,src_len)"];
"1000512" [label="(Identifier,res)"];
"1000535" [label="(Return,return res2;)"];
"1000396" [label="(Call,res = crypto_acipher_rsaes_decrypt(\n\t\t\t\t\tcs->algo, o->attr, label, label_len,\n\t\t\t\t\tsrc_data, src_len, dst_data, &dlen))"];
"1000405" [label="(Identifier,label)"];
"1000109" [label="(Block,)"];
"1000533" [label="(Identifier,res2)"];
"1000402" [label="(Call,o->attr)"];
"1000375" [label="(Call,cs->algo)"];
"1000341" [label="(Block,)"];
"1000106" [label="(MethodParameterIn,size_t src_len)"];
"1000437" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000169" [label="(Call,(uaddr_t) src_data)"];
"1000466" [label="(Call,res = crypto_acipher_dsa_sign(cs->algo, o->attr, src_data,\n\t\t\t\t\t      src_len, dst_data, &dlen))"];
"1000447" [label="(Call,res = crypto_acipher_rsassa_sign(cs->algo, o->attr, salt_len,\n\t\t\t\t\t\t src_data, src_len, dst_data,\n\t\t\t\t\t\t &dlen))"];
"1000397" [label="(Identifier,res)"];
"1000538" [label="(Identifier,res)"];
"1000264" [label="(Call,res = TEE_ERROR_GENERIC)"];
"1000205" [label="(Call,(uaddr_t) dst_data)"];
"1000107" [label="(MethodParameterIn,void *dst_data)"];
"1000532" [label="(Call,res2 != TEE_SUCCESS)"];
"1000371" [label="(Block,)"];
"1000313" [label="(Call,res = TEE_ERROR_GENERIC)"];
"1000407" [label="(Identifier,src_data)"];
"1000121" [label="(Call,label_len = 0)"];
"1000409" [label="(Identifier,dst_data)"];
"1000513" [label="(Identifier,TEE_SUCCESS)"];
"1000534" [label="(Identifier,TEE_SUCCESS)"];
"1000353" -> "1000341"  [label="AST: "];
"1000353" -> "1000355"  [label="CFG: "];
"1000354" -> "1000353"  [label="AST: "];
"1000355" -> "1000353"  [label="AST: "];
"1000364" -> "1000353"  [label="CFG: "];
"1000353" -> "1000539"  [label="DDG: label_len"];
"1000353" -> "1000539"  [label="DDG: params[n].content.ref.length"];
"1000353" -> "1000374"  [label="DDG: label_len"];
"1000353" -> "1000398"  [label="DDG: label_len"];
"1000374" -> "1000372"  [label="AST: "];
"1000374" -> "1000386"  [label="CFG: "];
"1000375" -> "1000374"  [label="AST: "];
"1000378" -> "1000374"  [label="AST: "];
"1000381" -> "1000374"  [label="AST: "];
"1000382" -> "1000374"  [label="AST: "];
"1000383" -> "1000374"  [label="AST: "];
"1000384" -> "1000374"  [label="AST: "];
"1000385" -> "1000374"  [label="AST: "];
"1000386" -> "1000374"  [label="AST: "];
"1000372" -> "1000374"  [label="CFG: "];
"1000374" -> "1000539"  [label="DDG: cs->algo"];
"1000374" -> "1000539"  [label="DDG: src_data"];
"1000374" -> "1000539"  [label="DDG: src_len"];
"1000374" -> "1000539"  [label="DDG: o->attr"];
"1000374" -> "1000539"  [label="DDG: label_len"];
"1000374" -> "1000539"  [label="DDG: &dlen"];
"1000374" -> "1000539"  [label="DDG: label"];
"1000374" -> "1000539"  [label="DDG: dst_data"];
"1000374" -> "1000372"  [label="DDG: label_len"];
"1000374" -> "1000372"  [label="DDG: cs->algo"];
"1000374" -> "1000372"  [label="DDG: dst_data"];
"1000374" -> "1000372"  [label="DDG: src_data"];
"1000374" -> "1000372"  [label="DDG: o->attr"];
"1000374" -> "1000372"  [label="DDG: &dlen"];
"1000374" -> "1000372"  [label="DDG: src_len"];
"1000374" -> "1000372"  [label="DDG: label"];
"1000342" -> "1000374"  [label="DDG: label"];
"1000117" -> "1000374"  [label="DDG: label"];
"1000121" -> "1000374"  [label="DDG: label_len"];
"1000169" -> "1000374"  [label="DDG: src_data"];
"1000105" -> "1000374"  [label="DDG: src_data"];
"1000164" -> "1000374"  [label="DDG: src_len"];
"1000106" -> "1000374"  [label="DDG: src_len"];
"1000205" -> "1000374"  [label="DDG: dst_data"];
"1000107" -> "1000374"  [label="DDG: dst_data"];
"1000372" -> "1000371"  [label="AST: "];
"1000373" -> "1000372"  [label="AST: "];
"1000417" -> "1000372"  [label="CFG: "];
"1000372" -> "1000539"  [label="DDG: crypto_acipher_rsaes_encrypt(cs->algo, o->attr,\n\t\t\t\t\t\t\t   label, label_len,\n\t\t\t\t\t\t\t   src_data, src_len,\n\t\t\t\t\t\t\t   dst_data, &dlen)"];
"1000372" -> "1000511"  [label="DDG: res"];
"1000511" -> "1000510"  [label="AST: "];
"1000511" -> "1000513"  [label="CFG: "];
"1000512" -> "1000511"  [label="AST: "];
"1000513" -> "1000511"  [label="AST: "];
"1000515" -> "1000511"  [label="CFG: "];
"1000510" -> "1000511"  [label="CFG: "];
"1000511" -> "1000539"  [label="DDG: TEE_SUCCESS"];
"1000511" -> "1000539"  [label="DDG: res"];
"1000511" -> "1000510"  [label="DDG: res"];
"1000511" -> "1000510"  [label="DDG: TEE_SUCCESS"];
"1000396" -> "1000511"  [label="DDG: res"];
"1000281" -> "1000511"  [label="DDG: res"];
"1000235" -> "1000511"  [label="DDG: res"];
"1000235" -> "1000511"  [label="DDG: TEE_SUCCESS"];
"1000502" -> "1000511"  [label="DDG: res"];
"1000466" -> "1000511"  [label="DDG: res"];
"1000300" -> "1000511"  [label="DDG: res"];
"1000414" -> "1000511"  [label="DDG: res"];
"1000313" -> "1000511"  [label="DDG: res"];
"1000486" -> "1000511"  [label="DDG: res"];
"1000264" -> "1000511"  [label="DDG: res"];
"1000437" -> "1000511"  [label="DDG: res"];
"1000447" -> "1000511"  [label="DDG: res"];
"1000249" -> "1000511"  [label="DDG: res"];
"1000249" -> "1000511"  [label="DDG: TEE_SUCCESS"];
"1000511" -> "1000514"  [label="DDG: res"];
"1000511" -> "1000532"  [label="DDG: TEE_SUCCESS"];
"1000511" -> "1000537"  [label="DDG: res"];
"1000510" -> "1000509"  [label="AST: "];
"1000510" -> "1000514"  [label="CFG: "];
"1000514" -> "1000510"  [label="AST: "];
"1000520" -> "1000510"  [label="CFG: "];
"1000538" -> "1000510"  [label="CFG: "];
"1000510" -> "1000539"  [label="DDG: res == TEE_ERROR_SHORT_BUFFER"];
"1000510" -> "1000539"  [label="DDG: res == TEE_SUCCESS"];
"1000510" -> "1000539"  [label="DDG: res == TEE_SUCCESS || res == TEE_ERROR_SHORT_BUFFER"];
"1000514" -> "1000510"  [label="DDG: res"];
"1000514" -> "1000510"  [label="DDG: TEE_ERROR_SHORT_BUFFER"];
"1000514" -> "1000516"  [label="CFG: "];
"1000515" -> "1000514"  [label="AST: "];
"1000516" -> "1000514"  [label="AST: "];
"1000514" -> "1000539"  [label="DDG: res"];
"1000514" -> "1000539"  [label="DDG: TEE_ERROR_SHORT_BUFFER"];
"1000514" -> "1000537"  [label="DDG: res"];
"1000537" -> "1000109"  [label="AST: "];
"1000537" -> "1000538"  [label="CFG: "];
"1000538" -> "1000537"  [label="AST: "];
"1000539" -> "1000537"  [label="CFG: "];
"1000537" -> "1000539"  [label="DDG: <RET>"];
"1000538" -> "1000537"  [label="DDG: res"];
"1000532" -> "1000531"  [label="AST: "];
"1000532" -> "1000534"  [label="CFG: "];
"1000533" -> "1000532"  [label="AST: "];
"1000534" -> "1000532"  [label="AST: "];
"1000536" -> "1000532"  [label="CFG: "];
"1000538" -> "1000532"  [label="CFG: "];
"1000532" -> "1000539"  [label="DDG: res2"];
"1000532" -> "1000539"  [label="DDG: TEE_SUCCESS"];
"1000532" -> "1000539"  [label="DDG: res2 != TEE_SUCCESS"];
"1000522" -> "1000532"  [label="DDG: res2"];
"1000532" -> "1000535"  [label="DDG: res2"];
"1000535" -> "1000531"  [label="AST: "];
"1000535" -> "1000536"  [label="CFG: "];
"1000536" -> "1000535"  [label="AST: "];
"1000539" -> "1000535"  [label="CFG: "];
"1000535" -> "1000539"  [label="DDG: <RET>"];
"1000536" -> "1000535"  [label="DDG: res2"];
"1000398" -> "1000396"  [label="AST: "];
"1000398" -> "1000410"  [label="CFG: "];
"1000399" -> "1000398"  [label="AST: "];
"1000402" -> "1000398"  [label="AST: "];
"1000405" -> "1000398"  [label="AST: "];
"1000406" -> "1000398"  [label="AST: "];
"1000407" -> "1000398"  [label="AST: "];
"1000408" -> "1000398"  [label="AST: "];
"1000409" -> "1000398"  [label="AST: "];
"1000410" -> "1000398"  [label="AST: "];
"1000396" -> "1000398"  [label="CFG: "];
"1000398" -> "1000539"  [label="DDG: label"];
"1000398" -> "1000539"  [label="DDG: dst_data"];
"1000398" -> "1000539"  [label="DDG: o->attr"];
"1000398" -> "1000539"  [label="DDG: src_data"];
"1000398" -> "1000539"  [label="DDG: src_len"];
"1000398" -> "1000539"  [label="DDG: &dlen"];
"1000398" -> "1000539"  [label="DDG: label_len"];
"1000398" -> "1000539"  [label="DDG: cs->algo"];
"1000398" -> "1000396"  [label="DDG: dst_data"];
"1000398" -> "1000396"  [label="DDG: &dlen"];
"1000398" -> "1000396"  [label="DDG: src_len"];
"1000398" -> "1000396"  [label="DDG: o->attr"];
"1000398" -> "1000396"  [label="DDG: label"];
"1000398" -> "1000396"  [label="DDG: src_data"];
"1000398" -> "1000396"  [label="DDG: label_len"];
"1000398" -> "1000396"  [label="DDG: cs->algo"];
"1000342" -> "1000398"  [label="DDG: label"];
"1000117" -> "1000398"  [label="DDG: label"];
"1000121" -> "1000398"  [label="DDG: label_len"];
"1000169" -> "1000398"  [label="DDG: src_data"];
"1000105" -> "1000398"  [label="DDG: src_data"];
"1000164" -> "1000398"  [label="DDG: src_len"];
"1000106" -> "1000398"  [label="DDG: src_len"];
"1000205" -> "1000398"  [label="DDG: dst_data"];
"1000107" -> "1000398"  [label="DDG: dst_data"];
"1000396" -> "1000395"  [label="AST: "];
"1000397" -> "1000396"  [label="AST: "];
"1000417" -> "1000396"  [label="CFG: "];
"1000396" -> "1000539"  [label="DDG: crypto_acipher_rsaes_decrypt(\n\t\t\t\t\tcs->algo, o->attr, label, label_len,\n\t\t\t\t\tsrc_data, src_len, dst_data, &dlen)"];
}
