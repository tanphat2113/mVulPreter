digraph "0_libarchive_5562545b5562f6d12a4ef991fae158bf4ccf92b6@API" {
"1000169" [label="(Call,rar->sconv_default =\n          archive_string_default_conversion_for_read(\n            &(a->archive)))"];
"1000173" [label="(Call,archive_string_default_conversion_for_read(\n            &(a->archive)))"];
"1000183" [label="(Call,sconv = rar->sconv_default)"];
"1001060" [label="(Call,fn_sconv = sconv)"];
"1001661" [label="(Call,archive_entry_copy_pathname_l(entry, filename, filename_size, fn_sconv))"];
"1001688" [label="(Call,archive_string_conversion_charset_name(fn_sconv))"];
"1001681" [label="(Call,archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,\n                      \"Pathname cannot be converted from %s to current locale.\",\n                      archive_string_conversion_charset_name(fn_sconv)))"];
"1001707" [label="(Call,archive_entry_set_size(entry, 0))"];
"1001714" [label="(Call,read_symlink_stored(a, entry, sconv))"];
"1001711" [label="(Call,(ret2 = read_symlink_stored(a, entry, sconv)) < (ARCHIVE_WARN))"];
"1001712" [label="(Call,ret2 = read_symlink_stored(a, entry, sconv))"];
"1001719" [label="(Return,return ret2;)"];
"1001722" [label="(Call,ret > ret2)"];
"1001725" [label="(Call,ret = ret2)"];
"1001739" [label="(Return,return ret;)"];
"1000400" [label="(Call,archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,\n      \"Header CRC error\"))"];
"1001383" [label="(Call,archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,\n        \"Invalid header size\"))"];
"1001682" [label="(Call,&a->archive)"];
"1001726" [label="(Identifier,ret)"];
"1000118" [label="(MethodParameterIn,struct archive_read *a)"];
"1001688" [label="(Call,archive_string_conversion_charset_name(fn_sconv))"];
"1000963" [label="(Call,archive_string_conversion_from_charset(\n           &a->archive, \"UTF-16BE\", 1))"];
"1001144" [label="(Call,archive_set_error(&a->archive, ENOMEM, \"Couldn't allocate memory.\"))"];
"1001697" [label="(Identifier,rar)"];
"1000704" [label="(Call,filename[filename_size] = '\0')"];
"1000183" [label="(Call,sconv = rar->sconv_default)"];
"1001723" [label="(Identifier,ret)"];
"1001666" [label="(Block,)"];
"1001701" [label="(Block,)"];
"1000978" [label="(Call,fn_sconv = rar->sconv_utf16be)"];
"1000676" [label="(Call,archive_set_error(&a->archive, ENOMEM,\n                        \"Couldn't allocate memory.\"))"];
"1000180" [label="(Identifier,rar)"];
"1001493" [label="(Call,archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,\n                      \"Unknown file attributes from RAR file's host OS\"))"];
"1000743" [label="(Call,strlen(filename))"];
"1000185" [label="(Call,rar->sconv_default)"];
"1001023" [label="(Call,archive_string_conversion_from_charset(\n           &a->archive, \"UTF-8\", 1))"];
"1000700" [label="(Call,memcpy(filename, p, filename_size))"];
"1000560" [label="(Call,archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,\n                      \"Invalid sizes specified.\"))"];
"1000173" [label="(Call,archive_string_default_conversion_for_read(\n            &(a->archive)))"];
"1001288" [label="(Call,archive_set_error(&a->archive, ENOMEM, \"Couldn't allocate memory.\"))"];
"1001689" [label="(Identifier,fn_sconv)"];
"1000168" [label="(Block,)"];
"1001690" [label="(Call,ret = (ARCHIVE_WARN))"];
"1001066" [label="(Identifier,strp)"];
"1001720" [label="(Identifier,ret2)"];
"1000119" [label="(MethodParameterIn,struct archive_entry *entry)"];
"1000159" [label="(Call,sconv == NULL)"];
"1000191" [label="(Identifier,h)"];
"1000140" [label="(Call,ret = (ARCHIVE_OK))"];
"1001725" [label="(Call,ret = ret2)"];
"1000162" [label="(Block,)"];
"1001060" [label="(Call,fn_sconv = sconv)"];
"1001062" [label="(Identifier,sconv)"];
"1001721" [label="(ControlStructure,if (ret > ret2))"];
"1001715" [label="(Identifier,a)"];
"1001707" [label="(Call,archive_entry_set_size(entry, 0))"];
"1001717" [label="(Identifier,sconv)"];
"1001724" [label="(Identifier,ret2)"];
"1001731" [label="(Identifier,rar)"];
"1001662" [label="(Identifier,entry)"];
"1000635" [label="(Call,archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,\n      \"Invalid filename size\"))"];
"1000232" [label="(Call,archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,\n      \"Invalid header size\"))"];
"1001047" [label="(Call,strchr(filename, '\\'))"];
"1001392" [label="(Call,__archive_read_consume(a, header_size - 7))"];
"1000169" [label="(Call,rar->sconv_default =\n          archive_string_default_conversion_for_read(\n            &(a->archive)))"];
"1001739" [label="(Return,return ret;)"];
"1001665" [label="(Identifier,fn_sconv)"];
"1000184" [label="(Identifier,sconv)"];
"1001719" [label="(Return,return ret2;)"];
"1001708" [label="(Identifier,entry)"];
"1001727" [label="(Identifier,ret2)"];
"1001061" [label="(Identifier,fn_sconv)"];
"1001710" [label="(ControlStructure,if ((ret2 = read_symlink_stored(a, entry, sconv)) < (ARCHIVE_WARN)))"];
"1001714" [label="(Call,read_symlink_stored(a, entry, sconv))"];
"1001681" [label="(Call,archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,\n                      \"Pathname cannot be converted from %s to current locale.\",\n                      archive_string_conversion_charset_name(fn_sconv)))"];
"1001718" [label="(Identifier,ARCHIVE_WARN)"];
"1001711" [label="(Call,(ret2 = read_symlink_stored(a, entry, sconv)) < (ARCHIVE_WARN))"];
"1000170" [label="(Call,rar->sconv_default)"];
"1000121" [label="(Block,)"];
"1001067" [label="(Call,strchr(filename, '\\'))"];
"1001740" [label="(Identifier,ret)"];
"1001716" [label="(Identifier,entry)"];
"1001712" [label="(Call,ret2 = read_symlink_stored(a, entry, sconv))"];
"1001741" [label="(MethodReturn,RET)"];
"1001686" [label="(Identifier,ARCHIVE_ERRNO_FILE_FORMAT)"];
"1000471" [label="(Call,archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,\n                      \"RAR encryption support unavailable.\"))"];
"1001713" [label="(Identifier,ret2)"];
"1001660" [label="(ControlStructure,if (archive_entry_copy_pathname_l(entry, filename, filename_size, fn_sconv)))"];
"1001687" [label="(Literal,\"Pathname cannot be converted from %s to current locale.\")"];
"1001661" [label="(Call,archive_entry_copy_pathname_l(entry, filename, filename_size, fn_sconv))"];
"1001664" [label="(Identifier,filename_size)"];
"1000932" [label="(Call,archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,\n          \"Invalid filename\"))"];
"1001691" [label="(Identifier,ret)"];
"1001350" [label="(Call,archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,\n        \"Invalid header size\"))"];
"1000941" [label="(Call,filename[filename_size++] = '\0')"];
"1000174" [label="(Call,&(a->archive))"];
"1001059" [label="(Block,)"];
"1000944" [label="(Call,filename_size++)"];
"1001722" [label="(Call,ret > ret2)"];
"1001669" [label="(Identifier,errno)"];
"1001672" [label="(Call,archive_set_error(&a->archive, ENOMEM,\n                        \"Can't allocate memory for Pathname\"))"];
"1000947" [label="(Call,filename[filename_size] = '\0')"];
"1001038" [label="(Call,fn_sconv = rar->sconv_utf8)"];
"1000717" [label="(Call,filename_size != strlen(filename))"];
"1000356" [label="(Call,archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,\n                      \"RAR solid archive support unavailable.\"))"];
"1001655" [label="(Call,archive_entry_set_mode(entry, rar->mode))"];
"1001709" [label="(Literal,0)"];
"1001084" [label="(Call,filename_size == rar->filename_save_size)"];
"1001663" [label="(Identifier,filename)"];
"1000169" -> "1000168"  [label="AST: "];
"1000169" -> "1000173"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000173" -> "1000169"  [label="AST: "];
"1000180" -> "1000169"  [label="CFG: "];
"1000169" -> "1001741"  [label="DDG: "];
"1000173" -> "1000169"  [label="DDG: "];
"1000169" -> "1000183"  [label="DDG: "];
"1000173" -> "1000174"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000173" -> "1001741"  [label="DDG: "];
"1000173" -> "1000232"  [label="DDG: "];
"1000173" -> "1000356"  [label="DDG: "];
"1000173" -> "1000400"  [label="DDG: "];
"1000173" -> "1000471"  [label="DDG: "];
"1000173" -> "1000560"  [label="DDG: "];
"1000173" -> "1000635"  [label="DDG: "];
"1000173" -> "1000676"  [label="DDG: "];
"1000173" -> "1000932"  [label="DDG: "];
"1000173" -> "1000963"  [label="DDG: "];
"1000173" -> "1001023"  [label="DDG: "];
"1000173" -> "1001144"  [label="DDG: "];
"1000173" -> "1001288"  [label="DDG: "];
"1000173" -> "1001350"  [label="DDG: "];
"1000173" -> "1001383"  [label="DDG: "];
"1000173" -> "1001493"  [label="DDG: "];
"1000173" -> "1001672"  [label="DDG: "];
"1000173" -> "1001681"  [label="DDG: "];
"1000183" -> "1000162"  [label="AST: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000185" -> "1000183"  [label="AST: "];
"1000191" -> "1000183"  [label="CFG: "];
"1000183" -> "1001741"  [label="DDG: "];
"1000183" -> "1001741"  [label="DDG: "];
"1000183" -> "1001060"  [label="DDG: "];
"1000183" -> "1001714"  [label="DDG: "];
"1001060" -> "1001059"  [label="AST: "];
"1001060" -> "1001062"  [label="CFG: "];
"1001061" -> "1001060"  [label="AST: "];
"1001062" -> "1001060"  [label="AST: "];
"1001066" -> "1001060"  [label="CFG: "];
"1001060" -> "1001741"  [label="DDG: "];
"1001060" -> "1001741"  [label="DDG: "];
"1000159" -> "1001060"  [label="DDG: "];
"1001060" -> "1001661"  [label="DDG: "];
"1001661" -> "1001660"  [label="AST: "];
"1001661" -> "1001665"  [label="CFG: "];
"1001662" -> "1001661"  [label="AST: "];
"1001663" -> "1001661"  [label="AST: "];
"1001664" -> "1001661"  [label="AST: "];
"1001665" -> "1001661"  [label="AST: "];
"1001669" -> "1001661"  [label="CFG: "];
"1001697" -> "1001661"  [label="CFG: "];
"1001661" -> "1001741"  [label="DDG: "];
"1001661" -> "1001741"  [label="DDG: "];
"1001661" -> "1001741"  [label="DDG: "];
"1001661" -> "1001741"  [label="DDG: "];
"1001661" -> "1001741"  [label="DDG: "];
"1001655" -> "1001661"  [label="DDG: "];
"1000119" -> "1001661"  [label="DDG: "];
"1000941" -> "1001661"  [label="DDG: "];
"1001047" -> "1001661"  [label="DDG: "];
"1000947" -> "1001661"  [label="DDG: "];
"1000704" -> "1001661"  [label="DDG: "];
"1001067" -> "1001661"  [label="DDG: "];
"1000743" -> "1001661"  [label="DDG: "];
"1000944" -> "1001661"  [label="DDG: "];
"1001084" -> "1001661"  [label="DDG: "];
"1000717" -> "1001661"  [label="DDG: "];
"1000700" -> "1001661"  [label="DDG: "];
"1000978" -> "1001661"  [label="DDG: "];
"1001038" -> "1001661"  [label="DDG: "];
"1001661" -> "1001688"  [label="DDG: "];
"1001661" -> "1001707"  [label="DDG: "];
"1001688" -> "1001681"  [label="AST: "];
"1001688" -> "1001689"  [label="CFG: "];
"1001689" -> "1001688"  [label="AST: "];
"1001681" -> "1001688"  [label="CFG: "];
"1001688" -> "1001741"  [label="DDG: "];
"1001688" -> "1001681"  [label="DDG: "];
"1001681" -> "1001666"  [label="AST: "];
"1001682" -> "1001681"  [label="AST: "];
"1001686" -> "1001681"  [label="AST: "];
"1001687" -> "1001681"  [label="AST: "];
"1001691" -> "1001681"  [label="CFG: "];
"1001681" -> "1001741"  [label="DDG: "];
"1001681" -> "1001741"  [label="DDG: "];
"1001681" -> "1001741"  [label="DDG: "];
"1001681" -> "1001741"  [label="DDG: "];
"1001023" -> "1001681"  [label="DDG: "];
"1000471" -> "1001681"  [label="DDG: "];
"1000471" -> "1001681"  [label="DDG: "];
"1000963" -> "1001681"  [label="DDG: "];
"1001707" -> "1001701"  [label="AST: "];
"1001707" -> "1001709"  [label="CFG: "];
"1001708" -> "1001707"  [label="AST: "];
"1001709" -> "1001707"  [label="AST: "];
"1001713" -> "1001707"  [label="CFG: "];
"1001707" -> "1001741"  [label="DDG: "];
"1000119" -> "1001707"  [label="DDG: "];
"1001707" -> "1001714"  [label="DDG: "];
"1001714" -> "1001712"  [label="AST: "];
"1001714" -> "1001717"  [label="CFG: "];
"1001715" -> "1001714"  [label="AST: "];
"1001716" -> "1001714"  [label="AST: "];
"1001717" -> "1001714"  [label="AST: "];
"1001712" -> "1001714"  [label="CFG: "];
"1001714" -> "1001741"  [label="DDG: "];
"1001714" -> "1001741"  [label="DDG: "];
"1001714" -> "1001741"  [label="DDG: "];
"1001714" -> "1001711"  [label="DDG: "];
"1001714" -> "1001711"  [label="DDG: "];
"1001714" -> "1001711"  [label="DDG: "];
"1001714" -> "1001712"  [label="DDG: "];
"1001714" -> "1001712"  [label="DDG: "];
"1001714" -> "1001712"  [label="DDG: "];
"1001392" -> "1001714"  [label="DDG: "];
"1000118" -> "1001714"  [label="DDG: "];
"1000119" -> "1001714"  [label="DDG: "];
"1000159" -> "1001714"  [label="DDG: "];
"1001711" -> "1001710"  [label="AST: "];
"1001711" -> "1001718"  [label="CFG: "];
"1001712" -> "1001711"  [label="AST: "];
"1001718" -> "1001711"  [label="AST: "];
"1001720" -> "1001711"  [label="CFG: "];
"1001723" -> "1001711"  [label="CFG: "];
"1001711" -> "1001741"  [label="DDG: "];
"1001711" -> "1001741"  [label="DDG: "];
"1001712" -> "1001711"  [label="DDG: "];
"1001713" -> "1001712"  [label="AST: "];
"1001718" -> "1001712"  [label="CFG: "];
"1001712" -> "1001741"  [label="DDG: "];
"1001712" -> "1001741"  [label="DDG: "];
"1001712" -> "1001719"  [label="DDG: "];
"1001712" -> "1001722"  [label="DDG: "];
"1001719" -> "1001710"  [label="AST: "];
"1001719" -> "1001720"  [label="CFG: "];
"1001720" -> "1001719"  [label="AST: "];
"1001741" -> "1001719"  [label="CFG: "];
"1001719" -> "1001741"  [label="DDG: "];
"1001720" -> "1001719"  [label="DDG: "];
"1001722" -> "1001721"  [label="AST: "];
"1001722" -> "1001724"  [label="CFG: "];
"1001723" -> "1001722"  [label="AST: "];
"1001724" -> "1001722"  [label="AST: "];
"1001726" -> "1001722"  [label="CFG: "];
"1001731" -> "1001722"  [label="CFG: "];
"1001722" -> "1001741"  [label="DDG: "];
"1001722" -> "1001741"  [label="DDG: "];
"1001722" -> "1001741"  [label="DDG: "];
"1001690" -> "1001722"  [label="DDG: "];
"1000140" -> "1001722"  [label="DDG: "];
"1001722" -> "1001725"  [label="DDG: "];
"1001722" -> "1001739"  [label="DDG: "];
"1001725" -> "1001721"  [label="AST: "];
"1001725" -> "1001727"  [label="CFG: "];
"1001726" -> "1001725"  [label="AST: "];
"1001727" -> "1001725"  [label="AST: "];
"1001731" -> "1001725"  [label="CFG: "];
"1001725" -> "1001741"  [label="DDG: "];
"1001725" -> "1001741"  [label="DDG: "];
"1001725" -> "1001739"  [label="DDG: "];
"1001739" -> "1000121"  [label="AST: "];
"1001739" -> "1001740"  [label="CFG: "];
"1001740" -> "1001739"  [label="AST: "];
"1001741" -> "1001739"  [label="CFG: "];
"1001739" -> "1001741"  [label="DDG: "];
"1001740" -> "1001739"  [label="DDG: "];
"1000140" -> "1001739"  [label="DDG: "];
"1001690" -> "1001739"  [label="DDG: "];
}
