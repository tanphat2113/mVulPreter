digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_17@API" {
"1000180" [label="(Call,memcpy(newnp, np, sizeof(struct ipv6_pinfo)))"];
"1000172" [label="(Call,newnp = inet6_sk(newsk))"];
"1000174" [label="(Call,inet6_sk(newsk))"];
"1000170" [label="(Call,inet_sk(newsk))"];
"1000161" [label="(Call,inet_sk(newsk))"];
"1000156" [label="(Call,(struct tcp6_sock *)newsk)"];
"1000150" [label="(Call,!newsk)"];
"1000140" [label="(Call,newsk = tcp_v4_syn_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t     req_unhash, own_req))"];
"1000142" [label="(Call,tcp_v4_syn_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t     req_unhash, own_req))"];
"1000123" [label="(Call,inet6_sk(sk))"];
"1000111" [label="(MethodParameterIn,const struct sock *sk)"];
"1000112" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000113" [label="(MethodParameterIn,struct request_sock *req)"];
"1000114" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000115" [label="(MethodParameterIn,struct request_sock *req_unhash)"];
"1000116" [label="(MethodParameterIn,bool *own_req)"];
"1000121" [label="(Call,*np = inet6_sk(sk))"];
"1000153" [label="(Identifier,NULL)"];
"1000646" [label="(MethodReturn,static struct sock *)"];
"1000542" [label="(Call,tcp_v6_md5_do_lookup(sk, &newsk->sk_v6_daddr))"];
"1000174" [label="(Call,inet6_sk(newsk))"];
"1000117" [label="(Block,)"];
"1000143" [label="(Identifier,sk)"];
"1000309" [label="(Call,__ip6_dst_store(newsk, dst, NULL, NULL))"];
"1000637" [label="(Call,dst_release(dst))"];
"1000116" [label="(MethodParameterIn,bool *own_req)"];
"1000182" [label="(Identifier,np)"];
"1000148" [label="(Identifier,own_req)"];
"1000146" [label="(Identifier,dst)"];
"1000140" [label="(Call,newsk = tcp_v4_syn_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t     req_unhash, own_req))"];
"1000163" [label="(FieldIdentifier,pinet6)"];
"1000284" [label="(Call,inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP))"];
"1000135" [label="(Identifier,skb)"];
"1000139" [label="(Block,)"];
"1000173" [label="(Identifier,newnp)"];
"1000633" [label="(Call,sock_net(sk))"];
"1000177" [label="(Identifier,newtp)"];
"1000124" [label="(Identifier,sk)"];
"1000114" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000423" [label="(Call,ipv6_hdr(skb))"];
"1000442" [label="(Call,ipv6_hdr(skb))"];
"1000586" [label="(Call,req_to_sk(req_unhash))"];
"1000145" [label="(Identifier,req)"];
"1000111" [label="(MethodParameterIn,const struct sock *sk)"];
"1000275" [label="(Call,sk_acceptq_is_full(sk))"];
"1000187" [label="(Identifier,newnp)"];
"1000151" [label="(Identifier,newsk)"];
"1000149" [label="(ControlStructure,if (!newsk))"];
"1000172" [label="(Call,newnp = inet6_sk(newsk))"];
"1000234" [label="(Call,tcp_v6_iif(skb))"];
"1000483" [label="(Call,tcp_ca_openreq_child(newsk, dst))"];
"1000142" [label="(Call,tcp_v4_syn_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t     req_unhash, own_req))"];
"1000520" [label="(Call,tcp_sk(sk))"];
"1000181" [label="(Identifier,newnp)"];
"1000156" [label="(Call,(struct tcp6_sock *)newsk)"];
"1000241" [label="(Call,ipv6_hdr(skb))"];
"1000641" [label="(Call,sock_net(sk))"];
"1000150" [label="(Call,!newsk)"];
"1000566" [label="(Call,sk_gfp_atomic(sk, GFP_ATOMIC))"];
"1000123" [label="(Call,inet6_sk(sk))"];
"1000571" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000260" [label="(Call,ipv6_hdr(skb))"];
"1000170" [label="(Call,inet_sk(newsk))"];
"1000272" [label="(Call,inet_rsk(req))"];
"1000592" [label="(Call,tcp_move_syn(newtp, req))"];
"1000160" [label="(Call,inet_sk(newsk)->pinet6)"];
"1000279" [label="(Call,!dst)"];
"1000112" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000155" [label="(Identifier,newtcp6sk)"];
"1000314" [label="(Call,inet6_sk_rx_dst_set(newsk, skb))"];
"1000171" [label="(Identifier,newsk)"];
"1000431" [label="(Call,ipv6_hdr(skb))"];
"1000183" [label="(Call,sizeof(struct ipv6_pinfo))"];
"1000507" [label="(Call,tcp_sk(sk))"];
"1000161" [label="(Call,inet_sk(newsk))"];
"1000180" [label="(Call,memcpy(newnp, np, sizeof(struct ipv6_pinfo)))"];
"1000121" [label="(Call,*np = inet6_sk(sk))"];
"1000158" [label="(Identifier,newsk)"];
"1000141" [label="(Identifier,newsk)"];
"1000162" [label="(Identifier,newsk)"];
"1000416" [label="(Call,tcp_v6_iif(skb))"];
"1000168" [label="(Call,newinet = inet_sk(newsk))"];
"1000175" [label="(Identifier,newsk)"];
"1000291" [label="(Call,!dst)"];
"1000154" [label="(Call,newtcp6sk = (struct tcp6_sock *)newsk)"];
"1000500" [label="(Call,tcp_sk(sk))"];
"1000608" [label="(Call,sk_gfp_atomic(sk, GFP_ATOMIC))"];
"1000488" [label="(Call,dst_mtu(dst))"];
"1000122" [label="(Identifier,np)"];
"1000178" [label="(Call,tcp_sk(newsk))"];
"1000147" [label="(Identifier,req_unhash)"];
"1000115" [label="(MethodParameterIn,struct request_sock *req_unhash)"];
"1000144" [label="(Identifier,skb)"];
"1000113" [label="(MethodParameterIn,struct request_sock *req)"];
"1000296" [label="(Call,tcp_create_openreq_child(sk, req, skb))"];
"1000343" [label="(Call,memcpy(newnp, np, sizeof(struct ipv6_pinfo)))"];
"1000494" [label="(Call,dst_metric_advmss(dst))"];
"1000282" [label="(Call,dst = inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP))"];
"1000249" [label="(Call,ipv6_hdr(skb))"];
"1000180" -> "1000139"  [label="AST: "];
"1000180" -> "1000183"  [label="CFG: "];
"1000181" -> "1000180"  [label="AST: "];
"1000182" -> "1000180"  [label="AST: "];
"1000183" -> "1000180"  [label="AST: "];
"1000187" -> "1000180"  [label="CFG: "];
"1000180" -> "1000646"  [label="DDG: np"];
"1000180" -> "1000646"  [label="DDG: newnp"];
"1000180" -> "1000646"  [label="DDG: memcpy(newnp, np, sizeof(struct ipv6_pinfo))"];
"1000172" -> "1000180"  [label="DDG: newnp"];
"1000121" -> "1000180"  [label="DDG: np"];
"1000172" -> "1000139"  [label="AST: "];
"1000172" -> "1000174"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000174" -> "1000172"  [label="AST: "];
"1000177" -> "1000172"  [label="CFG: "];
"1000172" -> "1000646"  [label="DDG: inet6_sk(newsk)"];
"1000174" -> "1000172"  [label="DDG: newsk"];
"1000174" -> "1000175"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000170" -> "1000174"  [label="DDG: newsk"];
"1000174" -> "1000178"  [label="DDG: newsk"];
"1000170" -> "1000168"  [label="AST: "];
"1000170" -> "1000171"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000170" -> "1000168"  [label="DDG: newsk"];
"1000161" -> "1000170"  [label="DDG: newsk"];
"1000161" -> "1000160"  [label="AST: "];
"1000161" -> "1000162"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="CFG: "];
"1000156" -> "1000161"  [label="DDG: newsk"];
"1000156" -> "1000154"  [label="AST: "];
"1000156" -> "1000158"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000158" -> "1000156"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000156" -> "1000154"  [label="DDG: newsk"];
"1000150" -> "1000156"  [label="DDG: newsk"];
"1000150" -> "1000149"  [label="AST: "];
"1000150" -> "1000151"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000153" -> "1000150"  [label="CFG: "];
"1000155" -> "1000150"  [label="CFG: "];
"1000150" -> "1000646"  [label="DDG: newsk"];
"1000150" -> "1000646"  [label="DDG: !newsk"];
"1000140" -> "1000150"  [label="DDG: newsk"];
"1000140" -> "1000139"  [label="AST: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000142" -> "1000140"  [label="AST: "];
"1000151" -> "1000140"  [label="CFG: "];
"1000140" -> "1000646"  [label="DDG: tcp_v4_syn_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t     req_unhash, own_req)"];
"1000142" -> "1000140"  [label="DDG: skb"];
"1000142" -> "1000140"  [label="DDG: req_unhash"];
"1000142" -> "1000140"  [label="DDG: req"];
"1000142" -> "1000140"  [label="DDG: sk"];
"1000142" -> "1000140"  [label="DDG: dst"];
"1000142" -> "1000140"  [label="DDG: own_req"];
"1000142" -> "1000148"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000145" -> "1000142"  [label="AST: "];
"1000146" -> "1000142"  [label="AST: "];
"1000147" -> "1000142"  [label="AST: "];
"1000148" -> "1000142"  [label="AST: "];
"1000142" -> "1000646"  [label="DDG: skb"];
"1000142" -> "1000646"  [label="DDG: own_req"];
"1000142" -> "1000646"  [label="DDG: req"];
"1000142" -> "1000646"  [label="DDG: sk"];
"1000142" -> "1000646"  [label="DDG: dst"];
"1000142" -> "1000646"  [label="DDG: req_unhash"];
"1000123" -> "1000142"  [label="DDG: sk"];
"1000111" -> "1000142"  [label="DDG: sk"];
"1000112" -> "1000142"  [label="DDG: skb"];
"1000113" -> "1000142"  [label="DDG: req"];
"1000114" -> "1000142"  [label="DDG: dst"];
"1000115" -> "1000142"  [label="DDG: req_unhash"];
"1000116" -> "1000142"  [label="DDG: own_req"];
"1000142" -> "1000234"  [label="DDG: skb"];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000123" -> "1000121"  [label="DDG: sk"];
"1000111" -> "1000123"  [label="DDG: sk"];
"1000123" -> "1000275"  [label="DDG: sk"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000646"  [label="DDG: sk"];
"1000111" -> "1000275"  [label="DDG: sk"];
"1000111" -> "1000284"  [label="DDG: sk"];
"1000111" -> "1000296"  [label="DDG: sk"];
"1000111" -> "1000500"  [label="DDG: sk"];
"1000111" -> "1000507"  [label="DDG: sk"];
"1000111" -> "1000520"  [label="DDG: sk"];
"1000111" -> "1000542"  [label="DDG: sk"];
"1000111" -> "1000566"  [label="DDG: sk"];
"1000111" -> "1000571"  [label="DDG: sk"];
"1000111" -> "1000608"  [label="DDG: sk"];
"1000111" -> "1000633"  [label="DDG: sk"];
"1000111" -> "1000641"  [label="DDG: sk"];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000646"  [label="DDG: skb"];
"1000112" -> "1000234"  [label="DDG: skb"];
"1000112" -> "1000241"  [label="DDG: skb"];
"1000112" -> "1000249"  [label="DDG: skb"];
"1000112" -> "1000260"  [label="DDG: skb"];
"1000112" -> "1000296"  [label="DDG: skb"];
"1000112" -> "1000314"  [label="DDG: skb"];
"1000112" -> "1000416"  [label="DDG: skb"];
"1000112" -> "1000423"  [label="DDG: skb"];
"1000112" -> "1000431"  [label="DDG: skb"];
"1000112" -> "1000442"  [label="DDG: skb"];
"1000113" -> "1000110"  [label="AST: "];
"1000113" -> "1000646"  [label="DDG: req"];
"1000113" -> "1000272"  [label="DDG: req"];
"1000113" -> "1000284"  [label="DDG: req"];
"1000113" -> "1000296"  [label="DDG: req"];
"1000113" -> "1000592"  [label="DDG: req"];
"1000114" -> "1000110"  [label="AST: "];
"1000114" -> "1000646"  [label="DDG: dst"];
"1000114" -> "1000279"  [label="DDG: dst"];
"1000114" -> "1000282"  [label="DDG: dst"];
"1000114" -> "1000291"  [label="DDG: dst"];
"1000114" -> "1000309"  [label="DDG: dst"];
"1000114" -> "1000483"  [label="DDG: dst"];
"1000114" -> "1000488"  [label="DDG: dst"];
"1000114" -> "1000494"  [label="DDG: dst"];
"1000114" -> "1000637"  [label="DDG: dst"];
"1000115" -> "1000110"  [label="AST: "];
"1000115" -> "1000646"  [label="DDG: req_unhash"];
"1000115" -> "1000586"  [label="DDG: req_unhash"];
"1000116" -> "1000110"  [label="AST: "];
"1000116" -> "1000646"  [label="DDG: own_req"];
"1000121" -> "1000117"  [label="AST: "];
"1000122" -> "1000121"  [label="AST: "];
"1000135" -> "1000121"  [label="CFG: "];
"1000121" -> "1000646"  [label="DDG: inet6_sk(sk)"];
"1000121" -> "1000646"  [label="DDG: np"];
"1000121" -> "1000343"  [label="DDG: np"];
}
