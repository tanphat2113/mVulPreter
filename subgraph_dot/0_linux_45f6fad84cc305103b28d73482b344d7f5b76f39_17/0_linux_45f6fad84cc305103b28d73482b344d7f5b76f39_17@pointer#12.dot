digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_17@pointer" {
"1000637" [label="(Call,dst_release(dst))"];
"1000291" [label="(Call,!dst)"];
"1000282" [label="(Call,dst = inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP))"];
"1000284" [label="(Call,inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP))"];
"1000275" [label="(Call,sk_acceptq_is_full(sk))"];
"1000123" [label="(Call,inet6_sk(sk))"];
"1000111" [label="(MethodParameterIn,const struct sock *sk)"];
"1000272" [label="(Call,inet_rsk(req))"];
"1000113" [label="(MethodParameterIn,struct request_sock *req)"];
"1000114" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000279" [label="(Call,!dst)"];
"1000285" [label="(Identifier,sk)"];
"1000646" [label="(MethodReturn,static struct sock *)"];
"1000542" [label="(Call,tcp_v6_md5_do_lookup(sk, &newsk->sk_v6_daddr))"];
"1000117" [label="(Block,)"];
"1000309" [label="(Call,__ip6_dst_store(newsk, dst, NULL, NULL))"];
"1000639" [label="(JumpTarget,out:)"];
"1000274" [label="(ControlStructure,if (sk_acceptq_is_full(sk)))"];
"1000284" [label="(Call,inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP))"];
"1000286" [label="(Call,&fl6)"];
"1000288" [label="(Identifier,req)"];
"1000278" [label="(ControlStructure,if (!dst))"];
"1000633" [label="(Call,sock_net(sk))"];
"1000277" [label="(ControlStructure,goto out_overflow;)"];
"1000114" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000124" [label="(Identifier,sk)"];
"1000289" [label="(Identifier,IPPROTO_TCP)"];
"1000283" [label="(Identifier,dst)"];
"1000111" [label="(MethodParameterIn,const struct sock *sk)"];
"1000275" [label="(Call,sk_acceptq_is_full(sk))"];
"1000276" [label="(Identifier,sk)"];
"1000483" [label="(Call,tcp_ca_openreq_child(newsk, dst))"];
"1000142" [label="(Call,tcp_v4_syn_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t     req_unhash, own_req))"];
"1000280" [label="(Identifier,dst)"];
"1000520" [label="(Call,tcp_sk(sk))"];
"1000637" [label="(Call,dst_release(dst))"];
"1000270" [label="(Call,ireq = inet_rsk(req))"];
"1000641" [label="(Call,sock_net(sk))"];
"1000566" [label="(Call,sk_gfp_atomic(sk, GFP_ATOMIC))"];
"1000571" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000123" [label="(Call,inet6_sk(sk))"];
"1000592" [label="(Call,tcp_move_syn(newtp, req))"];
"1000279" [label="(Call,!dst)"];
"1000272" [label="(Call,inet_rsk(req))"];
"1000638" [label="(Identifier,dst)"];
"1000507" [label="(Call,tcp_sk(sk))"];
"1000121" [label="(Call,*np = inet6_sk(sk))"];
"1000290" [label="(ControlStructure,if (!dst))"];
"1000295" [label="(Identifier,newsk)"];
"1000291" [label="(Call,!dst)"];
"1000500" [label="(Call,tcp_sk(sk))"];
"1000608" [label="(Call,sk_gfp_atomic(sk, GFP_ATOMIC))"];
"1000293" [label="(ControlStructure,goto out;)"];
"1000488" [label="(Call,dst_mtu(dst))"];
"1000292" [label="(Identifier,dst)"];
"1000281" [label="(Block,)"];
"1000296" [label="(Call,tcp_create_openreq_child(sk, req, skb))"];
"1000273" [label="(Identifier,req)"];
"1000113" [label="(MethodParameterIn,struct request_sock *req)"];
"1000494" [label="(Call,dst_metric_advmss(dst))"];
"1000282" [label="(Call,dst = inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP))"];
"1000637" -> "1000117"  [label="AST: "];
"1000637" -> "1000638"  [label="CFG: "];
"1000638" -> "1000637"  [label="AST: "];
"1000639" -> "1000637"  [label="CFG: "];
"1000637" -> "1000646"  [label="DDG: dst"];
"1000637" -> "1000646"  [label="DDG: dst_release(dst)"];
"1000291" -> "1000637"  [label="DDG: dst"];
"1000279" -> "1000637"  [label="DDG: dst"];
"1000114" -> "1000637"  [label="DDG: dst"];
"1000291" -> "1000290"  [label="AST: "];
"1000291" -> "1000292"  [label="CFG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000293" -> "1000291"  [label="CFG: "];
"1000295" -> "1000291"  [label="CFG: "];
"1000291" -> "1000646"  [label="DDG: !dst"];
"1000291" -> "1000646"  [label="DDG: dst"];
"1000282" -> "1000291"  [label="DDG: dst"];
"1000114" -> "1000291"  [label="DDG: dst"];
"1000291" -> "1000309"  [label="DDG: dst"];
"1000282" -> "1000281"  [label="AST: "];
"1000282" -> "1000284"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000284" -> "1000282"  [label="AST: "];
"1000292" -> "1000282"  [label="CFG: "];
"1000282" -> "1000646"  [label="DDG: inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP)"];
"1000284" -> "1000282"  [label="DDG: sk"];
"1000284" -> "1000282"  [label="DDG: &fl6"];
"1000284" -> "1000282"  [label="DDG: req"];
"1000284" -> "1000282"  [label="DDG: IPPROTO_TCP"];
"1000114" -> "1000282"  [label="DDG: dst"];
"1000284" -> "1000289"  [label="CFG: "];
"1000285" -> "1000284"  [label="AST: "];
"1000286" -> "1000284"  [label="AST: "];
"1000288" -> "1000284"  [label="AST: "];
"1000289" -> "1000284"  [label="AST: "];
"1000284" -> "1000646"  [label="DDG: &fl6"];
"1000284" -> "1000646"  [label="DDG: IPPROTO_TCP"];
"1000284" -> "1000646"  [label="DDG: req"];
"1000275" -> "1000284"  [label="DDG: sk"];
"1000111" -> "1000284"  [label="DDG: sk"];
"1000272" -> "1000284"  [label="DDG: req"];
"1000113" -> "1000284"  [label="DDG: req"];
"1000284" -> "1000296"  [label="DDG: sk"];
"1000284" -> "1000296"  [label="DDG: req"];
"1000284" -> "1000641"  [label="DDG: sk"];
"1000275" -> "1000274"  [label="AST: "];
"1000275" -> "1000276"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000277" -> "1000275"  [label="CFG: "];
"1000280" -> "1000275"  [label="CFG: "];
"1000275" -> "1000646"  [label="DDG: sk_acceptq_is_full(sk)"];
"1000123" -> "1000275"  [label="DDG: sk"];
"1000111" -> "1000275"  [label="DDG: sk"];
"1000275" -> "1000296"  [label="DDG: sk"];
"1000275" -> "1000633"  [label="DDG: sk"];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000123" -> "1000121"  [label="DDG: sk"];
"1000111" -> "1000123"  [label="DDG: sk"];
"1000123" -> "1000142"  [label="DDG: sk"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000646"  [label="DDG: sk"];
"1000111" -> "1000142"  [label="DDG: sk"];
"1000111" -> "1000296"  [label="DDG: sk"];
"1000111" -> "1000500"  [label="DDG: sk"];
"1000111" -> "1000507"  [label="DDG: sk"];
"1000111" -> "1000520"  [label="DDG: sk"];
"1000111" -> "1000542"  [label="DDG: sk"];
"1000111" -> "1000566"  [label="DDG: sk"];
"1000111" -> "1000571"  [label="DDG: sk"];
"1000111" -> "1000608"  [label="DDG: sk"];
"1000111" -> "1000633"  [label="DDG: sk"];
"1000111" -> "1000641"  [label="DDG: sk"];
"1000272" -> "1000270"  [label="AST: "];
"1000272" -> "1000273"  [label="CFG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000270" -> "1000272"  [label="CFG: "];
"1000272" -> "1000646"  [label="DDG: req"];
"1000272" -> "1000270"  [label="DDG: req"];
"1000113" -> "1000272"  [label="DDG: req"];
"1000272" -> "1000296"  [label="DDG: req"];
"1000113" -> "1000110"  [label="AST: "];
"1000113" -> "1000646"  [label="DDG: req"];
"1000113" -> "1000142"  [label="DDG: req"];
"1000113" -> "1000296"  [label="DDG: req"];
"1000113" -> "1000592"  [label="DDG: req"];
"1000114" -> "1000110"  [label="AST: "];
"1000114" -> "1000646"  [label="DDG: dst"];
"1000114" -> "1000142"  [label="DDG: dst"];
"1000114" -> "1000279"  [label="DDG: dst"];
"1000114" -> "1000309"  [label="DDG: dst"];
"1000114" -> "1000483"  [label="DDG: dst"];
"1000114" -> "1000488"  [label="DDG: dst"];
"1000114" -> "1000494"  [label="DDG: dst"];
"1000279" -> "1000278"  [label="AST: "];
"1000279" -> "1000280"  [label="CFG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000283" -> "1000279"  [label="CFG: "];
"1000295" -> "1000279"  [label="CFG: "];
"1000279" -> "1000646"  [label="DDG: !dst"];
"1000279" -> "1000309"  [label="DDG: dst"];
}
