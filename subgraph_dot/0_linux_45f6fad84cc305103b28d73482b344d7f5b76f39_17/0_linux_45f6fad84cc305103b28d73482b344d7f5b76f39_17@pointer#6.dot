digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_17@pointer" {
"1000234" [label="(Call,tcp_v6_iif(skb))"];
"1000142" [label="(Call,tcp_v4_syn_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t     req_unhash, own_req))"];
"1000123" [label="(Call,inet6_sk(sk))"];
"1000111" [label="(MethodParameterIn,const struct sock *sk)"];
"1000112" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000113" [label="(MethodParameterIn,struct request_sock *req)"];
"1000114" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000115" [label="(MethodParameterIn,struct request_sock *req_unhash)"];
"1000116" [label="(MethodParameterIn,bool *own_req)"];
"1000230" [label="(Call,newnp->mcast_oif   = tcp_v6_iif(skb))"];
"1000241" [label="(Call,ipv6_hdr(skb))"];
"1000249" [label="(Call,ipv6_hdr(skb))"];
"1000248" [label="(Call,ip6_flowinfo(ipv6_hdr(skb)))"];
"1000244" [label="(Call,newnp->rcv_flowinfo = ip6_flowinfo(ipv6_hdr(skb)))"];
"1000260" [label="(Call,ipv6_hdr(skb))"];
"1000259" [label="(Call,ip6_flowlabel(ipv6_hdr(skb)))"];
"1000255" [label="(Call,newnp->flow_label = ip6_flowlabel(ipv6_hdr(skb)))"];
"1000646" [label="(MethodReturn,static struct sock *)"];
"1000542" [label="(Call,tcp_v6_md5_do_lookup(sk, &newsk->sk_v6_daddr))"];
"1000238" [label="(Identifier,newnp)"];
"1000240" [label="(Call,ipv6_hdr(skb)->hop_limit)"];
"1000143" [label="(Identifier,sk)"];
"1000309" [label="(Call,__ip6_dst_store(newsk, dst, NULL, NULL))"];
"1000116" [label="(MethodParameterIn,bool *own_req)"];
"1000146" [label="(Identifier,dst)"];
"1000148" [label="(Identifier,own_req)"];
"1000140" [label="(Call,newsk = tcp_v4_syn_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t     req_unhash, own_req))"];
"1000284" [label="(Call,inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP))"];
"1000248" [label="(Call,ip6_flowinfo(ipv6_hdr(skb)))"];
"1000244" [label="(Call,newnp->rcv_flowinfo = ip6_flowinfo(ipv6_hdr(skb)))"];
"1000139" [label="(Block,)"];
"1000633" [label="(Call,sock_net(sk))"];
"1000124" [label="(Identifier,sk)"];
"1000114" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000423" [label="(Call,ipv6_hdr(skb))"];
"1000442" [label="(Call,ipv6_hdr(skb))"];
"1000586" [label="(Call,req_to_sk(req_unhash))"];
"1000145" [label="(Identifier,req)"];
"1000111" [label="(MethodParameterIn,const struct sock *sk)"];
"1000275" [label="(Call,sk_acceptq_is_full(sk))"];
"1000234" [label="(Call,tcp_v6_iif(skb))"];
"1000263" [label="(Identifier,newsk)"];
"1000483" [label="(Call,tcp_ca_openreq_child(newsk, dst))"];
"1000256" [label="(Call,newnp->flow_label)"];
"1000142" [label="(Call,tcp_v4_syn_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t     req_unhash, own_req))"];
"1000230" [label="(Call,newnp->mcast_oif   = tcp_v6_iif(skb))"];
"1000520" [label="(Call,tcp_sk(sk))"];
"1000251" [label="(ControlStructure,if (np->repflow))"];
"1000241" [label="(Call,ipv6_hdr(skb))"];
"1000260" [label="(Call,ipv6_hdr(skb))"];
"1000637" [label="(Call,dst_release(dst))"];
"1000641" [label="(Call,sock_net(sk))"];
"1000566" [label="(Call,sk_gfp_atomic(sk, GFP_ATOMIC))"];
"1000571" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000123" [label="(Call,inet6_sk(sk))"];
"1000592" [label="(Call,tcp_move_syn(newtp, req))"];
"1000279" [label="(Call,!dst)"];
"1000231" [label="(Call,newnp->mcast_oif)"];
"1000272" [label="(Call,inet_rsk(req))"];
"1000243" [label="(FieldIdentifier,hop_limit)"];
"1000259" [label="(Call,ip6_flowlabel(ipv6_hdr(skb)))"];
"1000112" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000314" [label="(Call,inet6_sk_rx_dst_set(newsk, skb))"];
"1000235" [label="(Identifier,skb)"];
"1000431" [label="(Call,ipv6_hdr(skb))"];
"1000507" [label="(Call,tcp_sk(sk))"];
"1000242" [label="(Identifier,skb)"];
"1000121" [label="(Call,*np = inet6_sk(sk))"];
"1000250" [label="(Identifier,skb)"];
"1000416" [label="(Call,tcp_v6_iif(skb))"];
"1000245" [label="(Call,newnp->rcv_flowinfo)"];
"1000291" [label="(Call,!dst)"];
"1000261" [label="(Identifier,skb)"];
"1000500" [label="(Call,tcp_sk(sk))"];
"1000608" [label="(Call,sk_gfp_atomic(sk, GFP_ATOMIC))"];
"1000488" [label="(Call,dst_mtu(dst))"];
"1000253" [label="(Identifier,np)"];
"1000255" [label="(Call,newnp->flow_label = ip6_flowlabel(ipv6_hdr(skb)))"];
"1000147" [label="(Identifier,req_unhash)"];
"1000296" [label="(Call,tcp_create_openreq_child(sk, req, skb))"];
"1000115" [label="(MethodParameterIn,struct request_sock *req_unhash)"];
"1000144" [label="(Identifier,skb)"];
"1000113" [label="(MethodParameterIn,struct request_sock *req)"];
"1000494" [label="(Call,dst_metric_advmss(dst))"];
"1000282" [label="(Call,dst = inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP))"];
"1000249" [label="(Call,ipv6_hdr(skb))"];
"1000234" -> "1000230"  [label="AST: "];
"1000234" -> "1000235"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000230" -> "1000234"  [label="CFG: "];
"1000234" -> "1000230"  [label="DDG: skb"];
"1000142" -> "1000234"  [label="DDG: skb"];
"1000112" -> "1000234"  [label="DDG: skb"];
"1000234" -> "1000241"  [label="DDG: skb"];
"1000142" -> "1000140"  [label="AST: "];
"1000142" -> "1000148"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000145" -> "1000142"  [label="AST: "];
"1000146" -> "1000142"  [label="AST: "];
"1000147" -> "1000142"  [label="AST: "];
"1000148" -> "1000142"  [label="AST: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000142" -> "1000646"  [label="DDG: skb"];
"1000142" -> "1000646"  [label="DDG: own_req"];
"1000142" -> "1000646"  [label="DDG: req"];
"1000142" -> "1000646"  [label="DDG: sk"];
"1000142" -> "1000646"  [label="DDG: dst"];
"1000142" -> "1000646"  [label="DDG: req_unhash"];
"1000142" -> "1000140"  [label="DDG: skb"];
"1000142" -> "1000140"  [label="DDG: req_unhash"];
"1000142" -> "1000140"  [label="DDG: req"];
"1000142" -> "1000140"  [label="DDG: sk"];
"1000142" -> "1000140"  [label="DDG: dst"];
"1000142" -> "1000140"  [label="DDG: own_req"];
"1000123" -> "1000142"  [label="DDG: sk"];
"1000111" -> "1000142"  [label="DDG: sk"];
"1000112" -> "1000142"  [label="DDG: skb"];
"1000113" -> "1000142"  [label="DDG: req"];
"1000114" -> "1000142"  [label="DDG: dst"];
"1000115" -> "1000142"  [label="DDG: req_unhash"];
"1000116" -> "1000142"  [label="DDG: own_req"];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000123" -> "1000121"  [label="DDG: sk"];
"1000111" -> "1000123"  [label="DDG: sk"];
"1000123" -> "1000275"  [label="DDG: sk"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000646"  [label="DDG: sk"];
"1000111" -> "1000275"  [label="DDG: sk"];
"1000111" -> "1000284"  [label="DDG: sk"];
"1000111" -> "1000296"  [label="DDG: sk"];
"1000111" -> "1000500"  [label="DDG: sk"];
"1000111" -> "1000507"  [label="DDG: sk"];
"1000111" -> "1000520"  [label="DDG: sk"];
"1000111" -> "1000542"  [label="DDG: sk"];
"1000111" -> "1000566"  [label="DDG: sk"];
"1000111" -> "1000571"  [label="DDG: sk"];
"1000111" -> "1000608"  [label="DDG: sk"];
"1000111" -> "1000633"  [label="DDG: sk"];
"1000111" -> "1000641"  [label="DDG: sk"];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000646"  [label="DDG: skb"];
"1000112" -> "1000241"  [label="DDG: skb"];
"1000112" -> "1000249"  [label="DDG: skb"];
"1000112" -> "1000260"  [label="DDG: skb"];
"1000112" -> "1000296"  [label="DDG: skb"];
"1000112" -> "1000314"  [label="DDG: skb"];
"1000112" -> "1000416"  [label="DDG: skb"];
"1000112" -> "1000423"  [label="DDG: skb"];
"1000112" -> "1000431"  [label="DDG: skb"];
"1000112" -> "1000442"  [label="DDG: skb"];
"1000113" -> "1000110"  [label="AST: "];
"1000113" -> "1000646"  [label="DDG: req"];
"1000113" -> "1000272"  [label="DDG: req"];
"1000113" -> "1000284"  [label="DDG: req"];
"1000113" -> "1000296"  [label="DDG: req"];
"1000113" -> "1000592"  [label="DDG: req"];
"1000114" -> "1000110"  [label="AST: "];
"1000114" -> "1000646"  [label="DDG: dst"];
"1000114" -> "1000279"  [label="DDG: dst"];
"1000114" -> "1000282"  [label="DDG: dst"];
"1000114" -> "1000291"  [label="DDG: dst"];
"1000114" -> "1000309"  [label="DDG: dst"];
"1000114" -> "1000483"  [label="DDG: dst"];
"1000114" -> "1000488"  [label="DDG: dst"];
"1000114" -> "1000494"  [label="DDG: dst"];
"1000114" -> "1000637"  [label="DDG: dst"];
"1000115" -> "1000110"  [label="AST: "];
"1000115" -> "1000646"  [label="DDG: req_unhash"];
"1000115" -> "1000586"  [label="DDG: req_unhash"];
"1000116" -> "1000110"  [label="AST: "];
"1000116" -> "1000646"  [label="DDG: own_req"];
"1000230" -> "1000139"  [label="AST: "];
"1000231" -> "1000230"  [label="AST: "];
"1000238" -> "1000230"  [label="CFG: "];
"1000230" -> "1000646"  [label="DDG: newnp->mcast_oif"];
"1000230" -> "1000646"  [label="DDG: tcp_v6_iif(skb)"];
"1000241" -> "1000240"  [label="AST: "];
"1000241" -> "1000242"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="CFG: "];
"1000241" -> "1000249"  [label="DDG: skb"];
"1000249" -> "1000248"  [label="AST: "];
"1000249" -> "1000250"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000248" -> "1000249"  [label="CFG: "];
"1000249" -> "1000646"  [label="DDG: skb"];
"1000249" -> "1000248"  [label="DDG: skb"];
"1000249" -> "1000260"  [label="DDG: skb"];
"1000248" -> "1000244"  [label="AST: "];
"1000244" -> "1000248"  [label="CFG: "];
"1000248" -> "1000646"  [label="DDG: ipv6_hdr(skb)"];
"1000248" -> "1000244"  [label="DDG: ipv6_hdr(skb)"];
"1000244" -> "1000139"  [label="AST: "];
"1000245" -> "1000244"  [label="AST: "];
"1000253" -> "1000244"  [label="CFG: "];
"1000244" -> "1000646"  [label="DDG: ip6_flowinfo(ipv6_hdr(skb))"];
"1000244" -> "1000646"  [label="DDG: newnp->rcv_flowinfo"];
"1000260" -> "1000259"  [label="AST: "];
"1000260" -> "1000261"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000259" -> "1000260"  [label="CFG: "];
"1000260" -> "1000646"  [label="DDG: skb"];
"1000260" -> "1000259"  [label="DDG: skb"];
"1000259" -> "1000255"  [label="AST: "];
"1000255" -> "1000259"  [label="CFG: "];
"1000259" -> "1000646"  [label="DDG: ipv6_hdr(skb)"];
"1000259" -> "1000255"  [label="DDG: ipv6_hdr(skb)"];
"1000255" -> "1000251"  [label="AST: "];
"1000256" -> "1000255"  [label="AST: "];
"1000263" -> "1000255"  [label="CFG: "];
"1000255" -> "1000646"  [label="DDG: ip6_flowlabel(ipv6_hdr(skb))"];
"1000255" -> "1000646"  [label="DDG: newnp->flow_label"];
}
