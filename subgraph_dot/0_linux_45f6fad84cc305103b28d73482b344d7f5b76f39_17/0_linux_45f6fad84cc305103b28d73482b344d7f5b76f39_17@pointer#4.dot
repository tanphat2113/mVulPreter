digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_17@pointer" {
"1000458" [label="(Call,RCU_INIT_POINTER(newnp->opt, opt))"];
"1000407" [label="(Call,newnp->opt\t  = NULL)"];
"1000309" [label="(Call,__ip6_dst_store(newsk, dst, NULL, NULL))"];
"1000301" [label="(Call,!newsk)"];
"1000294" [label="(Call,newsk = tcp_create_openreq_child(sk, req, skb))"];
"1000296" [label="(Call,tcp_create_openreq_child(sk, req, skb))"];
"1000284" [label="(Call,inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP))"];
"1000275" [label="(Call,sk_acceptq_is_full(sk))"];
"1000123" [label="(Call,inet6_sk(sk))"];
"1000111" [label="(MethodParameterIn,const struct sock *sk)"];
"1000272" [label="(Call,inet_rsk(req))"];
"1000113" [label="(MethodParameterIn,struct request_sock *req)"];
"1000112" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000291" [label="(Call,!dst)"];
"1000282" [label="(Call,dst = inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP))"];
"1000114" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000279" [label="(Call,!dst)"];
"1000453" [label="(Call,opt = ipv6_dup_options(newsk, opt))"];
"1000455" [label="(Call,ipv6_dup_options(newsk, opt))"];
"1000341" [label="(Call,inet6_sk(newsk))"];
"1000337" [label="(Call,inet_sk(newsk))"];
"1000333" [label="(Call,tcp_sk(newsk))"];
"1000324" [label="(Call,inet_sk(newsk))"];
"1000319" [label="(Call,(struct tcp6_sock *)newsk)"];
"1000314" [label="(Call,inet6_sk_rx_dst_set(newsk, skb))"];
"1000444" [label="(Call,opt = rcu_dereference(np->opt))"];
"1000446" [label="(Call,rcu_dereference(np->opt))"];
"1000285" [label="(Identifier,sk)"];
"1000646" [label="(MethodReturn,static struct sock *)"];
"1000117" [label="(Block,)"];
"1000386" [label="(Call,newnp->ipv6_fl_list = NULL)"];
"1000286" [label="(Call,&fl6)"];
"1000633" [label="(Call,sock_net(sk))"];
"1000277" [label="(ControlStructure,goto out_overflow;)"];
"1000289" [label="(Identifier,IPPROTO_TCP)"];
"1000444" [label="(Call,opt = rcu_dereference(np->opt))"];
"1000275" [label="(Call,sk_acceptq_is_full(sk))"];
"1000456" [label="(Identifier,newsk)"];
"1000466" [label="(Identifier,newsk)"];
"1000312" [label="(Identifier,NULL)"];
"1000592" [label="(Call,tcp_move_syn(newtp, req))"];
"1000279" [label="(Call,!dst)"];
"1000313" [label="(Identifier,NULL)"];
"1000507" [label="(Call,tcp_sk(sk))"];
"1000310" [label="(Identifier,newsk)"];
"1000488" [label="(Call,dst_mtu(dst))"];
"1000292" [label="(Identifier,dst)"];
"1000335" [label="(Call,newinet = inet_sk(newsk))"];
"1000281" [label="(Block,)"];
"1000324" [label="(Call,inet_sk(newsk))"];
"1000274" [label="(ControlStructure,if (sk_acceptq_is_full(sk)))"];
"1000402" [label="(Call,newnp->pktoptions = NULL)"];
"1000311" [label="(Identifier,dst)"];
"1000288" [label="(Identifier,req)"];
"1000376" [label="(Call,newinet->inet_opt = NULL)"];
"1000299" [label="(Identifier,skb)"];
"1000451" [label="(Identifier,opt)"];
"1000301" [label="(Call,!newsk)"];
"1000303" [label="(ControlStructure,goto out_nonewsk;)"];
"1000283" [label="(Identifier,dst)"];
"1000297" [label="(Identifier,sk)"];
"1000302" [label="(Identifier,newsk)"];
"1000317" [label="(Call,newtcp6sk = (struct tcp6_sock *)newsk)"];
"1000314" [label="(Call,inet6_sk_rx_dst_set(newsk, skb))"];
"1000431" [label="(Call,ipv6_hdr(skb))"];
"1000121" [label="(Call,*np = inet6_sk(sk))"];
"1000447" [label="(Call,np->opt)"];
"1000300" [label="(ControlStructure,if (!newsk))"];
"1000291" [label="(Call,!dst)"];
"1000306" [label="(Identifier,newsk)"];
"1000459" [label="(Call,newnp->opt)"];
"1000608" [label="(Call,sk_gfp_atomic(sk, GFP_ATOMIC))"];
"1000293" [label="(ControlStructure,goto out;)"];
"1000296" [label="(Call,tcp_create_openreq_child(sk, req, skb))"];
"1000331" [label="(Call,newtp = tcp_sk(newsk))"];
"1000457" [label="(Identifier,opt)"];
"1000452" [label="(Block,)"];
"1000309" [label="(Call,__ip6_dst_store(newsk, dst, NULL, NULL))"];
"1000315" [label="(Identifier,newsk)"];
"1000446" [label="(Call,rcu_dereference(np->opt))"];
"1000284" [label="(Call,inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP))"];
"1000453" [label="(Call,opt = ipv6_dup_options(newsk, opt))"];
"1000114" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000319" [label="(Call,(struct tcp6_sock *)newsk)"];
"1000442" [label="(Call,ipv6_hdr(skb))"];
"1000337" [label="(Call,inet_sk(newsk))"];
"1000111" [label="(MethodParameterIn,const struct sock *sk)"];
"1000276" [label="(Identifier,sk)"];
"1000408" [label="(Call,newnp->opt)"];
"1000460" [label="(Identifier,newnp)"];
"1000280" [label="(Identifier,dst)"];
"1000316" [label="(Identifier,skb)"];
"1000637" [label="(Call,dst_release(dst))"];
"1000270" [label="(Call,ireq = inet_rsk(req))"];
"1000260" [label="(Call,ipv6_hdr(skb))"];
"1000641" [label="(Call,sock_net(sk))"];
"1000123" [label="(Call,inet6_sk(sk))"];
"1000414" [label="(Identifier,newnp)"];
"1000272" [label="(Call,inet_rsk(req))"];
"1000112" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000325" [label="(Identifier,newsk)"];
"1000445" [label="(Identifier,opt)"];
"1000290" [label="(ControlStructure,if (!dst))"];
"1000341" [label="(Call,inet6_sk(newsk))"];
"1000298" [label="(Identifier,req)"];
"1000381" [label="(Call,newnp->ipv6_ac_list = NULL)"];
"1000494" [label="(Call,dst_metric_advmss(dst))"];
"1000282" [label="(Call,dst = inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP))"];
"1000462" [label="(Identifier,opt)"];
"1000458" [label="(Call,RCU_INIT_POINTER(newnp->opt, opt))"];
"1000542" [label="(Call,tcp_v6_md5_do_lookup(sk, &newsk->sk_v6_daddr))"];
"1000465" [label="(Call,inet_csk(newsk))"];
"1000294" [label="(Call,newsk = tcp_create_openreq_child(sk, req, skb))"];
"1000321" [label="(Identifier,newsk)"];
"1000454" [label="(Identifier,opt)"];
"1000338" [label="(Identifier,newsk)"];
"1000278" [label="(ControlStructure,if (!dst))"];
"1000124" [label="(Identifier,sk)"];
"1000333" [label="(Call,tcp_sk(newsk))"];
"1000423" [label="(Call,ipv6_hdr(skb))"];
"1000323" [label="(Call,inet_sk(newsk)->pinet6)"];
"1000234" [label="(Call,tcp_v6_iif(skb))"];
"1000411" [label="(Identifier,NULL)"];
"1000483" [label="(Call,tcp_ca_openreq_child(newsk, dst))"];
"1000142" [label="(Call,tcp_v4_syn_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t     req_unhash, own_req))"];
"1000520" [label="(Call,tcp_sk(sk))"];
"1000342" [label="(Identifier,newsk)"];
"1000241" [label="(Call,ipv6_hdr(skb))"];
"1000566" [label="(Call,sk_gfp_atomic(sk, GFP_ATOMIC))"];
"1000571" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000326" [label="(FieldIdentifier,pinet6)"];
"1000339" [label="(Call,newnp = inet6_sk(newsk))"];
"1000416" [label="(Call,tcp_v6_iif(skb))"];
"1000295" [label="(Identifier,newsk)"];
"1000644" [label="(Return,return NULL;)"];
"1000500" [label="(Call,tcp_sk(sk))"];
"1000273" [label="(Identifier,req)"];
"1000318" [label="(Identifier,newtcp6sk)"];
"1000407" [label="(Call,newnp->opt\t  = NULL)"];
"1000455" [label="(Call,ipv6_dup_options(newsk, opt))"];
"1000113" [label="(MethodParameterIn,struct request_sock *req)"];
"1000615" [label="(Call,ireq->pktopts = NULL)"];
"1000334" [label="(Identifier,newsk)"];
"1000249" [label="(Call,ipv6_hdr(skb))"];
"1000458" -> "1000452"  [label="AST: "];
"1000458" -> "1000462"  [label="CFG: "];
"1000459" -> "1000458"  [label="AST: "];
"1000462" -> "1000458"  [label="AST: "];
"1000466" -> "1000458"  [label="CFG: "];
"1000458" -> "1000646"  [label="DDG: newnp->opt"];
"1000458" -> "1000646"  [label="DDG: RCU_INIT_POINTER(newnp->opt, opt)"];
"1000458" -> "1000646"  [label="DDG: opt"];
"1000407" -> "1000458"  [label="DDG: newnp->opt"];
"1000453" -> "1000458"  [label="DDG: opt"];
"1000407" -> "1000117"  [label="AST: "];
"1000407" -> "1000411"  [label="CFG: "];
"1000408" -> "1000407"  [label="AST: "];
"1000411" -> "1000407"  [label="AST: "];
"1000414" -> "1000407"  [label="CFG: "];
"1000407" -> "1000646"  [label="DDG: NULL"];
"1000407" -> "1000646"  [label="DDG: newnp->opt"];
"1000309" -> "1000407"  [label="DDG: NULL"];
"1000309" -> "1000117"  [label="AST: "];
"1000309" -> "1000313"  [label="CFG: "];
"1000310" -> "1000309"  [label="AST: "];
"1000311" -> "1000309"  [label="AST: "];
"1000312" -> "1000309"  [label="AST: "];
"1000313" -> "1000309"  [label="AST: "];
"1000315" -> "1000309"  [label="CFG: "];
"1000309" -> "1000646"  [label="DDG: __ip6_dst_store(newsk, dst, NULL, NULL)"];
"1000301" -> "1000309"  [label="DDG: newsk"];
"1000291" -> "1000309"  [label="DDG: dst"];
"1000279" -> "1000309"  [label="DDG: dst"];
"1000114" -> "1000309"  [label="DDG: dst"];
"1000309" -> "1000314"  [label="DDG: newsk"];
"1000309" -> "1000376"  [label="DDG: NULL"];
"1000309" -> "1000381"  [label="DDG: NULL"];
"1000309" -> "1000386"  [label="DDG: NULL"];
"1000309" -> "1000402"  [label="DDG: NULL"];
"1000309" -> "1000483"  [label="DDG: dst"];
"1000309" -> "1000615"  [label="DDG: NULL"];
"1000309" -> "1000644"  [label="DDG: NULL"];
"1000301" -> "1000300"  [label="AST: "];
"1000301" -> "1000302"  [label="CFG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000303" -> "1000301"  [label="CFG: "];
"1000306" -> "1000301"  [label="CFG: "];
"1000301" -> "1000646"  [label="DDG: !newsk"];
"1000301" -> "1000646"  [label="DDG: newsk"];
"1000294" -> "1000301"  [label="DDG: newsk"];
"1000294" -> "1000117"  [label="AST: "];
"1000294" -> "1000296"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000296" -> "1000294"  [label="AST: "];
"1000302" -> "1000294"  [label="CFG: "];
"1000294" -> "1000646"  [label="DDG: tcp_create_openreq_child(sk, req, skb)"];
"1000296" -> "1000294"  [label="DDG: sk"];
"1000296" -> "1000294"  [label="DDG: req"];
"1000296" -> "1000294"  [label="DDG: skb"];
"1000296" -> "1000299"  [label="CFG: "];
"1000297" -> "1000296"  [label="AST: "];
"1000298" -> "1000296"  [label="AST: "];
"1000299" -> "1000296"  [label="AST: "];
"1000296" -> "1000646"  [label="DDG: req"];
"1000296" -> "1000646"  [label="DDG: skb"];
"1000284" -> "1000296"  [label="DDG: sk"];
"1000284" -> "1000296"  [label="DDG: req"];
"1000275" -> "1000296"  [label="DDG: sk"];
"1000111" -> "1000296"  [label="DDG: sk"];
"1000272" -> "1000296"  [label="DDG: req"];
"1000113" -> "1000296"  [label="DDG: req"];
"1000112" -> "1000296"  [label="DDG: skb"];
"1000296" -> "1000314"  [label="DDG: skb"];
"1000296" -> "1000500"  [label="DDG: sk"];
"1000296" -> "1000592"  [label="DDG: req"];
"1000296" -> "1000641"  [label="DDG: sk"];
"1000284" -> "1000282"  [label="AST: "];
"1000284" -> "1000289"  [label="CFG: "];
"1000285" -> "1000284"  [label="AST: "];
"1000286" -> "1000284"  [label="AST: "];
"1000288" -> "1000284"  [label="AST: "];
"1000289" -> "1000284"  [label="AST: "];
"1000282" -> "1000284"  [label="CFG: "];
"1000284" -> "1000646"  [label="DDG: &fl6"];
"1000284" -> "1000646"  [label="DDG: IPPROTO_TCP"];
"1000284" -> "1000646"  [label="DDG: req"];
"1000284" -> "1000282"  [label="DDG: sk"];
"1000284" -> "1000282"  [label="DDG: &fl6"];
"1000284" -> "1000282"  [label="DDG: req"];
"1000284" -> "1000282"  [label="DDG: IPPROTO_TCP"];
"1000275" -> "1000284"  [label="DDG: sk"];
"1000111" -> "1000284"  [label="DDG: sk"];
"1000272" -> "1000284"  [label="DDG: req"];
"1000113" -> "1000284"  [label="DDG: req"];
"1000284" -> "1000641"  [label="DDG: sk"];
"1000275" -> "1000274"  [label="AST: "];
"1000275" -> "1000276"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000277" -> "1000275"  [label="CFG: "];
"1000280" -> "1000275"  [label="CFG: "];
"1000275" -> "1000646"  [label="DDG: sk_acceptq_is_full(sk)"];
"1000123" -> "1000275"  [label="DDG: sk"];
"1000111" -> "1000275"  [label="DDG: sk"];
"1000275" -> "1000633"  [label="DDG: sk"];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000123" -> "1000121"  [label="DDG: sk"];
"1000111" -> "1000123"  [label="DDG: sk"];
"1000123" -> "1000142"  [label="DDG: sk"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000646"  [label="DDG: sk"];
"1000111" -> "1000142"  [label="DDG: sk"];
"1000111" -> "1000500"  [label="DDG: sk"];
"1000111" -> "1000507"  [label="DDG: sk"];
"1000111" -> "1000520"  [label="DDG: sk"];
"1000111" -> "1000542"  [label="DDG: sk"];
"1000111" -> "1000566"  [label="DDG: sk"];
"1000111" -> "1000571"  [label="DDG: sk"];
"1000111" -> "1000608"  [label="DDG: sk"];
"1000111" -> "1000633"  [label="DDG: sk"];
"1000111" -> "1000641"  [label="DDG: sk"];
"1000272" -> "1000270"  [label="AST: "];
"1000272" -> "1000273"  [label="CFG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000270" -> "1000272"  [label="CFG: "];
"1000272" -> "1000646"  [label="DDG: req"];
"1000272" -> "1000270"  [label="DDG: req"];
"1000113" -> "1000272"  [label="DDG: req"];
"1000113" -> "1000110"  [label="AST: "];
"1000113" -> "1000646"  [label="DDG: req"];
"1000113" -> "1000142"  [label="DDG: req"];
"1000113" -> "1000592"  [label="DDG: req"];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000646"  [label="DDG: skb"];
"1000112" -> "1000142"  [label="DDG: skb"];
"1000112" -> "1000234"  [label="DDG: skb"];
"1000112" -> "1000241"  [label="DDG: skb"];
"1000112" -> "1000249"  [label="DDG: skb"];
"1000112" -> "1000260"  [label="DDG: skb"];
"1000112" -> "1000314"  [label="DDG: skb"];
"1000112" -> "1000416"  [label="DDG: skb"];
"1000112" -> "1000423"  [label="DDG: skb"];
"1000112" -> "1000431"  [label="DDG: skb"];
"1000112" -> "1000442"  [label="DDG: skb"];
"1000291" -> "1000290"  [label="AST: "];
"1000291" -> "1000292"  [label="CFG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000293" -> "1000291"  [label="CFG: "];
"1000295" -> "1000291"  [label="CFG: "];
"1000291" -> "1000646"  [label="DDG: !dst"];
"1000291" -> "1000646"  [label="DDG: dst"];
"1000282" -> "1000291"  [label="DDG: dst"];
"1000114" -> "1000291"  [label="DDG: dst"];
"1000291" -> "1000637"  [label="DDG: dst"];
"1000282" -> "1000281"  [label="AST: "];
"1000283" -> "1000282"  [label="AST: "];
"1000292" -> "1000282"  [label="CFG: "];
"1000282" -> "1000646"  [label="DDG: inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP)"];
"1000114" -> "1000282"  [label="DDG: dst"];
"1000114" -> "1000110"  [label="AST: "];
"1000114" -> "1000646"  [label="DDG: dst"];
"1000114" -> "1000142"  [label="DDG: dst"];
"1000114" -> "1000279"  [label="DDG: dst"];
"1000114" -> "1000483"  [label="DDG: dst"];
"1000114" -> "1000488"  [label="DDG: dst"];
"1000114" -> "1000494"  [label="DDG: dst"];
"1000114" -> "1000637"  [label="DDG: dst"];
"1000279" -> "1000278"  [label="AST: "];
"1000279" -> "1000280"  [label="CFG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000283" -> "1000279"  [label="CFG: "];
"1000295" -> "1000279"  [label="CFG: "];
"1000279" -> "1000646"  [label="DDG: !dst"];
"1000279" -> "1000637"  [label="DDG: dst"];
"1000453" -> "1000452"  [label="AST: "];
"1000453" -> "1000455"  [label="CFG: "];
"1000454" -> "1000453"  [label="AST: "];
"1000455" -> "1000453"  [label="AST: "];
"1000460" -> "1000453"  [label="CFG: "];
"1000453" -> "1000646"  [label="DDG: ipv6_dup_options(newsk, opt)"];
"1000455" -> "1000453"  [label="DDG: newsk"];
"1000455" -> "1000453"  [label="DDG: opt"];
"1000455" -> "1000457"  [label="CFG: "];
"1000456" -> "1000455"  [label="AST: "];
"1000457" -> "1000455"  [label="AST: "];
"1000341" -> "1000455"  [label="DDG: newsk"];
"1000444" -> "1000455"  [label="DDG: opt"];
"1000455" -> "1000465"  [label="DDG: newsk"];
"1000341" -> "1000339"  [label="AST: "];
"1000341" -> "1000342"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000339" -> "1000341"  [label="CFG: "];
"1000341" -> "1000339"  [label="DDG: newsk"];
"1000337" -> "1000341"  [label="DDG: newsk"];
"1000341" -> "1000465"  [label="DDG: newsk"];
"1000337" -> "1000335"  [label="AST: "];
"1000337" -> "1000338"  [label="CFG: "];
"1000338" -> "1000337"  [label="AST: "];
"1000335" -> "1000337"  [label="CFG: "];
"1000337" -> "1000335"  [label="DDG: newsk"];
"1000333" -> "1000337"  [label="DDG: newsk"];
"1000333" -> "1000331"  [label="AST: "];
"1000333" -> "1000334"  [label="CFG: "];
"1000334" -> "1000333"  [label="AST: "];
"1000331" -> "1000333"  [label="CFG: "];
"1000333" -> "1000331"  [label="DDG: newsk"];
"1000324" -> "1000333"  [label="DDG: newsk"];
"1000324" -> "1000323"  [label="AST: "];
"1000324" -> "1000325"  [label="CFG: "];
"1000325" -> "1000324"  [label="AST: "];
"1000326" -> "1000324"  [label="CFG: "];
"1000319" -> "1000324"  [label="DDG: newsk"];
"1000319" -> "1000317"  [label="AST: "];
"1000319" -> "1000321"  [label="CFG: "];
"1000320" -> "1000319"  [label="AST: "];
"1000321" -> "1000319"  [label="AST: "];
"1000317" -> "1000319"  [label="CFG: "];
"1000319" -> "1000317"  [label="DDG: newsk"];
"1000314" -> "1000319"  [label="DDG: newsk"];
"1000314" -> "1000117"  [label="AST: "];
"1000314" -> "1000316"  [label="CFG: "];
"1000315" -> "1000314"  [label="AST: "];
"1000316" -> "1000314"  [label="AST: "];
"1000318" -> "1000314"  [label="CFG: "];
"1000314" -> "1000646"  [label="DDG: inet6_sk_rx_dst_set(newsk, skb)"];
"1000314" -> "1000416"  [label="DDG: skb"];
"1000444" -> "1000117"  [label="AST: "];
"1000444" -> "1000446"  [label="CFG: "];
"1000445" -> "1000444"  [label="AST: "];
"1000446" -> "1000444"  [label="AST: "];
"1000451" -> "1000444"  [label="CFG: "];
"1000444" -> "1000646"  [label="DDG: rcu_dereference(np->opt)"];
"1000444" -> "1000646"  [label="DDG: opt"];
"1000446" -> "1000444"  [label="DDG: np->opt"];
"1000446" -> "1000447"  [label="CFG: "];
"1000447" -> "1000446"  [label="AST: "];
"1000446" -> "1000646"  [label="DDG: np->opt"];
}
