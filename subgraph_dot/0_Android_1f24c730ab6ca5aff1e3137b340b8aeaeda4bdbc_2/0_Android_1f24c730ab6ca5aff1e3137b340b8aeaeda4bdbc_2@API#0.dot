digraph "0_Android_1f24c730ab6ca5aff1e3137b340b8aeaeda4bdbc_2@API" {
"1000283" [label="(Call,mRecordingHeapFree = mRecordingHeapCount)"];
"1000277" [label="(Call,mRecordingBuffers.insertAt(0, mRecordingHeapCount))"];
"1000275" [label="(Call,mRecordingBuffers.setCapacity(mRecordingHeapCount))"];
"1000227" [label="(Call,ALOGV(\"%s: Camera %d: Creating recording heap with %zu buffers of \"\n \"size %zu bytes\", __FUNCTION__, mId,\n                    mRecordingHeapCount, payloadSize))"];
"1000223" [label="(Call,payloadSize = sizeof(VideoNativeMetadata))"];
"1000287" [label="(Call,mRecordingHeapFree == 0)"];
"1000309" [label="(Call,mRecordingHeapFree--)"];
"1000309" [label="(Call,mRecordingHeapFree--)"];
"1000278" [label="(Literal,0)"];
"1000232" [label="(Identifier,payloadSize)"];
"1000230" [label="(Identifier,mId)"];
"1000310" [label="(Identifier,mRecordingHeapFree)"];
"1000287" [label="(Call,mRecordingHeapFree == 0)"];
"1000227" [label="(Call,ALOGV(\"%s: Camera %d: Creating recording heap with %zu buffers of \"\n \"size %zu bytes\", __FUNCTION__, mId,\n                    mRecordingHeapCount, payloadSize))"];
"1000224" [label="(Identifier,payloadSize)"];
"1000279" [label="(Identifier,mRecordingHeapCount)"];
"1000270" [label="(Call,ALOGE(\"%s: Camera %d: Non-empty recording buffers list!\",\n                            __FUNCTION__, mId))"];
"1000292" [label="(Literal,\"%s: Camera %d: No free recording buffers, dropping frame\")"];
"1000283" [label="(Call,mRecordingHeapFree = mRecordingHeapCount)"];
"1000281" [label="(Identifier,mRecordingHeapHead)"];
"1000234" [label="(Identifier,mRecordingHeap)"];
"1000312" [label="(Literal,\"%s: Camera %d: Timestamp %lld\")"];
"1000228" [label="(Literal,\"%s: Camera %d: Creating recording heap with %zu buffers of \"\n \"size %zu bytes\")"];
"1000225" [label="(Call,sizeof(VideoNativeMetadata))"];
"1000397" [label="(MethodReturn,status_t)"];
"1000311" [label="(Call,ALOGVV(\"%s: Camera %d: Timestamp %lld\",\n                __FUNCTION__, mId, timestamp))"];
"1000276" [label="(Identifier,mRecordingHeapCount)"];
"1000152" [label="(Block,)"];
"1000223" [label="(Call,payloadSize = sizeof(VideoNativeMetadata))"];
"1000304" [label="(Call,(mRecordingHeapHead + 1) % mRecordingHeapCount)"];
"1000284" [label="(Identifier,mRecordingHeapFree)"];
"1000231" [label="(Identifier,mRecordingHeapCount)"];
"1000242" [label="(Call,ALOGE(\"%s: Camera %d: Unable to allocate memory for recording\",\n                        __FUNCTION__, mId))"];
"1000221" [label="(Block,)"];
"1000277" [label="(Call,mRecordingBuffers.insertAt(0, mRecordingHeapCount))"];
"1000229" [label="(Identifier,__FUNCTION__)"];
"1000288" [label="(Identifier,mRecordingHeapFree)"];
"1000285" [label="(Identifier,mRecordingHeapCount)"];
"1000300" [label="(Identifier,heapIdx)"];
"1000291" [label="(Call,ALOGE(\"%s: Camera %d: No free recording buffers, dropping frame\",\n                    __FUNCTION__, mId))"];
"1000286" [label="(ControlStructure,if (mRecordingHeapFree == 0))"];
"1000275" [label="(Call,mRecordingBuffers.setCapacity(mRecordingHeapCount))"];
"1000289" [label="(Literal,0)"];
"1000283" -> "1000221"  [label="AST: "];
"1000283" -> "1000285"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000285" -> "1000283"  [label="AST: "];
"1000288" -> "1000283"  [label="CFG: "];
"1000283" -> "1000397"  [label="DDG: "];
"1000277" -> "1000283"  [label="DDG: "];
"1000283" -> "1000287"  [label="DDG: "];
"1000277" -> "1000221"  [label="AST: "];
"1000277" -> "1000279"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000277"  [label="AST: "];
"1000281" -> "1000277"  [label="CFG: "];
"1000277" -> "1000397"  [label="DDG: "];
"1000275" -> "1000277"  [label="DDG: "];
"1000277" -> "1000304"  [label="DDG: "];
"1000275" -> "1000221"  [label="AST: "];
"1000275" -> "1000276"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000278" -> "1000275"  [label="CFG: "];
"1000275" -> "1000397"  [label="DDG: "];
"1000227" -> "1000275"  [label="DDG: "];
"1000227" -> "1000221"  [label="AST: "];
"1000227" -> "1000232"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000227"  [label="AST: "];
"1000230" -> "1000227"  [label="AST: "];
"1000231" -> "1000227"  [label="AST: "];
"1000232" -> "1000227"  [label="AST: "];
"1000234" -> "1000227"  [label="CFG: "];
"1000227" -> "1000397"  [label="DDG: "];
"1000227" -> "1000397"  [label="DDG: "];
"1000227" -> "1000397"  [label="DDG: "];
"1000223" -> "1000227"  [label="DDG: "];
"1000227" -> "1000242"  [label="DDG: "];
"1000227" -> "1000242"  [label="DDG: "];
"1000227" -> "1000270"  [label="DDG: "];
"1000227" -> "1000270"  [label="DDG: "];
"1000227" -> "1000291"  [label="DDG: "];
"1000227" -> "1000291"  [label="DDG: "];
"1000227" -> "1000311"  [label="DDG: "];
"1000227" -> "1000311"  [label="DDG: "];
"1000223" -> "1000221"  [label="AST: "];
"1000223" -> "1000225"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000225" -> "1000223"  [label="AST: "];
"1000228" -> "1000223"  [label="CFG: "];
"1000287" -> "1000286"  [label="AST: "];
"1000287" -> "1000289"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000287"  [label="AST: "];
"1000292" -> "1000287"  [label="CFG: "];
"1000300" -> "1000287"  [label="CFG: "];
"1000287" -> "1000397"  [label="DDG: "];
"1000287" -> "1000397"  [label="DDG: "];
"1000287" -> "1000309"  [label="DDG: "];
"1000309" -> "1000152"  [label="AST: "];
"1000309" -> "1000310"  [label="CFG: "];
"1000310" -> "1000309"  [label="AST: "];
"1000312" -> "1000309"  [label="CFG: "];
"1000309" -> "1000397"  [label="DDG: "];
}
