digraph "0_linux_28f5a8a7c033cbf3e32277f4cc9c6afd74f05300@pointer" {
"1000135" [label="(Call,*bh = NULL)"];
"1000320" [label="(Call,ocfs2_truncate_file(inode, bh, attr->ia_size))"];
"1000318" [label="(Call,status = ocfs2_truncate_file(inode, bh, attr->ia_size))"];
"1000336" [label="(Call,status < 0)"];
"1000341" [label="(Call,status != -ENOSPC)"];
"1000345" [label="(Call,mlog_errno(status))"];
"1000492" [label="(Call,__dquot_transfer(inode, transfer_to))"];
"1000490" [label="(Call,status = __dquot_transfer(inode, transfer_to))"];
"1000496" [label="(Call,status < 0)"];
"1000541" [label="(Call,status && inode_locked)"];
"1000576" [label="(Call,!status)"];
"1000575" [label="(Call,!status && attr->ia_valid & ATTR_MODE)"];
"1000605" [label="(Return,return status;)"];
"1000518" [label="(Call,setattr_copy(inode, attr))"];
"1000521" [label="(Call,mark_inode_dirty(inode))"];
"1000525" [label="(Call,ocfs2_mark_inode_dirty(handle, inode, bh))"];
"1000523" [label="(Call,status = ocfs2_mark_inode_dirty(handle, inode, bh))"];
"1000530" [label="(Call,status < 0)"];
"1000533" [label="(Call,mlog_errno(status))"];
"1000536" [label="(Call,ocfs2_commit_trans(osb, handle))"];
"1000545" [label="(Call,ocfs2_inode_unlock_tracker(inode, 1, &oh, had_lock))"];
"1000557" [label="(Call,ocfs2_rw_unlock(inode, 1))"];
"1000586" [label="(Call,ocfs2_acl_chmod(inode, bh))"];
"1000584" [label="(Call,status = ocfs2_acl_chmod(inode, bh))"];
"1000590" [label="(Call,status < 0)"];
"1000593" [label="(Call,mlog_errno(status))"];
"1000597" [label="(Call,ocfs2_inode_unlock_tracker(inode, 1, &oh, had_lock))"];
"1000603" [label="(Call,brelse(bh))"];
"1000570" [label="(Call,dqput(transfer_to[qtype]))"];
"1000329" [label="(Call,ocfs2_extend_file(inode, bh, attr->ia_size))"];
"1000327" [label="(Call,status = ocfs2_extend_file(inode, bh, attr->ia_size))"];
"1000135" [label="(Call,*bh = NULL)"];
"1000598" [label="(Identifier,inode)"];
"1000357" [label="(Identifier,attr)"];
"1000546" [label="(Identifier,inode)"];
"1000604" [label="(Identifier,bh)"];
"1000538" [label="(Identifier,handle)"];
"1000320" [label="(Call,ocfs2_truncate_file(inode, bh, attr->ia_size))"];
"1000303" [label="(Block,)"];
"1000280" [label="(Call,inode_locked = 1)"];
"1000498" [label="(Literal,0)"];
"1000490" [label="(Call,status = __dquot_transfer(inode, transfer_to))"];
"1000542" [label="(Identifier,status)"];
"1000297" [label="(Call,i_size_read(inode) >= attr->ia_size)"];
"1000107" [label="(MethodParameterIn,struct iattr *attr)"];
"1000584" [label="(Call,status = ocfs2_acl_chmod(inode, bh))"];
"1000577" [label="(Identifier,status)"];
"1000529" [label="(ControlStructure,if (status < 0))"];
"1000605" [label="(Return,return status;)"];
"1000550" [label="(Identifier,had_lock)"];
"1000345" [label="(Call,mlog_errno(status))"];
"1000527" [label="(Identifier,inode)"];
"1000471" [label="(Call,ocfs2_start_trans(osb, OCFS2_INODE_UPDATE_CREDITS +\n\t\t\t\t\t   2 * ocfs2_quota_trans_credits(sb)))"];
"1000504" [label="(Call,ocfs2_start_trans(osb, OCFS2_INODE_UPDATE_CREDITS))"];
"1000576" [label="(Call,!status)"];
"1000419" [label="(Call,status = PTR_ERR(transfer_to[USRQUOTA]))"];
"1000537" [label="(Identifier,osb)"];
"1000587" [label="(Identifier,inode)"];
"1000487" [label="(Call,mlog_errno(status))"];
"1000327" [label="(Call,status = ocfs2_extend_file(inode, bh, attr->ia_size))"];
"1000534" [label="(Identifier,status)"];
"1000212" [label="(Call,is_quota_modification(inode, attr))"];
"1000508" [label="(Call,IS_ERR(handle))"];
"1000495" [label="(ControlStructure,if (status < 0))"];
"1000591" [label="(Identifier,status)"];
"1000540" [label="(ControlStructure,if (status && inode_locked))"];
"1000594" [label="(Identifier,status)"];
"1000515" [label="(Call,mlog_errno(status))"];
"1000580" [label="(Identifier,attr)"];
"1000493" [label="(Identifier,inode)"];
"1000522" [label="(Identifier,inode)"];
"1000570" [label="(Call,dqput(transfer_to[qtype]))"];
"1000531" [label="(Identifier,status)"];
"1000497" [label="(Identifier,status)"];
"1000595" [label="(ControlStructure,if (inode_locked))"];
"1000603" [label="(Call,brelse(bh))"];
"1000518" [label="(Call,setattr_copy(inode, attr))"];
"1000382" [label="(Block,)"];
"1000340" [label="(ControlStructure,if (status != -ENOSPC))"];
"1000559" [label="(Literal,1)"];
"1000288" [label="(Call,inode_newsize_ok(inode, attr->ia_size))"];
"1000243" [label="(Call,ocfs2_rw_lock(inode, 1))"];
"1000528" [label="(Identifier,bh)"];
"1000532" [label="(Literal,0)"];
"1000599" [label="(Literal,1)"];
"1000328" [label="(Identifier,status)"];
"1000499" [label="(ControlStructure,goto bail_commit;)"];
"1000286" [label="(Call,status = inode_newsize_ok(inode, attr->ia_size))"];
"1000555" [label="(ControlStructure,if (size_change))"];
"1000541" [label="(Call,status && inode_locked)"];
"1000140" [label="(Identifier,handle)"];
"1000536" [label="(Call,ocfs2_commit_trans(osb, handle))"];
"1000574" [label="(ControlStructure,if (!status && attr->ia_valid & ATTR_MODE))"];
"1000535" [label="(JumpTarget,bail_commit:)"];
"1000329" [label="(Call,ocfs2_extend_file(inode, bh, attr->ia_size))"];
"1000318" [label="(Call,status = ocfs2_truncate_file(inode, bh, attr->ia_size))"];
"1000569" [label="(Identifier,qtype)"];
"1000530" [label="(Call,status < 0)"];
"1000523" [label="(Call,status = ocfs2_mark_inode_dirty(handle, inode, bh))"];
"1000323" [label="(Call,attr->ia_size)"];
"1000346" [label="(Identifier,status)"];
"1000588" [label="(Identifier,bh)"];
"1000597" [label="(Call,ocfs2_inode_unlock_tracker(inode, 1, &oh, had_lock))"];
"1000343" [label="(Call,-ENOSPC)"];
"1000575" [label="(Call,!status && attr->ia_valid & ATTR_MODE)"];
"1000526" [label="(Identifier,handle)"];
"1000557" [label="(Call,ocfs2_rw_unlock(inode, 1))"];
"1000596" [label="(Identifier,inode_locked)"];
"1000332" [label="(Call,attr->ia_size)"];
"1000298" [label="(Call,i_size_read(inode))"];
"1000342" [label="(Identifier,status)"];
"1000251" [label="(Call,mlog_errno(status))"];
"1000268" [label="(Call,status = had_lock)"];
"1000589" [label="(ControlStructure,if (status < 0))"];
"1000520" [label="(Identifier,attr)"];
"1000457" [label="(Call,IS_ERR(transfer_to[GRPQUOTA]))"];
"1000492" [label="(Call,__dquot_transfer(inode, transfer_to))"];
"1000494" [label="(Identifier,transfer_to)"];
"1000606" [label="(Identifier,status)"];
"1000496" [label="(Call,status < 0)"];
"1000558" [label="(Identifier,inode)"];
"1000136" [label="(Identifier,bh)"];
"1000256" [label="(Call,ocfs2_inode_lock_tracker(inode, &bh, 1, &oh))"];
"1000480" [label="(Call,IS_ERR(handle))"];
"1000545" [label="(Call,ocfs2_inode_unlock_tracker(inode, 1, &oh, had_lock))"];
"1000264" [label="(Call,had_lock < 0)"];
"1000338" [label="(Literal,0)"];
"1000330" [label="(Identifier,inode)"];
"1000348" [label="(Identifier,status)"];
"1000322" [label="(Identifier,bh)"];
"1000585" [label="(Identifier,status)"];
"1000547" [label="(Literal,1)"];
"1000583" [label="(Block,)"];
"1000600" [label="(Call,&oh)"];
"1000310" [label="(Call,ocfs2_begin_ordered_truncate(inode,\n\t\t\t\t\t\t\t\t      attr->ia_size))"];
"1000519" [label="(Identifier,inode)"];
"1000560" [label="(JumpTarget,bail:)"];
"1000586" [label="(Call,ocfs2_acl_chmod(inode, bh))"];
"1000137" [label="(Identifier,NULL)"];
"1000578" [label="(Call,attr->ia_valid & ATTR_MODE)"];
"1000524" [label="(Identifier,status)"];
"1000592" [label="(Literal,0)"];
"1000543" [label="(Identifier,inode_locked)"];
"1000491" [label="(Identifier,status)"];
"1000539" [label="(JumpTarget,bail_unlock:)"];
"1000607" [label="(MethodReturn,int)"];
"1000331" [label="(Identifier,bh)"];
"1000326" [label="(ControlStructure,else)"];
"1000590" [label="(Call,status < 0)"];
"1000554" [label="(JumpTarget,bail_unlock_rw:)"];
"1000108" [label="(Block,)"];
"1000552" [label="(Identifier,inode_locked)"];
"1000525" [label="(Call,ocfs2_mark_inode_dirty(handle, inode, bh))"];
"1000602" [label="(Identifier,had_lock)"];
"1000571" [label="(Call,transfer_to[qtype])"];
"1000593" [label="(Call,mlog_errno(status))"];
"1000305" [label="(Call,ocfs2_should_order_data(inode))"];
"1000533" [label="(Call,mlog_errno(status))"];
"1000341" [label="(Call,status != -ENOSPC)"];
"1000462" [label="(Call,status = PTR_ERR(transfer_to[GRPQUOTA]))"];
"1000544" [label="(Block,)"];
"1000308" [label="(Call,status = ocfs2_begin_ordered_truncate(inode,\n\t\t\t\t\t\t\t\t      attr->ia_size))"];
"1000337" [label="(Identifier,status)"];
"1000335" [label="(ControlStructure,if (status < 0))"];
"1000347" [label="(Call,status = -ENOSPC)"];
"1000548" [label="(Call,&oh)"];
"1000414" [label="(Call,IS_ERR(transfer_to[USRQUOTA]))"];
"1000321" [label="(Identifier,inode)"];
"1000319" [label="(Identifier,status)"];
"1000561" [label="(ControlStructure,for (qtype = 0; qtype < OCFS2_MAXQUOTAS; qtype++))"];
"1000336" [label="(Call,status < 0)"];
"1000521" [label="(Call,mark_inode_dirty(inode))"];
"1000135" -> "1000108"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000140" -> "1000135"  [label="CFG: "];
"1000135" -> "1000607"  [label="DDG: bh"];
"1000135" -> "1000320"  [label="DDG: bh"];
"1000135" -> "1000329"  [label="DDG: bh"];
"1000135" -> "1000525"  [label="DDG: bh"];
"1000135" -> "1000586"  [label="DDG: bh"];
"1000135" -> "1000603"  [label="DDG: bh"];
"1000320" -> "1000318"  [label="AST: "];
"1000320" -> "1000323"  [label="CFG: "];
"1000321" -> "1000320"  [label="AST: "];
"1000322" -> "1000320"  [label="AST: "];
"1000323" -> "1000320"  [label="AST: "];
"1000318" -> "1000320"  [label="CFG: "];
"1000320" -> "1000607"  [label="DDG: attr->ia_size"];
"1000320" -> "1000607"  [label="DDG: inode"];
"1000320" -> "1000318"  [label="DDG: inode"];
"1000320" -> "1000318"  [label="DDG: bh"];
"1000320" -> "1000318"  [label="DDG: attr->ia_size"];
"1000310" -> "1000320"  [label="DDG: inode"];
"1000310" -> "1000320"  [label="DDG: attr->ia_size"];
"1000305" -> "1000320"  [label="DDG: inode"];
"1000297" -> "1000320"  [label="DDG: attr->ia_size"];
"1000320" -> "1000492"  [label="DDG: inode"];
"1000320" -> "1000518"  [label="DDG: inode"];
"1000320" -> "1000525"  [label="DDG: bh"];
"1000320" -> "1000545"  [label="DDG: inode"];
"1000320" -> "1000557"  [label="DDG: inode"];
"1000320" -> "1000586"  [label="DDG: inode"];
"1000320" -> "1000586"  [label="DDG: bh"];
"1000320" -> "1000597"  [label="DDG: inode"];
"1000320" -> "1000603"  [label="DDG: bh"];
"1000318" -> "1000303"  [label="AST: "];
"1000319" -> "1000318"  [label="AST: "];
"1000337" -> "1000318"  [label="CFG: "];
"1000318" -> "1000607"  [label="DDG: ocfs2_truncate_file(inode, bh, attr->ia_size)"];
"1000318" -> "1000336"  [label="DDG: status"];
"1000336" -> "1000335"  [label="AST: "];
"1000336" -> "1000338"  [label="CFG: "];
"1000337" -> "1000336"  [label="AST: "];
"1000338" -> "1000336"  [label="AST: "];
"1000342" -> "1000336"  [label="CFG: "];
"1000357" -> "1000336"  [label="CFG: "];
"1000336" -> "1000607"  [label="DDG: status < 0"];
"1000327" -> "1000336"  [label="DDG: status"];
"1000336" -> "1000341"  [label="DDG: status"];
"1000341" -> "1000340"  [label="AST: "];
"1000341" -> "1000343"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="AST: "];
"1000346" -> "1000341"  [label="CFG: "];
"1000348" -> "1000341"  [label="CFG: "];
"1000341" -> "1000607"  [label="DDG: status != -ENOSPC"];
"1000343" -> "1000341"  [label="DDG: ENOSPC"];
"1000341" -> "1000345"  [label="DDG: status"];
"1000345" -> "1000340"  [label="AST: "];
"1000345" -> "1000346"  [label="CFG: "];
"1000346" -> "1000345"  [label="AST: "];
"1000348" -> "1000345"  [label="CFG: "];
"1000345" -> "1000607"  [label="DDG: mlog_errno(status)"];
"1000492" -> "1000490"  [label="AST: "];
"1000492" -> "1000494"  [label="CFG: "];
"1000493" -> "1000492"  [label="AST: "];
"1000494" -> "1000492"  [label="AST: "];
"1000490" -> "1000492"  [label="CFG: "];
"1000492" -> "1000607"  [label="DDG: transfer_to"];
"1000492" -> "1000607"  [label="DDG: inode"];
"1000492" -> "1000490"  [label="DDG: inode"];
"1000492" -> "1000490"  [label="DDG: transfer_to"];
"1000329" -> "1000492"  [label="DDG: inode"];
"1000256" -> "1000492"  [label="DDG: inode"];
"1000414" -> "1000492"  [label="DDG: transfer_to[USRQUOTA]"];
"1000457" -> "1000492"  [label="DDG: transfer_to[GRPQUOTA]"];
"1000492" -> "1000518"  [label="DDG: inode"];
"1000492" -> "1000545"  [label="DDG: inode"];
"1000492" -> "1000557"  [label="DDG: inode"];
"1000492" -> "1000570"  [label="DDG: transfer_to"];
"1000492" -> "1000586"  [label="DDG: inode"];
"1000492" -> "1000597"  [label="DDG: inode"];
"1000490" -> "1000382"  [label="AST: "];
"1000491" -> "1000490"  [label="AST: "];
"1000497" -> "1000490"  [label="CFG: "];
"1000490" -> "1000607"  [label="DDG: __dquot_transfer(inode, transfer_to)"];
"1000490" -> "1000496"  [label="DDG: status"];
"1000496" -> "1000495"  [label="AST: "];
"1000496" -> "1000498"  [label="CFG: "];
"1000497" -> "1000496"  [label="AST: "];
"1000498" -> "1000496"  [label="AST: "];
"1000499" -> "1000496"  [label="CFG: "];
"1000519" -> "1000496"  [label="CFG: "];
"1000496" -> "1000607"  [label="DDG: status < 0"];
"1000496" -> "1000541"  [label="DDG: status"];
"1000541" -> "1000540"  [label="AST: "];
"1000541" -> "1000542"  [label="CFG: "];
"1000541" -> "1000543"  [label="CFG: "];
"1000542" -> "1000541"  [label="AST: "];
"1000543" -> "1000541"  [label="AST: "];
"1000546" -> "1000541"  [label="CFG: "];
"1000554" -> "1000541"  [label="CFG: "];
"1000541" -> "1000607"  [label="DDG: inode_locked"];
"1000541" -> "1000607"  [label="DDG: status && inode_locked"];
"1000308" -> "1000541"  [label="DDG: status"];
"1000286" -> "1000541"  [label="DDG: status"];
"1000487" -> "1000541"  [label="DDG: status"];
"1000515" -> "1000541"  [label="DDG: status"];
"1000533" -> "1000541"  [label="DDG: status"];
"1000462" -> "1000541"  [label="DDG: status"];
"1000530" -> "1000541"  [label="DDG: status"];
"1000419" -> "1000541"  [label="DDG: status"];
"1000347" -> "1000541"  [label="DDG: status"];
"1000280" -> "1000541"  [label="DDG: inode_locked"];
"1000541" -> "1000576"  [label="DDG: status"];
"1000576" -> "1000575"  [label="AST: "];
"1000576" -> "1000577"  [label="CFG: "];
"1000577" -> "1000576"  [label="AST: "];
"1000580" -> "1000576"  [label="CFG: "];
"1000575" -> "1000576"  [label="CFG: "];
"1000576" -> "1000607"  [label="DDG: status"];
"1000576" -> "1000575"  [label="DDG: status"];
"1000268" -> "1000576"  [label="DDG: status"];
"1000251" -> "1000576"  [label="DDG: status"];
"1000576" -> "1000605"  [label="DDG: status"];
"1000575" -> "1000574"  [label="AST: "];
"1000575" -> "1000578"  [label="CFG: "];
"1000578" -> "1000575"  [label="AST: "];
"1000585" -> "1000575"  [label="CFG: "];
"1000596" -> "1000575"  [label="CFG: "];
"1000575" -> "1000607"  [label="DDG: !status && attr->ia_valid & ATTR_MODE"];
"1000575" -> "1000607"  [label="DDG: attr->ia_valid & ATTR_MODE"];
"1000575" -> "1000607"  [label="DDG: !status"];
"1000578" -> "1000575"  [label="DDG: attr->ia_valid"];
"1000578" -> "1000575"  [label="DDG: ATTR_MODE"];
"1000605" -> "1000108"  [label="AST: "];
"1000605" -> "1000606"  [label="CFG: "];
"1000606" -> "1000605"  [label="AST: "];
"1000607" -> "1000605"  [label="CFG: "];
"1000605" -> "1000607"  [label="DDG: <RET>"];
"1000606" -> "1000605"  [label="DDG: status"];
"1000590" -> "1000605"  [label="DDG: status"];
"1000593" -> "1000605"  [label="DDG: status"];
"1000518" -> "1000108"  [label="AST: "];
"1000518" -> "1000520"  [label="CFG: "];
"1000519" -> "1000518"  [label="AST: "];
"1000520" -> "1000518"  [label="AST: "];
"1000522" -> "1000518"  [label="CFG: "];
"1000518" -> "1000607"  [label="DDG: attr"];
"1000518" -> "1000607"  [label="DDG: setattr_copy(inode, attr)"];
"1000329" -> "1000518"  [label="DDG: inode"];
"1000256" -> "1000518"  [label="DDG: inode"];
"1000212" -> "1000518"  [label="DDG: attr"];
"1000107" -> "1000518"  [label="DDG: attr"];
"1000518" -> "1000521"  [label="DDG: inode"];
"1000521" -> "1000108"  [label="AST: "];
"1000521" -> "1000522"  [label="CFG: "];
"1000522" -> "1000521"  [label="AST: "];
"1000524" -> "1000521"  [label="CFG: "];
"1000521" -> "1000607"  [label="DDG: mark_inode_dirty(inode)"];
"1000521" -> "1000525"  [label="DDG: inode"];
"1000525" -> "1000523"  [label="AST: "];
"1000525" -> "1000528"  [label="CFG: "];
"1000526" -> "1000525"  [label="AST: "];
"1000527" -> "1000525"  [label="AST: "];
"1000528" -> "1000525"  [label="AST: "];
"1000523" -> "1000525"  [label="CFG: "];
"1000525" -> "1000607"  [label="DDG: inode"];
"1000525" -> "1000523"  [label="DDG: handle"];
"1000525" -> "1000523"  [label="DDG: inode"];
"1000525" -> "1000523"  [label="DDG: bh"];
"1000508" -> "1000525"  [label="DDG: handle"];
"1000480" -> "1000525"  [label="DDG: handle"];
"1000329" -> "1000525"  [label="DDG: bh"];
"1000525" -> "1000536"  [label="DDG: handle"];
"1000525" -> "1000545"  [label="DDG: inode"];
"1000525" -> "1000557"  [label="DDG: inode"];
"1000525" -> "1000586"  [label="DDG: inode"];
"1000525" -> "1000586"  [label="DDG: bh"];
"1000525" -> "1000597"  [label="DDG: inode"];
"1000525" -> "1000603"  [label="DDG: bh"];
"1000523" -> "1000108"  [label="AST: "];
"1000524" -> "1000523"  [label="AST: "];
"1000531" -> "1000523"  [label="CFG: "];
"1000523" -> "1000607"  [label="DDG: ocfs2_mark_inode_dirty(handle, inode, bh)"];
"1000523" -> "1000530"  [label="DDG: status"];
"1000530" -> "1000529"  [label="AST: "];
"1000530" -> "1000532"  [label="CFG: "];
"1000531" -> "1000530"  [label="AST: "];
"1000532" -> "1000530"  [label="AST: "];
"1000534" -> "1000530"  [label="CFG: "];
"1000535" -> "1000530"  [label="CFG: "];
"1000530" -> "1000607"  [label="DDG: status < 0"];
"1000530" -> "1000533"  [label="DDG: status"];
"1000533" -> "1000529"  [label="AST: "];
"1000533" -> "1000534"  [label="CFG: "];
"1000534" -> "1000533"  [label="AST: "];
"1000535" -> "1000533"  [label="CFG: "];
"1000533" -> "1000607"  [label="DDG: mlog_errno(status)"];
"1000536" -> "1000108"  [label="AST: "];
"1000536" -> "1000538"  [label="CFG: "];
"1000537" -> "1000536"  [label="AST: "];
"1000538" -> "1000536"  [label="AST: "];
"1000539" -> "1000536"  [label="CFG: "];
"1000536" -> "1000607"  [label="DDG: ocfs2_commit_trans(osb, handle)"];
"1000536" -> "1000607"  [label="DDG: handle"];
"1000536" -> "1000607"  [label="DDG: osb"];
"1000471" -> "1000536"  [label="DDG: osb"];
"1000504" -> "1000536"  [label="DDG: osb"];
"1000480" -> "1000536"  [label="DDG: handle"];
"1000545" -> "1000544"  [label="AST: "];
"1000545" -> "1000550"  [label="CFG: "];
"1000546" -> "1000545"  [label="AST: "];
"1000547" -> "1000545"  [label="AST: "];
"1000548" -> "1000545"  [label="AST: "];
"1000550" -> "1000545"  [label="AST: "];
"1000552" -> "1000545"  [label="CFG: "];
"1000545" -> "1000607"  [label="DDG: had_lock"];
"1000545" -> "1000607"  [label="DDG: &oh"];
"1000545" -> "1000607"  [label="DDG: inode"];
"1000545" -> "1000607"  [label="DDG: ocfs2_inode_unlock_tracker(inode, 1, &oh, had_lock)"];
"1000310" -> "1000545"  [label="DDG: inode"];
"1000288" -> "1000545"  [label="DDG: inode"];
"1000329" -> "1000545"  [label="DDG: inode"];
"1000256" -> "1000545"  [label="DDG: inode"];
"1000256" -> "1000545"  [label="DDG: &oh"];
"1000264" -> "1000545"  [label="DDG: had_lock"];
"1000545" -> "1000557"  [label="DDG: inode"];
"1000545" -> "1000586"  [label="DDG: inode"];
"1000545" -> "1000597"  [label="DDG: inode"];
"1000545" -> "1000597"  [label="DDG: &oh"];
"1000545" -> "1000597"  [label="DDG: had_lock"];
"1000557" -> "1000555"  [label="AST: "];
"1000557" -> "1000559"  [label="CFG: "];
"1000558" -> "1000557"  [label="AST: "];
"1000559" -> "1000557"  [label="AST: "];
"1000560" -> "1000557"  [label="CFG: "];
"1000557" -> "1000607"  [label="DDG: ocfs2_rw_unlock(inode, 1)"];
"1000557" -> "1000607"  [label="DDG: inode"];
"1000310" -> "1000557"  [label="DDG: inode"];
"1000288" -> "1000557"  [label="DDG: inode"];
"1000329" -> "1000557"  [label="DDG: inode"];
"1000256" -> "1000557"  [label="DDG: inode"];
"1000557" -> "1000586"  [label="DDG: inode"];
"1000557" -> "1000597"  [label="DDG: inode"];
"1000586" -> "1000584"  [label="AST: "];
"1000586" -> "1000588"  [label="CFG: "];
"1000587" -> "1000586"  [label="AST: "];
"1000588" -> "1000586"  [label="AST: "];
"1000584" -> "1000586"  [label="CFG: "];
"1000586" -> "1000607"  [label="DDG: inode"];
"1000586" -> "1000584"  [label="DDG: inode"];
"1000586" -> "1000584"  [label="DDG: bh"];
"1000310" -> "1000586"  [label="DDG: inode"];
"1000288" -> "1000586"  [label="DDG: inode"];
"1000329" -> "1000586"  [label="DDG: inode"];
"1000329" -> "1000586"  [label="DDG: bh"];
"1000243" -> "1000586"  [label="DDG: inode"];
"1000256" -> "1000586"  [label="DDG: inode"];
"1000586" -> "1000597"  [label="DDG: inode"];
"1000586" -> "1000603"  [label="DDG: bh"];
"1000584" -> "1000583"  [label="AST: "];
"1000585" -> "1000584"  [label="AST: "];
"1000591" -> "1000584"  [label="CFG: "];
"1000584" -> "1000607"  [label="DDG: ocfs2_acl_chmod(inode, bh)"];
"1000584" -> "1000590"  [label="DDG: status"];
"1000590" -> "1000589"  [label="AST: "];
"1000590" -> "1000592"  [label="CFG: "];
"1000591" -> "1000590"  [label="AST: "];
"1000592" -> "1000590"  [label="AST: "];
"1000594" -> "1000590"  [label="CFG: "];
"1000596" -> "1000590"  [label="CFG: "];
"1000590" -> "1000607"  [label="DDG: status < 0"];
"1000590" -> "1000607"  [label="DDG: status"];
"1000590" -> "1000593"  [label="DDG: status"];
"1000593" -> "1000589"  [label="AST: "];
"1000593" -> "1000594"  [label="CFG: "];
"1000594" -> "1000593"  [label="AST: "];
"1000596" -> "1000593"  [label="CFG: "];
"1000593" -> "1000607"  [label="DDG: status"];
"1000593" -> "1000607"  [label="DDG: mlog_errno(status)"];
"1000597" -> "1000595"  [label="AST: "];
"1000597" -> "1000602"  [label="CFG: "];
"1000598" -> "1000597"  [label="AST: "];
"1000599" -> "1000597"  [label="AST: "];
"1000600" -> "1000597"  [label="AST: "];
"1000602" -> "1000597"  [label="AST: "];
"1000604" -> "1000597"  [label="CFG: "];
"1000597" -> "1000607"  [label="DDG: inode"];
"1000597" -> "1000607"  [label="DDG: ocfs2_inode_unlock_tracker(inode, 1, &oh, had_lock)"];
"1000597" -> "1000607"  [label="DDG: had_lock"];
"1000597" -> "1000607"  [label="DDG: &oh"];
"1000310" -> "1000597"  [label="DDG: inode"];
"1000288" -> "1000597"  [label="DDG: inode"];
"1000329" -> "1000597"  [label="DDG: inode"];
"1000243" -> "1000597"  [label="DDG: inode"];
"1000256" -> "1000597"  [label="DDG: inode"];
"1000256" -> "1000597"  [label="DDG: &oh"];
"1000264" -> "1000597"  [label="DDG: had_lock"];
"1000603" -> "1000108"  [label="AST: "];
"1000603" -> "1000604"  [label="CFG: "];
"1000604" -> "1000603"  [label="AST: "];
"1000606" -> "1000603"  [label="CFG: "];
"1000603" -> "1000607"  [label="DDG: bh"];
"1000603" -> "1000607"  [label="DDG: brelse(bh)"];
"1000329" -> "1000603"  [label="DDG: bh"];
"1000570" -> "1000561"  [label="AST: "];
"1000570" -> "1000571"  [label="CFG: "];
"1000571" -> "1000570"  [label="AST: "];
"1000569" -> "1000570"  [label="CFG: "];
"1000570" -> "1000607"  [label="DDG: transfer_to[qtype]"];
"1000570" -> "1000607"  [label="DDG: dqput(transfer_to[qtype])"];
"1000329" -> "1000327"  [label="AST: "];
"1000329" -> "1000332"  [label="CFG: "];
"1000330" -> "1000329"  [label="AST: "];
"1000331" -> "1000329"  [label="AST: "];
"1000332" -> "1000329"  [label="AST: "];
"1000327" -> "1000329"  [label="CFG: "];
"1000329" -> "1000607"  [label="DDG: attr->ia_size"];
"1000329" -> "1000607"  [label="DDG: inode"];
"1000329" -> "1000327"  [label="DDG: inode"];
"1000329" -> "1000327"  [label="DDG: bh"];
"1000329" -> "1000327"  [label="DDG: attr->ia_size"];
"1000298" -> "1000329"  [label="DDG: inode"];
"1000297" -> "1000329"  [label="DDG: attr->ia_size"];
"1000327" -> "1000326"  [label="AST: "];
"1000328" -> "1000327"  [label="AST: "];
"1000337" -> "1000327"  [label="CFG: "];
"1000327" -> "1000607"  [label="DDG: ocfs2_extend_file(inode, bh, attr->ia_size)"];
}
