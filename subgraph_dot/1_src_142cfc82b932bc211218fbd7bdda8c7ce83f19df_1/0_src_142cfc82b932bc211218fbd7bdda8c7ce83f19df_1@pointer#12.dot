digraph "0_src_142cfc82b932bc211218fbd7bdda8c7ce83f19df_1@pointer" {
"1000401" [label="(Call,media = &multipart_media)"];
"1000413" [label="(Call,server_response_http(clt, 206, media, content_length,\n \t    MINIMUM(time(NULL), st->st_mtim.tv_sec)))"];
"1000411" [label="(Call,ret = server_response_http(clt, 206, media, content_length,\n \t    MINIMUM(time(NULL), st->st_mtim.tv_sec)))"];
"1000437" [label="(Call,server_bufferevent_write_buffer(clt, evb))"];
"1000436" [label="(Call,server_bufferevent_write_buffer(clt, evb) == -1)"];
"1000471" [label="(Call,evbuffer_free(evb))"];
"1000473" [label="(Call,server_reset_http(clt))"];
"1000496" [label="(Call,evb != NULL)"];
"1000499" [label="(Call,evbuffer_free(evb))"];
"1000509" [label="(Call,errstr == NULL)"];
"1000516" [label="(Call,server_abort_http(clt, code, errstr))"];
"1000439" [label="(Identifier,evb)"];
"1000436" [label="(Call,server_bufferevent_write_buffer(clt, evb) == -1)"];
"1000292" [label="(Call,evbuffer_add_printf(evb, \"\r\n--%ud\r\n\",\n\t\t\t    boundary))"];
"1000325" [label="(Call,evbuffer_add_printf(evb,\n \t\t\t    \"Content-Range: bytes %lld-%lld/%lld\r\n\r\n\",\n\t\t\t    range->start, range->end, st->st_size))"];
"1000509" [label="(Call,errstr == NULL)"];
"1000497" [label="(Identifier,evb)"];
"1000139" [label="(Call,code = 500)"];
"1000512" [label="(Call,errstr = strerror(errno))"];
"1000503" [label="(Identifier,fd)"];
"1000413" [label="(Call,server_response_http(clt, 206, media, content_length,\n \t    MINIMUM(time(NULL), st->st_mtim.tv_sec)))"];
"1000437" [label="(Call,server_bufferevent_write_buffer(clt, evb))"];
"1000445" [label="(Identifier,clt)"];
"1000427" [label="(Identifier,ret)"];
"1000500" [label="(Identifier,evb)"];
"1000345" [label="(Call,buffer_add_range(fd, evb, range))"];
"1000495" [label="(ControlStructure,if (evb != NULL))"];
"1000247" [label="(Call,kv_add(&resp->http_headers, \"Content-Range\",\n \t\t    content_range) == NULL)"];
"1000221" [label="(Call,errstr = \"failed to allocate file buffer\")"];
"1000401" [label="(Call,media = &multipart_media)"];
"1000473" [label="(Call,server_reset_http(clt))"];
"1000411" [label="(Call,ret = server_response_http(clt, 206, media, content_length,\n \t    MINIMUM(time(NULL), st->st_mtim.tv_sec)))"];
"1000257" [label="(Call,content_length = range->end - range->start + 1)"];
"1000522" [label="(Literal,1)"];
"1000194" [label="(Call,errstr = content_range)"];
"1000270" [label="(Call,buffer_add_range(fd, evb, range))"];
"1000513" [label="(Identifier,errstr)"];
"1000416" [label="(Identifier,media)"];
"1000496" [label="(Call,evb != NULL)"];
"1000215" [label="(Call,(evb = evbuffer_new()) == NULL)"];
"1000517" [label="(Identifier,clt)"];
"1000498" [label="(Identifier,NULL)"];
"1000277" [label="(Block,)"];
"1000111" [label="(Block,)"];
"1000499" [label="(Call,evbuffer_free(evb))"];
"1000414" [label="(Identifier,clt)"];
"1000518" [label="(Identifier,code)"];
"1000471" [label="(Call,evbuffer_free(evb))"];
"1000474" [label="(Identifier,clt)"];
"1000406" [label="(Identifier,fd)"];
"1000418" [label="(Call,MINIMUM(time(NULL), st->st_mtim.tv_sec))"];
"1000216" [label="(Call,evb = evbuffer_new())"];
"1000169" [label="(Call,(range = parse_range(range_str, st->st_size, &nranges)) == NULL)"];
"1000441" [label="(Literal,1)"];
"1000419" [label="(Call,time(NULL))"];
"1000375" [label="(Call,content_length += i)"];
"1000511" [label="(Identifier,NULL)"];
"1000402" [label="(Identifier,media)"];
"1000153" [label="(Call,*errstr = NULL)"];
"1000472" [label="(Identifier,evb)"];
"1000107" [label="(MethodParameterIn,struct client *clt)"];
"1000508" [label="(ControlStructure,if (errstr == NULL))"];
"1000476" [label="(Literal,0)"];
"1000306" [label="(Call,evbuffer_add_printf(evb,\n\t\t\t    \"Content-Type: %s/%s\r\n\",\n\t\t\t    media->media_type, media->media_subtype))"];
"1000438" [label="(Identifier,clt)"];
"1000368" [label="(Call,evbuffer_add_printf(evb, \"\r\n--%ud--\r\n\",\n\t\t    boundary))"];
"1000134" [label="(Call,*evb = NULL)"];
"1000516" [label="(Call,server_abort_http(clt, code, errstr))"];
"1000412" [label="(Identifier,ret)"];
"1000440" [label="(Call,-1)"];
"1000510" [label="(Identifier,errstr)"];
"1000417" [label="(Identifier,content_length)"];
"1000415" [label="(Literal,206)"];
"1000442" [label="(ControlStructure,goto fail;)"];
"1000208" [label="(Call,media = media_find_config(env, srv_conf, path))"];
"1000403" [label="(Call,&multipart_media)"];
"1000435" [label="(ControlStructure,if (server_bufferevent_write_buffer(clt, evb) == -1))"];
"1000523" [label="(MethodReturn,RET)"];
"1000519" [label="(Identifier,errstr)"];
"1000181" [label="(Call,code = 416)"];
"1000401" -> "1000277"  [label="AST: "];
"1000401" -> "1000403"  [label="CFG: "];
"1000402" -> "1000401"  [label="AST: "];
"1000403" -> "1000401"  [label="AST: "];
"1000406" -> "1000401"  [label="CFG: "];
"1000401" -> "1000523"  [label="DDG: &multipart_media"];
"1000401" -> "1000413"  [label="DDG: media"];
"1000413" -> "1000411"  [label="AST: "];
"1000413" -> "1000418"  [label="CFG: "];
"1000414" -> "1000413"  [label="AST: "];
"1000415" -> "1000413"  [label="AST: "];
"1000416" -> "1000413"  [label="AST: "];
"1000417" -> "1000413"  [label="AST: "];
"1000418" -> "1000413"  [label="AST: "];
"1000411" -> "1000413"  [label="CFG: "];
"1000413" -> "1000523"  [label="DDG: media"];
"1000413" -> "1000523"  [label="DDG: MINIMUM(time(NULL), st->st_mtim.tv_sec)"];
"1000413" -> "1000523"  [label="DDG: content_length"];
"1000413" -> "1000411"  [label="DDG: clt"];
"1000413" -> "1000411"  [label="DDG: MINIMUM(time(NULL), st->st_mtim.tv_sec)"];
"1000413" -> "1000411"  [label="DDG: media"];
"1000413" -> "1000411"  [label="DDG: 206"];
"1000413" -> "1000411"  [label="DDG: content_length"];
"1000107" -> "1000413"  [label="DDG: clt"];
"1000208" -> "1000413"  [label="DDG: media"];
"1000375" -> "1000413"  [label="DDG: content_length"];
"1000257" -> "1000413"  [label="DDG: content_length"];
"1000418" -> "1000413"  [label="DDG: time(NULL)"];
"1000418" -> "1000413"  [label="DDG: st->st_mtim.tv_sec"];
"1000413" -> "1000437"  [label="DDG: clt"];
"1000413" -> "1000473"  [label="DDG: clt"];
"1000411" -> "1000111"  [label="AST: "];
"1000412" -> "1000411"  [label="AST: "];
"1000427" -> "1000411"  [label="CFG: "];
"1000411" -> "1000523"  [label="DDG: ret"];
"1000411" -> "1000523"  [label="DDG: server_response_http(clt, 206, media, content_length,\n \t    MINIMUM(time(NULL), st->st_mtim.tv_sec))"];
"1000437" -> "1000436"  [label="AST: "];
"1000437" -> "1000439"  [label="CFG: "];
"1000438" -> "1000437"  [label="AST: "];
"1000439" -> "1000437"  [label="AST: "];
"1000441" -> "1000437"  [label="CFG: "];
"1000437" -> "1000436"  [label="DDG: clt"];
"1000437" -> "1000436"  [label="DDG: evb"];
"1000107" -> "1000437"  [label="DDG: clt"];
"1000368" -> "1000437"  [label="DDG: evb"];
"1000270" -> "1000437"  [label="DDG: evb"];
"1000437" -> "1000471"  [label="DDG: evb"];
"1000437" -> "1000473"  [label="DDG: clt"];
"1000437" -> "1000496"  [label="DDG: evb"];
"1000437" -> "1000516"  [label="DDG: clt"];
"1000436" -> "1000435"  [label="AST: "];
"1000436" -> "1000440"  [label="CFG: "];
"1000440" -> "1000436"  [label="AST: "];
"1000442" -> "1000436"  [label="CFG: "];
"1000445" -> "1000436"  [label="CFG: "];
"1000436" -> "1000523"  [label="DDG: server_bufferevent_write_buffer(clt, evb) == -1"];
"1000436" -> "1000523"  [label="DDG: server_bufferevent_write_buffer(clt, evb)"];
"1000436" -> "1000523"  [label="DDG: -1"];
"1000440" -> "1000436"  [label="DDG: 1"];
"1000471" -> "1000111"  [label="AST: "];
"1000471" -> "1000472"  [label="CFG: "];
"1000472" -> "1000471"  [label="AST: "];
"1000474" -> "1000471"  [label="CFG: "];
"1000471" -> "1000523"  [label="DDG: evb"];
"1000471" -> "1000523"  [label="DDG: evbuffer_free(evb)"];
"1000368" -> "1000471"  [label="DDG: evb"];
"1000270" -> "1000471"  [label="DDG: evb"];
"1000473" -> "1000111"  [label="AST: "];
"1000473" -> "1000474"  [label="CFG: "];
"1000474" -> "1000473"  [label="AST: "];
"1000476" -> "1000473"  [label="CFG: "];
"1000473" -> "1000523"  [label="DDG: clt"];
"1000473" -> "1000523"  [label="DDG: server_reset_http(clt)"];
"1000107" -> "1000473"  [label="DDG: clt"];
"1000496" -> "1000495"  [label="AST: "];
"1000496" -> "1000498"  [label="CFG: "];
"1000497" -> "1000496"  [label="AST: "];
"1000498" -> "1000496"  [label="AST: "];
"1000500" -> "1000496"  [label="CFG: "];
"1000503" -> "1000496"  [label="CFG: "];
"1000496" -> "1000523"  [label="DDG: evb != NULL"];
"1000496" -> "1000523"  [label="DDG: evb"];
"1000292" -> "1000496"  [label="DDG: evb"];
"1000216" -> "1000496"  [label="DDG: evb"];
"1000306" -> "1000496"  [label="DDG: evb"];
"1000345" -> "1000496"  [label="DDG: evb"];
"1000134" -> "1000496"  [label="DDG: evb"];
"1000270" -> "1000496"  [label="DDG: evb"];
"1000325" -> "1000496"  [label="DDG: evb"];
"1000368" -> "1000496"  [label="DDG: evb"];
"1000215" -> "1000496"  [label="DDG: NULL"];
"1000169" -> "1000496"  [label="DDG: NULL"];
"1000247" -> "1000496"  [label="DDG: NULL"];
"1000419" -> "1000496"  [label="DDG: NULL"];
"1000496" -> "1000499"  [label="DDG: evb"];
"1000496" -> "1000509"  [label="DDG: NULL"];
"1000499" -> "1000495"  [label="AST: "];
"1000499" -> "1000500"  [label="CFG: "];
"1000500" -> "1000499"  [label="AST: "];
"1000503" -> "1000499"  [label="CFG: "];
"1000499" -> "1000523"  [label="DDG: evbuffer_free(evb)"];
"1000499" -> "1000523"  [label="DDG: evb"];
"1000509" -> "1000508"  [label="AST: "];
"1000509" -> "1000511"  [label="CFG: "];
"1000510" -> "1000509"  [label="AST: "];
"1000511" -> "1000509"  [label="AST: "];
"1000513" -> "1000509"  [label="CFG: "];
"1000517" -> "1000509"  [label="CFG: "];
"1000509" -> "1000523"  [label="DDG: errstr == NULL"];
"1000509" -> "1000523"  [label="DDG: NULL"];
"1000194" -> "1000509"  [label="DDG: errstr"];
"1000221" -> "1000509"  [label="DDG: errstr"];
"1000153" -> "1000509"  [label="DDG: errstr"];
"1000509" -> "1000516"  [label="DDG: errstr"];
"1000516" -> "1000111"  [label="AST: "];
"1000516" -> "1000519"  [label="CFG: "];
"1000517" -> "1000516"  [label="AST: "];
"1000518" -> "1000516"  [label="AST: "];
"1000519" -> "1000516"  [label="AST: "];
"1000522" -> "1000516"  [label="CFG: "];
"1000516" -> "1000523"  [label="DDG: errstr"];
"1000516" -> "1000523"  [label="DDG: code"];
"1000516" -> "1000523"  [label="DDG: server_abort_http(clt, code, errstr)"];
"1000516" -> "1000523"  [label="DDG: clt"];
"1000107" -> "1000516"  [label="DDG: clt"];
"1000181" -> "1000516"  [label="DDG: code"];
"1000139" -> "1000516"  [label="DDG: code"];
"1000512" -> "1000516"  [label="DDG: errstr"];
}
