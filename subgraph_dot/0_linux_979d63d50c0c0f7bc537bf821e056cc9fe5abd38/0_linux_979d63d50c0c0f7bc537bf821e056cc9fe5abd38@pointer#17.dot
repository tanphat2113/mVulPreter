digraph "0_linux_979d63d50c0c0f7bc537bf821e056cc9fe5abd38@pointer" {
"1000168" [label="(Call,smin_ptr = ptr_reg->smin_value)"];
"1000410" [label="(Call,dst_reg->smin_value = smin_ptr)"];
"1000456" [label="(Call,signed_add_overflows(smin_ptr, smin_val))"];
"1000455" [label="(Call,signed_add_overflows(smin_ptr, smin_val) ||\n\t\t    signed_add_overflows(smax_ptr, smax_val))"];
"1000475" [label="(Call,dst_reg->smin_value = smin_ptr + smin_val)"];
"1000479" [label="(Call,smin_ptr + smin_val)"];
"1000638" [label="(Call,dst_reg->smin_value = smin_ptr)"];
"1000691" [label="(Call,signed_sub_overflows(smin_ptr, smax_val))"];
"1000690" [label="(Call,signed_sub_overflows(smin_ptr, smax_val) ||\n\t\t    signed_sub_overflows(smax_ptr, smin_val))"];
"1000714" [label="(Call,smin_ptr - smax_val)"];
"1000710" [label="(Call,dst_reg->smin_value = smin_ptr - smax_val)"];
"1000481" [label="(Identifier,smin_val)"];
"1000714" [label="(Call,smin_ptr - smax_val)"];
"1000175" [label="(Identifier,smax_ptr)"];
"1000637" [label="(Block,)"];
"1000691" [label="(Call,signed_sub_overflows(smin_ptr, smax_val))"];
"1000711" [label="(Call,dst_reg->smin_value)"];
"1000315" [label="(Call,smax_val < 0)"];
"1000693" [label="(Identifier,smax_val)"];
"1000475" [label="(Call,dst_reg->smin_value = smin_ptr + smin_val)"];
"1000710" [label="(Call,dst_reg->smin_value = smin_ptr - smax_val)"];
"1000411" [label="(Call,dst_reg->smin_value)"];
"1000700" [label="(Identifier,dst_reg)"];
"1000458" [label="(Identifier,smin_val)"];
"1000694" [label="(Call,signed_sub_overflows(smax_ptr, smin_val))"];
"1000414" [label="(Identifier,smin_ptr)"];
"1000695" [label="(Identifier,smax_ptr)"];
"1000719" [label="(Identifier,dst_reg)"];
"1000712" [label="(Identifier,dst_reg)"];
"1000474" [label="(Block,)"];
"1000480" [label="(Identifier,smin_ptr)"];
"1000716" [label="(Identifier,smax_val)"];
"1000457" [label="(Identifier,smin_ptr)"];
"1000479" [label="(Call,smin_ptr + smin_val)"];
"1000465" [label="(Identifier,dst_reg)"];
"1000169" [label="(Identifier,smin_ptr)"];
"1000477" [label="(Identifier,dst_reg)"];
"1000409" [label="(Block,)"];
"1000460" [label="(Identifier,smax_ptr)"];
"1000124" [label="(Block,)"];
"1000410" [label="(Call,dst_reg->smin_value = smin_ptr)"];
"1000907" [label="(MethodReturn,static int)"];
"1000638" [label="(Call,dst_reg->smin_value = smin_ptr)"];
"1000690" [label="(Call,signed_sub_overflows(smin_ptr, smax_val) ||\n\t\t    signed_sub_overflows(smax_ptr, smin_val))"];
"1000162" [label="(Call,smax_val = off_reg->smax_value)"];
"1000377" [label="(Call,smin_val < 0)"];
"1000168" [label="(Call,smin_ptr = ptr_reg->smin_value)"];
"1000476" [label="(Call,dst_reg->smin_value)"];
"1000692" [label="(Identifier,smin_ptr)"];
"1000241" [label="(Call,smin_val > smax_val)"];
"1000454" [label="(ControlStructure,if (signed_add_overflows(smin_ptr, smin_val) ||\n\t\t    signed_add_overflows(smax_ptr, smax_val)))"];
"1000645" [label="(Identifier,dst_reg)"];
"1000642" [label="(Identifier,smin_ptr)"];
"1000689" [label="(ControlStructure,if (signed_sub_overflows(smin_ptr, smax_val) ||\n\t\t    signed_sub_overflows(smax_ptr, smin_val)))"];
"1000170" [label="(Call,ptr_reg->smin_value)"];
"1000639" [label="(Call,dst_reg->smin_value)"];
"1000715" [label="(Identifier,smin_ptr)"];
"1000455" [label="(Call,signed_add_overflows(smin_ptr, smin_val) ||\n\t\t    signed_add_overflows(smax_ptr, smax_val))"];
"1000417" [label="(Identifier,dst_reg)"];
"1000234" [label="(Call,smin_val != smax_val)"];
"1000459" [label="(Call,signed_add_overflows(smax_ptr, smax_val))"];
"1000484" [label="(Identifier,dst_reg)"];
"1000709" [label="(Block,)"];
"1000456" [label="(Call,signed_add_overflows(smin_ptr, smin_val))"];
"1000168" -> "1000124"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000175" -> "1000168"  [label="CFG: "];
"1000168" -> "1000907"  [label="DDG: smin_ptr"];
"1000168" -> "1000907"  [label="DDG: ptr_reg->smin_value"];
"1000168" -> "1000410"  [label="DDG: smin_ptr"];
"1000168" -> "1000456"  [label="DDG: smin_ptr"];
"1000168" -> "1000638"  [label="DDG: smin_ptr"];
"1000168" -> "1000691"  [label="DDG: smin_ptr"];
"1000410" -> "1000409"  [label="AST: "];
"1000410" -> "1000414"  [label="CFG: "];
"1000411" -> "1000410"  [label="AST: "];
"1000414" -> "1000410"  [label="AST: "];
"1000417" -> "1000410"  [label="CFG: "];
"1000410" -> "1000907"  [label="DDG: dst_reg->smin_value"];
"1000410" -> "1000907"  [label="DDG: smin_ptr"];
"1000456" -> "1000455"  [label="AST: "];
"1000456" -> "1000458"  [label="CFG: "];
"1000457" -> "1000456"  [label="AST: "];
"1000458" -> "1000456"  [label="AST: "];
"1000460" -> "1000456"  [label="CFG: "];
"1000455" -> "1000456"  [label="CFG: "];
"1000456" -> "1000907"  [label="DDG: smin_ptr"];
"1000456" -> "1000907"  [label="DDG: smin_val"];
"1000456" -> "1000455"  [label="DDG: smin_ptr"];
"1000456" -> "1000455"  [label="DDG: smin_val"];
"1000377" -> "1000456"  [label="DDG: smin_val"];
"1000456" -> "1000475"  [label="DDG: smin_ptr"];
"1000456" -> "1000475"  [label="DDG: smin_val"];
"1000456" -> "1000479"  [label="DDG: smin_ptr"];
"1000456" -> "1000479"  [label="DDG: smin_val"];
"1000455" -> "1000454"  [label="AST: "];
"1000455" -> "1000459"  [label="CFG: "];
"1000459" -> "1000455"  [label="AST: "];
"1000465" -> "1000455"  [label="CFG: "];
"1000477" -> "1000455"  [label="CFG: "];
"1000455" -> "1000907"  [label="DDG: signed_add_overflows(smin_ptr, smin_val) ||\n\t\t    signed_add_overflows(smax_ptr, smax_val)"];
"1000455" -> "1000907"  [label="DDG: signed_add_overflows(smax_ptr, smax_val)"];
"1000455" -> "1000907"  [label="DDG: signed_add_overflows(smin_ptr, smin_val)"];
"1000459" -> "1000455"  [label="DDG: smax_ptr"];
"1000459" -> "1000455"  [label="DDG: smax_val"];
"1000475" -> "1000474"  [label="AST: "];
"1000475" -> "1000479"  [label="CFG: "];
"1000476" -> "1000475"  [label="AST: "];
"1000479" -> "1000475"  [label="AST: "];
"1000484" -> "1000475"  [label="CFG: "];
"1000475" -> "1000907"  [label="DDG: dst_reg->smin_value"];
"1000475" -> "1000907"  [label="DDG: smin_ptr + smin_val"];
"1000479" -> "1000481"  [label="CFG: "];
"1000480" -> "1000479"  [label="AST: "];
"1000481" -> "1000479"  [label="AST: "];
"1000479" -> "1000907"  [label="DDG: smin_ptr"];
"1000479" -> "1000907"  [label="DDG: smin_val"];
"1000638" -> "1000637"  [label="AST: "];
"1000638" -> "1000642"  [label="CFG: "];
"1000639" -> "1000638"  [label="AST: "];
"1000642" -> "1000638"  [label="AST: "];
"1000645" -> "1000638"  [label="CFG: "];
"1000638" -> "1000907"  [label="DDG: dst_reg->smin_value"];
"1000638" -> "1000907"  [label="DDG: smin_ptr"];
"1000691" -> "1000690"  [label="AST: "];
"1000691" -> "1000693"  [label="CFG: "];
"1000692" -> "1000691"  [label="AST: "];
"1000693" -> "1000691"  [label="AST: "];
"1000695" -> "1000691"  [label="CFG: "];
"1000690" -> "1000691"  [label="CFG: "];
"1000691" -> "1000907"  [label="DDG: smax_val"];
"1000691" -> "1000907"  [label="DDG: smin_ptr"];
"1000691" -> "1000690"  [label="DDG: smin_ptr"];
"1000691" -> "1000690"  [label="DDG: smax_val"];
"1000234" -> "1000691"  [label="DDG: smax_val"];
"1000315" -> "1000691"  [label="DDG: smax_val"];
"1000162" -> "1000691"  [label="DDG: smax_val"];
"1000241" -> "1000691"  [label="DDG: smax_val"];
"1000691" -> "1000714"  [label="DDG: smin_ptr"];
"1000691" -> "1000714"  [label="DDG: smax_val"];
"1000690" -> "1000689"  [label="AST: "];
"1000690" -> "1000694"  [label="CFG: "];
"1000694" -> "1000690"  [label="AST: "];
"1000700" -> "1000690"  [label="CFG: "];
"1000712" -> "1000690"  [label="CFG: "];
"1000690" -> "1000907"  [label="DDG: signed_sub_overflows(smin_ptr, smax_val) ||\n\t\t    signed_sub_overflows(smax_ptr, smin_val)"];
"1000690" -> "1000907"  [label="DDG: signed_sub_overflows(smax_ptr, smin_val)"];
"1000690" -> "1000907"  [label="DDG: signed_sub_overflows(smin_ptr, smax_val)"];
"1000694" -> "1000690"  [label="DDG: smax_ptr"];
"1000694" -> "1000690"  [label="DDG: smin_val"];
"1000714" -> "1000710"  [label="AST: "];
"1000714" -> "1000716"  [label="CFG: "];
"1000715" -> "1000714"  [label="AST: "];
"1000716" -> "1000714"  [label="AST: "];
"1000710" -> "1000714"  [label="CFG: "];
"1000714" -> "1000907"  [label="DDG: smax_val"];
"1000714" -> "1000907"  [label="DDG: smin_ptr"];
"1000714" -> "1000710"  [label="DDG: smin_ptr"];
"1000714" -> "1000710"  [label="DDG: smax_val"];
"1000710" -> "1000709"  [label="AST: "];
"1000711" -> "1000710"  [label="AST: "];
"1000719" -> "1000710"  [label="CFG: "];
"1000710" -> "1000907"  [label="DDG: smin_ptr - smax_val"];
"1000710" -> "1000907"  [label="DDG: dst_reg->smin_value"];
}
