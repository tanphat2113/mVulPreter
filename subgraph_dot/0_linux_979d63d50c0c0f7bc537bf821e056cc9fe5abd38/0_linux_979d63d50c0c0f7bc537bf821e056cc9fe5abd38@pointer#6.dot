digraph "0_linux_979d63d50c0c0f7bc537bf821e056cc9fe5abd38@pointer" {
"1000539" [label="(Call,dst_reg->off = ptr_reg->off)"];
"1000860" [label="(Call,check_map_access(env, dst, dst_reg->off, 1, false))"];
"1000854" [label="(Call,dst_reg->type == PTR_TO_MAP_VALUE &&\n\t\t    check_map_access(env, dst, dst_reg->off, 1, false))"];
"1000869" [label="(Call,verbose(env, \"R%d pointer arithmetic of map value goes out of range, \"\n\t\t\t\t\"prohibited for !root\n\", dst))"];
"1000884" [label="(Call,check_stack_access(env, dst_reg, dst_reg->off +\n\t\t\t\t\t      dst_reg->var_off.value, 1))"];
"1000878" [label="(Call,dst_reg->type == PTR_TO_STACK &&\n\t\t\t   check_stack_access(env, dst_reg, dst_reg->off +\n\t\t\t\t\t      dst_reg->var_off.value, 1))"];
"1000898" [label="(Call,verbose(env, \"R%d stack pointer arithmetic goes out of range, \"\n\t\t\t\t\"prohibited for !root\n\", dst))"];
"1000887" [label="(Call,dst_reg->off +\n\t\t\t\t\t      dst_reg->var_off.value)"];
"1000845" [label="(Call,__reg_bound_offset(dst_reg))"];
"1000881" [label="(Identifier,dst_reg)"];
"1000870" [label="(Identifier,env)"];
"1000901" [label="(Identifier,dst)"];
"1000437" [label="(Call,dst_reg->off = ptr_reg->off + smin_val)"];
"1000897" [label="(Block,)"];
"1000891" [label="(Call,dst_reg->var_off.value)"];
"1000862" [label="(Identifier,dst)"];
"1000766" [label="(Call,dst_reg->off = ptr_reg->off)"];
"1000866" [label="(Literal,1)"];
"1000540" [label="(Call,dst_reg->off)"];
"1000900" [label="(Literal,\"R%d stack pointer arithmetic goes out of range, \"\n\t\t\t\t\"prohibited for !root\n\")"];
"1000868" [label="(Block,)"];
"1000877" [label="(ControlStructure,if (dst_reg->type == PTR_TO_STACK &&\n\t\t\t   check_stack_access(env, dst_reg, dst_reg->off +\n\t\t\t\t\t      dst_reg->var_off.value, 1)))"];
"1000204" [label="(Call,dst = insn->dst_reg)"];
"1000871" [label="(Literal,\"R%d pointer arithmetic of map value goes out of range, \"\n\t\t\t\t\"prohibited for !root\n\")"];
"1000120" [label="(MethodParameterIn,struct bpf_verifier_env *env)"];
"1000884" [label="(Call,check_stack_access(env, dst_reg, dst_reg->off +\n\t\t\t\t\t      dst_reg->var_off.value, 1))"];
"1000898" [label="(Call,verbose(env, \"R%d stack pointer arithmetic goes out of range, \"\n\t\t\t\t\"prohibited for !root\n\", dst))"];
"1000875" [label="(Identifier,EACCES)"];
"1000672" [label="(Call,dst_reg->off = ptr_reg->off - smin_val)"];
"1000855" [label="(Call,dst_reg->type == PTR_TO_MAP_VALUE)"];
"1000861" [label="(Identifier,env)"];
"1000548" [label="(Identifier,dst_reg)"];
"1000879" [label="(Call,dst_reg->type == PTR_TO_STACK)"];
"1000888" [label="(Call,dst_reg->off)"];
"1000853" [label="(ControlStructure,if (dst_reg->type == PTR_TO_MAP_VALUE &&\n\t\t    check_map_access(env, dst, dst_reg->off, 1, false)))"];
"1000907" [label="(MethodReturn,static int)"];
"1000860" [label="(Call,check_map_access(env, dst, dst_reg->off, 1, false))"];
"1000539" [label="(Call,dst_reg->off = ptr_reg->off)"];
"1000878" [label="(Call,dst_reg->type == PTR_TO_STACK &&\n\t\t\t   check_stack_access(env, dst_reg, dst_reg->off +\n\t\t\t\t\t      dst_reg->var_off.value, 1))"];
"1000885" [label="(Identifier,env)"];
"1000872" [label="(Identifier,dst)"];
"1000867" [label="(Identifier,false)"];
"1000904" [label="(Identifier,EACCES)"];
"1000869" [label="(Call,verbose(env, \"R%d pointer arithmetic of map value goes out of range, \"\n\t\t\t\t\"prohibited for !root\n\", dst))"];
"1000896" [label="(Literal,1)"];
"1000863" [label="(Call,dst_reg->off)"];
"1000368" [label="(Block,)"];
"1000832" [label="(Call,check_reg_sane_offset(env, dst_reg, ptr_reg->type))"];
"1000543" [label="(Call,ptr_reg->off)"];
"1000906" [label="(Literal,0)"];
"1000887" [label="(Call,dst_reg->off +\n\t\t\t\t\t      dst_reg->var_off.value)"];
"1000886" [label="(Identifier,dst_reg)"];
"1000854" [label="(Call,dst_reg->type == PTR_TO_MAP_VALUE &&\n\t\t    check_map_access(env, dst, dst_reg->off, 1, false))"];
"1000899" [label="(Identifier,env)"];
"1000539" -> "1000368"  [label="AST: "];
"1000539" -> "1000543"  [label="CFG: "];
"1000540" -> "1000539"  [label="AST: "];
"1000543" -> "1000539"  [label="AST: "];
"1000548" -> "1000539"  [label="CFG: "];
"1000539" -> "1000907"  [label="DDG: "];
"1000539" -> "1000907"  [label="DDG: "];
"1000539" -> "1000860"  [label="DDG: "];
"1000539" -> "1000884"  [label="DDG: "];
"1000539" -> "1000887"  [label="DDG: "];
"1000860" -> "1000854"  [label="AST: "];
"1000860" -> "1000867"  [label="CFG: "];
"1000861" -> "1000860"  [label="AST: "];
"1000862" -> "1000860"  [label="AST: "];
"1000863" -> "1000860"  [label="AST: "];
"1000866" -> "1000860"  [label="AST: "];
"1000867" -> "1000860"  [label="AST: "];
"1000854" -> "1000860"  [label="CFG: "];
"1000860" -> "1000907"  [label="DDG: "];
"1000860" -> "1000907"  [label="DDG: "];
"1000860" -> "1000907"  [label="DDG: "];
"1000860" -> "1000907"  [label="DDG: "];
"1000860" -> "1000854"  [label="DDG: "];
"1000860" -> "1000854"  [label="DDG: "];
"1000860" -> "1000854"  [label="DDG: "];
"1000860" -> "1000854"  [label="DDG: "];
"1000860" -> "1000854"  [label="DDG: "];
"1000832" -> "1000860"  [label="DDG: "];
"1000120" -> "1000860"  [label="DDG: "];
"1000204" -> "1000860"  [label="DDG: "];
"1000766" -> "1000860"  [label="DDG: "];
"1000437" -> "1000860"  [label="DDG: "];
"1000672" -> "1000860"  [label="DDG: "];
"1000860" -> "1000869"  [label="DDG: "];
"1000860" -> "1000869"  [label="DDG: "];
"1000860" -> "1000884"  [label="DDG: "];
"1000860" -> "1000884"  [label="DDG: "];
"1000860" -> "1000887"  [label="DDG: "];
"1000860" -> "1000898"  [label="DDG: "];
"1000860" -> "1000898"  [label="DDG: "];
"1000854" -> "1000853"  [label="AST: "];
"1000854" -> "1000855"  [label="CFG: "];
"1000855" -> "1000854"  [label="AST: "];
"1000870" -> "1000854"  [label="CFG: "];
"1000881" -> "1000854"  [label="CFG: "];
"1000854" -> "1000907"  [label="DDG: "];
"1000854" -> "1000907"  [label="DDG: "];
"1000854" -> "1000907"  [label="DDG: "];
"1000855" -> "1000854"  [label="DDG: "];
"1000855" -> "1000854"  [label="DDG: "];
"1000869" -> "1000868"  [label="AST: "];
"1000869" -> "1000872"  [label="CFG: "];
"1000870" -> "1000869"  [label="AST: "];
"1000871" -> "1000869"  [label="AST: "];
"1000872" -> "1000869"  [label="AST: "];
"1000875" -> "1000869"  [label="CFG: "];
"1000869" -> "1000907"  [label="DDG: "];
"1000869" -> "1000907"  [label="DDG: "];
"1000869" -> "1000907"  [label="DDG: "];
"1000832" -> "1000869"  [label="DDG: "];
"1000120" -> "1000869"  [label="DDG: "];
"1000204" -> "1000869"  [label="DDG: "];
"1000884" -> "1000878"  [label="AST: "];
"1000884" -> "1000896"  [label="CFG: "];
"1000885" -> "1000884"  [label="AST: "];
"1000886" -> "1000884"  [label="AST: "];
"1000887" -> "1000884"  [label="AST: "];
"1000896" -> "1000884"  [label="AST: "];
"1000878" -> "1000884"  [label="CFG: "];
"1000884" -> "1000907"  [label="DDG: "];
"1000884" -> "1000907"  [label="DDG: "];
"1000884" -> "1000907"  [label="DDG: "];
"1000884" -> "1000878"  [label="DDG: "];
"1000884" -> "1000878"  [label="DDG: "];
"1000884" -> "1000878"  [label="DDG: "];
"1000884" -> "1000878"  [label="DDG: "];
"1000832" -> "1000884"  [label="DDG: "];
"1000120" -> "1000884"  [label="DDG: "];
"1000845" -> "1000884"  [label="DDG: "];
"1000766" -> "1000884"  [label="DDG: "];
"1000437" -> "1000884"  [label="DDG: "];
"1000672" -> "1000884"  [label="DDG: "];
"1000884" -> "1000898"  [label="DDG: "];
"1000878" -> "1000877"  [label="AST: "];
"1000878" -> "1000879"  [label="CFG: "];
"1000879" -> "1000878"  [label="AST: "];
"1000899" -> "1000878"  [label="CFG: "];
"1000906" -> "1000878"  [label="CFG: "];
"1000878" -> "1000907"  [label="DDG: "];
"1000878" -> "1000907"  [label="DDG: "];
"1000878" -> "1000907"  [label="DDG: "];
"1000879" -> "1000878"  [label="DDG: "];
"1000879" -> "1000878"  [label="DDG: "];
"1000898" -> "1000897"  [label="AST: "];
"1000898" -> "1000901"  [label="CFG: "];
"1000899" -> "1000898"  [label="AST: "];
"1000900" -> "1000898"  [label="AST: "];
"1000901" -> "1000898"  [label="AST: "];
"1000904" -> "1000898"  [label="CFG: "];
"1000898" -> "1000907"  [label="DDG: "];
"1000898" -> "1000907"  [label="DDG: "];
"1000898" -> "1000907"  [label="DDG: "];
"1000832" -> "1000898"  [label="DDG: "];
"1000120" -> "1000898"  [label="DDG: "];
"1000204" -> "1000898"  [label="DDG: "];
"1000887" -> "1000891"  [label="CFG: "];
"1000888" -> "1000887"  [label="AST: "];
"1000891" -> "1000887"  [label="AST: "];
"1000896" -> "1000887"  [label="CFG: "];
"1000887" -> "1000907"  [label="DDG: "];
"1000887" -> "1000907"  [label="DDG: "];
"1000766" -> "1000887"  [label="DDG: "];
"1000437" -> "1000887"  [label="DDG: "];
"1000672" -> "1000887"  [label="DDG: "];
}
