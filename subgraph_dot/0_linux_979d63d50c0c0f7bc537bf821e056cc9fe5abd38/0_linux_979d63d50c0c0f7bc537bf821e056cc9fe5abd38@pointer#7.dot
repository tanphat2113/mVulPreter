digraph "0_linux_979d63d50c0c0f7bc537bf821e056cc9fe5abd38@pointer" {
"1000437" [label="(Call,dst_reg->off = ptr_reg->off + smin_val)"];
"1000377" [label="(Call,smin_val < 0)"];
"1000234" [label="(Call,smin_val != smax_val)"];
"1000156" [label="(Call,smin_val = off_reg->smin_value)"];
"1000162" [label="(Call,smax_val = off_reg->smax_value)"];
"1000312" [label="(Call,smin_val < 0)"];
"1000241" [label="(Call,smin_val > smax_val)"];
"1000860" [label="(Call,check_map_access(env, dst, dst_reg->off, 1, false))"];
"1000854" [label="(Call,dst_reg->type == PTR_TO_MAP_VALUE &&\n\t\t    check_map_access(env, dst, dst_reg->off, 1, false))"];
"1000869" [label="(Call,verbose(env, \"R%d pointer arithmetic of map value goes out of range, \"\n\t\t\t\t\"prohibited for !root\n\", dst))"];
"1000884" [label="(Call,check_stack_access(env, dst_reg, dst_reg->off +\n\t\t\t\t\t      dst_reg->var_off.value, 1))"];
"1000878" [label="(Call,dst_reg->type == PTR_TO_STACK &&\n\t\t\t   check_stack_access(env, dst_reg, dst_reg->off +\n\t\t\t\t\t      dst_reg->var_off.value, 1))"];
"1000898" [label="(Call,verbose(env, \"R%d stack pointer arithmetic goes out of range, \"\n\t\t\t\t\"prohibited for !root\n\", dst))"];
"1000887" [label="(Call,dst_reg->off +\n\t\t\t\t\t      dst_reg->var_off.value)"];
"1000482" [label="(Call,dst_reg->smax_value = smax_ptr + smax_val)"];
"1000236" [label="(Identifier,smax_val)"];
"1000242" [label="(Identifier,smin_val)"];
"1000870" [label="(Identifier,env)"];
"1000881" [label="(Identifier,dst_reg)"];
"1000691" [label="(Call,signed_sub_overflows(smin_ptr, smax_val))"];
"1000437" [label="(Call,dst_reg->off = ptr_reg->off + smin_val)"];
"1000486" [label="(Call,smax_ptr + smax_val)"];
"1000243" [label="(Identifier,smax_val)"];
"1000316" [label="(Identifier,smax_val)"];
"1000315" [label="(Call,smax_val < 0)"];
"1000862" [label="(Identifier,dst)"];
"1000766" [label="(Call,dst_reg->off = ptr_reg->off)"];
"1000897" [label="(Block,)"];
"1000311" [label="(Call,(smin_val < 0) != (smax_val < 0))"];
"1000891" [label="(Call,dst_reg->var_off.value)"];
"1000314" [label="(Literal,0)"];
"1000866" [label="(Literal,1)"];
"1000888" [label="(Call,dst_reg->off)"];
"1000900" [label="(Literal,\"R%d stack pointer arithmetic goes out of range, \"\n\t\t\t\t\"prohibited for !root\n\")"];
"1000372" [label="(Call,sanitize_ptr_alu(env, insn, ptr_reg, dst_reg, smin_val < 0))"];
"1000448" [label="(Identifier,dst_reg)"];
"1000868" [label="(Block,)"];
"1000157" [label="(Identifier,smin_val)"];
"1000877" [label="(ControlStructure,if (dst_reg->type == PTR_TO_STACK &&\n\t\t\t   check_stack_access(env, dst_reg, dst_reg->off +\n\t\t\t\t\t      dst_reg->var_off.value, 1)))"];
"1000204" [label="(Call,dst = insn->dst_reg)"];
"1000871" [label="(Literal,\"R%d pointer arithmetic of map value goes out of range, \"\n\t\t\t\t\"prohibited for !root\n\")"];
"1000120" [label="(MethodParameterIn,struct bpf_verifier_env *env)"];
"1000884" [label="(Call,check_stack_access(env, dst_reg, dst_reg->off +\n\t\t\t\t\t      dst_reg->var_off.value, 1))"];
"1000898" [label="(Call,verbose(env, \"R%d stack pointer arithmetic goes out of range, \"\n\t\t\t\t\"prohibited for !root\n\", dst))"];
"1000156" [label="(Call,smin_val = off_reg->smin_value)"];
"1000164" [label="(Call,off_reg->smax_value)"];
"1000875" [label="(Identifier,EACCES)"];
"1000845" [label="(Call,__reg_bound_offset(dst_reg))"];
"1000672" [label="(Call,dst_reg->off = ptr_reg->off - smin_val)"];
"1000855" [label="(Call,dst_reg->type == PTR_TO_MAP_VALUE)"];
"1000169" [label="(Identifier,smin_ptr)"];
"1000861" [label="(Identifier,env)"];
"1000879" [label="(Call,dst_reg->type == PTR_TO_STACK)"];
"1000312" [label="(Call,smin_val < 0)"];
"1000899" [label="(Identifier,env)"];
"1000409" [label="(Block,)"];
"1000441" [label="(Call,ptr_reg->off + smin_val)"];
"1000404" [label="(Call,ptr_reg->off + smin_val)"];
"1000124" [label="(Block,)"];
"1000245" [label="(Identifier,umin_val)"];
"1000402" [label="(Call,(s32)(ptr_reg->off + smin_val))"];
"1000240" [label="(Call,smin_val > smax_val || umin_val > umax_val)"];
"1000907" [label="(MethodReturn,static int)"];
"1000860" [label="(Call,check_map_access(env, dst, dst_reg->off, 1, false))"];
"1000539" [label="(Call,dst_reg->off = ptr_reg->off)"];
"1000853" [label="(ControlStructure,if (dst_reg->type == PTR_TO_MAP_VALUE &&\n\t\t    check_map_access(env, dst, dst_reg->off, 1, false)))"];
"1000878" [label="(Call,dst_reg->type == PTR_TO_STACK &&\n\t\t\t   check_stack_access(env, dst_reg, dst_reg->off +\n\t\t\t\t\t      dst_reg->var_off.value, 1))"];
"1000162" [label="(Call,smax_val = off_reg->smax_value)"];
"1000885" [label="(Identifier,env)"];
"1000377" [label="(Call,smin_val < 0)"];
"1000872" [label="(Identifier,dst)"];
"1000163" [label="(Identifier,smax_val)"];
"1000235" [label="(Identifier,smin_val)"];
"1000867" [label="(Identifier,false)"];
"1000904" [label="(Identifier,EACCES)"];
"1000579" [label="(Call,smin_val < 0)"];
"1000233" [label="(Call,smin_val != smax_val || umin_val != umax_val)"];
"1000241" [label="(Call,smin_val > smax_val)"];
"1000869" [label="(Call,verbose(env, \"R%d pointer arithmetic of map value goes out of range, \"\n\t\t\t\t\"prohibited for !root\n\", dst))"];
"1000896" [label="(Literal,1)"];
"1000863" [label="(Call,dst_reg->off)"];
"1000238" [label="(Identifier,umin_val)"];
"1000438" [label="(Call,dst_reg->off)"];
"1000313" [label="(Identifier,smin_val)"];
"1000906" [label="(Literal,0)"];
"1000832" [label="(Call,check_reg_sane_offset(env, dst_reg, ptr_reg->type))"];
"1000234" [label="(Call,smin_val != smax_val)"];
"1000394" [label="(Call,ptr_reg->off + smin_val ==\n\t\t\t      (s64)(s32)(ptr_reg->off + smin_val))"];
"1000395" [label="(Call,ptr_reg->off + smin_val)"];
"1000887" [label="(Call,dst_reg->off +\n\t\t\t\t\t      dst_reg->var_off.value)"];
"1000459" [label="(Call,signed_add_overflows(smax_ptr, smax_val))"];
"1000379" [label="(Literal,0)"];
"1000158" [label="(Call,off_reg->smin_value)"];
"1000378" [label="(Identifier,smin_val)"];
"1000854" [label="(Call,dst_reg->type == PTR_TO_MAP_VALUE &&\n\t\t    check_map_access(env, dst, dst_reg->off, 1, false))"];
"1000456" [label="(Call,signed_add_overflows(smin_ptr, smin_val))"];
"1000886" [label="(Identifier,dst_reg)"];
"1000901" [label="(Identifier,dst)"];
"1000437" -> "1000409"  [label="AST: "];
"1000437" -> "1000441"  [label="CFG: "];
"1000438" -> "1000437"  [label="AST: "];
"1000441" -> "1000437"  [label="AST: "];
"1000448" -> "1000437"  [label="CFG: "];
"1000437" -> "1000907"  [label="DDG: "];
"1000437" -> "1000907"  [label="DDG: "];
"1000377" -> "1000437"  [label="DDG: "];
"1000437" -> "1000860"  [label="DDG: "];
"1000437" -> "1000884"  [label="DDG: "];
"1000437" -> "1000887"  [label="DDG: "];
"1000377" -> "1000372"  [label="AST: "];
"1000377" -> "1000379"  [label="CFG: "];
"1000378" -> "1000377"  [label="AST: "];
"1000379" -> "1000377"  [label="AST: "];
"1000372" -> "1000377"  [label="CFG: "];
"1000377" -> "1000907"  [label="DDG: "];
"1000377" -> "1000372"  [label="DDG: "];
"1000377" -> "1000372"  [label="DDG: "];
"1000234" -> "1000377"  [label="DDG: "];
"1000156" -> "1000377"  [label="DDG: "];
"1000312" -> "1000377"  [label="DDG: "];
"1000241" -> "1000377"  [label="DDG: "];
"1000377" -> "1000394"  [label="DDG: "];
"1000377" -> "1000395"  [label="DDG: "];
"1000377" -> "1000402"  [label="DDG: "];
"1000377" -> "1000404"  [label="DDG: "];
"1000377" -> "1000441"  [label="DDG: "];
"1000377" -> "1000456"  [label="DDG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000234" -> "1000236"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000236" -> "1000234"  [label="AST: "];
"1000238" -> "1000234"  [label="CFG: "];
"1000233" -> "1000234"  [label="CFG: "];
"1000234" -> "1000907"  [label="DDG: "];
"1000234" -> "1000907"  [label="DDG: "];
"1000234" -> "1000233"  [label="DDG: "];
"1000234" -> "1000233"  [label="DDG: "];
"1000156" -> "1000234"  [label="DDG: "];
"1000162" -> "1000234"  [label="DDG: "];
"1000234" -> "1000241"  [label="DDG: "];
"1000234" -> "1000241"  [label="DDG: "];
"1000234" -> "1000312"  [label="DDG: "];
"1000234" -> "1000315"  [label="DDG: "];
"1000234" -> "1000459"  [label="DDG: "];
"1000234" -> "1000482"  [label="DDG: "];
"1000234" -> "1000486"  [label="DDG: "];
"1000234" -> "1000579"  [label="DDG: "];
"1000234" -> "1000691"  [label="DDG: "];
"1000156" -> "1000124"  [label="AST: "];
"1000156" -> "1000158"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000158" -> "1000156"  [label="AST: "];
"1000163" -> "1000156"  [label="CFG: "];
"1000156" -> "1000907"  [label="DDG: "];
"1000156" -> "1000907"  [label="DDG: "];
"1000156" -> "1000241"  [label="DDG: "];
"1000156" -> "1000312"  [label="DDG: "];
"1000156" -> "1000579"  [label="DDG: "];
"1000162" -> "1000124"  [label="AST: "];
"1000162" -> "1000164"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000164" -> "1000162"  [label="AST: "];
"1000169" -> "1000162"  [label="CFG: "];
"1000162" -> "1000907"  [label="DDG: "];
"1000162" -> "1000907"  [label="DDG: "];
"1000162" -> "1000241"  [label="DDG: "];
"1000162" -> "1000315"  [label="DDG: "];
"1000162" -> "1000459"  [label="DDG: "];
"1000162" -> "1000482"  [label="DDG: "];
"1000162" -> "1000486"  [label="DDG: "];
"1000162" -> "1000691"  [label="DDG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000312" -> "1000314"  [label="CFG: "];
"1000313" -> "1000312"  [label="AST: "];
"1000314" -> "1000312"  [label="AST: "];
"1000316" -> "1000312"  [label="CFG: "];
"1000312" -> "1000907"  [label="DDG: "];
"1000312" -> "1000311"  [label="DDG: "];
"1000312" -> "1000311"  [label="DDG: "];
"1000241" -> "1000312"  [label="DDG: "];
"1000312" -> "1000579"  [label="DDG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000241" -> "1000243"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="AST: "];
"1000245" -> "1000241"  [label="CFG: "];
"1000240" -> "1000241"  [label="CFG: "];
"1000241" -> "1000907"  [label="DDG: "];
"1000241" -> "1000907"  [label="DDG: "];
"1000241" -> "1000240"  [label="DDG: "];
"1000241" -> "1000240"  [label="DDG: "];
"1000241" -> "1000315"  [label="DDG: "];
"1000241" -> "1000459"  [label="DDG: "];
"1000241" -> "1000482"  [label="DDG: "];
"1000241" -> "1000486"  [label="DDG: "];
"1000241" -> "1000579"  [label="DDG: "];
"1000241" -> "1000691"  [label="DDG: "];
"1000860" -> "1000854"  [label="AST: "];
"1000860" -> "1000867"  [label="CFG: "];
"1000861" -> "1000860"  [label="AST: "];
"1000862" -> "1000860"  [label="AST: "];
"1000863" -> "1000860"  [label="AST: "];
"1000866" -> "1000860"  [label="AST: "];
"1000867" -> "1000860"  [label="AST: "];
"1000854" -> "1000860"  [label="CFG: "];
"1000860" -> "1000907"  [label="DDG: "];
"1000860" -> "1000907"  [label="DDG: "];
"1000860" -> "1000907"  [label="DDG: "];
"1000860" -> "1000907"  [label="DDG: "];
"1000860" -> "1000854"  [label="DDG: "];
"1000860" -> "1000854"  [label="DDG: "];
"1000860" -> "1000854"  [label="DDG: "];
"1000860" -> "1000854"  [label="DDG: "];
"1000860" -> "1000854"  [label="DDG: "];
"1000832" -> "1000860"  [label="DDG: "];
"1000120" -> "1000860"  [label="DDG: "];
"1000204" -> "1000860"  [label="DDG: "];
"1000539" -> "1000860"  [label="DDG: "];
"1000766" -> "1000860"  [label="DDG: "];
"1000672" -> "1000860"  [label="DDG: "];
"1000860" -> "1000869"  [label="DDG: "];
"1000860" -> "1000869"  [label="DDG: "];
"1000860" -> "1000884"  [label="DDG: "];
"1000860" -> "1000884"  [label="DDG: "];
"1000860" -> "1000887"  [label="DDG: "];
"1000860" -> "1000898"  [label="DDG: "];
"1000860" -> "1000898"  [label="DDG: "];
"1000854" -> "1000853"  [label="AST: "];
"1000854" -> "1000855"  [label="CFG: "];
"1000855" -> "1000854"  [label="AST: "];
"1000870" -> "1000854"  [label="CFG: "];
"1000881" -> "1000854"  [label="CFG: "];
"1000854" -> "1000907"  [label="DDG: "];
"1000854" -> "1000907"  [label="DDG: "];
"1000854" -> "1000907"  [label="DDG: "];
"1000855" -> "1000854"  [label="DDG: "];
"1000855" -> "1000854"  [label="DDG: "];
"1000869" -> "1000868"  [label="AST: "];
"1000869" -> "1000872"  [label="CFG: "];
"1000870" -> "1000869"  [label="AST: "];
"1000871" -> "1000869"  [label="AST: "];
"1000872" -> "1000869"  [label="AST: "];
"1000875" -> "1000869"  [label="CFG: "];
"1000869" -> "1000907"  [label="DDG: "];
"1000869" -> "1000907"  [label="DDG: "];
"1000869" -> "1000907"  [label="DDG: "];
"1000832" -> "1000869"  [label="DDG: "];
"1000120" -> "1000869"  [label="DDG: "];
"1000204" -> "1000869"  [label="DDG: "];
"1000884" -> "1000878"  [label="AST: "];
"1000884" -> "1000896"  [label="CFG: "];
"1000885" -> "1000884"  [label="AST: "];
"1000886" -> "1000884"  [label="AST: "];
"1000887" -> "1000884"  [label="AST: "];
"1000896" -> "1000884"  [label="AST: "];
"1000878" -> "1000884"  [label="CFG: "];
"1000884" -> "1000907"  [label="DDG: "];
"1000884" -> "1000907"  [label="DDG: "];
"1000884" -> "1000907"  [label="DDG: "];
"1000884" -> "1000878"  [label="DDG: "];
"1000884" -> "1000878"  [label="DDG: "];
"1000884" -> "1000878"  [label="DDG: "];
"1000884" -> "1000878"  [label="DDG: "];
"1000832" -> "1000884"  [label="DDG: "];
"1000120" -> "1000884"  [label="DDG: "];
"1000845" -> "1000884"  [label="DDG: "];
"1000539" -> "1000884"  [label="DDG: "];
"1000766" -> "1000884"  [label="DDG: "];
"1000672" -> "1000884"  [label="DDG: "];
"1000884" -> "1000898"  [label="DDG: "];
"1000878" -> "1000877"  [label="AST: "];
"1000878" -> "1000879"  [label="CFG: "];
"1000879" -> "1000878"  [label="AST: "];
"1000899" -> "1000878"  [label="CFG: "];
"1000906" -> "1000878"  [label="CFG: "];
"1000878" -> "1000907"  [label="DDG: "];
"1000878" -> "1000907"  [label="DDG: "];
"1000878" -> "1000907"  [label="DDG: "];
"1000879" -> "1000878"  [label="DDG: "];
"1000879" -> "1000878"  [label="DDG: "];
"1000898" -> "1000897"  [label="AST: "];
"1000898" -> "1000901"  [label="CFG: "];
"1000899" -> "1000898"  [label="AST: "];
"1000900" -> "1000898"  [label="AST: "];
"1000901" -> "1000898"  [label="AST: "];
"1000904" -> "1000898"  [label="CFG: "];
"1000898" -> "1000907"  [label="DDG: "];
"1000898" -> "1000907"  [label="DDG: "];
"1000898" -> "1000907"  [label="DDG: "];
"1000832" -> "1000898"  [label="DDG: "];
"1000120" -> "1000898"  [label="DDG: "];
"1000204" -> "1000898"  [label="DDG: "];
"1000887" -> "1000891"  [label="CFG: "];
"1000888" -> "1000887"  [label="AST: "];
"1000891" -> "1000887"  [label="AST: "];
"1000896" -> "1000887"  [label="CFG: "];
"1000887" -> "1000907"  [label="DDG: "];
"1000887" -> "1000907"  [label="DDG: "];
"1000539" -> "1000887"  [label="DDG: "];
"1000766" -> "1000887"  [label="DDG: "];
"1000672" -> "1000887"  [label="DDG: "];
}
