digraph "0_linux_979d63d50c0c0f7bc537bf821e056cc9fe5abd38@pointer" {
"1000855" [label="(Call,dst_reg->type == PTR_TO_MAP_VALUE)"];
"1000333" [label="(Call,dst_reg->type = ptr_reg->type)"];
"1000854" [label="(Call,dst_reg->type == PTR_TO_MAP_VALUE &&\n\t\t    check_map_access(env, dst, dst_reg->off, 1, false))"];
"1000879" [label="(Call,dst_reg->type == PTR_TO_STACK)"];
"1000878" [label="(Call,dst_reg->type == PTR_TO_STACK &&\n\t\t\t   check_stack_access(env, dst_reg, dst_reg->off +\n\t\t\t\t\t      dst_reg->var_off.value, 1))"];
"1000859" [label="(Identifier,PTR_TO_MAP_VALUE)"];
"1000881" [label="(Identifier,dst_reg)"];
"1000870" [label="(Identifier,env)"];
"1000334" [label="(Call,dst_reg->type)"];
"1000877" [label="(ControlStructure,if (dst_reg->type == PTR_TO_STACK &&\n\t\t\t   check_stack_access(env, dst_reg, dst_reg->off +\n\t\t\t\t\t      dst_reg->var_off.value, 1)))"];
"1000883" [label="(Identifier,PTR_TO_STACK)"];
"1000856" [label="(Call,dst_reg->type)"];
"1000880" [label="(Call,dst_reg->type)"];
"1000884" [label="(Call,check_stack_access(env, dst_reg, dst_reg->off +\n\t\t\t\t\t      dst_reg->var_off.value, 1))"];
"1000337" [label="(Call,ptr_reg->type)"];
"1000855" [label="(Call,dst_reg->type == PTR_TO_MAP_VALUE)"];
"1000861" [label="(Identifier,env)"];
"1000879" [label="(Call,dst_reg->type == PTR_TO_STACK)"];
"1000124" [label="(Block,)"];
"1000853" [label="(ControlStructure,if (dst_reg->type == PTR_TO_MAP_VALUE &&\n\t\t    check_map_access(env, dst, dst_reg->off, 1, false)))"];
"1000907" [label="(MethodReturn,static int)"];
"1000860" [label="(Call,check_map_access(env, dst, dst_reg->off, 1, false))"];
"1000878" [label="(Call,dst_reg->type == PTR_TO_STACK &&\n\t\t\t   check_stack_access(env, dst_reg, dst_reg->off +\n\t\t\t\t\t      dst_reg->var_off.value, 1))"];
"1000885" [label="(Identifier,env)"];
"1000333" [label="(Call,dst_reg->type = ptr_reg->type)"];
"1000906" [label="(Literal,0)"];
"1000606" [label="(Call,ptr_reg->type == PTR_TO_STACK)"];
"1000854" [label="(Call,dst_reg->type == PTR_TO_MAP_VALUE &&\n\t\t    check_map_access(env, dst, dst_reg->off, 1, false))"];
"1000899" [label="(Identifier,env)"];
"1000342" [label="(Identifier,dst_reg)"];
"1000855" -> "1000854"  [label="AST: "];
"1000855" -> "1000859"  [label="CFG: "];
"1000856" -> "1000855"  [label="AST: "];
"1000859" -> "1000855"  [label="AST: "];
"1000861" -> "1000855"  [label="CFG: "];
"1000854" -> "1000855"  [label="CFG: "];
"1000855" -> "1000907"  [label="DDG: PTR_TO_MAP_VALUE"];
"1000855" -> "1000907"  [label="DDG: dst_reg->type"];
"1000855" -> "1000854"  [label="DDG: dst_reg->type"];
"1000855" -> "1000854"  [label="DDG: PTR_TO_MAP_VALUE"];
"1000333" -> "1000855"  [label="DDG: dst_reg->type"];
"1000855" -> "1000879"  [label="DDG: dst_reg->type"];
"1000333" -> "1000124"  [label="AST: "];
"1000333" -> "1000337"  [label="CFG: "];
"1000334" -> "1000333"  [label="AST: "];
"1000337" -> "1000333"  [label="AST: "];
"1000342" -> "1000333"  [label="CFG: "];
"1000333" -> "1000907"  [label="DDG: dst_reg->type"];
"1000854" -> "1000853"  [label="AST: "];
"1000854" -> "1000860"  [label="CFG: "];
"1000860" -> "1000854"  [label="AST: "];
"1000870" -> "1000854"  [label="CFG: "];
"1000881" -> "1000854"  [label="CFG: "];
"1000854" -> "1000907"  [label="DDG: check_map_access(env, dst, dst_reg->off, 1, false)"];
"1000854" -> "1000907"  [label="DDG: dst_reg->type == PTR_TO_MAP_VALUE"];
"1000854" -> "1000907"  [label="DDG: dst_reg->type == PTR_TO_MAP_VALUE &&\n\t\t    check_map_access(env, dst, dst_reg->off, 1, false)"];
"1000860" -> "1000854"  [label="DDG: 1"];
"1000860" -> "1000854"  [label="DDG: false"];
"1000860" -> "1000854"  [label="DDG: dst_reg->off"];
"1000860" -> "1000854"  [label="DDG: dst"];
"1000860" -> "1000854"  [label="DDG: env"];
"1000879" -> "1000878"  [label="AST: "];
"1000879" -> "1000883"  [label="CFG: "];
"1000880" -> "1000879"  [label="AST: "];
"1000883" -> "1000879"  [label="AST: "];
"1000885" -> "1000879"  [label="CFG: "];
"1000878" -> "1000879"  [label="CFG: "];
"1000879" -> "1000907"  [label="DDG: PTR_TO_STACK"];
"1000879" -> "1000907"  [label="DDG: dst_reg->type"];
"1000879" -> "1000878"  [label="DDG: dst_reg->type"];
"1000879" -> "1000878"  [label="DDG: PTR_TO_STACK"];
"1000606" -> "1000879"  [label="DDG: PTR_TO_STACK"];
"1000878" -> "1000877"  [label="AST: "];
"1000878" -> "1000884"  [label="CFG: "];
"1000884" -> "1000878"  [label="AST: "];
"1000899" -> "1000878"  [label="CFG: "];
"1000906" -> "1000878"  [label="CFG: "];
"1000878" -> "1000907"  [label="DDG: dst_reg->type == PTR_TO_STACK &&\n\t\t\t   check_stack_access(env, dst_reg, dst_reg->off +\n\t\t\t\t\t      dst_reg->var_off.value, 1)"];
"1000878" -> "1000907"  [label="DDG: check_stack_access(env, dst_reg, dst_reg->off +\n\t\t\t\t\t      dst_reg->var_off.value, 1)"];
"1000878" -> "1000907"  [label="DDG: dst_reg->type == PTR_TO_STACK"];
"1000884" -> "1000878"  [label="DDG: env"];
"1000884" -> "1000878"  [label="DDG: dst_reg"];
"1000884" -> "1000878"  [label="DDG: dst_reg->off +\n\t\t\t\t\t      dst_reg->var_off.value"];
"1000884" -> "1000878"  [label="DDG: 1"];
}
