digraph "0_libpcap_87d6bef033062f969e70fa40c43dfd945d5a20ab@API" {
"1000341" [label="(Call,pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE,\n\t\t    \"unknown time stamp resolution %u\", precision))"];
"1000298" [label="(Call,pcap_open_offline_common(errbuf, sizeof (struct pcap_ng_sf)))"];
"1000137" [label="(MethodParameterIn,char *errbuf)"];
"1000136" [label="(MethodParameterIn,u_int precision)"];
"1000341" [label="(Call,pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE,\n\t\t    \"unknown time stamp resolution %u\", precision))"];
"1000136" [label="(MethodParameterIn,u_int precision)"];
"1000284" [label="(Call,pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE,\n\t\t    \"pcapng block size %u > maximum %u\",\n\t\t    total_length, INITIAL_MAX_BLOCKSIZE))"];
"1000296" [label="(Call,p = pcap_open_offline_common(errbuf, sizeof (struct pcap_ng_sf)))"];
"1000344" [label="(Literal,\"unknown time stamp resolution %u\")"];
"1000342" [label="(Identifier,errbuf)"];
"1000191" [label="(Call,pcap_fmt_errmsg_for_errno(errbuf, PCAP_ERRBUF_SIZE,\n\t\t\t    errno, \"error reading dump file\"))"];
"1000298" [label="(Call,pcap_open_offline_common(errbuf, sizeof (struct pcap_ng_sf)))"];
"1000622" [label="(Call,pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE,\n\t\t\t    \"the capture file has a packet block before any Interface Description Blocks\"))"];
"1000223" [label="(Call,pcap_fmt_errmsg_for_errno(errbuf, PCAP_ERRBUF_SIZE,\n\t\t\t    errno, \"error reading dump file\"))"];
"1000300" [label="(Call,sizeof (struct pcap_ng_sf))"];
"1000536" [label="(Call,p->opt.tstamp_precision = precision)"];
"1000354" [label="(Call,p->opt.tstamp_precision = precision)"];
"1000707" [label="(MethodReturn,RET)"];
"1000137" [label="(MethodParameterIn,char *errbuf)"];
"1000612" [label="(Call,add_interface(p, &cursor, errbuf))"];
"1000347" [label="(Identifier,p)"];
"1000325" [label="(Block,)"];
"1000392" [label="(Call,pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"out of memory\"))"];
"1000558" [label="(Call,pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE,\n\t\t\t    \"the capture file has no Interface Description Blocks\"))"];
"1000577" [label="(Call,get_from_block_data(&cursor, sizeof(*idbp),\n\t\t\t    errbuf))"];
"1000511" [label="(Call,pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE,\n\t\t    \"unsupported pcapng savefile version %u.%u\",\n\t\t    shbp->major_version, shbp->minor_version))"];
"1000345" [label="(Identifier,precision)"];
"1000445" [label="(Call,read_bytes(fp,\n\t    (u_char *)p->buffer + (sizeof(magic_int) + sizeof(total_length) + sizeof(byte_order_magic)),\n\t    total_length - (sizeof(magic_int) + sizeof(total_length) + sizeof(byte_order_magic)),\n\t    1, errbuf))"];
"1000547" [label="(Call,read_block(fp, p, &cursor, errbuf))"];
"1000299" [label="(Identifier,errbuf)"];
"1000343" [label="(Identifier,PCAP_ERRBUF_SIZE)"];
"1000341" -> "1000325"  [label="AST: "];
"1000341" -> "1000345"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="AST: "];
"1000344" -> "1000341"  [label="AST: "];
"1000345" -> "1000341"  [label="AST: "];
"1000347" -> "1000341"  [label="CFG: "];
"1000341" -> "1000707"  [label="DDG: "];
"1000341" -> "1000707"  [label="DDG: "];
"1000341" -> "1000707"  [label="DDG: "];
"1000341" -> "1000707"  [label="DDG: "];
"1000298" -> "1000341"  [label="DDG: "];
"1000137" -> "1000341"  [label="DDG: "];
"1000136" -> "1000341"  [label="DDG: "];
"1000298" -> "1000296"  [label="AST: "];
"1000298" -> "1000300"  [label="CFG: "];
"1000299" -> "1000298"  [label="AST: "];
"1000300" -> "1000298"  [label="AST: "];
"1000296" -> "1000298"  [label="CFG: "];
"1000298" -> "1000707"  [label="DDG: "];
"1000298" -> "1000296"  [label="DDG: "];
"1000137" -> "1000298"  [label="DDG: "];
"1000298" -> "1000392"  [label="DDG: "];
"1000298" -> "1000445"  [label="DDG: "];
"1000137" -> "1000133"  [label="AST: "];
"1000137" -> "1000707"  [label="DDG: "];
"1000137" -> "1000191"  [label="DDG: "];
"1000137" -> "1000223"  [label="DDG: "];
"1000137" -> "1000284"  [label="DDG: "];
"1000137" -> "1000392"  [label="DDG: "];
"1000137" -> "1000445"  [label="DDG: "];
"1000137" -> "1000511"  [label="DDG: "];
"1000137" -> "1000547"  [label="DDG: "];
"1000137" -> "1000558"  [label="DDG: "];
"1000137" -> "1000577"  [label="DDG: "];
"1000137" -> "1000612"  [label="DDG: "];
"1000137" -> "1000622"  [label="DDG: "];
"1000136" -> "1000133"  [label="AST: "];
"1000136" -> "1000707"  [label="DDG: "];
"1000136" -> "1000354"  [label="DDG: "];
"1000136" -> "1000536"  [label="DDG: "];
}
