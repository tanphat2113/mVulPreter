digraph "0_linux_363b02dab09b3226f3bd1420dad9c72b79a42a76_13@pointer" {
"1000373" [label="(Call,__key_get(key))"];
"1000364" [label="(Call,key = ctx.cred->user->session_keyring)"];
"1000347" [label="(Call,!ctx.cred->user->session_keyring)"];
"1000377" [label="(Call,make_key_ref(key, 1))"];
"1000375" [label="(Call,key_ref = make_key_ref(key, 1))"];
"1000633" [label="(Call,key_task_permission(key_ref, ctx.cred, perm))"];
"1000631" [label="(Call,ret = key_task_permission(key_ref, ctx.cred, perm))"];
"1000640" [label="(Call,ret < 0)"];
"1000663" [label="(Call,ERR_PTR(ret))"];
"1000661" [label="(Call,key_ref = ERR_PTR(ret))"];
"1000656" [label="(Return,return key_ref;)"];
"1000652" [label="(Call,put_cred(ctx.cred))"];
"1000659" [label="(Call,key_ref_put(key_ref))"];
"1000589" [label="(Call,wait_for_key_construction(key, true))"];
"1000587" [label="(Call,ret = wait_for_key_construction(key, true))"];
"1000627" [label="(Call,key_read_state(key))"];
"1000626" [label="(Call,key_read_state(key) == KEY_IS_UNINSTANTIATED)"];
"1000621" [label="(Call,!(lflags & KEY_LOOKUP_PARTIAL) &&\n\t    key_read_state(key) == KEY_IS_UNINSTANTIATED)"];
"1000609" [label="(Call,key_validate(key))"];
"1000607" [label="(Call,ret = key_validate(key))"];
"1000612" [label="(Call,ret < 0)"];
"1000629" [label="(Identifier,KEY_IS_UNINSTANTIATED)"];
"1000568" [label="(Call,key_ref = skey_ref)"];
"1000339" [label="(Call,key_ref = make_key_ref(key, 1))"];
"1000347" [label="(Call,!ctx.cred->user->session_keyring)"];
"1000346" [label="(ControlStructure,if (!ctx.cred->user->session_keyring))"];
"1000641" [label="(Identifier,ret)"];
"1000123" [label="(Call,key_ref = ERR_PTR(-ENOKEY))"];
"1000506" [label="(Call,key_ref = ERR_CAST(key))"];
"1000404" [label="(Call,make_key_ref(key, 1))"];
"1000488" [label="(Call,key_ref = ERR_PTR(-EINVAL))"];
"1000620" [label="(ControlStructure,if (!(lflags & KEY_LOOKUP_PARTIAL) &&\n\t    key_read_state(key) == KEY_IS_UNINSTANTIATED))"];
"1000110" [label="(Block,)"];
"1000213" [label="(Call,key_ref = make_key_ref(key, 1))"];
"1000652" [label="(Call,put_cred(ctx.cred))"];
"1000511" [label="(Call,key_ref = make_key_ref(key, 0))"];
"1000653" [label="(Call,ctx.cred)"];
"1000341" [label="(Call,make_key_ref(key, 1))"];
"1000566" [label="(Call,key_put(key))"];
"1000632" [label="(Identifier,ret)"];
"1000483" [label="(Call,make_key_ref(key, 1))"];
"1000628" [label="(Identifier,key)"];
"1000614" [label="(Literal,0)"];
"1000657" [label="(Identifier,key_ref)"];
"1000616" [label="(Call,ret = -EIO)"];
"1000379" [label="(Literal,1)"];
"1000118" [label="(Call,ctx.cred = get_current_cred())"];
"1000664" [label="(Identifier,ret)"];
"1000380" [label="(ControlStructure,break;)"];
"1000171" [label="(Call,make_key_ref(key, 1))"];
"1000375" [label="(Call,key_ref = make_key_ref(key, 1))"];
"1000646" [label="(Identifier,key)"];
"1000665" [label="(ControlStructure,goto error;)"];
"1000587" [label="(Call,ret = wait_for_key_construction(key, true))"];
"1000366" [label="(Call,ctx.cred->user->session_keyring)"];
"1000303" [label="(Call,key_ref = make_key_ref(key, 1))"];
"1000612" [label="(Call,ret < 0)"];
"1000588" [label="(Identifier,ret)"];
"1000613" [label="(Identifier,ret)"];
"1000622" [label="(Call,!(lflags & KEY_LOOKUP_PARTIAL))"];
"1000402" [label="(Call,key_ref = make_key_ref(key, 1))"];
"1000589" [label="(Call,wait_for_key_construction(key, true))"];
"1000109" [label="(MethodParameterIn,key_perm_t perm)"];
"1000215" [label="(Call,make_key_ref(key, 1))"];
"1000169" [label="(Call,key_ref = make_key_ref(key, 1))"];
"1000377" [label="(Call,make_key_ref(key, 1))"];
"1000617" [label="(Identifier,ret)"];
"1000630" [label="(ControlStructure,goto invalid_key;)"];
"1000638" [label="(Identifier,perm)"];
"1000610" [label="(Identifier,key)"];
"1000373" [label="(Call,__key_get(key))"];
"1000593" [label="(Identifier,ret)"];
"1000639" [label="(ControlStructure,if (ret < 0))"];
"1000591" [label="(Identifier,true)"];
"1000640" [label="(Call,ret < 0)"];
"1000609" [label="(Call,key_validate(key))"];
"1000660" [label="(Identifier,key_ref)"];
"1000606" [label="(Block,)"];
"1000130" [label="(Block,)"];
"1000378" [label="(Identifier,key)"];
"1000633" [label="(Call,key_task_permission(key_ref, ctx.cred, perm))"];
"1000659" [label="(Call,key_ref_put(key_ref))"];
"1000607" [label="(Call,ret = key_validate(key))"];
"1000357" [label="(Identifier,ret)"];
"1000631" [label="(Call,ret = key_task_permission(key_ref, ctx.cred, perm))"];
"1000611" [label="(ControlStructure,if (ret < 0))"];
"1000376" [label="(Identifier,key_ref)"];
"1000627" [label="(Call,key_read_state(key))"];
"1000481" [label="(Call,key_ref = make_key_ref(key, 1))"];
"1000154" [label="(Call,key_ref = ERR_PTR(ret))"];
"1000586" [label="(Block,)"];
"1000198" [label="(Call,key_ref = ERR_PTR(ret))"];
"1000661" [label="(Call,key_ref = ERR_PTR(ret))"];
"1000382" [label="(Call,key_ref = ERR_PTR(-EINVAL))"];
"1000662" [label="(Identifier,key_ref)"];
"1000642" [label="(Literal,0)"];
"1000364" [label="(Call,key = ctx.cred->user->session_keyring)"];
"1000621" [label="(Call,!(lflags & KEY_LOOKUP_PARTIAL) &&\n\t    key_read_state(key) == KEY_IS_UNINSTANTIATED)"];
"1000663" [label="(Call,ERR_PTR(ret))"];
"1000590" [label="(Identifier,key)"];
"1000615" [label="(ControlStructure,goto invalid_key;)"];
"1000656" [label="(Return,return key_ref;)"];
"1000348" [label="(Call,ctx.cred->user->session_keyring)"];
"1000608" [label="(Identifier,ret)"];
"1000513" [label="(Call,make_key_ref(key, 0))"];
"1000438" [label="(Call,key_ref = ERR_PTR(-EKEYREVOKED))"];
"1000635" [label="(Call,ctx.cred)"];
"1000634" [label="(Identifier,key_ref)"];
"1000643" [label="(ControlStructure,goto invalid_key;)"];
"1000305" [label="(Call,make_key_ref(key, 1))"];
"1000626" [label="(Call,key_read_state(key) == KEY_IS_UNINSTANTIATED)"];
"1000365" [label="(Identifier,key)"];
"1000374" [label="(Identifier,key)"];
"1000672" [label="(MethodReturn,key_ref_t)"];
"1000373" -> "1000130"  [label="AST: "];
"1000373" -> "1000374"  [label="CFG: "];
"1000374" -> "1000373"  [label="AST: "];
"1000376" -> "1000373"  [label="CFG: "];
"1000373" -> "1000672"  [label="DDG: __key_get(key)"];
"1000364" -> "1000373"  [label="DDG: key"];
"1000373" -> "1000377"  [label="DDG: key"];
"1000364" -> "1000130"  [label="AST: "];
"1000364" -> "1000366"  [label="CFG: "];
"1000365" -> "1000364"  [label="AST: "];
"1000366" -> "1000364"  [label="AST: "];
"1000374" -> "1000364"  [label="CFG: "];
"1000364" -> "1000672"  [label="DDG: ctx.cred->user->session_keyring"];
"1000347" -> "1000364"  [label="DDG: ctx.cred->user->session_keyring"];
"1000347" -> "1000346"  [label="AST: "];
"1000347" -> "1000348"  [label="CFG: "];
"1000348" -> "1000347"  [label="AST: "];
"1000357" -> "1000347"  [label="CFG: "];
"1000365" -> "1000347"  [label="CFG: "];
"1000347" -> "1000672"  [label="DDG: ctx.cred->user->session_keyring"];
"1000347" -> "1000672"  [label="DDG: !ctx.cred->user->session_keyring"];
"1000377" -> "1000375"  [label="AST: "];
"1000377" -> "1000379"  [label="CFG: "];
"1000378" -> "1000377"  [label="AST: "];
"1000379" -> "1000377"  [label="AST: "];
"1000375" -> "1000377"  [label="CFG: "];
"1000377" -> "1000672"  [label="DDG: key"];
"1000377" -> "1000375"  [label="DDG: key"];
"1000377" -> "1000375"  [label="DDG: 1"];
"1000377" -> "1000589"  [label="DDG: key"];
"1000377" -> "1000609"  [label="DDG: key"];
"1000377" -> "1000627"  [label="DDG: key"];
"1000375" -> "1000130"  [label="AST: "];
"1000376" -> "1000375"  [label="AST: "];
"1000380" -> "1000375"  [label="CFG: "];
"1000375" -> "1000672"  [label="DDG: key_ref"];
"1000375" -> "1000672"  [label="DDG: make_key_ref(key, 1)"];
"1000375" -> "1000633"  [label="DDG: key_ref"];
"1000375" -> "1000656"  [label="DDG: key_ref"];
"1000375" -> "1000659"  [label="DDG: key_ref"];
"1000633" -> "1000631"  [label="AST: "];
"1000633" -> "1000638"  [label="CFG: "];
"1000634" -> "1000633"  [label="AST: "];
"1000635" -> "1000633"  [label="AST: "];
"1000638" -> "1000633"  [label="AST: "];
"1000631" -> "1000633"  [label="CFG: "];
"1000633" -> "1000672"  [label="DDG: perm"];
"1000633" -> "1000672"  [label="DDG: key_ref"];
"1000633" -> "1000631"  [label="DDG: key_ref"];
"1000633" -> "1000631"  [label="DDG: ctx.cred"];
"1000633" -> "1000631"  [label="DDG: perm"];
"1000568" -> "1000633"  [label="DDG: key_ref"];
"1000303" -> "1000633"  [label="DDG: key_ref"];
"1000213" -> "1000633"  [label="DDG: key_ref"];
"1000402" -> "1000633"  [label="DDG: key_ref"];
"1000339" -> "1000633"  [label="DDG: key_ref"];
"1000511" -> "1000633"  [label="DDG: key_ref"];
"1000169" -> "1000633"  [label="DDG: key_ref"];
"1000481" -> "1000633"  [label="DDG: key_ref"];
"1000118" -> "1000633"  [label="DDG: ctx.cred"];
"1000109" -> "1000633"  [label="DDG: perm"];
"1000633" -> "1000652"  [label="DDG: ctx.cred"];
"1000633" -> "1000656"  [label="DDG: key_ref"];
"1000633" -> "1000659"  [label="DDG: key_ref"];
"1000631" -> "1000110"  [label="AST: "];
"1000632" -> "1000631"  [label="AST: "];
"1000641" -> "1000631"  [label="CFG: "];
"1000631" -> "1000672"  [label="DDG: key_task_permission(key_ref, ctx.cred, perm)"];
"1000631" -> "1000640"  [label="DDG: ret"];
"1000640" -> "1000639"  [label="AST: "];
"1000640" -> "1000642"  [label="CFG: "];
"1000641" -> "1000640"  [label="AST: "];
"1000642" -> "1000640"  [label="AST: "];
"1000643" -> "1000640"  [label="CFG: "];
"1000646" -> "1000640"  [label="CFG: "];
"1000640" -> "1000672"  [label="DDG: ret"];
"1000640" -> "1000672"  [label="DDG: ret < 0"];
"1000640" -> "1000663"  [label="DDG: ret"];
"1000663" -> "1000661"  [label="AST: "];
"1000663" -> "1000664"  [label="CFG: "];
"1000664" -> "1000663"  [label="AST: "];
"1000661" -> "1000663"  [label="CFG: "];
"1000663" -> "1000672"  [label="DDG: ret"];
"1000663" -> "1000661"  [label="DDG: ret"];
"1000587" -> "1000663"  [label="DDG: ret"];
"1000612" -> "1000663"  [label="DDG: ret"];
"1000616" -> "1000663"  [label="DDG: ret"];
"1000661" -> "1000110"  [label="AST: "];
"1000662" -> "1000661"  [label="AST: "];
"1000665" -> "1000661"  [label="CFG: "];
"1000661" -> "1000672"  [label="DDG: ERR_PTR(ret)"];
"1000661" -> "1000672"  [label="DDG: key_ref"];
"1000661" -> "1000656"  [label="DDG: key_ref"];
"1000656" -> "1000110"  [label="AST: "];
"1000656" -> "1000657"  [label="CFG: "];
"1000657" -> "1000656"  [label="AST: "];
"1000672" -> "1000656"  [label="CFG: "];
"1000656" -> "1000672"  [label="DDG: <RET>"];
"1000657" -> "1000656"  [label="DDG: key_ref"];
"1000382" -> "1000656"  [label="DDG: key_ref"];
"1000303" -> "1000656"  [label="DDG: key_ref"];
"1000506" -> "1000656"  [label="DDG: key_ref"];
"1000154" -> "1000656"  [label="DDG: key_ref"];
"1000402" -> "1000656"  [label="DDG: key_ref"];
"1000198" -> "1000656"  [label="DDG: key_ref"];
"1000339" -> "1000656"  [label="DDG: key_ref"];
"1000511" -> "1000656"  [label="DDG: key_ref"];
"1000169" -> "1000656"  [label="DDG: key_ref"];
"1000438" -> "1000656"  [label="DDG: key_ref"];
"1000568" -> "1000656"  [label="DDG: key_ref"];
"1000488" -> "1000656"  [label="DDG: key_ref"];
"1000213" -> "1000656"  [label="DDG: key_ref"];
"1000481" -> "1000656"  [label="DDG: key_ref"];
"1000123" -> "1000656"  [label="DDG: key_ref"];
"1000652" -> "1000110"  [label="AST: "];
"1000652" -> "1000653"  [label="CFG: "];
"1000653" -> "1000652"  [label="AST: "];
"1000657" -> "1000652"  [label="CFG: "];
"1000652" -> "1000672"  [label="DDG: put_cred(ctx.cred)"];
"1000652" -> "1000672"  [label="DDG: ctx.cred"];
"1000118" -> "1000652"  [label="DDG: ctx.cred"];
"1000659" -> "1000110"  [label="AST: "];
"1000659" -> "1000660"  [label="CFG: "];
"1000660" -> "1000659"  [label="AST: "];
"1000662" -> "1000659"  [label="CFG: "];
"1000659" -> "1000672"  [label="DDG: key_ref_put(key_ref)"];
"1000568" -> "1000659"  [label="DDG: key_ref"];
"1000303" -> "1000659"  [label="DDG: key_ref"];
"1000213" -> "1000659"  [label="DDG: key_ref"];
"1000402" -> "1000659"  [label="DDG: key_ref"];
"1000339" -> "1000659"  [label="DDG: key_ref"];
"1000511" -> "1000659"  [label="DDG: key_ref"];
"1000169" -> "1000659"  [label="DDG: key_ref"];
"1000481" -> "1000659"  [label="DDG: key_ref"];
"1000589" -> "1000587"  [label="AST: "];
"1000589" -> "1000591"  [label="CFG: "];
"1000590" -> "1000589"  [label="AST: "];
"1000591" -> "1000589"  [label="AST: "];
"1000587" -> "1000589"  [label="CFG: "];
"1000589" -> "1000672"  [label="DDG: key"];
"1000589" -> "1000672"  [label="DDG: true"];
"1000589" -> "1000587"  [label="DDG: key"];
"1000589" -> "1000587"  [label="DDG: true"];
"1000171" -> "1000589"  [label="DDG: key"];
"1000404" -> "1000589"  [label="DDG: key"];
"1000215" -> "1000589"  [label="DDG: key"];
"1000305" -> "1000589"  [label="DDG: key"];
"1000566" -> "1000589"  [label="DDG: key"];
"1000341" -> "1000589"  [label="DDG: key"];
"1000483" -> "1000589"  [label="DDG: key"];
"1000513" -> "1000589"  [label="DDG: key"];
"1000589" -> "1000627"  [label="DDG: key"];
"1000587" -> "1000586"  [label="AST: "];
"1000588" -> "1000587"  [label="AST: "];
"1000593" -> "1000587"  [label="CFG: "];
"1000587" -> "1000672"  [label="DDG: wait_for_key_construction(key, true)"];
"1000627" -> "1000626"  [label="AST: "];
"1000627" -> "1000628"  [label="CFG: "];
"1000628" -> "1000627"  [label="AST: "];
"1000629" -> "1000627"  [label="CFG: "];
"1000627" -> "1000672"  [label="DDG: key"];
"1000627" -> "1000626"  [label="DDG: key"];
"1000171" -> "1000627"  [label="DDG: key"];
"1000404" -> "1000627"  [label="DDG: key"];
"1000215" -> "1000627"  [label="DDG: key"];
"1000609" -> "1000627"  [label="DDG: key"];
"1000305" -> "1000627"  [label="DDG: key"];
"1000566" -> "1000627"  [label="DDG: key"];
"1000341" -> "1000627"  [label="DDG: key"];
"1000483" -> "1000627"  [label="DDG: key"];
"1000513" -> "1000627"  [label="DDG: key"];
"1000626" -> "1000621"  [label="AST: "];
"1000626" -> "1000629"  [label="CFG: "];
"1000629" -> "1000626"  [label="AST: "];
"1000621" -> "1000626"  [label="CFG: "];
"1000626" -> "1000672"  [label="DDG: KEY_IS_UNINSTANTIATED"];
"1000626" -> "1000672"  [label="DDG: key_read_state(key)"];
"1000626" -> "1000621"  [label="DDG: key_read_state(key)"];
"1000626" -> "1000621"  [label="DDG: KEY_IS_UNINSTANTIATED"];
"1000621" -> "1000620"  [label="AST: "];
"1000621" -> "1000622"  [label="CFG: "];
"1000622" -> "1000621"  [label="AST: "];
"1000630" -> "1000621"  [label="CFG: "];
"1000632" -> "1000621"  [label="CFG: "];
"1000621" -> "1000672"  [label="DDG: !(lflags & KEY_LOOKUP_PARTIAL)"];
"1000621" -> "1000672"  [label="DDG: key_read_state(key) == KEY_IS_UNINSTANTIATED"];
"1000621" -> "1000672"  [label="DDG: !(lflags & KEY_LOOKUP_PARTIAL) &&\n\t    key_read_state(key) == KEY_IS_UNINSTANTIATED"];
"1000622" -> "1000621"  [label="DDG: lflags & KEY_LOOKUP_PARTIAL"];
"1000609" -> "1000607"  [label="AST: "];
"1000609" -> "1000610"  [label="CFG: "];
"1000610" -> "1000609"  [label="AST: "];
"1000607" -> "1000609"  [label="CFG: "];
"1000609" -> "1000672"  [label="DDG: key"];
"1000609" -> "1000607"  [label="DDG: key"];
"1000171" -> "1000609"  [label="DDG: key"];
"1000404" -> "1000609"  [label="DDG: key"];
"1000215" -> "1000609"  [label="DDG: key"];
"1000305" -> "1000609"  [label="DDG: key"];
"1000566" -> "1000609"  [label="DDG: key"];
"1000341" -> "1000609"  [label="DDG: key"];
"1000483" -> "1000609"  [label="DDG: key"];
"1000513" -> "1000609"  [label="DDG: key"];
"1000607" -> "1000606"  [label="AST: "];
"1000608" -> "1000607"  [label="AST: "];
"1000613" -> "1000607"  [label="CFG: "];
"1000607" -> "1000672"  [label="DDG: key_validate(key)"];
"1000607" -> "1000612"  [label="DDG: ret"];
"1000612" -> "1000611"  [label="AST: "];
"1000612" -> "1000614"  [label="CFG: "];
"1000613" -> "1000612"  [label="AST: "];
"1000614" -> "1000612"  [label="AST: "];
"1000615" -> "1000612"  [label="CFG: "];
"1000617" -> "1000612"  [label="CFG: "];
"1000612" -> "1000672"  [label="DDG: ret < 0"];
}
