digraph "0_pigz_fdad1406b3ec809f4954ff7cdf9e99eb18c2458f@API" {
"1000971" [label="(Call,strlen(\"<stdout>\"))"];
"1000969" [label="(Call,MALLOC(strlen(\"<stdout>\") + 1))"];
"1000965" [label="(Call,g.outf = MALLOC(strlen(\"<stdout>\") + 1))"];
"1000975" [label="(Call,g.outf == NULL)"];
"1000983" [label="(Call,strcpy(g.outf, \"<stdout>\"))"];
"1001283" [label="(Call,fprintf(stderr, \"%s to %s \", g.inf, g.outf))"];
"1001328" [label="(Call,putc('\n', stderr))"];
"1001331" [label="(Call,fflush(stderr))"];
"1001355" [label="(Call,bail(\"write error on \", g.outf))"];
"1001373" [label="(Call,copymeta(g.inf, g.outf))"];
"1001385" [label="(Call,unlink(g.inf))"];
"1001405" [label="(Call,touch(g.outf, g.stamp))"];
"1001412" [label="(Call,RELEASE(g.outf))"];
"1000970" [label="(Call,strlen(\"<stdout>\") + 1)"];
"1001373" [label="(Call,copymeta(g.inf, g.outf))"];
"1001356" [label="(Literal,\"write error on \")"];
"1001116" [label="(Call,open(g.outf, O_CREAT | O_TRUNC | O_WRONLY |\n                             (g.force ? 0 : O_EXCL), 0600))"];
"1000966" [label="(Call,g.outf)"];
"1000759" [label="(Call,open(g.inf, O_RDONLY, 0))"];
"1000972" [label="(Literal,\"<stdout>\")"];
"1000973" [label="(Literal,1)"];
"1001289" [label="(Call,g.outf)"];
"1001153" [label="(Call,fprintf(stderr, \"%s exists -- overwrite (y/n)? \", g.outf))"];
"1000965" [label="(Call,g.outf = MALLOC(strlen(\"<stdout>\") + 1))"];
"1000985" [label="(Identifier,g)"];
"1001328" [label="(Call,putc('\n', stderr))"];
"1001294" [label="(Identifier,g)"];
"1001327" [label="(Block,)"];
"1001264" [label="(Call,bail(\"write error on \", g.outf))"];
"1001284" [label="(Identifier,stderr)"];
"1001385" [label="(Call,unlink(g.inf))"];
"1001389" [label="(ControlStructure,if (g.decode && (g.headis & 2) != 0 && g.stamp))"];
"1000975" [label="(Call,g.outf == NULL)"];
"1001285" [label="(Literal,\"%s to %s \")"];
"1001332" [label="(Identifier,stderr)"];
"1001283" [label="(Call,fprintf(stderr, \"%s to %s \", g.inf, g.outf))"];
"1001213" [label="(Call,open(g.outf, O_CREAT | O_TRUNC | O_WRONLY,\n                              0600))"];
"1000958" [label="(Call,path == NULL)"];
"1000771" [label="(Call,bail(\"read error on \", g.inf))"];
"1000970" [label="(Call,strlen(\"<stdout>\") + 1)"];
"1001331" [label="(Call,fflush(stderr))"];
"1001286" [label="(Call,g.inf)"];
"1001336" [label="(Identifier,g)"];
"1000974" [label="(ControlStructure,if (g.outf == NULL))"];
"1000984" [label="(Call,g.outf)"];
"1001374" [label="(Call,g.inf)"];
"1001355" [label="(Call,bail(\"write error on \", g.outf))"];
"1001405" [label="(Call,touch(g.outf, g.stamp))"];
"1001413" [label="(Call,g.outf)"];
"1001392" [label="(Identifier,g)"];
"1000150" [label="(Call,strcpy(g.inf, \"<stdin>\"))"];
"1001394" [label="(Call,(g.headis & 2) != 0 && g.stamp)"];
"1000977" [label="(Identifier,g)"];
"1000134" [label="(Block,)"];
"1001412" [label="(Call,RELEASE(g.outf))"];
"1001372" [label="(Block,)"];
"1001416" [label="(MethodReturn,local void)"];
"1001329" [label="(Literal,'\n')"];
"1001330" [label="(Identifier,stderr)"];
"1000979" [label="(Identifier,NULL)"];
"1000983" [label="(Call,strcpy(g.outf, \"<stdout>\"))"];
"1000786" [label="(Call,justname(g.inf))"];
"1001277" [label="(ControlStructure,if (g.verbosity > 1))"];
"1000981" [label="(Literal,\"not enough memory\")"];
"1001377" [label="(Call,g.outf)"];
"1000990" [label="(Identifier,g)"];
"1001350" [label="(ControlStructure,if (close(g.outd)))"];
"1000969" [label="(Call,MALLOC(strlen(\"<stdout>\") + 1))"];
"1000987" [label="(Literal,\"<stdout>\")"];
"1001357" [label="(Call,g.outf)"];
"1001159" [label="(Call,fflush(stderr))"];
"1000971" [label="(Call,strlen(\"<stdout>\"))"];
"1001362" [label="(Identifier,g)"];
"1001383" [label="(Identifier,g)"];
"1001380" [label="(ControlStructure,if (!g.keep))"];
"1000976" [label="(Call,g.outf)"];
"1000964" [label="(Block,)"];
"1001386" [label="(Call,g.inf)"];
"1001409" [label="(Call,g.stamp)"];
"1001414" [label="(Identifier,g)"];
"1001406" [label="(Call,g.outf)"];
"1000971" -> "1000970"  [label="AST: "];
"1000971" -> "1000972"  [label="CFG: "];
"1000972" -> "1000971"  [label="AST: "];
"1000973" -> "1000971"  [label="CFG: "];
"1000971" -> "1000969"  [label="DDG: "];
"1000971" -> "1000970"  [label="DDG: "];
"1000969" -> "1000965"  [label="AST: "];
"1000969" -> "1000970"  [label="CFG: "];
"1000970" -> "1000969"  [label="AST: "];
"1000965" -> "1000969"  [label="CFG: "];
"1000969" -> "1001416"  [label="DDG: "];
"1000969" -> "1000965"  [label="DDG: "];
"1000965" -> "1000964"  [label="AST: "];
"1000966" -> "1000965"  [label="AST: "];
"1000977" -> "1000965"  [label="CFG: "];
"1000965" -> "1001416"  [label="DDG: "];
"1000965" -> "1000975"  [label="DDG: "];
"1000975" -> "1000974"  [label="AST: "];
"1000975" -> "1000979"  [label="CFG: "];
"1000976" -> "1000975"  [label="AST: "];
"1000979" -> "1000975"  [label="AST: "];
"1000981" -> "1000975"  [label="CFG: "];
"1000985" -> "1000975"  [label="CFG: "];
"1000975" -> "1001416"  [label="DDG: "];
"1000975" -> "1001416"  [label="DDG: "];
"1000958" -> "1000975"  [label="DDG: "];
"1000975" -> "1000983"  [label="DDG: "];
"1000983" -> "1000964"  [label="AST: "];
"1000983" -> "1000987"  [label="CFG: "];
"1000984" -> "1000983"  [label="AST: "];
"1000987" -> "1000983"  [label="AST: "];
"1000990" -> "1000983"  [label="CFG: "];
"1000983" -> "1001416"  [label="DDG: "];
"1000983" -> "1001283"  [label="DDG: "];
"1000983" -> "1001355"  [label="DDG: "];
"1000983" -> "1001373"  [label="DDG: "];
"1000983" -> "1001405"  [label="DDG: "];
"1000983" -> "1001412"  [label="DDG: "];
"1001283" -> "1001277"  [label="AST: "];
"1001283" -> "1001289"  [label="CFG: "];
"1001284" -> "1001283"  [label="AST: "];
"1001285" -> "1001283"  [label="AST: "];
"1001286" -> "1001283"  [label="AST: "];
"1001289" -> "1001283"  [label="AST: "];
"1001294" -> "1001283"  [label="CFG: "];
"1001283" -> "1001416"  [label="DDG: "];
"1001283" -> "1001416"  [label="DDG: "];
"1001283" -> "1001416"  [label="DDG: "];
"1001159" -> "1001283"  [label="DDG: "];
"1000771" -> "1001283"  [label="DDG: "];
"1000150" -> "1001283"  [label="DDG: "];
"1000759" -> "1001283"  [label="DDG: "];
"1000786" -> "1001283"  [label="DDG: "];
"1001264" -> "1001283"  [label="DDG: "];
"1001153" -> "1001283"  [label="DDG: "];
"1001213" -> "1001283"  [label="DDG: "];
"1001116" -> "1001283"  [label="DDG: "];
"1001283" -> "1001328"  [label="DDG: "];
"1001283" -> "1001355"  [label="DDG: "];
"1001283" -> "1001373"  [label="DDG: "];
"1001283" -> "1001373"  [label="DDG: "];
"1001283" -> "1001405"  [label="DDG: "];
"1001283" -> "1001412"  [label="DDG: "];
"1001328" -> "1001327"  [label="AST: "];
"1001328" -> "1001330"  [label="CFG: "];
"1001329" -> "1001328"  [label="AST: "];
"1001330" -> "1001328"  [label="AST: "];
"1001332" -> "1001328"  [label="CFG: "];
"1001328" -> "1001416"  [label="DDG: "];
"1001159" -> "1001328"  [label="DDG: "];
"1001328" -> "1001331"  [label="DDG: "];
"1001331" -> "1001327"  [label="AST: "];
"1001331" -> "1001332"  [label="CFG: "];
"1001332" -> "1001331"  [label="AST: "];
"1001336" -> "1001331"  [label="CFG: "];
"1001331" -> "1001416"  [label="DDG: "];
"1001331" -> "1001416"  [label="DDG: "];
"1001355" -> "1001350"  [label="AST: "];
"1001355" -> "1001357"  [label="CFG: "];
"1001356" -> "1001355"  [label="AST: "];
"1001357" -> "1001355"  [label="AST: "];
"1001362" -> "1001355"  [label="CFG: "];
"1001355" -> "1001416"  [label="DDG: "];
"1001264" -> "1001355"  [label="DDG: "];
"1001153" -> "1001355"  [label="DDG: "];
"1001213" -> "1001355"  [label="DDG: "];
"1001116" -> "1001355"  [label="DDG: "];
"1001355" -> "1001373"  [label="DDG: "];
"1001355" -> "1001405"  [label="DDG: "];
"1001355" -> "1001412"  [label="DDG: "];
"1001373" -> "1001372"  [label="AST: "];
"1001373" -> "1001377"  [label="CFG: "];
"1001374" -> "1001373"  [label="AST: "];
"1001377" -> "1001373"  [label="AST: "];
"1001383" -> "1001373"  [label="CFG: "];
"1001373" -> "1001416"  [label="DDG: "];
"1001373" -> "1001416"  [label="DDG: "];
"1000771" -> "1001373"  [label="DDG: "];
"1000150" -> "1001373"  [label="DDG: "];
"1000759" -> "1001373"  [label="DDG: "];
"1000786" -> "1001373"  [label="DDG: "];
"1001264" -> "1001373"  [label="DDG: "];
"1001153" -> "1001373"  [label="DDG: "];
"1001213" -> "1001373"  [label="DDG: "];
"1001116" -> "1001373"  [label="DDG: "];
"1001373" -> "1001385"  [label="DDG: "];
"1001373" -> "1001405"  [label="DDG: "];
"1001373" -> "1001412"  [label="DDG: "];
"1001385" -> "1001380"  [label="AST: "];
"1001385" -> "1001386"  [label="CFG: "];
"1001386" -> "1001385"  [label="AST: "];
"1001392" -> "1001385"  [label="CFG: "];
"1001385" -> "1001416"  [label="DDG: "];
"1001385" -> "1001416"  [label="DDG: "];
"1001405" -> "1001389"  [label="AST: "];
"1001405" -> "1001409"  [label="CFG: "];
"1001406" -> "1001405"  [label="AST: "];
"1001409" -> "1001405"  [label="AST: "];
"1001414" -> "1001405"  [label="CFG: "];
"1001405" -> "1001416"  [label="DDG: "];
"1001405" -> "1001416"  [label="DDG: "];
"1001264" -> "1001405"  [label="DDG: "];
"1001153" -> "1001405"  [label="DDG: "];
"1001213" -> "1001405"  [label="DDG: "];
"1001116" -> "1001405"  [label="DDG: "];
"1001394" -> "1001405"  [label="DDG: "];
"1001405" -> "1001412"  [label="DDG: "];
"1001412" -> "1000134"  [label="AST: "];
"1001412" -> "1001413"  [label="CFG: "];
"1001413" -> "1001412"  [label="AST: "];
"1001416" -> "1001412"  [label="CFG: "];
"1001412" -> "1001416"  [label="DDG: "];
"1001412" -> "1001416"  [label="DDG: "];
"1001264" -> "1001412"  [label="DDG: "];
"1001153" -> "1001412"  [label="DDG: "];
"1001213" -> "1001412"  [label="DDG: "];
"1001116" -> "1001412"  [label="DDG: "];
"1000970" -> "1000973"  [label="CFG: "];
"1000973" -> "1000970"  [label="AST: "];
"1000970" -> "1001416"  [label="DDG: "];
}
