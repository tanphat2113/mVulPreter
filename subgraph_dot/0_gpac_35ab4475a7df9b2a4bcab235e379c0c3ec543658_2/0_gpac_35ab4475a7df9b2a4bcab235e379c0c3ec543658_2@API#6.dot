digraph "0_gpac_35ab4475a7df9b2a4bcab235e379c0c3ec543658_2@API" {
"1000193" [label="(Call,strlen(sep2 + 1) >= sizeof(szVal))"];
"1000194" [label="(Call,strlen(sep2 + 1))"];
"1000169" [label="(Call,sep2 - sep)"];
"1000157" [label="(Call,!sep2)"];
"1000151" [label="(Call,sep2 = strchr(sep, '='))"];
"1000153" [label="(Call,strchr(sep, '='))"];
"1000149" [label="(Call,sep ++)"];
"1000126" [label="(Call,sep - opt_string)"];
"1000114" [label="(Call,!sep)"];
"1000108" [label="(Call,sep = strchr(opt_string, ':'))"];
"1000110" [label="(Call,strchr(opt_string, ':'))"];
"1000101" [label="(MethodParameterIn,char *opt_string)"];
"1000161" [label="(Identifier,stderr)"];
"1000124" [label="(Call,sepIdx = sep - opt_string)"];
"1000194" [label="(Call,strlen(sep2 + 1))"];
"1000151" [label="(Call,sep2 = strchr(sep, '='))"];
"1000192" [label="(ControlStructure,if (strlen(sep2 + 1) >= sizeof(szVal)))"];
"1000156" [label="(ControlStructure,if (!sep2))"];
"1000114" [label="(Call,!sep)"];
"1000128" [label="(Identifier,opt_string)"];
"1000168" [label="(Identifier,sepIdx)"];
"1000150" [label="(Identifier,sep)"];
"1000252" [label="(MethodReturn,void)"];
"1000118" [label="(Identifier,stderr)"];
"1000195" [label="(Call,sep2 + 1)"];
"1000152" [label="(Identifier,sep2)"];
"1000155" [label="(Literal,'=')"];
"1000115" [label="(Identifier,sep)"];
"1000125" [label="(Identifier,sepIdx)"];
"1000198" [label="(Call,sizeof(szVal))"];
"1000140" [label="(Call,strncpy(szSec, opt_string, sepIdx))"];
"1000110" [label="(Call,strchr(opt_string, ':'))"];
"1000171" [label="(Identifier,sep)"];
"1000157" [label="(Call,!sep2)"];
"1000183" [label="(Call,strncpy(szKey, sep, sepIdx))"];
"1000127" [label="(Identifier,sep)"];
"1000126" [label="(Call,sep - opt_string)"];
"1000108" [label="(Call,sep = strchr(opt_string, ':'))"];
"1000178" [label="(Call,fprintf(stderr, \"Badly formatted option %s - key name is too long\n\", opt_string))"];
"1000201" [label="(Call,fprintf(stderr, \"Badly formatted option %s - value is too long\n\", opt_string))"];
"1000117" [label="(Call,fprintf(stderr, \"Badly formatted option %s - expected Section:Name=Value\n\", opt_string))"];
"1000170" [label="(Identifier,sep2)"];
"1000135" [label="(Call,fprintf(stderr, \"Badly formatted option %s - Section name is too long\n\", opt_string))"];
"1000112" [label="(Literal,':')"];
"1000111" [label="(Identifier,opt_string)"];
"1000101" [label="(MethodParameterIn,char *opt_string)"];
"1000158" [label="(Identifier,sep2)"];
"1000206" [label="(Call,strcpy(szVal, sep2+1))"];
"1000102" [label="(Block,)"];
"1000153" [label="(Call,strchr(sep, '='))"];
"1000149" [label="(Call,sep ++)"];
"1000113" [label="(ControlStructure,if (!sep))"];
"1000109" [label="(Identifier,sep)"];
"1000154" [label="(Identifier,sep)"];
"1000208" [label="(Call,sep2+1)"];
"1000160" [label="(Call,fprintf(stderr, \"Badly formatted option %s - expected Section:Name=Value\n\", opt_string))"];
"1000193" [label="(Call,strlen(sep2 + 1) >= sizeof(szVal))"];
"1000202" [label="(Identifier,stderr)"];
"1000167" [label="(Call,sepIdx = sep2 - sep)"];
"1000222" [label="(Call,fprintf(stderr, \"Badly formatted option %s - expected Section:*=null\n\", opt_string))"];
"1000199" [label="(Identifier,szVal)"];
"1000207" [label="(Identifier,szVal)"];
"1000169" [label="(Call,sep2 - sep)"];
"1000193" -> "1000192"  [label="AST: "];
"1000193" -> "1000198"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000198" -> "1000193"  [label="AST: "];
"1000202" -> "1000193"  [label="CFG: "];
"1000207" -> "1000193"  [label="CFG: "];
"1000193" -> "1000252"  [label="DDG: strlen(sep2 + 1)"];
"1000193" -> "1000252"  [label="DDG: strlen(sep2 + 1) >= sizeof(szVal)"];
"1000194" -> "1000193"  [label="DDG: sep2 + 1"];
"1000194" -> "1000195"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000199" -> "1000194"  [label="CFG: "];
"1000194" -> "1000252"  [label="DDG: sep2 + 1"];
"1000169" -> "1000194"  [label="DDG: sep2"];
"1000169" -> "1000167"  [label="AST: "];
"1000169" -> "1000171"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000171" -> "1000169"  [label="AST: "];
"1000167" -> "1000169"  [label="CFG: "];
"1000169" -> "1000252"  [label="DDG: sep"];
"1000169" -> "1000252"  [label="DDG: sep2"];
"1000169" -> "1000167"  [label="DDG: sep2"];
"1000169" -> "1000167"  [label="DDG: sep"];
"1000157" -> "1000169"  [label="DDG: sep2"];
"1000153" -> "1000169"  [label="DDG: sep"];
"1000169" -> "1000183"  [label="DDG: sep"];
"1000169" -> "1000195"  [label="DDG: sep2"];
"1000169" -> "1000206"  [label="DDG: sep2"];
"1000169" -> "1000208"  [label="DDG: sep2"];
"1000157" -> "1000156"  [label="AST: "];
"1000157" -> "1000158"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000161" -> "1000157"  [label="CFG: "];
"1000168" -> "1000157"  [label="CFG: "];
"1000157" -> "1000252"  [label="DDG: !sep2"];
"1000157" -> "1000252"  [label="DDG: sep2"];
"1000151" -> "1000157"  [label="DDG: sep2"];
"1000151" -> "1000102"  [label="AST: "];
"1000151" -> "1000153"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000153" -> "1000151"  [label="AST: "];
"1000158" -> "1000151"  [label="CFG: "];
"1000151" -> "1000252"  [label="DDG: strchr(sep, '=')"];
"1000153" -> "1000151"  [label="DDG: sep"];
"1000153" -> "1000151"  [label="DDG: '='"];
"1000153" -> "1000155"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000155" -> "1000153"  [label="AST: "];
"1000153" -> "1000252"  [label="DDG: sep"];
"1000149" -> "1000153"  [label="DDG: sep"];
"1000149" -> "1000102"  [label="AST: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000152" -> "1000149"  [label="CFG: "];
"1000126" -> "1000149"  [label="DDG: sep"];
"1000126" -> "1000124"  [label="AST: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000128" -> "1000126"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000126" -> "1000252"  [label="DDG: sep"];
"1000126" -> "1000124"  [label="DDG: sep"];
"1000126" -> "1000124"  [label="DDG: opt_string"];
"1000114" -> "1000126"  [label="DDG: sep"];
"1000110" -> "1000126"  [label="DDG: opt_string"];
"1000101" -> "1000126"  [label="DDG: opt_string"];
"1000126" -> "1000135"  [label="DDG: opt_string"];
"1000126" -> "1000140"  [label="DDG: opt_string"];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000115"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000118" -> "1000114"  [label="CFG: "];
"1000125" -> "1000114"  [label="CFG: "];
"1000114" -> "1000252"  [label="DDG: !sep"];
"1000114" -> "1000252"  [label="DDG: sep"];
"1000108" -> "1000114"  [label="DDG: sep"];
"1000108" -> "1000102"  [label="AST: "];
"1000108" -> "1000110"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000110" -> "1000108"  [label="AST: "];
"1000115" -> "1000108"  [label="CFG: "];
"1000108" -> "1000252"  [label="DDG: strchr(opt_string, ':')"];
"1000110" -> "1000108"  [label="DDG: opt_string"];
"1000110" -> "1000108"  [label="DDG: ':'"];
"1000110" -> "1000112"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000112" -> "1000110"  [label="AST: "];
"1000101" -> "1000110"  [label="DDG: opt_string"];
"1000110" -> "1000117"  [label="DDG: opt_string"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000252"  [label="DDG: opt_string"];
"1000101" -> "1000117"  [label="DDG: opt_string"];
"1000101" -> "1000135"  [label="DDG: opt_string"];
"1000101" -> "1000140"  [label="DDG: opt_string"];
"1000101" -> "1000160"  [label="DDG: opt_string"];
"1000101" -> "1000178"  [label="DDG: opt_string"];
"1000101" -> "1000201"  [label="DDG: opt_string"];
"1000101" -> "1000222"  [label="DDG: opt_string"];
}
