digraph "0_radare2_f17bfd9f1da05f30f23a4dd05e9d2363e1406948@array" {
"1002255" [label="(Call,op->operands[1].type & OT_REGTYPE & OT_SEGMENTREG)"];
"1001988" [label="(Call,op->operands[1].type & OT_MEMORY)"];
"1001264" [label="(Call,op->operands[1].type & OT_MEMORY)"];
"1001254" [label="(Call,op->operands[1].type & OT_REGALL)"];
"1000132" [label="(Call,op->operands[1].type & OT_CONSTANT)"];
"1002263" [label="(Call,OT_REGTYPE & OT_SEGMENTREG)"];
"1002377" [label="(Call,op->operands[1].type & OT_QWORD)"];
"1002376" [label="(Call,!(op->operands[1].type & OT_QWORD))"];
"1002452" [label="(Call,op->operands[1].type & OT_QWORD)"];
"1002451" [label="(Call,op->operands[1].type & OT_QWORD &&\n\t\t\t\top->operands[0].type & OT_QWORD)"];
"1002873" [label="(Call,offset && op->operands[0].type & OT_QWORD)"];
"1002867" [label="(Call,a->bits == 64 && offset && op->operands[0].type & OT_QWORD)"];
"1003008" [label="(Call,op->operands[1].regs[0] == X86R_RIP && (op->operands[0].type & OT_QWORD))"];
"1003151" [label="(Call,offset || op->operands[1].regs[0] == X86R_RIP)"];
"1003145" [label="(Call,a->bits == 64 && (offset || op->operands[1].regs[0] == X86R_RIP))"];
"1003165" [label="(Call,data[l++] = offset)"];
"1003172" [label="(Call,op->operands[1].offset > 127 || op->operands[1].regs[0] == X86R_RIP)"];
"1003199" [label="(Call,offset >> 8)"];
"1003194" [label="(Call,data[l++] = offset >> 8)"];
"1003207" [label="(Call,offset >> 16)"];
"1003202" [label="(Call,data[l++] = offset >> 16)"];
"1003215" [label="(Call,offset >> 24)"];
"1003210" [label="(Call,data[l++] = offset >> 24)"];
"1003090" [label="(Call,data[l++] = offset)"];
"1003124" [label="(Call,offset >> 8)"];
"1003119" [label="(Call,data[l++] = offset >> 8)"];
"1003132" [label="(Call,offset >> 16)"];
"1003127" [label="(Call,data[l++] = offset >> 16)"];
"1003140" [label="(Call,offset >> 24)"];
"1003135" [label="(Call,data[l++] = offset >> 24)"];
"1002461" [label="(Call,op->operands[0].type & OT_QWORD)"];
"1002478" [label="(Call,op->operands[0].type & OT_WORD)"];
"1002529" [label="(Call,op->operands[0].type & OT_BYTE)"];
"1002519" [label="(Call,op->operands[1].type & OT_BYTE ||\n\t\t\t\top->operands[0].type & OT_BYTE)"];
"1002875" [label="(Call,op->operands[0].type & OT_QWORD)"];
"1002990" [label="(Call,op->operands[0].type & OT_DWORD)"];
"1002978" [label="(Call,op->operands[1].regs[0] == X86R_EIP && (op->operands[0].type & OT_DWORD))"];
"1003097" [label="(Call,op->operands[1].offset > 128 || op->operands[1].regs[0] == X86R_EIP)"];
"1003020" [label="(Call,op->operands[0].type & OT_QWORD)"];
"1002500" [label="(Call,op->operands[1].type & OT_BYTE)"];
"1002520" [label="(Call,op->operands[1].type & OT_BYTE)"];
"1002415" [label="(Call,op->operands[1].type & OT_DWORD)"];
"1002434" [label="(Call,op->operands[1].type & OT_QWORD)"];
"1002433" [label="(Call,!(op->operands[1].type & OT_QWORD))"];
"1003125" [label="(Identifier,offset)"];
"1002984" [label="(Identifier,op)"];
"1002255" [label="(Call,op->operands[1].type & OT_REGTYPE & OT_SEGMENTREG)"];
"1003166" [label="(Call,data[l++])"];
"1002477" [label="(ControlStructure,if (op->operands[0].type & OT_WORD))"];
"1003032" [label="(Identifier,data)"];
"1002469" [label="(Identifier,OT_QWORD)"];
"1002499" [label="(Call,op->operands[1].type & OT_BYTE ? 0x8a : 0x8b)"];
"1001255" [label="(Call,op->operands[1].type)"];
"1003193" [label="(Block,)"];
"1000140" [label="(Identifier,OT_CONSTANT)"];
"1002482" [label="(Identifier,op)"];
"1003204" [label="(Identifier,data)"];
"1002529" [label="(Call,op->operands[0].type & OT_BYTE)"];
"1003014" [label="(Identifier,op)"];
"1003171" [label="(ControlStructure,if (op->operands[1].offset > 127 || op->operands[1].regs[0] == X86R_RIP))"];
"1002998" [label="(Identifier,OT_DWORD)"];
"1003132" [label="(Call,offset >> 16)"];
"1003164" [label="(Block,)"];
"1003009" [label="(Call,op->operands[1].regs[0] == X86R_RIP)"];
"1002460" [label="(Identifier,OT_QWORD)"];
"1002883" [label="(Identifier,OT_QWORD)"];
"1003203" [label="(Call,data[l++])"];
"1002530" [label="(Call,op->operands[0].type)"];
"1003146" [label="(Call,a->bits == 64)"];
"1003210" [label="(Call,data[l++] = offset >> 24)"];
"1002003" [label="(Identifier,op)"];
"1000147" [label="(Identifier,op)"];
"1003170" [label="(Identifier,offset)"];
"1002490" [label="(Identifier,data)"];
"1003134" [label="(Literal,16)"];
"1001989" [label="(Call,op->operands[1].type)"];
"1001988" [label="(Call,op->operands[1].type & OT_MEMORY)"];
"1001676" [label="(Call,op->operands[0].type & OT_MEMORY)"];
"1003145" [label="(Call,a->bits == 64 && (offset || op->operands[1].regs[0] == X86R_RIP))"];
"1003151" [label="(Call,offset || op->operands[1].regs[0] == X86R_RIP)"];
"1002891" [label="(Identifier,op)"];
"1003121" [label="(Identifier,data)"];
"1003141" [label="(Identifier,offset)"];
"1002462" [label="(Call,op->operands[0].type)"];
"1002875" [label="(Call,op->operands[0].type & OT_QWORD)"];
"1003120" [label="(Call,data[l++])"];
"1003096" [label="(ControlStructure,if (op->operands[1].offset > 128 || op->operands[1].regs[0] == X86R_EIP))"];
"1001264" [label="(Call,op->operands[1].type & OT_MEMORY)"];
"1002873" [label="(Call,offset && op->operands[0].type & OT_QWORD)"];
"1002456" [label="(Identifier,op)"];
"1000131" [label="(ControlStructure,if (op->operands[1].type & OT_CONSTANT))"];
"1000226" [label="(Call,op->operands[1].type & OT_QWORD)"];
"1002978" [label="(Call,op->operands[1].regs[0] == X86R_EIP && (op->operands[0].type & OT_DWORD))"];
"1001301" [label="(Call,op->operands[1].type & OT_REGTYPE & OT_SEGMENTREG)"];
"1002868" [label="(Call,a->bits == 64)"];
"1002500" [label="(Call,op->operands[1].type & OT_BYTE)"];
"1001528" [label="(Call,op->operands[1].type & OT_REGTYPE & OT_SEGMENTREG)"];
"1002479" [label="(Call,op->operands[0].type)"];
"1002393" [label="(Identifier,op)"];
"1003102" [label="(Identifier,op)"];
"1002990" [label="(Call,op->operands[0].type & OT_DWORD)"];
"1002537" [label="(Identifier,OT_BYTE)"];
"1002977" [label="(ControlStructure,if (op->operands[1].regs[0] == X86R_EIP && (op->operands[0].type & OT_DWORD)))"];
"1002501" [label="(Call,op->operands[1].type)"];
"1003201" [label="(Literal,8)"];
"1002866" [label="(ControlStructure,if (a->bits == 64 && offset && op->operands[0].type & OT_QWORD))"];
"1002478" [label="(Call,op->operands[0].type & OT_WORD)"];
"1002427" [label="(Identifier,data)"];
"1002867" [label="(Call,a->bits == 64 && offset && op->operands[0].type & OT_QWORD)"];
"1002876" [label="(Call,op->operands[0].type)"];
"1003195" [label="(Call,data[l++])"];
"1003107" [label="(Call,op->operands[1].regs[0] == X86R_EIP)"];
"1003207" [label="(Call,offset >> 16)"];
"1002473" [label="(Identifier,data)"];
"1001349" [label="(Call,op->operands[1].type & ALL_SIZE)"];
"1003127" [label="(Call,data[l++] = offset >> 16)"];
"1002528" [label="(Identifier,OT_BYTE)"];
"1002385" [label="(Identifier,OT_QWORD)"];
"1003219" [label="(Identifier,l)"];
"1001272" [label="(Identifier,OT_MEMORY)"];
"1002435" [label="(Call,op->operands[1].type)"];
"1001394" [label="(Call,op->operands[1].type & OT_QWORD)"];
"1002256" [label="(Call,op->operands[1].type)"];
"1002486" [label="(Identifier,OT_WORD)"];
"1002414" [label="(ControlStructure,if (op->operands[1].type & OT_DWORD))"];
"1001275" [label="(Call,op->operands[0].type & OT_CONSTANT)"];
"1002416" [label="(Call,op->operands[1].type)"];
"1003167" [label="(Identifier,data)"];
"1002378" [label="(Call,op->operands[1].type)"];
"1003177" [label="(Identifier,op)"];
"1003209" [label="(Literal,16)"];
"1003194" [label="(Call,data[l++] = offset >> 8)"];
"1003140" [label="(Call,offset >> 24)"];
"1003208" [label="(Identifier,offset)"];
"1002521" [label="(Call,op->operands[1].type)"];
"1003128" [label="(Call,data[l++])"];
"1003202" [label="(Call,data[l++] = offset >> 16)"];
"1003021" [label="(Call,op->operands[0].type)"];
"1001327" [label="(Call,op->operands[1].type & OT_REGTYPE)"];
"1001253" [label="(Call,op->operands[1].type & OT_REGALL &&\n\t\t\t !(op->operands[1].type & OT_MEMORY))"];
"1002539" [label="(Literal,0x8b)"];
"1003216" [label="(Identifier,offset)"];
"1002376" [label="(Call,!(op->operands[1].type & OT_QWORD))"];
"1003097" [label="(Call,op->operands[1].offset > 128 || op->operands[1].regs[0] == X86R_EIP)"];
"1002273" [label="(Identifier,op)"];
"1002835" [label="(Call,offset || op->operands[1].regs[0] == X86R_EBP)"];
"1002265" [label="(Identifier,OT_SEGMENTREG)"];
"1002423" [label="(Identifier,OT_DWORD)"];
"1003040" [label="(Identifier,data)"];
"1003200" [label="(Identifier,offset)"];
"1002538" [label="(Literal,0x8a)"];
"1003007" [label="(ControlStructure,if (op->operands[1].regs[0] == X86R_RIP && (op->operands[0].type & OT_QWORD)))"];
"1003212" [label="(Identifier,data)"];
"1002461" [label="(Call,op->operands[0].type & OT_QWORD)"];
"1002163" [label="(Call,op->operands[0].type & OT_BYTE)"];
"1003152" [label="(Identifier,offset)"];
"1002254" [label="(ControlStructure,if (op->operands[1].type & OT_REGTYPE & OT_SEGMENTREG))"];
"1002991" [label="(Call,op->operands[0].type)"];
"1003090" [label="(Call,data[l++] = offset)"];
"1003165" [label="(Call,data[l++] = offset)"];
"1000132" [label="(Call,op->operands[1].type & OT_CONSTANT)"];
"1003173" [label="(Call,op->operands[1].offset > 127)"];
"1003199" [label="(Call,offset >> 8)"];
"1003020" [label="(Call,op->operands[0].type & OT_QWORD)"];
"1003215" [label="(Call,offset >> 24)"];
"1003124" [label="(Call,offset >> 8)"];
"1002518" [label="(Call,(op->operands[1].type & OT_BYTE ||\n\t\t\t\top->operands[0].type & OT_BYTE) ?\n\t\t\t\t0x8a : 0x8b)"];
"1003002" [label="(Identifier,data)"];
"1003137" [label="(Identifier,data)"];
"1003220" [label="(MethodReturn,static int)"];
"1002533" [label="(Identifier,op)"];
"1002415" [label="(Call,op->operands[1].type & OT_DWORD)"];
"1002434" [label="(Call,op->operands[1].type & OT_QWORD)"];
"1002510" [label="(Literal,0x8b)"];
"1003182" [label="(Call,op->operands[1].regs[0] == X86R_RIP)"];
"1003118" [label="(Block,)"];
"1001999" [label="(Call,op->operands[0].type & OT_MEMORY)"];
"1002452" [label="(Call,op->operands[1].type & OT_QWORD)"];
"1000133" [label="(Call,op->operands[1].type)"];
"1003172" [label="(Call,op->operands[1].offset > 127 || op->operands[1].regs[0] == X86R_RIP)"];
"1001987" [label="(ControlStructure,if (op->operands[1].type & OT_MEMORY))"];
"1003091" [label="(Call,data[l++])"];
"1003136" [label="(Call,data[l++])"];
"1001262" [label="(Identifier,OT_REGALL)"];
"1002874" [label="(Identifier,offset)"];
"1002453" [label="(Call,op->operands[1].type)"];
"1001996" [label="(Identifier,OT_MEMORY)"];
"1003217" [label="(Literal,24)"];
"1002520" [label="(Call,op->operands[1].type & OT_BYTE)"];
"1002433" [label="(Call,!(op->operands[1].type & OT_QWORD))"];
"1002442" [label="(Identifier,OT_QWORD)"];
"1002264" [label="(Identifier,OT_REGTYPE)"];
"1003153" [label="(Call,op->operands[1].regs[0] == X86R_RIP)"];
"1003133" [label="(Identifier,offset)"];
"1000361" [label="(Call,op->operands[1].type & OT_QWORD)"];
"1002438" [label="(Identifier,op)"];
"1003098" [label="(Call,op->operands[1].offset > 128)"];
"1002263" [label="(Call,OT_REGTYPE & OT_SEGMENTREG)"];
"1002519" [label="(Call,op->operands[1].type & OT_BYTE ||\n\t\t\t\top->operands[0].type & OT_BYTE)"];
"1002375" [label="(ControlStructure,if (!(op->operands[1].type & OT_QWORD)))"];
"1003126" [label="(Literal,8)"];
"1003089" [label="(Block,)"];
"1000104" [label="(MethodParameterIn,ut8 *data)"];
"1003119" [label="(Call,data[l++] = offset >> 8)"];
"1002451" [label="(Call,op->operands[1].type & OT_QWORD &&\n\t\t\t\top->operands[0].type & OT_QWORD)"];
"1003211" [label="(Call,data[l++])"];
"1002465" [label="(Identifier,op)"];
"1002377" [label="(Call,op->operands[1].type & OT_QWORD)"];
"1001254" [label="(Call,op->operands[1].type & OT_REGALL)"];
"1001265" [label="(Call,op->operands[1].type)"];
"1001258" [label="(Identifier,op)"];
"1002365" [label="(Call,op->operands[0].type & OT_QWORD)"];
"1002979" [label="(Call,op->operands[1].regs[0] == X86R_EIP)"];
"1002162" [label="(Call,op->operands[0].type & OT_BYTE && a->bits == 64 && op->operands[1].regs[0])"];
"1002509" [label="(Literal,0x8a)"];
"1001263" [label="(Call,!(op->operands[1].type & OT_MEMORY))"];
"1002515" [label="(Identifier,data)"];
"1003144" [label="(ControlStructure,if (a->bits == 64 && (offset || op->operands[1].regs[0] == X86R_RIP)))"];
"1001268" [label="(Identifier,op)"];
"1000239" [label="(Call,op->operands[1].type & OT_CONSTANT)"];
"1002450" [label="(ControlStructure,if (op->operands[1].type & OT_QWORD &&\n\t\t\t\top->operands[0].type & OT_QWORD))"];
"1002360" [label="(Identifier,a)"];
"1003129" [label="(Identifier,data)"];
"1002508" [label="(Identifier,OT_BYTE)"];
"1003008" [label="(Call,op->operands[1].regs[0] == X86R_RIP && (op->operands[0].type & OT_QWORD))"];
"1002446" [label="(Identifier,data)"];
"1003196" [label="(Identifier,data)"];
"1002886" [label="(Call,op->operands[1].regs[0] == X86R_RIP)"];
"1003142" [label="(Literal,24)"];
"1002432" [label="(ControlStructure,if (!(op->operands[1].type & OT_QWORD)))"];
"1003135" [label="(Call,data[l++] = offset >> 24)"];
"1003028" [label="(Identifier,OT_QWORD)"];
"1003095" [label="(Identifier,offset)"];
"1002255" -> "1002254"  [label="AST: "];
"1002255" -> "1002263"  [label="CFG: "];
"1002256" -> "1002255"  [label="AST: "];
"1002263" -> "1002255"  [label="AST: "];
"1002273" -> "1002255"  [label="CFG: "];
"1002360" -> "1002255"  [label="CFG: "];
"1002255" -> "1003220"  [label="DDG: op->operands[1].type & OT_REGTYPE & OT_SEGMENTREG"];
"1002255" -> "1003220"  [label="DDG: op->operands[1].type"];
"1002255" -> "1003220"  [label="DDG: OT_REGTYPE & OT_SEGMENTREG"];
"1001988" -> "1002255"  [label="DDG: op->operands[1].type"];
"1002263" -> "1002255"  [label="DDG: OT_REGTYPE"];
"1002263" -> "1002255"  [label="DDG: OT_SEGMENTREG"];
"1002255" -> "1002377"  [label="DDG: op->operands[1].type"];
"1002255" -> "1002415"  [label="DDG: op->operands[1].type"];
"1002255" -> "1002500"  [label="DDG: op->operands[1].type"];
"1002255" -> "1002520"  [label="DDG: op->operands[1].type"];
"1001988" -> "1001987"  [label="AST: "];
"1001988" -> "1001996"  [label="CFG: "];
"1001989" -> "1001988"  [label="AST: "];
"1001996" -> "1001988"  [label="AST: "];
"1002003" -> "1001988"  [label="CFG: "];
"1003219" -> "1001988"  [label="CFG: "];
"1001988" -> "1003220"  [label="DDG: op->operands[1].type"];
"1001988" -> "1003220"  [label="DDG: op->operands[1].type & OT_MEMORY"];
"1001988" -> "1003220"  [label="DDG: OT_MEMORY"];
"1001264" -> "1001988"  [label="DDG: op->operands[1].type"];
"1001264" -> "1001988"  [label="DDG: OT_MEMORY"];
"1001254" -> "1001988"  [label="DDG: op->operands[1].type"];
"1001988" -> "1001999"  [label="DDG: OT_MEMORY"];
"1001264" -> "1001263"  [label="AST: "];
"1001264" -> "1001272"  [label="CFG: "];
"1001265" -> "1001264"  [label="AST: "];
"1001272" -> "1001264"  [label="AST: "];
"1001263" -> "1001264"  [label="CFG: "];
"1001264" -> "1003220"  [label="DDG: op->operands[1].type"];
"1001264" -> "1003220"  [label="DDG: OT_MEMORY"];
"1001264" -> "1001263"  [label="DDG: op->operands[1].type"];
"1001264" -> "1001263"  [label="DDG: OT_MEMORY"];
"1001254" -> "1001264"  [label="DDG: op->operands[1].type"];
"1001264" -> "1001301"  [label="DDG: op->operands[1].type"];
"1001264" -> "1001327"  [label="DDG: op->operands[1].type"];
"1001264" -> "1001349"  [label="DDG: op->operands[1].type"];
"1001264" -> "1001394"  [label="DDG: op->operands[1].type"];
"1001264" -> "1001528"  [label="DDG: op->operands[1].type"];
"1001264" -> "1001676"  [label="DDG: OT_MEMORY"];
"1001254" -> "1001253"  [label="AST: "];
"1001254" -> "1001262"  [label="CFG: "];
"1001255" -> "1001254"  [label="AST: "];
"1001262" -> "1001254"  [label="AST: "];
"1001268" -> "1001254"  [label="CFG: "];
"1001253" -> "1001254"  [label="CFG: "];
"1001254" -> "1003220"  [label="DDG: OT_REGALL"];
"1001254" -> "1003220"  [label="DDG: op->operands[1].type"];
"1001254" -> "1001253"  [label="DDG: op->operands[1].type"];
"1001254" -> "1001253"  [label="DDG: OT_REGALL"];
"1000132" -> "1001254"  [label="DDG: op->operands[1].type"];
"1001254" -> "1001301"  [label="DDG: op->operands[1].type"];
"1001254" -> "1001327"  [label="DDG: op->operands[1].type"];
"1001254" -> "1001349"  [label="DDG: op->operands[1].type"];
"1001254" -> "1001394"  [label="DDG: op->operands[1].type"];
"1001254" -> "1001528"  [label="DDG: op->operands[1].type"];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000140"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000140" -> "1000132"  [label="AST: "];
"1000147" -> "1000132"  [label="CFG: "];
"1001258" -> "1000132"  [label="CFG: "];
"1000132" -> "1003220"  [label="DDG: op->operands[1].type & OT_CONSTANT"];
"1000132" -> "1003220"  [label="DDG: OT_CONSTANT"];
"1000132" -> "1003220"  [label="DDG: op->operands[1].type"];
"1000132" -> "1000226"  [label="DDG: op->operands[1].type"];
"1000132" -> "1000239"  [label="DDG: op->operands[1].type"];
"1000132" -> "1000239"  [label="DDG: OT_CONSTANT"];
"1000132" -> "1000361"  [label="DDG: op->operands[1].type"];
"1000132" -> "1001275"  [label="DDG: OT_CONSTANT"];
"1002263" -> "1002265"  [label="CFG: "];
"1002264" -> "1002263"  [label="AST: "];
"1002265" -> "1002263"  [label="AST: "];
"1002263" -> "1003220"  [label="DDG: OT_REGTYPE"];
"1002263" -> "1003220"  [label="DDG: OT_SEGMENTREG"];
"1002377" -> "1002376"  [label="AST: "];
"1002377" -> "1002385"  [label="CFG: "];
"1002378" -> "1002377"  [label="AST: "];
"1002385" -> "1002377"  [label="AST: "];
"1002376" -> "1002377"  [label="CFG: "];
"1002377" -> "1002376"  [label="DDG: op->operands[1].type"];
"1002377" -> "1002376"  [label="DDG: OT_QWORD"];
"1002365" -> "1002377"  [label="DDG: OT_QWORD"];
"1002377" -> "1002452"  [label="DDG: op->operands[1].type"];
"1002377" -> "1002452"  [label="DDG: OT_QWORD"];
"1002376" -> "1002375"  [label="AST: "];
"1002393" -> "1002376"  [label="CFG: "];
"1002456" -> "1002376"  [label="CFG: "];
"1002376" -> "1003220"  [label="DDG: !(op->operands[1].type & OT_QWORD)"];
"1002452" -> "1002451"  [label="AST: "];
"1002452" -> "1002460"  [label="CFG: "];
"1002453" -> "1002452"  [label="AST: "];
"1002460" -> "1002452"  [label="AST: "];
"1002465" -> "1002452"  [label="CFG: "];
"1002451" -> "1002452"  [label="CFG: "];
"1002452" -> "1003220"  [label="DDG: OT_QWORD"];
"1002452" -> "1002451"  [label="DDG: op->operands[1].type"];
"1002452" -> "1002451"  [label="DDG: OT_QWORD"];
"1002434" -> "1002452"  [label="DDG: op->operands[1].type"];
"1002434" -> "1002452"  [label="DDG: OT_QWORD"];
"1002415" -> "1002452"  [label="DDG: op->operands[1].type"];
"1002365" -> "1002452"  [label="DDG: OT_QWORD"];
"1002452" -> "1002461"  [label="DDG: OT_QWORD"];
"1002452" -> "1002500"  [label="DDG: op->operands[1].type"];
"1002452" -> "1002520"  [label="DDG: op->operands[1].type"];
"1002452" -> "1002875"  [label="DDG: OT_QWORD"];
"1002452" -> "1003020"  [label="DDG: OT_QWORD"];
"1002451" -> "1002450"  [label="AST: "];
"1002451" -> "1002461"  [label="CFG: "];
"1002461" -> "1002451"  [label="AST: "];
"1002473" -> "1002451"  [label="CFG: "];
"1002482" -> "1002451"  [label="CFG: "];
"1002451" -> "1003220"  [label="DDG: op->operands[1].type & OT_QWORD &&\n\t\t\t\top->operands[0].type & OT_QWORD"];
"1002451" -> "1003220"  [label="DDG: op->operands[1].type & OT_QWORD"];
"1002451" -> "1003220"  [label="DDG: op->operands[0].type & OT_QWORD"];
"1002365" -> "1002451"  [label="DDG: op->operands[0].type & OT_QWORD"];
"1002461" -> "1002451"  [label="DDG: op->operands[0].type"];
"1002461" -> "1002451"  [label="DDG: OT_QWORD"];
"1002451" -> "1002873"  [label="DDG: op->operands[0].type & OT_QWORD"];
"1002451" -> "1003008"  [label="DDG: op->operands[0].type & OT_QWORD"];
"1002873" -> "1002867"  [label="AST: "];
"1002873" -> "1002874"  [label="CFG: "];
"1002873" -> "1002875"  [label="CFG: "];
"1002874" -> "1002873"  [label="AST: "];
"1002875" -> "1002873"  [label="AST: "];
"1002867" -> "1002873"  [label="CFG: "];
"1002873" -> "1003220"  [label="DDG: offset"];
"1002873" -> "1003220"  [label="DDG: op->operands[0].type & OT_QWORD"];
"1002873" -> "1002867"  [label="DDG: offset"];
"1002873" -> "1002867"  [label="DDG: op->operands[0].type & OT_QWORD"];
"1002835" -> "1002873"  [label="DDG: offset"];
"1002875" -> "1002873"  [label="DDG: op->operands[0].type"];
"1002875" -> "1002873"  [label="DDG: OT_QWORD"];
"1002873" -> "1003008"  [label="DDG: op->operands[0].type & OT_QWORD"];
"1002873" -> "1003090"  [label="DDG: offset"];
"1002873" -> "1003124"  [label="DDG: offset"];
"1002873" -> "1003151"  [label="DDG: offset"];
"1002873" -> "1003165"  [label="DDG: offset"];
"1002873" -> "1003199"  [label="DDG: offset"];
"1002867" -> "1002866"  [label="AST: "];
"1002867" -> "1002868"  [label="CFG: "];
"1002868" -> "1002867"  [label="AST: "];
"1002891" -> "1002867"  [label="CFG: "];
"1002984" -> "1002867"  [label="CFG: "];
"1002867" -> "1003220"  [label="DDG: a->bits == 64 && offset && op->operands[0].type & OT_QWORD"];
"1002867" -> "1003220"  [label="DDG: a->bits == 64"];
"1002867" -> "1003220"  [label="DDG: offset && op->operands[0].type & OT_QWORD"];
"1002868" -> "1002867"  [label="DDG: a->bits"];
"1002868" -> "1002867"  [label="DDG: 64"];
"1003008" -> "1003007"  [label="AST: "];
"1003008" -> "1003009"  [label="CFG: "];
"1003008" -> "1003020"  [label="CFG: "];
"1003009" -> "1003008"  [label="AST: "];
"1003020" -> "1003008"  [label="AST: "];
"1003032" -> "1003008"  [label="CFG: "];
"1003040" -> "1003008"  [label="CFG: "];
"1003008" -> "1003220"  [label="DDG: op->operands[1].regs[0] == X86R_RIP"];
"1003008" -> "1003220"  [label="DDG: op->operands[0].type & OT_QWORD"];
"1003008" -> "1003220"  [label="DDG: op->operands[1].regs[0] == X86R_RIP && (op->operands[0].type & OT_QWORD)"];
"1003009" -> "1003008"  [label="DDG: op->operands[1].regs[0]"];
"1003009" -> "1003008"  [label="DDG: X86R_RIP"];
"1003020" -> "1003008"  [label="DDG: op->operands[0].type"];
"1003020" -> "1003008"  [label="DDG: OT_QWORD"];
"1003008" -> "1003151"  [label="DDG: op->operands[1].regs[0] == X86R_RIP"];
"1003008" -> "1003172"  [label="DDG: op->operands[1].regs[0] == X86R_RIP"];
"1003151" -> "1003145"  [label="AST: "];
"1003151" -> "1003152"  [label="CFG: "];
"1003151" -> "1003153"  [label="CFG: "];
"1003152" -> "1003151"  [label="AST: "];
"1003153" -> "1003151"  [label="AST: "];
"1003145" -> "1003151"  [label="CFG: "];
"1003151" -> "1003220"  [label="DDG: offset"];
"1003151" -> "1003220"  [label="DDG: op->operands[1].regs[0] == X86R_RIP"];
"1003151" -> "1003145"  [label="DDG: offset"];
"1003151" -> "1003145"  [label="DDG: op->operands[1].regs[0] == X86R_RIP"];
"1002835" -> "1003151"  [label="DDG: offset"];
"1003153" -> "1003151"  [label="DDG: op->operands[1].regs[0]"];
"1003153" -> "1003151"  [label="DDG: X86R_RIP"];
"1002886" -> "1003151"  [label="DDG: op->operands[1].regs[0] == X86R_RIP"];
"1003151" -> "1003165"  [label="DDG: offset"];
"1003151" -> "1003172"  [label="DDG: op->operands[1].regs[0] == X86R_RIP"];
"1003151" -> "1003199"  [label="DDG: offset"];
"1003145" -> "1003144"  [label="AST: "];
"1003145" -> "1003146"  [label="CFG: "];
"1003146" -> "1003145"  [label="AST: "];
"1003167" -> "1003145"  [label="CFG: "];
"1003219" -> "1003145"  [label="CFG: "];
"1003145" -> "1003220"  [label="DDG: a->bits == 64 && (offset || op->operands[1].regs[0] == X86R_RIP)"];
"1003145" -> "1003220"  [label="DDG: a->bits == 64"];
"1003145" -> "1003220"  [label="DDG: offset || op->operands[1].regs[0] == X86R_RIP"];
"1003146" -> "1003145"  [label="DDG: a->bits"];
"1003146" -> "1003145"  [label="DDG: 64"];
"1003165" -> "1003164"  [label="AST: "];
"1003165" -> "1003170"  [label="CFG: "];
"1003166" -> "1003165"  [label="AST: "];
"1003170" -> "1003165"  [label="AST: "];
"1003177" -> "1003165"  [label="CFG: "];
"1003165" -> "1003220"  [label="DDG: offset"];
"1003165" -> "1003220"  [label="DDG: data[l++]"];
"1002835" -> "1003165"  [label="DDG: offset"];
"1000104" -> "1003165"  [label="DDG: data"];
"1003172" -> "1003171"  [label="AST: "];
"1003172" -> "1003173"  [label="CFG: "];
"1003172" -> "1003182"  [label="CFG: "];
"1003173" -> "1003172"  [label="AST: "];
"1003182" -> "1003172"  [label="AST: "];
"1003196" -> "1003172"  [label="CFG: "];
"1003219" -> "1003172"  [label="CFG: "];
"1003172" -> "1003220"  [label="DDG: op->operands[1].offset > 127 || op->operands[1].regs[0] == X86R_RIP"];
"1003172" -> "1003220"  [label="DDG: op->operands[1].offset > 127"];
"1003172" -> "1003220"  [label="DDG: op->operands[1].regs[0] == X86R_RIP"];
"1003173" -> "1003172"  [label="DDG: op->operands[1].offset"];
"1003173" -> "1003172"  [label="DDG: 127"];
"1002886" -> "1003172"  [label="DDG: op->operands[1].regs[0] == X86R_RIP"];
"1003182" -> "1003172"  [label="DDG: op->operands[1].regs[0]"];
"1003182" -> "1003172"  [label="DDG: X86R_RIP"];
"1003199" -> "1003194"  [label="AST: "];
"1003199" -> "1003201"  [label="CFG: "];
"1003200" -> "1003199"  [label="AST: "];
"1003201" -> "1003199"  [label="AST: "];
"1003194" -> "1003199"  [label="CFG: "];
"1003199" -> "1003194"  [label="DDG: offset"];
"1003199" -> "1003194"  [label="DDG: 8"];
"1002835" -> "1003199"  [label="DDG: offset"];
"1003199" -> "1003207"  [label="DDG: offset"];
"1003194" -> "1003193"  [label="AST: "];
"1003195" -> "1003194"  [label="AST: "];
"1003204" -> "1003194"  [label="CFG: "];
"1003194" -> "1003220"  [label="DDG: offset >> 8"];
"1000104" -> "1003194"  [label="DDG: data"];
"1003207" -> "1003202"  [label="AST: "];
"1003207" -> "1003209"  [label="CFG: "];
"1003208" -> "1003207"  [label="AST: "];
"1003209" -> "1003207"  [label="AST: "];
"1003202" -> "1003207"  [label="CFG: "];
"1003207" -> "1003202"  [label="DDG: offset"];
"1003207" -> "1003202"  [label="DDG: 16"];
"1003207" -> "1003215"  [label="DDG: offset"];
"1003202" -> "1003193"  [label="AST: "];
"1003203" -> "1003202"  [label="AST: "];
"1003212" -> "1003202"  [label="CFG: "];
"1003202" -> "1003220"  [label="DDG: offset >> 16"];
"1000104" -> "1003202"  [label="DDG: data"];
"1003215" -> "1003210"  [label="AST: "];
"1003215" -> "1003217"  [label="CFG: "];
"1003216" -> "1003215"  [label="AST: "];
"1003217" -> "1003215"  [label="AST: "];
"1003210" -> "1003215"  [label="CFG: "];
"1003215" -> "1003220"  [label="DDG: offset"];
"1003215" -> "1003210"  [label="DDG: offset"];
"1003215" -> "1003210"  [label="DDG: 24"];
"1003210" -> "1003193"  [label="AST: "];
"1003211" -> "1003210"  [label="AST: "];
"1003219" -> "1003210"  [label="CFG: "];
"1003210" -> "1003220"  [label="DDG: offset >> 24"];
"1003210" -> "1003220"  [label="DDG: data[l++]"];
"1000104" -> "1003210"  [label="DDG: data"];
"1003090" -> "1003089"  [label="AST: "];
"1003090" -> "1003095"  [label="CFG: "];
"1003091" -> "1003090"  [label="AST: "];
"1003095" -> "1003090"  [label="AST: "];
"1003102" -> "1003090"  [label="CFG: "];
"1003090" -> "1003220"  [label="DDG: data[l++]"];
"1003090" -> "1003220"  [label="DDG: offset"];
"1002835" -> "1003090"  [label="DDG: offset"];
"1000104" -> "1003090"  [label="DDG: data"];
"1003124" -> "1003119"  [label="AST: "];
"1003124" -> "1003126"  [label="CFG: "];
"1003125" -> "1003124"  [label="AST: "];
"1003126" -> "1003124"  [label="AST: "];
"1003119" -> "1003124"  [label="CFG: "];
"1003124" -> "1003119"  [label="DDG: offset"];
"1003124" -> "1003119"  [label="DDG: 8"];
"1002835" -> "1003124"  [label="DDG: offset"];
"1003124" -> "1003132"  [label="DDG: offset"];
"1003119" -> "1003118"  [label="AST: "];
"1003120" -> "1003119"  [label="AST: "];
"1003129" -> "1003119"  [label="CFG: "];
"1003119" -> "1003220"  [label="DDG: offset >> 8"];
"1000104" -> "1003119"  [label="DDG: data"];
"1003132" -> "1003127"  [label="AST: "];
"1003132" -> "1003134"  [label="CFG: "];
"1003133" -> "1003132"  [label="AST: "];
"1003134" -> "1003132"  [label="AST: "];
"1003127" -> "1003132"  [label="CFG: "];
"1003132" -> "1003127"  [label="DDG: offset"];
"1003132" -> "1003127"  [label="DDG: 16"];
"1003132" -> "1003140"  [label="DDG: offset"];
"1003127" -> "1003118"  [label="AST: "];
"1003128" -> "1003127"  [label="AST: "];
"1003137" -> "1003127"  [label="CFG: "];
"1003127" -> "1003220"  [label="DDG: offset >> 16"];
"1000104" -> "1003127"  [label="DDG: data"];
"1003140" -> "1003135"  [label="AST: "];
"1003140" -> "1003142"  [label="CFG: "];
"1003141" -> "1003140"  [label="AST: "];
"1003142" -> "1003140"  [label="AST: "];
"1003135" -> "1003140"  [label="CFG: "];
"1003140" -> "1003220"  [label="DDG: offset"];
"1003140" -> "1003135"  [label="DDG: offset"];
"1003140" -> "1003135"  [label="DDG: 24"];
"1003135" -> "1003118"  [label="AST: "];
"1003136" -> "1003135"  [label="AST: "];
"1003219" -> "1003135"  [label="CFG: "];
"1003135" -> "1003220"  [label="DDG: data[l++]"];
"1003135" -> "1003220"  [label="DDG: offset >> 24"];
"1000104" -> "1003135"  [label="DDG: data"];
"1002461" -> "1002469"  [label="CFG: "];
"1002462" -> "1002461"  [label="AST: "];
"1002469" -> "1002461"  [label="AST: "];
"1002461" -> "1003220"  [label="DDG: OT_QWORD"];
"1002365" -> "1002461"  [label="DDG: op->operands[0].type"];
"1002461" -> "1002478"  [label="DDG: op->operands[0].type"];
"1002461" -> "1002875"  [label="DDG: OT_QWORD"];
"1002461" -> "1003020"  [label="DDG: OT_QWORD"];
"1002478" -> "1002477"  [label="AST: "];
"1002478" -> "1002486"  [label="CFG: "];
"1002479" -> "1002478"  [label="AST: "];
"1002486" -> "1002478"  [label="AST: "];
"1002490" -> "1002478"  [label="CFG: "];
"1002515" -> "1002478"  [label="CFG: "];
"1002478" -> "1003220"  [label="DDG: op->operands[0].type & OT_WORD"];
"1002478" -> "1003220"  [label="DDG: op->operands[0].type"];
"1002478" -> "1003220"  [label="DDG: OT_WORD"];
"1002365" -> "1002478"  [label="DDG: op->operands[0].type"];
"1002163" -> "1002478"  [label="DDG: op->operands[0].type"];
"1002478" -> "1002529"  [label="DDG: op->operands[0].type"];
"1002478" -> "1002875"  [label="DDG: op->operands[0].type"];
"1002478" -> "1002990"  [label="DDG: op->operands[0].type"];
"1002478" -> "1003020"  [label="DDG: op->operands[0].type"];
"1002529" -> "1002519"  [label="AST: "];
"1002529" -> "1002537"  [label="CFG: "];
"1002530" -> "1002529"  [label="AST: "];
"1002537" -> "1002529"  [label="AST: "];
"1002519" -> "1002529"  [label="CFG: "];
"1002529" -> "1003220"  [label="DDG: OT_BYTE"];
"1002529" -> "1003220"  [label="DDG: op->operands[0].type"];
"1002529" -> "1002519"  [label="DDG: op->operands[0].type"];
"1002529" -> "1002519"  [label="DDG: OT_BYTE"];
"1002520" -> "1002529"  [label="DDG: OT_BYTE"];
"1002529" -> "1002875"  [label="DDG: op->operands[0].type"];
"1002529" -> "1002990"  [label="DDG: op->operands[0].type"];
"1002529" -> "1003020"  [label="DDG: op->operands[0].type"];
"1002519" -> "1002518"  [label="AST: "];
"1002519" -> "1002520"  [label="CFG: "];
"1002520" -> "1002519"  [label="AST: "];
"1002538" -> "1002519"  [label="CFG: "];
"1002539" -> "1002519"  [label="CFG: "];
"1002519" -> "1003220"  [label="DDG: op->operands[0].type & OT_BYTE"];
"1002519" -> "1003220"  [label="DDG: op->operands[1].type & OT_BYTE"];
"1002520" -> "1002519"  [label="DDG: op->operands[1].type"];
"1002520" -> "1002519"  [label="DDG: OT_BYTE"];
"1002162" -> "1002519"  [label="DDG: op->operands[0].type & OT_BYTE"];
"1002875" -> "1002883"  [label="CFG: "];
"1002876" -> "1002875"  [label="AST: "];
"1002883" -> "1002875"  [label="AST: "];
"1002875" -> "1003220"  [label="DDG: op->operands[0].type"];
"1002875" -> "1003220"  [label="DDG: OT_QWORD"];
"1002875" -> "1002990"  [label="DDG: op->operands[0].type"];
"1002875" -> "1003020"  [label="DDG: op->operands[0].type"];
"1002875" -> "1003020"  [label="DDG: OT_QWORD"];
"1002990" -> "1002978"  [label="AST: "];
"1002990" -> "1002998"  [label="CFG: "];
"1002991" -> "1002990"  [label="AST: "];
"1002998" -> "1002990"  [label="AST: "];
"1002978" -> "1002990"  [label="CFG: "];
"1002990" -> "1003220"  [label="DDG: op->operands[0].type"];
"1002990" -> "1003220"  [label="DDG: OT_DWORD"];
"1002990" -> "1002978"  [label="DDG: op->operands[0].type"];
"1002990" -> "1002978"  [label="DDG: OT_DWORD"];
"1002415" -> "1002990"  [label="DDG: OT_DWORD"];
"1002990" -> "1003020"  [label="DDG: op->operands[0].type"];
"1002978" -> "1002977"  [label="AST: "];
"1002978" -> "1002979"  [label="CFG: "];
"1002979" -> "1002978"  [label="AST: "];
"1003002" -> "1002978"  [label="CFG: "];
"1003014" -> "1002978"  [label="CFG: "];
"1002978" -> "1003220"  [label="DDG: op->operands[1].regs[0] == X86R_EIP && (op->operands[0].type & OT_DWORD)"];
"1002978" -> "1003220"  [label="DDG: op->operands[1].regs[0] == X86R_EIP"];
"1002978" -> "1003220"  [label="DDG: op->operands[0].type & OT_DWORD"];
"1002979" -> "1002978"  [label="DDG: op->operands[1].regs[0]"];
"1002979" -> "1002978"  [label="DDG: X86R_EIP"];
"1002978" -> "1003097"  [label="DDG: op->operands[1].regs[0] == X86R_EIP"];
"1003097" -> "1003096"  [label="AST: "];
"1003097" -> "1003098"  [label="CFG: "];
"1003097" -> "1003107"  [label="CFG: "];
"1003098" -> "1003097"  [label="AST: "];
"1003107" -> "1003097"  [label="AST: "];
"1003121" -> "1003097"  [label="CFG: "];
"1003219" -> "1003097"  [label="CFG: "];
"1003097" -> "1003220"  [label="DDG: op->operands[1].regs[0] == X86R_EIP"];
"1003097" -> "1003220"  [label="DDG: op->operands[1].offset > 128"];
"1003097" -> "1003220"  [label="DDG: op->operands[1].offset > 128 || op->operands[1].regs[0] == X86R_EIP"];
"1003098" -> "1003097"  [label="DDG: op->operands[1].offset"];
"1003098" -> "1003097"  [label="DDG: 128"];
"1003107" -> "1003097"  [label="DDG: op->operands[1].regs[0]"];
"1003107" -> "1003097"  [label="DDG: X86R_EIP"];
"1003020" -> "1003028"  [label="CFG: "];
"1003021" -> "1003020"  [label="AST: "];
"1003028" -> "1003020"  [label="AST: "];
"1003020" -> "1003220"  [label="DDG: OT_QWORD"];
"1003020" -> "1003220"  [label="DDG: op->operands[0].type"];
"1002500" -> "1002499"  [label="AST: "];
"1002500" -> "1002508"  [label="CFG: "];
"1002501" -> "1002500"  [label="AST: "];
"1002508" -> "1002500"  [label="AST: "];
"1002509" -> "1002500"  [label="CFG: "];
"1002510" -> "1002500"  [label="CFG: "];
"1002500" -> "1003220"  [label="DDG: OT_BYTE"];
"1002500" -> "1003220"  [label="DDG: op->operands[1].type"];
"1002163" -> "1002500"  [label="DDG: OT_BYTE"];
"1002520" -> "1002528"  [label="CFG: "];
"1002521" -> "1002520"  [label="AST: "];
"1002528" -> "1002520"  [label="AST: "];
"1002533" -> "1002520"  [label="CFG: "];
"1002520" -> "1003220"  [label="DDG: OT_BYTE"];
"1002520" -> "1003220"  [label="DDG: op->operands[1].type"];
"1002163" -> "1002520"  [label="DDG: OT_BYTE"];
"1002415" -> "1002414"  [label="AST: "];
"1002415" -> "1002423"  [label="CFG: "];
"1002416" -> "1002415"  [label="AST: "];
"1002423" -> "1002415"  [label="AST: "];
"1002427" -> "1002415"  [label="CFG: "];
"1002438" -> "1002415"  [label="CFG: "];
"1002415" -> "1003220"  [label="DDG: op->operands[1].type & OT_DWORD"];
"1002415" -> "1003220"  [label="DDG: OT_DWORD"];
"1002415" -> "1002434"  [label="DDG: op->operands[1].type"];
"1002434" -> "1002433"  [label="AST: "];
"1002434" -> "1002442"  [label="CFG: "];
"1002435" -> "1002434"  [label="AST: "];
"1002442" -> "1002434"  [label="AST: "];
"1002433" -> "1002434"  [label="CFG: "];
"1002434" -> "1002433"  [label="DDG: op->operands[1].type"];
"1002434" -> "1002433"  [label="DDG: OT_QWORD"];
"1002365" -> "1002434"  [label="DDG: OT_QWORD"];
"1002433" -> "1002432"  [label="AST: "];
"1002446" -> "1002433"  [label="CFG: "];
"1002456" -> "1002433"  [label="CFG: "];
"1002433" -> "1003220"  [label="DDG: !(op->operands[1].type & OT_QWORD)"];
}
