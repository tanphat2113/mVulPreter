digraph "0_radare2_f17bfd9f1da05f30f23a4dd05e9d2363e1406948@pointer" {
"1002358" [label="(Call,a->bits == 64)"];
"1002173" [label="(Call,a->bits == 64)"];
"1002554" [label="(Call,a->bits == 64)"];
"1002868" [label="(Call,a->bits == 64)"];
"1002867" [label="(Call,a->bits == 64 && offset && op->operands[0].type & OT_QWORD)"];
"1003146" [label="(Call,a->bits == 64)"];
"1003145" [label="(Call,a->bits == 64 && (offset || op->operands[1].regs[0] == X86R_RIP))"];
"1002868" [label="(Call,a->bits == 64)"];
"1002869" [label="(Call,a->bits)"];
"1002172" [label="(Call,a->bits == 64 && op->operands[1].regs[0])"];
"1002984" [label="(Identifier,op)"];
"1002558" [label="(Literal,64)"];
"1002369" [label="(Identifier,op)"];
"1002358" [label="(Call,a->bits == 64)"];
"1002362" [label="(Literal,64)"];
"1003152" [label="(Identifier,offset)"];
"1002174" [label="(Call,a->bits)"];
"1002866" [label="(ControlStructure,if (a->bits == 64 && offset && op->operands[0].type & OT_QWORD))"];
"1002482" [label="(Identifier,op)"];
"1002357" [label="(ControlStructure,if (a->bits == 64))"];
"1002177" [label="(Literal,64)"];
"1003144" [label="(ControlStructure,if (a->bits == 64 && (offset || op->operands[1].regs[0] == X86R_RIP)))"];
"1002867" [label="(Call,a->bits == 64 && offset && op->operands[0].type & OT_QWORD)"];
"1002872" [label="(Literal,64)"];
"1002359" [label="(Call,a->bits)"];
"1003220" [label="(MethodReturn,static int)"];
"1002562" [label="(Identifier,data)"];
"1002555" [label="(Call,a->bits)"];
"1003219" [label="(Identifier,l)"];
"1003147" [label="(Call,a->bits)"];
"1002173" [label="(Call,a->bits == 64)"];
"1003146" [label="(Call,a->bits == 64)"];
"1002874" [label="(Identifier,offset)"];
"1003167" [label="(Identifier,data)"];
"1003145" [label="(Call,a->bits == 64 && (offset || op->operands[1].regs[0] == X86R_RIP))"];
"1002182" [label="(Identifier,op)"];
"1003151" [label="(Call,offset || op->operands[1].regs[0] == X86R_RIP)"];
"1002891" [label="(Identifier,op)"];
"1002586" [label="(Identifier,data)"];
"1002554" [label="(Call,a->bits == 64)"];
"1003150" [label="(Literal,64)"];
"1002553" [label="(ControlStructure,if (a->bits == 64))"];
"1002873" [label="(Call,offset && op->operands[0].type & OT_QWORD)"];
"1002358" -> "1002357"  [label="AST: "];
"1002358" -> "1002362"  [label="CFG: "];
"1002359" -> "1002358"  [label="AST: "];
"1002362" -> "1002358"  [label="AST: "];
"1002369" -> "1002358"  [label="CFG: "];
"1002482" -> "1002358"  [label="CFG: "];
"1002358" -> "1003220"  [label="DDG: a->bits == 64"];
"1002358" -> "1003220"  [label="DDG: a->bits"];
"1002173" -> "1002358"  [label="DDG: a->bits"];
"1002358" -> "1002554"  [label="DDG: a->bits"];
"1002358" -> "1002868"  [label="DDG: a->bits"];
"1002173" -> "1002172"  [label="AST: "];
"1002173" -> "1002177"  [label="CFG: "];
"1002174" -> "1002173"  [label="AST: "];
"1002177" -> "1002173"  [label="AST: "];
"1002182" -> "1002173"  [label="CFG: "];
"1002172" -> "1002173"  [label="CFG: "];
"1002173" -> "1003220"  [label="DDG: a->bits"];
"1002173" -> "1002172"  [label="DDG: a->bits"];
"1002173" -> "1002172"  [label="DDG: 64"];
"1002554" -> "1002553"  [label="AST: "];
"1002554" -> "1002558"  [label="CFG: "];
"1002555" -> "1002554"  [label="AST: "];
"1002558" -> "1002554"  [label="AST: "];
"1002562" -> "1002554"  [label="CFG: "];
"1002586" -> "1002554"  [label="CFG: "];
"1002554" -> "1003220"  [label="DDG: a->bits"];
"1002554" -> "1003220"  [label="DDG: a->bits == 64"];
"1002868" -> "1002867"  [label="AST: "];
"1002868" -> "1002872"  [label="CFG: "];
"1002869" -> "1002868"  [label="AST: "];
"1002872" -> "1002868"  [label="AST: "];
"1002874" -> "1002868"  [label="CFG: "];
"1002867" -> "1002868"  [label="CFG: "];
"1002868" -> "1003220"  [label="DDG: a->bits"];
"1002868" -> "1002867"  [label="DDG: a->bits"];
"1002868" -> "1002867"  [label="DDG: 64"];
"1002868" -> "1003146"  [label="DDG: a->bits"];
"1002867" -> "1002866"  [label="AST: "];
"1002867" -> "1002873"  [label="CFG: "];
"1002873" -> "1002867"  [label="AST: "];
"1002891" -> "1002867"  [label="CFG: "];
"1002984" -> "1002867"  [label="CFG: "];
"1002867" -> "1003220"  [label="DDG: a->bits == 64 && offset && op->operands[0].type & OT_QWORD"];
"1002867" -> "1003220"  [label="DDG: a->bits == 64"];
"1002867" -> "1003220"  [label="DDG: offset && op->operands[0].type & OT_QWORD"];
"1002873" -> "1002867"  [label="DDG: offset"];
"1002873" -> "1002867"  [label="DDG: op->operands[0].type & OT_QWORD"];
"1003146" -> "1003145"  [label="AST: "];
"1003146" -> "1003150"  [label="CFG: "];
"1003147" -> "1003146"  [label="AST: "];
"1003150" -> "1003146"  [label="AST: "];
"1003152" -> "1003146"  [label="CFG: "];
"1003145" -> "1003146"  [label="CFG: "];
"1003146" -> "1003220"  [label="DDG: a->bits"];
"1003146" -> "1003145"  [label="DDG: a->bits"];
"1003146" -> "1003145"  [label="DDG: 64"];
"1003145" -> "1003144"  [label="AST: "];
"1003145" -> "1003151"  [label="CFG: "];
"1003151" -> "1003145"  [label="AST: "];
"1003167" -> "1003145"  [label="CFG: "];
"1003219" -> "1003145"  [label="CFG: "];
"1003145" -> "1003220"  [label="DDG: a->bits == 64 && (offset || op->operands[1].regs[0] == X86R_RIP)"];
"1003145" -> "1003220"  [label="DDG: a->bits == 64"];
"1003145" -> "1003220"  [label="DDG: offset || op->operands[1].regs[0] == X86R_RIP"];
"1003151" -> "1003145"  [label="DDG: offset"];
"1003151" -> "1003145"  [label="DDG: op->operands[1].regs[0] == X86R_RIP"];
}
