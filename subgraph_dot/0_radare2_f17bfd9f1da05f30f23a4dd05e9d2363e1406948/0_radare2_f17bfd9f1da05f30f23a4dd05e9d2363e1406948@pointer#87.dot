digraph "0_radare2_f17bfd9f1da05f30f23a4dd05e9d2363e1406948@pointer" {
"1002104" [label="(Call,data[l++] = offset >> 16)"];
"1002109" [label="(Call,offset >> 16)"];
"1002101" [label="(Call,offset >> 8)"];
"1002012" [label="(Call,offset = op->operands[1].offset * op->operands[1].offset_sign)"];
"1002014" [label="(Call,op->operands[1].offset * op->operands[1].offset_sign)"];
"1000104" [label="(MethodParameterIn,ut8 *data)"];
"1001642" [label="(Call,data[l++] = offset)"];
"1002105" [label="(Call,data[l++])"];
"1002336" [label="(Call,offset >> 8)"];
"1001664" [label="(Call,data[l++] = offset >> 24)"];
"1001951" [label="(Call,data[l++] = offset)"];
"1002471" [label="(Call,data[l++] = 0x48)"];
"1002645" [label="(Call,data[l++] = op->operands[0].reg << 3 | 4)"];
"1001159" [label="(Call,data[l++] = offset)"];
"1002494" [label="(Call,data[l++] = op->operands[1].type & OT_BYTE ? 0x8a : 0x8b)"];
"1002211" [label="(Call,data[l++] = 0x41)"];
"1001769" [label="(Call,data[l++] = offset)"];
"1001118" [label="(Call,data[l++] = 0x66)"];
"1000410" [label="(Call,data[l++] = immediate)"];
"1002584" [label="(Call,data[l++] = op->operands[0].reg << 3 | 0x5)"];
"1000487" [label="(Call,data[l++] = immediate >> 56)"];
"1002051" [label="(Block,)"];
"1001197" [label="(Call,data[l++] = offset)"];
"1002110" [label="(Identifier,offset)"];
"1002114" [label="(Identifier,data)"];
"1002090" [label="(Call,data[l++] = offset)"];
"1002907" [label="(Call,op->operands[1].offset > 127)"];
"1002104" [label="(Call,data[l++] = offset >> 16)"];
"1002945" [label="(Call,data[l++] = 0x40 | op->operands[1].regs[0])"];
"1000304" [label="(Call,data[l++] = 0x66)"];
"1002076" [label="(Call,data[l++] = 0xa0)"];
"1002751" [label="(Call,data[l++] = offset >> 8)"];
"1002103" [label="(Literal,8)"];
"1003210" [label="(Call,data[l++] = offset >> 24)"];
"1001504" [label="(Call,data[l++] = 0x45)"];
"1001416" [label="(Call,data[l++] = 0x67)"];
"1002917" [label="(Call,data[l++] = 0x80 | op->operands[0].reg << 3 | op->operands[1].regs[0])"];
"1000335" [label="(Call,data[l++] = immediate)"];
"1002407" [label="(Call,data[l++] = 0x48)"];
"1002767" [label="(Call,data[l++] = offset >> 24)"];
"1002444" [label="(Call,data[l++] = 0x67)"];
"1000280" [label="(Call,data[l++] = 0x41)"];
"1002012" [label="(Call,offset = op->operands[1].offset * op->operands[1].offset_sign)"];
"1002109" [label="(Call,offset >> 16)"];
"1002151" [label="(Call,data[l++] = offset >> 54)"];
"1001901" [label="(Call,data[l++] = mod << 6 | op->operands[1].reg << 3 | op->operands[0].regs[0])"];
"1001775" [label="(Call,data[l++] = offset >> 8)"];
"1001648" [label="(Call,data[l++] = offset >> 8)"];
"1001422" [label="(Call,data[l++] = 0x48)"];
"1001449" [label="(Call,data[l++] = 0x48 | rex)"];
"1000463" [label="(Call,data[l++] = immediate >> 32)"];
"1001997" [label="(Block,)"];
"1001942" [label="(Call,data[l++] = 0x24)"];
"1003127" [label="(Call,data[l++] = offset >> 16)"];
"1001565" [label="(Call,data[l++] = (op->operands[0].type & OT_BYTE) ? 0x88 : 0x89)"];
"1002117" [label="(Call,offset >> 24)"];
"1002283" [label="(Call,data[l++] = SEG_REG_PREFIXES[op->operands[1].regs[0] % 6])"];
"1000416" [label="(Call,data[l++] = immediate >> 8)"];
"1000396" [label="(Call,data[l++] = 0xb8 | op->operands[0].reg)"];
"1001783" [label="(Call,data[l++] = offset >> 16)"];
"1002339" [label="(Call,data[l++] = offset >> 16)"];
"1003194" [label="(Call,data[l++] = offset >> 8)"];
"1002759" [label="(Call,data[l++] = offset >> 16)"];
"1001109" [label="(Call,data[l++] = 0x67)"];
"1002680" [label="(Call,data[l++] = getsib (op->operands[1].scale[0]) << 6 | op->operands[1].regs[0] << 3 | base)"];
"1002513" [label="(Call,data[l++] = (op->operands[1].type & OT_BYTE ||\n\t\t\t\top->operands[0].type & OT_BYTE) ?\n\t\t\t\t0x8a : 0x8b)"];
"1002898" [label="(Call,data[l++] = 0x5)"];
"1003202" [label="(Call,data[l++] = offset >> 16)"];
"1002962" [label="(Call,op->operands[1].offset > 127)"];
"1003079" [label="(Call,data[l++] = 0x24)"];
"1001139" [label="(Call,data[l++] = modrm)"];
"1001753" [label="(Call,data[l++] = op->operands[1].reg << 3 | 0x5)"];
"1002835" [label="(Call,offset || op->operands[1].regs[0] == X86R_EBP)"];
"1001478" [label="(Call,data[l++] = 0x40 | rex)"];
"1002741" [label="(Call,offset || base)"];
"1001133" [label="(Call,data[l++] = opcode)"];
"1001595" [label="(Call,data[l++] = op->operands[1].reg << 3 | 4)"];
"1002217" [label="(Call,data[l++] = 0x8a)"];
"1000374" [label="(Call,data[l++] = 0xc7)"];
"1002301" [label="(Call,data[l++] = 0x8b)"];
"1001559" [label="(Call,data[l++] = 0x66)"];
"1003090" [label="(Call,data[l++] = offset)"];
"1003165" [label="(Call,data[l++] = offset)"];
"1002806" [label="(Call,data[l++] = op->operands[1].regs[1] << 3 | op->operands[1].regs[0])"];
"1003173" [label="(Call,op->operands[1].offset > 127)"];
"1002112" [label="(Call,data[l++] = offset >> 24)"];
"1002084" [label="(Call,data[l++] = 0xa1)"];
"1001127" [label="(Call,data[l++] = rex)"];
"1000444" [label="(Call,data[l++] = immediate >> 24)"];
"1003220" [label="(MethodReturn,static int)"];
"1002014" [label="(Call,op->operands[1].offset * op->operands[1].offset_sign)"];
"1002611" [label="(Call,offset >> 8)"];
"1001656" [label="(Call,data[l++] = offset >> 16)"];
"1000479" [label="(Call,data[l++] = immediate >> 48)"];
"1002135" [label="(Call,data[l++] = offset >> 40)"];
"1003030" [label="(Call,data[l++] = 0x05)"];
"1000264" [label="(Call,data[l++] = 0x48)"];
"1000471" [label="(Call,data[l++] = immediate >> 40)"];
"1001825" [label="(Call,data[l++] = op->operands[1].reg << 3 | 0x4)"];
"1001181" [label="(Call,data[l++] = offset >> 8)"];
"1000380" [label="(Call,data[l++] = 0xc0 | op->operands[0].reg)"];
"1002223" [label="(Call,data[l++] = op->operands[0].reg << 3 | (op->operands[1].regs[0] - 8))"];
"1002013" [label="(Identifier,offset)"];
"1001791" [label="(Call,data[l++] = offset >> 24)"];
"1002425" [label="(Call,data[l++] = 0x44)"];
"1002347" [label="(Call,data[l++] = offset >> 24)"];
"1003098" [label="(Call,op->operands[1].offset > 128)"];
"1002096" [label="(Call,data[l++] = offset >> 8)"];
"1002488" [label="(Call,data[l++] = 0x66)"];
"1003038" [label="(Call,data[l++] = mod << 5 | op->operands[0].reg << 3 | op->operands[1].regs[0])"];
"1001540" [label="(Call,data[l++] = 0x8c)"];
"1000256" [label="(Call,data[l++] = 0x49)"];
"1002745" [label="(Call,data[l++] = offset)"];
"1000104" [label="(MethodParameterIn,ut8 *data)"];
"1003119" [label="(Call,data[l++] = offset >> 8)"];
"1001219" [label="(Call,data[l++] = offset >> 24)"];
"1002101" [label="(Call,offset >> 8)"];
"1002576" [label="(Call,data[l++] = 0x25)"];
"1002713" [label="(Call,data[l++] = getsib (op->operands[1].scale[0]) << 3 | op->operands[1].regs[0])"];
"1001978" [label="(Call,data[l++] = offset >> 24)"];
"1001243" [label="(Call,data[l++] = (immediate >> byte))"];
"1002022" [label="(Call,op->operands[1].offset_sign)"];
"1002331" [label="(Call,data[l++] = offset >> 8)"];
"1002560" [label="(Call,data[l++] = op->operands[0].reg << 3 | 0x4)"];
"1002606" [label="(Call,data[l++] = offset >> 8)"];
"1000321" [label="(Call,data[l++] = 0xb0 | op->operands[0].reg)"];
"1001175" [label="(Call,data[l++] = offset)"];
"1001211" [label="(Call,data[l++] = offset >> 16)"];
"1002622" [label="(Call,data[l++] = offset >> 24)"];
"1001148" [label="(Call,data[l++] = sib)"];
"1000436" [label="(Call,data[l++] = immediate >> 16)"];
"1001962" [label="(Call,data[l++] = offset >> 8)"];
"1002127" [label="(Call,data[l++] = offset >> 32)"];
"1002325" [label="(Call,data[l++] = offset)"];
"1001841" [label="(Call,data[l++] = op->operands[0].regs[1] << 3 | op->operands[0].regs[0])"];
"1003135" [label="(Call,data[l++] = offset >> 24)"];
"1002143" [label="(Call,data[l++] = offset >> 48)"];
"1001713" [label="(Call,data[l++] = mod << 6 | op->operands[1].reg << 3 | op->operands[0].reg)"];
"1002600" [label="(Call,data[l++] = offset)"];
"1003000" [label="(Call,data[l++] = 0x0d)"];
"1002111" [label="(Literal,16)"];
"1001203" [label="(Call,data[l++] = offset >> 8)"];
"1002307" [label="(Call,data[l++] = (((ut32)op->operands[0].reg) << 3) | 0x5)"];
"1002614" [label="(Call,data[l++] = offset >> 16)"];
"1002853" [label="(Call,op->operands[1].offset > 127)"];
"1001970" [label="(Call,data[l++] = offset >> 16)"];
"1002059" [label="(Call,data[l++] = 0x48)"];
"1001611" [label="(Call,data[l++] = getsib (op->operands[0].scale[0]) << 6 |\n\t\t\t\t\t\t    op->operands[0].regs[0] << 3 | 5)"];
"1002401" [label="(Call,data[l++] = 0x67)"];
"1002102" [label="(Identifier,offset)"];
"1002035" [label="(Identifier,op)"];
"1002015" [label="(Call,op->operands[1].offset)"];
"1002790" [label="(Call,data[l++] = op->operands[0].reg << 3 | 0x4)"];
"1002104" -> "1002051"  [label="AST: "];
"1002104" -> "1002109"  [label="CFG: "];
"1002105" -> "1002104"  [label="AST: "];
"1002109" -> "1002104"  [label="AST: "];
"1002114" -> "1002104"  [label="CFG: "];
"1002104" -> "1003220"  [label="DDG: offset >> 16"];
"1002109" -> "1002104"  [label="DDG: offset"];
"1002109" -> "1002104"  [label="DDG: 16"];
"1000104" -> "1002104"  [label="DDG: data"];
"1002109" -> "1002111"  [label="CFG: "];
"1002110" -> "1002109"  [label="AST: "];
"1002111" -> "1002109"  [label="AST: "];
"1002101" -> "1002109"  [label="DDG: offset"];
"1002109" -> "1002117"  [label="DDG: offset"];
"1002101" -> "1002096"  [label="AST: "];
"1002101" -> "1002103"  [label="CFG: "];
"1002102" -> "1002101"  [label="AST: "];
"1002103" -> "1002101"  [label="AST: "];
"1002096" -> "1002101"  [label="CFG: "];
"1002101" -> "1002096"  [label="DDG: offset"];
"1002101" -> "1002096"  [label="DDG: 8"];
"1002012" -> "1002101"  [label="DDG: offset"];
"1002012" -> "1001997"  [label="AST: "];
"1002012" -> "1002014"  [label="CFG: "];
"1002013" -> "1002012"  [label="AST: "];
"1002014" -> "1002012"  [label="AST: "];
"1002035" -> "1002012"  [label="CFG: "];
"1002012" -> "1003220"  [label="DDG: offset"];
"1002012" -> "1003220"  [label="DDG: op->operands[1].offset * op->operands[1].offset_sign"];
"1002014" -> "1002012"  [label="DDG: op->operands[1].offset"];
"1002014" -> "1002012"  [label="DDG: op->operands[1].offset_sign"];
"1002012" -> "1002090"  [label="DDG: offset"];
"1002012" -> "1002325"  [label="DDG: offset"];
"1002012" -> "1002336"  [label="DDG: offset"];
"1002012" -> "1002600"  [label="DDG: offset"];
"1002012" -> "1002611"  [label="DDG: offset"];
"1002012" -> "1002741"  [label="DDG: offset"];
"1002012" -> "1002835"  [label="DDG: offset"];
"1002014" -> "1002022"  [label="CFG: "];
"1002015" -> "1002014"  [label="AST: "];
"1002022" -> "1002014"  [label="AST: "];
"1002014" -> "1003220"  [label="DDG: op->operands[1].offset_sign"];
"1002014" -> "1003220"  [label="DDG: op->operands[1].offset"];
"1002014" -> "1002853"  [label="DDG: op->operands[1].offset"];
"1002014" -> "1002907"  [label="DDG: op->operands[1].offset"];
"1002014" -> "1002962"  [label="DDG: op->operands[1].offset"];
"1002014" -> "1003098"  [label="DDG: op->operands[1].offset"];
"1002014" -> "1003173"  [label="DDG: op->operands[1].offset"];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1003220"  [label="DDG: data"];
"1000104" -> "1000256"  [label="DDG: data"];
"1000104" -> "1000264"  [label="DDG: data"];
"1000104" -> "1000280"  [label="DDG: data"];
"1000104" -> "1000304"  [label="DDG: data"];
"1000104" -> "1000321"  [label="DDG: data"];
"1000104" -> "1000335"  [label="DDG: data"];
"1000104" -> "1000374"  [label="DDG: data"];
"1000104" -> "1000380"  [label="DDG: data"];
"1000104" -> "1000396"  [label="DDG: data"];
"1000104" -> "1000410"  [label="DDG: data"];
"1000104" -> "1000416"  [label="DDG: data"];
"1000104" -> "1000436"  [label="DDG: data"];
"1000104" -> "1000444"  [label="DDG: data"];
"1000104" -> "1000463"  [label="DDG: data"];
"1000104" -> "1000471"  [label="DDG: data"];
"1000104" -> "1000479"  [label="DDG: data"];
"1000104" -> "1000487"  [label="DDG: data"];
"1000104" -> "1001109"  [label="DDG: data"];
"1000104" -> "1001118"  [label="DDG: data"];
"1000104" -> "1001127"  [label="DDG: data"];
"1000104" -> "1001133"  [label="DDG: data"];
"1000104" -> "1001139"  [label="DDG: data"];
"1000104" -> "1001148"  [label="DDG: data"];
"1000104" -> "1001159"  [label="DDG: data"];
"1000104" -> "1001175"  [label="DDG: data"];
"1000104" -> "1001181"  [label="DDG: data"];
"1000104" -> "1001197"  [label="DDG: data"];
"1000104" -> "1001203"  [label="DDG: data"];
"1000104" -> "1001211"  [label="DDG: data"];
"1000104" -> "1001219"  [label="DDG: data"];
"1000104" -> "1001243"  [label="DDG: data"];
"1000104" -> "1001416"  [label="DDG: data"];
"1000104" -> "1001422"  [label="DDG: data"];
"1000104" -> "1001449"  [label="DDG: data"];
"1000104" -> "1001478"  [label="DDG: data"];
"1000104" -> "1001504"  [label="DDG: data"];
"1000104" -> "1001540"  [label="DDG: data"];
"1000104" -> "1001559"  [label="DDG: data"];
"1000104" -> "1001565"  [label="DDG: data"];
"1000104" -> "1001595"  [label="DDG: data"];
"1000104" -> "1001611"  [label="DDG: data"];
"1000104" -> "1001642"  [label="DDG: data"];
"1000104" -> "1001648"  [label="DDG: data"];
"1000104" -> "1001656"  [label="DDG: data"];
"1000104" -> "1001664"  [label="DDG: data"];
"1000104" -> "1001713"  [label="DDG: data"];
"1000104" -> "1001753"  [label="DDG: data"];
"1000104" -> "1001769"  [label="DDG: data"];
"1000104" -> "1001775"  [label="DDG: data"];
"1000104" -> "1001783"  [label="DDG: data"];
"1000104" -> "1001791"  [label="DDG: data"];
"1000104" -> "1001825"  [label="DDG: data"];
"1000104" -> "1001841"  [label="DDG: data"];
"1000104" -> "1001901"  [label="DDG: data"];
"1000104" -> "1001942"  [label="DDG: data"];
"1000104" -> "1001951"  [label="DDG: data"];
"1000104" -> "1001962"  [label="DDG: data"];
"1000104" -> "1001970"  [label="DDG: data"];
"1000104" -> "1001978"  [label="DDG: data"];
"1000104" -> "1002059"  [label="DDG: data"];
"1000104" -> "1002076"  [label="DDG: data"];
"1000104" -> "1002084"  [label="DDG: data"];
"1000104" -> "1002090"  [label="DDG: data"];
"1000104" -> "1002096"  [label="DDG: data"];
"1000104" -> "1002112"  [label="DDG: data"];
"1000104" -> "1002127"  [label="DDG: data"];
"1000104" -> "1002135"  [label="DDG: data"];
"1000104" -> "1002143"  [label="DDG: data"];
"1000104" -> "1002151"  [label="DDG: data"];
"1000104" -> "1002211"  [label="DDG: data"];
"1000104" -> "1002217"  [label="DDG: data"];
"1000104" -> "1002223"  [label="DDG: data"];
"1000104" -> "1002283"  [label="DDG: data"];
"1000104" -> "1002301"  [label="DDG: data"];
"1000104" -> "1002307"  [label="DDG: data"];
"1000104" -> "1002325"  [label="DDG: data"];
"1000104" -> "1002331"  [label="DDG: data"];
"1000104" -> "1002339"  [label="DDG: data"];
"1000104" -> "1002347"  [label="DDG: data"];
"1000104" -> "1002401"  [label="DDG: data"];
"1000104" -> "1002407"  [label="DDG: data"];
"1000104" -> "1002425"  [label="DDG: data"];
"1000104" -> "1002444"  [label="DDG: data"];
"1000104" -> "1002471"  [label="DDG: data"];
"1000104" -> "1002488"  [label="DDG: data"];
"1000104" -> "1002494"  [label="DDG: data"];
"1000104" -> "1002513"  [label="DDG: data"];
"1000104" -> "1002560"  [label="DDG: data"];
"1000104" -> "1002576"  [label="DDG: data"];
"1000104" -> "1002584"  [label="DDG: data"];
"1000104" -> "1002600"  [label="DDG: data"];
"1000104" -> "1002606"  [label="DDG: data"];
"1000104" -> "1002614"  [label="DDG: data"];
"1000104" -> "1002622"  [label="DDG: data"];
"1000104" -> "1002645"  [label="DDG: data"];
"1000104" -> "1002680"  [label="DDG: data"];
"1000104" -> "1002713"  [label="DDG: data"];
"1000104" -> "1002745"  [label="DDG: data"];
"1000104" -> "1002751"  [label="DDG: data"];
"1000104" -> "1002759"  [label="DDG: data"];
"1000104" -> "1002767"  [label="DDG: data"];
"1000104" -> "1002790"  [label="DDG: data"];
"1000104" -> "1002806"  [label="DDG: data"];
"1000104" -> "1002898"  [label="DDG: data"];
"1000104" -> "1002917"  [label="DDG: data"];
"1000104" -> "1002945"  [label="DDG: data"];
"1000104" -> "1003000"  [label="DDG: data"];
"1000104" -> "1003030"  [label="DDG: data"];
"1000104" -> "1003038"  [label="DDG: data"];
"1000104" -> "1003079"  [label="DDG: data"];
"1000104" -> "1003090"  [label="DDG: data"];
"1000104" -> "1003119"  [label="DDG: data"];
"1000104" -> "1003127"  [label="DDG: data"];
"1000104" -> "1003135"  [label="DDG: data"];
"1000104" -> "1003165"  [label="DDG: data"];
"1000104" -> "1003194"  [label="DDG: data"];
"1000104" -> "1003202"  [label="DDG: data"];
"1000104" -> "1003210"  [label="DDG: data"];
}
