digraph "0_linux_7d5145d8eb2b9791533ffe4dc003b129b9696c48_1@pointer" {
"1000286" [label="(Call,xen_netbk_idx_release(netbk, pending_idx))"];
"1000308" [label="(Call,xen_netbk_idx_release(netbk, pending_idx))"];
"1000286" [label="(Call,xen_netbk_idx_release(netbk, pending_idx))"];
"1000241" [label="(Call,xen_netbk_idx_release(netbk, pending_idx))"];
"1000109" [label="(MethodParameterIn,struct xen_netbk *netbk)"];
"1000218" [label="(Call,pending_idx = frag_get_pending_idx(&shinfo->frags[i]))"];
"1000220" [label="(Call,frag_get_pending_idx(&shinfo->frags[i]))"];
"1000197" [label="(Call,frag_get_pending_idx(&shinfo->frags[0]))"];
"1000278" [label="(Call,pending_idx = *((u16 *)skb->data))"];
"1000299" [label="(Call,pending_idx = frag_get_pending_idx(&shinfo->frags[j]))"];
"1000301" [label="(Call,frag_get_pending_idx(&shinfo->frags[j]))"];
"1000266" [label="(Call,netbk->pending_ring[index] = pending_idx)"];
"1000310" [label="(Identifier,pending_idx)"];
"1000242" [label="(Identifier,netbk)"];
"1000243" [label="(Identifier,pending_idx)"];
"1000309" [label="(Identifier,netbk)"];
"1000221" [label="(Call,&shinfo->frags[i])"];
"1000301" [label="(Call,frag_get_pending_idx(&shinfo->frags[j]))"];
"1000219" [label="(Identifier,pending_idx)"];
"1000298" [label="(Block,)"];
"1000308" [label="(Call,xen_netbk_idx_release(netbk, pending_idx))"];
"1000214" [label="(Block,)"];
"1000198" [label="(Call,&shinfo->frags[0])"];
"1000302" [label="(Call,&shinfo->frags[j])"];
"1000220" [label="(Call,frag_get_pending_idx(&shinfo->frags[i]))"];
"1000279" [label="(Identifier,pending_idx)"];
"1000322" [label="(MethodReturn,static int)"];
"1000244" [label="(ControlStructure,continue;)"];
"1000196" [label="(Call,frag_get_pending_idx(&shinfo->frags[0]) == pending_idx)"];
"1000299" [label="(Call,pending_idx = frag_get_pending_idx(&shinfo->frags[j]))"];
"1000109" [label="(MethodParameterIn,struct xen_netbk *netbk)"];
"1000278" [label="(Call,pending_idx = *((u16 *)skb->data))"];
"1000218" [label="(Call,pending_idx = frag_get_pending_idx(&shinfo->frags[i]))"];
"1000238" [label="(ControlStructure,if (unlikely(err)))"];
"1000287" [label="(Identifier,netbk)"];
"1000228" [label="(Identifier,newerr)"];
"1000297" [label="(Identifier,j)"];
"1000286" [label="(Call,xen_netbk_idx_release(netbk, pending_idx))"];
"1000291" [label="(Identifier,j)"];
"1000241" [label="(Call,xen_netbk_idx_release(netbk, pending_idx))"];
"1000300" [label="(Identifier,pending_idx)"];
"1000197" [label="(Call,frag_get_pending_idx(&shinfo->frags[0]))"];
"1000204" [label="(Identifier,pending_idx)"];
"1000280" [label="(Call,*((u16 *)skb->data))"];
"1000288" [label="(Identifier,pending_idx)"];
"1000286" -> "1000214"  [label="AST: "];
"1000286" -> "1000288"  [label="CFG: "];
"1000287" -> "1000286"  [label="AST: "];
"1000288" -> "1000286"  [label="AST: "];
"1000291" -> "1000286"  [label="CFG: "];
"1000286" -> "1000322"  [label="DDG: xen_netbk_idx_release(netbk, pending_idx)"];
"1000286" -> "1000322"  [label="DDG: netbk"];
"1000286" -> "1000322"  [label="DDG: pending_idx"];
"1000286" -> "1000241"  [label="DDG: netbk"];
"1000308" -> "1000286"  [label="DDG: netbk"];
"1000241" -> "1000286"  [label="DDG: netbk"];
"1000109" -> "1000286"  [label="DDG: netbk"];
"1000278" -> "1000286"  [label="DDG: pending_idx"];
"1000286" -> "1000308"  [label="DDG: netbk"];
"1000308" -> "1000298"  [label="AST: "];
"1000308" -> "1000310"  [label="CFG: "];
"1000309" -> "1000308"  [label="AST: "];
"1000310" -> "1000308"  [label="AST: "];
"1000297" -> "1000308"  [label="CFG: "];
"1000308" -> "1000322"  [label="DDG: pending_idx"];
"1000308" -> "1000322"  [label="DDG: netbk"];
"1000308" -> "1000322"  [label="DDG: xen_netbk_idx_release(netbk, pending_idx)"];
"1000308" -> "1000241"  [label="DDG: netbk"];
"1000109" -> "1000308"  [label="DDG: netbk"];
"1000299" -> "1000308"  [label="DDG: pending_idx"];
"1000241" -> "1000238"  [label="AST: "];
"1000241" -> "1000243"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="AST: "];
"1000244" -> "1000241"  [label="CFG: "];
"1000241" -> "1000322"  [label="DDG: netbk"];
"1000241" -> "1000322"  [label="DDG: xen_netbk_idx_release(netbk, pending_idx)"];
"1000241" -> "1000322"  [label="DDG: pending_idx"];
"1000109" -> "1000241"  [label="DDG: netbk"];
"1000218" -> "1000241"  [label="DDG: pending_idx"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000322"  [label="DDG: netbk"];
"1000218" -> "1000214"  [label="AST: "];
"1000218" -> "1000220"  [label="CFG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000220" -> "1000218"  [label="AST: "];
"1000228" -> "1000218"  [label="CFG: "];
"1000218" -> "1000322"  [label="DDG: pending_idx"];
"1000218" -> "1000322"  [label="DDG: frag_get_pending_idx(&shinfo->frags[i])"];
"1000220" -> "1000218"  [label="DDG: &shinfo->frags[i]"];
"1000218" -> "1000266"  [label="DDG: pending_idx"];
"1000220" -> "1000221"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000220" -> "1000322"  [label="DDG: &shinfo->frags[i]"];
"1000197" -> "1000220"  [label="DDG: &shinfo->frags[0]"];
"1000197" -> "1000196"  [label="AST: "];
"1000197" -> "1000198"  [label="CFG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000204" -> "1000197"  [label="CFG: "];
"1000197" -> "1000322"  [label="DDG: &shinfo->frags[0]"];
"1000197" -> "1000196"  [label="DDG: &shinfo->frags[0]"];
"1000197" -> "1000301"  [label="DDG: &shinfo->frags[0]"];
"1000278" -> "1000214"  [label="AST: "];
"1000278" -> "1000280"  [label="CFG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000280" -> "1000278"  [label="AST: "];
"1000287" -> "1000278"  [label="CFG: "];
"1000278" -> "1000322"  [label="DDG: *((u16 *)skb->data)"];
"1000299" -> "1000298"  [label="AST: "];
"1000299" -> "1000301"  [label="CFG: "];
"1000300" -> "1000299"  [label="AST: "];
"1000301" -> "1000299"  [label="AST: "];
"1000309" -> "1000299"  [label="CFG: "];
"1000299" -> "1000322"  [label="DDG: frag_get_pending_idx(&shinfo->frags[j])"];
"1000301" -> "1000299"  [label="DDG: &shinfo->frags[j]"];
"1000301" -> "1000302"  [label="CFG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000301" -> "1000322"  [label="DDG: &shinfo->frags[j]"];
}
