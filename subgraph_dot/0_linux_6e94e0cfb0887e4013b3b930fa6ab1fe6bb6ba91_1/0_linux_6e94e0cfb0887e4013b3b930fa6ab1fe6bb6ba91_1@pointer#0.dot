digraph "0_linux_6e94e0cfb0887e4013b3b930fa6ab1fe6bb6ba91_1@pointer" {
"1000240" [label="(Call,t->u.kernel.target = target)"];
"1000223" [label="(Call,IS_ERR(target))"];
"1000204" [label="(Call,target = xt_request_find_target(NFPROTO_IPV4, t->u.user.name,\n\t\t\t\t\tt->u.user.revision))"];
"1000206" [label="(Call,xt_request_find_target(NFPROTO_IPV4, t->u.user.name,\n\t\t\t\t\tt->u.user.revision))"];
"1000241" [label="(Call,t->u.kernel.target)"];
"1000251" [label="(Call,xt_compat_target_offset(target))"];
"1000237" [label="(Call,PTR_ERR(target))"];
"1000206" [label="(Call,xt_request_find_target(NFPROTO_IPV4, t->u.user.name,\n\t\t\t\t\tt->u.user.revision))"];
"1000208" [label="(Call,t->u.user.name)"];
"1000227" [label="(Literal,\"check_compat_entry_size_and_hooks: `%s' not found\n\")"];
"1000248" [label="(Identifier,target)"];
"1000223" [label="(Call,IS_ERR(target))"];
"1000205" [label="(Identifier,target)"];
"1000250" [label="(Identifier,off)"];
"1000207" [label="(Identifier,NFPROTO_IPV4)"];
"1000362" [label="(MethodReturn,RET)"];
"1000204" [label="(Call,target = xt_request_find_target(NFPROTO_IPV4, t->u.user.name,\n\t\t\t\t\tt->u.user.revision))"];
"1000222" [label="(ControlStructure,if (IS_ERR(target)))"];
"1000240" [label="(Call,t->u.kernel.target = target)"];
"1000112" [label="(Block,)"];
"1000215" [label="(Call,t->u.user.revision)"];
"1000226" [label="(Call,duprintf(\"check_compat_entry_size_and_hooks: `%s' not found\n\",\n\t\t\t t->u.user.name))"];
"1000244" [label="(Identifier,t)"];
"1000224" [label="(Identifier,target)"];
"1000240" -> "1000112"  [label="AST: "];
"1000240" -> "1000248"  [label="CFG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000248" -> "1000240"  [label="AST: "];
"1000250" -> "1000240"  [label="CFG: "];
"1000240" -> "1000362"  [label="DDG: t->u.kernel.target"];
"1000223" -> "1000240"  [label="DDG: target"];
"1000223" -> "1000222"  [label="AST: "];
"1000223" -> "1000224"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000227" -> "1000223"  [label="CFG: "];
"1000244" -> "1000223"  [label="CFG: "];
"1000223" -> "1000362"  [label="DDG: IS_ERR(target)"];
"1000204" -> "1000223"  [label="DDG: target"];
"1000223" -> "1000237"  [label="DDG: target"];
"1000223" -> "1000251"  [label="DDG: target"];
"1000204" -> "1000112"  [label="AST: "];
"1000204" -> "1000206"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000206" -> "1000204"  [label="AST: "];
"1000224" -> "1000204"  [label="CFG: "];
"1000204" -> "1000362"  [label="DDG: xt_request_find_target(NFPROTO_IPV4, t->u.user.name,\n\t\t\t\t\tt->u.user.revision)"];
"1000206" -> "1000204"  [label="DDG: NFPROTO_IPV4"];
"1000206" -> "1000204"  [label="DDG: t->u.user.name"];
"1000206" -> "1000204"  [label="DDG: t->u.user.revision"];
"1000206" -> "1000215"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000206"  [label="AST: "];
"1000215" -> "1000206"  [label="AST: "];
"1000206" -> "1000362"  [label="DDG: t->u.user.name"];
"1000206" -> "1000362"  [label="DDG: NFPROTO_IPV4"];
"1000206" -> "1000362"  [label="DDG: t->u.user.revision"];
"1000206" -> "1000226"  [label="DDG: t->u.user.name"];
}
