digraph "0_linux_f9432c5ec8b1e9a09b9b0e5569e3c73db8de432a@pointer" {
"1000248" [label="(Call,dl->dev_num = n)"];
"1000241" [label="(Call,++n)"];
"1000107" [label="(Call,n = 0)"];
"1000108" [label="(Identifier,n)"];
"1000242" [label="(Identifier,n)"];
"1000210" [label="(Call,di + n)"];
"1000114" [label="(Literal,\"\")"];
"1000181" [label="(Call,di + n)"];
"1000249" [label="(Call,dl->dev_num)"];
"1000107" [label="(Call,n = 0)"];
"1000102" [label="(Block,)"];
"1000190" [label="(Call,di + n)"];
"1000252" [label="(Identifier,n)"];
"1000199" [label="(Call,di + n)"];
"1000248" [label="(Call,dl->dev_num = n)"];
"1000243" [label="(Identifier,dev_num)"];
"1000109" [label="(Literal,0)"];
"1000254" [label="(Identifier,size)"];
"1000278" [label="(MethodReturn,static int)"];
"1000241" [label="(Call,++n)"];
"1000220" [label="(Call,di + n)"];
"1000240" [label="(Call,++n >= dev_num)"];
"1000259" [label="(Call,n * sizeof(*di))"];
"1000231" [label="(Call,di + n)"];
"1000248" -> "1000102"  [label="AST: "];
"1000248" -> "1000252"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000252" -> "1000248"  [label="AST: "];
"1000254" -> "1000248"  [label="CFG: "];
"1000248" -> "1000278"  [label="DDG: dl->dev_num"];
"1000241" -> "1000248"  [label="DDG: n"];
"1000241" -> "1000240"  [label="AST: "];
"1000241" -> "1000242"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="CFG: "];
"1000241" -> "1000240"  [label="DDG: n"];
"1000107" -> "1000241"  [label="DDG: n"];
"1000241" -> "1000259"  [label="DDG: n"];
"1000107" -> "1000102"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000114" -> "1000107"  [label="CFG: "];
"1000107" -> "1000278"  [label="DDG: n"];
"1000107" -> "1000181"  [label="DDG: n"];
"1000107" -> "1000190"  [label="DDG: n"];
"1000107" -> "1000199"  [label="DDG: n"];
"1000107" -> "1000210"  [label="DDG: n"];
"1000107" -> "1000220"  [label="DDG: n"];
"1000107" -> "1000231"  [label="DDG: n"];
}
