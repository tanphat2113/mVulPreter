digraph "0_linux_162f98dea487206d9ab79fc12ed64700667a894d@pointer" {
"1000352" [label="(Call,dev_err(&usbinterface->dev,\n \t\t\t\"Can't retrieve exta USB descriptor to get hid report descriptor length\n\"))"];
"1000328" [label="(Call,dev_dbg(&usbinterface->dev, \"endpoint extra len:%d\n\", usbinterface->altsetting[0].extralen))"];
"1000322" [label="(Call,dev_dbg(&usbinterface->dev, \"endpoint: we have interrupt endpoint\n\"))"];
"1000307" [label="(Call,dev_dbg(&usbinterface->dev, \"endpoint: attribute:0x%x type:0x%x\n\", endpoint->bmAttributes, endpoint->bDescriptorType))"];
"1000294" [label="(Call,dev_dbg(&usbinterface->dev, \"interface class:   %d\n\", usbinterface->cur_altsetting->desc.bInterfaceClass))"];
"1000281" [label="(Call,dev_dbg(&usbinterface->dev, \"num endpoints:     %d\n\", usbinterface->cur_altsetting->desc.bNumEndpoints))"];
"1000272" [label="(Call,dev_dbg(&usbinterface->dev, \"gtco # interfaces: %d\n\", usbinterface->num_altsetting))"];
"1000300" [label="(Call,usbinterface->cur_altsetting->desc.bInterfaceClass)"];
"1000286" [label="(Literal,\"num endpoints:     %d\n\")"];
"1000333" [label="(Literal,\"endpoint extra len:%d\n\")"];
"1000327" [label="(Literal,\"endpoint: we have interrupt endpoint\n\")"];
"1000277" [label="(Literal,\"gtco # interfaces: %d\n\")"];
"1000322" [label="(Call,dev_dbg(&usbinterface->dev, \"endpoint: we have interrupt endpoint\n\"))"];
"1000278" [label="(Call,usbinterface->num_altsetting)"];
"1000334" [label="(Call,usbinterface->altsetting[0].extralen)"];
"1000287" [label="(Call,usbinterface->cur_altsetting->desc.bNumEndpoints)"];
"1000329" [label="(Call,&usbinterface->dev)"];
"1000352" [label="(Call,dev_err(&usbinterface->dev,\n \t\t\t\"Can't retrieve exta USB descriptor to get hid report descriptor length\n\"))"];
"1000353" [label="(Call,&usbinterface->dev)"];
"1000282" [label="(Call,&usbinterface->dev)"];
"1000319" [label="(ControlStructure,if (usb_endpoint_xfer_int(endpoint)))"];
"1000284" [label="(Identifier,usbinterface)"];
"1000295" [label="(Call,&usbinterface->dev)"];
"1000124" [label="(Block,)"];
"1000273" [label="(Call,&usbinterface->dev)"];
"1000331" [label="(Identifier,usbinterface)"];
"1000299" [label="(Literal,\"interface class:   %d\n\")"];
"1000297" [label="(Identifier,usbinterface)"];
"1000294" [label="(Call,dev_dbg(&usbinterface->dev, \"interface class:   %d\n\", usbinterface->cur_altsetting->desc.bInterfaceClass))"];
"1000321" [label="(Identifier,endpoint)"];
"1000357" [label="(Literal,\"Can't retrieve exta USB descriptor to get hid report descriptor length\n\")"];
"1000312" [label="(Literal,\"endpoint: attribute:0x%x type:0x%x\n\")"];
"1000281" [label="(Call,dev_dbg(&usbinterface->dev, \"num endpoints:     %d\n\", usbinterface->cur_altsetting->desc.bNumEndpoints))"];
"1000359" [label="(Identifier,error)"];
"1000631" [label="(MethodReturn,static int)"];
"1000308" [label="(Call,&usbinterface->dev)"];
"1000363" [label="(Call,dev_dbg(&usbinterface->dev,\n\t\t\"Extra descriptor success: type:%d  len:%d\n\",\n\t\thid_desc->bDescriptorType,  hid_desc->wDescriptorLength))"];
"1000307" [label="(Call,dev_dbg(&usbinterface->dev, \"endpoint: attribute:0x%x type:0x%x\n\", endpoint->bmAttributes, endpoint->bDescriptorType))"];
"1000328" [label="(Call,dev_dbg(&usbinterface->dev, \"endpoint extra len:%d\n\", usbinterface->altsetting[0].extralen))"];
"1000351" [label="(Block,)"];
"1000323" [label="(Call,&usbinterface->dev)"];
"1000272" [label="(Call,dev_dbg(&usbinterface->dev, \"gtco # interfaces: %d\n\", usbinterface->num_altsetting))"];
"1000310" [label="(Identifier,usbinterface)"];
"1000313" [label="(Call,endpoint->bmAttributes)"];
"1000316" [label="(Call,endpoint->bDescriptorType)"];
"1000345" [label="(Identifier,usbinterface)"];
"1000352" -> "1000351"  [label="AST: "];
"1000352" -> "1000357"  [label="CFG: "];
"1000353" -> "1000352"  [label="AST: "];
"1000357" -> "1000352"  [label="AST: "];
"1000359" -> "1000352"  [label="CFG: "];
"1000352" -> "1000631"  [label="DDG: "];
"1000352" -> "1000631"  [label="DDG: "];
"1000328" -> "1000352"  [label="DDG: "];
"1000328" -> "1000124"  [label="AST: "];
"1000328" -> "1000334"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000333" -> "1000328"  [label="AST: "];
"1000334" -> "1000328"  [label="AST: "];
"1000345" -> "1000328"  [label="CFG: "];
"1000328" -> "1000631"  [label="DDG: "];
"1000328" -> "1000631"  [label="DDG: "];
"1000322" -> "1000328"  [label="DDG: "];
"1000307" -> "1000328"  [label="DDG: "];
"1000328" -> "1000363"  [label="DDG: "];
"1000322" -> "1000319"  [label="AST: "];
"1000322" -> "1000327"  [label="CFG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000327" -> "1000322"  [label="AST: "];
"1000331" -> "1000322"  [label="CFG: "];
"1000322" -> "1000631"  [label="DDG: "];
"1000307" -> "1000322"  [label="DDG: "];
"1000307" -> "1000124"  [label="AST: "];
"1000307" -> "1000316"  [label="CFG: "];
"1000308" -> "1000307"  [label="AST: "];
"1000312" -> "1000307"  [label="AST: "];
"1000313" -> "1000307"  [label="AST: "];
"1000316" -> "1000307"  [label="AST: "];
"1000321" -> "1000307"  [label="CFG: "];
"1000307" -> "1000631"  [label="DDG: "];
"1000307" -> "1000631"  [label="DDG: "];
"1000307" -> "1000631"  [label="DDG: "];
"1000294" -> "1000307"  [label="DDG: "];
"1000294" -> "1000124"  [label="AST: "];
"1000294" -> "1000300"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000299" -> "1000294"  [label="AST: "];
"1000300" -> "1000294"  [label="AST: "];
"1000310" -> "1000294"  [label="CFG: "];
"1000294" -> "1000631"  [label="DDG: "];
"1000294" -> "1000631"  [label="DDG: "];
"1000281" -> "1000294"  [label="DDG: "];
"1000281" -> "1000124"  [label="AST: "];
"1000281" -> "1000287"  [label="CFG: "];
"1000282" -> "1000281"  [label="AST: "];
"1000286" -> "1000281"  [label="AST: "];
"1000287" -> "1000281"  [label="AST: "];
"1000297" -> "1000281"  [label="CFG: "];
"1000281" -> "1000631"  [label="DDG: "];
"1000281" -> "1000631"  [label="DDG: "];
"1000272" -> "1000281"  [label="DDG: "];
"1000272" -> "1000124"  [label="AST: "];
"1000272" -> "1000278"  [label="CFG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000277" -> "1000272"  [label="AST: "];
"1000278" -> "1000272"  [label="AST: "];
"1000284" -> "1000272"  [label="CFG: "];
"1000272" -> "1000631"  [label="DDG: "];
"1000272" -> "1000631"  [label="DDG: "];
}
