digraph "0_linux_f3d3342602f8bcbf37d7c46641cb9bca7618eb1c_29@API" {
"1000364" [label="(Call,rxrpc_free_skb(skb))"];
"1000354" [label="(Call,skb_dequeue(&rx->sk.sk_receive_queue) != skb)"];
"1000355" [label="(Call,skb_dequeue(&rx->sk.sk_receive_queue))"];
"1000676" [label="(Call,(struct sk_buff *) &rx->sk.sk_receive_queue)"];
"1000231" [label="(Call,skb_peek(&rx->sk.sk_receive_queue))"];
"1000280" [label="(Call,skb_queue_empty(&rx->sk.sk_receive_queue))"];
"1000690" [label="(Call,skb_dequeue(&rx->sk.sk_receive_queue))"];
"1000313" [label="(Call,rxrpc_skb(skb))"];
"1000239" [label="(Call,!skb)"];
"1000229" [label="(Call,skb = skb_peek(&rx->sk.sk_receive_queue))"];
"1000674" [label="(Call,skb == (struct sk_buff *) &rx->sk.sk_receive_queue)"];
"1000668" [label="(Call,skb = skb->next)"];
"1000300" [label="(Identifier,rx)"];
"1000197" [label="(Block,)"];
"1000281" [label="(Call,&rx->sk.sk_receive_queue)"];
"1000311" [label="(Call,sp = rxrpc_skb(skb))"];
"1000689" [label="(Call,skb_dequeue(&rx->sk.sk_receive_queue) != skb)"];
"1000231" [label="(Call,skb_peek(&rx->sk.sk_receive_queue))"];
"1000232" [label="(Call,&rx->sk.sk_receive_queue)"];
"1000230" [label="(Identifier,skb)"];
"1000229" [label="(Call,skb = skb_peek(&rx->sk.sk_receive_queue))"];
"1000280" [label="(Call,skb_queue_empty(&rx->sk.sk_receive_queue))"];
"1000310" [label="(JumpTarget,peek_next_packet:)"];
"1000536" [label="(Call,skb_copy_datagram_iovec(skb, offset,\n\t\t\t\t\t\t      msg->msg_iov, copy))"];
"1000355" [label="(Call,skb_dequeue(&rx->sk.sk_receive_queue))"];
"1000665" [label="(Block,)"];
"1000290" [label="(Identifier,current)"];
"1000755" [label="(Call,skb_dequeue(&rx->sk.sk_receive_queue) != skb)"];
"1000685" [label="(ControlStructure,goto peek_next_packet;)"];
"1000756" [label="(Call,skb_dequeue(&rx->sk.sk_receive_queue))"];
"1000314" [label="(Identifier,skb)"];
"1000676" [label="(Call,(struct sk_buff *) &rx->sk.sk_receive_queue)"];
"1000363" [label="(Call,BUG())"];
"1000365" [label="(Identifier,skb)"];
"1000684" [label="(ControlStructure,break;)"];
"1000547" [label="(Call,skb_copy_and_csum_datagram_iovec(skb, offset,\n\t\t\t\t\t\t\t       msg->msg_iov))"];
"1000313" [label="(Call,rxrpc_skb(skb))"];
"1000279" [label="(ControlStructure,if (skb_queue_empty(&rx->sk.sk_receive_queue)))"];
"1000354" [label="(Call,skb_dequeue(&rx->sk.sk_receive_queue) != skb)"];
"1000364" [label="(Call,rxrpc_free_skb(skb))"];
"1000690" [label="(Call,skb_dequeue(&rx->sk.sk_receive_queue))"];
"1000362" [label="(Identifier,skb)"];
"1000366" [label="(ControlStructure,continue;)"];
"1000244" [label="(Identifier,copied)"];
"1000673" [label="(ControlStructure,if (skb == (struct sk_buff *) &rx->sk.sk_receive_queue))"];
"1000668" [label="(Call,skb = skb->next)"];
"1000691" [label="(Call,&rx->sk.sk_receive_queue)"];
"1000670" [label="(Call,skb->next)"];
"1000905" [label="(Call,_net(\"free terminal skb %p\", skb))"];
"1000240" [label="(Identifier,skb)"];
"1000669" [label="(Identifier,skb)"];
"1000350" [label="(Block,)"];
"1000439" [label="(Call,sock_recv_ts_and_drops(msg, &rx->sk, skb))"];
"1000353" [label="(ControlStructure,if (skb_dequeue(&rx->sk.sk_receive_queue) != skb))"];
"1000628" [label="(Call,skb_dequeue(&rx->sk.sk_receive_queue))"];
"1000697" [label="(Identifier,skb)"];
"1000238" [label="(ControlStructure,if (!skb))"];
"1000356" [label="(Call,&rx->sk.sk_receive_queue)"];
"1000675" [label="(Identifier,skb)"];
"1001014" [label="(MethodReturn,int)"];
"1000910" [label="(Call,skb_dequeue(&rx->sk.sk_receive_queue))"];
"1000678" [label="(Call,&rx->sk.sk_receive_queue)"];
"1000674" [label="(Call,skb == (struct sk_buff *) &rx->sk.sk_receive_queue)"];
"1000239" [label="(Call,!skb)"];
"1000364" -> "1000350"  [label="AST: "];
"1000364" -> "1000365"  [label="CFG: "];
"1000365" -> "1000364"  [label="AST: "];
"1000366" -> "1000364"  [label="CFG: "];
"1000364" -> "1001014"  [label="DDG: skb"];
"1000364" -> "1001014"  [label="DDG: rxrpc_free_skb(skb)"];
"1000354" -> "1000364"  [label="DDG: skb"];
"1000354" -> "1000353"  [label="AST: "];
"1000354" -> "1000362"  [label="CFG: "];
"1000355" -> "1000354"  [label="AST: "];
"1000362" -> "1000354"  [label="AST: "];
"1000363" -> "1000354"  [label="CFG: "];
"1000365" -> "1000354"  [label="CFG: "];
"1000354" -> "1001014"  [label="DDG: skb_dequeue(&rx->sk.sk_receive_queue) != skb"];
"1000354" -> "1001014"  [label="DDG: skb_dequeue(&rx->sk.sk_receive_queue)"];
"1000355" -> "1000354"  [label="DDG: &rx->sk.sk_receive_queue"];
"1000313" -> "1000354"  [label="DDG: skb"];
"1000355" -> "1000356"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000362" -> "1000355"  [label="CFG: "];
"1000355" -> "1001014"  [label="DDG: &rx->sk.sk_receive_queue"];
"1000355" -> "1000231"  [label="DDG: &rx->sk.sk_receive_queue"];
"1000676" -> "1000355"  [label="DDG: &rx->sk.sk_receive_queue"];
"1000231" -> "1000355"  [label="DDG: &rx->sk.sk_receive_queue"];
"1000676" -> "1000674"  [label="AST: "];
"1000676" -> "1000678"  [label="CFG: "];
"1000677" -> "1000676"  [label="AST: "];
"1000678" -> "1000676"  [label="AST: "];
"1000674" -> "1000676"  [label="CFG: "];
"1000676" -> "1001014"  [label="DDG: &rx->sk.sk_receive_queue"];
"1000676" -> "1000628"  [label="DDG: &rx->sk.sk_receive_queue"];
"1000676" -> "1000674"  [label="DDG: &rx->sk.sk_receive_queue"];
"1000231" -> "1000676"  [label="DDG: &rx->sk.sk_receive_queue"];
"1000676" -> "1000690"  [label="DDG: &rx->sk.sk_receive_queue"];
"1000676" -> "1000756"  [label="DDG: &rx->sk.sk_receive_queue"];
"1000676" -> "1000910"  [label="DDG: &rx->sk.sk_receive_queue"];
"1000231" -> "1000229"  [label="AST: "];
"1000231" -> "1000232"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000229" -> "1000231"  [label="CFG: "];
"1000231" -> "1001014"  [label="DDG: &rx->sk.sk_receive_queue"];
"1000231" -> "1000229"  [label="DDG: &rx->sk.sk_receive_queue"];
"1000280" -> "1000231"  [label="DDG: &rx->sk.sk_receive_queue"];
"1000690" -> "1000231"  [label="DDG: &rx->sk.sk_receive_queue"];
"1000231" -> "1000280"  [label="DDG: &rx->sk.sk_receive_queue"];
"1000231" -> "1000628"  [label="DDG: &rx->sk.sk_receive_queue"];
"1000231" -> "1000690"  [label="DDG: &rx->sk.sk_receive_queue"];
"1000231" -> "1000756"  [label="DDG: &rx->sk.sk_receive_queue"];
"1000231" -> "1000910"  [label="DDG: &rx->sk.sk_receive_queue"];
"1000280" -> "1000279"  [label="AST: "];
"1000280" -> "1000281"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000290" -> "1000280"  [label="CFG: "];
"1000300" -> "1000280"  [label="CFG: "];
"1000280" -> "1001014"  [label="DDG: skb_queue_empty(&rx->sk.sk_receive_queue)"];
"1000280" -> "1001014"  [label="DDG: &rx->sk.sk_receive_queue"];
"1000690" -> "1000689"  [label="AST: "];
"1000690" -> "1000691"  [label="CFG: "];
"1000691" -> "1000690"  [label="AST: "];
"1000697" -> "1000690"  [label="CFG: "];
"1000690" -> "1001014"  [label="DDG: &rx->sk.sk_receive_queue"];
"1000690" -> "1000689"  [label="DDG: &rx->sk.sk_receive_queue"];
"1000313" -> "1000311"  [label="AST: "];
"1000313" -> "1000314"  [label="CFG: "];
"1000314" -> "1000313"  [label="AST: "];
"1000311" -> "1000313"  [label="CFG: "];
"1000313" -> "1001014"  [label="DDG: skb"];
"1000313" -> "1000311"  [label="DDG: skb"];
"1000239" -> "1000313"  [label="DDG: skb"];
"1000674" -> "1000313"  [label="DDG: skb"];
"1000313" -> "1000439"  [label="DDG: skb"];
"1000313" -> "1000536"  [label="DDG: skb"];
"1000313" -> "1000547"  [label="DDG: skb"];
"1000313" -> "1000755"  [label="DDG: skb"];
"1000313" -> "1000905"  [label="DDG: skb"];
"1000239" -> "1000238"  [label="AST: "];
"1000239" -> "1000240"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000244" -> "1000239"  [label="CFG: "];
"1000310" -> "1000239"  [label="CFG: "];
"1000239" -> "1001014"  [label="DDG: !skb"];
"1000239" -> "1001014"  [label="DDG: skb"];
"1000229" -> "1000239"  [label="DDG: skb"];
"1000229" -> "1000197"  [label="AST: "];
"1000230" -> "1000229"  [label="AST: "];
"1000240" -> "1000229"  [label="CFG: "];
"1000229" -> "1001014"  [label="DDG: skb_peek(&rx->sk.sk_receive_queue)"];
"1000674" -> "1000673"  [label="AST: "];
"1000675" -> "1000674"  [label="AST: "];
"1000684" -> "1000674"  [label="CFG: "];
"1000685" -> "1000674"  [label="CFG: "];
"1000674" -> "1001014"  [label="DDG: (struct sk_buff *) &rx->sk.sk_receive_queue"];
"1000674" -> "1001014"  [label="DDG: skb"];
"1000674" -> "1001014"  [label="DDG: skb == (struct sk_buff *) &rx->sk.sk_receive_queue"];
"1000668" -> "1000674"  [label="DDG: skb"];
"1000668" -> "1000665"  [label="AST: "];
"1000668" -> "1000670"  [label="CFG: "];
"1000669" -> "1000668"  [label="AST: "];
"1000670" -> "1000668"  [label="AST: "];
"1000675" -> "1000668"  [label="CFG: "];
"1000668" -> "1001014"  [label="DDG: skb->next"];
}
