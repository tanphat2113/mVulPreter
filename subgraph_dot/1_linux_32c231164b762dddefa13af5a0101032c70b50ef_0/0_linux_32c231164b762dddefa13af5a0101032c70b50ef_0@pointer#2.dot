digraph "0_linux_32c231164b762dddefa13af5a0101032c70b50ef_0@pointer" {
"1000247" [label="(Call,sk->sk_bound_dev_if = addr->l2tp_scope_id)"];
"1000238" [label="(Call,addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t\t    addr->l2tp_scope_id)"];
"1000239" [label="(Call,addr_len >= sizeof(struct sockaddr_in6))"];
"1000156" [label="(Call,addr_len < sizeof(*addr))"];
"1000109" [label="(MethodParameterIn,int addr_len)"];
"1000255" [label="(Call,!sk->sk_bound_dev_if)"];
"1000266" [label="(Call,dev_get_by_index_rcu(sock_net(sk),\n\t\t\t\t\t\t   sk->sk_bound_dev_if))"];
"1000264" [label="(Call,dev = dev_get_by_index_rcu(sock_net(sk),\n\t\t\t\t\t\t   sk->sk_bound_dev_if))"];
"1000273" [label="(Call,!dev)"];
"1000285" [label="(Call,ipv6_chk_addr(sock_net(sk), &addr->l2tp_addr, dev, 0))"];
"1000284" [label="(Call,!ipv6_chk_addr(sock_net(sk), &addr->l2tp_addr, dev, 0))"];
"1000305" [label="(Call,sk->sk_v6_rcv_saddr = addr->l2tp_addr)"];
"1000312" [label="(Call,np->saddr = addr->l2tp_addr)"];
"1000158" [label="(Call,sizeof(*addr))"];
"1000293" [label="(Literal,0)"];
"1000295" [label="(Call,rcu_read_unlock())"];
"1000163" [label="(Identifier,EINVAL)"];
"1000313" [label="(Call,np->saddr)"];
"1000264" [label="(Call,dev = dev_get_by_index_rcu(sock_net(sk),\n\t\t\t\t\t\t   sk->sk_bound_dev_if))"];
"1000265" [label="(Identifier,dev)"];
"1000309" [label="(Call,addr->l2tp_addr)"];
"1000257" [label="(Identifier,sk)"];
"1000255" [label="(Call,!sk->sk_bound_dev_if)"];
"1000322" [label="(Identifier,sk)"];
"1000246" [label="(Block,)"];
"1000277" [label="(Identifier,v4addr)"];
"1000256" [label="(Call,sk->sk_bound_dev_if)"];
"1000269" [label="(Call,sk->sk_bound_dev_if)"];
"1000193" [label="(Call,__l2tp_ip6_bind_lookup(net, &addr->l2tp_addr,\n\t\t\t\t   sk->sk_bound_dev_if, addr->l2tp_conn_id))"];
"1000238" [label="(Call,addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t\t    addr->l2tp_scope_id)"];
"1000156" [label="(Call,addr_len < sizeof(*addr))"];
"1000240" [label="(Identifier,addr_len)"];
"1000285" [label="(Call,ipv6_chk_addr(sock_net(sk), &addr->l2tp_addr, dev, 0))"];
"1000261" [label="(Identifier,err)"];
"1000155" [label="(ControlStructure,if (addr_len < sizeof(*addr)))"];
"1000312" [label="(Call,np->saddr = addr->l2tp_addr)"];
"1000314" [label="(Identifier,np)"];
"1000286" [label="(Call,sock_net(sk))"];
"1000251" [label="(Call,addr->l2tp_scope_id)"];
"1000241" [label="(Call,sizeof(struct sockaddr_in6))"];
"1000165" [label="(Identifier,addr_type)"];
"1000254" [label="(ControlStructure,if (!sk->sk_bound_dev_if))"];
"1000259" [label="(ControlStructure,goto out_unlock_rcu;)"];
"1000283" [label="(ControlStructure,if (!ipv6_chk_addr(sock_net(sk), &addr->l2tp_addr, dev, 0)))"];
"1000110" [label="(Block,)"];
"1000237" [label="(ControlStructure,if (addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t\t    addr->l2tp_scope_id))"];
"1000316" [label="(Call,addr->l2tp_addr)"];
"1000239" [label="(Call,addr_len >= sizeof(struct sockaddr_in6))"];
"1000284" [label="(Call,!ipv6_chk_addr(sock_net(sk), &addr->l2tp_addr, dev, 0))"];
"1000247" [label="(Call,sk->sk_bound_dev_if = addr->l2tp_scope_id)"];
"1000288" [label="(Call,&addr->l2tp_addr)"];
"1000229" [label="(Call,*dev = NULL)"];
"1000244" [label="(Identifier,addr)"];
"1000272" [label="(ControlStructure,if (!dev))"];
"1000157" [label="(Identifier,addr_len)"];
"1000359" [label="(MethodReturn,static int)"];
"1000305" [label="(Call,sk->sk_v6_rcv_saddr = addr->l2tp_addr)"];
"1000306" [label="(Call,sk->sk_v6_rcv_saddr)"];
"1000267" [label="(Call,sock_net(sk))"];
"1000294" [label="(ControlStructure,goto out_unlock_rcu;)"];
"1000248" [label="(Call,sk->sk_bound_dev_if)"];
"1000273" [label="(Call,!dev)"];
"1000275" [label="(ControlStructure,goto out_unlock_rcu;)"];
"1000109" [label="(MethodParameterIn,int addr_len)"];
"1000249" [label="(Identifier,sk)"];
"1000236" [label="(Block,)"];
"1000292" [label="(Identifier,dev)"];
"1000274" [label="(Identifier,dev)"];
"1000243" [label="(Call,addr->l2tp_scope_id)"];
"1000266" [label="(Call,dev_get_by_index_rcu(sock_net(sk),\n\t\t\t\t\t\t   sk->sk_bound_dev_if))"];
"1000247" -> "1000246"  [label="AST: "];
"1000247" -> "1000251"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000251" -> "1000247"  [label="AST: "];
"1000257" -> "1000247"  [label="CFG: "];
"1000247" -> "1000359"  [label="DDG: addr->l2tp_scope_id"];
"1000238" -> "1000247"  [label="DDG: addr->l2tp_scope_id"];
"1000247" -> "1000255"  [label="DDG: sk->sk_bound_dev_if"];
"1000238" -> "1000237"  [label="AST: "];
"1000238" -> "1000239"  [label="CFG: "];
"1000238" -> "1000243"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000243" -> "1000238"  [label="AST: "];
"1000249" -> "1000238"  [label="CFG: "];
"1000257" -> "1000238"  [label="CFG: "];
"1000238" -> "1000359"  [label="DDG: addr_len >= sizeof(struct sockaddr_in6)"];
"1000238" -> "1000359"  [label="DDG: addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t\t    addr->l2tp_scope_id"];
"1000238" -> "1000359"  [label="DDG: addr->l2tp_scope_id"];
"1000239" -> "1000238"  [label="DDG: addr_len"];
"1000239" -> "1000241"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="AST: "];
"1000244" -> "1000239"  [label="CFG: "];
"1000239" -> "1000359"  [label="DDG: addr_len"];
"1000156" -> "1000239"  [label="DDG: addr_len"];
"1000109" -> "1000239"  [label="DDG: addr_len"];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000158"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000158" -> "1000156"  [label="AST: "];
"1000163" -> "1000156"  [label="CFG: "];
"1000165" -> "1000156"  [label="CFG: "];
"1000156" -> "1000359"  [label="DDG: addr_len"];
"1000156" -> "1000359"  [label="DDG: addr_len < sizeof(*addr)"];
"1000109" -> "1000156"  [label="DDG: addr_len"];
"1000109" -> "1000106"  [label="AST: "];
"1000109" -> "1000359"  [label="DDG: addr_len"];
"1000255" -> "1000254"  [label="AST: "];
"1000255" -> "1000256"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000259" -> "1000255"  [label="CFG: "];
"1000261" -> "1000255"  [label="CFG: "];
"1000255" -> "1000359"  [label="DDG: !sk->sk_bound_dev_if"];
"1000255" -> "1000359"  [label="DDG: sk->sk_bound_dev_if"];
"1000193" -> "1000255"  [label="DDG: sk->sk_bound_dev_if"];
"1000255" -> "1000266"  [label="DDG: sk->sk_bound_dev_if"];
"1000266" -> "1000264"  [label="AST: "];
"1000266" -> "1000269"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000269" -> "1000266"  [label="AST: "];
"1000264" -> "1000266"  [label="CFG: "];
"1000266" -> "1000359"  [label="DDG: sk->sk_bound_dev_if"];
"1000266" -> "1000359"  [label="DDG: sock_net(sk)"];
"1000266" -> "1000264"  [label="DDG: sock_net(sk)"];
"1000266" -> "1000264"  [label="DDG: sk->sk_bound_dev_if"];
"1000267" -> "1000266"  [label="DDG: sk"];
"1000264" -> "1000236"  [label="AST: "];
"1000265" -> "1000264"  [label="AST: "];
"1000274" -> "1000264"  [label="CFG: "];
"1000264" -> "1000359"  [label="DDG: dev_get_by_index_rcu(sock_net(sk),\n\t\t\t\t\t\t   sk->sk_bound_dev_if)"];
"1000264" -> "1000273"  [label="DDG: dev"];
"1000273" -> "1000272"  [label="AST: "];
"1000273" -> "1000274"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000275" -> "1000273"  [label="CFG: "];
"1000277" -> "1000273"  [label="CFG: "];
"1000273" -> "1000359"  [label="DDG: dev"];
"1000273" -> "1000359"  [label="DDG: !dev"];
"1000273" -> "1000285"  [label="DDG: dev"];
"1000285" -> "1000284"  [label="AST: "];
"1000285" -> "1000293"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000288" -> "1000285"  [label="AST: "];
"1000292" -> "1000285"  [label="AST: "];
"1000293" -> "1000285"  [label="AST: "];
"1000284" -> "1000285"  [label="CFG: "];
"1000285" -> "1000359"  [label="DDG: sock_net(sk)"];
"1000285" -> "1000359"  [label="DDG: dev"];
"1000285" -> "1000359"  [label="DDG: &addr->l2tp_addr"];
"1000285" -> "1000284"  [label="DDG: sock_net(sk)"];
"1000285" -> "1000284"  [label="DDG: &addr->l2tp_addr"];
"1000285" -> "1000284"  [label="DDG: dev"];
"1000285" -> "1000284"  [label="DDG: 0"];
"1000286" -> "1000285"  [label="DDG: sk"];
"1000193" -> "1000285"  [label="DDG: &addr->l2tp_addr"];
"1000229" -> "1000285"  [label="DDG: dev"];
"1000285" -> "1000305"  [label="DDG: &addr->l2tp_addr"];
"1000285" -> "1000312"  [label="DDG: &addr->l2tp_addr"];
"1000284" -> "1000283"  [label="AST: "];
"1000294" -> "1000284"  [label="CFG: "];
"1000295" -> "1000284"  [label="CFG: "];
"1000284" -> "1000359"  [label="DDG: ipv6_chk_addr(sock_net(sk), &addr->l2tp_addr, dev, 0)"];
"1000284" -> "1000359"  [label="DDG: !ipv6_chk_addr(sock_net(sk), &addr->l2tp_addr, dev, 0)"];
"1000305" -> "1000110"  [label="AST: "];
"1000305" -> "1000309"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000309" -> "1000305"  [label="AST: "];
"1000314" -> "1000305"  [label="CFG: "];
"1000305" -> "1000359"  [label="DDG: sk->sk_v6_rcv_saddr"];
"1000193" -> "1000305"  [label="DDG: &addr->l2tp_addr"];
"1000312" -> "1000110"  [label="AST: "];
"1000312" -> "1000316"  [label="CFG: "];
"1000313" -> "1000312"  [label="AST: "];
"1000316" -> "1000312"  [label="AST: "];
"1000322" -> "1000312"  [label="CFG: "];
"1000312" -> "1000359"  [label="DDG: addr->l2tp_addr"];
"1000312" -> "1000359"  [label="DDG: np->saddr"];
"1000193" -> "1000312"  [label="DDG: &addr->l2tp_addr"];
}
