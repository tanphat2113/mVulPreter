digraph "1_mstdlib_db124b8f607dd0a40a9aef2d4d468fad433522a7_1@del" {
"1000129" [label="(Call,M_fs_perms_can_access(path_new, M_FS_PERMS_MODE_NONE) == M_FS_ERROR_SUCCESS)"];
"1000130" [label="(Call,M_fs_perms_can_access(path_new, M_FS_PERMS_MODE_NONE))"];
"1000106" [label="(MethodParameterIn,const char *path_new)"];
"1000143" [label="(Call,res != M_FS_ERROR_SUCCESS)"];
"1000147" [label="(Return,return res;)"];
"1000161" [label="(Call,res != M_FS_ERROR_SUCCESS)"];
"1000165" [label="(Return,return res;)"];
"1000184" [label="(Call,res != M_FS_ERROR_SUCCESS)"];
"1000190" [label="(Return,return res;)"];
"1000210" [label="(Call,res != M_FS_ERROR_SUCCESS)"];
"1000216" [label="(Return,return res;)"];
"1000220" [label="(Call,(res = M_fs_file_read(fd_old, temp, sizeof(temp), &read_len, M_FS_FILE_RW_NORMAL)) == M_FS_ERROR_SUCCESS)"];
"1000219" [label="(Call,(res = M_fs_file_read(fd_old, temp, sizeof(temp), &read_len, M_FS_FILE_RW_NORMAL)) == M_FS_ERROR_SUCCESS && read_len != 0)"];
"1000308" [label="(Call,res != M_FS_ERROR_SUCCESS)"];
"1000314" [label="(Call,res != M_FS_ERROR_SUCCESS)"];
"1000324" [label="(Call,res != M_FS_ERROR_SUCCESS)"];
"1000328" [label="(Return,return res;)"];
"1000330" [label="(Return,return M_FS_ERROR_SUCCESS;)"];
"1000187" [label="(Block,)"];
"1000313" [label="(ControlStructure,if (res != M_FS_ERROR_SUCCESS))"];
"1000149" [label="(Call,res = M_fs_file_open(&fd_old, path_old, M_FS_BUF_SIZE, M_FS_FILE_MODE_READ|M_FS_FILE_MODE_NOCREATE, NULL))"];
"1000145" [label="(Identifier,M_FS_ERROR_SUCCESS)"];
"1000185" [label="(Identifier,res)"];
"1000190" [label="(Return,return res;)"];
"1000131" [label="(Identifier,path_new)"];
"1000193" [label="(Identifier,perms)"];
"1000215" [label="(Identifier,fd_old)"];
"1000330" [label="(Return,return M_FS_ERROR_SUCCESS;)"];
"1000308" [label="(Call,res != M_FS_ERROR_SUCCESS)"];
"1000176" [label="(Call,res = M_fs_info_file(&info, fd_old, M_FS_PATH_INFO_FLAGS_NONE))"];
"1000213" [label="(Block,)"];
"1000112" [label="(Block,)"];
"1000332" [label="(MethodReturn,static M_fs_error_t)"];
"1000163" [label="(Identifier,M_FS_ERROR_SUCCESS)"];
"1000266" [label="(Call,M_fs_progress_set_result(progress, res))"];
"1000211" [label="(Identifier,res)"];
"1000128" [label="(ControlStructure,if (M_fs_perms_can_access(path_new, M_FS_PERMS_MODE_NONE) == M_FS_ERROR_SUCCESS))"];
"1000219" [label="(Call,(res = M_fs_file_read(fd_old, temp, sizeof(temp), &read_len, M_FS_FILE_RW_NORMAL)) == M_FS_ERROR_SUCCESS && read_len != 0)"];
"1000165" [label="(Return,return res;)"];
"1000307" [label="(ControlStructure,if (res != M_FS_ERROR_SUCCESS))"];
"1000130" [label="(Call,M_fs_perms_can_access(path_new, M_FS_PERMS_MODE_NONE))"];
"1000170" [label="(Identifier,perms)"];
"1000218" [label="(ControlStructure,while ((res = M_fs_file_read(fd_old, temp, sizeof(temp), &read_len, M_FS_FILE_RW_NORMAL)) == M_FS_ERROR_SUCCESS && read_len != 0))"];
"1000329" [label="(Identifier,res)"];
"1000162" [label="(Identifier,res)"];
"1000129" [label="(Call,M_fs_perms_can_access(path_new, M_FS_PERMS_MODE_NONE) == M_FS_ERROR_SUCCESS)"];
"1000132" [label="(Identifier,M_FS_PERMS_MODE_NONE)"];
"1000106" [label="(MethodParameterIn,const char *path_new)"];
"1000326" [label="(Identifier,M_FS_ERROR_SUCCESS)"];
"1000223" [label="(Call,M_fs_file_read(fd_old, temp, sizeof(temp), &read_len, M_FS_FILE_RW_NORMAL))"];
"1000231" [label="(Identifier,M_FS_ERROR_SUCCESS)"];
"1000150" [label="(Identifier,res)"];
"1000189" [label="(Identifier,fd_old)"];
"1000191" [label="(Identifier,res)"];
"1000312" [label="(ControlStructure,break;)"];
"1000304" [label="(Call,res = M_FS_ERROR_CANCELED)"];
"1000325" [label="(Identifier,res)"];
"1000144" [label="(Identifier,res)"];
"1000160" [label="(ControlStructure,if (res != M_FS_ERROR_SUCCESS))"];
"1000196" [label="(Call,res = M_fs_file_open(&fd_new, path_new, M_FS_BUF_SIZE, M_FS_FILE_MODE_WRITE|M_FS_FILE_MODE_OVERWRITE, perms))"];
"1000164" [label="(Block,)"];
"1000331" [label="(Identifier,M_FS_ERROR_SUCCESS)"];
"1000309" [label="(Identifier,res)"];
"1000147" [label="(Return,return res;)"];
"1000136" [label="(Identifier,res)"];
"1000161" [label="(Call,res != M_FS_ERROR_SUCCESS)"];
"1000184" [label="(Call,res != M_FS_ERROR_SUCCESS)"];
"1000209" [label="(ControlStructure,if (res != M_FS_ERROR_SUCCESS))"];
"1000166" [label="(Identifier,res)"];
"1000316" [label="(Identifier,M_FS_ERROR_SUCCESS)"];
"1000137" [label="(Call,M_fs_delete(path_new, M_FALSE, NULL, M_FS_PROGRESS_NOEXTRA))"];
"1000318" [label="(ControlStructure,break;)"];
"1000232" [label="(Call,read_len != 0)"];
"1000186" [label="(Identifier,M_FS_ERROR_SUCCESS)"];
"1000217" [label="(Identifier,res)"];
"1000212" [label="(Identifier,M_FS_ERROR_SUCCESS)"];
"1000198" [label="(Call,M_fs_file_open(&fd_new, path_new, M_FS_BUF_SIZE, M_FS_FILE_MODE_WRITE|M_FS_FILE_MODE_OVERWRITE, perms))"];
"1000142" [label="(ControlStructure,if (res != M_FS_ERROR_SUCCESS))"];
"1000320" [label="(Identifier,fd_old)"];
"1000315" [label="(Identifier,res)"];
"1000237" [label="(Identifier,offset)"];
"1000133" [label="(Identifier,M_FS_ERROR_SUCCESS)"];
"1000314" [label="(Call,res != M_FS_ERROR_SUCCESS)"];
"1000310" [label="(Identifier,M_FS_ERROR_SUCCESS)"];
"1000244" [label="(Call,res          = M_fs_file_write(fd_new, temp+offset, read_len-offset, &wrote_len, M_FS_FILE_RW_NORMAL))"];
"1000328" [label="(Return,return res;)"];
"1000241" [label="(Identifier,offset)"];
"1000135" [label="(Call,res = M_fs_delete(path_new, M_FALSE, NULL, M_FS_PROGRESS_NOEXTRA))"];
"1000148" [label="(Identifier,res)"];
"1000221" [label="(Call,res = M_fs_file_read(fd_old, temp, sizeof(temp), &read_len, M_FS_FILE_RW_NORMAL))"];
"1000327" [label="(Block,)"];
"1000210" [label="(Call,res != M_FS_ERROR_SUCCESS)"];
"1000222" [label="(Identifier,res)"];
"1000324" [label="(Call,res != M_FS_ERROR_SUCCESS)"];
"1000146" [label="(Block,)"];
"1000323" [label="(ControlStructure,if (res != M_FS_ERROR_SUCCESS))"];
"1000143" [label="(Call,res != M_FS_ERROR_SUCCESS)"];
"1000183" [label="(ControlStructure,if (res != M_FS_ERROR_SUCCESS))"];
"1000216" [label="(Return,return res;)"];
"1000233" [label="(Identifier,read_len)"];
"1000220" [label="(Call,(res = M_fs_file_read(fd_old, temp, sizeof(temp), &read_len, M_FS_FILE_RW_NORMAL)) == M_FS_ERROR_SUCCESS)"];
"1000129" -> "1000128"  [label="AST: "];
"1000129" -> "1000133"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000133" -> "1000129"  [label="AST: "];
"1000136" -> "1000129"  [label="CFG: "];
"1000150" -> "1000129"  [label="CFG: "];
"1000129" -> "1000332"  [label="DDG: M_fs_perms_can_access(path_new, M_FS_PERMS_MODE_NONE)"];
"1000129" -> "1000332"  [label="DDG: M_fs_perms_can_access(path_new, M_FS_PERMS_MODE_NONE) == M_FS_ERROR_SUCCESS"];
"1000130" -> "1000129"  [label="DDG: path_new"];
"1000130" -> "1000129"  [label="DDG: M_FS_PERMS_MODE_NONE"];
"1000129" -> "1000143"  [label="DDG: M_FS_ERROR_SUCCESS"];
"1000129" -> "1000161"  [label="DDG: M_FS_ERROR_SUCCESS"];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000133" -> "1000130"  [label="CFG: "];
"1000130" -> "1000332"  [label="DDG: M_FS_PERMS_MODE_NONE"];
"1000130" -> "1000332"  [label="DDG: path_new"];
"1000106" -> "1000130"  [label="DDG: path_new"];
"1000130" -> "1000137"  [label="DDG: path_new"];
"1000130" -> "1000198"  [label="DDG: path_new"];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000332"  [label="DDG: path_new"];
"1000106" -> "1000137"  [label="DDG: path_new"];
"1000106" -> "1000198"  [label="DDG: path_new"];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000145" -> "1000143"  [label="AST: "];
"1000148" -> "1000143"  [label="CFG: "];
"1000150" -> "1000143"  [label="CFG: "];
"1000143" -> "1000332"  [label="DDG: res"];
"1000143" -> "1000332"  [label="DDG: M_FS_ERROR_SUCCESS"];
"1000143" -> "1000332"  [label="DDG: res != M_FS_ERROR_SUCCESS"];
"1000135" -> "1000143"  [label="DDG: res"];
"1000143" -> "1000147"  [label="DDG: res"];
"1000143" -> "1000161"  [label="DDG: M_FS_ERROR_SUCCESS"];
"1000147" -> "1000146"  [label="AST: "];
"1000147" -> "1000148"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000332" -> "1000147"  [label="CFG: "];
"1000147" -> "1000332"  [label="DDG: <RET>"];
"1000148" -> "1000147"  [label="DDG: res"];
"1000161" -> "1000160"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000166" -> "1000161"  [label="CFG: "];
"1000170" -> "1000161"  [label="CFG: "];
"1000161" -> "1000332"  [label="DDG: M_FS_ERROR_SUCCESS"];
"1000161" -> "1000332"  [label="DDG: res"];
"1000161" -> "1000332"  [label="DDG: res != M_FS_ERROR_SUCCESS"];
"1000149" -> "1000161"  [label="DDG: res"];
"1000161" -> "1000165"  [label="DDG: res"];
"1000161" -> "1000184"  [label="DDG: M_FS_ERROR_SUCCESS"];
"1000161" -> "1000210"  [label="DDG: M_FS_ERROR_SUCCESS"];
"1000165" -> "1000164"  [label="AST: "];
"1000165" -> "1000166"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000332" -> "1000165"  [label="CFG: "];
"1000165" -> "1000332"  [label="DDG: <RET>"];
"1000166" -> "1000165"  [label="DDG: res"];
"1000184" -> "1000183"  [label="AST: "];
"1000184" -> "1000186"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000186" -> "1000184"  [label="AST: "];
"1000189" -> "1000184"  [label="CFG: "];
"1000193" -> "1000184"  [label="CFG: "];
"1000184" -> "1000332"  [label="DDG: res"];
"1000184" -> "1000332"  [label="DDG: M_FS_ERROR_SUCCESS"];
"1000184" -> "1000332"  [label="DDG: res != M_FS_ERROR_SUCCESS"];
"1000176" -> "1000184"  [label="DDG: res"];
"1000184" -> "1000190"  [label="DDG: res"];
"1000184" -> "1000210"  [label="DDG: M_FS_ERROR_SUCCESS"];
"1000190" -> "1000187"  [label="AST: "];
"1000190" -> "1000191"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000332" -> "1000190"  [label="CFG: "];
"1000190" -> "1000332"  [label="DDG: <RET>"];
"1000191" -> "1000190"  [label="DDG: res"];
"1000210" -> "1000209"  [label="AST: "];
"1000210" -> "1000212"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="AST: "];
"1000215" -> "1000210"  [label="CFG: "];
"1000222" -> "1000210"  [label="CFG: "];
"1000210" -> "1000332"  [label="DDG: res != M_FS_ERROR_SUCCESS"];
"1000210" -> "1000332"  [label="DDG: M_FS_ERROR_SUCCESS"];
"1000210" -> "1000332"  [label="DDG: res"];
"1000196" -> "1000210"  [label="DDG: res"];
"1000210" -> "1000216"  [label="DDG: res"];
"1000210" -> "1000220"  [label="DDG: M_FS_ERROR_SUCCESS"];
"1000216" -> "1000213"  [label="AST: "];
"1000216" -> "1000217"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000332" -> "1000216"  [label="CFG: "];
"1000216" -> "1000332"  [label="DDG: <RET>"];
"1000217" -> "1000216"  [label="DDG: res"];
"1000220" -> "1000219"  [label="AST: "];
"1000220" -> "1000231"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000231" -> "1000220"  [label="AST: "];
"1000233" -> "1000220"  [label="CFG: "];
"1000219" -> "1000220"  [label="CFG: "];
"1000220" -> "1000219"  [label="DDG: M_FS_ERROR_SUCCESS"];
"1000221" -> "1000220"  [label="DDG: res"];
"1000223" -> "1000220"  [label="DDG: &read_len"];
"1000223" -> "1000220"  [label="DDG: M_FS_FILE_RW_NORMAL"];
"1000223" -> "1000220"  [label="DDG: fd_old"];
"1000223" -> "1000220"  [label="DDG: temp"];
"1000314" -> "1000220"  [label="DDG: M_FS_ERROR_SUCCESS"];
"1000220" -> "1000308"  [label="DDG: M_FS_ERROR_SUCCESS"];
"1000220" -> "1000314"  [label="DDG: M_FS_ERROR_SUCCESS"];
"1000220" -> "1000324"  [label="DDG: M_FS_ERROR_SUCCESS"];
"1000219" -> "1000218"  [label="AST: "];
"1000219" -> "1000232"  [label="CFG: "];
"1000232" -> "1000219"  [label="AST: "];
"1000237" -> "1000219"  [label="CFG: "];
"1000320" -> "1000219"  [label="CFG: "];
"1000219" -> "1000332"  [label="DDG: (res = M_fs_file_read(fd_old, temp, sizeof(temp), &read_len, M_FS_FILE_RW_NORMAL)) == M_FS_ERROR_SUCCESS && read_len != 0"];
"1000219" -> "1000332"  [label="DDG: read_len != 0"];
"1000219" -> "1000332"  [label="DDG: (res = M_fs_file_read(fd_old, temp, sizeof(temp), &read_len, M_FS_FILE_RW_NORMAL)) == M_FS_ERROR_SUCCESS"];
"1000232" -> "1000219"  [label="DDG: read_len"];
"1000232" -> "1000219"  [label="DDG: 0"];
"1000308" -> "1000307"  [label="AST: "];
"1000308" -> "1000310"  [label="CFG: "];
"1000309" -> "1000308"  [label="AST: "];
"1000310" -> "1000308"  [label="AST: "];
"1000241" -> "1000308"  [label="CFG: "];
"1000312" -> "1000308"  [label="CFG: "];
"1000304" -> "1000308"  [label="DDG: res"];
"1000266" -> "1000308"  [label="DDG: res"];
"1000244" -> "1000308"  [label="DDG: res"];
"1000308" -> "1000314"  [label="DDG: res"];
"1000308" -> "1000314"  [label="DDG: M_FS_ERROR_SUCCESS"];
"1000308" -> "1000324"  [label="DDG: res"];
"1000308" -> "1000324"  [label="DDG: M_FS_ERROR_SUCCESS"];
"1000314" -> "1000313"  [label="AST: "];
"1000314" -> "1000316"  [label="CFG: "];
"1000315" -> "1000314"  [label="AST: "];
"1000316" -> "1000314"  [label="AST: "];
"1000222" -> "1000314"  [label="CFG: "];
"1000318" -> "1000314"  [label="CFG: "];
"1000221" -> "1000314"  [label="DDG: res"];
"1000314" -> "1000324"  [label="DDG: res"];
"1000314" -> "1000324"  [label="DDG: M_FS_ERROR_SUCCESS"];
"1000324" -> "1000323"  [label="AST: "];
"1000324" -> "1000326"  [label="CFG: "];
"1000325" -> "1000324"  [label="AST: "];
"1000326" -> "1000324"  [label="AST: "];
"1000329" -> "1000324"  [label="CFG: "];
"1000331" -> "1000324"  [label="CFG: "];
"1000324" -> "1000332"  [label="DDG: M_FS_ERROR_SUCCESS"];
"1000324" -> "1000332"  [label="DDG: res != M_FS_ERROR_SUCCESS"];
"1000324" -> "1000332"  [label="DDG: res"];
"1000221" -> "1000324"  [label="DDG: res"];
"1000324" -> "1000328"  [label="DDG: res"];
"1000324" -> "1000330"  [label="DDG: M_FS_ERROR_SUCCESS"];
"1000328" -> "1000327"  [label="AST: "];
"1000328" -> "1000329"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000332" -> "1000328"  [label="CFG: "];
"1000328" -> "1000332"  [label="DDG: <RET>"];
"1000329" -> "1000328"  [label="DDG: res"];
"1000330" -> "1000112"  [label="AST: "];
"1000330" -> "1000331"  [label="CFG: "];
"1000331" -> "1000330"  [label="AST: "];
"1000332" -> "1000330"  [label="CFG: "];
"1000330" -> "1000332"  [label="DDG: <RET>"];
"1000331" -> "1000330"  [label="DDG: M_FS_ERROR_SUCCESS"];
}
