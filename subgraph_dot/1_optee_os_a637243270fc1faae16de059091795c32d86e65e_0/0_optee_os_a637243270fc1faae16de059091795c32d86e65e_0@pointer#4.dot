digraph "0_optee_os_a637243270fc1faae16de059091795c32d86e65e_0@pointer" {
"1000308" [label="(Call,byte_size > key->alloc_size)"];
"1000291" [label="(Call,byte_size = (key_size + key_size / 7) / 8)"];
"1000293" [label="(Call,(key_size + key_size / 7) / 8)"];
"1000296" [label="(Call,key_size / 7)"];
"1000271" [label="(Call,key_size / 8)"];
"1000206" [label="(Call,key_size > type_props->max_size)"];
"1000198" [label="(Call,key_size < type_props->min_size)"];
"1000189" [label="(Call,key_size % type_props->quanta)"];
"1000108" [label="(MethodParameterIn,unsigned long key_size)"];
"1000269" [label="(Call,byte_size = key_size / 8)"];
"1000320" [label="(Call,crypto_rng_read((void *)(key + 1), byte_size))"];
"1000318" [label="(Call,res = crypto_rng_read((void *)(key + 1), byte_size))"];
"1000328" [label="(Call,res != TEE_SUCCESS)"];
"1000416" [label="(Call,res == TEE_SUCCESS)"];
"1000434" [label="(Return,return res;)"];
"1000332" [label="(Call,key->key_size = byte_size)"];
"1000199" [label="(Identifier,key_size)"];
"1000271" [label="(Call,key_size / 8)"];
"1000206" [label="(Call,key_size > type_props->max_size)"];
"1000309" [label="(Identifier,byte_size)"];
"1000315" [label="(Identifier,res)"];
"1000307" [label="(ControlStructure,if (byte_size > key->alloc_size))"];
"1000294" [label="(Call,key_size + key_size / 7)"];
"1000258" [label="(Block,)"];
"1000205" [label="(ControlStructure,if (key_size > type_props->max_size))"];
"1000359" [label="(Call,res != TEE_SUCCESS)"];
"1000321" [label="(Call,(void *)(key + 1))"];
"1000194" [label="(Literal,0)"];
"1000248" [label="(Call,res != TEE_SUCCESS)"];
"1000396" [label="(Call,tee_svc_obj_generate_key_ecc(o, type_props, key_size,\n\t\t\t\t\t\t  params, param_count))"];
"1000198" [label="(Call,key_size < type_props->min_size)"];
"1000208" [label="(Call,type_props->max_size)"];
"1000436" [label="(MethodReturn,TEE_Result)"];
"1000191" [label="(Call,type_props->quanta)"];
"1000332" [label="(Call,key->key_size = byte_size)"];
"1000299" [label="(Literal,8)"];
"1000214" [label="(Identifier,params)"];
"1000319" [label="(Identifier,res)"];
"1000301" [label="(Identifier,key)"];
"1000212" [label="(Identifier,TEE_ERROR_NOT_SUPPORTED)"];
"1000367" [label="(Call,tee_svc_obj_generate_key_dsa(o, type_props, key_size))"];
"1000329" [label="(Identifier,res)"];
"1000423" [label="(Identifier,o)"];
"1000435" [label="(Identifier,res)"];
"1000372" [label="(Call,res != TEE_SUCCESS)"];
"1000111" [label="(Block,)"];
"1000197" [label="(ControlStructure,if (key_size < type_props->min_size))"];
"1000333" [label="(Call,key->key_size)"];
"1000403" [label="(Call,res != TEE_SUCCESS)"];
"1000320" [label="(Call,crypto_rng_read((void *)(key + 1), byte_size))"];
"1000297" [label="(Identifier,key_size)"];
"1000331" [label="(ControlStructure,goto out;)"];
"1000330" [label="(Identifier,TEE_SUCCESS)"];
"1000190" [label="(Identifier,key_size)"];
"1000270" [label="(Identifier,byte_size)"];
"1000409" [label="(Call,res = TEE_ERROR_BAD_FORMAT)"];
"1000204" [label="(Identifier,TEE_ERROR_NOT_SUPPORTED)"];
"1000279" [label="(Identifier,o)"];
"1000272" [label="(Identifier,key_size)"];
"1000326" [label="(Identifier,byte_size)"];
"1000236" [label="(Call,res != TEE_SUCCESS)"];
"1000336" [label="(Identifier,byte_size)"];
"1000189" [label="(Call,key_size % type_props->quanta)"];
"1000339" [label="(Identifier,o)"];
"1000314" [label="(Call,res = TEE_ERROR_EXCESS_DATA)"];
"1000200" [label="(Call,type_props->min_size)"];
"1000387" [label="(Call,res != TEE_SUCCESS)"];
"1000327" [label="(ControlStructure,if (res != TEE_SUCCESS))"];
"1000290" [label="(Block,)"];
"1000418" [label="(Identifier,TEE_SUCCESS)"];
"1000310" [label="(Call,key->alloc_size)"];
"1000415" [label="(ControlStructure,if (res == TEE_SUCCESS))"];
"1000417" [label="(Identifier,res)"];
"1000434" [label="(Return,return res;)"];
"1000416" [label="(Call,res == TEE_SUCCESS)"];
"1000291" [label="(Call,byte_size = (key_size + key_size / 7) / 8)"];
"1000269" [label="(Call,byte_size = key_size / 8)"];
"1000293" [label="(Call,(key_size + key_size / 7) / 8)"];
"1000308" [label="(Call,byte_size > key->alloc_size)"];
"1000292" [label="(Identifier,byte_size)"];
"1000298" [label="(Literal,7)"];
"1000108" [label="(MethodParameterIn,unsigned long key_size)"];
"1000273" [label="(Literal,8)"];
"1000296" [label="(Call,key_size / 7)"];
"1000420" [label="(Call,o->info.keySize = key_size)"];
"1000380" [label="(Call,tee_svc_obj_generate_key_dh(o, type_props, key_size,\n\t\t\t\t\t\t  params, param_count))"];
"1000318" [label="(Call,res = crypto_rng_read((void *)(key + 1), byte_size))"];
"1000328" [label="(Call,res != TEE_SUCCESS)"];
"1000188" [label="(Call,key_size % type_props->quanta != 0)"];
"1000352" [label="(Call,tee_svc_obj_generate_key_rsa(o, type_props, key_size,\n\t\t\t\t\t\t   params, param_count))"];
"1000334" [label="(Identifier,key)"];
"1000207" [label="(Identifier,key_size)"];
"1000308" -> "1000307"  [label="AST: "];
"1000308" -> "1000310"  [label="CFG: "];
"1000309" -> "1000308"  [label="AST: "];
"1000310" -> "1000308"  [label="AST: "];
"1000315" -> "1000308"  [label="CFG: "];
"1000319" -> "1000308"  [label="CFG: "];
"1000308" -> "1000436"  [label="DDG: key->alloc_size"];
"1000308" -> "1000436"  [label="DDG: byte_size"];
"1000308" -> "1000436"  [label="DDG: byte_size > key->alloc_size"];
"1000291" -> "1000308"  [label="DDG: byte_size"];
"1000269" -> "1000308"  [label="DDG: byte_size"];
"1000308" -> "1000320"  [label="DDG: byte_size"];
"1000291" -> "1000290"  [label="AST: "];
"1000291" -> "1000293"  [label="CFG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000293" -> "1000291"  [label="AST: "];
"1000301" -> "1000291"  [label="CFG: "];
"1000291" -> "1000436"  [label="DDG: (key_size + key_size / 7) / 8"];
"1000293" -> "1000291"  [label="DDG: key_size + key_size / 7"];
"1000293" -> "1000291"  [label="DDG: 8"];
"1000293" -> "1000299"  [label="CFG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000299" -> "1000293"  [label="AST: "];
"1000293" -> "1000436"  [label="DDG: key_size + key_size / 7"];
"1000296" -> "1000293"  [label="DDG: key_size"];
"1000296" -> "1000293"  [label="DDG: 7"];
"1000108" -> "1000293"  [label="DDG: key_size"];
"1000296" -> "1000294"  [label="AST: "];
"1000296" -> "1000298"  [label="CFG: "];
"1000297" -> "1000296"  [label="AST: "];
"1000298" -> "1000296"  [label="AST: "];
"1000294" -> "1000296"  [label="CFG: "];
"1000296" -> "1000294"  [label="DDG: key_size"];
"1000296" -> "1000294"  [label="DDG: 7"];
"1000271" -> "1000296"  [label="DDG: key_size"];
"1000108" -> "1000296"  [label="DDG: key_size"];
"1000296" -> "1000420"  [label="DDG: key_size"];
"1000271" -> "1000269"  [label="AST: "];
"1000271" -> "1000273"  [label="CFG: "];
"1000272" -> "1000271"  [label="AST: "];
"1000273" -> "1000271"  [label="AST: "];
"1000269" -> "1000271"  [label="CFG: "];
"1000271" -> "1000436"  [label="DDG: key_size"];
"1000271" -> "1000269"  [label="DDG: key_size"];
"1000271" -> "1000269"  [label="DDG: 8"];
"1000206" -> "1000271"  [label="DDG: key_size"];
"1000108" -> "1000271"  [label="DDG: key_size"];
"1000271" -> "1000420"  [label="DDG: key_size"];
"1000206" -> "1000205"  [label="AST: "];
"1000206" -> "1000208"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000206"  [label="AST: "];
"1000212" -> "1000206"  [label="CFG: "];
"1000214" -> "1000206"  [label="CFG: "];
"1000206" -> "1000436"  [label="DDG: key_size > type_props->max_size"];
"1000206" -> "1000436"  [label="DDG: type_props->max_size"];
"1000206" -> "1000436"  [label="DDG: key_size"];
"1000198" -> "1000206"  [label="DDG: key_size"];
"1000108" -> "1000206"  [label="DDG: key_size"];
"1000206" -> "1000352"  [label="DDG: key_size"];
"1000206" -> "1000367"  [label="DDG: key_size"];
"1000206" -> "1000380"  [label="DDG: key_size"];
"1000206" -> "1000396"  [label="DDG: key_size"];
"1000206" -> "1000420"  [label="DDG: key_size"];
"1000198" -> "1000197"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000204" -> "1000198"  [label="CFG: "];
"1000207" -> "1000198"  [label="CFG: "];
"1000198" -> "1000436"  [label="DDG: type_props->min_size"];
"1000198" -> "1000436"  [label="DDG: key_size"];
"1000198" -> "1000436"  [label="DDG: key_size < type_props->min_size"];
"1000189" -> "1000198"  [label="DDG: key_size"];
"1000108" -> "1000198"  [label="DDG: key_size"];
"1000189" -> "1000188"  [label="AST: "];
"1000189" -> "1000191"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000191" -> "1000189"  [label="AST: "];
"1000194" -> "1000189"  [label="CFG: "];
"1000189" -> "1000436"  [label="DDG: key_size"];
"1000189" -> "1000436"  [label="DDG: type_props->quanta"];
"1000189" -> "1000188"  [label="DDG: key_size"];
"1000189" -> "1000188"  [label="DDG: type_props->quanta"];
"1000108" -> "1000189"  [label="DDG: key_size"];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000436"  [label="DDG: key_size"];
"1000108" -> "1000294"  [label="DDG: key_size"];
"1000108" -> "1000352"  [label="DDG: key_size"];
"1000108" -> "1000367"  [label="DDG: key_size"];
"1000108" -> "1000380"  [label="DDG: key_size"];
"1000108" -> "1000396"  [label="DDG: key_size"];
"1000108" -> "1000420"  [label="DDG: key_size"];
"1000269" -> "1000258"  [label="AST: "];
"1000270" -> "1000269"  [label="AST: "];
"1000279" -> "1000269"  [label="CFG: "];
"1000269" -> "1000436"  [label="DDG: key_size / 8"];
"1000320" -> "1000318"  [label="AST: "];
"1000320" -> "1000326"  [label="CFG: "];
"1000321" -> "1000320"  [label="AST: "];
"1000326" -> "1000320"  [label="AST: "];
"1000318" -> "1000320"  [label="CFG: "];
"1000320" -> "1000436"  [label="DDG: byte_size"];
"1000320" -> "1000436"  [label="DDG: (void *)(key + 1)"];
"1000320" -> "1000318"  [label="DDG: (void *)(key + 1)"];
"1000320" -> "1000318"  [label="DDG: byte_size"];
"1000321" -> "1000320"  [label="DDG: key + 1"];
"1000320" -> "1000332"  [label="DDG: byte_size"];
"1000318" -> "1000258"  [label="AST: "];
"1000319" -> "1000318"  [label="AST: "];
"1000329" -> "1000318"  [label="CFG: "];
"1000318" -> "1000436"  [label="DDG: crypto_rng_read((void *)(key + 1), byte_size)"];
"1000318" -> "1000328"  [label="DDG: res"];
"1000328" -> "1000327"  [label="AST: "];
"1000328" -> "1000330"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000330" -> "1000328"  [label="AST: "];
"1000331" -> "1000328"  [label="CFG: "];
"1000334" -> "1000328"  [label="CFG: "];
"1000328" -> "1000436"  [label="DDG: res != TEE_SUCCESS"];
"1000248" -> "1000328"  [label="DDG: TEE_SUCCESS"];
"1000328" -> "1000416"  [label="DDG: res"];
"1000328" -> "1000416"  [label="DDG: TEE_SUCCESS"];
"1000416" -> "1000415"  [label="AST: "];
"1000416" -> "1000418"  [label="CFG: "];
"1000417" -> "1000416"  [label="AST: "];
"1000418" -> "1000416"  [label="AST: "];
"1000423" -> "1000416"  [label="CFG: "];
"1000435" -> "1000416"  [label="CFG: "];
"1000416" -> "1000436"  [label="DDG: res == TEE_SUCCESS"];
"1000416" -> "1000436"  [label="DDG: TEE_SUCCESS"];
"1000416" -> "1000436"  [label="DDG: res"];
"1000403" -> "1000416"  [label="DDG: res"];
"1000403" -> "1000416"  [label="DDG: TEE_SUCCESS"];
"1000387" -> "1000416"  [label="DDG: res"];
"1000387" -> "1000416"  [label="DDG: TEE_SUCCESS"];
"1000372" -> "1000416"  [label="DDG: res"];
"1000372" -> "1000416"  [label="DDG: TEE_SUCCESS"];
"1000409" -> "1000416"  [label="DDG: res"];
"1000359" -> "1000416"  [label="DDG: res"];
"1000359" -> "1000416"  [label="DDG: TEE_SUCCESS"];
"1000248" -> "1000416"  [label="DDG: res"];
"1000248" -> "1000416"  [label="DDG: TEE_SUCCESS"];
"1000236" -> "1000416"  [label="DDG: res"];
"1000236" -> "1000416"  [label="DDG: TEE_SUCCESS"];
"1000314" -> "1000416"  [label="DDG: res"];
"1000416" -> "1000434"  [label="DDG: res"];
"1000434" -> "1000111"  [label="AST: "];
"1000434" -> "1000435"  [label="CFG: "];
"1000435" -> "1000434"  [label="AST: "];
"1000436" -> "1000434"  [label="CFG: "];
"1000434" -> "1000436"  [label="DDG: <RET>"];
"1000435" -> "1000434"  [label="DDG: res"];
"1000332" -> "1000258"  [label="AST: "];
"1000332" -> "1000336"  [label="CFG: "];
"1000333" -> "1000332"  [label="AST: "];
"1000336" -> "1000332"  [label="AST: "];
"1000339" -> "1000332"  [label="CFG: "];
"1000332" -> "1000436"  [label="DDG: key->key_size"];
"1000332" -> "1000436"  [label="DDG: byte_size"];
}
