digraph "0_Android_22f824feac43d5758f9a70b77f2aca840ba62c3b@pointer" {
"1000257" [label="(Call,*subSamples =\n new CryptoPlugin::SubSample[numSubSamples])"];
"1000259" [label="(Call,new CryptoPlugin::SubSample[numSubSamples])"];
"1000261" [label="(Call,data.read(\n                    subSamples,\n sizeof(CryptoPlugin::SubSample) * numSubSamples))"];
"1000308" [label="(Call,&ss = subSamples[i])"];
"1000316" [label="(Call,SIZE_MAX - ss.mNumBytesOfEncryptedData)"];
"1000314" [label="(Call,sumSubsampleSizes <= SIZE_MAX - ss.mNumBytesOfEncryptedData)"];
"1000322" [label="(Call,sumSubsampleSizes += ss.mNumBytesOfEncryptedData)"];
"1000333" [label="(Call,sumSubsampleSizes <= SIZE_MAX - ss.mNumBytesOfClearData)"];
"1000341" [label="(Call,sumSubsampleSizes += ss.mNumBytesOfClearData)"];
"1000354" [label="(Call,sumSubsampleSizes != totalSize)"];
"1000352" [label="(Call,overflow || sumSubsampleSizes != totalSize)"];
"1000364" [label="(Call,totalSize > sharedBuffer->size())"];
"1000378" [label="(Call,sharedBuffer->size() - totalSize)"];
"1000374" [label="(Call,(size_t)offset > sharedBuffer->size() - totalSize)"];
"1000424" [label="(Call,static_cast<ssize_t>(totalSize))"];
"1000422" [label="(Call,CHECK_LE(result, static_cast<ssize_t>(totalSize)))"];
"1000427" [label="(Call,reply->write(dstPtr, result))"];
"1000430" [label="(Call,free(dstPtr))"];
"1000335" [label="(Call,SIZE_MAX - ss.mNumBytesOfClearData)"];
"1000390" [label="(Call,decrypt(\n                    secure,\n                    key,\n                    iv,\n                    mode,\n                    sharedBuffer, offset,\n                    subSamples, numSubSamples,\n                    secure ? secureBufferId : dstPtr,\n &errorDetailMsg))"];
"1000388" [label="(Call,result = decrypt(\n                    secure,\n                    key,\n                    iv,\n                    mode,\n                    sharedBuffer, offset,\n                    subSamples, numSubSamples,\n                    secure ? secureBufferId : dstPtr,\n &errorDetailMsg))"];
"1000405" [label="(Call,reply->writeInt32(result))"];
"1000408" [label="(Call,isCryptoError(result))"];
"1000418" [label="(Call,result >= 0)"];
"1000414" [label="(Call,!secure)"];
"1000435" [label="(Call,delete[] subSamples)"];
"1000258" [label="(Identifier,subSamples)"];
"1000483" [label="(MethodReturn,status_t)"];
"1000393" [label="(Identifier,iv)"];
"1000412" [label="(Call,errorDetailMsg.c_str())"];
"1000397" [label="(Identifier,subSamples)"];
"1000424" [label="(Call,static_cast<ssize_t>(totalSize))"];
"1000415" [label="(Identifier,secure)"];
"1000403" [label="(Call,&errorDetailMsg)"];
"1000364" [label="(Call,totalSize > sharedBuffer->size())"];
"1000408" [label="(Call,isCryptoError(result))"];
"1000260" [label="(Identifier,CryptoPlugin::SubSample)"];
"1000378" [label="(Call,sharedBuffer->size() - totalSize)"];
"1000340" [label="(Block,)"];
"1000348" [label="(Call,overflow = true)"];
"1000413" [label="(ControlStructure,if (!secure))"];
"1000263" [label="(Call,sizeof(CryptoPlugin::SubSample) * numSubSamples)"];
"1000313" [label="(ControlStructure,if (sumSubsampleSizes <= SIZE_MAX - ss.mNumBytesOfEncryptedData))"];
"1000316" [label="(Call,SIZE_MAX - ss.mNumBytesOfEncryptedData)"];
"1000380" [label="(Identifier,totalSize)"];
"1000356" [label="(Identifier,totalSize)"];
"1000221" [label="(Call,mode = (CryptoPlugin::Mode)data.readInt32())"];
"1000209" [label="(Block,)"];
"1000261" [label="(Call,data.read(\n                    subSamples,\n sizeof(CryptoPlugin::SubSample) * numSubSamples))"];
"1000363" [label="(ControlStructure,if (totalSize > sharedBuffer->size()))"];
"1000368" [label="(Call,result = -EINVAL)"];
"1000330" [label="(Identifier,overflow)"];
"1000392" [label="(Identifier,key)"];
"1000426" [label="(Identifier,totalSize)"];
"1000435" [label="(Call,delete[] subSamples)"];
"1000405" [label="(Call,reply->writeInt32(result))"];
"1000215" [label="(Call,secure = data.readInt32() != 0)"];
"1000322" [label="(Call,sumSubsampleSizes += ss.mNumBytesOfEncryptedData)"];
"1000323" [label="(Identifier,sumSubsampleSizes)"];
"1000433" [label="(Identifier,dstPtr)"];
"1000355" [label="(Identifier,sumSubsampleSizes)"];
"1000431" [label="(Identifier,dstPtr)"];
"1000365" [label="(Identifier,totalSize)"];
"1000422" [label="(Call,CHECK_LE(result, static_cast<ssize_t>(totalSize)))"];
"1000406" [label="(Identifier,result)"];
"1000414" [label="(Call,!secure)"];
"1000358" [label="(Call,result = -EINVAL)"];
"1000293" [label="(Call,overflow = false)"];
"1000379" [label="(Call,sharedBuffer->size())"];
"1000429" [label="(Identifier,result)"];
"1000310" [label="(Call,subSamples[i])"];
"1000416" [label="(Block,)"];
"1000375" [label="(Call,(size_t)offset)"];
"1000388" [label="(Call,result = decrypt(\n                    secure,\n                    key,\n                    iv,\n                    mode,\n                    sharedBuffer, offset,\n                    subSamples, numSubSamples,\n                    secure ? secureBufferId : dstPtr,\n &errorDetailMsg))"];
"1000428" [label="(Identifier,dstPtr)"];
"1000227" [label="(Call,data.read(key, sizeof(key)))"];
"1000383" [label="(Identifier,result)"];
"1000333" [label="(Call,sumSubsampleSizes <= SIZE_MAX - ss.mNumBytesOfClearData)"];
"1000387" [label="(Block,)"];
"1000317" [label="(Identifier,SIZE_MAX)"];
"1000306" [label="(Block,)"];
"1000270" [label="(Identifier,secure)"];
"1000341" [label="(Call,sumSubsampleSizes += ss.mNumBytesOfClearData)"];
"1000353" [label="(Identifier,overflow)"];
"1000321" [label="(Block,)"];
"1000237" [label="(Call,totalSize = data.readInt32())"];
"1000390" [label="(Call,decrypt(\n                    secure,\n                    key,\n                    iv,\n                    mode,\n                    sharedBuffer, offset,\n                    subSamples, numSubSamples,\n                    secure ? secureBufferId : dstPtr,\n &errorDetailMsg))"];
"1000399" [label="(Call,secure ? secureBufferId : dstPtr)"];
"1000382" [label="(Call,result = -EINVAL)"];
"1000389" [label="(Identifier,result)"];
"1000283" [label="(Call,calloc(1, totalSize))"];
"1000409" [label="(Identifier,result)"];
"1000352" [label="(Call,overflow || sumSubsampleSizes != totalSize)"];
"1000427" [label="(Call,reply->write(dstPtr, result))"];
"1000436" [label="(Identifier,subSamples)"];
"1000289" [label="(Call,sumSubsampleSizes = 0)"];
"1000351" [label="(ControlStructure,if (overflow || sumSubsampleSizes != totalSize))"];
"1000335" [label="(Call,SIZE_MAX - ss.mNumBytesOfClearData)"];
"1000407" [label="(ControlStructure,if (isCryptoError(result)))"];
"1000359" [label="(Identifier,result)"];
"1000395" [label="(Identifier,sharedBuffer)"];
"1000334" [label="(Identifier,sumSubsampleSizes)"];
"1000232" [label="(Call,data.read(iv, sizeof(iv)))"];
"1000343" [label="(Call,ss.mNumBytesOfClearData)"];
"1000324" [label="(Call,ss.mNumBytesOfEncryptedData)"];
"1000262" [label="(Identifier,subSamples)"];
"1000420" [label="(Literal,0)"];
"1000418" [label="(Call,result >= 0)"];
"1000430" [label="(Call,free(dstPtr))"];
"1000354" [label="(Call,sumSubsampleSizes != totalSize)"];
"1000342" [label="(Identifier,sumSubsampleSizes)"];
"1000315" [label="(Identifier,sumSubsampleSizes)"];
"1000369" [label="(Identifier,result)"];
"1000366" [label="(Call,sharedBuffer->size())"];
"1000394" [label="(Identifier,mode)"];
"1000305" [label="(Identifier,i)"];
"1000318" [label="(Call,ss.mNumBytesOfEncryptedData)"];
"1000419" [label="(Identifier,result)"];
"1000257" [label="(Call,*subSamples =\n new CryptoPlugin::SubSample[numSubSamples])"];
"1000272" [label="(Call,secureBufferId = reinterpret_cast<void *>(static_cast<uintptr_t>(data.readInt64())))"];
"1000421" [label="(Block,)"];
"1000417" [label="(ControlStructure,if (result >= 0))"];
"1000259" [label="(Call,new CryptoPlugin::SubSample[numSubSamples])"];
"1000329" [label="(Call,overflow = true)"];
"1000398" [label="(Identifier,numSubSamples)"];
"1000336" [label="(Identifier,SIZE_MAX)"];
"1000438" [label="(Identifier,subSamples)"];
"1000281" [label="(Call,dstPtr = calloc(1, totalSize))"];
"1000241" [label="(Call,sharedBuffer =\n                interface_cast<IMemory>(data.readStrongBinder()))"];
"1000309" [label="(Identifier,ss)"];
"1000423" [label="(Identifier,result)"];
"1000391" [label="(Identifier,secure)"];
"1000301" [label="(Call,i < numSubSamples)"];
"1000349" [label="(Identifier,overflow)"];
"1000314" [label="(Call,sumSubsampleSizes <= SIZE_MAX - ss.mNumBytesOfEncryptedData)"];
"1000374" [label="(Call,(size_t)offset > sharedBuffer->size() - totalSize)"];
"1000337" [label="(Call,ss.mNumBytesOfClearData)"];
"1000373" [label="(ControlStructure,if ((size_t)offset > sharedBuffer->size() - totalSize))"];
"1000332" [label="(ControlStructure,if (sumSubsampleSizes <= SIZE_MAX - ss.mNumBytesOfClearData))"];
"1000308" [label="(Call,&ss = subSamples[i])"];
"1000396" [label="(Identifier,offset)"];
"1000257" -> "1000209"  [label="AST: "];
"1000257" -> "1000259"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000259" -> "1000257"  [label="AST: "];
"1000262" -> "1000257"  [label="CFG: "];
"1000257" -> "1000483"  [label="DDG: new CryptoPlugin::SubSample[numSubSamples]"];
"1000259" -> "1000257"  [label="DDG: CryptoPlugin::SubSample"];
"1000257" -> "1000261"  [label="DDG: subSamples"];
"1000259" -> "1000260"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000209"  [label="AST: "];
"1000261" -> "1000263"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000263" -> "1000261"  [label="AST: "];
"1000270" -> "1000261"  [label="CFG: "];
"1000261" -> "1000483"  [label="DDG: sizeof(CryptoPlugin::SubSample) * numSubSamples"];
"1000261" -> "1000483"  [label="DDG: data.read(\n                    subSamples,\n sizeof(CryptoPlugin::SubSample) * numSubSamples)"];
"1000263" -> "1000261"  [label="DDG: numSubSamples"];
"1000261" -> "1000308"  [label="DDG: subSamples"];
"1000261" -> "1000390"  [label="DDG: subSamples"];
"1000261" -> "1000435"  [label="DDG: subSamples"];
"1000308" -> "1000306"  [label="AST: "];
"1000308" -> "1000310"  [label="CFG: "];
"1000309" -> "1000308"  [label="AST: "];
"1000310" -> "1000308"  [label="AST: "];
"1000315" -> "1000308"  [label="CFG: "];
"1000308" -> "1000483"  [label="DDG: subSamples[i]"];
"1000308" -> "1000483"  [label="DDG: ss"];
"1000308" -> "1000316"  [label="DDG: ss"];
"1000308" -> "1000322"  [label="DDG: ss"];
"1000308" -> "1000335"  [label="DDG: ss"];
"1000308" -> "1000341"  [label="DDG: ss"];
"1000316" -> "1000314"  [label="AST: "];
"1000316" -> "1000318"  [label="CFG: "];
"1000317" -> "1000316"  [label="AST: "];
"1000318" -> "1000316"  [label="AST: "];
"1000314" -> "1000316"  [label="CFG: "];
"1000316" -> "1000483"  [label="DDG: ss.mNumBytesOfEncryptedData"];
"1000316" -> "1000314"  [label="DDG: SIZE_MAX"];
"1000316" -> "1000314"  [label="DDG: ss.mNumBytesOfEncryptedData"];
"1000335" -> "1000316"  [label="DDG: SIZE_MAX"];
"1000316" -> "1000322"  [label="DDG: ss.mNumBytesOfEncryptedData"];
"1000316" -> "1000335"  [label="DDG: SIZE_MAX"];
"1000314" -> "1000313"  [label="AST: "];
"1000315" -> "1000314"  [label="AST: "];
"1000323" -> "1000314"  [label="CFG: "];
"1000330" -> "1000314"  [label="CFG: "];
"1000314" -> "1000483"  [label="DDG: SIZE_MAX - ss.mNumBytesOfEncryptedData"];
"1000314" -> "1000483"  [label="DDG: sumSubsampleSizes <= SIZE_MAX - ss.mNumBytesOfEncryptedData"];
"1000333" -> "1000314"  [label="DDG: sumSubsampleSizes"];
"1000289" -> "1000314"  [label="DDG: sumSubsampleSizes"];
"1000341" -> "1000314"  [label="DDG: sumSubsampleSizes"];
"1000314" -> "1000322"  [label="DDG: sumSubsampleSizes"];
"1000314" -> "1000333"  [label="DDG: sumSubsampleSizes"];
"1000322" -> "1000321"  [label="AST: "];
"1000322" -> "1000324"  [label="CFG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000324" -> "1000322"  [label="AST: "];
"1000334" -> "1000322"  [label="CFG: "];
"1000322" -> "1000483"  [label="DDG: ss.mNumBytesOfEncryptedData"];
"1000322" -> "1000333"  [label="DDG: sumSubsampleSizes"];
"1000333" -> "1000332"  [label="AST: "];
"1000333" -> "1000335"  [label="CFG: "];
"1000334" -> "1000333"  [label="AST: "];
"1000335" -> "1000333"  [label="AST: "];
"1000342" -> "1000333"  [label="CFG: "];
"1000349" -> "1000333"  [label="CFG: "];
"1000333" -> "1000483"  [label="DDG: sumSubsampleSizes"];
"1000333" -> "1000483"  [label="DDG: sumSubsampleSizes <= SIZE_MAX - ss.mNumBytesOfClearData"];
"1000333" -> "1000483"  [label="DDG: SIZE_MAX - ss.mNumBytesOfClearData"];
"1000335" -> "1000333"  [label="DDG: SIZE_MAX"];
"1000335" -> "1000333"  [label="DDG: ss.mNumBytesOfClearData"];
"1000333" -> "1000341"  [label="DDG: sumSubsampleSizes"];
"1000333" -> "1000354"  [label="DDG: sumSubsampleSizes"];
"1000341" -> "1000340"  [label="AST: "];
"1000341" -> "1000343"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="AST: "];
"1000305" -> "1000341"  [label="CFG: "];
"1000341" -> "1000483"  [label="DDG: ss.mNumBytesOfClearData"];
"1000341" -> "1000483"  [label="DDG: sumSubsampleSizes"];
"1000335" -> "1000341"  [label="DDG: ss.mNumBytesOfClearData"];
"1000341" -> "1000354"  [label="DDG: sumSubsampleSizes"];
"1000354" -> "1000352"  [label="AST: "];
"1000354" -> "1000356"  [label="CFG: "];
"1000355" -> "1000354"  [label="AST: "];
"1000356" -> "1000354"  [label="AST: "];
"1000352" -> "1000354"  [label="CFG: "];
"1000354" -> "1000483"  [label="DDG: totalSize"];
"1000354" -> "1000483"  [label="DDG: sumSubsampleSizes"];
"1000354" -> "1000352"  [label="DDG: sumSubsampleSizes"];
"1000354" -> "1000352"  [label="DDG: totalSize"];
"1000289" -> "1000354"  [label="DDG: sumSubsampleSizes"];
"1000283" -> "1000354"  [label="DDG: totalSize"];
"1000237" -> "1000354"  [label="DDG: totalSize"];
"1000354" -> "1000364"  [label="DDG: totalSize"];
"1000354" -> "1000424"  [label="DDG: totalSize"];
"1000352" -> "1000351"  [label="AST: "];
"1000352" -> "1000353"  [label="CFG: "];
"1000353" -> "1000352"  [label="AST: "];
"1000359" -> "1000352"  [label="CFG: "];
"1000365" -> "1000352"  [label="CFG: "];
"1000352" -> "1000483"  [label="DDG: overflow"];
"1000352" -> "1000483"  [label="DDG: overflow || sumSubsampleSizes != totalSize"];
"1000352" -> "1000483"  [label="DDG: sumSubsampleSizes != totalSize"];
"1000348" -> "1000352"  [label="DDG: overflow"];
"1000293" -> "1000352"  [label="DDG: overflow"];
"1000329" -> "1000352"  [label="DDG: overflow"];
"1000364" -> "1000363"  [label="AST: "];
"1000364" -> "1000366"  [label="CFG: "];
"1000365" -> "1000364"  [label="AST: "];
"1000366" -> "1000364"  [label="AST: "];
"1000369" -> "1000364"  [label="CFG: "];
"1000376" -> "1000364"  [label="CFG: "];
"1000364" -> "1000483"  [label="DDG: totalSize"];
"1000364" -> "1000483"  [label="DDG: totalSize > sharedBuffer->size()"];
"1000364" -> "1000483"  [label="DDG: sharedBuffer->size()"];
"1000283" -> "1000364"  [label="DDG: totalSize"];
"1000237" -> "1000364"  [label="DDG: totalSize"];
"1000364" -> "1000378"  [label="DDG: totalSize"];
"1000364" -> "1000424"  [label="DDG: totalSize"];
"1000378" -> "1000374"  [label="AST: "];
"1000378" -> "1000380"  [label="CFG: "];
"1000379" -> "1000378"  [label="AST: "];
"1000380" -> "1000378"  [label="AST: "];
"1000374" -> "1000378"  [label="CFG: "];
"1000378" -> "1000483"  [label="DDG: totalSize"];
"1000378" -> "1000483"  [label="DDG: sharedBuffer->size()"];
"1000378" -> "1000374"  [label="DDG: sharedBuffer->size()"];
"1000378" -> "1000374"  [label="DDG: totalSize"];
"1000378" -> "1000424"  [label="DDG: totalSize"];
"1000374" -> "1000373"  [label="AST: "];
"1000375" -> "1000374"  [label="AST: "];
"1000383" -> "1000374"  [label="CFG: "];
"1000389" -> "1000374"  [label="CFG: "];
"1000374" -> "1000483"  [label="DDG: (size_t)offset"];
"1000374" -> "1000483"  [label="DDG: sharedBuffer->size() - totalSize"];
"1000374" -> "1000483"  [label="DDG: (size_t)offset > sharedBuffer->size() - totalSize"];
"1000375" -> "1000374"  [label="DDG: offset"];
"1000424" -> "1000422"  [label="AST: "];
"1000424" -> "1000426"  [label="CFG: "];
"1000425" -> "1000424"  [label="AST: "];
"1000426" -> "1000424"  [label="AST: "];
"1000422" -> "1000424"  [label="CFG: "];
"1000424" -> "1000483"  [label="DDG: totalSize"];
"1000424" -> "1000422"  [label="DDG: totalSize"];
"1000283" -> "1000424"  [label="DDG: totalSize"];
"1000237" -> "1000424"  [label="DDG: totalSize"];
"1000422" -> "1000421"  [label="AST: "];
"1000423" -> "1000422"  [label="AST: "];
"1000428" -> "1000422"  [label="CFG: "];
"1000422" -> "1000483"  [label="DDG: CHECK_LE(result, static_cast<ssize_t>(totalSize))"];
"1000422" -> "1000483"  [label="DDG: static_cast<ssize_t>(totalSize)"];
"1000418" -> "1000422"  [label="DDG: result"];
"1000422" -> "1000427"  [label="DDG: result"];
"1000427" -> "1000421"  [label="AST: "];
"1000427" -> "1000429"  [label="CFG: "];
"1000428" -> "1000427"  [label="AST: "];
"1000429" -> "1000427"  [label="AST: "];
"1000431" -> "1000427"  [label="CFG: "];
"1000427" -> "1000483"  [label="DDG: reply->write(dstPtr, result)"];
"1000427" -> "1000483"  [label="DDG: result"];
"1000281" -> "1000427"  [label="DDG: dstPtr"];
"1000427" -> "1000430"  [label="DDG: dstPtr"];
"1000430" -> "1000416"  [label="AST: "];
"1000430" -> "1000431"  [label="CFG: "];
"1000431" -> "1000430"  [label="AST: "];
"1000433" -> "1000430"  [label="CFG: "];
"1000281" -> "1000430"  [label="DDG: dstPtr"];
"1000335" -> "1000337"  [label="CFG: "];
"1000336" -> "1000335"  [label="AST: "];
"1000337" -> "1000335"  [label="AST: "];
"1000335" -> "1000483"  [label="DDG: SIZE_MAX"];
"1000335" -> "1000483"  [label="DDG: ss.mNumBytesOfClearData"];
"1000390" -> "1000388"  [label="AST: "];
"1000390" -> "1000403"  [label="CFG: "];
"1000391" -> "1000390"  [label="AST: "];
"1000392" -> "1000390"  [label="AST: "];
"1000393" -> "1000390"  [label="AST: "];
"1000394" -> "1000390"  [label="AST: "];
"1000395" -> "1000390"  [label="AST: "];
"1000396" -> "1000390"  [label="AST: "];
"1000397" -> "1000390"  [label="AST: "];
"1000398" -> "1000390"  [label="AST: "];
"1000399" -> "1000390"  [label="AST: "];
"1000403" -> "1000390"  [label="AST: "];
"1000388" -> "1000390"  [label="CFG: "];
"1000390" -> "1000483"  [label="DDG: offset"];
"1000390" -> "1000483"  [label="DDG: mode"];
"1000390" -> "1000483"  [label="DDG: numSubSamples"];
"1000390" -> "1000483"  [label="DDG: key"];
"1000390" -> "1000483"  [label="DDG: iv"];
"1000390" -> "1000483"  [label="DDG: &errorDetailMsg"];
"1000390" -> "1000483"  [label="DDG: secure ? secureBufferId : dstPtr"];
"1000390" -> "1000483"  [label="DDG: sharedBuffer"];
"1000390" -> "1000388"  [label="DDG: sharedBuffer"];
"1000390" -> "1000388"  [label="DDG: iv"];
"1000390" -> "1000388"  [label="DDG: numSubSamples"];
"1000390" -> "1000388"  [label="DDG: secure ? secureBufferId : dstPtr"];
"1000390" -> "1000388"  [label="DDG: mode"];
"1000390" -> "1000388"  [label="DDG: &errorDetailMsg"];
"1000390" -> "1000388"  [label="DDG: offset"];
"1000390" -> "1000388"  [label="DDG: subSamples"];
"1000390" -> "1000388"  [label="DDG: secure"];
"1000390" -> "1000388"  [label="DDG: key"];
"1000227" -> "1000390"  [label="DDG: key"];
"1000232" -> "1000390"  [label="DDG: iv"];
"1000221" -> "1000390"  [label="DDG: mode"];
"1000241" -> "1000390"  [label="DDG: sharedBuffer"];
"1000375" -> "1000390"  [label="DDG: offset"];
"1000301" -> "1000390"  [label="DDG: numSubSamples"];
"1000272" -> "1000390"  [label="DDG: secureBufferId"];
"1000281" -> "1000390"  [label="DDG: dstPtr"];
"1000390" -> "1000414"  [label="DDG: secure"];
"1000390" -> "1000435"  [label="DDG: subSamples"];
"1000388" -> "1000387"  [label="AST: "];
"1000389" -> "1000388"  [label="AST: "];
"1000406" -> "1000388"  [label="CFG: "];
"1000388" -> "1000483"  [label="DDG: decrypt(\n                    secure,\n                    key,\n                    iv,\n                    mode,\n                    sharedBuffer, offset,\n                    subSamples, numSubSamples,\n                    secure ? secureBufferId : dstPtr,\n &errorDetailMsg)"];
"1000388" -> "1000405"  [label="DDG: result"];
"1000405" -> "1000209"  [label="AST: "];
"1000405" -> "1000406"  [label="CFG: "];
"1000406" -> "1000405"  [label="AST: "];
"1000409" -> "1000405"  [label="CFG: "];
"1000405" -> "1000483"  [label="DDG: reply->writeInt32(result)"];
"1000368" -> "1000405"  [label="DDG: result"];
"1000382" -> "1000405"  [label="DDG: result"];
"1000358" -> "1000405"  [label="DDG: result"];
"1000405" -> "1000408"  [label="DDG: result"];
"1000408" -> "1000407"  [label="AST: "];
"1000408" -> "1000409"  [label="CFG: "];
"1000409" -> "1000408"  [label="AST: "];
"1000412" -> "1000408"  [label="CFG: "];
"1000415" -> "1000408"  [label="CFG: "];
"1000408" -> "1000483"  [label="DDG: result"];
"1000408" -> "1000483"  [label="DDG: isCryptoError(result)"];
"1000408" -> "1000418"  [label="DDG: result"];
"1000418" -> "1000417"  [label="AST: "];
"1000418" -> "1000420"  [label="CFG: "];
"1000419" -> "1000418"  [label="AST: "];
"1000420" -> "1000418"  [label="AST: "];
"1000423" -> "1000418"  [label="CFG: "];
"1000431" -> "1000418"  [label="CFG: "];
"1000418" -> "1000483"  [label="DDG: result >= 0"];
"1000418" -> "1000483"  [label="DDG: result"];
"1000414" -> "1000413"  [label="AST: "];
"1000414" -> "1000415"  [label="CFG: "];
"1000415" -> "1000414"  [label="AST: "];
"1000419" -> "1000414"  [label="CFG: "];
"1000436" -> "1000414"  [label="CFG: "];
"1000414" -> "1000483"  [label="DDG: !secure"];
"1000414" -> "1000483"  [label="DDG: secure"];
"1000215" -> "1000414"  [label="DDG: secure"];
"1000435" -> "1000209"  [label="AST: "];
"1000435" -> "1000436"  [label="CFG: "];
"1000436" -> "1000435"  [label="AST: "];
"1000438" -> "1000435"  [label="CFG: "];
"1000435" -> "1000483"  [label="DDG: delete[] subSamples"];
}
