digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_11@API" {
"1000821" [label="(Call,optlen < sizeof(struct ipv6_opt_hdr))"];
"1000807" [label="(Call,optlen == 0)"];
"1000152" [label="(Call,optlen >= sizeof(int))"];
"1000119" [label="(MethodParameterIn,unsigned int optlen)"];
"1000820" [label="(Call,optlen < sizeof(struct ipv6_opt_hdr) ||\n\t\t\t optlen & 0x7 || optlen > 8 * 255)"];
"1000826" [label="(Call,optlen & 0x7)"];
"1000825" [label="(Call,optlen & 0x7 || optlen > 8 * 255)"];
"1000829" [label="(Call,optlen > 8 * 255)"];
"1000861" [label="(Call,ipv6_renew_options(sk, opt, optname,\n \t\t\t\t\t (struct ipv6_opt_hdr __user *)optval,\n \t\t\t\t\t optlen))"];
"1000859" [label="(Call,opt = ipv6_renew_options(sk, opt, optname,\n \t\t\t\t\t (struct ipv6_opt_hdr __user *)optval,\n \t\t\t\t\t optlen))"];
"1000870" [label="(Call,IS_ERR(opt))"];
"1000875" [label="(Call,PTR_ERR(opt))"];
"1000873" [label="(Call,retv = PTR_ERR(opt))"];
"1002054" [label="(Return,return retv;)"];
"1000887" [label="(Call,opt && opt->srcrt)"];
"1000883" [label="(Call,optname == IPV6_RTHDR && opt && opt->srcrt)"];
"1000894" [label="(Call,*rthdr = opt->srcrt)"];
"1000926" [label="(Call,ipv6_update_options(sk, opt))"];
"1000924" [label="(Call,opt = ipv6_update_options(sk, opt))"];
"1000941" [label="(Call,txopt_put(opt))"];
"1002049" [label="(Call,release_sock(sk))"];
"1000884" [label="(Call,optname == IPV6_RTHDR)"];
"1000868" [label="(Identifier,optlen)"];
"1001471" [label="(Call,ipv6_sock_ac_drop(sk, mreq.ipv6mr_ifindex, &mreq.ipv6mr_acaddr))"];
"1000265" [label="(Call,ipv6_only_sock(sk))"];
"1000723" [label="(Call,optlen < sizeof(int))"];
"1001859" [label="(Call,optlen < sizeof(int))"];
"1000274" [label="(Call,retv = -EADDRNOTAVAIL)"];
"1001897" [label="(Call,xfrm_user_policy(sk, optname, optval, optlen))"];
"1000117" [label="(MethodParameterIn,int optname)"];
"1000822" [label="(Identifier,optlen)"];
"1000834" [label="(ControlStructure,goto e_inval;)"];
"1000864" [label="(Identifier,optname)"];
"1001407" [label="(Call,retv = ipv6_sock_mc_join(sk, mreq.ipv6mr_ifindex, &mreq.ipv6mr_multiaddr))"];
"1000509" [label="(Call,optlen < sizeof(int))"];
"1001057" [label="(Call,sock_kmalloc(sk, sizeof(*opt) + optlen, GFP_KERNEL))"];
"1001598" [label="(Call,retv = -EADDRNOTAVAIL)"];
"1000469" [label="(Call,optlen < sizeof(int))"];
"1001185" [label="(Call,retv = 0)"];
"1000120" [label="(Block,)"];
"1000449" [label="(Call,optlen < sizeof(int))"];
"1000873" [label="(Call,retv = PTR_ERR(opt))"];
"1000884" [label="(Call,optname == IPV6_RTHDR)"];
"1001487" [label="(Call,optlen < sizeof(struct group_req))"];
"1000836" [label="(Identifier,retv)"];
"1000896" [label="(Call,opt->srcrt)"];
"1000829" [label="(Call,optlen > 8 * 255)"];
"1001576" [label="(Call,retv = -EFAULT)"];
"1001421" [label="(Call,ipv6_sock_mc_drop(sk, mreq.ipv6mr_ifindex, &mreq.ipv6mr_multiaddr))"];
"1000943" [label="(ControlStructure,break;)"];
"1001089" [label="(Call,sizeof(*opt) + optlen)"];
"1000819" [label="(ControlStructure,if (optlen < sizeof(struct ipv6_opt_hdr) ||\n\t\t\t optlen & 0x7 || optlen > 8 * 255))"];
"1000187" [label="(Call,lock_sock(sk))"];
"1001759" [label="(Call,retv = -EINVAL)"];
"1001120" [label="(Call,retv = ip6_datagram_send_ctl(net, sk, &msg, &fl6, opt, &junk,\n\t\t\t\t\t     &junk, &junk))"];
"1001280" [label="(Call,retv = 0)"];
"1002049" [label="(Call,release_sock(sk))"];
"1001883" [label="(Call,retv = -EPERM)"];
"1002045" [label="(Call,retv = 0)"];
"1000921" [label="(Call,retv = 0)"];
"1000895" [label="(Identifier,rthdr)"];
"1000928" [label="(Identifier,opt)"];
"1000894" [label="(Call,*rthdr = opt->srcrt)"];
"1001853" [label="(Call,retv = 0)"];
"1000926" [label="(Call,ipv6_update_options(sk, opt))"];
"1000134" [label="(Call,retv = -ENOPROTOOPT)"];
"1000948" [label="(Call,optlen == 0)"];
"1000154" [label="(Call,sizeof(int))"];
"1000871" [label="(Identifier,opt)"];
"1001391" [label="(Call,retv = -EFAULT)"];
"1000927" [label="(Identifier,sk)"];
"1000153" [label="(Identifier,optlen)"];
"1000804" [label="(Block,)"];
"1000806" [label="(ControlStructure,if (optlen == 0))"];
"1000703" [label="(Call,optlen < sizeof(int))"];
"1001367" [label="(Call,retv = 0)"];
"1000882" [label="(ControlStructure,if (optname == IPV6_RTHDR && opt && opt->srcrt))"];
"1001387" [label="(Call,inet_sk(sk))"];
"1001094" [label="(Call,retv = -EFAULT)"];
"1000887" [label="(Call,opt && opt->srcrt)"];
"1001355" [label="(Call,retv = -ENODEV)"];
"1000776" [label="(Call,retv = 0)"];
"1000809" [label="(Literal,0)"];
"1000683" [label="(Call,optlen < sizeof(int))"];
"1001065" [label="(Call,retv = -ENOBUFS)"];
"1001313" [label="(Call,retv = 0)"];
"1001257" [label="(Call,optlen != sizeof(int))"];
"1001835" [label="(Call,optlen < sizeof(int))"];
"1000583" [label="(Call,retv = 0)"];
"1001165" [label="(Call,optlen < sizeof(int))"];
"1000179" [label="(Call,ip6_mroute_setsockopt(sk, optname, optval, optlen))"];
"1000421" [label="(Call,retv = 0)"];
"1001781" [label="(Call,ip6_ra_control(sk, val))"];
"1001687" [label="(Call,optlen < GROUP_FILTER_SIZE(0))"];
"1002052" [label="(Identifier,needs_rtnl)"];
"1000883" [label="(Call,optname == IPV6_RTHDR && opt && opt->srcrt)"];
"1001750" [label="(Call,GROUP_FILTER_SIZE(gsf->gf_numsrc) > optlen)"];
"1000569" [label="(Call,optlen < sizeof(int))"];
"1000816" [label="(Identifier,optval)"];
"1000603" [label="(Call,retv = 0)"];
"1001106" [label="(Call,msg.msg_controllen = optlen)"];
"1000874" [label="(Identifier,retv)"];
"1000677" [label="(Call,retv = 0)"];
"1001704" [label="(Call,kmalloc(optlen, GFP_KERNEL))"];
"1001040" [label="(Call,optlen == 0)"];
"1000623" [label="(Call,retv = 0)"];
"1001721" [label="(Call,copy_from_user(gsf, optval, optlen))"];
"1000483" [label="(Call,retv = 0)"];
"1000434" [label="(Call,inet_sk(sk))"];
"1000831" [label="(Call,8 * 255)"];
"1000878" [label="(Call,retv = -EINVAL)"];
"1001806" [label="(Call,retv = 0)"];
"1000825" [label="(Call,optlen & 0x7 || optlen > 8 * 255)"];
"1000159" [label="(Identifier,val)"];
"1001693" [label="(Call,optlen > sysctl_optmem_max)"];
"1002055" [label="(Identifier,retv)"];
"1000238" [label="(Call,retv = -EBUSY)"];
"1001766" [label="(Call,ip6_mc_msfilter(sk, gsf))"];
"1000863" [label="(Identifier,opt)"];
"1000697" [label="(Call,retv = 0)"];
"1000772" [label="(Call,inet_sk(sk))"];
"1001044" [label="(Call,retv = -EINVAL)"];
"1000869" [label="(ControlStructure,if (IS_ERR(opt)))"];
"1001245" [label="(Call,retv = 0)"];
"1000589" [label="(Call,optlen < sizeof(int))"];
"1001716" [label="(Call,retv = -EFAULT)"];
"1000901" [label="(Identifier,rthdr)"];
"1000765" [label="(Call,optlen < sizeof(int))"];
"1000808" [label="(Identifier,optlen)"];
"1000932" [label="(Block,)"];
"1000417" [label="(Call,sk_refcnt_debug_inc(sk))"];
"1000807" [label="(Call,optlen == 0)"];
"1002025" [label="(Call,retv = 0)"];
"1001299" [label="(Call,retv = -EINVAL)"];
"1001513" [label="(Call,retv = -EADDRNOTAVAIL)"];
"1000529" [label="(Call,optlen < sizeof(int))"];
"1000859" [label="(Call,opt = ipv6_renew_options(sk, opt, optname,\n \t\t\t\t\t (struct ipv6_opt_hdr __user *)optval,\n \t\t\t\t\t optlen))"];
"1002000" [label="(Call,retv = 0)"];
"1000463" [label="(Call,retv = 0)"];
"1000835" [label="(Call,retv = -EPERM)"];
"1000443" [label="(Call,retv = 0)"];
"1001876" [label="(Call,ipv6_flowlabel_opt(sk, optval, optlen))"];
"1001457" [label="(Call,retv = ipv6_sock_ac_join(sk, mreq.ipv6mr_ifindex, &mreq.ipv6mr_acaddr))"];
"1000888" [label="(Identifier,opt)"];
"1000151" [label="(ControlStructure,if (optlen >= sizeof(int)))"];
"1000823" [label="(Call,sizeof(struct ipv6_opt_hdr))"];
"1001674" [label="(Call,retv = ip6_mc_source(add, omode, sk, &greqs))"];
"1000115" [label="(MethodParameterIn,struct sock *sk)"];
"1001419" [label="(Call,retv = ipv6_sock_mc_drop(sk, mreq.ipv6mr_ifindex, &mreq.ipv6mr_multiaddr))"];
"1000877" [label="(ControlStructure,break;)"];
"1001326" [label="(Call,optlen < sizeof(int))"];
"1002065" [label="(MethodReturn,static int)"];
"1000629" [label="(Call,optlen < sizeof(int))"];
"1000886" [label="(Identifier,IPV6_RTHDR)"];
"1000929" [label="(JumpTarget,sticky_done:)"];
"1001492" [label="(Call,retv = -EFAULT)"];
"1002054" [label="(Return,return retv;)"];
"1001145" [label="(Call,ipv6_update_options(sk, opt))"];
"1000830" [label="(Identifier,optlen)"];
"1000970" [label="(Call,retv = -EFAULT)"];
"1001049" [label="(Call,optlen > 64*1024)"];
"1000876" [label="(Identifier,opt)"];
"1001869" [label="(Call,retv = 0)"];
"1001376" [label="(Call,optlen < sizeof(struct ipv6_mreq))"];
"1000489" [label="(Call,optlen < sizeof(int))"];
"1001532" [label="(Call,ipv6_sock_mc_join(sk, greq.gr_interface,\n\t\t\t\t\t\t &psin6->sin6_addr))"];
"1001542" [label="(Call,retv = ipv6_sock_mc_drop(sk, greq.gr_interface,\n\t\t\t\t\t\t &psin6->sin6_addr))"];
"1001459" [label="(Call,ipv6_sock_ac_join(sk, mreq.ipv6mr_ifindex, &mreq.ipv6mr_acaddr))"];
"1000922" [label="(Identifier,retv)"];
"1001829" [label="(Call,retv = 0)"];
"1000942" [label="(Identifier,opt)"];
"1002006" [label="(Call,optlen < sizeof(int))"];
"1002035" [label="(Call,retv = 0)"];
"1000872" [label="(Block,)"];
"1001676" [label="(Call,ip6_mc_source(add, omode, sk, &greqs))"];
"1001436" [label="(Call,optlen < sizeof(struct ipv6_mreq))"];
"1000955" [label="(Call,optlen < sizeof(struct in6_pktinfo))"];
"1001530" [label="(Call,retv = ipv6_sock_mc_join(sk, greq.gr_interface,\n\t\t\t\t\t\t &psin6->sin6_addr))"];
"1001198" [label="(Call,optlen < sizeof(int))"];
"1000609" [label="(Call,optlen < sizeof(int))"];
"1000862" [label="(Identifier,sk)"];
"1001224" [label="(Call,retv = 0)"];
"1001469" [label="(Call,retv = ipv6_sock_ac_drop(sk, mreq.ipv6mr_ifindex, &mreq.ipv6mr_acaddr))"];
"1001643" [label="(Call,ipv6_sock_mc_join(sk, greqs.gsr_interface,\n\t\t\t\t\t\t &psin6->sin6_addr))"];
"1000717" [label="(Call,retv = 0)"];
"1000885" [label="(Identifier,optname)"];
"1000429" [label="(Call,optlen < sizeof(int))"];
"1000549" [label="(Call,optlen < sizeof(int))"];
"1001099" [label="(Call,copy_from_user(opt+1, optval, optlen))"];
"1000643" [label="(Call,retv = 0)"];
"1000820" [label="(Call,optlen < sizeof(struct ipv6_opt_hdr) ||\n\t\t\t optlen & 0x7 || optlen > 8 * 255)"];
"1000860" [label="(Identifier,opt)"];
"1001874" [label="(Call,retv = ipv6_flowlabel_opt(sk, optval, optlen))"];
"1000503" [label="(Call,retv = 0)"];
"1000826" [label="(Call,optlen & 0x7)"];
"1001140" [label="(Call,retv = 0)"];
"1000828" [label="(Literal,0x7)"];
"1001787" [label="(Call,optlen < sizeof(int))"];
"1000563" [label="(Call,retv = 0)"];
"1001711" [label="(Call,retv = -ENOBUFS)"];
"1000796" [label="(Call,retv = 0)"];
"1000827" [label="(Identifier,optlen)"];
"1001653" [label="(Call,retv && retv != -EADDRINUSE)"];
"1001409" [label="(Call,ipv6_sock_mc_join(sk, mreq.ipv6mr_ifindex, &mreq.ipv6mr_multiaddr))"];
"1001059" [label="(Call,sizeof(*opt) + optlen)"];
"1001764" [label="(Call,retv = ip6_mc_msfilter(sk, gsf))"];
"1001774" [label="(Call,optlen < sizeof(int))"];
"1001441" [label="(Call,retv = -EFAULT)"];
"1001230" [label="(Call,optlen < sizeof(int))"];
"1000194" [label="(Call,optlen < sizeof(int))"];
"1001563" [label="(Call,optlen < sizeof(struct group_source_req))"];
"1001544" [label="(Call,ipv6_sock_mc_drop(sk, greq.gr_interface,\n\t\t\t\t\t\t &psin6->sin6_addr))"];
"1001744" [label="(Call,retv = -ENOBUFS)"];
"1000925" [label="(Identifier,opt)"];
"1000649" [label="(Call,optlen < sizeof(int))"];
"1000119" [label="(MethodParameterIn,unsigned int optlen)"];
"1000258" [label="(Call,retv = -ENOTCONN)"];
"1001122" [label="(Call,ip6_datagram_send_ctl(net, sk, &msg, &fl6, opt, &junk,\n\t\t\t\t\t     &junk, &junk))"];
"1000759" [label="(Call,retv = -EPERM)"];
"1001914" [label="(Call,optlen < sizeof(int))"];
"1001812" [label="(Call,optlen < sizeof(int))"];
"1000865" [label="(Call,(struct ipv6_opt_hdr __user *)optval)"];
"1001006" [label="(Call,retv = 0)"];
"1000821" [label="(Call,optlen < sizeof(struct ipv6_opt_hdr))"];
"1001289" [label="(Call,retv = -EADDRNOTAVAIL)"];
"1000168" [label="(Identifier,val)"];
"1000152" [label="(Call,optlen >= sizeof(int))"];
"1001919" [label="(Call,retv = -EINVAL)"];
"1001779" [label="(Call,retv = ip6_ra_control(sk, val))"];
"1001381" [label="(Call,retv = -EPROTO)"];
"1000857" [label="(Call,sock_owned_by_user(sk))"];
"1002050" [label="(Identifier,sk)"];
"1000941" [label="(Call,txopt_put(opt))"];
"1001895" [label="(Call,retv = xfrm_user_policy(sk, optname, optval, optlen))"];
"1000889" [label="(Call,opt->srcrt)"];
"1000924" [label="(Call,opt = ipv6_update_options(sk, opt))"];
"1001697" [label="(Call,retv = -ENOBUFS)"];
"1000543" [label="(Call,retv = 0)"];
"1000811" [label="(Identifier,optval)"];
"1000875" [label="(Call,PTR_ERR(opt))"];
"1000523" [label="(Call,retv = 0)"];
"1000861" [label="(Call,ipv6_renew_options(sk, opt, optname,\n \t\t\t\t\t (struct ipv6_opt_hdr __user *)optval,\n \t\t\t\t\t optlen))"];
"1000782" [label="(Call,optlen < sizeof(int))"];
"1000841" [label="(Call,optname != IPV6_RTHDR)"];
"1000737" [label="(Call,retv = 0)"];
"1000892" [label="(Block,)"];
"1000879" [label="(Identifier,retv)"];
"1000870" [label="(Call,IS_ERR(opt))"];
"1000229" [label="(Call,udp_sk(sk))"];
"1001085" [label="(Call,opt->tot_len = sizeof(*opt) + optlen)"];
"1000851" [label="(Call,opt = rcu_dereference_protected(np->opt, sock_owned_by_user(sk)))"];
"1000821" -> "1000820"  [label="AST: "];
"1000821" -> "1000823"  [label="CFG: "];
"1000822" -> "1000821"  [label="AST: "];
"1000823" -> "1000821"  [label="AST: "];
"1000827" -> "1000821"  [label="CFG: "];
"1000820" -> "1000821"  [label="CFG: "];
"1000821" -> "1002065"  [label="DDG: optlen"];
"1000821" -> "1000820"  [label="DDG: optlen"];
"1000807" -> "1000821"  [label="DDG: optlen"];
"1000119" -> "1000821"  [label="DDG: optlen"];
"1000821" -> "1000826"  [label="DDG: optlen"];
"1000821" -> "1000861"  [label="DDG: optlen"];
"1000807" -> "1000806"  [label="AST: "];
"1000807" -> "1000809"  [label="CFG: "];
"1000808" -> "1000807"  [label="AST: "];
"1000809" -> "1000807"  [label="AST: "];
"1000811" -> "1000807"  [label="CFG: "];
"1000816" -> "1000807"  [label="CFG: "];
"1000807" -> "1002065"  [label="DDG: optlen == 0"];
"1000807" -> "1002065"  [label="DDG: optlen"];
"1000152" -> "1000807"  [label="DDG: optlen"];
"1000119" -> "1000807"  [label="DDG: optlen"];
"1000807" -> "1000861"  [label="DDG: optlen"];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000154"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000159" -> "1000152"  [label="CFG: "];
"1000168" -> "1000152"  [label="CFG: "];
"1000152" -> "1002065"  [label="DDG: optlen >= sizeof(int)"];
"1000152" -> "1002065"  [label="DDG: optlen"];
"1000119" -> "1000152"  [label="DDG: optlen"];
"1000152" -> "1000179"  [label="DDG: optlen"];
"1000152" -> "1000194"  [label="DDG: optlen"];
"1000152" -> "1000429"  [label="DDG: optlen"];
"1000152" -> "1000449"  [label="DDG: optlen"];
"1000152" -> "1000469"  [label="DDG: optlen"];
"1000152" -> "1000489"  [label="DDG: optlen"];
"1000152" -> "1000509"  [label="DDG: optlen"];
"1000152" -> "1000529"  [label="DDG: optlen"];
"1000152" -> "1000549"  [label="DDG: optlen"];
"1000152" -> "1000569"  [label="DDG: optlen"];
"1000152" -> "1000589"  [label="DDG: optlen"];
"1000152" -> "1000609"  [label="DDG: optlen"];
"1000152" -> "1000629"  [label="DDG: optlen"];
"1000152" -> "1000649"  [label="DDG: optlen"];
"1000152" -> "1000683"  [label="DDG: optlen"];
"1000152" -> "1000703"  [label="DDG: optlen"];
"1000152" -> "1000723"  [label="DDG: optlen"];
"1000152" -> "1000765"  [label="DDG: optlen"];
"1000152" -> "1000782"  [label="DDG: optlen"];
"1000152" -> "1000948"  [label="DDG: optlen"];
"1000152" -> "1001040"  [label="DDG: optlen"];
"1000152" -> "1001165"  [label="DDG: optlen"];
"1000152" -> "1001198"  [label="DDG: optlen"];
"1000152" -> "1001230"  [label="DDG: optlen"];
"1000152" -> "1001257"  [label="DDG: optlen"];
"1000152" -> "1001326"  [label="DDG: optlen"];
"1000152" -> "1001376"  [label="DDG: optlen"];
"1000152" -> "1001436"  [label="DDG: optlen"];
"1000152" -> "1001487"  [label="DDG: optlen"];
"1000152" -> "1001563"  [label="DDG: optlen"];
"1000152" -> "1001687"  [label="DDG: optlen"];
"1000152" -> "1001774"  [label="DDG: optlen"];
"1000152" -> "1001787"  [label="DDG: optlen"];
"1000152" -> "1001812"  [label="DDG: optlen"];
"1000152" -> "1001835"  [label="DDG: optlen"];
"1000152" -> "1001859"  [label="DDG: optlen"];
"1000152" -> "1001876"  [label="DDG: optlen"];
"1000152" -> "1001897"  [label="DDG: optlen"];
"1000152" -> "1001914"  [label="DDG: optlen"];
"1000152" -> "1002006"  [label="DDG: optlen"];
"1000119" -> "1000114"  [label="AST: "];
"1000119" -> "1002065"  [label="DDG: optlen"];
"1000119" -> "1000179"  [label="DDG: optlen"];
"1000119" -> "1000194"  [label="DDG: optlen"];
"1000119" -> "1000429"  [label="DDG: optlen"];
"1000119" -> "1000449"  [label="DDG: optlen"];
"1000119" -> "1000469"  [label="DDG: optlen"];
"1000119" -> "1000489"  [label="DDG: optlen"];
"1000119" -> "1000509"  [label="DDG: optlen"];
"1000119" -> "1000529"  [label="DDG: optlen"];
"1000119" -> "1000549"  [label="DDG: optlen"];
"1000119" -> "1000569"  [label="DDG: optlen"];
"1000119" -> "1000589"  [label="DDG: optlen"];
"1000119" -> "1000609"  [label="DDG: optlen"];
"1000119" -> "1000629"  [label="DDG: optlen"];
"1000119" -> "1000649"  [label="DDG: optlen"];
"1000119" -> "1000683"  [label="DDG: optlen"];
"1000119" -> "1000703"  [label="DDG: optlen"];
"1000119" -> "1000723"  [label="DDG: optlen"];
"1000119" -> "1000765"  [label="DDG: optlen"];
"1000119" -> "1000782"  [label="DDG: optlen"];
"1000119" -> "1000826"  [label="DDG: optlen"];
"1000119" -> "1000829"  [label="DDG: optlen"];
"1000119" -> "1000861"  [label="DDG: optlen"];
"1000119" -> "1000948"  [label="DDG: optlen"];
"1000119" -> "1000955"  [label="DDG: optlen"];
"1000119" -> "1001040"  [label="DDG: optlen"];
"1000119" -> "1001049"  [label="DDG: optlen"];
"1000119" -> "1001057"  [label="DDG: optlen"];
"1000119" -> "1001059"  [label="DDG: optlen"];
"1000119" -> "1001085"  [label="DDG: optlen"];
"1000119" -> "1001089"  [label="DDG: optlen"];
"1000119" -> "1001099"  [label="DDG: optlen"];
"1000119" -> "1001106"  [label="DDG: optlen"];
"1000119" -> "1001165"  [label="DDG: optlen"];
"1000119" -> "1001198"  [label="DDG: optlen"];
"1000119" -> "1001230"  [label="DDG: optlen"];
"1000119" -> "1001257"  [label="DDG: optlen"];
"1000119" -> "1001326"  [label="DDG: optlen"];
"1000119" -> "1001376"  [label="DDG: optlen"];
"1000119" -> "1001436"  [label="DDG: optlen"];
"1000119" -> "1001487"  [label="DDG: optlen"];
"1000119" -> "1001563"  [label="DDG: optlen"];
"1000119" -> "1001687"  [label="DDG: optlen"];
"1000119" -> "1001693"  [label="DDG: optlen"];
"1000119" -> "1001704"  [label="DDG: optlen"];
"1000119" -> "1001721"  [label="DDG: optlen"];
"1000119" -> "1001750"  [label="DDG: optlen"];
"1000119" -> "1001774"  [label="DDG: optlen"];
"1000119" -> "1001787"  [label="DDG: optlen"];
"1000119" -> "1001812"  [label="DDG: optlen"];
"1000119" -> "1001835"  [label="DDG: optlen"];
"1000119" -> "1001859"  [label="DDG: optlen"];
"1000119" -> "1001876"  [label="DDG: optlen"];
"1000119" -> "1001897"  [label="DDG: optlen"];
"1000119" -> "1001914"  [label="DDG: optlen"];
"1000119" -> "1002006"  [label="DDG: optlen"];
"1000820" -> "1000819"  [label="AST: "];
"1000820" -> "1000825"  [label="CFG: "];
"1000825" -> "1000820"  [label="AST: "];
"1000834" -> "1000820"  [label="CFG: "];
"1000836" -> "1000820"  [label="CFG: "];
"1000820" -> "1002065"  [label="DDG: optlen < sizeof(struct ipv6_opt_hdr) ||\n\t\t\t optlen & 0x7 || optlen > 8 * 255"];
"1000820" -> "1002065"  [label="DDG: optlen & 0x7 || optlen > 8 * 255"];
"1000820" -> "1002065"  [label="DDG: optlen < sizeof(struct ipv6_opt_hdr)"];
"1000825" -> "1000820"  [label="DDG: optlen & 0x7"];
"1000825" -> "1000820"  [label="DDG: optlen > 8 * 255"];
"1000826" -> "1000825"  [label="AST: "];
"1000826" -> "1000828"  [label="CFG: "];
"1000827" -> "1000826"  [label="AST: "];
"1000828" -> "1000826"  [label="AST: "];
"1000830" -> "1000826"  [label="CFG: "];
"1000825" -> "1000826"  [label="CFG: "];
"1000826" -> "1002065"  [label="DDG: optlen"];
"1000826" -> "1000825"  [label="DDG: optlen"];
"1000826" -> "1000825"  [label="DDG: 0x7"];
"1000826" -> "1000829"  [label="DDG: optlen"];
"1000826" -> "1000861"  [label="DDG: optlen"];
"1000825" -> "1000829"  [label="CFG: "];
"1000829" -> "1000825"  [label="AST: "];
"1000825" -> "1002065"  [label="DDG: optlen > 8 * 255"];
"1000825" -> "1002065"  [label="DDG: optlen & 0x7"];
"1000829" -> "1000825"  [label="DDG: optlen"];
"1000829" -> "1000825"  [label="DDG: 8 * 255"];
"1000829" -> "1000831"  [label="CFG: "];
"1000830" -> "1000829"  [label="AST: "];
"1000831" -> "1000829"  [label="AST: "];
"1000829" -> "1002065"  [label="DDG: optlen"];
"1000829" -> "1002065"  [label="DDG: 8 * 255"];
"1000831" -> "1000829"  [label="DDG: 8"];
"1000831" -> "1000829"  [label="DDG: 255"];
"1000829" -> "1000861"  [label="DDG: optlen"];
"1000861" -> "1000859"  [label="AST: "];
"1000861" -> "1000868"  [label="CFG: "];
"1000862" -> "1000861"  [label="AST: "];
"1000863" -> "1000861"  [label="AST: "];
"1000864" -> "1000861"  [label="AST: "];
"1000865" -> "1000861"  [label="AST: "];
"1000868" -> "1000861"  [label="AST: "];
"1000859" -> "1000861"  [label="CFG: "];
"1000861" -> "1002065"  [label="DDG: (struct ipv6_opt_hdr __user *)optval"];
"1000861" -> "1002065"  [label="DDG: optname"];
"1000861" -> "1002065"  [label="DDG: optlen"];
"1000861" -> "1000859"  [label="DDG: (struct ipv6_opt_hdr __user *)optval"];
"1000861" -> "1000859"  [label="DDG: optlen"];
"1000861" -> "1000859"  [label="DDG: optname"];
"1000861" -> "1000859"  [label="DDG: opt"];
"1000861" -> "1000859"  [label="DDG: sk"];
"1000857" -> "1000861"  [label="DDG: sk"];
"1000115" -> "1000861"  [label="DDG: sk"];
"1000851" -> "1000861"  [label="DDG: opt"];
"1000841" -> "1000861"  [label="DDG: optname"];
"1000117" -> "1000861"  [label="DDG: optname"];
"1000865" -> "1000861"  [label="DDG: optval"];
"1000861" -> "1000884"  [label="DDG: optname"];
"1000861" -> "1000926"  [label="DDG: sk"];
"1000861" -> "1002049"  [label="DDG: sk"];
"1000859" -> "1000804"  [label="AST: "];
"1000860" -> "1000859"  [label="AST: "];
"1000871" -> "1000859"  [label="CFG: "];
"1000859" -> "1002065"  [label="DDG: ipv6_renew_options(sk, opt, optname,\n \t\t\t\t\t (struct ipv6_opt_hdr __user *)optval,\n \t\t\t\t\t optlen)"];
"1000859" -> "1000870"  [label="DDG: opt"];
"1000870" -> "1000869"  [label="AST: "];
"1000870" -> "1000871"  [label="CFG: "];
"1000871" -> "1000870"  [label="AST: "];
"1000874" -> "1000870"  [label="CFG: "];
"1000879" -> "1000870"  [label="CFG: "];
"1000870" -> "1002065"  [label="DDG: IS_ERR(opt)"];
"1000870" -> "1002065"  [label="DDG: opt"];
"1000870" -> "1000875"  [label="DDG: opt"];
"1000870" -> "1000887"  [label="DDG: opt"];
"1000870" -> "1000926"  [label="DDG: opt"];
"1000870" -> "1000941"  [label="DDG: opt"];
"1000875" -> "1000873"  [label="AST: "];
"1000875" -> "1000876"  [label="CFG: "];
"1000876" -> "1000875"  [label="AST: "];
"1000873" -> "1000875"  [label="CFG: "];
"1000875" -> "1002065"  [label="DDG: opt"];
"1000875" -> "1000873"  [label="DDG: opt"];
"1000873" -> "1000872"  [label="AST: "];
"1000874" -> "1000873"  [label="AST: "];
"1000877" -> "1000873"  [label="CFG: "];
"1000873" -> "1002065"  [label="DDG: retv"];
"1000873" -> "1002065"  [label="DDG: PTR_ERR(opt)"];
"1000873" -> "1002054"  [label="DDG: retv"];
"1002054" -> "1000120"  [label="AST: "];
"1002054" -> "1002055"  [label="CFG: "];
"1002055" -> "1002054"  [label="AST: "];
"1002065" -> "1002054"  [label="CFG: "];
"1002054" -> "1002065"  [label="DDG: <RET>"];
"1002055" -> "1002054"  [label="DDG: retv"];
"1001185" -> "1002054"  [label="DDG: retv"];
"1001895" -> "1002054"  [label="DDG: retv"];
"1001407" -> "1002054"  [label="DDG: retv"];
"1000421" -> "1002054"  [label="DDG: retv"];
"1001355" -> "1002054"  [label="DDG: retv"];
"1001919" -> "1002054"  [label="DDG: retv"];
"1001419" -> "1002054"  [label="DDG: retv"];
"1000258" -> "1002054"  [label="DDG: retv"];
"1001120" -> "1002054"  [label="DDG: retv"];
"1001869" -> "1002054"  [label="DDG: retv"];
"1001829" -> "1002054"  [label="DDG: retv"];
"1000677" -> "1002054"  [label="DDG: retv"];
"1001883" -> "1002054"  [label="DDG: retv"];
"1001044" -> "1002054"  [label="DDG: retv"];
"1000523" -> "1002054"  [label="DDG: retv"];
"1001065" -> "1002054"  [label="DDG: retv"];
"1002045" -> "1002054"  [label="DDG: retv"];
"1001530" -> "1002054"  [label="DDG: retv"];
"1000238" -> "1002054"  [label="DDG: retv"];
"1000274" -> "1002054"  [label="DDG: retv"];
"1001874" -> "1002054"  [label="DDG: retv"];
"1001598" -> "1002054"  [label="DDG: retv"];
"1001492" -> "1002054"  [label="DDG: retv"];
"1000643" -> "1002054"  [label="DDG: retv"];
"1002000" -> "1002054"  [label="DDG: retv"];
"1001289" -> "1002054"  [label="DDG: retv"];
"1001779" -> "1002054"  [label="DDG: retv"];
"1001006" -> "1002054"  [label="DDG: retv"];
"1001653" -> "1002054"  [label="DDG: retv"];
"1001542" -> "1002054"  [label="DDG: retv"];
"1001759" -> "1002054"  [label="DDG: retv"];
"1002035" -> "1002054"  [label="DDG: retv"];
"1000583" -> "1002054"  [label="DDG: retv"];
"1000623" -> "1002054"  [label="DDG: retv"];
"1000759" -> "1002054"  [label="DDG: retv"];
"1000776" -> "1002054"  [label="DDG: retv"];
"1001513" -> "1002054"  [label="DDG: retv"];
"1001457" -> "1002054"  [label="DDG: retv"];
"1001381" -> "1002054"  [label="DDG: retv"];
"1001299" -> "1002054"  [label="DDG: retv"];
"1001245" -> "1002054"  [label="DDG: retv"];
"1001711" -> "1002054"  [label="DDG: retv"];
"1002025" -> "1002054"  [label="DDG: retv"];
"1000603" -> "1002054"  [label="DDG: retv"];
"1001576" -> "1002054"  [label="DDG: retv"];
"1000737" -> "1002054"  [label="DDG: retv"];
"1000970" -> "1002054"  [label="DDG: retv"];
"1001391" -> "1002054"  [label="DDG: retv"];
"1001224" -> "1002054"  [label="DDG: retv"];
"1000463" -> "1002054"  [label="DDG: retv"];
"1000563" -> "1002054"  [label="DDG: retv"];
"1000878" -> "1002054"  [label="DDG: retv"];
"1001853" -> "1002054"  [label="DDG: retv"];
"1001441" -> "1002054"  [label="DDG: retv"];
"1000835" -> "1002054"  [label="DDG: retv"];
"1001280" -> "1002054"  [label="DDG: retv"];
"1000717" -> "1002054"  [label="DDG: retv"];
"1000134" -> "1002054"  [label="DDG: retv"];
"1001697" -> "1002054"  [label="DDG: retv"];
"1000543" -> "1002054"  [label="DDG: retv"];
"1001764" -> "1002054"  [label="DDG: retv"];
"1000503" -> "1002054"  [label="DDG: retv"];
"1001140" -> "1002054"  [label="DDG: retv"];
"1001744" -> "1002054"  [label="DDG: retv"];
"1001469" -> "1002054"  [label="DDG: retv"];
"1001674" -> "1002054"  [label="DDG: retv"];
"1000697" -> "1002054"  [label="DDG: retv"];
"1001716" -> "1002054"  [label="DDG: retv"];
"1001313" -> "1002054"  [label="DDG: retv"];
"1000921" -> "1002054"  [label="DDG: retv"];
"1001367" -> "1002054"  [label="DDG: retv"];
"1000443" -> "1002054"  [label="DDG: retv"];
"1001806" -> "1002054"  [label="DDG: retv"];
"1000483" -> "1002054"  [label="DDG: retv"];
"1000796" -> "1002054"  [label="DDG: retv"];
"1001094" -> "1002054"  [label="DDG: retv"];
"1000887" -> "1000883"  [label="AST: "];
"1000887" -> "1000888"  [label="CFG: "];
"1000887" -> "1000889"  [label="CFG: "];
"1000888" -> "1000887"  [label="AST: "];
"1000889" -> "1000887"  [label="AST: "];
"1000883" -> "1000887"  [label="CFG: "];
"1000887" -> "1002065"  [label="DDG: opt"];
"1000887" -> "1002065"  [label="DDG: opt->srcrt"];
"1000887" -> "1000883"  [label="DDG: opt"];
"1000887" -> "1000883"  [label="DDG: opt->srcrt"];
"1000887" -> "1000894"  [label="DDG: opt->srcrt"];
"1000887" -> "1000926"  [label="DDG: opt"];
"1000887" -> "1000941"  [label="DDG: opt"];
"1000883" -> "1000882"  [label="AST: "];
"1000883" -> "1000884"  [label="CFG: "];
"1000884" -> "1000883"  [label="AST: "];
"1000895" -> "1000883"  [label="CFG: "];
"1000922" -> "1000883"  [label="CFG: "];
"1000883" -> "1002065"  [label="DDG: optname == IPV6_RTHDR && opt && opt->srcrt"];
"1000883" -> "1002065"  [label="DDG: optname == IPV6_RTHDR"];
"1000883" -> "1002065"  [label="DDG: opt && opt->srcrt"];
"1000884" -> "1000883"  [label="DDG: optname"];
"1000884" -> "1000883"  [label="DDG: IPV6_RTHDR"];
"1000894" -> "1000892"  [label="AST: "];
"1000894" -> "1000896"  [label="CFG: "];
"1000895" -> "1000894"  [label="AST: "];
"1000896" -> "1000894"  [label="AST: "];
"1000901" -> "1000894"  [label="CFG: "];
"1000894" -> "1002065"  [label="DDG: rthdr"];
"1000894" -> "1002065"  [label="DDG: opt->srcrt"];
"1000926" -> "1000924"  [label="AST: "];
"1000926" -> "1000928"  [label="CFG: "];
"1000927" -> "1000926"  [label="AST: "];
"1000928" -> "1000926"  [label="AST: "];
"1000924" -> "1000926"  [label="CFG: "];
"1000926" -> "1000924"  [label="DDG: sk"];
"1000926" -> "1000924"  [label="DDG: opt"];
"1000187" -> "1000926"  [label="DDG: sk"];
"1000115" -> "1000926"  [label="DDG: sk"];
"1000926" -> "1002049"  [label="DDG: sk"];
"1000924" -> "1000804"  [label="AST: "];
"1000925" -> "1000924"  [label="AST: "];
"1000929" -> "1000924"  [label="CFG: "];
"1000924" -> "1002065"  [label="DDG: ipv6_update_options(sk, opt)"];
"1000924" -> "1002065"  [label="DDG: opt"];
"1000924" -> "1000941"  [label="DDG: opt"];
"1000941" -> "1000932"  [label="AST: "];
"1000941" -> "1000942"  [label="CFG: "];
"1000942" -> "1000941"  [label="AST: "];
"1000943" -> "1000941"  [label="CFG: "];
"1000941" -> "1002065"  [label="DDG: opt"];
"1000941" -> "1002065"  [label="DDG: txopt_put(opt)"];
"1002049" -> "1000120"  [label="AST: "];
"1002049" -> "1002050"  [label="CFG: "];
"1002050" -> "1002049"  [label="AST: "];
"1002052" -> "1002049"  [label="CFG: "];
"1002049" -> "1002065"  [label="DDG: release_sock(sk)"];
"1002049" -> "1002065"  [label="DDG: sk"];
"1000187" -> "1002049"  [label="DDG: sk"];
"1001876" -> "1002049"  [label="DDG: sk"];
"1001544" -> "1002049"  [label="DDG: sk"];
"1001781" -> "1002049"  [label="DDG: sk"];
"1001122" -> "1002049"  [label="DDG: sk"];
"1001145" -> "1002049"  [label="DDG: sk"];
"1001471" -> "1002049"  [label="DDG: sk"];
"1001766" -> "1002049"  [label="DDG: sk"];
"1001643" -> "1002049"  [label="DDG: sk"];
"1000265" -> "1002049"  [label="DDG: sk"];
"1000417" -> "1002049"  [label="DDG: sk"];
"1000434" -> "1002049"  [label="DDG: sk"];
"1000229" -> "1002049"  [label="DDG: sk"];
"1001532" -> "1002049"  [label="DDG: sk"];
"1001676" -> "1002049"  [label="DDG: sk"];
"1000772" -> "1002049"  [label="DDG: sk"];
"1001387" -> "1002049"  [label="DDG: sk"];
"1001459" -> "1002049"  [label="DDG: sk"];
"1001421" -> "1002049"  [label="DDG: sk"];
"1001409" -> "1002049"  [label="DDG: sk"];
"1001057" -> "1002049"  [label="DDG: sk"];
"1001897" -> "1002049"  [label="DDG: sk"];
"1000115" -> "1002049"  [label="DDG: sk"];
"1000884" -> "1000886"  [label="CFG: "];
"1000885" -> "1000884"  [label="AST: "];
"1000886" -> "1000884"  [label="AST: "];
"1000888" -> "1000884"  [label="CFG: "];
"1000884" -> "1002065"  [label="DDG: optname"];
"1000884" -> "1002065"  [label="DDG: IPV6_RTHDR"];
"1000117" -> "1000884"  [label="DDG: optname"];
"1000841" -> "1000884"  [label="DDG: IPV6_RTHDR"];
}
