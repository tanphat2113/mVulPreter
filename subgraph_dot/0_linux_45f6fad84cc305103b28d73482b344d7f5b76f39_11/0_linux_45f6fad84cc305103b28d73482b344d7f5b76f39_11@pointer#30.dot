digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_11@pointer" {
"1000753" [label="(Call,ns_capable(net->user_ns, CAP_NET_RAW))"];
"1000747" [label="(Call,ns_capable(net->user_ns, CAP_NET_ADMIN))"];
"1000752" [label="(Call,!ns_capable(net->user_ns, CAP_NET_RAW))"];
"1000745" [label="(Call,!ns_capable(net->user_ns, CAP_NET_ADMIN) &&\n\t\t    !ns_capable(net->user_ns, CAP_NET_RAW))"];
"1000743" [label="(Call,valbool && !ns_capable(net->user_ns, CAP_NET_ADMIN) &&\n\t\t    !ns_capable(net->user_ns, CAP_NET_RAW))"];
"1000770" [label="(Call,inet_sk(sk)->transparent = valbool)"];
"1000751" [label="(Identifier,CAP_NET_ADMIN)"];
"1000742" [label="(ControlStructure,if (valbool && !ns_capable(net->user_ns, CAP_NET_ADMIN) &&\n\t\t    !ns_capable(net->user_ns, CAP_NET_RAW)))"];
"1000753" [label="(Call,ns_capable(net->user_ns, CAP_NET_RAW))"];
"1000757" [label="(Identifier,CAP_NET_RAW)"];
"1000777" [label="(Identifier,retv)"];
"1000170" [label="(Call,valbool = (val != 0))"];
"1000775" [label="(Identifier,valbool)"];
"1000770" [label="(Call,inet_sk(sk)->transparent = valbool)"];
"1000743" [label="(Call,valbool && !ns_capable(net->user_ns, CAP_NET_ADMIN) &&\n\t\t    !ns_capable(net->user_ns, CAP_NET_RAW))"];
"1000766" [label="(Identifier,optlen)"];
"1002065" [label="(MethodReturn,static int)"];
"1000191" [label="(Block,)"];
"1000754" [label="(Call,net->user_ns)"];
"1000746" [label="(Call,!ns_capable(net->user_ns, CAP_NET_ADMIN))"];
"1000760" [label="(Identifier,retv)"];
"1000744" [label="(Identifier,valbool)"];
"1000752" [label="(Call,!ns_capable(net->user_ns, CAP_NET_RAW))"];
"1000745" [label="(Call,!ns_capable(net->user_ns, CAP_NET_ADMIN) &&\n\t\t    !ns_capable(net->user_ns, CAP_NET_RAW))"];
"1000747" [label="(Call,ns_capable(net->user_ns, CAP_NET_ADMIN))"];
"1000771" [label="(Call,inet_sk(sk)->transparent)"];
"1000748" [label="(Call,net->user_ns)"];
"1000753" -> "1000752"  [label="AST: "];
"1000753" -> "1000757"  [label="CFG: "];
"1000754" -> "1000753"  [label="AST: "];
"1000757" -> "1000753"  [label="AST: "];
"1000752" -> "1000753"  [label="CFG: "];
"1000753" -> "1002065"  [label="DDG: net->user_ns"];
"1000753" -> "1002065"  [label="DDG: CAP_NET_RAW"];
"1000753" -> "1000752"  [label="DDG: net->user_ns"];
"1000753" -> "1000752"  [label="DDG: CAP_NET_RAW"];
"1000747" -> "1000753"  [label="DDG: net->user_ns"];
"1000747" -> "1000746"  [label="AST: "];
"1000747" -> "1000751"  [label="CFG: "];
"1000748" -> "1000747"  [label="AST: "];
"1000751" -> "1000747"  [label="AST: "];
"1000746" -> "1000747"  [label="CFG: "];
"1000747" -> "1002065"  [label="DDG: CAP_NET_ADMIN"];
"1000747" -> "1002065"  [label="DDG: net->user_ns"];
"1000747" -> "1000746"  [label="DDG: net->user_ns"];
"1000747" -> "1000746"  [label="DDG: CAP_NET_ADMIN"];
"1000752" -> "1000745"  [label="AST: "];
"1000745" -> "1000752"  [label="CFG: "];
"1000752" -> "1002065"  [label="DDG: ns_capable(net->user_ns, CAP_NET_RAW)"];
"1000752" -> "1000745"  [label="DDG: ns_capable(net->user_ns, CAP_NET_RAW)"];
"1000745" -> "1000743"  [label="AST: "];
"1000745" -> "1000746"  [label="CFG: "];
"1000746" -> "1000745"  [label="AST: "];
"1000743" -> "1000745"  [label="CFG: "];
"1000745" -> "1002065"  [label="DDG: !ns_capable(net->user_ns, CAP_NET_ADMIN)"];
"1000745" -> "1002065"  [label="DDG: !ns_capable(net->user_ns, CAP_NET_RAW)"];
"1000745" -> "1000743"  [label="DDG: !ns_capable(net->user_ns, CAP_NET_ADMIN)"];
"1000745" -> "1000743"  [label="DDG: !ns_capable(net->user_ns, CAP_NET_RAW)"];
"1000746" -> "1000745"  [label="DDG: ns_capable(net->user_ns, CAP_NET_ADMIN)"];
"1000743" -> "1000742"  [label="AST: "];
"1000743" -> "1000744"  [label="CFG: "];
"1000744" -> "1000743"  [label="AST: "];
"1000760" -> "1000743"  [label="CFG: "];
"1000766" -> "1000743"  [label="CFG: "];
"1000743" -> "1002065"  [label="DDG: valbool"];
"1000743" -> "1002065"  [label="DDG: !ns_capable(net->user_ns, CAP_NET_ADMIN) &&\n\t\t    !ns_capable(net->user_ns, CAP_NET_RAW)"];
"1000743" -> "1002065"  [label="DDG: valbool && !ns_capable(net->user_ns, CAP_NET_ADMIN) &&\n\t\t    !ns_capable(net->user_ns, CAP_NET_RAW)"];
"1000170" -> "1000743"  [label="DDG: valbool"];
"1000743" -> "1000770"  [label="DDG: valbool"];
"1000770" -> "1000191"  [label="AST: "];
"1000770" -> "1000775"  [label="CFG: "];
"1000771" -> "1000770"  [label="AST: "];
"1000775" -> "1000770"  [label="AST: "];
"1000777" -> "1000770"  [label="CFG: "];
"1000770" -> "1002065"  [label="DDG: valbool"];
"1000770" -> "1002065"  [label="DDG: inet_sk(sk)->transparent"];
}
