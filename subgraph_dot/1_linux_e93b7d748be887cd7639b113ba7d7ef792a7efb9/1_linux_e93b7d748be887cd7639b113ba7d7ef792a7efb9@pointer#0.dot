digraph "1_linux_e93b7d748be887cd7639b113ba7d7ef792a7efb9@pointer" {
"1000153" [label="(Call,skb_put(skb, fragheaderlen + transhdrlen))"];
"1000150" [label="(Call,skb_reserve(skb, hh_len))"];
"1000145" [label="(Call,skb == NULL)"];
"1000128" [label="(Call,skb = sock_alloc_send_skb(sk,\n\t\t\thh_len + fragheaderlen + transhdrlen + 20,\n\t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000130" [label="(Call,sock_alloc_send_skb(sk,\n\t\t\thh_len + fragheaderlen + transhdrlen + 20,\n\t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000107" [label="(MethodParameterIn,struct sock *sk)"];
"1000112" [label="(MethodParameterIn,int hh_len)"];
"1000113" [label="(MethodParameterIn,int fragheaderlen)"];
"1000114" [label="(MethodParameterIn,int transhdrlen)"];
"1000139" [label="(Call,flags & MSG_DONTWAIT)"];
"1000116" [label="(MethodParameterIn,unsigned int flags)"];
"1000121" [label="(Call,(skb = skb_peek_tail(queue)) == NULL)"];
"1000122" [label="(Call,skb = skb_peek_tail(queue))"];
"1000124" [label="(Call,skb_peek_tail(queue))"];
"1000108" [label="(MethodParameterIn,struct sk_buff_head *queue)"];
"1000158" [label="(Call,skb_reset_network_header(skb))"];
"1000181" [label="(Call,skb_shinfo(skb))"];
"1000189" [label="(Call,skb_shinfo(skb))"];
"1000193" [label="(Call,__skb_queue_tail(queue, skb))"];
"1000197" [label="(Call,skb_append_datato_frags(sk, skb, getfrag, from,\n \t\t\t\t       (length - transhdrlen)))"];
"1000196" [label="(Return,return skb_append_datato_frags(sk, skb, getfrag, from,\n \t\t\t\t       (length - transhdrlen));)"];
"1000140" [label="(Identifier,flags)"];
"1000125" [label="(Identifier,queue)"];
"1000110" [label="(MethodParameterIn,void *from)"];
"1000129" [label="(Identifier,skb)"];
"1000154" [label="(Identifier,skb)"];
"1000116" [label="(MethodParameterIn,unsigned int flags)"];
"1000117" [label="(Block,)"];
"1000109" [label="(MethodParameterIn,int getfrag(void *from, char *to, int offset, int len,\n\t\t\t       int odd, struct sk_buff *skb))"];
"1000159" [label="(Identifier,skb)"];
"1000155" [label="(Call,fragheaderlen + transhdrlen)"];
"1000181" [label="(Call,skb_shinfo(skb))"];
"1000128" [label="(Call,skb = sock_alloc_send_skb(sk,\n\t\t\thh_len + fragheaderlen + transhdrlen + 20,\n\t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000136" [label="(Call,transhdrlen + 20)"];
"1000113" [label="(MethodParameterIn,int fragheaderlen)"];
"1000190" [label="(Identifier,skb)"];
"1000147" [label="(Identifier,NULL)"];
"1000139" [label="(Call,flags & MSG_DONTWAIT)"];
"1000112" [label="(MethodParameterIn,int hh_len)"];
"1000142" [label="(Call,&err)"];
"1000189" [label="(Call,skb_shinfo(skb))"];
"1000145" [label="(Call,skb == NULL)"];
"1000130" [label="(Call,sock_alloc_send_skb(sk,\n\t\t\thh_len + fragheaderlen + transhdrlen + 20,\n\t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000127" [label="(Block,)"];
"1000193" [label="(Call,__skb_queue_tail(queue, skb))"];
"1000202" [label="(Call,length - transhdrlen)"];
"1000121" [label="(Call,(skb = skb_peek_tail(queue)) == NULL)"];
"1000183" [label="(FieldIdentifier,gso_size)"];
"1000151" [label="(Identifier,skb)"];
"1000144" [label="(ControlStructure,if (skb == NULL))"];
"1000122" [label="(Call,skb = skb_peek_tail(queue))"];
"1000152" [label="(Identifier,hh_len)"];
"1000188" [label="(Call,skb_shinfo(skb)->gso_type)"];
"1000146" [label="(Identifier,skb)"];
"1000114" [label="(MethodParameterIn,int transhdrlen)"];
"1000153" [label="(Call,skb_put(skb, fragheaderlen + transhdrlen))"];
"1000132" [label="(Call,hh_len + fragheaderlen + transhdrlen + 20)"];
"1000124" [label="(Call,skb_peek_tail(queue))"];
"1000201" [label="(Identifier,from)"];
"1000149" [label="(Identifier,err)"];
"1000197" [label="(Call,skb_append_datato_frags(sk, skb, getfrag, from,\n \t\t\t\t       (length - transhdrlen)))"];
"1000164" [label="(Call,skb->network_header + fragheaderlen)"];
"1000196" [label="(Return,return skb_append_datato_frags(sk, skb, getfrag, from,\n \t\t\t\t       (length - transhdrlen));)"];
"1000160" [label="(Call,skb->transport_header = skb->network_header + fragheaderlen)"];
"1000199" [label="(Identifier,skb)"];
"1000126" [label="(Identifier,NULL)"];
"1000158" [label="(Call,skb_reset_network_header(skb))"];
"1000162" [label="(Identifier,skb)"];
"1000131" [label="(Identifier,sk)"];
"1000182" [label="(Identifier,skb)"];
"1000191" [label="(FieldIdentifier,gso_type)"];
"1000200" [label="(Identifier,getfrag)"];
"1000107" [label="(MethodParameterIn,struct sock *sk)"];
"1000150" [label="(Call,skb_reserve(skb, hh_len))"];
"1000195" [label="(Identifier,skb)"];
"1000120" [label="(ControlStructure,if ((skb = skb_peek_tail(queue)) == NULL))"];
"1000205" [label="(MethodReturn,static inline int)"];
"1000108" [label="(MethodParameterIn,struct sk_buff_head *queue)"];
"1000141" [label="(Identifier,MSG_DONTWAIT)"];
"1000123" [label="(Identifier,skb)"];
"1000180" [label="(Call,skb_shinfo(skb)->gso_size)"];
"1000134" [label="(Call,fragheaderlen + transhdrlen + 20)"];
"1000194" [label="(Identifier,queue)"];
"1000198" [label="(Identifier,sk)"];
"1000143" [label="(Identifier,err)"];
"1000184" [label="(Call,maxfraglen - fragheaderlen)"];
"1000153" -> "1000127"  [label="AST: "];
"1000153" -> "1000155"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000155" -> "1000153"  [label="AST: "];
"1000159" -> "1000153"  [label="CFG: "];
"1000153" -> "1000205"  [label="DDG: skb_put(skb, fragheaderlen + transhdrlen)"];
"1000153" -> "1000205"  [label="DDG: fragheaderlen + transhdrlen"];
"1000150" -> "1000153"  [label="DDG: skb"];
"1000113" -> "1000153"  [label="DDG: fragheaderlen"];
"1000114" -> "1000153"  [label="DDG: transhdrlen"];
"1000153" -> "1000158"  [label="DDG: skb"];
"1000150" -> "1000127"  [label="AST: "];
"1000150" -> "1000152"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="AST: "];
"1000154" -> "1000150"  [label="CFG: "];
"1000150" -> "1000205"  [label="DDG: hh_len"];
"1000150" -> "1000205"  [label="DDG: skb_reserve(skb, hh_len)"];
"1000145" -> "1000150"  [label="DDG: skb"];
"1000112" -> "1000150"  [label="DDG: hh_len"];
"1000145" -> "1000144"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000149" -> "1000145"  [label="CFG: "];
"1000151" -> "1000145"  [label="CFG: "];
"1000145" -> "1000205"  [label="DDG: skb"];
"1000145" -> "1000205"  [label="DDG: skb == NULL"];
"1000145" -> "1000205"  [label="DDG: NULL"];
"1000128" -> "1000145"  [label="DDG: skb"];
"1000121" -> "1000145"  [label="DDG: NULL"];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000130"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000128"  [label="AST: "];
"1000146" -> "1000128"  [label="CFG: "];
"1000128" -> "1000205"  [label="DDG: sock_alloc_send_skb(sk,\n\t\t\thh_len + fragheaderlen + transhdrlen + 20,\n\t\t\t(flags & MSG_DONTWAIT), &err)"];
"1000130" -> "1000128"  [label="DDG: sk"];
"1000130" -> "1000128"  [label="DDG: hh_len + fragheaderlen + transhdrlen + 20"];
"1000130" -> "1000128"  [label="DDG: flags & MSG_DONTWAIT"];
"1000130" -> "1000128"  [label="DDG: &err"];
"1000130" -> "1000142"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000139" -> "1000130"  [label="AST: "];
"1000142" -> "1000130"  [label="AST: "];
"1000130" -> "1000205"  [label="DDG: &err"];
"1000130" -> "1000205"  [label="DDG: hh_len + fragheaderlen + transhdrlen + 20"];
"1000130" -> "1000205"  [label="DDG: flags & MSG_DONTWAIT"];
"1000130" -> "1000205"  [label="DDG: sk"];
"1000107" -> "1000130"  [label="DDG: sk"];
"1000112" -> "1000130"  [label="DDG: hh_len"];
"1000113" -> "1000130"  [label="DDG: fragheaderlen"];
"1000114" -> "1000130"  [label="DDG: transhdrlen"];
"1000139" -> "1000130"  [label="DDG: flags"];
"1000139" -> "1000130"  [label="DDG: MSG_DONTWAIT"];
"1000130" -> "1000197"  [label="DDG: sk"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000205"  [label="DDG: sk"];
"1000107" -> "1000197"  [label="DDG: sk"];
"1000112" -> "1000106"  [label="AST: "];
"1000112" -> "1000205"  [label="DDG: hh_len"];
"1000112" -> "1000132"  [label="DDG: hh_len"];
"1000113" -> "1000106"  [label="AST: "];
"1000113" -> "1000205"  [label="DDG: fragheaderlen"];
"1000113" -> "1000132"  [label="DDG: fragheaderlen"];
"1000113" -> "1000134"  [label="DDG: fragheaderlen"];
"1000113" -> "1000155"  [label="DDG: fragheaderlen"];
"1000113" -> "1000160"  [label="DDG: fragheaderlen"];
"1000113" -> "1000164"  [label="DDG: fragheaderlen"];
"1000113" -> "1000184"  [label="DDG: fragheaderlen"];
"1000114" -> "1000106"  [label="AST: "];
"1000114" -> "1000205"  [label="DDG: transhdrlen"];
"1000114" -> "1000132"  [label="DDG: transhdrlen"];
"1000114" -> "1000134"  [label="DDG: transhdrlen"];
"1000114" -> "1000136"  [label="DDG: transhdrlen"];
"1000114" -> "1000155"  [label="DDG: transhdrlen"];
"1000114" -> "1000202"  [label="DDG: transhdrlen"];
"1000139" -> "1000141"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="AST: "];
"1000143" -> "1000139"  [label="CFG: "];
"1000139" -> "1000205"  [label="DDG: MSG_DONTWAIT"];
"1000139" -> "1000205"  [label="DDG: flags"];
"1000116" -> "1000139"  [label="DDG: flags"];
"1000116" -> "1000106"  [label="AST: "];
"1000116" -> "1000205"  [label="DDG: flags"];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000126"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000126" -> "1000121"  [label="AST: "];
"1000129" -> "1000121"  [label="CFG: "];
"1000198" -> "1000121"  [label="CFG: "];
"1000121" -> "1000205"  [label="DDG: NULL"];
"1000121" -> "1000205"  [label="DDG: (skb = skb_peek_tail(queue)) == NULL"];
"1000122" -> "1000121"  [label="DDG: skb"];
"1000124" -> "1000121"  [label="DDG: queue"];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000126" -> "1000122"  [label="CFG: "];
"1000122" -> "1000205"  [label="DDG: skb_peek_tail(queue)"];
"1000124" -> "1000122"  [label="DDG: queue"];
"1000122" -> "1000197"  [label="DDG: skb"];
"1000124" -> "1000125"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000124" -> "1000205"  [label="DDG: queue"];
"1000108" -> "1000124"  [label="DDG: queue"];
"1000124" -> "1000193"  [label="DDG: queue"];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000205"  [label="DDG: queue"];
"1000108" -> "1000193"  [label="DDG: queue"];
"1000158" -> "1000127"  [label="AST: "];
"1000158" -> "1000159"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000162" -> "1000158"  [label="CFG: "];
"1000158" -> "1000205"  [label="DDG: skb_reset_network_header(skb)"];
"1000158" -> "1000181"  [label="DDG: skb"];
"1000181" -> "1000180"  [label="AST: "];
"1000181" -> "1000182"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000183" -> "1000181"  [label="CFG: "];
"1000181" -> "1000189"  [label="DDG: skb"];
"1000189" -> "1000188"  [label="AST: "];
"1000189" -> "1000190"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000191" -> "1000189"  [label="CFG: "];
"1000189" -> "1000193"  [label="DDG: skb"];
"1000193" -> "1000127"  [label="AST: "];
"1000193" -> "1000195"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000195" -> "1000193"  [label="AST: "];
"1000198" -> "1000193"  [label="CFG: "];
"1000193" -> "1000205"  [label="DDG: queue"];
"1000193" -> "1000205"  [label="DDG: __skb_queue_tail(queue, skb)"];
"1000193" -> "1000197"  [label="DDG: skb"];
"1000197" -> "1000196"  [label="AST: "];
"1000197" -> "1000202"  [label="CFG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000199" -> "1000197"  [label="AST: "];
"1000200" -> "1000197"  [label="AST: "];
"1000201" -> "1000197"  [label="AST: "];
"1000202" -> "1000197"  [label="AST: "];
"1000196" -> "1000197"  [label="CFG: "];
"1000197" -> "1000205"  [label="DDG: getfrag"];
"1000197" -> "1000205"  [label="DDG: from"];
"1000197" -> "1000205"  [label="DDG: skb_append_datato_frags(sk, skb, getfrag, from,\n \t\t\t\t       (length - transhdrlen))"];
"1000197" -> "1000205"  [label="DDG: skb"];
"1000197" -> "1000205"  [label="DDG: sk"];
"1000197" -> "1000205"  [label="DDG: length - transhdrlen"];
"1000197" -> "1000196"  [label="DDG: skb_append_datato_frags(sk, skb, getfrag, from,\n \t\t\t\t       (length - transhdrlen))"];
"1000109" -> "1000197"  [label="DDG: getfrag"];
"1000110" -> "1000197"  [label="DDG: from"];
"1000202" -> "1000197"  [label="DDG: length"];
"1000202" -> "1000197"  [label="DDG: transhdrlen"];
"1000196" -> "1000117"  [label="AST: "];
"1000205" -> "1000196"  [label="CFG: "];
"1000196" -> "1000205"  [label="DDG: <RET>"];
}
