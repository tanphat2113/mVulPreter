digraph "0_linux_0c17d1d2c61936401f4702e1846e2c19b200f958_0@pointer" {
"1000453" [label="(Call,verbose(env, \"invalid BPF_ALU opcode %x\n\", opcode))"];
"1000118" [label="(Call,cur_regs(env))"];
"1000112" [label="(MethodParameterIn,struct bpf_verifier_env *env)"];
"1000449" [label="(Call,opcode > BPF_END)"];
"1000262" [label="(Call,opcode == BPF_MOV)"];
"1000133" [label="(Call,opcode == BPF_NEG)"];
"1000130" [label="(Call,opcode == BPF_END)"];
"1000121" [label="(Call,opcode = BPF_OP(insn->code))"];
"1000123" [label="(Call,BPF_OP(insn->code))"];
"1000168" [label="(Call,verbose(env, \"BPF_NEG uses reserved fields\n\"))"];
"1000459" [label="(Identifier,EINVAL)"];
"1000135" [label="(Identifier,BPF_NEG)"];
"1000268" [label="(Call,BPF_SRC(insn->code))"];
"1000287" [label="(Call,verbose(env, \"BPF_MOV uses reserved fields\n\"))"];
"1000464" [label="(Call,BPF_SRC(insn->code))"];
"1000448" [label="(ControlStructure,if (opcode > BPF_END))"];
"1000138" [label="(Call,opcode == BPF_NEG)"];
"1000524" [label="(Call,check_reg_arg(env, insn->dst_reg, SRC_OP))"];
"1000450" [label="(Identifier,opcode)"];
"1000112" [label="(MethodParameterIn,struct bpf_verifier_env *env)"];
"1000451" [label="(Identifier,BPF_END)"];
"1000261" [label="(ControlStructure,if (opcode == BPF_MOV))"];
"1000208" [label="(Call,BPF_CLASS(insn->code))"];
"1000516" [label="(Call,verbose(env, \"BPF_ALU uses reserved fields\n\"))"];
"1000119" [label="(Identifier,env)"];
"1000618" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP_NO_MARK))"];
"1000556" [label="(Call,verbose(env, \"div by zero\n\"))"];
"1000466" [label="(Identifier,insn)"];
"1000122" [label="(Identifier,opcode)"];
"1000320" [label="(Call,verbose(env, \"BPF_MOV uses reserved fields\n\"))"];
"1000328" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP))"];
"1000491" [label="(Call,check_reg_arg(env, insn->src_reg, SRC_OP))"];
"1000483" [label="(Call,verbose(env, \"BPF_ALU uses reserved fields\n\"))"];
"1000453" [label="(Call,verbose(env, \"invalid BPF_ALU opcode %x\n\", opcode))"];
"1000233" [label="(Call,is_pointer_value(env, insn->dst_reg))"];
"1000270" [label="(Identifier,insn)"];
"1000239" [label="(Call,verbose(env, \"R%d pointer arithmetic prohibited\n\",\n\t\t\t\tinsn->dst_reg))"];
"1000145" [label="(Call,BPF_SRC(insn->code))"];
"1000454" [label="(Identifier,env)"];
"1000377" [label="(Call,is_pointer_value(env, insn->src_reg))"];
"1000537" [label="(Call,opcode == BPF_MOD)"];
"1000262" [label="(Call,opcode == BPF_MOV)"];
"1000383" [label="(Call,verbose(env,\n\t\t\t\t\t\t\"R%d partial copy of pointer\n\",\n\t\t\t\t\t\tinsn->src_reg))"];
"1000607" [label="(Call,verbose(env, \"invalid shift %d\n\", insn->imm))"];
"1000131" [label="(Identifier,opcode)"];
"1000295" [label="(Call,check_reg_arg(env, insn->src_reg, SRC_OP))"];
"1000250" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP))"];
"1000449" [label="(Call,opcode > BPF_END)"];
"1000116" [label="(Call,*regs = cur_regs(env))"];
"1000629" [label="(Call,adjust_reg_min_max_vals(env, insn))"];
"1000264" [label="(Identifier,BPF_MOV)"];
"1000222" [label="(Call,check_reg_arg(env, insn->dst_reg, SRC_OP))"];
"1000634" [label="(MethodReturn,static int)"];
"1000118" [label="(Call,cur_regs(env))"];
"1000455" [label="(Literal,\"invalid BPF_ALU opcode %x\n\")"];
"1000392" [label="(Call,mark_reg_unknown(env, regs, insn->dst_reg))"];
"1000132" [label="(Identifier,BPF_END)"];
"1000456" [label="(Identifier,opcode)"];
"1000121" [label="(Call,opcode = BPF_OP(insn->code))"];
"1000114" [label="(Block,)"];
"1000263" [label="(Identifier,opcode)"];
"1000133" [label="(Call,opcode == BPF_NEG)"];
"1000123" [label="(Call,BPF_OP(insn->code))"];
"1000130" [label="(Call,opcode == BPF_END)"];
"1000124" [label="(Call,insn->code)"];
"1000129" [label="(Call,opcode == BPF_END || opcode == BPF_NEG)"];
"1000214" [label="(Call,verbose(env, \"BPF_END uses reserved fields\n\"))"];
"1000134" [label="(Identifier,opcode)"];
"1000452" [label="(Block,)"];
"1000453" -> "1000452"  [label="AST: "];
"1000453" -> "1000456"  [label="CFG: "];
"1000454" -> "1000453"  [label="AST: "];
"1000455" -> "1000453"  [label="AST: "];
"1000456" -> "1000453"  [label="AST: "];
"1000459" -> "1000453"  [label="CFG: "];
"1000453" -> "1000634"  [label="DDG: "];
"1000453" -> "1000634"  [label="DDG: "];
"1000453" -> "1000634"  [label="DDG: "];
"1000118" -> "1000453"  [label="DDG: "];
"1000112" -> "1000453"  [label="DDG: "];
"1000449" -> "1000453"  [label="DDG: "];
"1000118" -> "1000116"  [label="AST: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000118" -> "1000116"  [label="DDG: "];
"1000112" -> "1000118"  [label="DDG: "];
"1000118" -> "1000168"  [label="DDG: "];
"1000118" -> "1000214"  [label="DDG: "];
"1000118" -> "1000222"  [label="DDG: "];
"1000118" -> "1000287"  [label="DDG: "];
"1000118" -> "1000295"  [label="DDG: "];
"1000118" -> "1000320"  [label="DDG: "];
"1000118" -> "1000328"  [label="DDG: "];
"1000118" -> "1000483"  [label="DDG: "];
"1000118" -> "1000491"  [label="DDG: "];
"1000118" -> "1000516"  [label="DDG: "];
"1000118" -> "1000524"  [label="DDG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000112" -> "1000634"  [label="DDG: "];
"1000112" -> "1000168"  [label="DDG: "];
"1000112" -> "1000214"  [label="DDG: "];
"1000112" -> "1000222"  [label="DDG: "];
"1000112" -> "1000233"  [label="DDG: "];
"1000112" -> "1000239"  [label="DDG: "];
"1000112" -> "1000250"  [label="DDG: "];
"1000112" -> "1000287"  [label="DDG: "];
"1000112" -> "1000295"  [label="DDG: "];
"1000112" -> "1000320"  [label="DDG: "];
"1000112" -> "1000328"  [label="DDG: "];
"1000112" -> "1000377"  [label="DDG: "];
"1000112" -> "1000383"  [label="DDG: "];
"1000112" -> "1000392"  [label="DDG: "];
"1000112" -> "1000483"  [label="DDG: "];
"1000112" -> "1000491"  [label="DDG: "];
"1000112" -> "1000516"  [label="DDG: "];
"1000112" -> "1000524"  [label="DDG: "];
"1000112" -> "1000556"  [label="DDG: "];
"1000112" -> "1000607"  [label="DDG: "];
"1000112" -> "1000618"  [label="DDG: "];
"1000112" -> "1000629"  [label="DDG: "];
"1000449" -> "1000448"  [label="AST: "];
"1000449" -> "1000451"  [label="CFG: "];
"1000450" -> "1000449"  [label="AST: "];
"1000451" -> "1000449"  [label="AST: "];
"1000454" -> "1000449"  [label="CFG: "];
"1000466" -> "1000449"  [label="CFG: "];
"1000449" -> "1000634"  [label="DDG: "];
"1000449" -> "1000634"  [label="DDG: "];
"1000449" -> "1000634"  [label="DDG: "];
"1000262" -> "1000449"  [label="DDG: "];
"1000130" -> "1000449"  [label="DDG: "];
"1000449" -> "1000537"  [label="DDG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000262" -> "1000264"  [label="CFG: "];
"1000263" -> "1000262"  [label="AST: "];
"1000264" -> "1000262"  [label="AST: "];
"1000270" -> "1000262"  [label="CFG: "];
"1000450" -> "1000262"  [label="CFG: "];
"1000262" -> "1000634"  [label="DDG: "];
"1000262" -> "1000634"  [label="DDG: "];
"1000262" -> "1000634"  [label="DDG: "];
"1000133" -> "1000262"  [label="DDG: "];
"1000130" -> "1000262"  [label="DDG: "];
"1000133" -> "1000129"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000129" -> "1000133"  [label="CFG: "];
"1000133" -> "1000634"  [label="DDG: "];
"1000133" -> "1000129"  [label="DDG: "];
"1000133" -> "1000129"  [label="DDG: "];
"1000130" -> "1000133"  [label="DDG: "];
"1000133" -> "1000138"  [label="DDG: "];
"1000133" -> "1000138"  [label="DDG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000134" -> "1000130"  [label="CFG: "];
"1000129" -> "1000130"  [label="CFG: "];
"1000130" -> "1000634"  [label="DDG: "];
"1000130" -> "1000129"  [label="DDG: "];
"1000130" -> "1000129"  [label="DDG: "];
"1000121" -> "1000130"  [label="DDG: "];
"1000130" -> "1000138"  [label="DDG: "];
"1000121" -> "1000114"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000131" -> "1000121"  [label="CFG: "];
"1000121" -> "1000634"  [label="DDG: "];
"1000123" -> "1000121"  [label="DDG: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000123" -> "1000634"  [label="DDG: "];
"1000123" -> "1000145"  [label="DDG: "];
"1000123" -> "1000208"  [label="DDG: "];
"1000123" -> "1000268"  [label="DDG: "];
"1000123" -> "1000464"  [label="DDG: "];
}
