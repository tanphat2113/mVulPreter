digraph "0_linux_0c17d1d2c61936401f4702e1846e2c19b200f958_0@pointer" {
"1000472" [label="(Call,insn->imm != 0)"];
"1000471" [label="(Call,insn->imm != 0 || insn->off != 0)"];
"1000550" [label="(Call,insn->imm == 0)"];
"1000543" [label="(Call,BPF_SRC(insn->code) == BPF_K && insn->imm == 0)"];
"1000535" [label="(Call,(opcode == BPF_MOD || opcode == BPF_DIV) &&\n\t\t    BPF_SRC(insn->code) == BPF_K && insn->imm == 0)"];
"1000563" [label="(Call,(opcode == BPF_LSH || opcode == BPF_RSH ||\n\t\t     opcode == BPF_ARSH) && BPF_SRC(insn->code) == BPF_K)"];
"1000596" [label="(Call,insn->imm < 0)"];
"1000595" [label="(Call,insn->imm < 0 || insn->imm >= size)"];
"1000601" [label="(Call,insn->imm >= size)"];
"1000607" [label="(Call,verbose(env, \"invalid shift %d\n\", insn->imm))"];
"1000479" [label="(Identifier,insn)"];
"1000600" [label="(Literal,0)"];
"1000609" [label="(Literal,\"invalid shift %d\n\")"];
"1000550" [label="(Call,insn->imm == 0)"];
"1000524" [label="(Call,check_reg_arg(env, insn->dst_reg, SRC_OP))"];
"1000112" [label="(MethodParameterIn,struct bpf_verifier_env *env)"];
"1000615" [label="(Identifier,EINVAL)"];
"1000603" [label="(Identifier,insn)"];
"1000617" [label="(Identifier,err)"];
"1000610" [label="(Call,insn->imm)"];
"1000605" [label="(Identifier,size)"];
"1000551" [label="(Call,insn->imm)"];
"1000562" [label="(ControlStructure,if ((opcode == BPF_LSH || opcode == BPF_RSH ||\n\t\t     opcode == BPF_ARSH) && BPF_SRC(insn->code) == BPF_K))"];
"1000472" [label="(Call,insn->imm != 0)"];
"1000543" [label="(Call,BPF_SRC(insn->code) == BPF_K && insn->imm == 0)"];
"1000477" [label="(Call,insn->off != 0)"];
"1000583" [label="(Call,size = BPF_CLASS(insn->code) == BPF_ALU64 ? 64 : 32)"];
"1000584" [label="(Identifier,size)"];
"1000476" [label="(Literal,0)"];
"1000471" [label="(Call,insn->imm != 0 || insn->off != 0)"];
"1000544" [label="(Call,BPF_SRC(insn->code) == BPF_K)"];
"1000575" [label="(Call,BPF_SRC(insn->code) == BPF_K)"];
"1000563" [label="(Call,(opcode == BPF_LSH || opcode == BPF_RSH ||\n\t\t     opcode == BPF_ARSH) && BPF_SRC(insn->code) == BPF_K)"];
"1000595" [label="(Call,insn->imm < 0 || insn->imm >= size)"];
"1000607" [label="(Call,verbose(env, \"invalid shift %d\n\", insn->imm))"];
"1000536" [label="(Call,opcode == BPF_MOD || opcode == BPF_DIV)"];
"1000473" [label="(Call,insn->imm)"];
"1000535" [label="(Call,(opcode == BPF_MOD || opcode == BPF_DIV) &&\n\t\t    BPF_SRC(insn->code) == BPF_K && insn->imm == 0)"];
"1000557" [label="(Identifier,env)"];
"1000594" [label="(ControlStructure,if (insn->imm < 0 || insn->imm >= size))"];
"1000602" [label="(Call,insn->imm)"];
"1000566" [label="(Identifier,opcode)"];
"1000596" [label="(Call,insn->imm < 0)"];
"1000608" [label="(Identifier,env)"];
"1000470" [label="(ControlStructure,if (insn->imm != 0 || insn->off != 0))"];
"1000534" [label="(ControlStructure,if ((opcode == BPF_MOD || opcode == BPF_DIV) &&\n\t\t    BPF_SRC(insn->code) == BPF_K && insn->imm == 0))"];
"1000634" [label="(MethodReturn,static int)"];
"1000597" [label="(Call,insn->imm)"];
"1000606" [label="(Block,)"];
"1000564" [label="(Call,opcode == BPF_LSH || opcode == BPF_RSH ||\n\t\t     opcode == BPF_ARSH)"];
"1000554" [label="(Literal,0)"];
"1000490" [label="(Identifier,err)"];
"1000484" [label="(Identifier,env)"];
"1000601" [label="(Call,insn->imm >= size)"];
"1000472" -> "1000471"  [label="AST: "];
"1000472" -> "1000476"  [label="CFG: "];
"1000473" -> "1000472"  [label="AST: "];
"1000476" -> "1000472"  [label="AST: "];
"1000479" -> "1000472"  [label="CFG: "];
"1000471" -> "1000472"  [label="CFG: "];
"1000472" -> "1000634"  [label="DDG: "];
"1000472" -> "1000471"  [label="DDG: "];
"1000472" -> "1000471"  [label="DDG: "];
"1000472" -> "1000550"  [label="DDG: "];
"1000472" -> "1000596"  [label="DDG: "];
"1000471" -> "1000470"  [label="AST: "];
"1000471" -> "1000477"  [label="CFG: "];
"1000477" -> "1000471"  [label="AST: "];
"1000484" -> "1000471"  [label="CFG: "];
"1000490" -> "1000471"  [label="CFG: "];
"1000471" -> "1000634"  [label="DDG: "];
"1000471" -> "1000634"  [label="DDG: "];
"1000471" -> "1000634"  [label="DDG: "];
"1000477" -> "1000471"  [label="DDG: "];
"1000477" -> "1000471"  [label="DDG: "];
"1000550" -> "1000543"  [label="AST: "];
"1000550" -> "1000554"  [label="CFG: "];
"1000551" -> "1000550"  [label="AST: "];
"1000554" -> "1000550"  [label="AST: "];
"1000543" -> "1000550"  [label="CFG: "];
"1000550" -> "1000634"  [label="DDG: "];
"1000550" -> "1000543"  [label="DDG: "];
"1000550" -> "1000543"  [label="DDG: "];
"1000550" -> "1000596"  [label="DDG: "];
"1000543" -> "1000535"  [label="AST: "];
"1000543" -> "1000544"  [label="CFG: "];
"1000544" -> "1000543"  [label="AST: "];
"1000535" -> "1000543"  [label="CFG: "];
"1000543" -> "1000634"  [label="DDG: "];
"1000543" -> "1000634"  [label="DDG: "];
"1000543" -> "1000535"  [label="DDG: "];
"1000543" -> "1000535"  [label="DDG: "];
"1000544" -> "1000543"  [label="DDG: "];
"1000544" -> "1000543"  [label="DDG: "];
"1000543" -> "1000563"  [label="DDG: "];
"1000535" -> "1000534"  [label="AST: "];
"1000535" -> "1000536"  [label="CFG: "];
"1000536" -> "1000535"  [label="AST: "];
"1000557" -> "1000535"  [label="CFG: "];
"1000566" -> "1000535"  [label="CFG: "];
"1000535" -> "1000634"  [label="DDG: "];
"1000535" -> "1000634"  [label="DDG: "];
"1000535" -> "1000634"  [label="DDG: "];
"1000536" -> "1000535"  [label="DDG: "];
"1000536" -> "1000535"  [label="DDG: "];
"1000563" -> "1000562"  [label="AST: "];
"1000563" -> "1000564"  [label="CFG: "];
"1000563" -> "1000575"  [label="CFG: "];
"1000564" -> "1000563"  [label="AST: "];
"1000575" -> "1000563"  [label="AST: "];
"1000584" -> "1000563"  [label="CFG: "];
"1000617" -> "1000563"  [label="CFG: "];
"1000563" -> "1000634"  [label="DDG: "];
"1000563" -> "1000634"  [label="DDG: "];
"1000563" -> "1000634"  [label="DDG: "];
"1000564" -> "1000563"  [label="DDG: "];
"1000564" -> "1000563"  [label="DDG: "];
"1000575" -> "1000563"  [label="DDG: "];
"1000575" -> "1000563"  [label="DDG: "];
"1000596" -> "1000595"  [label="AST: "];
"1000596" -> "1000600"  [label="CFG: "];
"1000597" -> "1000596"  [label="AST: "];
"1000600" -> "1000596"  [label="AST: "];
"1000603" -> "1000596"  [label="CFG: "];
"1000595" -> "1000596"  [label="CFG: "];
"1000596" -> "1000634"  [label="DDG: "];
"1000596" -> "1000595"  [label="DDG: "];
"1000596" -> "1000595"  [label="DDG: "];
"1000596" -> "1000601"  [label="DDG: "];
"1000596" -> "1000607"  [label="DDG: "];
"1000595" -> "1000594"  [label="AST: "];
"1000595" -> "1000601"  [label="CFG: "];
"1000601" -> "1000595"  [label="AST: "];
"1000608" -> "1000595"  [label="CFG: "];
"1000617" -> "1000595"  [label="CFG: "];
"1000595" -> "1000634"  [label="DDG: "];
"1000595" -> "1000634"  [label="DDG: "];
"1000595" -> "1000634"  [label="DDG: "];
"1000601" -> "1000595"  [label="DDG: "];
"1000601" -> "1000595"  [label="DDG: "];
"1000601" -> "1000605"  [label="CFG: "];
"1000602" -> "1000601"  [label="AST: "];
"1000605" -> "1000601"  [label="AST: "];
"1000601" -> "1000634"  [label="DDG: "];
"1000601" -> "1000634"  [label="DDG: "];
"1000583" -> "1000601"  [label="DDG: "];
"1000601" -> "1000607"  [label="DDG: "];
"1000607" -> "1000606"  [label="AST: "];
"1000607" -> "1000610"  [label="CFG: "];
"1000608" -> "1000607"  [label="AST: "];
"1000609" -> "1000607"  [label="AST: "];
"1000610" -> "1000607"  [label="AST: "];
"1000615" -> "1000607"  [label="CFG: "];
"1000607" -> "1000634"  [label="DDG: "];
"1000607" -> "1000634"  [label="DDG: "];
"1000607" -> "1000634"  [label="DDG: "];
"1000524" -> "1000607"  [label="DDG: "];
"1000112" -> "1000607"  [label="DDG: "];
}
