digraph "0_linux_0c17d1d2c61936401f4702e1846e2c19b200f958_0@pointer" {
"1000516" [label="(Call,verbose(env, \"BPF_ALU uses reserved fields\n\"))"];
"1000118" [label="(Call,cur_regs(env))"];
"1000112" [label="(MethodParameterIn,struct bpf_verifier_env *env)"];
"1000168" [label="(Call,verbose(env, \"BPF_NEG uses reserved fields\n\"))"];
"1000287" [label="(Call,verbose(env, \"BPF_MOV uses reserved fields\n\"))"];
"1000524" [label="(Call,check_reg_arg(env, insn->dst_reg, SRC_OP))"];
"1000112" [label="(MethodParameterIn,struct bpf_verifier_env *env)"];
"1000516" [label="(Call,verbose(env, \"BPF_ALU uses reserved fields\n\"))"];
"1000119" [label="(Identifier,env)"];
"1000618" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP_NO_MARK))"];
"1000556" [label="(Call,verbose(env, \"div by zero\n\"))"];
"1000515" [label="(Block,)"];
"1000320" [label="(Call,verbose(env, \"BPF_MOV uses reserved fields\n\"))"];
"1000328" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP))"];
"1000491" [label="(Call,check_reg_arg(env, insn->src_reg, SRC_OP))"];
"1000483" [label="(Call,verbose(env, \"BPF_ALU uses reserved fields\n\"))"];
"1000518" [label="(Literal,\"BPF_ALU uses reserved fields\n\")"];
"1000453" [label="(Call,verbose(env, \"invalid BPF_ALU opcode %x\n\", opcode))"];
"1000233" [label="(Call,is_pointer_value(env, insn->dst_reg))"];
"1000521" [label="(Identifier,EINVAL)"];
"1000239" [label="(Call,verbose(env, \"R%d pointer arithmetic prohibited\n\",\n\t\t\t\tinsn->dst_reg))"];
"1000517" [label="(Identifier,env)"];
"1000377" [label="(Call,is_pointer_value(env, insn->src_reg))"];
"1000383" [label="(Call,verbose(env,\n\t\t\t\t\t\t\"R%d partial copy of pointer\n\",\n\t\t\t\t\t\tinsn->src_reg))"];
"1000607" [label="(Call,verbose(env, \"invalid shift %d\n\", insn->imm))"];
"1000295" [label="(Call,check_reg_arg(env, insn->src_reg, SRC_OP))"];
"1000250" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP))"];
"1000629" [label="(Call,adjust_reg_min_max_vals(env, insn))"];
"1000116" [label="(Call,*regs = cur_regs(env))"];
"1000222" [label="(Call,check_reg_arg(env, insn->dst_reg, SRC_OP))"];
"1000634" [label="(MethodReturn,static int)"];
"1000118" [label="(Call,cur_regs(env))"];
"1000392" [label="(Call,mark_reg_unknown(env, regs, insn->dst_reg))"];
"1000214" [label="(Call,verbose(env, \"BPF_END uses reserved fields\n\"))"];
"1000516" -> "1000515"  [label="AST: "];
"1000516" -> "1000518"  [label="CFG: "];
"1000517" -> "1000516"  [label="AST: "];
"1000518" -> "1000516"  [label="AST: "];
"1000521" -> "1000516"  [label="CFG: "];
"1000516" -> "1000634"  [label="DDG: "];
"1000516" -> "1000634"  [label="DDG: "];
"1000118" -> "1000516"  [label="DDG: "];
"1000112" -> "1000516"  [label="DDG: "];
"1000118" -> "1000116"  [label="AST: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000118" -> "1000116"  [label="DDG: "];
"1000112" -> "1000118"  [label="DDG: "];
"1000118" -> "1000168"  [label="DDG: "];
"1000118" -> "1000214"  [label="DDG: "];
"1000118" -> "1000222"  [label="DDG: "];
"1000118" -> "1000287"  [label="DDG: "];
"1000118" -> "1000295"  [label="DDG: "];
"1000118" -> "1000320"  [label="DDG: "];
"1000118" -> "1000328"  [label="DDG: "];
"1000118" -> "1000453"  [label="DDG: "];
"1000118" -> "1000483"  [label="DDG: "];
"1000118" -> "1000491"  [label="DDG: "];
"1000118" -> "1000524"  [label="DDG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000112" -> "1000634"  [label="DDG: "];
"1000112" -> "1000168"  [label="DDG: "];
"1000112" -> "1000214"  [label="DDG: "];
"1000112" -> "1000222"  [label="DDG: "];
"1000112" -> "1000233"  [label="DDG: "];
"1000112" -> "1000239"  [label="DDG: "];
"1000112" -> "1000250"  [label="DDG: "];
"1000112" -> "1000287"  [label="DDG: "];
"1000112" -> "1000295"  [label="DDG: "];
"1000112" -> "1000320"  [label="DDG: "];
"1000112" -> "1000328"  [label="DDG: "];
"1000112" -> "1000377"  [label="DDG: "];
"1000112" -> "1000383"  [label="DDG: "];
"1000112" -> "1000392"  [label="DDG: "];
"1000112" -> "1000453"  [label="DDG: "];
"1000112" -> "1000483"  [label="DDG: "];
"1000112" -> "1000491"  [label="DDG: "];
"1000112" -> "1000524"  [label="DDG: "];
"1000112" -> "1000556"  [label="DDG: "];
"1000112" -> "1000607"  [label="DDG: "];
"1000112" -> "1000618"  [label="DDG: "];
"1000112" -> "1000629"  [label="DDG: "];
}
