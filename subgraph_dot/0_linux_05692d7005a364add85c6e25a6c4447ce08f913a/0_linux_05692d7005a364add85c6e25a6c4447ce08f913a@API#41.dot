digraph "0_linux_05692d7005a364add85c6e25a6c4447ce08f913a@API" {
"1001234" [label="(Call,hdr.count * sizeof(*group_fds))"];
"1001204" [label="(Call,kcalloc(hdr.count, sizeof(*groups), GFP_KERNEL))"];
"1001194" [label="(Call,kcalloc(hdr.count, sizeof(*group_fds), GFP_KERNEL))"];
"1001184" [label="(Call,hdr.count > count)"];
"1001180" [label="(Call,!hdr.count)"];
"1001111" [label="(Call,count = 0)"];
"1001227" [label="(Call,copy_from_user(group_fds, (void __user *)(arg + minsz),\n\t\t\t\t   hdr.count * sizeof(*group_fds)))"];
"1001242" [label="(Call,kfree(group_fds))"];
"1001265" [label="(Call,fdget(group_fds[i]))"];
"1001263" [label="(Call,f = fdget(group_fds[i]))"];
"1001270" [label="(Call,!f.file)"];
"1001282" [label="(Call,vfio_group_get_external_user(f.file))"];
"1001280" [label="(Call,group = vfio_group_get_external_user(f.file))"];
"1001289" [label="(Call,IS_ERR(group))"];
"1001294" [label="(Call,PTR_ERR(group))"];
"1001292" [label="(Call,ret = PTR_ERR(group))"];
"1001375" [label="(Return,return ret;)"];
"1001297" [label="(Call,groups[i].group = group)"];
"1001367" [label="(Call,vfio_group_put_external_user(groups[i].group))"];
"1001310" [label="(Call,vfio_external_user_iommu_id(group))"];
"1001304" [label="(Call,groups[i].id = vfio_external_user_iommu_id(group))"];
"1001286" [label="(Call,fdput(f))"];
"1001312" [label="(Call,kfree(group_fds))"];
"1001253" [label="(Call,i < hdr.count)"];
"1001258" [label="(Call,i++)"];
"1001317" [label="(Call,info.count = hdr.count)"];
"1001360" [label="(Call,i--)"];
"1001362" [label="(Call,i >= 0)"];
"1001365" [label="(Call,i--)"];
"1001375" [label="(Return,return ret;)"];
"1001293" [label="(Identifier,ret)"];
"1001198" [label="(Call,sizeof(*group_fds))"];
"1001303" [label="(Identifier,group)"];
"1001205" [label="(Call,hdr.count)"];
"1001365" [label="(Call,i--)"];
"1001226" [label="(ControlStructure,if (copy_from_user(group_fds, (void __user *)(arg + minsz),\n\t\t\t\t   hdr.count * sizeof(*group_fds))))"];
"1001229" [label="(Call,(void __user *)(arg + minsz))"];
"1001360" [label="(Call,i--)"];
"1001185" [label="(Call,hdr.count)"];
"1001275" [label="(Call,ret = -EBADF)"];
"1001321" [label="(Call,hdr.count)"];
"1001258" [label="(Call,i++)"];
"1001280" [label="(Call,group = vfio_group_get_external_user(f.file))"];
"1001211" [label="(Identifier,GFP_KERNEL)"];
"1001376" [label="(Identifier,ret)"];
"1001271" [label="(Call,f.file)"];
"1001362" [label="(Call,i >= 0)"];
"1001181" [label="(Call,hdr.count)"];
"1001296" [label="(ControlStructure,break;)"];
"1001227" [label="(Call,copy_from_user(group_fds, (void __user *)(arg + minsz),\n\t\t\t\t   hdr.count * sizeof(*group_fds)))"];
"1001270" [label="(Call,!f.file)"];
"1001112" [label="(Identifier,count)"];
"1001340" [label="(Call,!ret)"];
"1001283" [label="(Call,f.file)"];
"1001214" [label="(Call,!group_fds)"];
"1001289" [label="(Call,IS_ERR(group))"];
"1001315" [label="(Identifier,ret)"];
"1001291" [label="(Block,)"];
"1001184" [label="(Call,hdr.count > count)"];
"1001241" [label="(Block,)"];
"1001254" [label="(Identifier,i)"];
"1001243" [label="(Identifier,group_fds)"];
"1001380" [label="(MethodReturn,static long)"];
"1001194" [label="(Call,kcalloc(hdr.count, sizeof(*group_fds), GFP_KERNEL))"];
"1001250" [label="(Call,i = 0)"];
"1001317" [label="(Call,info.count = hdr.count)"];
"1001370" [label="(Identifier,groups)"];
"1001249" [label="(ControlStructure,for (i = 0; i < hdr.count; i++))"];
"1001312" [label="(Call,kfree(group_fds))"];
"1001253" [label="(Call,i < hdr.count)"];
"1001359" [label="(ControlStructure,for (i--; i >= 0; i--))"];
"1001272" [label="(Identifier,f)"];
"1001281" [label="(Identifier,group)"];
"1001326" [label="(Identifier,info)"];
"1001235" [label="(Call,hdr.count)"];
"1001208" [label="(Call,sizeof(*groups))"];
"1001255" [label="(Call,hdr.count)"];
"1001179" [label="(Call,!hdr.count || hdr.count > count)"];
"1001374" [label="(Identifier,groups)"];
"1001116" [label="(Identifier,ret)"];
"1001263" [label="(Call,f = fdget(group_fds[i]))"];
"1001192" [label="(Call,group_fds = kcalloc(hdr.count, sizeof(*group_fds), GFP_KERNEL))"];
"1001276" [label="(Identifier,ret)"];
"1001290" [label="(Identifier,group)"];
"1001242" [label="(Call,kfree(group_fds))"];
"1001364" [label="(Literal,0)"];
"1001201" [label="(Identifier,GFP_KERNEL)"];
"1001298" [label="(Call,groups[i].group)"];
"1001204" [label="(Call,kcalloc(hdr.count, sizeof(*groups), GFP_KERNEL))"];
"1001100" [label="(Block,)"];
"1001342" [label="(Call,ret = slot ? pci_try_reset_slot(vdev->pdev->slot) :\n\t\t\t\t     pci_try_reset_bus(vdev->pdev->bus))"];
"1001307" [label="(Identifier,groups)"];
"1001238" [label="(Call,sizeof(*group_fds))"];
"1001287" [label="(Identifier,f)"];
"1001361" [label="(Identifier,i)"];
"1001311" [label="(Identifier,group)"];
"1001363" [label="(Identifier,i)"];
"1001294" [label="(Call,PTR_ERR(group))"];
"1001195" [label="(Call,hdr.count)"];
"1001367" [label="(Call,vfio_group_put_external_user(groups[i].group))"];
"1001260" [label="(Block,)"];
"1001228" [label="(Identifier,group_fds)"];
"1001269" [label="(ControlStructure,if (!f.file))"];
"1001186" [label="(Identifier,hdr)"];
"1001318" [label="(Call,info.count)"];
"1001259" [label="(Identifier,i)"];
"1001180" [label="(Call,!hdr.count)"];
"1001305" [label="(Call,groups[i].id)"];
"1001313" [label="(Identifier,group_fds)"];
"1001292" [label="(Call,ret = PTR_ERR(group))"];
"1001251" [label="(Identifier,i)"];
"1001164" [label="(Call,ret = vfio_pci_for_each_slot_or_bus(vdev->pdev,\n\t\t\t\t\t\t    vfio_pci_count_devs,\n\t\t\t\t\t\t    &count, slot))"];
"1001295" [label="(Identifier,group)"];
"1001297" [label="(Call,groups[i].group = group)"];
"1001234" [label="(Call,hdr.count * sizeof(*group_fds))"];
"1001264" [label="(Identifier,f)"];
"1001245" [label="(Identifier,groups)"];
"1001300" [label="(Identifier,groups)"];
"1001282" [label="(Call,vfio_group_get_external_user(f.file))"];
"1001265" [label="(Call,fdget(group_fds[i]))"];
"1001310" [label="(Call,vfio_external_user_iommu_id(group))"];
"1001188" [label="(Identifier,count)"];
"1001266" [label="(Call,group_fds[i])"];
"1001368" [label="(Call,groups[i].group)"];
"1001304" [label="(Call,groups[i].id = vfio_external_user_iommu_id(group))"];
"1001202" [label="(Call,groups = kcalloc(hdr.count, sizeof(*groups), GFP_KERNEL))"];
"1001111" [label="(Call,count = 0)"];
"1001286" [label="(Call,fdput(f))"];
"1001366" [label="(Identifier,i)"];
"1001113" [label="(Literal,0)"];
"1001288" [label="(ControlStructure,if (IS_ERR(group)))"];
"1001234" -> "1001227"  [label="AST: "];
"1001234" -> "1001238"  [label="CFG: "];
"1001235" -> "1001234"  [label="AST: "];
"1001238" -> "1001234"  [label="AST: "];
"1001227" -> "1001234"  [label="CFG: "];
"1001234" -> "1001380"  [label="DDG: hdr.count"];
"1001234" -> "1001227"  [label="DDG: hdr.count"];
"1001204" -> "1001234"  [label="DDG: hdr.count"];
"1001234" -> "1001253"  [label="DDG: hdr.count"];
"1001204" -> "1001202"  [label="AST: "];
"1001204" -> "1001211"  [label="CFG: "];
"1001205" -> "1001204"  [label="AST: "];
"1001208" -> "1001204"  [label="AST: "];
"1001211" -> "1001204"  [label="AST: "];
"1001202" -> "1001204"  [label="CFG: "];
"1001204" -> "1001380"  [label="DDG: hdr.count"];
"1001204" -> "1001380"  [label="DDG: GFP_KERNEL"];
"1001204" -> "1001202"  [label="DDG: hdr.count"];
"1001204" -> "1001202"  [label="DDG: GFP_KERNEL"];
"1001194" -> "1001204"  [label="DDG: hdr.count"];
"1001194" -> "1001204"  [label="DDG: GFP_KERNEL"];
"1001194" -> "1001192"  [label="AST: "];
"1001194" -> "1001201"  [label="CFG: "];
"1001195" -> "1001194"  [label="AST: "];
"1001198" -> "1001194"  [label="AST: "];
"1001201" -> "1001194"  [label="AST: "];
"1001192" -> "1001194"  [label="CFG: "];
"1001194" -> "1001192"  [label="DDG: hdr.count"];
"1001194" -> "1001192"  [label="DDG: GFP_KERNEL"];
"1001184" -> "1001194"  [label="DDG: hdr.count"];
"1001180" -> "1001194"  [label="DDG: hdr.count"];
"1001184" -> "1001179"  [label="AST: "];
"1001184" -> "1001188"  [label="CFG: "];
"1001185" -> "1001184"  [label="AST: "];
"1001188" -> "1001184"  [label="AST: "];
"1001179" -> "1001184"  [label="CFG: "];
"1001184" -> "1001380"  [label="DDG: count"];
"1001184" -> "1001380"  [label="DDG: hdr.count"];
"1001184" -> "1001179"  [label="DDG: hdr.count"];
"1001184" -> "1001179"  [label="DDG: count"];
"1001180" -> "1001184"  [label="DDG: hdr.count"];
"1001111" -> "1001184"  [label="DDG: count"];
"1001180" -> "1001179"  [label="AST: "];
"1001180" -> "1001181"  [label="CFG: "];
"1001181" -> "1001180"  [label="AST: "];
"1001186" -> "1001180"  [label="CFG: "];
"1001179" -> "1001180"  [label="CFG: "];
"1001180" -> "1001380"  [label="DDG: hdr.count"];
"1001180" -> "1001179"  [label="DDG: hdr.count"];
"1001111" -> "1001100"  [label="AST: "];
"1001111" -> "1001113"  [label="CFG: "];
"1001112" -> "1001111"  [label="AST: "];
"1001113" -> "1001111"  [label="AST: "];
"1001116" -> "1001111"  [label="CFG: "];
"1001111" -> "1001380"  [label="DDG: count"];
"1001227" -> "1001226"  [label="AST: "];
"1001228" -> "1001227"  [label="AST: "];
"1001229" -> "1001227"  [label="AST: "];
"1001243" -> "1001227"  [label="CFG: "];
"1001251" -> "1001227"  [label="CFG: "];
"1001227" -> "1001380"  [label="DDG: (void __user *)(arg + minsz)"];
"1001227" -> "1001380"  [label="DDG: copy_from_user(group_fds, (void __user *)(arg + minsz),\n\t\t\t\t   hdr.count * sizeof(*group_fds))"];
"1001227" -> "1001380"  [label="DDG: hdr.count * sizeof(*group_fds)"];
"1001214" -> "1001227"  [label="DDG: group_fds"];
"1001229" -> "1001227"  [label="DDG: arg + minsz"];
"1001227" -> "1001242"  [label="DDG: group_fds"];
"1001227" -> "1001265"  [label="DDG: group_fds"];
"1001227" -> "1001312"  [label="DDG: group_fds"];
"1001242" -> "1001241"  [label="AST: "];
"1001242" -> "1001243"  [label="CFG: "];
"1001243" -> "1001242"  [label="AST: "];
"1001245" -> "1001242"  [label="CFG: "];
"1001242" -> "1001380"  [label="DDG: group_fds"];
"1001242" -> "1001380"  [label="DDG: kfree(group_fds)"];
"1001265" -> "1001263"  [label="AST: "];
"1001265" -> "1001266"  [label="CFG: "];
"1001266" -> "1001265"  [label="AST: "];
"1001263" -> "1001265"  [label="CFG: "];
"1001265" -> "1001380"  [label="DDG: group_fds[i]"];
"1001265" -> "1001263"  [label="DDG: group_fds[i]"];
"1001265" -> "1001312"  [label="DDG: group_fds[i]"];
"1001263" -> "1001260"  [label="AST: "];
"1001264" -> "1001263"  [label="AST: "];
"1001272" -> "1001263"  [label="CFG: "];
"1001263" -> "1001380"  [label="DDG: fdget(group_fds[i])"];
"1001263" -> "1001380"  [label="DDG: f"];
"1001263" -> "1001270"  [label="DDG: f"];
"1001263" -> "1001282"  [label="DDG: f"];
"1001263" -> "1001286"  [label="DDG: f"];
"1001270" -> "1001269"  [label="AST: "];
"1001270" -> "1001271"  [label="CFG: "];
"1001271" -> "1001270"  [label="AST: "];
"1001276" -> "1001270"  [label="CFG: "];
"1001281" -> "1001270"  [label="CFG: "];
"1001270" -> "1001380"  [label="DDG: !f.file"];
"1001270" -> "1001380"  [label="DDG: f.file"];
"1001282" -> "1001270"  [label="DDG: f.file"];
"1001270" -> "1001282"  [label="DDG: f.file"];
"1001282" -> "1001280"  [label="AST: "];
"1001282" -> "1001283"  [label="CFG: "];
"1001283" -> "1001282"  [label="AST: "];
"1001280" -> "1001282"  [label="CFG: "];
"1001282" -> "1001380"  [label="DDG: f.file"];
"1001282" -> "1001280"  [label="DDG: f.file"];
"1001282" -> "1001286"  [label="DDG: f.file"];
"1001280" -> "1001260"  [label="AST: "];
"1001281" -> "1001280"  [label="AST: "];
"1001287" -> "1001280"  [label="CFG: "];
"1001280" -> "1001380"  [label="DDG: vfio_group_get_external_user(f.file)"];
"1001280" -> "1001289"  [label="DDG: group"];
"1001289" -> "1001288"  [label="AST: "];
"1001289" -> "1001290"  [label="CFG: "];
"1001290" -> "1001289"  [label="AST: "];
"1001293" -> "1001289"  [label="CFG: "];
"1001300" -> "1001289"  [label="CFG: "];
"1001289" -> "1001380"  [label="DDG: IS_ERR(group)"];
"1001289" -> "1001294"  [label="DDG: group"];
"1001289" -> "1001297"  [label="DDG: group"];
"1001289" -> "1001310"  [label="DDG: group"];
"1001294" -> "1001292"  [label="AST: "];
"1001294" -> "1001295"  [label="CFG: "];
"1001295" -> "1001294"  [label="AST: "];
"1001292" -> "1001294"  [label="CFG: "];
"1001294" -> "1001380"  [label="DDG: group"];
"1001294" -> "1001292"  [label="DDG: group"];
"1001292" -> "1001291"  [label="AST: "];
"1001293" -> "1001292"  [label="AST: "];
"1001296" -> "1001292"  [label="CFG: "];
"1001292" -> "1001380"  [label="DDG: PTR_ERR(group)"];
"1001292" -> "1001380"  [label="DDG: ret"];
"1001292" -> "1001375"  [label="DDG: ret"];
"1001375" -> "1001100"  [label="AST: "];
"1001375" -> "1001376"  [label="CFG: "];
"1001376" -> "1001375"  [label="AST: "];
"1001380" -> "1001375"  [label="CFG: "];
"1001375" -> "1001380"  [label="DDG: <RET>"];
"1001376" -> "1001375"  [label="DDG: ret"];
"1001164" -> "1001375"  [label="DDG: ret"];
"1001340" -> "1001375"  [label="DDG: ret"];
"1001342" -> "1001375"  [label="DDG: ret"];
"1001275" -> "1001375"  [label="DDG: ret"];
"1001297" -> "1001260"  [label="AST: "];
"1001297" -> "1001303"  [label="CFG: "];
"1001298" -> "1001297"  [label="AST: "];
"1001303" -> "1001297"  [label="AST: "];
"1001307" -> "1001297"  [label="CFG: "];
"1001297" -> "1001380"  [label="DDG: groups[i].group"];
"1001297" -> "1001367"  [label="DDG: groups[i].group"];
"1001367" -> "1001359"  [label="AST: "];
"1001367" -> "1001368"  [label="CFG: "];
"1001368" -> "1001367"  [label="AST: "];
"1001366" -> "1001367"  [label="CFG: "];
"1001367" -> "1001380"  [label="DDG: vfio_group_put_external_user(groups[i].group)"];
"1001367" -> "1001380"  [label="DDG: groups[i].group"];
"1001310" -> "1001304"  [label="AST: "];
"1001310" -> "1001311"  [label="CFG: "];
"1001311" -> "1001310"  [label="AST: "];
"1001304" -> "1001310"  [label="CFG: "];
"1001310" -> "1001380"  [label="DDG: group"];
"1001310" -> "1001304"  [label="DDG: group"];
"1001304" -> "1001260"  [label="AST: "];
"1001305" -> "1001304"  [label="AST: "];
"1001259" -> "1001304"  [label="CFG: "];
"1001304" -> "1001380"  [label="DDG: vfio_external_user_iommu_id(group)"];
"1001304" -> "1001380"  [label="DDG: groups[i].id"];
"1001286" -> "1001260"  [label="AST: "];
"1001286" -> "1001287"  [label="CFG: "];
"1001287" -> "1001286"  [label="AST: "];
"1001290" -> "1001286"  [label="CFG: "];
"1001286" -> "1001380"  [label="DDG: fdput(f)"];
"1001286" -> "1001380"  [label="DDG: f"];
"1001312" -> "1001100"  [label="AST: "];
"1001312" -> "1001313"  [label="CFG: "];
"1001313" -> "1001312"  [label="AST: "];
"1001315" -> "1001312"  [label="CFG: "];
"1001312" -> "1001380"  [label="DDG: kfree(group_fds)"];
"1001312" -> "1001380"  [label="DDG: group_fds"];
"1001253" -> "1001249"  [label="AST: "];
"1001253" -> "1001255"  [label="CFG: "];
"1001254" -> "1001253"  [label="AST: "];
"1001255" -> "1001253"  [label="AST: "];
"1001264" -> "1001253"  [label="CFG: "];
"1001313" -> "1001253"  [label="CFG: "];
"1001253" -> "1001380"  [label="DDG: i < hdr.count"];
"1001253" -> "1001380"  [label="DDG: hdr.count"];
"1001250" -> "1001253"  [label="DDG: i"];
"1001258" -> "1001253"  [label="DDG: i"];
"1001253" -> "1001258"  [label="DDG: i"];
"1001253" -> "1001317"  [label="DDG: hdr.count"];
"1001253" -> "1001360"  [label="DDG: i"];
"1001258" -> "1001249"  [label="AST: "];
"1001258" -> "1001259"  [label="CFG: "];
"1001259" -> "1001258"  [label="AST: "];
"1001254" -> "1001258"  [label="CFG: "];
"1001317" -> "1001100"  [label="AST: "];
"1001317" -> "1001321"  [label="CFG: "];
"1001318" -> "1001317"  [label="AST: "];
"1001321" -> "1001317"  [label="AST: "];
"1001326" -> "1001317"  [label="CFG: "];
"1001317" -> "1001380"  [label="DDG: info.count"];
"1001317" -> "1001380"  [label="DDG: hdr.count"];
"1001360" -> "1001359"  [label="AST: "];
"1001360" -> "1001361"  [label="CFG: "];
"1001361" -> "1001360"  [label="AST: "];
"1001363" -> "1001360"  [label="CFG: "];
"1001360" -> "1001362"  [label="DDG: i"];
"1001362" -> "1001359"  [label="AST: "];
"1001362" -> "1001364"  [label="CFG: "];
"1001363" -> "1001362"  [label="AST: "];
"1001364" -> "1001362"  [label="AST: "];
"1001370" -> "1001362"  [label="CFG: "];
"1001374" -> "1001362"  [label="CFG: "];
"1001362" -> "1001380"  [label="DDG: i"];
"1001362" -> "1001380"  [label="DDG: i >= 0"];
"1001365" -> "1001362"  [label="DDG: i"];
"1001362" -> "1001365"  [label="DDG: i"];
"1001365" -> "1001359"  [label="AST: "];
"1001365" -> "1001366"  [label="CFG: "];
"1001366" -> "1001365"  [label="AST: "];
"1001363" -> "1001365"  [label="CFG: "];
}
