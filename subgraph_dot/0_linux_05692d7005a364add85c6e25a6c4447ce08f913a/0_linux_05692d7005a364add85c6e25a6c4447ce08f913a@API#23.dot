digraph "0_linux_05692d7005a364add85c6e25a6c4447ce08f913a@API" {
"1001119" [label="(Call,copy_from_user(&hdr, (void __user *)arg, minsz))"];
"1001122" [label="(Call,(void __user *)arg)"];
"1000119" [label="(MethodParameterIn,unsigned long arg)"];
"1001131" [label="(Call,hdr.argsz < minsz)"];
"1001130" [label="(Call,hdr.argsz < minsz || hdr.flags)"];
"1001229" [label="(Call,(void __user *)(arg + minsz))"];
"1001227" [label="(Call,copy_from_user(group_fds, (void __user *)(arg + minsz),\n\t\t\t\t   hdr.count * sizeof(*group_fds)))"];
"1001242" [label="(Call,kfree(group_fds))"];
"1001265" [label="(Call,fdget(group_fds[i]))"];
"1001263" [label="(Call,f = fdget(group_fds[i]))"];
"1001270" [label="(Call,!f.file)"];
"1001282" [label="(Call,vfio_group_get_external_user(f.file))"];
"1001280" [label="(Call,group = vfio_group_get_external_user(f.file))"];
"1001289" [label="(Call,IS_ERR(group))"];
"1001294" [label="(Call,PTR_ERR(group))"];
"1001292" [label="(Call,ret = PTR_ERR(group))"];
"1001375" [label="(Return,return ret;)"];
"1001297" [label="(Call,groups[i].group = group)"];
"1001367" [label="(Call,vfio_group_put_external_user(groups[i].group))"];
"1001310" [label="(Call,vfio_external_user_iommu_id(group))"];
"1001304" [label="(Call,groups[i].id = vfio_external_user_iommu_id(group))"];
"1001286" [label="(Call,fdput(f))"];
"1001312" [label="(Call,kfree(group_fds))"];
"1001231" [label="(Call,arg + minsz)"];
"1000716" [label="(Call,(void __user *)arg)"];
"1001232" [label="(Identifier,arg)"];
"1000609" [label="(Call,(void __user *)arg)"];
"1001122" [label="(Call,(void __user *)arg)"];
"1000686" [label="(Call,(void __user *)arg)"];
"1001375" [label="(Return,return ret;)"];
"1001293" [label="(Identifier,ret)"];
"1001074" [label="(Call,(void __user *)(arg + minsz))"];
"1001303" [label="(Identifier,group)"];
"1000834" [label="(Call,arg + minsz)"];
"1001229" [label="(Call,(void __user *)(arg + minsz))"];
"1000557" [label="(Call,(void __user *)arg)"];
"1001226" [label="(ControlStructure,if (copy_from_user(group_fds, (void __user *)(arg + minsz),\n\t\t\t\t   hdr.count * sizeof(*group_fds))))"];
"1001275" [label="(Call,ret = -EBADF)"];
"1001280" [label="(Call,group = vfio_group_get_external_user(f.file))"];
"1001376" [label="(Identifier,ret)"];
"1001271" [label="(Call,f.file)"];
"1001120" [label="(Call,&hdr)"];
"1000183" [label="(Call,(void __user *)arg)"];
"1001296" [label="(ControlStructure,break;)"];
"1001227" [label="(Call,copy_from_user(group_fds, (void __user *)(arg + minsz),\n\t\t\t\t   hdr.count * sizeof(*group_fds)))"];
"1001270" [label="(Call,!f.file)"];
"1001141" [label="(Identifier,EINVAL)"];
"1001340" [label="(Call,!ret)"];
"1001283" [label="(Call,f.file)"];
"1001214" [label="(Call,!group_fds)"];
"1001236" [label="(Identifier,hdr)"];
"1001289" [label="(Call,IS_ERR(group))"];
"1001315" [label="(Identifier,ret)"];
"1001147" [label="(Identifier,vdev)"];
"1001291" [label="(Block,)"];
"1001241" [label="(Block,)"];
"1001243" [label="(Identifier,group_fds)"];
"1001380" [label="(MethodReturn,static long)"];
"1000832" [label="(Call,(void __user *)(arg + minsz))"];
"1001233" [label="(Identifier,minsz)"];
"1000119" [label="(MethodParameterIn,unsigned long arg)"];
"1001135" [label="(Identifier,minsz)"];
"1001312" [label="(Call,kfree(group_fds))"];
"1001359" [label="(ControlStructure,for (i--; i >= 0; i--))"];
"1001272" [label="(Identifier,f)"];
"1001125" [label="(Identifier,minsz)"];
"1001281" [label="(Identifier,group)"];
"1001132" [label="(Call,hdr.argsz)"];
"1001263" [label="(Call,f = fdget(group_fds[i]))"];
"1001276" [label="(Identifier,ret)"];
"1001290" [label="(Identifier,group)"];
"1001242" [label="(Call,kfree(group_fds))"];
"1000136" [label="(Call,(void __user *)arg)"];
"1001298" [label="(Call,groups[i].group)"];
"1001128" [label="(Identifier,EFAULT)"];
"1001100" [label="(Block,)"];
"1001342" [label="(Call,ret = slot ? pci_try_reset_slot(vdev->pdev->slot) :\n\t\t\t\t     pci_try_reset_bus(vdev->pdev->bus))"];
"1001307" [label="(Identifier,groups)"];
"1000212" [label="(Call,(void __user *)arg)"];
"1001287" [label="(Identifier,f)"];
"1001118" [label="(ControlStructure,if (copy_from_user(&hdr, (void __user *)arg, minsz)))"];
"1001231" [label="(Call,arg + minsz)"];
"1001311" [label="(Identifier,group)"];
"1001294" [label="(Call,PTR_ERR(group))"];
"1001137" [label="(Identifier,hdr)"];
"1001367" [label="(Call,vfio_group_put_external_user(groups[i].group))"];
"1001260" [label="(Block,)"];
"1001133" [label="(Identifier,hdr)"];
"1001228" [label="(Identifier,group_fds)"];
"1001269" [label="(ControlStructure,if (!f.file))"];
"1001131" [label="(Call,hdr.argsz < minsz)"];
"1001259" [label="(Identifier,i)"];
"1001305" [label="(Call,groups[i].id)"];
"1001313" [label="(Identifier,group_fds)"];
"1001292" [label="(Call,ret = PTR_ERR(group))"];
"1001251" [label="(Identifier,i)"];
"1001164" [label="(Call,ret = vfio_pci_for_each_slot_or_bus(vdev->pdev,\n\t\t\t\t\t\t    vfio_pci_count_devs,\n\t\t\t\t\t\t    &count, slot))"];
"1001295" [label="(Identifier,group)"];
"1001058" [label="(Call,(void __user *)arg)"];
"1001297" [label="(Call,groups[i].group = group)"];
"1001234" [label="(Call,hdr.count * sizeof(*group_fds))"];
"1001264" [label="(Identifier,f)"];
"1000589" [label="(Call,(void __user *)arg)"];
"1001245" [label="(Identifier,groups)"];
"1001300" [label="(Identifier,groups)"];
"1001282" [label="(Call,vfio_group_get_external_user(f.file))"];
"1001265" [label="(Call,fdget(group_fds[i]))"];
"1001310" [label="(Call,vfio_external_user_iommu_id(group))"];
"1001124" [label="(Identifier,arg)"];
"1000922" [label="(Call,(void __user *)arg)"];
"1001266" [label="(Call,group_fds[i])"];
"1001129" [label="(ControlStructure,if (hdr.argsz < minsz || hdr.flags))"];
"1001136" [label="(Call,hdr.flags)"];
"1001368" [label="(Call,groups[i].group)"];
"1001304" [label="(Call,groups[i].id = vfio_external_user_iommu_id(group))"];
"1001286" [label="(Call,fdput(f))"];
"1001366" [label="(Identifier,i)"];
"1001119" [label="(Call,copy_from_user(&hdr, (void __user *)arg, minsz))"];
"1001288" [label="(ControlStructure,if (IS_ERR(group)))"];
"1001130" [label="(Call,hdr.argsz < minsz || hdr.flags)"];
"1001076" [label="(Call,arg + minsz)"];
"1001119" -> "1001118"  [label="AST: "];
"1001119" -> "1001125"  [label="CFG: "];
"1001120" -> "1001119"  [label="AST: "];
"1001122" -> "1001119"  [label="AST: "];
"1001125" -> "1001119"  [label="AST: "];
"1001128" -> "1001119"  [label="CFG: "];
"1001133" -> "1001119"  [label="CFG: "];
"1001119" -> "1001380"  [label="DDG: (void __user *)arg"];
"1001119" -> "1001380"  [label="DDG: copy_from_user(&hdr, (void __user *)arg, minsz)"];
"1001119" -> "1001380"  [label="DDG: &hdr"];
"1001119" -> "1001380"  [label="DDG: minsz"];
"1001122" -> "1001119"  [label="DDG: arg"];
"1001119" -> "1001131"  [label="DDG: minsz"];
"1001122" -> "1001124"  [label="CFG: "];
"1001123" -> "1001122"  [label="AST: "];
"1001124" -> "1001122"  [label="AST: "];
"1001125" -> "1001122"  [label="CFG: "];
"1001122" -> "1001380"  [label="DDG: arg"];
"1000119" -> "1001122"  [label="DDG: arg"];
"1001122" -> "1001229"  [label="DDG: arg"];
"1001122" -> "1001231"  [label="DDG: arg"];
"1000119" -> "1000116"  [label="AST: "];
"1000119" -> "1001380"  [label="DDG: arg"];
"1000119" -> "1000136"  [label="DDG: arg"];
"1000119" -> "1000183"  [label="DDG: arg"];
"1000119" -> "1000212"  [label="DDG: arg"];
"1000119" -> "1000557"  [label="DDG: arg"];
"1000119" -> "1000589"  [label="DDG: arg"];
"1000119" -> "1000609"  [label="DDG: arg"];
"1000119" -> "1000686"  [label="DDG: arg"];
"1000119" -> "1000716"  [label="DDG: arg"];
"1000119" -> "1000832"  [label="DDG: arg"];
"1000119" -> "1000834"  [label="DDG: arg"];
"1000119" -> "1000922"  [label="DDG: arg"];
"1000119" -> "1001058"  [label="DDG: arg"];
"1000119" -> "1001074"  [label="DDG: arg"];
"1000119" -> "1001076"  [label="DDG: arg"];
"1000119" -> "1001229"  [label="DDG: arg"];
"1000119" -> "1001231"  [label="DDG: arg"];
"1001131" -> "1001130"  [label="AST: "];
"1001131" -> "1001135"  [label="CFG: "];
"1001132" -> "1001131"  [label="AST: "];
"1001135" -> "1001131"  [label="AST: "];
"1001137" -> "1001131"  [label="CFG: "];
"1001130" -> "1001131"  [label="CFG: "];
"1001131" -> "1001380"  [label="DDG: minsz"];
"1001131" -> "1001380"  [label="DDG: hdr.argsz"];
"1001131" -> "1001130"  [label="DDG: hdr.argsz"];
"1001131" -> "1001130"  [label="DDG: minsz"];
"1001131" -> "1001229"  [label="DDG: minsz"];
"1001131" -> "1001231"  [label="DDG: minsz"];
"1001130" -> "1001129"  [label="AST: "];
"1001130" -> "1001136"  [label="CFG: "];
"1001136" -> "1001130"  [label="AST: "];
"1001141" -> "1001130"  [label="CFG: "];
"1001147" -> "1001130"  [label="CFG: "];
"1001130" -> "1001380"  [label="DDG: hdr.argsz < minsz || hdr.flags"];
"1001130" -> "1001380"  [label="DDG: hdr.flags"];
"1001130" -> "1001380"  [label="DDG: hdr.argsz < minsz"];
"1001229" -> "1001227"  [label="AST: "];
"1001229" -> "1001231"  [label="CFG: "];
"1001230" -> "1001229"  [label="AST: "];
"1001231" -> "1001229"  [label="AST: "];
"1001236" -> "1001229"  [label="CFG: "];
"1001229" -> "1001380"  [label="DDG: arg + minsz"];
"1001229" -> "1001227"  [label="DDG: arg + minsz"];
"1001227" -> "1001226"  [label="AST: "];
"1001227" -> "1001234"  [label="CFG: "];
"1001228" -> "1001227"  [label="AST: "];
"1001234" -> "1001227"  [label="AST: "];
"1001243" -> "1001227"  [label="CFG: "];
"1001251" -> "1001227"  [label="CFG: "];
"1001227" -> "1001380"  [label="DDG: (void __user *)(arg + minsz)"];
"1001227" -> "1001380"  [label="DDG: copy_from_user(group_fds, (void __user *)(arg + minsz),\n\t\t\t\t   hdr.count * sizeof(*group_fds))"];
"1001227" -> "1001380"  [label="DDG: hdr.count * sizeof(*group_fds)"];
"1001214" -> "1001227"  [label="DDG: group_fds"];
"1001234" -> "1001227"  [label="DDG: hdr.count"];
"1001227" -> "1001242"  [label="DDG: group_fds"];
"1001227" -> "1001265"  [label="DDG: group_fds"];
"1001227" -> "1001312"  [label="DDG: group_fds"];
"1001242" -> "1001241"  [label="AST: "];
"1001242" -> "1001243"  [label="CFG: "];
"1001243" -> "1001242"  [label="AST: "];
"1001245" -> "1001242"  [label="CFG: "];
"1001242" -> "1001380"  [label="DDG: group_fds"];
"1001242" -> "1001380"  [label="DDG: kfree(group_fds)"];
"1001265" -> "1001263"  [label="AST: "];
"1001265" -> "1001266"  [label="CFG: "];
"1001266" -> "1001265"  [label="AST: "];
"1001263" -> "1001265"  [label="CFG: "];
"1001265" -> "1001380"  [label="DDG: group_fds[i]"];
"1001265" -> "1001263"  [label="DDG: group_fds[i]"];
"1001265" -> "1001312"  [label="DDG: group_fds[i]"];
"1001263" -> "1001260"  [label="AST: "];
"1001264" -> "1001263"  [label="AST: "];
"1001272" -> "1001263"  [label="CFG: "];
"1001263" -> "1001380"  [label="DDG: fdget(group_fds[i])"];
"1001263" -> "1001380"  [label="DDG: f"];
"1001263" -> "1001270"  [label="DDG: f"];
"1001263" -> "1001282"  [label="DDG: f"];
"1001263" -> "1001286"  [label="DDG: f"];
"1001270" -> "1001269"  [label="AST: "];
"1001270" -> "1001271"  [label="CFG: "];
"1001271" -> "1001270"  [label="AST: "];
"1001276" -> "1001270"  [label="CFG: "];
"1001281" -> "1001270"  [label="CFG: "];
"1001270" -> "1001380"  [label="DDG: !f.file"];
"1001270" -> "1001380"  [label="DDG: f.file"];
"1001282" -> "1001270"  [label="DDG: f.file"];
"1001270" -> "1001282"  [label="DDG: f.file"];
"1001282" -> "1001280"  [label="AST: "];
"1001282" -> "1001283"  [label="CFG: "];
"1001283" -> "1001282"  [label="AST: "];
"1001280" -> "1001282"  [label="CFG: "];
"1001282" -> "1001380"  [label="DDG: f.file"];
"1001282" -> "1001280"  [label="DDG: f.file"];
"1001282" -> "1001286"  [label="DDG: f.file"];
"1001280" -> "1001260"  [label="AST: "];
"1001281" -> "1001280"  [label="AST: "];
"1001287" -> "1001280"  [label="CFG: "];
"1001280" -> "1001380"  [label="DDG: vfio_group_get_external_user(f.file)"];
"1001280" -> "1001289"  [label="DDG: group"];
"1001289" -> "1001288"  [label="AST: "];
"1001289" -> "1001290"  [label="CFG: "];
"1001290" -> "1001289"  [label="AST: "];
"1001293" -> "1001289"  [label="CFG: "];
"1001300" -> "1001289"  [label="CFG: "];
"1001289" -> "1001380"  [label="DDG: IS_ERR(group)"];
"1001289" -> "1001294"  [label="DDG: group"];
"1001289" -> "1001297"  [label="DDG: group"];
"1001289" -> "1001310"  [label="DDG: group"];
"1001294" -> "1001292"  [label="AST: "];
"1001294" -> "1001295"  [label="CFG: "];
"1001295" -> "1001294"  [label="AST: "];
"1001292" -> "1001294"  [label="CFG: "];
"1001294" -> "1001380"  [label="DDG: group"];
"1001294" -> "1001292"  [label="DDG: group"];
"1001292" -> "1001291"  [label="AST: "];
"1001293" -> "1001292"  [label="AST: "];
"1001296" -> "1001292"  [label="CFG: "];
"1001292" -> "1001380"  [label="DDG: PTR_ERR(group)"];
"1001292" -> "1001380"  [label="DDG: ret"];
"1001292" -> "1001375"  [label="DDG: ret"];
"1001375" -> "1001100"  [label="AST: "];
"1001375" -> "1001376"  [label="CFG: "];
"1001376" -> "1001375"  [label="AST: "];
"1001380" -> "1001375"  [label="CFG: "];
"1001375" -> "1001380"  [label="DDG: <RET>"];
"1001376" -> "1001375"  [label="DDG: ret"];
"1001164" -> "1001375"  [label="DDG: ret"];
"1001340" -> "1001375"  [label="DDG: ret"];
"1001342" -> "1001375"  [label="DDG: ret"];
"1001275" -> "1001375"  [label="DDG: ret"];
"1001297" -> "1001260"  [label="AST: "];
"1001297" -> "1001303"  [label="CFG: "];
"1001298" -> "1001297"  [label="AST: "];
"1001303" -> "1001297"  [label="AST: "];
"1001307" -> "1001297"  [label="CFG: "];
"1001297" -> "1001380"  [label="DDG: groups[i].group"];
"1001297" -> "1001367"  [label="DDG: groups[i].group"];
"1001367" -> "1001359"  [label="AST: "];
"1001367" -> "1001368"  [label="CFG: "];
"1001368" -> "1001367"  [label="AST: "];
"1001366" -> "1001367"  [label="CFG: "];
"1001367" -> "1001380"  [label="DDG: vfio_group_put_external_user(groups[i].group)"];
"1001367" -> "1001380"  [label="DDG: groups[i].group"];
"1001310" -> "1001304"  [label="AST: "];
"1001310" -> "1001311"  [label="CFG: "];
"1001311" -> "1001310"  [label="AST: "];
"1001304" -> "1001310"  [label="CFG: "];
"1001310" -> "1001380"  [label="DDG: group"];
"1001310" -> "1001304"  [label="DDG: group"];
"1001304" -> "1001260"  [label="AST: "];
"1001305" -> "1001304"  [label="AST: "];
"1001259" -> "1001304"  [label="CFG: "];
"1001304" -> "1001380"  [label="DDG: vfio_external_user_iommu_id(group)"];
"1001304" -> "1001380"  [label="DDG: groups[i].id"];
"1001286" -> "1001260"  [label="AST: "];
"1001286" -> "1001287"  [label="CFG: "];
"1001287" -> "1001286"  [label="AST: "];
"1001290" -> "1001286"  [label="CFG: "];
"1001286" -> "1001380"  [label="DDG: fdput(f)"];
"1001286" -> "1001380"  [label="DDG: f"];
"1001312" -> "1001100"  [label="AST: "];
"1001312" -> "1001313"  [label="CFG: "];
"1001313" -> "1001312"  [label="AST: "];
"1001315" -> "1001312"  [label="CFG: "];
"1001312" -> "1001380"  [label="DDG: kfree(group_fds)"];
"1001312" -> "1001380"  [label="DDG: group_fds"];
"1001231" -> "1001233"  [label="CFG: "];
"1001232" -> "1001231"  [label="AST: "];
"1001233" -> "1001231"  [label="AST: "];
"1001231" -> "1001380"  [label="DDG: arg"];
"1001231" -> "1001380"  [label="DDG: minsz"];
}
