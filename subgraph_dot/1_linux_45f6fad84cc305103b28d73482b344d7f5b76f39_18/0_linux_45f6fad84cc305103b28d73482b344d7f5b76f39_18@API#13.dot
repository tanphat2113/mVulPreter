digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_18@API" {
"1000387" [label="(Call,ulen += sizeof(struct udphdr))"];
"1000150" [label="(Call,ulen = len)"];
"1000112" [label="(MethodParameterIn,size_t len)"];
"1000830" [label="(Call,ip6_make_skb(sk, getfrag, msg, ulen,\n\t\t\t\t   sizeof(struct udphdr), hlimit, tclass, opt,\n\t\t\t\t   &fl6, (struct rt6_info *)dst,\n\t\t\t\t   msg->msg_flags, dontfrag))"];
"1000828" [label="(Call,skb = ip6_make_skb(sk, getfrag, msg, ulen,\n\t\t\t\t   sizeof(struct udphdr), hlimit, tclass, opt,\n\t\t\t\t   &fl6, (struct rt6_info *)dst,\n\t\t\t\t   msg->msg_flags, dontfrag))"];
"1000851" [label="(Call,PTR_ERR(skb))"];
"1000849" [label="(Call,err = PTR_ERR(skb))"];
"1000991" [label="(Call,!err)"];
"1000997" [label="(Call,err == -ENOBUFS)"];
"1000996" [label="(Call,err == -ENOBUFS || test_bit(SOCK_NOSPACE, &sk->sk_socket->flags))"];
"1001015" [label="(Return,return err;)"];
"1000855" [label="(Call,IS_ERR_OR_NULL(skb))"];
"1000854" [label="(Call,!IS_ERR_OR_NULL(skb))"];
"1000859" [label="(Call,udp_v6_send_skb(skb, &fl6))"];
"1000857" [label="(Call,err = udp_v6_send_skb(skb, &fl6))"];
"1001011" [label="(Call,sock_net(sk))"];
"1001010" [label="(Call,UDP6_INC_STATS_USER(sock_net(sk),\n\t\t\t\tUDP_MIB_SNDBUFERRORS, is_udplite))"];
"1000896" [label="(Call,up->len += ulen)"];
"1000903" [label="(Call,ip6_append_data(sk, getfrag, msg, ulen,\n\t\tsizeof(struct udphdr), hlimit, tclass, opt, &fl6,\n\t\t(struct rt6_info *)dst,\n\t\tcorkreq ? msg->msg_flags|MSG_MORE : msg->msg_flags, dontfrag))"];
"1000901" [label="(Call,err = ip6_append_data(sk, getfrag, msg, ulen,\n\t\tsizeof(struct udphdr), hlimit, tclass, opt, &fl6,\n\t\t(struct rt6_info *)dst,\n\t\tcorkreq ? msg->msg_flags|MSG_MORE : msg->msg_flags, dontfrag))"];
"1000955" [label="(Call,err > 0)"];
"1000964" [label="(Call,net_xmit_errno(err))"];
"1000958" [label="(Call,err = np->recverr ? net_xmit_errno(err) : 0)"];
"1000960" [label="(Call,np->recverr ? net_xmit_errno(err) : 0)"];
"1000931" [label="(Call,udp_v6_flush_pending_frames(sk))"];
"1000967" [label="(Call,release_sock(sk))"];
"1000939" [label="(Call,udp_v6_push_pending_frames(sk))"];
"1000937" [label="(Call,err = udp_v6_push_pending_frames(sk))"];
"1000848" [label="(Identifier,dontfrag)"];
"1000175" [label="(Call,msg->msg_flags&MSG_MORE)"];
"1000992" [label="(Identifier,err)"];
"1000387" [label="(Call,ulen += sizeof(struct udphdr))"];
"1000913" [label="(Call,&fl6)"];
"1000966" [label="(Literal,0)"];
"1000849" [label="(Call,err = PTR_ERR(skb))"];
"1000904" [label="(Identifier,sk)"];
"1001034" [label="(MethodReturn,int)"];
"1001015" [label="(Return,return err;)"];
"1000801" [label="(Call,ip6_sk_dst_hoplimit(np, &fl6, dst))"];
"1001012" [label="(Identifier,sk)"];
"1000907" [label="(Identifier,ulen)"];
"1000857" [label="(Call,err = udp_v6_send_skb(skb, &fl6))"];
"1000828" [label="(Call,skb = ip6_make_skb(sk, getfrag, msg, ulen,\n\t\t\t\t   sizeof(struct udphdr), hlimit, tclass, opt,\n\t\t\t\t   &fl6, (struct rt6_info *)dst,\n\t\t\t\t   msg->msg_flags, dontfrag))"];
"1001021" [label="(Call,!(msg->msg_flags&MSG_PROBE) || len)"];
"1000897" [label="(Call,up->len)"];
"1000151" [label="(Identifier,ulen)"];
"1000110" [label="(MethodParameterIn,struct sock *sk)"];
"1000111" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000851" [label="(Call,PTR_ERR(skb))"];
"1000832" [label="(Identifier,getfrag)"];
"1000858" [label="(Identifier,err)"];
"1000968" [label="(Identifier,sk)"];
"1000910" [label="(Identifier,hlimit)"];
"1000861" [label="(Call,&fl6)"];
"1000939" [label="(Call,udp_v6_push_pending_frames(sk))"];
"1000838" [label="(Identifier,tclass)"];
"1000855" [label="(Call,IS_ERR_OR_NULL(skb))"];
"1000955" [label="(Call,err > 0)"];
"1000891" [label="(Call,dontfrag = np->dontfrag)"];
"1000996" [label="(Call,err == -ENOBUFS || test_bit(SOCK_NOSPACE, &sk->sk_socket->flags))"];
"1000778" [label="(Call,ip6_sk_dst_lookup_flow(sk, &fl6, final_p))"];
"1000834" [label="(Identifier,ulen)"];
"1000902" [label="(Identifier,err)"];
"1000360" [label="(Call,lock_sock(sk))"];
"1001009" [label="(Block,)"];
"1000908" [label="(Call,sizeof(struct udphdr))"];
"1001001" [label="(Call,test_bit(SOCK_NOSPACE, &sk->sk_socket->flags))"];
"1000956" [label="(Identifier,err)"];
"1000388" [label="(Identifier,ulen)"];
"1000995" [label="(ControlStructure,if (err == -ENOBUFS || test_bit(SOCK_NOSPACE, &sk->sk_socket->flags)))"];
"1000912" [label="(Identifier,opt)"];
"1000959" [label="(Identifier,err)"];
"1000965" [label="(Identifier,err)"];
"1000937" [label="(Call,err = udp_v6_push_pending_frames(sk))"];
"1000585" [label="(Call,ip6_datagram_send_ctl(sock_net(sk), sk, msg, &fl6, opt,\n\t\t\t\t\t    &hlimit, &tclass, &dontfrag))"];
"1000901" [label="(Call,err = ip6_append_data(sk, getfrag, msg, ulen,\n\t\tsizeof(struct udphdr), hlimit, tclass, opt, &fl6,\n\t\t(struct rt6_info *)dst,\n\t\tcorkreq ? msg->msg_flags|MSG_MORE : msg->msg_flags, dontfrag))"];
"1000932" [label="(Identifier,sk)"];
"1000920" [label="(Call,msg->msg_flags|MSG_MORE)"];
"1000903" [label="(Call,ip6_append_data(sk, getfrag, msg, ulen,\n\t\tsizeof(struct udphdr), hlimit, tclass, opt, &fl6,\n\t\t(struct rt6_info *)dst,\n\t\tcorkreq ? msg->msg_flags|MSG_MORE : msg->msg_flags, dontfrag))"];
"1000958" [label="(Call,err = np->recverr ? net_xmit_errno(err) : 0)"];
"1001002" [label="(Identifier,SOCK_NOSPACE)"];
"1000853" [label="(ControlStructure,if (!IS_ERR_OR_NULL(skb)))"];
"1000860" [label="(Identifier,skb)"];
"1000896" [label="(Call,up->len += ulen)"];
"1000393" [label="(Identifier,fl6)"];
"1000831" [label="(Identifier,sk)"];
"1000796" [label="(Call,hlimit < 0)"];
"1001016" [label="(Identifier,err)"];
"1000854" [label="(Call,!IS_ERR_OR_NULL(skb))"];
"1000829" [label="(Identifier,skb)"];
"1000993" [label="(Return,return len;)"];
"1000840" [label="(Call,&fl6)"];
"1000990" [label="(ControlStructure,if (!err))"];
"1000911" [label="(Identifier,tclass)"];
"1000967" [label="(Call,release_sock(sk))"];
"1000999" [label="(Call,-ENOBUFS)"];
"1000810" [label="(Call,tclass = np->tclass)"];
"1000991" [label="(Call,!err)"];
"1000938" [label="(Identifier,err)"];
"1000931" [label="(Call,udp_v6_flush_pending_frames(sk))"];
"1000830" [label="(Call,ip6_make_skb(sk, getfrag, msg, ulen,\n\t\t\t\t   sizeof(struct udphdr), hlimit, tclass, opt,\n\t\t\t\t   &fl6, (struct rt6_info *)dst,\n\t\t\t\t   msg->msg_flags, dontfrag))"];
"1000994" [label="(Identifier,len)"];
"1001010" [label="(Call,UDP6_INC_STATS_USER(sock_net(sk),\n\t\t\t\tUDP_MIB_SNDBUFERRORS, is_udplite))"];
"1000915" [label="(Call,(struct rt6_info *)dst)"];
"1000845" [label="(Call,msg->msg_flags)"];
"1000155" [label="(Identifier,hlimit)"];
"1000888" [label="(Call,dontfrag < 0)"];
"1000906" [label="(Identifier,msg)"];
"1000799" [label="(Call,hlimit = ip6_sk_dst_hoplimit(np, &fl6, dst))"];
"1000725" [label="(Call,fl6_update_dst(&fl6, opt, &final))"];
"1000997" [label="(Call,err == -ENOBUFS)"];
"1000929" [label="(ControlStructure,if (err))"];
"1000964" [label="(Call,net_xmit_errno(err))"];
"1000842" [label="(Call,(struct rt6_info *)dst)"];
"1000930" [label="(Identifier,err)"];
"1000159" [label="(Call,tclass = -1)"];
"1000850" [label="(Identifier,err)"];
"1000859" [label="(Call,udp_v6_send_skb(skb, &fl6))"];
"1001023" [label="(Call,msg->msg_flags&MSG_PROBE)"];
"1000928" [label="(Identifier,dontfrag)"];
"1000969" [label="(JumpTarget,release_dst:)"];
"1000816" [label="(Call,msg->msg_flags&MSG_CONFIRM)"];
"1000787" [label="(Call,err = PTR_ERR(dst))"];
"1000900" [label="(Identifier,ulen)"];
"1000154" [label="(Call,hlimit = -1)"];
"1000112" [label="(MethodParameterIn,size_t len)"];
"1000349" [label="(Call,getfrag  =  is_udplite ?  udplite_getfrag : ip_generic_getfrag)"];
"1000864" [label="(Call,lock_sock(sk))"];
"1000113" [label="(Block,)"];
"1000835" [label="(Call,sizeof(struct udphdr))"];
"1000954" [label="(ControlStructure,if (err > 0))"];
"1000833" [label="(Identifier,msg)"];
"1000324" [label="(Call,udp_sendmsg(sk, msg, len))"];
"1000998" [label="(Identifier,err)"];
"1001030" [label="(Call,err = 0)"];
"1000150" [label="(Call,ulen = len)"];
"1000807" [label="(Call,tclass < 0)"];
"1000934" [label="(ControlStructure,if (!corkreq))"];
"1000839" [label="(Identifier,opt)"];
"1001014" [label="(Identifier,is_udplite)"];
"1000340" [label="(Call,len > INT_MAX - sizeof(struct udphdr))"];
"1000957" [label="(Literal,0)"];
"1000134" [label="(Call,*opt = NULL)"];
"1000152" [label="(Identifier,len)"];
"1000852" [label="(Identifier,skb)"];
"1001011" [label="(Call,sock_net(sk))"];
"1000960" [label="(Call,np->recverr ? net_xmit_errno(err) : 0)"];
"1000335" [label="(Call,udp_sendmsg(sk, msg, len))"];
"1000872" [label="(Call,release_sock(sk))"];
"1000918" [label="(Call,corkreq ? msg->msg_flags|MSG_MORE : msg->msg_flags)"];
"1000164" [label="(Call,dontfrag = -1)"];
"1000961" [label="(Call,np->recverr)"];
"1000837" [label="(Identifier,hlimit)"];
"1000826" [label="(Block,)"];
"1000940" [label="(Identifier,sk)"];
"1000856" [label="(Identifier,skb)"];
"1000389" [label="(Call,sizeof(struct udphdr))"];
"1000876" [label="(Call,err = -EINVAL)"];
"1000863" [label="(ControlStructure,goto release_dst;)"];
"1001013" [label="(Identifier,UDP_MIB_SNDBUFERRORS)"];
"1000905" [label="(Identifier,getfrag)"];
"1000387" -> "1000113"  [label="AST: "];
"1000387" -> "1000389"  [label="CFG: "];
"1000388" -> "1000387"  [label="AST: "];
"1000389" -> "1000387"  [label="AST: "];
"1000393" -> "1000387"  [label="CFG: "];
"1000387" -> "1001034"  [label="DDG: ulen"];
"1000150" -> "1000387"  [label="DDG: ulen"];
"1000387" -> "1000830"  [label="DDG: ulen"];
"1000387" -> "1000896"  [label="DDG: ulen"];
"1000387" -> "1000903"  [label="DDG: ulen"];
"1000150" -> "1000113"  [label="AST: "];
"1000150" -> "1000152"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="AST: "];
"1000155" -> "1000150"  [label="CFG: "];
"1000150" -> "1001034"  [label="DDG: ulen"];
"1000150" -> "1001034"  [label="DDG: len"];
"1000112" -> "1000150"  [label="DDG: len"];
"1000150" -> "1000896"  [label="DDG: ulen"];
"1000150" -> "1000903"  [label="DDG: ulen"];
"1000112" -> "1000109"  [label="AST: "];
"1000112" -> "1001034"  [label="DDG: len"];
"1000112" -> "1000324"  [label="DDG: len"];
"1000112" -> "1000335"  [label="DDG: len"];
"1000112" -> "1000340"  [label="DDG: len"];
"1000112" -> "1000993"  [label="DDG: len"];
"1000112" -> "1001021"  [label="DDG: len"];
"1000830" -> "1000828"  [label="AST: "];
"1000830" -> "1000848"  [label="CFG: "];
"1000831" -> "1000830"  [label="AST: "];
"1000832" -> "1000830"  [label="AST: "];
"1000833" -> "1000830"  [label="AST: "];
"1000834" -> "1000830"  [label="AST: "];
"1000835" -> "1000830"  [label="AST: "];
"1000837" -> "1000830"  [label="AST: "];
"1000838" -> "1000830"  [label="AST: "];
"1000839" -> "1000830"  [label="AST: "];
"1000840" -> "1000830"  [label="AST: "];
"1000842" -> "1000830"  [label="AST: "];
"1000845" -> "1000830"  [label="AST: "];
"1000848" -> "1000830"  [label="AST: "];
"1000828" -> "1000830"  [label="CFG: "];
"1000830" -> "1001034"  [label="DDG: tclass"];
"1000830" -> "1001034"  [label="DDG: ulen"];
"1000830" -> "1001034"  [label="DDG: getfrag"];
"1000830" -> "1001034"  [label="DDG: dontfrag"];
"1000830" -> "1001034"  [label="DDG: msg"];
"1000830" -> "1001034"  [label="DDG: (struct rt6_info *)dst"];
"1000830" -> "1001034"  [label="DDG: opt"];
"1000830" -> "1001034"  [label="DDG: msg->msg_flags"];
"1000830" -> "1001034"  [label="DDG: hlimit"];
"1000830" -> "1001034"  [label="DDG: &fl6"];
"1000830" -> "1001034"  [label="DDG: sk"];
"1000830" -> "1000828"  [label="DDG: tclass"];
"1000830" -> "1000828"  [label="DDG: &fl6"];
"1000830" -> "1000828"  [label="DDG: dontfrag"];
"1000830" -> "1000828"  [label="DDG: msg"];
"1000830" -> "1000828"  [label="DDG: msg->msg_flags"];
"1000830" -> "1000828"  [label="DDG: (struct rt6_info *)dst"];
"1000830" -> "1000828"  [label="DDG: ulen"];
"1000830" -> "1000828"  [label="DDG: hlimit"];
"1000830" -> "1000828"  [label="DDG: getfrag"];
"1000830" -> "1000828"  [label="DDG: opt"];
"1000830" -> "1000828"  [label="DDG: sk"];
"1000778" -> "1000830"  [label="DDG: sk"];
"1000778" -> "1000830"  [label="DDG: &fl6"];
"1000110" -> "1000830"  [label="DDG: sk"];
"1000349" -> "1000830"  [label="DDG: getfrag"];
"1000585" -> "1000830"  [label="DDG: msg"];
"1000111" -> "1000830"  [label="DDG: msg"];
"1000799" -> "1000830"  [label="DDG: hlimit"];
"1000796" -> "1000830"  [label="DDG: hlimit"];
"1000807" -> "1000830"  [label="DDG: tclass"];
"1000810" -> "1000830"  [label="DDG: tclass"];
"1000725" -> "1000830"  [label="DDG: opt"];
"1000801" -> "1000830"  [label="DDG: &fl6"];
"1000842" -> "1000830"  [label="DDG: dst"];
"1001023" -> "1000830"  [label="DDG: msg->msg_flags"];
"1000816" -> "1000830"  [label="DDG: msg->msg_flags"];
"1000164" -> "1000830"  [label="DDG: dontfrag"];
"1000830" -> "1000859"  [label="DDG: &fl6"];
"1000830" -> "1001011"  [label="DDG: sk"];
"1000828" -> "1000826"  [label="AST: "];
"1000829" -> "1000828"  [label="AST: "];
"1000850" -> "1000828"  [label="CFG: "];
"1000828" -> "1001034"  [label="DDG: ip6_make_skb(sk, getfrag, msg, ulen,\n\t\t\t\t   sizeof(struct udphdr), hlimit, tclass, opt,\n\t\t\t\t   &fl6, (struct rt6_info *)dst,\n\t\t\t\t   msg->msg_flags, dontfrag)"];
"1000828" -> "1000851"  [label="DDG: skb"];
"1000851" -> "1000849"  [label="AST: "];
"1000851" -> "1000852"  [label="CFG: "];
"1000852" -> "1000851"  [label="AST: "];
"1000849" -> "1000851"  [label="CFG: "];
"1000851" -> "1000849"  [label="DDG: skb"];
"1000851" -> "1000855"  [label="DDG: skb"];
"1000849" -> "1000826"  [label="AST: "];
"1000850" -> "1000849"  [label="AST: "];
"1000856" -> "1000849"  [label="CFG: "];
"1000849" -> "1001034"  [label="DDG: PTR_ERR(skb)"];
"1000849" -> "1000991"  [label="DDG: err"];
"1000991" -> "1000990"  [label="AST: "];
"1000991" -> "1000992"  [label="CFG: "];
"1000992" -> "1000991"  [label="AST: "];
"1000994" -> "1000991"  [label="CFG: "];
"1000998" -> "1000991"  [label="CFG: "];
"1000991" -> "1001034"  [label="DDG: !err"];
"1000991" -> "1001034"  [label="DDG: err"];
"1000857" -> "1000991"  [label="DDG: err"];
"1000787" -> "1000991"  [label="DDG: err"];
"1000958" -> "1000991"  [label="DDG: err"];
"1001030" -> "1000991"  [label="DDG: err"];
"1000955" -> "1000991"  [label="DDG: err"];
"1000876" -> "1000991"  [label="DDG: err"];
"1000991" -> "1000997"  [label="DDG: err"];
"1000997" -> "1000996"  [label="AST: "];
"1000997" -> "1000999"  [label="CFG: "];
"1000998" -> "1000997"  [label="AST: "];
"1000999" -> "1000997"  [label="AST: "];
"1001002" -> "1000997"  [label="CFG: "];
"1000996" -> "1000997"  [label="CFG: "];
"1000997" -> "1001034"  [label="DDG: err"];
"1000997" -> "1001034"  [label="DDG: -ENOBUFS"];
"1000997" -> "1000996"  [label="DDG: err"];
"1000997" -> "1000996"  [label="DDG: -ENOBUFS"];
"1000999" -> "1000997"  [label="DDG: ENOBUFS"];
"1000997" -> "1001015"  [label="DDG: err"];
"1000996" -> "1000995"  [label="AST: "];
"1000996" -> "1001001"  [label="CFG: "];
"1001001" -> "1000996"  [label="AST: "];
"1001012" -> "1000996"  [label="CFG: "];
"1001016" -> "1000996"  [label="CFG: "];
"1000996" -> "1001034"  [label="DDG: err == -ENOBUFS || test_bit(SOCK_NOSPACE, &sk->sk_socket->flags)"];
"1000996" -> "1001034"  [label="DDG: err == -ENOBUFS"];
"1000996" -> "1001034"  [label="DDG: test_bit(SOCK_NOSPACE, &sk->sk_socket->flags)"];
"1001001" -> "1000996"  [label="DDG: SOCK_NOSPACE"];
"1001001" -> "1000996"  [label="DDG: &sk->sk_socket->flags"];
"1001015" -> "1000113"  [label="AST: "];
"1001015" -> "1001016"  [label="CFG: "];
"1001016" -> "1001015"  [label="AST: "];
"1001034" -> "1001015"  [label="CFG: "];
"1001015" -> "1001034"  [label="DDG: <RET>"];
"1001016" -> "1001015"  [label="DDG: err"];
"1000855" -> "1000854"  [label="AST: "];
"1000855" -> "1000856"  [label="CFG: "];
"1000856" -> "1000855"  [label="AST: "];
"1000854" -> "1000855"  [label="CFG: "];
"1000855" -> "1001034"  [label="DDG: skb"];
"1000855" -> "1000854"  [label="DDG: skb"];
"1000855" -> "1000859"  [label="DDG: skb"];
"1000854" -> "1000853"  [label="AST: "];
"1000858" -> "1000854"  [label="CFG: "];
"1000863" -> "1000854"  [label="CFG: "];
"1000854" -> "1001034"  [label="DDG: IS_ERR_OR_NULL(skb)"];
"1000854" -> "1001034"  [label="DDG: !IS_ERR_OR_NULL(skb)"];
"1000859" -> "1000857"  [label="AST: "];
"1000859" -> "1000861"  [label="CFG: "];
"1000860" -> "1000859"  [label="AST: "];
"1000861" -> "1000859"  [label="AST: "];
"1000857" -> "1000859"  [label="CFG: "];
"1000859" -> "1001034"  [label="DDG: skb"];
"1000859" -> "1001034"  [label="DDG: &fl6"];
"1000859" -> "1000857"  [label="DDG: skb"];
"1000859" -> "1000857"  [label="DDG: &fl6"];
"1000857" -> "1000853"  [label="AST: "];
"1000858" -> "1000857"  [label="AST: "];
"1000863" -> "1000857"  [label="CFG: "];
"1000857" -> "1001034"  [label="DDG: udp_v6_send_skb(skb, &fl6)"];
"1001011" -> "1001010"  [label="AST: "];
"1001011" -> "1001012"  [label="CFG: "];
"1001012" -> "1001011"  [label="AST: "];
"1001013" -> "1001011"  [label="CFG: "];
"1001011" -> "1001034"  [label="DDG: sk"];
"1001011" -> "1001010"  [label="DDG: sk"];
"1000872" -> "1001011"  [label="DDG: sk"];
"1000967" -> "1001011"  [label="DDG: sk"];
"1000778" -> "1001011"  [label="DDG: sk"];
"1000110" -> "1001011"  [label="DDG: sk"];
"1001010" -> "1001009"  [label="AST: "];
"1001010" -> "1001014"  [label="CFG: "];
"1001013" -> "1001010"  [label="AST: "];
"1001014" -> "1001010"  [label="AST: "];
"1001016" -> "1001010"  [label="CFG: "];
"1001010" -> "1001034"  [label="DDG: UDP_MIB_SNDBUFERRORS"];
"1001010" -> "1001034"  [label="DDG: is_udplite"];
"1001010" -> "1001034"  [label="DDG: sock_net(sk)"];
"1001010" -> "1001034"  [label="DDG: UDP6_INC_STATS_USER(sock_net(sk),\n\t\t\t\tUDP_MIB_SNDBUFERRORS, is_udplite)"];
"1000896" -> "1000113"  [label="AST: "];
"1000896" -> "1000900"  [label="CFG: "];
"1000897" -> "1000896"  [label="AST: "];
"1000900" -> "1000896"  [label="AST: "];
"1000902" -> "1000896"  [label="CFG: "];
"1000896" -> "1001034"  [label="DDG: up->len"];
"1000903" -> "1000901"  [label="AST: "];
"1000903" -> "1000928"  [label="CFG: "];
"1000904" -> "1000903"  [label="AST: "];
"1000905" -> "1000903"  [label="AST: "];
"1000906" -> "1000903"  [label="AST: "];
"1000907" -> "1000903"  [label="AST: "];
"1000908" -> "1000903"  [label="AST: "];
"1000910" -> "1000903"  [label="AST: "];
"1000911" -> "1000903"  [label="AST: "];
"1000912" -> "1000903"  [label="AST: "];
"1000913" -> "1000903"  [label="AST: "];
"1000915" -> "1000903"  [label="AST: "];
"1000918" -> "1000903"  [label="AST: "];
"1000928" -> "1000903"  [label="AST: "];
"1000901" -> "1000903"  [label="CFG: "];
"1000903" -> "1001034"  [label="DDG: getfrag"];
"1000903" -> "1001034"  [label="DDG: corkreq ? msg->msg_flags|MSG_MORE : msg->msg_flags"];
"1000903" -> "1001034"  [label="DDG: tclass"];
"1000903" -> "1001034"  [label="DDG: msg"];
"1000903" -> "1001034"  [label="DDG: ulen"];
"1000903" -> "1001034"  [label="DDG: hlimit"];
"1000903" -> "1001034"  [label="DDG: opt"];
"1000903" -> "1001034"  [label="DDG: (struct rt6_info *)dst"];
"1000903" -> "1001034"  [label="DDG: dontfrag"];
"1000903" -> "1001034"  [label="DDG: &fl6"];
"1000903" -> "1000901"  [label="DDG: corkreq ? msg->msg_flags|MSG_MORE : msg->msg_flags"];
"1000903" -> "1000901"  [label="DDG: msg"];
"1000903" -> "1000901"  [label="DDG: &fl6"];
"1000903" -> "1000901"  [label="DDG: sk"];
"1000903" -> "1000901"  [label="DDG: hlimit"];
"1000903" -> "1000901"  [label="DDG: dontfrag"];
"1000903" -> "1000901"  [label="DDG: tclass"];
"1000903" -> "1000901"  [label="DDG: ulen"];
"1000903" -> "1000901"  [label="DDG: opt"];
"1000903" -> "1000901"  [label="DDG: (struct rt6_info *)dst"];
"1000903" -> "1000901"  [label="DDG: getfrag"];
"1000360" -> "1000903"  [label="DDG: sk"];
"1000864" -> "1000903"  [label="DDG: sk"];
"1000110" -> "1000903"  [label="DDG: sk"];
"1000349" -> "1000903"  [label="DDG: getfrag"];
"1000585" -> "1000903"  [label="DDG: msg"];
"1000111" -> "1000903"  [label="DDG: msg"];
"1000154" -> "1000903"  [label="DDG: hlimit"];
"1000799" -> "1000903"  [label="DDG: hlimit"];
"1000796" -> "1000903"  [label="DDG: hlimit"];
"1000807" -> "1000903"  [label="DDG: tclass"];
"1000159" -> "1000903"  [label="DDG: tclass"];
"1000810" -> "1000903"  [label="DDG: tclass"];
"1000134" -> "1000903"  [label="DDG: opt"];
"1000725" -> "1000903"  [label="DDG: opt"];
"1000778" -> "1000903"  [label="DDG: &fl6"];
"1000801" -> "1000903"  [label="DDG: &fl6"];
"1000915" -> "1000903"  [label="DDG: dst"];
"1000920" -> "1000903"  [label="DDG: msg->msg_flags"];
"1000920" -> "1000903"  [label="DDG: MSG_MORE"];
"1001023" -> "1000903"  [label="DDG: msg->msg_flags"];
"1000816" -> "1000903"  [label="DDG: msg->msg_flags"];
"1000175" -> "1000903"  [label="DDG: msg->msg_flags"];
"1000891" -> "1000903"  [label="DDG: dontfrag"];
"1000888" -> "1000903"  [label="DDG: dontfrag"];
"1000903" -> "1000931"  [label="DDG: sk"];
"1000903" -> "1000939"  [label="DDG: sk"];
"1000903" -> "1000967"  [label="DDG: sk"];
"1000901" -> "1000113"  [label="AST: "];
"1000902" -> "1000901"  [label="AST: "];
"1000930" -> "1000901"  [label="CFG: "];
"1000901" -> "1001034"  [label="DDG: ip6_append_data(sk, getfrag, msg, ulen,\n\t\tsizeof(struct udphdr), hlimit, tclass, opt, &fl6,\n\t\t(struct rt6_info *)dst,\n\t\tcorkreq ? msg->msg_flags|MSG_MORE : msg->msg_flags, dontfrag)"];
"1000901" -> "1000955"  [label="DDG: err"];
"1000955" -> "1000954"  [label="AST: "];
"1000955" -> "1000957"  [label="CFG: "];
"1000956" -> "1000955"  [label="AST: "];
"1000957" -> "1000955"  [label="AST: "];
"1000959" -> "1000955"  [label="CFG: "];
"1000968" -> "1000955"  [label="CFG: "];
"1000955" -> "1001034"  [label="DDG: err > 0"];
"1000937" -> "1000955"  [label="DDG: err"];
"1000955" -> "1000964"  [label="DDG: err"];
"1000964" -> "1000960"  [label="AST: "];
"1000964" -> "1000965"  [label="CFG: "];
"1000965" -> "1000964"  [label="AST: "];
"1000960" -> "1000964"  [label="CFG: "];
"1000964" -> "1000958"  [label="DDG: err"];
"1000964" -> "1000960"  [label="DDG: err"];
"1000958" -> "1000954"  [label="AST: "];
"1000958" -> "1000960"  [label="CFG: "];
"1000959" -> "1000958"  [label="AST: "];
"1000960" -> "1000958"  [label="AST: "];
"1000968" -> "1000958"  [label="CFG: "];
"1000958" -> "1001034"  [label="DDG: np->recverr ? net_xmit_errno(err) : 0"];
"1000960" -> "1000966"  [label="CFG: "];
"1000961" -> "1000960"  [label="AST: "];
"1000966" -> "1000960"  [label="AST: "];
"1000960" -> "1001034"  [label="DDG: net_xmit_errno(err)"];
"1000960" -> "1001034"  [label="DDG: np->recverr"];
"1000931" -> "1000929"  [label="AST: "];
"1000931" -> "1000932"  [label="CFG: "];
"1000932" -> "1000931"  [label="AST: "];
"1000956" -> "1000931"  [label="CFG: "];
"1000931" -> "1001034"  [label="DDG: udp_v6_flush_pending_frames(sk)"];
"1000110" -> "1000931"  [label="DDG: sk"];
"1000931" -> "1000967"  [label="DDG: sk"];
"1000967" -> "1000113"  [label="AST: "];
"1000967" -> "1000968"  [label="CFG: "];
"1000968" -> "1000967"  [label="AST: "];
"1000969" -> "1000967"  [label="CFG: "];
"1000967" -> "1001034"  [label="DDG: release_sock(sk)"];
"1000967" -> "1001034"  [label="DDG: sk"];
"1000939" -> "1000967"  [label="DDG: sk"];
"1000110" -> "1000967"  [label="DDG: sk"];
"1000939" -> "1000937"  [label="AST: "];
"1000939" -> "1000940"  [label="CFG: "];
"1000940" -> "1000939"  [label="AST: "];
"1000937" -> "1000939"  [label="CFG: "];
"1000939" -> "1000937"  [label="DDG: sk"];
"1000110" -> "1000939"  [label="DDG: sk"];
"1000937" -> "1000934"  [label="AST: "];
"1000938" -> "1000937"  [label="AST: "];
"1000956" -> "1000937"  [label="CFG: "];
"1000937" -> "1001034"  [label="DDG: udp_v6_push_pending_frames(sk)"];
}
