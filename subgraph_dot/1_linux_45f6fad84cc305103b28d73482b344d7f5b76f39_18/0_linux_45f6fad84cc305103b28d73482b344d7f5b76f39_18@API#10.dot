digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_18@API" {
"1000477" [label="(Call,addr_len >= sizeof(struct sockaddr_in6))"];
"1000231" [label="(Call,addr_len = 0)"];
"1000144" [label="(Call,addr_len = msg->msg_namelen)"];
"1000204" [label="(Call,addr_len < SIN6_LEN_RFC2133)"];
"1000476" [label="(Call,addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000209" [label="(Identifier,EINVAL)"];
"1000113" [label="(Block,)"];
"1000227" [label="(Call,msg->msg_namelen = addr_len = 0)"];
"1000211" [label="(Identifier,daddr)"];
"1000146" [label="(Call,msg->msg_namelen)"];
"1000205" [label="(Identifier,addr_len)"];
"1000483" [label="(Identifier,sin6)"];
"1001034" [label="(MethodReturn,int)"];
"1000477" [label="(Call,addr_len >= sizeof(struct sockaddr_in6))"];
"1000532" [label="(Identifier,fl6)"];
"1000144" [label="(Call,addr_len = msg->msg_namelen)"];
"1000478" [label="(Identifier,addr_len)"];
"1000231" [label="(Call,addr_len = 0)"];
"1000151" [label="(Identifier,ulen)"];
"1000476" [label="(Call,addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000233" [label="(Literal,0)"];
"1000206" [label="(Identifier,SIN6_LEN_RFC2133)"];
"1000490" [label="(Identifier,fl6)"];
"1000475" [label="(ControlStructure,if (addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))))"];
"1000232" [label="(Identifier,addr_len)"];
"1000145" [label="(Identifier,addr_len)"];
"1000479" [label="(Call,sizeof(struct sockaddr_in6))"];
"1000203" [label="(ControlStructure,if (addr_len < SIN6_LEN_RFC2133))"];
"1000204" [label="(Call,addr_len < SIN6_LEN_RFC2133)"];
"1000481" [label="(Call,sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000477" -> "1000476"  [label="AST: "];
"1000477" -> "1000479"  [label="CFG: "];
"1000478" -> "1000477"  [label="AST: "];
"1000479" -> "1000477"  [label="AST: "];
"1000483" -> "1000477"  [label="CFG: "];
"1000476" -> "1000477"  [label="CFG: "];
"1000477" -> "1001034"  [label="DDG: addr_len"];
"1000477" -> "1000476"  [label="DDG: addr_len"];
"1000231" -> "1000477"  [label="DDG: addr_len"];
"1000144" -> "1000477"  [label="DDG: addr_len"];
"1000204" -> "1000477"  [label="DDG: addr_len"];
"1000231" -> "1000227"  [label="AST: "];
"1000231" -> "1000233"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000233" -> "1000231"  [label="AST: "];
"1000227" -> "1000231"  [label="CFG: "];
"1000231" -> "1001034"  [label="DDG: addr_len"];
"1000231" -> "1000227"  [label="DDG: addr_len"];
"1000144" -> "1000113"  [label="AST: "];
"1000144" -> "1000146"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000146" -> "1000144"  [label="AST: "];
"1000151" -> "1000144"  [label="CFG: "];
"1000144" -> "1001034"  [label="DDG: addr_len"];
"1000144" -> "1001034"  [label="DDG: msg->msg_namelen"];
"1000204" -> "1000203"  [label="AST: "];
"1000204" -> "1000206"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000206" -> "1000204"  [label="AST: "];
"1000209" -> "1000204"  [label="CFG: "];
"1000211" -> "1000204"  [label="CFG: "];
"1000204" -> "1001034"  [label="DDG: SIN6_LEN_RFC2133"];
"1000204" -> "1001034"  [label="DDG: addr_len"];
"1000204" -> "1001034"  [label="DDG: addr_len < SIN6_LEN_RFC2133"];
"1000476" -> "1000475"  [label="AST: "];
"1000476" -> "1000481"  [label="CFG: "];
"1000481" -> "1000476"  [label="AST: "];
"1000490" -> "1000476"  [label="CFG: "];
"1000532" -> "1000476"  [label="CFG: "];
"1000476" -> "1001034"  [label="DDG: addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
"1000476" -> "1001034"  [label="DDG: addr_len >= sizeof(struct sockaddr_in6)"];
"1000476" -> "1001034"  [label="DDG: sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
"1000481" -> "1000476"  [label="DDG: sin6->sin6_scope_id"];
"1000481" -> "1000476"  [label="DDG: __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
}
