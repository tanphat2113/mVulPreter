digraph "0_Chrome_03c2e97746a2c471ae136b0c669f8d0c033fe168_0@API" {
"1000167" [label="(Call,allocator->FinalizeHistogram(histogram_ref,\n                                   histogram == tentative_histogram_ptr))"];
"1000116" [label="(Call,histogram_ref = 0)"];
"1000143" [label="(Call,!histogram_ref)"];
"1000169" [label="(Call,histogram == tentative_histogram_ptr)"];
"1000160" [label="(Call,histogram = StatisticsRecorder::RegisterOrDeleteDuplicate(\n        tentative_histogram.release()))"];
"1000162" [label="(Call,StatisticsRecorder::RegisterOrDeleteDuplicate(\n        tentative_histogram.release()))"];
"1000157" [label="(Call,* tentative_histogram_ptr = tentative_histogram.get())"];
"1000161" [label="(Identifier,histogram)"];
"1000170" [label="(Identifier,histogram)"];
"1000165" [label="(Identifier,histogram_ref)"];
"1000160" [label="(Call,histogram = StatisticsRecorder::RegisterOrDeleteDuplicate(\n        tentative_histogram.release()))"];
"1000159" [label="(Call,tentative_histogram.get())"];
"1000163" [label="(Call,tentative_histogram.release())"];
"1000157" [label="(Call,* tentative_histogram_ptr = tentative_histogram.get())"];
"1000122" [label="(Identifier,allocator)"];
"1000144" [label="(Identifier,histogram_ref)"];
"1000114" [label="(Block,)"];
"1000158" [label="(Identifier,tentative_histogram_ptr)"];
"1000167" [label="(Call,allocator->FinalizeHistogram(histogram_ref,\n                                   histogram == tentative_histogram_ptr))"];
"1000187" [label="(MethodReturn,HistogramBase*)"];
"1000162" [label="(Call,StatisticsRecorder::RegisterOrDeleteDuplicate(\n        tentative_histogram.release()))"];
"1000142" [label="(Call,DCHECK(!histogram_ref))"];
"1000185" [label="(Return,return histogram;)"];
"1000117" [label="(Identifier,histogram_ref)"];
"1000169" [label="(Call,histogram == tentative_histogram_ptr)"];
"1000143" [label="(Call,!histogram_ref)"];
"1000116" [label="(Call,histogram_ref = 0)"];
"1000171" [label="(Identifier,tentative_histogram_ptr)"];
"1000168" [label="(Identifier,histogram_ref)"];
"1000166" [label="(Block,)"];
"1000118" [label="(Literal,0)"];
"1000174" [label="(Identifier,histogram)"];
"1000167" -> "1000166"  [label="AST: "];
"1000167" -> "1000169"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000169" -> "1000167"  [label="AST: "];
"1000174" -> "1000167"  [label="CFG: "];
"1000167" -> "1000187"  [label="DDG: histogram_ref"];
"1000167" -> "1000187"  [label="DDG: histogram == tentative_histogram_ptr"];
"1000167" -> "1000187"  [label="DDG: allocator->FinalizeHistogram(histogram_ref,\n                                   histogram == tentative_histogram_ptr)"];
"1000116" -> "1000167"  [label="DDG: histogram_ref"];
"1000143" -> "1000167"  [label="DDG: histogram_ref"];
"1000169" -> "1000167"  [label="DDG: histogram"];
"1000169" -> "1000167"  [label="DDG: tentative_histogram_ptr"];
"1000116" -> "1000114"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000122" -> "1000116"  [label="CFG: "];
"1000116" -> "1000187"  [label="DDG: histogram_ref"];
"1000116" -> "1000143"  [label="DDG: histogram_ref"];
"1000143" -> "1000142"  [label="AST: "];
"1000143" -> "1000144"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000142" -> "1000143"  [label="CFG: "];
"1000143" -> "1000187"  [label="DDG: histogram_ref"];
"1000143" -> "1000142"  [label="DDG: histogram_ref"];
"1000169" -> "1000171"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000171" -> "1000169"  [label="AST: "];
"1000169" -> "1000187"  [label="DDG: tentative_histogram_ptr"];
"1000169" -> "1000187"  [label="DDG: histogram"];
"1000160" -> "1000169"  [label="DDG: histogram"];
"1000157" -> "1000169"  [label="DDG: tentative_histogram_ptr"];
"1000169" -> "1000185"  [label="DDG: histogram"];
"1000160" -> "1000114"  [label="AST: "];
"1000160" -> "1000162"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000162" -> "1000160"  [label="AST: "];
"1000165" -> "1000160"  [label="CFG: "];
"1000160" -> "1000187"  [label="DDG: StatisticsRecorder::RegisterOrDeleteDuplicate(\n        tentative_histogram.release())"];
"1000160" -> "1000187"  [label="DDG: histogram"];
"1000162" -> "1000160"  [label="DDG: tentative_histogram.release()"];
"1000160" -> "1000185"  [label="DDG: histogram"];
"1000162" -> "1000163"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000162" -> "1000187"  [label="DDG: tentative_histogram.release()"];
"1000157" -> "1000114"  [label="AST: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000161" -> "1000157"  [label="CFG: "];
"1000157" -> "1000187"  [label="DDG: tentative_histogram.get()"];
"1000157" -> "1000187"  [label="DDG: tentative_histogram_ptr"];
}
