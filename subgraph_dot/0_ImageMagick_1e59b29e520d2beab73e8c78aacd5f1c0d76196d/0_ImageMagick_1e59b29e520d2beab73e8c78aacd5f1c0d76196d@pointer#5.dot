digraph "0_ImageMagick_1e59b29e520d2beab73e8c78aacd5f1c0d76196d@pointer" {
"1000433" [label="(Call,image->colors=(size_t) (GetQuantumRange(1UL*i)+1))"];
"1000437" [label="(Call,(size_t) (GetQuantumRange(1UL*i)+1))"];
"1000440" [label="(Call,GetQuantumRange(1UL*i))"];
"1000441" [label="(Call,1UL*i)"];
"1000407" [label="(Call,i==0)"];
"1000403" [label="(Call,i=1)"];
"1000366" [label="(Call,i=0)"];
"1000377" [label="(Call,i=8)"];
"1000390" [label="(Call,i=4)"];
"1001060" [label="(Call,(ssize_t)image->colors)"];
"1001058" [label="(Call,i < (ssize_t)image->colors)"];
"1001077" [label="(Call,(unsigned char) i)"];
"1001076" [label="(Call,ScaleCharToQuantum((unsigned char) i))"];
"1001068" [label="(Call,image->colormap[i].red=ScaleCharToQuantum((unsigned char) i))"];
"1001346" [label="(Call,image->colormap[i].red!=sample)"];
"1001357" [label="(Call,image->colormap[i].green!=sample)"];
"1001368" [label="(Call,image->colormap[i].blue!=sample)"];
"1001089" [label="(Call,(unsigned char) i)"];
"1001088" [label="(Call,ScaleCharToQuantum((unsigned char) i))"];
"1001080" [label="(Call,image->colormap[i].green=ScaleCharToQuantum((unsigned char) i))"];
"1001101" [label="(Call,(unsigned char) i)"];
"1001065" [label="(Call,i++)"];
"1001100" [label="(Call,ScaleCharToQuantum((unsigned char) i))"];
"1001092" [label="(Call,image->colormap[i].blue=ScaleCharToQuantum((unsigned char) i))"];
"1001330" [label="(Call,(ssize_t)image->colors)"];
"1001328" [label="(Call,i < (ssize_t)image->colors)"];
"1001342" [label="(Call,(unsigned char) i)"];
"1001335" [label="(Call,i++)"];
"1001341" [label="(Call,ScaleCharToQuantum((unsigned char) i))"];
"1001339" [label="(Call,sample=ScaleCharToQuantum((unsigned char) i))"];
"1000871" [label="(Call,image->colormap[i].red=(Quantum) ReadBlobLSBShort(palette))"];
"1001346" [label="(Call,image->colormap[i].red!=sample)"];
"1001088" [label="(Call,ScaleCharToQuantum((unsigned char) i))"];
"1000412" [label="(Identifier,depth)"];
"1000369" [label="(ControlStructure,if(ldblk==(int) Header.Width))"];
"1001043" [label="(Call,AcquireImageColormap(image,image->colors))"];
"1001336" [label="(Identifier,i)"];
"1001081" [label="(Call,image->colormap[i].green)"];
"1001325" [label="(Call,i=0)"];
"1001377" [label="(ControlStructure,goto Finish;)"];
"1001077" [label="(Call,(unsigned char) i)"];
"1001355" [label="(ControlStructure,goto Finish;)"];
"1001368" [label="(Call,image->colormap[i].blue!=sample)"];
"1000404" [label="(Identifier,i)"];
"1000448" [label="(Identifier,image_info)"];
"1000433" [label="(Call,image->colors=(size_t) (GetQuantumRange(1UL*i)+1))"];
"1000406" [label="(ControlStructure,if(i==0))"];
"1001065" [label="(Call,i++)"];
"1001329" [label="(Identifier,i)"];
"1001356" [label="(ControlStructure,if(image->colormap[i].green!=sample))"];
"1001354" [label="(Identifier,sample)"];
"1000444" [label="(Literal,1)"];
"1000371" [label="(Identifier,ldblk)"];
"1001103" [label="(Identifier,i)"];
"1001382" [label="(Identifier,image)"];
"1000443" [label="(Identifier,i)"];
"1001367" [label="(ControlStructure,if(image->colormap[i].blue!=sample))"];
"1000368" [label="(Literal,0)"];
"1000774" [label="(Call,AcquireImageColormap(image,image->colors))"];
"1000367" [label="(Identifier,i)"];
"1001059" [label="(Identifier,i)"];
"1001066" [label="(Identifier,i)"];
"1000391" [label="(Identifier,i)"];
"1001062" [label="(Call,image->colors)"];
"1001347" [label="(Call,image->colormap[i].red)"];
"1001084" [label="(Identifier,image)"];
"1000434" [label="(Call,image->colors)"];
"1000442" [label="(Literal,1UL)"];
"1000392" [label="(Literal,4)"];
"1000408" [label="(Identifier,i)"];
"1001345" [label="(ControlStructure,if(image->colormap[i].red!=sample))"];
"1001093" [label="(Call,image->colormap[i].blue)"];
"1000440" [label="(Call,GetQuantumRange(1UL*i))"];
"1000410" [label="(ControlStructure,goto CUT_KO;)"];
"1000122" [label="(Block,)"];
"1001101" [label="(Call,(unsigned char) i)"];
"1001055" [label="(Call,i=0)"];
"1001337" [label="(Block,)"];
"1000379" [label="(Literal,8)"];
"1000380" [label="(ControlStructure,if(2*ldblk==(int) Header.Width))"];
"1000943" [label="(Call,image->colormap[i].green=ClampToQuantum\n                (((double) image->colormap[i].green*QuantumRange+(PalHeader.MaxGreen>>1))/PalHeader.MaxGreen))"];
"1000922" [label="(Call,image->colormap[i].green=(Quantum) ReadBlobLSBShort(palette))"];
"1001339" [label="(Call,sample=ScaleCharToQuantum((unsigned char) i))"];
"1001340" [label="(Identifier,sample)"];
"1001067" [label="(Block,)"];
"1000390" [label="(Call,i=4)"];
"1000396" [label="(Literal,8)"];
"1000393" [label="(ControlStructure,if(8*ldblk==(int) Header.Width))"];
"1000366" [label="(Call,i=0)"];
"1001358" [label="(Call,image->colormap[i].green)"];
"1001332" [label="(Call,image->colors)"];
"1001361" [label="(Identifier,image)"];
"1001328" [label="(Call,i < (ssize_t)image->colors)"];
"1000377" [label="(Call,i=8)"];
"1001520" [label="(MethodReturn,static Image *)"];
"1001357" [label="(Call,image->colormap[i].green!=sample)"];
"1001079" [label="(Identifier,i)"];
"1001372" [label="(Identifier,image)"];
"1001335" [label="(Call,i++)"];
"1001092" [label="(Call,image->colormap[i].blue=ScaleCharToQuantum((unsigned char) i))"];
"1001344" [label="(Identifier,i)"];
"1000441" [label="(Call,1UL*i)"];
"1000892" [label="(Call,image->colormap[i].red=ClampToQuantum(((double)\n                image->colormap[i].red*QuantumRange+(PalHeader.MaxRed>>1))/\n                PalHeader.MaxRed))"];
"1001076" [label="(Call,ScaleCharToQuantum((unsigned char) i))"];
"1000994" [label="(Call,image->colormap[i].blue=ClampToQuantum\n                (((double)image->colormap[i].blue*QuantumRange+(PalHeader.MaxBlue>>1))/PalHeader.MaxBlue))"];
"1001350" [label="(Identifier,image)"];
"1000378" [label="(Identifier,i)"];
"1000405" [label="(Literal,1)"];
"1000403" [label="(Call,i=1)"];
"1001060" [label="(Call,(ssize_t)image->colors)"];
"1001054" [label="(ControlStructure,for (i=0; i < (ssize_t)image->colors; i++))"];
"1001324" [label="(ControlStructure,for (i=0; i < (ssize_t)image->colors; i++))"];
"1001091" [label="(Identifier,i)"];
"1000439" [label="(Call,GetQuantumRange(1UL*i)+1)"];
"1001365" [label="(Identifier,sample)"];
"1001072" [label="(Identifier,image)"];
"1001369" [label="(Call,image->colormap[i].blue)"];
"1001341" [label="(Call,ScaleCharToQuantum((unsigned char) i))"];
"1001330" [label="(Call,(ssize_t)image->colors)"];
"1000973" [label="(Call,image->colormap[i].blue=(Quantum) ReadBlobLSBShort(palette))"];
"1001068" [label="(Call,image->colormap[i].red=ScaleCharToQuantum((unsigned char) i))"];
"1001089" [label="(Call,(unsigned char) i)"];
"1000437" [label="(Call,(size_t) (GetQuantumRange(1UL*i)+1))"];
"1000407" [label="(Call,i==0)"];
"1000411" [label="(Call,depth=i)"];
"1000383" [label="(Literal,2)"];
"1001069" [label="(Call,image->colormap[i].red)"];
"1001100" [label="(Call,ScaleCharToQuantum((unsigned char) i))"];
"1001058" [label="(Call,i < (ssize_t)image->colors)"];
"1001376" [label="(Identifier,sample)"];
"1001080" [label="(Call,image->colormap[i].green=ScaleCharToQuantum((unsigned char) i))"];
"1001342" [label="(Call,(unsigned char) i)"];
"1000409" [label="(Literal,0)"];
"1001366" [label="(ControlStructure,goto Finish;)"];
"1001096" [label="(Identifier,image)"];
"1001105" [label="(Identifier,BImgBuff)"];
"1000433" -> "1000122"  [label="AST: "];
"1000433" -> "1000437"  [label="CFG: "];
"1000434" -> "1000433"  [label="AST: "];
"1000437" -> "1000433"  [label="AST: "];
"1000448" -> "1000433"  [label="CFG: "];
"1000433" -> "1001520"  [label="DDG: (size_t) (GetQuantumRange(1UL*i)+1)"];
"1000433" -> "1001520"  [label="DDG: image->colors"];
"1000437" -> "1000433"  [label="DDG: GetQuantumRange(1UL*i)+1"];
"1000433" -> "1001060"  [label="DDG: image->colors"];
"1000433" -> "1001330"  [label="DDG: image->colors"];
"1000437" -> "1000439"  [label="CFG: "];
"1000438" -> "1000437"  [label="AST: "];
"1000439" -> "1000437"  [label="AST: "];
"1000437" -> "1001520"  [label="DDG: GetQuantumRange(1UL*i)+1"];
"1000440" -> "1000437"  [label="DDG: 1UL*i"];
"1000440" -> "1000439"  [label="AST: "];
"1000440" -> "1000441"  [label="CFG: "];
"1000441" -> "1000440"  [label="AST: "];
"1000444" -> "1000440"  [label="CFG: "];
"1000440" -> "1001520"  [label="DDG: 1UL*i"];
"1000440" -> "1000439"  [label="DDG: 1UL*i"];
"1000441" -> "1000440"  [label="DDG: 1UL"];
"1000441" -> "1000440"  [label="DDG: i"];
"1000441" -> "1000443"  [label="CFG: "];
"1000442" -> "1000441"  [label="AST: "];
"1000443" -> "1000441"  [label="AST: "];
"1000441" -> "1001520"  [label="DDG: i"];
"1000407" -> "1000441"  [label="DDG: i"];
"1000407" -> "1000406"  [label="AST: "];
"1000407" -> "1000409"  [label="CFG: "];
"1000408" -> "1000407"  [label="AST: "];
"1000409" -> "1000407"  [label="AST: "];
"1000410" -> "1000407"  [label="CFG: "];
"1000412" -> "1000407"  [label="CFG: "];
"1000407" -> "1001520"  [label="DDG: i==0"];
"1000403" -> "1000407"  [label="DDG: i"];
"1000366" -> "1000407"  [label="DDG: i"];
"1000377" -> "1000407"  [label="DDG: i"];
"1000390" -> "1000407"  [label="DDG: i"];
"1000407" -> "1000411"  [label="DDG: i"];
"1000403" -> "1000393"  [label="AST: "];
"1000403" -> "1000405"  [label="CFG: "];
"1000404" -> "1000403"  [label="AST: "];
"1000405" -> "1000403"  [label="AST: "];
"1000408" -> "1000403"  [label="CFG: "];
"1000366" -> "1000122"  [label="AST: "];
"1000366" -> "1000368"  [label="CFG: "];
"1000367" -> "1000366"  [label="AST: "];
"1000368" -> "1000366"  [label="AST: "];
"1000371" -> "1000366"  [label="CFG: "];
"1000377" -> "1000369"  [label="AST: "];
"1000377" -> "1000379"  [label="CFG: "];
"1000378" -> "1000377"  [label="AST: "];
"1000379" -> "1000377"  [label="AST: "];
"1000383" -> "1000377"  [label="CFG: "];
"1000390" -> "1000380"  [label="AST: "];
"1000390" -> "1000392"  [label="CFG: "];
"1000391" -> "1000390"  [label="AST: "];
"1000392" -> "1000390"  [label="AST: "];
"1000396" -> "1000390"  [label="CFG: "];
"1001060" -> "1001058"  [label="AST: "];
"1001060" -> "1001062"  [label="CFG: "];
"1001061" -> "1001060"  [label="AST: "];
"1001062" -> "1001060"  [label="AST: "];
"1001058" -> "1001060"  [label="CFG: "];
"1001060" -> "1001520"  [label="DDG: image->colors"];
"1001060" -> "1001058"  [label="DDG: image->colors"];
"1001043" -> "1001060"  [label="DDG: image->colors"];
"1000774" -> "1001060"  [label="DDG: image->colors"];
"1001060" -> "1001330"  [label="DDG: image->colors"];
"1001058" -> "1001054"  [label="AST: "];
"1001059" -> "1001058"  [label="AST: "];
"1001072" -> "1001058"  [label="CFG: "];
"1001105" -> "1001058"  [label="CFG: "];
"1001058" -> "1001520"  [label="DDG: i < (ssize_t)image->colors"];
"1001058" -> "1001520"  [label="DDG: (ssize_t)image->colors"];
"1001065" -> "1001058"  [label="DDG: i"];
"1001055" -> "1001058"  [label="DDG: i"];
"1001058" -> "1001077"  [label="DDG: i"];
"1001077" -> "1001076"  [label="AST: "];
"1001077" -> "1001079"  [label="CFG: "];
"1001078" -> "1001077"  [label="AST: "];
"1001079" -> "1001077"  [label="AST: "];
"1001076" -> "1001077"  [label="CFG: "];
"1001077" -> "1001076"  [label="DDG: i"];
"1001077" -> "1001089"  [label="DDG: i"];
"1001076" -> "1001068"  [label="AST: "];
"1001068" -> "1001076"  [label="CFG: "];
"1001076" -> "1001068"  [label="DDG: (unsigned char) i"];
"1001068" -> "1001067"  [label="AST: "];
"1001069" -> "1001068"  [label="AST: "];
"1001084" -> "1001068"  [label="CFG: "];
"1001068" -> "1001520"  [label="DDG: image->colormap[i].red"];
"1001068" -> "1001346"  [label="DDG: image->colormap[i].red"];
"1001346" -> "1001345"  [label="AST: "];
"1001346" -> "1001354"  [label="CFG: "];
"1001347" -> "1001346"  [label="AST: "];
"1001354" -> "1001346"  [label="AST: "];
"1001355" -> "1001346"  [label="CFG: "];
"1001361" -> "1001346"  [label="CFG: "];
"1001346" -> "1001520"  [label="DDG: image->colormap[i].red"];
"1001346" -> "1001520"  [label="DDG: sample"];
"1001346" -> "1001520"  [label="DDG: image->colormap[i].red!=sample"];
"1000892" -> "1001346"  [label="DDG: image->colormap[i].red"];
"1000871" -> "1001346"  [label="DDG: image->colormap[i].red"];
"1001339" -> "1001346"  [label="DDG: sample"];
"1001346" -> "1001357"  [label="DDG: sample"];
"1001357" -> "1001356"  [label="AST: "];
"1001357" -> "1001365"  [label="CFG: "];
"1001358" -> "1001357"  [label="AST: "];
"1001365" -> "1001357"  [label="AST: "];
"1001366" -> "1001357"  [label="CFG: "];
"1001372" -> "1001357"  [label="CFG: "];
"1001357" -> "1001520"  [label="DDG: image->colormap[i].green!=sample"];
"1001357" -> "1001520"  [label="DDG: sample"];
"1001357" -> "1001520"  [label="DDG: image->colormap[i].green"];
"1000943" -> "1001357"  [label="DDG: image->colormap[i].green"];
"1000922" -> "1001357"  [label="DDG: image->colormap[i].green"];
"1001080" -> "1001357"  [label="DDG: image->colormap[i].green"];
"1001357" -> "1001368"  [label="DDG: sample"];
"1001368" -> "1001367"  [label="AST: "];
"1001368" -> "1001376"  [label="CFG: "];
"1001369" -> "1001368"  [label="AST: "];
"1001376" -> "1001368"  [label="AST: "];
"1001377" -> "1001368"  [label="CFG: "];
"1001336" -> "1001368"  [label="CFG: "];
"1001368" -> "1001520"  [label="DDG: sample"];
"1001368" -> "1001520"  [label="DDG: image->colormap[i].blue!=sample"];
"1001368" -> "1001520"  [label="DDG: image->colormap[i].blue"];
"1000973" -> "1001368"  [label="DDG: image->colormap[i].blue"];
"1000994" -> "1001368"  [label="DDG: image->colormap[i].blue"];
"1001092" -> "1001368"  [label="DDG: image->colormap[i].blue"];
"1001089" -> "1001088"  [label="AST: "];
"1001089" -> "1001091"  [label="CFG: "];
"1001090" -> "1001089"  [label="AST: "];
"1001091" -> "1001089"  [label="AST: "];
"1001088" -> "1001089"  [label="CFG: "];
"1001089" -> "1001088"  [label="DDG: i"];
"1001089" -> "1001101"  [label="DDG: i"];
"1001088" -> "1001080"  [label="AST: "];
"1001080" -> "1001088"  [label="CFG: "];
"1001088" -> "1001080"  [label="DDG: (unsigned char) i"];
"1001080" -> "1001067"  [label="AST: "];
"1001081" -> "1001080"  [label="AST: "];
"1001096" -> "1001080"  [label="CFG: "];
"1001080" -> "1001520"  [label="DDG: image->colormap[i].green"];
"1001101" -> "1001100"  [label="AST: "];
"1001101" -> "1001103"  [label="CFG: "];
"1001102" -> "1001101"  [label="AST: "];
"1001103" -> "1001101"  [label="AST: "];
"1001100" -> "1001101"  [label="CFG: "];
"1001101" -> "1001065"  [label="DDG: i"];
"1001101" -> "1001100"  [label="DDG: i"];
"1001065" -> "1001054"  [label="AST: "];
"1001065" -> "1001066"  [label="CFG: "];
"1001066" -> "1001065"  [label="AST: "];
"1001059" -> "1001065"  [label="CFG: "];
"1001100" -> "1001092"  [label="AST: "];
"1001092" -> "1001100"  [label="CFG: "];
"1001100" -> "1001520"  [label="DDG: (unsigned char) i"];
"1001100" -> "1001092"  [label="DDG: (unsigned char) i"];
"1001092" -> "1001067"  [label="AST: "];
"1001093" -> "1001092"  [label="AST: "];
"1001066" -> "1001092"  [label="CFG: "];
"1001092" -> "1001520"  [label="DDG: ScaleCharToQuantum((unsigned char) i)"];
"1001092" -> "1001520"  [label="DDG: image->colormap[i].blue"];
"1001330" -> "1001328"  [label="AST: "];
"1001330" -> "1001332"  [label="CFG: "];
"1001331" -> "1001330"  [label="AST: "];
"1001332" -> "1001330"  [label="AST: "];
"1001328" -> "1001330"  [label="CFG: "];
"1001330" -> "1001520"  [label="DDG: image->colors"];
"1001330" -> "1001328"  [label="DDG: image->colors"];
"1000774" -> "1001330"  [label="DDG: image->colors"];
"1001328" -> "1001324"  [label="AST: "];
"1001329" -> "1001328"  [label="AST: "];
"1001340" -> "1001328"  [label="CFG: "];
"1001382" -> "1001328"  [label="CFG: "];
"1001328" -> "1001520"  [label="DDG: (ssize_t)image->colors"];
"1001328" -> "1001520"  [label="DDG: i < (ssize_t)image->colors"];
"1001325" -> "1001328"  [label="DDG: i"];
"1001335" -> "1001328"  [label="DDG: i"];
"1001328" -> "1001342"  [label="DDG: i"];
"1001342" -> "1001341"  [label="AST: "];
"1001342" -> "1001344"  [label="CFG: "];
"1001343" -> "1001342"  [label="AST: "];
"1001344" -> "1001342"  [label="AST: "];
"1001341" -> "1001342"  [label="CFG: "];
"1001342" -> "1001520"  [label="DDG: i"];
"1001342" -> "1001335"  [label="DDG: i"];
"1001342" -> "1001341"  [label="DDG: i"];
"1001335" -> "1001324"  [label="AST: "];
"1001335" -> "1001336"  [label="CFG: "];
"1001336" -> "1001335"  [label="AST: "];
"1001329" -> "1001335"  [label="CFG: "];
"1001341" -> "1001339"  [label="AST: "];
"1001339" -> "1001341"  [label="CFG: "];
"1001341" -> "1001520"  [label="DDG: (unsigned char) i"];
"1001341" -> "1001339"  [label="DDG: (unsigned char) i"];
"1001339" -> "1001337"  [label="AST: "];
"1001340" -> "1001339"  [label="AST: "];
"1001350" -> "1001339"  [label="CFG: "];
"1001339" -> "1001520"  [label="DDG: ScaleCharToQuantum((unsigned char) i)"];
}
