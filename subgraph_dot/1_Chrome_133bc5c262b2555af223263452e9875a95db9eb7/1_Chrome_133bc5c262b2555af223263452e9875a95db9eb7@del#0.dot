digraph "1_Chrome_133bc5c262b2555af223263452e9875a95db9eb7@del" {
"1000297" [label="(Call,TokenExitsSVG(token))"];
"1000141" [label="(Call,TokenExitsSVG(token))"];
"1000132" [label="(Call,TokenExitsForeignContent(token))"];
"1000101" [label="(MethodParameterIn,const CompactHTMLToken& token)"];
"1000147" [label="(Call,TokenExitsMath(token))"];
"1000249" [label="(Call,TokenExitsInSelect(token))"];
"1000293" [label="(Call,namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token))"];
"1000290" [label="(Call,namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token))"];
"1000289" [label="(Call,(namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token)))"];
"1000281" [label="(Call,(namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)) ||\n        (namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token)))"];
"1000273" [label="(Call,(namespace_stack_.back() == SVG &&\n          ThreadSafeMatch(tag_name, SVGNames::svgTag)) ||\n         (namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)) ||\n        (namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token)))"];
"1000306" [label="(Call,TokenExitsMath(token))"];
"1000302" [label="(Call,namespace_stack_.back() == HTML && TokenExitsMath(token))"];
"1000299" [label="(Call,namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token))"];
"1000300" [label="(Call,namespace_stack_.Contains(kMathML))"];
"1000101" [label="(MethodParameterIn,const CompactHTMLToken& token)"];
"1000302" [label="(Call,namespace_stack_.back() == HTML && TokenExitsMath(token))"];
"1000272" [label="(ControlStructure,if ((namespace_stack_.back() == SVG &&\n          ThreadSafeMatch(tag_name, SVGNames::svgTag)) ||\n         (namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)) ||\n        (namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token))))"];
"1000250" [label="(Identifier,token)"];
"1000273" [label="(Call,(namespace_stack_.back() == SVG &&\n          ThreadSafeMatch(tag_name, SVGNames::svgTag)) ||\n         (namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)) ||\n        (namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token)))"];
"1000291" [label="(Call,namespace_stack_.Contains(SVG))"];
"1000130" [label="(Call,InForeignContent() && TokenExitsForeignContent(token))"];
"1000298" [label="(Identifier,token)"];
"1000307" [label="(Identifier,token)"];
"1000344" [label="(MethodReturn,HTMLTreeBuilderSimulator::SimulatedToken)"];
"1000132" [label="(Call,TokenExitsForeignContent(token))"];
"1000294" [label="(Call,namespace_stack_.back() == HTML)"];
"1000274" [label="(Call,namespace_stack_.back() == SVG &&\n          ThreadSafeMatch(tag_name, SVGNames::svgTag))"];
"1000312" [label="(Identifier,tag_name)"];
"1000299" [label="(Call,namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token))"];
"1000309" [label="(Call,namespace_stack_.pop_back())"];
"1000147" [label="(Call,TokenExitsMath(token))"];
"1000301" [label="(Identifier,kMathML)"];
"1000306" [label="(Call,TokenExitsMath(token))"];
"1000303" [label="(Call,namespace_stack_.back() == HTML)"];
"1000137" [label="(Call,namespace_stack_.back() == SVG && TokenExitsSVG(token))"];
"1000297" [label="(Call,TokenExitsSVG(token))"];
"1000141" [label="(Call,TokenExitsSVG(token))"];
"1000142" [label="(Identifier,token)"];
"1000133" [label="(Identifier,token)"];
"1000247" [label="(Call,in_select_insertion_mode_ && TokenExitsInSelect(token))"];
"1000290" [label="(Call,namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token))"];
"1000148" [label="(Identifier,token)"];
"1000282" [label="(Call,namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag))"];
"1000281" [label="(Call,(namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)) ||\n        (namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token)))"];
"1000143" [label="(Call,namespace_stack_.back() == kMathML && TokenExitsMath(token))"];
"1000289" [label="(Call,(namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token)))"];
"1000293" [label="(Call,namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token))"];
"1000249" [label="(Call,TokenExitsInSelect(token))"];
"1000297" -> "1000293"  [label="AST: "];
"1000297" -> "1000298"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000293" -> "1000297"  [label="CFG: "];
"1000297" -> "1000344"  [label="DDG: token"];
"1000297" -> "1000293"  [label="DDG: token"];
"1000141" -> "1000297"  [label="DDG: token"];
"1000147" -> "1000297"  [label="DDG: token"];
"1000132" -> "1000297"  [label="DDG: token"];
"1000249" -> "1000297"  [label="DDG: token"];
"1000101" -> "1000297"  [label="DDG: token"];
"1000297" -> "1000306"  [label="DDG: token"];
"1000141" -> "1000137"  [label="AST: "];
"1000141" -> "1000142"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000137" -> "1000141"  [label="CFG: "];
"1000141" -> "1000344"  [label="DDG: token"];
"1000141" -> "1000137"  [label="DDG: token"];
"1000132" -> "1000141"  [label="DDG: token"];
"1000101" -> "1000141"  [label="DDG: token"];
"1000141" -> "1000147"  [label="DDG: token"];
"1000141" -> "1000249"  [label="DDG: token"];
"1000141" -> "1000306"  [label="DDG: token"];
"1000132" -> "1000130"  [label="AST: "];
"1000132" -> "1000133"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000132" -> "1000344"  [label="DDG: token"];
"1000132" -> "1000130"  [label="DDG: token"];
"1000101" -> "1000132"  [label="DDG: token"];
"1000132" -> "1000147"  [label="DDG: token"];
"1000132" -> "1000249"  [label="DDG: token"];
"1000132" -> "1000306"  [label="DDG: token"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000344"  [label="DDG: token"];
"1000101" -> "1000147"  [label="DDG: token"];
"1000101" -> "1000249"  [label="DDG: token"];
"1000101" -> "1000306"  [label="DDG: token"];
"1000147" -> "1000143"  [label="AST: "];
"1000147" -> "1000148"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000143" -> "1000147"  [label="CFG: "];
"1000147" -> "1000344"  [label="DDG: token"];
"1000147" -> "1000143"  [label="DDG: token"];
"1000147" -> "1000249"  [label="DDG: token"];
"1000147" -> "1000306"  [label="DDG: token"];
"1000249" -> "1000247"  [label="AST: "];
"1000249" -> "1000250"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000247" -> "1000249"  [label="CFG: "];
"1000249" -> "1000344"  [label="DDG: token"];
"1000249" -> "1000247"  [label="DDG: token"];
"1000249" -> "1000306"  [label="DDG: token"];
"1000293" -> "1000290"  [label="AST: "];
"1000293" -> "1000294"  [label="CFG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000290" -> "1000293"  [label="CFG: "];
"1000293" -> "1000344"  [label="DDG: namespace_stack_.back() == HTML"];
"1000293" -> "1000344"  [label="DDG: TokenExitsSVG(token)"];
"1000293" -> "1000290"  [label="DDG: namespace_stack_.back() == HTML"];
"1000293" -> "1000290"  [label="DDG: TokenExitsSVG(token)"];
"1000294" -> "1000293"  [label="DDG: namespace_stack_.back()"];
"1000294" -> "1000293"  [label="DDG: HTML"];
"1000137" -> "1000293"  [label="DDG: TokenExitsSVG(token)"];
"1000290" -> "1000289"  [label="AST: "];
"1000290" -> "1000291"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000301" -> "1000290"  [label="CFG: "];
"1000289" -> "1000290"  [label="CFG: "];
"1000290" -> "1000344"  [label="DDG: namespace_stack_.Contains(SVG)"];
"1000290" -> "1000344"  [label="DDG: namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)"];
"1000290" -> "1000289"  [label="DDG: namespace_stack_.Contains(SVG)"];
"1000290" -> "1000289"  [label="DDG: namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)"];
"1000291" -> "1000290"  [label="DDG: SVG"];
"1000289" -> "1000281"  [label="AST: "];
"1000289" -> "1000299"  [label="CFG: "];
"1000299" -> "1000289"  [label="AST: "];
"1000281" -> "1000289"  [label="CFG: "];
"1000289" -> "1000344"  [label="DDG: namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)"];
"1000289" -> "1000344"  [label="DDG: namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token)"];
"1000289" -> "1000281"  [label="DDG: namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)"];
"1000289" -> "1000281"  [label="DDG: namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token)"];
"1000299" -> "1000289"  [label="DDG: namespace_stack_.Contains(kMathML)"];
"1000299" -> "1000289"  [label="DDG: namespace_stack_.back() == HTML && TokenExitsMath(token)"];
"1000281" -> "1000273"  [label="AST: "];
"1000281" -> "1000282"  [label="CFG: "];
"1000282" -> "1000281"  [label="AST: "];
"1000273" -> "1000281"  [label="CFG: "];
"1000281" -> "1000344"  [label="DDG: namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)"];
"1000281" -> "1000344"  [label="DDG: (namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token))"];
"1000281" -> "1000273"  [label="DDG: namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)"];
"1000281" -> "1000273"  [label="DDG: (namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token))"];
"1000282" -> "1000281"  [label="DDG: namespace_stack_.back() == kMathML"];
"1000282" -> "1000281"  [label="DDG: ThreadSafeMatch(tag_name, MathMLNames::mathTag)"];
"1000273" -> "1000272"  [label="AST: "];
"1000273" -> "1000274"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000309" -> "1000273"  [label="CFG: "];
"1000312" -> "1000273"  [label="CFG: "];
"1000273" -> "1000344"  [label="DDG: namespace_stack_.back() == SVG &&\n          ThreadSafeMatch(tag_name, SVGNames::svgTag)"];
"1000273" -> "1000344"  [label="DDG: (namespace_stack_.back() == SVG &&\n          ThreadSafeMatch(tag_name, SVGNames::svgTag)) ||\n         (namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)) ||\n        (namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token))"];
"1000273" -> "1000344"  [label="DDG: (namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)) ||\n        (namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token))"];
"1000274" -> "1000273"  [label="DDG: namespace_stack_.back() == SVG"];
"1000274" -> "1000273"  [label="DDG: ThreadSafeMatch(tag_name, SVGNames::svgTag)"];
"1000306" -> "1000302"  [label="AST: "];
"1000306" -> "1000307"  [label="CFG: "];
"1000307" -> "1000306"  [label="AST: "];
"1000302" -> "1000306"  [label="CFG: "];
"1000306" -> "1000344"  [label="DDG: token"];
"1000306" -> "1000302"  [label="DDG: token"];
"1000302" -> "1000299"  [label="AST: "];
"1000302" -> "1000303"  [label="CFG: "];
"1000303" -> "1000302"  [label="AST: "];
"1000299" -> "1000302"  [label="CFG: "];
"1000302" -> "1000344"  [label="DDG: namespace_stack_.back() == HTML"];
"1000302" -> "1000344"  [label="DDG: TokenExitsMath(token)"];
"1000302" -> "1000299"  [label="DDG: namespace_stack_.back() == HTML"];
"1000302" -> "1000299"  [label="DDG: TokenExitsMath(token)"];
"1000303" -> "1000302"  [label="DDG: namespace_stack_.back()"];
"1000303" -> "1000302"  [label="DDG: HTML"];
"1000143" -> "1000302"  [label="DDG: TokenExitsMath(token)"];
"1000299" -> "1000300"  [label="CFG: "];
"1000300" -> "1000299"  [label="AST: "];
"1000299" -> "1000344"  [label="DDG: namespace_stack_.back() == HTML && TokenExitsMath(token)"];
"1000299" -> "1000344"  [label="DDG: namespace_stack_.Contains(kMathML)"];
"1000300" -> "1000299"  [label="DDG: kMathML"];
}
