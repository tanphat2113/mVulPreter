digraph "1_Chrome_133bc5c262b2555af223263452e9875a95db9eb7@del" {
"1000291" [label="(Call,namespace_stack_.Contains(SVG))"];
"1000275" [label="(Call,namespace_stack_.back() == SVG)"];
"1000138" [label="(Call,namespace_stack_.back() == SVG)"];
"1000121" [label="(Call,namespace_stack_.push_back(SVG))"];
"1000290" [label="(Call,namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token))"];
"1000289" [label="(Call,(namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token)))"];
"1000281" [label="(Call,(namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)) ||\n        (namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token)))"];
"1000273" [label="(Call,(namespace_stack_.back() == SVG &&\n          ThreadSafeMatch(tag_name, SVGNames::svgTag)) ||\n         (namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)) ||\n        (namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token)))"];
"1000275" [label="(Call,namespace_stack_.back() == SVG)"];
"1000272" [label="(ControlStructure,if ((namespace_stack_.back() == SVG &&\n          ThreadSafeMatch(tag_name, SVGNames::svgTag)) ||\n         (namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)) ||\n        (namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token))))"];
"1000277" [label="(Identifier,SVG)"];
"1000276" [label="(Call,namespace_stack_.back())"];
"1000273" [label="(Call,(namespace_stack_.back() == SVG &&\n          ThreadSafeMatch(tag_name, SVGNames::svgTag)) ||\n         (namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)) ||\n        (namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token)))"];
"1000291" [label="(Call,namespace_stack_.Contains(SVG))"];
"1000344" [label="(MethodReturn,HTMLTreeBuilderSimulator::SimulatedToken)"];
"1000121" [label="(Call,namespace_stack_.push_back(SVG))"];
"1000138" [label="(Call,namespace_stack_.back() == SVG)"];
"1000312" [label="(Identifier,tag_name)"];
"1000274" [label="(Call,namespace_stack_.back() == SVG &&\n          ThreadSafeMatch(tag_name, SVGNames::svgTag))"];
"1000292" [label="(Identifier,SVG)"];
"1000125" [label="(Identifier,tag_name)"];
"1000122" [label="(Identifier,SVG)"];
"1000140" [label="(Identifier,SVG)"];
"1000299" [label="(Call,namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token))"];
"1000301" [label="(Identifier,kMathML)"];
"1000309" [label="(Call,namespace_stack_.pop_back())"];
"1000137" [label="(Call,namespace_stack_.back() == SVG && TokenExitsSVG(token))"];
"1000295" [label="(Call,namespace_stack_.back())"];
"1000142" [label="(Identifier,token)"];
"1000290" [label="(Call,namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token))"];
"1000139" [label="(Call,namespace_stack_.back())"];
"1000282" [label="(Call,namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag))"];
"1000281" [label="(Call,(namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)) ||\n        (namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token)))"];
"1000279" [label="(Identifier,tag_name)"];
"1000289" [label="(Call,(namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token)))"];
"1000293" [label="(Call,namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token))"];
"1000117" [label="(ControlStructure,if (ThreadSafeMatch(tag_name, SVGNames::svgTag)))"];
"1000291" -> "1000290"  [label="AST: "];
"1000291" -> "1000292"  [label="CFG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000295" -> "1000291"  [label="CFG: "];
"1000290" -> "1000291"  [label="CFG: "];
"1000291" -> "1000344"  [label="DDG: SVG"];
"1000291" -> "1000290"  [label="DDG: SVG"];
"1000275" -> "1000291"  [label="DDG: SVG"];
"1000275" -> "1000274"  [label="AST: "];
"1000275" -> "1000277"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000277" -> "1000275"  [label="AST: "];
"1000279" -> "1000275"  [label="CFG: "];
"1000274" -> "1000275"  [label="CFG: "];
"1000275" -> "1000344"  [label="DDG: namespace_stack_.back()"];
"1000275" -> "1000344"  [label="DDG: SVG"];
"1000275" -> "1000274"  [label="DDG: namespace_stack_.back()"];
"1000275" -> "1000274"  [label="DDG: SVG"];
"1000138" -> "1000275"  [label="DDG: SVG"];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000142" -> "1000138"  [label="CFG: "];
"1000137" -> "1000138"  [label="CFG: "];
"1000138" -> "1000344"  [label="DDG: namespace_stack_.back()"];
"1000138" -> "1000344"  [label="DDG: SVG"];
"1000138" -> "1000137"  [label="DDG: namespace_stack_.back()"];
"1000138" -> "1000137"  [label="DDG: SVG"];
"1000121" -> "1000138"  [label="DDG: SVG"];
"1000121" -> "1000117"  [label="AST: "];
"1000121" -> "1000122"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000125" -> "1000121"  [label="CFG: "];
"1000121" -> "1000344"  [label="DDG: namespace_stack_.push_back(SVG)"];
"1000290" -> "1000289"  [label="AST: "];
"1000290" -> "1000293"  [label="CFG: "];
"1000293" -> "1000290"  [label="AST: "];
"1000301" -> "1000290"  [label="CFG: "];
"1000289" -> "1000290"  [label="CFG: "];
"1000290" -> "1000344"  [label="DDG: namespace_stack_.Contains(SVG)"];
"1000290" -> "1000344"  [label="DDG: namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)"];
"1000290" -> "1000289"  [label="DDG: namespace_stack_.Contains(SVG)"];
"1000290" -> "1000289"  [label="DDG: namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)"];
"1000293" -> "1000290"  [label="DDG: namespace_stack_.back() == HTML"];
"1000293" -> "1000290"  [label="DDG: TokenExitsSVG(token)"];
"1000289" -> "1000281"  [label="AST: "];
"1000289" -> "1000299"  [label="CFG: "];
"1000299" -> "1000289"  [label="AST: "];
"1000281" -> "1000289"  [label="CFG: "];
"1000289" -> "1000344"  [label="DDG: namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)"];
"1000289" -> "1000344"  [label="DDG: namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token)"];
"1000289" -> "1000281"  [label="DDG: namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)"];
"1000289" -> "1000281"  [label="DDG: namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token)"];
"1000299" -> "1000289"  [label="DDG: namespace_stack_.Contains(kMathML)"];
"1000299" -> "1000289"  [label="DDG: namespace_stack_.back() == HTML && TokenExitsMath(token)"];
"1000281" -> "1000273"  [label="AST: "];
"1000281" -> "1000282"  [label="CFG: "];
"1000282" -> "1000281"  [label="AST: "];
"1000273" -> "1000281"  [label="CFG: "];
"1000281" -> "1000344"  [label="DDG: namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)"];
"1000281" -> "1000344"  [label="DDG: (namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token))"];
"1000281" -> "1000273"  [label="DDG: namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)"];
"1000281" -> "1000273"  [label="DDG: (namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token))"];
"1000282" -> "1000281"  [label="DDG: namespace_stack_.back() == kMathML"];
"1000282" -> "1000281"  [label="DDG: ThreadSafeMatch(tag_name, MathMLNames::mathTag)"];
"1000273" -> "1000272"  [label="AST: "];
"1000273" -> "1000274"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000309" -> "1000273"  [label="CFG: "];
"1000312" -> "1000273"  [label="CFG: "];
"1000273" -> "1000344"  [label="DDG: namespace_stack_.back() == SVG &&\n          ThreadSafeMatch(tag_name, SVGNames::svgTag)"];
"1000273" -> "1000344"  [label="DDG: (namespace_stack_.back() == SVG &&\n          ThreadSafeMatch(tag_name, SVGNames::svgTag)) ||\n         (namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)) ||\n        (namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token))"];
"1000273" -> "1000344"  [label="DDG: (namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)) ||\n        (namespace_stack_.Contains(SVG) && namespace_stack_.back() == HTML &&\n         TokenExitsSVG(token)) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token))"];
"1000274" -> "1000273"  [label="DDG: namespace_stack_.back() == SVG"];
"1000274" -> "1000273"  [label="DDG: ThreadSafeMatch(tag_name, SVGNames::svgTag)"];
}
