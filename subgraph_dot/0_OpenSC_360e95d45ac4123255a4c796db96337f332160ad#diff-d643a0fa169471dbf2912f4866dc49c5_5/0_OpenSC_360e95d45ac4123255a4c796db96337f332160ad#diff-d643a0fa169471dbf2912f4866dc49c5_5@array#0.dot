digraph "0_OpenSC_360e95d45ac4123255a4c796db96337f332160ad#diff-d643a0fa169471dbf2912f4866dc49c5_5@array" {
"1000219" [label="(Call,gemsafe_prkeys[i].ref = ibuf[ind+4])"];
"1000148" [label="(Call,sc_read_binary(card, 0, ibuf, GEMSAFE_READ_QUANTUM, 0))"];
"1000131" [label="(Call,sc_select_file(card, &path, &file))"];
"1000111" [label="(MethodParameterIn,sc_card_t *card)"];
"1000125" [label="(Call,sc_format_path(GEMSAFE_PATH, &path))"];
"1000230" [label="(Call,sc_log(card->ctx, \"Key container %d is allocated and uses key_ref %d\",\n\t\t\t\t\ti+1, gemsafe_prkeys[i].ref))"];
"1000262" [label="(Call,sc_log(card->ctx, \"Key container %d is unallocated\", i+1))"];
"1000331" [label="(Call,sc_log(card->ctx, \"Could not read cert object\"))"];
"1000385" [label="(Call,sc_log(card->ctx, \"Warning: Found orphaned certificate at offset %d\", ind))"];
"1000421" [label="(Call,sc_log(card->ctx,\n\t\t\t       \"Found certificate of key container %d at offset %d, len %\"SC_FORMAT_LEN_SIZE_T\"u\",\n\t\t\t       i+1, ind, certlen))"];
"1000431" [label="(Call,gemsafe_cert[i].index = ind)"];
"1000438" [label="(Call,gemsafe_cert[i].count = certlen)"];
"1000445" [label="(Call,ind += certlen)"];
"1000345" [label="(Call,ind < objlen - 1)"];
"1000361" [label="(Call,ind+1)"];
"1000394" [label="(Call,ind+3 >= sizeof ibuf)"];
"1000395" [label="(Call,ind+3)"];
"1000411" [label="(Call,ind+2)"];
"1000417" [label="(Call,ind+3)"];
"1000451" [label="(Call,ind++)"];
"1000467" [label="(Call,sc_log(card->ctx, \"Warning: Certificate of key container %d is missing\", i+1))"];
"1000438" [label="(Call,gemsafe_cert[i].count = certlen)"];
"1000146" [label="(Call,r = sc_read_binary(card, 0, ibuf, GEMSAFE_READ_QUANTUM, 0))"];
"1000386" [label="(Call,card->ctx)"];
"1000332" [label="(Call,card->ctx)"];
"1000417" [label="(Call,ind+3)"];
"1000413" [label="(Literal,2)"];
"1000335" [label="(Literal,\"Could not read cert object\")"];
"1000419" [label="(Literal,3)"];
"1000330" [label="(Block,)"];
"1000234" [label="(Literal,\"Key container %d is allocated and uses key_ref %d\")"];
"1000150" [label="(Literal,0)"];
"1000422" [label="(Call,card->ctx)"];
"1000271" [label="(Identifier,ind)"];
"1000318" [label="(Call,MIN(GEMSAFE_READ_QUANTUM, objlen - (iptr - ibuf)))"];
"1000346" [label="(Identifier,ind)"];
"1000331" [label="(Call,sc_log(card->ctx, \"Could not read cert object\"))"];
"1000403" [label="(Identifier,certlen)"];
"1000225" [label="(Call,ibuf[ind+4])"];
"1000263" [label="(Call,card->ctx)"];
"1000362" [label="(Identifier,ind)"];
"1000112" [label="(Block,)"];
"1000447" [label="(Identifier,certlen)"];
"1000431" [label="(Call,gemsafe_cert[i].index = ind)"];
"1000201" [label="(Call,ibuf[ind] == 0x01)"];
"1000133" [label="(Call,&path)"];
"1000421" [label="(Call,sc_log(card->ctx,\n\t\t\t       \"Found certificate of key container %d at offset %d, len %\"SC_FORMAT_LEN_SIZE_T\"u\",\n\t\t\t       i+1, ind, certlen))"];
"1000439" [label="(Call,gemsafe_cert[i].count)"];
"1000347" [label="(Call,objlen - 1)"];
"1000219" [label="(Call,gemsafe_prkeys[i].ref = ibuf[ind+4])"];
"1000130" [label="(Identifier,r)"];
"1000418" [label="(Identifier,ind)"];
"1000491" [label="(MethodReturn,static int)"];
"1000472" [label="(Call,i+1)"];
"1000455" [label="(Identifier,i)"];
"1000398" [label="(Call,sizeof ibuf)"];
"1000322" [label="(Call,iptr - ibuf)"];
"1000393" [label="(ControlStructure,if (ind+3 >= sizeof ibuf))"];
"1000296" [label="(Call,iptr = ibuf + GEMSAFE_READ_QUANTUM)"];
"1000445" [label="(Call,ind += certlen)"];
"1000206" [label="(Call,i < gemsafe_cert_max)"];
"1000164" [label="(Call,(size_t) ibuf[0])"];
"1000355" [label="(Identifier,ibuf)"];
"1000305" [label="(Call,iptr - ibuf)"];
"1000273" [label="(Call,i++)"];
"1000451" [label="(Call,ind++)"];
"1000230" [label="(Call,sc_log(card->ctx, \"Key container %d is allocated and uses key_ref %d\",\n\t\t\t\t\ti+1, gemsafe_prkeys[i].ref))"];
"1000415" [label="(Call,ibuf[ind+3])"];
"1000312" [label="(Call,sc_read_binary(card, iptr - ibuf, iptr,\n\t\t\t\t   MIN(GEMSAFE_READ_QUANTUM, objlen - (iptr - ibuf)), 0))"];
"1000359" [label="(Call,ibuf[ind+1])"];
"1000196" [label="(Call,ind = 2)"];
"1000411" [label="(Call,ind+2)"];
"1000394" [label="(Call,ind+3 >= sizeof ibuf)"];
"1000402" [label="(Call,certlen = ((((size_t) ibuf[ind+2]) << 8) | ibuf[ind+3]) + 4)"];
"1000363" [label="(Literal,1)"];
"1000450" [label="(ControlStructure,else)"];
"1000211" [label="(Call,ibuf[ind+1] == 0xFE)"];
"1000153" [label="(Literal,0)"];
"1000173" [label="(Call,sc_log(card->ctx, \"Stored object is of size: %\"SC_FORMAT_LEN_SIZE_T\"u\",\n\t       objlen))"];
"1000429" [label="(Identifier,ind)"];
"1000262" [label="(Call,sc_log(card->ctx, \"Key container %d is unallocated\", i+1))"];
"1000270" [label="(Call,ind += 8)"];
"1000131" [label="(Call,sc_select_file(card, &path, &file))"];
"1000344" [label="(ControlStructure,while (ind < objlen - 1))"];
"1000232" [label="(Identifier,card)"];
"1000235" [label="(Call,i+1)"];
"1000122" [label="(Call,i=0)"];
"1000247" [label="(Block,)"];
"1000218" [label="(Block,)"];
"1000162" [label="(Call,(((size_t) ibuf[0]) << 8) | ibuf[1])"];
"1000425" [label="(Literal,\"Found certificate of key container %d at offset %d, len %\"SC_FORMAT_LEN_SIZE_T\"u\")"];
"1000381" [label="(Call,i == gemsafe_cert_max)"];
"1000399" [label="(Identifier,ibuf)"];
"1000111" [label="(MethodParameterIn,sc_card_t *card)"];
"1000395" [label="(Call,ind+3)"];
"1000314" [label="(Call,iptr - ibuf)"];
"1000452" [label="(Identifier,ind)"];
"1000432" [label="(Call,gemsafe_cert[i].index)"];
"1000437" [label="(Identifier,ind)"];
"1000267" [label="(Call,i+1)"];
"1000466" [label="(Block,)"];
"1000298" [label="(Call,ibuf + GEMSAFE_READ_QUANTUM)"];
"1000238" [label="(Call,gemsafe_prkeys[i].ref)"];
"1000397" [label="(Literal,3)"];
"1000365" [label="(Block,)"];
"1000149" [label="(Identifier,card)"];
"1000151" [label="(Identifier,ibuf)"];
"1000129" [label="(Call,r = sc_select_file(card, &path, &file))"];
"1000361" [label="(Call,ind+1)"];
"1000266" [label="(Literal,\"Key container %d is unallocated\")"];
"1000389" [label="(Literal,\"Warning: Found orphaned certificate at offset %d\")"];
"1000446" [label="(Identifier,ind)"];
"1000444" [label="(Identifier,certlen)"];
"1000244" [label="(Identifier,ind)"];
"1000467" [label="(Call,sc_log(card->ctx, \"Warning: Certificate of key container %d is missing\", i+1))"];
"1000434" [label="(Identifier,gemsafe_cert)"];
"1000385" [label="(Call,sc_log(card->ctx, \"Warning: Found orphaned certificate at offset %d\", ind))"];
"1000152" [label="(Identifier,GEMSAFE_READ_QUANTUM)"];
"1000126" [label="(Identifier,GEMSAFE_PATH)"];
"1000243" [label="(Call,ind += 9)"];
"1000127" [label="(Call,&path)"];
"1000148" [label="(Call,sc_read_binary(card, 0, ibuf, GEMSAFE_READ_QUANTUM, 0))"];
"1000125" [label="(Call,sc_format_path(GEMSAFE_PATH, &path))"];
"1000132" [label="(Identifier,card)"];
"1000401" [label="(Identifier,SC_ERROR_INVALID_DATA)"];
"1000478" [label="(Identifier,gemsafe_prkeys)"];
"1000135" [label="(Call,&file)"];
"1000384" [label="(Block,)"];
"1000449" [label="(Identifier,i)"];
"1000220" [label="(Call,gemsafe_prkeys[i].ref)"];
"1000396" [label="(Identifier,ind)"];
"1000390" [label="(Identifier,ind)"];
"1000454" [label="(Call,i < gemsafe_cert_max)"];
"1000441" [label="(Identifier,gemsafe_cert)"];
"1000468" [label="(Call,card->ctx)"];
"1000426" [label="(Call,i+1)"];
"1000231" [label="(Call,card->ctx)"];
"1000337" [label="(Identifier,SC_ERROR_INTERNAL)"];
"1000430" [label="(Identifier,certlen)"];
"1000471" [label="(Literal,\"Warning: Certificate of key container %d is missing\")"];
"1000409" [label="(Call,ibuf[ind+2])"];
"1000345" [label="(Call,ind < objlen - 1)"];
"1000392" [label="(Identifier,SC_SUCCESS)"];
"1000412" [label="(Identifier,ind)"];
"1000219" -> "1000218"  [label="AST: "];
"1000219" -> "1000225"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000225" -> "1000219"  [label="AST: "];
"1000232" -> "1000219"  [label="CFG: "];
"1000219" -> "1000491"  [label="DDG: "];
"1000148" -> "1000219"  [label="DDG: "];
"1000219" -> "1000230"  [label="DDG: "];
"1000148" -> "1000146"  [label="AST: "];
"1000148" -> "1000153"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000150" -> "1000148"  [label="AST: "];
"1000151" -> "1000148"  [label="AST: "];
"1000152" -> "1000148"  [label="AST: "];
"1000153" -> "1000148"  [label="AST: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000148" -> "1000491"  [label="DDG: "];
"1000148" -> "1000491"  [label="DDG: "];
"1000148" -> "1000491"  [label="DDG: "];
"1000148" -> "1000146"  [label="DDG: "];
"1000148" -> "1000146"  [label="DDG: "];
"1000148" -> "1000146"  [label="DDG: "];
"1000148" -> "1000146"  [label="DDG: "];
"1000131" -> "1000148"  [label="DDG: "];
"1000111" -> "1000148"  [label="DDG: "];
"1000148" -> "1000164"  [label="DDG: "];
"1000148" -> "1000162"  [label="DDG: "];
"1000148" -> "1000201"  [label="DDG: "];
"1000148" -> "1000211"  [label="DDG: "];
"1000148" -> "1000296"  [label="DDG: "];
"1000148" -> "1000296"  [label="DDG: "];
"1000148" -> "1000298"  [label="DDG: "];
"1000148" -> "1000298"  [label="DDG: "];
"1000148" -> "1000305"  [label="DDG: "];
"1000148" -> "1000312"  [label="DDG: "];
"1000148" -> "1000314"  [label="DDG: "];
"1000148" -> "1000318"  [label="DDG: "];
"1000148" -> "1000322"  [label="DDG: "];
"1000131" -> "1000129"  [label="AST: "];
"1000131" -> "1000135"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="AST: "];
"1000135" -> "1000131"  [label="AST: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000131" -> "1000491"  [label="DDG: "];
"1000131" -> "1000491"  [label="DDG: "];
"1000131" -> "1000491"  [label="DDG: "];
"1000131" -> "1000129"  [label="DDG: "];
"1000131" -> "1000129"  [label="DDG: "];
"1000131" -> "1000129"  [label="DDG: "];
"1000111" -> "1000131"  [label="DDG: "];
"1000125" -> "1000131"  [label="DDG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000491"  [label="DDG: "];
"1000111" -> "1000312"  [label="DDG: "];
"1000125" -> "1000112"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000130" -> "1000125"  [label="CFG: "];
"1000125" -> "1000491"  [label="DDG: "];
"1000125" -> "1000491"  [label="DDG: "];
"1000230" -> "1000218"  [label="AST: "];
"1000230" -> "1000238"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000234" -> "1000230"  [label="AST: "];
"1000235" -> "1000230"  [label="AST: "];
"1000238" -> "1000230"  [label="AST: "];
"1000244" -> "1000230"  [label="CFG: "];
"1000230" -> "1000491"  [label="DDG: "];
"1000230" -> "1000491"  [label="DDG: "];
"1000230" -> "1000491"  [label="DDG: "];
"1000230" -> "1000491"  [label="DDG: "];
"1000262" -> "1000230"  [label="DDG: "];
"1000173" -> "1000230"  [label="DDG: "];
"1000122" -> "1000230"  [label="DDG: "];
"1000273" -> "1000230"  [label="DDG: "];
"1000206" -> "1000230"  [label="DDG: "];
"1000230" -> "1000262"  [label="DDG: "];
"1000230" -> "1000331"  [label="DDG: "];
"1000230" -> "1000385"  [label="DDG: "];
"1000230" -> "1000421"  [label="DDG: "];
"1000230" -> "1000467"  [label="DDG: "];
"1000262" -> "1000247"  [label="AST: "];
"1000262" -> "1000267"  [label="CFG: "];
"1000263" -> "1000262"  [label="AST: "];
"1000266" -> "1000262"  [label="AST: "];
"1000267" -> "1000262"  [label="AST: "];
"1000271" -> "1000262"  [label="CFG: "];
"1000262" -> "1000491"  [label="DDG: "];
"1000262" -> "1000491"  [label="DDG: "];
"1000262" -> "1000491"  [label="DDG: "];
"1000173" -> "1000262"  [label="DDG: "];
"1000122" -> "1000262"  [label="DDG: "];
"1000273" -> "1000262"  [label="DDG: "];
"1000206" -> "1000262"  [label="DDG: "];
"1000262" -> "1000331"  [label="DDG: "];
"1000262" -> "1000385"  [label="DDG: "];
"1000262" -> "1000421"  [label="DDG: "];
"1000262" -> "1000467"  [label="DDG: "];
"1000331" -> "1000330"  [label="AST: "];
"1000331" -> "1000335"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000335" -> "1000331"  [label="AST: "];
"1000337" -> "1000331"  [label="CFG: "];
"1000331" -> "1000491"  [label="DDG: "];
"1000331" -> "1000491"  [label="DDG: "];
"1000173" -> "1000331"  [label="DDG: "];
"1000385" -> "1000384"  [label="AST: "];
"1000385" -> "1000390"  [label="CFG: "];
"1000386" -> "1000385"  [label="AST: "];
"1000389" -> "1000385"  [label="AST: "];
"1000390" -> "1000385"  [label="AST: "];
"1000392" -> "1000385"  [label="CFG: "];
"1000385" -> "1000491"  [label="DDG: "];
"1000385" -> "1000491"  [label="DDG: "];
"1000385" -> "1000491"  [label="DDG: "];
"1000173" -> "1000385"  [label="DDG: "];
"1000421" -> "1000385"  [label="DDG: "];
"1000345" -> "1000385"  [label="DDG: "];
"1000421" -> "1000365"  [label="AST: "];
"1000421" -> "1000430"  [label="CFG: "];
"1000422" -> "1000421"  [label="AST: "];
"1000425" -> "1000421"  [label="AST: "];
"1000426" -> "1000421"  [label="AST: "];
"1000429" -> "1000421"  [label="AST: "];
"1000430" -> "1000421"  [label="AST: "];
"1000434" -> "1000421"  [label="CFG: "];
"1000421" -> "1000491"  [label="DDG: "];
"1000421" -> "1000491"  [label="DDG: "];
"1000421" -> "1000491"  [label="DDG: "];
"1000173" -> "1000421"  [label="DDG: "];
"1000381" -> "1000421"  [label="DDG: "];
"1000345" -> "1000421"  [label="DDG: "];
"1000402" -> "1000421"  [label="DDG: "];
"1000421" -> "1000431"  [label="DDG: "];
"1000421" -> "1000438"  [label="DDG: "];
"1000421" -> "1000445"  [label="DDG: "];
"1000421" -> "1000445"  [label="DDG: "];
"1000421" -> "1000467"  [label="DDG: "];
"1000431" -> "1000365"  [label="AST: "];
"1000431" -> "1000437"  [label="CFG: "];
"1000432" -> "1000431"  [label="AST: "];
"1000437" -> "1000431"  [label="AST: "];
"1000441" -> "1000431"  [label="CFG: "];
"1000431" -> "1000491"  [label="DDG: "];
"1000438" -> "1000365"  [label="AST: "];
"1000438" -> "1000444"  [label="CFG: "];
"1000439" -> "1000438"  [label="AST: "];
"1000444" -> "1000438"  [label="AST: "];
"1000446" -> "1000438"  [label="CFG: "];
"1000438" -> "1000491"  [label="DDG: "];
"1000445" -> "1000365"  [label="AST: "];
"1000445" -> "1000447"  [label="CFG: "];
"1000446" -> "1000445"  [label="AST: "];
"1000447" -> "1000445"  [label="AST: "];
"1000449" -> "1000445"  [label="CFG: "];
"1000445" -> "1000491"  [label="DDG: "];
"1000445" -> "1000345"  [label="DDG: "];
"1000345" -> "1000344"  [label="AST: "];
"1000345" -> "1000347"  [label="CFG: "];
"1000346" -> "1000345"  [label="AST: "];
"1000347" -> "1000345"  [label="AST: "];
"1000355" -> "1000345"  [label="CFG: "];
"1000455" -> "1000345"  [label="CFG: "];
"1000345" -> "1000491"  [label="DDG: "];
"1000345" -> "1000491"  [label="DDG: "];
"1000345" -> "1000491"  [label="DDG: "];
"1000196" -> "1000345"  [label="DDG: "];
"1000243" -> "1000345"  [label="DDG: "];
"1000270" -> "1000345"  [label="DDG: "];
"1000451" -> "1000345"  [label="DDG: "];
"1000347" -> "1000345"  [label="DDG: "];
"1000347" -> "1000345"  [label="DDG: "];
"1000345" -> "1000361"  [label="DDG: "];
"1000345" -> "1000394"  [label="DDG: "];
"1000345" -> "1000395"  [label="DDG: "];
"1000345" -> "1000411"  [label="DDG: "];
"1000345" -> "1000417"  [label="DDG: "];
"1000345" -> "1000451"  [label="DDG: "];
"1000361" -> "1000359"  [label="AST: "];
"1000361" -> "1000363"  [label="CFG: "];
"1000362" -> "1000361"  [label="AST: "];
"1000363" -> "1000361"  [label="AST: "];
"1000359" -> "1000361"  [label="CFG: "];
"1000394" -> "1000393"  [label="AST: "];
"1000394" -> "1000398"  [label="CFG: "];
"1000395" -> "1000394"  [label="AST: "];
"1000398" -> "1000394"  [label="AST: "];
"1000401" -> "1000394"  [label="CFG: "];
"1000403" -> "1000394"  [label="CFG: "];
"1000394" -> "1000491"  [label="DDG: "];
"1000394" -> "1000491"  [label="DDG: "];
"1000395" -> "1000397"  [label="CFG: "];
"1000396" -> "1000395"  [label="AST: "];
"1000397" -> "1000395"  [label="AST: "];
"1000399" -> "1000395"  [label="CFG: "];
"1000395" -> "1000491"  [label="DDG: "];
"1000411" -> "1000409"  [label="AST: "];
"1000411" -> "1000413"  [label="CFG: "];
"1000412" -> "1000411"  [label="AST: "];
"1000413" -> "1000411"  [label="AST: "];
"1000409" -> "1000411"  [label="CFG: "];
"1000417" -> "1000415"  [label="AST: "];
"1000417" -> "1000419"  [label="CFG: "];
"1000418" -> "1000417"  [label="AST: "];
"1000419" -> "1000417"  [label="AST: "];
"1000415" -> "1000417"  [label="CFG: "];
"1000451" -> "1000450"  [label="AST: "];
"1000451" -> "1000452"  [label="CFG: "];
"1000452" -> "1000451"  [label="AST: "];
"1000346" -> "1000451"  [label="CFG: "];
"1000467" -> "1000466"  [label="AST: "];
"1000467" -> "1000472"  [label="CFG: "];
"1000468" -> "1000467"  [label="AST: "];
"1000471" -> "1000467"  [label="AST: "];
"1000472" -> "1000467"  [label="AST: "];
"1000478" -> "1000467"  [label="CFG: "];
"1000467" -> "1000491"  [label="DDG: "];
"1000467" -> "1000491"  [label="DDG: "];
"1000467" -> "1000491"  [label="DDG: "];
"1000173" -> "1000467"  [label="DDG: "];
"1000454" -> "1000467"  [label="DDG: "];
}
