digraph "0_linux_f6d8bd051c391c1c0458a30b2a7abcd939329259_34@API" {
"1000256" [label="(Call,memcpy_fromiovec(skb_put(skb, len), msg->msg_iov, len))"];
"1000257" [label="(Call,skb_put(skb, len))"];
"1000250" [label="(Call,skb_put(skb, 4))"];
"1000244" [label="(Call,skb_reset_transport_header(skb))"];
"1000240" [label="(Call,skb_reserve(skb, sizeof(struct iphdr)))"];
"1000238" [label="(Call,skb_reset_network_header(skb))"];
"1000233" [label="(Call,skb_reserve(skb, 2 + NET_SKB_PAD))"];
"1000230" [label="(Call,!skb)"];
"1000213" [label="(Call,skb = sock_wmalloc(sk, 2 + NET_SKB_PAD + sizeof(struct iphdr) +\n\t\t\t   4 + len, 0, GFP_KERNEL))"];
"1000215" [label="(Call,sock_wmalloc(sk, 2 + NET_SKB_PAD + sizeof(struct iphdr) +\n\t\t\t   4 + len, 0, GFP_KERNEL))"];
"1000137" [label="(Call,sock_flag(sk, SOCK_DEAD))"];
"1000125" [label="(Call,inet_sk(sk))"];
"1000120" [label="(Call,l2tp_ip_sk(sk))"];
"1000111" [label="(MethodParameterIn,struct sock *sk)"];
"1000113" [label="(MethodParameterIn,size_t len)"];
"1000254" [label="(Call,rc = memcpy_fromiovec(skb_put(skb, len), msg->msg_iov, len))"];
"1000265" [label="(Call,rc < 0)"];
"1000357" [label="(Call,rc >= 0)"];
"1000379" [label="(Return,return rc;)"];
"1000365" [label="(Call,lsa->tx_bytes += len)"];
"1000370" [label="(Call,rc = len)"];
"1000258" [label="(Identifier,skb)"];
"1000251" [label="(Identifier,skb)"];
"1000136" [label="(ControlStructure,if (sock_flag(sk, SOCK_DEAD)))"];
"1000228" [label="(Identifier,GFP_KERNEL)"];
"1000139" [label="(Identifier,SOCK_DEAD)"];
"1000142" [label="(Identifier,ENOTCONN)"];
"1000213" [label="(Call,skb = sock_wmalloc(sk, 2 + NET_SKB_PAD + sizeof(struct iphdr) +\n\t\t\t   4 + len, 0, GFP_KERNEL))"];
"1000260" [label="(Call,msg->msg_iov)"];
"1000121" [label="(Identifier,sk)"];
"1000269" [label="(Call,kfree_skb(skb))"];
"1000224" [label="(Call,4 + len)"];
"1000114" [label="(Block,)"];
"1000263" [label="(Identifier,len)"];
"1000313" [label="(Call,sock_net(sk))"];
"1000266" [label="(Identifier,rc)"];
"1000250" [label="(Call,skb_put(skb, 4))"];
"1000380" [label="(Identifier,rc)"];
"1000356" [label="(ControlStructure,if (rc >= 0))"];
"1000221" [label="(Call,sizeof(struct iphdr) +\n\t\t\t   4 + len)"];
"1000209" [label="(Call,rc = -ENOMEM)"];
"1000229" [label="(ControlStructure,if (!skb))"];
"1000370" [label="(Call,rc = len)"];
"1000261" [label="(Identifier,msg)"];
"1000244" [label="(Call,skb_reset_transport_header(skb))"];
"1000252" [label="(Literal,4)"];
"1000363" [label="(Identifier,lsa)"];
"1000125" [label="(Call,inet_sk(sk))"];
"1000344" [label="(Call,skb_dst_set(skb, dst_clone(&rt->dst)))"];
"1000238" [label="(Call,skb_reset_network_header(skb))"];
"1000255" [label="(Identifier,rc)"];
"1000231" [label="(Identifier,skb)"];
"1000371" [label="(Identifier,rc)"];
"1000215" [label="(Call,sock_wmalloc(sk, 2 + NET_SKB_PAD + sizeof(struct iphdr) +\n\t\t\t   4 + len, 0, GFP_KERNEL))"];
"1000338" [label="(Call,sk_setup_caps(sk, &rt->dst))"];
"1000365" [label="(Call,lsa->tx_bytes += len)"];
"1000358" [label="(Identifier,rc)"];
"1000386" [label="(Call,kfree_skb(skb))"];
"1000245" [label="(Identifier,skb)"];
"1000293" [label="(Call,sock_owned_by_user(sk))"];
"1000379" [label="(Return,return rc;)"];
"1000219" [label="(Call,NET_SKB_PAD + sizeof(struct iphdr) +\n\t\t\t   4 + len)"];
"1000111" [label="(MethodParameterIn,struct sock *sk)"];
"1000264" [label="(ControlStructure,if (rc < 0))"];
"1000227" [label="(Literal,0)"];
"1000383" [label="(Call,sock_net(sk))"];
"1000137" [label="(Call,sock_flag(sk, SOCK_DEAD))"];
"1000360" [label="(Block,)"];
"1000270" [label="(Identifier,skb)"];
"1000113" [label="(MethodParameterIn,size_t len)"];
"1000265" [label="(Call,rc < 0)"];
"1000138" [label="(Identifier,sk)"];
"1000278" [label="(Call,__sk_dst_check(sk, 0))"];
"1000230" [label="(Call,!skb)"];
"1000256" [label="(Call,memcpy_fromiovec(skb_put(skb, len), msg->msg_iov, len))"];
"1000118" [label="(Call,*lsa = l2tp_ip_sk(sk))"];
"1000351" [label="(Call,rc = ip_queue_xmit(skb))"];
"1000242" [label="(Call,sizeof(struct iphdr))"];
"1000357" [label="(Call,rc >= 0)"];
"1000235" [label="(Call,2 + NET_SKB_PAD)"];
"1000359" [label="(Literal,0)"];
"1000234" [label="(Identifier,skb)"];
"1000120" [label="(Call,l2tp_ip_sk(sk))"];
"1000232" [label="(ControlStructure,goto error;)"];
"1000126" [label="(Identifier,sk)"];
"1000233" [label="(Call,skb_reserve(skb, 2 + NET_SKB_PAD))"];
"1000267" [label="(Literal,0)"];
"1000273" [label="(Identifier,connected)"];
"1000216" [label="(Identifier,sk)"];
"1000312" [label="(Call,ip_route_output_ports(sock_net(sk), sk,\n\t\t\t\t\t   daddr, inet->inet_saddr,\n\t\t\t\t\t   inet->inet_dport, inet->inet_sport,\n\t\t\t\t\t   sk->sk_protocol, RT_CONN_FLAGS(sk),\n\t\t\t\t\t   sk->sk_bound_dev_if))"];
"1000369" [label="(Identifier,len)"];
"1000366" [label="(Call,lsa->tx_bytes)"];
"1000145" [label="(Identifier,msg)"];
"1000240" [label="(Call,skb_reserve(skb, sizeof(struct iphdr)))"];
"1000217" [label="(Call,2 + NET_SKB_PAD + sizeof(struct iphdr) +\n\t\t\t   4 + len)"];
"1000257" [label="(Call,skb_put(skb, len))"];
"1000372" [label="(Identifier,len)"];
"1000259" [label="(Identifier,len)"];
"1000329" [label="(Call,RT_CONN_FLAGS(sk))"];
"1000254" [label="(Call,rc = memcpy_fromiovec(skb_put(skb, len), msg->msg_iov, len))"];
"1000241" [label="(Identifier,skb)"];
"1000391" [label="(MethodReturn,static int)"];
"1000239" [label="(Identifier,skb)"];
"1000214" [label="(Identifier,skb)"];
"1000377" [label="(Identifier,lsa)"];
"1000123" [label="(Call,*inet = inet_sk(sk))"];
"1000248" [label="(Call,(__be32 *) skb_put(skb, 4))"];
"1000256" -> "1000254"  [label="AST: "];
"1000256" -> "1000263"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000260" -> "1000256"  [label="AST: "];
"1000263" -> "1000256"  [label="AST: "];
"1000254" -> "1000256"  [label="CFG: "];
"1000256" -> "1000391"  [label="DDG: msg->msg_iov"];
"1000256" -> "1000391"  [label="DDG: len"];
"1000256" -> "1000391"  [label="DDG: skb_put(skb, len)"];
"1000256" -> "1000254"  [label="DDG: skb_put(skb, len)"];
"1000256" -> "1000254"  [label="DDG: msg->msg_iov"];
"1000256" -> "1000254"  [label="DDG: len"];
"1000257" -> "1000256"  [label="DDG: skb"];
"1000257" -> "1000256"  [label="DDG: len"];
"1000113" -> "1000256"  [label="DDG: len"];
"1000256" -> "1000365"  [label="DDG: len"];
"1000256" -> "1000370"  [label="DDG: len"];
"1000257" -> "1000259"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000259" -> "1000257"  [label="AST: "];
"1000261" -> "1000257"  [label="CFG: "];
"1000250" -> "1000257"  [label="DDG: skb"];
"1000113" -> "1000257"  [label="DDG: len"];
"1000257" -> "1000269"  [label="DDG: skb"];
"1000257" -> "1000344"  [label="DDG: skb"];
"1000257" -> "1000386"  [label="DDG: skb"];
"1000250" -> "1000248"  [label="AST: "];
"1000250" -> "1000252"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000252" -> "1000250"  [label="AST: "];
"1000248" -> "1000250"  [label="CFG: "];
"1000250" -> "1000248"  [label="DDG: skb"];
"1000250" -> "1000248"  [label="DDG: 4"];
"1000244" -> "1000250"  [label="DDG: skb"];
"1000244" -> "1000114"  [label="AST: "];
"1000244" -> "1000245"  [label="CFG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000249" -> "1000244"  [label="CFG: "];
"1000244" -> "1000391"  [label="DDG: skb_reset_transport_header(skb)"];
"1000240" -> "1000244"  [label="DDG: skb"];
"1000240" -> "1000114"  [label="AST: "];
"1000240" -> "1000242"  [label="CFG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000242" -> "1000240"  [label="AST: "];
"1000245" -> "1000240"  [label="CFG: "];
"1000240" -> "1000391"  [label="DDG: skb_reserve(skb, sizeof(struct iphdr))"];
"1000238" -> "1000240"  [label="DDG: skb"];
"1000238" -> "1000114"  [label="AST: "];
"1000238" -> "1000239"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000241" -> "1000238"  [label="CFG: "];
"1000238" -> "1000391"  [label="DDG: skb_reset_network_header(skb)"];
"1000233" -> "1000238"  [label="DDG: skb"];
"1000233" -> "1000114"  [label="AST: "];
"1000233" -> "1000235"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000235" -> "1000233"  [label="AST: "];
"1000239" -> "1000233"  [label="CFG: "];
"1000233" -> "1000391"  [label="DDG: skb_reserve(skb, 2 + NET_SKB_PAD)"];
"1000233" -> "1000391"  [label="DDG: 2 + NET_SKB_PAD"];
"1000230" -> "1000233"  [label="DDG: skb"];
"1000230" -> "1000229"  [label="AST: "];
"1000230" -> "1000231"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000232" -> "1000230"  [label="CFG: "];
"1000234" -> "1000230"  [label="CFG: "];
"1000230" -> "1000391"  [label="DDG: skb"];
"1000230" -> "1000391"  [label="DDG: !skb"];
"1000213" -> "1000230"  [label="DDG: skb"];
"1000213" -> "1000114"  [label="AST: "];
"1000213" -> "1000215"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000215" -> "1000213"  [label="AST: "];
"1000231" -> "1000213"  [label="CFG: "];
"1000213" -> "1000391"  [label="DDG: sock_wmalloc(sk, 2 + NET_SKB_PAD + sizeof(struct iphdr) +\n\t\t\t   4 + len, 0, GFP_KERNEL)"];
"1000215" -> "1000213"  [label="DDG: sk"];
"1000215" -> "1000213"  [label="DDG: 2 + NET_SKB_PAD + sizeof(struct iphdr) +\n\t\t\t   4 + len"];
"1000215" -> "1000213"  [label="DDG: 0"];
"1000215" -> "1000213"  [label="DDG: GFP_KERNEL"];
"1000215" -> "1000228"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000217" -> "1000215"  [label="AST: "];
"1000227" -> "1000215"  [label="AST: "];
"1000228" -> "1000215"  [label="AST: "];
"1000215" -> "1000391"  [label="DDG: sk"];
"1000215" -> "1000391"  [label="DDG: 2 + NET_SKB_PAD + sizeof(struct iphdr) +\n\t\t\t   4 + len"];
"1000215" -> "1000391"  [label="DDG: GFP_KERNEL"];
"1000137" -> "1000215"  [label="DDG: sk"];
"1000111" -> "1000215"  [label="DDG: sk"];
"1000113" -> "1000215"  [label="DDG: len"];
"1000215" -> "1000278"  [label="DDG: sk"];
"1000215" -> "1000293"  [label="DDG: sk"];
"1000137" -> "1000136"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000142" -> "1000137"  [label="CFG: "];
"1000145" -> "1000137"  [label="CFG: "];
"1000137" -> "1000391"  [label="DDG: SOCK_DEAD"];
"1000137" -> "1000391"  [label="DDG: sk"];
"1000137" -> "1000391"  [label="DDG: sock_flag(sk, SOCK_DEAD)"];
"1000125" -> "1000137"  [label="DDG: sk"];
"1000111" -> "1000137"  [label="DDG: sk"];
"1000125" -> "1000123"  [label="AST: "];
"1000125" -> "1000126"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000125" -> "1000123"  [label="DDG: sk"];
"1000120" -> "1000125"  [label="DDG: sk"];
"1000111" -> "1000125"  [label="DDG: sk"];
"1000120" -> "1000118"  [label="AST: "];
"1000120" -> "1000121"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000120" -> "1000118"  [label="DDG: sk"];
"1000111" -> "1000120"  [label="DDG: sk"];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000391"  [label="DDG: sk"];
"1000111" -> "1000278"  [label="DDG: sk"];
"1000111" -> "1000293"  [label="DDG: sk"];
"1000111" -> "1000313"  [label="DDG: sk"];
"1000111" -> "1000312"  [label="DDG: sk"];
"1000111" -> "1000329"  [label="DDG: sk"];
"1000111" -> "1000338"  [label="DDG: sk"];
"1000111" -> "1000383"  [label="DDG: sk"];
"1000113" -> "1000109"  [label="AST: "];
"1000113" -> "1000391"  [label="DDG: len"];
"1000113" -> "1000217"  [label="DDG: len"];
"1000113" -> "1000219"  [label="DDG: len"];
"1000113" -> "1000221"  [label="DDG: len"];
"1000113" -> "1000224"  [label="DDG: len"];
"1000113" -> "1000365"  [label="DDG: len"];
"1000113" -> "1000370"  [label="DDG: len"];
"1000254" -> "1000114"  [label="AST: "];
"1000255" -> "1000254"  [label="AST: "];
"1000266" -> "1000254"  [label="CFG: "];
"1000254" -> "1000391"  [label="DDG: memcpy_fromiovec(skb_put(skb, len), msg->msg_iov, len)"];
"1000254" -> "1000265"  [label="DDG: rc"];
"1000265" -> "1000264"  [label="AST: "];
"1000265" -> "1000267"  [label="CFG: "];
"1000266" -> "1000265"  [label="AST: "];
"1000267" -> "1000265"  [label="AST: "];
"1000270" -> "1000265"  [label="CFG: "];
"1000273" -> "1000265"  [label="CFG: "];
"1000265" -> "1000391"  [label="DDG: rc < 0"];
"1000265" -> "1000391"  [label="DDG: rc"];
"1000265" -> "1000357"  [label="DDG: rc"];
"1000357" -> "1000356"  [label="AST: "];
"1000357" -> "1000359"  [label="CFG: "];
"1000358" -> "1000357"  [label="AST: "];
"1000359" -> "1000357"  [label="AST: "];
"1000363" -> "1000357"  [label="CFG: "];
"1000377" -> "1000357"  [label="CFG: "];
"1000357" -> "1000391"  [label="DDG: rc >= 0"];
"1000357" -> "1000391"  [label="DDG: rc"];
"1000209" -> "1000357"  [label="DDG: rc"];
"1000351" -> "1000357"  [label="DDG: rc"];
"1000357" -> "1000379"  [label="DDG: rc"];
"1000379" -> "1000114"  [label="AST: "];
"1000379" -> "1000380"  [label="CFG: "];
"1000380" -> "1000379"  [label="AST: "];
"1000391" -> "1000379"  [label="CFG: "];
"1000379" -> "1000391"  [label="DDG: <RET>"];
"1000380" -> "1000379"  [label="DDG: rc"];
"1000370" -> "1000379"  [label="DDG: rc"];
"1000365" -> "1000360"  [label="AST: "];
"1000365" -> "1000369"  [label="CFG: "];
"1000366" -> "1000365"  [label="AST: "];
"1000369" -> "1000365"  [label="AST: "];
"1000371" -> "1000365"  [label="CFG: "];
"1000365" -> "1000391"  [label="DDG: lsa->tx_bytes"];
"1000370" -> "1000360"  [label="AST: "];
"1000370" -> "1000372"  [label="CFG: "];
"1000371" -> "1000370"  [label="AST: "];
"1000372" -> "1000370"  [label="AST: "];
"1000380" -> "1000370"  [label="CFG: "];
"1000370" -> "1000391"  [label="DDG: len"];
"1000370" -> "1000391"  [label="DDG: rc"];
}
