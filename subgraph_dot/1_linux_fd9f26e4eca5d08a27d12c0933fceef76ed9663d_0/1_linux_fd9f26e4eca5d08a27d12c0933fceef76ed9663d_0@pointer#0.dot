digraph "1_linux_fd9f26e4eca5d08a27d12c0933fceef76ed9663d_0@pointer" {
"1000116" [label="(Call,snd_ctl_find_id(card, &control->id))"];
"1000101" [label="(MethodParameterIn,struct snd_card *card)"];
"1000114" [label="(Call,kctl = snd_ctl_find_id(card, &control->id))"];
"1000123" [label="(Call,kctl == NULL)"];
"1000135" [label="(Call,snd_ctl_get_ioff(kctl, &control->id))"];
"1000133" [label="(Call,index_offset = snd_ctl_get_ioff(kctl, &control->id))"];
"1000181" [label="(Call,snd_ctl_build_ioff(&control->id, kctl, index_offset))"];
"1000190" [label="(Call,kctl->put(kctl, control))"];
"1000188" [label="(Call,result = kctl->put(kctl, control))"];
"1000194" [label="(Call,result > 0)"];
"1000217" [label="(Return,return result;)"];
"1000203" [label="(Call,snd_ctl_notify(card, SNDRV_CTL_EVENT_MASK_VALUE,\n\t\t\t\t       &control->id))"];
"1000158" [label="(Call,kctl->put == NULL)"];
"1000157" [label="(Call,kctl->put == NULL ||\n\t\t    (file && vd->owner && vd->owner != file))"];
"1000150" [label="(Call,!(vd->access & SNDRV_CTL_ELEM_ACCESS_WRITE) ||\n\t\t    kctl->put == NULL ||\n\t\t    (file && vd->owner && vd->owner != file))"];
"1000211" [label="(Literal,0)"];
"1000189" [label="(Identifier,result)"];
"1000125" [label="(Identifier,NULL)"];
"1000219" [label="(MethodReturn,static int)"];
"1000104" [label="(Block,)"];
"1000195" [label="(Identifier,result)"];
"1000157" [label="(Call,kctl->put == NULL ||\n\t\t    (file && vd->owner && vd->owner != file))"];
"1000115" [label="(Identifier,kctl)"];
"1000136" [label="(Identifier,kctl)"];
"1000191" [label="(Identifier,kctl)"];
"1000186" [label="(Identifier,kctl)"];
"1000197" [label="(Block,)"];
"1000150" [label="(Call,!(vd->access & SNDRV_CTL_ELEM_ACCESS_WRITE) ||\n\t\t    kctl->put == NULL ||\n\t\t    (file && vd->owner && vd->owner != file))"];
"1000163" [label="(Call,file && vd->owner && vd->owner != file)"];
"1000116" [label="(Call,snd_ctl_find_id(card, &control->id))"];
"1000164" [label="(Identifier,file)"];
"1000128" [label="(Identifier,result)"];
"1000182" [label="(Call,&control->id)"];
"1000134" [label="(Identifier,index_offset)"];
"1000133" [label="(Call,index_offset = snd_ctl_get_ioff(kctl, &control->id))"];
"1000180" [label="(Block,)"];
"1000187" [label="(Identifier,index_offset)"];
"1000142" [label="(Identifier,vd)"];
"1000123" [label="(Call,kctl == NULL)"];
"1000196" [label="(Literal,0)"];
"1000201" [label="(Identifier,card)"];
"1000204" [label="(Identifier,card)"];
"1000192" [label="(Identifier,control)"];
"1000206" [label="(Call,&control->id)"];
"1000205" [label="(Identifier,SNDRV_CTL_EVENT_MASK_VALUE)"];
"1000218" [label="(Identifier,result)"];
"1000135" [label="(Call,snd_ctl_get_ioff(kctl, &control->id))"];
"1000188" [label="(Call,result = kctl->put(kctl, control))"];
"1000117" [label="(Identifier,card)"];
"1000194" [label="(Call,result > 0)"];
"1000184" [label="(Identifier,control)"];
"1000215" [label="(Identifier,card)"];
"1000137" [label="(Call,&control->id)"];
"1000203" [label="(Call,snd_ctl_notify(card, SNDRV_CTL_EVENT_MASK_VALUE,\n\t\t\t\t       &control->id))"];
"1000159" [label="(Call,kctl->put)"];
"1000181" [label="(Call,snd_ctl_build_ioff(&control->id, kctl, index_offset))"];
"1000162" [label="(Identifier,NULL)"];
"1000176" [label="(Identifier,result)"];
"1000124" [label="(Identifier,kctl)"];
"1000190" [label="(Call,kctl->put(kctl, control))"];
"1000158" [label="(Call,kctl->put == NULL)"];
"1000101" [label="(MethodParameterIn,struct snd_card *card)"];
"1000175" [label="(Call,result = -EPERM)"];
"1000103" [label="(MethodParameterIn,struct snd_ctl_elem_value *control)"];
"1000122" [label="(ControlStructure,if (kctl == NULL))"];
"1000114" [label="(Call,kctl = snd_ctl_find_id(card, &control->id))"];
"1000149" [label="(ControlStructure,if (!(vd->access & SNDRV_CTL_ELEM_ACCESS_WRITE) ||\n\t\t    kctl->put == NULL ||\n\t\t    (file && vd->owner && vd->owner != file)))"];
"1000193" [label="(ControlStructure,if (result > 0))"];
"1000151" [label="(Call,!(vd->access & SNDRV_CTL_ELEM_ACCESS_WRITE))"];
"1000118" [label="(Call,&control->id)"];
"1000127" [label="(Call,result = -ENOENT)"];
"1000217" [label="(Return,return result;)"];
"1000132" [label="(Block,)"];
"1000116" -> "1000114"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000114" -> "1000116"  [label="CFG: "];
"1000116" -> "1000219"  [label="DDG: &control->id"];
"1000116" -> "1000219"  [label="DDG: card"];
"1000116" -> "1000114"  [label="DDG: card"];
"1000116" -> "1000114"  [label="DDG: &control->id"];
"1000101" -> "1000116"  [label="DDG: card"];
"1000116" -> "1000135"  [label="DDG: &control->id"];
"1000116" -> "1000203"  [label="DDG: card"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000219"  [label="DDG: card"];
"1000101" -> "1000203"  [label="DDG: card"];
"1000114" -> "1000104"  [label="AST: "];
"1000115" -> "1000114"  [label="AST: "];
"1000124" -> "1000114"  [label="CFG: "];
"1000114" -> "1000219"  [label="DDG: snd_ctl_find_id(card, &control->id)"];
"1000114" -> "1000123"  [label="DDG: kctl"];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000128" -> "1000123"  [label="CFG: "];
"1000134" -> "1000123"  [label="CFG: "];
"1000123" -> "1000219"  [label="DDG: NULL"];
"1000123" -> "1000219"  [label="DDG: kctl == NULL"];
"1000123" -> "1000219"  [label="DDG: kctl"];
"1000123" -> "1000135"  [label="DDG: kctl"];
"1000123" -> "1000158"  [label="DDG: NULL"];
"1000135" -> "1000133"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000135" -> "1000219"  [label="DDG: kctl"];
"1000135" -> "1000219"  [label="DDG: &control->id"];
"1000135" -> "1000133"  [label="DDG: kctl"];
"1000135" -> "1000133"  [label="DDG: &control->id"];
"1000135" -> "1000181"  [label="DDG: &control->id"];
"1000135" -> "1000181"  [label="DDG: kctl"];
"1000135" -> "1000203"  [label="DDG: &control->id"];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000133"  [label="AST: "];
"1000142" -> "1000133"  [label="CFG: "];
"1000133" -> "1000219"  [label="DDG: index_offset"];
"1000133" -> "1000219"  [label="DDG: snd_ctl_get_ioff(kctl, &control->id)"];
"1000133" -> "1000181"  [label="DDG: index_offset"];
"1000181" -> "1000180"  [label="AST: "];
"1000181" -> "1000187"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000186" -> "1000181"  [label="AST: "];
"1000187" -> "1000181"  [label="AST: "];
"1000189" -> "1000181"  [label="CFG: "];
"1000181" -> "1000219"  [label="DDG: snd_ctl_build_ioff(&control->id, kctl, index_offset)"];
"1000181" -> "1000219"  [label="DDG: &control->id"];
"1000181" -> "1000219"  [label="DDG: index_offset"];
"1000181" -> "1000190"  [label="DDG: kctl"];
"1000181" -> "1000203"  [label="DDG: &control->id"];
"1000190" -> "1000188"  [label="AST: "];
"1000190" -> "1000192"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000192" -> "1000190"  [label="AST: "];
"1000188" -> "1000190"  [label="CFG: "];
"1000190" -> "1000219"  [label="DDG: kctl"];
"1000190" -> "1000219"  [label="DDG: control"];
"1000190" -> "1000188"  [label="DDG: kctl"];
"1000190" -> "1000188"  [label="DDG: control"];
"1000103" -> "1000190"  [label="DDG: control"];
"1000188" -> "1000180"  [label="AST: "];
"1000189" -> "1000188"  [label="AST: "];
"1000195" -> "1000188"  [label="CFG: "];
"1000188" -> "1000219"  [label="DDG: kctl->put(kctl, control)"];
"1000188" -> "1000194"  [label="DDG: result"];
"1000194" -> "1000193"  [label="AST: "];
"1000194" -> "1000196"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000196" -> "1000194"  [label="AST: "];
"1000201" -> "1000194"  [label="CFG: "];
"1000215" -> "1000194"  [label="CFG: "];
"1000194" -> "1000219"  [label="DDG: result > 0"];
"1000194" -> "1000219"  [label="DDG: result"];
"1000175" -> "1000194"  [label="DDG: result"];
"1000194" -> "1000217"  [label="DDG: result"];
"1000217" -> "1000104"  [label="AST: "];
"1000217" -> "1000218"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000219" -> "1000217"  [label="CFG: "];
"1000217" -> "1000219"  [label="DDG: <RET>"];
"1000218" -> "1000217"  [label="DDG: result"];
"1000127" -> "1000217"  [label="DDG: result"];
"1000203" -> "1000197"  [label="AST: "];
"1000203" -> "1000206"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000203"  [label="AST: "];
"1000206" -> "1000203"  [label="AST: "];
"1000211" -> "1000203"  [label="CFG: "];
"1000203" -> "1000219"  [label="DDG: SNDRV_CTL_EVENT_MASK_VALUE"];
"1000203" -> "1000219"  [label="DDG: &control->id"];
"1000203" -> "1000219"  [label="DDG: snd_ctl_notify(card, SNDRV_CTL_EVENT_MASK_VALUE,\n\t\t\t\t       &control->id)"];
"1000203" -> "1000219"  [label="DDG: card"];
"1000158" -> "1000157"  [label="AST: "];
"1000158" -> "1000162"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000162" -> "1000158"  [label="AST: "];
"1000164" -> "1000158"  [label="CFG: "];
"1000157" -> "1000158"  [label="CFG: "];
"1000158" -> "1000219"  [label="DDG: kctl->put"];
"1000158" -> "1000219"  [label="DDG: NULL"];
"1000158" -> "1000157"  [label="DDG: kctl->put"];
"1000158" -> "1000157"  [label="DDG: NULL"];
"1000157" -> "1000150"  [label="AST: "];
"1000157" -> "1000163"  [label="CFG: "];
"1000163" -> "1000157"  [label="AST: "];
"1000150" -> "1000157"  [label="CFG: "];
"1000157" -> "1000219"  [label="DDG: kctl->put == NULL"];
"1000157" -> "1000219"  [label="DDG: file && vd->owner && vd->owner != file"];
"1000157" -> "1000150"  [label="DDG: kctl->put == NULL"];
"1000157" -> "1000150"  [label="DDG: file && vd->owner && vd->owner != file"];
"1000163" -> "1000157"  [label="DDG: file"];
"1000163" -> "1000157"  [label="DDG: vd->owner && vd->owner != file"];
"1000150" -> "1000149"  [label="AST: "];
"1000150" -> "1000151"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000176" -> "1000150"  [label="CFG: "];
"1000184" -> "1000150"  [label="CFG: "];
"1000150" -> "1000219"  [label="DDG: !(vd->access & SNDRV_CTL_ELEM_ACCESS_WRITE)"];
"1000150" -> "1000219"  [label="DDG: kctl->put == NULL ||\n\t\t    (file && vd->owner && vd->owner != file)"];
"1000150" -> "1000219"  [label="DDG: !(vd->access & SNDRV_CTL_ELEM_ACCESS_WRITE) ||\n\t\t    kctl->put == NULL ||\n\t\t    (file && vd->owner && vd->owner != file)"];
"1000151" -> "1000150"  [label="DDG: vd->access & SNDRV_CTL_ELEM_ACCESS_WRITE"];
}
