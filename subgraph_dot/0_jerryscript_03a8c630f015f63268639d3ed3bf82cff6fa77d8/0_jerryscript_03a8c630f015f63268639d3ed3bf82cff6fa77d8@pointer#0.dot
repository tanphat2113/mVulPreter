digraph "0_jerryscript_03a8c630f015f63268639d3ed3bf82cff6fa77d8@pointer" {
"1000163" [label="(Call,literal_p->type == literal_type)"];
"1000137" [label="(Call,literal_type != LEXER_STRING_LITERAL)"];
"1000129" [label="(Call,literal_type != LEXER_IDENT_LITERAL)"];
"1000124" [label="(Call,literal_type == LEXER_STRING_LITERAL)"];
"1000121" [label="(Call,literal_type == LEXER_IDENT_LITERAL)"];
"1000110" [label="(MethodParameterIn,uint8_t literal_type)"];
"1000162" [label="(Call,literal_p->type == literal_type\n        && literal_p->prop.length == length\n        && memcmp (literal_p->u.char_p, char_p, length) == 0)"];
"1000258" [label="(Call,literal_p->type = literal_type)"];
"1000258" [label="(Call,literal_p->type = literal_type)"];
"1000123" [label="(Identifier,LEXER_IDENT_LITERAL)"];
"1000190" [label="(Identifier,context_p)"];
"1000112" [label="(Block,)"];
"1000323" [label="(MethodReturn,RET)"];
"1000136" [label="(Call,literal_type != LEXER_STRING_LITERAL || length <= PARSER_MAXIMUM_STRING_LENGTH)"];
"1000121" [label="(Call,literal_type == LEXER_IDENT_LITERAL)"];
"1000129" [label="(Call,literal_type != LEXER_IDENT_LITERAL)"];
"1000126" [label="(Identifier,LEXER_STRING_LITERAL)"];
"1000262" [label="(Identifier,literal_type)"];
"1000124" [label="(Call,literal_type == LEXER_STRING_LITERAL)"];
"1000138" [label="(Identifier,literal_type)"];
"1000125" [label="(Identifier,literal_type)"];
"1000110" [label="(MethodParameterIn,uint8_t literal_type)"];
"1000137" [label="(Call,literal_type != LEXER_STRING_LITERAL)"];
"1000133" [label="(Identifier,length)"];
"1000162" [label="(Call,literal_p->type == literal_type\n        && literal_p->prop.length == length\n        && memcmp (literal_p->u.char_p, char_p, length) == 0)"];
"1000168" [label="(Call,literal_p->prop.length == length\n        && memcmp (literal_p->u.char_p, char_p, length) == 0)"];
"1000128" [label="(Call,literal_type != LEXER_IDENT_LITERAL || length <= PARSER_MAXIMUM_IDENT_LENGTH)"];
"1000172" [label="(Identifier,literal_p)"];
"1000141" [label="(Identifier,length)"];
"1000120" [label="(Call,literal_type == LEXER_IDENT_LITERAL\n                || literal_type == LEXER_STRING_LITERAL)"];
"1000164" [label="(Call,literal_p->type)"];
"1000161" [label="(ControlStructure,if (literal_p->type == literal_type\n        && literal_p->prop.length == length\n        && memcmp (literal_p->u.char_p, char_p, length) == 0))"];
"1000163" [label="(Call,literal_p->type == literal_type)"];
"1000259" [label="(Call,literal_p->type)"];
"1000139" [label="(Identifier,LEXER_STRING_LITERAL)"];
"1000122" [label="(Identifier,literal_type)"];
"1000167" [label="(Identifier,literal_type)"];
"1000265" [label="(Identifier,literal_p)"];
"1000130" [label="(Identifier,literal_type)"];
"1000216" [label="(Identifier,literal_index)"];
"1000131" [label="(Identifier,LEXER_IDENT_LITERAL)"];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000167"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000167" -> "1000163"  [label="AST: "];
"1000172" -> "1000163"  [label="CFG: "];
"1000162" -> "1000163"  [label="CFG: "];
"1000163" -> "1000323"  [label="DDG: literal_p->type"];
"1000163" -> "1000323"  [label="DDG: literal_type"];
"1000163" -> "1000162"  [label="DDG: literal_p->type"];
"1000163" -> "1000162"  [label="DDG: literal_type"];
"1000137" -> "1000163"  [label="DDG: literal_type"];
"1000110" -> "1000163"  [label="DDG: literal_type"];
"1000163" -> "1000258"  [label="DDG: literal_type"];
"1000137" -> "1000136"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000141" -> "1000137"  [label="CFG: "];
"1000136" -> "1000137"  [label="CFG: "];
"1000137" -> "1000323"  [label="DDG: LEXER_STRING_LITERAL"];
"1000137" -> "1000136"  [label="DDG: literal_type"];
"1000137" -> "1000136"  [label="DDG: LEXER_STRING_LITERAL"];
"1000129" -> "1000137"  [label="DDG: literal_type"];
"1000110" -> "1000137"  [label="DDG: literal_type"];
"1000124" -> "1000137"  [label="DDG: LEXER_STRING_LITERAL"];
"1000137" -> "1000258"  [label="DDG: literal_type"];
"1000129" -> "1000128"  [label="AST: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000129"  [label="AST: "];
"1000133" -> "1000129"  [label="CFG: "];
"1000128" -> "1000129"  [label="CFG: "];
"1000129" -> "1000323"  [label="DDG: LEXER_IDENT_LITERAL"];
"1000129" -> "1000128"  [label="DDG: literal_type"];
"1000129" -> "1000128"  [label="DDG: LEXER_IDENT_LITERAL"];
"1000124" -> "1000129"  [label="DDG: literal_type"];
"1000121" -> "1000129"  [label="DDG: literal_type"];
"1000121" -> "1000129"  [label="DDG: LEXER_IDENT_LITERAL"];
"1000110" -> "1000129"  [label="DDG: literal_type"];
"1000124" -> "1000120"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000120" -> "1000124"  [label="CFG: "];
"1000124" -> "1000120"  [label="DDG: literal_type"];
"1000124" -> "1000120"  [label="DDG: LEXER_STRING_LITERAL"];
"1000121" -> "1000124"  [label="DDG: literal_type"];
"1000110" -> "1000124"  [label="DDG: literal_type"];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000125" -> "1000121"  [label="CFG: "];
"1000120" -> "1000121"  [label="CFG: "];
"1000121" -> "1000120"  [label="DDG: literal_type"];
"1000121" -> "1000120"  [label="DDG: LEXER_IDENT_LITERAL"];
"1000110" -> "1000121"  [label="DDG: literal_type"];
"1000110" -> "1000106"  [label="AST: "];
"1000110" -> "1000323"  [label="DDG: literal_type"];
"1000110" -> "1000258"  [label="DDG: literal_type"];
"1000162" -> "1000161"  [label="AST: "];
"1000162" -> "1000168"  [label="CFG: "];
"1000168" -> "1000162"  [label="AST: "];
"1000190" -> "1000162"  [label="CFG: "];
"1000216" -> "1000162"  [label="CFG: "];
"1000162" -> "1000323"  [label="DDG: literal_p->prop.length == length\n        && memcmp (literal_p->u.char_p, char_p, length) == 0"];
"1000162" -> "1000323"  [label="DDG: literal_p->type == literal_type"];
"1000162" -> "1000323"  [label="DDG: literal_p->type == literal_type\n        && literal_p->prop.length == length\n        && memcmp (literal_p->u.char_p, char_p, length) == 0"];
"1000168" -> "1000162"  [label="DDG: literal_p->prop.length == length"];
"1000168" -> "1000162"  [label="DDG: memcmp (literal_p->u.char_p, char_p, length) == 0"];
"1000258" -> "1000112"  [label="AST: "];
"1000258" -> "1000262"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000262" -> "1000258"  [label="AST: "];
"1000265" -> "1000258"  [label="CFG: "];
"1000258" -> "1000323"  [label="DDG: literal_p->type"];
"1000258" -> "1000323"  [label="DDG: literal_type"];
}
