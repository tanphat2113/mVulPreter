digraph "0_Android_0bb5ced60304da7f61478ffd359e7ba65d72f181@API" {
"1000394" [label="(Call,err = data.read(params, size))"];
"1000396" [label="(Call,data.read(params, size))"];
"1000390" [label="(Call,params != MAP_FAILED)"];
"1000375" [label="(Call,params = mmap(NULL, allocSize, PROT_READ | PROT_WRITE,\n                            MAP_PRIVATE | MAP_ANONYMOUS, -1 /* fd */, 0 /* offset */))"];
"1000377" [label="(Call,mmap(NULL, allocSize, PROT_READ | PROT_WRITE,\n                            MAP_PRIVATE | MAP_ANONYMOUS, -1 /* fd */, 0 /* offset */))"];
"1000363" [label="(Call,allocSize = (size + pageSize * 2) & ~(pageSize - 1))"];
"1000365" [label="(Call,(size + pageSize * 2) & ~(pageSize - 1))"];
"1000351" [label="(Call,size > SIZE_MAX - (pageSize * 2))"];
"1000295" [label="(Call,size = data.readInt64())"];
"1000329" [label="(Call,size < 8)"];
"1000322" [label="(Call,size < 4)"];
"1000353" [label="(Call,SIZE_MAX - (pageSize * 2))"];
"1000355" [label="(Call,pageSize * 2)"];
"1000344" [label="(Call,pageSize = (size_t) sysconf(_SC_PAGE_SIZE))"];
"1000346" [label="(Call,(size_t) sysconf(_SC_PAGE_SIZE))"];
"1000348" [label="(Call,sysconf(_SC_PAGE_SIZE))"];
"1000368" [label="(Call,pageSize * 2)"];
"1000371" [label="(Call,~(pageSize - 1))"];
"1000372" [label="(Call,pageSize - 1)"];
"1000380" [label="(Call,PROT_READ | PROT_WRITE)"];
"1000383" [label="(Call,MAP_PRIVATE | MAP_ANONYMOUS)"];
"1000386" [label="(Call,-1)"];
"1000303" [label="(Call,*params = NULL)"];
"1000400" [label="(Call,err != OK)"];
"1000517" [label="(Call,reply->writeInt32(err))"];
"1000528" [label="(Call,err == OK)"];
"1000520" [label="(Call,(code == GET_PARAMETER || code == GET_CONFIG) && err == OK)"];
"1000385" [label="(Identifier,MAP_ANONYMOUS)"];
"1000486" [label="(Call,setConfig(node, index, params, size))"];
"1000349" [label="(Identifier,_SC_PAGE_SIZE)"];
"1000362" [label="(Block,)"];
"1000386" [label="(Call,-1)"];
"1000530" [label="(Identifier,OK)"];
"1000373" [label="(Identifier,pageSize)"];
"1000381" [label="(Identifier,PROT_READ)"];
"1000380" [label="(Call,PROT_READ | PROT_WRITE)"];
"1000277" [label="(Block,)"];
"1000468" [label="(Call,setParameter(node, index, params, size))"];
"1000390" [label="(Call,params != MAP_FAILED)"];
"1000346" [label="(Call,(size_t) sysconf(_SC_PAGE_SIZE))"];
"1000402" [label="(Identifier,OK)"];
"1000410" [label="(Identifier,err)"];
"1000344" [label="(Call,pageSize = (size_t) sysconf(_SC_PAGE_SIZE))"];
"1000541" [label="(Call,params = NULL)"];
"1000304" [label="(Identifier,params)"];
"1000514" [label="(Literal,\"couldn't map: %s\")"];
"1000533" [label="(Identifier,params)"];
"1000356" [label="(Identifier,pageSize)"];
"1000395" [label="(Identifier,err)"];
"1000484" [label="(Call,err = setConfig(node, index, params, size))"];
"1000379" [label="(Identifier,allocSize)"];
"1000352" [label="(Identifier,size)"];
"1001353" [label="(MethodReturn,status_t)"];
"1000325" [label="(Call,code != SET_INTERNAL_OPTION && size < 8)"];
"1000401" [label="(Identifier,err)"];
"1000297" [label="(Call,data.readInt64())"];
"1000398" [label="(Identifier,size)"];
"1000371" [label="(Call,~(pageSize - 1))"];
"1000331" [label="(Literal,8)"];
"1000323" [label="(Identifier,size)"];
"1000340" [label="(Block,)"];
"1000520" [label="(Call,(code == GET_PARAMETER || code == GET_CONFIG) && err == OK)"];
"1000457" [label="(Call,err = getParameter(node, index, params, size))"];
"1000308" [label="(Identifier,pageSize)"];
"1000477" [label="(Call,getConfig(node, index, params, size))"];
"1000375" [label="(Call,params = mmap(NULL, allocSize, PROT_READ | PROT_WRITE,\n                            MAP_PRIVATE | MAP_ANONYMOUS, -1 /* fd */, 0 /* offset */))"];
"1000341" [label="(Call,err = NO_MEMORY)"];
"1000400" [label="(Call,err != OK)"];
"1000383" [label="(Call,MAP_PRIVATE | MAP_ANONYMOUS)"];
"1000365" [label="(Call,(size + pageSize * 2) & ~(pageSize - 1))"];
"1000405" [label="(Literal,0x534e4554)"];
"1000378" [label="(Identifier,NULL)"];
"1000521" [label="(Call,code == GET_PARAMETER || code == GET_CONFIG)"];
"1000351" [label="(Call,size > SIZE_MAX - (pageSize * 2))"];
"1000523" [label="(Identifier,code)"];
"1000296" [label="(Identifier,size)"];
"1000348" [label="(Call,sysconf(_SC_PAGE_SIZE))"];
"1000387" [label="(Literal,1)"];
"1000370" [label="(Literal,2)"];
"1000330" [label="(Identifier,size)"];
"1000345" [label="(Identifier,pageSize)"];
"1000475" [label="(Call,err = getConfig(node, index, params, size))"];
"1000360" [label="(Literal,\"requested param size too big\")"];
"1000372" [label="(Call,pageSize - 1)"];
"1000448" [label="(Call,allocSize - pageSize)"];
"1000517" [label="(Call,reply->writeInt32(err))"];
"1000303" [label="(Call,*params = NULL)"];
"1000529" [label="(Identifier,err)"];
"1000305" [label="(Identifier,NULL)"];
"1000538" [label="(Call,munmap(params, allocSize))"];
"1000536" [label="(Identifier,params)"];
"1000354" [label="(Identifier,SIZE_MAX)"];
"1000393" [label="(Block,)"];
"1000376" [label="(Identifier,params)"];
"1000299" [label="(Call,err = NOT_ENOUGH_DATA)"];
"1000409" [label="(Call,err = NOT_ENOUGH_DATA)"];
"1000300" [label="(Identifier,err)"];
"1000532" [label="(Call,reply->write(params, size))"];
"1000329" [label="(Call,size < 8)"];
"1000368" [label="(Call,pageSize * 2)"];
"1000394" [label="(Call,err = data.read(params, size))"];
"1000389" [label="(ControlStructure,if (params != MAP_FAILED))"];
"1000384" [label="(Identifier,MAP_PRIVATE)"];
"1000519" [label="(ControlStructure,if ((code == GET_PARAMETER || code == GET_CONFIG) && err == OK))"];
"1000324" [label="(Literal,4)"];
"1000392" [label="(Identifier,MAP_FAILED)"];
"1000369" [label="(Identifier,pageSize)"];
"1000364" [label="(Identifier,allocSize)"];
"1000388" [label="(Literal,0)"];
"1000382" [label="(Identifier,PROT_WRITE)"];
"1000355" [label="(Call,pageSize * 2)"];
"1000374" [label="(Literal,1)"];
"1000316" [label="(Call,index == (OMX_INDEXTYPE) OMX_IndexParamConsumerUsageBits && size < 4)"];
"1000500" [label="(Call,err = setInternalOption(node, index, type, params, size))"];
"1000416" [label="(Call,(OMX_U32*)params)"];
"1000518" [label="(Identifier,err)"];
"1000502" [label="(Call,setInternalOption(node, index, type, params, size))"];
"1000295" [label="(Call,size = data.readInt64())"];
"1000466" [label="(Call,err = setParameter(node, index, params, size))"];
"1000353" [label="(Call,SIZE_MAX - (pageSize * 2))"];
"1000391" [label="(Identifier,params)"];
"1000396" [label="(Call,data.read(params, size))"];
"1000377" [label="(Call,mmap(NULL, allocSize, PROT_READ | PROT_WRITE,\n                            MAP_PRIVATE | MAP_ANONYMOUS, -1 /* fd */, 0 /* offset */))"];
"1000322" [label="(Call,size < 4)"];
"1000397" [label="(Identifier,params)"];
"1000350" [label="(ControlStructure,if (size > SIZE_MAX - (pageSize * 2)))"];
"1000399" [label="(ControlStructure,if (err != OK))"];
"1000434" [label="(Call,ALOGE(\"b/27207275 (%u/%zu)\", declaredSize, size))"];
"1000528" [label="(Call,err == OK)"];
"1000430" [label="(Call,declaredSize > size)"];
"1000357" [label="(Literal,2)"];
"1000333" [label="(Call,ALOGE(\"b/27207275 (%zu)\", size))"];
"1000459" [label="(Call,getParameter(node, index, params, size))"];
"1000363" [label="(Call,allocSize = (size + pageSize * 2) & ~(pageSize - 1))"];
"1000366" [label="(Call,size + pageSize * 2)"];
"1000394" -> "1000393"  [label="AST: "];
"1000394" -> "1000396"  [label="CFG: "];
"1000395" -> "1000394"  [label="AST: "];
"1000396" -> "1000394"  [label="AST: "];
"1000401" -> "1000394"  [label="CFG: "];
"1000394" -> "1001353"  [label="DDG: data.read(params, size)"];
"1000396" -> "1000394"  [label="DDG: params"];
"1000396" -> "1000394"  [label="DDG: size"];
"1000394" -> "1000400"  [label="DDG: err"];
"1000396" -> "1000398"  [label="CFG: "];
"1000397" -> "1000396"  [label="AST: "];
"1000398" -> "1000396"  [label="AST: "];
"1000396" -> "1001353"  [label="DDG: size"];
"1000390" -> "1000396"  [label="DDG: params"];
"1000351" -> "1000396"  [label="DDG: size"];
"1000396" -> "1000416"  [label="DDG: params"];
"1000396" -> "1000430"  [label="DDG: size"];
"1000396" -> "1000434"  [label="DDG: size"];
"1000396" -> "1000459"  [label="DDG: size"];
"1000396" -> "1000468"  [label="DDG: size"];
"1000396" -> "1000477"  [label="DDG: size"];
"1000396" -> "1000486"  [label="DDG: size"];
"1000396" -> "1000502"  [label="DDG: size"];
"1000396" -> "1000532"  [label="DDG: params"];
"1000396" -> "1000532"  [label="DDG: size"];
"1000396" -> "1000538"  [label="DDG: params"];
"1000390" -> "1000389"  [label="AST: "];
"1000390" -> "1000392"  [label="CFG: "];
"1000391" -> "1000390"  [label="AST: "];
"1000392" -> "1000390"  [label="AST: "];
"1000395" -> "1000390"  [label="CFG: "];
"1000514" -> "1000390"  [label="CFG: "];
"1000390" -> "1001353"  [label="DDG: MAP_FAILED"];
"1000390" -> "1001353"  [label="DDG: params != MAP_FAILED"];
"1000375" -> "1000390"  [label="DDG: params"];
"1000303" -> "1000390"  [label="DDG: params"];
"1000390" -> "1000532"  [label="DDG: params"];
"1000390" -> "1000538"  [label="DDG: params"];
"1000375" -> "1000362"  [label="AST: "];
"1000375" -> "1000377"  [label="CFG: "];
"1000376" -> "1000375"  [label="AST: "];
"1000377" -> "1000375"  [label="AST: "];
"1000391" -> "1000375"  [label="CFG: "];
"1000375" -> "1001353"  [label="DDG: mmap(NULL, allocSize, PROT_READ | PROT_WRITE,\n                            MAP_PRIVATE | MAP_ANONYMOUS, -1 /* fd */, 0 /* offset */)"];
"1000377" -> "1000375"  [label="DDG: NULL"];
"1000377" -> "1000375"  [label="DDG: PROT_READ | PROT_WRITE"];
"1000377" -> "1000375"  [label="DDG: -1"];
"1000377" -> "1000375"  [label="DDG: allocSize"];
"1000377" -> "1000375"  [label="DDG: MAP_PRIVATE | MAP_ANONYMOUS"];
"1000377" -> "1000375"  [label="DDG: 0"];
"1000377" -> "1000388"  [label="CFG: "];
"1000378" -> "1000377"  [label="AST: "];
"1000379" -> "1000377"  [label="AST: "];
"1000380" -> "1000377"  [label="AST: "];
"1000383" -> "1000377"  [label="AST: "];
"1000386" -> "1000377"  [label="AST: "];
"1000388" -> "1000377"  [label="AST: "];
"1000377" -> "1001353"  [label="DDG: MAP_PRIVATE | MAP_ANONYMOUS"];
"1000377" -> "1001353"  [label="DDG: PROT_READ | PROT_WRITE"];
"1000377" -> "1001353"  [label="DDG: allocSize"];
"1000377" -> "1001353"  [label="DDG: NULL"];
"1000377" -> "1001353"  [label="DDG: -1"];
"1000363" -> "1000377"  [label="DDG: allocSize"];
"1000380" -> "1000377"  [label="DDG: PROT_READ"];
"1000380" -> "1000377"  [label="DDG: PROT_WRITE"];
"1000383" -> "1000377"  [label="DDG: MAP_PRIVATE"];
"1000383" -> "1000377"  [label="DDG: MAP_ANONYMOUS"];
"1000386" -> "1000377"  [label="DDG: 1"];
"1000377" -> "1000448"  [label="DDG: allocSize"];
"1000377" -> "1000538"  [label="DDG: allocSize"];
"1000377" -> "1000541"  [label="DDG: NULL"];
"1000363" -> "1000362"  [label="AST: "];
"1000363" -> "1000365"  [label="CFG: "];
"1000364" -> "1000363"  [label="AST: "];
"1000365" -> "1000363"  [label="AST: "];
"1000376" -> "1000363"  [label="CFG: "];
"1000363" -> "1001353"  [label="DDG: (size + pageSize * 2) & ~(pageSize - 1)"];
"1000365" -> "1000363"  [label="DDG: size + pageSize * 2"];
"1000365" -> "1000363"  [label="DDG: ~(pageSize - 1)"];
"1000365" -> "1000371"  [label="CFG: "];
"1000366" -> "1000365"  [label="AST: "];
"1000371" -> "1000365"  [label="AST: "];
"1000365" -> "1001353"  [label="DDG: size + pageSize * 2"];
"1000365" -> "1001353"  [label="DDG: ~(pageSize - 1)"];
"1000351" -> "1000365"  [label="DDG: size"];
"1000368" -> "1000365"  [label="DDG: pageSize"];
"1000368" -> "1000365"  [label="DDG: 2"];
"1000371" -> "1000365"  [label="DDG: pageSize - 1"];
"1000351" -> "1000350"  [label="AST: "];
"1000351" -> "1000353"  [label="CFG: "];
"1000352" -> "1000351"  [label="AST: "];
"1000353" -> "1000351"  [label="AST: "];
"1000360" -> "1000351"  [label="CFG: "];
"1000364" -> "1000351"  [label="CFG: "];
"1000351" -> "1001353"  [label="DDG: size > SIZE_MAX - (pageSize * 2)"];
"1000351" -> "1001353"  [label="DDG: SIZE_MAX - (pageSize * 2)"];
"1000351" -> "1001353"  [label="DDG: size"];
"1000295" -> "1000351"  [label="DDG: size"];
"1000329" -> "1000351"  [label="DDG: size"];
"1000322" -> "1000351"  [label="DDG: size"];
"1000353" -> "1000351"  [label="DDG: SIZE_MAX"];
"1000353" -> "1000351"  [label="DDG: pageSize * 2"];
"1000351" -> "1000366"  [label="DDG: size"];
"1000351" -> "1000532"  [label="DDG: size"];
"1000295" -> "1000277"  [label="AST: "];
"1000295" -> "1000297"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000297" -> "1000295"  [label="AST: "];
"1000300" -> "1000295"  [label="CFG: "];
"1000295" -> "1001353"  [label="DDG: data.readInt64()"];
"1000295" -> "1000322"  [label="DDG: size"];
"1000295" -> "1000329"  [label="DDG: size"];
"1000295" -> "1000333"  [label="DDG: size"];
"1000329" -> "1000325"  [label="AST: "];
"1000329" -> "1000331"  [label="CFG: "];
"1000330" -> "1000329"  [label="AST: "];
"1000331" -> "1000329"  [label="AST: "];
"1000325" -> "1000329"  [label="CFG: "];
"1000329" -> "1000325"  [label="DDG: size"];
"1000329" -> "1000325"  [label="DDG: 8"];
"1000322" -> "1000329"  [label="DDG: size"];
"1000329" -> "1000333"  [label="DDG: size"];
"1000322" -> "1000316"  [label="AST: "];
"1000322" -> "1000324"  [label="CFG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000324" -> "1000322"  [label="AST: "];
"1000316" -> "1000322"  [label="CFG: "];
"1000322" -> "1000316"  [label="DDG: size"];
"1000322" -> "1000316"  [label="DDG: 4"];
"1000322" -> "1000333"  [label="DDG: size"];
"1000353" -> "1000355"  [label="CFG: "];
"1000354" -> "1000353"  [label="AST: "];
"1000355" -> "1000353"  [label="AST: "];
"1000353" -> "1001353"  [label="DDG: SIZE_MAX"];
"1000353" -> "1001353"  [label="DDG: pageSize * 2"];
"1000355" -> "1000353"  [label="DDG: pageSize"];
"1000355" -> "1000353"  [label="DDG: 2"];
"1000355" -> "1000357"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000357" -> "1000355"  [label="AST: "];
"1000355" -> "1001353"  [label="DDG: pageSize"];
"1000344" -> "1000355"  [label="DDG: pageSize"];
"1000355" -> "1000368"  [label="DDG: pageSize"];
"1000355" -> "1000448"  [label="DDG: pageSize"];
"1000344" -> "1000340"  [label="AST: "];
"1000344" -> "1000346"  [label="CFG: "];
"1000345" -> "1000344"  [label="AST: "];
"1000346" -> "1000344"  [label="AST: "];
"1000352" -> "1000344"  [label="CFG: "];
"1000344" -> "1001353"  [label="DDG: (size_t) sysconf(_SC_PAGE_SIZE)"];
"1000346" -> "1000344"  [label="DDG: sysconf(_SC_PAGE_SIZE)"];
"1000346" -> "1000348"  [label="CFG: "];
"1000347" -> "1000346"  [label="AST: "];
"1000348" -> "1000346"  [label="AST: "];
"1000346" -> "1001353"  [label="DDG: sysconf(_SC_PAGE_SIZE)"];
"1000348" -> "1000346"  [label="DDG: _SC_PAGE_SIZE"];
"1000348" -> "1000349"  [label="CFG: "];
"1000349" -> "1000348"  [label="AST: "];
"1000348" -> "1001353"  [label="DDG: _SC_PAGE_SIZE"];
"1000368" -> "1000366"  [label="AST: "];
"1000368" -> "1000370"  [label="CFG: "];
"1000369" -> "1000368"  [label="AST: "];
"1000370" -> "1000368"  [label="AST: "];
"1000366" -> "1000368"  [label="CFG: "];
"1000368" -> "1000366"  [label="DDG: pageSize"];
"1000368" -> "1000366"  [label="DDG: 2"];
"1000368" -> "1000372"  [label="DDG: pageSize"];
"1000371" -> "1000372"  [label="CFG: "];
"1000372" -> "1000371"  [label="AST: "];
"1000371" -> "1001353"  [label="DDG: pageSize - 1"];
"1000372" -> "1000371"  [label="DDG: pageSize"];
"1000372" -> "1000371"  [label="DDG: 1"];
"1000372" -> "1000374"  [label="CFG: "];
"1000373" -> "1000372"  [label="AST: "];
"1000374" -> "1000372"  [label="AST: "];
"1000372" -> "1001353"  [label="DDG: pageSize"];
"1000372" -> "1000448"  [label="DDG: pageSize"];
"1000380" -> "1000382"  [label="CFG: "];
"1000381" -> "1000380"  [label="AST: "];
"1000382" -> "1000380"  [label="AST: "];
"1000384" -> "1000380"  [label="CFG: "];
"1000380" -> "1001353"  [label="DDG: PROT_WRITE"];
"1000380" -> "1001353"  [label="DDG: PROT_READ"];
"1000383" -> "1000385"  [label="CFG: "];
"1000384" -> "1000383"  [label="AST: "];
"1000385" -> "1000383"  [label="AST: "];
"1000387" -> "1000383"  [label="CFG: "];
"1000383" -> "1001353"  [label="DDG: MAP_PRIVATE"];
"1000383" -> "1001353"  [label="DDG: MAP_ANONYMOUS"];
"1000386" -> "1000387"  [label="CFG: "];
"1000387" -> "1000386"  [label="AST: "];
"1000388" -> "1000386"  [label="CFG: "];
"1000303" -> "1000277"  [label="AST: "];
"1000303" -> "1000305"  [label="CFG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000305" -> "1000303"  [label="AST: "];
"1000308" -> "1000303"  [label="CFG: "];
"1000303" -> "1001353"  [label="DDG: NULL"];
"1000303" -> "1000532"  [label="DDG: params"];
"1000303" -> "1000538"  [label="DDG: params"];
"1000400" -> "1000399"  [label="AST: "];
"1000400" -> "1000402"  [label="CFG: "];
"1000401" -> "1000400"  [label="AST: "];
"1000402" -> "1000400"  [label="AST: "];
"1000405" -> "1000400"  [label="CFG: "];
"1000410" -> "1000400"  [label="CFG: "];
"1000400" -> "1001353"  [label="DDG: OK"];
"1000400" -> "1001353"  [label="DDG: err != OK"];
"1000400" -> "1000517"  [label="DDG: err"];
"1000400" -> "1000528"  [label="DDG: OK"];
"1000517" -> "1000277"  [label="AST: "];
"1000517" -> "1000518"  [label="CFG: "];
"1000518" -> "1000517"  [label="AST: "];
"1000523" -> "1000517"  [label="CFG: "];
"1000517" -> "1001353"  [label="DDG: err"];
"1000517" -> "1001353"  [label="DDG: reply->writeInt32(err)"];
"1000466" -> "1000517"  [label="DDG: err"];
"1000475" -> "1000517"  [label="DDG: err"];
"1000457" -> "1000517"  [label="DDG: err"];
"1000484" -> "1000517"  [label="DDG: err"];
"1000341" -> "1000517"  [label="DDG: err"];
"1000500" -> "1000517"  [label="DDG: err"];
"1000299" -> "1000517"  [label="DDG: err"];
"1000409" -> "1000517"  [label="DDG: err"];
"1000517" -> "1000528"  [label="DDG: err"];
"1000528" -> "1000520"  [label="AST: "];
"1000528" -> "1000530"  [label="CFG: "];
"1000529" -> "1000528"  [label="AST: "];
"1000530" -> "1000528"  [label="AST: "];
"1000520" -> "1000528"  [label="CFG: "];
"1000528" -> "1001353"  [label="DDG: OK"];
"1000528" -> "1001353"  [label="DDG: err"];
"1000528" -> "1000520"  [label="DDG: err"];
"1000528" -> "1000520"  [label="DDG: OK"];
"1000520" -> "1000519"  [label="AST: "];
"1000520" -> "1000521"  [label="CFG: "];
"1000521" -> "1000520"  [label="AST: "];
"1000533" -> "1000520"  [label="CFG: "];
"1000536" -> "1000520"  [label="CFG: "];
"1000520" -> "1001353"  [label="DDG: (code == GET_PARAMETER || code == GET_CONFIG) && err == OK"];
"1000520" -> "1001353"  [label="DDG: err == OK"];
"1000520" -> "1001353"  [label="DDG: code == GET_PARAMETER || code == GET_CONFIG"];
"1000521" -> "1000520"  [label="DDG: code == GET_PARAMETER"];
"1000521" -> "1000520"  [label="DDG: code == GET_CONFIG"];
}
