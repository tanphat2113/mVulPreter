digraph "0_linux_073931017b49d9458aa351605b43a7e34598caef@pointer" {
"1000108" [label="(MethodParameterIn,struct inode *inode)"];
"1000148" [label="(Call,inode_owner_or_capable(inode))"];
"1000147" [label="(Call,!inode_owner_or_capable(inode))"];
"1000287" [label="(Call,set_cached_acl(inode, handler->flags, acl))"];
"1000294" [label="(Call,posix_acl_release(acl))"];
"1000154" [label="(Identifier,value)"];
"1000148" [label="(Call,inode_owner_or_capable(inode))"];
"1000113" [label="(Block,)"];
"1000147" [label="(Call,!inode_owner_or_capable(inode))"];
"1000223" [label="(Call,acl = NULL)"];
"1000298" [label="(MethodReturn,static int)"];
"1000288" [label="(Identifier,inode)"];
"1000152" [label="(Identifier,EPERM)"];
"1000146" [label="(ControlStructure,if (!inode_owner_or_capable(inode)))"];
"1000289" [label="(Call,handler->flags)"];
"1000149" [label="(Identifier,inode)"];
"1000294" [label="(Call,posix_acl_release(acl))"];
"1000164" [label="(Call,IS_ERR(acl))"];
"1000175" [label="(Call,posix_acl_valid(inode->i_sb->s_user_ns, acl))"];
"1000186" [label="(Call,acl = NULL)"];
"1000297" [label="(Identifier,retval)"];
"1000293" [label="(JumpTarget,err_out:)"];
"1000292" [label="(Identifier,acl)"];
"1000287" [label="(Call,set_cached_acl(inode, handler->flags, acl))"];
"1000206" [label="(Call,posix_acl_equiv_mode(acl, &mode))"];
"1000108" [label="(MethodParameterIn,struct inode *inode)"];
"1000295" [label="(Identifier,acl)"];
"1000284" [label="(ControlStructure,if (!retval))"];
"1000108" -> "1000105"  [label="AST: "];
"1000108" -> "1000298"  [label="DDG: inode"];
"1000108" -> "1000148"  [label="DDG: inode"];
"1000108" -> "1000287"  [label="DDG: inode"];
"1000148" -> "1000147"  [label="AST: "];
"1000148" -> "1000149"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000147" -> "1000148"  [label="CFG: "];
"1000148" -> "1000298"  [label="DDG: inode"];
"1000148" -> "1000147"  [label="DDG: inode"];
"1000148" -> "1000287"  [label="DDG: inode"];
"1000147" -> "1000146"  [label="AST: "];
"1000152" -> "1000147"  [label="CFG: "];
"1000154" -> "1000147"  [label="CFG: "];
"1000147" -> "1000298"  [label="DDG: inode_owner_or_capable(inode)"];
"1000147" -> "1000298"  [label="DDG: !inode_owner_or_capable(inode)"];
"1000287" -> "1000284"  [label="AST: "];
"1000287" -> "1000292"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000287"  [label="AST: "];
"1000292" -> "1000287"  [label="AST: "];
"1000293" -> "1000287"  [label="CFG: "];
"1000287" -> "1000298"  [label="DDG: set_cached_acl(inode, handler->flags, acl)"];
"1000287" -> "1000298"  [label="DDG: handler->flags"];
"1000287" -> "1000298"  [label="DDG: inode"];
"1000186" -> "1000287"  [label="DDG: acl"];
"1000175" -> "1000287"  [label="DDG: acl"];
"1000206" -> "1000287"  [label="DDG: acl"];
"1000223" -> "1000287"  [label="DDG: acl"];
"1000164" -> "1000287"  [label="DDG: acl"];
"1000287" -> "1000294"  [label="DDG: acl"];
"1000294" -> "1000113"  [label="AST: "];
"1000294" -> "1000295"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000297" -> "1000294"  [label="CFG: "];
"1000294" -> "1000298"  [label="DDG: posix_acl_release(acl)"];
"1000294" -> "1000298"  [label="DDG: acl"];
"1000186" -> "1000294"  [label="DDG: acl"];
"1000175" -> "1000294"  [label="DDG: acl"];
"1000206" -> "1000294"  [label="DDG: acl"];
"1000223" -> "1000294"  [label="DDG: acl"];
"1000164" -> "1000294"  [label="DDG: acl"];
}
