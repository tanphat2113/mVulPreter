digraph "0_Chrome_a03d4448faf2c40f4ef444a88cb9aace5b98e8c4_0@pointer" {
"1000112" [label="(Call,!extension)"];
"1000105" [label="(Call,* extension =\n       profile->GetExtensionService()->GetExtensionById(extension_id, false))"];
"1000107" [label="(Call,profile->GetExtensionService()->GetExtensionById(extension_id, false))"];
"1000102" [label="(MethodParameterIn,const std::string& extension_id)"];
"1000111" [label="(Call,!extension || extension->is_hosted_app())"];
"1000110" [label="(Call,DCHECK(!extension || extension->is_hosted_app()))"];
"1000116" [label="(Call,extension && extension->has_background_page())"];
"1000121" [label="(Identifier,profile)"];
"1000110" [label="(Call,DCHECK(!extension || extension->is_hosted_app()))"];
"1000107" [label="(Call,profile->GetExtensionService()->GetExtensionById(extension_id, false))"];
"1000114" [label="(Call,extension->is_hosted_app())"];
"1000113" [label="(Identifier,extension)"];
"1000145" [label="(MethodReturn,void)"];
"1000112" [label="(Call,!extension)"];
"1000106" [label="(Identifier,extension)"];
"1000103" [label="(Block,)"];
"1000105" [label="(Call,* extension =\n       profile->GetExtensionService()->GetExtensionById(extension_id, false))"];
"1000115" [label="(ControlStructure,if (extension && extension->has_background_page()))"];
"1000130" [label="(Identifier,prefs_)"];
"1000116" [label="(Call,extension && extension->has_background_page())"];
"1000118" [label="(Call,extension->has_background_page())"];
"1000111" [label="(Call,!extension || extension->is_hosted_app())"];
"1000102" [label="(MethodParameterIn,const std::string& extension_id)"];
"1000117" [label="(Identifier,extension)"];
"1000109" [label="(Identifier,false)"];
"1000108" [label="(Identifier,extension_id)"];
"1000141" [label="(Call,LoadBackgroundContentsFromDictionary(profile, extension_id, contents))"];
"1000112" -> "1000111"  [label="AST: "];
"1000112" -> "1000113"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="CFG: "];
"1000111" -> "1000112"  [label="CFG: "];
"1000112" -> "1000111"  [label="DDG: extension"];
"1000105" -> "1000112"  [label="DDG: extension"];
"1000112" -> "1000116"  [label="DDG: extension"];
"1000105" -> "1000103"  [label="AST: "];
"1000105" -> "1000107"  [label="CFG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000107" -> "1000105"  [label="AST: "];
"1000113" -> "1000105"  [label="CFG: "];
"1000105" -> "1000145"  [label="DDG: profile->GetExtensionService()->GetExtensionById(extension_id, false)"];
"1000107" -> "1000105"  [label="DDG: extension_id"];
"1000107" -> "1000105"  [label="DDG: false"];
"1000107" -> "1000109"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000107" -> "1000145"  [label="DDG: extension_id"];
"1000107" -> "1000145"  [label="DDG: false"];
"1000102" -> "1000107"  [label="DDG: extension_id"];
"1000107" -> "1000141"  [label="DDG: extension_id"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000145"  [label="DDG: extension_id"];
"1000102" -> "1000141"  [label="DDG: extension_id"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000114"  [label="CFG: "];
"1000114" -> "1000111"  [label="AST: "];
"1000110" -> "1000111"  [label="CFG: "];
"1000111" -> "1000145"  [label="DDG: extension->is_hosted_app()"];
"1000111" -> "1000145"  [label="DDG: !extension"];
"1000111" -> "1000110"  [label="DDG: !extension"];
"1000111" -> "1000110"  [label="DDG: extension->is_hosted_app()"];
"1000110" -> "1000103"  [label="AST: "];
"1000117" -> "1000110"  [label="CFG: "];
"1000110" -> "1000145"  [label="DDG: DCHECK(!extension || extension->is_hosted_app())"];
"1000110" -> "1000145"  [label="DDG: !extension || extension->is_hosted_app()"];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000117"  [label="CFG: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000121" -> "1000116"  [label="CFG: "];
"1000130" -> "1000116"  [label="CFG: "];
"1000116" -> "1000145"  [label="DDG: extension"];
"1000116" -> "1000145"  [label="DDG: extension->has_background_page()"];
"1000116" -> "1000145"  [label="DDG: extension && extension->has_background_page()"];
}
