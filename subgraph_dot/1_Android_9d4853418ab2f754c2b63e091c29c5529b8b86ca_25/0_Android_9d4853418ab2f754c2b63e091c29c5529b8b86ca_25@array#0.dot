digraph "0_Android_9d4853418ab2f754c2b63e091c29c5529b8b86ca_25@array" {
"1000299" [label="(Call,transform_info[i].valid_chunks & chunks)"];
"1000291" [label="(Call,transform_info[i].valid_chunks == 0)"];
"1000299" [label="(Call,transform_info[i].valid_chunks & chunks)"];
"1000244" [label="(Call,chunks = dp->chunks)"];
"1000178" [label="(Call,dp->chunks & PNG_INFO_IDAT)"];
"1000168" [label="(Call,dp->chunks = png_get_valid(pp, ip, 0xffffffff))"];
"1000172" [label="(Call,png_get_valid(pp, ip, 0xffffffff))"];
"1000155" [label="(Call,png_get_rowbytes(pp, ip))"];
"1000126" [label="(Call,pp = dp->read_pp)"];
"1000141" [label="(Call,ip = dp->read_ip)"];
"1000290" [label="(Call,transform_info[i].valid_chunks == 0 ||\n                (transform_info[i].valid_chunks & chunks) != 0)"];
"1000289" [label="(Call,(transform_info[i].valid_chunks == 0 ||\n                (transform_info[i].valid_chunks & chunks) != 0) &&\n            (transform_info[i].color_mask_required & ct) == \n                transform_info[i].color_mask_required &&\n             (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0)"];
"1000298" [label="(Call,(transform_info[i].valid_chunks & chunks) != 0)"];
"1000306" [label="(Literal,0)"];
"1000110" [label="(Block,)"];
"1000126" [label="(Call,pp = dp->read_pp)"];
"1000157" [label="(Identifier,ip)"];
"1000151" [label="(Call,dp->original_rowbytes = png_get_rowbytes(pp, ip))"];
"1000179" [label="(Call,dp->chunks)"];
"1000172" [label="(Call,png_get_valid(pp, ip, 0xffffffff))"];
"1000183" [label="(Literal,0)"];
"1000305" [label="(Identifier,chunks)"];
"1000290" [label="(Call,transform_info[i].valid_chunks == 0 ||\n                (transform_info[i].valid_chunks & chunks) != 0)"];
"1000178" [label="(Call,dp->chunks & PNG_INFO_IDAT)"];
"1000292" [label="(Call,transform_info[i].valid_chunks)"];
"1000177" [label="(Call,(dp->chunks & PNG_INFO_IDAT) == 0)"];
"1000291" [label="(Call,transform_info[i].valid_chunks == 0)"];
"1000299" [label="(Call,transform_info[i].valid_chunks & chunks)"];
"1000359" [label="(Identifier,transform_info)"];
"1000168" [label="(Call,dp->chunks = png_get_valid(pp, ip, 0xffffffff))"];
"1000298" [label="(Call,(transform_info[i].valid_chunks & chunks) != 0)"];
"1000245" [label="(Identifier,chunks)"];
"1000251" [label="(Identifier,active)"];
"1000180" [label="(Identifier,dp)"];
"1000242" [label="(Block,)"];
"1000169" [label="(Call,dp->chunks)"];
"1000175" [label="(Literal,0xffffffff)"];
"1000122" [label="(Call,dp->original_pp = pp = dp->read_pp)"];
"1000351" [label="(Identifier,active)"];
"1000137" [label="(Call,dp->original_ip = ip = dp->read_ip)"];
"1000156" [label="(Identifier,pp)"];
"1000388" [label="(MethodReturn,RET)"];
"1000174" [label="(Identifier,ip)"];
"1000307" [label="(Call,(transform_info[i].color_mask_required & ct) == \n                transform_info[i].color_mask_required &&\n             (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0)"];
"1000312" [label="(Identifier,transform_info)"];
"1000142" [label="(Identifier,ip)"];
"1000244" [label="(Call,chunks = dp->chunks)"];
"1000127" [label="(Identifier,pp)"];
"1000155" [label="(Call,png_get_rowbytes(pp, ip))"];
"1000182" [label="(Identifier,PNG_INFO_IDAT)"];
"1000302" [label="(Identifier,transform_info)"];
"1000246" [label="(Call,dp->chunks)"];
"1000141" [label="(Call,ip = dp->read_ip)"];
"1000297" [label="(Literal,0)"];
"1000143" [label="(Call,dp->read_ip)"];
"1000300" [label="(Call,transform_info[i].valid_chunks)"];
"1000173" [label="(Identifier,pp)"];
"1000128" [label="(Call,dp->read_pp)"];
"1000192" [label="(Call,png_get_rows(pp, ip))"];
"1000288" [label="(ControlStructure,if ((transform_info[i].valid_chunks == 0 ||\n                (transform_info[i].valid_chunks & chunks) != 0) &&\n            (transform_info[i].color_mask_required & ct) == \n                transform_info[i].color_mask_required &&\n             (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0))"];
"1000289" [label="(Call,(transform_info[i].valid_chunks == 0 ||\n                (transform_info[i].valid_chunks & chunks) != 0) &&\n            (transform_info[i].color_mask_required & ct) == \n                transform_info[i].color_mask_required &&\n             (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0)"];
"1000299" -> "1000298"  [label="AST: "];
"1000299" -> "1000305"  [label="CFG: "];
"1000300" -> "1000299"  [label="AST: "];
"1000305" -> "1000299"  [label="AST: "];
"1000306" -> "1000299"  [label="CFG: "];
"1000299" -> "1000388"  [label="DDG: chunks"];
"1000299" -> "1000388"  [label="DDG: transform_info[i].valid_chunks"];
"1000299" -> "1000291"  [label="DDG: transform_info[i].valid_chunks"];
"1000299" -> "1000298"  [label="DDG: transform_info[i].valid_chunks"];
"1000299" -> "1000298"  [label="DDG: chunks"];
"1000291" -> "1000299"  [label="DDG: transform_info[i].valid_chunks"];
"1000244" -> "1000299"  [label="DDG: chunks"];
"1000291" -> "1000290"  [label="AST: "];
"1000291" -> "1000297"  [label="CFG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000297" -> "1000291"  [label="AST: "];
"1000302" -> "1000291"  [label="CFG: "];
"1000290" -> "1000291"  [label="CFG: "];
"1000291" -> "1000388"  [label="DDG: transform_info[i].valid_chunks"];
"1000291" -> "1000290"  [label="DDG: transform_info[i].valid_chunks"];
"1000291" -> "1000290"  [label="DDG: 0"];
"1000244" -> "1000242"  [label="AST: "];
"1000244" -> "1000246"  [label="CFG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000246" -> "1000244"  [label="AST: "];
"1000251" -> "1000244"  [label="CFG: "];
"1000244" -> "1000388"  [label="DDG: chunks"];
"1000244" -> "1000388"  [label="DDG: dp->chunks"];
"1000178" -> "1000244"  [label="DDG: dp->chunks"];
"1000178" -> "1000177"  [label="AST: "];
"1000178" -> "1000182"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000182" -> "1000178"  [label="AST: "];
"1000183" -> "1000178"  [label="CFG: "];
"1000178" -> "1000388"  [label="DDG: PNG_INFO_IDAT"];
"1000178" -> "1000177"  [label="DDG: dp->chunks"];
"1000178" -> "1000177"  [label="DDG: PNG_INFO_IDAT"];
"1000168" -> "1000178"  [label="DDG: dp->chunks"];
"1000168" -> "1000110"  [label="AST: "];
"1000168" -> "1000172"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000172" -> "1000168"  [label="AST: "];
"1000180" -> "1000168"  [label="CFG: "];
"1000168" -> "1000388"  [label="DDG: png_get_valid(pp, ip, 0xffffffff)"];
"1000172" -> "1000168"  [label="DDG: pp"];
"1000172" -> "1000168"  [label="DDG: ip"];
"1000172" -> "1000168"  [label="DDG: 0xffffffff"];
"1000172" -> "1000175"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000174" -> "1000172"  [label="AST: "];
"1000175" -> "1000172"  [label="AST: "];
"1000155" -> "1000172"  [label="DDG: pp"];
"1000155" -> "1000172"  [label="DDG: ip"];
"1000172" -> "1000192"  [label="DDG: pp"];
"1000172" -> "1000192"  [label="DDG: ip"];
"1000155" -> "1000151"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000157" -> "1000155"  [label="AST: "];
"1000151" -> "1000155"  [label="CFG: "];
"1000155" -> "1000151"  [label="DDG: pp"];
"1000155" -> "1000151"  [label="DDG: ip"];
"1000126" -> "1000155"  [label="DDG: pp"];
"1000141" -> "1000155"  [label="DDG: ip"];
"1000126" -> "1000122"  [label="AST: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000128" -> "1000126"  [label="AST: "];
"1000122" -> "1000126"  [label="CFG: "];
"1000126" -> "1000122"  [label="DDG: pp"];
"1000141" -> "1000137"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000137" -> "1000141"  [label="CFG: "];
"1000141" -> "1000137"  [label="DDG: ip"];
"1000290" -> "1000289"  [label="AST: "];
"1000290" -> "1000298"  [label="CFG: "];
"1000298" -> "1000290"  [label="AST: "];
"1000312" -> "1000290"  [label="CFG: "];
"1000289" -> "1000290"  [label="CFG: "];
"1000290" -> "1000388"  [label="DDG: transform_info[i].valid_chunks == 0"];
"1000290" -> "1000388"  [label="DDG: (transform_info[i].valid_chunks & chunks) != 0"];
"1000290" -> "1000289"  [label="DDG: transform_info[i].valid_chunks == 0"];
"1000290" -> "1000289"  [label="DDG: (transform_info[i].valid_chunks & chunks) != 0"];
"1000298" -> "1000290"  [label="DDG: transform_info[i].valid_chunks & chunks"];
"1000298" -> "1000290"  [label="DDG: 0"];
"1000289" -> "1000288"  [label="AST: "];
"1000289" -> "1000307"  [label="CFG: "];
"1000307" -> "1000289"  [label="AST: "];
"1000351" -> "1000289"  [label="CFG: "];
"1000359" -> "1000289"  [label="CFG: "];
"1000289" -> "1000388"  [label="DDG: transform_info[i].valid_chunks == 0 ||\n                (transform_info[i].valid_chunks & chunks) != 0"];
"1000289" -> "1000388"  [label="DDG: (transform_info[i].color_mask_required & ct) == \n                transform_info[i].color_mask_required &&\n             (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0"];
"1000289" -> "1000388"  [label="DDG: (transform_info[i].valid_chunks == 0 ||\n                (transform_info[i].valid_chunks & chunks) != 0) &&\n            (transform_info[i].color_mask_required & ct) == \n                transform_info[i].color_mask_required &&\n             (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0"];
"1000307" -> "1000289"  [label="DDG: (transform_info[i].color_mask_required & ct) == \n                transform_info[i].color_mask_required"];
"1000307" -> "1000289"  [label="DDG: (transform_info[i].color_mask_absent & ct) == 0 &&\n             (transform_info[i].bit_depths & bd) != 0 &&\n (transform_info[i].when & TRANSFORM_R) != 0"];
"1000298" -> "1000306"  [label="CFG: "];
"1000306" -> "1000298"  [label="AST: "];
"1000298" -> "1000388"  [label="DDG: transform_info[i].valid_chunks & chunks"];
}
