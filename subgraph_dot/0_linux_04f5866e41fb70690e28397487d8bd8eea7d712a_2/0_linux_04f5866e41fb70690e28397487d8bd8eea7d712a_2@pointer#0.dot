digraph "0_linux_04f5866e41fb70690e28397487d8bd8eea7d712a_2@pointer" {
"1000497" [label="(Call,vma->vm_flags & ~vm_flags)"];
"1000454" [label="(Call,vma->vm_flags & VM_MAYWRITE)"];
"1000546" [label="(Call,vma->vm_flags = new_flags)"];
"1000494" [label="(Call,new_flags = (vma->vm_flags & ~vm_flags) | vm_flags)"];
"1000496" [label="(Call,(vma->vm_flags & ~vm_flags) | vm_flags)"];
"1000497" [label="(Call,vma->vm_flags & ~vm_flags)"];
"1000469" [label="(Call,vma->vm_flags & vm_flags)"];
"1000184" [label="(Call,vm_flags |= VM_UFFD_MISSING)"];
"1000175" [label="(Call,vm_flags = 0)"];
"1000468" [label="(Call,(vma->vm_flags & vm_flags) == vm_flags)"];
"1000350" [label="(Call,cur->vm_flags & VM_MAYWRITE)"];
"1000327" [label="(Call,cur->vm_flags & (VM_UFFD_MISSING | VM_UFFD_WP))"];
"1000331" [label="(Call,VM_UFFD_MISSING | VM_UFFD_WP)"];
"1000453" [label="(Call,!(vma->vm_flags & VM_MAYWRITE))"];
"1000452" [label="(Call,WARN_ON(!(vma->vm_flags & VM_MAYWRITE)))"];
"1000460" [label="(Call,vma->vm_userfaultfd_ctx.ctx == ctx &&\n\t\t    (vma->vm_flags & vm_flags) == vm_flags)"];
"1000190" [label="(Identifier,uffdio_register)"];
"1000496" [label="(Call,(vma->vm_flags & ~vm_flags) | vm_flags)"];
"1000194" [label="(Call,vm_flags |= VM_UFFD_WP)"];
"1000177" [label="(Literal,0)"];
"1000452" [label="(Call,WARN_ON(!(vma->vm_flags & VM_MAYWRITE)))"];
"1000464" [label="(Identifier,vma)"];
"1000455" [label="(Call,vma->vm_flags)"];
"1000461" [label="(Call,vma->vm_userfaultfd_ctx.ctx == ctx)"];
"1000469" [label="(Call,vma->vm_flags & vm_flags)"];
"1000454" [label="(Call,vma->vm_flags & VM_MAYWRITE)"];
"1000186" [label="(Identifier,VM_UFFD_MISSING)"];
"1000184" [label="(Call,vm_flags |= VM_UFFD_MISSING)"];
"1000608" [label="(MethodReturn,static int)"];
"1000458" [label="(Identifier,VM_MAYWRITE)"];
"1000115" [label="(Block,)"];
"1000354" [label="(Identifier,VM_MAYWRITE)"];
"1000333" [label="(Identifier,VM_UFFD_WP)"];
"1000453" [label="(Call,!(vma->vm_flags & VM_MAYWRITE))"];
"1000505" [label="(Identifier,prev)"];
"1000327" [label="(Call,cur->vm_flags & (VM_UFFD_MISSING | VM_UFFD_WP))"];
"1000547" [label="(Call,vma->vm_flags)"];
"1000550" [label="(Identifier,new_flags)"];
"1000554" [label="(Identifier,vma)"];
"1000178" [label="(ControlStructure,if (uffdio_register.mode & UFFDIO_REGISTER_MODE_MISSING))"];
"1000475" [label="(ControlStructure,goto skip;)"];
"1000468" [label="(Call,(vma->vm_flags & vm_flags) == vm_flags)"];
"1000498" [label="(Call,vma->vm_flags)"];
"1000501" [label="(Identifier,~vm_flags)"];
"1000328" [label="(Call,cur->vm_flags)"];
"1000176" [label="(Identifier,vm_flags)"];
"1000546" [label="(Call,vma->vm_flags = new_flags)"];
"1000351" [label="(Call,cur->vm_flags)"];
"1000432" [label="(Block,)"];
"1000332" [label="(Identifier,VM_UFFD_MISSING)"];
"1000494" [label="(Call,new_flags = (vma->vm_flags & ~vm_flags) | vm_flags)"];
"1000473" [label="(Identifier,vm_flags)"];
"1000326" [label="(Call,!(cur->vm_flags & (VM_UFFD_MISSING | VM_UFFD_WP)))"];
"1000175" [label="(Call,vm_flags = 0)"];
"1000331" [label="(Call,VM_UFFD_MISSING | VM_UFFD_WP)"];
"1000497" [label="(Call,vma->vm_flags & ~vm_flags)"];
"1000502" [label="(Identifier,vm_flags)"];
"1000349" [label="(Call,!(cur->vm_flags & VM_MAYWRITE))"];
"1000479" [label="(Identifier,vma)"];
"1000350" [label="(Call,cur->vm_flags & VM_MAYWRITE)"];
"1000495" [label="(Identifier,new_flags)"];
"1000470" [label="(Call,vma->vm_flags)"];
"1000474" [label="(Identifier,vm_flags)"];
"1000181" [label="(Identifier,uffdio_register)"];
"1000185" [label="(Identifier,vm_flags)"];
"1000459" [label="(ControlStructure,if (vma->vm_userfaultfd_ctx.ctx == ctx &&\n\t\t    (vma->vm_flags & vm_flags) == vm_flags))"];
"1000460" [label="(Call,vma->vm_userfaultfd_ctx.ctx == ctx &&\n\t\t    (vma->vm_flags & vm_flags) == vm_flags)"];
"1000497" -> "1000496"  [label="AST: "];
"1000497" -> "1000501"  [label="CFG: "];
"1000498" -> "1000497"  [label="AST: "];
"1000501" -> "1000497"  [label="AST: "];
"1000502" -> "1000497"  [label="CFG: "];
"1000497" -> "1000608"  [label="DDG: vma->vm_flags"];
"1000497" -> "1000608"  [label="DDG: ~vm_flags"];
"1000497" -> "1000496"  [label="DDG: vma->vm_flags"];
"1000497" -> "1000496"  [label="DDG: ~vm_flags"];
"1000454" -> "1000497"  [label="DDG: vma->vm_flags"];
"1000469" -> "1000497"  [label="DDG: vma->vm_flags"];
"1000454" -> "1000453"  [label="AST: "];
"1000454" -> "1000458"  [label="CFG: "];
"1000455" -> "1000454"  [label="AST: "];
"1000458" -> "1000454"  [label="AST: "];
"1000453" -> "1000454"  [label="CFG: "];
"1000454" -> "1000608"  [label="DDG: vma->vm_flags"];
"1000454" -> "1000608"  [label="DDG: VM_MAYWRITE"];
"1000454" -> "1000453"  [label="DDG: vma->vm_flags"];
"1000454" -> "1000453"  [label="DDG: VM_MAYWRITE"];
"1000546" -> "1000454"  [label="DDG: vma->vm_flags"];
"1000469" -> "1000454"  [label="DDG: vma->vm_flags"];
"1000350" -> "1000454"  [label="DDG: VM_MAYWRITE"];
"1000454" -> "1000469"  [label="DDG: vma->vm_flags"];
"1000546" -> "1000432"  [label="AST: "];
"1000546" -> "1000550"  [label="CFG: "];
"1000547" -> "1000546"  [label="AST: "];
"1000550" -> "1000546"  [label="AST: "];
"1000554" -> "1000546"  [label="CFG: "];
"1000546" -> "1000608"  [label="DDG: new_flags"];
"1000546" -> "1000608"  [label="DDG: vma->vm_flags"];
"1000494" -> "1000546"  [label="DDG: new_flags"];
"1000494" -> "1000432"  [label="AST: "];
"1000494" -> "1000496"  [label="CFG: "];
"1000495" -> "1000494"  [label="AST: "];
"1000496" -> "1000494"  [label="AST: "];
"1000505" -> "1000494"  [label="CFG: "];
"1000494" -> "1000608"  [label="DDG: (vma->vm_flags & ~vm_flags) | vm_flags"];
"1000494" -> "1000608"  [label="DDG: new_flags"];
"1000496" -> "1000494"  [label="DDG: vma->vm_flags & ~vm_flags"];
"1000496" -> "1000494"  [label="DDG: vm_flags"];
"1000496" -> "1000502"  [label="CFG: "];
"1000502" -> "1000496"  [label="AST: "];
"1000496" -> "1000608"  [label="DDG: vma->vm_flags & ~vm_flags"];
"1000496" -> "1000608"  [label="DDG: vm_flags"];
"1000496" -> "1000469"  [label="DDG: vm_flags"];
"1000184" -> "1000496"  [label="DDG: vm_flags"];
"1000468" -> "1000496"  [label="DDG: vm_flags"];
"1000175" -> "1000496"  [label="DDG: vm_flags"];
"1000469" -> "1000468"  [label="AST: "];
"1000469" -> "1000473"  [label="CFG: "];
"1000470" -> "1000469"  [label="AST: "];
"1000473" -> "1000469"  [label="AST: "];
"1000474" -> "1000469"  [label="CFG: "];
"1000469" -> "1000608"  [label="DDG: vma->vm_flags"];
"1000469" -> "1000468"  [label="DDG: vma->vm_flags"];
"1000469" -> "1000468"  [label="DDG: vm_flags"];
"1000184" -> "1000469"  [label="DDG: vm_flags"];
"1000468" -> "1000469"  [label="DDG: vm_flags"];
"1000175" -> "1000469"  [label="DDG: vm_flags"];
"1000184" -> "1000178"  [label="AST: "];
"1000184" -> "1000186"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000186" -> "1000184"  [label="AST: "];
"1000190" -> "1000184"  [label="CFG: "];
"1000184" -> "1000608"  [label="DDG: VM_UFFD_MISSING"];
"1000184" -> "1000608"  [label="DDG: vm_flags"];
"1000184" -> "1000608"  [label="DDG: vm_flags |= VM_UFFD_MISSING"];
"1000175" -> "1000184"  [label="DDG: vm_flags"];
"1000184" -> "1000194"  [label="DDG: vm_flags"];
"1000184" -> "1000331"  [label="DDG: VM_UFFD_MISSING"];
"1000175" -> "1000115"  [label="AST: "];
"1000175" -> "1000177"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000177" -> "1000175"  [label="AST: "];
"1000181" -> "1000175"  [label="CFG: "];
"1000175" -> "1000608"  [label="DDG: vm_flags"];
"1000175" -> "1000194"  [label="DDG: vm_flags"];
"1000468" -> "1000460"  [label="AST: "];
"1000468" -> "1000474"  [label="CFG: "];
"1000474" -> "1000468"  [label="AST: "];
"1000460" -> "1000468"  [label="CFG: "];
"1000468" -> "1000608"  [label="DDG: vm_flags"];
"1000468" -> "1000608"  [label="DDG: vma->vm_flags & vm_flags"];
"1000468" -> "1000460"  [label="DDG: vma->vm_flags & vm_flags"];
"1000468" -> "1000460"  [label="DDG: vm_flags"];
"1000350" -> "1000349"  [label="AST: "];
"1000350" -> "1000354"  [label="CFG: "];
"1000351" -> "1000350"  [label="AST: "];
"1000354" -> "1000350"  [label="AST: "];
"1000349" -> "1000350"  [label="CFG: "];
"1000350" -> "1000608"  [label="DDG: cur->vm_flags"];
"1000350" -> "1000608"  [label="DDG: VM_MAYWRITE"];
"1000350" -> "1000327"  [label="DDG: cur->vm_flags"];
"1000350" -> "1000349"  [label="DDG: cur->vm_flags"];
"1000350" -> "1000349"  [label="DDG: VM_MAYWRITE"];
"1000327" -> "1000350"  [label="DDG: cur->vm_flags"];
"1000327" -> "1000326"  [label="AST: "];
"1000327" -> "1000331"  [label="CFG: "];
"1000328" -> "1000327"  [label="AST: "];
"1000331" -> "1000327"  [label="AST: "];
"1000326" -> "1000327"  [label="CFG: "];
"1000327" -> "1000608"  [label="DDG: VM_UFFD_MISSING | VM_UFFD_WP"];
"1000327" -> "1000608"  [label="DDG: cur->vm_flags"];
"1000327" -> "1000326"  [label="DDG: cur->vm_flags"];
"1000327" -> "1000326"  [label="DDG: VM_UFFD_MISSING | VM_UFFD_WP"];
"1000331" -> "1000327"  [label="DDG: VM_UFFD_MISSING"];
"1000331" -> "1000327"  [label="DDG: VM_UFFD_WP"];
"1000331" -> "1000333"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000333" -> "1000331"  [label="AST: "];
"1000331" -> "1000608"  [label="DDG: VM_UFFD_WP"];
"1000331" -> "1000608"  [label="DDG: VM_UFFD_MISSING"];
"1000453" -> "1000452"  [label="AST: "];
"1000452" -> "1000453"  [label="CFG: "];
"1000453" -> "1000608"  [label="DDG: vma->vm_flags & VM_MAYWRITE"];
"1000453" -> "1000452"  [label="DDG: vma->vm_flags & VM_MAYWRITE"];
"1000452" -> "1000432"  [label="AST: "];
"1000464" -> "1000452"  [label="CFG: "];
"1000452" -> "1000608"  [label="DDG: WARN_ON(!(vma->vm_flags & VM_MAYWRITE))"];
"1000452" -> "1000608"  [label="DDG: !(vma->vm_flags & VM_MAYWRITE)"];
"1000460" -> "1000459"  [label="AST: "];
"1000460" -> "1000461"  [label="CFG: "];
"1000461" -> "1000460"  [label="AST: "];
"1000475" -> "1000460"  [label="CFG: "];
"1000479" -> "1000460"  [label="CFG: "];
"1000460" -> "1000608"  [label="DDG: vma->vm_userfaultfd_ctx.ctx == ctx"];
"1000460" -> "1000608"  [label="DDG: vma->vm_userfaultfd_ctx.ctx == ctx &&\n\t\t    (vma->vm_flags & vm_flags) == vm_flags"];
"1000460" -> "1000608"  [label="DDG: (vma->vm_flags & vm_flags) == vm_flags"];
"1000461" -> "1000460"  [label="DDG: vma->vm_userfaultfd_ctx.ctx"];
"1000461" -> "1000460"  [label="DDG: ctx"];
}
