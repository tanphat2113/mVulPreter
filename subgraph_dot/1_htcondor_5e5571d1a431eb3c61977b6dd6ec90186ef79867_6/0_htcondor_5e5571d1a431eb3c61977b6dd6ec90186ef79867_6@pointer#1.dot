digraph "0_htcondor_5e5571d1a431eb3c61977b6dd6ec90186ef79867_6@pointer" {
"1000262" [label="(Call,Shadow->holdJobAndExit(hold_reason,hold_reason_code,hold_reason_sub_code))"];
"1000259" [label="(Call,hold_reason = \"Job put on hold by remote host.\")"];
"1000256" [label="(Call,!hold_reason)"];
"1000252" [label="(Call,hold_reason = critical_error)"];
"1000224" [label="(Call,BaseShadow::log_except(critical_error))"];
"1000214" [label="(Call,critical_error = CriticalErrorBuf.Value())"];
"1000113" [label="(Call,*critical_error = NULL)"];
"1000156" [label="(Call,ad->LookupInteger(ATTR_HOLD_REASON_CODE,hold_reason_code))"];
"1000134" [label="(Call,hold_reason_code = 0)"];
"1000138" [label="(Call,hold_reason_sub_code = 0)"];
"1000163" [label="(Call,ad->LookupInteger(ATTR_HOLD_REASON_SUBCODE,hold_reason_sub_code))"];
"1000155" [label="(ControlStructure,if(ad->LookupInteger(ATTR_HOLD_REASON_CODE,hold_reason_code)))"];
"1000143" [label="(Identifier,event)"];
"1000161" [label="(Identifier,put_job_on_hold)"];
"1000263" [label="(Identifier,hold_reason)"];
"1000251" [label="(Block,)"];
"1000119" [label="(Identifier,event_already_logged)"];
"1000159" [label="(Block,)"];
"1000216" [label="(Call,CriticalErrorBuf.Value())"];
"1000136" [label="(Literal,0)"];
"1000139" [label="(Identifier,hold_reason_sub_code)"];
"1000267" [label="(Identifier,critical_error)"];
"1000254" [label="(Identifier,critical_error)"];
"1000140" [label="(Literal,0)"];
"1000253" [label="(Identifier,hold_reason)"];
"1000134" [label="(Call,hold_reason_code = 0)"];
"1000260" [label="(Identifier,hold_reason)"];
"1000102" [label="(Block,)"];
"1000274" [label="(Call,EXCEPT(critical_error))"];
"1000280" [label="(MethodReturn,RET)"];
"1000221" [label="(Call,hold_reason = critical_error)"];
"1000256" [label="(Call,!hold_reason)"];
"1000258" [label="(Block,)"];
"1000135" [label="(Identifier,hold_reason_code)"];
"1000215" [label="(Identifier,critical_error)"];
"1000261" [label="(Literal,\"Job put on hold by remote host.\")"];
"1000114" [label="(Identifier,critical_error)"];
"1000165" [label="(Identifier,hold_reason_sub_code)"];
"1000156" [label="(Call,ad->LookupInteger(ATTR_HOLD_REASON_CODE,hold_reason_code))"];
"1000157" [label="(Identifier,ATTR_HOLD_REASON_CODE)"];
"1000257" [label="(Identifier,hold_reason)"];
"1000225" [label="(Identifier,critical_error)"];
"1000209" [label="(Block,)"];
"1000167" [label="(Identifier,ATTR_HOLD_REASON)"];
"1000179" [label="(Identifier,event)"];
"1000262" [label="(Call,Shadow->holdJobAndExit(hold_reason,hold_reason_code,hold_reason_sub_code))"];
"1000138" [label="(Call,hold_reason_sub_code = 0)"];
"1000265" [label="(Identifier,hold_reason_sub_code)"];
"1000113" [label="(Call,*critical_error = NULL)"];
"1000264" [label="(Identifier,hold_reason_code)"];
"1000115" [label="(Identifier,NULL)"];
"1000158" [label="(Identifier,hold_reason_code)"];
"1000259" [label="(Call,hold_reason = \"Job put on hold by remote host.\")"];
"1000224" [label="(Call,BaseShadow::log_except(critical_error))"];
"1000219" [label="(Identifier,hold_reason)"];
"1000163" [label="(Call,ad->LookupInteger(ATTR_HOLD_REASON_SUBCODE,hold_reason_sub_code))"];
"1000252" [label="(Call,hold_reason = critical_error)"];
"1000214" [label="(Call,critical_error = CriticalErrorBuf.Value())"];
"1000164" [label="(Identifier,ATTR_HOLD_REASON_SUBCODE)"];
"1000227" [label="(Identifier,event_already_logged)"];
"1000255" [label="(ControlStructure,if(!hold_reason))"];
"1000262" -> "1000251"  [label="AST: "];
"1000262" -> "1000265"  [label="CFG: "];
"1000263" -> "1000262"  [label="AST: "];
"1000264" -> "1000262"  [label="AST: "];
"1000265" -> "1000262"  [label="AST: "];
"1000267" -> "1000262"  [label="CFG: "];
"1000262" -> "1000280"  [label="DDG: hold_reason_sub_code"];
"1000262" -> "1000280"  [label="DDG: hold_reason"];
"1000262" -> "1000280"  [label="DDG: hold_reason_code"];
"1000262" -> "1000280"  [label="DDG: Shadow->holdJobAndExit(hold_reason,hold_reason_code,hold_reason_sub_code)"];
"1000259" -> "1000262"  [label="DDG: hold_reason"];
"1000256" -> "1000262"  [label="DDG: hold_reason"];
"1000156" -> "1000262"  [label="DDG: hold_reason_code"];
"1000138" -> "1000262"  [label="DDG: hold_reason_sub_code"];
"1000163" -> "1000262"  [label="DDG: hold_reason_sub_code"];
"1000259" -> "1000258"  [label="AST: "];
"1000259" -> "1000261"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000259"  [label="AST: "];
"1000263" -> "1000259"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000256" -> "1000257"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000260" -> "1000256"  [label="CFG: "];
"1000263" -> "1000256"  [label="CFG: "];
"1000256" -> "1000280"  [label="DDG: !hold_reason"];
"1000252" -> "1000256"  [label="DDG: hold_reason"];
"1000252" -> "1000251"  [label="AST: "];
"1000252" -> "1000254"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000254" -> "1000252"  [label="AST: "];
"1000257" -> "1000252"  [label="CFG: "];
"1000252" -> "1000280"  [label="DDG: critical_error"];
"1000224" -> "1000252"  [label="DDG: critical_error"];
"1000113" -> "1000252"  [label="DDG: critical_error"];
"1000224" -> "1000209"  [label="AST: "];
"1000224" -> "1000225"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000227" -> "1000224"  [label="CFG: "];
"1000224" -> "1000280"  [label="DDG: critical_error"];
"1000224" -> "1000280"  [label="DDG: BaseShadow::log_except(critical_error)"];
"1000214" -> "1000224"  [label="DDG: critical_error"];
"1000224" -> "1000274"  [label="DDG: critical_error"];
"1000214" -> "1000209"  [label="AST: "];
"1000214" -> "1000216"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000216" -> "1000214"  [label="AST: "];
"1000219" -> "1000214"  [label="CFG: "];
"1000214" -> "1000280"  [label="DDG: CriticalErrorBuf.Value()"];
"1000214" -> "1000221"  [label="DDG: critical_error"];
"1000113" -> "1000102"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000119" -> "1000113"  [label="CFG: "];
"1000113" -> "1000280"  [label="DDG: critical_error"];
"1000113" -> "1000274"  [label="DDG: critical_error"];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000158"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000158" -> "1000156"  [label="AST: "];
"1000161" -> "1000156"  [label="CFG: "];
"1000179" -> "1000156"  [label="CFG: "];
"1000156" -> "1000280"  [label="DDG: ATTR_HOLD_REASON_CODE"];
"1000156" -> "1000280"  [label="DDG: hold_reason_code"];
"1000156" -> "1000280"  [label="DDG: ad->LookupInteger(ATTR_HOLD_REASON_CODE,hold_reason_code)"];
"1000134" -> "1000156"  [label="DDG: hold_reason_code"];
"1000134" -> "1000102"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000139" -> "1000134"  [label="CFG: "];
"1000134" -> "1000280"  [label="DDG: hold_reason_code"];
"1000138" -> "1000102"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000143" -> "1000138"  [label="CFG: "];
"1000138" -> "1000280"  [label="DDG: hold_reason_sub_code"];
"1000138" -> "1000163"  [label="DDG: hold_reason_sub_code"];
"1000163" -> "1000159"  [label="AST: "];
"1000163" -> "1000165"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000165" -> "1000163"  [label="AST: "];
"1000167" -> "1000163"  [label="CFG: "];
"1000163" -> "1000280"  [label="DDG: ATTR_HOLD_REASON_SUBCODE"];
"1000163" -> "1000280"  [label="DDG: ad->LookupInteger(ATTR_HOLD_REASON_SUBCODE,hold_reason_sub_code)"];
"1000163" -> "1000280"  [label="DDG: hold_reason_sub_code"];
}
