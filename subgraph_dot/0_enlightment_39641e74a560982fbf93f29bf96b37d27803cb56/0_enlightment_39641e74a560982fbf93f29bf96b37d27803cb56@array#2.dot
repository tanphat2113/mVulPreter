digraph "0_enlightment_39641e74a560982fbf93f29bf96b37d27803cb56@array" {
"1000313" [label="(Call,j += intjump[i])"];
"1000119" [label="(Call,intjump[] = { 8, 8, 4, 2 })"];
"1000310" [label="(Call,j < h)"];
"1000305" [label="(Call,j = intoffset[i])"];
"1000116" [label="(Call,intoffset[] = { 0, 4, 2, 1 })"];
"1000313" [label="(Call,j += intjump[i])"];
"1000266" [label="(Call,i < h)"];
"1000263" [label="(Call,i = 0)"];
"1000269" [label="(Call,i++)"];
"1000254" [label="(Call,calloc(h, sizeof(GifRowType *)))"];
"1000248" [label="(Call,IMAGE_DIMENSIONS_OK(w, h))"];
"1000232" [label="(Call,w = gif->Image.Width)"];
"1000239" [label="(Call,h = gif->Image.Height)"];
"1000420" [label="(Call,im->h = h)"];
"1000476" [label="(Call,w * h)"];
"1000473" [label="(Call,sizeof(DATA32) * w * h)"];
"1000472" [label="(Call,malloc(sizeof(DATA32) * w * h))"];
"1000470" [label="(Call,(DATA32 *) malloc(sizeof(DATA32) * w * h))"];
"1000466" [label="(Call,im->data = (DATA32 *) malloc(sizeof(DATA32) * w * h))"];
"1000480" [label="(Call,!im->data)"];
"1000489" [label="(Call,memset(im->data, 0, sizeof(DATA32) * w * h))"];
"1000504" [label="(Call,ptr = im->data)"];
"1000529" [label="(Call,ptr++)"];
"1000497" [label="(Call,w * h)"];
"1000494" [label="(Call,sizeof(DATA32) * w * h)"];
"1000514" [label="(Call,(float)w)"];
"1000513" [label="(Call,((float)w) * h)"];
"1000511" [label="(Call,100.0 / (((float)w) * h))"];
"1000509" [label="(Call,per_inc = 100.0 / (((float)w) * h))"];
"1000600" [label="(Call,per += per_inc)"];
"1000608" [label="(Call,(int)per)"];
"1000607" [label="(Call,((int)per) != last_per)"];
"1000606" [label="(Call,(((int)per) != last_per)\n                      && (((int)per) % progress_granularity == 0))"];
"1000604" [label="(Call,progress && (((int)per) != last_per)\n                      && (((int)per) % progress_granularity == 0))"];
"1000614" [label="(Call,(int)per)"];
"1000613" [label="(Call,((int)per) % progress_granularity)"];
"1000612" [label="(Call,((int)per) % progress_granularity == 0)"];
"1000622" [label="(Call,(int)per)"];
"1000620" [label="(Call,last_per = (int)per)"];
"1000629" [label="(Call,(int)per)"];
"1000627" [label="(Call,progress(im, (int)per, 0, last_y, w, i))"];
"1000626" [label="(Call,!(progress(im, (int)per, 0, last_y, w, i)))"];
"1000641" [label="(Call,last_y = i)"];
"1000522" [label="(Call,i < h)"];
"1000525" [label="(Call,i++)"];
"1000441" [label="(Call,immediate_load || progress)"];
"1000530" [label="(Identifier,ptr)"];
"1000487" [label="(Identifier,cmap)"];
"1000481" [label="(Call,im->data)"];
"1000264" [label="(Identifier,i)"];
"1000119" [label="(Call,intjump[] = { 8, 8, 4, 2 })"];
"1000484" [label="(ControlStructure,goto quit;)"];
"1000520" [label="(Identifier,i)"];
"1000631" [label="(Identifier,per)"];
"1000466" [label="(Call,im->data = (DATA32 *) malloc(sizeof(DATA32) * w * h))"];
"1000524" [label="(Identifier,h)"];
"1000298" [label="(Call,i < 4)"];
"1000608" [label="(Call,(int)per)"];
"1000263" [label="(Call,i = 0)"];
"1000611" [label="(Identifier,last_per)"];
"1000514" [label="(Call,(float)w)"];
"1000522" [label="(Call,i < h)"];
"1000270" [label="(Identifier,i)"];
"1000315" [label="(Call,intjump[i])"];
"1000627" [label="(Call,progress(im, (int)per, 0, last_y, w, i))"];
"1000302" [label="(Identifier,i)"];
"1000497" [label="(Call,w * h)"];
"1000607" [label="(Call,((int)per) != last_per)"];
"1000612" [label="(Call,((int)per) % progress_granularity == 0)"];
"1000444" [label="(Block,)"];
"1000493" [label="(Literal,0)"];
"1000331" [label="(Call,i < h)"];
"1000501" [label="(Identifier,rc)"];
"1000112" [label="(MethodParameterIn,char progress_granularity)"];
"1000489" [label="(Call,memset(im->data, 0, sizeof(DATA32) * w * h))"];
"1000250" [label="(Identifier,h)"];
"1000643" [label="(Identifier,i)"];
"1000614" [label="(Call,(int)per)"];
"1000290" [label="(Identifier,gif)"];
"1000148" [label="(Call,last_per = 0)"];
"1000635" [label="(Identifier,i)"];
"1000601" [label="(Identifier,per)"];
"1000306" [label="(Identifier,j)"];
"1000604" [label="(Call,progress && (((int)per) != last_per)\n                      && (((int)per) % progress_granularity == 0))"];
"1000633" [label="(Identifier,last_y)"];
"1000529" [label="(Call,ptr++)"];
"1000269" [label="(Call,i++)"];
"1000311" [label="(Identifier,j)"];
"1000477" [label="(Identifier,w)"];
"1000467" [label="(Call,im->data)"];
"1000120" [label="(Identifier,intjump)"];
"1000518" [label="(ControlStructure,for (i = 0; i < h; i++))"];
"1000312" [label="(Identifier,h)"];
"1000480" [label="(Call,!im->data)"];
"1000110" [label="(MethodParameterIn,ImlibImage * im)"];
"1000641" [label="(Call,last_y = i)"];
"1000499" [label="(Identifier,h)"];
"1000528" [label="(Call,*ptr++)"];
"1000248" [label="(Call,IMAGE_DIMENSIONS_OK(w, h))"];
"1000136" [label="(Identifier,w)"];
"1000116" [label="(Call,intoffset[] = { 0, 4, 2, 1 })"];
"1000472" [label="(Call,malloc(sizeof(DATA32) * w * h))"];
"1000428" [label="(Identifier,im)"];
"1000626" [label="(Call,!(progress(im, (int)per, 0, last_y, w, i)))"];
"1000513" [label="(Call,((float)w) * h)"];
"1000476" [label="(Call,w * h)"];
"1000305" [label="(Call,j = intoffset[i])"];
"1000642" [label="(Identifier,last_y)"];
"1000314" [label="(Identifier,j)"];
"1000255" [label="(Identifier,h)"];
"1000267" [label="(Identifier,i)"];
"1000274" [label="(Identifier,rows)"];
"1000232" [label="(Call,w = gif->Image.Width)"];
"1000111" [label="(MethodParameterIn,ImlibProgressFunction progress)"];
"1000512" [label="(Literal,100.0)"];
"1000310" [label="(Call,j < h)"];
"1000473" [label="(Call,sizeof(DATA32) * w * h)"];
"1000254" [label="(Call,calloc(h, sizeof(GifRowType *)))"];
"1000494" [label="(Call,sizeof(DATA32) * w * h)"];
"1000526" [label="(Identifier,i)"];
"1000519" [label="(Call,i = 0)"];
"1000320" [label="(Identifier,gif)"];
"1000307" [label="(Call,intoffset[i])"];
"1000266" [label="(Call,i < h)"];
"1000605" [label="(Identifier,progress)"];
"1000616" [label="(Identifier,per)"];
"1000629" [label="(Call,(int)per)"];
"1000420" [label="(Call,im->h = h)"];
"1000504" [label="(Call,ptr = im->data)"];
"1000606" [label="(Call,(((int)per) != last_per)\n                      && (((int)per) % progress_granularity == 0))"];
"1000618" [label="(Literal,0)"];
"1000247" [label="(Call,!IMAGE_DIMENSIONS_OK(w, h))"];
"1000313" [label="(Call,j += intjump[i])"];
"1000240" [label="(Identifier,h)"];
"1000525" [label="(Call,i++)"];
"1000117" [label="(Identifier,intoffset)"];
"1000617" [label="(Identifier,progress_granularity)"];
"1000638" [label="(Identifier,rc)"];
"1000252" [label="(Call,rows = calloc(h, sizeof(GifRowType *)))"];
"1000517" [label="(Identifier,h)"];
"1000470" [label="(Call,(DATA32 *) malloc(sizeof(DATA32) * w * h))"];
"1000222" [label="(Block,)"];
"1000474" [label="(Call,sizeof(DATA32))"];
"1000506" [label="(Call,im->data)"];
"1000319" [label="(Call,DGifGetLine(gif, rows[j], w))"];
"1000152" [label="(Call,last_y = 0)"];
"1000628" [label="(Identifier,im)"];
"1000610" [label="(Identifier,per)"];
"1000644" [label="(MethodReturn,RET)"];
"1000239" [label="(Call,h = gif->Image.Height)"];
"1000622" [label="(Call,(int)per)"];
"1000624" [label="(Identifier,per)"];
"1000505" [label="(Identifier,ptr)"];
"1000424" [label="(Identifier,h)"];
"1000603" [label="(ControlStructure,if (progress && (((int)per) != last_per)\n                      && (((int)per) % progress_granularity == 0)))"];
"1000498" [label="(Identifier,w)"];
"1000139" [label="(Call,h = 0)"];
"1000478" [label="(Identifier,h)"];
"1000482" [label="(Identifier,im)"];
"1000510" [label="(Identifier,per_inc)"];
"1000114" [label="(Block,)"];
"1000265" [label="(Literal,0)"];
"1000495" [label="(Call,sizeof(DATA32))"];
"1000516" [label="(Identifier,w)"];
"1000634" [label="(Identifier,w)"];
"1000509" [label="(Call,per_inc = 100.0 / (((float)w) * h))"];
"1000268" [label="(Identifier,h)"];
"1000479" [label="(ControlStructure,if (!im->data))"];
"1000619" [label="(Block,)"];
"1000613" [label="(Call,((int)per) % progress_granularity)"];
"1000488" [label="(Block,)"];
"1000511" [label="(Call,100.0 / (((float)w) * h))"];
"1000262" [label="(ControlStructure,for (i = 0; i < h; i++))"];
"1000143" [label="(Call,per = 0.0)"];
"1000256" [label="(Call,sizeof(GifRowType *))"];
"1000620" [label="(Call,last_per = (int)per)"];
"1000602" [label="(Identifier,per_inc)"];
"1000241" [label="(Call,gif->Image.Height)"];
"1000135" [label="(Call,w = 0)"];
"1000233" [label="(Identifier,w)"];
"1000632" [label="(Literal,0)"];
"1000490" [label="(Call,im->data)"];
"1000621" [label="(Identifier,last_per)"];
"1000304" [label="(ControlStructure,for (j = intoffset[i]; j < h; j += intjump[i]))"];
"1000415" [label="(Call,im->w = w)"];
"1000421" [label="(Call,im->h)"];
"1000523" [label="(Identifier,i)"];
"1000625" [label="(ControlStructure,if (!(progress(im, (int)per, 0, last_y, w, i))))"];
"1000234" [label="(Call,gif->Image.Width)"];
"1000600" [label="(Call,per += per_inc)"];
"1000337" [label="(Call,DGifGetLine(gif, rows[i], w))"];
"1000249" [label="(Identifier,w)"];
"1000277" [label="(Call,w * sizeof(GifPixelType))"];
"1000313" -> "1000304"  [label="AST: "];
"1000313" -> "1000315"  [label="CFG: "];
"1000314" -> "1000313"  [label="AST: "];
"1000315" -> "1000313"  [label="AST: "];
"1000311" -> "1000313"  [label="CFG: "];
"1000313" -> "1000644"  [label="DDG: intjump[i]"];
"1000313" -> "1000310"  [label="DDG: j"];
"1000119" -> "1000313"  [label="DDG: intjump"];
"1000310" -> "1000313"  [label="DDG: j"];
"1000119" -> "1000114"  [label="AST: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000136" -> "1000119"  [label="CFG: "];
"1000119" -> "1000644"  [label="DDG: intjump"];
"1000310" -> "1000304"  [label="AST: "];
"1000310" -> "1000312"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000312" -> "1000310"  [label="AST: "];
"1000320" -> "1000310"  [label="CFG: "];
"1000302" -> "1000310"  [label="CFG: "];
"1000310" -> "1000644"  [label="DDG: j < h"];
"1000310" -> "1000644"  [label="DDG: j"];
"1000305" -> "1000310"  [label="DDG: j"];
"1000266" -> "1000310"  [label="DDG: h"];
"1000310" -> "1000420"  [label="DDG: h"];
"1000310" -> "1000476"  [label="DDG: h"];
"1000305" -> "1000304"  [label="AST: "];
"1000305" -> "1000307"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000307" -> "1000305"  [label="AST: "];
"1000311" -> "1000305"  [label="CFG: "];
"1000305" -> "1000644"  [label="DDG: intoffset[i]"];
"1000116" -> "1000305"  [label="DDG: intoffset"];
"1000116" -> "1000114"  [label="AST: "];
"1000116" -> "1000117"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000120" -> "1000116"  [label="CFG: "];
"1000116" -> "1000644"  [label="DDG: intoffset"];
"1000266" -> "1000262"  [label="AST: "];
"1000266" -> "1000268"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="AST: "];
"1000274" -> "1000266"  [label="CFG: "];
"1000290" -> "1000266"  [label="CFG: "];
"1000266" -> "1000644"  [label="DDG: i < h"];
"1000263" -> "1000266"  [label="DDG: i"];
"1000269" -> "1000266"  [label="DDG: i"];
"1000254" -> "1000266"  [label="DDG: h"];
"1000266" -> "1000269"  [label="DDG: i"];
"1000266" -> "1000331"  [label="DDG: h"];
"1000266" -> "1000420"  [label="DDG: h"];
"1000266" -> "1000476"  [label="DDG: h"];
"1000263" -> "1000262"  [label="AST: "];
"1000263" -> "1000265"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000263"  [label="AST: "];
"1000267" -> "1000263"  [label="CFG: "];
"1000269" -> "1000262"  [label="AST: "];
"1000269" -> "1000270"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000267" -> "1000269"  [label="CFG: "];
"1000254" -> "1000252"  [label="AST: "];
"1000254" -> "1000256"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000256" -> "1000254"  [label="AST: "];
"1000252" -> "1000254"  [label="CFG: "];
"1000254" -> "1000252"  [label="DDG: h"];
"1000248" -> "1000254"  [label="DDG: h"];
"1000248" -> "1000247"  [label="AST: "];
"1000248" -> "1000250"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="AST: "];
"1000247" -> "1000248"  [label="CFG: "];
"1000248" -> "1000247"  [label="DDG: w"];
"1000248" -> "1000247"  [label="DDG: h"];
"1000232" -> "1000248"  [label="DDG: w"];
"1000239" -> "1000248"  [label="DDG: h"];
"1000248" -> "1000277"  [label="DDG: w"];
"1000248" -> "1000319"  [label="DDG: w"];
"1000248" -> "1000337"  [label="DDG: w"];
"1000248" -> "1000415"  [label="DDG: w"];
"1000248" -> "1000476"  [label="DDG: w"];
"1000248" -> "1000627"  [label="DDG: w"];
"1000232" -> "1000222"  [label="AST: "];
"1000232" -> "1000234"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000234" -> "1000232"  [label="AST: "];
"1000240" -> "1000232"  [label="CFG: "];
"1000232" -> "1000644"  [label="DDG: gif->Image.Width"];
"1000239" -> "1000222"  [label="AST: "];
"1000239" -> "1000241"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="AST: "];
"1000249" -> "1000239"  [label="CFG: "];
"1000239" -> "1000644"  [label="DDG: gif->Image.Height"];
"1000420" -> "1000114"  [label="AST: "];
"1000420" -> "1000424"  [label="CFG: "];
"1000421" -> "1000420"  [label="AST: "];
"1000424" -> "1000420"  [label="AST: "];
"1000428" -> "1000420"  [label="CFG: "];
"1000420" -> "1000644"  [label="DDG: h"];
"1000420" -> "1000644"  [label="DDG: im->h"];
"1000331" -> "1000420"  [label="DDG: h"];
"1000139" -> "1000420"  [label="DDG: h"];
"1000476" -> "1000473"  [label="AST: "];
"1000476" -> "1000478"  [label="CFG: "];
"1000477" -> "1000476"  [label="AST: "];
"1000478" -> "1000476"  [label="AST: "];
"1000473" -> "1000476"  [label="CFG: "];
"1000476" -> "1000473"  [label="DDG: w"];
"1000476" -> "1000473"  [label="DDG: h"];
"1000319" -> "1000476"  [label="DDG: w"];
"1000135" -> "1000476"  [label="DDG: w"];
"1000337" -> "1000476"  [label="DDG: w"];
"1000277" -> "1000476"  [label="DDG: w"];
"1000331" -> "1000476"  [label="DDG: h"];
"1000139" -> "1000476"  [label="DDG: h"];
"1000476" -> "1000497"  [label="DDG: w"];
"1000476" -> "1000497"  [label="DDG: h"];
"1000476" -> "1000514"  [label="DDG: w"];
"1000476" -> "1000513"  [label="DDG: h"];
"1000473" -> "1000472"  [label="AST: "];
"1000474" -> "1000473"  [label="AST: "];
"1000472" -> "1000473"  [label="CFG: "];
"1000473" -> "1000644"  [label="DDG: w * h"];
"1000473" -> "1000472"  [label="DDG: w * h"];
"1000472" -> "1000470"  [label="AST: "];
"1000470" -> "1000472"  [label="CFG: "];
"1000472" -> "1000644"  [label="DDG: sizeof(DATA32) * w * h"];
"1000472" -> "1000470"  [label="DDG: sizeof(DATA32) * w * h"];
"1000470" -> "1000466"  [label="AST: "];
"1000471" -> "1000470"  [label="AST: "];
"1000466" -> "1000470"  [label="CFG: "];
"1000470" -> "1000644"  [label="DDG: malloc(sizeof(DATA32) * w * h)"];
"1000470" -> "1000466"  [label="DDG: malloc(sizeof(DATA32) * w * h)"];
"1000466" -> "1000444"  [label="AST: "];
"1000467" -> "1000466"  [label="AST: "];
"1000482" -> "1000466"  [label="CFG: "];
"1000466" -> "1000644"  [label="DDG: (DATA32 *) malloc(sizeof(DATA32) * w * h)"];
"1000466" -> "1000480"  [label="DDG: im->data"];
"1000480" -> "1000479"  [label="AST: "];
"1000480" -> "1000481"  [label="CFG: "];
"1000481" -> "1000480"  [label="AST: "];
"1000484" -> "1000480"  [label="CFG: "];
"1000487" -> "1000480"  [label="CFG: "];
"1000480" -> "1000644"  [label="DDG: !im->data"];
"1000480" -> "1000489"  [label="DDG: im->data"];
"1000480" -> "1000504"  [label="DDG: im->data"];
"1000489" -> "1000488"  [label="AST: "];
"1000489" -> "1000494"  [label="CFG: "];
"1000490" -> "1000489"  [label="AST: "];
"1000493" -> "1000489"  [label="AST: "];
"1000494" -> "1000489"  [label="AST: "];
"1000501" -> "1000489"  [label="CFG: "];
"1000494" -> "1000489"  [label="DDG: w * h"];
"1000504" -> "1000444"  [label="AST: "];
"1000504" -> "1000506"  [label="CFG: "];
"1000505" -> "1000504"  [label="AST: "];
"1000506" -> "1000504"  [label="AST: "];
"1000510" -> "1000504"  [label="CFG: "];
"1000504" -> "1000644"  [label="DDG: im->data"];
"1000504" -> "1000644"  [label="DDG: ptr"];
"1000504" -> "1000529"  [label="DDG: ptr"];
"1000529" -> "1000528"  [label="AST: "];
"1000529" -> "1000530"  [label="CFG: "];
"1000530" -> "1000529"  [label="AST: "];
"1000528" -> "1000529"  [label="CFG: "];
"1000529" -> "1000644"  [label="DDG: ptr"];
"1000497" -> "1000494"  [label="AST: "];
"1000497" -> "1000499"  [label="CFG: "];
"1000498" -> "1000497"  [label="AST: "];
"1000499" -> "1000497"  [label="AST: "];
"1000494" -> "1000497"  [label="CFG: "];
"1000497" -> "1000494"  [label="DDG: w"];
"1000497" -> "1000494"  [label="DDG: h"];
"1000495" -> "1000494"  [label="AST: "];
"1000514" -> "1000513"  [label="AST: "];
"1000514" -> "1000516"  [label="CFG: "];
"1000515" -> "1000514"  [label="AST: "];
"1000516" -> "1000514"  [label="AST: "];
"1000517" -> "1000514"  [label="CFG: "];
"1000514" -> "1000644"  [label="DDG: w"];
"1000514" -> "1000513"  [label="DDG: w"];
"1000514" -> "1000627"  [label="DDG: w"];
"1000513" -> "1000511"  [label="AST: "];
"1000513" -> "1000517"  [label="CFG: "];
"1000517" -> "1000513"  [label="AST: "];
"1000511" -> "1000513"  [label="CFG: "];
"1000513" -> "1000644"  [label="DDG: (float)w"];
"1000513" -> "1000511"  [label="DDG: (float)w"];
"1000513" -> "1000511"  [label="DDG: h"];
"1000513" -> "1000522"  [label="DDG: h"];
"1000511" -> "1000509"  [label="AST: "];
"1000512" -> "1000511"  [label="AST: "];
"1000509" -> "1000511"  [label="CFG: "];
"1000511" -> "1000644"  [label="DDG: ((float)w) * h"];
"1000511" -> "1000509"  [label="DDG: 100.0"];
"1000511" -> "1000509"  [label="DDG: ((float)w) * h"];
"1000509" -> "1000444"  [label="AST: "];
"1000510" -> "1000509"  [label="AST: "];
"1000520" -> "1000509"  [label="CFG: "];
"1000509" -> "1000644"  [label="DDG: 100.0 / (((float)w) * h)"];
"1000509" -> "1000600"  [label="DDG: per_inc"];
"1000600" -> "1000114"  [label="AST: "];
"1000600" -> "1000602"  [label="CFG: "];
"1000601" -> "1000600"  [label="AST: "];
"1000602" -> "1000600"  [label="AST: "];
"1000605" -> "1000600"  [label="CFG: "];
"1000600" -> "1000644"  [label="DDG: per_inc"];
"1000600" -> "1000644"  [label="DDG: per"];
"1000143" -> "1000600"  [label="DDG: per"];
"1000600" -> "1000608"  [label="DDG: per"];
"1000600" -> "1000622"  [label="DDG: per"];
"1000608" -> "1000607"  [label="AST: "];
"1000608" -> "1000610"  [label="CFG: "];
"1000609" -> "1000608"  [label="AST: "];
"1000610" -> "1000608"  [label="AST: "];
"1000611" -> "1000608"  [label="CFG: "];
"1000608" -> "1000644"  [label="DDG: per"];
"1000608" -> "1000607"  [label="DDG: per"];
"1000608" -> "1000614"  [label="DDG: per"];
"1000608" -> "1000622"  [label="DDG: per"];
"1000607" -> "1000606"  [label="AST: "];
"1000607" -> "1000611"  [label="CFG: "];
"1000611" -> "1000607"  [label="AST: "];
"1000615" -> "1000607"  [label="CFG: "];
"1000606" -> "1000607"  [label="CFG: "];
"1000607" -> "1000644"  [label="DDG: (int)per"];
"1000607" -> "1000644"  [label="DDG: last_per"];
"1000607" -> "1000606"  [label="DDG: (int)per"];
"1000607" -> "1000606"  [label="DDG: last_per"];
"1000148" -> "1000607"  [label="DDG: last_per"];
"1000606" -> "1000604"  [label="AST: "];
"1000606" -> "1000612"  [label="CFG: "];
"1000612" -> "1000606"  [label="AST: "];
"1000604" -> "1000606"  [label="CFG: "];
"1000606" -> "1000644"  [label="DDG: ((int)per) != last_per"];
"1000606" -> "1000644"  [label="DDG: ((int)per) % progress_granularity == 0"];
"1000606" -> "1000604"  [label="DDG: ((int)per) != last_per"];
"1000606" -> "1000604"  [label="DDG: ((int)per) % progress_granularity == 0"];
"1000612" -> "1000606"  [label="DDG: ((int)per) % progress_granularity"];
"1000612" -> "1000606"  [label="DDG: 0"];
"1000604" -> "1000603"  [label="AST: "];
"1000604" -> "1000605"  [label="CFG: "];
"1000605" -> "1000604"  [label="AST: "];
"1000621" -> "1000604"  [label="CFG: "];
"1000644" -> "1000604"  [label="CFG: "];
"1000604" -> "1000644"  [label="DDG: progress && (((int)per) != last_per)\n                      && (((int)per) % progress_granularity == 0)"];
"1000604" -> "1000644"  [label="DDG: progress"];
"1000604" -> "1000644"  [label="DDG: (((int)per) != last_per)\n                      && (((int)per) % progress_granularity == 0)"];
"1000441" -> "1000604"  [label="DDG: progress"];
"1000111" -> "1000604"  [label="DDG: progress"];
"1000614" -> "1000613"  [label="AST: "];
"1000614" -> "1000616"  [label="CFG: "];
"1000615" -> "1000614"  [label="AST: "];
"1000616" -> "1000614"  [label="AST: "];
"1000617" -> "1000614"  [label="CFG: "];
"1000614" -> "1000644"  [label="DDG: per"];
"1000614" -> "1000613"  [label="DDG: per"];
"1000614" -> "1000622"  [label="DDG: per"];
"1000613" -> "1000612"  [label="AST: "];
"1000613" -> "1000617"  [label="CFG: "];
"1000617" -> "1000613"  [label="AST: "];
"1000618" -> "1000613"  [label="CFG: "];
"1000613" -> "1000644"  [label="DDG: (int)per"];
"1000613" -> "1000644"  [label="DDG: progress_granularity"];
"1000613" -> "1000612"  [label="DDG: (int)per"];
"1000613" -> "1000612"  [label="DDG: progress_granularity"];
"1000112" -> "1000613"  [label="DDG: progress_granularity"];
"1000612" -> "1000618"  [label="CFG: "];
"1000618" -> "1000612"  [label="AST: "];
"1000612" -> "1000644"  [label="DDG: ((int)per) % progress_granularity"];
"1000622" -> "1000620"  [label="AST: "];
"1000622" -> "1000624"  [label="CFG: "];
"1000623" -> "1000622"  [label="AST: "];
"1000624" -> "1000622"  [label="AST: "];
"1000620" -> "1000622"  [label="CFG: "];
"1000622" -> "1000620"  [label="DDG: per"];
"1000622" -> "1000629"  [label="DDG: per"];
"1000620" -> "1000619"  [label="AST: "];
"1000621" -> "1000620"  [label="AST: "];
"1000628" -> "1000620"  [label="CFG: "];
"1000620" -> "1000644"  [label="DDG: last_per"];
"1000629" -> "1000627"  [label="AST: "];
"1000629" -> "1000631"  [label="CFG: "];
"1000630" -> "1000629"  [label="AST: "];
"1000631" -> "1000629"  [label="AST: "];
"1000632" -> "1000629"  [label="CFG: "];
"1000629" -> "1000644"  [label="DDG: per"];
"1000629" -> "1000627"  [label="DDG: per"];
"1000627" -> "1000626"  [label="AST: "];
"1000627" -> "1000635"  [label="CFG: "];
"1000628" -> "1000627"  [label="AST: "];
"1000632" -> "1000627"  [label="AST: "];
"1000633" -> "1000627"  [label="AST: "];
"1000634" -> "1000627"  [label="AST: "];
"1000635" -> "1000627"  [label="AST: "];
"1000626" -> "1000627"  [label="CFG: "];
"1000627" -> "1000644"  [label="DDG: (int)per"];
"1000627" -> "1000644"  [label="DDG: im"];
"1000627" -> "1000644"  [label="DDG: w"];
"1000627" -> "1000626"  [label="DDG: i"];
"1000627" -> "1000626"  [label="DDG: last_y"];
"1000627" -> "1000626"  [label="DDG: im"];
"1000627" -> "1000626"  [label="DDG: w"];
"1000627" -> "1000626"  [label="DDG: 0"];
"1000627" -> "1000626"  [label="DDG: (int)per"];
"1000110" -> "1000627"  [label="DDG: im"];
"1000152" -> "1000627"  [label="DDG: last_y"];
"1000319" -> "1000627"  [label="DDG: w"];
"1000135" -> "1000627"  [label="DDG: w"];
"1000337" -> "1000627"  [label="DDG: w"];
"1000277" -> "1000627"  [label="DDG: w"];
"1000298" -> "1000627"  [label="DDG: i"];
"1000331" -> "1000627"  [label="DDG: i"];
"1000522" -> "1000627"  [label="DDG: i"];
"1000627" -> "1000641"  [label="DDG: i"];
"1000626" -> "1000625"  [label="AST: "];
"1000638" -> "1000626"  [label="CFG: "];
"1000642" -> "1000626"  [label="CFG: "];
"1000626" -> "1000644"  [label="DDG: !(progress(im, (int)per, 0, last_y, w, i))"];
"1000626" -> "1000644"  [label="DDG: progress(im, (int)per, 0, last_y, w, i)"];
"1000641" -> "1000619"  [label="AST: "];
"1000641" -> "1000643"  [label="CFG: "];
"1000642" -> "1000641"  [label="AST: "];
"1000643" -> "1000641"  [label="AST: "];
"1000644" -> "1000641"  [label="CFG: "];
"1000641" -> "1000644"  [label="DDG: i"];
"1000641" -> "1000644"  [label="DDG: last_y"];
"1000522" -> "1000518"  [label="AST: "];
"1000522" -> "1000524"  [label="CFG: "];
"1000523" -> "1000522"  [label="AST: "];
"1000524" -> "1000522"  [label="AST: "];
"1000530" -> "1000522"  [label="CFG: "];
"1000601" -> "1000522"  [label="CFG: "];
"1000522" -> "1000644"  [label="DDG: h"];
"1000522" -> "1000644"  [label="DDG: i < h"];
"1000522" -> "1000644"  [label="DDG: i"];
"1000519" -> "1000522"  [label="DDG: i"];
"1000525" -> "1000522"  [label="DDG: i"];
"1000522" -> "1000525"  [label="DDG: i"];
"1000525" -> "1000518"  [label="AST: "];
"1000525" -> "1000526"  [label="CFG: "];
"1000526" -> "1000525"  [label="AST: "];
"1000523" -> "1000525"  [label="CFG: "];
}
