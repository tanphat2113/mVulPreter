digraph "0_enlightment_39641e74a560982fbf93f29bf96b37d27803cb56@array" {
"1000282" [label="(Call,!rows[i])"];
"1000259" [label="(Call,!rows)"];
"1000337" [label="(Call,DGifGetLine(gif, rows[i], w))"];
"1000225" [label="(Call,DGifGetImageDesc(gif))"];
"1000206" [label="(Call,DGifGetRecordType(gif, &rec))"];
"1000391" [label="(Call,DGifGetExtensionNext(gif, &ext))"];
"1000357" [label="(Call,DGifGetExtension(gif, &ext_code, &ext))"];
"1000192" [label="(Call,!gif)"];
"1000186" [label="(Call,gif = DGifOpenFileHandle(fd, NULL))"];
"1000188" [label="(Call,DGifOpenFileHandle(fd, NULL))"];
"1000181" [label="(Call,fd < 0)"];
"1000173" [label="(Call,fd = open(im->real_file, O_RDONLY))"];
"1000175" [label="(Call,open(im->real_file, O_RDONLY))"];
"1000319" [label="(Call,DGifGetLine(gif, rows[j], w))"];
"1000277" [label="(Call,w * sizeof(GifPixelType))"];
"1000248" [label="(Call,IMAGE_DIMENSIONS_OK(w, h))"];
"1000232" [label="(Call,w = gif->Image.Width)"];
"1000239" [label="(Call,h = gif->Image.Height)"];
"1000282" [label="(Call,!rows[i])"];
"1000272" [label="(Call,rows[i] = malloc(w * sizeof(GifPixelType)))"];
"1000276" [label="(Call,malloc(w * sizeof(GifPixelType)))"];
"1000252" [label="(Call,rows = calloc(h, sizeof(GifRowType *)))"];
"1000254" [label="(Call,calloc(h, sizeof(GifRowType *)))"];
"1000205" [label="(Call,DGifGetRecordType(gif, &rec) == GIF_ERROR)"];
"1000224" [label="(Call,DGifGetImageDesc(gif) == GIF_ERROR)"];
"1000415" [label="(Call,im->w = w)"];
"1000476" [label="(Call,w * h)"];
"1000473" [label="(Call,sizeof(DATA32) * w * h)"];
"1000472" [label="(Call,malloc(sizeof(DATA32) * w * h))"];
"1000470" [label="(Call,(DATA32 *) malloc(sizeof(DATA32) * w * h))"];
"1000466" [label="(Call,im->data = (DATA32 *) malloc(sizeof(DATA32) * w * h))"];
"1000480" [label="(Call,!im->data)"];
"1000489" [label="(Call,memset(im->data, 0, sizeof(DATA32) * w * h))"];
"1000504" [label="(Call,ptr = im->data)"];
"1000529" [label="(Call,ptr++)"];
"1000497" [label="(Call,w * h)"];
"1000494" [label="(Call,sizeof(DATA32) * w * h)"];
"1000514" [label="(Call,(float)w)"];
"1000513" [label="(Call,((float)w) * h)"];
"1000511" [label="(Call,100.0 / (((float)w) * h))"];
"1000509" [label="(Call,per_inc = 100.0 / (((float)w) * h))"];
"1000600" [label="(Call,per += per_inc)"];
"1000608" [label="(Call,(int)per)"];
"1000607" [label="(Call,((int)per) != last_per)"];
"1000606" [label="(Call,(((int)per) != last_per)\n                      && (((int)per) % progress_granularity == 0))"];
"1000604" [label="(Call,progress && (((int)per) != last_per)\n                      && (((int)per) % progress_granularity == 0))"];
"1000614" [label="(Call,(int)per)"];
"1000613" [label="(Call,((int)per) % progress_granularity)"];
"1000612" [label="(Call,((int)per) % progress_granularity == 0)"];
"1000622" [label="(Call,(int)per)"];
"1000620" [label="(Call,last_per = (int)per)"];
"1000629" [label="(Call,(int)per)"];
"1000627" [label="(Call,progress(im, (int)per, 0, last_y, w, i))"];
"1000626" [label="(Call,!(progress(im, (int)per, 0, last_y, w, i)))"];
"1000641" [label="(Call,last_y = i)"];
"1000522" [label="(Call,i < h)"];
"1000525" [label="(Call,i++)"];
"1000441" [label="(Call,immediate_load || progress)"];
"1000530" [label="(Identifier,ptr)"];
"1000253" [label="(Identifier,rows)"];
"1000487" [label="(Identifier,cmap)"];
"1000481" [label="(Call,im->data)"];
"1000264" [label="(Identifier,i)"];
"1000336" [label="(Block,)"];
"1000484" [label="(ControlStructure,goto quit;)"];
"1000520" [label="(Identifier,i)"];
"1000631" [label="(Identifier,per)"];
"1000339" [label="(Call,rows[i])"];
"1000466" [label="(Call,im->data = (DATA32 *) malloc(sizeof(DATA32) * w * h))"];
"1000208" [label="(Call,&rec)"];
"1000524" [label="(Identifier,h)"];
"1000298" [label="(Call,i < 4)"];
"1000608" [label="(Call,(int)per)"];
"1000422" [label="(Identifier,im)"];
"1000392" [label="(Identifier,gif)"];
"1000358" [label="(Identifier,gif)"];
"1000224" [label="(Call,DGifGetImageDesc(gif) == GIF_ERROR)"];
"1000324" [label="(Identifier,w)"];
"1000611" [label="(Identifier,last_per)"];
"1000210" [label="(Identifier,GIF_ERROR)"];
"1000514" [label="(Call,(float)w)"];
"1000522" [label="(Call,i < h)"];
"1000270" [label="(Identifier,i)"];
"1000174" [label="(Identifier,fd)"];
"1000627" [label="(Call,progress(im, (int)per, 0, last_y, w, i))"];
"1000284" [label="(Identifier,rows)"];
"1000497" [label="(Call,w * h)"];
"1000607" [label="(Call,((int)per) != last_per)"];
"1000612" [label="(Call,((int)per) % progress_granularity == 0)"];
"1000272" [label="(Call,rows[i] = malloc(w * sizeof(GifPixelType)))"];
"1000444" [label="(Block,)"];
"1000225" [label="(Call,DGifGetImageDesc(gif))"];
"1000493" [label="(Literal,0)"];
"1000342" [label="(Identifier,w)"];
"1000361" [label="(Call,&ext)"];
"1000331" [label="(Call,i < h)"];
"1000501" [label="(Identifier,rc)"];
"1000112" [label="(MethodParameterIn,char progress_granularity)"];
"1000338" [label="(Identifier,gif)"];
"1000250" [label="(Identifier,h)"];
"1000489" [label="(Call,memset(im->data, 0, sizeof(DATA32) * w * h))"];
"1000179" [label="(Identifier,O_RDONLY)"];
"1000195" [label="(Call,close(fd))"];
"1000643" [label="(Identifier,i)"];
"1000614" [label="(Call,(int)per)"];
"1000148" [label="(Call,last_per = 0)"];
"1000635" [label="(Identifier,i)"];
"1000601" [label="(Identifier,per)"];
"1000357" [label="(Call,DGifGetExtension(gif, &ext_code, &ext))"];
"1000604" [label="(Call,progress && (((int)per) != last_per)\n                      && (((int)per) % progress_granularity == 0))"];
"1000193" [label="(Identifier,gif)"];
"1000633" [label="(Identifier,last_y)"];
"1000529" [label="(Call,ptr++)"];
"1000477" [label="(Identifier,w)"];
"1000467" [label="(Call,im->data)"];
"1000518" [label="(ControlStructure,for (i = 0; i < h; i++))"];
"1000283" [label="(Call,rows[i])"];
"1000480" [label="(Call,!im->data)"];
"1000276" [label="(Call,malloc(w * sizeof(GifPixelType)))"];
"1000173" [label="(Call,fd = open(im->real_file, O_RDONLY))"];
"1000206" [label="(Call,DGifGetRecordType(gif, &rec))"];
"1000226" [label="(Identifier,gif)"];
"1000186" [label="(Call,gif = DGifOpenFileHandle(fd, NULL))"];
"1000176" [label="(Call,im->real_file)"];
"1000110" [label="(MethodParameterIn,ImlibImage * im)"];
"1000641" [label="(Call,last_y = i)"];
"1000499" [label="(Identifier,h)"];
"1000528" [label="(Call,*ptr++)"];
"1000248" [label="(Call,IMAGE_DIMENSIONS_OK(w, h))"];
"1000354" [label="(Call,ext = NULL)"];
"1000472" [label="(Call,malloc(sizeof(DATA32) * w * h))"];
"1000318" [label="(Block,)"];
"1000259" [label="(Call,!rows)"];
"1000416" [label="(Call,im->w)"];
"1000626" [label="(Call,!(progress(im, (int)per, 0, last_y, w, i)))"];
"1000205" [label="(Call,DGifGetRecordType(gif, &rec) == GIF_ERROR)"];
"1000351" [label="(Block,)"];
"1000513" [label="(Call,((float)w) * h)"];
"1000476" [label="(Call,w * h)"];
"1000642" [label="(Identifier,last_y)"];
"1000335" [label="(Identifier,i)"];
"1000314" [label="(Identifier,j)"];
"1000255" [label="(Identifier,h)"];
"1000183" [label="(Literal,0)"];
"1000232" [label="(Call,w = gif->Image.Width)"];
"1000271" [label="(Block,)"];
"1000512" [label="(Literal,100.0)"];
"1000111" [label="(MethodParameterIn,ImlibProgressFunction progress)"];
"1000473" [label="(Call,sizeof(DATA32) * w * h)"];
"1000310" [label="(Call,j < h)"];
"1000254" [label="(Call,calloc(h, sizeof(GifRowType *)))"];
"1000494" [label="(Call,sizeof(DATA32) * w * h)"];
"1000526" [label="(Identifier,i)"];
"1000519" [label="(Call,i = 0)"];
"1000282" [label="(Call,!rows[i])"];
"1000286" [label="(ControlStructure,goto quit;)"];
"1000320" [label="(Identifier,gif)"];
"1000419" [label="(Identifier,w)"];
"1000266" [label="(Call,i < h)"];
"1000605" [label="(Identifier,progress)"];
"1000616" [label="(Identifier,per)"];
"1000629" [label="(Call,(int)per)"];
"1000504" [label="(Call,ptr = im->data)"];
"1000273" [label="(Call,rows[i])"];
"1000606" [label="(Call,(((int)per) != last_per)\n                      && (((int)per) % progress_granularity == 0))"];
"1000281" [label="(ControlStructure,if (!rows[i]))"];
"1000618" [label="(Literal,0)"];
"1000247" [label="(Call,!IMAGE_DIMENSIONS_OK(w, h))"];
"1000189" [label="(Identifier,fd)"];
"1000240" [label="(Identifier,h)"];
"1000260" [label="(Identifier,rows)"];
"1000525" [label="(Call,i++)"];
"1000617" [label="(Identifier,progress_granularity)"];
"1000638" [label="(Identifier,rc)"];
"1000252" [label="(Call,rows = calloc(h, sizeof(GifRowType *)))"];
"1000517" [label="(Identifier,h)"];
"1000470" [label="(Call,(DATA32 *) malloc(sizeof(DATA32) * w * h))"];
"1000222" [label="(Block,)"];
"1000474" [label="(Call,sizeof(DATA32))"];
"1000187" [label="(Identifier,gif)"];
"1000227" [label="(Identifier,GIF_ERROR)"];
"1000191" [label="(ControlStructure,if (!gif))"];
"1000506" [label="(Call,im->data)"];
"1000190" [label="(Identifier,NULL)"];
"1000319" [label="(Call,DGifGetLine(gif, rows[j], w))"];
"1000152" [label="(Call,last_y = 0)"];
"1000628" [label="(Identifier,im)"];
"1000393" [label="(Call,&ext)"];
"1000204" [label="(ControlStructure,if (DGifGetRecordType(gif, &rec) == GIF_ERROR))"];
"1000610" [label="(Identifier,per)"];
"1000644" [label="(MethodReturn,RET)"];
"1000239" [label="(Call,h = gif->Image.Height)"];
"1000622" [label="(Call,(int)per)"];
"1000624" [label="(Identifier,per)"];
"1000505" [label="(Identifier,ptr)"];
"1000603" [label="(ControlStructure,if (progress && (((int)per) != last_per)\n                      && (((int)per) % progress_granularity == 0)))"];
"1000218" [label="(Identifier,rec)"];
"1000213" [label="(Identifier,rec)"];
"1000175" [label="(Call,open(im->real_file, O_RDONLY))"];
"1000321" [label="(Call,rows[j])"];
"1000139" [label="(Call,h = 0)"];
"1000359" [label="(Call,&ext_code)"];
"1000200" [label="(Identifier,rc)"];
"1000478" [label="(Identifier,h)"];
"1000482" [label="(Identifier,im)"];
"1000498" [label="(Identifier,w)"];
"1000207" [label="(Identifier,gif)"];
"1000510" [label="(Identifier,per_inc)"];
"1000114" [label="(Block,)"];
"1000495" [label="(Call,sizeof(DATA32))"];
"1000516" [label="(Identifier,w)"];
"1000634" [label="(Identifier,w)"];
"1000509" [label="(Call,per_inc = 100.0 / (((float)w) * h))"];
"1000479" [label="(ControlStructure,if (!im->data))"];
"1000619" [label="(Block,)"];
"1000613" [label="(Call,((int)per) % progress_granularity)"];
"1000258" [label="(ControlStructure,if (!rows))"];
"1000488" [label="(Block,)"];
"1000511" [label="(Call,100.0 / (((float)w) * h))"];
"1000230" [label="(Identifier,rec)"];
"1000364" [label="(Identifier,ext)"];
"1000143" [label="(Call,per = 0.0)"];
"1000180" [label="(ControlStructure,if (fd < 0))"];
"1000256" [label="(Call,sizeof(GifRowType *))"];
"1000620" [label="(Call,last_per = (int)per)"];
"1000602" [label="(Identifier,per_inc)"];
"1000241" [label="(Call,gif->Image.Height)"];
"1000185" [label="(Literal,0)"];
"1000181" [label="(Call,fd < 0)"];
"1000135" [label="(Call,w = 0)"];
"1000233" [label="(Identifier,w)"];
"1000632" [label="(Literal,0)"];
"1000391" [label="(Call,DGifGetExtensionNext(gif, &ext))"];
"1000490" [label="(Call,im->data)"];
"1000621" [label="(Identifier,last_per)"];
"1000415" [label="(Call,im->w = w)"];
"1000192" [label="(Call,!gif)"];
"1000196" [label="(Identifier,fd)"];
"1000188" [label="(Call,DGifOpenFileHandle(fd, NULL))"];
"1000223" [label="(ControlStructure,if (DGifGetImageDesc(gif) == GIF_ERROR))"];
"1000523" [label="(Identifier,i)"];
"1000365" [label="(Block,)"];
"1000278" [label="(Identifier,w)"];
"1000261" [label="(ControlStructure,goto quit2;)"];
"1000625" [label="(ControlStructure,if (!(progress(im, (int)per, 0, last_y, w, i))))"];
"1000234" [label="(Call,gif->Image.Width)"];
"1000182" [label="(Identifier,fd)"];
"1000279" [label="(Call,sizeof(GifPixelType))"];
"1000600" [label="(Call,per += per_inc)"];
"1000337" [label="(Call,DGifGetLine(gif, rows[i], w))"];
"1000249" [label="(Identifier,w)"];
"1000277" [label="(Call,w * sizeof(GifPixelType))"];
"1000282" -> "1000281"  [label="AST: "];
"1000282" -> "1000283"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000286" -> "1000282"  [label="CFG: "];
"1000270" -> "1000282"  [label="CFG: "];
"1000282" -> "1000644"  [label="DDG: !rows[i]"];
"1000282" -> "1000644"  [label="DDG: rows[i]"];
"1000282" -> "1000259"  [label="DDG: rows[i]"];
"1000259" -> "1000282"  [label="DDG: rows"];
"1000272" -> "1000282"  [label="DDG: rows[i]"];
"1000282" -> "1000337"  [label="DDG: rows[i]"];
"1000259" -> "1000258"  [label="AST: "];
"1000259" -> "1000260"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000259"  [label="CFG: "];
"1000264" -> "1000259"  [label="CFG: "];
"1000259" -> "1000644"  [label="DDG: !rows"];
"1000259" -> "1000644"  [label="DDG: rows"];
"1000337" -> "1000259"  [label="DDG: rows[i]"];
"1000252" -> "1000259"  [label="DDG: rows"];
"1000319" -> "1000259"  [label="DDG: rows[j]"];
"1000259" -> "1000319"  [label="DDG: rows"];
"1000259" -> "1000337"  [label="DDG: rows"];
"1000337" -> "1000336"  [label="AST: "];
"1000337" -> "1000342"  [label="CFG: "];
"1000338" -> "1000337"  [label="AST: "];
"1000339" -> "1000337"  [label="AST: "];
"1000342" -> "1000337"  [label="AST: "];
"1000335" -> "1000337"  [label="CFG: "];
"1000337" -> "1000644"  [label="DDG: rows[i]"];
"1000337" -> "1000644"  [label="DDG: gif"];
"1000337" -> "1000644"  [label="DDG: DGifGetLine(gif, rows[i], w)"];
"1000337" -> "1000206"  [label="DDG: gif"];
"1000225" -> "1000337"  [label="DDG: gif"];
"1000248" -> "1000337"  [label="DDG: w"];
"1000277" -> "1000337"  [label="DDG: w"];
"1000337" -> "1000415"  [label="DDG: w"];
"1000337" -> "1000476"  [label="DDG: w"];
"1000337" -> "1000627"  [label="DDG: w"];
"1000225" -> "1000224"  [label="AST: "];
"1000225" -> "1000226"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000227" -> "1000225"  [label="CFG: "];
"1000225" -> "1000644"  [label="DDG: gif"];
"1000225" -> "1000206"  [label="DDG: gif"];
"1000225" -> "1000224"  [label="DDG: gif"];
"1000206" -> "1000225"  [label="DDG: gif"];
"1000225" -> "1000319"  [label="DDG: gif"];
"1000206" -> "1000205"  [label="AST: "];
"1000206" -> "1000208"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000206"  [label="AST: "];
"1000210" -> "1000206"  [label="CFG: "];
"1000206" -> "1000644"  [label="DDG: &rec"];
"1000206" -> "1000644"  [label="DDG: gif"];
"1000206" -> "1000205"  [label="DDG: gif"];
"1000206" -> "1000205"  [label="DDG: &rec"];
"1000391" -> "1000206"  [label="DDG: gif"];
"1000192" -> "1000206"  [label="DDG: gif"];
"1000319" -> "1000206"  [label="DDG: gif"];
"1000357" -> "1000206"  [label="DDG: gif"];
"1000206" -> "1000357"  [label="DDG: gif"];
"1000391" -> "1000365"  [label="AST: "];
"1000391" -> "1000393"  [label="CFG: "];
"1000392" -> "1000391"  [label="AST: "];
"1000393" -> "1000391"  [label="AST: "];
"1000364" -> "1000391"  [label="CFG: "];
"1000391" -> "1000644"  [label="DDG: gif"];
"1000391" -> "1000644"  [label="DDG: &ext"];
"1000391" -> "1000644"  [label="DDG: DGifGetExtensionNext(gif, &ext)"];
"1000391" -> "1000357"  [label="DDG: &ext"];
"1000357" -> "1000391"  [label="DDG: gif"];
"1000357" -> "1000391"  [label="DDG: &ext"];
"1000357" -> "1000351"  [label="AST: "];
"1000357" -> "1000361"  [label="CFG: "];
"1000358" -> "1000357"  [label="AST: "];
"1000359" -> "1000357"  [label="AST: "];
"1000361" -> "1000357"  [label="AST: "];
"1000364" -> "1000357"  [label="CFG: "];
"1000357" -> "1000644"  [label="DDG: &ext"];
"1000357" -> "1000644"  [label="DDG: DGifGetExtension(gif, &ext_code, &ext)"];
"1000357" -> "1000644"  [label="DDG: gif"];
"1000357" -> "1000644"  [label="DDG: &ext_code"];
"1000192" -> "1000191"  [label="AST: "];
"1000192" -> "1000193"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000196" -> "1000192"  [label="CFG: "];
"1000200" -> "1000192"  [label="CFG: "];
"1000192" -> "1000644"  [label="DDG: gif"];
"1000192" -> "1000644"  [label="DDG: !gif"];
"1000186" -> "1000192"  [label="DDG: gif"];
"1000186" -> "1000114"  [label="AST: "];
"1000186" -> "1000188"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000188" -> "1000186"  [label="AST: "];
"1000193" -> "1000186"  [label="CFG: "];
"1000186" -> "1000644"  [label="DDG: DGifOpenFileHandle(fd, NULL)"];
"1000188" -> "1000186"  [label="DDG: fd"];
"1000188" -> "1000186"  [label="DDG: NULL"];
"1000188" -> "1000190"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000188"  [label="AST: "];
"1000188" -> "1000644"  [label="DDG: NULL"];
"1000188" -> "1000644"  [label="DDG: fd"];
"1000181" -> "1000188"  [label="DDG: fd"];
"1000188" -> "1000195"  [label="DDG: fd"];
"1000188" -> "1000354"  [label="DDG: NULL"];
"1000181" -> "1000180"  [label="AST: "];
"1000181" -> "1000183"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000183" -> "1000181"  [label="AST: "];
"1000185" -> "1000181"  [label="CFG: "];
"1000187" -> "1000181"  [label="CFG: "];
"1000181" -> "1000644"  [label="DDG: fd"];
"1000181" -> "1000644"  [label="DDG: fd < 0"];
"1000173" -> "1000181"  [label="DDG: fd"];
"1000173" -> "1000114"  [label="AST: "];
"1000173" -> "1000175"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000175" -> "1000173"  [label="AST: "];
"1000182" -> "1000173"  [label="CFG: "];
"1000173" -> "1000644"  [label="DDG: open(im->real_file, O_RDONLY)"];
"1000175" -> "1000173"  [label="DDG: im->real_file"];
"1000175" -> "1000173"  [label="DDG: O_RDONLY"];
"1000175" -> "1000179"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000179" -> "1000175"  [label="AST: "];
"1000175" -> "1000644"  [label="DDG: O_RDONLY"];
"1000175" -> "1000644"  [label="DDG: im->real_file"];
"1000319" -> "1000318"  [label="AST: "];
"1000319" -> "1000324"  [label="CFG: "];
"1000320" -> "1000319"  [label="AST: "];
"1000321" -> "1000319"  [label="AST: "];
"1000324" -> "1000319"  [label="AST: "];
"1000314" -> "1000319"  [label="CFG: "];
"1000319" -> "1000644"  [label="DDG: DGifGetLine(gif, rows[j], w)"];
"1000319" -> "1000644"  [label="DDG: rows[j]"];
"1000319" -> "1000644"  [label="DDG: gif"];
"1000277" -> "1000319"  [label="DDG: w"];
"1000248" -> "1000319"  [label="DDG: w"];
"1000319" -> "1000415"  [label="DDG: w"];
"1000319" -> "1000476"  [label="DDG: w"];
"1000319" -> "1000627"  [label="DDG: w"];
"1000277" -> "1000276"  [label="AST: "];
"1000277" -> "1000279"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000277"  [label="AST: "];
"1000276" -> "1000277"  [label="CFG: "];
"1000277" -> "1000276"  [label="DDG: w"];
"1000248" -> "1000277"  [label="DDG: w"];
"1000277" -> "1000415"  [label="DDG: w"];
"1000277" -> "1000476"  [label="DDG: w"];
"1000277" -> "1000627"  [label="DDG: w"];
"1000248" -> "1000247"  [label="AST: "];
"1000248" -> "1000250"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="AST: "];
"1000247" -> "1000248"  [label="CFG: "];
"1000248" -> "1000247"  [label="DDG: w"];
"1000248" -> "1000247"  [label="DDG: h"];
"1000232" -> "1000248"  [label="DDG: w"];
"1000239" -> "1000248"  [label="DDG: h"];
"1000248" -> "1000254"  [label="DDG: h"];
"1000248" -> "1000415"  [label="DDG: w"];
"1000248" -> "1000476"  [label="DDG: w"];
"1000248" -> "1000627"  [label="DDG: w"];
"1000232" -> "1000222"  [label="AST: "];
"1000232" -> "1000234"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000234" -> "1000232"  [label="AST: "];
"1000240" -> "1000232"  [label="CFG: "];
"1000232" -> "1000644"  [label="DDG: gif->Image.Width"];
"1000239" -> "1000222"  [label="AST: "];
"1000239" -> "1000241"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="AST: "];
"1000249" -> "1000239"  [label="CFG: "];
"1000239" -> "1000644"  [label="DDG: gif->Image.Height"];
"1000272" -> "1000271"  [label="AST: "];
"1000272" -> "1000276"  [label="CFG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000276" -> "1000272"  [label="AST: "];
"1000284" -> "1000272"  [label="CFG: "];
"1000272" -> "1000644"  [label="DDG: malloc(w * sizeof(GifPixelType))"];
"1000276" -> "1000272"  [label="DDG: w * sizeof(GifPixelType)"];
"1000276" -> "1000644"  [label="DDG: w * sizeof(GifPixelType)"];
"1000252" -> "1000222"  [label="AST: "];
"1000252" -> "1000254"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000254" -> "1000252"  [label="AST: "];
"1000260" -> "1000252"  [label="CFG: "];
"1000252" -> "1000644"  [label="DDG: calloc(h, sizeof(GifRowType *))"];
"1000254" -> "1000252"  [label="DDG: h"];
"1000254" -> "1000256"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000256" -> "1000254"  [label="AST: "];
"1000254" -> "1000266"  [label="DDG: h"];
"1000205" -> "1000204"  [label="AST: "];
"1000205" -> "1000210"  [label="CFG: "];
"1000210" -> "1000205"  [label="AST: "];
"1000213" -> "1000205"  [label="CFG: "];
"1000218" -> "1000205"  [label="CFG: "];
"1000205" -> "1000644"  [label="DDG: GIF_ERROR"];
"1000205" -> "1000644"  [label="DDG: DGifGetRecordType(gif, &rec)"];
"1000205" -> "1000644"  [label="DDG: DGifGetRecordType(gif, &rec) == GIF_ERROR"];
"1000224" -> "1000205"  [label="DDG: GIF_ERROR"];
"1000205" -> "1000224"  [label="DDG: GIF_ERROR"];
"1000224" -> "1000223"  [label="AST: "];
"1000224" -> "1000227"  [label="CFG: "];
"1000227" -> "1000224"  [label="AST: "];
"1000230" -> "1000224"  [label="CFG: "];
"1000233" -> "1000224"  [label="CFG: "];
"1000224" -> "1000644"  [label="DDG: DGifGetImageDesc(gif)"];
"1000224" -> "1000644"  [label="DDG: GIF_ERROR"];
"1000224" -> "1000644"  [label="DDG: DGifGetImageDesc(gif) == GIF_ERROR"];
"1000415" -> "1000114"  [label="AST: "];
"1000415" -> "1000419"  [label="CFG: "];
"1000416" -> "1000415"  [label="AST: "];
"1000419" -> "1000415"  [label="AST: "];
"1000422" -> "1000415"  [label="CFG: "];
"1000415" -> "1000644"  [label="DDG: im->w"];
"1000415" -> "1000644"  [label="DDG: w"];
"1000135" -> "1000415"  [label="DDG: w"];
"1000476" -> "1000473"  [label="AST: "];
"1000476" -> "1000478"  [label="CFG: "];
"1000477" -> "1000476"  [label="AST: "];
"1000478" -> "1000476"  [label="AST: "];
"1000473" -> "1000476"  [label="CFG: "];
"1000476" -> "1000473"  [label="DDG: w"];
"1000476" -> "1000473"  [label="DDG: h"];
"1000135" -> "1000476"  [label="DDG: w"];
"1000310" -> "1000476"  [label="DDG: h"];
"1000331" -> "1000476"  [label="DDG: h"];
"1000139" -> "1000476"  [label="DDG: h"];
"1000266" -> "1000476"  [label="DDG: h"];
"1000476" -> "1000497"  [label="DDG: w"];
"1000476" -> "1000497"  [label="DDG: h"];
"1000476" -> "1000514"  [label="DDG: w"];
"1000476" -> "1000513"  [label="DDG: h"];
"1000473" -> "1000472"  [label="AST: "];
"1000474" -> "1000473"  [label="AST: "];
"1000472" -> "1000473"  [label="CFG: "];
"1000473" -> "1000644"  [label="DDG: w * h"];
"1000473" -> "1000472"  [label="DDG: w * h"];
"1000472" -> "1000470"  [label="AST: "];
"1000470" -> "1000472"  [label="CFG: "];
"1000472" -> "1000644"  [label="DDG: sizeof(DATA32) * w * h"];
"1000472" -> "1000470"  [label="DDG: sizeof(DATA32) * w * h"];
"1000470" -> "1000466"  [label="AST: "];
"1000471" -> "1000470"  [label="AST: "];
"1000466" -> "1000470"  [label="CFG: "];
"1000470" -> "1000644"  [label="DDG: malloc(sizeof(DATA32) * w * h)"];
"1000470" -> "1000466"  [label="DDG: malloc(sizeof(DATA32) * w * h)"];
"1000466" -> "1000444"  [label="AST: "];
"1000467" -> "1000466"  [label="AST: "];
"1000482" -> "1000466"  [label="CFG: "];
"1000466" -> "1000644"  [label="DDG: (DATA32 *) malloc(sizeof(DATA32) * w * h)"];
"1000466" -> "1000480"  [label="DDG: im->data"];
"1000480" -> "1000479"  [label="AST: "];
"1000480" -> "1000481"  [label="CFG: "];
"1000481" -> "1000480"  [label="AST: "];
"1000484" -> "1000480"  [label="CFG: "];
"1000487" -> "1000480"  [label="CFG: "];
"1000480" -> "1000644"  [label="DDG: !im->data"];
"1000480" -> "1000489"  [label="DDG: im->data"];
"1000480" -> "1000504"  [label="DDG: im->data"];
"1000489" -> "1000488"  [label="AST: "];
"1000489" -> "1000494"  [label="CFG: "];
"1000490" -> "1000489"  [label="AST: "];
"1000493" -> "1000489"  [label="AST: "];
"1000494" -> "1000489"  [label="AST: "];
"1000501" -> "1000489"  [label="CFG: "];
"1000494" -> "1000489"  [label="DDG: w * h"];
"1000504" -> "1000444"  [label="AST: "];
"1000504" -> "1000506"  [label="CFG: "];
"1000505" -> "1000504"  [label="AST: "];
"1000506" -> "1000504"  [label="AST: "];
"1000510" -> "1000504"  [label="CFG: "];
"1000504" -> "1000644"  [label="DDG: im->data"];
"1000504" -> "1000644"  [label="DDG: ptr"];
"1000504" -> "1000529"  [label="DDG: ptr"];
"1000529" -> "1000528"  [label="AST: "];
"1000529" -> "1000530"  [label="CFG: "];
"1000530" -> "1000529"  [label="AST: "];
"1000528" -> "1000529"  [label="CFG: "];
"1000529" -> "1000644"  [label="DDG: ptr"];
"1000497" -> "1000494"  [label="AST: "];
"1000497" -> "1000499"  [label="CFG: "];
"1000498" -> "1000497"  [label="AST: "];
"1000499" -> "1000497"  [label="AST: "];
"1000494" -> "1000497"  [label="CFG: "];
"1000497" -> "1000494"  [label="DDG: w"];
"1000497" -> "1000494"  [label="DDG: h"];
"1000495" -> "1000494"  [label="AST: "];
"1000514" -> "1000513"  [label="AST: "];
"1000514" -> "1000516"  [label="CFG: "];
"1000515" -> "1000514"  [label="AST: "];
"1000516" -> "1000514"  [label="AST: "];
"1000517" -> "1000514"  [label="CFG: "];
"1000514" -> "1000644"  [label="DDG: w"];
"1000514" -> "1000513"  [label="DDG: w"];
"1000514" -> "1000627"  [label="DDG: w"];
"1000513" -> "1000511"  [label="AST: "];
"1000513" -> "1000517"  [label="CFG: "];
"1000517" -> "1000513"  [label="AST: "];
"1000511" -> "1000513"  [label="CFG: "];
"1000513" -> "1000644"  [label="DDG: (float)w"];
"1000513" -> "1000511"  [label="DDG: (float)w"];
"1000513" -> "1000511"  [label="DDG: h"];
"1000513" -> "1000522"  [label="DDG: h"];
"1000511" -> "1000509"  [label="AST: "];
"1000512" -> "1000511"  [label="AST: "];
"1000509" -> "1000511"  [label="CFG: "];
"1000511" -> "1000644"  [label="DDG: ((float)w) * h"];
"1000511" -> "1000509"  [label="DDG: 100.0"];
"1000511" -> "1000509"  [label="DDG: ((float)w) * h"];
"1000509" -> "1000444"  [label="AST: "];
"1000510" -> "1000509"  [label="AST: "];
"1000520" -> "1000509"  [label="CFG: "];
"1000509" -> "1000644"  [label="DDG: 100.0 / (((float)w) * h)"];
"1000509" -> "1000600"  [label="DDG: per_inc"];
"1000600" -> "1000114"  [label="AST: "];
"1000600" -> "1000602"  [label="CFG: "];
"1000601" -> "1000600"  [label="AST: "];
"1000602" -> "1000600"  [label="AST: "];
"1000605" -> "1000600"  [label="CFG: "];
"1000600" -> "1000644"  [label="DDG: per_inc"];
"1000600" -> "1000644"  [label="DDG: per"];
"1000143" -> "1000600"  [label="DDG: per"];
"1000600" -> "1000608"  [label="DDG: per"];
"1000600" -> "1000622"  [label="DDG: per"];
"1000608" -> "1000607"  [label="AST: "];
"1000608" -> "1000610"  [label="CFG: "];
"1000609" -> "1000608"  [label="AST: "];
"1000610" -> "1000608"  [label="AST: "];
"1000611" -> "1000608"  [label="CFG: "];
"1000608" -> "1000644"  [label="DDG: per"];
"1000608" -> "1000607"  [label="DDG: per"];
"1000608" -> "1000614"  [label="DDG: per"];
"1000608" -> "1000622"  [label="DDG: per"];
"1000607" -> "1000606"  [label="AST: "];
"1000607" -> "1000611"  [label="CFG: "];
"1000611" -> "1000607"  [label="AST: "];
"1000615" -> "1000607"  [label="CFG: "];
"1000606" -> "1000607"  [label="CFG: "];
"1000607" -> "1000644"  [label="DDG: (int)per"];
"1000607" -> "1000644"  [label="DDG: last_per"];
"1000607" -> "1000606"  [label="DDG: (int)per"];
"1000607" -> "1000606"  [label="DDG: last_per"];
"1000148" -> "1000607"  [label="DDG: last_per"];
"1000606" -> "1000604"  [label="AST: "];
"1000606" -> "1000612"  [label="CFG: "];
"1000612" -> "1000606"  [label="AST: "];
"1000604" -> "1000606"  [label="CFG: "];
"1000606" -> "1000644"  [label="DDG: ((int)per) != last_per"];
"1000606" -> "1000644"  [label="DDG: ((int)per) % progress_granularity == 0"];
"1000606" -> "1000604"  [label="DDG: ((int)per) != last_per"];
"1000606" -> "1000604"  [label="DDG: ((int)per) % progress_granularity == 0"];
"1000612" -> "1000606"  [label="DDG: ((int)per) % progress_granularity"];
"1000612" -> "1000606"  [label="DDG: 0"];
"1000604" -> "1000603"  [label="AST: "];
"1000604" -> "1000605"  [label="CFG: "];
"1000605" -> "1000604"  [label="AST: "];
"1000621" -> "1000604"  [label="CFG: "];
"1000644" -> "1000604"  [label="CFG: "];
"1000604" -> "1000644"  [label="DDG: progress && (((int)per) != last_per)\n                      && (((int)per) % progress_granularity == 0)"];
"1000604" -> "1000644"  [label="DDG: progress"];
"1000604" -> "1000644"  [label="DDG: (((int)per) != last_per)\n                      && (((int)per) % progress_granularity == 0)"];
"1000441" -> "1000604"  [label="DDG: progress"];
"1000111" -> "1000604"  [label="DDG: progress"];
"1000614" -> "1000613"  [label="AST: "];
"1000614" -> "1000616"  [label="CFG: "];
"1000615" -> "1000614"  [label="AST: "];
"1000616" -> "1000614"  [label="AST: "];
"1000617" -> "1000614"  [label="CFG: "];
"1000614" -> "1000644"  [label="DDG: per"];
"1000614" -> "1000613"  [label="DDG: per"];
"1000614" -> "1000622"  [label="DDG: per"];
"1000613" -> "1000612"  [label="AST: "];
"1000613" -> "1000617"  [label="CFG: "];
"1000617" -> "1000613"  [label="AST: "];
"1000618" -> "1000613"  [label="CFG: "];
"1000613" -> "1000644"  [label="DDG: (int)per"];
"1000613" -> "1000644"  [label="DDG: progress_granularity"];
"1000613" -> "1000612"  [label="DDG: (int)per"];
"1000613" -> "1000612"  [label="DDG: progress_granularity"];
"1000112" -> "1000613"  [label="DDG: progress_granularity"];
"1000612" -> "1000618"  [label="CFG: "];
"1000618" -> "1000612"  [label="AST: "];
"1000612" -> "1000644"  [label="DDG: ((int)per) % progress_granularity"];
"1000622" -> "1000620"  [label="AST: "];
"1000622" -> "1000624"  [label="CFG: "];
"1000623" -> "1000622"  [label="AST: "];
"1000624" -> "1000622"  [label="AST: "];
"1000620" -> "1000622"  [label="CFG: "];
"1000622" -> "1000620"  [label="DDG: per"];
"1000622" -> "1000629"  [label="DDG: per"];
"1000620" -> "1000619"  [label="AST: "];
"1000621" -> "1000620"  [label="AST: "];
"1000628" -> "1000620"  [label="CFG: "];
"1000620" -> "1000644"  [label="DDG: last_per"];
"1000629" -> "1000627"  [label="AST: "];
"1000629" -> "1000631"  [label="CFG: "];
"1000630" -> "1000629"  [label="AST: "];
"1000631" -> "1000629"  [label="AST: "];
"1000632" -> "1000629"  [label="CFG: "];
"1000629" -> "1000644"  [label="DDG: per"];
"1000629" -> "1000627"  [label="DDG: per"];
"1000627" -> "1000626"  [label="AST: "];
"1000627" -> "1000635"  [label="CFG: "];
"1000628" -> "1000627"  [label="AST: "];
"1000632" -> "1000627"  [label="AST: "];
"1000633" -> "1000627"  [label="AST: "];
"1000634" -> "1000627"  [label="AST: "];
"1000635" -> "1000627"  [label="AST: "];
"1000626" -> "1000627"  [label="CFG: "];
"1000627" -> "1000644"  [label="DDG: (int)per"];
"1000627" -> "1000644"  [label="DDG: im"];
"1000627" -> "1000644"  [label="DDG: w"];
"1000627" -> "1000626"  [label="DDG: i"];
"1000627" -> "1000626"  [label="DDG: last_y"];
"1000627" -> "1000626"  [label="DDG: im"];
"1000627" -> "1000626"  [label="DDG: w"];
"1000627" -> "1000626"  [label="DDG: 0"];
"1000627" -> "1000626"  [label="DDG: (int)per"];
"1000110" -> "1000627"  [label="DDG: im"];
"1000152" -> "1000627"  [label="DDG: last_y"];
"1000135" -> "1000627"  [label="DDG: w"];
"1000298" -> "1000627"  [label="DDG: i"];
"1000331" -> "1000627"  [label="DDG: i"];
"1000522" -> "1000627"  [label="DDG: i"];
"1000627" -> "1000641"  [label="DDG: i"];
"1000626" -> "1000625"  [label="AST: "];
"1000638" -> "1000626"  [label="CFG: "];
"1000642" -> "1000626"  [label="CFG: "];
"1000626" -> "1000644"  [label="DDG: !(progress(im, (int)per, 0, last_y, w, i))"];
"1000626" -> "1000644"  [label="DDG: progress(im, (int)per, 0, last_y, w, i)"];
"1000641" -> "1000619"  [label="AST: "];
"1000641" -> "1000643"  [label="CFG: "];
"1000642" -> "1000641"  [label="AST: "];
"1000643" -> "1000641"  [label="AST: "];
"1000644" -> "1000641"  [label="CFG: "];
"1000641" -> "1000644"  [label="DDG: i"];
"1000641" -> "1000644"  [label="DDG: last_y"];
"1000522" -> "1000518"  [label="AST: "];
"1000522" -> "1000524"  [label="CFG: "];
"1000523" -> "1000522"  [label="AST: "];
"1000524" -> "1000522"  [label="AST: "];
"1000530" -> "1000522"  [label="CFG: "];
"1000601" -> "1000522"  [label="CFG: "];
"1000522" -> "1000644"  [label="DDG: h"];
"1000522" -> "1000644"  [label="DDG: i < h"];
"1000522" -> "1000644"  [label="DDG: i"];
"1000519" -> "1000522"  [label="DDG: i"];
"1000525" -> "1000522"  [label="DDG: i"];
"1000522" -> "1000525"  [label="DDG: i"];
"1000525" -> "1000518"  [label="AST: "];
"1000525" -> "1000526"  [label="CFG: "];
"1000526" -> "1000525"  [label="AST: "];
"1000523" -> "1000525"  [label="CFG: "];
}
