digraph "0_libmodbus_5ccdf5ef79d742640355d1132fa9e2abc7fbaefc@integer" {
"1000810" [label="(Call,mapping_address = address - mb_mapping->start_registers)"];
"1000812" [label="(Call,address - mb_mapping->start_registers)"];
"1000160" [label="(Call,address = (req[offset + 1] << 8) + req[offset + 2])"];
"1000163" [label="(Call,req[offset + 1] << 8)"];
"1000116" [label="(MethodParameterIn,const uint8_t *req)"];
"1000841" [label="(Call,mapping_address < 0)"];
"1000840" [label="(Call,mapping_address < 0 ||\n                   (mapping_address + nb) > mb_mapping->nb_registers)"];
"1000844" [label="(Call,(mapping_address + nb) > mb_mapping->nb_registers)"];
"1000845" [label="(Call,mapping_address + nb)"];
"1000863" [label="(Call,mapping_address < 0)"];
"1000876" [label="(Call,i = mapping_address)"];
"1000882" [label="(Call,i < mapping_address + nb)"];
"1000888" [label="(Call,i++)"];
"1000884" [label="(Call,mapping_address + nb)"];
"1000400" [label="(Call,nb = (req[offset + 3] << 8) + req[offset + 4])"];
"1000177" [label="(Identifier,sft)"];
"1001382" [label="(MethodReturn,int)"];
"1001053" [label="(Call,or = (req[offset + 5] << 8) + req[offset + 6])"];
"1000810" [label="(Call,mapping_address = address - mb_mapping->start_registers)"];
"1000888" [label="(Call,i++)"];
"1000685" [label="(Call,(req[offset + 3] << 8) + req[offset + 4])"];
"1001153" [label="(Call,address - mb_mapping->start_registers)"];
"1001129" [label="(Call,(req[offset + 7] << 8) + req[offset + 8])"];
"1000848" [label="(Call,mb_mapping->nb_registers)"];
"1000841" [label="(Call,mapping_address < 0)"];
"1000854" [label="(Call,response_exception(\n                ctx, &sft, MODBUS_EXCEPTION_ILLEGAL_DATA_ADDRESS, rsp, FALSE,\n                \"Illegal data address 0x%0X in write_registers\n\",\n                mapping_address < 0 ? address : address + nb))"];
"1000875" [label="(Block,)"];
"1001293" [label="(Call,mb_mapping->tab_registers[i] =\n                    (req[offset + j] << 8) + req[offset + j + 1])"];
"1000849" [label="(Identifier,mb_mapping)"];
"1000900" [label="(Call,(req[offset + j] << 8) + req[offset + j + 1])"];
"1000889" [label="(Identifier,i)"];
"1000876" [label="(Call,i = mapping_address)"];
"1000880" [label="(Identifier,j)"];
"1001299" [label="(Call,(req[offset + j] << 8) + req[offset + j + 1])"];
"1000901" [label="(Call,req[offset + j] << 8)"];
"1000683" [label="(Call,nb = (req[offset + 3] << 8) + req[offset + 4])"];
"1001300" [label="(Call,req[offset + j] << 8)"];
"1000819" [label="(Call,nb < 1)"];
"1000813" [label="(Identifier,address)"];
"1000116" [label="(MethodParameterIn,const uint8_t *req)"];
"1000878" [label="(Identifier,mapping_address)"];
"1001097" [label="(Call,(req[offset + 3] << 8) + req[offset + 4])"];
"1000885" [label="(Identifier,mapping_address)"];
"1000811" [label="(Identifier,mapping_address)"];
"1000884" [label="(Call,mapping_address + nb)"];
"1000119" [label="(Block,)"];
"1000162" [label="(Call,(req[offset + 1] << 8) + req[offset + 2])"];
"1000999" [label="(Call,address - mb_mapping->start_registers)"];
"1000418" [label="(Call,address - start_registers)"];
"1001055" [label="(Call,(req[offset + 5] << 8) + req[offset + 6])"];
"1001111" [label="(Call,address_write = (req[offset + 5] << 8) + req[offset + 6])"];
"1000792" [label="(Block,)"];
"1000672" [label="(Call,memcpy(rsp, req, req_length))"];
"1000189" [label="(Call,ctx->backend->prepare_response_tid(req, &req_length))"];
"1001098" [label="(Call,req[offset + 3] << 8)"];
"1000245" [label="(Call,nb = (req[offset + 3] << 8) + req[offset + 4])"];
"1000843" [label="(Literal,0)"];
"1001113" [label="(Call,(req[offset + 5] << 8) + req[offset + 6])"];
"1000886" [label="(Identifier,nb)"];
"1000148" [label="(Call,slave = req[offset - 1])"];
"1000846" [label="(Identifier,mapping_address)"];
"1000866" [label="(Identifier,address)"];
"1000883" [label="(Identifier,i)"];
"1000916" [label="(Identifier,rsp_length)"];
"1000561" [label="(Call,(req[offset + 3] << 8) + req[offset + 4])"];
"1001037" [label="(Call,and = (req[offset + 3] << 8) + req[offset + 4])"];
"1000779" [label="(Call,memcpy(rsp + rsp_length, req + rsp_length, 4))"];
"1000847" [label="(Identifier,nb)"];
"1000865" [label="(Literal,0)"];
"1000169" [label="(Literal,8)"];
"1000263" [label="(Call,address - start_bits)"];
"1001039" [label="(Call,(req[offset + 3] << 8) + req[offset + 4])"];
"1001130" [label="(Call,req[offset + 7] << 8)"];
"1000161" [label="(Identifier,address)"];
"1000864" [label="(Identifier,mapping_address)"];
"1000891" [label="(Identifier,j)"];
"1000887" [label="(Block,)"];
"1001084" [label="(Call,memcpy(rsp, req, req_length))"];
"1000877" [label="(Identifier,i)"];
"1000155" [label="(Call,function = req[offset])"];
"1001114" [label="(Call,req[offset + 5] << 8)"];
"1000796" [label="(Call,(req[offset + 3] << 8) + req[offset + 4])"];
"1000882" [label="(Call,i < mapping_address + nb)"];
"1000814" [label="(Call,mb_mapping->start_registers)"];
"1000844" [label="(Call,(mapping_address + nb) > mb_mapping->nb_registers)"];
"1000620" [label="(Call,address - mb_mapping->start_registers)"];
"1000248" [label="(Call,req[offset + 3] << 8)"];
"1000783" [label="(Call,req + rsp_length)"];
"1000867" [label="(Call,address + nb)"];
"1000650" [label="(Call,data = (req[offset + 3] << 8) + req[offset + 4])"];
"1000794" [label="(Call,nb = (req[offset + 3] << 8) + req[offset + 4])"];
"1000822" [label="(Call,MODBUS_MAX_WRITE_REGISTERS < nb)"];
"1000163" [label="(Call,req[offset + 1] << 8)"];
"1000853" [label="(Identifier,rsp_length)"];
"1000562" [label="(Call,req[offset + 3] << 8)"];
"1000842" [label="(Identifier,mapping_address)"];
"1000874" [label="(ControlStructure,for (i = mapping_address, j = 6; i < mapping_address + nb; i++, j += 2))"];
"1001056" [label="(Call,req[offset + 5] << 8)"];
"1000529" [label="(Call,address - mb_mapping->start_bits)"];
"1000921" [label="(Call,memcpy(rsp + rsp_length, req + rsp_length, 4))"];
"1000653" [label="(Call,req[offset + 3] << 8)"];
"1001127" [label="(Call,nb_write = (req[offset + 7] << 8) + req[offset + 8])"];
"1000863" [label="(Call,mapping_address < 0)"];
"1000925" [label="(Call,req + rsp_length)"];
"1001143" [label="(Call,nb_write_bytes = req[offset + 9])"];
"1000840" [label="(Call,mapping_address < 0 ||\n                   (mapping_address + nb) > mb_mapping->nb_registers)"];
"1000897" [label="(Identifier,mb_mapping)"];
"1000247" [label="(Call,(req[offset + 3] << 8) + req[offset + 4])"];
"1000164" [label="(Call,req[offset + 1])"];
"1000862" [label="(Call,mapping_address < 0 ? address : address + nb)"];
"1000686" [label="(Call,req[offset + 3] << 8)"];
"1000839" [label="(ControlStructure,if (mapping_address < 0 ||\n                   (mapping_address + nb) > mb_mapping->nb_registers))"];
"1001040" [label="(Call,req[offset + 3] << 8)"];
"1000868" [label="(Identifier,address)"];
"1000171" [label="(Identifier,req)"];
"1000402" [label="(Call,(req[offset + 3] << 8) + req[offset + 4])"];
"1000559" [label="(Call,data = (req[offset + 3] << 8) + req[offset + 4])"];
"1000593" [label="(Call,memcpy(rsp, req, req_length))"];
"1000845" [label="(Call,mapping_address + nb)"];
"1001095" [label="(Call,nb = (req[offset + 3] << 8) + req[offset + 4])"];
"1000812" [label="(Call,address - mb_mapping->start_registers)"];
"1000894" [label="(Call,mb_mapping->tab_registers[i] =\n                    (req[offset + j] << 8) + req[offset + j + 1])"];
"1000820" [label="(Identifier,nb)"];
"1000701" [label="(Call,address - mb_mapping->start_bits)"];
"1000160" [label="(Call,address = (req[offset + 1] << 8) + req[offset + 2])"];
"1000652" [label="(Call,(req[offset + 3] << 8) + req[offset + 4])"];
"1000403" [label="(Call,req[offset + 3] << 8)"];
"1000797" [label="(Call,req[offset + 3] << 8)"];
"1000810" -> "1000792"  [label="AST: "];
"1000810" -> "1000812"  [label="CFG: "];
"1000811" -> "1000810"  [label="AST: "];
"1000812" -> "1000810"  [label="AST: "];
"1000820" -> "1000810"  [label="CFG: "];
"1000810" -> "1001382"  [label="DDG: mapping_address"];
"1000810" -> "1001382"  [label="DDG: address - mb_mapping->start_registers"];
"1000812" -> "1000810"  [label="DDG: address"];
"1000812" -> "1000810"  [label="DDG: mb_mapping->start_registers"];
"1000810" -> "1000841"  [label="DDG: mapping_address"];
"1000812" -> "1000814"  [label="CFG: "];
"1000813" -> "1000812"  [label="AST: "];
"1000814" -> "1000812"  [label="AST: "];
"1000812" -> "1001382"  [label="DDG: mb_mapping->start_registers"];
"1000812" -> "1001382"  [label="DDG: address"];
"1000160" -> "1000812"  [label="DDG: address"];
"1000812" -> "1000854"  [label="DDG: address"];
"1000812" -> "1000862"  [label="DDG: address"];
"1000812" -> "1000867"  [label="DDG: address"];
"1000160" -> "1000119"  [label="AST: "];
"1000160" -> "1000162"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000162" -> "1000160"  [label="AST: "];
"1000177" -> "1000160"  [label="CFG: "];
"1000160" -> "1001382"  [label="DDG: (req[offset + 1] << 8) + req[offset + 2]"];
"1000160" -> "1001382"  [label="DDG: address"];
"1000163" -> "1000160"  [label="DDG: req[offset + 1]"];
"1000163" -> "1000160"  [label="DDG: 8"];
"1000116" -> "1000160"  [label="DDG: req"];
"1000160" -> "1000263"  [label="DDG: address"];
"1000160" -> "1000418"  [label="DDG: address"];
"1000160" -> "1000529"  [label="DDG: address"];
"1000160" -> "1000620"  [label="DDG: address"];
"1000160" -> "1000701"  [label="DDG: address"];
"1000160" -> "1000999"  [label="DDG: address"];
"1000160" -> "1001153"  [label="DDG: address"];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000169"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000169" -> "1000163"  [label="AST: "];
"1000171" -> "1000163"  [label="CFG: "];
"1000163" -> "1001382"  [label="DDG: req[offset + 1]"];
"1000163" -> "1000162"  [label="DDG: req[offset + 1]"];
"1000163" -> "1000162"  [label="DDG: 8"];
"1000116" -> "1000163"  [label="DDG: req"];
"1000163" -> "1000189"  [label="DDG: req[offset + 1]"];
"1000163" -> "1000593"  [label="DDG: req[offset + 1]"];
"1000163" -> "1000672"  [label="DDG: req[offset + 1]"];
"1000163" -> "1000779"  [label="DDG: req[offset + 1]"];
"1000163" -> "1000783"  [label="DDG: req[offset + 1]"];
"1000163" -> "1000921"  [label="DDG: req[offset + 1]"];
"1000163" -> "1000925"  [label="DDG: req[offset + 1]"];
"1000163" -> "1001084"  [label="DDG: req[offset + 1]"];
"1000116" -> "1000114"  [label="AST: "];
"1000116" -> "1001382"  [label="DDG: req"];
"1000116" -> "1000148"  [label="DDG: req"];
"1000116" -> "1000155"  [label="DDG: req"];
"1000116" -> "1000162"  [label="DDG: req"];
"1000116" -> "1000189"  [label="DDG: req"];
"1000116" -> "1000245"  [label="DDG: req"];
"1000116" -> "1000248"  [label="DDG: req"];
"1000116" -> "1000247"  [label="DDG: req"];
"1000116" -> "1000400"  [label="DDG: req"];
"1000116" -> "1000403"  [label="DDG: req"];
"1000116" -> "1000402"  [label="DDG: req"];
"1000116" -> "1000559"  [label="DDG: req"];
"1000116" -> "1000562"  [label="DDG: req"];
"1000116" -> "1000561"  [label="DDG: req"];
"1000116" -> "1000593"  [label="DDG: req"];
"1000116" -> "1000650"  [label="DDG: req"];
"1000116" -> "1000653"  [label="DDG: req"];
"1000116" -> "1000652"  [label="DDG: req"];
"1000116" -> "1000672"  [label="DDG: req"];
"1000116" -> "1000683"  [label="DDG: req"];
"1000116" -> "1000686"  [label="DDG: req"];
"1000116" -> "1000685"  [label="DDG: req"];
"1000116" -> "1000779"  [label="DDG: req"];
"1000116" -> "1000783"  [label="DDG: req"];
"1000116" -> "1000794"  [label="DDG: req"];
"1000116" -> "1000797"  [label="DDG: req"];
"1000116" -> "1000796"  [label="DDG: req"];
"1000116" -> "1000894"  [label="DDG: req"];
"1000116" -> "1000901"  [label="DDG: req"];
"1000116" -> "1000900"  [label="DDG: req"];
"1000116" -> "1000921"  [label="DDG: req"];
"1000116" -> "1000925"  [label="DDG: req"];
"1000116" -> "1001037"  [label="DDG: req"];
"1000116" -> "1001040"  [label="DDG: req"];
"1000116" -> "1001039"  [label="DDG: req"];
"1000116" -> "1001053"  [label="DDG: req"];
"1000116" -> "1001056"  [label="DDG: req"];
"1000116" -> "1001055"  [label="DDG: req"];
"1000116" -> "1001084"  [label="DDG: req"];
"1000116" -> "1001095"  [label="DDG: req"];
"1000116" -> "1001098"  [label="DDG: req"];
"1000116" -> "1001097"  [label="DDG: req"];
"1000116" -> "1001111"  [label="DDG: req"];
"1000116" -> "1001114"  [label="DDG: req"];
"1000116" -> "1001113"  [label="DDG: req"];
"1000116" -> "1001127"  [label="DDG: req"];
"1000116" -> "1001130"  [label="DDG: req"];
"1000116" -> "1001129"  [label="DDG: req"];
"1000116" -> "1001143"  [label="DDG: req"];
"1000116" -> "1001293"  [label="DDG: req"];
"1000116" -> "1001300"  [label="DDG: req"];
"1000116" -> "1001299"  [label="DDG: req"];
"1000841" -> "1000840"  [label="AST: "];
"1000841" -> "1000843"  [label="CFG: "];
"1000842" -> "1000841"  [label="AST: "];
"1000843" -> "1000841"  [label="AST: "];
"1000846" -> "1000841"  [label="CFG: "];
"1000840" -> "1000841"  [label="CFG: "];
"1000841" -> "1000840"  [label="DDG: mapping_address"];
"1000841" -> "1000840"  [label="DDG: 0"];
"1000841" -> "1000844"  [label="DDG: mapping_address"];
"1000841" -> "1000845"  [label="DDG: mapping_address"];
"1000841" -> "1000863"  [label="DDG: mapping_address"];
"1000841" -> "1000876"  [label="DDG: mapping_address"];
"1000841" -> "1000882"  [label="DDG: mapping_address"];
"1000841" -> "1000884"  [label="DDG: mapping_address"];
"1000840" -> "1000839"  [label="AST: "];
"1000840" -> "1000844"  [label="CFG: "];
"1000844" -> "1000840"  [label="AST: "];
"1000853" -> "1000840"  [label="CFG: "];
"1000877" -> "1000840"  [label="CFG: "];
"1000840" -> "1001382"  [label="DDG: (mapping_address + nb) > mb_mapping->nb_registers"];
"1000840" -> "1001382"  [label="DDG: mapping_address < 0 ||\n                   (mapping_address + nb) > mb_mapping->nb_registers"];
"1000840" -> "1001382"  [label="DDG: mapping_address < 0"];
"1000844" -> "1000840"  [label="DDG: mapping_address + nb"];
"1000844" -> "1000840"  [label="DDG: mb_mapping->nb_registers"];
"1000844" -> "1000848"  [label="CFG: "];
"1000845" -> "1000844"  [label="AST: "];
"1000848" -> "1000844"  [label="AST: "];
"1000844" -> "1001382"  [label="DDG: mb_mapping->nb_registers"];
"1000844" -> "1001382"  [label="DDG: mapping_address + nb"];
"1000822" -> "1000844"  [label="DDG: nb"];
"1000819" -> "1000844"  [label="DDG: nb"];
"1000845" -> "1000847"  [label="CFG: "];
"1000846" -> "1000845"  [label="AST: "];
"1000847" -> "1000845"  [label="AST: "];
"1000849" -> "1000845"  [label="CFG: "];
"1000845" -> "1001382"  [label="DDG: nb"];
"1000822" -> "1000845"  [label="DDG: nb"];
"1000819" -> "1000845"  [label="DDG: nb"];
"1000863" -> "1000862"  [label="AST: "];
"1000863" -> "1000865"  [label="CFG: "];
"1000864" -> "1000863"  [label="AST: "];
"1000865" -> "1000863"  [label="AST: "];
"1000866" -> "1000863"  [label="CFG: "];
"1000868" -> "1000863"  [label="CFG: "];
"1000863" -> "1001382"  [label="DDG: mapping_address"];
"1000876" -> "1000875"  [label="AST: "];
"1000876" -> "1000878"  [label="CFG: "];
"1000877" -> "1000876"  [label="AST: "];
"1000878" -> "1000876"  [label="AST: "];
"1000880" -> "1000876"  [label="CFG: "];
"1000876" -> "1000882"  [label="DDG: i"];
"1000882" -> "1000874"  [label="AST: "];
"1000882" -> "1000884"  [label="CFG: "];
"1000883" -> "1000882"  [label="AST: "];
"1000884" -> "1000882"  [label="AST: "];
"1000897" -> "1000882"  [label="CFG: "];
"1000916" -> "1000882"  [label="CFG: "];
"1000882" -> "1001382"  [label="DDG: i"];
"1000882" -> "1001382"  [label="DDG: mapping_address + nb"];
"1000882" -> "1001382"  [label="DDG: i < mapping_address + nb"];
"1000888" -> "1000882"  [label="DDG: i"];
"1000822" -> "1000882"  [label="DDG: nb"];
"1000819" -> "1000882"  [label="DDG: nb"];
"1000882" -> "1000888"  [label="DDG: i"];
"1000888" -> "1000887"  [label="AST: "];
"1000888" -> "1000889"  [label="CFG: "];
"1000889" -> "1000888"  [label="AST: "];
"1000891" -> "1000888"  [label="CFG: "];
"1000884" -> "1000886"  [label="CFG: "];
"1000885" -> "1000884"  [label="AST: "];
"1000886" -> "1000884"  [label="AST: "];
"1000884" -> "1001382"  [label="DDG: mapping_address"];
"1000884" -> "1001382"  [label="DDG: nb"];
"1000822" -> "1000884"  [label="DDG: nb"];
"1000819" -> "1000884"  [label="DDG: nb"];
}
