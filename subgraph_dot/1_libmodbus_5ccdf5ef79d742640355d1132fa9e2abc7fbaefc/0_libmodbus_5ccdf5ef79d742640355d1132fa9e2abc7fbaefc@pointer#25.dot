digraph "0_libmodbus_5ccdf5ef79d742640355d1132fa9e2abc7fbaefc@pointer" {
"1001143" [label="(Call,nb_write_bytes = req[offset + 9])"];
"1000189" [label="(Call,ctx->backend->prepare_response_tid(req, &req_length))"];
"1000163" [label="(Call,req[offset + 1] << 8)"];
"1000116" [label="(MethodParameterIn,const uint8_t *req)"];
"1001183" [label="(Call,nb_write_bytes != nb_write * 2)"];
"1001179" [label="(Call,MODBUS_MAX_WR_READ_REGISTERS < nb ||\n            nb_write_bytes != nb_write * 2)"];
"1001175" [label="(Call,nb < 1 || MODBUS_MAX_WR_READ_REGISTERS < nb ||\n            nb_write_bytes != nb_write * 2)"];
"1001171" [label="(Call,MODBUS_MAX_WR_WRITE_REGISTERS < nb_write ||\n            nb < 1 || MODBUS_MAX_WR_READ_REGISTERS < nb ||\n            nb_write_bytes != nb_write * 2)"];
"1001167" [label="(Call,nb_write < 1 || MODBUS_MAX_WR_WRITE_REGISTERS < nb_write ||\n            nb < 1 || MODBUS_MAX_WR_READ_REGISTERS < nb ||\n            nb_write_bytes != nb_write * 2)"];
"1001130" [label="(Call,req[offset + 7] << 8)"];
"1000116" [label="(MethodParameterIn,const uint8_t *req)"];
"1000190" [label="(Identifier,req)"];
"1000400" [label="(Call,nb = (req[offset + 3] << 8) + req[offset + 4])"];
"1001184" [label="(Identifier,nb_write_bytes)"];
"1001056" [label="(Call,req[offset + 5] << 8)"];
"1000921" [label="(Call,memcpy(rsp + rsp_length, req + rsp_length, 4))"];
"1001382" [label="(MethodReturn,int)"];
"1000653" [label="(Call,req[offset + 3] << 8)"];
"1001166" [label="(ControlStructure,if (nb_write < 1 || MODBUS_MAX_WR_WRITE_REGISTERS < nb_write ||\n            nb < 1 || MODBUS_MAX_WR_READ_REGISTERS < nb ||\n            nb_write_bytes != nb_write * 2))"];
"1001152" [label="(Identifier,mapping_address)"];
"1001145" [label="(Call,req[offset + 9])"];
"1001175" [label="(Call,nb < 1 || MODBUS_MAX_WR_READ_REGISTERS < nb ||\n            nb_write_bytes != nb_write * 2)"];
"1001127" [label="(Call,nb_write = (req[offset + 7] << 8) + req[offset + 8])"];
"1001097" [label="(Call,(req[offset + 3] << 8) + req[offset + 4])"];
"1001053" [label="(Call,or = (req[offset + 5] << 8) + req[offset + 6])"];
"1001179" [label="(Call,MODBUS_MAX_WR_READ_REGISTERS < nb ||\n            nb_write_bytes != nb_write * 2)"];
"1000925" [label="(Call,req + rsp_length)"];
"1001084" [label="(Call,memcpy(rsp, req, req_length))"];
"1001143" [label="(Call,nb_write_bytes = req[offset + 9])"];
"1000685" [label="(Call,(req[offset + 3] << 8) + req[offset + 4])"];
"1001114" [label="(Call,req[offset + 5] << 8)"];
"1001183" [label="(Call,nb_write_bytes != nb_write * 2)"];
"1001129" [label="(Call,(req[offset + 7] << 8) + req[offset + 8])"];
"1000247" [label="(Call,(req[offset + 3] << 8) + req[offset + 4])"];
"1000155" [label="(Call,function = req[offset])"];
"1001176" [label="(Call,nb < 1)"];
"1000164" [label="(Call,req[offset + 1])"];
"1001172" [label="(Call,MODBUS_MAX_WR_WRITE_REGISTERS < nb_write)"];
"1001207" [label="(Identifier,mapping_address)"];
"1000796" [label="(Call,(req[offset + 3] << 8) + req[offset + 4])"];
"1000191" [label="(Call,&req_length)"];
"1000686" [label="(Call,req[offset + 3] << 8)"];
"1000162" [label="(Call,(req[offset + 1] << 8) + req[offset + 2])"];
"1001144" [label="(Identifier,nb_write_bytes)"];
"1001040" [label="(Call,req[offset + 3] << 8)"];
"1000171" [label="(Identifier,req)"];
"1001180" [label="(Call,MODBUS_MAX_WR_READ_REGISTERS < nb)"];
"1001055" [label="(Call,(req[offset + 5] << 8) + req[offset + 6])"];
"1001111" [label="(Call,address_write = (req[offset + 5] << 8) + req[offset + 6])"];
"1000248" [label="(Call,req[offset + 3] << 8)"];
"1000402" [label="(Call,(req[offset + 3] << 8) + req[offset + 4])"];
"1000559" [label="(Call,data = (req[offset + 3] << 8) + req[offset + 4])"];
"1000672" [label="(Call,memcpy(rsp, req, req_length))"];
"1001293" [label="(Call,mb_mapping->tab_registers[i] =\n                    (req[offset + j] << 8) + req[offset + j + 1])"];
"1000189" [label="(Call,ctx->backend->prepare_response_tid(req, &req_length))"];
"1000783" [label="(Call,req + rsp_length)"];
"1001098" [label="(Call,req[offset + 3] << 8)"];
"1001171" [label="(Call,MODBUS_MAX_WR_WRITE_REGISTERS < nb_write ||\n            nb < 1 || MODBUS_MAX_WR_READ_REGISTERS < nb ||\n            nb_write_bytes != nb_write * 2)"];
"1000593" [label="(Call,memcpy(rsp, req, req_length))"];
"1001167" [label="(Call,nb_write < 1 || MODBUS_MAX_WR_WRITE_REGISTERS < nb_write ||\n            nb < 1 || MODBUS_MAX_WR_READ_REGISTERS < nb ||\n            nb_write_bytes != nb_write * 2)"];
"1001095" [label="(Call,nb = (req[offset + 3] << 8) + req[offset + 4])"];
"1000650" [label="(Call,data = (req[offset + 3] << 8) + req[offset + 4])"];
"1001168" [label="(Call,nb_write < 1)"];
"1000245" [label="(Call,nb = (req[offset + 3] << 8) + req[offset + 4])"];
"1001190" [label="(Identifier,rsp_length)"];
"1000794" [label="(Call,nb = (req[offset + 3] << 8) + req[offset + 4])"];
"1000900" [label="(Call,(req[offset + j] << 8) + req[offset + j + 1])"];
"1001113" [label="(Call,(req[offset + 5] << 8) + req[offset + 6])"];
"1000148" [label="(Call,slave = req[offset - 1])"];
"1000163" [label="(Call,req[offset + 1] << 8)"];
"1000894" [label="(Call,mb_mapping->tab_registers[i] =\n                    (req[offset + j] << 8) + req[offset + j + 1])"];
"1001185" [label="(Call,nb_write * 2)"];
"1000561" [label="(Call,(req[offset + 3] << 8) + req[offset + 4])"];
"1001037" [label="(Call,and = (req[offset + 3] << 8) + req[offset + 4])"];
"1000901" [label="(Call,req[offset + j] << 8)"];
"1001299" [label="(Call,(req[offset + j] << 8) + req[offset + j + 1])"];
"1000683" [label="(Call,nb = (req[offset + 3] << 8) + req[offset + 4])"];
"1000779" [label="(Call,memcpy(rsp + rsp_length, req + rsp_length, 4))"];
"1000160" [label="(Call,address = (req[offset + 1] << 8) + req[offset + 2])"];
"1000562" [label="(Call,req[offset + 3] << 8)"];
"1001300" [label="(Call,req[offset + j] << 8)"];
"1001093" [label="(Block,)"];
"1000185" [label="(Call,sft.t_id = ctx->backend->prepare_response_tid(req, &req_length))"];
"1000652" [label="(Call,(req[offset + 3] << 8) + req[offset + 4])"];
"1000169" [label="(Literal,8)"];
"1000403" [label="(Call,req[offset + 3] << 8)"];
"1000797" [label="(Call,req[offset + 3] << 8)"];
"1001039" [label="(Call,(req[offset + 3] << 8) + req[offset + 4])"];
"1001143" -> "1001093"  [label="AST: "];
"1001143" -> "1001145"  [label="CFG: "];
"1001144" -> "1001143"  [label="AST: "];
"1001145" -> "1001143"  [label="AST: "];
"1001152" -> "1001143"  [label="CFG: "];
"1001143" -> "1001382"  [label="DDG: req[offset + 9]"];
"1001143" -> "1001382"  [label="DDG: nb_write_bytes"];
"1000189" -> "1001143"  [label="DDG: req"];
"1000116" -> "1001143"  [label="DDG: req"];
"1001143" -> "1001183"  [label="DDG: nb_write_bytes"];
"1000189" -> "1000185"  [label="AST: "];
"1000189" -> "1000191"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000191" -> "1000189"  [label="AST: "];
"1000185" -> "1000189"  [label="CFG: "];
"1000189" -> "1001382"  [label="DDG: req"];
"1000189" -> "1001382"  [label="DDG: &req_length"];
"1000189" -> "1000185"  [label="DDG: req"];
"1000189" -> "1000185"  [label="DDG: &req_length"];
"1000163" -> "1000189"  [label="DDG: req[offset + 1]"];
"1000116" -> "1000189"  [label="DDG: req"];
"1000189" -> "1000245"  [label="DDG: req"];
"1000189" -> "1000248"  [label="DDG: req"];
"1000189" -> "1000247"  [label="DDG: req"];
"1000189" -> "1000400"  [label="DDG: req"];
"1000189" -> "1000403"  [label="DDG: req"];
"1000189" -> "1000402"  [label="DDG: req"];
"1000189" -> "1000559"  [label="DDG: req"];
"1000189" -> "1000562"  [label="DDG: req"];
"1000189" -> "1000561"  [label="DDG: req"];
"1000189" -> "1000593"  [label="DDG: req"];
"1000189" -> "1000650"  [label="DDG: req"];
"1000189" -> "1000653"  [label="DDG: req"];
"1000189" -> "1000652"  [label="DDG: req"];
"1000189" -> "1000672"  [label="DDG: req"];
"1000189" -> "1000683"  [label="DDG: req"];
"1000189" -> "1000686"  [label="DDG: req"];
"1000189" -> "1000685"  [label="DDG: req"];
"1000189" -> "1000779"  [label="DDG: req"];
"1000189" -> "1000783"  [label="DDG: req"];
"1000189" -> "1000794"  [label="DDG: req"];
"1000189" -> "1000797"  [label="DDG: req"];
"1000189" -> "1000796"  [label="DDG: req"];
"1000189" -> "1000894"  [label="DDG: req"];
"1000189" -> "1000901"  [label="DDG: req"];
"1000189" -> "1000900"  [label="DDG: req"];
"1000189" -> "1000921"  [label="DDG: req"];
"1000189" -> "1000925"  [label="DDG: req"];
"1000189" -> "1001037"  [label="DDG: req"];
"1000189" -> "1001040"  [label="DDG: req"];
"1000189" -> "1001039"  [label="DDG: req"];
"1000189" -> "1001053"  [label="DDG: req"];
"1000189" -> "1001056"  [label="DDG: req"];
"1000189" -> "1001055"  [label="DDG: req"];
"1000189" -> "1001084"  [label="DDG: req"];
"1000189" -> "1001095"  [label="DDG: req"];
"1000189" -> "1001098"  [label="DDG: req"];
"1000189" -> "1001097"  [label="DDG: req"];
"1000189" -> "1001111"  [label="DDG: req"];
"1000189" -> "1001114"  [label="DDG: req"];
"1000189" -> "1001113"  [label="DDG: req"];
"1000189" -> "1001127"  [label="DDG: req"];
"1000189" -> "1001130"  [label="DDG: req"];
"1000189" -> "1001129"  [label="DDG: req"];
"1000189" -> "1001293"  [label="DDG: req"];
"1000189" -> "1001300"  [label="DDG: req"];
"1000189" -> "1001299"  [label="DDG: req"];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000169"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000169" -> "1000163"  [label="AST: "];
"1000171" -> "1000163"  [label="CFG: "];
"1000163" -> "1001382"  [label="DDG: req[offset + 1]"];
"1000163" -> "1000160"  [label="DDG: req[offset + 1]"];
"1000163" -> "1000160"  [label="DDG: 8"];
"1000163" -> "1000162"  [label="DDG: req[offset + 1]"];
"1000163" -> "1000162"  [label="DDG: 8"];
"1000116" -> "1000163"  [label="DDG: req"];
"1000163" -> "1000593"  [label="DDG: req[offset + 1]"];
"1000163" -> "1000672"  [label="DDG: req[offset + 1]"];
"1000163" -> "1000779"  [label="DDG: req[offset + 1]"];
"1000163" -> "1000783"  [label="DDG: req[offset + 1]"];
"1000163" -> "1000921"  [label="DDG: req[offset + 1]"];
"1000163" -> "1000925"  [label="DDG: req[offset + 1]"];
"1000163" -> "1001084"  [label="DDG: req[offset + 1]"];
"1000116" -> "1000114"  [label="AST: "];
"1000116" -> "1001382"  [label="DDG: req"];
"1000116" -> "1000148"  [label="DDG: req"];
"1000116" -> "1000155"  [label="DDG: req"];
"1000116" -> "1000160"  [label="DDG: req"];
"1000116" -> "1000162"  [label="DDG: req"];
"1000116" -> "1000245"  [label="DDG: req"];
"1000116" -> "1000248"  [label="DDG: req"];
"1000116" -> "1000247"  [label="DDG: req"];
"1000116" -> "1000400"  [label="DDG: req"];
"1000116" -> "1000403"  [label="DDG: req"];
"1000116" -> "1000402"  [label="DDG: req"];
"1000116" -> "1000559"  [label="DDG: req"];
"1000116" -> "1000562"  [label="DDG: req"];
"1000116" -> "1000561"  [label="DDG: req"];
"1000116" -> "1000593"  [label="DDG: req"];
"1000116" -> "1000650"  [label="DDG: req"];
"1000116" -> "1000653"  [label="DDG: req"];
"1000116" -> "1000652"  [label="DDG: req"];
"1000116" -> "1000672"  [label="DDG: req"];
"1000116" -> "1000683"  [label="DDG: req"];
"1000116" -> "1000686"  [label="DDG: req"];
"1000116" -> "1000685"  [label="DDG: req"];
"1000116" -> "1000779"  [label="DDG: req"];
"1000116" -> "1000783"  [label="DDG: req"];
"1000116" -> "1000794"  [label="DDG: req"];
"1000116" -> "1000797"  [label="DDG: req"];
"1000116" -> "1000796"  [label="DDG: req"];
"1000116" -> "1000894"  [label="DDG: req"];
"1000116" -> "1000901"  [label="DDG: req"];
"1000116" -> "1000900"  [label="DDG: req"];
"1000116" -> "1000921"  [label="DDG: req"];
"1000116" -> "1000925"  [label="DDG: req"];
"1000116" -> "1001037"  [label="DDG: req"];
"1000116" -> "1001040"  [label="DDG: req"];
"1000116" -> "1001039"  [label="DDG: req"];
"1000116" -> "1001053"  [label="DDG: req"];
"1000116" -> "1001056"  [label="DDG: req"];
"1000116" -> "1001055"  [label="DDG: req"];
"1000116" -> "1001084"  [label="DDG: req"];
"1000116" -> "1001095"  [label="DDG: req"];
"1000116" -> "1001098"  [label="DDG: req"];
"1000116" -> "1001097"  [label="DDG: req"];
"1000116" -> "1001111"  [label="DDG: req"];
"1000116" -> "1001114"  [label="DDG: req"];
"1000116" -> "1001113"  [label="DDG: req"];
"1000116" -> "1001127"  [label="DDG: req"];
"1000116" -> "1001130"  [label="DDG: req"];
"1000116" -> "1001129"  [label="DDG: req"];
"1000116" -> "1001293"  [label="DDG: req"];
"1000116" -> "1001300"  [label="DDG: req"];
"1000116" -> "1001299"  [label="DDG: req"];
"1001183" -> "1001179"  [label="AST: "];
"1001183" -> "1001185"  [label="CFG: "];
"1001184" -> "1001183"  [label="AST: "];
"1001185" -> "1001183"  [label="AST: "];
"1001179" -> "1001183"  [label="CFG: "];
"1001183" -> "1001382"  [label="DDG: nb_write * 2"];
"1001183" -> "1001382"  [label="DDG: nb_write_bytes"];
"1001183" -> "1001179"  [label="DDG: nb_write_bytes"];
"1001183" -> "1001179"  [label="DDG: nb_write * 2"];
"1001185" -> "1001183"  [label="DDG: nb_write"];
"1001185" -> "1001183"  [label="DDG: 2"];
"1001179" -> "1001175"  [label="AST: "];
"1001179" -> "1001180"  [label="CFG: "];
"1001180" -> "1001179"  [label="AST: "];
"1001175" -> "1001179"  [label="CFG: "];
"1001179" -> "1001382"  [label="DDG: MODBUS_MAX_WR_READ_REGISTERS < nb"];
"1001179" -> "1001382"  [label="DDG: nb_write_bytes != nb_write * 2"];
"1001179" -> "1001175"  [label="DDG: MODBUS_MAX_WR_READ_REGISTERS < nb"];
"1001179" -> "1001175"  [label="DDG: nb_write_bytes != nb_write * 2"];
"1001180" -> "1001179"  [label="DDG: MODBUS_MAX_WR_READ_REGISTERS"];
"1001180" -> "1001179"  [label="DDG: nb"];
"1001175" -> "1001171"  [label="AST: "];
"1001175" -> "1001176"  [label="CFG: "];
"1001176" -> "1001175"  [label="AST: "];
"1001171" -> "1001175"  [label="CFG: "];
"1001175" -> "1001382"  [label="DDG: nb < 1"];
"1001175" -> "1001382"  [label="DDG: MODBUS_MAX_WR_READ_REGISTERS < nb ||\n            nb_write_bytes != nb_write * 2"];
"1001175" -> "1001171"  [label="DDG: nb < 1"];
"1001175" -> "1001171"  [label="DDG: MODBUS_MAX_WR_READ_REGISTERS < nb ||\n            nb_write_bytes != nb_write * 2"];
"1001176" -> "1001175"  [label="DDG: nb"];
"1001176" -> "1001175"  [label="DDG: 1"];
"1001171" -> "1001167"  [label="AST: "];
"1001171" -> "1001172"  [label="CFG: "];
"1001172" -> "1001171"  [label="AST: "];
"1001167" -> "1001171"  [label="CFG: "];
"1001171" -> "1001382"  [label="DDG: MODBUS_MAX_WR_WRITE_REGISTERS < nb_write"];
"1001171" -> "1001382"  [label="DDG: nb < 1 || MODBUS_MAX_WR_READ_REGISTERS < nb ||\n            nb_write_bytes != nb_write * 2"];
"1001171" -> "1001167"  [label="DDG: MODBUS_MAX_WR_WRITE_REGISTERS < nb_write"];
"1001171" -> "1001167"  [label="DDG: nb < 1 || MODBUS_MAX_WR_READ_REGISTERS < nb ||\n            nb_write_bytes != nb_write * 2"];
"1001172" -> "1001171"  [label="DDG: MODBUS_MAX_WR_WRITE_REGISTERS"];
"1001172" -> "1001171"  [label="DDG: nb_write"];
"1001167" -> "1001166"  [label="AST: "];
"1001167" -> "1001168"  [label="CFG: "];
"1001168" -> "1001167"  [label="AST: "];
"1001190" -> "1001167"  [label="CFG: "];
"1001207" -> "1001167"  [label="CFG: "];
"1001167" -> "1001382"  [label="DDG: nb_write < 1 || MODBUS_MAX_WR_WRITE_REGISTERS < nb_write ||\n            nb < 1 || MODBUS_MAX_WR_READ_REGISTERS < nb ||\n            nb_write_bytes != nb_write * 2"];
"1001167" -> "1001382"  [label="DDG: nb_write < 1"];
"1001167" -> "1001382"  [label="DDG: MODBUS_MAX_WR_WRITE_REGISTERS < nb_write ||\n            nb < 1 || MODBUS_MAX_WR_READ_REGISTERS < nb ||\n            nb_write_bytes != nb_write * 2"];
"1001168" -> "1001167"  [label="DDG: nb_write"];
"1001168" -> "1001167"  [label="DDG: 1"];
}
