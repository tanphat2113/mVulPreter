digraph "0_radare2_4e98402f09a0ef0bb8559a33a4c1988c54938eaf@pointer" {
"1000241" [label="(Call,image_infos = (struct dyld_cache_image_info*) (bin->b->buf + bin->hdr.startaddr))"];
"1000243" [label="(Call,(struct dyld_cache_image_info*) (bin->b->buf + bin->hdr.startaddr))"];
"1000216" [label="(Call,bin->hdr.startaddr > bin->size)"];
"1000198" [label="(Call,bin->hdr.startaddr > bin->size)"];
"1000146" [label="(Call,bin->size < 1)"];
"1000199" [label="(Call,bin->hdr.startaddr)"];
"1000113" [label="(Block,)"];
"1000241" [label="(Call,image_infos = (struct dyld_cache_image_info*) (bin->b->buf + bin->hdr.startaddr))"];
"1000282" [label="(Call,liboff > bin->size)"];
"1000153" [label="(Literal,\"Empty file? (%s)\n\")"];
"1000147" [label="(Call,bin->size)"];
"1000225" [label="(Call,bin->hdr.baseaddroff > bin->size)"];
"1000197" [label="(ControlStructure,if (bin->hdr.startaddr > bin->size))"];
"1000228" [label="(Identifier,bin)"];
"1000215" [label="(Call,bin->hdr.startaddr > bin->size || bin->hdr.baseaddroff > bin->size)"];
"1000216" [label="(Call,bin->hdr.startaddr > bin->size)"];
"1000219" [label="(Identifier,bin)"];
"1000257" [label="(Identifier,dyld_vmbase)"];
"1000222" [label="(Call,bin->size)"];
"1000204" [label="(Call,bin->size)"];
"1000145" [label="(ControlStructure,if (bin->size < 1))"];
"1000217" [label="(Call,bin->hdr.startaddr)"];
"1000245" [label="(Call,bin->b->buf + bin->hdr.startaddr)"];
"1000150" [label="(Literal,1)"];
"1000242" [label="(Identifier,image_infos)"];
"1000146" [label="(Call,bin->size < 1)"];
"1000243" [label="(Call,(struct dyld_cache_image_info*) (bin->b->buf + bin->hdr.startaddr))"];
"1000735" [label="(MethodReturn,struct r_bin_dyldcache_lib_t *)"];
"1000168" [label="(Identifier,bin)"];
"1000198" [label="(Call,bin->hdr.startaddr > bin->size)"];
"1000209" [label="(Literal,\"corrupted dyldcache\")"];
"1000241" -> "1000113"  [label="AST: "];
"1000241" -> "1000243"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="AST: "];
"1000257" -> "1000241"  [label="CFG: "];
"1000241" -> "1000735"  [label="DDG: image_infos"];
"1000241" -> "1000735"  [label="DDG: (struct dyld_cache_image_info*) (bin->b->buf + bin->hdr.startaddr)"];
"1000243" -> "1000241"  [label="DDG: bin->b->buf + bin->hdr.startaddr"];
"1000243" -> "1000245"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000245" -> "1000243"  [label="AST: "];
"1000243" -> "1000735"  [label="DDG: bin->b->buf + bin->hdr.startaddr"];
"1000216" -> "1000243"  [label="DDG: bin->hdr.startaddr"];
"1000216" -> "1000215"  [label="AST: "];
"1000216" -> "1000222"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000222" -> "1000216"  [label="AST: "];
"1000228" -> "1000216"  [label="CFG: "];
"1000215" -> "1000216"  [label="CFG: "];
"1000216" -> "1000735"  [label="DDG: bin->hdr.startaddr"];
"1000216" -> "1000735"  [label="DDG: bin->size"];
"1000216" -> "1000215"  [label="DDG: bin->hdr.startaddr"];
"1000216" -> "1000215"  [label="DDG: bin->size"];
"1000198" -> "1000216"  [label="DDG: bin->hdr.startaddr"];
"1000198" -> "1000216"  [label="DDG: bin->size"];
"1000216" -> "1000225"  [label="DDG: bin->size"];
"1000216" -> "1000245"  [label="DDG: bin->hdr.startaddr"];
"1000216" -> "1000282"  [label="DDG: bin->size"];
"1000198" -> "1000197"  [label="AST: "];
"1000198" -> "1000204"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000204" -> "1000198"  [label="AST: "];
"1000209" -> "1000198"  [label="CFG: "];
"1000219" -> "1000198"  [label="CFG: "];
"1000198" -> "1000735"  [label="DDG: bin->hdr.startaddr"];
"1000198" -> "1000735"  [label="DDG: bin->size"];
"1000198" -> "1000735"  [label="DDG: bin->hdr.startaddr > bin->size"];
"1000146" -> "1000198"  [label="DDG: bin->size"];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000150"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000150" -> "1000146"  [label="AST: "];
"1000153" -> "1000146"  [label="CFG: "];
"1000168" -> "1000146"  [label="CFG: "];
"1000146" -> "1000735"  [label="DDG: bin->size < 1"];
"1000146" -> "1000735"  [label="DDG: bin->size"];
}
