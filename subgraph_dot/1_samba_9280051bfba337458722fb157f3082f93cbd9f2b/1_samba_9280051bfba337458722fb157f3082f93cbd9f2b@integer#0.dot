digraph "1_samba_9280051bfba337458722fb157f3082f93cbd9f2b@integer" {
"1000224" [label="(Call,p2 = (char *)req->buf + data_blob_len)"];
"1000227" [label="(Call,(char *)req->buf)"];
"1000213" [label="(Call,MIN(bufrem, data_blob_len))"];
"1000204" [label="(Call,bufrem = smbreq_bufrem(req, p))"];
"1000206" [label="(Call,smbreq_bufrem(req, p))"];
"1000116" [label="(MethodParameterIn,struct smb_request *req)"];
"1000189" [label="(Call,p = req->buf)"];
"1000195" [label="(Call,data_blob_len == 0)"];
"1000127" [label="(Call,data_blob_len = SVAL(req->vwv+7, 0))"];
"1000129" [label="(Call,SVAL(req->vwv+7, 0))"];
"1000235" [label="(Call,srvstr_pull_req_talloc(talloc_tos(), req, &tmp, p2,\n                                     STR_TERMINATE))"];
"1000233" [label="(Call,p2 += srvstr_pull_req_talloc(talloc_tos(), req, &tmp, p2,\n                                     STR_TERMINATE))"];
"1000250" [label="(Call,srvstr_pull_req_talloc(talloc_tos(), req, &tmp, p2,\n\t\t\t\t     STR_TERMINATE))"];
"1000248" [label="(Call,p2 += srvstr_pull_req_talloc(talloc_tos(), req, &tmp, p2,\n\t\t\t\t     STR_TERMINATE))"];
"1000265" [label="(Call,srvstr_pull_req_talloc(talloc_tos(), req, &tmp, p2,\n\t\t\t\t     STR_TERMINATE))"];
"1000263" [label="(Call,p2 += srvstr_pull_req_talloc(talloc_tos(), req, &tmp, p2,\n\t\t\t\t     STR_TERMINATE))"];
"1000360" [label="(Call,reply_nterror(req, nt_status_squash(\n\t\t\t\t\t      NT_STATUS_INVALID_PARAMETER)))"];
"1000401" [label="(Call,reply_nterror(req, nt_status_squash(status)))"];
"1000416" [label="(Call,reply_spnego_negotiate(req, vuid, blob1,\n\t\t\t\t       &vuser->auth_ntlmssp_state))"];
"1000438" [label="(Call,reply_spnego_auth(req, vuid, blob1,\n\t\t\t\t  &vuser->auth_ntlmssp_state))"];
"1000487" [label="(Call,reply_nterror(req, nt_status_squash(status)))"];
"1000504" [label="(Call,reply_spnego_ntlmssp(req, vuid,\n\t\t\t\t     &vuser->auth_ntlmssp_state,\n\t\t\t\t     &chal, status, OID_NTLMSSP, false))"];
"1000516" [label="(Call,data_blob_free(&chal))"];
"1000526" [label="(Call,reply_nterror(req, nt_status_squash(NT_STATUS_LOGON_FAILURE)))"];
"1000249" [label="(Identifier,p2)"];
"1000195" [label="(Call,data_blob_len == 0)"];
"1000235" [label="(Call,srvstr_pull_req_talloc(talloc_tos(), req, &tmp, p2,\n                                     STR_TERMINATE))"];
"1000251" [label="(Call,talloc_tos())"];
"1000267" [label="(Identifier,req)"];
"1000266" [label="(Call,talloc_tos())"];
"1000258" [label="(Identifier,native_lanman)"];
"1000216" [label="(Call,file_save(\"negotiate.dat\", blob1.data, blob1.length))"];
"1000471" [label="(Call,auth_ntlmssp_start(&vuser->auth_ntlmssp_state))"];
"1000439" [label="(Identifier,req)"];
"1000513" [label="(Identifier,status)"];
"1000378" [label="(Call,check_spnego_blob_complete(sconn, smbpid, vuid, &blob1))"];
"1000364" [label="(Return,return;)"];
"1000189" [label="(Call,p = req->buf)"];
"1000241" [label="(Identifier,STR_TERMINATE)"];
"1000236" [label="(Call,talloc_tos())"];
"1000488" [label="(Identifier,req)"];
"1000519" [label="(Return,return;)"];
"1000213" [label="(Call,MIN(bufrem, data_blob_len))"];
"1000194" [label="(ControlStructure,if (data_blob_len == 0))"];
"1000515" [label="(Identifier,false)"];
"1000210" [label="(Identifier,blob1)"];
"1000514" [label="(Identifier,OID_NTLMSSP)"];
"1000226" [label="(Call,(char *)req->buf + data_blob_len)"];
"1000516" [label="(Call,data_blob_free(&chal))"];
"1000417" [label="(Identifier,req)"];
"1000265" [label="(Call,srvstr_pull_req_talloc(talloc_tos(), req, &tmp, p2,\n\t\t\t\t     STR_TERMINATE))"];
"1000405" [label="(Return,return;)"];
"1000129" [label="(Call,SVAL(req->vwv+7, 0))"];
"1000135" [label="(Literal,0)"];
"1000491" [label="(Return,return;)"];
"1000233" [label="(Call,p2 += srvstr_pull_req_talloc(talloc_tos(), req, &tmp, p2,\n                                     STR_TERMINATE))"];
"1000232" [label="(Identifier,data_blob_len)"];
"1000209" [label="(Call,blob1 = data_blob(p, MIN(bufrem, data_blob_len)))"];
"1000240" [label="(Identifier,p2)"];
"1000415" [label="(Block,)"];
"1000229" [label="(Call,req->buf)"];
"1000252" [label="(Identifier,req)"];
"1000442" [label="(Call,&vuser->auth_ntlmssp_state)"];
"1000128" [label="(Identifier,data_blob_len)"];
"1000207" [label="(Identifier,req)"];
"1000238" [label="(Call,&tmp)"];
"1000489" [label="(Call,nt_status_squash(status))"];
"1000199" [label="(Call,reply_nterror(req, nt_status_squash(NT_STATUS_LOGON_FAILURE)))"];
"1000263" [label="(Call,p2 += srvstr_pull_req_talloc(talloc_tos(), req, &tmp, p2,\n\t\t\t\t     STR_TERMINATE))"];
"1000116" [label="(MethodParameterIn,struct smb_request *req)"];
"1000214" [label="(Identifier,bufrem)"];
"1000204" [label="(Call,bufrem = smbreq_bufrem(req, p))"];
"1000234" [label="(Identifier,p2)"];
"1000191" [label="(Call,req->buf)"];
"1000255" [label="(Identifier,p2)"];
"1000256" [label="(Identifier,STR_TERMINATE)"];
"1000250" [label="(Call,srvstr_pull_req_talloc(talloc_tos(), req, &tmp, p2,\n\t\t\t\t     STR_TERMINATE))"];
"1000507" [label="(Call,&vuser->auth_ntlmssp_state)"];
"1000416" [label="(Call,reply_spnego_negotiate(req, vuid, blob1,\n\t\t\t\t       &vuser->auth_ntlmssp_state))"];
"1000426" [label="(Identifier,blob1)"];
"1000438" [label="(Call,reply_spnego_auth(req, vuid, blob1,\n\t\t\t\t  &vuser->auth_ntlmssp_state))"];
"1000117" [label="(Block,)"];
"1000138" [label="(Identifier,ra_type)"];
"1000237" [label="(Identifier,req)"];
"1000268" [label="(Call,&tmp)"];
"1000504" [label="(Call,reply_spnego_ntlmssp(req, vuid,\n\t\t\t\t     &vuser->auth_ntlmssp_state,\n\t\t\t\t     &chal, status, OID_NTLMSSP, false))"];
"1000253" [label="(Call,&tmp)"];
"1000270" [label="(Identifier,p2)"];
"1000206" [label="(Call,smbreq_bufrem(req, p))"];
"1000356" [label="(Block,)"];
"1000511" [label="(Call,&chal)"];
"1000530" [label="(MethodReturn,static void)"];
"1000494" [label="(Call,auth_ntlmssp_update(vuser->auth_ntlmssp_state,\n\t\t\t\t\t\tblob1, &chal))"];
"1000211" [label="(Call,data_blob(p, MIN(bufrem, data_blob_len)))"];
"1000197" [label="(Literal,0)"];
"1000492" [label="(Call,status = auth_ntlmssp_update(vuser->auth_ntlmssp_state,\n\t\t\t\t\t\tblob1, &chal))"];
"1000196" [label="(Identifier,data_blob_len)"];
"1000225" [label="(Identifier,p2)"];
"1000437" [label="(Block,)"];
"1000248" [label="(Call,p2 += srvstr_pull_req_talloc(talloc_tos(), req, &tmp, p2,\n\t\t\t\t     STR_TERMINATE))"];
"1000360" [label="(Call,reply_nterror(req, nt_status_squash(\n\t\t\t\t\t      NT_STATUS_INVALID_PARAMETER)))"];
"1000127" [label="(Call,data_blob_len = SVAL(req->vwv+7, 0))"];
"1000487" [label="(Call,reply_nterror(req, nt_status_squash(status)))"];
"1000403" [label="(Call,nt_status_squash(status))"];
"1000506" [label="(Identifier,vuid)"];
"1000243" [label="(Identifier,native_os)"];
"1000361" [label="(Identifier,req)"];
"1000190" [label="(Identifier,p)"];
"1000480" [label="(Block,)"];
"1000526" [label="(Call,reply_nterror(req, nt_status_squash(NT_STATUS_LOGON_FAILURE)))"];
"1000200" [label="(Identifier,req)"];
"1000528" [label="(Call,nt_status_squash(NT_STATUS_LOGON_FAILURE))"];
"1000273" [label="(Identifier,primary_domain)"];
"1000227" [label="(Call,(char *)req->buf)"];
"1000518" [label="(Identifier,chal)"];
"1000440" [label="(Identifier,vuid)"];
"1000527" [label="(Identifier,req)"];
"1000517" [label="(Call,&chal)"];
"1000401" [label="(Call,reply_nterror(req, nt_status_squash(status)))"];
"1000271" [label="(Identifier,STR_TERMINATE)"];
"1000448" [label="(Identifier,blob1)"];
"1000461" [label="(Block,)"];
"1000420" [label="(Call,&vuser->auth_ntlmssp_state)"];
"1000419" [label="(Identifier,blob1)"];
"1000224" [label="(Call,p2 = (char *)req->buf + data_blob_len)"];
"1000264" [label="(Identifier,p2)"];
"1000388" [label="(Block,)"];
"1000505" [label="(Identifier,req)"];
"1000130" [label="(Call,req->vwv+7)"];
"1000208" [label="(Identifier,p)"];
"1000402" [label="(Identifier,req)"];
"1000205" [label="(Identifier,bufrem)"];
"1000418" [label="(Identifier,vuid)"];
"1000362" [label="(Call,nt_status_squash(\n\t\t\t\t\t      NT_STATUS_INVALID_PARAMETER))"];
"1000441" [label="(Identifier,blob1)"];
"1000215" [label="(Identifier,data_blob_len)"];
"1000224" -> "1000117"  [label="AST: "];
"1000224" -> "1000226"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000234" -> "1000224"  [label="CFG: "];
"1000224" -> "1000530"  [label="DDG: (char *)req->buf + data_blob_len"];
"1000227" -> "1000224"  [label="DDG: req->buf"];
"1000213" -> "1000224"  [label="DDG: data_blob_len"];
"1000224" -> "1000235"  [label="DDG: p2"];
"1000227" -> "1000226"  [label="AST: "];
"1000227" -> "1000229"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000227"  [label="AST: "];
"1000232" -> "1000227"  [label="CFG: "];
"1000227" -> "1000530"  [label="DDG: req->buf"];
"1000227" -> "1000226"  [label="DDG: req->buf"];
"1000213" -> "1000211"  [label="AST: "];
"1000213" -> "1000215"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000215" -> "1000213"  [label="AST: "];
"1000211" -> "1000213"  [label="CFG: "];
"1000213" -> "1000530"  [label="DDG: bufrem"];
"1000213" -> "1000211"  [label="DDG: bufrem"];
"1000213" -> "1000211"  [label="DDG: data_blob_len"];
"1000204" -> "1000213"  [label="DDG: bufrem"];
"1000195" -> "1000213"  [label="DDG: data_blob_len"];
"1000213" -> "1000226"  [label="DDG: data_blob_len"];
"1000204" -> "1000117"  [label="AST: "];
"1000204" -> "1000206"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000206" -> "1000204"  [label="AST: "];
"1000210" -> "1000204"  [label="CFG: "];
"1000204" -> "1000530"  [label="DDG: smbreq_bufrem(req, p)"];
"1000206" -> "1000204"  [label="DDG: req"];
"1000206" -> "1000204"  [label="DDG: p"];
"1000206" -> "1000208"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000206"  [label="AST: "];
"1000116" -> "1000206"  [label="DDG: req"];
"1000189" -> "1000206"  [label="DDG: p"];
"1000206" -> "1000211"  [label="DDG: p"];
"1000206" -> "1000235"  [label="DDG: req"];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000530"  [label="DDG: req"];
"1000116" -> "1000199"  [label="DDG: req"];
"1000116" -> "1000235"  [label="DDG: req"];
"1000116" -> "1000250"  [label="DDG: req"];
"1000116" -> "1000265"  [label="DDG: req"];
"1000116" -> "1000360"  [label="DDG: req"];
"1000116" -> "1000401"  [label="DDG: req"];
"1000116" -> "1000416"  [label="DDG: req"];
"1000116" -> "1000438"  [label="DDG: req"];
"1000116" -> "1000487"  [label="DDG: req"];
"1000116" -> "1000504"  [label="DDG: req"];
"1000116" -> "1000526"  [label="DDG: req"];
"1000189" -> "1000117"  [label="AST: "];
"1000189" -> "1000191"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000191" -> "1000189"  [label="AST: "];
"1000196" -> "1000189"  [label="CFG: "];
"1000189" -> "1000530"  [label="DDG: p"];
"1000189" -> "1000530"  [label="DDG: req->buf"];
"1000195" -> "1000194"  [label="AST: "];
"1000195" -> "1000197"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000197" -> "1000195"  [label="AST: "];
"1000200" -> "1000195"  [label="CFG: "];
"1000205" -> "1000195"  [label="CFG: "];
"1000195" -> "1000530"  [label="DDG: data_blob_len == 0"];
"1000195" -> "1000530"  [label="DDG: data_blob_len"];
"1000127" -> "1000195"  [label="DDG: data_blob_len"];
"1000127" -> "1000117"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000138" -> "1000127"  [label="CFG: "];
"1000127" -> "1000530"  [label="DDG: SVAL(req->vwv+7, 0)"];
"1000129" -> "1000127"  [label="DDG: req->vwv+7"];
"1000129" -> "1000127"  [label="DDG: 0"];
"1000129" -> "1000135"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000135" -> "1000129"  [label="AST: "];
"1000129" -> "1000530"  [label="DDG: req->vwv+7"];
"1000235" -> "1000233"  [label="AST: "];
"1000235" -> "1000241"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="AST: "];
"1000238" -> "1000235"  [label="AST: "];
"1000240" -> "1000235"  [label="AST: "];
"1000241" -> "1000235"  [label="AST: "];
"1000233" -> "1000235"  [label="CFG: "];
"1000235" -> "1000233"  [label="DDG: &tmp"];
"1000235" -> "1000233"  [label="DDG: talloc_tos()"];
"1000235" -> "1000233"  [label="DDG: STR_TERMINATE"];
"1000235" -> "1000233"  [label="DDG: p2"];
"1000235" -> "1000233"  [label="DDG: req"];
"1000235" -> "1000250"  [label="DDG: req"];
"1000235" -> "1000250"  [label="DDG: &tmp"];
"1000235" -> "1000250"  [label="DDG: STR_TERMINATE"];
"1000233" -> "1000117"  [label="AST: "];
"1000234" -> "1000233"  [label="AST: "];
"1000243" -> "1000233"  [label="CFG: "];
"1000233" -> "1000530"  [label="DDG: srvstr_pull_req_talloc(talloc_tos(), req, &tmp, p2,\n                                     STR_TERMINATE)"];
"1000233" -> "1000250"  [label="DDG: p2"];
"1000250" -> "1000248"  [label="AST: "];
"1000250" -> "1000256"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000252" -> "1000250"  [label="AST: "];
"1000253" -> "1000250"  [label="AST: "];
"1000255" -> "1000250"  [label="AST: "];
"1000256" -> "1000250"  [label="AST: "];
"1000248" -> "1000250"  [label="CFG: "];
"1000250" -> "1000248"  [label="DDG: &tmp"];
"1000250" -> "1000248"  [label="DDG: p2"];
"1000250" -> "1000248"  [label="DDG: req"];
"1000250" -> "1000248"  [label="DDG: STR_TERMINATE"];
"1000250" -> "1000248"  [label="DDG: talloc_tos()"];
"1000250" -> "1000265"  [label="DDG: req"];
"1000250" -> "1000265"  [label="DDG: &tmp"];
"1000250" -> "1000265"  [label="DDG: STR_TERMINATE"];
"1000248" -> "1000117"  [label="AST: "];
"1000249" -> "1000248"  [label="AST: "];
"1000258" -> "1000248"  [label="CFG: "];
"1000248" -> "1000265"  [label="DDG: p2"];
"1000265" -> "1000263"  [label="AST: "];
"1000265" -> "1000271"  [label="CFG: "];
"1000266" -> "1000265"  [label="AST: "];
"1000267" -> "1000265"  [label="AST: "];
"1000268" -> "1000265"  [label="AST: "];
"1000270" -> "1000265"  [label="AST: "];
"1000271" -> "1000265"  [label="AST: "];
"1000263" -> "1000265"  [label="CFG: "];
"1000265" -> "1000530"  [label="DDG: &tmp"];
"1000265" -> "1000530"  [label="DDG: talloc_tos()"];
"1000265" -> "1000530"  [label="DDG: STR_TERMINATE"];
"1000265" -> "1000263"  [label="DDG: talloc_tos()"];
"1000265" -> "1000263"  [label="DDG: &tmp"];
"1000265" -> "1000263"  [label="DDG: p2"];
"1000265" -> "1000263"  [label="DDG: STR_TERMINATE"];
"1000265" -> "1000263"  [label="DDG: req"];
"1000265" -> "1000360"  [label="DDG: req"];
"1000265" -> "1000401"  [label="DDG: req"];
"1000265" -> "1000416"  [label="DDG: req"];
"1000265" -> "1000438"  [label="DDG: req"];
"1000265" -> "1000487"  [label="DDG: req"];
"1000265" -> "1000504"  [label="DDG: req"];
"1000265" -> "1000526"  [label="DDG: req"];
"1000263" -> "1000117"  [label="AST: "];
"1000264" -> "1000263"  [label="AST: "];
"1000273" -> "1000263"  [label="CFG: "];
"1000263" -> "1000530"  [label="DDG: srvstr_pull_req_talloc(talloc_tos(), req, &tmp, p2,\n\t\t\t\t     STR_TERMINATE)"];
"1000263" -> "1000530"  [label="DDG: p2"];
"1000360" -> "1000356"  [label="AST: "];
"1000360" -> "1000362"  [label="CFG: "];
"1000361" -> "1000360"  [label="AST: "];
"1000362" -> "1000360"  [label="AST: "];
"1000364" -> "1000360"  [label="CFG: "];
"1000360" -> "1000530"  [label="DDG: req"];
"1000360" -> "1000530"  [label="DDG: reply_nterror(req, nt_status_squash(\n\t\t\t\t\t      NT_STATUS_INVALID_PARAMETER))"];
"1000360" -> "1000530"  [label="DDG: nt_status_squash(\n\t\t\t\t\t      NT_STATUS_INVALID_PARAMETER)"];
"1000362" -> "1000360"  [label="DDG: NT_STATUS_INVALID_PARAMETER"];
"1000401" -> "1000388"  [label="AST: "];
"1000401" -> "1000403"  [label="CFG: "];
"1000402" -> "1000401"  [label="AST: "];
"1000403" -> "1000401"  [label="AST: "];
"1000405" -> "1000401"  [label="CFG: "];
"1000401" -> "1000530"  [label="DDG: reply_nterror(req, nt_status_squash(status))"];
"1000401" -> "1000530"  [label="DDG: req"];
"1000401" -> "1000530"  [label="DDG: nt_status_squash(status)"];
"1000403" -> "1000401"  [label="DDG: status"];
"1000416" -> "1000415"  [label="AST: "];
"1000416" -> "1000420"  [label="CFG: "];
"1000417" -> "1000416"  [label="AST: "];
"1000418" -> "1000416"  [label="AST: "];
"1000419" -> "1000416"  [label="AST: "];
"1000420" -> "1000416"  [label="AST: "];
"1000426" -> "1000416"  [label="CFG: "];
"1000416" -> "1000530"  [label="DDG: &vuser->auth_ntlmssp_state"];
"1000416" -> "1000530"  [label="DDG: reply_spnego_negotiate(req, vuid, blob1,\n\t\t\t\t       &vuser->auth_ntlmssp_state)"];
"1000416" -> "1000530"  [label="DDG: vuid"];
"1000416" -> "1000530"  [label="DDG: req"];
"1000416" -> "1000530"  [label="DDG: blob1"];
"1000378" -> "1000416"  [label="DDG: vuid"];
"1000216" -> "1000416"  [label="DDG: blob1.length"];
"1000216" -> "1000416"  [label="DDG: blob1.data"];
"1000209" -> "1000416"  [label="DDG: blob1"];
"1000438" -> "1000437"  [label="AST: "];
"1000438" -> "1000442"  [label="CFG: "];
"1000439" -> "1000438"  [label="AST: "];
"1000440" -> "1000438"  [label="AST: "];
"1000441" -> "1000438"  [label="AST: "];
"1000442" -> "1000438"  [label="AST: "];
"1000448" -> "1000438"  [label="CFG: "];
"1000438" -> "1000530"  [label="DDG: &vuser->auth_ntlmssp_state"];
"1000438" -> "1000530"  [label="DDG: vuid"];
"1000438" -> "1000530"  [label="DDG: reply_spnego_auth(req, vuid, blob1,\n\t\t\t\t  &vuser->auth_ntlmssp_state)"];
"1000438" -> "1000530"  [label="DDG: blob1"];
"1000438" -> "1000530"  [label="DDG: req"];
"1000378" -> "1000438"  [label="DDG: vuid"];
"1000216" -> "1000438"  [label="DDG: blob1.length"];
"1000216" -> "1000438"  [label="DDG: blob1.data"];
"1000209" -> "1000438"  [label="DDG: blob1"];
"1000487" -> "1000480"  [label="AST: "];
"1000487" -> "1000489"  [label="CFG: "];
"1000488" -> "1000487"  [label="AST: "];
"1000489" -> "1000487"  [label="AST: "];
"1000491" -> "1000487"  [label="CFG: "];
"1000487" -> "1000530"  [label="DDG: nt_status_squash(status)"];
"1000487" -> "1000530"  [label="DDG: req"];
"1000487" -> "1000530"  [label="DDG: reply_nterror(req, nt_status_squash(status))"];
"1000489" -> "1000487"  [label="DDG: status"];
"1000504" -> "1000461"  [label="AST: "];
"1000504" -> "1000515"  [label="CFG: "];
"1000505" -> "1000504"  [label="AST: "];
"1000506" -> "1000504"  [label="AST: "];
"1000507" -> "1000504"  [label="AST: "];
"1000511" -> "1000504"  [label="AST: "];
"1000513" -> "1000504"  [label="AST: "];
"1000514" -> "1000504"  [label="AST: "];
"1000515" -> "1000504"  [label="AST: "];
"1000518" -> "1000504"  [label="CFG: "];
"1000504" -> "1000530"  [label="DDG: vuid"];
"1000504" -> "1000530"  [label="DDG: status"];
"1000504" -> "1000530"  [label="DDG: OID_NTLMSSP"];
"1000504" -> "1000530"  [label="DDG: &vuser->auth_ntlmssp_state"];
"1000504" -> "1000530"  [label="DDG: false"];
"1000504" -> "1000530"  [label="DDG: req"];
"1000504" -> "1000530"  [label="DDG: reply_spnego_ntlmssp(req, vuid,\n\t\t\t\t     &vuser->auth_ntlmssp_state,\n\t\t\t\t     &chal, status, OID_NTLMSSP, false)"];
"1000378" -> "1000504"  [label="DDG: vuid"];
"1000471" -> "1000504"  [label="DDG: &vuser->auth_ntlmssp_state"];
"1000494" -> "1000504"  [label="DDG: vuser->auth_ntlmssp_state"];
"1000494" -> "1000504"  [label="DDG: &chal"];
"1000492" -> "1000504"  [label="DDG: status"];
"1000504" -> "1000516"  [label="DDG: &chal"];
"1000516" -> "1000461"  [label="AST: "];
"1000516" -> "1000517"  [label="CFG: "];
"1000517" -> "1000516"  [label="AST: "];
"1000519" -> "1000516"  [label="CFG: "];
"1000516" -> "1000530"  [label="DDG: data_blob_free(&chal)"];
"1000516" -> "1000530"  [label="DDG: &chal"];
"1000526" -> "1000117"  [label="AST: "];
"1000526" -> "1000528"  [label="CFG: "];
"1000527" -> "1000526"  [label="AST: "];
"1000528" -> "1000526"  [label="AST: "];
"1000530" -> "1000526"  [label="CFG: "];
"1000526" -> "1000530"  [label="DDG: nt_status_squash(NT_STATUS_LOGON_FAILURE)"];
"1000526" -> "1000530"  [label="DDG: reply_nterror(req, nt_status_squash(NT_STATUS_LOGON_FAILURE))"];
"1000526" -> "1000530"  [label="DDG: req"];
"1000528" -> "1000526"  [label="DDG: NT_STATUS_LOGON_FAILURE"];
}
