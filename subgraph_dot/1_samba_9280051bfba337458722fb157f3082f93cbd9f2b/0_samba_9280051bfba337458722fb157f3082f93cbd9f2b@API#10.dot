digraph "0_samba_9280051bfba337458722fb157f3082f93cbd9f2b@API" {
"1000484" [label="(Call,data_blob_free(&blob1))"];
"1000378" [label="(Call,check_spnego_blob_complete(sconn, smbpid, vuid, &blob1))"];
"1000367" [label="(Call,get_partial_auth_user_struct(sconn, vuid))"];
"1000350" [label="(Call,register_initial_vuid(sconn))"];
"1000344" [label="(Call,is_partial_auth_vuid(sconn, vuid))"];
"1000315" [label="(Call,is_partial_auth_vuid(sconn, vuid))"];
"1000161" [label="(Call,*sconn = smbd_server_conn)"];
"1000141" [label="(Call,vuid = req->vuid)"];
"1000322" [label="(Call,get_pending_auth_data(sconn, smbpid))"];
"1000155" [label="(Call,smbpid = req->smbpid)"];
"1000337" [label="(Call,vuid = pad->vuid)"];
"1000332" [label="(Call,(unsigned int)pad->vuid)"];
"1000353" [label="(Call,vuid == UID_FIELD_INVALID)"];
"1000348" [label="(Call,vuid = register_initial_vuid(sconn))"];
"1000424" [label="(Call,data_blob_free(&blob1))"];
"1000365" [label="(Call,vuser = get_partial_auth_user_struct(sconn, vuid))"];
"1000484" [label="(Call,data_blob_free(&blob1))"];
"1000381" [label="(Identifier,vuid)"];
"1000438" [label="(Call,reply_spnego_auth(req, vuid, blob1,\n\t\t\t\t  &vuser->auth_ntlmssp_state))"];
"1000369" [label="(Identifier,vuid)"];
"1000344" [label="(Call,is_partial_auth_vuid(sconn, vuid))"];
"1000337" [label="(Call,vuid = pad->vuid)"];
"1000141" [label="(Call,vuid = req->vuid)"];
"1000320" [label="(Call,pad = get_pending_auth_data(sconn, smbpid))"];
"1000350" [label="(Call,register_initial_vuid(sconn))"];
"1000162" [label="(Identifier,sconn)"];
"1000117" [label="(Block,)"];
"1000142" [label="(Identifier,vuid)"];
"1000354" [label="(Identifier,vuid)"];
"1000323" [label="(Identifier,sconn)"];
"1000315" [label="(Call,is_partial_auth_vuid(sconn, vuid))"];
"1000353" [label="(Call,vuid == UID_FIELD_INVALID)"];
"1000314" [label="(Call,!is_partial_auth_vuid(sconn, vuid))"];
"1000348" [label="(Call,vuid = register_initial_vuid(sconn))"];
"1000316" [label="(Identifier,sconn)"];
"1000504" [label="(Call,reply_spnego_ntlmssp(req, vuid,\n\t\t\t\t     &vuser->auth_ntlmssp_state,\n\t\t\t\t     &chal, status, OID_NTLMSSP, false))"];
"1000156" [label="(Identifier,smbpid)"];
"1000163" [label="(Identifier,smbd_server_conn)"];
"1000330" [label="(Block,)"];
"1000155" [label="(Call,smbpid = req->smbpid)"];
"1000157" [label="(Call,req->smbpid)"];
"1000334" [label="(Call,pad->vuid)"];
"1000161" [label="(Call,*sconn = smbd_server_conn)"];
"1000332" [label="(Call,(unsigned int)pad->vuid)"];
"1000346" [label="(Identifier,vuid)"];
"1000395" [label="(Call,invalidate_vuid(sconn, vuid))"];
"1000359" [label="(Identifier,blob1)"];
"1000327" [label="(Block,)"];
"1000317" [label="(Identifier,vuid)"];
"1000351" [label="(Identifier,sconn)"];
"1000347" [label="(Block,)"];
"1000349" [label="(Identifier,vuid)"];
"1000355" [label="(Identifier,UID_FIELD_INVALID)"];
"1000165" [label="(Literal,3)"];
"1000382" [label="(Call,&blob1)"];
"1000378" [label="(Call,check_spnego_blob_complete(sconn, smbpid, vuid, &blob1))"];
"1000530" [label="(MethodReturn,static void)"];
"1000485" [label="(Call,&blob1)"];
"1000366" [label="(Identifier,vuser)"];
"1000339" [label="(Call,pad->vuid)"];
"1000376" [label="(Call,status = check_spnego_blob_complete(sconn, smbpid, vuid, &blob1))"];
"1000367" [label="(Call,get_partial_auth_user_struct(sconn, vuid))"];
"1000523" [label="(Call,data_blob_free(&blob1))"];
"1000379" [label="(Identifier,sconn)"];
"1000324" [label="(Identifier,smbpid)"];
"1000398" [label="(Call,data_blob_free(&blob1))"];
"1000345" [label="(Identifier,sconn)"];
"1000328" [label="(Call,DEBUG(10,(\"reply_sesssetup_and_X_spnego: found \"\n\t\t\t\t\"pending vuid %u\n\",\n\t\t\t\t(unsigned int)pad->vuid )))"];
"1000148" [label="(Identifier,vuser)"];
"1000322" [label="(Call,get_pending_auth_data(sconn, smbpid))"];
"1000488" [label="(Identifier,req)"];
"1000380" [label="(Identifier,smbpid)"];
"1000352" [label="(ControlStructure,if (vuid == UID_FIELD_INVALID))"];
"1000143" [label="(Call,req->vuid)"];
"1000501" [label="(Call,data_blob_free(&blob1))"];
"1000343" [label="(Call,!is_partial_auth_vuid(sconn, vuid))"];
"1000338" [label="(Identifier,vuid)"];
"1000416" [label="(Call,reply_spnego_negotiate(req, vuid, blob1,\n\t\t\t\t       &vuser->auth_ntlmssp_state))"];
"1000481" [label="(Call,invalidate_vuid(sconn, vuid))"];
"1000368" [label="(Identifier,sconn)"];
"1000446" [label="(Call,data_blob_free(&blob1))"];
"1000480" [label="(Block,)"];
"1000484" -> "1000480"  [label="AST: "];
"1000484" -> "1000485"  [label="CFG: "];
"1000485" -> "1000484"  [label="AST: "];
"1000488" -> "1000484"  [label="CFG: "];
"1000484" -> "1000530"  [label="DDG: &blob1"];
"1000484" -> "1000530"  [label="DDG: data_blob_free(&blob1)"];
"1000378" -> "1000484"  [label="DDG: &blob1"];
"1000378" -> "1000376"  [label="AST: "];
"1000378" -> "1000382"  [label="CFG: "];
"1000379" -> "1000378"  [label="AST: "];
"1000380" -> "1000378"  [label="AST: "];
"1000381" -> "1000378"  [label="AST: "];
"1000382" -> "1000378"  [label="AST: "];
"1000376" -> "1000378"  [label="CFG: "];
"1000378" -> "1000530"  [label="DDG: smbpid"];
"1000378" -> "1000530"  [label="DDG: sconn"];
"1000378" -> "1000530"  [label="DDG: vuid"];
"1000378" -> "1000376"  [label="DDG: sconn"];
"1000378" -> "1000376"  [label="DDG: smbpid"];
"1000378" -> "1000376"  [label="DDG: vuid"];
"1000378" -> "1000376"  [label="DDG: &blob1"];
"1000367" -> "1000378"  [label="DDG: sconn"];
"1000367" -> "1000378"  [label="DDG: vuid"];
"1000322" -> "1000378"  [label="DDG: smbpid"];
"1000155" -> "1000378"  [label="DDG: smbpid"];
"1000378" -> "1000395"  [label="DDG: sconn"];
"1000378" -> "1000395"  [label="DDG: vuid"];
"1000378" -> "1000398"  [label="DDG: &blob1"];
"1000378" -> "1000416"  [label="DDG: vuid"];
"1000378" -> "1000424"  [label="DDG: &blob1"];
"1000378" -> "1000438"  [label="DDG: vuid"];
"1000378" -> "1000446"  [label="DDG: &blob1"];
"1000378" -> "1000481"  [label="DDG: sconn"];
"1000378" -> "1000481"  [label="DDG: vuid"];
"1000378" -> "1000501"  [label="DDG: &blob1"];
"1000378" -> "1000504"  [label="DDG: vuid"];
"1000378" -> "1000523"  [label="DDG: &blob1"];
"1000367" -> "1000365"  [label="AST: "];
"1000367" -> "1000369"  [label="CFG: "];
"1000368" -> "1000367"  [label="AST: "];
"1000369" -> "1000367"  [label="AST: "];
"1000365" -> "1000367"  [label="CFG: "];
"1000367" -> "1000365"  [label="DDG: sconn"];
"1000367" -> "1000365"  [label="DDG: vuid"];
"1000350" -> "1000367"  [label="DDG: sconn"];
"1000344" -> "1000367"  [label="DDG: sconn"];
"1000344" -> "1000367"  [label="DDG: vuid"];
"1000353" -> "1000367"  [label="DDG: vuid"];
"1000350" -> "1000348"  [label="AST: "];
"1000350" -> "1000351"  [label="CFG: "];
"1000351" -> "1000350"  [label="AST: "];
"1000348" -> "1000350"  [label="CFG: "];
"1000350" -> "1000530"  [label="DDG: sconn"];
"1000350" -> "1000348"  [label="DDG: sconn"];
"1000344" -> "1000350"  [label="DDG: sconn"];
"1000344" -> "1000343"  [label="AST: "];
"1000344" -> "1000346"  [label="CFG: "];
"1000345" -> "1000344"  [label="AST: "];
"1000346" -> "1000344"  [label="AST: "];
"1000343" -> "1000344"  [label="CFG: "];
"1000344" -> "1000343"  [label="DDG: sconn"];
"1000344" -> "1000343"  [label="DDG: vuid"];
"1000315" -> "1000344"  [label="DDG: sconn"];
"1000315" -> "1000344"  [label="DDG: vuid"];
"1000322" -> "1000344"  [label="DDG: sconn"];
"1000337" -> "1000344"  [label="DDG: vuid"];
"1000315" -> "1000314"  [label="AST: "];
"1000315" -> "1000317"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000317" -> "1000315"  [label="AST: "];
"1000314" -> "1000315"  [label="CFG: "];
"1000315" -> "1000314"  [label="DDG: sconn"];
"1000315" -> "1000314"  [label="DDG: vuid"];
"1000161" -> "1000315"  [label="DDG: sconn"];
"1000141" -> "1000315"  [label="DDG: vuid"];
"1000315" -> "1000322"  [label="DDG: sconn"];
"1000161" -> "1000117"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000165" -> "1000161"  [label="CFG: "];
"1000161" -> "1000530"  [label="DDG: smbd_server_conn"];
"1000161" -> "1000530"  [label="DDG: sconn"];
"1000141" -> "1000117"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000148" -> "1000141"  [label="CFG: "];
"1000141" -> "1000530"  [label="DDG: vuid"];
"1000141" -> "1000530"  [label="DDG: req->vuid"];
"1000322" -> "1000320"  [label="AST: "];
"1000322" -> "1000324"  [label="CFG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000324" -> "1000322"  [label="AST: "];
"1000320" -> "1000322"  [label="CFG: "];
"1000322" -> "1000530"  [label="DDG: smbpid"];
"1000322" -> "1000320"  [label="DDG: sconn"];
"1000322" -> "1000320"  [label="DDG: smbpid"];
"1000155" -> "1000322"  [label="DDG: smbpid"];
"1000155" -> "1000117"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000157" -> "1000155"  [label="AST: "];
"1000162" -> "1000155"  [label="CFG: "];
"1000155" -> "1000530"  [label="DDG: req->smbpid"];
"1000155" -> "1000530"  [label="DDG: smbpid"];
"1000337" -> "1000327"  [label="AST: "];
"1000337" -> "1000339"  [label="CFG: "];
"1000338" -> "1000337"  [label="AST: "];
"1000339" -> "1000337"  [label="AST: "];
"1000345" -> "1000337"  [label="CFG: "];
"1000337" -> "1000530"  [label="DDG: pad->vuid"];
"1000332" -> "1000337"  [label="DDG: pad->vuid"];
"1000332" -> "1000330"  [label="AST: "];
"1000332" -> "1000334"  [label="CFG: "];
"1000333" -> "1000332"  [label="AST: "];
"1000334" -> "1000332"  [label="AST: "];
"1000328" -> "1000332"  [label="CFG: "];
"1000332" -> "1000530"  [label="DDG: (unsigned int)pad->vuid"];
"1000353" -> "1000352"  [label="AST: "];
"1000353" -> "1000355"  [label="CFG: "];
"1000354" -> "1000353"  [label="AST: "];
"1000355" -> "1000353"  [label="AST: "];
"1000359" -> "1000353"  [label="CFG: "];
"1000366" -> "1000353"  [label="CFG: "];
"1000353" -> "1000530"  [label="DDG: vuid == UID_FIELD_INVALID"];
"1000353" -> "1000530"  [label="DDG: vuid"];
"1000353" -> "1000530"  [label="DDG: UID_FIELD_INVALID"];
"1000348" -> "1000353"  [label="DDG: vuid"];
"1000348" -> "1000347"  [label="AST: "];
"1000349" -> "1000348"  [label="AST: "];
"1000354" -> "1000348"  [label="CFG: "];
"1000348" -> "1000530"  [label="DDG: register_initial_vuid(sconn)"];
}
