digraph "0_abrt_3c1b60cfa62d39e5fff5a53a5bc53dae189e740e@API" {
"1000638" [label="(Call,low_free_space(g_settings_nMaxCrashReportsSize, g_settings_dump_location))"];
"1000633" [label="(Call,g_settings_nMaxCrashReportsSize > 0)"];
"1000628" [label="(Call,ensure_writable_dir(g_settings_dump_location, DEFAULT_DUMP_LOCATION_MODE, \"abrt\"))"];
"1000646" [label="(Call,snprintf(path, sizeof(path), \"%s/last-ccpp\", g_settings_dump_location))"];
"1000653" [label="(Call,check_recent_crash_file(path, executable))"];
"1000665" [label="(Call,strrchr(executable, '/'))"];
"1000663" [label="(Call,*last_slash = strrchr(executable, '/'))"];
"1000669" [label="(Call,last_slash && strncmp(++last_slash, \"abrt\", 4) == 0)"];
"1000694" [label="(Call,snprintf(path, sizeof(path), \"%s/%s-coredump\", g_settings_dump_location, last_slash))"];
"1000693" [label="(Call,snprintf(path, sizeof(path), \"%s/%s-coredump\", g_settings_dump_location, last_slash) >= sizeof(path))"];
"1000673" [label="(Call,++last_slash)"];
"1000672" [label="(Call,strncmp(++last_slash, \"abrt\", 4))"];
"1000671" [label="(Call,strncmp(++last_slash, \"abrt\", 4) == 0)"];
"1000684" [label="(Call,log_warning(\"Ignoring crash of %s (SIG%s).\",\n                        executable, signame ? signame : signal_str))"];
"1000741" [label="(Call,log_notice(\"Saved core dump of pid %lu (%s) to %s (%llu bytes)\", (long)pid, executable, path, (long long)core_size))"];
"1000758" [label="(Call,snprintf(path, sizeof(path), \"%s/ccpp-%s-%lu.new\",\n            g_settings_dump_location, iso_date_string(NULL), (long)pid))"];
"1000756" [label="(Call,path_len = snprintf(path, sizeof(path), \"%s/ccpp-%s-%lu.new\",\n            g_settings_dump_location, iso_date_string(NULL), (long)pid))"];
"1000678" [label="(Block,)"];
"1000654" [label="(Identifier,path)"];
"1000698" [label="(Literal,\"%s/%s-coredump\")"];
"1000655" [label="(Identifier,executable)"];
"1000640" [label="(Identifier,g_settings_dump_location)"];
"1000639" [label="(Identifier,g_settings_nMaxCrashReportsSize)"];
"1000694" [label="(Call,snprintf(path, sizeof(path), \"%s/%s-coredump\", g_settings_dump_location, last_slash))"];
"1000700" [label="(Identifier,last_slash)"];
"1000670" [label="(Identifier,last_slash)"];
"1000672" [label="(Call,strncmp(++last_slash, \"abrt\", 4))"];
"1000741" [label="(Call,log_notice(\"Saved core dump of pid %lu (%s) to %s (%llu bytes)\", (long)pid, executable, path, (long long)core_size))"];
"1000594" [label="(Call,*signame = NULL)"];
"1000631" [label="(Literal,\"abrt\")"];
"1000738" [label="(Call,error_msg_and_die(\"Error saving '%s'\", path))"];
"1000759" [label="(Identifier,path)"];
"1000760" [label="(Call,sizeof(path))"];
"1000643" [label="(Identifier,user_core_fd)"];
"1000626" [label="(ControlStructure,if (setting_StandaloneHook))"];
"1000671" [label="(Call,strncmp(++last_slash, \"abrt\", 4) == 0)"];
"1000687" [label="(Call,signame ? signame : signal_str)"];
"1000646" [label="(Call,snprintf(path, sizeof(path), \"%s/last-ccpp\", g_settings_dump_location))"];
"1000665" [label="(Call,strrchr(executable, '/'))"];
"1000746" [label="(Identifier,executable)"];
"1000756" [label="(Call,path_len = snprintf(path, sizeof(path), \"%s/ccpp-%s-%lu.new\",\n            g_settings_dump_location, iso_date_string(NULL), (long)pid))"];
"1000150" [label="(Block,)"];
"1000758" [label="(Call,snprintf(path, sizeof(path), \"%s/ccpp-%s-%lu.new\",\n            g_settings_dump_location, iso_date_string(NULL), (long)pid))"];
"1000766" [label="(Call,(long)pid)"];
"1000650" [label="(Literal,\"%s/last-ccpp\")"];
"1000752" [label="(Identifier,err)"];
"1000742" [label="(Literal,\"Saved core dump of pid %lu (%s) to %s (%llu bytes)\")"];
"1000763" [label="(Identifier,g_settings_dump_location)"];
"1000707" [label="(Identifier,path)"];
"1000748" [label="(Call,(long long)core_size)"];
"1000653" [label="(Call,check_recent_crash_file(path, executable))"];
"1000684" [label="(Call,log_warning(\"Ignoring crash of %s (SIG%s).\",\n                        executable, signame ? signame : signal_str))"];
"1000349" [label="(Call,xatoi_positive(signal_str))"];
"1000743" [label="(Call,(long)pid)"];
"1000747" [label="(Identifier,path)"];
"1000579" [label="(Call,executable == NULL)"];
"1000704" [label="(Literal,\"Error saving '%s': truncated long file path\")"];
"1000675" [label="(Literal,\"abrt\")"];
"1000628" [label="(Call,ensure_writable_dir(g_settings_dump_location, DEFAULT_DUMP_LOCATION_MODE, \"abrt\"))"];
"1000667" [label="(Literal,'/')"];
"1000629" [label="(Identifier,g_settings_dump_location)"];
"1001447" [label="(MethodReturn,int)"];
"1000681" [label="(Identifier,g_settings_debug_level)"];
"1000637" [label="(ControlStructure,if (low_free_space(g_settings_nMaxCrashReportsSize, g_settings_dump_location)))"];
"1000634" [label="(Identifier,g_settings_nMaxCrashReportsSize)"];
"1000757" [label="(Identifier,path_len)"];
"1000696" [label="(Call,sizeof(path))"];
"1000692" [label="(ControlStructure,if (snprintf(path, sizeof(path), \"%s/%s-coredump\", g_settings_dump_location, last_slash) >= sizeof(path)))"];
"1000686" [label="(Identifier,executable)"];
"1000638" [label="(Call,low_free_space(g_settings_nMaxCrashReportsSize, g_settings_dump_location))"];
"1000685" [label="(Literal,\"Ignoring crash of %s (SIG%s).\")"];
"1000683" [label="(Block,)"];
"1000669" [label="(Call,last_slash && strncmp(++last_slash, \"abrt\", 4) == 0)"];
"1000772" [label="(Identifier,user_core_fd)"];
"1000701" [label="(Call,sizeof(path))"];
"1000764" [label="(Call,iso_date_string(NULL))"];
"1000702" [label="(Identifier,path)"];
"1000666" [label="(Identifier,executable)"];
"1000711" [label="(Call,xopen3(path, O_WRONLY | O_CREAT | O_EXCL, 0600))"];
"1000647" [label="(Identifier,path)"];
"1000633" [label="(Call,g_settings_nMaxCrashReportsSize > 0)"];
"1000632" [label="(ControlStructure,if (g_settings_nMaxCrashReportsSize > 0))"];
"1000652" [label="(ControlStructure,if (check_recent_crash_file(path, executable)))"];
"1000648" [label="(Call,sizeof(path))"];
"1000673" [label="(Call,++last_slash)"];
"1000693" [label="(Call,snprintf(path, sizeof(path), \"%s/%s-coredump\", g_settings_dump_location, last_slash) >= sizeof(path))"];
"1000630" [label="(Identifier,DEFAULT_DUMP_LOCATION_MODE)"];
"1000674" [label="(Identifier,last_slash)"];
"1000664" [label="(Identifier,last_slash)"];
"1000663" [label="(Call,*last_slash = strrchr(executable, '/'))"];
"1000691" [label="(ControlStructure,goto cleanup_and_exit;)"];
"1000651" [label="(Identifier,g_settings_dump_location)"];
"1000677" [label="(Literal,0)"];
"1000676" [label="(Literal,4)"];
"1000668" [label="(ControlStructure,if (last_slash && strncmp(++last_slash, \"abrt\", 4) == 0))"];
"1000659" [label="(Identifier,user_core_fd)"];
"1000699" [label="(Identifier,g_settings_dump_location)"];
"1000695" [label="(Identifier,path)"];
"1000762" [label="(Literal,\"%s/ccpp-%s-%lu.new\")"];
"1000635" [label="(Literal,0)"];
"1000638" -> "1000637"  [label="AST: "];
"1000638" -> "1000640"  [label="CFG: "];
"1000639" -> "1000638"  [label="AST: "];
"1000640" -> "1000638"  [label="AST: "];
"1000643" -> "1000638"  [label="CFG: "];
"1000647" -> "1000638"  [label="CFG: "];
"1000638" -> "1001447"  [label="DDG: "];
"1000638" -> "1001447"  [label="DDG: "];
"1000638" -> "1001447"  [label="DDG: "];
"1000633" -> "1000638"  [label="DDG: "];
"1000628" -> "1000638"  [label="DDG: "];
"1000638" -> "1000646"  [label="DDG: "];
"1000633" -> "1000632"  [label="AST: "];
"1000633" -> "1000635"  [label="CFG: "];
"1000634" -> "1000633"  [label="AST: "];
"1000635" -> "1000633"  [label="AST: "];
"1000639" -> "1000633"  [label="CFG: "];
"1000647" -> "1000633"  [label="CFG: "];
"1000633" -> "1001447"  [label="DDG: "];
"1000633" -> "1001447"  [label="DDG: "];
"1000628" -> "1000626"  [label="AST: "];
"1000628" -> "1000631"  [label="CFG: "];
"1000629" -> "1000628"  [label="AST: "];
"1000630" -> "1000628"  [label="AST: "];
"1000631" -> "1000628"  [label="AST: "];
"1000634" -> "1000628"  [label="CFG: "];
"1000628" -> "1001447"  [label="DDG: "];
"1000628" -> "1001447"  [label="DDG: "];
"1000628" -> "1000646"  [label="DDG: "];
"1000646" -> "1000150"  [label="AST: "];
"1000646" -> "1000651"  [label="CFG: "];
"1000647" -> "1000646"  [label="AST: "];
"1000648" -> "1000646"  [label="AST: "];
"1000650" -> "1000646"  [label="AST: "];
"1000651" -> "1000646"  [label="AST: "];
"1000654" -> "1000646"  [label="CFG: "];
"1000646" -> "1001447"  [label="DDG: "];
"1000646" -> "1001447"  [label="DDG: "];
"1000646" -> "1000653"  [label="DDG: "];
"1000646" -> "1000694"  [label="DDG: "];
"1000646" -> "1000758"  [label="DDG: "];
"1000653" -> "1000652"  [label="AST: "];
"1000653" -> "1000655"  [label="CFG: "];
"1000654" -> "1000653"  [label="AST: "];
"1000655" -> "1000653"  [label="AST: "];
"1000659" -> "1000653"  [label="CFG: "];
"1000664" -> "1000653"  [label="CFG: "];
"1000653" -> "1001447"  [label="DDG: "];
"1000653" -> "1001447"  [label="DDG: "];
"1000653" -> "1001447"  [label="DDG: "];
"1000579" -> "1000653"  [label="DDG: "];
"1000653" -> "1000665"  [label="DDG: "];
"1000665" -> "1000663"  [label="AST: "];
"1000665" -> "1000667"  [label="CFG: "];
"1000666" -> "1000665"  [label="AST: "];
"1000667" -> "1000665"  [label="AST: "];
"1000663" -> "1000665"  [label="CFG: "];
"1000665" -> "1001447"  [label="DDG: "];
"1000665" -> "1000663"  [label="DDG: "];
"1000665" -> "1000663"  [label="DDG: "];
"1000665" -> "1000684"  [label="DDG: "];
"1000665" -> "1000741"  [label="DDG: "];
"1000663" -> "1000150"  [label="AST: "];
"1000664" -> "1000663"  [label="AST: "];
"1000670" -> "1000663"  [label="CFG: "];
"1000663" -> "1001447"  [label="DDG: "];
"1000663" -> "1000669"  [label="DDG: "];
"1000663" -> "1000673"  [label="DDG: "];
"1000669" -> "1000668"  [label="AST: "];
"1000669" -> "1000670"  [label="CFG: "];
"1000669" -> "1000671"  [label="CFG: "];
"1000670" -> "1000669"  [label="AST: "];
"1000671" -> "1000669"  [label="AST: "];
"1000681" -> "1000669"  [label="CFG: "];
"1000757" -> "1000669"  [label="CFG: "];
"1000669" -> "1001447"  [label="DDG: "];
"1000669" -> "1001447"  [label="DDG: "];
"1000669" -> "1001447"  [label="DDG: "];
"1000673" -> "1000669"  [label="DDG: "];
"1000671" -> "1000669"  [label="DDG: "];
"1000671" -> "1000669"  [label="DDG: "];
"1000669" -> "1000694"  [label="DDG: "];
"1000694" -> "1000693"  [label="AST: "];
"1000694" -> "1000700"  [label="CFG: "];
"1000695" -> "1000694"  [label="AST: "];
"1000696" -> "1000694"  [label="AST: "];
"1000698" -> "1000694"  [label="AST: "];
"1000699" -> "1000694"  [label="AST: "];
"1000700" -> "1000694"  [label="AST: "];
"1000702" -> "1000694"  [label="CFG: "];
"1000694" -> "1001447"  [label="DDG: "];
"1000694" -> "1001447"  [label="DDG: "];
"1000694" -> "1000693"  [label="DDG: "];
"1000694" -> "1000693"  [label="DDG: "];
"1000694" -> "1000693"  [label="DDG: "];
"1000694" -> "1000693"  [label="DDG: "];
"1000693" -> "1000692"  [label="AST: "];
"1000693" -> "1000701"  [label="CFG: "];
"1000701" -> "1000693"  [label="AST: "];
"1000704" -> "1000693"  [label="CFG: "];
"1000707" -> "1000693"  [label="CFG: "];
"1000693" -> "1001447"  [label="DDG: "];
"1000693" -> "1001447"  [label="DDG: "];
"1000673" -> "1000672"  [label="AST: "];
"1000673" -> "1000674"  [label="CFG: "];
"1000674" -> "1000673"  [label="AST: "];
"1000675" -> "1000673"  [label="CFG: "];
"1000673" -> "1000672"  [label="DDG: "];
"1000672" -> "1000671"  [label="AST: "];
"1000672" -> "1000676"  [label="CFG: "];
"1000675" -> "1000672"  [label="AST: "];
"1000676" -> "1000672"  [label="AST: "];
"1000677" -> "1000672"  [label="CFG: "];
"1000672" -> "1000671"  [label="DDG: "];
"1000672" -> "1000671"  [label="DDG: "];
"1000671" -> "1000677"  [label="CFG: "];
"1000677" -> "1000671"  [label="AST: "];
"1000671" -> "1001447"  [label="DDG: "];
"1000684" -> "1000683"  [label="AST: "];
"1000684" -> "1000687"  [label="CFG: "];
"1000685" -> "1000684"  [label="AST: "];
"1000686" -> "1000684"  [label="AST: "];
"1000687" -> "1000684"  [label="AST: "];
"1000691" -> "1000684"  [label="CFG: "];
"1000684" -> "1001447"  [label="DDG: "];
"1000684" -> "1001447"  [label="DDG: "];
"1000684" -> "1001447"  [label="DDG: "];
"1000594" -> "1000684"  [label="DDG: "];
"1000349" -> "1000684"  [label="DDG: "];
"1000741" -> "1000678"  [label="AST: "];
"1000741" -> "1000748"  [label="CFG: "];
"1000742" -> "1000741"  [label="AST: "];
"1000743" -> "1000741"  [label="AST: "];
"1000746" -> "1000741"  [label="AST: "];
"1000747" -> "1000741"  [label="AST: "];
"1000748" -> "1000741"  [label="AST: "];
"1000752" -> "1000741"  [label="CFG: "];
"1000741" -> "1001447"  [label="DDG: "];
"1000741" -> "1001447"  [label="DDG: "];
"1000741" -> "1001447"  [label="DDG: "];
"1000741" -> "1001447"  [label="DDG: "];
"1000741" -> "1001447"  [label="DDG: "];
"1000743" -> "1000741"  [label="DDG: "];
"1000711" -> "1000741"  [label="DDG: "];
"1000738" -> "1000741"  [label="DDG: "];
"1000748" -> "1000741"  [label="DDG: "];
"1000758" -> "1000756"  [label="AST: "];
"1000758" -> "1000766"  [label="CFG: "];
"1000759" -> "1000758"  [label="AST: "];
"1000760" -> "1000758"  [label="AST: "];
"1000762" -> "1000758"  [label="AST: "];
"1000763" -> "1000758"  [label="AST: "];
"1000764" -> "1000758"  [label="AST: "];
"1000766" -> "1000758"  [label="AST: "];
"1000756" -> "1000758"  [label="CFG: "];
"1000758" -> "1001447"  [label="DDG: "];
"1000758" -> "1001447"  [label="DDG: "];
"1000758" -> "1001447"  [label="DDG: "];
"1000758" -> "1001447"  [label="DDG: "];
"1000758" -> "1000756"  [label="DDG: "];
"1000758" -> "1000756"  [label="DDG: "];
"1000758" -> "1000756"  [label="DDG: "];
"1000758" -> "1000756"  [label="DDG: "];
"1000758" -> "1000756"  [label="DDG: "];
"1000764" -> "1000758"  [label="DDG: "];
"1000766" -> "1000758"  [label="DDG: "];
"1000756" -> "1000150"  [label="AST: "];
"1000757" -> "1000756"  [label="AST: "];
"1000772" -> "1000756"  [label="CFG: "];
"1000756" -> "1001447"  [label="DDG: "];
"1000756" -> "1001447"  [label="DDG: "];
}
