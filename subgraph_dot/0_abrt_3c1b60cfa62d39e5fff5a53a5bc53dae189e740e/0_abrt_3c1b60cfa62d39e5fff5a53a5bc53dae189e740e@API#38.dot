digraph "0_abrt_3c1b60cfa62d39e5fff5a53a5bc53dae189e740e@API" {
"1001058" [label="(Call,free(cmdline))"];
"1001054" [label="(Call,*cmdline = get_cmdline(pid))"];
"1001056" [label="(Call,get_cmdline(pid))"];
"1000932" [label="(Call,get_env_variable(pid, \"container_uuid\", &tmp))"];
"1000913" [label="(Call,get_env_variable(pid, \"container\", &tmp))"];
"1000897" [label="(Call,dump_namespace_diff_ext(dest_filename, 1, pid, dd->dd_uid, dd->dd_gid))"];
"1000885" [label="(Call,dump_fd_info_ext(dest_filename, source_filename, dd->dd_uid, dd->dd_gid))"];
"1000837" [label="(Call,strrchr(dest_filename, '/'))"];
"1000826" [label="(Call,*dest_filename = concat_path_file(dd->dd_dirname, \"also_somewhat_longish_name\"))"];
"1000828" [label="(Call,concat_path_file(dd->dd_dirname, \"also_somewhat_longish_name\"))"];
"1000873" [label="(Call,dd_copy_file(dd, FILENAME_MOUNTINFO, source_filename))"];
"1000864" [label="(Call,dd_copy_file(dd, FILENAME_CGROUP, source_filename))"];
"1000855" [label="(Call,dd_copy_file(dd, FILENAME_LIMITS, source_filename))"];
"1000846" [label="(Call,dd_copy_file(dd, FILENAME_MAPS, source_filename))"];
"1000810" [label="(Call,dd_create_basic_files(dd, fsuid, (rootdir != NULL) ? source_filename : NULL))"];
"1000775" [label="(Call,dd = dd_create(path, /*fs owner*/0, DEFAULT_DUMP_DIR_MODE))"];
"1000777" [label="(Call,dd_create(path, /*fs owner*/0, DEFAULT_DUMP_DIR_MODE))"];
"1000788" [label="(Call,sprintf(source_filename, \"/proc/%lu/root\", (long)pid))"];
"1000791" [label="(Call,(long)pid)"];
"1000814" [label="(Call,rootdir != NULL)"];
"1000799" [label="(Call,*rootdir = process_has_own_root(pid) ? get_rootdir(pid) : NULL)"];
"1000804" [label="(Call,get_rootdir(pid))"];
"1000802" [label="(Call,process_has_own_root(pid))"];
"1000821" [label="(Call,dd_create_basic_files(dd, fsuid, NULL))"];
"1000969" [label="(Call,get_pid_of_container(pid, &container_pid))"];
"1000963" [label="(Call,log_debug(\"Process %d is considered to be containerized\", pid))"];
"1000840" [label="(Literal,1)"];
"1000818" [label="(Identifier,NULL)"];
"1000980" [label="(Call,dd_save_text(dd, FILENAME_CONTAINER_CMDLINE, container_cmdline))"];
"1000848" [label="(Identifier,FILENAME_MAPS)"];
"1000901" [label="(Call,dd->dd_uid)"];
"1000916" [label="(Call,&tmp)"];
"1000783" [label="(Block,)"];
"1000822" [label="(Identifier,dd)"];
"1000873" [label="(Call,dd_copy_file(dd, FILENAME_MOUNTINFO, source_filename))"];
"1001062" [label="(Identifier,environ)"];
"1000908" [label="(Identifier,dest_filename)"];
"1000865" [label="(Identifier,dd)"];
"1000859" [label="(Call,strcpy(source_filename + source_base_ofs, \"cgroup\"))"];
"1000900" [label="(Identifier,pid)"];
"1000777" [label="(Call,dd_create(path, /*fs owner*/0, DEFAULT_DUMP_DIR_MODE))"];
"1000973" [label="(Literal,0)"];
"1000971" [label="(Call,&container_pid)"];
"1000886" [label="(Identifier,dest_filename)"];
"1000805" [label="(Identifier,pid)"];
"1000828" [label="(Call,concat_path_file(dd->dd_dirname, \"also_somewhat_longish_name\"))"];
"1000812" [label="(Identifier,fsuid)"];
"1000788" [label="(Call,sprintf(source_filename, \"/proc/%lu/root\", (long)pid))"];
"1000852" [label="(Identifier,source_filename)"];
"1000802" [label="(Call,process_has_own_root(pid))"];
"1000986" [label="(Call,dd_save_text(dd, FILENAME_ANALYZER, \"abrt-ccpp\"))"];
"1000813" [label="(Call,(rootdir != NULL) ? source_filename : NULL)"];
"1000942" [label="(Call,dd_save_text(dd, FILENAME_CONTAINER_UUID, tmp))"];
"1000789" [label="(Identifier,source_filename)"];
"1000939" [label="(Identifier,tmp)"];
"1001311" [label="(Call,cmd_args[2] = path)"];
"1000817" [label="(Identifier,source_filename)"];
"1000968" [label="(Call,get_pid_of_container(pid, &container_pid) == 0)"];
"1000891" [label="(Call,dd->dd_gid)"];
"1000857" [label="(Identifier,FILENAME_LIMITS)"];
"1000836" [label="(Call,strrchr(dest_filename, '/') + 1)"];
"1000814" [label="(Call,rootdir != NULL)"];
"1000933" [label="(Identifier,pid)"];
"1000919" [label="(Call,tmp != NULL)"];
"1000855" [label="(Call,dd_copy_file(dd, FILENAME_LIMITS, source_filename))"];
"1000851" [label="(Call,source_filename + source_base_ofs)"];
"1000864" [label="(Call,dd_copy_file(dd, FILENAME_CGROUP, source_filename))"];
"1000790" [label="(Literal,\"/proc/%lu/root\")"];
"1000815" [label="(Identifier,rootdir)"];
"1000806" [label="(Identifier,NULL)"];
"1000838" [label="(Identifier,dest_filename)"];
"1000895" [label="(Identifier,dest_base)"];
"1000888" [label="(Call,dd->dd_uid)"];
"1000874" [label="(Identifier,dd)"];
"1000835" [label="(Identifier,dest_base)"];
"1000915" [label="(Literal,\"container\")"];
"1001237" [label="(Call,path + path_len)"];
"1000839" [label="(Literal,'/')"];
"1001236" [label="(Call,strcpy(path + path_len, \"/hs_err.log\"))"];
"1000875" [label="(Identifier,FILENAME_MOUNTINFO)"];
"1000808" [label="(Identifier,g_settings_explorechroots)"];
"1000934" [label="(Literal,\"container_uuid\")"];
"1001055" [label="(Identifier,cmdline)"];
"1000920" [label="(Identifier,tmp)"];
"1001244" [label="(Call,create_or_die(path, user_core_fd))"];
"1001058" [label="(Call,free(cmdline))"];
"1000923" [label="(Call,dd_save_text(dd, FILENAME_CONTAINER, tmp))"];
"1001352" [label="(Call,xstrndup(path, path_len - (sizeof(\".new\")-1)))"];
"1000810" [label="(Call,dd_create_basic_files(dd, fsuid, (rootdir != NULL) ? source_filename : NULL))"];
"1000150" [label="(Block,)"];
"1000829" [label="(Call,dd->dd_dirname)"];
"1000867" [label="(Identifier,source_filename)"];
"1000816" [label="(Identifier,NULL)"];
"1001063" [label="(Call,get_environ(pid))"];
"1000914" [label="(Identifier,pid)"];
"1000897" [label="(Call,dump_namespace_diff_ext(dest_filename, 1, pid, dd->dd_uid, dd->dd_gid))"];
"1001447" [label="(MethodReturn,int)"];
"1000799" [label="(Call,*rootdir = process_has_own_root(pid) ? get_rootdir(pid) : NULL)"];
"1000842" [label="(Call,source_filename + source_base_ofs)"];
"1000899" [label="(Literal,1)"];
"1000832" [label="(Literal,\"also_somewhat_longish_name\")"];
"1000964" [label="(Literal,\"Process %d is considered to be containerized\")"];
"1000776" [label="(Identifier,dd)"];
"1000904" [label="(Call,dd->dd_gid)"];
"1000869" [label="(Call,source_filename + source_base_ofs)"];
"1000782" [label="(Identifier,dd)"];
"1000841" [label="(Call,strcpy(source_filename + source_base_ofs, \"maps\"))"];
"1001150" [label="(Call,create_or_die(path, user_core_fd))"];
"1000846" [label="(Call,dd_copy_file(dd, FILENAME_MAPS, source_filename))"];
"1000870" [label="(Identifier,source_filename)"];
"1000861" [label="(Identifier,source_filename)"];
"1001057" [label="(Identifier,pid)"];
"1000881" [label="(Call,source_filename + source_base_ofs)"];
"1000834" [label="(Call,*dest_base = strrchr(dest_filename, '/') + 1)"];
"1000952" [label="(Call,rootdir != NULL)"];
"1000885" [label="(Call,dump_fd_info_ext(dest_filename, source_filename, dd->dd_uid, dd->dd_gid))"];
"1000811" [label="(Identifier,dd)"];
"1000856" [label="(Identifier,dd)"];
"1000809" [label="(Block,)"];
"1000793" [label="(Identifier,pid)"];
"1000775" [label="(Call,dd = dd_create(path, /*fs owner*/0, DEFAULT_DUMP_DIR_MODE))"];
"1000780" [label="(Identifier,DEFAULT_DUMP_DIR_MODE)"];
"1000823" [label="(Identifier,fsuid)"];
"1000866" [label="(Identifier,FILENAME_CGROUP)"];
"1000801" [label="(Call,process_has_own_root(pid) ? get_rootdir(pid) : NULL)"];
"1000887" [label="(Identifier,source_filename)"];
"1000969" [label="(Call,get_pid_of_container(pid, &container_pid))"];
"1000963" [label="(Call,log_debug(\"Process %d is considered to be containerized\", pid))"];
"1000898" [label="(Identifier,dest_filename)"];
"1000858" [label="(Identifier,source_filename)"];
"1000868" [label="(Call,strcpy(source_filename + source_base_ofs, \"mountinfo\"))"];
"1000779" [label="(Literal,0)"];
"1000786" [label="(Call,source_base_ofs = sprintf(source_filename, \"/proc/%lu/root\", (long)pid))"];
"1000965" [label="(Identifier,pid)"];
"1000913" [label="(Call,get_env_variable(pid, \"container\", &tmp))"];
"1000824" [label="(Identifier,NULL)"];
"1001136" [label="(Call,error_msg(\"Error saving '%s'\", path))"];
"1000932" [label="(Call,get_env_variable(pid, \"container_uuid\", &tmp))"];
"1000860" [label="(Call,source_filename + source_base_ofs)"];
"1001056" [label="(Call,get_cmdline(pid))"];
"1000837" [label="(Call,strrchr(dest_filename, '/'))"];
"1001334" [label="(Call,fork_execv_on_steroids(0, (char **)cmd_args, NULL, NULL, path, 0))"];
"1001054" [label="(Call,*cmdline = get_cmdline(pid))"];
"1001298" [label="(Call,sprintf(source_filename, \"/proc/%lu/root\", (long)pid))"];
"1000791" [label="(Call,(long)pid)"];
"1000935" [label="(Call,&tmp)"];
"1001059" [label="(Identifier,cmdline)"];
"1000970" [label="(Identifier,pid)"];
"1000962" [label="(Block,)"];
"1000878" [label="(Identifier,dest_base)"];
"1000804" [label="(Call,get_rootdir(pid))"];
"1000880" [label="(Call,strcpy(source_filename + source_base_ofs, \"fd\"))"];
"1000850" [label="(Call,strcpy(source_filename + source_base_ofs, \"limits\"))"];
"1000827" [label="(Identifier,dest_filename)"];
"1000849" [label="(Identifier,source_filename)"];
"1000803" [label="(Identifier,pid)"];
"1000778" [label="(Identifier,path)"];
"1000910" [label="(Call,*tmp = NULL)"];
"1000876" [label="(Identifier,source_filename)"];
"1000820" [label="(Block,)"];
"1000821" [label="(Call,dd_create_basic_files(dd, fsuid, NULL))"];
"1000800" [label="(Identifier,rootdir)"];
"1000826" [label="(Call,*dest_filename = concat_path_file(dd->dd_dirname, \"also_somewhat_longish_name\"))"];
"1000847" [label="(Identifier,dd)"];
"1000907" [label="(Call,free(dest_filename))"];
"1001058" -> "1000783"  [label="AST: "];
"1001058" -> "1001059"  [label="CFG: "];
"1001059" -> "1001058"  [label="AST: "];
"1001062" -> "1001058"  [label="CFG: "];
"1001058" -> "1001447"  [label="DDG: "];
"1001054" -> "1001058"  [label="DDG: "];
"1001054" -> "1000783"  [label="AST: "];
"1001054" -> "1001056"  [label="CFG: "];
"1001055" -> "1001054"  [label="AST: "];
"1001056" -> "1001054"  [label="AST: "];
"1001059" -> "1001054"  [label="CFG: "];
"1001054" -> "1001447"  [label="DDG: "];
"1001056" -> "1001054"  [label="DDG: "];
"1001056" -> "1001057"  [label="CFG: "];
"1001057" -> "1001056"  [label="AST: "];
"1000932" -> "1001056"  [label="DDG: "];
"1000969" -> "1001056"  [label="DDG: "];
"1001056" -> "1001063"  [label="DDG: "];
"1000932" -> "1000783"  [label="AST: "];
"1000932" -> "1000935"  [label="CFG: "];
"1000933" -> "1000932"  [label="AST: "];
"1000934" -> "1000932"  [label="AST: "];
"1000935" -> "1000932"  [label="AST: "];
"1000939" -> "1000932"  [label="CFG: "];
"1000932" -> "1001447"  [label="DDG: "];
"1000932" -> "1001447"  [label="DDG: "];
"1000913" -> "1000932"  [label="DDG: "];
"1000913" -> "1000932"  [label="DDG: "];
"1000932" -> "1000963"  [label="DDG: "];
"1000913" -> "1000783"  [label="AST: "];
"1000913" -> "1000916"  [label="CFG: "];
"1000914" -> "1000913"  [label="AST: "];
"1000915" -> "1000913"  [label="AST: "];
"1000916" -> "1000913"  [label="AST: "];
"1000920" -> "1000913"  [label="CFG: "];
"1000913" -> "1001447"  [label="DDG: "];
"1000897" -> "1000913"  [label="DDG: "];
"1000897" -> "1000783"  [label="AST: "];
"1000897" -> "1000904"  [label="CFG: "];
"1000898" -> "1000897"  [label="AST: "];
"1000899" -> "1000897"  [label="AST: "];
"1000900" -> "1000897"  [label="AST: "];
"1000901" -> "1000897"  [label="AST: "];
"1000904" -> "1000897"  [label="AST: "];
"1000908" -> "1000897"  [label="CFG: "];
"1000897" -> "1001447"  [label="DDG: "];
"1000897" -> "1001447"  [label="DDG: "];
"1000897" -> "1001447"  [label="DDG: "];
"1000885" -> "1000897"  [label="DDG: "];
"1000885" -> "1000897"  [label="DDG: "];
"1000885" -> "1000897"  [label="DDG: "];
"1000804" -> "1000897"  [label="DDG: "];
"1000802" -> "1000897"  [label="DDG: "];
"1000897" -> "1000907"  [label="DDG: "];
"1000885" -> "1000783"  [label="AST: "];
"1000885" -> "1000891"  [label="CFG: "];
"1000886" -> "1000885"  [label="AST: "];
"1000887" -> "1000885"  [label="AST: "];
"1000888" -> "1000885"  [label="AST: "];
"1000891" -> "1000885"  [label="AST: "];
"1000895" -> "1000885"  [label="CFG: "];
"1000885" -> "1001447"  [label="DDG: "];
"1000885" -> "1001447"  [label="DDG: "];
"1000837" -> "1000885"  [label="DDG: "];
"1000873" -> "1000885"  [label="DDG: "];
"1000885" -> "1001298"  [label="DDG: "];
"1000837" -> "1000836"  [label="AST: "];
"1000837" -> "1000839"  [label="CFG: "];
"1000838" -> "1000837"  [label="AST: "];
"1000839" -> "1000837"  [label="AST: "];
"1000840" -> "1000837"  [label="CFG: "];
"1000837" -> "1000834"  [label="DDG: "];
"1000837" -> "1000834"  [label="DDG: "];
"1000837" -> "1000836"  [label="DDG: "];
"1000837" -> "1000836"  [label="DDG: "];
"1000826" -> "1000837"  [label="DDG: "];
"1000826" -> "1000783"  [label="AST: "];
"1000826" -> "1000828"  [label="CFG: "];
"1000827" -> "1000826"  [label="AST: "];
"1000828" -> "1000826"  [label="AST: "];
"1000835" -> "1000826"  [label="CFG: "];
"1000826" -> "1001447"  [label="DDG: "];
"1000828" -> "1000826"  [label="DDG: "];
"1000828" -> "1000826"  [label="DDG: "];
"1000828" -> "1000832"  [label="CFG: "];
"1000829" -> "1000828"  [label="AST: "];
"1000832" -> "1000828"  [label="AST: "];
"1000828" -> "1001447"  [label="DDG: "];
"1000873" -> "1000783"  [label="AST: "];
"1000873" -> "1000876"  [label="CFG: "];
"1000874" -> "1000873"  [label="AST: "];
"1000875" -> "1000873"  [label="AST: "];
"1000876" -> "1000873"  [label="AST: "];
"1000878" -> "1000873"  [label="CFG: "];
"1000873" -> "1001447"  [label="DDG: "];
"1000873" -> "1001447"  [label="DDG: "];
"1000864" -> "1000873"  [label="DDG: "];
"1000864" -> "1000873"  [label="DDG: "];
"1000873" -> "1000880"  [label="DDG: "];
"1000873" -> "1000881"  [label="DDG: "];
"1000873" -> "1000923"  [label="DDG: "];
"1000873" -> "1000942"  [label="DDG: "];
"1000873" -> "1000980"  [label="DDG: "];
"1000873" -> "1000986"  [label="DDG: "];
"1000864" -> "1000783"  [label="AST: "];
"1000864" -> "1000867"  [label="CFG: "];
"1000865" -> "1000864"  [label="AST: "];
"1000866" -> "1000864"  [label="AST: "];
"1000867" -> "1000864"  [label="AST: "];
"1000870" -> "1000864"  [label="CFG: "];
"1000864" -> "1001447"  [label="DDG: "];
"1000864" -> "1001447"  [label="DDG: "];
"1000855" -> "1000864"  [label="DDG: "];
"1000855" -> "1000864"  [label="DDG: "];
"1000864" -> "1000868"  [label="DDG: "];
"1000864" -> "1000869"  [label="DDG: "];
"1000855" -> "1000783"  [label="AST: "];
"1000855" -> "1000858"  [label="CFG: "];
"1000856" -> "1000855"  [label="AST: "];
"1000857" -> "1000855"  [label="AST: "];
"1000858" -> "1000855"  [label="AST: "];
"1000861" -> "1000855"  [label="CFG: "];
"1000855" -> "1001447"  [label="DDG: "];
"1000855" -> "1001447"  [label="DDG: "];
"1000846" -> "1000855"  [label="DDG: "];
"1000846" -> "1000855"  [label="DDG: "];
"1000855" -> "1000859"  [label="DDG: "];
"1000855" -> "1000860"  [label="DDG: "];
"1000846" -> "1000783"  [label="AST: "];
"1000846" -> "1000849"  [label="CFG: "];
"1000847" -> "1000846"  [label="AST: "];
"1000848" -> "1000846"  [label="AST: "];
"1000849" -> "1000846"  [label="AST: "];
"1000852" -> "1000846"  [label="CFG: "];
"1000846" -> "1001447"  [label="DDG: "];
"1000846" -> "1001447"  [label="DDG: "];
"1000810" -> "1000846"  [label="DDG: "];
"1000821" -> "1000846"  [label="DDG: "];
"1000788" -> "1000846"  [label="DDG: "];
"1000846" -> "1000850"  [label="DDG: "];
"1000846" -> "1000851"  [label="DDG: "];
"1000810" -> "1000809"  [label="AST: "];
"1000810" -> "1000813"  [label="CFG: "];
"1000811" -> "1000810"  [label="AST: "];
"1000812" -> "1000810"  [label="AST: "];
"1000813" -> "1000810"  [label="AST: "];
"1000827" -> "1000810"  [label="CFG: "];
"1000810" -> "1001447"  [label="DDG: "];
"1000810" -> "1001447"  [label="DDG: "];
"1000810" -> "1001447"  [label="DDG: "];
"1000775" -> "1000810"  [label="DDG: "];
"1000788" -> "1000810"  [label="DDG: "];
"1000814" -> "1000810"  [label="DDG: "];
"1000775" -> "1000150"  [label="AST: "];
"1000775" -> "1000777"  [label="CFG: "];
"1000776" -> "1000775"  [label="AST: "];
"1000777" -> "1000775"  [label="AST: "];
"1000782" -> "1000775"  [label="CFG: "];
"1000775" -> "1001447"  [label="DDG: "];
"1000775" -> "1001447"  [label="DDG: "];
"1000777" -> "1000775"  [label="DDG: "];
"1000777" -> "1000775"  [label="DDG: "];
"1000777" -> "1000775"  [label="DDG: "];
"1000775" -> "1000821"  [label="DDG: "];
"1000777" -> "1000780"  [label="CFG: "];
"1000778" -> "1000777"  [label="AST: "];
"1000779" -> "1000777"  [label="AST: "];
"1000780" -> "1000777"  [label="AST: "];
"1000777" -> "1001447"  [label="DDG: "];
"1000777" -> "1001447"  [label="DDG: "];
"1000777" -> "1001136"  [label="DDG: "];
"1000777" -> "1001150"  [label="DDG: "];
"1000777" -> "1001236"  [label="DDG: "];
"1000777" -> "1001237"  [label="DDG: "];
"1000777" -> "1001244"  [label="DDG: "];
"1000777" -> "1001311"  [label="DDG: "];
"1000777" -> "1001334"  [label="DDG: "];
"1000777" -> "1001352"  [label="DDG: "];
"1000788" -> "1000786"  [label="AST: "];
"1000788" -> "1000791"  [label="CFG: "];
"1000789" -> "1000788"  [label="AST: "];
"1000790" -> "1000788"  [label="AST: "];
"1000791" -> "1000788"  [label="AST: "];
"1000786" -> "1000788"  [label="CFG: "];
"1000788" -> "1001447"  [label="DDG: "];
"1000788" -> "1000786"  [label="DDG: "];
"1000788" -> "1000786"  [label="DDG: "];
"1000788" -> "1000786"  [label="DDG: "];
"1000791" -> "1000788"  [label="DDG: "];
"1000788" -> "1000813"  [label="DDG: "];
"1000788" -> "1000841"  [label="DDG: "];
"1000788" -> "1000842"  [label="DDG: "];
"1000791" -> "1000793"  [label="CFG: "];
"1000792" -> "1000791"  [label="AST: "];
"1000793" -> "1000791"  [label="AST: "];
"1000791" -> "1000802"  [label="DDG: "];
"1000814" -> "1000813"  [label="AST: "];
"1000814" -> "1000816"  [label="CFG: "];
"1000815" -> "1000814"  [label="AST: "];
"1000816" -> "1000814"  [label="AST: "];
"1000817" -> "1000814"  [label="CFG: "];
"1000818" -> "1000814"  [label="CFG: "];
"1000799" -> "1000814"  [label="DDG: "];
"1000814" -> "1000813"  [label="DDG: "];
"1000814" -> "1000910"  [label="DDG: "];
"1000814" -> "1000919"  [label="DDG: "];
"1000814" -> "1000952"  [label="DDG: "];
"1000799" -> "1000783"  [label="AST: "];
"1000799" -> "1000801"  [label="CFG: "];
"1000800" -> "1000799"  [label="AST: "];
"1000801" -> "1000799"  [label="AST: "];
"1000808" -> "1000799"  [label="CFG: "];
"1000799" -> "1001447"  [label="DDG: "];
"1000804" -> "1000799"  [label="DDG: "];
"1000799" -> "1000952"  [label="DDG: "];
"1000804" -> "1000801"  [label="AST: "];
"1000804" -> "1000805"  [label="CFG: "];
"1000805" -> "1000804"  [label="AST: "];
"1000801" -> "1000804"  [label="CFG: "];
"1000804" -> "1000801"  [label="DDG: "];
"1000802" -> "1000804"  [label="DDG: "];
"1000802" -> "1000801"  [label="AST: "];
"1000802" -> "1000803"  [label="CFG: "];
"1000803" -> "1000802"  [label="AST: "];
"1000805" -> "1000802"  [label="CFG: "];
"1000806" -> "1000802"  [label="CFG: "];
"1000821" -> "1000820"  [label="AST: "];
"1000821" -> "1000824"  [label="CFG: "];
"1000822" -> "1000821"  [label="AST: "];
"1000823" -> "1000821"  [label="AST: "];
"1000824" -> "1000821"  [label="AST: "];
"1000827" -> "1000821"  [label="CFG: "];
"1000821" -> "1001447"  [label="DDG: "];
"1000821" -> "1001447"  [label="DDG: "];
"1000821" -> "1000910"  [label="DDG: "];
"1000821" -> "1000919"  [label="DDG: "];
"1000969" -> "1000968"  [label="AST: "];
"1000969" -> "1000971"  [label="CFG: "];
"1000970" -> "1000969"  [label="AST: "];
"1000971" -> "1000969"  [label="AST: "];
"1000973" -> "1000969"  [label="CFG: "];
"1000969" -> "1001447"  [label="DDG: "];
"1000969" -> "1000968"  [label="DDG: "];
"1000969" -> "1000968"  [label="DDG: "];
"1000963" -> "1000969"  [label="DDG: "];
"1000963" -> "1000962"  [label="AST: "];
"1000963" -> "1000965"  [label="CFG: "];
"1000964" -> "1000963"  [label="AST: "];
"1000965" -> "1000963"  [label="AST: "];
"1000970" -> "1000963"  [label="CFG: "];
"1000963" -> "1001447"  [label="DDG: "];
}
