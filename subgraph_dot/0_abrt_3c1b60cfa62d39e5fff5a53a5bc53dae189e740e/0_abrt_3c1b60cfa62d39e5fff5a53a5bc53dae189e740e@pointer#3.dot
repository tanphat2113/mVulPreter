digraph "0_abrt_3c1b60cfa62d39e5fff5a53a5bc53dae189e740e@pointer" {
"1000687" [label="(Call,signame ? signame : signal_str)"];
"1000594" [label="(Call,*signame = NULL)"];
"1000579" [label="(Call,executable == NULL)"];
"1000466" [label="(Call,executable && strstr(executable, \"/abrt-hook-ccpp\"))"];
"1000468" [label="(Call,strstr(executable, \"/abrt-hook-ccpp\"))"];
"1000461" [label="(Call,*executable = get_executable(pid))"];
"1000463" [label="(Call,get_executable(pid))"];
"1000435" [label="(Call,pid = xatoi_positive(argv[8]))"];
"1000437" [label="(Call,xatoi_positive(argv[8]))"];
"1000149" [label="(MethodParameterIn,char** argv)"];
"1000472" [label="(Call,error_msg_and_die(\"PID %lu is '%s', not dumping it to avoid recursion\",\n                        (long)pid, executable))"];
"1000474" [label="(Call,(long)pid)"];
"1000494" [label="(Call,xmalloc_xopen_read_close(path, /*maxsz:*/ NULL))"];
"1000485" [label="(Call,sprintf(path, \"/proc/%lu/status\", (long)pid))"];
"1000488" [label="(Call,(long)pid)"];
"1000480" [label="(Call,get_cwd(pid))"];
"1000354" [label="(Call,strtoull(argv[2], NULL, 10))"];
"1000349" [label="(Call,xatoi_positive(signal_str))"];
"1000341" [label="(Call,* signal_str = argv[1])"];
"1000311" [label="(Call,strchr(argv[1], ' '))"];
"1000604" [label="(Call,create_user_core(user_core_fd, pid, ulimit_c))"];
"1000481" [label="(Identifier,pid)"];
"1000343" [label="(Call,argv[1])"];
"1000438" [label="(Call,argv[8])"];
"1000477" [label="(Identifier,executable)"];
"1000653" [label="(Call,check_recent_crash_file(path, executable))"];
"1000379" [label="(Call,*pid_str = argv[3])"];
"1000311" [label="(Call,strchr(argv[1], ' '))"];
"1000495" [label="(Identifier,path)"];
"1000429" [label="(Call,*global_pid_str = argv[8])"];
"1000320" [label="(Identifier,i)"];
"1000688" [label="(Identifier,signame)"];
"1000315" [label="(Literal,' ')"];
"1000642" [label="(Call,create_user_core(user_core_fd, pid, ulimit_c))"];
"1000464" [label="(Identifier,pid)"];
"1000443" [label="(Identifier,tid)"];
"1000291" [label="(Call,strcmp(argv[1], \"--config-test\"))"];
"1000287" [label="(Call,argc == 2 && strcmp(argv[1], \"--config-test\"))"];
"1000330" [label="(Call,strchrnul(argv[i], ' '))"];
"1000468" [label="(Call,strstr(executable, \"/abrt-hook-ccpp\"))"];
"1000578" [label="(ControlStructure,if (executable == NULL))"];
"1000394" [label="(Call,xatoi_positive(argv[4]))"];
"1000622" [label="(Call,create_user_core(user_core_fd, pid, ulimit_c))"];
"1000349" [label="(Call,xatoi_positive(signal_str))"];
"1000348" [label="(Identifier,signal_no)"];
"1000405" [label="(Call,perror_msg_and_die(\"PID '%s' or limit '%s' is bogus\", argv[3], argv[2]))"];
"1000585" [label="(Call,(long)pid)"];
"1000473" [label="(Literal,\"PID %lu is '%s', not dumping it to avoid recursion\")"];
"1000492" [label="(Call,*proc_pid_status = xmalloc_xopen_read_close(path, /*maxsz:*/ NULL))"];
"1000488" [label="(Call,(long)pid)"];
"1000352" [label="(Call,ulimit_c = strtoull(argv[2], NULL, 10))"];
"1000584" [label="(Literal,\"Can't read /proc/%lu/exe link\")"];
"1000463" [label="(Call,get_executable(pid))"];
"1000469" [label="(Identifier,executable)"];
"1000359" [label="(Literal,10)"];
"1000149" [label="(MethodParameterIn,char** argv)"];
"1000354" [label="(Call,strtoull(argv[2], NULL, 10))"];
"1000581" [label="(Identifier,NULL)"];
"1000467" [label="(Identifier,executable)"];
"1000305" [label="(Call,error_msg_and_die(\"Usage: %s SIGNO CORE_SIZE_LIMIT PID UID GID TIME BINARY_NAME GLOBAL_PID [TID]\", argv[0]))"];
"1000687" [label="(Call,signame ? signame : signal_str)"];
"1000490" [label="(Identifier,pid)"];
"1000150" [label="(Block,)"];
"1000766" [label="(Call,(long)pid)"];
"1000684" [label="(Call,log_warning(\"Ignoring crash of %s (SIG%s).\",\n                        executable, signame ? signame : signal_str))"];
"1000342" [label="(Identifier,signal_str)"];
"1000494" [label="(Call,xmalloc_xopen_read_close(path, /*maxsz:*/ NULL))"];
"1000436" [label="(Identifier,pid)"];
"1001447" [label="(MethodReturn,int)"];
"1000462" [label="(Identifier,executable)"];
"1000461" [label="(Call,*executable = get_executable(pid))"];
"1000341" [label="(Call,* signal_str = argv[1])"];
"1000658" [label="(Call,create_user_core(user_core_fd, pid, ulimit_c))"];
"1000338" [label="(Identifier,errno)"];
"1000487" [label="(Literal,\"/proc/%lu/status\")"];
"1000472" [label="(Call,error_msg_and_die(\"PID %lu is '%s', not dumping it to avoid recursion\",\n                        (long)pid, executable))"];
"1000355" [label="(Call,argv[2])"];
"1000596" [label="(Identifier,NULL)"];
"1000595" [label="(Identifier,signame)"];
"1000471" [label="(Block,)"];
"1000476" [label="(Identifier,pid)"];
"1000496" [label="(Identifier,NULL)"];
"1000312" [label="(Call,argv[1])"];
"1000493" [label="(Identifier,proc_pid_status)"];
"1001440" [label="(Call,proc_cwd != NULL)"];
"1000480" [label="(Call,get_cwd(pid))"];
"1000600" [label="(Identifier,signal_no)"];
"1000387" [label="(Call,xatoi_positive(argv[3]))"];
"1000347" [label="(Call,signal_no = xatoi_positive(signal_str))"];
"1000474" [label="(Call,(long)pid)"];
"1000435" [label="(Call,pid = xatoi_positive(argv[8]))"];
"1000478" [label="(Call,user_pwd = get_cwd(pid))"];
"1000743" [label="(Call,(long)pid)"];
"1000579" [label="(Call,executable == NULL)"];
"1000594" [label="(Call,*signame = NULL)"];
"1000466" [label="(Call,executable && strstr(executable, \"/abrt-hook-ccpp\"))"];
"1000437" [label="(Call,xatoi_positive(argv[8]))"];
"1000465" [label="(ControlStructure,if (executable && strstr(executable, \"/abrt-hook-ccpp\")))"];
"1000485" [label="(Call,sprintf(path, \"/proc/%lu/status\", (long)pid))"];
"1000486" [label="(Identifier,path)"];
"1000689" [label="(Identifier,signame)"];
"1000310" [label="(ControlStructure,if (strchr(argv[1], ' ')))"];
"1000447" [label="(Call,*tid_str = argv[9])"];
"1000479" [label="(Identifier,user_pwd)"];
"1000764" [label="(Call,iso_date_string(NULL))"];
"1000526" [label="(Call,(long)pid)"];
"1000350" [label="(Identifier,signal_str)"];
"1000358" [label="(Identifier,NULL)"];
"1000512" [label="(Call,(long)pid)"];
"1000690" [label="(Identifier,signal_str)"];
"1000569" [label="(Call,open_user_core(uid, fsuid, fsgid, pid, &argv[1]))"];
"1000470" [label="(Literal,\"/abrt-hook-ccpp\")"];
"1000580" [label="(Identifier,executable)"];
"1000687" -> "1000684"  [label="AST: "];
"1000687" -> "1000689"  [label="CFG: "];
"1000687" -> "1000690"  [label="CFG: "];
"1000688" -> "1000687"  [label="AST: "];
"1000689" -> "1000687"  [label="AST: "];
"1000690" -> "1000687"  [label="AST: "];
"1000684" -> "1000687"  [label="CFG: "];
"1000687" -> "1001447"  [label="DDG: "];
"1000687" -> "1001447"  [label="DDG: "];
"1000594" -> "1000687"  [label="DDG: "];
"1000349" -> "1000687"  [label="DDG: "];
"1000594" -> "1000150"  [label="AST: "];
"1000594" -> "1000596"  [label="CFG: "];
"1000595" -> "1000594"  [label="AST: "];
"1000596" -> "1000594"  [label="AST: "];
"1000600" -> "1000594"  [label="CFG: "];
"1000594" -> "1001447"  [label="DDG: "];
"1000594" -> "1001447"  [label="DDG: "];
"1000579" -> "1000594"  [label="DDG: "];
"1000594" -> "1000684"  [label="DDG: "];
"1000579" -> "1000578"  [label="AST: "];
"1000579" -> "1000581"  [label="CFG: "];
"1000580" -> "1000579"  [label="AST: "];
"1000581" -> "1000579"  [label="AST: "];
"1000584" -> "1000579"  [label="CFG: "];
"1000595" -> "1000579"  [label="CFG: "];
"1000579" -> "1001447"  [label="DDG: "];
"1000579" -> "1001447"  [label="DDG: "];
"1000579" -> "1001447"  [label="DDG: "];
"1000466" -> "1000579"  [label="DDG: "];
"1000472" -> "1000579"  [label="DDG: "];
"1000494" -> "1000579"  [label="DDG: "];
"1000579" -> "1000653"  [label="DDG: "];
"1000579" -> "1000764"  [label="DDG: "];
"1000579" -> "1001440"  [label="DDG: "];
"1000466" -> "1000465"  [label="AST: "];
"1000466" -> "1000467"  [label="CFG: "];
"1000466" -> "1000468"  [label="CFG: "];
"1000467" -> "1000466"  [label="AST: "];
"1000468" -> "1000466"  [label="AST: "];
"1000473" -> "1000466"  [label="CFG: "];
"1000479" -> "1000466"  [label="CFG: "];
"1000466" -> "1001447"  [label="DDG: "];
"1000466" -> "1001447"  [label="DDG: "];
"1000468" -> "1000466"  [label="DDG: "];
"1000468" -> "1000466"  [label="DDG: "];
"1000461" -> "1000466"  [label="DDG: "];
"1000466" -> "1000472"  [label="DDG: "];
"1000468" -> "1000470"  [label="CFG: "];
"1000469" -> "1000468"  [label="AST: "];
"1000470" -> "1000468"  [label="AST: "];
"1000461" -> "1000468"  [label="DDG: "];
"1000461" -> "1000150"  [label="AST: "];
"1000461" -> "1000463"  [label="CFG: "];
"1000462" -> "1000461"  [label="AST: "];
"1000463" -> "1000461"  [label="AST: "];
"1000467" -> "1000461"  [label="CFG: "];
"1000461" -> "1001447"  [label="DDG: "];
"1000463" -> "1000461"  [label="DDG: "];
"1000463" -> "1000464"  [label="CFG: "];
"1000464" -> "1000463"  [label="AST: "];
"1000435" -> "1000463"  [label="DDG: "];
"1000463" -> "1000474"  [label="DDG: "];
"1000463" -> "1000480"  [label="DDG: "];
"1000435" -> "1000150"  [label="AST: "];
"1000435" -> "1000437"  [label="CFG: "];
"1000436" -> "1000435"  [label="AST: "];
"1000437" -> "1000435"  [label="AST: "];
"1000443" -> "1000435"  [label="CFG: "];
"1000435" -> "1001447"  [label="DDG: "];
"1000437" -> "1000435"  [label="DDG: "];
"1000437" -> "1000438"  [label="CFG: "];
"1000438" -> "1000437"  [label="AST: "];
"1000437" -> "1001447"  [label="DDG: "];
"1000149" -> "1000437"  [label="DDG: "];
"1000149" -> "1000147"  [label="AST: "];
"1000149" -> "1001447"  [label="DDG: "];
"1000149" -> "1000287"  [label="DDG: "];
"1000149" -> "1000291"  [label="DDG: "];
"1000149" -> "1000305"  [label="DDG: "];
"1000149" -> "1000311"  [label="DDG: "];
"1000149" -> "1000330"  [label="DDG: "];
"1000149" -> "1000341"  [label="DDG: "];
"1000149" -> "1000354"  [label="DDG: "];
"1000149" -> "1000379"  [label="DDG: "];
"1000149" -> "1000387"  [label="DDG: "];
"1000149" -> "1000394"  [label="DDG: "];
"1000149" -> "1000405"  [label="DDG: "];
"1000149" -> "1000429"  [label="DDG: "];
"1000149" -> "1000447"  [label="DDG: "];
"1000472" -> "1000471"  [label="AST: "];
"1000472" -> "1000477"  [label="CFG: "];
"1000473" -> "1000472"  [label="AST: "];
"1000474" -> "1000472"  [label="AST: "];
"1000477" -> "1000472"  [label="AST: "];
"1000479" -> "1000472"  [label="CFG: "];
"1000472" -> "1001447"  [label="DDG: "];
"1000474" -> "1000472"  [label="DDG: "];
"1000474" -> "1000476"  [label="CFG: "];
"1000475" -> "1000474"  [label="AST: "];
"1000476" -> "1000474"  [label="AST: "];
"1000477" -> "1000474"  [label="CFG: "];
"1000474" -> "1000480"  [label="DDG: "];
"1000494" -> "1000492"  [label="AST: "];
"1000494" -> "1000496"  [label="CFG: "];
"1000495" -> "1000494"  [label="AST: "];
"1000496" -> "1000494"  [label="AST: "];
"1000492" -> "1000494"  [label="CFG: "];
"1000494" -> "1001447"  [label="DDG: "];
"1000494" -> "1000492"  [label="DDG: "];
"1000494" -> "1000492"  [label="DDG: "];
"1000485" -> "1000494"  [label="DDG: "];
"1000354" -> "1000494"  [label="DDG: "];
"1000485" -> "1000150"  [label="AST: "];
"1000485" -> "1000488"  [label="CFG: "];
"1000486" -> "1000485"  [label="AST: "];
"1000487" -> "1000485"  [label="AST: "];
"1000488" -> "1000485"  [label="AST: "];
"1000493" -> "1000485"  [label="CFG: "];
"1000485" -> "1001447"  [label="DDG: "];
"1000485" -> "1001447"  [label="DDG: "];
"1000488" -> "1000485"  [label="DDG: "];
"1000488" -> "1000490"  [label="CFG: "];
"1000489" -> "1000488"  [label="AST: "];
"1000490" -> "1000488"  [label="AST: "];
"1000488" -> "1001447"  [label="DDG: "];
"1000480" -> "1000488"  [label="DDG: "];
"1000488" -> "1000512"  [label="DDG: "];
"1000488" -> "1000526"  [label="DDG: "];
"1000488" -> "1000569"  [label="DDG: "];
"1000488" -> "1000585"  [label="DDG: "];
"1000488" -> "1000604"  [label="DDG: "];
"1000488" -> "1000622"  [label="DDG: "];
"1000488" -> "1000642"  [label="DDG: "];
"1000488" -> "1000658"  [label="DDG: "];
"1000488" -> "1000743"  [label="DDG: "];
"1000488" -> "1000766"  [label="DDG: "];
"1000480" -> "1000478"  [label="AST: "];
"1000480" -> "1000481"  [label="CFG: "];
"1000481" -> "1000480"  [label="AST: "];
"1000478" -> "1000480"  [label="CFG: "];
"1000480" -> "1000478"  [label="DDG: "];
"1000354" -> "1000352"  [label="AST: "];
"1000354" -> "1000359"  [label="CFG: "];
"1000355" -> "1000354"  [label="AST: "];
"1000358" -> "1000354"  [label="AST: "];
"1000359" -> "1000354"  [label="AST: "];
"1000352" -> "1000354"  [label="CFG: "];
"1000354" -> "1001447"  [label="DDG: "];
"1000354" -> "1000352"  [label="DDG: "];
"1000354" -> "1000352"  [label="DDG: "];
"1000354" -> "1000352"  [label="DDG: "];
"1000354" -> "1000405"  [label="DDG: "];
"1000349" -> "1000347"  [label="AST: "];
"1000349" -> "1000350"  [label="CFG: "];
"1000350" -> "1000349"  [label="AST: "];
"1000347" -> "1000349"  [label="CFG: "];
"1000349" -> "1001447"  [label="DDG: "];
"1000349" -> "1000347"  [label="DDG: "];
"1000341" -> "1000349"  [label="DDG: "];
"1000349" -> "1000684"  [label="DDG: "];
"1000341" -> "1000150"  [label="AST: "];
"1000341" -> "1000343"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="AST: "];
"1000348" -> "1000341"  [label="CFG: "];
"1000341" -> "1001447"  [label="DDG: "];
"1000311" -> "1000341"  [label="DDG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000311" -> "1000315"  [label="CFG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000315" -> "1000311"  [label="AST: "];
"1000320" -> "1000311"  [label="CFG: "];
"1000338" -> "1000311"  [label="CFG: "];
"1000311" -> "1001447"  [label="DDG: "];
}
