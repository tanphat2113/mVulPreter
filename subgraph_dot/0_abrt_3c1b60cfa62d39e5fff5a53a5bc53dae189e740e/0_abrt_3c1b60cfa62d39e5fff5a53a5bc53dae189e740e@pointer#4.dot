digraph "0_abrt_3c1b60cfa62d39e5fff5a53a5bc53dae189e740e@pointer" {
"1000230" [label="(Call,get_map_string_item_or_NULL(settings, \"CreateCoreBacktrace\"))"];
"1000218" [label="(Call,get_map_string_item_or_NULL(settings, \"SaveFullCore\"))"];
"1000207" [label="(Call,get_map_string_item_or_NULL(settings, \"SaveBinaryImage\"))"];
"1000196" [label="(Call,get_map_string_item_or_NULL(settings, \"MakeCompatCore\"))"];
"1000190" [label="(Call,load_abrt_plugin_conf_file(\"CCpp.conf\", settings))"];
"1000187" [label="(Call,*settings = new_map_string())"];
"1000228" [label="(Call,value = get_map_string_item_or_NULL(settings, \"CreateCoreBacktrace\"))"];
"1000237" [label="(Call,string_to_bool(value))"];
"1000233" [label="(Call,setting_CreateCoreBacktrace = value ? string_to_bool(value) : true)"];
"1000297" [label="(Call,test_configuration(setting_SaveFullCore, setting_CreateCoreBacktrace))"];
"1000296" [label="(Return,return test_configuration(setting_SaveFullCore, setting_CreateCoreBacktrace);)"];
"1000235" [label="(Call,value ? string_to_bool(value) : true)"];
"1000247" [label="(Call,value && string_to_bool(value))"];
"1000245" [label="(Call,setting_SaveContainerizedPackageData = value && string_to_bool(value))"];
"1000269" [label="(Call,value && string_to_bool(value))"];
"1000267" [label="(Call,setting_StandaloneHook = value && string_to_bool(value))"];
"1000614" [label="(Call,!setting_StandaloneHook)"];
"1000613" [label="(Call,!setting_StandaloneHook && !abrtd_running)"];
"1000242" [label="(Call,get_map_string_item_or_NULL(settings, \"SaveContainerizedPackageData\"))"];
"1000240" [label="(Call,value = get_map_string_item_or_NULL(settings, \"SaveContainerizedPackageData\"))"];
"1000249" [label="(Call,string_to_bool(value))"];
"1000264" [label="(Call,get_map_string_item_or_NULL(settings, \"StandaloneHook\"))"];
"1000262" [label="(Call,value = get_map_string_item_or_NULL(settings, \"StandaloneHook\"))"];
"1000271" [label="(Call,string_to_bool(value))"];
"1000275" [label="(Call,get_map_string_item_or_NULL(settings, \"VerboseLog\"))"];
"1000273" [label="(Call,value = get_map_string_item_or_NULL(settings, \"VerboseLog\"))"];
"1000282" [label="(Call,xatoi_positive(value))"];
"1000280" [label="(Call,g_verbose = xatoi_positive(value))"];
"1000284" [label="(Call,free_map_string(settings))"];
"1000219" [label="(Identifier,settings)"];
"1000272" [label="(Identifier,value)"];
"1000221" [label="(Call,setting_SaveFullCore = value ? string_to_bool(value) : true)"];
"1000248" [label="(Identifier,value)"];
"1000242" [label="(Call,get_map_string_item_or_NULL(settings, \"SaveContainerizedPackageData\"))"];
"1000218" [label="(Call,get_map_string_item_or_NULL(settings, \"SaveFullCore\"))"];
"1000246" [label="(Identifier,setting_SaveContainerizedPackageData)"];
"1000263" [label="(Identifier,value)"];
"1000262" [label="(Call,value = get_map_string_item_or_NULL(settings, \"StandaloneHook\"))"];
"1000189" [label="(Call,new_map_string())"];
"1000192" [label="(Identifier,settings)"];
"1000194" [label="(Call,value = get_map_string_item_or_NULL(settings, \"MakeCompatCore\"))"];
"1000277" [label="(Literal,\"VerboseLog\")"];
"1000238" [label="(Identifier,value)"];
"1000209" [label="(Literal,\"SaveBinaryImage\")"];
"1000195" [label="(Identifier,value)"];
"1000296" [label="(Return,return test_configuration(setting_SaveFullCore, setting_CreateCoreBacktrace);)"];
"1000627" [label="(Identifier,setting_StandaloneHook)"];
"1000613" [label="(Call,!setting_StandaloneHook && !abrtd_running)"];
"1000234" [label="(Identifier,setting_CreateCoreBacktrace)"];
"1000191" [label="(Literal,\"CCpp.conf\")"];
"1000284" [label="(Call,free_map_string(settings))"];
"1000197" [label="(Identifier,settings)"];
"1000614" [label="(Call,!setting_StandaloneHook)"];
"1000268" [label="(Identifier,setting_StandaloneHook)"];
"1000187" [label="(Call,*settings = new_map_string())"];
"1000212" [label="(Call,value && string_to_bool(value))"];
"1000208" [label="(Identifier,settings)"];
"1000244" [label="(Literal,\"SaveContainerizedPackageData\")"];
"1000220" [label="(Literal,\"SaveFullCore\")"];
"1000249" [label="(Call,string_to_bool(value))"];
"1000237" [label="(Call,string_to_bool(value))"];
"1000240" [label="(Call,value = get_map_string_item_or_NULL(settings, \"SaveContainerizedPackageData\"))"];
"1000279" [label="(Identifier,value)"];
"1000241" [label="(Identifier,value)"];
"1000282" [label="(Call,xatoi_positive(value))"];
"1000207" [label="(Call,get_map_string_item_or_NULL(settings, \"SaveBinaryImage\"))"];
"1000264" [label="(Call,get_map_string_item_or_NULL(settings, \"StandaloneHook\"))"];
"1000205" [label="(Call,value = get_map_string_item_or_NULL(settings, \"SaveBinaryImage\"))"];
"1000615" [label="(Identifier,setting_StandaloneHook)"];
"1000245" [label="(Call,setting_SaveContainerizedPackageData = value && string_to_bool(value))"];
"1000297" [label="(Call,test_configuration(setting_SaveFullCore, setting_CreateCoreBacktrace))"];
"1000239" [label="(Identifier,true)"];
"1000616" [label="(Call,!abrtd_running)"];
"1000278" [label="(ControlStructure,if (value))"];
"1000299" [label="(Identifier,setting_CreateCoreBacktrace)"];
"1000190" [label="(Call,load_abrt_plugin_conf_file(\"CCpp.conf\", settings))"];
"1000266" [label="(Literal,\"StandaloneHook\")"];
"1000276" [label="(Identifier,settings)"];
"1000228" [label="(Call,value = get_map_string_item_or_NULL(settings, \"CreateCoreBacktrace\"))"];
"1000270" [label="(Identifier,value)"];
"1000271" [label="(Call,string_to_bool(value))"];
"1000196" [label="(Call,get_map_string_item_or_NULL(settings, \"MakeCompatCore\"))"];
"1000243" [label="(Identifier,settings)"];
"1001447" [label="(MethodReturn,int)"];
"1000273" [label="(Call,value = get_map_string_item_or_NULL(settings, \"VerboseLog\"))"];
"1000275" [label="(Call,get_map_string_item_or_NULL(settings, \"VerboseLog\"))"];
"1000231" [label="(Identifier,settings)"];
"1000236" [label="(Identifier,value)"];
"1000225" [label="(Call,string_to_bool(value))"];
"1000617" [label="(Identifier,abrtd_running)"];
"1000185" [label="(Block,)"];
"1000188" [label="(Identifier,settings)"];
"1000235" [label="(Call,value ? string_to_bool(value) : true)"];
"1000280" [label="(Call,g_verbose = xatoi_positive(value))"];
"1000233" [label="(Call,setting_CreateCoreBacktrace = value ? string_to_bool(value) : true)"];
"1000289" [label="(Identifier,argc)"];
"1000230" [label="(Call,get_map_string_item_or_NULL(settings, \"CreateCoreBacktrace\"))"];
"1000229" [label="(Identifier,value)"];
"1000232" [label="(Literal,\"CreateCoreBacktrace\")"];
"1000285" [label="(Identifier,settings)"];
"1000216" [label="(Call,value = get_map_string_item_or_NULL(settings, \"SaveFullCore\"))"];
"1000267" [label="(Call,setting_StandaloneHook = value && string_to_bool(value))"];
"1000253" [label="(Identifier,g_settings_explorechroots)"];
"1000283" [label="(Identifier,value)"];
"1000269" [label="(Call,value && string_to_bool(value))"];
"1000612" [label="(ControlStructure,if (!setting_StandaloneHook && !abrtd_running))"];
"1000274" [label="(Identifier,value)"];
"1000298" [label="(Identifier,setting_SaveFullCore)"];
"1000250" [label="(Identifier,value)"];
"1000247" [label="(Call,value && string_to_bool(value))"];
"1000281" [label="(Identifier,g_verbose)"];
"1000286" [label="(ControlStructure,if (argc == 2 && strcmp(argv[1], \"--config-test\")))"];
"1000198" [label="(Literal,\"MakeCompatCore\")"];
"1000265" [label="(Identifier,settings)"];
"1000620" [label="(Literal,\"abrtd is not running. If it crashed, \"\n            \"/proc/sys/kernel/core_pattern contains a stale value, \"\n            \"consider resetting it to 'core'\")"];
"1000230" -> "1000228"  [label="AST: "];
"1000230" -> "1000232"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000232" -> "1000230"  [label="AST: "];
"1000228" -> "1000230"  [label="CFG: "];
"1000230" -> "1000228"  [label="DDG: "];
"1000230" -> "1000228"  [label="DDG: "];
"1000218" -> "1000230"  [label="DDG: "];
"1000230" -> "1000242"  [label="DDG: "];
"1000218" -> "1000216"  [label="AST: "];
"1000218" -> "1000220"  [label="CFG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000220" -> "1000218"  [label="AST: "];
"1000216" -> "1000218"  [label="CFG: "];
"1000218" -> "1000216"  [label="DDG: "];
"1000218" -> "1000216"  [label="DDG: "];
"1000207" -> "1000218"  [label="DDG: "];
"1000207" -> "1000205"  [label="AST: "];
"1000207" -> "1000209"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000209" -> "1000207"  [label="AST: "];
"1000205" -> "1000207"  [label="CFG: "];
"1000207" -> "1000205"  [label="DDG: "];
"1000207" -> "1000205"  [label="DDG: "];
"1000196" -> "1000207"  [label="DDG: "];
"1000196" -> "1000194"  [label="AST: "];
"1000196" -> "1000198"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000198" -> "1000196"  [label="AST: "];
"1000194" -> "1000196"  [label="CFG: "];
"1000196" -> "1000194"  [label="DDG: "];
"1000196" -> "1000194"  [label="DDG: "];
"1000190" -> "1000196"  [label="DDG: "];
"1000190" -> "1000185"  [label="AST: "];
"1000190" -> "1000192"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000192" -> "1000190"  [label="AST: "];
"1000195" -> "1000190"  [label="CFG: "];
"1000190" -> "1001447"  [label="DDG: "];
"1000187" -> "1000190"  [label="DDG: "];
"1000187" -> "1000185"  [label="AST: "];
"1000187" -> "1000189"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000189" -> "1000187"  [label="AST: "];
"1000191" -> "1000187"  [label="CFG: "];
"1000187" -> "1001447"  [label="DDG: "];
"1000228" -> "1000185"  [label="AST: "];
"1000229" -> "1000228"  [label="AST: "];
"1000234" -> "1000228"  [label="CFG: "];
"1000228" -> "1001447"  [label="DDG: "];
"1000228" -> "1000237"  [label="DDG: "];
"1000237" -> "1000235"  [label="AST: "];
"1000237" -> "1000238"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000235" -> "1000237"  [label="CFG: "];
"1000237" -> "1000233"  [label="DDG: "];
"1000237" -> "1000235"  [label="DDG: "];
"1000237" -> "1000247"  [label="DDG: "];
"1000233" -> "1000185"  [label="AST: "];
"1000233" -> "1000235"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000235" -> "1000233"  [label="AST: "];
"1000241" -> "1000233"  [label="CFG: "];
"1000233" -> "1001447"  [label="DDG: "];
"1000233" -> "1001447"  [label="DDG: "];
"1000212" -> "1000233"  [label="DDG: "];
"1000225" -> "1000233"  [label="DDG: "];
"1000233" -> "1000297"  [label="DDG: "];
"1000297" -> "1000296"  [label="AST: "];
"1000297" -> "1000299"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000299" -> "1000297"  [label="AST: "];
"1000296" -> "1000297"  [label="CFG: "];
"1000297" -> "1001447"  [label="DDG: "];
"1000297" -> "1001447"  [label="DDG: "];
"1000297" -> "1001447"  [label="DDG: "];
"1000297" -> "1000296"  [label="DDG: "];
"1000221" -> "1000297"  [label="DDG: "];
"1000296" -> "1000286"  [label="AST: "];
"1001447" -> "1000296"  [label="CFG: "];
"1000296" -> "1001447"  [label="DDG: "];
"1000235" -> "1000239"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000239" -> "1000235"  [label="AST: "];
"1000235" -> "1001447"  [label="DDG: "];
"1000212" -> "1000235"  [label="DDG: "];
"1000225" -> "1000235"  [label="DDG: "];
"1000247" -> "1000245"  [label="AST: "];
"1000247" -> "1000248"  [label="CFG: "];
"1000247" -> "1000249"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000249" -> "1000247"  [label="AST: "];
"1000245" -> "1000247"  [label="CFG: "];
"1000247" -> "1000245"  [label="DDG: "];
"1000247" -> "1000245"  [label="DDG: "];
"1000249" -> "1000247"  [label="DDG: "];
"1000240" -> "1000247"  [label="DDG: "];
"1000212" -> "1000247"  [label="DDG: "];
"1000225" -> "1000247"  [label="DDG: "];
"1000247" -> "1000269"  [label="DDG: "];
"1000245" -> "1000185"  [label="AST: "];
"1000246" -> "1000245"  [label="AST: "];
"1000253" -> "1000245"  [label="CFG: "];
"1000245" -> "1001447"  [label="DDG: "];
"1000269" -> "1000267"  [label="AST: "];
"1000269" -> "1000270"  [label="CFG: "];
"1000269" -> "1000271"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000271" -> "1000269"  [label="AST: "];
"1000267" -> "1000269"  [label="CFG: "];
"1000269" -> "1001447"  [label="DDG: "];
"1000269" -> "1000267"  [label="DDG: "];
"1000269" -> "1000267"  [label="DDG: "];
"1000262" -> "1000269"  [label="DDG: "];
"1000271" -> "1000269"  [label="DDG: "];
"1000267" -> "1000185"  [label="AST: "];
"1000268" -> "1000267"  [label="AST: "];
"1000274" -> "1000267"  [label="CFG: "];
"1000267" -> "1001447"  [label="DDG: "];
"1000267" -> "1001447"  [label="DDG: "];
"1000267" -> "1000614"  [label="DDG: "];
"1000614" -> "1000613"  [label="AST: "];
"1000614" -> "1000615"  [label="CFG: "];
"1000615" -> "1000614"  [label="AST: "];
"1000617" -> "1000614"  [label="CFG: "];
"1000613" -> "1000614"  [label="CFG: "];
"1000614" -> "1001447"  [label="DDG: "];
"1000614" -> "1000613"  [label="DDG: "];
"1000613" -> "1000612"  [label="AST: "];
"1000613" -> "1000616"  [label="CFG: "];
"1000616" -> "1000613"  [label="AST: "];
"1000620" -> "1000613"  [label="CFG: "];
"1000627" -> "1000613"  [label="CFG: "];
"1000613" -> "1001447"  [label="DDG: "];
"1000613" -> "1001447"  [label="DDG: "];
"1000613" -> "1001447"  [label="DDG: "];
"1000616" -> "1000613"  [label="DDG: "];
"1000242" -> "1000240"  [label="AST: "];
"1000242" -> "1000244"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000244" -> "1000242"  [label="AST: "];
"1000240" -> "1000242"  [label="CFG: "];
"1000242" -> "1000240"  [label="DDG: "];
"1000242" -> "1000240"  [label="DDG: "];
"1000242" -> "1000264"  [label="DDG: "];
"1000240" -> "1000185"  [label="AST: "];
"1000241" -> "1000240"  [label="AST: "];
"1000246" -> "1000240"  [label="CFG: "];
"1000240" -> "1001447"  [label="DDG: "];
"1000240" -> "1000249"  [label="DDG: "];
"1000249" -> "1000250"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000264" -> "1000262"  [label="AST: "];
"1000264" -> "1000266"  [label="CFG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000266" -> "1000264"  [label="AST: "];
"1000262" -> "1000264"  [label="CFG: "];
"1000264" -> "1000262"  [label="DDG: "];
"1000264" -> "1000262"  [label="DDG: "];
"1000264" -> "1000275"  [label="DDG: "];
"1000262" -> "1000185"  [label="AST: "];
"1000263" -> "1000262"  [label="AST: "];
"1000268" -> "1000262"  [label="CFG: "];
"1000262" -> "1001447"  [label="DDG: "];
"1000262" -> "1000271"  [label="DDG: "];
"1000271" -> "1000272"  [label="CFG: "];
"1000272" -> "1000271"  [label="AST: "];
"1000275" -> "1000273"  [label="AST: "];
"1000275" -> "1000277"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000277" -> "1000275"  [label="AST: "];
"1000273" -> "1000275"  [label="CFG: "];
"1000275" -> "1000273"  [label="DDG: "];
"1000275" -> "1000273"  [label="DDG: "];
"1000275" -> "1000284"  [label="DDG: "];
"1000273" -> "1000185"  [label="AST: "];
"1000274" -> "1000273"  [label="AST: "];
"1000279" -> "1000273"  [label="CFG: "];
"1000273" -> "1001447"  [label="DDG: "];
"1000273" -> "1001447"  [label="DDG: "];
"1000273" -> "1000282"  [label="DDG: "];
"1000282" -> "1000280"  [label="AST: "];
"1000282" -> "1000283"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000280" -> "1000282"  [label="CFG: "];
"1000282" -> "1001447"  [label="DDG: "];
"1000282" -> "1000280"  [label="DDG: "];
"1000280" -> "1000278"  [label="AST: "];
"1000281" -> "1000280"  [label="AST: "];
"1000285" -> "1000280"  [label="CFG: "];
"1000280" -> "1001447"  [label="DDG: "];
"1000280" -> "1001447"  [label="DDG: "];
"1000284" -> "1000185"  [label="AST: "];
"1000284" -> "1000285"  [label="CFG: "];
"1000285" -> "1000284"  [label="AST: "];
"1000289" -> "1000284"  [label="CFG: "];
"1000284" -> "1001447"  [label="DDG: "];
"1000284" -> "1001447"  [label="DDG: "];
}
