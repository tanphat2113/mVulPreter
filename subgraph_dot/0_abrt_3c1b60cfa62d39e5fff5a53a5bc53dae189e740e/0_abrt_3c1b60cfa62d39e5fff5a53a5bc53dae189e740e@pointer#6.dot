digraph "0_abrt_3c1b60cfa62d39e5fff5a53a5bc53dae189e740e@pointer" {
"1000405" [label="(Call,perror_msg_and_die(\"PID '%s' or limit '%s' is bogus\", argv[3], argv[2]))"];
"1000387" [label="(Call,xatoi_positive(argv[3]))"];
"1000149" [label="(MethodParameterIn,char** argv)"];
"1000354" [label="(Call,strtoull(argv[2], NULL, 10))"];
"1000149" [label="(MethodParameterIn,char** argv)"];
"1000354" [label="(Call,strtoull(argv[2], NULL, 10))"];
"1000416" [label="(Identifier,s)"];
"1000291" [label="(Call,strcmp(argv[1], \"--config-test\"))"];
"1000287" [label="(Call,argc == 2 && strcmp(argv[1], \"--config-test\"))"];
"1000305" [label="(Call,error_msg_and_die(\"Usage: %s SIGNO CORE_SIZE_LIMIT PID UID GID TIME BINARY_NAME GLOBAL_PID [TID]\", argv[0]))"];
"1000330" [label="(Call,strchrnul(argv[i], ' '))"];
"1000387" [label="(Call,xatoi_positive(argv[3]))"];
"1000394" [label="(Call,xatoi_positive(argv[4]))"];
"1000406" [label="(Literal,\"PID '%s' or limit '%s' is bogus\")"];
"1000385" [label="(Call,local_pid = xatoi_positive(argv[3]))"];
"1000405" [label="(Call,perror_msg_and_die(\"PID '%s' or limit '%s' is bogus\", argv[3], argv[2]))"];
"1000494" [label="(Call,xmalloc_xopen_read_close(path, /*maxsz:*/ NULL))"];
"1000404" [label="(Block,)"];
"1001447" [label="(MethodReturn,int)"];
"1000379" [label="(Call,*pid_str = argv[3])"];
"1000437" [label="(Call,xatoi_positive(argv[8]))"];
"1000311" [label="(Call,strchr(argv[1], ' '))"];
"1000341" [label="(Call,* signal_str = argv[1])"];
"1000407" [label="(Call,argv[3])"];
"1000447" [label="(Call,*tid_str = argv[9])"];
"1000352" [label="(Call,ulimit_c = strtoull(argv[2], NULL, 10))"];
"1000429" [label="(Call,*global_pid_str = argv[8])"];
"1000358" [label="(Identifier,NULL)"];
"1000355" [label="(Call,argv[2])"];
"1000410" [label="(Call,argv[2])"];
"1000388" [label="(Call,argv[3])"];
"1000359" [label="(Literal,10)"];
"1000405" -> "1000404"  [label="AST: "];
"1000405" -> "1000410"  [label="CFG: "];
"1000406" -> "1000405"  [label="AST: "];
"1000407" -> "1000405"  [label="AST: "];
"1000410" -> "1000405"  [label="AST: "];
"1000416" -> "1000405"  [label="CFG: "];
"1000405" -> "1001447"  [label="DDG: "];
"1000405" -> "1001447"  [label="DDG: "];
"1000405" -> "1001447"  [label="DDG: "];
"1000387" -> "1000405"  [label="DDG: "];
"1000149" -> "1000405"  [label="DDG: "];
"1000354" -> "1000405"  [label="DDG: "];
"1000387" -> "1000385"  [label="AST: "];
"1000387" -> "1000388"  [label="CFG: "];
"1000388" -> "1000387"  [label="AST: "];
"1000385" -> "1000387"  [label="CFG: "];
"1000387" -> "1001447"  [label="DDG: "];
"1000387" -> "1000385"  [label="DDG: "];
"1000149" -> "1000387"  [label="DDG: "];
"1000149" -> "1000147"  [label="AST: "];
"1000149" -> "1001447"  [label="DDG: "];
"1000149" -> "1000287"  [label="DDG: "];
"1000149" -> "1000291"  [label="DDG: "];
"1000149" -> "1000305"  [label="DDG: "];
"1000149" -> "1000311"  [label="DDG: "];
"1000149" -> "1000330"  [label="DDG: "];
"1000149" -> "1000341"  [label="DDG: "];
"1000149" -> "1000354"  [label="DDG: "];
"1000149" -> "1000379"  [label="DDG: "];
"1000149" -> "1000394"  [label="DDG: "];
"1000149" -> "1000429"  [label="DDG: "];
"1000149" -> "1000437"  [label="DDG: "];
"1000149" -> "1000447"  [label="DDG: "];
"1000354" -> "1000352"  [label="AST: "];
"1000354" -> "1000359"  [label="CFG: "];
"1000355" -> "1000354"  [label="AST: "];
"1000358" -> "1000354"  [label="AST: "];
"1000359" -> "1000354"  [label="AST: "];
"1000352" -> "1000354"  [label="CFG: "];
"1000354" -> "1001447"  [label="DDG: "];
"1000354" -> "1000352"  [label="DDG: "];
"1000354" -> "1000352"  [label="DDG: "];
"1000354" -> "1000352"  [label="DDG: "];
"1000354" -> "1000494"  [label="DDG: "];
}
