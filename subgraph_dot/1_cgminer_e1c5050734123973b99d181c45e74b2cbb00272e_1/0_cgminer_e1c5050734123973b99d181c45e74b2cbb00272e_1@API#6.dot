digraph "0_cgminer_e1c5050734123973b99d181c45e74b2cbb00272e_1@API" {
"1000349" [label="(Call,realloc(pool->swork.merkle_bin,\n\t\t\t\t\t\t sizeof(char *) * merkles + 1))"];
"1000332" [label="(Call,free(pool->swork.merkle_bin[i]))"];
"1000356" [label="(Call,sizeof(char *) * merkles)"];
"1000150" [label="(Call,merkles = json_array_size(arr))"];
"1000152" [label="(Call,json_array_size(arr))"];
"1000147" [label="(Call,json_is_array(arr))"];
"1000144" [label="(Call,!arr)"];
"1000137" [label="(Call,arr = json_array_get(val, 4))"];
"1000139" [label="(Call,json_array_get(val, 4))"];
"1000108" [label="(MethodParameterIn,json_t *val)"];
"1000343" [label="(Call,pool->swork.merkle_bin = realloc(pool->swork.merkle_bin,\n\t\t\t\t\t\t sizeof(char *) * merkles + 1))"];
"1000139" [label="(Call,json_array_get(val, 4))"];
"1000166" [label="(Call,json_array_string(val, 2))"];
"1000355" [label="(Call,sizeof(char *) * merkles + 1)"];
"1000374" [label="(Call,json_array_string(arr, i))"];
"1000349" [label="(Call,realloc(pool->swork.merkle_bin,\n\t\t\t\t\t\t sizeof(char *) * merkles + 1))"];
"1000321" [label="(ControlStructure,for (i = 0; i < pool->merkles; i++))"];
"1000151" [label="(Identifier,merkles)"];
"1000186" [label="(Call,__json_array_string(val, 7))"];
"1000143" [label="(Call,!arr || !json_is_array(arr))"];
"1000331" [label="(Identifier,i)"];
"1000360" [label="(Literal,1)"];
"1000137" [label="(Call,arr = json_array_get(val, 4))"];
"1000332" [label="(Call,free(pool->swork.merkle_bin[i]))"];
"1000155" [label="(Identifier,job_id)"];
"1000109" [label="(Block,)"];
"1000141" [label="(Literal,4)"];
"1000140" [label="(Identifier,val)"];
"1000171" [label="(Call,json_array_string(val, 3))"];
"1000359" [label="(Identifier,merkles)"];
"1000156" [label="(Call,json_array_string(val, 0))"];
"1000161" [label="(Call,__json_array_string(val, 1))"];
"1000148" [label="(Identifier,arr)"];
"1000147" [label="(Call,json_is_array(arr))"];
"1000138" [label="(Identifier,arr)"];
"1000108" [label="(MethodParameterIn,json_t *val)"];
"1000342" [label="(Block,)"];
"1000146" [label="(Call,!json_is_array(arr))"];
"1000153" [label="(Identifier,arr)"];
"1000344" [label="(Call,pool->swork.merkle_bin)"];
"1000350" [label="(Call,pool->swork.merkle_bin)"];
"1000365" [label="(Call,i < merkles)"];
"1000430" [label="(Call,pool->merkles = merkles)"];
"1000176" [label="(Call,__json_array_string(val, 5))"];
"1000343" [label="(Call,pool->swork.merkle_bin = realloc(pool->swork.merkle_bin,\n\t\t\t\t\t\t sizeof(char *) * merkles + 1))"];
"1000152" [label="(Call,json_array_size(arr))"];
"1000192" [label="(Call,json_array_get(val, 8))"];
"1000357" [label="(Call,sizeof(char *))"];
"1000333" [label="(Call,pool->swork.merkle_bin[i])"];
"1000145" [label="(Identifier,arr)"];
"1000356" [label="(Call,sizeof(char *) * merkles)"];
"1000150" [label="(Call,merkles = json_array_size(arr))"];
"1000363" [label="(Identifier,i)"];
"1000144" [label="(Call,!arr)"];
"1000181" [label="(Call,__json_array_string(val, 6))"];
"1000685" [label="(MethodReturn,static bool)"];
"1000349" -> "1000343"  [label="AST: "];
"1000349" -> "1000355"  [label="CFG: "];
"1000350" -> "1000349"  [label="AST: "];
"1000355" -> "1000349"  [label="AST: "];
"1000343" -> "1000349"  [label="CFG: "];
"1000349" -> "1000685"  [label="DDG: sizeof(char *) * merkles + 1"];
"1000349" -> "1000343"  [label="DDG: pool->swork.merkle_bin"];
"1000349" -> "1000343"  [label="DDG: sizeof(char *) * merkles + 1"];
"1000332" -> "1000349"  [label="DDG: pool->swork.merkle_bin[i]"];
"1000356" -> "1000349"  [label="DDG: merkles"];
"1000332" -> "1000321"  [label="AST: "];
"1000332" -> "1000333"  [label="CFG: "];
"1000333" -> "1000332"  [label="AST: "];
"1000331" -> "1000332"  [label="CFG: "];
"1000332" -> "1000685"  [label="DDG: pool->swork.merkle_bin[i]"];
"1000356" -> "1000355"  [label="AST: "];
"1000356" -> "1000359"  [label="CFG: "];
"1000357" -> "1000356"  [label="AST: "];
"1000359" -> "1000356"  [label="AST: "];
"1000360" -> "1000356"  [label="CFG: "];
"1000356" -> "1000355"  [label="DDG: merkles"];
"1000150" -> "1000356"  [label="DDG: merkles"];
"1000356" -> "1000365"  [label="DDG: merkles"];
"1000150" -> "1000109"  [label="AST: "];
"1000150" -> "1000152"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="AST: "];
"1000155" -> "1000150"  [label="CFG: "];
"1000150" -> "1000685"  [label="DDG: merkles"];
"1000150" -> "1000685"  [label="DDG: json_array_size(arr)"];
"1000152" -> "1000150"  [label="DDG: arr"];
"1000150" -> "1000430"  [label="DDG: merkles"];
"1000152" -> "1000153"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000152" -> "1000685"  [label="DDG: arr"];
"1000147" -> "1000152"  [label="DDG: arr"];
"1000144" -> "1000152"  [label="DDG: arr"];
"1000152" -> "1000374"  [label="DDG: arr"];
"1000147" -> "1000146"  [label="AST: "];
"1000147" -> "1000148"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000146" -> "1000147"  [label="CFG: "];
"1000147" -> "1000685"  [label="DDG: arr"];
"1000147" -> "1000146"  [label="DDG: arr"];
"1000144" -> "1000147"  [label="DDG: arr"];
"1000144" -> "1000143"  [label="AST: "];
"1000144" -> "1000145"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000148" -> "1000144"  [label="CFG: "];
"1000143" -> "1000144"  [label="CFG: "];
"1000144" -> "1000685"  [label="DDG: arr"];
"1000144" -> "1000143"  [label="DDG: arr"];
"1000137" -> "1000144"  [label="DDG: arr"];
"1000137" -> "1000109"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000145" -> "1000137"  [label="CFG: "];
"1000137" -> "1000685"  [label="DDG: json_array_get(val, 4)"];
"1000139" -> "1000137"  [label="DDG: val"];
"1000139" -> "1000137"  [label="DDG: 4"];
"1000139" -> "1000141"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="AST: "];
"1000139" -> "1000685"  [label="DDG: val"];
"1000108" -> "1000139"  [label="DDG: val"];
"1000139" -> "1000156"  [label="DDG: val"];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000685"  [label="DDG: val"];
"1000108" -> "1000156"  [label="DDG: val"];
"1000108" -> "1000161"  [label="DDG: val"];
"1000108" -> "1000166"  [label="DDG: val"];
"1000108" -> "1000171"  [label="DDG: val"];
"1000108" -> "1000176"  [label="DDG: val"];
"1000108" -> "1000181"  [label="DDG: val"];
"1000108" -> "1000186"  [label="DDG: val"];
"1000108" -> "1000192"  [label="DDG: val"];
"1000343" -> "1000342"  [label="AST: "];
"1000344" -> "1000343"  [label="AST: "];
"1000363" -> "1000343"  [label="CFG: "];
"1000343" -> "1000685"  [label="DDG: realloc(pool->swork.merkle_bin,\n\t\t\t\t\t\t sizeof(char *) * merkles + 1)"];
"1000343" -> "1000685"  [label="DDG: pool->swork.merkle_bin"];
}
