digraph "0_zstd_3e5cdf1b6a85843e991d7d10f6a2567c15580da0_0@pointer" {
"1000362" [label="(Call,op+1)"];
"1000355" [label="(Call,op[0]=0xFF)"];
"1000305" [label="(Call,oend-op)"];
"1000202" [label="(Call,oend = ostart + dstCapacity)"];
"1000197" [label="(Call,ostart = (BYTE*)dst)"];
"1000199" [label="(Call,(BYTE*)dst)"];
"1000125" [label="(MethodParameterIn,void* dst)"];
"1000126" [label="(MethodParameterIn,size_t dstCapacity)"];
"1000300" [label="(Call,op += cSize)"];
"1000297" [label="(Call,cSize <= dstCapacity)"];
"1000292" [label="(Call,ZSTD_isError(cSize))"];
"1000267" [label="(Call,cSize = ZSTD_compressLiterals(\n                                    &prevEntropy->huf, &nextEntropy->huf,\n                                    cctxParams->cParams.strategy, disableLiteralCompression,\n                                    op, dstCapacity,\n                                    literals, litSize,\n                                    workspace, wkspSize,\n                                    bmi2))"];
"1000269" [label="(Call,ZSTD_compressLiterals(\n                                    &prevEntropy->huf, &nextEntropy->huf,\n                                    cctxParams->cParams.strategy, disableLiteralCompression,\n                                    op, dstCapacity,\n                                    literals, litSize,\n                                    workspace, wkspSize,\n                                    bmi2))"];
"1000252" [label="(Call,cctxParams->cParams.strategy == ZSTD_fast)"];
"1000249" [label="(Call,disableLiteralCompression = (cctxParams->cParams.strategy == ZSTD_fast) && (cctxParams->cParams.targetLength > 0))"];
"1000251" [label="(Call,(cctxParams->cParams.strategy == ZSTD_fast) && (cctxParams->cParams.targetLength > 0))"];
"1000259" [label="(Call,cctxParams->cParams.targetLength > 0)"];
"1000208" [label="(Call,* op = ostart)"];
"1000243" [label="(Call,seqStorePtr->lit - literals)"];
"1000235" [label="(Call,literals = seqStorePtr->litStart)"];
"1000241" [label="(Call,litSize = seqStorePtr->lit - literals)"];
"1000127" [label="(MethodParameterIn,void* workspace)"];
"1000128" [label="(MethodParameterIn,size_t wkspSize)"];
"1000129" [label="(MethodParameterIn,const int bmi2)"];
"1000204" [label="(Call,ostart + dstCapacity)"];
"1000296" [label="(Call,assert(cSize <= dstCapacity))"];
"1000832" [label="(Call,op - ostart)"];
"1000284" [label="(Identifier,op)"];
"1000397" [label="(Call,op++)"];
"1000297" [label="(Call,cSize <= dstCapacity)"];
"1000765" [label="(Call,op += countSize)"];
"1000409" [label="(Call,HIST_countFast_wksp(count, &max, llCodeTable, nbSeq, workspace, wkspSize))"];
"1000198" [label="(Identifier,ostart)"];
"1000304" [label="(Call,(oend-op) < 3 /*max nbSeq Size*/ + 1)"];
"1000362" [label="(Call,op+1)"];
"1000265" [label="(Literal,0)"];
"1000350" [label="(Call,op+=2)"];
"1000645" [label="(Call,op += countSize)"];
"1000126" [label="(MethodParameterIn,size_t dstCapacity)"];
"1000299" [label="(Identifier,dstCapacity)"];
"1000237" [label="(Call,seqStorePtr->litStart)"];
"1000278" [label="(Call,cctxParams->cParams.strategy)"];
"1000479" [label="(Call,ZSTD_buildCTable(op, oend - op, CTable_LitLength, LLFSELog, (symbolEncodingType_e)LLtype,\n                                                    count, max, llCodeTable, nbSeq, LL_defaultNorm, LL_defaultNormLog, MaxLL,\n                                                    prevEntropy->fse.litlengthCTable, sizeof(prevEntropy->fse.litlengthCTable),\n                                                    workspace, wkspSize))"];
"1000603" [label="(Call,ZSTD_buildCTable(op, oend - op, CTable_OffsetBits, OffFSELog, (symbolEncodingType_e)Offtype,\n                                                    count, max, ofCodeTable, nbSeq, OF_defaultNorm, OF_defaultNormLog, DefaultMaxOff,\n                                                    prevEntropy->fse.offcodeCTable, sizeof(prevEntropy->fse.offcodeCTable),\n                                                    workspace, wkspSize))"];
"1000285" [label="(Identifier,dstCapacity)"];
"1000521" [label="(Call,op += countSize)"];
"1000213" [label="(Identifier,nbSeq)"];
"1000642" [label="(Call,lastNCount = op)"];
"1000656" [label="(Call,HIST_countFast_wksp(count, &max, mlCodeTable, nbSeq, workspace, wkspSize))"];
"1000356" [label="(Call,op[0])"];
"1000270" [label="(Call,&prevEntropy->huf)"];
"1000258" [label="(Identifier,ZSTD_fast)"];
"1000244" [label="(Call,seqStorePtr->lit)"];
"1000202" [label="(Call,oend = ostart + dstCapacity)"];
"1000251" [label="(Call,(cctxParams->cParams.strategy == ZSTD_fast) && (cctxParams->cParams.targetLength > 0))"];
"1000291" [label="(ControlStructure,if (ZSTD_isError(cSize)))"];
"1000354" [label="(Block,)"];
"1000289" [label="(Identifier,wkspSize)"];
"1000723" [label="(Call,ZSTD_buildCTable(op, oend - op, CTable_MatchLength, MLFSELog, (symbolEncodingType_e)MLtype,\n                                                    count, max, mlCodeTable, nbSeq, ML_defaultNorm, ML_defaultNormLog, MaxML,\n                                                    prevEntropy->fse.matchlengthCTable, sizeof(prevEntropy->fse.matchlengthCTable),\n                                                    workspace, wkspSize))"];
"1000481" [label="(Call,oend - op)"];
"1000306" [label="(Identifier,oend)"];
"1000127" [label="(MethodParameterIn,void* workspace)"];
"1000293" [label="(Identifier,cSize)"];
"1000267" [label="(Call,cSize = ZSTD_compressLiterals(\n                                    &prevEntropy->huf, &nextEntropy->huf,\n                                    cctxParams->cParams.strategy, disableLiteralCompression,\n                                    op, dstCapacity,\n                                    literals, litSize,\n                                    workspace, wkspSize,\n                                    bmi2))"];
"1000762" [label="(Call,lastNCount = op)"];
"1000295" [label="(Identifier,cSize)"];
"1000199" [label="(Call,(BYTE*)dst)"];
"1000242" [label="(Identifier,litSize)"];
"1000320" [label="(Call,op++)"];
"1000283" [label="(Identifier,disableLiteralCompression)"];
"1000208" [label="(Call,* op = ostart)"];
"1000243" [label="(Call,seqStorePtr->lit - literals)"];
"1000605" [label="(Call,oend - op)"];
"1000290" [label="(Identifier,bmi2)"];
"1000305" [label="(Call,oend-op)"];
"1000392" [label="(Call,op - ostart)"];
"1000249" [label="(Call,disableLiteralCompression = (cctxParams->cParams.strategy == ZSTD_fast) && (cctxParams->cParams.targetLength > 0))"];
"1000247" [label="(Identifier,literals)"];
"1000364" [label="(Literal,1)"];
"1000125" [label="(MethodParameterIn,void* dst)"];
"1000808" [label="(Call,op += bitstreamSize)"];
"1000815" [label="(Call,op - lastNCount)"];
"1000669" [label="(Call,oend-op)"];
"1000302" [label="(Identifier,cSize)"];
"1000253" [label="(Call,cctxParams->cParams.strategy)"];
"1000234" [label="(Block,)"];
"1000361" [label="(Call,MEM_writeLE16(op+1, (U16)(nbSeq - LONGNBSEQ)))"];
"1000532" [label="(Call,HIST_countFast_wksp(count, &max, ofCodeTable, nbSeq, workspace, wkspSize))"];
"1000250" [label="(Identifier,disableLiteralCompression)"];
"1000355" [label="(Call,op[0]=0xFF)"];
"1000241" [label="(Call,litSize = seqStorePtr->lit - literals)"];
"1000129" [label="(MethodParameterIn,const int bmi2)"];
"1000260" [label="(Call,cctxParams->cParams.targetLength)"];
"1000309" [label="(Literal,3)"];
"1000288" [label="(Identifier,workspace)"];
"1000301" [label="(Identifier,op)"];
"1000307" [label="(Identifier,op)"];
"1000725" [label="(Call,oend - op)"];
"1000294" [label="(Return,return cSize;)"];
"1000128" [label="(MethodParameterIn,size_t wkspSize)"];
"1000268" [label="(Identifier,cSize)"];
"1000274" [label="(Call,&nextEntropy->huf)"];
"1000235" [label="(Call,literals = seqStorePtr->litStart)"];
"1000197" [label="(Call,ostart = (BYTE*)dst)"];
"1000359" [label="(Literal,0xFF)"];
"1000210" [label="(Identifier,ostart)"];
"1000203" [label="(Identifier,oend)"];
"1000286" [label="(Identifier,literals)"];
"1000262" [label="(Identifier,cctxParams)"];
"1000201" [label="(Identifier,dst)"];
"1000790" [label="(Call,oend - op)"];
"1000236" [label="(Identifier,literals)"];
"1000300" [label="(Call,op += cSize)"];
"1000269" [label="(Call,ZSTD_compressLiterals(\n                                    &prevEntropy->huf, &nextEntropy->huf,\n                                    cctxParams->cParams.strategy, disableLiteralCompression,\n                                    op, dstCapacity,\n                                    literals, litSize,\n                                    workspace, wkspSize,\n                                    bmi2))"];
"1000287" [label="(Identifier,litSize)"];
"1000298" [label="(Identifier,cSize)"];
"1000835" [label="(MethodReturn,RET)"];
"1000209" [label="(Identifier,op)"];
"1000370" [label="(Call,op+=3)"];
"1000363" [label="(Identifier,op)"];
"1000292" [label="(Call,ZSTD_isError(cSize))"];
"1000259" [label="(Call,cctxParams->cParams.targetLength > 0)"];
"1000252" [label="(Call,cctxParams->cParams.strategy == ZSTD_fast)"];
"1000130" [label="(Block,)"];
"1000518" [label="(Call,lastNCount = op)"];
"1000788" [label="(Call,ZSTD_encodeSequences(\n                                        op, oend - op,\n                                        CTable_MatchLength, mlCodeTable,\n                                        CTable_OffsetBits, ofCodeTable,\n                                        CTable_LitLength, llCodeTable,\n                                        sequences, nbSeq,\n                                        longOffsets, bmi2))"];
"1000822" [label="(Call,op - lastNCount)"];
"1000362" -> "1000361"  [label="AST: "];
"1000362" -> "1000364"  [label="CFG: "];
"1000363" -> "1000362"  [label="AST: "];
"1000364" -> "1000362"  [label="AST: "];
"1000366" -> "1000362"  [label="CFG: "];
"1000355" -> "1000362"  [label="DDG: op[0]"];
"1000305" -> "1000362"  [label="DDG: op"];
"1000355" -> "1000354"  [label="AST: "];
"1000355" -> "1000359"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000359" -> "1000355"  [label="AST: "];
"1000363" -> "1000355"  [label="CFG: "];
"1000355" -> "1000835"  [label="DDG: op[0]"];
"1000355" -> "1000361"  [label="DDG: op[0]"];
"1000355" -> "1000370"  [label="DDG: op[0]"];
"1000355" -> "1000392"  [label="DDG: op[0]"];
"1000355" -> "1000397"  [label="DDG: op[0]"];
"1000355" -> "1000479"  [label="DDG: op[0]"];
"1000355" -> "1000481"  [label="DDG: op[0]"];
"1000355" -> "1000518"  [label="DDG: op[0]"];
"1000355" -> "1000521"  [label="DDG: op[0]"];
"1000355" -> "1000603"  [label="DDG: op[0]"];
"1000355" -> "1000605"  [label="DDG: op[0]"];
"1000355" -> "1000642"  [label="DDG: op[0]"];
"1000355" -> "1000645"  [label="DDG: op[0]"];
"1000355" -> "1000669"  [label="DDG: op[0]"];
"1000355" -> "1000723"  [label="DDG: op[0]"];
"1000355" -> "1000725"  [label="DDG: op[0]"];
"1000355" -> "1000762"  [label="DDG: op[0]"];
"1000355" -> "1000765"  [label="DDG: op[0]"];
"1000355" -> "1000788"  [label="DDG: op[0]"];
"1000355" -> "1000790"  [label="DDG: op[0]"];
"1000355" -> "1000808"  [label="DDG: op[0]"];
"1000355" -> "1000815"  [label="DDG: op[0]"];
"1000355" -> "1000822"  [label="DDG: op[0]"];
"1000355" -> "1000832"  [label="DDG: op[0]"];
"1000305" -> "1000304"  [label="AST: "];
"1000305" -> "1000307"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000307" -> "1000305"  [label="AST: "];
"1000309" -> "1000305"  [label="CFG: "];
"1000305" -> "1000835"  [label="DDG: op"];
"1000305" -> "1000835"  [label="DDG: oend"];
"1000305" -> "1000304"  [label="DDG: oend"];
"1000305" -> "1000304"  [label="DDG: op"];
"1000202" -> "1000305"  [label="DDG: oend"];
"1000300" -> "1000305"  [label="DDG: op"];
"1000305" -> "1000320"  [label="DDG: op"];
"1000305" -> "1000350"  [label="DDG: op"];
"1000305" -> "1000361"  [label="DDG: op"];
"1000305" -> "1000370"  [label="DDG: op"];
"1000305" -> "1000481"  [label="DDG: oend"];
"1000202" -> "1000130"  [label="AST: "];
"1000202" -> "1000204"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000209" -> "1000202"  [label="CFG: "];
"1000202" -> "1000835"  [label="DDG: oend"];
"1000202" -> "1000835"  [label="DDG: ostart + dstCapacity"];
"1000197" -> "1000202"  [label="DDG: ostart"];
"1000126" -> "1000202"  [label="DDG: dstCapacity"];
"1000197" -> "1000130"  [label="AST: "];
"1000197" -> "1000199"  [label="CFG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000199" -> "1000197"  [label="AST: "];
"1000203" -> "1000197"  [label="CFG: "];
"1000197" -> "1000835"  [label="DDG: (BYTE*)dst"];
"1000199" -> "1000197"  [label="DDG: dst"];
"1000197" -> "1000204"  [label="DDG: ostart"];
"1000197" -> "1000208"  [label="DDG: ostart"];
"1000197" -> "1000392"  [label="DDG: ostart"];
"1000197" -> "1000832"  [label="DDG: ostart"];
"1000199" -> "1000201"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000201" -> "1000199"  [label="AST: "];
"1000199" -> "1000835"  [label="DDG: dst"];
"1000125" -> "1000199"  [label="DDG: dst"];
"1000125" -> "1000120"  [label="AST: "];
"1000125" -> "1000835"  [label="DDG: dst"];
"1000126" -> "1000120"  [label="AST: "];
"1000126" -> "1000835"  [label="DDG: dstCapacity"];
"1000126" -> "1000204"  [label="DDG: dstCapacity"];
"1000126" -> "1000269"  [label="DDG: dstCapacity"];
"1000126" -> "1000297"  [label="DDG: dstCapacity"];
"1000300" -> "1000234"  [label="AST: "];
"1000300" -> "1000302"  [label="CFG: "];
"1000301" -> "1000300"  [label="AST: "];
"1000302" -> "1000300"  [label="AST: "];
"1000306" -> "1000300"  [label="CFG: "];
"1000300" -> "1000835"  [label="DDG: cSize"];
"1000297" -> "1000300"  [label="DDG: cSize"];
"1000269" -> "1000300"  [label="DDG: op"];
"1000297" -> "1000296"  [label="AST: "];
"1000297" -> "1000299"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000299" -> "1000297"  [label="AST: "];
"1000296" -> "1000297"  [label="CFG: "];
"1000297" -> "1000835"  [label="DDG: dstCapacity"];
"1000297" -> "1000296"  [label="DDG: cSize"];
"1000297" -> "1000296"  [label="DDG: dstCapacity"];
"1000292" -> "1000297"  [label="DDG: cSize"];
"1000269" -> "1000297"  [label="DDG: dstCapacity"];
"1000292" -> "1000291"  [label="AST: "];
"1000292" -> "1000293"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000295" -> "1000292"  [label="CFG: "];
"1000298" -> "1000292"  [label="CFG: "];
"1000292" -> "1000835"  [label="DDG: ZSTD_isError(cSize)"];
"1000292" -> "1000835"  [label="DDG: cSize"];
"1000267" -> "1000292"  [label="DDG: cSize"];
"1000292" -> "1000294"  [label="DDG: cSize"];
"1000267" -> "1000234"  [label="AST: "];
"1000267" -> "1000269"  [label="CFG: "];
"1000268" -> "1000267"  [label="AST: "];
"1000269" -> "1000267"  [label="AST: "];
"1000293" -> "1000267"  [label="CFG: "];
"1000267" -> "1000835"  [label="DDG: ZSTD_compressLiterals(\n                                    &prevEntropy->huf, &nextEntropy->huf,\n                                    cctxParams->cParams.strategy, disableLiteralCompression,\n                                    op, dstCapacity,\n                                    literals, litSize,\n                                    workspace, wkspSize,\n                                    bmi2)"];
"1000269" -> "1000267"  [label="DDG: cctxParams->cParams.strategy"];
"1000269" -> "1000267"  [label="DDG: bmi2"];
"1000269" -> "1000267"  [label="DDG: workspace"];
"1000269" -> "1000267"  [label="DDG: literals"];
"1000269" -> "1000267"  [label="DDG: litSize"];
"1000269" -> "1000267"  [label="DDG: wkspSize"];
"1000269" -> "1000267"  [label="DDG: op"];
"1000269" -> "1000267"  [label="DDG: &prevEntropy->huf"];
"1000269" -> "1000267"  [label="DDG: &nextEntropy->huf"];
"1000269" -> "1000267"  [label="DDG: disableLiteralCompression"];
"1000269" -> "1000267"  [label="DDG: dstCapacity"];
"1000269" -> "1000290"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000274" -> "1000269"  [label="AST: "];
"1000278" -> "1000269"  [label="AST: "];
"1000283" -> "1000269"  [label="AST: "];
"1000284" -> "1000269"  [label="AST: "];
"1000285" -> "1000269"  [label="AST: "];
"1000286" -> "1000269"  [label="AST: "];
"1000287" -> "1000269"  [label="AST: "];
"1000288" -> "1000269"  [label="AST: "];
"1000289" -> "1000269"  [label="AST: "];
"1000290" -> "1000269"  [label="AST: "];
"1000269" -> "1000835"  [label="DDG: literals"];
"1000269" -> "1000835"  [label="DDG: dstCapacity"];
"1000269" -> "1000835"  [label="DDG: op"];
"1000269" -> "1000835"  [label="DDG: bmi2"];
"1000269" -> "1000835"  [label="DDG: litSize"];
"1000269" -> "1000835"  [label="DDG: wkspSize"];
"1000269" -> "1000835"  [label="DDG: &nextEntropy->huf"];
"1000269" -> "1000835"  [label="DDG: cctxParams->cParams.strategy"];
"1000269" -> "1000835"  [label="DDG: workspace"];
"1000269" -> "1000835"  [label="DDG: &prevEntropy->huf"];
"1000269" -> "1000835"  [label="DDG: disableLiteralCompression"];
"1000252" -> "1000269"  [label="DDG: cctxParams->cParams.strategy"];
"1000249" -> "1000269"  [label="DDG: disableLiteralCompression"];
"1000208" -> "1000269"  [label="DDG: op"];
"1000243" -> "1000269"  [label="DDG: literals"];
"1000241" -> "1000269"  [label="DDG: litSize"];
"1000127" -> "1000269"  [label="DDG: workspace"];
"1000128" -> "1000269"  [label="DDG: wkspSize"];
"1000129" -> "1000269"  [label="DDG: bmi2"];
"1000269" -> "1000409"  [label="DDG: workspace"];
"1000269" -> "1000409"  [label="DDG: wkspSize"];
"1000269" -> "1000788"  [label="DDG: bmi2"];
"1000252" -> "1000251"  [label="AST: "];
"1000252" -> "1000258"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000258" -> "1000252"  [label="AST: "];
"1000262" -> "1000252"  [label="CFG: "];
"1000251" -> "1000252"  [label="CFG: "];
"1000252" -> "1000835"  [label="DDG: ZSTD_fast"];
"1000252" -> "1000251"  [label="DDG: cctxParams->cParams.strategy"];
"1000252" -> "1000251"  [label="DDG: ZSTD_fast"];
"1000249" -> "1000234"  [label="AST: "];
"1000249" -> "1000251"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000251" -> "1000249"  [label="AST: "];
"1000268" -> "1000249"  [label="CFG: "];
"1000249" -> "1000835"  [label="DDG: (cctxParams->cParams.strategy == ZSTD_fast) && (cctxParams->cParams.targetLength > 0)"];
"1000251" -> "1000249"  [label="DDG: cctxParams->cParams.strategy == ZSTD_fast"];
"1000251" -> "1000249"  [label="DDG: cctxParams->cParams.targetLength > 0"];
"1000251" -> "1000259"  [label="CFG: "];
"1000259" -> "1000251"  [label="AST: "];
"1000251" -> "1000835"  [label="DDG: cctxParams->cParams.targetLength > 0"];
"1000251" -> "1000835"  [label="DDG: cctxParams->cParams.strategy == ZSTD_fast"];
"1000259" -> "1000251"  [label="DDG: cctxParams->cParams.targetLength"];
"1000259" -> "1000251"  [label="DDG: 0"];
"1000259" -> "1000265"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000265" -> "1000259"  [label="AST: "];
"1000259" -> "1000835"  [label="DDG: cctxParams->cParams.targetLength"];
"1000208" -> "1000130"  [label="AST: "];
"1000208" -> "1000210"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000210" -> "1000208"  [label="AST: "];
"1000213" -> "1000208"  [label="CFG: "];
"1000208" -> "1000835"  [label="DDG: ostart"];
"1000243" -> "1000241"  [label="AST: "];
"1000243" -> "1000247"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000247" -> "1000243"  [label="AST: "];
"1000241" -> "1000243"  [label="CFG: "];
"1000243" -> "1000835"  [label="DDG: seqStorePtr->lit"];
"1000243" -> "1000241"  [label="DDG: seqStorePtr->lit"];
"1000243" -> "1000241"  [label="DDG: literals"];
"1000235" -> "1000243"  [label="DDG: literals"];
"1000235" -> "1000234"  [label="AST: "];
"1000235" -> "1000237"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="AST: "];
"1000242" -> "1000235"  [label="CFG: "];
"1000235" -> "1000835"  [label="DDG: seqStorePtr->litStart"];
"1000241" -> "1000234"  [label="AST: "];
"1000242" -> "1000241"  [label="AST: "];
"1000250" -> "1000241"  [label="CFG: "];
"1000241" -> "1000835"  [label="DDG: seqStorePtr->lit - literals"];
"1000127" -> "1000120"  [label="AST: "];
"1000127" -> "1000835"  [label="DDG: workspace"];
"1000127" -> "1000409"  [label="DDG: workspace"];
"1000127" -> "1000479"  [label="DDG: workspace"];
"1000127" -> "1000532"  [label="DDG: workspace"];
"1000127" -> "1000603"  [label="DDG: workspace"];
"1000127" -> "1000656"  [label="DDG: workspace"];
"1000127" -> "1000723"  [label="DDG: workspace"];
"1000128" -> "1000120"  [label="AST: "];
"1000128" -> "1000835"  [label="DDG: wkspSize"];
"1000128" -> "1000409"  [label="DDG: wkspSize"];
"1000128" -> "1000479"  [label="DDG: wkspSize"];
"1000128" -> "1000532"  [label="DDG: wkspSize"];
"1000128" -> "1000603"  [label="DDG: wkspSize"];
"1000128" -> "1000656"  [label="DDG: wkspSize"];
"1000128" -> "1000723"  [label="DDG: wkspSize"];
"1000129" -> "1000120"  [label="AST: "];
"1000129" -> "1000835"  [label="DDG: bmi2"];
"1000129" -> "1000788"  [label="DDG: bmi2"];
}
