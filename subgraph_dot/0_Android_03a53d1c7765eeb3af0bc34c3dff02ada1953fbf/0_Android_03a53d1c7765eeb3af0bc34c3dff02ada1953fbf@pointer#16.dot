digraph "0_Android_03a53d1c7765eeb3af0bc34c3dff02ada1953fbf@pointer" {
"1000192" [label="(Call,dispatchEntry->resolvedAction = AMOTION_EVENT_ACTION_OUTSIDE)"];
"1000252" [label="(Call,dispatchEntry->resolvedAction == AMOTION_EVENT_ACTION_HOVER_MOVE)"];
"1000251" [label="(Call,dispatchEntry->resolvedAction == AMOTION_EVENT_ACTION_HOVER_MOVE\n && !connection->inputState.isHovering(\n                        motionEntry->deviceId, motionEntry->source, motionEntry->displayId))"];
"1000310" [label="(Call,connection->inputState.trackMotion(motionEntry,\n                 dispatchEntry->resolvedAction, dispatchEntry->resolvedFlags))"];
"1000309" [label="(Call,!connection->inputState.trackMotion(motionEntry,\n                 dispatchEntry->resolvedAction, dispatchEntry->resolvedFlags))"];
"1000309" [label="(Call,!connection->inputState.trackMotion(motionEntry,\n                 dispatchEntry->resolvedAction, dispatchEntry->resolvedFlags))"];
"1000310" [label="(Call,connection->inputState.trackMotion(motionEntry,\n                 dispatchEntry->resolvedAction, dispatchEntry->resolvedFlags))"];
"1000250" [label="(ControlStructure,if (dispatchEntry->resolvedAction == AMOTION_EVENT_ACTION_HOVER_MOVE\n && !connection->inputState.isHovering(\n                        motionEntry->deviceId, motionEntry->source, motionEntry->displayId)))"];
"1000260" [label="(Identifier,motionEntry)"];
"1000335" [label="(MethodReturn,void)"];
"1000193" [label="(Call,dispatchEntry->resolvedAction)"];
"1000272" [label="(Call,dispatchEntry->resolvedAction = AMOTION_EVENT_ACTION_HOVER_ENTER)"];
"1000256" [label="(Identifier,AMOTION_EVENT_ACTION_HOVER_MOVE)"];
"1000279" [label="(Identifier,dispatchEntry)"];
"1000243" [label="(Call,dispatchEntry->resolvedAction = motionEntry->action)"];
"1000196" [label="(Identifier,AMOTION_EVENT_ACTION_OUTSIDE)"];
"1000203" [label="(Call,dispatchEntry->resolvedAction = AMOTION_EVENT_ACTION_HOVER_EXIT)"];
"1000325" [label="(ControlStructure,break;)"];
"1000270" [label="(Literal,\"channel '%s' ~ enqueueDispatchEntryLocked: filling in missing hover enter event\")"];
"1000182" [label="(Call,* motionEntry = static_cast<MotionEntry*>(eventEntry))"];
"1000315" [label="(Call,dispatchEntry->resolvedFlags)"];
"1000312" [label="(Call,dispatchEntry->resolvedAction)"];
"1000225" [label="(Call,dispatchEntry->resolvedAction = AMOTION_EVENT_ACTION_CANCEL)"];
"1000257" [label="(Call,!connection->inputState.isHovering(\n                        motionEntry->deviceId, motionEntry->source, motionEntry->displayId))"];
"1000251" [label="(Call,dispatchEntry->resolvedAction == AMOTION_EVENT_ACTION_HOVER_MOVE\n && !connection->inputState.isHovering(\n                        motionEntry->deviceId, motionEntry->source, motionEntry->displayId))"];
"1000311" [label="(Identifier,motionEntry)"];
"1000303" [label="(Call,dispatchEntry->resolvedFlags |= AMOTION_EVENT_FLAG_WINDOW_IS_PARTIALLY_OBSCURED)"];
"1000253" [label="(Call,dispatchEntry->resolvedAction)"];
"1000214" [label="(Call,dispatchEntry->resolvedAction = AMOTION_EVENT_ACTION_HOVER_ENTER)"];
"1000277" [label="(Call,dispatchEntry->resolvedFlags = motionEntry->flags)"];
"1000320" [label="(Literal,\"channel '%s' ~ enqueueDispatchEntryLocked: skipping inconsistent motion event\")"];
"1000291" [label="(Call,dispatchEntry->resolvedFlags |= AMOTION_EVENT_FLAG_WINDOW_IS_OBSCURED)"];
"1000236" [label="(Call,dispatchEntry->resolvedAction = AMOTION_EVENT_ACTION_DOWN)"];
"1000192" [label="(Call,dispatchEntry->resolvedAction = AMOTION_EVENT_ACTION_OUTSIDE)"];
"1000308" [label="(ControlStructure,if (!connection->inputState.trackMotion(motionEntry,\n                 dispatchEntry->resolvedAction, dispatchEntry->resolvedFlags)))"];
"1000252" [label="(Call,dispatchEntry->resolvedAction == AMOTION_EVENT_ACTION_HOVER_MOVE)"];
"1000254" [label="(Identifier,dispatchEntry)"];
"1000191" [label="(Block,)"];
"1000192" -> "1000191"  [label="AST: "];
"1000192" -> "1000196"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000196" -> "1000192"  [label="AST: "];
"1000254" -> "1000192"  [label="CFG: "];
"1000192" -> "1000335"  [label="DDG: AMOTION_EVENT_ACTION_OUTSIDE"];
"1000192" -> "1000252"  [label="DDG: dispatchEntry->resolvedAction"];
"1000252" -> "1000251"  [label="AST: "];
"1000252" -> "1000256"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000256" -> "1000252"  [label="AST: "];
"1000260" -> "1000252"  [label="CFG: "];
"1000251" -> "1000252"  [label="CFG: "];
"1000252" -> "1000335"  [label="DDG: AMOTION_EVENT_ACTION_HOVER_MOVE"];
"1000252" -> "1000251"  [label="DDG: dispatchEntry->resolvedAction"];
"1000252" -> "1000251"  [label="DDG: AMOTION_EVENT_ACTION_HOVER_MOVE"];
"1000236" -> "1000252"  [label="DDG: dispatchEntry->resolvedAction"];
"1000225" -> "1000252"  [label="DDG: dispatchEntry->resolvedAction"];
"1000203" -> "1000252"  [label="DDG: dispatchEntry->resolvedAction"];
"1000214" -> "1000252"  [label="DDG: dispatchEntry->resolvedAction"];
"1000243" -> "1000252"  [label="DDG: dispatchEntry->resolvedAction"];
"1000252" -> "1000310"  [label="DDG: dispatchEntry->resolvedAction"];
"1000251" -> "1000250"  [label="AST: "];
"1000251" -> "1000257"  [label="CFG: "];
"1000257" -> "1000251"  [label="AST: "];
"1000270" -> "1000251"  [label="CFG: "];
"1000279" -> "1000251"  [label="CFG: "];
"1000251" -> "1000335"  [label="DDG: dispatchEntry->resolvedAction == AMOTION_EVENT_ACTION_HOVER_MOVE\n && !connection->inputState.isHovering(\n                        motionEntry->deviceId, motionEntry->source, motionEntry->displayId)"];
"1000251" -> "1000335"  [label="DDG: dispatchEntry->resolvedAction == AMOTION_EVENT_ACTION_HOVER_MOVE"];
"1000251" -> "1000335"  [label="DDG: !connection->inputState.isHovering(\n                        motionEntry->deviceId, motionEntry->source, motionEntry->displayId)"];
"1000257" -> "1000251"  [label="DDG: connection->inputState.isHovering(\n                        motionEntry->deviceId, motionEntry->source, motionEntry->displayId)"];
"1000310" -> "1000309"  [label="AST: "];
"1000310" -> "1000315"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000312" -> "1000310"  [label="AST: "];
"1000315" -> "1000310"  [label="AST: "];
"1000309" -> "1000310"  [label="CFG: "];
"1000310" -> "1000335"  [label="DDG: dispatchEntry->resolvedAction"];
"1000310" -> "1000335"  [label="DDG: dispatchEntry->resolvedFlags"];
"1000310" -> "1000335"  [label="DDG: motionEntry"];
"1000310" -> "1000309"  [label="DDG: motionEntry"];
"1000310" -> "1000309"  [label="DDG: dispatchEntry->resolvedAction"];
"1000310" -> "1000309"  [label="DDG: dispatchEntry->resolvedFlags"];
"1000182" -> "1000310"  [label="DDG: motionEntry"];
"1000272" -> "1000310"  [label="DDG: dispatchEntry->resolvedAction"];
"1000291" -> "1000310"  [label="DDG: dispatchEntry->resolvedFlags"];
"1000303" -> "1000310"  [label="DDG: dispatchEntry->resolvedFlags"];
"1000277" -> "1000310"  [label="DDG: dispatchEntry->resolvedFlags"];
"1000309" -> "1000308"  [label="AST: "];
"1000320" -> "1000309"  [label="CFG: "];
"1000325" -> "1000309"  [label="CFG: "];
"1000309" -> "1000335"  [label="DDG: connection->inputState.trackMotion(motionEntry,\n                 dispatchEntry->resolvedAction, dispatchEntry->resolvedFlags)"];
"1000309" -> "1000335"  [label="DDG: !connection->inputState.trackMotion(motionEntry,\n                 dispatchEntry->resolvedAction, dispatchEntry->resolvedFlags)"];
}
