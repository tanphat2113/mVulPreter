digraph "0_linux_197c949e7798fbf28cfadc69d9ca0c2abbf93191_0@integer" {
"1000190" [label="(Call,ulen = skb->len - sizeof(struct udphdr))"];
"1000192" [label="(Call,skb->len - sizeof(struct udphdr))"];
"1000202" [label="(Call,copied > ulen)"];
"1000205" [label="(Call,copied = ulen)"];
"1000228" [label="(Call,copied < ulen)"];
"1000227" [label="(Call,copied < ulen || UDP_SKB_CB(skb)->partial_cov)"];
"1000252" [label="(Call,skb_copy_datagram_msg(skb, sizeof(struct udphdr),\n \t\t\t\t\t    msg, copied))"];
"1000250" [label="(Call,err = skb_copy_datagram_msg(skb, sizeof(struct udphdr),\n \t\t\t\t\t    msg, copied))"];
"1000274" [label="(Call,unlikely(err))"];
"1000438" [label="(Return,return err;)"];
"1000277" [label="(Call,trace_kfree_skb(skb, udpv6_recvmsg))"];
"1000434" [label="(Call,skb_free_datagram_locked(sk, skb))"];
"1000320" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000339" [label="(Call,udp_hdr(skb))"];
"1000352" [label="(Call,ip_hdr(skb))"];
"1000397" [label="(Call,ip6_datagram_recv_common_ctl(sk, msg, skb))"];
"1000408" [label="(Call,ip_cmsg_recv(msg, skb))"];
"1000419" [label="(Call,ip6_datagram_recv_specific_ctl(sk, msg, skb))"];
"1000371" [label="(Call,ipv6_hdr(skb))"];
"1000383" [label="(Call,inet6_iif(skb))"];
"1000378" [label="(Call,ipv6_iface_scope_id(&sin6->sin6_addr,\n\t\t\t\t\t\t    inet6_iif(skb)))"];
"1000374" [label="(Call,sin6->sin6_scope_id =\n\t\t\t\tipv6_iface_scope_id(&sin6->sin6_addr,\n\t\t\t\t\t\t    inet6_iif(skb)))"];
"1000423" [label="(Call,err = copied)"];
"1000430" [label="(Call,err = ulen)"];
"1000210" [label="(Call,copied < ulen)"];
"1000419" [label="(Call,ip6_datagram_recv_specific_ctl(sk, msg, skb))"];
"1000250" [label="(Call,err = skb_copy_datagram_msg(skb, sizeof(struct udphdr),\n \t\t\t\t\t    msg, copied))"];
"1000252" [label="(Call,skb_copy_datagram_msg(skb, sizeof(struct udphdr),\n \t\t\t\t\t    msg, copied))"];
"1000402" [label="(Identifier,is_udp4)"];
"1000226" [label="(ControlStructure,if (copied < ulen || UDP_SKB_CB(skb)->partial_cov))"];
"1000375" [label="(Call,sin6->sin6_scope_id)"];
"1000340" [label="(Identifier,skb)"];
"1000239" [label="(Call,udp_lib_checksum_complete(skb))"];
"1000251" [label="(Identifier,err)"];
"1000410" [label="(Identifier,skb)"];
"1000423" [label="(Call,err = copied)"];
"1000292" [label="(Call,sock_net(sk))"];
"1000372" [label="(Identifier,skb)"];
"1000371" [label="(Call,ipv6_hdr(skb))"];
"1000404" [label="(ControlStructure,if (inet->cmsg_flags))"];
"1000391" [label="(ControlStructure,if (np->rxopt.all))"];
"1000438" [label="(Return,return err;)"];
"1000435" [label="(Identifier,sk)"];
"1000233" [label="(Identifier,skb)"];
"1000227" [label="(Call,copied < ulen || UDP_SKB_CB(skb)->partial_cov)"];
"1000373" [label="(FieldIdentifier,saddr)"];
"1000434" [label="(Call,skb_free_datagram_locked(sk, skb))"];
"1000305" [label="(Identifier,peeked)"];
"1000187" [label="(Call,!skb)"];
"1000323" [label="(Identifier,skb)"];
"1000202" [label="(Call,copied > ulen)"];
"1000237" [label="(Identifier,checksum_valid)"];
"1000211" [label="(Identifier,copied)"];
"1000279" [label="(Identifier,udpv6_recvmsg)"];
"1000310" [label="(Call,sock_net(sk))"];
"1000430" [label="(Call,err = ulen)"];
"1000398" [label="(Identifier,sk)"];
"1000201" [label="(ControlStructure,if (copied > ulen))"];
"1000400" [label="(Identifier,skb)"];
"1000321" [label="(Identifier,msg)"];
"1000206" [label="(Identifier,copied)"];
"1000487" [label="(MethodReturn,int)"];
"1000425" [label="(Identifier,copied)"];
"1000436" [label="(Identifier,skb)"];
"1000229" [label="(Identifier,copied)"];
"1000209" [label="(ControlStructure,if (copied < ulen))"];
"1000399" [label="(Identifier,msg)"];
"1000384" [label="(Identifier,skb)"];
"1000316" [label="(Call,sock_net(sk))"];
"1000413" [label="(ControlStructure,if (np->rxopt.all))"];
"1000351" [label="(Call,ip_hdr(skb)->saddr)"];
"1000383" [label="(Call,inet6_iif(skb))"];
"1000247" [label="(Identifier,checksum_valid)"];
"1000378" [label="(Call,ipv6_iface_scope_id(&sin6->sin6_addr,\n\t\t\t\t\t\t    inet6_iif(skb)))"];
"1000432" [label="(Identifier,ulen)"];
"1000322" [label="(Identifier,sk)"];
"1000420" [label="(Identifier,sk)"];
"1000245" [label="(ControlStructure,if (checksum_valid || skb_csum_unnecessary(skb)))"];
"1000439" [label="(Identifier,err)"];
"1000437" [label="(JumpTarget,out:)"];
"1000370" [label="(Call,ipv6_hdr(skb)->saddr)"];
"1000248" [label="(Call,skb_csum_unnecessary(skb))"];
"1000199" [label="(Identifier,copied)"];
"1000366" [label="(Call,sin6->sin6_addr = ipv6_hdr(skb)->saddr)"];
"1000254" [label="(Call,sizeof(struct udphdr))"];
"1000426" [label="(ControlStructure,if (flags & MSG_TRUNC))"];
"1000353" [label="(Identifier,skb)"];
"1000232" [label="(Call,UDP_SKB_CB(skb))"];
"1000110" [label="(Block,)"];
"1000210" [label="(Call,copied < ulen)"];
"1000230" [label="(Identifier,ulen)"];
"1000379" [label="(Call,&sin6->sin6_addr)"];
"1000203" [label="(Identifier,copied)"];
"1000273" [label="(ControlStructure,if (unlikely(err)))"];
"1000341" [label="(FieldIdentifier,source)"];
"1000192" [label="(Call,skb->len - sizeof(struct udphdr))"];
"1000257" [label="(Identifier,copied)"];
"1000428" [label="(Identifier,flags)"];
"1000205" [label="(Call,copied = ulen)"];
"1000339" [label="(Call,udp_hdr(skb))"];
"1000276" [label="(Block,)"];
"1000397" [label="(Call,ip6_datagram_recv_common_ctl(sk, msg, skb))"];
"1000421" [label="(Identifier,msg)"];
"1000268" [label="(Call,err == -EINVAL)"];
"1000409" [label="(Identifier,msg)"];
"1000193" [label="(Call,skb->len)"];
"1000191" [label="(Identifier,ulen)"];
"1000274" [label="(Call,unlikely(err))"];
"1000190" [label="(Call,ulen = skb->len - sizeof(struct udphdr))"];
"1000231" [label="(Call,UDP_SKB_CB(skb)->partial_cov)"];
"1000433" [label="(JumpTarget,out_free:)"];
"1000212" [label="(Identifier,ulen)"];
"1000196" [label="(Call,sizeof(struct udphdr))"];
"1000298" [label="(Call,sock_net(sk))"];
"1000422" [label="(Identifier,skb)"];
"1000277" [label="(Call,trace_kfree_skb(skb, udpv6_recvmsg))"];
"1000253" [label="(Identifier,skb)"];
"1000408" [label="(Call,ip_cmsg_recv(msg, skb))"];
"1000354" [label="(FieldIdentifier,saddr)"];
"1000198" [label="(Call,copied = len)"];
"1000215" [label="(Identifier,msg)"];
"1000104" [label="(MethodParameterIn,struct sock *sk)"];
"1000219" [label="(Identifier,is_udp4)"];
"1000262" [label="(Call,skb_copy_and_csum_datagram_msg(skb, sizeof(struct udphdr), msg))"];
"1000204" [label="(Identifier,ulen)"];
"1000172" [label="(Call,__skb_recv_datagram(sk, flags | (noblock ? MSG_DONTWAIT : 0),\n\t\t\t\t  &peeked, &off, &err))"];
"1000352" [label="(Call,ip_hdr(skb))"];
"1000278" [label="(Identifier,skb)"];
"1000228" [label="(Call,copied < ulen)"];
"1000387" [label="(Identifier,addr_len)"];
"1000365" [label="(Block,)"];
"1000431" [label="(Identifier,err)"];
"1000282" [label="(Identifier,peeked)"];
"1000338" [label="(Call,udp_hdr(skb)->source)"];
"1000275" [label="(Identifier,err)"];
"1000256" [label="(Identifier,msg)"];
"1000424" [label="(Identifier,err)"];
"1000374" [label="(Call,sin6->sin6_scope_id =\n\t\t\t\tipv6_iface_scope_id(&sin6->sin6_addr,\n\t\t\t\t\t\t    inet6_iif(skb)))"];
"1000320" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000105" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000326" [label="(Identifier,msg)"];
"1000207" [label="(Identifier,ulen)"];
"1000190" -> "1000110"  [label="AST: "];
"1000190" -> "1000192"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000192" -> "1000190"  [label="AST: "];
"1000199" -> "1000190"  [label="CFG: "];
"1000190" -> "1000487"  [label="DDG: skb->len - sizeof(struct udphdr)"];
"1000192" -> "1000190"  [label="DDG: skb->len"];
"1000190" -> "1000202"  [label="DDG: ulen"];
"1000192" -> "1000196"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000196" -> "1000192"  [label="AST: "];
"1000192" -> "1000487"  [label="DDG: skb->len"];
"1000202" -> "1000201"  [label="AST: "];
"1000202" -> "1000204"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000206" -> "1000202"  [label="CFG: "];
"1000211" -> "1000202"  [label="CFG: "];
"1000202" -> "1000487"  [label="DDG: copied > ulen"];
"1000198" -> "1000202"  [label="DDG: copied"];
"1000202" -> "1000205"  [label="DDG: ulen"];
"1000202" -> "1000210"  [label="DDG: copied"];
"1000202" -> "1000210"  [label="DDG: ulen"];
"1000202" -> "1000228"  [label="DDG: ulen"];
"1000205" -> "1000201"  [label="AST: "];
"1000205" -> "1000207"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000207" -> "1000205"  [label="AST: "];
"1000219" -> "1000205"  [label="CFG: "];
"1000205" -> "1000228"  [label="DDG: copied"];
"1000228" -> "1000227"  [label="AST: "];
"1000228" -> "1000230"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000230" -> "1000228"  [label="AST: "];
"1000233" -> "1000228"  [label="CFG: "];
"1000227" -> "1000228"  [label="CFG: "];
"1000228" -> "1000487"  [label="DDG: copied"];
"1000228" -> "1000487"  [label="DDG: ulen"];
"1000228" -> "1000227"  [label="DDG: copied"];
"1000228" -> "1000227"  [label="DDG: ulen"];
"1000210" -> "1000228"  [label="DDG: copied"];
"1000210" -> "1000228"  [label="DDG: ulen"];
"1000228" -> "1000252"  [label="DDG: copied"];
"1000228" -> "1000423"  [label="DDG: copied"];
"1000228" -> "1000430"  [label="DDG: ulen"];
"1000227" -> "1000226"  [label="AST: "];
"1000227" -> "1000231"  [label="CFG: "];
"1000231" -> "1000227"  [label="AST: "];
"1000237" -> "1000227"  [label="CFG: "];
"1000247" -> "1000227"  [label="CFG: "];
"1000227" -> "1000487"  [label="DDG: copied < ulen || UDP_SKB_CB(skb)->partial_cov"];
"1000227" -> "1000487"  [label="DDG: copied < ulen"];
"1000227" -> "1000487"  [label="DDG: UDP_SKB_CB(skb)->partial_cov"];
"1000252" -> "1000250"  [label="AST: "];
"1000252" -> "1000257"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000254" -> "1000252"  [label="AST: "];
"1000256" -> "1000252"  [label="AST: "];
"1000257" -> "1000252"  [label="AST: "];
"1000250" -> "1000252"  [label="CFG: "];
"1000252" -> "1000487"  [label="DDG: copied"];
"1000252" -> "1000487"  [label="DDG: msg"];
"1000252" -> "1000250"  [label="DDG: skb"];
"1000252" -> "1000250"  [label="DDG: msg"];
"1000252" -> "1000250"  [label="DDG: copied"];
"1000187" -> "1000252"  [label="DDG: skb"];
"1000232" -> "1000252"  [label="DDG: skb"];
"1000239" -> "1000252"  [label="DDG: skb"];
"1000248" -> "1000252"  [label="DDG: skb"];
"1000262" -> "1000252"  [label="DDG: msg"];
"1000105" -> "1000252"  [label="DDG: msg"];
"1000252" -> "1000277"  [label="DDG: skb"];
"1000252" -> "1000320"  [label="DDG: msg"];
"1000252" -> "1000320"  [label="DDG: skb"];
"1000252" -> "1000423"  [label="DDG: copied"];
"1000250" -> "1000245"  [label="AST: "];
"1000251" -> "1000250"  [label="AST: "];
"1000275" -> "1000250"  [label="CFG: "];
"1000250" -> "1000487"  [label="DDG: skb_copy_datagram_msg(skb, sizeof(struct udphdr),\n \t\t\t\t\t    msg, copied)"];
"1000250" -> "1000274"  [label="DDG: err"];
"1000274" -> "1000273"  [label="AST: "];
"1000274" -> "1000275"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000278" -> "1000274"  [label="CFG: "];
"1000305" -> "1000274"  [label="CFG: "];
"1000274" -> "1000487"  [label="DDG: err"];
"1000274" -> "1000487"  [label="DDG: unlikely(err)"];
"1000268" -> "1000274"  [label="DDG: err"];
"1000274" -> "1000438"  [label="DDG: err"];
"1000438" -> "1000110"  [label="AST: "];
"1000438" -> "1000439"  [label="CFG: "];
"1000439" -> "1000438"  [label="AST: "];
"1000487" -> "1000438"  [label="CFG: "];
"1000438" -> "1000487"  [label="DDG: <RET>"];
"1000439" -> "1000438"  [label="DDG: err"];
"1000268" -> "1000438"  [label="DDG: err"];
"1000423" -> "1000438"  [label="DDG: err"];
"1000430" -> "1000438"  [label="DDG: err"];
"1000277" -> "1000276"  [label="AST: "];
"1000277" -> "1000279"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000277"  [label="AST: "];
"1000282" -> "1000277"  [label="CFG: "];
"1000277" -> "1000487"  [label="DDG: trace_kfree_skb(skb, udpv6_recvmsg)"];
"1000277" -> "1000487"  [label="DDG: udpv6_recvmsg"];
"1000262" -> "1000277"  [label="DDG: skb"];
"1000277" -> "1000434"  [label="DDG: skb"];
"1000434" -> "1000110"  [label="AST: "];
"1000434" -> "1000436"  [label="CFG: "];
"1000435" -> "1000434"  [label="AST: "];
"1000436" -> "1000434"  [label="AST: "];
"1000437" -> "1000434"  [label="CFG: "];
"1000434" -> "1000487"  [label="DDG: skb"];
"1000434" -> "1000487"  [label="DDG: skb_free_datagram_locked(sk, skb)"];
"1000434" -> "1000487"  [label="DDG: sk"];
"1000397" -> "1000434"  [label="DDG: sk"];
"1000397" -> "1000434"  [label="DDG: skb"];
"1000292" -> "1000434"  [label="DDG: sk"];
"1000298" -> "1000434"  [label="DDG: sk"];
"1000419" -> "1000434"  [label="DDG: sk"];
"1000419" -> "1000434"  [label="DDG: skb"];
"1000320" -> "1000434"  [label="DDG: sk"];
"1000320" -> "1000434"  [label="DDG: skb"];
"1000172" -> "1000434"  [label="DDG: sk"];
"1000104" -> "1000434"  [label="DDG: sk"];
"1000383" -> "1000434"  [label="DDG: skb"];
"1000352" -> "1000434"  [label="DDG: skb"];
"1000408" -> "1000434"  [label="DDG: skb"];
"1000320" -> "1000110"  [label="AST: "];
"1000320" -> "1000323"  [label="CFG: "];
"1000321" -> "1000320"  [label="AST: "];
"1000322" -> "1000320"  [label="AST: "];
"1000323" -> "1000320"  [label="AST: "];
"1000326" -> "1000320"  [label="CFG: "];
"1000320" -> "1000487"  [label="DDG: msg"];
"1000320" -> "1000487"  [label="DDG: sock_recv_ts_and_drops(msg, sk, skb)"];
"1000262" -> "1000320"  [label="DDG: msg"];
"1000262" -> "1000320"  [label="DDG: skb"];
"1000105" -> "1000320"  [label="DDG: msg"];
"1000310" -> "1000320"  [label="DDG: sk"];
"1000172" -> "1000320"  [label="DDG: sk"];
"1000316" -> "1000320"  [label="DDG: sk"];
"1000104" -> "1000320"  [label="DDG: sk"];
"1000320" -> "1000339"  [label="DDG: skb"];
"1000320" -> "1000397"  [label="DDG: sk"];
"1000320" -> "1000397"  [label="DDG: msg"];
"1000320" -> "1000397"  [label="DDG: skb"];
"1000320" -> "1000408"  [label="DDG: msg"];
"1000320" -> "1000408"  [label="DDG: skb"];
"1000320" -> "1000419"  [label="DDG: sk"];
"1000320" -> "1000419"  [label="DDG: msg"];
"1000320" -> "1000419"  [label="DDG: skb"];
"1000339" -> "1000338"  [label="AST: "];
"1000339" -> "1000340"  [label="CFG: "];
"1000340" -> "1000339"  [label="AST: "];
"1000341" -> "1000339"  [label="CFG: "];
"1000339" -> "1000352"  [label="DDG: skb"];
"1000339" -> "1000371"  [label="DDG: skb"];
"1000352" -> "1000351"  [label="AST: "];
"1000352" -> "1000353"  [label="CFG: "];
"1000353" -> "1000352"  [label="AST: "];
"1000354" -> "1000352"  [label="CFG: "];
"1000352" -> "1000397"  [label="DDG: skb"];
"1000352" -> "1000408"  [label="DDG: skb"];
"1000352" -> "1000419"  [label="DDG: skb"];
"1000397" -> "1000391"  [label="AST: "];
"1000397" -> "1000400"  [label="CFG: "];
"1000398" -> "1000397"  [label="AST: "];
"1000399" -> "1000397"  [label="AST: "];
"1000400" -> "1000397"  [label="AST: "];
"1000402" -> "1000397"  [label="CFG: "];
"1000397" -> "1000487"  [label="DDG: ip6_datagram_recv_common_ctl(sk, msg, skb)"];
"1000397" -> "1000487"  [label="DDG: msg"];
"1000104" -> "1000397"  [label="DDG: sk"];
"1000105" -> "1000397"  [label="DDG: msg"];
"1000383" -> "1000397"  [label="DDG: skb"];
"1000397" -> "1000408"  [label="DDG: msg"];
"1000397" -> "1000408"  [label="DDG: skb"];
"1000397" -> "1000419"  [label="DDG: sk"];
"1000397" -> "1000419"  [label="DDG: msg"];
"1000397" -> "1000419"  [label="DDG: skb"];
"1000408" -> "1000404"  [label="AST: "];
"1000408" -> "1000410"  [label="CFG: "];
"1000409" -> "1000408"  [label="AST: "];
"1000410" -> "1000408"  [label="AST: "];
"1000424" -> "1000408"  [label="CFG: "];
"1000408" -> "1000487"  [label="DDG: msg"];
"1000408" -> "1000487"  [label="DDG: ip_cmsg_recv(msg, skb)"];
"1000105" -> "1000408"  [label="DDG: msg"];
"1000383" -> "1000408"  [label="DDG: skb"];
"1000419" -> "1000413"  [label="AST: "];
"1000419" -> "1000422"  [label="CFG: "];
"1000420" -> "1000419"  [label="AST: "];
"1000421" -> "1000419"  [label="AST: "];
"1000422" -> "1000419"  [label="AST: "];
"1000424" -> "1000419"  [label="CFG: "];
"1000419" -> "1000487"  [label="DDG: msg"];
"1000419" -> "1000487"  [label="DDG: ip6_datagram_recv_specific_ctl(sk, msg, skb)"];
"1000104" -> "1000419"  [label="DDG: sk"];
"1000105" -> "1000419"  [label="DDG: msg"];
"1000383" -> "1000419"  [label="DDG: skb"];
"1000371" -> "1000370"  [label="AST: "];
"1000371" -> "1000372"  [label="CFG: "];
"1000372" -> "1000371"  [label="AST: "];
"1000373" -> "1000371"  [label="CFG: "];
"1000371" -> "1000383"  [label="DDG: skb"];
"1000383" -> "1000378"  [label="AST: "];
"1000383" -> "1000384"  [label="CFG: "];
"1000384" -> "1000383"  [label="AST: "];
"1000378" -> "1000383"  [label="CFG: "];
"1000383" -> "1000378"  [label="DDG: skb"];
"1000378" -> "1000374"  [label="AST: "];
"1000379" -> "1000378"  [label="AST: "];
"1000374" -> "1000378"  [label="CFG: "];
"1000378" -> "1000487"  [label="DDG: inet6_iif(skb)"];
"1000378" -> "1000487"  [label="DDG: &sin6->sin6_addr"];
"1000378" -> "1000374"  [label="DDG: &sin6->sin6_addr"];
"1000378" -> "1000374"  [label="DDG: inet6_iif(skb)"];
"1000366" -> "1000378"  [label="DDG: sin6->sin6_addr"];
"1000374" -> "1000365"  [label="AST: "];
"1000375" -> "1000374"  [label="AST: "];
"1000387" -> "1000374"  [label="CFG: "];
"1000374" -> "1000487"  [label="DDG: sin6->sin6_scope_id"];
"1000374" -> "1000487"  [label="DDG: ipv6_iface_scope_id(&sin6->sin6_addr,\n\t\t\t\t\t\t    inet6_iif(skb))"];
"1000423" -> "1000110"  [label="AST: "];
"1000423" -> "1000425"  [label="CFG: "];
"1000424" -> "1000423"  [label="AST: "];
"1000425" -> "1000423"  [label="AST: "];
"1000428" -> "1000423"  [label="CFG: "];
"1000423" -> "1000487"  [label="DDG: copied"];
"1000423" -> "1000487"  [label="DDG: err"];
"1000430" -> "1000426"  [label="AST: "];
"1000430" -> "1000432"  [label="CFG: "];
"1000431" -> "1000430"  [label="AST: "];
"1000432" -> "1000430"  [label="AST: "];
"1000433" -> "1000430"  [label="CFG: "];
"1000430" -> "1000487"  [label="DDG: ulen"];
"1000430" -> "1000487"  [label="DDG: err"];
"1000210" -> "1000209"  [label="AST: "];
"1000210" -> "1000212"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="AST: "];
"1000215" -> "1000210"  [label="CFG: "];
"1000219" -> "1000210"  [label="CFG: "];
}
