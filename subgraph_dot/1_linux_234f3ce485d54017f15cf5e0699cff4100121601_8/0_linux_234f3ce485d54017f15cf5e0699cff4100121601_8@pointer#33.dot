digraph "0_linux_234f3ce485d54017f15cf5e0699cff4100121601_8@pointer" {
"1000216" [label="(Call,emulate_ud(ctxt))"];
"1000145" [label="(MethodParameterIn,struct x86_emulate_ctxt *ctxt)"];
"1000214" [label="(Call,rc = emulate_ud(ctxt))"];
"1001195" [label="(Call,rc == X86EMUL_PROPAGATE_FAULT)"];
"1001213" [label="(Call,rc == X86EMUL_INTERCEPTED)"];
"1001219" [label="(Call,rc == X86EMUL_CONTINUE)"];
"1001226" [label="(Call,rc == X86EMUL_UNHANDLEABLE)"];
"1001222" [label="(Call,writeback_registers(ctxt))"];
"1001221" [label="(Identifier,X86EMUL_CONTINUE)"];
"1000295" [label="(Call,rc = emulate_ud(ctxt))"];
"1001322" [label="(Call,jmp_rel(ctxt, ctxt->src.val))"];
"1000642" [label="(Call,rc != X86EMUL_CONTINUE)"];
"1000407" [label="(Call,rc = emulate_gp(ctxt, 0))"];
"1001213" [label="(Call,rc == X86EMUL_INTERCEPTED)"];
"1000831" [label="(Call,reg_rmw(ctxt, VCPU_REGS_RAX))"];
"1000948" [label="(Call,ctxt->ops->halt(ctxt))"];
"1000194" [label="(Call,emulate_ud(ctxt))"];
"1001260" [label="(Call,ops->get_dr(ctxt, ctxt->modrm_reg, &ctxt->dst.val))"];
"1001130" [label="(Call,register_address_increment(ctxt, reg_rmw(ctxt, VCPU_REGS_RCX),\n\t\t\t\t-count))"];
"1000213" [label="(Block,)"];
"1001026" [label="(Call,rc != X86EMUL_CONTINUE)"];
"1001214" [label="(Identifier,rc)"];
"1000382" [label="(Call,rc != X86EMUL_CONTINUE)"];
"1000730" [label="(Call,rc != X86EMUL_CONTINUE)"];
"1001223" [label="(Identifier,ctxt)"];
"1001222" [label="(Call,writeback_registers(ctxt))"];
"1000336" [label="(Call,fetch_possible_mmx_operand(ctxt, &ctxt->src))"];
"1000909" [label="(Call,emulate_int(ctxt, ctxt->src.val))"];
"1000402" [label="(Call,rc = emulate_ud(ctxt))"];
"1001132" [label="(Call,reg_rmw(ctxt, VCPU_REGS_RCX))"];
"1000393" [label="(Call,ops->cpl(ctxt))"];
"1000214" [label="(Call,rc = emulate_ud(ctxt))"];
"1000543" [label="(Call,rc != X86EMUL_CONTINUE)"];
"1000217" [label="(Identifier,ctxt)"];
"1001081" [label="(Call,string_addr_inc(ctxt, VCPU_REGS_RDI, &ctxt->dst))"];
"1000932" [label="(Call,jmp_rel(ctxt, ctxt->src.val))"];
"1000740" [label="(Call,rc != X86EMUL_CONTINUE)"];
"1000621" [label="(Call,segmented_read(ctxt, ctxt->dst.addr.mem,\n\t\t\t\t   &ctxt->dst.val, ctxt->dst.bytes))"];
"1001151" [label="(Call,reg_read(ctxt, VCPU_REGS_RCX))"];
"1001139" [label="(Call,string_insn_completed(ctxt))"];
"1001229" [label="(Identifier,EMULATION_FAILED)"];
"1000461" [label="(Call,emulator_check_intercept(ctxt, ctxt->intercept,\n\t\t\t\t\t\t      X86_ICPT_POST_EXCEPT))"];
"1000317" [label="(Call,emulate_nm(ctxt))"];
"1001215" [label="(Identifier,X86EMUL_INTERCEPTED)"];
"1001194" [label="(ControlStructure,if (rc == X86EMUL_PROPAGATE_FAULT))"];
"1000796" [label="(Call,jmp_rel(ctxt, ctxt->src.val))"];
"1001040" [label="(Call,writeback(ctxt, &ctxt->dst))"];
"1001219" [label="(Call,rc == X86EMUL_CONTINUE)"];
"1000145" [label="(MethodParameterIn,struct x86_emulate_ctxt *ctxt)"];
"1000332" [label="(Call,rc != X86EMUL_CONTINUE)"];
"1001217" [label="(Identifier,EMULATION_INTERCEPTED)"];
"1000590" [label="(Call,rc != X86EMUL_CONTINUE)"];
"1001253" [label="(Call,ops->get_cr(ctxt, ctxt->modrm_reg))"];
"1000679" [label="(Call,rc != X86EMUL_CONTINUE)"];
"1001218" [label="(ControlStructure,if (rc == X86EMUL_CONTINUE))"];
"1000726" [label="(Call,fastop(ctxt, fop))"];
"1001225" [label="(Call,(rc == X86EMUL_UNHANDLEABLE) ? EMULATION_FAILED : EMULATION_OK)"];
"1001196" [label="(Identifier,rc)"];
"1000154" [label="(Call,rc = X86EMUL_CONTINUE)"];
"1001466" [label="(Call,rc != X86EMUL_CONTINUE)"];
"1000404" [label="(Call,emulate_ud(ctxt))"];
"1000375" [label="(Call,emulator_check_intercept(ctxt, ctxt->intercept,\n\t\t\t\t\t\t      X86_ICPT_PRE_EXCEPT))"];
"1000342" [label="(Call,fetch_possible_mmx_operand(ctxt, &ctxt->src2))"];
"1000426" [label="(Call,rc = emulate_ud(ctxt))"];
"1000902" [label="(Call,emulate_int(ctxt, 3))"];
"1001197" [label="(Identifier,X86EMUL_PROPAGATE_FAULT)"];
"1000672" [label="(Call,emulator_check_intercept(ctxt, ctxt->intercept,\n\t\t\t\t\t      X86_ICPT_POST_MEMACCESS))"];
"1001195" [label="(Call,rc == X86EMUL_PROPAGATE_FAULT)"];
"1000468" [label="(Call,rc != X86EMUL_CONTINUE)"];
"1001047" [label="(Call,rc != X86EMUL_CONTINUE)"];
"1001066" [label="(Call,string_addr_inc(ctxt, VCPU_REGS_RSI, &ctxt->src))"];
"1000192" [label="(Call,rc = emulate_ud(ctxt))"];
"1000844" [label="(Call,em_xchg(ctxt))"];
"1001474" [label="(MethodReturn,int)"];
"1000409" [label="(Call,emulate_gp(ctxt, 0))"];
"1001019" [label="(Call,writeback(ctxt, &ctxt->src))"];
"1000216" [label="(Call,emulate_ud(ctxt))"];
"1000315" [label="(Call,rc = emulate_nm(ctxt))"];
"1001212" [label="(ControlStructure,if (rc == X86EMUL_INTERCEPTED))"];
"1000523" [label="(Call,segmented_read(ctxt, ctxt->src.addr.mem,\n\t\t\t\t    ctxt->src.valptr, ctxt->src.bytes))"];
"1000487" [label="(Call,reg_read(ctxt, VCPU_REGS_RCX))"];
"1000278" [label="(Call,ops->get_cr(ctxt, 0))"];
"1000569" [label="(Call,segmented_read(ctxt, ctxt->src2.addr.mem,\n\t\t\t\t    &ctxt->src2.val, ctxt->src2.bytes))"];
"1001226" [label="(Call,rc == X86EMUL_UNHANDLEABLE)"];
"1000428" [label="(Call,emulate_ud(ctxt))"];
"1000440" [label="(Call,ctxt->check_perm(ctxt))"];
"1001176" [label="(Call,writeback_registers(ctxt))"];
"1000215" [label="(Identifier,rc)"];
"1000355" [label="(Call,fetch_possible_mmx_operand(ctxt, &ctxt->dst))"];
"1000989" [label="(Call,rc != X86EMUL_CONTINUE)"];
"1001238" [label="(Call,(ctxt->ops->wbinvd)(ctxt))"];
"1000485" [label="(Call,address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX)))"];
"1001220" [label="(Identifier,rc)"];
"1000310" [label="(Call,ops->get_cr(ctxt, 0))"];
"1000737" [label="(Call,ctxt->execute(ctxt))"];
"1000262" [label="(Call,rc = emulate_ud(ctxt))"];
"1001203" [label="(Identifier,ctxt)"];
"1000297" [label="(Call,emulate_ud(ctxt))"];
"1000264" [label="(Call,emulate_ud(ctxt))"];
"1001230" [label="(Identifier,EMULATION_OK)"];
"1000926" [label="(Call,emulate_int(ctxt, 4))"];
"1001228" [label="(Identifier,X86EMUL_UNHANDLEABLE)"];
"1000290" [label="(Call,ops->get_cr(ctxt, 4))"];
"1000443" [label="(Call,rc != X86EMUL_CONTINUE)"];
"1000329" [label="(Call,flush_pending_x87_faults(ctxt))"];
"1000218" [label="(ControlStructure,goto done;)"];
"1001227" [label="(Identifier,rc)"];
"1000216" -> "1000214"  [label="AST: "];
"1000216" -> "1000217"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000214" -> "1000216"  [label="CFG: "];
"1000216" -> "1001474"  [label="DDG: ctxt"];
"1000216" -> "1000214"  [label="DDG: ctxt"];
"1000145" -> "1000216"  [label="DDG: ctxt"];
"1000216" -> "1001222"  [label="DDG: ctxt"];
"1000145" -> "1000144"  [label="AST: "];
"1000145" -> "1001474"  [label="DDG: ctxt"];
"1000145" -> "1000194"  [label="DDG: ctxt"];
"1000145" -> "1000264"  [label="DDG: ctxt"];
"1000145" -> "1000278"  [label="DDG: ctxt"];
"1000145" -> "1000290"  [label="DDG: ctxt"];
"1000145" -> "1000297"  [label="DDG: ctxt"];
"1000145" -> "1000310"  [label="DDG: ctxt"];
"1000145" -> "1000317"  [label="DDG: ctxt"];
"1000145" -> "1000329"  [label="DDG: ctxt"];
"1000145" -> "1000336"  [label="DDG: ctxt"];
"1000145" -> "1000342"  [label="DDG: ctxt"];
"1000145" -> "1000355"  [label="DDG: ctxt"];
"1000145" -> "1000375"  [label="DDG: ctxt"];
"1000145" -> "1000393"  [label="DDG: ctxt"];
"1000145" -> "1000404"  [label="DDG: ctxt"];
"1000145" -> "1000409"  [label="DDG: ctxt"];
"1000145" -> "1000428"  [label="DDG: ctxt"];
"1000145" -> "1000440"  [label="DDG: ctxt"];
"1000145" -> "1000461"  [label="DDG: ctxt"];
"1000145" -> "1000485"  [label="DDG: ctxt"];
"1000145" -> "1000487"  [label="DDG: ctxt"];
"1000145" -> "1000523"  [label="DDG: ctxt"];
"1000145" -> "1000569"  [label="DDG: ctxt"];
"1000145" -> "1000621"  [label="DDG: ctxt"];
"1000145" -> "1000672"  [label="DDG: ctxt"];
"1000145" -> "1000726"  [label="DDG: ctxt"];
"1000145" -> "1000737"  [label="DDG: ctxt"];
"1000145" -> "1000902"  [label="DDG: ctxt"];
"1000145" -> "1000909"  [label="DDG: ctxt"];
"1000145" -> "1000926"  [label="DDG: ctxt"];
"1000145" -> "1000932"  [label="DDG: ctxt"];
"1000145" -> "1000948"  [label="DDG: ctxt"];
"1000145" -> "1001019"  [label="DDG: ctxt"];
"1000145" -> "1001040"  [label="DDG: ctxt"];
"1000145" -> "1001066"  [label="DDG: ctxt"];
"1000145" -> "1001081"  [label="DDG: ctxt"];
"1000145" -> "1001130"  [label="DDG: ctxt"];
"1000145" -> "1001132"  [label="DDG: ctxt"];
"1000145" -> "1001139"  [label="DDG: ctxt"];
"1000145" -> "1001151"  [label="DDG: ctxt"];
"1000145" -> "1001176"  [label="DDG: ctxt"];
"1000145" -> "1001222"  [label="DDG: ctxt"];
"1000145" -> "1001238"  [label="DDG: ctxt"];
"1000145" -> "1001253"  [label="DDG: ctxt"];
"1000145" -> "1001260"  [label="DDG: ctxt"];
"1000214" -> "1000213"  [label="AST: "];
"1000215" -> "1000214"  [label="AST: "];
"1000218" -> "1000214"  [label="CFG: "];
"1000214" -> "1001474"  [label="DDG: emulate_ud(ctxt)"];
"1000214" -> "1001195"  [label="DDG: rc"];
"1001195" -> "1001194"  [label="AST: "];
"1001195" -> "1001197"  [label="CFG: "];
"1001196" -> "1001195"  [label="AST: "];
"1001197" -> "1001195"  [label="AST: "];
"1001203" -> "1001195"  [label="CFG: "];
"1001214" -> "1001195"  [label="CFG: "];
"1001195" -> "1001474"  [label="DDG: X86EMUL_PROPAGATE_FAULT"];
"1001195" -> "1001474"  [label="DDG: rc == X86EMUL_PROPAGATE_FAULT"];
"1000642" -> "1001195"  [label="DDG: rc"];
"1000332" -> "1001195"  [label="DDG: rc"];
"1000382" -> "1001195"  [label="DDG: rc"];
"1000426" -> "1001195"  [label="DDG: rc"];
"1001026" -> "1001195"  [label="DDG: rc"];
"1000295" -> "1001195"  [label="DDG: rc"];
"1000679" -> "1001195"  [label="DDG: rc"];
"1000315" -> "1001195"  [label="DDG: rc"];
"1001047" -> "1001195"  [label="DDG: rc"];
"1000407" -> "1001195"  [label="DDG: rc"];
"1000402" -> "1001195"  [label="DDG: rc"];
"1000262" -> "1001195"  [label="DDG: rc"];
"1000989" -> "1001195"  [label="DDG: rc"];
"1000730" -> "1001195"  [label="DDG: rc"];
"1000740" -> "1001195"  [label="DDG: rc"];
"1000192" -> "1001195"  [label="DDG: rc"];
"1000443" -> "1001195"  [label="DDG: rc"];
"1001466" -> "1001195"  [label="DDG: rc"];
"1000154" -> "1001195"  [label="DDG: rc"];
"1000590" -> "1001195"  [label="DDG: rc"];
"1000468" -> "1001195"  [label="DDG: rc"];
"1000543" -> "1001195"  [label="DDG: rc"];
"1001195" -> "1001213"  [label="DDG: rc"];
"1001213" -> "1001212"  [label="AST: "];
"1001213" -> "1001215"  [label="CFG: "];
"1001214" -> "1001213"  [label="AST: "];
"1001215" -> "1001213"  [label="AST: "];
"1001217" -> "1001213"  [label="CFG: "];
"1001220" -> "1001213"  [label="CFG: "];
"1001213" -> "1001474"  [label="DDG: X86EMUL_INTERCEPTED"];
"1001213" -> "1001474"  [label="DDG: rc == X86EMUL_INTERCEPTED"];
"1001213" -> "1001474"  [label="DDG: rc"];
"1001213" -> "1001219"  [label="DDG: rc"];
"1001219" -> "1001218"  [label="AST: "];
"1001219" -> "1001221"  [label="CFG: "];
"1001220" -> "1001219"  [label="AST: "];
"1001221" -> "1001219"  [label="AST: "];
"1001223" -> "1001219"  [label="CFG: "];
"1001227" -> "1001219"  [label="CFG: "];
"1001219" -> "1001474"  [label="DDG: X86EMUL_CONTINUE"];
"1001219" -> "1001474"  [label="DDG: rc == X86EMUL_CONTINUE"];
"1000740" -> "1001219"  [label="DDG: X86EMUL_CONTINUE"];
"1001047" -> "1001219"  [label="DDG: X86EMUL_CONTINUE"];
"1000382" -> "1001219"  [label="DDG: X86EMUL_CONTINUE"];
"1000642" -> "1001219"  [label="DDG: X86EMUL_CONTINUE"];
"1001026" -> "1001219"  [label="DDG: X86EMUL_CONTINUE"];
"1000989" -> "1001219"  [label="DDG: X86EMUL_CONTINUE"];
"1000590" -> "1001219"  [label="DDG: X86EMUL_CONTINUE"];
"1000443" -> "1001219"  [label="DDG: X86EMUL_CONTINUE"];
"1001466" -> "1001219"  [label="DDG: X86EMUL_CONTINUE"];
"1000543" -> "1001219"  [label="DDG: X86EMUL_CONTINUE"];
"1000730" -> "1001219"  [label="DDG: X86EMUL_CONTINUE"];
"1000468" -> "1001219"  [label="DDG: X86EMUL_CONTINUE"];
"1000332" -> "1001219"  [label="DDG: X86EMUL_CONTINUE"];
"1000679" -> "1001219"  [label="DDG: X86EMUL_CONTINUE"];
"1001219" -> "1001226"  [label="DDG: rc"];
"1001226" -> "1001225"  [label="AST: "];
"1001226" -> "1001228"  [label="CFG: "];
"1001227" -> "1001226"  [label="AST: "];
"1001228" -> "1001226"  [label="AST: "];
"1001229" -> "1001226"  [label="CFG: "];
"1001230" -> "1001226"  [label="CFG: "];
"1001226" -> "1001474"  [label="DDG: X86EMUL_UNHANDLEABLE"];
"1001226" -> "1001474"  [label="DDG: rc"];
"1001222" -> "1001218"  [label="AST: "];
"1001222" -> "1001223"  [label="CFG: "];
"1001223" -> "1001222"  [label="AST: "];
"1001227" -> "1001222"  [label="CFG: "];
"1001222" -> "1001474"  [label="DDG: ctxt"];
"1001222" -> "1001474"  [label="DDG: writeback_registers(ctxt)"];
"1000393" -> "1001222"  [label="DDG: ctxt"];
"1000404" -> "1001222"  [label="DDG: ctxt"];
"1000523" -> "1001222"  [label="DDG: ctxt"];
"1001238" -> "1001222"  [label="DDG: ctxt"];
"1001253" -> "1001222"  [label="DDG: ctxt"];
"1000409" -> "1001222"  [label="DDG: ctxt"];
"1000948" -> "1001222"  [label="DDG: ctxt"];
"1001260" -> "1001222"  [label="DDG: ctxt"];
"1000355" -> "1001222"  [label="DDG: ctxt"];
"1000297" -> "1001222"  [label="DDG: ctxt"];
"1000485" -> "1001222"  [label="DDG: ctxt"];
"1000290" -> "1001222"  [label="DDG: ctxt"];
"1000375" -> "1001222"  [label="DDG: ctxt"];
"1001040" -> "1001222"  [label="DDG: ctxt"];
"1000621" -> "1001222"  [label="DDG: ctxt"];
"1000342" -> "1001222"  [label="DDG: ctxt"];
"1000317" -> "1001222"  [label="DDG: ctxt"];
"1001139" -> "1001222"  [label="DDG: ctxt"];
"1000726" -> "1001222"  [label="DDG: ctxt"];
"1000310" -> "1001222"  [label="DDG: ctxt"];
"1000926" -> "1001222"  [label="DDG: ctxt"];
"1000194" -> "1001222"  [label="DDG: ctxt"];
"1000264" -> "1001222"  [label="DDG: ctxt"];
"1001151" -> "1001222"  [label="DDG: ctxt"];
"1000831" -> "1001222"  [label="DDG: ctxt"];
"1000737" -> "1001222"  [label="DDG: ctxt"];
"1001019" -> "1001222"  [label="DDG: ctxt"];
"1000329" -> "1001222"  [label="DDG: ctxt"];
"1000909" -> "1001222"  [label="DDG: ctxt"];
"1000932" -> "1001222"  [label="DDG: ctxt"];
"1001066" -> "1001222"  [label="DDG: ctxt"];
"1000569" -> "1001222"  [label="DDG: ctxt"];
"1000461" -> "1001222"  [label="DDG: ctxt"];
"1000440" -> "1001222"  [label="DDG: ctxt"];
"1001322" -> "1001222"  [label="DDG: ctxt"];
"1000902" -> "1001222"  [label="DDG: ctxt"];
"1000672" -> "1001222"  [label="DDG: ctxt"];
"1000844" -> "1001222"  [label="DDG: ctxt"];
"1000278" -> "1001222"  [label="DDG: ctxt"];
"1000428" -> "1001222"  [label="DDG: ctxt"];
"1000796" -> "1001222"  [label="DDG: ctxt"];
"1001081" -> "1001222"  [label="DDG: ctxt"];
}
