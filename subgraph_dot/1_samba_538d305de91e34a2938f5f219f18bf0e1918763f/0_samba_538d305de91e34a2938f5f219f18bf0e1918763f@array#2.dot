digraph "0_samba_538d305de91e34a2938f5f219f18bf0e1918763f@array" {
"1000262" [label="(Call,buf[3] & 0x3)"];
"1000170" [label="(Call,(char *)buf)"];
"1000193" [label="(Call,(char *)buf)"];
"1000261" [label="(Call,(buf[3] & 0x3)<<8)"];
"1000260" [label="(Call,((buf[3] & 0x3)<<8) |\n\t\t\t (buf[0]<<10) | ((buf[1] & 0x3)<<18))"];
"1000256" [label="(Call,buf[2] | ((buf[3] & 0x3)<<8) |\n\t\t\t (buf[0]<<10) | ((buf[1] & 0x3)<<18))"];
"1000252" [label="(Call,(codepoint_t)0x10000 +\n\t\t\t(buf[2] | ((buf[3] & 0x3)<<8) |\n\t\t\t (buf[0]<<10) | ((buf[1] & 0x3)<<18)))"];
"1000251" [label="(Return,return (codepoint_t)0x10000 +\n\t\t\t(buf[2] | ((buf[3] & 0x3)<<8) |\n\t\t\t (buf[0]<<10) | ((buf[1] & 0x3)<<18));)"];
"1000170" [label="(Call,(char *)buf)"];
"1000191" [label="(Call,outbuf = (char *)buf)"];
"1000257" [label="(Call,buf[2])"];
"1000275" [label="(Call,buf[1] & 0x3)"];
"1000262" [label="(Call,buf[3] & 0x3)"];
"1000195" [label="(Identifier,buf)"];
"1000253" [label="(Call,(codepoint_t)0x10000)"];
"1000251" [label="(Return,return (codepoint_t)0x10000 +\n\t\t\t(buf[2] | ((buf[3] & 0x3)<<8) |\n\t\t\t (buf[0]<<10) | ((buf[1] & 0x3)<<18));)"];
"1000193" [label="(Call,(char *)buf)"];
"1000271" [label="(Identifier,buf)"];
"1000269" [label="(Call,buf[0]<<10)"];
"1000250" [label="(Block,)"];
"1000267" [label="(Literal,8)"];
"1000261" [label="(Call,(buf[3] & 0x3)<<8)"];
"1000260" [label="(Call,((buf[3] & 0x3)<<8) |\n\t\t\t (buf[0]<<10) | ((buf[1] & 0x3)<<18))"];
"1000263" [label="(Call,buf[3])"];
"1000256" [label="(Call,buf[2] | ((buf[3] & 0x3)<<8) |\n\t\t\t (buf[0]<<10) | ((buf[1] & 0x3)<<18))"];
"1000252" [label="(Call,(codepoint_t)0x10000 +\n\t\t\t(buf[2] | ((buf[3] & 0x3)<<8) |\n\t\t\t (buf[0]<<10) | ((buf[1] & 0x3)<<18)))"];
"1000283" [label="(MethodReturn,_PUBLIC_ codepoint_t)"];
"1000266" [label="(Literal,0x3)"];
"1000243" [label="(Call,SVAL(buf, 0))"];
"1000268" [label="(Call,(buf[0]<<10) | ((buf[1] & 0x3)<<18))"];
"1000168" [label="(Call,outbuf = (char *)buf)"];
"1000172" [label="(Identifier,buf)"];
"1000262" -> "1000261"  [label="AST: "];
"1000262" -> "1000266"  [label="CFG: "];
"1000263" -> "1000262"  [label="AST: "];
"1000266" -> "1000262"  [label="AST: "];
"1000267" -> "1000262"  [label="CFG: "];
"1000262" -> "1000283"  [label="DDG: buf[3]"];
"1000262" -> "1000261"  [label="DDG: buf[3]"];
"1000262" -> "1000261"  [label="DDG: 0x3"];
"1000170" -> "1000262"  [label="DDG: buf"];
"1000193" -> "1000262"  [label="DDG: buf"];
"1000170" -> "1000168"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000170" -> "1000283"  [label="DDG: buf"];
"1000170" -> "1000168"  [label="DDG: buf"];
"1000170" -> "1000193"  [label="DDG: buf"];
"1000170" -> "1000243"  [label="DDG: buf"];
"1000170" -> "1000256"  [label="DDG: buf"];
"1000170" -> "1000269"  [label="DDG: buf"];
"1000170" -> "1000275"  [label="DDG: buf"];
"1000193" -> "1000191"  [label="AST: "];
"1000193" -> "1000195"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000195" -> "1000193"  [label="AST: "];
"1000191" -> "1000193"  [label="CFG: "];
"1000193" -> "1000283"  [label="DDG: buf"];
"1000193" -> "1000191"  [label="DDG: buf"];
"1000193" -> "1000243"  [label="DDG: buf"];
"1000193" -> "1000256"  [label="DDG: buf"];
"1000193" -> "1000269"  [label="DDG: buf"];
"1000193" -> "1000275"  [label="DDG: buf"];
"1000261" -> "1000260"  [label="AST: "];
"1000261" -> "1000267"  [label="CFG: "];
"1000267" -> "1000261"  [label="AST: "];
"1000271" -> "1000261"  [label="CFG: "];
"1000261" -> "1000283"  [label="DDG: buf[3] & 0x3"];
"1000261" -> "1000260"  [label="DDG: buf[3] & 0x3"];
"1000261" -> "1000260"  [label="DDG: 8"];
"1000260" -> "1000256"  [label="AST: "];
"1000260" -> "1000268"  [label="CFG: "];
"1000268" -> "1000260"  [label="AST: "];
"1000256" -> "1000260"  [label="CFG: "];
"1000260" -> "1000283"  [label="DDG: (buf[0]<<10) | ((buf[1] & 0x3)<<18)"];
"1000260" -> "1000283"  [label="DDG: (buf[3] & 0x3)<<8"];
"1000260" -> "1000256"  [label="DDG: (buf[3] & 0x3)<<8"];
"1000260" -> "1000256"  [label="DDG: (buf[0]<<10) | ((buf[1] & 0x3)<<18)"];
"1000268" -> "1000260"  [label="DDG: buf[0]<<10"];
"1000268" -> "1000260"  [label="DDG: (buf[1] & 0x3)<<18"];
"1000256" -> "1000252"  [label="AST: "];
"1000257" -> "1000256"  [label="AST: "];
"1000252" -> "1000256"  [label="CFG: "];
"1000256" -> "1000283"  [label="DDG: ((buf[3] & 0x3)<<8) |\n\t\t\t (buf[0]<<10) | ((buf[1] & 0x3)<<18)"];
"1000256" -> "1000283"  [label="DDG: buf[2]"];
"1000256" -> "1000252"  [label="DDG: buf[2]"];
"1000256" -> "1000252"  [label="DDG: ((buf[3] & 0x3)<<8) |\n\t\t\t (buf[0]<<10) | ((buf[1] & 0x3)<<18)"];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000252"  [label="AST: "];
"1000251" -> "1000252"  [label="CFG: "];
"1000252" -> "1000283"  [label="DDG: (codepoint_t)0x10000"];
"1000252" -> "1000283"  [label="DDG: (codepoint_t)0x10000 +\n\t\t\t(buf[2] | ((buf[3] & 0x3)<<8) |\n\t\t\t (buf[0]<<10) | ((buf[1] & 0x3)<<18))"];
"1000252" -> "1000283"  [label="DDG: buf[2] | ((buf[3] & 0x3)<<8) |\n\t\t\t (buf[0]<<10) | ((buf[1] & 0x3)<<18)"];
"1000252" -> "1000251"  [label="DDG: (codepoint_t)0x10000 +\n\t\t\t(buf[2] | ((buf[3] & 0x3)<<8) |\n\t\t\t (buf[0]<<10) | ((buf[1] & 0x3)<<18))"];
"1000253" -> "1000252"  [label="DDG: 0x10000"];
"1000251" -> "1000250"  [label="AST: "];
"1000283" -> "1000251"  [label="CFG: "];
"1000251" -> "1000283"  [label="DDG: <RET>"];
}
