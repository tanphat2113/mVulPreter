digraph "0_linux_bceaa90240b6019ed73b49965eac7d167610be69_4@integer" {
"1000185" [label="(Call,ulen = skb->len - sizeof(struct udphdr))"];
"1000187" [label="(Call,skb->len - sizeof(struct udphdr))"];
"1000197" [label="(Call,copied > ulen)"];
"1000200" [label="(Call,copied = ulen)"];
"1000223" [label="(Call,copied < ulen)"];
"1000222" [label="(Call,copied < ulen || UDP_SKB_CB(skb)->partial_cov)"];
"1000240" [label="(Call,skb_copy_datagram_iovec(skb, sizeof(struct udphdr),\n\t\t\t\t\t      msg->msg_iov, copied))"];
"1000238" [label="(Call,err = skb_copy_datagram_iovec(skb, sizeof(struct udphdr),\n\t\t\t\t\t      msg->msg_iov, copied))"];
"1000266" [label="(Call,unlikely(err))"];
"1000430" [label="(Return,return err;)"];
"1000269" [label="(Call,trace_kfree_skb(skb, udpv6_recvmsg))"];
"1000426" [label="(Call,skb_free_datagram_locked(sk, skb))"];
"1000312" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000339" [label="(Call,udp_hdr(skb))"];
"1000352" [label="(Call,ip_hdr(skb))"];
"1000400" [label="(Call,ip_cmsg_recv(msg, skb))"];
"1000411" [label="(Call,ip6_datagram_recv_ctl(sk, msg, skb))"];
"1000371" [label="(Call,ipv6_hdr(skb))"];
"1000384" [label="(Call,IP6CB(skb))"];
"1000415" [label="(Call,err = copied)"];
"1000422" [label="(Call,err = ulen)"];
"1000205" [label="(Call,copied < ulen)"];
"1000422" [label="(Call,err = ulen)"];
"1000200" [label="(Call,copied = ulen)"];
"1000242" [label="(Call,sizeof(struct udphdr))"];
"1000226" [label="(Call,UDP_SKB_CB(skb)->partial_cov)"];
"1000339" [label="(Call,udp_hdr(skb))"];
"1000241" [label="(Identifier,skb)"];
"1000191" [label="(Call,sizeof(struct udphdr))"];
"1000426" [label="(Call,skb_free_datagram_locked(sk, skb))"];
"1000383" [label="(Call,IP6CB(skb)->iif)"];
"1000402" [label="(Identifier,skb)"];
"1000290" [label="(Call,sock_net(sk))"];
"1000265" [label="(ControlStructure,if (unlikely(err)))"];
"1000224" [label="(Identifier,copied)"];
"1000270" [label="(Identifier,skb)"];
"1000269" [label="(Call,trace_kfree_skb(skb, udpv6_recvmsg))"];
"1000318" [label="(Identifier,msg)"];
"1000341" [label="(FieldIdentifier,source)"];
"1000247" [label="(Identifier,copied)"];
"1000284" [label="(Call,sock_net(sk))"];
"1000352" [label="(Call,ip_hdr(skb))"];
"1000415" [label="(Call,err = copied)"];
"1000384" [label="(Call,IP6CB(skb))"];
"1000302" [label="(Call,sock_net(sk))"];
"1000274" [label="(Identifier,peeked)"];
"1000385" [label="(Identifier,skb)"];
"1000222" [label="(Call,copied < ulen || UDP_SKB_CB(skb)->partial_cov)"];
"1000405" [label="(ControlStructure,if (np->rxopt.all))"];
"1000185" [label="(Call,ulen = skb->len - sizeof(struct udphdr))"];
"1000414" [label="(Identifier,skb)"];
"1000201" [label="(Identifier,copied)"];
"1000187" [label="(Call,skb->len - sizeof(struct udphdr))"];
"1000233" [label="(Identifier,skb)"];
"1000244" [label="(Call,msg->msg_iov)"];
"1000373" [label="(FieldIdentifier,saddr)"];
"1000106" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000308" [label="(Call,sock_net(sk))"];
"1000202" [label="(Identifier,ulen)"];
"1000400" [label="(Call,ip_cmsg_recv(msg, skb))"];
"1000418" [label="(ControlStructure,if (flags & MSG_TRUNC))"];
"1000210" [label="(Identifier,msg)"];
"1000225" [label="(Identifier,ulen)"];
"1000425" [label="(JumpTarget,out_free:)"];
"1000206" [label="(Identifier,copied)"];
"1000372" [label="(Identifier,skb)"];
"1000223" [label="(Call,copied < ulen)"];
"1000338" [label="(Call,udp_hdr(skb)->source)"];
"1000266" [label="(Call,unlikely(err))"];
"1000105" [label="(MethodParameterIn,struct sock *sk)"];
"1000420" [label="(Identifier,flags)"];
"1000483" [label="(MethodReturn,int)"];
"1000411" [label="(Call,ip6_datagram_recv_ctl(sk, msg, skb))"];
"1000417" [label="(Identifier,copied)"];
"1000340" [label="(Identifier,skb)"];
"1000427" [label="(Identifier,sk)"];
"1000354" [label="(FieldIdentifier,saddr)"];
"1000198" [label="(Identifier,copied)"];
"1000167" [label="(Call,__skb_recv_datagram(sk, flags | (noblock ? MSG_DONTWAIT : 0),\n\t\t\t\t  &peeked, &off, &err))"];
"1000214" [label="(Identifier,is_udp4)"];
"1000239" [label="(Identifier,err)"];
"1000186" [label="(Identifier,ulen)"];
"1000111" [label="(Block,)"];
"1000401" [label="(Identifier,msg)"];
"1000236" [label="(Call,skb_csum_unnecessary(skb))"];
"1000207" [label="(Identifier,ulen)"];
"1000260" [label="(Call,err == -EINVAL)"];
"1000197" [label="(Call,copied > ulen)"];
"1000199" [label="(Identifier,ulen)"];
"1000429" [label="(JumpTarget,out:)"];
"1000297" [label="(Identifier,peeked)"];
"1000351" [label="(Call,ip_hdr(skb)->saddr)"];
"1000267" [label="(Identifier,err)"];
"1000370" [label="(Call,ipv6_hdr(skb)->saddr)"];
"1000431" [label="(Identifier,err)"];
"1000252" [label="(Call,skb_copy_and_csum_datagram_iovec(skb, sizeof(struct udphdr), msg->msg_iov))"];
"1000396" [label="(ControlStructure,if (inet->cmsg_flags))"];
"1000204" [label="(ControlStructure,if (copied < ulen))"];
"1000371" [label="(Call,ipv6_hdr(skb))"];
"1000228" [label="(Identifier,skb)"];
"1000312" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000205" [label="(Call,copied < ulen)"];
"1000194" [label="(Identifier,copied)"];
"1000271" [label="(Identifier,udpv6_recvmsg)"];
"1000386" [label="(FieldIdentifier,iif)"];
"1000235" [label="(ControlStructure,if (skb_csum_unnecessary(skb)))"];
"1000412" [label="(Identifier,sk)"];
"1000240" [label="(Call,skb_copy_datagram_iovec(skb, sizeof(struct udphdr),\n\t\t\t\t\t      msg->msg_iov, copied))"];
"1000221" [label="(ControlStructure,if (copied < ulen || UDP_SKB_CB(skb)->partial_cov))"];
"1000313" [label="(Identifier,msg)"];
"1000196" [label="(ControlStructure,if (copied > ulen))"];
"1000237" [label="(Identifier,skb)"];
"1000423" [label="(Identifier,err)"];
"1000353" [label="(Identifier,skb)"];
"1000188" [label="(Call,skb->len)"];
"1000315" [label="(Identifier,skb)"];
"1000238" [label="(Call,err = skb_copy_datagram_iovec(skb, sizeof(struct udphdr),\n\t\t\t\t\t      msg->msg_iov, copied))"];
"1000416" [label="(Identifier,err)"];
"1000193" [label="(Call,copied = len)"];
"1000424" [label="(Identifier,ulen)"];
"1000268" [label="(Block,)"];
"1000428" [label="(Identifier,skb)"];
"1000314" [label="(Identifier,sk)"];
"1000413" [label="(Identifier,msg)"];
"1000430" [label="(Return,return err;)"];
"1000185" -> "1000111"  [label="AST: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="AST: "];
"1000194" -> "1000185"  [label="CFG: "];
"1000185" -> "1000483"  [label="DDG: skb->len - sizeof(struct udphdr)"];
"1000187" -> "1000185"  [label="DDG: skb->len"];
"1000185" -> "1000197"  [label="DDG: ulen"];
"1000187" -> "1000191"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000191" -> "1000187"  [label="AST: "];
"1000187" -> "1000483"  [label="DDG: skb->len"];
"1000197" -> "1000196"  [label="AST: "];
"1000197" -> "1000199"  [label="CFG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000199" -> "1000197"  [label="AST: "];
"1000201" -> "1000197"  [label="CFG: "];
"1000206" -> "1000197"  [label="CFG: "];
"1000197" -> "1000483"  [label="DDG: copied > ulen"];
"1000193" -> "1000197"  [label="DDG: copied"];
"1000197" -> "1000200"  [label="DDG: ulen"];
"1000197" -> "1000205"  [label="DDG: copied"];
"1000197" -> "1000205"  [label="DDG: ulen"];
"1000197" -> "1000223"  [label="DDG: ulen"];
"1000200" -> "1000196"  [label="AST: "];
"1000200" -> "1000202"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000202" -> "1000200"  [label="AST: "];
"1000214" -> "1000200"  [label="CFG: "];
"1000200" -> "1000223"  [label="DDG: copied"];
"1000223" -> "1000222"  [label="AST: "];
"1000223" -> "1000225"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000225" -> "1000223"  [label="AST: "];
"1000228" -> "1000223"  [label="CFG: "];
"1000222" -> "1000223"  [label="CFG: "];
"1000223" -> "1000483"  [label="DDG: ulen"];
"1000223" -> "1000483"  [label="DDG: copied"];
"1000223" -> "1000222"  [label="DDG: copied"];
"1000223" -> "1000222"  [label="DDG: ulen"];
"1000205" -> "1000223"  [label="DDG: copied"];
"1000205" -> "1000223"  [label="DDG: ulen"];
"1000223" -> "1000240"  [label="DDG: copied"];
"1000223" -> "1000415"  [label="DDG: copied"];
"1000223" -> "1000422"  [label="DDG: ulen"];
"1000222" -> "1000221"  [label="AST: "];
"1000222" -> "1000226"  [label="CFG: "];
"1000226" -> "1000222"  [label="AST: "];
"1000233" -> "1000222"  [label="CFG: "];
"1000237" -> "1000222"  [label="CFG: "];
"1000222" -> "1000483"  [label="DDG: copied < ulen"];
"1000222" -> "1000483"  [label="DDG: UDP_SKB_CB(skb)->partial_cov"];
"1000222" -> "1000483"  [label="DDG: copied < ulen || UDP_SKB_CB(skb)->partial_cov"];
"1000240" -> "1000238"  [label="AST: "];
"1000240" -> "1000247"  [label="CFG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000242" -> "1000240"  [label="AST: "];
"1000244" -> "1000240"  [label="AST: "];
"1000247" -> "1000240"  [label="AST: "];
"1000238" -> "1000240"  [label="CFG: "];
"1000240" -> "1000483"  [label="DDG: msg->msg_iov"];
"1000240" -> "1000483"  [label="DDG: copied"];
"1000240" -> "1000238"  [label="DDG: skb"];
"1000240" -> "1000238"  [label="DDG: msg->msg_iov"];
"1000240" -> "1000238"  [label="DDG: copied"];
"1000236" -> "1000240"  [label="DDG: skb"];
"1000252" -> "1000240"  [label="DDG: msg->msg_iov"];
"1000240" -> "1000269"  [label="DDG: skb"];
"1000240" -> "1000312"  [label="DDG: skb"];
"1000240" -> "1000415"  [label="DDG: copied"];
"1000238" -> "1000235"  [label="AST: "];
"1000239" -> "1000238"  [label="AST: "];
"1000267" -> "1000238"  [label="CFG: "];
"1000238" -> "1000483"  [label="DDG: skb_copy_datagram_iovec(skb, sizeof(struct udphdr),\n\t\t\t\t\t      msg->msg_iov, copied)"];
"1000238" -> "1000266"  [label="DDG: err"];
"1000266" -> "1000265"  [label="AST: "];
"1000266" -> "1000267"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000270" -> "1000266"  [label="CFG: "];
"1000297" -> "1000266"  [label="CFG: "];
"1000266" -> "1000483"  [label="DDG: err"];
"1000266" -> "1000483"  [label="DDG: unlikely(err)"];
"1000260" -> "1000266"  [label="DDG: err"];
"1000266" -> "1000430"  [label="DDG: err"];
"1000430" -> "1000111"  [label="AST: "];
"1000430" -> "1000431"  [label="CFG: "];
"1000431" -> "1000430"  [label="AST: "];
"1000483" -> "1000430"  [label="CFG: "];
"1000430" -> "1000483"  [label="DDG: <RET>"];
"1000431" -> "1000430"  [label="DDG: err"];
"1000422" -> "1000430"  [label="DDG: err"];
"1000415" -> "1000430"  [label="DDG: err"];
"1000260" -> "1000430"  [label="DDG: err"];
"1000269" -> "1000268"  [label="AST: "];
"1000269" -> "1000271"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000271" -> "1000269"  [label="AST: "];
"1000274" -> "1000269"  [label="CFG: "];
"1000269" -> "1000483"  [label="DDG: trace_kfree_skb(skb, udpv6_recvmsg)"];
"1000269" -> "1000483"  [label="DDG: udpv6_recvmsg"];
"1000252" -> "1000269"  [label="DDG: skb"];
"1000269" -> "1000426"  [label="DDG: skb"];
"1000426" -> "1000111"  [label="AST: "];
"1000426" -> "1000428"  [label="CFG: "];
"1000427" -> "1000426"  [label="AST: "];
"1000428" -> "1000426"  [label="AST: "];
"1000429" -> "1000426"  [label="CFG: "];
"1000426" -> "1000483"  [label="DDG: skb"];
"1000426" -> "1000483"  [label="DDG: sk"];
"1000426" -> "1000483"  [label="DDG: skb_free_datagram_locked(sk, skb)"];
"1000284" -> "1000426"  [label="DDG: sk"];
"1000411" -> "1000426"  [label="DDG: sk"];
"1000411" -> "1000426"  [label="DDG: skb"];
"1000312" -> "1000426"  [label="DDG: sk"];
"1000312" -> "1000426"  [label="DDG: skb"];
"1000167" -> "1000426"  [label="DDG: sk"];
"1000290" -> "1000426"  [label="DDG: sk"];
"1000105" -> "1000426"  [label="DDG: sk"];
"1000400" -> "1000426"  [label="DDG: skb"];
"1000352" -> "1000426"  [label="DDG: skb"];
"1000384" -> "1000426"  [label="DDG: skb"];
"1000312" -> "1000111"  [label="AST: "];
"1000312" -> "1000315"  [label="CFG: "];
"1000313" -> "1000312"  [label="AST: "];
"1000314" -> "1000312"  [label="AST: "];
"1000315" -> "1000312"  [label="AST: "];
"1000318" -> "1000312"  [label="CFG: "];
"1000312" -> "1000483"  [label="DDG: sock_recv_ts_and_drops(msg, sk, skb)"];
"1000312" -> "1000483"  [label="DDG: msg"];
"1000106" -> "1000312"  [label="DDG: msg"];
"1000302" -> "1000312"  [label="DDG: sk"];
"1000167" -> "1000312"  [label="DDG: sk"];
"1000308" -> "1000312"  [label="DDG: sk"];
"1000105" -> "1000312"  [label="DDG: sk"];
"1000252" -> "1000312"  [label="DDG: skb"];
"1000312" -> "1000339"  [label="DDG: skb"];
"1000312" -> "1000400"  [label="DDG: msg"];
"1000312" -> "1000400"  [label="DDG: skb"];
"1000312" -> "1000411"  [label="DDG: sk"];
"1000312" -> "1000411"  [label="DDG: msg"];
"1000312" -> "1000411"  [label="DDG: skb"];
"1000339" -> "1000338"  [label="AST: "];
"1000339" -> "1000340"  [label="CFG: "];
"1000340" -> "1000339"  [label="AST: "];
"1000341" -> "1000339"  [label="CFG: "];
"1000339" -> "1000352"  [label="DDG: skb"];
"1000339" -> "1000371"  [label="DDG: skb"];
"1000352" -> "1000351"  [label="AST: "];
"1000352" -> "1000353"  [label="CFG: "];
"1000353" -> "1000352"  [label="AST: "];
"1000354" -> "1000352"  [label="CFG: "];
"1000352" -> "1000400"  [label="DDG: skb"];
"1000352" -> "1000411"  [label="DDG: skb"];
"1000400" -> "1000396"  [label="AST: "];
"1000400" -> "1000402"  [label="CFG: "];
"1000401" -> "1000400"  [label="AST: "];
"1000402" -> "1000400"  [label="AST: "];
"1000416" -> "1000400"  [label="CFG: "];
"1000400" -> "1000483"  [label="DDG: msg"];
"1000400" -> "1000483"  [label="DDG: ip_cmsg_recv(msg, skb)"];
"1000106" -> "1000400"  [label="DDG: msg"];
"1000384" -> "1000400"  [label="DDG: skb"];
"1000411" -> "1000405"  [label="AST: "];
"1000411" -> "1000414"  [label="CFG: "];
"1000412" -> "1000411"  [label="AST: "];
"1000413" -> "1000411"  [label="AST: "];
"1000414" -> "1000411"  [label="AST: "];
"1000416" -> "1000411"  [label="CFG: "];
"1000411" -> "1000483"  [label="DDG: ip6_datagram_recv_ctl(sk, msg, skb)"];
"1000411" -> "1000483"  [label="DDG: msg"];
"1000105" -> "1000411"  [label="DDG: sk"];
"1000106" -> "1000411"  [label="DDG: msg"];
"1000384" -> "1000411"  [label="DDG: skb"];
"1000371" -> "1000370"  [label="AST: "];
"1000371" -> "1000372"  [label="CFG: "];
"1000372" -> "1000371"  [label="AST: "];
"1000373" -> "1000371"  [label="CFG: "];
"1000371" -> "1000384"  [label="DDG: skb"];
"1000384" -> "1000383"  [label="AST: "];
"1000384" -> "1000385"  [label="CFG: "];
"1000385" -> "1000384"  [label="AST: "];
"1000386" -> "1000384"  [label="CFG: "];
"1000415" -> "1000111"  [label="AST: "];
"1000415" -> "1000417"  [label="CFG: "];
"1000416" -> "1000415"  [label="AST: "];
"1000417" -> "1000415"  [label="AST: "];
"1000420" -> "1000415"  [label="CFG: "];
"1000415" -> "1000483"  [label="DDG: err"];
"1000415" -> "1000483"  [label="DDG: copied"];
"1000422" -> "1000418"  [label="AST: "];
"1000422" -> "1000424"  [label="CFG: "];
"1000423" -> "1000422"  [label="AST: "];
"1000424" -> "1000422"  [label="AST: "];
"1000425" -> "1000422"  [label="CFG: "];
"1000422" -> "1000483"  [label="DDG: err"];
"1000422" -> "1000483"  [label="DDG: ulen"];
"1000205" -> "1000204"  [label="AST: "];
"1000205" -> "1000207"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000207" -> "1000205"  [label="AST: "];
"1000210" -> "1000205"  [label="CFG: "];
"1000214" -> "1000205"  [label="CFG: "];
}
