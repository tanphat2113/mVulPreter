digraph "0_linux_234f3ce485d54017f15cf5e0699cff4100121601_3@pointer" {
"1000130" [label="(Call,ctxt->b ^ 0x5)"];
"1000124" [label="(Call,ctxt->b == 0xe2)"];
"1000129" [label="(Call,test_cc(ctxt->b ^ 0x5, ctxt->eflags))"];
"1000123" [label="(Call,ctxt->b == 0xe2 || test_cc(ctxt->b ^ 0x5, ctxt->eflags))"];
"1000115" [label="(Call,(address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX)) != 0) &&\n \t    (ctxt->b == 0xe2 || test_cc(ctxt->b ^ 0x5, ctxt->eflags)))"];
"1000134" [label="(Literal,0x5)"];
"1000130" [label="(Call,ctxt->b ^ 0x5)"];
"1000131" [label="(Call,ctxt->b)"];
"1000135" [label="(Call,ctxt->eflags)"];
"1000114" [label="(ControlStructure,if ((address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX)) != 0) &&\n \t    (ctxt->b == 0xe2 || test_cc(ctxt->b ^ 0x5, ctxt->eflags))))"];
"1000149" [label="(MethodReturn,static int)"];
"1000148" [label="(Identifier,rc)"];
"1000129" [label="(Call,test_cc(ctxt->b ^ 0x5, ctxt->eflags))"];
"1000136" [label="(Identifier,ctxt)"];
"1000128" [label="(Literal,0xe2)"];
"1000125" [label="(Call,ctxt->b)"];
"1000116" [label="(Call,address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX)) != 0)"];
"1000139" [label="(Identifier,rc)"];
"1000115" [label="(Call,(address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX)) != 0) &&\n \t    (ctxt->b == 0xe2 || test_cc(ctxt->b ^ 0x5, ctxt->eflags)))"];
"1000123" [label="(Call,ctxt->b == 0xe2 || test_cc(ctxt->b ^ 0x5, ctxt->eflags))"];
"1000124" [label="(Call,ctxt->b == 0xe2)"];
"1000132" [label="(Identifier,ctxt)"];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000134"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000134" -> "1000130"  [label="AST: "];
"1000136" -> "1000130"  [label="CFG: "];
"1000130" -> "1000149"  [label="DDG: ctxt->b"];
"1000130" -> "1000129"  [label="DDG: ctxt->b"];
"1000130" -> "1000129"  [label="DDG: 0x5"];
"1000124" -> "1000130"  [label="DDG: ctxt->b"];
"1000124" -> "1000123"  [label="AST: "];
"1000124" -> "1000128"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000128" -> "1000124"  [label="AST: "];
"1000132" -> "1000124"  [label="CFG: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000149"  [label="DDG: ctxt->b"];
"1000124" -> "1000123"  [label="DDG: ctxt->b"];
"1000124" -> "1000123"  [label="DDG: 0xe2"];
"1000129" -> "1000123"  [label="AST: "];
"1000129" -> "1000135"  [label="CFG: "];
"1000135" -> "1000129"  [label="AST: "];
"1000123" -> "1000129"  [label="CFG: "];
"1000129" -> "1000149"  [label="DDG: ctxt->b ^ 0x5"];
"1000129" -> "1000149"  [label="DDG: ctxt->eflags"];
"1000129" -> "1000123"  [label="DDG: ctxt->b ^ 0x5"];
"1000129" -> "1000123"  [label="DDG: ctxt->eflags"];
"1000123" -> "1000115"  [label="AST: "];
"1000115" -> "1000123"  [label="CFG: "];
"1000123" -> "1000149"  [label="DDG: test_cc(ctxt->b ^ 0x5, ctxt->eflags)"];
"1000123" -> "1000149"  [label="DDG: ctxt->b == 0xe2"];
"1000123" -> "1000115"  [label="DDG: ctxt->b == 0xe2"];
"1000123" -> "1000115"  [label="DDG: test_cc(ctxt->b ^ 0x5, ctxt->eflags)"];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000139" -> "1000115"  [label="CFG: "];
"1000148" -> "1000115"  [label="CFG: "];
"1000115" -> "1000149"  [label="DDG: address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX)) != 0"];
"1000115" -> "1000149"  [label="DDG: ctxt->b == 0xe2 || test_cc(ctxt->b ^ 0x5, ctxt->eflags)"];
"1000115" -> "1000149"  [label="DDG: (address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX)) != 0) &&\n \t    (ctxt->b == 0xe2 || test_cc(ctxt->b ^ 0x5, ctxt->eflags))"];
"1000116" -> "1000115"  [label="DDG: address_mask(ctxt, reg_read(ctxt, VCPU_REGS_RCX))"];
"1000116" -> "1000115"  [label="DDG: 0"];
}
