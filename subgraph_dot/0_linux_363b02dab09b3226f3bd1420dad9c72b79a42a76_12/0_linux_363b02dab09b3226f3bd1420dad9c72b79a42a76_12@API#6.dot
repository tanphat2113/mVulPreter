digraph "0_linux_363b02dab09b3226f3bd1420dad9c72b79a42a76_12@API" {
"1000187" [label="(Call,memcpy(xbuf, \"expd\", 5))"];
"1000279" [label="(Call,seq_printf(m, \"%08x %c%c%c%c%c%c%c %5d %4s %08x %5d %5d %-9.9s \",\n \t\t   key->serial,\n\t\t   state != KEY_IS_UNINSTANTIATED ? 'I' : '-',\n \t\t   showflag(key, 'R', KEY_FLAG_REVOKED),\n \t\t   showflag(key, 'D', KEY_FLAG_DEAD),\n \t\t   showflag(key, 'Q', KEY_FLAG_IN_QUOTA),\n \t\t   showflag(key, 'U', KEY_FLAG_USER_CONSTRUCT),\n\t\t   state < 0 ? 'N' : '-',\n \t\t   showflag(key, 'i', KEY_FLAG_INVALIDATED),\n \t\t   refcount_read(&key->usage),\n \t\t   xbuf,\n\t\t   key->perm,\n\t\t   from_kuid_munged(seq_user_ns(m), key->uid),\n\t\t   from_kgid_munged(seq_user_ns(m), key->gid),\n\t\t   key->type->name))"];
"1000349" [label="(Call,key->type->describe(key, m))"];
"1000352" [label="(Call,seq_putc(m, '\n'))"];
"1000299" [label="(Call,showflag(key, 'Q', KEY_FLAG_IN_QUOTA))"];
"1000251" [label="(Call,sprintf(xbuf, \"%lud\", timo / (60*60*24)))"];
"1000358" [label="(MethodReturn,static int)"];
"1000303" [label="(Call,showflag(key, 'U', KEY_FLAG_USER_CONSTRUCT))"];
"1000333" [label="(Call,seq_user_ns(m))"];
"1000186" [label="(Block,)"];
"1000262" [label="(Call,sprintf(xbuf, \"%luw\", timo / (60*60*24*7)))"];
"1000350" [label="(Identifier,key)"];
"1000349" [label="(Call,key->type->describe(key, m))"];
"1000307" [label="(Call,state < 0 ? 'N' : '-')"];
"1000217" [label="(Call,sprintf(xbuf, \"%lum\", timo / 60))"];
"1000352" [label="(Call,seq_putc(m, '\n'))"];
"1000295" [label="(Call,showflag(key, 'D', KEY_FLAG_DEAD))"];
"1000326" [label="(Call,from_kuid_munged(seq_user_ns(m), key->uid))"];
"1000206" [label="(Call,sprintf(xbuf, \"%lus\", timo))"];
"1000338" [label="(Call,key->type->name)"];
"1000104" [label="(MethodParameterIn,struct seq_file *m)"];
"1000322" [label="(Identifier,xbuf)"];
"1000190" [label="(Literal,5)"];
"1000188" [label="(Identifier,xbuf)"];
"1000281" [label="(Literal,\"%08x %c%c%c%c%c%c%c %5d %4s %08x %5d %5d %-9.9s \")"];
"1000173" [label="(Call,memcpy(xbuf, \"perm\", 5))"];
"1000280" [label="(Identifier,m)"];
"1000189" [label="(Literal,\"expd\")"];
"1000279" [label="(Call,seq_printf(m, \"%08x %c%c%c%c%c%c%c %5d %4s %08x %5d %5d %-9.9s \",\n \t\t   key->serial,\n\t\t   state != KEY_IS_UNINSTANTIATED ? 'I' : '-',\n \t\t   showflag(key, 'R', KEY_FLAG_REVOKED),\n \t\t   showflag(key, 'D', KEY_FLAG_DEAD),\n \t\t   showflag(key, 'Q', KEY_FLAG_IN_QUOTA),\n \t\t   showflag(key, 'U', KEY_FLAG_USER_CONSTRUCT),\n\t\t   state < 0 ? 'N' : '-',\n \t\t   showflag(key, 'i', KEY_FLAG_INVALIDATED),\n \t\t   refcount_read(&key->usage),\n \t\t   xbuf,\n\t\t   key->perm,\n\t\t   from_kuid_munged(seq_user_ns(m), key->uid),\n\t\t   from_kgid_munged(seq_user_ns(m), key->gid),\n\t\t   key->type->name))"];
"1000125" [label="(Call,key->perm & KEY_POS_VIEW)"];
"1000343" [label="(ControlStructure,if (key->type->describe))"];
"1000355" [label="(Call,rcu_read_unlock())"];
"1000346" [label="(Identifier,key)"];
"1000323" [label="(Call,key->perm)"];
"1000317" [label="(Call,refcount_read(&key->usage))"];
"1000275" [label="(Identifier,state)"];
"1000232" [label="(Call,sprintf(xbuf, \"%luh\", timo / (60*60)))"];
"1000285" [label="(Call,state != KEY_IS_UNINSTANTIATED ? 'I' : '-')"];
"1000313" [label="(Call,showflag(key, 'i', KEY_FLAG_INVALIDATED))"];
"1000291" [label="(Call,showflag(key, 'R', KEY_FLAG_REVOKED))"];
"1000354" [label="(Literal,'\n')"];
"1000282" [label="(Call,key->serial)"];
"1000332" [label="(Call,from_kgid_munged(seq_user_ns(m), key->gid))"];
"1000353" [label="(Identifier,m)"];
"1000351" [label="(Identifier,m)"];
"1000106" [label="(Block,)"];
"1000187" [label="(Call,memcpy(xbuf, \"expd\", 5))"];
"1000187" -> "1000186"  [label="AST: "];
"1000187" -> "1000190"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000189" -> "1000187"  [label="AST: "];
"1000190" -> "1000187"  [label="AST: "];
"1000275" -> "1000187"  [label="CFG: "];
"1000187" -> "1000358"  [label="DDG: "];
"1000187" -> "1000279"  [label="DDG: "];
"1000279" -> "1000106"  [label="AST: "];
"1000279" -> "1000338"  [label="CFG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000281" -> "1000279"  [label="AST: "];
"1000282" -> "1000279"  [label="AST: "];
"1000285" -> "1000279"  [label="AST: "];
"1000291" -> "1000279"  [label="AST: "];
"1000295" -> "1000279"  [label="AST: "];
"1000299" -> "1000279"  [label="AST: "];
"1000303" -> "1000279"  [label="AST: "];
"1000307" -> "1000279"  [label="AST: "];
"1000313" -> "1000279"  [label="AST: "];
"1000317" -> "1000279"  [label="AST: "];
"1000322" -> "1000279"  [label="AST: "];
"1000323" -> "1000279"  [label="AST: "];
"1000326" -> "1000279"  [label="AST: "];
"1000332" -> "1000279"  [label="AST: "];
"1000338" -> "1000279"  [label="AST: "];
"1000346" -> "1000279"  [label="CFG: "];
"1000279" -> "1000358"  [label="DDG: "];
"1000279" -> "1000358"  [label="DDG: "];
"1000279" -> "1000358"  [label="DDG: "];
"1000279" -> "1000358"  [label="DDG: "];
"1000279" -> "1000358"  [label="DDG: "];
"1000279" -> "1000358"  [label="DDG: "];
"1000279" -> "1000358"  [label="DDG: "];
"1000279" -> "1000358"  [label="DDG: "];
"1000279" -> "1000358"  [label="DDG: "];
"1000279" -> "1000358"  [label="DDG: "];
"1000279" -> "1000358"  [label="DDG: "];
"1000279" -> "1000358"  [label="DDG: "];
"1000279" -> "1000358"  [label="DDG: "];
"1000279" -> "1000358"  [label="DDG: "];
"1000279" -> "1000358"  [label="DDG: "];
"1000333" -> "1000279"  [label="DDG: "];
"1000104" -> "1000279"  [label="DDG: "];
"1000291" -> "1000279"  [label="DDG: "];
"1000291" -> "1000279"  [label="DDG: "];
"1000291" -> "1000279"  [label="DDG: "];
"1000295" -> "1000279"  [label="DDG: "];
"1000295" -> "1000279"  [label="DDG: "];
"1000295" -> "1000279"  [label="DDG: "];
"1000299" -> "1000279"  [label="DDG: "];
"1000299" -> "1000279"  [label="DDG: "];
"1000299" -> "1000279"  [label="DDG: "];
"1000303" -> "1000279"  [label="DDG: "];
"1000303" -> "1000279"  [label="DDG: "];
"1000303" -> "1000279"  [label="DDG: "];
"1000313" -> "1000279"  [label="DDG: "];
"1000313" -> "1000279"  [label="DDG: "];
"1000313" -> "1000279"  [label="DDG: "];
"1000317" -> "1000279"  [label="DDG: "];
"1000232" -> "1000279"  [label="DDG: "];
"1000251" -> "1000279"  [label="DDG: "];
"1000206" -> "1000279"  [label="DDG: "];
"1000173" -> "1000279"  [label="DDG: "];
"1000217" -> "1000279"  [label="DDG: "];
"1000262" -> "1000279"  [label="DDG: "];
"1000125" -> "1000279"  [label="DDG: "];
"1000326" -> "1000279"  [label="DDG: "];
"1000326" -> "1000279"  [label="DDG: "];
"1000332" -> "1000279"  [label="DDG: "];
"1000332" -> "1000279"  [label="DDG: "];
"1000279" -> "1000349"  [label="DDG: "];
"1000279" -> "1000352"  [label="DDG: "];
"1000349" -> "1000343"  [label="AST: "];
"1000349" -> "1000351"  [label="CFG: "];
"1000350" -> "1000349"  [label="AST: "];
"1000351" -> "1000349"  [label="AST: "];
"1000353" -> "1000349"  [label="CFG: "];
"1000349" -> "1000358"  [label="DDG: "];
"1000349" -> "1000358"  [label="DDG: "];
"1000313" -> "1000349"  [label="DDG: "];
"1000104" -> "1000349"  [label="DDG: "];
"1000349" -> "1000352"  [label="DDG: "];
"1000352" -> "1000106"  [label="AST: "];
"1000352" -> "1000354"  [label="CFG: "];
"1000353" -> "1000352"  [label="AST: "];
"1000354" -> "1000352"  [label="AST: "];
"1000355" -> "1000352"  [label="CFG: "];
"1000352" -> "1000358"  [label="DDG: "];
"1000352" -> "1000358"  [label="DDG: "];
"1000104" -> "1000352"  [label="DDG: "];
}
