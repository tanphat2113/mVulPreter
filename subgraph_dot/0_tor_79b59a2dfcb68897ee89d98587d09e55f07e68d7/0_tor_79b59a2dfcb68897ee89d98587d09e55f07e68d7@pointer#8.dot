digraph "0_tor_79b59a2dfcb68897ee89d98587d09e55f07e68d7@pointer" {
"1000280" [label="(Call,or_circ && or_circ->p_chan)"];
"1000136" [label="(Call,*or_circ = NULL)"];
"1000164" [label="(Call,or_circ = TO_OR_CIRCUIT(circ))"];
"1000166" [label="(Call,TO_OR_CIRCUIT(circ))"];
"1000161" [label="(Call,CIRCUIT_IS_ORIGIN(circ))"];
"1000157" [label="(Call,assert_circuit_ok(circ))"];
"1000123" [label="(MethodParameterIn,circuit_t *circ)"];
"1000312" [label="(Call,channel_get_canonical_remote_descr(or_circ->p_chan))"];
"1000311" [label="(Call,safe_str(channel_get_canonical_remote_descr(or_circ->p_chan)))"];
"1000307" [label="(Call,log_fn(LOG_PROTOCOL_WARN, LD_PROTOCOL,\n               \"Attempt by %s to open a stream %s. Closing.\",\n               safe_str(channel_get_canonical_remote_descr(or_circ->p_chan)),\n               or_circ->is_first_hop ? \"on first hop of circuit\" :\n                                       \"from unknown relay\"))"];
"1000660" [label="(Call,tor_assert(or_circ))"];
"1000663" [label="(Call,or_circ->p_chan &&\n        channel_get_addr_if_possible(or_circ->p_chan, &tmp_addr))"];
"1000667" [label="(Call,channel_get_addr_if_possible(or_circ->p_chan, &tmp_addr))"];
"1000674" [label="(Call,tor_addr_copy(&n_stream->base_.addr, &tmp_addr))"];
"1000674" [label="(Call,tor_addr_copy(&n_stream->base_.addr, &tmp_addr))"];
"1000665" [label="(Identifier,or_circ)"];
"1000547" [label="(Call,relay_send_end_cell_from_edge(rh.stream_id, circ,\n                                     END_STREAM_REASON_DONE,\n                                    layer_hint))"];
"1000590" [label="(Call,n_stream->on_circuit = circ)"];
"1000635" [label="(Call,relay_send_end_cell_from_edge(rh.stream_id, circ,\n                                  END_STREAM_REASON_HIBERNATING, NULL))"];
"1000600" [label="(Call,assert_circuit_ok(circ))"];
"1000694" [label="(Call,assert_circuit_ok(circ))"];
"1000660" [label="(Call,tor_assert(or_circ))"];
"1000667" [label="(Call,channel_get_addr_if_possible(or_circ->p_chan, &tmp_addr))"];
"1000569" [label="(Call,assert_circuit_ok(circ))"];
"1000307" [label="(Call,log_fn(LOG_PROTOCOL_WARN, LD_PROTOCOL,\n               \"Attempt by %s to open a stream %s. Closing.\",\n               safe_str(channel_get_canonical_remote_descr(or_circ->p_chan)),\n               or_circ->is_first_hop ? \"on first hop of circuit\" :\n                                       \"from unknown relay\"))"];
"1000309" [label="(Identifier,LD_PROTOCOL)"];
"1000324" [label="(Identifier,rh)"];
"1000668" [label="(Call,or_circ->p_chan)"];
"1000526" [label="(Call,assert_circuit_ok(circ))"];
"1000357" [label="(Call,relay_send_end_cell_from_edge(rh.stream_id, circ,\n                                  END_STREAM_REASON_NOTDIRECTORY, layer_hint))"];
"1000681" [label="(Call,&tmp_addr)"];
"1000163" [label="(Block,)"];
"1000311" [label="(Call,safe_str(channel_get_canonical_remote_descr(or_circ->p_chan)))"];
"1000678" [label="(Identifier,n_stream)"];
"1000124" [label="(Block,)"];
"1000673" [label="(Block,)"];
"1000367" [label="(Call,or_circ && or_circ->p_chan)"];
"1000426" [label="(Call,relay_send_end_cell_from_edge(rh.stream_id, circ,\n                                    END_STREAM_REASON_EXITPOLICY, layer_hint))"];
"1000164" [label="(Call,or_circ = TO_OR_CIRCUIT(circ))"];
"1000718" [label="(MethodReturn,RET)"];
"1000254" [label="(Call,relay_send_end_cell_from_edge(rh.stream_id, circ, end_reason, layer_hint))"];
"1000661" [label="(Identifier,or_circ)"];
"1000647" [label="(Call,n_stream->on_circuit = circ)"];
"1000167" [label="(Identifier,circ)"];
"1000280" [label="(Call,or_circ && or_circ->p_chan)"];
"1000316" [label="(Call,or_circ->is_first_hop ? \"on first hop of circuit\" :\n                                       \"from unknown relay\")"];
"1000662" [label="(ControlStructure,if (or_circ->p_chan &&\n        channel_get_addr_if_possible(or_circ->p_chan, &tmp_addr)))"];
"1000136" [label="(Call,*or_circ = NULL)"];
"1000312" [label="(Call,channel_get_canonical_remote_descr(or_circ->p_chan))"];
"1000409" [label="(Identifier,options)"];
"1000123" [label="(MethodParameterIn,circuit_t *circ)"];
"1000663" [label="(Call,or_circ->p_chan &&\n        channel_get_addr_if_possible(or_circ->p_chan, &tmp_addr))"];
"1000279" [label="(ControlStructure,if (or_circ && or_circ->p_chan))"];
"1000322" [label="(Call,relay_send_end_cell_from_edge(rh.stream_id, circ,\n                                      or_circ->is_first_hop ?\n                                        END_STREAM_REASON_TORPROTOCOL :\n                                        END_STREAM_REASON_MISC,\n                                      NULL))"];
"1000658" [label="(Block,)"];
"1000137" [label="(Identifier,or_circ)"];
"1000160" [label="(Call,!CIRCUIT_IS_ORIGIN(circ))"];
"1000217" [label="(Call,relay_send_end_cell_from_edge(rh.stream_id, circ,\n                                  END_STREAM_REASON_EXITPOLICY, NULL))"];
"1000189" [label="(Identifier,rh)"];
"1000713" [label="(Call,assert_circuit_ok(circ))"];
"1000313" [label="(Call,or_circ->p_chan)"];
"1000161" [label="(Call,CIRCUIT_IS_ORIGIN(circ))"];
"1000158" [label="(Identifier,circ)"];
"1000375" [label="(Call,channel_get_actual_remote_address(or_circ->p_chan))"];
"1000290" [label="(Identifier,options)"];
"1000310" [label="(Literal,\"Attempt by %s to open a stream %s. Closing.\")"];
"1000141" [label="(Identifier,origin_circ)"];
"1000162" [label="(Identifier,circ)"];
"1000306" [label="(Block,)"];
"1000166" [label="(Call,TO_OR_CIRCUIT(circ))"];
"1000397" [label="(Call,relay_send_end_cell_from_edge(rh.stream_id, circ,\n                                  END_STREAM_REASON_INTERNAL, layer_hint))"];
"1000138" [label="(Identifier,NULL)"];
"1000308" [label="(Identifier,LOG_PROTOCOL_WARN)"];
"1000178" [label="(Call,TO_ORIGIN_CIRCUIT(circ))"];
"1000281" [label="(Identifier,or_circ)"];
"1000165" [label="(Identifier,or_circ)"];
"1000318" [label="(Identifier,or_circ)"];
"1000671" [label="(Call,&tmp_addr)"];
"1000675" [label="(Call,&n_stream->base_.addr)"];
"1000685" [label="(Identifier,n_stream)"];
"1000157" [label="(Call,assert_circuit_ok(circ))"];
"1000282" [label="(Call,or_circ->p_chan)"];
"1000664" [label="(Call,or_circ->p_chan)"];
"1000280" -> "1000279"  [label="AST: "];
"1000280" -> "1000281"  [label="CFG: "];
"1000280" -> "1000282"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000282" -> "1000280"  [label="AST: "];
"1000290" -> "1000280"  [label="CFG: "];
"1000409" -> "1000280"  [label="CFG: "];
"1000280" -> "1000718"  [label="DDG: "];
"1000280" -> "1000718"  [label="DDG: "];
"1000280" -> "1000718"  [label="DDG: "];
"1000136" -> "1000280"  [label="DDG: "];
"1000164" -> "1000280"  [label="DDG: "];
"1000280" -> "1000312"  [label="DDG: "];
"1000280" -> "1000660"  [label="DDG: "];
"1000280" -> "1000663"  [label="DDG: "];
"1000280" -> "1000667"  [label="DDG: "];
"1000136" -> "1000124"  [label="AST: "];
"1000136" -> "1000138"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000141" -> "1000136"  [label="CFG: "];
"1000136" -> "1000718"  [label="DDG: "];
"1000136" -> "1000367"  [label="DDG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000164" -> "1000166"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000166" -> "1000164"  [label="AST: "];
"1000189" -> "1000164"  [label="CFG: "];
"1000164" -> "1000718"  [label="DDG: "];
"1000164" -> "1000718"  [label="DDG: "];
"1000166" -> "1000164"  [label="DDG: "];
"1000164" -> "1000367"  [label="DDG: "];
"1000166" -> "1000167"  [label="CFG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000166" -> "1000718"  [label="DDG: "];
"1000161" -> "1000166"  [label="DDG: "];
"1000123" -> "1000166"  [label="DDG: "];
"1000166" -> "1000217"  [label="DDG: "];
"1000166" -> "1000254"  [label="DDG: "];
"1000166" -> "1000322"  [label="DDG: "];
"1000166" -> "1000357"  [label="DDG: "];
"1000166" -> "1000397"  [label="DDG: "];
"1000166" -> "1000426"  [label="DDG: "];
"1000166" -> "1000526"  [label="DDG: "];
"1000166" -> "1000635"  [label="DDG: "];
"1000166" -> "1000647"  [label="DDG: "];
"1000166" -> "1000694"  [label="DDG: "];
"1000166" -> "1000713"  [label="DDG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000161" -> "1000162"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000160" -> "1000161"  [label="CFG: "];
"1000161" -> "1000160"  [label="DDG: "];
"1000157" -> "1000161"  [label="DDG: "];
"1000123" -> "1000161"  [label="DDG: "];
"1000161" -> "1000178"  [label="DDG: "];
"1000157" -> "1000124"  [label="AST: "];
"1000157" -> "1000158"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000162" -> "1000157"  [label="CFG: "];
"1000157" -> "1000718"  [label="DDG: "];
"1000123" -> "1000157"  [label="DDG: "];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000718"  [label="DDG: "];
"1000123" -> "1000178"  [label="DDG: "];
"1000123" -> "1000217"  [label="DDG: "];
"1000123" -> "1000254"  [label="DDG: "];
"1000123" -> "1000322"  [label="DDG: "];
"1000123" -> "1000357"  [label="DDG: "];
"1000123" -> "1000397"  [label="DDG: "];
"1000123" -> "1000426"  [label="DDG: "];
"1000123" -> "1000526"  [label="DDG: "];
"1000123" -> "1000547"  [label="DDG: "];
"1000123" -> "1000569"  [label="DDG: "];
"1000123" -> "1000590"  [label="DDG: "];
"1000123" -> "1000600"  [label="DDG: "];
"1000123" -> "1000635"  [label="DDG: "];
"1000123" -> "1000647"  [label="DDG: "];
"1000123" -> "1000694"  [label="DDG: "];
"1000123" -> "1000713"  [label="DDG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000312" -> "1000313"  [label="CFG: "];
"1000313" -> "1000312"  [label="AST: "];
"1000311" -> "1000312"  [label="CFG: "];
"1000312" -> "1000718"  [label="DDG: "];
"1000312" -> "1000311"  [label="DDG: "];
"1000311" -> "1000307"  [label="AST: "];
"1000318" -> "1000311"  [label="CFG: "];
"1000311" -> "1000718"  [label="DDG: "];
"1000311" -> "1000307"  [label="DDG: "];
"1000307" -> "1000306"  [label="AST: "];
"1000307" -> "1000316"  [label="CFG: "];
"1000308" -> "1000307"  [label="AST: "];
"1000309" -> "1000307"  [label="AST: "];
"1000310" -> "1000307"  [label="AST: "];
"1000316" -> "1000307"  [label="AST: "];
"1000324" -> "1000307"  [label="CFG: "];
"1000307" -> "1000718"  [label="DDG: "];
"1000307" -> "1000718"  [label="DDG: "];
"1000307" -> "1000718"  [label="DDG: "];
"1000307" -> "1000718"  [label="DDG: "];
"1000307" -> "1000718"  [label="DDG: "];
"1000660" -> "1000658"  [label="AST: "];
"1000660" -> "1000661"  [label="CFG: "];
"1000661" -> "1000660"  [label="AST: "];
"1000665" -> "1000660"  [label="CFG: "];
"1000660" -> "1000718"  [label="DDG: "];
"1000660" -> "1000718"  [label="DDG: "];
"1000367" -> "1000660"  [label="DDG: "];
"1000663" -> "1000662"  [label="AST: "];
"1000663" -> "1000664"  [label="CFG: "];
"1000663" -> "1000667"  [label="CFG: "];
"1000664" -> "1000663"  [label="AST: "];
"1000667" -> "1000663"  [label="AST: "];
"1000678" -> "1000663"  [label="CFG: "];
"1000685" -> "1000663"  [label="CFG: "];
"1000663" -> "1000718"  [label="DDG: "];
"1000663" -> "1000718"  [label="DDG: "];
"1000663" -> "1000718"  [label="DDG: "];
"1000367" -> "1000663"  [label="DDG: "];
"1000375" -> "1000663"  [label="DDG: "];
"1000667" -> "1000663"  [label="DDG: "];
"1000667" -> "1000663"  [label="DDG: "];
"1000667" -> "1000671"  [label="CFG: "];
"1000668" -> "1000667"  [label="AST: "];
"1000671" -> "1000667"  [label="AST: "];
"1000667" -> "1000718"  [label="DDG: "];
"1000367" -> "1000667"  [label="DDG: "];
"1000375" -> "1000667"  [label="DDG: "];
"1000667" -> "1000674"  [label="DDG: "];
"1000674" -> "1000673"  [label="AST: "];
"1000674" -> "1000681"  [label="CFG: "];
"1000675" -> "1000674"  [label="AST: "];
"1000681" -> "1000674"  [label="AST: "];
"1000685" -> "1000674"  [label="CFG: "];
"1000674" -> "1000718"  [label="DDG: "];
"1000674" -> "1000718"  [label="DDG: "];
"1000674" -> "1000718"  [label="DDG: "];
}
