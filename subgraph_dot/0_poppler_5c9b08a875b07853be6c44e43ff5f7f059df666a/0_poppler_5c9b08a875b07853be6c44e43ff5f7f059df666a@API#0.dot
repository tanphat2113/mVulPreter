digraph "0_poppler_5c9b08a875b07853be6c44e43ff5f7f059df666a@API" {
"1001096" [label="(Call,fclose(f))"];
"1000284" [label="(Call,f = fopen(fileName, \"wb\"))"];
"1000286" [label="(Call,fopen(fileName, \"wb\"))"];
"1000132" [label="(Call,*fileName = argv[argc - 1])"];
"1000103" [label="(MethodParameterIn,char *argv[])"];
"1000287" [label="(Identifier,fileName)"];
"1001099" [label="(Identifier,yRef)"];
"1001096" [label="(Call,fclose(f))"];
"1001097" [label="(Identifier,f)"];
"1000271" [label="(Call,error(errSyntaxError, -1, \"Could not merge damaged documents ('{0:s}')\", argv[i]))"];
"1000284" [label="(Call,f = fopen(fileName, \"wb\"))"];
"1000285" [label="(Identifier,f)"];
"1000104" [label="(Block,)"];
"1000288" [label="(Literal,\"wb\")"];
"1001075" [label="(Call,PDFDoc::createTrailerDict(objectsCount, gFalse, 0, &ref, yRef,\n                                                fileName, outStr->getPos()))"];
"1000290" [label="(Call,error(errIO, -1, \"Could not open file '{0:s}'\", fileName))"];
"1000258" [label="(Call,error(errUnimplemented, -1, \"Could not merge encrypted files ('{0:s}')\", argv[i]))"];
"1000132" [label="(Call,*fileName = argv[argc - 1])"];
"1001132" [label="(MethodReturn,int)"];
"1000146" [label="(Call,parseArgs (argDesc, &argc, argv))"];
"1000141" [label="(Identifier,exitCode)"];
"1000286" [label="(Call,fopen(fileName, \"wb\"))"];
"1000283" [label="(Call,!(f = fopen(fileName, \"wb\")))"];
"1000133" [label="(Identifier,fileName)"];
"1000103" [label="(MethodParameterIn,char *argv[])"];
"1000134" [label="(Call,argv[argc - 1])"];
"1001096" -> "1000104"  [label="AST: "];
"1001096" -> "1001097"  [label="CFG: "];
"1001097" -> "1001096"  [label="AST: "];
"1001099" -> "1001096"  [label="CFG: "];
"1001096" -> "1001132"  [label="DDG: "];
"1001096" -> "1001132"  [label="DDG: "];
"1000284" -> "1001096"  [label="DDG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000284" -> "1000286"  [label="CFG: "];
"1000285" -> "1000284"  [label="AST: "];
"1000286" -> "1000284"  [label="AST: "];
"1000283" -> "1000284"  [label="CFG: "];
"1000284" -> "1001132"  [label="DDG: "];
"1000284" -> "1001132"  [label="DDG: "];
"1000284" -> "1000283"  [label="DDG: "];
"1000286" -> "1000284"  [label="DDG: "];
"1000286" -> "1000284"  [label="DDG: "];
"1000286" -> "1000288"  [label="CFG: "];
"1000287" -> "1000286"  [label="AST: "];
"1000288" -> "1000286"  [label="AST: "];
"1000286" -> "1000283"  [label="DDG: "];
"1000286" -> "1000283"  [label="DDG: "];
"1000132" -> "1000286"  [label="DDG: "];
"1000286" -> "1000290"  [label="DDG: "];
"1000286" -> "1001075"  [label="DDG: "];
"1000132" -> "1000104"  [label="AST: "];
"1000132" -> "1000134"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="AST: "];
"1000141" -> "1000132"  [label="CFG: "];
"1000132" -> "1001132"  [label="DDG: "];
"1000132" -> "1001132"  [label="DDG: "];
"1000103" -> "1000132"  [label="DDG: "];
"1000103" -> "1000101"  [label="AST: "];
"1000103" -> "1001132"  [label="DDG: "];
"1000103" -> "1000146"  [label="DDG: "];
"1000103" -> "1000258"  [label="DDG: "];
"1000103" -> "1000271"  [label="DDG: "];
}
