digraph "0_oniguruma_c509265c5f6ae7264f7b8a8aae1cfa5fc59d108c@integer" {
"1000437" [label="(Call,COP(reg)->jump.addr = else_len + SIZE_INC_OP)"];
"1000421" [label="(Call,else_len = compile_length_tree(Else, reg))"];
"1000423" [label="(Call,compile_length_tree(Else, reg))"];
"1000417" [label="(Call,IS_NOT_NULL(Else))"];
"1000351" [label="(Call,IS_NOT_NULL(Else))"];
"1000295" [label="(Call,* Else = node->te.Else)"];
"1000391" [label="(Call,add_op(reg, OP_ATOMIC_END))"];
"1000379" [label="(Call,compile_tree(cond, reg, env))"];
"1000315" [label="(Call,compile_length_tree(cond, reg))"];
"1000282" [label="(Call,* cond = NODE_BAG_BODY(node))"];
"1000284" [label="(Call,NODE_BAG_BODY(node))"];
"1000101" [label="(MethodParameterIn,BagNode* node)"];
"1000304" [label="(Call,add_op(reg, OP_ATOMIC_START))"];
"1000102" [label="(MethodParameterIn,regex_t* reg)"];
"1000370" [label="(Call,COP(reg))"];
"1000358" [label="(Call,add_op(reg, OP_PUSH))"];
"1000330" [label="(Call,compile_length_tree(Then, reg))"];
"1000325" [label="(Call,IS_NOT_NULL(Then))"];
"1000287" [label="(Call,* Then = node->te.Then)"];
"1000103" [label="(MethodParameterIn,ScanEnv* env)"];
"1000406" [label="(Call,compile_tree(Then, reg, env))"];
"1000401" [label="(Call,IS_NOT_NULL(Then))"];
"1000404" [label="(Call,r = compile_tree(Then, reg, env))"];
"1000381" [label="(Identifier,reg)"];
"1000354" [label="(Identifier,jump_len)"];
"1000296" [label="(Identifier,Else)"];
"1000449" [label="(Call,compile_tree(Else, reg, env))"];
"1000272" [label="(Call,add_op(reg, OP_ATOMIC_END))"];
"1000409" [label="(Identifier,env)"];
"1000282" [label="(Call,* cond = NODE_BAG_BODY(node))"];
"1000330" [label="(Call,compile_length_tree(Then, reg))"];
"1000103" [label="(MethodParameterIn,ScanEnv* env)"];
"1000123" [label="(Call,compile_option_node(node, reg, env))"];
"1000456" [label="(MethodReturn,RET)"];
"1000422" [label="(Identifier,else_len)"];
"1000317" [label="(Identifier,reg)"];
"1000351" [label="(Call,IS_NOT_NULL(Else))"];
"1000370" [label="(Call,COP(reg))"];
"1000169" [label="(Call,add_op(reg, OP_PUSH))"];
"1000331" [label="(Identifier,Then)"];
"1000297" [label="(Call,node->te.Else)"];
"1000427" [label="(Identifier,r)"];
"1000328" [label="(Call,then_len = compile_length_tree(Then, reg))"];
"1000393" [label="(Identifier,OP_ATOMIC_END)"];
"1000392" [label="(Identifier,reg)"];
"1000277" [label="(Block,)"];
"1000181" [label="(Call,COP(reg))"];
"1000302" [label="(Call,r = add_op(reg, OP_ATOMIC_START))"];
"1000194" [label="(Call,compile_tree(NODE_QUANT_BODY(qn), reg, env))"];
"1000350" [label="(ControlStructure,if (IS_NOT_NULL(Else)))"];
"1000400" [label="(ControlStructure,if (IS_NOT_NULL(Then)))"];
"1000424" [label="(Identifier,Else)"];
"1000391" [label="(Call,add_op(reg, OP_ATOMIC_END))"];
"1000259" [label="(Call,compile_tree(NODE_BAG_BODY(node), reg, env))"];
"1000101" [label="(MethodParameterIn,BagNode* node)"];
"1000141" [label="(Call,compile_tree_n_times(NODE_QUANT_BODY(qn), qn->lower, reg, env))"];
"1000417" [label="(Call,IS_NOT_NULL(Else))"];
"1000408" [label="(Identifier,reg)"];
"1000405" [label="(Identifier,r)"];
"1000325" [label="(Call,IS_NOT_NULL(Then))"];
"1000284" [label="(Call,NODE_BAG_BODY(node))"];
"1000260" [label="(Call,NODE_BAG_BODY(node))"];
"1000305" [label="(Identifier,reg)"];
"1000207" [label="(Call,add_op(reg, OP_POP_OUT))"];
"1000324" [label="(ControlStructure,if (IS_NOT_NULL(Then)))"];
"1000303" [label="(Identifier,r)"];
"1000341" [label="(Identifier,then_len)"];
"1000137" [label="(Call,NODE_BAG_BODY(node))"];
"1000285" [label="(Identifier,node)"];
"1000295" [label="(Call,* Else = node->te.Else)"];
"1000352" [label="(Identifier,Else)"];
"1000416" [label="(ControlStructure,if (IS_NOT_NULL(Else)))"];
"1000438" [label="(Call,COP(reg)->jump.addr)"];
"1000283" [label="(Identifier,cond)"];
"1000315" [label="(Call,compile_length_tree(cond, reg))"];
"1000421" [label="(Call,else_len = compile_length_tree(Else, reg))"];
"1000357" [label="(Identifier,r)"];
"1000356" [label="(Call,r = add_op(reg, OP_PUSH))"];
"1000382" [label="(Identifier,env)"];
"1000287" [label="(Call,* Then = node->te.Then)"];
"1000425" [label="(Identifier,reg)"];
"1000407" [label="(Identifier,Then)"];
"1000371" [label="(Identifier,reg)"];
"1000326" [label="(Identifier,Then)"];
"1000102" [label="(MethodParameterIn,regex_t* reg)"];
"1000304" [label="(Call,add_op(reg, OP_ATOMIC_START))"];
"1000437" [label="(Call,COP(reg)->jump.addr = else_len + SIZE_INC_OP)"];
"1000329" [label="(Identifier,then_len)"];
"1000248" [label="(Call,add_op(reg, OP_ATOMIC_START))"];
"1000360" [label="(Identifier,OP_PUSH)"];
"1000289" [label="(Call,node->te.Then)"];
"1000380" [label="(Identifier,cond)"];
"1000428" [label="(Call,add_op(reg, OP_JUMP))"];
"1000372" [label="(FieldIdentifier,push)"];
"1000369" [label="(Call,COP(reg)->push)"];
"1000157" [label="(Call,compile_length_tree(NODE_QUANT_BODY(qn), reg))"];
"1000316" [label="(Identifier,cond)"];
"1000115" [label="(Call,compile_bag_memory_node(node, reg, env))"];
"1000359" [label="(Identifier,reg)"];
"1000332" [label="(Identifier,reg)"];
"1000440" [label="(Call,COP(reg))"];
"1000406" [label="(Call,compile_tree(Then, reg, env))"];
"1000377" [label="(Call,r = compile_tree(cond, reg, env))"];
"1000230" [label="(Call,COP(reg))"];
"1000401" [label="(Call,IS_NOT_NULL(Then))"];
"1000313" [label="(Call,cond_len = compile_length_tree(cond, reg))"];
"1000448" [label="(Identifier,r)"];
"1000423" [label="(Call,compile_length_tree(Else, reg))"];
"1000306" [label="(Identifier,OP_ATOMIC_START)"];
"1000453" [label="(ControlStructure,break;)"];
"1000419" [label="(Block,)"];
"1000288" [label="(Identifier,Then)"];
"1000444" [label="(Call,else_len + SIZE_INC_OP)"];
"1000130" [label="(Call,NODE_IS_STOP_BT_SIMPLE_REPEAT(node))"];
"1000389" [label="(Call,r = add_op(reg, OP_ATOMIC_END))"];
"1000402" [label="(Identifier,Then)"];
"1000218" [label="(Call,add_op(reg, OP_JUMP))"];
"1000379" [label="(Call,compile_tree(cond, reg, env))"];
"1000418" [label="(Identifier,Else)"];
"1000358" [label="(Call,add_op(reg, OP_PUSH))"];
"1000437" -> "1000419"  [label="AST: "];
"1000437" -> "1000444"  [label="CFG: "];
"1000438" -> "1000437"  [label="AST: "];
"1000444" -> "1000437"  [label="AST: "];
"1000448" -> "1000437"  [label="CFG: "];
"1000437" -> "1000456"  [label="DDG: COP(reg)->jump.addr"];
"1000437" -> "1000456"  [label="DDG: else_len + SIZE_INC_OP"];
"1000421" -> "1000437"  [label="DDG: else_len"];
"1000421" -> "1000419"  [label="AST: "];
"1000421" -> "1000423"  [label="CFG: "];
"1000422" -> "1000421"  [label="AST: "];
"1000423" -> "1000421"  [label="AST: "];
"1000427" -> "1000421"  [label="CFG: "];
"1000421" -> "1000456"  [label="DDG: compile_length_tree(Else, reg)"];
"1000421" -> "1000456"  [label="DDG: else_len"];
"1000423" -> "1000421"  [label="DDG: Else"];
"1000423" -> "1000421"  [label="DDG: reg"];
"1000421" -> "1000444"  [label="DDG: else_len"];
"1000423" -> "1000425"  [label="CFG: "];
"1000424" -> "1000423"  [label="AST: "];
"1000425" -> "1000423"  [label="AST: "];
"1000423" -> "1000456"  [label="DDG: Else"];
"1000417" -> "1000423"  [label="DDG: Else"];
"1000391" -> "1000423"  [label="DDG: reg"];
"1000406" -> "1000423"  [label="DDG: reg"];
"1000102" -> "1000423"  [label="DDG: reg"];
"1000423" -> "1000428"  [label="DDG: reg"];
"1000423" -> "1000449"  [label="DDG: Else"];
"1000417" -> "1000416"  [label="AST: "];
"1000417" -> "1000418"  [label="CFG: "];
"1000418" -> "1000417"  [label="AST: "];
"1000422" -> "1000417"  [label="CFG: "];
"1000453" -> "1000417"  [label="CFG: "];
"1000417" -> "1000456"  [label="DDG: Else"];
"1000417" -> "1000456"  [label="DDG: IS_NOT_NULL(Else)"];
"1000351" -> "1000417"  [label="DDG: Else"];
"1000351" -> "1000350"  [label="AST: "];
"1000351" -> "1000352"  [label="CFG: "];
"1000352" -> "1000351"  [label="AST: "];
"1000354" -> "1000351"  [label="CFG: "];
"1000357" -> "1000351"  [label="CFG: "];
"1000351" -> "1000456"  [label="DDG: IS_NOT_NULL(Else)"];
"1000351" -> "1000456"  [label="DDG: Else"];
"1000295" -> "1000351"  [label="DDG: Else"];
"1000295" -> "1000277"  [label="AST: "];
"1000295" -> "1000297"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000297" -> "1000295"  [label="AST: "];
"1000303" -> "1000295"  [label="CFG: "];
"1000295" -> "1000456"  [label="DDG: Else"];
"1000295" -> "1000456"  [label="DDG: node->te.Else"];
"1000391" -> "1000389"  [label="AST: "];
"1000391" -> "1000393"  [label="CFG: "];
"1000392" -> "1000391"  [label="AST: "];
"1000393" -> "1000391"  [label="AST: "];
"1000389" -> "1000391"  [label="CFG: "];
"1000391" -> "1000456"  [label="DDG: reg"];
"1000391" -> "1000456"  [label="DDG: OP_ATOMIC_END"];
"1000391" -> "1000389"  [label="DDG: reg"];
"1000391" -> "1000389"  [label="DDG: OP_ATOMIC_END"];
"1000379" -> "1000391"  [label="DDG: reg"];
"1000102" -> "1000391"  [label="DDG: reg"];
"1000391" -> "1000406"  [label="DDG: reg"];
"1000379" -> "1000377"  [label="AST: "];
"1000379" -> "1000382"  [label="CFG: "];
"1000380" -> "1000379"  [label="AST: "];
"1000381" -> "1000379"  [label="AST: "];
"1000382" -> "1000379"  [label="AST: "];
"1000377" -> "1000379"  [label="CFG: "];
"1000379" -> "1000456"  [label="DDG: cond"];
"1000379" -> "1000456"  [label="DDG: env"];
"1000379" -> "1000456"  [label="DDG: reg"];
"1000379" -> "1000377"  [label="DDG: cond"];
"1000379" -> "1000377"  [label="DDG: reg"];
"1000379" -> "1000377"  [label="DDG: env"];
"1000315" -> "1000379"  [label="DDG: cond"];
"1000370" -> "1000379"  [label="DDG: reg"];
"1000102" -> "1000379"  [label="DDG: reg"];
"1000103" -> "1000379"  [label="DDG: env"];
"1000379" -> "1000406"  [label="DDG: env"];
"1000379" -> "1000449"  [label="DDG: env"];
"1000315" -> "1000313"  [label="AST: "];
"1000315" -> "1000317"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000317" -> "1000315"  [label="AST: "];
"1000313" -> "1000315"  [label="CFG: "];
"1000315" -> "1000456"  [label="DDG: cond"];
"1000315" -> "1000456"  [label="DDG: reg"];
"1000315" -> "1000313"  [label="DDG: cond"];
"1000315" -> "1000313"  [label="DDG: reg"];
"1000282" -> "1000315"  [label="DDG: cond"];
"1000304" -> "1000315"  [label="DDG: reg"];
"1000102" -> "1000315"  [label="DDG: reg"];
"1000315" -> "1000330"  [label="DDG: reg"];
"1000315" -> "1000358"  [label="DDG: reg"];
"1000282" -> "1000277"  [label="AST: "];
"1000282" -> "1000284"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000284" -> "1000282"  [label="AST: "];
"1000288" -> "1000282"  [label="CFG: "];
"1000282" -> "1000456"  [label="DDG: NODE_BAG_BODY(node)"];
"1000282" -> "1000456"  [label="DDG: cond"];
"1000284" -> "1000282"  [label="DDG: node"];
"1000284" -> "1000285"  [label="CFG: "];
"1000285" -> "1000284"  [label="AST: "];
"1000284" -> "1000456"  [label="DDG: node"];
"1000101" -> "1000284"  [label="DDG: node"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000456"  [label="DDG: node"];
"1000101" -> "1000115"  [label="DDG: node"];
"1000101" -> "1000123"  [label="DDG: node"];
"1000101" -> "1000130"  [label="DDG: node"];
"1000101" -> "1000137"  [label="DDG: node"];
"1000101" -> "1000260"  [label="DDG: node"];
"1000304" -> "1000302"  [label="AST: "];
"1000304" -> "1000306"  [label="CFG: "];
"1000305" -> "1000304"  [label="AST: "];
"1000306" -> "1000304"  [label="AST: "];
"1000302" -> "1000304"  [label="CFG: "];
"1000304" -> "1000456"  [label="DDG: reg"];
"1000304" -> "1000456"  [label="DDG: OP_ATOMIC_START"];
"1000304" -> "1000302"  [label="DDG: reg"];
"1000304" -> "1000302"  [label="DDG: OP_ATOMIC_START"];
"1000102" -> "1000304"  [label="DDG: reg"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000456"  [label="DDG: reg"];
"1000102" -> "1000115"  [label="DDG: reg"];
"1000102" -> "1000123"  [label="DDG: reg"];
"1000102" -> "1000141"  [label="DDG: reg"];
"1000102" -> "1000157"  [label="DDG: reg"];
"1000102" -> "1000169"  [label="DDG: reg"];
"1000102" -> "1000181"  [label="DDG: reg"];
"1000102" -> "1000194"  [label="DDG: reg"];
"1000102" -> "1000207"  [label="DDG: reg"];
"1000102" -> "1000218"  [label="DDG: reg"];
"1000102" -> "1000230"  [label="DDG: reg"];
"1000102" -> "1000248"  [label="DDG: reg"];
"1000102" -> "1000259"  [label="DDG: reg"];
"1000102" -> "1000272"  [label="DDG: reg"];
"1000102" -> "1000330"  [label="DDG: reg"];
"1000102" -> "1000358"  [label="DDG: reg"];
"1000102" -> "1000370"  [label="DDG: reg"];
"1000102" -> "1000406"  [label="DDG: reg"];
"1000102" -> "1000428"  [label="DDG: reg"];
"1000102" -> "1000440"  [label="DDG: reg"];
"1000102" -> "1000449"  [label="DDG: reg"];
"1000370" -> "1000369"  [label="AST: "];
"1000370" -> "1000371"  [label="CFG: "];
"1000371" -> "1000370"  [label="AST: "];
"1000372" -> "1000370"  [label="CFG: "];
"1000358" -> "1000370"  [label="DDG: reg"];
"1000358" -> "1000356"  [label="AST: "];
"1000358" -> "1000360"  [label="CFG: "];
"1000359" -> "1000358"  [label="AST: "];
"1000360" -> "1000358"  [label="AST: "];
"1000356" -> "1000358"  [label="CFG: "];
"1000358" -> "1000456"  [label="DDG: OP_PUSH"];
"1000358" -> "1000456"  [label="DDG: reg"];
"1000358" -> "1000356"  [label="DDG: reg"];
"1000358" -> "1000356"  [label="DDG: OP_PUSH"];
"1000330" -> "1000358"  [label="DDG: reg"];
"1000330" -> "1000328"  [label="AST: "];
"1000330" -> "1000332"  [label="CFG: "];
"1000331" -> "1000330"  [label="AST: "];
"1000332" -> "1000330"  [label="AST: "];
"1000328" -> "1000330"  [label="CFG: "];
"1000330" -> "1000456"  [label="DDG: Then"];
"1000330" -> "1000456"  [label="DDG: reg"];
"1000330" -> "1000328"  [label="DDG: Then"];
"1000330" -> "1000328"  [label="DDG: reg"];
"1000325" -> "1000330"  [label="DDG: Then"];
"1000330" -> "1000401"  [label="DDG: Then"];
"1000325" -> "1000324"  [label="AST: "];
"1000325" -> "1000326"  [label="CFG: "];
"1000326" -> "1000325"  [label="AST: "];
"1000329" -> "1000325"  [label="CFG: "];
"1000341" -> "1000325"  [label="CFG: "];
"1000325" -> "1000456"  [label="DDG: Then"];
"1000325" -> "1000456"  [label="DDG: IS_NOT_NULL(Then)"];
"1000287" -> "1000325"  [label="DDG: Then"];
"1000325" -> "1000401"  [label="DDG: Then"];
"1000287" -> "1000277"  [label="AST: "];
"1000287" -> "1000289"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000287"  [label="AST: "];
"1000296" -> "1000287"  [label="CFG: "];
"1000287" -> "1000456"  [label="DDG: node->te.Then"];
"1000287" -> "1000456"  [label="DDG: Then"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000456"  [label="DDG: env"];
"1000103" -> "1000115"  [label="DDG: env"];
"1000103" -> "1000123"  [label="DDG: env"];
"1000103" -> "1000141"  [label="DDG: env"];
"1000103" -> "1000194"  [label="DDG: env"];
"1000103" -> "1000259"  [label="DDG: env"];
"1000103" -> "1000406"  [label="DDG: env"];
"1000103" -> "1000449"  [label="DDG: env"];
"1000406" -> "1000404"  [label="AST: "];
"1000406" -> "1000409"  [label="CFG: "];
"1000407" -> "1000406"  [label="AST: "];
"1000408" -> "1000406"  [label="AST: "];
"1000409" -> "1000406"  [label="AST: "];
"1000404" -> "1000406"  [label="CFG: "];
"1000406" -> "1000456"  [label="DDG: env"];
"1000406" -> "1000456"  [label="DDG: Then"];
"1000406" -> "1000456"  [label="DDG: reg"];
"1000406" -> "1000404"  [label="DDG: Then"];
"1000406" -> "1000404"  [label="DDG: reg"];
"1000406" -> "1000404"  [label="DDG: env"];
"1000401" -> "1000406"  [label="DDG: Then"];
"1000406" -> "1000449"  [label="DDG: env"];
"1000401" -> "1000400"  [label="AST: "];
"1000401" -> "1000402"  [label="CFG: "];
"1000402" -> "1000401"  [label="AST: "];
"1000405" -> "1000401"  [label="CFG: "];
"1000418" -> "1000401"  [label="CFG: "];
"1000401" -> "1000456"  [label="DDG: IS_NOT_NULL(Then)"];
"1000401" -> "1000456"  [label="DDG: Then"];
}
