digraph "0_oniguruma_c509265c5f6ae7264f7b8a8aae1cfa5fc59d108c@pointer" {
"1000248" [label="(Call,add_op(reg, OP_ATOMIC_START))"];
"1000102" [label="(MethodParameterIn,regex_t* reg)"];
"1000246" [label="(Call,r = add_op(reg, OP_ATOMIC_START))"];
"1000252" [label="(Call,r != 0)"];
"1000255" [label="(Return,return r;)"];
"1000259" [label="(Call,compile_tree(NODE_BAG_BODY(node), reg, env))"];
"1000257" [label="(Call,r = compile_tree(NODE_BAG_BODY(node), reg, env))"];
"1000265" [label="(Call,r != 0)"];
"1000268" [label="(Return,return r;)"];
"1000272" [label="(Call,add_op(reg, OP_ATOMIC_END))"];
"1000270" [label="(Call,r = add_op(reg, OP_ATOMIC_END))"];
"1000454" [label="(Return,return r;)"];
"1000246" [label="(Call,r = add_op(reg, OP_ATOMIC_START))"];
"1000157" [label="(Call,compile_length_tree(NODE_QUANT_BODY(qn), reg))"];
"1000249" [label="(Identifier,reg)"];
"1000259" [label="(Call,compile_tree(NODE_BAG_BODY(node), reg, env))"];
"1000391" [label="(Call,add_op(reg, OP_ATOMIC_END))"];
"1000141" [label="(Call,compile_tree_n_times(NODE_QUANT_BODY(qn), qn->lower, reg, env))"];
"1000272" [label="(Call,add_op(reg, OP_ATOMIC_END))"];
"1000428" [label="(Call,add_op(reg, OP_JUMP))"];
"1000449" [label="(Call,compile_tree(Else, reg, env))"];
"1000268" [label="(Return,return r;)"];
"1000315" [label="(Call,compile_length_tree(cond, reg))"];
"1000330" [label="(Call,compile_length_tree(Then, reg))"];
"1000103" [label="(MethodParameterIn,ScanEnv* env)"];
"1000115" [label="(Call,compile_bag_memory_node(node, reg, env))"];
"1000123" [label="(Call,compile_option_node(node, reg, env))"];
"1000273" [label="(Identifier,reg)"];
"1000265" [label="(Call,r != 0)"];
"1000251" [label="(ControlStructure,if (r != 0))"];
"1000267" [label="(Literal,0)"];
"1000253" [label="(Identifier,r)"];
"1000456" [label="(MethodReturn,RET)"];
"1000266" [label="(Identifier,r)"];
"1000395" [label="(Call,r != 0)"];
"1000270" [label="(Call,r = add_op(reg, OP_ATOMIC_END))"];
"1000258" [label="(Identifier,r)"];
"1000447" [label="(Call,r = compile_tree(Else, reg, env))"];
"1000440" [label="(Call,COP(reg))"];
"1000113" [label="(Call,r = compile_bag_memory_node(node, reg, env))"];
"1000411" [label="(Call,r != 0)"];
"1000254" [label="(Literal,0)"];
"1000257" [label="(Call,r = compile_tree(NODE_BAG_BODY(node), reg, env))"];
"1000370" [label="(Call,COP(reg))"];
"1000169" [label="(Call,add_op(reg, OP_PUSH))"];
"1000275" [label="(ControlStructure,break;)"];
"1000406" [label="(Call,compile_tree(Then, reg, env))"];
"1000222" [label="(Call,r != 0)"];
"1000260" [label="(Call,NODE_BAG_BODY(node))"];
"1000252" [label="(Call,r != 0)"];
"1000274" [label="(Identifier,OP_ATOMIC_END)"];
"1000230" [label="(Call,COP(reg))"];
"1000262" [label="(Identifier,reg)"];
"1000104" [label="(Block,)"];
"1000271" [label="(Identifier,r)"];
"1000423" [label="(Call,compile_length_tree(Else, reg))"];
"1000207" [label="(Call,add_op(reg, OP_POP_OUT))"];
"1000102" [label="(MethodParameterIn,regex_t* reg)"];
"1000304" [label="(Call,add_op(reg, OP_ATOMIC_START))"];
"1000263" [label="(Identifier,env)"];
"1000248" [label="(Call,add_op(reg, OP_ATOMIC_START))"];
"1000247" [label="(Identifier,r)"];
"1000269" [label="(Identifier,r)"];
"1000255" [label="(Return,return r;)"];
"1000256" [label="(Identifier,r)"];
"1000264" [label="(ControlStructure,if (r != 0))"];
"1000250" [label="(Identifier,OP_ATOMIC_START)"];
"1000245" [label="(Block,)"];
"1000454" [label="(Return,return r;)"];
"1000181" [label="(Call,COP(reg))"];
"1000455" [label="(Identifier,r)"];
"1000218" [label="(Call,add_op(reg, OP_JUMP))"];
"1000121" [label="(Call,r = compile_option_node(node, reg, env))"];
"1000194" [label="(Call,compile_tree(NODE_QUANT_BODY(qn), reg, env))"];
"1000379" [label="(Call,compile_tree(cond, reg, env))"];
"1000358" [label="(Call,add_op(reg, OP_PUSH))"];
"1000248" -> "1000246"  [label="AST: "];
"1000248" -> "1000250"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="AST: "];
"1000246" -> "1000248"  [label="CFG: "];
"1000248" -> "1000456"  [label="DDG: OP_ATOMIC_START"];
"1000248" -> "1000456"  [label="DDG: reg"];
"1000248" -> "1000246"  [label="DDG: reg"];
"1000248" -> "1000246"  [label="DDG: OP_ATOMIC_START"];
"1000102" -> "1000248"  [label="DDG: reg"];
"1000248" -> "1000259"  [label="DDG: reg"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000456"  [label="DDG: reg"];
"1000102" -> "1000115"  [label="DDG: reg"];
"1000102" -> "1000123"  [label="DDG: reg"];
"1000102" -> "1000141"  [label="DDG: reg"];
"1000102" -> "1000157"  [label="DDG: reg"];
"1000102" -> "1000169"  [label="DDG: reg"];
"1000102" -> "1000181"  [label="DDG: reg"];
"1000102" -> "1000194"  [label="DDG: reg"];
"1000102" -> "1000207"  [label="DDG: reg"];
"1000102" -> "1000218"  [label="DDG: reg"];
"1000102" -> "1000230"  [label="DDG: reg"];
"1000102" -> "1000259"  [label="DDG: reg"];
"1000102" -> "1000272"  [label="DDG: reg"];
"1000102" -> "1000304"  [label="DDG: reg"];
"1000102" -> "1000315"  [label="DDG: reg"];
"1000102" -> "1000330"  [label="DDG: reg"];
"1000102" -> "1000358"  [label="DDG: reg"];
"1000102" -> "1000370"  [label="DDG: reg"];
"1000102" -> "1000379"  [label="DDG: reg"];
"1000102" -> "1000391"  [label="DDG: reg"];
"1000102" -> "1000406"  [label="DDG: reg"];
"1000102" -> "1000423"  [label="DDG: reg"];
"1000102" -> "1000428"  [label="DDG: reg"];
"1000102" -> "1000440"  [label="DDG: reg"];
"1000102" -> "1000449"  [label="DDG: reg"];
"1000246" -> "1000245"  [label="AST: "];
"1000247" -> "1000246"  [label="AST: "];
"1000253" -> "1000246"  [label="CFG: "];
"1000246" -> "1000456"  [label="DDG: add_op(reg, OP_ATOMIC_START)"];
"1000246" -> "1000252"  [label="DDG: r"];
"1000252" -> "1000251"  [label="AST: "];
"1000252" -> "1000254"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000254" -> "1000252"  [label="AST: "];
"1000256" -> "1000252"  [label="CFG: "];
"1000258" -> "1000252"  [label="CFG: "];
"1000252" -> "1000456"  [label="DDG: r"];
"1000252" -> "1000456"  [label="DDG: r != 0"];
"1000252" -> "1000255"  [label="DDG: r"];
"1000255" -> "1000251"  [label="AST: "];
"1000255" -> "1000256"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000456" -> "1000255"  [label="CFG: "];
"1000255" -> "1000456"  [label="DDG: <RET>"];
"1000256" -> "1000255"  [label="DDG: r"];
"1000259" -> "1000257"  [label="AST: "];
"1000259" -> "1000263"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000262" -> "1000259"  [label="AST: "];
"1000263" -> "1000259"  [label="AST: "];
"1000257" -> "1000259"  [label="CFG: "];
"1000259" -> "1000456"  [label="DDG: NODE_BAG_BODY(node)"];
"1000259" -> "1000456"  [label="DDG: env"];
"1000259" -> "1000456"  [label="DDG: reg"];
"1000259" -> "1000257"  [label="DDG: NODE_BAG_BODY(node)"];
"1000259" -> "1000257"  [label="DDG: reg"];
"1000259" -> "1000257"  [label="DDG: env"];
"1000260" -> "1000259"  [label="DDG: node"];
"1000103" -> "1000259"  [label="DDG: env"];
"1000259" -> "1000272"  [label="DDG: reg"];
"1000257" -> "1000245"  [label="AST: "];
"1000258" -> "1000257"  [label="AST: "];
"1000266" -> "1000257"  [label="CFG: "];
"1000257" -> "1000456"  [label="DDG: compile_tree(NODE_BAG_BODY(node), reg, env)"];
"1000257" -> "1000265"  [label="DDG: r"];
"1000265" -> "1000264"  [label="AST: "];
"1000265" -> "1000267"  [label="CFG: "];
"1000266" -> "1000265"  [label="AST: "];
"1000267" -> "1000265"  [label="AST: "];
"1000269" -> "1000265"  [label="CFG: "];
"1000271" -> "1000265"  [label="CFG: "];
"1000265" -> "1000456"  [label="DDG: r != 0"];
"1000265" -> "1000456"  [label="DDG: r"];
"1000265" -> "1000268"  [label="DDG: r"];
"1000268" -> "1000264"  [label="AST: "];
"1000268" -> "1000269"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000456" -> "1000268"  [label="CFG: "];
"1000268" -> "1000456"  [label="DDG: <RET>"];
"1000269" -> "1000268"  [label="DDG: r"];
"1000272" -> "1000270"  [label="AST: "];
"1000272" -> "1000274"  [label="CFG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000274" -> "1000272"  [label="AST: "];
"1000270" -> "1000272"  [label="CFG: "];
"1000272" -> "1000456"  [label="DDG: OP_ATOMIC_END"];
"1000272" -> "1000456"  [label="DDG: reg"];
"1000272" -> "1000270"  [label="DDG: reg"];
"1000272" -> "1000270"  [label="DDG: OP_ATOMIC_END"];
"1000270" -> "1000245"  [label="AST: "];
"1000271" -> "1000270"  [label="AST: "];
"1000275" -> "1000270"  [label="CFG: "];
"1000270" -> "1000456"  [label="DDG: add_op(reg, OP_ATOMIC_END)"];
"1000270" -> "1000456"  [label="DDG: r"];
"1000270" -> "1000454"  [label="DDG: r"];
"1000454" -> "1000104"  [label="AST: "];
"1000454" -> "1000455"  [label="CFG: "];
"1000455" -> "1000454"  [label="AST: "];
"1000456" -> "1000454"  [label="CFG: "];
"1000454" -> "1000456"  [label="DDG: <RET>"];
"1000455" -> "1000454"  [label="DDG: r"];
"1000395" -> "1000454"  [label="DDG: r"];
"1000222" -> "1000454"  [label="DDG: r"];
"1000411" -> "1000454"  [label="DDG: r"];
"1000113" -> "1000454"  [label="DDG: r"];
"1000121" -> "1000454"  [label="DDG: r"];
"1000447" -> "1000454"  [label="DDG: r"];
}
