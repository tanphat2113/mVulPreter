digraph "0_oniguruma_c509265c5f6ae7264f7b8a8aae1cfa5fc59d108c@pointer" {
"1000295" [label="(Call,* Else = node->te.Else)"];
"1000351" [label="(Call,IS_NOT_NULL(Else))"];
"1000417" [label="(Call,IS_NOT_NULL(Else))"];
"1000423" [label="(Call,compile_length_tree(Else, reg))"];
"1000421" [label="(Call,else_len = compile_length_tree(Else, reg))"];
"1000437" [label="(Call,COP(reg)->jump.addr = else_len + SIZE_INC_OP)"];
"1000444" [label="(Call,else_len + SIZE_INC_OP)"];
"1000428" [label="(Call,add_op(reg, OP_JUMP))"];
"1000426" [label="(Call,r = add_op(reg, OP_JUMP))"];
"1000432" [label="(Call,r != 0)"];
"1000435" [label="(Return,return r;)"];
"1000440" [label="(Call,COP(reg))"];
"1000449" [label="(Call,compile_tree(Else, reg, env))"];
"1000447" [label="(Call,r = compile_tree(Else, reg, env))"];
"1000454" [label="(Return,return r;)"];
"1000424" [label="(Identifier,Else)"];
"1000438" [label="(Call,COP(reg)->jump.addr)"];
"1000354" [label="(Identifier,jump_len)"];
"1000296" [label="(Identifier,Else)"];
"1000391" [label="(Call,add_op(reg, OP_ATOMIC_END))"];
"1000449" [label="(Call,compile_tree(Else, reg, env))"];
"1000445" [label="(Identifier,else_len)"];
"1000452" [label="(Identifier,env)"];
"1000417" [label="(Call,IS_NOT_NULL(Else))"];
"1000103" [label="(MethodParameterIn,ScanEnv* env)"];
"1000426" [label="(Call,r = add_op(reg, OP_JUMP))"];
"1000436" [label="(Identifier,r)"];
"1000456" [label="(MethodReturn,RET)"];
"1000395" [label="(Call,r != 0)"];
"1000447" [label="(Call,r = compile_tree(Else, reg, env))"];
"1000270" [label="(Call,r = add_op(reg, OP_ATOMIC_END))"];
"1000422" [label="(Identifier,else_len)"];
"1000440" [label="(Call,COP(reg))"];
"1000113" [label="(Call,r = compile_bag_memory_node(node, reg, env))"];
"1000421" [label="(Call,else_len = compile_length_tree(Else, reg))"];
"1000411" [label="(Call,r != 0)"];
"1000351" [label="(Call,IS_NOT_NULL(Else))"];
"1000357" [label="(Identifier,r)"];
"1000406" [label="(Call,compile_tree(Then, reg, env))"];
"1000439" [label="(Call,COP(reg)->jump)"];
"1000222" [label="(Call,r != 0)"];
"1000297" [label="(Call,node->te.Else)"];
"1000442" [label="(FieldIdentifier,jump)"];
"1000425" [label="(Identifier,reg)"];
"1000431" [label="(ControlStructure,if (r != 0))"];
"1000429" [label="(Identifier,reg)"];
"1000448" [label="(Identifier,r)"];
"1000450" [label="(Identifier,Else)"];
"1000423" [label="(Call,compile_length_tree(Else, reg))"];
"1000379" [label="(Call,compile_tree(cond, reg, env))"];
"1000427" [label="(Identifier,r)"];
"1000433" [label="(Identifier,r)"];
"1000104" [label="(Block,)"];
"1000303" [label="(Identifier,r)"];
"1000102" [label="(MethodParameterIn,regex_t* reg)"];
"1000437" [label="(Call,COP(reg)->jump.addr = else_len + SIZE_INC_OP)"];
"1000295" [label="(Call,* Else = node->te.Else)"];
"1000430" [label="(Identifier,OP_JUMP)"];
"1000453" [label="(ControlStructure,break;)"];
"1000419" [label="(Block,)"];
"1000444" [label="(Call,else_len + SIZE_INC_OP)"];
"1000352" [label="(Identifier,Else)"];
"1000277" [label="(Block,)"];
"1000432" [label="(Call,r != 0)"];
"1000451" [label="(Identifier,reg)"];
"1000434" [label="(Literal,0)"];
"1000454" [label="(Return,return r;)"];
"1000455" [label="(Identifier,r)"];
"1000435" [label="(Return,return r;)"];
"1000416" [label="(ControlStructure,if (IS_NOT_NULL(Else)))"];
"1000121" [label="(Call,r = compile_option_node(node, reg, env))"];
"1000428" [label="(Call,add_op(reg, OP_JUMP))"];
"1000418" [label="(Identifier,Else)"];
"1000446" [label="(Identifier,SIZE_INC_OP)"];
"1000441" [label="(Identifier,reg)"];
"1000350" [label="(ControlStructure,if (IS_NOT_NULL(Else)))"];
"1000295" -> "1000277"  [label="AST: "];
"1000295" -> "1000297"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000297" -> "1000295"  [label="AST: "];
"1000303" -> "1000295"  [label="CFG: "];
"1000295" -> "1000456"  [label="DDG: Else"];
"1000295" -> "1000456"  [label="DDG: node->te.Else"];
"1000295" -> "1000351"  [label="DDG: Else"];
"1000351" -> "1000350"  [label="AST: "];
"1000351" -> "1000352"  [label="CFG: "];
"1000352" -> "1000351"  [label="AST: "];
"1000354" -> "1000351"  [label="CFG: "];
"1000357" -> "1000351"  [label="CFG: "];
"1000351" -> "1000456"  [label="DDG: IS_NOT_NULL(Else)"];
"1000351" -> "1000456"  [label="DDG: Else"];
"1000351" -> "1000417"  [label="DDG: Else"];
"1000417" -> "1000416"  [label="AST: "];
"1000417" -> "1000418"  [label="CFG: "];
"1000418" -> "1000417"  [label="AST: "];
"1000422" -> "1000417"  [label="CFG: "];
"1000453" -> "1000417"  [label="CFG: "];
"1000417" -> "1000456"  [label="DDG: Else"];
"1000417" -> "1000456"  [label="DDG: IS_NOT_NULL(Else)"];
"1000417" -> "1000423"  [label="DDG: Else"];
"1000423" -> "1000421"  [label="AST: "];
"1000423" -> "1000425"  [label="CFG: "];
"1000424" -> "1000423"  [label="AST: "];
"1000425" -> "1000423"  [label="AST: "];
"1000421" -> "1000423"  [label="CFG: "];
"1000423" -> "1000456"  [label="DDG: Else"];
"1000423" -> "1000421"  [label="DDG: Else"];
"1000423" -> "1000421"  [label="DDG: reg"];
"1000391" -> "1000423"  [label="DDG: reg"];
"1000406" -> "1000423"  [label="DDG: reg"];
"1000102" -> "1000423"  [label="DDG: reg"];
"1000423" -> "1000428"  [label="DDG: reg"];
"1000423" -> "1000449"  [label="DDG: Else"];
"1000421" -> "1000419"  [label="AST: "];
"1000422" -> "1000421"  [label="AST: "];
"1000427" -> "1000421"  [label="CFG: "];
"1000421" -> "1000456"  [label="DDG: compile_length_tree(Else, reg)"];
"1000421" -> "1000456"  [label="DDG: else_len"];
"1000421" -> "1000437"  [label="DDG: else_len"];
"1000421" -> "1000444"  [label="DDG: else_len"];
"1000437" -> "1000419"  [label="AST: "];
"1000437" -> "1000444"  [label="CFG: "];
"1000438" -> "1000437"  [label="AST: "];
"1000444" -> "1000437"  [label="AST: "];
"1000448" -> "1000437"  [label="CFG: "];
"1000437" -> "1000456"  [label="DDG: COP(reg)->jump.addr"];
"1000437" -> "1000456"  [label="DDG: else_len + SIZE_INC_OP"];
"1000444" -> "1000446"  [label="CFG: "];
"1000445" -> "1000444"  [label="AST: "];
"1000446" -> "1000444"  [label="AST: "];
"1000444" -> "1000456"  [label="DDG: SIZE_INC_OP"];
"1000444" -> "1000456"  [label="DDG: else_len"];
"1000428" -> "1000426"  [label="AST: "];
"1000428" -> "1000430"  [label="CFG: "];
"1000429" -> "1000428"  [label="AST: "];
"1000430" -> "1000428"  [label="AST: "];
"1000426" -> "1000428"  [label="CFG: "];
"1000428" -> "1000456"  [label="DDG: OP_JUMP"];
"1000428" -> "1000456"  [label="DDG: reg"];
"1000428" -> "1000426"  [label="DDG: reg"];
"1000428" -> "1000426"  [label="DDG: OP_JUMP"];
"1000102" -> "1000428"  [label="DDG: reg"];
"1000428" -> "1000440"  [label="DDG: reg"];
"1000426" -> "1000419"  [label="AST: "];
"1000427" -> "1000426"  [label="AST: "];
"1000433" -> "1000426"  [label="CFG: "];
"1000426" -> "1000456"  [label="DDG: add_op(reg, OP_JUMP)"];
"1000426" -> "1000432"  [label="DDG: r"];
"1000432" -> "1000431"  [label="AST: "];
"1000432" -> "1000434"  [label="CFG: "];
"1000433" -> "1000432"  [label="AST: "];
"1000434" -> "1000432"  [label="AST: "];
"1000436" -> "1000432"  [label="CFG: "];
"1000441" -> "1000432"  [label="CFG: "];
"1000432" -> "1000456"  [label="DDG: r != 0"];
"1000432" -> "1000456"  [label="DDG: r"];
"1000432" -> "1000435"  [label="DDG: r"];
"1000435" -> "1000431"  [label="AST: "];
"1000435" -> "1000436"  [label="CFG: "];
"1000436" -> "1000435"  [label="AST: "];
"1000456" -> "1000435"  [label="CFG: "];
"1000435" -> "1000456"  [label="DDG: <RET>"];
"1000436" -> "1000435"  [label="DDG: r"];
"1000440" -> "1000439"  [label="AST: "];
"1000440" -> "1000441"  [label="CFG: "];
"1000441" -> "1000440"  [label="AST: "];
"1000442" -> "1000440"  [label="CFG: "];
"1000102" -> "1000440"  [label="DDG: reg"];
"1000440" -> "1000449"  [label="DDG: reg"];
"1000449" -> "1000447"  [label="AST: "];
"1000449" -> "1000452"  [label="CFG: "];
"1000450" -> "1000449"  [label="AST: "];
"1000451" -> "1000449"  [label="AST: "];
"1000452" -> "1000449"  [label="AST: "];
"1000447" -> "1000449"  [label="CFG: "];
"1000449" -> "1000456"  [label="DDG: Else"];
"1000449" -> "1000456"  [label="DDG: env"];
"1000449" -> "1000456"  [label="DDG: reg"];
"1000449" -> "1000447"  [label="DDG: Else"];
"1000449" -> "1000447"  [label="DDG: reg"];
"1000449" -> "1000447"  [label="DDG: env"];
"1000102" -> "1000449"  [label="DDG: reg"];
"1000406" -> "1000449"  [label="DDG: env"];
"1000379" -> "1000449"  [label="DDG: env"];
"1000103" -> "1000449"  [label="DDG: env"];
"1000447" -> "1000419"  [label="AST: "];
"1000448" -> "1000447"  [label="AST: "];
"1000453" -> "1000447"  [label="CFG: "];
"1000447" -> "1000456"  [label="DDG: compile_tree(Else, reg, env)"];
"1000447" -> "1000456"  [label="DDG: r"];
"1000447" -> "1000454"  [label="DDG: r"];
"1000454" -> "1000104"  [label="AST: "];
"1000454" -> "1000455"  [label="CFG: "];
"1000455" -> "1000454"  [label="AST: "];
"1000456" -> "1000454"  [label="CFG: "];
"1000454" -> "1000456"  [label="DDG: <RET>"];
"1000455" -> "1000454"  [label="DDG: r"];
"1000395" -> "1000454"  [label="DDG: r"];
"1000222" -> "1000454"  [label="DDG: r"];
"1000411" -> "1000454"  [label="DDG: r"];
"1000113" -> "1000454"  [label="DDG: r"];
"1000121" -> "1000454"  [label="DDG: r"];
"1000270" -> "1000454"  [label="DDG: r"];
}
