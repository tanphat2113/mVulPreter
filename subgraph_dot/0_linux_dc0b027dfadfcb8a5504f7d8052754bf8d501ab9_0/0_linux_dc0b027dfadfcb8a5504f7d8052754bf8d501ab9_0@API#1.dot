digraph "0_linux_dc0b027dfadfcb8a5504f7d8052754bf8d501ab9_0@API" {
"1000107" [label="(Call,write_seqlock(&state->seqlock))"];
"1000146" [label="(Call,write_sequnlock(&state->seqlock))"];
"1000114" [label="(Identifier,deleg_stateid)"];
"1000106" [label="(Block,)"];
"1000108" [label="(Call,&state->seqlock)"];
"1000147" [label="(Call,&state->seqlock)"];
"1000107" [label="(Call,write_seqlock(&state->seqlock))"];
"1000155" [label="(Identifier,state)"];
"1000146" [label="(Call,write_sequnlock(&state->seqlock))"];
"1000168" [label="(MethodReturn,static void)"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000108"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000114" -> "1000107"  [label="CFG: "];
"1000107" -> "1000168"  [label="DDG: write_seqlock(&state->seqlock)"];
"1000107" -> "1000146"  [label="DDG: &state->seqlock"];
"1000146" -> "1000106"  [label="AST: "];
"1000146" -> "1000147"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000155" -> "1000146"  [label="CFG: "];
"1000146" -> "1000168"  [label="DDG: write_sequnlock(&state->seqlock)"];
"1000146" -> "1000168"  [label="DDG: &state->seqlock"];
}
