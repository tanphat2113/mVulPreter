digraph "0_linux_26b87c7881006311828bb0ab271a551a62dcceb4@pointer" {
"1000312" [label="(Call,sctp_chunk_free(chunk))"];
"1000191" [label="(Call,!chunk)"];
"1000122" [label="(Call,chunk = queue->in_progress)"];
"1000183" [label="(Call,chunk = queue->in_progress = NULL)"];
"1000185" [label="(Call,queue->in_progress = NULL)"];
"1000143" [label="(Call,chunk = queue->in_progress = NULL)"];
"1000145" [label="(Call,queue->in_progress = NULL)"];
"1000145" [label="(Call,queue->in_progress = NULL)"];
"1000233" [label="(Identifier,chunk)"];
"1000181" [label="(Call,sctp_chunk_free(chunk))"];
"1000123" [label="(Identifier,chunk)"];
"1000140" [label="(Block,)"];
"1000315" [label="(Identifier,chunk)"];
"1000131" [label="(Identifier,chunk)"];
"1000199" [label="(Identifier,queue)"];
"1000185" [label="(Call,queue->in_progress = NULL)"];
"1000186" [label="(Call,queue->in_progress)"];
"1000143" [label="(Call,chunk = queue->in_progress = NULL)"];
"1000149" [label="(Identifier,NULL)"];
"1000190" [label="(ControlStructure,if (!chunk))"];
"1000124" [label="(Call,queue->in_progress)"];
"1000141" [label="(Call,sctp_chunk_free(chunk))"];
"1000121" [label="(ControlStructure,if ((chunk = queue->in_progress)))"];
"1000180" [label="(Block,)"];
"1000189" [label="(Identifier,NULL)"];
"1000184" [label="(Identifier,chunk)"];
"1000122" [label="(Call,chunk = queue->in_progress)"];
"1000191" [label="(Call,!chunk)"];
"1000183" [label="(Call,chunk = queue->in_progress = NULL)"];
"1000312" [label="(Call,sctp_chunk_free(chunk))"];
"1000192" [label="(Identifier,chunk)"];
"1000146" [label="(Call,queue->in_progress)"];
"1000313" [label="(Identifier,chunk)"];
"1000144" [label="(Identifier,chunk)"];
"1000330" [label="(Call,pr_debug(\"+++sctp_inq_pop+++ chunk:%p[%s], length:%d, skb->len:%d\n\",\n\t\t chunk, sctp_cname(SCTP_ST_CHUNK(chunk->chunk_hdr->type)),\n\t\t ntohs(chunk->chunk_hdr->length), chunk->skb->len))"];
"1000353" [label="(MethodReturn,struct sctp_chunk *)"];
"1000311" [label="(Block,)"];
"1000312" -> "1000311"  [label="AST: "];
"1000312" -> "1000313"  [label="CFG: "];
"1000313" -> "1000312"  [label="AST: "];
"1000315" -> "1000312"  [label="CFG: "];
"1000312" -> "1000353"  [label="DDG: sctp_chunk_free(chunk)"];
"1000191" -> "1000312"  [label="DDG: chunk"];
"1000191" -> "1000190"  [label="AST: "];
"1000191" -> "1000192"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000199" -> "1000191"  [label="CFG: "];
"1000233" -> "1000191"  [label="CFG: "];
"1000191" -> "1000353"  [label="DDG: !chunk"];
"1000191" -> "1000353"  [label="DDG: chunk"];
"1000122" -> "1000191"  [label="DDG: chunk"];
"1000183" -> "1000191"  [label="DDG: chunk"];
"1000143" -> "1000191"  [label="DDG: chunk"];
"1000191" -> "1000330"  [label="DDG: chunk"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000131" -> "1000122"  [label="CFG: "];
"1000192" -> "1000122"  [label="CFG: "];
"1000122" -> "1000353"  [label="DDG: queue->in_progress"];
"1000122" -> "1000141"  [label="DDG: chunk"];
"1000122" -> "1000181"  [label="DDG: chunk"];
"1000183" -> "1000180"  [label="AST: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000185" -> "1000183"  [label="AST: "];
"1000192" -> "1000183"  [label="CFG: "];
"1000185" -> "1000183"  [label="DDG: queue->in_progress"];
"1000185" -> "1000189"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000189" -> "1000185"  [label="AST: "];
"1000185" -> "1000353"  [label="DDG: queue->in_progress"];
"1000185" -> "1000353"  [label="DDG: NULL"];
"1000143" -> "1000140"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000145" -> "1000143"  [label="AST: "];
"1000192" -> "1000143"  [label="CFG: "];
"1000145" -> "1000143"  [label="DDG: queue->in_progress"];
"1000145" -> "1000149"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000149" -> "1000145"  [label="AST: "];
"1000145" -> "1000353"  [label="DDG: NULL"];
"1000145" -> "1000353"  [label="DDG: queue->in_progress"];
}
