digraph "0_Android_e7142a0703bc93f75e213e96ebc19000022afed9@API" {
"1000276" [label="(Call,n = sizeof(buffer))"];
"1000282" [label="(Call,mDataSource->readAt(*offset, buffer, n))"];
"1000281" [label="(Call,mDataSource->readAt(*offset, buffer, n)\n < (ssize_t)n)"];
"1000287" [label="(Call,(ssize_t)n)"];
"1000293" [label="(Call,hexdump(buffer, n))"];
"1000298" [label="(Call,chunk_data_size = *offset + chunk_size - data_offset)"];
"1003264" [label="(Call,parseQTMetaVal(chunk_type, data_offset, chunk_data_size))"];
"1000300" [label="(Call,*offset + chunk_size - data_offset)"];
"1000331" [label="(Call,stop_offset = *offset + chunk_size)"];
"1000342" [label="(Call,*offset < stop_offset)"];
"1000363" [label="(Call,*offset != stop_offset)"];
"1000333" [label="(Call,*offset + chunk_size)"];
"1003268" [label="(Call,*offset += chunk_size)"];
"1000363" [label="(Call,*offset != stop_offset)"];
"1000282" [label="(Call,mDataSource->readAt(*offset, buffer, n))"];
"1000339" [label="(Identifier,offset)"];
"1000341" [label="(ControlStructure,while (*offset < stop_offset))"];
"1000333" [label="(Call,*offset + chunk_size)"];
"1000276" [label="(Call,n = sizeof(buffer))"];
"1000285" [label="(Identifier,buffer)"];
"1003272" [label="(ControlStructure,break;)"];
"1000271" [label="(Call,n > sizeof(buffer))"];
"1000342" [label="(Call,*offset < stop_offset)"];
"1000364" [label="(Call,*offset)"];
"1000371" [label="(Identifier,OK)"];
"1000369" [label="(Identifier,ERROR_MALFORMED)"];
"1000366" [label="(Identifier,stop_offset)"];
"1000278" [label="(Call,sizeof(buffer))"];
"1000298" [label="(Call,chunk_data_size = *offset + chunk_size - data_offset)"];
"1003270" [label="(Identifier,offset)"];
"1003267" [label="(Identifier,chunk_data_size)"];
"1000343" [label="(Call,*offset)"];
"1000283" [label="(Call,*offset)"];
"1003266" [label="(Identifier,data_offset)"];
"1003264" [label="(Call,parseQTMetaVal(chunk_type, data_offset, chunk_data_size))"];
"1000275" [label="(Block,)"];
"1000365" [label="(Identifier,offset)"];
"1000331" [label="(Call,stop_offset = *offset + chunk_size)"];
"1000289" [label="(Identifier,n)"];
"1000316" [label="(Call,chunk_type != FOURCC('c', 'o', 'v', 'r'))"];
"1000286" [label="(Identifier,n)"];
"1000303" [label="(Call,chunk_size - data_offset)"];
"1000294" [label="(Identifier,buffer)"];
"1000299" [label="(Identifier,chunk_data_size)"];
"1003275" [label="(MethodReturn,status_t)"];
"1000329" [label="(Block,)"];
"1000280" [label="(ControlStructure,if (mDataSource->readAt(*offset, buffer, n)\n < (ssize_t)n))"];
"1000293" [label="(Call,hexdump(buffer, n))"];
"1000277" [label="(Identifier,n)"];
"1000336" [label="(Identifier,chunk_size)"];
"1000300" [label="(Call,*offset + chunk_size - data_offset)"];
"1000281" [label="(Call,mDataSource->readAt(*offset, buffer, n)\n < (ssize_t)n)"];
"1000241" [label="(Block,)"];
"1000234" [label="(Call,(long long)*offset)"];
"1000309" [label="(Identifier,chunk_type)"];
"1003265" [label="(Identifier,chunk_type)"];
"1000292" [label="(Identifier,ERROR_IO)"];
"1000287" [label="(Call,(ssize_t)n)"];
"1000301" [label="(Call,*offset)"];
"1000345" [label="(Identifier,stop_offset)"];
"1000334" [label="(Call,*offset)"];
"1003258" [label="(Block,)"];
"1003269" [label="(Call,*offset)"];
"1000349" [label="(Identifier,err)"];
"1000295" [label="(Identifier,n)"];
"1000337" [label="(Call,*offset = data_offset)"];
"1003263" [label="(Block,)"];
"1000362" [label="(ControlStructure,if (*offset != stop_offset))"];
"1003268" [label="(Call,*offset += chunk_size)"];
"1003271" [label="(Identifier,chunk_size)"];
"1000332" [label="(Identifier,stop_offset)"];
"1000106" [label="(Block,)"];
"1000308" [label="(Call,chunk_type != FOURCC('c', 'p', 'r', 't'))"];
"1000284" [label="(Identifier,offset)"];
"1000276" -> "1000275"  [label="AST: "];
"1000276" -> "1000278"  [label="CFG: "];
"1000277" -> "1000276"  [label="AST: "];
"1000278" -> "1000276"  [label="AST: "];
"1000284" -> "1000276"  [label="CFG: "];
"1000276" -> "1000282"  [label="DDG: n"];
"1000282" -> "1000281"  [label="AST: "];
"1000282" -> "1000286"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000285" -> "1000282"  [label="AST: "];
"1000286" -> "1000282"  [label="AST: "];
"1000288" -> "1000282"  [label="CFG: "];
"1000282" -> "1003275"  [label="DDG: buffer"];
"1000282" -> "1003275"  [label="DDG: *offset"];
"1000282" -> "1000281"  [label="DDG: *offset"];
"1000282" -> "1000281"  [label="DDG: buffer"];
"1000282" -> "1000281"  [label="DDG: n"];
"1000234" -> "1000282"  [label="DDG: *offset"];
"1000271" -> "1000282"  [label="DDG: n"];
"1000282" -> "1000287"  [label="DDG: n"];
"1000282" -> "1000293"  [label="DDG: buffer"];
"1000282" -> "1000298"  [label="DDG: *offset"];
"1000282" -> "1000300"  [label="DDG: *offset"];
"1000282" -> "1000331"  [label="DDG: *offset"];
"1000282" -> "1000333"  [label="DDG: *offset"];
"1000282" -> "1003268"  [label="DDG: *offset"];
"1000281" -> "1000280"  [label="AST: "];
"1000281" -> "1000287"  [label="CFG: "];
"1000287" -> "1000281"  [label="AST: "];
"1000292" -> "1000281"  [label="CFG: "];
"1000294" -> "1000281"  [label="CFG: "];
"1000281" -> "1003275"  [label="DDG: mDataSource->readAt(*offset, buffer, n)"];
"1000281" -> "1003275"  [label="DDG: (ssize_t)n"];
"1000281" -> "1003275"  [label="DDG: mDataSource->readAt(*offset, buffer, n)\n < (ssize_t)n"];
"1000287" -> "1000281"  [label="DDG: n"];
"1000287" -> "1000289"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000287"  [label="AST: "];
"1000287" -> "1003275"  [label="DDG: n"];
"1000287" -> "1000293"  [label="DDG: n"];
"1000293" -> "1000241"  [label="AST: "];
"1000293" -> "1000295"  [label="CFG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000295" -> "1000293"  [label="AST: "];
"1000299" -> "1000293"  [label="CFG: "];
"1000293" -> "1003275"  [label="DDG: buffer"];
"1000293" -> "1003275"  [label="DDG: hexdump(buffer, n)"];
"1000293" -> "1003275"  [label="DDG: n"];
"1000298" -> "1000106"  [label="AST: "];
"1000298" -> "1000300"  [label="CFG: "];
"1000299" -> "1000298"  [label="AST: "];
"1000300" -> "1000298"  [label="AST: "];
"1000309" -> "1000298"  [label="CFG: "];
"1000298" -> "1003275"  [label="DDG: chunk_data_size"];
"1000298" -> "1003275"  [label="DDG: *offset + chunk_size - data_offset"];
"1000234" -> "1000298"  [label="DDG: *offset"];
"1000303" -> "1000298"  [label="DDG: chunk_size"];
"1000303" -> "1000298"  [label="DDG: data_offset"];
"1000298" -> "1003264"  [label="DDG: chunk_data_size"];
"1003264" -> "1003263"  [label="AST: "];
"1003264" -> "1003267"  [label="CFG: "];
"1003265" -> "1003264"  [label="AST: "];
"1003266" -> "1003264"  [label="AST: "];
"1003267" -> "1003264"  [label="AST: "];
"1003270" -> "1003264"  [label="CFG: "];
"1003264" -> "1003275"  [label="DDG: data_offset"];
"1003264" -> "1003275"  [label="DDG: chunk_type"];
"1003264" -> "1003275"  [label="DDG: chunk_data_size"];
"1003264" -> "1003275"  [label="DDG: parseQTMetaVal(chunk_type, data_offset, chunk_data_size)"];
"1000308" -> "1003264"  [label="DDG: chunk_type"];
"1000316" -> "1003264"  [label="DDG: chunk_type"];
"1000303" -> "1003264"  [label="DDG: data_offset"];
"1000300" -> "1000303"  [label="CFG: "];
"1000301" -> "1000300"  [label="AST: "];
"1000303" -> "1000300"  [label="AST: "];
"1000300" -> "1003275"  [label="DDG: chunk_size - data_offset"];
"1000234" -> "1000300"  [label="DDG: *offset"];
"1000303" -> "1000300"  [label="DDG: chunk_size"];
"1000303" -> "1000300"  [label="DDG: data_offset"];
"1000331" -> "1000329"  [label="AST: "];
"1000331" -> "1000333"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000333" -> "1000331"  [label="AST: "];
"1000339" -> "1000331"  [label="CFG: "];
"1000331" -> "1003275"  [label="DDG: *offset + chunk_size"];
"1000234" -> "1000331"  [label="DDG: *offset"];
"1000303" -> "1000331"  [label="DDG: chunk_size"];
"1000331" -> "1000342"  [label="DDG: stop_offset"];
"1000342" -> "1000341"  [label="AST: "];
"1000342" -> "1000345"  [label="CFG: "];
"1000343" -> "1000342"  [label="AST: "];
"1000345" -> "1000342"  [label="AST: "];
"1000349" -> "1000342"  [label="CFG: "];
"1000365" -> "1000342"  [label="CFG: "];
"1000342" -> "1003275"  [label="DDG: *offset"];
"1000342" -> "1003275"  [label="DDG: *offset < stop_offset"];
"1000342" -> "1003275"  [label="DDG: stop_offset"];
"1000337" -> "1000342"  [label="DDG: *offset"];
"1000342" -> "1000363"  [label="DDG: *offset"];
"1000342" -> "1000363"  [label="DDG: stop_offset"];
"1000363" -> "1000362"  [label="AST: "];
"1000363" -> "1000366"  [label="CFG: "];
"1000364" -> "1000363"  [label="AST: "];
"1000366" -> "1000363"  [label="AST: "];
"1000369" -> "1000363"  [label="CFG: "];
"1000371" -> "1000363"  [label="CFG: "];
"1000363" -> "1003275"  [label="DDG: *offset"];
"1000363" -> "1003275"  [label="DDG: stop_offset"];
"1000363" -> "1003275"  [label="DDG: *offset != stop_offset"];
"1000333" -> "1000336"  [label="CFG: "];
"1000334" -> "1000333"  [label="AST: "];
"1000336" -> "1000333"  [label="AST: "];
"1000333" -> "1003275"  [label="DDG: chunk_size"];
"1000234" -> "1000333"  [label="DDG: *offset"];
"1000303" -> "1000333"  [label="DDG: chunk_size"];
"1003268" -> "1003258"  [label="AST: "];
"1003268" -> "1003271"  [label="CFG: "];
"1003269" -> "1003268"  [label="AST: "];
"1003271" -> "1003268"  [label="AST: "];
"1003272" -> "1003268"  [label="CFG: "];
"1003268" -> "1003275"  [label="DDG: chunk_size"];
"1003268" -> "1003275"  [label="DDG: *offset"];
"1000303" -> "1003268"  [label="DDG: chunk_size"];
"1000234" -> "1003268"  [label="DDG: *offset"];
}
