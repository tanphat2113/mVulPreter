digraph "0_Chrome_f96f1f27d9bc16b1a045c4fb5c8a8a82f73ece59@array" {
"1000137" [label="(Call,std::find(&kValidOutputRates[0],\n                &kValidOutputRates[0] + arraysize(kValidOutputRates),\n                sample_rate))"];
"1000147" [label="(Call,arraysize(kValidOutputRates))"];
"1000131" [label="(Call,UMA_HISTOGRAM_ENUMERATION(\"WebRTC.AudioOutputSampleRate\",\n                            sample_rate, media::kUnexpectedAudioSampleRate))"];
"1000128" [label="(Call,\"Audio output hardware sample rate: \" << sample_rate)"];
"1000122" [label="(Call,sample_rate = GetAudioOutputSampleRate())"];
"1000136" [label="(Call,std::find(&kValidOutputRates[0],\n                &kValidOutputRates[0] + arraysize(kValidOutputRates),\n                sample_rate) ==\n                    &kValidOutputRates[arraysize(kValidOutputRates)])"];
"1000159" [label="(Call,sample_rate << \" is not a supported output rate.\")"];
"1000156" [label="(Call,DLOG(ERROR) << sample_rate << \" is not a supported output rate.\")"];
"1000177" [label="(Call,sample_rate == 96000)"];
"1000176" [label="(Call,sample_rate == 96000 || sample_rate == 48000)"];
"1000180" [label="(Call,sample_rate == 48000)"];
"1000186" [label="(Call,sample_rate / 100)"];
"1000184" [label="(Call,buffer_size = (sample_rate / 100))"];
"1000203" [label="(Call,3 * buffer_size)"];
"1000201" [label="(Call,buffer_size = 3 * buffer_size)"];
"1000212" [label="(Call,params_.Reset(media::AudioParameters::AUDIO_PCM_LOW_LATENCY, channel_layout,\n                sample_rate, 16, buffer_size))"];
"1000235" [label="(Call,UMA_HISTOGRAM_ENUMERATION(\"WebRTC.AudioOutputChannelLayout\",\n                            channel_layout, media::CHANNEL_LAYOUT_MAX))"];
"1000239" [label="(Call,UMA_HISTOGRAM_ENUMERATION(\"WebRTC.AudioOutputFramesPerBuffer\",\n                            buffer_size, kUnexpectedAudioBufferSize))"];
"1000243" [label="(Call,AddHistogramFramesPerBuffer(buffer_size))"];
"1000136" [label="(Call,std::find(&kValidOutputRates[0],\n                &kValidOutputRates[0] + arraysize(kValidOutputRates),\n                sample_rate) ==\n                    &kValidOutputRates[arraysize(kValidOutputRates)])"];
"1000150" [label="(Call,&kValidOutputRates[arraysize(kValidOutputRates)])"];
"1000213" [label="(Identifier,media::AudioParameters::AUDIO_PCM_LOW_LATENCY)"];
"1000180" [label="(Call,sample_rate == 48000)"];
"1000200" [label="(Block,)"];
"1000205" [label="(Identifier,buffer_size)"];
"1000242" [label="(Identifier,kUnexpectedAudioBufferSize)"];
"1000185" [label="(Identifier,buffer_size)"];
"1000153" [label="(Call,arraysize(kValidOutputRates))"];
"1000135" [label="(ControlStructure,if (std::find(&kValidOutputRates[0],\n                &kValidOutputRates[0] + arraysize(kValidOutputRates),\n                sample_rate) ==\n                    &kValidOutputRates[arraysize(kValidOutputRates)]))"];
"1000159" [label="(Call,sample_rate << \" is not a supported output rate.\")"];
"1000176" [label="(Call,sample_rate == 96000 || sample_rate == 48000)"];
"1000181" [label="(Identifier,sample_rate)"];
"1000124" [label="(Call,GetAudioOutputSampleRate())"];
"1000177" [label="(Call,sample_rate == 96000)"];
"1000179" [label="(Literal,96000)"];
"1000163" [label="(Identifier,false)"];
"1000198" [label="(Call,base::win::GetVersion())"];
"1000133" [label="(Identifier,sample_rate)"];
"1000161" [label="(Literal,\" is not a supported output rate.\")"];
"1000191" [label="(Call,buffer_size = 2 * 440)"];
"1000183" [label="(Block,)"];
"1000103" [label="(Block,)"];
"1000214" [label="(Identifier,channel_layout)"];
"1000235" [label="(Call,UMA_HISTOGRAM_ENUMERATION(\"WebRTC.AudioOutputChannelLayout\",\n                            channel_layout, media::CHANNEL_LAYOUT_MAX))"];
"1000134" [label="(Identifier,media::kUnexpectedAudioSampleRate)"];
"1000158" [label="(Identifier,ERROR)"];
"1000246" [label="(Identifier,true)"];
"1000138" [label="(Call,&kValidOutputRates[0])"];
"1000243" [label="(Call,AddHistogramFramesPerBuffer(buffer_size))"];
"1000201" [label="(Call,buffer_size = 3 * buffer_size)"];
"1000129" [label="(Literal,\"Audio output hardware sample rate: \")"];
"1000187" [label="(Identifier,sample_rate)"];
"1000155" [label="(Block,)"];
"1000240" [label="(Literal,\"WebRTC.AudioOutputFramesPerBuffer\")"];
"1000123" [label="(Identifier,sample_rate)"];
"1000127" [label="(Literal,1)"];
"1000178" [label="(Identifier,sample_rate)"];
"1000239" [label="(Call,UMA_HISTOGRAM_ENUMERATION(\"WebRTC.AudioOutputFramesPerBuffer\",\n                            buffer_size, kUnexpectedAudioBufferSize))"];
"1000147" [label="(Call,arraysize(kValidOutputRates))"];
"1000148" [label="(Identifier,kValidOutputRates)"];
"1000166" [label="(Identifier,channel_layout)"];
"1000186" [label="(Call,sample_rate / 100)"];
"1000192" [label="(Identifier,buffer_size)"];
"1000215" [label="(Identifier,sample_rate)"];
"1000244" [label="(Identifier,buffer_size)"];
"1000237" [label="(Identifier,channel_layout)"];
"1000131" [label="(Call,UMA_HISTOGRAM_ENUMERATION(\"WebRTC.AudioOutputSampleRate\",\n                            sample_rate, media::kUnexpectedAudioSampleRate))"];
"1000247" [label="(MethodReturn,bool)"];
"1000128" [label="(Call,\"Audio output hardware sample rate: \" << sample_rate)"];
"1000217" [label="(Identifier,buffer_size)"];
"1000157" [label="(Call,DLOG(ERROR))"];
"1000236" [label="(Literal,\"WebRTC.AudioOutputChannelLayout\")"];
"1000175" [label="(ControlStructure,if (sample_rate == 96000 || sample_rate == 48000))"];
"1000188" [label="(Literal,100)"];
"1000202" [label="(Identifier,buffer_size)"];
"1000220" [label="(Identifier,int16)"];
"1000238" [label="(Identifier,media::CHANNEL_LAYOUT_MAX)"];
"1000140" [label="(Identifier,kValidOutputRates)"];
"1000160" [label="(Identifier,sample_rate)"];
"1000142" [label="(Call,&kValidOutputRates[0] + arraysize(kValidOutputRates))"];
"1000125" [label="(Call,DVLOG(1) << \"Audio output hardware sample rate: \" << sample_rate)"];
"1000122" [label="(Call,sample_rate = GetAudioOutputSampleRate())"];
"1000149" [label="(Identifier,sample_rate)"];
"1000137" [label="(Call,std::find(&kValidOutputRates[0],\n                &kValidOutputRates[0] + arraysize(kValidOutputRates),\n                sample_rate))"];
"1000212" [label="(Call,params_.Reset(media::AudioParameters::AUDIO_PCM_LOW_LATENCY, channel_layout,\n                sample_rate, 16, buffer_size))"];
"1000182" [label="(Literal,48000)"];
"1000172" [label="(Call,channel_layout = media::CHANNEL_LAYOUT_STEREO)"];
"1000208" [label="(Identifier,WARNING)"];
"1000184" [label="(Call,buffer_size = (sample_rate / 100))"];
"1000203" [label="(Call,3 * buffer_size)"];
"1000156" [label="(Call,DLOG(ERROR) << sample_rate << \" is not a supported output rate.\")"];
"1000216" [label="(Literal,16)"];
"1000241" [label="(Identifier,buffer_size)"];
"1000130" [label="(Identifier,sample_rate)"];
"1000204" [label="(Literal,3)"];
"1000152" [label="(Identifier,kValidOutputRates)"];
"1000132" [label="(Literal,\"WebRTC.AudioOutputSampleRate\")"];
"1000137" -> "1000136"  [label="AST: "];
"1000137" -> "1000149"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000142" -> "1000137"  [label="AST: "];
"1000149" -> "1000137"  [label="AST: "];
"1000152" -> "1000137"  [label="CFG: "];
"1000137" -> "1000247"  [label="DDG: "];
"1000137" -> "1000247"  [label="DDG: "];
"1000137" -> "1000136"  [label="DDG: "];
"1000137" -> "1000136"  [label="DDG: "];
"1000137" -> "1000136"  [label="DDG: "];
"1000147" -> "1000137"  [label="DDG: "];
"1000131" -> "1000137"  [label="DDG: "];
"1000137" -> "1000159"  [label="DDG: "];
"1000137" -> "1000177"  [label="DDG: "];
"1000147" -> "1000142"  [label="AST: "];
"1000147" -> "1000148"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000142" -> "1000147"  [label="CFG: "];
"1000147" -> "1000142"  [label="DDG: "];
"1000147" -> "1000153"  [label="DDG: "];
"1000131" -> "1000103"  [label="AST: "];
"1000131" -> "1000134"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="AST: "];
"1000134" -> "1000131"  [label="AST: "];
"1000140" -> "1000131"  [label="CFG: "];
"1000131" -> "1000247"  [label="DDG: "];
"1000131" -> "1000247"  [label="DDG: "];
"1000128" -> "1000131"  [label="DDG: "];
"1000128" -> "1000125"  [label="AST: "];
"1000128" -> "1000130"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000128"  [label="AST: "];
"1000125" -> "1000128"  [label="CFG: "];
"1000128" -> "1000125"  [label="DDG: "];
"1000128" -> "1000125"  [label="DDG: "];
"1000122" -> "1000128"  [label="DDG: "];
"1000122" -> "1000103"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000127" -> "1000122"  [label="CFG: "];
"1000122" -> "1000247"  [label="DDG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000150"  [label="CFG: "];
"1000150" -> "1000136"  [label="AST: "];
"1000158" -> "1000136"  [label="CFG: "];
"1000166" -> "1000136"  [label="CFG: "];
"1000136" -> "1000247"  [label="DDG: "];
"1000136" -> "1000247"  [label="DDG: "];
"1000136" -> "1000247"  [label="DDG: "];
"1000159" -> "1000156"  [label="AST: "];
"1000159" -> "1000161"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000161" -> "1000159"  [label="AST: "];
"1000156" -> "1000159"  [label="CFG: "];
"1000159" -> "1000247"  [label="DDG: "];
"1000159" -> "1000156"  [label="DDG: "];
"1000159" -> "1000156"  [label="DDG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000157" -> "1000156"  [label="AST: "];
"1000163" -> "1000156"  [label="CFG: "];
"1000156" -> "1000247"  [label="DDG: "];
"1000156" -> "1000247"  [label="DDG: "];
"1000156" -> "1000247"  [label="DDG: "];
"1000157" -> "1000156"  [label="DDG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000177" -> "1000179"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000179" -> "1000177"  [label="AST: "];
"1000181" -> "1000177"  [label="CFG: "];
"1000176" -> "1000177"  [label="CFG: "];
"1000177" -> "1000176"  [label="DDG: "];
"1000177" -> "1000176"  [label="DDG: "];
"1000177" -> "1000180"  [label="DDG: "];
"1000177" -> "1000186"  [label="DDG: "];
"1000177" -> "1000212"  [label="DDG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000176" -> "1000180"  [label="CFG: "];
"1000180" -> "1000176"  [label="AST: "];
"1000185" -> "1000176"  [label="CFG: "];
"1000192" -> "1000176"  [label="CFG: "];
"1000176" -> "1000247"  [label="DDG: "];
"1000176" -> "1000247"  [label="DDG: "];
"1000176" -> "1000247"  [label="DDG: "];
"1000180" -> "1000176"  [label="DDG: "];
"1000180" -> "1000176"  [label="DDG: "];
"1000180" -> "1000182"  [label="CFG: "];
"1000181" -> "1000180"  [label="AST: "];
"1000182" -> "1000180"  [label="AST: "];
"1000180" -> "1000186"  [label="DDG: "];
"1000180" -> "1000212"  [label="DDG: "];
"1000186" -> "1000184"  [label="AST: "];
"1000186" -> "1000188"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000188" -> "1000186"  [label="AST: "];
"1000184" -> "1000186"  [label="CFG: "];
"1000186" -> "1000184"  [label="DDG: "];
"1000186" -> "1000184"  [label="DDG: "];
"1000186" -> "1000212"  [label="DDG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000185" -> "1000184"  [label="AST: "];
"1000198" -> "1000184"  [label="CFG: "];
"1000184" -> "1000247"  [label="DDG: "];
"1000184" -> "1000203"  [label="DDG: "];
"1000184" -> "1000212"  [label="DDG: "];
"1000203" -> "1000201"  [label="AST: "];
"1000203" -> "1000205"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000203"  [label="AST: "];
"1000201" -> "1000203"  [label="CFG: "];
"1000203" -> "1000201"  [label="DDG: "];
"1000203" -> "1000201"  [label="DDG: "];
"1000191" -> "1000203"  [label="DDG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000202" -> "1000201"  [label="AST: "];
"1000208" -> "1000201"  [label="CFG: "];
"1000201" -> "1000247"  [label="DDG: "];
"1000201" -> "1000212"  [label="DDG: "];
"1000212" -> "1000103"  [label="AST: "];
"1000212" -> "1000217"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000214" -> "1000212"  [label="AST: "];
"1000215" -> "1000212"  [label="AST: "];
"1000216" -> "1000212"  [label="AST: "];
"1000217" -> "1000212"  [label="AST: "];
"1000220" -> "1000212"  [label="CFG: "];
"1000212" -> "1000247"  [label="DDG: "];
"1000212" -> "1000247"  [label="DDG: "];
"1000212" -> "1000247"  [label="DDG: "];
"1000172" -> "1000212"  [label="DDG: "];
"1000191" -> "1000212"  [label="DDG: "];
"1000212" -> "1000235"  [label="DDG: "];
"1000212" -> "1000239"  [label="DDG: "];
"1000235" -> "1000103"  [label="AST: "];
"1000235" -> "1000238"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="AST: "];
"1000238" -> "1000235"  [label="AST: "];
"1000240" -> "1000235"  [label="CFG: "];
"1000235" -> "1000247"  [label="DDG: "];
"1000235" -> "1000247"  [label="DDG: "];
"1000235" -> "1000247"  [label="DDG: "];
"1000239" -> "1000103"  [label="AST: "];
"1000239" -> "1000242"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="AST: "];
"1000242" -> "1000239"  [label="AST: "];
"1000244" -> "1000239"  [label="CFG: "];
"1000239" -> "1000247"  [label="DDG: "];
"1000239" -> "1000247"  [label="DDG: "];
"1000239" -> "1000243"  [label="DDG: "];
"1000243" -> "1000103"  [label="AST: "];
"1000243" -> "1000244"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000246" -> "1000243"  [label="CFG: "];
"1000243" -> "1000247"  [label="DDG: "];
"1000243" -> "1000247"  [label="DDG: "];
}
