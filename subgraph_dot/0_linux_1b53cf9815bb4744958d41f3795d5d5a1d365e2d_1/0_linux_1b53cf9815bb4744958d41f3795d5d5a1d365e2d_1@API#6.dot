digraph "0_linux_1b53cf9815bb4744958d41f3795d5d5a1d365e2d_1@API" {
"1000198" [label="(Call,res != sizeof(ctx))"];
"1000156" [label="(Call,res < 0)"];
"1000147" [label="(Call,res = inode->i_sb->s_cop->get_context(inode, &ctx, sizeof(ctx)))"];
"1000149" [label="(Call,inode->i_sb->s_cop->get_context(inode, &ctx, sizeof(ctx)))"];
"1000103" [label="(MethodParameterIn,struct inode *inode)"];
"1000157" [label="(Identifier,res)"];
"1000200" [label="(Call,sizeof(ctx))"];
"1000153" [label="(Call,sizeof(ctx))"];
"1000156" [label="(Call,res < 0)"];
"1000103" [label="(MethodParameterIn,struct inode *inode)"];
"1000163" [label="(Call,fscrypt_dummy_context_enabled(inode))"];
"1000155" [label="(ControlStructure,if (res < 0))"];
"1000150" [label="(Identifier,inode)"];
"1000151" [label="(Call,&ctx)"];
"1000164" [label="(Identifier,inode)"];
"1000147" [label="(Call,res = inode->i_sb->s_cop->get_context(inode, &ctx, sizeof(ctx)))"];
"1000169" [label="(Call,memset(&ctx, 0, sizeof(ctx)))"];
"1000209" [label="(Identifier,ctx)"];
"1000165" [label="(Call,inode->i_sb->s_cop->is_encrypted(inode))"];
"1000198" [label="(Call,res != sizeof(ctx))"];
"1000274" [label="(Call,determine_cipher_type(crypt_info, inode, &cipher_str, &keysize))"];
"1000197" [label="(ControlStructure,if (res != sizeof(ctx)))"];
"1000149" [label="(Call,inode->i_sb->s_cop->get_context(inode, &ctx, sizeof(ctx)))"];
"1000104" [label="(Block,)"];
"1000199" [label="(Identifier,res)"];
"1000158" [label="(Literal,0)"];
"1000167" [label="(Return,return res;)"];
"1000148" [label="(Identifier,res)"];
"1000419" [label="(MethodReturn,int)"];
"1000299" [label="(Call,validate_user_key(crypt_info, &ctx, raw_key, FS_KEY_DESC_PREFIX))"];
"1000205" [label="(Identifier,EINVAL)"];
"1000198" -> "1000197"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000205" -> "1000198"  [label="CFG: "];
"1000209" -> "1000198"  [label="CFG: "];
"1000198" -> "1000419"  [label="DDG: res"];
"1000198" -> "1000419"  [label="DDG: res != sizeof(ctx)"];
"1000156" -> "1000198"  [label="DDG: res"];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000158"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000158" -> "1000156"  [label="AST: "];
"1000164" -> "1000156"  [label="CFG: "];
"1000199" -> "1000156"  [label="CFG: "];
"1000156" -> "1000419"  [label="DDG: res"];
"1000156" -> "1000419"  [label="DDG: res < 0"];
"1000147" -> "1000156"  [label="DDG: res"];
"1000156" -> "1000167"  [label="DDG: res"];
"1000147" -> "1000104"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000157" -> "1000147"  [label="CFG: "];
"1000147" -> "1000419"  [label="DDG: inode->i_sb->s_cop->get_context(inode, &ctx, sizeof(ctx))"];
"1000149" -> "1000147"  [label="DDG: inode"];
"1000149" -> "1000147"  [label="DDG: &ctx"];
"1000149" -> "1000153"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000153" -> "1000149"  [label="AST: "];
"1000149" -> "1000419"  [label="DDG: &ctx"];
"1000149" -> "1000419"  [label="DDG: inode"];
"1000103" -> "1000149"  [label="DDG: inode"];
"1000149" -> "1000163"  [label="DDG: inode"];
"1000149" -> "1000169"  [label="DDG: &ctx"];
"1000149" -> "1000274"  [label="DDG: inode"];
"1000149" -> "1000299"  [label="DDG: &ctx"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000419"  [label="DDG: inode"];
"1000103" -> "1000163"  [label="DDG: inode"];
"1000103" -> "1000165"  [label="DDG: inode"];
"1000103" -> "1000274"  [label="DDG: inode"];
}
