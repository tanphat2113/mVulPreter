digraph "1_openssl_d81a1600588b726c2bdccda7efad3cc7a87d6245@array" {
"1000383" [label="(Call,(char *)&(p[s->init_num]))"];
"1000168" [label="(Call,(char *)&(p[s->init_num]))"];
"1000381" [label="(Call,ssl2_read(s, (char *)&(p[s->init_num]), n))"];
"1000379" [label="(Call,i = ssl2_read(s, (char *)&(p[s->init_num]), n))"];
"1000393" [label="(Call,i != n)"];
"1000397" [label="(Call,ssl2_part_read(s, SSL_F_GET_CLIENT_HELLO, i))"];
"1000396" [label="(Return,return (ssl2_part_read(s, SSL_F_GET_CLIENT_HELLO, i));)"];
"1000406" [label="(Call,s->msg_callback(0, s->version, 0, p, (size_t)len, s,\n                        s->msg_callback_arg))"];
"1000420" [label="(Call,p += 9)"];
"1000561" [label="(Call,ssl_bytes_to_cipher_list(s, p, s->s2->tmp.cipher_spec_length,\n                                      &s->session->ciphers))"];
"1000559" [label="(Call,cs = ssl_bytes_to_cipher_list(s, p, s->s2->tmp.cipher_spec_length,\n                                      &s->session->ciphers))"];
"1000578" [label="(Call,cs == NULL)"];
"1000598" [label="(Call,prio == NULL)"];
"1000619" [label="(Call,sk_SSL_CIPHER_num(prio))"];
"1000617" [label="(Call,z < sk_SSL_CIPHER_num(prio))"];
"1000628" [label="(Call,sk_SSL_CIPHER_value(prio, z))"];
"1000621" [label="(Call,z++)"];
"1000626" [label="(Call,sk_SSL_CIPHER_find(allow, sk_SSL_CIPHER_value(prio, z)))"];
"1000625" [label="(Call,sk_SSL_CIPHER_find(allow, sk_SSL_CIPHER_value(prio, z)) < 0)"];
"1000635" [label="(Call,sk_SSL_CIPHER_delete(prio, z))"];
"1000633" [label="(Call,(void)sk_SSL_CIPHER_delete(prio, z))"];
"1000638" [label="(Call,z--)"];
"1000647" [label="(Call,s->session->ciphers = prio)"];
"1000602" [label="(Call,allow = cs)"];
"1000607" [label="(Call,prio = cs)"];
"1000584" [label="(Call,SSL_get_ciphers(s))"];
"1000582" [label="(Call,cl = SSL_get_ciphers(s))"];
"1000595" [label="(Call,sk_SSL_CIPHER_dup(cl))"];
"1000593" [label="(Call,prio = sk_SSL_CIPHER_dup(cl))"];
"1000610" [label="(Call,allow = cl)"];
"1000668" [label="(Call,ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR))"];
"1000641" [label="(Call,sk_SSL_CIPHER_free(s->session->ciphers))"];
"1000677" [label="(Call,memcpy(s->s2->challenge, p, (unsigned int)s->s2->challenge_length))"];
"1000444" [label="(Call,ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR))"];
"1000466" [label="(Call,ssl_get_new_session(s, 1))"];
"1000465" [label="(Call,!ssl_get_new_session(s, 1))"];
"1000470" [label="(Call,ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR))"];
"1000480" [label="(Call,ssl_get_prev_session(s, &(p[s->s2->tmp.cipher_spec_length]),\n                                 s->s2->tmp.session_id_length, NULL))"];
"1000478" [label="(Call,i = ssl_get_prev_session(s, &(p[s->s2->tmp.cipher_spec_length]),\n                                 s->s2->tmp.session_id_length, NULL))"];
"1000501" [label="(Call,i == 1)"];
"1000512" [label="(Call,i == -1)"];
"1000517" [label="(Call,ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR))"];
"1000526" [label="(Call,s->cert == NULL)"];
"1000532" [label="(Call,ssl2_return_error(s, SSL2_PE_NO_CERTIFICATE))"];
"1000543" [label="(Call,ssl_get_new_session(s, 1))"];
"1000542" [label="(Call,!ssl_get_new_session(s, 1))"];
"1000547" [label="(Call,ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR))"];
"1000396" [label="(Return,return (ssl2_part_read(s, SSL_F_GET_CLIENT_HELLO, i));)"];
"1000641" [label="(Call,sk_SSL_CIPHER_free(s->session->ciphers))"];
"1000381" [label="(Call,ssl2_read(s, (char *)&(p[s->init_num]), n))"];
"1000624" [label="(ControlStructure,if (sk_SSL_CIPHER_find(allow, sk_SSL_CIPHER_value(prio, z)) < 0))"];
"1000668" [label="(Call,ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR))"];
"1000465" [label="(Call,!ssl_get_new_session(s, 1))"];
"1000500" [label="(ControlStructure,if (i == 1))"];
"1000640" [label="(Call,*\n             sk_SSL_CIPHER_free(s->session->ciphers))"];
"1000481" [label="(Identifier,s)"];
"1000607" [label="(Call,prio = cs)"];
"1000468" [label="(Literal,1)"];
"1000637" [label="(Identifier,z)"];
"1000330" [label="(Call,(unsigned long)s->s2->tmp.cipher_spec_length)"];
"1000613" [label="(ControlStructure,for (z = 0; z < sk_SSL_CIPHER_num(prio); z++))"];
"1000549" [label="(Identifier,SSL2_PE_UNDEFINED_ERROR)"];
"1000692" [label="(Literal,1)"];
"1000472" [label="(Identifier,SSL2_PE_UNDEFINED_ERROR)"];
"1000672" [label="(Identifier,SSL_F_GET_CLIENT_HELLO)"];
"1000177" [label="(Literal,9)"];
"1000422" [label="(Literal,9)"];
"1000614" [label="(Call,z = 0)"];
"1000478" [label="(Call,i = ssl_get_prev_session(s, &(p[s->s2->tmp.cipher_spec_length]),\n                                 s->s2->tmp.session_id_length, NULL))"];
"1000411" [label="(Literal,0)"];
"1000571" [label="(Call,&s->session->ciphers)"];
"1000541" [label="(ControlStructure,if (!ssl_get_new_session(s, 1)))"];
"1000370" [label="(Call,n = (int)len - s->init_num)"];
"1000658" [label="(Identifier,s)"];
"1000471" [label="(Identifier,s)"];
"1000513" [label="(Identifier,i)"];
"1000546" [label="(Block,)"];
"1000638" [label="(Call,z--)"];
"1000394" [label="(Identifier,i)"];
"1000413" [label="(Call,(size_t)len)"];
"1000644" [label="(Identifier,s)"];
"1000620" [label="(Identifier,prio)"];
"1000560" [label="(Identifier,cs)"];
"1000236" [label="(Call,s->version = i)"];
"1000393" [label="(Call,i != n)"];
"1000610" [label="(Call,allow = cl)"];
"1000392" [label="(ControlStructure,if (i != n))"];
"1000544" [label="(Identifier,s)"];
"1000543" [label="(Call,ssl_get_new_session(s, 1))"];
"1000166" [label="(Call,ssl2_read(s, (char *)&(p[s->init_num]), 9 - s->init_num))"];
"1000684" [label="(Call,(unsigned int)s->s2->challenge_length)"];
"1000615" [label="(Identifier,z)"];
"1000519" [label="(Identifier,SSL2_PE_UNDEFINED_ERROR)"];
"1000477" [label="(Block,)"];
"1000502" [label="(Identifier,i)"];
"1000385" [label="(Call,&(p[s->init_num]))"];
"1000579" [label="(Identifier,cs)"];
"1000581" [label="(ControlStructure,goto mem_err;)"];
"1000400" [label="(Identifier,i)"];
"1000514" [label="(Call,-1)"];
"1000578" [label="(Call,cs == NULL)"];
"1000391" [label="(Identifier,n)"];
"1000602" [label="(Call,allow = cs)"];
"1000445" [label="(Identifier,s)"];
"1000699" [label="(MethodReturn,static int)"];
"1000669" [label="(Identifier,s)"];
"1000516" [label="(Block,)"];
"1000417" [label="(Call,s->msg_callback_arg)"];
"1000408" [label="(Call,s->version)"];
"1000405" [label="(Block,)"];
"1000627" [label="(Identifier,allow)"];
"1000558" [label="(Block,)"];
"1000512" [label="(Call,i == -1)"];
"1000469" [label="(Block,)"];
"1000670" [label="(Identifier,SSL2_PE_UNDEFINED_ERROR)"];
"1000475" [label="(Literal,1)"];
"1000608" [label="(Identifier,prio)"];
"1000683" [label="(Identifier,p)"];
"1000470" [label="(Call,ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR))"];
"1000532" [label="(Call,ssl2_return_error(s, SSL2_PE_NO_CERTIFICATE))"];
"1000542" [label="(Call,!ssl_get_new_session(s, 1))"];
"1000639" [label="(Identifier,z)"];
"1000582" [label="(Call,cl = SSL_get_ciphers(s))"];
"1000633" [label="(Call,(void)sk_SSL_CIPHER_delete(prio, z))"];
"1000678" [label="(Call,s->s2->challenge)"];
"1000593" [label="(Call,prio = sk_SSL_CIPHER_dup(cl))"];
"1000536" [label="(Identifier,SSL_F_GET_CLIENT_HELLO)"];
"1000612" [label="(Identifier,cl)"];
"1000507" [label="(Identifier,s)"];
"1000501" [label="(Call,i == 1)"];
"1000499" [label="(Identifier,NULL)"];
"1000631" [label="(Literal,0)"];
"1000416" [label="(Identifier,s)"];
"1000600" [label="(Identifier,NULL)"];
"1000503" [label="(Literal,1)"];
"1000584" [label="(Call,SSL_get_ciphers(s))"];
"1000635" [label="(Call,sk_SSL_CIPHER_delete(prio, z))"];
"1000563" [label="(Identifier,p)"];
"1000583" [label="(Identifier,cl)"];
"1000110" [label="(Block,)"];
"1000443" [label="(Block,)"];
"1000412" [label="(Identifier,p)"];
"1000545" [label="(Literal,1)"];
"1000621" [label="(Call,z++)"];
"1000559" [label="(Call,cs = ssl_bytes_to_cipher_list(s, p, s->s2->tmp.cipher_spec_length,\n                                      &s->session->ciphers))"];
"1000466" [label="(Call,ssl_get_new_session(s, 1))"];
"1000170" [label="(Call,&(p[s->init_num]))"];
"1000395" [label="(Identifier,n)"];
"1000619" [label="(Call,sk_SSL_CIPHER_num(prio))"];
"1000552" [label="(Literal,1)"];
"1000598" [label="(Call,prio == NULL)"];
"1000630" [label="(Identifier,z)"];
"1000464" [label="(ControlStructure,if (!ssl_get_new_session(s, 1)))"];
"1000421" [label="(Identifier,p)"];
"1000397" [label="(Call,ssl2_part_read(s, SSL_F_GET_CLIENT_HELLO, i))"];
"1000383" [label="(Call,(char *)&(p[s->init_num]))"];
"1000577" [label="(ControlStructure,if (cs == NULL))"];
"1000522" [label="(Literal,1)"];
"1000382" [label="(Identifier,s)"];
"1000511" [label="(ControlStructure,if (i == -1))"];
"1000601" [label="(ControlStructure,goto mem_err;)"];
"1000626" [label="(Call,sk_SSL_CIPHER_find(allow, sk_SSL_CIPHER_value(prio, z)))"];
"1000580" [label="(Identifier,NULL)"];
"1000530" [label="(Identifier,NULL)"];
"1000407" [label="(Literal,0)"];
"1000648" [label="(Call,s->session->ciphers)"];
"1000492" [label="(Call,s->s2->tmp.session_id_length)"];
"1000564" [label="(Call,s->s2->tmp.cipher_spec_length)"];
"1000479" [label="(Identifier,i)"];
"1000642" [label="(Call,s->session->ciphers)"];
"1000547" [label="(Call,ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR))"];
"1000231" [label="(Call,i < s->version)"];
"1000617" [label="(Call,z < sk_SSL_CIPHER_num(prio))"];
"1000604" [label="(Identifier,cs)"];
"1000585" [label="(Identifier,s)"];
"1000562" [label="(Identifier,s)"];
"1000653" [label="(Identifier,prio)"];
"1000403" [label="(Identifier,s)"];
"1000548" [label="(Identifier,s)"];
"1000611" [label="(Identifier,allow)"];
"1000380" [label="(Identifier,i)"];
"1000454" [label="(Call,s->s2->tmp.session_id_length == 0)"];
"1000603" [label="(Identifier,allow)"];
"1000109" [label="(MethodParameterIn,SSL *s)"];
"1000594" [label="(Identifier,prio)"];
"1000533" [label="(Identifier,s)"];
"1000399" [label="(Identifier,SSL_F_GET_CLIENT_HELLO)"];
"1000446" [label="(Identifier,SSL2_PE_UNDEFINED_ERROR)"];
"1000595" [label="(Call,sk_SSL_CIPHER_dup(cl))"];
"1000480" [label="(Call,ssl_get_prev_session(s, &(p[s->s2->tmp.cipher_spec_length]),\n                                 s->s2->tmp.session_id_length, NULL))"];
"1000556" [label="(Identifier,s)"];
"1000531" [label="(Block,)"];
"1000609" [label="(Identifier,cs)"];
"1000526" [label="(Call,s->cert == NULL)"];
"1000618" [label="(Identifier,z)"];
"1000534" [label="(Identifier,SSL2_PE_NO_CERTIFICATE)"];
"1000667" [label="(Block,)"];
"1000168" [label="(Call,(char *)&(p[s->init_num]))"];
"1000316" [label="(Call,p = (unsigned char *)s->init_buf->data)"];
"1000528" [label="(Identifier,s)"];
"1000622" [label="(Identifier,z)"];
"1000527" [label="(Call,s->cert)"];
"1000467" [label="(Identifier,s)"];
"1000636" [label="(Identifier,prio)"];
"1000596" [label="(Identifier,cl)"];
"1000628" [label="(Call,sk_SSL_CIPHER_value(prio, z))"];
"1000525" [label="(ControlStructure,if (s->cert == NULL))"];
"1000517" [label="(Call,ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR))"];
"1000647" [label="(Call,s->session->ciphers = prio)"];
"1000406" [label="(Call,s->msg_callback(0, s->version, 0, p, (size_t)len, s,\n                        s->msg_callback_arg))"];
"1000632" [label="(Block,)"];
"1000606" [label="(Block,)"];
"1000597" [label="(ControlStructure,if (prio == NULL))"];
"1000629" [label="(Identifier,prio)"];
"1000589" [label="(Identifier,s)"];
"1000429" [label="(Identifier,s)"];
"1000448" [label="(Identifier,SSL_F_GET_CLIENT_HELLO)"];
"1000398" [label="(Identifier,s)"];
"1000561" [label="(Call,ssl_bytes_to_cipher_list(s, p, s->s2->tmp.cipher_spec_length,\n                                      &s->session->ciphers))"];
"1000420" [label="(Call,p += 9)"];
"1000677" [label="(Call,memcpy(s->s2->challenge, p, (unsigned int)s->s2->challenge_length))"];
"1000482" [label="(Call,&(p[s->s2->tmp.cipher_spec_length]))"];
"1000592" [label="(Block,)"];
"1000444" [label="(Call,ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR))"];
"1000599" [label="(Identifier,prio)"];
"1000625" [label="(Call,sk_SSL_CIPHER_find(allow, sk_SSL_CIPHER_value(prio, z)) < 0)"];
"1000379" [label="(Call,i = ssl2_read(s, (char *)&(p[s->init_num]), n))"];
"1000518" [label="(Identifier,s)"];
"1000383" -> "1000381"  [label="AST: "];
"1000383" -> "1000385"  [label="CFG: "];
"1000384" -> "1000383"  [label="AST: "];
"1000385" -> "1000383"  [label="AST: "];
"1000391" -> "1000383"  [label="CFG: "];
"1000383" -> "1000699"  [label="DDG: &(p[s->init_num])"];
"1000383" -> "1000381"  [label="DDG: &(p[s->init_num])"];
"1000168" -> "1000383"  [label="DDG: &(p[s->init_num])"];
"1000168" -> "1000166"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000177" -> "1000168"  [label="CFG: "];
"1000168" -> "1000699"  [label="DDG: &(p[s->init_num])"];
"1000168" -> "1000166"  [label="DDG: &(p[s->init_num])"];
"1000381" -> "1000379"  [label="AST: "];
"1000381" -> "1000391"  [label="CFG: "];
"1000382" -> "1000381"  [label="AST: "];
"1000391" -> "1000381"  [label="AST: "];
"1000379" -> "1000381"  [label="CFG: "];
"1000381" -> "1000699"  [label="DDG: (char *)&(p[s->init_num])"];
"1000381" -> "1000379"  [label="DDG: s"];
"1000381" -> "1000379"  [label="DDG: (char *)&(p[s->init_num])"];
"1000381" -> "1000379"  [label="DDG: n"];
"1000166" -> "1000381"  [label="DDG: s"];
"1000109" -> "1000381"  [label="DDG: s"];
"1000370" -> "1000381"  [label="DDG: n"];
"1000381" -> "1000393"  [label="DDG: n"];
"1000381" -> "1000397"  [label="DDG: s"];
"1000381" -> "1000406"  [label="DDG: s"];
"1000381" -> "1000444"  [label="DDG: s"];
"1000381" -> "1000466"  [label="DDG: s"];
"1000381" -> "1000480"  [label="DDG: s"];
"1000379" -> "1000110"  [label="AST: "];
"1000380" -> "1000379"  [label="AST: "];
"1000394" -> "1000379"  [label="CFG: "];
"1000379" -> "1000699"  [label="DDG: ssl2_read(s, (char *)&(p[s->init_num]), n)"];
"1000379" -> "1000393"  [label="DDG: i"];
"1000393" -> "1000392"  [label="AST: "];
"1000393" -> "1000395"  [label="CFG: "];
"1000394" -> "1000393"  [label="AST: "];
"1000395" -> "1000393"  [label="AST: "];
"1000398" -> "1000393"  [label="CFG: "];
"1000403" -> "1000393"  [label="CFG: "];
"1000393" -> "1000699"  [label="DDG: i"];
"1000393" -> "1000699"  [label="DDG: i != n"];
"1000393" -> "1000699"  [label="DDG: n"];
"1000393" -> "1000397"  [label="DDG: i"];
"1000397" -> "1000396"  [label="AST: "];
"1000397" -> "1000400"  [label="CFG: "];
"1000398" -> "1000397"  [label="AST: "];
"1000399" -> "1000397"  [label="AST: "];
"1000400" -> "1000397"  [label="AST: "];
"1000396" -> "1000397"  [label="CFG: "];
"1000397" -> "1000699"  [label="DDG: ssl2_part_read(s, SSL_F_GET_CLIENT_HELLO, i)"];
"1000397" -> "1000699"  [label="DDG: s"];
"1000397" -> "1000699"  [label="DDG: i"];
"1000397" -> "1000699"  [label="DDG: SSL_F_GET_CLIENT_HELLO"];
"1000397" -> "1000396"  [label="DDG: ssl2_part_read(s, SSL_F_GET_CLIENT_HELLO, i)"];
"1000109" -> "1000397"  [label="DDG: s"];
"1000396" -> "1000392"  [label="AST: "];
"1000699" -> "1000396"  [label="CFG: "];
"1000396" -> "1000699"  [label="DDG: <RET>"];
"1000406" -> "1000405"  [label="AST: "];
"1000406" -> "1000417"  [label="CFG: "];
"1000407" -> "1000406"  [label="AST: "];
"1000408" -> "1000406"  [label="AST: "];
"1000411" -> "1000406"  [label="AST: "];
"1000412" -> "1000406"  [label="AST: "];
"1000413" -> "1000406"  [label="AST: "];
"1000416" -> "1000406"  [label="AST: "];
"1000417" -> "1000406"  [label="AST: "];
"1000421" -> "1000406"  [label="CFG: "];
"1000406" -> "1000699"  [label="DDG: s->version"];
"1000406" -> "1000699"  [label="DDG: (size_t)len"];
"1000406" -> "1000699"  [label="DDG: s->msg_callback_arg"];
"1000406" -> "1000699"  [label="DDG: s->msg_callback(0, s->version, 0, p, (size_t)len, s,\n                        s->msg_callback_arg)"];
"1000236" -> "1000406"  [label="DDG: s->version"];
"1000231" -> "1000406"  [label="DDG: s->version"];
"1000316" -> "1000406"  [label="DDG: p"];
"1000413" -> "1000406"  [label="DDG: len"];
"1000109" -> "1000406"  [label="DDG: s"];
"1000406" -> "1000420"  [label="DDG: p"];
"1000406" -> "1000444"  [label="DDG: s"];
"1000406" -> "1000466"  [label="DDG: s"];
"1000406" -> "1000480"  [label="DDG: s"];
"1000420" -> "1000110"  [label="AST: "];
"1000420" -> "1000422"  [label="CFG: "];
"1000421" -> "1000420"  [label="AST: "];
"1000422" -> "1000420"  [label="AST: "];
"1000429" -> "1000420"  [label="CFG: "];
"1000420" -> "1000699"  [label="DDG: p"];
"1000316" -> "1000420"  [label="DDG: p"];
"1000420" -> "1000561"  [label="DDG: p"];
"1000420" -> "1000677"  [label="DDG: p"];
"1000561" -> "1000559"  [label="AST: "];
"1000561" -> "1000571"  [label="CFG: "];
"1000562" -> "1000561"  [label="AST: "];
"1000563" -> "1000561"  [label="AST: "];
"1000564" -> "1000561"  [label="AST: "];
"1000571" -> "1000561"  [label="AST: "];
"1000559" -> "1000561"  [label="CFG: "];
"1000561" -> "1000699"  [label="DDG: &s->session->ciphers"];
"1000561" -> "1000699"  [label="DDG: p"];
"1000561" -> "1000699"  [label="DDG: s"];
"1000561" -> "1000699"  [label="DDG: s->s2->tmp.cipher_spec_length"];
"1000561" -> "1000559"  [label="DDG: s"];
"1000561" -> "1000559"  [label="DDG: p"];
"1000561" -> "1000559"  [label="DDG: s->s2->tmp.cipher_spec_length"];
"1000561" -> "1000559"  [label="DDG: &s->session->ciphers"];
"1000466" -> "1000561"  [label="DDG: s"];
"1000543" -> "1000561"  [label="DDG: s"];
"1000480" -> "1000561"  [label="DDG: s"];
"1000109" -> "1000561"  [label="DDG: s"];
"1000330" -> "1000561"  [label="DDG: s->s2->tmp.cipher_spec_length"];
"1000561" -> "1000584"  [label="DDG: s"];
"1000561" -> "1000641"  [label="DDG: &s->session->ciphers"];
"1000561" -> "1000677"  [label="DDG: p"];
"1000559" -> "1000558"  [label="AST: "];
"1000560" -> "1000559"  [label="AST: "];
"1000579" -> "1000559"  [label="CFG: "];
"1000559" -> "1000699"  [label="DDG: ssl_bytes_to_cipher_list(s, p, s->s2->tmp.cipher_spec_length,\n                                      &s->session->ciphers)"];
"1000559" -> "1000578"  [label="DDG: cs"];
"1000578" -> "1000577"  [label="AST: "];
"1000578" -> "1000580"  [label="CFG: "];
"1000579" -> "1000578"  [label="AST: "];
"1000580" -> "1000578"  [label="AST: "];
"1000581" -> "1000578"  [label="CFG: "];
"1000583" -> "1000578"  [label="CFG: "];
"1000578" -> "1000699"  [label="DDG: cs"];
"1000578" -> "1000699"  [label="DDG: NULL"];
"1000578" -> "1000699"  [label="DDG: cs == NULL"];
"1000480" -> "1000578"  [label="DDG: NULL"];
"1000526" -> "1000578"  [label="DDG: NULL"];
"1000578" -> "1000598"  [label="DDG: NULL"];
"1000578" -> "1000602"  [label="DDG: cs"];
"1000578" -> "1000607"  [label="DDG: cs"];
"1000598" -> "1000597"  [label="AST: "];
"1000598" -> "1000600"  [label="CFG: "];
"1000599" -> "1000598"  [label="AST: "];
"1000600" -> "1000598"  [label="AST: "];
"1000601" -> "1000598"  [label="CFG: "];
"1000603" -> "1000598"  [label="CFG: "];
"1000598" -> "1000699"  [label="DDG: prio"];
"1000598" -> "1000699"  [label="DDG: prio == NULL"];
"1000598" -> "1000699"  [label="DDG: NULL"];
"1000593" -> "1000598"  [label="DDG: prio"];
"1000598" -> "1000619"  [label="DDG: prio"];
"1000619" -> "1000617"  [label="AST: "];
"1000619" -> "1000620"  [label="CFG: "];
"1000620" -> "1000619"  [label="AST: "];
"1000617" -> "1000619"  [label="CFG: "];
"1000619" -> "1000617"  [label="DDG: prio"];
"1000628" -> "1000619"  [label="DDG: prio"];
"1000607" -> "1000619"  [label="DDG: prio"];
"1000635" -> "1000619"  [label="DDG: prio"];
"1000619" -> "1000628"  [label="DDG: prio"];
"1000619" -> "1000647"  [label="DDG: prio"];
"1000617" -> "1000613"  [label="AST: "];
"1000618" -> "1000617"  [label="AST: "];
"1000627" -> "1000617"  [label="CFG: "];
"1000644" -> "1000617"  [label="CFG: "];
"1000617" -> "1000699"  [label="DDG: z"];
"1000617" -> "1000699"  [label="DDG: z < sk_SSL_CIPHER_num(prio)"];
"1000617" -> "1000699"  [label="DDG: sk_SSL_CIPHER_num(prio)"];
"1000621" -> "1000617"  [label="DDG: z"];
"1000614" -> "1000617"  [label="DDG: z"];
"1000617" -> "1000628"  [label="DDG: z"];
"1000628" -> "1000626"  [label="AST: "];
"1000628" -> "1000630"  [label="CFG: "];
"1000629" -> "1000628"  [label="AST: "];
"1000630" -> "1000628"  [label="AST: "];
"1000626" -> "1000628"  [label="CFG: "];
"1000628" -> "1000621"  [label="DDG: z"];
"1000628" -> "1000626"  [label="DDG: prio"];
"1000628" -> "1000626"  [label="DDG: z"];
"1000628" -> "1000635"  [label="DDG: prio"];
"1000628" -> "1000635"  [label="DDG: z"];
"1000621" -> "1000613"  [label="AST: "];
"1000621" -> "1000622"  [label="CFG: "];
"1000622" -> "1000621"  [label="AST: "];
"1000618" -> "1000621"  [label="CFG: "];
"1000638" -> "1000621"  [label="DDG: z"];
"1000626" -> "1000625"  [label="AST: "];
"1000627" -> "1000626"  [label="AST: "];
"1000631" -> "1000626"  [label="CFG: "];
"1000626" -> "1000699"  [label="DDG: allow"];
"1000626" -> "1000699"  [label="DDG: sk_SSL_CIPHER_value(prio, z)"];
"1000626" -> "1000625"  [label="DDG: allow"];
"1000626" -> "1000625"  [label="DDG: sk_SSL_CIPHER_value(prio, z)"];
"1000610" -> "1000626"  [label="DDG: allow"];
"1000602" -> "1000626"  [label="DDG: allow"];
"1000625" -> "1000624"  [label="AST: "];
"1000625" -> "1000631"  [label="CFG: "];
"1000631" -> "1000625"  [label="AST: "];
"1000634" -> "1000625"  [label="CFG: "];
"1000622" -> "1000625"  [label="CFG: "];
"1000625" -> "1000699"  [label="DDG: sk_SSL_CIPHER_find(allow, sk_SSL_CIPHER_value(prio, z))"];
"1000625" -> "1000699"  [label="DDG: sk_SSL_CIPHER_find(allow, sk_SSL_CIPHER_value(prio, z)) < 0"];
"1000635" -> "1000633"  [label="AST: "];
"1000635" -> "1000637"  [label="CFG: "];
"1000636" -> "1000635"  [label="AST: "];
"1000637" -> "1000635"  [label="AST: "];
"1000633" -> "1000635"  [label="CFG: "];
"1000635" -> "1000633"  [label="DDG: prio"];
"1000635" -> "1000633"  [label="DDG: z"];
"1000635" -> "1000638"  [label="DDG: z"];
"1000633" -> "1000632"  [label="AST: "];
"1000634" -> "1000633"  [label="AST: "];
"1000639" -> "1000633"  [label="CFG: "];
"1000633" -> "1000699"  [label="DDG: (void)sk_SSL_CIPHER_delete(prio, z)"];
"1000633" -> "1000699"  [label="DDG: sk_SSL_CIPHER_delete(prio, z)"];
"1000638" -> "1000632"  [label="AST: "];
"1000638" -> "1000639"  [label="CFG: "];
"1000639" -> "1000638"  [label="AST: "];
"1000622" -> "1000638"  [label="CFG: "];
"1000647" -> "1000558"  [label="AST: "];
"1000647" -> "1000653"  [label="CFG: "];
"1000648" -> "1000647"  [label="AST: "];
"1000653" -> "1000647"  [label="AST: "];
"1000658" -> "1000647"  [label="CFG: "];
"1000647" -> "1000699"  [label="DDG: s->session->ciphers"];
"1000647" -> "1000699"  [label="DDG: prio"];
"1000602" -> "1000592"  [label="AST: "];
"1000602" -> "1000604"  [label="CFG: "];
"1000603" -> "1000602"  [label="AST: "];
"1000604" -> "1000602"  [label="AST: "];
"1000615" -> "1000602"  [label="CFG: "];
"1000602" -> "1000699"  [label="DDG: cs"];
"1000602" -> "1000699"  [label="DDG: allow"];
"1000607" -> "1000606"  [label="AST: "];
"1000607" -> "1000609"  [label="CFG: "];
"1000608" -> "1000607"  [label="AST: "];
"1000609" -> "1000607"  [label="AST: "];
"1000611" -> "1000607"  [label="CFG: "];
"1000607" -> "1000699"  [label="DDG: cs"];
"1000584" -> "1000582"  [label="AST: "];
"1000584" -> "1000585"  [label="CFG: "];
"1000585" -> "1000584"  [label="AST: "];
"1000582" -> "1000584"  [label="CFG: "];
"1000584" -> "1000699"  [label="DDG: s"];
"1000584" -> "1000582"  [label="DDG: s"];
"1000109" -> "1000584"  [label="DDG: s"];
"1000584" -> "1000668"  [label="DDG: s"];
"1000582" -> "1000558"  [label="AST: "];
"1000583" -> "1000582"  [label="AST: "];
"1000589" -> "1000582"  [label="CFG: "];
"1000582" -> "1000699"  [label="DDG: SSL_get_ciphers(s)"];
"1000582" -> "1000595"  [label="DDG: cl"];
"1000582" -> "1000610"  [label="DDG: cl"];
"1000595" -> "1000593"  [label="AST: "];
"1000595" -> "1000596"  [label="CFG: "];
"1000596" -> "1000595"  [label="AST: "];
"1000593" -> "1000595"  [label="CFG: "];
"1000595" -> "1000699"  [label="DDG: cl"];
"1000595" -> "1000593"  [label="DDG: cl"];
"1000593" -> "1000592"  [label="AST: "];
"1000594" -> "1000593"  [label="AST: "];
"1000599" -> "1000593"  [label="CFG: "];
"1000593" -> "1000699"  [label="DDG: sk_SSL_CIPHER_dup(cl)"];
"1000610" -> "1000606"  [label="AST: "];
"1000610" -> "1000612"  [label="CFG: "];
"1000611" -> "1000610"  [label="AST: "];
"1000612" -> "1000610"  [label="AST: "];
"1000615" -> "1000610"  [label="CFG: "];
"1000610" -> "1000699"  [label="DDG: allow"];
"1000610" -> "1000699"  [label="DDG: cl"];
"1000668" -> "1000667"  [label="AST: "];
"1000668" -> "1000670"  [label="CFG: "];
"1000669" -> "1000668"  [label="AST: "];
"1000670" -> "1000668"  [label="AST: "];
"1000672" -> "1000668"  [label="CFG: "];
"1000668" -> "1000699"  [label="DDG: ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR)"];
"1000668" -> "1000699"  [label="DDG: SSL2_PE_UNDEFINED_ERROR"];
"1000668" -> "1000699"  [label="DDG: s"];
"1000466" -> "1000668"  [label="DDG: s"];
"1000543" -> "1000668"  [label="DDG: s"];
"1000480" -> "1000668"  [label="DDG: s"];
"1000109" -> "1000668"  [label="DDG: s"];
"1000641" -> "1000640"  [label="AST: "];
"1000641" -> "1000642"  [label="CFG: "];
"1000642" -> "1000641"  [label="AST: "];
"1000640" -> "1000641"  [label="CFG: "];
"1000677" -> "1000110"  [label="AST: "];
"1000677" -> "1000684"  [label="CFG: "];
"1000678" -> "1000677"  [label="AST: "];
"1000683" -> "1000677"  [label="AST: "];
"1000684" -> "1000677"  [label="AST: "];
"1000692" -> "1000677"  [label="CFG: "];
"1000677" -> "1000699"  [label="DDG: memcpy(s->s2->challenge, p, (unsigned int)s->s2->challenge_length)"];
"1000677" -> "1000699"  [label="DDG: s->s2->challenge"];
"1000677" -> "1000699"  [label="DDG: (unsigned int)s->s2->challenge_length"];
"1000677" -> "1000699"  [label="DDG: p"];
"1000684" -> "1000677"  [label="DDG: s->s2->challenge_length"];
"1000444" -> "1000443"  [label="AST: "];
"1000444" -> "1000446"  [label="CFG: "];
"1000445" -> "1000444"  [label="AST: "];
"1000446" -> "1000444"  [label="AST: "];
"1000448" -> "1000444"  [label="CFG: "];
"1000444" -> "1000699"  [label="DDG: SSL2_PE_UNDEFINED_ERROR"];
"1000444" -> "1000699"  [label="DDG: s"];
"1000444" -> "1000699"  [label="DDG: ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR)"];
"1000109" -> "1000444"  [label="DDG: s"];
"1000466" -> "1000465"  [label="AST: "];
"1000466" -> "1000468"  [label="CFG: "];
"1000467" -> "1000466"  [label="AST: "];
"1000468" -> "1000466"  [label="AST: "];
"1000465" -> "1000466"  [label="CFG: "];
"1000466" -> "1000699"  [label="DDG: s"];
"1000466" -> "1000465"  [label="DDG: s"];
"1000466" -> "1000465"  [label="DDG: 1"];
"1000109" -> "1000466"  [label="DDG: s"];
"1000466" -> "1000470"  [label="DDG: s"];
"1000465" -> "1000464"  [label="AST: "];
"1000471" -> "1000465"  [label="CFG: "];
"1000556" -> "1000465"  [label="CFG: "];
"1000465" -> "1000699"  [label="DDG: !ssl_get_new_session(s, 1)"];
"1000465" -> "1000699"  [label="DDG: ssl_get_new_session(s, 1)"];
"1000470" -> "1000469"  [label="AST: "];
"1000470" -> "1000472"  [label="CFG: "];
"1000471" -> "1000470"  [label="AST: "];
"1000472" -> "1000470"  [label="AST: "];
"1000475" -> "1000470"  [label="CFG: "];
"1000470" -> "1000699"  [label="DDG: SSL2_PE_UNDEFINED_ERROR"];
"1000470" -> "1000699"  [label="DDG: s"];
"1000470" -> "1000699"  [label="DDG: ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR)"];
"1000109" -> "1000470"  [label="DDG: s"];
"1000480" -> "1000478"  [label="AST: "];
"1000480" -> "1000499"  [label="CFG: "];
"1000481" -> "1000480"  [label="AST: "];
"1000482" -> "1000480"  [label="AST: "];
"1000492" -> "1000480"  [label="AST: "];
"1000499" -> "1000480"  [label="AST: "];
"1000478" -> "1000480"  [label="CFG: "];
"1000480" -> "1000699"  [label="DDG: NULL"];
"1000480" -> "1000699"  [label="DDG: s->s2->tmp.session_id_length"];
"1000480" -> "1000699"  [label="DDG: s"];
"1000480" -> "1000699"  [label="DDG: &(p[s->s2->tmp.cipher_spec_length])"];
"1000480" -> "1000478"  [label="DDG: s"];
"1000480" -> "1000478"  [label="DDG: &(p[s->s2->tmp.cipher_spec_length])"];
"1000480" -> "1000478"  [label="DDG: s->s2->tmp.session_id_length"];
"1000480" -> "1000478"  [label="DDG: NULL"];
"1000109" -> "1000480"  [label="DDG: s"];
"1000454" -> "1000480"  [label="DDG: s->s2->tmp.session_id_length"];
"1000480" -> "1000517"  [label="DDG: s"];
"1000480" -> "1000526"  [label="DDG: NULL"];
"1000480" -> "1000532"  [label="DDG: s"];
"1000480" -> "1000543"  [label="DDG: s"];
"1000478" -> "1000477"  [label="AST: "];
"1000479" -> "1000478"  [label="AST: "];
"1000502" -> "1000478"  [label="CFG: "];
"1000478" -> "1000699"  [label="DDG: ssl_get_prev_session(s, &(p[s->s2->tmp.cipher_spec_length]),\n                                 s->s2->tmp.session_id_length, NULL)"];
"1000478" -> "1000501"  [label="DDG: i"];
"1000501" -> "1000500"  [label="AST: "];
"1000501" -> "1000503"  [label="CFG: "];
"1000502" -> "1000501"  [label="AST: "];
"1000503" -> "1000501"  [label="AST: "];
"1000507" -> "1000501"  [label="CFG: "];
"1000513" -> "1000501"  [label="CFG: "];
"1000501" -> "1000699"  [label="DDG: i"];
"1000501" -> "1000699"  [label="DDG: i == 1"];
"1000501" -> "1000512"  [label="DDG: i"];
"1000512" -> "1000511"  [label="AST: "];
"1000512" -> "1000514"  [label="CFG: "];
"1000513" -> "1000512"  [label="AST: "];
"1000514" -> "1000512"  [label="AST: "];
"1000518" -> "1000512"  [label="CFG: "];
"1000528" -> "1000512"  [label="CFG: "];
"1000512" -> "1000699"  [label="DDG: i"];
"1000512" -> "1000699"  [label="DDG: -1"];
"1000512" -> "1000699"  [label="DDG: i == -1"];
"1000514" -> "1000512"  [label="DDG: 1"];
"1000517" -> "1000516"  [label="AST: "];
"1000517" -> "1000519"  [label="CFG: "];
"1000518" -> "1000517"  [label="AST: "];
"1000519" -> "1000517"  [label="AST: "];
"1000522" -> "1000517"  [label="CFG: "];
"1000517" -> "1000699"  [label="DDG: SSL2_PE_UNDEFINED_ERROR"];
"1000517" -> "1000699"  [label="DDG: s"];
"1000517" -> "1000699"  [label="DDG: ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR)"];
"1000109" -> "1000517"  [label="DDG: s"];
"1000526" -> "1000525"  [label="AST: "];
"1000526" -> "1000530"  [label="CFG: "];
"1000527" -> "1000526"  [label="AST: "];
"1000530" -> "1000526"  [label="AST: "];
"1000533" -> "1000526"  [label="CFG: "];
"1000544" -> "1000526"  [label="CFG: "];
"1000526" -> "1000699"  [label="DDG: NULL"];
"1000526" -> "1000699"  [label="DDG: s->cert == NULL"];
"1000526" -> "1000699"  [label="DDG: s->cert"];
"1000532" -> "1000531"  [label="AST: "];
"1000532" -> "1000534"  [label="CFG: "];
"1000533" -> "1000532"  [label="AST: "];
"1000534" -> "1000532"  [label="AST: "];
"1000536" -> "1000532"  [label="CFG: "];
"1000532" -> "1000699"  [label="DDG: s"];
"1000532" -> "1000699"  [label="DDG: SSL2_PE_NO_CERTIFICATE"];
"1000532" -> "1000699"  [label="DDG: ssl2_return_error(s, SSL2_PE_NO_CERTIFICATE)"];
"1000109" -> "1000532"  [label="DDG: s"];
"1000543" -> "1000542"  [label="AST: "];
"1000543" -> "1000545"  [label="CFG: "];
"1000544" -> "1000543"  [label="AST: "];
"1000545" -> "1000543"  [label="AST: "];
"1000542" -> "1000543"  [label="CFG: "];
"1000543" -> "1000699"  [label="DDG: s"];
"1000543" -> "1000542"  [label="DDG: s"];
"1000543" -> "1000542"  [label="DDG: 1"];
"1000109" -> "1000543"  [label="DDG: s"];
"1000543" -> "1000547"  [label="DDG: s"];
"1000542" -> "1000541"  [label="AST: "];
"1000548" -> "1000542"  [label="CFG: "];
"1000556" -> "1000542"  [label="CFG: "];
"1000542" -> "1000699"  [label="DDG: !ssl_get_new_session(s, 1)"];
"1000542" -> "1000699"  [label="DDG: ssl_get_new_session(s, 1)"];
"1000547" -> "1000546"  [label="AST: "];
"1000547" -> "1000549"  [label="CFG: "];
"1000548" -> "1000547"  [label="AST: "];
"1000549" -> "1000547"  [label="AST: "];
"1000552" -> "1000547"  [label="CFG: "];
"1000547" -> "1000699"  [label="DDG: s"];
"1000547" -> "1000699"  [label="DDG: ssl2_return_error(s, SSL2_PE_UNDEFINED_ERROR)"];
"1000547" -> "1000699"  [label="DDG: SSL2_PE_UNDEFINED_ERROR"];
"1000109" -> "1000547"  [label="DDG: s"];
}
