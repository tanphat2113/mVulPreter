digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_13@pointer" {
"1000297" [label="(Call,ipv6_addr_equal(daddr, &sk->sk_v6_daddr))"];
"1000250" [label="(Call,daddr = &sin6->sin6_addr)"];
"1000291" [label="(Call,sk->sk_state == TCP_ESTABLISHED &&\n\t\t    ipv6_addr_equal(daddr, &sk->sk_v6_daddr))"];
"1000303" [label="(Call,daddr = &sk->sk_v6_daddr)"];
"1000320" [label="(Call,__ipv6_addr_type(daddr))"];
"1000319" [label="(Call,__ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000315" [label="(Call,sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000310" [label="(Call,addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000322" [label="(Call,fl6.flowi6_oif = sin6->sin6_scope_id)"];
"1000359" [label="(Call,fl6.flowi6_oif == 0)"];
"1000549" [label="(Call,!fl6.flowi6_oif)"];
"1000548" [label="(Call,!fl6.flowi6_oif && ipv6_addr_is_multicast(&fl6.daddr))"];
"1000567" [label="(Call,!fl6.flowi6_oif)"];
"1000501" [label="(Call,ipv6_addr_any(daddr))"];
"1000500" [label="(Call,!ipv6_addr_any(daddr))"];
"1000569" [label="(Identifier,fl6)"];
"1000315" [label="(Call,sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000310" [label="(Call,addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000309" [label="(ControlStructure,if (addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))))"];
"1000566" [label="(ControlStructure,if (!fl6.flowi6_oif))"];
"1000298" [label="(Identifier,daddr)"];
"1000502" [label="(Identifier,daddr)"];
"1000505" [label="(Identifier,fl6)"];
"1000251" [label="(Identifier,daddr)"];
"1000514" [label="(Identifier,fl6)"];
"1000364" [label="(Call,fl6.flowi6_oif = sk->sk_bound_dev_if)"];
"1000198" [label="(Block,)"];
"1000366" [label="(Identifier,fl6)"];
"1000326" [label="(Call,sin6->sin6_scope_id)"];
"1000311" [label="(Call,addr_len >= sizeof(struct sockaddr_in6))"];
"1000320" [label="(Call,__ipv6_addr_type(daddr))"];
"1000324" [label="(Identifier,fl6)"];
"1000573" [label="(Identifier,fl6)"];
"1000321" [label="(Identifier,daddr)"];
"1000303" [label="(Call,daddr = &sk->sk_v6_daddr)"];
"1000322" [label="(Call,fl6.flowi6_oif = sin6->sin6_scope_id)"];
"1000358" [label="(ControlStructure,if (fl6.flowi6_oif == 0))"];
"1000549" [label="(Call,!fl6.flowi6_oif)"];
"1000345" [label="(Call,daddr = &sk->sk_v6_daddr)"];
"1000250" [label="(Call,daddr = &sin6->sin6_addr)"];
"1000319" [label="(Call,__ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000359" [label="(Call,fl6.flowi6_oif == 0)"];
"1000299" [label="(Call,&sk->sk_v6_daddr)"];
"1000304" [label="(Identifier,daddr)"];
"1000316" [label="(Call,sin6->sin6_scope_id)"];
"1000305" [label="(Call,&sk->sk_v6_daddr)"];
"1000363" [label="(Literal,0)"];
"1000547" [label="(ControlStructure,if (!fl6.flowi6_oif && ipv6_addr_is_multicast(&fl6.daddr)))"];
"1000560" [label="(Identifier,fl6)"];
"1000500" [label="(Call,!ipv6_addr_any(daddr))"];
"1000568" [label="(Call,fl6.flowi6_oif)"];
"1000290" [label="(ControlStructure,if (sk->sk_state == TCP_ESTABLISHED &&\n\t\t    ipv6_addr_equal(daddr, &sk->sk_v6_daddr)))"];
"1000550" [label="(Call,fl6.flowi6_oif)"];
"1000556" [label="(Identifier,fl6)"];
"1000738" [label="(MethodReturn,static int)"];
"1000292" [label="(Call,sk->sk_state == TCP_ESTABLISHED)"];
"1000258" [label="(Identifier,np)"];
"1000553" [label="(Call,ipv6_addr_is_multicast(&fl6.daddr))"];
"1000579" [label="(Identifier,sk)"];
"1000297" [label="(Call,ipv6_addr_equal(daddr, &sk->sk_v6_daddr))"];
"1000499" [label="(ControlStructure,if (!ipv6_addr_any(daddr)))"];
"1000291" [label="(Call,sk->sk_state == TCP_ESTABLISHED &&\n\t\t    ipv6_addr_equal(daddr, &sk->sk_v6_daddr))"];
"1000252" [label="(Call,&sin6->sin6_addr)"];
"1000373" [label="(Identifier,msg)"];
"1000312" [label="(Identifier,addr_len)"];
"1000501" [label="(Call,ipv6_addr_any(daddr))"];
"1000360" [label="(Call,fl6.flowi6_oif)"];
"1000361" [label="(Identifier,fl6)"];
"1000548" [label="(Call,!fl6.flowi6_oif && ipv6_addr_is_multicast(&fl6.daddr))"];
"1000323" [label="(Call,fl6.flowi6_oif)"];
"1000567" [label="(Call,!fl6.flowi6_oif)"];
"1000297" -> "1000291"  [label="AST: "];
"1000297" -> "1000299"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000299" -> "1000297"  [label="AST: "];
"1000291" -> "1000297"  [label="CFG: "];
"1000297" -> "1000738"  [label="DDG: daddr"];
"1000297" -> "1000738"  [label="DDG: &sk->sk_v6_daddr"];
"1000297" -> "1000291"  [label="DDG: daddr"];
"1000297" -> "1000291"  [label="DDG: &sk->sk_v6_daddr"];
"1000250" -> "1000297"  [label="DDG: daddr"];
"1000297" -> "1000303"  [label="DDG: &sk->sk_v6_daddr"];
"1000297" -> "1000320"  [label="DDG: daddr"];
"1000297" -> "1000501"  [label="DDG: daddr"];
"1000250" -> "1000198"  [label="AST: "];
"1000250" -> "1000252"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000252" -> "1000250"  [label="AST: "];
"1000258" -> "1000250"  [label="CFG: "];
"1000250" -> "1000738"  [label="DDG: daddr"];
"1000250" -> "1000738"  [label="DDG: &sin6->sin6_addr"];
"1000250" -> "1000320"  [label="DDG: daddr"];
"1000250" -> "1000501"  [label="DDG: daddr"];
"1000291" -> "1000290"  [label="AST: "];
"1000291" -> "1000292"  [label="CFG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000304" -> "1000291"  [label="CFG: "];
"1000312" -> "1000291"  [label="CFG: "];
"1000291" -> "1000738"  [label="DDG: sk->sk_state == TCP_ESTABLISHED &&\n\t\t    ipv6_addr_equal(daddr, &sk->sk_v6_daddr)"];
"1000291" -> "1000738"  [label="DDG: sk->sk_state == TCP_ESTABLISHED"];
"1000291" -> "1000738"  [label="DDG: ipv6_addr_equal(daddr, &sk->sk_v6_daddr)"];
"1000292" -> "1000291"  [label="DDG: sk->sk_state"];
"1000292" -> "1000291"  [label="DDG: TCP_ESTABLISHED"];
"1000303" -> "1000290"  [label="AST: "];
"1000303" -> "1000305"  [label="CFG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000305" -> "1000303"  [label="AST: "];
"1000312" -> "1000303"  [label="CFG: "];
"1000303" -> "1000738"  [label="DDG: daddr"];
"1000303" -> "1000738"  [label="DDG: &sk->sk_v6_daddr"];
"1000303" -> "1000320"  [label="DDG: daddr"];
"1000303" -> "1000501"  [label="DDG: daddr"];
"1000320" -> "1000319"  [label="AST: "];
"1000320" -> "1000321"  [label="CFG: "];
"1000321" -> "1000320"  [label="AST: "];
"1000319" -> "1000320"  [label="CFG: "];
"1000320" -> "1000738"  [label="DDG: daddr"];
"1000320" -> "1000319"  [label="DDG: daddr"];
"1000320" -> "1000501"  [label="DDG: daddr"];
"1000319" -> "1000315"  [label="AST: "];
"1000315" -> "1000319"  [label="CFG: "];
"1000319" -> "1000738"  [label="DDG: __ipv6_addr_type(daddr)"];
"1000319" -> "1000315"  [label="DDG: __ipv6_addr_type(daddr)"];
"1000315" -> "1000310"  [label="AST: "];
"1000315" -> "1000316"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000310" -> "1000315"  [label="CFG: "];
"1000315" -> "1000738"  [label="DDG: sin6->sin6_scope_id"];
"1000315" -> "1000738"  [label="DDG: __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
"1000315" -> "1000310"  [label="DDG: sin6->sin6_scope_id"];
"1000315" -> "1000310"  [label="DDG: __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
"1000315" -> "1000322"  [label="DDG: sin6->sin6_scope_id"];
"1000310" -> "1000309"  [label="AST: "];
"1000310" -> "1000311"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000324" -> "1000310"  [label="CFG: "];
"1000361" -> "1000310"  [label="CFG: "];
"1000310" -> "1000738"  [label="DDG: addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
"1000310" -> "1000738"  [label="DDG: sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
"1000310" -> "1000738"  [label="DDG: addr_len >= sizeof(struct sockaddr_in6)"];
"1000311" -> "1000310"  [label="DDG: addr_len"];
"1000322" -> "1000309"  [label="AST: "];
"1000322" -> "1000326"  [label="CFG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000326" -> "1000322"  [label="AST: "];
"1000361" -> "1000322"  [label="CFG: "];
"1000322" -> "1000738"  [label="DDG: sin6->sin6_scope_id"];
"1000322" -> "1000359"  [label="DDG: fl6.flowi6_oif"];
"1000359" -> "1000358"  [label="AST: "];
"1000359" -> "1000363"  [label="CFG: "];
"1000360" -> "1000359"  [label="AST: "];
"1000363" -> "1000359"  [label="AST: "];
"1000366" -> "1000359"  [label="CFG: "];
"1000373" -> "1000359"  [label="CFG: "];
"1000359" -> "1000738"  [label="DDG: fl6.flowi6_oif"];
"1000359" -> "1000738"  [label="DDG: fl6.flowi6_oif == 0"];
"1000359" -> "1000549"  [label="DDG: fl6.flowi6_oif"];
"1000549" -> "1000548"  [label="AST: "];
"1000549" -> "1000550"  [label="CFG: "];
"1000550" -> "1000549"  [label="AST: "];
"1000556" -> "1000549"  [label="CFG: "];
"1000548" -> "1000549"  [label="CFG: "];
"1000549" -> "1000548"  [label="DDG: fl6.flowi6_oif"];
"1000364" -> "1000549"  [label="DDG: fl6.flowi6_oif"];
"1000549" -> "1000567"  [label="DDG: fl6.flowi6_oif"];
"1000548" -> "1000547"  [label="AST: "];
"1000548" -> "1000553"  [label="CFG: "];
"1000553" -> "1000548"  [label="AST: "];
"1000560" -> "1000548"  [label="CFG: "];
"1000569" -> "1000548"  [label="CFG: "];
"1000548" -> "1000738"  [label="DDG: !fl6.flowi6_oif && ipv6_addr_is_multicast(&fl6.daddr)"];
"1000548" -> "1000738"  [label="DDG: ipv6_addr_is_multicast(&fl6.daddr)"];
"1000548" -> "1000738"  [label="DDG: !fl6.flowi6_oif"];
"1000553" -> "1000548"  [label="DDG: &fl6.daddr"];
"1000567" -> "1000566"  [label="AST: "];
"1000567" -> "1000568"  [label="CFG: "];
"1000568" -> "1000567"  [label="AST: "];
"1000573" -> "1000567"  [label="CFG: "];
"1000579" -> "1000567"  [label="CFG: "];
"1000567" -> "1000738"  [label="DDG: fl6.flowi6_oif"];
"1000567" -> "1000738"  [label="DDG: !fl6.flowi6_oif"];
"1000501" -> "1000500"  [label="AST: "];
"1000501" -> "1000502"  [label="CFG: "];
"1000502" -> "1000501"  [label="AST: "];
"1000500" -> "1000501"  [label="CFG: "];
"1000501" -> "1000738"  [label="DDG: daddr"];
"1000501" -> "1000500"  [label="DDG: daddr"];
"1000345" -> "1000501"  [label="DDG: daddr"];
"1000500" -> "1000499"  [label="AST: "];
"1000505" -> "1000500"  [label="CFG: "];
"1000514" -> "1000500"  [label="CFG: "];
"1000500" -> "1000738"  [label="DDG: !ipv6_addr_any(daddr)"];
"1000500" -> "1000738"  [label="DDG: ipv6_addr_any(daddr)"];
}
