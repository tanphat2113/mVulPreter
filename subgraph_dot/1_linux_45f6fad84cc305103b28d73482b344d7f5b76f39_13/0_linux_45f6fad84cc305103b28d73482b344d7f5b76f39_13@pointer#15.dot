digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_13@pointer" {
"1000126" [label="(Call,*rp = raw6_sk(sk))"];
"1000128" [label="(Call,raw6_sk(sk))"];
"1000123" [label="(Call,inet6_sk(sk))"];
"1000118" [label="(Call,inet_sk(sk))"];
"1000107" [label="(MethodParameterIn,struct sock *sk)"];
"1000701" [label="(Call,rawv6_push_pending_frames(sk, &fl6, rp))"];
"1000699" [label="(Call,err = rawv6_push_pending_frames(sk, &fl6, rp))"];
"1000716" [label="(Call,err < 0)"];
"1000715" [label="(Call,err < 0 ? err : len)"];
"1000714" [label="(Return,return err < 0 ? err : len;)"];
"1000706" [label="(Call,release_sock(sk))"];
"1000123" [label="(Call,inet6_sk(sk))"];
"1000664" [label="(Call,lock_sock(sk))"];
"1000168" [label="(Call,len > INT_MAX)"];
"1000689" [label="(Call,ip6_flush_pending_frames(sk))"];
"1000651" [label="(Call,rawv6_send_hdrinc(sk, msg, len, &fl6, &dst, msg->msg_flags))"];
"1000692" [label="(ControlStructure,if (!(msg->msg_flags & MSG_MORE)))"];
"1000707" [label="(Identifier,sk)"];
"1000718" [label="(Literal,0)"];
"1000649" [label="(Call,err = rawv6_send_hdrinc(sk, msg, len, &fl6, &dst, msg->msg_flags))"];
"1000720" [label="(Identifier,len)"];
"1000706" [label="(Call,release_sock(sk))"];
"1000118" [label="(Call,inet_sk(sk))"];
"1000725" [label="(Call,!(msg->msg_flags & MSG_PROBE) || len)"];
"1000717" [label="(Identifier,err)"];
"1000716" [label="(Call,err < 0)"];
"1000715" [label="(Call,err < 0 ? err : len)"];
"1000700" [label="(Identifier,err)"];
"1000702" [label="(Identifier,sk)"];
"1000121" [label="(Call,*np = inet6_sk(sk))"];
"1000132" [label="(Identifier,opt)"];
"1000594" [label="(Call,ip6_dst_lookup_flow(sk, &fl6, final_p))"];
"1000127" [label="(Identifier,rp)"];
"1000279" [label="(Call,fl6_sock_lookup(sk, fl6.flowlabel))"];
"1000578" [label="(Call,security_sk_classify_flow(sk, flowi6_to_flowi(&fl6)))"];
"1000128" [label="(Call,raw6_sk(sk))"];
"1000126" [label="(Call,*rp = raw6_sk(sk))"];
"1000708" [label="(JumpTarget,done:)"];
"1000110" [label="(Block,)"];
"1000714" [label="(Return,return err < 0 ? err : len;)"];
"1000666" [label="(Call,err = ip6_append_data(sk, raw6_getfrag, &rfv,\n\t\t\tlen, 0, hlimit, tclass, opt, &fl6, (struct rt6_info *)dst,\n\t\t\tmsg->msg_flags, dontfrag))"];
"1000719" [label="(Identifier,err)"];
"1000734" [label="(Call,err = 0)"];
"1000394" [label="(Call,sock_net(sk))"];
"1000109" [label="(MethodParameterIn,size_t len)"];
"1000668" [label="(Call,ip6_append_data(sk, raw6_getfrag, &rfv,\n\t\t\tlen, 0, hlimit, tclass, opt, &fl6, (struct rt6_info *)dst,\n\t\t\tmsg->msg_flags, dontfrag))"];
"1000701" [label="(Call,rawv6_push_pending_frames(sk, &fl6, rp))"];
"1000428" [label="(Call,fl6_sock_lookup(sk, fl6.flowlabel))"];
"1000705" [label="(Identifier,rp)"];
"1000738" [label="(MethodReturn,static int)"];
"1000703" [label="(Call,&fl6)"];
"1000119" [label="(Identifier,sk)"];
"1000603" [label="(Call,err = PTR_ERR(dst))"];
"1000116" [label="(Call,*inet = inet_sk(sk))"];
"1000107" [label="(MethodParameterIn,struct sock *sk)"];
"1000663" [label="(Block,)"];
"1000129" [label="(Identifier,sk)"];
"1000699" [label="(Call,err = rawv6_push_pending_frames(sk, &fl6, rp))"];
"1000489" [label="(Call,err = rawv6_probe_proto_opt(&rfv, &fl6))"];
"1000393" [label="(Call,ip6_datagram_send_ctl(sock_net(sk), sk, msg, &fl6, opt,\n\t\t\t\t\t    &hlimit, &tclass, &dontfrag))"];
"1000124" [label="(Identifier,sk)"];
"1000126" -> "1000110"  [label="AST: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000128" -> "1000126"  [label="AST: "];
"1000132" -> "1000126"  [label="CFG: "];
"1000126" -> "1000738"  [label="DDG: rp"];
"1000126" -> "1000738"  [label="DDG: raw6_sk(sk)"];
"1000128" -> "1000126"  [label="DDG: sk"];
"1000126" -> "1000701"  [label="DDG: rp"];
"1000128" -> "1000129"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000128" -> "1000738"  [label="DDG: sk"];
"1000123" -> "1000128"  [label="DDG: sk"];
"1000107" -> "1000128"  [label="DDG: sk"];
"1000128" -> "1000279"  [label="DDG: sk"];
"1000128" -> "1000394"  [label="DDG: sk"];
"1000128" -> "1000578"  [label="DDG: sk"];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000123" -> "1000121"  [label="DDG: sk"];
"1000118" -> "1000123"  [label="DDG: sk"];
"1000107" -> "1000123"  [label="DDG: sk"];
"1000118" -> "1000116"  [label="AST: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000118" -> "1000116"  [label="DDG: sk"];
"1000107" -> "1000118"  [label="DDG: sk"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000738"  [label="DDG: sk"];
"1000107" -> "1000279"  [label="DDG: sk"];
"1000107" -> "1000394"  [label="DDG: sk"];
"1000107" -> "1000393"  [label="DDG: sk"];
"1000107" -> "1000428"  [label="DDG: sk"];
"1000107" -> "1000578"  [label="DDG: sk"];
"1000107" -> "1000594"  [label="DDG: sk"];
"1000107" -> "1000651"  [label="DDG: sk"];
"1000107" -> "1000664"  [label="DDG: sk"];
"1000107" -> "1000668"  [label="DDG: sk"];
"1000107" -> "1000689"  [label="DDG: sk"];
"1000107" -> "1000701"  [label="DDG: sk"];
"1000107" -> "1000706"  [label="DDG: sk"];
"1000701" -> "1000699"  [label="AST: "];
"1000701" -> "1000705"  [label="CFG: "];
"1000702" -> "1000701"  [label="AST: "];
"1000703" -> "1000701"  [label="AST: "];
"1000705" -> "1000701"  [label="AST: "];
"1000699" -> "1000701"  [label="CFG: "];
"1000701" -> "1000738"  [label="DDG: rp"];
"1000701" -> "1000738"  [label="DDG: &fl6"];
"1000701" -> "1000699"  [label="DDG: sk"];
"1000701" -> "1000699"  [label="DDG: &fl6"];
"1000701" -> "1000699"  [label="DDG: rp"];
"1000668" -> "1000701"  [label="DDG: sk"];
"1000668" -> "1000701"  [label="DDG: &fl6"];
"1000701" -> "1000706"  [label="DDG: sk"];
"1000699" -> "1000692"  [label="AST: "];
"1000700" -> "1000699"  [label="AST: "];
"1000707" -> "1000699"  [label="CFG: "];
"1000699" -> "1000738"  [label="DDG: rawv6_push_pending_frames(sk, &fl6, rp)"];
"1000699" -> "1000716"  [label="DDG: err"];
"1000716" -> "1000715"  [label="AST: "];
"1000716" -> "1000718"  [label="CFG: "];
"1000717" -> "1000716"  [label="AST: "];
"1000718" -> "1000716"  [label="AST: "];
"1000719" -> "1000716"  [label="CFG: "];
"1000720" -> "1000716"  [label="CFG: "];
"1000716" -> "1000715"  [label="DDG: err"];
"1000734" -> "1000716"  [label="DDG: err"];
"1000603" -> "1000716"  [label="DDG: err"];
"1000489" -> "1000716"  [label="DDG: err"];
"1000666" -> "1000716"  [label="DDG: err"];
"1000649" -> "1000716"  [label="DDG: err"];
"1000715" -> "1000714"  [label="AST: "];
"1000715" -> "1000719"  [label="CFG: "];
"1000715" -> "1000720"  [label="CFG: "];
"1000719" -> "1000715"  [label="AST: "];
"1000720" -> "1000715"  [label="AST: "];
"1000714" -> "1000715"  [label="CFG: "];
"1000715" -> "1000738"  [label="DDG: err < 0"];
"1000715" -> "1000738"  [label="DDG: err < 0 ? err : len"];
"1000715" -> "1000738"  [label="DDG: len"];
"1000715" -> "1000738"  [label="DDG: err"];
"1000715" -> "1000714"  [label="DDG: err < 0 ? err : len"];
"1000168" -> "1000715"  [label="DDG: len"];
"1000651" -> "1000715"  [label="DDG: len"];
"1000725" -> "1000715"  [label="DDG: len"];
"1000668" -> "1000715"  [label="DDG: len"];
"1000109" -> "1000715"  [label="DDG: len"];
"1000714" -> "1000110"  [label="AST: "];
"1000738" -> "1000714"  [label="CFG: "];
"1000714" -> "1000738"  [label="DDG: <RET>"];
"1000706" -> "1000663"  [label="AST: "];
"1000706" -> "1000707"  [label="CFG: "];
"1000707" -> "1000706"  [label="AST: "];
"1000708" -> "1000706"  [label="CFG: "];
"1000706" -> "1000738"  [label="DDG: release_sock(sk)"];
"1000706" -> "1000738"  [label="DDG: sk"];
"1000689" -> "1000706"  [label="DDG: sk"];
"1000668" -> "1000706"  [label="DDG: sk"];
}
