digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_13@API" {
"1000310" [label="(Call,addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000311" [label="(Call,addr_len >= sizeof(struct sockaddr_in6))"];
"1000200" [label="(Call,addr_len < SIN6_LEN_RFC2133)"];
"1000145" [label="(Call,addr_len = msg->msg_namelen)"];
"1000315" [label="(Call,sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000319" [label="(Call,__ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000320" [label="(Call,__ipv6_addr_type(daddr))"];
"1000297" [label="(Call,ipv6_addr_equal(daddr, &sk->sk_v6_daddr))"];
"1000250" [label="(Call,daddr = &sin6->sin6_addr)"];
"1000303" [label="(Call,daddr = &sk->sk_v6_daddr)"];
"1000315" [label="(Call,sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000310" [label="(Call,addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000145" [label="(Call,addr_len = msg->msg_namelen)"];
"1000309" [label="(ControlStructure,if (addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))))"];
"1000298" [label="(Identifier,daddr)"];
"1000201" [label="(Identifier,addr_len)"];
"1000251" [label="(Identifier,daddr)"];
"1000313" [label="(Call,sizeof(struct sockaddr_in6))"];
"1000152" [label="(Identifier,hlimit)"];
"1000198" [label="(Block,)"];
"1000324" [label="(Identifier,fl6)"];
"1000311" [label="(Call,addr_len >= sizeof(struct sockaddr_in6))"];
"1000320" [label="(Call,__ipv6_addr_type(daddr))"];
"1000321" [label="(Identifier,daddr)"];
"1000303" [label="(Call,daddr = &sk->sk_v6_daddr)"];
"1000322" [label="(Call,fl6.flowi6_oif = sin6->sin6_scope_id)"];
"1000110" [label="(Block,)"];
"1000209" [label="(Identifier,sin6)"];
"1000250" [label="(Call,daddr = &sin6->sin6_addr)"];
"1000319" [label="(Call,__ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000299" [label="(Call,&sk->sk_v6_daddr)"];
"1000200" [label="(Call,addr_len < SIN6_LEN_RFC2133)"];
"1000304" [label="(Identifier,daddr)"];
"1000316" [label="(Call,sin6->sin6_scope_id)"];
"1000202" [label="(Identifier,SIN6_LEN_RFC2133)"];
"1000305" [label="(Call,&sk->sk_v6_daddr)"];
"1000147" [label="(Call,msg->msg_namelen)"];
"1000290" [label="(ControlStructure,if (sk->sk_state == TCP_ESTABLISHED &&\n\t\t    ipv6_addr_equal(daddr, &sk->sk_v6_daddr)))"];
"1000738" [label="(MethodReturn,static int)"];
"1000258" [label="(Identifier,np)"];
"1000317" [label="(Identifier,sin6)"];
"1000297" [label="(Call,ipv6_addr_equal(daddr, &sk->sk_v6_daddr))"];
"1000146" [label="(Identifier,addr_len)"];
"1000205" [label="(Identifier,EINVAL)"];
"1000291" [label="(Call,sk->sk_state == TCP_ESTABLISHED &&\n\t\t    ipv6_addr_equal(daddr, &sk->sk_v6_daddr))"];
"1000252" [label="(Call,&sin6->sin6_addr)"];
"1000312" [label="(Identifier,addr_len)"];
"1000501" [label="(Call,ipv6_addr_any(daddr))"];
"1000199" [label="(ControlStructure,if (addr_len < SIN6_LEN_RFC2133))"];
"1000361" [label="(Identifier,fl6)"];
"1000310" -> "1000309"  [label="AST: "];
"1000310" -> "1000311"  [label="CFG: "];
"1000310" -> "1000315"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000315" -> "1000310"  [label="AST: "];
"1000324" -> "1000310"  [label="CFG: "];
"1000361" -> "1000310"  [label="CFG: "];
"1000310" -> "1000738"  [label="DDG: addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
"1000310" -> "1000738"  [label="DDG: sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
"1000310" -> "1000738"  [label="DDG: addr_len >= sizeof(struct sockaddr_in6)"];
"1000311" -> "1000310"  [label="DDG: addr_len"];
"1000315" -> "1000310"  [label="DDG: sin6->sin6_scope_id"];
"1000315" -> "1000310"  [label="DDG: __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
"1000311" -> "1000313"  [label="CFG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000313" -> "1000311"  [label="AST: "];
"1000317" -> "1000311"  [label="CFG: "];
"1000311" -> "1000738"  [label="DDG: addr_len"];
"1000200" -> "1000311"  [label="DDG: addr_len"];
"1000200" -> "1000199"  [label="AST: "];
"1000200" -> "1000202"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000202" -> "1000200"  [label="AST: "];
"1000205" -> "1000200"  [label="CFG: "];
"1000209" -> "1000200"  [label="CFG: "];
"1000200" -> "1000738"  [label="DDG: addr_len"];
"1000200" -> "1000738"  [label="DDG: addr_len < SIN6_LEN_RFC2133"];
"1000200" -> "1000738"  [label="DDG: SIN6_LEN_RFC2133"];
"1000145" -> "1000200"  [label="DDG: addr_len"];
"1000145" -> "1000110"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000152" -> "1000145"  [label="CFG: "];
"1000145" -> "1000738"  [label="DDG: addr_len"];
"1000145" -> "1000738"  [label="DDG: msg->msg_namelen"];
"1000315" -> "1000316"  [label="CFG: "];
"1000315" -> "1000319"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000319" -> "1000315"  [label="AST: "];
"1000315" -> "1000738"  [label="DDG: sin6->sin6_scope_id"];
"1000315" -> "1000738"  [label="DDG: __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
"1000319" -> "1000315"  [label="DDG: __ipv6_addr_type(daddr)"];
"1000315" -> "1000322"  [label="DDG: sin6->sin6_scope_id"];
"1000319" -> "1000320"  [label="CFG: "];
"1000320" -> "1000319"  [label="AST: "];
"1000319" -> "1000738"  [label="DDG: __ipv6_addr_type(daddr)"];
"1000320" -> "1000319"  [label="DDG: daddr"];
"1000320" -> "1000321"  [label="CFG: "];
"1000321" -> "1000320"  [label="AST: "];
"1000320" -> "1000738"  [label="DDG: daddr"];
"1000297" -> "1000320"  [label="DDG: daddr"];
"1000250" -> "1000320"  [label="DDG: daddr"];
"1000303" -> "1000320"  [label="DDG: daddr"];
"1000320" -> "1000501"  [label="DDG: daddr"];
"1000297" -> "1000291"  [label="AST: "];
"1000297" -> "1000299"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000299" -> "1000297"  [label="AST: "];
"1000291" -> "1000297"  [label="CFG: "];
"1000297" -> "1000738"  [label="DDG: daddr"];
"1000297" -> "1000738"  [label="DDG: &sk->sk_v6_daddr"];
"1000297" -> "1000291"  [label="DDG: daddr"];
"1000297" -> "1000291"  [label="DDG: &sk->sk_v6_daddr"];
"1000250" -> "1000297"  [label="DDG: daddr"];
"1000297" -> "1000303"  [label="DDG: &sk->sk_v6_daddr"];
"1000297" -> "1000501"  [label="DDG: daddr"];
"1000250" -> "1000198"  [label="AST: "];
"1000250" -> "1000252"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000252" -> "1000250"  [label="AST: "];
"1000258" -> "1000250"  [label="CFG: "];
"1000250" -> "1000738"  [label="DDG: daddr"];
"1000250" -> "1000738"  [label="DDG: &sin6->sin6_addr"];
"1000250" -> "1000501"  [label="DDG: daddr"];
"1000303" -> "1000290"  [label="AST: "];
"1000303" -> "1000305"  [label="CFG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000305" -> "1000303"  [label="AST: "];
"1000312" -> "1000303"  [label="CFG: "];
"1000303" -> "1000738"  [label="DDG: daddr"];
"1000303" -> "1000738"  [label="DDG: &sk->sk_v6_daddr"];
"1000303" -> "1000501"  [label="DDG: daddr"];
}
