digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_13@pointer" {
"1000623" [label="(Call,tclass = np->tclass)"];
"1000668" [label="(Call,ip6_append_data(sk, raw6_getfrag, &rfv,\n\t\t\tlen, 0, hlimit, tclass, opt, &fl6, (struct rt6_info *)dst,\n\t\t\tmsg->msg_flags, dontfrag))"];
"1000666" [label="(Call,err = ip6_append_data(sk, raw6_getfrag, &rfv,\n\t\t\tlen, 0, hlimit, tclass, opt, &fl6, (struct rt6_info *)dst,\n\t\t\tmsg->msg_flags, dontfrag))"];
"1000716" [label="(Call,err < 0)"];
"1000715" [label="(Call,err < 0 ? err : len)"];
"1000714" [label="(Return,return err < 0 ? err : len;)"];
"1000689" [label="(Call,ip6_flush_pending_frames(sk))"];
"1000706" [label="(Call,release_sock(sk))"];
"1000694" [label="(Call,msg->msg_flags & MSG_MORE)"];
"1000693" [label="(Call,!(msg->msg_flags & MSG_MORE))"];
"1000701" [label="(Call,rawv6_push_pending_frames(sk, &fl6, rp))"];
"1000699" [label="(Call,err = rawv6_push_pending_frames(sk, &fl6, rp))"];
"1000541" [label="(Call,fl6_update_dst(&fl6, opt, &final))"];
"1000694" [label="(Call,msg->msg_flags & MSG_MORE)"];
"1000670" [label="(Identifier,raw6_getfrag)"];
"1000664" [label="(Call,lock_sock(sk))"];
"1000690" [label="(Identifier,sk)"];
"1000686" [label="(Identifier,dontfrag)"];
"1000612" [label="(Call,hlimit = ip6_sk_dst_hoplimit(np, &fl6, dst))"];
"1000168" [label="(Call,len > INT_MAX)"];
"1000689" [label="(Call,ip6_flush_pending_frames(sk))"];
"1000651" [label="(Call,rawv6_send_hdrinc(sk, msg, len, &fl6, &dst, msg->msg_flags))"];
"1000692" [label="(ControlStructure,if (!(msg->msg_flags & MSG_MORE)))"];
"1000707" [label="(Identifier,sk)"];
"1000718" [label="(Literal,0)"];
"1000678" [label="(Call,&fl6)"];
"1000725" [label="(Call,!(msg->msg_flags & MSG_PROBE) || len)"];
"1000706" [label="(Call,release_sock(sk))"];
"1000619" [label="(ControlStructure,if (tclass < 0))"];
"1000673" [label="(Identifier,len)"];
"1000717" [label="(Identifier,err)"];
"1000720" [label="(Identifier,len)"];
"1000649" [label="(Call,err = rawv6_send_hdrinc(sk, msg, len, &fl6, &dst, msg->msg_flags))"];
"1000716" [label="(Call,err < 0)"];
"1000715" [label="(Call,err < 0 ? err : len)"];
"1000669" [label="(Identifier,sk)"];
"1000667" [label="(Identifier,err)"];
"1000700" [label="(Identifier,err)"];
"1000702" [label="(Identifier,sk)"];
"1000677" [label="(Identifier,opt)"];
"1000614" [label="(Call,ip6_sk_dst_hoplimit(np, &fl6, dst))"];
"1000594" [label="(Call,ip6_dst_lookup_flow(sk, &fl6, final_p))"];
"1000638" [label="(Call,msg->msg_flags&MSG_CONFIRM)"];
"1000632" [label="(Call,dontfrag = np->dontfrag)"];
"1000680" [label="(Call,(struct rt6_info *)dst)"];
"1000683" [label="(Call,msg->msg_flags)"];
"1000698" [label="(Identifier,MSG_MORE)"];
"1000609" [label="(Call,hlimit < 0)"];
"1000126" [label="(Call,*rp = raw6_sk(sk))"];
"1000708" [label="(JumpTarget,done:)"];
"1000110" [label="(Block,)"];
"1000714" [label="(Return,return err < 0 ? err : len;)"];
"1000625" [label="(Call,np->tclass)"];
"1000666" [label="(Call,err = ip6_append_data(sk, raw6_getfrag, &rfv,\n\t\t\tlen, 0, hlimit, tclass, opt, &fl6, (struct rt6_info *)dst,\n\t\t\tmsg->msg_flags, dontfrag))"];
"1000674" [label="(Literal,0)"];
"1000719" [label="(Identifier,err)"];
"1000734" [label="(Call,err = 0)"];
"1000109" [label="(MethodParameterIn,size_t len)"];
"1000727" [label="(Call,msg->msg_flags & MSG_PROBE)"];
"1000620" [label="(Call,tclass < 0)"];
"1000668" [label="(Call,ip6_append_data(sk, raw6_getfrag, &rfv,\n\t\t\tlen, 0, hlimit, tclass, opt, &fl6, (struct rt6_info *)dst,\n\t\t\tmsg->msg_flags, dontfrag))"];
"1000489" [label="(Call,err = rawv6_probe_proto_opt(&rfv, &fl6))"];
"1000701" [label="(Call,rawv6_push_pending_frames(sk, &fl6, rp))"];
"1000623" [label="(Call,tclass = np->tclass)"];
"1000671" [label="(Call,&rfv)"];
"1000630" [label="(Identifier,dontfrag)"];
"1000705" [label="(Identifier,rp)"];
"1000738" [label="(MethodReturn,static int)"];
"1000703" [label="(Call,&fl6)"];
"1000491" [label="(Call,rawv6_probe_proto_opt(&rfv, &fl6))"];
"1000603" [label="(Call,err = PTR_ERR(dst))"];
"1000695" [label="(Call,msg->msg_flags)"];
"1000687" [label="(ControlStructure,if (err))"];
"1000693" [label="(Call,!(msg->msg_flags & MSG_MORE))"];
"1000688" [label="(Identifier,err)"];
"1000675" [label="(Identifier,hlimit)"];
"1000107" [label="(MethodParameterIn,struct sock *sk)"];
"1000663" [label="(Block,)"];
"1000624" [label="(Identifier,tclass)"];
"1000699" [label="(Call,err = rawv6_push_pending_frames(sk, &fl6, rp))"];
"1000676" [label="(Identifier,tclass)"];
"1000629" [label="(Call,dontfrag < 0)"];
"1000623" -> "1000619"  [label="AST: "];
"1000623" -> "1000625"  [label="CFG: "];
"1000624" -> "1000623"  [label="AST: "];
"1000625" -> "1000623"  [label="AST: "];
"1000630" -> "1000623"  [label="CFG: "];
"1000623" -> "1000738"  [label="DDG: tclass"];
"1000623" -> "1000738"  [label="DDG: np->tclass"];
"1000623" -> "1000668"  [label="DDG: tclass"];
"1000668" -> "1000666"  [label="AST: "];
"1000668" -> "1000686"  [label="CFG: "];
"1000669" -> "1000668"  [label="AST: "];
"1000670" -> "1000668"  [label="AST: "];
"1000671" -> "1000668"  [label="AST: "];
"1000673" -> "1000668"  [label="AST: "];
"1000674" -> "1000668"  [label="AST: "];
"1000675" -> "1000668"  [label="AST: "];
"1000676" -> "1000668"  [label="AST: "];
"1000677" -> "1000668"  [label="AST: "];
"1000678" -> "1000668"  [label="AST: "];
"1000680" -> "1000668"  [label="AST: "];
"1000683" -> "1000668"  [label="AST: "];
"1000686" -> "1000668"  [label="AST: "];
"1000666" -> "1000668"  [label="CFG: "];
"1000668" -> "1000738"  [label="DDG: &fl6"];
"1000668" -> "1000738"  [label="DDG: tclass"];
"1000668" -> "1000738"  [label="DDG: opt"];
"1000668" -> "1000738"  [label="DDG: (struct rt6_info *)dst"];
"1000668" -> "1000738"  [label="DDG: msg->msg_flags"];
"1000668" -> "1000738"  [label="DDG: hlimit"];
"1000668" -> "1000738"  [label="DDG: raw6_getfrag"];
"1000668" -> "1000738"  [label="DDG: &rfv"];
"1000668" -> "1000738"  [label="DDG: dontfrag"];
"1000668" -> "1000666"  [label="DDG: 0"];
"1000668" -> "1000666"  [label="DDG: opt"];
"1000668" -> "1000666"  [label="DDG: sk"];
"1000668" -> "1000666"  [label="DDG: dontfrag"];
"1000668" -> "1000666"  [label="DDG: &fl6"];
"1000668" -> "1000666"  [label="DDG: tclass"];
"1000668" -> "1000666"  [label="DDG: msg->msg_flags"];
"1000668" -> "1000666"  [label="DDG: raw6_getfrag"];
"1000668" -> "1000666"  [label="DDG: (struct rt6_info *)dst"];
"1000668" -> "1000666"  [label="DDG: hlimit"];
"1000668" -> "1000666"  [label="DDG: len"];
"1000668" -> "1000666"  [label="DDG: &rfv"];
"1000664" -> "1000668"  [label="DDG: sk"];
"1000107" -> "1000668"  [label="DDG: sk"];
"1000491" -> "1000668"  [label="DDG: &rfv"];
"1000168" -> "1000668"  [label="DDG: len"];
"1000725" -> "1000668"  [label="DDG: len"];
"1000109" -> "1000668"  [label="DDG: len"];
"1000612" -> "1000668"  [label="DDG: hlimit"];
"1000609" -> "1000668"  [label="DDG: hlimit"];
"1000620" -> "1000668"  [label="DDG: tclass"];
"1000541" -> "1000668"  [label="DDG: opt"];
"1000614" -> "1000668"  [label="DDG: &fl6"];
"1000594" -> "1000668"  [label="DDG: &fl6"];
"1000680" -> "1000668"  [label="DDG: dst"];
"1000638" -> "1000668"  [label="DDG: msg->msg_flags"];
"1000727" -> "1000668"  [label="DDG: msg->msg_flags"];
"1000629" -> "1000668"  [label="DDG: dontfrag"];
"1000632" -> "1000668"  [label="DDG: dontfrag"];
"1000668" -> "1000689"  [label="DDG: sk"];
"1000668" -> "1000694"  [label="DDG: msg->msg_flags"];
"1000668" -> "1000701"  [label="DDG: sk"];
"1000668" -> "1000701"  [label="DDG: &fl6"];
"1000668" -> "1000706"  [label="DDG: sk"];
"1000668" -> "1000715"  [label="DDG: len"];
"1000666" -> "1000663"  [label="AST: "];
"1000667" -> "1000666"  [label="AST: "];
"1000688" -> "1000666"  [label="CFG: "];
"1000666" -> "1000738"  [label="DDG: ip6_append_data(sk, raw6_getfrag, &rfv,\n\t\t\tlen, 0, hlimit, tclass, opt, &fl6, (struct rt6_info *)dst,\n\t\t\tmsg->msg_flags, dontfrag)"];
"1000666" -> "1000716"  [label="DDG: err"];
"1000716" -> "1000715"  [label="AST: "];
"1000716" -> "1000718"  [label="CFG: "];
"1000717" -> "1000716"  [label="AST: "];
"1000718" -> "1000716"  [label="AST: "];
"1000719" -> "1000716"  [label="CFG: "];
"1000720" -> "1000716"  [label="CFG: "];
"1000716" -> "1000715"  [label="DDG: err"];
"1000734" -> "1000716"  [label="DDG: err"];
"1000603" -> "1000716"  [label="DDG: err"];
"1000489" -> "1000716"  [label="DDG: err"];
"1000699" -> "1000716"  [label="DDG: err"];
"1000649" -> "1000716"  [label="DDG: err"];
"1000715" -> "1000714"  [label="AST: "];
"1000715" -> "1000719"  [label="CFG: "];
"1000715" -> "1000720"  [label="CFG: "];
"1000719" -> "1000715"  [label="AST: "];
"1000720" -> "1000715"  [label="AST: "];
"1000714" -> "1000715"  [label="CFG: "];
"1000715" -> "1000738"  [label="DDG: err < 0"];
"1000715" -> "1000738"  [label="DDG: err < 0 ? err : len"];
"1000715" -> "1000738"  [label="DDG: len"];
"1000715" -> "1000738"  [label="DDG: err"];
"1000715" -> "1000714"  [label="DDG: err < 0 ? err : len"];
"1000168" -> "1000715"  [label="DDG: len"];
"1000651" -> "1000715"  [label="DDG: len"];
"1000725" -> "1000715"  [label="DDG: len"];
"1000109" -> "1000715"  [label="DDG: len"];
"1000714" -> "1000110"  [label="AST: "];
"1000738" -> "1000714"  [label="CFG: "];
"1000714" -> "1000738"  [label="DDG: <RET>"];
"1000689" -> "1000687"  [label="AST: "];
"1000689" -> "1000690"  [label="CFG: "];
"1000690" -> "1000689"  [label="AST: "];
"1000707" -> "1000689"  [label="CFG: "];
"1000689" -> "1000738"  [label="DDG: ip6_flush_pending_frames(sk)"];
"1000107" -> "1000689"  [label="DDG: sk"];
"1000689" -> "1000706"  [label="DDG: sk"];
"1000706" -> "1000663"  [label="AST: "];
"1000706" -> "1000707"  [label="CFG: "];
"1000707" -> "1000706"  [label="AST: "];
"1000708" -> "1000706"  [label="CFG: "];
"1000706" -> "1000738"  [label="DDG: release_sock(sk)"];
"1000706" -> "1000738"  [label="DDG: sk"];
"1000701" -> "1000706"  [label="DDG: sk"];
"1000107" -> "1000706"  [label="DDG: sk"];
"1000694" -> "1000693"  [label="AST: "];
"1000694" -> "1000698"  [label="CFG: "];
"1000695" -> "1000694"  [label="AST: "];
"1000698" -> "1000694"  [label="AST: "];
"1000693" -> "1000694"  [label="CFG: "];
"1000694" -> "1000738"  [label="DDG: msg->msg_flags"];
"1000694" -> "1000738"  [label="DDG: MSG_MORE"];
"1000694" -> "1000693"  [label="DDG: msg->msg_flags"];
"1000694" -> "1000693"  [label="DDG: MSG_MORE"];
"1000693" -> "1000692"  [label="AST: "];
"1000700" -> "1000693"  [label="CFG: "];
"1000707" -> "1000693"  [label="CFG: "];
"1000693" -> "1000738"  [label="DDG: !(msg->msg_flags & MSG_MORE)"];
"1000693" -> "1000738"  [label="DDG: msg->msg_flags & MSG_MORE"];
"1000701" -> "1000699"  [label="AST: "];
"1000701" -> "1000705"  [label="CFG: "];
"1000702" -> "1000701"  [label="AST: "];
"1000703" -> "1000701"  [label="AST: "];
"1000705" -> "1000701"  [label="AST: "];
"1000699" -> "1000701"  [label="CFG: "];
"1000701" -> "1000738"  [label="DDG: rp"];
"1000701" -> "1000738"  [label="DDG: &fl6"];
"1000701" -> "1000699"  [label="DDG: sk"];
"1000701" -> "1000699"  [label="DDG: &fl6"];
"1000701" -> "1000699"  [label="DDG: rp"];
"1000107" -> "1000701"  [label="DDG: sk"];
"1000126" -> "1000701"  [label="DDG: rp"];
"1000699" -> "1000692"  [label="AST: "];
"1000700" -> "1000699"  [label="AST: "];
"1000707" -> "1000699"  [label="CFG: "];
"1000699" -> "1000738"  [label="DDG: rawv6_push_pending_frames(sk, &fl6, rp)"];
}
