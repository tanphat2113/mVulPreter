digraph "0_wireshark_a66628e425db725df1ac52a3c573a03357060ddd@pointer" {
"1000309" [label="(Call,*err_info = g_strdup_printf(\"cosine: File has %u-byte packet, bigger than maximum of %u\",\n\t\t    pkt_len, WTAP_MAX_PACKET_SIZE))"];
"1000312" [label="(Call,g_strdup_printf(\"cosine: File has %u-byte packet, bigger than maximum of %u\",\n\t\t    pkt_len, WTAP_MAX_PACKET_SIZE))"];
"1000301" [label="(Call,pkt_len > WTAP_MAX_PACKET_SIZE)"];
"1000285" [label="(Call,pkt_len < 0)"];
"1000388" [label="(Call,phdr->len = pkt_len)"];
"1000286" [label="(Identifier,pkt_len)"];
"1000303" [label="(Identifier,WTAP_MAX_PACKET_SIZE)"];
"1000315" [label="(Identifier,WTAP_MAX_PACKET_SIZE)"];
"1000285" [label="(Call,pkt_len < 0)"];
"1000312" [label="(Call,g_strdup_printf(\"cosine: File has %u-byte packet, bigger than maximum of %u\",\n\t\t    pkt_len, WTAP_MAX_PACKET_SIZE))"];
"1000304" [label="(Block,)"];
"1000317" [label="(Identifier,FALSE)"];
"1000309" [label="(Call,*err_info = g_strdup_printf(\"cosine: File has %u-byte packet, bigger than maximum of %u\",\n\t\t    pkt_len, WTAP_MAX_PACKET_SIZE))"];
"1000314" [label="(Identifier,pkt_len)"];
"1000307" [label="(Identifier,err)"];
"1000313" [label="(Literal,\"cosine: File has %u-byte packet, bigger than maximum of %u\")"];
"1000287" [label="(Literal,0)"];
"1000310" [label="(Call,*err_info)"];
"1000320" [label="(Identifier,phdr)"];
"1000697" [label="(MethodReturn,RET)"];
"1000301" [label="(Call,pkt_len > WTAP_MAX_PACKET_SIZE)"];
"1000302" [label="(Identifier,pkt_len)"];
"1000291" [label="(Identifier,err)"];
"1000603" [label="(Call,ws_buffer_assure_space(buf, pkt_len))"];
"1000300" [label="(ControlStructure,if (pkt_len > WTAP_MAX_PACKET_SIZE))"];
"1000284" [label="(ControlStructure,if (pkt_len < 0))"];
"1000309" -> "1000304"  [label="AST: "];
"1000309" -> "1000312"  [label="CFG: "];
"1000310" -> "1000309"  [label="AST: "];
"1000312" -> "1000309"  [label="AST: "];
"1000317" -> "1000309"  [label="CFG: "];
"1000309" -> "1000697"  [label="DDG: "];
"1000309" -> "1000697"  [label="DDG: "];
"1000312" -> "1000309"  [label="DDG: "];
"1000312" -> "1000309"  [label="DDG: "];
"1000312" -> "1000309"  [label="DDG: "];
"1000312" -> "1000315"  [label="CFG: "];
"1000313" -> "1000312"  [label="AST: "];
"1000314" -> "1000312"  [label="AST: "];
"1000315" -> "1000312"  [label="AST: "];
"1000312" -> "1000697"  [label="DDG: "];
"1000312" -> "1000697"  [label="DDG: "];
"1000301" -> "1000312"  [label="DDG: "];
"1000301" -> "1000312"  [label="DDG: "];
"1000301" -> "1000300"  [label="AST: "];
"1000301" -> "1000303"  [label="CFG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000303" -> "1000301"  [label="AST: "];
"1000307" -> "1000301"  [label="CFG: "];
"1000320" -> "1000301"  [label="CFG: "];
"1000301" -> "1000697"  [label="DDG: "];
"1000301" -> "1000697"  [label="DDG: "];
"1000285" -> "1000301"  [label="DDG: "];
"1000301" -> "1000388"  [label="DDG: "];
"1000301" -> "1000603"  [label="DDG: "];
"1000285" -> "1000284"  [label="AST: "];
"1000285" -> "1000287"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000285"  [label="AST: "];
"1000291" -> "1000285"  [label="CFG: "];
"1000302" -> "1000285"  [label="CFG: "];
"1000285" -> "1000697"  [label="DDG: "];
"1000285" -> "1000697"  [label="DDG: "];
}
