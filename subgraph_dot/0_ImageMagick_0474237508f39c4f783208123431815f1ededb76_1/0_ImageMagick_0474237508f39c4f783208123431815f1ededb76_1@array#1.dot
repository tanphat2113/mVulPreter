digraph "0_ImageMagick_0474237508f39c4f783208123431815f1ededb76_1@array" {
"1000968" [label="(Call,1.0*((short *) viff_colormap)[i])"];
"1000966" [label="(Call,value=1.0*((short *) viff_colormap)[i])"];
"1001032" [label="(Call,(unsigned char) value)"];
"1001031" [label="(Call,ScaleCharToQuantum((unsigned char) value))"];
"1001023" [label="(Call,image->colormap[i].red=ScaleCharToQuantum((unsigned char) value))"];
"1001044" [label="(Call,(unsigned char)\n                value)"];
"1001043" [label="(Call,ScaleCharToQuantum((unsigned char)\n                value))"];
"1001035" [label="(Call,image->colormap[i].green=ScaleCharToQuantum((unsigned char)\n                value))"];
"1001056" [label="(Call,(unsigned char) value)"];
"1001055" [label="(Call,ScaleCharToQuantum((unsigned char) value))"];
"1001047" [label="(Call,image->colormap[i].blue=ScaleCharToQuantum((unsigned char) value))"];
"1001083" [label="(Call,(unsigned char) value)"];
"1001082" [label="(Call,ScaleCharToQuantum(\n                (unsigned char) value))"];
"1001070" [label="(Call,image->colormap[i % image->colors].green=ScaleCharToQuantum(\n                (unsigned char) value))"];
"1001110" [label="(Call,(unsigned char) value)"];
"1001109" [label="(Call,ScaleCharToQuantum(\n                  (unsigned char) value))"];
"1001097" [label="(Call,image->colormap[i % image->colors].blue=ScaleCharToQuantum(\n                  (unsigned char) value))"];
"1000966" [label="(Call,value=1.0*((short *) viff_colormap)[i])"];
"1001034" [label="(Identifier,value)"];
"1001070" [label="(Call,image->colormap[i % image->colors].green=ScaleCharToQuantum(\n                (unsigned char) value))"];
"1001112" [label="(Identifier,value)"];
"1001083" [label="(Call,(unsigned char) value)"];
"1000988" [label="(Call,value=((float *) viff_colormap)[i])"];
"1000975" [label="(ControlStructure,break;)"];
"1000997" [label="(Call,value=((double *) viff_colormap)[i])"];
"1001006" [label="(Call,value=1.0*viff_colormap[i])"];
"1001056" [label="(Call,(unsigned char) value)"];
"1001022" [label="(Block,)"];
"1000970" [label="(Call,((short *) viff_colormap)[i])"];
"1001032" [label="(Call,(unsigned char) value)"];
"1001036" [label="(Call,image->colormap[i].green)"];
"1001023" [label="(Call,image->colormap[i].red=ScaleCharToQuantum((unsigned char) value))"];
"1001044" [label="(Call,(unsigned char)\n                value)"];
"1001031" [label="(Call,ScaleCharToQuantum((unsigned char) value))"];
"1002358" [label="(MethodReturn,static Image *)"];
"1001048" [label="(Call,image->colormap[i].blue)"];
"1001097" [label="(Call,image->colormap[i % image->colors].blue=ScaleCharToQuantum(\n                  (unsigned char) value))"];
"1001024" [label="(Call,image->colormap[i].red)"];
"1001046" [label="(Identifier,value)"];
"1001055" [label="(Call,ScaleCharToQuantum((unsigned char) value))"];
"1000956" [label="(Identifier,i)"];
"1001043" [label="(Call,ScaleCharToQuantum((unsigned char)\n                value))"];
"1000977" [label="(Call,value=1.0*((int *) viff_colormap)[i])"];
"1001060" [label="(ControlStructure,if (i < (ssize_t) (2*image->colors)))"];
"1001109" [label="(Call,ScaleCharToQuantum(\n                  (unsigned char) value))"];
"1000967" [label="(Identifier,value)"];
"1001035" [label="(Call,image->colormap[i].green=ScaleCharToQuantum((unsigned char)\n                value))"];
"1001087" [label="(ControlStructure,if (i < (ssize_t) (3*image->colors)))"];
"1001058" [label="(Identifier,value)"];
"1001085" [label="(Identifier,value)"];
"1001051" [label="(Identifier,image)"];
"1000968" [label="(Call,1.0*((short *) viff_colormap)[i])"];
"1001047" [label="(Call,image->colormap[i].blue=ScaleCharToQuantum((unsigned char) value))"];
"1001110" [label="(Call,(unsigned char) value)"];
"1000969" [label="(Literal,1.0)"];
"1001039" [label="(Identifier,image)"];
"1001082" [label="(Call,ScaleCharToQuantum(\n                (unsigned char) value))"];
"1001098" [label="(Call,image->colormap[i % image->colors].blue)"];
"1000964" [label="(Block,)"];
"1001071" [label="(Call,image->colormap[i % image->colors].green)"];
"1000968" -> "1000966"  [label="AST: "];
"1000968" -> "1000970"  [label="CFG: "];
"1000969" -> "1000968"  [label="AST: "];
"1000970" -> "1000968"  [label="AST: "];
"1000966" -> "1000968"  [label="CFG: "];
"1000968" -> "1002358"  [label="DDG: ((short *) viff_colormap)[i]"];
"1000968" -> "1000966"  [label="DDG: 1.0"];
"1000968" -> "1000966"  [label="DDG: ((short *) viff_colormap)[i]"];
"1000966" -> "1000964"  [label="AST: "];
"1000967" -> "1000966"  [label="AST: "];
"1000975" -> "1000966"  [label="CFG: "];
"1000966" -> "1002358"  [label="DDG: value"];
"1000966" -> "1002358"  [label="DDG: 1.0*((short *) viff_colormap)[i]"];
"1000966" -> "1001032"  [label="DDG: value"];
"1000966" -> "1001083"  [label="DDG: value"];
"1000966" -> "1001110"  [label="DDG: value"];
"1001032" -> "1001031"  [label="AST: "];
"1001032" -> "1001034"  [label="CFG: "];
"1001033" -> "1001032"  [label="AST: "];
"1001034" -> "1001032"  [label="AST: "];
"1001031" -> "1001032"  [label="CFG: "];
"1001032" -> "1001031"  [label="DDG: value"];
"1000997" -> "1001032"  [label="DDG: value"];
"1001006" -> "1001032"  [label="DDG: value"];
"1000988" -> "1001032"  [label="DDG: value"];
"1000977" -> "1001032"  [label="DDG: value"];
"1001032" -> "1001044"  [label="DDG: value"];
"1001031" -> "1001023"  [label="AST: "];
"1001023" -> "1001031"  [label="CFG: "];
"1001031" -> "1001023"  [label="DDG: (unsigned char) value"];
"1001023" -> "1001022"  [label="AST: "];
"1001024" -> "1001023"  [label="AST: "];
"1001039" -> "1001023"  [label="CFG: "];
"1001023" -> "1002358"  [label="DDG: image->colormap[i].red"];
"1001044" -> "1001043"  [label="AST: "];
"1001044" -> "1001046"  [label="CFG: "];
"1001045" -> "1001044"  [label="AST: "];
"1001046" -> "1001044"  [label="AST: "];
"1001043" -> "1001044"  [label="CFG: "];
"1001044" -> "1001043"  [label="DDG: value"];
"1001044" -> "1001056"  [label="DDG: value"];
"1001043" -> "1001035"  [label="AST: "];
"1001035" -> "1001043"  [label="CFG: "];
"1001043" -> "1002358"  [label="DDG: (unsigned char)\n                value"];
"1001043" -> "1001035"  [label="DDG: (unsigned char)\n                value"];
"1001035" -> "1001022"  [label="AST: "];
"1001036" -> "1001035"  [label="AST: "];
"1001051" -> "1001035"  [label="CFG: "];
"1001035" -> "1002358"  [label="DDG: image->colormap[i].green"];
"1001035" -> "1002358"  [label="DDG: ScaleCharToQuantum((unsigned char)\n                value)"];
"1001056" -> "1001055"  [label="AST: "];
"1001056" -> "1001058"  [label="CFG: "];
"1001057" -> "1001056"  [label="AST: "];
"1001058" -> "1001056"  [label="AST: "];
"1001055" -> "1001056"  [label="CFG: "];
"1001056" -> "1002358"  [label="DDG: value"];
"1001056" -> "1001055"  [label="DDG: value"];
"1001055" -> "1001047"  [label="AST: "];
"1001047" -> "1001055"  [label="CFG: "];
"1001055" -> "1002358"  [label="DDG: (unsigned char) value"];
"1001055" -> "1001047"  [label="DDG: (unsigned char) value"];
"1001047" -> "1001022"  [label="AST: "];
"1001048" -> "1001047"  [label="AST: "];
"1000956" -> "1001047"  [label="CFG: "];
"1001047" -> "1002358"  [label="DDG: ScaleCharToQuantum((unsigned char) value)"];
"1001047" -> "1002358"  [label="DDG: image->colormap[i].blue"];
"1001083" -> "1001082"  [label="AST: "];
"1001083" -> "1001085"  [label="CFG: "];
"1001084" -> "1001083"  [label="AST: "];
"1001085" -> "1001083"  [label="AST: "];
"1001082" -> "1001083"  [label="CFG: "];
"1001083" -> "1002358"  [label="DDG: value"];
"1001083" -> "1001082"  [label="DDG: value"];
"1000997" -> "1001083"  [label="DDG: value"];
"1001006" -> "1001083"  [label="DDG: value"];
"1000988" -> "1001083"  [label="DDG: value"];
"1000977" -> "1001083"  [label="DDG: value"];
"1001082" -> "1001070"  [label="AST: "];
"1001070" -> "1001082"  [label="CFG: "];
"1001082" -> "1002358"  [label="DDG: (unsigned char) value"];
"1001082" -> "1001070"  [label="DDG: (unsigned char) value"];
"1001070" -> "1001060"  [label="AST: "];
"1001071" -> "1001070"  [label="AST: "];
"1000956" -> "1001070"  [label="CFG: "];
"1001070" -> "1002358"  [label="DDG: image->colormap[i % image->colors].green"];
"1001070" -> "1002358"  [label="DDG: ScaleCharToQuantum(\n                (unsigned char) value)"];
"1001110" -> "1001109"  [label="AST: "];
"1001110" -> "1001112"  [label="CFG: "];
"1001111" -> "1001110"  [label="AST: "];
"1001112" -> "1001110"  [label="AST: "];
"1001109" -> "1001110"  [label="CFG: "];
"1001110" -> "1002358"  [label="DDG: value"];
"1001110" -> "1001109"  [label="DDG: value"];
"1000997" -> "1001110"  [label="DDG: value"];
"1001006" -> "1001110"  [label="DDG: value"];
"1000988" -> "1001110"  [label="DDG: value"];
"1000977" -> "1001110"  [label="DDG: value"];
"1001109" -> "1001097"  [label="AST: "];
"1001097" -> "1001109"  [label="CFG: "];
"1001109" -> "1002358"  [label="DDG: (unsigned char) value"];
"1001109" -> "1001097"  [label="DDG: (unsigned char) value"];
"1001097" -> "1001087"  [label="AST: "];
"1001098" -> "1001097"  [label="AST: "];
"1000956" -> "1001097"  [label="CFG: "];
"1001097" -> "1002358"  [label="DDG: ScaleCharToQuantum(\n                  (unsigned char) value)"];
"1001097" -> "1002358"  [label="DDG: image->colormap[i % image->colors].blue"];
}
