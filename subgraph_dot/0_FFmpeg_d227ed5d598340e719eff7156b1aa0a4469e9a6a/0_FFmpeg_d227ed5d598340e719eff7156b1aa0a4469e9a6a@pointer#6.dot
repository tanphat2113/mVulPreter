digraph "0_FFmpeg_d227ed5d598340e719eff7156b1aa0a4469e9a6a@pointer" {
"1000364" [label="(Call,8 >> s->dct_precision)"];
"1000358" [label="(Call,(8 >> s->intra_dc_precision) * (8 >> s->dct_precision))"];
"1000352" [label="(Call,s->last_dc[cc] * (8 >> s->intra_dc_precision) * (8 >> s->dct_precision))"];
"1000348" [label="(Call,block[0] = s->last_dc[cc] * (8 >> s->intra_dc_precision) * (8 >> s->dct_precision))"];
"1000373" [label="(Call,av_clip(block[0], min, max))"];
"1000369" [label="(Call,block[0] = av_clip(block[0], min, max))"];
"1000379" [label="(Call,mismatch ^= block[0])"];
"1000659" [label="(Call,mismatch ^= block[j])"];
"1000634" [label="(Call,block[j] * quant_matrix[j] * s->qscale)"];
"1000632" [label="(Call,2 * block[j] * quant_matrix[j] * s->qscale)"];
"1000630" [label="(Call,8 * 2 * block[j] * quant_matrix[j] * s->qscale)"];
"1000629" [label="(Call,(8 * 2 * block[j] * quant_matrix[j] * s->qscale) >> s->dct_precision)"];
"1000575" [label="(Call,additional_code_len = s->avctx->bits_per_raw_sample + s->dct_precision + 4)"];
"1000590" [label="(Call,get_bits(&s->gb, additional_code_len))"];
"1000389" [label="(Call,get_vlc2(&s->gb, cur_vlc->table, STUDIO_INTRA_BITS, 2))"];
"1000387" [label="(Call,group = get_vlc2(&s->gb, cur_vlc->table, STUDIO_INTRA_BITS, 2))"];
"1000400" [label="(Call,group < 0)"];
"1000432" [label="(Call,group == 0)"];
"1000440" [label="(Call,group >= 1)"];
"1000439" [label="(Call,group >= 1 && group <= 6)"];
"1000443" [label="(Call,group <= 6)"];
"1000469" [label="(Call,group >= 7)"];
"1000468" [label="(Call,group >= 7 && group <= 12)"];
"1000472" [label="(Call,group <= 12)"];
"1000528" [label="(Call,group >= 13)"];
"1000527" [label="(Call,group >= 13 && group <= 20)"];
"1000531" [label="(Call,group <= 20)"];
"1000559" [label="(Call,group == 21)"];
"1000456" [label="(Call,get_bits(&s->gb, additional_code_len))"];
"1000454" [label="(Call,run += get_bits(&s->gb, additional_code_len))"];
"1000462" [label="(Call,idx += run)"];
"1000501" [label="(Call,idx += run)"];
"1000505" [label="(Call,idx > 63)"];
"1000514" [label="(Call,idx++)"];
"1000536" [label="(Call,idx > 63)"];
"1000545" [label="(Call,idx++)"];
"1000564" [label="(Call,idx > 63)"];
"1000573" [label="(Call,idx++)"];
"1000478" [label="(Call,get_bits(&s->gb, additional_code_len))"];
"1000476" [label="(Call,code = get_bits(&s->gb, additional_code_len))"];
"1000486" [label="(Call,code & 1)"];
"1000484" [label="(Call,sign = code & 1)"];
"1000489" [label="(Call,code >>= 1)"];
"1000492" [label="(Call,run = (1 << (additional_code_len - 1)) + code)"];
"1000494" [label="(Call,(1 << (additional_code_len - 1)) + code)"];
"1000497" [label="(Call,additional_code_len - 1)"];
"1000495" [label="(Call,1 << (additional_code_len - 1))"];
"1000551" [label="(Call,get_xbits(&s->gb, additional_code_len))"];
"1000547" [label="(Call,block[j] = get_xbits(&s->gb, additional_code_len))"];
"1000588" [label="(Call,flc = get_bits(&s->gb, additional_code_len))"];
"1000597" [label="(Call,flc >> (additional_code_len-1))"];
"1000610" [label="(Call,flc ^ ((1 << additional_code_len) -1))"];
"1000606" [label="(Call,-1 * (( flc ^ ((1 << additional_code_len) -1)) + 1))"];
"1000516" [label="(Call,block[j] = sign ? 1 : -1)"];
"1000520" [label="(Call,sign ? 1 : -1)"];
"1000602" [label="(Call,block[j] = -1 * (( flc ^ ((1 << additional_code_len) -1)) + 1))"];
"1000609" [label="(Call,( flc ^ ((1 << additional_code_len) -1)) + 1)"];
"1000619" [label="(Call,block[j] = flc)"];
"1000599" [label="(Call,additional_code_len-1)"];
"1000613" [label="(Call,1 << additional_code_len)"];
"1000612" [label="(Call,(1 << additional_code_len) -1)"];
"1000577" [label="(Call,s->avctx->bits_per_raw_sample + s->dct_precision + 4)"];
"1000583" [label="(Call,s->dct_precision + 4)"];
"1000628" [label="(Call,((8 * 2 * block[j] * quant_matrix[j] * s->qscale) >> s->dct_precision) / 32)"];
"1000624" [label="(Call,block[j] = ((8 * 2 * block[j] * quant_matrix[j] * s->qscale) >> s->dct_precision) / 32)"];
"1000653" [label="(Call,av_clip(block[j], min, max))"];
"1000649" [label="(Call,block[j] = av_clip(block[j], min, max))"];
"1000668" [label="(Call,mismatch & 1)"];
"1000664" [label="(Call,block[63] ^= mismatch & 1)"];
"1000576" [label="(Identifier,additional_code_len)"];
"1000465" [label="(ControlStructure,continue;)"];
"1000400" [label="(Call,group < 0)"];
"1000629" [label="(Call,(8 * 2 * block[j] * quant_matrix[j] * s->qscale) >> s->dct_precision)"];
"1000438" [label="(ControlStructure,if (group >= 1 && group <= 6))"];
"1000385" [label="(Literal,1)"];
"1000660" [label="(Identifier,mismatch)"];
"1000388" [label="(Identifier,group)"];
"1000359" [label="(Call,8 >> s->intra_dc_precision)"];
"1000491" [label="(Literal,1)"];
"1000443" [label="(Call,group <= 6)"];
"1000668" [label="(Call,mismatch & 1)"];
"1000523" [label="(Call,-1)"];
"1000645" [label="(Call,s->dct_precision)"];
"1000651" [label="(Identifier,block)"];
"1000573" [label="(Call,idx++)"];
"1000507" [label="(Literal,63)"];
"1000597" [label="(Call,flc >> (additional_code_len-1))"];
"1000600" [label="(Identifier,additional_code_len)"];
"1000463" [label="(Identifier,idx)"];
"1000536" [label="(Call,idx > 63)"];
"1000623" [label="(Identifier,flc)"];
"1000492" [label="(Call,run = (1 << (additional_code_len - 1)) + code)"];
"1000406" [label="(Identifier,s)"];
"1000399" [label="(ControlStructure,if (group < 0))"];
"1000386" [label="(Block,)"];
"1000484" [label="(Call,sign = code & 1)"];
"1000552" [label="(Call,&s->gb)"];
"1000503" [label="(Identifier,run)"];
"1000630" [label="(Call,8 * 2 * block[j] * quant_matrix[j] * s->qscale)"];
"1000187" [label="(Call,mismatch = 1)"];
"1000604" [label="(Identifier,block)"];
"1000369" [label="(Call,block[0] = av_clip(block[0], min, max))"];
"1000442" [label="(Literal,1)"];
"1000547" [label="(Call,block[j] = get_xbits(&s->gb, additional_code_len))"];
"1000609" [label="(Call,( flc ^ ((1 << additional_code_len) -1)) + 1)"];
"1000615" [label="(Identifier,additional_code_len)"];
"1000364" [label="(Call,8 >> s->dct_precision)"];
"1000472" [label="(Call,group <= 12)"];
"1000498" [label="(Identifier,additional_code_len)"];
"1000548" [label="(Call,block[j])"];
"1000432" [label="(Call,group == 0)"];
"1000332" [label="(Call,block[0] = s->last_dc[cc] * (8 >> s->intra_dc_precision))"];
"1000473" [label="(Identifier,group)"];
"1000371" [label="(Identifier,block)"];
"1000497" [label="(Call,additional_code_len - 1)"];
"1000624" [label="(Call,block[j] = ((8 * 2 * block[j] * quant_matrix[j] * s->qscale) >> s->dct_precision) / 32)"];
"1000456" [label="(Call,get_bits(&s->gb, additional_code_len))"];
"1000297" [label="(Call,get_xbits(&s->gb, dct_dc_size))"];
"1000109" [label="(MethodParameterIn,int32_t block[64])"];
"1000434" [label="(Literal,0)"];
"1000612" [label="(Call,(1 << additional_code_len) -1)"];
"1000470" [label="(Identifier,group)"];
"1000664" [label="(Call,block[63] ^= mismatch & 1)"];
"1000506" [label="(Identifier,idx)"];
"1000486" [label="(Call,code & 1)"];
"1000628" [label="(Call,((8 * 2 * block[j] * quant_matrix[j] * s->qscale) >> s->dct_precision) / 32)"];
"1000560" [label="(Identifier,group)"];
"1000570" [label="(Identifier,j)"];
"1000520" [label="(Call,sign ? 1 : -1)"];
"1000596" [label="(ControlStructure,if (flc >> (additional_code_len-1)))"];
"1000526" [label="(ControlStructure,if (group >= 13 && group <= 20))"];
"1000496" [label="(Literal,1)"];
"1000649" [label="(Call,block[j] = av_clip(block[j], min, max))"];
"1000564" [label="(Call,idx > 63)"];
"1000669" [label="(Identifier,mismatch)"];
"1000366" [label="(Call,s->dct_precision)"];
"1000517" [label="(Call,block[j])"];
"1000542" [label="(Identifier,j)"];
"1000568" [label="(Identifier,AVERROR_INVALIDDATA)"];
"1000565" [label="(Identifier,idx)"];
"1000632" [label="(Call,2 * block[j] * quant_matrix[j] * s->qscale)"];
"1000625" [label="(Call,block[j])"];
"1000381" [label="(Call,block[0])"];
"1000433" [label="(Identifier,group)"];
"1000159" [label="(Call,min = -1 *  (1 << (s->avctx->bits_per_raw_sample + 6)))"];
"1000439" [label="(Call,group >= 1 && group <= 6)"];
"1000537" [label="(Identifier,idx)"];
"1000595" [label="(Identifier,additional_code_len)"];
"1000505" [label="(Call,idx > 63)"];
"1000485" [label="(Identifier,sign)"];
"1000659" [label="(Call,mismatch ^= block[j])"];
"1000588" [label="(Call,flc = get_bits(&s->gb, additional_code_len))"];
"1000500" [label="(Identifier,code)"];
"1000577" [label="(Call,s->avctx->bits_per_raw_sample + s->dct_precision + 4)"];
"1000571" [label="(Call,scantable[idx++])"];
"1000672" [label="(Literal,0)"];
"1000387" [label="(Call,group = get_vlc2(&s->gb, cur_vlc->table, STUDIO_INTRA_BITS, 2))"];
"1000352" [label="(Call,s->last_dc[cc] * (8 >> s->intra_dc_precision) * (8 >> s->dct_precision))"];
"1000446" [label="(Block,)"];
"1000530" [label="(Literal,13)"];
"1000635" [label="(Call,block[j])"];
"1000412" [label="(Call,additional_code_len = ac_state_tab[group][0])"];
"1000511" [label="(Identifier,j)"];
"1000543" [label="(Call,scantable[idx++])"];
"1000561" [label="(Literal,21)"];
"1000448" [label="(Identifier,run)"];
"1000474" [label="(Literal,12)"];
"1000634" [label="(Call,block[j] * quant_matrix[j] * s->qscale)"];
"1000444" [label="(Identifier,group)"];
"1000540" [label="(Identifier,AVERROR_INVALIDDATA)"];
"1000379" [label="(Call,mismatch ^= block[0])"];
"1000493" [label="(Identifier,run)"];
"1000190" [label="(Call,memset(block, 0, 64 * sizeof(int32_t)))"];
"1000161" [label="(Call,-1 *  (1 << (s->avctx->bits_per_raw_sample + 6)))"];
"1000532" [label="(Identifier,group)"];
"1000452" [label="(ControlStructure,if (additional_code_len))"];
"1000440" [label="(Call,group >= 1)"];
"1000613" [label="(Call,1 << additional_code_len)"];
"1000254" [label="(Call,get_vlc2(&s->gb, ctx->studio_chroma_dc.table, STUDIO_INTRA_BITS, 2))"];
"1000455" [label="(Identifier,run)"];
"1000488" [label="(Literal,1)"];
"1000461" [label="(Identifier,additional_code_len)"];
"1000535" [label="(ControlStructure,if (idx > 63))"];
"1000476" [label="(Call,code = get_bits(&s->gb, additional_code_len))"];
"1000499" [label="(Literal,1)"];
"1000626" [label="(Identifier,block)"];
"1000558" [label="(ControlStructure,if (group == 21))"];
"1000583" [label="(Call,s->dct_precision + 4)"];
"1000380" [label="(Identifier,mismatch)"];
"1000638" [label="(Call,quant_matrix[j] * s->qscale)"];
"1000447" [label="(Call,run = 1 << additional_code_len)"];
"1000534" [label="(Block,)"];
"1000521" [label="(Identifier,sign)"];
"1000377" [label="(Identifier,min)"];
"1000441" [label="(Identifier,group)"];
"1000489" [label="(Call,code >>= 1)"];
"1000606" [label="(Call,-1 * (( flc ^ ((1 << additional_code_len) -1)) + 1))"];
"1000531" [label="(Call,group <= 20)"];
"1000475" [label="(Block,)"];
"1000126" [label="(Call,idx = 1)"];
"1000620" [label="(Call,block[j])"];
"1000587" [label="(Literal,4)"];
"1000374" [label="(Call,block[0])"];
"1000468" [label="(Call,group >= 7 && group <= 12)"];
"1000478" [label="(Call,get_bits(&s->gb, additional_code_len))"];
"1000431" [label="(ControlStructure,if (group == 0))"];
"1000614" [label="(Literal,1)"];
"1000658" [label="(Identifier,max)"];
"1000546" [label="(Identifier,idx)"];
"1000619" [label="(Call,block[j] = flc)"];
"1000650" [label="(Call,block[j])"];
"1000490" [label="(Identifier,code)"];
"1000516" [label="(Call,block[j] = sign ? 1 : -1)"];
"1000494" [label="(Call,(1 << (additional_code_len - 1)) + code)"];
"1000483" [label="(Identifier,additional_code_len)"];
"1000522" [label="(Literal,1)"];
"1000654" [label="(Call,block[j])"];
"1000502" [label="(Identifier,idx)"];
"1000607" [label="(Call,-1)"];
"1000349" [label="(Call,block[0])"];
"1000479" [label="(Call,&s->gb)"];
"1000538" [label="(Literal,63)"];
"1000661" [label="(Call,block[j])"];
"1000445" [label="(Literal,6)"];
"1000545" [label="(Call,idx++)"];
"1000365" [label="(Literal,8)"];
"1000633" [label="(Literal,2)"];
"1000574" [label="(Identifier,idx)"];
"1000401" [label="(Identifier,group)"];
"1000467" [label="(ControlStructure,if (group >= 7 && group <= 12))"];
"1000495" [label="(Call,1 << (additional_code_len - 1))"];
"1000617" [label="(Literal,1)"];
"1000665" [label="(Call,block[63])"];
"1000394" [label="(Call,cur_vlc->table)"];
"1000562" [label="(Block,)"];
"1000602" [label="(Call,block[j] = -1 * (( flc ^ ((1 << additional_code_len) -1)) + 1))"];
"1000471" [label="(Literal,7)"];
"1000449" [label="(Call,1 << additional_code_len)"];
"1000563" [label="(ControlStructure,if (idx > 63))"];
"1000591" [label="(Call,&s->gb)"];
"1000590" [label="(Call,get_bits(&s->gb, additional_code_len))"];
"1000512" [label="(Call,scantable[idx++])"];
"1000207" [label="(Call,get_vlc2(&s->gb, ctx->studio_luma_dc.table, STUDIO_INTRA_BITS, 2))"];
"1000347" [label="(ControlStructure,else)"];
"1000603" [label="(Call,block[j])"];
"1000529" [label="(Identifier,group)"];
"1000464" [label="(Identifier,run)"];
"1000610" [label="(Call,flc ^ ((1 << additional_code_len) -1))"];
"1000646" [label="(Identifier,s)"];
"1000378" [label="(Identifier,max)"];
"1000653" [label="(Call,av_clip(block[j], min, max))"];
"1000575" [label="(Call,additional_code_len = s->avctx->bits_per_raw_sample + s->dct_precision + 4)"];
"1000599" [label="(Call,additional_code_len-1)"];
"1000239" [label="(Call,get_vlc2(&s->gb, ctx->studio_luma_dc.table, STUDIO_INTRA_BITS, 2))"];
"1000477" [label="(Identifier,code)"];
"1000348" [label="(Call,block[0] = s->last_dc[cc] * (8 >> s->intra_dc_precision) * (8 >> s->dct_precision))"];
"1000321" [label="(Call,s->last_dc[cc] += dct_diff)"];
"1000598" [label="(Identifier,flc)"];
"1000589" [label="(Identifier,flc)"];
"1000670" [label="(Literal,1)"];
"1000584" [label="(Call,s->dct_precision)"];
"1000436" [label="(ControlStructure,break;)"];
"1000469" [label="(Call,group >= 7)"];
"1000454" [label="(Call,run += get_bits(&s->gb, additional_code_len))"];
"1000389" [label="(Call,get_vlc2(&s->gb, cur_vlc->table, STUDIO_INTRA_BITS, 2))"];
"1000509" [label="(Identifier,AVERROR_INVALIDDATA)"];
"1000390" [label="(Call,&s->gb)"];
"1000648" [label="(Literal,32)"];
"1000174" [label="(Call,max =      ((1 << (s->avctx->bits_per_raw_sample + 6)) - 1))"];
"1000514" [label="(Call,idx++)"];
"1000578" [label="(Call,s->avctx->bits_per_raw_sample)"];
"1000618" [label="(ControlStructure,else)"];
"1000397" [label="(Identifier,STUDIO_INTRA_BITS)"];
"1000457" [label="(Call,&s->gb)"];
"1000601" [label="(Literal,1)"];
"1000402" [label="(Literal,0)"];
"1000559" [label="(Call,group == 21)"];
"1000501" [label="(Call,idx += run)"];
"1000566" [label="(Literal,63)"];
"1000487" [label="(Identifier,code)"];
"1000621" [label="(Identifier,block)"];
"1000515" [label="(Identifier,idx)"];
"1000370" [label="(Call,block[0])"];
"1000611" [label="(Identifier,flc)"];
"1000413" [label="(Identifier,additional_code_len)"];
"1000528" [label="(Call,group >= 13)"];
"1000358" [label="(Call,(8 >> s->intra_dc_precision) * (8 >> s->dct_precision))"];
"1000111" [label="(Block,)"];
"1000616" [label="(Literal,1)"];
"1000373" [label="(Call,av_clip(block[0], min, max))"];
"1000551" [label="(Call,get_xbits(&s->gb, additional_code_len))"];
"1000556" [label="(Identifier,additional_code_len)"];
"1000631" [label="(Literal,8)"];
"1000504" [label="(ControlStructure,if (idx > 63))"];
"1000398" [label="(Literal,2)"];
"1000673" [label="(MethodReturn,static int)"];
"1000353" [label="(Call,s->last_dc[cc])"];
"1000462" [label="(Call,idx += run)"];
"1000657" [label="(Identifier,min)"];
"1000527" [label="(Call,group >= 13 && group <= 20)"];
"1000310" [label="(Call,check_marker(s->avctx, &s->gb, \"dct_dc_size > 8\"))"];
"1000533" [label="(Literal,20)"];
"1000364" -> "1000358"  [label="AST: "];
"1000364" -> "1000366"  [label="CFG: "];
"1000365" -> "1000364"  [label="AST: "];
"1000366" -> "1000364"  [label="AST: "];
"1000358" -> "1000364"  [label="CFG: "];
"1000364" -> "1000673"  [label="DDG: s->dct_precision"];
"1000364" -> "1000358"  [label="DDG: 8"];
"1000364" -> "1000358"  [label="DDG: s->dct_precision"];
"1000364" -> "1000575"  [label="DDG: s->dct_precision"];
"1000364" -> "1000577"  [label="DDG: s->dct_precision"];
"1000364" -> "1000583"  [label="DDG: s->dct_precision"];
"1000364" -> "1000629"  [label="DDG: s->dct_precision"];
"1000358" -> "1000352"  [label="AST: "];
"1000359" -> "1000358"  [label="AST: "];
"1000352" -> "1000358"  [label="CFG: "];
"1000358" -> "1000673"  [label="DDG: 8 >> s->dct_precision"];
"1000358" -> "1000673"  [label="DDG: 8 >> s->intra_dc_precision"];
"1000358" -> "1000352"  [label="DDG: 8 >> s->intra_dc_precision"];
"1000358" -> "1000352"  [label="DDG: 8 >> s->dct_precision"];
"1000359" -> "1000358"  [label="DDG: 8"];
"1000359" -> "1000358"  [label="DDG: s->intra_dc_precision"];
"1000352" -> "1000348"  [label="AST: "];
"1000353" -> "1000352"  [label="AST: "];
"1000348" -> "1000352"  [label="CFG: "];
"1000352" -> "1000673"  [label="DDG: s->last_dc[cc]"];
"1000352" -> "1000673"  [label="DDG: (8 >> s->intra_dc_precision) * (8 >> s->dct_precision)"];
"1000352" -> "1000348"  [label="DDG: s->last_dc[cc]"];
"1000352" -> "1000348"  [label="DDG: (8 >> s->intra_dc_precision) * (8 >> s->dct_precision)"];
"1000321" -> "1000352"  [label="DDG: s->last_dc[cc]"];
"1000348" -> "1000347"  [label="AST: "];
"1000349" -> "1000348"  [label="AST: "];
"1000371" -> "1000348"  [label="CFG: "];
"1000348" -> "1000673"  [label="DDG: s->last_dc[cc] * (8 >> s->intra_dc_precision) * (8 >> s->dct_precision)"];
"1000109" -> "1000348"  [label="DDG: block"];
"1000348" -> "1000373"  [label="DDG: block[0]"];
"1000373" -> "1000369"  [label="AST: "];
"1000373" -> "1000378"  [label="CFG: "];
"1000374" -> "1000373"  [label="AST: "];
"1000377" -> "1000373"  [label="AST: "];
"1000378" -> "1000373"  [label="AST: "];
"1000369" -> "1000373"  [label="CFG: "];
"1000373" -> "1000673"  [label="DDG: min"];
"1000373" -> "1000673"  [label="DDG: max"];
"1000373" -> "1000369"  [label="DDG: block[0]"];
"1000373" -> "1000369"  [label="DDG: min"];
"1000373" -> "1000369"  [label="DDG: max"];
"1000332" -> "1000373"  [label="DDG: block[0]"];
"1000190" -> "1000373"  [label="DDG: block"];
"1000109" -> "1000373"  [label="DDG: block"];
"1000159" -> "1000373"  [label="DDG: min"];
"1000174" -> "1000373"  [label="DDG: max"];
"1000373" -> "1000653"  [label="DDG: min"];
"1000373" -> "1000653"  [label="DDG: max"];
"1000369" -> "1000111"  [label="AST: "];
"1000370" -> "1000369"  [label="AST: "];
"1000380" -> "1000369"  [label="CFG: "];
"1000369" -> "1000673"  [label="DDG: av_clip(block[0], min, max)"];
"1000109" -> "1000369"  [label="DDG: block"];
"1000369" -> "1000379"  [label="DDG: block[0]"];
"1000379" -> "1000111"  [label="AST: "];
"1000379" -> "1000381"  [label="CFG: "];
"1000380" -> "1000379"  [label="AST: "];
"1000381" -> "1000379"  [label="AST: "];
"1000385" -> "1000379"  [label="CFG: "];
"1000379" -> "1000673"  [label="DDG: mismatch"];
"1000379" -> "1000673"  [label="DDG: mismatch ^= block[0]"];
"1000379" -> "1000673"  [label="DDG: block[0]"];
"1000187" -> "1000379"  [label="DDG: mismatch"];
"1000190" -> "1000379"  [label="DDG: block"];
"1000109" -> "1000379"  [label="DDG: block"];
"1000379" -> "1000659"  [label="DDG: mismatch"];
"1000379" -> "1000668"  [label="DDG: mismatch"];
"1000659" -> "1000386"  [label="AST: "];
"1000659" -> "1000661"  [label="CFG: "];
"1000660" -> "1000659"  [label="AST: "];
"1000661" -> "1000659"  [label="AST: "];
"1000385" -> "1000659"  [label="CFG: "];
"1000659" -> "1000673"  [label="DDG: mismatch"];
"1000659" -> "1000673"  [label="DDG: block[j]"];
"1000659" -> "1000673"  [label="DDG: mismatch ^= block[j]"];
"1000659" -> "1000634"  [label="DDG: block[j]"];
"1000649" -> "1000659"  [label="DDG: block[j]"];
"1000190" -> "1000659"  [label="DDG: block"];
"1000109" -> "1000659"  [label="DDG: block"];
"1000659" -> "1000668"  [label="DDG: mismatch"];
"1000634" -> "1000632"  [label="AST: "];
"1000634" -> "1000638"  [label="CFG: "];
"1000635" -> "1000634"  [label="AST: "];
"1000638" -> "1000634"  [label="AST: "];
"1000632" -> "1000634"  [label="CFG: "];
"1000634" -> "1000673"  [label="DDG: quant_matrix[j] * s->qscale"];
"1000634" -> "1000632"  [label="DDG: block[j]"];
"1000634" -> "1000632"  [label="DDG: quant_matrix[j] * s->qscale"];
"1000547" -> "1000634"  [label="DDG: block[j]"];
"1000190" -> "1000634"  [label="DDG: block"];
"1000602" -> "1000634"  [label="DDG: block[j]"];
"1000516" -> "1000634"  [label="DDG: block[j]"];
"1000619" -> "1000634"  [label="DDG: block[j]"];
"1000109" -> "1000634"  [label="DDG: block"];
"1000638" -> "1000634"  [label="DDG: quant_matrix[j]"];
"1000638" -> "1000634"  [label="DDG: s->qscale"];
"1000632" -> "1000630"  [label="AST: "];
"1000633" -> "1000632"  [label="AST: "];
"1000630" -> "1000632"  [label="CFG: "];
"1000632" -> "1000673"  [label="DDG: block[j] * quant_matrix[j] * s->qscale"];
"1000632" -> "1000630"  [label="DDG: 2"];
"1000632" -> "1000630"  [label="DDG: block[j] * quant_matrix[j] * s->qscale"];
"1000630" -> "1000629"  [label="AST: "];
"1000631" -> "1000630"  [label="AST: "];
"1000646" -> "1000630"  [label="CFG: "];
"1000630" -> "1000673"  [label="DDG: 2 * block[j] * quant_matrix[j] * s->qscale"];
"1000630" -> "1000629"  [label="DDG: 8"];
"1000630" -> "1000629"  [label="DDG: 2 * block[j] * quant_matrix[j] * s->qscale"];
"1000629" -> "1000628"  [label="AST: "];
"1000629" -> "1000645"  [label="CFG: "];
"1000645" -> "1000629"  [label="AST: "];
"1000648" -> "1000629"  [label="CFG: "];
"1000629" -> "1000673"  [label="DDG: 8 * 2 * block[j] * quant_matrix[j] * s->qscale"];
"1000629" -> "1000673"  [label="DDG: s->dct_precision"];
"1000629" -> "1000575"  [label="DDG: s->dct_precision"];
"1000629" -> "1000577"  [label="DDG: s->dct_precision"];
"1000629" -> "1000583"  [label="DDG: s->dct_precision"];
"1000629" -> "1000628"  [label="DDG: 8 * 2 * block[j] * quant_matrix[j] * s->qscale"];
"1000629" -> "1000628"  [label="DDG: s->dct_precision"];
"1000575" -> "1000562"  [label="AST: "];
"1000575" -> "1000577"  [label="CFG: "];
"1000576" -> "1000575"  [label="AST: "];
"1000577" -> "1000575"  [label="AST: "];
"1000589" -> "1000575"  [label="CFG: "];
"1000575" -> "1000673"  [label="DDG: s->avctx->bits_per_raw_sample + s->dct_precision + 4"];
"1000575" -> "1000590"  [label="DDG: additional_code_len"];
"1000590" -> "1000588"  [label="AST: "];
"1000590" -> "1000595"  [label="CFG: "];
"1000591" -> "1000590"  [label="AST: "];
"1000595" -> "1000590"  [label="AST: "];
"1000588" -> "1000590"  [label="CFG: "];
"1000590" -> "1000673"  [label="DDG: &s->gb"];
"1000590" -> "1000389"  [label="DDG: &s->gb"];
"1000590" -> "1000588"  [label="DDG: &s->gb"];
"1000590" -> "1000588"  [label="DDG: additional_code_len"];
"1000389" -> "1000590"  [label="DDG: &s->gb"];
"1000590" -> "1000599"  [label="DDG: additional_code_len"];
"1000389" -> "1000387"  [label="AST: "];
"1000389" -> "1000398"  [label="CFG: "];
"1000390" -> "1000389"  [label="AST: "];
"1000394" -> "1000389"  [label="AST: "];
"1000397" -> "1000389"  [label="AST: "];
"1000398" -> "1000389"  [label="AST: "];
"1000387" -> "1000389"  [label="CFG: "];
"1000389" -> "1000673"  [label="DDG: STUDIO_INTRA_BITS"];
"1000389" -> "1000673"  [label="DDG: cur_vlc->table"];
"1000389" -> "1000673"  [label="DDG: &s->gb"];
"1000389" -> "1000387"  [label="DDG: &s->gb"];
"1000389" -> "1000387"  [label="DDG: cur_vlc->table"];
"1000389" -> "1000387"  [label="DDG: STUDIO_INTRA_BITS"];
"1000389" -> "1000387"  [label="DDG: 2"];
"1000297" -> "1000389"  [label="DDG: &s->gb"];
"1000456" -> "1000389"  [label="DDG: &s->gb"];
"1000254" -> "1000389"  [label="DDG: &s->gb"];
"1000254" -> "1000389"  [label="DDG: STUDIO_INTRA_BITS"];
"1000239" -> "1000389"  [label="DDG: &s->gb"];
"1000239" -> "1000389"  [label="DDG: STUDIO_INTRA_BITS"];
"1000478" -> "1000389"  [label="DDG: &s->gb"];
"1000207" -> "1000389"  [label="DDG: &s->gb"];
"1000207" -> "1000389"  [label="DDG: STUDIO_INTRA_BITS"];
"1000310" -> "1000389"  [label="DDG: &s->gb"];
"1000551" -> "1000389"  [label="DDG: &s->gb"];
"1000389" -> "1000456"  [label="DDG: &s->gb"];
"1000389" -> "1000478"  [label="DDG: &s->gb"];
"1000389" -> "1000551"  [label="DDG: &s->gb"];
"1000387" -> "1000386"  [label="AST: "];
"1000388" -> "1000387"  [label="AST: "];
"1000401" -> "1000387"  [label="CFG: "];
"1000387" -> "1000673"  [label="DDG: get_vlc2(&s->gb, cur_vlc->table, STUDIO_INTRA_BITS, 2)"];
"1000387" -> "1000400"  [label="DDG: group"];
"1000400" -> "1000399"  [label="AST: "];
"1000400" -> "1000402"  [label="CFG: "];
"1000401" -> "1000400"  [label="AST: "];
"1000402" -> "1000400"  [label="AST: "];
"1000406" -> "1000400"  [label="CFG: "];
"1000413" -> "1000400"  [label="CFG: "];
"1000400" -> "1000673"  [label="DDG: group"];
"1000400" -> "1000673"  [label="DDG: group < 0"];
"1000400" -> "1000432"  [label="DDG: group"];
"1000432" -> "1000431"  [label="AST: "];
"1000432" -> "1000434"  [label="CFG: "];
"1000433" -> "1000432"  [label="AST: "];
"1000434" -> "1000432"  [label="AST: "];
"1000436" -> "1000432"  [label="CFG: "];
"1000441" -> "1000432"  [label="CFG: "];
"1000432" -> "1000673"  [label="DDG: group == 0"];
"1000432" -> "1000673"  [label="DDG: group"];
"1000432" -> "1000440"  [label="DDG: group"];
"1000440" -> "1000439"  [label="AST: "];
"1000440" -> "1000442"  [label="CFG: "];
"1000441" -> "1000440"  [label="AST: "];
"1000442" -> "1000440"  [label="AST: "];
"1000444" -> "1000440"  [label="CFG: "];
"1000439" -> "1000440"  [label="CFG: "];
"1000440" -> "1000673"  [label="DDG: group"];
"1000440" -> "1000439"  [label="DDG: group"];
"1000440" -> "1000439"  [label="DDG: 1"];
"1000440" -> "1000443"  [label="DDG: group"];
"1000440" -> "1000469"  [label="DDG: group"];
"1000439" -> "1000438"  [label="AST: "];
"1000439" -> "1000443"  [label="CFG: "];
"1000443" -> "1000439"  [label="AST: "];
"1000448" -> "1000439"  [label="CFG: "];
"1000470" -> "1000439"  [label="CFG: "];
"1000439" -> "1000673"  [label="DDG: group <= 6"];
"1000439" -> "1000673"  [label="DDG: group >= 1"];
"1000439" -> "1000673"  [label="DDG: group >= 1 && group <= 6"];
"1000443" -> "1000439"  [label="DDG: group"];
"1000443" -> "1000439"  [label="DDG: 6"];
"1000443" -> "1000445"  [label="CFG: "];
"1000444" -> "1000443"  [label="AST: "];
"1000445" -> "1000443"  [label="AST: "];
"1000443" -> "1000673"  [label="DDG: group"];
"1000443" -> "1000469"  [label="DDG: group"];
"1000469" -> "1000468"  [label="AST: "];
"1000469" -> "1000471"  [label="CFG: "];
"1000470" -> "1000469"  [label="AST: "];
"1000471" -> "1000469"  [label="AST: "];
"1000473" -> "1000469"  [label="CFG: "];
"1000468" -> "1000469"  [label="CFG: "];
"1000469" -> "1000673"  [label="DDG: group"];
"1000469" -> "1000468"  [label="DDG: group"];
"1000469" -> "1000468"  [label="DDG: 7"];
"1000469" -> "1000472"  [label="DDG: group"];
"1000469" -> "1000528"  [label="DDG: group"];
"1000468" -> "1000467"  [label="AST: "];
"1000468" -> "1000472"  [label="CFG: "];
"1000472" -> "1000468"  [label="AST: "];
"1000477" -> "1000468"  [label="CFG: "];
"1000529" -> "1000468"  [label="CFG: "];
"1000468" -> "1000673"  [label="DDG: group <= 12"];
"1000468" -> "1000673"  [label="DDG: group >= 7 && group <= 12"];
"1000468" -> "1000673"  [label="DDG: group >= 7"];
"1000472" -> "1000468"  [label="DDG: group"];
"1000472" -> "1000468"  [label="DDG: 12"];
"1000472" -> "1000474"  [label="CFG: "];
"1000473" -> "1000472"  [label="AST: "];
"1000474" -> "1000472"  [label="AST: "];
"1000472" -> "1000673"  [label="DDG: group"];
"1000472" -> "1000528"  [label="DDG: group"];
"1000528" -> "1000527"  [label="AST: "];
"1000528" -> "1000530"  [label="CFG: "];
"1000529" -> "1000528"  [label="AST: "];
"1000530" -> "1000528"  [label="AST: "];
"1000532" -> "1000528"  [label="CFG: "];
"1000527" -> "1000528"  [label="CFG: "];
"1000528" -> "1000673"  [label="DDG: group"];
"1000528" -> "1000527"  [label="DDG: group"];
"1000528" -> "1000527"  [label="DDG: 13"];
"1000528" -> "1000531"  [label="DDG: group"];
"1000528" -> "1000559"  [label="DDG: group"];
"1000527" -> "1000526"  [label="AST: "];
"1000527" -> "1000531"  [label="CFG: "];
"1000531" -> "1000527"  [label="AST: "];
"1000537" -> "1000527"  [label="CFG: "];
"1000560" -> "1000527"  [label="CFG: "];
"1000527" -> "1000673"  [label="DDG: group >= 13"];
"1000527" -> "1000673"  [label="DDG: group <= 20"];
"1000527" -> "1000673"  [label="DDG: group >= 13 && group <= 20"];
"1000531" -> "1000527"  [label="DDG: group"];
"1000531" -> "1000527"  [label="DDG: 20"];
"1000531" -> "1000533"  [label="CFG: "];
"1000532" -> "1000531"  [label="AST: "];
"1000533" -> "1000531"  [label="AST: "];
"1000531" -> "1000673"  [label="DDG: group"];
"1000531" -> "1000559"  [label="DDG: group"];
"1000559" -> "1000558"  [label="AST: "];
"1000559" -> "1000561"  [label="CFG: "];
"1000560" -> "1000559"  [label="AST: "];
"1000561" -> "1000559"  [label="AST: "];
"1000565" -> "1000559"  [label="CFG: "];
"1000626" -> "1000559"  [label="CFG: "];
"1000559" -> "1000673"  [label="DDG: group"];
"1000559" -> "1000673"  [label="DDG: group == 21"];
"1000456" -> "1000454"  [label="AST: "];
"1000456" -> "1000461"  [label="CFG: "];
"1000457" -> "1000456"  [label="AST: "];
"1000461" -> "1000456"  [label="AST: "];
"1000454" -> "1000456"  [label="CFG: "];
"1000456" -> "1000673"  [label="DDG: additional_code_len"];
"1000456" -> "1000673"  [label="DDG: &s->gb"];
"1000456" -> "1000454"  [label="DDG: &s->gb"];
"1000456" -> "1000454"  [label="DDG: additional_code_len"];
"1000449" -> "1000456"  [label="DDG: additional_code_len"];
"1000454" -> "1000452"  [label="AST: "];
"1000455" -> "1000454"  [label="AST: "];
"1000463" -> "1000454"  [label="CFG: "];
"1000454" -> "1000673"  [label="DDG: get_bits(&s->gb, additional_code_len)"];
"1000447" -> "1000454"  [label="DDG: run"];
"1000454" -> "1000462"  [label="DDG: run"];
"1000462" -> "1000446"  [label="AST: "];
"1000462" -> "1000464"  [label="CFG: "];
"1000463" -> "1000462"  [label="AST: "];
"1000464" -> "1000462"  [label="AST: "];
"1000465" -> "1000462"  [label="CFG: "];
"1000462" -> "1000673"  [label="DDG: idx"];
"1000462" -> "1000673"  [label="DDG: run"];
"1000447" -> "1000462"  [label="DDG: run"];
"1000514" -> "1000462"  [label="DDG: idx"];
"1000573" -> "1000462"  [label="DDG: idx"];
"1000126" -> "1000462"  [label="DDG: idx"];
"1000545" -> "1000462"  [label="DDG: idx"];
"1000462" -> "1000501"  [label="DDG: idx"];
"1000462" -> "1000536"  [label="DDG: idx"];
"1000462" -> "1000564"  [label="DDG: idx"];
"1000501" -> "1000475"  [label="AST: "];
"1000501" -> "1000503"  [label="CFG: "];
"1000502" -> "1000501"  [label="AST: "];
"1000503" -> "1000501"  [label="AST: "];
"1000506" -> "1000501"  [label="CFG: "];
"1000501" -> "1000673"  [label="DDG: run"];
"1000492" -> "1000501"  [label="DDG: run"];
"1000514" -> "1000501"  [label="DDG: idx"];
"1000573" -> "1000501"  [label="DDG: idx"];
"1000126" -> "1000501"  [label="DDG: idx"];
"1000545" -> "1000501"  [label="DDG: idx"];
"1000501" -> "1000505"  [label="DDG: idx"];
"1000505" -> "1000504"  [label="AST: "];
"1000505" -> "1000507"  [label="CFG: "];
"1000506" -> "1000505"  [label="AST: "];
"1000507" -> "1000505"  [label="AST: "];
"1000509" -> "1000505"  [label="CFG: "];
"1000511" -> "1000505"  [label="CFG: "];
"1000505" -> "1000673"  [label="DDG: idx"];
"1000505" -> "1000673"  [label="DDG: idx > 63"];
"1000505" -> "1000514"  [label="DDG: idx"];
"1000514" -> "1000512"  [label="AST: "];
"1000514" -> "1000515"  [label="CFG: "];
"1000515" -> "1000514"  [label="AST: "];
"1000512" -> "1000514"  [label="CFG: "];
"1000514" -> "1000673"  [label="DDG: idx"];
"1000514" -> "1000536"  [label="DDG: idx"];
"1000514" -> "1000564"  [label="DDG: idx"];
"1000536" -> "1000535"  [label="AST: "];
"1000536" -> "1000538"  [label="CFG: "];
"1000537" -> "1000536"  [label="AST: "];
"1000538" -> "1000536"  [label="AST: "];
"1000540" -> "1000536"  [label="CFG: "];
"1000542" -> "1000536"  [label="CFG: "];
"1000536" -> "1000673"  [label="DDG: idx > 63"];
"1000536" -> "1000673"  [label="DDG: idx"];
"1000573" -> "1000536"  [label="DDG: idx"];
"1000126" -> "1000536"  [label="DDG: idx"];
"1000545" -> "1000536"  [label="DDG: idx"];
"1000536" -> "1000545"  [label="DDG: idx"];
"1000545" -> "1000543"  [label="AST: "];
"1000545" -> "1000546"  [label="CFG: "];
"1000546" -> "1000545"  [label="AST: "];
"1000543" -> "1000545"  [label="CFG: "];
"1000545" -> "1000673"  [label="DDG: idx"];
"1000545" -> "1000564"  [label="DDG: idx"];
"1000564" -> "1000563"  [label="AST: "];
"1000564" -> "1000566"  [label="CFG: "];
"1000565" -> "1000564"  [label="AST: "];
"1000566" -> "1000564"  [label="AST: "];
"1000568" -> "1000564"  [label="CFG: "];
"1000570" -> "1000564"  [label="CFG: "];
"1000564" -> "1000673"  [label="DDG: idx"];
"1000564" -> "1000673"  [label="DDG: idx > 63"];
"1000573" -> "1000564"  [label="DDG: idx"];
"1000126" -> "1000564"  [label="DDG: idx"];
"1000564" -> "1000573"  [label="DDG: idx"];
"1000573" -> "1000571"  [label="AST: "];
"1000573" -> "1000574"  [label="CFG: "];
"1000574" -> "1000573"  [label="AST: "];
"1000571" -> "1000573"  [label="CFG: "];
"1000573" -> "1000673"  [label="DDG: idx"];
"1000478" -> "1000476"  [label="AST: "];
"1000478" -> "1000483"  [label="CFG: "];
"1000479" -> "1000478"  [label="AST: "];
"1000483" -> "1000478"  [label="AST: "];
"1000476" -> "1000478"  [label="CFG: "];
"1000478" -> "1000673"  [label="DDG: &s->gb"];
"1000478" -> "1000476"  [label="DDG: &s->gb"];
"1000478" -> "1000476"  [label="DDG: additional_code_len"];
"1000412" -> "1000478"  [label="DDG: additional_code_len"];
"1000478" -> "1000497"  [label="DDG: additional_code_len"];
"1000476" -> "1000475"  [label="AST: "];
"1000477" -> "1000476"  [label="AST: "];
"1000485" -> "1000476"  [label="CFG: "];
"1000476" -> "1000673"  [label="DDG: get_bits(&s->gb, additional_code_len)"];
"1000476" -> "1000486"  [label="DDG: code"];
"1000486" -> "1000484"  [label="AST: "];
"1000486" -> "1000488"  [label="CFG: "];
"1000487" -> "1000486"  [label="AST: "];
"1000488" -> "1000486"  [label="AST: "];
"1000484" -> "1000486"  [label="CFG: "];
"1000486" -> "1000484"  [label="DDG: code"];
"1000486" -> "1000484"  [label="DDG: 1"];
"1000486" -> "1000489"  [label="DDG: code"];
"1000484" -> "1000475"  [label="AST: "];
"1000485" -> "1000484"  [label="AST: "];
"1000490" -> "1000484"  [label="CFG: "];
"1000484" -> "1000673"  [label="DDG: code & 1"];
"1000484" -> "1000673"  [label="DDG: sign"];
"1000489" -> "1000475"  [label="AST: "];
"1000489" -> "1000491"  [label="CFG: "];
"1000490" -> "1000489"  [label="AST: "];
"1000491" -> "1000489"  [label="AST: "];
"1000493" -> "1000489"  [label="CFG: "];
"1000489" -> "1000673"  [label="DDG: code >>= 1"];
"1000489" -> "1000492"  [label="DDG: code"];
"1000489" -> "1000494"  [label="DDG: code"];
"1000492" -> "1000475"  [label="AST: "];
"1000492" -> "1000494"  [label="CFG: "];
"1000493" -> "1000492"  [label="AST: "];
"1000494" -> "1000492"  [label="AST: "];
"1000502" -> "1000492"  [label="CFG: "];
"1000492" -> "1000673"  [label="DDG: (1 << (additional_code_len - 1)) + code"];
"1000495" -> "1000492"  [label="DDG: 1"];
"1000495" -> "1000492"  [label="DDG: additional_code_len - 1"];
"1000494" -> "1000500"  [label="CFG: "];
"1000495" -> "1000494"  [label="AST: "];
"1000500" -> "1000494"  [label="AST: "];
"1000494" -> "1000673"  [label="DDG: 1 << (additional_code_len - 1)"];
"1000494" -> "1000673"  [label="DDG: code"];
"1000495" -> "1000494"  [label="DDG: 1"];
"1000495" -> "1000494"  [label="DDG: additional_code_len - 1"];
"1000497" -> "1000495"  [label="AST: "];
"1000497" -> "1000499"  [label="CFG: "];
"1000498" -> "1000497"  [label="AST: "];
"1000499" -> "1000497"  [label="AST: "];
"1000495" -> "1000497"  [label="CFG: "];
"1000497" -> "1000673"  [label="DDG: additional_code_len"];
"1000497" -> "1000495"  [label="DDG: additional_code_len"];
"1000497" -> "1000495"  [label="DDG: 1"];
"1000496" -> "1000495"  [label="AST: "];
"1000500" -> "1000495"  [label="CFG: "];
"1000495" -> "1000673"  [label="DDG: additional_code_len - 1"];
"1000551" -> "1000547"  [label="AST: "];
"1000551" -> "1000556"  [label="CFG: "];
"1000552" -> "1000551"  [label="AST: "];
"1000556" -> "1000551"  [label="AST: "];
"1000547" -> "1000551"  [label="CFG: "];
"1000551" -> "1000673"  [label="DDG: additional_code_len"];
"1000551" -> "1000673"  [label="DDG: &s->gb"];
"1000551" -> "1000547"  [label="DDG: &s->gb"];
"1000551" -> "1000547"  [label="DDG: additional_code_len"];
"1000412" -> "1000551"  [label="DDG: additional_code_len"];
"1000547" -> "1000534"  [label="AST: "];
"1000548" -> "1000547"  [label="AST: "];
"1000626" -> "1000547"  [label="CFG: "];
"1000547" -> "1000673"  [label="DDG: get_xbits(&s->gb, additional_code_len)"];
"1000109" -> "1000547"  [label="DDG: block"];
"1000588" -> "1000562"  [label="AST: "];
"1000589" -> "1000588"  [label="AST: "];
"1000598" -> "1000588"  [label="CFG: "];
"1000588" -> "1000673"  [label="DDG: get_bits(&s->gb, additional_code_len)"];
"1000588" -> "1000597"  [label="DDG: flc"];
"1000597" -> "1000596"  [label="AST: "];
"1000597" -> "1000599"  [label="CFG: "];
"1000598" -> "1000597"  [label="AST: "];
"1000599" -> "1000597"  [label="AST: "];
"1000604" -> "1000597"  [label="CFG: "];
"1000621" -> "1000597"  [label="CFG: "];
"1000597" -> "1000673"  [label="DDG: additional_code_len-1"];
"1000597" -> "1000673"  [label="DDG: flc >> (additional_code_len-1)"];
"1000599" -> "1000597"  [label="DDG: additional_code_len"];
"1000599" -> "1000597"  [label="DDG: 1"];
"1000597" -> "1000610"  [label="DDG: flc"];
"1000597" -> "1000619"  [label="DDG: flc"];
"1000610" -> "1000609"  [label="AST: "];
"1000610" -> "1000612"  [label="CFG: "];
"1000611" -> "1000610"  [label="AST: "];
"1000612" -> "1000610"  [label="AST: "];
"1000617" -> "1000610"  [label="CFG: "];
"1000610" -> "1000673"  [label="DDG: flc"];
"1000610" -> "1000673"  [label="DDG: (1 << additional_code_len) -1"];
"1000610" -> "1000606"  [label="DDG: flc"];
"1000610" -> "1000606"  [label="DDG: (1 << additional_code_len) -1"];
"1000610" -> "1000609"  [label="DDG: flc"];
"1000610" -> "1000609"  [label="DDG: (1 << additional_code_len) -1"];
"1000612" -> "1000610"  [label="DDG: 1 << additional_code_len"];
"1000612" -> "1000610"  [label="DDG: 1"];
"1000606" -> "1000602"  [label="AST: "];
"1000606" -> "1000609"  [label="CFG: "];
"1000607" -> "1000606"  [label="AST: "];
"1000609" -> "1000606"  [label="AST: "];
"1000602" -> "1000606"  [label="CFG: "];
"1000606" -> "1000673"  [label="DDG: -1"];
"1000606" -> "1000673"  [label="DDG: ( flc ^ ((1 << additional_code_len) -1)) + 1"];
"1000606" -> "1000516"  [label="DDG: -1"];
"1000606" -> "1000520"  [label="DDG: -1"];
"1000606" -> "1000602"  [label="DDG: -1"];
"1000606" -> "1000602"  [label="DDG: ( flc ^ ((1 << additional_code_len) -1)) + 1"];
"1000607" -> "1000606"  [label="DDG: 1"];
"1000516" -> "1000475"  [label="AST: "];
"1000516" -> "1000520"  [label="CFG: "];
"1000517" -> "1000516"  [label="AST: "];
"1000520" -> "1000516"  [label="AST: "];
"1000626" -> "1000516"  [label="CFG: "];
"1000516" -> "1000673"  [label="DDG: sign ? 1 : -1"];
"1000161" -> "1000516"  [label="DDG: -1"];
"1000523" -> "1000516"  [label="DDG: 1"];
"1000109" -> "1000516"  [label="DDG: block"];
"1000520" -> "1000522"  [label="CFG: "];
"1000520" -> "1000523"  [label="CFG: "];
"1000521" -> "1000520"  [label="AST: "];
"1000522" -> "1000520"  [label="AST: "];
"1000523" -> "1000520"  [label="AST: "];
"1000520" -> "1000673"  [label="DDG: sign"];
"1000520" -> "1000673"  [label="DDG: -1"];
"1000161" -> "1000520"  [label="DDG: -1"];
"1000523" -> "1000520"  [label="DDG: 1"];
"1000602" -> "1000596"  [label="AST: "];
"1000603" -> "1000602"  [label="AST: "];
"1000626" -> "1000602"  [label="CFG: "];
"1000602" -> "1000673"  [label="DDG: -1 * (( flc ^ ((1 << additional_code_len) -1)) + 1)"];
"1000109" -> "1000602"  [label="DDG: block"];
"1000609" -> "1000617"  [label="CFG: "];
"1000617" -> "1000609"  [label="AST: "];
"1000609" -> "1000673"  [label="DDG: flc ^ ((1 << additional_code_len) -1)"];
"1000619" -> "1000618"  [label="AST: "];
"1000619" -> "1000623"  [label="CFG: "];
"1000620" -> "1000619"  [label="AST: "];
"1000623" -> "1000619"  [label="AST: "];
"1000626" -> "1000619"  [label="CFG: "];
"1000619" -> "1000673"  [label="DDG: flc"];
"1000109" -> "1000619"  [label="DDG: block"];
"1000599" -> "1000601"  [label="CFG: "];
"1000600" -> "1000599"  [label="AST: "];
"1000601" -> "1000599"  [label="AST: "];
"1000599" -> "1000673"  [label="DDG: additional_code_len"];
"1000599" -> "1000613"  [label="DDG: additional_code_len"];
"1000613" -> "1000612"  [label="AST: "];
"1000613" -> "1000615"  [label="CFG: "];
"1000614" -> "1000613"  [label="AST: "];
"1000615" -> "1000613"  [label="AST: "];
"1000616" -> "1000613"  [label="CFG: "];
"1000613" -> "1000673"  [label="DDG: additional_code_len"];
"1000613" -> "1000612"  [label="DDG: 1"];
"1000613" -> "1000612"  [label="DDG: additional_code_len"];
"1000612" -> "1000616"  [label="CFG: "];
"1000616" -> "1000612"  [label="AST: "];
"1000612" -> "1000673"  [label="DDG: 1 << additional_code_len"];
"1000577" -> "1000583"  [label="CFG: "];
"1000578" -> "1000577"  [label="AST: "];
"1000583" -> "1000577"  [label="AST: "];
"1000577" -> "1000673"  [label="DDG: s->dct_precision + 4"];
"1000577" -> "1000673"  [label="DDG: s->avctx->bits_per_raw_sample"];
"1000583" -> "1000587"  [label="CFG: "];
"1000584" -> "1000583"  [label="AST: "];
"1000587" -> "1000583"  [label="AST: "];
"1000628" -> "1000624"  [label="AST: "];
"1000628" -> "1000648"  [label="CFG: "];
"1000648" -> "1000628"  [label="AST: "];
"1000624" -> "1000628"  [label="CFG: "];
"1000628" -> "1000673"  [label="DDG: (8 * 2 * block[j] * quant_matrix[j] * s->qscale) >> s->dct_precision"];
"1000628" -> "1000624"  [label="DDG: (8 * 2 * block[j] * quant_matrix[j] * s->qscale) >> s->dct_precision"];
"1000628" -> "1000624"  [label="DDG: 32"];
"1000624" -> "1000386"  [label="AST: "];
"1000625" -> "1000624"  [label="AST: "];
"1000651" -> "1000624"  [label="CFG: "];
"1000624" -> "1000673"  [label="DDG: ((8 * 2 * block[j] * quant_matrix[j] * s->qscale) >> s->dct_precision) / 32"];
"1000109" -> "1000624"  [label="DDG: block"];
"1000624" -> "1000653"  [label="DDG: block[j]"];
"1000653" -> "1000649"  [label="AST: "];
"1000653" -> "1000658"  [label="CFG: "];
"1000654" -> "1000653"  [label="AST: "];
"1000657" -> "1000653"  [label="AST: "];
"1000658" -> "1000653"  [label="AST: "];
"1000649" -> "1000653"  [label="CFG: "];
"1000653" -> "1000673"  [label="DDG: max"];
"1000653" -> "1000673"  [label="DDG: min"];
"1000653" -> "1000649"  [label="DDG: block[j]"];
"1000653" -> "1000649"  [label="DDG: min"];
"1000653" -> "1000649"  [label="DDG: max"];
"1000190" -> "1000653"  [label="DDG: block"];
"1000109" -> "1000653"  [label="DDG: block"];
"1000649" -> "1000386"  [label="AST: "];
"1000650" -> "1000649"  [label="AST: "];
"1000660" -> "1000649"  [label="CFG: "];
"1000649" -> "1000673"  [label="DDG: av_clip(block[j], min, max)"];
"1000109" -> "1000649"  [label="DDG: block"];
"1000668" -> "1000664"  [label="AST: "];
"1000668" -> "1000670"  [label="CFG: "];
"1000669" -> "1000668"  [label="AST: "];
"1000670" -> "1000668"  [label="AST: "];
"1000664" -> "1000668"  [label="CFG: "];
"1000668" -> "1000673"  [label="DDG: mismatch"];
"1000668" -> "1000664"  [label="DDG: mismatch"];
"1000668" -> "1000664"  [label="DDG: 1"];
"1000664" -> "1000111"  [label="AST: "];
"1000665" -> "1000664"  [label="AST: "];
"1000672" -> "1000664"  [label="CFG: "];
"1000664" -> "1000673"  [label="DDG: mismatch & 1"];
"1000664" -> "1000673"  [label="DDG: block[63] ^= mismatch & 1"];
"1000664" -> "1000673"  [label="DDG: block[63]"];
"1000190" -> "1000664"  [label="DDG: block"];
"1000109" -> "1000664"  [label="DDG: block"];
}
