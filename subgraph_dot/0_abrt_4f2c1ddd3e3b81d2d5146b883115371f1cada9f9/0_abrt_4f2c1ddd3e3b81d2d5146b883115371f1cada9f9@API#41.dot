digraph "0_abrt_4f2c1ddd3e3b81d2d5146b883115371f1cada9f9@API" {
"1000403" [label="(Call,proc_pid_status = xmalloc_xopen_read_close(path, /*maxsz:*/ NULL))"];
"1000405" [label="(Call,xmalloc_xopen_read_close(path, /*maxsz:*/ NULL))"];
"1000397" [label="(Call,sprintf(path, \"/proc/%lu/status\", (long)pid))"];
"1000400" [label="(Call,(long)pid)"];
"1000392" [label="(Call,get_cwd(pid))"];
"1000386" [label="(Call,(long)pid)"];
"1000370" [label="(Call,get_executable(pid, setting_SaveBinaryImage ? &src_fd_binary : NULL))"];
"1000317" [label="(Call,pid <= 0)"];
"1000301" [label="(Call,pid = xatoi_positive(argv[3]))"];
"1000303" [label="(Call,xatoi_positive(argv[3]))"];
"1000144" [label="(MethodParameterIn,char** argv)"];
"1000270" [label="(Call,strtoull(argv[2], NULL, 10))"];
"1000400" [label="(Call,(long)pid)"];
"1000177" [label="(Call,strchr(argv[1], ' '))"];
"1000388" [label="(Identifier,pid)"];
"1000275" [label="(Literal,10)"];
"1000321" [label="(Call,perror_msg_and_die(\"PID '%s' or limit '%s' is bogus\", argv[3], argv[2]))"];
"1000372" [label="(Call,setting_SaveBinaryImage ? &src_fd_binary : NULL)"];
"1000389" [label="(Identifier,executable)"];
"1000368" [label="(Call,*executable = get_executable(pid, setting_SaveBinaryImage ? &src_fd_binary : NULL))"];
"1000309" [label="(Identifier,uid)"];
"1000390" [label="(Call,user_pwd = get_cwd(pid))"];
"1000295" [label="(Call,*pid_str = argv[3])"];
"1000406" [label="(Identifier,path)"];
"1000399" [label="(Literal,\"/proc/%lu/status\")"];
"1000386" [label="(Call,(long)pid)"];
"1000354" [label="(Call,argv[8] = uts.nodename)"];
"1000257" [label="(Call,* signal_str = argv[1])"];
"1000453" [label="(Call,executable == NULL)"];
"1000315" [label="(Call,errno || pid <= 0)"];
"1000145" [label="(Block,)"];
"1000171" [label="(Call,error_msg_and_die(\"Usage: %s SIGNO CORE_SIZE_LIMIT PID UID GID TIME BINARY_NAME [HOSTNAME]\", argv[0]))"];
"1000392" [label="(Call,get_cwd(pid))"];
"1000397" [label="(Call,sprintf(path, \"/proc/%lu/status\", (long)pid))"];
"1000410" [label="(Identifier,fsuid)"];
"1000144" [label="(MethodParameterIn,char** argv)"];
"1000402" [label="(Identifier,pid)"];
"1000302" [label="(Identifier,pid)"];
"1000318" [label="(Identifier,pid)"];
"1001171" [label="(MethodReturn,int)"];
"1000611" [label="(Call,(long)pid)"];
"1000370" [label="(Call,get_executable(pid, setting_SaveBinaryImage ? &src_fd_binary : NULL))"];
"1000407" [label="(Identifier,NULL)"];
"1000405" [label="(Call,xmalloc_xopen_read_close(path, /*maxsz:*/ NULL))"];
"1000384" [label="(Call,error_msg_and_die(\"PID %lu is '%s', not dumping it to avoid recursion\",\n                        (long)pid, executable))"];
"1000301" [label="(Call,pid = xatoi_positive(argv[3]))"];
"1000371" [label="(Identifier,pid)"];
"1000319" [label="(Literal,0)"];
"1000196" [label="(Call,strchrnul(argv[i], ' '))"];
"1000346" [label="(Call,!argv[8])"];
"1000271" [label="(Call,argv[2])"];
"1001162" [label="(Call,(long)pid)"];
"1000303" [label="(Call,xatoi_positive(argv[3]))"];
"1000304" [label="(Call,argv[3])"];
"1000268" [label="(Call,ulimit_c = strtoull(argv[2], NULL, 10))"];
"1000398" [label="(Identifier,path)"];
"1000317" [label="(Call,pid <= 0)"];
"1000393" [label="(Identifier,pid)"];
"1000404" [label="(Identifier,proc_pid_status)"];
"1000444" [label="(Call,open_user_core(uid, fsuid, pid, &argv[1]))"];
"1000270" [label="(Call,strtoull(argv[2], NULL, 10))"];
"1000590" [label="(Call,(long)pid)"];
"1000459" [label="(Call,(long)pid)"];
"1000403" [label="(Call,proc_pid_status = xmalloc_xopen_read_close(path, /*maxsz:*/ NULL))"];
"1000274" [label="(Identifier,NULL)"];
"1000310" [label="(Call,xatoi_positive(argv[4]))"];
"1000403" -> "1000145"  [label="AST: "];
"1000403" -> "1000405"  [label="CFG: "];
"1000404" -> "1000403"  [label="AST: "];
"1000405" -> "1000403"  [label="AST: "];
"1000410" -> "1000403"  [label="CFG: "];
"1000403" -> "1001171"  [label="DDG: "];
"1000403" -> "1001171"  [label="DDG: "];
"1000405" -> "1000403"  [label="DDG: "];
"1000405" -> "1000403"  [label="DDG: "];
"1000405" -> "1000407"  [label="CFG: "];
"1000406" -> "1000405"  [label="AST: "];
"1000407" -> "1000405"  [label="AST: "];
"1000405" -> "1001171"  [label="DDG: "];
"1000397" -> "1000405"  [label="DDG: "];
"1000270" -> "1000405"  [label="DDG: "];
"1000405" -> "1000453"  [label="DDG: "];
"1000397" -> "1000145"  [label="AST: "];
"1000397" -> "1000400"  [label="CFG: "];
"1000398" -> "1000397"  [label="AST: "];
"1000399" -> "1000397"  [label="AST: "];
"1000400" -> "1000397"  [label="AST: "];
"1000404" -> "1000397"  [label="CFG: "];
"1000397" -> "1001171"  [label="DDG: "];
"1000397" -> "1001171"  [label="DDG: "];
"1000400" -> "1000397"  [label="DDG: "];
"1000400" -> "1000402"  [label="CFG: "];
"1000401" -> "1000400"  [label="AST: "];
"1000402" -> "1000400"  [label="AST: "];
"1000400" -> "1001171"  [label="DDG: "];
"1000392" -> "1000400"  [label="DDG: "];
"1000400" -> "1000444"  [label="DDG: "];
"1000400" -> "1000459"  [label="DDG: "];
"1000400" -> "1000590"  [label="DDG: "];
"1000400" -> "1000611"  [label="DDG: "];
"1000400" -> "1001162"  [label="DDG: "];
"1000392" -> "1000390"  [label="AST: "];
"1000392" -> "1000393"  [label="CFG: "];
"1000393" -> "1000392"  [label="AST: "];
"1000390" -> "1000392"  [label="CFG: "];
"1000392" -> "1000390"  [label="DDG: "];
"1000386" -> "1000392"  [label="DDG: "];
"1000370" -> "1000392"  [label="DDG: "];
"1000386" -> "1000384"  [label="AST: "];
"1000386" -> "1000388"  [label="CFG: "];
"1000387" -> "1000386"  [label="AST: "];
"1000388" -> "1000386"  [label="AST: "];
"1000389" -> "1000386"  [label="CFG: "];
"1000386" -> "1000384"  [label="DDG: "];
"1000370" -> "1000386"  [label="DDG: "];
"1000370" -> "1000368"  [label="AST: "];
"1000370" -> "1000372"  [label="CFG: "];
"1000371" -> "1000370"  [label="AST: "];
"1000372" -> "1000370"  [label="AST: "];
"1000368" -> "1000370"  [label="CFG: "];
"1000370" -> "1001171"  [label="DDG: "];
"1000370" -> "1000368"  [label="DDG: "];
"1000370" -> "1000368"  [label="DDG: "];
"1000317" -> "1000370"  [label="DDG: "];
"1000301" -> "1000370"  [label="DDG: "];
"1000270" -> "1000370"  [label="DDG: "];
"1000317" -> "1000315"  [label="AST: "];
"1000317" -> "1000319"  [label="CFG: "];
"1000318" -> "1000317"  [label="AST: "];
"1000319" -> "1000317"  [label="AST: "];
"1000315" -> "1000317"  [label="CFG: "];
"1000317" -> "1000315"  [label="DDG: "];
"1000317" -> "1000315"  [label="DDG: "];
"1000301" -> "1000317"  [label="DDG: "];
"1000301" -> "1000145"  [label="AST: "];
"1000301" -> "1000303"  [label="CFG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000303" -> "1000301"  [label="AST: "];
"1000309" -> "1000301"  [label="CFG: "];
"1000301" -> "1001171"  [label="DDG: "];
"1000303" -> "1000301"  [label="DDG: "];
"1000303" -> "1000304"  [label="CFG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000303" -> "1001171"  [label="DDG: "];
"1000144" -> "1000303"  [label="DDG: "];
"1000303" -> "1000321"  [label="DDG: "];
"1000144" -> "1000142"  [label="AST: "];
"1000144" -> "1001171"  [label="DDG: "];
"1000144" -> "1000171"  [label="DDG: "];
"1000144" -> "1000177"  [label="DDG: "];
"1000144" -> "1000196"  [label="DDG: "];
"1000144" -> "1000257"  [label="DDG: "];
"1000144" -> "1000270"  [label="DDG: "];
"1000144" -> "1000295"  [label="DDG: "];
"1000144" -> "1000310"  [label="DDG: "];
"1000144" -> "1000321"  [label="DDG: "];
"1000144" -> "1000346"  [label="DDG: "];
"1000144" -> "1000354"  [label="DDG: "];
"1000270" -> "1000268"  [label="AST: "];
"1000270" -> "1000275"  [label="CFG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000274" -> "1000270"  [label="AST: "];
"1000275" -> "1000270"  [label="AST: "];
"1000268" -> "1000270"  [label="CFG: "];
"1000270" -> "1001171"  [label="DDG: "];
"1000270" -> "1000268"  [label="DDG: "];
"1000270" -> "1000268"  [label="DDG: "];
"1000270" -> "1000268"  [label="DDG: "];
"1000270" -> "1000321"  [label="DDG: "];
"1000270" -> "1000372"  [label="DDG: "];
}
