digraph "1_Chrome_96dbafe288dbe2f0cc45fa3c39daf6d0c37acbab_0@API" {
"1000226" [label="(Call,memset(padkey, 0, RC4_KEY_LENGTH + 1))"];
"1000207" [label="(Call,padkey == NULL)"];
"1000200" [label="(Call,padkey = xmlMallocAtomic (RC4_KEY_LENGTH + 1))"];
"1000202" [label="(Call,xmlMallocAtomic (RC4_KEY_LENGTH + 1))"];
"1000261" [label="(Call,memcpy (padkey, key, key_size))"];
"1000325" [label="(Call,PLATFORM_RC4_DECRYPT (ctxt, padkey, bin, ret_len, ret, ret_len))"];
"1000337" [label="(Call,xmlXPathReturnString (ctxt, ret))"];
"1000354" [label="(Call,padkey != NULL)"];
"1000357" [label="(Call,xmlFree (padkey))"];
"1000360" [label="(Call,bin != NULL)"];
"1000363" [label="(Call,xmlFree (bin))"];
"1000342" [label="(Call,key != NULL)"];
"1000345" [label="(Call,xmlFree (key))"];
"1000348" [label="(Call,str != NULL)"];
"1000351" [label="(Call,xmlFree (str))"];
"1000346" [label="(Identifier,key)"];
"1000273" [label="(Call,bin == NULL)"];
"1000343" [label="(Identifier,key)"];
"1000292" [label="(Call,ret_len = exsltCryptoHex2Bin (str, str_len, bin, bin_len))"];
"1000345" [label="(Call,xmlFree (key))"];
"1000328" [label="(Identifier,bin)"];
"1000139" [label="(Call,*bin =\n \tNULL)"];
"1000357" [label="(Call,xmlFree (padkey))"];
"1000242" [label="(Call,key_size < 0)"];
"1000348" [label="(Call,str != NULL)"];
"1000229" [label="(Call,RC4_KEY_LENGTH + 1)"];
"1000310" [label="(Call,xsltTransformError(tctxt, NULL, tctxt->inst,\n\t    \"exsltCryptoRc4EncryptFunction: Failed to allocate result\n\"))"];
"1000355" [label="(Identifier,padkey)"];
"1000227" [label="(Identifier,padkey)"];
"1000200" [label="(Call,padkey = xmlMallocAtomic (RC4_KEY_LENGTH + 1))"];
"1000263" [label="(Identifier,key)"];
"1000329" [label="(Identifier,ret_len)"];
"1000332" [label="(Call,ret[ret_len] = 0)"];
"1000347" [label="(ControlStructure,if (str != NULL))"];
"1000233" [label="(Identifier,key_size)"];
"1000266" [label="(Identifier,bin_len)"];
"1000206" [label="(ControlStructure,if (padkey == NULL))"];
"1000327" [label="(Identifier,padkey)"];
"1000363" [label="(Call,xmlFree (bin))"];
"1000344" [label="(Identifier,NULL)"];
"1000365" [label="(MethodReturn,RET)"];
"1000207" [label="(Call,padkey == NULL)"];
"1000325" [label="(Call,PLATFORM_RC4_DECRYPT (ctxt, padkey, bin, ret_len, ret, ret_len))"];
"1000262" [label="(Identifier,padkey)"];
"1000361" [label="(Identifier,bin)"];
"1000354" [label="(Call,padkey != NULL)"];
"1000208" [label="(Identifier,padkey)"];
"1000209" [label="(Identifier,NULL)"];
"1000294" [label="(Call,exsltCryptoHex2Bin (str, str_len, bin, bin_len))"];
"1000203" [label="(Call,RC4_KEY_LENGTH + 1)"];
"1000342" [label="(Call,key != NULL)"];
"1000103" [label="(MethodParameterIn,xmlXPathParserContextPtr ctxt)"];
"1000226" [label="(Call,memset(padkey, 0, RC4_KEY_LENGTH + 1))"];
"1000338" [label="(Identifier,ctxt)"];
"1000306" [label="(Call,ret == NULL)"];
"1000331" [label="(Identifier,ret_len)"];
"1000330" [label="(Identifier,ret)"];
"1000362" [label="(Identifier,NULL)"];
"1000186" [label="(Call,xmlUTF8Strlen (key))"];
"1000352" [label="(Identifier,str)"];
"1000264" [label="(Identifier,key_size)"];
"1000326" [label="(Identifier,ctxt)"];
"1000334" [label="(Identifier,ret)"];
"1000246" [label="(Call,xsltTransformError(tctxt, NULL, tctxt->inst,\n \t    \"exsltCryptoRc4EncryptFunction: key size too long or key broken\n\"))"];
"1000261" [label="(Call,memcpy (padkey, key, key_size))"];
"1000339" [label="(Identifier,ret)"];
"1000358" [label="(Identifier,padkey)"];
"1000212" [label="(Identifier,tctxt)"];
"1000349" [label="(Identifier,str)"];
"1000202" [label="(Call,xmlMallocAtomic (RC4_KEY_LENGTH + 1))"];
"1000340" [label="(JumpTarget,done:)"];
"1000364" [label="(Identifier,bin)"];
"1000351" [label="(Call,xmlFree (str))"];
"1000360" [label="(Call,bin != NULL)"];
"1000105" [label="(Block,)"];
"1000341" [label="(ControlStructure,if (key != NULL))"];
"1000359" [label="(ControlStructure,if (bin != NULL))"];
"1000350" [label="(Identifier,NULL)"];
"1000201" [label="(Identifier,padkey)"];
"1000228" [label="(Literal,0)"];
"1000353" [label="(ControlStructure,if (padkey != NULL))"];
"1000337" [label="(Call,xmlXPathReturnString (ctxt, ret))"];
"1000234" [label="(Call,xmlUTF8Strsize (key, key_len))"];
"1000356" [label="(Identifier,NULL)"];
"1000277" [label="(Call,xsltTransformError(tctxt, NULL, tctxt->inst,\n\t    \"exsltCryptoRc4EncryptFunction: Failed to allocate string\n\"))"];
"1000168" [label="(Call,xmlUTF8Strlen (str))"];
"1000182" [label="(Call,xmlXPathPopString (ctxt))"];
"1000211" [label="(Call,xsltTransformError(tctxt, NULL, tctxt->inst,\n\t    \"exsltCryptoRc4EncryptFunction: Failed to allocate padkey\n\"))"];
"1000239" [label="(Call,key_size > RC4_KEY_LENGTH)"];
"1000226" -> "1000105"  [label="AST: "];
"1000226" -> "1000229"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000228" -> "1000226"  [label="AST: "];
"1000229" -> "1000226"  [label="AST: "];
"1000233" -> "1000226"  [label="CFG: "];
"1000226" -> "1000365"  [label="DDG: memset(padkey, 0, RC4_KEY_LENGTH + 1)"];
"1000226" -> "1000365"  [label="DDG: RC4_KEY_LENGTH + 1"];
"1000207" -> "1000226"  [label="DDG: padkey"];
"1000226" -> "1000261"  [label="DDG: padkey"];
"1000226" -> "1000354"  [label="DDG: padkey"];
"1000207" -> "1000206"  [label="AST: "];
"1000207" -> "1000209"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000209" -> "1000207"  [label="AST: "];
"1000212" -> "1000207"  [label="CFG: "];
"1000227" -> "1000207"  [label="CFG: "];
"1000207" -> "1000365"  [label="DDG: padkey == NULL"];
"1000200" -> "1000207"  [label="DDG: padkey"];
"1000207" -> "1000211"  [label="DDG: NULL"];
"1000207" -> "1000246"  [label="DDG: NULL"];
"1000207" -> "1000273"  [label="DDG: NULL"];
"1000207" -> "1000354"  [label="DDG: padkey"];
"1000200" -> "1000105"  [label="AST: "];
"1000200" -> "1000202"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000202" -> "1000200"  [label="AST: "];
"1000208" -> "1000200"  [label="CFG: "];
"1000200" -> "1000365"  [label="DDG: xmlMallocAtomic (RC4_KEY_LENGTH + 1)"];
"1000202" -> "1000200"  [label="DDG: RC4_KEY_LENGTH + 1"];
"1000202" -> "1000203"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000202" -> "1000365"  [label="DDG: RC4_KEY_LENGTH + 1"];
"1000261" -> "1000105"  [label="AST: "];
"1000261" -> "1000264"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000263" -> "1000261"  [label="AST: "];
"1000264" -> "1000261"  [label="AST: "];
"1000266" -> "1000261"  [label="CFG: "];
"1000261" -> "1000365"  [label="DDG: key_size"];
"1000261" -> "1000365"  [label="DDG: memcpy (padkey, key, key_size)"];
"1000234" -> "1000261"  [label="DDG: key"];
"1000239" -> "1000261"  [label="DDG: key_size"];
"1000242" -> "1000261"  [label="DDG: key_size"];
"1000261" -> "1000325"  [label="DDG: padkey"];
"1000261" -> "1000342"  [label="DDG: key"];
"1000261" -> "1000354"  [label="DDG: padkey"];
"1000325" -> "1000105"  [label="AST: "];
"1000325" -> "1000331"  [label="CFG: "];
"1000326" -> "1000325"  [label="AST: "];
"1000327" -> "1000325"  [label="AST: "];
"1000328" -> "1000325"  [label="AST: "];
"1000329" -> "1000325"  [label="AST: "];
"1000330" -> "1000325"  [label="AST: "];
"1000331" -> "1000325"  [label="AST: "];
"1000334" -> "1000325"  [label="CFG: "];
"1000325" -> "1000365"  [label="DDG: ret_len"];
"1000325" -> "1000365"  [label="DDG: PLATFORM_RC4_DECRYPT (ctxt, padkey, bin, ret_len, ret, ret_len)"];
"1000182" -> "1000325"  [label="DDG: ctxt"];
"1000103" -> "1000325"  [label="DDG: ctxt"];
"1000294" -> "1000325"  [label="DDG: bin"];
"1000292" -> "1000325"  [label="DDG: ret_len"];
"1000306" -> "1000325"  [label="DDG: ret"];
"1000325" -> "1000337"  [label="DDG: ctxt"];
"1000325" -> "1000337"  [label="DDG: ret"];
"1000325" -> "1000354"  [label="DDG: padkey"];
"1000325" -> "1000360"  [label="DDG: bin"];
"1000337" -> "1000105"  [label="AST: "];
"1000337" -> "1000339"  [label="CFG: "];
"1000338" -> "1000337"  [label="AST: "];
"1000339" -> "1000337"  [label="AST: "];
"1000340" -> "1000337"  [label="CFG: "];
"1000337" -> "1000365"  [label="DDG: ret"];
"1000337" -> "1000365"  [label="DDG: ctxt"];
"1000337" -> "1000365"  [label="DDG: xmlXPathReturnString (ctxt, ret)"];
"1000103" -> "1000337"  [label="DDG: ctxt"];
"1000332" -> "1000337"  [label="DDG: ret[ret_len]"];
"1000354" -> "1000353"  [label="AST: "];
"1000354" -> "1000356"  [label="CFG: "];
"1000355" -> "1000354"  [label="AST: "];
"1000356" -> "1000354"  [label="AST: "];
"1000358" -> "1000354"  [label="CFG: "];
"1000361" -> "1000354"  [label="CFG: "];
"1000354" -> "1000365"  [label="DDG: padkey != NULL"];
"1000354" -> "1000365"  [label="DDG: padkey"];
"1000348" -> "1000354"  [label="DDG: NULL"];
"1000354" -> "1000357"  [label="DDG: padkey"];
"1000354" -> "1000360"  [label="DDG: NULL"];
"1000357" -> "1000353"  [label="AST: "];
"1000357" -> "1000358"  [label="CFG: "];
"1000358" -> "1000357"  [label="AST: "];
"1000361" -> "1000357"  [label="CFG: "];
"1000357" -> "1000365"  [label="DDG: xmlFree (padkey)"];
"1000357" -> "1000365"  [label="DDG: padkey"];
"1000360" -> "1000359"  [label="AST: "];
"1000360" -> "1000362"  [label="CFG: "];
"1000361" -> "1000360"  [label="AST: "];
"1000362" -> "1000360"  [label="AST: "];
"1000364" -> "1000360"  [label="CFG: "];
"1000365" -> "1000360"  [label="CFG: "];
"1000360" -> "1000365"  [label="DDG: bin"];
"1000360" -> "1000365"  [label="DDG: bin != NULL"];
"1000360" -> "1000365"  [label="DDG: NULL"];
"1000139" -> "1000360"  [label="DDG: bin"];
"1000273" -> "1000360"  [label="DDG: bin"];
"1000294" -> "1000360"  [label="DDG: bin"];
"1000360" -> "1000363"  [label="DDG: bin"];
"1000363" -> "1000359"  [label="AST: "];
"1000363" -> "1000364"  [label="CFG: "];
"1000364" -> "1000363"  [label="AST: "];
"1000365" -> "1000363"  [label="CFG: "];
"1000363" -> "1000365"  [label="DDG: bin"];
"1000363" -> "1000365"  [label="DDG: xmlFree (bin)"];
"1000342" -> "1000341"  [label="AST: "];
"1000342" -> "1000344"  [label="CFG: "];
"1000343" -> "1000342"  [label="AST: "];
"1000344" -> "1000342"  [label="AST: "];
"1000346" -> "1000342"  [label="CFG: "];
"1000349" -> "1000342"  [label="CFG: "];
"1000342" -> "1000365"  [label="DDG: key"];
"1000342" -> "1000365"  [label="DDG: key != NULL"];
"1000186" -> "1000342"  [label="DDG: key"];
"1000234" -> "1000342"  [label="DDG: key"];
"1000246" -> "1000342"  [label="DDG: NULL"];
"1000310" -> "1000342"  [label="DDG: NULL"];
"1000211" -> "1000342"  [label="DDG: NULL"];
"1000306" -> "1000342"  [label="DDG: NULL"];
"1000277" -> "1000342"  [label="DDG: NULL"];
"1000342" -> "1000345"  [label="DDG: key"];
"1000342" -> "1000348"  [label="DDG: NULL"];
"1000345" -> "1000341"  [label="AST: "];
"1000345" -> "1000346"  [label="CFG: "];
"1000346" -> "1000345"  [label="AST: "];
"1000349" -> "1000345"  [label="CFG: "];
"1000345" -> "1000365"  [label="DDG: key"];
"1000345" -> "1000365"  [label="DDG: xmlFree (key)"];
"1000348" -> "1000347"  [label="AST: "];
"1000348" -> "1000350"  [label="CFG: "];
"1000349" -> "1000348"  [label="AST: "];
"1000350" -> "1000348"  [label="AST: "];
"1000352" -> "1000348"  [label="CFG: "];
"1000355" -> "1000348"  [label="CFG: "];
"1000348" -> "1000365"  [label="DDG: str"];
"1000348" -> "1000365"  [label="DDG: str != NULL"];
"1000168" -> "1000348"  [label="DDG: str"];
"1000294" -> "1000348"  [label="DDG: str"];
"1000348" -> "1000351"  [label="DDG: str"];
"1000351" -> "1000347"  [label="AST: "];
"1000351" -> "1000352"  [label="CFG: "];
"1000352" -> "1000351"  [label="AST: "];
"1000355" -> "1000351"  [label="CFG: "];
"1000351" -> "1000365"  [label="DDG: xmlFree (str)"];
"1000351" -> "1000365"  [label="DDG: str"];
}
