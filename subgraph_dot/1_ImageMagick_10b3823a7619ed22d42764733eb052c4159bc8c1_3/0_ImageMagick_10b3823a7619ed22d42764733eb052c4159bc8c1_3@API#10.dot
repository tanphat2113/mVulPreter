digraph "0_ImageMagick_10b3823a7619ed22d42764733eb052c4159bc8c1_3@API" {
"1000119" [label="(Call,assert(image_info != (const ImageInfo *) NULL))"];
"1000120" [label="(Call,image_info != (const ImageInfo *) NULL)"];
"1000104" [label="(MethodParameterIn,const ImageInfo *image_info)"];
"1000122" [label="(Call,(const ImageInfo *) NULL)"];
"1000120" [label="(Call,image_info != (const ImageInfo *) NULL)"];
"1000134" [label="(Call,(Image *) NULL)"];
"1000523" [label="(MethodReturn,static MagickBooleanType)"];
"1000128" [label="(Identifier,image_info)"];
"1000119" [label="(Call,assert(image_info != (const ImageInfo *) NULL))"];
"1000122" [label="(Call,(const ImageInfo *) NULL)"];
"1000160" [label="(Call,OpenBlob(image_info,image,WriteBinaryBlobMode,&image->exception))"];
"1000124" [label="(Identifier,NULL)"];
"1000104" [label="(MethodParameterIn,const ImageInfo *image_info)"];
"1000106" [label="(Block,)"];
"1000121" [label="(Identifier,image_info)"];
"1000119" -> "1000106"  [label="AST: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000128" -> "1000119"  [label="CFG: "];
"1000119" -> "1000523"  [label="DDG: image_info != (const ImageInfo *) NULL"];
"1000119" -> "1000523"  [label="DDG: assert(image_info != (const ImageInfo *) NULL)"];
"1000120" -> "1000119"  [label="DDG: image_info"];
"1000120" -> "1000119"  [label="DDG: (const ImageInfo *) NULL"];
"1000120" -> "1000122"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000122" -> "1000120"  [label="AST: "];
"1000120" -> "1000523"  [label="DDG: (const ImageInfo *) NULL"];
"1000104" -> "1000120"  [label="DDG: image_info"];
"1000122" -> "1000120"  [label="DDG: NULL"];
"1000120" -> "1000160"  [label="DDG: image_info"];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000523"  [label="DDG: image_info"];
"1000104" -> "1000160"  [label="DDG: image_info"];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000122" -> "1000134"  [label="DDG: NULL"];
}
