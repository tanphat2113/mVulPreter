digraph "0_Android_cd5f15f588a5d27e99ba12f057245bfe507f8c42@API" {
"1000282" [label="(Call,freeDebugCallbackArgs(i, args))"];
"1000217" [label="(Call,i < number)"];
"1000220" [label="(Call,i++)"];
"1000214" [label="(Call,i = 0)"];
"1000328" [label="(Call,(i+1) == number)"];
"1000198" [label="(Call,calloc(number, sizeof(char*)))"];
"1000185" [label="(Call,number < 0)"];
"1000274" [label="(Call,args[i] == NULL)"];
"1000261" [label="(Call,args[i] = (char *) calloc(len + 1, sizeof(char)))"];
"1000265" [label="(Call,(char *) calloc(len + 1, sizeof(char)))"];
"1000267" [label="(Call,calloc(len + 1, sizeof(char)))"];
"1000249" [label="(Call,len < 0)"];
"1000246" [label="(Call,len == INT_MAX)"];
"1000300" [label="(Call,(int)sizeof(char) * len)"];
"1000295" [label="(Call,sizeof(char) * len)"];
"1000203" [label="(Call,args == NULL)"];
"1000194" [label="(Call,args = (char **) calloc(number, sizeof(char*)))"];
"1000196" [label="(Call,(char **) calloc(number, sizeof(char*)))"];
"1000112" [label="(Block,)"];
"1000200" [label="(Call,sizeof(char*))"];
"1000332" [label="(Identifier,number)"];
"1000222" [label="(Block,)"];
"1000284" [label="(Identifier,args)"];
"1000249" [label="(Call,len < 0)"];
"1000262" [label="(Call,args[i])"];
"1000283" [label="(Identifier,i)"];
"1000278" [label="(Identifier,NULL)"];
"1000199" [label="(Identifier,number)"];
"1000246" [label="(Call,len == INT_MAX)"];
"1000212" [label="(ControlStructure,for (int i = 0; i < number; i++))"];
"1000289" [label="(Call,recv(acceptFD, args[i], sizeof(char) * len, 0)\n != (int)sizeof(char) * len)"];
"1000305" [label="(Identifier,len)"];
"1000628" [label="(Call,freeDebugCallbackArgs(number, args))"];
"1000317" [label="(Call,* buf = args[i])"];
"1000583" [label="(Call,freeDebugCallbackArgs(number, args))"];
"1000371" [label="(Identifier,args)"];
"1000271" [label="(Call,sizeof(char))"];
"1000219" [label="(Identifier,number)"];
"1000328" [label="(Call,(i+1) == number)"];
"1000275" [label="(Call,args[i])"];
"1000377" [label="(Call,issueLocalRequest(RIL_REQUEST_RESET_RADIO, NULL, 0, socket_id))"];
"1000589" [label="(Call,dialData.address = args[1])"];
"1000310" [label="(Call,freeDebugCallbackArgs(i, args))"];
"1000195" [label="(Identifier,args)"];
"1000245" [label="(Call,len == INT_MAX || len < 0)"];
"1000227" [label="(Identifier,acceptFD)"];
"1000329" [label="(Call,i+1)"];
"1000205" [label="(Identifier,NULL)"];
"1000203" [label="(Call,args == NULL)"];
"1000335" [label="(Identifier,sim_id)"];
"1000190" [label="(Literal,\"Invalid number of arguments: \n\")"];
"1000633" [label="(MethodReturn,static void)"];
"1000261" [label="(Call,args[i] = (char *) calloc(len + 1, sizeof(char)))"];
"1000607" [label="(Call,issueLocalRequest(RIL_REQUEST_ANSWER, NULL, 0, socket_id))"];
"1000202" [label="(ControlStructure,if (args == NULL))"];
"1000216" [label="(Literal,0)"];
"1000247" [label="(Identifier,len)"];
"1000184" [label="(ControlStructure,if (number < 0))"];
"1000291" [label="(Identifier,acceptFD)"];
"1000238" [label="(Call,freeDebugCallbackArgs(i, args))"];
"1000250" [label="(Identifier,len)"];
"1000268" [label="(Call,len + 1)"];
"1000301" [label="(Call,(int)sizeof(char))"];
"1000273" [label="(ControlStructure,if (args[i] == NULL))"];
"1000251" [label="(Literal,0)"];
"1000575" [label="(Call,strlen(args[1]))"];
"1000307" [label="(Call,RLOGE (\"error reading on socket: Args[%d] \n\", i))"];
"1000198" [label="(Call,calloc(number, sizeof(char*)))"];
"1000208" [label="(Literal,\"Memory allocation failed for debug args\")"];
"1000186" [label="(Identifier,number)"];
"1000215" [label="(Identifier,i)"];
"1000267" [label="(Call,calloc(len + 1, sizeof(char)))"];
"1000217" [label="(Call,i < number)"];
"1000548" [label="(Call,issueLocalRequest(RIL_REQUEST_SET_NETWORK_SELECTION_AUTOMATIC, NULL, 0, socket_id))"];
"1000295" [label="(Call,sizeof(char) * len)"];
"1000185" [label="(Call,number < 0)"];
"1000265" [label="(Call,(char *) calloc(len + 1, sizeof(char)))"];
"1000220" [label="(Call,i++)"];
"1000204" [label="(Identifier,args)"];
"1000298" [label="(Identifier,len)"];
"1000290" [label="(Call,recv(acceptFD, args[i], sizeof(char) * len, 0))"];
"1000300" [label="(Call,(int)sizeof(char) * len)"];
"1000281" [label="(Literal,\"Memory allocation failed for debug args\")"];
"1000276" [label="(Identifier,args)"];
"1000299" [label="(Literal,0)"];
"1000296" [label="(Call,sizeof(char))"];
"1000274" [label="(Call,args[i] == NULL)"];
"1000194" [label="(Call,args = (char **) calloc(number, sizeof(char*)))"];
"1000218" [label="(Identifier,i)"];
"1000214" [label="(Call,i = 0)"];
"1000327" [label="(ControlStructure,if ((i+1) == number))"];
"1000187" [label="(Literal,0)"];
"1000248" [label="(Identifier,INT_MAX)"];
"1000336" [label="(Call,atoi(args[i]))"];
"1000286" [label="(Identifier,acceptFD)"];
"1000279" [label="(Block,)"];
"1000221" [label="(Identifier,i)"];
"1000369" [label="(Call,atoi(args[0]))"];
"1000282" [label="(Call,freeDebugCallbackArgs(i, args))"];
"1000196" [label="(Call,(char **) calloc(number, sizeof(char*)))"];
"1000255" [label="(Call,freeDebugCallbackArgs(i, args))"];
"1000443" [label="(Call,RIL_UNSOL_RESPONSE(RIL_UNSOL_RESPONSE_VOICE_NETWORK_STATE_CHANGED, NULL, 0, socket_id))"];
"1000282" -> "1000279"  [label="AST: "];
"1000282" -> "1000284"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000284" -> "1000282"  [label="AST: "];
"1000286" -> "1000282"  [label="CFG: "];
"1000282" -> "1000633"  [label="DDG: freeDebugCallbackArgs(i, args)"];
"1000282" -> "1000633"  [label="DDG: args"];
"1000282" -> "1000633"  [label="DDG: i"];
"1000217" -> "1000282"  [label="DDG: i"];
"1000274" -> "1000282"  [label="DDG: args[i]"];
"1000203" -> "1000282"  [label="DDG: args"];
"1000217" -> "1000212"  [label="AST: "];
"1000217" -> "1000219"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000219" -> "1000217"  [label="AST: "];
"1000227" -> "1000217"  [label="CFG: "];
"1000371" -> "1000217"  [label="CFG: "];
"1000217" -> "1000633"  [label="DDG: number"];
"1000217" -> "1000633"  [label="DDG: i < number"];
"1000217" -> "1000633"  [label="DDG: i"];
"1000220" -> "1000217"  [label="DDG: i"];
"1000214" -> "1000217"  [label="DDG: i"];
"1000328" -> "1000217"  [label="DDG: number"];
"1000198" -> "1000217"  [label="DDG: number"];
"1000217" -> "1000220"  [label="DDG: i"];
"1000217" -> "1000238"  [label="DDG: i"];
"1000217" -> "1000255"  [label="DDG: i"];
"1000217" -> "1000307"  [label="DDG: i"];
"1000217" -> "1000328"  [label="DDG: i"];
"1000217" -> "1000328"  [label="DDG: number"];
"1000217" -> "1000329"  [label="DDG: i"];
"1000217" -> "1000583"  [label="DDG: number"];
"1000217" -> "1000628"  [label="DDG: number"];
"1000220" -> "1000212"  [label="AST: "];
"1000220" -> "1000221"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000218" -> "1000220"  [label="CFG: "];
"1000214" -> "1000212"  [label="AST: "];
"1000214" -> "1000216"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000216" -> "1000214"  [label="AST: "];
"1000218" -> "1000214"  [label="CFG: "];
"1000328" -> "1000327"  [label="AST: "];
"1000328" -> "1000332"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000332" -> "1000328"  [label="AST: "];
"1000335" -> "1000328"  [label="CFG: "];
"1000221" -> "1000328"  [label="CFG: "];
"1000328" -> "1000633"  [label="DDG: (i+1) == number"];
"1000328" -> "1000633"  [label="DDG: i+1"];
"1000328" -> "1000583"  [label="DDG: number"];
"1000328" -> "1000628"  [label="DDG: number"];
"1000198" -> "1000196"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000196" -> "1000198"  [label="CFG: "];
"1000198" -> "1000633"  [label="DDG: number"];
"1000198" -> "1000196"  [label="DDG: number"];
"1000185" -> "1000198"  [label="DDG: number"];
"1000185" -> "1000184"  [label="AST: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="AST: "];
"1000190" -> "1000185"  [label="CFG: "];
"1000195" -> "1000185"  [label="CFG: "];
"1000185" -> "1000633"  [label="DDG: number"];
"1000185" -> "1000633"  [label="DDG: number < 0"];
"1000274" -> "1000273"  [label="AST: "];
"1000274" -> "1000278"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000278" -> "1000274"  [label="AST: "];
"1000281" -> "1000274"  [label="CFG: "];
"1000291" -> "1000274"  [label="CFG: "];
"1000274" -> "1000633"  [label="DDG: args[i]"];
"1000274" -> "1000633"  [label="DDG: args[i] == NULL"];
"1000274" -> "1000633"  [label="DDG: NULL"];
"1000261" -> "1000274"  [label="DDG: args[i]"];
"1000203" -> "1000274"  [label="DDG: args"];
"1000203" -> "1000274"  [label="DDG: NULL"];
"1000274" -> "1000290"  [label="DDG: args[i]"];
"1000274" -> "1000377"  [label="DDG: NULL"];
"1000274" -> "1000443"  [label="DDG: NULL"];
"1000274" -> "1000548"  [label="DDG: NULL"];
"1000274" -> "1000607"  [label="DDG: NULL"];
"1000261" -> "1000222"  [label="AST: "];
"1000261" -> "1000265"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000265" -> "1000261"  [label="AST: "];
"1000276" -> "1000261"  [label="CFG: "];
"1000261" -> "1000633"  [label="DDG: (char *) calloc(len + 1, sizeof(char))"];
"1000265" -> "1000261"  [label="DDG: calloc(len + 1, sizeof(char))"];
"1000265" -> "1000267"  [label="CFG: "];
"1000266" -> "1000265"  [label="AST: "];
"1000267" -> "1000265"  [label="AST: "];
"1000265" -> "1000633"  [label="DDG: calloc(len + 1, sizeof(char))"];
"1000267" -> "1000265"  [label="DDG: len + 1"];
"1000267" -> "1000271"  [label="CFG: "];
"1000268" -> "1000267"  [label="AST: "];
"1000271" -> "1000267"  [label="AST: "];
"1000267" -> "1000633"  [label="DDG: len + 1"];
"1000249" -> "1000267"  [label="DDG: len"];
"1000246" -> "1000267"  [label="DDG: len"];
"1000249" -> "1000245"  [label="AST: "];
"1000249" -> "1000251"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000251" -> "1000249"  [label="AST: "];
"1000245" -> "1000249"  [label="CFG: "];
"1000249" -> "1000633"  [label="DDG: len"];
"1000249" -> "1000245"  [label="DDG: len"];
"1000249" -> "1000245"  [label="DDG: 0"];
"1000246" -> "1000249"  [label="DDG: len"];
"1000249" -> "1000268"  [label="DDG: len"];
"1000249" -> "1000295"  [label="DDG: len"];
"1000246" -> "1000245"  [label="AST: "];
"1000246" -> "1000248"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000248" -> "1000246"  [label="AST: "];
"1000250" -> "1000246"  [label="CFG: "];
"1000245" -> "1000246"  [label="CFG: "];
"1000246" -> "1000633"  [label="DDG: INT_MAX"];
"1000246" -> "1000633"  [label="DDG: len"];
"1000246" -> "1000245"  [label="DDG: len"];
"1000246" -> "1000245"  [label="DDG: INT_MAX"];
"1000300" -> "1000246"  [label="DDG: len"];
"1000246" -> "1000268"  [label="DDG: len"];
"1000246" -> "1000295"  [label="DDG: len"];
"1000300" -> "1000289"  [label="AST: "];
"1000300" -> "1000305"  [label="CFG: "];
"1000301" -> "1000300"  [label="AST: "];
"1000305" -> "1000300"  [label="AST: "];
"1000289" -> "1000300"  [label="CFG: "];
"1000300" -> "1000633"  [label="DDG: len"];
"1000300" -> "1000633"  [label="DDG: (int)sizeof(char)"];
"1000300" -> "1000289"  [label="DDG: (int)sizeof(char)"];
"1000300" -> "1000289"  [label="DDG: len"];
"1000295" -> "1000300"  [label="DDG: len"];
"1000295" -> "1000290"  [label="AST: "];
"1000295" -> "1000298"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000298" -> "1000295"  [label="AST: "];
"1000299" -> "1000295"  [label="CFG: "];
"1000295" -> "1000290"  [label="DDG: len"];
"1000203" -> "1000202"  [label="AST: "];
"1000203" -> "1000205"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000203"  [label="AST: "];
"1000208" -> "1000203"  [label="CFG: "];
"1000215" -> "1000203"  [label="CFG: "];
"1000203" -> "1000633"  [label="DDG: args == NULL"];
"1000203" -> "1000633"  [label="DDG: NULL"];
"1000203" -> "1000633"  [label="DDG: args"];
"1000194" -> "1000203"  [label="DDG: args"];
"1000203" -> "1000238"  [label="DDG: args"];
"1000203" -> "1000255"  [label="DDG: args"];
"1000203" -> "1000290"  [label="DDG: args"];
"1000203" -> "1000310"  [label="DDG: args"];
"1000203" -> "1000317"  [label="DDG: args"];
"1000203" -> "1000336"  [label="DDG: args"];
"1000203" -> "1000369"  [label="DDG: args"];
"1000203" -> "1000377"  [label="DDG: NULL"];
"1000203" -> "1000443"  [label="DDG: NULL"];
"1000203" -> "1000548"  [label="DDG: NULL"];
"1000203" -> "1000575"  [label="DDG: args"];
"1000203" -> "1000583"  [label="DDG: args"];
"1000203" -> "1000589"  [label="DDG: args"];
"1000203" -> "1000607"  [label="DDG: NULL"];
"1000203" -> "1000628"  [label="DDG: args"];
"1000194" -> "1000112"  [label="AST: "];
"1000194" -> "1000196"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000196" -> "1000194"  [label="AST: "];
"1000204" -> "1000194"  [label="CFG: "];
"1000194" -> "1000633"  [label="DDG: (char **) calloc(number, sizeof(char*))"];
"1000196" -> "1000194"  [label="DDG: calloc(number, sizeof(char*))"];
"1000197" -> "1000196"  [label="AST: "];
"1000196" -> "1000633"  [label="DDG: calloc(number, sizeof(char*))"];
}
