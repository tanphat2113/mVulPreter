digraph "0_Android_cd5f15f588a5d27e99ba12f057245bfe507f8c42@API" {
"1000169" [label="(Call,recv(acceptFD, &number, sizeof(int), 0))"];
"1000159" [label="(Call,acceptFD < 0)"];
"1000148" [label="(Call,acceptFD = accept (fd, (sockaddr *) &peeraddr, &socklen))"];
"1000150" [label="(Call,accept (fd, (sockaddr *) &peeraddr, &socklen))"];
"1000109" [label="(MethodParameterIn,int fd)"];
"1000152" [label="(Call,(sockaddr *) &peeraddr)"];
"1000168" [label="(Call,recv(acceptFD, &number, sizeof(int), 0) != sizeof(int))"];
"1000181" [label="(Call,close(acceptFD))"];
"1000191" [label="(Call,close(acceptFD))"];
"1000209" [label="(Call,close(acceptFD))"];
"1000226" [label="(Call,recv(acceptFD, &len, sizeof(int), 0))"];
"1000225" [label="(Call,recv(acceptFD, &len, sizeof(int), 0) != sizeof(int))"];
"1000241" [label="(Call,close(acceptFD))"];
"1000258" [label="(Call,close(acceptFD))"];
"1000285" [label="(Call,close(acceptFD))"];
"1000290" [label="(Call,recv(acceptFD, args[i], sizeof(char) * len, 0))"];
"1000238" [label="(Call,freeDebugCallbackArgs(i, args))"];
"1000255" [label="(Call,freeDebugCallbackArgs(i, args))"];
"1000289" [label="(Call,recv(acceptFD, args[i], sizeof(char) * len, 0)\n != (int)sizeof(char) * len)"];
"1000310" [label="(Call,freeDebugCallbackArgs(i, args))"];
"1000313" [label="(Call,close(acceptFD))"];
"1000317" [label="(Call,* buf = args[i])"];
"1000336" [label="(Call,atoi(args[i]))"];
"1000334" [label="(Call,sim_id = atoi(args[i]))"];
"1000583" [label="(Call,freeDebugCallbackArgs(number, args))"];
"1000628" [label="(Call,freeDebugCallbackArgs(number, args))"];
"1000586" [label="(Call,close(acceptFD))"];
"1000631" [label="(Call,close(acceptFD))"];
"1000177" [label="(Identifier,int)"];
"1000241" [label="(Call,close(acceptFD))"];
"1000243" [label="(Return,return;)"];
"1000112" [label="(Block,)"];
"1000585" [label="(Identifier,args)"];
"1000170" [label="(Identifier,acceptFD)"];
"1000222" [label="(Block,)"];
"1000152" [label="(Call,(sockaddr *) &peeraddr)"];
"1000314" [label="(Identifier,acceptFD)"];
"1000256" [label="(Identifier,i)"];
"1000629" [label="(Identifier,number)"];
"1000225" [label="(Call,recv(acceptFD, &len, sizeof(int), 0) != sizeof(int))"];
"1000210" [label="(Identifier,acceptFD)"];
"1000171" [label="(Call,&number)"];
"1000178" [label="(Block,)"];
"1000580" [label="(Block,)"];
"1000289" [label="(Call,recv(acceptFD, args[i], sizeof(char) * len, 0)\n != (int)sizeof(char) * len)"];
"1000149" [label="(Identifier,acceptFD)"];
"1000188" [label="(Block,)"];
"1000161" [label="(Literal,0)"];
"1000157" [label="(Identifier,socklen)"];
"1000228" [label="(Call,&len)"];
"1000628" [label="(Call,freeDebugCallbackArgs(number, args))"];
"1000259" [label="(Identifier,acceptFD)"];
"1000234" [label="(Identifier,int)"];
"1000337" [label="(Call,args[i])"];
"1000317" [label="(Call,* buf = args[i])"];
"1000333" [label="(Block,)"];
"1000583" [label="(Call,freeDebugCallbackArgs(number, args))"];
"1000319" [label="(Call,args[i])"];
"1000257" [label="(Identifier,args)"];
"1000311" [label="(Identifier,i)"];
"1000292" [label="(Call,args[i])"];
"1000328" [label="(Call,(i+1) == number)"];
"1000176" [label="(Call,sizeof(int))"];
"1000242" [label="(Identifier,acceptFD)"];
"1000230" [label="(Call,sizeof(int))"];
"1000310" [label="(Call,freeDebugCallbackArgs(i, args))"];
"1000227" [label="(Identifier,acceptFD)"];
"1000180" [label="(Literal,\"error reading on socket: number of Args: \n\")"];
"1000173" [label="(Call,sizeof(int))"];
"1000313" [label="(Call,close(acceptFD))"];
"1000203" [label="(Call,args == NULL)"];
"1000335" [label="(Identifier,sim_id)"];
"1000226" [label="(Call,recv(acceptFD, &len, sizeof(int), 0))"];
"1000287" [label="(Return,return;)"];
"1000633" [label="(MethodReturn,static void)"];
"1000334" [label="(Call,sim_id = atoi(args[i]))"];
"1000308" [label="(Literal,\"error reading on socket: Args[%d] \n\")"];
"1000285" [label="(Call,close(acceptFD))"];
"1000247" [label="(Identifier,len)"];
"1000291" [label="(Identifier,acceptFD)"];
"1000238" [label="(Call,freeDebugCallbackArgs(i, args))"];
"1000175" [label="(Literal,0)"];
"1000191" [label="(Call,close(acceptFD))"];
"1000260" [label="(Return,return;)"];
"1000288" [label="(ControlStructure,if (recv(acceptFD, args[i], sizeof(char) * len, 0)\n != (int)sizeof(char) * len))"];
"1000630" [label="(Identifier,args)"];
"1000232" [label="(Literal,0)"];
"1000183" [label="(Return,return;)"];
"1000575" [label="(Call,strlen(args[1]))"];
"1000307" [label="(Call,RLOGE (\"error reading on socket: Args[%d] \n\", i))"];
"1000318" [label="(Identifier,buf)"];
"1000587" [label="(Identifier,acceptFD)"];
"1000324" [label="(Identifier,buf)"];
"1000148" [label="(Call,acceptFD = accept (fd, (sockaddr *) &peeraddr, &socklen))"];
"1000233" [label="(Call,sizeof(int))"];
"1000192" [label="(Identifier,acceptFD)"];
"1000632" [label="(Identifier,acceptFD)"];
"1000588" [label="(Return,return;)"];
"1000158" [label="(ControlStructure,if (acceptFD < 0))"];
"1000154" [label="(Call,&peeraddr)"];
"1000186" [label="(Identifier,number)"];
"1000109" [label="(MethodParameterIn,int fd)"];
"1000315" [label="(Return,return;)"];
"1000193" [label="(Return,return;)"];
"1000306" [label="(Block,)"];
"1000631" [label="(Call,close(acceptFD))"];
"1000167" [label="(ControlStructure,if (recv(acceptFD, &number, sizeof(int), 0) != sizeof(int)))"];
"1000217" [label="(Call,i < number)"];
"1000295" [label="(Call,sizeof(char) * len)"];
"1000341" [label="(Identifier,sim_id)"];
"1000168" [label="(Call,recv(acceptFD, &number, sizeof(int), 0) != sizeof(int))"];
"1000182" [label="(Identifier,acceptFD)"];
"1000258" [label="(Call,close(acceptFD))"];
"1000290" [label="(Call,recv(acceptFD, args[i], sizeof(char) * len, 0))"];
"1000300" [label="(Call,(int)sizeof(char) * len)"];
"1000164" [label="(Literal,\"error accepting on debug port: %d\n\")"];
"1000299" [label="(Literal,0)"];
"1000586" [label="(Call,close(acceptFD))"];
"1000169" [label="(Call,recv(acceptFD, &number, sizeof(int), 0))"];
"1000237" [label="(Literal,\"error reading on socket: Len of Args: \n\")"];
"1000235" [label="(Block,)"];
"1000274" [label="(Call,args[i] == NULL)"];
"1000206" [label="(Block,)"];
"1000160" [label="(Identifier,acceptFD)"];
"1000336" [label="(Call,atoi(args[i]))"];
"1000286" [label="(Identifier,acceptFD)"];
"1000252" [label="(Block,)"];
"1000279" [label="(Block,)"];
"1000224" [label="(ControlStructure,if (recv(acceptFD, &len, sizeof(int), 0) != sizeof(int)))"];
"1000209" [label="(Call,close(acceptFD))"];
"1000151" [label="(Identifier,fd)"];
"1000369" [label="(Call,atoi(args[0]))"];
"1000181" [label="(Call,close(acceptFD))"];
"1000150" [label="(Call,accept (fd, (sockaddr *) &peeraddr, &socklen))"];
"1000584" [label="(Identifier,number)"];
"1000240" [label="(Identifier,args)"];
"1000312" [label="(Identifier,args)"];
"1000156" [label="(Call,&socklen)"];
"1000159" [label="(Call,acceptFD < 0)"];
"1000255" [label="(Call,freeDebugCallbackArgs(i, args))"];
"1000211" [label="(Return,return;)"];
"1000239" [label="(Identifier,i)"];
"1000169" -> "1000168"  [label="AST: "];
"1000169" -> "1000175"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000171" -> "1000169"  [label="AST: "];
"1000173" -> "1000169"  [label="AST: "];
"1000175" -> "1000169"  [label="AST: "];
"1000177" -> "1000169"  [label="CFG: "];
"1000169" -> "1000633"  [label="DDG: &number"];
"1000169" -> "1000168"  [label="DDG: acceptFD"];
"1000169" -> "1000168"  [label="DDG: &number"];
"1000169" -> "1000168"  [label="DDG: 0"];
"1000159" -> "1000169"  [label="DDG: acceptFD"];
"1000169" -> "1000181"  [label="DDG: acceptFD"];
"1000169" -> "1000191"  [label="DDG: acceptFD"];
"1000169" -> "1000209"  [label="DDG: acceptFD"];
"1000169" -> "1000226"  [label="DDG: acceptFD"];
"1000169" -> "1000586"  [label="DDG: acceptFD"];
"1000169" -> "1000631"  [label="DDG: acceptFD"];
"1000159" -> "1000158"  [label="AST: "];
"1000159" -> "1000161"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000161" -> "1000159"  [label="AST: "];
"1000164" -> "1000159"  [label="CFG: "];
"1000170" -> "1000159"  [label="CFG: "];
"1000159" -> "1000633"  [label="DDG: acceptFD < 0"];
"1000159" -> "1000633"  [label="DDG: acceptFD"];
"1000148" -> "1000159"  [label="DDG: acceptFD"];
"1000148" -> "1000112"  [label="AST: "];
"1000148" -> "1000150"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000150" -> "1000148"  [label="AST: "];
"1000160" -> "1000148"  [label="CFG: "];
"1000148" -> "1000633"  [label="DDG: accept (fd, (sockaddr *) &peeraddr, &socklen)"];
"1000150" -> "1000148"  [label="DDG: fd"];
"1000150" -> "1000148"  [label="DDG: (sockaddr *) &peeraddr"];
"1000150" -> "1000148"  [label="DDG: &socklen"];
"1000150" -> "1000156"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="AST: "];
"1000156" -> "1000150"  [label="AST: "];
"1000150" -> "1000633"  [label="DDG: fd"];
"1000150" -> "1000633"  [label="DDG: (sockaddr *) &peeraddr"];
"1000150" -> "1000633"  [label="DDG: &socklen"];
"1000109" -> "1000150"  [label="DDG: fd"];
"1000152" -> "1000150"  [label="DDG: &peeraddr"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000633"  [label="DDG: fd"];
"1000152" -> "1000154"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000157" -> "1000152"  [label="CFG: "];
"1000152" -> "1000633"  [label="DDG: &peeraddr"];
"1000168" -> "1000167"  [label="AST: "];
"1000168" -> "1000176"  [label="CFG: "];
"1000176" -> "1000168"  [label="AST: "];
"1000180" -> "1000168"  [label="CFG: "];
"1000186" -> "1000168"  [label="CFG: "];
"1000168" -> "1000633"  [label="DDG: recv(acceptFD, &number, sizeof(int), 0) != sizeof(int)"];
"1000168" -> "1000633"  [label="DDG: recv(acceptFD, &number, sizeof(int), 0)"];
"1000181" -> "1000178"  [label="AST: "];
"1000181" -> "1000182"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000183" -> "1000181"  [label="CFG: "];
"1000181" -> "1000633"  [label="DDG: acceptFD"];
"1000181" -> "1000633"  [label="DDG: close(acceptFD)"];
"1000191" -> "1000188"  [label="AST: "];
"1000191" -> "1000192"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000193" -> "1000191"  [label="CFG: "];
"1000191" -> "1000633"  [label="DDG: close(acceptFD)"];
"1000191" -> "1000633"  [label="DDG: acceptFD"];
"1000209" -> "1000206"  [label="AST: "];
"1000209" -> "1000210"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000211" -> "1000209"  [label="CFG: "];
"1000209" -> "1000633"  [label="DDG: close(acceptFD)"];
"1000209" -> "1000633"  [label="DDG: acceptFD"];
"1000226" -> "1000225"  [label="AST: "];
"1000226" -> "1000232"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000228" -> "1000226"  [label="AST: "];
"1000230" -> "1000226"  [label="AST: "];
"1000232" -> "1000226"  [label="AST: "];
"1000234" -> "1000226"  [label="CFG: "];
"1000226" -> "1000633"  [label="DDG: &len"];
"1000226" -> "1000225"  [label="DDG: acceptFD"];
"1000226" -> "1000225"  [label="DDG: &len"];
"1000226" -> "1000225"  [label="DDG: 0"];
"1000290" -> "1000226"  [label="DDG: acceptFD"];
"1000226" -> "1000241"  [label="DDG: acceptFD"];
"1000226" -> "1000258"  [label="DDG: acceptFD"];
"1000226" -> "1000285"  [label="DDG: acceptFD"];
"1000226" -> "1000290"  [label="DDG: acceptFD"];
"1000225" -> "1000224"  [label="AST: "];
"1000225" -> "1000233"  [label="CFG: "];
"1000233" -> "1000225"  [label="AST: "];
"1000237" -> "1000225"  [label="CFG: "];
"1000247" -> "1000225"  [label="CFG: "];
"1000225" -> "1000633"  [label="DDG: recv(acceptFD, &len, sizeof(int), 0) != sizeof(int)"];
"1000225" -> "1000633"  [label="DDG: recv(acceptFD, &len, sizeof(int), 0)"];
"1000241" -> "1000235"  [label="AST: "];
"1000241" -> "1000242"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="CFG: "];
"1000241" -> "1000633"  [label="DDG: acceptFD"];
"1000241" -> "1000633"  [label="DDG: close(acceptFD)"];
"1000258" -> "1000252"  [label="AST: "];
"1000258" -> "1000259"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000260" -> "1000258"  [label="CFG: "];
"1000258" -> "1000633"  [label="DDG: acceptFD"];
"1000258" -> "1000633"  [label="DDG: close(acceptFD)"];
"1000285" -> "1000279"  [label="AST: "];
"1000285" -> "1000286"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000285"  [label="CFG: "];
"1000285" -> "1000633"  [label="DDG: acceptFD"];
"1000285" -> "1000633"  [label="DDG: close(acceptFD)"];
"1000290" -> "1000289"  [label="AST: "];
"1000290" -> "1000299"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000292" -> "1000290"  [label="AST: "];
"1000295" -> "1000290"  [label="AST: "];
"1000299" -> "1000290"  [label="AST: "];
"1000302" -> "1000290"  [label="CFG: "];
"1000290" -> "1000633"  [label="DDG: args[i]"];
"1000290" -> "1000633"  [label="DDG: sizeof(char) * len"];
"1000290" -> "1000238"  [label="DDG: args[i]"];
"1000290" -> "1000255"  [label="DDG: args[i]"];
"1000290" -> "1000289"  [label="DDG: acceptFD"];
"1000290" -> "1000289"  [label="DDG: args[i]"];
"1000290" -> "1000289"  [label="DDG: sizeof(char) * len"];
"1000290" -> "1000289"  [label="DDG: 0"];
"1000274" -> "1000290"  [label="DDG: args[i]"];
"1000203" -> "1000290"  [label="DDG: args"];
"1000295" -> "1000290"  [label="DDG: len"];
"1000290" -> "1000310"  [label="DDG: args[i]"];
"1000290" -> "1000313"  [label="DDG: acceptFD"];
"1000290" -> "1000317"  [label="DDG: args[i]"];
"1000290" -> "1000336"  [label="DDG: args[i]"];
"1000290" -> "1000583"  [label="DDG: args[i]"];
"1000290" -> "1000586"  [label="DDG: acceptFD"];
"1000290" -> "1000628"  [label="DDG: args[i]"];
"1000290" -> "1000631"  [label="DDG: acceptFD"];
"1000238" -> "1000235"  [label="AST: "];
"1000238" -> "1000240"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="AST: "];
"1000242" -> "1000238"  [label="CFG: "];
"1000238" -> "1000633"  [label="DDG: i"];
"1000238" -> "1000633"  [label="DDG: args"];
"1000238" -> "1000633"  [label="DDG: freeDebugCallbackArgs(i, args)"];
"1000217" -> "1000238"  [label="DDG: i"];
"1000336" -> "1000238"  [label="DDG: args[i]"];
"1000203" -> "1000238"  [label="DDG: args"];
"1000255" -> "1000252"  [label="AST: "];
"1000255" -> "1000257"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000257" -> "1000255"  [label="AST: "];
"1000259" -> "1000255"  [label="CFG: "];
"1000255" -> "1000633"  [label="DDG: freeDebugCallbackArgs(i, args)"];
"1000255" -> "1000633"  [label="DDG: args"];
"1000255" -> "1000633"  [label="DDG: i"];
"1000217" -> "1000255"  [label="DDG: i"];
"1000336" -> "1000255"  [label="DDG: args[i]"];
"1000203" -> "1000255"  [label="DDG: args"];
"1000289" -> "1000288"  [label="AST: "];
"1000289" -> "1000300"  [label="CFG: "];
"1000300" -> "1000289"  [label="AST: "];
"1000308" -> "1000289"  [label="CFG: "];
"1000318" -> "1000289"  [label="CFG: "];
"1000289" -> "1000633"  [label="DDG: recv(acceptFD, args[i], sizeof(char) * len, 0)"];
"1000289" -> "1000633"  [label="DDG: recv(acceptFD, args[i], sizeof(char) * len, 0)\n != (int)sizeof(char) * len"];
"1000289" -> "1000633"  [label="DDG: (int)sizeof(char) * len"];
"1000300" -> "1000289"  [label="DDG: (int)sizeof(char)"];
"1000300" -> "1000289"  [label="DDG: len"];
"1000310" -> "1000306"  [label="AST: "];
"1000310" -> "1000312"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000312" -> "1000310"  [label="AST: "];
"1000314" -> "1000310"  [label="CFG: "];
"1000310" -> "1000633"  [label="DDG: freeDebugCallbackArgs(i, args)"];
"1000310" -> "1000633"  [label="DDG: args"];
"1000310" -> "1000633"  [label="DDG: i"];
"1000307" -> "1000310"  [label="DDG: i"];
"1000203" -> "1000310"  [label="DDG: args"];
"1000313" -> "1000306"  [label="AST: "];
"1000313" -> "1000314"  [label="CFG: "];
"1000314" -> "1000313"  [label="AST: "];
"1000315" -> "1000313"  [label="CFG: "];
"1000313" -> "1000633"  [label="DDG: close(acceptFD)"];
"1000313" -> "1000633"  [label="DDG: acceptFD"];
"1000317" -> "1000222"  [label="AST: "];
"1000317" -> "1000319"  [label="CFG: "];
"1000318" -> "1000317"  [label="AST: "];
"1000319" -> "1000317"  [label="AST: "];
"1000324" -> "1000317"  [label="CFG: "];
"1000317" -> "1000633"  [label="DDG: buf"];
"1000317" -> "1000633"  [label="DDG: args[i]"];
"1000203" -> "1000317"  [label="DDG: args"];
"1000336" -> "1000334"  [label="AST: "];
"1000336" -> "1000337"  [label="CFG: "];
"1000337" -> "1000336"  [label="AST: "];
"1000334" -> "1000336"  [label="CFG: "];
"1000336" -> "1000633"  [label="DDG: args[i]"];
"1000336" -> "1000334"  [label="DDG: args[i]"];
"1000203" -> "1000336"  [label="DDG: args"];
"1000336" -> "1000583"  [label="DDG: args[i]"];
"1000336" -> "1000628"  [label="DDG: args[i]"];
"1000334" -> "1000333"  [label="AST: "];
"1000335" -> "1000334"  [label="AST: "];
"1000341" -> "1000334"  [label="CFG: "];
"1000334" -> "1000633"  [label="DDG: atoi(args[i])"];
"1000334" -> "1000633"  [label="DDG: sim_id"];
"1000583" -> "1000580"  [label="AST: "];
"1000583" -> "1000585"  [label="CFG: "];
"1000584" -> "1000583"  [label="AST: "];
"1000585" -> "1000583"  [label="AST: "];
"1000587" -> "1000583"  [label="CFG: "];
"1000583" -> "1000633"  [label="DDG: freeDebugCallbackArgs(number, args)"];
"1000583" -> "1000633"  [label="DDG: number"];
"1000583" -> "1000633"  [label="DDG: args"];
"1000217" -> "1000583"  [label="DDG: number"];
"1000328" -> "1000583"  [label="DDG: number"];
"1000369" -> "1000583"  [label="DDG: args[0]"];
"1000575" -> "1000583"  [label="DDG: args[1]"];
"1000203" -> "1000583"  [label="DDG: args"];
"1000628" -> "1000112"  [label="AST: "];
"1000628" -> "1000630"  [label="CFG: "];
"1000629" -> "1000628"  [label="AST: "];
"1000630" -> "1000628"  [label="AST: "];
"1000632" -> "1000628"  [label="CFG: "];
"1000628" -> "1000633"  [label="DDG: args"];
"1000628" -> "1000633"  [label="DDG: number"];
"1000628" -> "1000633"  [label="DDG: freeDebugCallbackArgs(number, args)"];
"1000217" -> "1000628"  [label="DDG: number"];
"1000328" -> "1000628"  [label="DDG: number"];
"1000369" -> "1000628"  [label="DDG: args[0]"];
"1000203" -> "1000628"  [label="DDG: args"];
"1000575" -> "1000628"  [label="DDG: args[1]"];
"1000586" -> "1000580"  [label="AST: "];
"1000586" -> "1000587"  [label="CFG: "];
"1000587" -> "1000586"  [label="AST: "];
"1000588" -> "1000586"  [label="CFG: "];
"1000586" -> "1000633"  [label="DDG: close(acceptFD)"];
"1000586" -> "1000633"  [label="DDG: acceptFD"];
"1000631" -> "1000112"  [label="AST: "];
"1000631" -> "1000632"  [label="CFG: "];
"1000632" -> "1000631"  [label="AST: "];
"1000633" -> "1000631"  [label="CFG: "];
"1000631" -> "1000633"  [label="DDG: acceptFD"];
"1000631" -> "1000633"  [label="DDG: close(acceptFD)"];
}
