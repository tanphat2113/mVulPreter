digraph "0_libtomcrypt_5eb9743410ce4657e9d54fef26a2ee31a1b5dd0@array" {
"1000422" [label="(Call,XMEMCMP(digestinfo[0].data, hash_descriptor[hash_idx].OID, sizeof(unsigned long) * hash_descriptor[hash_idx].OIDlen))"];
"1000433" [label="(Call,sizeof(unsigned long) * hash_descriptor[hash_idx].OIDlen)"];
"1000409" [label="(Call,digestinfo[0].size == hash_descriptor[hash_idx].OIDlen)"];
"1000287" [label="(Call,hash_descriptor[hash_idx].OIDlen == 0)"];
"1000421" [label="(Call,XMEMCMP(digestinfo[0].data, hash_descriptor[hash_idx].OID, sizeof(unsigned long) * hash_descriptor[hash_idx].OIDlen) == 0)"];
"1000420" [label="(Call,(XMEMCMP(digestinfo[0].data, hash_descriptor[hash_idx].OID, sizeof(unsigned long) * hash_descriptor[hash_idx].OIDlen) == 0) &&\n         (siginfo[1].size == hashlen) &&\n         (XMEMCMP(siginfo[1].data, hash, hashlen) == 0))"];
"1000408" [label="(Call,(digestinfo[0].size == hash_descriptor[hash_idx].OIDlen) &&\n         (XMEMCMP(digestinfo[0].data, hash_descriptor[hash_idx].OID, sizeof(unsigned long) * hash_descriptor[hash_idx].OIDlen) == 0) &&\n         (siginfo[1].size == hashlen) &&\n         (XMEMCMP(siginfo[1].data, hash, hashlen) == 0))"];
"1000404" [label="(Call,(reallen == outlen) &&\n        (digestinfo[0].size == hash_descriptor[hash_idx].OIDlen) &&\n         (XMEMCMP(digestinfo[0].data, hash_descriptor[hash_idx].OID, sizeof(unsigned long) * hash_descriptor[hash_idx].OIDlen) == 0) &&\n         (siginfo[1].size == hashlen) &&\n         (XMEMCMP(siginfo[1].data, hash, hashlen) == 0))"];
"1000421" [label="(Call,XMEMCMP(digestinfo[0].data, hash_descriptor[hash_idx].OID, sizeof(unsigned long) * hash_descriptor[hash_idx].OIDlen) == 0)"];
"1000423" [label="(Call,digestinfo[0].data)"];
"1000408" [label="(Call,(digestinfo[0].size == hash_descriptor[hash_idx].OIDlen) &&\n         (XMEMCMP(digestinfo[0].data, hash_descriptor[hash_idx].OID, sizeof(unsigned long) * hash_descriptor[hash_idx].OIDlen) == 0) &&\n         (siginfo[1].size == hashlen) &&\n         (XMEMCMP(siginfo[1].data, hash, hashlen) == 0))"];
"1000405" [label="(Call,reallen == outlen)"];
"1000296" [label="(Identifier,err)"];
"1000415" [label="(Call,hash_descriptor[hash_idx].OIDlen)"];
"1000300" [label="(Identifier,outlen)"];
"1000404" [label="(Call,(reallen == outlen) &&\n        (digestinfo[0].size == hash_descriptor[hash_idx].OIDlen) &&\n         (XMEMCMP(digestinfo[0].data, hash_descriptor[hash_idx].OID, sizeof(unsigned long) * hash_descriptor[hash_idx].OIDlen) == 0) &&\n         (siginfo[1].size == hashlen) &&\n         (XMEMCMP(siginfo[1].data, hash, hashlen) == 0))"];
"1000463" [label="(Identifier,stat)"];
"1000409" [label="(Call,digestinfo[0].size == hash_descriptor[hash_idx].OIDlen)"];
"1000287" [label="(Call,hash_descriptor[hash_idx].OIDlen == 0)"];
"1000441" [label="(Literal,0)"];
"1000410" [label="(Call,digestinfo[0].size)"];
"1000478" [label="(MethodReturn,int)"];
"1000422" [label="(Call,XMEMCMP(digestinfo[0].data, hash_descriptor[hash_idx].OID, sizeof(unsigned long) * hash_descriptor[hash_idx].OIDlen))"];
"1000293" [label="(Literal,0)"];
"1000288" [label="(Call,hash_descriptor[hash_idx].OIDlen)"];
"1000434" [label="(Call,sizeof(unsigned long))"];
"1000433" [label="(Call,sizeof(unsigned long) * hash_descriptor[hash_idx].OIDlen)"];
"1000446" [label="(Identifier,siginfo)"];
"1000466" [label="(Identifier,out)"];
"1000442" [label="(Call,(siginfo[1].size == hashlen) &&\n         (XMEMCMP(siginfo[1].data, hash, hashlen) == 0))"];
"1000425" [label="(Identifier,digestinfo)"];
"1000403" [label="(ControlStructure,if ((reallen == outlen) &&\n        (digestinfo[0].size == hash_descriptor[hash_idx].OIDlen) &&\n         (XMEMCMP(digestinfo[0].data, hash_descriptor[hash_idx].OID, sizeof(unsigned long) * hash_descriptor[hash_idx].OIDlen) == 0) &&\n         (siginfo[1].size == hashlen) &&\n         (XMEMCMP(siginfo[1].data, hash, hashlen) == 0)))"];
"1000420" [label="(Call,(XMEMCMP(digestinfo[0].data, hash_descriptor[hash_idx].OID, sizeof(unsigned long) * hash_descriptor[hash_idx].OIDlen) == 0) &&\n         (siginfo[1].size == hashlen) &&\n         (XMEMCMP(siginfo[1].data, hash, hashlen) == 0))"];
"1000428" [label="(Call,hash_descriptor[hash_idx].OID)"];
"1000436" [label="(Call,hash_descriptor[hash_idx].OIDlen)"];
"1000286" [label="(ControlStructure,if (hash_descriptor[hash_idx].OIDlen == 0))"];
"1000422" -> "1000421"  [label="AST: "];
"1000422" -> "1000433"  [label="CFG: "];
"1000423" -> "1000422"  [label="AST: "];
"1000428" -> "1000422"  [label="AST: "];
"1000433" -> "1000422"  [label="AST: "];
"1000441" -> "1000422"  [label="CFG: "];
"1000422" -> "1000478"  [label="DDG: hash_descriptor[hash_idx].OID"];
"1000422" -> "1000478"  [label="DDG: digestinfo[0].data"];
"1000422" -> "1000478"  [label="DDG: sizeof(unsigned long) * hash_descriptor[hash_idx].OIDlen"];
"1000422" -> "1000421"  [label="DDG: digestinfo[0].data"];
"1000422" -> "1000421"  [label="DDG: hash_descriptor[hash_idx].OID"];
"1000422" -> "1000421"  [label="DDG: sizeof(unsigned long) * hash_descriptor[hash_idx].OIDlen"];
"1000433" -> "1000422"  [label="DDG: hash_descriptor[hash_idx].OIDlen"];
"1000433" -> "1000436"  [label="CFG: "];
"1000434" -> "1000433"  [label="AST: "];
"1000436" -> "1000433"  [label="AST: "];
"1000433" -> "1000478"  [label="DDG: hash_descriptor[hash_idx].OIDlen"];
"1000409" -> "1000433"  [label="DDG: hash_descriptor[hash_idx].OIDlen"];
"1000409" -> "1000408"  [label="AST: "];
"1000409" -> "1000415"  [label="CFG: "];
"1000410" -> "1000409"  [label="AST: "];
"1000415" -> "1000409"  [label="AST: "];
"1000425" -> "1000409"  [label="CFG: "];
"1000408" -> "1000409"  [label="CFG: "];
"1000409" -> "1000478"  [label="DDG: digestinfo[0].size"];
"1000409" -> "1000478"  [label="DDG: hash_descriptor[hash_idx].OIDlen"];
"1000409" -> "1000408"  [label="DDG: digestinfo[0].size"];
"1000409" -> "1000408"  [label="DDG: hash_descriptor[hash_idx].OIDlen"];
"1000287" -> "1000409"  [label="DDG: hash_descriptor[hash_idx].OIDlen"];
"1000287" -> "1000286"  [label="AST: "];
"1000287" -> "1000293"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000293" -> "1000287"  [label="AST: "];
"1000296" -> "1000287"  [label="CFG: "];
"1000300" -> "1000287"  [label="CFG: "];
"1000287" -> "1000478"  [label="DDG: hash_descriptor[hash_idx].OIDlen == 0"];
"1000287" -> "1000478"  [label="DDG: hash_descriptor[hash_idx].OIDlen"];
"1000421" -> "1000420"  [label="AST: "];
"1000421" -> "1000441"  [label="CFG: "];
"1000441" -> "1000421"  [label="AST: "];
"1000446" -> "1000421"  [label="CFG: "];
"1000420" -> "1000421"  [label="CFG: "];
"1000421" -> "1000478"  [label="DDG: XMEMCMP(digestinfo[0].data, hash_descriptor[hash_idx].OID, sizeof(unsigned long) * hash_descriptor[hash_idx].OIDlen)"];
"1000421" -> "1000420"  [label="DDG: XMEMCMP(digestinfo[0].data, hash_descriptor[hash_idx].OID, sizeof(unsigned long) * hash_descriptor[hash_idx].OIDlen)"];
"1000421" -> "1000420"  [label="DDG: 0"];
"1000420" -> "1000408"  [label="AST: "];
"1000420" -> "1000442"  [label="CFG: "];
"1000442" -> "1000420"  [label="AST: "];
"1000408" -> "1000420"  [label="CFG: "];
"1000420" -> "1000478"  [label="DDG: (siginfo[1].size == hashlen) &&\n         (XMEMCMP(siginfo[1].data, hash, hashlen) == 0)"];
"1000420" -> "1000478"  [label="DDG: XMEMCMP(digestinfo[0].data, hash_descriptor[hash_idx].OID, sizeof(unsigned long) * hash_descriptor[hash_idx].OIDlen) == 0"];
"1000420" -> "1000408"  [label="DDG: XMEMCMP(digestinfo[0].data, hash_descriptor[hash_idx].OID, sizeof(unsigned long) * hash_descriptor[hash_idx].OIDlen) == 0"];
"1000420" -> "1000408"  [label="DDG: (siginfo[1].size == hashlen) &&\n         (XMEMCMP(siginfo[1].data, hash, hashlen) == 0)"];
"1000442" -> "1000420"  [label="DDG: siginfo[1].size == hashlen"];
"1000442" -> "1000420"  [label="DDG: XMEMCMP(siginfo[1].data, hash, hashlen) == 0"];
"1000408" -> "1000404"  [label="AST: "];
"1000404" -> "1000408"  [label="CFG: "];
"1000408" -> "1000478"  [label="DDG: digestinfo[0].size == hash_descriptor[hash_idx].OIDlen"];
"1000408" -> "1000478"  [label="DDG: (XMEMCMP(digestinfo[0].data, hash_descriptor[hash_idx].OID, sizeof(unsigned long) * hash_descriptor[hash_idx].OIDlen) == 0) &&\n         (siginfo[1].size == hashlen) &&\n         (XMEMCMP(siginfo[1].data, hash, hashlen) == 0)"];
"1000408" -> "1000404"  [label="DDG: digestinfo[0].size == hash_descriptor[hash_idx].OIDlen"];
"1000408" -> "1000404"  [label="DDG: (XMEMCMP(digestinfo[0].data, hash_descriptor[hash_idx].OID, sizeof(unsigned long) * hash_descriptor[hash_idx].OIDlen) == 0) &&\n         (siginfo[1].size == hashlen) &&\n         (XMEMCMP(siginfo[1].data, hash, hashlen) == 0)"];
"1000404" -> "1000403"  [label="AST: "];
"1000404" -> "1000405"  [label="CFG: "];
"1000405" -> "1000404"  [label="AST: "];
"1000463" -> "1000404"  [label="CFG: "];
"1000466" -> "1000404"  [label="CFG: "];
"1000404" -> "1000478"  [label="DDG: reallen == outlen"];
"1000404" -> "1000478"  [label="DDG: (reallen == outlen) &&\n        (digestinfo[0].size == hash_descriptor[hash_idx].OIDlen) &&\n         (XMEMCMP(digestinfo[0].data, hash_descriptor[hash_idx].OID, sizeof(unsigned long) * hash_descriptor[hash_idx].OIDlen) == 0) &&\n         (siginfo[1].size == hashlen) &&\n         (XMEMCMP(siginfo[1].data, hash, hashlen) == 0)"];
"1000404" -> "1000478"  [label="DDG: (digestinfo[0].size == hash_descriptor[hash_idx].OIDlen) &&\n         (XMEMCMP(digestinfo[0].data, hash_descriptor[hash_idx].OID, sizeof(unsigned long) * hash_descriptor[hash_idx].OIDlen) == 0) &&\n         (siginfo[1].size == hashlen) &&\n         (XMEMCMP(siginfo[1].data, hash, hashlen) == 0)"];
"1000405" -> "1000404"  [label="DDG: reallen"];
"1000405" -> "1000404"  [label="DDG: outlen"];
}
