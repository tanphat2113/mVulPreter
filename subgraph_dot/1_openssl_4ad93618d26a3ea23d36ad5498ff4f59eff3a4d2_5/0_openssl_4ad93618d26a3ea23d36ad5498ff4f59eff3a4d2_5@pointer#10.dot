digraph "0_openssl_4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2_5@pointer" {
"1000388" [label="(Call,s->session->cipher != NULL)"];
"1000208" [label="(Call,(p = OPENSSL_malloc(num)) == NULL)"];
"1000209" [label="(Call,p = OPENSSL_malloc(num))"];
"1000211" [label="(Call,OPENSSL_malloc(num))"];
"1000202" [label="(Call,num *= 2)"];
"1000193" [label="(Call,num = EVP_CIPHER_key_length(c) + mac_secret_size + EVP_CIPHER_iv_length(c))"];
"1000196" [label="(Call,EVP_CIPHER_key_length(c))"];
"1000114" [label="(Call,mac_secret_size = 0)"];
"1000200" [label="(Call,EVP_CIPHER_iv_length(c))"];
"1000436" [label="(MethodReturn,int)"];
"1000388" [label="(Call,s->session->cipher != NULL)"];
"1000198" [label="(Call,mac_secret_size + EVP_CIPHER_iv_length(c))"];
"1000203" [label="(Identifier,num)"];
"1000116" [label="(Literal,0)"];
"1000119" [label="(Identifier,ret)"];
"1000209" [label="(Call,p = OPENSSL_malloc(num))"];
"1000216" [label="(Identifier,SSL_F_TLS1_SETUP_KEY_BLOCK)"];
"1000195" [label="(Call,EVP_CIPHER_key_length(c) + mac_secret_size + EVP_CIPHER_iv_length(c))"];
"1000401" [label="(Identifier,s)"];
"1000228" [label="(Call,s->s3->tmp.key_block = p)"];
"1000204" [label="(Literal,2)"];
"1000213" [label="(Identifier,NULL)"];
"1000219" [label="(Call,s->s3->tmp.key_block_length = num)"];
"1000196" [label="(Call,EVP_CIPHER_key_length(c))"];
"1000387" [label="(ControlStructure,if (s->session->cipher != NULL))"];
"1000211" [label="(Call,OPENSSL_malloc(num))"];
"1000199" [label="(Identifier,mac_secret_size)"];
"1000201" [label="(Identifier,c)"];
"1000115" [label="(Identifier,mac_secret_size)"];
"1000197" [label="(Identifier,c)"];
"1000210" [label="(Identifier,p)"];
"1000389" [label="(Call,s->session->cipher)"];
"1000212" [label="(Identifier,num)"];
"1000184" [label="(Call,s->s3->tmp.new_mac_secret_size = mac_secret_size)"];
"1000431" [label="(Identifier,ret)"];
"1000193" [label="(Call,num = EVP_CIPHER_key_length(c) + mac_secret_size + EVP_CIPHER_iv_length(c))"];
"1000333" [label="(Call,tls1_generate_key_block(s, p, num))"];
"1000202" [label="(Call,num *= 2)"];
"1000208" [label="(Call,(p = OPENSSL_malloc(num)) == NULL)"];
"1000114" [label="(Call,mac_secret_size = 0)"];
"1000206" [label="(Identifier,s)"];
"1000207" [label="(ControlStructure,if ((p = OPENSSL_malloc(num)) == NULL))"];
"1000394" [label="(Identifier,NULL)"];
"1000103" [label="(Block,)"];
"1000223" [label="(Identifier,s)"];
"1000200" [label="(Call,EVP_CIPHER_iv_length(c))"];
"1000194" [label="(Identifier,num)"];
"1000388" -> "1000387"  [label="AST: "];
"1000388" -> "1000394"  [label="CFG: "];
"1000389" -> "1000388"  [label="AST: "];
"1000394" -> "1000388"  [label="AST: "];
"1000401" -> "1000388"  [label="CFG: "];
"1000431" -> "1000388"  [label="CFG: "];
"1000388" -> "1000436"  [label="DDG: NULL"];
"1000388" -> "1000436"  [label="DDG: s->session->cipher"];
"1000388" -> "1000436"  [label="DDG: s->session->cipher != NULL"];
"1000208" -> "1000388"  [label="DDG: NULL"];
"1000208" -> "1000207"  [label="AST: "];
"1000208" -> "1000213"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000213" -> "1000208"  [label="AST: "];
"1000216" -> "1000208"  [label="CFG: "];
"1000223" -> "1000208"  [label="CFG: "];
"1000208" -> "1000436"  [label="DDG: (p = OPENSSL_malloc(num)) == NULL"];
"1000208" -> "1000436"  [label="DDG: NULL"];
"1000209" -> "1000208"  [label="DDG: p"];
"1000211" -> "1000208"  [label="DDG: num"];
"1000209" -> "1000211"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000211" -> "1000209"  [label="AST: "];
"1000213" -> "1000209"  [label="CFG: "];
"1000209" -> "1000436"  [label="DDG: p"];
"1000209" -> "1000436"  [label="DDG: OPENSSL_malloc(num)"];
"1000211" -> "1000209"  [label="DDG: num"];
"1000209" -> "1000228"  [label="DDG: p"];
"1000209" -> "1000333"  [label="DDG: p"];
"1000211" -> "1000212"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000211" -> "1000436"  [label="DDG: num"];
"1000202" -> "1000211"  [label="DDG: num"];
"1000211" -> "1000219"  [label="DDG: num"];
"1000211" -> "1000333"  [label="DDG: num"];
"1000202" -> "1000103"  [label="AST: "];
"1000202" -> "1000204"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000206" -> "1000202"  [label="CFG: "];
"1000193" -> "1000202"  [label="DDG: num"];
"1000193" -> "1000103"  [label="AST: "];
"1000193" -> "1000195"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000195" -> "1000193"  [label="AST: "];
"1000203" -> "1000193"  [label="CFG: "];
"1000193" -> "1000436"  [label="DDG: EVP_CIPHER_key_length(c) + mac_secret_size + EVP_CIPHER_iv_length(c)"];
"1000196" -> "1000193"  [label="DDG: c"];
"1000114" -> "1000193"  [label="DDG: mac_secret_size"];
"1000200" -> "1000193"  [label="DDG: c"];
"1000196" -> "1000195"  [label="AST: "];
"1000196" -> "1000197"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000199" -> "1000196"  [label="CFG: "];
"1000196" -> "1000195"  [label="DDG: c"];
"1000196" -> "1000200"  [label="DDG: c"];
"1000114" -> "1000103"  [label="AST: "];
"1000114" -> "1000116"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000119" -> "1000114"  [label="CFG: "];
"1000114" -> "1000436"  [label="DDG: mac_secret_size"];
"1000114" -> "1000184"  [label="DDG: mac_secret_size"];
"1000114" -> "1000195"  [label="DDG: mac_secret_size"];
"1000114" -> "1000198"  [label="DDG: mac_secret_size"];
"1000200" -> "1000198"  [label="AST: "];
"1000200" -> "1000201"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000200" -> "1000436"  [label="DDG: c"];
"1000200" -> "1000195"  [label="DDG: c"];
"1000200" -> "1000198"  [label="DDG: c"];
}
