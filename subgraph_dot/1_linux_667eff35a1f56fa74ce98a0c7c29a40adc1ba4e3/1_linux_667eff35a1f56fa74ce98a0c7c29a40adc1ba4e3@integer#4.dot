digraph "1_linux_667eff35a1f56fa74ce98a0c7c29a40adc1ba4e3@integer" {
"1000181" [label="(Call,eof_block = (inode->i_size + inode->i_sb->s_blocksize - 1) >>\n\t\tinode->i_sb->s_blocksize_bits)"];
"1000183" [label="(Call,(inode->i_size + inode->i_sb->s_blocksize - 1) >>\n\t\tinode->i_sb->s_blocksize_bits)"];
"1000188" [label="(Call,inode->i_sb->s_blocksize - 1)"];
"1000201" [label="(Call,eof_block < map->m_lblk + map->m_len)"];
"1000289" [label="(Call,ee_block + ee_len <= eof_block)"];
"1000287" [label="(Call,may_zeroout = ee_block + ee_len <= eof_block)"];
"1000306" [label="(Call,ee_len <= 2*EXT4_EXT_ZERO_LEN && may_zeroout)"];
"1000402" [label="(Call,allocated <= EXT4_EXT_ZERO_LEN && may_zeroout)"];
"1000618" [label="(Call,err == -ENOSPC && may_zeroout)"];
"1000920" [label="(Call,err == -ENOSPC && may_zeroout)"];
"1000681" [label="(Call,ee_block + ee_len <= eof_block)"];
"1000679" [label="(Call,may_zeroout = ee_block + ee_len <= eof_block)"];
"1000754" [label="(Call,map->m_lblk != ee_block && may_zeroout)"];
"1000747" [label="(Call,le16_to_cpu(orig_ex.ee_len) <= EXT4_EXT_ZERO_LEN &&\n\t\t\tmap->m_lblk != ee_block && may_zeroout)"];
"1000618" [label="(Call,err == -ENOSPC && may_zeroout)"];
"1000410" [label="(Identifier,ex)"];
"1000687" [label="(Identifier,depth)"];
"1000188" [label="(Call,inode->i_sb->s_blocksize - 1)"];
"1000312" [label="(Identifier,may_zeroout)"];
"1000925" [label="(Identifier,may_zeroout)"];
"1000677" [label="(Call,cpu_to_le16(ee_len))"];
"1000136" [label="(Block,)"];
"1000623" [label="(Identifier,may_zeroout)"];
"1000682" [label="(Call,ee_block + ee_len)"];
"1000575" [label="(Identifier,ex3)"];
"1000617" [label="(ControlStructure,if (err == -ENOSPC && may_zeroout))"];
"1000183" [label="(Call,(inode->i_size + inode->i_sb->s_blocksize - 1) >>\n\t\tinode->i_sb->s_blocksize_bits)"];
"1000353" [label="(Identifier,map)"];
"1000747" [label="(Call,le16_to_cpu(orig_ex.ee_len) <= EXT4_EXT_ZERO_LEN &&\n\t\t\tmap->m_lblk != ee_block && may_zeroout)"];
"1000402" [label="(Call,allocated <= EXT4_EXT_ZERO_LEN && may_zeroout)"];
"1000200" [label="(ControlStructure,if (eof_block < map->m_lblk + map->m_len))"];
"1000965" [label="(Identifier,err)"];
"1000184" [label="(Call,inode->i_size + inode->i_sb->s_blocksize - 1)"];
"1000194" [label="(Literal,1)"];
"1000755" [label="(Call,map->m_lblk != ee_block)"];
"1000295" [label="(Identifier,err)"];
"1000403" [label="(Call,allocated <= EXT4_EXT_ZERO_LEN)"];
"1000289" [label="(Call,ee_block + ee_len <= eof_block)"];
"1000685" [label="(Identifier,eof_block)"];
"1000251" [label="(Call,map->m_lblk - ee_block)"];
"1000315" [label="(Identifier,err)"];
"1000181" [label="(Call,eof_block = (inode->i_size + inode->i_sb->s_blocksize - 1) >>\n\t\tinode->i_sb->s_blocksize_bits)"];
"1000800" [label="(Identifier,ex1)"];
"1000681" [label="(Call,ee_block + ee_len <= eof_block)"];
"1000202" [label="(Identifier,eof_block)"];
"1000189" [label="(Call,inode->i_sb->s_blocksize)"];
"1000663" [label="(Identifier,err)"];
"1000754" [label="(Call,map->m_lblk != ee_block && may_zeroout)"];
"1000680" [label="(Identifier,may_zeroout)"];
"1000760" [label="(Identifier,may_zeroout)"];
"1000287" [label="(Call,may_zeroout = ee_block + ee_len <= eof_block)"];
"1000203" [label="(Call,map->m_lblk + map->m_len)"];
"1000290" [label="(Call,ee_block + ee_len)"];
"1000210" [label="(Call,eof_block = map->m_lblk + map->m_len)"];
"1000679" [label="(Call,may_zeroout = ee_block + ee_len <= eof_block)"];
"1001006" [label="(MethodReturn,static int)"];
"1000195" [label="(Call,inode->i_sb->s_blocksize_bits)"];
"1000211" [label="(Identifier,eof_block)"];
"1000919" [label="(ControlStructure,if (err == -ENOSPC && may_zeroout))"];
"1000746" [label="(ControlStructure,if (le16_to_cpu(orig_ex.ee_len) <= EXT4_EXT_ZERO_LEN &&\n\t\t\tmap->m_lblk != ee_block && may_zeroout))"];
"1000748" [label="(Call,le16_to_cpu(orig_ex.ee_len) <= EXT4_EXT_ZERO_LEN)"];
"1000619" [label="(Call,err == -ENOSPC)"];
"1000173" [label="(Call,(unsigned long long)map->m_lblk)"];
"1000182" [label="(Identifier,eof_block)"];
"1000928" [label="(Identifier,err)"];
"1000406" [label="(Identifier,may_zeroout)"];
"1000305" [label="(ControlStructure,if (ee_len <= 2*EXT4_EXT_ZERO_LEN && may_zeroout))"];
"1000920" [label="(Call,err == -ENOSPC && may_zeroout)"];
"1000288" [label="(Identifier,may_zeroout)"];
"1000201" [label="(Call,eof_block < map->m_lblk + map->m_len)"];
"1000280" [label="(Call,cpu_to_le16(ee_len))"];
"1000365" [label="(Call,map->m_lblk - ee_block)"];
"1000307" [label="(Call,ee_len <= 2*EXT4_EXT_ZERO_LEN)"];
"1000220" [label="(Identifier,depth)"];
"1000921" [label="(Call,err == -ENOSPC)"];
"1000763" [label="(Identifier,err)"];
"1000399" [label="(Block,)"];
"1000293" [label="(Identifier,eof_block)"];
"1000401" [label="(ControlStructure,if (allocated <= EXT4_EXT_ZERO_LEN && may_zeroout))"];
"1000306" [label="(Call,ee_len <= 2*EXT4_EXT_ZERO_LEN && may_zeroout)"];
"1000168" [label="(Call,ext_debug(\"ext4_ext_convert_to_initialized: inode %lu, logical\"\n \t\t\"block %llu, max_blocks %u\n\", inode->i_ino,\n\t\t(unsigned long long)map->m_lblk, map->m_len))"];
"1000351" [label="(Call,map->m_lblk > ee_block)"];
"1000626" [label="(Identifier,err)"];
"1000181" -> "1000136"  [label="AST: "];
"1000181" -> "1000183"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000183" -> "1000181"  [label="AST: "];
"1000202" -> "1000181"  [label="CFG: "];
"1000181" -> "1001006"  [label="DDG: (inode->i_size + inode->i_sb->s_blocksize - 1) >>\n\t\tinode->i_sb->s_blocksize_bits"];
"1000183" -> "1000181"  [label="DDG: inode->i_size + inode->i_sb->s_blocksize - 1"];
"1000183" -> "1000181"  [label="DDG: inode->i_sb->s_blocksize_bits"];
"1000181" -> "1000201"  [label="DDG: eof_block"];
"1000183" -> "1000195"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000195" -> "1000183"  [label="AST: "];
"1000183" -> "1001006"  [label="DDG: inode->i_size + inode->i_sb->s_blocksize - 1"];
"1000183" -> "1001006"  [label="DDG: inode->i_sb->s_blocksize_bits"];
"1000188" -> "1000183"  [label="DDG: inode->i_sb->s_blocksize"];
"1000188" -> "1000183"  [label="DDG: 1"];
"1000188" -> "1000184"  [label="AST: "];
"1000188" -> "1000194"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000194" -> "1000188"  [label="AST: "];
"1000184" -> "1000188"  [label="CFG: "];
"1000188" -> "1001006"  [label="DDG: inode->i_sb->s_blocksize"];
"1000188" -> "1000184"  [label="DDG: inode->i_sb->s_blocksize"];
"1000188" -> "1000184"  [label="DDG: 1"];
"1000201" -> "1000200"  [label="AST: "];
"1000201" -> "1000203"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000203" -> "1000201"  [label="AST: "];
"1000211" -> "1000201"  [label="CFG: "];
"1000220" -> "1000201"  [label="CFG: "];
"1000201" -> "1001006"  [label="DDG: eof_block < map->m_lblk + map->m_len"];
"1000201" -> "1001006"  [label="DDG: map->m_lblk + map->m_len"];
"1000173" -> "1000201"  [label="DDG: map->m_lblk"];
"1000168" -> "1000201"  [label="DDG: map->m_len"];
"1000201" -> "1000289"  [label="DDG: eof_block"];
"1000289" -> "1000287"  [label="AST: "];
"1000289" -> "1000293"  [label="CFG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000293" -> "1000289"  [label="AST: "];
"1000287" -> "1000289"  [label="CFG: "];
"1000289" -> "1001006"  [label="DDG: ee_block + ee_len"];
"1000289" -> "1001006"  [label="DDG: eof_block"];
"1000289" -> "1000287"  [label="DDG: ee_block + ee_len"];
"1000289" -> "1000287"  [label="DDG: eof_block"];
"1000251" -> "1000289"  [label="DDG: ee_block"];
"1000280" -> "1000289"  [label="DDG: ee_len"];
"1000210" -> "1000289"  [label="DDG: eof_block"];
"1000289" -> "1000681"  [label="DDG: eof_block"];
"1000287" -> "1000136"  [label="AST: "];
"1000288" -> "1000287"  [label="AST: "];
"1000295" -> "1000287"  [label="CFG: "];
"1000287" -> "1001006"  [label="DDG: ee_block + ee_len <= eof_block"];
"1000287" -> "1001006"  [label="DDG: may_zeroout"];
"1000287" -> "1000306"  [label="DDG: may_zeroout"];
"1000306" -> "1000305"  [label="AST: "];
"1000306" -> "1000307"  [label="CFG: "];
"1000306" -> "1000312"  [label="CFG: "];
"1000307" -> "1000306"  [label="AST: "];
"1000312" -> "1000306"  [label="AST: "];
"1000315" -> "1000306"  [label="CFG: "];
"1000353" -> "1000306"  [label="CFG: "];
"1000306" -> "1001006"  [label="DDG: may_zeroout"];
"1000306" -> "1001006"  [label="DDG: ee_len <= 2*EXT4_EXT_ZERO_LEN"];
"1000306" -> "1001006"  [label="DDG: ee_len <= 2*EXT4_EXT_ZERO_LEN && may_zeroout"];
"1000307" -> "1000306"  [label="DDG: ee_len"];
"1000307" -> "1000306"  [label="DDG: 2*EXT4_EXT_ZERO_LEN"];
"1000306" -> "1000402"  [label="DDG: may_zeroout"];
"1000306" -> "1000920"  [label="DDG: may_zeroout"];
"1000402" -> "1000401"  [label="AST: "];
"1000402" -> "1000403"  [label="CFG: "];
"1000402" -> "1000406"  [label="CFG: "];
"1000403" -> "1000402"  [label="AST: "];
"1000406" -> "1000402"  [label="AST: "];
"1000410" -> "1000402"  [label="CFG: "];
"1000575" -> "1000402"  [label="CFG: "];
"1000402" -> "1001006"  [label="DDG: allocated <= EXT4_EXT_ZERO_LEN && may_zeroout"];
"1000402" -> "1001006"  [label="DDG: allocated <= EXT4_EXT_ZERO_LEN"];
"1000402" -> "1001006"  [label="DDG: may_zeroout"];
"1000403" -> "1000402"  [label="DDG: allocated"];
"1000403" -> "1000402"  [label="DDG: EXT4_EXT_ZERO_LEN"];
"1000402" -> "1000618"  [label="DDG: may_zeroout"];
"1000618" -> "1000617"  [label="AST: "];
"1000618" -> "1000619"  [label="CFG: "];
"1000618" -> "1000623"  [label="CFG: "];
"1000619" -> "1000618"  [label="AST: "];
"1000623" -> "1000618"  [label="AST: "];
"1000626" -> "1000618"  [label="CFG: "];
"1000663" -> "1000618"  [label="CFG: "];
"1000618" -> "1001006"  [label="DDG: may_zeroout"];
"1000618" -> "1001006"  [label="DDG: err == -ENOSPC && may_zeroout"];
"1000618" -> "1001006"  [label="DDG: err == -ENOSPC"];
"1000619" -> "1000618"  [label="DDG: err"];
"1000619" -> "1000618"  [label="DDG: -ENOSPC"];
"1000920" -> "1000919"  [label="AST: "];
"1000920" -> "1000921"  [label="CFG: "];
"1000920" -> "1000925"  [label="CFG: "];
"1000921" -> "1000920"  [label="AST: "];
"1000925" -> "1000920"  [label="AST: "];
"1000928" -> "1000920"  [label="CFG: "];
"1000965" -> "1000920"  [label="CFG: "];
"1000920" -> "1001006"  [label="DDG: err == -ENOSPC && may_zeroout"];
"1000920" -> "1001006"  [label="DDG: err == -ENOSPC"];
"1000920" -> "1001006"  [label="DDG: may_zeroout"];
"1000921" -> "1000920"  [label="DDG: err"];
"1000921" -> "1000920"  [label="DDG: -ENOSPC"];
"1000679" -> "1000920"  [label="DDG: may_zeroout"];
"1000754" -> "1000920"  [label="DDG: may_zeroout"];
"1000681" -> "1000679"  [label="AST: "];
"1000681" -> "1000685"  [label="CFG: "];
"1000682" -> "1000681"  [label="AST: "];
"1000685" -> "1000681"  [label="AST: "];
"1000679" -> "1000681"  [label="CFG: "];
"1000681" -> "1001006"  [label="DDG: ee_block + ee_len"];
"1000681" -> "1001006"  [label="DDG: eof_block"];
"1000681" -> "1000679"  [label="DDG: ee_block + ee_len"];
"1000681" -> "1000679"  [label="DDG: eof_block"];
"1000365" -> "1000681"  [label="DDG: ee_block"];
"1000351" -> "1000681"  [label="DDG: ee_block"];
"1000677" -> "1000681"  [label="DDG: ee_len"];
"1000679" -> "1000399"  [label="AST: "];
"1000680" -> "1000679"  [label="AST: "];
"1000687" -> "1000679"  [label="CFG: "];
"1000679" -> "1001006"  [label="DDG: ee_block + ee_len <= eof_block"];
"1000679" -> "1001006"  [label="DDG: may_zeroout"];
"1000679" -> "1000754"  [label="DDG: may_zeroout"];
"1000754" -> "1000747"  [label="AST: "];
"1000754" -> "1000755"  [label="CFG: "];
"1000754" -> "1000760"  [label="CFG: "];
"1000755" -> "1000754"  [label="AST: "];
"1000760" -> "1000754"  [label="AST: "];
"1000747" -> "1000754"  [label="CFG: "];
"1000754" -> "1001006"  [label="DDG: may_zeroout"];
"1000754" -> "1001006"  [label="DDG: map->m_lblk != ee_block"];
"1000754" -> "1000747"  [label="DDG: map->m_lblk != ee_block"];
"1000754" -> "1000747"  [label="DDG: may_zeroout"];
"1000755" -> "1000754"  [label="DDG: map->m_lblk"];
"1000755" -> "1000754"  [label="DDG: ee_block"];
"1000747" -> "1000746"  [label="AST: "];
"1000747" -> "1000748"  [label="CFG: "];
"1000748" -> "1000747"  [label="AST: "];
"1000763" -> "1000747"  [label="CFG: "];
"1000800" -> "1000747"  [label="CFG: "];
"1000747" -> "1001006"  [label="DDG: map->m_lblk != ee_block && may_zeroout"];
"1000747" -> "1001006"  [label="DDG: le16_to_cpu(orig_ex.ee_len) <= EXT4_EXT_ZERO_LEN"];
"1000747" -> "1001006"  [label="DDG: le16_to_cpu(orig_ex.ee_len) <= EXT4_EXT_ZERO_LEN &&\n\t\t\tmap->m_lblk != ee_block && may_zeroout"];
"1000748" -> "1000747"  [label="DDG: le16_to_cpu(orig_ex.ee_len)"];
"1000748" -> "1000747"  [label="DDG: EXT4_EXT_ZERO_LEN"];
}
