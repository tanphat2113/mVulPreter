digraph "0_mindrot_2fecfd486bdba9f51b3a789277bb0733ca36e1c0@pointer" {
"1000426" [label="(Call,ssh_packet_start_discard(ssh, enc, mac,\n\t\t\t    state->packlen, PACKET_MAX_SIZE))"];
"1000111" [label="(MethodParameterIn,struct ssh *ssh)"];
"1000233" [label="(Call,mac && mac->enabled && mac->etm)"];
"1000212" [label="(Call,mac && mac->enabled)"];
"1000177" [label="(Call,mac  = &state->newkeys[MODE_IN]->mac)"];
"1000140" [label="(Call,*mac   = NULL)"];
"1000206" [label="(Call,mac = NULL)"];
"1000159" [label="(Call,state->newkeys[MODE_IN] != NULL)"];
"1000235" [label="(Call,mac->enabled && mac->etm)"];
"1000420" [label="(Call,logit(\"Bad packet length %u.\", state->packlen))"];
"1000391" [label="(Call,state->packlen < 1 + 4)"];
"1000380" [label="(Call,state->packlen = PEEK_U32(sshbuf_ptr(state->incoming_packet)))"];
"1000384" [label="(Call,PEEK_U32(sshbuf_ptr(state->incoming_packet)))"];
"1000385" [label="(Call,sshbuf_ptr(state->incoming_packet))"];
"1000347" [label="(Call,sshbuf_reserve(state->incoming_packet, block_size,\n\t\t    &cp))"];
"1000339" [label="(Call,sshbuf_reset(state->incoming_packet))"];
"1000331" [label="(Call,sshbuf_len(state->input) < block_size)"];
"1000332" [label="(Call,sshbuf_len(state->input))"];
"1000221" [label="(Call,block_size = enc ? enc->block_size : 8)"];
"1000398" [label="(Call,state->packlen > PACKET_MAX_SIZE)"];
"1000425" [label="(Return,return ssh_packet_start_discard(ssh, enc, mac,\n\t\t\t    state->packlen, PACKET_MAX_SIZE);)"];
"1000624" [label="(Call,!mac->etm)"];
"1000381" [label="(Call,state->packlen)"];
"1000668" [label="(Call,need > PACKET_MAX_SIZE)"];
"1000706" [label="(Call,seqnr_p != NULL)"];
"1000142" [label="(Identifier,NULL)"];
"1000566" [label="(Call,sshbuf_reserve(state->incoming_packet, aadlen + need,\n\t    &cp))"];
"1000140" [label="(Call,*mac   = NULL)"];
"1000330" [label="(ControlStructure,if (sshbuf_len(state->input) < block_size))"];
"1000235" [label="(Call,mac->enabled && mac->etm)"];
"1000386" [label="(Call,state->incoming_packet)"];
"1000456" [label="(Call,need = state->packlen)"];
"1000177" [label="(Call,mac  = &state->newkeys[MODE_IN]->mac)"];
"1000800" [label="(Call,ssh_packet_write_wait(ssh))"];
"1000422" [label="(Call,state->packlen)"];
"1000759" [label="(Call,state->p_read.bytes += state->packlen + 4)"];
"1000239" [label="(Call,mac->etm)"];
"1000351" [label="(Identifier,block_size)"];
"1000111" [label="(MethodParameterIn,struct ssh *ssh)"];
"1000331" [label="(Call,sshbuf_len(state->input) < block_size)"];
"1000145" [label="(Identifier,comp)"];
"1000340" [label="(Call,state->incoming_packet)"];
"1000427" [label="(Identifier,ssh)"];
"1000345" [label="(Call,r = sshbuf_reserve(state->incoming_packet, block_size,\n\t\t    &cp))"];
"1000212" [label="(Call,mac && mac->enabled)"];
"1000236" [label="(Call,mac->enabled)"];
"1000393" [label="(Identifier,state)"];
"1000392" [label="(Call,state->packlen)"];
"1000114" [label="(Block,)"];
"1000166" [label="(Block,)"];
"1000213" [label="(Identifier,mac)"];
"1000385" [label="(Call,sshbuf_ptr(state->incoming_packet))"];
"1000502" [label="(Call,PACKET_MAX_SIZE - block_size)"];
"1000210" [label="(Identifier,maclen)"];
"1000400" [label="(Identifier,state)"];
"1000922" [label="(Call,ssh_packet_write_wait(ssh))"];
"1000391" [label="(Call,state->packlen < 1 + 4)"];
"1000344" [label="(Call,(r = sshbuf_reserve(state->incoming_packet, block_size,\n\t\t    &cp)) != 0)"];
"1000952" [label="(Call,ssh_packet_enable_delayed_compress(ssh))"];
"1000141" [label="(Identifier,mac)"];
"1000242" [label="(Identifier,authlen)"];
"1000346" [label="(Identifier,r)"];
"1000674" [label="(Call,ssh_packet_start_discard(ssh, enc, mac,\n\t\t\t    state->packlen, PACKET_MAX_SIZE - need))"];
"1000233" [label="(Call,mac && mac->enabled && mac->etm)"];
"1000232" [label="(Call,(mac && mac->enabled && mac->etm) || authlen)"];
"1000936" [label="(Call,ssh_set_newkeys(ssh, MODE_IN))"];
"1000415" [label="(Call,sshbuf_dump(state->incoming_packet, stderr))"];
"1000222" [label="(Identifier,block_size)"];
"1000913" [label="(Call,sshpkt_disconnect(ssh,\n\t\t    \"Invalid ssh2 packet type: %d\", *typep))"];
"1000220" [label="(Literal,0)"];
"1000473" [label="(Call,debug(\"partial packet: block %d, need %d, maclen %d, authlen %d,\"\n\t    \" aadlen %d\", block_size, need, maclen, authlen, aadlen))"];
"1000207" [label="(Identifier,mac)"];
"1000341" [label="(Identifier,state)"];
"1000158" [label="(ControlStructure,if (state->newkeys[MODE_IN] != NULL))"];
"1000214" [label="(Call,mac->enabled)"];
"1000430" [label="(Call,state->packlen)"];
"1000234" [label="(Identifier,mac)"];
"1000792" [label="(Call,sshpkt_disconnect(ssh,\n\t\t    \"Corrupted padlen %d on input.\", padlen))"];
"1000188" [label="(Identifier,comp)"];
"1000352" [label="(Call,&cp)"];
"1000426" [label="(Call,ssh_packet_start_discard(ssh, enc, mac,\n\t\t\t    state->packlen, PACKET_MAX_SIZE))"];
"1000336" [label="(Identifier,block_size)"];
"1000395" [label="(Call,1 + 4)"];
"1000223" [label="(Call,enc ? enc->block_size : 8)"];
"1000421" [label="(Literal,\"Bad packet length %u.\")"];
"1000206" [label="(Call,mac = NULL)"];
"1000347" [label="(Call,sshbuf_reserve(state->incoming_packet, block_size,\n\t\t    &cp))"];
"1000310" [label="(Call,sshpkt_disconnect(ssh, \"Packet corrupt\"))"];
"1000165" [label="(Identifier,NULL)"];
"1000495" [label="(Call,ssh_packet_start_discard(ssh, enc, mac,\n\t\t    state->packlen, PACKET_MAX_SIZE - block_size))"];
"1000211" [label="(Call,mac && mac->enabled ? mac->mac_len : 0)"];
"1000425" [label="(Return,return ssh_packet_start_discard(ssh, enc, mac,\n\t\t\t    state->packlen, PACKET_MAX_SIZE);)"];
"1000197" [label="(ControlStructure,if ((authlen = cipher_authlen(enc->cipher)) != 0))"];
"1000339" [label="(Call,sshbuf_reset(state->incoming_packet))"];
"1000371" [label="(Call,sshbuf_ptr(state->input))"];
"1000433" [label="(Identifier,PACKET_MAX_SIZE)"];
"1000333" [label="(Call,state->input)"];
"1000617" [label="(Call,mac && mac->enabled)"];
"1000329" [label="(Block,)"];
"1000360" [label="(Call,cipher_crypt(&state->receive_context,\n\t\t    state->p_send.seqnr, cp, sshbuf_ptr(state->input),\n\t\t    block_size, 0, 0))"];
"1000390" [label="(Call,state->packlen < 1 + 4 ||\n\t\t    state->packlen > PACKET_MAX_SIZE)"];
"1000403" [label="(Block,)"];
"1000380" [label="(Call,state->packlen = PEEK_U32(sshbuf_ptr(state->incoming_packet)))"];
"1000338" [label="(Literal,0)"];
"1000852" [label="(Call,uncompress_buffer(ssh, state->incoming_packet,\n\t\t    state->compression_buffer))"];
"1000529" [label="(Call,mac && mac->enabled && mac->etm)"];
"1000428" [label="(Identifier,enc)"];
"1000399" [label="(Call,state->packlen)"];
"1000446" [label="(Call,debug(\"input: packet len %u\", state->packlen+4))"];
"1000531" [label="(Call,mac->enabled && mac->etm)"];
"1000384" [label="(Call,PEEK_U32(sshbuf_ptr(state->incoming_packet)))"];
"1000168" [label="(Identifier,enc)"];
"1000348" [label="(Call,state->incoming_packet)"];
"1000752" [label="(Call,(state->packlen + 4) / block_size)"];
"1000332" [label="(Call,sshbuf_len(state->input))"];
"1000467" [label="(Call,state->packlen - block_size)"];
"1000160" [label="(Call,state->newkeys[MODE_IN])"];
"1000221" [label="(Call,block_size = enc ? enc->block_size : 8)"];
"1000230" [label="(Identifier,aadlen)"];
"1000429" [label="(Identifier,mac)"];
"1000448" [label="(Call,state->packlen+4)"];
"1000398" [label="(Call,state->packlen > PACKET_MAX_SIZE)"];
"1000178" [label="(Identifier,mac)"];
"1000753" [label="(Call,state->packlen + 4)"];
"1000976" [label="(MethodReturn,RET)"];
"1000420" [label="(Call,logit(\"Bad packet length %u.\", state->packlen))"];
"1000159" [label="(Call,state->newkeys[MODE_IN] != NULL)"];
"1000208" [label="(Identifier,NULL)"];
"1000218" [label="(Identifier,mac)"];
"1000402" [label="(Identifier,PACKET_MAX_SIZE)"];
"1000179" [label="(Call,&state->newkeys[MODE_IN]->mac)"];
"1000765" [label="(Call,state->packlen + 4)"];
"1000426" -> "1000425"  [label="AST: "];
"1000426" -> "1000433"  [label="CFG: "];
"1000427" -> "1000426"  [label="AST: "];
"1000428" -> "1000426"  [label="AST: "];
"1000429" -> "1000426"  [label="AST: "];
"1000430" -> "1000426"  [label="AST: "];
"1000433" -> "1000426"  [label="AST: "];
"1000425" -> "1000426"  [label="CFG: "];
"1000426" -> "1000976"  [label="DDG: "];
"1000426" -> "1000976"  [label="DDG: "];
"1000426" -> "1000976"  [label="DDG: "];
"1000426" -> "1000976"  [label="DDG: "];
"1000426" -> "1000976"  [label="DDG: "];
"1000426" -> "1000976"  [label="DDG: "];
"1000426" -> "1000425"  [label="DDG: "];
"1000111" -> "1000426"  [label="DDG: "];
"1000233" -> "1000426"  [label="DDG: "];
"1000420" -> "1000426"  [label="DDG: "];
"1000398" -> "1000426"  [label="DDG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000976"  [label="DDG: "];
"1000111" -> "1000310"  [label="DDG: "];
"1000111" -> "1000495"  [label="DDG: "];
"1000111" -> "1000674"  [label="DDG: "];
"1000111" -> "1000792"  [label="DDG: "];
"1000111" -> "1000800"  [label="DDG: "];
"1000111" -> "1000852"  [label="DDG: "];
"1000111" -> "1000913"  [label="DDG: "];
"1000111" -> "1000922"  [label="DDG: "];
"1000111" -> "1000936"  [label="DDG: "];
"1000111" -> "1000952"  [label="DDG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000233" -> "1000234"  [label="CFG: "];
"1000233" -> "1000235"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000235" -> "1000233"  [label="AST: "];
"1000242" -> "1000233"  [label="CFG: "];
"1000232" -> "1000233"  [label="CFG: "];
"1000233" -> "1000976"  [label="DDG: "];
"1000233" -> "1000976"  [label="DDG: "];
"1000233" -> "1000232"  [label="DDG: "];
"1000233" -> "1000232"  [label="DDG: "];
"1000212" -> "1000233"  [label="DDG: "];
"1000235" -> "1000233"  [label="DDG: "];
"1000235" -> "1000233"  [label="DDG: "];
"1000233" -> "1000495"  [label="DDG: "];
"1000233" -> "1000529"  [label="DDG: "];
"1000233" -> "1000529"  [label="DDG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000212" -> "1000213"  [label="CFG: "];
"1000212" -> "1000214"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000214" -> "1000212"  [label="AST: "];
"1000218" -> "1000212"  [label="CFG: "];
"1000220" -> "1000212"  [label="CFG: "];
"1000212" -> "1000976"  [label="DDG: "];
"1000177" -> "1000212"  [label="DDG: "];
"1000140" -> "1000212"  [label="DDG: "];
"1000206" -> "1000212"  [label="DDG: "];
"1000212" -> "1000235"  [label="DDG: "];
"1000212" -> "1000531"  [label="DDG: "];
"1000212" -> "1000617"  [label="DDG: "];
"1000177" -> "1000166"  [label="AST: "];
"1000177" -> "1000179"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000179" -> "1000177"  [label="AST: "];
"1000188" -> "1000177"  [label="CFG: "];
"1000177" -> "1000976"  [label="DDG: "];
"1000140" -> "1000114"  [label="AST: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000142" -> "1000140"  [label="AST: "];
"1000145" -> "1000140"  [label="CFG: "];
"1000140" -> "1000976"  [label="DDG: "];
"1000206" -> "1000197"  [label="AST: "];
"1000206" -> "1000208"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000206"  [label="AST: "];
"1000210" -> "1000206"  [label="CFG: "];
"1000206" -> "1000976"  [label="DDG: "];
"1000159" -> "1000206"  [label="DDG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000159" -> "1000165"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000165" -> "1000159"  [label="AST: "];
"1000168" -> "1000159"  [label="CFG: "];
"1000210" -> "1000159"  [label="CFG: "];
"1000159" -> "1000976"  [label="DDG: "];
"1000159" -> "1000976"  [label="DDG: "];
"1000159" -> "1000976"  [label="DDG: "];
"1000159" -> "1000706"  [label="DDG: "];
"1000235" -> "1000236"  [label="CFG: "];
"1000235" -> "1000239"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000239" -> "1000235"  [label="AST: "];
"1000235" -> "1000976"  [label="DDG: "];
"1000235" -> "1000976"  [label="DDG: "];
"1000235" -> "1000531"  [label="DDG: "];
"1000235" -> "1000531"  [label="DDG: "];
"1000235" -> "1000617"  [label="DDG: "];
"1000235" -> "1000624"  [label="DDG: "];
"1000420" -> "1000403"  [label="AST: "];
"1000420" -> "1000422"  [label="CFG: "];
"1000421" -> "1000420"  [label="AST: "];
"1000422" -> "1000420"  [label="AST: "];
"1000427" -> "1000420"  [label="CFG: "];
"1000420" -> "1000976"  [label="DDG: "];
"1000391" -> "1000420"  [label="DDG: "];
"1000398" -> "1000420"  [label="DDG: "];
"1000391" -> "1000390"  [label="AST: "];
"1000391" -> "1000395"  [label="CFG: "];
"1000392" -> "1000391"  [label="AST: "];
"1000395" -> "1000391"  [label="AST: "];
"1000400" -> "1000391"  [label="CFG: "];
"1000390" -> "1000391"  [label="CFG: "];
"1000391" -> "1000976"  [label="DDG: "];
"1000391" -> "1000976"  [label="DDG: "];
"1000391" -> "1000390"  [label="DDG: "];
"1000391" -> "1000390"  [label="DDG: "];
"1000380" -> "1000391"  [label="DDG: "];
"1000391" -> "1000398"  [label="DDG: "];
"1000391" -> "1000446"  [label="DDG: "];
"1000391" -> "1000448"  [label="DDG: "];
"1000391" -> "1000456"  [label="DDG: "];
"1000391" -> "1000467"  [label="DDG: "];
"1000391" -> "1000495"  [label="DDG: "];
"1000391" -> "1000674"  [label="DDG: "];
"1000391" -> "1000752"  [label="DDG: "];
"1000391" -> "1000753"  [label="DDG: "];
"1000391" -> "1000759"  [label="DDG: "];
"1000391" -> "1000765"  [label="DDG: "];
"1000380" -> "1000329"  [label="AST: "];
"1000380" -> "1000384"  [label="CFG: "];
"1000381" -> "1000380"  [label="AST: "];
"1000384" -> "1000380"  [label="AST: "];
"1000393" -> "1000380"  [label="CFG: "];
"1000380" -> "1000976"  [label="DDG: "];
"1000384" -> "1000380"  [label="DDG: "];
"1000384" -> "1000385"  [label="CFG: "];
"1000385" -> "1000384"  [label="AST: "];
"1000384" -> "1000976"  [label="DDG: "];
"1000385" -> "1000384"  [label="DDG: "];
"1000385" -> "1000386"  [label="CFG: "];
"1000386" -> "1000385"  [label="AST: "];
"1000385" -> "1000976"  [label="DDG: "];
"1000347" -> "1000385"  [label="DDG: "];
"1000385" -> "1000415"  [label="DDG: "];
"1000385" -> "1000566"  [label="DDG: "];
"1000347" -> "1000345"  [label="AST: "];
"1000347" -> "1000352"  [label="CFG: "];
"1000348" -> "1000347"  [label="AST: "];
"1000351" -> "1000347"  [label="AST: "];
"1000352" -> "1000347"  [label="AST: "];
"1000345" -> "1000347"  [label="CFG: "];
"1000347" -> "1000976"  [label="DDG: "];
"1000347" -> "1000976"  [label="DDG: "];
"1000347" -> "1000976"  [label="DDG: "];
"1000347" -> "1000344"  [label="DDG: "];
"1000347" -> "1000344"  [label="DDG: "];
"1000347" -> "1000344"  [label="DDG: "];
"1000347" -> "1000345"  [label="DDG: "];
"1000347" -> "1000345"  [label="DDG: "];
"1000347" -> "1000345"  [label="DDG: "];
"1000339" -> "1000347"  [label="DDG: "];
"1000331" -> "1000347"  [label="DDG: "];
"1000347" -> "1000360"  [label="DDG: "];
"1000347" -> "1000566"  [label="DDG: "];
"1000339" -> "1000329"  [label="AST: "];
"1000339" -> "1000340"  [label="CFG: "];
"1000340" -> "1000339"  [label="AST: "];
"1000346" -> "1000339"  [label="CFG: "];
"1000339" -> "1000976"  [label="DDG: "];
"1000331" -> "1000330"  [label="AST: "];
"1000331" -> "1000336"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000336" -> "1000331"  [label="AST: "];
"1000338" -> "1000331"  [label="CFG: "];
"1000341" -> "1000331"  [label="CFG: "];
"1000331" -> "1000976"  [label="DDG: "];
"1000331" -> "1000976"  [label="DDG: "];
"1000331" -> "1000976"  [label="DDG: "];
"1000332" -> "1000331"  [label="DDG: "];
"1000221" -> "1000331"  [label="DDG: "];
"1000332" -> "1000333"  [label="CFG: "];
"1000333" -> "1000332"  [label="AST: "];
"1000336" -> "1000332"  [label="CFG: "];
"1000332" -> "1000976"  [label="DDG: "];
"1000332" -> "1000371"  [label="DDG: "];
"1000221" -> "1000114"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000230" -> "1000221"  [label="CFG: "];
"1000221" -> "1000976"  [label="DDG: "];
"1000221" -> "1000976"  [label="DDG: "];
"1000221" -> "1000467"  [label="DDG: "];
"1000221" -> "1000473"  [label="DDG: "];
"1000398" -> "1000390"  [label="AST: "];
"1000398" -> "1000402"  [label="CFG: "];
"1000399" -> "1000398"  [label="AST: "];
"1000402" -> "1000398"  [label="AST: "];
"1000390" -> "1000398"  [label="CFG: "];
"1000398" -> "1000976"  [label="DDG: "];
"1000398" -> "1000976"  [label="DDG: "];
"1000398" -> "1000390"  [label="DDG: "];
"1000398" -> "1000390"  [label="DDG: "];
"1000398" -> "1000446"  [label="DDG: "];
"1000398" -> "1000448"  [label="DDG: "];
"1000398" -> "1000456"  [label="DDG: "];
"1000398" -> "1000467"  [label="DDG: "];
"1000398" -> "1000495"  [label="DDG: "];
"1000398" -> "1000502"  [label="DDG: "];
"1000398" -> "1000668"  [label="DDG: "];
"1000398" -> "1000674"  [label="DDG: "];
"1000398" -> "1000752"  [label="DDG: "];
"1000398" -> "1000753"  [label="DDG: "];
"1000398" -> "1000759"  [label="DDG: "];
"1000398" -> "1000765"  [label="DDG: "];
"1000425" -> "1000403"  [label="AST: "];
"1000976" -> "1000425"  [label="CFG: "];
"1000425" -> "1000976"  [label="DDG: "];
}
