digraph "0_mindrot_2fecfd486bdba9f51b3a789277bb0733ca36e1c0@API" {
"1000958" [label="(Call,fprintf(stderr, \"read/plain[%d]:\r\n\", *typep))"];
"1000523" [label="(Call,sshbuf_dump(state->input, stderr))"];
"1000507" [label="(Call,sshbuf_len(state->input))"];
"1000274" [label="(Call,sshbuf_len(state->input))"];
"1000270" [label="(Call,sshbuf_ptr(state->input))"];
"1000438" [label="(Call,sshbuf_consume(state->input, block_size))"];
"1000371" [label="(Call,sshbuf_ptr(state->input))"];
"1000332" [label="(Call,sshbuf_len(state->input))"];
"1000360" [label="(Call,cipher_crypt(&state->receive_context,\n\t\t    state->p_send.seqnr, cp, sshbuf_ptr(state->input),\n\t\t    block_size, 0, 0))"];
"1000347" [label="(Call,sshbuf_reserve(state->incoming_packet, block_size,\n\t\t    &cp))"];
"1000339" [label="(Call,sshbuf_reset(state->incoming_packet))"];
"1000331" [label="(Call,sshbuf_len(state->input) < block_size)"];
"1000221" [label="(Call,block_size = enc ? enc->block_size : 8)"];
"1000520" [label="(Call,fprintf(stderr, \"read_poll enc/full: \"))"];
"1000942" [label="(Call,*typep == SSH2_MSG_USERAUTH_SUCCESS)"];
"1000930" [label="(Call,*typep == SSH2_MSG_NEWKEYS)"];
"1000903" [label="(Call,*typep >= SSH2_MSG_LOCAL_MIN)"];
"1000899" [label="(Call,*typep < SSH2_MSG_MIN)"];
"1000148" [label="(Call,*typep = SSH_MSG_NONE)"];
"1000963" [label="(Call,sshbuf_dump(state->incoming_packet, stderr))"];
"1000296" [label="(Call,sshbuf_dump(state->input, stderr))"];
"1000900" [label="(Call,*typep)"];
"1000566" [label="(Call,sshbuf_reserve(state->incoming_packet, aadlen + need,\n\t    &cp))"];
"1000330" [label="(ControlStructure,if (sshbuf_len(state->input) < block_size))"];
"1000902" [label="(Identifier,SSH2_MSG_MIN)"];
"1000903" [label="(Call,*typep >= SSH2_MSG_LOCAL_MIN)"];
"1000959" [label="(Identifier,stderr)"];
"1000351" [label="(Identifier,block_size)"];
"1000370" [label="(Identifier,cp)"];
"1000967" [label="(Identifier,stderr)"];
"1000331" [label="(Call,sshbuf_len(state->input) < block_size)"];
"1000439" [label="(Call,state->input)"];
"1000906" [label="(Identifier,SSH2_MSG_LOCAL_MIN)"];
"1000340" [label="(Call,state->incoming_packet)"];
"1000276" [label="(Identifier,state)"];
"1000905" [label="(Identifier,typep)"];
"1000345" [label="(Call,r = sshbuf_reserve(state->incoming_packet, block_size,\n\t\t    &cp))"];
"1000943" [label="(Call,*typep)"];
"1000114" [label="(Block,)"];
"1000944" [label="(Identifier,typep)"];
"1000385" [label="(Call,sshbuf_ptr(state->incoming_packet))"];
"1000963" [label="(Call,sshbuf_dump(state->incoming_packet, stderr))"];
"1000581" [label="(Call,cipher_crypt(&state->receive_context, state->p_read.seqnr, cp,\n\t    sshbuf_ptr(state->input), need, aadlen, authlen))"];
"1000929" [label="(ControlStructure,if (*typep == SSH2_MSG_NEWKEYS))"];
"1000344" [label="(Call,(r = sshbuf_reserve(state->incoming_packet, block_size,\n\t\t    &cp)) != 0)"];
"1000948" [label="(Identifier,state)"];
"1000375" [label="(Identifier,block_size)"];
"1000346" [label="(Identifier,r)"];
"1000520" [label="(Call,fprintf(stderr, \"read_poll enc/full: \"))"];
"1000960" [label="(Literal,\"read/plain[%d]:\r\n\")"];
"1000945" [label="(Identifier,SSH2_MSG_USERAUTH_SUCCESS)"];
"1000512" [label="(Identifier,aadlen)"];
"1000275" [label="(Call,state->input)"];
"1000222" [label="(Identifier,block_size)"];
"1000913" [label="(Call,sshpkt_disconnect(ssh,\n\t\t    \"Invalid ssh2 packet type: %d\", *typep))"];
"1000899" [label="(Call,*typep < SSH2_MSG_MIN)"];
"1000274" [label="(Call,sshbuf_len(state->input))"];
"1000442" [label="(Identifier,block_size)"];
"1000376" [label="(Literal,0)"];
"1000473" [label="(Call,debug(\"partial packet: block %d, need %d, maclen %d, authlen %d,\"\n\t    \" aadlen %d\", block_size, need, maclen, authlen, aadlen))"];
"1000341" [label="(Identifier,state)"];
"1000961" [label="(Call,*typep)"];
"1000256" [label="(Call,cipher_get_length(&state->receive_context,\n\t\t    &state->packlen, state->p_read.seqnr,\n\t\t    sshbuf_ptr(state->input), sshbuf_len(state->input)))"];
"1000352" [label="(Call,&cp)"];
"1000507" [label="(Call,sshbuf_len(state->input))"];
"1000550" [label="(Call,sshbuf_ptr(state->input))"];
"1000365" [label="(Call,state->p_send.seqnr)"];
"1000438" [label="(Call,sshbuf_consume(state->input, block_size))"];
"1000336" [label="(Identifier,block_size)"];
"1000935" [label="(Identifier,r)"];
"1000154" [label="(Identifier,state)"];
"1000904" [label="(Call,*typep)"];
"1000270" [label="(Call,sshbuf_ptr(state->input))"];
"1000223" [label="(Call,enc ? enc->block_size : 8)"];
"1000151" [label="(Identifier,SSH_MSG_NONE)"];
"1000347" [label="(Call,sshbuf_reserve(state->incoming_packet, block_size,\n\t\t    &cp))"];
"1000357" [label="(Call,(r = cipher_crypt(&state->receive_context,\n\t\t    state->p_send.seqnr, cp, sshbuf_ptr(state->input),\n\t\t    block_size, 0, 0)) != 0)"];
"1000898" [label="(Call,*typep < SSH2_MSG_MIN || *typep >= SSH2_MSG_LOCAL_MIN)"];
"1000522" [label="(Literal,\"read_poll enc/full: \")"];
"1000530" [label="(Identifier,mac)"];
"1000407" [label="(Call,sshbuf_dump(state->input, stderr))"];
"1000339" [label="(Call,sshbuf_reset(state->incoming_packet))"];
"1000371" [label="(Call,sshbuf_ptr(state->input))"];
"1000149" [label="(Call,*typep)"];
"1000933" [label="(Identifier,SSH2_MSG_NEWKEYS)"];
"1000333" [label="(Call,state->input)"];
"1000964" [label="(Call,state->incoming_packet)"];
"1000329" [label="(Block,)"];
"1000360" [label="(Call,cipher_crypt(&state->receive_context,\n\t\t    state->p_send.seqnr, cp, sshbuf_ptr(state->input),\n\t\t    block_size, 0, 0))"];
"1000931" [label="(Call,*typep)"];
"1000148" [label="(Call,*typep = SSH_MSG_NONE)"];
"1000506" [label="(Call,sshbuf_len(state->input) < aadlen + need + authlen + maclen)"];
"1000338" [label="(Literal,0)"];
"1000361" [label="(Call,&state->receive_context)"];
"1000965" [label="(Identifier,state)"];
"1000372" [label="(Call,state->input)"];
"1000930" [label="(Call,*typep == SSH2_MSG_NEWKEYS)"];
"1000348" [label="(Call,state->incoming_packet)"];
"1000436" [label="(Call,r = sshbuf_consume(state->input, block_size))"];
"1000332" [label="(Call,sshbuf_len(state->input))"];
"1000508" [label="(Call,state->input)"];
"1000527" [label="(Identifier,stderr)"];
"1000467" [label="(Call,state->packlen - block_size)"];
"1000958" [label="(Call,fprintf(stderr, \"read/plain[%d]:\r\n\", *typep))"];
"1000525" [label="(Identifier,state)"];
"1000377" [label="(Literal,0)"];
"1000221" [label="(Call,block_size = enc ? enc->block_size : 8)"];
"1000230" [label="(Identifier,aadlen)"];
"1000523" [label="(Call,sshbuf_dump(state->input, stderr))"];
"1000271" [label="(Call,state->input)"];
"1000942" [label="(Call,*typep == SSH2_MSG_USERAUTH_SUCCESS)"];
"1000976" [label="(MethodReturn,RET)"];
"1000524" [label="(Call,state->input)"];
"1000970" [label="(Identifier,state)"];
"1000941" [label="(Call,*typep == SSH2_MSG_USERAUTH_SUCCESS && !state->server_side)"];
"1000521" [label="(Identifier,stderr)"];
"1000592" [label="(Call,sshbuf_ptr(state->input))"];
"1000890" [label="(Call,sshbuf_get_u8(state->incoming_packet, typep))"];
"1000435" [label="(Call,(r = sshbuf_consume(state->input, block_size)) != 0)"];
"1000358" [label="(Call,r = cipher_crypt(&state->receive_context,\n\t\t    state->p_send.seqnr, cp, sshbuf_ptr(state->input),\n\t\t    block_size, 0, 0))"];
"1000958" -> "1000114"  [label="AST: "];
"1000958" -> "1000961"  [label="CFG: "];
"1000959" -> "1000958"  [label="AST: "];
"1000960" -> "1000958"  [label="AST: "];
"1000961" -> "1000958"  [label="AST: "];
"1000965" -> "1000958"  [label="CFG: "];
"1000958" -> "1000976"  [label="DDG: "];
"1000958" -> "1000976"  [label="DDG: "];
"1000523" -> "1000958"  [label="DDG: "];
"1000942" -> "1000958"  [label="DDG: "];
"1000930" -> "1000958"  [label="DDG: "];
"1000958" -> "1000963"  [label="DDG: "];
"1000523" -> "1000114"  [label="AST: "];
"1000523" -> "1000527"  [label="CFG: "];
"1000524" -> "1000523"  [label="AST: "];
"1000527" -> "1000523"  [label="AST: "];
"1000530" -> "1000523"  [label="CFG: "];
"1000523" -> "1000976"  [label="DDG: "];
"1000523" -> "1000976"  [label="DDG: "];
"1000523" -> "1000976"  [label="DDG: "];
"1000507" -> "1000523"  [label="DDG: "];
"1000520" -> "1000523"  [label="DDG: "];
"1000523" -> "1000550"  [label="DDG: "];
"1000523" -> "1000592"  [label="DDG: "];
"1000507" -> "1000506"  [label="AST: "];
"1000507" -> "1000508"  [label="CFG: "];
"1000508" -> "1000507"  [label="AST: "];
"1000512" -> "1000507"  [label="CFG: "];
"1000507" -> "1000976"  [label="DDG: "];
"1000507" -> "1000506"  [label="DDG: "];
"1000274" -> "1000507"  [label="DDG: "];
"1000438" -> "1000507"  [label="DDG: "];
"1000274" -> "1000256"  [label="AST: "];
"1000274" -> "1000275"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000256" -> "1000274"  [label="CFG: "];
"1000274" -> "1000976"  [label="DDG: "];
"1000274" -> "1000256"  [label="DDG: "];
"1000270" -> "1000274"  [label="DDG: "];
"1000274" -> "1000296"  [label="DDG: "];
"1000270" -> "1000256"  [label="AST: "];
"1000270" -> "1000271"  [label="CFG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000276" -> "1000270"  [label="CFG: "];
"1000270" -> "1000256"  [label="DDG: "];
"1000438" -> "1000436"  [label="AST: "];
"1000438" -> "1000442"  [label="CFG: "];
"1000439" -> "1000438"  [label="AST: "];
"1000442" -> "1000438"  [label="AST: "];
"1000436" -> "1000438"  [label="CFG: "];
"1000438" -> "1000976"  [label="DDG: "];
"1000438" -> "1000976"  [label="DDG: "];
"1000438" -> "1000435"  [label="DDG: "];
"1000438" -> "1000435"  [label="DDG: "];
"1000438" -> "1000436"  [label="DDG: "];
"1000438" -> "1000436"  [label="DDG: "];
"1000371" -> "1000438"  [label="DDG: "];
"1000360" -> "1000438"  [label="DDG: "];
"1000438" -> "1000467"  [label="DDG: "];
"1000438" -> "1000473"  [label="DDG: "];
"1000371" -> "1000360"  [label="AST: "];
"1000371" -> "1000372"  [label="CFG: "];
"1000372" -> "1000371"  [label="AST: "];
"1000375" -> "1000371"  [label="CFG: "];
"1000371" -> "1000976"  [label="DDG: "];
"1000371" -> "1000360"  [label="DDG: "];
"1000332" -> "1000371"  [label="DDG: "];
"1000371" -> "1000407"  [label="DDG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000332" -> "1000333"  [label="CFG: "];
"1000333" -> "1000332"  [label="AST: "];
"1000336" -> "1000332"  [label="CFG: "];
"1000332" -> "1000976"  [label="DDG: "];
"1000332" -> "1000331"  [label="DDG: "];
"1000360" -> "1000358"  [label="AST: "];
"1000360" -> "1000377"  [label="CFG: "];
"1000361" -> "1000360"  [label="AST: "];
"1000365" -> "1000360"  [label="AST: "];
"1000370" -> "1000360"  [label="AST: "];
"1000375" -> "1000360"  [label="AST: "];
"1000376" -> "1000360"  [label="AST: "];
"1000377" -> "1000360"  [label="AST: "];
"1000358" -> "1000360"  [label="CFG: "];
"1000360" -> "1000976"  [label="DDG: "];
"1000360" -> "1000976"  [label="DDG: "];
"1000360" -> "1000976"  [label="DDG: "];
"1000360" -> "1000976"  [label="DDG: "];
"1000360" -> "1000976"  [label="DDG: "];
"1000360" -> "1000357"  [label="DDG: "];
"1000360" -> "1000357"  [label="DDG: "];
"1000360" -> "1000357"  [label="DDG: "];
"1000360" -> "1000357"  [label="DDG: "];
"1000360" -> "1000357"  [label="DDG: "];
"1000360" -> "1000357"  [label="DDG: "];
"1000360" -> "1000358"  [label="DDG: "];
"1000360" -> "1000358"  [label="DDG: "];
"1000360" -> "1000358"  [label="DDG: "];
"1000360" -> "1000358"  [label="DDG: "];
"1000360" -> "1000358"  [label="DDG: "];
"1000360" -> "1000358"  [label="DDG: "];
"1000347" -> "1000360"  [label="DDG: "];
"1000360" -> "1000581"  [label="DDG: "];
"1000360" -> "1000581"  [label="DDG: "];
"1000347" -> "1000345"  [label="AST: "];
"1000347" -> "1000352"  [label="CFG: "];
"1000348" -> "1000347"  [label="AST: "];
"1000351" -> "1000347"  [label="AST: "];
"1000352" -> "1000347"  [label="AST: "];
"1000345" -> "1000347"  [label="CFG: "];
"1000347" -> "1000976"  [label="DDG: "];
"1000347" -> "1000976"  [label="DDG: "];
"1000347" -> "1000976"  [label="DDG: "];
"1000347" -> "1000344"  [label="DDG: "];
"1000347" -> "1000344"  [label="DDG: "];
"1000347" -> "1000344"  [label="DDG: "];
"1000347" -> "1000345"  [label="DDG: "];
"1000347" -> "1000345"  [label="DDG: "];
"1000347" -> "1000345"  [label="DDG: "];
"1000339" -> "1000347"  [label="DDG: "];
"1000331" -> "1000347"  [label="DDG: "];
"1000347" -> "1000385"  [label="DDG: "];
"1000347" -> "1000566"  [label="DDG: "];
"1000339" -> "1000329"  [label="AST: "];
"1000339" -> "1000340"  [label="CFG: "];
"1000340" -> "1000339"  [label="AST: "];
"1000346" -> "1000339"  [label="CFG: "];
"1000339" -> "1000976"  [label="DDG: "];
"1000331" -> "1000330"  [label="AST: "];
"1000331" -> "1000336"  [label="CFG: "];
"1000336" -> "1000331"  [label="AST: "];
"1000338" -> "1000331"  [label="CFG: "];
"1000341" -> "1000331"  [label="CFG: "];
"1000331" -> "1000976"  [label="DDG: "];
"1000331" -> "1000976"  [label="DDG: "];
"1000331" -> "1000976"  [label="DDG: "];
"1000221" -> "1000331"  [label="DDG: "];
"1000221" -> "1000114"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000230" -> "1000221"  [label="CFG: "];
"1000221" -> "1000976"  [label="DDG: "];
"1000221" -> "1000976"  [label="DDG: "];
"1000221" -> "1000467"  [label="DDG: "];
"1000221" -> "1000473"  [label="DDG: "];
"1000520" -> "1000114"  [label="AST: "];
"1000520" -> "1000522"  [label="CFG: "];
"1000521" -> "1000520"  [label="AST: "];
"1000522" -> "1000520"  [label="AST: "];
"1000525" -> "1000520"  [label="CFG: "];
"1000520" -> "1000976"  [label="DDG: "];
"1000942" -> "1000941"  [label="AST: "];
"1000942" -> "1000945"  [label="CFG: "];
"1000943" -> "1000942"  [label="AST: "];
"1000945" -> "1000942"  [label="AST: "];
"1000948" -> "1000942"  [label="CFG: "];
"1000941" -> "1000942"  [label="CFG: "];
"1000942" -> "1000976"  [label="DDG: "];
"1000942" -> "1000941"  [label="DDG: "];
"1000942" -> "1000941"  [label="DDG: "];
"1000930" -> "1000942"  [label="DDG: "];
"1000930" -> "1000929"  [label="AST: "];
"1000930" -> "1000933"  [label="CFG: "];
"1000931" -> "1000930"  [label="AST: "];
"1000933" -> "1000930"  [label="AST: "];
"1000935" -> "1000930"  [label="CFG: "];
"1000944" -> "1000930"  [label="CFG: "];
"1000930" -> "1000976"  [label="DDG: "];
"1000930" -> "1000976"  [label="DDG: "];
"1000903" -> "1000930"  [label="DDG: "];
"1000899" -> "1000930"  [label="DDG: "];
"1000903" -> "1000898"  [label="AST: "];
"1000903" -> "1000906"  [label="CFG: "];
"1000904" -> "1000903"  [label="AST: "];
"1000906" -> "1000903"  [label="AST: "];
"1000898" -> "1000903"  [label="CFG: "];
"1000903" -> "1000976"  [label="DDG: "];
"1000903" -> "1000898"  [label="DDG: "];
"1000903" -> "1000898"  [label="DDG: "];
"1000899" -> "1000903"  [label="DDG: "];
"1000903" -> "1000913"  [label="DDG: "];
"1000899" -> "1000898"  [label="AST: "];
"1000899" -> "1000902"  [label="CFG: "];
"1000900" -> "1000899"  [label="AST: "];
"1000902" -> "1000899"  [label="AST: "];
"1000905" -> "1000899"  [label="CFG: "];
"1000898" -> "1000899"  [label="CFG: "];
"1000899" -> "1000976"  [label="DDG: "];
"1000899" -> "1000898"  [label="DDG: "];
"1000899" -> "1000898"  [label="DDG: "];
"1000148" -> "1000899"  [label="DDG: "];
"1000899" -> "1000913"  [label="DDG: "];
"1000148" -> "1000114"  [label="AST: "];
"1000148" -> "1000151"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000151" -> "1000148"  [label="AST: "];
"1000154" -> "1000148"  [label="CFG: "];
"1000148" -> "1000976"  [label="DDG: "];
"1000148" -> "1000976"  [label="DDG: "];
"1000963" -> "1000114"  [label="AST: "];
"1000963" -> "1000967"  [label="CFG: "];
"1000964" -> "1000963"  [label="AST: "];
"1000967" -> "1000963"  [label="AST: "];
"1000970" -> "1000963"  [label="CFG: "];
"1000963" -> "1000976"  [label="DDG: "];
"1000963" -> "1000976"  [label="DDG: "];
"1000963" -> "1000976"  [label="DDG: "];
"1000890" -> "1000963"  [label="DDG: "];
}
