digraph "0_linux_0048b4837affd153897ed1222283492070027aa9_1@pointer" {
"1000135" [label="(Call,find_first_bit(&bm->word, bm->depth))"];
"1000150" [label="(Call,find_next_bit(&bm->word, bm->depth, bit + 1))"];
"1000135" [label="(Call,find_first_bit(&bm->word, bm->depth))"];
"1000143" [label="(Call,bit < bm->depth)"];
"1000133" [label="(Call,bit = find_first_bit(&bm->word, bm->depth))"];
"1000148" [label="(Call,bit = find_next_bit(&bm->word, bm->depth, bit + 1))"];
"1000158" [label="(Call,bit + 1)"];
"1000164" [label="(Call,blk_mq_tag_to_rq(hctx->tags, off + bit))"];
"1000162" [label="(Call,rq = blk_mq_tag_to_rq(hctx->tags, off + bit))"];
"1000179" [label="(Call,fn(hctx, rq, data, reserved))"];
"1000168" [label="(Call,off + bit)"];
"1000182" [label="(Identifier,data)"];
"1000151" [label="(Call,&bm->word)"];
"1000191" [label="(MethodReturn,static void)"];
"1000143" [label="(Call,bit < bm->depth)"];
"1000180" [label="(Identifier,hctx)"];
"1000155" [label="(Call,bm->depth)"];
"1000171" [label="(ControlStructure,if (rq->q == hctx->queue))"];
"1000140" [label="(Call,bm->depth)"];
"1000165" [label="(Call,hctx->tags)"];
"1000184" [label="(Call,off += (1 << bt->bits_per_word))"];
"1000161" [label="(Block,)"];
"1000164" [label="(Call,blk_mq_tag_to_rq(hctx->tags, off + bit))"];
"1000101" [label="(MethodParameterIn,struct blk_mq_hw_ctx *hctx)"];
"1000136" [label="(Call,&bm->word)"];
"1000148" [label="(Call,bit = find_next_bit(&bm->word, bm->depth, bit + 1))"];
"1000160" [label="(Literal,1)"];
"1000135" [label="(Call,find_first_bit(&bm->word, bm->depth))"];
"1000169" [label="(Identifier,off)"];
"1000183" [label="(Identifier,reserved)"];
"1000133" [label="(Call,bit = find_first_bit(&bm->word, bm->depth))"];
"1000159" [label="(Identifier,bit)"];
"1000162" [label="(Call,rq = blk_mq_tag_to_rq(hctx->tags, off + bit))"];
"1000168" [label="(Call,off + bit)"];
"1000103" [label="(MethodParameterIn,unsigned int off)"];
"1000163" [label="(Identifier,rq)"];
"1000106" [label="(MethodParameterIn,bool reserved)"];
"1000149" [label="(Identifier,bit)"];
"1000179" [label="(Call,fn(hctx, rq, data, reserved))"];
"1000134" [label="(Identifier,bit)"];
"1000132" [label="(ControlStructure,for (bit = find_first_bit(&bm->word, bm->depth);\n \t\t     bit < bm->depth;\n \t\t     bit = find_next_bit(&bm->word, bm->depth, bit + 1)))"];
"1000174" [label="(Identifier,rq)"];
"1000170" [label="(Identifier,bit)"];
"1000145" [label="(Call,bm->depth)"];
"1000150" [label="(Call,find_next_bit(&bm->word, bm->depth, bit + 1))"];
"1000105" [label="(MethodParameterIn,void *data)"];
"1000158" [label="(Call,bit + 1)"];
"1000185" [label="(Identifier,off)"];
"1000181" [label="(Identifier,rq)"];
"1000144" [label="(Identifier,bit)"];
"1000135" -> "1000133"  [label="AST: "];
"1000135" -> "1000140"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000140" -> "1000135"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000135" -> "1000191"  [label="DDG: &bm->word"];
"1000135" -> "1000133"  [label="DDG: &bm->word"];
"1000135" -> "1000133"  [label="DDG: bm->depth"];
"1000150" -> "1000135"  [label="DDG: &bm->word"];
"1000143" -> "1000135"  [label="DDG: bm->depth"];
"1000135" -> "1000143"  [label="DDG: bm->depth"];
"1000135" -> "1000150"  [label="DDG: &bm->word"];
"1000150" -> "1000148"  [label="AST: "];
"1000150" -> "1000158"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000155" -> "1000150"  [label="AST: "];
"1000158" -> "1000150"  [label="AST: "];
"1000148" -> "1000150"  [label="CFG: "];
"1000150" -> "1000191"  [label="DDG: &bm->word"];
"1000150" -> "1000191"  [label="DDG: bit + 1"];
"1000150" -> "1000143"  [label="DDG: bm->depth"];
"1000150" -> "1000148"  [label="DDG: &bm->word"];
"1000150" -> "1000148"  [label="DDG: bm->depth"];
"1000150" -> "1000148"  [label="DDG: bit + 1"];
"1000143" -> "1000150"  [label="DDG: bm->depth"];
"1000143" -> "1000150"  [label="DDG: bit"];
"1000143" -> "1000132"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000145" -> "1000143"  [label="AST: "];
"1000163" -> "1000143"  [label="CFG: "];
"1000185" -> "1000143"  [label="CFG: "];
"1000143" -> "1000191"  [label="DDG: bit"];
"1000143" -> "1000191"  [label="DDG: bit < bm->depth"];
"1000143" -> "1000191"  [label="DDG: bm->depth"];
"1000133" -> "1000143"  [label="DDG: bit"];
"1000148" -> "1000143"  [label="DDG: bit"];
"1000143" -> "1000158"  [label="DDG: bit"];
"1000143" -> "1000164"  [label="DDG: bit"];
"1000143" -> "1000168"  [label="DDG: bit"];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000133"  [label="AST: "];
"1000144" -> "1000133"  [label="CFG: "];
"1000133" -> "1000191"  [label="DDG: find_first_bit(&bm->word, bm->depth)"];
"1000148" -> "1000132"  [label="AST: "];
"1000149" -> "1000148"  [label="AST: "];
"1000144" -> "1000148"  [label="CFG: "];
"1000148" -> "1000191"  [label="DDG: find_next_bit(&bm->word, bm->depth, bit + 1)"];
"1000158" -> "1000160"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000164" -> "1000162"  [label="AST: "];
"1000164" -> "1000168"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000168" -> "1000164"  [label="AST: "];
"1000162" -> "1000164"  [label="CFG: "];
"1000164" -> "1000191"  [label="DDG: off + bit"];
"1000164" -> "1000191"  [label="DDG: hctx->tags"];
"1000164" -> "1000162"  [label="DDG: hctx->tags"];
"1000164" -> "1000162"  [label="DDG: off + bit"];
"1000184" -> "1000164"  [label="DDG: off"];
"1000103" -> "1000164"  [label="DDG: off"];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000162"  [label="AST: "];
"1000174" -> "1000162"  [label="CFG: "];
"1000162" -> "1000191"  [label="DDG: blk_mq_tag_to_rq(hctx->tags, off + bit)"];
"1000162" -> "1000191"  [label="DDG: rq"];
"1000162" -> "1000179"  [label="DDG: rq"];
"1000179" -> "1000171"  [label="AST: "];
"1000179" -> "1000183"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000181" -> "1000179"  [label="AST: "];
"1000182" -> "1000179"  [label="AST: "];
"1000183" -> "1000179"  [label="AST: "];
"1000149" -> "1000179"  [label="CFG: "];
"1000179" -> "1000191"  [label="DDG: rq"];
"1000179" -> "1000191"  [label="DDG: data"];
"1000179" -> "1000191"  [label="DDG: fn(hctx, rq, data, reserved)"];
"1000179" -> "1000191"  [label="DDG: hctx"];
"1000179" -> "1000191"  [label="DDG: reserved"];
"1000101" -> "1000179"  [label="DDG: hctx"];
"1000105" -> "1000179"  [label="DDG: data"];
"1000106" -> "1000179"  [label="DDG: reserved"];
"1000168" -> "1000170"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000184" -> "1000168"  [label="DDG: off"];
"1000103" -> "1000168"  [label="DDG: off"];
}
