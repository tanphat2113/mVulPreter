digraph "0_linux_b22f5126a24b3b2f15448c3f2a254fc10cbc2b92_0@pointer" {
"1000116" [label="(Call,dh = skb_header_pointer(skb, dataoff, sizeof(_dh), &dh))"];
"1000118" [label="(Call,skb_header_pointer(skb, dataoff, sizeof(_dh), &dh))"];
"1000102" [label="(MethodParameterIn,const struct sk_buff *skb)"];
"1000103" [label="(MethodParameterIn,unsigned int dataoff)"];
"1000126" [label="(Call,dh == NULL)"];
"1000125" [label="(Call,BUG_ON(dh == NULL))"];
"1000231" [label="(Call,nf_log_packet(net, nf_ct_l3num(ct), 0, skb, NULL, NULL,\n\t\t\t      NULL, \"%s\", msg))"];
"1000227" [label="(ControlStructure,if (LOG_INVALID(net, IPPROTO_DCCP)))"];
"1000125" [label="(Call,BUG_ON(dh == NULL))"];
"1000238" [label="(Identifier,NULL)"];
"1000239" [label="(Identifier,NULL)"];
"1000105" [label="(Block,)"];
"1000155" [label="(Call,msg = \"nf_ct_dccp: not picking up existing connection \")"];
"1000244" [label="(MethodReturn,static bool)"];
"1000236" [label="(Identifier,skb)"];
"1000123" [label="(Call,&dh)"];
"1000127" [label="(Identifier,dh)"];
"1000228" [label="(Call,LOG_INVALID(net, IPPROTO_DCCP))"];
"1000241" [label="(Identifier,msg)"];
"1000240" [label="(Literal,\"%s\")"];
"1000103" [label="(MethodParameterIn,unsigned int dataoff)"];
"1000126" [label="(Call,dh == NULL)"];
"1000119" [label="(Identifier,skb)"];
"1000162" [label="(Call,msg = \"nf_ct_dccp: invalid state transition \")"];
"1000231" [label="(Call,nf_log_packet(net, nf_ct_l3num(ct), 0, skb, NULL, NULL,\n\t\t\t      NULL, \"%s\", msg))"];
"1000117" [label="(Identifier,dh)"];
"1000130" [label="(Identifier,state)"];
"1000120" [label="(Identifier,dataoff)"];
"1000233" [label="(Call,nf_ct_l3num(ct))"];
"1000237" [label="(Identifier,NULL)"];
"1000121" [label="(Call,sizeof(_dh))"];
"1000116" [label="(Call,dh = skb_header_pointer(skb, dataoff, sizeof(_dh), &dh))"];
"1000102" [label="(MethodParameterIn,const struct sk_buff *skb)"];
"1000128" [label="(Identifier,NULL)"];
"1000243" [label="(Identifier,false)"];
"1000235" [label="(Literal,0)"];
"1000118" [label="(Call,skb_header_pointer(skb, dataoff, sizeof(_dh), &dh))"];
"1000232" [label="(Identifier,net)"];
"1000116" -> "1000105"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000127" -> "1000116"  [label="CFG: "];
"1000116" -> "1000244"  [label="DDG: "];
"1000118" -> "1000116"  [label="DDG: "];
"1000118" -> "1000116"  [label="DDG: "];
"1000118" -> "1000116"  [label="DDG: "];
"1000116" -> "1000126"  [label="DDG: "];
"1000118" -> "1000123"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="AST: "];
"1000121" -> "1000118"  [label="AST: "];
"1000123" -> "1000118"  [label="AST: "];
"1000118" -> "1000244"  [label="DDG: "];
"1000118" -> "1000244"  [label="DDG: "];
"1000118" -> "1000244"  [label="DDG: "];
"1000102" -> "1000118"  [label="DDG: "];
"1000103" -> "1000118"  [label="DDG: "];
"1000118" -> "1000231"  [label="DDG: "];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000244"  [label="DDG: "];
"1000102" -> "1000231"  [label="DDG: "];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000244"  [label="DDG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000128" -> "1000126"  [label="AST: "];
"1000125" -> "1000126"  [label="CFG: "];
"1000126" -> "1000244"  [label="DDG: "];
"1000126" -> "1000244"  [label="DDG: "];
"1000126" -> "1000125"  [label="DDG: "];
"1000126" -> "1000125"  [label="DDG: "];
"1000126" -> "1000231"  [label="DDG: "];
"1000125" -> "1000105"  [label="AST: "];
"1000130" -> "1000125"  [label="CFG: "];
"1000125" -> "1000244"  [label="DDG: "];
"1000125" -> "1000244"  [label="DDG: "];
"1000231" -> "1000227"  [label="AST: "];
"1000231" -> "1000241"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000233" -> "1000231"  [label="AST: "];
"1000235" -> "1000231"  [label="AST: "];
"1000236" -> "1000231"  [label="AST: "];
"1000237" -> "1000231"  [label="AST: "];
"1000238" -> "1000231"  [label="AST: "];
"1000239" -> "1000231"  [label="AST: "];
"1000240" -> "1000231"  [label="AST: "];
"1000241" -> "1000231"  [label="AST: "];
"1000243" -> "1000231"  [label="CFG: "];
"1000231" -> "1000244"  [label="DDG: "];
"1000231" -> "1000244"  [label="DDG: "];
"1000231" -> "1000244"  [label="DDG: "];
"1000231" -> "1000244"  [label="DDG: "];
"1000231" -> "1000244"  [label="DDG: "];
"1000231" -> "1000244"  [label="DDG: "];
"1000228" -> "1000231"  [label="DDG: "];
"1000233" -> "1000231"  [label="DDG: "];
"1000155" -> "1000231"  [label="DDG: "];
"1000162" -> "1000231"  [label="DDG: "];
}
