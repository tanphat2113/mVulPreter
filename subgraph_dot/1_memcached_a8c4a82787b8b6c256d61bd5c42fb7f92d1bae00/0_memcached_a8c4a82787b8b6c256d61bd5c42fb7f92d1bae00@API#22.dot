digraph "0_memcached_a8c4a82787b8b6c256d61bd5c42fb7f92d1bae00@API" {
"1000126" [label="(Call,assert(c != NULL))"];
"1000127" [label="(Call,c != NULL)"];
"1000106" [label="(MethodParameterIn,conn *c)"];
"1000186" [label="(Call,NULL != it)"];
"1000452" [label="(Call,add_iov(c, \"VALUE \", 6))"];
"1000315" [label="(Call,suffix == NULL)"];
"1000129" [label="(Identifier,NULL)"];
"1000422" [label="(Call,add_chunked_item_iovs(c, it, it->nbytes))"];
"1000481" [label="(Call,add_iov(c, ITEM_suffix(it), it->nsuffix + it->nbytes))"];
"1000369" [label="(Call,add_iov(c, ITEM_key(it), it->nkey))"];
"1000173" [label="(Call,item_get(key, nkey, c, DO_UPDATE))"];
"1000756" [label="(MethodReturn,static inline void)"];
"1000128" [label="(Identifier,c)"];
"1000135" [label="(Identifier,key_token)"];
"1000743" [label="(Call,out_of_memory(c, \"SERVER_ERROR out of memory writing get response\"))"];
"1000748" [label="(Call,conn_set_state(c, conn_mwrite))"];
"1000127" [label="(Call,c != NULL)"];
"1000106" [label="(MethodParameterIn,conn *c)"];
"1000325" [label="(Call,out_of_memory(c, \"SERVER_ERROR out of memory making CAS suffix\"))"];
"1000510" [label="(Call,add_chunked_item_iovs(c, it, it->nbytes))"];
"1000394" [label="(Call,add_iov(c, suffix, suffix_len))"];
"1000412" [label="(Call,add_iov(c, ITEM_data(it), it->nbytes))"];
"1000501" [label="(Call,add_iov(c, ITEM_suffix(it), it->nsuffix))"];
"1000126" [label="(Call,assert(c != NULL))"];
"1000383" [label="(Call,add_iov(c, ITEM_suffix(it), it->nsuffix - 2))"];
"1000154" [label="(Call,out_string(c, \"CLIENT_ERROR bad command line format\"))"];
"1000721" [label="(Call,key_token->value != NULL)"];
"1000110" [label="(Block,)"];
"1000728" [label="(Call,add_iov(c, \"END\r\n\", 5))"];
"1000362" [label="(Call,add_iov(c, \"VALUE \", 6))"];
"1000653" [label="(Call,key_token->value != NULL)"];
"1000739" [label="(Call,build_udp_headers(c))"];
"1000458" [label="(Call,add_iov(c, ITEM_key(it), it->nkey))"];
"1000126" -> "1000110"  [label="AST: "];
"1000126" -> "1000127"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000135" -> "1000126"  [label="CFG: "];
"1000126" -> "1000756"  [label="DDG: assert(c != NULL)"];
"1000126" -> "1000756"  [label="DDG: c != NULL"];
"1000127" -> "1000126"  [label="DDG: c"];
"1000127" -> "1000126"  [label="DDG: NULL"];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000127" -> "1000756"  [label="DDG: NULL"];
"1000106" -> "1000127"  [label="DDG: c"];
"1000127" -> "1000154"  [label="DDG: c"];
"1000127" -> "1000173"  [label="DDG: c"];
"1000127" -> "1000186"  [label="DDG: NULL"];
"1000127" -> "1000315"  [label="DDG: NULL"];
"1000127" -> "1000653"  [label="DDG: NULL"];
"1000127" -> "1000721"  [label="DDG: NULL"];
"1000127" -> "1000728"  [label="DDG: c"];
"1000127" -> "1000743"  [label="DDG: c"];
"1000127" -> "1000748"  [label="DDG: c"];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000756"  [label="DDG: c"];
"1000106" -> "1000154"  [label="DDG: c"];
"1000106" -> "1000173"  [label="DDG: c"];
"1000106" -> "1000325"  [label="DDG: c"];
"1000106" -> "1000362"  [label="DDG: c"];
"1000106" -> "1000369"  [label="DDG: c"];
"1000106" -> "1000383"  [label="DDG: c"];
"1000106" -> "1000394"  [label="DDG: c"];
"1000106" -> "1000412"  [label="DDG: c"];
"1000106" -> "1000422"  [label="DDG: c"];
"1000106" -> "1000452"  [label="DDG: c"];
"1000106" -> "1000458"  [label="DDG: c"];
"1000106" -> "1000481"  [label="DDG: c"];
"1000106" -> "1000501"  [label="DDG: c"];
"1000106" -> "1000510"  [label="DDG: c"];
"1000106" -> "1000728"  [label="DDG: c"];
"1000106" -> "1000739"  [label="DDG: c"];
"1000106" -> "1000743"  [label="DDG: c"];
"1000106" -> "1000748"  [label="DDG: c"];
}
