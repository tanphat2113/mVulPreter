digraph "0_optee_os_70697bf3c5dc3d201341b01a1a8e5bc6d2fb48f8_0@pointer" {
"1000325" [label="(Call,TEE_DIGEST_HASH_TO_ALGO(cs->algo))"];
"1000262" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo))"];
"1000323" [label="(Call,hash_algo = TEE_DIGEST_HASH_TO_ALGO(cs->algo))"];
"1000331" [label="(Call,tee_hash_get_digest_size(hash_algo, &hash_size))"];
"1000329" [label="(Call,res = tee_hash_get_digest_size(hash_algo, &hash_size))"];
"1000336" [label="(Call,res != TEE_SUCCESS)"];
"1000385" [label="(Return,return res;)"];
"1000351" [label="(Call,crypto_acipher_dsa_verify(cs->algo, o->attr, data,\n\t\t\t\t\t\tdata_len, sig, sig_len))"];
"1000349" [label="(Call,res = crypto_acipher_dsa_verify(cs->algo, o->attr, data,\n\t\t\t\t\t\tdata_len, sig, sig_len))"];
"1000379" [label="(Call,res = TEE_ERROR_NOT_SUPPORTED)"];
"1000345" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000322" [label="(JumpTarget,case TEE_MAIN_ALGO_DSA:)"];
"1000342" [label="(Identifier,data_len)"];
"1000349" [label="(Call,res = crypto_acipher_dsa_verify(cs->algo, o->attr, data,\n\t\t\t\t\t\tdata_len, sig, sig_len))"];
"1000228" [label="(Call,res != TEE_SUCCESS)"];
"1000330" [label="(Identifier,res)"];
"1000360" [label="(Identifier,sig)"];
"1000288" [label="(Call,res != TEE_SUCCESS)"];
"1000107" [label="(MethodParameterIn,const void *sig)"];
"1000329" [label="(Call,res = tee_hash_get_digest_size(hash_algo, &hash_size))"];
"1000183" [label="(Call,tee_mmu_check_access_rights(utc,\n\t\t\t\t\t  TEE_MEMORY_ACCESS_READ |\n\t\t\t\t\t  TEE_MEMORY_ACCESS_ANY_OWNER,\n\t\t\t\t\t  (uaddr_t)sig, sig_len))"];
"1000363" [label="(JumpTarget,case TEE_MAIN_ALGO_ECDSA:)"];
"1000352" [label="(Call,cs->algo)"];
"1000326" [label="(Call,cs->algo)"];
"1000336" [label="(Call,res != TEE_SUCCESS)"];
"1000335" [label="(ControlStructure,if (res != TEE_SUCCESS))"];
"1000106" [label="(MethodParameterIn,size_t data_len)"];
"1000358" [label="(Identifier,data)"];
"1000359" [label="(Identifier,data_len)"];
"1000105" [label="(MethodParameterIn,const void *data)"];
"1000324" [label="(Identifier,hash_algo)"];
"1000171" [label="(Call,(uaddr_t)data)"];
"1000266" [label="(Block,)"];
"1000351" [label="(Call,crypto_acipher_dsa_verify(cs->algo, o->attr, data,\n\t\t\t\t\t\tdata_len, sig, sig_len))"];
"1000325" [label="(Call,TEE_DIGEST_HASH_TO_ALGO(cs->algo))"];
"1000242" [label="(Call,res != TEE_SUCCESS)"];
"1000378" [label="(JumpTarget,default:)"];
"1000263" [label="(Call,cs->algo)"];
"1000386" [label="(Identifier,res)"];
"1000323" [label="(Call,hash_algo = TEE_DIGEST_HASH_TO_ALGO(cs->algo))"];
"1000261" [label="(ControlStructure,switch (TEE_ALG_GET_MAIN_ALG(cs->algo)))"];
"1000269" [label="(Call,cs->algo != TEE_ALG_RSASSA_PKCS1_V1_5)"];
"1000188" [label="(Call,(uaddr_t)sig)"];
"1000355" [label="(Call,o->attr)"];
"1000307" [label="(Call,res = crypto_acipher_rsassa_verify(cs->algo, o->attr, salt_len,\n\t\t\t\t\t\t   data, data_len, sig,\n\t\t\t\t\t\t   sig_len))"];
"1000337" [label="(Identifier,res)"];
"1000262" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo))"];
"1000362" [label="(ControlStructure,break;)"];
"1000267" [label="(JumpTarget,case TEE_MAIN_ALGO_RSA:)"];
"1000338" [label="(Identifier,TEE_SUCCESS)"];
"1000109" [label="(Block,)"];
"1000108" [label="(MethodParameterIn,size_t sig_len)"];
"1000361" [label="(Identifier,sig_len)"];
"1000387" [label="(MethodReturn,TEE_Result)"];
"1000297" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000350" [label="(Identifier,res)"];
"1000366" [label="(Call,crypto_acipher_ecc_verify(cs->algo, o->attr, data,\n\t\t\t\t\t\tdata_len, sig, sig_len))"];
"1000257" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000341" [label="(Call,data_len > hash_size)"];
"1000385" [label="(Return,return res;)"];
"1000339" [label="(ControlStructure,break;)"];
"1000331" [label="(Call,tee_hash_get_digest_size(hash_algo, &hash_size))"];
"1000332" [label="(Identifier,hash_algo)"];
"1000333" [label="(Call,&hash_size)"];
"1000364" [label="(Call,res = crypto_acipher_ecc_verify(cs->algo, o->attr, data,\n\t\t\t\t\t\tdata_len, sig, sig_len))"];
"1000325" -> "1000323"  [label="AST: "];
"1000325" -> "1000326"  [label="CFG: "];
"1000326" -> "1000325"  [label="AST: "];
"1000323" -> "1000325"  [label="CFG: "];
"1000325" -> "1000387"  [label="DDG: cs->algo"];
"1000325" -> "1000323"  [label="DDG: cs->algo"];
"1000262" -> "1000325"  [label="DDG: cs->algo"];
"1000325" -> "1000351"  [label="DDG: cs->algo"];
"1000262" -> "1000261"  [label="AST: "];
"1000262" -> "1000263"  [label="CFG: "];
"1000263" -> "1000262"  [label="AST: "];
"1000267" -> "1000262"  [label="CFG: "];
"1000322" -> "1000262"  [label="CFG: "];
"1000363" -> "1000262"  [label="CFG: "];
"1000378" -> "1000262"  [label="CFG: "];
"1000262" -> "1000387"  [label="DDG: cs->algo"];
"1000262" -> "1000387"  [label="DDG: TEE_ALG_GET_MAIN_ALG(cs->algo)"];
"1000262" -> "1000269"  [label="DDG: cs->algo"];
"1000262" -> "1000366"  [label="DDG: cs->algo"];
"1000323" -> "1000266"  [label="AST: "];
"1000324" -> "1000323"  [label="AST: "];
"1000330" -> "1000323"  [label="CFG: "];
"1000323" -> "1000387"  [label="DDG: TEE_DIGEST_HASH_TO_ALGO(cs->algo)"];
"1000323" -> "1000331"  [label="DDG: hash_algo"];
"1000331" -> "1000329"  [label="AST: "];
"1000331" -> "1000333"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000333" -> "1000331"  [label="AST: "];
"1000329" -> "1000331"  [label="CFG: "];
"1000331" -> "1000387"  [label="DDG: &hash_size"];
"1000331" -> "1000387"  [label="DDG: hash_algo"];
"1000331" -> "1000329"  [label="DDG: hash_algo"];
"1000331" -> "1000329"  [label="DDG: &hash_size"];
"1000329" -> "1000266"  [label="AST: "];
"1000330" -> "1000329"  [label="AST: "];
"1000337" -> "1000329"  [label="CFG: "];
"1000329" -> "1000387"  [label="DDG: tee_hash_get_digest_size(hash_algo, &hash_size)"];
"1000329" -> "1000336"  [label="DDG: res"];
"1000336" -> "1000335"  [label="AST: "];
"1000336" -> "1000338"  [label="CFG: "];
"1000337" -> "1000336"  [label="AST: "];
"1000338" -> "1000336"  [label="AST: "];
"1000339" -> "1000336"  [label="CFG: "];
"1000342" -> "1000336"  [label="CFG: "];
"1000336" -> "1000387"  [label="DDG: res != TEE_SUCCESS"];
"1000336" -> "1000387"  [label="DDG: TEE_SUCCESS"];
"1000336" -> "1000387"  [label="DDG: res"];
"1000242" -> "1000336"  [label="DDG: TEE_SUCCESS"];
"1000336" -> "1000385"  [label="DDG: res"];
"1000385" -> "1000109"  [label="AST: "];
"1000385" -> "1000386"  [label="CFG: "];
"1000386" -> "1000385"  [label="AST: "];
"1000387" -> "1000385"  [label="CFG: "];
"1000385" -> "1000387"  [label="DDG: <RET>"];
"1000386" -> "1000385"  [label="DDG: res"];
"1000364" -> "1000385"  [label="DDG: res"];
"1000297" -> "1000385"  [label="DDG: res"];
"1000257" -> "1000385"  [label="DDG: res"];
"1000349" -> "1000385"  [label="DDG: res"];
"1000345" -> "1000385"  [label="DDG: res"];
"1000307" -> "1000385"  [label="DDG: res"];
"1000242" -> "1000385"  [label="DDG: res"];
"1000228" -> "1000385"  [label="DDG: res"];
"1000379" -> "1000385"  [label="DDG: res"];
"1000288" -> "1000385"  [label="DDG: res"];
"1000351" -> "1000349"  [label="AST: "];
"1000351" -> "1000361"  [label="CFG: "];
"1000352" -> "1000351"  [label="AST: "];
"1000355" -> "1000351"  [label="AST: "];
"1000358" -> "1000351"  [label="AST: "];
"1000359" -> "1000351"  [label="AST: "];
"1000360" -> "1000351"  [label="AST: "];
"1000361" -> "1000351"  [label="AST: "];
"1000349" -> "1000351"  [label="CFG: "];
"1000351" -> "1000387"  [label="DDG: sig_len"];
"1000351" -> "1000387"  [label="DDG: data"];
"1000351" -> "1000387"  [label="DDG: sig"];
"1000351" -> "1000387"  [label="DDG: cs->algo"];
"1000351" -> "1000387"  [label="DDG: o->attr"];
"1000351" -> "1000387"  [label="DDG: data_len"];
"1000351" -> "1000349"  [label="DDG: cs->algo"];
"1000351" -> "1000349"  [label="DDG: data"];
"1000351" -> "1000349"  [label="DDG: sig"];
"1000351" -> "1000349"  [label="DDG: o->attr"];
"1000351" -> "1000349"  [label="DDG: sig_len"];
"1000351" -> "1000349"  [label="DDG: data_len"];
"1000171" -> "1000351"  [label="DDG: data"];
"1000105" -> "1000351"  [label="DDG: data"];
"1000341" -> "1000351"  [label="DDG: data_len"];
"1000106" -> "1000351"  [label="DDG: data_len"];
"1000188" -> "1000351"  [label="DDG: sig"];
"1000107" -> "1000351"  [label="DDG: sig"];
"1000183" -> "1000351"  [label="DDG: sig_len"];
"1000108" -> "1000351"  [label="DDG: sig_len"];
"1000349" -> "1000266"  [label="AST: "];
"1000350" -> "1000349"  [label="AST: "];
"1000362" -> "1000349"  [label="CFG: "];
"1000349" -> "1000387"  [label="DDG: crypto_acipher_dsa_verify(cs->algo, o->attr, data,\n\t\t\t\t\t\tdata_len, sig, sig_len)"];
"1000349" -> "1000387"  [label="DDG: res"];
}
