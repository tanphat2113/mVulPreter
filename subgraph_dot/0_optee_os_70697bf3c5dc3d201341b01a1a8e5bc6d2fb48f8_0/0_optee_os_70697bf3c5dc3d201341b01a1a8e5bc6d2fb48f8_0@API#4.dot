digraph "0_optee_os_70697bf3c5dc3d201341b01a1a8e5bc6d2fb48f8_0@API" {
"1000213" [label="(Call,malloc(alloc_size))"];
"1000199" [label="(Call,alloc_size = 0)"];
"1000211" [label="(Call,params = malloc(alloc_size))"];
"1000216" [label="(Call,!params)"];
"1000222" [label="(Call,copy_in_attrs(utc, usr_params, num_params, params))"];
"1000220" [label="(Call,res = copy_in_attrs(utc, usr_params, num_params, params))"];
"1000228" [label="(Call,res != TEE_SUCCESS)"];
"1000242" [label="(Call,res != TEE_SUCCESS)"];
"1000288" [label="(Call,res != TEE_SUCCESS)"];
"1000385" [label="(Return,return res;)"];
"1000336" [label="(Call,res != TEE_SUCCESS)"];
"1000234" [label="(Call,tee_obj_get(utc, cs->key1, &o))"];
"1000232" [label="(Call,res = tee_obj_get(utc, cs->key1, &o))"];
"1000303" [label="(Call,pkcs1_get_salt_len(params, num_params,\n\t\t\t\t\t\t      hash_size))"];
"1000301" [label="(Call,salt_len = pkcs1_get_salt_len(params, num_params,\n\t\t\t\t\t\t      hash_size))"];
"1000309" [label="(Call,crypto_acipher_rsassa_verify(cs->algo, o->attr, salt_len,\n\t\t\t\t\t\t   data, data_len, sig,\n\t\t\t\t\t\t   sig_len))"];
"1000307" [label="(Call,res = crypto_acipher_rsassa_verify(cs->algo, o->attr, salt_len,\n\t\t\t\t\t\t   data, data_len, sig,\n\t\t\t\t\t\t   sig_len))"];
"1000383" [label="(Call,free(params))"];
"1000345" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000104" [label="(MethodParameterIn,size_t num_params)"];
"1000225" [label="(Identifier,num_params)"];
"1000281" [label="(Call,res = tee_hash_get_digest_size(hash_algo, &hash_size))"];
"1000234" [label="(Call,tee_obj_get(utc, cs->key1, &o))"];
"1000103" [label="(MethodParameterIn,const struct utee_attribute *usr_params)"];
"1000105" [label="(MethodParameterIn,const void *data)"];
"1000251" [label="(Identifier,o)"];
"1000242" [label="(Call,res != TEE_SUCCESS)"];
"1000219" [label="(Identifier,TEE_ERROR_OUT_OF_MEMORY)"];
"1000116" [label="(Call,salt_len = 0)"];
"1000215" [label="(ControlStructure,if (!params))"];
"1000212" [label="(Identifier,params)"];
"1000188" [label="(Call,(uaddr_t)sig)"];
"1000321" [label="(ControlStructure,break;)"];
"1000226" [label="(Identifier,params)"];
"1000384" [label="(Identifier,params)"];
"1000224" [label="(Identifier,usr_params)"];
"1000320" [label="(Identifier,sig_len)"];
"1000387" [label="(MethodReturn,TEE_Result)"];
"1000243" [label="(Identifier,res)"];
"1000316" [label="(Identifier,salt_len)"];
"1000309" [label="(Call,crypto_acipher_rsassa_verify(cs->algo, o->attr, salt_len,\n\t\t\t\t\t\t   data, data_len, sig,\n\t\t\t\t\t\t   sig_len))"];
"1000222" [label="(Call,copy_in_attrs(utc, usr_params, num_params, params))"];
"1000289" [label="(Identifier,res)"];
"1000193" [label="(Call,res != TEE_SUCCESS)"];
"1000342" [label="(Identifier,data_len)"];
"1000313" [label="(Call,o->attr)"];
"1000216" [label="(Call,!params)"];
"1000107" [label="(MethodParameterIn,const void *sig)"];
"1000239" [label="(Call,&o)"];
"1000319" [label="(Identifier,sig)"];
"1000106" [label="(MethodParameterIn,size_t data_len)"];
"1000220" [label="(Call,res = copy_in_attrs(utc, usr_params, num_params, params))"];
"1000304" [label="(Identifier,params)"];
"1000269" [label="(Call,cs->algo != TEE_ALG_RSASSA_PKCS1_V1_5)"];
"1000227" [label="(ControlStructure,if (res != TEE_SUCCESS))"];
"1000338" [label="(Identifier,TEE_SUCCESS)"];
"1000108" [label="(MethodParameterIn,size_t sig_len)"];
"1000203" [label="(Call,MUL_OVERFLOW(sizeof(TEE_Attribute), num_params, &alloc_size))"];
"1000297" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000383" [label="(Call,free(params))"];
"1000318" [label="(Identifier,data_len)"];
"1000228" [label="(Call,res != TEE_SUCCESS)"];
"1000236" [label="(Call,cs->key1)"];
"1000230" [label="(Identifier,TEE_SUCCESS)"];
"1000277" [label="(Call,TEE_DIGEST_HASH_TO_ALGO(cs->algo))"];
"1000233" [label="(Identifier,res)"];
"1000294" [label="(Identifier,data_len)"];
"1000305" [label="(Identifier,num_params)"];
"1000232" [label="(Call,res = tee_obj_get(utc, cs->key1, &o))"];
"1000335" [label="(ControlStructure,if (res != TEE_SUCCESS))"];
"1000274" [label="(Block,)"];
"1000221" [label="(Identifier,res)"];
"1000245" [label="(ControlStructure,goto out;)"];
"1000171" [label="(Call,(uaddr_t)data)"];
"1000266" [label="(Block,)"];
"1000235" [label="(Identifier,utc)"];
"1000308" [label="(Identifier,res)"];
"1000200" [label="(Identifier,alloc_size)"];
"1000214" [label="(Identifier,alloc_size)"];
"1000307" [label="(Call,res = crypto_acipher_rsassa_verify(cs->algo, o->attr, salt_len,\n\t\t\t\t\t\t   data, data_len, sig,\n\t\t\t\t\t\t   sig_len))"];
"1000244" [label="(Identifier,TEE_SUCCESS)"];
"1000229" [label="(Identifier,res)"];
"1000166" [label="(Call,tee_mmu_check_access_rights(utc,\n\t\t\t\t\t  TEE_MEMORY_ACCESS_READ |\n\t\t\t\t\t  TEE_MEMORY_ACCESS_ANY_OWNER,\n\t\t\t\t\t  (uaddr_t)data, data_len))"];
"1000339" [label="(ControlStructure,break;)"];
"1000293" [label="(Call,data_len != hash_size)"];
"1000306" [label="(Identifier,hash_size)"];
"1000379" [label="(Call,res = TEE_ERROR_NOT_SUPPORTED)"];
"1000241" [label="(ControlStructure,if (res != TEE_SUCCESS))"];
"1000301" [label="(Call,salt_len = pkcs1_get_salt_len(params, num_params,\n\t\t\t\t\t\t      hash_size))"];
"1000223" [label="(Identifier,utc)"];
"1000349" [label="(Call,res = crypto_acipher_dsa_verify(cs->algo, o->attr, data,\n\t\t\t\t\t\tdata_len, sig, sig_len))"];
"1000211" [label="(Call,params = malloc(alloc_size))"];
"1000288" [label="(Call,res != TEE_SUCCESS)"];
"1000183" [label="(Call,tee_mmu_check_access_rights(utc,\n\t\t\t\t\t  TEE_MEMORY_ACCESS_READ |\n\t\t\t\t\t  TEE_MEMORY_ACCESS_ANY_OWNER,\n\t\t\t\t\t  (uaddr_t)sig, sig_len))"];
"1000329" [label="(Call,res = tee_hash_get_digest_size(hash_algo, &hash_size))"];
"1000290" [label="(Identifier,TEE_SUCCESS)"];
"1000317" [label="(Identifier,data)"];
"1000231" [label="(ControlStructure,goto out;)"];
"1000336" [label="(Call,res != TEE_SUCCESS)"];
"1000201" [label="(Literal,0)"];
"1000291" [label="(ControlStructure,break;)"];
"1000310" [label="(Call,cs->algo)"];
"1000303" [label="(Call,pkcs1_get_salt_len(params, num_params,\n\t\t\t\t\t\t      hash_size))"];
"1000199" [label="(Call,alloc_size = 0)"];
"1000205" [label="(Identifier,TEE_Attribute)"];
"1000386" [label="(Identifier,res)"];
"1000337" [label="(Identifier,res)"];
"1000217" [label="(Identifier,params)"];
"1000109" [label="(Block,)"];
"1000213" [label="(Call,malloc(alloc_size))"];
"1000302" [label="(Identifier,salt_len)"];
"1000257" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000385" [label="(Return,return res;)"];
"1000287" [label="(ControlStructure,if (res != TEE_SUCCESS))"];
"1000364" [label="(Call,res = crypto_acipher_ecc_verify(cs->algo, o->attr, data,\n\t\t\t\t\t\tdata_len, sig, sig_len))"];
"1000213" -> "1000211"  [label="AST: "];
"1000213" -> "1000214"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000211" -> "1000213"  [label="CFG: "];
"1000213" -> "1000387"  [label="DDG: alloc_size"];
"1000213" -> "1000211"  [label="DDG: alloc_size"];
"1000199" -> "1000213"  [label="DDG: alloc_size"];
"1000199" -> "1000109"  [label="AST: "];
"1000199" -> "1000201"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000201" -> "1000199"  [label="AST: "];
"1000205" -> "1000199"  [label="CFG: "];
"1000199" -> "1000387"  [label="DDG: alloc_size"];
"1000211" -> "1000109"  [label="AST: "];
"1000212" -> "1000211"  [label="AST: "];
"1000217" -> "1000211"  [label="CFG: "];
"1000211" -> "1000387"  [label="DDG: malloc(alloc_size)"];
"1000211" -> "1000216"  [label="DDG: params"];
"1000216" -> "1000215"  [label="AST: "];
"1000216" -> "1000217"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000219" -> "1000216"  [label="CFG: "];
"1000221" -> "1000216"  [label="CFG: "];
"1000216" -> "1000387"  [label="DDG: !params"];
"1000216" -> "1000387"  [label="DDG: params"];
"1000216" -> "1000222"  [label="DDG: params"];
"1000222" -> "1000220"  [label="AST: "];
"1000222" -> "1000226"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000224" -> "1000222"  [label="AST: "];
"1000225" -> "1000222"  [label="AST: "];
"1000226" -> "1000222"  [label="AST: "];
"1000220" -> "1000222"  [label="CFG: "];
"1000222" -> "1000387"  [label="DDG: num_params"];
"1000222" -> "1000387"  [label="DDG: utc"];
"1000222" -> "1000387"  [label="DDG: usr_params"];
"1000222" -> "1000220"  [label="DDG: utc"];
"1000222" -> "1000220"  [label="DDG: usr_params"];
"1000222" -> "1000220"  [label="DDG: num_params"];
"1000222" -> "1000220"  [label="DDG: params"];
"1000183" -> "1000222"  [label="DDG: utc"];
"1000103" -> "1000222"  [label="DDG: usr_params"];
"1000203" -> "1000222"  [label="DDG: num_params"];
"1000104" -> "1000222"  [label="DDG: num_params"];
"1000222" -> "1000234"  [label="DDG: utc"];
"1000222" -> "1000303"  [label="DDG: params"];
"1000222" -> "1000303"  [label="DDG: num_params"];
"1000222" -> "1000383"  [label="DDG: params"];
"1000220" -> "1000109"  [label="AST: "];
"1000221" -> "1000220"  [label="AST: "];
"1000229" -> "1000220"  [label="CFG: "];
"1000220" -> "1000387"  [label="DDG: copy_in_attrs(utc, usr_params, num_params, params)"];
"1000220" -> "1000228"  [label="DDG: res"];
"1000228" -> "1000227"  [label="AST: "];
"1000228" -> "1000230"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000230" -> "1000228"  [label="AST: "];
"1000231" -> "1000228"  [label="CFG: "];
"1000233" -> "1000228"  [label="CFG: "];
"1000228" -> "1000387"  [label="DDG: res != TEE_SUCCESS"];
"1000228" -> "1000387"  [label="DDG: res"];
"1000228" -> "1000387"  [label="DDG: TEE_SUCCESS"];
"1000193" -> "1000228"  [label="DDG: TEE_SUCCESS"];
"1000228" -> "1000242"  [label="DDG: TEE_SUCCESS"];
"1000228" -> "1000385"  [label="DDG: res"];
"1000242" -> "1000241"  [label="AST: "];
"1000242" -> "1000244"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000244" -> "1000242"  [label="AST: "];
"1000245" -> "1000242"  [label="CFG: "];
"1000251" -> "1000242"  [label="CFG: "];
"1000242" -> "1000387"  [label="DDG: res != TEE_SUCCESS"];
"1000242" -> "1000387"  [label="DDG: TEE_SUCCESS"];
"1000242" -> "1000387"  [label="DDG: res"];
"1000232" -> "1000242"  [label="DDG: res"];
"1000242" -> "1000288"  [label="DDG: TEE_SUCCESS"];
"1000242" -> "1000336"  [label="DDG: TEE_SUCCESS"];
"1000242" -> "1000385"  [label="DDG: res"];
"1000288" -> "1000287"  [label="AST: "];
"1000288" -> "1000290"  [label="CFG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000290" -> "1000288"  [label="AST: "];
"1000291" -> "1000288"  [label="CFG: "];
"1000294" -> "1000288"  [label="CFG: "];
"1000288" -> "1000387"  [label="DDG: TEE_SUCCESS"];
"1000288" -> "1000387"  [label="DDG: res"];
"1000288" -> "1000387"  [label="DDG: res != TEE_SUCCESS"];
"1000281" -> "1000288"  [label="DDG: res"];
"1000288" -> "1000385"  [label="DDG: res"];
"1000385" -> "1000109"  [label="AST: "];
"1000385" -> "1000386"  [label="CFG: "];
"1000386" -> "1000385"  [label="AST: "];
"1000387" -> "1000385"  [label="CFG: "];
"1000385" -> "1000387"  [label="DDG: <RET>"];
"1000386" -> "1000385"  [label="DDG: res"];
"1000364" -> "1000385"  [label="DDG: res"];
"1000297" -> "1000385"  [label="DDG: res"];
"1000257" -> "1000385"  [label="DDG: res"];
"1000349" -> "1000385"  [label="DDG: res"];
"1000345" -> "1000385"  [label="DDG: res"];
"1000307" -> "1000385"  [label="DDG: res"];
"1000336" -> "1000385"  [label="DDG: res"];
"1000379" -> "1000385"  [label="DDG: res"];
"1000336" -> "1000335"  [label="AST: "];
"1000336" -> "1000338"  [label="CFG: "];
"1000337" -> "1000336"  [label="AST: "];
"1000338" -> "1000336"  [label="AST: "];
"1000339" -> "1000336"  [label="CFG: "];
"1000342" -> "1000336"  [label="CFG: "];
"1000336" -> "1000387"  [label="DDG: res != TEE_SUCCESS"];
"1000336" -> "1000387"  [label="DDG: TEE_SUCCESS"];
"1000336" -> "1000387"  [label="DDG: res"];
"1000329" -> "1000336"  [label="DDG: res"];
"1000234" -> "1000232"  [label="AST: "];
"1000234" -> "1000239"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000236" -> "1000234"  [label="AST: "];
"1000239" -> "1000234"  [label="AST: "];
"1000232" -> "1000234"  [label="CFG: "];
"1000234" -> "1000387"  [label="DDG: cs->key1"];
"1000234" -> "1000387"  [label="DDG: &o"];
"1000234" -> "1000387"  [label="DDG: utc"];
"1000234" -> "1000232"  [label="DDG: utc"];
"1000234" -> "1000232"  [label="DDG: cs->key1"];
"1000234" -> "1000232"  [label="DDG: &o"];
"1000232" -> "1000109"  [label="AST: "];
"1000233" -> "1000232"  [label="AST: "];
"1000243" -> "1000232"  [label="CFG: "];
"1000232" -> "1000387"  [label="DDG: tee_obj_get(utc, cs->key1, &o)"];
"1000303" -> "1000301"  [label="AST: "];
"1000303" -> "1000306"  [label="CFG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000305" -> "1000303"  [label="AST: "];
"1000306" -> "1000303"  [label="AST: "];
"1000301" -> "1000303"  [label="CFG: "];
"1000303" -> "1000387"  [label="DDG: num_params"];
"1000303" -> "1000387"  [label="DDG: hash_size"];
"1000303" -> "1000301"  [label="DDG: params"];
"1000303" -> "1000301"  [label="DDG: num_params"];
"1000303" -> "1000301"  [label="DDG: hash_size"];
"1000104" -> "1000303"  [label="DDG: num_params"];
"1000293" -> "1000303"  [label="DDG: hash_size"];
"1000303" -> "1000383"  [label="DDG: params"];
"1000301" -> "1000274"  [label="AST: "];
"1000302" -> "1000301"  [label="AST: "];
"1000308" -> "1000301"  [label="CFG: "];
"1000301" -> "1000387"  [label="DDG: pkcs1_get_salt_len(params, num_params,\n\t\t\t\t\t\t      hash_size)"];
"1000301" -> "1000309"  [label="DDG: salt_len"];
"1000309" -> "1000307"  [label="AST: "];
"1000309" -> "1000320"  [label="CFG: "];
"1000310" -> "1000309"  [label="AST: "];
"1000313" -> "1000309"  [label="AST: "];
"1000316" -> "1000309"  [label="AST: "];
"1000317" -> "1000309"  [label="AST: "];
"1000318" -> "1000309"  [label="AST: "];
"1000319" -> "1000309"  [label="AST: "];
"1000320" -> "1000309"  [label="AST: "];
"1000307" -> "1000309"  [label="CFG: "];
"1000309" -> "1000387"  [label="DDG: cs->algo"];
"1000309" -> "1000387"  [label="DDG: data_len"];
"1000309" -> "1000387"  [label="DDG: salt_len"];
"1000309" -> "1000387"  [label="DDG: o->attr"];
"1000309" -> "1000387"  [label="DDG: sig"];
"1000309" -> "1000387"  [label="DDG: sig_len"];
"1000309" -> "1000387"  [label="DDG: data"];
"1000309" -> "1000307"  [label="DDG: sig"];
"1000309" -> "1000307"  [label="DDG: sig_len"];
"1000309" -> "1000307"  [label="DDG: data"];
"1000309" -> "1000307"  [label="DDG: cs->algo"];
"1000309" -> "1000307"  [label="DDG: o->attr"];
"1000309" -> "1000307"  [label="DDG: salt_len"];
"1000309" -> "1000307"  [label="DDG: data_len"];
"1000277" -> "1000309"  [label="DDG: cs->algo"];
"1000269" -> "1000309"  [label="DDG: cs->algo"];
"1000116" -> "1000309"  [label="DDG: salt_len"];
"1000171" -> "1000309"  [label="DDG: data"];
"1000105" -> "1000309"  [label="DDG: data"];
"1000293" -> "1000309"  [label="DDG: data_len"];
"1000166" -> "1000309"  [label="DDG: data_len"];
"1000106" -> "1000309"  [label="DDG: data_len"];
"1000188" -> "1000309"  [label="DDG: sig"];
"1000107" -> "1000309"  [label="DDG: sig"];
"1000183" -> "1000309"  [label="DDG: sig_len"];
"1000108" -> "1000309"  [label="DDG: sig_len"];
"1000307" -> "1000266"  [label="AST: "];
"1000308" -> "1000307"  [label="AST: "];
"1000321" -> "1000307"  [label="CFG: "];
"1000307" -> "1000387"  [label="DDG: crypto_acipher_rsassa_verify(cs->algo, o->attr, salt_len,\n\t\t\t\t\t\t   data, data_len, sig,\n\t\t\t\t\t\t   sig_len)"];
"1000307" -> "1000387"  [label="DDG: res"];
"1000383" -> "1000109"  [label="AST: "];
"1000383" -> "1000384"  [label="CFG: "];
"1000384" -> "1000383"  [label="AST: "];
"1000386" -> "1000383"  [label="CFG: "];
"1000383" -> "1000387"  [label="DDG: params"];
}
