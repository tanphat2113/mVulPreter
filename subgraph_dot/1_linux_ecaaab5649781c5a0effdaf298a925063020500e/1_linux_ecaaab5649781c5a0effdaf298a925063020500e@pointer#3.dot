digraph "1_linux_ecaaab5649781c5a0effdaf298a925063020500e@pointer" {
"1000103" [label="(MethodParameterIn,struct scatterlist *src)"];
"1000119" [label="(Call,blkcipher_walk_init(&walk, dst, src, nbytes))"];
"1000127" [label="(Call,blkcipher_walk_virt_block(desc, &walk, 64))"];
"1000125" [label="(Call,err = blkcipher_walk_virt_block(desc, &walk, 64))"];
"1000242" [label="(Return,return err;)"];
"1000163" [label="(Call,blkcipher_walk_done(desc, &walk, 0))"];
"1000162" [label="(Return,return blkcipher_walk_done(desc, &walk, 0);)"];
"1000202" [label="(Call,blkcipher_walk_done(desc, &walk, walk.nbytes % 64))"];
"1000200" [label="(Call,err = blkcipher_walk_done(desc, &walk, walk.nbytes % 64))"];
"1000237" [label="(Call,blkcipher_walk_done(desc, &walk, 0))"];
"1000235" [label="(Call,err = blkcipher_walk_done(desc, &walk, 0))"];
"1000139" [label="(Call,walk.nbytes == nbytes)"];
"1000138" [label="(Call,likely(walk.nbytes == nbytes))"];
"1000145" [label="(Call,salsa20_encrypt_bytes(ctx, walk.src.virt.addr,\n\t\t\t\t      walk.dst.virt.addr, nbytes))"];
"1000169" [label="(Call,walk.nbytes >= 64)"];
"1000195" [label="(Call,walk.nbytes % 64)"];
"1000191" [label="(Call,walk.nbytes - (walk.nbytes % 64))"];
"1000175" [label="(Call,salsa20_encrypt_bytes(ctx, walk.src.virt.addr,\n \t\t\t\t      walk.dst.virt.addr,\n\t\t\t\t      walk.nbytes - (walk.nbytes % 64)))"];
"1000216" [label="(Call,salsa20_encrypt_bytes(ctx, walk.src.virt.addr,\n\t\t\t\t      walk.dst.virt.addr, walk.nbytes))"];
"1000206" [label="(Call,walk.nbytes % 64)"];
"1000120" [label="(Call,&walk)"];
"1000204" [label="(Call,&walk)"];
"1000238" [label="(Identifier,desc)"];
"1000124" [label="(Identifier,nbytes)"];
"1000137" [label="(ControlStructure,if (likely(walk.nbytes == nbytes)))"];
"1000171" [label="(Identifier,walk)"];
"1000102" [label="(MethodParameterIn,struct scatterlist *dst)"];
"1000176" [label="(Identifier,ctx)"];
"1000126" [label="(Identifier,err)"];
"1000162" [label="(Return,return blkcipher_walk_done(desc, &walk, 0);)"];
"1000201" [label="(Identifier,err)"];
"1000167" [label="(Literal,0)"];
"1000202" [label="(Call,blkcipher_walk_done(desc, &walk, walk.nbytes % 64))"];
"1000146" [label="(Identifier,ctx)"];
"1000147" [label="(Call,walk.src.virt.addr)"];
"1000129" [label="(Call,&walk)"];
"1000213" [label="(Identifier,walk)"];
"1000184" [label="(Call,walk.dst.virt.addr)"];
"1000165" [label="(Call,&walk)"];
"1000122" [label="(Identifier,dst)"];
"1000164" [label="(Identifier,desc)"];
"1000127" [label="(Call,blkcipher_walk_virt_block(desc, &walk, 64))"];
"1000101" [label="(MethodParameterIn,struct blkcipher_desc *desc)"];
"1000241" [label="(Literal,0)"];
"1000232" [label="(Call,walk.nbytes)"];
"1000175" [label="(Call,salsa20_encrypt_bytes(ctx, walk.src.virt.addr,\n \t\t\t\t      walk.dst.virt.addr,\n\t\t\t\t      walk.nbytes - (walk.nbytes % 64)))"];
"1000192" [label="(Call,walk.nbytes)"];
"1000177" [label="(Call,walk.src.virt.addr)"];
"1000195" [label="(Call,walk.nbytes % 64)"];
"1000119" [label="(Call,blkcipher_walk_init(&walk, dst, src, nbytes))"];
"1000243" [label="(Identifier,err)"];
"1000210" [label="(Literal,64)"];
"1000218" [label="(Call,walk.src.virt.addr)"];
"1000139" [label="(Call,walk.nbytes == nbytes)"];
"1000105" [label="(Block,)"];
"1000216" [label="(Call,salsa20_encrypt_bytes(ctx, walk.src.virt.addr,\n\t\t\t\t      walk.dst.virt.addr, walk.nbytes))"];
"1000125" [label="(Call,err = blkcipher_walk_virt_block(desc, &walk, 64))"];
"1000242" [label="(Return,return err;)"];
"1000163" [label="(Call,blkcipher_walk_done(desc, &walk, 0))"];
"1000161" [label="(Identifier,nbytes)"];
"1000170" [label="(Call,walk.nbytes)"];
"1000143" [label="(Identifier,nbytes)"];
"1000174" [label="(Block,)"];
"1000131" [label="(Literal,64)"];
"1000132" [label="(Call,salsa20_ivsetup(ctx, walk.iv))"];
"1000191" [label="(Call,walk.nbytes - (walk.nbytes % 64))"];
"1000104" [label="(MethodParameterIn,unsigned int nbytes)"];
"1000200" [label="(Call,err = blkcipher_walk_done(desc, &walk, walk.nbytes % 64))"];
"1000128" [label="(Identifier,desc)"];
"1000123" [label="(Identifier,src)"];
"1000133" [label="(Identifier,ctx)"];
"1000173" [label="(Literal,64)"];
"1000138" [label="(Call,likely(walk.nbytes == nbytes))"];
"1000199" [label="(Literal,64)"];
"1000237" [label="(Call,blkcipher_walk_done(desc, &walk, 0))"];
"1000225" [label="(Call,walk.dst.virt.addr)"];
"1000206" [label="(Call,walk.nbytes % 64)"];
"1000140" [label="(Call,walk.nbytes)"];
"1000145" [label="(Call,salsa20_encrypt_bytes(ctx, walk.src.virt.addr,\n\t\t\t\t      walk.dst.virt.addr, nbytes))"];
"1000169" [label="(Call,walk.nbytes >= 64)"];
"1000215" [label="(Block,)"];
"1000103" [label="(MethodParameterIn,struct scatterlist *src)"];
"1000236" [label="(Identifier,err)"];
"1000154" [label="(Call,walk.dst.virt.addr)"];
"1000244" [label="(MethodReturn,static int)"];
"1000203" [label="(Identifier,desc)"];
"1000235" [label="(Call,err = blkcipher_walk_done(desc, &walk, 0))"];
"1000239" [label="(Call,&walk)"];
"1000196" [label="(Call,walk.nbytes)"];
"1000168" [label="(ControlStructure,while (walk.nbytes >= 64))"];
"1000207" [label="(Call,walk.nbytes)"];
"1000217" [label="(Identifier,ctx)"];
"1000144" [label="(Block,)"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000244"  [label="DDG: src"];
"1000103" -> "1000119"  [label="DDG: src"];
"1000119" -> "1000105"  [label="AST: "];
"1000119" -> "1000124"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000122" -> "1000119"  [label="AST: "];
"1000123" -> "1000119"  [label="AST: "];
"1000124" -> "1000119"  [label="AST: "];
"1000126" -> "1000119"  [label="CFG: "];
"1000119" -> "1000244"  [label="DDG: blkcipher_walk_init(&walk, dst, src, nbytes)"];
"1000119" -> "1000244"  [label="DDG: src"];
"1000119" -> "1000244"  [label="DDG: dst"];
"1000102" -> "1000119"  [label="DDG: dst"];
"1000104" -> "1000119"  [label="DDG: nbytes"];
"1000119" -> "1000127"  [label="DDG: &walk"];
"1000119" -> "1000139"  [label="DDG: nbytes"];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1000131"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000131" -> "1000127"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000127" -> "1000244"  [label="DDG: &walk"];
"1000127" -> "1000244"  [label="DDG: desc"];
"1000127" -> "1000125"  [label="DDG: desc"];
"1000127" -> "1000125"  [label="DDG: &walk"];
"1000127" -> "1000125"  [label="DDG: 64"];
"1000101" -> "1000127"  [label="DDG: desc"];
"1000127" -> "1000163"  [label="DDG: desc"];
"1000127" -> "1000163"  [label="DDG: &walk"];
"1000127" -> "1000202"  [label="DDG: desc"];
"1000127" -> "1000202"  [label="DDG: &walk"];
"1000127" -> "1000237"  [label="DDG: desc"];
"1000127" -> "1000237"  [label="DDG: &walk"];
"1000125" -> "1000105"  [label="AST: "];
"1000126" -> "1000125"  [label="AST: "];
"1000133" -> "1000125"  [label="CFG: "];
"1000125" -> "1000244"  [label="DDG: blkcipher_walk_virt_block(desc, &walk, 64)"];
"1000125" -> "1000244"  [label="DDG: err"];
"1000125" -> "1000242"  [label="DDG: err"];
"1000242" -> "1000105"  [label="AST: "];
"1000242" -> "1000243"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000244" -> "1000242"  [label="CFG: "];
"1000242" -> "1000244"  [label="DDG: <RET>"];
"1000243" -> "1000242"  [label="DDG: err"];
"1000200" -> "1000242"  [label="DDG: err"];
"1000235" -> "1000242"  [label="DDG: err"];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000167"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000165" -> "1000163"  [label="AST: "];
"1000167" -> "1000163"  [label="AST: "];
"1000162" -> "1000163"  [label="CFG: "];
"1000163" -> "1000244"  [label="DDG: desc"];
"1000163" -> "1000244"  [label="DDG: blkcipher_walk_done(desc, &walk, 0)"];
"1000163" -> "1000244"  [label="DDG: &walk"];
"1000163" -> "1000162"  [label="DDG: blkcipher_walk_done(desc, &walk, 0)"];
"1000101" -> "1000163"  [label="DDG: desc"];
"1000162" -> "1000144"  [label="AST: "];
"1000244" -> "1000162"  [label="CFG: "];
"1000162" -> "1000244"  [label="DDG: <RET>"];
"1000202" -> "1000200"  [label="AST: "];
"1000202" -> "1000206"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000206" -> "1000202"  [label="AST: "];
"1000200" -> "1000202"  [label="CFG: "];
"1000202" -> "1000244"  [label="DDG: walk.nbytes % 64"];
"1000202" -> "1000244"  [label="DDG: desc"];
"1000202" -> "1000244"  [label="DDG: &walk"];
"1000202" -> "1000200"  [label="DDG: desc"];
"1000202" -> "1000200"  [label="DDG: &walk"];
"1000202" -> "1000200"  [label="DDG: walk.nbytes % 64"];
"1000101" -> "1000202"  [label="DDG: desc"];
"1000206" -> "1000202"  [label="DDG: walk.nbytes"];
"1000206" -> "1000202"  [label="DDG: 64"];
"1000202" -> "1000237"  [label="DDG: desc"];
"1000202" -> "1000237"  [label="DDG: &walk"];
"1000200" -> "1000174"  [label="AST: "];
"1000201" -> "1000200"  [label="AST: "];
"1000171" -> "1000200"  [label="CFG: "];
"1000200" -> "1000244"  [label="DDG: err"];
"1000200" -> "1000244"  [label="DDG: blkcipher_walk_done(desc, &walk, walk.nbytes % 64)"];
"1000237" -> "1000235"  [label="AST: "];
"1000237" -> "1000241"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000239" -> "1000237"  [label="AST: "];
"1000241" -> "1000237"  [label="AST: "];
"1000235" -> "1000237"  [label="CFG: "];
"1000237" -> "1000244"  [label="DDG: &walk"];
"1000237" -> "1000244"  [label="DDG: desc"];
"1000237" -> "1000235"  [label="DDG: desc"];
"1000237" -> "1000235"  [label="DDG: &walk"];
"1000237" -> "1000235"  [label="DDG: 0"];
"1000101" -> "1000237"  [label="DDG: desc"];
"1000235" -> "1000215"  [label="AST: "];
"1000236" -> "1000235"  [label="AST: "];
"1000243" -> "1000235"  [label="CFG: "];
"1000235" -> "1000244"  [label="DDG: blkcipher_walk_done(desc, &walk, 0)"];
"1000235" -> "1000244"  [label="DDG: err"];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000143"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000143" -> "1000139"  [label="AST: "];
"1000138" -> "1000139"  [label="CFG: "];
"1000139" -> "1000244"  [label="DDG: walk.nbytes"];
"1000139" -> "1000244"  [label="DDG: nbytes"];
"1000139" -> "1000138"  [label="DDG: walk.nbytes"];
"1000139" -> "1000138"  [label="DDG: nbytes"];
"1000104" -> "1000139"  [label="DDG: nbytes"];
"1000139" -> "1000145"  [label="DDG: nbytes"];
"1000139" -> "1000169"  [label="DDG: walk.nbytes"];
"1000138" -> "1000137"  [label="AST: "];
"1000146" -> "1000138"  [label="CFG: "];
"1000171" -> "1000138"  [label="CFG: "];
"1000138" -> "1000244"  [label="DDG: walk.nbytes == nbytes"];
"1000138" -> "1000244"  [label="DDG: likely(walk.nbytes == nbytes)"];
"1000145" -> "1000144"  [label="AST: "];
"1000145" -> "1000161"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000154" -> "1000145"  [label="AST: "];
"1000161" -> "1000145"  [label="AST: "];
"1000164" -> "1000145"  [label="CFG: "];
"1000145" -> "1000244"  [label="DDG: walk.dst.virt.addr"];
"1000145" -> "1000244"  [label="DDG: salsa20_encrypt_bytes(ctx, walk.src.virt.addr,\n\t\t\t\t      walk.dst.virt.addr, nbytes)"];
"1000145" -> "1000244"  [label="DDG: ctx"];
"1000145" -> "1000244"  [label="DDG: walk.src.virt.addr"];
"1000145" -> "1000244"  [label="DDG: nbytes"];
"1000132" -> "1000145"  [label="DDG: ctx"];
"1000104" -> "1000145"  [label="DDG: nbytes"];
"1000169" -> "1000168"  [label="AST: "];
"1000169" -> "1000173"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000173" -> "1000169"  [label="AST: "];
"1000176" -> "1000169"  [label="CFG: "];
"1000213" -> "1000169"  [label="CFG: "];
"1000169" -> "1000244"  [label="DDG: walk.nbytes >= 64"];
"1000169" -> "1000244"  [label="DDG: walk.nbytes"];
"1000206" -> "1000169"  [label="DDG: walk.nbytes"];
"1000169" -> "1000195"  [label="DDG: walk.nbytes"];
"1000169" -> "1000216"  [label="DDG: walk.nbytes"];
"1000195" -> "1000191"  [label="AST: "];
"1000195" -> "1000199"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000199" -> "1000195"  [label="AST: "];
"1000191" -> "1000195"  [label="CFG: "];
"1000195" -> "1000191"  [label="DDG: walk.nbytes"];
"1000195" -> "1000191"  [label="DDG: 64"];
"1000191" -> "1000175"  [label="AST: "];
"1000192" -> "1000191"  [label="AST: "];
"1000175" -> "1000191"  [label="CFG: "];
"1000191" -> "1000175"  [label="DDG: walk.nbytes"];
"1000191" -> "1000175"  [label="DDG: walk.nbytes % 64"];
"1000191" -> "1000206"  [label="DDG: walk.nbytes"];
"1000175" -> "1000174"  [label="AST: "];
"1000176" -> "1000175"  [label="AST: "];
"1000177" -> "1000175"  [label="AST: "];
"1000184" -> "1000175"  [label="AST: "];
"1000201" -> "1000175"  [label="CFG: "];
"1000175" -> "1000244"  [label="DDG: ctx"];
"1000175" -> "1000244"  [label="DDG: salsa20_encrypt_bytes(ctx, walk.src.virt.addr,\n \t\t\t\t      walk.dst.virt.addr,\n\t\t\t\t      walk.nbytes - (walk.nbytes % 64))"];
"1000175" -> "1000244"  [label="DDG: walk.dst.virt.addr"];
"1000175" -> "1000244"  [label="DDG: walk.nbytes - (walk.nbytes % 64)"];
"1000175" -> "1000244"  [label="DDG: walk.src.virt.addr"];
"1000132" -> "1000175"  [label="DDG: ctx"];
"1000175" -> "1000216"  [label="DDG: ctx"];
"1000175" -> "1000216"  [label="DDG: walk.src.virt.addr"];
"1000175" -> "1000216"  [label="DDG: walk.dst.virt.addr"];
"1000216" -> "1000215"  [label="AST: "];
"1000216" -> "1000232"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000218" -> "1000216"  [label="AST: "];
"1000225" -> "1000216"  [label="AST: "];
"1000232" -> "1000216"  [label="AST: "];
"1000236" -> "1000216"  [label="CFG: "];
"1000216" -> "1000244"  [label="DDG: walk.dst.virt.addr"];
"1000216" -> "1000244"  [label="DDG: walk.nbytes"];
"1000216" -> "1000244"  [label="DDG: salsa20_encrypt_bytes(ctx, walk.src.virt.addr,\n\t\t\t\t      walk.dst.virt.addr, walk.nbytes)"];
"1000216" -> "1000244"  [label="DDG: ctx"];
"1000216" -> "1000244"  [label="DDG: walk.src.virt.addr"];
"1000132" -> "1000216"  [label="DDG: ctx"];
"1000206" -> "1000210"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000210" -> "1000206"  [label="AST: "];
}
