digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_18@pointer" {
"1000328" [label="(Call,udp_sendmsg(sk, msg, len))"];
"1000322" [label="(Call,__ipv6_only_sock(sk))"];
"1000192" [label="(Call,IS_UDPLITE(sk))"];
"1000128" [label="(Call,inet6_sk(sk))"];
"1000123" [label="(Call,inet_sk(sk))"];
"1000118" [label="(Call,udp_sk(sk))"];
"1000110" [label="(MethodParameterIn,struct sock *sk)"];
"1000111" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000112" [label="(MethodParameterIn,size_t len)"];
"1000327" [label="(Return,return udp_sendmsg(sk, msg, len);)"];
"1000327" [label="(Return,return udp_sendmsg(sk, msg, len);)"];
"1000278" [label="(Block,)"];
"1000121" [label="(Call,*inet = inet_sk(sk))"];
"1000326" [label="(Identifier,ENETUNREACH)"];
"1000126" [label="(Call,*np = inet6_sk(sk))"];
"1000330" [label="(Identifier,msg)"];
"1000321" [label="(ControlStructure,if (__ipv6_only_sock(sk)))"];
"1000128" [label="(Call,inet6_sk(sk))"];
"1000938" [label="(Call,udp_v6_flush_pending_frames(sk))"];
"1000331" [label="(Identifier,len)"];
"1001020" [label="(Call,sock_net(sk))"];
"1000380" [label="(Call,release_sock(sk))"];
"1000111" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000837" [label="(Call,ip6_make_skb(sk, getfrag, msg, ulen,\n\t\t\t\t   sizeof(struct udphdr), hlimit, tclass, opt,\n\t\t\t\t   &fl6, (struct rt6_info *)dst,\n\t\t\t\t   msg->msg_flags, dontfrag))"];
"1000323" [label="(Identifier,sk)"];
"1000110" [label="(MethodParameterIn,struct sock *sk)"];
"1000871" [label="(Call,lock_sock(sk))"];
"1000190" [label="(Call,is_udplite = IS_UDPLITE(sk))"];
"1000119" [label="(Identifier,sk)"];
"1000118" [label="(Call,udp_sk(sk))"];
"1000449" [label="(Call,fl6_sock_lookup(sk, fl6.flowlabel))"];
"1000589" [label="(Call,ip6_datagram_send_ctl(sock_net(sk), sk, msg, &fl6, opt,\n\t\t\t\t\t    &hlimit, &tclass, &dontfrag))"];
"1000879" [label="(Call,release_sock(sk))"];
"1000124" [label="(Identifier,sk)"];
"1000129" [label="(Identifier,sk)"];
"1000344" [label="(Call,len > INT_MAX - sizeof(struct udphdr))"];
"1000112" [label="(MethodParameterIn,size_t len)"];
"1000322" [label="(Call,__ipv6_only_sock(sk))"];
"1001043" [label="(MethodReturn,int)"];
"1000116" [label="(Call,*up = udp_sk(sk))"];
"1000329" [label="(Identifier,sk)"];
"1000946" [label="(Call,udp_v6_push_pending_frames(sk))"];
"1000154" [label="(Call,ulen = len)"];
"1001030" [label="(Call,!(msg->msg_flags&MSG_PROBE) || len)"];
"1000192" [label="(Call,IS_UDPLITE(sk))"];
"1000974" [label="(Call,release_sock(sk))"];
"1001002" [label="(Return,return len;)"];
"1000778" [label="(Call,security_sk_classify_flow(sk, flowi6_to_flowi(&fl6)))"];
"1000339" [label="(Call,udp_sendmsg(sk, msg, len))"];
"1000910" [label="(Call,ip6_append_data(sk, getfrag, msg, ulen,\n\t\tsizeof(struct udphdr), hlimit, tclass, opt, &fl6,\n\t\t(struct rt6_info *)dst,\n\t\tcorkreq ? msg->msg_flags|MSG_MORE : msg->msg_flags, dontfrag))"];
"1000328" [label="(Call,udp_sendmsg(sk, msg, len))"];
"1000193" [label="(Identifier,sk)"];
"1000389" [label="(Call,release_sock(sk))"];
"1000123" [label="(Call,inet_sk(sk))"];
"1000624" [label="(Call,fl6_sock_lookup(sk, fl6.flowlabel))"];
"1000590" [label="(Call,sock_net(sk))"];
"1000785" [label="(Call,ip6_sk_dst_lookup_flow(sk, &fl6, final_p))"];
"1000364" [label="(Call,lock_sock(sk))"];
"1000328" -> "1000327"  [label="AST: "];
"1000328" -> "1000331"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000330" -> "1000328"  [label="AST: "];
"1000331" -> "1000328"  [label="AST: "];
"1000327" -> "1000328"  [label="CFG: "];
"1000328" -> "1001043"  [label="DDG: len"];
"1000328" -> "1001043"  [label="DDG: udp_sendmsg(sk, msg, len)"];
"1000328" -> "1001043"  [label="DDG: sk"];
"1000328" -> "1001043"  [label="DDG: msg"];
"1000328" -> "1000327"  [label="DDG: udp_sendmsg(sk, msg, len)"];
"1000322" -> "1000328"  [label="DDG: sk"];
"1000110" -> "1000328"  [label="DDG: sk"];
"1000111" -> "1000328"  [label="DDG: msg"];
"1000112" -> "1000328"  [label="DDG: len"];
"1000322" -> "1000321"  [label="AST: "];
"1000322" -> "1000323"  [label="CFG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000326" -> "1000322"  [label="CFG: "];
"1000329" -> "1000322"  [label="CFG: "];
"1000322" -> "1001043"  [label="DDG: __ipv6_only_sock(sk)"];
"1000322" -> "1001043"  [label="DDG: sk"];
"1000192" -> "1000322"  [label="DDG: sk"];
"1000110" -> "1000322"  [label="DDG: sk"];
"1000192" -> "1000190"  [label="AST: "];
"1000192" -> "1000193"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000190" -> "1000192"  [label="CFG: "];
"1000192" -> "1001043"  [label="DDG: sk"];
"1000192" -> "1000190"  [label="DDG: sk"];
"1000128" -> "1000192"  [label="DDG: sk"];
"1000110" -> "1000192"  [label="DDG: sk"];
"1000192" -> "1000339"  [label="DDG: sk"];
"1000192" -> "1000364"  [label="DDG: sk"];
"1000192" -> "1000449"  [label="DDG: sk"];
"1000192" -> "1000590"  [label="DDG: sk"];
"1000192" -> "1000778"  [label="DDG: sk"];
"1000128" -> "1000126"  [label="AST: "];
"1000128" -> "1000129"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000128" -> "1000126"  [label="DDG: sk"];
"1000123" -> "1000128"  [label="DDG: sk"];
"1000110" -> "1000128"  [label="DDG: sk"];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000123" -> "1000121"  [label="DDG: sk"];
"1000118" -> "1000123"  [label="DDG: sk"];
"1000110" -> "1000123"  [label="DDG: sk"];
"1000118" -> "1000116"  [label="AST: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000118" -> "1000116"  [label="DDG: sk"];
"1000110" -> "1000118"  [label="DDG: sk"];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1001043"  [label="DDG: sk"];
"1000110" -> "1000339"  [label="DDG: sk"];
"1000110" -> "1000364"  [label="DDG: sk"];
"1000110" -> "1000380"  [label="DDG: sk"];
"1000110" -> "1000389"  [label="DDG: sk"];
"1000110" -> "1000449"  [label="DDG: sk"];
"1000110" -> "1000590"  [label="DDG: sk"];
"1000110" -> "1000589"  [label="DDG: sk"];
"1000110" -> "1000624"  [label="DDG: sk"];
"1000110" -> "1000778"  [label="DDG: sk"];
"1000110" -> "1000785"  [label="DDG: sk"];
"1000110" -> "1000837"  [label="DDG: sk"];
"1000110" -> "1000871"  [label="DDG: sk"];
"1000110" -> "1000879"  [label="DDG: sk"];
"1000110" -> "1000910"  [label="DDG: sk"];
"1000110" -> "1000938"  [label="DDG: sk"];
"1000110" -> "1000946"  [label="DDG: sk"];
"1000110" -> "1000974"  [label="DDG: sk"];
"1000110" -> "1001020"  [label="DDG: sk"];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1001043"  [label="DDG: msg"];
"1000111" -> "1000339"  [label="DDG: msg"];
"1000111" -> "1000589"  [label="DDG: msg"];
"1000111" -> "1000837"  [label="DDG: msg"];
"1000111" -> "1000910"  [label="DDG: msg"];
"1000112" -> "1000109"  [label="AST: "];
"1000112" -> "1001043"  [label="DDG: len"];
"1000112" -> "1000154"  [label="DDG: len"];
"1000112" -> "1000339"  [label="DDG: len"];
"1000112" -> "1000344"  [label="DDG: len"];
"1000112" -> "1001002"  [label="DDG: len"];
"1000112" -> "1001030"  [label="DDG: len"];
"1000327" -> "1000278"  [label="AST: "];
"1001043" -> "1000327"  [label="CFG: "];
"1000327" -> "1001043"  [label="DDG: <RET>"];
}
