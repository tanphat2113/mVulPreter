digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_18@API" {
"1000480" [label="(Call,addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000481" [label="(Call,addr_len >= sizeof(struct sockaddr_in6))"];
"1000208" [label="(Call,addr_len < SIN6_LEN_RFC2133)"];
"1000235" [label="(Call,addr_len = 0)"];
"1000148" [label="(Call,addr_len = msg->msg_namelen)"];
"1000485" [label="(Call,sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000489" [label="(Call,__ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000490" [label="(Call,__ipv6_addr_type(daddr))"];
"1000467" [label="(Call,ipv6_addr_equal(daddr, &sk->sk_v6_daddr))"];
"1000420" [label="(Call,daddr = &sin6->sin6_addr)"];
"1000473" [label="(Call,daddr = &sk->sk_v6_daddr)"];
"1000481" [label="(Call,addr_len >= sizeof(struct sockaddr_in6))"];
"1000482" [label="(Identifier,addr_len)"];
"1000467" [label="(Call,ipv6_addr_equal(daddr, &sk->sk_v6_daddr))"];
"1000486" [label="(Call,sin6->sin6_scope_id)"];
"1000490" [label="(Call,__ipv6_addr_type(daddr))"];
"1000491" [label="(Identifier,daddr)"];
"1000475" [label="(Call,&sk->sk_v6_daddr)"];
"1000473" [label="(Call,daddr = &sk->sk_v6_daddr)"];
"1000422" [label="(Call,&sin6->sin6_addr)"];
"1000215" [label="(Identifier,daddr)"];
"1000483" [label="(Call,sizeof(struct sockaddr_in6))"];
"1000487" [label="(Identifier,sin6)"];
"1000155" [label="(Identifier,ulen)"];
"1000213" [label="(Identifier,EINVAL)"];
"1000485" [label="(Call,sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000210" [label="(Identifier,SIN6_LEN_RFC2133)"];
"1000113" [label="(Block,)"];
"1000480" [label="(Call,addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000474" [label="(Identifier,daddr)"];
"1000468" [label="(Identifier,daddr)"];
"1000536" [label="(Identifier,fl6)"];
"1000479" [label="(ControlStructure,if (addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))))"];
"1000494" [label="(Identifier,fl6)"];
"1000148" [label="(Call,addr_len = msg->msg_namelen)"];
"1000492" [label="(Call,fl6.flowi6_oif = sin6->sin6_scope_id)"];
"1000460" [label="(ControlStructure,if (sk->sk_state == TCP_ESTABLISHED &&\n\t\t    ipv6_addr_equal(daddr, &sk->sk_v6_daddr)))"];
"1000237" [label="(Literal,0)"];
"1000207" [label="(ControlStructure,if (addr_len < SIN6_LEN_RFC2133))"];
"1000489" [label="(Call,__ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000461" [label="(Call,sk->sk_state == TCP_ESTABLISHED &&\n\t\t    ipv6_addr_equal(daddr, &sk->sk_v6_daddr))"];
"1000421" [label="(Identifier,daddr)"];
"1000235" [label="(Call,addr_len = 0)"];
"1001043" [label="(MethodReturn,int)"];
"1000428" [label="(Identifier,np)"];
"1000149" [label="(Identifier,addr_len)"];
"1000420" [label="(Call,daddr = &sin6->sin6_addr)"];
"1000231" [label="(Call,msg->msg_namelen = addr_len = 0)"];
"1000469" [label="(Call,&sk->sk_v6_daddr)"];
"1000209" [label="(Identifier,addr_len)"];
"1000150" [label="(Call,msg->msg_namelen)"];
"1000208" [label="(Call,addr_len < SIN6_LEN_RFC2133)"];
"1000403" [label="(Block,)"];
"1000236" [label="(Identifier,addr_len)"];
"1000685" [label="(Call,ipv6_addr_any(daddr))"];
"1000480" -> "1000479"  [label="AST: "];
"1000480" -> "1000481"  [label="CFG: "];
"1000480" -> "1000485"  [label="CFG: "];
"1000481" -> "1000480"  [label="AST: "];
"1000485" -> "1000480"  [label="AST: "];
"1000494" -> "1000480"  [label="CFG: "];
"1000536" -> "1000480"  [label="CFG: "];
"1000480" -> "1001043"  [label="DDG: addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
"1000480" -> "1001043"  [label="DDG: addr_len >= sizeof(struct sockaddr_in6)"];
"1000480" -> "1001043"  [label="DDG: sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
"1000481" -> "1000480"  [label="DDG: addr_len"];
"1000485" -> "1000480"  [label="DDG: sin6->sin6_scope_id"];
"1000485" -> "1000480"  [label="DDG: __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
"1000481" -> "1000483"  [label="CFG: "];
"1000482" -> "1000481"  [label="AST: "];
"1000483" -> "1000481"  [label="AST: "];
"1000487" -> "1000481"  [label="CFG: "];
"1000481" -> "1001043"  [label="DDG: addr_len"];
"1000208" -> "1000481"  [label="DDG: addr_len"];
"1000235" -> "1000481"  [label="DDG: addr_len"];
"1000148" -> "1000481"  [label="DDG: addr_len"];
"1000208" -> "1000207"  [label="AST: "];
"1000208" -> "1000210"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000210" -> "1000208"  [label="AST: "];
"1000213" -> "1000208"  [label="CFG: "];
"1000215" -> "1000208"  [label="CFG: "];
"1000208" -> "1001043"  [label="DDG: addr_len"];
"1000208" -> "1001043"  [label="DDG: SIN6_LEN_RFC2133"];
"1000208" -> "1001043"  [label="DDG: addr_len < SIN6_LEN_RFC2133"];
"1000235" -> "1000231"  [label="AST: "];
"1000235" -> "1000237"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="AST: "];
"1000231" -> "1000235"  [label="CFG: "];
"1000235" -> "1001043"  [label="DDG: addr_len"];
"1000235" -> "1000231"  [label="DDG: addr_len"];
"1000148" -> "1000113"  [label="AST: "];
"1000148" -> "1000150"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000150" -> "1000148"  [label="AST: "];
"1000155" -> "1000148"  [label="CFG: "];
"1000148" -> "1001043"  [label="DDG: addr_len"];
"1000148" -> "1001043"  [label="DDG: msg->msg_namelen"];
"1000485" -> "1000486"  [label="CFG: "];
"1000485" -> "1000489"  [label="CFG: "];
"1000486" -> "1000485"  [label="AST: "];
"1000489" -> "1000485"  [label="AST: "];
"1000485" -> "1001043"  [label="DDG: sin6->sin6_scope_id"];
"1000485" -> "1001043"  [label="DDG: __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
"1000489" -> "1000485"  [label="DDG: __ipv6_addr_type(daddr)"];
"1000485" -> "1000492"  [label="DDG: sin6->sin6_scope_id"];
"1000489" -> "1000490"  [label="CFG: "];
"1000490" -> "1000489"  [label="AST: "];
"1000489" -> "1001043"  [label="DDG: __ipv6_addr_type(daddr)"];
"1000490" -> "1000489"  [label="DDG: daddr"];
"1000490" -> "1000491"  [label="CFG: "];
"1000491" -> "1000490"  [label="AST: "];
"1000490" -> "1001043"  [label="DDG: daddr"];
"1000467" -> "1000490"  [label="DDG: daddr"];
"1000473" -> "1000490"  [label="DDG: daddr"];
"1000420" -> "1000490"  [label="DDG: daddr"];
"1000490" -> "1000685"  [label="DDG: daddr"];
"1000467" -> "1000461"  [label="AST: "];
"1000467" -> "1000469"  [label="CFG: "];
"1000468" -> "1000467"  [label="AST: "];
"1000469" -> "1000467"  [label="AST: "];
"1000461" -> "1000467"  [label="CFG: "];
"1000467" -> "1001043"  [label="DDG: daddr"];
"1000467" -> "1001043"  [label="DDG: &sk->sk_v6_daddr"];
"1000467" -> "1000461"  [label="DDG: daddr"];
"1000467" -> "1000461"  [label="DDG: &sk->sk_v6_daddr"];
"1000420" -> "1000467"  [label="DDG: daddr"];
"1000467" -> "1000473"  [label="DDG: &sk->sk_v6_daddr"];
"1000467" -> "1000685"  [label="DDG: daddr"];
"1000420" -> "1000403"  [label="AST: "];
"1000420" -> "1000422"  [label="CFG: "];
"1000421" -> "1000420"  [label="AST: "];
"1000422" -> "1000420"  [label="AST: "];
"1000428" -> "1000420"  [label="CFG: "];
"1000420" -> "1001043"  [label="DDG: &sin6->sin6_addr"];
"1000420" -> "1001043"  [label="DDG: daddr"];
"1000420" -> "1000685"  [label="DDG: daddr"];
"1000473" -> "1000460"  [label="AST: "];
"1000473" -> "1000475"  [label="CFG: "];
"1000474" -> "1000473"  [label="AST: "];
"1000475" -> "1000473"  [label="AST: "];
"1000482" -> "1000473"  [label="CFG: "];
"1000473" -> "1001043"  [label="DDG: daddr"];
"1000473" -> "1001043"  [label="DDG: &sk->sk_v6_daddr"];
"1000473" -> "1000685"  [label="DDG: daddr"];
}
