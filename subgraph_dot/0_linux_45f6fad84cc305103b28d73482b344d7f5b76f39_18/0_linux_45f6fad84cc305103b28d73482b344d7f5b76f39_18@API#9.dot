digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_18@API" {
"1000658" [label="(Call,opt_to_free = opt)"];
"1000654" [label="(Call,opt = txopt_get(np))"];
"1000656" [label="(Call,txopt_get(np))"];
"1000126" [label="(Call,*np = inet6_sk(sk))"];
"1000128" [label="(Call,inet6_sk(sk))"];
"1000123" [label="(Call,inet_sk(sk))"];
"1000118" [label="(Call,udp_sk(sk))"];
"1000110" [label="(MethodParameterIn,struct sock *sk)"];
"1000997" [label="(Call,txopt_put(opt_to_free))"];
"1000658" [label="(Call,opt_to_free = opt)"];
"1000121" [label="(Call,*inet = inet_sk(sk))"];
"1000126" [label="(Call,*np = inet6_sk(sk))"];
"1000128" [label="(Call,inet6_sk(sk))"];
"1000938" [label="(Call,udp_v6_flush_pending_frames(sk))"];
"1000998" [label="(Identifier,opt_to_free)"];
"1001020" [label="(Call,sock_net(sk))"];
"1000380" [label="(Call,release_sock(sk))"];
"1000660" [label="(Identifier,opt)"];
"1000653" [label="(Block,)"];
"1000837" [label="(Call,ip6_make_skb(sk, getfrag, msg, ulen,\n\t\t\t\t   sizeof(struct udphdr), hlimit, tclass, opt,\n\t\t\t\t   &fl6, (struct rt6_info *)dst,\n\t\t\t\t   msg->msg_flags, dontfrag))"];
"1000110" [label="(MethodParameterIn,struct sock *sk)"];
"1000113" [label="(Block,)"];
"1000871" [label="(Call,lock_sock(sk))"];
"1000119" [label="(Identifier,sk)"];
"1000118" [label="(Call,udp_sk(sk))"];
"1000672" [label="(Call,ipv6_fixup_options(&opt_space, opt))"];
"1000449" [label="(Call,fl6_sock_lookup(sk, fl6.flowlabel))"];
"1000135" [label="(Identifier,opt)"];
"1000589" [label="(Call,ip6_datagram_send_ctl(sock_net(sk), sk, msg, &fl6, opt,\n\t\t\t\t\t    &hlimit, &tclass, &dontfrag))"];
"1001001" [label="(Identifier,err)"];
"1000879" [label="(Call,release_sock(sk))"];
"1000138" [label="(Call,*opt_to_free = NULL)"];
"1000656" [label="(Call,txopt_get(np))"];
"1000124" [label="(Identifier,sk)"];
"1000129" [label="(Identifier,sk)"];
"1000127" [label="(Identifier,np)"];
"1000659" [label="(Identifier,opt_to_free)"];
"1000322" [label="(Call,__ipv6_only_sock(sk))"];
"1000655" [label="(Identifier,opt)"];
"1001043" [label="(MethodReturn,int)"];
"1000665" [label="(Call,fl6_merge_options(&opt_space, flowlabel, opt))"];
"1000116" [label="(Call,*up = udp_sk(sk))"];
"1000808" [label="(Call,ip6_sk_dst_hoplimit(np, &fl6, dst))"];
"1000946" [label="(Call,udp_v6_push_pending_frames(sk))"];
"1000654" [label="(Call,opt = txopt_get(np))"];
"1000192" [label="(Call,IS_UDPLITE(sk))"];
"1000974" [label="(Call,release_sock(sk))"];
"1000657" [label="(Identifier,np)"];
"1000778" [label="(Call,security_sk_classify_flow(sk, flowi6_to_flowi(&fl6)))"];
"1000997" [label="(Call,txopt_put(opt_to_free))"];
"1000339" [label="(Call,udp_sendmsg(sk, msg, len))"];
"1000910" [label="(Call,ip6_append_data(sk, getfrag, msg, ulen,\n\t\tsizeof(struct udphdr), hlimit, tclass, opt, &fl6,\n\t\t(struct rt6_info *)dst,\n\t\tcorkreq ? msg->msg_flags|MSG_MORE : msg->msg_flags, dontfrag))"];
"1000662" [label="(Identifier,flowlabel)"];
"1000328" [label="(Call,udp_sendmsg(sk, msg, len))"];
"1000389" [label="(Call,release_sock(sk))"];
"1000123" [label="(Call,inet_sk(sk))"];
"1000624" [label="(Call,fl6_sock_lookup(sk, fl6.flowlabel))"];
"1000590" [label="(Call,sock_net(sk))"];
"1000785" [label="(Call,ip6_sk_dst_lookup_flow(sk, &fl6, final_p))"];
"1000364" [label="(Call,lock_sock(sk))"];
"1000658" -> "1000653"  [label="AST: "];
"1000658" -> "1000660"  [label="CFG: "];
"1000659" -> "1000658"  [label="AST: "];
"1000660" -> "1000658"  [label="AST: "];
"1000662" -> "1000658"  [label="CFG: "];
"1000654" -> "1000658"  [label="DDG: opt"];
"1000658" -> "1000997"  [label="DDG: opt_to_free"];
"1000654" -> "1000653"  [label="AST: "];
"1000654" -> "1000656"  [label="CFG: "];
"1000655" -> "1000654"  [label="AST: "];
"1000656" -> "1000654"  [label="AST: "];
"1000659" -> "1000654"  [label="CFG: "];
"1000654" -> "1001043"  [label="DDG: txopt_get(np)"];
"1000656" -> "1000654"  [label="DDG: np"];
"1000654" -> "1000665"  [label="DDG: opt"];
"1000654" -> "1000672"  [label="DDG: opt"];
"1000656" -> "1000657"  [label="CFG: "];
"1000657" -> "1000656"  [label="AST: "];
"1000656" -> "1001043"  [label="DDG: np"];
"1000126" -> "1000656"  [label="DDG: np"];
"1000656" -> "1000808"  [label="DDG: np"];
"1000126" -> "1000113"  [label="AST: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000128" -> "1000126"  [label="AST: "];
"1000135" -> "1000126"  [label="CFG: "];
"1000126" -> "1001043"  [label="DDG: np"];
"1000126" -> "1001043"  [label="DDG: inet6_sk(sk)"];
"1000128" -> "1000126"  [label="DDG: sk"];
"1000126" -> "1000808"  [label="DDG: np"];
"1000128" -> "1000129"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000123" -> "1000128"  [label="DDG: sk"];
"1000110" -> "1000128"  [label="DDG: sk"];
"1000128" -> "1000192"  [label="DDG: sk"];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000123" -> "1000121"  [label="DDG: sk"];
"1000118" -> "1000123"  [label="DDG: sk"];
"1000110" -> "1000123"  [label="DDG: sk"];
"1000118" -> "1000116"  [label="AST: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000118" -> "1000116"  [label="DDG: sk"];
"1000110" -> "1000118"  [label="DDG: sk"];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1001043"  [label="DDG: sk"];
"1000110" -> "1000192"  [label="DDG: sk"];
"1000110" -> "1000322"  [label="DDG: sk"];
"1000110" -> "1000328"  [label="DDG: sk"];
"1000110" -> "1000339"  [label="DDG: sk"];
"1000110" -> "1000364"  [label="DDG: sk"];
"1000110" -> "1000380"  [label="DDG: sk"];
"1000110" -> "1000389"  [label="DDG: sk"];
"1000110" -> "1000449"  [label="DDG: sk"];
"1000110" -> "1000590"  [label="DDG: sk"];
"1000110" -> "1000589"  [label="DDG: sk"];
"1000110" -> "1000624"  [label="DDG: sk"];
"1000110" -> "1000778"  [label="DDG: sk"];
"1000110" -> "1000785"  [label="DDG: sk"];
"1000110" -> "1000837"  [label="DDG: sk"];
"1000110" -> "1000871"  [label="DDG: sk"];
"1000110" -> "1000879"  [label="DDG: sk"];
"1000110" -> "1000910"  [label="DDG: sk"];
"1000110" -> "1000938"  [label="DDG: sk"];
"1000110" -> "1000946"  [label="DDG: sk"];
"1000110" -> "1000974"  [label="DDG: sk"];
"1000110" -> "1001020"  [label="DDG: sk"];
"1000997" -> "1000113"  [label="AST: "];
"1000997" -> "1000998"  [label="CFG: "];
"1000998" -> "1000997"  [label="AST: "];
"1001001" -> "1000997"  [label="CFG: "];
"1000997" -> "1001043"  [label="DDG: opt_to_free"];
"1000997" -> "1001043"  [label="DDG: txopt_put(opt_to_free)"];
"1000138" -> "1000997"  [label="DDG: opt_to_free"];
}
