digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_18@API" {
"1000481" [label="(Call,addr_len >= sizeof(struct sockaddr_in6))"];
"1000208" [label="(Call,addr_len < SIN6_LEN_RFC2133)"];
"1000235" [label="(Call,addr_len = 0)"];
"1000148" [label="(Call,addr_len = msg->msg_namelen)"];
"1000480" [label="(Call,addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000481" [label="(Call,addr_len >= sizeof(struct sockaddr_in6))"];
"1000482" [label="(Identifier,addr_len)"];
"1000215" [label="(Identifier,daddr)"];
"1000483" [label="(Call,sizeof(struct sockaddr_in6))"];
"1000487" [label="(Identifier,sin6)"];
"1000155" [label="(Identifier,ulen)"];
"1000213" [label="(Identifier,EINVAL)"];
"1000210" [label="(Identifier,SIN6_LEN_RFC2133)"];
"1000485" [label="(Call,sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000113" [label="(Block,)"];
"1000480" [label="(Call,addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000536" [label="(Identifier,fl6)"];
"1000479" [label="(ControlStructure,if (addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))))"];
"1000148" [label="(Call,addr_len = msg->msg_namelen)"];
"1000494" [label="(Identifier,fl6)"];
"1000237" [label="(Literal,0)"];
"1000207" [label="(ControlStructure,if (addr_len < SIN6_LEN_RFC2133))"];
"1000235" [label="(Call,addr_len = 0)"];
"1001043" [label="(MethodReturn,int)"];
"1000149" [label="(Identifier,addr_len)"];
"1000231" [label="(Call,msg->msg_namelen = addr_len = 0)"];
"1000209" [label="(Identifier,addr_len)"];
"1000150" [label="(Call,msg->msg_namelen)"];
"1000208" [label="(Call,addr_len < SIN6_LEN_RFC2133)"];
"1000236" [label="(Identifier,addr_len)"];
"1000481" -> "1000480"  [label="AST: "];
"1000481" -> "1000483"  [label="CFG: "];
"1000482" -> "1000481"  [label="AST: "];
"1000483" -> "1000481"  [label="AST: "];
"1000487" -> "1000481"  [label="CFG: "];
"1000480" -> "1000481"  [label="CFG: "];
"1000481" -> "1001043"  [label="DDG: addr_len"];
"1000481" -> "1000480"  [label="DDG: addr_len"];
"1000208" -> "1000481"  [label="DDG: addr_len"];
"1000235" -> "1000481"  [label="DDG: addr_len"];
"1000148" -> "1000481"  [label="DDG: addr_len"];
"1000208" -> "1000207"  [label="AST: "];
"1000208" -> "1000210"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000210" -> "1000208"  [label="AST: "];
"1000213" -> "1000208"  [label="CFG: "];
"1000215" -> "1000208"  [label="CFG: "];
"1000208" -> "1001043"  [label="DDG: addr_len"];
"1000208" -> "1001043"  [label="DDG: SIN6_LEN_RFC2133"];
"1000208" -> "1001043"  [label="DDG: addr_len < SIN6_LEN_RFC2133"];
"1000235" -> "1000231"  [label="AST: "];
"1000235" -> "1000237"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="AST: "];
"1000231" -> "1000235"  [label="CFG: "];
"1000235" -> "1001043"  [label="DDG: addr_len"];
"1000235" -> "1000231"  [label="DDG: addr_len"];
"1000148" -> "1000113"  [label="AST: "];
"1000148" -> "1000150"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000150" -> "1000148"  [label="AST: "];
"1000155" -> "1000148"  [label="CFG: "];
"1000148" -> "1001043"  [label="DDG: addr_len"];
"1000148" -> "1001043"  [label="DDG: msg->msg_namelen"];
"1000480" -> "1000479"  [label="AST: "];
"1000480" -> "1000485"  [label="CFG: "];
"1000485" -> "1000480"  [label="AST: "];
"1000494" -> "1000480"  [label="CFG: "];
"1000536" -> "1000480"  [label="CFG: "];
"1000480" -> "1001043"  [label="DDG: addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
"1000480" -> "1001043"  [label="DDG: addr_len >= sizeof(struct sockaddr_in6)"];
"1000480" -> "1001043"  [label="DDG: sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
"1000485" -> "1000480"  [label="DDG: sin6->sin6_scope_id"];
"1000485" -> "1000480"  [label="DDG: __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
}
