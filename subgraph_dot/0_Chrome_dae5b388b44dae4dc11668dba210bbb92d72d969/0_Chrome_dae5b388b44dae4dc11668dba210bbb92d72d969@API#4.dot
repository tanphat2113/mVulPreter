digraph "0_Chrome_dae5b388b44dae4dc11668dba210bbb92d72d969@API" {
"1000201" [label="(Call,source += sizeof(MachineWord))"];
"1000198" [label="(Call,CopyASCIIMachineWord(destination, source))"];
"1000222" [label="(Call,destination++)"];
"1000303" [label="(Call,destination++)"];
"1000205" [label="(Call,destination += sizeof(MachineWord))"];
"1000132" [label="(Call,* destination = buffer.Characters())"];
"1000161" [label="(Call,destination = destination_for_handle_partial_sequence)"];
"1000149" [label="(Call,HandlePartialSequence(destination_for_handle_partial_sequence,\n                                source_for_handle_partial_sequence, end,\n                                do_flush, stop_on_error, saw_error))"];
"1000141" [label="(Call,* destination_for_handle_partial_sequence = destination)"];
"1000145" [label="(Call,* source_for_handle_partial_sequence = source)"];
"1000185" [label="(Call,source < aligned_end)"];
"1000181" [label="(Call,IsAlignedToMachineWord(source))"];
"1000171" [label="(Call,source < end)"];
"1000279" [label="(Call,DecodeNonASCIISequence(source, count))"];
"1000248" [label="(Call,end - source)"];
"1000246" [label="(Call,count > end - source)"];
"1000236" [label="(Call,count == 0)"];
"1000229" [label="(Call,count = NonASCIISequenceLength(*source))"];
"1000231" [label="(Call,NonASCIISequenceLength(*source))"];
"1000176" [label="(Call,IsASCII(*source))"];
"1000216" [label="(Call,IsASCII(*source))"];
"1000273" [label="(Call,source = end)"];
"1000266" [label="(Call,end - source)"];
"1000254" [label="(Call,end - source)"];
"1000210" [label="(Call,source == end)"];
"1000225" [label="(Call,source++)"];
"1000298" [label="(Call,source += count)"];
"1000164" [label="(Call,source = source_for_handle_partial_sequence)"];
"1000115" [label="(Call,* source = reinterpret_cast<const uint8_t*>(bytes))"];
"1000117" [label="(Call,reinterpret_cast<const uint8_t*>(bytes))"];
"1000101" [label="(MethodParameterIn,const char* bytes)"];
"1000129" [label="(Call,AlignToMachineWord(end))"];
"1000121" [label="(Call,* end = source + length)"];
"1000102" [label="(MethodParameterIn,wtf_size_t length)"];
"1000201" [label="(Call,source += sizeof(MachineWord))"];
"1000127" [label="(Call,* aligned_end = AlignToMachineWord(end))"];
"1000308" [label="(Call,do_flush && partial_sequence_size_)"];
"1000108" [label="(Call,do_flush = flush != FlushBehavior::kDoNotFlush)"];
"1000110" [label="(Call,flush != FlushBehavior::kDoNotFlush)"];
"1000103" [label="(MethodParameterIn,FlushBehavior flush)"];
"1000269" [label="(Call,memcpy(partial_sequence_, source, partial_sequence_size_))"];
"1000262" [label="(Call,!partial_sequence_size_)"];
"1000104" [label="(MethodParameterIn,bool stop_on_error)"];
"1000286" [label="(Call,saw_error = true)"];
"1000105" [label="(MethodParameterIn,bool& saw_error)"];
"1000157" [label="(Call,source = source_for_handle_partial_sequence)"];
"1000345" [label="(Call,* source_for_handle_partial_sequence = source)"];
"1000348" [label="(Call,HandlePartialSequence(destination_for_handle_partial_sequence,\n                            source_for_handle_partial_sequence, end, do_flush,\n                            stop_on_error, saw_error))"];
"1000355" [label="(Call,destination16 = destination_for_handle_partial_sequence)"];
"1000341" [label="(Call,* destination_for_handle_partial_sequence = destination16)"];
"1000392" [label="(Call,CopyASCIIMachineWord(destination16, source))"];
"1000395" [label="(Call,source += sizeof(MachineWord))"];
"1000379" [label="(Call,source < aligned_end)"];
"1000365" [label="(Call,source < end)"];
"1000375" [label="(Call,IsAlignedToMachineWord(source))"];
"1000419" [label="(Call,source++)"];
"1000404" [label="(Call,source == end)"];
"1000442" [label="(Call,end - source)"];
"1000440" [label="(Call,count > end - source)"];
"1000473" [label="(Call,DecodeNonASCIISequence(source, count))"];
"1000471" [label="(Call,character = DecodeNonASCIISequence(source, count))"];
"1000477" [label="(Call,IsNonCharacter(character))"];
"1000491" [label="(Call,source -= character)"];
"1000500" [label="(Call,AppendCharacter(destination16, character))"];
"1000498" [label="(Call,destination16 = AppendCharacter(destination16, character))"];
"1000416" [label="(Call,destination16++)"];
"1000488" [label="(Call,destination16++)"];
"1000495" [label="(Call,source += count)"];
"1000448" [label="(Call,end - source)"];
"1000447" [label="(Call,end - source <\n                          static_cast<ptrdiff_t>(sizeof(partial_sequence_)))"];
"1000446" [label="(Call,SECURITY_DCHECK(end - source <\n                          static_cast<ptrdiff_t>(sizeof(partial_sequence_))))"];
"1000460" [label="(Call,end - source)"];
"1000458" [label="(Call,wtf_size_t>(end - source))"];
"1000463" [label="(Call,memcpy(partial_sequence_, source, partial_sequence_size_))"];
"1000503" [label="(Call,do_flush && partial_sequence_size_)"];
"1000456" [label="(Call,!partial_sequence_size_)"];
"1000455" [label="(Call,DCHECK(!partial_sequence_size_))"];
"1000467" [label="(Call,source = end)"];
"1000399" [label="(Call,destination16 += sizeof(MachineWord))"];
"1000358" [label="(Call,source = source_for_handle_partial_sequence)"];
"1000325" [label="(Call,converted8 < destination)"];
"1000333" [label="(Call,converted8++)"];
"1000277" [label="(Call,character = DecodeNonASCIISequence(source, count))"];
"1000283" [label="(Call,IsNonCharacter(character))"];
"1000294" [label="(Call,character > 0xff)"];
"1000305" [label="(Call,static_cast<LChar>(character))"];
"1000301" [label="(Call,*destination++ = static_cast<LChar>(character))"];
"1000253" [label="(Call,end - source <\n                          static_cast<ptrdiff_t>(sizeof(partial_sequence_)))"];
"1000252" [label="(Call,SECURITY_DCHECK(end - source <\n                          static_cast<ptrdiff_t>(sizeof(partial_sequence_))))"];
"1000264" [label="(Call,wtf_size_t>(end - source))"];
"1000261" [label="(Call,DCHECK(!partial_sequence_size_))"];
"1000177" [label="(Call,*source)"];
"1000241" [label="(Identifier,character)"];
"1000254" [label="(Call,end - source)"];
"1000231" [label="(Call,NonASCIISequenceLength(*source))"];
"1000112" [label="(Identifier,FlushBehavior::kDoNotFlush)"];
"1000498" [label="(Call,destination16 = AppendCharacter(destination16, character))"];
"1000269" [label="(Call,memcpy(partial_sequence_, source, partial_sequence_size_))"];
"1000229" [label="(Call,count = NonASCIISequenceLength(*source))"];
"1000355" [label="(Call,destination16 = destination_for_handle_partial_sequence)"];
"1000383" [label="(Identifier,source)"];
"1000494" [label="(ControlStructure,continue;)"];
"1000170" [label="(ControlStructure,while (source < end))"];
"1000200" [label="(Identifier,source)"];
"1000222" [label="(Call,destination++)"];
"1000332" [label="(Call,*converted8++)"];
"1000500" [label="(Call,AppendCharacter(destination16, character))"];
"1000152" [label="(Identifier,end)"];
"1000101" [label="(MethodParameterIn,const char* bytes)"];
"1000347" [label="(Identifier,source)"];
"1000256" [label="(Identifier,source)"];
"1000322" [label="(Call,* converted8 = buffer.Characters())"];
"1000266" [label="(Call,end - source)"];
"1000284" [label="(Identifier,character)"];
"1000481" [label="(Identifier,saw_error)"];
"1000147" [label="(Identifier,source)"];
"1000163" [label="(Identifier,destination_for_handle_partial_sequence)"];
"1000207" [label="(Call,sizeof(MachineWord))"];
"1000108" [label="(Call,do_flush = flush != FlushBehavior::kDoNotFlush)"];
"1000249" [label="(Identifier,end)"];
"1000495" [label="(Call,source += count)"];
"1000262" [label="(Call,!partial_sequence_size_)"];
"1000442" [label="(Call,end - source)"];
"1000225" [label="(Call,source++)"];
"1000489" [label="(Identifier,destination16)"];
"1000133" [label="(Identifier,destination)"];
"1000348" [label="(Call,HandlePartialSequence(destination_for_handle_partial_sequence,\n                            source_for_handle_partial_sequence, end, do_flush,\n                            stop_on_error, saw_error))"];
"1000404" [label="(Call,source == end)"];
"1000283" [label="(Call,IsNonCharacter(character))"];
"1000491" [label="(Call,source -= character)"];
"1000210" [label="(Call,source == end)"];
"1000331" [label="(Identifier,destination16)"];
"1000487" [label="(Call,*destination16++)"];
"1000171" [label="(Call,source < end)"];
"1000499" [label="(Identifier,destination16)"];
"1000463" [label="(Call,memcpy(partial_sequence_, source, partial_sequence_size_))"];
"1000178" [label="(Identifier,source)"];
"1000278" [label="(Identifier,character)"];
"1000199" [label="(Identifier,destination)"];
"1000246" [label="(Call,count > end - source)"];
"1000129" [label="(Call,AlignToMachineWord(end))"];
"1000212" [label="(Identifier,end)"];
"1000149" [label="(Call,HandlePartialSequence(destination_for_handle_partial_sequence,\n                                source_for_handle_partial_sequence, end,\n                                do_flush, stop_on_error, saw_error))"];
"1000188" [label="(Block,)"];
"1000455" [label="(Call,DCHECK(!partial_sequence_size_))"];
"1000123" [label="(Call,source + length)"];
"1000370" [label="(Call,IsASCII(*source))"];
"1000305" [label="(Call,static_cast<LChar>(character))"];
"1000161" [label="(Call,destination = destination_for_handle_partial_sequence)"];
"1000134" [label="(Call,buffer.Characters())"];
"1000157" [label="(Call,source = source_for_handle_partial_sequence)"];
"1000472" [label="(Identifier,character)"];
"1000132" [label="(Call,* destination = buffer.Characters())"];
"1000309" [label="(Identifier,do_flush)"];
"1000127" [label="(Call,* aligned_end = AlignToMachineWord(end))"];
"1000317" [label="(Call,* destination16 = buffer16.Characters())"];
"1000356" [label="(Identifier,destination16)"];
"1000478" [label="(Identifier,character)"];
"1000333" [label="(Call,converted8++)"];
"1000257" [label="(Call,static_cast<ptrdiff_t>(sizeof(partial_sequence_)))"];
"1000271" [label="(Identifier,source)"];
"1000146" [label="(Identifier,source_for_handle_partial_sequence)"];
"1000343" [label="(Identifier,destination16)"];
"1000381" [label="(Identifier,aligned_end)"];
"1000275" [label="(Identifier,end)"];
"1000445" [label="(Block,)"];
"1000394" [label="(Identifier,source)"];
"1000176" [label="(Call,IsASCII(*source))"];
"1000465" [label="(Identifier,source)"];
"1000230" [label="(Identifier,count)"];
"1000450" [label="(Identifier,source)"];
"1000280" [label="(Identifier,source)"];
"1000310" [label="(Identifier,partial_sequence_size_)"];
"1000505" [label="(Identifier,partial_sequence_size_)"];
"1000116" [label="(Identifier,source)"];
"1000245" [label="(ControlStructure,if (count > end - source))"];
"1000403" [label="(ControlStructure,if (source == end))"];
"1000393" [label="(Identifier,destination16)"];
"1000474" [label="(Identifier,source)"];
"1000180" [label="(ControlStructure,if (IsAlignedToMachineWord(source)))"];
"1000446" [label="(Call,SECURITY_DCHECK(end - source <\n                          static_cast<ptrdiff_t>(sizeof(partial_sequence_))))"];
"1000501" [label="(Identifier,destination16)"];
"1000508" [label="(Identifier,buffer16)"];
"1000303" [label="(Call,destination++)"];
"1000173" [label="(Identifier,end)"];
"1000325" [label="(Call,converted8 < destination)"];
"1000128" [label="(Identifier,aligned_end)"];
"1000451" [label="(Call,static_cast<ptrdiff_t>(sizeof(partial_sequence_)))"];
"1000205" [label="(Call,destination += sizeof(MachineWord))"];
"1000407" [label="(ControlStructure,break;)"];
"1000419" [label="(Call,source++)"];
"1000313" [label="(Identifier,buffer)"];
"1000434" [label="(Call,character = kNonCharacter1)"];
"1000479" [label="(Block,)"];
"1000509" [label="(MethodReturn,String)"];
"1000466" [label="(Identifier,partial_sequence_size_)"];
"1000470" [label="(ControlStructure,break;)"];
"1000203" [label="(Call,sizeof(MachineWord))"];
"1000352" [label="(Identifier,do_flush)"];
"1000226" [label="(Identifier,source)"];
"1000287" [label="(Identifier,saw_error)"];
"1000335" [label="(ControlStructure,do)"];
"1000244" [label="(Block,)"];
"1000476" [label="(ControlStructure,if (IsNonCharacter(character)))"];
"1000264" [label="(Call,wtf_size_t>(end - source))"];
"1000440" [label="(Call,count > end - source)"];
"1000462" [label="(Identifier,source)"];
"1000459" [label="(Identifier,wtf_size_t)"];
"1000334" [label="(Identifier,converted8)"];
"1000261" [label="(Call,DCHECK(!partial_sequence_size_))"];
"1000138" [label="(Identifier,partial_sequence_size_)"];
"1000358" [label="(Call,source = source_for_handle_partial_sequence)"];
"1000406" [label="(Identifier,end)"];
"1000473" [label="(Call,DecodeNonASCIISequence(source, count))"];
"1000162" [label="(Identifier,destination)"];
"1000304" [label="(Identifier,destination)"];
"1000202" [label="(Identifier,source)"];
"1000302" [label="(Call,*destination++)"];
"1000143" [label="(Identifier,destination)"];
"1000469" [label="(Identifier,end)"];
"1000438" [label="(Block,)"];
"1000308" [label="(Call,do_flush && partial_sequence_size_)"];
"1000216" [label="(Call,IsASCII(*source))"];
"1000130" [label="(Identifier,end)"];
"1000102" [label="(MethodParameterIn,wtf_size_t length)"];
"1000430" [label="(Call,count == 0)"];
"1000285" [label="(Block,)"];
"1000247" [label="(Identifier,count)"];
"1000475" [label="(Identifier,count)"];
"1000184" [label="(ControlStructure,while (source < aligned_end))"];
"1000238" [label="(Literal,0)"];
"1000175" [label="(ControlStructure,if (IsASCII(*source)))"];
"1000367" [label="(Identifier,end)"];
"1000141" [label="(Call,* destination_for_handle_partial_sequence = destination)"];
"1000277" [label="(Call,character = DecodeNonASCIISequence(source, count))"];
"1000250" [label="(Identifier,source)"];
"1000117" [label="(Call,reinterpret_cast<const uint8_t*>(bytes))"];
"1000504" [label="(Identifier,do_flush)"];
"1000460" [label="(Call,end - source)"];
"1000376" [label="(Identifier,source)"];
"1000172" [label="(Identifier,source)"];
"1000268" [label="(Identifier,source)"];
"1000106" [label="(Block,)"];
"1000392" [label="(Call,CopyASCIIMachineWord(destination16, source))"];
"1000441" [label="(Identifier,count)"];
"1000301" [label="(Call,*destination++ = static_cast<LChar>(character))"];
"1000273" [label="(Call,source = end)"];
"1000397" [label="(Call,sizeof(MachineWord))"];
"1000345" [label="(Call,* source_for_handle_partial_sequence = source)"];
"1000288" [label="(Identifier,true)"];
"1000139" [label="(Block,)"];
"1000122" [label="(Identifier,end)"];
"1000232" [label="(Call,*source)"];
"1000380" [label="(Identifier,source)"];
"1000395" [label="(Call,source += sizeof(MachineWord))"];
"1000174" [label="(Block,)"];
"1000251" [label="(Block,)"];
"1000307" [label="(Identifier,character)"];
"1000148" [label="(ControlStructure,if (HandlePartialSequence(destination_for_handle_partial_sequence,\n                                source_for_handle_partial_sequence, end,\n                                do_flush, stop_on_error, saw_error)))"];
"1000270" [label="(Identifier,partial_sequence_)"];
"1000375" [label="(Call,IsAlignedToMachineWord(source))"];
"1000493" [label="(Identifier,character)"];
"1000457" [label="(Identifier,partial_sequence_size_)"];
"1000480" [label="(Call,saw_error = true)"];
"1000444" [label="(Identifier,source)"];
"1000458" [label="(Call,wtf_size_t>(end - source))"];
"1000456" [label="(Call,!partial_sequence_size_)"];
"1000213" [label="(ControlStructure,break;)"];
"1000158" [label="(Identifier,source)"];
"1000198" [label="(Call,CopyASCIIMachineWord(destination, source))"];
"1000364" [label="(ControlStructure,while (source < end))"];
"1000154" [label="(Identifier,stop_on_error)"];
"1000418" [label="(Call,*source++)"];
"1000186" [label="(Identifier,source)"];
"1000103" [label="(MethodParameterIn,FlushBehavior flush)"];
"1000109" [label="(Identifier,do_flush)"];
"1000110" [label="(Call,flush != FlushBehavior::kDoNotFlush)"];
"1000379" [label="(Call,source < aligned_end)"];
"1000330" [label="(Call,destination16++)"];
"1000400" [label="(Identifier,destination16)"];
"1000366" [label="(Identifier,source)"];
"1000362" [label="(Identifier,partial_sequence_size_)"];
"1000215" [label="(Call,!IsASCII(*source))"];
"1000326" [label="(Identifier,converted8)"];
"1000267" [label="(Identifier,end)"];
"1000339" [label="(Block,)"];
"1000368" [label="(Block,)"];
"1000492" [label="(Identifier,source)"];
"1000153" [label="(Identifier,do_flush)"];
"1000217" [label="(Call,*source)"];
"1000121" [label="(Call,* end = source + length)"];
"1000351" [label="(Identifier,end)"];
"1000185" [label="(Call,source < aligned_end)"];
"1000412" [label="(Identifier,source)"];
"1000417" [label="(Identifier,destination16)"];
"1000360" [label="(Identifier,source_for_handle_partial_sequence)"];
"1000295" [label="(Identifier,character)"];
"1000155" [label="(Identifier,saw_error)"];
"1000420" [label="(Identifier,source)"];
"1000341" [label="(Call,* destination_for_handle_partial_sequence = destination16)"];
"1000350" [label="(Identifier,source_for_handle_partial_sequence)"];
"1000265" [label="(Identifier,wtf_size_t)"];
"1000135" [label="(ControlStructure,do)"];
"1000201" [label="(Call,source += sizeof(MachineWord))"];
"1000497" [label="(Identifier,count)"];
"1000382" [label="(Block,)"];
"1000189" [label="(Identifier,source)"];
"1000399" [label="(Call,destination16 += sizeof(MachineWord))"];
"1000168" [label="(Identifier,partial_sequence_size_)"];
"1000297" [label="(ControlStructure,goto upConvertTo16Bit;)"];
"1000182" [label="(Identifier,source)"];
"1000298" [label="(Call,source += count)"];
"1000272" [label="(Identifier,partial_sequence_size_)"];
"1000290" [label="(Identifier,stop_on_error)"];
"1000349" [label="(Identifier,destination_for_handle_partial_sequence)"];
"1000165" [label="(Identifier,source)"];
"1000300" [label="(Identifier,count)"];
"1000346" [label="(Identifier,source_for_handle_partial_sequence)"];
"1000281" [label="(Identifier,count)"];
"1000164" [label="(Call,source = source_for_handle_partial_sequence)"];
"1000276" [label="(ControlStructure,break;)"];
"1000357" [label="(Identifier,destination_for_handle_partial_sequence)"];
"1000401" [label="(Call,sizeof(MachineWord))"];
"1000299" [label="(Identifier,source)"];
"1000223" [label="(Identifier,destination)"];
"1000237" [label="(Identifier,count)"];
"1000296" [label="(Literal,0xff)"];
"1000235" [label="(ControlStructure,if (count == 0))"];
"1000263" [label="(Identifier,partial_sequence_size_)"];
"1000415" [label="(Call,*destination16++)"];
"1000274" [label="(Identifier,source)"];
"1000218" [label="(Identifier,source)"];
"1000166" [label="(Identifier,source_for_handle_partial_sequence)"];
"1000293" [label="(ControlStructure,if (character > 0xff))"];
"1000111" [label="(Identifier,flush)"];
"1000448" [label="(Call,end - source)"];
"1000327" [label="(Identifier,destination)"];
"1000206" [label="(Identifier,destination)"];
"1000160" [label="(ControlStructure,goto upConvertTo16Bit;)"];
"1000187" [label="(Identifier,aligned_end)"];
"1000488" [label="(Call,destination16++)"];
"1000248" [label="(Call,end - source)"];
"1000496" [label="(Identifier,source)"];
"1000365" [label="(Call,source < end)"];
"1000464" [label="(Identifier,partial_sequence_)"];
"1000286" [label="(Call,saw_error = true)"];
"1000471" [label="(Call,character = DecodeNonASCIISequence(source, count))"];
"1000252" [label="(Call,SECURITY_DCHECK(end - source <\n                          static_cast<ptrdiff_t>(sizeof(partial_sequence_))))"];
"1000502" [label="(Identifier,character)"];
"1000279" [label="(Call,DecodeNonASCIISequence(source, count))"];
"1000224" [label="(Call,*source++)"];
"1000221" [label="(Call,*destination++)"];
"1000354" [label="(Identifier,saw_error)"];
"1000209" [label="(ControlStructure,if (source == end))"];
"1000461" [label="(Identifier,end)"];
"1000447" [label="(Call,end - source <\n                          static_cast<ptrdiff_t>(sizeof(partial_sequence_)))"];
"1000151" [label="(Identifier,source_for_handle_partial_sequence)"];
"1000342" [label="(Identifier,destination_for_handle_partial_sequence)"];
"1000468" [label="(Identifier,source)"];
"1000181" [label="(Call,IsAlignedToMachineWord(source))"];
"1000338" [label="(Identifier,partial_sequence_size_)"];
"1000294" [label="(Call,character > 0xff)"];
"1000150" [label="(Identifier,destination_for_handle_partial_sequence)"];
"1000253" [label="(Call,end - source <\n                          static_cast<ptrdiff_t>(sizeof(partial_sequence_)))"];
"1000372" [label="(Identifier,source)"];
"1000503" [label="(Call,do_flush && partial_sequence_size_)"];
"1000374" [label="(ControlStructure,if (IsAlignedToMachineWord(source)))"];
"1000236" [label="(Call,count == 0)"];
"1000477" [label="(Call,IsNonCharacter(character))"];
"1000115" [label="(Call,* source = reinterpret_cast<const uint8_t*>(bytes))"];
"1000240" [label="(Call,character = kNonCharacter1)"];
"1000396" [label="(Identifier,source)"];
"1000449" [label="(Identifier,end)"];
"1000467" [label="(Call,source = end)"];
"1000416" [label="(Call,destination16++)"];
"1000142" [label="(Identifier,destination_for_handle_partial_sequence)"];
"1000105" [label="(MethodParameterIn,bool& saw_error)"];
"1000282" [label="(ControlStructure,if (IsNonCharacter(character)))"];
"1000104" [label="(MethodParameterIn,bool stop_on_error)"];
"1000359" [label="(Identifier,source)"];
"1000439" [label="(ControlStructure,if (count > end - source))"];
"1000156" [label="(Block,)"];
"1000353" [label="(Identifier,stop_on_error)"];
"1000378" [label="(ControlStructure,while (source < aligned_end))"];
"1000405" [label="(Identifier,source)"];
"1000320" [label="(ControlStructure,for (LChar* converted8 = buffer.Characters(); converted8 < destination;))"];
"1000255" [label="(Identifier,end)"];
"1000159" [label="(Identifier,source_for_handle_partial_sequence)"];
"1000443" [label="(Identifier,end)"];
"1000119" [label="(Identifier,bytes)"];
"1000211" [label="(Identifier,source)"];
"1000145" [label="(Call,* source_for_handle_partial_sequence = source)"];
"1000201" -> "1000188"  [label="AST: "];
"1000201" -> "1000203"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000203" -> "1000201"  [label="AST: "];
"1000206" -> "1000201"  [label="CFG: "];
"1000201" -> "1000185"  [label="DDG: source"];
"1000198" -> "1000201"  [label="DDG: source"];
"1000198" -> "1000188"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000202" -> "1000198"  [label="CFG: "];
"1000198" -> "1000509"  [label="DDG: CopyASCIIMachineWord(destination, source)"];
"1000222" -> "1000198"  [label="DDG: destination"];
"1000303" -> "1000198"  [label="DDG: destination"];
"1000205" -> "1000198"  [label="DDG: destination"];
"1000132" -> "1000198"  [label="DDG: destination"];
"1000161" -> "1000198"  [label="DDG: destination"];
"1000185" -> "1000198"  [label="DDG: source"];
"1000198" -> "1000205"  [label="DDG: destination"];
"1000222" -> "1000221"  [label="AST: "];
"1000222" -> "1000223"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000221" -> "1000222"  [label="CFG: "];
"1000222" -> "1000509"  [label="DDG: destination"];
"1000222" -> "1000141"  [label="DDG: destination"];
"1000303" -> "1000222"  [label="DDG: destination"];
"1000205" -> "1000222"  [label="DDG: destination"];
"1000132" -> "1000222"  [label="DDG: destination"];
"1000161" -> "1000222"  [label="DDG: destination"];
"1000222" -> "1000303"  [label="DDG: destination"];
"1000222" -> "1000325"  [label="DDG: destination"];
"1000303" -> "1000302"  [label="AST: "];
"1000303" -> "1000304"  [label="CFG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000302" -> "1000303"  [label="CFG: "];
"1000303" -> "1000509"  [label="DDG: destination"];
"1000303" -> "1000141"  [label="DDG: destination"];
"1000205" -> "1000303"  [label="DDG: destination"];
"1000132" -> "1000303"  [label="DDG: destination"];
"1000161" -> "1000303"  [label="DDG: destination"];
"1000303" -> "1000325"  [label="DDG: destination"];
"1000205" -> "1000188"  [label="AST: "];
"1000205" -> "1000207"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000207" -> "1000205"  [label="AST: "];
"1000186" -> "1000205"  [label="CFG: "];
"1000205" -> "1000509"  [label="DDG: destination"];
"1000205" -> "1000141"  [label="DDG: destination"];
"1000205" -> "1000325"  [label="DDG: destination"];
"1000132" -> "1000106"  [label="AST: "];
"1000132" -> "1000134"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="AST: "];
"1000138" -> "1000132"  [label="CFG: "];
"1000132" -> "1000509"  [label="DDG: buffer.Characters()"];
"1000132" -> "1000509"  [label="DDG: destination"];
"1000132" -> "1000141"  [label="DDG: destination"];
"1000132" -> "1000325"  [label="DDG: destination"];
"1000161" -> "1000139"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000165" -> "1000161"  [label="CFG: "];
"1000161" -> "1000509"  [label="DDG: destination_for_handle_partial_sequence"];
"1000161" -> "1000509"  [label="DDG: destination"];
"1000161" -> "1000141"  [label="DDG: destination"];
"1000149" -> "1000161"  [label="DDG: destination_for_handle_partial_sequence"];
"1000161" -> "1000325"  [label="DDG: destination"];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000155"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000152" -> "1000149"  [label="AST: "];
"1000153" -> "1000149"  [label="AST: "];
"1000154" -> "1000149"  [label="AST: "];
"1000155" -> "1000149"  [label="AST: "];
"1000158" -> "1000149"  [label="CFG: "];
"1000162" -> "1000149"  [label="CFG: "];
"1000149" -> "1000509"  [label="DDG: end"];
"1000149" -> "1000509"  [label="DDG: saw_error"];
"1000149" -> "1000509"  [label="DDG: HandlePartialSequence(destination_for_handle_partial_sequence,\n                                source_for_handle_partial_sequence, end,\n                                do_flush, stop_on_error, saw_error)"];
"1000149" -> "1000509"  [label="DDG: do_flush"];
"1000149" -> "1000509"  [label="DDG: stop_on_error"];
"1000149" -> "1000509"  [label="DDG: destination_for_handle_partial_sequence"];
"1000141" -> "1000149"  [label="DDG: destination_for_handle_partial_sequence"];
"1000145" -> "1000149"  [label="DDG: source_for_handle_partial_sequence"];
"1000129" -> "1000149"  [label="DDG: end"];
"1000210" -> "1000149"  [label="DDG: end"];
"1000171" -> "1000149"  [label="DDG: end"];
"1000248" -> "1000149"  [label="DDG: end"];
"1000266" -> "1000149"  [label="DDG: end"];
"1000308" -> "1000149"  [label="DDG: do_flush"];
"1000108" -> "1000149"  [label="DDG: do_flush"];
"1000104" -> "1000149"  [label="DDG: stop_on_error"];
"1000286" -> "1000149"  [label="DDG: saw_error"];
"1000105" -> "1000149"  [label="DDG: saw_error"];
"1000149" -> "1000157"  [label="DDG: source_for_handle_partial_sequence"];
"1000149" -> "1000164"  [label="DDG: source_for_handle_partial_sequence"];
"1000149" -> "1000171"  [label="DDG: end"];
"1000149" -> "1000308"  [label="DDG: do_flush"];
"1000149" -> "1000348"  [label="DDG: end"];
"1000149" -> "1000348"  [label="DDG: do_flush"];
"1000149" -> "1000348"  [label="DDG: stop_on_error"];
"1000149" -> "1000348"  [label="DDG: saw_error"];
"1000149" -> "1000365"  [label="DDG: end"];
"1000149" -> "1000503"  [label="DDG: do_flush"];
"1000141" -> "1000139"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000146" -> "1000141"  [label="CFG: "];
"1000145" -> "1000139"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000150" -> "1000145"  [label="CFG: "];
"1000185" -> "1000145"  [label="DDG: source"];
"1000171" -> "1000145"  [label="DDG: source"];
"1000279" -> "1000145"  [label="DDG: source"];
"1000225" -> "1000145"  [label="DDG: source"];
"1000273" -> "1000145"  [label="DDG: source"];
"1000210" -> "1000145"  [label="DDG: source"];
"1000115" -> "1000145"  [label="DDG: source"];
"1000185" -> "1000184"  [label="AST: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="AST: "];
"1000189" -> "1000185"  [label="CFG: "];
"1000211" -> "1000185"  [label="CFG: "];
"1000185" -> "1000509"  [label="DDG: source"];
"1000185" -> "1000509"  [label="DDG: aligned_end"];
"1000185" -> "1000509"  [label="DDG: source < aligned_end"];
"1000185" -> "1000171"  [label="DDG: source"];
"1000181" -> "1000185"  [label="DDG: source"];
"1000127" -> "1000185"  [label="DDG: aligned_end"];
"1000185" -> "1000210"  [label="DDG: source"];
"1000185" -> "1000379"  [label="DDG: aligned_end"];
"1000181" -> "1000180"  [label="AST: "];
"1000181" -> "1000182"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000186" -> "1000181"  [label="CFG: "];
"1000223" -> "1000181"  [label="CFG: "];
"1000181" -> "1000509"  [label="DDG: IsAlignedToMachineWord(source)"];
"1000171" -> "1000181"  [label="DDG: source"];
"1000181" -> "1000225"  [label="DDG: source"];
"1000171" -> "1000170"  [label="AST: "];
"1000171" -> "1000173"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="AST: "];
"1000309" -> "1000171"  [label="CFG: "];
"1000178" -> "1000171"  [label="CFG: "];
"1000171" -> "1000509"  [label="DDG: source"];
"1000171" -> "1000509"  [label="DDG: end"];
"1000171" -> "1000509"  [label="DDG: source < end"];
"1000279" -> "1000171"  [label="DDG: source"];
"1000273" -> "1000171"  [label="DDG: source"];
"1000210" -> "1000171"  [label="DDG: source"];
"1000210" -> "1000171"  [label="DDG: end"];
"1000225" -> "1000171"  [label="DDG: source"];
"1000298" -> "1000171"  [label="DDG: source"];
"1000164" -> "1000171"  [label="DDG: source"];
"1000115" -> "1000171"  [label="DDG: source"];
"1000129" -> "1000171"  [label="DDG: end"];
"1000248" -> "1000171"  [label="DDG: end"];
"1000266" -> "1000171"  [label="DDG: end"];
"1000171" -> "1000210"  [label="DDG: end"];
"1000171" -> "1000248"  [label="DDG: end"];
"1000171" -> "1000248"  [label="DDG: source"];
"1000171" -> "1000298"  [label="DDG: source"];
"1000171" -> "1000345"  [label="DDG: source"];
"1000171" -> "1000348"  [label="DDG: end"];
"1000171" -> "1000365"  [label="DDG: source"];
"1000171" -> "1000365"  [label="DDG: end"];
"1000279" -> "1000277"  [label="AST: "];
"1000279" -> "1000281"  [label="CFG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000281" -> "1000279"  [label="AST: "];
"1000277" -> "1000279"  [label="CFG: "];
"1000279" -> "1000509"  [label="DDG: source"];
"1000279" -> "1000509"  [label="DDG: count"];
"1000279" -> "1000277"  [label="DDG: source"];
"1000279" -> "1000277"  [label="DDG: count"];
"1000248" -> "1000279"  [label="DDG: source"];
"1000246" -> "1000279"  [label="DDG: count"];
"1000279" -> "1000298"  [label="DDG: count"];
"1000279" -> "1000298"  [label="DDG: source"];
"1000279" -> "1000345"  [label="DDG: source"];
"1000279" -> "1000365"  [label="DDG: source"];
"1000248" -> "1000246"  [label="AST: "];
"1000248" -> "1000250"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="AST: "];
"1000246" -> "1000248"  [label="CFG: "];
"1000248" -> "1000509"  [label="DDG: end"];
"1000248" -> "1000246"  [label="DDG: end"];
"1000248" -> "1000246"  [label="DDG: source"];
"1000248" -> "1000254"  [label="DDG: end"];
"1000248" -> "1000254"  [label="DDG: source"];
"1000248" -> "1000348"  [label="DDG: end"];
"1000248" -> "1000365"  [label="DDG: end"];
"1000246" -> "1000245"  [label="AST: "];
"1000247" -> "1000246"  [label="AST: "];
"1000255" -> "1000246"  [label="CFG: "];
"1000278" -> "1000246"  [label="CFG: "];
"1000246" -> "1000509"  [label="DDG: end - source"];
"1000246" -> "1000509"  [label="DDG: count > end - source"];
"1000246" -> "1000509"  [label="DDG: count"];
"1000236" -> "1000246"  [label="DDG: count"];
"1000236" -> "1000235"  [label="AST: "];
"1000236" -> "1000238"  [label="CFG: "];
"1000237" -> "1000236"  [label="AST: "];
"1000238" -> "1000236"  [label="AST: "];
"1000241" -> "1000236"  [label="CFG: "];
"1000247" -> "1000236"  [label="CFG: "];
"1000236" -> "1000509"  [label="DDG: count"];
"1000236" -> "1000509"  [label="DDG: count == 0"];
"1000229" -> "1000236"  [label="DDG: count"];
"1000236" -> "1000298"  [label="DDG: count"];
"1000229" -> "1000174"  [label="AST: "];
"1000229" -> "1000231"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000231" -> "1000229"  [label="AST: "];
"1000237" -> "1000229"  [label="CFG: "];
"1000229" -> "1000509"  [label="DDG: NonASCIISequenceLength(*source)"];
"1000231" -> "1000229"  [label="DDG: *source"];
"1000231" -> "1000232"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000231" -> "1000509"  [label="DDG: *source"];
"1000231" -> "1000176"  [label="DDG: *source"];
"1000176" -> "1000231"  [label="DDG: *source"];
"1000231" -> "1000370"  [label="DDG: *source"];
"1000176" -> "1000175"  [label="AST: "];
"1000176" -> "1000177"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000182" -> "1000176"  [label="CFG: "];
"1000230" -> "1000176"  [label="CFG: "];
"1000176" -> "1000509"  [label="DDG: IsASCII(*source)"];
"1000176" -> "1000509"  [label="DDG: *source"];
"1000216" -> "1000176"  [label="DDG: *source"];
"1000176" -> "1000216"  [label="DDG: *source"];
"1000176" -> "1000370"  [label="DDG: *source"];
"1000216" -> "1000215"  [label="AST: "];
"1000216" -> "1000217"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000215" -> "1000216"  [label="CFG: "];
"1000216" -> "1000509"  [label="DDG: *source"];
"1000216" -> "1000215"  [label="DDG: *source"];
"1000216" -> "1000370"  [label="DDG: *source"];
"1000273" -> "1000251"  [label="AST: "];
"1000273" -> "1000275"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000275" -> "1000273"  [label="AST: "];
"1000276" -> "1000273"  [label="CFG: "];
"1000273" -> "1000509"  [label="DDG: end"];
"1000273" -> "1000509"  [label="DDG: source"];
"1000266" -> "1000273"  [label="DDG: end"];
"1000266" -> "1000264"  [label="AST: "];
"1000266" -> "1000268"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="AST: "];
"1000264" -> "1000266"  [label="CFG: "];
"1000266" -> "1000264"  [label="DDG: end"];
"1000266" -> "1000264"  [label="DDG: source"];
"1000254" -> "1000266"  [label="DDG: end"];
"1000254" -> "1000266"  [label="DDG: source"];
"1000266" -> "1000269"  [label="DDG: source"];
"1000254" -> "1000253"  [label="AST: "];
"1000254" -> "1000256"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000256" -> "1000254"  [label="AST: "];
"1000258" -> "1000254"  [label="CFG: "];
"1000254" -> "1000253"  [label="DDG: end"];
"1000254" -> "1000253"  [label="DDG: source"];
"1000210" -> "1000209"  [label="AST: "];
"1000210" -> "1000212"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="AST: "];
"1000213" -> "1000210"  [label="CFG: "];
"1000218" -> "1000210"  [label="CFG: "];
"1000210" -> "1000509"  [label="DDG: source == end"];
"1000210" -> "1000509"  [label="DDG: end"];
"1000210" -> "1000509"  [label="DDG: source"];
"1000210" -> "1000225"  [label="DDG: source"];
"1000225" -> "1000224"  [label="AST: "];
"1000225" -> "1000226"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000224" -> "1000225"  [label="CFG: "];
"1000225" -> "1000509"  [label="DDG: source"];
"1000298" -> "1000174"  [label="AST: "];
"1000298" -> "1000300"  [label="CFG: "];
"1000299" -> "1000298"  [label="AST: "];
"1000300" -> "1000298"  [label="AST: "];
"1000304" -> "1000298"  [label="CFG: "];
"1000298" -> "1000509"  [label="DDG: count"];
"1000164" -> "1000139"  [label="AST: "];
"1000164" -> "1000166"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000166" -> "1000164"  [label="AST: "];
"1000168" -> "1000164"  [label="CFG: "];
"1000164" -> "1000509"  [label="DDG: source_for_handle_partial_sequence"];
"1000164" -> "1000509"  [label="DDG: source"];
"1000115" -> "1000106"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000122" -> "1000115"  [label="CFG: "];
"1000115" -> "1000509"  [label="DDG: reinterpret_cast<const uint8_t*>(bytes)"];
"1000117" -> "1000115"  [label="DDG: bytes"];
"1000115" -> "1000121"  [label="DDG: source"];
"1000115" -> "1000123"  [label="DDG: source"];
"1000117" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000117" -> "1000509"  [label="DDG: bytes"];
"1000101" -> "1000117"  [label="DDG: bytes"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000509"  [label="DDG: bytes"];
"1000129" -> "1000127"  [label="AST: "];
"1000129" -> "1000130"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000129" -> "1000127"  [label="DDG: end"];
"1000121" -> "1000129"  [label="DDG: end"];
"1000121" -> "1000106"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000128" -> "1000121"  [label="CFG: "];
"1000121" -> "1000509"  [label="DDG: source + length"];
"1000102" -> "1000121"  [label="DDG: length"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000509"  [label="DDG: length"];
"1000102" -> "1000123"  [label="DDG: length"];
"1000127" -> "1000106"  [label="AST: "];
"1000128" -> "1000127"  [label="AST: "];
"1000133" -> "1000127"  [label="CFG: "];
"1000127" -> "1000509"  [label="DDG: AlignToMachineWord(end)"];
"1000127" -> "1000509"  [label="DDG: aligned_end"];
"1000127" -> "1000379"  [label="DDG: aligned_end"];
"1000308" -> "1000135"  [label="AST: "];
"1000308" -> "1000309"  [label="CFG: "];
"1000308" -> "1000310"  [label="CFG: "];
"1000309" -> "1000308"  [label="AST: "];
"1000310" -> "1000308"  [label="AST: "];
"1000138" -> "1000308"  [label="CFG: "];
"1000313" -> "1000308"  [label="CFG: "];
"1000308" -> "1000509"  [label="DDG: partial_sequence_size_"];
"1000308" -> "1000509"  [label="DDG: do_flush"];
"1000308" -> "1000509"  [label="DDG: do_flush && partial_sequence_size_"];
"1000308" -> "1000262"  [label="DDG: partial_sequence_size_"];
"1000108" -> "1000308"  [label="DDG: do_flush"];
"1000269" -> "1000308"  [label="DDG: partial_sequence_size_"];
"1000308" -> "1000348"  [label="DDG: do_flush"];
"1000308" -> "1000456"  [label="DDG: partial_sequence_size_"];
"1000308" -> "1000503"  [label="DDG: do_flush"];
"1000308" -> "1000503"  [label="DDG: partial_sequence_size_"];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000110"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000110" -> "1000108"  [label="AST: "];
"1000116" -> "1000108"  [label="CFG: "];
"1000108" -> "1000509"  [label="DDG: flush != FlushBehavior::kDoNotFlush"];
"1000108" -> "1000509"  [label="DDG: do_flush"];
"1000110" -> "1000108"  [label="DDG: flush"];
"1000110" -> "1000108"  [label="DDG: FlushBehavior::kDoNotFlush"];
"1000108" -> "1000348"  [label="DDG: do_flush"];
"1000108" -> "1000503"  [label="DDG: do_flush"];
"1000110" -> "1000112"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000112" -> "1000110"  [label="AST: "];
"1000110" -> "1000509"  [label="DDG: FlushBehavior::kDoNotFlush"];
"1000110" -> "1000509"  [label="DDG: flush"];
"1000103" -> "1000110"  [label="DDG: flush"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000509"  [label="DDG: flush"];
"1000269" -> "1000251"  [label="AST: "];
"1000269" -> "1000272"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000271" -> "1000269"  [label="AST: "];
"1000272" -> "1000269"  [label="AST: "];
"1000274" -> "1000269"  [label="CFG: "];
"1000269" -> "1000509"  [label="DDG: memcpy(partial_sequence_, source, partial_sequence_size_)"];
"1000269" -> "1000509"  [label="DDG: partial_sequence_"];
"1000269" -> "1000509"  [label="DDG: partial_sequence_size_"];
"1000262" -> "1000269"  [label="DDG: partial_sequence_size_"];
"1000262" -> "1000261"  [label="AST: "];
"1000262" -> "1000263"  [label="CFG: "];
"1000263" -> "1000262"  [label="AST: "];
"1000261" -> "1000262"  [label="CFG: "];
"1000262" -> "1000261"  [label="DDG: partial_sequence_size_"];
"1000104" -> "1000100"  [label="AST: "];
"1000104" -> "1000509"  [label="DDG: stop_on_error"];
"1000104" -> "1000348"  [label="DDG: stop_on_error"];
"1000286" -> "1000285"  [label="AST: "];
"1000286" -> "1000288"  [label="CFG: "];
"1000287" -> "1000286"  [label="AST: "];
"1000288" -> "1000286"  [label="AST: "];
"1000290" -> "1000286"  [label="CFG: "];
"1000286" -> "1000509"  [label="DDG: saw_error"];
"1000286" -> "1000509"  [label="DDG: true"];
"1000105" -> "1000286"  [label="DDG: saw_error"];
"1000286" -> "1000348"  [label="DDG: saw_error"];
"1000105" -> "1000100"  [label="AST: "];
"1000105" -> "1000509"  [label="DDG: saw_error"];
"1000105" -> "1000348"  [label="DDG: saw_error"];
"1000105" -> "1000480"  [label="DDG: saw_error"];
"1000157" -> "1000156"  [label="AST: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000160" -> "1000157"  [label="CFG: "];
"1000157" -> "1000509"  [label="DDG: source_for_handle_partial_sequence"];
"1000157" -> "1000345"  [label="DDG: source"];
"1000157" -> "1000365"  [label="DDG: source"];
"1000345" -> "1000339"  [label="AST: "];
"1000345" -> "1000347"  [label="CFG: "];
"1000346" -> "1000345"  [label="AST: "];
"1000347" -> "1000345"  [label="AST: "];
"1000349" -> "1000345"  [label="CFG: "];
"1000404" -> "1000345"  [label="DDG: source"];
"1000467" -> "1000345"  [label="DDG: source"];
"1000473" -> "1000345"  [label="DDG: source"];
"1000365" -> "1000345"  [label="DDG: source"];
"1000491" -> "1000345"  [label="DDG: source"];
"1000419" -> "1000345"  [label="DDG: source"];
"1000379" -> "1000345"  [label="DDG: source"];
"1000345" -> "1000348"  [label="DDG: source_for_handle_partial_sequence"];
"1000348" -> "1000339"  [label="AST: "];
"1000348" -> "1000354"  [label="CFG: "];
"1000349" -> "1000348"  [label="AST: "];
"1000350" -> "1000348"  [label="AST: "];
"1000351" -> "1000348"  [label="AST: "];
"1000352" -> "1000348"  [label="AST: "];
"1000353" -> "1000348"  [label="AST: "];
"1000354" -> "1000348"  [label="AST: "];
"1000356" -> "1000348"  [label="CFG: "];
"1000348" -> "1000509"  [label="DDG: end"];
"1000348" -> "1000509"  [label="DDG: stop_on_error"];
"1000348" -> "1000509"  [label="DDG: HandlePartialSequence(destination_for_handle_partial_sequence,\n                            source_for_handle_partial_sequence, end, do_flush,\n                            stop_on_error, saw_error)"];
"1000348" -> "1000509"  [label="DDG: do_flush"];
"1000348" -> "1000509"  [label="DDG: saw_error"];
"1000341" -> "1000348"  [label="DDG: destination_for_handle_partial_sequence"];
"1000442" -> "1000348"  [label="DDG: end"];
"1000365" -> "1000348"  [label="DDG: end"];
"1000404" -> "1000348"  [label="DDG: end"];
"1000460" -> "1000348"  [label="DDG: end"];
"1000503" -> "1000348"  [label="DDG: do_flush"];
"1000480" -> "1000348"  [label="DDG: saw_error"];
"1000348" -> "1000355"  [label="DDG: destination_for_handle_partial_sequence"];
"1000348" -> "1000358"  [label="DDG: source_for_handle_partial_sequence"];
"1000348" -> "1000365"  [label="DDG: end"];
"1000348" -> "1000503"  [label="DDG: do_flush"];
"1000355" -> "1000339"  [label="AST: "];
"1000355" -> "1000357"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000357" -> "1000355"  [label="AST: "];
"1000359" -> "1000355"  [label="CFG: "];
"1000355" -> "1000509"  [label="DDG: destination16"];
"1000355" -> "1000509"  [label="DDG: destination_for_handle_partial_sequence"];
"1000355" -> "1000341"  [label="DDG: destination16"];
"1000355" -> "1000392"  [label="DDG: destination16"];
"1000355" -> "1000416"  [label="DDG: destination16"];
"1000355" -> "1000488"  [label="DDG: destination16"];
"1000355" -> "1000500"  [label="DDG: destination16"];
"1000341" -> "1000339"  [label="AST: "];
"1000341" -> "1000343"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="AST: "];
"1000346" -> "1000341"  [label="CFG: "];
"1000330" -> "1000341"  [label="DDG: destination16"];
"1000488" -> "1000341"  [label="DDG: destination16"];
"1000317" -> "1000341"  [label="DDG: destination16"];
"1000498" -> "1000341"  [label="DDG: destination16"];
"1000399" -> "1000341"  [label="DDG: destination16"];
"1000416" -> "1000341"  [label="DDG: destination16"];
"1000392" -> "1000382"  [label="AST: "];
"1000392" -> "1000394"  [label="CFG: "];
"1000393" -> "1000392"  [label="AST: "];
"1000394" -> "1000392"  [label="AST: "];
"1000396" -> "1000392"  [label="CFG: "];
"1000392" -> "1000509"  [label="DDG: CopyASCIIMachineWord(destination16, source)"];
"1000330" -> "1000392"  [label="DDG: destination16"];
"1000488" -> "1000392"  [label="DDG: destination16"];
"1000317" -> "1000392"  [label="DDG: destination16"];
"1000498" -> "1000392"  [label="DDG: destination16"];
"1000399" -> "1000392"  [label="DDG: destination16"];
"1000416" -> "1000392"  [label="DDG: destination16"];
"1000379" -> "1000392"  [label="DDG: source"];
"1000392" -> "1000395"  [label="DDG: source"];
"1000392" -> "1000399"  [label="DDG: destination16"];
"1000395" -> "1000382"  [label="AST: "];
"1000395" -> "1000397"  [label="CFG: "];
"1000396" -> "1000395"  [label="AST: "];
"1000397" -> "1000395"  [label="AST: "];
"1000400" -> "1000395"  [label="CFG: "];
"1000395" -> "1000379"  [label="DDG: source"];
"1000379" -> "1000378"  [label="AST: "];
"1000379" -> "1000381"  [label="CFG: "];
"1000380" -> "1000379"  [label="AST: "];
"1000381" -> "1000379"  [label="AST: "];
"1000383" -> "1000379"  [label="CFG: "];
"1000405" -> "1000379"  [label="CFG: "];
"1000379" -> "1000509"  [label="DDG: source"];
"1000379" -> "1000509"  [label="DDG: source < aligned_end"];
"1000379" -> "1000509"  [label="DDG: aligned_end"];
"1000379" -> "1000365"  [label="DDG: source"];
"1000375" -> "1000379"  [label="DDG: source"];
"1000379" -> "1000404"  [label="DDG: source"];
"1000365" -> "1000364"  [label="AST: "];
"1000365" -> "1000367"  [label="CFG: "];
"1000366" -> "1000365"  [label="AST: "];
"1000367" -> "1000365"  [label="AST: "];
"1000504" -> "1000365"  [label="CFG: "];
"1000372" -> "1000365"  [label="CFG: "];
"1000365" -> "1000509"  [label="DDG: source < end"];
"1000365" -> "1000509"  [label="DDG: end"];
"1000365" -> "1000509"  [label="DDG: source"];
"1000404" -> "1000365"  [label="DDG: source"];
"1000404" -> "1000365"  [label="DDG: end"];
"1000467" -> "1000365"  [label="DDG: source"];
"1000473" -> "1000365"  [label="DDG: source"];
"1000491" -> "1000365"  [label="DDG: source"];
"1000358" -> "1000365"  [label="DDG: source"];
"1000495" -> "1000365"  [label="DDG: source"];
"1000419" -> "1000365"  [label="DDG: source"];
"1000442" -> "1000365"  [label="DDG: end"];
"1000460" -> "1000365"  [label="DDG: end"];
"1000365" -> "1000375"  [label="DDG: source"];
"1000365" -> "1000404"  [label="DDG: end"];
"1000365" -> "1000442"  [label="DDG: end"];
"1000365" -> "1000442"  [label="DDG: source"];
"1000365" -> "1000491"  [label="DDG: source"];
"1000365" -> "1000495"  [label="DDG: source"];
"1000375" -> "1000374"  [label="AST: "];
"1000375" -> "1000376"  [label="CFG: "];
"1000376" -> "1000375"  [label="AST: "];
"1000380" -> "1000375"  [label="CFG: "];
"1000417" -> "1000375"  [label="CFG: "];
"1000375" -> "1000509"  [label="DDG: IsAlignedToMachineWord(source)"];
"1000375" -> "1000419"  [label="DDG: source"];
"1000419" -> "1000418"  [label="AST: "];
"1000419" -> "1000420"  [label="CFG: "];
"1000420" -> "1000419"  [label="AST: "];
"1000418" -> "1000419"  [label="CFG: "];
"1000419" -> "1000509"  [label="DDG: source"];
"1000404" -> "1000419"  [label="DDG: source"];
"1000404" -> "1000403"  [label="AST: "];
"1000404" -> "1000406"  [label="CFG: "];
"1000405" -> "1000404"  [label="AST: "];
"1000406" -> "1000404"  [label="AST: "];
"1000407" -> "1000404"  [label="CFG: "];
"1000412" -> "1000404"  [label="CFG: "];
"1000404" -> "1000509"  [label="DDG: source"];
"1000404" -> "1000509"  [label="DDG: source == end"];
"1000404" -> "1000509"  [label="DDG: end"];
"1000442" -> "1000440"  [label="AST: "];
"1000442" -> "1000444"  [label="CFG: "];
"1000443" -> "1000442"  [label="AST: "];
"1000444" -> "1000442"  [label="AST: "];
"1000440" -> "1000442"  [label="CFG: "];
"1000442" -> "1000509"  [label="DDG: end"];
"1000442" -> "1000440"  [label="DDG: end"];
"1000442" -> "1000440"  [label="DDG: source"];
"1000442" -> "1000448"  [label="DDG: end"];
"1000442" -> "1000448"  [label="DDG: source"];
"1000442" -> "1000473"  [label="DDG: source"];
"1000440" -> "1000439"  [label="AST: "];
"1000441" -> "1000440"  [label="AST: "];
"1000449" -> "1000440"  [label="CFG: "];
"1000472" -> "1000440"  [label="CFG: "];
"1000440" -> "1000509"  [label="DDG: end - source"];
"1000440" -> "1000509"  [label="DDG: count > end - source"];
"1000440" -> "1000509"  [label="DDG: count"];
"1000430" -> "1000440"  [label="DDG: count"];
"1000440" -> "1000473"  [label="DDG: count"];
"1000473" -> "1000471"  [label="AST: "];
"1000473" -> "1000475"  [label="CFG: "];
"1000474" -> "1000473"  [label="AST: "];
"1000475" -> "1000473"  [label="AST: "];
"1000471" -> "1000473"  [label="CFG: "];
"1000473" -> "1000509"  [label="DDG: source"];
"1000473" -> "1000509"  [label="DDG: count"];
"1000473" -> "1000471"  [label="DDG: source"];
"1000473" -> "1000471"  [label="DDG: count"];
"1000473" -> "1000491"  [label="DDG: source"];
"1000473" -> "1000495"  [label="DDG: count"];
"1000473" -> "1000495"  [label="DDG: source"];
"1000471" -> "1000438"  [label="AST: "];
"1000472" -> "1000471"  [label="AST: "];
"1000478" -> "1000471"  [label="CFG: "];
"1000471" -> "1000509"  [label="DDG: DecodeNonASCIISequence(source, count)"];
"1000471" -> "1000477"  [label="DDG: character"];
"1000477" -> "1000476"  [label="AST: "];
"1000477" -> "1000478"  [label="CFG: "];
"1000478" -> "1000477"  [label="AST: "];
"1000481" -> "1000477"  [label="CFG: "];
"1000496" -> "1000477"  [label="CFG: "];
"1000477" -> "1000509"  [label="DDG: IsNonCharacter(character)"];
"1000477" -> "1000509"  [label="DDG: character"];
"1000434" -> "1000477"  [label="DDG: character"];
"1000477" -> "1000491"  [label="DDG: character"];
"1000477" -> "1000500"  [label="DDG: character"];
"1000491" -> "1000479"  [label="AST: "];
"1000491" -> "1000493"  [label="CFG: "];
"1000492" -> "1000491"  [label="AST: "];
"1000493" -> "1000491"  [label="AST: "];
"1000494" -> "1000491"  [label="CFG: "];
"1000491" -> "1000509"  [label="DDG: character"];
"1000491" -> "1000509"  [label="DDG: source"];
"1000500" -> "1000498"  [label="AST: "];
"1000500" -> "1000502"  [label="CFG: "];
"1000501" -> "1000500"  [label="AST: "];
"1000502" -> "1000500"  [label="AST: "];
"1000498" -> "1000500"  [label="CFG: "];
"1000500" -> "1000509"  [label="DDG: character"];
"1000500" -> "1000498"  [label="DDG: destination16"];
"1000500" -> "1000498"  [label="DDG: character"];
"1000330" -> "1000500"  [label="DDG: destination16"];
"1000488" -> "1000500"  [label="DDG: destination16"];
"1000317" -> "1000500"  [label="DDG: destination16"];
"1000498" -> "1000500"  [label="DDG: destination16"];
"1000399" -> "1000500"  [label="DDG: destination16"];
"1000416" -> "1000500"  [label="DDG: destination16"];
"1000498" -> "1000368"  [label="AST: "];
"1000499" -> "1000498"  [label="AST: "];
"1000366" -> "1000498"  [label="CFG: "];
"1000498" -> "1000509"  [label="DDG: destination16"];
"1000498" -> "1000509"  [label="DDG: AppendCharacter(destination16, character)"];
"1000498" -> "1000416"  [label="DDG: destination16"];
"1000498" -> "1000488"  [label="DDG: destination16"];
"1000416" -> "1000415"  [label="AST: "];
"1000416" -> "1000417"  [label="CFG: "];
"1000417" -> "1000416"  [label="AST: "];
"1000415" -> "1000416"  [label="CFG: "];
"1000416" -> "1000509"  [label="DDG: destination16"];
"1000330" -> "1000416"  [label="DDG: destination16"];
"1000488" -> "1000416"  [label="DDG: destination16"];
"1000317" -> "1000416"  [label="DDG: destination16"];
"1000399" -> "1000416"  [label="DDG: destination16"];
"1000416" -> "1000488"  [label="DDG: destination16"];
"1000488" -> "1000487"  [label="AST: "];
"1000488" -> "1000489"  [label="CFG: "];
"1000489" -> "1000488"  [label="AST: "];
"1000487" -> "1000488"  [label="CFG: "];
"1000488" -> "1000509"  [label="DDG: destination16"];
"1000330" -> "1000488"  [label="DDG: destination16"];
"1000317" -> "1000488"  [label="DDG: destination16"];
"1000399" -> "1000488"  [label="DDG: destination16"];
"1000495" -> "1000368"  [label="AST: "];
"1000495" -> "1000497"  [label="CFG: "];
"1000496" -> "1000495"  [label="AST: "];
"1000497" -> "1000495"  [label="AST: "];
"1000499" -> "1000495"  [label="CFG: "];
"1000495" -> "1000509"  [label="DDG: count"];
"1000430" -> "1000495"  [label="DDG: count"];
"1000448" -> "1000447"  [label="AST: "];
"1000448" -> "1000450"  [label="CFG: "];
"1000449" -> "1000448"  [label="AST: "];
"1000450" -> "1000448"  [label="AST: "];
"1000452" -> "1000448"  [label="CFG: "];
"1000448" -> "1000447"  [label="DDG: end"];
"1000448" -> "1000447"  [label="DDG: source"];
"1000448" -> "1000460"  [label="DDG: end"];
"1000448" -> "1000460"  [label="DDG: source"];
"1000447" -> "1000446"  [label="AST: "];
"1000447" -> "1000451"  [label="CFG: "];
"1000451" -> "1000447"  [label="AST: "];
"1000446" -> "1000447"  [label="CFG: "];
"1000447" -> "1000509"  [label="DDG: static_cast<ptrdiff_t>(sizeof(partial_sequence_))"];
"1000447" -> "1000446"  [label="DDG: end - source"];
"1000447" -> "1000446"  [label="DDG: static_cast<ptrdiff_t>(sizeof(partial_sequence_))"];
"1000446" -> "1000445"  [label="AST: "];
"1000457" -> "1000446"  [label="CFG: "];
"1000446" -> "1000509"  [label="DDG: SECURITY_DCHECK(end - source <\n                          static_cast<ptrdiff_t>(sizeof(partial_sequence_)))"];
"1000446" -> "1000509"  [label="DDG: end - source <\n                          static_cast<ptrdiff_t>(sizeof(partial_sequence_))"];
"1000460" -> "1000458"  [label="AST: "];
"1000460" -> "1000462"  [label="CFG: "];
"1000461" -> "1000460"  [label="AST: "];
"1000462" -> "1000460"  [label="AST: "];
"1000458" -> "1000460"  [label="CFG: "];
"1000460" -> "1000458"  [label="DDG: end"];
"1000460" -> "1000458"  [label="DDG: source"];
"1000460" -> "1000463"  [label="DDG: source"];
"1000460" -> "1000467"  [label="DDG: end"];
"1000458" -> "1000445"  [label="AST: "];
"1000459" -> "1000458"  [label="AST: "];
"1000464" -> "1000458"  [label="CFG: "];
"1000458" -> "1000509"  [label="DDG: end - source"];
"1000458" -> "1000509"  [label="DDG: wtf_size_t"];
"1000458" -> "1000509"  [label="DDG: wtf_size_t>(end - source)"];
"1000264" -> "1000458"  [label="DDG: wtf_size_t"];
"1000463" -> "1000445"  [label="AST: "];
"1000463" -> "1000466"  [label="CFG: "];
"1000464" -> "1000463"  [label="AST: "];
"1000465" -> "1000463"  [label="AST: "];
"1000466" -> "1000463"  [label="AST: "];
"1000468" -> "1000463"  [label="CFG: "];
"1000463" -> "1000509"  [label="DDG: memcpy(partial_sequence_, source, partial_sequence_size_)"];
"1000463" -> "1000509"  [label="DDG: partial_sequence_"];
"1000463" -> "1000509"  [label="DDG: partial_sequence_size_"];
"1000456" -> "1000463"  [label="DDG: partial_sequence_size_"];
"1000463" -> "1000503"  [label="DDG: partial_sequence_size_"];
"1000503" -> "1000335"  [label="AST: "];
"1000503" -> "1000504"  [label="CFG: "];
"1000503" -> "1000505"  [label="CFG: "];
"1000504" -> "1000503"  [label="AST: "];
"1000505" -> "1000503"  [label="AST: "];
"1000338" -> "1000503"  [label="CFG: "];
"1000508" -> "1000503"  [label="CFG: "];
"1000503" -> "1000509"  [label="DDG: do_flush && partial_sequence_size_"];
"1000503" -> "1000509"  [label="DDG: partial_sequence_size_"];
"1000503" -> "1000509"  [label="DDG: do_flush"];
"1000503" -> "1000456"  [label="DDG: partial_sequence_size_"];
"1000456" -> "1000455"  [label="AST: "];
"1000456" -> "1000457"  [label="CFG: "];
"1000457" -> "1000456"  [label="AST: "];
"1000455" -> "1000456"  [label="CFG: "];
"1000456" -> "1000455"  [label="DDG: partial_sequence_size_"];
"1000455" -> "1000445"  [label="AST: "];
"1000459" -> "1000455"  [label="CFG: "];
"1000455" -> "1000509"  [label="DDG: DCHECK(!partial_sequence_size_)"];
"1000455" -> "1000509"  [label="DDG: !partial_sequence_size_"];
"1000467" -> "1000445"  [label="AST: "];
"1000467" -> "1000469"  [label="CFG: "];
"1000468" -> "1000467"  [label="AST: "];
"1000469" -> "1000467"  [label="AST: "];
"1000470" -> "1000467"  [label="CFG: "];
"1000467" -> "1000509"  [label="DDG: source"];
"1000467" -> "1000509"  [label="DDG: end"];
"1000399" -> "1000382"  [label="AST: "];
"1000399" -> "1000401"  [label="CFG: "];
"1000400" -> "1000399"  [label="AST: "];
"1000401" -> "1000399"  [label="AST: "];
"1000380" -> "1000399"  [label="CFG: "];
"1000399" -> "1000509"  [label="DDG: destination16"];
"1000358" -> "1000339"  [label="AST: "];
"1000358" -> "1000360"  [label="CFG: "];
"1000359" -> "1000358"  [label="AST: "];
"1000360" -> "1000358"  [label="AST: "];
"1000362" -> "1000358"  [label="CFG: "];
"1000358" -> "1000509"  [label="DDG: source_for_handle_partial_sequence"];
"1000358" -> "1000509"  [label="DDG: source"];
"1000325" -> "1000320"  [label="AST: "];
"1000325" -> "1000327"  [label="CFG: "];
"1000326" -> "1000325"  [label="AST: "];
"1000327" -> "1000325"  [label="AST: "];
"1000331" -> "1000325"  [label="CFG: "];
"1000338" -> "1000325"  [label="CFG: "];
"1000325" -> "1000509"  [label="DDG: converted8"];
"1000325" -> "1000509"  [label="DDG: converted8 < destination"];
"1000325" -> "1000509"  [label="DDG: destination"];
"1000333" -> "1000325"  [label="DDG: converted8"];
"1000322" -> "1000325"  [label="DDG: converted8"];
"1000325" -> "1000333"  [label="DDG: converted8"];
"1000333" -> "1000332"  [label="AST: "];
"1000333" -> "1000334"  [label="CFG: "];
"1000334" -> "1000333"  [label="AST: "];
"1000332" -> "1000333"  [label="CFG: "];
"1000277" -> "1000244"  [label="AST: "];
"1000278" -> "1000277"  [label="AST: "];
"1000284" -> "1000277"  [label="CFG: "];
"1000277" -> "1000509"  [label="DDG: DecodeNonASCIISequence(source, count)"];
"1000277" -> "1000283"  [label="DDG: character"];
"1000283" -> "1000282"  [label="AST: "];
"1000283" -> "1000284"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000287" -> "1000283"  [label="CFG: "];
"1000295" -> "1000283"  [label="CFG: "];
"1000283" -> "1000509"  [label="DDG: character"];
"1000283" -> "1000509"  [label="DDG: IsNonCharacter(character)"];
"1000240" -> "1000283"  [label="DDG: character"];
"1000283" -> "1000294"  [label="DDG: character"];
"1000294" -> "1000293"  [label="AST: "];
"1000294" -> "1000296"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000296" -> "1000294"  [label="AST: "];
"1000297" -> "1000294"  [label="CFG: "];
"1000299" -> "1000294"  [label="CFG: "];
"1000294" -> "1000509"  [label="DDG: character > 0xff"];
"1000294" -> "1000509"  [label="DDG: character"];
"1000294" -> "1000305"  [label="DDG: character"];
"1000305" -> "1000301"  [label="AST: "];
"1000305" -> "1000307"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000307" -> "1000305"  [label="AST: "];
"1000301" -> "1000305"  [label="CFG: "];
"1000305" -> "1000509"  [label="DDG: character"];
"1000305" -> "1000301"  [label="DDG: character"];
"1000301" -> "1000174"  [label="AST: "];
"1000302" -> "1000301"  [label="AST: "];
"1000172" -> "1000301"  [label="CFG: "];
"1000301" -> "1000509"  [label="DDG: static_cast<LChar>(character)"];
"1000301" -> "1000509"  [label="DDG: *destination++"];
"1000253" -> "1000252"  [label="AST: "];
"1000253" -> "1000257"  [label="CFG: "];
"1000257" -> "1000253"  [label="AST: "];
"1000252" -> "1000253"  [label="CFG: "];
"1000253" -> "1000509"  [label="DDG: static_cast<ptrdiff_t>(sizeof(partial_sequence_))"];
"1000253" -> "1000252"  [label="DDG: end - source"];
"1000253" -> "1000252"  [label="DDG: static_cast<ptrdiff_t>(sizeof(partial_sequence_))"];
"1000252" -> "1000251"  [label="AST: "];
"1000263" -> "1000252"  [label="CFG: "];
"1000252" -> "1000509"  [label="DDG: end - source <\n                          static_cast<ptrdiff_t>(sizeof(partial_sequence_))"];
"1000252" -> "1000509"  [label="DDG: SECURITY_DCHECK(end - source <\n                          static_cast<ptrdiff_t>(sizeof(partial_sequence_)))"];
"1000264" -> "1000251"  [label="AST: "];
"1000265" -> "1000264"  [label="AST: "];
"1000270" -> "1000264"  [label="CFG: "];
"1000264" -> "1000509"  [label="DDG: wtf_size_t"];
"1000264" -> "1000509"  [label="DDG: wtf_size_t>(end - source)"];
"1000264" -> "1000509"  [label="DDG: end - source"];
"1000261" -> "1000251"  [label="AST: "];
"1000265" -> "1000261"  [label="CFG: "];
"1000261" -> "1000509"  [label="DDG: !partial_sequence_size_"];
"1000261" -> "1000509"  [label="DDG: DCHECK(!partial_sequence_size_)"];
}
