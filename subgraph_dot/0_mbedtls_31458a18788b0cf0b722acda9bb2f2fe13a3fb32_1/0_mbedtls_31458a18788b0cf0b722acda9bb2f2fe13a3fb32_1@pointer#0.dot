digraph "0_mbedtls_31458a18788b0cf0b722acda9bb2f2fe13a3fb32_1@pointer" {
"1000191" [label="(Call,x509_profile_check_pk_alg( profile, child->sig_pk ))"];
"1000179" [label="(Call,x509_profile_check_md_alg( profile, child->sig_md ))"];
"1000115" [label="(MethodParameterIn,const mbedtls_x509_crt_profile *profile)"];
"1000190" [label="(Call,x509_profile_check_pk_alg( profile, child->sig_pk ) != 0)"];
"1000233" [label="(Call,x509_profile_check_key( profile, child->sig_pk, &parent->pk ))"];
"1000232" [label="(Call,x509_profile_check_key( profile, child->sig_pk, &parent->pk ) != 0)"];
"1000249" [label="(Call,mbedtls_pk_verify_ext( child->sig_pk, child->sig_opts, &parent->pk,\n                           child->sig_md, hash, mbedtls_md_get_size( md_info ),\n                           child->sig.p, child->sig.len ))"];
"1000248" [label="(Call,mbedtls_pk_verify_ext( child->sig_pk, child->sig_opts, &parent->pk,\n                           child->sig_md, hash, mbedtls_md_get_size( md_info ),\n                           child->sig.p, child->sig.len ) != 0)"];
"1000285" [label="(Call,x509_crt_verifycrl(child, parent, ca_crl, profile ))"];
"1000282" [label="(Call,*flags |= x509_crt_verifycrl(child, parent, ca_crl, profile ))"];
"1000452" [label="(Call,*flags |= parent_flags)"];
"1000305" [label="(Call,x509_crt_check_parent( parent, grandparent,\n                                   0, path_cnt == 0 ))"];
"1000304" [label="(Call,x509_crt_check_parent( parent, grandparent,\n                                   0, path_cnt == 0 ) == 0)"];
"1000315" [label="(Call,grandparent != NULL)"];
"1000321" [label="(Call,x509_crt_verify_top( parent, grandparent, ca_crl, profile,\n                                path_cnt + 1, self_cnt, &parent_flags, f_vrfy, p_vrfy ))"];
"1000319" [label="(Call,ret = x509_crt_verify_top( parent, grandparent, ca_crl, profile,\n                                path_cnt + 1, self_cnt, &parent_flags, f_vrfy, p_vrfy ))"];
"1000335" [label="(Call,ret != 0)"];
"1000338" [label="(Return,return( ret );)"];
"1000437" [label="(Call,NULL != f_vrfy)"];
"1000444" [label="(Call,f_vrfy( p_vrfy, child, path_cnt, flags ))"];
"1000441" [label="(Call,( ret = f_vrfy( p_vrfy, child, path_cnt, flags ) ) != 0)"];
"1000442" [label="(Call,ret = f_vrfy( p_vrfy, child, path_cnt, flags ))"];
"1000450" [label="(Return,return( ret );)"];
"1000348" [label="(Call,grandparent != NULL)"];
"1000377" [label="(Call,x509_crt_check_parent( parent, grandparent,\n                                       0, path_cnt == 0 ))"];
"1000376" [label="(Call,x509_crt_check_parent( parent, grandparent,\n                                       0, path_cnt == 0 ) == 0)"];
"1000387" [label="(Call,grandparent != NULL)"];
"1000393" [label="(Call,x509_crt_verify_child( parent, grandparent, trust_ca, ca_crl,\n                                         profile, path_cnt + 1, self_cnt, &parent_flags,\n                                         f_vrfy, p_vrfy ))"];
"1000391" [label="(Call,ret = x509_crt_verify_child( parent, grandparent, trust_ca, ca_crl,\n                                         profile, path_cnt + 1, self_cnt, &parent_flags,\n                                         f_vrfy, p_vrfy ))"];
"1000408" [label="(Call,ret != 0)"];
"1000411" [label="(Return,return( ret );)"];
"1000417" [label="(Call,x509_crt_verify_top( parent, trust_ca, ca_crl, profile,\n                                       path_cnt + 1, self_cnt, &parent_flags,\n                                       f_vrfy, p_vrfy ))"];
"1000415" [label="(Call,ret = x509_crt_verify_top( parent, trust_ca, ca_crl, profile,\n                                       path_cnt + 1, self_cnt, &parent_flags,\n                                       f_vrfy, p_vrfy ))"];
"1000431" [label="(Call,ret != 0)"];
"1000434" [label="(Return,return( ret );)"];
"1000292" [label="(Identifier,grandparent)"];
"1000242" [label="(Literal,0)"];
"1000326" [label="(Call,path_cnt + 1)"];
"1000385" [label="(ControlStructure,break;)"];
"1000243" [label="(Call,*flags |= MBEDTLS_X509_BADCERT_BAD_KEY)"];
"1000445" [label="(Identifier,p_vrfy)"];
"1000315" [label="(Call,grandparent != NULL)"];
"1000349" [label="(Identifier,grandparent)"];
"1000314" [label="(ControlStructure,if( grandparent != NULL ))"];
"1000232" [label="(Call,x509_profile_check_key( profile, child->sig_pk, &parent->pk ) != 0)"];
"1000422" [label="(Call,path_cnt + 1)"];
"1000212" [label="(Call,*flags |= MBEDTLS_X509_BADCERT_NOT_TRUSTED)"];
"1000386" [label="(ControlStructure,if( grandparent != NULL ))"];
"1000381" [label="(Call,path_cnt == 0)"];
"1000380" [label="(Literal,0)"];
"1000117" [label="(MethodParameterIn,int self_cnt)"];
"1000271" [label="(Call,child->sig.len)"];
"1000118" [label="(MethodParameterIn,uint32_t *flags)"];
"1000390" [label="(Block,)"];
"1000146" [label="(Call,self_cnt++)"];
"1000124" [label="(Call,parent_flags = 0)"];
"1000441" [label="(Call,( ret = f_vrfy( p_vrfy, child, path_cnt, flags ) ) != 0)"];
"1000178" [label="(Call,x509_profile_check_md_alg( profile, child->sig_md ) != 0)"];
"1000402" [label="(Identifier,self_cnt)"];
"1000410" [label="(Literal,0)"];
"1000344" [label="(Identifier,grandparent)"];
"1000304" [label="(Call,x509_crt_check_parent( parent, grandparent,\n                                   0, path_cnt == 0 ) == 0)"];
"1000233" [label="(Call,x509_profile_check_key( profile, child->sig_pk, &parent->pk ))"];
"1000116" [label="(MethodParameterIn,int path_cnt)"];
"1000454" [label="(Identifier,flags)"];
"1000426" [label="(Call,&parent_flags)"];
"1000115" [label="(MethodParameterIn,const mbedtls_x509_crt_profile *profile)"];
"1000179" [label="(Call,x509_profile_check_md_alg( profile, child->sig_md ))"];
"1000306" [label="(Identifier,parent)"];
"1000114" [label="(MethodParameterIn,mbedtls_x509_crl *ca_crl)"];
"1000313" [label="(ControlStructure,break;)"];
"1000132" [label="(Call,path_cnt != 0)"];
"1000447" [label="(Identifier,path_cnt)"];
"1000234" [label="(Identifier,profile)"];
"1000431" [label="(Call,ret != 0)"];
"1000395" [label="(Identifier,grandparent)"];
"1000379" [label="(Identifier,grandparent)"];
"1000352" [label="(Identifier,grandparent)"];
"1000325" [label="(Identifier,profile)"];
"1000287" [label="(Identifier,parent)"];
"1000321" [label="(Call,x509_crt_verify_top( parent, grandparent, ca_crl, profile,\n                                path_cnt + 1, self_cnt, &parent_flags, f_vrfy, p_vrfy ))"];
"1000319" [label="(Call,ret = x509_crt_verify_top( parent, grandparent, ca_crl, profile,\n                                path_cnt + 1, self_cnt, &parent_flags, f_vrfy, p_vrfy ))"];
"1000247" [label="(ControlStructure,if( mbedtls_pk_verify_ext( child->sig_pk, child->sig_opts, &parent->pk,\n                           child->sig_md, hash, mbedtls_md_get_size( md_info ),\n                           child->sig.p, child->sig.len ) != 0 ))"];
"1000334" [label="(ControlStructure,if( ret != 0 ))"];
"1000335" [label="(Call,ret != 0)"];
"1000446" [label="(Identifier,child)"];
"1000256" [label="(Call,&parent->pk)"];
"1000398" [label="(Identifier,profile)"];
"1000458" [label="(MethodReturn,static int)"];
"1000248" [label="(Call,mbedtls_pk_verify_ext( child->sig_pk, child->sig_opts, &parent->pk,\n                           child->sig_md, hash, mbedtls_md_get_size( md_info ),\n                           child->sig.p, child->sig.len ) != 0)"];
"1000414" [label="(Block,)"];
"1000323" [label="(Identifier,grandparent)"];
"1000443" [label="(Identifier,ret)"];
"1000189" [label="(ControlStructure,if( x509_profile_check_pk_alg( profile, child->sig_pk ) != 0 ))"];
"1000251" [label="(Identifier,child)"];
"1000453" [label="(Call,*flags)"];
"1000120" [label="(MethodParameterIn,void *p_vrfy)"];
"1000432" [label="(Identifier,ret)"];
"1000406" [label="(Identifier,p_vrfy)"];
"1000119" [label="(MethodParameterIn,int (*f_vrfy)(void *, mbedtls_x509_crt *, int, uint32_t *))"];
"1000457" [label="(Literal,0)"];
"1000309" [label="(Call,path_cnt == 0)"];
"1000308" [label="(Literal,0)"];
"1000264" [label="(Call,mbedtls_md_get_size( md_info ))"];
"1000245" [label="(Identifier,flags)"];
"1000452" [label="(Call,*flags |= parent_flags)"];
"1000375" [label="(ControlStructure,if( x509_crt_check_parent( parent, grandparent,\n                                       0, path_cnt == 0 ) == 0 ))"];
"1000433" [label="(Literal,0)"];
"1000451" [label="(Identifier,ret)"];
"1000407" [label="(ControlStructure,if( ret != 0 ))"];
"1000428" [label="(Identifier,f_vrfy)"];
"1000263" [label="(Identifier,hash)"];
"1000438" [label="(Identifier,NULL)"];
"1000288" [label="(Identifier,ca_crl)"];
"1000192" [label="(Identifier,profile)"];
"1000343" [label="(Call,grandparent = parent->next)"];
"1000260" [label="(Call,child->sig_md)"];
"1000231" [label="(ControlStructure,if( x509_profile_check_key( profile, child->sig_pk, &parent->pk ) != 0 ))"];
"1000361" [label="(Identifier,grandparent)"];
"1000405" [label="(Identifier,f_vrfy)"];
"1000378" [label="(Identifier,parent)"];
"1000351" [label="(Call,grandparent = grandparent->next)"];
"1000425" [label="(Identifier,self_cnt)"];
"1000318" [label="(Block,)"];
"1000285" [label="(Call,x509_crt_verifycrl(child, parent, ca_crl, profile ))"];
"1000444" [label="(Call,f_vrfy( p_vrfy, child, path_cnt, flags ))"];
"1000348" [label="(Call,grandparent != NULL)"];
"1000436" [label="(ControlStructure,if( NULL != f_vrfy ))"];
"1000387" [label="(Call,grandparent != NULL)"];
"1000250" [label="(Call,child->sig_pk)"];
"1000370" [label="(Call,path_cnt - self_cnt)"];
"1000437" [label="(Call,NULL != f_vrfy)"];
"1000330" [label="(Call,&parent_flags)"];
"1000294" [label="(Call,grandparent != NULL)"];
"1000249" [label="(Call,mbedtls_pk_verify_ext( child->sig_pk, child->sig_opts, &parent->pk,\n                           child->sig_md, hash, mbedtls_md_get_size( md_info ),\n                           child->sig.p, child->sig.len ))"];
"1000448" [label="(Identifier,flags)"];
"1000303" [label="(ControlStructure,if( x509_crt_check_parent( parent, grandparent,\n                                   0, path_cnt == 0 ) == 0 ))"];
"1000111" [label="(MethodParameterIn,mbedtls_x509_crt *child)"];
"1000305" [label="(Call,x509_crt_check_parent( parent, grandparent,\n                                   0, path_cnt == 0 ))"];
"1000190" [label="(Call,x509_profile_check_pk_alg( profile, child->sig_pk ) != 0)"];
"1000337" [label="(Literal,0)"];
"1000449" [label="(Literal,0)"];
"1000289" [label="(Identifier,profile)"];
"1000393" [label="(Call,x509_crt_verify_child( parent, grandparent, trust_ca, ca_crl,\n                                         profile, path_cnt + 1, self_cnt, &parent_flags,\n                                         f_vrfy, p_vrfy ))"];
"1000320" [label="(Identifier,ret)"];
"1000376" [label="(Call,x509_crt_check_parent( parent, grandparent,\n                                       0, path_cnt == 0 ) == 0)"];
"1000409" [label="(Identifier,ret)"];
"1000421" [label="(Identifier,profile)"];
"1000282" [label="(Call,*flags |= x509_crt_verifycrl(child, parent, ca_crl, profile ))"];
"1000329" [label="(Identifier,self_cnt)"];
"1000253" [label="(Call,child->sig_opts)"];
"1000338" [label="(Return,return( ret );)"];
"1000283" [label="(Call,*flags)"];
"1000408" [label="(Call,ret != 0)"];
"1000280" [label="(Identifier,flags)"];
"1000420" [label="(Identifier,ca_crl)"];
"1000276" [label="(Literal,0)"];
"1000417" [label="(Call,x509_crt_verify_top( parent, trust_ca, ca_crl, profile,\n                                       path_cnt + 1, self_cnt, &parent_flags,\n                                       f_vrfy, p_vrfy ))"];
"1000317" [label="(Identifier,NULL)"];
"1000336" [label="(Identifier,ret)"];
"1000394" [label="(Identifier,parent)"];
"1000403" [label="(Call,&parent_flags)"];
"1000389" [label="(Identifier,NULL)"];
"1000121" [label="(Block,)"];
"1000384" [label="(Literal,0)"];
"1000342" [label="(ControlStructure,for( grandparent = parent->next;\n             grandparent != NULL;\n             grandparent = grandparent->next ))"];
"1000324" [label="(Identifier,ca_crl)"];
"1000392" [label="(Identifier,ret)"];
"1000278" [label="(Call,*flags |= MBEDTLS_X509_BADCERT_NOT_TRUSTED)"];
"1000439" [label="(Identifier,f_vrfy)"];
"1000197" [label="(Call,*flags |= MBEDTLS_X509_BADCERT_BAD_PK)"];
"1000388" [label="(Identifier,grandparent)"];
"1000307" [label="(Identifier,grandparent)"];
"1000196" [label="(Literal,0)"];
"1000316" [label="(Identifier,grandparent)"];
"1000191" [label="(Call,x509_profile_check_pk_alg( profile, child->sig_pk ))"];
"1000411" [label="(Return,return( ret );)"];
"1000416" [label="(Identifier,ret)"];
"1000332" [label="(Identifier,f_vrfy)"];
"1000180" [label="(Identifier,profile)"];
"1000284" [label="(Identifier,flags)"];
"1000286" [label="(Identifier,child)"];
"1000113" [label="(MethodParameterIn,mbedtls_x509_crt *trust_ca)"];
"1000184" [label="(Literal,0)"];
"1000418" [label="(Identifier,parent)"];
"1000203" [label="(Call,mbedtls_md_info_from_type( child->sig_md ))"];
"1000298" [label="(Identifier,grandparent)"];
"1000312" [label="(Literal,0)"];
"1000391" [label="(Call,ret = x509_crt_verify_child( parent, grandparent, trust_ca, ca_crl,\n                                         profile, path_cnt + 1, self_cnt, &parent_flags,\n                                         f_vrfy, p_vrfy ))"];
"1000419" [label="(Identifier,trust_ca)"];
"1000396" [label="(Identifier,trust_ca)"];
"1000266" [label="(Call,child->sig.p)"];
"1000112" [label="(MethodParameterIn,mbedtls_x509_crt *parent)"];
"1000377" [label="(Call,x509_crt_check_parent( parent, grandparent,\n                                       0, path_cnt == 0 ))"];
"1000429" [label="(Identifier,p_vrfy)"];
"1000163" [label="(Call,*flags |= MBEDTLS_X509_BADCERT_EXPIRED)"];
"1000235" [label="(Call,child->sig_pk)"];
"1000322" [label="(Identifier,parent)"];
"1000397" [label="(Identifier,ca_crl)"];
"1000202" [label="(Identifier,md_info)"];
"1000350" [label="(Identifier,NULL)"];
"1000238" [label="(Call,&parent->pk)"];
"1000399" [label="(Call,path_cnt + 1)"];
"1000434" [label="(Return,return( ret );)"];
"1000450" [label="(Return,return( ret );)"];
"1000430" [label="(ControlStructure,if( ret != 0 ))"];
"1000412" [label="(Identifier,ret)"];
"1000440" [label="(ControlStructure,if( ( ret = f_vrfy( p_vrfy, child, path_cnt, flags ) ) != 0 ))"];
"1000455" [label="(Identifier,parent_flags)"];
"1000218" [label="(Call,mbedtls_md( md_info, child->tbs.p, child->tbs.len, hash ))"];
"1000173" [label="(Call,*flags |= MBEDTLS_X509_BADCERT_FUTURE)"];
"1000333" [label="(Identifier,p_vrfy)"];
"1000339" [label="(Identifier,ret)"];
"1000415" [label="(Call,ret = x509_crt_verify_top( parent, trust_ca, ca_crl, profile,\n                                       path_cnt + 1, self_cnt, &parent_flags,\n                                       f_vrfy, p_vrfy ))"];
"1000442" [label="(Call,ret = f_vrfy( p_vrfy, child, path_cnt, flags ))"];
"1000185" [label="(Call,*flags |= MBEDTLS_X509_BADCERT_BAD_MD)"];
"1000199" [label="(Identifier,flags)"];
"1000193" [label="(Call,child->sig_pk)"];
"1000435" [label="(Identifier,ret)"];
"1000181" [label="(Call,child->sig_md)"];
"1000191" -> "1000190"  [label="AST: "];
"1000191" -> "1000193"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000193" -> "1000191"  [label="AST: "];
"1000196" -> "1000191"  [label="CFG: "];
"1000191" -> "1000458"  [label="DDG: child->sig_pk"];
"1000191" -> "1000190"  [label="DDG: profile"];
"1000191" -> "1000190"  [label="DDG: child->sig_pk"];
"1000179" -> "1000191"  [label="DDG: profile"];
"1000115" -> "1000191"  [label="DDG: profile"];
"1000191" -> "1000233"  [label="DDG: profile"];
"1000191" -> "1000233"  [label="DDG: child->sig_pk"];
"1000191" -> "1000285"  [label="DDG: profile"];
"1000179" -> "1000178"  [label="AST: "];
"1000179" -> "1000181"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000181" -> "1000179"  [label="AST: "];
"1000184" -> "1000179"  [label="CFG: "];
"1000179" -> "1000178"  [label="DDG: profile"];
"1000179" -> "1000178"  [label="DDG: child->sig_md"];
"1000115" -> "1000179"  [label="DDG: profile"];
"1000179" -> "1000203"  [label="DDG: child->sig_md"];
"1000115" -> "1000110"  [label="AST: "];
"1000115" -> "1000458"  [label="DDG: profile"];
"1000115" -> "1000233"  [label="DDG: profile"];
"1000115" -> "1000285"  [label="DDG: profile"];
"1000115" -> "1000321"  [label="DDG: profile"];
"1000115" -> "1000393"  [label="DDG: profile"];
"1000115" -> "1000417"  [label="DDG: profile"];
"1000190" -> "1000189"  [label="AST: "];
"1000190" -> "1000196"  [label="CFG: "];
"1000196" -> "1000190"  [label="AST: "];
"1000199" -> "1000190"  [label="CFG: "];
"1000202" -> "1000190"  [label="CFG: "];
"1000190" -> "1000458"  [label="DDG: x509_profile_check_pk_alg( profile, child->sig_pk ) != 0"];
"1000190" -> "1000458"  [label="DDG: x509_profile_check_pk_alg( profile, child->sig_pk )"];
"1000233" -> "1000232"  [label="AST: "];
"1000233" -> "1000238"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000235" -> "1000233"  [label="AST: "];
"1000238" -> "1000233"  [label="AST: "];
"1000242" -> "1000233"  [label="CFG: "];
"1000233" -> "1000232"  [label="DDG: profile"];
"1000233" -> "1000232"  [label="DDG: child->sig_pk"];
"1000233" -> "1000232"  [label="DDG: &parent->pk"];
"1000233" -> "1000249"  [label="DDG: child->sig_pk"];
"1000233" -> "1000249"  [label="DDG: &parent->pk"];
"1000233" -> "1000285"  [label="DDG: profile"];
"1000232" -> "1000231"  [label="AST: "];
"1000232" -> "1000242"  [label="CFG: "];
"1000242" -> "1000232"  [label="AST: "];
"1000245" -> "1000232"  [label="CFG: "];
"1000251" -> "1000232"  [label="CFG: "];
"1000232" -> "1000458"  [label="DDG: x509_profile_check_key( profile, child->sig_pk, &parent->pk )"];
"1000232" -> "1000458"  [label="DDG: x509_profile_check_key( profile, child->sig_pk, &parent->pk ) != 0"];
"1000249" -> "1000248"  [label="AST: "];
"1000249" -> "1000271"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000253" -> "1000249"  [label="AST: "];
"1000256" -> "1000249"  [label="AST: "];
"1000260" -> "1000249"  [label="AST: "];
"1000263" -> "1000249"  [label="AST: "];
"1000264" -> "1000249"  [label="AST: "];
"1000266" -> "1000249"  [label="AST: "];
"1000271" -> "1000249"  [label="AST: "];
"1000276" -> "1000249"  [label="CFG: "];
"1000249" -> "1000458"  [label="DDG: child->sig_md"];
"1000249" -> "1000458"  [label="DDG: child->sig_opts"];
"1000249" -> "1000458"  [label="DDG: mbedtls_md_get_size( md_info )"];
"1000249" -> "1000458"  [label="DDG: hash"];
"1000249" -> "1000458"  [label="DDG: child->sig.p"];
"1000249" -> "1000458"  [label="DDG: child->sig_pk"];
"1000249" -> "1000458"  [label="DDG: &parent->pk"];
"1000249" -> "1000458"  [label="DDG: child->sig.len"];
"1000249" -> "1000248"  [label="DDG: child->sig_opts"];
"1000249" -> "1000248"  [label="DDG: mbedtls_md_get_size( md_info )"];
"1000249" -> "1000248"  [label="DDG: child->sig_pk"];
"1000249" -> "1000248"  [label="DDG: child->sig.len"];
"1000249" -> "1000248"  [label="DDG: child->sig.p"];
"1000249" -> "1000248"  [label="DDG: hash"];
"1000249" -> "1000248"  [label="DDG: &parent->pk"];
"1000249" -> "1000248"  [label="DDG: child->sig_md"];
"1000203" -> "1000249"  [label="DDG: child->sig_md"];
"1000218" -> "1000249"  [label="DDG: hash"];
"1000264" -> "1000249"  [label="DDG: md_info"];
"1000248" -> "1000247"  [label="AST: "];
"1000248" -> "1000276"  [label="CFG: "];
"1000276" -> "1000248"  [label="AST: "];
"1000280" -> "1000248"  [label="CFG: "];
"1000284" -> "1000248"  [label="CFG: "];
"1000248" -> "1000458"  [label="DDG: mbedtls_pk_verify_ext( child->sig_pk, child->sig_opts, &parent->pk,\n                           child->sig_md, hash, mbedtls_md_get_size( md_info ),\n                           child->sig.p, child->sig.len ) != 0"];
"1000248" -> "1000458"  [label="DDG: mbedtls_pk_verify_ext( child->sig_pk, child->sig_opts, &parent->pk,\n                           child->sig_md, hash, mbedtls_md_get_size( md_info ),\n                           child->sig.p, child->sig.len )"];
"1000285" -> "1000282"  [label="AST: "];
"1000285" -> "1000289"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000285"  [label="AST: "];
"1000288" -> "1000285"  [label="AST: "];
"1000289" -> "1000285"  [label="AST: "];
"1000282" -> "1000285"  [label="CFG: "];
"1000285" -> "1000458"  [label="DDG: child"];
"1000285" -> "1000282"  [label="DDG: child"];
"1000285" -> "1000282"  [label="DDG: parent"];
"1000285" -> "1000282"  [label="DDG: ca_crl"];
"1000285" -> "1000282"  [label="DDG: profile"];
"1000111" -> "1000285"  [label="DDG: child"];
"1000112" -> "1000285"  [label="DDG: parent"];
"1000114" -> "1000285"  [label="DDG: ca_crl"];
"1000285" -> "1000305"  [label="DDG: parent"];
"1000285" -> "1000321"  [label="DDG: parent"];
"1000285" -> "1000321"  [label="DDG: ca_crl"];
"1000285" -> "1000321"  [label="DDG: profile"];
"1000285" -> "1000377"  [label="DDG: parent"];
"1000285" -> "1000393"  [label="DDG: parent"];
"1000285" -> "1000393"  [label="DDG: profile"];
"1000285" -> "1000393"  [label="DDG: ca_crl"];
"1000285" -> "1000417"  [label="DDG: parent"];
"1000285" -> "1000417"  [label="DDG: ca_crl"];
"1000285" -> "1000417"  [label="DDG: profile"];
"1000285" -> "1000444"  [label="DDG: child"];
"1000282" -> "1000121"  [label="AST: "];
"1000283" -> "1000282"  [label="AST: "];
"1000292" -> "1000282"  [label="CFG: "];
"1000282" -> "1000458"  [label="DDG: x509_crt_verifycrl(child, parent, ca_crl, profile )"];
"1000282" -> "1000458"  [label="DDG: *flags |= x509_crt_verifycrl(child, parent, ca_crl, profile )"];
"1000282" -> "1000458"  [label="DDG: *flags"];
"1000212" -> "1000282"  [label="DDG: *flags"];
"1000243" -> "1000282"  [label="DDG: *flags"];
"1000278" -> "1000282"  [label="DDG: *flags"];
"1000173" -> "1000282"  [label="DDG: *flags"];
"1000197" -> "1000282"  [label="DDG: *flags"];
"1000163" -> "1000282"  [label="DDG: *flags"];
"1000185" -> "1000282"  [label="DDG: *flags"];
"1000282" -> "1000452"  [label="DDG: *flags"];
"1000452" -> "1000121"  [label="AST: "];
"1000452" -> "1000455"  [label="CFG: "];
"1000453" -> "1000452"  [label="AST: "];
"1000455" -> "1000452"  [label="AST: "];
"1000457" -> "1000452"  [label="CFG: "];
"1000452" -> "1000458"  [label="DDG: parent_flags"];
"1000452" -> "1000458"  [label="DDG: *flags |= parent_flags"];
"1000452" -> "1000458"  [label="DDG: *flags"];
"1000124" -> "1000452"  [label="DDG: parent_flags"];
"1000305" -> "1000304"  [label="AST: "];
"1000305" -> "1000309"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000307" -> "1000305"  [label="AST: "];
"1000308" -> "1000305"  [label="AST: "];
"1000309" -> "1000305"  [label="AST: "];
"1000312" -> "1000305"  [label="CFG: "];
"1000305" -> "1000458"  [label="DDG: path_cnt == 0"];
"1000305" -> "1000304"  [label="DDG: parent"];
"1000305" -> "1000304"  [label="DDG: grandparent"];
"1000305" -> "1000304"  [label="DDG: 0"];
"1000305" -> "1000304"  [label="DDG: path_cnt == 0"];
"1000112" -> "1000305"  [label="DDG: parent"];
"1000294" -> "1000305"  [label="DDG: grandparent"];
"1000309" -> "1000305"  [label="DDG: path_cnt"];
"1000309" -> "1000305"  [label="DDG: 0"];
"1000305" -> "1000315"  [label="DDG: grandparent"];
"1000305" -> "1000321"  [label="DDG: parent"];
"1000305" -> "1000377"  [label="DDG: parent"];
"1000305" -> "1000393"  [label="DDG: parent"];
"1000305" -> "1000417"  [label="DDG: parent"];
"1000304" -> "1000303"  [label="AST: "];
"1000304" -> "1000312"  [label="CFG: "];
"1000312" -> "1000304"  [label="AST: "];
"1000313" -> "1000304"  [label="CFG: "];
"1000298" -> "1000304"  [label="CFG: "];
"1000304" -> "1000458"  [label="DDG: x509_crt_check_parent( parent, grandparent,\n                                   0, path_cnt == 0 ) == 0"];
"1000304" -> "1000458"  [label="DDG: x509_crt_check_parent( parent, grandparent,\n                                   0, path_cnt == 0 )"];
"1000315" -> "1000314"  [label="AST: "];
"1000315" -> "1000317"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000317" -> "1000315"  [label="AST: "];
"1000320" -> "1000315"  [label="CFG: "];
"1000344" -> "1000315"  [label="CFG: "];
"1000315" -> "1000458"  [label="DDG: grandparent != NULL"];
"1000315" -> "1000458"  [label="DDG: NULL"];
"1000294" -> "1000315"  [label="DDG: grandparent"];
"1000294" -> "1000315"  [label="DDG: NULL"];
"1000315" -> "1000321"  [label="DDG: grandparent"];
"1000315" -> "1000348"  [label="DDG: NULL"];
"1000315" -> "1000437"  [label="DDG: NULL"];
"1000321" -> "1000319"  [label="AST: "];
"1000321" -> "1000333"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000323" -> "1000321"  [label="AST: "];
"1000324" -> "1000321"  [label="AST: "];
"1000325" -> "1000321"  [label="AST: "];
"1000326" -> "1000321"  [label="AST: "];
"1000329" -> "1000321"  [label="AST: "];
"1000330" -> "1000321"  [label="AST: "];
"1000332" -> "1000321"  [label="AST: "];
"1000333" -> "1000321"  [label="AST: "];
"1000319" -> "1000321"  [label="CFG: "];
"1000321" -> "1000458"  [label="DDG: path_cnt + 1"];
"1000321" -> "1000458"  [label="DDG: p_vrfy"];
"1000321" -> "1000458"  [label="DDG: f_vrfy"];
"1000321" -> "1000458"  [label="DDG: self_cnt"];
"1000321" -> "1000458"  [label="DDG: &parent_flags"];
"1000321" -> "1000458"  [label="DDG: ca_crl"];
"1000321" -> "1000458"  [label="DDG: parent"];
"1000321" -> "1000458"  [label="DDG: profile"];
"1000321" -> "1000458"  [label="DDG: grandparent"];
"1000321" -> "1000319"  [label="DDG: parent"];
"1000321" -> "1000319"  [label="DDG: self_cnt"];
"1000321" -> "1000319"  [label="DDG: &parent_flags"];
"1000321" -> "1000319"  [label="DDG: path_cnt + 1"];
"1000321" -> "1000319"  [label="DDG: f_vrfy"];
"1000321" -> "1000319"  [label="DDG: p_vrfy"];
"1000321" -> "1000319"  [label="DDG: ca_crl"];
"1000321" -> "1000319"  [label="DDG: grandparent"];
"1000321" -> "1000319"  [label="DDG: profile"];
"1000112" -> "1000321"  [label="DDG: parent"];
"1000114" -> "1000321"  [label="DDG: ca_crl"];
"1000309" -> "1000321"  [label="DDG: path_cnt"];
"1000116" -> "1000321"  [label="DDG: path_cnt"];
"1000132" -> "1000321"  [label="DDG: path_cnt"];
"1000146" -> "1000321"  [label="DDG: self_cnt"];
"1000117" -> "1000321"  [label="DDG: self_cnt"];
"1000119" -> "1000321"  [label="DDG: f_vrfy"];
"1000120" -> "1000321"  [label="DDG: p_vrfy"];
"1000321" -> "1000437"  [label="DDG: f_vrfy"];
"1000321" -> "1000444"  [label="DDG: p_vrfy"];
"1000319" -> "1000318"  [label="AST: "];
"1000320" -> "1000319"  [label="AST: "];
"1000336" -> "1000319"  [label="CFG: "];
"1000319" -> "1000458"  [label="DDG: x509_crt_verify_top( parent, grandparent, ca_crl, profile,\n                                path_cnt + 1, self_cnt, &parent_flags, f_vrfy, p_vrfy )"];
"1000319" -> "1000335"  [label="DDG: ret"];
"1000335" -> "1000334"  [label="AST: "];
"1000335" -> "1000337"  [label="CFG: "];
"1000336" -> "1000335"  [label="AST: "];
"1000337" -> "1000335"  [label="AST: "];
"1000339" -> "1000335"  [label="CFG: "];
"1000438" -> "1000335"  [label="CFG: "];
"1000335" -> "1000458"  [label="DDG: ret"];
"1000335" -> "1000458"  [label="DDG: ret != 0"];
"1000335" -> "1000338"  [label="DDG: ret"];
"1000338" -> "1000334"  [label="AST: "];
"1000338" -> "1000339"  [label="CFG: "];
"1000339" -> "1000338"  [label="AST: "];
"1000458" -> "1000338"  [label="CFG: "];
"1000338" -> "1000458"  [label="DDG: <RET>"];
"1000339" -> "1000338"  [label="DDG: ret"];
"1000437" -> "1000436"  [label="AST: "];
"1000437" -> "1000439"  [label="CFG: "];
"1000438" -> "1000437"  [label="AST: "];
"1000439" -> "1000437"  [label="AST: "];
"1000443" -> "1000437"  [label="CFG: "];
"1000454" -> "1000437"  [label="CFG: "];
"1000437" -> "1000458"  [label="DDG: NULL != f_vrfy"];
"1000437" -> "1000458"  [label="DDG: NULL"];
"1000437" -> "1000458"  [label="DDG: f_vrfy"];
"1000387" -> "1000437"  [label="DDG: NULL"];
"1000417" -> "1000437"  [label="DDG: f_vrfy"];
"1000393" -> "1000437"  [label="DDG: f_vrfy"];
"1000119" -> "1000437"  [label="DDG: f_vrfy"];
"1000444" -> "1000442"  [label="AST: "];
"1000444" -> "1000448"  [label="CFG: "];
"1000445" -> "1000444"  [label="AST: "];
"1000446" -> "1000444"  [label="AST: "];
"1000447" -> "1000444"  [label="AST: "];
"1000448" -> "1000444"  [label="AST: "];
"1000442" -> "1000444"  [label="CFG: "];
"1000444" -> "1000458"  [label="DDG: child"];
"1000444" -> "1000458"  [label="DDG: path_cnt"];
"1000444" -> "1000458"  [label="DDG: p_vrfy"];
"1000444" -> "1000458"  [label="DDG: flags"];
"1000444" -> "1000441"  [label="DDG: p_vrfy"];
"1000444" -> "1000441"  [label="DDG: child"];
"1000444" -> "1000441"  [label="DDG: path_cnt"];
"1000444" -> "1000441"  [label="DDG: flags"];
"1000444" -> "1000442"  [label="DDG: p_vrfy"];
"1000444" -> "1000442"  [label="DDG: child"];
"1000444" -> "1000442"  [label="DDG: path_cnt"];
"1000444" -> "1000442"  [label="DDG: flags"];
"1000393" -> "1000444"  [label="DDG: p_vrfy"];
"1000417" -> "1000444"  [label="DDG: p_vrfy"];
"1000120" -> "1000444"  [label="DDG: p_vrfy"];
"1000111" -> "1000444"  [label="DDG: child"];
"1000116" -> "1000444"  [label="DDG: path_cnt"];
"1000309" -> "1000444"  [label="DDG: path_cnt"];
"1000381" -> "1000444"  [label="DDG: path_cnt"];
"1000370" -> "1000444"  [label="DDG: path_cnt"];
"1000132" -> "1000444"  [label="DDG: path_cnt"];
"1000118" -> "1000444"  [label="DDG: flags"];
"1000441" -> "1000440"  [label="AST: "];
"1000441" -> "1000449"  [label="CFG: "];
"1000442" -> "1000441"  [label="AST: "];
"1000449" -> "1000441"  [label="AST: "];
"1000451" -> "1000441"  [label="CFG: "];
"1000454" -> "1000441"  [label="CFG: "];
"1000441" -> "1000458"  [label="DDG: ( ret = f_vrfy( p_vrfy, child, path_cnt, flags ) ) != 0"];
"1000442" -> "1000441"  [label="DDG: ret"];
"1000443" -> "1000442"  [label="AST: "];
"1000449" -> "1000442"  [label="CFG: "];
"1000442" -> "1000458"  [label="DDG: ret"];
"1000442" -> "1000458"  [label="DDG: f_vrfy( p_vrfy, child, path_cnt, flags )"];
"1000442" -> "1000450"  [label="DDG: ret"];
"1000450" -> "1000440"  [label="AST: "];
"1000450" -> "1000451"  [label="CFG: "];
"1000451" -> "1000450"  [label="AST: "];
"1000458" -> "1000450"  [label="CFG: "];
"1000450" -> "1000458"  [label="DDG: <RET>"];
"1000451" -> "1000450"  [label="DDG: ret"];
"1000348" -> "1000342"  [label="AST: "];
"1000348" -> "1000350"  [label="CFG: "];
"1000349" -> "1000348"  [label="AST: "];
"1000350" -> "1000348"  [label="AST: "];
"1000361" -> "1000348"  [label="CFG: "];
"1000388" -> "1000348"  [label="CFG: "];
"1000343" -> "1000348"  [label="DDG: grandparent"];
"1000351" -> "1000348"  [label="DDG: grandparent"];
"1000348" -> "1000377"  [label="DDG: grandparent"];
"1000348" -> "1000387"  [label="DDG: grandparent"];
"1000348" -> "1000387"  [label="DDG: NULL"];
"1000377" -> "1000376"  [label="AST: "];
"1000377" -> "1000381"  [label="CFG: "];
"1000378" -> "1000377"  [label="AST: "];
"1000379" -> "1000377"  [label="AST: "];
"1000380" -> "1000377"  [label="AST: "];
"1000381" -> "1000377"  [label="AST: "];
"1000384" -> "1000377"  [label="CFG: "];
"1000377" -> "1000458"  [label="DDG: path_cnt == 0"];
"1000377" -> "1000376"  [label="DDG: parent"];
"1000377" -> "1000376"  [label="DDG: grandparent"];
"1000377" -> "1000376"  [label="DDG: 0"];
"1000377" -> "1000376"  [label="DDG: path_cnt == 0"];
"1000112" -> "1000377"  [label="DDG: parent"];
"1000381" -> "1000377"  [label="DDG: path_cnt"];
"1000381" -> "1000377"  [label="DDG: 0"];
"1000377" -> "1000387"  [label="DDG: grandparent"];
"1000377" -> "1000393"  [label="DDG: parent"];
"1000377" -> "1000417"  [label="DDG: parent"];
"1000376" -> "1000375"  [label="AST: "];
"1000376" -> "1000384"  [label="CFG: "];
"1000384" -> "1000376"  [label="AST: "];
"1000385" -> "1000376"  [label="CFG: "];
"1000352" -> "1000376"  [label="CFG: "];
"1000376" -> "1000458"  [label="DDG: x509_crt_check_parent( parent, grandparent,\n                                       0, path_cnt == 0 ) == 0"];
"1000376" -> "1000458"  [label="DDG: x509_crt_check_parent( parent, grandparent,\n                                       0, path_cnt == 0 )"];
"1000387" -> "1000386"  [label="AST: "];
"1000387" -> "1000389"  [label="CFG: "];
"1000388" -> "1000387"  [label="AST: "];
"1000389" -> "1000387"  [label="AST: "];
"1000392" -> "1000387"  [label="CFG: "];
"1000416" -> "1000387"  [label="CFG: "];
"1000387" -> "1000458"  [label="DDG: NULL"];
"1000387" -> "1000458"  [label="DDG: grandparent"];
"1000387" -> "1000458"  [label="DDG: grandparent != NULL"];
"1000387" -> "1000393"  [label="DDG: grandparent"];
"1000393" -> "1000391"  [label="AST: "];
"1000393" -> "1000406"  [label="CFG: "];
"1000394" -> "1000393"  [label="AST: "];
"1000395" -> "1000393"  [label="AST: "];
"1000396" -> "1000393"  [label="AST: "];
"1000397" -> "1000393"  [label="AST: "];
"1000398" -> "1000393"  [label="AST: "];
"1000399" -> "1000393"  [label="AST: "];
"1000402" -> "1000393"  [label="AST: "];
"1000403" -> "1000393"  [label="AST: "];
"1000405" -> "1000393"  [label="AST: "];
"1000406" -> "1000393"  [label="AST: "];
"1000391" -> "1000393"  [label="CFG: "];
"1000393" -> "1000458"  [label="DDG: trust_ca"];
"1000393" -> "1000458"  [label="DDG: ca_crl"];
"1000393" -> "1000458"  [label="DDG: parent"];
"1000393" -> "1000458"  [label="DDG: f_vrfy"];
"1000393" -> "1000458"  [label="DDG: profile"];
"1000393" -> "1000458"  [label="DDG: self_cnt"];
"1000393" -> "1000458"  [label="DDG: &parent_flags"];
"1000393" -> "1000458"  [label="DDG: p_vrfy"];
"1000393" -> "1000458"  [label="DDG: path_cnt + 1"];
"1000393" -> "1000458"  [label="DDG: grandparent"];
"1000393" -> "1000391"  [label="DDG: grandparent"];
"1000393" -> "1000391"  [label="DDG: profile"];
"1000393" -> "1000391"  [label="DDG: self_cnt"];
"1000393" -> "1000391"  [label="DDG: f_vrfy"];
"1000393" -> "1000391"  [label="DDG: p_vrfy"];
"1000393" -> "1000391"  [label="DDG: path_cnt + 1"];
"1000393" -> "1000391"  [label="DDG: parent"];
"1000393" -> "1000391"  [label="DDG: &parent_flags"];
"1000393" -> "1000391"  [label="DDG: trust_ca"];
"1000393" -> "1000391"  [label="DDG: ca_crl"];
"1000112" -> "1000393"  [label="DDG: parent"];
"1000370" -> "1000393"  [label="DDG: self_cnt"];
"1000370" -> "1000393"  [label="DDG: path_cnt"];
"1000146" -> "1000393"  [label="DDG: self_cnt"];
"1000117" -> "1000393"  [label="DDG: self_cnt"];
"1000119" -> "1000393"  [label="DDG: f_vrfy"];
"1000120" -> "1000393"  [label="DDG: p_vrfy"];
"1000113" -> "1000393"  [label="DDG: trust_ca"];
"1000114" -> "1000393"  [label="DDG: ca_crl"];
"1000309" -> "1000393"  [label="DDG: path_cnt"];
"1000381" -> "1000393"  [label="DDG: path_cnt"];
"1000116" -> "1000393"  [label="DDG: path_cnt"];
"1000132" -> "1000393"  [label="DDG: path_cnt"];
"1000391" -> "1000390"  [label="AST: "];
"1000392" -> "1000391"  [label="AST: "];
"1000409" -> "1000391"  [label="CFG: "];
"1000391" -> "1000458"  [label="DDG: x509_crt_verify_child( parent, grandparent, trust_ca, ca_crl,\n                                         profile, path_cnt + 1, self_cnt, &parent_flags,\n                                         f_vrfy, p_vrfy )"];
"1000391" -> "1000408"  [label="DDG: ret"];
"1000408" -> "1000407"  [label="AST: "];
"1000408" -> "1000410"  [label="CFG: "];
"1000409" -> "1000408"  [label="AST: "];
"1000410" -> "1000408"  [label="AST: "];
"1000412" -> "1000408"  [label="CFG: "];
"1000438" -> "1000408"  [label="CFG: "];
"1000408" -> "1000458"  [label="DDG: ret"];
"1000408" -> "1000458"  [label="DDG: ret != 0"];
"1000408" -> "1000411"  [label="DDG: ret"];
"1000411" -> "1000407"  [label="AST: "];
"1000411" -> "1000412"  [label="CFG: "];
"1000412" -> "1000411"  [label="AST: "];
"1000458" -> "1000411"  [label="CFG: "];
"1000411" -> "1000458"  [label="DDG: <RET>"];
"1000412" -> "1000411"  [label="DDG: ret"];
"1000417" -> "1000415"  [label="AST: "];
"1000417" -> "1000429"  [label="CFG: "];
"1000418" -> "1000417"  [label="AST: "];
"1000419" -> "1000417"  [label="AST: "];
"1000420" -> "1000417"  [label="AST: "];
"1000421" -> "1000417"  [label="AST: "];
"1000422" -> "1000417"  [label="AST: "];
"1000425" -> "1000417"  [label="AST: "];
"1000426" -> "1000417"  [label="AST: "];
"1000428" -> "1000417"  [label="AST: "];
"1000429" -> "1000417"  [label="AST: "];
"1000415" -> "1000417"  [label="CFG: "];
"1000417" -> "1000458"  [label="DDG: f_vrfy"];
"1000417" -> "1000458"  [label="DDG: ca_crl"];
"1000417" -> "1000458"  [label="DDG: &parent_flags"];
"1000417" -> "1000458"  [label="DDG: path_cnt + 1"];
"1000417" -> "1000458"  [label="DDG: self_cnt"];
"1000417" -> "1000458"  [label="DDG: parent"];
"1000417" -> "1000458"  [label="DDG: profile"];
"1000417" -> "1000458"  [label="DDG: trust_ca"];
"1000417" -> "1000458"  [label="DDG: p_vrfy"];
"1000417" -> "1000415"  [label="DDG: &parent_flags"];
"1000417" -> "1000415"  [label="DDG: p_vrfy"];
"1000417" -> "1000415"  [label="DDG: parent"];
"1000417" -> "1000415"  [label="DDG: trust_ca"];
"1000417" -> "1000415"  [label="DDG: ca_crl"];
"1000417" -> "1000415"  [label="DDG: profile"];
"1000417" -> "1000415"  [label="DDG: self_cnt"];
"1000417" -> "1000415"  [label="DDG: path_cnt + 1"];
"1000417" -> "1000415"  [label="DDG: f_vrfy"];
"1000112" -> "1000417"  [label="DDG: parent"];
"1000113" -> "1000417"  [label="DDG: trust_ca"];
"1000114" -> "1000417"  [label="DDG: ca_crl"];
"1000309" -> "1000417"  [label="DDG: path_cnt"];
"1000381" -> "1000417"  [label="DDG: path_cnt"];
"1000370" -> "1000417"  [label="DDG: path_cnt"];
"1000370" -> "1000417"  [label="DDG: self_cnt"];
"1000116" -> "1000417"  [label="DDG: path_cnt"];
"1000132" -> "1000417"  [label="DDG: path_cnt"];
"1000146" -> "1000417"  [label="DDG: self_cnt"];
"1000117" -> "1000417"  [label="DDG: self_cnt"];
"1000119" -> "1000417"  [label="DDG: f_vrfy"];
"1000120" -> "1000417"  [label="DDG: p_vrfy"];
"1000415" -> "1000414"  [label="AST: "];
"1000416" -> "1000415"  [label="AST: "];
"1000432" -> "1000415"  [label="CFG: "];
"1000415" -> "1000458"  [label="DDG: x509_crt_verify_top( parent, trust_ca, ca_crl, profile,\n                                       path_cnt + 1, self_cnt, &parent_flags,\n                                       f_vrfy, p_vrfy )"];
"1000415" -> "1000431"  [label="DDG: ret"];
"1000431" -> "1000430"  [label="AST: "];
"1000431" -> "1000433"  [label="CFG: "];
"1000432" -> "1000431"  [label="AST: "];
"1000433" -> "1000431"  [label="AST: "];
"1000435" -> "1000431"  [label="CFG: "];
"1000438" -> "1000431"  [label="CFG: "];
"1000431" -> "1000458"  [label="DDG: ret"];
"1000431" -> "1000458"  [label="DDG: ret != 0"];
"1000431" -> "1000434"  [label="DDG: ret"];
"1000434" -> "1000430"  [label="AST: "];
"1000434" -> "1000435"  [label="CFG: "];
"1000435" -> "1000434"  [label="AST: "];
"1000458" -> "1000434"  [label="CFG: "];
"1000434" -> "1000458"  [label="DDG: <RET>"];
"1000435" -> "1000434"  [label="DDG: ret"];
}
