digraph "0_savannah_bc8102405fda11ea00ca3b42acc4f4bce9d6e97b_0@API" {
"1000237" [label="(Call,ret = _gnutls_cipher_decrypt (&session->connection_state.\n\t\t\t\t\t read_cipher_state,\n\t\t\t\t\t ciphertext.data,\n\t\t\t\t\t ciphertext.size))"];
"1000239" [label="(Call,_gnutls_cipher_decrypt (&session->connection_state.\n\t\t\t\t\t read_cipher_state,\n\t\t\t\t\t ciphertext.data,\n\t\t\t\t\t ciphertext.size))"];
"1000225" [label="(Call,ciphertext.size % blocksize)"];
"1000219" [label="(Call,ciphertext.size < blocksize)"];
"1000236" [label="(Call,(ret = _gnutls_cipher_decrypt (&session->connection_state.\n\t\t\t\t\t read_cipher_state,\n\t\t\t\t\t ciphertext.data,\n\t\t\t\t\t ciphertext.size)) < 0)"];
"1000255" [label="(Return,return ret;)"];
"1000487" [label="(MethodReturn,RET)"];
"1000457" [label="(Call,memcmp (MAC, &ciphertext.data[length], hash_size))"];
"1000246" [label="(Call,ciphertext.data)"];
"1000218" [label="(Call,(ciphertext.size < blocksize) || (ciphertext.size % blocksize != 0))"];
"1000479" [label="(Call,memcpy (compress_data, ciphertext.data, length))"];
"1000236" [label="(Call,(ret = _gnutls_cipher_decrypt (&session->connection_state.\n\t\t\t\t\t read_cipher_state,\n\t\t\t\t\t ciphertext.data,\n\t\t\t\t\t ciphertext.size)) < 0)"];
"1000238" [label="(Identifier,ret)"];
"1000271" [label="(Call,ciphertext.data += blocksize)"];
"1000237" [label="(Call,ret = _gnutls_cipher_decrypt (&session->connection_state.\n\t\t\t\t\t read_cipher_state,\n\t\t\t\t\t ciphertext.data,\n\t\t\t\t\t ciphertext.size))"];
"1000255" [label="(Return,return ret;)"];
"1000223" [label="(Identifier,blocksize)"];
"1000249" [label="(Call,ciphertext.size)"];
"1000240" [label="(Call,&session->connection_state.\n\t\t\t\t\t read_cipher_state)"];
"1000437" [label="(Call,_gnutls_hmac (&td, ciphertext.data, length))"];
"1000220" [label="(Call,ciphertext.size)"];
"1000230" [label="(Literal,0)"];
"1000224" [label="(Call,ciphertext.size % blocksize != 0)"];
"1000256" [label="(Identifier,ret)"];
"1000266" [label="(Call,ciphertext.size -= blocksize)"];
"1000235" [label="(ControlStructure,if ((ret = _gnutls_cipher_decrypt (&session->connection_state.\n\t\t\t\t\t read_cipher_state,\n\t\t\t\t\t ciphertext.data,\n\t\t\t\t\t ciphertext.size)) < 0))"];
"1000254" [label="(Call,gnutls_assert ())"];
"1000293" [label="(Call,ciphertext.size - 1)"];
"1000225" [label="(Call,ciphertext.size % blocksize)"];
"1000253" [label="(Block,)"];
"1000219" [label="(Call,ciphertext.size < blocksize)"];
"1000229" [label="(Identifier,blocksize)"];
"1000239" [label="(Call,_gnutls_cipher_decrypt (&session->connection_state.\n\t\t\t\t\t read_cipher_state,\n\t\t\t\t\t ciphertext.data,\n\t\t\t\t\t ciphertext.size))"];
"1000226" [label="(Call,ciphertext.size)"];
"1000227" [label="(Identifier,ciphertext)"];
"1000261" [label="(Identifier,session)"];
"1000252" [label="(Literal,0)"];
"1000237" -> "1000236"  [label="AST: "];
"1000237" -> "1000239"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000239" -> "1000237"  [label="AST: "];
"1000252" -> "1000237"  [label="CFG: "];
"1000237" -> "1000487"  [label="DDG: _gnutls_cipher_decrypt (&session->connection_state.\n\t\t\t\t\t read_cipher_state,\n\t\t\t\t\t ciphertext.data,\n\t\t\t\t\t ciphertext.size)"];
"1000237" -> "1000487"  [label="DDG: ret"];
"1000237" -> "1000236"  [label="DDG: ret"];
"1000239" -> "1000237"  [label="DDG: &session->connection_state.\n\t\t\t\t\t read_cipher_state"];
"1000239" -> "1000237"  [label="DDG: ciphertext.data"];
"1000239" -> "1000237"  [label="DDG: ciphertext.size"];
"1000237" -> "1000255"  [label="DDG: ret"];
"1000239" -> "1000249"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000246" -> "1000239"  [label="AST: "];
"1000249" -> "1000239"  [label="AST: "];
"1000239" -> "1000487"  [label="DDG: &session->connection_state.\n\t\t\t\t\t read_cipher_state"];
"1000239" -> "1000487"  [label="DDG: ciphertext.data"];
"1000239" -> "1000487"  [label="DDG: ciphertext.size"];
"1000239" -> "1000236"  [label="DDG: &session->connection_state.\n\t\t\t\t\t read_cipher_state"];
"1000239" -> "1000236"  [label="DDG: ciphertext.data"];
"1000239" -> "1000236"  [label="DDG: ciphertext.size"];
"1000225" -> "1000239"  [label="DDG: ciphertext.size"];
"1000219" -> "1000239"  [label="DDG: ciphertext.size"];
"1000239" -> "1000266"  [label="DDG: ciphertext.size"];
"1000239" -> "1000271"  [label="DDG: ciphertext.data"];
"1000239" -> "1000293"  [label="DDG: ciphertext.size"];
"1000239" -> "1000437"  [label="DDG: ciphertext.data"];
"1000239" -> "1000457"  [label="DDG: ciphertext.data"];
"1000239" -> "1000479"  [label="DDG: ciphertext.data"];
"1000225" -> "1000224"  [label="AST: "];
"1000225" -> "1000229"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000229" -> "1000225"  [label="AST: "];
"1000230" -> "1000225"  [label="CFG: "];
"1000225" -> "1000487"  [label="DDG: ciphertext.size"];
"1000225" -> "1000487"  [label="DDG: blocksize"];
"1000225" -> "1000224"  [label="DDG: ciphertext.size"];
"1000225" -> "1000224"  [label="DDG: blocksize"];
"1000219" -> "1000225"  [label="DDG: ciphertext.size"];
"1000219" -> "1000225"  [label="DDG: blocksize"];
"1000225" -> "1000266"  [label="DDG: blocksize"];
"1000225" -> "1000271"  [label="DDG: blocksize"];
"1000219" -> "1000218"  [label="AST: "];
"1000219" -> "1000223"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000223" -> "1000219"  [label="AST: "];
"1000227" -> "1000219"  [label="CFG: "];
"1000218" -> "1000219"  [label="CFG: "];
"1000219" -> "1000487"  [label="DDG: blocksize"];
"1000219" -> "1000487"  [label="DDG: ciphertext.size"];
"1000219" -> "1000218"  [label="DDG: ciphertext.size"];
"1000219" -> "1000218"  [label="DDG: blocksize"];
"1000219" -> "1000266"  [label="DDG: blocksize"];
"1000219" -> "1000271"  [label="DDG: blocksize"];
"1000236" -> "1000235"  [label="AST: "];
"1000236" -> "1000252"  [label="CFG: "];
"1000252" -> "1000236"  [label="AST: "];
"1000254" -> "1000236"  [label="CFG: "];
"1000261" -> "1000236"  [label="CFG: "];
"1000236" -> "1000487"  [label="DDG: (ret = _gnutls_cipher_decrypt (&session->connection_state.\n\t\t\t\t\t read_cipher_state,\n\t\t\t\t\t ciphertext.data,\n\t\t\t\t\t ciphertext.size)) < 0"];
"1000255" -> "1000253"  [label="AST: "];
"1000255" -> "1000256"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000487" -> "1000255"  [label="CFG: "];
"1000255" -> "1000487"  [label="DDG: <RET>"];
"1000256" -> "1000255"  [label="DDG: ret"];
}
