digraph "0_FFmpeg_547d690d676064069d44703a1917e0dab7e33445@pointer" {
"1000775" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_GBRP14)"];
"1000813" [label="(Call,av_dlog(f->avctx, \"%d %d %d\n\",\n            f->chroma_h_shift, f->chroma_v_shift, f->avctx->pix_fmt))"];
"1000848" [label="(Call,av_log(f->avctx, AV_LOG_ERROR, \"read_quant_table error\n\"))"];
"1000954" [label="(Call,av_log(f->avctx, AV_LOG_ERROR, \"slice count %d is invalid\n\", f->slice_count))"];
"1001214" [label="(Call,av_log(f->avctx, AV_LOG_ERROR,\n                           \"quant_table_index out of range\n\"))"];
"1000553" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_YUV422P9)"];
"1000817" [label="(Literal,\"%d %d %d\n\")"];
"1000818" [label="(Call,f->chroma_h_shift)"];
"1000616" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_YUV422P10)"];
"1000941" [label="(Call,f->slice_count > (unsigned)MAX_SLICES)"];
"1000702" [label="(Call,f->chroma_h_shift || f->chroma_v_shift)"];
"1001214" [label="(Call,av_log(f->avctx, AV_LOG_ERROR,\n                           \"quant_table_index out of range\n\"))"];
"1000647" [label="(Call,16 * f->chroma_h_shift)"];
"1000814" [label="(Call,f->avctx)"];
"1000401" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_YUV440P)"];
"1000499" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_YUVA420P)"];
"1000832" [label="(Identifier,f)"];
"1000815" [label="(Identifier,f)"];
"1000666" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_YUV422P16)"];
"1001219" [label="(Literal,\"quant_table_index out of range\n\")"];
"1001215" [label="(Call,f->avctx)"];
"1000657" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_YUV444P16)"];
"1000767" [label="(ControlStructure,if (f->avctx->bits_per_raw_sample == 14))"];
"1000847" [label="(Block,)"];
"1000853" [label="(Literal,\"read_quant_table error\n\")"];
"1001295" [label="(MethodReturn,static int)"];
"1001213" [label="(Block,)"];
"1000562" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_YUV420P9)"];
"1000813" [label="(Call,av_dlog(f->avctx, \"%d %d %d\n\",\n            f->chroma_h_shift, f->chroma_v_shift, f->avctx->pix_fmt))"];
"1000775" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_GBRP14)"];
"1000419" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_YUV420P)"];
"1000625" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_YUV420P10)"];
"1000727" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_GBRP9)"];
"1000855" [label="(Identifier,AVERROR_INVALIDDATA)"];
"1000955" [label="(Call,f->avctx)"];
"1000544" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_YUV444P9)"];
"1000471" [label="(Call,16*f->chroma_h_shift)"];
"1000437" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_YUV410P)"];
"1000675" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_YUV420P16)"];
"1000954" [label="(Call,av_log(f->avctx, AV_LOG_ERROR, \"slice count %d is invalid\n\", f->slice_count))"];
"1000607" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_YUV444P10)"];
"1000958" [label="(Identifier,AV_LOG_ERROR)"];
"1000358" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_GRAY16)"];
"1000410" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_YUV422P)"];
"1000104" [label="(Block,)"];
"1000776" [label="(Call,f->avctx->pix_fmt)"];
"1000305" [label="(Call,f->chroma_v_shift = chroma_v_shift)"];
"1000849" [label="(Call,f->avctx)"];
"1000534" [label="(Call,16 * f->chroma_h_shift)"];
"1000382" [label="(Call,16 * f->chroma_h_shift)"];
"1000428" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_YUV411P)"];
"1001218" [label="(Identifier,AV_LOG_ERROR)"];
"1000597" [label="(Call,16 * f->chroma_h_shift)"];
"1000392" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_YUV444P)"];
"1000948" [label="(Call,f->slice_count <= 0)"];
"1000350" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_GRAY8)"];
"1000821" [label="(Call,f->chroma_v_shift)"];
"1000852" [label="(Identifier,AV_LOG_ERROR)"];
"1000848" [label="(Call,av_log(f->avctx, AV_LOG_ERROR, \"read_quant_table error\n\"))"];
"1001221" [label="(Identifier,AVERROR_INVALIDDATA)"];
"1000795" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_0RGB32)"];
"1000781" [label="(Identifier,AV_PIX_FMT_GBRP14)"];
"1000759" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_GBRP12)"];
"1000490" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_YUVA422P)"];
"1000481" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_YUVA444P)"];
"1000743" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_GBRP10)"];
"1000959" [label="(Literal,\"slice count %d is invalid\n\")"];
"1000964" [label="(Identifier,AVERROR_INVALIDDATA)"];
"1000787" [label="(Call,f->avctx->pix_fmt = AV_PIX_FMT_RGB32)"];
"1000953" [label="(Block,)"];
"1000960" [label="(Call,f->slice_count)"];
"1000300" [label="(Call,f->chroma_h_shift = chroma_h_shift)"];
"1000824" [label="(Call,f->avctx->pix_fmt)"];
"1000775" -> "1000767"  [label="AST: "];
"1000775" -> "1000781"  [label="CFG: "];
"1000776" -> "1000775"  [label="AST: "];
"1000781" -> "1000775"  [label="AST: "];
"1000815" -> "1000775"  [label="CFG: "];
"1000775" -> "1001295"  [label="DDG: "];
"1000775" -> "1000813"  [label="DDG: "];
"1000813" -> "1000104"  [label="AST: "];
"1000813" -> "1000824"  [label="CFG: "];
"1000814" -> "1000813"  [label="AST: "];
"1000817" -> "1000813"  [label="AST: "];
"1000818" -> "1000813"  [label="AST: "];
"1000821" -> "1000813"  [label="AST: "];
"1000824" -> "1000813"  [label="AST: "];
"1000832" -> "1000813"  [label="CFG: "];
"1000813" -> "1001295"  [label="DDG: "];
"1000813" -> "1001295"  [label="DDG: "];
"1000813" -> "1001295"  [label="DDG: "];
"1000813" -> "1001295"  [label="DDG: "];
"1000813" -> "1001295"  [label="DDG: "];
"1000597" -> "1000813"  [label="DDG: "];
"1000382" -> "1000813"  [label="DDG: "];
"1000534" -> "1000813"  [label="DDG: "];
"1000300" -> "1000813"  [label="DDG: "];
"1000647" -> "1000813"  [label="DDG: "];
"1000471" -> "1000813"  [label="DDG: "];
"1000702" -> "1000813"  [label="DDG: "];
"1000702" -> "1000813"  [label="DDG: "];
"1000305" -> "1000813"  [label="DDG: "];
"1000675" -> "1000813"  [label="DDG: "];
"1000350" -> "1000813"  [label="DDG: "];
"1000795" -> "1000813"  [label="DDG: "];
"1000401" -> "1000813"  [label="DDG: "];
"1000657" -> "1000813"  [label="DDG: "];
"1000544" -> "1000813"  [label="DDG: "];
"1000727" -> "1000813"  [label="DDG: "];
"1000428" -> "1000813"  [label="DDG: "];
"1000787" -> "1000813"  [label="DDG: "];
"1000562" -> "1000813"  [label="DDG: "];
"1000625" -> "1000813"  [label="DDG: "];
"1000410" -> "1000813"  [label="DDG: "];
"1000616" -> "1000813"  [label="DDG: "];
"1000553" -> "1000813"  [label="DDG: "];
"1000743" -> "1000813"  [label="DDG: "];
"1000759" -> "1000813"  [label="DDG: "];
"1000437" -> "1000813"  [label="DDG: "];
"1000607" -> "1000813"  [label="DDG: "];
"1000419" -> "1000813"  [label="DDG: "];
"1000392" -> "1000813"  [label="DDG: "];
"1000490" -> "1000813"  [label="DDG: "];
"1000499" -> "1000813"  [label="DDG: "];
"1000666" -> "1000813"  [label="DDG: "];
"1000481" -> "1000813"  [label="DDG: "];
"1000358" -> "1000813"  [label="DDG: "];
"1000813" -> "1000848"  [label="DDG: "];
"1000813" -> "1000954"  [label="DDG: "];
"1000813" -> "1001214"  [label="DDG: "];
"1000848" -> "1000847"  [label="AST: "];
"1000848" -> "1000853"  [label="CFG: "];
"1000849" -> "1000848"  [label="AST: "];
"1000852" -> "1000848"  [label="AST: "];
"1000853" -> "1000848"  [label="AST: "];
"1000855" -> "1000848"  [label="CFG: "];
"1000848" -> "1001295"  [label="DDG: "];
"1000848" -> "1001295"  [label="DDG: "];
"1000848" -> "1001295"  [label="DDG: "];
"1000954" -> "1000953"  [label="AST: "];
"1000954" -> "1000960"  [label="CFG: "];
"1000955" -> "1000954"  [label="AST: "];
"1000958" -> "1000954"  [label="AST: "];
"1000959" -> "1000954"  [label="AST: "];
"1000960" -> "1000954"  [label="AST: "];
"1000964" -> "1000954"  [label="CFG: "];
"1000954" -> "1001295"  [label="DDG: "];
"1000954" -> "1001295"  [label="DDG: "];
"1000954" -> "1001295"  [label="DDG: "];
"1000954" -> "1001295"  [label="DDG: "];
"1000941" -> "1000954"  [label="DDG: "];
"1000948" -> "1000954"  [label="DDG: "];
"1001214" -> "1001213"  [label="AST: "];
"1001214" -> "1001219"  [label="CFG: "];
"1001215" -> "1001214"  [label="AST: "];
"1001218" -> "1001214"  [label="AST: "];
"1001219" -> "1001214"  [label="AST: "];
"1001221" -> "1001214"  [label="CFG: "];
"1001214" -> "1001295"  [label="DDG: "];
"1001214" -> "1001295"  [label="DDG: "];
"1001214" -> "1001295"  [label="DDG: "];
}
