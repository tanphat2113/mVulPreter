digraph "1_linux_78c9c4dfbf8c04883941445a195276bb4bb92c76_4@integer" {
"1000157" [label="(Call,kj = NSEC_PER_SEC / HZ)"];
"1000159" [label="(Call,NSEC_PER_SEC / HZ)"];
"1000163" [label="(Call,timr->it_interval < kj)"];
"1000170" [label="(Call,ktime_add(now, kj))"];
"1000168" [label="(Call,now = ktime_add(now, kj))"];
"1000179" [label="(Call,hrtimer_forward(timer, now,\n\t\t\t\t\t\ttimr->it_interval))"];
"1000177" [label="(Call,(unsigned int)\n\t\t\t\thrtimer_forward(timer, now,\n\t\t\t\t\t\ttimr->it_interval))"];
"1000173" [label="(Call,timr->it_overrun += (unsigned int)\n\t\t\t\thrtimer_forward(timer, now,\n\t\t\t\t\t\ttimr->it_interval))"];
"1000160" [label="(Identifier,NSEC_PER_SEC)"];
"1000157" [label="(Call,kj = NSEC_PER_SEC / HZ)"];
"1000103" [label="(MethodParameterIn,struct hrtimer *timer)"];
"1000158" [label="(Identifier,kj)"];
"1000163" [label="(Call,timr->it_interval < kj)"];
"1000161" [label="(Identifier,HZ)"];
"1000175" [label="(Identifier,timr)"];
"1000162" [label="(ControlStructure,if (timr->it_interval < kj))"];
"1000155" [label="(Block,)"];
"1000177" [label="(Call,(unsigned int)\n\t\t\t\thrtimer_forward(timer, now,\n\t\t\t\t\t\ttimr->it_interval))"];
"1000169" [label="(Identifier,now)"];
"1000179" [label="(Call,hrtimer_forward(timer, now,\n\t\t\t\t\t\ttimr->it_interval))"];
"1000170" [label="(Call,ktime_add(now, kj))"];
"1000165" [label="(Identifier,timr)"];
"1000168" [label="(Call,now = ktime_add(now, kj))"];
"1000181" [label="(Identifier,now)"];
"1000167" [label="(Identifier,kj)"];
"1000159" [label="(Call,NSEC_PER_SEC / HZ)"];
"1000174" [label="(Call,timr->it_overrun)"];
"1000149" [label="(Block,)"];
"1000164" [label="(Call,timr->it_interval)"];
"1000172" [label="(Identifier,kj)"];
"1000182" [label="(Call,timr->it_interval)"];
"1000173" [label="(Call,timr->it_overrun += (unsigned int)\n\t\t\t\thrtimer_forward(timer, now,\n\t\t\t\t\t\ttimr->it_interval))"];
"1000186" [label="(Identifier,ret)"];
"1000153" [label="(Call,hrtimer_cb_get_time(timer))"];
"1000151" [label="(Call,now = hrtimer_cb_get_time(timer))"];
"1000180" [label="(Identifier,timer)"];
"1000144" [label="(Call,timr->it_interval != 0)"];
"1000171" [label="(Identifier,now)"];
"1000202" [label="(MethodReturn,static enum hrtimer_restart)"];
"1000157" -> "1000155"  [label="AST: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000165" -> "1000157"  [label="CFG: "];
"1000157" -> "1000202"  [label="DDG: NSEC_PER_SEC / HZ"];
"1000159" -> "1000157"  [label="DDG: NSEC_PER_SEC"];
"1000159" -> "1000157"  [label="DDG: HZ"];
"1000157" -> "1000163"  [label="DDG: kj"];
"1000159" -> "1000161"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000161" -> "1000159"  [label="AST: "];
"1000159" -> "1000202"  [label="DDG: NSEC_PER_SEC"];
"1000159" -> "1000202"  [label="DDG: HZ"];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000167"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000167" -> "1000163"  [label="AST: "];
"1000169" -> "1000163"  [label="CFG: "];
"1000175" -> "1000163"  [label="CFG: "];
"1000163" -> "1000202"  [label="DDG: timr->it_interval < kj"];
"1000163" -> "1000202"  [label="DDG: kj"];
"1000144" -> "1000163"  [label="DDG: timr->it_interval"];
"1000163" -> "1000170"  [label="DDG: kj"];
"1000163" -> "1000179"  [label="DDG: timr->it_interval"];
"1000170" -> "1000168"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000170" -> "1000202"  [label="DDG: kj"];
"1000170" -> "1000168"  [label="DDG: now"];
"1000170" -> "1000168"  [label="DDG: kj"];
"1000151" -> "1000170"  [label="DDG: now"];
"1000168" -> "1000162"  [label="AST: "];
"1000169" -> "1000168"  [label="AST: "];
"1000175" -> "1000168"  [label="CFG: "];
"1000168" -> "1000202"  [label="DDG: ktime_add(now, kj)"];
"1000168" -> "1000179"  [label="DDG: now"];
"1000179" -> "1000177"  [label="AST: "];
"1000179" -> "1000182"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000181" -> "1000179"  [label="AST: "];
"1000182" -> "1000179"  [label="AST: "];
"1000177" -> "1000179"  [label="CFG: "];
"1000179" -> "1000202"  [label="DDG: now"];
"1000179" -> "1000202"  [label="DDG: timr->it_interval"];
"1000179" -> "1000202"  [label="DDG: timer"];
"1000179" -> "1000177"  [label="DDG: timer"];
"1000179" -> "1000177"  [label="DDG: now"];
"1000179" -> "1000177"  [label="DDG: timr->it_interval"];
"1000153" -> "1000179"  [label="DDG: timer"];
"1000103" -> "1000179"  [label="DDG: timer"];
"1000151" -> "1000179"  [label="DDG: now"];
"1000177" -> "1000173"  [label="AST: "];
"1000178" -> "1000177"  [label="AST: "];
"1000173" -> "1000177"  [label="CFG: "];
"1000177" -> "1000202"  [label="DDG: hrtimer_forward(timer, now,\n\t\t\t\t\t\ttimr->it_interval)"];
"1000177" -> "1000173"  [label="DDG: hrtimer_forward(timer, now,\n\t\t\t\t\t\ttimr->it_interval)"];
"1000173" -> "1000149"  [label="AST: "];
"1000174" -> "1000173"  [label="AST: "];
"1000186" -> "1000173"  [label="CFG: "];
"1000173" -> "1000202"  [label="DDG: timr->it_overrun"];
"1000173" -> "1000202"  [label="DDG: (unsigned int)\n\t\t\t\thrtimer_forward(timer, now,\n\t\t\t\t\t\ttimr->it_interval)"];
}
