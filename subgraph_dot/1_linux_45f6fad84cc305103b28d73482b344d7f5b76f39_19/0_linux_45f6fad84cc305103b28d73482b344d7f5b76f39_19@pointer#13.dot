digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_19@pointer" {
"1000116" [label="(Call,*np = inet6_sk(sk))"];
"1000118" [label="(Call,inet6_sk(sk))"];
"1000107" [label="(MethodParameterIn,struct sock *sk)"];
"1000553" [label="(Call,ip6_sk_dst_hoplimit(np, &fl6, dst))"];
"1000551" [label="(Call,hlimit = ip6_sk_dst_hoplimit(np, &fl6, dst))"];
"1000588" [label="(Call,ip6_append_data(sk, ip_generic_getfrag, msg,\n\t\t\t      ulen, transhdrlen, hlimit, tclass, opt,\n\t\t\t      &fl6, (struct rt6_info *)dst,\n\t\t\t      msg->msg_flags, dontfrag))"];
"1000586" [label="(Call,err = ip6_append_data(sk, ip_generic_getfrag, msg,\n\t\t\t      ulen, transhdrlen, hlimit, tclass, opt,\n\t\t\t      &fl6, (struct rt6_info *)dst,\n\t\t\t      msg->msg_flags, dontfrag))"];
"1000632" [label="(Call,err < 0)"];
"1000631" [label="(Call,err < 0 ? err : len)"];
"1000630" [label="(Return,return err < 0 ? err : len;)"];
"1000608" [label="(Call,ip6_flush_pending_frames(sk))"];
"1000622" [label="(Call,release_sock(sk))"];
"1000613" [label="(Call,msg->msg_flags & MSG_MORE)"];
"1000612" [label="(Call,!(msg->msg_flags & MSG_MORE))"];
"1000620" [label="(Call,l2tp_ip6_push_pending_frames(sk))"];
"1000618" [label="(Call,err = l2tp_ip6_push_pending_frames(sk))"];
"1000599" [label="(Call,(struct rt6_info *)dst)"];
"1000625" [label="(Call,dst_release(dst))"];
"1000638" [label="(Call,dst_confirm(dst))"];
"1000632" [label="(Call,err < 0)"];
"1000552" [label="(Identifier,hlimit)"];
"1000107" [label="(MethodParameterIn,struct sock *sk)"];
"1000542" [label="(Call,err = PTR_ERR(dst))"];
"1000608" [label="(Call,ip6_flush_pending_frames(sk))"];
"1000633" [label="(Identifier,err)"];
"1000613" [label="(Call,msg->msg_flags & MSG_MORE)"];
"1000548" [label="(Call,hlimit < 0)"];
"1000357" [label="(Call,ip6_datagram_send_ctl(sock_net(sk), sk, msg, &fl6, opt,\n\t\t\t\t\t    &hlimit, &tclass, &dontfrag))"];
"1000122" [label="(Identifier,opt)"];
"1000596" [label="(Identifier,opt)"];
"1000533" [label="(Call,ip6_dst_lookup_flow(sk, &fl6, final_p))"];
"1000588" [label="(Call,ip6_append_data(sk, ip_generic_getfrag, msg,\n\t\t\t      ulen, transhdrlen, hlimit, tclass, opt,\n\t\t\t      &fl6, (struct rt6_info *)dst,\n\t\t\t      msg->msg_flags, dontfrag))"];
"1000635" [label="(Identifier,err)"];
"1000553" [label="(Call,ip6_sk_dst_hoplimit(np, &fl6, dst))"];
"1000577" [label="(Call,msg->msg_flags & MSG_CONFIRM)"];
"1000155" [label="(Call,transhdrlen = 4)"];
"1000623" [label="(Identifier,sk)"];
"1000650" [label="(Call,err = 0)"];
"1000584" [label="(Call,lock_sock(sk))"];
"1000560" [label="(Identifier,tclass)"];
"1000607" [label="(Identifier,err)"];
"1000554" [label="(Identifier,np)"];
"1000617" [label="(Identifier,MSG_MORE)"];
"1000645" [label="(Identifier,msg)"];
"1000159" [label="(Call,ulen = len + transhdrlen)"];
"1000392" [label="(Call,fl6_sock_lookup(sk, fl6.flowlabel))"];
"1000559" [label="(Call,tclass < 0)"];
"1000591" [label="(Identifier,msg)"];
"1000568" [label="(Call,dontfrag < 0)"];
"1000612" [label="(Call,!(msg->msg_flags & MSG_MORE))"];
"1000551" [label="(Call,hlimit = ip6_sk_dst_hoplimit(np, &fl6, dst))"];
"1000119" [label="(Identifier,sk)"];
"1000643" [label="(Call,msg->msg_flags & MSG_PROBE)"];
"1000622" [label="(Call,release_sock(sk))"];
"1000489" [label="(Call,fl6_update_dst(&fl6, opt, &final))"];
"1000606" [label="(ControlStructure,if (err))"];
"1000592" [label="(Identifier,ulen)"];
"1000618" [label="(Call,err = l2tp_ip6_push_pending_frames(sk))"];
"1000595" [label="(Identifier,tclass)"];
"1000609" [label="(Identifier,sk)"];
"1000526" [label="(Call,security_sk_classify_flow(sk, flowi6_to_flowi(&fl6)))"];
"1000630" [label="(Return,return err < 0 ? err : len;)"];
"1000627" [label="(JumpTarget,out:)"];
"1000641" [label="(Call,!(msg->msg_flags & MSG_PROBE) || len)"];
"1000626" [label="(Identifier,dst)"];
"1000116" [label="(Call,*np = inet6_sk(sk))"];
"1000654" [label="(MethodReturn,static int)"];
"1000547" [label="(ControlStructure,if (hlimit < 0))"];
"1000625" [label="(Call,dst_release(dst))"];
"1000602" [label="(Call,msg->msg_flags)"];
"1000358" [label="(Call,sock_net(sk))"];
"1000557" [label="(Identifier,dst)"];
"1000601" [label="(Identifier,dst)"];
"1000619" [label="(Identifier,err)"];
"1000597" [label="(Call,&fl6)"];
"1000110" [label="(Block,)"];
"1000631" [label="(Call,err < 0 ? err : len)"];
"1000555" [label="(Call,&fl6)"];
"1000166" [label="(Call,len > INT_MAX)"];
"1000639" [label="(Identifier,dst)"];
"1000586" [label="(Call,err = ip6_append_data(sk, ip_generic_getfrag, msg,\n\t\t\t      ulen, transhdrlen, hlimit, tclass, opt,\n\t\t\t      &fl6, (struct rt6_info *)dst,\n\t\t\t      msg->msg_flags, dontfrag))"];
"1000246" [label="(Call,fl6_sock_lookup(sk, fl6.flowlabel))"];
"1000605" [label="(Identifier,dontfrag)"];
"1000614" [label="(Call,msg->msg_flags)"];
"1000620" [label="(Call,l2tp_ip6_push_pending_frames(sk))"];
"1000108" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000621" [label="(Identifier,sk)"];
"1000118" [label="(Call,inet6_sk(sk))"];
"1000611" [label="(ControlStructure,if (!(msg->msg_flags & MSG_MORE)))"];
"1000594" [label="(Identifier,hlimit)"];
"1000589" [label="(Identifier,sk)"];
"1000593" [label="(Identifier,transhdrlen)"];
"1000636" [label="(Identifier,len)"];
"1000603" [label="(Identifier,msg)"];
"1000562" [label="(Call,tclass = np->tclass)"];
"1000590" [label="(Identifier,ip_generic_getfrag)"];
"1000587" [label="(Identifier,err)"];
"1000117" [label="(Identifier,np)"];
"1000624" [label="(JumpTarget,done:)"];
"1000539" [label="(Call,IS_ERR(dst))"];
"1000109" [label="(MethodParameterIn,size_t len)"];
"1000599" [label="(Call,(struct rt6_info *)dst)"];
"1000634" [label="(Literal,0)"];
"1000571" [label="(Call,dontfrag = np->dontfrag)"];
"1000638" [label="(Call,dst_confirm(dst))"];
"1000116" -> "1000110"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000122" -> "1000116"  [label="CFG: "];
"1000116" -> "1000654"  [label="DDG: np"];
"1000116" -> "1000654"  [label="DDG: inet6_sk(sk)"];
"1000118" -> "1000116"  [label="DDG: sk"];
"1000116" -> "1000553"  [label="DDG: np"];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000118" -> "1000654"  [label="DDG: sk"];
"1000107" -> "1000118"  [label="DDG: sk"];
"1000118" -> "1000246"  [label="DDG: sk"];
"1000118" -> "1000358"  [label="DDG: sk"];
"1000118" -> "1000526"  [label="DDG: sk"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000654"  [label="DDG: sk"];
"1000107" -> "1000246"  [label="DDG: sk"];
"1000107" -> "1000358"  [label="DDG: sk"];
"1000107" -> "1000357"  [label="DDG: sk"];
"1000107" -> "1000392"  [label="DDG: sk"];
"1000107" -> "1000526"  [label="DDG: sk"];
"1000107" -> "1000533"  [label="DDG: sk"];
"1000107" -> "1000584"  [label="DDG: sk"];
"1000107" -> "1000588"  [label="DDG: sk"];
"1000107" -> "1000608"  [label="DDG: sk"];
"1000107" -> "1000620"  [label="DDG: sk"];
"1000107" -> "1000622"  [label="DDG: sk"];
"1000553" -> "1000551"  [label="AST: "];
"1000553" -> "1000557"  [label="CFG: "];
"1000554" -> "1000553"  [label="AST: "];
"1000555" -> "1000553"  [label="AST: "];
"1000557" -> "1000553"  [label="AST: "];
"1000551" -> "1000553"  [label="CFG: "];
"1000553" -> "1000654"  [label="DDG: np"];
"1000553" -> "1000654"  [label="DDG: &fl6"];
"1000553" -> "1000551"  [label="DDG: np"];
"1000553" -> "1000551"  [label="DDG: &fl6"];
"1000553" -> "1000551"  [label="DDG: dst"];
"1000533" -> "1000553"  [label="DDG: &fl6"];
"1000539" -> "1000553"  [label="DDG: dst"];
"1000553" -> "1000588"  [label="DDG: &fl6"];
"1000553" -> "1000599"  [label="DDG: dst"];
"1000553" -> "1000638"  [label="DDG: dst"];
"1000551" -> "1000547"  [label="AST: "];
"1000552" -> "1000551"  [label="AST: "];
"1000560" -> "1000551"  [label="CFG: "];
"1000551" -> "1000654"  [label="DDG: ip6_sk_dst_hoplimit(np, &fl6, dst)"];
"1000551" -> "1000654"  [label="DDG: hlimit"];
"1000551" -> "1000588"  [label="DDG: hlimit"];
"1000588" -> "1000586"  [label="AST: "];
"1000588" -> "1000605"  [label="CFG: "];
"1000589" -> "1000588"  [label="AST: "];
"1000590" -> "1000588"  [label="AST: "];
"1000591" -> "1000588"  [label="AST: "];
"1000592" -> "1000588"  [label="AST: "];
"1000593" -> "1000588"  [label="AST: "];
"1000594" -> "1000588"  [label="AST: "];
"1000595" -> "1000588"  [label="AST: "];
"1000596" -> "1000588"  [label="AST: "];
"1000597" -> "1000588"  [label="AST: "];
"1000599" -> "1000588"  [label="AST: "];
"1000602" -> "1000588"  [label="AST: "];
"1000605" -> "1000588"  [label="AST: "];
"1000586" -> "1000588"  [label="CFG: "];
"1000588" -> "1000654"  [label="DDG: (struct rt6_info *)dst"];
"1000588" -> "1000654"  [label="DDG: tclass"];
"1000588" -> "1000654"  [label="DDG: ip_generic_getfrag"];
"1000588" -> "1000654"  [label="DDG: &fl6"];
"1000588" -> "1000654"  [label="DDG: msg->msg_flags"];
"1000588" -> "1000654"  [label="DDG: ulen"];
"1000588" -> "1000654"  [label="DDG: opt"];
"1000588" -> "1000654"  [label="DDG: msg"];
"1000588" -> "1000654"  [label="DDG: dontfrag"];
"1000588" -> "1000654"  [label="DDG: hlimit"];
"1000588" -> "1000654"  [label="DDG: transhdrlen"];
"1000588" -> "1000586"  [label="DDG: ulen"];
"1000588" -> "1000586"  [label="DDG: msg"];
"1000588" -> "1000586"  [label="DDG: msg->msg_flags"];
"1000588" -> "1000586"  [label="DDG: sk"];
"1000588" -> "1000586"  [label="DDG: (struct rt6_info *)dst"];
"1000588" -> "1000586"  [label="DDG: transhdrlen"];
"1000588" -> "1000586"  [label="DDG: dontfrag"];
"1000588" -> "1000586"  [label="DDG: ip_generic_getfrag"];
"1000588" -> "1000586"  [label="DDG: tclass"];
"1000588" -> "1000586"  [label="DDG: hlimit"];
"1000588" -> "1000586"  [label="DDG: &fl6"];
"1000588" -> "1000586"  [label="DDG: opt"];
"1000584" -> "1000588"  [label="DDG: sk"];
"1000357" -> "1000588"  [label="DDG: msg"];
"1000108" -> "1000588"  [label="DDG: msg"];
"1000159" -> "1000588"  [label="DDG: ulen"];
"1000155" -> "1000588"  [label="DDG: transhdrlen"];
"1000548" -> "1000588"  [label="DDG: hlimit"];
"1000559" -> "1000588"  [label="DDG: tclass"];
"1000562" -> "1000588"  [label="DDG: tclass"];
"1000489" -> "1000588"  [label="DDG: opt"];
"1000533" -> "1000588"  [label="DDG: &fl6"];
"1000599" -> "1000588"  [label="DDG: dst"];
"1000643" -> "1000588"  [label="DDG: msg->msg_flags"];
"1000577" -> "1000588"  [label="DDG: msg->msg_flags"];
"1000568" -> "1000588"  [label="DDG: dontfrag"];
"1000571" -> "1000588"  [label="DDG: dontfrag"];
"1000588" -> "1000608"  [label="DDG: sk"];
"1000588" -> "1000613"  [label="DDG: msg->msg_flags"];
"1000588" -> "1000620"  [label="DDG: sk"];
"1000588" -> "1000622"  [label="DDG: sk"];
"1000586" -> "1000110"  [label="AST: "];
"1000587" -> "1000586"  [label="AST: "];
"1000607" -> "1000586"  [label="CFG: "];
"1000586" -> "1000654"  [label="DDG: ip6_append_data(sk, ip_generic_getfrag, msg,\n\t\t\t      ulen, transhdrlen, hlimit, tclass, opt,\n\t\t\t      &fl6, (struct rt6_info *)dst,\n\t\t\t      msg->msg_flags, dontfrag)"];
"1000586" -> "1000632"  [label="DDG: err"];
"1000632" -> "1000631"  [label="AST: "];
"1000632" -> "1000634"  [label="CFG: "];
"1000633" -> "1000632"  [label="AST: "];
"1000634" -> "1000632"  [label="AST: "];
"1000635" -> "1000632"  [label="CFG: "];
"1000636" -> "1000632"  [label="CFG: "];
"1000632" -> "1000631"  [label="DDG: err"];
"1000650" -> "1000632"  [label="DDG: err"];
"1000542" -> "1000632"  [label="DDG: err"];
"1000618" -> "1000632"  [label="DDG: err"];
"1000631" -> "1000630"  [label="AST: "];
"1000631" -> "1000635"  [label="CFG: "];
"1000631" -> "1000636"  [label="CFG: "];
"1000635" -> "1000631"  [label="AST: "];
"1000636" -> "1000631"  [label="AST: "];
"1000630" -> "1000631"  [label="CFG: "];
"1000631" -> "1000654"  [label="DDG: err < 0"];
"1000631" -> "1000654"  [label="DDG: err < 0 ? err : len"];
"1000631" -> "1000654"  [label="DDG: err"];
"1000631" -> "1000654"  [label="DDG: len"];
"1000631" -> "1000630"  [label="DDG: err < 0 ? err : len"];
"1000166" -> "1000631"  [label="DDG: len"];
"1000641" -> "1000631"  [label="DDG: len"];
"1000109" -> "1000631"  [label="DDG: len"];
"1000630" -> "1000110"  [label="AST: "];
"1000654" -> "1000630"  [label="CFG: "];
"1000630" -> "1000654"  [label="DDG: <RET>"];
"1000608" -> "1000606"  [label="AST: "];
"1000608" -> "1000609"  [label="CFG: "];
"1000609" -> "1000608"  [label="AST: "];
"1000623" -> "1000608"  [label="CFG: "];
"1000608" -> "1000654"  [label="DDG: ip6_flush_pending_frames(sk)"];
"1000608" -> "1000622"  [label="DDG: sk"];
"1000622" -> "1000110"  [label="AST: "];
"1000622" -> "1000623"  [label="CFG: "];
"1000623" -> "1000622"  [label="AST: "];
"1000624" -> "1000622"  [label="CFG: "];
"1000622" -> "1000654"  [label="DDG: release_sock(sk)"];
"1000622" -> "1000654"  [label="DDG: sk"];
"1000620" -> "1000622"  [label="DDG: sk"];
"1000613" -> "1000612"  [label="AST: "];
"1000613" -> "1000617"  [label="CFG: "];
"1000614" -> "1000613"  [label="AST: "];
"1000617" -> "1000613"  [label="AST: "];
"1000612" -> "1000613"  [label="CFG: "];
"1000613" -> "1000654"  [label="DDG: msg->msg_flags"];
"1000613" -> "1000654"  [label="DDG: MSG_MORE"];
"1000613" -> "1000612"  [label="DDG: msg->msg_flags"];
"1000613" -> "1000612"  [label="DDG: MSG_MORE"];
"1000612" -> "1000611"  [label="AST: "];
"1000619" -> "1000612"  [label="CFG: "];
"1000623" -> "1000612"  [label="CFG: "];
"1000612" -> "1000654"  [label="DDG: msg->msg_flags & MSG_MORE"];
"1000612" -> "1000654"  [label="DDG: !(msg->msg_flags & MSG_MORE)"];
"1000620" -> "1000618"  [label="AST: "];
"1000620" -> "1000621"  [label="CFG: "];
"1000621" -> "1000620"  [label="AST: "];
"1000618" -> "1000620"  [label="CFG: "];
"1000620" -> "1000618"  [label="DDG: sk"];
"1000618" -> "1000611"  [label="AST: "];
"1000619" -> "1000618"  [label="AST: "];
"1000623" -> "1000618"  [label="CFG: "];
"1000618" -> "1000654"  [label="DDG: l2tp_ip6_push_pending_frames(sk)"];
"1000599" -> "1000601"  [label="CFG: "];
"1000600" -> "1000599"  [label="AST: "];
"1000601" -> "1000599"  [label="AST: "];
"1000603" -> "1000599"  [label="CFG: "];
"1000539" -> "1000599"  [label="DDG: dst"];
"1000638" -> "1000599"  [label="DDG: dst"];
"1000599" -> "1000625"  [label="DDG: dst"];
"1000625" -> "1000110"  [label="AST: "];
"1000625" -> "1000626"  [label="CFG: "];
"1000626" -> "1000625"  [label="AST: "];
"1000627" -> "1000625"  [label="CFG: "];
"1000625" -> "1000654"  [label="DDG: dst"];
"1000625" -> "1000654"  [label="DDG: dst_release(dst)"];
"1000638" -> "1000625"  [label="DDG: dst"];
"1000638" -> "1000110"  [label="AST: "];
"1000638" -> "1000639"  [label="CFG: "];
"1000639" -> "1000638"  [label="AST: "];
"1000645" -> "1000638"  [label="CFG: "];
"1000638" -> "1000654"  [label="DDG: dst_confirm(dst)"];
"1000539" -> "1000638"  [label="DDG: dst"];
}
