digraph "0_libXi_19a9cd607de73947fcfb104682f203ffe4e1f4e5_1@pointer" {
"1000258" [label="(Call,(char *)f + sizeof(*f) > end)"];
"1000260" [label="(Call,(char *)f)"];
"1000352" [label="(Call,f = (xFeedbackState *) ((char *)f + f->length))"];
"1000354" [label="(Call,(xFeedbackState *) ((char *)f + f->length))"];
"1000357" [label="(Call,(char *)f)"];
"1000241" [label="(Call,(char *)f)"];
"1000235" [label="(Call,(char *)f)"];
"1000219" [label="(Call,!f)"];
"1000114" [label="(Call,*f = NULL)"];
"1000214" [label="(Call,f = Xmalloc(nbytes))"];
"1000216" [label="(Call,Xmalloc(nbytes))"];
"1000207" [label="(Call,nbytes = rep.length << 2)"];
"1000209" [label="(Call,rep.length << 2)"];
"1000199" [label="(Call,rep.length < (INT_MAX >> 2))"];
"1000180" [label="(Call,rep.length > 0)"];
"1000203" [label="(Call,INT_MAX >> 2)"];
"1000232" [label="(Call,end = (char *)f + nbytes)"];
"1000257" [label="(Call,(char *)f + sizeof(*f) > end ||\n\t        f->length == 0 || f->length > nbytes)"];
"1000361" [label="(Identifier,f)"];
"1000116" [label="(Identifier,NULL)"];
"1000206" [label="(Block,)"];
"1000265" [label="(Identifier,f)"];
"1000189" [label="(Identifier,size)"];
"1000184" [label="(Literal,0)"];
"1000220" [label="(Identifier,f)"];
"1000244" [label="(Identifier,nbytes)"];
"1000219" [label="(Call,!f)"];
"1000204" [label="(Identifier,INT_MAX)"];
"1000359" [label="(Identifier,f)"];
"1000199" [label="(Call,rep.length < (INT_MAX >> 2))"];
"1000179" [label="(ControlStructure,if (rep.length > 0))"];
"1000243" [label="(Identifier,f)"];
"1000235" [label="(Call,(char *)f)"];
"1000775" [label="(MethodReturn,RET)"];
"1000223" [label="(Identifier,dpy)"];
"1000232" [label="(Call,end = (char *)f + nbytes)"];
"1000237" [label="(Identifier,f)"];
"1000114" [label="(Call,*f = NULL)"];
"1000278" [label="(ControlStructure,goto out;)"];
"1000356" [label="(Call,(char *)f + f->length)"];
"1000115" [label="(Identifier,f)"];
"1000180" [label="(Call,rep.length > 0)"];
"1000266" [label="(Identifier,end)"];
"1000270" [label="(Identifier,f)"];
"1000354" [label="(Call,(xFeedbackState *) ((char *)f + f->length))"];
"1000119" [label="(Identifier,sav)"];
"1000205" [label="(Literal,2)"];
"1000240" [label="(Identifier,dpy)"];
"1000213" [label="(Literal,2)"];
"1000258" [label="(Call,(char *)f + sizeof(*f) > end)"];
"1000207" [label="(Call,nbytes = rep.length << 2)"];
"1000256" [label="(ControlStructure,if ((char *)f + sizeof(*f) > end ||\n\t        f->length == 0 || f->length > nbytes))"];
"1000255" [label="(Block,)"];
"1000230" [label="(Identifier,sav)"];
"1000254" [label="(Identifier,i)"];
"1000260" [label="(Call,(char *)f)"];
"1000208" [label="(Identifier,nbytes)"];
"1000262" [label="(Identifier,f)"];
"1000257" [label="(Call,(char *)f + sizeof(*f) > end ||\n\t        f->length == 0 || f->length > nbytes)"];
"1000241" [label="(Call,(char *)f)"];
"1000216" [label="(Call,Xmalloc(nbytes))"];
"1000200" [label="(Call,rep.length)"];
"1000238" [label="(Identifier,nbytes)"];
"1000352" [label="(Call,f = (xFeedbackState *) ((char *)f + f->length))"];
"1000259" [label="(Call,(char *)f + sizeof(*f))"];
"1000239" [label="(Call,_XRead(dpy, (char *)f, nbytes))"];
"1000353" [label="(Identifier,f)"];
"1000217" [label="(Identifier,nbytes)"];
"1000210" [label="(Call,rep.length)"];
"1000222" [label="(Call,_XEatDataWords(dpy, rep.length))"];
"1000198" [label="(ControlStructure,if (rep.length < (INT_MAX >> 2)))"];
"1000267" [label="(Call,f->length == 0 || f->length > nbytes)"];
"1000280" [label="(Identifier,nbytes)"];
"1000218" [label="(ControlStructure,if (!f))"];
"1000214" [label="(Call,f = Xmalloc(nbytes))"];
"1000185" [label="(Block,)"];
"1000181" [label="(Call,rep.length)"];
"1000203" [label="(Call,INT_MAX >> 2)"];
"1000234" [label="(Call,(char *)f + nbytes)"];
"1000209" [label="(Call,rep.length << 2)"];
"1000233" [label="(Identifier,end)"];
"1000357" [label="(Call,(char *)f)"];
"1000104" [label="(Block,)"];
"1000215" [label="(Identifier,f)"];
"1000229" [label="(Call,sav = f)"];
"1000765" [label="(JumpTarget,out:)"];
"1000258" -> "1000257"  [label="AST: "];
"1000258" -> "1000266"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000266" -> "1000258"  [label="AST: "];
"1000270" -> "1000258"  [label="CFG: "];
"1000257" -> "1000258"  [label="CFG: "];
"1000258" -> "1000775"  [label="DDG: (char *)f + sizeof(*f)"];
"1000258" -> "1000775"  [label="DDG: end"];
"1000258" -> "1000257"  [label="DDG: (char *)f + sizeof(*f)"];
"1000258" -> "1000257"  [label="DDG: end"];
"1000260" -> "1000258"  [label="DDG: f"];
"1000232" -> "1000258"  [label="DDG: end"];
"1000260" -> "1000259"  [label="AST: "];
"1000260" -> "1000262"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000262" -> "1000260"  [label="AST: "];
"1000265" -> "1000260"  [label="CFG: "];
"1000260" -> "1000775"  [label="DDG: f"];
"1000260" -> "1000259"  [label="DDG: f"];
"1000352" -> "1000260"  [label="DDG: f"];
"1000241" -> "1000260"  [label="DDG: f"];
"1000352" -> "1000255"  [label="AST: "];
"1000352" -> "1000354"  [label="CFG: "];
"1000353" -> "1000352"  [label="AST: "];
"1000354" -> "1000352"  [label="AST: "];
"1000254" -> "1000352"  [label="CFG: "];
"1000352" -> "1000775"  [label="DDG: f"];
"1000352" -> "1000775"  [label="DDG: (xFeedbackState *) ((char *)f + f->length)"];
"1000354" -> "1000352"  [label="DDG: (char *)f + f->length"];
"1000354" -> "1000356"  [label="CFG: "];
"1000355" -> "1000354"  [label="AST: "];
"1000356" -> "1000354"  [label="AST: "];
"1000354" -> "1000775"  [label="DDG: (char *)f + f->length"];
"1000357" -> "1000354"  [label="DDG: f"];
"1000357" -> "1000356"  [label="AST: "];
"1000357" -> "1000359"  [label="CFG: "];
"1000358" -> "1000357"  [label="AST: "];
"1000359" -> "1000357"  [label="AST: "];
"1000361" -> "1000357"  [label="CFG: "];
"1000357" -> "1000356"  [label="DDG: f"];
"1000241" -> "1000239"  [label="AST: "];
"1000241" -> "1000243"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="AST: "];
"1000244" -> "1000241"  [label="CFG: "];
"1000241" -> "1000775"  [label="DDG: f"];
"1000241" -> "1000239"  [label="DDG: f"];
"1000235" -> "1000241"  [label="DDG: f"];
"1000235" -> "1000234"  [label="AST: "];
"1000235" -> "1000237"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="AST: "];
"1000238" -> "1000235"  [label="CFG: "];
"1000235" -> "1000232"  [label="DDG: f"];
"1000235" -> "1000234"  [label="DDG: f"];
"1000219" -> "1000235"  [label="DDG: f"];
"1000219" -> "1000218"  [label="AST: "];
"1000219" -> "1000220"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000223" -> "1000219"  [label="CFG: "];
"1000230" -> "1000219"  [label="CFG: "];
"1000219" -> "1000775"  [label="DDG: !f"];
"1000219" -> "1000775"  [label="DDG: f"];
"1000114" -> "1000219"  [label="DDG: f"];
"1000214" -> "1000219"  [label="DDG: f"];
"1000219" -> "1000229"  [label="DDG: f"];
"1000114" -> "1000104"  [label="AST: "];
"1000114" -> "1000116"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000119" -> "1000114"  [label="CFG: "];
"1000114" -> "1000775"  [label="DDG: f"];
"1000214" -> "1000206"  [label="AST: "];
"1000214" -> "1000216"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000216" -> "1000214"  [label="AST: "];
"1000220" -> "1000214"  [label="CFG: "];
"1000214" -> "1000775"  [label="DDG: Xmalloc(nbytes)"];
"1000216" -> "1000214"  [label="DDG: nbytes"];
"1000216" -> "1000217"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000216" -> "1000775"  [label="DDG: nbytes"];
"1000207" -> "1000216"  [label="DDG: nbytes"];
"1000216" -> "1000232"  [label="DDG: nbytes"];
"1000216" -> "1000234"  [label="DDG: nbytes"];
"1000216" -> "1000239"  [label="DDG: nbytes"];
"1000207" -> "1000206"  [label="AST: "];
"1000207" -> "1000209"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000209" -> "1000207"  [label="AST: "];
"1000215" -> "1000207"  [label="CFG: "];
"1000207" -> "1000775"  [label="DDG: rep.length << 2"];
"1000209" -> "1000207"  [label="DDG: rep.length"];
"1000209" -> "1000207"  [label="DDG: 2"];
"1000209" -> "1000213"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000213" -> "1000209"  [label="AST: "];
"1000209" -> "1000775"  [label="DDG: rep.length"];
"1000199" -> "1000209"  [label="DDG: rep.length"];
"1000209" -> "1000222"  [label="DDG: rep.length"];
"1000199" -> "1000198"  [label="AST: "];
"1000199" -> "1000203"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000203" -> "1000199"  [label="AST: "];
"1000208" -> "1000199"  [label="CFG: "];
"1000220" -> "1000199"  [label="CFG: "];
"1000199" -> "1000775"  [label="DDG: rep.length"];
"1000199" -> "1000775"  [label="DDG: INT_MAX >> 2"];
"1000199" -> "1000775"  [label="DDG: rep.length < (INT_MAX >> 2)"];
"1000180" -> "1000199"  [label="DDG: rep.length"];
"1000203" -> "1000199"  [label="DDG: INT_MAX"];
"1000203" -> "1000199"  [label="DDG: 2"];
"1000199" -> "1000222"  [label="DDG: rep.length"];
"1000180" -> "1000179"  [label="AST: "];
"1000180" -> "1000184"  [label="CFG: "];
"1000181" -> "1000180"  [label="AST: "];
"1000184" -> "1000180"  [label="AST: "];
"1000189" -> "1000180"  [label="CFG: "];
"1000765" -> "1000180"  [label="CFG: "];
"1000180" -> "1000775"  [label="DDG: rep.length"];
"1000180" -> "1000775"  [label="DDG: rep.length > 0"];
"1000203" -> "1000205"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000203"  [label="AST: "];
"1000203" -> "1000775"  [label="DDG: INT_MAX"];
"1000232" -> "1000185"  [label="AST: "];
"1000232" -> "1000234"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000234" -> "1000232"  [label="AST: "];
"1000240" -> "1000232"  [label="CFG: "];
"1000232" -> "1000775"  [label="DDG: end"];
"1000232" -> "1000775"  [label="DDG: (char *)f + nbytes"];
"1000257" -> "1000256"  [label="AST: "];
"1000257" -> "1000267"  [label="CFG: "];
"1000267" -> "1000257"  [label="AST: "];
"1000278" -> "1000257"  [label="CFG: "];
"1000280" -> "1000257"  [label="CFG: "];
"1000257" -> "1000775"  [label="DDG: f->length == 0 || f->length > nbytes"];
"1000257" -> "1000775"  [label="DDG: (char *)f + sizeof(*f) > end"];
"1000257" -> "1000775"  [label="DDG: (char *)f + sizeof(*f) > end ||\n\t        f->length == 0 || f->length > nbytes"];
"1000267" -> "1000257"  [label="DDG: f->length == 0"];
"1000267" -> "1000257"  [label="DDG: f->length > nbytes"];
}
