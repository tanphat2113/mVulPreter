digraph "0_libXi_19a9cd607de73947fcfb104682f203ffe4e1f4e5_1@pointer" {
"1000136" [label="(Call,_XiCheckExtInit(dpy, XInput_Initial_Release, info))"];
"1000132" [label="(Call,LockDisplay(dpy))"];
"1000130" [label="(Call,XInput_find_display(dpy))"];
"1000101" [label="(MethodParameterIn,register Display\t*dpy)"];
"1000128" [label="(Call,*info = XInput_find_display(dpy))"];
"1000135" [label="(Call,_XiCheckExtInit(dpy, XInput_Initial_Release, info) == -1)"];
"1000170" [label="(Call,_XReply(dpy, (xReply *) & rep, 0, xFalse))"];
"1000169" [label="(Call,!_XReply(dpy, (xReply *) & rep, 0, xFalse))"];
"1000222" [label="(Call,_XEatDataWords(dpy, rep.length))"];
"1000770" [label="(Call,UnlockDisplay(dpy))"];
"1000239" [label="(Call,_XRead(dpy, (char *)f, nbytes))"];
"1000273" [label="(Call,f->length > nbytes)"];
"1000267" [label="(Call,f->length == 0 || f->length > nbytes)"];
"1000257" [label="(Call,(char *)f + sizeof(*f) > end ||\n\t        f->length == 0 || f->length > nbytes)"];
"1000279" [label="(Call,nbytes -= f->length)"];
"1000268" [label="(Call,f->length == 0)"];
"1000130" [label="(Call,XInput_find_display(dpy))"];
"1000274" [label="(Call,f->length)"];
"1000247" [label="(Identifier,i)"];
"1000277" [label="(Identifier,nbytes)"];
"1000138" [label="(Identifier,XInput_Initial_Release)"];
"1000279" [label="(Call,nbytes -= f->length)"];
"1000244" [label="(Identifier,nbytes)"];
"1000101" [label="(MethodParameterIn,register Display\t*dpy)"];
"1000170" [label="(Call,_XReply(dpy, (xReply *) & rep, 0, xFalse))"];
"1000145" [label="(Identifier,GetFeedbackControl)"];
"1000182" [label="(Identifier,rep)"];
"1000199" [label="(Call,rep.length < (INT_MAX >> 2))"];
"1000775" [label="(MethodReturn,RET)"];
"1000221" [label="(Block,)"];
"1000223" [label="(Identifier,dpy)"];
"1000267" [label="(Call,f->length == 0 || f->length > nbytes)"];
"1000278" [label="(ControlStructure,goto out;)"];
"1000136" [label="(Call,_XiCheckExtInit(dpy, XInput_Initial_Release, info))"];
"1000770" [label="(Call,UnlockDisplay(dpy))"];
"1000240" [label="(Identifier,dpy)"];
"1000256" [label="(ControlStructure,if ((char *)f + sizeof(*f) > end ||\n\t        f->length == 0 || f->length > nbytes))"];
"1000133" [label="(Identifier,dpy)"];
"1000178" [label="(ControlStructure,goto out;)"];
"1000141" [label="(Literal,1)"];
"1000258" [label="(Call,(char *)f + sizeof(*f) > end)"];
"1000255" [label="(Block,)"];
"1000135" [label="(Call,_XiCheckExtInit(dpy, XInput_Initial_Release, info) == -1)"];
"1000284" [label="(ControlStructure,break;)"];
"1000129" [label="(Identifier,info)"];
"1000137" [label="(Identifier,dpy)"];
"1000176" [label="(Literal,0)"];
"1000168" [label="(ControlStructure,if (!_XReply(dpy, (xReply *) & rep, 0, xFalse)))"];
"1000131" [label="(Identifier,dpy)"];
"1000257" [label="(Call,(char *)f + sizeof(*f) > end ||\n\t        f->length == 0 || f->length > nbytes)"];
"1000281" [label="(Call,f->length)"];
"1000241" [label="(Call,(char *)f)"];
"1000227" [label="(ControlStructure,goto out;)"];
"1000216" [label="(Call,Xmalloc(nbytes))"];
"1000128" [label="(Call,*info = XInput_find_display(dpy))"];
"1000224" [label="(Call,rep.length)"];
"1000222" [label="(Call,_XEatDataWords(dpy, rep.length))"];
"1000239" [label="(Call,_XRead(dpy, (char *)f, nbytes))"];
"1000172" [label="(Call,(xReply *) & rep)"];
"1000273" [label="(Call,f->length > nbytes)"];
"1000280" [label="(Identifier,nbytes)"];
"1000772" [label="(Call,SyncHandle())"];
"1000185" [label="(Block,)"];
"1000134" [label="(ControlStructure,if (_XiCheckExtInit(dpy, XInput_Initial_Release, info) == -1))"];
"1000177" [label="(Identifier,xFalse)"];
"1000209" [label="(Call,rep.length << 2)"];
"1000771" [label="(Identifier,dpy)"];
"1000139" [label="(Identifier,info)"];
"1000169" [label="(Call,!_XReply(dpy, (xReply *) & rep, 0, xFalse))"];
"1000171" [label="(Identifier,dpy)"];
"1000143" [label="(Identifier,NULL)"];
"1000104" [label="(Block,)"];
"1000132" [label="(Call,LockDisplay(dpy))"];
"1000140" [label="(Call,-1)"];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000139"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000139" -> "1000136"  [label="AST: "];
"1000141" -> "1000136"  [label="CFG: "];
"1000136" -> "1000775"  [label="DDG: info"];
"1000136" -> "1000775"  [label="DDG: XInput_Initial_Release"];
"1000136" -> "1000775"  [label="DDG: dpy"];
"1000136" -> "1000135"  [label="DDG: dpy"];
"1000136" -> "1000135"  [label="DDG: XInput_Initial_Release"];
"1000136" -> "1000135"  [label="DDG: info"];
"1000132" -> "1000136"  [label="DDG: dpy"];
"1000101" -> "1000136"  [label="DDG: dpy"];
"1000128" -> "1000136"  [label="DDG: info"];
"1000136" -> "1000170"  [label="DDG: dpy"];
"1000132" -> "1000104"  [label="AST: "];
"1000132" -> "1000133"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000137" -> "1000132"  [label="CFG: "];
"1000132" -> "1000775"  [label="DDG: LockDisplay(dpy)"];
"1000130" -> "1000132"  [label="DDG: dpy"];
"1000101" -> "1000132"  [label="DDG: dpy"];
"1000130" -> "1000128"  [label="AST: "];
"1000130" -> "1000131"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000128" -> "1000130"  [label="CFG: "];
"1000130" -> "1000128"  [label="DDG: dpy"];
"1000101" -> "1000130"  [label="DDG: dpy"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000775"  [label="DDG: dpy"];
"1000101" -> "1000170"  [label="DDG: dpy"];
"1000101" -> "1000222"  [label="DDG: dpy"];
"1000101" -> "1000239"  [label="DDG: dpy"];
"1000101" -> "1000770"  [label="DDG: dpy"];
"1000128" -> "1000104"  [label="AST: "];
"1000129" -> "1000128"  [label="AST: "];
"1000133" -> "1000128"  [label="CFG: "];
"1000128" -> "1000775"  [label="DDG: XInput_find_display(dpy)"];
"1000135" -> "1000134"  [label="AST: "];
"1000135" -> "1000140"  [label="CFG: "];
"1000140" -> "1000135"  [label="AST: "];
"1000143" -> "1000135"  [label="CFG: "];
"1000145" -> "1000135"  [label="CFG: "];
"1000135" -> "1000775"  [label="DDG: -1"];
"1000135" -> "1000775"  [label="DDG: _XiCheckExtInit(dpy, XInput_Initial_Release, info) == -1"];
"1000135" -> "1000775"  [label="DDG: _XiCheckExtInit(dpy, XInput_Initial_Release, info)"];
"1000140" -> "1000135"  [label="DDG: 1"];
"1000170" -> "1000169"  [label="AST: "];
"1000170" -> "1000177"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000176" -> "1000170"  [label="AST: "];
"1000177" -> "1000170"  [label="AST: "];
"1000169" -> "1000170"  [label="CFG: "];
"1000170" -> "1000775"  [label="DDG: (xReply *) & rep"];
"1000170" -> "1000775"  [label="DDG: xFalse"];
"1000170" -> "1000169"  [label="DDG: dpy"];
"1000170" -> "1000169"  [label="DDG: (xReply *) & rep"];
"1000170" -> "1000169"  [label="DDG: 0"];
"1000170" -> "1000169"  [label="DDG: xFalse"];
"1000172" -> "1000170"  [label="DDG: & rep"];
"1000170" -> "1000222"  [label="DDG: dpy"];
"1000170" -> "1000239"  [label="DDG: dpy"];
"1000170" -> "1000770"  [label="DDG: dpy"];
"1000169" -> "1000168"  [label="AST: "];
"1000178" -> "1000169"  [label="CFG: "];
"1000182" -> "1000169"  [label="CFG: "];
"1000169" -> "1000775"  [label="DDG: !_XReply(dpy, (xReply *) & rep, 0, xFalse)"];
"1000169" -> "1000775"  [label="DDG: _XReply(dpy, (xReply *) & rep, 0, xFalse)"];
"1000222" -> "1000221"  [label="AST: "];
"1000222" -> "1000224"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000224" -> "1000222"  [label="AST: "];
"1000227" -> "1000222"  [label="CFG: "];
"1000222" -> "1000775"  [label="DDG: _XEatDataWords(dpy, rep.length)"];
"1000222" -> "1000775"  [label="DDG: rep.length"];
"1000209" -> "1000222"  [label="DDG: rep.length"];
"1000199" -> "1000222"  [label="DDG: rep.length"];
"1000222" -> "1000770"  [label="DDG: dpy"];
"1000770" -> "1000104"  [label="AST: "];
"1000770" -> "1000771"  [label="CFG: "];
"1000771" -> "1000770"  [label="AST: "];
"1000772" -> "1000770"  [label="CFG: "];
"1000770" -> "1000775"  [label="DDG: UnlockDisplay(dpy)"];
"1000770" -> "1000775"  [label="DDG: dpy"];
"1000239" -> "1000770"  [label="DDG: dpy"];
"1000239" -> "1000185"  [label="AST: "];
"1000239" -> "1000244"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="AST: "];
"1000244" -> "1000239"  [label="AST: "];
"1000247" -> "1000239"  [label="CFG: "];
"1000239" -> "1000775"  [label="DDG: _XRead(dpy, (char *)f, nbytes)"];
"1000239" -> "1000775"  [label="DDG: nbytes"];
"1000239" -> "1000775"  [label="DDG: (char *)f"];
"1000241" -> "1000239"  [label="DDG: f"];
"1000216" -> "1000239"  [label="DDG: nbytes"];
"1000239" -> "1000273"  [label="DDG: nbytes"];
"1000239" -> "1000279"  [label="DDG: nbytes"];
"1000273" -> "1000267"  [label="AST: "];
"1000273" -> "1000277"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000277" -> "1000273"  [label="AST: "];
"1000267" -> "1000273"  [label="CFG: "];
"1000273" -> "1000775"  [label="DDG: f->length"];
"1000273" -> "1000775"  [label="DDG: nbytes"];
"1000273" -> "1000267"  [label="DDG: f->length"];
"1000273" -> "1000267"  [label="DDG: nbytes"];
"1000268" -> "1000273"  [label="DDG: f->length"];
"1000273" -> "1000279"  [label="DDG: f->length"];
"1000273" -> "1000279"  [label="DDG: nbytes"];
"1000267" -> "1000257"  [label="AST: "];
"1000267" -> "1000268"  [label="CFG: "];
"1000268" -> "1000267"  [label="AST: "];
"1000257" -> "1000267"  [label="CFG: "];
"1000267" -> "1000775"  [label="DDG: f->length == 0"];
"1000267" -> "1000775"  [label="DDG: f->length > nbytes"];
"1000267" -> "1000257"  [label="DDG: f->length == 0"];
"1000267" -> "1000257"  [label="DDG: f->length > nbytes"];
"1000268" -> "1000267"  [label="DDG: f->length"];
"1000268" -> "1000267"  [label="DDG: 0"];
"1000257" -> "1000256"  [label="AST: "];
"1000257" -> "1000258"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000278" -> "1000257"  [label="CFG: "];
"1000280" -> "1000257"  [label="CFG: "];
"1000257" -> "1000775"  [label="DDG: f->length == 0 || f->length > nbytes"];
"1000257" -> "1000775"  [label="DDG: (char *)f + sizeof(*f) > end"];
"1000257" -> "1000775"  [label="DDG: (char *)f + sizeof(*f) > end ||\n\t        f->length == 0 || f->length > nbytes"];
"1000258" -> "1000257"  [label="DDG: (char *)f + sizeof(*f)"];
"1000258" -> "1000257"  [label="DDG: end"];
"1000279" -> "1000255"  [label="AST: "];
"1000279" -> "1000281"  [label="CFG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000281" -> "1000279"  [label="AST: "];
"1000284" -> "1000279"  [label="CFG: "];
"1000279" -> "1000775"  [label="DDG: nbytes"];
"1000279" -> "1000775"  [label="DDG: f->length"];
"1000268" -> "1000279"  [label="DDG: f->length"];
}
