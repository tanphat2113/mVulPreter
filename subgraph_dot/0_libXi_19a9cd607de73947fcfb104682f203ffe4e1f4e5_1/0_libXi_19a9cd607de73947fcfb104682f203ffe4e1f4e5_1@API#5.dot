digraph "0_libXi_19a9cd607de73947fcfb104682f203ffe4e1f4e5_1@API" {
"1000365" [label="(Call,Xmalloc(size))"];
"1000348" [label="(Call,size > INT_MAX)"];
"1000335" [label="(Call,size += sizeof(XBellFeedbackState))"];
"1000324" [label="(Call,size += sizeof(XStringFeedbackState) +\n \t\t    (strf->num_syms_supported * sizeof(KeySym)))"];
"1000329" [label="(Call,strf->num_syms_supported * sizeof(KeySym))"];
"1000188" [label="(Call,size = 0)"];
"1000341" [label="(Call,size += f->length)"];
"1000292" [label="(Call,size += sizeof(XIntegerFeedbackState))"];
"1000286" [label="(Call,size += sizeof(XPtrFeedbackState))"];
"1000363" [label="(Call,Feedback = Xmalloc(size))"];
"1000368" [label="(Call,!Feedback)"];
"1000371" [label="(Call,Sav = Feedback)"];
"1000773" [label="(Return,return (Sav);)"];
"1000400" [label="(Call,(XKbdFeedbackState *) Feedback)"];
"1000398" [label="(Call,K = (XKbdFeedbackState *) Feedback)"];
"1000324" [label="(Call,size += sizeof(XStringFeedbackState) +\n \t\t    (strf->num_syms_supported * sizeof(KeySym)))"];
"1000365" [label="(Call,Xmalloc(size))"];
"1000343" [label="(Call,f->length)"];
"1000189" [label="(Identifier,size)"];
"1000326" [label="(Call,sizeof(XStringFeedbackState) +\n \t\t    (strf->num_syms_supported * sizeof(KeySym)))"];
"1000368" [label="(Call,!Feedback)"];
"1000405" [label="(Identifier,K)"];
"1000775" [label="(MethodReturn,RET)"];
"1000347" [label="(ControlStructure,if (size > INT_MAX))"];
"1000288" [label="(Call,sizeof(XPtrFeedbackState))"];
"1000298" [label="(Block,)"];
"1000333" [label="(Call,sizeof(KeySym))"];
"1000371" [label="(Call,Sav = Feedback)"];
"1000286" [label="(Call,size += sizeof(XPtrFeedbackState))"];
"1000375" [label="(Identifier,f)"];
"1000194" [label="(Identifier,num_feedbacks)"];
"1000110" [label="(Call,*Sav = NULL)"];
"1000188" [label="(Call,size = 0)"];
"1000325" [label="(Identifier,size)"];
"1000402" [label="(Identifier,Feedback)"];
"1000369" [label="(Identifier,Feedback)"];
"1000293" [label="(Identifier,size)"];
"1000363" [label="(Call,Feedback = Xmalloc(size))"];
"1000255" [label="(Block,)"];
"1000774" [label="(Identifier,Sav)"];
"1000190" [label="(Literal,0)"];
"1000346" [label="(ControlStructure,break;)"];
"1000342" [label="(Identifier,size)"];
"1000754" [label="(Call,Feedback = (XFeedbackState *) ((char *)Feedback + Feedback->length))"];
"1000398" [label="(Call,K = (XKbdFeedbackState *) Feedback)"];
"1000390" [label="(Block,)"];
"1000370" [label="(ControlStructure,goto out;)"];
"1000306" [label="(Block,)"];
"1000367" [label="(ControlStructure,if (!Feedback))"];
"1000349" [label="(Identifier,size)"];
"1000366" [label="(Identifier,size)"];
"1000294" [label="(Call,sizeof(XIntegerFeedbackState))"];
"1000287" [label="(Identifier,size)"];
"1000400" [label="(Call,(XKbdFeedbackState *) Feedback)"];
"1000335" [label="(Call,size += sizeof(XBellFeedbackState))"];
"1000350" [label="(Identifier,INT_MAX)"];
"1000339" [label="(ControlStructure,break;)"];
"1000773" [label="(Return,return (Sav);)"];
"1000353" [label="(Identifier,f)"];
"1000348" [label="(Call,size > INT_MAX)"];
"1000336" [label="(Identifier,size)"];
"1000372" [label="(Identifier,Sav)"];
"1000337" [label="(Call,sizeof(XBellFeedbackState))"];
"1000185" [label="(Block,)"];
"1000364" [label="(Identifier,Feedback)"];
"1000341" [label="(Call,size += f->length)"];
"1000330" [label="(Call,strf->num_syms_supported)"];
"1000296" [label="(ControlStructure,break;)"];
"1000351" [label="(ControlStructure,goto out;)"];
"1000329" [label="(Call,strf->num_syms_supported * sizeof(KeySym))"];
"1000373" [label="(Identifier,Feedback)"];
"1000104" [label="(Block,)"];
"1000399" [label="(Identifier,K)"];
"1000292" [label="(Call,size += sizeof(XIntegerFeedbackState))"];
"1000290" [label="(ControlStructure,break;)"];
"1000365" -> "1000363"  [label="AST: "];
"1000365" -> "1000366"  [label="CFG: "];
"1000366" -> "1000365"  [label="AST: "];
"1000363" -> "1000365"  [label="CFG: "];
"1000365" -> "1000775"  [label="DDG: size"];
"1000365" -> "1000363"  [label="DDG: size"];
"1000348" -> "1000365"  [label="DDG: size"];
"1000335" -> "1000365"  [label="DDG: size"];
"1000188" -> "1000365"  [label="DDG: size"];
"1000341" -> "1000365"  [label="DDG: size"];
"1000292" -> "1000365"  [label="DDG: size"];
"1000286" -> "1000365"  [label="DDG: size"];
"1000348" -> "1000347"  [label="AST: "];
"1000348" -> "1000350"  [label="CFG: "];
"1000349" -> "1000348"  [label="AST: "];
"1000350" -> "1000348"  [label="AST: "];
"1000351" -> "1000348"  [label="CFG: "];
"1000353" -> "1000348"  [label="CFG: "];
"1000348" -> "1000775"  [label="DDG: size"];
"1000348" -> "1000775"  [label="DDG: size > INT_MAX"];
"1000348" -> "1000775"  [label="DDG: INT_MAX"];
"1000335" -> "1000298"  [label="AST: "];
"1000335" -> "1000337"  [label="CFG: "];
"1000336" -> "1000335"  [label="AST: "];
"1000337" -> "1000335"  [label="AST: "];
"1000339" -> "1000335"  [label="CFG: "];
"1000324" -> "1000335"  [label="DDG: size"];
"1000324" -> "1000306"  [label="AST: "];
"1000324" -> "1000326"  [label="CFG: "];
"1000325" -> "1000324"  [label="AST: "];
"1000326" -> "1000324"  [label="AST: "];
"1000336" -> "1000324"  [label="CFG: "];
"1000324" -> "1000775"  [label="DDG: sizeof(XStringFeedbackState) +\n \t\t    (strf->num_syms_supported * sizeof(KeySym))"];
"1000329" -> "1000324"  [label="DDG: strf->num_syms_supported"];
"1000329" -> "1000326"  [label="AST: "];
"1000329" -> "1000333"  [label="CFG: "];
"1000330" -> "1000329"  [label="AST: "];
"1000333" -> "1000329"  [label="AST: "];
"1000326" -> "1000329"  [label="CFG: "];
"1000329" -> "1000775"  [label="DDG: strf->num_syms_supported"];
"1000329" -> "1000326"  [label="DDG: strf->num_syms_supported"];
"1000188" -> "1000185"  [label="AST: "];
"1000188" -> "1000190"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000188"  [label="AST: "];
"1000194" -> "1000188"  [label="CFG: "];
"1000188" -> "1000775"  [label="DDG: size"];
"1000341" -> "1000298"  [label="AST: "];
"1000341" -> "1000343"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="AST: "];
"1000346" -> "1000341"  [label="CFG: "];
"1000341" -> "1000775"  [label="DDG: f->length"];
"1000292" -> "1000255"  [label="AST: "];
"1000292" -> "1000294"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000294" -> "1000292"  [label="AST: "];
"1000296" -> "1000292"  [label="CFG: "];
"1000286" -> "1000255"  [label="AST: "];
"1000286" -> "1000288"  [label="CFG: "];
"1000287" -> "1000286"  [label="AST: "];
"1000288" -> "1000286"  [label="AST: "];
"1000290" -> "1000286"  [label="CFG: "];
"1000363" -> "1000185"  [label="AST: "];
"1000364" -> "1000363"  [label="AST: "];
"1000369" -> "1000363"  [label="CFG: "];
"1000363" -> "1000775"  [label="DDG: Xmalloc(size)"];
"1000363" -> "1000368"  [label="DDG: Feedback"];
"1000368" -> "1000367"  [label="AST: "];
"1000368" -> "1000369"  [label="CFG: "];
"1000369" -> "1000368"  [label="AST: "];
"1000370" -> "1000368"  [label="CFG: "];
"1000372" -> "1000368"  [label="CFG: "];
"1000368" -> "1000775"  [label="DDG: Feedback"];
"1000368" -> "1000775"  [label="DDG: !Feedback"];
"1000368" -> "1000371"  [label="DDG: Feedback"];
"1000368" -> "1000400"  [label="DDG: Feedback"];
"1000371" -> "1000185"  [label="AST: "];
"1000371" -> "1000373"  [label="CFG: "];
"1000372" -> "1000371"  [label="AST: "];
"1000373" -> "1000371"  [label="AST: "];
"1000375" -> "1000371"  [label="CFG: "];
"1000371" -> "1000775"  [label="DDG: Feedback"];
"1000371" -> "1000775"  [label="DDG: Sav"];
"1000371" -> "1000773"  [label="DDG: Sav"];
"1000773" -> "1000104"  [label="AST: "];
"1000773" -> "1000774"  [label="CFG: "];
"1000774" -> "1000773"  [label="AST: "];
"1000775" -> "1000773"  [label="CFG: "];
"1000773" -> "1000775"  [label="DDG: <RET>"];
"1000774" -> "1000773"  [label="DDG: Sav"];
"1000110" -> "1000773"  [label="DDG: Sav"];
"1000400" -> "1000398"  [label="AST: "];
"1000400" -> "1000402"  [label="CFG: "];
"1000401" -> "1000400"  [label="AST: "];
"1000402" -> "1000400"  [label="AST: "];
"1000398" -> "1000400"  [label="CFG: "];
"1000400" -> "1000775"  [label="DDG: Feedback"];
"1000400" -> "1000398"  [label="DDG: Feedback"];
"1000754" -> "1000400"  [label="DDG: Feedback"];
"1000398" -> "1000390"  [label="AST: "];
"1000399" -> "1000398"  [label="AST: "];
"1000405" -> "1000398"  [label="CFG: "];
"1000398" -> "1000775"  [label="DDG: (XKbdFeedbackState *) Feedback"];
"1000398" -> "1000775"  [label="DDG: K"];
}
