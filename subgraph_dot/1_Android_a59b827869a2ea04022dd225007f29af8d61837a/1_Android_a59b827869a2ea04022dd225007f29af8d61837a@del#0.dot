digraph "1_Android_a59b827869a2ea04022dd225007f29af8d61837a@del" {
"1000439" [label="(Call,b->transact(tr.code, buffer, &reply, tr.flags))"];
"1000390" [label="(Call,TypeCode(tr.code))"];
"1000398" [label="(Call,buffer\n << dedent << endl\n << \"Data addr = \"\n << reinterpret_cast<const uint8_t*>(tr.data.ptr.buffer)\n << \", offsets addr=\"\n\n                     << reinterpret_cast<const size_t*>(tr.data.ptr.offsets) << endl)"];
"1000400" [label="(Call,dedent << endl\n << \"Data addr = \"\n << reinterpret_cast<const uint8_t*>(tr.data.ptr.buffer)\n << \", offsets addr=\"\n\n                     << reinterpret_cast<const size_t*>(tr.data.ptr.offsets) << endl)"];
"1000402" [label="(Call,endl\n << \"Data addr = \"\n << reinterpret_cast<const uint8_t*>(tr.data.ptr.buffer)\n << \", offsets addr=\"\n\n                     << reinterpret_cast<const size_t*>(tr.data.ptr.offsets) << endl)"];
"1000418" [label="(Call,reinterpret_cast<const size_t*>(tr.data.ptr.offsets) << endl)"];
"1000419" [label="(Call,reinterpret_cast<const size_t*>(tr.data.ptr.offsets))"];
"1000291" [label="(Call,reinterpret_cast<const binder_size_t*>(tr.data.ptr.offsets))"];
"1000404" [label="(Call,\"Data addr = \"\n << reinterpret_cast<const uint8_t*>(tr.data.ptr.buffer)\n << \", offsets addr=\"\n\n                     << reinterpret_cast<const size_t*>(tr.data.ptr.offsets) << endl)"];
"1000406" [label="(Call,reinterpret_cast<const uint8_t*>(tr.data.ptr.buffer)\n << \", offsets addr=\"\n\n                     << reinterpret_cast<const size_t*>(tr.data.ptr.offsets) << endl)"];
"1000407" [label="(Call,reinterpret_cast<const uint8_t*>(tr.data.ptr.buffer))"];
"1000279" [label="(Call,reinterpret_cast<const uint8_t*>(tr.data.ptr.buffer))"];
"1000416" [label="(Call,\", offsets addr=\"\n\n                     << reinterpret_cast<const size_t*>(tr.data.ptr.offsets) << endl)"];
"1000437" [label="(Call,error = b->transact(tr.code, buffer, &reply, tr.flags))"];
"1000476" [label="(Call,error < NO_ERROR)"];
"1000479" [label="(Call,reply.setError(error))"];
"1000576" [label="(Call,result != NO_ERROR)"];
"1000580" [label="(Call,mLastError = result)"];
"1000583" [label="(Return,return result;)"];
"1000465" [label="(Call,tr.flags & TF_ONE_WAY)"];
"1000464" [label="(Call,(tr.flags & TF_ONE_WAY) == 0)"];
"1000405" [label="(Literal,\"Data addr = \")"];
"1000437" [label="(Call,error = b->transact(tr.code, buffer, &reply, tr.flags))"];
"1000478" [label="(Identifier,NO_ERROR)"];
"1000438" [label="(Identifier,error)"];
"1000440" [label="(Call,tr.code)"];
"1000402" [label="(Call,endl\n << \"Data addr = \"\n << reinterpret_cast<const uint8_t*>(tr.data.ptr.buffer)\n << \", offsets addr=\"\n\n                     << reinterpret_cast<const size_t*>(tr.data.ptr.offsets) << endl)"];
"1000428" [label="(Identifier,endl)"];
"1000302" [label="(Identifier,tr)"];
"1000417" [label="(Literal,\", offsets addr=\")"];
"1000115" [label="(Call,result = mIn.readInt32())"];
"1000571" [label="(Call,result = UNKNOWN_ERROR)"];
"1000475" [label="(ControlStructure,if (error < NO_ERROR))"];
"1000273" [label="(Call,result != NO_ERROR)"];
"1000576" [label="(Call,result != NO_ERROR)"];
"1000464" [label="(Call,(tr.flags & TF_ONE_WAY) == 0)"];
"1000291" [label="(Call,reinterpret_cast<const binder_size_t*>(tr.data.ptr.offsets))"];
"1000389" [label="(Call,TypeCode(tr.code) << \": \" << indent << buffer\n << dedent << endl\n << \"Data addr = \"\n << reinterpret_cast<const uint8_t*>(tr.data.ptr.buffer)\n << \", offsets addr=\"\n\n                     << reinterpret_cast<const size_t*>(tr.data.ptr.offsets) << endl)"];
"1000580" [label="(Call,mLastError = result)"];
"1000419" [label="(Call,reinterpret_cast<const size_t*>(tr.data.ptr.offsets))"];
"1000525" [label="(Call,dedent << endl)"];
"1000435" [label="(Block,)"];
"1000581" [label="(Identifier,mLastError)"];
"1000407" [label="(Call,reinterpret_cast<const uint8_t*>(tr.data.ptr.buffer))"];
"1000416" [label="(Call,\", offsets addr=\"\n\n                     << reinterpret_cast<const size_t*>(tr.data.ptr.offsets) << endl)"];
"1000477" [label="(Identifier,error)"];
"1000106" [label="(Call,result = NO_ERROR)"];
"1000470" [label="(Literal,0)"];
"1000480" [label="(Identifier,error)"];
"1000578" [label="(Identifier,NO_ERROR)"];
"1000584" [label="(Identifier,result)"];
"1000467" [label="(Identifier,tr)"];
"1000579" [label="(Block,)"];
"1000418" [label="(Call,reinterpret_cast<const size_t*>(tr.data.ptr.offsets) << endl)"];
"1000390" [label="(Call,TypeCode(tr.code))"];
"1000396" [label="(Call,indent << buffer\n << dedent << endl\n << \"Data addr = \"\n << reinterpret_cast<const uint8_t*>(tr.data.ptr.buffer)\n << \", offsets addr=\"\n\n                     << reinterpret_cast<const size_t*>(tr.data.ptr.offsets) << endl)"];
"1000403" [label="(Identifier,endl)"];
"1000487" [label="(Literal,\"NOT sending reply to %d!\")"];
"1000465" [label="(Call,tr.flags & TF_ONE_WAY)"];
"1000400" [label="(Call,dedent << endl\n << \"Data addr = \"\n << reinterpret_cast<const uint8_t*>(tr.data.ptr.buffer)\n << \", offsets addr=\"\n\n                     << reinterpret_cast<const size_t*>(tr.data.ptr.offsets) << endl)"];
"1000446" [label="(Call,tr.flags)"];
"1000557" [label="(Call,result = TIMED_OUT)"];
"1000421" [label="(Call,tr.data.ptr.offsets)"];
"1000102" [label="(Block,)"];
"1000463" [label="(ControlStructure,if ((tr.flags & TF_ONE_WAY) == 0))"];
"1000398" [label="(Call,buffer\n << dedent << endl\n << \"Data addr = \"\n << reinterpret_cast<const uint8_t*>(tr.data.ptr.buffer)\n << \", offsets addr=\"\n\n                     << reinterpret_cast<const size_t*>(tr.data.ptr.offsets) << endl)"];
"1000453" [label="(Call,the_context_object->transact(tr.code, buffer, &reply, tr.flags))"];
"1000479" [label="(Call,reply.setError(error))"];
"1000401" [label="(Identifier,dedent)"];
"1000444" [label="(Call,&reply)"];
"1000583" [label="(Return,return result;)"];
"1000406" [label="(Call,reinterpret_cast<const uint8_t*>(tr.data.ptr.buffer)\n << \", offsets addr=\"\n\n                     << reinterpret_cast<const size_t*>(tr.data.ptr.offsets) << endl)"];
"1000404" [label="(Call,\"Data addr = \"\n << reinterpret_cast<const uint8_t*>(tr.data.ptr.buffer)\n << \", offsets addr=\"\n\n                     << reinterpret_cast<const size_t*>(tr.data.ptr.offsets) << endl)"];
"1000466" [label="(Call,tr.flags)"];
"1000473" [label="(Literal,\"Sending reply to %d!\")"];
"1000399" [label="(Identifier,buffer)"];
"1000391" [label="(Call,tr.code)"];
"1000278" [label="(Call,buffer.ipcSetDataReference(\n reinterpret_cast<const uint8_t*>(tr.data.ptr.buffer),\n                tr.data_size,\n reinterpret_cast<const binder_size_t*>(tr.data.ptr.offsets),\n                tr.offsets_size/sizeof(binder_size_t), freeBuffer, this))"];
"1000451" [label="(Call,error = the_context_object->transact(tr.code, buffer, &reply, tr.flags))"];
"1000482" [label="(Identifier,reply)"];
"1000582" [label="(Identifier,result)"];
"1000469" [label="(Identifier,TF_ONE_WAY)"];
"1000281" [label="(Call,tr.data.ptr.buffer)"];
"1000476" [label="(Call,error < NO_ERROR)"];
"1000439" [label="(Call,b->transact(tr.code, buffer, &reply, tr.flags))"];
"1000575" [label="(ControlStructure,if (result != NO_ERROR))"];
"1000409" [label="(Call,tr.data.ptr.buffer)"];
"1000279" [label="(Call,reinterpret_cast<const uint8_t*>(tr.data.ptr.buffer))"];
"1000289" [label="(Identifier,tr)"];
"1000293" [label="(Call,tr.data.ptr.offsets)"];
"1000443" [label="(Identifier,buffer)"];
"1000395" [label="(Literal,\": \")"];
"1000577" [label="(Identifier,result)"];
"1000585" [label="(MethodReturn,status_t)"];
"1000439" -> "1000437"  [label="AST: "];
"1000439" -> "1000446"  [label="CFG: "];
"1000440" -> "1000439"  [label="AST: "];
"1000443" -> "1000439"  [label="AST: "];
"1000444" -> "1000439"  [label="AST: "];
"1000446" -> "1000439"  [label="AST: "];
"1000437" -> "1000439"  [label="CFG: "];
"1000439" -> "1000585"  [label="DDG: "];
"1000439" -> "1000585"  [label="DDG: "];
"1000439" -> "1000585"  [label="DDG: "];
"1000439" -> "1000437"  [label="DDG: "];
"1000439" -> "1000437"  [label="DDG: "];
"1000439" -> "1000437"  [label="DDG: "];
"1000439" -> "1000437"  [label="DDG: "];
"1000390" -> "1000439"  [label="DDG: "];
"1000398" -> "1000439"  [label="DDG: "];
"1000439" -> "1000465"  [label="DDG: "];
"1000390" -> "1000389"  [label="AST: "];
"1000390" -> "1000391"  [label="CFG: "];
"1000391" -> "1000390"  [label="AST: "];
"1000395" -> "1000390"  [label="CFG: "];
"1000390" -> "1000389"  [label="DDG: "];
"1000390" -> "1000453"  [label="DDG: "];
"1000398" -> "1000396"  [label="AST: "];
"1000398" -> "1000400"  [label="CFG: "];
"1000399" -> "1000398"  [label="AST: "];
"1000400" -> "1000398"  [label="AST: "];
"1000396" -> "1000398"  [label="CFG: "];
"1000398" -> "1000585"  [label="DDG: "];
"1000398" -> "1000396"  [label="DDG: "];
"1000398" -> "1000396"  [label="DDG: "];
"1000400" -> "1000398"  [label="DDG: "];
"1000400" -> "1000398"  [label="DDG: "];
"1000398" -> "1000453"  [label="DDG: "];
"1000400" -> "1000402"  [label="CFG: "];
"1000401" -> "1000400"  [label="AST: "];
"1000402" -> "1000400"  [label="AST: "];
"1000400" -> "1000585"  [label="DDG: "];
"1000402" -> "1000400"  [label="DDG: "];
"1000402" -> "1000400"  [label="DDG: "];
"1000400" -> "1000525"  [label="DDG: "];
"1000402" -> "1000404"  [label="CFG: "];
"1000403" -> "1000402"  [label="AST: "];
"1000404" -> "1000402"  [label="AST: "];
"1000402" -> "1000585"  [label="DDG: "];
"1000418" -> "1000402"  [label="DDG: "];
"1000404" -> "1000402"  [label="DDG: "];
"1000404" -> "1000402"  [label="DDG: "];
"1000402" -> "1000525"  [label="DDG: "];
"1000418" -> "1000416"  [label="AST: "];
"1000418" -> "1000428"  [label="CFG: "];
"1000419" -> "1000418"  [label="AST: "];
"1000428" -> "1000418"  [label="AST: "];
"1000416" -> "1000418"  [label="CFG: "];
"1000418" -> "1000585"  [label="DDG: "];
"1000418" -> "1000416"  [label="DDG: "];
"1000418" -> "1000416"  [label="DDG: "];
"1000419" -> "1000418"  [label="DDG: "];
"1000419" -> "1000421"  [label="CFG: "];
"1000420" -> "1000419"  [label="AST: "];
"1000421" -> "1000419"  [label="AST: "];
"1000428" -> "1000419"  [label="CFG: "];
"1000419" -> "1000585"  [label="DDG: "];
"1000291" -> "1000419"  [label="DDG: "];
"1000291" -> "1000278"  [label="AST: "];
"1000291" -> "1000293"  [label="CFG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000293" -> "1000291"  [label="AST: "];
"1000302" -> "1000291"  [label="CFG: "];
"1000291" -> "1000278"  [label="DDG: "];
"1000404" -> "1000406"  [label="CFG: "];
"1000405" -> "1000404"  [label="AST: "];
"1000406" -> "1000404"  [label="AST: "];
"1000404" -> "1000585"  [label="DDG: "];
"1000406" -> "1000404"  [label="DDG: "];
"1000406" -> "1000404"  [label="DDG: "];
"1000406" -> "1000416"  [label="CFG: "];
"1000407" -> "1000406"  [label="AST: "];
"1000416" -> "1000406"  [label="AST: "];
"1000406" -> "1000585"  [label="DDG: "];
"1000406" -> "1000585"  [label="DDG: "];
"1000407" -> "1000406"  [label="DDG: "];
"1000416" -> "1000406"  [label="DDG: "];
"1000416" -> "1000406"  [label="DDG: "];
"1000407" -> "1000409"  [label="CFG: "];
"1000408" -> "1000407"  [label="AST: "];
"1000409" -> "1000407"  [label="AST: "];
"1000417" -> "1000407"  [label="CFG: "];
"1000407" -> "1000585"  [label="DDG: "];
"1000279" -> "1000407"  [label="DDG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000279" -> "1000281"  [label="CFG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000281" -> "1000279"  [label="AST: "];
"1000289" -> "1000279"  [label="CFG: "];
"1000279" -> "1000278"  [label="DDG: "];
"1000417" -> "1000416"  [label="AST: "];
"1000416" -> "1000585"  [label="DDG: "];
"1000437" -> "1000435"  [label="AST: "];
"1000438" -> "1000437"  [label="AST: "];
"1000467" -> "1000437"  [label="CFG: "];
"1000437" -> "1000585"  [label="DDG: "];
"1000437" -> "1000585"  [label="DDG: "];
"1000437" -> "1000476"  [label="DDG: "];
"1000476" -> "1000475"  [label="AST: "];
"1000476" -> "1000478"  [label="CFG: "];
"1000477" -> "1000476"  [label="AST: "];
"1000478" -> "1000476"  [label="AST: "];
"1000480" -> "1000476"  [label="CFG: "];
"1000482" -> "1000476"  [label="CFG: "];
"1000476" -> "1000585"  [label="DDG: "];
"1000476" -> "1000585"  [label="DDG: "];
"1000451" -> "1000476"  [label="DDG: "];
"1000273" -> "1000476"  [label="DDG: "];
"1000476" -> "1000479"  [label="DDG: "];
"1000476" -> "1000576"  [label="DDG: "];
"1000479" -> "1000475"  [label="AST: "];
"1000479" -> "1000480"  [label="CFG: "];
"1000480" -> "1000479"  [label="AST: "];
"1000482" -> "1000479"  [label="CFG: "];
"1000479" -> "1000585"  [label="DDG: "];
"1000479" -> "1000585"  [label="DDG: "];
"1000576" -> "1000575"  [label="AST: "];
"1000576" -> "1000578"  [label="CFG: "];
"1000577" -> "1000576"  [label="AST: "];
"1000578" -> "1000576"  [label="AST: "];
"1000581" -> "1000576"  [label="CFG: "];
"1000584" -> "1000576"  [label="CFG: "];
"1000576" -> "1000585"  [label="DDG: "];
"1000576" -> "1000585"  [label="DDG: "];
"1000576" -> "1000585"  [label="DDG: "];
"1000106" -> "1000576"  [label="DDG: "];
"1000273" -> "1000576"  [label="DDG: "];
"1000273" -> "1000576"  [label="DDG: "];
"1000557" -> "1000576"  [label="DDG: "];
"1000571" -> "1000576"  [label="DDG: "];
"1000115" -> "1000576"  [label="DDG: "];
"1000576" -> "1000580"  [label="DDG: "];
"1000576" -> "1000583"  [label="DDG: "];
"1000580" -> "1000579"  [label="AST: "];
"1000580" -> "1000582"  [label="CFG: "];
"1000581" -> "1000580"  [label="AST: "];
"1000582" -> "1000580"  [label="AST: "];
"1000584" -> "1000580"  [label="CFG: "];
"1000580" -> "1000585"  [label="DDG: "];
"1000580" -> "1000585"  [label="DDG: "];
"1000583" -> "1000102"  [label="AST: "];
"1000583" -> "1000584"  [label="CFG: "];
"1000584" -> "1000583"  [label="AST: "];
"1000585" -> "1000583"  [label="CFG: "];
"1000583" -> "1000585"  [label="DDG: "];
"1000584" -> "1000583"  [label="DDG: "];
"1000465" -> "1000464"  [label="AST: "];
"1000465" -> "1000469"  [label="CFG: "];
"1000466" -> "1000465"  [label="AST: "];
"1000469" -> "1000465"  [label="AST: "];
"1000470" -> "1000465"  [label="CFG: "];
"1000465" -> "1000585"  [label="DDG: "];
"1000465" -> "1000585"  [label="DDG: "];
"1000465" -> "1000464"  [label="DDG: "];
"1000465" -> "1000464"  [label="DDG: "];
"1000453" -> "1000465"  [label="DDG: "];
"1000464" -> "1000463"  [label="AST: "];
"1000464" -> "1000470"  [label="CFG: "];
"1000470" -> "1000464"  [label="AST: "];
"1000473" -> "1000464"  [label="CFG: "];
"1000487" -> "1000464"  [label="CFG: "];
"1000464" -> "1000585"  [label="DDG: "];
"1000464" -> "1000585"  [label="DDG: "];
}
