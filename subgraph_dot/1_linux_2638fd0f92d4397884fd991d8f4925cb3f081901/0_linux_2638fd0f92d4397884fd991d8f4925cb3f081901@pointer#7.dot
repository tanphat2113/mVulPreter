digraph "0_linux_2638fd0f92d4397884fd991d8f4925cb3f081901@pointer" {
"1000407" [label="(Call,opt[0] = TCPOPT_MSS)"];
"1000254" [label="(Call,opt[i] == TCPOPT_MSS)"];
"1000231" [label="(Call,opt = (u_int8_t *)tcph)"];
"1000233" [label="(Call,(u_int8_t *)tcph)"];
"1000160" [label="(Call,tcph = (struct tcphdr *)(skb_network_header(skb) + tcphoff))"];
"1000162" [label="(Call,(struct tcphdr *)(skb_network_header(skb) + tcphoff))"];
"1000165" [label="(Call,skb_network_header(skb))"];
"1000135" [label="(Call,skb_make_writable(skb, skb->len))"];
"1000106" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000145" [label="(Call,skb->len - tcphoff)"];
"1000109" [label="(MethodParameterIn,unsigned int tcphoff)"];
"1000248" [label="(Call,optlen(opt, i))"];
"1000259" [label="(Call,opt[i+1] == TCPOLEN_MSS)"];
"1000243" [label="(Call,tcp_hdrlen - TCPOLEN_MSS)"];
"1000176" [label="(Call,len < tcp_hdrlen)"];
"1000151" [label="(Call,len < (int)sizeof(struct tcphdr))"];
"1000143" [label="(Call,len = skb->len - tcphoff)"];
"1000168" [label="(Call,tcp_hdrlen = tcph->doff * 4)"];
"1000170" [label="(Call,tcph->doff * 4)"];
"1000241" [label="(Call,i <= tcp_hdrlen - TCPOLEN_MSS)"];
"1000237" [label="(Call,i = sizeof(struct tcphdr))"];
"1000246" [label="(Call,i += optlen(opt, i))"];
"1000441" [label="(Call,(__be32 *)opt)"];
"1000354" [label="(Call,skb_put(skb, TCPOLEN_MSS))"];
"1000386" [label="(Call,opt + TCPOLEN_MSS)"];
"1000171" [label="(Call,tcph->doff)"];
"1000232" [label="(Identifier,opt)"];
"1000256" [label="(Identifier,opt)"];
"1000206" [label="(Call,skb_dst(skb))"];
"1000303" [label="(Call,i+3)"];
"1000274" [label="(Call,i+2)"];
"1000258" [label="(Identifier,TCPOPT_MSS)"];
"1000151" [label="(Call,len < (int)sizeof(struct tcphdr))"];
"1000176" [label="(Call,len < tcp_hdrlen)"];
"1000348" [label="(Call,(struct tcphdr *)(skb_network_header(skb) + tcphoff))"];
"1000340" [label="(Call,skb_tailroom(skb))"];
"1000150" [label="(ControlStructure,if (len < (int)sizeof(struct tcphdr)))"];
"1000309" [label="(Call,inet_proto_csum_replace2(&tcph->check, skb,\n\t\t\t\t\t\t htons(oldmss), htons(newmss),\n\t\t\t\t\t\t false))"];
"1000380" [label="(Call,(u_int8_t *)tcph)"];
"1000135" [label="(Call,skb_make_writable(skb, skb->len))"];
"1000145" [label="(Call,skb->len - tcphoff)"];
"1000167" [label="(Identifier,tcphoff)"];
"1000241" [label="(Call,i <= tcp_hdrlen - TCPOLEN_MSS)"];
"1000323" [label="(Call,len > tcp_hdrlen)"];
"1000168" [label="(Call,tcp_hdrlen = tcph->doff * 4)"];
"1000236" [label="(ControlStructure,for (i = sizeof(struct tcphdr); i <= tcp_hdrlen - TCPOLEN_MSS; i += optlen(opt, i)))"];
"1000177" [label="(Identifier,len)"];
"1000144" [label="(Identifier,len)"];
"1000137" [label="(Call,skb->len)"];
"1000231" [label="(Call,opt = (u_int8_t *)tcph)"];
"1000330" [label="(Call,skb_tailroom(skb))"];
"1000239" [label="(Call,sizeof(struct tcphdr))"];
"1000441" [label="(Call,(__be32 *)opt)"];
"1000143" [label="(Call,len = skb->len - tcphoff)"];
"1000161" [label="(Identifier,tcph)"];
"1000270" [label="(Call,(opt[i+2] << 8) | opt[i+3])"];
"1000385" [label="(Call,memmove(opt + TCPOLEN_MSS, opt, len - sizeof(struct tcphdr)))"];
"1000408" [label="(Call,opt[0])"];
"1000164" [label="(Call,skb_network_header(skb) + tcphoff)"];
"1000335" [label="(Call,pskb_expand_head(skb, 0,\n\t\t\t\t     TCPOLEN_MSS - skb_tailroom(skb),\n\t\t\t\t     GFP_ATOMIC))"];
"1000412" [label="(Call,opt[1] = TCPOLEN_MSS)"];
"1000197" [label="(Call,tcpmss_reverse_mtu(net, skb, family))"];
"1000324" [label="(Identifier,len)"];
"1000159" [label="(Literal,1)"];
"1000411" [label="(Identifier,TCPOPT_MSS)"];
"1000443" [label="(Identifier,opt)"];
"1000394" [label="(Call,inet_proto_csum_replace2(&tcph->check, skb,\n\t\t\t\t htons(len), htons(len + TCPOLEN_MSS), true))"];
"1000265" [label="(Identifier,TCPOLEN_MSS)"];
"1000255" [label="(Call,opt[i])"];
"1000248" [label="(Call,optlen(opt, i))"];
"1000329" [label="(Call,skb_tailroom(skb) < TCPOLEN_MSS)"];
"1000162" [label="(Call,(struct tcphdr *)(skb_network_header(skb) + tcphoff))"];
"1000260" [label="(Call,opt[i+1])"];
"1000165" [label="(Call,skb_network_header(skb))"];
"1000417" [label="(Call,opt[2] = (newmss & 0xff00) >> 8)"];
"1000414" [label="(Identifier,opt)"];
"1000152" [label="(Identifier,len)"];
"1000153" [label="(Call,(int)sizeof(struct tcphdr))"];
"1000433" [label="(Call,inet_proto_csum_replace4(&tcph->check, skb, 0, *((__be32 *)opt), false))"];
"1000146" [label="(Call,skb->len)"];
"1000350" [label="(Call,skb_network_header(skb) + tcphoff)"];
"1000160" [label="(Call,tcph = (struct tcphdr *)(skb_network_header(skb) + tcphoff))"];
"1000185" [label="(Identifier,info)"];
"1000181" [label="(Literal,1)"];
"1000249" [label="(Identifier,opt)"];
"1000244" [label="(Identifier,tcp_hdrlen)"];
"1000261" [label="(Identifier,opt)"];
"1000149" [label="(Identifier,tcphoff)"];
"1000233" [label="(Call,(u_int8_t *)tcph)"];
"1000351" [label="(Call,skb_network_header(skb))"];
"1000474" [label="(MethodReturn,RET)"];
"1000169" [label="(Identifier,tcp_hdrlen)"];
"1000106" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000134" [label="(Call,!skb_make_writable(skb, skb->len))"];
"1000271" [label="(Call,opt[i+2] << 8)"];
"1000166" [label="(Identifier,skb)"];
"1000235" [label="(Identifier,tcph)"];
"1000238" [label="(Identifier,i)"];
"1000245" [label="(Identifier,TCPOLEN_MSS)"];
"1000246" [label="(Call,i += optlen(opt, i))"];
"1000262" [label="(Call,i+1)"];
"1000175" [label="(ControlStructure,if (len < tcp_hdrlen))"];
"1000259" [label="(Call,opt[i+1] == TCPOLEN_MSS)"];
"1000250" [label="(Identifier,i)"];
"1000136" [label="(Identifier,skb)"];
"1000242" [label="(Identifier,i)"];
"1000178" [label="(Identifier,tcp_hdrlen)"];
"1000237" [label="(Call,i = sizeof(struct tcphdr))"];
"1000280" [label="(Call,i+3)"];
"1000253" [label="(Call,opt[i] == TCPOPT_MSS && opt[i+1] == TCPOLEN_MSS)"];
"1000452" [label="(Call,tcph->doff += TCPOLEN_MSS/4)"];
"1000243" [label="(Call,tcp_hdrlen - TCPOLEN_MSS)"];
"1000109" [label="(MethodParameterIn,unsigned int tcphoff)"];
"1000170" [label="(Call,tcph->doff * 4)"];
"1000292" [label="(Call,i+2)"];
"1000254" [label="(Call,opt[i] == TCPOPT_MSS)"];
"1000174" [label="(Literal,4)"];
"1000247" [label="(Identifier,i)"];
"1000440" [label="(Call,*((__be32 *)opt))"];
"1000426" [label="(Call,opt[3] = newmss & 0x00ff)"];
"1000111" [label="(Block,)"];
"1000459" [label="(Call,inet_proto_csum_replace2(&tcph->check, skb,\n\t\t\t\t oldval, ((__be16 *)tcph)[6], false))"];
"1000407" [label="(Call,opt[0] = TCPOPT_MSS)"];
"1000407" -> "1000111"  [label="AST: "];
"1000407" -> "1000411"  [label="CFG: "];
"1000408" -> "1000407"  [label="AST: "];
"1000411" -> "1000407"  [label="AST: "];
"1000414" -> "1000407"  [label="CFG: "];
"1000407" -> "1000474"  [label="DDG: TCPOPT_MSS"];
"1000407" -> "1000474"  [label="DDG: opt[0]"];
"1000254" -> "1000407"  [label="DDG: TCPOPT_MSS"];
"1000407" -> "1000441"  [label="DDG: opt[0]"];
"1000254" -> "1000253"  [label="AST: "];
"1000254" -> "1000258"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000258" -> "1000254"  [label="AST: "];
"1000261" -> "1000254"  [label="CFG: "];
"1000253" -> "1000254"  [label="CFG: "];
"1000254" -> "1000474"  [label="DDG: opt[i]"];
"1000254" -> "1000474"  [label="DDG: TCPOPT_MSS"];
"1000254" -> "1000248"  [label="DDG: opt[i]"];
"1000254" -> "1000253"  [label="DDG: opt[i]"];
"1000254" -> "1000253"  [label="DDG: TCPOPT_MSS"];
"1000231" -> "1000254"  [label="DDG: opt"];
"1000248" -> "1000254"  [label="DDG: opt"];
"1000254" -> "1000385"  [label="DDG: opt[i]"];
"1000254" -> "1000386"  [label="DDG: opt[i]"];
"1000254" -> "1000441"  [label="DDG: opt[i]"];
"1000231" -> "1000111"  [label="AST: "];
"1000231" -> "1000233"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000233" -> "1000231"  [label="AST: "];
"1000238" -> "1000231"  [label="CFG: "];
"1000231" -> "1000474"  [label="DDG: (u_int8_t *)tcph"];
"1000231" -> "1000474"  [label="DDG: opt"];
"1000233" -> "1000231"  [label="DDG: tcph"];
"1000231" -> "1000248"  [label="DDG: opt"];
"1000231" -> "1000259"  [label="DDG: opt"];
"1000231" -> "1000271"  [label="DDG: opt"];
"1000231" -> "1000270"  [label="DDG: opt"];
"1000233" -> "1000235"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000235" -> "1000233"  [label="AST: "];
"1000233" -> "1000474"  [label="DDG: tcph"];
"1000160" -> "1000233"  [label="DDG: tcph"];
"1000233" -> "1000380"  [label="DDG: tcph"];
"1000160" -> "1000111"  [label="AST: "];
"1000160" -> "1000162"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000162" -> "1000160"  [label="AST: "];
"1000169" -> "1000160"  [label="CFG: "];
"1000160" -> "1000474"  [label="DDG: (struct tcphdr *)(skb_network_header(skb) + tcphoff)"];
"1000160" -> "1000474"  [label="DDG: tcph"];
"1000162" -> "1000160"  [label="DDG: skb_network_header(skb) + tcphoff"];
"1000162" -> "1000164"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000164" -> "1000162"  [label="AST: "];
"1000162" -> "1000474"  [label="DDG: skb_network_header(skb) + tcphoff"];
"1000165" -> "1000162"  [label="DDG: skb"];
"1000145" -> "1000162"  [label="DDG: tcphoff"];
"1000109" -> "1000162"  [label="DDG: tcphoff"];
"1000165" -> "1000164"  [label="AST: "];
"1000165" -> "1000166"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000167" -> "1000165"  [label="CFG: "];
"1000165" -> "1000474"  [label="DDG: skb"];
"1000165" -> "1000164"  [label="DDG: skb"];
"1000135" -> "1000165"  [label="DDG: skb"];
"1000106" -> "1000165"  [label="DDG: skb"];
"1000165" -> "1000197"  [label="DDG: skb"];
"1000165" -> "1000309"  [label="DDG: skb"];
"1000165" -> "1000330"  [label="DDG: skb"];
"1000135" -> "1000134"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000134" -> "1000135"  [label="CFG: "];
"1000135" -> "1000474"  [label="DDG: skb"];
"1000135" -> "1000474"  [label="DDG: skb->len"];
"1000135" -> "1000134"  [label="DDG: skb"];
"1000135" -> "1000134"  [label="DDG: skb->len"];
"1000106" -> "1000135"  [label="DDG: skb"];
"1000135" -> "1000145"  [label="DDG: skb->len"];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000474"  [label="DDG: skb"];
"1000106" -> "1000197"  [label="DDG: skb"];
"1000106" -> "1000206"  [label="DDG: skb"];
"1000106" -> "1000309"  [label="DDG: skb"];
"1000106" -> "1000330"  [label="DDG: skb"];
"1000106" -> "1000335"  [label="DDG: skb"];
"1000106" -> "1000340"  [label="DDG: skb"];
"1000106" -> "1000351"  [label="DDG: skb"];
"1000106" -> "1000354"  [label="DDG: skb"];
"1000106" -> "1000394"  [label="DDG: skb"];
"1000106" -> "1000433"  [label="DDG: skb"];
"1000106" -> "1000459"  [label="DDG: skb"];
"1000145" -> "1000143"  [label="AST: "];
"1000145" -> "1000149"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000149" -> "1000145"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000145" -> "1000474"  [label="DDG: tcphoff"];
"1000145" -> "1000474"  [label="DDG: skb->len"];
"1000145" -> "1000143"  [label="DDG: skb->len"];
"1000145" -> "1000143"  [label="DDG: tcphoff"];
"1000109" -> "1000145"  [label="DDG: tcphoff"];
"1000145" -> "1000164"  [label="DDG: tcphoff"];
"1000145" -> "1000348"  [label="DDG: tcphoff"];
"1000145" -> "1000350"  [label="DDG: tcphoff"];
"1000109" -> "1000105"  [label="AST: "];
"1000109" -> "1000474"  [label="DDG: tcphoff"];
"1000109" -> "1000164"  [label="DDG: tcphoff"];
"1000109" -> "1000348"  [label="DDG: tcphoff"];
"1000109" -> "1000350"  [label="DDG: tcphoff"];
"1000248" -> "1000246"  [label="AST: "];
"1000248" -> "1000250"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="AST: "];
"1000246" -> "1000248"  [label="CFG: "];
"1000248" -> "1000474"  [label="DDG: opt"];
"1000248" -> "1000246"  [label="DDG: opt"];
"1000248" -> "1000246"  [label="DDG: i"];
"1000259" -> "1000248"  [label="DDG: opt[i+1]"];
"1000241" -> "1000248"  [label="DDG: i"];
"1000248" -> "1000259"  [label="DDG: opt"];
"1000248" -> "1000271"  [label="DDG: opt"];
"1000248" -> "1000270"  [label="DDG: opt"];
"1000259" -> "1000253"  [label="AST: "];
"1000259" -> "1000265"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000265" -> "1000259"  [label="AST: "];
"1000253" -> "1000259"  [label="CFG: "];
"1000259" -> "1000474"  [label="DDG: opt[i+1]"];
"1000259" -> "1000474"  [label="DDG: TCPOLEN_MSS"];
"1000259" -> "1000243"  [label="DDG: TCPOLEN_MSS"];
"1000259" -> "1000253"  [label="DDG: opt[i+1]"];
"1000259" -> "1000253"  [label="DDG: TCPOLEN_MSS"];
"1000243" -> "1000259"  [label="DDG: TCPOLEN_MSS"];
"1000259" -> "1000385"  [label="DDG: opt[i+1]"];
"1000259" -> "1000386"  [label="DDG: opt[i+1]"];
"1000259" -> "1000441"  [label="DDG: opt[i+1]"];
"1000243" -> "1000241"  [label="AST: "];
"1000243" -> "1000245"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000245" -> "1000243"  [label="AST: "];
"1000241" -> "1000243"  [label="CFG: "];
"1000243" -> "1000474"  [label="DDG: tcp_hdrlen"];
"1000243" -> "1000474"  [label="DDG: TCPOLEN_MSS"];
"1000243" -> "1000241"  [label="DDG: tcp_hdrlen"];
"1000243" -> "1000241"  [label="DDG: TCPOLEN_MSS"];
"1000176" -> "1000243"  [label="DDG: tcp_hdrlen"];
"1000243" -> "1000323"  [label="DDG: tcp_hdrlen"];
"1000243" -> "1000329"  [label="DDG: TCPOLEN_MSS"];
"1000176" -> "1000175"  [label="AST: "];
"1000176" -> "1000178"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000178" -> "1000176"  [label="AST: "];
"1000181" -> "1000176"  [label="CFG: "];
"1000185" -> "1000176"  [label="CFG: "];
"1000176" -> "1000474"  [label="DDG: tcp_hdrlen"];
"1000176" -> "1000474"  [label="DDG: len < tcp_hdrlen"];
"1000176" -> "1000474"  [label="DDG: len"];
"1000151" -> "1000176"  [label="DDG: len"];
"1000168" -> "1000176"  [label="DDG: tcp_hdrlen"];
"1000176" -> "1000323"  [label="DDG: len"];
"1000151" -> "1000150"  [label="AST: "];
"1000151" -> "1000153"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000153" -> "1000151"  [label="AST: "];
"1000159" -> "1000151"  [label="CFG: "];
"1000161" -> "1000151"  [label="CFG: "];
"1000151" -> "1000474"  [label="DDG: len < (int)sizeof(struct tcphdr)"];
"1000151" -> "1000474"  [label="DDG: len"];
"1000151" -> "1000474"  [label="DDG: (int)sizeof(struct tcphdr)"];
"1000143" -> "1000151"  [label="DDG: len"];
"1000143" -> "1000111"  [label="AST: "];
"1000144" -> "1000143"  [label="AST: "];
"1000152" -> "1000143"  [label="CFG: "];
"1000143" -> "1000474"  [label="DDG: skb->len - tcphoff"];
"1000168" -> "1000111"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000177" -> "1000168"  [label="CFG: "];
"1000168" -> "1000474"  [label="DDG: tcph->doff * 4"];
"1000170" -> "1000168"  [label="DDG: tcph->doff"];
"1000170" -> "1000168"  [label="DDG: 4"];
"1000170" -> "1000174"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000174" -> "1000170"  [label="AST: "];
"1000170" -> "1000474"  [label="DDG: tcph->doff"];
"1000170" -> "1000452"  [label="DDG: tcph->doff"];
"1000241" -> "1000236"  [label="AST: "];
"1000242" -> "1000241"  [label="AST: "];
"1000256" -> "1000241"  [label="CFG: "];
"1000324" -> "1000241"  [label="CFG: "];
"1000241" -> "1000474"  [label="DDG: i"];
"1000241" -> "1000474"  [label="DDG: i <= tcp_hdrlen - TCPOLEN_MSS"];
"1000241" -> "1000474"  [label="DDG: tcp_hdrlen - TCPOLEN_MSS"];
"1000237" -> "1000241"  [label="DDG: i"];
"1000246" -> "1000241"  [label="DDG: i"];
"1000241" -> "1000262"  [label="DDG: i"];
"1000241" -> "1000274"  [label="DDG: i"];
"1000241" -> "1000280"  [label="DDG: i"];
"1000241" -> "1000292"  [label="DDG: i"];
"1000241" -> "1000303"  [label="DDG: i"];
"1000237" -> "1000236"  [label="AST: "];
"1000237" -> "1000239"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000239" -> "1000237"  [label="AST: "];
"1000242" -> "1000237"  [label="CFG: "];
"1000246" -> "1000236"  [label="AST: "];
"1000247" -> "1000246"  [label="AST: "];
"1000242" -> "1000246"  [label="CFG: "];
"1000246" -> "1000474"  [label="DDG: optlen(opt, i)"];
"1000441" -> "1000440"  [label="AST: "];
"1000441" -> "1000443"  [label="CFG: "];
"1000442" -> "1000441"  [label="AST: "];
"1000443" -> "1000441"  [label="AST: "];
"1000440" -> "1000441"  [label="CFG: "];
"1000441" -> "1000474"  [label="DDG: opt"];
"1000412" -> "1000441"  [label="DDG: opt[1]"];
"1000417" -> "1000441"  [label="DDG: opt[2]"];
"1000385" -> "1000441"  [label="DDG: opt"];
"1000426" -> "1000441"  [label="DDG: opt[3]"];
}
