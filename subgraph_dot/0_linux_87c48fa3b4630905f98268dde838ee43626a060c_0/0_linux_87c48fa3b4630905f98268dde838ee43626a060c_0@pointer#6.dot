digraph "0_linux_87c48fa3b4630905f98268dde838ee43626a060c_0@pointer" {
"1000591" [label="(Call,cork->length + length)"];
"1000468" [label="(Call,cork->length = 0)"];
"1000501" [label="(Call,length += exthdrlen)"];
"1000483" [label="(Call,exthdrlen = rt->dst.header_len + (opt ? opt->opt_flen : 0) -\n\t\t\t    rt->rt6i_nfheader_len)"];
"1000491" [label="(Call,(opt ? opt->opt_flen : 0) -\n\t\t\t    rt->rt6i_nfheader_len)"];
"1000122" [label="(MethodParameterIn,struct ipv6_txoptions *opt)"];
"1000118" [label="(MethodParameterIn,int length)"];
"1000469" [label="(Call,cork->length)"];
"1000528" [label="(Call,opt = np->cork.opt)"];
"1000556" [label="(Call,sizeof(struct ipv6hdr) + rt->rt6i_nfheader_len +\n\t\t\t(opt ? opt->opt_nflen : 0))"];
"1000504" [label="(Call,transhdrlen += exthdrlen)"];
"1000945" [label="(Call,skb_set_network_header(skb, exthdrlen))"];
"1000590" [label="(Call,cork->length + length > sizeof(struct ipv6hdr) + IPV6_MAXPLEN - fragheaderlen)"];
"1001039" [label="(Call,length -= datalen - fraggap)"];
"1000554" [label="(Call,fragheaderlen = sizeof(struct ipv6hdr) + rt->rt6i_nfheader_len +\n\t\t\t(opt ? opt->opt_nflen : 0))"];
"1000498" [label="(Call,rt->rt6i_nfheader_len)"];
"1000559" [label="(Call,rt->rt6i_nfheader_len +\n\t\t\t(opt ? opt->opt_nflen : 0))"];
"1000592" [label="(Call,cork->length)"];
"1000774" [label="(Call,datalen = length + fraggap)"];
"1000710" [label="(Call,length > 0)"];
"1000595" [label="(Identifier,length)"];
"1000475" [label="(Identifier,sk)"];
"1000635" [label="(Call,length > mtu)"];
"1000776" [label="(Call,length + fraggap)"];
"1000468" [label="(Call,cork->length = 0)"];
"1001061" [label="(Call,copy > length)"];
"1000122" [label="(MethodParameterIn,struct ipv6_txoptions *opt)"];
"1000483" [label="(Call,exthdrlen = rt->dst.header_len + (opt ? opt->opt_flen : 0) -\n\t\t\t    rt->rt6i_nfheader_len)"];
"1000472" [label="(Literal,0)"];
"1000179" [label="(Block,)"];
"1000629" [label="(Call,cork->length += length)"];
"1000503" [label="(Identifier,exthdrlen)"];
"1000834" [label="(Call,datalen == length + fraggap)"];
"1000505" [label="(Identifier,transhdrlen)"];
"1000591" [label="(Call,cork->length + length)"];
"1000736" [label="(Call,copy < length)"];
"1000836" [label="(Call,length + fraggap)"];
"1001064" [label="(Call,copy = length)"];
"1000607" [label="(Call,mtu-exthdrlen)"];
"1000502" [label="(Identifier,length)"];
"1000563" [label="(Call,opt ? opt->opt_nflen : 0)"];
"1000484" [label="(Identifier,exthdrlen)"];
"1000501" [label="(Call,length += exthdrlen)"];
"1000682" [label="(Call,ip6_ufo_append_data(sk, getfrag, from, length,\n \t\t\t\t\t\t  hh_len, fragheaderlen,\n\t\t\t\t\t\t  transhdrlen, mtu, flags, rt))"];
"1001339" [label="(MethodReturn,int)"];
"1001319" [label="(Call,length -= copy)"];
"1000491" [label="(Call,(opt ? opt->opt_flen : 0) -\n\t\t\t    rt->rt6i_nfheader_len)"];
"1000659" [label="(Call,mtu-exthdrlen)"];
"1001325" [label="(Call,cork->length -= length)"];
"1000492" [label="(Call,opt ? opt->opt_flen : 0)"];
"1000118" [label="(MethodParameterIn,int length)"];
"1000485" [label="(Call,rt->dst.header_len + (opt ? opt->opt_flen : 0) -\n\t\t\t    rt->rt6i_nfheader_len)"];
"1000591" -> "1000590"  [label="AST: "];
"1000591" -> "1000595"  [label="CFG: "];
"1000592" -> "1000591"  [label="AST: "];
"1000595" -> "1000591"  [label="AST: "];
"1000598" -> "1000591"  [label="CFG: "];
"1000591" -> "1001339"  [label="DDG: length"];
"1000591" -> "1001339"  [label="DDG: cork->length"];
"1000468" -> "1000591"  [label="DDG: cork->length"];
"1000501" -> "1000591"  [label="DDG: length"];
"1000118" -> "1000591"  [label="DDG: length"];
"1000468" -> "1000179"  [label="AST: "];
"1000468" -> "1000472"  [label="CFG: "];
"1000469" -> "1000468"  [label="AST: "];
"1000472" -> "1000468"  [label="AST: "];
"1000475" -> "1000468"  [label="CFG: "];
"1000468" -> "1000590"  [label="DDG: cork->length"];
"1000468" -> "1000629"  [label="DDG: cork->length"];
"1000468" -> "1001325"  [label="DDG: cork->length"];
"1000501" -> "1000179"  [label="AST: "];
"1000501" -> "1000503"  [label="CFG: "];
"1000502" -> "1000501"  [label="AST: "];
"1000503" -> "1000501"  [label="AST: "];
"1000505" -> "1000501"  [label="CFG: "];
"1000483" -> "1000501"  [label="DDG: exthdrlen"];
"1000118" -> "1000501"  [label="DDG: length"];
"1000501" -> "1000590"  [label="DDG: length"];
"1000501" -> "1000629"  [label="DDG: length"];
"1000501" -> "1000635"  [label="DDG: length"];
"1000501" -> "1001325"  [label="DDG: length"];
"1000483" -> "1000179"  [label="AST: "];
"1000483" -> "1000485"  [label="CFG: "];
"1000484" -> "1000483"  [label="AST: "];
"1000485" -> "1000483"  [label="AST: "];
"1000502" -> "1000483"  [label="CFG: "];
"1000483" -> "1001339"  [label="DDG: rt->dst.header_len + (opt ? opt->opt_flen : 0) -\n\t\t\t    rt->rt6i_nfheader_len"];
"1000491" -> "1000483"  [label="DDG: opt ? opt->opt_flen : 0"];
"1000491" -> "1000483"  [label="DDG: rt->rt6i_nfheader_len"];
"1000483" -> "1000504"  [label="DDG: exthdrlen"];
"1000483" -> "1000607"  [label="DDG: exthdrlen"];
"1000483" -> "1000659"  [label="DDG: exthdrlen"];
"1000483" -> "1000945"  [label="DDG: exthdrlen"];
"1000491" -> "1000485"  [label="AST: "];
"1000491" -> "1000498"  [label="CFG: "];
"1000492" -> "1000491"  [label="AST: "];
"1000498" -> "1000491"  [label="AST: "];
"1000485" -> "1000491"  [label="CFG: "];
"1000491" -> "1001339"  [label="DDG: opt ? opt->opt_flen : 0"];
"1000491" -> "1000485"  [label="DDG: opt ? opt->opt_flen : 0"];
"1000491" -> "1000485"  [label="DDG: rt->rt6i_nfheader_len"];
"1000122" -> "1000491"  [label="DDG: opt"];
"1000491" -> "1000554"  [label="DDG: rt->rt6i_nfheader_len"];
"1000491" -> "1000556"  [label="DDG: rt->rt6i_nfheader_len"];
"1000491" -> "1000559"  [label="DDG: rt->rt6i_nfheader_len"];
"1000122" -> "1000114"  [label="AST: "];
"1000122" -> "1001339"  [label="DDG: opt"];
"1000122" -> "1000492"  [label="DDG: opt"];
"1000122" -> "1000528"  [label="DDG: opt"];
"1000122" -> "1000554"  [label="DDG: opt"];
"1000122" -> "1000556"  [label="DDG: opt"];
"1000122" -> "1000559"  [label="DDG: opt"];
"1000122" -> "1000563"  [label="DDG: opt"];
"1000118" -> "1000114"  [label="AST: "];
"1000118" -> "1001339"  [label="DDG: length"];
"1000118" -> "1000590"  [label="DDG: length"];
"1000118" -> "1000629"  [label="DDG: length"];
"1000118" -> "1000635"  [label="DDG: length"];
"1000118" -> "1000682"  [label="DDG: length"];
"1000118" -> "1000710"  [label="DDG: length"];
"1000118" -> "1000736"  [label="DDG: length"];
"1000118" -> "1000774"  [label="DDG: length"];
"1000118" -> "1000776"  [label="DDG: length"];
"1000118" -> "1000834"  [label="DDG: length"];
"1000118" -> "1000836"  [label="DDG: length"];
"1000118" -> "1001039"  [label="DDG: length"];
"1000118" -> "1001061"  [label="DDG: length"];
"1000118" -> "1001064"  [label="DDG: length"];
"1000118" -> "1001319"  [label="DDG: length"];
"1000118" -> "1001325"  [label="DDG: length"];
}
