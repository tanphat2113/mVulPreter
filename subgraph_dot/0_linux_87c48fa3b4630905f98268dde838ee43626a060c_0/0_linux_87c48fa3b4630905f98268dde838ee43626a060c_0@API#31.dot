digraph "0_linux_87c48fa3b4630905f98268dde838ee43626a060c_0@API" {
"1000193" [label="(Call,np->cork.opt = kmalloc(opt->tot_len, sk->sk_allocation))"];
"1000199" [label="(Call,kmalloc(opt->tot_len, sk->sk_allocation))"];
"1000208" [label="(Call,np->cork.opt == NULL)"];
"1000207" [label="(Call,unlikely(np->cork.opt == NULL))"];
"1000473" [label="(Call,sk->sk_sndmsg_page = NULL)"];
"1001128" [label="(Call,*page = sk->sk_sndmsg_page)"];
"1001141" [label="(Call,page && (left = PAGE_SIZE - off) > 0)"];
"1001159" [label="(Call,page != frag->page)"];
"1001175" [label="(Call,get_page(page))"];
"1001177" [label="(Call,skb_fill_page_desc(skb, i, page, sk->sk_sndmsg_off, 0))"];
"1001190" [label="(Call,skb_shinfo(skb))"];
"1001258" [label="(Call,getfrag(from, page_address(frag->page)+frag->page_offset+frag->size, offset, copy, skb->len, skb))"];
"1000758" [label="(Call,skb_prev = skb)"];
"1000967" [label="(Call,skb_copy_and_csum_bits(\n\t\t\t\t\tskb_prev, maxfraglen,\n\t\t\t\t\tdata + transhdrlen, fraggap, 0))"];
"1000963" [label="(Call,skb->csum = skb_copy_and_csum_bits(\n\t\t\t\t\tskb_prev, maxfraglen,\n\t\t\t\t\tdata + transhdrlen, fraggap, 0))"];
"1000979" [label="(Call,csum_sub(skb_prev->csum,\n\t\t\t\t\t\t\t  skb->csum))"];
"1000975" [label="(Call,skb_prev->csum = csum_sub(skb_prev->csum,\n\t\t\t\t\t\t\t  skb->csum))"];
"1000986" [label="(Call,data += fraggap)"];
"1001018" [label="(Call,getfrag(from, data + transhdrlen, offset, copy, fraggap, skb))"];
"1001017" [label="(Call,getfrag(from, data + transhdrlen, offset, copy, fraggap, skb) < 0)"];
"1001013" [label="(Call,copy > 0 && getfrag(from, data + transhdrlen, offset, copy, fraggap, skb) < 0)"];
"1001033" [label="(Call,kfree_skb(skb))"];
"1001036" [label="(Call,offset += copy)"];
"1001087" [label="(Call,getfrag(from, skb_put(skb, copy),\n\t\t\t\t\t\toffset, copy, off, skb))"];
"1001086" [label="(Call,getfrag(from, skb_put(skb, copy),\n\t\t\t\t\t\toffset, copy, off, skb) < 0)"];
"1001089" [label="(Call,skb_put(skb, copy))"];
"1001098" [label="(Call,__skb_trim(skb, off))"];
"1001112" [label="(Call,skb_shinfo(skb))"];
"1001121" [label="(Call,skb_shinfo(skb))"];
"1001234" [label="(Call,skb_fill_page_desc(skb, i, page, 0, 0))"];
"1001245" [label="(Call,skb_shinfo(skb))"];
"1001316" [label="(Call,offset += copy)"];
"1001319" [label="(Call,length -= copy)"];
"1000710" [label="(Call,length > 0)"];
"1000736" [label="(Call,copy < length)"];
"1000747" [label="(Call,copy <= 0)"];
"1001061" [label="(Call,copy > length)"];
"1001064" [label="(Call,copy = length)"];
"1001152" [label="(Call,copy >= left)"];
"1001155" [label="(Call,copy = left)"];
"1001201" [label="(Call,copy > PAGE_SIZE)"];
"1001146" [label="(Call,PAGE_SIZE - off)"];
"1001143" [label="(Call,(left = PAGE_SIZE - off) > 0)"];
"1001144" [label="(Call,left = PAGE_SIZE - off)"];
"1001204" [label="(Call,copy = PAGE_SIZE)"];
"1001325" [label="(Call,cork->length -= length)"];
"1000774" [label="(Call,datalen = length + fraggap)"];
"1000780" [label="(Call,datalen > (cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG) ? mtu : maxfraglen) - fragheaderlen)"];
"1000804" [label="(Call,fraglen = datalen + fragheaderlen)"];
"1000942" [label="(Call,skb_put(skb, fraglen))"];
"1000940" [label="(Call,data = skb_put(skb, fraglen))"];
"1000948" [label="(Call,data += fragheaderlen)"];
"1000970" [label="(Call,data + transhdrlen)"];
"1001020" [label="(Call,data + transhdrlen)"];
"1000945" [label="(Call,skb_set_network_header(skb, exthdrlen))"];
"1001008" [label="(Call,kfree_skb(skb))"];
"1001053" [label="(Call,__skb_queue_tail(&sk->sk_write_queue, skb))"];
"1000806" [label="(Call,datalen + fragheaderlen)"];
"1000828" [label="(Call,alloclen = datalen + fragheaderlen)"];
"1000839" [label="(Call,alloclen += rt->dst.trailer_len)"];
"1000846" [label="(Call,alloclen += sizeof(struct frag_hdr))"];
"1000855" [label="(Call,sock_alloc_send_skb(sk,\n\t\t\t\t\t\talloclen + hh_len,\n\t\t\t\t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000853" [label="(Call,skb = sock_alloc_send_skb(sk,\n\t\t\t\t\t\talloclen + hh_len,\n\t\t\t\t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000908" [label="(Call,skb == NULL)"];
"1000867" [label="(Call,skb = NULL)"];
"1000895" [label="(Call,skb == NULL)"];
"1000894" [label="(Call,unlikely(skb == NULL))"];
"1000922" [label="(Call,skb_reserve(skb, hh_len+sizeof(struct frag_hdr)))"];
"1000936" [label="(Call,skb_shinfo(skb))"];
"1001215" [label="(Call,page == NULL)"];
"1001224" [label="(Call,sk->sk_sndmsg_page = page)"];
"1000884" [label="(Call,sock_wmalloc(sk,\n\t\t\t\t\t\t\t   alloclen + hh_len, 1,\n\t\t\t\t\t\t\t   sk->sk_allocation))"];
"1000882" [label="(Call,skb = sock_wmalloc(sk,\n\t\t\t\t\t\t\t   alloclen + hh_len, 1,\n\t\t\t\t\t\t\t   sk->sk_allocation))"];
"1001209" [label="(Call,alloc_pages(sk->sk_allocation, 0))"];
"1001207" [label="(Call,page = alloc_pages(sk->sk_allocation, 0))"];
"1001331" [label="(Call,sock_net(sk))"];
"1001330" [label="(Call,IP6_INC_STATS(sock_net(sk), rt->rt6i_idev, IPSTATS_MIB_OUTDISCARDS))"];
"1000857" [label="(Call,alloclen + hh_len)"];
"1000886" [label="(Call,alloclen + hh_len)"];
"1000830" [label="(Call,datalen + fragheaderlen)"];
"1000834" [label="(Call,datalen == length + fraggap)"];
"1000994" [label="(Call,datalen - transhdrlen - fraggap)"];
"1000992" [label="(Call,copy = datalen - transhdrlen - fraggap)"];
"1001000" [label="(Call,copy < 0)"];
"1001014" [label="(Call,copy > 0)"];
"1001041" [label="(Call,datalen - fraggap)"];
"1001039" [label="(Call,length -= datalen - fraggap)"];
"1000776" [label="(Call,length + fraggap)"];
"1000836" [label="(Call,length + fraggap)"];
"1000989" [label="(Call,pskb_trim_unique(skb_prev, maxfraglen))"];
"1000716" [label="(Call,(cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG) ? mtu : maxfraglen) - skb->len)"];
"1000714" [label="(Call,copy = (cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG) ? mtu : maxfraglen) - skb->len)"];
"1000741" [label="(Call,maxfraglen - skb->len)"];
"1000717" [label="(Call,cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG) ? mtu : maxfraglen)"];
"1000739" [label="(Call,copy = maxfraglen - skb->len)"];
"1000765" [label="(Call,skb_prev->len - maxfraglen)"];
"1000763" [label="(Call,fraggap = skb_prev->len - maxfraglen)"];
"1000996" [label="(Call,transhdrlen - fraggap)"];
"1000782" [label="(Call,(cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG) ? mtu : maxfraglen) - fragheaderlen)"];
"1000801" [label="(Call,maxfraglen - fragheaderlen)"];
"1000799" [label="(Call,datalen = maxfraglen - fragheaderlen)"];
"1000951" [label="(Call,skb->transport_header = (skb->network_header +\n\t\t\t\t\t\t fragheaderlen))"];
"1000955" [label="(Call,skb->network_header +\n\t\t\t\t\t\t fragheaderlen)"];
"1000783" [label="(Call,cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG) ? mtu : maxfraglen)"];
"1001080" [label="(Call,off = skb->len)"];
"1001257" [label="(Call,getfrag(from, page_address(frag->page)+frag->page_offset+frag->size, offset, copy, skb->len, skb) < 0)"];
"1001285" [label="(Call,sk->sk_sndmsg_off += copy)"];
"1001134" [label="(Call,off = sk->sk_sndmsg_off)"];
"1001290" [label="(Call,frag->size += copy)"];
"1001260" [label="(Call,page_address(frag->page)+frag->page_offset+frag->size)"];
"1001265" [label="(Call,frag->page_offset+frag->size)"];
"1001295" [label="(Call,skb->len += copy)"];
"1001300" [label="(Call,skb->data_len += copy)"];
"1001305" [label="(Call,skb->truesize += copy)"];
"1001310" [label="(Call,atomic_add(copy, &sk->sk_wmem_alloc))"];
"1000872" [label="(Call,atomic_read(&sk->sk_wmem_alloc))"];
"1000871" [label="(Call,atomic_read(&sk->sk_wmem_alloc) <=\n\t\t\t\t    2 * sk->sk_sndbuf)"];
"1001261" [label="(Call,page_address(frag->page))"];
"1000699" [label="(Call,(skb = skb_peek_tail(&sk->sk_write_queue)) == NULL)"];
"1001229" [label="(Call,sk->sk_sndmsg_off = 0)"];
"1000884" [label="(Call,sock_wmalloc(sk,\n\t\t\t\t\t\t\t   alloclen + hh_len, 1,\n\t\t\t\t\t\t\t   sk->sk_allocation))"];
"1000963" [label="(Call,skb->csum = skb_copy_and_csum_bits(\n\t\t\t\t\tskb_prev, maxfraglen,\n\t\t\t\t\tdata + transhdrlen, fraggap, 0))"];
"1000980" [label="(Call,skb_prev->csum)"];
"1000217" [label="(Identifier,ENOBUFS)"];
"1000846" [label="(Call,alloclen += sizeof(struct frag_hdr))"];
"1000935" [label="(Call,skb_shinfo(skb)->tx_flags)"];
"1000938" [label="(FieldIdentifier,tx_flags)"];
"1001228" [label="(Identifier,page)"];
"1000194" [label="(Call,np->cork.opt)"];
"1000765" [label="(Call,skb_prev->len - maxfraglen)"];
"1001024" [label="(Identifier,copy)"];
"1000857" [label="(Call,alloclen + hh_len)"];
"1001098" [label="(Call,__skb_trim(skb, off))"];
"1001151" [label="(ControlStructure,if (copy >= left))"];
"1000964" [label="(Call,skb->csum)"];
"1000851" [label="(Identifier,transhdrlen)"];
"1000976" [label="(Call,skb_prev->csum)"];
"1001053" [label="(Call,__skb_queue_tail(&sk->sk_write_queue, skb))"];
"1000962" [label="(Block,)"];
"1001239" [label="(Literal,0)"];
"1001302" [label="(Identifier,skb)"];
"1000863" [label="(Call,&err)"];
"1000940" [label="(Call,data = skb_put(skb, fraglen))"];
"1000119" [label="(MethodParameterIn,int transhdrlen)"];
"1000968" [label="(Identifier,skb_prev)"];
"1000805" [label="(Identifier,fraglen)"];
"1001087" [label="(Call,getfrag(from, skb_put(skb, copy),\n\t\t\t\t\t\toffset, copy, off, skb))"];
"1001338" [label="(Identifier,err)"];
"1001262" [label="(Call,frag->page)"];
"1000708" [label="(ControlStructure,goto alloc_new_skb;)"];
"1001102" [label="(Identifier,err)"];
"1001041" [label="(Call,datalen - fraggap)"];
"1001301" [label="(Call,skb->data_len)"];
"1001167" [label="(Identifier,i)"];
"1000749" [label="(Literal,0)"];
"1001059" [label="(ControlStructure,continue;)"];
"1001020" [label="(Call,data + transhdrlen)"];
"1000950" [label="(Identifier,fragheaderlen)"];
"1001023" [label="(Identifier,offset)"];
"1001100" [label="(Identifier,off)"];
"1000762" [label="(Identifier,skb_prev)"];
"1000747" [label="(Call,copy <= 0)"];
"1000875" [label="(Identifier,sk)"];
"1000899" [label="(Identifier,err)"];
"1000833" [label="(ControlStructure,if (datalen == length + fraggap))"];
"1001149" [label="(Literal,0)"];
"1001310" [label="(Call,atomic_add(copy, &sk->sk_wmem_alloc))"];
"1001334" [label="(Identifier,rt)"];
"1001204" [label="(Call,copy = PAGE_SIZE)"];
"1001154" [label="(Identifier,left)"];
"1000208" [label="(Call,np->cork.opt == NULL)"];
"1001065" [label="(Identifier,copy)"];
"1000994" [label="(Call,datalen - transhdrlen - fraggap)"];
"1001297" [label="(Identifier,skb)"];
"1001094" [label="(Identifier,off)"];
"1001039" [label="(Call,length -= datalen - fraggap)"];
"1000707" [label="(Identifier,NULL)"];
"1000870" [label="(ControlStructure,if (atomic_read(&sk->sk_wmem_alloc) <=\n\t\t\t\t    2 * sk->sk_sndbuf))"];
"1000599" [label="(Call,IPV6_MAXPLEN - fragheaderlen)"];
"1000979" [label="(Call,csum_sub(skb_prev->csum,\n\t\t\t\t\t\t\t  skb->csum))"];
"1000735" [label="(ControlStructure,if (copy < length))"];
"1001156" [label="(Identifier,copy)"];
"1000218" [label="(Call,np->cork.opt->tot_len = opt->tot_len)"];
"1000635" [label="(Call,length > mtu)"];
"1000468" [label="(Call,cork->length = 0)"];
"1001085" [label="(ControlStructure,if (getfrag(from, skb_put(skb, copy),\n\t\t\t\t\t\toffset, copy, off, skb) < 0))"];
"1000951" [label="(Call,skb->transport_header = (skb->network_header +\n\t\t\t\t\t\t fragheaderlen))"];
"1001146" [label="(Call,PAGE_SIZE - off)"];
"1001234" [label="(Call,skb_fill_page_desc(skb, i, page, 0, 0))"];
"1001214" [label="(ControlStructure,if (page == NULL))"];
"1000858" [label="(Identifier,alloclen)"];
"1000943" [label="(Identifier,skb)"];
"1000893" [label="(ControlStructure,if (unlikely(skb == NULL)))"];
"1000738" [label="(Identifier,length)"];
"1001306" [label="(Call,skb->truesize)"];
"1000115" [label="(MethodParameterIn,struct sock *sk)"];
"1001339" [label="(MethodReturn,int)"];
"1000473" [label="(Call,sk->sk_sndmsg_page = NULL)"];
"1000877" [label="(Call,2 * sk->sk_sndbuf)"];
"1000896" [label="(Identifier,skb)"];
"1000730" [label="(Identifier,mtu)"];
"1000970" [label="(Call,data + transhdrlen)"];
"1000743" [label="(Call,skb->len)"];
"1000203" [label="(Call,sk->sk_allocation)"];
"1000716" [label="(Call,(cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG) ? mtu : maxfraglen) - skb->len)"];
"1000760" [label="(Identifier,skb)"];
"1000977" [label="(Identifier,skb_prev)"];
"1000776" [label="(Call,length + fraggap)"];
"1000806" [label="(Call,datalen + fragheaderlen)"];
"1001014" [label="(Call,copy > 0)"];
"1001205" [label="(Identifier,copy)"];
"1000835" [label="(Identifier,datalen)"];
"1000209" [label="(Call,np->cork.opt)"];
"1000731" [label="(Identifier,maxfraglen)"];
"1001152" [label="(Call,copy >= left)"];
"1000736" [label="(Call,copy < length)"];
"1000895" [label="(Call,skb == NULL)"];
"1001267" [label="(Identifier,frag)"];
"1001247" [label="(FieldIdentifier,frags)"];
"1000775" [label="(Identifier,datalen)"];
"1000955" [label="(Call,skb->network_header +\n\t\t\t\t\t\t fragheaderlen)"];
"1000480" [label="(Identifier,sk)"];
"1001207" [label="(Call,page = alloc_pages(sk->sk_allocation, 0))"];
"1000569" [label="(Call,maxfraglen = ((mtu - fragheaderlen) & ~7) + fragheaderlen - sizeof(struct frag_hdr))"];
"1000959" [label="(Identifier,fragheaderlen)"];
"1000801" [label="(Call,maxfraglen - fragheaderlen)"];
"1000987" [label="(Identifier,data)"];
"1000478" [label="(Call,sk->sk_sndmsg_off = 0)"];
"1000546" [label="(Call,hh_len = LL_RESERVED_SPACE(rt->dst.dev))"];
"1001290" [label="(Call,frag->size += copy)"];
"1001213" [label="(Literal,0)"];
"1001312" [label="(Call,&sk->sk_wmem_alloc)"];
"1001184" [label="(Literal,0)"];
"1001148" [label="(Identifier,off)"];
"1001258" [label="(Call,getfrag(from, page_address(frag->page)+frag->page_offset+frag->size, offset, copy, skb->len, skb))"];
"1001326" [label="(Call,cork->length)"];
"1001099" [label="(Identifier,skb)"];
"1001285" [label="(Call,sk->sk_sndmsg_off += copy)"];
"1001179" [label="(Identifier,i)"];
"1000750" [label="(Block,)"];
"1001063" [label="(Identifier,length)"];
"1001008" [label="(Call,kfree_skb(skb))"];
"1001091" [label="(Identifier,copy)"];
"1001088" [label="(Identifier,from)"];
"1000868" [label="(Identifier,skb)"];
"1000867" [label="(Call,skb = NULL)"];
"1001296" [label="(Call,skb->len)"];
"1001261" [label="(Call,page_address(frag->page))"];
"1001277" [label="(Identifier,skb)"];
"1000967" [label="(Call,skb_copy_and_csum_bits(\n\t\t\t\t\tskb_prev, maxfraglen,\n\t\t\t\t\tdata + transhdrlen, fraggap, 0))"];
"1000206" [label="(ControlStructure,if (unlikely(np->cork.opt == NULL)))"];
"1000699" [label="(Call,(skb = skb_peek_tail(&sk->sk_write_queue)) == NULL)"];
"1000577" [label="(Call,fragheaderlen - sizeof(struct frag_hdr))"];
"1000890" [label="(Call,sk->sk_allocation)"];
"1000783" [label="(Call,cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG) ? mtu : maxfraglen)"];
"1000908" [label="(Call,skb == NULL)"];
"1001237" [label="(Identifier,page)"];
"1001042" [label="(Identifier,datalen)"];
"1000779" [label="(ControlStructure,if (datalen > (cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG) ? mtu : maxfraglen) - fragheaderlen))"];
"1000961" [label="(Identifier,fraggap)"];
"1001140" [label="(ControlStructure,if (page && (left = PAGE_SIZE - off) > 0))"];
"1001281" [label="(Identifier,err)"];
"1001128" [label="(Call,*page = sk->sk_sndmsg_page)"];
"1000914" [label="(Identifier,skb)"];
"1000477" [label="(Identifier,NULL)"];
"1000622" [label="(Call,sock_tx_timestamp(sk, &tx_flags))"];
"1000199" [label="(Call,kmalloc(opt->tot_len, sk->sk_allocation))"];
"1001200" [label="(ControlStructure,if (copy > PAGE_SIZE))"];
"1001145" [label="(Identifier,left)"];
"1000941" [label="(Identifier,data)"];
"1001045" [label="(Identifier,transhdrlen)"];
"1000839" [label="(Call,alloclen += rt->dst.trailer_len)"];
"1000831" [label="(Identifier,datalen)"];
"1001047" [label="(Call,exthdrlen = 0)"];
"1001300" [label="(Call,skb->data_len += copy)"];
"1000718" [label="(Call,cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG))"];
"1001201" [label="(Call,copy > PAGE_SIZE)"];
"1000808" [label="(Identifier,fragheaderlen)"];
"1000741" [label="(Call,maxfraglen - skb->len)"];
"1001147" [label="(Identifier,PAGE_SIZE)"];
"1000861" [label="(Identifier,flags)"];
"1000538" [label="(Call,exthdrlen = 0)"];
"1001122" [label="(Identifier,skb)"];
"1000712" [label="(Literal,0)"];
"1001107" [label="(Block,)"];
"1001329" [label="(Identifier,length)"];
"1000179" [label="(Block,)"];
"1000782" [label="(Call,(cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG) ? mtu : maxfraglen) - fragheaderlen)"];
"1001235" [label="(Identifier,skb)"];
"1000834" [label="(Call,datalen == length + fraggap)"];
"1000803" [label="(Identifier,fragheaderlen)"];
"1001022" [label="(Identifier,transhdrlen)"];
"1001318" [label="(Identifier,copy)"];
"1001013" [label="(Call,copy > 0 && getfrag(from, data + transhdrlen, offset, copy, fraggap, skb) < 0)"];
"1000800" [label="(Identifier,datalen)"];
"1000859" [label="(Identifier,hh_len)"];
"1000764" [label="(Identifier,fraggap)"];
"1001086" [label="(Call,getfrag(from, skb_put(skb, copy),\n\t\t\t\t\t\toffset, copy, off, skb) < 0)"];
"1000117" [label="(MethodParameterIn,void *from)"];
"1000698" [label="(ControlStructure,if ((skb = skb_peek_tail(&sk->sk_write_queue)) == NULL))"];
"1000682" [label="(Call,ip6_ufo_append_data(sk, getfrag, from, length,\n \t\t\t\t\t\t  hh_len, fragheaderlen,\n\t\t\t\t\t\t  transhdrlen, mtu, flags, rt))"];
"1001129" [label="(Identifier,page)"];
"1000748" [label="(Identifier,copy)"];
"1001142" [label="(Identifier,page)"];
"1000944" [label="(Identifier,fraglen)"];
"1001054" [label="(Call,&sk->sk_write_queue)"];
"1000763" [label="(Call,fraggap = skb_prev->len - maxfraglen)"];
"1000717" [label="(Call,cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG) ? mtu : maxfraglen)"];
"1001332" [label="(Identifier,sk)"];
"1000937" [label="(Identifier,skb)"];
"1001246" [label="(Identifier,skb)"];
"1001320" [label="(Identifier,length)"];
"1000702" [label="(Call,skb_peek_tail(&sk->sk_write_queue))"];
"1000777" [label="(Identifier,length)"];
"1000910" [label="(Identifier,NULL)"];
"1001030" [label="(Identifier,err)"];
"1000974" [label="(Literal,0)"];
"1000719" [label="(Call,cork->length <= mtu)"];
"1000836" [label="(Call,length + fraggap)"];
"1001265" [label="(Call,frag->page_offset+frag->size)"];
"1000778" [label="(Identifier,fraggap)"];
"1000946" [label="(Identifier,skb)"];
"1000746" [label="(ControlStructure,if (copy <= 0))"];
"1000474" [label="(Call,sk->sk_sndmsg_page)"];
"1001278" [label="(Literal,0)"];
"1000799" [label="(Call,datalen = maxfraglen - fragheaderlen)"];
"1000990" [label="(Identifier,skb_prev)"];
"1001175" [label="(Call,get_page(page))"];
"1001060" [label="(ControlStructure,if (copy > length))"];
"1000942" [label="(Call,skb_put(skb, fraglen))"];
"1001272" [label="(Identifier,offset)"];
"1001295" [label="(Call,skb->len += copy)"];
"1001003" [label="(Block,)"];
"1001257" [label="(Call,getfrag(from, page_address(frag->page)+frag->page_offset+frag->size, offset, copy, skb->len, skb) < 0)"];
"1001196" [label="(Call,i < MAX_SKB_FRAGS)"];
"1000118" [label="(MethodParameterIn,int length)"];
"1000222" [label="(Identifier,np)"];
"1000905" [label="(Identifier,tx_flags)"];
"1001305" [label="(Call,skb->truesize += copy)"];
"1001135" [label="(Identifier,off)"];
"1001092" [label="(Identifier,offset)"];
"1001159" [label="(Call,page != frag->page)"];
"1000758" [label="(Call,skb_prev = skb)"];
"1000797" [label="(Identifier,maxfraglen)"];
"1001186" [label="(Identifier,frag)"];
"1001225" [label="(Call,sk->sk_sndmsg_page)"];
"1000856" [label="(Identifier,sk)"];
"1001206" [label="(Identifier,PAGE_SIZE)"];
"1000882" [label="(Call,skb = sock_wmalloc(sk,\n\t\t\t\t\t\t\t   alloclen + hh_len, 1,\n\t\t\t\t\t\t\t   sk->sk_allocation))"];
"1000975" [label="(Call,skb_prev->csum = csum_sub(skb_prev->csum,\n\t\t\t\t\t\t\t  skb->csum))"];
"1001321" [label="(Identifier,copy)"];
"1000847" [label="(Identifier,alloclen)"];
"1001191" [label="(Identifier,skb)"];
"1001026" [label="(Identifier,skb)"];
"1001018" [label="(Call,getfrag(from, data + transhdrlen, offset, copy, fraggap, skb))"];
"1001259" [label="(Identifier,from)"];
"1001009" [label="(Identifier,skb)"];
"1001238" [label="(Literal,0)"];
"1000757" [label="(JumpTarget,alloc_new_skb:)"];
"1001034" [label="(Identifier,skb)"];
"1001181" [label="(Call,sk->sk_sndmsg_off)"];
"1000802" [label="(Identifier,maxfraglen)"];
"1001166" [label="(Call,i == MAX_SKB_FRAGS)"];
"1001199" [label="(Block,)"];
"1001144" [label="(Call,left = PAGE_SIZE - off)"];
"1000742" [label="(Identifier,maxfraglen)"];
"1000956" [label="(Call,skb->network_header)"];
"1000869" [label="(Identifier,NULL)"];
"1000931" [label="(Identifier,sk)"];
"1001017" [label="(Call,getfrag(from, data + transhdrlen, offset, copy, fraggap, skb) < 0)"];
"1000739" [label="(Call,copy = maxfraglen - skb->len)"];
"1001078" [label="(Block,)"];
"1000998" [label="(Identifier,fraggap)"];
"1001190" [label="(Call,skb_shinfo(skb))"];
"1001096" [label="(Literal,0)"];
"1000193" [label="(Call,np->cork.opt = kmalloc(opt->tot_len, sk->sk_allocation))"];
"1001216" [label="(Identifier,page)"];
"1001130" [label="(Call,sk->sk_sndmsg_page)"];
"1000127" [label="(Block,)"];
"1001044" [label="(Call,transhdrlen = 0)"];
"1000894" [label="(Call,unlikely(skb == NULL))"];
"1001245" [label="(Call,skb_shinfo(skb))"];
"1000947" [label="(Identifier,exthdrlen)"];
"1000207" [label="(Call,unlikely(np->cork.opt == NULL))"];
"1001064" [label="(Call,copy = length)"];
"1001176" [label="(Identifier,page)"];
"1001180" [label="(Identifier,page)"];
"1000860" [label="(Call,flags & MSG_DONTWAIT)"];
"1001090" [label="(Identifier,skb)"];
"1000909" [label="(Identifier,skb)"];
"1001089" [label="(Call,skb_put(skb, copy))"];
"1000889" [label="(Literal,1)"];
"1000883" [label="(Identifier,skb)"];
"1001062" [label="(Identifier,copy)"];
"1000866" [label="(Block,)"];
"1000771" [label="(Call,fraggap = 0)"];
"1000182" [label="(Block,)"];
"1000989" [label="(Call,pskb_trim_unique(skb_prev, maxfraglen))"];
"1001269" [label="(Call,frag->size)"];
"1001012" [label="(ControlStructure,if (copy > 0 && getfrag(from, data + transhdrlen, offset, copy, fraggap, skb) < 0))"];
"1000715" [label="(Identifier,copy)"];
"1000986" [label="(Call,data += fraggap)"];
"1000214" [label="(Identifier,NULL)"];
"1001080" [label="(Call,off = skb->len)"];
"1001010" [label="(ControlStructure,goto error;)"];
"1001274" [label="(Call,skb->len)"];
"1001112" [label="(Call,skb_shinfo(skb))"];
"1000804" [label="(Call,fraglen = datalen + fragheaderlen)"];
"1000983" [label="(Call,skb->csum)"];
"1001164" [label="(Block,)"];
"1000211" [label="(Identifier,np)"];
"1001330" [label="(Call,IP6_INC_STATS(sock_net(sk), rt->rt6i_idev, IPSTATS_MIB_OUTDISCARDS))"];
"1000840" [label="(Identifier,alloclen)"];
"1001143" [label="(Call,(left = PAGE_SIZE - off) > 0)"];
"1001202" [label="(Identifier,copy)"];
"1000952" [label="(Call,skb->transport_header)"];
"1001319" [label="(Call,length -= copy)"];
"1000713" [label="(Block,)"];
"1000733" [label="(Identifier,skb)"];
"1000781" [label="(Identifier,datalen)"];
"1000535" [label="(Call,transhdrlen = 0)"];
"1000878" [label="(Literal,2)"];
"1000911" [label="(ControlStructure,goto error;)"];
"1000838" [label="(Identifier,fraggap)"];
"1000972" [label="(Identifier,transhdrlen)"];
"1000991" [label="(Identifier,maxfraglen)"];
"1001215" [label="(Call,page == NULL)"];
"1000798" [label="(Identifier,fragheaderlen)"];
"1001311" [label="(Identifier,copy)"];
"1001224" [label="(Call,sk->sk_sndmsg_page = page)"];
"1001123" [label="(FieldIdentifier,frags)"];
"1000784" [label="(Call,cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG))"];
"1001081" [label="(Identifier,off)"];
"1000852" [label="(Block,)"];
"1000871" [label="(Call,atomic_read(&sk->sk_wmem_alloc) <=\n\t\t\t\t    2 * sk->sk_sndbuf)"];
"1000200" [label="(Call,opt->tot_len)"];
"1001266" [label="(Call,frag->page_offset)"];
"1000888" [label="(Identifier,hh_len)"];
"1001035" [label="(ControlStructure,goto error;)"];
"1001111" [label="(Call,skb_shinfo(skb)->nr_frags)"];
"1001286" [label="(Call,sk->sk_sndmsg_off)"];
"1001244" [label="(Call,skb_shinfo(skb)->frags)"];
"1001336" [label="(Identifier,IPSTATS_MIB_OUTDISCARDS)"];
"1001021" [label="(Identifier,data)"];
"1001192" [label="(FieldIdentifier,frags)"];
"1000872" [label="(Call,atomic_read(&sk->sk_wmem_alloc))"];
"1001197" [label="(Identifier,i)"];
"1000953" [label="(Identifier,skb)"];
"1000780" [label="(Call,datalen > (cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG) ? mtu : maxfraglen) - fragheaderlen)"];
"1000948" [label="(Call,data += fragheaderlen)"];
"1001236" [label="(Identifier,i)"];
"1000949" [label="(Identifier,data)"];
"1000504" [label="(Call,transhdrlen += exthdrlen)"];
"1001058" [label="(Identifier,skb)"];
"1001015" [label="(Identifier,copy)"];
"1000832" [label="(Identifier,fragheaderlen)"];
"1001210" [label="(Call,sk->sk_allocation)"];
"1000807" [label="(Identifier,datalen)"];
"1001036" [label="(Call,offset += copy)"];
"1001097" [label="(Block,)"];
"1000995" [label="(Identifier,datalen)"];
"1001028" [label="(Block,)"];
"1001331" [label="(Call,sock_net(sk))"];
"1001217" [label="(Identifier,NULL)"];
"1001141" [label="(Call,page && (left = PAGE_SIZE - off) > 0)"];
"1001177" [label="(Call,skb_fill_page_desc(skb, i, page, sk->sk_sndmsg_off, 0))"];
"1000988" [label="(Identifier,fraggap)"];
"1000740" [label="(Identifier,copy)"];
"1000897" [label="(Identifier,NULL)"];
"1001333" [label="(Call,rt->rt6i_idev)"];
"1001005" [label="(Identifier,err)"];
"1001073" [label="(Identifier,rt)"];
"1000971" [label="(Identifier,data)"];
"1001025" [label="(Identifier,fraggap)"];
"1000827" [label="(ControlStructure,else)"];
"1000922" [label="(Call,skb_reserve(skb, hh_len+sizeof(struct frag_hdr)))"];
"1001325" [label="(Call,cork->length -= length)"];
"1001231" [label="(Identifier,sk)"];
"1001002" [label="(Literal,0)"];
"1000969" [label="(Identifier,maxfraglen)"];
"1001027" [label="(Literal,0)"];
"1000828" [label="(Call,alloclen = datalen + fragheaderlen)"];
"1001189" [label="(Call,skb_shinfo(skb)->frags)"];
"1000853" [label="(Call,skb = sock_alloc_send_skb(sk,\n\t\t\t\t\t\talloclen + hh_len,\n\t\t\t\t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000829" [label="(Identifier,alloclen)"];
"1000710" [label="(Call,length > 0)"];
"1001001" [label="(Identifier,copy)"];
"1001114" [label="(FieldIdentifier,nr_frags)"];
"1001134" [label="(Call,off = sk->sk_sndmsg_off)"];
"1001256" [label="(ControlStructure,if (getfrag(from, page_address(frag->page)+frag->page_offset+frag->size, offset, copy, skb->len, skb) < 0))"];
"1001000" [label="(Call,copy < 0)"];
"1001323" [label="(Literal,0)"];
"1000837" [label="(Identifier,length)"];
"1001158" [label="(ControlStructure,if (page != frag->page))"];
"1001208" [label="(Identifier,page)"];
"1000996" [label="(Call,transhdrlen - fraggap)"];
"1000886" [label="(Call,alloclen + hh_len)"];
"1000830" [label="(Call,datalen + fragheaderlen)"];
"1000761" [label="(ControlStructure,if (skb_prev))"];
"1000501" [label="(Call,length += exthdrlen)"];
"1000711" [label="(Identifier,length)"];
"1001316" [label="(Call,offset += copy)"];
"1000700" [label="(Call,skb = skb_peek_tail(&sk->sk_write_queue))"];
"1001241" [label="(Identifier,frag)"];
"1001203" [label="(Identifier,PAGE_SIZE)"];
"1001038" [label="(Identifier,copy)"];
"1000352" [label="(Call,ip6_rthdr_dup(opt->srcrt,\n\t\t\t\t\t\t\t    sk->sk_allocation))"];
"1001307" [label="(Identifier,skb)"];
"1001226" [label="(Identifier,sk)"];
"1001019" [label="(Identifier,from)"];
"1000714" [label="(Call,copy = (cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG) ? mtu : maxfraglen) - skb->len)"];
"1001155" [label="(Call,copy = left)"];
"1000973" [label="(Identifier,fraggap)"];
"1000769" [label="(Identifier,maxfraglen)"];
"1001160" [label="(Identifier,page)"];
"1001287" [label="(Identifier,sk)"];
"1001113" [label="(Identifier,skb)"];
"1000774" [label="(Call,datalen = length + fraggap)"];
"1001157" [label="(Identifier,left)"];
"1001082" [label="(Call,skb->len)"];
"1001260" [label="(Call,page_address(frag->page)+frag->page_offset+frag->size)"];
"1001061" [label="(Call,copy > length)"];
"1000766" [label="(Call,skb_prev->len)"];
"1001161" [label="(Call,frag->page)"];
"1001121" [label="(Call,skb_shinfo(skb))"];
"1001209" [label="(Call,alloc_pages(sk->sk_allocation, 0))"];
"1001033" [label="(Call,kfree_skb(skb))"];
"1000629" [label="(Call,cork->length += length)"];
"1000854" [label="(Identifier,skb)"];
"1001294" [label="(Identifier,copy)"];
"1001043" [label="(Identifier,fraggap)"];
"1000887" [label="(Identifier,alloclen)"];
"1000148" [label="(Call,offset = 0)"];
"1001093" [label="(Identifier,copy)"];
"1001309" [label="(Identifier,copy)"];
"1001291" [label="(Call,frag->size)"];
"1001040" [label="(Identifier,length)"];
"1001153" [label="(Identifier,copy)"];
"1001220" [label="(Identifier,err)"];
"1000841" [label="(Call,rt->dst.trailer_len)"];
"1000812" [label="(Identifier,flags)"];
"1000945" [label="(Call,skb_set_network_header(skb, exthdrlen))"];
"1000924" [label="(Call,hh_len+sizeof(struct frag_hdr))"];
"1001136" [label="(Call,sk->sk_sndmsg_off)"];
"1000992" [label="(Call,copy = datalen - transhdrlen - fraggap)"];
"1001178" [label="(Identifier,skb)"];
"1000759" [label="(Identifier,skb_prev)"];
"1001289" [label="(Identifier,copy)"];
"1000873" [label="(Call,&sk->sk_wmem_alloc)"];
"1000483" [label="(Call,exthdrlen = rt->dst.header_len + (opt ? opt->opt_flen : 0) -\n\t\t\t    rt->rt6i_nfheader_len)"];
"1001037" [label="(Identifier,offset)"];
"1000136" [label="(Call,inet6_sk(sk))"];
"1000796" [label="(Identifier,mtu)"];
"1000824" [label="(Call,alloclen = mtu)"];
"1000855" [label="(Call,sock_alloc_send_skb(sk,\n\t\t\t\t\t\talloclen + hh_len,\n\t\t\t\t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000885" [label="(Identifier,sk)"];
"1001304" [label="(Identifier,copy)"];
"1000993" [label="(Identifier,copy)"];
"1001292" [label="(Identifier,frag)"];
"1000737" [label="(Identifier,copy)"];
"1001273" [label="(Identifier,copy)"];
"1001299" [label="(Identifier,copy)"];
"1001095" [label="(Identifier,skb)"];
"1000785" [label="(Call,cork->length <= mtu)"];
"1000999" [label="(ControlStructure,if (copy < 0))"];
"1000907" [label="(ControlStructure,if (skb == NULL))"];
"1001317" [label="(Identifier,offset)"];
"1001120" [label="(Call,skb_shinfo(skb)->frags)"];
"1000709" [label="(ControlStructure,while (length > 0))"];
"1000259" [label="(Call,ip6_opt_dup(opt->dst0opt,\n\t\t\t\t\t\t\t    sk->sk_allocation))"];
"1001066" [label="(Identifier,length)"];
"1001016" [label="(Literal,0)"];
"1000997" [label="(Identifier,transhdrlen)"];
"1000848" [label="(Call,sizeof(struct frag_hdr))"];
"1000923" [label="(Identifier,skb)"];
"1000732" [label="(Call,skb->len)"];
"1000936" [label="(Call,skb_shinfo(skb))"];
"1000193" -> "1000182"  [label="AST: "];
"1000193" -> "1000199"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000199" -> "1000193"  [label="AST: "];
"1000211" -> "1000193"  [label="CFG: "];
"1000193" -> "1001339"  [label="DDG: kmalloc(opt->tot_len, sk->sk_allocation)"];
"1000199" -> "1000193"  [label="DDG: opt->tot_len"];
"1000199" -> "1000193"  [label="DDG: sk->sk_allocation"];
"1000193" -> "1000208"  [label="DDG: np->cork.opt"];
"1000199" -> "1000203"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000203" -> "1000199"  [label="AST: "];
"1000199" -> "1001339"  [label="DDG: opt->tot_len"];
"1000199" -> "1001339"  [label="DDG: sk->sk_allocation"];
"1000199" -> "1000218"  [label="DDG: opt->tot_len"];
"1000199" -> "1000259"  [label="DDG: sk->sk_allocation"];
"1000208" -> "1000207"  [label="AST: "];
"1000208" -> "1000214"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000214" -> "1000208"  [label="AST: "];
"1000207" -> "1000208"  [label="CFG: "];
"1000208" -> "1001339"  [label="DDG: np->cork.opt"];
"1000208" -> "1001339"  [label="DDG: NULL"];
"1000208" -> "1000207"  [label="DDG: np->cork.opt"];
"1000208" -> "1000207"  [label="DDG: NULL"];
"1000208" -> "1000473"  [label="DDG: NULL"];
"1000208" -> "1000699"  [label="DDG: NULL"];
"1000207" -> "1000206"  [label="AST: "];
"1000217" -> "1000207"  [label="CFG: "];
"1000222" -> "1000207"  [label="CFG: "];
"1000207" -> "1001339"  [label="DDG: np->cork.opt == NULL"];
"1000207" -> "1001339"  [label="DDG: unlikely(np->cork.opt == NULL)"];
"1000473" -> "1000179"  [label="AST: "];
"1000473" -> "1000477"  [label="CFG: "];
"1000474" -> "1000473"  [label="AST: "];
"1000477" -> "1000473"  [label="AST: "];
"1000480" -> "1000473"  [label="CFG: "];
"1000473" -> "1001339"  [label="DDG: sk->sk_sndmsg_page"];
"1000473" -> "1001339"  [label="DDG: NULL"];
"1000473" -> "1001128"  [label="DDG: sk->sk_sndmsg_page"];
"1001128" -> "1001107"  [label="AST: "];
"1001128" -> "1001130"  [label="CFG: "];
"1001129" -> "1001128"  [label="AST: "];
"1001130" -> "1001128"  [label="AST: "];
"1001135" -> "1001128"  [label="CFG: "];
"1001128" -> "1001339"  [label="DDG: sk->sk_sndmsg_page"];
"1001224" -> "1001128"  [label="DDG: sk->sk_sndmsg_page"];
"1001128" -> "1001141"  [label="DDG: page"];
"1001141" -> "1001140"  [label="AST: "];
"1001141" -> "1001142"  [label="CFG: "];
"1001141" -> "1001143"  [label="CFG: "];
"1001142" -> "1001141"  [label="AST: "];
"1001143" -> "1001141"  [label="AST: "];
"1001153" -> "1001141"  [label="CFG: "];
"1001197" -> "1001141"  [label="CFG: "];
"1001141" -> "1001339"  [label="DDG: page"];
"1001141" -> "1001339"  [label="DDG: page && (left = PAGE_SIZE - off) > 0"];
"1001141" -> "1001339"  [label="DDG: (left = PAGE_SIZE - off) > 0"];
"1001143" -> "1001141"  [label="DDG: 0"];
"1001141" -> "1001159"  [label="DDG: page"];
"1001159" -> "1001158"  [label="AST: "];
"1001159" -> "1001161"  [label="CFG: "];
"1001160" -> "1001159"  [label="AST: "];
"1001161" -> "1001159"  [label="AST: "];
"1001167" -> "1001159"  [label="CFG: "];
"1001259" -> "1001159"  [label="CFG: "];
"1001159" -> "1001339"  [label="DDG: page"];
"1001159" -> "1001339"  [label="DDG: frag->page"];
"1001159" -> "1001339"  [label="DDG: page != frag->page"];
"1001261" -> "1001159"  [label="DDG: frag->page"];
"1001159" -> "1001175"  [label="DDG: page"];
"1001159" -> "1001261"  [label="DDG: frag->page"];
"1001175" -> "1001164"  [label="AST: "];
"1001175" -> "1001176"  [label="CFG: "];
"1001176" -> "1001175"  [label="AST: "];
"1001178" -> "1001175"  [label="CFG: "];
"1001175" -> "1001339"  [label="DDG: get_page(page)"];
"1001175" -> "1001177"  [label="DDG: page"];
"1001177" -> "1001164"  [label="AST: "];
"1001177" -> "1001184"  [label="CFG: "];
"1001178" -> "1001177"  [label="AST: "];
"1001179" -> "1001177"  [label="AST: "];
"1001180" -> "1001177"  [label="AST: "];
"1001181" -> "1001177"  [label="AST: "];
"1001184" -> "1001177"  [label="AST: "];
"1001186" -> "1001177"  [label="CFG: "];
"1001177" -> "1001339"  [label="DDG: i"];
"1001177" -> "1001339"  [label="DDG: skb_fill_page_desc(skb, i, page, sk->sk_sndmsg_off, 0)"];
"1001177" -> "1001339"  [label="DDG: sk->sk_sndmsg_off"];
"1001177" -> "1001339"  [label="DDG: page"];
"1001121" -> "1001177"  [label="DDG: skb"];
"1001166" -> "1001177"  [label="DDG: i"];
"1000478" -> "1001177"  [label="DDG: sk->sk_sndmsg_off"];
"1001285" -> "1001177"  [label="DDG: sk->sk_sndmsg_off"];
"1001177" -> "1001190"  [label="DDG: skb"];
"1001177" -> "1001285"  [label="DDG: sk->sk_sndmsg_off"];
"1001190" -> "1001189"  [label="AST: "];
"1001190" -> "1001191"  [label="CFG: "];
"1001191" -> "1001190"  [label="AST: "];
"1001192" -> "1001190"  [label="CFG: "];
"1001190" -> "1001258"  [label="DDG: skb"];
"1001258" -> "1001257"  [label="AST: "];
"1001258" -> "1001277"  [label="CFG: "];
"1001259" -> "1001258"  [label="AST: "];
"1001260" -> "1001258"  [label="AST: "];
"1001272" -> "1001258"  [label="AST: "];
"1001273" -> "1001258"  [label="AST: "];
"1001274" -> "1001258"  [label="AST: "];
"1001277" -> "1001258"  [label="AST: "];
"1001278" -> "1001258"  [label="CFG: "];
"1001258" -> "1001339"  [label="DDG: skb"];
"1001258" -> "1001339"  [label="DDG: offset"];
"1001258" -> "1001339"  [label="DDG: copy"];
"1001258" -> "1001339"  [label="DDG: page_address(frag->page)+frag->page_offset+frag->size"];
"1001258" -> "1001339"  [label="DDG: from"];
"1001258" -> "1001339"  [label="DDG: skb->len"];
"1001258" -> "1000758"  [label="DDG: skb"];
"1001258" -> "1001018"  [label="DDG: from"];
"1001258" -> "1001087"  [label="DDG: from"];
"1001258" -> "1001089"  [label="DDG: skb"];
"1001258" -> "1001112"  [label="DDG: skb"];
"1001258" -> "1001257"  [label="DDG: offset"];
"1001258" -> "1001257"  [label="DDG: copy"];
"1001258" -> "1001257"  [label="DDG: from"];
"1001258" -> "1001257"  [label="DDG: skb"];
"1001258" -> "1001257"  [label="DDG: skb->len"];
"1001258" -> "1001257"  [label="DDG: page_address(frag->page)+frag->page_offset+frag->size"];
"1001087" -> "1001258"  [label="DDG: from"];
"1001018" -> "1001258"  [label="DDG: from"];
"1000117" -> "1001258"  [label="DDG: from"];
"1001261" -> "1001258"  [label="DDG: frag->page"];
"1001290" -> "1001258"  [label="DDG: frag->size"];
"1000148" -> "1001258"  [label="DDG: offset"];
"1001316" -> "1001258"  [label="DDG: offset"];
"1001036" -> "1001258"  [label="DDG: offset"];
"1001204" -> "1001258"  [label="DDG: copy"];
"1001155" -> "1001258"  [label="DDG: copy"];
"1001201" -> "1001258"  [label="DDG: copy"];
"1001152" -> "1001258"  [label="DDG: copy"];
"1000741" -> "1001258"  [label="DDG: skb->len"];
"1000716" -> "1001258"  [label="DDG: skb->len"];
"1001121" -> "1001258"  [label="DDG: skb"];
"1001245" -> "1001258"  [label="DDG: skb"];
"1001258" -> "1001285"  [label="DDG: copy"];
"1001258" -> "1001290"  [label="DDG: copy"];
"1001258" -> "1001295"  [label="DDG: copy"];
"1001258" -> "1001295"  [label="DDG: skb->len"];
"1001258" -> "1001300"  [label="DDG: copy"];
"1001258" -> "1001305"  [label="DDG: copy"];
"1001258" -> "1001310"  [label="DDG: copy"];
"1001258" -> "1001316"  [label="DDG: offset"];
"1000758" -> "1000750"  [label="AST: "];
"1000758" -> "1000760"  [label="CFG: "];
"1000759" -> "1000758"  [label="AST: "];
"1000760" -> "1000758"  [label="AST: "];
"1000762" -> "1000758"  [label="CFG: "];
"1000758" -> "1001339"  [label="DDG: skb_prev"];
"1001053" -> "1000758"  [label="DDG: skb"];
"1000700" -> "1000758"  [label="DDG: skb"];
"1001087" -> "1000758"  [label="DDG: skb"];
"1000758" -> "1000967"  [label="DDG: skb_prev"];
"1000967" -> "1000963"  [label="AST: "];
"1000967" -> "1000974"  [label="CFG: "];
"1000968" -> "1000967"  [label="AST: "];
"1000969" -> "1000967"  [label="AST: "];
"1000970" -> "1000967"  [label="AST: "];
"1000973" -> "1000967"  [label="AST: "];
"1000974" -> "1000967"  [label="AST: "];
"1000963" -> "1000967"  [label="CFG: "];
"1000967" -> "1001339"  [label="DDG: data + transhdrlen"];
"1000967" -> "1000963"  [label="DDG: maxfraglen"];
"1000967" -> "1000963"  [label="DDG: 0"];
"1000967" -> "1000963"  [label="DDG: fraggap"];
"1000967" -> "1000963"  [label="DDG: skb_prev"];
"1000967" -> "1000963"  [label="DDG: data + transhdrlen"];
"1000801" -> "1000967"  [label="DDG: maxfraglen"];
"1000741" -> "1000967"  [label="DDG: maxfraglen"];
"1000765" -> "1000967"  [label="DDG: maxfraglen"];
"1000569" -> "1000967"  [label="DDG: maxfraglen"];
"1000948" -> "1000967"  [label="DDG: data"];
"1001044" -> "1000967"  [label="DDG: transhdrlen"];
"1000535" -> "1000967"  [label="DDG: transhdrlen"];
"1000504" -> "1000967"  [label="DDG: transhdrlen"];
"1000119" -> "1000967"  [label="DDG: transhdrlen"];
"1000763" -> "1000967"  [label="DDG: fraggap"];
"1000771" -> "1000967"  [label="DDG: fraggap"];
"1000967" -> "1000986"  [label="DDG: fraggap"];
"1000967" -> "1000989"  [label="DDG: skb_prev"];
"1000967" -> "1000989"  [label="DDG: maxfraglen"];
"1000967" -> "1000996"  [label="DDG: fraggap"];
"1000963" -> "1000962"  [label="AST: "];
"1000964" -> "1000963"  [label="AST: "];
"1000977" -> "1000963"  [label="CFG: "];
"1000963" -> "1001339"  [label="DDG: skb_copy_and_csum_bits(\n\t\t\t\t\tskb_prev, maxfraglen,\n\t\t\t\t\tdata + transhdrlen, fraggap, 0)"];
"1000963" -> "1000979"  [label="DDG: skb->csum"];
"1000979" -> "1000975"  [label="AST: "];
"1000979" -> "1000983"  [label="CFG: "];
"1000980" -> "1000979"  [label="AST: "];
"1000983" -> "1000979"  [label="AST: "];
"1000975" -> "1000979"  [label="CFG: "];
"1000979" -> "1001339"  [label="DDG: skb->csum"];
"1000979" -> "1000975"  [label="DDG: skb_prev->csum"];
"1000979" -> "1000975"  [label="DDG: skb->csum"];
"1000975" -> "1000979"  [label="DDG: skb_prev->csum"];
"1000975" -> "1000962"  [label="AST: "];
"1000976" -> "1000975"  [label="AST: "];
"1000987" -> "1000975"  [label="CFG: "];
"1000975" -> "1001339"  [label="DDG: csum_sub(skb_prev->csum,\n\t\t\t\t\t\t\t  skb->csum)"];
"1000975" -> "1001339"  [label="DDG: skb_prev->csum"];
"1000986" -> "1000962"  [label="AST: "];
"1000986" -> "1000988"  [label="CFG: "];
"1000987" -> "1000986"  [label="AST: "];
"1000988" -> "1000986"  [label="AST: "];
"1000990" -> "1000986"  [label="CFG: "];
"1000986" -> "1001339"  [label="DDG: data"];
"1000948" -> "1000986"  [label="DDG: data"];
"1000986" -> "1001018"  [label="DDG: data"];
"1000986" -> "1001020"  [label="DDG: data"];
"1001018" -> "1001017"  [label="AST: "];
"1001018" -> "1001026"  [label="CFG: "];
"1001019" -> "1001018"  [label="AST: "];
"1001020" -> "1001018"  [label="AST: "];
"1001023" -> "1001018"  [label="AST: "];
"1001024" -> "1001018"  [label="AST: "];
"1001025" -> "1001018"  [label="AST: "];
"1001026" -> "1001018"  [label="AST: "];
"1001027" -> "1001018"  [label="CFG: "];
"1001018" -> "1001339"  [label="DDG: copy"];
"1001018" -> "1001339"  [label="DDG: from"];
"1001018" -> "1001339"  [label="DDG: data + transhdrlen"];
"1001018" -> "1001339"  [label="DDG: offset"];
"1001018" -> "1001339"  [label="DDG: fraggap"];
"1001018" -> "1001017"  [label="DDG: copy"];
"1001018" -> "1001017"  [label="DDG: offset"];
"1001018" -> "1001017"  [label="DDG: from"];
"1001018" -> "1001017"  [label="DDG: data + transhdrlen"];
"1001018" -> "1001017"  [label="DDG: skb"];
"1001018" -> "1001017"  [label="DDG: fraggap"];
"1001087" -> "1001018"  [label="DDG: from"];
"1000117" -> "1001018"  [label="DDG: from"];
"1000948" -> "1001018"  [label="DDG: data"];
"1000996" -> "1001018"  [label="DDG: transhdrlen"];
"1000996" -> "1001018"  [label="DDG: fraggap"];
"1000119" -> "1001018"  [label="DDG: transhdrlen"];
"1000148" -> "1001018"  [label="DDG: offset"];
"1001316" -> "1001018"  [label="DDG: offset"];
"1001036" -> "1001018"  [label="DDG: offset"];
"1001014" -> "1001018"  [label="DDG: copy"];
"1000945" -> "1001018"  [label="DDG: skb"];
"1001018" -> "1001033"  [label="DDG: skb"];
"1001018" -> "1001036"  [label="DDG: copy"];
"1001018" -> "1001036"  [label="DDG: offset"];
"1001018" -> "1001041"  [label="DDG: fraggap"];
"1001018" -> "1001053"  [label="DDG: skb"];
"1001018" -> "1001087"  [label="DDG: from"];
"1001017" -> "1001013"  [label="AST: "];
"1001017" -> "1001027"  [label="CFG: "];
"1001027" -> "1001017"  [label="AST: "];
"1001013" -> "1001017"  [label="CFG: "];
"1001017" -> "1001339"  [label="DDG: getfrag(from, data + transhdrlen, offset, copy, fraggap, skb)"];
"1001017" -> "1001013"  [label="DDG: getfrag(from, data + transhdrlen, offset, copy, fraggap, skb)"];
"1001017" -> "1001013"  [label="DDG: 0"];
"1001013" -> "1001012"  [label="AST: "];
"1001013" -> "1001014"  [label="CFG: "];
"1001014" -> "1001013"  [label="AST: "];
"1001030" -> "1001013"  [label="CFG: "];
"1001037" -> "1001013"  [label="CFG: "];
"1001013" -> "1001339"  [label="DDG: copy > 0 && getfrag(from, data + transhdrlen, offset, copy, fraggap, skb) < 0"];
"1001013" -> "1001339"  [label="DDG: copy > 0"];
"1001013" -> "1001339"  [label="DDG: getfrag(from, data + transhdrlen, offset, copy, fraggap, skb) < 0"];
"1001014" -> "1001013"  [label="DDG: copy"];
"1001014" -> "1001013"  [label="DDG: 0"];
"1001033" -> "1001028"  [label="AST: "];
"1001033" -> "1001034"  [label="CFG: "];
"1001034" -> "1001033"  [label="AST: "];
"1001035" -> "1001033"  [label="CFG: "];
"1001033" -> "1001339"  [label="DDG: kfree_skb(skb)"];
"1001033" -> "1001339"  [label="DDG: skb"];
"1000945" -> "1001033"  [label="DDG: skb"];
"1001036" -> "1000750"  [label="AST: "];
"1001036" -> "1001038"  [label="CFG: "];
"1001037" -> "1001036"  [label="AST: "];
"1001038" -> "1001036"  [label="AST: "];
"1001040" -> "1001036"  [label="CFG: "];
"1001036" -> "1001339"  [label="DDG: copy"];
"1001036" -> "1001339"  [label="DDG: offset"];
"1001014" -> "1001036"  [label="DDG: copy"];
"1000148" -> "1001036"  [label="DDG: offset"];
"1001316" -> "1001036"  [label="DDG: offset"];
"1001036" -> "1001087"  [label="DDG: offset"];
"1001087" -> "1001086"  [label="AST: "];
"1001087" -> "1001095"  [label="CFG: "];
"1001088" -> "1001087"  [label="AST: "];
"1001089" -> "1001087"  [label="AST: "];
"1001092" -> "1001087"  [label="AST: "];
"1001093" -> "1001087"  [label="AST: "];
"1001094" -> "1001087"  [label="AST: "];
"1001095" -> "1001087"  [label="AST: "];
"1001096" -> "1001087"  [label="CFG: "];
"1001087" -> "1001339"  [label="DDG: from"];
"1001087" -> "1001339"  [label="DDG: skb_put(skb, copy)"];
"1001087" -> "1001339"  [label="DDG: off"];
"1001087" -> "1001339"  [label="DDG: offset"];
"1001087" -> "1001339"  [label="DDG: copy"];
"1001087" -> "1001339"  [label="DDG: skb"];
"1001087" -> "1001086"  [label="DDG: skb_put(skb, copy)"];
"1001087" -> "1001086"  [label="DDG: from"];
"1001087" -> "1001086"  [label="DDG: copy"];
"1001087" -> "1001086"  [label="DDG: offset"];
"1001087" -> "1001086"  [label="DDG: off"];
"1001087" -> "1001086"  [label="DDG: skb"];
"1000117" -> "1001087"  [label="DDG: from"];
"1001089" -> "1001087"  [label="DDG: skb"];
"1001089" -> "1001087"  [label="DDG: copy"];
"1001087" -> "1001089"  [label="DDG: skb"];
"1000148" -> "1001087"  [label="DDG: offset"];
"1001316" -> "1001087"  [label="DDG: offset"];
"1001080" -> "1001087"  [label="DDG: off"];
"1001087" -> "1001098"  [label="DDG: skb"];
"1001087" -> "1001098"  [label="DDG: off"];
"1001087" -> "1001112"  [label="DDG: skb"];
"1001087" -> "1001316"  [label="DDG: copy"];
"1001087" -> "1001316"  [label="DDG: offset"];
"1001087" -> "1001319"  [label="DDG: copy"];
"1001086" -> "1001085"  [label="AST: "];
"1001086" -> "1001096"  [label="CFG: "];
"1001096" -> "1001086"  [label="AST: "];
"1001099" -> "1001086"  [label="CFG: "];
"1001317" -> "1001086"  [label="CFG: "];
"1001086" -> "1001339"  [label="DDG: getfrag(from, skb_put(skb, copy),\n\t\t\t\t\t\toffset, copy, off, skb)"];
"1001086" -> "1001339"  [label="DDG: getfrag(from, skb_put(skb, copy),\n\t\t\t\t\t\toffset, copy, off, skb) < 0"];
"1001089" -> "1001091"  [label="CFG: "];
"1001090" -> "1001089"  [label="AST: "];
"1001091" -> "1001089"  [label="AST: "];
"1001092" -> "1001089"  [label="CFG: "];
"1001053" -> "1001089"  [label="DDG: skb"];
"1000700" -> "1001089"  [label="DDG: skb"];
"1001061" -> "1001089"  [label="DDG: copy"];
"1001064" -> "1001089"  [label="DDG: copy"];
"1001098" -> "1001097"  [label="AST: "];
"1001098" -> "1001100"  [label="CFG: "];
"1001099" -> "1001098"  [label="AST: "];
"1001100" -> "1001098"  [label="AST: "];
"1001102" -> "1001098"  [label="CFG: "];
"1001098" -> "1001339"  [label="DDG: skb"];
"1001098" -> "1001339"  [label="DDG: off"];
"1001098" -> "1001339"  [label="DDG: __skb_trim(skb, off)"];
"1001112" -> "1001111"  [label="AST: "];
"1001112" -> "1001113"  [label="CFG: "];
"1001113" -> "1001112"  [label="AST: "];
"1001114" -> "1001112"  [label="CFG: "];
"1001053" -> "1001112"  [label="DDG: skb"];
"1000700" -> "1001112"  [label="DDG: skb"];
"1001112" -> "1001121"  [label="DDG: skb"];
"1001121" -> "1001120"  [label="AST: "];
"1001121" -> "1001122"  [label="CFG: "];
"1001122" -> "1001121"  [label="AST: "];
"1001123" -> "1001121"  [label="CFG: "];
"1001121" -> "1001339"  [label="DDG: skb"];
"1001121" -> "1001234"  [label="DDG: skb"];
"1001234" -> "1001199"  [label="AST: "];
"1001234" -> "1001239"  [label="CFG: "];
"1001235" -> "1001234"  [label="AST: "];
"1001236" -> "1001234"  [label="AST: "];
"1001237" -> "1001234"  [label="AST: "];
"1001238" -> "1001234"  [label="AST: "];
"1001239" -> "1001234"  [label="AST: "];
"1001241" -> "1001234"  [label="CFG: "];
"1001234" -> "1001339"  [label="DDG: page"];
"1001234" -> "1001339"  [label="DDG: i"];
"1001234" -> "1001339"  [label="DDG: skb_fill_page_desc(skb, i, page, 0, 0)"];
"1001196" -> "1001234"  [label="DDG: i"];
"1001215" -> "1001234"  [label="DDG: page"];
"1001234" -> "1001245"  [label="DDG: skb"];
"1001245" -> "1001244"  [label="AST: "];
"1001245" -> "1001246"  [label="CFG: "];
"1001246" -> "1001245"  [label="AST: "];
"1001247" -> "1001245"  [label="CFG: "];
"1001316" -> "1000713"  [label="AST: "];
"1001316" -> "1001318"  [label="CFG: "];
"1001317" -> "1001316"  [label="AST: "];
"1001318" -> "1001316"  [label="AST: "];
"1001320" -> "1001316"  [label="CFG: "];
"1001316" -> "1001339"  [label="DDG: offset"];
"1001310" -> "1001316"  [label="DDG: copy"];
"1001319" -> "1000713"  [label="AST: "];
"1001319" -> "1001321"  [label="CFG: "];
"1001320" -> "1001319"  [label="AST: "];
"1001321" -> "1001319"  [label="AST: "];
"1000711" -> "1001319"  [label="CFG: "];
"1001319" -> "1001339"  [label="DDG: copy"];
"1001319" -> "1000710"  [label="DDG: length"];
"1001310" -> "1001319"  [label="DDG: copy"];
"1001061" -> "1001319"  [label="DDG: length"];
"1000118" -> "1001319"  [label="DDG: length"];
"1000710" -> "1000709"  [label="AST: "];
"1000710" -> "1000712"  [label="CFG: "];
"1000711" -> "1000710"  [label="AST: "];
"1000712" -> "1000710"  [label="AST: "];
"1000715" -> "1000710"  [label="CFG: "];
"1001323" -> "1000710"  [label="CFG: "];
"1000710" -> "1001339"  [label="DDG: length"];
"1000710" -> "1001339"  [label="DDG: length > 0"];
"1001039" -> "1000710"  [label="DDG: length"];
"1000635" -> "1000710"  [label="DDG: length"];
"1000118" -> "1000710"  [label="DDG: length"];
"1000710" -> "1000736"  [label="DDG: length"];
"1000736" -> "1000735"  [label="AST: "];
"1000736" -> "1000738"  [label="CFG: "];
"1000737" -> "1000736"  [label="AST: "];
"1000738" -> "1000736"  [label="AST: "];
"1000740" -> "1000736"  [label="CFG: "];
"1000748" -> "1000736"  [label="CFG: "];
"1000736" -> "1001339"  [label="DDG: copy < length"];
"1000714" -> "1000736"  [label="DDG: copy"];
"1000118" -> "1000736"  [label="DDG: length"];
"1000736" -> "1000747"  [label="DDG: copy"];
"1000736" -> "1000774"  [label="DDG: length"];
"1000736" -> "1000776"  [label="DDG: length"];
"1000736" -> "1000834"  [label="DDG: length"];
"1000736" -> "1000836"  [label="DDG: length"];
"1000736" -> "1001039"  [label="DDG: length"];
"1000736" -> "1001061"  [label="DDG: length"];
"1000736" -> "1001325"  [label="DDG: length"];
"1000747" -> "1000746"  [label="AST: "];
"1000747" -> "1000749"  [label="CFG: "];
"1000748" -> "1000747"  [label="AST: "];
"1000749" -> "1000747"  [label="AST: "];
"1000757" -> "1000747"  [label="CFG: "];
"1001062" -> "1000747"  [label="CFG: "];
"1000747" -> "1001339"  [label="DDG: copy"];
"1000747" -> "1001339"  [label="DDG: copy <= 0"];
"1000739" -> "1000747"  [label="DDG: copy"];
"1000747" -> "1001061"  [label="DDG: copy"];
"1001061" -> "1001060"  [label="AST: "];
"1001061" -> "1001063"  [label="CFG: "];
"1001062" -> "1001061"  [label="AST: "];
"1001063" -> "1001061"  [label="AST: "];
"1001065" -> "1001061"  [label="CFG: "];
"1001073" -> "1001061"  [label="CFG: "];
"1001061" -> "1001339"  [label="DDG: copy"];
"1001061" -> "1001339"  [label="DDG: copy > length"];
"1000118" -> "1001061"  [label="DDG: length"];
"1001061" -> "1001064"  [label="DDG: length"];
"1001061" -> "1001152"  [label="DDG: copy"];
"1001061" -> "1001201"  [label="DDG: copy"];
"1001061" -> "1001325"  [label="DDG: length"];
"1001064" -> "1001060"  [label="AST: "];
"1001064" -> "1001066"  [label="CFG: "];
"1001065" -> "1001064"  [label="AST: "];
"1001066" -> "1001064"  [label="AST: "];
"1001073" -> "1001064"  [label="CFG: "];
"1001064" -> "1001339"  [label="DDG: copy"];
"1000118" -> "1001064"  [label="DDG: length"];
"1001064" -> "1001152"  [label="DDG: copy"];
"1001064" -> "1001201"  [label="DDG: copy"];
"1001152" -> "1001151"  [label="AST: "];
"1001152" -> "1001154"  [label="CFG: "];
"1001153" -> "1001152"  [label="AST: "];
"1001154" -> "1001152"  [label="AST: "];
"1001156" -> "1001152"  [label="CFG: "];
"1001160" -> "1001152"  [label="CFG: "];
"1001152" -> "1001339"  [label="DDG: left"];
"1001152" -> "1001339"  [label="DDG: copy >= left"];
"1001152" -> "1001339"  [label="DDG: copy"];
"1001144" -> "1001152"  [label="DDG: left"];
"1001152" -> "1001155"  [label="DDG: left"];
"1001155" -> "1001151"  [label="AST: "];
"1001155" -> "1001157"  [label="CFG: "];
"1001156" -> "1001155"  [label="AST: "];
"1001157" -> "1001155"  [label="AST: "];
"1001160" -> "1001155"  [label="CFG: "];
"1001155" -> "1001339"  [label="DDG: copy"];
"1001155" -> "1001339"  [label="DDG: left"];
"1001201" -> "1001200"  [label="AST: "];
"1001201" -> "1001203"  [label="CFG: "];
"1001202" -> "1001201"  [label="AST: "];
"1001203" -> "1001201"  [label="AST: "];
"1001205" -> "1001201"  [label="CFG: "];
"1001208" -> "1001201"  [label="CFG: "];
"1001201" -> "1001339"  [label="DDG: copy"];
"1001201" -> "1001339"  [label="DDG: PAGE_SIZE"];
"1001201" -> "1001339"  [label="DDG: copy > PAGE_SIZE"];
"1001201" -> "1001146"  [label="DDG: PAGE_SIZE"];
"1001146" -> "1001201"  [label="DDG: PAGE_SIZE"];
"1001201" -> "1001204"  [label="DDG: PAGE_SIZE"];
"1001146" -> "1001144"  [label="AST: "];
"1001146" -> "1001148"  [label="CFG: "];
"1001147" -> "1001146"  [label="AST: "];
"1001148" -> "1001146"  [label="AST: "];
"1001144" -> "1001146"  [label="CFG: "];
"1001146" -> "1001339"  [label="DDG: off"];
"1001146" -> "1001339"  [label="DDG: PAGE_SIZE"];
"1001146" -> "1001143"  [label="DDG: PAGE_SIZE"];
"1001146" -> "1001143"  [label="DDG: off"];
"1001146" -> "1001144"  [label="DDG: PAGE_SIZE"];
"1001146" -> "1001144"  [label="DDG: off"];
"1001134" -> "1001146"  [label="DDG: off"];
"1001143" -> "1001149"  [label="CFG: "];
"1001144" -> "1001143"  [label="AST: "];
"1001149" -> "1001143"  [label="AST: "];
"1001144" -> "1001143"  [label="DDG: left"];
"1001145" -> "1001144"  [label="AST: "];
"1001149" -> "1001144"  [label="CFG: "];
"1001144" -> "1001339"  [label="DDG: PAGE_SIZE - off"];
"1001144" -> "1001339"  [label="DDG: left"];
"1001204" -> "1001200"  [label="AST: "];
"1001204" -> "1001206"  [label="CFG: "];
"1001205" -> "1001204"  [label="AST: "];
"1001206" -> "1001204"  [label="AST: "];
"1001208" -> "1001204"  [label="CFG: "];
"1001204" -> "1001339"  [label="DDG: copy"];
"1001204" -> "1001339"  [label="DDG: PAGE_SIZE"];
"1001325" -> "1000127"  [label="AST: "];
"1001325" -> "1001329"  [label="CFG: "];
"1001326" -> "1001325"  [label="AST: "];
"1001329" -> "1001325"  [label="AST: "];
"1001332" -> "1001325"  [label="CFG: "];
"1001325" -> "1001339"  [label="DDG: length"];
"1001325" -> "1001339"  [label="DDG: cork->length"];
"1000682" -> "1001325"  [label="DDG: length"];
"1000501" -> "1001325"  [label="DDG: length"];
"1000118" -> "1001325"  [label="DDG: length"];
"1000635" -> "1001325"  [label="DDG: length"];
"1000629" -> "1001325"  [label="DDG: cork->length"];
"1000785" -> "1001325"  [label="DDG: cork->length"];
"1000468" -> "1001325"  [label="DDG: cork->length"];
"1000719" -> "1001325"  [label="DDG: cork->length"];
"1000774" -> "1000750"  [label="AST: "];
"1000774" -> "1000776"  [label="CFG: "];
"1000775" -> "1000774"  [label="AST: "];
"1000776" -> "1000774"  [label="AST: "];
"1000781" -> "1000774"  [label="CFG: "];
"1000635" -> "1000774"  [label="DDG: length"];
"1000118" -> "1000774"  [label="DDG: length"];
"1000763" -> "1000774"  [label="DDG: fraggap"];
"1000771" -> "1000774"  [label="DDG: fraggap"];
"1000774" -> "1000780"  [label="DDG: datalen"];
"1000780" -> "1000779"  [label="AST: "];
"1000780" -> "1000782"  [label="CFG: "];
"1000781" -> "1000780"  [label="AST: "];
"1000782" -> "1000780"  [label="AST: "];
"1000800" -> "1000780"  [label="CFG: "];
"1000805" -> "1000780"  [label="CFG: "];
"1000780" -> "1001339"  [label="DDG: datalen > (cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG) ? mtu : maxfraglen) - fragheaderlen"];
"1000780" -> "1001339"  [label="DDG: (cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG) ? mtu : maxfraglen) - fragheaderlen"];
"1000782" -> "1000780"  [label="DDG: cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG) ? mtu : maxfraglen"];
"1000782" -> "1000780"  [label="DDG: fragheaderlen"];
"1000780" -> "1000804"  [label="DDG: datalen"];
"1000780" -> "1000806"  [label="DDG: datalen"];
"1000780" -> "1000828"  [label="DDG: datalen"];
"1000780" -> "1000830"  [label="DDG: datalen"];
"1000780" -> "1000834"  [label="DDG: datalen"];
"1000804" -> "1000750"  [label="AST: "];
"1000804" -> "1000806"  [label="CFG: "];
"1000805" -> "1000804"  [label="AST: "];
"1000806" -> "1000804"  [label="AST: "];
"1000812" -> "1000804"  [label="CFG: "];
"1000804" -> "1001339"  [label="DDG: fraglen"];
"1000804" -> "1001339"  [label="DDG: datalen + fragheaderlen"];
"1000799" -> "1000804"  [label="DDG: datalen"];
"1000801" -> "1000804"  [label="DDG: fragheaderlen"];
"1000782" -> "1000804"  [label="DDG: fragheaderlen"];
"1000804" -> "1000942"  [label="DDG: fraglen"];
"1000942" -> "1000940"  [label="AST: "];
"1000942" -> "1000944"  [label="CFG: "];
"1000943" -> "1000942"  [label="AST: "];
"1000944" -> "1000942"  [label="AST: "];
"1000940" -> "1000942"  [label="CFG: "];
"1000942" -> "1001339"  [label="DDG: fraglen"];
"1000942" -> "1000940"  [label="DDG: skb"];
"1000942" -> "1000940"  [label="DDG: fraglen"];
"1000936" -> "1000942"  [label="DDG: skb"];
"1000922" -> "1000942"  [label="DDG: skb"];
"1000942" -> "1000945"  [label="DDG: skb"];
"1000940" -> "1000750"  [label="AST: "];
"1000941" -> "1000940"  [label="AST: "];
"1000946" -> "1000940"  [label="CFG: "];
"1000940" -> "1001339"  [label="DDG: skb_put(skb, fraglen)"];
"1000940" -> "1000948"  [label="DDG: data"];
"1000948" -> "1000750"  [label="AST: "];
"1000948" -> "1000950"  [label="CFG: "];
"1000949" -> "1000948"  [label="AST: "];
"1000950" -> "1000948"  [label="AST: "];
"1000953" -> "1000948"  [label="CFG: "];
"1000948" -> "1001339"  [label="DDG: data"];
"1000801" -> "1000948"  [label="DDG: fragheaderlen"];
"1000782" -> "1000948"  [label="DDG: fragheaderlen"];
"1000948" -> "1000970"  [label="DDG: data"];
"1000948" -> "1001020"  [label="DDG: data"];
"1000970" -> "1000972"  [label="CFG: "];
"1000971" -> "1000970"  [label="AST: "];
"1000972" -> "1000970"  [label="AST: "];
"1000973" -> "1000970"  [label="CFG: "];
"1001044" -> "1000970"  [label="DDG: transhdrlen"];
"1000535" -> "1000970"  [label="DDG: transhdrlen"];
"1000504" -> "1000970"  [label="DDG: transhdrlen"];
"1000119" -> "1000970"  [label="DDG: transhdrlen"];
"1001020" -> "1001022"  [label="CFG: "];
"1001021" -> "1001020"  [label="AST: "];
"1001022" -> "1001020"  [label="AST: "];
"1001023" -> "1001020"  [label="CFG: "];
"1001020" -> "1001339"  [label="DDG: data"];
"1001020" -> "1001339"  [label="DDG: transhdrlen"];
"1000996" -> "1001020"  [label="DDG: transhdrlen"];
"1000119" -> "1001020"  [label="DDG: transhdrlen"];
"1000945" -> "1000750"  [label="AST: "];
"1000945" -> "1000947"  [label="CFG: "];
"1000946" -> "1000945"  [label="AST: "];
"1000947" -> "1000945"  [label="AST: "];
"1000949" -> "1000945"  [label="CFG: "];
"1000945" -> "1001339"  [label="DDG: skb_set_network_header(skb, exthdrlen)"];
"1000945" -> "1001339"  [label="DDG: exthdrlen"];
"1001047" -> "1000945"  [label="DDG: exthdrlen"];
"1000538" -> "1000945"  [label="DDG: exthdrlen"];
"1000483" -> "1000945"  [label="DDG: exthdrlen"];
"1000945" -> "1001008"  [label="DDG: skb"];
"1000945" -> "1001053"  [label="DDG: skb"];
"1001008" -> "1001003"  [label="AST: "];
"1001008" -> "1001009"  [label="CFG: "];
"1001009" -> "1001008"  [label="AST: "];
"1001010" -> "1001008"  [label="CFG: "];
"1001008" -> "1001339"  [label="DDG: kfree_skb(skb)"];
"1001008" -> "1001339"  [label="DDG: skb"];
"1001053" -> "1000750"  [label="AST: "];
"1001053" -> "1001058"  [label="CFG: "];
"1001054" -> "1001053"  [label="AST: "];
"1001058" -> "1001053"  [label="AST: "];
"1001059" -> "1001053"  [label="CFG: "];
"1001053" -> "1001339"  [label="DDG: skb"];
"1001053" -> "1001339"  [label="DDG: &sk->sk_write_queue"];
"1001053" -> "1001339"  [label="DDG: __skb_queue_tail(&sk->sk_write_queue, skb)"];
"1000702" -> "1001053"  [label="DDG: &sk->sk_write_queue"];
"1000806" -> "1000808"  [label="CFG: "];
"1000807" -> "1000806"  [label="AST: "];
"1000808" -> "1000806"  [label="AST: "];
"1000806" -> "1001339"  [label="DDG: fragheaderlen"];
"1000799" -> "1000806"  [label="DDG: datalen"];
"1000801" -> "1000806"  [label="DDG: fragheaderlen"];
"1000782" -> "1000806"  [label="DDG: fragheaderlen"];
"1000828" -> "1000827"  [label="AST: "];
"1000828" -> "1000830"  [label="CFG: "];
"1000829" -> "1000828"  [label="AST: "];
"1000830" -> "1000828"  [label="AST: "];
"1000835" -> "1000828"  [label="CFG: "];
"1000828" -> "1001339"  [label="DDG: datalen + fragheaderlen"];
"1000799" -> "1000828"  [label="DDG: datalen"];
"1000801" -> "1000828"  [label="DDG: fragheaderlen"];
"1000782" -> "1000828"  [label="DDG: fragheaderlen"];
"1000828" -> "1000839"  [label="DDG: alloclen"];
"1000828" -> "1000846"  [label="DDG: alloclen"];
"1000839" -> "1000833"  [label="AST: "];
"1000839" -> "1000841"  [label="CFG: "];
"1000840" -> "1000839"  [label="AST: "];
"1000841" -> "1000839"  [label="AST: "];
"1000847" -> "1000839"  [label="CFG: "];
"1000839" -> "1001339"  [label="DDG: rt->dst.trailer_len"];
"1000824" -> "1000839"  [label="DDG: alloclen"];
"1000839" -> "1000846"  [label="DDG: alloclen"];
"1000846" -> "1000750"  [label="AST: "];
"1000846" -> "1000848"  [label="CFG: "];
"1000847" -> "1000846"  [label="AST: "];
"1000848" -> "1000846"  [label="AST: "];
"1000851" -> "1000846"  [label="CFG: "];
"1000846" -> "1001339"  [label="DDG: alloclen"];
"1000824" -> "1000846"  [label="DDG: alloclen"];
"1000846" -> "1000855"  [label="DDG: alloclen"];
"1000846" -> "1000857"  [label="DDG: alloclen"];
"1000846" -> "1000884"  [label="DDG: alloclen"];
"1000846" -> "1000886"  [label="DDG: alloclen"];
"1000855" -> "1000853"  [label="AST: "];
"1000855" -> "1000863"  [label="CFG: "];
"1000856" -> "1000855"  [label="AST: "];
"1000857" -> "1000855"  [label="AST: "];
"1000860" -> "1000855"  [label="AST: "];
"1000863" -> "1000855"  [label="AST: "];
"1000853" -> "1000855"  [label="CFG: "];
"1000855" -> "1001339"  [label="DDG: alloclen + hh_len"];
"1000855" -> "1001339"  [label="DDG: flags & MSG_DONTWAIT"];
"1000855" -> "1001339"  [label="DDG: &err"];
"1000855" -> "1001339"  [label="DDG: sk"];
"1000855" -> "1000853"  [label="DDG: sk"];
"1000855" -> "1000853"  [label="DDG: alloclen + hh_len"];
"1000855" -> "1000853"  [label="DDG: flags & MSG_DONTWAIT"];
"1000855" -> "1000853"  [label="DDG: &err"];
"1000622" -> "1000855"  [label="DDG: sk"];
"1000884" -> "1000855"  [label="DDG: sk"];
"1000136" -> "1000855"  [label="DDG: sk"];
"1000115" -> "1000855"  [label="DDG: sk"];
"1000546" -> "1000855"  [label="DDG: hh_len"];
"1000860" -> "1000855"  [label="DDG: flags"];
"1000860" -> "1000855"  [label="DDG: MSG_DONTWAIT"];
"1000855" -> "1000884"  [label="DDG: sk"];
"1000855" -> "1001331"  [label="DDG: sk"];
"1000853" -> "1000852"  [label="AST: "];
"1000854" -> "1000853"  [label="AST: "];
"1000909" -> "1000853"  [label="CFG: "];
"1000853" -> "1001339"  [label="DDG: sock_alloc_send_skb(sk,\n\t\t\t\t\t\talloclen + hh_len,\n\t\t\t\t\t\t(flags & MSG_DONTWAIT), &err)"];
"1000853" -> "1000908"  [label="DDG: skb"];
"1000908" -> "1000907"  [label="AST: "];
"1000908" -> "1000910"  [label="CFG: "];
"1000909" -> "1000908"  [label="AST: "];
"1000910" -> "1000908"  [label="AST: "];
"1000911" -> "1000908"  [label="CFG: "];
"1000914" -> "1000908"  [label="CFG: "];
"1000908" -> "1001339"  [label="DDG: skb == NULL"];
"1000908" -> "1001339"  [label="DDG: NULL"];
"1000908" -> "1001339"  [label="DDG: skb"];
"1000908" -> "1000867"  [label="DDG: NULL"];
"1000908" -> "1000895"  [label="DDG: NULL"];
"1000895" -> "1000908"  [label="DDG: skb"];
"1000895" -> "1000908"  [label="DDG: NULL"];
"1000699" -> "1000908"  [label="DDG: NULL"];
"1001215" -> "1000908"  [label="DDG: NULL"];
"1000908" -> "1000922"  [label="DDG: skb"];
"1000908" -> "1001215"  [label="DDG: NULL"];
"1000867" -> "1000866"  [label="AST: "];
"1000867" -> "1000869"  [label="CFG: "];
"1000868" -> "1000867"  [label="AST: "];
"1000869" -> "1000867"  [label="AST: "];
"1000875" -> "1000867"  [label="CFG: "];
"1000699" -> "1000867"  [label="DDG: NULL"];
"1001215" -> "1000867"  [label="DDG: NULL"];
"1000867" -> "1000895"  [label="DDG: skb"];
"1000895" -> "1000894"  [label="AST: "];
"1000895" -> "1000897"  [label="CFG: "];
"1000896" -> "1000895"  [label="AST: "];
"1000897" -> "1000895"  [label="AST: "];
"1000894" -> "1000895"  [label="CFG: "];
"1000895" -> "1000894"  [label="DDG: skb"];
"1000895" -> "1000894"  [label="DDG: NULL"];
"1000882" -> "1000895"  [label="DDG: skb"];
"1000699" -> "1000895"  [label="DDG: NULL"];
"1001215" -> "1000895"  [label="DDG: NULL"];
"1000894" -> "1000893"  [label="AST: "];
"1000899" -> "1000894"  [label="CFG: "];
"1000905" -> "1000894"  [label="CFG: "];
"1000894" -> "1001339"  [label="DDG: unlikely(skb == NULL)"];
"1000922" -> "1000750"  [label="AST: "];
"1000922" -> "1000924"  [label="CFG: "];
"1000923" -> "1000922"  [label="AST: "];
"1000924" -> "1000922"  [label="AST: "];
"1000931" -> "1000922"  [label="CFG: "];
"1000922" -> "1001339"  [label="DDG: skb_reserve(skb, hh_len+sizeof(struct frag_hdr))"];
"1000922" -> "1001339"  [label="DDG: hh_len+sizeof(struct frag_hdr)"];
"1000546" -> "1000922"  [label="DDG: hh_len"];
"1000922" -> "1000936"  [label="DDG: skb"];
"1000936" -> "1000935"  [label="AST: "];
"1000936" -> "1000937"  [label="CFG: "];
"1000937" -> "1000936"  [label="AST: "];
"1000938" -> "1000936"  [label="CFG: "];
"1001215" -> "1001214"  [label="AST: "];
"1001215" -> "1001217"  [label="CFG: "];
"1001216" -> "1001215"  [label="AST: "];
"1001217" -> "1001215"  [label="AST: "];
"1001220" -> "1001215"  [label="CFG: "];
"1001226" -> "1001215"  [label="CFG: "];
"1001215" -> "1001339"  [label="DDG: page == NULL"];
"1001215" -> "1001339"  [label="DDG: page"];
"1001215" -> "1001339"  [label="DDG: NULL"];
"1001207" -> "1001215"  [label="DDG: page"];
"1000699" -> "1001215"  [label="DDG: NULL"];
"1001215" -> "1001224"  [label="DDG: page"];
"1001224" -> "1001199"  [label="AST: "];
"1001224" -> "1001228"  [label="CFG: "];
"1001225" -> "1001224"  [label="AST: "];
"1001228" -> "1001224"  [label="AST: "];
"1001231" -> "1001224"  [label="CFG: "];
"1001224" -> "1001339"  [label="DDG: sk->sk_sndmsg_page"];
"1000884" -> "1000882"  [label="AST: "];
"1000884" -> "1000890"  [label="CFG: "];
"1000885" -> "1000884"  [label="AST: "];
"1000886" -> "1000884"  [label="AST: "];
"1000889" -> "1000884"  [label="AST: "];
"1000890" -> "1000884"  [label="AST: "];
"1000882" -> "1000884"  [label="CFG: "];
"1000884" -> "1001339"  [label="DDG: sk"];
"1000884" -> "1001339"  [label="DDG: alloclen + hh_len"];
"1000884" -> "1001339"  [label="DDG: sk->sk_allocation"];
"1000884" -> "1000882"  [label="DDG: sk"];
"1000884" -> "1000882"  [label="DDG: alloclen + hh_len"];
"1000884" -> "1000882"  [label="DDG: 1"];
"1000884" -> "1000882"  [label="DDG: sk->sk_allocation"];
"1000622" -> "1000884"  [label="DDG: sk"];
"1000136" -> "1000884"  [label="DDG: sk"];
"1000115" -> "1000884"  [label="DDG: sk"];
"1000546" -> "1000884"  [label="DDG: hh_len"];
"1000352" -> "1000884"  [label="DDG: sk->sk_allocation"];
"1001209" -> "1000884"  [label="DDG: sk->sk_allocation"];
"1000884" -> "1001209"  [label="DDG: sk->sk_allocation"];
"1000884" -> "1001331"  [label="DDG: sk"];
"1000882" -> "1000870"  [label="AST: "];
"1000883" -> "1000882"  [label="AST: "];
"1000896" -> "1000882"  [label="CFG: "];
"1000882" -> "1001339"  [label="DDG: sock_wmalloc(sk,\n\t\t\t\t\t\t\t   alloclen + hh_len, 1,\n\t\t\t\t\t\t\t   sk->sk_allocation)"];
"1001209" -> "1001207"  [label="AST: "];
"1001209" -> "1001213"  [label="CFG: "];
"1001210" -> "1001209"  [label="AST: "];
"1001213" -> "1001209"  [label="AST: "];
"1001207" -> "1001209"  [label="CFG: "];
"1001209" -> "1001339"  [label="DDG: sk->sk_allocation"];
"1001209" -> "1001207"  [label="DDG: sk->sk_allocation"];
"1001209" -> "1001207"  [label="DDG: 0"];
"1000352" -> "1001209"  [label="DDG: sk->sk_allocation"];
"1001207" -> "1001199"  [label="AST: "];
"1001208" -> "1001207"  [label="AST: "];
"1001216" -> "1001207"  [label="CFG: "];
"1001207" -> "1001339"  [label="DDG: alloc_pages(sk->sk_allocation, 0)"];
"1001331" -> "1001330"  [label="AST: "];
"1001331" -> "1001332"  [label="CFG: "];
"1001332" -> "1001331"  [label="AST: "];
"1001334" -> "1001331"  [label="CFG: "];
"1001331" -> "1001339"  [label="DDG: sk"];
"1001331" -> "1001330"  [label="DDG: sk"];
"1000622" -> "1001331"  [label="DDG: sk"];
"1000682" -> "1001331"  [label="DDG: sk"];
"1000136" -> "1001331"  [label="DDG: sk"];
"1000115" -> "1001331"  [label="DDG: sk"];
"1001330" -> "1000127"  [label="AST: "];
"1001330" -> "1001336"  [label="CFG: "];
"1001333" -> "1001330"  [label="AST: "];
"1001336" -> "1001330"  [label="AST: "];
"1001338" -> "1001330"  [label="CFG: "];
"1001330" -> "1001339"  [label="DDG: rt->rt6i_idev"];
"1001330" -> "1001339"  [label="DDG: IP6_INC_STATS(sock_net(sk), rt->rt6i_idev, IPSTATS_MIB_OUTDISCARDS)"];
"1001330" -> "1001339"  [label="DDG: IPSTATS_MIB_OUTDISCARDS"];
"1001330" -> "1001339"  [label="DDG: sock_net(sk)"];
"1000857" -> "1000859"  [label="CFG: "];
"1000858" -> "1000857"  [label="AST: "];
"1000859" -> "1000857"  [label="AST: "];
"1000861" -> "1000857"  [label="CFG: "];
"1000857" -> "1001339"  [label="DDG: alloclen"];
"1000857" -> "1001339"  [label="DDG: hh_len"];
"1000546" -> "1000857"  [label="DDG: hh_len"];
"1000886" -> "1000888"  [label="CFG: "];
"1000887" -> "1000886"  [label="AST: "];
"1000888" -> "1000886"  [label="AST: "];
"1000889" -> "1000886"  [label="CFG: "];
"1000886" -> "1001339"  [label="DDG: alloclen"];
"1000886" -> "1001339"  [label="DDG: hh_len"];
"1000546" -> "1000886"  [label="DDG: hh_len"];
"1000830" -> "1000832"  [label="CFG: "];
"1000831" -> "1000830"  [label="AST: "];
"1000832" -> "1000830"  [label="AST: "];
"1000830" -> "1001339"  [label="DDG: fragheaderlen"];
"1000799" -> "1000830"  [label="DDG: datalen"];
"1000801" -> "1000830"  [label="DDG: fragheaderlen"];
"1000782" -> "1000830"  [label="DDG: fragheaderlen"];
"1000834" -> "1000833"  [label="AST: "];
"1000834" -> "1000836"  [label="CFG: "];
"1000835" -> "1000834"  [label="AST: "];
"1000836" -> "1000834"  [label="AST: "];
"1000840" -> "1000834"  [label="CFG: "];
"1000847" -> "1000834"  [label="CFG: "];
"1000834" -> "1001339"  [label="DDG: datalen == length + fraggap"];
"1000834" -> "1001339"  [label="DDG: datalen"];
"1000834" -> "1001339"  [label="DDG: length + fraggap"];
"1000799" -> "1000834"  [label="DDG: datalen"];
"1000118" -> "1000834"  [label="DDG: length"];
"1000635" -> "1000834"  [label="DDG: length"];
"1000763" -> "1000834"  [label="DDG: fraggap"];
"1000771" -> "1000834"  [label="DDG: fraggap"];
"1000834" -> "1000994"  [label="DDG: datalen"];
"1000994" -> "1000992"  [label="AST: "];
"1000994" -> "1000996"  [label="CFG: "];
"1000995" -> "1000994"  [label="AST: "];
"1000996" -> "1000994"  [label="AST: "];
"1000992" -> "1000994"  [label="CFG: "];
"1000994" -> "1001339"  [label="DDG: transhdrlen - fraggap"];
"1000994" -> "1001339"  [label="DDG: datalen"];
"1000994" -> "1000992"  [label="DDG: datalen"];
"1000994" -> "1000992"  [label="DDG: transhdrlen - fraggap"];
"1000996" -> "1000994"  [label="DDG: transhdrlen"];
"1000996" -> "1000994"  [label="DDG: fraggap"];
"1000994" -> "1001041"  [label="DDG: datalen"];
"1000992" -> "1000750"  [label="AST: "];
"1000993" -> "1000992"  [label="AST: "];
"1001001" -> "1000992"  [label="CFG: "];
"1000992" -> "1001339"  [label="DDG: datalen - transhdrlen - fraggap"];
"1000992" -> "1001000"  [label="DDG: copy"];
"1001000" -> "1000999"  [label="AST: "];
"1001000" -> "1001002"  [label="CFG: "];
"1001001" -> "1001000"  [label="AST: "];
"1001002" -> "1001000"  [label="AST: "];
"1001005" -> "1001000"  [label="CFG: "];
"1001015" -> "1001000"  [label="CFG: "];
"1001000" -> "1001339"  [label="DDG: copy"];
"1001000" -> "1001339"  [label="DDG: copy < 0"];
"1001000" -> "1001014"  [label="DDG: copy"];
"1001014" -> "1001016"  [label="CFG: "];
"1001015" -> "1001014"  [label="AST: "];
"1001016" -> "1001014"  [label="AST: "];
"1001019" -> "1001014"  [label="CFG: "];
"1001014" -> "1001339"  [label="DDG: copy"];
"1001041" -> "1001039"  [label="AST: "];
"1001041" -> "1001043"  [label="CFG: "];
"1001042" -> "1001041"  [label="AST: "];
"1001043" -> "1001041"  [label="AST: "];
"1001039" -> "1001041"  [label="CFG: "];
"1001041" -> "1001339"  [label="DDG: datalen"];
"1001041" -> "1001339"  [label="DDG: fraggap"];
"1001041" -> "1001039"  [label="DDG: datalen"];
"1001041" -> "1001039"  [label="DDG: fraggap"];
"1000996" -> "1001041"  [label="DDG: fraggap"];
"1001039" -> "1000750"  [label="AST: "];
"1001040" -> "1001039"  [label="AST: "];
"1001045" -> "1001039"  [label="CFG: "];
"1001039" -> "1001339"  [label="DDG: datalen - fraggap"];
"1000118" -> "1001039"  [label="DDG: length"];
"1000635" -> "1001039"  [label="DDG: length"];
"1000776" -> "1000778"  [label="CFG: "];
"1000777" -> "1000776"  [label="AST: "];
"1000778" -> "1000776"  [label="AST: "];
"1000635" -> "1000776"  [label="DDG: length"];
"1000118" -> "1000776"  [label="DDG: length"];
"1000763" -> "1000776"  [label="DDG: fraggap"];
"1000771" -> "1000776"  [label="DDG: fraggap"];
"1000836" -> "1000838"  [label="CFG: "];
"1000837" -> "1000836"  [label="AST: "];
"1000838" -> "1000836"  [label="AST: "];
"1000836" -> "1001339"  [label="DDG: fraggap"];
"1000118" -> "1000836"  [label="DDG: length"];
"1000635" -> "1000836"  [label="DDG: length"];
"1000763" -> "1000836"  [label="DDG: fraggap"];
"1000771" -> "1000836"  [label="DDG: fraggap"];
"1000989" -> "1000962"  [label="AST: "];
"1000989" -> "1000991"  [label="CFG: "];
"1000990" -> "1000989"  [label="AST: "];
"1000991" -> "1000989"  [label="AST: "];
"1000993" -> "1000989"  [label="CFG: "];
"1000989" -> "1001339"  [label="DDG: pskb_trim_unique(skb_prev, maxfraglen)"];
"1000989" -> "1001339"  [label="DDG: maxfraglen"];
"1000989" -> "1001339"  [label="DDG: skb_prev"];
"1000989" -> "1000716"  [label="DDG: maxfraglen"];
"1000989" -> "1000717"  [label="DDG: maxfraglen"];
"1000989" -> "1000741"  [label="DDG: maxfraglen"];
"1000989" -> "1000765"  [label="DDG: maxfraglen"];
"1000716" -> "1000714"  [label="AST: "];
"1000716" -> "1000732"  [label="CFG: "];
"1000717" -> "1000716"  [label="AST: "];
"1000732" -> "1000716"  [label="AST: "];
"1000714" -> "1000716"  [label="CFG: "];
"1000716" -> "1001339"  [label="DDG: cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG) ? mtu : maxfraglen"];
"1000716" -> "1001339"  [label="DDG: skb->len"];
"1000716" -> "1000714"  [label="DDG: cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG) ? mtu : maxfraglen"];
"1000716" -> "1000714"  [label="DDG: skb->len"];
"1000719" -> "1000716"  [label="DDG: mtu"];
"1000741" -> "1000716"  [label="DDG: maxfraglen"];
"1000741" -> "1000716"  [label="DDG: skb->len"];
"1000569" -> "1000716"  [label="DDG: maxfraglen"];
"1000801" -> "1000716"  [label="DDG: maxfraglen"];
"1000765" -> "1000716"  [label="DDG: maxfraglen"];
"1001295" -> "1000716"  [label="DDG: skb->len"];
"1000716" -> "1000741"  [label="DDG: skb->len"];
"1000716" -> "1001080"  [label="DDG: skb->len"];
"1000714" -> "1000713"  [label="AST: "];
"1000715" -> "1000714"  [label="AST: "];
"1000737" -> "1000714"  [label="CFG: "];
"1000714" -> "1001339"  [label="DDG: (cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG) ? mtu : maxfraglen) - skb->len"];
"1000741" -> "1000739"  [label="AST: "];
"1000741" -> "1000743"  [label="CFG: "];
"1000742" -> "1000741"  [label="AST: "];
"1000743" -> "1000741"  [label="AST: "];
"1000739" -> "1000741"  [label="CFG: "];
"1000741" -> "1001339"  [label="DDG: maxfraglen"];
"1000741" -> "1001339"  [label="DDG: skb->len"];
"1000741" -> "1000717"  [label="DDG: maxfraglen"];
"1000741" -> "1000739"  [label="DDG: maxfraglen"];
"1000741" -> "1000739"  [label="DDG: skb->len"];
"1000569" -> "1000741"  [label="DDG: maxfraglen"];
"1000801" -> "1000741"  [label="DDG: maxfraglen"];
"1000765" -> "1000741"  [label="DDG: maxfraglen"];
"1000741" -> "1000765"  [label="DDG: maxfraglen"];
"1000741" -> "1000782"  [label="DDG: maxfraglen"];
"1000741" -> "1000783"  [label="DDG: maxfraglen"];
"1000741" -> "1000801"  [label="DDG: maxfraglen"];
"1000741" -> "1001080"  [label="DDG: skb->len"];
"1000717" -> "1000730"  [label="CFG: "];
"1000717" -> "1000731"  [label="CFG: "];
"1000718" -> "1000717"  [label="AST: "];
"1000730" -> "1000717"  [label="AST: "];
"1000731" -> "1000717"  [label="AST: "];
"1000733" -> "1000717"  [label="CFG: "];
"1000717" -> "1001339"  [label="DDG: mtu"];
"1000717" -> "1001339"  [label="DDG: maxfraglen"];
"1000717" -> "1001339"  [label="DDG: cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG)"];
"1000719" -> "1000717"  [label="DDG: mtu"];
"1000569" -> "1000717"  [label="DDG: maxfraglen"];
"1000801" -> "1000717"  [label="DDG: maxfraglen"];
"1000765" -> "1000717"  [label="DDG: maxfraglen"];
"1000739" -> "1000735"  [label="AST: "];
"1000740" -> "1000739"  [label="AST: "];
"1000748" -> "1000739"  [label="CFG: "];
"1000739" -> "1001339"  [label="DDG: maxfraglen - skb->len"];
"1000765" -> "1000763"  [label="AST: "];
"1000765" -> "1000769"  [label="CFG: "];
"1000766" -> "1000765"  [label="AST: "];
"1000769" -> "1000765"  [label="AST: "];
"1000763" -> "1000765"  [label="CFG: "];
"1000765" -> "1001339"  [label="DDG: skb_prev->len"];
"1000765" -> "1000763"  [label="DDG: skb_prev->len"];
"1000765" -> "1000763"  [label="DDG: maxfraglen"];
"1000569" -> "1000765"  [label="DDG: maxfraglen"];
"1000801" -> "1000765"  [label="DDG: maxfraglen"];
"1000765" -> "1000782"  [label="DDG: maxfraglen"];
"1000765" -> "1000783"  [label="DDG: maxfraglen"];
"1000765" -> "1000801"  [label="DDG: maxfraglen"];
"1000763" -> "1000761"  [label="AST: "];
"1000764" -> "1000763"  [label="AST: "];
"1000775" -> "1000763"  [label="CFG: "];
"1000763" -> "1001339"  [label="DDG: skb_prev->len - maxfraglen"];
"1000763" -> "1000996"  [label="DDG: fraggap"];
"1000996" -> "1000998"  [label="CFG: "];
"1000997" -> "1000996"  [label="AST: "];
"1000998" -> "1000996"  [label="AST: "];
"1000996" -> "1001339"  [label="DDG: fraggap"];
"1000996" -> "1001339"  [label="DDG: transhdrlen"];
"1001044" -> "1000996"  [label="DDG: transhdrlen"];
"1000535" -> "1000996"  [label="DDG: transhdrlen"];
"1000504" -> "1000996"  [label="DDG: transhdrlen"];
"1000119" -> "1000996"  [label="DDG: transhdrlen"];
"1000771" -> "1000996"  [label="DDG: fraggap"];
"1000782" -> "1000798"  [label="CFG: "];
"1000783" -> "1000782"  [label="AST: "];
"1000798" -> "1000782"  [label="AST: "];
"1000782" -> "1001339"  [label="DDG: cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG) ? mtu : maxfraglen"];
"1000785" -> "1000782"  [label="DDG: mtu"];
"1000569" -> "1000782"  [label="DDG: maxfraglen"];
"1000577" -> "1000782"  [label="DDG: fragheaderlen"];
"1000599" -> "1000782"  [label="DDG: fragheaderlen"];
"1000801" -> "1000782"  [label="DDG: fragheaderlen"];
"1000782" -> "1000801"  [label="DDG: fragheaderlen"];
"1000782" -> "1000951"  [label="DDG: fragheaderlen"];
"1000782" -> "1000955"  [label="DDG: fragheaderlen"];
"1000801" -> "1000799"  [label="AST: "];
"1000801" -> "1000803"  [label="CFG: "];
"1000802" -> "1000801"  [label="AST: "];
"1000803" -> "1000801"  [label="AST: "];
"1000799" -> "1000801"  [label="CFG: "];
"1000801" -> "1001339"  [label="DDG: maxfraglen"];
"1000801" -> "1000799"  [label="DDG: maxfraglen"];
"1000801" -> "1000799"  [label="DDG: fragheaderlen"];
"1000569" -> "1000801"  [label="DDG: maxfraglen"];
"1000801" -> "1000951"  [label="DDG: fragheaderlen"];
"1000801" -> "1000955"  [label="DDG: fragheaderlen"];
"1000799" -> "1000779"  [label="AST: "];
"1000800" -> "1000799"  [label="AST: "];
"1000805" -> "1000799"  [label="CFG: "];
"1000799" -> "1001339"  [label="DDG: maxfraglen - fragheaderlen"];
"1000951" -> "1000750"  [label="AST: "];
"1000951" -> "1000955"  [label="CFG: "];
"1000952" -> "1000951"  [label="AST: "];
"1000955" -> "1000951"  [label="AST: "];
"1000961" -> "1000951"  [label="CFG: "];
"1000951" -> "1001339"  [label="DDG: skb->transport_header"];
"1000951" -> "1001339"  [label="DDG: skb->network_header +\n\t\t\t\t\t\t fragheaderlen"];
"1000955" -> "1000959"  [label="CFG: "];
"1000956" -> "1000955"  [label="AST: "];
"1000959" -> "1000955"  [label="AST: "];
"1000955" -> "1001339"  [label="DDG: fragheaderlen"];
"1000955" -> "1001339"  [label="DDG: skb->network_header"];
"1000783" -> "1000796"  [label="CFG: "];
"1000783" -> "1000797"  [label="CFG: "];
"1000784" -> "1000783"  [label="AST: "];
"1000796" -> "1000783"  [label="AST: "];
"1000797" -> "1000783"  [label="AST: "];
"1000798" -> "1000783"  [label="CFG: "];
"1000783" -> "1001339"  [label="DDG: mtu"];
"1000783" -> "1001339"  [label="DDG: cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG)"];
"1000783" -> "1001339"  [label="DDG: maxfraglen"];
"1000785" -> "1000783"  [label="DDG: mtu"];
"1000569" -> "1000783"  [label="DDG: maxfraglen"];
"1001080" -> "1001078"  [label="AST: "];
"1001080" -> "1001082"  [label="CFG: "];
"1001081" -> "1001080"  [label="AST: "];
"1001082" -> "1001080"  [label="AST: "];
"1001088" -> "1001080"  [label="CFG: "];
"1001080" -> "1001339"  [label="DDG: skb->len"];
"1001257" -> "1001256"  [label="AST: "];
"1001257" -> "1001278"  [label="CFG: "];
"1001278" -> "1001257"  [label="AST: "];
"1001281" -> "1001257"  [label="CFG: "];
"1001287" -> "1001257"  [label="CFG: "];
"1001257" -> "1001339"  [label="DDG: getfrag(from, page_address(frag->page)+frag->page_offset+frag->size, offset, copy, skb->len, skb)"];
"1001257" -> "1001339"  [label="DDG: getfrag(from, page_address(frag->page)+frag->page_offset+frag->size, offset, copy, skb->len, skb) < 0"];
"1001285" -> "1001107"  [label="AST: "];
"1001285" -> "1001289"  [label="CFG: "];
"1001286" -> "1001285"  [label="AST: "];
"1001289" -> "1001285"  [label="AST: "];
"1001292" -> "1001285"  [label="CFG: "];
"1001285" -> "1001339"  [label="DDG: sk->sk_sndmsg_off"];
"1001285" -> "1001134"  [label="DDG: sk->sk_sndmsg_off"];
"1001229" -> "1001285"  [label="DDG: sk->sk_sndmsg_off"];
"1000478" -> "1001285"  [label="DDG: sk->sk_sndmsg_off"];
"1001134" -> "1001107"  [label="AST: "];
"1001134" -> "1001136"  [label="CFG: "];
"1001135" -> "1001134"  [label="AST: "];
"1001136" -> "1001134"  [label="AST: "];
"1001142" -> "1001134"  [label="CFG: "];
"1001134" -> "1001339"  [label="DDG: off"];
"1001134" -> "1001339"  [label="DDG: sk->sk_sndmsg_off"];
"1000478" -> "1001134"  [label="DDG: sk->sk_sndmsg_off"];
"1001290" -> "1001107"  [label="AST: "];
"1001290" -> "1001294"  [label="CFG: "];
"1001291" -> "1001290"  [label="AST: "];
"1001294" -> "1001290"  [label="AST: "];
"1001297" -> "1001290"  [label="CFG: "];
"1001290" -> "1001339"  [label="DDG: frag->size"];
"1001290" -> "1001260"  [label="DDG: frag->size"];
"1001290" -> "1001265"  [label="DDG: frag->size"];
"1001260" -> "1001265"  [label="CFG: "];
"1001261" -> "1001260"  [label="AST: "];
"1001265" -> "1001260"  [label="AST: "];
"1001272" -> "1001260"  [label="CFG: "];
"1001260" -> "1001339"  [label="DDG: frag->page_offset+frag->size"];
"1001260" -> "1001339"  [label="DDG: page_address(frag->page)"];
"1001261" -> "1001260"  [label="DDG: frag->page"];
"1001265" -> "1001269"  [label="CFG: "];
"1001266" -> "1001265"  [label="AST: "];
"1001269" -> "1001265"  [label="AST: "];
"1001265" -> "1001339"  [label="DDG: frag->page_offset"];
"1001265" -> "1001339"  [label="DDG: frag->size"];
"1001295" -> "1001107"  [label="AST: "];
"1001295" -> "1001299"  [label="CFG: "];
"1001296" -> "1001295"  [label="AST: "];
"1001299" -> "1001295"  [label="AST: "];
"1001302" -> "1001295"  [label="CFG: "];
"1001295" -> "1001339"  [label="DDG: skb->len"];
"1001300" -> "1001107"  [label="AST: "];
"1001300" -> "1001304"  [label="CFG: "];
"1001301" -> "1001300"  [label="AST: "];
"1001304" -> "1001300"  [label="AST: "];
"1001307" -> "1001300"  [label="CFG: "];
"1001300" -> "1001339"  [label="DDG: skb->data_len"];
"1001305" -> "1001107"  [label="AST: "];
"1001305" -> "1001309"  [label="CFG: "];
"1001306" -> "1001305"  [label="AST: "];
"1001309" -> "1001305"  [label="AST: "];
"1001311" -> "1001305"  [label="CFG: "];
"1001305" -> "1001339"  [label="DDG: skb->truesize"];
"1001310" -> "1001107"  [label="AST: "];
"1001310" -> "1001312"  [label="CFG: "];
"1001311" -> "1001310"  [label="AST: "];
"1001312" -> "1001310"  [label="AST: "];
"1001317" -> "1001310"  [label="CFG: "];
"1001310" -> "1001339"  [label="DDG: &sk->sk_wmem_alloc"];
"1001310" -> "1001339"  [label="DDG: atomic_add(copy, &sk->sk_wmem_alloc)"];
"1001310" -> "1000872"  [label="DDG: &sk->sk_wmem_alloc"];
"1000872" -> "1001310"  [label="DDG: &sk->sk_wmem_alloc"];
"1000872" -> "1000871"  [label="AST: "];
"1000872" -> "1000873"  [label="CFG: "];
"1000873" -> "1000872"  [label="AST: "];
"1000878" -> "1000872"  [label="CFG: "];
"1000872" -> "1001339"  [label="DDG: &sk->sk_wmem_alloc"];
"1000872" -> "1000871"  [label="DDG: &sk->sk_wmem_alloc"];
"1000871" -> "1000870"  [label="AST: "];
"1000871" -> "1000877"  [label="CFG: "];
"1000877" -> "1000871"  [label="AST: "];
"1000883" -> "1000871"  [label="CFG: "];
"1000896" -> "1000871"  [label="CFG: "];
"1000871" -> "1001339"  [label="DDG: atomic_read(&sk->sk_wmem_alloc)"];
"1000871" -> "1001339"  [label="DDG: atomic_read(&sk->sk_wmem_alloc) <=\n\t\t\t\t    2 * sk->sk_sndbuf"];
"1000871" -> "1001339"  [label="DDG: 2 * sk->sk_sndbuf"];
"1000877" -> "1000871"  [label="DDG: 2"];
"1000877" -> "1000871"  [label="DDG: sk->sk_sndbuf"];
"1001261" -> "1001262"  [label="CFG: "];
"1001262" -> "1001261"  [label="AST: "];
"1001267" -> "1001261"  [label="CFG: "];
"1001261" -> "1001339"  [label="DDG: frag->page"];
"1000699" -> "1000698"  [label="AST: "];
"1000699" -> "1000707"  [label="CFG: "];
"1000700" -> "1000699"  [label="AST: "];
"1000707" -> "1000699"  [label="AST: "];
"1000708" -> "1000699"  [label="CFG: "];
"1000711" -> "1000699"  [label="CFG: "];
"1000699" -> "1001339"  [label="DDG: (skb = skb_peek_tail(&sk->sk_write_queue)) == NULL"];
"1000699" -> "1001339"  [label="DDG: NULL"];
"1000700" -> "1000699"  [label="DDG: skb"];
"1000702" -> "1000699"  [label="DDG: &sk->sk_write_queue"];
}
