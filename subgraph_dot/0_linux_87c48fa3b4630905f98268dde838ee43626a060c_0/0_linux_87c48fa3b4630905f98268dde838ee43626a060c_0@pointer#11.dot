digraph "0_linux_87c48fa3b4630905f98268dde838ee43626a060c_0@pointer" {
"1000682" [label="(Call,ip6_ufo_append_data(sk, getfrag, from, length,\n \t\t\t\t\t\t  hh_len, fragheaderlen,\n\t\t\t\t\t\t  transhdrlen, mtu, flags, rt))"];
"1000622" [label="(Call,sock_tx_timestamp(sk, &tx_flags))"];
"1000136" [label="(Call,inet6_sk(sk))"];
"1000131" [label="(Call,inet_sk(sk))"];
"1000115" [label="(MethodParameterIn,struct sock *sk)"];
"1000116" [label="(MethodParameterIn,int getfrag(void *from, char *to,\n\tint offset, int len, int odd, struct sk_buff *skb))"];
"1000117" [label="(MethodParameterIn,void *from)"];
"1000635" [label="(Call,length > mtu)"];
"1000118" [label="(MethodParameterIn,int length)"];
"1000501" [label="(Call,length += exthdrlen)"];
"1000483" [label="(Call,exthdrlen = rt->dst.header_len + (opt ? opt->opt_flen : 0) -\n\t\t\t    rt->rt6i_nfheader_len)"];
"1000491" [label="(Call,(opt ? opt->opt_flen : 0) -\n\t\t\t    rt->rt6i_nfheader_len)"];
"1000122" [label="(MethodParameterIn,struct ipv6_txoptions *opt)"];
"1000582" [label="(Call,mtu <= sizeof(struct ipv6hdr) + IPV6_MAXPLEN)"];
"1000573" [label="(Call,mtu - fragheaderlen)"];
"1000541" [label="(Call,mtu = cork->fragsize)"];
"1000436" [label="(Call,np->frag_size < mtu)"];
"1000414" [label="(Call,mtu = np->pmtudisc == IPV6_PMTUDISC_PROBE ?\n\t\t      rt->dst.dev->mtu : dst_mtu(rt->dst.path))"];
"1000429" [label="(Call,dst_mtu(rt->dst.path))"];
"1000446" [label="(Call,mtu = np->frag_size)"];
"1000554" [label="(Call,fragheaderlen = sizeof(struct ipv6hdr) + rt->rt6i_nfheader_len +\n\t\t\t(opt ? opt->opt_nflen : 0))"];
"1000546" [label="(Call,hh_len = LL_RESERVED_SPACE(rt->dst.dev))"];
"1000548" [label="(Call,LL_RESERVED_SPACE(rt->dst.dev))"];
"1000577" [label="(Call,fragheaderlen - sizeof(struct frag_hdr))"];
"1000599" [label="(Call,IPV6_MAXPLEN - fragheaderlen)"];
"1000535" [label="(Call,transhdrlen = 0)"];
"1000119" [label="(MethodParameterIn,int transhdrlen)"];
"1000504" [label="(Call,transhdrlen += exthdrlen)"];
"1000160" [label="(Call,flags&MSG_PROBE)"];
"1000125" [label="(MethodParameterIn,unsigned int flags)"];
"1000509" [label="(Call,rt = (struct rt6_info *)cork->dst)"];
"1000511" [label="(Call,(struct rt6_info *)cork->dst)"];
"1000124" [label="(MethodParameterIn,struct rt6_info *rt)"];
"1000680" [label="(Call,err = ip6_ufo_append_data(sk, getfrag, from, length,\n \t\t\t\t\t\t  hh_len, fragheaderlen,\n\t\t\t\t\t\t  transhdrlen, mtu, flags, rt))"];
"1001337" [label="(Return,return err;)"];
"1001325" [label="(Call,cork->length -= length)"];
"1001331" [label="(Call,sock_net(sk))"];
"1001330" [label="(Call,IP6_INC_STATS(sock_net(sk), rt->rt6i_idev, IPSTATS_MIB_OUTDISCARDS))"];
"1000884" [label="(Call,sock_wmalloc(sk,\n\t\t\t\t\t\t\t   alloclen + hh_len, 1,\n\t\t\t\t\t\t\t   sk->sk_allocation))"];
"1000161" [label="(Identifier,flags)"];
"1000528" [label="(Call,opt = np->cork.opt)"];
"1000546" [label="(Call,hh_len = LL_RESERVED_SPACE(rt->dst.dev))"];
"1000504" [label="(Call,transhdrlen += exthdrlen)"];
"1000581" [label="(ControlStructure,if (mtu <= sizeof(struct ipv6hdr) + IPV6_MAXPLEN))"];
"1000641" [label="(Identifier,proto)"];
"1000444" [label="(Identifier,np)"];
"1000436" [label="(Call,np->frag_size < mtu)"];
"1000517" [label="(Identifier,fl6)"];
"1000683" [label="(Identifier,sk)"];
"1000510" [label="(Identifier,rt)"];
"1000857" [label="(Call,alloclen + hh_len)"];
"1000600" [label="(Identifier,IPV6_MAXPLEN)"];
"1001331" [label="(Call,sock_net(sk))"];
"1000637" [label="(Identifier,mtu)"];
"1001219" [label="(Call,err = -ENOMEM)"];
"1001258" [label="(Call,getfrag(from, page_address(frag->page)+frag->page_offset+frag->size, offset, copy, skb->len, skb))"];
"1001326" [label="(Call,cork->length)"];
"1000620" [label="(Call,err = sock_tx_timestamp(sk, &tx_flags))"];
"1001018" [label="(Call,getfrag(from, data + transhdrlen, offset, copy, fraggap, skb))"];
"1000536" [label="(Identifier,transhdrlen)"];
"1000591" [label="(Call,cork->length + length)"];
"1000811" [label="(Call,flags & MSG_MORE)"];
"1000636" [label="(Identifier,length)"];
"1000119" [label="(MethodParameterIn,int transhdrlen)"];
"1000511" [label="(Call,(struct rt6_info *)cork->dst)"];
"1001333" [label="(Call,rt->rt6i_idev)"];
"1000572" [label="(Call,(mtu - fragheaderlen) & ~7)"];
"1001087" [label="(Call,getfrag(from, skb_put(skb, copy),\n\t\t\t\t\t\toffset, copy, off, skb))"];
"1000451" [label="(Call,cork->fragsize = mtu)"];
"1000570" [label="(Identifier,maxfraglen)"];
"1000967" [label="(Call,skb_copy_and_csum_bits(\n\t\t\t\t\tskb_prev, maxfraglen,\n\t\t\t\t\tdata + transhdrlen, fraggap, 0))"];
"1000132" [label="(Identifier,sk)"];
"1001338" [label="(Identifier,err)"];
"1000603" [label="(Call,ipv6_local_error(sk, EMSGSIZE, fl6, mtu-exthdrlen))"];
"1000491" [label="(Call,(opt ? opt->opt_flen : 0) -\n\t\t\t    rt->rt6i_nfheader_len)"];
"1000573" [label="(Call,mtu - fragheaderlen)"];
"1000542" [label="(Identifier,mtu)"];
"1000429" [label="(Call,dst_mtu(rt->dst.path))"];
"1000922" [label="(Call,skb_reserve(skb, hh_len+sizeof(struct frag_hdr)))"];
"1000577" [label="(Call,fragheaderlen - sizeof(struct frag_hdr))"];
"1001325" [label="(Call,cork->length -= length)"];
"1000543" [label="(Call,cork->fragsize)"];
"1000137" [label="(Identifier,sk)"];
"1000485" [label="(Call,rt->dst.header_len + (opt ? opt->opt_flen : 0) -\n\t\t\t    rt->rt6i_nfheader_len)"];
"1001251" [label="(Call,err = -EMSGSIZE)"];
"1000448" [label="(Call,np->frag_size)"];
"1000656" [label="(Call,ipv6_local_rxpmtu(sk, fl6, mtu-exthdrlen))"];
"1000590" [label="(Call,cork->length + length > sizeof(struct ipv6hdr) + IPV6_MAXPLEN - fragheaderlen)"];
"1000555" [label="(Identifier,fragheaderlen)"];
"1000159" [label="(ControlStructure,if (flags&MSG_PROBE))"];
"1000686" [label="(Identifier,length)"];
"1000498" [label="(Call,rt->rt6i_nfheader_len)"];
"1000537" [label="(Literal,0)"];
"1000583" [label="(Identifier,mtu)"];
"1001020" [label="(Call,data + transhdrlen)"];
"1000453" [label="(Identifier,cork)"];
"1000414" [label="(Call,mtu = np->pmtudisc == IPV6_PMTUDISC_PROBE ?\n\t\t      rt->dst.dev->mtu : dst_mtu(rt->dst.path))"];
"1000710" [label="(Call,length > 0)"];
"1000623" [label="(Identifier,sk)"];
"1000430" [label="(Call,rt->dst.path)"];
"1000127" [label="(Block,)"];
"1001044" [label="(Call,transhdrlen = 0)"];
"1000601" [label="(Identifier,fragheaderlen)"];
"1000584" [label="(Call,sizeof(struct ipv6hdr) + IPV6_MAXPLEN)"];
"1000435" [label="(ControlStructure,if (np->frag_size < mtu))"];
"1000691" [label="(Identifier,flags)"];
"1001064" [label="(Call,copy = length)"];
"1000440" [label="(Identifier,mtu)"];
"1000688" [label="(Identifier,fragheaderlen)"];
"1001004" [label="(Call,err = -EINVAL)"];
"1000996" [label="(Call,transhdrlen - fraggap)"];
"1000415" [label="(Identifier,mtu)"];
"1000622" [label="(Call,sock_tx_timestamp(sk, &tx_flags))"];
"1000593" [label="(Identifier,cork)"];
"1000124" [label="(MethodParameterIn,struct rt6_info *rt)"];
"1000886" [label="(Call,alloclen + hh_len)"];
"1000579" [label="(Call,sizeof(struct frag_hdr))"];
"1000541" [label="(Call,mtu = cork->fragsize)"];
"1000690" [label="(Identifier,mtu)"];
"1000860" [label="(Call,flags & MSG_DONTWAIT)"];
"1000548" [label="(Call,LL_RESERVED_SPACE(rt->dst.dev))"];
"1001334" [label="(Identifier,rt)"];
"1000563" [label="(Call,opt ? opt->opt_nflen : 0)"];
"1000501" [label="(Call,length += exthdrlen)"];
"1000582" [label="(Call,mtu <= sizeof(struct ipv6hdr) + IPV6_MAXPLEN)"];
"1000416" [label="(Call,np->pmtudisc == IPV6_PMTUDISC_PROBE ?\n\t\t      rt->dst.dev->mtu : dst_mtu(rt->dst.path))"];
"1000659" [label="(Call,mtu-exthdrlen)"];
"1000679" [label="(Block,)"];
"1000166" [label="(Identifier,cork)"];
"1000492" [label="(Call,opt ? opt->opt_flen : 0)"];
"1000634" [label="(ControlStructure,if (length > mtu))"];
"1000689" [label="(Identifier,transhdrlen)"];
"1000125" [label="(MethodParameterIn,unsigned int flags)"];
"1000539" [label="(Identifier,exthdrlen)"];
"1000442" [label="(ControlStructure,if (np->frag_size))"];
"1000160" [label="(Call,flags&MSG_PROBE)"];
"1001039" [label="(Call,length -= datalen - fraggap)"];
"1000685" [label="(Identifier,from)"];
"1000599" [label="(Call,IPV6_MAXPLEN - fragheaderlen)"];
"1000774" [label="(Call,datalen = length + fraggap)"];
"1000635" [label="(Call,length > mtu)"];
"1001061" [label="(Call,copy > length)"];
"1001329" [label="(Identifier,length)"];
"1000122" [label="(MethodParameterIn,struct ipv6_txoptions *opt)"];
"1000468" [label="(Call,cork->length = 0)"];
"1000179" [label="(Block,)"];
"1000782" [label="(Call,(cork->length <= mtu && !(cork->flags & IPCORK_ALLFRAG) ? mtu : maxfraglen) - fragheaderlen)"];
"1000629" [label="(Call,cork->length += length)"];
"1000513" [label="(Call,cork->dst)"];
"1000834" [label="(Call,datalen == length + fraggap)"];
"1000616" [label="(Identifier,sk)"];
"1000129" [label="(Call,*inet = inet_sk(sk))"];
"1000437" [label="(Call,np->frag_size)"];
"1000162" [label="(Identifier,MSG_PROBE)"];
"1000607" [label="(Call,mtu-exthdrlen)"];
"1000596" [label="(Call,sizeof(struct ipv6hdr) + IPV6_MAXPLEN - fragheaderlen)"];
"1000117" [label="(MethodParameterIn,void *from)"];
"1000578" [label="(Identifier,fragheaderlen)"];
"1000694" [label="(Identifier,err)"];
"1001330" [label="(Call,IP6_INC_STATS(sock_net(sk), rt->rt6i_idev, IPSTATS_MIB_OUTDISCARDS))"];
"1000484" [label="(Identifier,exthdrlen)"];
"1000508" [label="(Block,)"];
"1000682" [label="(Call,ip6_ufo_append_data(sk, getfrag, from, length,\n \t\t\t\t\t\t  hh_len, fragheaderlen,\n\t\t\t\t\t\t  transhdrlen, mtu, flags, rt))"];
"1001339" [label="(MethodReturn,int)"];
"1000115" [label="(MethodParameterIn,struct sock *sk)"];
"1001319" [label="(Call,length -= copy)"];
"1000575" [label="(Identifier,fragheaderlen)"];
"1000624" [label="(Call,&tx_flags)"];
"1000692" [label="(Identifier,rt)"];
"1000547" [label="(Identifier,hh_len)"];
"1000576" [label="(Identifier,~7)"];
"1001101" [label="(Call,err = -EFAULT)"];
"1000438" [label="(Identifier,np)"];
"1000164" [label="(Literal,0)"];
"1000970" [label="(Call,data + transhdrlen)"];
"1001029" [label="(Call,err = -EFAULT)"];
"1000556" [label="(Call,sizeof(struct ipv6hdr) + rt->rt6i_nfheader_len +\n\t\t\t(opt ? opt->opt_nflen : 0))"];
"1000945" [label="(Call,skb_set_network_header(skb, exthdrlen))"];
"1000535" [label="(Call,transhdrlen = 0)"];
"1000701" [label="(Identifier,skb)"];
"1000924" [label="(Call,hh_len+sizeof(struct frag_hdr))"];
"1000681" [label="(Identifier,err)"];
"1000554" [label="(Call,fragheaderlen = sizeof(struct ipv6hdr) + rt->rt6i_nfheader_len +\n\t\t\t(opt ? opt->opt_nflen : 0))"];
"1000506" [label="(Identifier,exthdrlen)"];
"1001337" [label="(Return,return err;)"];
"1000559" [label="(Call,rt->rt6i_nfheader_len +\n\t\t\t(opt ? opt->opt_nflen : 0))"];
"1001332" [label="(Identifier,sk)"];
"1000684" [label="(Identifier,getfrag)"];
"1000446" [label="(Call,mtu = np->frag_size)"];
"1000776" [label="(Call,length + fraggap)"];
"1000483" [label="(Call,exthdrlen = rt->dst.header_len + (opt ? opt->opt_flen : 0) -\n\t\t\t    rt->rt6i_nfheader_len)"];
"1000136" [label="(Call,inet6_sk(sk))"];
"1000855" [label="(Call,sock_alloc_send_skb(sk,\n\t\t\t\t\t\talloclen + hh_len,\n\t\t\t\t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000503" [label="(Identifier,exthdrlen)"];
"1000719" [label="(Call,cork->length <= mtu)"];
"1000549" [label="(Call,rt->dst.dev)"];
"1000505" [label="(Identifier,transhdrlen)"];
"1000457" [label="(Call,dst_allfrag(rt->dst.path))"];
"1000736" [label="(Call,copy < length)"];
"1000680" [label="(Call,err = ip6_ufo_append_data(sk, getfrag, from, length,\n \t\t\t\t\t\t  hh_len, fragheaderlen,\n\t\t\t\t\t\t  transhdrlen, mtu, flags, rt))"];
"1000836" [label="(Call,length + fraggap)"];
"1001280" [label="(Call,err = -EFAULT)"];
"1000785" [label="(Call,cork->length <= mtu)"];
"1001336" [label="(Identifier,IPSTATS_MIB_OUTDISCARDS)"];
"1001170" [label="(Call,err = -EMSGSIZE)"];
"1000502" [label="(Identifier,length)"];
"1000898" [label="(Call,err = -ENOBUFS)"];
"1000447" [label="(Identifier,mtu)"];
"1000509" [label="(Call,rt = (struct rt6_info *)cork->dst)"];
"1000134" [label="(Call,*np = inet6_sk(sk))"];
"1000116" [label="(MethodParameterIn,int getfrag(void *from, char *to,\n\tint offset, int len, int odd, struct sk_buff *skb))"];
"1000687" [label="(Identifier,hh_len)"];
"1000569" [label="(Call,maxfraglen = ((mtu - fragheaderlen) & ~7) + fragheaderlen - sizeof(struct frag_hdr))"];
"1000571" [label="(Call,((mtu - fragheaderlen) & ~7) + fragheaderlen - sizeof(struct frag_hdr))"];
"1000118" [label="(MethodParameterIn,int length)"];
"1000574" [label="(Identifier,mtu)"];
"1000131" [label="(Call,inet_sk(sk))"];
"1000682" -> "1000680"  [label="AST: "];
"1000682" -> "1000692"  [label="CFG: "];
"1000683" -> "1000682"  [label="AST: "];
"1000684" -> "1000682"  [label="AST: "];
"1000685" -> "1000682"  [label="AST: "];
"1000686" -> "1000682"  [label="AST: "];
"1000687" -> "1000682"  [label="AST: "];
"1000688" -> "1000682"  [label="AST: "];
"1000689" -> "1000682"  [label="AST: "];
"1000690" -> "1000682"  [label="AST: "];
"1000691" -> "1000682"  [label="AST: "];
"1000692" -> "1000682"  [label="AST: "];
"1000680" -> "1000682"  [label="CFG: "];
"1000682" -> "1001339"  [label="DDG: getfrag"];
"1000682" -> "1001339"  [label="DDG: transhdrlen"];
"1000682" -> "1001339"  [label="DDG: mtu"];
"1000682" -> "1001339"  [label="DDG: sk"];
"1000682" -> "1001339"  [label="DDG: from"];
"1000682" -> "1001339"  [label="DDG: hh_len"];
"1000682" -> "1001339"  [label="DDG: length"];
"1000682" -> "1001339"  [label="DDG: fragheaderlen"];
"1000682" -> "1001339"  [label="DDG: rt"];
"1000682" -> "1001339"  [label="DDG: flags"];
"1000682" -> "1000680"  [label="DDG: getfrag"];
"1000682" -> "1000680"  [label="DDG: length"];
"1000682" -> "1000680"  [label="DDG: transhdrlen"];
"1000682" -> "1000680"  [label="DDG: from"];
"1000682" -> "1000680"  [label="DDG: mtu"];
"1000682" -> "1000680"  [label="DDG: fragheaderlen"];
"1000682" -> "1000680"  [label="DDG: flags"];
"1000682" -> "1000680"  [label="DDG: hh_len"];
"1000682" -> "1000680"  [label="DDG: rt"];
"1000682" -> "1000680"  [label="DDG: sk"];
"1000622" -> "1000682"  [label="DDG: sk"];
"1000136" -> "1000682"  [label="DDG: sk"];
"1000115" -> "1000682"  [label="DDG: sk"];
"1000116" -> "1000682"  [label="DDG: getfrag"];
"1000117" -> "1000682"  [label="DDG: from"];
"1000635" -> "1000682"  [label="DDG: length"];
"1000635" -> "1000682"  [label="DDG: mtu"];
"1000118" -> "1000682"  [label="DDG: length"];
"1000546" -> "1000682"  [label="DDG: hh_len"];
"1000577" -> "1000682"  [label="DDG: fragheaderlen"];
"1000599" -> "1000682"  [label="DDG: fragheaderlen"];
"1000535" -> "1000682"  [label="DDG: transhdrlen"];
"1000504" -> "1000682"  [label="DDG: transhdrlen"];
"1000119" -> "1000682"  [label="DDG: transhdrlen"];
"1000160" -> "1000682"  [label="DDG: flags"];
"1000125" -> "1000682"  [label="DDG: flags"];
"1000509" -> "1000682"  [label="DDG: rt"];
"1000124" -> "1000682"  [label="DDG: rt"];
"1000682" -> "1001325"  [label="DDG: length"];
"1000682" -> "1001331"  [label="DDG: sk"];
"1000622" -> "1000620"  [label="AST: "];
"1000622" -> "1000624"  [label="CFG: "];
"1000623" -> "1000622"  [label="AST: "];
"1000624" -> "1000622"  [label="AST: "];
"1000620" -> "1000622"  [label="CFG: "];
"1000622" -> "1001339"  [label="DDG: sk"];
"1000622" -> "1001339"  [label="DDG: &tx_flags"];
"1000622" -> "1000620"  [label="DDG: sk"];
"1000622" -> "1000620"  [label="DDG: &tx_flags"];
"1000136" -> "1000622"  [label="DDG: sk"];
"1000115" -> "1000622"  [label="DDG: sk"];
"1000622" -> "1000656"  [label="DDG: sk"];
"1000622" -> "1000855"  [label="DDG: sk"];
"1000622" -> "1000884"  [label="DDG: sk"];
"1000622" -> "1001331"  [label="DDG: sk"];
"1000136" -> "1000134"  [label="AST: "];
"1000136" -> "1000137"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000136" -> "1001339"  [label="DDG: sk"];
"1000136" -> "1000134"  [label="DDG: sk"];
"1000131" -> "1000136"  [label="DDG: sk"];
"1000115" -> "1000136"  [label="DDG: sk"];
"1000136" -> "1000603"  [label="DDG: sk"];
"1000136" -> "1000656"  [label="DDG: sk"];
"1000136" -> "1000855"  [label="DDG: sk"];
"1000136" -> "1000884"  [label="DDG: sk"];
"1000136" -> "1001331"  [label="DDG: sk"];
"1000131" -> "1000129"  [label="AST: "];
"1000131" -> "1000132"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000131" -> "1000129"  [label="DDG: sk"];
"1000115" -> "1000131"  [label="DDG: sk"];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1001339"  [label="DDG: sk"];
"1000115" -> "1000603"  [label="DDG: sk"];
"1000115" -> "1000656"  [label="DDG: sk"];
"1000115" -> "1000855"  [label="DDG: sk"];
"1000115" -> "1000884"  [label="DDG: sk"];
"1000115" -> "1001331"  [label="DDG: sk"];
"1000116" -> "1000114"  [label="AST: "];
"1000116" -> "1001339"  [label="DDG: getfrag"];
"1000117" -> "1000114"  [label="AST: "];
"1000117" -> "1001339"  [label="DDG: from"];
"1000117" -> "1001018"  [label="DDG: from"];
"1000117" -> "1001087"  [label="DDG: from"];
"1000117" -> "1001258"  [label="DDG: from"];
"1000635" -> "1000634"  [label="AST: "];
"1000635" -> "1000637"  [label="CFG: "];
"1000636" -> "1000635"  [label="AST: "];
"1000637" -> "1000635"  [label="AST: "];
"1000641" -> "1000635"  [label="CFG: "];
"1000701" -> "1000635"  [label="CFG: "];
"1000635" -> "1001339"  [label="DDG: mtu"];
"1000635" -> "1001339"  [label="DDG: length > mtu"];
"1000635" -> "1001339"  [label="DDG: length"];
"1000118" -> "1000635"  [label="DDG: length"];
"1000501" -> "1000635"  [label="DDG: length"];
"1000582" -> "1000635"  [label="DDG: mtu"];
"1000635" -> "1000659"  [label="DDG: mtu"];
"1000635" -> "1000710"  [label="DDG: length"];
"1000635" -> "1000719"  [label="DDG: mtu"];
"1000635" -> "1000774"  [label="DDG: length"];
"1000635" -> "1000776"  [label="DDG: length"];
"1000635" -> "1000785"  [label="DDG: mtu"];
"1000635" -> "1000834"  [label="DDG: length"];
"1000635" -> "1000836"  [label="DDG: length"];
"1000635" -> "1001039"  [label="DDG: length"];
"1000635" -> "1001325"  [label="DDG: length"];
"1000118" -> "1000114"  [label="AST: "];
"1000118" -> "1001339"  [label="DDG: length"];
"1000118" -> "1000501"  [label="DDG: length"];
"1000118" -> "1000590"  [label="DDG: length"];
"1000118" -> "1000591"  [label="DDG: length"];
"1000118" -> "1000629"  [label="DDG: length"];
"1000118" -> "1000710"  [label="DDG: length"];
"1000118" -> "1000736"  [label="DDG: length"];
"1000118" -> "1000774"  [label="DDG: length"];
"1000118" -> "1000776"  [label="DDG: length"];
"1000118" -> "1000834"  [label="DDG: length"];
"1000118" -> "1000836"  [label="DDG: length"];
"1000118" -> "1001039"  [label="DDG: length"];
"1000118" -> "1001061"  [label="DDG: length"];
"1000118" -> "1001064"  [label="DDG: length"];
"1000118" -> "1001319"  [label="DDG: length"];
"1000118" -> "1001325"  [label="DDG: length"];
"1000501" -> "1000179"  [label="AST: "];
"1000501" -> "1000503"  [label="CFG: "];
"1000502" -> "1000501"  [label="AST: "];
"1000503" -> "1000501"  [label="AST: "];
"1000505" -> "1000501"  [label="CFG: "];
"1000483" -> "1000501"  [label="DDG: exthdrlen"];
"1000501" -> "1000590"  [label="DDG: length"];
"1000501" -> "1000591"  [label="DDG: length"];
"1000501" -> "1000629"  [label="DDG: length"];
"1000501" -> "1001325"  [label="DDG: length"];
"1000483" -> "1000179"  [label="AST: "];
"1000483" -> "1000485"  [label="CFG: "];
"1000484" -> "1000483"  [label="AST: "];
"1000485" -> "1000483"  [label="AST: "];
"1000502" -> "1000483"  [label="CFG: "];
"1000483" -> "1001339"  [label="DDG: rt->dst.header_len + (opt ? opt->opt_flen : 0) -\n\t\t\t    rt->rt6i_nfheader_len"];
"1000491" -> "1000483"  [label="DDG: opt ? opt->opt_flen : 0"];
"1000491" -> "1000483"  [label="DDG: rt->rt6i_nfheader_len"];
"1000483" -> "1000504"  [label="DDG: exthdrlen"];
"1000483" -> "1000607"  [label="DDG: exthdrlen"];
"1000483" -> "1000659"  [label="DDG: exthdrlen"];
"1000483" -> "1000945"  [label="DDG: exthdrlen"];
"1000491" -> "1000485"  [label="AST: "];
"1000491" -> "1000498"  [label="CFG: "];
"1000492" -> "1000491"  [label="AST: "];
"1000498" -> "1000491"  [label="AST: "];
"1000485" -> "1000491"  [label="CFG: "];
"1000491" -> "1001339"  [label="DDG: opt ? opt->opt_flen : 0"];
"1000491" -> "1000485"  [label="DDG: opt ? opt->opt_flen : 0"];
"1000491" -> "1000485"  [label="DDG: rt->rt6i_nfheader_len"];
"1000122" -> "1000491"  [label="DDG: opt"];
"1000491" -> "1000554"  [label="DDG: rt->rt6i_nfheader_len"];
"1000491" -> "1000556"  [label="DDG: rt->rt6i_nfheader_len"];
"1000491" -> "1000559"  [label="DDG: rt->rt6i_nfheader_len"];
"1000122" -> "1000114"  [label="AST: "];
"1000122" -> "1001339"  [label="DDG: opt"];
"1000122" -> "1000492"  [label="DDG: opt"];
"1000122" -> "1000528"  [label="DDG: opt"];
"1000122" -> "1000554"  [label="DDG: opt"];
"1000122" -> "1000556"  [label="DDG: opt"];
"1000122" -> "1000559"  [label="DDG: opt"];
"1000122" -> "1000563"  [label="DDG: opt"];
"1000582" -> "1000581"  [label="AST: "];
"1000582" -> "1000584"  [label="CFG: "];
"1000583" -> "1000582"  [label="AST: "];
"1000584" -> "1000582"  [label="AST: "];
"1000593" -> "1000582"  [label="CFG: "];
"1000616" -> "1000582"  [label="CFG: "];
"1000582" -> "1001339"  [label="DDG: mtu"];
"1000582" -> "1001339"  [label="DDG: sizeof(struct ipv6hdr) + IPV6_MAXPLEN"];
"1000582" -> "1001339"  [label="DDG: mtu <= sizeof(struct ipv6hdr) + IPV6_MAXPLEN"];
"1000573" -> "1000582"  [label="DDG: mtu"];
"1000582" -> "1000607"  [label="DDG: mtu"];
"1000573" -> "1000572"  [label="AST: "];
"1000573" -> "1000575"  [label="CFG: "];
"1000574" -> "1000573"  [label="AST: "];
"1000575" -> "1000573"  [label="AST: "];
"1000576" -> "1000573"  [label="CFG: "];
"1000573" -> "1000572"  [label="DDG: mtu"];
"1000573" -> "1000572"  [label="DDG: fragheaderlen"];
"1000541" -> "1000573"  [label="DDG: mtu"];
"1000436" -> "1000573"  [label="DDG: mtu"];
"1000446" -> "1000573"  [label="DDG: mtu"];
"1000554" -> "1000573"  [label="DDG: fragheaderlen"];
"1000573" -> "1000577"  [label="DDG: fragheaderlen"];
"1000541" -> "1000508"  [label="AST: "];
"1000541" -> "1000543"  [label="CFG: "];
"1000542" -> "1000541"  [label="AST: "];
"1000543" -> "1000541"  [label="AST: "];
"1000547" -> "1000541"  [label="CFG: "];
"1000541" -> "1001339"  [label="DDG: cork->fragsize"];
"1000436" -> "1000435"  [label="AST: "];
"1000436" -> "1000440"  [label="CFG: "];
"1000437" -> "1000436"  [label="AST: "];
"1000440" -> "1000436"  [label="AST: "];
"1000444" -> "1000436"  [label="CFG: "];
"1000453" -> "1000436"  [label="CFG: "];
"1000436" -> "1001339"  [label="DDG: np->frag_size < mtu"];
"1000436" -> "1001339"  [label="DDG: np->frag_size"];
"1000414" -> "1000436"  [label="DDG: mtu"];
"1000436" -> "1000446"  [label="DDG: np->frag_size"];
"1000436" -> "1000451"  [label="DDG: mtu"];
"1000414" -> "1000179"  [label="AST: "];
"1000414" -> "1000416"  [label="CFG: "];
"1000415" -> "1000414"  [label="AST: "];
"1000416" -> "1000414"  [label="AST: "];
"1000438" -> "1000414"  [label="CFG: "];
"1000414" -> "1001339"  [label="DDG: np->pmtudisc == IPV6_PMTUDISC_PROBE ?\n\t\t      rt->dst.dev->mtu : dst_mtu(rt->dst.path)"];
"1000429" -> "1000414"  [label="DDG: rt->dst.path"];
"1000429" -> "1000416"  [label="AST: "];
"1000429" -> "1000430"  [label="CFG: "];
"1000430" -> "1000429"  [label="AST: "];
"1000416" -> "1000429"  [label="CFG: "];
"1000429" -> "1000416"  [label="DDG: rt->dst.path"];
"1000429" -> "1000457"  [label="DDG: rt->dst.path"];
"1000446" -> "1000442"  [label="AST: "];
"1000446" -> "1000448"  [label="CFG: "];
"1000447" -> "1000446"  [label="AST: "];
"1000448" -> "1000446"  [label="AST: "];
"1000453" -> "1000446"  [label="CFG: "];
"1000446" -> "1001339"  [label="DDG: np->frag_size"];
"1000446" -> "1000451"  [label="DDG: mtu"];
"1000554" -> "1000127"  [label="AST: "];
"1000554" -> "1000556"  [label="CFG: "];
"1000555" -> "1000554"  [label="AST: "];
"1000556" -> "1000554"  [label="AST: "];
"1000570" -> "1000554"  [label="CFG: "];
"1000554" -> "1001339"  [label="DDG: sizeof(struct ipv6hdr) + rt->rt6i_nfheader_len +\n\t\t\t(opt ? opt->opt_nflen : 0)"];
"1000546" -> "1000127"  [label="AST: "];
"1000546" -> "1000548"  [label="CFG: "];
"1000547" -> "1000546"  [label="AST: "];
"1000548" -> "1000546"  [label="AST: "];
"1000555" -> "1000546"  [label="CFG: "];
"1000546" -> "1001339"  [label="DDG: LL_RESERVED_SPACE(rt->dst.dev)"];
"1000546" -> "1001339"  [label="DDG: hh_len"];
"1000548" -> "1000546"  [label="DDG: rt->dst.dev"];
"1000546" -> "1000855"  [label="DDG: hh_len"];
"1000546" -> "1000857"  [label="DDG: hh_len"];
"1000546" -> "1000884"  [label="DDG: hh_len"];
"1000546" -> "1000886"  [label="DDG: hh_len"];
"1000546" -> "1000922"  [label="DDG: hh_len"];
"1000546" -> "1000924"  [label="DDG: hh_len"];
"1000548" -> "1000549"  [label="CFG: "];
"1000549" -> "1000548"  [label="AST: "];
"1000548" -> "1001339"  [label="DDG: rt->dst.dev"];
"1000577" -> "1000571"  [label="AST: "];
"1000577" -> "1000579"  [label="CFG: "];
"1000578" -> "1000577"  [label="AST: "];
"1000579" -> "1000577"  [label="AST: "];
"1000571" -> "1000577"  [label="CFG: "];
"1000577" -> "1001339"  [label="DDG: fragheaderlen"];
"1000577" -> "1000569"  [label="DDG: fragheaderlen"];
"1000577" -> "1000571"  [label="DDG: fragheaderlen"];
"1000577" -> "1000599"  [label="DDG: fragheaderlen"];
"1000577" -> "1000782"  [label="DDG: fragheaderlen"];
"1000599" -> "1000596"  [label="AST: "];
"1000599" -> "1000601"  [label="CFG: "];
"1000600" -> "1000599"  [label="AST: "];
"1000601" -> "1000599"  [label="AST: "];
"1000596" -> "1000599"  [label="CFG: "];
"1000599" -> "1001339"  [label="DDG: IPV6_MAXPLEN"];
"1000599" -> "1001339"  [label="DDG: fragheaderlen"];
"1000599" -> "1000590"  [label="DDG: IPV6_MAXPLEN"];
"1000599" -> "1000590"  [label="DDG: fragheaderlen"];
"1000599" -> "1000596"  [label="DDG: IPV6_MAXPLEN"];
"1000599" -> "1000596"  [label="DDG: fragheaderlen"];
"1000599" -> "1000782"  [label="DDG: fragheaderlen"];
"1000535" -> "1000508"  [label="AST: "];
"1000535" -> "1000537"  [label="CFG: "];
"1000536" -> "1000535"  [label="AST: "];
"1000537" -> "1000535"  [label="AST: "];
"1000539" -> "1000535"  [label="CFG: "];
"1000535" -> "1001339"  [label="DDG: transhdrlen"];
"1000119" -> "1000535"  [label="DDG: transhdrlen"];
"1000535" -> "1000967"  [label="DDG: transhdrlen"];
"1000535" -> "1000970"  [label="DDG: transhdrlen"];
"1000535" -> "1000996"  [label="DDG: transhdrlen"];
"1000119" -> "1000114"  [label="AST: "];
"1000119" -> "1001339"  [label="DDG: transhdrlen"];
"1000119" -> "1000504"  [label="DDG: transhdrlen"];
"1000119" -> "1000967"  [label="DDG: transhdrlen"];
"1000119" -> "1000970"  [label="DDG: transhdrlen"];
"1000119" -> "1000996"  [label="DDG: transhdrlen"];
"1000119" -> "1001018"  [label="DDG: transhdrlen"];
"1000119" -> "1001020"  [label="DDG: transhdrlen"];
"1000119" -> "1001044"  [label="DDG: transhdrlen"];
"1000504" -> "1000179"  [label="AST: "];
"1000504" -> "1000506"  [label="CFG: "];
"1000505" -> "1000504"  [label="AST: "];
"1000506" -> "1000504"  [label="AST: "];
"1000547" -> "1000504"  [label="CFG: "];
"1000504" -> "1001339"  [label="DDG: exthdrlen"];
"1000504" -> "1001339"  [label="DDG: transhdrlen"];
"1000504" -> "1000967"  [label="DDG: transhdrlen"];
"1000504" -> "1000970"  [label="DDG: transhdrlen"];
"1000504" -> "1000996"  [label="DDG: transhdrlen"];
"1000160" -> "1000159"  [label="AST: "];
"1000160" -> "1000162"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000162" -> "1000160"  [label="AST: "];
"1000164" -> "1000160"  [label="CFG: "];
"1000166" -> "1000160"  [label="CFG: "];
"1000160" -> "1001339"  [label="DDG: flags&MSG_PROBE"];
"1000160" -> "1001339"  [label="DDG: MSG_PROBE"];
"1000160" -> "1001339"  [label="DDG: flags"];
"1000125" -> "1000160"  [label="DDG: flags"];
"1000160" -> "1000811"  [label="DDG: flags"];
"1000125" -> "1000114"  [label="AST: "];
"1000125" -> "1001339"  [label="DDG: flags"];
"1000125" -> "1000811"  [label="DDG: flags"];
"1000125" -> "1000860"  [label="DDG: flags"];
"1000509" -> "1000508"  [label="AST: "];
"1000509" -> "1000511"  [label="CFG: "];
"1000510" -> "1000509"  [label="AST: "];
"1000511" -> "1000509"  [label="AST: "];
"1000517" -> "1000509"  [label="CFG: "];
"1000509" -> "1001339"  [label="DDG: (struct rt6_info *)cork->dst"];
"1000509" -> "1001339"  [label="DDG: rt"];
"1000511" -> "1000509"  [label="DDG: cork->dst"];
"1000124" -> "1000509"  [label="DDG: rt"];
"1000511" -> "1000513"  [label="CFG: "];
"1000512" -> "1000511"  [label="AST: "];
"1000513" -> "1000511"  [label="AST: "];
"1000511" -> "1001339"  [label="DDG: cork->dst"];
"1000124" -> "1000114"  [label="AST: "];
"1000124" -> "1001339"  [label="DDG: rt"];
"1000680" -> "1000679"  [label="AST: "];
"1000681" -> "1000680"  [label="AST: "];
"1000694" -> "1000680"  [label="CFG: "];
"1000680" -> "1001339"  [label="DDG: err"];
"1000680" -> "1001339"  [label="DDG: ip6_ufo_append_data(sk, getfrag, from, length,\n \t\t\t\t\t\t  hh_len, fragheaderlen,\n\t\t\t\t\t\t  transhdrlen, mtu, flags, rt)"];
"1000680" -> "1001337"  [label="DDG: err"];
"1001337" -> "1000127"  [label="AST: "];
"1001337" -> "1001338"  [label="CFG: "];
"1001338" -> "1001337"  [label="AST: "];
"1001339" -> "1001337"  [label="CFG: "];
"1001337" -> "1001339"  [label="DDG: <RET>"];
"1001338" -> "1001337"  [label="DDG: err"];
"1000898" -> "1001337"  [label="DDG: err"];
"1000620" -> "1001337"  [label="DDG: err"];
"1001219" -> "1001337"  [label="DDG: err"];
"1001029" -> "1001337"  [label="DDG: err"];
"1001251" -> "1001337"  [label="DDG: err"];
"1001170" -> "1001337"  [label="DDG: err"];
"1001280" -> "1001337"  [label="DDG: err"];
"1001004" -> "1001337"  [label="DDG: err"];
"1001101" -> "1001337"  [label="DDG: err"];
"1001325" -> "1000127"  [label="AST: "];
"1001325" -> "1001329"  [label="CFG: "];
"1001326" -> "1001325"  [label="AST: "];
"1001329" -> "1001325"  [label="AST: "];
"1001332" -> "1001325"  [label="CFG: "];
"1001325" -> "1001339"  [label="DDG: length"];
"1001325" -> "1001339"  [label="DDG: cork->length"];
"1001061" -> "1001325"  [label="DDG: length"];
"1000736" -> "1001325"  [label="DDG: length"];
"1000629" -> "1001325"  [label="DDG: cork->length"];
"1000785" -> "1001325"  [label="DDG: cork->length"];
"1000468" -> "1001325"  [label="DDG: cork->length"];
"1000719" -> "1001325"  [label="DDG: cork->length"];
"1001331" -> "1001330"  [label="AST: "];
"1001331" -> "1001332"  [label="CFG: "];
"1001332" -> "1001331"  [label="AST: "];
"1001334" -> "1001331"  [label="CFG: "];
"1001331" -> "1001339"  [label="DDG: sk"];
"1001331" -> "1001330"  [label="DDG: sk"];
"1000884" -> "1001331"  [label="DDG: sk"];
"1000855" -> "1001331"  [label="DDG: sk"];
"1001330" -> "1000127"  [label="AST: "];
"1001330" -> "1001336"  [label="CFG: "];
"1001333" -> "1001330"  [label="AST: "];
"1001336" -> "1001330"  [label="AST: "];
"1001338" -> "1001330"  [label="CFG: "];
"1001330" -> "1001339"  [label="DDG: rt->rt6i_idev"];
"1001330" -> "1001339"  [label="DDG: IP6_INC_STATS(sock_net(sk), rt->rt6i_idev, IPSTATS_MIB_OUTDISCARDS)"];
"1001330" -> "1001339"  [label="DDG: IPSTATS_MIB_OUTDISCARDS"];
"1001330" -> "1001339"  [label="DDG: sock_net(sk)"];
}
