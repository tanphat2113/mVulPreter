digraph "0_lxc_81f466d05f2a89cb4f122ef7f593ff3f279b165c_1@pointer" {
"1000213" [label="(Call,lxc_container_new(name, lxcpath))"];
"1000187" [label="(Call,get_personality(name, lxcpath))"];
"1000156" [label="(Call,lxc_cmd_get_init_pid(name, lxcpath))"];
"1000128" [label="(MethodParameterIn,const char* name)"];
"1000129" [label="(MethodParameterIn,const char* lxcpath)"];
"1000209" [label="(Call,init_ctx->container = lxc_container_new(name, lxcpath))"];
"1000217" [label="(Call,!init_ctx->container)"];
"1000226" [label="(Call,fetch_seccomp(init_ctx->container, options))"];
"1000225" [label="(Call,!fetch_seccomp(init_ctx->container, options))"];
"1000235" [label="(Call,no_new_privs(init_ctx->container, options))"];
"1000234" [label="(Call,!no_new_privs(init_ctx->container, options))"];
"1000259" [label="(Call,lxc_cmd_get_clone_flags(name, lxcpath))"];
"1000255" [label="(Call,options->namespaces = lxc_cmd_get_clone_flags(name, lxcpath))"];
"1000263" [label="(Call,options->namespaces == -1)"];
"1000568" [label="(Call,options->namespaces |= CLONE_NEWCGROUP)"];
"1000597" [label="(Call,lxc_attach_to_ns(init_pid, options->namespaces))"];
"1000595" [label="(Call,ret = lxc_attach_to_ns(init_pid, options->namespaces))"];
"1000603" [label="(Call,ret < 0)"];
"1000341" [label="(Call,cgroup_attach(name, lxcpath, pid))"];
"1000340" [label="(Call,!cgroup_attach(name, lxcpath, pid))"];
"1000405" [label="(Call,wait_for_pid(pid))"];
"1000403" [label="(Call,ret = wait_for_pid(pid))"];
"1000408" [label="(Call,ret < 0)"];
"1000572" [label="(Identifier,CLONE_NEWCGROUP)"];
"1000243" [label="(Identifier,cwd)"];
"1000128" [label="(MethodParameterIn,const char* name)"];
"1000232" [label="(Literal,\"Failed to get seccomp policy\")"];
"1000213" [label="(Call,lxc_container_new(name, lxcpath))"];
"1000210" [label="(Call,init_ctx->container)"];
"1000695" [label="(MethodReturn,int)"];
"1000219" [label="(Identifier,init_ctx)"];
"1000156" [label="(Call,lxc_cmd_get_init_pid(name, lxcpath))"];
"1000271" [label="(Literal,\"failed to automatically determine the \"\n\t\t\t      \"namespaces which the container unshared\")"];
"1000404" [label="(Identifier,ret)"];
"1000217" [label="(Call,!init_ctx->container)"];
"1000608" [label="(Literal,\"failed to enter the namespace\")"];
"1000410" [label="(Literal,0)"];
"1000344" [label="(Identifier,pid)"];
"1000265" [label="(Identifier,options)"];
"1000228" [label="(Identifier,init_ctx)"];
"1000233" [label="(ControlStructure,if (!no_new_privs(init_ctx->container, options)))"];
"1000241" [label="(Literal,\"Could not determine whether PR_SET_NO_NEW_PRIVS is set.\")"];
"1000154" [label="(Call,init_pid = lxc_cmd_get_init_pid(name, lxcpath))"];
"1000306" [label="(Call,pid < 0)"];
"1000132" [label="(MethodParameterIn,lxc_attach_options_t* options)"];
"1000209" [label="(Call,init_ctx->container = lxc_container_new(name, lxcpath))"];
"1000234" [label="(Call,!no_new_privs(init_ctx->container, options))"];
"1000236" [label="(Call,init_ctx->container)"];
"1000227" [label="(Call,init_ctx->container)"];
"1000568" [label="(Call,options->namespaces |= CLONE_NEWCGROUP)"];
"1000597" [label="(Call,lxc_attach_to_ns(init_pid, options->namespaces))"];
"1000321" [label="(Block,)"];
"1000595" [label="(Call,ret = lxc_attach_to_ns(init_pid, options->namespaces))"];
"1000603" [label="(Call,ret < 0)"];
"1000256" [label="(Call,options->namespaces)"];
"1000215" [label="(Identifier,lxcpath)"];
"1000248" [label="(Call,options->namespaces == -1)"];
"1000171" [label="(Call,lxc_proc_get_context_info(init_pid))"];
"1000189" [label="(Identifier,lxcpath)"];
"1000340" [label="(Call,!cgroup_attach(name, lxcpath, pid))"];
"1000596" [label="(Identifier,ret)"];
"1000406" [label="(Identifier,pid)"];
"1000216" [label="(ControlStructure,if (!init_ctx->container))"];
"1000264" [label="(Call,options->namespaces)"];
"1000341" [label="(Call,cgroup_attach(name, lxcpath, pid))"];
"1000407" [label="(ControlStructure,if (ret < 0))"];
"1000619" [label="(Identifier,options)"];
"1000226" [label="(Call,fetch_seccomp(init_ctx->container, options))"];
"1000263" [label="(Call,options->namespaces == -1)"];
"1000343" [label="(Identifier,lxcpath)"];
"1000260" [label="(Identifier,name)"];
"1000405" [label="(Call,wait_for_pid(pid))"];
"1000224" [label="(ControlStructure,if (!fetch_seccomp(init_ctx->container, options)))"];
"1000345" [label="(ControlStructure,goto cleanup_error;)"];
"1000602" [label="(ControlStructure,if (ret < 0))"];
"1000157" [label="(Identifier,name)"];
"1000604" [label="(Identifier,ret)"];
"1000574" [label="(Identifier,procfd)"];
"1000148" [label="(Call,!options)"];
"1000230" [label="(Identifier,options)"];
"1000409" [label="(Identifier,ret)"];
"1000560" [label="(ControlStructure,if ((options->attach_flags & LXC_ATTACH_MOVE_TO_CGROUP) && cgns_supported()))"];
"1000347" [label="(Identifier,status)"];
"1000134" [label="(Block,)"];
"1000280" [label="(Identifier,ret)"];
"1000408" [label="(Call,ret < 0)"];
"1000150" [label="(Call,options = &attach_static_default_options)"];
"1000259" [label="(Call,lxc_cmd_get_clone_flags(name, lxcpath))"];
"1000158" [label="(Identifier,lxcpath)"];
"1000262" [label="(ControlStructure,if (options->namespaces == -1))"];
"1000403" [label="(Call,ret = wait_for_pid(pid))"];
"1000342" [label="(Identifier,name)"];
"1000569" [label="(Call,options->namespaces)"];
"1000254" [label="(Block,)"];
"1000188" [label="(Identifier,name)"];
"1000413" [label="(Identifier,to_cleanup_pid)"];
"1000267" [label="(Call,-1)"];
"1000411" [label="(ControlStructure,goto cleanup_error;)"];
"1000223" [label="(Literal,1)"];
"1000225" [label="(Call,!fetch_seccomp(init_ctx->container, options))"];
"1000214" [label="(Identifier,name)"];
"1000129" [label="(MethodParameterIn,const char* lxcpath)"];
"1000237" [label="(Identifier,init_ctx)"];
"1000187" [label="(Call,get_personality(name, lxcpath))"];
"1000255" [label="(Call,options->namespaces = lxc_cmd_get_clone_flags(name, lxcpath))"];
"1000235" [label="(Call,no_new_privs(init_ctx->container, options))"];
"1000598" [label="(Identifier,init_pid)"];
"1000261" [label="(Identifier,lxcpath)"];
"1000599" [label="(Call,options->namespaces)"];
"1000218" [label="(Call,init_ctx->container)"];
"1000339" [label="(ControlStructure,if (!cgroup_attach(name, lxcpath, pid)))"];
"1000185" [label="(Call,personality = get_personality(name, lxcpath))"];
"1000239" [label="(Identifier,options)"];
"1000605" [label="(Literal,0)"];
"1000213" -> "1000209"  [label="AST: "];
"1000213" -> "1000215"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000215" -> "1000213"  [label="AST: "];
"1000209" -> "1000213"  [label="CFG: "];
"1000213" -> "1000695"  [label="DDG: name"];
"1000213" -> "1000695"  [label="DDG: lxcpath"];
"1000213" -> "1000209"  [label="DDG: name"];
"1000213" -> "1000209"  [label="DDG: lxcpath"];
"1000187" -> "1000213"  [label="DDG: name"];
"1000187" -> "1000213"  [label="DDG: lxcpath"];
"1000128" -> "1000213"  [label="DDG: name"];
"1000129" -> "1000213"  [label="DDG: lxcpath"];
"1000213" -> "1000259"  [label="DDG: name"];
"1000213" -> "1000259"  [label="DDG: lxcpath"];
"1000213" -> "1000341"  [label="DDG: name"];
"1000213" -> "1000341"  [label="DDG: lxcpath"];
"1000187" -> "1000185"  [label="AST: "];
"1000187" -> "1000189"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000189" -> "1000187"  [label="AST: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000187" -> "1000695"  [label="DDG: name"];
"1000187" -> "1000695"  [label="DDG: lxcpath"];
"1000187" -> "1000185"  [label="DDG: name"];
"1000187" -> "1000185"  [label="DDG: lxcpath"];
"1000156" -> "1000187"  [label="DDG: name"];
"1000156" -> "1000187"  [label="DDG: lxcpath"];
"1000128" -> "1000187"  [label="DDG: name"];
"1000129" -> "1000187"  [label="DDG: lxcpath"];
"1000156" -> "1000154"  [label="AST: "];
"1000156" -> "1000158"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000158" -> "1000156"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000156" -> "1000695"  [label="DDG: name"];
"1000156" -> "1000695"  [label="DDG: lxcpath"];
"1000156" -> "1000154"  [label="DDG: name"];
"1000156" -> "1000154"  [label="DDG: lxcpath"];
"1000128" -> "1000156"  [label="DDG: name"];
"1000129" -> "1000156"  [label="DDG: lxcpath"];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000695"  [label="DDG: name"];
"1000128" -> "1000259"  [label="DDG: name"];
"1000128" -> "1000341"  [label="DDG: name"];
"1000129" -> "1000127"  [label="AST: "];
"1000129" -> "1000695"  [label="DDG: lxcpath"];
"1000129" -> "1000259"  [label="DDG: lxcpath"];
"1000129" -> "1000341"  [label="DDG: lxcpath"];
"1000209" -> "1000134"  [label="AST: "];
"1000210" -> "1000209"  [label="AST: "];
"1000219" -> "1000209"  [label="CFG: "];
"1000209" -> "1000695"  [label="DDG: lxc_container_new(name, lxcpath)"];
"1000209" -> "1000217"  [label="DDG: init_ctx->container"];
"1000217" -> "1000216"  [label="AST: "];
"1000217" -> "1000218"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000223" -> "1000217"  [label="CFG: "];
"1000228" -> "1000217"  [label="CFG: "];
"1000217" -> "1000695"  [label="DDG: !init_ctx->container"];
"1000217" -> "1000695"  [label="DDG: init_ctx->container"];
"1000217" -> "1000226"  [label="DDG: init_ctx->container"];
"1000226" -> "1000225"  [label="AST: "];
"1000226" -> "1000230"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000230" -> "1000226"  [label="AST: "];
"1000225" -> "1000226"  [label="CFG: "];
"1000226" -> "1000225"  [label="DDG: init_ctx->container"];
"1000226" -> "1000225"  [label="DDG: options"];
"1000150" -> "1000226"  [label="DDG: options"];
"1000148" -> "1000226"  [label="DDG: options"];
"1000132" -> "1000226"  [label="DDG: options"];
"1000226" -> "1000235"  [label="DDG: init_ctx->container"];
"1000226" -> "1000235"  [label="DDG: options"];
"1000225" -> "1000224"  [label="AST: "];
"1000232" -> "1000225"  [label="CFG: "];
"1000237" -> "1000225"  [label="CFG: "];
"1000225" -> "1000695"  [label="DDG: !fetch_seccomp(init_ctx->container, options)"];
"1000225" -> "1000695"  [label="DDG: fetch_seccomp(init_ctx->container, options)"];
"1000235" -> "1000234"  [label="AST: "];
"1000235" -> "1000239"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000239" -> "1000235"  [label="AST: "];
"1000234" -> "1000235"  [label="CFG: "];
"1000235" -> "1000695"  [label="DDG: init_ctx->container"];
"1000235" -> "1000695"  [label="DDG: options"];
"1000235" -> "1000234"  [label="DDG: init_ctx->container"];
"1000235" -> "1000234"  [label="DDG: options"];
"1000132" -> "1000235"  [label="DDG: options"];
"1000234" -> "1000233"  [label="AST: "];
"1000241" -> "1000234"  [label="CFG: "];
"1000243" -> "1000234"  [label="CFG: "];
"1000234" -> "1000695"  [label="DDG: no_new_privs(init_ctx->container, options)"];
"1000234" -> "1000695"  [label="DDG: !no_new_privs(init_ctx->container, options)"];
"1000259" -> "1000255"  [label="AST: "];
"1000259" -> "1000261"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000259"  [label="AST: "];
"1000255" -> "1000259"  [label="CFG: "];
"1000259" -> "1000695"  [label="DDG: name"];
"1000259" -> "1000695"  [label="DDG: lxcpath"];
"1000259" -> "1000255"  [label="DDG: name"];
"1000259" -> "1000255"  [label="DDG: lxcpath"];
"1000259" -> "1000341"  [label="DDG: name"];
"1000259" -> "1000341"  [label="DDG: lxcpath"];
"1000255" -> "1000254"  [label="AST: "];
"1000256" -> "1000255"  [label="AST: "];
"1000265" -> "1000255"  [label="CFG: "];
"1000255" -> "1000695"  [label="DDG: lxc_cmd_get_clone_flags(name, lxcpath)"];
"1000255" -> "1000263"  [label="DDG: options->namespaces"];
"1000263" -> "1000262"  [label="AST: "];
"1000263" -> "1000267"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000267" -> "1000263"  [label="AST: "];
"1000271" -> "1000263"  [label="CFG: "];
"1000280" -> "1000263"  [label="CFG: "];
"1000263" -> "1000695"  [label="DDG: -1"];
"1000263" -> "1000695"  [label="DDG: options->namespaces"];
"1000263" -> "1000695"  [label="DDG: options->namespaces == -1"];
"1000267" -> "1000263"  [label="DDG: 1"];
"1000263" -> "1000568"  [label="DDG: options->namespaces"];
"1000263" -> "1000597"  [label="DDG: options->namespaces"];
"1000568" -> "1000560"  [label="AST: "];
"1000568" -> "1000572"  [label="CFG: "];
"1000569" -> "1000568"  [label="AST: "];
"1000572" -> "1000568"  [label="AST: "];
"1000574" -> "1000568"  [label="CFG: "];
"1000568" -> "1000695"  [label="DDG: options->namespaces |= CLONE_NEWCGROUP"];
"1000568" -> "1000695"  [label="DDG: CLONE_NEWCGROUP"];
"1000248" -> "1000568"  [label="DDG: options->namespaces"];
"1000568" -> "1000597"  [label="DDG: options->namespaces"];
"1000597" -> "1000595"  [label="AST: "];
"1000597" -> "1000599"  [label="CFG: "];
"1000598" -> "1000597"  [label="AST: "];
"1000599" -> "1000597"  [label="AST: "];
"1000595" -> "1000597"  [label="CFG: "];
"1000597" -> "1000695"  [label="DDG: options->namespaces"];
"1000597" -> "1000695"  [label="DDG: init_pid"];
"1000597" -> "1000595"  [label="DDG: init_pid"];
"1000597" -> "1000595"  [label="DDG: options->namespaces"];
"1000171" -> "1000597"  [label="DDG: init_pid"];
"1000248" -> "1000597"  [label="DDG: options->namespaces"];
"1000595" -> "1000134"  [label="AST: "];
"1000596" -> "1000595"  [label="AST: "];
"1000604" -> "1000595"  [label="CFG: "];
"1000595" -> "1000695"  [label="DDG: lxc_attach_to_ns(init_pid, options->namespaces)"];
"1000595" -> "1000603"  [label="DDG: ret"];
"1000603" -> "1000602"  [label="AST: "];
"1000603" -> "1000605"  [label="CFG: "];
"1000604" -> "1000603"  [label="AST: "];
"1000605" -> "1000603"  [label="AST: "];
"1000608" -> "1000603"  [label="CFG: "];
"1000619" -> "1000603"  [label="CFG: "];
"1000341" -> "1000340"  [label="AST: "];
"1000341" -> "1000344"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="AST: "];
"1000344" -> "1000341"  [label="AST: "];
"1000340" -> "1000341"  [label="CFG: "];
"1000341" -> "1000695"  [label="DDG: pid"];
"1000341" -> "1000695"  [label="DDG: lxcpath"];
"1000341" -> "1000695"  [label="DDG: name"];
"1000341" -> "1000340"  [label="DDG: name"];
"1000341" -> "1000340"  [label="DDG: lxcpath"];
"1000341" -> "1000340"  [label="DDG: pid"];
"1000306" -> "1000341"  [label="DDG: pid"];
"1000341" -> "1000405"  [label="DDG: pid"];
"1000340" -> "1000339"  [label="AST: "];
"1000345" -> "1000340"  [label="CFG: "];
"1000347" -> "1000340"  [label="CFG: "];
"1000340" -> "1000695"  [label="DDG: !cgroup_attach(name, lxcpath, pid)"];
"1000340" -> "1000695"  [label="DDG: cgroup_attach(name, lxcpath, pid)"];
"1000405" -> "1000403"  [label="AST: "];
"1000405" -> "1000406"  [label="CFG: "];
"1000406" -> "1000405"  [label="AST: "];
"1000403" -> "1000405"  [label="CFG: "];
"1000405" -> "1000695"  [label="DDG: pid"];
"1000405" -> "1000403"  [label="DDG: pid"];
"1000306" -> "1000405"  [label="DDG: pid"];
"1000403" -> "1000321"  [label="AST: "];
"1000404" -> "1000403"  [label="AST: "];
"1000409" -> "1000403"  [label="CFG: "];
"1000403" -> "1000695"  [label="DDG: wait_for_pid(pid)"];
"1000403" -> "1000408"  [label="DDG: ret"];
"1000408" -> "1000407"  [label="AST: "];
"1000408" -> "1000410"  [label="CFG: "];
"1000409" -> "1000408"  [label="AST: "];
"1000410" -> "1000408"  [label="AST: "];
"1000411" -> "1000408"  [label="CFG: "];
"1000413" -> "1000408"  [label="CFG: "];
"1000408" -> "1000695"  [label="DDG: ret"];
"1000408" -> "1000695"  [label="DDG: ret < 0"];
}
