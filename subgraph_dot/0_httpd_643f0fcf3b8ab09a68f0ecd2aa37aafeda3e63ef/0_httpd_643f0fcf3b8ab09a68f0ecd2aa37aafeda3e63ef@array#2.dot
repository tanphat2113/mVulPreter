digraph "0_httpd_643f0fcf3b8ab09a68f0ecd2aa37aafeda3e63ef@array" {
"1000557" [label="(Call,frame[0] = 0x8A)"];
"1000567" [label="(Call,apr_socket_send(sock, frame, &plen))"];
"1000185" [label="(Call,apr_socket_recv(sock, &byte, &len))"];
"1000183" [label="(Call,rv = apr_socket_recv(sock, &byte, &len))"];
"1000203" [label="(Call,rv == APR_SUCCESS)"];
"1000252" [label="(Call,rv == APR_SUCCESS)"];
"1000315" [label="(Call,rv == APR_SUCCESS)"];
"1000361" [label="(Call,rv == APR_SUCCESS)"];
"1000426" [label="(Call,rv != APR_SUCCESS)"];
"1000195" [label="(Call,lua_websocket_readbytes(r->connection, &byte, 1))"];
"1000193" [label="(Call,rv = lua_websocket_readbytes(r->connection, &byte, 1))"];
"1000234" [label="(Call,apr_socket_recv(sock, &byte, &len))"];
"1000232" [label="(Call,rv = apr_socket_recv(sock, &byte, &len))"];
"1000289" [label="(Call,apr_socket_recv(sock, (char*) &payload_short, &len))"];
"1000287" [label="(Call,rv = apr_socket_recv(sock, (char*) &payload_short, &len))"];
"1000339" [label="(Call,apr_socket_recv(sock, (char*) &payload_long, &len))"];
"1000337" [label="(Call,rv = apr_socket_recv(sock, (char*) &payload_long, &len))"];
"1000406" [label="(Call,apr_socket_recv(sock, (char*) mask_bytes, &len))"];
"1000404" [label="(Call,rv = apr_socket_recv(sock, (char*) mask_bytes, &len))"];
"1000480" [label="(Call,apr_socket_recv(sock, buffer+at, &received))"];
"1000478" [label="(Call,rv = apr_socket_recv(sock, buffer+at, &received))"];
"1000244" [label="(Call,lua_websocket_readbytes(r->connection, &byte, 1))"];
"1000242" [label="(Call,rv = lua_websocket_readbytes(r->connection, &byte, 1))"];
"1000301" [label="(Call,lua_websocket_readbytes(r->connection, \n                        (char*) &payload_short, 2))"];
"1000299" [label="(Call,rv = lua_websocket_readbytes(r->connection, \n                        (char*) &payload_short, 2))"];
"1000351" [label="(Call,lua_websocket_readbytes(r->connection, \n                            (char*) &payload_long, 8))"];
"1000349" [label="(Call,rv = lua_websocket_readbytes(r->connection, \n                            (char*) &payload_long, 8))"];
"1000417" [label="(Call,lua_websocket_readbytes(r->connection, \n                            (char*) mask_bytes, 4))"];
"1000415" [label="(Call,rv = lua_websocket_readbytes(r->connection, \n                            (char*) mask_bytes, 4))"];
"1000509" [label="(Call,lua_websocket_readbytes(r->connection, buffer, \n                            remaining))"];
"1000507" [label="(Call,rv = lua_websocket_readbytes(r->connection, buffer, \n                            remaining))"];
"1000528" [label="(Call,buffer[n] ^= mask_bytes[n%4])"];
"1000537" [label="(Call,lua_pushlstring(L, buffer, (size_t) plen))"];
"1000543" [label="(Call,lua_pushboolean(L, fin))"];
"1000241" [label="(Block,)"];
"1000243" [label="(Identifier,rv)"];
"1000254" [label="(Identifier,APR_SUCCESS)"];
"1000231" [label="(Block,)"];
"1000568" [label="(Identifier,sock)"];
"1000355" [label="(Call,(char*) &payload_long)"];
"1000482" [label="(Call,buffer+at)"];
"1000435" [label="(Identifier,plen)"];
"1000170" [label="(Call,ap_get_conn_socket(r->connection))"];
"1000314" [label="(ControlStructure,if (rv == APR_SUCCESS))"];
"1000481" [label="(Identifier,sock)"];
"1000573" [label="(Identifier,do_read)"];
"1000495" [label="(Call,at += received)"];
"1000442" [label="(Block,)"];
"1000547" [label="(Literal,2)"];
"1000489" [label="(Identifier,received)"];
"1000348" [label="(Block,)"];
"1000404" [label="(Call,rv = apr_socket_recv(sock, (char*) mask_bytes, &len))"];
"1000540" [label="(Call,(size_t) plen)"];
"1000544" [label="(Identifier,L)"];
"1000543" [label="(Call,lua_pushboolean(L, fin))"];
"1000545" [label="(Identifier,fin)"];
"1000507" [label="(Call,rv = lua_websocket_readbytes(r->connection, buffer, \n                            remaining))"];
"1000199" [label="(Call,&byte)"];
"1000289" [label="(Call,apr_socket_recv(sock, (char*) &payload_short, &len))"];
"1000149" [label="(Call,ap_lua_check_request_rec(L, 1))"];
"1000567" [label="(Call,apr_socket_send(sock, frame, &plen))"];
"1000516" [label="(Identifier,mask)"];
"1000305" [label="(Call,(char*) &payload_short)"];
"1000161" [label="(Call,mask_bytes = apr_pcalloc(r->pool, 4))"];
"1000337" [label="(Call,rv = apr_socket_recv(sock, (char*) &payload_long, &len))"];
"1000309" [label="(Literal,2)"];
"1000234" [label="(Call,apr_socket_recv(sock, &byte, &len))"];
"1000317" [label="(Identifier,APR_SUCCESS)"];
"1000478" [label="(Call,rv = apr_socket_recv(sock, buffer+at, &received))"];
"1000257" [label="(Identifier,ubyte)"];
"1000424" [label="(Literal,4)"];
"1000561" [label="(Literal,0x8A)"];
"1000316" [label="(Identifier,rv)"];
"1000311" [label="(Identifier,payload_short)"];
"1000242" [label="(Call,rv = lua_websocket_readbytes(r->connection, &byte, 1))"];
"1000195" [label="(Call,lua_websocket_readbytes(r->connection, &byte, 1))"];
"1000403" [label="(Block,)"];
"1000245" [label="(Call,r->connection)"];
"1000474" [label="(Block,)"];
"1000529" [label="(Call,buffer[n])"];
"1000508" [label="(Identifier,rv)"];
"1000325" [label="(Literal,0)"];
"1000205" [label="(Identifier,APR_SUCCESS)"];
"1000407" [label="(Identifier,sock)"];
"1000479" [label="(Identifier,rv)"];
"1000509" [label="(Call,lua_websocket_readbytes(r->connection, buffer, \n                            remaining))"];
"1000203" [label="(Call,rv == APR_SUCCESS)"];
"1000352" [label="(Call,r->connection)"];
"1000287" [label="(Call,rv = apr_socket_recv(sock, (char*) &payload_short, &len))"];
"1000244" [label="(Call,lua_websocket_readbytes(r->connection, &byte, 1))"];
"1000462" [label="(Call,buffer[plen] = 0)"];
"1000406" [label="(Call,apr_socket_recv(sock, (char*) mask_bytes, &len))"];
"1000202" [label="(ControlStructure,if (rv == APR_SUCCESS))"];
"1000538" [label="(Identifier,L)"];
"1000302" [label="(Call,r->connection)"];
"1000526" [label="(Identifier,n)"];
"1000184" [label="(Identifier,rv)"];
"1000291" [label="(Call,(char*) &payload_short)"];
"1000238" [label="(Call,&len)"];
"1000175" [label="(Identifier,do_read)"];
"1000250" [label="(Literal,1)"];
"1000532" [label="(Call,mask_bytes[n%4])"];
"1000301" [label="(Call,lua_websocket_readbytes(r->connection, \n                        (char*) &payload_short, 2))"];
"1000558" [label="(Call,frame[0])"];
"1000288" [label="(Identifier,rv)"];
"1000345" [label="(Call,&len)"];
"1000232" [label="(Call,rv = apr_socket_recv(sock, &byte, &len))"];
"1000183" [label="(Call,rv = apr_socket_recv(sock, &byte, &len))"];
"1000251" [label="(ControlStructure,if (rv == APR_SUCCESS))"];
"1000414" [label="(Block,)"];
"1000233" [label="(Identifier,rv)"];
"1000192" [label="(Block,)"];
"1000363" [label="(Identifier,APR_SUCCESS)"];
"1000480" [label="(Call,apr_socket_recv(sock, buffer+at, &received))"];
"1000444" [label="(Call,remaining = plen)"];
"1000213" [label="(Identifier,ubyte)"];
"1000569" [label="(Identifier,frame)"];
"1000426" [label="(Call,rv != APR_SUCCESS)"];
"1000418" [label="(Call,r->connection)"];
"1000186" [label="(Identifier,sock)"];
"1000315" [label="(Call,rv == APR_SUCCESS)"];
"1000193" [label="(Call,rv = lua_websocket_readbytes(r->connection, &byte, 1))"];
"1000362" [label="(Identifier,rv)"];
"1000366" [label="(Identifier,plen)"];
"1000411" [label="(Call,&len)"];
"1000339" [label="(Call,apr_socket_recv(sock, (char*) &payload_long, &len))"];
"1000453" [label="(Call,*buffer = apr_palloc(r->pool, plen+1))"];
"1000537" [label="(Call,lua_pushlstring(L, buffer, (size_t) plen))"];
"1000351" [label="(Call,lua_websocket_readbytes(r->connection, \n                            (char*) &payload_long, 8))"];
"1000185" [label="(Call,apr_socket_recv(sock, &byte, &len))"];
"1000295" [label="(Call,&len)"];
"1000360" [label="(ControlStructure,if (rv == APR_SUCCESS))"];
"1000417" [label="(Call,lua_websocket_readbytes(r->connection, \n                            (char*) mask_bytes, 4))"];
"1000539" [label="(Identifier,buffer)"];
"1000341" [label="(Call,(char*) &payload_long)"];
"1000204" [label="(Identifier,rv)"];
"1000431" [label="(Literal,0)"];
"1000350" [label="(Identifier,rv)"];
"1000201" [label="(Literal,1)"];
"1000189" [label="(Call,&len)"];
"1000168" [label="(Call,sock = ap_get_conn_socket(r->connection))"];
"1000182" [label="(Block,)"];
"1000298" [label="(Block,)"];
"1000290" [label="(Identifier,sock)"];
"1000349" [label="(Call,rv = lua_websocket_readbytes(r->connection, \n                            (char*) &payload_long, 8))"];
"1000300" [label="(Identifier,rv)"];
"1000428" [label="(Identifier,APR_SUCCESS)"];
"1000299" [label="(Call,rv = lua_websocket_readbytes(r->connection, \n                        (char*) &payload_short, 2))"];
"1000373" [label="(Literal,0)"];
"1000235" [label="(Identifier,sock)"];
"1000513" [label="(Identifier,buffer)"];
"1000415" [label="(Call,rv = lua_websocket_readbytes(r->connection, \n                            (char*) mask_bytes, 4))"];
"1000562" [label="(Call,frame[1] = 0)"];
"1000194" [label="(Identifier,rv)"];
"1000485" [label="(Call,&received)"];
"1000570" [label="(Call,&plen)"];
"1000187" [label="(Call,&byte)"];
"1000248" [label="(Call,&byte)"];
"1000336" [label="(Block,)"];
"1000527" [label="(Block,)"];
"1000286" [label="(Block,)"];
"1000252" [label="(Call,rv == APR_SUCCESS)"];
"1000514" [label="(Identifier,remaining)"];
"1000361" [label="(Call,rv == APR_SUCCESS)"];
"1000564" [label="(Identifier,frame)"];
"1000408" [label="(Call,(char*) mask_bytes)"];
"1000427" [label="(Identifier,rv)"];
"1000338" [label="(Identifier,rv)"];
"1000425" [label="(ControlStructure,if (rv != APR_SUCCESS))"];
"1000557" [label="(Call,frame[0] = 0x8A)"];
"1000253" [label="(Identifier,rv)"];
"1000506" [label="(Block,)"];
"1000236" [label="(Call,&byte)"];
"1000115" [label="(MethodParameterIn,lua_State *L)"];
"1000510" [label="(Call,r->connection)"];
"1000449" [label="(Call,at = 0)"];
"1000340" [label="(Identifier,sock)"];
"1000416" [label="(Identifier,rv)"];
"1000552" [label="(Block,)"];
"1000359" [label="(Literal,8)"];
"1000196" [label="(Call,r->connection)"];
"1000421" [label="(Call,(char*) mask_bytes)"];
"1000528" [label="(Call,buffer[n] ^= mask_bytes[n%4])"];
"1000405" [label="(Identifier,rv)"];
"1000320" [label="(Identifier,plen)"];
"1000577" [label="(MethodReturn,static int)"];
"1000557" -> "1000552"  [label="AST: "];
"1000557" -> "1000561"  [label="CFG: "];
"1000558" -> "1000557"  [label="AST: "];
"1000561" -> "1000557"  [label="AST: "];
"1000564" -> "1000557"  [label="CFG: "];
"1000557" -> "1000577"  [label="DDG: frame[0]"];
"1000557" -> "1000567"  [label="DDG: frame[0]"];
"1000567" -> "1000552"  [label="AST: "];
"1000567" -> "1000570"  [label="CFG: "];
"1000568" -> "1000567"  [label="AST: "];
"1000569" -> "1000567"  [label="AST: "];
"1000570" -> "1000567"  [label="AST: "];
"1000573" -> "1000567"  [label="CFG: "];
"1000567" -> "1000577"  [label="DDG: frame"];
"1000567" -> "1000577"  [label="DDG: sock"];
"1000567" -> "1000577"  [label="DDG: apr_socket_send(sock, frame, &plen)"];
"1000567" -> "1000577"  [label="DDG: &plen"];
"1000567" -> "1000185"  [label="DDG: sock"];
"1000567" -> "1000234"  [label="DDG: sock"];
"1000567" -> "1000289"  [label="DDG: sock"];
"1000567" -> "1000339"  [label="DDG: sock"];
"1000567" -> "1000406"  [label="DDG: sock"];
"1000567" -> "1000480"  [label="DDG: sock"];
"1000185" -> "1000567"  [label="DDG: sock"];
"1000406" -> "1000567"  [label="DDG: sock"];
"1000339" -> "1000567"  [label="DDG: sock"];
"1000289" -> "1000567"  [label="DDG: sock"];
"1000168" -> "1000567"  [label="DDG: sock"];
"1000234" -> "1000567"  [label="DDG: sock"];
"1000562" -> "1000567"  [label="DDG: frame[1]"];
"1000185" -> "1000183"  [label="AST: "];
"1000185" -> "1000189"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="AST: "];
"1000189" -> "1000185"  [label="AST: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000185" -> "1000577"  [label="DDG: sock"];
"1000185" -> "1000577"  [label="DDG: &byte"];
"1000185" -> "1000577"  [label="DDG: &len"];
"1000185" -> "1000183"  [label="DDG: sock"];
"1000185" -> "1000183"  [label="DDG: &byte"];
"1000185" -> "1000183"  [label="DDG: &len"];
"1000406" -> "1000185"  [label="DDG: sock"];
"1000406" -> "1000185"  [label="DDG: &len"];
"1000339" -> "1000185"  [label="DDG: sock"];
"1000339" -> "1000185"  [label="DDG: &len"];
"1000289" -> "1000185"  [label="DDG: sock"];
"1000289" -> "1000185"  [label="DDG: &len"];
"1000168" -> "1000185"  [label="DDG: sock"];
"1000234" -> "1000185"  [label="DDG: sock"];
"1000234" -> "1000185"  [label="DDG: &byte"];
"1000234" -> "1000185"  [label="DDG: &len"];
"1000244" -> "1000185"  [label="DDG: &byte"];
"1000195" -> "1000185"  [label="DDG: &byte"];
"1000185" -> "1000195"  [label="DDG: &byte"];
"1000185" -> "1000234"  [label="DDG: sock"];
"1000185" -> "1000234"  [label="DDG: &byte"];
"1000185" -> "1000234"  [label="DDG: &len"];
"1000185" -> "1000244"  [label="DDG: &byte"];
"1000185" -> "1000289"  [label="DDG: sock"];
"1000185" -> "1000289"  [label="DDG: &len"];
"1000185" -> "1000339"  [label="DDG: sock"];
"1000185" -> "1000339"  [label="DDG: &len"];
"1000185" -> "1000406"  [label="DDG: sock"];
"1000185" -> "1000406"  [label="DDG: &len"];
"1000185" -> "1000480"  [label="DDG: sock"];
"1000183" -> "1000182"  [label="AST: "];
"1000184" -> "1000183"  [label="AST: "];
"1000204" -> "1000183"  [label="CFG: "];
"1000183" -> "1000577"  [label="DDG: apr_socket_recv(sock, &byte, &len)"];
"1000183" -> "1000203"  [label="DDG: rv"];
"1000203" -> "1000202"  [label="AST: "];
"1000203" -> "1000205"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000203"  [label="AST: "];
"1000175" -> "1000203"  [label="CFG: "];
"1000213" -> "1000203"  [label="CFG: "];
"1000203" -> "1000577"  [label="DDG: rv == APR_SUCCESS"];
"1000203" -> "1000577"  [label="DDG: APR_SUCCESS"];
"1000203" -> "1000577"  [label="DDG: rv"];
"1000193" -> "1000203"  [label="DDG: rv"];
"1000426" -> "1000203"  [label="DDG: APR_SUCCESS"];
"1000252" -> "1000203"  [label="DDG: APR_SUCCESS"];
"1000361" -> "1000203"  [label="DDG: APR_SUCCESS"];
"1000315" -> "1000203"  [label="DDG: APR_SUCCESS"];
"1000203" -> "1000252"  [label="DDG: APR_SUCCESS"];
"1000252" -> "1000251"  [label="AST: "];
"1000252" -> "1000254"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000254" -> "1000252"  [label="AST: "];
"1000175" -> "1000252"  [label="CFG: "];
"1000257" -> "1000252"  [label="CFG: "];
"1000252" -> "1000577"  [label="DDG: rv"];
"1000252" -> "1000577"  [label="DDG: APR_SUCCESS"];
"1000252" -> "1000577"  [label="DDG: rv == APR_SUCCESS"];
"1000232" -> "1000252"  [label="DDG: rv"];
"1000242" -> "1000252"  [label="DDG: rv"];
"1000252" -> "1000315"  [label="DDG: APR_SUCCESS"];
"1000252" -> "1000361"  [label="DDG: APR_SUCCESS"];
"1000252" -> "1000426"  [label="DDG: APR_SUCCESS"];
"1000315" -> "1000314"  [label="AST: "];
"1000315" -> "1000317"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000317" -> "1000315"  [label="AST: "];
"1000320" -> "1000315"  [label="CFG: "];
"1000325" -> "1000315"  [label="CFG: "];
"1000315" -> "1000577"  [label="DDG: rv == APR_SUCCESS"];
"1000315" -> "1000577"  [label="DDG: rv"];
"1000315" -> "1000577"  [label="DDG: APR_SUCCESS"];
"1000299" -> "1000315"  [label="DDG: rv"];
"1000287" -> "1000315"  [label="DDG: rv"];
"1000315" -> "1000361"  [label="DDG: APR_SUCCESS"];
"1000315" -> "1000426"  [label="DDG: APR_SUCCESS"];
"1000361" -> "1000360"  [label="AST: "];
"1000361" -> "1000363"  [label="CFG: "];
"1000362" -> "1000361"  [label="AST: "];
"1000363" -> "1000361"  [label="AST: "];
"1000366" -> "1000361"  [label="CFG: "];
"1000373" -> "1000361"  [label="CFG: "];
"1000361" -> "1000577"  [label="DDG: rv == APR_SUCCESS"];
"1000361" -> "1000577"  [label="DDG: rv"];
"1000361" -> "1000577"  [label="DDG: APR_SUCCESS"];
"1000337" -> "1000361"  [label="DDG: rv"];
"1000349" -> "1000361"  [label="DDG: rv"];
"1000361" -> "1000426"  [label="DDG: APR_SUCCESS"];
"1000426" -> "1000425"  [label="AST: "];
"1000426" -> "1000428"  [label="CFG: "];
"1000427" -> "1000426"  [label="AST: "];
"1000428" -> "1000426"  [label="AST: "];
"1000431" -> "1000426"  [label="CFG: "];
"1000435" -> "1000426"  [label="CFG: "];
"1000426" -> "1000577"  [label="DDG: APR_SUCCESS"];
"1000426" -> "1000577"  [label="DDG: rv"];
"1000426" -> "1000577"  [label="DDG: rv != APR_SUCCESS"];
"1000404" -> "1000426"  [label="DDG: rv"];
"1000415" -> "1000426"  [label="DDG: rv"];
"1000195" -> "1000193"  [label="AST: "];
"1000195" -> "1000201"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000199" -> "1000195"  [label="AST: "];
"1000201" -> "1000195"  [label="AST: "];
"1000193" -> "1000195"  [label="CFG: "];
"1000195" -> "1000577"  [label="DDG: &byte"];
"1000195" -> "1000577"  [label="DDG: r->connection"];
"1000195" -> "1000193"  [label="DDG: r->connection"];
"1000195" -> "1000193"  [label="DDG: &byte"];
"1000195" -> "1000193"  [label="DDG: 1"];
"1000301" -> "1000195"  [label="DDG: r->connection"];
"1000417" -> "1000195"  [label="DDG: r->connection"];
"1000170" -> "1000195"  [label="DDG: r->connection"];
"1000351" -> "1000195"  [label="DDG: r->connection"];
"1000244" -> "1000195"  [label="DDG: r->connection"];
"1000244" -> "1000195"  [label="DDG: &byte"];
"1000234" -> "1000195"  [label="DDG: &byte"];
"1000195" -> "1000234"  [label="DDG: &byte"];
"1000195" -> "1000244"  [label="DDG: r->connection"];
"1000195" -> "1000244"  [label="DDG: &byte"];
"1000195" -> "1000301"  [label="DDG: r->connection"];
"1000195" -> "1000351"  [label="DDG: r->connection"];
"1000195" -> "1000417"  [label="DDG: r->connection"];
"1000195" -> "1000509"  [label="DDG: r->connection"];
"1000193" -> "1000192"  [label="AST: "];
"1000194" -> "1000193"  [label="AST: "];
"1000204" -> "1000193"  [label="CFG: "];
"1000193" -> "1000577"  [label="DDG: lua_websocket_readbytes(r->connection, &byte, 1)"];
"1000234" -> "1000232"  [label="AST: "];
"1000234" -> "1000238"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000236" -> "1000234"  [label="AST: "];
"1000238" -> "1000234"  [label="AST: "];
"1000232" -> "1000234"  [label="CFG: "];
"1000234" -> "1000577"  [label="DDG: &byte"];
"1000234" -> "1000577"  [label="DDG: sock"];
"1000234" -> "1000577"  [label="DDG: &len"];
"1000234" -> "1000232"  [label="DDG: sock"];
"1000234" -> "1000232"  [label="DDG: &byte"];
"1000234" -> "1000232"  [label="DDG: &len"];
"1000406" -> "1000234"  [label="DDG: sock"];
"1000406" -> "1000234"  [label="DDG: &len"];
"1000339" -> "1000234"  [label="DDG: sock"];
"1000339" -> "1000234"  [label="DDG: &len"];
"1000289" -> "1000234"  [label="DDG: sock"];
"1000289" -> "1000234"  [label="DDG: &len"];
"1000168" -> "1000234"  [label="DDG: sock"];
"1000234" -> "1000289"  [label="DDG: sock"];
"1000234" -> "1000289"  [label="DDG: &len"];
"1000234" -> "1000339"  [label="DDG: sock"];
"1000234" -> "1000339"  [label="DDG: &len"];
"1000234" -> "1000406"  [label="DDG: sock"];
"1000234" -> "1000406"  [label="DDG: &len"];
"1000234" -> "1000480"  [label="DDG: sock"];
"1000232" -> "1000231"  [label="AST: "];
"1000233" -> "1000232"  [label="AST: "];
"1000253" -> "1000232"  [label="CFG: "];
"1000232" -> "1000577"  [label="DDG: apr_socket_recv(sock, &byte, &len)"];
"1000289" -> "1000287"  [label="AST: "];
"1000289" -> "1000295"  [label="CFG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000291" -> "1000289"  [label="AST: "];
"1000295" -> "1000289"  [label="AST: "];
"1000287" -> "1000289"  [label="CFG: "];
"1000289" -> "1000577"  [label="DDG: (char*) &payload_short"];
"1000289" -> "1000577"  [label="DDG: sock"];
"1000289" -> "1000577"  [label="DDG: &len"];
"1000289" -> "1000287"  [label="DDG: sock"];
"1000289" -> "1000287"  [label="DDG: (char*) &payload_short"];
"1000289" -> "1000287"  [label="DDG: &len"];
"1000406" -> "1000289"  [label="DDG: sock"];
"1000406" -> "1000289"  [label="DDG: &len"];
"1000339" -> "1000289"  [label="DDG: sock"];
"1000339" -> "1000289"  [label="DDG: &len"];
"1000168" -> "1000289"  [label="DDG: sock"];
"1000291" -> "1000289"  [label="DDG: &payload_short"];
"1000289" -> "1000339"  [label="DDG: sock"];
"1000289" -> "1000339"  [label="DDG: &len"];
"1000289" -> "1000406"  [label="DDG: sock"];
"1000289" -> "1000406"  [label="DDG: &len"];
"1000289" -> "1000480"  [label="DDG: sock"];
"1000287" -> "1000286"  [label="AST: "];
"1000288" -> "1000287"  [label="AST: "];
"1000311" -> "1000287"  [label="CFG: "];
"1000287" -> "1000577"  [label="DDG: apr_socket_recv(sock, (char*) &payload_short, &len)"];
"1000339" -> "1000337"  [label="AST: "];
"1000339" -> "1000345"  [label="CFG: "];
"1000340" -> "1000339"  [label="AST: "];
"1000341" -> "1000339"  [label="AST: "];
"1000345" -> "1000339"  [label="AST: "];
"1000337" -> "1000339"  [label="CFG: "];
"1000339" -> "1000577"  [label="DDG: sock"];
"1000339" -> "1000577"  [label="DDG: &len"];
"1000339" -> "1000577"  [label="DDG: (char*) &payload_long"];
"1000339" -> "1000337"  [label="DDG: sock"];
"1000339" -> "1000337"  [label="DDG: (char*) &payload_long"];
"1000339" -> "1000337"  [label="DDG: &len"];
"1000406" -> "1000339"  [label="DDG: sock"];
"1000406" -> "1000339"  [label="DDG: &len"];
"1000168" -> "1000339"  [label="DDG: sock"];
"1000341" -> "1000339"  [label="DDG: &payload_long"];
"1000339" -> "1000406"  [label="DDG: sock"];
"1000339" -> "1000406"  [label="DDG: &len"];
"1000339" -> "1000480"  [label="DDG: sock"];
"1000337" -> "1000336"  [label="AST: "];
"1000338" -> "1000337"  [label="AST: "];
"1000362" -> "1000337"  [label="CFG: "];
"1000337" -> "1000577"  [label="DDG: apr_socket_recv(sock, (char*) &payload_long, &len)"];
"1000406" -> "1000404"  [label="AST: "];
"1000406" -> "1000411"  [label="CFG: "];
"1000407" -> "1000406"  [label="AST: "];
"1000408" -> "1000406"  [label="AST: "];
"1000411" -> "1000406"  [label="AST: "];
"1000404" -> "1000406"  [label="CFG: "];
"1000406" -> "1000577"  [label="DDG: &len"];
"1000406" -> "1000577"  [label="DDG: sock"];
"1000406" -> "1000577"  [label="DDG: (char*) mask_bytes"];
"1000406" -> "1000404"  [label="DDG: sock"];
"1000406" -> "1000404"  [label="DDG: (char*) mask_bytes"];
"1000406" -> "1000404"  [label="DDG: &len"];
"1000168" -> "1000406"  [label="DDG: sock"];
"1000408" -> "1000406"  [label="DDG: mask_bytes"];
"1000406" -> "1000480"  [label="DDG: sock"];
"1000404" -> "1000403"  [label="AST: "];
"1000405" -> "1000404"  [label="AST: "];
"1000427" -> "1000404"  [label="CFG: "];
"1000404" -> "1000577"  [label="DDG: apr_socket_recv(sock, (char*) mask_bytes, &len)"];
"1000480" -> "1000478"  [label="AST: "];
"1000480" -> "1000485"  [label="CFG: "];
"1000481" -> "1000480"  [label="AST: "];
"1000482" -> "1000480"  [label="AST: "];
"1000485" -> "1000480"  [label="AST: "];
"1000478" -> "1000480"  [label="CFG: "];
"1000480" -> "1000577"  [label="DDG: sock"];
"1000480" -> "1000577"  [label="DDG: &received"];
"1000480" -> "1000577"  [label="DDG: buffer+at"];
"1000480" -> "1000478"  [label="DDG: sock"];
"1000480" -> "1000478"  [label="DDG: buffer+at"];
"1000480" -> "1000478"  [label="DDG: &received"];
"1000168" -> "1000480"  [label="DDG: sock"];
"1000462" -> "1000480"  [label="DDG: buffer[plen]"];
"1000453" -> "1000480"  [label="DDG: buffer"];
"1000495" -> "1000480"  [label="DDG: at"];
"1000449" -> "1000480"  [label="DDG: at"];
"1000478" -> "1000474"  [label="AST: "];
"1000479" -> "1000478"  [label="AST: "];
"1000489" -> "1000478"  [label="CFG: "];
"1000478" -> "1000577"  [label="DDG: rv"];
"1000478" -> "1000577"  [label="DDG: apr_socket_recv(sock, buffer+at, &received)"];
"1000244" -> "1000242"  [label="AST: "];
"1000244" -> "1000250"  [label="CFG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000248" -> "1000244"  [label="AST: "];
"1000250" -> "1000244"  [label="AST: "];
"1000242" -> "1000244"  [label="CFG: "];
"1000244" -> "1000577"  [label="DDG: &byte"];
"1000244" -> "1000577"  [label="DDG: r->connection"];
"1000244" -> "1000242"  [label="DDG: r->connection"];
"1000244" -> "1000242"  [label="DDG: &byte"];
"1000244" -> "1000242"  [label="DDG: 1"];
"1000301" -> "1000244"  [label="DDG: r->connection"];
"1000417" -> "1000244"  [label="DDG: r->connection"];
"1000170" -> "1000244"  [label="DDG: r->connection"];
"1000351" -> "1000244"  [label="DDG: r->connection"];
"1000244" -> "1000301"  [label="DDG: r->connection"];
"1000244" -> "1000351"  [label="DDG: r->connection"];
"1000244" -> "1000417"  [label="DDG: r->connection"];
"1000244" -> "1000509"  [label="DDG: r->connection"];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000242"  [label="AST: "];
"1000253" -> "1000242"  [label="CFG: "];
"1000242" -> "1000577"  [label="DDG: lua_websocket_readbytes(r->connection, &byte, 1)"];
"1000301" -> "1000299"  [label="AST: "];
"1000301" -> "1000309"  [label="CFG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000305" -> "1000301"  [label="AST: "];
"1000309" -> "1000301"  [label="AST: "];
"1000299" -> "1000301"  [label="CFG: "];
"1000301" -> "1000577"  [label="DDG: (char*) &payload_short"];
"1000301" -> "1000577"  [label="DDG: r->connection"];
"1000301" -> "1000299"  [label="DDG: r->connection"];
"1000301" -> "1000299"  [label="DDG: (char*) &payload_short"];
"1000301" -> "1000299"  [label="DDG: 2"];
"1000417" -> "1000301"  [label="DDG: r->connection"];
"1000170" -> "1000301"  [label="DDG: r->connection"];
"1000351" -> "1000301"  [label="DDG: r->connection"];
"1000305" -> "1000301"  [label="DDG: &payload_short"];
"1000301" -> "1000351"  [label="DDG: r->connection"];
"1000301" -> "1000417"  [label="DDG: r->connection"];
"1000301" -> "1000509"  [label="DDG: r->connection"];
"1000299" -> "1000298"  [label="AST: "];
"1000300" -> "1000299"  [label="AST: "];
"1000311" -> "1000299"  [label="CFG: "];
"1000299" -> "1000577"  [label="DDG: lua_websocket_readbytes(r->connection, \n                        (char*) &payload_short, 2)"];
"1000351" -> "1000349"  [label="AST: "];
"1000351" -> "1000359"  [label="CFG: "];
"1000352" -> "1000351"  [label="AST: "];
"1000355" -> "1000351"  [label="AST: "];
"1000359" -> "1000351"  [label="AST: "];
"1000349" -> "1000351"  [label="CFG: "];
"1000351" -> "1000577"  [label="DDG: r->connection"];
"1000351" -> "1000577"  [label="DDG: (char*) &payload_long"];
"1000351" -> "1000349"  [label="DDG: r->connection"];
"1000351" -> "1000349"  [label="DDG: (char*) &payload_long"];
"1000351" -> "1000349"  [label="DDG: 8"];
"1000417" -> "1000351"  [label="DDG: r->connection"];
"1000170" -> "1000351"  [label="DDG: r->connection"];
"1000355" -> "1000351"  [label="DDG: &payload_long"];
"1000351" -> "1000417"  [label="DDG: r->connection"];
"1000351" -> "1000509"  [label="DDG: r->connection"];
"1000349" -> "1000348"  [label="AST: "];
"1000350" -> "1000349"  [label="AST: "];
"1000362" -> "1000349"  [label="CFG: "];
"1000349" -> "1000577"  [label="DDG: lua_websocket_readbytes(r->connection, \n                            (char*) &payload_long, 8)"];
"1000417" -> "1000415"  [label="AST: "];
"1000417" -> "1000424"  [label="CFG: "];
"1000418" -> "1000417"  [label="AST: "];
"1000421" -> "1000417"  [label="AST: "];
"1000424" -> "1000417"  [label="AST: "];
"1000415" -> "1000417"  [label="CFG: "];
"1000417" -> "1000577"  [label="DDG: r->connection"];
"1000417" -> "1000577"  [label="DDG: (char*) mask_bytes"];
"1000417" -> "1000415"  [label="DDG: r->connection"];
"1000417" -> "1000415"  [label="DDG: (char*) mask_bytes"];
"1000417" -> "1000415"  [label="DDG: 4"];
"1000170" -> "1000417"  [label="DDG: r->connection"];
"1000421" -> "1000417"  [label="DDG: mask_bytes"];
"1000417" -> "1000509"  [label="DDG: r->connection"];
"1000415" -> "1000414"  [label="AST: "];
"1000416" -> "1000415"  [label="AST: "];
"1000427" -> "1000415"  [label="CFG: "];
"1000415" -> "1000577"  [label="DDG: lua_websocket_readbytes(r->connection, \n                            (char*) mask_bytes, 4)"];
"1000509" -> "1000507"  [label="AST: "];
"1000509" -> "1000514"  [label="CFG: "];
"1000510" -> "1000509"  [label="AST: "];
"1000513" -> "1000509"  [label="AST: "];
"1000514" -> "1000509"  [label="AST: "];
"1000507" -> "1000509"  [label="CFG: "];
"1000509" -> "1000577"  [label="DDG: remaining"];
"1000509" -> "1000577"  [label="DDG: r->connection"];
"1000509" -> "1000507"  [label="DDG: r->connection"];
"1000509" -> "1000507"  [label="DDG: buffer"];
"1000509" -> "1000507"  [label="DDG: remaining"];
"1000170" -> "1000509"  [label="DDG: r->connection"];
"1000462" -> "1000509"  [label="DDG: buffer[plen]"];
"1000453" -> "1000509"  [label="DDG: buffer"];
"1000444" -> "1000509"  [label="DDG: remaining"];
"1000509" -> "1000528"  [label="DDG: buffer"];
"1000509" -> "1000537"  [label="DDG: buffer"];
"1000507" -> "1000506"  [label="AST: "];
"1000508" -> "1000507"  [label="AST: "];
"1000516" -> "1000507"  [label="CFG: "];
"1000507" -> "1000577"  [label="DDG: lua_websocket_readbytes(r->connection, buffer, \n                            remaining)"];
"1000507" -> "1000577"  [label="DDG: rv"];
"1000528" -> "1000527"  [label="AST: "];
"1000528" -> "1000532"  [label="CFG: "];
"1000529" -> "1000528"  [label="AST: "];
"1000532" -> "1000528"  [label="AST: "];
"1000526" -> "1000528"  [label="CFG: "];
"1000528" -> "1000577"  [label="DDG: buffer[n] ^= mask_bytes[n%4]"];
"1000528" -> "1000577"  [label="DDG: buffer[n]"];
"1000528" -> "1000577"  [label="DDG: mask_bytes[n%4]"];
"1000453" -> "1000528"  [label="DDG: buffer"];
"1000462" -> "1000528"  [label="DDG: buffer[plen]"];
"1000421" -> "1000528"  [label="DDG: mask_bytes"];
"1000408" -> "1000528"  [label="DDG: mask_bytes"];
"1000161" -> "1000528"  [label="DDG: mask_bytes"];
"1000528" -> "1000537"  [label="DDG: buffer[n]"];
"1000537" -> "1000442"  [label="AST: "];
"1000537" -> "1000540"  [label="CFG: "];
"1000538" -> "1000537"  [label="AST: "];
"1000539" -> "1000537"  [label="AST: "];
"1000540" -> "1000537"  [label="AST: "];
"1000544" -> "1000537"  [label="CFG: "];
"1000537" -> "1000577"  [label="DDG: (size_t) plen"];
"1000537" -> "1000577"  [label="DDG: buffer"];
"1000537" -> "1000577"  [label="DDG: lua_pushlstring(L, buffer, (size_t) plen)"];
"1000149" -> "1000537"  [label="DDG: L"];
"1000115" -> "1000537"  [label="DDG: L"];
"1000462" -> "1000537"  [label="DDG: buffer[plen]"];
"1000453" -> "1000537"  [label="DDG: buffer"];
"1000540" -> "1000537"  [label="DDG: plen"];
"1000537" -> "1000543"  [label="DDG: L"];
"1000543" -> "1000442"  [label="AST: "];
"1000543" -> "1000545"  [label="CFG: "];
"1000544" -> "1000543"  [label="AST: "];
"1000545" -> "1000543"  [label="AST: "];
"1000547" -> "1000543"  [label="CFG: "];
"1000543" -> "1000577"  [label="DDG: lua_pushboolean(L, fin)"];
"1000543" -> "1000577"  [label="DDG: fin"];
"1000543" -> "1000577"  [label="DDG: L"];
"1000115" -> "1000543"  [label="DDG: L"];
}
