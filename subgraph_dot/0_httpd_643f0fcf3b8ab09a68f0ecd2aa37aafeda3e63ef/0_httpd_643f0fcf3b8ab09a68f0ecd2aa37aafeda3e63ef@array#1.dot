digraph "0_httpd_643f0fcf3b8ab09a68f0ecd2aa37aafeda3e63ef@array" {
"1000462" [label="(Call,buffer[plen] = 0)"];
"1000480" [label="(Call,apr_socket_recv(sock, buffer+at, &received))"];
"1000478" [label="(Call,rv = apr_socket_recv(sock, buffer+at, &received))"];
"1000482" [label="(Call,buffer+at)"];
"1000509" [label="(Call,lua_websocket_readbytes(r->connection, buffer, \n                            remaining))"];
"1000507" [label="(Call,rv = lua_websocket_readbytes(r->connection, buffer, \n                            remaining))"];
"1000528" [label="(Call,buffer[n] ^= mask_bytes[n%4])"];
"1000537" [label="(Call,lua_pushlstring(L, buffer, (size_t) plen))"];
"1000543" [label="(Call,lua_pushboolean(L, fin))"];
"1000301" [label="(Call,lua_websocket_readbytes(r->connection, \n                        (char*) &payload_short, 2))"];
"1000195" [label="(Call,lua_websocket_readbytes(r->connection, &byte, 1))"];
"1000482" [label="(Call,buffer+at)"];
"1000170" [label="(Call,ap_get_conn_socket(r->connection))"];
"1000513" [label="(Identifier,buffer)"];
"1000474" [label="(Block,)"];
"1000485" [label="(Call,&received)"];
"1000529" [label="(Call,buffer[n])"];
"1000508" [label="(Identifier,rv)"];
"1000481" [label="(Identifier,sock)"];
"1000480" [label="(Call,apr_socket_recv(sock, buffer+at, &received))"];
"1000444" [label="(Call,remaining = plen)"];
"1000527" [label="(Block,)"];
"1000495" [label="(Call,at += received)"];
"1000514" [label="(Identifier,remaining)"];
"1000442" [label="(Block,)"];
"1000484" [label="(Identifier,at)"];
"1000408" [label="(Call,(char*) mask_bytes)"];
"1000479" [label="(Identifier,rv)"];
"1000489" [label="(Identifier,received)"];
"1000509" [label="(Call,lua_websocket_readbytes(r->connection, buffer, \n                            remaining))"];
"1000466" [label="(Literal,0)"];
"1000540" [label="(Call,(size_t) plen)"];
"1000468" [label="(Identifier,plaintext)"];
"1000544" [label="(Identifier,L)"];
"1000547" [label="(Literal,2)"];
"1000543" [label="(Call,lua_pushboolean(L, fin))"];
"1000486" [label="(Identifier,received)"];
"1000545" [label="(Identifier,fin)"];
"1000507" [label="(Call,rv = lua_websocket_readbytes(r->connection, buffer, \n                            remaining))"];
"1000244" [label="(Call,lua_websocket_readbytes(r->connection, &byte, 1))"];
"1000463" [label="(Call,buffer[plen])"];
"1000506" [label="(Block,)"];
"1000462" [label="(Call,buffer[plen] = 0)"];
"1000339" [label="(Call,apr_socket_recv(sock, (char*) &payload_long, &len))"];
"1000453" [label="(Call,*buffer = apr_palloc(r->pool, plen+1))"];
"1000537" [label="(Call,lua_pushlstring(L, buffer, (size_t) plen))"];
"1000115" [label="(MethodParameterIn,lua_State *L)"];
"1000406" [label="(Call,apr_socket_recv(sock, (char*) mask_bytes, &len))"];
"1000289" [label="(Call,apr_socket_recv(sock, (char*) &payload_short, &len))"];
"1000510" [label="(Call,r->connection)"];
"1000449" [label="(Call,at = 0)"];
"1000538" [label="(Identifier,L)"];
"1000149" [label="(Call,ap_lua_check_request_rec(L, 1))"];
"1000567" [label="(Call,apr_socket_send(sock, frame, &plen))"];
"1000185" [label="(Call,apr_socket_recv(sock, &byte, &len))"];
"1000483" [label="(Identifier,buffer)"];
"1000417" [label="(Call,lua_websocket_readbytes(r->connection, \n                            (char*) mask_bytes, 4))"];
"1000351" [label="(Call,lua_websocket_readbytes(r->connection, \n                            (char*) &payload_long, 8))"];
"1000516" [label="(Identifier,mask)"];
"1000539" [label="(Identifier,buffer)"];
"1000161" [label="(Call,mask_bytes = apr_pcalloc(r->pool, 4))"];
"1000526" [label="(Identifier,n)"];
"1000234" [label="(Call,apr_socket_recv(sock, &byte, &len))"];
"1000528" [label="(Call,buffer[n] ^= mask_bytes[n%4])"];
"1000421" [label="(Call,(char*) mask_bytes)"];
"1000478" [label="(Call,rv = apr_socket_recv(sock, buffer+at, &received))"];
"1000168" [label="(Call,sock = ap_get_conn_socket(r->connection))"];
"1000577" [label="(MethodReturn,static int)"];
"1000532" [label="(Call,mask_bytes[n%4])"];
"1000462" -> "1000442"  [label="AST: "];
"1000462" -> "1000466"  [label="CFG: "];
"1000463" -> "1000462"  [label="AST: "];
"1000466" -> "1000462"  [label="AST: "];
"1000468" -> "1000462"  [label="CFG: "];
"1000462" -> "1000577"  [label="DDG: buffer[plen]"];
"1000462" -> "1000480"  [label="DDG: buffer[plen]"];
"1000462" -> "1000482"  [label="DDG: buffer[plen]"];
"1000462" -> "1000509"  [label="DDG: buffer[plen]"];
"1000462" -> "1000528"  [label="DDG: buffer[plen]"];
"1000462" -> "1000537"  [label="DDG: buffer[plen]"];
"1000480" -> "1000478"  [label="AST: "];
"1000480" -> "1000485"  [label="CFG: "];
"1000481" -> "1000480"  [label="AST: "];
"1000482" -> "1000480"  [label="AST: "];
"1000485" -> "1000480"  [label="AST: "];
"1000478" -> "1000480"  [label="CFG: "];
"1000480" -> "1000577"  [label="DDG: sock"];
"1000480" -> "1000577"  [label="DDG: &received"];
"1000480" -> "1000577"  [label="DDG: buffer+at"];
"1000480" -> "1000478"  [label="DDG: sock"];
"1000480" -> "1000478"  [label="DDG: buffer+at"];
"1000480" -> "1000478"  [label="DDG: &received"];
"1000185" -> "1000480"  [label="DDG: sock"];
"1000567" -> "1000480"  [label="DDG: sock"];
"1000406" -> "1000480"  [label="DDG: sock"];
"1000339" -> "1000480"  [label="DDG: sock"];
"1000289" -> "1000480"  [label="DDG: sock"];
"1000168" -> "1000480"  [label="DDG: sock"];
"1000234" -> "1000480"  [label="DDG: sock"];
"1000453" -> "1000480"  [label="DDG: buffer"];
"1000495" -> "1000480"  [label="DDG: at"];
"1000449" -> "1000480"  [label="DDG: at"];
"1000478" -> "1000474"  [label="AST: "];
"1000479" -> "1000478"  [label="AST: "];
"1000489" -> "1000478"  [label="CFG: "];
"1000478" -> "1000577"  [label="DDG: rv"];
"1000478" -> "1000577"  [label="DDG: apr_socket_recv(sock, buffer+at, &received)"];
"1000482" -> "1000484"  [label="CFG: "];
"1000483" -> "1000482"  [label="AST: "];
"1000484" -> "1000482"  [label="AST: "];
"1000486" -> "1000482"  [label="CFG: "];
"1000453" -> "1000482"  [label="DDG: buffer"];
"1000495" -> "1000482"  [label="DDG: at"];
"1000449" -> "1000482"  [label="DDG: at"];
"1000509" -> "1000507"  [label="AST: "];
"1000509" -> "1000514"  [label="CFG: "];
"1000510" -> "1000509"  [label="AST: "];
"1000513" -> "1000509"  [label="AST: "];
"1000514" -> "1000509"  [label="AST: "];
"1000507" -> "1000509"  [label="CFG: "];
"1000509" -> "1000577"  [label="DDG: remaining"];
"1000509" -> "1000577"  [label="DDG: r->connection"];
"1000509" -> "1000507"  [label="DDG: r->connection"];
"1000509" -> "1000507"  [label="DDG: buffer"];
"1000509" -> "1000507"  [label="DDG: remaining"];
"1000301" -> "1000509"  [label="DDG: r->connection"];
"1000417" -> "1000509"  [label="DDG: r->connection"];
"1000170" -> "1000509"  [label="DDG: r->connection"];
"1000351" -> "1000509"  [label="DDG: r->connection"];
"1000244" -> "1000509"  [label="DDG: r->connection"];
"1000195" -> "1000509"  [label="DDG: r->connection"];
"1000453" -> "1000509"  [label="DDG: buffer"];
"1000444" -> "1000509"  [label="DDG: remaining"];
"1000509" -> "1000528"  [label="DDG: buffer"];
"1000509" -> "1000537"  [label="DDG: buffer"];
"1000507" -> "1000506"  [label="AST: "];
"1000508" -> "1000507"  [label="AST: "];
"1000516" -> "1000507"  [label="CFG: "];
"1000507" -> "1000577"  [label="DDG: lua_websocket_readbytes(r->connection, buffer, \n                            remaining)"];
"1000507" -> "1000577"  [label="DDG: rv"];
"1000528" -> "1000527"  [label="AST: "];
"1000528" -> "1000532"  [label="CFG: "];
"1000529" -> "1000528"  [label="AST: "];
"1000532" -> "1000528"  [label="AST: "];
"1000526" -> "1000528"  [label="CFG: "];
"1000528" -> "1000577"  [label="DDG: buffer[n] ^= mask_bytes[n%4]"];
"1000528" -> "1000577"  [label="DDG: buffer[n]"];
"1000528" -> "1000577"  [label="DDG: mask_bytes[n%4]"];
"1000453" -> "1000528"  [label="DDG: buffer"];
"1000421" -> "1000528"  [label="DDG: mask_bytes"];
"1000408" -> "1000528"  [label="DDG: mask_bytes"];
"1000161" -> "1000528"  [label="DDG: mask_bytes"];
"1000528" -> "1000537"  [label="DDG: buffer[n]"];
"1000537" -> "1000442"  [label="AST: "];
"1000537" -> "1000540"  [label="CFG: "];
"1000538" -> "1000537"  [label="AST: "];
"1000539" -> "1000537"  [label="AST: "];
"1000540" -> "1000537"  [label="AST: "];
"1000544" -> "1000537"  [label="CFG: "];
"1000537" -> "1000577"  [label="DDG: (size_t) plen"];
"1000537" -> "1000577"  [label="DDG: buffer"];
"1000537" -> "1000577"  [label="DDG: lua_pushlstring(L, buffer, (size_t) plen)"];
"1000149" -> "1000537"  [label="DDG: L"];
"1000115" -> "1000537"  [label="DDG: L"];
"1000453" -> "1000537"  [label="DDG: buffer"];
"1000540" -> "1000537"  [label="DDG: plen"];
"1000537" -> "1000543"  [label="DDG: L"];
"1000543" -> "1000442"  [label="AST: "];
"1000543" -> "1000545"  [label="CFG: "];
"1000544" -> "1000543"  [label="AST: "];
"1000545" -> "1000543"  [label="AST: "];
"1000547" -> "1000543"  [label="CFG: "];
"1000543" -> "1000577"  [label="DDG: lua_pushboolean(L, fin)"];
"1000543" -> "1000577"  [label="DDG: fin"];
"1000543" -> "1000577"  [label="DDG: L"];
"1000115" -> "1000543"  [label="DDG: L"];
}
