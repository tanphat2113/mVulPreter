digraph "0_savannah_f290f48a621867084884bfff87f8093c15195e6a@pointer" {
"1000894" [label="(Call,! *v)"];
"1000898" [label="(Call,(unsigned char) *v)"];
"1000894" [label="(Call,! *v)"];
"1000893" [label="(Call,! *v || ISSPACE ((unsigned char) *v))"];
"1000886" [label="(Call,(v = skip_hex_digits (u + 2))\n\t\t&& (! *v || ISSPACE ((unsigned char) *v)))"];
"1000880" [label="(Call,u[1] == '.'\n\t\t&& (v = skip_hex_digits (u + 2))\n\t\t&& (! *v || ISSPACE ((unsigned char) *v)))"];
"1000874" [label="(Call,u[0] == '.' && u[1] == '.'\n\t\t&& (v = skip_hex_digits (u + 2))\n\t\t&& (! *v || ISSPACE ((unsigned char) *v)))"];
"1000867" [label="(Call,(u = skip_hex_digits (s + 6))\n\t\t&& u[0] == '.' && u[1] == '.'\n\t\t&& (v = skip_hex_digits (u + 2))\n\t\t&& (! *v || ISSPACE ((unsigned char) *v)))"];
"1000897" [label="(Call,ISSPACE ((unsigned char) *v))"];
"1002164" [label="(MethodReturn,RET)"];
"1000886" [label="(Call,(v = skip_hex_digits (u + 2))\n\t\t&& (! *v || ISSPACE ((unsigned char) *v)))"];
"1000866" [label="(ControlStructure,if ((u = skip_hex_digits (s + 6))\n\t\t&& u[0] == '.' && u[1] == '.'\n\t\t&& (v = skip_hex_digits (u + 2))\n\t\t&& (! *v || ISSPACE ((unsigned char) *v))))"];
"1001208" [label="(Identifier,need_header)"];
"1000881" [label="(Call,u[1] == '.')"];
"1000897" [label="(Call,ISSPACE ((unsigned char) *v))"];
"1000874" [label="(Call,u[0] == '.' && u[1] == '.'\n\t\t&& (v = skip_hex_digits (u + 2))\n\t\t&& (! *v || ISSPACE ((unsigned char) *v)))"];
"1000870" [label="(Call,skip_hex_digits (s + 6))"];
"1000895" [label="(Call,*v)"];
"1000887" [label="(Call,v = skip_hex_digits (u + 2))"];
"1000867" [label="(Call,(u = skip_hex_digits (s + 6))\n\t\t&& u[0] == '.' && u[1] == '.'\n\t\t&& (v = skip_hex_digits (u + 2))\n\t\t&& (! *v || ISSPACE ((unsigned char) *v)))"];
"1000889" [label="(Call,skip_hex_digits (u + 2))"];
"1000875" [label="(Call,u[0] == '.')"];
"1000880" [label="(Call,u[1] == '.'\n\t\t&& (v = skip_hex_digits (u + 2))\n\t\t&& (! *v || ISSPACE ((unsigned char) *v)))"];
"1000900" [label="(Call,*v)"];
"1000898" [label="(Call,(unsigned char) *v)"];
"1000868" [label="(Call,u = skip_hex_digits (s + 6))"];
"1000906" [label="(Identifier,p_sha1)"];
"1000893" [label="(Call,! *v || ISSPACE ((unsigned char) *v))"];
"1000894" [label="(Call,! *v)"];
"1000894" -> "1000893"  [label="AST: "];
"1000894" -> "1000895"  [label="CFG: "];
"1000895" -> "1000894"  [label="AST: "];
"1000899" -> "1000894"  [label="CFG: "];
"1000893" -> "1000894"  [label="CFG: "];
"1000894" -> "1002164"  [label="DDG: *v"];
"1000894" -> "1000893"  [label="DDG: *v"];
"1000898" -> "1000894"  [label="DDG: *v"];
"1000894" -> "1000898"  [label="DDG: *v"];
"1000898" -> "1000897"  [label="AST: "];
"1000898" -> "1000900"  [label="CFG: "];
"1000899" -> "1000898"  [label="AST: "];
"1000900" -> "1000898"  [label="AST: "];
"1000897" -> "1000898"  [label="CFG: "];
"1000898" -> "1002164"  [label="DDG: *v"];
"1000898" -> "1000897"  [label="DDG: *v"];
"1000893" -> "1000886"  [label="AST: "];
"1000893" -> "1000897"  [label="CFG: "];
"1000897" -> "1000893"  [label="AST: "];
"1000886" -> "1000893"  [label="CFG: "];
"1000893" -> "1002164"  [label="DDG: ISSPACE ((unsigned char) *v)"];
"1000893" -> "1002164"  [label="DDG: ! *v"];
"1000893" -> "1000886"  [label="DDG: ! *v"];
"1000893" -> "1000886"  [label="DDG: ISSPACE ((unsigned char) *v)"];
"1000897" -> "1000893"  [label="DDG: (unsigned char) *v"];
"1000886" -> "1000880"  [label="AST: "];
"1000886" -> "1000887"  [label="CFG: "];
"1000887" -> "1000886"  [label="AST: "];
"1000880" -> "1000886"  [label="CFG: "];
"1000886" -> "1002164"  [label="DDG: ! *v || ISSPACE ((unsigned char) *v)"];
"1000886" -> "1000880"  [label="DDG: ! *v || ISSPACE ((unsigned char) *v)"];
"1000887" -> "1000886"  [label="DDG: v"];
"1000889" -> "1000886"  [label="DDG: u + 2"];
"1000880" -> "1000874"  [label="AST: "];
"1000880" -> "1000881"  [label="CFG: "];
"1000881" -> "1000880"  [label="AST: "];
"1000874" -> "1000880"  [label="CFG: "];
"1000880" -> "1002164"  [label="DDG: u[1] == '.'"];
"1000880" -> "1002164"  [label="DDG: (v = skip_hex_digits (u + 2))\n\t\t&& (! *v || ISSPACE ((unsigned char) *v))"];
"1000880" -> "1000874"  [label="DDG: u[1] == '.'"];
"1000880" -> "1000874"  [label="DDG: (v = skip_hex_digits (u + 2))\n\t\t&& (! *v || ISSPACE ((unsigned char) *v))"];
"1000881" -> "1000880"  [label="DDG: u[1]"];
"1000881" -> "1000880"  [label="DDG: '.'"];
"1000874" -> "1000867"  [label="AST: "];
"1000874" -> "1000875"  [label="CFG: "];
"1000875" -> "1000874"  [label="AST: "];
"1000867" -> "1000874"  [label="CFG: "];
"1000874" -> "1002164"  [label="DDG: u[0] == '.'"];
"1000874" -> "1002164"  [label="DDG: u[1] == '.'\n\t\t&& (v = skip_hex_digits (u + 2))\n\t\t&& (! *v || ISSPACE ((unsigned char) *v))"];
"1000874" -> "1000867"  [label="DDG: u[0] == '.'"];
"1000874" -> "1000867"  [label="DDG: u[1] == '.'\n\t\t&& (v = skip_hex_digits (u + 2))\n\t\t&& (! *v || ISSPACE ((unsigned char) *v))"];
"1000875" -> "1000874"  [label="DDG: u[0]"];
"1000875" -> "1000874"  [label="DDG: '.'"];
"1000867" -> "1000866"  [label="AST: "];
"1000867" -> "1000868"  [label="CFG: "];
"1000868" -> "1000867"  [label="AST: "];
"1000906" -> "1000867"  [label="CFG: "];
"1001208" -> "1000867"  [label="CFG: "];
"1000867" -> "1002164"  [label="DDG: (u = skip_hex_digits (s + 6))\n\t\t&& u[0] == '.' && u[1] == '.'\n\t\t&& (v = skip_hex_digits (u + 2))\n\t\t&& (! *v || ISSPACE ((unsigned char) *v))"];
"1000867" -> "1002164"  [label="DDG: u[0] == '.' && u[1] == '.'\n\t\t&& (v = skip_hex_digits (u + 2))\n\t\t&& (! *v || ISSPACE ((unsigned char) *v))"];
"1000868" -> "1000867"  [label="DDG: u"];
"1000870" -> "1000867"  [label="DDG: s + 6"];
"1000897" -> "1002164"  [label="DDG: (unsigned char) *v"];
}
