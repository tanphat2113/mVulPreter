digraph "0_linux_d9092f52d7e61dd1557f2db2400ddb430e85937e@pointer" {
"1000501" [label="(Call,ctxt->modrm & 0xc0)"];
"1000470" [label="(Call,ctxt->modrm = insn_fetch(u8, ctxt))"];
"1000474" [label="(Call,insn_fetch(u8, ctxt))"];
"1000421" [label="(Call,insn_fetch(u8, ctxt))"];
"1000277" [label="(Call,insn_fetch(u8, ctxt))"];
"1000221" [label="(Call,__do_insn_fetch_bytes(ctxt, 1))"];
"1000130" [label="(MethodParameterIn,struct x86_emulate_ctxt *ctxt)"];
"1000447" [label="(Call,insn_fetch(u8, ctxt))"];
"1000500" [label="(Call,(ctxt->modrm & 0xc0) == 0xc0)"];
"1000496" [label="(Call,mode == X86EMUL_MODE_PROT64 || (ctxt->modrm & 0xc0) == 0xc0)"];
"1000484" [label="(Call,(ctxt->b == 0xc5 || ctxt->b == 0xc4) &&\n\t    (mode == X86EMUL_MODE_PROT64 || (ctxt->modrm & 0xc0) == 0xc0))"];
"1000478" [label="(Call,ctxt->opcode_len == 1 && (ctxt->b == 0xc5 || ctxt->b == 0xc4) &&\n\t    (mode == X86EMUL_MODE_PROT64 || (ctxt->modrm & 0xc0) == 0xc0))"];
"1000531" [label="(Call,ctxt->modrm >> 3)"];
"1000530" [label="(Call,(ctxt->modrm >> 3) & 7)"];
"1000528" [label="(Call,goffset = (ctxt->modrm >> 3) & 7)"];
"1000551" [label="(Call,ctxt->modrm >> 3)"];
"1000550" [label="(Call,(ctxt->modrm >> 3) & 7)"];
"1000548" [label="(Call,goffset = (ctxt->modrm >> 3) & 7)"];
"1000559" [label="(Call,ctxt->modrm >> 6)"];
"1000558" [label="(Call,(ctxt->modrm >> 6) == 3)"];
"1000592" [label="(Call,ctxt->modrm & 7)"];
"1000590" [label="(Call,goffset = ctxt->modrm & 7)"];
"1000674" [label="(Call,ctxt->modrm > 0xbf)"];
"1000689" [label="(Call,ctxt->modrm - 0xc0)"];
"1000716" [label="(Call,ctxt->modrm >> 6)"];
"1000715" [label="(Call,(ctxt->modrm >> 6) == 3)"];
"1000706" [label="(Call,ctxt->modrm >> 3)"];
"1000705" [label="(Call,(ctxt->modrm >> 3) & 7)"];
"1000720" [label="(Literal,6)"];
"1000689" [label="(Call,ctxt->modrm - 0xc0)"];
"1001053" [label="(Call,decode_operand(ctxt, &ctxt->src2, (ctxt->d >> Src2Shift) & OpMask))"];
"1000690" [label="(Call,ctxt->modrm)"];
"1000591" [label="(Identifier,goffset)"];
"1000558" [label="(Call,(ctxt->modrm >> 6) == 3)"];
"1000532" [label="(Call,ctxt->modrm)"];
"1000678" [label="(Literal,0xbf)"];
"1000598" [label="(Identifier,opcode)"];
"1000681" [label="(Call,opcode.u.esc->high[ctxt->modrm - 0xc0])"];
"1000279" [label="(Identifier,ctxt)"];
"1000531" [label="(Call,ctxt->modrm >> 3)"];
"1000278" [label="(Identifier,u8)"];
"1000423" [label="(Identifier,ctxt)"];
"1000481" [label="(Identifier,ctxt)"];
"1000130" [label="(MethodParameterIn,struct x86_emulate_ctxt *ctxt)"];
"1000714" [label="(ControlStructure,if ((ctxt->modrm >> 6) == 3))"];
"1000273" [label="(Call,ctxt->b = insn_fetch(u8, ctxt))"];
"1000590" [label="(Call,goffset = ctxt->modrm & 7)"];
"1000723" [label="(Identifier,opcode)"];
"1000535" [label="(Literal,3)"];
"1000421" [label="(Call,insn_fetch(u8, ctxt))"];
"1000529" [label="(Identifier,goffset)"];
"1001128" [label="(MethodReturn,int)"];
"1000471" [label="(Call,ctxt->modrm)"];
"1000536" [label="(Literal,7)"];
"1000484" [label="(Call,(ctxt->b == 0xc5 || ctxt->b == 0xc4) &&\n\t    (mode == X86EMUL_MODE_PROT64 || (ctxt->modrm & 0xc0) == 0xc0))"];
"1000501" [label="(Call,ctxt->modrm & 0xc0)"];
"1001033" [label="(Call,decode_operand(ctxt, &ctxt->src, (ctxt->d >> SrcShift) & OpMask))"];
"1000422" [label="(Identifier,u8)"];
"1000717" [label="(Call,ctxt->modrm)"];
"1000551" [label="(Call,ctxt->modrm >> 3)"];
"1000538" [label="(Identifier,opcode)"];
"1000510" [label="(Identifier,ctxt)"];
"1000705" [label="(Call,(ctxt->modrm >> 3) & 7)"];
"1000496" [label="(Call,mode == X86EMUL_MODE_PROT64 || (ctxt->modrm & 0xc0) == 0xc0)"];
"1000530" [label="(Call,(ctxt->modrm >> 3) & 7)"];
"1000592" [label="(Call,ctxt->modrm & 7)"];
"1000596" [label="(Literal,7)"];
"1000706" [label="(Call,ctxt->modrm >> 3)"];
"1000223" [label="(Literal,1)"];
"1000550" [label="(Call,(ctxt->modrm >> 3) & 7)"];
"1000448" [label="(Identifier,u8)"];
"1001105" [label="(Call,address_mask(ctxt,\n \t\t\t\t\tctxt->memopp->addr.mem.ea + ctxt->_eip))"];
"1000673" [label="(ControlStructure,if (ctxt->modrm > 0xbf))"];
"1000566" [label="(Identifier,opcode)"];
"1000516" [label="(Identifier,ctxt)"];
"1000219" [label="(Call,rc = __do_insn_fetch_bytes(ctxt, 1))"];
"1000500" [label="(Call,(ctxt->modrm & 0xc0) == 0xc0)"];
"1000505" [label="(Literal,0xc0)"];
"1000552" [label="(Call,ctxt->modrm)"];
"1000707" [label="(Call,ctxt->modrm)"];
"1000716" [label="(Call,ctxt->modrm >> 6)"];
"1000485" [label="(Call,ctxt->b == 0xc5 || ctxt->b == 0xc4)"];
"1000477" [label="(ControlStructure,if (ctxt->opcode_len == 1 && (ctxt->b == 0xc5 || ctxt->b == 0xc4) &&\n\t    (mode == X86EMUL_MODE_PROT64 || (ctxt->modrm & 0xc0) == 0xc0)))"];
"1000475" [label="(Identifier,u8)"];
"1000221" [label="(Call,__do_insn_fetch_bytes(ctxt, 1))"];
"1000559" [label="(Call,ctxt->modrm >> 6)"];
"1000478" [label="(Call,ctxt->opcode_len == 1 && (ctxt->b == 0xc5 || ctxt->b == 0xc4) &&\n\t    (mode == X86EMUL_MODE_PROT64 || (ctxt->modrm & 0xc0) == 0xc0))"];
"1000417" [label="(Call,ctxt->b = insn_fetch(u8, ctxt))"];
"1000733" [label="(Identifier,opcode)"];
"1000675" [label="(Call,ctxt->modrm)"];
"1000548" [label="(Call,goffset = (ctxt->modrm >> 3) & 7)"];
"1001073" [label="(Call,decode_operand(ctxt, &ctxt->dst, (ctxt->d >> DstShift) & OpMask))"];
"1000449" [label="(Identifier,ctxt)"];
"1000502" [label="(Call,ctxt->modrm)"];
"1000443" [label="(Call,ctxt->b = insn_fetch(u8, ctxt))"];
"1000721" [label="(Literal,3)"];
"1000476" [label="(Identifier,ctxt)"];
"1000578" [label="(Identifier,opcode)"];
"1000528" [label="(Call,goffset = (ctxt->modrm >> 3) & 7)"];
"1000555" [label="(Literal,3)"];
"1000693" [label="(Literal,0xc0)"];
"1000710" [label="(Literal,3)"];
"1000999" [label="(Call,decode_abs(ctxt, &ctxt->memop))"];
"1000557" [label="(ControlStructure,if ((ctxt->modrm >> 6) == 3))"];
"1000464" [label="(ControlStructure,if (ctxt->d & ModRM))"];
"1000447" [label="(Call,insn_fetch(u8, ctxt))"];
"1000680" [label="(Identifier,opcode)"];
"1000561" [label="(Identifier,ctxt)"];
"1000711" [label="(Literal,7)"];
"1000715" [label="(Call,(ctxt->modrm >> 6) == 3)"];
"1000470" [label="(Call,ctxt->modrm = insn_fetch(u8, ctxt))"];
"1000506" [label="(Literal,0xc0)"];
"1000563" [label="(Literal,6)"];
"1000222" [label="(Identifier,ctxt)"];
"1000556" [label="(Literal,7)"];
"1000497" [label="(Call,mode == X86EMUL_MODE_PROT64)"];
"1000479" [label="(Call,ctxt->opcode_len == 1)"];
"1000970" [label="(Call,decode_modrm(ctxt, &ctxt->memop))"];
"1000674" [label="(Call,ctxt->modrm > 0xbf)"];
"1000696" [label="(Identifier,opcode)"];
"1000277" [label="(Call,insn_fetch(u8, ctxt))"];
"1000526" [label="(Block,)"];
"1000549" [label="(Identifier,goffset)"];
"1000560" [label="(Call,ctxt->modrm)"];
"1000593" [label="(Call,ctxt->modrm)"];
"1000564" [label="(Literal,3)"];
"1000697" [label="(Call,opcode.u.esc->op[(ctxt->modrm >> 3) & 7])"];
"1000474" [label="(Call,insn_fetch(u8, ctxt))"];
"1000501" -> "1000500"  [label="AST: "];
"1000501" -> "1000505"  [label="CFG: "];
"1000502" -> "1000501"  [label="AST: "];
"1000505" -> "1000501"  [label="AST: "];
"1000506" -> "1000501"  [label="CFG: "];
"1000501" -> "1001128"  [label="DDG: ctxt->modrm"];
"1000501" -> "1000500"  [label="DDG: ctxt->modrm"];
"1000501" -> "1000500"  [label="DDG: 0xc0"];
"1000470" -> "1000501"  [label="DDG: ctxt->modrm"];
"1000501" -> "1000531"  [label="DDG: ctxt->modrm"];
"1000501" -> "1000551"  [label="DDG: ctxt->modrm"];
"1000501" -> "1000592"  [label="DDG: ctxt->modrm"];
"1000501" -> "1000674"  [label="DDG: ctxt->modrm"];
"1000501" -> "1000716"  [label="DDG: ctxt->modrm"];
"1000470" -> "1000464"  [label="AST: "];
"1000470" -> "1000474"  [label="CFG: "];
"1000471" -> "1000470"  [label="AST: "];
"1000474" -> "1000470"  [label="AST: "];
"1000481" -> "1000470"  [label="CFG: "];
"1000470" -> "1001128"  [label="DDG: insn_fetch(u8, ctxt)"];
"1000470" -> "1001128"  [label="DDG: ctxt->modrm"];
"1000474" -> "1000470"  [label="DDG: u8"];
"1000474" -> "1000470"  [label="DDG: ctxt"];
"1000470" -> "1000531"  [label="DDG: ctxt->modrm"];
"1000470" -> "1000551"  [label="DDG: ctxt->modrm"];
"1000470" -> "1000592"  [label="DDG: ctxt->modrm"];
"1000470" -> "1000674"  [label="DDG: ctxt->modrm"];
"1000470" -> "1000716"  [label="DDG: ctxt->modrm"];
"1000474" -> "1000476"  [label="CFG: "];
"1000475" -> "1000474"  [label="AST: "];
"1000476" -> "1000474"  [label="AST: "];
"1000474" -> "1001128"  [label="DDG: ctxt"];
"1000474" -> "1001128"  [label="DDG: u8"];
"1000421" -> "1000474"  [label="DDG: u8"];
"1000421" -> "1000474"  [label="DDG: ctxt"];
"1000277" -> "1000474"  [label="DDG: u8"];
"1000277" -> "1000474"  [label="DDG: ctxt"];
"1000447" -> "1000474"  [label="DDG: u8"];
"1000447" -> "1000474"  [label="DDG: ctxt"];
"1000130" -> "1000474"  [label="DDG: ctxt"];
"1000474" -> "1000970"  [label="DDG: ctxt"];
"1000474" -> "1000999"  [label="DDG: ctxt"];
"1000474" -> "1001033"  [label="DDG: ctxt"];
"1000421" -> "1000417"  [label="AST: "];
"1000421" -> "1000423"  [label="CFG: "];
"1000422" -> "1000421"  [label="AST: "];
"1000423" -> "1000421"  [label="AST: "];
"1000417" -> "1000421"  [label="CFG: "];
"1000421" -> "1001128"  [label="DDG: ctxt"];
"1000421" -> "1001128"  [label="DDG: u8"];
"1000421" -> "1000417"  [label="DDG: u8"];
"1000421" -> "1000417"  [label="DDG: ctxt"];
"1000277" -> "1000421"  [label="DDG: u8"];
"1000277" -> "1000421"  [label="DDG: ctxt"];
"1000130" -> "1000421"  [label="DDG: ctxt"];
"1000421" -> "1000447"  [label="DDG: u8"];
"1000421" -> "1000447"  [label="DDG: ctxt"];
"1000421" -> "1000970"  [label="DDG: ctxt"];
"1000421" -> "1000999"  [label="DDG: ctxt"];
"1000421" -> "1001033"  [label="DDG: ctxt"];
"1000277" -> "1000273"  [label="AST: "];
"1000277" -> "1000279"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000277"  [label="AST: "];
"1000273" -> "1000277"  [label="CFG: "];
"1000277" -> "1001128"  [label="DDG: u8"];
"1000277" -> "1001128"  [label="DDG: ctxt"];
"1000277" -> "1000273"  [label="DDG: u8"];
"1000277" -> "1000273"  [label="DDG: ctxt"];
"1000221" -> "1000277"  [label="DDG: ctxt"];
"1000130" -> "1000277"  [label="DDG: ctxt"];
"1000277" -> "1000970"  [label="DDG: ctxt"];
"1000277" -> "1000999"  [label="DDG: ctxt"];
"1000277" -> "1001033"  [label="DDG: ctxt"];
"1000221" -> "1000219"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000219" -> "1000221"  [label="CFG: "];
"1000221" -> "1001128"  [label="DDG: ctxt"];
"1000221" -> "1000219"  [label="DDG: ctxt"];
"1000221" -> "1000219"  [label="DDG: 1"];
"1000130" -> "1000221"  [label="DDG: ctxt"];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1001128"  [label="DDG: ctxt"];
"1000130" -> "1000447"  [label="DDG: ctxt"];
"1000130" -> "1000970"  [label="DDG: ctxt"];
"1000130" -> "1000999"  [label="DDG: ctxt"];
"1000130" -> "1001033"  [label="DDG: ctxt"];
"1000130" -> "1001053"  [label="DDG: ctxt"];
"1000130" -> "1001073"  [label="DDG: ctxt"];
"1000130" -> "1001105"  [label="DDG: ctxt"];
"1000447" -> "1000443"  [label="AST: "];
"1000447" -> "1000449"  [label="CFG: "];
"1000448" -> "1000447"  [label="AST: "];
"1000449" -> "1000447"  [label="AST: "];
"1000443" -> "1000447"  [label="CFG: "];
"1000447" -> "1001128"  [label="DDG: ctxt"];
"1000447" -> "1001128"  [label="DDG: u8"];
"1000447" -> "1000443"  [label="DDG: u8"];
"1000447" -> "1000443"  [label="DDG: ctxt"];
"1000447" -> "1000970"  [label="DDG: ctxt"];
"1000447" -> "1000999"  [label="DDG: ctxt"];
"1000447" -> "1001033"  [label="DDG: ctxt"];
"1000500" -> "1000496"  [label="AST: "];
"1000500" -> "1000506"  [label="CFG: "];
"1000506" -> "1000500"  [label="AST: "];
"1000496" -> "1000500"  [label="CFG: "];
"1000500" -> "1001128"  [label="DDG: ctxt->modrm & 0xc0"];
"1000500" -> "1000496"  [label="DDG: ctxt->modrm & 0xc0"];
"1000500" -> "1000496"  [label="DDG: 0xc0"];
"1000496" -> "1000484"  [label="AST: "];
"1000496" -> "1000497"  [label="CFG: "];
"1000497" -> "1000496"  [label="AST: "];
"1000484" -> "1000496"  [label="CFG: "];
"1000496" -> "1001128"  [label="DDG: mode == X86EMUL_MODE_PROT64"];
"1000496" -> "1001128"  [label="DDG: (ctxt->modrm & 0xc0) == 0xc0"];
"1000496" -> "1000484"  [label="DDG: mode == X86EMUL_MODE_PROT64"];
"1000496" -> "1000484"  [label="DDG: (ctxt->modrm & 0xc0) == 0xc0"];
"1000497" -> "1000496"  [label="DDG: mode"];
"1000497" -> "1000496"  [label="DDG: X86EMUL_MODE_PROT64"];
"1000484" -> "1000478"  [label="AST: "];
"1000484" -> "1000485"  [label="CFG: "];
"1000485" -> "1000484"  [label="AST: "];
"1000478" -> "1000484"  [label="CFG: "];
"1000484" -> "1001128"  [label="DDG: mode == X86EMUL_MODE_PROT64 || (ctxt->modrm & 0xc0) == 0xc0"];
"1000484" -> "1001128"  [label="DDG: ctxt->b == 0xc5 || ctxt->b == 0xc4"];
"1000484" -> "1000478"  [label="DDG: ctxt->b == 0xc5 || ctxt->b == 0xc4"];
"1000484" -> "1000478"  [label="DDG: mode == X86EMUL_MODE_PROT64 || (ctxt->modrm & 0xc0) == 0xc0"];
"1000485" -> "1000484"  [label="DDG: ctxt->b == 0xc5"];
"1000485" -> "1000484"  [label="DDG: ctxt->b == 0xc4"];
"1000478" -> "1000477"  [label="AST: "];
"1000478" -> "1000479"  [label="CFG: "];
"1000479" -> "1000478"  [label="AST: "];
"1000510" -> "1000478"  [label="CFG: "];
"1000516" -> "1000478"  [label="CFG: "];
"1000478" -> "1001128"  [label="DDG: ctxt->opcode_len == 1"];
"1000478" -> "1001128"  [label="DDG: ctxt->opcode_len == 1 && (ctxt->b == 0xc5 || ctxt->b == 0xc4) &&\n\t    (mode == X86EMUL_MODE_PROT64 || (ctxt->modrm & 0xc0) == 0xc0)"];
"1000478" -> "1001128"  [label="DDG: (ctxt->b == 0xc5 || ctxt->b == 0xc4) &&\n\t    (mode == X86EMUL_MODE_PROT64 || (ctxt->modrm & 0xc0) == 0xc0)"];
"1000479" -> "1000478"  [label="DDG: ctxt->opcode_len"];
"1000479" -> "1000478"  [label="DDG: 1"];
"1000531" -> "1000530"  [label="AST: "];
"1000531" -> "1000535"  [label="CFG: "];
"1000532" -> "1000531"  [label="AST: "];
"1000535" -> "1000531"  [label="AST: "];
"1000536" -> "1000531"  [label="CFG: "];
"1000531" -> "1001128"  [label="DDG: ctxt->modrm"];
"1000531" -> "1000530"  [label="DDG: ctxt->modrm"];
"1000531" -> "1000530"  [label="DDG: 3"];
"1000559" -> "1000531"  [label="DDG: ctxt->modrm"];
"1000689" -> "1000531"  [label="DDG: ctxt->modrm"];
"1000716" -> "1000531"  [label="DDG: ctxt->modrm"];
"1000706" -> "1000531"  [label="DDG: ctxt->modrm"];
"1000592" -> "1000531"  [label="DDG: ctxt->modrm"];
"1000531" -> "1000551"  [label="DDG: ctxt->modrm"];
"1000531" -> "1000592"  [label="DDG: ctxt->modrm"];
"1000531" -> "1000674"  [label="DDG: ctxt->modrm"];
"1000531" -> "1000716"  [label="DDG: ctxt->modrm"];
"1000530" -> "1000528"  [label="AST: "];
"1000530" -> "1000536"  [label="CFG: "];
"1000536" -> "1000530"  [label="AST: "];
"1000528" -> "1000530"  [label="CFG: "];
"1000530" -> "1001128"  [label="DDG: ctxt->modrm >> 3"];
"1000530" -> "1000528"  [label="DDG: ctxt->modrm >> 3"];
"1000530" -> "1000528"  [label="DDG: 7"];
"1000528" -> "1000526"  [label="AST: "];
"1000529" -> "1000528"  [label="AST: "];
"1000538" -> "1000528"  [label="CFG: "];
"1000528" -> "1001128"  [label="DDG: (ctxt->modrm >> 3) & 7"];
"1000528" -> "1001128"  [label="DDG: goffset"];
"1000551" -> "1000550"  [label="AST: "];
"1000551" -> "1000555"  [label="CFG: "];
"1000552" -> "1000551"  [label="AST: "];
"1000555" -> "1000551"  [label="AST: "];
"1000556" -> "1000551"  [label="CFG: "];
"1000551" -> "1000550"  [label="DDG: ctxt->modrm"];
"1000551" -> "1000550"  [label="DDG: 3"];
"1000559" -> "1000551"  [label="DDG: ctxt->modrm"];
"1000689" -> "1000551"  [label="DDG: ctxt->modrm"];
"1000716" -> "1000551"  [label="DDG: ctxt->modrm"];
"1000706" -> "1000551"  [label="DDG: ctxt->modrm"];
"1000592" -> "1000551"  [label="DDG: ctxt->modrm"];
"1000551" -> "1000559"  [label="DDG: ctxt->modrm"];
"1000550" -> "1000548"  [label="AST: "];
"1000550" -> "1000556"  [label="CFG: "];
"1000556" -> "1000550"  [label="AST: "];
"1000548" -> "1000550"  [label="CFG: "];
"1000550" -> "1001128"  [label="DDG: ctxt->modrm >> 3"];
"1000550" -> "1000548"  [label="DDG: ctxt->modrm >> 3"];
"1000550" -> "1000548"  [label="DDG: 7"];
"1000548" -> "1000526"  [label="AST: "];
"1000549" -> "1000548"  [label="AST: "];
"1000561" -> "1000548"  [label="CFG: "];
"1000548" -> "1001128"  [label="DDG: (ctxt->modrm >> 3) & 7"];
"1000548" -> "1001128"  [label="DDG: goffset"];
"1000559" -> "1000558"  [label="AST: "];
"1000559" -> "1000563"  [label="CFG: "];
"1000560" -> "1000559"  [label="AST: "];
"1000563" -> "1000559"  [label="AST: "];
"1000564" -> "1000559"  [label="CFG: "];
"1000559" -> "1001128"  [label="DDG: ctxt->modrm"];
"1000559" -> "1000558"  [label="DDG: ctxt->modrm"];
"1000559" -> "1000558"  [label="DDG: 6"];
"1000559" -> "1000592"  [label="DDG: ctxt->modrm"];
"1000559" -> "1000674"  [label="DDG: ctxt->modrm"];
"1000559" -> "1000716"  [label="DDG: ctxt->modrm"];
"1000558" -> "1000557"  [label="AST: "];
"1000558" -> "1000564"  [label="CFG: "];
"1000564" -> "1000558"  [label="AST: "];
"1000566" -> "1000558"  [label="CFG: "];
"1000578" -> "1000558"  [label="CFG: "];
"1000558" -> "1001128"  [label="DDG: (ctxt->modrm >> 6) == 3"];
"1000558" -> "1001128"  [label="DDG: ctxt->modrm >> 6"];
"1000592" -> "1000590"  [label="AST: "];
"1000592" -> "1000596"  [label="CFG: "];
"1000593" -> "1000592"  [label="AST: "];
"1000596" -> "1000592"  [label="AST: "];
"1000590" -> "1000592"  [label="CFG: "];
"1000592" -> "1001128"  [label="DDG: ctxt->modrm"];
"1000592" -> "1000590"  [label="DDG: ctxt->modrm"];
"1000592" -> "1000590"  [label="DDG: 7"];
"1000689" -> "1000592"  [label="DDG: ctxt->modrm"];
"1000716" -> "1000592"  [label="DDG: ctxt->modrm"];
"1000706" -> "1000592"  [label="DDG: ctxt->modrm"];
"1000592" -> "1000674"  [label="DDG: ctxt->modrm"];
"1000592" -> "1000716"  [label="DDG: ctxt->modrm"];
"1000590" -> "1000526"  [label="AST: "];
"1000591" -> "1000590"  [label="AST: "];
"1000598" -> "1000590"  [label="CFG: "];
"1000590" -> "1001128"  [label="DDG: ctxt->modrm & 7"];
"1000590" -> "1001128"  [label="DDG: goffset"];
"1000674" -> "1000673"  [label="AST: "];
"1000674" -> "1000678"  [label="CFG: "];
"1000675" -> "1000674"  [label="AST: "];
"1000678" -> "1000674"  [label="AST: "];
"1000680" -> "1000674"  [label="CFG: "];
"1000696" -> "1000674"  [label="CFG: "];
"1000674" -> "1001128"  [label="DDG: ctxt->modrm > 0xbf"];
"1000689" -> "1000674"  [label="DDG: ctxt->modrm"];
"1000716" -> "1000674"  [label="DDG: ctxt->modrm"];
"1000706" -> "1000674"  [label="DDG: ctxt->modrm"];
"1000674" -> "1000689"  [label="DDG: ctxt->modrm"];
"1000674" -> "1000706"  [label="DDG: ctxt->modrm"];
"1000689" -> "1000681"  [label="AST: "];
"1000689" -> "1000693"  [label="CFG: "];
"1000690" -> "1000689"  [label="AST: "];
"1000693" -> "1000689"  [label="AST: "];
"1000681" -> "1000689"  [label="CFG: "];
"1000689" -> "1001128"  [label="DDG: ctxt->modrm"];
"1000689" -> "1000716"  [label="DDG: ctxt->modrm"];
"1000716" -> "1000715"  [label="AST: "];
"1000716" -> "1000720"  [label="CFG: "];
"1000717" -> "1000716"  [label="AST: "];
"1000720" -> "1000716"  [label="AST: "];
"1000721" -> "1000716"  [label="CFG: "];
"1000716" -> "1001128"  [label="DDG: ctxt->modrm"];
"1000716" -> "1000715"  [label="DDG: ctxt->modrm"];
"1000716" -> "1000715"  [label="DDG: 6"];
"1000706" -> "1000716"  [label="DDG: ctxt->modrm"];
"1000715" -> "1000714"  [label="AST: "];
"1000715" -> "1000721"  [label="CFG: "];
"1000721" -> "1000715"  [label="AST: "];
"1000723" -> "1000715"  [label="CFG: "];
"1000733" -> "1000715"  [label="CFG: "];
"1000715" -> "1001128"  [label="DDG: ctxt->modrm >> 6"];
"1000715" -> "1001128"  [label="DDG: (ctxt->modrm >> 6) == 3"];
"1000706" -> "1000705"  [label="AST: "];
"1000706" -> "1000710"  [label="CFG: "];
"1000707" -> "1000706"  [label="AST: "];
"1000710" -> "1000706"  [label="AST: "];
"1000711" -> "1000706"  [label="CFG: "];
"1000706" -> "1001128"  [label="DDG: ctxt->modrm"];
"1000706" -> "1000705"  [label="DDG: ctxt->modrm"];
"1000706" -> "1000705"  [label="DDG: 3"];
"1000705" -> "1000697"  [label="AST: "];
"1000705" -> "1000711"  [label="CFG: "];
"1000711" -> "1000705"  [label="AST: "];
"1000697" -> "1000705"  [label="CFG: "];
"1000705" -> "1001128"  [label="DDG: ctxt->modrm >> 3"];
}
