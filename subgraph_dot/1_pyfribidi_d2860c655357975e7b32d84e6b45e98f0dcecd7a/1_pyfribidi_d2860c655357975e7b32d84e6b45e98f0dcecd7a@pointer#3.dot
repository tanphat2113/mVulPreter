digraph "1_pyfribidi_d2860c655357975e7b32d84e6b45e98f0dcecd7a@pointer" {
"1000121" [label="(Call,*encoding = \"utf-8\")"];
"1000186" [label="(Call,log2vis_encoded_string (logical, encoding, base, clean, reordernsm))"];
"1000185" [label="(Return,return log2vis_encoded_string (logical, encoding, base, clean, reordernsm);)"];
"1000183" [label="(Call,PyString_Check (logical))"];
"1000129" [label="(Call,reordernsm = 1)"];
"1000182" [label="(ControlStructure,if (PyString_Check (logical)))"];
"1000157" [label="(Call,base == FRIBIDI_TYPE_RTL)"];
"1000188" [label="(Identifier,encoding)"];
"1000111" [label="(Block,)"];
"1000126" [label="(Identifier,clean)"];
"1000187" [label="(Identifier,logical)"];
"1000125" [label="(Call,clean = 0)"];
"1000189" [label="(Identifier,base)"];
"1000191" [label="(Identifier,reordernsm)"];
"1000190" [label="(Identifier,clean)"];
"1000122" [label="(Identifier,encoding)"];
"1000186" [label="(Call,log2vis_encoded_string (logical, encoding, base, clean, reordernsm))"];
"1000185" [label="(Return,return log2vis_encoded_string (logical, encoding, base, clean, reordernsm);)"];
"1000161" [label="(Call,base == FRIBIDI_TYPE_LTR)"];
"1000202" [label="(MethodReturn,RET)"];
"1000121" [label="(Call,*encoding = \"utf-8\")"];
"1000164" [label="(Call,base == FRIBIDI_TYPE_ON)"];
"1000123" [label="(Literal,\"utf-8\")"];
"1000121" -> "1000111"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000126" -> "1000121"  [label="CFG: "];
"1000121" -> "1000202"  [label="DDG: encoding"];
"1000121" -> "1000186"  [label="DDG: encoding"];
"1000186" -> "1000185"  [label="AST: "];
"1000186" -> "1000191"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000188" -> "1000186"  [label="AST: "];
"1000189" -> "1000186"  [label="AST: "];
"1000190" -> "1000186"  [label="AST: "];
"1000191" -> "1000186"  [label="AST: "];
"1000185" -> "1000186"  [label="CFG: "];
"1000186" -> "1000202"  [label="DDG: encoding"];
"1000186" -> "1000202"  [label="DDG: log2vis_encoded_string (logical, encoding, base, clean, reordernsm)"];
"1000186" -> "1000202"  [label="DDG: logical"];
"1000186" -> "1000202"  [label="DDG: clean"];
"1000186" -> "1000202"  [label="DDG: base"];
"1000186" -> "1000202"  [label="DDG: reordernsm"];
"1000186" -> "1000185"  [label="DDG: log2vis_encoded_string (logical, encoding, base, clean, reordernsm)"];
"1000183" -> "1000186"  [label="DDG: logical"];
"1000157" -> "1000186"  [label="DDG: base"];
"1000161" -> "1000186"  [label="DDG: base"];
"1000164" -> "1000186"  [label="DDG: base"];
"1000125" -> "1000186"  [label="DDG: clean"];
"1000129" -> "1000186"  [label="DDG: reordernsm"];
"1000185" -> "1000182"  [label="AST: "];
"1000202" -> "1000185"  [label="CFG: "];
"1000185" -> "1000202"  [label="DDG: <RET>"];
}
