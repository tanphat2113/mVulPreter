digraph "0_savannah_c15c42ccd1e2377945fd0414eca1a49294bff454@pointer" {
"1000248" [label="(Call,file->stat_info->sparse_map[i].numbytes\n\t\t - bytes_left)"];
"1000142" [label="(Call,bytes_left > BLOCKSIZE)"];
"1000134" [label="(Call,bytes_left > 0)"];
"1000107" [label="(Call,bytes_left = file->stat_info->sparse_map[i].numbytes)"];
"1000230" [label="(Call,file->stat_info->stat.st_size\n\t      - (file->stat_info->sparse_map[i].offset\n\t\t + file->stat_info->sparse_map[i].numbytes\n\t\t - bytes_left))"];
"1000228" [label="(Call,n = file->stat_info->stat.st_size\n\t      - (file->stat_info->sparse_map[i].offset\n\t\t + file->stat_info->sparse_map[i].numbytes\n\t\t - bytes_left))"];
"1000266" [label="(Call,ngettext (\"%s: File shrank by %s byte; padding with zeros\",\n\t\t\t      \"%s: File shrank by %s bytes; padding with zeros\",\n\t\t\t      n))"];
"1000277" [label="(Call,STRINGIFY_BIGINT (n, buf))"];
"1000238" [label="(Call,file->stat_info->sparse_map[i].offset\n\t\t + file->stat_info->sparse_map[i].numbytes\n\t\t - bytes_left)"];
"1000258" [label="(Identifier,bytes_left)"];
"1000248" [label="(Call,file->stat_info->sparse_map[i].numbytes\n\t\t - bytes_left)"];
"1000269" [label="(Identifier,n)"];
"1000239" [label="(Call,file->stat_info->sparse_map[i].offset)"];
"1000136" [label="(Literal,0)"];
"1000107" [label="(Call,bytes_left = file->stat_info->sparse_map[i].numbytes)"];
"1000121" [label="(Identifier,file)"];
"1000144" [label="(Identifier,BLOCKSIZE)"];
"1000266" [label="(Call,ngettext (\"%s: File shrank by %s byte; padding with zeros\",\n\t\t\t      \"%s: File shrank by %s bytes; padding with zeros\",\n\t\t\t      n))"];
"1000382" [label="(Identifier,false)"];
"1000109" [label="(Call,file->stat_info->sparse_map[i].numbytes)"];
"1000142" [label="(Call,bytes_left > BLOCKSIZE)"];
"1000214" [label="(Call,n = file->stat_info->stat.st_size - st.st_size)"];
"1000231" [label="(Call,file->stat_info->stat.st_size)"];
"1000229" [label="(Identifier,n)"];
"1000228" [label="(Call,n = file->stat_info->stat.st_size\n\t      - (file->stat_info->sparse_map[i].offset\n\t\t + file->stat_info->sparse_map[i].numbytes\n\t\t - bytes_left))"];
"1000249" [label="(Call,file->stat_info->sparse_map[i].numbytes)"];
"1000133" [label="(ControlStructure,while (bytes_left > 0))"];
"1000274" [label="(Identifier,file)"];
"1000134" [label="(Call,bytes_left > 0)"];
"1000270" [label="(Block,)"];
"1000140" [label="(Identifier,bufsize)"];
"1000135" [label="(Identifier,bytes_left)"];
"1000108" [label="(Identifier,bytes_left)"];
"1000227" [label="(ControlStructure,else)"];
"1000294" [label="(Call,BLOCKSIZE - bytes_read)"];
"1000141" [label="(Call,(bytes_left > BLOCKSIZE) ? BLOCKSIZE : bytes_left)"];
"1000104" [label="(Block,)"];
"1000120" [label="(Call,lseek_or_error (file, file->stat_info->sparse_map[i].offset))"];
"1000267" [label="(Literal,\"%s: File shrank by %s byte; padding with zeros\")"];
"1000278" [label="(Identifier,n)"];
"1000259" [label="(Call,WARNOPT (WARN_FILE_SHRANK,\n\t\t   (0, 0,\n\t\t    ngettext (\"%s: File shrank by %s byte; padding with zeros\",\n\t\t\t      \"%s: File shrank by %s bytes; padding with zeros\",\n\t\t\t      n),\n\t\t    quotearg_colon (file->stat_info->orig_file_name),\n\t\t    STRINGIFY_BIGINT (n, buf))))"];
"1000143" [label="(Identifier,bytes_left)"];
"1000507" [label="(MethodReturn,RET)"];
"1000230" [label="(Call,file->stat_info->stat.st_size\n\t      - (file->stat_info->sparse_map[i].offset\n\t\t + file->stat_info->sparse_map[i].numbytes\n\t\t - bytes_left))"];
"1000182" [label="(Call,file->stat_info->sparse_map[i].numbytes\n\t\t\t      - bytes_left)"];
"1000139" [label="(Call,bufsize = (bytes_left > BLOCKSIZE) ? BLOCKSIZE : bytes_left)"];
"1000279" [label="(Identifier,buf)"];
"1000268" [label="(Literal,\"%s: File shrank by %s bytes; padding with zeros\")"];
"1000145" [label="(Identifier,BLOCKSIZE)"];
"1000297" [label="(Call,bytes_left -= bytes_read)"];
"1000265" [label="(Block,)"];
"1000146" [label="(Identifier,bytes_left)"];
"1000260" [label="(Identifier,WARN_FILE_SHRANK)"];
"1000277" [label="(Call,STRINGIFY_BIGINT (n, buf))"];
"1000238" [label="(Call,file->stat_info->sparse_map[i].offset\n\t\t + file->stat_info->sparse_map[i].numbytes\n\t\t - bytes_left)"];
"1000248" -> "1000238"  [label="AST: "];
"1000248" -> "1000258"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000258" -> "1000248"  [label="AST: "];
"1000238" -> "1000248"  [label="CFG: "];
"1000248" -> "1000507"  [label="DDG: "];
"1000248" -> "1000507"  [label="DDG: "];
"1000248" -> "1000230"  [label="DDG: "];
"1000248" -> "1000230"  [label="DDG: "];
"1000248" -> "1000238"  [label="DDG: "];
"1000248" -> "1000238"  [label="DDG: "];
"1000142" -> "1000248"  [label="DDG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000145" -> "1000142"  [label="CFG: "];
"1000146" -> "1000142"  [label="CFG: "];
"1000142" -> "1000139"  [label="DDG: "];
"1000142" -> "1000139"  [label="DDG: "];
"1000134" -> "1000142"  [label="DDG: "];
"1000142" -> "1000141"  [label="DDG: "];
"1000142" -> "1000141"  [label="DDG: "];
"1000142" -> "1000182"  [label="DDG: "];
"1000142" -> "1000294"  [label="DDG: "];
"1000142" -> "1000297"  [label="DDG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000140" -> "1000134"  [label="CFG: "];
"1000382" -> "1000134"  [label="CFG: "];
"1000134" -> "1000507"  [label="DDG: "];
"1000134" -> "1000507"  [label="DDG: "];
"1000107" -> "1000134"  [label="DDG: "];
"1000107" -> "1000104"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000121" -> "1000107"  [label="CFG: "];
"1000107" -> "1000507"  [label="DDG: "];
"1000107" -> "1000507"  [label="DDG: "];
"1000230" -> "1000228"  [label="AST: "];
"1000230" -> "1000238"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000238" -> "1000230"  [label="AST: "];
"1000228" -> "1000230"  [label="CFG: "];
"1000230" -> "1000507"  [label="DDG: "];
"1000230" -> "1000507"  [label="DDG: "];
"1000230" -> "1000228"  [label="DDG: "];
"1000230" -> "1000228"  [label="DDG: "];
"1000120" -> "1000230"  [label="DDG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000228"  [label="AST: "];
"1000260" -> "1000228"  [label="CFG: "];
"1000228" -> "1000507"  [label="DDG: "];
"1000228" -> "1000266"  [label="DDG: "];
"1000266" -> "1000265"  [label="AST: "];
"1000266" -> "1000269"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="AST: "];
"1000269" -> "1000266"  [label="AST: "];
"1000274" -> "1000266"  [label="CFG: "];
"1000266" -> "1000507"  [label="DDG: "];
"1000214" -> "1000266"  [label="DDG: "];
"1000266" -> "1000277"  [label="DDG: "];
"1000277" -> "1000270"  [label="AST: "];
"1000277" -> "1000279"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000277"  [label="AST: "];
"1000259" -> "1000277"  [label="CFG: "];
"1000277" -> "1000507"  [label="DDG: "];
"1000277" -> "1000507"  [label="DDG: "];
"1000277" -> "1000507"  [label="DDG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000238" -> "1000507"  [label="DDG: "];
"1000238" -> "1000507"  [label="DDG: "];
"1000120" -> "1000238"  [label="DDG: "];
}
