digraph "0_Android_aeea52da00d210587fb3ed895de3d5f2e0264c88_0@pointer" {
"1000233" [label="(Call,*replySize < (int) sizeof(effect_param_t) + 2 * sizeof(int32_t))"];
"1000208" [label="(Call,ALOGV(\"Downmix_Command EFFECT_CMD_GET_PARAM pCmdData %p, *replySize %\" PRIu32 \", pReplyData: %p\",\n                 pCmdData, *replySize, pReplyData))"];
"1000104" [label="(MethodParameterIn,void *pCmdData)"];
"1000106" [label="(MethodParameterIn,void *pReplyData)"];
"1000241" [label="(Call,2 * sizeof(int32_t))"];
"1000229" [label="(Call,pReplyData == NULL ||\n                 *replySize < (int) sizeof(effect_param_t) + 2 * sizeof(int32_t))"];
"1000219" [label="(Call,cmdSize < (int)(sizeof(effect_param_t) + sizeof(int32_t)) ||\n                pReplyData == NULL ||\n                 *replySize < (int) sizeof(effect_param_t) + 2 * sizeof(int32_t))"];
"1000215" [label="(Call,pCmdData == NULL || cmdSize < (int)(sizeof(effect_param_t) + sizeof(int32_t)) ||\n                pReplyData == NULL ||\n                 *replySize < (int) sizeof(effect_param_t) + 2 * sizeof(int32_t))"];
"1000213" [label="(Identifier,pReplyData)"];
"1000104" [label="(MethodParameterIn,void *pCmdData)"];
"1000242" [label="(Literal,2)"];
"1000339" [label="(Call,(effect_param_t *) pCmdData)"];
"1000322" [label="(Call,pReplyData == NULL)"];
"1000344" [label="(Call,(int *)pReplyData)"];
"1000229" [label="(Call,pReplyData == NULL ||\n                 *replySize < (int) sizeof(effect_param_t) + 2 * sizeof(int32_t))"];
"1000241" [label="(Call,2 * sizeof(int32_t))"];
"1000214" [label="(ControlStructure,if (pCmdData == NULL || cmdSize < (int)(sizeof(effect_param_t) + sizeof(int32_t)) ||\n                pReplyData == NULL ||\n                 *replySize < (int) sizeof(effect_param_t) + 2 * sizeof(int32_t)))"];
"1000255" [label="(Call,memcpy(pReplyData, pCmdData, sizeof(effect_param_t) + sizeof(int32_t)))"];
"1000243" [label="(Call,sizeof(int32_t))"];
"1000169" [label="(Call,pCmdData == NULL)"];
"1000407" [label="(Call,(int *)pReplyData)"];
"1000178" [label="(Call,pReplyData == NULL)"];
"1000525" [label="(Call,pCmdData == NULL)"];
"1000233" [label="(Call,*replySize < (int) sizeof(effect_param_t) + 2 * sizeof(int32_t))"];
"1000192" [label="(Call,(int *) pReplyData)"];
"1000548" [label="(MethodReturn,static int)"];
"1000215" [label="(Call,pCmdData == NULL || cmdSize < (int)(sizeof(effect_param_t) + sizeof(int32_t)) ||\n                pReplyData == NULL ||\n                 *replySize < (int) sizeof(effect_param_t) + 2 * sizeof(int32_t))"];
"1000219" [label="(Call,cmdSize < (int)(sizeof(effect_param_t) + sizeof(int32_t)) ||\n                pReplyData == NULL ||\n                 *replySize < (int) sizeof(effect_param_t) + 2 * sizeof(int32_t))"];
"1000454" [label="(Call,pCmdData == NULL)"];
"1000146" [label="(Call,pReplyData == NULL)"];
"1000106" [label="(MethodParameterIn,void *pReplyData)"];
"1000308" [label="(Call,pCmdData == NULL)"];
"1000217" [label="(Identifier,pCmdData)"];
"1000236" [label="(Call,(int) sizeof(effect_param_t) + 2 * sizeof(int32_t))"];
"1000220" [label="(Call,cmdSize < (int)(sizeof(effect_param_t) + sizeof(int32_t)))"];
"1000209" [label="(Literal,\"Downmix_Command EFFECT_CMD_GET_PARAM pCmdData %p, *replySize %\" PRIu32 \", pReplyData: %p\")"];
"1000496" [label="(Call,(uint32_t *)pCmdData)"];
"1000197" [label="(Call,(effect_config_t *)pCmdData)"];
"1000142" [label="(Block,)"];
"1000160" [label="(Call,(int *) pReplyData)"];
"1000376" [label="(Call,pReplyData == NULL)"];
"1000248" [label="(Identifier,EINVAL)"];
"1000210" [label="(Identifier,pCmdData)"];
"1000510" [label="(Call,(uint32_t *)pCmdData)"];
"1000208" [label="(Call,ALOGV(\"Downmix_Command EFFECT_CMD_GET_PARAM pCmdData %p, *replySize %\" PRIu32 \", pReplyData: %p\",\n                 pCmdData, *replySize, pReplyData))"];
"1000415" [label="(Call,pReplyData == NULL)"];
"1000251" [label="(Identifier,rep)"];
"1000216" [label="(Call,pCmdData == NULL)"];
"1000252" [label="(Call,(effect_param_t *) pReplyData)"];
"1000299" [label="(Call,ALOGV(\"Downmix_Command EFFECT_CMD_SET_PARAM cmdSize %d pCmdData %p, *replySize %\" PRIu32\n                 \", pReplyData %p\", cmdSize, pCmdData, *replySize, pReplyData))"];
"1000472" [label="(Call,pCmdData == NULL)"];
"1000446" [label="(Call,(int *)pReplyData)"];
"1000230" [label="(Call,pReplyData == NULL)"];
"1000234" [label="(Call,*replySize)"];
"1000211" [label="(Call,*replySize)"];
"1000233" -> "1000229"  [label="AST: "];
"1000233" -> "1000236"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000236" -> "1000233"  [label="AST: "];
"1000229" -> "1000233"  [label="CFG: "];
"1000233" -> "1000548"  [label="DDG: "];
"1000233" -> "1000548"  [label="DDG: "];
"1000233" -> "1000229"  [label="DDG: "];
"1000233" -> "1000229"  [label="DDG: "];
"1000208" -> "1000233"  [label="DDG: "];
"1000241" -> "1000233"  [label="DDG: "];
"1000208" -> "1000142"  [label="AST: "];
"1000208" -> "1000213"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000210" -> "1000208"  [label="AST: "];
"1000211" -> "1000208"  [label="AST: "];
"1000213" -> "1000208"  [label="AST: "];
"1000217" -> "1000208"  [label="CFG: "];
"1000208" -> "1000548"  [label="DDG: "];
"1000208" -> "1000548"  [label="DDG: "];
"1000208" -> "1000548"  [label="DDG: "];
"1000104" -> "1000208"  [label="DDG: "];
"1000106" -> "1000208"  [label="DDG: "];
"1000208" -> "1000216"  [label="DDG: "];
"1000208" -> "1000230"  [label="DDG: "];
"1000208" -> "1000252"  [label="DDG: "];
"1000104" -> "1000100"  [label="AST: "];
"1000104" -> "1000548"  [label="DDG: "];
"1000104" -> "1000169"  [label="DDG: "];
"1000104" -> "1000197"  [label="DDG: "];
"1000104" -> "1000216"  [label="DDG: "];
"1000104" -> "1000255"  [label="DDG: "];
"1000104" -> "1000299"  [label="DDG: "];
"1000104" -> "1000308"  [label="DDG: "];
"1000104" -> "1000339"  [label="DDG: "];
"1000104" -> "1000454"  [label="DDG: "];
"1000104" -> "1000472"  [label="DDG: "];
"1000104" -> "1000496"  [label="DDG: "];
"1000104" -> "1000510"  [label="DDG: "];
"1000104" -> "1000525"  [label="DDG: "];
"1000106" -> "1000100"  [label="AST: "];
"1000106" -> "1000548"  [label="DDG: "];
"1000106" -> "1000146"  [label="DDG: "];
"1000106" -> "1000160"  [label="DDG: "];
"1000106" -> "1000178"  [label="DDG: "];
"1000106" -> "1000192"  [label="DDG: "];
"1000106" -> "1000230"  [label="DDG: "];
"1000106" -> "1000252"  [label="DDG: "];
"1000106" -> "1000255"  [label="DDG: "];
"1000106" -> "1000299"  [label="DDG: "];
"1000106" -> "1000322"  [label="DDG: "];
"1000106" -> "1000344"  [label="DDG: "];
"1000106" -> "1000376"  [label="DDG: "];
"1000106" -> "1000407"  [label="DDG: "];
"1000106" -> "1000415"  [label="DDG: "];
"1000106" -> "1000446"  [label="DDG: "];
"1000241" -> "1000236"  [label="AST: "];
"1000241" -> "1000243"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="AST: "];
"1000236" -> "1000241"  [label="CFG: "];
"1000241" -> "1000236"  [label="DDG: "];
"1000229" -> "1000219"  [label="AST: "];
"1000229" -> "1000230"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000219" -> "1000229"  [label="CFG: "];
"1000229" -> "1000548"  [label="DDG: "];
"1000229" -> "1000548"  [label="DDG: "];
"1000229" -> "1000219"  [label="DDG: "];
"1000229" -> "1000219"  [label="DDG: "];
"1000230" -> "1000229"  [label="DDG: "];
"1000230" -> "1000229"  [label="DDG: "];
"1000219" -> "1000215"  [label="AST: "];
"1000219" -> "1000220"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000215" -> "1000219"  [label="CFG: "];
"1000219" -> "1000548"  [label="DDG: "];
"1000219" -> "1000548"  [label="DDG: "];
"1000219" -> "1000215"  [label="DDG: "];
"1000219" -> "1000215"  [label="DDG: "];
"1000220" -> "1000219"  [label="DDG: "];
"1000220" -> "1000219"  [label="DDG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000215" -> "1000216"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000248" -> "1000215"  [label="CFG: "];
"1000251" -> "1000215"  [label="CFG: "];
"1000215" -> "1000548"  [label="DDG: "];
"1000215" -> "1000548"  [label="DDG: "];
"1000215" -> "1000548"  [label="DDG: "];
"1000216" -> "1000215"  [label="DDG: "];
"1000216" -> "1000215"  [label="DDG: "];
}
