digraph "0_libgd_7a1aac3343af85b4af4df5f8844946eaa27394ab?w=1_2@array" {
"1000105" [label="(MethodParameterIn,const double affine[6])"];
"1000142" [label="(Call,gdTransformAffineBoundingBox(src_area, affine, &bbox))"];
"1000189" [label="(Call,gdAffineConcat(m, affine, m))"];
"1000199" [label="(Call,gdTransformAffineCopy(*dst,\n\t\t  0,0,\n\t\t  src,\n\t\t  src_area,\n\t\t  m))"];
"1000197" [label="(Call,res = gdTransformAffineCopy(*dst,\n\t\t  0,0,\n\t\t  src,\n\t\t  src_area,\n\t\t  m))"];
"1000208" [label="(Call,res != GD_TRUE)"];
"1000222" [label="(Return,return GD_TRUE;)"];
"1000212" [label="(Call,gdImageDestroy(*dst))"];
"1000197" [label="(Call,res = gdTransformAffineCopy(*dst,\n\t\t  0,0,\n\t\t  src,\n\t\t  src_area,\n\t\t  m))"];
"1000198" [label="(Identifier,res)"];
"1000224" [label="(MethodReturn,int)"];
"1000221" [label="(Block,)"];
"1000191" [label="(Identifier,affine)"];
"1000177" [label="(Call,gdImagePaletteToTrueColor(src))"];
"1000143" [label="(Identifier,src_area)"];
"1000212" [label="(Call,gdImageDestroy(*dst))"];
"1000223" [label="(Identifier,GD_TRUE)"];
"1000222" [label="(Return,return GD_TRUE;)"];
"1000206" [label="(Identifier,m)"];
"1000205" [label="(Identifier,src_area)"];
"1000104" [label="(MethodParameterIn,gdRectPtr src_area)"];
"1000204" [label="(Identifier,src)"];
"1000213" [label="(Call,*dst)"];
"1000210" [label="(Identifier,GD_TRUE)"];
"1000189" [label="(Call,gdAffineConcat(m, affine, m))"];
"1000190" [label="(Identifier,m)"];
"1000142" [label="(Call,gdTransformAffineBoundingBox(src_area, affine, &bbox))"];
"1000136" [label="(Call,gdImageSY(src))"];
"1000138" [label="(Call,src_area = &area_full)"];
"1000214" [label="(Identifier,dst)"];
"1000216" [label="(Identifier,dst)"];
"1000203" [label="(Literal,0)"];
"1000200" [label="(Call,*dst)"];
"1000211" [label="(Block,)"];
"1000207" [label="(ControlStructure,if (res != GD_TRUE))"];
"1000112" [label="(Call,src_area == NULL)"];
"1000103" [label="(MethodParameterIn,const gdImagePtr src)"];
"1000106" [label="(Block,)"];
"1000202" [label="(Literal,0)"];
"1000149" [label="(Identifier,dst)"];
"1000195" [label="(Identifier,dst)"];
"1000179" [label="(Call,gdAffineTranslate(m, -bbox.x, -bbox.y))"];
"1000192" [label="(Identifier,m)"];
"1000145" [label="(Call,&bbox)"];
"1000209" [label="(Identifier,res)"];
"1000105" [label="(MethodParameterIn,const double affine[6])"];
"1000208" [label="(Call,res != GD_TRUE)"];
"1000199" [label="(Call,gdTransformAffineCopy(*dst,\n\t\t  0,0,\n\t\t  src,\n\t\t  src_area,\n\t\t  m))"];
"1000193" [label="(Call,gdImageAlphaBlending(*dst, 0))"];
"1000144" [label="(Identifier,affine)"];
"1000105" -> "1000101"  [label="AST: "];
"1000105" -> "1000224"  [label="DDG: affine"];
"1000105" -> "1000142"  [label="DDG: affine"];
"1000105" -> "1000189"  [label="DDG: affine"];
"1000142" -> "1000106"  [label="AST: "];
"1000142" -> "1000145"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000145" -> "1000142"  [label="AST: "];
"1000149" -> "1000142"  [label="CFG: "];
"1000142" -> "1000224"  [label="DDG: gdTransformAffineBoundingBox(src_area, affine, &bbox)"];
"1000142" -> "1000224"  [label="DDG: affine"];
"1000142" -> "1000224"  [label="DDG: src_area"];
"1000142" -> "1000224"  [label="DDG: &bbox"];
"1000138" -> "1000142"  [label="DDG: src_area"];
"1000112" -> "1000142"  [label="DDG: src_area"];
"1000104" -> "1000142"  [label="DDG: src_area"];
"1000142" -> "1000189"  [label="DDG: affine"];
"1000142" -> "1000199"  [label="DDG: src_area"];
"1000189" -> "1000106"  [label="AST: "];
"1000189" -> "1000192"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000191" -> "1000189"  [label="AST: "];
"1000192" -> "1000189"  [label="AST: "];
"1000195" -> "1000189"  [label="CFG: "];
"1000189" -> "1000224"  [label="DDG: gdAffineConcat(m, affine, m)"];
"1000189" -> "1000224"  [label="DDG: affine"];
"1000179" -> "1000189"  [label="DDG: m"];
"1000189" -> "1000199"  [label="DDG: m"];
"1000199" -> "1000197"  [label="AST: "];
"1000199" -> "1000206"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000202" -> "1000199"  [label="AST: "];
"1000203" -> "1000199"  [label="AST: "];
"1000204" -> "1000199"  [label="AST: "];
"1000205" -> "1000199"  [label="AST: "];
"1000206" -> "1000199"  [label="AST: "];
"1000197" -> "1000199"  [label="CFG: "];
"1000199" -> "1000224"  [label="DDG: src_area"];
"1000199" -> "1000224"  [label="DDG: *dst"];
"1000199" -> "1000224"  [label="DDG: m"];
"1000199" -> "1000224"  [label="DDG: src"];
"1000199" -> "1000197"  [label="DDG: m"];
"1000199" -> "1000197"  [label="DDG: *dst"];
"1000199" -> "1000197"  [label="DDG: 0"];
"1000199" -> "1000197"  [label="DDG: src_area"];
"1000199" -> "1000197"  [label="DDG: src"];
"1000193" -> "1000199"  [label="DDG: *dst"];
"1000177" -> "1000199"  [label="DDG: src"];
"1000136" -> "1000199"  [label="DDG: src"];
"1000103" -> "1000199"  [label="DDG: src"];
"1000104" -> "1000199"  [label="DDG: src_area"];
"1000199" -> "1000212"  [label="DDG: *dst"];
"1000197" -> "1000106"  [label="AST: "];
"1000198" -> "1000197"  [label="AST: "];
"1000209" -> "1000197"  [label="CFG: "];
"1000197" -> "1000224"  [label="DDG: gdTransformAffineCopy(*dst,\n\t\t  0,0,\n\t\t  src,\n\t\t  src_area,\n\t\t  m)"];
"1000197" -> "1000208"  [label="DDG: res"];
"1000208" -> "1000207"  [label="AST: "];
"1000208" -> "1000210"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000210" -> "1000208"  [label="AST: "];
"1000214" -> "1000208"  [label="CFG: "];
"1000223" -> "1000208"  [label="CFG: "];
"1000208" -> "1000224"  [label="DDG: res"];
"1000208" -> "1000224"  [label="DDG: res != GD_TRUE"];
"1000208" -> "1000224"  [label="DDG: GD_TRUE"];
"1000208" -> "1000222"  [label="DDG: GD_TRUE"];
"1000222" -> "1000221"  [label="AST: "];
"1000222" -> "1000223"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000224" -> "1000222"  [label="CFG: "];
"1000222" -> "1000224"  [label="DDG: <RET>"];
"1000223" -> "1000222"  [label="DDG: GD_TRUE"];
"1000212" -> "1000211"  [label="AST: "];
"1000212" -> "1000213"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000216" -> "1000212"  [label="CFG: "];
"1000212" -> "1000224"  [label="DDG: gdImageDestroy(*dst)"];
"1000212" -> "1000224"  [label="DDG: *dst"];
}
