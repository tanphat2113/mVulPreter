digraph "0_linux_23adbe12ef7d3d4195e80800ab36b37bee28cd03@pointer" {
"1000112" [label="(Call,ia_valid = attr->ia_valid)"];
"1000118" [label="(Call,ia_valid & ATTR_SIZE)"];
"1000135" [label="(Call,ia_valid & ATTR_FORCE)"];
"1000142" [label="(Call,ia_valid & ATTR_UID)"];
"1000141" [label="(Call,(ia_valid & ATTR_UID) &&\n \t    (!uid_eq(current_fsuid(), inode->i_uid) ||\n \t     !uid_eq(attr->ia_uid, inode->i_uid)) &&\n\t    !capable_wrt_inode_uidgid(inode, CAP_CHOWN))"];
"1000170" [label="(Call,ia_valid & ATTR_GID)"];
"1000169" [label="(Call,(ia_valid & ATTR_GID) &&\n \t    (!uid_eq(current_fsuid(), inode->i_uid) ||\n \t    (!in_group_p(attr->ia_gid) && !gid_eq(attr->ia_gid, inode->i_gid))) &&\n\t    !capable_wrt_inode_uidgid(inode, CAP_CHOWN))"];
"1000203" [label="(Call,ia_valid & ATTR_MODE)"];
"1000219" [label="(Call,ia_valid & ATTR_GID)"];
"1000238" [label="(Call,ia_valid & (ATTR_MTIME_SET | ATTR_ATIME_SET | ATTR_TIMES_SET))"];
"1000249" [label="(Identifier,inode)"];
"1000118" [label="(Call,ia_valid & ATTR_SIZE)"];
"1000238" [label="(Call,ia_valid & (ATTR_MTIME_SET | ATTR_ATIME_SET | ATTR_TIMES_SET))"];
"1000226" [label="(Identifier,inode)"];
"1000205" [label="(Identifier,ATTR_MODE)"];
"1000113" [label="(Identifier,ia_valid)"];
"1000124" [label="(Identifier,error)"];
"1000145" [label="(Call,(!uid_eq(current_fsuid(), inode->i_uid) ||\n \t     !uid_eq(attr->ia_uid, inode->i_uid)) &&\n\t    !capable_wrt_inode_uidgid(inode, CAP_CHOWN))"];
"1000171" [label="(Identifier,ia_valid)"];
"1000143" [label="(Identifier,ia_valid)"];
"1000142" [label="(Call,ia_valid & ATTR_UID)"];
"1000135" [label="(Call,ia_valid & ATTR_FORCE)"];
"1000170" [label="(Call,ia_valid & ATTR_GID)"];
"1000120" [label="(Identifier,ATTR_SIZE)"];
"1000219" [label="(Call,ia_valid & ATTR_GID)"];
"1000237" [label="(ControlStructure,if (ia_valid & (ATTR_MTIME_SET | ATTR_ATIME_SET | ATTR_TIMES_SET)))"];
"1000136" [label="(Identifier,ia_valid)"];
"1000210" [label="(Identifier,inode)"];
"1000114" [label="(Call,attr->ia_valid)"];
"1000201" [label="(Identifier,EPERM)"];
"1000141" [label="(Call,(ia_valid & ATTR_UID) &&\n \t    (!uid_eq(current_fsuid(), inode->i_uid) ||\n \t     !uid_eq(attr->ia_uid, inode->i_uid)) &&\n\t    !capable_wrt_inode_uidgid(inode, CAP_CHOWN))"];
"1000177" [label="(Call,current_fsuid())"];
"1000119" [label="(Identifier,ia_valid)"];
"1000203" [label="(Call,ia_valid & ATTR_MODE)"];
"1000172" [label="(Identifier,ATTR_GID)"];
"1000202" [label="(ControlStructure,if (ia_valid & ATTR_MODE))"];
"1000223" [label="(Identifier,attr)"];
"1000240" [label="(Call,ATTR_MTIME_SET | ATTR_ATIME_SET | ATTR_TIMES_SET)"];
"1000254" [label="(Literal,0)"];
"1000255" [label="(MethodReturn,int)"];
"1000218" [label="(Call,(ia_valid & ATTR_GID) ? attr->ia_gid :\n \t\t\t\tinode->i_gid)"];
"1000169" [label="(Call,(ia_valid & ATTR_GID) &&\n \t    (!uid_eq(current_fsuid(), inode->i_uid) ||\n \t    (!in_group_p(attr->ia_gid) && !gid_eq(attr->ia_gid, inode->i_gid))) &&\n\t    !capable_wrt_inode_uidgid(inode, CAP_CHOWN))"];
"1000220" [label="(Identifier,ia_valid)"];
"1000173" [label="(Call,(!uid_eq(current_fsuid(), inode->i_uid) ||\n \t    (!in_group_p(attr->ia_gid) && !gid_eq(attr->ia_gid, inode->i_gid))) &&\n\t    !capable_wrt_inode_uidgid(inode, CAP_CHOWN))"];
"1000139" [label="(Literal,0)"];
"1000140" [label="(ControlStructure,if ((ia_valid & ATTR_UID) &&\n \t    (!uid_eq(current_fsuid(), inode->i_uid) ||\n \t     !uid_eq(attr->ia_uid, inode->i_uid)) &&\n\t    !capable_wrt_inode_uidgid(inode, CAP_CHOWN)))"];
"1000137" [label="(Identifier,ATTR_FORCE)"];
"1000117" [label="(ControlStructure,if (ia_valid & ATTR_SIZE))"];
"1000167" [label="(Identifier,EPERM)"];
"1000221" [label="(Identifier,ATTR_GID)"];
"1000112" [label="(Call,ia_valid = attr->ia_valid)"];
"1000110" [label="(Block,)"];
"1000168" [label="(ControlStructure,if ((ia_valid & ATTR_GID) &&\n \t    (!uid_eq(current_fsuid(), inode->i_uid) ||\n \t    (!in_group_p(attr->ia_gid) && !gid_eq(attr->ia_gid, inode->i_gid))) &&\n\t    !capable_wrt_inode_uidgid(inode, CAP_CHOWN)))"];
"1000144" [label="(Identifier,ATTR_UID)"];
"1000149" [label="(Call,current_fsuid())"];
"1000204" [label="(Identifier,ia_valid)"];
"1000134" [label="(ControlStructure,if (ia_valid & ATTR_FORCE))"];
"1000239" [label="(Identifier,ia_valid)"];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000119" -> "1000112"  [label="CFG: "];
"1000112" -> "1000255"  [label="DDG: attr->ia_valid"];
"1000112" -> "1000118"  [label="DDG: ia_valid"];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="AST: "];
"1000124" -> "1000118"  [label="CFG: "];
"1000136" -> "1000118"  [label="CFG: "];
"1000118" -> "1000255"  [label="DDG: ia_valid & ATTR_SIZE"];
"1000118" -> "1000255"  [label="DDG: ATTR_SIZE"];
"1000118" -> "1000255"  [label="DDG: ia_valid"];
"1000118" -> "1000135"  [label="DDG: ia_valid"];
"1000135" -> "1000134"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000139" -> "1000135"  [label="CFG: "];
"1000143" -> "1000135"  [label="CFG: "];
"1000135" -> "1000255"  [label="DDG: ia_valid & ATTR_FORCE"];
"1000135" -> "1000255"  [label="DDG: ia_valid"];
"1000135" -> "1000255"  [label="DDG: ATTR_FORCE"];
"1000135" -> "1000142"  [label="DDG: ia_valid"];
"1000142" -> "1000141"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000149" -> "1000142"  [label="CFG: "];
"1000141" -> "1000142"  [label="CFG: "];
"1000142" -> "1000255"  [label="DDG: ATTR_UID"];
"1000142" -> "1000255"  [label="DDG: ia_valid"];
"1000142" -> "1000141"  [label="DDG: ia_valid"];
"1000142" -> "1000141"  [label="DDG: ATTR_UID"];
"1000142" -> "1000170"  [label="DDG: ia_valid"];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000145"  [label="CFG: "];
"1000145" -> "1000141"  [label="AST: "];
"1000167" -> "1000141"  [label="CFG: "];
"1000171" -> "1000141"  [label="CFG: "];
"1000141" -> "1000255"  [label="DDG: ia_valid & ATTR_UID"];
"1000141" -> "1000255"  [label="DDG: (ia_valid & ATTR_UID) &&\n \t    (!uid_eq(current_fsuid(), inode->i_uid) ||\n \t     !uid_eq(attr->ia_uid, inode->i_uid)) &&\n\t    !capable_wrt_inode_uidgid(inode, CAP_CHOWN)"];
"1000141" -> "1000255"  [label="DDG: (!uid_eq(current_fsuid(), inode->i_uid) ||\n \t     !uid_eq(attr->ia_uid, inode->i_uid)) &&\n\t    !capable_wrt_inode_uidgid(inode, CAP_CHOWN)"];
"1000145" -> "1000141"  [label="DDG: !uid_eq(current_fsuid(), inode->i_uid) ||\n \t     !uid_eq(attr->ia_uid, inode->i_uid)"];
"1000145" -> "1000141"  [label="DDG: !capable_wrt_inode_uidgid(inode, CAP_CHOWN)"];
"1000170" -> "1000169"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000177" -> "1000170"  [label="CFG: "];
"1000169" -> "1000170"  [label="CFG: "];
"1000170" -> "1000255"  [label="DDG: ATTR_GID"];
"1000170" -> "1000255"  [label="DDG: ia_valid"];
"1000170" -> "1000169"  [label="DDG: ia_valid"];
"1000170" -> "1000169"  [label="DDG: ATTR_GID"];
"1000170" -> "1000203"  [label="DDG: ia_valid"];
"1000170" -> "1000219"  [label="DDG: ATTR_GID"];
"1000169" -> "1000168"  [label="AST: "];
"1000169" -> "1000173"  [label="CFG: "];
"1000173" -> "1000169"  [label="AST: "];
"1000201" -> "1000169"  [label="CFG: "];
"1000204" -> "1000169"  [label="CFG: "];
"1000169" -> "1000255"  [label="DDG: (ia_valid & ATTR_GID) &&\n \t    (!uid_eq(current_fsuid(), inode->i_uid) ||\n \t    (!in_group_p(attr->ia_gid) && !gid_eq(attr->ia_gid, inode->i_gid))) &&\n\t    !capable_wrt_inode_uidgid(inode, CAP_CHOWN)"];
"1000169" -> "1000255"  [label="DDG: (!uid_eq(current_fsuid(), inode->i_uid) ||\n \t    (!in_group_p(attr->ia_gid) && !gid_eq(attr->ia_gid, inode->i_gid))) &&\n\t    !capable_wrt_inode_uidgid(inode, CAP_CHOWN)"];
"1000169" -> "1000255"  [label="DDG: ia_valid & ATTR_GID"];
"1000173" -> "1000169"  [label="DDG: !uid_eq(current_fsuid(), inode->i_uid) ||\n \t    (!in_group_p(attr->ia_gid) && !gid_eq(attr->ia_gid, inode->i_gid))"];
"1000173" -> "1000169"  [label="DDG: !capable_wrt_inode_uidgid(inode, CAP_CHOWN)"];
"1000203" -> "1000202"  [label="AST: "];
"1000203" -> "1000205"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000203"  [label="AST: "];
"1000210" -> "1000203"  [label="CFG: "];
"1000239" -> "1000203"  [label="CFG: "];
"1000203" -> "1000255"  [label="DDG: ia_valid & ATTR_MODE"];
"1000203" -> "1000255"  [label="DDG: ATTR_MODE"];
"1000203" -> "1000255"  [label="DDG: ia_valid"];
"1000203" -> "1000219"  [label="DDG: ia_valid"];
"1000203" -> "1000238"  [label="DDG: ia_valid"];
"1000219" -> "1000218"  [label="AST: "];
"1000219" -> "1000221"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000221" -> "1000219"  [label="AST: "];
"1000223" -> "1000219"  [label="CFG: "];
"1000226" -> "1000219"  [label="CFG: "];
"1000219" -> "1000255"  [label="DDG: ATTR_GID"];
"1000219" -> "1000238"  [label="DDG: ia_valid"];
"1000238" -> "1000237"  [label="AST: "];
"1000238" -> "1000240"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="AST: "];
"1000249" -> "1000238"  [label="CFG: "];
"1000254" -> "1000238"  [label="CFG: "];
"1000238" -> "1000255"  [label="DDG: ia_valid"];
"1000238" -> "1000255"  [label="DDG: ATTR_MTIME_SET | ATTR_ATIME_SET | ATTR_TIMES_SET"];
"1000238" -> "1000255"  [label="DDG: ia_valid & (ATTR_MTIME_SET | ATTR_ATIME_SET | ATTR_TIMES_SET)"];
"1000240" -> "1000238"  [label="DDG: ATTR_MTIME_SET"];
"1000240" -> "1000238"  [label="DDG: ATTR_ATIME_SET | ATTR_TIMES_SET"];
}
