digraph "0_FFmpeg_e43a0a232dbf6d3c161823c2e07c52e76227a1bc_5@pointer" {
"1000799" [label="(Call,(int)prvppp[x])"];
"1001050" [label="(Call,prvppp += 2 * psrc_linesize)"];
"1001052" [label="(Call,2 * psrc_linesize)"];
"1001047" [label="(Call,2 * psrc_linesize)"];
"1001042" [label="(Call,2 * psrc_linesize)"];
"1001072" [label="(Call,2 * psrc_linesize)"];
"1001067" [label="(Call,2 * psrc_linesize)"];
"1001062" [label="(Call,2 * psrc_linesize)"];
"1001057" [label="(Call,2 * psrc_linesize)"];
"1000486" [label="(Call,4 * psrc_linesize)"];
"1000479" [label="(Call,2 * psrc_linesize)"];
"1000467" [label="(Call,4 * psrc_linesize)"];
"1000460" [label="(Call,2 * psrc_linesize)"];
"1000453" [label="(Call,prvp - psrc_linesize)"];
"1000778" [label="(Call,(int)prvp[x])"];
"1001040" [label="(Call,prvp   += 2 * psrc_linesize)"];
"1001006" [label="(Call,(int)prvp[x])"];
"1000955" [label="(Call,(int)prvp[x])"];
"1000611" [label="(Call,(int)prvp[x])"];
"1000870" [label="(Call,(int)prvp[x])"];
"1000465" [label="(Call,prvp - 4 * psrc_linesize)"];
"1000458" [label="(Call,prvp - 2 * psrc_linesize)"];
"1000434" [label="(Call,prvp   = kerndeint->tmp_data[plane] + 5 * psrc_linesize - (1 - order) * psrc_linesize)"];
"1000442" [label="(Call,5 * psrc_linesize - (1 - order) * psrc_linesize)"];
"1000443" [label="(Call,5 * psrc_linesize)"];
"1000298" [label="(Call,psrc_linesize     = kerndeint->tmp_linesize[plane])"];
"1000446" [label="(Call,(1 - order) * psrc_linesize)"];
"1000447" [label="(Call,1 - order)"];
"1000429" [label="(Call,3 - order)"];
"1000409" [label="(Call,1 - order)"];
"1000389" [label="(Call,3 -     order)"];
"1000373" [label="(Call,1 -     order)"];
"1000367" [label="(Call,order            * dst_linesize)"];
"1000335" [label="(Call,1 - order)"];
"1000326" [label="(Call,1 - order)"];
"1000186" [label="(Call,order  = kerndeint->order)"];
"1000581" [label="(Call,1 - order)"];
"1000572" [label="(Call,1 - order)"];
"1000563" [label="(Call,1 - order)"];
"1000498" [label="(Call,1 - order)"];
"1000334" [label="(Call,(1 - order) * dst_linesize)"];
"1000314" [label="(Call,dst_linesize      = outpic->linesize[plane])"];
"1000361" [label="(Call,2 * dst_linesize)"];
"1000879" [label="(Call,(int)prvppp[x])"];
"1000456" [label="(Call,prvppp = prvp - 2 * psrc_linesize)"];
"1000973" [label="(Call,(int)(prvppp[x]))"];
"1001012" [label="(Call,(int)(prvppp[x]))"];
"1000799" [label="(Call,(int)prvppp[x])"];
"1000784" [label="(Call,0.116 * ((int)srcppp[x] + (int)srcpnn[x] + (int)prvppp[x] + (int)prvpnn[x]))"];
"1000783" [label="(Call,0.116 * ((int)srcppp[x] + (int)srcpnn[x] + (int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)srcp4p[x] + (int)srcp4n[x] + (int)prvp4p[x] + (int)prvp4n[x]))"];
"1000769" [label="(Call,0.170 * ((int)srcp[x] + (int)prvp[x])\n                                    - 0.116 * ((int)srcppp[x] + (int)srcpnn[x] + (int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)srcp4p[x] + (int)srcp4n[x] + (int)prvp4p[x] + (int)prvp4n[x]))"];
"1000752" [label="(Call,valf = + 0.526 * ((int)srcpp[x] + (int)srcpn[x])\n                                    + 0.170 * ((int)srcp[x] + (int)prvp[x])\n                                    - 0.116 * ((int)srcppp[x] + (int)srcpnn[x] + (int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)srcp4p[x] + (int)srcp4n[x] + (int)prvp4p[x] + (int)prvp4n[x]))"];
"1000920" [label="(Call,av_clip(valf, lo, hi))"];
"1000916" [label="(Call,dstp[x] = av_clip(valf, lo, hi))"];
"1000350" [label="(Call,memcpy(dstp, srcp, bwidth))"];
"1000354" [label="(Call,srcp += 2 * src_linesize)"];
"1000359" [label="(Call,dstp += 2 * dst_linesize)"];
"1000364" [label="(Call,memcpy(dstp_saved + order            * dst_linesize, srcp_saved + (1 -     order) * src_linesize, bwidth))"];
"1000378" [label="(Call,memcpy(dstp_saved + (2 + order    )  * dst_linesize, srcp_saved + (3 -     order) * src_linesize, bwidth))"];
"1000394" [label="(Call,memcpy(dstp_saved + (h - 2 + order)  * dst_linesize, srcp_saved + (h - 1 - order) * src_linesize, bwidth))"];
"1000414" [label="(Call,memcpy(dstp_saved + (h - 4 + order)  * dst_linesize, srcp_saved + (h - 3 - order) * src_linesize, bwidth))"];
"1000592" [label="(Call,x < bwidth)"];
"1000595" [label="(Call,x++)"];
"1000657" [label="(Call,x & ~3)"];
"1000655" [label="(Call,g = x & ~3)"];
"1000663" [label="(Call,AV_WB32(dstp + g, 0xffffffff))"];
"1000664" [label="(Call,dstp + g)"];
"1000668" [label="(Call,x = g + 3)"];
"1000670" [label="(Call,g + 3)"];
"1000681" [label="(Call,AV_WB32(dstp + g, 0xeb80eb80))"];
"1000682" [label="(Call,dstp + g)"];
"1000686" [label="(Call,x = g + 3)"];
"1000688" [label="(Call,g + 3)"];
"1000725" [label="(Call,x & 1)"];
"1001139" [label="(Call,av_image_copy_plane(dstp, psrc_linesize, srcp, src_linesize, bwidth, h))"];
"1001120" [label="(Call,dstp   += 2 * dst_linesize)"];
"1000754" [label="(Call,+ 0.526 * ((int)srcpp[x] + (int)srcpn[x])\n                                    + 0.170 * ((int)srcp[x] + (int)prvp[x])\n                                    - 0.116 * ((int)srcppp[x] + (int)srcpnn[x] + (int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)srcp4p[x] + (int)srcp4n[x] + (int)prvp4p[x] + (int)prvp4n[x]))"];
"1000786" [label="(Call,(int)srcppp[x] + (int)srcpnn[x] + (int)prvppp[x] + (int)prvpnn[x])"];
"1000792" [label="(Call,(int)srcpnn[x] + (int)prvppp[x] + (int)prvpnn[x])"];
"1000798" [label="(Call,(int)prvppp[x] + (int)prvpnn[x])"];
"1000972" [label="(Call,(int)(prvppp[x]) - (int)(prvpnn[x]))"];
"1000966" [label="(Call,(int)(srcpnn[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x]))"];
"1000960" [label="(Call,(int)(srcppp[x]) - (int)(srcpnn[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x]))"];
"1000946" [label="(Call,2 * ((int)srcp[x] + (int)prvp[x])\n                                       - (int)(srcppp[x]) - (int)(srcpnn[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x]))"];
"1000931" [label="(Call,(8 * ((int)srcpp[x] + (int)srcpn[x]) + 2 * ((int)srcp[x] + (int)prvp[x])\n                                       - (int)(srcppp[x]) - (int)(srcpnn[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x])) >> 4)"];
"1000929" [label="(Call,val = (8 * ((int)srcpp[x] + (int)srcpn[x]) + 2 * ((int)srcp[x] + (int)prvp[x])\n                                       - (int)(srcppp[x]) - (int)(srcpnn[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x])) >> 4)"];
"1001027" [label="(Call,av_clip(val, lo, hi))"];
"1001023" [label="(Call,dstp[x] = av_clip(val, lo, hi))"];
"1000932" [label="(Call,8 * ((int)srcpp[x] + (int)srcpn[x]) + 2 * ((int)srcp[x] + (int)prvp[x])\n                                       - (int)(srcppp[x]) - (int)(srcpnn[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x]))"];
"1001011" [label="(Call,(int)(prvppp[x]) - (int)(prvpnn[x]))"];
"1001003" [label="(Call,2 * ((int)prvp[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x]))"];
"1000988" [label="(Call,(8 * ((int)srcpp[x] + (int)srcpn[x]) + 2 * ((int)prvp[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x])) >> 4)"];
"1000986" [label="(Call,val = (8 * ((int)srcpp[x] + (int)srcpn[x]) + 2 * ((int)prvp[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x])) >> 4)"];
"1000989" [label="(Call,8 * ((int)srcpp[x] + (int)srcpn[x]) + 2 * ((int)prvp[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x]))"];
"1000876" [label="(Call,0.116 * ((int)prvppp[x] + (int)prvpnn[x]))"];
"1000875" [label="(Call,0.116 * ((int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)prvp4p[x] + (int)prvp4p[x]))"];
"1000867" [label="(Call,0.170 * ((int)prvp[x])\n                                    - 0.116 * ((int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)prvp4p[x] + (int)prvp4p[x]))"];
"1000850" [label="(Call,valf = + 0.526 * ((int)srcpp[x] + (int)srcpn[x])\n                                    + 0.170 * ((int)prvp[x])\n                                    - 0.116 * ((int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)prvp4p[x] + (int)prvp4p[x]))"];
"1000852" [label="(Call,+ 0.526 * ((int)srcpp[x] + (int)srcpn[x])\n                                    + 0.170 * ((int)prvp[x])\n                                    - 0.116 * ((int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)prvp4p[x] + (int)prvp4p[x]))"];
"1000878" [label="(Call,(int)prvppp[x] + (int)prvpnn[x])"];
"1000799" [label="(Call,(int)prvppp[x])"];
"1000881" [label="(Call,prvppp[x])"];
"1001060" [label="(Call,prvpnn += 2 * psrc_linesize)"];
"1000418" [label="(Call,h - 4 + order)"];
"1000987" [label="(Identifier,val)"];
"1000975" [label="(Call,prvppp[x])"];
"1001075" [label="(Call,srcp   += 2 * src_linesize)"];
"1000786" [label="(Call,(int)srcppp[x] + (int)srcpnn[x] + (int)prvppp[x] + (int)prvpnn[x])"];
"1000659" [label="(Identifier,~3)"];
"1000501" [label="(Identifier,src_linesize)"];
"1000257" [label="(Identifier,plane)"];
"1000657" [label="(Call,x & ~3)"];
"1000460" [label="(Call,2 * psrc_linesize)"];
"1001125" [label="(Call,srcp = inpic->data[plane])"];
"1000388" [label="(Call,(3 -     order) * src_linesize)"];
"1000369" [label="(Identifier,dst_linesize)"];
"1000322" [label="(Identifier,srcp)"];
"1001006" [label="(Call,(int)prvp[x])"];
"1000925" [label="(Block,)"];
"1000658" [label="(Identifier,x)"];
"1000851" [label="(Identifier,valf)"];
"1000681" [label="(Call,AV_WB32(dstp + g, 0xeb80eb80))"];
"1001004" [label="(Call,2 * ((int)prvp[x]))"];
"1000398" [label="(Call,h - 2 + order)"];
"1001027" [label="(Call,av_clip(val, lo, hi))"];
"1000867" [label="(Call,0.170 * ((int)prvp[x])\n                                    - 0.116 * ((int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)prvp4p[x] + (int)prvp4p[x]))"];
"1000480" [label="(Literal,2)"];
"1000754" [label="(Call,+ 0.526 * ((int)srcpp[x] + (int)srcpn[x])\n                                    + 0.170 * ((int)srcp[x] + (int)prvp[x])\n                                    - 0.116 * ((int)srcppp[x] + (int)srcpnn[x] + (int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)srcp4p[x] + (int)srcp4n[x] + (int)prvp4p[x] + (int)prvp4n[x]))"];
"1000382" [label="(Call,2 + order)"];
"1000486" [label="(Call,4 * psrc_linesize)"];
"1000671" [label="(Identifier,g)"];
"1000465" [label="(Call,prvp - 4 * psrc_linesize)"];
"1000770" [label="(Call,0.170 * ((int)srcp[x] + (int)prvp[x]))"];
"1000665" [label="(Identifier,dstp)"];
"1000445" [label="(Identifier,psrc_linesize)"];
"1000577" [label="(Call,h - 5 - (1 - order))"];
"1000353" [label="(Identifier,bwidth)"];
"1000918" [label="(Identifier,dstp)"];
"1000985" [label="(Block,)"];
"1000468" [label="(Literal,4)"];
"1000300" [label="(Call,kerndeint->tmp_linesize[plane])"];
"1000870" [label="(Call,(int)prvp[x])"];
"1000616" [label="(Call,(int)srcp[x])"];
"1000363" [label="(Identifier,dst_linesize)"];
"1001059" [label="(Identifier,psrc_linesize)"];
"1000852" [label="(Call,+ 0.526 * ((int)srcpp[x] + (int)srcpn[x])\n                                    + 0.170 * ((int)prvp[x])\n                                    - 0.116 * ((int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)prvp4p[x] + (int)prvp4p[x]))"];
"1000380" [label="(Identifier,dstp_saved)"];
"1000772" [label="(Call,(int)srcp[x] + (int)prvp[x])"];
"1000373" [label="(Call,1 -     order)"];
"1000187" [label="(Identifier,order)"];
"1000417" [label="(Call,(h - 4 + order)  * dst_linesize)"];
"1001024" [label="(Call,dstp[x])"];
"1000377" [label="(Identifier,bwidth)"];
"1000459" [label="(Identifier,prvp)"];
"1000884" [label="(Call,(int)prvpnn[x])"];
"1001074" [label="(Identifier,psrc_linesize)"];
"1000573" [label="(Literal,1)"];
"1000596" [label="(Identifier,x)"];
"1000680" [label="(Block,)"];
"1000872" [label="(Call,prvp[x])"];
"1001145" [label="(Identifier,h)"];
"1000321" [label="(Call,srcp              = srcp_saved + (1 - order) * src_linesize)"];
"1000359" [label="(Call,dstp += 2 * dst_linesize)"];
"1000878" [label="(Call,(int)prvppp[x] + (int)prvpnn[x])"];
"1001044" [label="(Identifier,psrc_linesize)"];
"1001028" [label="(Identifier,val)"];
"1000479" [label="(Call,2 * psrc_linesize)"];
"1000462" [label="(Identifier,psrc_linesize)"];
"1000921" [label="(Identifier,valf)"];
"1000356" [label="(Call,2 * src_linesize)"];
"1000258" [label="(Block,)"];
"1000461" [label="(Literal,2)"];
"1000798" [label="(Call,(int)prvppp[x] + (int)prvpnn[x])"];
"1000583" [label="(Identifier,order)"];
"1000565" [label="(Identifier,order)"];
"1001053" [label="(Literal,2)"];
"1000429" [label="(Call,3 - order)"];
"1001054" [label="(Identifier,psrc_linesize)"];
"1000415" [label="(Call,dstp_saved + (h - 4 + order)  * dst_linesize)"];
"1001058" [label="(Literal,2)"];
"1000334" [label="(Call,(1 - order) * dst_linesize)"];
"1000923" [label="(Identifier,hi)"];
"1000457" [label="(Identifier,prvppp)"];
"1000773" [label="(Call,(int)srcp[x])"];
"1000487" [label="(Literal,4)"];
"1000389" [label="(Call,3 -     order)"];
"1001033" [label="(Call,dstp[x] = srcp[x])"];
"1000670" [label="(Call,g + 3)"];
"1000325" [label="(Call,(1 - order) * src_linesize)"];
"1001017" [label="(Call,(int)(prvpnn[x]))"];
"1000891" [label="(Literal,0.026)"];
"1000453" [label="(Call,prvp - psrc_linesize)"];
"1000986" [label="(Call,val = (8 * ((int)srcpp[x] + (int)srcpn[x]) + 2 * ((int)prvp[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x])) >> 4)"];
"1000404" [label="(Call,srcp_saved + (h - 1 - order) * src_linesize)"];
"1000889" [label="(Call,0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)prvp4p[x] + (int)prvp4p[x]))"];
"1000588" [label="(ControlStructure,for (x = 0; x < bwidth; x++))"];
"1000315" [label="(Identifier,dst_linesize)"];
"1000916" [label="(Call,dstp[x] = av_clip(valf, lo, hi))"];
"1000378" [label="(Call,memcpy(dstp_saved + (2 + order    )  * dst_linesize, srcp_saved + (3 -     order) * src_linesize, bwidth))"];
"1000755" [label="(Call,+ 0.526 * ((int)srcpp[x] + (int)srcpn[x]))"];
"1001068" [label="(Literal,2)"];
"1000931" [label="(Call,(8 * ((int)srcpp[x] + (int)srcpn[x]) + 2 * ((int)srcp[x] + (int)prvp[x])\n                                       - (int)(srcppp[x]) - (int)(srcpnn[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x])) >> 4)"];
"1001049" [label="(Identifier,psrc_linesize)"];
"1000656" [label="(Identifier,g)"];
"1000361" [label="(Call,2 * dst_linesize)"];
"1000787" [label="(Call,(int)srcppp[x])"];
"1000664" [label="(Call,dstp + g)"];
"1000667" [label="(Literal,0xffffffff)"];
"1001045" [label="(Call,prvpp  += 2 * psrc_linesize)"];
"1000955" [label="(Call,(int)prvp[x])"];
"1000601" [label="(Identifier,thresh)"];
"1000663" [label="(Call,AV_WB32(dstp + g, 0xffffffff))"];
"1000500" [label="(Identifier,order)"];
"1000725" [label="(Call,x & 1)"];
"1000381" [label="(Call,(2 + order    )  * dst_linesize)"];
"1000748" [label="(Block,)"];
"1000477" [label="(Call,prvp + 2 * psrc_linesize)"];
"1000973" [label="(Call,(int)(prvppp[x]))"];
"1000554" [label="(Call,dstp   = dstp_saved + 5 * dst_linesize - (1 - order) * dst_linesize)"];
"1000879" [label="(Call,(int)prvppp[x])"];
"1000949" [label="(Call,(int)srcp[x] + (int)prvp[x])"];
"1001055" [label="(Call,prvpn  += 2 * psrc_linesize)"];
"1000589" [label="(Call,x = 0)"];
"1000947" [label="(Call,2 * ((int)srcp[x] + (int)prvp[x]))"];
"1000689" [label="(Identifier,g)"];
"1000186" [label="(Call,order  = kerndeint->order)"];
"1000352" [label="(Identifier,srcp)"];
"1000875" [label="(Call,0.116 * ((int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)prvp4p[x] + (int)prvp4p[x]))"];
"1000499" [label="(Literal,1)"];
"1000354" [label="(Call,srcp += 2 * src_linesize)"];
"1000370" [label="(Call,srcp_saved + (1 -     order) * src_linesize)"];
"1000823" [label="(Call,0.031 * ((int)srcp4p[x] + (int)srcp4n[x] + (int)prvp4p[x] + (int)prvp4n[x]))"];
"1000416" [label="(Identifier,dstp_saved)"];
"1000868" [label="(Call,0.170 * ((int)prvp[x]))"];
"1000727" [label="(Literal,1)"];
"1000890" [label="(Call,0.026 * ((int)srcp3p[x] + (int)srcp3n[x]))"];
"1000572" [label="(Call,1 - order)"];
"1001041" [label="(Identifier,prvp)"];
"1000684" [label="(Identifier,g)"];
"1000688" [label="(Call,g + 3)"];
"1000669" [label="(Identifier,x)"];
"1000978" [label="(Call,(int)(prvpnn[x]))"];
"1001003" [label="(Call,2 * ((int)prvp[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x]))"];
"1001042" [label="(Call,2 * psrc_linesize)"];
"1001139" [label="(Call,av_image_copy_plane(dstp, psrc_linesize, srcp, src_linesize, bwidth, h))"];
"1001052" [label="(Call,2 * psrc_linesize)"];
"1000735" [label="(Call,hi = plane == 0 ? 235 : 240)"];
"1000446" [label="(Call,(1 - order) * psrc_linesize)"];
"1000853" [label="(Call,+ 0.526 * ((int)srcpp[x] + (int)srcpn[x]))"];
"1000327" [label="(Literal,1)"];
"1000393" [label="(Identifier,bwidth)"];
"1000929" [label="(Call,val = (8 * ((int)srcpp[x] + (int)srcpn[x]) + 2 * ((int)srcp[x] + (int)prvp[x])\n                                       - (int)(srcppp[x]) - (int)(srcpnn[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x])) >> 4)"];
"1000792" [label="(Call,(int)srcpnn[x] + (int)prvppp[x] + (int)prvpnn[x])"];
"1000654" [label="(Block,)"];
"1000452" [label="(Identifier,prvpp)"];
"1001046" [label="(Identifier,prvpp)"];
"1000347" [label="(Identifier,y)"];
"1000362" [label="(Literal,2)"];
"1000711" [label="(Call,lo = 0)"];
"1000498" [label="(Call,1 - order)"];
"1000724" [label="(Call,x & 1 ? 240 : 235)"];
"1000482" [label="(Call,prvp4n = prvp + 4 * psrc_linesize)"];
"1000455" [label="(Identifier,psrc_linesize)"];
"1000349" [label="(Block,)"];
"1001132" [label="(Call,dstp = kerndeint->tmp_data[plane])"];
"1000811" [label="(Literal,0.026)"];
"1000810" [label="(Call,0.026 * ((int)srcp3p[x] + (int)srcp3n[x]))"];
"1000780" [label="(Call,prvp[x])"];
"1001144" [label="(Identifier,bwidth)"];
"1000413" [label="(Identifier,bwidth)"];
"1000574" [label="(Identifier,order)"];
"1000433" [label="(Identifier,bwidth)"];
"1000587" [label="(Block,)"];
"1000920" [label="(Call,av_clip(valf, lo, hi))"];
"1001062" [label="(Call,2 * psrc_linesize)"];
"1000932" [label="(Call,8 * ((int)srcpp[x] + (int)srcpn[x]) + 2 * ((int)srcp[x] + (int)prvp[x])\n                                       - (int)(srcppp[x]) - (int)(srcpnn[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x]))"];
"1000990" [label="(Call,8 * ((int)srcpp[x] + (int)srcpn[x]))"];
"1000329" [label="(Identifier,src_linesize)"];
"1000365" [label="(Call,dstp_saved + order            * dst_linesize)"];
"1001069" [label="(Identifier,psrc_linesize)"];
"1001142" [label="(Identifier,srcp)"];
"1000481" [label="(Identifier,psrc_linesize)"];
"1000454" [label="(Identifier,prvp)"];
"1001067" [label="(Call,2 * psrc_linesize)"];
"1000585" [label="(Identifier,y)"];
"1000436" [label="(Call,kerndeint->tmp_data[plane] + 5 * psrc_linesize - (1 - order) * psrc_linesize)"];
"1000466" [label="(Identifier,prvp)"];
"1000298" [label="(Call,psrc_linesize     = kerndeint->tmp_linesize[plane])"];
"1000392" [label="(Identifier,src_linesize)"];
"1000972" [label="(Call,(int)(prvppp[x]) - (int)(prvpnn[x]))"];
"1000611" [label="(Call,(int)prvp[x])"];
"1000435" [label="(Identifier,prvp)"];
"1000427" [label="(Call,h - 3 - order)"];
"1000469" [label="(Identifier,psrc_linesize)"];
"1000284" [label="(Call,srcp_saved = inpic->data[plane])"];
"1000497" [label="(Call,(1 - order) * src_linesize)"];
"1001064" [label="(Identifier,psrc_linesize)"];
"1000458" [label="(Call,prvp - 2 * psrc_linesize)"];
"1000743" [label="(Call,lo = 16)"];
"1000332" [label="(Call,dstp_saved + (1 - order) * dst_linesize)"];
"1000444" [label="(Literal,5)"];
"1001023" [label="(Call,dstp[x] = av_clip(val, lo, hi))"];
"1000397" [label="(Call,(h - 2 + order)  * dst_linesize)"];
"1001117" [label="(Call,2 * src_linesize)"];
"1001022" [label="(Literal,4)"];
"1000338" [label="(Identifier,dst_linesize)"];
"1000306" [label="(Identifier,dstp)"];
"1000957" [label="(Call,prvp[x])"];
"1000661" [label="(Identifier,is_packed_rgb)"];
"1000451" [label="(Call,prvpp  = prvp - psrc_linesize)"];
"1000960" [label="(Call,(int)(srcppp[x]) - (int)(srcpnn[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x]))"];
"1000662" [label="(Block,)"];
"1001030" [label="(Identifier,hi)"];
"1001040" [label="(Call,prvp   += 2 * psrc_linesize)"];
"1000961" [label="(Call,(int)(srcppp[x]))"];
"1001050" [label="(Call,prvppp += 2 * psrc_linesize)"];
"1000351" [label="(Identifier,dstp)"];
"1000367" [label="(Call,order            * dst_linesize)"];
"1000682" [label="(Call,dstp + g)"];
"1000350" [label="(Call,memcpy(dstp, srcp, bwidth))"];
"1000594" [label="(Identifier,bwidth)"];
"1000426" [label="(Call,(h - 3 - order) * src_linesize)"];
"1000683" [label="(Identifier,dstp)"];
"1001141" [label="(Identifier,psrc_linesize)"];
"1000876" [label="(Call,0.116 * ((int)prvppp[x] + (int)prvpnn[x]))"];
"1000307" [label="(Call,dstp_saved = outpic->data[plane])"];
"1000751" [label="(Block,)"];
"1000328" [label="(Identifier,order)"];
"1000379" [label="(Call,dstp_saved + (2 + order    )  * dst_linesize)"];
"1000988" [label="(Call,(8 * ((int)srcpp[x] + (int)srcpn[x]) + 2 * ((int)prvp[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x])) >> 4)"];
"1000420" [label="(Call,4 + order)"];
"1000326" [label="(Call,1 - order)"];
"1000804" [label="(Call,(int)prvpnn[x])"];
"1000414" [label="(Call,memcpy(dstp_saved + (h - 4 + order)  * dst_linesize, srcp_saved + (h - 3 - order) * src_linesize, bwidth))"];
"1000930" [label="(Identifier,val)"];
"1001121" [label="(Identifier,dstp)"];
"1001014" [label="(Call,prvppp[x])"];
"1000470" [label="(Call,prvpn  = prvp + psrc_linesize)"];
"1000475" [label="(Call,prvpnn = prvp + 2 * psrc_linesize)"];
"1001120" [label="(Call,dstp   += 2 * dst_linesize)"];
"1000430" [label="(Literal,3)"];
"1000592" [label="(Call,x < bwidth)"];
"1000672" [label="(Literal,3)"];
"1000396" [label="(Identifier,dstp_saved)"];
"1000708" [label="(Call,hi = 255)"];
"1001047" [label="(Call,2 * psrc_linesize)"];
"1000443" [label="(Call,5 * psrc_linesize)"];
"1000386" [label="(Call,srcp_saved + (3 -     order) * src_linesize)"];
"1001073" [label="(Literal,2)"];
"1000668" [label="(Call,x = g + 3)"];
"1000447" [label="(Call,1 - order)"];
"1001025" [label="(Identifier,dstp)"];
"1000769" [label="(Call,0.170 * ((int)srcp[x] + (int)prvp[x])\n                                    - 0.116 * ((int)srcppp[x] + (int)srcpnn[x] + (int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)srcp4p[x] + (int)srcp4n[x] + (int)prvp4p[x] + (int)prvp4n[x]))"];
"1000364" [label="(Call,memcpy(dstp_saved + order            * dst_linesize, srcp_saved + (1 -     order) * src_linesize, bwidth))"];
"1000395" [label="(Call,dstp_saved + (h - 2 + order)  * dst_linesize)"];
"1000411" [label="(Identifier,order)"];
"1000785" [label="(Literal,0.116)"];
"1000593" [label="(Identifier,x)"];
"1000564" [label="(Literal,1)"];
"1000655" [label="(Call,g = x & ~3)"];
"1000523" [label="(Call,srcp - 4 * src_linesize)"];
"1000188" [label="(Call,kerndeint->order)"];
"1000783" [label="(Call,0.116 * ((int)srcppp[x] + (int)srcpnn[x] + (int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)srcp4p[x] + (int)srcp4n[x] + (int)prvp4p[x] + (int)prvp4n[x]))"];
"1000375" [label="(Identifier,order)"];
"1001029" [label="(Identifier,lo)"];
"1000903" [label="(Call,0.031 * ((int)prvp4p[x] + (int)prvp4p[x]))"];
"1000449" [label="(Identifier,order)"];
"1000752" [label="(Call,valf = + 0.526 * ((int)srcpp[x] + (int)srcpn[x])\n                                    + 0.170 * ((int)srcp[x] + (int)prvp[x])\n                                    - 0.116 * ((int)srcppp[x] + (int)srcpnn[x] + (int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)srcp4p[x] + (int)srcp4n[x] + (int)prvp4p[x] + (int)prvp4n[x]))"];
"1001072" [label="(Call,2 * psrc_linesize)"];
"1001070" [label="(Call,prvp4n += 2 * psrc_linesize)"];
"1000336" [label="(Literal,1)"];
"1000484" [label="(Call,prvp + 4 * psrc_linesize)"];
"1000581" [label="(Call,1 - order)"];
"1000729" [label="(Literal,235)"];
"1000431" [label="(Identifier,order)"];
"1000448" [label="(Literal,1)"];
"1000390" [label="(Literal,3)"];
"1000582" [label="(Literal,1)"];
"1001011" [label="(Call,(int)(prvppp[x]) - (int)(prvpnn[x]))"];
"1000551" [label="(Call,4 * src_linesize)"];
"1000966" [label="(Call,(int)(srcpnn[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x]))"];
"1001012" [label="(Call,(int)(prvppp[x]))"];
"1001057" [label="(Call,2 * psrc_linesize)"];
"1000193" [label="(Identifier,map)"];
"1000690" [label="(Literal,3)"];
"1000793" [label="(Call,(int)srcpnn[x])"];
"1000801" [label="(Call,prvppp[x])"];
"1000784" [label="(Call,0.116 * ((int)srcppp[x] + (int)srcpnn[x] + (int)prvppp[x] + (int)prvpnn[x]))"];
"1000877" [label="(Literal,0.116)"];
"1000983" [label="(Literal,4)"];
"1000374" [label="(Literal,1)"];
"1000368" [label="(Identifier,order)"];
"1000467" [label="(Call,4 * psrc_linesize)"];
"1000120" [label="(Block,)"];
"1000928" [label="(Block,)"];
"1000394" [label="(Call,memcpy(dstp_saved + (h - 2 + order)  * dst_linesize, srcp_saved + (h - 1 - order) * src_linesize, bwidth))"];
"1000450" [label="(Identifier,psrc_linesize)"];
"1000989" [label="(Call,8 * ((int)srcpp[x] + (int)srcpn[x]) + 2 * ((int)prvp[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x]))"];
"1000728" [label="(Literal,240)"];
"1000778" [label="(Call,(int)prvp[x])"];
"1001008" [label="(Call,prvp[x])"];
"1000299" [label="(Identifier,psrc_linesize)"];
"1000376" [label="(Identifier,src_linesize)"];
"1000472" [label="(Call,prvp + psrc_linesize)"];
"1000275" [label="(Call,bwidth = kerndeint->tmp_bwidth[plane])"];
"1000850" [label="(Call,valf = + 0.526 * ((int)srcpp[x] + (int)srcpn[x])\n                                    + 0.170 * ((int)prvp[x])\n                                    - 0.116 * ((int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)prvp4p[x] + (int)prvp4p[x]))"];
"1000726" [label="(Identifier,x)"];
"1000686" [label="(Call,x = g + 3)"];
"1001056" [label="(Identifier,prvpn)"];
"1001065" [label="(Call,prvp4p += 2 * psrc_linesize)"];
"1000464" [label="(Identifier,prvp4p)"];
"1000335" [label="(Call,1 - order)"];
"1000314" [label="(Call,dst_linesize      = outpic->linesize[plane])"];
"1000687" [label="(Identifier,x)"];
"1001143" [label="(Identifier,src_linesize)"];
"1000463" [label="(Call,prvp4p = prvp - 4 * psrc_linesize)"];
"1000946" [label="(Call,2 * ((int)srcp[x] + (int)prvp[x])\n                                       - (int)(srcppp[x]) - (int)(srcpnn[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x]))"];
"1001051" [label="(Identifier,prvppp)"];
"1000967" [label="(Call,(int)(srcpnn[x]))"];
"1001063" [label="(Literal,2)"];
"1000434" [label="(Call,prvp   = kerndeint->tmp_data[plane] + 5 * psrc_linesize - (1 - order) * psrc_linesize)"];
"1001048" [label="(Literal,2)"];
"1000809" [label="(Call,0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)srcp4p[x] + (int)srcp4n[x] + (int)prvp4p[x] + (int)prvp4n[x]))"];
"1000595" [label="(Call,x++)"];
"1000456" [label="(Call,prvppp = prvp - 2 * psrc_linesize)"];
"1000355" [label="(Identifier,srcp)"];
"1000753" [label="(Identifier,valf)"];
"1000372" [label="(Call,(1 -     order) * src_linesize)"];
"1000610" [label="(Call,(int)prvp[x]  - (int)srcp[x])"];
"1000360" [label="(Identifier,dstp)"];
"1000409" [label="(Call,1 - order)"];
"1000316" [label="(Call,outpic->linesize[plane])"];
"1000424" [label="(Call,srcp_saved + (h - 3 - order) * src_linesize)"];
"1001140" [label="(Identifier,dstp)"];
"1000406" [label="(Call,(h - 1 - order) * src_linesize)"];
"1001043" [label="(Literal,2)"];
"1000685" [label="(Literal,0xeb80eb80)"];
"1000562" [label="(Call,(1 - order) * dst_linesize)"];
"1000933" [label="(Call,8 * ((int)srcpp[x] + (int)srcpn[x]))"];
"1000849" [label="(Block,)"];
"1000693" [label="(Call,dstp[x] = plane == 0 ? 235 : 128)"];
"1000563" [label="(Call,1 - order)"];
"1000400" [label="(Call,2 + order)"];
"1000613" [label="(Call,prvp[x])"];
"1000730" [label="(Call,lo = 16)"];
"1000488" [label="(Identifier,psrc_linesize)"];
"1001122" [label="(Call,2 * dst_linesize)"];
"1001153" [label="(MethodReturn,static int)"];
"1000566" [label="(Identifier,dst_linesize)"];
"1000917" [label="(Call,dstp[x])"];
"1000442" [label="(Call,5 * psrc_linesize - (1 - order) * psrc_linesize)"];
"1000410" [label="(Literal,1)"];
"1000570" [label="(Call,5 - (1 - order))"];
"1000407" [label="(Call,h - 1 - order)"];
"1000579" [label="(Call,5 - (1 - order))"];
"1000722" [label="(Call,hi = x & 1 ? 240 : 235)"];
"1000391" [label="(Identifier,order)"];
"1000922" [label="(Identifier,lo)"];
"1000330" [label="(Call,dstp              = dstp_saved + (1 - order) * dst_linesize)"];
"1000950" [label="(Call,(int)srcp[x])"];
"1000666" [label="(Identifier,g)"];
"1000337" [label="(Identifier,order)"];
"1000799" -> "1000798"  [label="AST: "];
"1000799" -> "1000801"  [label="CFG: "];
"1000800" -> "1000799"  [label="AST: "];
"1000801" -> "1000799"  [label="AST: "];
"1000805" -> "1000799"  [label="CFG: "];
"1000799" -> "1001153"  [label="DDG: prvppp[x]"];
"1000799" -> "1000784"  [label="DDG: prvppp[x]"];
"1000799" -> "1000786"  [label="DDG: prvppp[x]"];
"1000799" -> "1000792"  [label="DDG: prvppp[x]"];
"1000799" -> "1000798"  [label="DDG: prvppp[x]"];
"1001050" -> "1000799"  [label="DDG: prvppp"];
"1000879" -> "1000799"  [label="DDG: prvppp[x]"];
"1000456" -> "1000799"  [label="DDG: prvppp"];
"1000973" -> "1000799"  [label="DDG: prvppp[x]"];
"1001012" -> "1000799"  [label="DDG: prvppp[x]"];
"1000799" -> "1000879"  [label="DDG: prvppp[x]"];
"1000799" -> "1000973"  [label="DDG: prvppp[x]"];
"1000799" -> "1001012"  [label="DDG: prvppp[x]"];
"1000799" -> "1001050"  [label="DDG: prvppp[x]"];
"1001050" -> "1000587"  [label="AST: "];
"1001050" -> "1001052"  [label="CFG: "];
"1001051" -> "1001050"  [label="AST: "];
"1001052" -> "1001050"  [label="AST: "];
"1001056" -> "1001050"  [label="CFG: "];
"1001050" -> "1001153"  [label="DDG: prvppp"];
"1001050" -> "1000879"  [label="DDG: prvppp"];
"1001050" -> "1000973"  [label="DDG: prvppp"];
"1001050" -> "1001012"  [label="DDG: prvppp"];
"1001052" -> "1001050"  [label="DDG: 2"];
"1001052" -> "1001050"  [label="DDG: psrc_linesize"];
"1000879" -> "1001050"  [label="DDG: prvppp[x]"];
"1000456" -> "1001050"  [label="DDG: prvppp"];
"1000973" -> "1001050"  [label="DDG: prvppp[x]"];
"1001012" -> "1001050"  [label="DDG: prvppp[x]"];
"1001052" -> "1001054"  [label="CFG: "];
"1001053" -> "1001052"  [label="AST: "];
"1001054" -> "1001052"  [label="AST: "];
"1001047" -> "1001052"  [label="DDG: psrc_linesize"];
"1001052" -> "1001057"  [label="DDG: psrc_linesize"];
"1001047" -> "1001045"  [label="AST: "];
"1001047" -> "1001049"  [label="CFG: "];
"1001048" -> "1001047"  [label="AST: "];
"1001049" -> "1001047"  [label="AST: "];
"1001045" -> "1001047"  [label="CFG: "];
"1001047" -> "1001045"  [label="DDG: 2"];
"1001047" -> "1001045"  [label="DDG: psrc_linesize"];
"1001042" -> "1001047"  [label="DDG: psrc_linesize"];
"1001042" -> "1001040"  [label="AST: "];
"1001042" -> "1001044"  [label="CFG: "];
"1001043" -> "1001042"  [label="AST: "];
"1001044" -> "1001042"  [label="AST: "];
"1001040" -> "1001042"  [label="CFG: "];
"1001042" -> "1001040"  [label="DDG: 2"];
"1001042" -> "1001040"  [label="DDG: psrc_linesize"];
"1001072" -> "1001042"  [label="DDG: psrc_linesize"];
"1000486" -> "1001042"  [label="DDG: psrc_linesize"];
"1001072" -> "1001070"  [label="AST: "];
"1001072" -> "1001074"  [label="CFG: "];
"1001073" -> "1001072"  [label="AST: "];
"1001074" -> "1001072"  [label="AST: "];
"1001070" -> "1001072"  [label="CFG: "];
"1001072" -> "1001070"  [label="DDG: 2"];
"1001072" -> "1001070"  [label="DDG: psrc_linesize"];
"1001067" -> "1001072"  [label="DDG: psrc_linesize"];
"1001072" -> "1001139"  [label="DDG: psrc_linesize"];
"1001067" -> "1001065"  [label="AST: "];
"1001067" -> "1001069"  [label="CFG: "];
"1001068" -> "1001067"  [label="AST: "];
"1001069" -> "1001067"  [label="AST: "];
"1001065" -> "1001067"  [label="CFG: "];
"1001067" -> "1001065"  [label="DDG: 2"];
"1001067" -> "1001065"  [label="DDG: psrc_linesize"];
"1001062" -> "1001067"  [label="DDG: psrc_linesize"];
"1001062" -> "1001060"  [label="AST: "];
"1001062" -> "1001064"  [label="CFG: "];
"1001063" -> "1001062"  [label="AST: "];
"1001064" -> "1001062"  [label="AST: "];
"1001060" -> "1001062"  [label="CFG: "];
"1001062" -> "1001060"  [label="DDG: 2"];
"1001062" -> "1001060"  [label="DDG: psrc_linesize"];
"1001057" -> "1001062"  [label="DDG: psrc_linesize"];
"1001057" -> "1001055"  [label="AST: "];
"1001057" -> "1001059"  [label="CFG: "];
"1001058" -> "1001057"  [label="AST: "];
"1001059" -> "1001057"  [label="AST: "];
"1001055" -> "1001057"  [label="CFG: "];
"1001057" -> "1001055"  [label="DDG: 2"];
"1001057" -> "1001055"  [label="DDG: psrc_linesize"];
"1000486" -> "1000484"  [label="AST: "];
"1000486" -> "1000488"  [label="CFG: "];
"1000487" -> "1000486"  [label="AST: "];
"1000488" -> "1000486"  [label="AST: "];
"1000484" -> "1000486"  [label="CFG: "];
"1000486" -> "1000482"  [label="DDG: 4"];
"1000486" -> "1000482"  [label="DDG: psrc_linesize"];
"1000486" -> "1000484"  [label="DDG: 4"];
"1000486" -> "1000484"  [label="DDG: psrc_linesize"];
"1000479" -> "1000486"  [label="DDG: psrc_linesize"];
"1000486" -> "1001139"  [label="DDG: psrc_linesize"];
"1000479" -> "1000477"  [label="AST: "];
"1000479" -> "1000481"  [label="CFG: "];
"1000480" -> "1000479"  [label="AST: "];
"1000481" -> "1000479"  [label="AST: "];
"1000477" -> "1000479"  [label="CFG: "];
"1000479" -> "1000475"  [label="DDG: 2"];
"1000479" -> "1000475"  [label="DDG: psrc_linesize"];
"1000479" -> "1000477"  [label="DDG: 2"];
"1000479" -> "1000477"  [label="DDG: psrc_linesize"];
"1000467" -> "1000479"  [label="DDG: psrc_linesize"];
"1000467" -> "1000465"  [label="AST: "];
"1000467" -> "1000469"  [label="CFG: "];
"1000468" -> "1000467"  [label="AST: "];
"1000469" -> "1000467"  [label="AST: "];
"1000465" -> "1000467"  [label="CFG: "];
"1000467" -> "1000465"  [label="DDG: 4"];
"1000467" -> "1000465"  [label="DDG: psrc_linesize"];
"1000460" -> "1000467"  [label="DDG: psrc_linesize"];
"1000467" -> "1000470"  [label="DDG: psrc_linesize"];
"1000467" -> "1000472"  [label="DDG: psrc_linesize"];
"1000460" -> "1000458"  [label="AST: "];
"1000460" -> "1000462"  [label="CFG: "];
"1000461" -> "1000460"  [label="AST: "];
"1000462" -> "1000460"  [label="AST: "];
"1000458" -> "1000460"  [label="CFG: "];
"1000460" -> "1000458"  [label="DDG: 2"];
"1000460" -> "1000458"  [label="DDG: psrc_linesize"];
"1000453" -> "1000460"  [label="DDG: psrc_linesize"];
"1000453" -> "1000451"  [label="AST: "];
"1000453" -> "1000455"  [label="CFG: "];
"1000454" -> "1000453"  [label="AST: "];
"1000455" -> "1000453"  [label="AST: "];
"1000451" -> "1000453"  [label="CFG: "];
"1000453" -> "1000451"  [label="DDG: prvp"];
"1000453" -> "1000451"  [label="DDG: psrc_linesize"];
"1000778" -> "1000453"  [label="DDG: prvp[x]"];
"1001006" -> "1000453"  [label="DDG: prvp[x]"];
"1000955" -> "1000453"  [label="DDG: prvp[x]"];
"1000434" -> "1000453"  [label="DDG: prvp"];
"1000611" -> "1000453"  [label="DDG: prvp[x]"];
"1000870" -> "1000453"  [label="DDG: prvp[x]"];
"1000446" -> "1000453"  [label="DDG: psrc_linesize"];
"1000453" -> "1000458"  [label="DDG: prvp"];
"1000778" -> "1000772"  [label="AST: "];
"1000778" -> "1000780"  [label="CFG: "];
"1000779" -> "1000778"  [label="AST: "];
"1000780" -> "1000778"  [label="AST: "];
"1000772" -> "1000778"  [label="CFG: "];
"1000778" -> "1001153"  [label="DDG: prvp[x]"];
"1000778" -> "1000458"  [label="DDG: prvp[x]"];
"1000778" -> "1000465"  [label="DDG: prvp[x]"];
"1000778" -> "1000470"  [label="DDG: prvp[x]"];
"1000778" -> "1000472"  [label="DDG: prvp[x]"];
"1000778" -> "1000475"  [label="DDG: prvp[x]"];
"1000778" -> "1000477"  [label="DDG: prvp[x]"];
"1000778" -> "1000482"  [label="DDG: prvp[x]"];
"1000778" -> "1000484"  [label="DDG: prvp[x]"];
"1000778" -> "1000611"  [label="DDG: prvp[x]"];
"1000778" -> "1000770"  [label="DDG: prvp[x]"];
"1000778" -> "1000772"  [label="DDG: prvp[x]"];
"1001040" -> "1000778"  [label="DDG: prvp"];
"1001006" -> "1000778"  [label="DDG: prvp[x]"];
"1000955" -> "1000778"  [label="DDG: prvp[x]"];
"1000611" -> "1000778"  [label="DDG: prvp[x]"];
"1000870" -> "1000778"  [label="DDG: prvp[x]"];
"1000465" -> "1000778"  [label="DDG: prvp"];
"1000778" -> "1000870"  [label="DDG: prvp[x]"];
"1000778" -> "1000955"  [label="DDG: prvp[x]"];
"1000778" -> "1001006"  [label="DDG: prvp[x]"];
"1000778" -> "1001040"  [label="DDG: prvp[x]"];
"1001040" -> "1000587"  [label="AST: "];
"1001041" -> "1001040"  [label="AST: "];
"1001046" -> "1001040"  [label="CFG: "];
"1001040" -> "1001153"  [label="DDG: prvp"];
"1001040" -> "1000611"  [label="DDG: prvp"];
"1001040" -> "1000870"  [label="DDG: prvp"];
"1001040" -> "1000955"  [label="DDG: prvp"];
"1001040" -> "1001006"  [label="DDG: prvp"];
"1001006" -> "1001040"  [label="DDG: prvp[x]"];
"1000955" -> "1001040"  [label="DDG: prvp[x]"];
"1000611" -> "1001040"  [label="DDG: prvp[x]"];
"1000870" -> "1001040"  [label="DDG: prvp[x]"];
"1000465" -> "1001040"  [label="DDG: prvp"];
"1001006" -> "1001004"  [label="AST: "];
"1001006" -> "1001008"  [label="CFG: "];
"1001007" -> "1001006"  [label="AST: "];
"1001008" -> "1001006"  [label="AST: "];
"1001004" -> "1001006"  [label="CFG: "];
"1001006" -> "1001153"  [label="DDG: prvp[x]"];
"1001006" -> "1000458"  [label="DDG: prvp[x]"];
"1001006" -> "1000465"  [label="DDG: prvp[x]"];
"1001006" -> "1000470"  [label="DDG: prvp[x]"];
"1001006" -> "1000472"  [label="DDG: prvp[x]"];
"1001006" -> "1000475"  [label="DDG: prvp[x]"];
"1001006" -> "1000477"  [label="DDG: prvp[x]"];
"1001006" -> "1000482"  [label="DDG: prvp[x]"];
"1001006" -> "1000484"  [label="DDG: prvp[x]"];
"1001006" -> "1000611"  [label="DDG: prvp[x]"];
"1001006" -> "1000870"  [label="DDG: prvp[x]"];
"1001006" -> "1000955"  [label="DDG: prvp[x]"];
"1001006" -> "1001004"  [label="DDG: prvp[x]"];
"1000955" -> "1001006"  [label="DDG: prvp[x]"];
"1000611" -> "1001006"  [label="DDG: prvp[x]"];
"1000870" -> "1001006"  [label="DDG: prvp[x]"];
"1000465" -> "1001006"  [label="DDG: prvp"];
"1000955" -> "1000949"  [label="AST: "];
"1000955" -> "1000957"  [label="CFG: "];
"1000956" -> "1000955"  [label="AST: "];
"1000957" -> "1000955"  [label="AST: "];
"1000949" -> "1000955"  [label="CFG: "];
"1000955" -> "1001153"  [label="DDG: prvp[x]"];
"1000955" -> "1000458"  [label="DDG: prvp[x]"];
"1000955" -> "1000465"  [label="DDG: prvp[x]"];
"1000955" -> "1000470"  [label="DDG: prvp[x]"];
"1000955" -> "1000472"  [label="DDG: prvp[x]"];
"1000955" -> "1000475"  [label="DDG: prvp[x]"];
"1000955" -> "1000477"  [label="DDG: prvp[x]"];
"1000955" -> "1000482"  [label="DDG: prvp[x]"];
"1000955" -> "1000484"  [label="DDG: prvp[x]"];
"1000955" -> "1000611"  [label="DDG: prvp[x]"];
"1000955" -> "1000870"  [label="DDG: prvp[x]"];
"1000955" -> "1000947"  [label="DDG: prvp[x]"];
"1000955" -> "1000949"  [label="DDG: prvp[x]"];
"1000611" -> "1000955"  [label="DDG: prvp[x]"];
"1000870" -> "1000955"  [label="DDG: prvp[x]"];
"1000465" -> "1000955"  [label="DDG: prvp"];
"1000611" -> "1000610"  [label="AST: "];
"1000611" -> "1000613"  [label="CFG: "];
"1000612" -> "1000611"  [label="AST: "];
"1000613" -> "1000611"  [label="AST: "];
"1000617" -> "1000611"  [label="CFG: "];
"1000611" -> "1001153"  [label="DDG: prvp[x]"];
"1000611" -> "1000458"  [label="DDG: prvp[x]"];
"1000611" -> "1000465"  [label="DDG: prvp[x]"];
"1000611" -> "1000470"  [label="DDG: prvp[x]"];
"1000611" -> "1000472"  [label="DDG: prvp[x]"];
"1000611" -> "1000475"  [label="DDG: prvp[x]"];
"1000611" -> "1000477"  [label="DDG: prvp[x]"];
"1000611" -> "1000482"  [label="DDG: prvp[x]"];
"1000611" -> "1000484"  [label="DDG: prvp[x]"];
"1000611" -> "1000610"  [label="DDG: prvp[x]"];
"1000870" -> "1000611"  [label="DDG: prvp[x]"];
"1000465" -> "1000611"  [label="DDG: prvp"];
"1000611" -> "1000870"  [label="DDG: prvp[x]"];
"1000870" -> "1000868"  [label="AST: "];
"1000870" -> "1000872"  [label="CFG: "];
"1000871" -> "1000870"  [label="AST: "];
"1000872" -> "1000870"  [label="AST: "];
"1000868" -> "1000870"  [label="CFG: "];
"1000870" -> "1001153"  [label="DDG: prvp[x]"];
"1000870" -> "1000458"  [label="DDG: prvp[x]"];
"1000870" -> "1000465"  [label="DDG: prvp[x]"];
"1000870" -> "1000470"  [label="DDG: prvp[x]"];
"1000870" -> "1000472"  [label="DDG: prvp[x]"];
"1000870" -> "1000475"  [label="DDG: prvp[x]"];
"1000870" -> "1000477"  [label="DDG: prvp[x]"];
"1000870" -> "1000482"  [label="DDG: prvp[x]"];
"1000870" -> "1000484"  [label="DDG: prvp[x]"];
"1000870" -> "1000868"  [label="DDG: prvp[x]"];
"1000465" -> "1000870"  [label="DDG: prvp"];
"1000465" -> "1000463"  [label="AST: "];
"1000466" -> "1000465"  [label="AST: "];
"1000463" -> "1000465"  [label="CFG: "];
"1000465" -> "1000463"  [label="DDG: prvp"];
"1000465" -> "1000463"  [label="DDG: 4 * psrc_linesize"];
"1000458" -> "1000465"  [label="DDG: prvp"];
"1000465" -> "1000470"  [label="DDG: prvp"];
"1000465" -> "1000472"  [label="DDG: prvp"];
"1000465" -> "1000475"  [label="DDG: prvp"];
"1000465" -> "1000477"  [label="DDG: prvp"];
"1000465" -> "1000482"  [label="DDG: prvp"];
"1000465" -> "1000484"  [label="DDG: prvp"];
"1000458" -> "1000456"  [label="AST: "];
"1000459" -> "1000458"  [label="AST: "];
"1000456" -> "1000458"  [label="CFG: "];
"1000458" -> "1000456"  [label="DDG: prvp"];
"1000458" -> "1000456"  [label="DDG: 2 * psrc_linesize"];
"1000434" -> "1000258"  [label="AST: "];
"1000434" -> "1000436"  [label="CFG: "];
"1000435" -> "1000434"  [label="AST: "];
"1000436" -> "1000434"  [label="AST: "];
"1000452" -> "1000434"  [label="CFG: "];
"1000434" -> "1001153"  [label="DDG: kerndeint->tmp_data[plane] + 5 * psrc_linesize - (1 - order) * psrc_linesize"];
"1000442" -> "1000434"  [label="DDG: 5 * psrc_linesize"];
"1000442" -> "1000434"  [label="DDG: (1 - order) * psrc_linesize"];
"1000442" -> "1000436"  [label="AST: "];
"1000442" -> "1000446"  [label="CFG: "];
"1000443" -> "1000442"  [label="AST: "];
"1000446" -> "1000442"  [label="AST: "];
"1000436" -> "1000442"  [label="CFG: "];
"1000442" -> "1001153"  [label="DDG: 5 * psrc_linesize"];
"1000442" -> "1001153"  [label="DDG: (1 - order) * psrc_linesize"];
"1000442" -> "1000436"  [label="DDG: 5 * psrc_linesize"];
"1000442" -> "1000436"  [label="DDG: (1 - order) * psrc_linesize"];
"1000443" -> "1000442"  [label="DDG: 5"];
"1000443" -> "1000442"  [label="DDG: psrc_linesize"];
"1000446" -> "1000442"  [label="DDG: 1 - order"];
"1000446" -> "1000442"  [label="DDG: psrc_linesize"];
"1000443" -> "1000445"  [label="CFG: "];
"1000444" -> "1000443"  [label="AST: "];
"1000445" -> "1000443"  [label="AST: "];
"1000448" -> "1000443"  [label="CFG: "];
"1000298" -> "1000443"  [label="DDG: psrc_linesize"];
"1000443" -> "1000446"  [label="DDG: psrc_linesize"];
"1000298" -> "1000258"  [label="AST: "];
"1000298" -> "1000300"  [label="CFG: "];
"1000299" -> "1000298"  [label="AST: "];
"1000300" -> "1000298"  [label="AST: "];
"1000306" -> "1000298"  [label="CFG: "];
"1000298" -> "1001153"  [label="DDG: kerndeint->tmp_linesize[plane]"];
"1000446" -> "1000450"  [label="CFG: "];
"1000447" -> "1000446"  [label="AST: "];
"1000450" -> "1000446"  [label="AST: "];
"1000447" -> "1000446"  [label="DDG: 1"];
"1000447" -> "1000446"  [label="DDG: order"];
"1000447" -> "1000449"  [label="CFG: "];
"1000448" -> "1000447"  [label="AST: "];
"1000449" -> "1000447"  [label="AST: "];
"1000450" -> "1000447"  [label="CFG: "];
"1000429" -> "1000447"  [label="DDG: order"];
"1000447" -> "1000498"  [label="DDG: order"];
"1000429" -> "1000427"  [label="AST: "];
"1000429" -> "1000431"  [label="CFG: "];
"1000430" -> "1000429"  [label="AST: "];
"1000431" -> "1000429"  [label="AST: "];
"1000427" -> "1000429"  [label="CFG: "];
"1000429" -> "1000427"  [label="DDG: 3"];
"1000429" -> "1000427"  [label="DDG: order"];
"1000409" -> "1000429"  [label="DDG: order"];
"1000409" -> "1000407"  [label="AST: "];
"1000409" -> "1000411"  [label="CFG: "];
"1000410" -> "1000409"  [label="AST: "];
"1000411" -> "1000409"  [label="AST: "];
"1000407" -> "1000409"  [label="CFG: "];
"1000409" -> "1000407"  [label="DDG: 1"];
"1000409" -> "1000407"  [label="DDG: order"];
"1000389" -> "1000409"  [label="DDG: order"];
"1000409" -> "1000418"  [label="DDG: order"];
"1000409" -> "1000420"  [label="DDG: order"];
"1000389" -> "1000388"  [label="AST: "];
"1000389" -> "1000391"  [label="CFG: "];
"1000390" -> "1000389"  [label="AST: "];
"1000391" -> "1000389"  [label="AST: "];
"1000392" -> "1000389"  [label="CFG: "];
"1000389" -> "1000388"  [label="DDG: 3"];
"1000389" -> "1000388"  [label="DDG: order"];
"1000373" -> "1000389"  [label="DDG: order"];
"1000389" -> "1000398"  [label="DDG: order"];
"1000389" -> "1000400"  [label="DDG: order"];
"1000373" -> "1000372"  [label="AST: "];
"1000373" -> "1000375"  [label="CFG: "];
"1000374" -> "1000373"  [label="AST: "];
"1000375" -> "1000373"  [label="AST: "];
"1000376" -> "1000373"  [label="CFG: "];
"1000373" -> "1000372"  [label="DDG: 1"];
"1000373" -> "1000372"  [label="DDG: order"];
"1000367" -> "1000373"  [label="DDG: order"];
"1000373" -> "1000381"  [label="DDG: order"];
"1000373" -> "1000382"  [label="DDG: order"];
"1000367" -> "1000365"  [label="AST: "];
"1000367" -> "1000369"  [label="CFG: "];
"1000368" -> "1000367"  [label="AST: "];
"1000369" -> "1000367"  [label="AST: "];
"1000365" -> "1000367"  [label="CFG: "];
"1000367" -> "1000364"  [label="DDG: order"];
"1000367" -> "1000364"  [label="DDG: dst_linesize"];
"1000367" -> "1000365"  [label="DDG: order"];
"1000367" -> "1000365"  [label="DDG: dst_linesize"];
"1000335" -> "1000367"  [label="DDG: order"];
"1000334" -> "1000367"  [label="DDG: dst_linesize"];
"1000361" -> "1000367"  [label="DDG: dst_linesize"];
"1000367" -> "1000381"  [label="DDG: dst_linesize"];
"1000335" -> "1000334"  [label="AST: "];
"1000335" -> "1000337"  [label="CFG: "];
"1000336" -> "1000335"  [label="AST: "];
"1000337" -> "1000335"  [label="AST: "];
"1000338" -> "1000335"  [label="CFG: "];
"1000335" -> "1000334"  [label="DDG: 1"];
"1000335" -> "1000334"  [label="DDG: order"];
"1000326" -> "1000335"  [label="DDG: order"];
"1000326" -> "1000325"  [label="AST: "];
"1000326" -> "1000328"  [label="CFG: "];
"1000327" -> "1000326"  [label="AST: "];
"1000328" -> "1000326"  [label="AST: "];
"1000329" -> "1000326"  [label="CFG: "];
"1000326" -> "1000325"  [label="DDG: 1"];
"1000326" -> "1000325"  [label="DDG: order"];
"1000186" -> "1000326"  [label="DDG: order"];
"1000581" -> "1000326"  [label="DDG: order"];
"1000186" -> "1000120"  [label="AST: "];
"1000186" -> "1000188"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000188" -> "1000186"  [label="AST: "];
"1000193" -> "1000186"  [label="CFG: "];
"1000186" -> "1001153"  [label="DDG: kerndeint->order"];
"1000186" -> "1001153"  [label="DDG: order"];
"1000581" -> "1000579"  [label="AST: "];
"1000581" -> "1000583"  [label="CFG: "];
"1000582" -> "1000581"  [label="AST: "];
"1000583" -> "1000581"  [label="AST: "];
"1000579" -> "1000581"  [label="CFG: "];
"1000581" -> "1001153"  [label="DDG: order"];
"1000581" -> "1000579"  [label="DDG: 1"];
"1000581" -> "1000579"  [label="DDG: order"];
"1000572" -> "1000581"  [label="DDG: order"];
"1000572" -> "1000570"  [label="AST: "];
"1000572" -> "1000574"  [label="CFG: "];
"1000573" -> "1000572"  [label="AST: "];
"1000574" -> "1000572"  [label="AST: "];
"1000570" -> "1000572"  [label="CFG: "];
"1000572" -> "1000570"  [label="DDG: 1"];
"1000572" -> "1000570"  [label="DDG: order"];
"1000563" -> "1000572"  [label="DDG: order"];
"1000563" -> "1000562"  [label="AST: "];
"1000563" -> "1000565"  [label="CFG: "];
"1000564" -> "1000563"  [label="AST: "];
"1000565" -> "1000563"  [label="AST: "];
"1000566" -> "1000563"  [label="CFG: "];
"1000563" -> "1000562"  [label="DDG: 1"];
"1000563" -> "1000562"  [label="DDG: order"];
"1000498" -> "1000563"  [label="DDG: order"];
"1000498" -> "1000497"  [label="AST: "];
"1000498" -> "1000500"  [label="CFG: "];
"1000499" -> "1000498"  [label="AST: "];
"1000500" -> "1000498"  [label="AST: "];
"1000501" -> "1000498"  [label="CFG: "];
"1000498" -> "1000497"  [label="DDG: 1"];
"1000498" -> "1000497"  [label="DDG: order"];
"1000334" -> "1000332"  [label="AST: "];
"1000334" -> "1000338"  [label="CFG: "];
"1000338" -> "1000334"  [label="AST: "];
"1000332" -> "1000334"  [label="CFG: "];
"1000334" -> "1000330"  [label="DDG: 1 - order"];
"1000334" -> "1000330"  [label="DDG: dst_linesize"];
"1000334" -> "1000332"  [label="DDG: 1 - order"];
"1000334" -> "1000332"  [label="DDG: dst_linesize"];
"1000314" -> "1000334"  [label="DDG: dst_linesize"];
"1000334" -> "1000361"  [label="DDG: dst_linesize"];
"1000314" -> "1000258"  [label="AST: "];
"1000314" -> "1000316"  [label="CFG: "];
"1000315" -> "1000314"  [label="AST: "];
"1000316" -> "1000314"  [label="AST: "];
"1000322" -> "1000314"  [label="CFG: "];
"1000314" -> "1001153"  [label="DDG: outpic->linesize[plane]"];
"1000361" -> "1000359"  [label="AST: "];
"1000361" -> "1000363"  [label="CFG: "];
"1000362" -> "1000361"  [label="AST: "];
"1000363" -> "1000361"  [label="AST: "];
"1000359" -> "1000361"  [label="CFG: "];
"1000361" -> "1000359"  [label="DDG: 2"];
"1000361" -> "1000359"  [label="DDG: dst_linesize"];
"1000879" -> "1000878"  [label="AST: "];
"1000879" -> "1000881"  [label="CFG: "];
"1000880" -> "1000879"  [label="AST: "];
"1000881" -> "1000879"  [label="AST: "];
"1000885" -> "1000879"  [label="CFG: "];
"1000879" -> "1001153"  [label="DDG: prvppp[x]"];
"1000879" -> "1000876"  [label="DDG: prvppp[x]"];
"1000879" -> "1000878"  [label="DDG: prvppp[x]"];
"1000456" -> "1000879"  [label="DDG: prvppp"];
"1000973" -> "1000879"  [label="DDG: prvppp[x]"];
"1001012" -> "1000879"  [label="DDG: prvppp[x]"];
"1000879" -> "1000973"  [label="DDG: prvppp[x]"];
"1000879" -> "1001012"  [label="DDG: prvppp[x]"];
"1000456" -> "1000258"  [label="AST: "];
"1000457" -> "1000456"  [label="AST: "];
"1000464" -> "1000456"  [label="CFG: "];
"1000456" -> "1001153"  [label="DDG: prvppp"];
"1000456" -> "1001153"  [label="DDG: prvp - 2 * psrc_linesize"];
"1000456" -> "1000973"  [label="DDG: prvppp"];
"1000456" -> "1001012"  [label="DDG: prvppp"];
"1000973" -> "1000972"  [label="AST: "];
"1000973" -> "1000975"  [label="CFG: "];
"1000974" -> "1000973"  [label="AST: "];
"1000975" -> "1000973"  [label="AST: "];
"1000979" -> "1000973"  [label="CFG: "];
"1000973" -> "1001153"  [label="DDG: prvppp[x]"];
"1000973" -> "1000972"  [label="DDG: prvppp[x]"];
"1001012" -> "1000973"  [label="DDG: prvppp[x]"];
"1000973" -> "1001012"  [label="DDG: prvppp[x]"];
"1001012" -> "1001011"  [label="AST: "];
"1001012" -> "1001014"  [label="CFG: "];
"1001013" -> "1001012"  [label="AST: "];
"1001014" -> "1001012"  [label="AST: "];
"1001018" -> "1001012"  [label="CFG: "];
"1001012" -> "1001153"  [label="DDG: prvppp[x]"];
"1001012" -> "1001011"  [label="DDG: prvppp[x]"];
"1000784" -> "1000783"  [label="AST: "];
"1000784" -> "1000786"  [label="CFG: "];
"1000785" -> "1000784"  [label="AST: "];
"1000786" -> "1000784"  [label="AST: "];
"1000811" -> "1000784"  [label="CFG: "];
"1000784" -> "1001153"  [label="DDG: (int)srcppp[x] + (int)srcpnn[x] + (int)prvppp[x] + (int)prvpnn[x]"];
"1000784" -> "1000783"  [label="DDG: 0.116"];
"1000784" -> "1000783"  [label="DDG: (int)srcppp[x] + (int)srcpnn[x] + (int)prvppp[x] + (int)prvpnn[x]"];
"1000787" -> "1000784"  [label="DDG: srcppp[x]"];
"1000793" -> "1000784"  [label="DDG: srcpnn[x]"];
"1000804" -> "1000784"  [label="DDG: prvpnn[x]"];
"1000783" -> "1000769"  [label="AST: "];
"1000783" -> "1000809"  [label="CFG: "];
"1000809" -> "1000783"  [label="AST: "];
"1000769" -> "1000783"  [label="CFG: "];
"1000783" -> "1001153"  [label="DDG: 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)srcp4p[x] + (int)srcp4n[x] + (int)prvp4p[x] + (int)prvp4n[x])"];
"1000783" -> "1001153"  [label="DDG: 0.116 * ((int)srcppp[x] + (int)srcpnn[x] + (int)prvppp[x] + (int)prvpnn[x])"];
"1000783" -> "1000769"  [label="DDG: 0.116 * ((int)srcppp[x] + (int)srcpnn[x] + (int)prvppp[x] + (int)prvpnn[x])"];
"1000783" -> "1000769"  [label="DDG: 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)srcp4p[x] + (int)srcp4n[x] + (int)prvp4p[x] + (int)prvp4n[x])"];
"1000810" -> "1000783"  [label="DDG: 0.026"];
"1000810" -> "1000783"  [label="DDG: (int)srcp3p[x] + (int)srcp3n[x]"];
"1000823" -> "1000783"  [label="DDG: 0.031"];
"1000823" -> "1000783"  [label="DDG: (int)srcp4p[x] + (int)srcp4n[x] + (int)prvp4p[x] + (int)prvp4n[x]"];
"1000769" -> "1000754"  [label="AST: "];
"1000770" -> "1000769"  [label="AST: "];
"1000754" -> "1000769"  [label="CFG: "];
"1000769" -> "1001153"  [label="DDG: 0.116 * ((int)srcppp[x] + (int)srcpnn[x] + (int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)srcp4p[x] + (int)srcp4n[x] + (int)prvp4p[x] + (int)prvp4n[x])"];
"1000769" -> "1001153"  [label="DDG: 0.170 * ((int)srcp[x] + (int)prvp[x])"];
"1000769" -> "1000752"  [label="DDG: 0.170 * ((int)srcp[x] + (int)prvp[x])"];
"1000769" -> "1000752"  [label="DDG: 0.116 * ((int)srcppp[x] + (int)srcpnn[x] + (int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)srcp4p[x] + (int)srcp4n[x] + (int)prvp4p[x] + (int)prvp4n[x])"];
"1000769" -> "1000754"  [label="DDG: 0.170 * ((int)srcp[x] + (int)prvp[x])"];
"1000769" -> "1000754"  [label="DDG: 0.116 * ((int)srcppp[x] + (int)srcpnn[x] + (int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)srcp4p[x] + (int)srcp4n[x] + (int)prvp4p[x] + (int)prvp4n[x])"];
"1000770" -> "1000769"  [label="DDG: 0.170"];
"1000770" -> "1000769"  [label="DDG: (int)srcp[x] + (int)prvp[x]"];
"1000752" -> "1000751"  [label="AST: "];
"1000752" -> "1000754"  [label="CFG: "];
"1000753" -> "1000752"  [label="AST: "];
"1000754" -> "1000752"  [label="AST: "];
"1000918" -> "1000752"  [label="CFG: "];
"1000752" -> "1001153"  [label="DDG: + 0.526 * ((int)srcpp[x] + (int)srcpn[x])\n                                    + 0.170 * ((int)srcp[x] + (int)prvp[x])\n                                    - 0.116 * ((int)srcppp[x] + (int)srcpnn[x] + (int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)srcp4p[x] + (int)srcp4n[x] + (int)prvp4p[x] + (int)prvp4n[x])"];
"1000755" -> "1000752"  [label="DDG: + 0.526"];
"1000755" -> "1000752"  [label="DDG: (int)srcpp[x] + (int)srcpn[x]"];
"1000752" -> "1000920"  [label="DDG: valf"];
"1000920" -> "1000916"  [label="AST: "];
"1000920" -> "1000923"  [label="CFG: "];
"1000921" -> "1000920"  [label="AST: "];
"1000922" -> "1000920"  [label="AST: "];
"1000923" -> "1000920"  [label="AST: "];
"1000916" -> "1000920"  [label="CFG: "];
"1000920" -> "1001153"  [label="DDG: valf"];
"1000920" -> "1001153"  [label="DDG: hi"];
"1000920" -> "1001153"  [label="DDG: lo"];
"1000920" -> "1000916"  [label="DDG: valf"];
"1000920" -> "1000916"  [label="DDG: lo"];
"1000920" -> "1000916"  [label="DDG: hi"];
"1000850" -> "1000920"  [label="DDG: valf"];
"1000711" -> "1000920"  [label="DDG: lo"];
"1000743" -> "1000920"  [label="DDG: lo"];
"1000730" -> "1000920"  [label="DDG: lo"];
"1000708" -> "1000920"  [label="DDG: hi"];
"1000735" -> "1000920"  [label="DDG: hi"];
"1000722" -> "1000920"  [label="DDG: hi"];
"1000916" -> "1000748"  [label="AST: "];
"1000917" -> "1000916"  [label="AST: "];
"1000596" -> "1000916"  [label="CFG: "];
"1000916" -> "1001153"  [label="DDG: av_clip(valf, lo, hi)"];
"1000916" -> "1001153"  [label="DDG: dstp[x]"];
"1000916" -> "1000350"  [label="DDG: dstp[x]"];
"1000916" -> "1000359"  [label="DDG: dstp[x]"];
"1000916" -> "1000663"  [label="DDG: dstp[x]"];
"1000916" -> "1000664"  [label="DDG: dstp[x]"];
"1000916" -> "1000681"  [label="DDG: dstp[x]"];
"1000916" -> "1000682"  [label="DDG: dstp[x]"];
"1000916" -> "1001120"  [label="DDG: dstp[x]"];
"1000916" -> "1001139"  [label="DDG: dstp[x]"];
"1000350" -> "1000349"  [label="AST: "];
"1000350" -> "1000353"  [label="CFG: "];
"1000351" -> "1000350"  [label="AST: "];
"1000352" -> "1000350"  [label="AST: "];
"1000353" -> "1000350"  [label="AST: "];
"1000355" -> "1000350"  [label="CFG: "];
"1000350" -> "1001153"  [label="DDG: memcpy(dstp, srcp, bwidth)"];
"1000330" -> "1000350"  [label="DDG: dstp"];
"1001023" -> "1000350"  [label="DDG: dstp[x]"];
"1000693" -> "1000350"  [label="DDG: dstp[x]"];
"1000359" -> "1000350"  [label="DDG: dstp"];
"1001033" -> "1000350"  [label="DDG: dstp[x]"];
"1000616" -> "1000350"  [label="DDG: srcp[x]"];
"1000950" -> "1000350"  [label="DDG: srcp[x]"];
"1000321" -> "1000350"  [label="DDG: srcp"];
"1000354" -> "1000350"  [label="DDG: srcp"];
"1000773" -> "1000350"  [label="DDG: srcp[x]"];
"1001075" -> "1000350"  [label="DDG: srcp"];
"1000523" -> "1000350"  [label="DDG: srcp"];
"1000275" -> "1000350"  [label="DDG: bwidth"];
"1000350" -> "1000354"  [label="DDG: srcp"];
"1000350" -> "1000359"  [label="DDG: dstp"];
"1000350" -> "1000364"  [label="DDG: bwidth"];
"1000354" -> "1000349"  [label="AST: "];
"1000354" -> "1000356"  [label="CFG: "];
"1000355" -> "1000354"  [label="AST: "];
"1000356" -> "1000354"  [label="AST: "];
"1000360" -> "1000354"  [label="CFG: "];
"1000356" -> "1000354"  [label="DDG: 2"];
"1000356" -> "1000354"  [label="DDG: src_linesize"];
"1000616" -> "1000354"  [label="DDG: srcp[x]"];
"1000950" -> "1000354"  [label="DDG: srcp[x]"];
"1000773" -> "1000354"  [label="DDG: srcp[x]"];
"1001075" -> "1000354"  [label="DDG: srcp"];
"1000523" -> "1000354"  [label="DDG: srcp"];
"1000359" -> "1000349"  [label="AST: "];
"1000360" -> "1000359"  [label="AST: "];
"1000347" -> "1000359"  [label="CFG: "];
"1000359" -> "1001153"  [label="DDG: 2 * dst_linesize"];
"1001023" -> "1000359"  [label="DDG: dstp[x]"];
"1000693" -> "1000359"  [label="DDG: dstp[x]"];
"1001033" -> "1000359"  [label="DDG: dstp[x]"];
"1000364" -> "1000258"  [label="AST: "];
"1000364" -> "1000377"  [label="CFG: "];
"1000365" -> "1000364"  [label="AST: "];
"1000370" -> "1000364"  [label="AST: "];
"1000377" -> "1000364"  [label="AST: "];
"1000380" -> "1000364"  [label="CFG: "];
"1000364" -> "1001153"  [label="DDG: dstp_saved + order            * dst_linesize"];
"1000364" -> "1001153"  [label="DDG: srcp_saved + (1 -     order) * src_linesize"];
"1000364" -> "1001153"  [label="DDG: memcpy(dstp_saved + order            * dst_linesize, srcp_saved + (1 -     order) * src_linesize, bwidth)"];
"1000307" -> "1000364"  [label="DDG: dstp_saved"];
"1000284" -> "1000364"  [label="DDG: srcp_saved"];
"1000372" -> "1000364"  [label="DDG: 1 -     order"];
"1000372" -> "1000364"  [label="DDG: src_linesize"];
"1000275" -> "1000364"  [label="DDG: bwidth"];
"1000364" -> "1000378"  [label="DDG: bwidth"];
"1000378" -> "1000258"  [label="AST: "];
"1000378" -> "1000393"  [label="CFG: "];
"1000379" -> "1000378"  [label="AST: "];
"1000386" -> "1000378"  [label="AST: "];
"1000393" -> "1000378"  [label="AST: "];
"1000396" -> "1000378"  [label="CFG: "];
"1000378" -> "1001153"  [label="DDG: dstp_saved + (2 + order    )  * dst_linesize"];
"1000378" -> "1001153"  [label="DDG: memcpy(dstp_saved + (2 + order    )  * dst_linesize, srcp_saved + (3 -     order) * src_linesize, bwidth)"];
"1000378" -> "1001153"  [label="DDG: srcp_saved + (3 -     order) * src_linesize"];
"1000307" -> "1000378"  [label="DDG: dstp_saved"];
"1000381" -> "1000378"  [label="DDG: 2 + order"];
"1000381" -> "1000378"  [label="DDG: dst_linesize"];
"1000284" -> "1000378"  [label="DDG: srcp_saved"];
"1000388" -> "1000378"  [label="DDG: 3 -     order"];
"1000388" -> "1000378"  [label="DDG: src_linesize"];
"1000378" -> "1000394"  [label="DDG: bwidth"];
"1000394" -> "1000258"  [label="AST: "];
"1000394" -> "1000413"  [label="CFG: "];
"1000395" -> "1000394"  [label="AST: "];
"1000404" -> "1000394"  [label="AST: "];
"1000413" -> "1000394"  [label="AST: "];
"1000416" -> "1000394"  [label="CFG: "];
"1000394" -> "1001153"  [label="DDG: memcpy(dstp_saved + (h - 2 + order)  * dst_linesize, srcp_saved + (h - 1 - order) * src_linesize, bwidth)"];
"1000394" -> "1001153"  [label="DDG: srcp_saved + (h - 1 - order) * src_linesize"];
"1000394" -> "1001153"  [label="DDG: dstp_saved + (h - 2 + order)  * dst_linesize"];
"1000307" -> "1000394"  [label="DDG: dstp_saved"];
"1000397" -> "1000394"  [label="DDG: h - 2 + order"];
"1000397" -> "1000394"  [label="DDG: dst_linesize"];
"1000284" -> "1000394"  [label="DDG: srcp_saved"];
"1000406" -> "1000394"  [label="DDG: h - 1 - order"];
"1000406" -> "1000394"  [label="DDG: src_linesize"];
"1000394" -> "1000414"  [label="DDG: bwidth"];
"1000414" -> "1000258"  [label="AST: "];
"1000414" -> "1000433"  [label="CFG: "];
"1000415" -> "1000414"  [label="AST: "];
"1000424" -> "1000414"  [label="AST: "];
"1000433" -> "1000414"  [label="AST: "];
"1000435" -> "1000414"  [label="CFG: "];
"1000414" -> "1001153"  [label="DDG: memcpy(dstp_saved + (h - 4 + order)  * dst_linesize, srcp_saved + (h - 3 - order) * src_linesize, bwidth)"];
"1000414" -> "1001153"  [label="DDG: srcp_saved + (h - 3 - order) * src_linesize"];
"1000414" -> "1001153"  [label="DDG: dstp_saved + (h - 4 + order)  * dst_linesize"];
"1000307" -> "1000414"  [label="DDG: dstp_saved"];
"1000417" -> "1000414"  [label="DDG: h - 4 + order"];
"1000417" -> "1000414"  [label="DDG: dst_linesize"];
"1000284" -> "1000414"  [label="DDG: srcp_saved"];
"1000426" -> "1000414"  [label="DDG: h - 3 - order"];
"1000426" -> "1000414"  [label="DDG: src_linesize"];
"1000414" -> "1000592"  [label="DDG: bwidth"];
"1000414" -> "1001139"  [label="DDG: bwidth"];
"1000592" -> "1000588"  [label="AST: "];
"1000592" -> "1000594"  [label="CFG: "];
"1000593" -> "1000592"  [label="AST: "];
"1000594" -> "1000592"  [label="AST: "];
"1000601" -> "1000592"  [label="CFG: "];
"1001041" -> "1000592"  [label="CFG: "];
"1000592" -> "1001153"  [label="DDG: x < bwidth"];
"1000592" -> "1001153"  [label="DDG: x"];
"1000589" -> "1000592"  [label="DDG: x"];
"1000595" -> "1000592"  [label="DDG: x"];
"1000592" -> "1000595"  [label="DDG: x"];
"1000592" -> "1000657"  [label="DDG: x"];
"1000592" -> "1000725"  [label="DDG: x"];
"1000592" -> "1001139"  [label="DDG: bwidth"];
"1000595" -> "1000588"  [label="AST: "];
"1000595" -> "1000596"  [label="CFG: "];
"1000596" -> "1000595"  [label="AST: "];
"1000593" -> "1000595"  [label="CFG: "];
"1000686" -> "1000595"  [label="DDG: x"];
"1000657" -> "1000595"  [label="DDG: x"];
"1000725" -> "1000595"  [label="DDG: x"];
"1000668" -> "1000595"  [label="DDG: x"];
"1000657" -> "1000655"  [label="AST: "];
"1000657" -> "1000659"  [label="CFG: "];
"1000658" -> "1000657"  [label="AST: "];
"1000659" -> "1000657"  [label="AST: "];
"1000655" -> "1000657"  [label="CFG: "];
"1000657" -> "1001153"  [label="DDG: ~3"];
"1000657" -> "1000655"  [label="DDG: x"];
"1000657" -> "1000655"  [label="DDG: ~3"];
"1000655" -> "1000654"  [label="AST: "];
"1000656" -> "1000655"  [label="AST: "];
"1000661" -> "1000655"  [label="CFG: "];
"1000655" -> "1001153"  [label="DDG: g"];
"1000655" -> "1001153"  [label="DDG: x & ~3"];
"1000655" -> "1000663"  [label="DDG: g"];
"1000655" -> "1000664"  [label="DDG: g"];
"1000655" -> "1000668"  [label="DDG: g"];
"1000655" -> "1000670"  [label="DDG: g"];
"1000655" -> "1000681"  [label="DDG: g"];
"1000655" -> "1000682"  [label="DDG: g"];
"1000655" -> "1000686"  [label="DDG: g"];
"1000655" -> "1000688"  [label="DDG: g"];
"1000663" -> "1000662"  [label="AST: "];
"1000663" -> "1000667"  [label="CFG: "];
"1000664" -> "1000663"  [label="AST: "];
"1000667" -> "1000663"  [label="AST: "];
"1000669" -> "1000663"  [label="CFG: "];
"1000663" -> "1001153"  [label="DDG: AV_WB32(dstp + g, 0xffffffff)"];
"1000663" -> "1001153"  [label="DDG: dstp + g"];
"1001120" -> "1000663"  [label="DDG: dstp"];
"1001023" -> "1000663"  [label="DDG: dstp[x]"];
"1000554" -> "1000663"  [label="DDG: dstp"];
"1000693" -> "1000663"  [label="DDG: dstp[x]"];
"1001033" -> "1000663"  [label="DDG: dstp[x]"];
"1000664" -> "1000666"  [label="CFG: "];
"1000665" -> "1000664"  [label="AST: "];
"1000666" -> "1000664"  [label="AST: "];
"1000667" -> "1000664"  [label="CFG: "];
"1001120" -> "1000664"  [label="DDG: dstp"];
"1001023" -> "1000664"  [label="DDG: dstp[x]"];
"1000554" -> "1000664"  [label="DDG: dstp"];
"1000693" -> "1000664"  [label="DDG: dstp[x]"];
"1001033" -> "1000664"  [label="DDG: dstp[x]"];
"1000668" -> "1000662"  [label="AST: "];
"1000668" -> "1000670"  [label="CFG: "];
"1000669" -> "1000668"  [label="AST: "];
"1000670" -> "1000668"  [label="AST: "];
"1000596" -> "1000668"  [label="CFG: "];
"1000668" -> "1001153"  [label="DDG: g + 3"];
"1000670" -> "1000672"  [label="CFG: "];
"1000671" -> "1000670"  [label="AST: "];
"1000672" -> "1000670"  [label="AST: "];
"1000670" -> "1001153"  [label="DDG: g"];
"1000681" -> "1000680"  [label="AST: "];
"1000681" -> "1000685"  [label="CFG: "];
"1000682" -> "1000681"  [label="AST: "];
"1000685" -> "1000681"  [label="AST: "];
"1000687" -> "1000681"  [label="CFG: "];
"1000681" -> "1001153"  [label="DDG: AV_WB32(dstp + g, 0xeb80eb80)"];
"1000681" -> "1001153"  [label="DDG: dstp + g"];
"1001120" -> "1000681"  [label="DDG: dstp"];
"1001023" -> "1000681"  [label="DDG: dstp[x]"];
"1000554" -> "1000681"  [label="DDG: dstp"];
"1000693" -> "1000681"  [label="DDG: dstp[x]"];
"1001033" -> "1000681"  [label="DDG: dstp[x]"];
"1000682" -> "1000684"  [label="CFG: "];
"1000683" -> "1000682"  [label="AST: "];
"1000684" -> "1000682"  [label="AST: "];
"1000685" -> "1000682"  [label="CFG: "];
"1001120" -> "1000682"  [label="DDG: dstp"];
"1001023" -> "1000682"  [label="DDG: dstp[x]"];
"1000554" -> "1000682"  [label="DDG: dstp"];
"1000693" -> "1000682"  [label="DDG: dstp[x]"];
"1001033" -> "1000682"  [label="DDG: dstp[x]"];
"1000686" -> "1000680"  [label="AST: "];
"1000686" -> "1000688"  [label="CFG: "];
"1000687" -> "1000686"  [label="AST: "];
"1000688" -> "1000686"  [label="AST: "];
"1000596" -> "1000686"  [label="CFG: "];
"1000686" -> "1001153"  [label="DDG: g + 3"];
"1000688" -> "1000690"  [label="CFG: "];
"1000689" -> "1000688"  [label="AST: "];
"1000690" -> "1000688"  [label="AST: "];
"1000688" -> "1001153"  [label="DDG: g"];
"1000725" -> "1000724"  [label="AST: "];
"1000725" -> "1000727"  [label="CFG: "];
"1000726" -> "1000725"  [label="AST: "];
"1000727" -> "1000725"  [label="AST: "];
"1000728" -> "1000725"  [label="CFG: "];
"1000729" -> "1000725"  [label="CFG: "];
"1001139" -> "1000258"  [label="AST: "];
"1001139" -> "1001145"  [label="CFG: "];
"1001140" -> "1001139"  [label="AST: "];
"1001141" -> "1001139"  [label="AST: "];
"1001142" -> "1001139"  [label="AST: "];
"1001143" -> "1001139"  [label="AST: "];
"1001144" -> "1001139"  [label="AST: "];
"1001145" -> "1001139"  [label="AST: "];
"1000257" -> "1001139"  [label="CFG: "];
"1001139" -> "1001153"  [label="DDG: dstp"];
"1001139" -> "1001153"  [label="DDG: av_image_copy_plane(dstp, psrc_linesize, srcp, src_linesize, bwidth, h)"];
"1001139" -> "1001153"  [label="DDG: h"];
"1001139" -> "1001153"  [label="DDG: srcp"];
"1001139" -> "1001153"  [label="DDG: psrc_linesize"];
"1001139" -> "1001153"  [label="DDG: bwidth"];
"1001139" -> "1001153"  [label="DDG: src_linesize"];
"1001023" -> "1001139"  [label="DDG: dstp[x]"];
"1000693" -> "1001139"  [label="DDG: dstp[x]"];
"1001132" -> "1001139"  [label="DDG: dstp"];
"1001033" -> "1001139"  [label="DDG: dstp[x]"];
"1000616" -> "1001139"  [label="DDG: srcp[x]"];
"1000950" -> "1001139"  [label="DDG: srcp[x]"];
"1001125" -> "1001139"  [label="DDG: srcp"];
"1000773" -> "1001139"  [label="DDG: srcp[x]"];
"1001075" -> "1001139"  [label="DDG: srcp"];
"1000523" -> "1001139"  [label="DDG: srcp"];
"1000551" -> "1001139"  [label="DDG: src_linesize"];
"1001117" -> "1001139"  [label="DDG: src_linesize"];
"1000577" -> "1001139"  [label="DDG: h"];
"1001120" -> "1000587"  [label="AST: "];
"1001120" -> "1001122"  [label="CFG: "];
"1001121" -> "1001120"  [label="AST: "];
"1001122" -> "1001120"  [label="AST: "];
"1000585" -> "1001120"  [label="CFG: "];
"1001120" -> "1001153"  [label="DDG: 2 * dst_linesize"];
"1001122" -> "1001120"  [label="DDG: 2"];
"1001122" -> "1001120"  [label="DDG: dst_linesize"];
"1001023" -> "1001120"  [label="DDG: dstp[x]"];
"1000554" -> "1001120"  [label="DDG: dstp"];
"1000693" -> "1001120"  [label="DDG: dstp[x]"];
"1001033" -> "1001120"  [label="DDG: dstp[x]"];
"1000755" -> "1000754"  [label="AST: "];
"1000754" -> "1001153"  [label="DDG: 0.170 * ((int)srcp[x] + (int)prvp[x])\n                                    - 0.116 * ((int)srcppp[x] + (int)srcpnn[x] + (int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)srcp4p[x] + (int)srcp4n[x] + (int)prvp4p[x] + (int)prvp4n[x])"];
"1000754" -> "1001153"  [label="DDG: + 0.526 * ((int)srcpp[x] + (int)srcpn[x])"];
"1000755" -> "1000754"  [label="DDG: + 0.526"];
"1000755" -> "1000754"  [label="DDG: (int)srcpp[x] + (int)srcpn[x]"];
"1000786" -> "1000792"  [label="CFG: "];
"1000787" -> "1000786"  [label="AST: "];
"1000792" -> "1000786"  [label="AST: "];
"1000786" -> "1001153"  [label="DDG: (int)srcpnn[x] + (int)prvppp[x] + (int)prvpnn[x]"];
"1000786" -> "1001153"  [label="DDG: (int)srcppp[x]"];
"1000787" -> "1000786"  [label="DDG: srcppp[x]"];
"1000793" -> "1000786"  [label="DDG: srcpnn[x]"];
"1000804" -> "1000786"  [label="DDG: prvpnn[x]"];
"1000792" -> "1000798"  [label="CFG: "];
"1000793" -> "1000792"  [label="AST: "];
"1000798" -> "1000792"  [label="AST: "];
"1000792" -> "1001153"  [label="DDG: (int)srcpnn[x]"];
"1000792" -> "1001153"  [label="DDG: (int)prvppp[x] + (int)prvpnn[x]"];
"1000793" -> "1000792"  [label="DDG: srcpnn[x]"];
"1000804" -> "1000792"  [label="DDG: prvpnn[x]"];
"1000798" -> "1000804"  [label="CFG: "];
"1000804" -> "1000798"  [label="AST: "];
"1000798" -> "1001153"  [label="DDG: (int)prvppp[x]"];
"1000798" -> "1001153"  [label="DDG: (int)prvpnn[x]"];
"1000804" -> "1000798"  [label="DDG: prvpnn[x]"];
"1000972" -> "1000966"  [label="AST: "];
"1000972" -> "1000978"  [label="CFG: "];
"1000978" -> "1000972"  [label="AST: "];
"1000966" -> "1000972"  [label="CFG: "];
"1000972" -> "1001153"  [label="DDG: (int)(prvppp[x])"];
"1000972" -> "1001153"  [label="DDG: (int)(prvpnn[x])"];
"1000972" -> "1000966"  [label="DDG: (int)(prvppp[x])"];
"1000972" -> "1000966"  [label="DDG: (int)(prvpnn[x])"];
"1000978" -> "1000972"  [label="DDG: prvpnn[x]"];
"1000966" -> "1000960"  [label="AST: "];
"1000967" -> "1000966"  [label="AST: "];
"1000960" -> "1000966"  [label="CFG: "];
"1000966" -> "1001153"  [label="DDG: (int)(prvppp[x]) - (int)(prvpnn[x])"];
"1000966" -> "1001153"  [label="DDG: (int)(srcpnn[x])"];
"1000966" -> "1000960"  [label="DDG: (int)(srcpnn[x])"];
"1000966" -> "1000960"  [label="DDG: (int)(prvppp[x]) - (int)(prvpnn[x])"];
"1000967" -> "1000966"  [label="DDG: srcpnn[x]"];
"1000960" -> "1000946"  [label="AST: "];
"1000961" -> "1000960"  [label="AST: "];
"1000946" -> "1000960"  [label="CFG: "];
"1000960" -> "1001153"  [label="DDG: (int)(srcpnn[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x])"];
"1000960" -> "1001153"  [label="DDG: (int)(srcppp[x])"];
"1000960" -> "1000946"  [label="DDG: (int)(srcppp[x])"];
"1000960" -> "1000946"  [label="DDG: (int)(srcpnn[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x])"];
"1000961" -> "1000960"  [label="DDG: srcppp[x]"];
"1000946" -> "1000932"  [label="AST: "];
"1000947" -> "1000946"  [label="AST: "];
"1000932" -> "1000946"  [label="CFG: "];
"1000946" -> "1001153"  [label="DDG: 2 * ((int)srcp[x] + (int)prvp[x])"];
"1000946" -> "1001153"  [label="DDG: (int)(srcppp[x]) - (int)(srcpnn[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x])"];
"1000946" -> "1000931"  [label="DDG: 2 * ((int)srcp[x] + (int)prvp[x])"];
"1000946" -> "1000931"  [label="DDG: (int)(srcppp[x]) - (int)(srcpnn[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x])"];
"1000946" -> "1000932"  [label="DDG: 2 * ((int)srcp[x] + (int)prvp[x])"];
"1000946" -> "1000932"  [label="DDG: (int)(srcppp[x]) - (int)(srcpnn[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x])"];
"1000947" -> "1000946"  [label="DDG: 2"];
"1000947" -> "1000946"  [label="DDG: (int)srcp[x] + (int)prvp[x]"];
"1000931" -> "1000929"  [label="AST: "];
"1000931" -> "1000983"  [label="CFG: "];
"1000932" -> "1000931"  [label="AST: "];
"1000983" -> "1000931"  [label="AST: "];
"1000929" -> "1000931"  [label="CFG: "];
"1000931" -> "1001153"  [label="DDG: 8 * ((int)srcpp[x] + (int)srcpn[x]) + 2 * ((int)srcp[x] + (int)prvp[x])\n                                       - (int)(srcppp[x]) - (int)(srcpnn[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x])"];
"1000931" -> "1000929"  [label="DDG: 8 * ((int)srcpp[x] + (int)srcpn[x]) + 2 * ((int)srcp[x] + (int)prvp[x])\n                                       - (int)(srcppp[x]) - (int)(srcpnn[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x])"];
"1000931" -> "1000929"  [label="DDG: 4"];
"1000933" -> "1000931"  [label="DDG: 8"];
"1000933" -> "1000931"  [label="DDG: (int)srcpp[x] + (int)srcpn[x]"];
"1000929" -> "1000928"  [label="AST: "];
"1000930" -> "1000929"  [label="AST: "];
"1001025" -> "1000929"  [label="CFG: "];
"1000929" -> "1001153"  [label="DDG: (8 * ((int)srcpp[x] + (int)srcpn[x]) + 2 * ((int)srcp[x] + (int)prvp[x])\n                                       - (int)(srcppp[x]) - (int)(srcpnn[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x])) >> 4"];
"1000929" -> "1001027"  [label="DDG: val"];
"1001027" -> "1001023"  [label="AST: "];
"1001027" -> "1001030"  [label="CFG: "];
"1001028" -> "1001027"  [label="AST: "];
"1001029" -> "1001027"  [label="AST: "];
"1001030" -> "1001027"  [label="AST: "];
"1001023" -> "1001027"  [label="CFG: "];
"1001027" -> "1001153"  [label="DDG: val"];
"1001027" -> "1001153"  [label="DDG: hi"];
"1001027" -> "1001153"  [label="DDG: lo"];
"1001027" -> "1001023"  [label="DDG: val"];
"1001027" -> "1001023"  [label="DDG: lo"];
"1001027" -> "1001023"  [label="DDG: hi"];
"1000986" -> "1001027"  [label="DDG: val"];
"1000711" -> "1001027"  [label="DDG: lo"];
"1000743" -> "1001027"  [label="DDG: lo"];
"1000730" -> "1001027"  [label="DDG: lo"];
"1000708" -> "1001027"  [label="DDG: hi"];
"1000735" -> "1001027"  [label="DDG: hi"];
"1000722" -> "1001027"  [label="DDG: hi"];
"1001023" -> "1000925"  [label="AST: "];
"1001024" -> "1001023"  [label="AST: "];
"1000596" -> "1001023"  [label="CFG: "];
"1001023" -> "1001153"  [label="DDG: dstp[x]"];
"1001023" -> "1001153"  [label="DDG: av_clip(val, lo, hi)"];
"1000933" -> "1000932"  [label="AST: "];
"1000983" -> "1000932"  [label="CFG: "];
"1000932" -> "1001153"  [label="DDG: 2 * ((int)srcp[x] + (int)prvp[x])\n                                       - (int)(srcppp[x]) - (int)(srcpnn[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x])"];
"1000932" -> "1001153"  [label="DDG: 8 * ((int)srcpp[x] + (int)srcpn[x])"];
"1000933" -> "1000932"  [label="DDG: 8"];
"1000933" -> "1000932"  [label="DDG: (int)srcpp[x] + (int)srcpn[x]"];
"1001011" -> "1001003"  [label="AST: "];
"1001011" -> "1001017"  [label="CFG: "];
"1001017" -> "1001011"  [label="AST: "];
"1001003" -> "1001011"  [label="CFG: "];
"1001011" -> "1001153"  [label="DDG: (int)(prvppp[x])"];
"1001011" -> "1001153"  [label="DDG: (int)(prvpnn[x])"];
"1001011" -> "1001003"  [label="DDG: (int)(prvppp[x])"];
"1001011" -> "1001003"  [label="DDG: (int)(prvpnn[x])"];
"1001017" -> "1001011"  [label="DDG: prvpnn[x]"];
"1001003" -> "1000989"  [label="AST: "];
"1001004" -> "1001003"  [label="AST: "];
"1000989" -> "1001003"  [label="CFG: "];
"1001003" -> "1001153"  [label="DDG: 2 * ((int)prvp[x])"];
"1001003" -> "1001153"  [label="DDG: (int)(prvppp[x]) - (int)(prvpnn[x])"];
"1001003" -> "1000988"  [label="DDG: 2 * ((int)prvp[x])"];
"1001003" -> "1000988"  [label="DDG: (int)(prvppp[x]) - (int)(prvpnn[x])"];
"1001003" -> "1000989"  [label="DDG: 2 * ((int)prvp[x])"];
"1001003" -> "1000989"  [label="DDG: (int)(prvppp[x]) - (int)(prvpnn[x])"];
"1001004" -> "1001003"  [label="DDG: 2"];
"1001004" -> "1001003"  [label="DDG: (int)prvp[x]"];
"1000988" -> "1000986"  [label="AST: "];
"1000988" -> "1001022"  [label="CFG: "];
"1000989" -> "1000988"  [label="AST: "];
"1001022" -> "1000988"  [label="AST: "];
"1000986" -> "1000988"  [label="CFG: "];
"1000988" -> "1001153"  [label="DDG: 8 * ((int)srcpp[x] + (int)srcpn[x]) + 2 * ((int)prvp[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x])"];
"1000988" -> "1000986"  [label="DDG: 8 * ((int)srcpp[x] + (int)srcpn[x]) + 2 * ((int)prvp[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x])"];
"1000988" -> "1000986"  [label="DDG: 4"];
"1000990" -> "1000988"  [label="DDG: 8"];
"1000990" -> "1000988"  [label="DDG: (int)srcpp[x] + (int)srcpn[x]"];
"1000986" -> "1000985"  [label="AST: "];
"1000987" -> "1000986"  [label="AST: "];
"1001025" -> "1000986"  [label="CFG: "];
"1000986" -> "1001153"  [label="DDG: (8 * ((int)srcpp[x] + (int)srcpn[x]) + 2 * ((int)prvp[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x])) >> 4"];
"1000990" -> "1000989"  [label="AST: "];
"1001022" -> "1000989"  [label="CFG: "];
"1000989" -> "1001153"  [label="DDG: 2 * ((int)prvp[x])\n                                       - (int)(prvppp[x]) - (int)(prvpnn[x])"];
"1000989" -> "1001153"  [label="DDG: 8 * ((int)srcpp[x] + (int)srcpn[x])"];
"1000990" -> "1000989"  [label="DDG: 8"];
"1000990" -> "1000989"  [label="DDG: (int)srcpp[x] + (int)srcpn[x]"];
"1000876" -> "1000875"  [label="AST: "];
"1000876" -> "1000878"  [label="CFG: "];
"1000877" -> "1000876"  [label="AST: "];
"1000878" -> "1000876"  [label="AST: "];
"1000891" -> "1000876"  [label="CFG: "];
"1000876" -> "1001153"  [label="DDG: (int)prvppp[x] + (int)prvpnn[x]"];
"1000876" -> "1000875"  [label="DDG: 0.116"];
"1000876" -> "1000875"  [label="DDG: (int)prvppp[x] + (int)prvpnn[x]"];
"1000884" -> "1000876"  [label="DDG: prvpnn[x]"];
"1000875" -> "1000867"  [label="AST: "];
"1000875" -> "1000889"  [label="CFG: "];
"1000889" -> "1000875"  [label="AST: "];
"1000867" -> "1000875"  [label="CFG: "];
"1000875" -> "1001153"  [label="DDG: 0.116 * ((int)prvppp[x] + (int)prvpnn[x])"];
"1000875" -> "1001153"  [label="DDG: 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)prvp4p[x] + (int)prvp4p[x])"];
"1000875" -> "1000867"  [label="DDG: 0.116 * ((int)prvppp[x] + (int)prvpnn[x])"];
"1000875" -> "1000867"  [label="DDG: 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)prvp4p[x] + (int)prvp4p[x])"];
"1000890" -> "1000875"  [label="DDG: 0.026"];
"1000890" -> "1000875"  [label="DDG: (int)srcp3p[x] + (int)srcp3n[x]"];
"1000903" -> "1000875"  [label="DDG: 0.031"];
"1000903" -> "1000875"  [label="DDG: (int)prvp4p[x] + (int)prvp4p[x]"];
"1000867" -> "1000852"  [label="AST: "];
"1000868" -> "1000867"  [label="AST: "];
"1000852" -> "1000867"  [label="CFG: "];
"1000867" -> "1001153"  [label="DDG: 0.170 * ((int)prvp[x])"];
"1000867" -> "1001153"  [label="DDG: 0.116 * ((int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)prvp4p[x] + (int)prvp4p[x])"];
"1000867" -> "1000850"  [label="DDG: 0.170 * ((int)prvp[x])"];
"1000867" -> "1000850"  [label="DDG: 0.116 * ((int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)prvp4p[x] + (int)prvp4p[x])"];
"1000867" -> "1000852"  [label="DDG: 0.170 * ((int)prvp[x])"];
"1000867" -> "1000852"  [label="DDG: 0.116 * ((int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)prvp4p[x] + (int)prvp4p[x])"];
"1000868" -> "1000867"  [label="DDG: 0.170"];
"1000868" -> "1000867"  [label="DDG: (int)prvp[x]"];
"1000850" -> "1000849"  [label="AST: "];
"1000850" -> "1000852"  [label="CFG: "];
"1000851" -> "1000850"  [label="AST: "];
"1000852" -> "1000850"  [label="AST: "];
"1000918" -> "1000850"  [label="CFG: "];
"1000850" -> "1001153"  [label="DDG: + 0.526 * ((int)srcpp[x] + (int)srcpn[x])\n                                    + 0.170 * ((int)prvp[x])\n                                    - 0.116 * ((int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)prvp4p[x] + (int)prvp4p[x])"];
"1000853" -> "1000850"  [label="DDG: + 0.526"];
"1000853" -> "1000850"  [label="DDG: (int)srcpp[x] + (int)srcpn[x]"];
"1000853" -> "1000852"  [label="AST: "];
"1000852" -> "1001153"  [label="DDG: 0.170 * ((int)prvp[x])\n                                    - 0.116 * ((int)prvppp[x] + (int)prvpnn[x])\n                                    - 0.026 * ((int)srcp3p[x] + (int)srcp3n[x])\n                                    + 0.031 * ((int)prvp4p[x] + (int)prvp4p[x])"];
"1000852" -> "1001153"  [label="DDG: + 0.526 * ((int)srcpp[x] + (int)srcpn[x])"];
"1000853" -> "1000852"  [label="DDG: + 0.526"];
"1000853" -> "1000852"  [label="DDG: (int)srcpp[x] + (int)srcpn[x]"];
"1000878" -> "1000884"  [label="CFG: "];
"1000884" -> "1000878"  [label="AST: "];
"1000878" -> "1001153"  [label="DDG: (int)prvpnn[x]"];
"1000878" -> "1001153"  [label="DDG: (int)prvppp[x]"];
"1000884" -> "1000878"  [label="DDG: prvpnn[x]"];
}
