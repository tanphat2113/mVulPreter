digraph "0_php_124fb22a13fafa3648e4e15b4f207c7096d8155e@pointer" {
"1001381" [label="(Call,(zend_long)string_key->len)"];
"1001371" [label="(Call,curl_formadd(&first, &last,\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_COPYNAME, string_key->val,\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_NAMELENGTH, (zend_long)string_key->len,\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_COPYCONTENTS, postval,\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_CONTENTSLENGTH, (zend_long)Z_STRLEN_P(current),\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_END))"];
"1001369" [label="(Call,error = curl_formadd(&first, &last,\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_COPYNAME, string_key->val,\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_NAMELENGTH, (zend_long)string_key->len,\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_COPYCONTENTS, postval,\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_CONTENTSLENGTH, (zend_long)Z_STRLEN_P(current),\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_END))"];
"1001397" [label="(Call,SAVE_CURL_ERROR(ch, error))"];
"1001401" [label="(Call,error != CURLE_OK)"];
"1001917" [label="(Call,error != CURLE_OK)"];
"1001913" [label="(Call,SAVE_CURL_ERROR(ch, error))"];
"1001421" [label="(Call,zend_llist_add_element(&ch->to_free->post, &first))"];
"1000121" [label="(Block,)"];
"1001913" [label="(Call,SAVE_CURL_ERROR(ch, error))"];
"1001395" [label="(Identifier,string_key)"];
"1001690" [label="(Call,error = curl_easy_setopt(ch->cp, CURLOPT_POSTREDIR, Z_LVAL_P(zvalue) & CURL_REDIR_POST_ALL))"];
"1001916" [label="(ControlStructure,if (error != CURLE_OK))"];
"1001431" [label="(Identifier,error)"];
"1001402" [label="(Identifier,error)"];
"1001468" [label="(Call,curl_easy_setopt(ch->cp, CURLOPT_PROGRESSDATA, ch))"];
"1001401" [label="(Call,error != CURLE_OK)"];
"1001371" [label="(Call,curl_formadd(&first, &last,\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_COPYNAME, string_key->val,\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_NAMELENGTH, (zend_long)string_key->len,\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_COPYCONTENTS, postval,\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_CONTENTSLENGTH, (zend_long)Z_STRLEN_P(current),\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_END))"];
"1000992" [label="(Call,error = curl_easy_setopt(ch->cp, option, Z_LVAL_P(zvalue)))"];
"1001381" [label="(Call,(zend_long)string_key->len)"];
"1001733" [label="(Call,(void *) ch)"];
"1001675" [label="(Call,error = curl_easy_setopt(ch->cp, option, (curl_off_t)Z_LVAL_P(zvalue)))"];
"1001918" [label="(Identifier,error)"];
"1001406" [label="(Identifier,FAILURE)"];
"1000841" [label="(Call,error = curl_easy_setopt(ch->cp, option, fp))"];
"1001421" [label="(Call,zend_llist_add_element(&ch->to_free->post, &first))"];
"1001386" [label="(Identifier,CURLFORM_COPYCONTENTS)"];
"1001399" [label="(Identifier,error)"];
"1001369" [label="(Call,error = curl_formadd(&first, &last,\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_COPYNAME, string_key->val,\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_NAMELENGTH, (zend_long)string_key->len,\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_COPYCONTENTS, postval,\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_CONTENTSLENGTH, (zend_long)Z_STRLEN_P(current),\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_END))"];
"1001327" [label="(Call,error = curl_formadd(&first, &last,\n\t\t\t\t\t\t\t\t\t\tCURLFORM_COPYNAME, string_key->val,\n\t\t\t\t\t\t\t\t\t\tCURLFORM_NAMELENGTH, string_key->len,\n\t\t\t\t\t\t\t\t\t\tCURLFORM_FILENAME, filename ? filename + sizeof(\";filename=\") - 1 : name,\n\t\t\t\t\t\t\t\t\t\tCURLFORM_CONTENTTYPE, type ? type + sizeof(\";type=\") - 1 : \"application/octet-stream\",\n\t\t\t\t\t\t\t\t\t\tCURLFORM_FILE, name,\n\t\t\t\t\t\t\t\t\t\tCURLFORM_END))"];
"1001428" [label="(Call,&first)"];
"1001403" [label="(Identifier,CURLE_OK)"];
"1001915" [label="(Identifier,error)"];
"1001393" [label="(Identifier,CURLFORM_END)"];
"1001914" [label="(Identifier,ch)"];
"1001383" [label="(Call,string_key->len)"];
"1001368" [label="(Block,)"];
"1001372" [label="(Call,&first)"];
"1001926" [label="(Identifier,SUCCESS)"];
"1001789" [label="(Call,(void *)ch)"];
"1000259" [label="(Call,error = curl_easy_setopt(ch->cp, option, Z_LVAL_P(zvalue)))"];
"1000118" [label="(MethodParameterIn,php_curl *ch)"];
"1001387" [label="(Identifier,postval)"];
"1001063" [label="(Block,)"];
"1001376" [label="(Identifier,CURLFORM_COPYNAME)"];
"1001410" [label="(Identifier,ch)"];
"1001374" [label="(Call,&last)"];
"1001380" [label="(Identifier,CURLFORM_NAMELENGTH)"];
"1001451" [label="(Call,error = curl_easy_setopt(ch->cp, CURLOPT_COPYPOSTFIELDS, Z_STRVAL_P(zvalue)))"];
"1001922" [label="(Identifier,FAILURE)"];
"1001377" [label="(Call,string_key->val)"];
"1001398" [label="(Identifier,ch)"];
"1001389" [label="(Call,(zend_long)Z_STRLEN_P(current))"];
"1001917" [label="(Call,error != CURLE_OK)"];
"1001414" [label="(Call,zend_llist_clean(&ch->to_free->post))"];
"1001400" [label="(ControlStructure,if (error != CURLE_OK))"];
"1001919" [label="(Identifier,CURLE_OK)"];
"1001927" [label="(MethodReturn,static int)"];
"1001247" [label="(Call,postval = Z_STRVAL_P(current))"];
"1000338" [label="(Call,error = curl_easy_setopt(ch->cp, option, NULL))"];
"1001329" [label="(Call,curl_formadd(&first, &last,\n\t\t\t\t\t\t\t\t\t\tCURLFORM_COPYNAME, string_key->val,\n\t\t\t\t\t\t\t\t\t\tCURLFORM_NAMELENGTH, string_key->len,\n\t\t\t\t\t\t\t\t\t\tCURLFORM_FILENAME, filename ? filename + sizeof(\";filename=\") - 1 : name,\n\t\t\t\t\t\t\t\t\t\tCURLFORM_CONTENTTYPE, type ? type + sizeof(\";type=\") - 1 : \"application/octet-stream\",\n\t\t\t\t\t\t\t\t\t\tCURLFORM_FILE, name,\n\t\t\t\t\t\t\t\t\t\tCURLFORM_END))"];
"1000123" [label="(Call,error = CURLE_OK)"];
"1001370" [label="(Identifier,error)"];
"1001838" [label="(Call,curl_easy_setopt(ch->cp, CURLOPT_FNMATCH_DATA, ch))"];
"1001422" [label="(Call,&ch->to_free->post)"];
"1001388" [label="(Identifier,CURLFORM_CONTENTSLENGTH)"];
"1001397" [label="(Call,SAVE_CURL_ERROR(ch, error))"];
"1001430" [label="(Call,error = curl_easy_setopt(ch->cp, CURLOPT_HTTPPOST, first))"];
"1000958" [label="(Call,error = curl_easy_setopt(ch->cp, option, slist))"];
"1000440" [label="(Call,error = CURLE_OK)"];
"1001726" [label="(Call,error = curl_easy_setopt(ch->cp, CURLOPT_PASSWDDATA,     (void *) ch))"];
"1001381" -> "1001371"  [label="AST: "];
"1001381" -> "1001383"  [label="CFG: "];
"1001382" -> "1001381"  [label="AST: "];
"1001383" -> "1001381"  [label="AST: "];
"1001386" -> "1001381"  [label="CFG: "];
"1001381" -> "1001927"  [label="DDG: string_key->len"];
"1001381" -> "1001371"  [label="DDG: string_key->len"];
"1001371" -> "1001369"  [label="AST: "];
"1001371" -> "1001393"  [label="CFG: "];
"1001372" -> "1001371"  [label="AST: "];
"1001374" -> "1001371"  [label="AST: "];
"1001376" -> "1001371"  [label="AST: "];
"1001377" -> "1001371"  [label="AST: "];
"1001380" -> "1001371"  [label="AST: "];
"1001386" -> "1001371"  [label="AST: "];
"1001387" -> "1001371"  [label="AST: "];
"1001388" -> "1001371"  [label="AST: "];
"1001389" -> "1001371"  [label="AST: "];
"1001393" -> "1001371"  [label="AST: "];
"1001369" -> "1001371"  [label="CFG: "];
"1001371" -> "1001927"  [label="DDG: postval"];
"1001371" -> "1001927"  [label="DDG: string_key->val"];
"1001371" -> "1001927"  [label="DDG: CURLFORM_CONTENTSLENGTH"];
"1001371" -> "1001927"  [label="DDG: CURLFORM_NAMELENGTH"];
"1001371" -> "1001927"  [label="DDG: CURLFORM_END"];
"1001371" -> "1001927"  [label="DDG: &first"];
"1001371" -> "1001927"  [label="DDG: (zend_long)Z_STRLEN_P(current)"];
"1001371" -> "1001927"  [label="DDG: &last"];
"1001371" -> "1001927"  [label="DDG: (zend_long)string_key->len"];
"1001371" -> "1001927"  [label="DDG: CURLFORM_COPYCONTENTS"];
"1001371" -> "1001927"  [label="DDG: CURLFORM_COPYNAME"];
"1001371" -> "1001369"  [label="DDG: &last"];
"1001371" -> "1001369"  [label="DDG: postval"];
"1001371" -> "1001369"  [label="DDG: string_key->val"];
"1001371" -> "1001369"  [label="DDG: CURLFORM_END"];
"1001371" -> "1001369"  [label="DDG: (zend_long)string_key->len"];
"1001371" -> "1001369"  [label="DDG: &first"];
"1001371" -> "1001369"  [label="DDG: (zend_long)Z_STRLEN_P(current)"];
"1001371" -> "1001369"  [label="DDG: CURLFORM_CONTENTSLENGTH"];
"1001371" -> "1001369"  [label="DDG: CURLFORM_COPYCONTENTS"];
"1001371" -> "1001369"  [label="DDG: CURLFORM_NAMELENGTH"];
"1001371" -> "1001369"  [label="DDG: CURLFORM_COPYNAME"];
"1001247" -> "1001371"  [label="DDG: postval"];
"1001389" -> "1001371"  [label="DDG: Z_STRLEN_P(current)"];
"1001371" -> "1001421"  [label="DDG: &first"];
"1001369" -> "1001368"  [label="AST: "];
"1001370" -> "1001369"  [label="AST: "];
"1001395" -> "1001369"  [label="CFG: "];
"1001369" -> "1001927"  [label="DDG: curl_formadd(&first, &last,\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_COPYNAME, string_key->val,\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_NAMELENGTH, (zend_long)string_key->len,\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_COPYCONTENTS, postval,\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_CONTENTSLENGTH, (zend_long)Z_STRLEN_P(current),\n\t\t\t\t\t\t\t\t\t\t\t CURLFORM_END)"];
"1001369" -> "1001397"  [label="DDG: error"];
"1001397" -> "1001063"  [label="AST: "];
"1001397" -> "1001399"  [label="CFG: "];
"1001398" -> "1001397"  [label="AST: "];
"1001399" -> "1001397"  [label="AST: "];
"1001402" -> "1001397"  [label="CFG: "];
"1001397" -> "1001927"  [label="DDG: SAVE_CURL_ERROR(ch, error)"];
"1001397" -> "1001927"  [label="DDG: ch"];
"1000118" -> "1001397"  [label="DDG: ch"];
"1001327" -> "1001397"  [label="DDG: error"];
"1001397" -> "1001401"  [label="DDG: error"];
"1001397" -> "1001913"  [label="DDG: ch"];
"1001401" -> "1001400"  [label="AST: "];
"1001401" -> "1001403"  [label="CFG: "];
"1001402" -> "1001401"  [label="AST: "];
"1001403" -> "1001401"  [label="AST: "];
"1001406" -> "1001401"  [label="CFG: "];
"1001410" -> "1001401"  [label="CFG: "];
"1001401" -> "1001927"  [label="DDG: CURLE_OK"];
"1001401" -> "1001927"  [label="DDG: error"];
"1001401" -> "1001927"  [label="DDG: error != CURLE_OK"];
"1001401" -> "1001917"  [label="DDG: CURLE_OK"];
"1001917" -> "1001916"  [label="AST: "];
"1001917" -> "1001919"  [label="CFG: "];
"1001918" -> "1001917"  [label="AST: "];
"1001919" -> "1001917"  [label="AST: "];
"1001922" -> "1001917"  [label="CFG: "];
"1001926" -> "1001917"  [label="CFG: "];
"1001917" -> "1001927"  [label="DDG: error"];
"1001917" -> "1001927"  [label="DDG: CURLE_OK"];
"1001917" -> "1001927"  [label="DDG: error != CURLE_OK"];
"1001913" -> "1001917"  [label="DDG: error"];
"1001913" -> "1000121"  [label="AST: "];
"1001913" -> "1001915"  [label="CFG: "];
"1001914" -> "1001913"  [label="AST: "];
"1001915" -> "1001913"  [label="AST: "];
"1001918" -> "1001913"  [label="CFG: "];
"1001913" -> "1001927"  [label="DDG: ch"];
"1001913" -> "1001927"  [label="DDG: SAVE_CURL_ERROR(ch, error)"];
"1001838" -> "1001913"  [label="DDG: ch"];
"1001733" -> "1001913"  [label="DDG: ch"];
"1001468" -> "1001913"  [label="DDG: ch"];
"1001789" -> "1001913"  [label="DDG: ch"];
"1000118" -> "1001913"  [label="DDG: ch"];
"1001690" -> "1001913"  [label="DDG: error"];
"1000992" -> "1001913"  [label="DDG: error"];
"1001726" -> "1001913"  [label="DDG: error"];
"1000841" -> "1001913"  [label="DDG: error"];
"1000440" -> "1001913"  [label="DDG: error"];
"1000958" -> "1001913"  [label="DDG: error"];
"1001675" -> "1001913"  [label="DDG: error"];
"1001430" -> "1001913"  [label="DDG: error"];
"1000123" -> "1001913"  [label="DDG: error"];
"1001451" -> "1001913"  [label="DDG: error"];
"1000259" -> "1001913"  [label="DDG: error"];
"1000338" -> "1001913"  [label="DDG: error"];
"1001421" -> "1001063"  [label="AST: "];
"1001421" -> "1001428"  [label="CFG: "];
"1001422" -> "1001421"  [label="AST: "];
"1001428" -> "1001421"  [label="AST: "];
"1001431" -> "1001421"  [label="CFG: "];
"1001421" -> "1001927"  [label="DDG: &ch->to_free->post"];
"1001421" -> "1001927"  [label="DDG: zend_llist_add_element(&ch->to_free->post, &first)"];
"1001421" -> "1001927"  [label="DDG: &first"];
"1001414" -> "1001421"  [label="DDG: &ch->to_free->post"];
"1001329" -> "1001421"  [label="DDG: &first"];
}
