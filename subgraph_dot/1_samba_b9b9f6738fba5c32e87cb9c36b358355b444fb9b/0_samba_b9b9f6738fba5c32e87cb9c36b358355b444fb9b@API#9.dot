digraph "0_samba_b9b9f6738fba5c32e87cb9c36b358355b444fb9b@API" {
"1000490" [label="(Call,close(ctcp->listen_fd))"];
"1000348" [label="(Call,bind(ctcp->listen_fd, (struct sockaddr * )&sock, sock_size))"];
"1000334" [label="(Call,setsockopt(ctcp->listen_fd,SOL_SOCKET,SO_REUSEADDR,(char *)&one,sizeof(one)))"];
"1000330" [label="(Call,set_close_on_exec(ctcp->listen_fd))"];
"1000319" [label="(Call,ctcp->listen_fd == -1)"];
"1000306" [label="(Call,ctcp->listen_fd = socket(sock.sa.sa_family, SOCK_STREAM, IPPROTO_TCP))"];
"1000310" [label="(Call,socket(sock.sa.sa_family, SOCK_STREAM, IPPROTO_TCP))"];
"1000323" [label="(Call,-1)"];
"1000340" [label="(Call,(char *)&one)"];
"1000352" [label="(Call,(struct sockaddr * )&sock)"];
"1000226" [label="(Call,ctdb_tcp_get_address(ctdb,\n\t\t\t\tctdb->nodes[i]->address.address, \n\t\t\t\t&sock))"];
"1000326" [label="(Call,ctdb_set_error(ctdb, \"socket failed\n\"))"];
"1000103" [label="(MethodParameterIn,struct ctdb_context *ctdb)"];
"1000290" [label="(Call,sock_size = sizeof(sock.ip6))"];
"1000266" [label="(Call,sock_size = sizeof(sock.ip))"];
"1000459" [label="(Call,listen(ctcp->listen_fd, 10))"];
"1000103" [label="(MethodParameterIn,struct ctdb_context *ctdb)"];
"1000267" [label="(Identifier,sock_size)"];
"1000345" [label="(Identifier,one)"];
"1000237" [label="(Call,&sock)"];
"1000306" [label="(Call,ctcp->listen_fd = socket(sock.sa.sa_family, SOCK_STREAM, IPPROTO_TCP))"];
"1000342" [label="(Call,&one)"];
"1000354" [label="(Call,&sock)"];
"1000310" [label="(Call,socket(sock.sa.sa_family, SOCK_STREAM, IPPROTO_TCP))"];
"1000248" [label="(Block,)"];
"1000496" [label="(Identifier,ctcp)"];
"1000104" [label="(Block,)"];
"1000226" [label="(Call,ctdb_tcp_get_address(ctdb,\n\t\t\t\tctdb->nodes[i]->address.address, \n\t\t\t\t&sock))"];
"1000350" [label="(Identifier,ctcp)"];
"1000490" [label="(Call,close(ctcp->listen_fd))"];
"1000318" [label="(ControlStructure,if (ctcp->listen_fd == -1))"];
"1000290" [label="(Call,sock_size = sizeof(sock.ip6))"];
"1000470" [label="(Call,event_add_fd(ctdb->ev, ctcp, ctcp->listen_fd, EVENT_FD_READ,\n\t\t\t   ctdb_listen_event, ctdb))"];
"1000334" [label="(Call,setsockopt(ctcp->listen_fd,SOL_SOCKET,SO_REUSEADDR,(char *)&one,sizeof(one)))"];
"1000340" [label="(Call,(char *)&one)"];
"1000328" [label="(Literal,\"socket failed\n\")"];
"1000299" [label="(Call,sock.ip.sin_len = sock_size)"];
"1000239" [label="(Literal,0)"];
"1000352" [label="(Call,(struct sockaddr * )&sock)"];
"1000344" [label="(Call,sizeof(one))"];
"1000327" [label="(Identifier,ctdb)"];
"1000311" [label="(Call,sock.sa.sa_family)"];
"1000336" [label="(Identifier,ctcp)"];
"1000228" [label="(Call,ctdb->nodes[i]->address.address)"];
"1000292" [label="(Call,sizeof(sock.ip6))"];
"1000357" [label="(Literal,0)"];
"1000414" [label="(Call,talloc_asprintf(ctdb, \"%s:%u\", \n\t\t\t\t     ctdb->address.address, \n\t\t\t\t     ctdb->address.port))"];
"1000321" [label="(Identifier,ctcp)"];
"1000325" [label="(Block,)"];
"1000465" [label="(Literal,1)"];
"1000356" [label="(Identifier,sock_size)"];
"1000349" [label="(Call,ctcp->listen_fd)"];
"1000347" [label="(Call,bind(ctcp->listen_fd, (struct sockaddr * )&sock, sock_size) == 0)"];
"1000339" [label="(Identifier,SO_REUSEADDR)"];
"1000460" [label="(Call,ctcp->listen_fd)"];
"1000317" [label="(Identifier,IPPROTO_TCP)"];
"1000319" [label="(Call,ctcp->listen_fd == -1)"];
"1000268" [label="(Call,sizeof(sock.ip))"];
"1000338" [label="(Identifier,SOL_SOCKET)"];
"1000332" [label="(Identifier,ctcp)"];
"1000209" [label="(Block,)"];
"1000272" [label="(ControlStructure,break;)"];
"1000331" [label="(Call,ctcp->listen_fd)"];
"1000384" [label="(Call,talloc_strdup(ctdb, ctdb->nodes[i]->address.address))"];
"1000291" [label="(Identifier,sock_size)"];
"1000316" [label="(Identifier,SOCK_STREAM)"];
"1000329" [label="(ControlStructure,continue;)"];
"1000458" [label="(Call,listen(ctcp->listen_fd, 10) == -1)"];
"1000324" [label="(Literal,1)"];
"1000296" [label="(ControlStructure,break;)"];
"1000335" [label="(Call,ctcp->listen_fd)"];
"1000266" [label="(Call,sock_size = sizeof(sock.ip))"];
"1000348" [label="(Call,bind(ctcp->listen_fd, (struct sockaddr * )&sock, sock_size))"];
"1000227" [label="(Identifier,ctdb)"];
"1000503" [label="(MethodReturn,static int)"];
"1000491" [label="(Call,ctcp->listen_fd)"];
"1000320" [label="(Call,ctcp->listen_fd)"];
"1000330" [label="(Call,set_close_on_exec(ctcp->listen_fd))"];
"1000459" [label="(Call,listen(ctcp->listen_fd, 10))"];
"1000323" [label="(Call,-1)"];
"1000326" [label="(Call,ctdb_set_error(ctdb, \"socket failed\n\"))"];
"1000463" [label="(Literal,10)"];
"1000307" [label="(Call,ctcp->listen_fd)"];
"1000225" [label="(Call,ctdb_tcp_get_address(ctdb,\n\t\t\t\tctdb->nodes[i]->address.address, \n\t\t\t\t&sock) != 0)"];
"1000490" -> "1000104"  [label="AST: "];
"1000490" -> "1000491"  [label="CFG: "];
"1000491" -> "1000490"  [label="AST: "];
"1000496" -> "1000490"  [label="CFG: "];
"1000490" -> "1000503"  [label="DDG: "];
"1000348" -> "1000490"  [label="DDG: "];
"1000459" -> "1000490"  [label="DDG: "];
"1000319" -> "1000490"  [label="DDG: "];
"1000348" -> "1000347"  [label="AST: "];
"1000348" -> "1000356"  [label="CFG: "];
"1000349" -> "1000348"  [label="AST: "];
"1000352" -> "1000348"  [label="AST: "];
"1000356" -> "1000348"  [label="AST: "];
"1000357" -> "1000348"  [label="CFG: "];
"1000348" -> "1000503"  [label="DDG: "];
"1000348" -> "1000503"  [label="DDG: "];
"1000348" -> "1000347"  [label="DDG: "];
"1000348" -> "1000347"  [label="DDG: "];
"1000348" -> "1000347"  [label="DDG: "];
"1000334" -> "1000348"  [label="DDG: "];
"1000352" -> "1000348"  [label="DDG: "];
"1000290" -> "1000348"  [label="DDG: "];
"1000266" -> "1000348"  [label="DDG: "];
"1000348" -> "1000459"  [label="DDG: "];
"1000334" -> "1000209"  [label="AST: "];
"1000334" -> "1000344"  [label="CFG: "];
"1000335" -> "1000334"  [label="AST: "];
"1000338" -> "1000334"  [label="AST: "];
"1000339" -> "1000334"  [label="AST: "];
"1000340" -> "1000334"  [label="AST: "];
"1000344" -> "1000334"  [label="AST: "];
"1000350" -> "1000334"  [label="CFG: "];
"1000334" -> "1000503"  [label="DDG: "];
"1000334" -> "1000503"  [label="DDG: "];
"1000334" -> "1000503"  [label="DDG: "];
"1000334" -> "1000503"  [label="DDG: "];
"1000330" -> "1000334"  [label="DDG: "];
"1000340" -> "1000334"  [label="DDG: "];
"1000330" -> "1000209"  [label="AST: "];
"1000330" -> "1000331"  [label="CFG: "];
"1000331" -> "1000330"  [label="AST: "];
"1000336" -> "1000330"  [label="CFG: "];
"1000330" -> "1000503"  [label="DDG: "];
"1000319" -> "1000330"  [label="DDG: "];
"1000319" -> "1000318"  [label="AST: "];
"1000319" -> "1000323"  [label="CFG: "];
"1000320" -> "1000319"  [label="AST: "];
"1000323" -> "1000319"  [label="AST: "];
"1000327" -> "1000319"  [label="CFG: "];
"1000332" -> "1000319"  [label="CFG: "];
"1000319" -> "1000503"  [label="DDG: "];
"1000306" -> "1000319"  [label="DDG: "];
"1000323" -> "1000319"  [label="DDG: "];
"1000319" -> "1000459"  [label="DDG: "];
"1000306" -> "1000209"  [label="AST: "];
"1000306" -> "1000310"  [label="CFG: "];
"1000307" -> "1000306"  [label="AST: "];
"1000310" -> "1000306"  [label="AST: "];
"1000321" -> "1000306"  [label="CFG: "];
"1000306" -> "1000503"  [label="DDG: "];
"1000310" -> "1000306"  [label="DDG: "];
"1000310" -> "1000306"  [label="DDG: "];
"1000310" -> "1000306"  [label="DDG: "];
"1000310" -> "1000317"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000316" -> "1000310"  [label="AST: "];
"1000317" -> "1000310"  [label="AST: "];
"1000310" -> "1000503"  [label="DDG: "];
"1000310" -> "1000503"  [label="DDG: "];
"1000310" -> "1000503"  [label="DDG: "];
"1000323" -> "1000324"  [label="CFG: "];
"1000324" -> "1000323"  [label="AST: "];
"1000340" -> "1000342"  [label="CFG: "];
"1000341" -> "1000340"  [label="AST: "];
"1000342" -> "1000340"  [label="AST: "];
"1000345" -> "1000340"  [label="CFG: "];
"1000340" -> "1000503"  [label="DDG: "];
"1000352" -> "1000354"  [label="CFG: "];
"1000353" -> "1000352"  [label="AST: "];
"1000354" -> "1000352"  [label="AST: "];
"1000356" -> "1000352"  [label="CFG: "];
"1000352" -> "1000503"  [label="DDG: "];
"1000352" -> "1000226"  [label="DDG: "];
"1000226" -> "1000352"  [label="DDG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000226" -> "1000237"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000228" -> "1000226"  [label="AST: "];
"1000237" -> "1000226"  [label="AST: "];
"1000239" -> "1000226"  [label="CFG: "];
"1000226" -> "1000503"  [label="DDG: "];
"1000226" -> "1000503"  [label="DDG: "];
"1000226" -> "1000503"  [label="DDG: "];
"1000226" -> "1000225"  [label="DDG: "];
"1000226" -> "1000225"  [label="DDG: "];
"1000226" -> "1000225"  [label="DDG: "];
"1000326" -> "1000226"  [label="DDG: "];
"1000103" -> "1000226"  [label="DDG: "];
"1000226" -> "1000326"  [label="DDG: "];
"1000226" -> "1000384"  [label="DDG: "];
"1000226" -> "1000384"  [label="DDG: "];
"1000326" -> "1000325"  [label="AST: "];
"1000326" -> "1000328"  [label="CFG: "];
"1000327" -> "1000326"  [label="AST: "];
"1000328" -> "1000326"  [label="AST: "];
"1000329" -> "1000326"  [label="CFG: "];
"1000326" -> "1000503"  [label="DDG: "];
"1000326" -> "1000503"  [label="DDG: "];
"1000103" -> "1000326"  [label="DDG: "];
"1000326" -> "1000384"  [label="DDG: "];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000503"  [label="DDG: "];
"1000103" -> "1000384"  [label="DDG: "];
"1000103" -> "1000414"  [label="DDG: "];
"1000103" -> "1000470"  [label="DDG: "];
"1000290" -> "1000248"  [label="AST: "];
"1000290" -> "1000292"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000292" -> "1000290"  [label="AST: "];
"1000296" -> "1000290"  [label="CFG: "];
"1000290" -> "1000503"  [label="DDG: "];
"1000290" -> "1000299"  [label="DDG: "];
"1000266" -> "1000248"  [label="AST: "];
"1000266" -> "1000268"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="AST: "];
"1000272" -> "1000266"  [label="CFG: "];
"1000266" -> "1000503"  [label="DDG: "];
"1000266" -> "1000299"  [label="DDG: "];
"1000459" -> "1000458"  [label="AST: "];
"1000459" -> "1000463"  [label="CFG: "];
"1000460" -> "1000459"  [label="AST: "];
"1000463" -> "1000459"  [label="AST: "];
"1000465" -> "1000459"  [label="CFG: "];
"1000459" -> "1000458"  [label="DDG: "];
"1000459" -> "1000458"  [label="DDG: "];
"1000459" -> "1000470"  [label="DDG: "];
}
