digraph "0_libssh_94f6955fbaee6fda9385a23e505497efe21f5b4f_0@array" {
"1000236" [label="(Call,ssh_set_error(session,\n                          SSH_FATAL,\n                          \"Public key from server (%s) doesn't match user \"\n                          \"preference (%s)\",\n                          key->type_c,\n                          session->opts.wanted_methods[SSH_HOSTKEYS]))"];
"1000177" [label="(Call,generate_session_keys(session))"];
"1000170" [label="(Call,crypt_set_algorithms(session, SSH_3DES))"];
"1000224" [label="(Call,ssh_match_group(session->opts.wanted_methods[SSH_HOSTKEYS],\n                            key->type_c))"];
"1000391" [label="(MethodReturn,RET)"];
"1000237" [label="(Identifier,session)"];
"1000235" [label="(Block,)"];
"1000251" [label="(Identifier,key)"];
"1000170" [label="(Call,crypt_set_algorithms(session, SSH_3DES))"];
"1000176" [label="(Call,generate_session_keys(session) < 0)"];
"1000177" [label="(Call,generate_session_keys(session))"];
"1000223" [label="(Call,!ssh_match_group(session->opts.wanted_methods[SSH_HOSTKEYS],\n                            key->type_c))"];
"1000257" [label="(Call,ssh_pki_signature_verify_blob(session,\n                                       sig_blob,\n                                       key,\n                                       session->next_crypto->secret_hash,\n                                       session->next_crypto->digest_len))"];
"1000239" [label="(Literal,\"Public key from server (%s) doesn't match user \"\n                          \"preference (%s)\")"];
"1000232" [label="(Call,key->type_c)"];
"1000169" [label="(ControlStructure,if (crypt_set_algorithms(session, SSH_3DES) /* knows nothing about DES*/ ))"];
"1000174" [label="(ControlStructure,goto error;)"];
"1000240" [label="(Call,key->type_c)"];
"1000271" [label="(Call,session->next_crypto->server_pubkey_type = key->type_c)"];
"1000238" [label="(Identifier,SSH_FATAL)"];
"1000225" [label="(Call,session->opts.wanted_methods[SSH_HOSTKEYS])"];
"1000178" [label="(Identifier,session)"];
"1000236" [label="(Call,ssh_set_error(session,\n                          SSH_FATAL,\n                          \"Public key from server (%s) doesn't match user \"\n                          \"preference (%s)\",\n                          key->type_c,\n                          session->opts.wanted_methods[SSH_HOSTKEYS]))"];
"1000224" [label="(Call,ssh_match_group(session->opts.wanted_methods[SSH_HOSTKEYS],\n                            key->type_c))"];
"1000171" [label="(Identifier,session)"];
"1000243" [label="(Call,session->opts.wanted_methods[SSH_HOSTKEYS])"];
"1000179" [label="(Literal,0)"];
"1000172" [label="(Identifier,SSH_3DES)"];
"1000236" -> "1000235"  [label="AST: "];
"1000236" -> "1000243"  [label="CFG: "];
"1000237" -> "1000236"  [label="AST: "];
"1000238" -> "1000236"  [label="AST: "];
"1000239" -> "1000236"  [label="AST: "];
"1000240" -> "1000236"  [label="AST: "];
"1000243" -> "1000236"  [label="AST: "];
"1000251" -> "1000236"  [label="CFG: "];
"1000236" -> "1000391"  [label="DDG: "];
"1000236" -> "1000391"  [label="DDG: "];
"1000236" -> "1000391"  [label="DDG: "];
"1000236" -> "1000391"  [label="DDG: "];
"1000236" -> "1000391"  [label="DDG: "];
"1000177" -> "1000236"  [label="DDG: "];
"1000224" -> "1000236"  [label="DDG: "];
"1000224" -> "1000236"  [label="DDG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000177" -> "1000178"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000179" -> "1000177"  [label="CFG: "];
"1000177" -> "1000391"  [label="DDG: "];
"1000177" -> "1000176"  [label="DDG: "];
"1000170" -> "1000177"  [label="DDG: "];
"1000177" -> "1000257"  [label="DDG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000174" -> "1000170"  [label="CFG: "];
"1000178" -> "1000170"  [label="CFG: "];
"1000170" -> "1000391"  [label="DDG: "];
"1000170" -> "1000391"  [label="DDG: "];
"1000170" -> "1000391"  [label="DDG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000224" -> "1000232"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000232" -> "1000224"  [label="AST: "];
"1000223" -> "1000224"  [label="CFG: "];
"1000224" -> "1000391"  [label="DDG: "];
"1000224" -> "1000223"  [label="DDG: "];
"1000224" -> "1000223"  [label="DDG: "];
"1000224" -> "1000271"  [label="DDG: "];
}
