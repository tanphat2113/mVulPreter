digraph "0_libssh_94f6955fbaee6fda9385a23e505497efe21f5b4f_0@API" {
"1000170" [label="(Call,crypt_set_algorithms(session, SSH_3DES))"];
"1000177" [label="(Call,generate_session_keys(session))"];
"1000176" [label="(Call,generate_session_keys(session) < 0)"];
"1000236" [label="(Call,ssh_set_error(session,\n                          SSH_FATAL,\n                          \"Public key from server (%s) doesn't match user \"\n                          \"preference (%s)\",\n                          key->type_c,\n                          session->opts.wanted_methods[SSH_HOSTKEYS]))"];
"1000257" [label="(Call,ssh_pki_signature_verify_blob(session,\n                                       sig_blob,\n                                       key,\n                                       session->next_crypto->secret_hash,\n                                       session->next_crypto->digest_len))"];
"1000255" [label="(Call,rc = ssh_pki_signature_verify_blob(session,\n                                       sig_blob,\n                                       key,\n                                       session->next_crypto->secret_hash,\n                                       session->next_crypto->digest_len))"];
"1000290" [label="(Call,rc == SSH_ERROR)"];
"1000280" [label="(Call,ssh_key_free(key))"];
"1000282" [label="(Call,ssh_string_burn(sig_blob))"];
"1000284" [label="(Call,ssh_string_free(sig_blob))"];
"1000331" [label="(Call,ssh_set_error_oom(session))"];
"1000355" [label="(Call,ssh_set_error_oom(session))"];
"1000379" [label="(Call,session->ssh_connection_callback(session))"];
"1000281" [label="(Identifier,key)"];
"1000175" [label="(ControlStructure,if (generate_session_keys(session) < 0))"];
"1000157" [label="(Block,)"];
"1000391" [label="(MethodReturn,RET)"];
"1000259" [label="(Identifier,sig_blob)"];
"1000296" [label="(Identifier,SSH_LOG_PROTOCOL)"];
"1000354" [label="(Block,)"];
"1000294" [label="(ControlStructure,goto error;)"];
"1000282" [label="(Call,ssh_string_burn(sig_blob))"];
"1000237" [label="(Identifier,session)"];
"1000283" [label="(Identifier,sig_blob)"];
"1000183" [label="(Identifier,sig_blob)"];
"1000330" [label="(Block,)"];
"1000235" [label="(Block,)"];
"1000251" [label="(Identifier,key)"];
"1000261" [label="(Call,session->next_crypto->secret_hash)"];
"1000170" [label="(Call,crypt_set_algorithms(session, SSH_3DES))"];
"1000332" [label="(Identifier,session)"];
"1000176" [label="(Call,generate_session_keys(session) < 0)"];
"1000266" [label="(Call,session->next_crypto->digest_len)"];
"1000284" [label="(Call,ssh_string_free(sig_blob))"];
"1000177" [label="(Call,generate_session_keys(session))"];
"1000258" [label="(Identifier,session)"];
"1000257" [label="(Call,ssh_pki_signature_verify_blob(session,\n                                       sig_blob,\n                                       key,\n                                       session->next_crypto->secret_hash,\n                                       session->next_crypto->digest_len))"];
"1000239" [label="(Literal,\"Public key from server (%s) doesn't match user \"\n                          \"preference (%s)\")"];
"1000111" [label="(Block,)"];
"1000174" [label="(ControlStructure,goto error;)"];
"1000169" [label="(ControlStructure,if (crypt_set_algorithms(session, SSH_3DES) /* knows nothing about DES*/ ))"];
"1000355" [label="(Call,ssh_set_error_oom(session))"];
"1000356" [label="(Identifier,session)"];
"1000331" [label="(Call,ssh_set_error_oom(session))"];
"1000240" [label="(Call,key->type_c)"];
"1000280" [label="(Call,ssh_key_free(key))"];
"1000357" [label="(ControlStructure,goto error;)"];
"1000290" [label="(Call,rc == SSH_ERROR)"];
"1000260" [label="(Identifier,key)"];
"1000382" [label="(Identifier,SSH_PACKET_USED)"];
"1000274" [label="(Identifier,session)"];
"1000287" [label="(Identifier,sig_blob)"];
"1000292" [label="(Identifier,SSH_ERROR)"];
"1000238" [label="(Identifier,SSH_FATAL)"];
"1000333" [label="(ControlStructure,goto error;)"];
"1000178" [label="(Identifier,session)"];
"1000236" [label="(Call,ssh_set_error(session,\n                          SSH_FATAL,\n                          \"Public key from server (%s) doesn't match user \"\n                          \"preference (%s)\",\n                          key->type_c,\n                          session->opts.wanted_methods[SSH_HOSTKEYS]))"];
"1000285" [label="(Identifier,sig_blob)"];
"1000224" [label="(Call,ssh_match_group(session->opts.wanted_methods[SSH_HOSTKEYS],\n                            key->type_c))"];
"1000289" [label="(ControlStructure,if (rc == SSH_ERROR))"];
"1000171" [label="(Identifier,session)"];
"1000255" [label="(Call,rc = ssh_pki_signature_verify_blob(session,\n                                       sig_blob,\n                                       key,\n                                       session->next_crypto->secret_hash,\n                                       session->next_crypto->digest_len))"];
"1000256" [label="(Identifier,rc)"];
"1000380" [label="(Identifier,session)"];
"1000243" [label="(Call,session->opts.wanted_methods[SSH_HOSTKEYS])"];
"1000181" [label="(ControlStructure,goto error;)"];
"1000291" [label="(Identifier,rc)"];
"1000182" [label="(Call,sig_blob = session->next_crypto->dh_server_signature)"];
"1000179" [label="(Literal,0)"];
"1000379" [label="(Call,session->ssh_connection_callback(session))"];
"1000172" [label="(Identifier,SSH_3DES)"];
"1000170" -> "1000169"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000174" -> "1000170"  [label="CFG: "];
"1000178" -> "1000170"  [label="CFG: "];
"1000170" -> "1000391"  [label="DDG: "];
"1000170" -> "1000391"  [label="DDG: "];
"1000170" -> "1000391"  [label="DDG: "];
"1000170" -> "1000177"  [label="DDG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000177" -> "1000178"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000179" -> "1000177"  [label="CFG: "];
"1000177" -> "1000391"  [label="DDG: "];
"1000177" -> "1000176"  [label="DDG: "];
"1000177" -> "1000236"  [label="DDG: "];
"1000177" -> "1000257"  [label="DDG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000176" -> "1000179"  [label="CFG: "];
"1000179" -> "1000176"  [label="AST: "];
"1000181" -> "1000176"  [label="CFG: "];
"1000183" -> "1000176"  [label="CFG: "];
"1000176" -> "1000391"  [label="DDG: "];
"1000176" -> "1000391"  [label="DDG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000236" -> "1000243"  [label="CFG: "];
"1000237" -> "1000236"  [label="AST: "];
"1000238" -> "1000236"  [label="AST: "];
"1000239" -> "1000236"  [label="AST: "];
"1000240" -> "1000236"  [label="AST: "];
"1000243" -> "1000236"  [label="AST: "];
"1000251" -> "1000236"  [label="CFG: "];
"1000236" -> "1000391"  [label="DDG: "];
"1000236" -> "1000391"  [label="DDG: "];
"1000236" -> "1000391"  [label="DDG: "];
"1000236" -> "1000391"  [label="DDG: "];
"1000236" -> "1000391"  [label="DDG: "];
"1000224" -> "1000236"  [label="DDG: "];
"1000224" -> "1000236"  [label="DDG: "];
"1000257" -> "1000255"  [label="AST: "];
"1000257" -> "1000266"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000259" -> "1000257"  [label="AST: "];
"1000260" -> "1000257"  [label="AST: "];
"1000261" -> "1000257"  [label="AST: "];
"1000266" -> "1000257"  [label="AST: "];
"1000255" -> "1000257"  [label="CFG: "];
"1000257" -> "1000391"  [label="DDG: "];
"1000257" -> "1000391"  [label="DDG: "];
"1000257" -> "1000391"  [label="DDG: "];
"1000257" -> "1000255"  [label="DDG: "];
"1000257" -> "1000255"  [label="DDG: "];
"1000257" -> "1000255"  [label="DDG: "];
"1000257" -> "1000255"  [label="DDG: "];
"1000257" -> "1000255"  [label="DDG: "];
"1000182" -> "1000257"  [label="DDG: "];
"1000257" -> "1000280"  [label="DDG: "];
"1000257" -> "1000282"  [label="DDG: "];
"1000257" -> "1000331"  [label="DDG: "];
"1000257" -> "1000355"  [label="DDG: "];
"1000257" -> "1000379"  [label="DDG: "];
"1000255" -> "1000157"  [label="AST: "];
"1000256" -> "1000255"  [label="AST: "];
"1000274" -> "1000255"  [label="CFG: "];
"1000255" -> "1000391"  [label="DDG: "];
"1000255" -> "1000290"  [label="DDG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000290" -> "1000292"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000292" -> "1000290"  [label="AST: "];
"1000294" -> "1000290"  [label="CFG: "];
"1000296" -> "1000290"  [label="CFG: "];
"1000290" -> "1000391"  [label="DDG: "];
"1000290" -> "1000391"  [label="DDG: "];
"1000290" -> "1000391"  [label="DDG: "];
"1000280" -> "1000157"  [label="AST: "];
"1000280" -> "1000281"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000283" -> "1000280"  [label="CFG: "];
"1000280" -> "1000391"  [label="DDG: "];
"1000280" -> "1000391"  [label="DDG: "];
"1000282" -> "1000157"  [label="AST: "];
"1000282" -> "1000283"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000285" -> "1000282"  [label="CFG: "];
"1000282" -> "1000391"  [label="DDG: "];
"1000282" -> "1000284"  [label="DDG: "];
"1000284" -> "1000157"  [label="AST: "];
"1000284" -> "1000285"  [label="CFG: "];
"1000285" -> "1000284"  [label="AST: "];
"1000287" -> "1000284"  [label="CFG: "];
"1000284" -> "1000391"  [label="DDG: "];
"1000331" -> "1000330"  [label="AST: "];
"1000331" -> "1000332"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000333" -> "1000331"  [label="CFG: "];
"1000331" -> "1000391"  [label="DDG: "];
"1000331" -> "1000391"  [label="DDG: "];
"1000355" -> "1000354"  [label="AST: "];
"1000355" -> "1000356"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000357" -> "1000355"  [label="CFG: "];
"1000355" -> "1000391"  [label="DDG: "];
"1000355" -> "1000391"  [label="DDG: "];
"1000379" -> "1000111"  [label="AST: "];
"1000379" -> "1000380"  [label="CFG: "];
"1000380" -> "1000379"  [label="AST: "];
"1000382" -> "1000379"  [label="CFG: "];
"1000379" -> "1000391"  [label="DDG: "];
"1000379" -> "1000391"  [label="DDG: "];
}
