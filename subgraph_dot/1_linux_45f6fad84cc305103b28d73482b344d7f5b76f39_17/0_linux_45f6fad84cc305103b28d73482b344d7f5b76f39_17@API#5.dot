digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_17@API" {
"1000179" [label="(Call,memcpy(newnp, np, sizeof(struct ipv6_pinfo)))"];
"1000171" [label="(Call,newnp = inet6_sk(newsk))"];
"1000173" [label="(Call,inet6_sk(newsk))"];
"1000169" [label="(Call,inet_sk(newsk))"];
"1000160" [label="(Call,inet_sk(newsk))"];
"1000155" [label="(Call,(struct tcp6_sock *)newsk)"];
"1000149" [label="(Call,!newsk)"];
"1000139" [label="(Call,newsk = tcp_v4_syn_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t     req_unhash, own_req))"];
"1000141" [label="(Call,tcp_v4_syn_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t     req_unhash, own_req))"];
"1000123" [label="(Call,inet6_sk(sk))"];
"1000111" [label="(MethodParameterIn,const struct sock *sk)"];
"1000112" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000113" [label="(MethodParameterIn,struct request_sock *req)"];
"1000114" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000115" [label="(MethodParameterIn,struct request_sock *req_unhash)"];
"1000116" [label="(MethodParameterIn,bool *own_req)"];
"1000121" [label="(Call,*np = inet6_sk(sk))"];
"1000179" [label="(Call,memcpy(newnp, np, sizeof(struct ipv6_pinfo)))"];
"1000173" [label="(Call,inet6_sk(newsk))"];
"1000160" [label="(Call,inet_sk(newsk))"];
"1000159" [label="(Call,inet_sk(newsk)->pinet6)"];
"1000141" [label="(Call,tcp_v4_syn_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t     req_unhash, own_req))"];
"1000640" [label="(Call,sock_net(sk))"];
"1000430" [label="(Call,ipv6_hdr(skb))"];
"1000313" [label="(Call,inet6_sk_rx_dst_set(newsk, skb))"];
"1000139" [label="(Call,newsk = tcp_v4_syn_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t     req_unhash, own_req))"];
"1000122" [label="(Identifier,np)"];
"1000180" [label="(Identifier,newnp)"];
"1000248" [label="(Call,ipv6_hdr(skb))"];
"1000281" [label="(Call,dst = inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP))"];
"1000487" [label="(Call,dst_mtu(dst))"];
"1000113" [label="(MethodParameterIn,struct request_sock *req)"];
"1000240" [label="(Call,ipv6_hdr(skb))"];
"1000170" [label="(Identifier,newsk)"];
"1000565" [label="(Call,sk_gfp_atomic(sk, GFP_ATOMIC))"];
"1000422" [label="(Call,ipv6_hdr(skb))"];
"1000124" [label="(Identifier,sk)"];
"1000295" [label="(Call,tcp_create_openreq_child(sk, req, skb))"];
"1000519" [label="(Call,tcp_sk(sk))"];
"1000415" [label="(Call,tcp_v6_iif(skb))"];
"1000177" [label="(Call,tcp_sk(newsk))"];
"1000271" [label="(Call,inet_rsk(req))"];
"1000636" [label="(Call,dst_release(dst))"];
"1000499" [label="(Call,tcp_sk(sk))"];
"1000116" [label="(MethodParameterIn,bool *own_req)"];
"1000585" [label="(Call,req_to_sk(req_unhash))"];
"1000123" [label="(Call,inet6_sk(sk))"];
"1000607" [label="(Call,sk_gfp_atomic(sk, GFP_ATOMIC))"];
"1000157" [label="(Identifier,newsk)"];
"1000153" [label="(Call,newtcp6sk = (struct tcp6_sock *)newsk)"];
"1000233" [label="(Call,tcp_v6_iif(skb))"];
"1000482" [label="(Call,tcp_ca_openreq_child(newsk, dst))"];
"1000493" [label="(Call,dst_metric_advmss(dst))"];
"1000342" [label="(Call,memcpy(newnp, np, sizeof(struct ipv6_pinfo)))"];
"1000152" [label="(Identifier,NULL)"];
"1000274" [label="(Call,sk_acceptq_is_full(sk))"];
"1000154" [label="(Identifier,newtcp6sk)"];
"1000174" [label="(Identifier,newsk)"];
"1000162" [label="(FieldIdentifier,pinet6)"];
"1000645" [label="(MethodReturn,static struct sock *)"];
"1000111" [label="(MethodParameterIn,const struct sock *sk)"];
"1000278" [label="(Call,!dst)"];
"1000142" [label="(Identifier,sk)"];
"1000176" [label="(Identifier,newtp)"];
"1000149" [label="(Call,!newsk)"];
"1000506" [label="(Call,tcp_sk(sk))"];
"1000148" [label="(ControlStructure,if (!newsk))"];
"1000541" [label="(Call,tcp_v6_md5_do_lookup(sk, &newsk->sk_v6_daddr))"];
"1000570" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000632" [label="(Call,sock_net(sk))"];
"1000150" [label="(Identifier,newsk)"];
"1000283" [label="(Call,inet6_csk_route_req(sk, &fl6, req, IPPROTO_TCP))"];
"1000146" [label="(Identifier,req_unhash)"];
"1000171" [label="(Call,newnp = inet6_sk(newsk))"];
"1000143" [label="(Identifier,skb)"];
"1000115" [label="(MethodParameterIn,struct request_sock *req_unhash)"];
"1000259" [label="(Call,ipv6_hdr(skb))"];
"1000181" [label="(Identifier,np)"];
"1000290" [label="(Call,!dst)"];
"1000172" [label="(Identifier,newnp)"];
"1000147" [label="(Identifier,own_req)"];
"1000144" [label="(Identifier,req)"];
"1000308" [label="(Call,__ip6_dst_store(newsk, dst, NULL, NULL))"];
"1000169" [label="(Call,inet_sk(newsk))"];
"1000182" [label="(Call,sizeof(struct ipv6_pinfo))"];
"1000441" [label="(Call,ipv6_hdr(skb))"];
"1000134" [label="(Identifier,skb)"];
"1000155" [label="(Call,(struct tcp6_sock *)newsk)"];
"1000112" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000121" [label="(Call,*np = inet6_sk(sk))"];
"1000167" [label="(Call,newinet = inet_sk(newsk))"];
"1000114" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000145" [label="(Identifier,dst)"];
"1000591" [label="(Call,tcp_move_syn(newtp, req))"];
"1000140" [label="(Identifier,newsk)"];
"1000117" [label="(Block,)"];
"1000138" [label="(Block,)"];
"1000186" [label="(Identifier,newnp)"];
"1000161" [label="(Identifier,newsk)"];
"1000179" -> "1000138"  [label="AST: "];
"1000179" -> "1000182"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000181" -> "1000179"  [label="AST: "];
"1000182" -> "1000179"  [label="AST: "];
"1000186" -> "1000179"  [label="CFG: "];
"1000179" -> "1000645"  [label="DDG: memcpy(newnp, np, sizeof(struct ipv6_pinfo))"];
"1000179" -> "1000645"  [label="DDG: np"];
"1000179" -> "1000645"  [label="DDG: newnp"];
"1000171" -> "1000179"  [label="DDG: newnp"];
"1000121" -> "1000179"  [label="DDG: np"];
"1000171" -> "1000138"  [label="AST: "];
"1000171" -> "1000173"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="AST: "];
"1000176" -> "1000171"  [label="CFG: "];
"1000171" -> "1000645"  [label="DDG: inet6_sk(newsk)"];
"1000173" -> "1000171"  [label="DDG: newsk"];
"1000173" -> "1000174"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000169" -> "1000173"  [label="DDG: newsk"];
"1000173" -> "1000177"  [label="DDG: newsk"];
"1000169" -> "1000167"  [label="AST: "];
"1000169" -> "1000170"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000167" -> "1000169"  [label="CFG: "];
"1000169" -> "1000167"  [label="DDG: newsk"];
"1000160" -> "1000169"  [label="DDG: newsk"];
"1000160" -> "1000159"  [label="AST: "];
"1000160" -> "1000161"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000162" -> "1000160"  [label="CFG: "];
"1000155" -> "1000160"  [label="DDG: newsk"];
"1000155" -> "1000153"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000157" -> "1000155"  [label="AST: "];
"1000153" -> "1000155"  [label="CFG: "];
"1000155" -> "1000153"  [label="DDG: newsk"];
"1000149" -> "1000155"  [label="DDG: newsk"];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000152" -> "1000149"  [label="CFG: "];
"1000154" -> "1000149"  [label="CFG: "];
"1000149" -> "1000645"  [label="DDG: !newsk"];
"1000149" -> "1000645"  [label="DDG: newsk"];
"1000139" -> "1000149"  [label="DDG: newsk"];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000141"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="AST: "];
"1000150" -> "1000139"  [label="CFG: "];
"1000139" -> "1000645"  [label="DDG: tcp_v4_syn_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t     req_unhash, own_req)"];
"1000141" -> "1000139"  [label="DDG: req"];
"1000141" -> "1000139"  [label="DDG: own_req"];
"1000141" -> "1000139"  [label="DDG: sk"];
"1000141" -> "1000139"  [label="DDG: req_unhash"];
"1000141" -> "1000139"  [label="DDG: dst"];
"1000141" -> "1000139"  [label="DDG: skb"];
"1000141" -> "1000147"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000144" -> "1000141"  [label="AST: "];
"1000145" -> "1000141"  [label="AST: "];
"1000146" -> "1000141"  [label="AST: "];
"1000147" -> "1000141"  [label="AST: "];
"1000141" -> "1000645"  [label="DDG: sk"];
"1000141" -> "1000645"  [label="DDG: req"];
"1000141" -> "1000645"  [label="DDG: dst"];
"1000141" -> "1000645"  [label="DDG: skb"];
"1000141" -> "1000645"  [label="DDG: req_unhash"];
"1000141" -> "1000645"  [label="DDG: own_req"];
"1000123" -> "1000141"  [label="DDG: sk"];
"1000111" -> "1000141"  [label="DDG: sk"];
"1000112" -> "1000141"  [label="DDG: skb"];
"1000113" -> "1000141"  [label="DDG: req"];
"1000114" -> "1000141"  [label="DDG: dst"];
"1000115" -> "1000141"  [label="DDG: req_unhash"];
"1000116" -> "1000141"  [label="DDG: own_req"];
"1000141" -> "1000233"  [label="DDG: skb"];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000123" -> "1000121"  [label="DDG: sk"];
"1000111" -> "1000123"  [label="DDG: sk"];
"1000123" -> "1000274"  [label="DDG: sk"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000645"  [label="DDG: sk"];
"1000111" -> "1000274"  [label="DDG: sk"];
"1000111" -> "1000283"  [label="DDG: sk"];
"1000111" -> "1000295"  [label="DDG: sk"];
"1000111" -> "1000499"  [label="DDG: sk"];
"1000111" -> "1000506"  [label="DDG: sk"];
"1000111" -> "1000519"  [label="DDG: sk"];
"1000111" -> "1000541"  [label="DDG: sk"];
"1000111" -> "1000565"  [label="DDG: sk"];
"1000111" -> "1000570"  [label="DDG: sk"];
"1000111" -> "1000607"  [label="DDG: sk"];
"1000111" -> "1000632"  [label="DDG: sk"];
"1000111" -> "1000640"  [label="DDG: sk"];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000645"  [label="DDG: skb"];
"1000112" -> "1000233"  [label="DDG: skb"];
"1000112" -> "1000240"  [label="DDG: skb"];
"1000112" -> "1000248"  [label="DDG: skb"];
"1000112" -> "1000259"  [label="DDG: skb"];
"1000112" -> "1000295"  [label="DDG: skb"];
"1000112" -> "1000313"  [label="DDG: skb"];
"1000112" -> "1000415"  [label="DDG: skb"];
"1000112" -> "1000422"  [label="DDG: skb"];
"1000112" -> "1000430"  [label="DDG: skb"];
"1000112" -> "1000441"  [label="DDG: skb"];
"1000113" -> "1000110"  [label="AST: "];
"1000113" -> "1000645"  [label="DDG: req"];
"1000113" -> "1000271"  [label="DDG: req"];
"1000113" -> "1000283"  [label="DDG: req"];
"1000113" -> "1000295"  [label="DDG: req"];
"1000113" -> "1000591"  [label="DDG: req"];
"1000114" -> "1000110"  [label="AST: "];
"1000114" -> "1000645"  [label="DDG: dst"];
"1000114" -> "1000278"  [label="DDG: dst"];
"1000114" -> "1000281"  [label="DDG: dst"];
"1000114" -> "1000290"  [label="DDG: dst"];
"1000114" -> "1000308"  [label="DDG: dst"];
"1000114" -> "1000482"  [label="DDG: dst"];
"1000114" -> "1000487"  [label="DDG: dst"];
"1000114" -> "1000493"  [label="DDG: dst"];
"1000114" -> "1000636"  [label="DDG: dst"];
"1000115" -> "1000110"  [label="AST: "];
"1000115" -> "1000645"  [label="DDG: req_unhash"];
"1000115" -> "1000585"  [label="DDG: req_unhash"];
"1000116" -> "1000110"  [label="AST: "];
"1000116" -> "1000645"  [label="DDG: own_req"];
"1000121" -> "1000117"  [label="AST: "];
"1000122" -> "1000121"  [label="AST: "];
"1000134" -> "1000121"  [label="CFG: "];
"1000121" -> "1000645"  [label="DDG: inet6_sk(sk)"];
"1000121" -> "1000645"  [label="DDG: np"];
"1000121" -> "1000342"  [label="DDG: np"];
}
