digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_17@pointer" {
"1000585" [label="(Call,req_to_sk(req_unhash))"];
"1000115" [label="(MethodParameterIn,struct request_sock *req_unhash)"];
"1000583" [label="(Call,inet_ehash_nolisten(newsk, req_to_sk(req_unhash)))"];
"1000580" [label="(Call,*own_req = inet_ehash_nolisten(newsk, req_to_sk(req_unhash)))"];
"1000623" [label="(Call,skb_set_owner_r(newnp->pktoptions, newsk))"];
"1000628" [label="(Return,return newsk;)"];
"1000581" [label="(Call,*own_req)"];
"1000645" [label="(MethodReturn,static struct sock *)"];
"1000619" [label="(ControlStructure,if (newnp->pktoptions))"];
"1000580" [label="(Call,*own_req = inet_ehash_nolisten(newsk, req_to_sk(req_unhash)))"];
"1000628" [label="(Return,return newsk;)"];
"1000585" [label="(Call,req_to_sk(req_unhash))"];
"1000141" [label="(Call,tcp_v4_syn_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t     req_unhash, own_req))"];
"1000599" [label="(Call,newnp->pktoptions = skb_clone(ireq->pktopts,\n\t\t\t\t\t\t      sk_gfp_atomic(sk, GFP_ATOMIC)))"];
"1000627" [label="(Identifier,newsk)"];
"1000584" [label="(Identifier,newsk)"];
"1000623" [label="(Call,skb_set_owner_r(newnp->pktoptions, newsk))"];
"1000583" [label="(Call,inet_ehash_nolisten(newsk, req_to_sk(req_unhash)))"];
"1000570" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000586" [label="(Identifier,req_unhash)"];
"1000117" [label="(Block,)"];
"1000589" [label="(Identifier,own_req)"];
"1000115" [label="(MethodParameterIn,struct request_sock *req_unhash)"];
"1000624" [label="(Call,newnp->pktoptions)"];
"1000629" [label="(Identifier,newsk)"];
"1000585" -> "1000583"  [label="AST: "];
"1000585" -> "1000586"  [label="CFG: "];
"1000586" -> "1000585"  [label="AST: "];
"1000583" -> "1000585"  [label="CFG: "];
"1000585" -> "1000645"  [label="DDG: req_unhash"];
"1000585" -> "1000583"  [label="DDG: req_unhash"];
"1000115" -> "1000585"  [label="DDG: req_unhash"];
"1000115" -> "1000110"  [label="AST: "];
"1000115" -> "1000645"  [label="DDG: req_unhash"];
"1000115" -> "1000141"  [label="DDG: req_unhash"];
"1000583" -> "1000580"  [label="AST: "];
"1000584" -> "1000583"  [label="AST: "];
"1000580" -> "1000583"  [label="CFG: "];
"1000583" -> "1000645"  [label="DDG: newsk"];
"1000583" -> "1000645"  [label="DDG: req_to_sk(req_unhash)"];
"1000583" -> "1000580"  [label="DDG: newsk"];
"1000583" -> "1000580"  [label="DDG: req_to_sk(req_unhash)"];
"1000570" -> "1000583"  [label="DDG: newsk"];
"1000583" -> "1000623"  [label="DDG: newsk"];
"1000583" -> "1000628"  [label="DDG: newsk"];
"1000580" -> "1000117"  [label="AST: "];
"1000581" -> "1000580"  [label="AST: "];
"1000589" -> "1000580"  [label="CFG: "];
"1000580" -> "1000645"  [label="DDG: inet_ehash_nolisten(newsk, req_to_sk(req_unhash))"];
"1000580" -> "1000645"  [label="DDG: *own_req"];
"1000623" -> "1000619"  [label="AST: "];
"1000623" -> "1000627"  [label="CFG: "];
"1000624" -> "1000623"  [label="AST: "];
"1000627" -> "1000623"  [label="AST: "];
"1000629" -> "1000623"  [label="CFG: "];
"1000623" -> "1000645"  [label="DDG: skb_set_owner_r(newnp->pktoptions, newsk)"];
"1000623" -> "1000645"  [label="DDG: newsk"];
"1000623" -> "1000645"  [label="DDG: newnp->pktoptions"];
"1000599" -> "1000623"  [label="DDG: newnp->pktoptions"];
"1000623" -> "1000628"  [label="DDG: newsk"];
"1000628" -> "1000117"  [label="AST: "];
"1000628" -> "1000629"  [label="CFG: "];
"1000629" -> "1000628"  [label="AST: "];
"1000645" -> "1000628"  [label="CFG: "];
"1000628" -> "1000645"  [label="DDG: <RET>"];
"1000629" -> "1000628"  [label="DDG: newsk"];
}
