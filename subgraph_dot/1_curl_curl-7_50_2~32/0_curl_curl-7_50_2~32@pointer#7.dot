digraph "0_curl_curl-7_50_2~32@pointer" {
"1000291" [label="(Call,failf(data, \"NSS: private key not found for certificate: %s\", nickname))"];
"1000117" [label="(Call,*data = connssl->data)"];
"1000279" [label="(Call,NULL == nickname)"];
"1000253" [label="(Call,NULL == *pRetCert)"];
"1000272" [label="(Call,nickname = (*pRetCert)->nickname)"];
"1000282" [label="(Call,nickname = \"[unknown]\")"];
"1000282" [label="(Call,nickname = \"[unknown]\")"];
"1000287" [label="(Identifier,NULL)"];
"1000254" [label="(Identifier,NULL)"];
"1000274" [label="(Call,(*pRetCert)->nickname)"];
"1000280" [label="(Identifier,NULL)"];
"1000175" [label="(Call,failf(data, \"NSS: CKA_VALUE not found in PK11 generic object\"))"];
"1000119" [label="(Call,connssl->data)"];
"1000117" [label="(Call,*data = connssl->data)"];
"1000278" [label="(ControlStructure,if(NULL == nickname))"];
"1000109" [label="(Block,)"];
"1000253" [label="(Call,NULL == *pRetCert)"];
"1000296" [label="(Identifier,SECFailure)"];
"1000294" [label="(Identifier,nickname)"];
"1000293" [label="(Literal,\"NSS: private key not found for certificate: %s\")"];
"1000301" [label="(Call,display_cert_info(data, *pRetCert))"];
"1000218" [label="(Call,failf(data, \"NSS: private key from file not found\"))"];
"1000307" [label="(MethodReturn,static SECStatus)"];
"1000225" [label="(Call,infof(data, \"NSS: client certificate from file\n\"))"];
"1000259" [label="(Call,NULL == nickname)"];
"1000284" [label="(Literal,\"[unknown]\")"];
"1000262" [label="(Call,failf(data, \"NSS: client certificate not found (nickname not \"\n            \"specified)\"))"];
"1000281" [label="(Identifier,nickname)"];
"1000272" [label="(Call,nickname = (*pRetCert)->nickname)"];
"1000242" [label="(Call,SECSuccess != NSS_GetClientAuthData((void *)nickname, sock, caNames,\n                                          pRetCert, pRetKey)\n      || NULL == *pRetCert)"];
"1000290" [label="(Block,)"];
"1000118" [label="(Identifier,data)"];
"1000292" [label="(Identifier,data)"];
"1000291" [label="(Call,failf(data, \"NSS: private key not found for certificate: %s\", nickname))"];
"1000198" [label="(Call,failf(data, \"NSS: client certificate from file not found\"))"];
"1000255" [label="(Call,*pRetCert)"];
"1000286" [label="(Call,NULL == *pRetKey)"];
"1000273" [label="(Identifier,nickname)"];
"1000266" [label="(Call,failf(data, \"NSS: client certificate not found: %s\", nickname))"];
"1000283" [label="(Identifier,nickname)"];
"1000124" [label="(Identifier,nickname)"];
"1000297" [label="(Call,infof(data, \"NSS: using client certificate: %s\n\", nickname))"];
"1000279" [label="(Call,NULL == nickname)"];
"1000157" [label="(Call,failf(data, \"NSS: PK11 slot not found: %s\", pem_slotname))"];
"1000291" -> "1000290"  [label="AST: "];
"1000291" -> "1000294"  [label="CFG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000293" -> "1000291"  [label="AST: "];
"1000294" -> "1000291"  [label="AST: "];
"1000296" -> "1000291"  [label="CFG: "];
"1000291" -> "1000307"  [label="DDG: "];
"1000291" -> "1000307"  [label="DDG: "];
"1000291" -> "1000307"  [label="DDG: "];
"1000117" -> "1000291"  [label="DDG: "];
"1000279" -> "1000291"  [label="DDG: "];
"1000282" -> "1000291"  [label="DDG: "];
"1000117" -> "1000109"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000124" -> "1000117"  [label="CFG: "];
"1000117" -> "1000307"  [label="DDG: "];
"1000117" -> "1000157"  [label="DDG: "];
"1000117" -> "1000175"  [label="DDG: "];
"1000117" -> "1000198"  [label="DDG: "];
"1000117" -> "1000218"  [label="DDG: "];
"1000117" -> "1000225"  [label="DDG: "];
"1000117" -> "1000262"  [label="DDG: "];
"1000117" -> "1000266"  [label="DDG: "];
"1000117" -> "1000297"  [label="DDG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000279" -> "1000281"  [label="CFG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000281" -> "1000279"  [label="AST: "];
"1000283" -> "1000279"  [label="CFG: "];
"1000287" -> "1000279"  [label="CFG: "];
"1000279" -> "1000307"  [label="DDG: "];
"1000253" -> "1000279"  [label="DDG: "];
"1000272" -> "1000279"  [label="DDG: "];
"1000279" -> "1000286"  [label="DDG: "];
"1000279" -> "1000297"  [label="DDG: "];
"1000253" -> "1000242"  [label="AST: "];
"1000253" -> "1000255"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000255" -> "1000253"  [label="AST: "];
"1000242" -> "1000253"  [label="CFG: "];
"1000253" -> "1000307"  [label="DDG: "];
"1000253" -> "1000242"  [label="DDG: "];
"1000253" -> "1000242"  [label="DDG: "];
"1000253" -> "1000259"  [label="DDG: "];
"1000253" -> "1000301"  [label="DDG: "];
"1000272" -> "1000109"  [label="AST: "];
"1000272" -> "1000274"  [label="CFG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000274" -> "1000272"  [label="AST: "];
"1000280" -> "1000272"  [label="CFG: "];
"1000272" -> "1000307"  [label="DDG: "];
"1000282" -> "1000278"  [label="AST: "];
"1000282" -> "1000284"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000284" -> "1000282"  [label="AST: "];
"1000287" -> "1000282"  [label="CFG: "];
"1000282" -> "1000297"  [label="DDG: "];
}
