digraph "0_Chrome_96dbafe288dbe2f0cc45fa3c39daf6d0c37acbab_43@API" {
"1000217" [label="(Call,copy->ns = xsltGetNamespace(ctxt, node, node->ns, copy))"];
"1000221" [label="(Call,xsltGetNamespace(ctxt, node, node->ns, copy))"];
"1000195" [label="(Call,xsltCopyNamespaceList(ctxt, copy, node->nsDef))"];
"1000106" [label="(MethodParameterIn,xsltTransformContextPtr ctxt)"];
"1000168" [label="(Call,copy == NULL)"];
"1000162" [label="(Call,copy = xsltAddChild(insert, copy))"];
"1000164" [label="(Call,xsltAddChild(insert, copy))"];
"1000119" [label="(Call,insert == NULL)"];
"1000108" [label="(MethodParameterIn,xmlNodePtr insert)"];
"1000151" [label="(Call,copy != NULL)"];
"1000142" [label="(Call,copy = xmlDocCopyNode(node, insert->doc, 0))"];
"1000144" [label="(Call,xmlDocCopyNode(node, insert->doc, 0))"];
"1000107" [label="(MethodParameterIn,xmlNodePtr node)"];
"1000187" [label="(Call,node->nsDef != NULL)"];
"1000208" [label="(Call,node->ns != NULL)"];
"1000202" [label="(Call,xsltCopyNamespaceListInternal(copy, node->nsDef))"];
"1000157" [label="(Identifier,copy)"];
"1000154" [label="(Block,)"];
"1000195" [label="(Call,xsltCopyNamespaceList(ctxt, copy, node->nsDef))"];
"1000162" [label="(Call,copy = xsltAddChild(insert, copy))"];
"1000142" [label="(Call,copy = xmlDocCopyNode(node, insert->doc, 0))"];
"1000119" [label="(Call,insert == NULL)"];
"1000153" [label="(Identifier,NULL)"];
"1000110" [label="(Block,)"];
"1000168" [label="(Call,copy == NULL)"];
"1000108" [label="(MethodParameterIn,xmlNodePtr insert)"];
"1000163" [label="(Identifier,copy)"];
"1000227" [label="(Identifier,copy)"];
"1000173" [label="(Identifier,ctxt)"];
"1000186" [label="(ControlStructure,if (node->nsDef != NULL))"];
"1000170" [label="(Identifier,NULL)"];
"1000203" [label="(Identifier,copy)"];
"1000253" [label="(Identifier,insert)"];
"1000270" [label="(Call,xsltTransformError(ctxt, NULL, node,\n\t\t\"xsltShallowCopyElem: copy %s failed\n\", node->name))"];
"1000172" [label="(Call,xsltTransformError(ctxt, NULL, node,\n                \"xsltShallowCopyElem: copy failed\n\"))"];
"1000177" [label="(Return,return (copy);)"];
"1000223" [label="(Identifier,node)"];
"1000150" [label="(ControlStructure,if (copy != NULL))"];
"1000151" [label="(Call,copy != NULL)"];
"1000113" [label="(Call,(node->type == XML_DTD_NODE) || (insert == NULL))"];
"1000216" [label="(Block,)"];
"1000164" [label="(Call,xsltAddChild(insert, copy))"];
"1000169" [label="(Identifier,copy)"];
"1000209" [label="(Call,node->ns)"];
"1000106" [label="(MethodParameterIn,xsltTransformContextPtr ctxt)"];
"1000280" [label="(MethodReturn,RET)"];
"1000222" [label="(Identifier,ctxt)"];
"1000165" [label="(Identifier,insert)"];
"1000198" [label="(Call,node->nsDef)"];
"1000107" [label="(MethodParameterIn,xmlNodePtr node)"];
"1000221" [label="(Call,xsltGetNamespace(ctxt, node, node->ns, copy))"];
"1000202" [label="(Call,xsltCopyNamespaceListInternal(copy, node->nsDef))"];
"1000197" [label="(Identifier,copy)"];
"1000149" [label="(Literal,0)"];
"1000145" [label="(Identifier,node)"];
"1000122" [label="(Return,return(NULL);)"];
"1000193" [label="(ControlStructure,if (isLRE))"];
"1000187" [label="(Call,node->nsDef != NULL)"];
"1000152" [label="(Identifier,copy)"];
"1000271" [label="(Identifier,ctxt)"];
"1000207" [label="(ControlStructure,if (node->ns != NULL))"];
"1000196" [label="(Identifier,ctxt)"];
"1000201" [label="(ControlStructure,else)"];
"1000212" [label="(Identifier,NULL)"];
"1000120" [label="(Identifier,insert)"];
"1000167" [label="(ControlStructure,if (copy == NULL))"];
"1000137" [label="(Call,xsltCopyText(ctxt, insert, node, 0))"];
"1000204" [label="(Call,node->nsDef)"];
"1000217" [label="(Call,copy->ns = xsltGetNamespace(ctxt, node, node->ns, copy))"];
"1000234" [label="(Call,xsltGetSpecialNamespace(ctxt,\n\t\t\tnode, node->ns->href, node->ns->prefix, copy))"];
"1000191" [label="(Identifier,NULL)"];
"1000224" [label="(Call,node->ns)"];
"1000146" [label="(Call,insert->doc)"];
"1000278" [label="(Return,return(copy);)"];
"1000188" [label="(Call,node->nsDef)"];
"1000256" [label="(Call,insert->ns != NULL)"];
"1000279" [label="(Identifier,copy)"];
"1000166" [label="(Identifier,copy)"];
"1000143" [label="(Identifier,copy)"];
"1000208" [label="(Call,node->ns != NULL)"];
"1000218" [label="(Call,copy->ns)"];
"1000121" [label="(Identifier,NULL)"];
"1000182" [label="(Identifier,node)"];
"1000194" [label="(Identifier,isLRE)"];
"1000262" [label="(Call,xsltGetSpecialNamespace(ctxt, node, NULL, NULL, copy))"];
"1000210" [label="(Identifier,node)"];
"1000215" [label="(Identifier,isLRE)"];
"1000144" [label="(Call,xmlDocCopyNode(node, insert->doc, 0))"];
"1000217" -> "1000216"  [label="AST: "];
"1000217" -> "1000221"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000221" -> "1000217"  [label="AST: "];
"1000279" -> "1000217"  [label="CFG: "];
"1000217" -> "1000280"  [label="DDG: xsltGetNamespace(ctxt, node, node->ns, copy)"];
"1000217" -> "1000280"  [label="DDG: copy->ns"];
"1000221" -> "1000217"  [label="DDG: ctxt"];
"1000221" -> "1000217"  [label="DDG: node"];
"1000221" -> "1000217"  [label="DDG: node->ns"];
"1000221" -> "1000217"  [label="DDG: copy"];
"1000221" -> "1000227"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000224" -> "1000221"  [label="AST: "];
"1000227" -> "1000221"  [label="AST: "];
"1000221" -> "1000280"  [label="DDG: copy"];
"1000221" -> "1000280"  [label="DDG: node"];
"1000221" -> "1000280"  [label="DDG: ctxt"];
"1000221" -> "1000280"  [label="DDG: node->ns"];
"1000195" -> "1000221"  [label="DDG: ctxt"];
"1000195" -> "1000221"  [label="DDG: copy"];
"1000106" -> "1000221"  [label="DDG: ctxt"];
"1000144" -> "1000221"  [label="DDG: node"];
"1000107" -> "1000221"  [label="DDG: node"];
"1000208" -> "1000221"  [label="DDG: node->ns"];
"1000168" -> "1000221"  [label="DDG: copy"];
"1000202" -> "1000221"  [label="DDG: copy"];
"1000221" -> "1000278"  [label="DDG: copy"];
"1000195" -> "1000193"  [label="AST: "];
"1000195" -> "1000198"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000197" -> "1000195"  [label="AST: "];
"1000198" -> "1000195"  [label="AST: "];
"1000210" -> "1000195"  [label="CFG: "];
"1000195" -> "1000280"  [label="DDG: xsltCopyNamespaceList(ctxt, copy, node->nsDef)"];
"1000195" -> "1000280"  [label="DDG: copy"];
"1000195" -> "1000280"  [label="DDG: ctxt"];
"1000195" -> "1000280"  [label="DDG: node->nsDef"];
"1000106" -> "1000195"  [label="DDG: ctxt"];
"1000168" -> "1000195"  [label="DDG: copy"];
"1000187" -> "1000195"  [label="DDG: node->nsDef"];
"1000195" -> "1000234"  [label="DDG: ctxt"];
"1000195" -> "1000234"  [label="DDG: copy"];
"1000195" -> "1000262"  [label="DDG: ctxt"];
"1000195" -> "1000262"  [label="DDG: copy"];
"1000195" -> "1000278"  [label="DDG: copy"];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000280"  [label="DDG: ctxt"];
"1000106" -> "1000137"  [label="DDG: ctxt"];
"1000106" -> "1000172"  [label="DDG: ctxt"];
"1000106" -> "1000234"  [label="DDG: ctxt"];
"1000106" -> "1000262"  [label="DDG: ctxt"];
"1000106" -> "1000270"  [label="DDG: ctxt"];
"1000168" -> "1000167"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000173" -> "1000168"  [label="CFG: "];
"1000182" -> "1000168"  [label="CFG: "];
"1000168" -> "1000280"  [label="DDG: copy == NULL"];
"1000168" -> "1000280"  [label="DDG: copy"];
"1000168" -> "1000280"  [label="DDG: NULL"];
"1000162" -> "1000168"  [label="DDG: copy"];
"1000151" -> "1000168"  [label="DDG: NULL"];
"1000168" -> "1000172"  [label="DDG: NULL"];
"1000168" -> "1000177"  [label="DDG: copy"];
"1000168" -> "1000187"  [label="DDG: NULL"];
"1000168" -> "1000202"  [label="DDG: copy"];
"1000168" -> "1000234"  [label="DDG: copy"];
"1000168" -> "1000262"  [label="DDG: copy"];
"1000168" -> "1000278"  [label="DDG: copy"];
"1000162" -> "1000154"  [label="AST: "];
"1000162" -> "1000164"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000164" -> "1000162"  [label="AST: "];
"1000169" -> "1000162"  [label="CFG: "];
"1000162" -> "1000280"  [label="DDG: xsltAddChild(insert, copy)"];
"1000164" -> "1000162"  [label="DDG: insert"];
"1000164" -> "1000162"  [label="DDG: copy"];
"1000164" -> "1000166"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000166" -> "1000164"  [label="AST: "];
"1000164" -> "1000280"  [label="DDG: insert"];
"1000119" -> "1000164"  [label="DDG: insert"];
"1000108" -> "1000164"  [label="DDG: insert"];
"1000151" -> "1000164"  [label="DDG: copy"];
"1000119" -> "1000113"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000113" -> "1000119"  [label="CFG: "];
"1000119" -> "1000280"  [label="DDG: NULL"];
"1000119" -> "1000280"  [label="DDG: insert"];
"1000119" -> "1000113"  [label="DDG: insert"];
"1000119" -> "1000113"  [label="DDG: NULL"];
"1000108" -> "1000119"  [label="DDG: insert"];
"1000119" -> "1000122"  [label="DDG: NULL"];
"1000119" -> "1000137"  [label="DDG: insert"];
"1000119" -> "1000151"  [label="DDG: NULL"];
"1000108" -> "1000105"  [label="AST: "];
"1000108" -> "1000280"  [label="DDG: insert"];
"1000108" -> "1000137"  [label="DDG: insert"];
"1000151" -> "1000150"  [label="AST: "];
"1000151" -> "1000153"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000153" -> "1000151"  [label="AST: "];
"1000157" -> "1000151"  [label="CFG: "];
"1000271" -> "1000151"  [label="CFG: "];
"1000151" -> "1000280"  [label="DDG: copy != NULL"];
"1000151" -> "1000280"  [label="DDG: copy"];
"1000142" -> "1000151"  [label="DDG: copy"];
"1000151" -> "1000270"  [label="DDG: NULL"];
"1000151" -> "1000278"  [label="DDG: copy"];
"1000142" -> "1000110"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000152" -> "1000142"  [label="CFG: "];
"1000142" -> "1000280"  [label="DDG: xmlDocCopyNode(node, insert->doc, 0)"];
"1000144" -> "1000142"  [label="DDG: node"];
"1000144" -> "1000142"  [label="DDG: insert->doc"];
"1000144" -> "1000142"  [label="DDG: 0"];
"1000144" -> "1000149"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000146" -> "1000144"  [label="AST: "];
"1000149" -> "1000144"  [label="AST: "];
"1000144" -> "1000280"  [label="DDG: node"];
"1000144" -> "1000280"  [label="DDG: insert->doc"];
"1000107" -> "1000144"  [label="DDG: node"];
"1000144" -> "1000172"  [label="DDG: node"];
"1000144" -> "1000234"  [label="DDG: node"];
"1000144" -> "1000262"  [label="DDG: node"];
"1000144" -> "1000270"  [label="DDG: node"];
"1000107" -> "1000105"  [label="AST: "];
"1000107" -> "1000280"  [label="DDG: node"];
"1000107" -> "1000137"  [label="DDG: node"];
"1000107" -> "1000172"  [label="DDG: node"];
"1000107" -> "1000234"  [label="DDG: node"];
"1000107" -> "1000262"  [label="DDG: node"];
"1000107" -> "1000270"  [label="DDG: node"];
"1000187" -> "1000186"  [label="AST: "];
"1000187" -> "1000191"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000191" -> "1000187"  [label="AST: "];
"1000194" -> "1000187"  [label="CFG: "];
"1000210" -> "1000187"  [label="CFG: "];
"1000187" -> "1000280"  [label="DDG: node->nsDef"];
"1000187" -> "1000280"  [label="DDG: node->nsDef != NULL"];
"1000187" -> "1000202"  [label="DDG: node->nsDef"];
"1000187" -> "1000208"  [label="DDG: NULL"];
"1000208" -> "1000207"  [label="AST: "];
"1000208" -> "1000212"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000212" -> "1000208"  [label="AST: "];
"1000215" -> "1000208"  [label="CFG: "];
"1000253" -> "1000208"  [label="CFG: "];
"1000208" -> "1000280"  [label="DDG: node->ns"];
"1000208" -> "1000280"  [label="DDG: node->ns != NULL"];
"1000208" -> "1000280"  [label="DDG: NULL"];
"1000208" -> "1000256"  [label="DDG: NULL"];
"1000208" -> "1000262"  [label="DDG: NULL"];
"1000202" -> "1000201"  [label="AST: "];
"1000202" -> "1000204"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000210" -> "1000202"  [label="CFG: "];
"1000202" -> "1000280"  [label="DDG: copy"];
"1000202" -> "1000280"  [label="DDG: node->nsDef"];
"1000202" -> "1000280"  [label="DDG: xsltCopyNamespaceListInternal(copy, node->nsDef)"];
"1000202" -> "1000234"  [label="DDG: copy"];
"1000202" -> "1000262"  [label="DDG: copy"];
"1000202" -> "1000278"  [label="DDG: copy"];
}
