digraph "0_linux_bceaa90240b6019ed73b49965eac7d167610be69@pointer" {
"1000140" [label="(Call,copied = skb->len)"];
"1000146" [label="(Call,len < copied)"];
"1000155" [label="(Call,copied = len)"];
"1000160" [label="(Call,skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000158" [label="(Call,err = skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000212" [label="(Return,return err;)"];
"1000170" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000187" [label="(Call,mac_cb(skb))"];
"1000206" [label="(Call,skb_free_datagram(sk, skb))"];
"1000214" [label="(Return,return copied;)"];
"1000157" [label="(Identifier,len)"];
"1000175" [label="(Identifier,saddr)"];
"1000141" [label="(Identifier,copied)"];
"1000162" [label="(Literal,0)"];
"1000142" [label="(Call,skb->len)"];
"1000105" [label="(MethodParameterIn,size_t len)"];
"1000140" [label="(Call,copied = skb->len)"];
"1000200" [label="(Call,copied = skb->len)"];
"1000156" [label="(Identifier,copied)"];
"1000168" [label="(Identifier,err)"];
"1000115" [label="(Call,err = -EOPNOTSUPP)"];
"1000103" [label="(MethodParameterIn,struct sock *sk)"];
"1000163" [label="(Call,msg->msg_iov)"];
"1000155" [label="(Call,copied = len)"];
"1000173" [label="(Identifier,skb)"];
"1000186" [label="(Call,mac_cb(skb)->sa)"];
"1000170" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000161" [label="(Identifier,skb)"];
"1000172" [label="(Identifier,sk)"];
"1000206" [label="(Call,skb_free_datagram(sk, skb))"];
"1000216" [label="(MethodReturn,static int)"];
"1000147" [label="(Identifier,len)"];
"1000160" [label="(Call,skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000111" [label="(Call,copied = 0)"];
"1000209" [label="(JumpTarget,out:)"];
"1000145" [label="(ControlStructure,if (len < copied))"];
"1000149" [label="(Block,)"];
"1000104" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000187" [label="(Call,mac_cb(skb))"];
"1000152" [label="(Identifier,msg)"];
"1000189" [label="(FieldIdentifier,sa)"];
"1000207" [label="(Identifier,sk)"];
"1000158" [label="(Call,err = skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000214" [label="(Return,return copied;)"];
"1000212" [label="(Return,return err;)"];
"1000137" [label="(Call,!skb)"];
"1000148" [label="(Identifier,copied)"];
"1000146" [label="(Call,len < copied)"];
"1000171" [label="(Identifier,msg)"];
"1000188" [label="(Identifier,skb)"];
"1000130" [label="(Call,skb_recv_datagram(sk, flags, noblock, &err))"];
"1000159" [label="(Identifier,err)"];
"1000166" [label="(Identifier,copied)"];
"1000208" [label="(Identifier,skb)"];
"1000213" [label="(Identifier,err)"];
"1000109" [label="(Block,)"];
"1000210" [label="(ControlStructure,if (err))"];
"1000215" [label="(Identifier,copied)"];
"1000140" -> "1000109"  [label="AST: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000142" -> "1000140"  [label="AST: "];
"1000147" -> "1000140"  [label="CFG: "];
"1000140" -> "1000216"  [label="DDG: skb->len"];
"1000140" -> "1000146"  [label="DDG: copied"];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000152" -> "1000146"  [label="CFG: "];
"1000159" -> "1000146"  [label="CFG: "];
"1000146" -> "1000216"  [label="DDG: len < copied"];
"1000146" -> "1000216"  [label="DDG: len"];
"1000105" -> "1000146"  [label="DDG: len"];
"1000146" -> "1000155"  [label="DDG: len"];
"1000146" -> "1000160"  [label="DDG: copied"];
"1000155" -> "1000149"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000157" -> "1000155"  [label="AST: "];
"1000159" -> "1000155"  [label="CFG: "];
"1000155" -> "1000216"  [label="DDG: len"];
"1000105" -> "1000155"  [label="DDG: len"];
"1000155" -> "1000160"  [label="DDG: copied"];
"1000160" -> "1000158"  [label="AST: "];
"1000160" -> "1000166"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000162" -> "1000160"  [label="AST: "];
"1000163" -> "1000160"  [label="AST: "];
"1000166" -> "1000160"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000160" -> "1000216"  [label="DDG: copied"];
"1000160" -> "1000216"  [label="DDG: msg->msg_iov"];
"1000160" -> "1000158"  [label="DDG: skb"];
"1000160" -> "1000158"  [label="DDG: 0"];
"1000160" -> "1000158"  [label="DDG: msg->msg_iov"];
"1000160" -> "1000158"  [label="DDG: copied"];
"1000137" -> "1000160"  [label="DDG: skb"];
"1000160" -> "1000170"  [label="DDG: skb"];
"1000160" -> "1000206"  [label="DDG: skb"];
"1000160" -> "1000214"  [label="DDG: copied"];
"1000158" -> "1000109"  [label="AST: "];
"1000159" -> "1000158"  [label="AST: "];
"1000168" -> "1000158"  [label="CFG: "];
"1000158" -> "1000216"  [label="DDG: skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied)"];
"1000158" -> "1000216"  [label="DDG: err"];
"1000158" -> "1000212"  [label="DDG: err"];
"1000212" -> "1000210"  [label="AST: "];
"1000212" -> "1000213"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000216" -> "1000212"  [label="CFG: "];
"1000212" -> "1000216"  [label="DDG: <RET>"];
"1000213" -> "1000212"  [label="DDG: err"];
"1000115" -> "1000212"  [label="DDG: err"];
"1000170" -> "1000109"  [label="AST: "];
"1000170" -> "1000173"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000173" -> "1000170"  [label="AST: "];
"1000175" -> "1000170"  [label="CFG: "];
"1000170" -> "1000216"  [label="DDG: msg"];
"1000170" -> "1000216"  [label="DDG: sock_recv_ts_and_drops(msg, sk, skb)"];
"1000104" -> "1000170"  [label="DDG: msg"];
"1000130" -> "1000170"  [label="DDG: sk"];
"1000103" -> "1000170"  [label="DDG: sk"];
"1000170" -> "1000187"  [label="DDG: skb"];
"1000170" -> "1000206"  [label="DDG: sk"];
"1000170" -> "1000206"  [label="DDG: skb"];
"1000187" -> "1000186"  [label="AST: "];
"1000187" -> "1000188"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000189" -> "1000187"  [label="CFG: "];
"1000187" -> "1000206"  [label="DDG: skb"];
"1000206" -> "1000109"  [label="AST: "];
"1000206" -> "1000208"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000206"  [label="AST: "];
"1000209" -> "1000206"  [label="CFG: "];
"1000206" -> "1000216"  [label="DDG: skb"];
"1000206" -> "1000216"  [label="DDG: sk"];
"1000206" -> "1000216"  [label="DDG: skb_free_datagram(sk, skb)"];
"1000130" -> "1000206"  [label="DDG: sk"];
"1000103" -> "1000206"  [label="DDG: sk"];
"1000214" -> "1000109"  [label="AST: "];
"1000214" -> "1000215"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000216" -> "1000214"  [label="CFG: "];
"1000214" -> "1000216"  [label="DDG: <RET>"];
"1000215" -> "1000214"  [label="DDG: copied"];
"1000200" -> "1000214"  [label="DDG: copied"];
"1000111" -> "1000214"  [label="DDG: copied"];
}
