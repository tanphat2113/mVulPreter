digraph "0_FreeRDP_7d58aac24fe20ffaad7bd9b40c9ddf457c1b06e7@pointer" {
"1000221" [label="(Call,security_salted_mac_signature(rdp, s->p, length, FALSE, cmac))"];
"1000209" [label="(Call,security_decrypt(s->p, length, rdp))"];
"1000203" [label="(Call,length -= sizeof(wmac))"];
"1000110" [label="(MethodParameterIn,int length)"];
"1000108" [label="(MethodParameterIn,rdpRdp* rdp)"];
"1000239" [label="(Call,memcmp(wmac, cmac, sizeof(wmac)))"];
"1000238" [label="(Call,memcmp(wmac, cmac, sizeof(wmac)) != 0)"];
"1000205" [label="(Call,sizeof(wmac))"];
"1000228" [label="(Identifier,cmac)"];
"1000227" [label="(Identifier,FALSE)"];
"1000217" [label="(ControlStructure,if (securityFlags & SEC_SECURE_CHECKSUM))"];
"1000110" [label="(MethodParameterIn,int length)"];
"1000112" [label="(Block,)"];
"1000208" [label="(Call,!security_decrypt(s->p, length, rdp))"];
"1000249" [label="(Identifier,TRUE)"];
"1000203" [label="(Call,length -= sizeof(wmac))"];
"1000211" [label="(Identifier,s)"];
"1000226" [label="(Identifier,length)"];
"1000174" [label="(Call,length - pad)"];
"1000108" [label="(MethodParameterIn,rdpRdp* rdp)"];
"1000170" [label="(Call,security_fips_check_signature(s->p, length - pad, sig, rdp))"];
"1000152" [label="(Call,length -= 12)"];
"1000237" [label="(ControlStructure,if (memcmp(wmac, cmac, sizeof(wmac)) != 0))"];
"1000241" [label="(Identifier,cmac)"];
"1000239" [label="(Call,memcmp(wmac, cmac, sizeof(wmac)))"];
"1000209" [label="(Call,security_decrypt(s->p, length, rdp))"];
"1000213" [label="(Identifier,length)"];
"1000240" [label="(Identifier,wmac)"];
"1000244" [label="(Literal,0)"];
"1000204" [label="(Identifier,length)"];
"1000242" [label="(Call,sizeof(wmac))"];
"1000250" [label="(MethodReturn,BOOL)"];
"1000238" [label="(Call,memcmp(wmac, cmac, sizeof(wmac)) != 0)"];
"1000222" [label="(Identifier,rdp)"];
"1000221" [label="(Call,security_salted_mac_signature(rdp, s->p, length, FALSE, cmac))"];
"1000230" [label="(Call,security_mac_signature(rdp, s->p, length, cmac))"];
"1000247" [label="(Literal,\"WARNING: invalid packet signature\n\")"];
"1000223" [label="(Call,s->p)"];
"1000210" [label="(Call,s->p)"];
"1000214" [label="(Identifier,rdp)"];
"1000157" [label="(Call,security_fips_decrypt(s->p, length, rdp))"];
"1000221" -> "1000217"  [label="AST: "];
"1000221" -> "1000228"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000226" -> "1000221"  [label="AST: "];
"1000227" -> "1000221"  [label="AST: "];
"1000228" -> "1000221"  [label="AST: "];
"1000240" -> "1000221"  [label="CFG: "];
"1000221" -> "1000250"  [label="DDG: security_salted_mac_signature(rdp, s->p, length, FALSE, cmac)"];
"1000221" -> "1000250"  [label="DDG: FALSE"];
"1000221" -> "1000250"  [label="DDG: s->p"];
"1000221" -> "1000250"  [label="DDG: length"];
"1000221" -> "1000250"  [label="DDG: rdp"];
"1000209" -> "1000221"  [label="DDG: rdp"];
"1000209" -> "1000221"  [label="DDG: s->p"];
"1000209" -> "1000221"  [label="DDG: length"];
"1000108" -> "1000221"  [label="DDG: rdp"];
"1000110" -> "1000221"  [label="DDG: length"];
"1000221" -> "1000239"  [label="DDG: cmac"];
"1000209" -> "1000208"  [label="AST: "];
"1000209" -> "1000214"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000213" -> "1000209"  [label="AST: "];
"1000214" -> "1000209"  [label="AST: "];
"1000208" -> "1000209"  [label="CFG: "];
"1000209" -> "1000250"  [label="DDG: s->p"];
"1000209" -> "1000250"  [label="DDG: rdp"];
"1000209" -> "1000250"  [label="DDG: length"];
"1000209" -> "1000208"  [label="DDG: s->p"];
"1000209" -> "1000208"  [label="DDG: length"];
"1000209" -> "1000208"  [label="DDG: rdp"];
"1000203" -> "1000209"  [label="DDG: length"];
"1000110" -> "1000209"  [label="DDG: length"];
"1000108" -> "1000209"  [label="DDG: rdp"];
"1000209" -> "1000230"  [label="DDG: rdp"];
"1000209" -> "1000230"  [label="DDG: s->p"];
"1000209" -> "1000230"  [label="DDG: length"];
"1000203" -> "1000112"  [label="AST: "];
"1000203" -> "1000205"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000203"  [label="AST: "];
"1000211" -> "1000203"  [label="CFG: "];
"1000110" -> "1000203"  [label="DDG: length"];
"1000110" -> "1000107"  [label="AST: "];
"1000110" -> "1000250"  [label="DDG: length"];
"1000110" -> "1000152"  [label="DDG: length"];
"1000110" -> "1000157"  [label="DDG: length"];
"1000110" -> "1000174"  [label="DDG: length"];
"1000110" -> "1000230"  [label="DDG: length"];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000250"  [label="DDG: rdp"];
"1000108" -> "1000157"  [label="DDG: rdp"];
"1000108" -> "1000170"  [label="DDG: rdp"];
"1000108" -> "1000230"  [label="DDG: rdp"];
"1000239" -> "1000238"  [label="AST: "];
"1000239" -> "1000242"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="AST: "];
"1000242" -> "1000239"  [label="AST: "];
"1000244" -> "1000239"  [label="CFG: "];
"1000239" -> "1000250"  [label="DDG: wmac"];
"1000239" -> "1000250"  [label="DDG: cmac"];
"1000239" -> "1000238"  [label="DDG: wmac"];
"1000239" -> "1000238"  [label="DDG: cmac"];
"1000230" -> "1000239"  [label="DDG: cmac"];
"1000238" -> "1000237"  [label="AST: "];
"1000238" -> "1000244"  [label="CFG: "];
"1000244" -> "1000238"  [label="AST: "];
"1000247" -> "1000238"  [label="CFG: "];
"1000249" -> "1000238"  [label="CFG: "];
"1000238" -> "1000250"  [label="DDG: memcmp(wmac, cmac, sizeof(wmac))"];
"1000238" -> "1000250"  [label="DDG: memcmp(wmac, cmac, sizeof(wmac)) != 0"];
}
