digraph "0_linux_23b133bdc452aa441fcb9b82cbf6dd05cfd342d0@integer" {
"1000479" [label="(Call,ret = udf_alloc_i_data(inode, bs - sizeof(struct fileEntry)))"];
"1000481" [label="(Call,udf_alloc_i_data(inode, bs - sizeof(struct fileEntry)))"];
"1000122" [label="(Call,UDF_I(inode))"];
"1000109" [label="(MethodParameterIn,struct inode *inode)"];
"1000483" [label="(Call,bs - sizeof(struct fileEntry))"];
"1000144" [label="(Call,bs = inode->i_sb->s_blocksize)"];
"1001229" [label="(Return,return ret;)"];
"1000481" [label="(Call,udf_alloc_i_data(inode, bs - sizeof(struct fileEntry)))"];
"1000482" [label="(Identifier,inode)"];
"1000435" [label="(Call,bs -\n\t\t\t\t\tsizeof(struct extendedFileEntry))"];
"1000721" [label="(Call,ret = -ESTALE)"];
"1000122" [label="(Call,UDF_I(inode))"];
"1000577" [label="(Call,i_uid_write(inode, le32_to_cpu(fe->uid)))"];
"1001230" [label="(Identifier,ret)"];
"1000483" [label="(Call,bs - sizeof(struct fileEntry))"];
"1001115" [label="(Call,init_special_inode(inode, inode->i_mode | S_IFIFO, 0))"];
"1000111" [label="(Block,)"];
"1000109" [label="(MethodParameterIn,struct inode *inode)"];
"1001125" [label="(Call,init_special_inode(inode, inode->i_mode | S_IFSOCK, 0))"];
"1000729" [label="(Call,set_nlink(inode, link_count))"];
"1000485" [label="(Call,sizeof(struct fileEntry))"];
"1000502" [label="(Call,bs - sizeof(struct fileEntry))"];
"1001223" [label="(Call,ret = 0)"];
"1000120" [label="(Call,*iinfo = UDF_I(inode))"];
"1000480" [label="(Identifier,ret)"];
"1000468" [label="(Block,)"];
"1000479" [label="(Call,ret = udf_alloc_i_data(inode, bs - sizeof(struct fileEntry)))"];
"1001231" [label="(MethodReturn,static int)"];
"1001052" [label="(Call,inc_nlink(inode))"];
"1000488" [label="(Identifier,ret)"];
"1000146" [label="(Call,inode->i_sb->s_blocksize)"];
"1000611" [label="(Call,i_gid_write(inode, le32_to_cpu(fe->gid)))"];
"1001200" [label="(Call,udf_get_extendedattr(inode, 12, 1))"];
"1000153" [label="(Identifier,ret)"];
"1000539" [label="(Call,ret = udf_alloc_i_data(inode, bs -\n\t\t\t\t\tsizeof(struct unallocSpaceEntry)))"];
"1001229" [label="(Return,return ret;)"];
"1000541" [label="(Call,udf_alloc_i_data(inode, bs -\n\t\t\t\t\tsizeof(struct unallocSpaceEntry)))"];
"1000433" [label="(Call,udf_alloc_i_data(inode, bs -\n\t\t\t\t\tsizeof(struct extendedFileEntry)))"];
"1001207" [label="(Call,init_special_inode(inode, inode->i_mode,\n\t\t\t\tMKDEV(le32_to_cpu(dsea->majorDeviceIdent),\n\t\t\t\t      le32_to_cpu(dsea->minorDeviceIdent))))"];
"1000152" [label="(Call,ret = -EIO)"];
"1000145" [label="(Identifier,bs)"];
"1000994" [label="(Call,udf_file_entry_alloc_offset(inode))"];
"1000431" [label="(Call,ret = udf_alloc_i_data(inode, bs -\n\t\t\t\t\tsizeof(struct extendedFileEntry)))"];
"1000484" [label="(Identifier,bs)"];
"1000543" [label="(Call,bs -\n\t\t\t\t\tsizeof(struct unallocSpaceEntry))"];
"1000980" [label="(Call,iinfo->i_lenEAttr > bs)"];
"1000123" [label="(Identifier,inode)"];
"1000568" [label="(Call,ret = -EIO)"];
"1001024" [label="(Call,udf_file_entry_alloc_offset(inode))"];
"1000144" [label="(Call,bs = inode->i_sb->s_blocksize)"];
"1000479" -> "1000468"  [label="AST: "];
"1000479" -> "1000481"  [label="CFG: "];
"1000480" -> "1000479"  [label="AST: "];
"1000481" -> "1000479"  [label="AST: "];
"1000488" -> "1000479"  [label="CFG: "];
"1000479" -> "1001231"  [label="DDG: ret"];
"1000479" -> "1001231"  [label="DDG: udf_alloc_i_data(inode, bs - sizeof(struct fileEntry))"];
"1000481" -> "1000479"  [label="DDG: inode"];
"1000481" -> "1000479"  [label="DDG: bs - sizeof(struct fileEntry)"];
"1000479" -> "1001229"  [label="DDG: ret"];
"1000481" -> "1000483"  [label="CFG: "];
"1000482" -> "1000481"  [label="AST: "];
"1000483" -> "1000481"  [label="AST: "];
"1000481" -> "1001231"  [label="DDG: bs - sizeof(struct fileEntry)"];
"1000481" -> "1001231"  [label="DDG: inode"];
"1000122" -> "1000481"  [label="DDG: inode"];
"1000109" -> "1000481"  [label="DDG: inode"];
"1000483" -> "1000481"  [label="DDG: bs"];
"1000481" -> "1000577"  [label="DDG: inode"];
"1000122" -> "1000120"  [label="AST: "];
"1000122" -> "1000123"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000122" -> "1001231"  [label="DDG: inode"];
"1000122" -> "1000120"  [label="DDG: inode"];
"1000109" -> "1000122"  [label="DDG: inode"];
"1000122" -> "1000433"  [label="DDG: inode"];
"1000122" -> "1000541"  [label="DDG: inode"];
"1000122" -> "1000577"  [label="DDG: inode"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1001231"  [label="DDG: inode"];
"1000109" -> "1000433"  [label="DDG: inode"];
"1000109" -> "1000541"  [label="DDG: inode"];
"1000109" -> "1000577"  [label="DDG: inode"];
"1000109" -> "1000611"  [label="DDG: inode"];
"1000109" -> "1000729"  [label="DDG: inode"];
"1000109" -> "1000994"  [label="DDG: inode"];
"1000109" -> "1001024"  [label="DDG: inode"];
"1000109" -> "1001052"  [label="DDG: inode"];
"1000109" -> "1001115"  [label="DDG: inode"];
"1000109" -> "1001125"  [label="DDG: inode"];
"1000109" -> "1001200"  [label="DDG: inode"];
"1000109" -> "1001207"  [label="DDG: inode"];
"1000483" -> "1000485"  [label="CFG: "];
"1000484" -> "1000483"  [label="AST: "];
"1000485" -> "1000483"  [label="AST: "];
"1000483" -> "1001231"  [label="DDG: bs"];
"1000144" -> "1000483"  [label="DDG: bs"];
"1000483" -> "1000502"  [label="DDG: bs"];
"1000144" -> "1000111"  [label="AST: "];
"1000144" -> "1000146"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000146" -> "1000144"  [label="AST: "];
"1000153" -> "1000144"  [label="CFG: "];
"1000144" -> "1001231"  [label="DDG: bs"];
"1000144" -> "1001231"  [label="DDG: inode->i_sb->s_blocksize"];
"1000144" -> "1000435"  [label="DDG: bs"];
"1000144" -> "1000543"  [label="DDG: bs"];
"1000144" -> "1000980"  [label="DDG: bs"];
"1001229" -> "1000111"  [label="AST: "];
"1001229" -> "1001230"  [label="CFG: "];
"1001230" -> "1001229"  [label="AST: "];
"1001231" -> "1001229"  [label="CFG: "];
"1001229" -> "1001231"  [label="DDG: <RET>"];
"1001230" -> "1001229"  [label="DDG: ret"];
"1000539" -> "1001229"  [label="DDG: ret"];
"1000568" -> "1001229"  [label="DDG: ret"];
"1000721" -> "1001229"  [label="DDG: ret"];
"1001223" -> "1001229"  [label="DDG: ret"];
"1000431" -> "1001229"  [label="DDG: ret"];
"1000152" -> "1001229"  [label="DDG: ret"];
}
