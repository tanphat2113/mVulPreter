digraph "0_linux_2811ebac2521ceac84f2bdae402455baa6a7fb47_0@pointer" {
"1000227" [label="(Call,skb_append_datato_frags(sk, skb, getfrag, from,\n\t\t\t\t       (length - transhdrlen)))"];
"1000134" [label="(Call,sock_alloc_send_skb(sk,\n \t\t\thh_len + fragheaderlen + transhdrlen + 20,\n \t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000107" [label="(MethodParameterIn,struct sock *sk)"];
"1000111" [label="(MethodParameterIn,int hh_len)"];
"1000112" [label="(MethodParameterIn,int fragheaderlen)"];
"1000113" [label="(MethodParameterIn,int transhdrlen)"];
"1000143" [label="(Call,flags & MSG_DONTWAIT)"];
"1000115" [label="(MethodParameterIn,unsigned int flags)"];
"1000220" [label="(Call,__skb_queue_tail(&sk->sk_write_queue, skb))"];
"1000124" [label="(Call,skb_peek_tail(&sk->sk_write_queue))"];
"1000214" [label="(Call,skb_shinfo(skb))"];
"1000204" [label="(Call,skb_shinfo(skb))"];
"1000191" [label="(Call,skb_shinfo(skb))"];
"1000162" [label="(Call,skb_reset_network_header(skb))"];
"1000157" [label="(Call,skb_put(skb,fragheaderlen + transhdrlen))"];
"1000154" [label="(Call,skb_reserve(skb, hh_len))"];
"1000149" [label="(Call,skb == NULL)"];
"1000132" [label="(Call,skb = sock_alloc_send_skb(sk,\n \t\t\thh_len + fragheaderlen + transhdrlen + 20,\n \t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000121" [label="(Call,(skb = skb_peek_tail(&sk->sk_write_queue)) == NULL)"];
"1000122" [label="(Call,skb = skb_peek_tail(&sk->sk_write_queue))"];
"1000108" [label="(MethodParameterIn,int getfrag(void *from, char *to, int offset, int len,\n\t\t\tint odd, struct sk_buff *skb))"];
"1000109" [label="(MethodParameterIn,void *from)"];
"1000232" [label="(Call,length - transhdrlen)"];
"1000110" [label="(MethodParameterIn,int length)"];
"1000226" [label="(Return,return skb_append_datato_frags(sk, skb, getfrag, from,\n\t\t\t\t       (length - transhdrlen));)"];
"1000227" [label="(Call,skb_append_datato_frags(sk, skb, getfrag, from,\n\t\t\t\t       (length - transhdrlen)))"];
"1000204" [label="(Call,skb_shinfo(skb))"];
"1000143" [label="(Call,flags & MSG_DONTWAIT)"];
"1000190" [label="(Call,skb_shinfo(skb)->gso_size)"];
"1000133" [label="(Identifier,skb)"];
"1000124" [label="(Call,skb_peek_tail(&sk->sk_write_queue))"];
"1000192" [label="(Identifier,skb)"];
"1000226" [label="(Return,return skb_append_datato_frags(sk, skb, getfrag, from,\n\t\t\t\t       (length - transhdrlen));)"];
"1000156" [label="(Identifier,hh_len)"];
"1000220" [label="(Call,__skb_queue_tail(&sk->sk_write_queue, skb))"];
"1000168" [label="(Call,skb->network_header + fragheaderlen)"];
"1000150" [label="(Identifier,skb)"];
"1000134" [label="(Call,sock_alloc_send_skb(sk,\n \t\t\thh_len + fragheaderlen + transhdrlen + 20,\n \t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000123" [label="(Identifier,skb)"];
"1000203" [label="(Call,skb_shinfo(skb)->gso_type)"];
"1000125" [label="(Call,&sk->sk_write_queue)"];
"1000166" [label="(Identifier,skb)"];
"1000115" [label="(MethodParameterIn,unsigned int flags)"];
"1000155" [label="(Identifier,skb)"];
"1000164" [label="(Call,skb->transport_header = skb->network_header + fragheaderlen)"];
"1000230" [label="(Identifier,getfrag)"];
"1000159" [label="(Call,fragheaderlen + transhdrlen)"];
"1000191" [label="(Call,skb_shinfo(skb))"];
"1000140" [label="(Call,transhdrlen + 20)"];
"1000120" [label="(ControlStructure,if ((skb = skb_peek_tail(&sk->sk_write_queue)) == NULL))"];
"1000110" [label="(MethodParameterIn,int length)"];
"1000162" [label="(Call,skb_reset_network_header(skb))"];
"1000145" [label="(Identifier,MSG_DONTWAIT)"];
"1000129" [label="(Identifier,NULL)"];
"1000234" [label="(Identifier,transhdrlen)"];
"1000138" [label="(Call,fragheaderlen + transhdrlen + 20)"];
"1000157" [label="(Call,skb_put(skb,fragheaderlen + transhdrlen))"];
"1000108" [label="(MethodParameterIn,int getfrag(void *from, char *to, int offset, int len,\n\t\t\tint odd, struct sk_buff *skb))"];
"1000197" [label="(Call,fragheaderlen -\n\t\t\t\t\t     sizeof(struct frag_hdr))"];
"1000214" [label="(Call,skb_shinfo(skb))"];
"1000144" [label="(Identifier,flags)"];
"1000229" [label="(Identifier,skb)"];
"1000130" [label="(Block,)"];
"1000205" [label="(Identifier,skb)"];
"1000117" [label="(Block,)"];
"1000213" [label="(Call,skb_shinfo(skb)->ip6_frag_id)"];
"1000233" [label="(Identifier,length)"];
"1000107" [label="(MethodParameterIn,struct sock *sk)"];
"1000135" [label="(Identifier,sk)"];
"1000146" [label="(Call,&err)"];
"1000112" [label="(MethodParameterIn,int fragheaderlen)"];
"1000111" [label="(MethodParameterIn,int hh_len)"];
"1000235" [label="(MethodReturn,static inline int)"];
"1000231" [label="(Identifier,from)"];
"1000221" [label="(Call,&sk->sk_write_queue)"];
"1000121" [label="(Call,(skb = skb_peek_tail(&sk->sk_write_queue)) == NULL)"];
"1000215" [label="(Identifier,skb)"];
"1000206" [label="(FieldIdentifier,gso_type)"];
"1000158" [label="(Identifier,skb)"];
"1000148" [label="(ControlStructure,if (skb == NULL))"];
"1000228" [label="(Identifier,sk)"];
"1000163" [label="(Identifier,skb)"];
"1000113" [label="(MethodParameterIn,int transhdrlen)"];
"1000149" [label="(Call,skb == NULL)"];
"1000153" [label="(Identifier,err)"];
"1000109" [label="(MethodParameterIn,void *from)"];
"1000132" [label="(Call,skb = sock_alloc_send_skb(sk,\n \t\t\thh_len + fragheaderlen + transhdrlen + 20,\n \t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000232" [label="(Call,length - transhdrlen)"];
"1000154" [label="(Call,skb_reserve(skb, hh_len))"];
"1000122" [label="(Call,skb = skb_peek_tail(&sk->sk_write_queue))"];
"1000225" [label="(Identifier,skb)"];
"1000216" [label="(FieldIdentifier,ip6_frag_id)"];
"1000147" [label="(Identifier,err)"];
"1000193" [label="(FieldIdentifier,gso_size)"];
"1000151" [label="(Identifier,NULL)"];
"1000136" [label="(Call,hh_len + fragheaderlen + transhdrlen + 20)"];
"1000227" -> "1000226"  [label="AST: "];
"1000227" -> "1000232"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000227"  [label="AST: "];
"1000230" -> "1000227"  [label="AST: "];
"1000231" -> "1000227"  [label="AST: "];
"1000232" -> "1000227"  [label="AST: "];
"1000226" -> "1000227"  [label="CFG: "];
"1000227" -> "1000235"  [label="DDG: from"];
"1000227" -> "1000235"  [label="DDG: skb_append_datato_frags(sk, skb, getfrag, from,\n\t\t\t\t       (length - transhdrlen))"];
"1000227" -> "1000235"  [label="DDG: sk"];
"1000227" -> "1000235"  [label="DDG: skb"];
"1000227" -> "1000235"  [label="DDG: length - transhdrlen"];
"1000227" -> "1000235"  [label="DDG: getfrag"];
"1000227" -> "1000226"  [label="DDG: skb_append_datato_frags(sk, skb, getfrag, from,\n\t\t\t\t       (length - transhdrlen))"];
"1000134" -> "1000227"  [label="DDG: sk"];
"1000107" -> "1000227"  [label="DDG: sk"];
"1000220" -> "1000227"  [label="DDG: skb"];
"1000122" -> "1000227"  [label="DDG: skb"];
"1000108" -> "1000227"  [label="DDG: getfrag"];
"1000109" -> "1000227"  [label="DDG: from"];
"1000232" -> "1000227"  [label="DDG: length"];
"1000232" -> "1000227"  [label="DDG: transhdrlen"];
"1000134" -> "1000132"  [label="AST: "];
"1000134" -> "1000146"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000143" -> "1000134"  [label="AST: "];
"1000146" -> "1000134"  [label="AST: "];
"1000132" -> "1000134"  [label="CFG: "];
"1000134" -> "1000235"  [label="DDG: sk"];
"1000134" -> "1000235"  [label="DDG: hh_len + fragheaderlen + transhdrlen + 20"];
"1000134" -> "1000235"  [label="DDG: flags & MSG_DONTWAIT"];
"1000134" -> "1000235"  [label="DDG: &err"];
"1000134" -> "1000132"  [label="DDG: sk"];
"1000134" -> "1000132"  [label="DDG: hh_len + fragheaderlen + transhdrlen + 20"];
"1000134" -> "1000132"  [label="DDG: flags & MSG_DONTWAIT"];
"1000134" -> "1000132"  [label="DDG: &err"];
"1000107" -> "1000134"  [label="DDG: sk"];
"1000111" -> "1000134"  [label="DDG: hh_len"];
"1000112" -> "1000134"  [label="DDG: fragheaderlen"];
"1000113" -> "1000134"  [label="DDG: transhdrlen"];
"1000143" -> "1000134"  [label="DDG: flags"];
"1000143" -> "1000134"  [label="DDG: MSG_DONTWAIT"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000235"  [label="DDG: sk"];
"1000111" -> "1000106"  [label="AST: "];
"1000111" -> "1000235"  [label="DDG: hh_len"];
"1000111" -> "1000136"  [label="DDG: hh_len"];
"1000111" -> "1000154"  [label="DDG: hh_len"];
"1000112" -> "1000106"  [label="AST: "];
"1000112" -> "1000235"  [label="DDG: fragheaderlen"];
"1000112" -> "1000136"  [label="DDG: fragheaderlen"];
"1000112" -> "1000138"  [label="DDG: fragheaderlen"];
"1000112" -> "1000157"  [label="DDG: fragheaderlen"];
"1000112" -> "1000159"  [label="DDG: fragheaderlen"];
"1000112" -> "1000164"  [label="DDG: fragheaderlen"];
"1000112" -> "1000168"  [label="DDG: fragheaderlen"];
"1000112" -> "1000197"  [label="DDG: fragheaderlen"];
"1000113" -> "1000106"  [label="AST: "];
"1000113" -> "1000235"  [label="DDG: transhdrlen"];
"1000113" -> "1000136"  [label="DDG: transhdrlen"];
"1000113" -> "1000138"  [label="DDG: transhdrlen"];
"1000113" -> "1000140"  [label="DDG: transhdrlen"];
"1000113" -> "1000157"  [label="DDG: transhdrlen"];
"1000113" -> "1000159"  [label="DDG: transhdrlen"];
"1000113" -> "1000232"  [label="DDG: transhdrlen"];
"1000143" -> "1000145"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000145" -> "1000143"  [label="AST: "];
"1000147" -> "1000143"  [label="CFG: "];
"1000143" -> "1000235"  [label="DDG: flags"];
"1000143" -> "1000235"  [label="DDG: MSG_DONTWAIT"];
"1000115" -> "1000143"  [label="DDG: flags"];
"1000115" -> "1000106"  [label="AST: "];
"1000115" -> "1000235"  [label="DDG: flags"];
"1000220" -> "1000130"  [label="AST: "];
"1000220" -> "1000225"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000225" -> "1000220"  [label="AST: "];
"1000228" -> "1000220"  [label="CFG: "];
"1000220" -> "1000235"  [label="DDG: &sk->sk_write_queue"];
"1000220" -> "1000235"  [label="DDG: __skb_queue_tail(&sk->sk_write_queue, skb)"];
"1000124" -> "1000220"  [label="DDG: &sk->sk_write_queue"];
"1000214" -> "1000220"  [label="DDG: skb"];
"1000124" -> "1000122"  [label="AST: "];
"1000124" -> "1000125"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000124" -> "1000235"  [label="DDG: &sk->sk_write_queue"];
"1000124" -> "1000121"  [label="DDG: &sk->sk_write_queue"];
"1000124" -> "1000122"  [label="DDG: &sk->sk_write_queue"];
"1000214" -> "1000213"  [label="AST: "];
"1000214" -> "1000215"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000216" -> "1000214"  [label="CFG: "];
"1000204" -> "1000214"  [label="DDG: skb"];
"1000204" -> "1000203"  [label="AST: "];
"1000204" -> "1000205"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000206" -> "1000204"  [label="CFG: "];
"1000191" -> "1000204"  [label="DDG: skb"];
"1000191" -> "1000190"  [label="AST: "];
"1000191" -> "1000192"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000193" -> "1000191"  [label="CFG: "];
"1000162" -> "1000191"  [label="DDG: skb"];
"1000162" -> "1000130"  [label="AST: "];
"1000162" -> "1000163"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000166" -> "1000162"  [label="CFG: "];
"1000162" -> "1000235"  [label="DDG: skb_reset_network_header(skb)"];
"1000157" -> "1000162"  [label="DDG: skb"];
"1000157" -> "1000130"  [label="AST: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000163" -> "1000157"  [label="CFG: "];
"1000157" -> "1000235"  [label="DDG: skb_put(skb,fragheaderlen + transhdrlen)"];
"1000157" -> "1000235"  [label="DDG: fragheaderlen + transhdrlen"];
"1000154" -> "1000157"  [label="DDG: skb"];
"1000154" -> "1000130"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000156" -> "1000154"  [label="AST: "];
"1000158" -> "1000154"  [label="CFG: "];
"1000154" -> "1000235"  [label="DDG: skb_reserve(skb, hh_len)"];
"1000154" -> "1000235"  [label="DDG: hh_len"];
"1000149" -> "1000154"  [label="DDG: skb"];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000153" -> "1000149"  [label="CFG: "];
"1000155" -> "1000149"  [label="CFG: "];
"1000149" -> "1000235"  [label="DDG: NULL"];
"1000149" -> "1000235"  [label="DDG: skb == NULL"];
"1000149" -> "1000235"  [label="DDG: skb"];
"1000132" -> "1000149"  [label="DDG: skb"];
"1000121" -> "1000149"  [label="DDG: NULL"];
"1000132" -> "1000130"  [label="AST: "];
"1000133" -> "1000132"  [label="AST: "];
"1000150" -> "1000132"  [label="CFG: "];
"1000132" -> "1000235"  [label="DDG: sock_alloc_send_skb(sk,\n \t\t\thh_len + fragheaderlen + transhdrlen + 20,\n \t\t\t(flags & MSG_DONTWAIT), &err)"];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000129"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000129" -> "1000121"  [label="AST: "];
"1000133" -> "1000121"  [label="CFG: "];
"1000228" -> "1000121"  [label="CFG: "];
"1000121" -> "1000235"  [label="DDG: NULL"];
"1000121" -> "1000235"  [label="DDG: (skb = skb_peek_tail(&sk->sk_write_queue)) == NULL"];
"1000122" -> "1000121"  [label="DDG: skb"];
"1000123" -> "1000122"  [label="AST: "];
"1000129" -> "1000122"  [label="CFG: "];
"1000122" -> "1000235"  [label="DDG: skb_peek_tail(&sk->sk_write_queue)"];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000235"  [label="DDG: getfrag"];
"1000109" -> "1000106"  [label="AST: "];
"1000109" -> "1000235"  [label="DDG: from"];
"1000232" -> "1000234"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000234" -> "1000232"  [label="AST: "];
"1000232" -> "1000235"  [label="DDG: length"];
"1000232" -> "1000235"  [label="DDG: transhdrlen"];
"1000110" -> "1000232"  [label="DDG: length"];
"1000110" -> "1000106"  [label="AST: "];
"1000110" -> "1000235"  [label="DDG: length"];
"1000226" -> "1000117"  [label="AST: "];
"1000235" -> "1000226"  [label="CFG: "];
"1000226" -> "1000235"  [label="DDG: <RET>"];
}
