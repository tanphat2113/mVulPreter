digraph "0_ImageMagick_65f75a32a93ae4044c528a987a68366ecd4b46b9@array" {
"1000702" [label="(Call,ScaleQuantumToAny(image->colormap[i].blue,\n              range))"];
"1000766" [label="(Call,ScaleQuantumToChar(image->colormap[i].blue))"];
"1000702" [label="(Call,ScaleQuantumToAny(image->colormap[i].blue,\n              range))"];
"1000686" [label="(Call,ScaleQuantumToAny(image->colormap[i].green,\n              range))"];
"1000778" [label="(Call,ScaleQuantumToChar(image->colormap[i].green))"];
"1000745" [label="(Call,ScaleQuantumToAny(image->colormap[i].red,\n              range))"];
"1000790" [label="(Call,ScaleQuantumToChar(image->colormap[i].red))"];
"1000223" [label="(Call,range=GetQuantumRange(5UL))"];
"1000225" [label="(Call,GetQuantumRange(5UL))"];
"1000700" [label="(Call,(unsigned char) ScaleQuantumToAny(image->colormap[i].blue,\n              range))"];
"1000699" [label="(Call,((unsigned char) ScaleQuantumToAny(image->colormap[i].blue,\n              range)) | ((green & 0x07) << 5))"];
"1000695" [label="(Call,*q++=((unsigned char) ScaleQuantumToAny(image->colormap[i].blue,\n              range)) | ((green & 0x07) << 5))"];
"1000684" [label="(Call,(unsigned char) ScaleQuantumToAny(image->colormap[i].green,\n              range))"];
"1000682" [label="(Call,green=(unsigned char) ScaleQuantumToAny(image->colormap[i].green,\n              range))"];
"1000712" [label="(Call,green & 0x07)"];
"1000711" [label="(Call,(green & 0x07) << 5)"];
"1000756" [label="(Call,green & 0x18)"];
"1000755" [label="(Call,(green & 0x18) >> 3)"];
"1000741" [label="(Call,((unsigned char) ScaleQuantumToAny(image->colormap[i].red,\n              range) << 2) | ((green & 0x18) >> 3))"];
"1000720" [label="(Call,(((image->matte != MagickFalse) && (\n              (double) image->colormap[i].opacity < midpoint)) ? 0x80 : 0) |\n              ((unsigned char) ScaleQuantumToAny(image->colormap[i].red,\n              range) << 2) | ((green & 0x18) >> 3))"];
"1000716" [label="(Call,*q++=(((image->matte != MagickFalse) && (\n              (double) image->colormap[i].opacity < midpoint)) ? 0x80 : 0) |\n              ((unsigned char) ScaleQuantumToAny(image->colormap[i].red,\n              range) << 2) | ((green & 0x18) >> 3))"];
"1000762" [label="(Call,*q++=ScaleQuantumToChar(image->colormap[i].blue))"];
"1000774" [label="(Call,*q++=ScaleQuantumToChar(image->colormap[i].green))"];
"1000743" [label="(Call,(unsigned char) ScaleQuantumToAny(image->colormap[i].red,\n              range))"];
"1000742" [label="(Call,(unsigned char) ScaleQuantumToAny(image->colormap[i].red,\n              range) << 2)"];
"1000786" [label="(Call,*q++=ScaleQuantumToChar(image->colormap[i].red))"];
"1001059" [label="(Call,WriteTGAPixel(image,tga_info.image_type,indexes-(count+1),\n                      p-(count+1),range,midpoint))"];
"1000838" [label="(Call,GetVirtualPixels(image,0,y,image->columns,1,&image->exception))"];
"1000833" [label="(Call,y--)"];
"1000830" [label="(Call,y >= 0)"];
"1000836" [label="(Call,p=GetVirtualPixels(image,0,y,image->columns,1,&image->exception))"];
"1000851" [label="(Call,p == (const PixelPacket *) NULL)"];
"1000935" [label="(Call,GetPixelLuma(image,p+i))"];
"1000934" [label="(Call,GetPixelLuma(image,p+i) != GetPixelLuma(image,p+(i-1)))"];
"1000940" [label="(Call,GetPixelLuma(image,p+(i-1)))"];
"1001048" [label="(Call,WriteBlobByte(image,(unsigned char) (--count)))"];
"1001046" [label="(Call,(void) WriteBlobByte(image,(unsigned char) (--count)))"];
"1001088" [label="(Call,WriteBlobByte(image,(unsigned char) ((i-1) | 0x80)))"];
"1001086" [label="(Call,(void) WriteBlobByte(image,(unsigned char) ((i-1) | 0x80)))"];
"1001097" [label="(Call,WriteTGAPixel(image,tga_info.image_type,indexes,p,range,midpoint))"];
"1000906" [label="(Call,tga_info.image_type == TGARLEColormap)"];
"1000927" [label="(Call,tga_info.image_type == TGARLEMonochrome)"];
"1001130" [label="(Call,WriteTGAPixel(image,tga_info.image_type,indexes+x,p++,range,midpoint))"];
"1001153" [label="(Call,SetImageProgress(image,SaveImageTag,(MagickOffsetType) y,\n          image->rows))"];
"1001151" [label="(Call,status=SetImageProgress(image,SaveImageTag,(MagickOffsetType) y,\n          image->rows))"];
"1001163" [label="(Call,status == MagickFalse)"];
"1000989" [label="(Call,image->matte != MagickFalse)"];
"1000988" [label="(Call,(image->matte != MagickFalse) &&\n                      (GetPixelAlpha(p+i) != GetPixelAlpha(p+(i-1))))"];
"1001169" [label="(Call,CloseBlob(image))"];
"1001167" [label="(Call,(void) CloseBlob(image))"];
"1001106" [label="(Call,p+=i)"];
"1000937" [label="(Call,p+i)"];
"1000953" [label="(Call,GetPixelBlue(p+i))"];
"1000952" [label="(Call,GetPixelBlue(p+i) != GetPixelBlue(p+(i-1)))"];
"1000951" [label="(Call,(GetPixelBlue(p+i) != GetPixelBlue(p+(i-1))) ||\n                      (GetPixelGreen(p+i) != GetPixelGreen(p+(i-1))) ||\n                      (GetPixelRed(p+i) != GetPixelRed(p+(i-1))))"];
"1000954" [label="(Call,p+i)"];
"1000957" [label="(Call,GetPixelBlue(p+(i-1)))"];
"1000958" [label="(Call,p+(i-1))"];
"1000965" [label="(Call,GetPixelGreen(p+i))"];
"1000964" [label="(Call,GetPixelGreen(p+i) != GetPixelGreen(p+(i-1)))"];
"1000963" [label="(Call,(GetPixelGreen(p+i) != GetPixelGreen(p+(i-1))) ||\n                      (GetPixelRed(p+i) != GetPixelRed(p+(i-1))))"];
"1000966" [label="(Call,p+i)"];
"1000969" [label="(Call,GetPixelGreen(p+(i-1)))"];
"1000970" [label="(Call,p+(i-1))"];
"1000976" [label="(Call,GetPixelRed(p+i))"];
"1000975" [label="(Call,GetPixelRed(p+i) != GetPixelRed(p+(i-1)))"];
"1000977" [label="(Call,p+i)"];
"1000980" [label="(Call,GetPixelRed(p+(i-1)))"];
"1000981" [label="(Call,p+(i-1))"];
"1001016" [label="(Call,p+=i)"];
"1001069" [label="(Call,p-(count+1))"];
"1001109" [label="(Call,indexes+=i)"];
"1000914" [label="(Call,GetPixelIndex(indexes+i))"];
"1000913" [label="(Call,GetPixelIndex(indexes+i) != GetPixelIndex(indexes+(i-1)))"];
"1000915" [label="(Call,indexes+i)"];
"1001019" [label="(Call,indexes+=i)"];
"1001064" [label="(Call,indexes-(count+1))"];
"1001138" [label="(Call,p++)"];
"1000859" [label="(Call,GetVirtualIndexQueue(image))"];
"1000857" [label="(Call,indexes=GetVirtualIndexQueue(image))"];
"1001135" [label="(Call,indexes+x)"];
"1000875" [label="(Call,(ssize_t) image->columns)"];
"1000873" [label="(Call,x < (ssize_t) image->columns)"];
"1000895" [label="(Call,(x + i) < (ssize_t) image->columns)"];
"1000889" [label="(Call,(count + i < 128) &&\n                 ((x + i) < (ssize_t) image->columns))"];
"1000885" [label="(Call,(i < 128) && (count + i < 128) &&\n                 ((x + i) < (ssize_t) image->columns))"];
"1000896" [label="(Call,x + i)"];
"1001031" [label="(Call,(x + i) == (ssize_t) image->columns)"];
"1001027" [label="(Call,(count == 128) ||\n              ((x + i) == (ssize_t) image->columns))"];
"1001023" [label="(Call,(i >= 3) || (count == 128) ||\n              ((x + i) == (ssize_t) image->columns))"];
"1001032" [label="(Call,x + i)"];
"1001112" [label="(Call,x+=i)"];
"1000899" [label="(Call,(ssize_t) image->columns)"];
"1001035" [label="(Call,(ssize_t) image->columns)"];
"1001123" [label="(Call,(ssize_t) image->columns)"];
"1001121" [label="(Call,x < (ssize_t) image->columns)"];
"1001128" [label="(Call,x++)"];
"1001156" [label="(Call,(MagickOffsetType) y)"];
"1000287" [label="(Call,(unsigned short) image->columns)"];
"1000600" [label="(Call,WriteBlobByte(image,tga_info.attributes))"];
"1000791" [label="(Call,image->colormap[i].red)"];
"1000994" [label="(Call,GetPixelAlpha(p+i) != GetPixelAlpha(p+(i-1)))"];
"1000910" [label="(Identifier,TGARLEColormap)"];
"1000970" [label="(Call,p+(i-1))"];
"1000673" [label="(Identifier,i)"];
"1001060" [label="(Identifier,image)"];
"1001113" [label="(Identifier,x)"];
"1001023" [label="(Call,(i >= 3) || (count == 128) ||\n              ((x + i) == (ssize_t) image->columns))"];
"1000938" [label="(Identifier,p)"];
"1000834" [label="(Identifier,y)"];
"1000835" [label="(Block,)"];
"1001089" [label="(Identifier,image)"];
"1000956" [label="(Identifier,i)"];
"1000873" [label="(Call,x < (ssize_t) image->columns)"];
"1000884" [label="(ControlStructure,while ((i < 128) && (count + i < 128) &&\n                 ((x + i) < (ssize_t) image->columns)))"];
"1000714" [label="(Literal,0x07)"];
"1000767" [label="(Call,image->colormap[i].blue)"];
"1001034" [label="(Identifier,i)"];
"1000928" [label="(Call,tga_info.image_type)"];
"1001162" [label="(ControlStructure,if (status == MagickFalse))"];
"1001083" [label="(Identifier,i)"];
"1000779" [label="(Call,image->colormap[i].green)"];
"1000905" [label="(ControlStructure,if (tga_info.image_type == TGARLEColormap))"];
"1001056" [label="(Identifier,count)"];
"1001070" [label="(Identifier,p)"];
"1000915" [label="(Call,indexes+i)"];
"1001130" [label="(Call,WriteTGAPixel(image,tga_info.image_type,indexes+x,p++,range,midpoint))"];
"1000967" [label="(Identifier,p)"];
"1000993" [label="(Identifier,MagickFalse)"];
"1000687" [label="(Call,image->colormap[i].green)"];
"1000912" [label="(ControlStructure,if (GetPixelIndex(indexes+i) != GetPixelIndex(indexes+(i-1))))"];
"1000836" [label="(Call,p=GetVirtualPixels(image,0,y,image->columns,1,&image->exception))"];
"1001098" [label="(Identifier,image)"];
"1000877" [label="(Call,image->columns)"];
"1001109" [label="(Call,indexes+=i)"];
"1000958" [label="(Call,p+(i-1))"];
"1001088" [label="(Call,WriteBlobByte(image,(unsigned char) ((i-1) | 0x80)))"];
"1000986" [label="(ControlStructure,break;)"];
"1001031" [label="(Call,(x + i) == (ssize_t) image->columns)"];
"1001058" [label="(Block,)"];
"1001145" [label="(Identifier,image)"];
"1001007" [label="(Identifier,i)"];
"1000831" [label="(Identifier,y)"];
"1001090" [label="(Call,(unsigned char) ((i-1) | 0x80))"];
"1001037" [label="(Call,image->columns)"];
"1000988" [label="(Call,(image->matte != MagickFalse) &&\n                      (GetPixelAlpha(p+i) != GetPixelAlpha(p+(i-1))))"];
"1001032" [label="(Call,x + i)"];
"1000908" [label="(Identifier,tga_info)"];
"1000927" [label="(Call,tga_info.image_type == TGARLEMonochrome)"];
"1001050" [label="(Call,(unsigned char) (--count))"];
"1001108" [label="(Identifier,i)"];
"1000852" [label="(Identifier,p)"];
"1000613" [label="(Call,WriteBlob(image,tga_info.id_length,(unsigned char *) comment))"];
"1000981" [label="(Call,p+(i-1))"];
"1000743" [label="(Call,(unsigned char) ScaleQuantumToAny(image->colormap[i].red,\n              range))"];
"1000842" [label="(Call,image->columns)"];
"1000964" [label="(Call,GetPixelGreen(p+i) != GetPixelGreen(p+(i-1)))"];
"1000859" [label="(Call,GetVirtualIndexQueue(image))"];
"1001156" [label="(Call,(MagickOffsetType) y)"];
"1000953" [label="(Call,GetPixelBlue(p+i))"];
"1001103" [label="(Identifier,p)"];
"1000800" [label="(Call,WriteBlob(image,(size_t) ((tga_info.colormap_size/8)*\n        tga_info.colormap_length),targa_colormap))"];
"1000741" [label="(Call,((unsigned char) ScaleQuantumToAny(image->colormap[i].red,\n              range) << 2) | ((green & 0x18) >> 3))"];
"1001111" [label="(Identifier,i)"];
"1000723" [label="(Call,image->matte != MagickFalse)"];
"1001086" [label="(Call,(void) WriteBlobByte(image,(unsigned char) ((i-1) | 0x80)))"];
"1000969" [label="(Call,GetPixelGreen(p+(i-1)))"];
"1000336" [label="(Call,SetImageGray(image,&image->exception) != MagickFalse)"];
"1000841" [label="(Identifier,y)"];
"1001138" [label="(Call,p++)"];
"1000963" [label="(Call,(GetPixelGreen(p+i) != GetPixelGreen(p+(i-1))) ||\n                      (GetPixelRed(p+i) != GetPixelRed(p+(i-1))))"];
"1001099" [label="(Call,tga_info.image_type)"];
"1000941" [label="(Identifier,image)"];
"1000989" [label="(Call,image->matte != MagickFalse)"];
"1000856" [label="(ControlStructure,break;)"];
"1000991" [label="(Identifier,image)"];
"1001012" [label="(Block,)"];
"1000860" [label="(Identifier,image)"];
"1000937" [label="(Call,p+i)"];
"1000758" [label="(Literal,0x18)"];
"1001167" [label="(Call,(void) CloseBlob(image))"];
"1001028" [label="(Call,count == 128)"];
"1000182" [label="(Call,status == MagickFalse)"];
"1000832" [label="(Literal,0)"];
"1000920" [label="(Identifier,indexes)"];
"1000682" [label="(Call,green=(unsigned char) ScaleQuantumToAny(image->colormap[i].green,\n              range))"];
"1000681" [label="(Block,)"];
"1000789" [label="(Identifier,q)"];
"1000717" [label="(Call,*q++)"];
"1000761" [label="(Block,)"];
"1000940" [label="(Call,GetPixelLuma(image,p+(i-1)))"];
"1001020" [label="(Identifier,indexes)"];
"1000711" [label="(Call,(green & 0x07) << 5)"];
"1000845" [label="(Literal,1)"];
"1001141" [label="(Identifier,midpoint)"];
"1000225" [label="(Call,GetQuantumRange(5UL))"];
"1000775" [label="(Call,*q++)"];
"1000906" [label="(Call,tga_info.image_type == TGARLEColormap)"];
"1000699" [label="(Call,((unsigned char) ScaleQuantumToAny(image->colormap[i].blue,\n              range)) | ((green & 0x07) << 5))"];
"1000838" [label="(Call,GetVirtualPixels(image,0,y,image->columns,1,&image->exception))"];
"1001104" [label="(Identifier,range)"];
"1000954" [label="(Call,p+i)"];
"1000939" [label="(Identifier,i)"];
"1000754" [label="(Literal,2)"];
"1001093" [label="(Call,i-1)"];
"1000934" [label="(Call,GetPixelLuma(image,p+i) != GetPixelLuma(image,p+(i-1)))"];
"1000971" [label="(Identifier,p)"];
"1001153" [label="(Call,SetImageProgress(image,SaveImageTag,(MagickOffsetType) y,\n          image->rows))"];
"1000944" [label="(Call,i-1)"];
"1001018" [label="(Identifier,i)"];
"1000337" [label="(Call,SetImageGray(image,&image->exception))"];
"1001022" [label="(ControlStructure,if ((i >= 3) || (count == 128) ||\n              ((x + i) == (ssize_t) image->columns)))"];
"1001122" [label="(Identifier,x)"];
"1000700" [label="(Call,(unsigned char) ScaleQuantumToAny(image->colormap[i].blue,\n              range))"];
"1000745" [label="(Call,ScaleQuantumToAny(image->colormap[i].red,\n              range))"];
"1000889" [label="(Call,(count + i < 128) &&\n                 ((x + i) < (ssize_t) image->columns))"];
"1000756" [label="(Call,green & 0x18)"];
"1000880" [label="(Block,)"];
"1000696" [label="(Call,*q++)"];
"1000755" [label="(Call,(green & 0x18) >> 3)"];
"1001066" [label="(Call,count+1)"];
"1000786" [label="(Call,*q++=ScaleQuantumToChar(image->colormap[i].red))"];
"1000931" [label="(Identifier,TGARLEMonochrome)"];
"1000896" [label="(Call,x + i)"];
"1000863" [label="(Identifier,compression)"];
"1000978" [label="(Identifier,p)"];
"1001046" [label="(Call,(void) WriteBlobByte(image,(unsigned char) (--count)))"];
"1001160" [label="(Identifier,image)"];
"1000821" [label="(Call,y=(ssize_t) (image->rows-1))"];
"1000983" [label="(Call,i-1)"];
"1001152" [label="(Identifier,status)"];
"1000695" [label="(Call,*q++=((unsigned char) ScaleQuantumToAny(image->colormap[i].blue,\n              range)) | ((green & 0x07) << 5))"];
"1000774" [label="(Call,*q++=ScaleQuantumToChar(image->colormap[i].green))"];
"1000710" [label="(Identifier,range)"];
"1000850" [label="(ControlStructure,if (p == (const PixelPacket *) NULL))"];
"1001055" [label="(Call,count >= 0)"];
"1001065" [label="(Identifier,indexes)"];
"1000901" [label="(Call,image->columns)"];
"1000787" [label="(Call,*q++)"];
"1000886" [label="(Call,i < 128)"];
"1000694" [label="(Identifier,range)"];
"1000916" [label="(Identifier,indexes)"];
"1000753" [label="(Identifier,range)"];
"1000820" [label="(ControlStructure,for (y=(ssize_t) (image->rows-1); y >= 0; y--))"];
"1000977" [label="(Call,p+i)"];
"1000960" [label="(Call,i-1)"];
"1000975" [label="(Call,GetPixelRed(p+i) != GetPixelRed(p+(i-1)))"];
"1001043" [label="(Identifier,count)"];
"1000857" [label="(Call,indexes=GetVirtualIndexQueue(image))"];
"1000763" [label="(Call,*q++)"];
"1001010" [label="(Identifier,i)"];
"1000917" [label="(Identifier,i)"];
"1000907" [label="(Call,tga_info.image_type)"];
"1000872" [label="(ControlStructure,while (x < (ssize_t) image->columns))"];
"1000898" [label="(Identifier,i)"];
"1000990" [label="(Call,image->matte)"];
"1000924" [label="(ControlStructure,break;)"];
"1000721" [label="(Call,((image->matte != MagickFalse) && (\n              (double) image->colormap[i].opacity < midpoint)) ? 0x80 : 0)"];
"1001017" [label="(Identifier,p)"];
"1000966" [label="(Call,p+i)"];
"1001166" [label="(ControlStructure,break;)"];
"1001128" [label="(Call,x++)"];
"1000980" [label="(Call,GetPixelRed(p+(i-1)))"];
"1000837" [label="(Identifier,p)"];
"1001019" [label="(Call,indexes+=i)"];
"1000485" [label="(Call,ParseCommandOption(MagickOrientationOptions,\n        MagickFalse,value))"];
"1001137" [label="(Identifier,x)"];
"1000853" [label="(Call,(const PixelPacket *) NULL)"];
"1000965" [label="(Call,GetPixelGreen(p+i))"];
"1001027" [label="(Call,(count == 128) ||\n              ((x + i) == (ssize_t) image->columns))"];
"1000918" [label="(Call,GetPixelIndex(indexes+(i-1)))"];
"1000226" [label="(Literal,5UL)"];
"1000746" [label="(Call,image->colormap[i].red)"];
"1001102" [label="(Identifier,indexes)"];
"1000846" [label="(Call,&image->exception)"];
"1000830" [label="(Call,y >= 0)"];
"1001135" [label="(Call,indexes+x)"];
"1000955" [label="(Identifier,p)"];
"1001151" [label="(Call,status=SetImageProgress(image,SaveImageTag,(MagickOffsetType) y,\n          image->rows))"];
"1001064" [label="(Call,indexes-(count+1))"];
"1000825" [label="(Call,image->rows-1)"];
"1001170" [label="(Identifier,image)"];
"1000987" [label="(ControlStructure,if ((image->matte != MagickFalse) &&\n                      (GetPixelAlpha(p+i) != GetPixelAlpha(p+(i-1)))))"];
"1001123" [label="(Call,(ssize_t) image->columns)"];
"1000712" [label="(Call,green & 0x07)"];
"1001075" [label="(Identifier,midpoint)"];
"1000719" [label="(Identifier,q)"];
"1000997" [label="(Identifier,p)"];
"1001106" [label="(Call,p+=i)"];
"1001033" [label="(Identifier,x)"];
"1000875" [label="(Call,(ssize_t) image->columns)"];
"1001082" [label="(Call,i >= 3)"];
"1000957" [label="(Call,GetPixelBlue(p+(i-1)))"];
"1001112" [label="(Call,x+=i)"];
"1000173" [label="(Call,OpenBlob(image_info,image,WriteBinaryBlobMode,&image->exception))"];
"1001150" [label="(Block,)"];
"1000716" [label="(Call,*q++=(((image->matte != MagickFalse) && (\n              (double) image->colormap[i].opacity < midpoint)) ? 0x80 : 0) |\n              ((unsigned char) ScaleQuantumToAny(image->colormap[i].red,\n              range) << 2) | ((green & 0x18) >> 3))"];
"1000951" [label="(Call,(GetPixelBlue(p+i) != GetPixelBlue(p+(i-1))) ||\n                      (GetPixelGreen(p+i) != GetPixelGreen(p+(i-1))) ||\n                      (GetPixelRed(p+i) != GetPixelRed(p+(i-1))))"];
"1000890" [label="(Call,count + i < 128)"];
"1000777" [label="(Identifier,q)"];
"1001132" [label="(Call,tga_info.image_type)"];
"1001110" [label="(Identifier,indexes)"];
"1001139" [label="(Identifier,p)"];
"1000914" [label="(Call,GetPixelIndex(indexes+i))"];
"1001172" [label="(Identifier,MagickTrue)"];
"1001165" [label="(Identifier,MagickFalse)"];
"1001021" [label="(Identifier,i)"];
"1001025" [label="(Identifier,i)"];
"1000715" [label="(Literal,5)"];
"1000703" [label="(Call,image->colormap[i].blue)"];
"1000933" [label="(ControlStructure,if (GetPixelLuma(image,p+i) != GetPixelLuma(image,p+(i-1))))"];
"1000833" [label="(Call,y--)"];
"1001154" [label="(Identifier,image)"];
"1000391" [label="(Call,image->matte != MagickFalse)"];
"1000728" [label="(Call,(double) image->colormap[i].opacity < midpoint)"];
"1001131" [label="(Identifier,image)"];
"1000683" [label="(Identifier,green)"];
"1000331" [label="(Call,image->matte == MagickFalse)"];
"1000972" [label="(Call,i-1)"];
"1001059" [label="(Call,WriteTGAPixel(image,tga_info.image_type,indexes-(count+1),\n                      p-(count+1),range,midpoint))"];
"1001071" [label="(Call,count+1)"];
"1000926" [label="(ControlStructure,if (tga_info.image_type == TGARLEMonochrome))"];
"1000713" [label="(Identifier,green)"];
"1000942" [label="(Call,p+(i-1))"];
"1001005" [label="(ControlStructure,break;)"];
"1000866" [label="(Call,x=0)"];
"1001045" [label="(Block,)"];
"1000702" [label="(Call,ScaleQuantumToAny(image->colormap[i].blue,\n              range))"];
"1000698" [label="(Identifier,q)"];
"1001074" [label="(Identifier,range)"];
"1000112" [label="(Block,)"];
"1000117" [label="(Call,midpoint = QuantumRange/2.0)"];
"1000229" [label="(Identifier,tga_info)"];
"1001159" [label="(Call,image->rows)"];
"1001009" [label="(Call,i < 3)"];
"1000982" [label="(Identifier,p)"];
"1001125" [label="(Call,image->columns)"];
"1001155" [label="(Identifier,SaveImageTag)"];
"1001105" [label="(Identifier,midpoint)"];
"1001117" [label="(ControlStructure,for (x=0; x < (ssize_t) image->columns; x++))"];
"1000686" [label="(Call,ScaleQuantumToAny(image->colormap[i].green,\n              range))"];
"1001097" [label="(Call,WriteTGAPixel(image,tga_info.image_type,indexes,p,range,midpoint))"];
"1000409" [label="(Call,image->matte != MagickFalse)"];
"1000224" [label="(Identifier,range)"];
"1000950" [label="(ControlStructure,if ((GetPixelBlue(p+i) != GetPixelBlue(p+(i-1))) ||\n                      (GetPixelGreen(p+i) != GetPixelGreen(p+(i-1))) ||\n                      (GetPixelRed(p+i) != GetPixelRed(p+(i-1)))))"];
"1000874" [label="(Identifier,x)"];
"1001049" [label="(Identifier,image)"];
"1001173" [label="(MethodReturn,static MagickBooleanType)"];
"1001085" [label="(Block,)"];
"1000858" [label="(Identifier,indexes)"];
"1000778" [label="(Call,ScaleQuantumToChar(image->colormap[i].green))"];
"1000757" [label="(Identifier,green)"];
"1001158" [label="(Identifier,y)"];
"1001035" [label="(Call,(ssize_t) image->columns)"];
"1001061" [label="(Call,tga_info.image_type)"];
"1000913" [label="(Call,GetPixelIndex(indexes+i) != GetPixelIndex(indexes+(i-1)))"];
"1000968" [label="(Identifier,i)"];
"1001048" [label="(Call,WriteBlobByte(image,(unsigned char) (--count)))"];
"1000720" [label="(Call,(((image->matte != MagickFalse) && (\n              (double) image->colormap[i].opacity < midpoint)) ? 0x80 : 0) |\n              ((unsigned char) ScaleQuantumToAny(image->colormap[i].red,\n              range) << 2) | ((green & 0x18) >> 3))"];
"1000537" [label="(Call,(unsigned char) tga_info.image_type)"];
"1001121" [label="(Call,x < (ssize_t) image->columns)"];
"1001163" [label="(Call,status == MagickFalse)"];
"1000895" [label="(Call,(x + i) < (ssize_t) image->columns)"];
"1000882" [label="(Identifier,i)"];
"1000684" [label="(Call,(unsigned char) ScaleQuantumToAny(image->colormap[i].green,\n              range))"];
"1000851" [label="(Call,p == (const PixelPacket *) NULL)"];
"1000936" [label="(Identifier,image)"];
"1000976" [label="(Call,GetPixelRed(p+i))"];
"1000885" [label="(Call,(i < 128) && (count + i < 128) &&\n                 ((x + i) < (ssize_t) image->columns))"];
"1001114" [label="(Identifier,i)"];
"1000790" [label="(Call,ScaleQuantumToChar(image->colormap[i].red))"];
"1001118" [label="(Call,x=0)"];
"1001169" [label="(Call,CloseBlob(image))"];
"1001077" [label="(Identifier,count)"];
"1001129" [label="(Identifier,x)"];
"1000839" [label="(Identifier,image)"];
"1000952" [label="(Call,GetPixelBlue(p+i) != GetPixelBlue(p+(i-1)))"];
"1000935" [label="(Call,GetPixelLuma(image,p+i))"];
"1001164" [label="(Identifier,status)"];
"1000840" [label="(Literal,0)"];
"1001016" [label="(Call,p+=i)"];
"1000979" [label="(Identifier,i)"];
"1001140" [label="(Identifier,range)"];
"1001136" [label="(Identifier,indexes)"];
"1000766" [label="(Call,ScaleQuantumToChar(image->colormap[i].blue))"];
"1000929" [label="(Identifier,tga_info)"];
"1001069" [label="(Call,p-(count+1))"];
"1000742" [label="(Call,(unsigned char) ScaleQuantumToAny(image->colormap[i].red,\n              range) << 2)"];
"1000759" [label="(Literal,3)"];
"1000223" [label="(Call,range=GetQuantumRange(5UL))"];
"1000762" [label="(Call,*q++=ScaleQuantumToChar(image->colormap[i].blue))"];
"1000899" [label="(Call,(ssize_t) image->columns)"];
"1000947" [label="(ControlStructure,break;)"];
"1000959" [label="(Identifier,p)"];
"1001024" [label="(Call,i >= 3)"];
"1000897" [label="(Identifier,x)"];
"1000111" [label="(MethodParameterIn,Image *image)"];
"1001107" [label="(Identifier,p)"];
"1000702" -> "1000700"  [label="AST: "];
"1000702" -> "1000710"  [label="CFG: "];
"1000703" -> "1000702"  [label="AST: "];
"1000710" -> "1000702"  [label="AST: "];
"1000700" -> "1000702"  [label="CFG: "];
"1000702" -> "1001173"  [label="DDG: image->colormap[i].blue"];
"1000702" -> "1000700"  [label="DDG: image->colormap[i].blue"];
"1000702" -> "1000700"  [label="DDG: range"];
"1000766" -> "1000702"  [label="DDG: image->colormap[i].blue"];
"1000686" -> "1000702"  [label="DDG: range"];
"1000702" -> "1000745"  [label="DDG: range"];
"1000702" -> "1000766"  [label="DDG: image->colormap[i].blue"];
"1000766" -> "1000762"  [label="AST: "];
"1000766" -> "1000767"  [label="CFG: "];
"1000767" -> "1000766"  [label="AST: "];
"1000762" -> "1000766"  [label="CFG: "];
"1000766" -> "1001173"  [label="DDG: image->colormap[i].blue"];
"1000766" -> "1000762"  [label="DDG: image->colormap[i].blue"];
"1000686" -> "1000684"  [label="AST: "];
"1000686" -> "1000694"  [label="CFG: "];
"1000687" -> "1000686"  [label="AST: "];
"1000694" -> "1000686"  [label="AST: "];
"1000684" -> "1000686"  [label="CFG: "];
"1000686" -> "1001173"  [label="DDG: image->colormap[i].green"];
"1000686" -> "1000684"  [label="DDG: image->colormap[i].green"];
"1000686" -> "1000684"  [label="DDG: range"];
"1000778" -> "1000686"  [label="DDG: image->colormap[i].green"];
"1000745" -> "1000686"  [label="DDG: range"];
"1000223" -> "1000686"  [label="DDG: range"];
"1000686" -> "1000778"  [label="DDG: image->colormap[i].green"];
"1000778" -> "1000774"  [label="AST: "];
"1000778" -> "1000779"  [label="CFG: "];
"1000779" -> "1000778"  [label="AST: "];
"1000774" -> "1000778"  [label="CFG: "];
"1000778" -> "1001173"  [label="DDG: image->colormap[i].green"];
"1000778" -> "1000774"  [label="DDG: image->colormap[i].green"];
"1000745" -> "1000743"  [label="AST: "];
"1000745" -> "1000753"  [label="CFG: "];
"1000746" -> "1000745"  [label="AST: "];
"1000753" -> "1000745"  [label="AST: "];
"1000743" -> "1000745"  [label="CFG: "];
"1000745" -> "1001173"  [label="DDG: range"];
"1000745" -> "1001173"  [label="DDG: image->colormap[i].red"];
"1000745" -> "1000743"  [label="DDG: image->colormap[i].red"];
"1000745" -> "1000743"  [label="DDG: range"];
"1000790" -> "1000745"  [label="DDG: image->colormap[i].red"];
"1000745" -> "1000790"  [label="DDG: image->colormap[i].red"];
"1000745" -> "1001059"  [label="DDG: range"];
"1000745" -> "1001097"  [label="DDG: range"];
"1000745" -> "1001130"  [label="DDG: range"];
"1000790" -> "1000786"  [label="AST: "];
"1000790" -> "1000791"  [label="CFG: "];
"1000791" -> "1000790"  [label="AST: "];
"1000786" -> "1000790"  [label="CFG: "];
"1000790" -> "1001173"  [label="DDG: image->colormap[i].red"];
"1000790" -> "1000786"  [label="DDG: image->colormap[i].red"];
"1000223" -> "1000112"  [label="AST: "];
"1000223" -> "1000225"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000225" -> "1000223"  [label="AST: "];
"1000229" -> "1000223"  [label="CFG: "];
"1000223" -> "1001173"  [label="DDG: GetQuantumRange(5UL)"];
"1000223" -> "1001173"  [label="DDG: range"];
"1000225" -> "1000223"  [label="DDG: 5UL"];
"1000223" -> "1001059"  [label="DDG: range"];
"1000223" -> "1001097"  [label="DDG: range"];
"1000223" -> "1001130"  [label="DDG: range"];
"1000225" -> "1000226"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000700" -> "1000699"  [label="AST: "];
"1000701" -> "1000700"  [label="AST: "];
"1000713" -> "1000700"  [label="CFG: "];
"1000700" -> "1001173"  [label="DDG: ScaleQuantumToAny(image->colormap[i].blue,\n              range)"];
"1000700" -> "1000699"  [label="DDG: ScaleQuantumToAny(image->colormap[i].blue,\n              range)"];
"1000699" -> "1000695"  [label="AST: "];
"1000699" -> "1000711"  [label="CFG: "];
"1000711" -> "1000699"  [label="AST: "];
"1000695" -> "1000699"  [label="CFG: "];
"1000699" -> "1001173"  [label="DDG: (unsigned char) ScaleQuantumToAny(image->colormap[i].blue,\n              range)"];
"1000699" -> "1001173"  [label="DDG: (green & 0x07) << 5"];
"1000699" -> "1000695"  [label="DDG: (unsigned char) ScaleQuantumToAny(image->colormap[i].blue,\n              range)"];
"1000699" -> "1000695"  [label="DDG: (green & 0x07) << 5"];
"1000711" -> "1000699"  [label="DDG: green & 0x07"];
"1000711" -> "1000699"  [label="DDG: 5"];
"1000695" -> "1000681"  [label="AST: "];
"1000696" -> "1000695"  [label="AST: "];
"1000719" -> "1000695"  [label="CFG: "];
"1000695" -> "1001173"  [label="DDG: ((unsigned char) ScaleQuantumToAny(image->colormap[i].blue,\n              range)) | ((green & 0x07) << 5)"];
"1000684" -> "1000682"  [label="AST: "];
"1000685" -> "1000684"  [label="AST: "];
"1000682" -> "1000684"  [label="CFG: "];
"1000684" -> "1001173"  [label="DDG: ScaleQuantumToAny(image->colormap[i].green,\n              range)"];
"1000684" -> "1000682"  [label="DDG: ScaleQuantumToAny(image->colormap[i].green,\n              range)"];
"1000682" -> "1000681"  [label="AST: "];
"1000683" -> "1000682"  [label="AST: "];
"1000698" -> "1000682"  [label="CFG: "];
"1000682" -> "1001173"  [label="DDG: (unsigned char) ScaleQuantumToAny(image->colormap[i].green,\n              range)"];
"1000682" -> "1000712"  [label="DDG: green"];
"1000712" -> "1000711"  [label="AST: "];
"1000712" -> "1000714"  [label="CFG: "];
"1000713" -> "1000712"  [label="AST: "];
"1000714" -> "1000712"  [label="AST: "];
"1000715" -> "1000712"  [label="CFG: "];
"1000712" -> "1000711"  [label="DDG: green"];
"1000712" -> "1000711"  [label="DDG: 0x07"];
"1000712" -> "1000756"  [label="DDG: green"];
"1000711" -> "1000715"  [label="CFG: "];
"1000715" -> "1000711"  [label="AST: "];
"1000711" -> "1001173"  [label="DDG: green & 0x07"];
"1000756" -> "1000755"  [label="AST: "];
"1000756" -> "1000758"  [label="CFG: "];
"1000757" -> "1000756"  [label="AST: "];
"1000758" -> "1000756"  [label="AST: "];
"1000759" -> "1000756"  [label="CFG: "];
"1000756" -> "1001173"  [label="DDG: green"];
"1000756" -> "1000755"  [label="DDG: green"];
"1000756" -> "1000755"  [label="DDG: 0x18"];
"1000755" -> "1000741"  [label="AST: "];
"1000755" -> "1000759"  [label="CFG: "];
"1000759" -> "1000755"  [label="AST: "];
"1000741" -> "1000755"  [label="CFG: "];
"1000755" -> "1001173"  [label="DDG: green & 0x18"];
"1000755" -> "1000741"  [label="DDG: green & 0x18"];
"1000755" -> "1000741"  [label="DDG: 3"];
"1000741" -> "1000720"  [label="AST: "];
"1000742" -> "1000741"  [label="AST: "];
"1000720" -> "1000741"  [label="CFG: "];
"1000741" -> "1001173"  [label="DDG: (unsigned char) ScaleQuantumToAny(image->colormap[i].red,\n              range) << 2"];
"1000741" -> "1001173"  [label="DDG: (green & 0x18) >> 3"];
"1000741" -> "1000720"  [label="DDG: (unsigned char) ScaleQuantumToAny(image->colormap[i].red,\n              range) << 2"];
"1000741" -> "1000720"  [label="DDG: (green & 0x18) >> 3"];
"1000742" -> "1000741"  [label="DDG: (unsigned char) ScaleQuantumToAny(image->colormap[i].red,\n              range)"];
"1000742" -> "1000741"  [label="DDG: 2"];
"1000720" -> "1000716"  [label="AST: "];
"1000721" -> "1000720"  [label="AST: "];
"1000716" -> "1000720"  [label="CFG: "];
"1000720" -> "1001173"  [label="DDG: ((image->matte != MagickFalse) && (\n              (double) image->colormap[i].opacity < midpoint)) ? 0x80 : 0"];
"1000720" -> "1001173"  [label="DDG: ((unsigned char) ScaleQuantumToAny(image->colormap[i].red,\n              range) << 2) | ((green & 0x18) >> 3)"];
"1000720" -> "1000716"  [label="DDG: ((image->matte != MagickFalse) && (\n              (double) image->colormap[i].opacity < midpoint)) ? 0x80 : 0"];
"1000720" -> "1000716"  [label="DDG: ((unsigned char) ScaleQuantumToAny(image->colormap[i].red,\n              range) << 2) | ((green & 0x18) >> 3)"];
"1000716" -> "1000681"  [label="AST: "];
"1000717" -> "1000716"  [label="AST: "];
"1000673" -> "1000716"  [label="CFG: "];
"1000716" -> "1001173"  [label="DDG: *q++"];
"1000716" -> "1001173"  [label="DDG: (((image->matte != MagickFalse) && (\n              (double) image->colormap[i].opacity < midpoint)) ? 0x80 : 0) |\n              ((unsigned char) ScaleQuantumToAny(image->colormap[i].red,\n              range) << 2) | ((green & 0x18) >> 3)"];
"1000762" -> "1000761"  [label="AST: "];
"1000763" -> "1000762"  [label="AST: "];
"1000777" -> "1000762"  [label="CFG: "];
"1000762" -> "1001173"  [label="DDG: ScaleQuantumToChar(image->colormap[i].blue)"];
"1000774" -> "1000761"  [label="AST: "];
"1000775" -> "1000774"  [label="AST: "];
"1000789" -> "1000774"  [label="CFG: "];
"1000774" -> "1001173"  [label="DDG: ScaleQuantumToChar(image->colormap[i].green)"];
"1000743" -> "1000742"  [label="AST: "];
"1000744" -> "1000743"  [label="AST: "];
"1000754" -> "1000743"  [label="CFG: "];
"1000743" -> "1001173"  [label="DDG: ScaleQuantumToAny(image->colormap[i].red,\n              range)"];
"1000743" -> "1000742"  [label="DDG: ScaleQuantumToAny(image->colormap[i].red,\n              range)"];
"1000742" -> "1000754"  [label="CFG: "];
"1000754" -> "1000742"  [label="AST: "];
"1000757" -> "1000742"  [label="CFG: "];
"1000742" -> "1001173"  [label="DDG: (unsigned char) ScaleQuantumToAny(image->colormap[i].red,\n              range)"];
"1000786" -> "1000761"  [label="AST: "];
"1000787" -> "1000786"  [label="AST: "];
"1000673" -> "1000786"  [label="CFG: "];
"1000786" -> "1001173"  [label="DDG: ScaleQuantumToChar(image->colormap[i].red)"];
"1000786" -> "1001173"  [label="DDG: *q++"];
"1001059" -> "1001058"  [label="AST: "];
"1001059" -> "1001075"  [label="CFG: "];
"1001060" -> "1001059"  [label="AST: "];
"1001061" -> "1001059"  [label="AST: "];
"1001064" -> "1001059"  [label="AST: "];
"1001069" -> "1001059"  [label="AST: "];
"1001074" -> "1001059"  [label="AST: "];
"1001075" -> "1001059"  [label="AST: "];
"1001077" -> "1001059"  [label="CFG: "];
"1001059" -> "1001173"  [label="DDG: midpoint"];
"1001059" -> "1001173"  [label="DDG: tga_info.image_type"];
"1001059" -> "1001173"  [label="DDG: range"];
"1001059" -> "1001173"  [label="DDG: indexes-(count+1)"];
"1001059" -> "1001173"  [label="DDG: p-(count+1)"];
"1001059" -> "1001173"  [label="DDG: WriteTGAPixel(image,tga_info.image_type,indexes-(count+1),\n                      p-(count+1),range,midpoint)"];
"1001059" -> "1000838"  [label="DDG: image"];
"1001059" -> "1000906"  [label="DDG: tga_info.image_type"];
"1001059" -> "1000935"  [label="DDG: image"];
"1001059" -> "1001048"  [label="DDG: image"];
"1001048" -> "1001059"  [label="DDG: image"];
"1000111" -> "1001059"  [label="DDG: image"];
"1000906" -> "1001059"  [label="DDG: tga_info.image_type"];
"1001130" -> "1001059"  [label="DDG: tga_info.image_type"];
"1001130" -> "1001059"  [label="DDG: range"];
"1001130" -> "1001059"  [label="DDG: midpoint"];
"1000537" -> "1001059"  [label="DDG: tga_info.image_type"];
"1000927" -> "1001059"  [label="DDG: tga_info.image_type"];
"1001097" -> "1001059"  [label="DDG: tga_info.image_type"];
"1001097" -> "1001059"  [label="DDG: range"];
"1001097" -> "1001059"  [label="DDG: midpoint"];
"1001064" -> "1001059"  [label="DDG: indexes"];
"1001064" -> "1001059"  [label="DDG: count+1"];
"1001069" -> "1001059"  [label="DDG: p"];
"1001069" -> "1001059"  [label="DDG: count+1"];
"1000728" -> "1001059"  [label="DDG: midpoint"];
"1000117" -> "1001059"  [label="DDG: midpoint"];
"1001059" -> "1001088"  [label="DDG: image"];
"1001059" -> "1001097"  [label="DDG: tga_info.image_type"];
"1001059" -> "1001097"  [label="DDG: range"];
"1001059" -> "1001097"  [label="DDG: midpoint"];
"1001059" -> "1001130"  [label="DDG: tga_info.image_type"];
"1001059" -> "1001130"  [label="DDG: range"];
"1001059" -> "1001130"  [label="DDG: midpoint"];
"1001059" -> "1001153"  [label="DDG: image"];
"1001059" -> "1001169"  [label="DDG: image"];
"1000838" -> "1000836"  [label="AST: "];
"1000838" -> "1000846"  [label="CFG: "];
"1000839" -> "1000838"  [label="AST: "];
"1000840" -> "1000838"  [label="AST: "];
"1000841" -> "1000838"  [label="AST: "];
"1000842" -> "1000838"  [label="AST: "];
"1000845" -> "1000838"  [label="AST: "];
"1000846" -> "1000838"  [label="AST: "];
"1000836" -> "1000838"  [label="CFG: "];
"1000838" -> "1001173"  [label="DDG: &image->exception"];
"1000838" -> "1001173"  [label="DDG: image->columns"];
"1000838" -> "1001173"  [label="DDG: y"];
"1000838" -> "1000833"  [label="DDG: y"];
"1000838" -> "1000836"  [label="DDG: image->columns"];
"1000838" -> "1000836"  [label="DDG: image"];
"1000838" -> "1000836"  [label="DDG: &image->exception"];
"1000838" -> "1000836"  [label="DDG: 0"];
"1000838" -> "1000836"  [label="DDG: y"];
"1000838" -> "1000836"  [label="DDG: 1"];
"1000613" -> "1000838"  [label="DDG: image"];
"1001048" -> "1000838"  [label="DDG: image"];
"1001153" -> "1000838"  [label="DDG: image"];
"1001097" -> "1000838"  [label="DDG: image"];
"1000940" -> "1000838"  [label="DDG: image"];
"1000859" -> "1000838"  [label="DDG: image"];
"1000800" -> "1000838"  [label="DDG: image"];
"1001130" -> "1000838"  [label="DDG: image"];
"1000600" -> "1000838"  [label="DDG: image"];
"1000111" -> "1000838"  [label="DDG: image"];
"1000830" -> "1000838"  [label="DDG: y"];
"1000287" -> "1000838"  [label="DDG: image->columns"];
"1000875" -> "1000838"  [label="DDG: image->columns"];
"1001123" -> "1000838"  [label="DDG: image->columns"];
"1000899" -> "1000838"  [label="DDG: image->columns"];
"1000337" -> "1000838"  [label="DDG: &image->exception"];
"1000173" -> "1000838"  [label="DDG: &image->exception"];
"1000838" -> "1000859"  [label="DDG: image"];
"1000838" -> "1000875"  [label="DDG: image->columns"];
"1000838" -> "1001123"  [label="DDG: image->columns"];
"1000838" -> "1001156"  [label="DDG: y"];
"1000838" -> "1001169"  [label="DDG: image"];
"1000833" -> "1000820"  [label="AST: "];
"1000833" -> "1000834"  [label="CFG: "];
"1000834" -> "1000833"  [label="AST: "];
"1000831" -> "1000833"  [label="CFG: "];
"1000833" -> "1000830"  [label="DDG: y"];
"1001156" -> "1000833"  [label="DDG: y"];
"1000830" -> "1000820"  [label="AST: "];
"1000830" -> "1000832"  [label="CFG: "];
"1000831" -> "1000830"  [label="AST: "];
"1000832" -> "1000830"  [label="AST: "];
"1000837" -> "1000830"  [label="CFG: "];
"1001168" -> "1000830"  [label="CFG: "];
"1000830" -> "1001173"  [label="DDG: y >= 0"];
"1000830" -> "1001173"  [label="DDG: y"];
"1000821" -> "1000830"  [label="DDG: y"];
"1000836" -> "1000835"  [label="AST: "];
"1000837" -> "1000836"  [label="AST: "];
"1000852" -> "1000836"  [label="CFG: "];
"1000836" -> "1001173"  [label="DDG: GetVirtualPixels(image,0,y,image->columns,1,&image->exception)"];
"1000836" -> "1000851"  [label="DDG: p"];
"1000851" -> "1000850"  [label="AST: "];
"1000851" -> "1000853"  [label="CFG: "];
"1000852" -> "1000851"  [label="AST: "];
"1000853" -> "1000851"  [label="AST: "];
"1000856" -> "1000851"  [label="CFG: "];
"1000858" -> "1000851"  [label="CFG: "];
"1000851" -> "1001173"  [label="DDG: p == (const PixelPacket *) NULL"];
"1000851" -> "1001173"  [label="DDG: (const PixelPacket *) NULL"];
"1000851" -> "1001173"  [label="DDG: p"];
"1000853" -> "1000851"  [label="DDG: NULL"];
"1000851" -> "1000935"  [label="DDG: p"];
"1000851" -> "1000937"  [label="DDG: p"];
"1000851" -> "1000953"  [label="DDG: p"];
"1000851" -> "1000954"  [label="DDG: p"];
"1000851" -> "1000957"  [label="DDG: p"];
"1000851" -> "1000958"  [label="DDG: p"];
"1000851" -> "1000965"  [label="DDG: p"];
"1000851" -> "1000966"  [label="DDG: p"];
"1000851" -> "1000969"  [label="DDG: p"];
"1000851" -> "1000970"  [label="DDG: p"];
"1000851" -> "1000976"  [label="DDG: p"];
"1000851" -> "1000977"  [label="DDG: p"];
"1000851" -> "1000980"  [label="DDG: p"];
"1000851" -> "1000981"  [label="DDG: p"];
"1000851" -> "1001016"  [label="DDG: p"];
"1000851" -> "1001069"  [label="DDG: p"];
"1000851" -> "1001097"  [label="DDG: p"];
"1000851" -> "1001138"  [label="DDG: p"];
"1000935" -> "1000934"  [label="AST: "];
"1000935" -> "1000937"  [label="CFG: "];
"1000936" -> "1000935"  [label="AST: "];
"1000937" -> "1000935"  [label="AST: "];
"1000941" -> "1000935"  [label="CFG: "];
"1000935" -> "1001173"  [label="DDG: p+i"];
"1000935" -> "1000934"  [label="DDG: image"];
"1000935" -> "1000934"  [label="DDG: p+i"];
"1001048" -> "1000935"  [label="DDG: image"];
"1001097" -> "1000935"  [label="DDG: image"];
"1000940" -> "1000935"  [label="DDG: image"];
"1000859" -> "1000935"  [label="DDG: image"];
"1000111" -> "1000935"  [label="DDG: image"];
"1001069" -> "1000935"  [label="DDG: p"];
"1001016" -> "1000935"  [label="DDG: p"];
"1001106" -> "1000935"  [label="DDG: p"];
"1000886" -> "1000935"  [label="DDG: i"];
"1000935" -> "1000940"  [label="DDG: image"];
"1000934" -> "1000933"  [label="AST: "];
"1000934" -> "1000940"  [label="CFG: "];
"1000940" -> "1000934"  [label="AST: "];
"1000947" -> "1000934"  [label="CFG: "];
"1001007" -> "1000934"  [label="CFG: "];
"1000934" -> "1001173"  [label="DDG: GetPixelLuma(image,p+i)"];
"1000934" -> "1001173"  [label="DDG: GetPixelLuma(image,p+i) != GetPixelLuma(image,p+(i-1))"];
"1000934" -> "1001173"  [label="DDG: GetPixelLuma(image,p+(i-1))"];
"1000940" -> "1000934"  [label="DDG: image"];
"1000940" -> "1000934"  [label="DDG: p+(i-1)"];
"1000940" -> "1000942"  [label="CFG: "];
"1000941" -> "1000940"  [label="AST: "];
"1000942" -> "1000940"  [label="AST: "];
"1000940" -> "1001173"  [label="DDG: p+(i-1)"];
"1000111" -> "1000940"  [label="DDG: image"];
"1000944" -> "1000940"  [label="DDG: i"];
"1000944" -> "1000940"  [label="DDG: 1"];
"1000940" -> "1001048"  [label="DDG: image"];
"1000940" -> "1001088"  [label="DDG: image"];
"1000940" -> "1001153"  [label="DDG: image"];
"1000940" -> "1001169"  [label="DDG: image"];
"1001048" -> "1001046"  [label="AST: "];
"1001048" -> "1001050"  [label="CFG: "];
"1001049" -> "1001048"  [label="AST: "];
"1001050" -> "1001048"  [label="AST: "];
"1001046" -> "1001048"  [label="CFG: "];
"1001048" -> "1001173"  [label="DDG: (unsigned char) (--count)"];
"1001048" -> "1001046"  [label="DDG: image"];
"1001048" -> "1001046"  [label="DDG: (unsigned char) (--count)"];
"1001097" -> "1001048"  [label="DDG: image"];
"1000859" -> "1001048"  [label="DDG: image"];
"1000111" -> "1001048"  [label="DDG: image"];
"1001048" -> "1001088"  [label="DDG: image"];
"1001048" -> "1001153"  [label="DDG: image"];
"1001048" -> "1001169"  [label="DDG: image"];
"1001046" -> "1001045"  [label="AST: "];
"1001047" -> "1001046"  [label="AST: "];
"1001056" -> "1001046"  [label="CFG: "];
"1001046" -> "1001173"  [label="DDG: WriteBlobByte(image,(unsigned char) (--count))"];
"1001046" -> "1001173"  [label="DDG: (void) WriteBlobByte(image,(unsigned char) (--count))"];
"1001088" -> "1001086"  [label="AST: "];
"1001088" -> "1001090"  [label="CFG: "];
"1001089" -> "1001088"  [label="AST: "];
"1001090" -> "1001088"  [label="AST: "];
"1001086" -> "1001088"  [label="CFG: "];
"1001088" -> "1001173"  [label="DDG: (unsigned char) ((i-1) | 0x80)"];
"1001088" -> "1001086"  [label="DDG: image"];
"1001088" -> "1001086"  [label="DDG: (unsigned char) ((i-1) | 0x80)"];
"1001097" -> "1001088"  [label="DDG: image"];
"1000859" -> "1001088"  [label="DDG: image"];
"1000111" -> "1001088"  [label="DDG: image"];
"1001090" -> "1001088"  [label="DDG: (i-1) | 0x80"];
"1001088" -> "1001097"  [label="DDG: image"];
"1001086" -> "1001085"  [label="AST: "];
"1001087" -> "1001086"  [label="AST: "];
"1001098" -> "1001086"  [label="CFG: "];
"1001086" -> "1001173"  [label="DDG: WriteBlobByte(image,(unsigned char) ((i-1) | 0x80))"];
"1001086" -> "1001173"  [label="DDG: (void) WriteBlobByte(image,(unsigned char) ((i-1) | 0x80))"];
"1001097" -> "1001085"  [label="AST: "];
"1001097" -> "1001105"  [label="CFG: "];
"1001098" -> "1001097"  [label="AST: "];
"1001099" -> "1001097"  [label="AST: "];
"1001102" -> "1001097"  [label="AST: "];
"1001103" -> "1001097"  [label="AST: "];
"1001104" -> "1001097"  [label="AST: "];
"1001105" -> "1001097"  [label="AST: "];
"1001107" -> "1001097"  [label="CFG: "];
"1001097" -> "1001173"  [label="DDG: WriteTGAPixel(image,tga_info.image_type,indexes,p,range,midpoint)"];
"1001097" -> "1001173"  [label="DDG: midpoint"];
"1001097" -> "1001173"  [label="DDG: tga_info.image_type"];
"1001097" -> "1001173"  [label="DDG: range"];
"1001097" -> "1000906"  [label="DDG: tga_info.image_type"];
"1000111" -> "1001097"  [label="DDG: image"];
"1000906" -> "1001097"  [label="DDG: tga_info.image_type"];
"1001130" -> "1001097"  [label="DDG: tga_info.image_type"];
"1001130" -> "1001097"  [label="DDG: range"];
"1001130" -> "1001097"  [label="DDG: midpoint"];
"1000537" -> "1001097"  [label="DDG: tga_info.image_type"];
"1000927" -> "1001097"  [label="DDG: tga_info.image_type"];
"1001109" -> "1001097"  [label="DDG: indexes"];
"1000857" -> "1001097"  [label="DDG: indexes"];
"1001064" -> "1001097"  [label="DDG: indexes"];
"1001019" -> "1001097"  [label="DDG: indexes"];
"1001069" -> "1001097"  [label="DDG: p"];
"1001016" -> "1001097"  [label="DDG: p"];
"1001106" -> "1001097"  [label="DDG: p"];
"1000728" -> "1001097"  [label="DDG: midpoint"];
"1000117" -> "1001097"  [label="DDG: midpoint"];
"1001097" -> "1001106"  [label="DDG: p"];
"1001097" -> "1001109"  [label="DDG: indexes"];
"1001097" -> "1001130"  [label="DDG: tga_info.image_type"];
"1001097" -> "1001130"  [label="DDG: range"];
"1001097" -> "1001130"  [label="DDG: midpoint"];
"1001097" -> "1001153"  [label="DDG: image"];
"1001097" -> "1001169"  [label="DDG: image"];
"1000906" -> "1000905"  [label="AST: "];
"1000906" -> "1000910"  [label="CFG: "];
"1000907" -> "1000906"  [label="AST: "];
"1000910" -> "1000906"  [label="AST: "];
"1000916" -> "1000906"  [label="CFG: "];
"1000929" -> "1000906"  [label="CFG: "];
"1000906" -> "1001173"  [label="DDG: tga_info.image_type == TGARLEColormap"];
"1000906" -> "1001173"  [label="DDG: tga_info.image_type"];
"1000906" -> "1001173"  [label="DDG: TGARLEColormap"];
"1001130" -> "1000906"  [label="DDG: tga_info.image_type"];
"1000537" -> "1000906"  [label="DDG: tga_info.image_type"];
"1000927" -> "1000906"  [label="DDG: tga_info.image_type"];
"1000906" -> "1000927"  [label="DDG: tga_info.image_type"];
"1000906" -> "1001130"  [label="DDG: tga_info.image_type"];
"1000927" -> "1000926"  [label="AST: "];
"1000927" -> "1000931"  [label="CFG: "];
"1000928" -> "1000927"  [label="AST: "];
"1000931" -> "1000927"  [label="AST: "];
"1000936" -> "1000927"  [label="CFG: "];
"1000955" -> "1000927"  [label="CFG: "];
"1000927" -> "1001173"  [label="DDG: tga_info.image_type == TGARLEMonochrome"];
"1000927" -> "1001173"  [label="DDG: tga_info.image_type"];
"1000927" -> "1001173"  [label="DDG: TGARLEMonochrome"];
"1000927" -> "1001130"  [label="DDG: tga_info.image_type"];
"1001130" -> "1001117"  [label="AST: "];
"1001130" -> "1001141"  [label="CFG: "];
"1001131" -> "1001130"  [label="AST: "];
"1001132" -> "1001130"  [label="AST: "];
"1001135" -> "1001130"  [label="AST: "];
"1001138" -> "1001130"  [label="AST: "];
"1001140" -> "1001130"  [label="AST: "];
"1001141" -> "1001130"  [label="AST: "];
"1001129" -> "1001130"  [label="CFG: "];
"1001130" -> "1001173"  [label="DDG: WriteTGAPixel(image,tga_info.image_type,indexes+x,p++,range,midpoint)"];
"1001130" -> "1001173"  [label="DDG: indexes+x"];
"1001130" -> "1001173"  [label="DDG: range"];
"1001130" -> "1001173"  [label="DDG: tga_info.image_type"];
"1001130" -> "1001173"  [label="DDG: midpoint"];
"1000859" -> "1001130"  [label="DDG: image"];
"1000111" -> "1001130"  [label="DDG: image"];
"1000537" -> "1001130"  [label="DDG: tga_info.image_type"];
"1000857" -> "1001130"  [label="DDG: indexes"];
"1001121" -> "1001130"  [label="DDG: x"];
"1001138" -> "1001130"  [label="DDG: p"];
"1000728" -> "1001130"  [label="DDG: midpoint"];
"1000117" -> "1001130"  [label="DDG: midpoint"];
"1001130" -> "1001153"  [label="DDG: image"];
"1001130" -> "1001169"  [label="DDG: image"];
"1001153" -> "1001151"  [label="AST: "];
"1001153" -> "1001159"  [label="CFG: "];
"1001154" -> "1001153"  [label="AST: "];
"1001155" -> "1001153"  [label="AST: "];
"1001156" -> "1001153"  [label="AST: "];
"1001159" -> "1001153"  [label="AST: "];
"1001151" -> "1001153"  [label="CFG: "];
"1001153" -> "1001173"  [label="DDG: SaveImageTag"];
"1001153" -> "1001173"  [label="DDG: (MagickOffsetType) y"];
"1001153" -> "1001173"  [label="DDG: image->rows"];
"1001153" -> "1001151"  [label="DDG: image"];
"1001153" -> "1001151"  [label="DDG: SaveImageTag"];
"1001153" -> "1001151"  [label="DDG: (MagickOffsetType) y"];
"1001153" -> "1001151"  [label="DDG: image->rows"];
"1000859" -> "1001153"  [label="DDG: image"];
"1000111" -> "1001153"  [label="DDG: image"];
"1001156" -> "1001153"  [label="DDG: y"];
"1000825" -> "1001153"  [label="DDG: image->rows"];
"1001153" -> "1001169"  [label="DDG: image"];
"1001151" -> "1001150"  [label="AST: "];
"1001152" -> "1001151"  [label="AST: "];
"1001164" -> "1001151"  [label="CFG: "];
"1001151" -> "1001173"  [label="DDG: SetImageProgress(image,SaveImageTag,(MagickOffsetType) y,\n          image->rows)"];
"1001151" -> "1001163"  [label="DDG: status"];
"1001163" -> "1001162"  [label="AST: "];
"1001163" -> "1001165"  [label="CFG: "];
"1001164" -> "1001163"  [label="AST: "];
"1001165" -> "1001163"  [label="AST: "];
"1001166" -> "1001163"  [label="CFG: "];
"1000834" -> "1001163"  [label="CFG: "];
"1001163" -> "1001173"  [label="DDG: status == MagickFalse"];
"1001163" -> "1001173"  [label="DDG: MagickFalse"];
"1001163" -> "1001173"  [label="DDG: status"];
"1001163" -> "1000989"  [label="DDG: MagickFalse"];
"1000989" -> "1001163"  [label="DDG: MagickFalse"];
"1000723" -> "1001163"  [label="DDG: MagickFalse"];
"1000182" -> "1001163"  [label="DDG: MagickFalse"];
"1000409" -> "1001163"  [label="DDG: MagickFalse"];
"1000391" -> "1001163"  [label="DDG: MagickFalse"];
"1000336" -> "1001163"  [label="DDG: MagickFalse"];
"1000485" -> "1001163"  [label="DDG: MagickFalse"];
"1000331" -> "1001163"  [label="DDG: MagickFalse"];
"1000989" -> "1000988"  [label="AST: "];
"1000989" -> "1000993"  [label="CFG: "];
"1000990" -> "1000989"  [label="AST: "];
"1000993" -> "1000989"  [label="AST: "];
"1000997" -> "1000989"  [label="CFG: "];
"1000988" -> "1000989"  [label="CFG: "];
"1000989" -> "1001173"  [label="DDG: MagickFalse"];
"1000989" -> "1001173"  [label="DDG: image->matte"];
"1000989" -> "1000988"  [label="DDG: image->matte"];
"1000989" -> "1000988"  [label="DDG: MagickFalse"];
"1000723" -> "1000989"  [label="DDG: image->matte"];
"1000723" -> "1000989"  [label="DDG: MagickFalse"];
"1000391" -> "1000989"  [label="DDG: image->matte"];
"1000391" -> "1000989"  [label="DDG: MagickFalse"];
"1000331" -> "1000989"  [label="DDG: image->matte"];
"1000331" -> "1000989"  [label="DDG: MagickFalse"];
"1000409" -> "1000989"  [label="DDG: image->matte"];
"1000409" -> "1000989"  [label="DDG: MagickFalse"];
"1000182" -> "1000989"  [label="DDG: MagickFalse"];
"1000336" -> "1000989"  [label="DDG: MagickFalse"];
"1000485" -> "1000989"  [label="DDG: MagickFalse"];
"1000988" -> "1000987"  [label="AST: "];
"1000988" -> "1000994"  [label="CFG: "];
"1000994" -> "1000988"  [label="AST: "];
"1001005" -> "1000988"  [label="CFG: "];
"1001007" -> "1000988"  [label="CFG: "];
"1000988" -> "1001173"  [label="DDG: (image->matte != MagickFalse) &&\n                      (GetPixelAlpha(p+i) != GetPixelAlpha(p+(i-1)))"];
"1000988" -> "1001173"  [label="DDG: image->matte != MagickFalse"];
"1000988" -> "1001173"  [label="DDG: GetPixelAlpha(p+i) != GetPixelAlpha(p+(i-1))"];
"1000994" -> "1000988"  [label="DDG: GetPixelAlpha(p+i)"];
"1000994" -> "1000988"  [label="DDG: GetPixelAlpha(p+(i-1))"];
"1001169" -> "1001167"  [label="AST: "];
"1001169" -> "1001170"  [label="CFG: "];
"1001170" -> "1001169"  [label="AST: "];
"1001167" -> "1001169"  [label="CFG: "];
"1001169" -> "1001173"  [label="DDG: image"];
"1001169" -> "1001167"  [label="DDG: image"];
"1000613" -> "1001169"  [label="DDG: image"];
"1000859" -> "1001169"  [label="DDG: image"];
"1000600" -> "1001169"  [label="DDG: image"];
"1000800" -> "1001169"  [label="DDG: image"];
"1000111" -> "1001169"  [label="DDG: image"];
"1001167" -> "1000112"  [label="AST: "];
"1001168" -> "1001167"  [label="AST: "];
"1001172" -> "1001167"  [label="CFG: "];
"1001167" -> "1001173"  [label="DDG: (void) CloseBlob(image)"];
"1001167" -> "1001173"  [label="DDG: CloseBlob(image)"];
"1001106" -> "1001085"  [label="AST: "];
"1001106" -> "1001108"  [label="CFG: "];
"1001107" -> "1001106"  [label="AST: "];
"1001108" -> "1001106"  [label="AST: "];
"1001110" -> "1001106"  [label="CFG: "];
"1001106" -> "1001173"  [label="DDG: p"];
"1001106" -> "1000937"  [label="DDG: p"];
"1001106" -> "1000953"  [label="DDG: p"];
"1001106" -> "1000954"  [label="DDG: p"];
"1001106" -> "1000957"  [label="DDG: p"];
"1001106" -> "1000958"  [label="DDG: p"];
"1001106" -> "1000965"  [label="DDG: p"];
"1001106" -> "1000966"  [label="DDG: p"];
"1001106" -> "1000969"  [label="DDG: p"];
"1001106" -> "1000970"  [label="DDG: p"];
"1001106" -> "1000976"  [label="DDG: p"];
"1001106" -> "1000977"  [label="DDG: p"];
"1001106" -> "1000980"  [label="DDG: p"];
"1001106" -> "1000981"  [label="DDG: p"];
"1001106" -> "1001016"  [label="DDG: p"];
"1001106" -> "1001069"  [label="DDG: p"];
"1001093" -> "1001106"  [label="DDG: i"];
"1000937" -> "1000939"  [label="CFG: "];
"1000938" -> "1000937"  [label="AST: "];
"1000939" -> "1000937"  [label="AST: "];
"1001069" -> "1000937"  [label="DDG: p"];
"1001016" -> "1000937"  [label="DDG: p"];
"1000886" -> "1000937"  [label="DDG: i"];
"1000953" -> "1000952"  [label="AST: "];
"1000953" -> "1000954"  [label="CFG: "];
"1000954" -> "1000953"  [label="AST: "];
"1000959" -> "1000953"  [label="CFG: "];
"1000953" -> "1001173"  [label="DDG: p+i"];
"1000953" -> "1000952"  [label="DDG: p+i"];
"1001069" -> "1000953"  [label="DDG: p"];
"1001016" -> "1000953"  [label="DDG: p"];
"1000886" -> "1000953"  [label="DDG: i"];
"1000952" -> "1000951"  [label="AST: "];
"1000952" -> "1000957"  [label="CFG: "];
"1000957" -> "1000952"  [label="AST: "];
"1000967" -> "1000952"  [label="CFG: "];
"1000951" -> "1000952"  [label="CFG: "];
"1000952" -> "1001173"  [label="DDG: GetPixelBlue(p+i)"];
"1000952" -> "1001173"  [label="DDG: GetPixelBlue(p+(i-1))"];
"1000952" -> "1000951"  [label="DDG: GetPixelBlue(p+i)"];
"1000952" -> "1000951"  [label="DDG: GetPixelBlue(p+(i-1))"];
"1000957" -> "1000952"  [label="DDG: p+(i-1)"];
"1000951" -> "1000950"  [label="AST: "];
"1000951" -> "1000963"  [label="CFG: "];
"1000963" -> "1000951"  [label="AST: "];
"1000986" -> "1000951"  [label="CFG: "];
"1000991" -> "1000951"  [label="CFG: "];
"1000951" -> "1001173"  [label="DDG: GetPixelBlue(p+i) != GetPixelBlue(p+(i-1))"];
"1000951" -> "1001173"  [label="DDG: (GetPixelBlue(p+i) != GetPixelBlue(p+(i-1))) ||\n                      (GetPixelGreen(p+i) != GetPixelGreen(p+(i-1))) ||\n                      (GetPixelRed(p+i) != GetPixelRed(p+(i-1)))"];
"1000951" -> "1001173"  [label="DDG: (GetPixelGreen(p+i) != GetPixelGreen(p+(i-1))) ||\n                      (GetPixelRed(p+i) != GetPixelRed(p+(i-1)))"];
"1000963" -> "1000951"  [label="DDG: GetPixelGreen(p+i) != GetPixelGreen(p+(i-1))"];
"1000963" -> "1000951"  [label="DDG: GetPixelRed(p+i) != GetPixelRed(p+(i-1))"];
"1000954" -> "1000956"  [label="CFG: "];
"1000955" -> "1000954"  [label="AST: "];
"1000956" -> "1000954"  [label="AST: "];
"1001069" -> "1000954"  [label="DDG: p"];
"1001016" -> "1000954"  [label="DDG: p"];
"1000886" -> "1000954"  [label="DDG: i"];
"1000957" -> "1000958"  [label="CFG: "];
"1000958" -> "1000957"  [label="AST: "];
"1000957" -> "1001173"  [label="DDG: p+(i-1)"];
"1001069" -> "1000957"  [label="DDG: p"];
"1001016" -> "1000957"  [label="DDG: p"];
"1000960" -> "1000957"  [label="DDG: i"];
"1000960" -> "1000957"  [label="DDG: 1"];
"1000958" -> "1000960"  [label="CFG: "];
"1000959" -> "1000958"  [label="AST: "];
"1000960" -> "1000958"  [label="AST: "];
"1000958" -> "1001173"  [label="DDG: i-1"];
"1000958" -> "1001173"  [label="DDG: p"];
"1001069" -> "1000958"  [label="DDG: p"];
"1001016" -> "1000958"  [label="DDG: p"];
"1000960" -> "1000958"  [label="DDG: i"];
"1000960" -> "1000958"  [label="DDG: 1"];
"1000965" -> "1000964"  [label="AST: "];
"1000965" -> "1000966"  [label="CFG: "];
"1000966" -> "1000965"  [label="AST: "];
"1000971" -> "1000965"  [label="CFG: "];
"1000965" -> "1001173"  [label="DDG: p+i"];
"1000965" -> "1000964"  [label="DDG: p+i"];
"1001069" -> "1000965"  [label="DDG: p"];
"1001016" -> "1000965"  [label="DDG: p"];
"1000960" -> "1000965"  [label="DDG: i"];
"1000964" -> "1000963"  [label="AST: "];
"1000964" -> "1000969"  [label="CFG: "];
"1000969" -> "1000964"  [label="AST: "];
"1000978" -> "1000964"  [label="CFG: "];
"1000963" -> "1000964"  [label="CFG: "];
"1000964" -> "1001173"  [label="DDG: GetPixelGreen(p+i)"];
"1000964" -> "1001173"  [label="DDG: GetPixelGreen(p+(i-1))"];
"1000964" -> "1000963"  [label="DDG: GetPixelGreen(p+i)"];
"1000964" -> "1000963"  [label="DDG: GetPixelGreen(p+(i-1))"];
"1000969" -> "1000964"  [label="DDG: p+(i-1)"];
"1000963" -> "1000975"  [label="CFG: "];
"1000975" -> "1000963"  [label="AST: "];
"1000963" -> "1001173"  [label="DDG: GetPixelGreen(p+i) != GetPixelGreen(p+(i-1))"];
"1000963" -> "1001173"  [label="DDG: GetPixelRed(p+i) != GetPixelRed(p+(i-1))"];
"1000975" -> "1000963"  [label="DDG: GetPixelRed(p+i)"];
"1000975" -> "1000963"  [label="DDG: GetPixelRed(p+(i-1))"];
"1000966" -> "1000968"  [label="CFG: "];
"1000967" -> "1000966"  [label="AST: "];
"1000968" -> "1000966"  [label="AST: "];
"1001069" -> "1000966"  [label="DDG: p"];
"1001016" -> "1000966"  [label="DDG: p"];
"1000960" -> "1000966"  [label="DDG: i"];
"1000969" -> "1000970"  [label="CFG: "];
"1000970" -> "1000969"  [label="AST: "];
"1000969" -> "1001173"  [label="DDG: p+(i-1)"];
"1001069" -> "1000969"  [label="DDG: p"];
"1001016" -> "1000969"  [label="DDG: p"];
"1000972" -> "1000969"  [label="DDG: i"];
"1000972" -> "1000969"  [label="DDG: 1"];
"1000970" -> "1000972"  [label="CFG: "];
"1000971" -> "1000970"  [label="AST: "];
"1000972" -> "1000970"  [label="AST: "];
"1000970" -> "1001173"  [label="DDG: i-1"];
"1000970" -> "1001173"  [label="DDG: p"];
"1001069" -> "1000970"  [label="DDG: p"];
"1001016" -> "1000970"  [label="DDG: p"];
"1000972" -> "1000970"  [label="DDG: i"];
"1000972" -> "1000970"  [label="DDG: 1"];
"1000976" -> "1000975"  [label="AST: "];
"1000976" -> "1000977"  [label="CFG: "];
"1000977" -> "1000976"  [label="AST: "];
"1000982" -> "1000976"  [label="CFG: "];
"1000976" -> "1001173"  [label="DDG: p+i"];
"1000976" -> "1000975"  [label="DDG: p+i"];
"1001069" -> "1000976"  [label="DDG: p"];
"1001016" -> "1000976"  [label="DDG: p"];
"1000972" -> "1000976"  [label="DDG: i"];
"1000975" -> "1000980"  [label="CFG: "];
"1000980" -> "1000975"  [label="AST: "];
"1000975" -> "1001173"  [label="DDG: GetPixelRed(p+(i-1))"];
"1000975" -> "1001173"  [label="DDG: GetPixelRed(p+i)"];
"1000980" -> "1000975"  [label="DDG: p+(i-1)"];
"1000977" -> "1000979"  [label="CFG: "];
"1000978" -> "1000977"  [label="AST: "];
"1000979" -> "1000977"  [label="AST: "];
"1001069" -> "1000977"  [label="DDG: p"];
"1001016" -> "1000977"  [label="DDG: p"];
"1000972" -> "1000977"  [label="DDG: i"];
"1000980" -> "1000981"  [label="CFG: "];
"1000981" -> "1000980"  [label="AST: "];
"1000980" -> "1001173"  [label="DDG: p+(i-1)"];
"1001069" -> "1000980"  [label="DDG: p"];
"1001016" -> "1000980"  [label="DDG: p"];
"1000983" -> "1000980"  [label="DDG: i"];
"1000983" -> "1000980"  [label="DDG: 1"];
"1000981" -> "1000983"  [label="CFG: "];
"1000982" -> "1000981"  [label="AST: "];
"1000983" -> "1000981"  [label="AST: "];
"1000981" -> "1001173"  [label="DDG: p"];
"1000981" -> "1001173"  [label="DDG: i-1"];
"1001069" -> "1000981"  [label="DDG: p"];
"1001016" -> "1000981"  [label="DDG: p"];
"1000983" -> "1000981"  [label="DDG: i"];
"1000983" -> "1000981"  [label="DDG: 1"];
"1001016" -> "1001012"  [label="AST: "];
"1001016" -> "1001018"  [label="CFG: "];
"1001017" -> "1001016"  [label="AST: "];
"1001018" -> "1001016"  [label="AST: "];
"1001020" -> "1001016"  [label="CFG: "];
"1001016" -> "1001173"  [label="DDG: p"];
"1001009" -> "1001016"  [label="DDG: i"];
"1001069" -> "1001016"  [label="DDG: p"];
"1001016" -> "1001069"  [label="DDG: p"];
"1001069" -> "1001071"  [label="CFG: "];
"1001070" -> "1001069"  [label="AST: "];
"1001071" -> "1001069"  [label="AST: "];
"1001074" -> "1001069"  [label="CFG: "];
"1001069" -> "1001173"  [label="DDG: p"];
"1001069" -> "1001173"  [label="DDG: count+1"];
"1001055" -> "1001069"  [label="DDG: count"];
"1001109" -> "1001085"  [label="AST: "];
"1001109" -> "1001111"  [label="CFG: "];
"1001110" -> "1001109"  [label="AST: "];
"1001111" -> "1001109"  [label="AST: "];
"1001113" -> "1001109"  [label="CFG: "];
"1001109" -> "1001173"  [label="DDG: indexes"];
"1001109" -> "1000914"  [label="DDG: indexes"];
"1001109" -> "1000915"  [label="DDG: indexes"];
"1001109" -> "1001019"  [label="DDG: indexes"];
"1001109" -> "1001064"  [label="DDG: indexes"];
"1001093" -> "1001109"  [label="DDG: i"];
"1000914" -> "1000913"  [label="AST: "];
"1000914" -> "1000915"  [label="CFG: "];
"1000915" -> "1000914"  [label="AST: "];
"1000920" -> "1000914"  [label="CFG: "];
"1000914" -> "1001173"  [label="DDG: indexes+i"];
"1000914" -> "1000913"  [label="DDG: indexes+i"];
"1000857" -> "1000914"  [label="DDG: indexes"];
"1001064" -> "1000914"  [label="DDG: indexes"];
"1001019" -> "1000914"  [label="DDG: indexes"];
"1000886" -> "1000914"  [label="DDG: i"];
"1000913" -> "1000912"  [label="AST: "];
"1000913" -> "1000918"  [label="CFG: "];
"1000918" -> "1000913"  [label="AST: "];
"1000924" -> "1000913"  [label="CFG: "];
"1001007" -> "1000913"  [label="CFG: "];
"1000913" -> "1001173"  [label="DDG: GetPixelIndex(indexes+(i-1))"];
"1000913" -> "1001173"  [label="DDG: GetPixelIndex(indexes+i)"];
"1000913" -> "1001173"  [label="DDG: GetPixelIndex(indexes+i) != GetPixelIndex(indexes+(i-1))"];
"1000918" -> "1000913"  [label="DDG: indexes+(i-1)"];
"1000915" -> "1000917"  [label="CFG: "];
"1000916" -> "1000915"  [label="AST: "];
"1000917" -> "1000915"  [label="AST: "];
"1000857" -> "1000915"  [label="DDG: indexes"];
"1001064" -> "1000915"  [label="DDG: indexes"];
"1001019" -> "1000915"  [label="DDG: indexes"];
"1000886" -> "1000915"  [label="DDG: i"];
"1001019" -> "1001012"  [label="AST: "];
"1001019" -> "1001021"  [label="CFG: "];
"1001020" -> "1001019"  [label="AST: "];
"1001021" -> "1001019"  [label="AST: "];
"1001025" -> "1001019"  [label="CFG: "];
"1001019" -> "1001173"  [label="DDG: indexes"];
"1001009" -> "1001019"  [label="DDG: i"];
"1000857" -> "1001019"  [label="DDG: indexes"];
"1001064" -> "1001019"  [label="DDG: indexes"];
"1001019" -> "1001064"  [label="DDG: indexes"];
"1001064" -> "1001066"  [label="CFG: "];
"1001065" -> "1001064"  [label="AST: "];
"1001066" -> "1001064"  [label="AST: "];
"1001070" -> "1001064"  [label="CFG: "];
"1001064" -> "1001173"  [label="DDG: indexes"];
"1000857" -> "1001064"  [label="DDG: indexes"];
"1001055" -> "1001064"  [label="DDG: count"];
"1001138" -> "1001139"  [label="CFG: "];
"1001139" -> "1001138"  [label="AST: "];
"1001140" -> "1001138"  [label="CFG: "];
"1001138" -> "1001173"  [label="DDG: p"];
"1000859" -> "1000857"  [label="AST: "];
"1000859" -> "1000860"  [label="CFG: "];
"1000860" -> "1000859"  [label="AST: "];
"1000857" -> "1000859"  [label="CFG: "];
"1000859" -> "1000857"  [label="DDG: image"];
"1000111" -> "1000859"  [label="DDG: image"];
"1000857" -> "1000835"  [label="AST: "];
"1000858" -> "1000857"  [label="AST: "];
"1000863" -> "1000857"  [label="CFG: "];
"1000857" -> "1001173"  [label="DDG: indexes"];
"1000857" -> "1001173"  [label="DDG: GetVirtualIndexQueue(image)"];
"1000857" -> "1001135"  [label="DDG: indexes"];
"1001135" -> "1001137"  [label="CFG: "];
"1001136" -> "1001135"  [label="AST: "];
"1001137" -> "1001135"  [label="AST: "];
"1001139" -> "1001135"  [label="CFG: "];
"1001135" -> "1001173"  [label="DDG: indexes"];
"1001121" -> "1001135"  [label="DDG: x"];
"1000875" -> "1000873"  [label="AST: "];
"1000875" -> "1000877"  [label="CFG: "];
"1000876" -> "1000875"  [label="AST: "];
"1000877" -> "1000875"  [label="AST: "];
"1000873" -> "1000875"  [label="CFG: "];
"1000875" -> "1001173"  [label="DDG: image->columns"];
"1000875" -> "1000873"  [label="DDG: image->columns"];
"1000899" -> "1000875"  [label="DDG: image->columns"];
"1001035" -> "1000875"  [label="DDG: image->columns"];
"1000875" -> "1000899"  [label="DDG: image->columns"];
"1000875" -> "1001035"  [label="DDG: image->columns"];
"1000873" -> "1000872"  [label="AST: "];
"1000874" -> "1000873"  [label="AST: "];
"1000882" -> "1000873"  [label="CFG: "];
"1001145" -> "1000873"  [label="CFG: "];
"1000873" -> "1001173"  [label="DDG: x"];
"1000873" -> "1001173"  [label="DDG: x < (ssize_t) image->columns"];
"1000873" -> "1001173"  [label="DDG: (ssize_t) image->columns"];
"1001112" -> "1000873"  [label="DDG: x"];
"1000866" -> "1000873"  [label="DDG: x"];
"1000873" -> "1000895"  [label="DDG: x"];
"1000873" -> "1000896"  [label="DDG: x"];
"1000873" -> "1001031"  [label="DDG: x"];
"1000873" -> "1001032"  [label="DDG: x"];
"1000873" -> "1001112"  [label="DDG: x"];
"1000895" -> "1000889"  [label="AST: "];
"1000895" -> "1000899"  [label="CFG: "];
"1000896" -> "1000895"  [label="AST: "];
"1000899" -> "1000895"  [label="AST: "];
"1000889" -> "1000895"  [label="CFG: "];
"1000895" -> "1001173"  [label="DDG: (ssize_t) image->columns"];
"1000895" -> "1001173"  [label="DDG: x + i"];
"1000895" -> "1000889"  [label="DDG: x + i"];
"1000895" -> "1000889"  [label="DDG: (ssize_t) image->columns"];
"1000886" -> "1000895"  [label="DDG: i"];
"1000899" -> "1000895"  [label="DDG: image->columns"];
"1000889" -> "1000885"  [label="AST: "];
"1000889" -> "1000890"  [label="CFG: "];
"1000890" -> "1000889"  [label="AST: "];
"1000885" -> "1000889"  [label="CFG: "];
"1000889" -> "1001173"  [label="DDG: (x + i) < (ssize_t) image->columns"];
"1000889" -> "1001173"  [label="DDG: count + i < 128"];
"1000889" -> "1000885"  [label="DDG: count + i < 128"];
"1000889" -> "1000885"  [label="DDG: (x + i) < (ssize_t) image->columns"];
"1000890" -> "1000889"  [label="DDG: count + i"];
"1000890" -> "1000889"  [label="DDG: 128"];
"1000885" -> "1000884"  [label="AST: "];
"1000885" -> "1000886"  [label="CFG: "];
"1000886" -> "1000885"  [label="AST: "];
"1000908" -> "1000885"  [label="CFG: "];
"1001010" -> "1000885"  [label="CFG: "];
"1000885" -> "1001173"  [label="DDG: (i < 128) && (count + i < 128) &&\n                 ((x + i) < (ssize_t) image->columns)"];
"1000885" -> "1001173"  [label="DDG: i < 128"];
"1000885" -> "1001173"  [label="DDG: (count + i < 128) &&\n                 ((x + i) < (ssize_t) image->columns)"];
"1000886" -> "1000885"  [label="DDG: i"];
"1000886" -> "1000885"  [label="DDG: 128"];
"1000896" -> "1000898"  [label="CFG: "];
"1000897" -> "1000896"  [label="AST: "];
"1000898" -> "1000896"  [label="AST: "];
"1000900" -> "1000896"  [label="CFG: "];
"1000896" -> "1001173"  [label="DDG: x"];
"1000886" -> "1000896"  [label="DDG: i"];
"1001031" -> "1001027"  [label="AST: "];
"1001031" -> "1001035"  [label="CFG: "];
"1001032" -> "1001031"  [label="AST: "];
"1001035" -> "1001031"  [label="AST: "];
"1001027" -> "1001031"  [label="CFG: "];
"1001031" -> "1001173"  [label="DDG: x + i"];
"1001031" -> "1001027"  [label="DDG: x + i"];
"1001031" -> "1001027"  [label="DDG: (ssize_t) image->columns"];
"1001024" -> "1001031"  [label="DDG: i"];
"1001035" -> "1001031"  [label="DDG: image->columns"];
"1001027" -> "1001023"  [label="AST: "];
"1001027" -> "1001028"  [label="CFG: "];
"1001028" -> "1001027"  [label="AST: "];
"1001023" -> "1001027"  [label="CFG: "];
"1001027" -> "1001173"  [label="DDG: count == 128"];
"1001027" -> "1001173"  [label="DDG: (x + i) == (ssize_t) image->columns"];
"1001027" -> "1001023"  [label="DDG: count == 128"];
"1001027" -> "1001023"  [label="DDG: (x + i) == (ssize_t) image->columns"];
"1001028" -> "1001027"  [label="DDG: count"];
"1001028" -> "1001027"  [label="DDG: 128"];
"1001023" -> "1001022"  [label="AST: "];
"1001023" -> "1001024"  [label="CFG: "];
"1001024" -> "1001023"  [label="AST: "];
"1001043" -> "1001023"  [label="CFG: "];
"1001083" -> "1001023"  [label="CFG: "];
"1001023" -> "1001173"  [label="DDG: (count == 128) ||\n              ((x + i) == (ssize_t) image->columns)"];
"1001023" -> "1001173"  [label="DDG: (i >= 3) || (count == 128) ||\n              ((x + i) == (ssize_t) image->columns)"];
"1001024" -> "1001023"  [label="DDG: i"];
"1001024" -> "1001023"  [label="DDG: 3"];
"1001032" -> "1001034"  [label="CFG: "];
"1001033" -> "1001032"  [label="AST: "];
"1001034" -> "1001032"  [label="AST: "];
"1001036" -> "1001032"  [label="CFG: "];
"1001024" -> "1001032"  [label="DDG: i"];
"1001112" -> "1000880"  [label="AST: "];
"1001112" -> "1001114"  [label="CFG: "];
"1001113" -> "1001112"  [label="AST: "];
"1001114" -> "1001112"  [label="AST: "];
"1000874" -> "1001112"  [label="CFG: "];
"1001112" -> "1001173"  [label="DDG: i"];
"1001082" -> "1001112"  [label="DDG: i"];
"1001093" -> "1001112"  [label="DDG: i"];
"1000899" -> "1000901"  [label="CFG: "];
"1000900" -> "1000899"  [label="AST: "];
"1000901" -> "1000899"  [label="AST: "];
"1000899" -> "1001173"  [label="DDG: image->columns"];
"1000899" -> "1001035"  [label="DDG: image->columns"];
"1001035" -> "1001037"  [label="CFG: "];
"1001036" -> "1001035"  [label="AST: "];
"1001037" -> "1001035"  [label="AST: "];
"1001123" -> "1001121"  [label="AST: "];
"1001123" -> "1001125"  [label="CFG: "];
"1001124" -> "1001123"  [label="AST: "];
"1001125" -> "1001123"  [label="AST: "];
"1001121" -> "1001123"  [label="CFG: "];
"1001123" -> "1001173"  [label="DDG: image->columns"];
"1001123" -> "1001121"  [label="DDG: image->columns"];
"1001121" -> "1001117"  [label="AST: "];
"1001122" -> "1001121"  [label="AST: "];
"1001131" -> "1001121"  [label="CFG: "];
"1001145" -> "1001121"  [label="CFG: "];
"1001121" -> "1001173"  [label="DDG: x < (ssize_t) image->columns"];
"1001121" -> "1001173"  [label="DDG: (ssize_t) image->columns"];
"1001121" -> "1001173"  [label="DDG: x"];
"1001128" -> "1001121"  [label="DDG: x"];
"1001118" -> "1001121"  [label="DDG: x"];
"1001121" -> "1001128"  [label="DDG: x"];
"1001128" -> "1001117"  [label="AST: "];
"1001128" -> "1001129"  [label="CFG: "];
"1001129" -> "1001128"  [label="AST: "];
"1001122" -> "1001128"  [label="CFG: "];
"1001156" -> "1001158"  [label="CFG: "];
"1001157" -> "1001156"  [label="AST: "];
"1001158" -> "1001156"  [label="AST: "];
"1001160" -> "1001156"  [label="CFG: "];
"1001156" -> "1001173"  [label="DDG: y"];
}
