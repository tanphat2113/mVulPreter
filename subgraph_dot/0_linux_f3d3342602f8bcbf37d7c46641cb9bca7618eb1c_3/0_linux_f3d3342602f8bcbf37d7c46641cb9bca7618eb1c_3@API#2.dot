digraph "0_linux_f3d3342602f8bcbf37d7c46641cb9bca7618eb1c_3@API" {
"1000189" [label="(Call,skb_copy_datagram_iovec(skb, offset, msg->msg_iov, copied))"];
"1000149" [label="(Call,ddp_hdr(skb))"];
"1000144" [label="(Call,!skb)"];
"1000129" [label="(Call,skb = skb_recv_datagram(sk, flags & ~MSG_DONTWAIT,\n\t\t\t\t\t\tflags & MSG_DONTWAIT, &err))"];
"1000131" [label="(Call,skb_recv_datagram(sk, flags & ~MSG_DONTWAIT,\n\t\t\t\t\t\tflags & MSG_DONTWAIT, &err))"];
"1000110" [label="(Call,*sk = sock->sk)"];
"1000133" [label="(Call,flags & ~MSG_DONTWAIT)"];
"1000107" [label="(MethodParameterIn,int flags)"];
"1000136" [label="(Call,flags & MSG_DONTWAIT)"];
"1000121" [label="(Call,offset = 0)"];
"1000166" [label="(Call,offset = sizeof(*ddp))"];
"1000179" [label="(Call,copied = size)"];
"1000175" [label="(Call,copied > size)"];
"1000171" [label="(Call,copied -= offset)"];
"1000151" [label="(Call,copied = ntohs(ddp->deh_len_hops) & 1023)"];
"1000153" [label="(Call,ntohs(ddp->deh_len_hops) & 1023)"];
"1000154" [label="(Call,ntohs(ddp->deh_len_hops))"];
"1000106" [label="(MethodParameterIn,size_t size)"];
"1000187" [label="(Call,err = skb_copy_datagram_iovec(skb, offset, msg->msg_iov, copied))"];
"1000198" [label="(Call,!err)"];
"1000197" [label="(Call,!err && msg->msg_name)"];
"1000205" [label="(Call,*sat = msg->msg_name)"];
"1000247" [label="(Call,skb_free_datagram(sk, skb))"];
"1000251" [label="(Call,release_sock(sk))"];
"1000251" [label="(Call,release_sock(sk))"];
"1000166" [label="(Call,offset = sizeof(*ddp))"];
"1000135" [label="(Identifier,~MSG_DONTWAIT)"];
"1000198" [label="(Call,!err)"];
"1000138" [label="(Identifier,MSG_DONTWAIT)"];
"1000150" [label="(Identifier,skb)"];
"1000129" [label="(Call,skb = skb_recv_datagram(sk, flags & ~MSG_DONTWAIT,\n\t\t\t\t\t\tflags & MSG_DONTWAIT, &err))"];
"1000197" [label="(Call,!err && msg->msg_name)"];
"1000249" [label="(Identifier,skb)"];
"1000158" [label="(Literal,1023)"];
"1000146" [label="(ControlStructure,goto out;)"];
"1000191" [label="(Identifier,offset)"];
"1000111" [label="(Identifier,sk)"];
"1000187" [label="(Call,err = skb_copy_datagram_iovec(skb, offset, msg->msg_iov, copied))"];
"1000175" [label="(Call,copied > size)"];
"1000142" [label="(Identifier,sk)"];
"1000201" [label="(Identifier,msg)"];
"1000132" [label="(Identifier,sk)"];
"1000162" [label="(Identifier,sk)"];
"1000155" [label="(Call,ddp->deh_len_hops)"];
"1000122" [label="(Identifier,offset)"];
"1000250" [label="(JumpTarget,out:)"];
"1000130" [label="(Identifier,skb)"];
"1000108" [label="(Block,)"];
"1000177" [label="(Identifier,size)"];
"1000176" [label="(Identifier,copied)"];
"1000199" [label="(Identifier,err)"];
"1000179" [label="(Call,copied = size)"];
"1000189" [label="(Call,skb_copy_datagram_iovec(skb, offset, msg->msg_iov, copied))"];
"1000247" [label="(Call,skb_free_datagram(sk, skb))"];
"1000148" [label="(Identifier,ddp)"];
"1000203" [label="(Block,)"];
"1000136" [label="(Call,flags & MSG_DONTWAIT)"];
"1000192" [label="(Call,msg->msg_iov)"];
"1000107" [label="(MethodParameterIn,int flags)"];
"1000165" [label="(Block,)"];
"1000168" [label="(Call,sizeof(*ddp))"];
"1000143" [label="(ControlStructure,if (!skb))"];
"1000140" [label="(Identifier,err)"];
"1000188" [label="(Identifier,err)"];
"1000181" [label="(Identifier,size)"];
"1000154" [label="(Call,ntohs(ddp->deh_len_hops))"];
"1000200" [label="(Call,msg->msg_name)"];
"1000254" [label="(MethodReturn,static int)"];
"1000167" [label="(Identifier,offset)"];
"1000205" [label="(Call,*sat = msg->msg_name)"];
"1000134" [label="(Identifier,flags)"];
"1000196" [label="(ControlStructure,if (!err && msg->msg_name))"];
"1000131" [label="(Call,skb_recv_datagram(sk, flags & ~MSG_DONTWAIT,\n\t\t\t\t\t\tflags & MSG_DONTWAIT, &err))"];
"1000206" [label="(Identifier,sat)"];
"1000174" [label="(ControlStructure,if (copied > size))"];
"1000149" [label="(Call,ddp_hdr(skb))"];
"1000121" [label="(Call,offset = 0)"];
"1000133" [label="(Call,flags & ~MSG_DONTWAIT)"];
"1000110" [label="(Call,*sk = sock->sk)"];
"1000184" [label="(Identifier,msg)"];
"1000190" [label="(Identifier,skb)"];
"1000195" [label="(Identifier,copied)"];
"1000172" [label="(Identifier,copied)"];
"1000141" [label="(Call,lock_sock(sk))"];
"1000178" [label="(Block,)"];
"1000173" [label="(Identifier,offset)"];
"1000112" [label="(Call,sock->sk)"];
"1000153" [label="(Call,ntohs(ddp->deh_len_hops) & 1023)"];
"1000147" [label="(Call,ddp = ddp_hdr(skb))"];
"1000151" [label="(Call,copied = ntohs(ddp->deh_len_hops) & 1023)"];
"1000145" [label="(Identifier,skb)"];
"1000126" [label="(Identifier,err)"];
"1000180" [label="(Identifier,copied)"];
"1000212" [label="(Identifier,sat)"];
"1000152" [label="(Identifier,copied)"];
"1000139" [label="(Call,&err)"];
"1000252" [label="(Identifier,sk)"];
"1000253" [label="(Identifier,copied)"];
"1000207" [label="(Call,msg->msg_name)"];
"1000106" [label="(MethodParameterIn,size_t size)"];
"1000118" [label="(Identifier,copied)"];
"1000144" [label="(Call,!skb)"];
"1000137" [label="(Identifier,flags)"];
"1000171" [label="(Call,copied -= offset)"];
"1000123" [label="(Literal,0)"];
"1000248" [label="(Identifier,sk)"];
"1000189" -> "1000187"  [label="AST: "];
"1000189" -> "1000195"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000191" -> "1000189"  [label="AST: "];
"1000192" -> "1000189"  [label="AST: "];
"1000195" -> "1000189"  [label="AST: "];
"1000187" -> "1000189"  [label="CFG: "];
"1000189" -> "1000254"  [label="DDG: copied"];
"1000189" -> "1000254"  [label="DDG: offset"];
"1000189" -> "1000254"  [label="DDG: msg->msg_iov"];
"1000189" -> "1000187"  [label="DDG: skb"];
"1000189" -> "1000187"  [label="DDG: offset"];
"1000189" -> "1000187"  [label="DDG: msg->msg_iov"];
"1000189" -> "1000187"  [label="DDG: copied"];
"1000149" -> "1000189"  [label="DDG: skb"];
"1000121" -> "1000189"  [label="DDG: offset"];
"1000166" -> "1000189"  [label="DDG: offset"];
"1000179" -> "1000189"  [label="DDG: copied"];
"1000175" -> "1000189"  [label="DDG: copied"];
"1000189" -> "1000247"  [label="DDG: skb"];
"1000149" -> "1000147"  [label="AST: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000149" -> "1000147"  [label="DDG: skb"];
"1000144" -> "1000149"  [label="DDG: skb"];
"1000144" -> "1000143"  [label="AST: "];
"1000144" -> "1000145"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000146" -> "1000144"  [label="CFG: "];
"1000148" -> "1000144"  [label="CFG: "];
"1000144" -> "1000254"  [label="DDG: !skb"];
"1000144" -> "1000254"  [label="DDG: skb"];
"1000129" -> "1000144"  [label="DDG: skb"];
"1000129" -> "1000108"  [label="AST: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000129"  [label="AST: "];
"1000142" -> "1000129"  [label="CFG: "];
"1000129" -> "1000254"  [label="DDG: skb_recv_datagram(sk, flags & ~MSG_DONTWAIT,\n\t\t\t\t\t\tflags & MSG_DONTWAIT, &err)"];
"1000131" -> "1000129"  [label="DDG: sk"];
"1000131" -> "1000129"  [label="DDG: flags & ~MSG_DONTWAIT"];
"1000131" -> "1000129"  [label="DDG: flags & MSG_DONTWAIT"];
"1000131" -> "1000129"  [label="DDG: &err"];
"1000131" -> "1000139"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="AST: "];
"1000136" -> "1000131"  [label="AST: "];
"1000139" -> "1000131"  [label="AST: "];
"1000131" -> "1000254"  [label="DDG: &err"];
"1000131" -> "1000254"  [label="DDG: flags & ~MSG_DONTWAIT"];
"1000131" -> "1000254"  [label="DDG: flags & MSG_DONTWAIT"];
"1000110" -> "1000131"  [label="DDG: sk"];
"1000133" -> "1000131"  [label="DDG: flags"];
"1000133" -> "1000131"  [label="DDG: ~MSG_DONTWAIT"];
"1000136" -> "1000131"  [label="DDG: flags"];
"1000136" -> "1000131"  [label="DDG: MSG_DONTWAIT"];
"1000131" -> "1000141"  [label="DDG: sk"];
"1000110" -> "1000108"  [label="AST: "];
"1000110" -> "1000112"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000112" -> "1000110"  [label="AST: "];
"1000118" -> "1000110"  [label="CFG: "];
"1000110" -> "1000254"  [label="DDG: sock->sk"];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000137" -> "1000133"  [label="CFG: "];
"1000133" -> "1000254"  [label="DDG: ~MSG_DONTWAIT"];
"1000107" -> "1000133"  [label="DDG: flags"];
"1000133" -> "1000136"  [label="DDG: flags"];
"1000107" -> "1000102"  [label="AST: "];
"1000107" -> "1000254"  [label="DDG: flags"];
"1000107" -> "1000136"  [label="DDG: flags"];
"1000136" -> "1000138"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000140" -> "1000136"  [label="CFG: "];
"1000136" -> "1000254"  [label="DDG: MSG_DONTWAIT"];
"1000136" -> "1000254"  [label="DDG: flags"];
"1000121" -> "1000108"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000126" -> "1000121"  [label="CFG: "];
"1000121" -> "1000254"  [label="DDG: offset"];
"1000166" -> "1000165"  [label="AST: "];
"1000166" -> "1000168"  [label="CFG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000168" -> "1000166"  [label="AST: "];
"1000172" -> "1000166"  [label="CFG: "];
"1000166" -> "1000171"  [label="DDG: offset"];
"1000179" -> "1000178"  [label="AST: "];
"1000179" -> "1000181"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000181" -> "1000179"  [label="AST: "];
"1000184" -> "1000179"  [label="CFG: "];
"1000179" -> "1000254"  [label="DDG: size"];
"1000175" -> "1000179"  [label="DDG: size"];
"1000106" -> "1000179"  [label="DDG: size"];
"1000175" -> "1000174"  [label="AST: "];
"1000175" -> "1000177"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000177" -> "1000175"  [label="AST: "];
"1000180" -> "1000175"  [label="CFG: "];
"1000188" -> "1000175"  [label="CFG: "];
"1000175" -> "1000254"  [label="DDG: size"];
"1000175" -> "1000254"  [label="DDG: copied > size"];
"1000171" -> "1000175"  [label="DDG: copied"];
"1000151" -> "1000175"  [label="DDG: copied"];
"1000106" -> "1000175"  [label="DDG: size"];
"1000171" -> "1000165"  [label="AST: "];
"1000171" -> "1000173"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="AST: "];
"1000176" -> "1000171"  [label="CFG: "];
"1000151" -> "1000171"  [label="DDG: copied"];
"1000151" -> "1000108"  [label="AST: "];
"1000151" -> "1000153"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000153" -> "1000151"  [label="AST: "];
"1000162" -> "1000151"  [label="CFG: "];
"1000151" -> "1000254"  [label="DDG: ntohs(ddp->deh_len_hops) & 1023"];
"1000153" -> "1000151"  [label="DDG: ntohs(ddp->deh_len_hops)"];
"1000153" -> "1000151"  [label="DDG: 1023"];
"1000153" -> "1000158"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000158" -> "1000153"  [label="AST: "];
"1000153" -> "1000254"  [label="DDG: ntohs(ddp->deh_len_hops)"];
"1000154" -> "1000153"  [label="DDG: ddp->deh_len_hops"];
"1000154" -> "1000155"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000158" -> "1000154"  [label="CFG: "];
"1000154" -> "1000254"  [label="DDG: ddp->deh_len_hops"];
"1000106" -> "1000102"  [label="AST: "];
"1000106" -> "1000254"  [label="DDG: size"];
"1000187" -> "1000108"  [label="AST: "];
"1000188" -> "1000187"  [label="AST: "];
"1000199" -> "1000187"  [label="CFG: "];
"1000187" -> "1000254"  [label="DDG: skb_copy_datagram_iovec(skb, offset, msg->msg_iov, copied)"];
"1000187" -> "1000198"  [label="DDG: err"];
"1000198" -> "1000197"  [label="AST: "];
"1000198" -> "1000199"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000201" -> "1000198"  [label="CFG: "];
"1000197" -> "1000198"  [label="CFG: "];
"1000198" -> "1000254"  [label="DDG: err"];
"1000198" -> "1000197"  [label="DDG: err"];
"1000197" -> "1000196"  [label="AST: "];
"1000197" -> "1000200"  [label="CFG: "];
"1000200" -> "1000197"  [label="AST: "];
"1000206" -> "1000197"  [label="CFG: "];
"1000248" -> "1000197"  [label="CFG: "];
"1000197" -> "1000254"  [label="DDG: msg->msg_name"];
"1000197" -> "1000254"  [label="DDG: !err && msg->msg_name"];
"1000197" -> "1000254"  [label="DDG: !err"];
"1000197" -> "1000205"  [label="DDG: msg->msg_name"];
"1000205" -> "1000203"  [label="AST: "];
"1000205" -> "1000207"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000207" -> "1000205"  [label="AST: "];
"1000212" -> "1000205"  [label="CFG: "];
"1000205" -> "1000254"  [label="DDG: sat"];
"1000205" -> "1000254"  [label="DDG: msg->msg_name"];
"1000247" -> "1000108"  [label="AST: "];
"1000247" -> "1000249"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000249" -> "1000247"  [label="AST: "];
"1000250" -> "1000247"  [label="CFG: "];
"1000247" -> "1000254"  [label="DDG: skb_free_datagram(sk, skb)"];
"1000247" -> "1000254"  [label="DDG: skb"];
"1000141" -> "1000247"  [label="DDG: sk"];
"1000247" -> "1000251"  [label="DDG: sk"];
"1000251" -> "1000108"  [label="AST: "];
"1000251" -> "1000252"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="CFG: "];
"1000251" -> "1000254"  [label="DDG: release_sock(sk)"];
"1000251" -> "1000254"  [label="DDG: sk"];
"1000141" -> "1000251"  [label="DDG: sk"];
}
