digraph "0_Android_0bb5ced60304da7f61478ffd359e7ba65d72f181@pointer" {
"1000461" [label="(Call,getConfig(node, index, params, size))"];
"1000283" [label="(Call,node = (node_id)data.readInt32())"];
"1000285" [label="(Call,(node_id)data.readInt32())"];
"1000289" [label="(Call,index = static_cast<OMX_INDEXTYPE>(data.readInt32()))"];
"1000291" [label="(Call,static_cast<OMX_INDEXTYPE>(data.readInt32()))"];
"1000429" [label="(Call,(char*)params)"];
"1000406" [label="(Call,(OMX_U32*)params)"];
"1000386" [label="(Call,data.read(params, size))"];
"1000380" [label="(Call,params != MAP_FAILED)"];
"1000303" [label="(Call,*params = NULL)"];
"1000365" [label="(Call,params = mmap(NULL, allocSize, PROT_READ | PROT_WRITE,\n                            MAP_PRIVATE | MAP_ANONYMOUS, -1 /* fd */, 0 /* offset */))"];
"1000367" [label="(Call,mmap(NULL, allocSize, PROT_READ | PROT_WRITE,\n                            MAP_PRIVATE | MAP_ANONYMOUS, -1 /* fd */, 0 /* offset */))"];
"1000353" [label="(Call,allocSize = (size + pageSize * 2) & ~(pageSize - 1))"];
"1000355" [label="(Call,(size + pageSize * 2) & ~(pageSize - 1))"];
"1000341" [label="(Call,size > SIZE_MAX - (pageSize * 2))"];
"1000295" [label="(Call,size = data.readInt64())"];
"1000319" [label="(Call,size < 8)"];
"1000343" [label="(Call,SIZE_MAX - (pageSize * 2))"];
"1000345" [label="(Call,pageSize * 2)"];
"1000334" [label="(Call,pageSize = (size_t) sysconf(_SC_PAGE_SIZE))"];
"1000336" [label="(Call,(size_t) sysconf(_SC_PAGE_SIZE))"];
"1000338" [label="(Call,sysconf(_SC_PAGE_SIZE))"];
"1000358" [label="(Call,pageSize * 2)"];
"1000361" [label="(Call,~(pageSize - 1))"];
"1000362" [label="(Call,pageSize - 1)"];
"1000370" [label="(Call,PROT_READ | PROT_WRITE)"];
"1000373" [label="(Call,MAP_PRIVATE | MAP_ANONYMOUS)"];
"1000376" [label="(Call,-1)"];
"1000414" [label="(Call,declaredSize > size)"];
"1000403" [label="(Call,declaredSize = *(OMX_U32*)params)"];
"1000459" [label="(Call,err = getConfig(node, index, params, size))"];
"1000501" [label="(Call,reply->writeInt32(err))"];
"1000512" [label="(Call,err == OK)"];
"1000504" [label="(Call,(code == GET_PARAMETER || code == GET_CONFIG) && err == OK)"];
"1000516" [label="(Call,reply->write(params, size))"];
"1000522" [label="(Call,munmap(params, allocSize))"];
"1000335" [label="(Identifier,pageSize)"];
"1000504" [label="(Call,(code == GET_PARAMETER || code == GET_CONFIG) && err == OK)"];
"1000296" [label="(Identifier,size)"];
"1000284" [label="(Identifier,node)"];
"1000398" [label="(Block,)"];
"1000343" [label="(Call,SIZE_MAX - (pageSize * 2))"];
"1000297" [label="(Call,data.readInt64())"];
"1000517" [label="(Identifier,params)"];
"1000514" [label="(Identifier,OK)"];
"1000323" [label="(Call,ALOGE(\"b/27207275 (%zu)\", size))"];
"1000304" [label="(Identifier,params)"];
"1000384" [label="(Call,err = data.read(params, size))"];
"1000362" [label="(Call,pageSize - 1)"];
"1000347" [label="(Literal,2)"];
"1000373" [label="(Call,MAP_PRIVATE | MAP_ANONYMOUS)"];
"1000387" [label="(Identifier,params)"];
"1000350" [label="(Literal,\"requested param size too big\")"];
"1000523" [label="(Identifier,params)"];
"1000319" [label="(Call,size < 8)"];
"1000507" [label="(Identifier,code)"];
"1000428" [label="(Call,(char*)params + allocSize - pageSize)"];
"1000340" [label="(ControlStructure,if (size > SIZE_MAX - (pageSize * 2)))"];
"1000375" [label="(Identifier,MAP_ANONYMOUS)"];
"1000299" [label="(Call,err = NOT_ENOUGH_DATA)"];
"1000378" [label="(Literal,0)"];
"1000385" [label="(Identifier,err)"];
"1000369" [label="(Identifier,allocSize)"];
"1000429" [label="(Call,(char*)params)"];
"1000285" [label="(Call,(node_id)data.readInt32())"];
"1000380" [label="(Call,params != MAP_FAILED)"];
"1000524" [label="(Identifier,allocSize)"];
"1000406" [label="(Call,(OMX_U32*)params)"];
"1000521" [label="(Block,)"];
"1000358" [label="(Call,pageSize * 2)"];
"1000388" [label="(Identifier,size)"];
"1000381" [label="(Identifier,params)"];
"1000311" [label="(Call,allocSize = 0)"];
"1000461" [label="(Call,getConfig(node, index, params, size))"];
"1000356" [label="(Call,size + pageSize * 2)"];
"1000498" [label="(Literal,\"couldn't map: %s\")"];
"1000291" [label="(Call,static_cast<OMX_INDEXTYPE>(data.readInt32()))"];
"1000443" [label="(Call,getParameter(node, index, params, size))"];
"1000463" [label="(Identifier,index)"];
"1000414" [label="(Call,declaredSize > size)"];
"1000367" [label="(Call,mmap(NULL, allocSize, PROT_READ | PROT_WRITE,\n                            MAP_PRIVATE | MAP_ANONYMOUS, -1 /* fd */, 0 /* offset */))"];
"1000354" [label="(Identifier,allocSize)"];
"1000431" [label="(Identifier,params)"];
"1000315" [label="(Call,code != SET_INTERNAL_OPTION && size < 8)"];
"1000289" [label="(Call,index = static_cast<OMX_INDEXTYPE>(data.readInt32()))"];
"1000376" [label="(Call,-1)"];
"1000336" [label="(Call,(size_t) sysconf(_SC_PAGE_SIZE))"];
"1000427" [label="(Call,mprotect((char*)params + allocSize - pageSize, pageSize, PROT_NONE))"];
"1000365" [label="(Call,params = mmap(NULL, allocSize, PROT_READ | PROT_WRITE,\n                            MAP_PRIVATE | MAP_ANONYMOUS, -1 /* fd */, 0 /* offset */))"];
"1000293" [label="(Call,data.readInt32())"];
"1000334" [label="(Call,pageSize = (size_t) sysconf(_SC_PAGE_SIZE))"];
"1000486" [label="(Call,setInternalOption(node, index, type, params, size))"];
"1000346" [label="(Identifier,pageSize)"];
"1000404" [label="(Identifier,declaredSize)"];
"1000522" [label="(Call,munmap(params, allocSize))"];
"1000441" [label="(Call,err = getParameter(node, index, params, size))"];
"1000382" [label="(Identifier,MAP_FAILED)"];
"1000277" [label="(Block,)"];
"1000295" [label="(Call,size = data.readInt64())"];
"1000345" [label="(Call,pageSize * 2)"];
"1000415" [label="(Identifier,declaredSize)"];
"1000459" [label="(Call,err = getConfig(node, index, params, size))"];
"1000408" [label="(Identifier,params)"];
"1000501" [label="(Call,reply->writeInt32(err))"];
"1000403" [label="(Call,declaredSize = *(OMX_U32*)params)"];
"1000416" [label="(Identifier,size)"];
"1000320" [label="(Identifier,size)"];
"1000283" [label="(Call,node = (node_id)data.readInt32())"];
"1000520" [label="(Identifier,params)"];
"1000352" [label="(Block,)"];
"1000338" [label="(Call,sysconf(_SC_PAGE_SIZE))"];
"1000331" [label="(Call,err = NO_MEMORY)"];
"1000290" [label="(Identifier,index)"];
"1000305" [label="(Identifier,NULL)"];
"1000364" [label="(Literal,1)"];
"1000439" [label="(Block,)"];
"1000342" [label="(Identifier,size)"];
"1000361" [label="(Call,~(pageSize - 1))"];
"1000468" [label="(Call,err = setConfig(node, index, params, size))"];
"1000412" [label="(Identifier,code)"];
"1000303" [label="(Call,*params = NULL)"];
"1000339" [label="(Identifier,_SC_PAGE_SIZE)"];
"1000513" [label="(Identifier,err)"];
"1000433" [label="(Identifier,allocSize)"];
"1000355" [label="(Call,(size + pageSize * 2) & ~(pageSize - 1))"];
"1000399" [label="(Call,err = NOT_ENOUGH_DATA)"];
"1000410" [label="(Call,code != SET_INTERNAL_OPTION && declaredSize > size)"];
"1000330" [label="(Block,)"];
"1000405" [label="(Call,*(OMX_U32*)params)"];
"1000484" [label="(Call,err = setInternalOption(node, index, type, params, size))"];
"1000374" [label="(Identifier,MAP_PRIVATE)"];
"1000368" [label="(Identifier,NULL)"];
"1000341" [label="(Call,size > SIZE_MAX - (pageSize * 2))"];
"1000460" [label="(Identifier,err)"];
"1000450" [label="(Call,err = setParameter(node, index, params, size))"];
"1000360" [label="(Literal,2)"];
"1000321" [label="(Literal,8)"];
"1000526" [label="(Identifier,params)"];
"1000418" [label="(Call,ALOGE(\"b/27207275 (%u/%zu)\", declaredSize, size))"];
"1000359" [label="(Identifier,pageSize)"];
"1000366" [label="(Identifier,params)"];
"1001337" [label="(MethodReturn,status_t)"];
"1000465" [label="(Identifier,size)"];
"1000372" [label="(Identifier,PROT_WRITE)"];
"1000516" [label="(Call,reply->write(params, size))"];
"1000462" [label="(Identifier,node)"];
"1000353" [label="(Call,allocSize = (size + pageSize * 2) & ~(pageSize - 1))"];
"1000300" [label="(Identifier,err)"];
"1000390" [label="(Call,err != OK)"];
"1000287" [label="(Call,data.readInt32())"];
"1000503" [label="(ControlStructure,if ((code == GET_PARAMETER || code == GET_CONFIG) && err == OK))"];
"1000505" [label="(Call,code == GET_PARAMETER || code == GET_CONFIG)"];
"1000464" [label="(Identifier,params)"];
"1000470" [label="(Call,setConfig(node, index, params, size))"];
"1000370" [label="(Call,PROT_READ | PROT_WRITE)"];
"1000512" [label="(Call,err == OK)"];
"1000371" [label="(Identifier,PROT_READ)"];
"1000363" [label="(Identifier,pageSize)"];
"1000525" [label="(Call,params = NULL)"];
"1000308" [label="(Identifier,pageSize)"];
"1000344" [label="(Identifier,SIZE_MAX)"];
"1000377" [label="(Literal,1)"];
"1000466" [label="(ControlStructure,break;)"];
"1000502" [label="(Identifier,err)"];
"1000386" [label="(Call,data.read(params, size))"];
"1000452" [label="(Call,setParameter(node, index, params, size))"];
"1000518" [label="(Identifier,size)"];
"1000379" [label="(ControlStructure,if (params != MAP_FAILED))"];
"1000432" [label="(Call,allocSize - pageSize)"];
"1000515" [label="(Block,)"];
"1000461" -> "1000459"  [label="AST: "];
"1000461" -> "1000465"  [label="CFG: "];
"1000462" -> "1000461"  [label="AST: "];
"1000463" -> "1000461"  [label="AST: "];
"1000464" -> "1000461"  [label="AST: "];
"1000465" -> "1000461"  [label="AST: "];
"1000459" -> "1000461"  [label="CFG: "];
"1000461" -> "1001337"  [label="DDG: size"];
"1000461" -> "1001337"  [label="DDG: index"];
"1000461" -> "1001337"  [label="DDG: params"];
"1000461" -> "1001337"  [label="DDG: node"];
"1000461" -> "1000459"  [label="DDG: node"];
"1000461" -> "1000459"  [label="DDG: index"];
"1000461" -> "1000459"  [label="DDG: params"];
"1000461" -> "1000459"  [label="DDG: size"];
"1000283" -> "1000461"  [label="DDG: node"];
"1000289" -> "1000461"  [label="DDG: index"];
"1000429" -> "1000461"  [label="DDG: params"];
"1000386" -> "1000461"  [label="DDG: size"];
"1000414" -> "1000461"  [label="DDG: size"];
"1000461" -> "1000516"  [label="DDG: params"];
"1000461" -> "1000516"  [label="DDG: size"];
"1000461" -> "1000522"  [label="DDG: params"];
"1000283" -> "1000277"  [label="AST: "];
"1000283" -> "1000285"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000285" -> "1000283"  [label="AST: "];
"1000290" -> "1000283"  [label="CFG: "];
"1000283" -> "1001337"  [label="DDG: (node_id)data.readInt32()"];
"1000283" -> "1001337"  [label="DDG: node"];
"1000285" -> "1000283"  [label="DDG: data.readInt32()"];
"1000283" -> "1000443"  [label="DDG: node"];
"1000283" -> "1000452"  [label="DDG: node"];
"1000283" -> "1000470"  [label="DDG: node"];
"1000283" -> "1000486"  [label="DDG: node"];
"1000285" -> "1000287"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000285"  [label="AST: "];
"1000289" -> "1000277"  [label="AST: "];
"1000289" -> "1000291"  [label="CFG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000291" -> "1000289"  [label="AST: "];
"1000296" -> "1000289"  [label="CFG: "];
"1000289" -> "1001337"  [label="DDG: static_cast<OMX_INDEXTYPE>(data.readInt32())"];
"1000289" -> "1001337"  [label="DDG: index"];
"1000291" -> "1000289"  [label="DDG: data.readInt32()"];
"1000289" -> "1000443"  [label="DDG: index"];
"1000289" -> "1000452"  [label="DDG: index"];
"1000289" -> "1000470"  [label="DDG: index"];
"1000289" -> "1000486"  [label="DDG: index"];
"1000291" -> "1000293"  [label="CFG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000293" -> "1000291"  [label="AST: "];
"1000291" -> "1001337"  [label="DDG: data.readInt32()"];
"1000429" -> "1000428"  [label="AST: "];
"1000429" -> "1000431"  [label="CFG: "];
"1000430" -> "1000429"  [label="AST: "];
"1000431" -> "1000429"  [label="AST: "];
"1000433" -> "1000429"  [label="CFG: "];
"1000429" -> "1000427"  [label="DDG: params"];
"1000429" -> "1000428"  [label="DDG: params"];
"1000406" -> "1000429"  [label="DDG: params"];
"1000429" -> "1000443"  [label="DDG: params"];
"1000429" -> "1000452"  [label="DDG: params"];
"1000429" -> "1000470"  [label="DDG: params"];
"1000429" -> "1000486"  [label="DDG: params"];
"1000429" -> "1000516"  [label="DDG: params"];
"1000429" -> "1000522"  [label="DDG: params"];
"1000406" -> "1000405"  [label="AST: "];
"1000406" -> "1000408"  [label="CFG: "];
"1000407" -> "1000406"  [label="AST: "];
"1000408" -> "1000406"  [label="AST: "];
"1000405" -> "1000406"  [label="CFG: "];
"1000386" -> "1000406"  [label="DDG: params"];
"1000406" -> "1000516"  [label="DDG: params"];
"1000406" -> "1000522"  [label="DDG: params"];
"1000386" -> "1000384"  [label="AST: "];
"1000386" -> "1000388"  [label="CFG: "];
"1000387" -> "1000386"  [label="AST: "];
"1000388" -> "1000386"  [label="AST: "];
"1000384" -> "1000386"  [label="CFG: "];
"1000386" -> "1001337"  [label="DDG: size"];
"1000386" -> "1000384"  [label="DDG: params"];
"1000386" -> "1000384"  [label="DDG: size"];
"1000380" -> "1000386"  [label="DDG: params"];
"1000341" -> "1000386"  [label="DDG: size"];
"1000386" -> "1000414"  [label="DDG: size"];
"1000386" -> "1000418"  [label="DDG: size"];
"1000386" -> "1000443"  [label="DDG: size"];
"1000386" -> "1000452"  [label="DDG: size"];
"1000386" -> "1000470"  [label="DDG: size"];
"1000386" -> "1000486"  [label="DDG: size"];
"1000386" -> "1000516"  [label="DDG: params"];
"1000386" -> "1000516"  [label="DDG: size"];
"1000386" -> "1000522"  [label="DDG: params"];
"1000380" -> "1000379"  [label="AST: "];
"1000380" -> "1000382"  [label="CFG: "];
"1000381" -> "1000380"  [label="AST: "];
"1000382" -> "1000380"  [label="AST: "];
"1000385" -> "1000380"  [label="CFG: "];
"1000498" -> "1000380"  [label="CFG: "];
"1000380" -> "1001337"  [label="DDG: params != MAP_FAILED"];
"1000380" -> "1001337"  [label="DDG: MAP_FAILED"];
"1000303" -> "1000380"  [label="DDG: params"];
"1000365" -> "1000380"  [label="DDG: params"];
"1000380" -> "1000516"  [label="DDG: params"];
"1000380" -> "1000522"  [label="DDG: params"];
"1000303" -> "1000277"  [label="AST: "];
"1000303" -> "1000305"  [label="CFG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000305" -> "1000303"  [label="AST: "];
"1000308" -> "1000303"  [label="CFG: "];
"1000303" -> "1001337"  [label="DDG: NULL"];
"1000303" -> "1000516"  [label="DDG: params"];
"1000303" -> "1000522"  [label="DDG: params"];
"1000365" -> "1000352"  [label="AST: "];
"1000365" -> "1000367"  [label="CFG: "];
"1000366" -> "1000365"  [label="AST: "];
"1000367" -> "1000365"  [label="AST: "];
"1000381" -> "1000365"  [label="CFG: "];
"1000365" -> "1001337"  [label="DDG: mmap(NULL, allocSize, PROT_READ | PROT_WRITE,\n                            MAP_PRIVATE | MAP_ANONYMOUS, -1 /* fd */, 0 /* offset */)"];
"1000367" -> "1000365"  [label="DDG: MAP_PRIVATE | MAP_ANONYMOUS"];
"1000367" -> "1000365"  [label="DDG: allocSize"];
"1000367" -> "1000365"  [label="DDG: 0"];
"1000367" -> "1000365"  [label="DDG: PROT_READ | PROT_WRITE"];
"1000367" -> "1000365"  [label="DDG: -1"];
"1000367" -> "1000365"  [label="DDG: NULL"];
"1000367" -> "1000378"  [label="CFG: "];
"1000368" -> "1000367"  [label="AST: "];
"1000369" -> "1000367"  [label="AST: "];
"1000370" -> "1000367"  [label="AST: "];
"1000373" -> "1000367"  [label="AST: "];
"1000376" -> "1000367"  [label="AST: "];
"1000378" -> "1000367"  [label="AST: "];
"1000367" -> "1001337"  [label="DDG: allocSize"];
"1000367" -> "1001337"  [label="DDG: -1"];
"1000367" -> "1001337"  [label="DDG: PROT_READ | PROT_WRITE"];
"1000367" -> "1001337"  [label="DDG: NULL"];
"1000367" -> "1001337"  [label="DDG: MAP_PRIVATE | MAP_ANONYMOUS"];
"1000353" -> "1000367"  [label="DDG: allocSize"];
"1000370" -> "1000367"  [label="DDG: PROT_READ"];
"1000370" -> "1000367"  [label="DDG: PROT_WRITE"];
"1000373" -> "1000367"  [label="DDG: MAP_PRIVATE"];
"1000373" -> "1000367"  [label="DDG: MAP_ANONYMOUS"];
"1000376" -> "1000367"  [label="DDG: 1"];
"1000367" -> "1000432"  [label="DDG: allocSize"];
"1000367" -> "1000522"  [label="DDG: allocSize"];
"1000367" -> "1000525"  [label="DDG: NULL"];
"1000353" -> "1000352"  [label="AST: "];
"1000353" -> "1000355"  [label="CFG: "];
"1000354" -> "1000353"  [label="AST: "];
"1000355" -> "1000353"  [label="AST: "];
"1000366" -> "1000353"  [label="CFG: "];
"1000353" -> "1001337"  [label="DDG: (size + pageSize * 2) & ~(pageSize - 1)"];
"1000355" -> "1000353"  [label="DDG: size + pageSize * 2"];
"1000355" -> "1000353"  [label="DDG: ~(pageSize - 1)"];
"1000355" -> "1000361"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000361" -> "1000355"  [label="AST: "];
"1000355" -> "1001337"  [label="DDG: size + pageSize * 2"];
"1000355" -> "1001337"  [label="DDG: ~(pageSize - 1)"];
"1000341" -> "1000355"  [label="DDG: size"];
"1000358" -> "1000355"  [label="DDG: pageSize"];
"1000358" -> "1000355"  [label="DDG: 2"];
"1000361" -> "1000355"  [label="DDG: pageSize - 1"];
"1000341" -> "1000340"  [label="AST: "];
"1000341" -> "1000343"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="AST: "];
"1000350" -> "1000341"  [label="CFG: "];
"1000354" -> "1000341"  [label="CFG: "];
"1000341" -> "1001337"  [label="DDG: SIZE_MAX - (pageSize * 2)"];
"1000341" -> "1001337"  [label="DDG: size"];
"1000341" -> "1001337"  [label="DDG: size > SIZE_MAX - (pageSize * 2)"];
"1000295" -> "1000341"  [label="DDG: size"];
"1000319" -> "1000341"  [label="DDG: size"];
"1000343" -> "1000341"  [label="DDG: SIZE_MAX"];
"1000343" -> "1000341"  [label="DDG: pageSize * 2"];
"1000341" -> "1000356"  [label="DDG: size"];
"1000341" -> "1000516"  [label="DDG: size"];
"1000295" -> "1000277"  [label="AST: "];
"1000295" -> "1000297"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000297" -> "1000295"  [label="AST: "];
"1000300" -> "1000295"  [label="CFG: "];
"1000295" -> "1001337"  [label="DDG: data.readInt64()"];
"1000295" -> "1000319"  [label="DDG: size"];
"1000295" -> "1000323"  [label="DDG: size"];
"1000319" -> "1000315"  [label="AST: "];
"1000319" -> "1000321"  [label="CFG: "];
"1000320" -> "1000319"  [label="AST: "];
"1000321" -> "1000319"  [label="AST: "];
"1000315" -> "1000319"  [label="CFG: "];
"1000319" -> "1000315"  [label="DDG: size"];
"1000319" -> "1000315"  [label="DDG: 8"];
"1000319" -> "1000323"  [label="DDG: size"];
"1000343" -> "1000345"  [label="CFG: "];
"1000344" -> "1000343"  [label="AST: "];
"1000345" -> "1000343"  [label="AST: "];
"1000343" -> "1001337"  [label="DDG: SIZE_MAX"];
"1000343" -> "1001337"  [label="DDG: pageSize * 2"];
"1000345" -> "1000343"  [label="DDG: pageSize"];
"1000345" -> "1000343"  [label="DDG: 2"];
"1000345" -> "1000347"  [label="CFG: "];
"1000346" -> "1000345"  [label="AST: "];
"1000347" -> "1000345"  [label="AST: "];
"1000345" -> "1001337"  [label="DDG: pageSize"];
"1000334" -> "1000345"  [label="DDG: pageSize"];
"1000345" -> "1000358"  [label="DDG: pageSize"];
"1000345" -> "1000432"  [label="DDG: pageSize"];
"1000334" -> "1000330"  [label="AST: "];
"1000334" -> "1000336"  [label="CFG: "];
"1000335" -> "1000334"  [label="AST: "];
"1000336" -> "1000334"  [label="AST: "];
"1000342" -> "1000334"  [label="CFG: "];
"1000334" -> "1001337"  [label="DDG: (size_t) sysconf(_SC_PAGE_SIZE)"];
"1000336" -> "1000334"  [label="DDG: sysconf(_SC_PAGE_SIZE)"];
"1000336" -> "1000338"  [label="CFG: "];
"1000337" -> "1000336"  [label="AST: "];
"1000338" -> "1000336"  [label="AST: "];
"1000336" -> "1001337"  [label="DDG: sysconf(_SC_PAGE_SIZE)"];
"1000338" -> "1000336"  [label="DDG: _SC_PAGE_SIZE"];
"1000338" -> "1000339"  [label="CFG: "];
"1000339" -> "1000338"  [label="AST: "];
"1000338" -> "1001337"  [label="DDG: _SC_PAGE_SIZE"];
"1000358" -> "1000356"  [label="AST: "];
"1000358" -> "1000360"  [label="CFG: "];
"1000359" -> "1000358"  [label="AST: "];
"1000360" -> "1000358"  [label="AST: "];
"1000356" -> "1000358"  [label="CFG: "];
"1000358" -> "1000356"  [label="DDG: pageSize"];
"1000358" -> "1000356"  [label="DDG: 2"];
"1000358" -> "1000362"  [label="DDG: pageSize"];
"1000361" -> "1000362"  [label="CFG: "];
"1000362" -> "1000361"  [label="AST: "];
"1000361" -> "1001337"  [label="DDG: pageSize - 1"];
"1000362" -> "1000361"  [label="DDG: pageSize"];
"1000362" -> "1000361"  [label="DDG: 1"];
"1000362" -> "1000364"  [label="CFG: "];
"1000363" -> "1000362"  [label="AST: "];
"1000364" -> "1000362"  [label="AST: "];
"1000362" -> "1001337"  [label="DDG: pageSize"];
"1000362" -> "1000432"  [label="DDG: pageSize"];
"1000370" -> "1000372"  [label="CFG: "];
"1000371" -> "1000370"  [label="AST: "];
"1000372" -> "1000370"  [label="AST: "];
"1000374" -> "1000370"  [label="CFG: "];
"1000370" -> "1001337"  [label="DDG: PROT_WRITE"];
"1000370" -> "1001337"  [label="DDG: PROT_READ"];
"1000373" -> "1000375"  [label="CFG: "];
"1000374" -> "1000373"  [label="AST: "];
"1000375" -> "1000373"  [label="AST: "];
"1000377" -> "1000373"  [label="CFG: "];
"1000373" -> "1001337"  [label="DDG: MAP_ANONYMOUS"];
"1000373" -> "1001337"  [label="DDG: MAP_PRIVATE"];
"1000376" -> "1000377"  [label="CFG: "];
"1000377" -> "1000376"  [label="AST: "];
"1000378" -> "1000376"  [label="CFG: "];
"1000414" -> "1000410"  [label="AST: "];
"1000414" -> "1000416"  [label="CFG: "];
"1000415" -> "1000414"  [label="AST: "];
"1000416" -> "1000414"  [label="AST: "];
"1000410" -> "1000414"  [label="CFG: "];
"1000414" -> "1001337"  [label="DDG: size"];
"1000414" -> "1001337"  [label="DDG: declaredSize"];
"1000414" -> "1000410"  [label="DDG: declaredSize"];
"1000414" -> "1000410"  [label="DDG: size"];
"1000403" -> "1000414"  [label="DDG: declaredSize"];
"1000414" -> "1000418"  [label="DDG: declaredSize"];
"1000414" -> "1000418"  [label="DDG: size"];
"1000414" -> "1000443"  [label="DDG: size"];
"1000414" -> "1000452"  [label="DDG: size"];
"1000414" -> "1000470"  [label="DDG: size"];
"1000414" -> "1000486"  [label="DDG: size"];
"1000414" -> "1000516"  [label="DDG: size"];
"1000403" -> "1000398"  [label="AST: "];
"1000403" -> "1000405"  [label="CFG: "];
"1000404" -> "1000403"  [label="AST: "];
"1000405" -> "1000403"  [label="AST: "];
"1000412" -> "1000403"  [label="CFG: "];
"1000403" -> "1001337"  [label="DDG: *(OMX_U32*)params"];
"1000403" -> "1001337"  [label="DDG: declaredSize"];
"1000403" -> "1000418"  [label="DDG: declaredSize"];
"1000459" -> "1000439"  [label="AST: "];
"1000460" -> "1000459"  [label="AST: "];
"1000466" -> "1000459"  [label="CFG: "];
"1000459" -> "1001337"  [label="DDG: err"];
"1000459" -> "1001337"  [label="DDG: getConfig(node, index, params, size)"];
"1000459" -> "1000501"  [label="DDG: err"];
"1000501" -> "1000277"  [label="AST: "];
"1000501" -> "1000502"  [label="CFG: "];
"1000502" -> "1000501"  [label="AST: "];
"1000507" -> "1000501"  [label="CFG: "];
"1000501" -> "1001337"  [label="DDG: err"];
"1000501" -> "1001337"  [label="DDG: reply->writeInt32(err)"];
"1000441" -> "1000501"  [label="DDG: err"];
"1000331" -> "1000501"  [label="DDG: err"];
"1000468" -> "1000501"  [label="DDG: err"];
"1000399" -> "1000501"  [label="DDG: err"];
"1000299" -> "1000501"  [label="DDG: err"];
"1000484" -> "1000501"  [label="DDG: err"];
"1000390" -> "1000501"  [label="DDG: err"];
"1000450" -> "1000501"  [label="DDG: err"];
"1000501" -> "1000512"  [label="DDG: err"];
"1000512" -> "1000504"  [label="AST: "];
"1000512" -> "1000514"  [label="CFG: "];
"1000513" -> "1000512"  [label="AST: "];
"1000514" -> "1000512"  [label="AST: "];
"1000504" -> "1000512"  [label="CFG: "];
"1000512" -> "1001337"  [label="DDG: err"];
"1000512" -> "1001337"  [label="DDG: OK"];
"1000512" -> "1000504"  [label="DDG: err"];
"1000512" -> "1000504"  [label="DDG: OK"];
"1000390" -> "1000512"  [label="DDG: OK"];
"1000504" -> "1000503"  [label="AST: "];
"1000504" -> "1000505"  [label="CFG: "];
"1000505" -> "1000504"  [label="AST: "];
"1000517" -> "1000504"  [label="CFG: "];
"1000520" -> "1000504"  [label="CFG: "];
"1000504" -> "1001337"  [label="DDG: code == GET_PARAMETER || code == GET_CONFIG"];
"1000504" -> "1001337"  [label="DDG: err == OK"];
"1000504" -> "1001337"  [label="DDG: (code == GET_PARAMETER || code == GET_CONFIG) && err == OK"];
"1000505" -> "1000504"  [label="DDG: code == GET_PARAMETER"];
"1000505" -> "1000504"  [label="DDG: code == GET_CONFIG"];
"1000516" -> "1000515"  [label="AST: "];
"1000516" -> "1000518"  [label="CFG: "];
"1000517" -> "1000516"  [label="AST: "];
"1000518" -> "1000516"  [label="AST: "];
"1000520" -> "1000516"  [label="CFG: "];
"1000516" -> "1001337"  [label="DDG: size"];
"1000516" -> "1001337"  [label="DDG: reply->write(params, size)"];
"1000452" -> "1000516"  [label="DDG: params"];
"1000452" -> "1000516"  [label="DDG: size"];
"1000443" -> "1000516"  [label="DDG: params"];
"1000443" -> "1000516"  [label="DDG: size"];
"1000470" -> "1000516"  [label="DDG: params"];
"1000470" -> "1000516"  [label="DDG: size"];
"1000486" -> "1000516"  [label="DDG: params"];
"1000486" -> "1000516"  [label="DDG: size"];
"1000323" -> "1000516"  [label="DDG: size"];
"1000418" -> "1000516"  [label="DDG: size"];
"1000516" -> "1000522"  [label="DDG: params"];
"1000522" -> "1000521"  [label="AST: "];
"1000522" -> "1000524"  [label="CFG: "];
"1000523" -> "1000522"  [label="AST: "];
"1000524" -> "1000522"  [label="AST: "];
"1000526" -> "1000522"  [label="CFG: "];
"1000522" -> "1001337"  [label="DDG: allocSize"];
"1000522" -> "1001337"  [label="DDG: munmap(params, allocSize)"];
"1000452" -> "1000522"  [label="DDG: params"];
"1000443" -> "1000522"  [label="DDG: params"];
"1000470" -> "1000522"  [label="DDG: params"];
"1000486" -> "1000522"  [label="DDG: params"];
"1000311" -> "1000522"  [label="DDG: allocSize"];
"1000432" -> "1000522"  [label="DDG: allocSize"];
}
