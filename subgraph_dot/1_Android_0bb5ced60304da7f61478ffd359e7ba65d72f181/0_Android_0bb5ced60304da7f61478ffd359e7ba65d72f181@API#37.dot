digraph "0_Android_0bb5ced60304da7f61478ffd359e7ba65d72f181@API" {
"1001283" [label="(Call,reply->writeInt32(emptyBuffer(\n                    node, buffer, range_offset, range_length, flags, timestamp, fenceFd)))"];
"1001284" [label="(Call,emptyBuffer(\n                    node, buffer, range_offset, range_length, flags, timestamp, fenceFd))"];
"1001250" [label="(Call,node = (node_id)data.readInt32())"];
"1001252" [label="(Call,(node_id)data.readInt32())"];
"1001256" [label="(Call,buffer = (buffer_id)data.readInt32())"];
"1001258" [label="(Call,(buffer_id)data.readInt32())"];
"1001262" [label="(Call,range_offset = data.readInt32())"];
"1001266" [label="(Call,range_length = data.readInt32())"];
"1001270" [label="(Call,flags = data.readInt32())"];
"1000107" [label="(MethodParameterIn,uint32_t flags)"];
"1001274" [label="(Call,timestamp = data.readInt64())"];
"1001288" [label="(Identifier,range_length)"];
"1001251" [label="(Identifier,node)"];
"1001252" [label="(Call,(node_id)data.readInt32())"];
"1001290" [label="(Identifier,timestamp)"];
"1001263" [label="(Identifier,range_offset)"];
"1001337" [label="(MethodReturn,status_t)"];
"1001332" [label="(Call,BBinder::onTransact(code, data, reply, flags))"];
"1001271" [label="(Identifier,flags)"];
"1001287" [label="(Identifier,range_offset)"];
"1001284" [label="(Call,emptyBuffer(\n                    node, buffer, range_offset, range_length, flags, timestamp, fenceFd))"];
"1001260" [label="(Call,data.readInt32())"];
"1001289" [label="(Identifier,flags)"];
"1001264" [label="(Call,data.readInt32())"];
"1001258" [label="(Call,(buffer_id)data.readInt32())"];
"1001256" [label="(Call,buffer = (buffer_id)data.readInt32())"];
"1001266" [label="(Call,range_length = data.readInt32())"];
"1001274" [label="(Call,timestamp = data.readInt64())"];
"1001285" [label="(Identifier,node)"];
"1001254" [label="(Call,data.readInt32())"];
"1001279" [label="(Identifier,haveFence)"];
"1001267" [label="(Identifier,range_length)"];
"1001286" [label="(Identifier,buffer)"];
"1001283" [label="(Call,reply->writeInt32(emptyBuffer(\n                    node, buffer, range_offset, range_length, flags, timestamp, fenceFd)))"];
"1001244" [label="(Block,)"];
"1001276" [label="(Call,data.readInt64())"];
"1001250" [label="(Call,node = (node_id)data.readInt32())"];
"1001268" [label="(Call,data.readInt32())"];
"1001272" [label="(Call,data.readInt32())"];
"1001291" [label="(Identifier,fenceFd)"];
"1001257" [label="(Identifier,buffer)"];
"1001262" [label="(Call,range_offset = data.readInt32())"];
"1001270" [label="(Call,flags = data.readInt32())"];
"1000107" [label="(MethodParameterIn,uint32_t flags)"];
"1001275" [label="(Identifier,timestamp)"];
"1001293" [label="(Identifier,NO_ERROR)"];
"1001283" -> "1001244"  [label="AST: "];
"1001283" -> "1001284"  [label="CFG: "];
"1001284" -> "1001283"  [label="AST: "];
"1001293" -> "1001283"  [label="CFG: "];
"1001283" -> "1001337"  [label="DDG: reply->writeInt32(emptyBuffer(\n                    node, buffer, range_offset, range_length, flags, timestamp, fenceFd))"];
"1001283" -> "1001337"  [label="DDG: emptyBuffer(\n                    node, buffer, range_offset, range_length, flags, timestamp, fenceFd)"];
"1001284" -> "1001283"  [label="DDG: flags"];
"1001284" -> "1001283"  [label="DDG: range_length"];
"1001284" -> "1001283"  [label="DDG: timestamp"];
"1001284" -> "1001283"  [label="DDG: fenceFd"];
"1001284" -> "1001283"  [label="DDG: buffer"];
"1001284" -> "1001283"  [label="DDG: range_offset"];
"1001284" -> "1001283"  [label="DDG: node"];
"1001284" -> "1001291"  [label="CFG: "];
"1001285" -> "1001284"  [label="AST: "];
"1001286" -> "1001284"  [label="AST: "];
"1001287" -> "1001284"  [label="AST: "];
"1001288" -> "1001284"  [label="AST: "];
"1001289" -> "1001284"  [label="AST: "];
"1001290" -> "1001284"  [label="AST: "];
"1001291" -> "1001284"  [label="AST: "];
"1001284" -> "1001337"  [label="DDG: timestamp"];
"1001284" -> "1001337"  [label="DDG: range_length"];
"1001284" -> "1001337"  [label="DDG: buffer"];
"1001284" -> "1001337"  [label="DDG: node"];
"1001284" -> "1001337"  [label="DDG: flags"];
"1001284" -> "1001337"  [label="DDG: range_offset"];
"1001284" -> "1001337"  [label="DDG: fenceFd"];
"1001250" -> "1001284"  [label="DDG: node"];
"1001256" -> "1001284"  [label="DDG: buffer"];
"1001262" -> "1001284"  [label="DDG: range_offset"];
"1001266" -> "1001284"  [label="DDG: range_length"];
"1001270" -> "1001284"  [label="DDG: flags"];
"1000107" -> "1001284"  [label="DDG: flags"];
"1001274" -> "1001284"  [label="DDG: timestamp"];
"1001250" -> "1001244"  [label="AST: "];
"1001250" -> "1001252"  [label="CFG: "];
"1001251" -> "1001250"  [label="AST: "];
"1001252" -> "1001250"  [label="AST: "];
"1001257" -> "1001250"  [label="CFG: "];
"1001250" -> "1001337"  [label="DDG: (node_id)data.readInt32()"];
"1001252" -> "1001250"  [label="DDG: data.readInt32()"];
"1001252" -> "1001254"  [label="CFG: "];
"1001253" -> "1001252"  [label="AST: "];
"1001254" -> "1001252"  [label="AST: "];
"1001256" -> "1001244"  [label="AST: "];
"1001256" -> "1001258"  [label="CFG: "];
"1001257" -> "1001256"  [label="AST: "];
"1001258" -> "1001256"  [label="AST: "];
"1001263" -> "1001256"  [label="CFG: "];
"1001256" -> "1001337"  [label="DDG: (buffer_id)data.readInt32()"];
"1001258" -> "1001256"  [label="DDG: data.readInt32()"];
"1001258" -> "1001260"  [label="CFG: "];
"1001259" -> "1001258"  [label="AST: "];
"1001260" -> "1001258"  [label="AST: "];
"1001262" -> "1001244"  [label="AST: "];
"1001262" -> "1001264"  [label="CFG: "];
"1001263" -> "1001262"  [label="AST: "];
"1001264" -> "1001262"  [label="AST: "];
"1001267" -> "1001262"  [label="CFG: "];
"1001266" -> "1001244"  [label="AST: "];
"1001266" -> "1001268"  [label="CFG: "];
"1001267" -> "1001266"  [label="AST: "];
"1001268" -> "1001266"  [label="AST: "];
"1001271" -> "1001266"  [label="CFG: "];
"1001270" -> "1001244"  [label="AST: "];
"1001270" -> "1001272"  [label="CFG: "];
"1001271" -> "1001270"  [label="AST: "];
"1001272" -> "1001270"  [label="AST: "];
"1001275" -> "1001270"  [label="CFG: "];
"1000107" -> "1001270"  [label="DDG: flags"];
"1000107" -> "1000103"  [label="AST: "];
"1000107" -> "1001337"  [label="DDG: flags"];
"1000107" -> "1001332"  [label="DDG: flags"];
"1001274" -> "1001244"  [label="AST: "];
"1001274" -> "1001276"  [label="CFG: "];
"1001275" -> "1001274"  [label="AST: "];
"1001276" -> "1001274"  [label="AST: "];
"1001279" -> "1001274"  [label="CFG: "];
"1001274" -> "1001337"  [label="DDG: data.readInt64()"];
}
