digraph "0_linux_3e0097499839e0fe3af380410eababe5a47c4cf9_0@pointer" {
"1000326" [label="(Call,sfp->timeout = mult_frac(val, HZ, USER_HZ))"];
"1000330" [label="(Call,mult_frac(val, HZ, USER_HZ))"];
"1000302" [label="(Call,val >= mult_frac((s64)INT_MAX, USER_HZ, HZ))"];
"1000295" [label="(Call,val < 0)"];
"1000287" [label="(Call,get_user(val, ip))"];
"1000118" [label="(Call,*ip = p)"];
"1000112" [label="(Call,*p = (void __user *)arg)"];
"1000114" [label="(Call,(void __user *)arg)"];
"1000109" [label="(MethodParameterIn,unsigned long arg)"];
"1000304" [label="(Call,mult_frac((s64)INT_MAX, USER_HZ, HZ))"];
"1000305" [label="(Call,(s64)INT_MAX)"];
"1000310" [label="(Call,val = min_t(s64, mult_frac((s64)INT_MAX, USER_HZ, HZ),\n\t\t\t\t    INT_MAX))"];
"1000312" [label="(Call,min_t(s64, mult_frac((s64)INT_MAX, USER_HZ, HZ),\n\t\t\t\t    INT_MAX))"];
"1000314" [label="(Call,mult_frac((s64)INT_MAX, USER_HZ, HZ))"];
"1000315" [label="(Call,(s64)INT_MAX)"];
"1000116" [label="(Identifier,arg)"];
"1000294" [label="(ControlStructure,if (val < 0))"];
"1000330" [label="(Call,mult_frac(val, HZ, USER_HZ))"];
"1000288" [label="(Identifier,val)"];
"1000734" [label="(Call,get_user(val, ip))"];
"1000971" [label="(Call,blk_trace_setup(sdp->device->request_queue,\n\t\t\t\t       sdp->disk->disk_name,\n\t\t\t\t       MKDEV(SCSI_GENERIC_MAJOR, sdp->index),\n\t\t\t\t       NULL, p))"];
"1000906" [label="(Call,*siocp = p)"];
"1000610" [label="(Call,get_user(val, ip))"];
"1000289" [label="(Identifier,ip)"];
"1000114" [label="(Call,(void __user *)arg)"];
"1000801" [label="(Call,put_user(val, ip))"];
"1000321" [label="(Call,sfp->timeout_user = val)"];
"1000285" [label="(Call,result = get_user(val, ip))"];
"1000597" [label="(Call,put_user(val, ip))"];
"1000313" [label="(Identifier,s64)"];
"1000118" [label="(Call,*ip = p)"];
"1000724" [label="(Call,put_user((int) sfp->cmd_q, ip))"];
"1000750" [label="(Call,put_user((int) sfp->keep_orphan, ip))"];
"1000309" [label="(Identifier,HZ)"];
"1000295" [label="(Call,val < 0)"];
"1000492" [label="(Call,get_user(val, ip))"];
"1000296" [label="(Identifier,val)"];
"1000788" [label="(Call,put_user(sg_version_num, ip))"];
"1000314" [label="(Call,mult_frac((s64)INT_MAX, USER_HZ, HZ))"];
"1000760" [label="(Call,get_user(val, ip))"];
"1000877" [label="(Call,put_user(sdp->device->host->hostt->emulated, ip))"];
"1000807" [label="(Call,access_ok(VERIFY_WRITE, p, SZ_SG_REQ_INFO * SG_MAX_QUEUE))"];
"1000929" [label="(Call,sg_scsi_ioctl(sdp->device->request_queue, NULL, filp->f_mode, p))"];
"1000333" [label="(Identifier,USER_HZ)"];
"1000119" [label="(Identifier,ip)"];
"1000335" [label="(Literal,0)"];
"1000120" [label="(Identifier,p)"];
"1000110" [label="(Block,)"];
"1000699" [label="(Call,put_user(val, ip))"];
"1001060" [label="(MethodReturn,RET)"];
"1000943" [label="(Call,get_user(val, ip))"];
"1000315" [label="(Call,(s64)INT_MAX)"];
"1000327" [label="(Call,sfp->timeout)"];
"1000320" [label="(Identifier,INT_MAX)"];
"1000311" [label="(Identifier,val)"];
"1000302" [label="(Call,val >= mult_frac((s64)INT_MAX, USER_HZ, HZ))"];
"1000318" [label="(Identifier,USER_HZ)"];
"1000189" [label="(Call,access_ok(VERIFY_WRITE, p, SZ_SG_IO_HDR))"];
"1000301" [label="(ControlStructure,if (val >= mult_frac((s64)INT_MAX, USER_HZ, HZ)))"];
"1000112" [label="(Call,*p = (void __user *)arg)"];
"1000332" [label="(Identifier,HZ)"];
"1000323" [label="(Identifier,sfp)"];
"1000326" [label="(Call,sfp->timeout = mult_frac(val, HZ, USER_HZ))"];
"1000346" [label="(Call,put_user((int) sdp->device->host->unchecked_isa_dma, ip))"];
"1000331" [label="(Identifier,val)"];
"1000319" [label="(Identifier,HZ)"];
"1000961" [label="(Call,put_user(max_sectors_bytes(sdp->device->request_queue),\n\t\t\t\tip))"];
"1000297" [label="(Literal,0)"];
"1000113" [label="(Identifier,p)"];
"1000300" [label="(Identifier,EIO)"];
"1000303" [label="(Identifier,val)"];
"1000287" [label="(Call,get_user(val, ip))"];
"1000132" [label="(Identifier,sfp)"];
"1000304" [label="(Call,mult_frac((s64)INT_MAX, USER_HZ, HZ))"];
"1000705" [label="(Call,get_user(val, ip))"];
"1000109" [label="(MethodParameterIn,unsigned long arg)"];
"1000312" [label="(Call,min_t(s64, mult_frac((s64)INT_MAX, USER_HZ, HZ),\n\t\t\t\t    INT_MAX))"];
"1000360" [label="(Call,access_ok(VERIFY_WRITE, p, sizeof (sg_scsi_id_t)))"];
"1001054" [label="(Call,scsi_ioctl(sdp->device, cmd_in, p))"];
"1000305" [label="(Call,(s64)INT_MAX)"];
"1000308" [label="(Identifier,USER_HZ)"];
"1000317" [label="(Identifier,INT_MAX)"];
"1000307" [label="(Identifier,INT_MAX)"];
"1000602" [label="(Call,put_user(sdp->sg_tablesize, ip))"];
"1000167" [label="(Block,)"];
"1000512" [label="(Call,access_ok(VERIFY_WRITE, ip, sizeof (int)))"];
"1000310" [label="(Call,val = min_t(s64, mult_frac((s64)INT_MAX, USER_HZ, HZ),\n\t\t\t\t    INT_MAX))"];
"1000326" -> "1000167"  [label="AST: "];
"1000326" -> "1000330"  [label="CFG: "];
"1000327" -> "1000326"  [label="AST: "];
"1000330" -> "1000326"  [label="AST: "];
"1000335" -> "1000326"  [label="CFG: "];
"1000326" -> "1001060"  [label="DDG: mult_frac(val, HZ, USER_HZ)"];
"1000326" -> "1001060"  [label="DDG: sfp->timeout"];
"1000330" -> "1000326"  [label="DDG: val"];
"1000330" -> "1000326"  [label="DDG: HZ"];
"1000330" -> "1000326"  [label="DDG: USER_HZ"];
"1000330" -> "1000333"  [label="CFG: "];
"1000331" -> "1000330"  [label="AST: "];
"1000332" -> "1000330"  [label="AST: "];
"1000333" -> "1000330"  [label="AST: "];
"1000330" -> "1001060"  [label="DDG: val"];
"1000330" -> "1001060"  [label="DDG: USER_HZ"];
"1000330" -> "1001060"  [label="DDG: HZ"];
"1000302" -> "1000330"  [label="DDG: val"];
"1000310" -> "1000330"  [label="DDG: val"];
"1000304" -> "1000330"  [label="DDG: HZ"];
"1000304" -> "1000330"  [label="DDG: USER_HZ"];
"1000314" -> "1000330"  [label="DDG: HZ"];
"1000314" -> "1000330"  [label="DDG: USER_HZ"];
"1000302" -> "1000301"  [label="AST: "];
"1000302" -> "1000304"  [label="CFG: "];
"1000303" -> "1000302"  [label="AST: "];
"1000304" -> "1000302"  [label="AST: "];
"1000311" -> "1000302"  [label="CFG: "];
"1000323" -> "1000302"  [label="CFG: "];
"1000302" -> "1001060"  [label="DDG: mult_frac((s64)INT_MAX, USER_HZ, HZ)"];
"1000302" -> "1001060"  [label="DDG: val >= mult_frac((s64)INT_MAX, USER_HZ, HZ)"];
"1000295" -> "1000302"  [label="DDG: val"];
"1000304" -> "1000302"  [label="DDG: (s64)INT_MAX"];
"1000304" -> "1000302"  [label="DDG: USER_HZ"];
"1000304" -> "1000302"  [label="DDG: HZ"];
"1000302" -> "1000321"  [label="DDG: val"];
"1000295" -> "1000294"  [label="AST: "];
"1000295" -> "1000297"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000297" -> "1000295"  [label="AST: "];
"1000300" -> "1000295"  [label="CFG: "];
"1000303" -> "1000295"  [label="CFG: "];
"1000295" -> "1001060"  [label="DDG: val"];
"1000295" -> "1001060"  [label="DDG: val < 0"];
"1000287" -> "1000295"  [label="DDG: val"];
"1000287" -> "1000285"  [label="AST: "];
"1000287" -> "1000289"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000287"  [label="AST: "];
"1000285" -> "1000287"  [label="CFG: "];
"1000287" -> "1001060"  [label="DDG: ip"];
"1000287" -> "1001060"  [label="DDG: val"];
"1000287" -> "1000285"  [label="DDG: val"];
"1000287" -> "1000285"  [label="DDG: ip"];
"1000118" -> "1000287"  [label="DDG: ip"];
"1000118" -> "1000110"  [label="AST: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="AST: "];
"1000132" -> "1000118"  [label="CFG: "];
"1000118" -> "1001060"  [label="DDG: p"];
"1000118" -> "1001060"  [label="DDG: ip"];
"1000112" -> "1000118"  [label="DDG: p"];
"1000118" -> "1000346"  [label="DDG: ip"];
"1000118" -> "1000492"  [label="DDG: ip"];
"1000118" -> "1000512"  [label="DDG: ip"];
"1000118" -> "1000597"  [label="DDG: ip"];
"1000118" -> "1000602"  [label="DDG: ip"];
"1000118" -> "1000610"  [label="DDG: ip"];
"1000118" -> "1000699"  [label="DDG: ip"];
"1000118" -> "1000705"  [label="DDG: ip"];
"1000118" -> "1000724"  [label="DDG: ip"];
"1000118" -> "1000734"  [label="DDG: ip"];
"1000118" -> "1000750"  [label="DDG: ip"];
"1000118" -> "1000760"  [label="DDG: ip"];
"1000118" -> "1000788"  [label="DDG: ip"];
"1000118" -> "1000801"  [label="DDG: ip"];
"1000118" -> "1000877"  [label="DDG: ip"];
"1000118" -> "1000943"  [label="DDG: ip"];
"1000118" -> "1000961"  [label="DDG: ip"];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000119" -> "1000112"  [label="CFG: "];
"1000112" -> "1001060"  [label="DDG: (void __user *)arg"];
"1000114" -> "1000112"  [label="DDG: arg"];
"1000112" -> "1000189"  [label="DDG: p"];
"1000112" -> "1000360"  [label="DDG: p"];
"1000112" -> "1000807"  [label="DDG: p"];
"1000112" -> "1000906"  [label="DDG: p"];
"1000112" -> "1000929"  [label="DDG: p"];
"1000112" -> "1000971"  [label="DDG: p"];
"1000112" -> "1001054"  [label="DDG: p"];
"1000114" -> "1000116"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000114" -> "1001060"  [label="DDG: arg"];
"1000109" -> "1000114"  [label="DDG: arg"];
"1000109" -> "1000106"  [label="AST: "];
"1000109" -> "1001060"  [label="DDG: arg"];
"1000304" -> "1000309"  [label="CFG: "];
"1000305" -> "1000304"  [label="AST: "];
"1000308" -> "1000304"  [label="AST: "];
"1000309" -> "1000304"  [label="AST: "];
"1000304" -> "1001060"  [label="DDG: (s64)INT_MAX"];
"1000305" -> "1000304"  [label="DDG: INT_MAX"];
"1000304" -> "1000314"  [label="DDG: USER_HZ"];
"1000304" -> "1000314"  [label="DDG: HZ"];
"1000305" -> "1000307"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000307" -> "1000305"  [label="AST: "];
"1000308" -> "1000305"  [label="CFG: "];
"1000305" -> "1001060"  [label="DDG: INT_MAX"];
"1000305" -> "1000315"  [label="DDG: INT_MAX"];
"1000310" -> "1000301"  [label="AST: "];
"1000310" -> "1000312"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000312" -> "1000310"  [label="AST: "];
"1000323" -> "1000310"  [label="CFG: "];
"1000310" -> "1001060"  [label="DDG: min_t(s64, mult_frac((s64)INT_MAX, USER_HZ, HZ),\n\t\t\t\t    INT_MAX)"];
"1000312" -> "1000310"  [label="DDG: s64"];
"1000312" -> "1000310"  [label="DDG: mult_frac((s64)INT_MAX, USER_HZ, HZ)"];
"1000312" -> "1000310"  [label="DDG: INT_MAX"];
"1000310" -> "1000321"  [label="DDG: val"];
"1000312" -> "1000320"  [label="CFG: "];
"1000313" -> "1000312"  [label="AST: "];
"1000314" -> "1000312"  [label="AST: "];
"1000320" -> "1000312"  [label="AST: "];
"1000312" -> "1001060"  [label="DDG: s64"];
"1000312" -> "1001060"  [label="DDG: INT_MAX"];
"1000312" -> "1001060"  [label="DDG: mult_frac((s64)INT_MAX, USER_HZ, HZ)"];
"1000314" -> "1000312"  [label="DDG: (s64)INT_MAX"];
"1000314" -> "1000312"  [label="DDG: USER_HZ"];
"1000314" -> "1000312"  [label="DDG: HZ"];
"1000315" -> "1000312"  [label="DDG: INT_MAX"];
"1000314" -> "1000319"  [label="CFG: "];
"1000315" -> "1000314"  [label="AST: "];
"1000318" -> "1000314"  [label="AST: "];
"1000319" -> "1000314"  [label="AST: "];
"1000320" -> "1000314"  [label="CFG: "];
"1000314" -> "1001060"  [label="DDG: (s64)INT_MAX"];
"1000315" -> "1000314"  [label="DDG: INT_MAX"];
"1000315" -> "1000317"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000317" -> "1000315"  [label="AST: "];
"1000318" -> "1000315"  [label="CFG: "];
}
