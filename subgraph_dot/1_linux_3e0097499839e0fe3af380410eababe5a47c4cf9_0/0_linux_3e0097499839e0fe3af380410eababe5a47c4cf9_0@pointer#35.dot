digraph "0_linux_3e0097499839e0fe3af380410eababe5a47c4cf9_0@pointer" {
"1000760" [label="(Call,get_user(val, ip))"];
"1000118" [label="(Call,*ip = p)"];
"1000112" [label="(Call,*p = (void __user *)arg)"];
"1000114" [label="(Call,(void __user *)arg)"];
"1000109" [label="(MethodParameterIn,unsigned long arg)"];
"1000758" [label="(Call,result = get_user(val, ip))"];
"1000765" [label="(Return,return result;)"];
"1000768" [label="(Call,val > SG_MAX_CDB_SIZE)"];
"1000779" [label="(Call,val > 0)"];
"1000774" [label="(Call,sfp->next_cmd_len = (val > 0) ? val : 0)"];
"1000778" [label="(Call,(val > 0) ? val : 0)"];
"1000116" [label="(Identifier,arg)"];
"1000761" [label="(Identifier,val)"];
"1000971" [label="(Call,blk_trace_setup(sdp->device->request_queue,\n\t\t\t\t       sdp->disk->disk_name,\n\t\t\t\t       MKDEV(SCSI_GENERIC_MAJOR, sdp->index),\n\t\t\t\t       NULL, p))"];
"1000734" [label="(Call,get_user(val, ip))"];
"1000906" [label="(Call,*siocp = p)"];
"1000610" [label="(Call,get_user(val, ip))"];
"1000758" [label="(Call,result = get_user(val, ip))"];
"1000114" [label="(Call,(void __user *)arg)"];
"1000769" [label="(Identifier,val)"];
"1000801" [label="(Call,put_user(val, ip))"];
"1000766" [label="(Identifier,result)"];
"1000770" [label="(Identifier,SG_MAX_CDB_SIZE)"];
"1000597" [label="(Call,put_user(val, ip))"];
"1000118" [label="(Call,*ip = p)"];
"1000724" [label="(Call,put_user((int) sfp->cmd_q, ip))"];
"1000750" [label="(Call,put_user((int) sfp->keep_orphan, ip))"];
"1000877" [label="(Call,put_user(sdp->device->host->hostt->emulated, ip))"];
"1000768" [label="(Call,val > SG_MAX_CDB_SIZE)"];
"1000492" [label="(Call,get_user(val, ip))"];
"1000788" [label="(Call,put_user(sg_version_num, ip))"];
"1000760" [label="(Call,get_user(val, ip))"];
"1000807" [label="(Call,access_ok(VERIFY_WRITE, p, SZ_SG_REQ_INFO * SG_MAX_QUEUE))"];
"1000929" [label="(Call,sg_scsi_ioctl(sdp->device->request_queue, NULL, filp->f_mode, p))"];
"1000780" [label="(Identifier,val)"];
"1000785" [label="(Literal,0)"];
"1000119" [label="(Identifier,ip)"];
"1000120" [label="(Identifier,p)"];
"1000776" [label="(Identifier,sfp)"];
"1000110" [label="(Block,)"];
"1000699" [label="(Call,put_user(val, ip))"];
"1001060" [label="(MethodReturn,RET)"];
"1000943" [label="(Call,get_user(val, ip))"];
"1000765" [label="(Return,return result;)"];
"1000773" [label="(Identifier,ENOMEM)"];
"1000189" [label="(Call,access_ok(VERIFY_WRITE, p, SZ_SG_IO_HDR))"];
"1000783" [label="(Literal,0)"];
"1000762" [label="(Identifier,ip)"];
"1000781" [label="(Literal,0)"];
"1000782" [label="(Identifier,val)"];
"1000775" [label="(Call,sfp->next_cmd_len)"];
"1000112" [label="(Call,*p = (void __user *)arg)"];
"1000764" [label="(Identifier,result)"];
"1000774" [label="(Call,sfp->next_cmd_len = (val > 0) ? val : 0)"];
"1000346" [label="(Call,put_user((int) sdp->device->host->unchecked_isa_dma, ip))"];
"1000763" [label="(ControlStructure,if (result))"];
"1000961" [label="(Call,put_user(max_sectors_bytes(sdp->device->request_queue),\n\t\t\t\tip))"];
"1000113" [label="(Identifier,p)"];
"1000287" [label="(Call,get_user(val, ip))"];
"1000132" [label="(Identifier,sfp)"];
"1000109" [label="(MethodParameterIn,unsigned long arg)"];
"1000360" [label="(Call,access_ok(VERIFY_WRITE, p, sizeof (sg_scsi_id_t)))"];
"1001054" [label="(Call,scsi_ioctl(sdp->device, cmd_in, p))"];
"1000767" [label="(ControlStructure,if (val > SG_MAX_CDB_SIZE))"];
"1000779" [label="(Call,val > 0)"];
"1000602" [label="(Call,put_user(sdp->sg_tablesize, ip))"];
"1000167" [label="(Block,)"];
"1000705" [label="(Call,get_user(val, ip))"];
"1000778" [label="(Call,(val > 0) ? val : 0)"];
"1000759" [label="(Identifier,result)"];
"1000512" [label="(Call,access_ok(VERIFY_WRITE, ip, sizeof (int)))"];
"1000760" -> "1000758"  [label="AST: "];
"1000760" -> "1000762"  [label="CFG: "];
"1000761" -> "1000760"  [label="AST: "];
"1000762" -> "1000760"  [label="AST: "];
"1000758" -> "1000760"  [label="CFG: "];
"1000760" -> "1001060"  [label="DDG: ip"];
"1000760" -> "1001060"  [label="DDG: val"];
"1000760" -> "1000758"  [label="DDG: val"];
"1000760" -> "1000758"  [label="DDG: ip"];
"1000118" -> "1000760"  [label="DDG: ip"];
"1000760" -> "1000768"  [label="DDG: val"];
"1000118" -> "1000110"  [label="AST: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="AST: "];
"1000132" -> "1000118"  [label="CFG: "];
"1000118" -> "1001060"  [label="DDG: p"];
"1000118" -> "1001060"  [label="DDG: ip"];
"1000112" -> "1000118"  [label="DDG: p"];
"1000118" -> "1000287"  [label="DDG: ip"];
"1000118" -> "1000346"  [label="DDG: ip"];
"1000118" -> "1000492"  [label="DDG: ip"];
"1000118" -> "1000512"  [label="DDG: ip"];
"1000118" -> "1000597"  [label="DDG: ip"];
"1000118" -> "1000602"  [label="DDG: ip"];
"1000118" -> "1000610"  [label="DDG: ip"];
"1000118" -> "1000699"  [label="DDG: ip"];
"1000118" -> "1000705"  [label="DDG: ip"];
"1000118" -> "1000724"  [label="DDG: ip"];
"1000118" -> "1000734"  [label="DDG: ip"];
"1000118" -> "1000750"  [label="DDG: ip"];
"1000118" -> "1000788"  [label="DDG: ip"];
"1000118" -> "1000801"  [label="DDG: ip"];
"1000118" -> "1000877"  [label="DDG: ip"];
"1000118" -> "1000943"  [label="DDG: ip"];
"1000118" -> "1000961"  [label="DDG: ip"];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000119" -> "1000112"  [label="CFG: "];
"1000112" -> "1001060"  [label="DDG: (void __user *)arg"];
"1000114" -> "1000112"  [label="DDG: arg"];
"1000112" -> "1000189"  [label="DDG: p"];
"1000112" -> "1000360"  [label="DDG: p"];
"1000112" -> "1000807"  [label="DDG: p"];
"1000112" -> "1000906"  [label="DDG: p"];
"1000112" -> "1000929"  [label="DDG: p"];
"1000112" -> "1000971"  [label="DDG: p"];
"1000112" -> "1001054"  [label="DDG: p"];
"1000114" -> "1000116"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000114" -> "1001060"  [label="DDG: arg"];
"1000109" -> "1000114"  [label="DDG: arg"];
"1000109" -> "1000106"  [label="AST: "];
"1000109" -> "1001060"  [label="DDG: arg"];
"1000758" -> "1000167"  [label="AST: "];
"1000759" -> "1000758"  [label="AST: "];
"1000764" -> "1000758"  [label="CFG: "];
"1000758" -> "1001060"  [label="DDG: get_user(val, ip)"];
"1000758" -> "1001060"  [label="DDG: result"];
"1000758" -> "1000765"  [label="DDG: result"];
"1000765" -> "1000763"  [label="AST: "];
"1000765" -> "1000766"  [label="CFG: "];
"1000766" -> "1000765"  [label="AST: "];
"1001060" -> "1000765"  [label="CFG: "];
"1000765" -> "1001060"  [label="DDG: <RET>"];
"1000766" -> "1000765"  [label="DDG: result"];
"1000768" -> "1000767"  [label="AST: "];
"1000768" -> "1000770"  [label="CFG: "];
"1000769" -> "1000768"  [label="AST: "];
"1000770" -> "1000768"  [label="AST: "];
"1000773" -> "1000768"  [label="CFG: "];
"1000776" -> "1000768"  [label="CFG: "];
"1000768" -> "1001060"  [label="DDG: val"];
"1000768" -> "1001060"  [label="DDG: SG_MAX_CDB_SIZE"];
"1000768" -> "1001060"  [label="DDG: val > SG_MAX_CDB_SIZE"];
"1000768" -> "1000779"  [label="DDG: val"];
"1000779" -> "1000778"  [label="AST: "];
"1000779" -> "1000781"  [label="CFG: "];
"1000780" -> "1000779"  [label="AST: "];
"1000781" -> "1000779"  [label="AST: "];
"1000782" -> "1000779"  [label="CFG: "];
"1000783" -> "1000779"  [label="CFG: "];
"1000779" -> "1000774"  [label="DDG: val"];
"1000779" -> "1000778"  [label="DDG: val"];
"1000774" -> "1000167"  [label="AST: "];
"1000774" -> "1000778"  [label="CFG: "];
"1000775" -> "1000774"  [label="AST: "];
"1000778" -> "1000774"  [label="AST: "];
"1000785" -> "1000774"  [label="CFG: "];
"1000774" -> "1001060"  [label="DDG: (val > 0) ? val : 0"];
"1000774" -> "1001060"  [label="DDG: sfp->next_cmd_len"];
"1000778" -> "1000782"  [label="CFG: "];
"1000778" -> "1000783"  [label="CFG: "];
"1000782" -> "1000778"  [label="AST: "];
"1000783" -> "1000778"  [label="AST: "];
"1000778" -> "1001060"  [label="DDG: val"];
"1000778" -> "1001060"  [label="DDG: val > 0"];
}
