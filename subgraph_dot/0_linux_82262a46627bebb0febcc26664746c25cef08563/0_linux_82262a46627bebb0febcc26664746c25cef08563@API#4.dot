digraph "0_linux_82262a46627bebb0febcc26664746c25cef08563@API" {
"1000163" [label="(Call,snd_ctl_remove_user_ctl(file, &info->id))"];
"1000101" [label="(MethodParameterIn,struct snd_ctl_file *file)"];
"1000161" [label="(Call,err = snd_ctl_remove_user_ctl(file, &info->id))"];
"1000171" [label="(Return,return err;)"];
"1000182" [label="(Call,memcpy(&kctl.id, &info->id, sizeof(info->id)))"];
"1000472" [label="(Call,_kctl->vd[idx].owner = file)"];
"1000187" [label="(Call,&info->id)"];
"1000480" [label="(Identifier,file)"];
"1000162" [label="(Identifier,err)"];
"1000161" [label="(Call,err = snd_ctl_remove_user_ctl(file, &info->id))"];
"1000508" [label="(MethodReturn,static int)"];
"1000163" [label="(Call,snd_ctl_remove_user_ctl(file, &info->id))"];
"1000171" [label="(Return,return err;)"];
"1000172" [label="(Identifier,err)"];
"1000160" [label="(Block,)"];
"1000182" [label="(Call,memcpy(&kctl.id, &info->id, sizeof(info->id)))"];
"1000101" [label="(MethodParameterIn,struct snd_ctl_file *file)"];
"1000183" [label="(Call,&kctl.id)"];
"1000169" [label="(ControlStructure,if (err))"];
"1000170" [label="(Identifier,err)"];
"1000461" [label="(ControlStructure,for (idx = 0; idx < _kctl->count; idx++))"];
"1000473" [label="(Call,_kctl->vd[idx].owner)"];
"1000165" [label="(Call,&info->id)"];
"1000164" [label="(Identifier,file)"];
"1000472" [label="(Call,_kctl->vd[idx].owner = file)"];
"1000104" [label="(Block,)"];
"1000471" [label="(Identifier,idx)"];
"1000191" [label="(Call,sizeof(info->id))"];
"1000197" [label="(Identifier,kctl)"];
"1000163" -> "1000161"  [label="AST: "];
"1000163" -> "1000165"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000165" -> "1000163"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000163" -> "1000508"  [label="DDG: file"];
"1000163" -> "1000508"  [label="DDG: &info->id"];
"1000163" -> "1000161"  [label="DDG: file"];
"1000163" -> "1000161"  [label="DDG: &info->id"];
"1000101" -> "1000163"  [label="DDG: file"];
"1000163" -> "1000182"  [label="DDG: &info->id"];
"1000163" -> "1000472"  [label="DDG: file"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000508"  [label="DDG: file"];
"1000101" -> "1000472"  [label="DDG: file"];
"1000161" -> "1000160"  [label="AST: "];
"1000162" -> "1000161"  [label="AST: "];
"1000170" -> "1000161"  [label="CFG: "];
"1000161" -> "1000508"  [label="DDG: snd_ctl_remove_user_ctl(file, &info->id)"];
"1000161" -> "1000508"  [label="DDG: err"];
"1000161" -> "1000171"  [label="DDG: err"];
"1000171" -> "1000169"  [label="AST: "];
"1000171" -> "1000172"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000508" -> "1000171"  [label="CFG: "];
"1000171" -> "1000508"  [label="DDG: <RET>"];
"1000172" -> "1000171"  [label="DDG: err"];
"1000182" -> "1000104"  [label="AST: "];
"1000182" -> "1000191"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000187" -> "1000182"  [label="AST: "];
"1000191" -> "1000182"  [label="AST: "];
"1000197" -> "1000182"  [label="CFG: "];
"1000182" -> "1000508"  [label="DDG: memcpy(&kctl.id, &info->id, sizeof(info->id))"];
"1000182" -> "1000508"  [label="DDG: &info->id"];
"1000182" -> "1000508"  [label="DDG: &kctl.id"];
"1000472" -> "1000461"  [label="AST: "];
"1000472" -> "1000480"  [label="CFG: "];
"1000473" -> "1000472"  [label="AST: "];
"1000480" -> "1000472"  [label="AST: "];
"1000471" -> "1000472"  [label="CFG: "];
"1000472" -> "1000508"  [label="DDG: file"];
"1000472" -> "1000508"  [label="DDG: _kctl->vd[idx].owner"];
}
