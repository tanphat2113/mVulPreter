digraph "0_mindrot_28652bca29046f62c7045e933e6b931de1d16737_0@pointer" {
"1000116" [label="(MethodParameterIn,u_char *typep)"];
"1000896" [label="(Call,sshbuf_get_u8(state->incoming_packet, typep))"];
"1000893" [label="(Call,(r = sshbuf_get_u8(state->incoming_packet, typep)) != 0)"];
"1000894" [label="(Call,r = sshbuf_get_u8(state->incoming_packet, typep))"];
"1001009" [label="(Return,return r;)"];
"1000981" [label="(Call,sshbuf_dump(state->incoming_packet, stderr))"];
"1001010" [label="(Identifier,r)"];
"1000118" [label="(Block,)"];
"1000902" [label="(ControlStructure,goto out;)"];
"1000856" [label="(Call,r = uncompress_buffer(ssh, state->incoming_packet,\n\t\t    state->compression_buffer))"];
"1000985" [label="(Identifier,stderr)"];
"1000816" [label="(Call,r = sshbuf_consume(state->incoming_packet, 4 + 1))"];
"1000968" [label="(Call,r = ssh_packet_enable_delayed_compress(ssh))"];
"1000897" [label="(Call,state->incoming_packet)"];
"1000874" [label="(Call,r = sshbuf_putb(state->incoming_packet,\n\t\t    state->compression_buffer))"];
"1000591" [label="(Call,r = cipher_crypt(state->receive_context, state->p_read.seqnr, cp,\n\t    sshbuf_ptr(state->input), need, aadlen, authlen))"];
"1000976" [label="(Call,fprintf(stderr, \"read/plain[%d]:\r\n\", *typep))"];
"1000973" [label="(Call,r = 0)"];
"1000981" [label="(Call,sshbuf_dump(state->incoming_packet, stderr))"];
"1000988" [label="(Identifier,state)"];
"1000952" [label="(Call,r = ssh_set_newkeys(ssh, MODE_IN))"];
"1000895" [label="(Identifier,r)"];
"1000435" [label="(Call,r = sshbuf_consume(state->input, block_size))"];
"1000827" [label="(Call,r = sshbuf_consume_end(state->incoming_packet, padlen))"];
"1001009" [label="(Return,return r;)"];
"1000568" [label="(Call,r == SSH_ERR_MAC_INVALID)"];
"1000576" [label="(Call,r = sshbuf_reserve(state->incoming_packet, aadlen + need,\n\t    &cp))"];
"1000888" [label="(Call,sshbuf_len(state->incoming_packet))"];
"1001011" [label="(MethodReturn,RET)"];
"1000900" [label="(Identifier,typep)"];
"1000839" [label="(Call,sshbuf_len(state->incoming_packet))"];
"1000116" [label="(MethodParameterIn,u_char *typep)"];
"1000700" [label="(Call,r = sshbuf_consume(state->input, mac->mac_len))"];
"1000892" [label="(ControlStructure,if ((r = sshbuf_get_u8(state->incoming_packet, typep)) != 0))"];
"1000906" [label="(Identifier,typep)"];
"1001001" [label="(Call,r = kex_start_rekex(ssh))"];
"1000901" [label="(Literal,0)"];
"1000896" [label="(Call,sshbuf_get_u8(state->incoming_packet, typep))"];
"1000893" [label="(Call,(r = sshbuf_get_u8(state->incoming_packet, typep)) != 0)"];
"1000360" [label="(Call,r = cipher_crypt(state->receive_context,\n\t\t    state->p_send.seqnr, cp, sshbuf_ptr(state->input),\n\t\t    block_size, 0, 0))"];
"1000666" [label="(Call,r != SSH_ERR_MAC_INVALID)"];
"1000614" [label="(Call,r = sshbuf_consume(state->input, aadlen + need + authlen))"];
"1000347" [label="(Call,r = sshbuf_reserve(state->incoming_packet, block_size,\n\t\t    &cp))"];
"1000894" [label="(Call,r = sshbuf_get_u8(state->incoming_packet, typep))"];
"1000982" [label="(Call,state->incoming_packet)"];
"1000116" -> "1000114"  [label="AST: "];
"1000116" -> "1001011"  [label="DDG: typep"];
"1000116" -> "1000896"  [label="DDG: typep"];
"1000896" -> "1000894"  [label="AST: "];
"1000896" -> "1000900"  [label="CFG: "];
"1000897" -> "1000896"  [label="AST: "];
"1000900" -> "1000896"  [label="AST: "];
"1000894" -> "1000896"  [label="CFG: "];
"1000896" -> "1001011"  [label="DDG: state->incoming_packet"];
"1000896" -> "1001011"  [label="DDG: typep"];
"1000896" -> "1000893"  [label="DDG: state->incoming_packet"];
"1000896" -> "1000893"  [label="DDG: typep"];
"1000896" -> "1000894"  [label="DDG: state->incoming_packet"];
"1000896" -> "1000894"  [label="DDG: typep"];
"1000839" -> "1000896"  [label="DDG: state->incoming_packet"];
"1000888" -> "1000896"  [label="DDG: state->incoming_packet"];
"1000896" -> "1000981"  [label="DDG: state->incoming_packet"];
"1000893" -> "1000892"  [label="AST: "];
"1000893" -> "1000901"  [label="CFG: "];
"1000894" -> "1000893"  [label="AST: "];
"1000901" -> "1000893"  [label="AST: "];
"1000902" -> "1000893"  [label="CFG: "];
"1000906" -> "1000893"  [label="CFG: "];
"1000893" -> "1001011"  [label="DDG: (r = sshbuf_get_u8(state->incoming_packet, typep)) != 0"];
"1000894" -> "1000893"  [label="DDG: r"];
"1000895" -> "1000894"  [label="AST: "];
"1000901" -> "1000894"  [label="CFG: "];
"1000894" -> "1001011"  [label="DDG: r"];
"1000894" -> "1001011"  [label="DDG: sshbuf_get_u8(state->incoming_packet, typep)"];
"1000894" -> "1001009"  [label="DDG: r"];
"1001009" -> "1000118"  [label="AST: "];
"1001009" -> "1001010"  [label="CFG: "];
"1001010" -> "1001009"  [label="AST: "];
"1001011" -> "1001009"  [label="CFG: "];
"1001009" -> "1001011"  [label="DDG: <RET>"];
"1001010" -> "1001009"  [label="DDG: r"];
"1000856" -> "1001009"  [label="DDG: r"];
"1000952" -> "1001009"  [label="DDG: r"];
"1000568" -> "1001009"  [label="DDG: r"];
"1000968" -> "1001009"  [label="DDG: r"];
"1000816" -> "1001009"  [label="DDG: r"];
"1000614" -> "1001009"  [label="DDG: r"];
"1000827" -> "1001009"  [label="DDG: r"];
"1001001" -> "1001009"  [label="DDG: r"];
"1000874" -> "1001009"  [label="DDG: r"];
"1000666" -> "1001009"  [label="DDG: r"];
"1000435" -> "1001009"  [label="DDG: r"];
"1000360" -> "1001009"  [label="DDG: r"];
"1000576" -> "1001009"  [label="DDG: r"];
"1000973" -> "1001009"  [label="DDG: r"];
"1000700" -> "1001009"  [label="DDG: r"];
"1000347" -> "1001009"  [label="DDG: r"];
"1000591" -> "1001009"  [label="DDG: r"];
"1000981" -> "1000118"  [label="AST: "];
"1000981" -> "1000985"  [label="CFG: "];
"1000982" -> "1000981"  [label="AST: "];
"1000985" -> "1000981"  [label="AST: "];
"1000988" -> "1000981"  [label="CFG: "];
"1000981" -> "1001011"  [label="DDG: sshbuf_dump(state->incoming_packet, stderr)"];
"1000981" -> "1001011"  [label="DDG: state->incoming_packet"];
"1000981" -> "1001011"  [label="DDG: stderr"];
"1000976" -> "1000981"  [label="DDG: stderr"];
}
