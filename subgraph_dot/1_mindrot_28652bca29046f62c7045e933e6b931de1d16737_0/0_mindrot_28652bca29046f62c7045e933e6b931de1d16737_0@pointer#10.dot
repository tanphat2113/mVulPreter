digraph "0_mindrot_28652bca29046f62c7045e933e6b931de1d16737_0@pointer" {
"1000806" [label="(Call,ssh_packet_write_wait(ssh))"];
"1000798" [label="(Call,sshpkt_disconnect(ssh,\n\t\t    \"Corrupted padlen %d on input.\", padlen))"];
"1000115" [label="(MethodParameterIn,struct ssh *ssh)"];
"1000789" [label="(Call,padlen < 4)"];
"1000785" [label="(Call,debug(\"input: padlen %d\", padlen))"];
"1000776" [label="(Call,padlen = sshbuf_ptr(state->incoming_packet)[4])"];
"1000803" [label="(Call,(r = ssh_packet_write_wait(ssh)) != 0)"];
"1000794" [label="(Call,(r = sshpkt_disconnect(ssh,\n\t\t    \"Corrupted padlen %d on input.\", padlen)) != 0 ||\n\t\t    (r = ssh_packet_write_wait(ssh)) != 0)"];
"1000804" [label="(Call,r = ssh_packet_write_wait(ssh))"];
"1000809" [label="(Return,return r;)"];
"1000788" [label="(ControlStructure,if (padlen < 4))"];
"1000799" [label="(Identifier,ssh)"];
"1000118" [label="(Block,)"];
"1000803" [label="(Call,(r = ssh_packet_write_wait(ssh)) != 0)"];
"1000796" [label="(Call,r = sshpkt_disconnect(ssh,\n\t\t    \"Corrupted padlen %d on input.\", padlen))"];
"1000858" [label="(Call,uncompress_buffer(ssh, state->incoming_packet,\n\t\t    state->compression_buffer))"];
"1000793" [label="(ControlStructure,if ((r = sshpkt_disconnect(ssh,\n\t\t    \"Corrupted padlen %d on input.\", padlen)) != 0 ||\n\t\t    (r = ssh_packet_write_wait(ssh)) != 0))"];
"1000790" [label="(Identifier,padlen)"];
"1000801" [label="(Identifier,padlen)"];
"1000494" [label="(Call,ssh_packet_start_discard(ssh, enc, mac, 0,\n\t\t    PACKET_MAX_SIZE - block_size))"];
"1001003" [label="(Call,kex_start_rekex(ssh))"];
"1000795" [label="(Call,(r = sshpkt_disconnect(ssh,\n\t\t    \"Corrupted padlen %d on input.\", padlen)) != 0)"];
"1000784" [label="(Call,DBG(debug(\"input: padlen %d\", padlen)))"];
"1000789" [label="(Call,padlen < 4)"];
"1000794" [label="(Call,(r = sshpkt_disconnect(ssh,\n\t\t    \"Corrupted padlen %d on input.\", padlen)) != 0 ||\n\t\t    (r = ssh_packet_write_wait(ssh)) != 0)"];
"1000800" [label="(Literal,\"Corrupted padlen %d on input.\")"];
"1000829" [label="(Call,sshbuf_consume_end(state->incoming_packet, padlen))"];
"1000805" [label="(Identifier,r)"];
"1000810" [label="(Identifier,r)"];
"1000970" [label="(Call,ssh_packet_enable_delayed_compress(ssh))"];
"1000312" [label="(Call,sshpkt_disconnect(ssh, \"Packet corrupt\"))"];
"1000427" [label="(Call,ssh_packet_start_discard(ssh, enc, mac, 0,\n\t\t\t    PACKET_MAX_SIZE))"];
"1000798" [label="(Call,sshpkt_disconnect(ssh,\n\t\t    \"Corrupted padlen %d on input.\", padlen))"];
"1000115" [label="(MethodParameterIn,struct ssh *ssh)"];
"1000785" [label="(Call,debug(\"input: padlen %d\", padlen))"];
"1000809" [label="(Return,return r;)"];
"1000804" [label="(Call,r = ssh_packet_write_wait(ssh))"];
"1000806" [label="(Call,ssh_packet_write_wait(ssh))"];
"1000807" [label="(Identifier,ssh)"];
"1000778" [label="(Call,sshbuf_ptr(state->incoming_packet)[4])"];
"1000797" [label="(Identifier,r)"];
"1000808" [label="(Literal,0)"];
"1001011" [label="(MethodReturn,RET)"];
"1000992" [label="(Call,ssh_packet_need_rekeying(ssh, 0))"];
"1000786" [label="(Literal,\"input: padlen %d\")"];
"1000776" [label="(Call,padlen = sshbuf_ptr(state->incoming_packet)[4])"];
"1000777" [label="(Identifier,padlen)"];
"1000927" [label="(Call,sshpkt_disconnect(ssh,\n\t\t    \"Invalid ssh2 packet type: %d\", *typep))"];
"1000817" [label="(Identifier,r)"];
"1000954" [label="(Call,ssh_set_newkeys(ssh, MODE_IN))"];
"1000936" [label="(Call,ssh_packet_write_wait(ssh))"];
"1000787" [label="(Identifier,padlen)"];
"1000812" [label="(Identifier,SSH_ERR_CONN_CORRUPT)"];
"1000791" [label="(Literal,4)"];
"1000679" [label="(Call,ssh_packet_start_discard(ssh, enc, mac,\n\t\t\t    sshbuf_len(state->incoming_packet),\n\t\t\t    PACKET_MAX_SIZE - need))"];
"1000806" -> "1000804"  [label="AST: "];
"1000806" -> "1000807"  [label="CFG: "];
"1000807" -> "1000806"  [label="AST: "];
"1000804" -> "1000806"  [label="CFG: "];
"1000806" -> "1001011"  [label="DDG: "];
"1000806" -> "1000803"  [label="DDG: "];
"1000806" -> "1000804"  [label="DDG: "];
"1000798" -> "1000806"  [label="DDG: "];
"1000115" -> "1000806"  [label="DDG: "];
"1000798" -> "1000796"  [label="AST: "];
"1000798" -> "1000801"  [label="CFG: "];
"1000799" -> "1000798"  [label="AST: "];
"1000800" -> "1000798"  [label="AST: "];
"1000801" -> "1000798"  [label="AST: "];
"1000796" -> "1000798"  [label="CFG: "];
"1000798" -> "1001011"  [label="DDG: "];
"1000798" -> "1001011"  [label="DDG: "];
"1000798" -> "1000795"  [label="DDG: "];
"1000798" -> "1000795"  [label="DDG: "];
"1000798" -> "1000795"  [label="DDG: "];
"1000798" -> "1000796"  [label="DDG: "];
"1000798" -> "1000796"  [label="DDG: "];
"1000798" -> "1000796"  [label="DDG: "];
"1000115" -> "1000798"  [label="DDG: "];
"1000789" -> "1000798"  [label="DDG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1001011"  [label="DDG: "];
"1000115" -> "1000312"  [label="DDG: "];
"1000115" -> "1000427"  [label="DDG: "];
"1000115" -> "1000494"  [label="DDG: "];
"1000115" -> "1000679"  [label="DDG: "];
"1000115" -> "1000858"  [label="DDG: "];
"1000115" -> "1000927"  [label="DDG: "];
"1000115" -> "1000936"  [label="DDG: "];
"1000115" -> "1000954"  [label="DDG: "];
"1000115" -> "1000970"  [label="DDG: "];
"1000115" -> "1000992"  [label="DDG: "];
"1000115" -> "1001003"  [label="DDG: "];
"1000789" -> "1000788"  [label="AST: "];
"1000789" -> "1000791"  [label="CFG: "];
"1000790" -> "1000789"  [label="AST: "];
"1000791" -> "1000789"  [label="AST: "];
"1000797" -> "1000789"  [label="CFG: "];
"1000817" -> "1000789"  [label="CFG: "];
"1000789" -> "1001011"  [label="DDG: "];
"1000789" -> "1001011"  [label="DDG: "];
"1000785" -> "1000789"  [label="DDG: "];
"1000789" -> "1000829"  [label="DDG: "];
"1000785" -> "1000784"  [label="AST: "];
"1000785" -> "1000787"  [label="CFG: "];
"1000786" -> "1000785"  [label="AST: "];
"1000787" -> "1000785"  [label="AST: "];
"1000784" -> "1000785"  [label="CFG: "];
"1000785" -> "1000784"  [label="DDG: "];
"1000785" -> "1000784"  [label="DDG: "];
"1000776" -> "1000785"  [label="DDG: "];
"1000776" -> "1000118"  [label="AST: "];
"1000776" -> "1000778"  [label="CFG: "];
"1000777" -> "1000776"  [label="AST: "];
"1000778" -> "1000776"  [label="AST: "];
"1000786" -> "1000776"  [label="CFG: "];
"1000776" -> "1001011"  [label="DDG: "];
"1000803" -> "1000794"  [label="AST: "];
"1000803" -> "1000808"  [label="CFG: "];
"1000804" -> "1000803"  [label="AST: "];
"1000808" -> "1000803"  [label="AST: "];
"1000794" -> "1000803"  [label="CFG: "];
"1000803" -> "1000794"  [label="DDG: "];
"1000804" -> "1000803"  [label="DDG: "];
"1000794" -> "1000793"  [label="AST: "];
"1000794" -> "1000795"  [label="CFG: "];
"1000795" -> "1000794"  [label="AST: "];
"1000810" -> "1000794"  [label="CFG: "];
"1000812" -> "1000794"  [label="CFG: "];
"1000794" -> "1001011"  [label="DDG: "];
"1000794" -> "1001011"  [label="DDG: "];
"1000794" -> "1001011"  [label="DDG: "];
"1000795" -> "1000794"  [label="DDG: "];
"1000805" -> "1000804"  [label="AST: "];
"1000808" -> "1000804"  [label="CFG: "];
"1000804" -> "1001011"  [label="DDG: "];
"1000804" -> "1001011"  [label="DDG: "];
"1000804" -> "1000809"  [label="DDG: "];
"1000809" -> "1000793"  [label="AST: "];
"1000809" -> "1000810"  [label="CFG: "];
"1000810" -> "1000809"  [label="AST: "];
"1001011" -> "1000809"  [label="CFG: "];
"1000809" -> "1001011"  [label="DDG: "];
"1000810" -> "1000809"  [label="DDG: "];
"1000796" -> "1000809"  [label="DDG: "];
}
