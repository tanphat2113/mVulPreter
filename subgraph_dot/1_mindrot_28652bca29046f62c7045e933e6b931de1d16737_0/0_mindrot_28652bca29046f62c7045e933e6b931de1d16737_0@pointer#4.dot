digraph "0_mindrot_28652bca29046f62c7045e933e6b931de1d16737_0@pointer" {
"1000904" [label="(Call,ssh_packet_log_type(*typep))"];
"1000151" [label="(Call,*typep = SSH_MSG_NONE)"];
"1000907" [label="(Call,debug3(\"receive packet: type %u\", *typep))"];
"1000913" [label="(Call,*typep < SSH2_MSG_MIN)"];
"1000912" [label="(Call,*typep < SSH2_MSG_MIN || *typep >= SSH2_MSG_LOCAL_MIN)"];
"1000917" [label="(Call,*typep >= SSH2_MSG_LOCAL_MIN)"];
"1000927" [label="(Call,sshpkt_disconnect(ssh,\n\t\t    \"Invalid ssh2 packet type: %d\", *typep))"];
"1000924" [label="(Call,(r = sshpkt_disconnect(ssh,\n\t\t    \"Invalid ssh2 packet type: %d\", *typep)) != 0)"];
"1000923" [label="(Call,(r = sshpkt_disconnect(ssh,\n\t\t    \"Invalid ssh2 packet type: %d\", *typep)) != 0 ||\n\t\t    (r = ssh_packet_write_wait(ssh)) != 0)"];
"1000925" [label="(Call,r = sshpkt_disconnect(ssh,\n\t\t    \"Invalid ssh2 packet type: %d\", *typep))"];
"1000939" [label="(Return,return r;)"];
"1000936" [label="(Call,ssh_packet_write_wait(ssh))"];
"1000933" [label="(Call,(r = ssh_packet_write_wait(ssh)) != 0)"];
"1000934" [label="(Call,r = ssh_packet_write_wait(ssh))"];
"1000948" [label="(Call,*typep == SSH2_MSG_NEWKEYS)"];
"1000960" [label="(Call,*typep == SSH2_MSG_USERAUTH_SUCCESS)"];
"1000959" [label="(Call,*typep == SSH2_MSG_USERAUTH_SUCCESS && !state->server_side)"];
"1000976" [label="(Call,fprintf(stderr, \"read/plain[%d]:\r\n\", *typep))"];
"1000981" [label="(Call,sshbuf_dump(state->incoming_packet, stderr))"];
"1000923" [label="(Call,(r = sshpkt_disconnect(ssh,\n\t\t    \"Invalid ssh2 packet type: %d\", *typep)) != 0 ||\n\t\t    (r = ssh_packet_write_wait(ssh)) != 0)"];
"1000904" [label="(Call,ssh_packet_log_type(*typep))"];
"1000118" [label="(Block,)"];
"1000913" [label="(Call,*typep < SSH2_MSG_MIN)"];
"1000962" [label="(Identifier,typep)"];
"1000858" [label="(Call,uncompress_buffer(ssh, state->incoming_packet,\n\t\t    state->compression_buffer))"];
"1000925" [label="(Call,r = sshpkt_disconnect(ssh,\n\t\t    \"Invalid ssh2 packet type: %d\", *typep))"];
"1000926" [label="(Identifier,r)"];
"1000924" [label="(Call,(r = sshpkt_disconnect(ssh,\n\t\t    \"Invalid ssh2 packet type: %d\", *typep)) != 0)"];
"1000933" [label="(Call,(r = ssh_packet_write_wait(ssh)) != 0)"];
"1000945" [label="(Identifier,r)"];
"1000918" [label="(Call,*typep)"];
"1000978" [label="(Literal,\"read/plain[%d]:\r\n\")"];
"1000953" [label="(Identifier,r)"];
"1000959" [label="(Call,*typep == SSH2_MSG_USERAUTH_SUCCESS && !state->server_side)"];
"1000520" [label="(Call,sshbuf_dump(state->input, stderr))"];
"1000985" [label="(Identifier,stderr)"];
"1000915" [label="(Identifier,typep)"];
"1000905" [label="(Call,*typep)"];
"1000983" [label="(Identifier,state)"];
"1000919" [label="(Identifier,typep)"];
"1000976" [label="(Call,fprintf(stderr, \"read/plain[%d]:\r\n\", *typep))"];
"1000974" [label="(Identifier,r)"];
"1000939" [label="(Return,return r;)"];
"1000935" [label="(Identifier,r)"];
"1000960" [label="(Call,*typep == SSH2_MSG_USERAUTH_SUCCESS)"];
"1000928" [label="(Identifier,ssh)"];
"1000981" [label="(Call,sshbuf_dump(state->incoming_packet, stderr))"];
"1000988" [label="(Identifier,state)"];
"1000951" [label="(Identifier,SSH2_MSG_NEWKEYS)"];
"1000940" [label="(Identifier,r)"];
"1000157" [label="(Identifier,state)"];
"1000938" [label="(Literal,0)"];
"1000949" [label="(Call,*typep)"];
"1000911" [label="(ControlStructure,if (*typep < SSH2_MSG_MIN || *typep >= SSH2_MSG_LOCAL_MIN))"];
"1000115" [label="(MethodParameterIn,struct ssh *ssh)"];
"1000917" [label="(Call,*typep >= SSH2_MSG_LOCAL_MIN)"];
"1000947" [label="(ControlStructure,if (*typep == SSH2_MSG_NEWKEYS))"];
"1000969" [label="(Identifier,r)"];
"1000934" [label="(Call,r = ssh_packet_write_wait(ssh))"];
"1000964" [label="(Call,!state->server_side)"];
"1000979" [label="(Call,*typep)"];
"1000930" [label="(Call,*typep)"];
"1000961" [label="(Call,*typep)"];
"1000907" [label="(Call,debug3(\"receive packet: type %u\", *typep))"];
"1000916" [label="(Identifier,SSH2_MSG_MIN)"];
"1000937" [label="(Identifier,ssh)"];
"1000908" [label="(Literal,\"receive packet: type %u\")"];
"1001011" [label="(MethodReturn,RET)"];
"1000920" [label="(Identifier,SSH2_MSG_LOCAL_MIN)"];
"1000922" [label="(ControlStructure,if ((r = sshpkt_disconnect(ssh,\n\t\t    \"Invalid ssh2 packet type: %d\", *typep)) != 0 ||\n\t\t    (r = ssh_packet_write_wait(ssh)) != 0))"];
"1000932" [label="(Literal,0)"];
"1000963" [label="(Identifier,SSH2_MSG_USERAUTH_SUCCESS)"];
"1000909" [label="(Call,*typep)"];
"1000927" [label="(Call,sshpkt_disconnect(ssh,\n\t\t    \"Invalid ssh2 packet type: %d\", *typep))"];
"1000152" [label="(Call,*typep)"];
"1000903" [label="(ControlStructure,if (ssh_packet_log_type(*typep)))"];
"1000929" [label="(Literal,\"Invalid ssh2 packet type: %d\")"];
"1000936" [label="(Call,ssh_packet_write_wait(ssh))"];
"1000948" [label="(Call,*typep == SSH2_MSG_NEWKEYS)"];
"1000154" [label="(Identifier,SSH_MSG_NONE)"];
"1000958" [label="(ControlStructure,if (*typep == SSH2_MSG_USERAUTH_SUCCESS && !state->server_side))"];
"1000942" [label="(Identifier,SSH_ERR_PROTOCOL_ERROR)"];
"1000912" [label="(Call,*typep < SSH2_MSG_MIN || *typep >= SSH2_MSG_LOCAL_MIN)"];
"1000977" [label="(Identifier,stderr)"];
"1000896" [label="(Call,sshbuf_get_u8(state->incoming_packet, typep))"];
"1000966" [label="(Identifier,state)"];
"1000914" [label="(Call,*typep)"];
"1000151" [label="(Call,*typep = SSH_MSG_NONE)"];
"1000982" [label="(Call,state->incoming_packet)"];
"1000904" -> "1000903"  [label="AST: "];
"1000904" -> "1000905"  [label="CFG: "];
"1000905" -> "1000904"  [label="AST: "];
"1000908" -> "1000904"  [label="CFG: "];
"1000915" -> "1000904"  [label="CFG: "];
"1000904" -> "1001011"  [label="DDG: "];
"1000151" -> "1000904"  [label="DDG: "];
"1000904" -> "1000907"  [label="DDG: "];
"1000904" -> "1000913"  [label="DDG: "];
"1000151" -> "1000118"  [label="AST: "];
"1000151" -> "1000154"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000154" -> "1000151"  [label="AST: "];
"1000157" -> "1000151"  [label="CFG: "];
"1000151" -> "1001011"  [label="DDG: "];
"1000151" -> "1001011"  [label="DDG: "];
"1000907" -> "1000903"  [label="AST: "];
"1000907" -> "1000909"  [label="CFG: "];
"1000908" -> "1000907"  [label="AST: "];
"1000909" -> "1000907"  [label="AST: "];
"1000915" -> "1000907"  [label="CFG: "];
"1000907" -> "1001011"  [label="DDG: "];
"1000907" -> "1000913"  [label="DDG: "];
"1000913" -> "1000912"  [label="AST: "];
"1000913" -> "1000916"  [label="CFG: "];
"1000914" -> "1000913"  [label="AST: "];
"1000916" -> "1000913"  [label="AST: "];
"1000919" -> "1000913"  [label="CFG: "];
"1000912" -> "1000913"  [label="CFG: "];
"1000913" -> "1001011"  [label="DDG: "];
"1000913" -> "1000912"  [label="DDG: "];
"1000913" -> "1000912"  [label="DDG: "];
"1000913" -> "1000917"  [label="DDG: "];
"1000913" -> "1000927"  [label="DDG: "];
"1000913" -> "1000948"  [label="DDG: "];
"1000912" -> "1000911"  [label="AST: "];
"1000912" -> "1000917"  [label="CFG: "];
"1000917" -> "1000912"  [label="AST: "];
"1000926" -> "1000912"  [label="CFG: "];
"1000945" -> "1000912"  [label="CFG: "];
"1000912" -> "1001011"  [label="DDG: "];
"1000912" -> "1001011"  [label="DDG: "];
"1000912" -> "1001011"  [label="DDG: "];
"1000917" -> "1000912"  [label="DDG: "];
"1000917" -> "1000912"  [label="DDG: "];
"1000917" -> "1000920"  [label="CFG: "];
"1000918" -> "1000917"  [label="AST: "];
"1000920" -> "1000917"  [label="AST: "];
"1000917" -> "1001011"  [label="DDG: "];
"1000917" -> "1000927"  [label="DDG: "];
"1000917" -> "1000948"  [label="DDG: "];
"1000927" -> "1000925"  [label="AST: "];
"1000927" -> "1000930"  [label="CFG: "];
"1000928" -> "1000927"  [label="AST: "];
"1000929" -> "1000927"  [label="AST: "];
"1000930" -> "1000927"  [label="AST: "];
"1000925" -> "1000927"  [label="CFG: "];
"1000927" -> "1001011"  [label="DDG: "];
"1000927" -> "1001011"  [label="DDG: "];
"1000927" -> "1000924"  [label="DDG: "];
"1000927" -> "1000924"  [label="DDG: "];
"1000927" -> "1000924"  [label="DDG: "];
"1000927" -> "1000925"  [label="DDG: "];
"1000927" -> "1000925"  [label="DDG: "];
"1000927" -> "1000925"  [label="DDG: "];
"1000858" -> "1000927"  [label="DDG: "];
"1000115" -> "1000927"  [label="DDG: "];
"1000927" -> "1000936"  [label="DDG: "];
"1000924" -> "1000923"  [label="AST: "];
"1000924" -> "1000932"  [label="CFG: "];
"1000925" -> "1000924"  [label="AST: "];
"1000932" -> "1000924"  [label="AST: "];
"1000935" -> "1000924"  [label="CFG: "];
"1000923" -> "1000924"  [label="CFG: "];
"1000924" -> "1000923"  [label="DDG: "];
"1000925" -> "1000924"  [label="DDG: "];
"1000923" -> "1000922"  [label="AST: "];
"1000923" -> "1000933"  [label="CFG: "];
"1000933" -> "1000923"  [label="AST: "];
"1000940" -> "1000923"  [label="CFG: "];
"1000942" -> "1000923"  [label="CFG: "];
"1000923" -> "1001011"  [label="DDG: "];
"1000923" -> "1001011"  [label="DDG: "];
"1000923" -> "1001011"  [label="DDG: "];
"1000933" -> "1000923"  [label="DDG: "];
"1000926" -> "1000925"  [label="AST: "];
"1000932" -> "1000925"  [label="CFG: "];
"1000925" -> "1001011"  [label="DDG: "];
"1000925" -> "1001011"  [label="DDG: "];
"1000925" -> "1000939"  [label="DDG: "];
"1000939" -> "1000922"  [label="AST: "];
"1000939" -> "1000940"  [label="CFG: "];
"1000940" -> "1000939"  [label="AST: "];
"1001011" -> "1000939"  [label="CFG: "];
"1000939" -> "1001011"  [label="DDG: "];
"1000940" -> "1000939"  [label="DDG: "];
"1000934" -> "1000939"  [label="DDG: "];
"1000936" -> "1000934"  [label="AST: "];
"1000936" -> "1000937"  [label="CFG: "];
"1000937" -> "1000936"  [label="AST: "];
"1000934" -> "1000936"  [label="CFG: "];
"1000936" -> "1001011"  [label="DDG: "];
"1000936" -> "1000933"  [label="DDG: "];
"1000936" -> "1000934"  [label="DDG: "];
"1000115" -> "1000936"  [label="DDG: "];
"1000933" -> "1000938"  [label="CFG: "];
"1000934" -> "1000933"  [label="AST: "];
"1000938" -> "1000933"  [label="AST: "];
"1000934" -> "1000933"  [label="DDG: "];
"1000935" -> "1000934"  [label="AST: "];
"1000938" -> "1000934"  [label="CFG: "];
"1000934" -> "1001011"  [label="DDG: "];
"1000934" -> "1001011"  [label="DDG: "];
"1000948" -> "1000947"  [label="AST: "];
"1000948" -> "1000951"  [label="CFG: "];
"1000949" -> "1000948"  [label="AST: "];
"1000951" -> "1000948"  [label="AST: "];
"1000953" -> "1000948"  [label="CFG: "];
"1000962" -> "1000948"  [label="CFG: "];
"1000948" -> "1001011"  [label="DDG: "];
"1000948" -> "1001011"  [label="DDG: "];
"1000948" -> "1000960"  [label="DDG: "];
"1000948" -> "1000976"  [label="DDG: "];
"1000960" -> "1000959"  [label="AST: "];
"1000960" -> "1000963"  [label="CFG: "];
"1000961" -> "1000960"  [label="AST: "];
"1000963" -> "1000960"  [label="AST: "];
"1000966" -> "1000960"  [label="CFG: "];
"1000959" -> "1000960"  [label="CFG: "];
"1000960" -> "1001011"  [label="DDG: "];
"1000960" -> "1000959"  [label="DDG: "];
"1000960" -> "1000959"  [label="DDG: "];
"1000960" -> "1000976"  [label="DDG: "];
"1000959" -> "1000958"  [label="AST: "];
"1000959" -> "1000964"  [label="CFG: "];
"1000964" -> "1000959"  [label="AST: "];
"1000969" -> "1000959"  [label="CFG: "];
"1000974" -> "1000959"  [label="CFG: "];
"1000959" -> "1001011"  [label="DDG: "];
"1000959" -> "1001011"  [label="DDG: "];
"1000959" -> "1001011"  [label="DDG: "];
"1000964" -> "1000959"  [label="DDG: "];
"1000976" -> "1000118"  [label="AST: "];
"1000976" -> "1000979"  [label="CFG: "];
"1000977" -> "1000976"  [label="AST: "];
"1000978" -> "1000976"  [label="AST: "];
"1000979" -> "1000976"  [label="AST: "];
"1000983" -> "1000976"  [label="CFG: "];
"1000976" -> "1001011"  [label="DDG: "];
"1000976" -> "1001011"  [label="DDG: "];
"1000520" -> "1000976"  [label="DDG: "];
"1000976" -> "1000981"  [label="DDG: "];
"1000981" -> "1000118"  [label="AST: "];
"1000981" -> "1000985"  [label="CFG: "];
"1000982" -> "1000981"  [label="AST: "];
"1000985" -> "1000981"  [label="AST: "];
"1000988" -> "1000981"  [label="CFG: "];
"1000981" -> "1001011"  [label="DDG: "];
"1000981" -> "1001011"  [label="DDG: "];
"1000981" -> "1001011"  [label="DDG: "];
"1000896" -> "1000981"  [label="DDG: "];
}
