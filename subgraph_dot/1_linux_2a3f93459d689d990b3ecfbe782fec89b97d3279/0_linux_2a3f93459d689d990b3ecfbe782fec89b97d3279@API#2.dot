digraph "0_linux_2a3f93459d689d990b3ecfbe782fec89b97d3279@API" {
"1000121" [label="(Call,nr_regs = sizeof(*regs) / sizeof(__u32))"];
"1000148" [label="(Call,off >= nr_regs)"];
"1000147" [label="(Call,off >= nr_regs ||\n\t    (off + (KVM_REG_SIZE(reg->id) / sizeof(__u32))) >= nr_regs)"];
"1000151" [label="(Call,(off + (KVM_REG_SIZE(reg->id) / sizeof(__u32))) >= nr_regs)"];
"1000152" [label="(Call,off + (KVM_REG_SIZE(reg->id) / sizeof(__u32)))"];
"1000197" [label="(Call,off == KVM_REG_ARM_CORE_REG(regs.pstate))"];
"1000232" [label="(Call,memcpy((u32 *)regs + off, valp, KVM_REG_SIZE(reg->id)))"];
"1000233" [label="(Call,(u32 *)regs + off)"];
"1000209" [label="(Call,(u32 *)valp)"];
"1000161" [label="(Identifier,nr_regs)"];
"1000239" [label="(Call,KVM_REG_SIZE(reg->id))"];
"1000150" [label="(Identifier,nr_regs)"];
"1000123" [label="(Call,sizeof(*regs) / sizeof(__u32))"];
"1000152" [label="(Call,off + (KVM_REG_SIZE(reg->id) / sizeof(__u32)))"];
"1000164" [label="(Identifier,ENOENT)"];
"1000198" [label="(Identifier,off)"];
"1000140" [label="(Call,off = core_reg_offset_from_id(reg->id))"];
"1000234" [label="(Call,(u32 *)regs)"];
"1000183" [label="(Call,copy_from_user(valp, uaddr, KVM_REG_SIZE(reg->id)))"];
"1000197" [label="(Call,off == KVM_REG_ARM_CORE_REG(regs.pstate))"];
"1000199" [label="(Call,KVM_REG_ARM_CORE_REG(regs.pstate))"];
"1000233" [label="(Call,(u32 *)regs + off)"];
"1000146" [label="(ControlStructure,if (off >= nr_regs ||\n\t    (off + (KVM_REG_SIZE(reg->id) / sizeof(__u32))) >= nr_regs))"];
"1000121" [label="(Call,nr_regs = sizeof(*regs) / sizeof(__u32))"];
"1000237" [label="(Identifier,off)"];
"1000206" [label="(Identifier,mode)"];
"1000196" [label="(ControlStructure,if (off == KVM_REG_ARM_CORE_REG(regs.pstate)))"];
"1000148" [label="(Call,off >= nr_regs)"];
"1000149" [label="(Identifier,off)"];
"1000153" [label="(Identifier,off)"];
"1000238" [label="(Identifier,valp)"];
"1000132" [label="(Identifier,valp)"];
"1000232" [label="(Call,memcpy((u32 *)regs + off, valp, KVM_REG_SIZE(reg->id)))"];
"1000243" [label="(JumpTarget,out:)"];
"1000154" [label="(Call,KVM_REG_SIZE(reg->id) / sizeof(__u32))"];
"1000122" [label="(Identifier,nr_regs)"];
"1000246" [label="(MethodReturn,static int)"];
"1000147" [label="(Call,off >= nr_regs ||\n\t    (off + (KVM_REG_SIZE(reg->id) / sizeof(__u32))) >= nr_regs)"];
"1000167" [label="(Identifier,reg)"];
"1000104" [label="(Block,)"];
"1000151" [label="(Call,(off + (KVM_REG_SIZE(reg->id) / sizeof(__u32))) >= nr_regs)"];
"1000121" -> "1000104"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000132" -> "1000121"  [label="CFG: "];
"1000121" -> "1000246"  [label="DDG: sizeof(*regs) / sizeof(__u32)"];
"1000121" -> "1000148"  [label="DDG: nr_regs"];
"1000148" -> "1000147"  [label="AST: "];
"1000148" -> "1000150"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000150" -> "1000148"  [label="AST: "];
"1000153" -> "1000148"  [label="CFG: "];
"1000147" -> "1000148"  [label="CFG: "];
"1000148" -> "1000246"  [label="DDG: off"];
"1000148" -> "1000246"  [label="DDG: nr_regs"];
"1000148" -> "1000147"  [label="DDG: off"];
"1000148" -> "1000147"  [label="DDG: nr_regs"];
"1000140" -> "1000148"  [label="DDG: off"];
"1000148" -> "1000151"  [label="DDG: off"];
"1000148" -> "1000151"  [label="DDG: nr_regs"];
"1000148" -> "1000152"  [label="DDG: off"];
"1000148" -> "1000197"  [label="DDG: off"];
"1000147" -> "1000146"  [label="AST: "];
"1000147" -> "1000151"  [label="CFG: "];
"1000151" -> "1000147"  [label="AST: "];
"1000164" -> "1000147"  [label="CFG: "];
"1000167" -> "1000147"  [label="CFG: "];
"1000147" -> "1000246"  [label="DDG: (off + (KVM_REG_SIZE(reg->id) / sizeof(__u32))) >= nr_regs"];
"1000147" -> "1000246"  [label="DDG: off >= nr_regs"];
"1000147" -> "1000246"  [label="DDG: off >= nr_regs ||\n\t    (off + (KVM_REG_SIZE(reg->id) / sizeof(__u32))) >= nr_regs"];
"1000151" -> "1000147"  [label="DDG: off + (KVM_REG_SIZE(reg->id) / sizeof(__u32))"];
"1000151" -> "1000147"  [label="DDG: nr_regs"];
"1000151" -> "1000161"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000161" -> "1000151"  [label="AST: "];
"1000151" -> "1000246"  [label="DDG: off + (KVM_REG_SIZE(reg->id) / sizeof(__u32))"];
"1000151" -> "1000246"  [label="DDG: nr_regs"];
"1000154" -> "1000151"  [label="DDG: KVM_REG_SIZE(reg->id)"];
"1000152" -> "1000154"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000161" -> "1000152"  [label="CFG: "];
"1000152" -> "1000246"  [label="DDG: off"];
"1000152" -> "1000246"  [label="DDG: KVM_REG_SIZE(reg->id) / sizeof(__u32)"];
"1000154" -> "1000152"  [label="DDG: KVM_REG_SIZE(reg->id)"];
"1000197" -> "1000196"  [label="AST: "];
"1000197" -> "1000199"  [label="CFG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000199" -> "1000197"  [label="AST: "];
"1000206" -> "1000197"  [label="CFG: "];
"1000235" -> "1000197"  [label="CFG: "];
"1000197" -> "1000246"  [label="DDG: off == KVM_REG_ARM_CORE_REG(regs.pstate)"];
"1000197" -> "1000246"  [label="DDG: KVM_REG_ARM_CORE_REG(regs.pstate)"];
"1000197" -> "1000246"  [label="DDG: off"];
"1000199" -> "1000197"  [label="DDG: regs.pstate"];
"1000197" -> "1000232"  [label="DDG: off"];
"1000197" -> "1000233"  [label="DDG: off"];
"1000232" -> "1000104"  [label="AST: "];
"1000232" -> "1000239"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000238" -> "1000232"  [label="AST: "];
"1000239" -> "1000232"  [label="AST: "];
"1000243" -> "1000232"  [label="CFG: "];
"1000232" -> "1000246"  [label="DDG: KVM_REG_SIZE(reg->id)"];
"1000232" -> "1000246"  [label="DDG: (u32 *)regs + off"];
"1000232" -> "1000246"  [label="DDG: valp"];
"1000232" -> "1000246"  [label="DDG: memcpy((u32 *)regs + off, valp, KVM_REG_SIZE(reg->id))"];
"1000234" -> "1000232"  [label="DDG: regs"];
"1000183" -> "1000232"  [label="DDG: valp"];
"1000209" -> "1000232"  [label="DDG: valp"];
"1000239" -> "1000232"  [label="DDG: reg->id"];
"1000233" -> "1000237"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000237" -> "1000233"  [label="AST: "];
"1000238" -> "1000233"  [label="CFG: "];
"1000233" -> "1000246"  [label="DDG: off"];
"1000233" -> "1000246"  [label="DDG: (u32 *)regs"];
"1000234" -> "1000233"  [label="DDG: regs"];
}
