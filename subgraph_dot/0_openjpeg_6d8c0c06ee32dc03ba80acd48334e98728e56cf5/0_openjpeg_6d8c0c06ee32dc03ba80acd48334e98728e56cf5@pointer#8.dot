digraph "0_openjpeg_6d8c0c06ee32dc03ba80acd48334e98728e56cf5@pointer" {
"1000143" [label="(Call,file = fopen(argv[1], \"rb\"))"];
"1000145" [label="(Call,fopen(argv[1], \"rb\"))"];
"1000112" [label="(MethodParameterIn,char *argv[])"];
"1000151" [label="(Call,!file)"];
"1000211" [label="(Call,mj2_read_struct(file, movie))"];
"1000277" [label="(Call,fseek(file, sample->offset + 8, SEEK_SET))"];
"1000285" [label="(Call,fread(frame_codestream, sample->sample_size - 8, 1,\n               file))"];
"1000332" [label="(Call,fwrite(frame_codestream, sample->sample_size - 8, 1, outfile))"];
"1000341" [label="(Call,fclose(outfile))"];
"1000343" [label="(Call,free(frame_codestream))"];
"1000345" [label="(Call,fclose(file))"];
"1000143" [label="(Call,file = fopen(argv[1], \"rb\"))"];
"1000258" [label="(Block,)"];
"1000267" [label="(Call,frame_codestream = (unsigned char*) malloc(sample->sample_size -\n                           8))"];
"1000279" [label="(Call,sample->offset + 8)"];
"1000348" [label="(Identifier,stdout)"];
"1000285" [label="(Call,fread(frame_codestream, sample->sample_size - 8, 1,\n               file))"];
"1000150" [label="(ControlStructure,if (!file))"];
"1000277" [label="(Call,fseek(file, sample->offset + 8, SEEK_SET))"];
"1000218" [label="(Identifier,tnum)"];
"1000210" [label="(ControlStructure,if (mj2_read_struct(file, movie)))"];
"1000343" [label="(Call,free(frame_codestream))"];
"1000342" [label="(Identifier,outfile)"];
"1000286" [label="(Identifier,frame_codestream)"];
"1000296" [label="(Identifier,num)"];
"1000152" [label="(Identifier,file)"];
"1000155" [label="(Identifier,stderr)"];
"1000212" [label="(Identifier,file)"];
"1000333" [label="(Identifier,frame_codestream)"];
"1000164" [label="(Identifier,event_mgr)"];
"1000257" [label="(Identifier,snum)"];
"1000292" [label="(Literal,1)"];
"1000211" [label="(Call,mj2_read_struct(file, movie))"];
"1000145" [label="(Call,fopen(argv[1], \"rb\"))"];
"1000344" [label="(Identifier,frame_codestream)"];
"1000341" [label="(Call,fclose(outfile))"];
"1000144" [label="(Identifier,file)"];
"1000345" [label="(Call,fclose(file))"];
"1000213" [label="(Identifier,movie)"];
"1000146" [label="(Call,argv[1])"];
"1000112" [label="(MethodParameterIn,char *argv[])"];
"1000332" [label="(Call,fwrite(frame_codestream, sample->sample_size - 8, 1, outfile))"];
"1000323" [label="(Call,!outfile)"];
"1000284" [label="(Identifier,SEEK_SET)"];
"1000206" [label="(Call,mj2_setup_decoder(movie, &parameters))"];
"1000346" [label="(Identifier,file)"];
"1000362" [label="(MethodReturn,int)"];
"1000149" [label="(Literal,\"rb\")"];
"1000113" [label="(Block,)"];
"1000297" [label="(Call,snprintf(outfilename, sizeof(outfilename), \"%s_%05d.j2k\", argv[2], snum))"];
"1000293" [label="(Identifier,file)"];
"1000287" [label="(Call,sample->sample_size - 8)"];
"1000340" [label="(Identifier,outfile)"];
"1000154" [label="(Call,fprintf(stderr, \"failed to open %s for reading\n\", argv[1]))"];
"1000334" [label="(Call,sample->sample_size - 8)"];
"1000216" [label="(Literal,1)"];
"1000278" [label="(Identifier,file)"];
"1000131" [label="(Call,printf(\"Usage: %s mj2filename output_location\n\", argv[0]))"];
"1000339" [label="(Literal,1)"];
"1000151" [label="(Call,!file)"];
"1000136" [label="(Call,printf(\"Example: %s foreman.mj2 output/foreman\n\", argv[0]))"];
"1000143" -> "1000113"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000145" -> "1000143"  [label="AST: "];
"1000152" -> "1000143"  [label="CFG: "];
"1000143" -> "1000362"  [label="DDG: "];
"1000145" -> "1000143"  [label="DDG: "];
"1000145" -> "1000143"  [label="DDG: "];
"1000143" -> "1000151"  [label="DDG: "];
"1000145" -> "1000149"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000149" -> "1000145"  [label="AST: "];
"1000145" -> "1000362"  [label="DDG: "];
"1000112" -> "1000145"  [label="DDG: "];
"1000145" -> "1000154"  [label="DDG: "];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000362"  [label="DDG: "];
"1000112" -> "1000131"  [label="DDG: "];
"1000112" -> "1000136"  [label="DDG: "];
"1000112" -> "1000154"  [label="DDG: "];
"1000112" -> "1000297"  [label="DDG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000151" -> "1000152"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000155" -> "1000151"  [label="CFG: "];
"1000164" -> "1000151"  [label="CFG: "];
"1000151" -> "1000362"  [label="DDG: "];
"1000151" -> "1000362"  [label="DDG: "];
"1000151" -> "1000211"  [label="DDG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000211" -> "1000213"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000213" -> "1000211"  [label="AST: "];
"1000216" -> "1000211"  [label="CFG: "];
"1000218" -> "1000211"  [label="CFG: "];
"1000211" -> "1000362"  [label="DDG: "];
"1000211" -> "1000362"  [label="DDG: "];
"1000211" -> "1000362"  [label="DDG: "];
"1000206" -> "1000211"  [label="DDG: "];
"1000211" -> "1000277"  [label="DDG: "];
"1000211" -> "1000345"  [label="DDG: "];
"1000277" -> "1000258"  [label="AST: "];
"1000277" -> "1000284"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000277"  [label="AST: "];
"1000284" -> "1000277"  [label="AST: "];
"1000286" -> "1000277"  [label="CFG: "];
"1000277" -> "1000362"  [label="DDG: "];
"1000277" -> "1000362"  [label="DDG: "];
"1000277" -> "1000362"  [label="DDG: "];
"1000285" -> "1000277"  [label="DDG: "];
"1000277" -> "1000285"  [label="DDG: "];
"1000285" -> "1000258"  [label="AST: "];
"1000285" -> "1000293"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000285"  [label="AST: "];
"1000292" -> "1000285"  [label="AST: "];
"1000293" -> "1000285"  [label="AST: "];
"1000296" -> "1000285"  [label="CFG: "];
"1000285" -> "1000362"  [label="DDG: "];
"1000285" -> "1000362"  [label="DDG: "];
"1000285" -> "1000362"  [label="DDG: "];
"1000285" -> "1000362"  [label="DDG: "];
"1000267" -> "1000285"  [label="DDG: "];
"1000287" -> "1000285"  [label="DDG: "];
"1000287" -> "1000285"  [label="DDG: "];
"1000285" -> "1000332"  [label="DDG: "];
"1000285" -> "1000345"  [label="DDG: "];
"1000332" -> "1000258"  [label="AST: "];
"1000332" -> "1000340"  [label="CFG: "];
"1000333" -> "1000332"  [label="AST: "];
"1000334" -> "1000332"  [label="AST: "];
"1000339" -> "1000332"  [label="AST: "];
"1000340" -> "1000332"  [label="AST: "];
"1000342" -> "1000332"  [label="CFG: "];
"1000332" -> "1000362"  [label="DDG: "];
"1000332" -> "1000362"  [label="DDG: "];
"1000334" -> "1000332"  [label="DDG: "];
"1000334" -> "1000332"  [label="DDG: "];
"1000323" -> "1000332"  [label="DDG: "];
"1000332" -> "1000341"  [label="DDG: "];
"1000332" -> "1000343"  [label="DDG: "];
"1000341" -> "1000258"  [label="AST: "];
"1000341" -> "1000342"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000344" -> "1000341"  [label="CFG: "];
"1000341" -> "1000362"  [label="DDG: "];
"1000341" -> "1000362"  [label="DDG: "];
"1000343" -> "1000258"  [label="AST: "];
"1000343" -> "1000344"  [label="CFG: "];
"1000344" -> "1000343"  [label="AST: "];
"1000257" -> "1000343"  [label="CFG: "];
"1000343" -> "1000362"  [label="DDG: "];
"1000345" -> "1000113"  [label="AST: "];
"1000345" -> "1000346"  [label="CFG: "];
"1000346" -> "1000345"  [label="AST: "];
"1000348" -> "1000345"  [label="CFG: "];
"1000345" -> "1000362"  [label="DDG: "];
"1000345" -> "1000362"  [label="DDG: "];
}
