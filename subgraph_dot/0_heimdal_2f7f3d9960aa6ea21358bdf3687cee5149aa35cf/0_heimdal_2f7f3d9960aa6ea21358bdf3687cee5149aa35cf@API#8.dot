digraph "0_heimdal_2f7f3d9960aa6ea21358bdf3687cee5149aa35cf@API" {
"1000166" [label="(Call,free_init_creds_ctx(context, ctx))"];
"1000144" [label="(Call,init_as_req(context, ctx->flags, &ctx->cred,\n\t\t\t  ctx->addrs, ctx->etypes, &ctx->as_req))"];
"1000115" [label="(MethodParameterIn,krb5_context context)"];
"1000116" [label="(MethodParameterIn,krb5_init_creds_context ctx)"];
"1000116" [label="(MethodParameterIn,krb5_init_creds_context ctx)"];
"1000654" [label="(Call,krb5_set_real_time(context, ctx->error.stime, -1))"];
"1000572" [label="(Call,_krb5_debug(context, 5, \"krb5_get_init_creds: KRB-ERROR %d\", ret))"];
"1000178" [label="(Call,krb5_set_error_message(context, KRB5_GET_IN_TKT_LOOP,\n\t\t\t       N_(\"Looping %d times while getting \"\n\t\t\t\t  \"initial credentials\", \"\"),\n\t\t\t       ctx->pa_counter))"];
"1000547" [label="(Call,fast_unwrap_error(context, &ctx->fast_state, &ctx->error))"];
"1000802" [label="(Call,ctx->prompter(context, ctx->prompter_data, NULL, N_(\"Password has expired\", \"\"), 0, NULL))"];
"1000159" [label="(Call,&ctx->as_req)"];
"1000149" [label="(Call,&ctx->cred)"];
"1000898" [label="(Call,_krb5_debug(context, 10, \"preauth failed with FAST, \"\n\t\t\t    \"and told by KD or user, trying w/o FAST\"))"];
"1001089" [label="(Call,krb5_abortx(context, \"internal error in ASN.1 encoder\"))"];
"1000756" [label="(Call,free_AS_REQ(&ctx->as_req))"];
"1000142" [label="(Call,ret = init_as_req(context, ctx->flags, &ctx->cred,\n\t\t\t  ctx->addrs, ctx->etypes, &ctx->as_req))"];
"1000636" [label="(Call,krb5_set_error_message(context, ret,\n\t\t\t\t\t   N_(\"Preauth required but no preauth \"\n\t\t\t\t\t      \"options send by KDC\", \"\")))"];
"1000703" [label="(Call,krb5_set_error_message(context, ret,\n\t\t\t\t\t   N_(\"Got a client referral, not but no realm\", \"\")))"];
"1000628" [label="(Call,krb5_set_error_message(context, ret,\n\t\t\t\t\t       N_(\"Failed to decode METHOD-DATA\", \"\")))"];
"1000437" [label="(Call,krb5_set_error_message(context, ret,\n\t\t\t\t\t   N_(\"Failed to confirm PA-PKINIT-KX\", \"\")))"];
"1000999" [label="(Call,process_pa_data_to_md(context, &ctx->cred, &ctx->as_req, ctx,\n\t\t\t\t&ctx->md, &ctx->as_req.padata,\n\t\t\t\tctx->prompter, ctx->prompter_data))"];
"1000274" [label="(Call,fast_unwrap_as_rep(context, ctx->nonce, &data,\n\t\t\t\t     &ctx->fast_state, &rep.kdc_rep))"];
"1001038" [label="(Call,fast_wrap_req(context, &ctx->fast_state, &req2))"];
"1000319" [label="(Call,process_pa_data_to_key(context, ctx, &ctx->cred,\n\t\t\t\t\t &ctx->as_req, &rep.kdc_rep,\n\t\t\t\t\t hostinfo, &ctx->fast_state.reply_key))"];
"1000670" [label="(Call,_krb5_debug(context, 10, \"init_creds: err skew updateing kdc offset to %d\",\n\t\t\t    context->kdc_sec_offset))"];
"1000837" [label="(Call,change_password(context,\n\t\t\t\t      ctx->cred.client,\n\t\t\t\t      ctx->password,\n\t\t\t\t      buf2,\n\t\t\t\t      sizeof(buf2),\n\t\t\t\t      ctx->prompter,\n\t\t\t\t      ctx->prompter_data,\n\t\t\t\t      NULL))"];
"1000860" [label="(Call,krb5_init_creds_set_password(context, ctx, buf2))"];
"1001119" [label="(MethodReturn,RET)"];
"1000468" [label="(Call,krb5_free_keyblock(context, ctx->fast_state.reply_key))"];
"1000562" [label="(Call,krb5_error_from_rd_error(context, &ctx->error, &ctx->cred))"];
"1000214" [label="(Call,_krb5_debug(context, 5, \"krb5_get_init_creds: processing input\"))"];
"1000156" [label="(Call,ctx->etypes)"];
"1000500" [label="(Call,_krb5_debug(context, 5, \"krb5_get_init_creds: got an error\"))"];
"1000710" [label="(Call,_krb5_debug(context, 5,\n\t\t\t    \"krb5_get_init_creds: got referal to realm %s\",\n\t\t\t    *ctx->error.crealm))"];
"1000418" [label="(Call,_krb5_pk_kx_confirm(context, ctx->pk_init_ctx,\n\t\t\t\t\t  ctx->fast_state.reply_key,\n\t\t\t\t\t  &ctx->cred.session,\n\t\t\t\t\t  pa_pkinit_kx))"];
"1000166" [label="(Call,free_init_creds_ctx(context, ctx))"];
"1000739" [label="(Call,krb5_principal_is_krbtgt(context, ctx->cred.server))"];
"1000722" [label="(Call,krb5_principal_set_realm(context,\n\t\t\t\t\t       ctx->cred.client,\n\t\t\t\t\t       *ctx->error.crealm))"];
"1000165" [label="(Block,)"];
"1000955" [label="(Call,free_init_creds_ctx(context, ctx))"];
"1000749" [label="(Call,krb5_init_creds_set_service(context, ctx, NULL))"];
"1000145" [label="(Identifier,context)"];
"1000167" [label="(Identifier,context)"];
"1000170" [label="(Identifier,ret)"];
"1000193" [label="(Call,_krb5_debug(context, 5, \"krb5_get_init_creds: loop %d\", ctx->pa_counter))"];
"1000153" [label="(Call,ctx->addrs)"];
"1000168" [label="(Identifier,ctx)"];
"1000356" [label="(Call,_krb5_extract_ticket(context,\n\t\t\t\t       &rep,\n\t\t\t\t       &ctx->cred,\n\t\t\t\t       ctx->fast_state.reply_key,\n\t\t\t\t       NULL,\n\t\t\t\t       KRB5_KU_AS_REP_ENC_PART,\n\t\t\t\t       NULL,\n\t\t\t\t       ctx->nonce,\n\t\t\t\t       eflags,\n \t\t\t\t       &ctx->req_buffer,\n \t\t\t\t       NULL,\n \t\t\t\t       NULL))"];
"1000115" [label="(MethodParameterIn,krb5_context context)"];
"1000933" [label="(Call,init_as_req(context, ctx->flags, &ctx->cred,\n\t\t\t  ctx->addrs, ctx->etypes, &ctx->as_req))"];
"1000144" [label="(Call,init_as_req(context, ctx->flags, &ctx->cred,\n\t\t\t  ctx->addrs, ctx->etypes, &ctx->as_req))"];
"1000540" [label="(Call,_krb5_debug(context, 5, \"krb5_get_init_creds: failed to read error\"))"];
"1000146" [label="(Call,ctx->flags)"];
"1000511" [label="(Call,krb5_rd_error(context, in, &ctx->error))"];
"1000350" [label="(Call,_krb5_debug(context, 5, \"krb5_get_init_creds: extracting ticket\"))"];
"1000166" -> "1000165"  [label="AST: "];
"1000166" -> "1000168"  [label="CFG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000168" -> "1000166"  [label="AST: "];
"1000170" -> "1000166"  [label="CFG: "];
"1000166" -> "1001119"  [label="DDG: ctx"];
"1000166" -> "1001119"  [label="DDG: free_init_creds_ctx(context, ctx)"];
"1000166" -> "1001119"  [label="DDG: context"];
"1000144" -> "1000166"  [label="DDG: context"];
"1000115" -> "1000166"  [label="DDG: context"];
"1000116" -> "1000166"  [label="DDG: ctx"];
"1000144" -> "1000142"  [label="AST: "];
"1000144" -> "1000159"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000146" -> "1000144"  [label="AST: "];
"1000149" -> "1000144"  [label="AST: "];
"1000153" -> "1000144"  [label="AST: "];
"1000156" -> "1000144"  [label="AST: "];
"1000159" -> "1000144"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000144" -> "1001119"  [label="DDG: &ctx->as_req"];
"1000144" -> "1001119"  [label="DDG: &ctx->cred"];
"1000144" -> "1001119"  [label="DDG: ctx->addrs"];
"1000144" -> "1001119"  [label="DDG: ctx->etypes"];
"1000144" -> "1001119"  [label="DDG: ctx->flags"];
"1000144" -> "1000142"  [label="DDG: ctx->addrs"];
"1000144" -> "1000142"  [label="DDG: ctx->flags"];
"1000144" -> "1000142"  [label="DDG: context"];
"1000144" -> "1000142"  [label="DDG: &ctx->cred"];
"1000144" -> "1000142"  [label="DDG: ctx->etypes"];
"1000144" -> "1000142"  [label="DDG: &ctx->as_req"];
"1000115" -> "1000144"  [label="DDG: context"];
"1000144" -> "1000178"  [label="DDG: context"];
"1000144" -> "1000193"  [label="DDG: context"];
"1000144" -> "1000319"  [label="DDG: &ctx->cred"];
"1000144" -> "1000319"  [label="DDG: &ctx->as_req"];
"1000144" -> "1000562"  [label="DDG: &ctx->cred"];
"1000144" -> "1000756"  [label="DDG: &ctx->as_req"];
"1000144" -> "1000933"  [label="DDG: ctx->flags"];
"1000144" -> "1000933"  [label="DDG: &ctx->cred"];
"1000144" -> "1000933"  [label="DDG: ctx->addrs"];
"1000144" -> "1000933"  [label="DDG: ctx->etypes"];
"1000144" -> "1000933"  [label="DDG: &ctx->as_req"];
"1000144" -> "1000999"  [label="DDG: &ctx->cred"];
"1000144" -> "1000999"  [label="DDG: &ctx->as_req"];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1001119"  [label="DDG: context"];
"1000115" -> "1000178"  [label="DDG: context"];
"1000115" -> "1000193"  [label="DDG: context"];
"1000115" -> "1000214"  [label="DDG: context"];
"1000115" -> "1000274"  [label="DDG: context"];
"1000115" -> "1000319"  [label="DDG: context"];
"1000115" -> "1000350"  [label="DDG: context"];
"1000115" -> "1000356"  [label="DDG: context"];
"1000115" -> "1000418"  [label="DDG: context"];
"1000115" -> "1000437"  [label="DDG: context"];
"1000115" -> "1000468"  [label="DDG: context"];
"1000115" -> "1000500"  [label="DDG: context"];
"1000115" -> "1000511"  [label="DDG: context"];
"1000115" -> "1000540"  [label="DDG: context"];
"1000115" -> "1000547"  [label="DDG: context"];
"1000115" -> "1000562"  [label="DDG: context"];
"1000115" -> "1000572"  [label="DDG: context"];
"1000115" -> "1000628"  [label="DDG: context"];
"1000115" -> "1000636"  [label="DDG: context"];
"1000115" -> "1000654"  [label="DDG: context"];
"1000115" -> "1000670"  [label="DDG: context"];
"1000115" -> "1000703"  [label="DDG: context"];
"1000115" -> "1000710"  [label="DDG: context"];
"1000115" -> "1000722"  [label="DDG: context"];
"1000115" -> "1000739"  [label="DDG: context"];
"1000115" -> "1000749"  [label="DDG: context"];
"1000115" -> "1000802"  [label="DDG: context"];
"1000115" -> "1000837"  [label="DDG: context"];
"1000115" -> "1000860"  [label="DDG: context"];
"1000115" -> "1000898"  [label="DDG: context"];
"1000115" -> "1000933"  [label="DDG: context"];
"1000115" -> "1000955"  [label="DDG: context"];
"1000115" -> "1000999"  [label="DDG: context"];
"1000115" -> "1001038"  [label="DDG: context"];
"1000115" -> "1001089"  [label="DDG: context"];
"1000116" -> "1000114"  [label="AST: "];
"1000116" -> "1001119"  [label="DDG: ctx"];
"1000116" -> "1000319"  [label="DDG: ctx"];
"1000116" -> "1000749"  [label="DDG: ctx"];
"1000116" -> "1000860"  [label="DDG: ctx"];
"1000116" -> "1000955"  [label="DDG: ctx"];
"1000116" -> "1000999"  [label="DDG: ctx"];
}
