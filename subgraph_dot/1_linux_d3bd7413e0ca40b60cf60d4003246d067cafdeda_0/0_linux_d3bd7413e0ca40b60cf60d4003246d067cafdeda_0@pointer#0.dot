digraph "0_linux_d3bd7413e0ca40b60cf60d4003246d067cafdeda_0@pointer" {
"1000170" [label="(Call,retrieve_ptr_limit(ptr_reg, &alu_limit, opcode, off_is_neg))"];
"1000125" [label="(Call,ptr_reg == dst_reg)"];
"1000107" [label="(MethodParameterIn,const struct bpf_reg_state *ptr_reg)"];
"1000108" [label="(MethodParameterIn,struct bpf_reg_state *dst_reg)"];
"1000129" [label="(Call,opcode = BPF_OP(insn->code))"];
"1000131" [label="(Call,BPF_OP(insn->code))"];
"1000109" [label="(MethodParameterIn,bool off_is_neg)"];
"1000125" [label="(Call,ptr_reg == dst_reg)"];
"1000177" [label="(Literal,0)"];
"1000129" [label="(Call,opcode = BPF_OP(insn->code))"];
"1000110" [label="(Block,)"];
"1000109" [label="(MethodParameterIn,bool off_is_neg)"];
"1000172" [label="(Call,&alu_limit)"];
"1000159" [label="(Call,off_is_neg ? BPF_ALU_NEG_VALUE : 0)"];
"1000181" [label="(Identifier,aux)"];
"1000170" [label="(Call,retrieve_ptr_limit(ptr_reg, &alu_limit, opcode, off_is_neg))"];
"1000142" [label="(Identifier,env)"];
"1000145" [label="(Call,BPF_SRC(insn->code))"];
"1000171" [label="(Identifier,ptr_reg)"];
"1000130" [label="(Identifier,opcode)"];
"1000127" [label="(Identifier,dst_reg)"];
"1000169" [label="(ControlStructure,if (retrieve_ptr_limit(ptr_reg, &alu_limit, opcode, off_is_neg)))"];
"1000174" [label="(Identifier,opcode)"];
"1000132" [label="(Call,insn->code)"];
"1000175" [label="(Identifier,off_is_neg)"];
"1000131" [label="(Call,BPF_OP(insn->code))"];
"1000107" [label="(MethodParameterIn,const struct bpf_reg_state *ptr_reg)"];
"1000157" [label="(Call,alu_state  = off_is_neg ? BPF_ALU_NEG_VALUE : 0)"];
"1000108" [label="(MethodParameterIn,struct bpf_reg_state *dst_reg)"];
"1000123" [label="(Call,ptr_is_dst_reg = ptr_reg == dst_reg)"];
"1000248" [label="(MethodReturn,static int)"];
"1000126" [label="(Identifier,ptr_reg)"];
"1000170" -> "1000169"  [label="AST: "];
"1000170" -> "1000175"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000174" -> "1000170"  [label="AST: "];
"1000175" -> "1000170"  [label="AST: "];
"1000177" -> "1000170"  [label="CFG: "];
"1000181" -> "1000170"  [label="CFG: "];
"1000170" -> "1000248"  [label="DDG: &alu_limit"];
"1000170" -> "1000248"  [label="DDG: ptr_reg"];
"1000170" -> "1000248"  [label="DDG: retrieve_ptr_limit(ptr_reg, &alu_limit, opcode, off_is_neg)"];
"1000170" -> "1000248"  [label="DDG: opcode"];
"1000170" -> "1000248"  [label="DDG: off_is_neg"];
"1000125" -> "1000170"  [label="DDG: ptr_reg"];
"1000107" -> "1000170"  [label="DDG: ptr_reg"];
"1000129" -> "1000170"  [label="DDG: opcode"];
"1000109" -> "1000170"  [label="DDG: off_is_neg"];
"1000125" -> "1000123"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000125" -> "1000248"  [label="DDG: dst_reg"];
"1000125" -> "1000248"  [label="DDG: ptr_reg"];
"1000125" -> "1000123"  [label="DDG: ptr_reg"];
"1000125" -> "1000123"  [label="DDG: dst_reg"];
"1000107" -> "1000125"  [label="DDG: ptr_reg"];
"1000108" -> "1000125"  [label="DDG: dst_reg"];
"1000107" -> "1000104"  [label="AST: "];
"1000107" -> "1000248"  [label="DDG: ptr_reg"];
"1000108" -> "1000104"  [label="AST: "];
"1000108" -> "1000248"  [label="DDG: dst_reg"];
"1000129" -> "1000110"  [label="AST: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000129"  [label="AST: "];
"1000142" -> "1000129"  [label="CFG: "];
"1000129" -> "1000248"  [label="DDG: opcode"];
"1000129" -> "1000248"  [label="DDG: BPF_OP(insn->code)"];
"1000131" -> "1000129"  [label="DDG: insn->code"];
"1000131" -> "1000132"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000131" -> "1000248"  [label="DDG: insn->code"];
"1000131" -> "1000145"  [label="DDG: insn->code"];
"1000109" -> "1000104"  [label="AST: "];
"1000109" -> "1000248"  [label="DDG: off_is_neg"];
"1000109" -> "1000157"  [label="DDG: off_is_neg"];
"1000109" -> "1000159"  [label="DDG: off_is_neg"];
}
