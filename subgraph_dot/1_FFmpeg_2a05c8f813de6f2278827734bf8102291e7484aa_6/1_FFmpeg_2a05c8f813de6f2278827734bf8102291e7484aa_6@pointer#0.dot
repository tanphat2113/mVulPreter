digraph "1_FFmpeg_2a05c8f813de6f2278827734bf8102291e7484aa_6@pointer" {
"1000134" [label="(Call,strchr(p, '/'))"];
"1000126" [label="(Call,strtoll(p, NULL, 10))"];
"1000119" [label="(Call,p     += 6)"];
"1000114" [label="(Call,strncmp(p, \"bytes \", 6))"];
"1000103" [label="(MethodParameterIn,const char *p)"];
"1000131" [label="(Call,(slash = strchr(p, '/')) && strlen(slash) > 0)"];
"1000132" [label="(Call,slash = strchr(p, '/'))"];
"1000138" [label="(Call,strlen(slash))"];
"1000137" [label="(Call,strlen(slash) > 0)"];
"1000145" [label="(Call,strtoll(slash + 1, NULL, 10))"];
"1000141" [label="(Call,s->filesize = strtoll(slash + 1, NULL, 10))"];
"1000164" [label="(Call,s->filesize != 2147483647)"];
"1000159" [label="(Call,!s->is_akamai || s->filesize != 2147483647)"];
"1000152" [label="(Call,s->seekable == -1 && (!s->is_akamai || s->filesize != 2147483647))"];
"1000146" [label="(Call,slash + 1)"];
"1000130" [label="(ControlStructure,if ((slash = strchr(p, '/')) && strlen(slash) > 0))"];
"1000113" [label="(Call,!strncmp(p, \"bytes \", 6))"];
"1000146" [label="(Call,slash + 1)"];
"1000131" [label="(Call,(slash = strchr(p, '/')) && strlen(slash) > 0)"];
"1000145" [label="(Call,strtoll(slash + 1, NULL, 10))"];
"1000140" [label="(Literal,0)"];
"1000142" [label="(Call,s->filesize)"];
"1000165" [label="(Call,s->filesize)"];
"1000115" [label="(Identifier,p)"];
"1000119" [label="(Call,p     += 6)"];
"1000137" [label="(Call,strlen(slash) > 0)"];
"1000160" [label="(Call,!s->is_akamai)"];
"1000150" [label="(Literal,10)"];
"1000122" [label="(Call,s->off = strtoll(p, NULL, 10))"];
"1000155" [label="(Identifier,s)"];
"1000164" [label="(Call,s->filesize != 2147483647)"];
"1000168" [label="(Literal,2147483647)"];
"1000124" [label="(Identifier,s)"];
"1000136" [label="(Literal,'/')"];
"1000143" [label="(Identifier,s)"];
"1000152" [label="(Call,s->seekable == -1 && (!s->is_akamai || s->filesize != 2147483647))"];
"1000114" [label="(Call,strncmp(p, \"bytes \", 6))"];
"1000126" [label="(Call,strtoll(p, NULL, 10))"];
"1000147" [label="(Identifier,slash)"];
"1000134" [label="(Call,strchr(p, '/'))"];
"1000116" [label="(Literal,\"bytes \")"];
"1000127" [label="(Identifier,p)"];
"1000159" [label="(Call,!s->is_akamai || s->filesize != 2147483647)"];
"1000148" [label="(Literal,1)"];
"1000138" [label="(Call,strlen(slash))"];
"1000132" [label="(Call,slash = strchr(p, '/'))"];
"1000117" [label="(Literal,6)"];
"1000135" [label="(Identifier,p)"];
"1000174" [label="(MethodReturn,static void)"];
"1000128" [label="(Identifier,NULL)"];
"1000139" [label="(Identifier,slash)"];
"1000153" [label="(Call,s->seekable == -1)"];
"1000171" [label="(Identifier,h)"];
"1000120" [label="(Identifier,p)"];
"1000149" [label="(Identifier,NULL)"];
"1000151" [label="(ControlStructure,if (s->seekable == -1 && (!s->is_akamai || s->filesize != 2147483647)))"];
"1000141" [label="(Call,s->filesize = strtoll(slash + 1, NULL, 10))"];
"1000129" [label="(Literal,10)"];
"1000133" [label="(Identifier,slash)"];
"1000118" [label="(Block,)"];
"1000121" [label="(Literal,6)"];
"1000103" [label="(MethodParameterIn,const char *p)"];
"1000134" -> "1000132"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000132" -> "1000134"  [label="CFG: "];
"1000134" -> "1000174"  [label="DDG: "];
"1000134" -> "1000131"  [label="DDG: "];
"1000134" -> "1000131"  [label="DDG: "];
"1000134" -> "1000132"  [label="DDG: "];
"1000134" -> "1000132"  [label="DDG: "];
"1000126" -> "1000134"  [label="DDG: "];
"1000103" -> "1000134"  [label="DDG: "];
"1000126" -> "1000122"  [label="AST: "];
"1000126" -> "1000129"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000128" -> "1000126"  [label="AST: "];
"1000129" -> "1000126"  [label="AST: "];
"1000122" -> "1000126"  [label="CFG: "];
"1000126" -> "1000174"  [label="DDG: "];
"1000126" -> "1000122"  [label="DDG: "];
"1000126" -> "1000122"  [label="DDG: "];
"1000126" -> "1000122"  [label="DDG: "];
"1000119" -> "1000126"  [label="DDG: "];
"1000103" -> "1000126"  [label="DDG: "];
"1000126" -> "1000145"  [label="DDG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000124" -> "1000119"  [label="CFG: "];
"1000114" -> "1000119"  [label="DDG: "];
"1000103" -> "1000119"  [label="DDG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000117"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000117" -> "1000114"  [label="AST: "];
"1000113" -> "1000114"  [label="CFG: "];
"1000114" -> "1000174"  [label="DDG: "];
"1000114" -> "1000113"  [label="DDG: "];
"1000114" -> "1000113"  [label="DDG: "];
"1000114" -> "1000113"  [label="DDG: "];
"1000103" -> "1000114"  [label="DDG: "];
"1000103" -> "1000101"  [label="AST: "];
"1000103" -> "1000174"  [label="DDG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000132"  [label="CFG: "];
"1000131" -> "1000137"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000137" -> "1000131"  [label="AST: "];
"1000143" -> "1000131"  [label="CFG: "];
"1000155" -> "1000131"  [label="CFG: "];
"1000131" -> "1000174"  [label="DDG: "];
"1000131" -> "1000174"  [label="DDG: "];
"1000132" -> "1000131"  [label="DDG: "];
"1000137" -> "1000131"  [label="DDG: "];
"1000137" -> "1000131"  [label="DDG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000139" -> "1000132"  [label="CFG: "];
"1000132" -> "1000174"  [label="DDG: "];
"1000132" -> "1000174"  [label="DDG: "];
"1000132" -> "1000138"  [label="DDG: "];
"1000132" -> "1000145"  [label="DDG: "];
"1000132" -> "1000146"  [label="DDG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000139"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="CFG: "];
"1000138" -> "1000174"  [label="DDG: "];
"1000138" -> "1000137"  [label="DDG: "];
"1000138" -> "1000145"  [label="DDG: "];
"1000138" -> "1000146"  [label="DDG: "];
"1000137" -> "1000140"  [label="CFG: "];
"1000140" -> "1000137"  [label="AST: "];
"1000137" -> "1000174"  [label="DDG: "];
"1000145" -> "1000141"  [label="AST: "];
"1000145" -> "1000150"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000149" -> "1000145"  [label="AST: "];
"1000150" -> "1000145"  [label="AST: "];
"1000141" -> "1000145"  [label="CFG: "];
"1000145" -> "1000174"  [label="DDG: "];
"1000145" -> "1000174"  [label="DDG: "];
"1000145" -> "1000141"  [label="DDG: "];
"1000145" -> "1000141"  [label="DDG: "];
"1000145" -> "1000141"  [label="DDG: "];
"1000141" -> "1000130"  [label="AST: "];
"1000142" -> "1000141"  [label="AST: "];
"1000155" -> "1000141"  [label="CFG: "];
"1000141" -> "1000174"  [label="DDG: "];
"1000141" -> "1000174"  [label="DDG: "];
"1000141" -> "1000164"  [label="DDG: "];
"1000164" -> "1000159"  [label="AST: "];
"1000164" -> "1000168"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000168" -> "1000164"  [label="AST: "];
"1000159" -> "1000164"  [label="CFG: "];
"1000164" -> "1000174"  [label="DDG: "];
"1000164" -> "1000159"  [label="DDG: "];
"1000164" -> "1000159"  [label="DDG: "];
"1000159" -> "1000152"  [label="AST: "];
"1000159" -> "1000160"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000152" -> "1000159"  [label="CFG: "];
"1000159" -> "1000174"  [label="DDG: "];
"1000159" -> "1000174"  [label="DDG: "];
"1000159" -> "1000152"  [label="DDG: "];
"1000159" -> "1000152"  [label="DDG: "];
"1000160" -> "1000159"  [label="DDG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000153"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000171" -> "1000152"  [label="CFG: "];
"1000174" -> "1000152"  [label="CFG: "];
"1000152" -> "1000174"  [label="DDG: "];
"1000152" -> "1000174"  [label="DDG: "];
"1000152" -> "1000174"  [label="DDG: "];
"1000153" -> "1000152"  [label="DDG: "];
"1000153" -> "1000152"  [label="DDG: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000149" -> "1000146"  [label="CFG: "];
"1000146" -> "1000174"  [label="DDG: "];
}
