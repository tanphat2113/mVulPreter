digraph "0_gstreamer_bdc20b9baf13564d9a061343416395f8f9a92b53@pointer" {
"1000966" [label="(Call,*ctts_data = (const guint8 *) ctts->data)"];
"1000968" [label="(Call,(const guint8 *) ctts->data)"];
"1000976" [label="(Call,QT_UINT32 (ctts_data + 12))"];
"1000974" [label="(Call,n_entries = QT_UINT32 (ctts_data + 12))"];
"1000996" [label="(Call,i < n_entries)"];
"1000990" [label="(Call,(j < stream->n_samples) && (i < n_entries))"];
"1001026" [label="(Call,(k < count) && (j < stream->n_samples))"];
"1001009" [label="(Call,i * 8)"];
"1001004" [label="(Call,QT_UINT32 (ctts_data + 16 + i * 8))"];
"1001002" [label="(Call,count = QT_UINT32 (ctts_data + 16 + i * 8))"];
"1001027" [label="(Call,k < count)"];
"1001036" [label="(Call,k++)"];
"1001005" [label="(Call,ctts_data + 16 + i * 8)"];
"1001007" [label="(Call,16 + i * 8)"];
"1001019" [label="(Call,i * 8)"];
"1000999" [label="(Call,i++)"];
"1001014" [label="(Call,QT_UINT32 (ctts_data + 20 + i * 8))"];
"1001012" [label="(Call,soffset = QT_UINT32 (ctts_data + 20 + i * 8))"];
"1001047" [label="(Call,soffset * GST_SECOND / stream->timescale)"];
"1001041" [label="(Call,samples[j].pts_offset = soffset * GST_SECOND / stream->timescale)"];
"1001015" [label="(Call,ctts_data + 20 + i * 8)"];
"1001017" [label="(Call,20 + i * 8)"];
"1000977" [label="(Call,ctts_data + 12)"];
"1001003" [label="(Identifier,count)"];
"1001009" [label="(Call,i * 8)"];
"1000990" [label="(Call,(j < stream->n_samples) && (i < n_entries))"];
"1001026" [label="(Call,(k < count) && (j < stream->n_samples))"];
"1000992" [label="(Identifier,j)"];
"1000966" [label="(Call,*ctts_data = (const guint8 *) ctts->data)"];
"1000977" [label="(Call,ctts_data + 12)"];
"1001001" [label="(Block,)"];
"1001031" [label="(Identifier,j)"];
"1000967" [label="(Identifier,ctts_data)"];
"1000999" [label="(Call,i++)"];
"1001029" [label="(Identifier,count)"];
"1001024" [label="(Identifier,k)"];
"1000991" [label="(Call,j < stream->n_samples)"];
"1000998" [label="(Identifier,n_entries)"];
"1000975" [label="(Identifier,n_entries)"];
"1001018" [label="(Literal,20)"];
"1000978" [label="(Identifier,ctts_data)"];
"1001068" [label="(MethodReturn,RET)"];
"1001030" [label="(Call,j < stream->n_samples)"];
"1001047" [label="(Call,soffset * GST_SECOND / stream->timescale)"];
"1000985" [label="(Identifier,i)"];
"1001015" [label="(Call,ctts_data + 20 + i * 8)"];
"1001010" [label="(Identifier,i)"];
"1001000" [label="(Identifier,i)"];
"1001019" [label="(Call,i * 8)"];
"1001035" [label="(Block,)"];
"1001012" [label="(Call,soffset = QT_UINT32 (ctts_data + 20 + i * 8))"];
"1001014" [label="(Call,QT_UINT32 (ctts_data + 20 + i * 8))"];
"1001040" [label="(Block,)"];
"1001048" [label="(Identifier,soffset)"];
"1001021" [label="(Literal,8)"];
"1001027" [label="(Call,k < count)"];
"1001020" [label="(Identifier,i)"];
"1000997" [label="(Identifier,i)"];
"1000964" [label="(Block,)"];
"1001008" [label="(Literal,16)"];
"1001042" [label="(Call,samples[j].pts_offset)"];
"1001039" [label="(Identifier,j)"];
"1001007" [label="(Call,16 + i * 8)"];
"1000968" [label="(Call,(const guint8 *) ctts->data)"];
"1001002" [label="(Call,count = QT_UINT32 (ctts_data + 16 + i * 8))"];
"1000979" [label="(Literal,12)"];
"1000982" [label="(ControlStructure,for (i = 0, j = 0; (j < stream->n_samples) && (i < n_entries); i++))"];
"1001004" [label="(Call,QT_UINT32 (ctts_data + 16 + i * 8))"];
"1000984" [label="(Call,i = 0)"];
"1001037" [label="(Identifier,k)"];
"1001011" [label="(Literal,8)"];
"1001049" [label="(Call,GST_SECOND / stream->timescale)"];
"1001041" [label="(Call,samples[j].pts_offset = soffset * GST_SECOND / stream->timescale)"];
"1001054" [label="(JumpTarget,done:)"];
"1001017" [label="(Call,20 + i * 8)"];
"1001022" [label="(ControlStructure,for (k = 0; (k < count) && (j < stream->n_samples); k++, j++))"];
"1001036" [label="(Call,k++)"];
"1001023" [label="(Call,k = 0)"];
"1001005" [label="(Call,ctts_data + 16 + i * 8)"];
"1000970" [label="(Call,ctts->data)"];
"1000974" [label="(Call,n_entries = QT_UINT32 (ctts_data + 12))"];
"1001013" [label="(Identifier,soffset)"];
"1001016" [label="(Identifier,ctts_data)"];
"1000976" [label="(Call,QT_UINT32 (ctts_data + 12))"];
"1001044" [label="(Identifier,samples)"];
"1000996" [label="(Call,i < n_entries)"];
"1001006" [label="(Identifier,ctts_data)"];
"1001028" [label="(Identifier,k)"];
"1000966" -> "1000964"  [label="AST: "];
"1000966" -> "1000968"  [label="CFG: "];
"1000967" -> "1000966"  [label="AST: "];
"1000968" -> "1000966"  [label="AST: "];
"1000975" -> "1000966"  [label="CFG: "];
"1000966" -> "1001068"  [label="DDG: (const guint8 *) ctts->data"];
"1000968" -> "1000966"  [label="DDG: ctts->data"];
"1000966" -> "1000976"  [label="DDG: ctts_data"];
"1000966" -> "1000977"  [label="DDG: ctts_data"];
"1000966" -> "1001004"  [label="DDG: ctts_data"];
"1000966" -> "1001005"  [label="DDG: ctts_data"];
"1000968" -> "1000970"  [label="CFG: "];
"1000969" -> "1000968"  [label="AST: "];
"1000970" -> "1000968"  [label="AST: "];
"1000968" -> "1001068"  [label="DDG: ctts->data"];
"1000976" -> "1000974"  [label="AST: "];
"1000976" -> "1000977"  [label="CFG: "];
"1000977" -> "1000976"  [label="AST: "];
"1000974" -> "1000976"  [label="CFG: "];
"1000976" -> "1001068"  [label="DDG: ctts_data + 12"];
"1000976" -> "1000974"  [label="DDG: ctts_data + 12"];
"1000974" -> "1000964"  [label="AST: "];
"1000975" -> "1000974"  [label="AST: "];
"1000985" -> "1000974"  [label="CFG: "];
"1000974" -> "1001068"  [label="DDG: n_entries"];
"1000974" -> "1001068"  [label="DDG: QT_UINT32 (ctts_data + 12)"];
"1000974" -> "1000996"  [label="DDG: n_entries"];
"1000996" -> "1000990"  [label="AST: "];
"1000996" -> "1000998"  [label="CFG: "];
"1000997" -> "1000996"  [label="AST: "];
"1000998" -> "1000996"  [label="AST: "];
"1000990" -> "1000996"  [label="CFG: "];
"1000996" -> "1001068"  [label="DDG: n_entries"];
"1000996" -> "1001068"  [label="DDG: i"];
"1000996" -> "1000990"  [label="DDG: i"];
"1000996" -> "1000990"  [label="DDG: n_entries"];
"1000984" -> "1000996"  [label="DDG: i"];
"1000999" -> "1000996"  [label="DDG: i"];
"1000996" -> "1001009"  [label="DDG: i"];
"1000990" -> "1000982"  [label="AST: "];
"1000990" -> "1000991"  [label="CFG: "];
"1000991" -> "1000990"  [label="AST: "];
"1001003" -> "1000990"  [label="CFG: "];
"1001054" -> "1000990"  [label="CFG: "];
"1000990" -> "1001068"  [label="DDG: i < n_entries"];
"1000990" -> "1001068"  [label="DDG: j < stream->n_samples"];
"1000990" -> "1001068"  [label="DDG: (j < stream->n_samples) && (i < n_entries)"];
"1000991" -> "1000990"  [label="DDG: j"];
"1000991" -> "1000990"  [label="DDG: stream->n_samples"];
"1000990" -> "1001026"  [label="DDG: j < stream->n_samples"];
"1001026" -> "1001022"  [label="AST: "];
"1001026" -> "1001027"  [label="CFG: "];
"1001026" -> "1001030"  [label="CFG: "];
"1001027" -> "1001026"  [label="AST: "];
"1001030" -> "1001026"  [label="AST: "];
"1001044" -> "1001026"  [label="CFG: "];
"1001000" -> "1001026"  [label="CFG: "];
"1001026" -> "1001068"  [label="DDG: (k < count) && (j < stream->n_samples)"];
"1001026" -> "1001068"  [label="DDG: k < count"];
"1001027" -> "1001026"  [label="DDG: k"];
"1001027" -> "1001026"  [label="DDG: count"];
"1001030" -> "1001026"  [label="DDG: j"];
"1001030" -> "1001026"  [label="DDG: stream->n_samples"];
"1001009" -> "1001007"  [label="AST: "];
"1001009" -> "1001011"  [label="CFG: "];
"1001010" -> "1001009"  [label="AST: "];
"1001011" -> "1001009"  [label="AST: "];
"1001007" -> "1001009"  [label="CFG: "];
"1001009" -> "1001004"  [label="DDG: i"];
"1001009" -> "1001004"  [label="DDG: 8"];
"1001009" -> "1001005"  [label="DDG: i"];
"1001009" -> "1001005"  [label="DDG: 8"];
"1001009" -> "1001007"  [label="DDG: i"];
"1001009" -> "1001007"  [label="DDG: 8"];
"1000984" -> "1001009"  [label="DDG: i"];
"1000999" -> "1001009"  [label="DDG: i"];
"1001009" -> "1001019"  [label="DDG: i"];
"1001004" -> "1001002"  [label="AST: "];
"1001004" -> "1001005"  [label="CFG: "];
"1001005" -> "1001004"  [label="AST: "];
"1001002" -> "1001004"  [label="CFG: "];
"1001004" -> "1001068"  [label="DDG: ctts_data + 16 + i * 8"];
"1001004" -> "1001002"  [label="DDG: ctts_data + 16 + i * 8"];
"1001002" -> "1001001"  [label="AST: "];
"1001003" -> "1001002"  [label="AST: "];
"1001013" -> "1001002"  [label="CFG: "];
"1001002" -> "1001068"  [label="DDG: QT_UINT32 (ctts_data + 16 + i * 8)"];
"1001002" -> "1001027"  [label="DDG: count"];
"1001027" -> "1001029"  [label="CFG: "];
"1001028" -> "1001027"  [label="AST: "];
"1001029" -> "1001027"  [label="AST: "];
"1001031" -> "1001027"  [label="CFG: "];
"1001027" -> "1001068"  [label="DDG: k"];
"1001027" -> "1001068"  [label="DDG: count"];
"1001023" -> "1001027"  [label="DDG: k"];
"1001036" -> "1001027"  [label="DDG: k"];
"1001027" -> "1001036"  [label="DDG: k"];
"1001036" -> "1001035"  [label="AST: "];
"1001036" -> "1001037"  [label="CFG: "];
"1001037" -> "1001036"  [label="AST: "];
"1001039" -> "1001036"  [label="CFG: "];
"1001005" -> "1001007"  [label="CFG: "];
"1001006" -> "1001005"  [label="AST: "];
"1001007" -> "1001005"  [label="AST: "];
"1001005" -> "1001068"  [label="DDG: 16 + i * 8"];
"1001008" -> "1001007"  [label="AST: "];
"1001019" -> "1001017"  [label="AST: "];
"1001019" -> "1001021"  [label="CFG: "];
"1001020" -> "1001019"  [label="AST: "];
"1001021" -> "1001019"  [label="AST: "];
"1001017" -> "1001019"  [label="CFG: "];
"1001019" -> "1000999"  [label="DDG: i"];
"1001019" -> "1001014"  [label="DDG: i"];
"1001019" -> "1001014"  [label="DDG: 8"];
"1001019" -> "1001015"  [label="DDG: i"];
"1001019" -> "1001015"  [label="DDG: 8"];
"1001019" -> "1001017"  [label="DDG: i"];
"1001019" -> "1001017"  [label="DDG: 8"];
"1000999" -> "1000982"  [label="AST: "];
"1000999" -> "1001000"  [label="CFG: "];
"1001000" -> "1000999"  [label="AST: "];
"1000992" -> "1000999"  [label="CFG: "];
"1000999" -> "1001068"  [label="DDG: i"];
"1001014" -> "1001012"  [label="AST: "];
"1001014" -> "1001015"  [label="CFG: "];
"1001015" -> "1001014"  [label="AST: "];
"1001012" -> "1001014"  [label="CFG: "];
"1001014" -> "1001068"  [label="DDG: ctts_data + 20 + i * 8"];
"1001014" -> "1001012"  [label="DDG: ctts_data + 20 + i * 8"];
"1001012" -> "1001001"  [label="AST: "];
"1001013" -> "1001012"  [label="AST: "];
"1001024" -> "1001012"  [label="CFG: "];
"1001012" -> "1001068"  [label="DDG: soffset"];
"1001012" -> "1001068"  [label="DDG: QT_UINT32 (ctts_data + 20 + i * 8)"];
"1001012" -> "1001047"  [label="DDG: soffset"];
"1001047" -> "1001041"  [label="AST: "];
"1001047" -> "1001049"  [label="CFG: "];
"1001048" -> "1001047"  [label="AST: "];
"1001049" -> "1001047"  [label="AST: "];
"1001041" -> "1001047"  [label="CFG: "];
"1001047" -> "1001068"  [label="DDG: GST_SECOND / stream->timescale"];
"1001047" -> "1001068"  [label="DDG: soffset"];
"1001047" -> "1001041"  [label="DDG: soffset"];
"1001047" -> "1001041"  [label="DDG: GST_SECOND / stream->timescale"];
"1001049" -> "1001047"  [label="DDG: GST_SECOND"];
"1001049" -> "1001047"  [label="DDG: stream->timescale"];
"1001041" -> "1001040"  [label="AST: "];
"1001042" -> "1001041"  [label="AST: "];
"1001037" -> "1001041"  [label="CFG: "];
"1001041" -> "1001068"  [label="DDG: soffset * GST_SECOND / stream->timescale"];
"1001041" -> "1001068"  [label="DDG: samples[j].pts_offset"];
"1001015" -> "1001017"  [label="CFG: "];
"1001016" -> "1001015"  [label="AST: "];
"1001017" -> "1001015"  [label="AST: "];
"1001015" -> "1001068"  [label="DDG: ctts_data"];
"1001015" -> "1001068"  [label="DDG: 20 + i * 8"];
"1001018" -> "1001017"  [label="AST: "];
"1001017" -> "1001068"  [label="DDG: i * 8"];
"1000977" -> "1000979"  [label="CFG: "];
"1000978" -> "1000977"  [label="AST: "];
"1000979" -> "1000977"  [label="AST: "];
"1000977" -> "1001068"  [label="DDG: ctts_data"];
}
