digraph "0_gstreamer_bdc20b9baf13564d9a061343416395f8f9a92b53@pointer" {
"1000528" [label="(Call,(guint8 *) stts->data)"];
"1000514" [label="(Call,(guint8 *) stts->data)"];
"1000472" [label="(Call,(guint8 *) stts->data)"];
"1000528" [label="(Call,(guint8 *) stts->data)"];
"1000512" [label="(Call,QT_UINT32 ((guint8 *) stts->data + 16 + 8 * i))"];
"1000510" [label="(Call,n = QT_UINT32 ((guint8 *) stts->data + 16 + 8 * i))"];
"1000545" [label="(Call,j < n)"];
"1000544" [label="(Call,(j < n) && (index < stream->n_samples))"];
"1000496" [label="(Call,(i < n_sample_times) && (index < stream->n_samples))"];
"1000553" [label="(Call,j++)"];
"1000513" [label="(Call,(guint8 *) stts->data + 16 + 8 * i)"];
"1000526" [label="(Call,QT_UINT32 ((guint8 *) stts->data + 16 + 8 * i + 4))"];
"1000524" [label="(Call,duration = QT_UINT32 ((guint8 *) stts->data + 16 + 8 * i + 4))"];
"1000569" [label="(Call,stream->min_duration = duration)"];
"1000564" [label="(Call,stream->min_duration == 0)"];
"1000574" [label="(Call,time += duration)"];
"1000579" [label="(Call,gst_util_uint64_scale (time, GST_SECOND, stream->timescale))"];
"1000577" [label="(Call,timestamp = gst_util_uint64_scale (time, GST_SECOND, stream->timescale))"];
"1000591" [label="(Call,timestamp - samples[index].timestamp)"];
"1000556" [label="(Call,samples[index].timestamp = timestamp)"];
"1000585" [label="(Call,samples[index].duration = timestamp - samples[index].timestamp)"];
"1001049" [label="(Call,GST_SECOND / stream->timescale)"];
"1001047" [label="(Call,soffset * GST_SECOND / stream->timescale)"];
"1001041" [label="(Call,samples[j].pts_offset = soffset * GST_SECOND / stream->timescale)"];
"1000527" [label="(Call,(guint8 *) stts->data + 16 + 8 * i + 4)"];
"1000533" [label="(Call,16 + 8 * i + 4)"];
"1000568" [label="(Literal,0)"];
"1000546" [label="(Identifier,j)"];
"1000541" [label="(Call,j = 0)"];
"1000506" [label="(Identifier,i)"];
"1000563" [label="(ControlStructure,if (stream->min_duration == 0))"];
"1001012" [label="(Call,soffset = QT_UINT32 (ctts_data + 20 + i * 8))"];
"1001040" [label="(Block,)"];
"1000549" [label="(Identifier,index)"];
"1001050" [label="(Identifier,GST_SECOND)"];
"1000556" [label="(Call,samples[index].timestamp = timestamp)"];
"1000530" [label="(Call,stts->data)"];
"1000511" [label="(Identifier,n)"];
"1000570" [label="(Call,stream->min_duration)"];
"1000576" [label="(Identifier,duration)"];
"1000566" [label="(Identifier,stream)"];
"1000582" [label="(Call,stream->timescale)"];
"1000512" [label="(Call,QT_UINT32 ((guint8 *) stts->data + 16 + 8 * i))"];
"1000516" [label="(Call,stts->data)"];
"1000571" [label="(Identifier,stream)"];
"1000526" [label="(Call,QT_UINT32 ((guint8 *) stts->data + 16 + 8 * i + 4))"];
"1000562" [label="(Identifier,timestamp)"];
"1001047" [label="(Call,soffset * GST_SECOND / stream->timescale)"];
"1000477" [label="(Literal,12)"];
"1000585" [label="(Call,samples[index].duration = timestamp - samples[index].timestamp)"];
"1000472" [label="(Call,(guint8 *) stts->data)"];
"1000932" [label="(Call,gst_util_uint64_scale (sample_index,\n            GST_SECOND, stream->timescale))"];
"1000579" [label="(Call,gst_util_uint64_scale (time, GST_SECOND, stream->timescale))"];
"1000478" [label="(Call,timestamp = 0)"];
"1000536" [label="(Call,8 * i)"];
"1001048" [label="(Identifier,soffset)"];
"1000519" [label="(Call,16 + 8 * i)"];
"1000557" [label="(Call,samples[index].timestamp)"];
"1000547" [label="(Identifier,n)"];
"1000520" [label="(Literal,16)"];
"1000588" [label="(Identifier,samples)"];
"1000545" [label="(Call,j < n)"];
"1000470" [label="(Call,QT_UINT32 ((guint8 *) stts->data + 12))"];
"1000573" [label="(Identifier,duration)"];
"1000599" [label="(Identifier,index)"];
"1000559" [label="(Identifier,samples)"];
"1000555" [label="(Block,)"];
"1000577" [label="(Call,timestamp = gst_util_uint64_scale (time, GST_SECOND, stream->timescale))"];
"1000474" [label="(Call,stts->data)"];
"1000548" [label="(Call,index < stream->n_samples)"];
"1000544" [label="(Call,(j < n) && (index < stream->n_samples))"];
"1000500" [label="(Call,index < stream->n_samples)"];
"1000553" [label="(Call,j++)"];
"1000593" [label="(Call,samples[index].timestamp)"];
"1000591" [label="(Call,timestamp - samples[index].timestamp)"];
"1000574" [label="(Call,time += duration)"];
"1000540" [label="(ControlStructure,for (j = 0; (j < n) && (index < stream->n_samples); j++))"];
"1000507" [label="(Block,)"];
"1000564" [label="(Call,stream->min_duration == 0)"];
"1000514" [label="(Call,(guint8 *) stts->data)"];
"1000580" [label="(Identifier,time)"];
"1000601" [label="(Identifier,stss)"];
"1000481" [label="(Call,stream->min_duration = 0)"];
"1000586" [label="(Call,samples[index].duration)"];
"1000492" [label="(ControlStructure,for (i = 0; (i < n_sample_times) && (index < stream->n_samples); i++))"];
"1000592" [label="(Identifier,timestamp)"];
"1001049" [label="(Call,GST_SECOND / stream->timescale)"];
"1001051" [label="(Call,stream->timescale)"];
"1000525" [label="(Identifier,duration)"];
"1000554" [label="(Identifier,j)"];
"1000527" [label="(Call,(guint8 *) stts->data + 16 + 8 * i + 4)"];
"1001068" [label="(MethodReturn,RET)"];
"1000565" [label="(Call,stream->min_duration)"];
"1000569" [label="(Call,stream->min_duration = duration)"];
"1000471" [label="(Call,(guint8 *) stts->data + 12)"];
"1000578" [label="(Identifier,timestamp)"];
"1000513" [label="(Call,(guint8 *) stts->data + 16 + 8 * i)"];
"1000575" [label="(Identifier,time)"];
"1000542" [label="(Identifier,j)"];
"1001042" [label="(Call,samples[j].pts_offset)"];
"1000496" [label="(Call,(i < n_sample_times) && (index < stream->n_samples))"];
"1000521" [label="(Call,8 * i)"];
"1000486" [label="(Call,time = 0)"];
"1001037" [label="(Identifier,k)"];
"1000497" [label="(Call,i < n_sample_times)"];
"1000524" [label="(Call,duration = QT_UINT32 ((guint8 *) stts->data + 16 + 8 * i + 4))"];
"1001041" [label="(Call,samples[j].pts_offset = soffset * GST_SECOND / stream->timescale)"];
"1000581" [label="(Identifier,GST_SECOND)"];
"1000534" [label="(Literal,16)"];
"1000510" [label="(Call,n = QT_UINT32 ((guint8 *) stts->data + 16 + 8 * i))"];
"1000528" [label="(Call,(guint8 *) stts->data)"];
"1000528" -> "1000527"  [label="AST: "];
"1000528" -> "1000530"  [label="CFG: "];
"1000529" -> "1000528"  [label="AST: "];
"1000530" -> "1000528"  [label="AST: "];
"1000534" -> "1000528"  [label="CFG: "];
"1000528" -> "1001068"  [label="DDG: stts->data"];
"1000528" -> "1000514"  [label="DDG: stts->data"];
"1000528" -> "1000526"  [label="DDG: stts->data"];
"1000528" -> "1000527"  [label="DDG: stts->data"];
"1000514" -> "1000528"  [label="DDG: stts->data"];
"1000514" -> "1000513"  [label="AST: "];
"1000514" -> "1000516"  [label="CFG: "];
"1000515" -> "1000514"  [label="AST: "];
"1000516" -> "1000514"  [label="AST: "];
"1000520" -> "1000514"  [label="CFG: "];
"1000514" -> "1000512"  [label="DDG: stts->data"];
"1000514" -> "1000513"  [label="DDG: stts->data"];
"1000472" -> "1000514"  [label="DDG: stts->data"];
"1000472" -> "1000471"  [label="AST: "];
"1000472" -> "1000474"  [label="CFG: "];
"1000473" -> "1000472"  [label="AST: "];
"1000474" -> "1000472"  [label="AST: "];
"1000477" -> "1000472"  [label="CFG: "];
"1000472" -> "1001068"  [label="DDG: stts->data"];
"1000472" -> "1000470"  [label="DDG: stts->data"];
"1000472" -> "1000471"  [label="DDG: stts->data"];
"1000512" -> "1000510"  [label="AST: "];
"1000512" -> "1000513"  [label="CFG: "];
"1000513" -> "1000512"  [label="AST: "];
"1000510" -> "1000512"  [label="CFG: "];
"1000512" -> "1001068"  [label="DDG: (guint8 *) stts->data + 16 + 8 * i"];
"1000512" -> "1000510"  [label="DDG: (guint8 *) stts->data + 16 + 8 * i"];
"1000521" -> "1000512"  [label="DDG: 8"];
"1000521" -> "1000512"  [label="DDG: i"];
"1000510" -> "1000507"  [label="AST: "];
"1000511" -> "1000510"  [label="AST: "];
"1000525" -> "1000510"  [label="CFG: "];
"1000510" -> "1001068"  [label="DDG: QT_UINT32 ((guint8 *) stts->data + 16 + 8 * i)"];
"1000510" -> "1000545"  [label="DDG: n"];
"1000545" -> "1000544"  [label="AST: "];
"1000545" -> "1000547"  [label="CFG: "];
"1000546" -> "1000545"  [label="AST: "];
"1000547" -> "1000545"  [label="AST: "];
"1000549" -> "1000545"  [label="CFG: "];
"1000544" -> "1000545"  [label="CFG: "];
"1000545" -> "1001068"  [label="DDG: j"];
"1000545" -> "1001068"  [label="DDG: n"];
"1000545" -> "1000544"  [label="DDG: j"];
"1000545" -> "1000544"  [label="DDG: n"];
"1000553" -> "1000545"  [label="DDG: j"];
"1000541" -> "1000545"  [label="DDG: j"];
"1000545" -> "1000553"  [label="DDG: j"];
"1000544" -> "1000540"  [label="AST: "];
"1000544" -> "1000548"  [label="CFG: "];
"1000548" -> "1000544"  [label="AST: "];
"1000559" -> "1000544"  [label="CFG: "];
"1000506" -> "1000544"  [label="CFG: "];
"1000544" -> "1001068"  [label="DDG: j < n"];
"1000544" -> "1001068"  [label="DDG: (j < n) && (index < stream->n_samples)"];
"1000544" -> "1000496"  [label="DDG: index < stream->n_samples"];
"1000548" -> "1000544"  [label="DDG: index"];
"1000548" -> "1000544"  [label="DDG: stream->n_samples"];
"1000496" -> "1000544"  [label="DDG: index < stream->n_samples"];
"1000496" -> "1000492"  [label="AST: "];
"1000496" -> "1000497"  [label="CFG: "];
"1000496" -> "1000500"  [label="CFG: "];
"1000497" -> "1000496"  [label="AST: "];
"1000500" -> "1000496"  [label="AST: "];
"1000511" -> "1000496"  [label="CFG: "];
"1000601" -> "1000496"  [label="CFG: "];
"1000496" -> "1001068"  [label="DDG: (i < n_sample_times) && (index < stream->n_samples)"];
"1000496" -> "1001068"  [label="DDG: i < n_sample_times"];
"1000496" -> "1001068"  [label="DDG: index < stream->n_samples"];
"1000497" -> "1000496"  [label="DDG: i"];
"1000497" -> "1000496"  [label="DDG: n_sample_times"];
"1000500" -> "1000496"  [label="DDG: index"];
"1000500" -> "1000496"  [label="DDG: stream->n_samples"];
"1000553" -> "1000540"  [label="AST: "];
"1000553" -> "1000554"  [label="CFG: "];
"1000554" -> "1000553"  [label="AST: "];
"1000546" -> "1000553"  [label="CFG: "];
"1000513" -> "1000519"  [label="CFG: "];
"1000519" -> "1000513"  [label="AST: "];
"1000513" -> "1001068"  [label="DDG: 16 + 8 * i"];
"1000521" -> "1000513"  [label="DDG: 8"];
"1000521" -> "1000513"  [label="DDG: i"];
"1000526" -> "1000524"  [label="AST: "];
"1000526" -> "1000527"  [label="CFG: "];
"1000527" -> "1000526"  [label="AST: "];
"1000524" -> "1000526"  [label="CFG: "];
"1000526" -> "1001068"  [label="DDG: (guint8 *) stts->data + 16 + 8 * i + 4"];
"1000526" -> "1000524"  [label="DDG: (guint8 *) stts->data + 16 + 8 * i + 4"];
"1000536" -> "1000526"  [label="DDG: 8"];
"1000536" -> "1000526"  [label="DDG: i"];
"1000524" -> "1000507"  [label="AST: "];
"1000525" -> "1000524"  [label="AST: "];
"1000542" -> "1000524"  [label="CFG: "];
"1000524" -> "1001068"  [label="DDG: duration"];
"1000524" -> "1001068"  [label="DDG: QT_UINT32 ((guint8 *) stts->data + 16 + 8 * i + 4)"];
"1000524" -> "1000569"  [label="DDG: duration"];
"1000524" -> "1000574"  [label="DDG: duration"];
"1000569" -> "1000563"  [label="AST: "];
"1000569" -> "1000573"  [label="CFG: "];
"1000570" -> "1000569"  [label="AST: "];
"1000573" -> "1000569"  [label="AST: "];
"1000575" -> "1000569"  [label="CFG: "];
"1000569" -> "1001068"  [label="DDG: stream->min_duration"];
"1000569" -> "1000564"  [label="DDG: stream->min_duration"];
"1000564" -> "1000563"  [label="AST: "];
"1000564" -> "1000568"  [label="CFG: "];
"1000565" -> "1000564"  [label="AST: "];
"1000568" -> "1000564"  [label="AST: "];
"1000571" -> "1000564"  [label="CFG: "];
"1000575" -> "1000564"  [label="CFG: "];
"1000564" -> "1001068"  [label="DDG: stream->min_duration"];
"1000564" -> "1001068"  [label="DDG: stream->min_duration == 0"];
"1000481" -> "1000564"  [label="DDG: stream->min_duration"];
"1000574" -> "1000555"  [label="AST: "];
"1000574" -> "1000576"  [label="CFG: "];
"1000575" -> "1000574"  [label="AST: "];
"1000576" -> "1000574"  [label="AST: "];
"1000578" -> "1000574"  [label="CFG: "];
"1000574" -> "1001068"  [label="DDG: duration"];
"1000579" -> "1000574"  [label="DDG: time"];
"1000486" -> "1000574"  [label="DDG: time"];
"1000574" -> "1000579"  [label="DDG: time"];
"1000579" -> "1000577"  [label="AST: "];
"1000579" -> "1000582"  [label="CFG: "];
"1000580" -> "1000579"  [label="AST: "];
"1000581" -> "1000579"  [label="AST: "];
"1000582" -> "1000579"  [label="AST: "];
"1000577" -> "1000579"  [label="CFG: "];
"1000579" -> "1001068"  [label="DDG: time"];
"1000579" -> "1001068"  [label="DDG: stream->timescale"];
"1000579" -> "1001068"  [label="DDG: GST_SECOND"];
"1000579" -> "1000577"  [label="DDG: time"];
"1000579" -> "1000577"  [label="DDG: GST_SECOND"];
"1000579" -> "1000577"  [label="DDG: stream->timescale"];
"1000579" -> "1001049"  [label="DDG: GST_SECOND"];
"1000579" -> "1001049"  [label="DDG: stream->timescale"];
"1000577" -> "1000555"  [label="AST: "];
"1000578" -> "1000577"  [label="AST: "];
"1000588" -> "1000577"  [label="CFG: "];
"1000577" -> "1001068"  [label="DDG: gst_util_uint64_scale (time, GST_SECOND, stream->timescale)"];
"1000577" -> "1000591"  [label="DDG: timestamp"];
"1000591" -> "1000585"  [label="AST: "];
"1000591" -> "1000593"  [label="CFG: "];
"1000592" -> "1000591"  [label="AST: "];
"1000593" -> "1000591"  [label="AST: "];
"1000585" -> "1000591"  [label="CFG: "];
"1000591" -> "1001068"  [label="DDG: timestamp"];
"1000591" -> "1001068"  [label="DDG: samples[index].timestamp"];
"1000591" -> "1000556"  [label="DDG: timestamp"];
"1000591" -> "1000585"  [label="DDG: timestamp"];
"1000591" -> "1000585"  [label="DDG: samples[index].timestamp"];
"1000556" -> "1000591"  [label="DDG: samples[index].timestamp"];
"1000556" -> "1000555"  [label="AST: "];
"1000556" -> "1000562"  [label="CFG: "];
"1000557" -> "1000556"  [label="AST: "];
"1000562" -> "1000556"  [label="AST: "];
"1000566" -> "1000556"  [label="CFG: "];
"1000478" -> "1000556"  [label="DDG: timestamp"];
"1000585" -> "1000555"  [label="AST: "];
"1000586" -> "1000585"  [label="AST: "];
"1000599" -> "1000585"  [label="CFG: "];
"1000585" -> "1001068"  [label="DDG: samples[index].duration"];
"1000585" -> "1001068"  [label="DDG: timestamp - samples[index].timestamp"];
"1001049" -> "1001047"  [label="AST: "];
"1001049" -> "1001051"  [label="CFG: "];
"1001050" -> "1001049"  [label="AST: "];
"1001051" -> "1001049"  [label="AST: "];
"1001047" -> "1001049"  [label="CFG: "];
"1001049" -> "1001068"  [label="DDG: stream->timescale"];
"1001049" -> "1001068"  [label="DDG: GST_SECOND"];
"1001049" -> "1001047"  [label="DDG: GST_SECOND"];
"1001049" -> "1001047"  [label="DDG: stream->timescale"];
"1000932" -> "1001049"  [label="DDG: GST_SECOND"];
"1000932" -> "1001049"  [label="DDG: stream->timescale"];
"1001047" -> "1001041"  [label="AST: "];
"1001048" -> "1001047"  [label="AST: "];
"1001041" -> "1001047"  [label="CFG: "];
"1001047" -> "1001068"  [label="DDG: GST_SECOND / stream->timescale"];
"1001047" -> "1001068"  [label="DDG: soffset"];
"1001047" -> "1001041"  [label="DDG: soffset"];
"1001047" -> "1001041"  [label="DDG: GST_SECOND / stream->timescale"];
"1001012" -> "1001047"  [label="DDG: soffset"];
"1001041" -> "1001040"  [label="AST: "];
"1001042" -> "1001041"  [label="AST: "];
"1001037" -> "1001041"  [label="CFG: "];
"1001041" -> "1001068"  [label="DDG: soffset * GST_SECOND / stream->timescale"];
"1001041" -> "1001068"  [label="DDG: samples[j].pts_offset"];
"1000527" -> "1000533"  [label="CFG: "];
"1000533" -> "1000527"  [label="AST: "];
"1000527" -> "1001068"  [label="DDG: 16 + 8 * i + 4"];
"1000527" -> "1001068"  [label="DDG: (guint8 *) stts->data"];
"1000536" -> "1000527"  [label="DDG: 8"];
"1000536" -> "1000527"  [label="DDG: i"];
}
