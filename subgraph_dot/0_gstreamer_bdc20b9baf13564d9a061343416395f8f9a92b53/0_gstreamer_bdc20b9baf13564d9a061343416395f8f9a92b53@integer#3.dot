digraph "0_gstreamer_bdc20b9baf13564d9a061343416395f8f9a92b53@integer" {
"1000272" [label="(Call,samples[i].size = QT_UINT32 (stsz_data + i * 4 + 20))"];
"1000278" [label="(Call,QT_UINT32 (stsz_data + i * 4 + 20))"];
"1000168" [label="(Call,stsz_data = (const guint8 *) stsz->data)"];
"1000170" [label="(Call,(const guint8 *) stsz->data)"];
"1000282" [label="(Call,i * 4)"];
"1000262" [label="(Call,i < n_samples)"];
"1000259" [label="(Call,i = 0)"];
"1000265" [label="(Call,i++)"];
"1000294" [label="(Call,GST_LOG_OBJECT (qtdemux, \"sample %d has size %d\", i, samples[i].size))"];
"1000239" [label="(Call,GST_DEBUG_OBJECT (qtdemux, \"stsz sample_size 0, allocating n_samples %d\",\n        n_samples))"];
"1000118" [label="(MethodParameterIn,GstQTDemux * qtdemux)"];
"1000233" [label="(Call,n_samples = QT_UINT32 (stsz_data + 16))"];
"1000235" [label="(Call,QT_UINT32 (stsz_data + 16))"];
"1000272" [label="(Call,samples[i].size = QT_UINT32 (stsz_data + i * 4 + 20))"];
"1000287" [label="(Call,samples[i].size = sample_size)"];
"1000269" [label="(Call,sample_size == 0)"];
"1000226" [label="(Call,sample_size == 0)"];
"1000218" [label="(Call,sample_size = QT_UINT32 (stsz_data + 12))"];
"1000220" [label="(Call,QT_UINT32 (stsz_data + 12))"];
"1000250" [label="(Call,g_new0 (QtDemuxSample, n_samples))"];
"1000279" [label="(Call,stsz_data + i * 4 + 20)"];
"1000281" [label="(Call,i * 4 + 20)"];
"1000463" [label="(Call,index >= n_samples)"];
"1000434" [label="(Call,GST_LOG_OBJECT (qtdemux, \"Creating entry %d with offset %lld\",\n              index, chunk_offset))"];
"1000446" [label="(Call,samples[index].offset = chunk_offset)"];
"1000453" [label="(Call,chunk_offset += samples[index].size)"];
"1000460" [label="(Call,index++)"];
"1000172" [label="(Call,stsz->data)"];
"1000265" [label="(Call,i++)"];
"1000681" [label="(Call,GST_DEBUG_OBJECT (qtdemux,\n        \"stsz sample_size %d != 0, treating chunks as samples\", sample_size))"];
"1000290" [label="(Identifier,samples)"];
"1000269" [label="(Call,sample_size == 0)"];
"1000433" [label="(Block,)"];
"1000436" [label="(Literal,\"Creating entry %d with offset %lld\")"];
"1000806" [label="(Call,GST_LOG_OBJECT (qtdemux,\n          \"entry %d has first_chunk %d, last_chunk %d, samples_per_chunk %d\", i,\n          first_chunk, last_chunk, samples_per_chunk))"];
"1000286" [label="(ControlStructure,else)"];
"1000287" [label="(Call,samples[i].size = sample_size)"];
"1000282" [label="(Call,i * 4)"];
"1000259" [label="(Call,i = 0)"];
"1000168" [label="(Call,stsz_data = (const guint8 *) stsz->data)"];
"1000239" [label="(Call,GST_DEBUG_OBJECT (qtdemux, \"stsz sample_size 0, allocating n_samples %d\",\n        n_samples))"];
"1000252" [label="(Identifier,n_samples)"];
"1000711" [label="(Call,GST_DEBUG_OBJECT (qtdemux, \"allocating n_samples %d\", n_samples))"];
"1000263" [label="(Identifier,i)"];
"1000462" [label="(ControlStructure,if (index >= n_samples))"];
"1000176" [label="(Identifier,stco)"];
"1000258" [label="(ControlStructure,for (i = 0; i < n_samples; i++))"];
"1000306" [label="(Identifier,samples)"];
"1000267" [label="(Block,)"];
"1000220" [label="(Call,QT_UINT32 (stsz_data + 12))"];
"1001059" [label="(Call,GST_ELEMENT_ERROR (qtdemux, STREAM, DECODE,\n        (_(\"This file is corrupt and cannot be played.\")), (NULL)))"];
"1000271" [label="(Literal,0)"];
"1000296" [label="(Literal,\"sample %d has size %d\")"];
"1000243" [label="(Call,stream->n_samples = n_samples)"];
"1000434" [label="(Call,GST_LOG_OBJECT (qtdemux, \"Creating entry %d with offset %lld\",\n              index, chunk_offset))"];
"1000442" [label="(Identifier,samples)"];
"1000295" [label="(Identifier,qtdemux)"];
"1000465" [label="(Identifier,n_samples)"];
"1000264" [label="(Identifier,n_samples)"];
"1000464" [label="(Identifier,index)"];
"1000280" [label="(Identifier,stsz_data)"];
"1000410" [label="(Call,chunk_offset = QT_UINT64 ((guint8 *) co64->data + 16 + j * 8))"];
"1000281" [label="(Call,i * 4 + 20)"];
"1000279" [label="(Call,stsz_data + i * 4 + 20)"];
"1000118" [label="(MethodParameterIn,GstQTDemux * qtdemux)"];
"1000240" [label="(Identifier,qtdemux)"];
"1000285" [label="(Literal,20)"];
"1000452" [label="(Identifier,chunk_offset)"];
"1000235" [label="(Call,QT_UINT32 (stsz_data + 16))"];
"1000278" [label="(Call,QT_UINT32 (stsz_data + i * 4 + 20))"];
"1000446" [label="(Call,samples[index].offset = chunk_offset)"];
"1000230" [label="(Identifier,stream)"];
"1000455" [label="(Call,samples[index].size)"];
"1000460" [label="(Call,index++)"];
"1000272" [label="(Call,samples[i].size = QT_UINT32 (stsz_data + i * 4 + 20))"];
"1000273" [label="(Call,samples[i].size)"];
"1000275" [label="(Identifier,samples)"];
"1000218" [label="(Call,sample_size = QT_UINT32 (stsz_data + 12))"];
"1000731" [label="(Call,GST_DEBUG_OBJECT (qtdemux, \"n_samples_per_chunk %d\", n_samples_per_chunk))"];
"1000221" [label="(Call,stsz_data + 12)"];
"1000169" [label="(Identifier,stsz_data)"];
"1000466" [label="(ControlStructure,goto done2;)"];
"1000435" [label="(Identifier,qtdemux)"];
"1000219" [label="(Identifier,sample_size)"];
"1000241" [label="(Literal,\"stsz sample_size 0, allocating n_samples %d\")"];
"1000316" [label="(Call,index = 0)"];
"1000233" [label="(Call,n_samples = QT_UINT32 (stsz_data + 16))"];
"1000250" [label="(Call,g_new0 (QtDemuxSample, n_samples))"];
"1000245" [label="(Identifier,stream)"];
"1000288" [label="(Call,samples[i].size)"];
"1000170" [label="(Call,(const guint8 *) stsz->data)"];
"1000297" [label="(Identifier,i)"];
"1000232" [label="(Block,)"];
"1000294" [label="(Call,GST_LOG_OBJECT (qtdemux, \"sample %d has size %d\", i, samples[i].size))"];
"1000270" [label="(Identifier,sample_size)"];
"1000236" [label="(Call,stsz_data + 16)"];
"1000225" [label="(Call,sample_size == 0 || stream->sampled)"];
"1000463" [label="(Call,index >= n_samples)"];
"1000298" [label="(Call,samples[i].size)"];
"1000311" [label="(Identifier,n_samples_per_chunk)"];
"1000909" [label="(Call,GST_DEBUG_OBJECT (qtdemux, \"sample %d: timestamp %\" GST_TIME_FORMAT\n            \", size %u\", j, GST_TIME_ARGS (timestamp), samples[j].size))"];
"1000227" [label="(Identifier,sample_size)"];
"1000398" [label="(Call,chunk_offset = QT_UINT32 (stco_data + 16 + j * 4))"];
"1000262" [label="(Call,i < n_samples)"];
"1001068" [label="(MethodReturn,RET)"];
"1000234" [label="(Identifier,n_samples)"];
"1000437" [label="(Identifier,index)"];
"1000447" [label="(Call,samples[index].offset)"];
"1000226" [label="(Call,sample_size == 0)"];
"1000261" [label="(Literal,0)"];
"1000454" [label="(Identifier,chunk_offset)"];
"1000438" [label="(Identifier,chunk_offset)"];
"1000251" [label="(Identifier,QtDemuxSample)"];
"1000283" [label="(Identifier,i)"];
"1000242" [label="(Identifier,n_samples)"];
"1000432" [label="(Identifier,k)"];
"1000284" [label="(Literal,4)"];
"1000453" [label="(Call,chunk_offset += samples[index].size)"];
"1000121" [label="(Block,)"];
"1000268" [label="(ControlStructure,if (sample_size == 0))"];
"1000260" [label="(Identifier,i)"];
"1000248" [label="(Call,samples = g_new0 (QtDemuxSample, n_samples))"];
"1000461" [label="(Identifier,index)"];
"1000293" [label="(Identifier,sample_size)"];
"1000228" [label="(Literal,0)"];
"1000266" [label="(Identifier,i)"];
"1000272" -> "1000268"  [label="AST: "];
"1000272" -> "1000278"  [label="CFG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000278" -> "1000272"  [label="AST: "];
"1000295" -> "1000272"  [label="CFG: "];
"1000272" -> "1001068"  [label="DDG: "];
"1000278" -> "1000272"  [label="DDG: "];
"1000272" -> "1000294"  [label="DDG: "];
"1000278" -> "1000279"  [label="CFG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000278" -> "1001068"  [label="DDG: "];
"1000168" -> "1000278"  [label="DDG: "];
"1000282" -> "1000278"  [label="DDG: "];
"1000282" -> "1000278"  [label="DDG: "];
"1000168" -> "1000121"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000176" -> "1000168"  [label="CFG: "];
"1000168" -> "1001068"  [label="DDG: "];
"1000168" -> "1001068"  [label="DDG: "];
"1000170" -> "1000168"  [label="DDG: "];
"1000168" -> "1000220"  [label="DDG: "];
"1000168" -> "1000221"  [label="DDG: "];
"1000168" -> "1000235"  [label="DDG: "];
"1000168" -> "1000236"  [label="DDG: "];
"1000168" -> "1000279"  [label="DDG: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000170" -> "1001068"  [label="DDG: "];
"1000282" -> "1000281"  [label="AST: "];
"1000282" -> "1000284"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000284" -> "1000282"  [label="AST: "];
"1000285" -> "1000282"  [label="CFG: "];
"1000282" -> "1000279"  [label="DDG: "];
"1000282" -> "1000279"  [label="DDG: "];
"1000282" -> "1000281"  [label="DDG: "];
"1000282" -> "1000281"  [label="DDG: "];
"1000262" -> "1000282"  [label="DDG: "];
"1000282" -> "1000294"  [label="DDG: "];
"1000262" -> "1000258"  [label="AST: "];
"1000262" -> "1000264"  [label="CFG: "];
"1000263" -> "1000262"  [label="AST: "];
"1000264" -> "1000262"  [label="AST: "];
"1000270" -> "1000262"  [label="CFG: "];
"1000311" -> "1000262"  [label="CFG: "];
"1000262" -> "1001068"  [label="DDG: "];
"1000262" -> "1001068"  [label="DDG: "];
"1000259" -> "1000262"  [label="DDG: "];
"1000265" -> "1000262"  [label="DDG: "];
"1000250" -> "1000262"  [label="DDG: "];
"1000262" -> "1000294"  [label="DDG: "];
"1000262" -> "1000463"  [label="DDG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000259" -> "1000261"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000259"  [label="AST: "];
"1000263" -> "1000259"  [label="CFG: "];
"1000265" -> "1000258"  [label="AST: "];
"1000265" -> "1000266"  [label="CFG: "];
"1000266" -> "1000265"  [label="AST: "];
"1000263" -> "1000265"  [label="CFG: "];
"1000294" -> "1000265"  [label="DDG: "];
"1000294" -> "1000267"  [label="AST: "];
"1000294" -> "1000298"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000296" -> "1000294"  [label="AST: "];
"1000297" -> "1000294"  [label="AST: "];
"1000298" -> "1000294"  [label="AST: "];
"1000306" -> "1000294"  [label="CFG: "];
"1000294" -> "1001068"  [label="DDG: "];
"1000294" -> "1001068"  [label="DDG: "];
"1000294" -> "1001068"  [label="DDG: "];
"1000239" -> "1000294"  [label="DDG: "];
"1000118" -> "1000294"  [label="DDG: "];
"1000287" -> "1000294"  [label="DDG: "];
"1000294" -> "1000434"  [label="DDG: "];
"1000239" -> "1000232"  [label="AST: "];
"1000239" -> "1000242"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="AST: "];
"1000242" -> "1000239"  [label="AST: "];
"1000245" -> "1000239"  [label="CFG: "];
"1000239" -> "1001068"  [label="DDG: "];
"1000239" -> "1001068"  [label="DDG: "];
"1000118" -> "1000239"  [label="DDG: "];
"1000233" -> "1000239"  [label="DDG: "];
"1000239" -> "1000243"  [label="DDG: "];
"1000239" -> "1000250"  [label="DDG: "];
"1000239" -> "1000434"  [label="DDG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1001068"  [label="DDG: "];
"1000118" -> "1000434"  [label="DDG: "];
"1000118" -> "1000681"  [label="DDG: "];
"1000118" -> "1000711"  [label="DDG: "];
"1000118" -> "1000731"  [label="DDG: "];
"1000118" -> "1000806"  [label="DDG: "];
"1000118" -> "1000909"  [label="DDG: "];
"1000118" -> "1001059"  [label="DDG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000233" -> "1000235"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000235" -> "1000233"  [label="AST: "];
"1000240" -> "1000233"  [label="CFG: "];
"1000233" -> "1001068"  [label="DDG: "];
"1000235" -> "1000233"  [label="DDG: "];
"1000235" -> "1000236"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000235" -> "1001068"  [label="DDG: "];
"1000287" -> "1000286"  [label="AST: "];
"1000287" -> "1000293"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000293" -> "1000287"  [label="AST: "];
"1000295" -> "1000287"  [label="CFG: "];
"1000287" -> "1001068"  [label="DDG: "];
"1000269" -> "1000287"  [label="DDG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000269" -> "1000271"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000271" -> "1000269"  [label="AST: "];
"1000275" -> "1000269"  [label="CFG: "];
"1000290" -> "1000269"  [label="CFG: "];
"1000269" -> "1001068"  [label="DDG: "];
"1000269" -> "1001068"  [label="DDG: "];
"1000226" -> "1000269"  [label="DDG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000226" -> "1000228"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000228" -> "1000226"  [label="AST: "];
"1000230" -> "1000226"  [label="CFG: "];
"1000225" -> "1000226"  [label="CFG: "];
"1000226" -> "1001068"  [label="DDG: "];
"1000226" -> "1000225"  [label="DDG: "];
"1000226" -> "1000225"  [label="DDG: "];
"1000218" -> "1000226"  [label="DDG: "];
"1000226" -> "1000681"  [label="DDG: "];
"1000218" -> "1000121"  [label="AST: "];
"1000218" -> "1000220"  [label="CFG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000220" -> "1000218"  [label="AST: "];
"1000227" -> "1000218"  [label="CFG: "];
"1000218" -> "1001068"  [label="DDG: "];
"1000220" -> "1000218"  [label="DDG: "];
"1000220" -> "1000221"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000220" -> "1001068"  [label="DDG: "];
"1000250" -> "1000248"  [label="AST: "];
"1000250" -> "1000252"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000252" -> "1000250"  [label="AST: "];
"1000248" -> "1000250"  [label="CFG: "];
"1000250" -> "1001068"  [label="DDG: "];
"1000250" -> "1000248"  [label="DDG: "];
"1000250" -> "1000248"  [label="DDG: "];
"1000279" -> "1000281"  [label="CFG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000281" -> "1000279"  [label="AST: "];
"1000279" -> "1001068"  [label="DDG: "];
"1000279" -> "1001068"  [label="DDG: "];
"1000281" -> "1000285"  [label="CFG: "];
"1000285" -> "1000281"  [label="AST: "];
"1000281" -> "1001068"  [label="DDG: "];
"1000463" -> "1000462"  [label="AST: "];
"1000463" -> "1000465"  [label="CFG: "];
"1000464" -> "1000463"  [label="AST: "];
"1000465" -> "1000463"  [label="AST: "];
"1000466" -> "1000463"  [label="CFG: "];
"1000432" -> "1000463"  [label="CFG: "];
"1000463" -> "1001068"  [label="DDG: "];
"1000463" -> "1001068"  [label="DDG: "];
"1000463" -> "1000434"  [label="DDG: "];
"1000460" -> "1000463"  [label="DDG: "];
"1000434" -> "1000433"  [label="AST: "];
"1000434" -> "1000438"  [label="CFG: "];
"1000435" -> "1000434"  [label="AST: "];
"1000436" -> "1000434"  [label="AST: "];
"1000437" -> "1000434"  [label="AST: "];
"1000438" -> "1000434"  [label="AST: "];
"1000442" -> "1000434"  [label="CFG: "];
"1000434" -> "1001068"  [label="DDG: "];
"1000434" -> "1001068"  [label="DDG: "];
"1000316" -> "1000434"  [label="DDG: "];
"1000410" -> "1000434"  [label="DDG: "];
"1000453" -> "1000434"  [label="DDG: "];
"1000398" -> "1000434"  [label="DDG: "];
"1000434" -> "1000446"  [label="DDG: "];
"1000434" -> "1000453"  [label="DDG: "];
"1000434" -> "1000460"  [label="DDG: "];
"1000446" -> "1000433"  [label="AST: "];
"1000446" -> "1000452"  [label="CFG: "];
"1000447" -> "1000446"  [label="AST: "];
"1000452" -> "1000446"  [label="AST: "];
"1000454" -> "1000446"  [label="CFG: "];
"1000446" -> "1001068"  [label="DDG: "];
"1000453" -> "1000433"  [label="AST: "];
"1000453" -> "1000455"  [label="CFG: "];
"1000454" -> "1000453"  [label="AST: "];
"1000455" -> "1000453"  [label="AST: "];
"1000461" -> "1000453"  [label="CFG: "];
"1000453" -> "1001068"  [label="DDG: "];
"1000453" -> "1001068"  [label="DDG: "];
"1000460" -> "1000433"  [label="AST: "];
"1000460" -> "1000461"  [label="CFG: "];
"1000461" -> "1000460"  [label="AST: "];
"1000464" -> "1000460"  [label="CFG: "];
}
