digraph "1_linux_04bcef2a83f40c6db24222b27a52892cba39dffb@pointer" {
"1000313" [label="(Call,ip_vs_copy_service(entry, svc))"];
"1000274" [label="(Call,entry = (struct ip_vs_service_entry *)arg)"];
"1000276" [label="(Call,(struct ip_vs_service_entry *)arg)"];
"1000140" [label="(Call,copy_from_user(arg, user, get_arglen[GET_CMDID(cmd)]))"];
"1000103" [label="(MethodParameterIn,void __user *user)"];
"1000119" [label="(Call,*len < get_arglen[GET_CMDID(cmd)])"];
"1000290" [label="(Call,svc = __ip_vs_svc_fwm_get(AF_INET, entry->fwmark))"];
"1000292" [label="(Call,__ip_vs_svc_fwm_get(AF_INET, entry->fwmark))"];
"1000298" [label="(Call,svc = __ip_vs_service_get(AF_INET, entry->protocol,\n\t\t\t\t\t\t  &addr, entry->port))"];
"1000300" [label="(Call,__ip_vs_service_get(AF_INET, entry->protocol,\n\t\t\t\t\t\t  &addr, entry->port))"];
"1000318" [label="(Call,copy_to_user(user, entry, sizeof(*entry)))"];
"1000317" [label="(Call,copy_to_user(user, entry, sizeof(*entry)) != 0)"];
"1000329" [label="(Call,ip_vs_service_put(svc))"];
"1000300" [label="(Call,__ip_vs_service_get(AF_INET, entry->protocol,\n\t\t\t\t\t\t  &addr, entry->port))"];
"1000119" [label="(Call,*len < get_arglen[GET_CMDID(cmd)])"];
"1000324" [label="(Literal,0)"];
"1000274" [label="(Call,entry = (struct ip_vs_service_entry *)arg)"];
"1000103" [label="(MethodParameterIn,void __user *user)"];
"1000128" [label="(Literal,\"get_ctl: len %u < %u\n\")"];
"1000302" [label="(Call,entry->protocol)"];
"1000311" [label="(Identifier,svc)"];
"1000326" [label="(Identifier,ret)"];
"1000475" [label="(Call,copy_to_user(user, &d, sizeof(d)))"];
"1000265" [label="(Call,__ip_vs_get_service_entries(get, user))"];
"1000142" [label="(Identifier,user)"];
"1000127" [label="(Call,pr_err(\"get_ctl: len %u < %u\n\",\n \t\t       *len, get_arglen[GET_CMDID(cmd)]))"];
"1000315" [label="(Identifier,svc)"];
"1000294" [label="(Call,entry->fwmark)"];
"1000317" [label="(Call,copy_to_user(user, entry, sizeof(*entry)) != 0)"];
"1000122" [label="(Call,get_arglen[GET_CMDID(cmd)])"];
"1000320" [label="(Identifier,entry)"];
"1000498" [label="(MethodReturn,RET)"];
"1000232" [label="(Call,(struct ip_vs_get_services *)arg)"];
"1000376" [label="(Call,__ip_vs_get_dest_entries(get, user))"];
"1000286" [label="(ControlStructure,if (entry->fwmark))"];
"1000214" [label="(Call,copy_to_user(user, &info, sizeof(info)))"];
"1000297" [label="(ControlStructure,else)"];
"1000291" [label="(Identifier,svc)"];
"1000292" [label="(Call,__ip_vs_svc_fwm_get(AF_INET, entry->fwmark))"];
"1000140" [label="(Call,copy_from_user(arg, user, get_arglen[GET_CMDID(cmd)]))"];
"1000143" [label="(Call,get_arglen[GET_CMDID(cmd)])"];
"1000275" [label="(Identifier,entry)"];
"1000281" [label="(Identifier,addr)"];
"1000314" [label="(Identifier,entry)"];
"1000299" [label="(Identifier,svc)"];
"1000330" [label="(Identifier,svc)"];
"1000290" [label="(Call,svc = __ip_vs_svc_fwm_get(AF_INET, entry->fwmark))"];
"1000329" [label="(Call,ip_vs_service_put(svc))"];
"1000318" [label="(Call,copy_to_user(user, entry, sizeof(*entry)))"];
"1000312" [label="(Block,)"];
"1000270" [label="(Block,)"];
"1000278" [label="(Identifier,arg)"];
"1000305" [label="(Call,&addr)"];
"1000307" [label="(Call,entry->port)"];
"1000172" [label="(Call,copy_to_user(user, buf, strlen(buf)+1))"];
"1000359" [label="(Call,*len != size)"];
"1000141" [label="(Identifier,arg)"];
"1000301" [label="(Identifier,AF_INET)"];
"1000343" [label="(Call,(struct ip_vs_get_dests *)arg)"];
"1000313" [label="(Call,ip_vs_copy_service(entry, svc))"];
"1000147" [label="(Literal,0)"];
"1000316" [label="(ControlStructure,if (copy_to_user(user, entry, sizeof(*entry)) != 0))"];
"1000321" [label="(Call,sizeof(*entry))"];
"1000319" [label="(Identifier,user)"];
"1000139" [label="(Call,copy_from_user(arg, user, get_arglen[GET_CMDID(cmd)]) != 0)"];
"1000120" [label="(Call,*len)"];
"1000336" [label="(ControlStructure,break;)"];
"1000276" [label="(Call,(struct ip_vs_service_entry *)arg)"];
"1000118" [label="(ControlStructure,if (*len < get_arglen[GET_CMDID(cmd)]))"];
"1000298" [label="(Call,svc = __ip_vs_service_get(AF_INET, entry->protocol,\n\t\t\t\t\t\t  &addr, entry->port))"];
"1000293" [label="(Identifier,AF_INET)"];
"1000388" [label="(Call,copy_to_user(user, &t, sizeof(t)))"];
"1000248" [label="(Call,*len != size)"];
"1000313" -> "1000312"  [label="AST: "];
"1000313" -> "1000315"  [label="CFG: "];
"1000314" -> "1000313"  [label="AST: "];
"1000315" -> "1000313"  [label="AST: "];
"1000319" -> "1000313"  [label="CFG: "];
"1000313" -> "1000498"  [label="DDG: ip_vs_copy_service(entry, svc)"];
"1000274" -> "1000313"  [label="DDG: entry"];
"1000290" -> "1000313"  [label="DDG: svc"];
"1000298" -> "1000313"  [label="DDG: svc"];
"1000313" -> "1000318"  [label="DDG: entry"];
"1000313" -> "1000329"  [label="DDG: svc"];
"1000274" -> "1000270"  [label="AST: "];
"1000274" -> "1000276"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000276" -> "1000274"  [label="AST: "];
"1000281" -> "1000274"  [label="CFG: "];
"1000274" -> "1000498"  [label="DDG: entry"];
"1000274" -> "1000498"  [label="DDG: (struct ip_vs_service_entry *)arg"];
"1000276" -> "1000274"  [label="DDG: arg"];
"1000276" -> "1000278"  [label="CFG: "];
"1000277" -> "1000276"  [label="AST: "];
"1000278" -> "1000276"  [label="AST: "];
"1000276" -> "1000498"  [label="DDG: arg"];
"1000140" -> "1000276"  [label="DDG: arg"];
"1000140" -> "1000139"  [label="AST: "];
"1000140" -> "1000143"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000142" -> "1000140"  [label="AST: "];
"1000143" -> "1000140"  [label="AST: "];
"1000147" -> "1000140"  [label="CFG: "];
"1000140" -> "1000498"  [label="DDG: user"];
"1000140" -> "1000498"  [label="DDG: arg"];
"1000140" -> "1000498"  [label="DDG: get_arglen[GET_CMDID(cmd)]"];
"1000140" -> "1000139"  [label="DDG: arg"];
"1000140" -> "1000139"  [label="DDG: user"];
"1000140" -> "1000139"  [label="DDG: get_arglen[GET_CMDID(cmd)]"];
"1000103" -> "1000140"  [label="DDG: user"];
"1000119" -> "1000140"  [label="DDG: get_arglen[GET_CMDID(cmd)]"];
"1000140" -> "1000172"  [label="DDG: user"];
"1000140" -> "1000214"  [label="DDG: user"];
"1000140" -> "1000232"  [label="DDG: arg"];
"1000140" -> "1000265"  [label="DDG: user"];
"1000140" -> "1000318"  [label="DDG: user"];
"1000140" -> "1000343"  [label="DDG: arg"];
"1000140" -> "1000376"  [label="DDG: user"];
"1000140" -> "1000388"  [label="DDG: user"];
"1000140" -> "1000475"  [label="DDG: user"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000498"  [label="DDG: user"];
"1000103" -> "1000172"  [label="DDG: user"];
"1000103" -> "1000214"  [label="DDG: user"];
"1000103" -> "1000265"  [label="DDG: user"];
"1000103" -> "1000318"  [label="DDG: user"];
"1000103" -> "1000376"  [label="DDG: user"];
"1000103" -> "1000388"  [label="DDG: user"];
"1000103" -> "1000475"  [label="DDG: user"];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000122"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000122" -> "1000119"  [label="AST: "];
"1000128" -> "1000119"  [label="CFG: "];
"1000141" -> "1000119"  [label="CFG: "];
"1000119" -> "1000498"  [label="DDG: *len"];
"1000119" -> "1000498"  [label="DDG: *len < get_arglen[GET_CMDID(cmd)]"];
"1000119" -> "1000127"  [label="DDG: *len"];
"1000119" -> "1000127"  [label="DDG: get_arglen[GET_CMDID(cmd)]"];
"1000119" -> "1000248"  [label="DDG: *len"];
"1000119" -> "1000359"  [label="DDG: *len"];
"1000290" -> "1000286"  [label="AST: "];
"1000290" -> "1000292"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000292" -> "1000290"  [label="AST: "];
"1000311" -> "1000290"  [label="CFG: "];
"1000290" -> "1000498"  [label="DDG: svc"];
"1000290" -> "1000498"  [label="DDG: __ip_vs_svc_fwm_get(AF_INET, entry->fwmark)"];
"1000292" -> "1000290"  [label="DDG: AF_INET"];
"1000292" -> "1000290"  [label="DDG: entry->fwmark"];
"1000292" -> "1000294"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000294" -> "1000292"  [label="AST: "];
"1000292" -> "1000498"  [label="DDG: entry->fwmark"];
"1000292" -> "1000498"  [label="DDG: AF_INET"];
"1000298" -> "1000297"  [label="AST: "];
"1000298" -> "1000300"  [label="CFG: "];
"1000299" -> "1000298"  [label="AST: "];
"1000300" -> "1000298"  [label="AST: "];
"1000311" -> "1000298"  [label="CFG: "];
"1000298" -> "1000498"  [label="DDG: svc"];
"1000298" -> "1000498"  [label="DDG: __ip_vs_service_get(AF_INET, entry->protocol,\n\t\t\t\t\t\t  &addr, entry->port)"];
"1000300" -> "1000298"  [label="DDG: AF_INET"];
"1000300" -> "1000298"  [label="DDG: entry->protocol"];
"1000300" -> "1000298"  [label="DDG: &addr"];
"1000300" -> "1000298"  [label="DDG: entry->port"];
"1000300" -> "1000307"  [label="CFG: "];
"1000301" -> "1000300"  [label="AST: "];
"1000302" -> "1000300"  [label="AST: "];
"1000305" -> "1000300"  [label="AST: "];
"1000307" -> "1000300"  [label="AST: "];
"1000300" -> "1000498"  [label="DDG: &addr"];
"1000300" -> "1000498"  [label="DDG: entry->port"];
"1000300" -> "1000498"  [label="DDG: AF_INET"];
"1000300" -> "1000498"  [label="DDG: entry->protocol"];
"1000318" -> "1000317"  [label="AST: "];
"1000318" -> "1000321"  [label="CFG: "];
"1000319" -> "1000318"  [label="AST: "];
"1000320" -> "1000318"  [label="AST: "];
"1000321" -> "1000318"  [label="AST: "];
"1000324" -> "1000318"  [label="CFG: "];
"1000318" -> "1000498"  [label="DDG: user"];
"1000318" -> "1000498"  [label="DDG: entry"];
"1000318" -> "1000317"  [label="DDG: user"];
"1000318" -> "1000317"  [label="DDG: entry"];
"1000317" -> "1000316"  [label="AST: "];
"1000317" -> "1000324"  [label="CFG: "];
"1000324" -> "1000317"  [label="AST: "];
"1000326" -> "1000317"  [label="CFG: "];
"1000330" -> "1000317"  [label="CFG: "];
"1000317" -> "1000498"  [label="DDG: copy_to_user(user, entry, sizeof(*entry))"];
"1000317" -> "1000498"  [label="DDG: copy_to_user(user, entry, sizeof(*entry)) != 0"];
"1000329" -> "1000312"  [label="AST: "];
"1000329" -> "1000330"  [label="CFG: "];
"1000330" -> "1000329"  [label="AST: "];
"1000336" -> "1000329"  [label="CFG: "];
"1000329" -> "1000498"  [label="DDG: ip_vs_service_put(svc)"];
"1000329" -> "1000498"  [label="DDG: svc"];
}
