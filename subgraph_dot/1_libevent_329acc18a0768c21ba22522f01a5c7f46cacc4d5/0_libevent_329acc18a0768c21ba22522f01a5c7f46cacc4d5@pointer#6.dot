digraph "0_libevent_329acc18a0768c21ba22522f01a5c7f46cacc4d5@pointer" {
"1000169" [label="(Call,addr_part = buf)"];
"1000158" [label="(Call,memcpy(buf, ip_as_string+1, len))"];
"1000103" [label="(MethodParameterIn,const char *ip_as_string)"];
"1000129" [label="(Call,strchr(ip_as_string, ']'))"];
"1000115" [label="(Call,strchr(ip_as_string, ':'))"];
"1000146" [label="(Call,len > (int)sizeof(buf)-1)"];
"1000136" [label="(Call,len = (int) ( cp-(ip_as_string + 1) ))"];
"1000138" [label="(Call,(int) ( cp-(ip_as_string + 1) ))"];
"1000140" [label="(Call,cp-(ip_as_string + 1))"];
"1000127" [label="(Call,cp = strchr(ip_as_string, ']'))"];
"1000148" [label="(Call,(int)sizeof(buf)-1)"];
"1000164" [label="(Call,buf[len] = '\0')"];
"1000290" [label="(Call,!addr_part)"];
"1000325" [label="(Call,evutil_inet_pton(AF_INET6, addr_part, &sin6.sin6_addr))"];
"1000323" [label="(Call,1 != evutil_inet_pton(AF_INET6, addr_part, &sin6.sin6_addr))"];
"1000393" [label="(Call,evutil_inet_pton(AF_INET, addr_part, &sin.sin_addr))"];
"1000391" [label="(Call,1 != evutil_inet_pton(AF_INET, addr_part, &sin.sin_addr))"];
"1000168" [label="(Literal,'\0')"];
"1000128" [label="(Identifier,cp)"];
"1000142" [label="(Call,ip_as_string + 1)"];
"1000148" [label="(Call,(int)sizeof(buf)-1)"];
"1000138" [label="(Call,(int) ( cp-(ip_as_string + 1) ))"];
"1000254" [label="(Call,addr_part = ip_as_string)"];
"1000234" [label="(Call,cp-ip_as_string)"];
"1000175" [label="(Identifier,cp)"];
"1000117" [label="(Literal,':')"];
"1000163" [label="(Identifier,len)"];
"1000149" [label="(Call,(int)sizeof(buf))"];
"1000203" [label="(Call,addr_part = ip_as_string)"];
"1000390" [label="(ControlStructure,if (1 != evutil_inet_pton(AF_INET, addr_part, &sin.sin_addr)))"];
"1000402" [label="(Literal,1)"];
"1000325" [label="(Call,evutil_inet_pton(AF_INET6, addr_part, &sin6.sin6_addr))"];
"1000169" [label="(Call,addr_part = buf)"];
"1000294" [label="(Literal,1)"];
"1000296" [label="(Identifier,is_ipv6)"];
"1000394" [label="(Identifier,AF_INET)"];
"1000328" [label="(Call,&sin6.sin6_addr)"];
"1000395" [label="(Identifier,addr_part)"];
"1000327" [label="(Identifier,addr_part)"];
"1000322" [label="(ControlStructure,if (1 != evutil_inet_pton(AF_INET6, addr_part, &sin6.sin6_addr)))"];
"1000432" [label="(MethodReturn,RET)"];
"1000218" [label="(Call,cp - ip_as_string)"];
"1000113" [label="(Call,cp = strchr(ip_as_string, ':'))"];
"1000171" [label="(Identifier,buf)"];
"1000170" [label="(Identifier,addr_part)"];
"1000166" [label="(Identifier,buf)"];
"1000159" [label="(Identifier,buf)"];
"1000323" [label="(Call,1 != evutil_inet_pton(AF_INET6, addr_part, &sin6.sin6_addr))"];
"1000140" [label="(Call,cp-(ip_as_string + 1))"];
"1000145" [label="(ControlStructure,if (len > (int)sizeof(buf)-1))"];
"1000178" [label="(Call,port_part = cp+2)"];
"1000180" [label="(Call,cp+2)"];
"1000240" [label="(Call,cp-ip_as_string)"];
"1000324" [label="(Literal,1)"];
"1000244" [label="(Call,addr_part = buf)"];
"1000334" [label="(Literal,1)"];
"1000131" [label="(Literal,']')"];
"1000153" [label="(Literal,1)"];
"1000290" [label="(Call,!addr_part)"];
"1000160" [label="(Call,ip_as_string+1)"];
"1000116" [label="(Identifier,ip_as_string)"];
"1000164" [label="(Call,buf[len] = '\0')"];
"1000137" [label="(Identifier,len)"];
"1000173" [label="(Call,cp[1] == ':')"];
"1000289" [label="(ControlStructure,if (!addr_part))"];
"1000127" [label="(Call,cp = strchr(ip_as_string, ']'))"];
"1000326" [label="(Identifier,AF_INET6)"];
"1000165" [label="(Call,buf[len])"];
"1000396" [label="(Call,&sin.sin_addr)"];
"1000115" [label="(Call,strchr(ip_as_string, ':'))"];
"1000291" [label="(Identifier,addr_part)"];
"1000146" [label="(Call,len > (int)sizeof(buf)-1)"];
"1000392" [label="(Literal,1)"];
"1000141" [label="(Identifier,cp)"];
"1000231" [label="(Call,memcpy(buf, ip_as_string, cp-ip_as_string))"];
"1000393" [label="(Call,evutil_inet_pton(AF_INET, addr_part, &sin.sin_addr))"];
"1000123" [label="(Block,)"];
"1000158" [label="(Call,memcpy(buf, ip_as_string+1, len))"];
"1000103" [label="(MethodParameterIn,const char *ip_as_string)"];
"1000130" [label="(Identifier,ip_as_string)"];
"1000147" [label="(Identifier,len)"];
"1000129" [label="(Call,strchr(ip_as_string, ']'))"];
"1000126" [label="(Call,!(cp = strchr(ip_as_string, ']')))"];
"1000157" [label="(Literal,1)"];
"1000136" [label="(Call,len = (int) ( cp-(ip_as_string + 1) ))"];
"1000391" [label="(Call,1 != evutil_inet_pton(AF_INET, addr_part, &sin.sin_addr))"];
"1000169" -> "1000123"  [label="AST: "];
"1000169" -> "1000171"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000171" -> "1000169"  [label="AST: "];
"1000175" -> "1000169"  [label="CFG: "];
"1000169" -> "1000432"  [label="DDG: buf"];
"1000169" -> "1000432"  [label="DDG: addr_part"];
"1000158" -> "1000169"  [label="DDG: buf"];
"1000164" -> "1000169"  [label="DDG: buf[len]"];
"1000169" -> "1000290"  [label="DDG: addr_part"];
"1000158" -> "1000123"  [label="AST: "];
"1000158" -> "1000163"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000163" -> "1000158"  [label="AST: "];
"1000166" -> "1000158"  [label="CFG: "];
"1000158" -> "1000432"  [label="DDG: ip_as_string+1"];
"1000158" -> "1000432"  [label="DDG: memcpy(buf, ip_as_string+1, len)"];
"1000158" -> "1000432"  [label="DDG: len"];
"1000103" -> "1000158"  [label="DDG: ip_as_string"];
"1000129" -> "1000158"  [label="DDG: ip_as_string"];
"1000146" -> "1000158"  [label="DDG: len"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000432"  [label="DDG: ip_as_string"];
"1000103" -> "1000115"  [label="DDG: ip_as_string"];
"1000103" -> "1000129"  [label="DDG: ip_as_string"];
"1000103" -> "1000140"  [label="DDG: ip_as_string"];
"1000103" -> "1000142"  [label="DDG: ip_as_string"];
"1000103" -> "1000160"  [label="DDG: ip_as_string"];
"1000103" -> "1000203"  [label="DDG: ip_as_string"];
"1000103" -> "1000218"  [label="DDG: ip_as_string"];
"1000103" -> "1000231"  [label="DDG: ip_as_string"];
"1000103" -> "1000234"  [label="DDG: ip_as_string"];
"1000103" -> "1000240"  [label="DDG: ip_as_string"];
"1000103" -> "1000254"  [label="DDG: ip_as_string"];
"1000129" -> "1000127"  [label="AST: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000129"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000129" -> "1000432"  [label="DDG: ip_as_string"];
"1000129" -> "1000126"  [label="DDG: ip_as_string"];
"1000129" -> "1000126"  [label="DDG: ']'"];
"1000129" -> "1000127"  [label="DDG: ip_as_string"];
"1000129" -> "1000127"  [label="DDG: ']'"];
"1000115" -> "1000129"  [label="DDG: ip_as_string"];
"1000129" -> "1000140"  [label="DDG: ip_as_string"];
"1000129" -> "1000142"  [label="DDG: ip_as_string"];
"1000129" -> "1000160"  [label="DDG: ip_as_string"];
"1000115" -> "1000113"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000115" -> "1000113"  [label="DDG: ip_as_string"];
"1000115" -> "1000113"  [label="DDG: ':'"];
"1000115" -> "1000203"  [label="DDG: ip_as_string"];
"1000115" -> "1000218"  [label="DDG: ip_as_string"];
"1000115" -> "1000254"  [label="DDG: ip_as_string"];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000157" -> "1000146"  [label="CFG: "];
"1000159" -> "1000146"  [label="CFG: "];
"1000146" -> "1000432"  [label="DDG: (int)sizeof(buf)-1"];
"1000146" -> "1000432"  [label="DDG: len > (int)sizeof(buf)-1"];
"1000146" -> "1000432"  [label="DDG: len"];
"1000136" -> "1000146"  [label="DDG: len"];
"1000148" -> "1000146"  [label="DDG: (int)sizeof(buf)"];
"1000148" -> "1000146"  [label="DDG: 1"];
"1000136" -> "1000123"  [label="AST: "];
"1000136" -> "1000138"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000147" -> "1000136"  [label="CFG: "];
"1000136" -> "1000432"  [label="DDG: (int) ( cp-(ip_as_string + 1) )"];
"1000138" -> "1000136"  [label="DDG: cp-(ip_as_string + 1)"];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000138" -> "1000432"  [label="DDG: cp-(ip_as_string + 1)"];
"1000140" -> "1000138"  [label="DDG: cp"];
"1000140" -> "1000138"  [label="DDG: ip_as_string + 1"];
"1000140" -> "1000142"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000142" -> "1000140"  [label="AST: "];
"1000140" -> "1000432"  [label="DDG: ip_as_string + 1"];
"1000140" -> "1000432"  [label="DDG: cp"];
"1000127" -> "1000140"  [label="DDG: cp"];
"1000140" -> "1000173"  [label="DDG: cp"];
"1000140" -> "1000178"  [label="DDG: cp"];
"1000140" -> "1000180"  [label="DDG: cp"];
"1000127" -> "1000126"  [label="AST: "];
"1000128" -> "1000127"  [label="AST: "];
"1000126" -> "1000127"  [label="CFG: "];
"1000127" -> "1000432"  [label="DDG: strchr(ip_as_string, ']')"];
"1000127" -> "1000432"  [label="DDG: cp"];
"1000127" -> "1000126"  [label="DDG: cp"];
"1000148" -> "1000153"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000153" -> "1000148"  [label="AST: "];
"1000148" -> "1000432"  [label="DDG: (int)sizeof(buf)"];
"1000164" -> "1000123"  [label="AST: "];
"1000164" -> "1000168"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000168" -> "1000164"  [label="AST: "];
"1000170" -> "1000164"  [label="CFG: "];
"1000164" -> "1000432"  [label="DDG: buf[len]"];
"1000290" -> "1000289"  [label="AST: "];
"1000290" -> "1000291"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000294" -> "1000290"  [label="CFG: "];
"1000296" -> "1000290"  [label="CFG: "];
"1000290" -> "1000432"  [label="DDG: addr_part"];
"1000290" -> "1000432"  [label="DDG: !addr_part"];
"1000254" -> "1000290"  [label="DDG: addr_part"];
"1000244" -> "1000290"  [label="DDG: addr_part"];
"1000203" -> "1000290"  [label="DDG: addr_part"];
"1000290" -> "1000325"  [label="DDG: addr_part"];
"1000290" -> "1000393"  [label="DDG: addr_part"];
"1000325" -> "1000323"  [label="AST: "];
"1000325" -> "1000328"  [label="CFG: "];
"1000326" -> "1000325"  [label="AST: "];
"1000327" -> "1000325"  [label="AST: "];
"1000328" -> "1000325"  [label="AST: "];
"1000323" -> "1000325"  [label="CFG: "];
"1000325" -> "1000432"  [label="DDG: AF_INET6"];
"1000325" -> "1000432"  [label="DDG: &sin6.sin6_addr"];
"1000325" -> "1000432"  [label="DDG: addr_part"];
"1000325" -> "1000323"  [label="DDG: AF_INET6"];
"1000325" -> "1000323"  [label="DDG: addr_part"];
"1000325" -> "1000323"  [label="DDG: &sin6.sin6_addr"];
"1000323" -> "1000322"  [label="AST: "];
"1000324" -> "1000323"  [label="AST: "];
"1000334" -> "1000323"  [label="CFG: "];
"1000338" -> "1000323"  [label="CFG: "];
"1000323" -> "1000432"  [label="DDG: evutil_inet_pton(AF_INET6, addr_part, &sin6.sin6_addr)"];
"1000323" -> "1000432"  [label="DDG: 1 != evutil_inet_pton(AF_INET6, addr_part, &sin6.sin6_addr)"];
"1000393" -> "1000391"  [label="AST: "];
"1000393" -> "1000396"  [label="CFG: "];
"1000394" -> "1000393"  [label="AST: "];
"1000395" -> "1000393"  [label="AST: "];
"1000396" -> "1000393"  [label="AST: "];
"1000391" -> "1000393"  [label="CFG: "];
"1000393" -> "1000432"  [label="DDG: &sin.sin_addr"];
"1000393" -> "1000432"  [label="DDG: AF_INET"];
"1000393" -> "1000432"  [label="DDG: addr_part"];
"1000393" -> "1000391"  [label="DDG: AF_INET"];
"1000393" -> "1000391"  [label="DDG: addr_part"];
"1000393" -> "1000391"  [label="DDG: &sin.sin_addr"];
"1000391" -> "1000390"  [label="AST: "];
"1000392" -> "1000391"  [label="AST: "];
"1000402" -> "1000391"  [label="CFG: "];
"1000406" -> "1000391"  [label="CFG: "];
"1000391" -> "1000432"  [label="DDG: evutil_inet_pton(AF_INET, addr_part, &sin.sin_addr)"];
"1000391" -> "1000432"  [label="DDG: 1 != evutil_inet_pton(AF_INET, addr_part, &sin.sin_addr)"];
}
