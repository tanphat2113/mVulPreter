digraph "0_libevent_329acc18a0768c21ba22522f01a5c7f46cacc4d5@pointer" {
"1000195" [label="(Call,cp+1)"];
"1000113" [label="(Call,cp = strchr(ip_as_string, ':'))"];
"1000115" [label="(Call,strchr(ip_as_string, ':'))"];
"1000103" [label="(MethodParameterIn,const char *ip_as_string)"];
"1000142" [label="(Call,ip_as_string + 1)"];
"1000195" [label="(Call,cp+1)"];
"1000254" [label="(Call,addr_part = ip_as_string)"];
"1000234" [label="(Call,cp-ip_as_string)"];
"1000117" [label="(Literal,':')"];
"1000203" [label="(Call,addr_part = ip_as_string)"];
"1000196" [label="(Identifier,cp)"];
"1000113" [label="(Call,cp = strchr(ip_as_string, ':'))"];
"1000432" [label="(MethodReturn,RET)"];
"1000218" [label="(Call,cp - ip_as_string)"];
"1000192" [label="(Call,cp && strchr(cp+1, ':'))"];
"1000140" [label="(Call,cp-(ip_as_string + 1))"];
"1000240" [label="(Call,cp-ip_as_string)"];
"1000116" [label="(Identifier,ip_as_string)"];
"1000160" [label="(Call,ip_as_string+1)"];
"1000115" [label="(Call,strchr(ip_as_string, ':'))"];
"1000198" [label="(Literal,':')"];
"1000231" [label="(Call,memcpy(buf, ip_as_string, cp-ip_as_string))"];
"1000121" [label="(Identifier,ip_as_string)"];
"1000114" [label="(Identifier,cp)"];
"1000106" [label="(Block,)"];
"1000194" [label="(Call,strchr(cp+1, ':'))"];
"1000158" [label="(Call,memcpy(buf, ip_as_string+1, len))"];
"1000103" [label="(MethodParameterIn,const char *ip_as_string)"];
"1000129" [label="(Call,strchr(ip_as_string, ']'))"];
"1000197" [label="(Literal,1)"];
"1000195" -> "1000194"  [label="AST: "];
"1000195" -> "1000197"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000197" -> "1000195"  [label="AST: "];
"1000198" -> "1000195"  [label="CFG: "];
"1000113" -> "1000195"  [label="DDG: cp"];
"1000113" -> "1000106"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000121" -> "1000113"  [label="CFG: "];
"1000113" -> "1000432"  [label="DDG: strchr(ip_as_string, ':')"];
"1000115" -> "1000113"  [label="DDG: ip_as_string"];
"1000115" -> "1000113"  [label="DDG: ':'"];
"1000113" -> "1000192"  [label="DDG: cp"];
"1000113" -> "1000194"  [label="DDG: cp"];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000103" -> "1000115"  [label="DDG: ip_as_string"];
"1000115" -> "1000129"  [label="DDG: ip_as_string"];
"1000115" -> "1000203"  [label="DDG: ip_as_string"];
"1000115" -> "1000218"  [label="DDG: ip_as_string"];
"1000115" -> "1000254"  [label="DDG: ip_as_string"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000432"  [label="DDG: ip_as_string"];
"1000103" -> "1000129"  [label="DDG: ip_as_string"];
"1000103" -> "1000140"  [label="DDG: ip_as_string"];
"1000103" -> "1000142"  [label="DDG: ip_as_string"];
"1000103" -> "1000158"  [label="DDG: ip_as_string"];
"1000103" -> "1000160"  [label="DDG: ip_as_string"];
"1000103" -> "1000203"  [label="DDG: ip_as_string"];
"1000103" -> "1000218"  [label="DDG: ip_as_string"];
"1000103" -> "1000231"  [label="DDG: ip_as_string"];
"1000103" -> "1000234"  [label="DDG: ip_as_string"];
"1000103" -> "1000240"  [label="DDG: ip_as_string"];
"1000103" -> "1000254"  [label="DDG: ip_as_string"];
}
