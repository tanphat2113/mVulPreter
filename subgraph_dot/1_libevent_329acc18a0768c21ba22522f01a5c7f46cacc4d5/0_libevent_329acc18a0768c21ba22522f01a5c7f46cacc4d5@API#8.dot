digraph "0_libevent_329acc18a0768c21ba22522f01a5c7f46cacc4d5@API" {
"1000113" [label="(Call,cp = strchr(ip_as_string, ':'))"];
"1000115" [label="(Call,strchr(ip_as_string, ':'))"];
"1000103" [label="(MethodParameterIn,const char *ip_as_string)"];
"1000192" [label="(Call,cp && strchr(cp+1, ':'))"];
"1000218" [label="(Call,cp - ip_as_string)"];
"1000217" [label="(Call,cp - ip_as_string > (int)sizeof(buf)-1)"];
"1000234" [label="(Call,cp-ip_as_string)"];
"1000231" [label="(Call,memcpy(buf, ip_as_string, cp-ip_as_string))"];
"1000240" [label="(Call,cp-ip_as_string)"];
"1000247" [label="(Call,port_part = cp+1)"];
"1000264" [label="(Call,port_part == NULL)"];
"1000275" [label="(Call,atoi(port_part))"];
"1000273" [label="(Call,port = atoi(port_part))"];
"1000279" [label="(Call,port <= 0)"];
"1000278" [label="(Call,port <= 0 || port > 65535)"];
"1000282" [label="(Call,port > 65535)"];
"1000320" [label="(Call,htons(port))"];
"1000316" [label="(Call,sin6.sin6_port = htons(port))"];
"1000388" [label="(Call,htons(port))"];
"1000384" [label="(Call,sin.sin_port = htons(port))"];
"1000249" [label="(Call,cp+1)"];
"1000244" [label="(Call,addr_part = buf)"];
"1000290" [label="(Call,!addr_part)"];
"1000325" [label="(Call,evutil_inet_pton(AF_INET6, addr_part, &sin6.sin6_addr))"];
"1000323" [label="(Call,1 != evutil_inet_pton(AF_INET6, addr_part, &sin6.sin6_addr))"];
"1000393" [label="(Call,evutil_inet_pton(AF_INET, addr_part, &sin.sin_addr))"];
"1000391" [label="(Call,1 != evutil_inet_pton(AF_INET, addr_part, &sin.sin_addr))"];
"1000194" [label="(Call,strchr(cp+1, ':'))"];
"1000195" [label="(Call,cp+1)"];
"1000142" [label="(Call,ip_as_string + 1)"];
"1000195" [label="(Call,cp+1)"];
"1000217" [label="(Call,cp - ip_as_string > (int)sizeof(buf)-1)"];
"1000316" [label="(Call,sin6.sin6_port = htons(port))"];
"1000169" [label="(Call,addr_part = buf)"];
"1000294" [label="(Literal,1)"];
"1000320" [label="(Call,htons(port))"];
"1000328" [label="(Call,&sin6.sin6_addr)"];
"1000395" [label="(Identifier,addr_part)"];
"1000218" [label="(Call,cp - ip_as_string)"];
"1000317" [label="(Call,sin6.sin6_port)"];
"1000284" [label="(Literal,65535)"];
"1000240" [label="(Call,cp-ip_as_string)"];
"1000219" [label="(Identifier,cp)"];
"1000334" [label="(Literal,1)"];
"1000276" [label="(Identifier,port_part)"];
"1000281" [label="(Literal,0)"];
"1000272" [label="(Block,)"];
"1000248" [label="(Identifier,port_part)"];
"1000290" [label="(Call,!addr_part)"];
"1000392" [label="(Literal,1)"];
"1000291" [label="(Identifier,addr_part)"];
"1000384" [label="(Call,sin.sin_port = htons(port))"];
"1000385" [label="(Call,sin.sin_port)"];
"1000114" [label="(Identifier,cp)"];
"1000273" [label="(Call,port = atoi(port_part))"];
"1000191" [label="(ControlStructure,if (cp && strchr(cp+1, ':')))"];
"1000103" [label="(MethodParameterIn,const char *ip_as_string)"];
"1000251" [label="(Literal,1)"];
"1000254" [label="(Call,addr_part = ip_as_string)"];
"1000193" [label="(Identifier,cp)"];
"1000321" [label="(Identifier,port)"];
"1000203" [label="(Call,addr_part = ip_as_string)"];
"1000390" [label="(ControlStructure,if (1 != evutil_inet_pton(AF_INET, addr_part, &sin.sin_addr)))"];
"1000236" [label="(Identifier,ip_as_string)"];
"1000296" [label="(Identifier,is_ipv6)"];
"1000211" [label="(Identifier,cp)"];
"1000113" [label="(Call,cp = strchr(ip_as_string, ':'))"];
"1000432" [label="(MethodReturn,RET)"];
"1000323" [label="(Call,1 != evutil_inet_pton(AF_INET6, addr_part, &sin6.sin6_addr))"];
"1000288" [label="(Literal,1)"];
"1000250" [label="(Identifier,cp)"];
"1000160" [label="(Call,ip_as_string+1)"];
"1000326" [label="(Identifier,AF_INET6)"];
"1000232" [label="(Identifier,buf)"];
"1000238" [label="(Call,buf[cp-ip_as_string])"];
"1000221" [label="(Call,(int)sizeof(buf)-1)"];
"1000121" [label="(Identifier,ip_as_string)"];
"1000393" [label="(Call,evutil_inet_pton(AF_INET, addr_part, &sin.sin_addr))"];
"1000194" [label="(Call,strchr(cp+1, ':'))"];
"1000129" [label="(Call,strchr(ip_as_string, ']'))"];
"1000197" [label="(Literal,1)"];
"1000268" [label="(Call,port = 0)"];
"1000274" [label="(Identifier,port)"];
"1000280" [label="(Identifier,port)"];
"1000234" [label="(Call,cp-ip_as_string)"];
"1000249" [label="(Call,cp+1)"];
"1000402" [label="(Literal,1)"];
"1000325" [label="(Call,evutil_inet_pton(AF_INET6, addr_part, &sin6.sin6_addr))"];
"1000327" [label="(Identifier,addr_part)"];
"1000322" [label="(ControlStructure,if (1 != evutil_inet_pton(AF_INET6, addr_part, &sin6.sin6_addr)))"];
"1000233" [label="(Identifier,ip_as_string)"];
"1000206" [label="(Call,port_part = NULL)"];
"1000237" [label="(Call,buf[cp-ip_as_string] = '\0')"];
"1000277" [label="(ControlStructure,if (port <= 0 || port > 65535))"];
"1000389" [label="(Identifier,port)"];
"1000192" [label="(Call,cp && strchr(cp+1, ':'))"];
"1000140" [label="(Call,cp-(ip_as_string + 1))"];
"1000241" [label="(Identifier,cp)"];
"1000257" [label="(Call,port_part = NULL)"];
"1000265" [label="(Identifier,port_part)"];
"1000235" [label="(Identifier,cp)"];
"1000244" [label="(Call,addr_part = buf)"];
"1000116" [label="(Identifier,ip_as_string)"];
"1000115" [label="(Call,strchr(ip_as_string, ':'))"];
"1000231" [label="(Call,memcpy(buf, ip_as_string, cp-ip_as_string))"];
"1000198" [label="(Literal,':')"];
"1000230" [label="(Literal,1)"];
"1000158" [label="(Call,memcpy(buf, ip_as_string+1, len))"];
"1000297" [label="(Block,)"];
"1000391" [label="(Call,1 != evutil_inet_pton(AF_INET, addr_part, &sin.sin_addr))"];
"1000279" [label="(Call,port <= 0)"];
"1000282" [label="(Call,port > 65535)"];
"1000201" [label="(Identifier,is_ipv6)"];
"1000220" [label="(Identifier,ip_as_string)"];
"1000269" [label="(Identifier,port)"];
"1000246" [label="(Identifier,buf)"];
"1000245" [label="(Identifier,addr_part)"];
"1000117" [label="(Literal,':')"];
"1000275" [label="(Call,atoi(port_part))"];
"1000278" [label="(Call,port <= 0 || port > 65535)"];
"1000365" [label="(Block,)"];
"1000196" [label="(Identifier,cp)"];
"1000216" [label="(ControlStructure,if (cp - ip_as_string > (int)sizeof(buf)-1))"];
"1000394" [label="(Identifier,AF_INET)"];
"1000239" [label="(Identifier,buf)"];
"1000178" [label="(Call,port_part = cp+2)"];
"1000324" [label="(Literal,1)"];
"1000388" [label="(Call,htons(port))"];
"1000242" [label="(Identifier,ip_as_string)"];
"1000289" [label="(ControlStructure,if (!addr_part))"];
"1000264" [label="(Call,port_part == NULL)"];
"1000396" [label="(Call,&sin.sin_addr)"];
"1000212" [label="(Block,)"];
"1000106" [label="(Block,)"];
"1000247" [label="(Call,port_part = cp+1)"];
"1000266" [label="(Identifier,NULL)"];
"1000283" [label="(Identifier,port)"];
"1000263" [label="(ControlStructure,if (port_part == NULL))"];
"1000184" [label="(Call,port_part = NULL)"];
"1000113" -> "1000106"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000121" -> "1000113"  [label="CFG: "];
"1000113" -> "1000432"  [label="DDG: strchr(ip_as_string, ':')"];
"1000115" -> "1000113"  [label="DDG: ip_as_string"];
"1000115" -> "1000113"  [label="DDG: ':'"];
"1000113" -> "1000192"  [label="DDG: cp"];
"1000113" -> "1000194"  [label="DDG: cp"];
"1000113" -> "1000195"  [label="DDG: cp"];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000103" -> "1000115"  [label="DDG: ip_as_string"];
"1000115" -> "1000129"  [label="DDG: ip_as_string"];
"1000115" -> "1000203"  [label="DDG: ip_as_string"];
"1000115" -> "1000218"  [label="DDG: ip_as_string"];
"1000115" -> "1000254"  [label="DDG: ip_as_string"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000432"  [label="DDG: ip_as_string"];
"1000103" -> "1000129"  [label="DDG: ip_as_string"];
"1000103" -> "1000140"  [label="DDG: ip_as_string"];
"1000103" -> "1000142"  [label="DDG: ip_as_string"];
"1000103" -> "1000158"  [label="DDG: ip_as_string"];
"1000103" -> "1000160"  [label="DDG: ip_as_string"];
"1000103" -> "1000203"  [label="DDG: ip_as_string"];
"1000103" -> "1000218"  [label="DDG: ip_as_string"];
"1000103" -> "1000231"  [label="DDG: ip_as_string"];
"1000103" -> "1000234"  [label="DDG: ip_as_string"];
"1000103" -> "1000240"  [label="DDG: ip_as_string"];
"1000103" -> "1000254"  [label="DDG: ip_as_string"];
"1000192" -> "1000191"  [label="AST: "];
"1000192" -> "1000193"  [label="CFG: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000194" -> "1000192"  [label="AST: "];
"1000201" -> "1000192"  [label="CFG: "];
"1000211" -> "1000192"  [label="CFG: "];
"1000192" -> "1000432"  [label="DDG: strchr(cp+1, ':')"];
"1000192" -> "1000432"  [label="DDG: cp"];
"1000192" -> "1000432"  [label="DDG: cp && strchr(cp+1, ':')"];
"1000194" -> "1000192"  [label="DDG: cp+1"];
"1000194" -> "1000192"  [label="DDG: ':'"];
"1000192" -> "1000218"  [label="DDG: cp"];
"1000218" -> "1000217"  [label="AST: "];
"1000218" -> "1000220"  [label="CFG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000220" -> "1000218"  [label="AST: "];
"1000223" -> "1000218"  [label="CFG: "];
"1000218" -> "1000432"  [label="DDG: cp"];
"1000218" -> "1000432"  [label="DDG: ip_as_string"];
"1000218" -> "1000217"  [label="DDG: cp"];
"1000218" -> "1000217"  [label="DDG: ip_as_string"];
"1000218" -> "1000234"  [label="DDG: cp"];
"1000218" -> "1000234"  [label="DDG: ip_as_string"];
"1000217" -> "1000216"  [label="AST: "];
"1000217" -> "1000221"  [label="CFG: "];
"1000221" -> "1000217"  [label="AST: "];
"1000230" -> "1000217"  [label="CFG: "];
"1000232" -> "1000217"  [label="CFG: "];
"1000217" -> "1000432"  [label="DDG: (int)sizeof(buf)-1"];
"1000217" -> "1000432"  [label="DDG: cp - ip_as_string > (int)sizeof(buf)-1"];
"1000217" -> "1000432"  [label="DDG: cp - ip_as_string"];
"1000221" -> "1000217"  [label="DDG: (int)sizeof(buf)"];
"1000221" -> "1000217"  [label="DDG: 1"];
"1000234" -> "1000231"  [label="AST: "];
"1000234" -> "1000236"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000236" -> "1000234"  [label="AST: "];
"1000231" -> "1000234"  [label="CFG: "];
"1000234" -> "1000231"  [label="DDG: ip_as_string"];
"1000234" -> "1000231"  [label="DDG: cp"];
"1000234" -> "1000240"  [label="DDG: cp"];
"1000231" -> "1000212"  [label="AST: "];
"1000232" -> "1000231"  [label="AST: "];
"1000233" -> "1000231"  [label="AST: "];
"1000239" -> "1000231"  [label="CFG: "];
"1000231" -> "1000432"  [label="DDG: memcpy(buf, ip_as_string, cp-ip_as_string)"];
"1000231" -> "1000240"  [label="DDG: ip_as_string"];
"1000231" -> "1000244"  [label="DDG: buf"];
"1000240" -> "1000238"  [label="AST: "];
"1000240" -> "1000242"  [label="CFG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000242" -> "1000240"  [label="AST: "];
"1000238" -> "1000240"  [label="CFG: "];
"1000240" -> "1000432"  [label="DDG: ip_as_string"];
"1000240" -> "1000247"  [label="DDG: cp"];
"1000240" -> "1000249"  [label="DDG: cp"];
"1000247" -> "1000212"  [label="AST: "];
"1000247" -> "1000249"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000249" -> "1000247"  [label="AST: "];
"1000265" -> "1000247"  [label="CFG: "];
"1000247" -> "1000432"  [label="DDG: cp+1"];
"1000247" -> "1000264"  [label="DDG: port_part"];
"1000264" -> "1000263"  [label="AST: "];
"1000264" -> "1000266"  [label="CFG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000266" -> "1000264"  [label="AST: "];
"1000269" -> "1000264"  [label="CFG: "];
"1000274" -> "1000264"  [label="CFG: "];
"1000264" -> "1000432"  [label="DDG: port_part"];
"1000264" -> "1000432"  [label="DDG: port_part == NULL"];
"1000264" -> "1000432"  [label="DDG: NULL"];
"1000184" -> "1000264"  [label="DDG: port_part"];
"1000178" -> "1000264"  [label="DDG: port_part"];
"1000257" -> "1000264"  [label="DDG: port_part"];
"1000206" -> "1000264"  [label="DDG: port_part"];
"1000264" -> "1000275"  [label="DDG: port_part"];
"1000275" -> "1000273"  [label="AST: "];
"1000275" -> "1000276"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000273" -> "1000275"  [label="CFG: "];
"1000275" -> "1000432"  [label="DDG: port_part"];
"1000275" -> "1000273"  [label="DDG: port_part"];
"1000273" -> "1000272"  [label="AST: "];
"1000274" -> "1000273"  [label="AST: "];
"1000280" -> "1000273"  [label="CFG: "];
"1000273" -> "1000432"  [label="DDG: atoi(port_part)"];
"1000273" -> "1000279"  [label="DDG: port"];
"1000279" -> "1000278"  [label="AST: "];
"1000279" -> "1000281"  [label="CFG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000281" -> "1000279"  [label="AST: "];
"1000283" -> "1000279"  [label="CFG: "];
"1000278" -> "1000279"  [label="CFG: "];
"1000279" -> "1000432"  [label="DDG: port"];
"1000279" -> "1000278"  [label="DDG: port"];
"1000279" -> "1000278"  [label="DDG: 0"];
"1000279" -> "1000282"  [label="DDG: port"];
"1000279" -> "1000320"  [label="DDG: port"];
"1000279" -> "1000388"  [label="DDG: port"];
"1000278" -> "1000277"  [label="AST: "];
"1000278" -> "1000282"  [label="CFG: "];
"1000282" -> "1000278"  [label="AST: "];
"1000288" -> "1000278"  [label="CFG: "];
"1000291" -> "1000278"  [label="CFG: "];
"1000278" -> "1000432"  [label="DDG: port > 65535"];
"1000278" -> "1000432"  [label="DDG: port <= 0 || port > 65535"];
"1000278" -> "1000432"  [label="DDG: port <= 0"];
"1000282" -> "1000278"  [label="DDG: port"];
"1000282" -> "1000278"  [label="DDG: 65535"];
"1000282" -> "1000284"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000284" -> "1000282"  [label="AST: "];
"1000282" -> "1000432"  [label="DDG: port"];
"1000282" -> "1000320"  [label="DDG: port"];
"1000282" -> "1000388"  [label="DDG: port"];
"1000320" -> "1000316"  [label="AST: "];
"1000320" -> "1000321"  [label="CFG: "];
"1000321" -> "1000320"  [label="AST: "];
"1000316" -> "1000320"  [label="CFG: "];
"1000320" -> "1000432"  [label="DDG: port"];
"1000320" -> "1000316"  [label="DDG: port"];
"1000268" -> "1000320"  [label="DDG: port"];
"1000316" -> "1000297"  [label="AST: "];
"1000317" -> "1000316"  [label="AST: "];
"1000324" -> "1000316"  [label="CFG: "];
"1000316" -> "1000432"  [label="DDG: htons(port)"];
"1000316" -> "1000432"  [label="DDG: sin6.sin6_port"];
"1000388" -> "1000384"  [label="AST: "];
"1000388" -> "1000389"  [label="CFG: "];
"1000389" -> "1000388"  [label="AST: "];
"1000384" -> "1000388"  [label="CFG: "];
"1000388" -> "1000432"  [label="DDG: port"];
"1000388" -> "1000384"  [label="DDG: port"];
"1000268" -> "1000388"  [label="DDG: port"];
"1000384" -> "1000365"  [label="AST: "];
"1000385" -> "1000384"  [label="AST: "];
"1000392" -> "1000384"  [label="CFG: "];
"1000384" -> "1000432"  [label="DDG: htons(port)"];
"1000384" -> "1000432"  [label="DDG: sin.sin_port"];
"1000249" -> "1000251"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000251" -> "1000249"  [label="AST: "];
"1000249" -> "1000432"  [label="DDG: cp"];
"1000244" -> "1000212"  [label="AST: "];
"1000244" -> "1000246"  [label="CFG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000246" -> "1000244"  [label="AST: "];
"1000248" -> "1000244"  [label="CFG: "];
"1000244" -> "1000432"  [label="DDG: addr_part"];
"1000244" -> "1000432"  [label="DDG: buf"];
"1000237" -> "1000244"  [label="DDG: buf[cp-ip_as_string]"];
"1000244" -> "1000290"  [label="DDG: addr_part"];
"1000290" -> "1000289"  [label="AST: "];
"1000290" -> "1000291"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000294" -> "1000290"  [label="CFG: "];
"1000296" -> "1000290"  [label="CFG: "];
"1000290" -> "1000432"  [label="DDG: addr_part"];
"1000290" -> "1000432"  [label="DDG: !addr_part"];
"1000254" -> "1000290"  [label="DDG: addr_part"];
"1000169" -> "1000290"  [label="DDG: addr_part"];
"1000203" -> "1000290"  [label="DDG: addr_part"];
"1000290" -> "1000325"  [label="DDG: addr_part"];
"1000290" -> "1000393"  [label="DDG: addr_part"];
"1000325" -> "1000323"  [label="AST: "];
"1000325" -> "1000328"  [label="CFG: "];
"1000326" -> "1000325"  [label="AST: "];
"1000327" -> "1000325"  [label="AST: "];
"1000328" -> "1000325"  [label="AST: "];
"1000323" -> "1000325"  [label="CFG: "];
"1000325" -> "1000432"  [label="DDG: AF_INET6"];
"1000325" -> "1000432"  [label="DDG: &sin6.sin6_addr"];
"1000325" -> "1000432"  [label="DDG: addr_part"];
"1000325" -> "1000323"  [label="DDG: AF_INET6"];
"1000325" -> "1000323"  [label="DDG: addr_part"];
"1000325" -> "1000323"  [label="DDG: &sin6.sin6_addr"];
"1000323" -> "1000322"  [label="AST: "];
"1000324" -> "1000323"  [label="AST: "];
"1000334" -> "1000323"  [label="CFG: "];
"1000338" -> "1000323"  [label="CFG: "];
"1000323" -> "1000432"  [label="DDG: evutil_inet_pton(AF_INET6, addr_part, &sin6.sin6_addr)"];
"1000323" -> "1000432"  [label="DDG: 1 != evutil_inet_pton(AF_INET6, addr_part, &sin6.sin6_addr)"];
"1000393" -> "1000391"  [label="AST: "];
"1000393" -> "1000396"  [label="CFG: "];
"1000394" -> "1000393"  [label="AST: "];
"1000395" -> "1000393"  [label="AST: "];
"1000396" -> "1000393"  [label="AST: "];
"1000391" -> "1000393"  [label="CFG: "];
"1000393" -> "1000432"  [label="DDG: &sin.sin_addr"];
"1000393" -> "1000432"  [label="DDG: AF_INET"];
"1000393" -> "1000432"  [label="DDG: addr_part"];
"1000393" -> "1000391"  [label="DDG: AF_INET"];
"1000393" -> "1000391"  [label="DDG: addr_part"];
"1000393" -> "1000391"  [label="DDG: &sin.sin_addr"];
"1000391" -> "1000390"  [label="AST: "];
"1000392" -> "1000391"  [label="AST: "];
"1000402" -> "1000391"  [label="CFG: "];
"1000406" -> "1000391"  [label="CFG: "];
"1000391" -> "1000432"  [label="DDG: evutil_inet_pton(AF_INET, addr_part, &sin.sin_addr)"];
"1000391" -> "1000432"  [label="DDG: 1 != evutil_inet_pton(AF_INET, addr_part, &sin.sin_addr)"];
"1000194" -> "1000198"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000198" -> "1000194"  [label="AST: "];
"1000194" -> "1000432"  [label="DDG: cp+1"];
"1000195" -> "1000197"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000197" -> "1000195"  [label="AST: "];
"1000198" -> "1000195"  [label="CFG: "];
}
