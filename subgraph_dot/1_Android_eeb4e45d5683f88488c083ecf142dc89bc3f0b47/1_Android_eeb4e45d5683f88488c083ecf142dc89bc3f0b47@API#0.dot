digraph "1_Android_eeb4e45d5683f88488c083ecf142dc89bc3f0b47@API" {
"1000856" [label="(Call,free(work))"];
"1000714" [label="(Call,work[i+1] & 0xffff)"];
"1000688" [label="(Call,work[i+1]>>16)"];
"1000656" [label="(Call,work[i+1]&0x80000000UL)"];
"1000747" [label="(Call,work[i+1]*2)"];
"1000210" [label="(Call,_make_words(lengthlist,s->entries,work,quantvals,s,opb,maptype))"];
"1000114" [label="(Call,!lengthlist)"];
"1000106" [label="(MethodParameterIn,char *lengthlist)"];
"1000195" [label="(Call,s->entries*2)"];
"1000205" [label="(Call,!work)"];
"1000191" [label="(Call,work=calloc((s->entries*2+1),sizeof(*work)))"];
"1000193" [label="(Call,calloc((s->entries*2+1),sizeof(*work)))"];
"1000107" [label="(MethodParameterIn,long quantvals)"];
"1000105" [label="(MethodParameterIn,codebook *s)"];
"1000108" [label="(MethodParameterIn,oggpack_buffer *opb)"];
"1000109" [label="(MethodParameterIn,int maptype)"];
"1000813" [label="(Call,work[i+1] & 0xffff)"];
"1000798" [label="(Call,work[i+1]>>16)"];
"1000768" [label="(Call,work[i+1]&0x80000000UL)"];
"1000844" [label="(Call,work[i+1]*2)"];
"1000512" [label="(Call,work[i+1]*2)"];
"1000421" [label="(Call,work[i+1]&0x80000000UL)"];
"1000578" [label="(Call,work[i+1] & 0xff)"];
"1000563" [label="(Call,work[i+1]>>8)"];
"1000533" [label="(Call,work[i+1]&0x80000000UL)"];
"1000609" [label="(Call,work[i+1]*2)"];
"1000479" [label="(Call,work[i+1] & 0xff)"];
"1000453" [label="(Call,work[i+1]>>8)"];
"1000616" [label="(Call,work[i]=top)"];
"1000429" [label="(Call,top-=4)"];
"1000372" [label="(Call,top=s->used_entries*3-2)"];
"1000374" [label="(Call,s->used_entries*3-2)"];
"1000375" [label="(Call,s->used_entries*3)"];
"1000262" [label="(Call,s->used_entries*(s->dec_leafw+1))"];
"1000222" [label="(Call,s->used_entries > INT_MAX/(s->dec_leafw+1))"];
"1000167" [label="(Call,s->used_entries > INT_MAX/2)"];
"1000171" [label="(Call,INT_MAX/2)"];
"1000175" [label="(Call,s->used_entries*2)"];
"1000226" [label="(Call,INT_MAX/(s->dec_leafw+1))"];
"1000181" [label="(Call,INT_MAX/((long) sizeof(*work)))"];
"1000240" [label="(Call,s->used_entries * (s->dec_leafw+1))"];
"1000587" [label="(Call,top-=2)"];
"1000488" [label="(Call,top-=3)"];
"1000541" [label="(Call,top-=3)"];
"1000851" [label="(Call,work[i]=top)"];
"1000776" [label="(Call,top-=3)"];
"1000822" [label="(Call,top-=2)"];
"1000664" [label="(Call,top-=4)"];
"1000723" [label="(Call,top-=3)"];
"1000357" [label="(Call,((work[i] & 0x80000000UL) >> 16) | work[i])"];
"1000358" [label="(Call,(work[i] & 0x80000000UL) >> 16)"];
"1000359" [label="(Call,work[i] & 0x80000000UL)"];
"1000319" [label="(Call,((work[i] & 0x80000000UL) >> 24) | work[i])"];
"1000320" [label="(Call,(work[i] & 0x80000000UL) >> 24)"];
"1000321" [label="(Call,work[i] & 0x80000000UL)"];
"1000224" [label="(Identifier,s)"];
"1000204" [label="(ControlStructure,if (!work))"];
"1000227" [label="(Identifier,INT_MAX)"];
"1000465" [label="(Call,top+2)"];
"1000400" [label="(Call,s->used_entries*2)"];
"1000177" [label="(Identifier,s)"];
"1000748" [label="(Call,work[i+1])"];
"1000438" [label="(Call,work[i]>>8)"];
"1000694" [label="(Literal,16)"];
"1000241" [label="(Call,s->used_entries)"];
"1000226" [label="(Call,INT_MAX/(s->dec_leafw+1))"];
"1000827" [label="(Identifier,out)"];
"1000359" [label="(Call,work[i] & 0x80000000UL)"];
"1000645" [label="(Identifier,i)"];
"1000544" [label="(Call,out[top]=work[work[i]*2])"];
"1000420" [label="(ControlStructure,if(work[i+1]&0x80000000UL))"];
"1000745" [label="(Call,work[work[i+1]*2])"];
"1000507" [label="(Call,top+1)"];
"1000722" [label="(Block,)"];
"1000810" [label="(Call,top+2)"];
"1000768" [label="(Call,work[i+1]&0x80000000UL)"];
"1000760" [label="(Call,work[i] & 0xffff)"];
"1000166" [label="(Call,s->used_entries > INT_MAX/2 ||\n      s->used_entries*2 > INT_MAX/((long) sizeof(*work)) - 1)"];
"1000663" [label="(Block,)"];
"1000757" [label="(Call,top+2)"];
"1000357" [label="(Call,((work[i] & 0x80000000UL) >> 16) | work[i])"];
"1000604" [label="(Call,top+1)"];
"1000250" [label="(Identifier,INT_MAX)"];
"1000804" [label="(Literal,16)"];
"1000183" [label="(Call,(long) sizeof(*work))"];
"1000609" [label="(Call,work[i+1]*2)"];
"1000689" [label="(Call,work[i+1])"];
"1000510" [label="(Call,work[work[i+1]*2])"];
"1000615" [label="(Literal,2)"];
"1000805" [label="(Literal,0x7fff)"];
"1000364" [label="(Literal,16)"];
"1000739" [label="(Call,out[top+1]=work[work[i+1]*2])"];
"1000201" [label="(Call,sizeof(*work))"];
"1000428" [label="(Block,)"];
"1000375" [label="(Call,s->used_entries*3)"];
"1000233" [label="(ControlStructure,goto error_out;)"];
"1000301" [label="(Call,s->used_entries*2)"];
"1000747" [label="(Call,work[i+1]*2)"];
"1000473" [label="(Call,out[top+3]=work[i+1] & 0xff)"];
"1000175" [label="(Call,s->used_entries*2)"];
"1000497" [label="(Call,work[i]>>8)"];
"1000180" [label="(Call,INT_MAX/((long) sizeof(*work)) - 1)"];
"1000109" [label="(MethodParameterIn,int maptype)"];
"1000325" [label="(Literal,0x80000000UL)"];
"1000434" [label="(Identifier,out)"];
"1000836" [label="(Call,out[top+1]=work[work[i+1]*2])"];
"1000824" [label="(Literal,2)"];
"1000664" [label="(Call,top-=4)"];
"1000172" [label="(Identifier,INT_MAX)"];
"1000188" [label="(Literal,1)"];
"1000683" [label="(Call,top+1)"];
"1000179" [label="(Literal,2)"];
"1000355" [label="(Call,(ogg_uint16_t)\n\t    (((work[i] & 0x80000000UL) >> 16) | work[i]))"];
"1000181" [label="(Call,INT_MAX/((long) sizeof(*work)))"];
"1000222" [label="(Call,s->used_entries > INT_MAX/(s->dec_leafw+1))"];
"1000322" [label="(Call,work[i])"];
"1000339" [label="(Call,s->used_entries*2)"];
"1000199" [label="(Literal,2)"];
"1000819" [label="(Literal,0xffff)"];
"1000662" [label="(Literal,0x80000000UL)"];
"1000813" [label="(Call,work[i+1] & 0xffff)"];
"1000460" [label="(Literal,0x7f)"];
"1000700" [label="(Call,top+2)"];
"1000209" [label="(ControlStructure,if(_make_words(lengthlist,s->entries,work,quantvals,s,opb,maptype)))"];
"1000799" [label="(Call,work[i+1])"];
"1000570" [label="(Literal,0x7f)"];
"1000173" [label="(Literal,2)"];
"1000596" [label="(Call,work[i]*2)"];
"1000732" [label="(Call,work[i]>>16)"];
"1000857" [label="(Identifier,work)"];
"1000194" [label="(Call,s->entries*2+1)"];
"1000649" [label="(Call,work[i]&0x80000000UL)"];
"1000564" [label="(Call,work[i+1])"];
"1000541" [label="(Call,top-=3)"];
"1000669" [label="(Identifier,out)"];
"1000769" [label="(Call,work[i+1])"];
"1000366" [label="(Identifier,work)"];
"1000592" [label="(Identifier,out)"];
"1000168" [label="(Call,s->used_entries)"];
"1000542" [label="(Identifier,top)"];
"1000480" [label="(Call,work[i+1])"];
"1000850" [label="(Literal,2)"];
"1000859" [label="(Literal,0)"];
"1000115" [label="(Identifier,lengthlist)"];
"1000513" [label="(Call,work[i+1])"];
"1000212" [label="(Call,s->entries)"];
"1000429" [label="(Call,top-=4)"];
"1000191" [label="(Call,work=calloc((s->entries*2+1),sizeof(*work)))"];
"1000261" [label="(Call,s->used_entries*(s->dec_leafw+1)-2)"];
"1000105" [label="(MethodParameterIn,codebook *s)"];
"1000217" [label="(Identifier,s)"];
"1000485" [label="(Literal,0xff)"];
"1000327" [label="(Call,work[i])"];
"1000550" [label="(Call,work[i]*2)"];
"1000410" [label="(Identifier,i)"];
"1000588" [label="(Identifier,top)"];
"1000715" [label="(Call,work[i+1])"];
"1000117" [label="(Literal,1)"];
"1000376" [label="(Call,s->used_entries)"];
"1000107" [label="(MethodParameterIn,long quantvals)"];
"1000384" [label="(Identifier,s)"];
"1000821" [label="(Block,)"];
"1000579" [label="(Call,work[i+1])"];
"1000831" [label="(Call,work[i]*2)"];
"1000326" [label="(Literal,24)"];
"1000774" [label="(Literal,0x80000000UL)"];
"1000742" [label="(Call,top+1)"];
"1000228" [label="(Call,s->dec_leafw+1)"];
"1000635" [label="(Call,s->used_entries*2)"];
"1000656" [label="(Call,work[i+1]&0x80000000UL)"];
"1000412" [label="(Block,)"];
"1000543" [label="(Literal,3)"];
"1000448" [label="(Call,top+1)"];
"1000216" [label="(Identifier,quantvals)"];
"1000779" [label="(Call,out[top]=work[work[i]*2])"];
"1000427" [label="(Literal,0x80000000UL)"];
"1000586" [label="(Block,)"];
"1000865" [label="(MethodReturn,static int)"];
"1000540" [label="(Block,)"];
"1000655" [label="(ControlStructure,if(work[i+1]&0x80000000UL))"];
"1000459" [label="(Literal,8)"];
"1000379" [label="(Literal,3)"];
"1000263" [label="(Call,s->used_entries)"];
"1000493" [label="(Identifier,out)"];
"1000532" [label="(ControlStructure,if(work[i+1]&0x80000000UL))"];
"1000452" [label="(Call,work[i+1]>>8 & 0x7f)"];
"1000114" [label="(Call,!lengthlist)"];
"1000488" [label="(Call,top-=3)"];
"1000476" [label="(Call,top+3)"];
"1000856" [label="(Call,free(work))"];
"1000777" [label="(Identifier,top)"];
"1000823" [label="(Identifier,top)"];
"1000200" [label="(Literal,1)"];
"1000525" [label="(Call,work[i] & 0xff)"];
"1000558" [label="(Call,top+1)"];
"1000195" [label="(Call,s->entries*2)"];
"1000711" [label="(Call,top+3)"];
"1000728" [label="(Identifier,out)"];
"1000569" [label="(Literal,8)"];
"1000380" [label="(Literal,2)"];
"1000534" [label="(Call,work[i+1])"];
"1000695" [label="(Literal,0x7fff)"];
"1000647" [label="(Block,)"];
"1000110" [label="(Block,)"];
"1000489" [label="(Identifier,top)"];
"1000211" [label="(Identifier,lengthlist)"];
"1000266" [label="(Call,s->dec_leafw+1)"];
"1000814" [label="(Call,work[i+1])"];
"1000844" [label="(Call,work[i+1]*2)"];
"1000240" [label="(Call,s->used_entries * (s->dec_leafw+1))"];
"1000108" [label="(MethodParameterIn,oggpack_buffer *opb)"];
"1000620" [label="(Identifier,top)"];
"1000687" [label="(Call,work[i+1]>>16 & 0x7fff)"];
"1000587" [label="(Call,top-=2)"];
"1000468" [label="(Call,work[i] & 0xff)"];
"1000374" [label="(Call,s->used_entries*3-2)"];
"1000666" [label="(Literal,4)"];
"1000244" [label="(Call,s->dec_leafw+1)"];
"1000363" [label="(Literal,0x80000000UL)"];
"1000176" [label="(Call,s->used_entries)"];
"1000431" [label="(Literal,4)"];
"1000546" [label="(Identifier,out)"];
"1000121" [label="(Identifier,s)"];
"1000490" [label="(Literal,3)"];
"1000522" [label="(Call,top+2)"];
"1000518" [label="(Literal,2)"];
"1000196" [label="(Call,s->entries)"];
"1000607" [label="(Call,work[work[i+1]*2])"];
"1000479" [label="(Call,work[i+1] & 0xff)"];
"1000149" [label="(Call,_make_words(lengthlist,s->entries,\n\t\t   s->dec_table,quantvals,s,opb,maptype))"];
"1000822" [label="(Call,top-=2)"];
"1000271" [label="(Literal,2)"];
"1000539" [label="(Literal,0x80000000UL)"];
"1000793" [label="(Call,top+1)"];
"1000223" [label="(Call,s->used_entries)"];
"1000665" [label="(Identifier,top)"];
"1000617" [label="(Call,work[i])"];
"1000365" [label="(Call,work[i])"];
"1000767" [label="(ControlStructure,if(work[i+1]&0x80000000UL))"];
"1000572" [label="(Call,out[top+2]=work[i+1] & 0xff)"];
"1000725" [label="(Literal,3)"];
"1000563" [label="(Call,work[i+1]>>8)"];
"1000842" [label="(Call,work[work[i+1]*2])"];
"1000193" [label="(Call,calloc((s->entries*2+1),sizeof(*work)))"];
"1000562" [label="(Call,work[i+1]>>8 & 0x7f)"];
"1000590" [label="(Call,out[top]=work[work[i]*2])"];
"1000798" [label="(Call,work[i+1]>>16)"];
"1000512" [label="(Call,work[i+1]*2)"];
"1000262" [label="(Call,s->used_entries*(s->dec_leafw+1))"];
"1000414" [label="(Call,work[i]&0x80000000UL)"];
"1000320" [label="(Call,(work[i] & 0x80000000UL) >> 24)"];
"1000753" [label="(Literal,2)"];
"1000610" [label="(Call,work[i+1])"];
"1000192" [label="(Identifier,work)"];
"1000239" [label="(Call,s->used_entries * (s->dec_leafw+1) > INT_MAX/s->dec_nodeb)"];
"1000575" [label="(Call,top+2)"];
"1000321" [label="(Call,work[i] & 0x80000000UL)"];
"1000703" [label="(Call,work[i] & 0xffff)"];
"1000372" [label="(Call,top=s->used_entries*3-2)"];
"1000220" [label="(ControlStructure,goto error_out;)"];
"1000589" [label="(Literal,2)"];
"1000584" [label="(Literal,0xff)"];
"1000454" [label="(Call,work[i+1])"];
"1000218" [label="(Identifier,opb)"];
"1000210" [label="(Call,_make_words(lengthlist,s->entries,work,quantvals,s,opb,maptype))"];
"1000724" [label="(Identifier,top)"];
"1000861" [label="(Call,free(work))"];
"1000714" [label="(Call,work[i+1] & 0xffff)"];
"1000807" [label="(Call,out[top+2]=work[i+1] & 0xffff)"];
"1000708" [label="(Call,out[top+3]=work[i+1] & 0xffff)"];
"1000785" [label="(Call,work[i]*2)"];
"1000825" [label="(Call,out[top]=work[work[i]*2])"];
"1000851" [label="(Call,work[i]=top)"];
"1000723" [label="(Call,top-=3)"];
"1000578" [label="(Call,work[i+1] & 0xff)"];
"1000174" [label="(Call,s->used_entries*2 > INT_MAX/((long) sizeof(*work)) - 1)"];
"1000182" [label="(Identifier,INT_MAX)"];
"1000776" [label="(Call,top-=3)"];
"1000453" [label="(Call,work[i+1]>>8)"];
"1000219" [label="(Identifier,maptype)"];
"1000852" [label="(Call,work[i])"];
"1000839" [label="(Call,top+1)"];
"1000171" [label="(Call,INT_MAX/2)"];
"1000205" [label="(Call,!work)"];
"1000601" [label="(Call,out[top+1]=work[work[i+1]*2])"];
"1000328" [label="(Identifier,work)"];
"1000249" [label="(Call,INT_MAX/s->dec_nodeb)"];
"1000487" [label="(Block,)"];
"1000781" [label="(Identifier,out)"];
"1000370" [label="(Block,)"];
"1000845" [label="(Call,work[i+1])"];
"1000775" [label="(Block,)"];
"1000106" [label="(MethodParameterIn,char *lengthlist)"];
"1000616" [label="(Call,work[i]=top)"];
"1000358" [label="(Call,(work[i] & 0x80000000UL) >> 16)"];
"1000221" [label="(ControlStructure,if (s->used_entries > INT_MAX/(s->dec_leafw+1)))"];
"1000373" [label="(Identifier,top)"];
"1000215" [label="(Identifier,work)"];
"1000237" [label="(Identifier,s)"];
"1000206" [label="(Identifier,work)"];
"1000319" [label="(Call,((work[i] & 0x80000000UL) >> 24) | work[i])"];
"1000855" [label="(Identifier,top)"];
"1000113" [label="(ControlStructure,if (!lengthlist))"];
"1000430" [label="(Identifier,top)"];
"1000504" [label="(Call,out[top+1]=work[work[i+1]*2])"];
"1000421" [label="(Call,work[i+1]&0x80000000UL)"];
"1000720" [label="(Literal,0xffff)"];
"1000360" [label="(Call,work[i])"];
"1000422" [label="(Call,work[i+1])"];
"1000673" [label="(Call,work[i]>>16)"];
"1000208" [label="(Literal,1)"];
"1000317" [label="(Call,(unsigned char)\n\t    (((work[i] & 0x80000000UL) >> 24) | work[i]))"];
"1000688" [label="(Call,work[i+1]>>16)"];
"1000167" [label="(Call,s->used_entries > INT_MAX/2)"];
"1000657" [label="(Call,work[i+1])"];
"1000778" [label="(Literal,3)"];
"1000797" [label="(Call,work[i+1]>>16 & 0x7fff)"];
"1000533" [label="(Call,work[i+1]&0x80000000UL)"];
"1000856" -> "1000110"  [label="AST: "];
"1000856" -> "1000857"  [label="CFG: "];
"1000857" -> "1000856"  [label="AST: "];
"1000859" -> "1000856"  [label="CFG: "];
"1000856" -> "1000865"  [label="DDG: work"];
"1000714" -> "1000856"  [label="DDG: work[i+1]"];
"1000512" -> "1000856"  [label="DDG: work[i+1]"];
"1000616" -> "1000856"  [label="DDG: work[i]"];
"1000851" -> "1000856"  [label="DDG: work[i]"];
"1000609" -> "1000856"  [label="DDG: work[i+1]"];
"1000813" -> "1000856"  [label="DDG: work[i+1]"];
"1000479" -> "1000856"  [label="DDG: work[i+1]"];
"1000210" -> "1000856"  [label="DDG: work"];
"1000844" -> "1000856"  [label="DDG: work[i+1]"];
"1000578" -> "1000856"  [label="DDG: work[i+1]"];
"1000357" -> "1000856"  [label="DDG: work[i]"];
"1000747" -> "1000856"  [label="DDG: work[i+1]"];
"1000319" -> "1000856"  [label="DDG: work[i]"];
"1000714" -> "1000708"  [label="AST: "];
"1000714" -> "1000720"  [label="CFG: "];
"1000715" -> "1000714"  [label="AST: "];
"1000720" -> "1000714"  [label="AST: "];
"1000708" -> "1000714"  [label="CFG: "];
"1000714" -> "1000865"  [label="DDG: work[i+1]"];
"1000714" -> "1000656"  [label="DDG: work[i+1]"];
"1000714" -> "1000708"  [label="DDG: work[i+1]"];
"1000714" -> "1000708"  [label="DDG: 0xffff"];
"1000688" -> "1000714"  [label="DDG: work[i+1]"];
"1000210" -> "1000714"  [label="DDG: work"];
"1000714" -> "1000768"  [label="DDG: work[i+1]"];
"1000688" -> "1000687"  [label="AST: "];
"1000688" -> "1000694"  [label="CFG: "];
"1000689" -> "1000688"  [label="AST: "];
"1000694" -> "1000688"  [label="AST: "];
"1000695" -> "1000688"  [label="CFG: "];
"1000688" -> "1000687"  [label="DDG: work[i+1]"];
"1000688" -> "1000687"  [label="DDG: 16"];
"1000656" -> "1000688"  [label="DDG: work[i+1]"];
"1000210" -> "1000688"  [label="DDG: work"];
"1000656" -> "1000655"  [label="AST: "];
"1000656" -> "1000662"  [label="CFG: "];
"1000657" -> "1000656"  [label="AST: "];
"1000662" -> "1000656"  [label="AST: "];
"1000665" -> "1000656"  [label="CFG: "];
"1000724" -> "1000656"  [label="CFG: "];
"1000656" -> "1000865"  [label="DDG: work[i+1]&0x80000000UL"];
"1000747" -> "1000656"  [label="DDG: work[i+1]"];
"1000813" -> "1000656"  [label="DDG: work[i+1]"];
"1000210" -> "1000656"  [label="DDG: work"];
"1000844" -> "1000656"  [label="DDG: work[i+1]"];
"1000656" -> "1000747"  [label="DDG: work[i+1]"];
"1000747" -> "1000745"  [label="AST: "];
"1000747" -> "1000753"  [label="CFG: "];
"1000748" -> "1000747"  [label="AST: "];
"1000753" -> "1000747"  [label="AST: "];
"1000745" -> "1000747"  [label="CFG: "];
"1000747" -> "1000865"  [label="DDG: work[i+1]"];
"1000210" -> "1000747"  [label="DDG: work"];
"1000747" -> "1000768"  [label="DDG: work[i+1]"];
"1000210" -> "1000209"  [label="AST: "];
"1000210" -> "1000219"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="AST: "];
"1000215" -> "1000210"  [label="AST: "];
"1000216" -> "1000210"  [label="AST: "];
"1000217" -> "1000210"  [label="AST: "];
"1000218" -> "1000210"  [label="AST: "];
"1000219" -> "1000210"  [label="AST: "];
"1000220" -> "1000210"  [label="CFG: "];
"1000224" -> "1000210"  [label="CFG: "];
"1000210" -> "1000865"  [label="DDG: _make_words(lengthlist,s->entries,work,quantvals,s,opb,maptype)"];
"1000210" -> "1000865"  [label="DDG: quantvals"];
"1000210" -> "1000865"  [label="DDG: maptype"];
"1000210" -> "1000865"  [label="DDG: s"];
"1000210" -> "1000865"  [label="DDG: opb"];
"1000210" -> "1000865"  [label="DDG: s->entries"];
"1000210" -> "1000865"  [label="DDG: lengthlist"];
"1000114" -> "1000210"  [label="DDG: lengthlist"];
"1000106" -> "1000210"  [label="DDG: lengthlist"];
"1000195" -> "1000210"  [label="DDG: s->entries"];
"1000205" -> "1000210"  [label="DDG: work"];
"1000107" -> "1000210"  [label="DDG: quantvals"];
"1000105" -> "1000210"  [label="DDG: s"];
"1000108" -> "1000210"  [label="DDG: opb"];
"1000109" -> "1000210"  [label="DDG: maptype"];
"1000210" -> "1000321"  [label="DDG: work"];
"1000210" -> "1000319"  [label="DDG: work"];
"1000210" -> "1000359"  [label="DDG: work"];
"1000210" -> "1000357"  [label="DDG: work"];
"1000210" -> "1000414"  [label="DDG: work"];
"1000210" -> "1000421"  [label="DDG: work"];
"1000210" -> "1000438"  [label="DDG: work"];
"1000210" -> "1000453"  [label="DDG: work"];
"1000210" -> "1000468"  [label="DDG: work"];
"1000210" -> "1000479"  [label="DDG: work"];
"1000210" -> "1000497"  [label="DDG: work"];
"1000210" -> "1000504"  [label="DDG: work"];
"1000210" -> "1000512"  [label="DDG: work"];
"1000210" -> "1000525"  [label="DDG: work"];
"1000210" -> "1000533"  [label="DDG: work"];
"1000210" -> "1000544"  [label="DDG: work"];
"1000210" -> "1000550"  [label="DDG: work"];
"1000210" -> "1000563"  [label="DDG: work"];
"1000210" -> "1000578"  [label="DDG: work"];
"1000210" -> "1000590"  [label="DDG: work"];
"1000210" -> "1000596"  [label="DDG: work"];
"1000210" -> "1000601"  [label="DDG: work"];
"1000210" -> "1000609"  [label="DDG: work"];
"1000210" -> "1000649"  [label="DDG: work"];
"1000210" -> "1000673"  [label="DDG: work"];
"1000210" -> "1000703"  [label="DDG: work"];
"1000210" -> "1000732"  [label="DDG: work"];
"1000210" -> "1000739"  [label="DDG: work"];
"1000210" -> "1000760"  [label="DDG: work"];
"1000210" -> "1000768"  [label="DDG: work"];
"1000210" -> "1000779"  [label="DDG: work"];
"1000210" -> "1000785"  [label="DDG: work"];
"1000210" -> "1000798"  [label="DDG: work"];
"1000210" -> "1000813"  [label="DDG: work"];
"1000210" -> "1000825"  [label="DDG: work"];
"1000210" -> "1000831"  [label="DDG: work"];
"1000210" -> "1000836"  [label="DDG: work"];
"1000210" -> "1000844"  [label="DDG: work"];
"1000210" -> "1000861"  [label="DDG: work"];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000115"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000117" -> "1000114"  [label="CFG: "];
"1000121" -> "1000114"  [label="CFG: "];
"1000114" -> "1000865"  [label="DDG: !lengthlist"];
"1000114" -> "1000865"  [label="DDG: lengthlist"];
"1000106" -> "1000114"  [label="DDG: lengthlist"];
"1000114" -> "1000149"  [label="DDG: lengthlist"];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000865"  [label="DDG: lengthlist"];
"1000106" -> "1000149"  [label="DDG: lengthlist"];
"1000195" -> "1000194"  [label="AST: "];
"1000195" -> "1000199"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000199" -> "1000195"  [label="AST: "];
"1000200" -> "1000195"  [label="CFG: "];
"1000195" -> "1000865"  [label="DDG: s->entries"];
"1000195" -> "1000193"  [label="DDG: s->entries"];
"1000195" -> "1000193"  [label="DDG: 2"];
"1000195" -> "1000194"  [label="DDG: s->entries"];
"1000195" -> "1000194"  [label="DDG: 2"];
"1000205" -> "1000204"  [label="AST: "];
"1000205" -> "1000206"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000208" -> "1000205"  [label="CFG: "];
"1000211" -> "1000205"  [label="CFG: "];
"1000205" -> "1000865"  [label="DDG: work"];
"1000205" -> "1000865"  [label="DDG: !work"];
"1000191" -> "1000205"  [label="DDG: work"];
"1000191" -> "1000110"  [label="AST: "];
"1000191" -> "1000193"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000193" -> "1000191"  [label="AST: "];
"1000206" -> "1000191"  [label="CFG: "];
"1000191" -> "1000865"  [label="DDG: calloc((s->entries*2+1),sizeof(*work))"];
"1000193" -> "1000191"  [label="DDG: s->entries*2+1"];
"1000193" -> "1000201"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000201" -> "1000193"  [label="AST: "];
"1000193" -> "1000865"  [label="DDG: s->entries*2+1"];
"1000107" -> "1000104"  [label="AST: "];
"1000107" -> "1000865"  [label="DDG: quantvals"];
"1000107" -> "1000149"  [label="DDG: quantvals"];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000865"  [label="DDG: s"];
"1000105" -> "1000149"  [label="DDG: s"];
"1000108" -> "1000104"  [label="AST: "];
"1000108" -> "1000865"  [label="DDG: opb"];
"1000108" -> "1000149"  [label="DDG: opb"];
"1000109" -> "1000104"  [label="AST: "];
"1000109" -> "1000865"  [label="DDG: maptype"];
"1000109" -> "1000149"  [label="DDG: maptype"];
"1000813" -> "1000807"  [label="AST: "];
"1000813" -> "1000819"  [label="CFG: "];
"1000814" -> "1000813"  [label="AST: "];
"1000819" -> "1000813"  [label="AST: "];
"1000807" -> "1000813"  [label="CFG: "];
"1000813" -> "1000865"  [label="DDG: work[i+1]"];
"1000813" -> "1000768"  [label="DDG: work[i+1]"];
"1000813" -> "1000807"  [label="DDG: work[i+1]"];
"1000813" -> "1000807"  [label="DDG: 0xffff"];
"1000798" -> "1000813"  [label="DDG: work[i+1]"];
"1000798" -> "1000797"  [label="AST: "];
"1000798" -> "1000804"  [label="CFG: "];
"1000799" -> "1000798"  [label="AST: "];
"1000804" -> "1000798"  [label="AST: "];
"1000805" -> "1000798"  [label="CFG: "];
"1000798" -> "1000797"  [label="DDG: work[i+1]"];
"1000798" -> "1000797"  [label="DDG: 16"];
"1000768" -> "1000798"  [label="DDG: work[i+1]"];
"1000768" -> "1000767"  [label="AST: "];
"1000768" -> "1000774"  [label="CFG: "];
"1000769" -> "1000768"  [label="AST: "];
"1000774" -> "1000768"  [label="AST: "];
"1000777" -> "1000768"  [label="CFG: "];
"1000823" -> "1000768"  [label="CFG: "];
"1000768" -> "1000865"  [label="DDG: work[i+1]&0x80000000UL"];
"1000844" -> "1000768"  [label="DDG: work[i+1]"];
"1000768" -> "1000844"  [label="DDG: work[i+1]"];
"1000844" -> "1000842"  [label="AST: "];
"1000844" -> "1000850"  [label="CFG: "];
"1000845" -> "1000844"  [label="AST: "];
"1000850" -> "1000844"  [label="AST: "];
"1000842" -> "1000844"  [label="CFG: "];
"1000844" -> "1000865"  [label="DDG: work[i+1]"];
"1000512" -> "1000510"  [label="AST: "];
"1000512" -> "1000518"  [label="CFG: "];
"1000513" -> "1000512"  [label="AST: "];
"1000518" -> "1000512"  [label="AST: "];
"1000510" -> "1000512"  [label="CFG: "];
"1000512" -> "1000865"  [label="DDG: work[i+1]"];
"1000512" -> "1000421"  [label="DDG: work[i+1]"];
"1000421" -> "1000512"  [label="DDG: work[i+1]"];
"1000512" -> "1000533"  [label="DDG: work[i+1]"];
"1000421" -> "1000420"  [label="AST: "];
"1000421" -> "1000427"  [label="CFG: "];
"1000422" -> "1000421"  [label="AST: "];
"1000427" -> "1000421"  [label="AST: "];
"1000430" -> "1000421"  [label="CFG: "];
"1000489" -> "1000421"  [label="CFG: "];
"1000421" -> "1000865"  [label="DDG: work[i+1]&0x80000000UL"];
"1000578" -> "1000421"  [label="DDG: work[i+1]"];
"1000609" -> "1000421"  [label="DDG: work[i+1]"];
"1000479" -> "1000421"  [label="DDG: work[i+1]"];
"1000421" -> "1000453"  [label="DDG: work[i+1]"];
"1000578" -> "1000572"  [label="AST: "];
"1000578" -> "1000584"  [label="CFG: "];
"1000579" -> "1000578"  [label="AST: "];
"1000584" -> "1000578"  [label="AST: "];
"1000572" -> "1000578"  [label="CFG: "];
"1000578" -> "1000865"  [label="DDG: work[i+1]"];
"1000578" -> "1000533"  [label="DDG: work[i+1]"];
"1000578" -> "1000572"  [label="DDG: work[i+1]"];
"1000578" -> "1000572"  [label="DDG: 0xff"];
"1000563" -> "1000578"  [label="DDG: work[i+1]"];
"1000563" -> "1000562"  [label="AST: "];
"1000563" -> "1000569"  [label="CFG: "];
"1000564" -> "1000563"  [label="AST: "];
"1000569" -> "1000563"  [label="AST: "];
"1000570" -> "1000563"  [label="CFG: "];
"1000563" -> "1000562"  [label="DDG: work[i+1]"];
"1000563" -> "1000562"  [label="DDG: 8"];
"1000533" -> "1000563"  [label="DDG: work[i+1]"];
"1000533" -> "1000532"  [label="AST: "];
"1000533" -> "1000539"  [label="CFG: "];
"1000534" -> "1000533"  [label="AST: "];
"1000539" -> "1000533"  [label="AST: "];
"1000542" -> "1000533"  [label="CFG: "];
"1000588" -> "1000533"  [label="CFG: "];
"1000533" -> "1000865"  [label="DDG: work[i+1]&0x80000000UL"];
"1000609" -> "1000533"  [label="DDG: work[i+1]"];
"1000479" -> "1000533"  [label="DDG: work[i+1]"];
"1000533" -> "1000609"  [label="DDG: work[i+1]"];
"1000609" -> "1000607"  [label="AST: "];
"1000609" -> "1000615"  [label="CFG: "];
"1000610" -> "1000609"  [label="AST: "];
"1000615" -> "1000609"  [label="AST: "];
"1000607" -> "1000609"  [label="CFG: "];
"1000609" -> "1000865"  [label="DDG: work[i+1]"];
"1000479" -> "1000473"  [label="AST: "];
"1000479" -> "1000485"  [label="CFG: "];
"1000480" -> "1000479"  [label="AST: "];
"1000485" -> "1000479"  [label="AST: "];
"1000473" -> "1000479"  [label="CFG: "];
"1000479" -> "1000865"  [label="DDG: work[i+1]"];
"1000479" -> "1000473"  [label="DDG: work[i+1]"];
"1000479" -> "1000473"  [label="DDG: 0xff"];
"1000453" -> "1000479"  [label="DDG: work[i+1]"];
"1000453" -> "1000452"  [label="AST: "];
"1000453" -> "1000459"  [label="CFG: "];
"1000454" -> "1000453"  [label="AST: "];
"1000459" -> "1000453"  [label="AST: "];
"1000460" -> "1000453"  [label="CFG: "];
"1000453" -> "1000452"  [label="DDG: work[i+1]"];
"1000453" -> "1000452"  [label="DDG: 8"];
"1000616" -> "1000412"  [label="AST: "];
"1000616" -> "1000620"  [label="CFG: "];
"1000617" -> "1000616"  [label="AST: "];
"1000620" -> "1000616"  [label="AST: "];
"1000410" -> "1000616"  [label="CFG: "];
"1000616" -> "1000865"  [label="DDG: work[i]"];
"1000616" -> "1000865"  [label="DDG: top"];
"1000616" -> "1000414"  [label="DDG: work[i]"];
"1000429" -> "1000616"  [label="DDG: top"];
"1000587" -> "1000616"  [label="DDG: top"];
"1000488" -> "1000616"  [label="DDG: top"];
"1000541" -> "1000616"  [label="DDG: top"];
"1000429" -> "1000428"  [label="AST: "];
"1000429" -> "1000431"  [label="CFG: "];
"1000430" -> "1000429"  [label="AST: "];
"1000431" -> "1000429"  [label="AST: "];
"1000434" -> "1000429"  [label="CFG: "];
"1000372" -> "1000429"  [label="DDG: top"];
"1000587" -> "1000429"  [label="DDG: top"];
"1000488" -> "1000429"  [label="DDG: top"];
"1000541" -> "1000429"  [label="DDG: top"];
"1000429" -> "1000448"  [label="DDG: top"];
"1000429" -> "1000465"  [label="DDG: top"];
"1000429" -> "1000476"  [label="DDG: top"];
"1000429" -> "1000488"  [label="DDG: top"];
"1000429" -> "1000541"  [label="DDG: top"];
"1000429" -> "1000587"  [label="DDG: top"];
"1000372" -> "1000370"  [label="AST: "];
"1000372" -> "1000374"  [label="CFG: "];
"1000373" -> "1000372"  [label="AST: "];
"1000374" -> "1000372"  [label="AST: "];
"1000384" -> "1000372"  [label="CFG: "];
"1000372" -> "1000865"  [label="DDG: top"];
"1000372" -> "1000865"  [label="DDG: s->used_entries*3-2"];
"1000374" -> "1000372"  [label="DDG: s->used_entries*3"];
"1000374" -> "1000372"  [label="DDG: 2"];
"1000372" -> "1000488"  [label="DDG: top"];
"1000372" -> "1000541"  [label="DDG: top"];
"1000372" -> "1000587"  [label="DDG: top"];
"1000372" -> "1000664"  [label="DDG: top"];
"1000372" -> "1000723"  [label="DDG: top"];
"1000372" -> "1000776"  [label="DDG: top"];
"1000372" -> "1000822"  [label="DDG: top"];
"1000374" -> "1000380"  [label="CFG: "];
"1000375" -> "1000374"  [label="AST: "];
"1000380" -> "1000374"  [label="AST: "];
"1000374" -> "1000865"  [label="DDG: s->used_entries*3"];
"1000375" -> "1000374"  [label="DDG: s->used_entries"];
"1000375" -> "1000374"  [label="DDG: 3"];
"1000375" -> "1000379"  [label="CFG: "];
"1000376" -> "1000375"  [label="AST: "];
"1000379" -> "1000375"  [label="AST: "];
"1000380" -> "1000375"  [label="CFG: "];
"1000262" -> "1000375"  [label="DDG: s->used_entries"];
"1000375" -> "1000400"  [label="DDG: s->used_entries"];
"1000375" -> "1000635"  [label="DDG: s->used_entries"];
"1000262" -> "1000261"  [label="AST: "];
"1000262" -> "1000266"  [label="CFG: "];
"1000263" -> "1000262"  [label="AST: "];
"1000266" -> "1000262"  [label="AST: "];
"1000271" -> "1000262"  [label="CFG: "];
"1000262" -> "1000865"  [label="DDG: s->used_entries"];
"1000262" -> "1000865"  [label="DDG: s->dec_leafw+1"];
"1000262" -> "1000261"  [label="DDG: s->used_entries"];
"1000262" -> "1000261"  [label="DDG: s->dec_leafw+1"];
"1000222" -> "1000262"  [label="DDG: s->used_entries"];
"1000240" -> "1000262"  [label="DDG: s->used_entries"];
"1000262" -> "1000301"  [label="DDG: s->used_entries"];
"1000262" -> "1000339"  [label="DDG: s->used_entries"];
"1000222" -> "1000221"  [label="AST: "];
"1000222" -> "1000226"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000226" -> "1000222"  [label="AST: "];
"1000233" -> "1000222"  [label="CFG: "];
"1000237" -> "1000222"  [label="CFG: "];
"1000222" -> "1000865"  [label="DDG: s->used_entries"];
"1000222" -> "1000865"  [label="DDG: INT_MAX/(s->dec_leafw+1)"];
"1000222" -> "1000865"  [label="DDG: s->used_entries > INT_MAX/(s->dec_leafw+1)"];
"1000167" -> "1000222"  [label="DDG: s->used_entries"];
"1000175" -> "1000222"  [label="DDG: s->used_entries"];
"1000226" -> "1000222"  [label="DDG: INT_MAX"];
"1000226" -> "1000222"  [label="DDG: s->dec_leafw+1"];
"1000222" -> "1000240"  [label="DDG: s->used_entries"];
"1000167" -> "1000166"  [label="AST: "];
"1000167" -> "1000171"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000171" -> "1000167"  [label="AST: "];
"1000177" -> "1000167"  [label="CFG: "];
"1000166" -> "1000167"  [label="CFG: "];
"1000167" -> "1000865"  [label="DDG: s->used_entries"];
"1000167" -> "1000865"  [label="DDG: INT_MAX/2"];
"1000167" -> "1000166"  [label="DDG: s->used_entries"];
"1000167" -> "1000166"  [label="DDG: INT_MAX/2"];
"1000171" -> "1000167"  [label="DDG: INT_MAX"];
"1000171" -> "1000167"  [label="DDG: 2"];
"1000167" -> "1000175"  [label="DDG: s->used_entries"];
"1000171" -> "1000173"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="AST: "];
"1000171" -> "1000865"  [label="DDG: INT_MAX"];
"1000171" -> "1000181"  [label="DDG: INT_MAX"];
"1000171" -> "1000226"  [label="DDG: INT_MAX"];
"1000175" -> "1000174"  [label="AST: "];
"1000175" -> "1000179"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000179" -> "1000175"  [label="AST: "];
"1000182" -> "1000175"  [label="CFG: "];
"1000175" -> "1000865"  [label="DDG: s->used_entries"];
"1000175" -> "1000174"  [label="DDG: s->used_entries"];
"1000175" -> "1000174"  [label="DDG: 2"];
"1000226" -> "1000228"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000228" -> "1000226"  [label="AST: "];
"1000226" -> "1000865"  [label="DDG: INT_MAX"];
"1000226" -> "1000865"  [label="DDG: s->dec_leafw+1"];
"1000181" -> "1000226"  [label="DDG: INT_MAX"];
"1000226" -> "1000249"  [label="DDG: INT_MAX"];
"1000181" -> "1000180"  [label="AST: "];
"1000181" -> "1000183"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000183" -> "1000181"  [label="AST: "];
"1000188" -> "1000181"  [label="CFG: "];
"1000181" -> "1000865"  [label="DDG: INT_MAX"];
"1000181" -> "1000865"  [label="DDG: (long) sizeof(*work)"];
"1000181" -> "1000180"  [label="DDG: INT_MAX"];
"1000181" -> "1000180"  [label="DDG: (long) sizeof(*work)"];
"1000240" -> "1000239"  [label="AST: "];
"1000240" -> "1000244"  [label="CFG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000244" -> "1000240"  [label="AST: "];
"1000250" -> "1000240"  [label="CFG: "];
"1000240" -> "1000865"  [label="DDG: s->dec_leafw+1"];
"1000240" -> "1000865"  [label="DDG: s->used_entries"];
"1000240" -> "1000239"  [label="DDG: s->used_entries"];
"1000240" -> "1000239"  [label="DDG: s->dec_leafw+1"];
"1000587" -> "1000586"  [label="AST: "];
"1000587" -> "1000589"  [label="CFG: "];
"1000588" -> "1000587"  [label="AST: "];
"1000589" -> "1000587"  [label="AST: "];
"1000592" -> "1000587"  [label="CFG: "];
"1000587" -> "1000488"  [label="DDG: top"];
"1000587" -> "1000541"  [label="DDG: top"];
"1000488" -> "1000587"  [label="DDG: top"];
"1000541" -> "1000587"  [label="DDG: top"];
"1000587" -> "1000604"  [label="DDG: top"];
"1000488" -> "1000487"  [label="AST: "];
"1000488" -> "1000490"  [label="CFG: "];
"1000489" -> "1000488"  [label="AST: "];
"1000490" -> "1000488"  [label="AST: "];
"1000493" -> "1000488"  [label="CFG: "];
"1000541" -> "1000488"  [label="DDG: top"];
"1000488" -> "1000507"  [label="DDG: top"];
"1000488" -> "1000522"  [label="DDG: top"];
"1000488" -> "1000541"  [label="DDG: top"];
"1000541" -> "1000540"  [label="AST: "];
"1000541" -> "1000543"  [label="CFG: "];
"1000542" -> "1000541"  [label="AST: "];
"1000543" -> "1000541"  [label="AST: "];
"1000546" -> "1000541"  [label="CFG: "];
"1000541" -> "1000558"  [label="DDG: top"];
"1000541" -> "1000575"  [label="DDG: top"];
"1000851" -> "1000647"  [label="AST: "];
"1000851" -> "1000855"  [label="CFG: "];
"1000852" -> "1000851"  [label="AST: "];
"1000855" -> "1000851"  [label="AST: "];
"1000645" -> "1000851"  [label="CFG: "];
"1000851" -> "1000865"  [label="DDG: work[i]"];
"1000851" -> "1000865"  [label="DDG: top"];
"1000851" -> "1000649"  [label="DDG: work[i]"];
"1000776" -> "1000851"  [label="DDG: top"];
"1000822" -> "1000851"  [label="DDG: top"];
"1000664" -> "1000851"  [label="DDG: top"];
"1000723" -> "1000851"  [label="DDG: top"];
"1000776" -> "1000775"  [label="AST: "];
"1000776" -> "1000778"  [label="CFG: "];
"1000777" -> "1000776"  [label="AST: "];
"1000778" -> "1000776"  [label="AST: "];
"1000781" -> "1000776"  [label="CFG: "];
"1000776" -> "1000664"  [label="DDG: top"];
"1000776" -> "1000723"  [label="DDG: top"];
"1000822" -> "1000776"  [label="DDG: top"];
"1000664" -> "1000776"  [label="DDG: top"];
"1000723" -> "1000776"  [label="DDG: top"];
"1000776" -> "1000793"  [label="DDG: top"];
"1000776" -> "1000810"  [label="DDG: top"];
"1000776" -> "1000822"  [label="DDG: top"];
"1000822" -> "1000821"  [label="AST: "];
"1000822" -> "1000824"  [label="CFG: "];
"1000823" -> "1000822"  [label="AST: "];
"1000824" -> "1000822"  [label="AST: "];
"1000827" -> "1000822"  [label="CFG: "];
"1000822" -> "1000664"  [label="DDG: top"];
"1000822" -> "1000723"  [label="DDG: top"];
"1000664" -> "1000822"  [label="DDG: top"];
"1000723" -> "1000822"  [label="DDG: top"];
"1000822" -> "1000839"  [label="DDG: top"];
"1000664" -> "1000663"  [label="AST: "];
"1000664" -> "1000666"  [label="CFG: "];
"1000665" -> "1000664"  [label="AST: "];
"1000666" -> "1000664"  [label="AST: "];
"1000669" -> "1000664"  [label="CFG: "];
"1000723" -> "1000664"  [label="DDG: top"];
"1000664" -> "1000683"  [label="DDG: top"];
"1000664" -> "1000700"  [label="DDG: top"];
"1000664" -> "1000711"  [label="DDG: top"];
"1000664" -> "1000723"  [label="DDG: top"];
"1000723" -> "1000722"  [label="AST: "];
"1000723" -> "1000725"  [label="CFG: "];
"1000724" -> "1000723"  [label="AST: "];
"1000725" -> "1000723"  [label="AST: "];
"1000728" -> "1000723"  [label="CFG: "];
"1000723" -> "1000742"  [label="DDG: top"];
"1000723" -> "1000757"  [label="DDG: top"];
"1000357" -> "1000355"  [label="AST: "];
"1000357" -> "1000365"  [label="CFG: "];
"1000358" -> "1000357"  [label="AST: "];
"1000365" -> "1000357"  [label="AST: "];
"1000355" -> "1000357"  [label="CFG: "];
"1000357" -> "1000865"  [label="DDG: work[i]"];
"1000357" -> "1000865"  [label="DDG: (work[i] & 0x80000000UL) >> 16"];
"1000357" -> "1000355"  [label="DDG: (work[i] & 0x80000000UL) >> 16"];
"1000357" -> "1000355"  [label="DDG: work[i]"];
"1000358" -> "1000357"  [label="DDG: work[i] & 0x80000000UL"];
"1000358" -> "1000357"  [label="DDG: 16"];
"1000357" -> "1000359"  [label="DDG: work[i]"];
"1000359" -> "1000357"  [label="DDG: work[i]"];
"1000358" -> "1000364"  [label="CFG: "];
"1000359" -> "1000358"  [label="AST: "];
"1000364" -> "1000358"  [label="AST: "];
"1000366" -> "1000358"  [label="CFG: "];
"1000358" -> "1000865"  [label="DDG: work[i] & 0x80000000UL"];
"1000359" -> "1000358"  [label="DDG: work[i]"];
"1000359" -> "1000358"  [label="DDG: 0x80000000UL"];
"1000359" -> "1000363"  [label="CFG: "];
"1000360" -> "1000359"  [label="AST: "];
"1000363" -> "1000359"  [label="AST: "];
"1000364" -> "1000359"  [label="CFG: "];
"1000319" -> "1000317"  [label="AST: "];
"1000319" -> "1000327"  [label="CFG: "];
"1000320" -> "1000319"  [label="AST: "];
"1000327" -> "1000319"  [label="AST: "];
"1000317" -> "1000319"  [label="CFG: "];
"1000319" -> "1000865"  [label="DDG: work[i]"];
"1000319" -> "1000865"  [label="DDG: (work[i] & 0x80000000UL) >> 24"];
"1000319" -> "1000317"  [label="DDG: (work[i] & 0x80000000UL) >> 24"];
"1000319" -> "1000317"  [label="DDG: work[i]"];
"1000320" -> "1000319"  [label="DDG: work[i] & 0x80000000UL"];
"1000320" -> "1000319"  [label="DDG: 24"];
"1000319" -> "1000321"  [label="DDG: work[i]"];
"1000321" -> "1000319"  [label="DDG: work[i]"];
"1000320" -> "1000326"  [label="CFG: "];
"1000321" -> "1000320"  [label="AST: "];
"1000326" -> "1000320"  [label="AST: "];
"1000328" -> "1000320"  [label="CFG: "];
"1000320" -> "1000865"  [label="DDG: work[i] & 0x80000000UL"];
"1000321" -> "1000320"  [label="DDG: work[i]"];
"1000321" -> "1000320"  [label="DDG: 0x80000000UL"];
"1000321" -> "1000325"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000325" -> "1000321"  [label="AST: "];
"1000326" -> "1000321"  [label="CFG: "];
}
