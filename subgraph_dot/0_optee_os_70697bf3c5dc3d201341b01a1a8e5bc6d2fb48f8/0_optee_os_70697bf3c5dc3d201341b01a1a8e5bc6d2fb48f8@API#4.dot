digraph "0_optee_os_70697bf3c5dc3d201341b01a1a8e5bc6d2fb48f8@API" {
"1000181" [label="(Call,tee_svc_copy_from_user(&dlen64, dst_len, sizeof(dlen64)))"];
"1000108" [label="(MethodParameterIn,uint64_t *dst_len)"];
"1000179" [label="(Call,res = tee_svc_copy_from_user(&dlen64, dst_len, sizeof(dlen64)))"];
"1000188" [label="(Call,res != TEE_SUCCESS)"];
"1000191" [label="(Return,return res;)"];
"1000210" [label="(Call,res != TEE_SUCCESS)"];
"1000213" [label="(Return,return res;)"];
"1000245" [label="(Call,res != TEE_SUCCESS)"];
"1000259" [label="(Call,res != TEE_SUCCESS)"];
"1000521" [label="(Call,res == TEE_SUCCESS)"];
"1000520" [label="(Call,res == TEE_SUCCESS || res == TEE_ERROR_SHORT_BUFFER)"];
"1000524" [label="(Call,res == TEE_ERROR_SHORT_BUFFER)"];
"1000547" [label="(Return,return res;)"];
"1000542" [label="(Call,res2 != TEE_SUCCESS)"];
"1000545" [label="(Return,return res2;)"];
"1000534" [label="(Call,tee_svc_copy_to_user(dst_len, &dlen64, sizeof(*dst_len)))"];
"1000532" [label="(Call,res2 = tee_svc_copy_to_user(dst_len, &dlen64, sizeof(*dst_len)))"];
"1000541" [label="(ControlStructure,if (res2 != TEE_SUCCESS))"];
"1000261" [label="(Identifier,TEE_SUCCESS)"];
"1000522" [label="(Identifier,res)"];
"1000310" [label="(Call,res = crypto_acipher_rsanopad_decrypt(o->attr, src_data,\n\t\t\t\t\t\t\t      src_len, dst_data,\n\t\t\t\t\t\t\t      &dlen))"];
"1000512" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000179" [label="(Call,res = tee_svc_copy_from_user(&dlen64, dst_len, sizeof(dlen64)))"];
"1000213" [label="(Return,return res;)"];
"1000533" [label="(Identifier,res2)"];
"1000237" [label="(Call,res = copy_in_attrs(utc, usr_params, num_params, params))"];
"1000532" [label="(Call,res2 = tee_svc_copy_to_user(dst_len, &dlen64, sizeof(*dst_len)))"];
"1000189" [label="(Identifier,res)"];
"1000534" [label="(Call,tee_svc_copy_to_user(dst_len, &dlen64, sizeof(*dst_len)))"];
"1000191" [label="(Return,return res;)"];
"1000496" [label="(Call,res = crypto_acipher_ecc_sign(cs->algo, o->attr, src_data,\n\t\t\t\t\t      src_len, dst_data, &dlen))"];
"1000210" [label="(Call,res != TEE_SUCCESS)"];
"1000214" [label="(Identifier,res)"];
"1000194" [label="(Identifier,dlen)"];
"1000174" [label="(Call,res != TEE_SUCCESS)"];
"1000262" [label="(ControlStructure,goto out;)"];
"1000274" [label="(Call,res = TEE_ERROR_GENERIC)"];
"1000476" [label="(Call,res = crypto_acipher_dsa_sign(cs->algo, o->attr, src_data,\n\t\t\t\t\t      src_len, dst_data, &dlen))"];
"1000190" [label="(Identifier,TEE_SUCCESS)"];
"1000524" [label="(Call,res == TEE_ERROR_SHORT_BUFFER)"];
"1000181" [label="(Call,tee_svc_copy_from_user(&dlen64, dst_len, sizeof(dlen64)))"];
"1000447" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000457" [label="(Call,res = crypto_acipher_rsassa_sign(cs->algo, o->attr, salt_len,\n\t\t\t\t\t\t src_data, src_len, dst_data,\n\t\t\t\t\t\t &dlen))"];
"1000188" [label="(Call,res != TEE_SUCCESS)"];
"1000217" [label="(Identifier,alloc_size)"];
"1000247" [label="(Identifier,TEE_SUCCESS)"];
"1000259" [label="(Call,res != TEE_SUCCESS)"];
"1000187" [label="(ControlStructure,if (res != TEE_SUCCESS))"];
"1000549" [label="(MethodReturn,TEE_Result)"];
"1000244" [label="(ControlStructure,if (res != TEE_SUCCESS))"];
"1000520" [label="(Call,res == TEE_SUCCESS || res == TEE_ERROR_SHORT_BUFFER)"];
"1000544" [label="(Identifier,TEE_SUCCESS)"];
"1000196" [label="(Call,res = tee_mmu_check_access_rights(\n\t\tutc,\n\t\tTEE_MEMORY_ACCESS_READ | TEE_MEMORY_ACCESS_WRITE |\n\t\t\tTEE_MEMORY_ACCESS_ANY_OWNER,\n\t\t(uaddr_t) dst_data, dlen))"];
"1000209" [label="(ControlStructure,if (res != TEE_SUCCESS))"];
"1000250" [label="(Identifier,res)"];
"1000521" [label="(Call,res == TEE_SUCCESS)"];
"1000525" [label="(Identifier,res)"];
"1000212" [label="(Identifier,TEE_SUCCESS)"];
"1000185" [label="(Call,sizeof(dlen64))"];
"1000109" [label="(Block,)"];
"1000530" [label="(Identifier,dlen64)"];
"1000543" [label="(Identifier,res2)"];
"1000527" [label="(Block,)"];
"1000192" [label="(Identifier,res)"];
"1000547" [label="(Return,return res;)"];
"1000246" [label="(Identifier,res)"];
"1000545" [label="(Return,return res2;)"];
"1000519" [label="(ControlStructure,if (res == TEE_SUCCESS || res == TEE_ERROR_SHORT_BUFFER))"];
"1000526" [label="(Identifier,TEE_ERROR_SHORT_BUFFER)"];
"1000382" [label="(Call,res = crypto_acipher_rsaes_encrypt(cs->algo, o->attr,\n\t\t\t\t\t\t\t   label, label_len,\n\t\t\t\t\t\t\t   src_data, src_len,\n\t\t\t\t\t\t\t   dst_data, &dlen))"];
"1000406" [label="(Call,res = crypto_acipher_rsaes_decrypt(\n\t\t\t\t\tcs->algo, o->attr, label, label_len,\n\t\t\t\t\tsrc_data, src_len, dst_data, &dlen))"];
"1000211" [label="(Identifier,res)"];
"1000258" [label="(ControlStructure,if (res != TEE_SUCCESS))"];
"1000180" [label="(Identifier,res)"];
"1000542" [label="(Call,res2 != TEE_SUCCESS)"];
"1000535" [label="(Identifier,dst_len)"];
"1000323" [label="(Call,res = TEE_ERROR_GENERIC)"];
"1000248" [label="(ControlStructure,goto out;)"];
"1000291" [label="(Call,res = crypto_acipher_rsanopad_encrypt(o->attr, src_data,\n\t\t\t\t\t\t\t      src_len, dst_data,\n\t\t\t\t\t\t\t      &dlen))"];
"1000245" [label="(Call,res != TEE_SUCCESS)"];
"1000108" [label="(MethodParameterIn,uint64_t *dst_len)"];
"1000538" [label="(Call,sizeof(*dst_len))"];
"1000260" [label="(Identifier,res)"];
"1000424" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000268" [label="(Identifier,o)"];
"1000546" [label="(Identifier,res2)"];
"1000536" [label="(Call,&dlen64)"];
"1000523" [label="(Identifier,TEE_SUCCESS)"];
"1000182" [label="(Call,&dlen64)"];
"1000548" [label="(Identifier,res)"];
"1000249" [label="(Call,res = tee_obj_get(utc, cs->key1, &o))"];
"1000184" [label="(Identifier,dst_len)"];
"1000181" -> "1000179"  [label="AST: "];
"1000181" -> "1000185"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000184" -> "1000181"  [label="AST: "];
"1000185" -> "1000181"  [label="AST: "];
"1000179" -> "1000181"  [label="CFG: "];
"1000181" -> "1000549"  [label="DDG: &dlen64"];
"1000181" -> "1000549"  [label="DDG: dst_len"];
"1000181" -> "1000179"  [label="DDG: &dlen64"];
"1000181" -> "1000179"  [label="DDG: dst_len"];
"1000108" -> "1000181"  [label="DDG: dst_len"];
"1000181" -> "1000534"  [label="DDG: dst_len"];
"1000181" -> "1000534"  [label="DDG: &dlen64"];
"1000108" -> "1000101"  [label="AST: "];
"1000108" -> "1000549"  [label="DDG: dst_len"];
"1000108" -> "1000534"  [label="DDG: dst_len"];
"1000179" -> "1000109"  [label="AST: "];
"1000180" -> "1000179"  [label="AST: "];
"1000189" -> "1000179"  [label="CFG: "];
"1000179" -> "1000549"  [label="DDG: tee_svc_copy_from_user(&dlen64, dst_len, sizeof(dlen64))"];
"1000179" -> "1000188"  [label="DDG: res"];
"1000188" -> "1000187"  [label="AST: "];
"1000188" -> "1000190"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000188"  [label="AST: "];
"1000192" -> "1000188"  [label="CFG: "];
"1000194" -> "1000188"  [label="CFG: "];
"1000188" -> "1000549"  [label="DDG: res != TEE_SUCCESS"];
"1000188" -> "1000549"  [label="DDG: TEE_SUCCESS"];
"1000188" -> "1000549"  [label="DDG: res"];
"1000174" -> "1000188"  [label="DDG: TEE_SUCCESS"];
"1000188" -> "1000191"  [label="DDG: res"];
"1000188" -> "1000210"  [label="DDG: TEE_SUCCESS"];
"1000191" -> "1000187"  [label="AST: "];
"1000191" -> "1000192"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000549" -> "1000191"  [label="CFG: "];
"1000191" -> "1000549"  [label="DDG: <RET>"];
"1000192" -> "1000191"  [label="DDG: res"];
"1000210" -> "1000209"  [label="AST: "];
"1000210" -> "1000212"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="AST: "];
"1000214" -> "1000210"  [label="CFG: "];
"1000217" -> "1000210"  [label="CFG: "];
"1000210" -> "1000549"  [label="DDG: res != TEE_SUCCESS"];
"1000210" -> "1000549"  [label="DDG: TEE_SUCCESS"];
"1000210" -> "1000549"  [label="DDG: res"];
"1000196" -> "1000210"  [label="DDG: res"];
"1000210" -> "1000213"  [label="DDG: res"];
"1000210" -> "1000245"  [label="DDG: TEE_SUCCESS"];
"1000213" -> "1000209"  [label="AST: "];
"1000213" -> "1000214"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000549" -> "1000213"  [label="CFG: "];
"1000213" -> "1000549"  [label="DDG: <RET>"];
"1000214" -> "1000213"  [label="DDG: res"];
"1000245" -> "1000244"  [label="AST: "];
"1000245" -> "1000247"  [label="CFG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000247" -> "1000245"  [label="AST: "];
"1000248" -> "1000245"  [label="CFG: "];
"1000250" -> "1000245"  [label="CFG: "];
"1000245" -> "1000549"  [label="DDG: res != TEE_SUCCESS"];
"1000237" -> "1000245"  [label="DDG: res"];
"1000245" -> "1000259"  [label="DDG: TEE_SUCCESS"];
"1000245" -> "1000521"  [label="DDG: res"];
"1000245" -> "1000521"  [label="DDG: TEE_SUCCESS"];
"1000259" -> "1000258"  [label="AST: "];
"1000259" -> "1000261"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000259"  [label="AST: "];
"1000262" -> "1000259"  [label="CFG: "];
"1000268" -> "1000259"  [label="CFG: "];
"1000259" -> "1000549"  [label="DDG: res != TEE_SUCCESS"];
"1000249" -> "1000259"  [label="DDG: res"];
"1000259" -> "1000521"  [label="DDG: res"];
"1000259" -> "1000521"  [label="DDG: TEE_SUCCESS"];
"1000521" -> "1000520"  [label="AST: "];
"1000521" -> "1000523"  [label="CFG: "];
"1000522" -> "1000521"  [label="AST: "];
"1000523" -> "1000521"  [label="AST: "];
"1000525" -> "1000521"  [label="CFG: "];
"1000520" -> "1000521"  [label="CFG: "];
"1000521" -> "1000549"  [label="DDG: res"];
"1000521" -> "1000549"  [label="DDG: TEE_SUCCESS"];
"1000521" -> "1000520"  [label="DDG: res"];
"1000521" -> "1000520"  [label="DDG: TEE_SUCCESS"];
"1000274" -> "1000521"  [label="DDG: res"];
"1000512" -> "1000521"  [label="DDG: res"];
"1000310" -> "1000521"  [label="DDG: res"];
"1000406" -> "1000521"  [label="DDG: res"];
"1000496" -> "1000521"  [label="DDG: res"];
"1000323" -> "1000521"  [label="DDG: res"];
"1000457" -> "1000521"  [label="DDG: res"];
"1000447" -> "1000521"  [label="DDG: res"];
"1000291" -> "1000521"  [label="DDG: res"];
"1000382" -> "1000521"  [label="DDG: res"];
"1000424" -> "1000521"  [label="DDG: res"];
"1000476" -> "1000521"  [label="DDG: res"];
"1000521" -> "1000524"  [label="DDG: res"];
"1000521" -> "1000542"  [label="DDG: TEE_SUCCESS"];
"1000521" -> "1000547"  [label="DDG: res"];
"1000520" -> "1000519"  [label="AST: "];
"1000520" -> "1000524"  [label="CFG: "];
"1000524" -> "1000520"  [label="AST: "];
"1000530" -> "1000520"  [label="CFG: "];
"1000548" -> "1000520"  [label="CFG: "];
"1000520" -> "1000549"  [label="DDG: res == TEE_SUCCESS || res == TEE_ERROR_SHORT_BUFFER"];
"1000520" -> "1000549"  [label="DDG: res == TEE_ERROR_SHORT_BUFFER"];
"1000520" -> "1000549"  [label="DDG: res == TEE_SUCCESS"];
"1000524" -> "1000520"  [label="DDG: res"];
"1000524" -> "1000520"  [label="DDG: TEE_ERROR_SHORT_BUFFER"];
"1000524" -> "1000526"  [label="CFG: "];
"1000525" -> "1000524"  [label="AST: "];
"1000526" -> "1000524"  [label="AST: "];
"1000524" -> "1000549"  [label="DDG: res"];
"1000524" -> "1000549"  [label="DDG: TEE_ERROR_SHORT_BUFFER"];
"1000524" -> "1000547"  [label="DDG: res"];
"1000547" -> "1000109"  [label="AST: "];
"1000547" -> "1000548"  [label="CFG: "];
"1000548" -> "1000547"  [label="AST: "];
"1000549" -> "1000547"  [label="CFG: "];
"1000547" -> "1000549"  [label="DDG: <RET>"];
"1000548" -> "1000547"  [label="DDG: res"];
"1000542" -> "1000541"  [label="AST: "];
"1000542" -> "1000544"  [label="CFG: "];
"1000543" -> "1000542"  [label="AST: "];
"1000544" -> "1000542"  [label="AST: "];
"1000546" -> "1000542"  [label="CFG: "];
"1000548" -> "1000542"  [label="CFG: "];
"1000542" -> "1000549"  [label="DDG: res2 != TEE_SUCCESS"];
"1000542" -> "1000549"  [label="DDG: res2"];
"1000542" -> "1000549"  [label="DDG: TEE_SUCCESS"];
"1000532" -> "1000542"  [label="DDG: res2"];
"1000542" -> "1000545"  [label="DDG: res2"];
"1000545" -> "1000541"  [label="AST: "];
"1000545" -> "1000546"  [label="CFG: "];
"1000546" -> "1000545"  [label="AST: "];
"1000549" -> "1000545"  [label="CFG: "];
"1000545" -> "1000549"  [label="DDG: <RET>"];
"1000546" -> "1000545"  [label="DDG: res2"];
"1000534" -> "1000532"  [label="AST: "];
"1000534" -> "1000538"  [label="CFG: "];
"1000535" -> "1000534"  [label="AST: "];
"1000536" -> "1000534"  [label="AST: "];
"1000538" -> "1000534"  [label="AST: "];
"1000532" -> "1000534"  [label="CFG: "];
"1000534" -> "1000549"  [label="DDG: &dlen64"];
"1000534" -> "1000549"  [label="DDG: dst_len"];
"1000534" -> "1000532"  [label="DDG: dst_len"];
"1000534" -> "1000532"  [label="DDG: &dlen64"];
"1000532" -> "1000527"  [label="AST: "];
"1000533" -> "1000532"  [label="AST: "];
"1000543" -> "1000532"  [label="CFG: "];
"1000532" -> "1000549"  [label="DDG: tee_svc_copy_to_user(dst_len, &dlen64, sizeof(*dst_len))"];
}
