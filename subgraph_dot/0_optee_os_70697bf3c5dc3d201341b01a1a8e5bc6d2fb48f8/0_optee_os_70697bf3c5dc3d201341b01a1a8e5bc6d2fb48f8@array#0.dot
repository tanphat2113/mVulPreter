digraph "0_optee_os_70697bf3c5dc3d201341b01a1a8e5bc6d2fb48f8@array" {
"1000352" [label="(Call,label = params[n].content.ref.buffer)"];
"1000384" [label="(Call,crypto_acipher_rsaes_encrypt(cs->algo, o->attr,\n\t\t\t\t\t\t\t   label, label_len,\n\t\t\t\t\t\t\t   src_data, src_len,\n\t\t\t\t\t\t\t   dst_data, &dlen))"];
"1000382" [label="(Call,res = crypto_acipher_rsaes_encrypt(cs->algo, o->attr,\n\t\t\t\t\t\t\t   label, label_len,\n\t\t\t\t\t\t\t   src_data, src_len,\n\t\t\t\t\t\t\t   dst_data, &dlen))"];
"1000521" [label="(Call,res == TEE_SUCCESS)"];
"1000520" [label="(Call,res == TEE_SUCCESS || res == TEE_ERROR_SHORT_BUFFER)"];
"1000524" [label="(Call,res == TEE_ERROR_SHORT_BUFFER)"];
"1000547" [label="(Return,return res;)"];
"1000542" [label="(Call,res2 != TEE_SUCCESS)"];
"1000545" [label="(Return,return res2;)"];
"1000408" [label="(Call,crypto_acipher_rsaes_decrypt(\n\t\t\t\t\tcs->algo, o->attr, label, label_len,\n\t\t\t\t\tsrc_data, src_len, dst_data, &dlen))"];
"1000406" [label="(Call,res = crypto_acipher_rsaes_decrypt(\n\t\t\t\t\tcs->algo, o->attr, label, label_len,\n\t\t\t\t\tsrc_data, src_len, dst_data, &dlen))"];
"1000352" [label="(Call,label = params[n].content.ref.buffer)"];
"1000353" [label="(Identifier,label)"];
"1000541" [label="(ControlStructure,if (res2 != TEE_SUCCESS))"];
"1000522" [label="(Identifier,res)"];
"1000420" [label="(Call,&dlen)"];
"1000310" [label="(Call,res = crypto_acipher_rsanopad_decrypt(o->attr, src_data,\n\t\t\t\t\t\t\t      src_len, dst_data,\n\t\t\t\t\t\t\t      &dlen))"];
"1000512" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000391" [label="(Identifier,label)"];
"1000169" [label="(Call,(uaddr_t) src_data)"];
"1000117" [label="(Call,*label = NULL)"];
"1000532" [label="(Call,res2 = tee_svc_copy_to_user(dst_len, &dlen64, sizeof(*dst_len)))"];
"1000427" [label="(ControlStructure,break;)"];
"1000383" [label="(Identifier,res)"];
"1000496" [label="(Call,res = crypto_acipher_ecc_sign(cs->algo, o->attr, src_data,\n\t\t\t\t\t      src_len, dst_data, &dlen))"];
"1000364" [label="(Identifier,label_len)"];
"1000106" [label="(MethodParameterIn,size_t src_len)"];
"1000476" [label="(Call,res = crypto_acipher_dsa_sign(cs->algo, o->attr, src_data,\n\t\t\t\t\t      src_len, dst_data, &dlen))"];
"1000121" [label="(Call,label_len = 0)"];
"1000524" [label="(Call,res == TEE_ERROR_SHORT_BUFFER)"];
"1000447" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000385" [label="(Call,cs->algo)"];
"1000384" [label="(Call,crypto_acipher_rsaes_encrypt(cs->algo, o->attr,\n\t\t\t\t\t\t\t   label, label_len,\n\t\t\t\t\t\t\t   src_data, src_len,\n\t\t\t\t\t\t\t   dst_data, &dlen))"];
"1000520" [label="(Call,res == TEE_SUCCESS || res == TEE_ERROR_SHORT_BUFFER)"];
"1000457" [label="(Call,res = crypto_acipher_rsassa_sign(cs->algo, o->attr, salt_len,\n\t\t\t\t\t\t src_data, src_len, dst_data,\n\t\t\t\t\t\t &dlen))"];
"1000544" [label="(Identifier,TEE_SUCCESS)"];
"1000408" [label="(Call,crypto_acipher_rsaes_decrypt(\n\t\t\t\t\tcs->algo, o->attr, label, label_len,\n\t\t\t\t\tsrc_data, src_len, dst_data, &dlen))"];
"1000549" [label="(MethodReturn,TEE_Result)"];
"1000259" [label="(Call,res != TEE_SUCCESS)"];
"1000392" [label="(Identifier,label_len)"];
"1000412" [label="(Call,o->attr)"];
"1000418" [label="(Identifier,src_len)"];
"1000405" [label="(Block,)"];
"1000521" [label="(Call,res == TEE_SUCCESS)"];
"1000354" [label="(Call,params[n].content.ref.buffer)"];
"1000525" [label="(Identifier,res)"];
"1000417" [label="(Identifier,src_data)"];
"1000351" [label="(Block,)"];
"1000394" [label="(Identifier,src_len)"];
"1000530" [label="(Identifier,dlen64)"];
"1000109" [label="(Block,)"];
"1000543" [label="(Identifier,res2)"];
"1000415" [label="(Identifier,label)"];
"1000105" [label="(MethodParameterIn,const void *src_data)"];
"1000363" [label="(Call,label_len = params[n].content.ref.length)"];
"1000547" [label="(Return,return res;)"];
"1000407" [label="(Identifier,res)"];
"1000381" [label="(Block,)"];
"1000545" [label="(Return,return res2;)"];
"1000388" [label="(Call,o->attr)"];
"1000519" [label="(ControlStructure,if (res == TEE_SUCCESS || res == TEE_ERROR_SHORT_BUFFER))"];
"1000419" [label="(Identifier,dst_data)"];
"1000526" [label="(Identifier,TEE_ERROR_SHORT_BUFFER)"];
"1000382" [label="(Call,res = crypto_acipher_rsaes_encrypt(cs->algo, o->attr,\n\t\t\t\t\t\t\t   label, label_len,\n\t\t\t\t\t\t\t   src_data, src_len,\n\t\t\t\t\t\t\t   dst_data, &dlen))"];
"1000406" [label="(Call,res = crypto_acipher_rsaes_decrypt(\n\t\t\t\t\tcs->algo, o->attr, label, label_len,\n\t\t\t\t\tsrc_data, src_len, dst_data, &dlen))"];
"1000164" [label="(Call,tee_mmu_check_access_rights(\n\t\tutc,\n\t\tTEE_MEMORY_ACCESS_READ | TEE_MEMORY_ACCESS_ANY_OWNER,\n\t\t(uaddr_t) src_data, src_len))"];
"1000542" [label="(Call,res2 != TEE_SUCCESS)"];
"1000416" [label="(Identifier,label_len)"];
"1000323" [label="(Call,res = TEE_ERROR_GENERIC)"];
"1000396" [label="(Call,&dlen)"];
"1000291" [label="(Call,res = crypto_acipher_rsanopad_encrypt(o->attr, src_data,\n\t\t\t\t\t\t\t      src_len, dst_data,\n\t\t\t\t\t\t\t      &dlen))"];
"1000205" [label="(Call,(uaddr_t) dst_data)"];
"1000245" [label="(Call,res != TEE_SUCCESS)"];
"1000107" [label="(MethodParameterIn,void *dst_data)"];
"1000424" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000546" [label="(Identifier,res2)"];
"1000409" [label="(Call,cs->algo)"];
"1000523" [label="(Identifier,TEE_SUCCESS)"];
"1000274" [label="(Call,res = TEE_ERROR_GENERIC)"];
"1000548" [label="(Identifier,res)"];
"1000393" [label="(Identifier,src_data)"];
"1000395" [label="(Identifier,dst_data)"];
"1000352" -> "1000351"  [label="AST: "];
"1000352" -> "1000354"  [label="CFG: "];
"1000353" -> "1000352"  [label="AST: "];
"1000354" -> "1000352"  [label="AST: "];
"1000364" -> "1000352"  [label="CFG: "];
"1000352" -> "1000549"  [label="DDG: label"];
"1000352" -> "1000549"  [label="DDG: params[n].content.ref.buffer"];
"1000352" -> "1000384"  [label="DDG: label"];
"1000352" -> "1000408"  [label="DDG: label"];
"1000384" -> "1000382"  [label="AST: "];
"1000384" -> "1000396"  [label="CFG: "];
"1000385" -> "1000384"  [label="AST: "];
"1000388" -> "1000384"  [label="AST: "];
"1000391" -> "1000384"  [label="AST: "];
"1000392" -> "1000384"  [label="AST: "];
"1000393" -> "1000384"  [label="AST: "];
"1000394" -> "1000384"  [label="AST: "];
"1000395" -> "1000384"  [label="AST: "];
"1000396" -> "1000384"  [label="AST: "];
"1000382" -> "1000384"  [label="CFG: "];
"1000384" -> "1000549"  [label="DDG: &dlen"];
"1000384" -> "1000549"  [label="DDG: src_len"];
"1000384" -> "1000549"  [label="DDG: label_len"];
"1000384" -> "1000549"  [label="DDG: src_data"];
"1000384" -> "1000549"  [label="DDG: o->attr"];
"1000384" -> "1000549"  [label="DDG: label"];
"1000384" -> "1000549"  [label="DDG: cs->algo"];
"1000384" -> "1000549"  [label="DDG: dst_data"];
"1000384" -> "1000382"  [label="DDG: &dlen"];
"1000384" -> "1000382"  [label="DDG: cs->algo"];
"1000384" -> "1000382"  [label="DDG: o->attr"];
"1000384" -> "1000382"  [label="DDG: dst_data"];
"1000384" -> "1000382"  [label="DDG: src_data"];
"1000384" -> "1000382"  [label="DDG: src_len"];
"1000384" -> "1000382"  [label="DDG: label"];
"1000384" -> "1000382"  [label="DDG: label_len"];
"1000117" -> "1000384"  [label="DDG: label"];
"1000363" -> "1000384"  [label="DDG: label_len"];
"1000121" -> "1000384"  [label="DDG: label_len"];
"1000169" -> "1000384"  [label="DDG: src_data"];
"1000105" -> "1000384"  [label="DDG: src_data"];
"1000164" -> "1000384"  [label="DDG: src_len"];
"1000106" -> "1000384"  [label="DDG: src_len"];
"1000205" -> "1000384"  [label="DDG: dst_data"];
"1000107" -> "1000384"  [label="DDG: dst_data"];
"1000382" -> "1000381"  [label="AST: "];
"1000383" -> "1000382"  [label="AST: "];
"1000427" -> "1000382"  [label="CFG: "];
"1000382" -> "1000549"  [label="DDG: crypto_acipher_rsaes_encrypt(cs->algo, o->attr,\n\t\t\t\t\t\t\t   label, label_len,\n\t\t\t\t\t\t\t   src_data, src_len,\n\t\t\t\t\t\t\t   dst_data, &dlen)"];
"1000382" -> "1000521"  [label="DDG: res"];
"1000521" -> "1000520"  [label="AST: "];
"1000521" -> "1000523"  [label="CFG: "];
"1000522" -> "1000521"  [label="AST: "];
"1000523" -> "1000521"  [label="AST: "];
"1000525" -> "1000521"  [label="CFG: "];
"1000520" -> "1000521"  [label="CFG: "];
"1000521" -> "1000549"  [label="DDG: res"];
"1000521" -> "1000549"  [label="DDG: TEE_SUCCESS"];
"1000521" -> "1000520"  [label="DDG: res"];
"1000521" -> "1000520"  [label="DDG: TEE_SUCCESS"];
"1000259" -> "1000521"  [label="DDG: res"];
"1000259" -> "1000521"  [label="DDG: TEE_SUCCESS"];
"1000274" -> "1000521"  [label="DDG: res"];
"1000512" -> "1000521"  [label="DDG: res"];
"1000310" -> "1000521"  [label="DDG: res"];
"1000406" -> "1000521"  [label="DDG: res"];
"1000496" -> "1000521"  [label="DDG: res"];
"1000323" -> "1000521"  [label="DDG: res"];
"1000457" -> "1000521"  [label="DDG: res"];
"1000447" -> "1000521"  [label="DDG: res"];
"1000245" -> "1000521"  [label="DDG: res"];
"1000245" -> "1000521"  [label="DDG: TEE_SUCCESS"];
"1000291" -> "1000521"  [label="DDG: res"];
"1000424" -> "1000521"  [label="DDG: res"];
"1000476" -> "1000521"  [label="DDG: res"];
"1000521" -> "1000524"  [label="DDG: res"];
"1000521" -> "1000542"  [label="DDG: TEE_SUCCESS"];
"1000521" -> "1000547"  [label="DDG: res"];
"1000520" -> "1000519"  [label="AST: "];
"1000520" -> "1000524"  [label="CFG: "];
"1000524" -> "1000520"  [label="AST: "];
"1000530" -> "1000520"  [label="CFG: "];
"1000548" -> "1000520"  [label="CFG: "];
"1000520" -> "1000549"  [label="DDG: res == TEE_SUCCESS || res == TEE_ERROR_SHORT_BUFFER"];
"1000520" -> "1000549"  [label="DDG: res == TEE_ERROR_SHORT_BUFFER"];
"1000520" -> "1000549"  [label="DDG: res == TEE_SUCCESS"];
"1000524" -> "1000520"  [label="DDG: res"];
"1000524" -> "1000520"  [label="DDG: TEE_ERROR_SHORT_BUFFER"];
"1000524" -> "1000526"  [label="CFG: "];
"1000525" -> "1000524"  [label="AST: "];
"1000526" -> "1000524"  [label="AST: "];
"1000524" -> "1000549"  [label="DDG: res"];
"1000524" -> "1000549"  [label="DDG: TEE_ERROR_SHORT_BUFFER"];
"1000524" -> "1000547"  [label="DDG: res"];
"1000547" -> "1000109"  [label="AST: "];
"1000547" -> "1000548"  [label="CFG: "];
"1000548" -> "1000547"  [label="AST: "];
"1000549" -> "1000547"  [label="CFG: "];
"1000547" -> "1000549"  [label="DDG: <RET>"];
"1000548" -> "1000547"  [label="DDG: res"];
"1000542" -> "1000541"  [label="AST: "];
"1000542" -> "1000544"  [label="CFG: "];
"1000543" -> "1000542"  [label="AST: "];
"1000544" -> "1000542"  [label="AST: "];
"1000546" -> "1000542"  [label="CFG: "];
"1000548" -> "1000542"  [label="CFG: "];
"1000542" -> "1000549"  [label="DDG: res2 != TEE_SUCCESS"];
"1000542" -> "1000549"  [label="DDG: res2"];
"1000542" -> "1000549"  [label="DDG: TEE_SUCCESS"];
"1000532" -> "1000542"  [label="DDG: res2"];
"1000542" -> "1000545"  [label="DDG: res2"];
"1000545" -> "1000541"  [label="AST: "];
"1000545" -> "1000546"  [label="CFG: "];
"1000546" -> "1000545"  [label="AST: "];
"1000549" -> "1000545"  [label="CFG: "];
"1000545" -> "1000549"  [label="DDG: <RET>"];
"1000546" -> "1000545"  [label="DDG: res2"];
"1000408" -> "1000406"  [label="AST: "];
"1000408" -> "1000420"  [label="CFG: "];
"1000409" -> "1000408"  [label="AST: "];
"1000412" -> "1000408"  [label="AST: "];
"1000415" -> "1000408"  [label="AST: "];
"1000416" -> "1000408"  [label="AST: "];
"1000417" -> "1000408"  [label="AST: "];
"1000418" -> "1000408"  [label="AST: "];
"1000419" -> "1000408"  [label="AST: "];
"1000420" -> "1000408"  [label="AST: "];
"1000406" -> "1000408"  [label="CFG: "];
"1000408" -> "1000549"  [label="DDG: cs->algo"];
"1000408" -> "1000549"  [label="DDG: o->attr"];
"1000408" -> "1000549"  [label="DDG: &dlen"];
"1000408" -> "1000549"  [label="DDG: label_len"];
"1000408" -> "1000549"  [label="DDG: src_len"];
"1000408" -> "1000549"  [label="DDG: label"];
"1000408" -> "1000549"  [label="DDG: src_data"];
"1000408" -> "1000549"  [label="DDG: dst_data"];
"1000408" -> "1000406"  [label="DDG: cs->algo"];
"1000408" -> "1000406"  [label="DDG: src_len"];
"1000408" -> "1000406"  [label="DDG: label_len"];
"1000408" -> "1000406"  [label="DDG: label"];
"1000408" -> "1000406"  [label="DDG: dst_data"];
"1000408" -> "1000406"  [label="DDG: o->attr"];
"1000408" -> "1000406"  [label="DDG: src_data"];
"1000408" -> "1000406"  [label="DDG: &dlen"];
"1000117" -> "1000408"  [label="DDG: label"];
"1000363" -> "1000408"  [label="DDG: label_len"];
"1000121" -> "1000408"  [label="DDG: label_len"];
"1000169" -> "1000408"  [label="DDG: src_data"];
"1000105" -> "1000408"  [label="DDG: src_data"];
"1000164" -> "1000408"  [label="DDG: src_len"];
"1000106" -> "1000408"  [label="DDG: src_len"];
"1000205" -> "1000408"  [label="DDG: dst_data"];
"1000107" -> "1000408"  [label="DDG: dst_data"];
"1000406" -> "1000405"  [label="AST: "];
"1000407" -> "1000406"  [label="AST: "];
"1000427" -> "1000406"  [label="CFG: "];
"1000406" -> "1000549"  [label="DDG: crypto_acipher_rsaes_decrypt(\n\t\t\t\t\tcs->algo, o->attr, label, label_len,\n\t\t\t\t\tsrc_data, src_len, dst_data, &dlen)"];
}
