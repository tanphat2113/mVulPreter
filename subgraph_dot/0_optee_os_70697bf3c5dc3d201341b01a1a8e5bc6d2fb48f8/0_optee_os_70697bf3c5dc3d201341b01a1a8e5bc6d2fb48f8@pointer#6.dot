digraph "0_optee_os_70697bf3c5dc3d201341b01a1a8e5bc6d2fb48f8@pointer" {
"1000103" [label="(MethodParameterIn,const struct utee_attribute *usr_params)"];
"1000239" [label="(Call,copy_in_attrs(utc, usr_params, num_params, params))"];
"1000237" [label="(Call,res = copy_in_attrs(utc, usr_params, num_params, params))"];
"1000245" [label="(Call,res != TEE_SUCCESS)"];
"1000259" [label="(Call,res != TEE_SUCCESS)"];
"1000521" [label="(Call,res == TEE_SUCCESS)"];
"1000520" [label="(Call,res == TEE_SUCCESS || res == TEE_ERROR_SHORT_BUFFER)"];
"1000524" [label="(Call,res == TEE_ERROR_SHORT_BUFFER)"];
"1000547" [label="(Return,return res;)"];
"1000542" [label="(Call,res2 != TEE_SUCCESS)"];
"1000545" [label="(Return,return res2;)"];
"1000251" [label="(Call,tee_obj_get(utc, cs->key1, &o))"];
"1000249" [label="(Call,res = tee_obj_get(utc, cs->key1, &o))"];
"1000337" [label="(Call,n < num_params)"];
"1000340" [label="(Call,n++)"];
"1000453" [label="(Call,pkcs1_get_salt_len(params, num_params, src_len))"];
"1000451" [label="(Call,salt_len = pkcs1_get_salt_len(params, num_params, src_len))"];
"1000459" [label="(Call,crypto_acipher_rsassa_sign(cs->algo, o->attr, salt_len,\n\t\t\t\t\t\t src_data, src_len, dst_data,\n\t\t\t\t\t\t &dlen))"];
"1000457" [label="(Call,res = crypto_acipher_rsassa_sign(cs->algo, o->attr, salt_len,\n\t\t\t\t\t\t src_data, src_len, dst_data,\n\t\t\t\t\t\t &dlen))"];
"1000517" [label="(Call,free(params))"];
"1000512" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000169" [label="(Call,(uaddr_t) src_data)"];
"1000532" [label="(Call,res2 = tee_svc_copy_to_user(dst_len, &dlen64, sizeof(*dst_len)))"];
"1000467" [label="(Identifier,src_data)"];
"1000496" [label="(Call,res = crypto_acipher_ecc_sign(cs->algo, o->attr, src_data,\n\t\t\t\t\t      src_len, dst_data, &dlen))"];
"1000340" [label="(Call,n++)"];
"1000220" [label="(Call,MUL_OVERFLOW(sizeof(TEE_Attribute), num_params, &alloc_size))"];
"1000378" [label="(Identifier,cs)"];
"1000457" [label="(Call,res = crypto_acipher_rsassa_sign(cs->algo, o->attr, salt_len,\n\t\t\t\t\t\t src_data, src_len, dst_data,\n\t\t\t\t\t\t &dlen))"];
"1000244" [label="(ControlStructure,if (res != TEE_SUCCESS))"];
"1000547" [label="(Return,return res;)"];
"1000334" [label="(Call,n = 0)"];
"1000406" [label="(Call,res = crypto_acipher_rsaes_decrypt(\n\t\t\t\t\tcs->algo, o->attr, label, label_len,\n\t\t\t\t\tsrc_data, src_len, dst_data, &dlen))"];
"1000460" [label="(Call,cs->algo)"];
"1000268" [label="(Identifier,o)"];
"1000546" [label="(Identifier,res2)"];
"1000523" [label="(Identifier,TEE_SUCCESS)"];
"1000274" [label="(Call,res = TEE_ERROR_GENERIC)"];
"1000548" [label="(Identifier,res)"];
"1000323" [label="(Call,res = TEE_ERROR_GENERIC)"];
"1000517" [label="(Call,free(params))"];
"1000242" [label="(Identifier,num_params)"];
"1000456" [label="(Identifier,src_len)"];
"1000337" [label="(Call,n < num_params)"];
"1000210" [label="(Call,res != TEE_SUCCESS)"];
"1000106" [label="(MethodParameterIn,size_t src_len)"];
"1000524" [label="(Call,res == TEE_ERROR_SHORT_BUFFER)"];
"1000463" [label="(Call,o->attr)"];
"1000468" [label="(Identifier,src_len)"];
"1000247" [label="(Identifier,TEE_SUCCESS)"];
"1000520" [label="(Call,res == TEE_SUCCESS || res == TEE_ERROR_SHORT_BUFFER)"];
"1000259" [label="(Call,res != TEE_SUCCESS)"];
"1000339" [label="(Identifier,num_params)"];
"1000250" [label="(Identifier,res)"];
"1000525" [label="(Identifier,res)"];
"1000455" [label="(Identifier,num_params)"];
"1000382" [label="(Call,res = crypto_acipher_rsaes_encrypt(cs->algo, o->attr,\n\t\t\t\t\t\t\t   label, label_len,\n\t\t\t\t\t\t\t   src_data, src_len,\n\t\t\t\t\t\t\t   dst_data, &dlen))"];
"1000248" [label="(ControlStructure,goto out;)"];
"1000241" [label="(Identifier,usr_params)"];
"1000466" [label="(Identifier,salt_len)"];
"1000458" [label="(Identifier,res)"];
"1000107" [label="(MethodParameterIn,void *dst_data)"];
"1000452" [label="(Identifier,salt_len)"];
"1000472" [label="(ControlStructure,break;)"];
"1000541" [label="(ControlStructure,if (res2 != TEE_SUCCESS))"];
"1000261" [label="(Identifier,TEE_SUCCESS)"];
"1000522" [label="(Identifier,res)"];
"1000243" [label="(Identifier,params)"];
"1000233" [label="(Call,!params)"];
"1000103" [label="(MethodParameterIn,const struct utee_attribute *usr_params)"];
"1000237" [label="(Call,res = copy_in_attrs(utc, usr_params, num_params, params))"];
"1000451" [label="(Call,salt_len = pkcs1_get_salt_len(params, num_params, src_len))"];
"1000453" [label="(Call,pkcs1_get_salt_len(params, num_params, src_len))"];
"1000262" [label="(ControlStructure,goto out;)"];
"1000476" [label="(Call,res = crypto_acipher_dsa_sign(cs->algo, o->attr, src_data,\n\t\t\t\t\t      src_len, dst_data, &dlen))"];
"1000454" [label="(Identifier,params)"];
"1000333" [label="(ControlStructure,for (n = 0; n < num_params; n++))"];
"1000544" [label="(Identifier,TEE_SUCCESS)"];
"1000240" [label="(Identifier,utc)"];
"1000521" [label="(Call,res == TEE_SUCCESS)"];
"1000109" [label="(Block,)"];
"1000543" [label="(Identifier,res2)"];
"1000105" [label="(MethodParameterIn,const void *src_data)"];
"1000347" [label="(Identifier,params)"];
"1000246" [label="(Identifier,res)"];
"1000253" [label="(Call,cs->key1)"];
"1000238" [label="(Identifier,res)"];
"1000526" [label="(Identifier,TEE_ERROR_SHORT_BUFFER)"];
"1000164" [label="(Call,tee_mmu_check_access_rights(\n\t\tutc,\n\t\tTEE_MEMORY_ACCESS_READ | TEE_MEMORY_ACCESS_ANY_OWNER,\n\t\t(uaddr_t) src_data, src_len))"];
"1000205" [label="(Call,(uaddr_t) dst_data)"];
"1000249" [label="(Call,res = tee_obj_get(utc, cs->key1, &o))"];
"1000310" [label="(Call,res = crypto_acipher_rsanopad_decrypt(o->attr, src_data,\n\t\t\t\t\t\t\t      src_len, dst_data,\n\t\t\t\t\t\t\t      &dlen))"];
"1000256" [label="(Call,&o)"];
"1000104" [label="(MethodParameterIn,size_t num_params)"];
"1000470" [label="(Call,&dlen)"];
"1000251" [label="(Call,tee_obj_get(utc, cs->key1, &o))"];
"1000198" [label="(Call,tee_mmu_check_access_rights(\n\t\tutc,\n\t\tTEE_MEMORY_ACCESS_READ | TEE_MEMORY_ACCESS_WRITE |\n\t\t\tTEE_MEMORY_ACCESS_ANY_OWNER,\n\t\t(uaddr_t) dst_data, dlen))"];
"1000239" [label="(Call,copy_in_attrs(utc, usr_params, num_params, params))"];
"1000447" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000549" [label="(MethodReturn,TEE_Result)"];
"1000530" [label="(Identifier,dlen64)"];
"1000545" [label="(Return,return res2;)"];
"1000282" [label="(Block,)"];
"1000519" [label="(ControlStructure,if (res == TEE_SUCCESS || res == TEE_ERROR_SHORT_BUFFER))"];
"1000341" [label="(Identifier,n)"];
"1000459" [label="(Call,crypto_acipher_rsassa_sign(cs->algo, o->attr, salt_len,\n\t\t\t\t\t\t src_data, src_len, dst_data,\n\t\t\t\t\t\t &dlen))"];
"1000338" [label="(Identifier,n)"];
"1000518" [label="(Identifier,params)"];
"1000258" [label="(ControlStructure,if (res != TEE_SUCCESS))"];
"1000542" [label="(Call,res2 != TEE_SUCCESS)"];
"1000291" [label="(Call,res = crypto_acipher_rsanopad_encrypt(o->attr, src_data,\n\t\t\t\t\t\t\t      src_len, dst_data,\n\t\t\t\t\t\t\t      &dlen))"];
"1000252" [label="(Identifier,utc)"];
"1000469" [label="(Identifier,dst_data)"];
"1000245" [label="(Call,res != TEE_SUCCESS)"];
"1000260" [label="(Identifier,res)"];
"1000424" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000103" -> "1000101"  [label="AST: "];
"1000103" -> "1000549"  [label="DDG: usr_params"];
"1000103" -> "1000239"  [label="DDG: usr_params"];
"1000239" -> "1000237"  [label="AST: "];
"1000239" -> "1000243"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="AST: "];
"1000242" -> "1000239"  [label="AST: "];
"1000243" -> "1000239"  [label="AST: "];
"1000237" -> "1000239"  [label="CFG: "];
"1000239" -> "1000549"  [label="DDG: utc"];
"1000239" -> "1000549"  [label="DDG: num_params"];
"1000239" -> "1000549"  [label="DDG: usr_params"];
"1000239" -> "1000237"  [label="DDG: utc"];
"1000239" -> "1000237"  [label="DDG: usr_params"];
"1000239" -> "1000237"  [label="DDG: num_params"];
"1000239" -> "1000237"  [label="DDG: params"];
"1000198" -> "1000239"  [label="DDG: utc"];
"1000220" -> "1000239"  [label="DDG: num_params"];
"1000104" -> "1000239"  [label="DDG: num_params"];
"1000233" -> "1000239"  [label="DDG: params"];
"1000239" -> "1000251"  [label="DDG: utc"];
"1000239" -> "1000337"  [label="DDG: num_params"];
"1000239" -> "1000453"  [label="DDG: params"];
"1000239" -> "1000453"  [label="DDG: num_params"];
"1000239" -> "1000517"  [label="DDG: params"];
"1000237" -> "1000109"  [label="AST: "];
"1000238" -> "1000237"  [label="AST: "];
"1000246" -> "1000237"  [label="CFG: "];
"1000237" -> "1000549"  [label="DDG: copy_in_attrs(utc, usr_params, num_params, params)"];
"1000237" -> "1000245"  [label="DDG: res"];
"1000245" -> "1000244"  [label="AST: "];
"1000245" -> "1000247"  [label="CFG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000247" -> "1000245"  [label="AST: "];
"1000248" -> "1000245"  [label="CFG: "];
"1000250" -> "1000245"  [label="CFG: "];
"1000245" -> "1000549"  [label="DDG: res != TEE_SUCCESS"];
"1000210" -> "1000245"  [label="DDG: TEE_SUCCESS"];
"1000245" -> "1000259"  [label="DDG: TEE_SUCCESS"];
"1000245" -> "1000521"  [label="DDG: res"];
"1000245" -> "1000521"  [label="DDG: TEE_SUCCESS"];
"1000259" -> "1000258"  [label="AST: "];
"1000259" -> "1000261"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000259"  [label="AST: "];
"1000262" -> "1000259"  [label="CFG: "];
"1000268" -> "1000259"  [label="CFG: "];
"1000259" -> "1000549"  [label="DDG: res != TEE_SUCCESS"];
"1000249" -> "1000259"  [label="DDG: res"];
"1000259" -> "1000521"  [label="DDG: res"];
"1000259" -> "1000521"  [label="DDG: TEE_SUCCESS"];
"1000521" -> "1000520"  [label="AST: "];
"1000521" -> "1000523"  [label="CFG: "];
"1000522" -> "1000521"  [label="AST: "];
"1000523" -> "1000521"  [label="AST: "];
"1000525" -> "1000521"  [label="CFG: "];
"1000520" -> "1000521"  [label="CFG: "];
"1000521" -> "1000549"  [label="DDG: res"];
"1000521" -> "1000549"  [label="DDG: TEE_SUCCESS"];
"1000521" -> "1000520"  [label="DDG: res"];
"1000521" -> "1000520"  [label="DDG: TEE_SUCCESS"];
"1000274" -> "1000521"  [label="DDG: res"];
"1000512" -> "1000521"  [label="DDG: res"];
"1000310" -> "1000521"  [label="DDG: res"];
"1000406" -> "1000521"  [label="DDG: res"];
"1000496" -> "1000521"  [label="DDG: res"];
"1000323" -> "1000521"  [label="DDG: res"];
"1000457" -> "1000521"  [label="DDG: res"];
"1000447" -> "1000521"  [label="DDG: res"];
"1000291" -> "1000521"  [label="DDG: res"];
"1000382" -> "1000521"  [label="DDG: res"];
"1000424" -> "1000521"  [label="DDG: res"];
"1000476" -> "1000521"  [label="DDG: res"];
"1000521" -> "1000524"  [label="DDG: res"];
"1000521" -> "1000542"  [label="DDG: TEE_SUCCESS"];
"1000521" -> "1000547"  [label="DDG: res"];
"1000520" -> "1000519"  [label="AST: "];
"1000520" -> "1000524"  [label="CFG: "];
"1000524" -> "1000520"  [label="AST: "];
"1000530" -> "1000520"  [label="CFG: "];
"1000548" -> "1000520"  [label="CFG: "];
"1000520" -> "1000549"  [label="DDG: res == TEE_SUCCESS || res == TEE_ERROR_SHORT_BUFFER"];
"1000520" -> "1000549"  [label="DDG: res == TEE_ERROR_SHORT_BUFFER"];
"1000520" -> "1000549"  [label="DDG: res == TEE_SUCCESS"];
"1000524" -> "1000520"  [label="DDG: res"];
"1000524" -> "1000520"  [label="DDG: TEE_ERROR_SHORT_BUFFER"];
"1000524" -> "1000526"  [label="CFG: "];
"1000525" -> "1000524"  [label="AST: "];
"1000526" -> "1000524"  [label="AST: "];
"1000524" -> "1000549"  [label="DDG: res"];
"1000524" -> "1000549"  [label="DDG: TEE_ERROR_SHORT_BUFFER"];
"1000524" -> "1000547"  [label="DDG: res"];
"1000547" -> "1000109"  [label="AST: "];
"1000547" -> "1000548"  [label="CFG: "];
"1000548" -> "1000547"  [label="AST: "];
"1000549" -> "1000547"  [label="CFG: "];
"1000547" -> "1000549"  [label="DDG: <RET>"];
"1000548" -> "1000547"  [label="DDG: res"];
"1000542" -> "1000541"  [label="AST: "];
"1000542" -> "1000544"  [label="CFG: "];
"1000543" -> "1000542"  [label="AST: "];
"1000544" -> "1000542"  [label="AST: "];
"1000546" -> "1000542"  [label="CFG: "];
"1000548" -> "1000542"  [label="CFG: "];
"1000542" -> "1000549"  [label="DDG: res2 != TEE_SUCCESS"];
"1000542" -> "1000549"  [label="DDG: res2"];
"1000542" -> "1000549"  [label="DDG: TEE_SUCCESS"];
"1000532" -> "1000542"  [label="DDG: res2"];
"1000542" -> "1000545"  [label="DDG: res2"];
"1000545" -> "1000541"  [label="AST: "];
"1000545" -> "1000546"  [label="CFG: "];
"1000546" -> "1000545"  [label="AST: "];
"1000549" -> "1000545"  [label="CFG: "];
"1000545" -> "1000549"  [label="DDG: <RET>"];
"1000546" -> "1000545"  [label="DDG: res2"];
"1000251" -> "1000249"  [label="AST: "];
"1000251" -> "1000256"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="AST: "];
"1000256" -> "1000251"  [label="AST: "];
"1000249" -> "1000251"  [label="CFG: "];
"1000251" -> "1000549"  [label="DDG: cs->key1"];
"1000251" -> "1000549"  [label="DDG: utc"];
"1000251" -> "1000549"  [label="DDG: &o"];
"1000251" -> "1000249"  [label="DDG: utc"];
"1000251" -> "1000249"  [label="DDG: cs->key1"];
"1000251" -> "1000249"  [label="DDG: &o"];
"1000249" -> "1000109"  [label="AST: "];
"1000250" -> "1000249"  [label="AST: "];
"1000260" -> "1000249"  [label="CFG: "];
"1000249" -> "1000549"  [label="DDG: tee_obj_get(utc, cs->key1, &o)"];
"1000337" -> "1000333"  [label="AST: "];
"1000337" -> "1000339"  [label="CFG: "];
"1000338" -> "1000337"  [label="AST: "];
"1000339" -> "1000337"  [label="AST: "];
"1000347" -> "1000337"  [label="CFG: "];
"1000378" -> "1000337"  [label="CFG: "];
"1000337" -> "1000549"  [label="DDG: num_params"];
"1000337" -> "1000549"  [label="DDG: n"];
"1000337" -> "1000549"  [label="DDG: n < num_params"];
"1000340" -> "1000337"  [label="DDG: n"];
"1000334" -> "1000337"  [label="DDG: n"];
"1000104" -> "1000337"  [label="DDG: num_params"];
"1000337" -> "1000340"  [label="DDG: n"];
"1000340" -> "1000333"  [label="AST: "];
"1000340" -> "1000341"  [label="CFG: "];
"1000341" -> "1000340"  [label="AST: "];
"1000338" -> "1000340"  [label="CFG: "];
"1000453" -> "1000451"  [label="AST: "];
"1000453" -> "1000456"  [label="CFG: "];
"1000454" -> "1000453"  [label="AST: "];
"1000455" -> "1000453"  [label="AST: "];
"1000456" -> "1000453"  [label="AST: "];
"1000451" -> "1000453"  [label="CFG: "];
"1000453" -> "1000549"  [label="DDG: num_params"];
"1000453" -> "1000451"  [label="DDG: params"];
"1000453" -> "1000451"  [label="DDG: num_params"];
"1000453" -> "1000451"  [label="DDG: src_len"];
"1000104" -> "1000453"  [label="DDG: num_params"];
"1000164" -> "1000453"  [label="DDG: src_len"];
"1000106" -> "1000453"  [label="DDG: src_len"];
"1000453" -> "1000459"  [label="DDG: src_len"];
"1000453" -> "1000517"  [label="DDG: params"];
"1000451" -> "1000282"  [label="AST: "];
"1000452" -> "1000451"  [label="AST: "];
"1000458" -> "1000451"  [label="CFG: "];
"1000451" -> "1000549"  [label="DDG: pkcs1_get_salt_len(params, num_params, src_len)"];
"1000451" -> "1000459"  [label="DDG: salt_len"];
"1000459" -> "1000457"  [label="AST: "];
"1000459" -> "1000470"  [label="CFG: "];
"1000460" -> "1000459"  [label="AST: "];
"1000463" -> "1000459"  [label="AST: "];
"1000466" -> "1000459"  [label="AST: "];
"1000467" -> "1000459"  [label="AST: "];
"1000468" -> "1000459"  [label="AST: "];
"1000469" -> "1000459"  [label="AST: "];
"1000470" -> "1000459"  [label="AST: "];
"1000457" -> "1000459"  [label="CFG: "];
"1000459" -> "1000549"  [label="DDG: cs->algo"];
"1000459" -> "1000549"  [label="DDG: src_len"];
"1000459" -> "1000549"  [label="DDG: o->attr"];
"1000459" -> "1000549"  [label="DDG: src_data"];
"1000459" -> "1000549"  [label="DDG: dst_data"];
"1000459" -> "1000549"  [label="DDG: &dlen"];
"1000459" -> "1000549"  [label="DDG: salt_len"];
"1000459" -> "1000457"  [label="DDG: src_len"];
"1000459" -> "1000457"  [label="DDG: dst_data"];
"1000459" -> "1000457"  [label="DDG: cs->algo"];
"1000459" -> "1000457"  [label="DDG: &dlen"];
"1000459" -> "1000457"  [label="DDG: o->attr"];
"1000459" -> "1000457"  [label="DDG: salt_len"];
"1000459" -> "1000457"  [label="DDG: src_data"];
"1000169" -> "1000459"  [label="DDG: src_data"];
"1000105" -> "1000459"  [label="DDG: src_data"];
"1000106" -> "1000459"  [label="DDG: src_len"];
"1000205" -> "1000459"  [label="DDG: dst_data"];
"1000107" -> "1000459"  [label="DDG: dst_data"];
"1000457" -> "1000282"  [label="AST: "];
"1000458" -> "1000457"  [label="AST: "];
"1000472" -> "1000457"  [label="CFG: "];
"1000457" -> "1000549"  [label="DDG: crypto_acipher_rsassa_sign(cs->algo, o->attr, salt_len,\n\t\t\t\t\t\t src_data, src_len, dst_data,\n\t\t\t\t\t\t &dlen)"];
"1000517" -> "1000109"  [label="AST: "];
"1000517" -> "1000518"  [label="CFG: "];
"1000518" -> "1000517"  [label="AST: "];
"1000522" -> "1000517"  [label="CFG: "];
"1000517" -> "1000549"  [label="DDG: params"];
}
