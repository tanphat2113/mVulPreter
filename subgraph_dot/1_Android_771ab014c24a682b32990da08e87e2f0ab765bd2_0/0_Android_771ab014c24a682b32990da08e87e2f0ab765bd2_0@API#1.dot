digraph "0_Android_771ab014c24a682b32990da08e87e2f0ab765bd2_0@API" {
"1000109" [label="(Call,read(c->getSocket(), buffer, sizeof(buffer)))"];
"1000108" [label="(Call,TEMP_FAILURE_RETRY(read(c->getSocket(), buffer, sizeof(buffer))))"];
"1000106" [label="(Call,len = TEMP_FAILURE_RETRY(read(c->getSocket(), buffer, sizeof(buffer))))"];
"1000115" [label="(Call,len < 0)"];
"1000127" [label="(Call,!len)"];
"1000135" [label="(Call,len-1)"];
"1000150" [label="(Call,i < len)"];
"1000153" [label="(Call,i++)"];
"1000168" [label="(Call,offset = i + 1)"];
"1000163" [label="(Call,dispatchCommand(c, buffer + offset))"];
"1000165" [label="(Call,buffer + offset)"];
"1000170" [label="(Call,i + 1)"];
"1000132" [label="(Call,buffer[len-1] != '\0')"];
"1000157" [label="(Call,buffer[i] == '\0')"];
"1000166" [label="(Identifier,buffer)"];
"1000126" [label="(ControlStructure,if (!len))"];
"1000175" [label="(MethodReturn,bool)"];
"1000128" [label="(Identifier,len)"];
"1000151" [label="(Identifier,i)"];
"1000130" [label="(Identifier,false)"];
"1000137" [label="(Literal,1)"];
"1000167" [label="(Identifier,offset)"];
"1000143" [label="(Identifier,offset)"];
"1000157" [label="(Call,buffer[i] == '\0')"];
"1000111" [label="(Identifier,buffer)"];
"1000109" [label="(Call,read(c->getSocket(), buffer, sizeof(buffer)))"];
"1000117" [label="(Literal,0)"];
"1000171" [label="(Identifier,i)"];
"1000140" [label="(Literal,\"String is not zero-terminated\")"];
"1000165" [label="(Call,buffer + offset)"];
"1000110" [label="(Call,c->getSocket())"];
"1000120" [label="(Literal,\"read() failed (%s)\")"];
"1000161" [label="(Literal,'\0')"];
"1000142" [label="(Call,offset = 0)"];
"1000164" [label="(Identifier,c)"];
"1000156" [label="(ControlStructure,if (buffer[i] == '\0'))"];
"1000136" [label="(Identifier,len)"];
"1000138" [label="(Literal,'\0')"];
"1000108" [label="(Call,TEMP_FAILURE_RETRY(read(c->getSocket(), buffer, sizeof(buffer))))"];
"1000135" [label="(Call,len-1)"];
"1000147" [label="(Call,i = 0)"];
"1000169" [label="(Identifier,offset)"];
"1000146" [label="(ControlStructure,for (i = 0; i < len; i++))"];
"1000153" [label="(Call,i++)"];
"1000133" [label="(Call,buffer[len-1])"];
"1000131" [label="(ControlStructure,if(buffer[len-1] != '\0'))"];
"1000107" [label="(Identifier,len)"];
"1000159" [label="(Identifier,buffer)"];
"1000127" [label="(Call,!len)"];
"1000162" [label="(Block,)"];
"1000112" [label="(Call,sizeof(buffer))"];
"1000168" [label="(Call,offset = i + 1)"];
"1000103" [label="(Block,)"];
"1000163" [label="(Call,dispatchCommand(c, buffer + offset))"];
"1000106" [label="(Call,len = TEMP_FAILURE_RETRY(read(c->getSocket(), buffer, sizeof(buffer))))"];
"1000102" [label="(MethodParameterIn,SocketClient *c)"];
"1000116" [label="(Identifier,len)"];
"1000115" [label="(Call,len < 0)"];
"1000154" [label="(Identifier,i)"];
"1000134" [label="(Identifier,buffer)"];
"1000132" [label="(Call,buffer[len-1] != '\0')"];
"1000114" [label="(ControlStructure,if (len < 0))"];
"1000152" [label="(Identifier,len)"];
"1000174" [label="(Identifier,true)"];
"1000170" [label="(Call,i + 1)"];
"1000150" [label="(Call,i < len)"];
"1000172" [label="(Literal,1)"];
"1000158" [label="(Call,buffer[i])"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000112"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000112" -> "1000109"  [label="AST: "];
"1000108" -> "1000109"  [label="CFG: "];
"1000109" -> "1000175"  [label="DDG: c->getSocket()"];
"1000109" -> "1000175"  [label="DDG: buffer"];
"1000109" -> "1000108"  [label="DDG: c->getSocket()"];
"1000109" -> "1000108"  [label="DDG: buffer"];
"1000109" -> "1000132"  [label="DDG: buffer"];
"1000109" -> "1000157"  [label="DDG: buffer"];
"1000109" -> "1000163"  [label="DDG: buffer"];
"1000109" -> "1000165"  [label="DDG: buffer"];
"1000108" -> "1000106"  [label="AST: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000108" -> "1000175"  [label="DDG: read(c->getSocket(), buffer, sizeof(buffer))"];
"1000108" -> "1000106"  [label="DDG: read(c->getSocket(), buffer, sizeof(buffer))"];
"1000106" -> "1000103"  [label="AST: "];
"1000107" -> "1000106"  [label="AST: "];
"1000116" -> "1000106"  [label="CFG: "];
"1000106" -> "1000175"  [label="DDG: TEMP_FAILURE_RETRY(read(c->getSocket(), buffer, sizeof(buffer)))"];
"1000106" -> "1000115"  [label="DDG: len"];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000120" -> "1000115"  [label="CFG: "];
"1000128" -> "1000115"  [label="CFG: "];
"1000115" -> "1000175"  [label="DDG: len < 0"];
"1000115" -> "1000175"  [label="DDG: len"];
"1000115" -> "1000127"  [label="DDG: len"];
"1000127" -> "1000126"  [label="AST: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000130" -> "1000127"  [label="CFG: "];
"1000134" -> "1000127"  [label="CFG: "];
"1000127" -> "1000175"  [label="DDG: len"];
"1000127" -> "1000175"  [label="DDG: !len"];
"1000127" -> "1000135"  [label="DDG: len"];
"1000135" -> "1000133"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000135" -> "1000150"  [label="DDG: len"];
"1000150" -> "1000146"  [label="AST: "];
"1000150" -> "1000152"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="AST: "];
"1000159" -> "1000150"  [label="CFG: "];
"1000174" -> "1000150"  [label="CFG: "];
"1000150" -> "1000175"  [label="DDG: i"];
"1000150" -> "1000175"  [label="DDG: len"];
"1000150" -> "1000175"  [label="DDG: i < len"];
"1000147" -> "1000150"  [label="DDG: i"];
"1000153" -> "1000150"  [label="DDG: i"];
"1000150" -> "1000153"  [label="DDG: i"];
"1000150" -> "1000168"  [label="DDG: i"];
"1000150" -> "1000170"  [label="DDG: i"];
"1000153" -> "1000146"  [label="AST: "];
"1000153" -> "1000154"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000151" -> "1000153"  [label="CFG: "];
"1000168" -> "1000162"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000154" -> "1000168"  [label="CFG: "];
"1000168" -> "1000175"  [label="DDG: offset"];
"1000168" -> "1000175"  [label="DDG: i + 1"];
"1000168" -> "1000163"  [label="DDG: offset"];
"1000168" -> "1000165"  [label="DDG: offset"];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000165"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000165" -> "1000163"  [label="AST: "];
"1000169" -> "1000163"  [label="CFG: "];
"1000163" -> "1000175"  [label="DDG: dispatchCommand(c, buffer + offset)"];
"1000163" -> "1000175"  [label="DDG: buffer + offset"];
"1000163" -> "1000175"  [label="DDG: c"];
"1000102" -> "1000163"  [label="DDG: c"];
"1000157" -> "1000163"  [label="DDG: buffer[i]"];
"1000132" -> "1000163"  [label="DDG: buffer[len-1]"];
"1000142" -> "1000163"  [label="DDG: offset"];
"1000165" -> "1000167"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000167" -> "1000165"  [label="AST: "];
"1000165" -> "1000175"  [label="DDG: buffer"];
"1000157" -> "1000165"  [label="DDG: buffer[i]"];
"1000132" -> "1000165"  [label="DDG: buffer[len-1]"];
"1000142" -> "1000165"  [label="DDG: offset"];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000138"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000138" -> "1000132"  [label="AST: "];
"1000140" -> "1000132"  [label="CFG: "];
"1000143" -> "1000132"  [label="CFG: "];
"1000132" -> "1000175"  [label="DDG: buffer[len-1] != '\0'"];
"1000132" -> "1000175"  [label="DDG: buffer[len-1]"];
"1000132" -> "1000157"  [label="DDG: buffer[len-1]"];
"1000157" -> "1000156"  [label="AST: "];
"1000157" -> "1000161"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000161" -> "1000157"  [label="AST: "];
"1000164" -> "1000157"  [label="CFG: "];
"1000154" -> "1000157"  [label="CFG: "];
"1000157" -> "1000175"  [label="DDG: buffer[i] == '\0'"];
"1000157" -> "1000175"  [label="DDG: buffer[i]"];
}
