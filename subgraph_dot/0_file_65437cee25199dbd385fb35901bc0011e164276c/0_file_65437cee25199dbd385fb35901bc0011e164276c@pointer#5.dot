digraph "0_file_65437cee25199dbd385fb35901bc0011e164276c@pointer" {
"1000183" [label="(Call,file_printf(ms, \", bad note name size 0x%lx\",\n\t\t(unsigned long)namesz))"];
"1000105" [label="(MethodParameterIn,struct magic_set *ms)"];
"1000186" [label="(Call,(unsigned long)namesz)"];
"1000177" [label="(Call,namesz & 0x80000000)"];
"1000162" [label="(Call,namesz == 0)"];
"1000154" [label="(Call,namesz = xnh_namesz)"];
"1000181" [label="(Call,(void)file_printf(ms, \", bad note name size 0x%lx\",\n\t\t(unsigned long)namesz))"];
"1000316" [label="(Call,do_core_note(ms, nbuf, xnh_type, swap,\n\t\t    namesz, descsz, noff, doff, flags, size, clazz))"];
"1000404" [label="(Call,file_printf(ms, \", compiler model: %.*s\",\n \t\t\t    (int)descsz, (const char *)&nbuf[doff]))"];
"1000176" [label="(ControlStructure,if (namesz & 0x80000000))"];
"1000211" [label="(Call,ELF_ALIGN(offset + namesz))"];
"1000162" [label="(Call,namesz == 0)"];
"1000253" [label="(Call,do_os_note(ms, nbuf, xnh_type, swap,\n\t\t    namesz, descsz, noff, doff, flags))"];
"1000193" [label="(Identifier,descsz)"];
"1000435" [label="(Call,file_printf(ms, \", note=%u\", xnh_type))"];
"1000198" [label="(Call,file_printf(ms, \", bad note description size 0x%lx\",\n\t\t(unsigned long)descsz))"];
"1000295" [label="(Call,do_pax_note(ms, nbuf, xnh_type, swap,\n\t\t    namesz, descsz, noff, doff, flags))"];
"1000156" [label="(Identifier,xnh_namesz)"];
"1000184" [label="(Identifier,ms)"];
"1000164" [label="(Literal,0)"];
"1000180" [label="(Block,)"];
"1000373" [label="(Call,file_printf(ms, \", compiled for: %.*s\",\n\t\t\t    (int)descsz, (const char *)&nbuf[doff]))"];
"1000332" [label="(Call,namesz == 7)"];
"1000177" [label="(Call,namesz & 0x80000000)"];
"1000178" [label="(Identifier,namesz)"];
"1000448" [label="(MethodReturn,RET)"];
"1000212" [label="(Call,offset + namesz)"];
"1000105" [label="(MethodParameterIn,struct magic_set *ms)"];
"1000216" [label="(Call,offset + namesz > size)"];
"1000114" [label="(Block,)"];
"1000163" [label="(Identifier,namesz)"];
"1000161" [label="(Call,(namesz == 0) && (descsz == 0))"];
"1000186" [label="(Call,(unsigned long)namesz)"];
"1000190" [label="(Literal,0)"];
"1000166" [label="(Identifier,descsz)"];
"1000188" [label="(Identifier,namesz)"];
"1000217" [label="(Call,offset + namesz)"];
"1000155" [label="(Identifier,namesz)"];
"1000183" [label="(Call,file_printf(ms, \", bad note name size 0x%lx\",\n\t\t(unsigned long)namesz))"];
"1000158" [label="(Identifier,descsz)"];
"1000179" [label="(Literal,0x80000000)"];
"1000154" [label="(Call,namesz = xnh_namesz)"];
"1000181" [label="(Call,(void)file_printf(ms, \", bad note name size 0x%lx\",\n\t\t(unsigned long)namesz))"];
"1000274" [label="(Call,do_bid_note(ms, nbuf, xnh_type, swap,\n\t\t    namesz, descsz, noff, doff, flags))"];
"1000185" [label="(Literal,\", bad note name size 0x%lx\")"];
"1000183" -> "1000181"  [label="AST: "];
"1000183" -> "1000186"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000185" -> "1000183"  [label="AST: "];
"1000186" -> "1000183"  [label="AST: "];
"1000181" -> "1000183"  [label="CFG: "];
"1000183" -> "1000448"  [label="DDG: "];
"1000183" -> "1000448"  [label="DDG: "];
"1000183" -> "1000181"  [label="DDG: "];
"1000183" -> "1000181"  [label="DDG: "];
"1000183" -> "1000181"  [label="DDG: "];
"1000105" -> "1000183"  [label="DDG: "];
"1000186" -> "1000183"  [label="DDG: "];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000448"  [label="DDG: "];
"1000105" -> "1000198"  [label="DDG: "];
"1000105" -> "1000253"  [label="DDG: "];
"1000105" -> "1000274"  [label="DDG: "];
"1000105" -> "1000295"  [label="DDG: "];
"1000105" -> "1000316"  [label="DDG: "];
"1000105" -> "1000373"  [label="DDG: "];
"1000105" -> "1000404"  [label="DDG: "];
"1000105" -> "1000435"  [label="DDG: "];
"1000186" -> "1000188"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000188" -> "1000186"  [label="AST: "];
"1000186" -> "1000448"  [label="DDG: "];
"1000177" -> "1000186"  [label="DDG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000177" -> "1000179"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000179" -> "1000177"  [label="AST: "];
"1000182" -> "1000177"  [label="CFG: "];
"1000193" -> "1000177"  [label="CFG: "];
"1000177" -> "1000448"  [label="DDG: "];
"1000177" -> "1000448"  [label="DDG: "];
"1000162" -> "1000177"  [label="DDG: "];
"1000177" -> "1000211"  [label="DDG: "];
"1000177" -> "1000212"  [label="DDG: "];
"1000177" -> "1000216"  [label="DDG: "];
"1000177" -> "1000217"  [label="DDG: "];
"1000177" -> "1000253"  [label="DDG: "];
"1000177" -> "1000274"  [label="DDG: "];
"1000177" -> "1000295"  [label="DDG: "];
"1000177" -> "1000316"  [label="DDG: "];
"1000177" -> "1000332"  [label="DDG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000162" -> "1000164"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000164" -> "1000162"  [label="AST: "];
"1000166" -> "1000162"  [label="CFG: "];
"1000161" -> "1000162"  [label="CFG: "];
"1000162" -> "1000448"  [label="DDG: "];
"1000162" -> "1000161"  [label="DDG: "];
"1000162" -> "1000161"  [label="DDG: "];
"1000154" -> "1000162"  [label="DDG: "];
"1000154" -> "1000114"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000156" -> "1000154"  [label="AST: "];
"1000158" -> "1000154"  [label="CFG: "];
"1000154" -> "1000448"  [label="DDG: "];
"1000181" -> "1000180"  [label="AST: "];
"1000182" -> "1000181"  [label="AST: "];
"1000190" -> "1000181"  [label="CFG: "];
"1000181" -> "1000448"  [label="DDG: "];
"1000181" -> "1000448"  [label="DDG: "];
}
