digraph "0_openssl_68595c0c2886e7942a14f98c17a55a88afb6c292_0@pointer" {
"1001935" [label="(Call,SHA256_Update(&key->md, out, len))"];
"1000480" [label="(Call,aesni_cbc_encrypt(in, out, len, &key->ks, ctx->iv, 0))"];
"1000126" [label="(MethodParameterIn,const unsigned char *in)"];
"1000125" [label="(MethodParameterIn,unsigned char *out)"];
"1000169" [label="(Call,len % AES_BLOCK_SIZE)"];
"1000127" [label="(MethodParameterIn,size_t len)"];
"1000691" [label="(Call,len >= (256 + SHA256_CBLOCK))"];
"1000461" [label="(Block,)"];
"1000188" [label="(Call,len !=\n                 ((plen + SHA256_DIGEST_LENGTH +\n                   AES_BLOCK_SIZE) & -AES_BLOCK_SIZE))"];
"1000393" [label="(Call,SHA256_Final(out + plen, &key->md))"];
"1000483" [label="(Identifier,len)"];
"1000724" [label="(Call,out += j)"];
"1000183" [label="(Call,plen = len)"];
"1000262" [label="(Call,in + iv)"];
"1001934" [label="(Block,)"];
"1000443" [label="(Call,in + aes_off)"];
"1000634" [label="(Call,len - (SHA256_DIGEST_LENGTH + pad + 1))"];
"1000125" [label="(MethodParameterIn,unsigned char *out)"];
"1000369" [label="(Call,SHA256_Final(out + plen, &key->md))"];
"1000481" [label="(Identifier,in)"];
"1000446" [label="(Call,out + aes_off)"];
"1001943" [label="(Literal,1)"];
"1000426" [label="(Call,out + aes_off)"];
"1000257" [label="(Call,SHA256_Update(&key->md, in + iv, sha_off))"];
"1000646" [label="(Call,inp_len - len)"];
"1001887" [label="(Call,out + len - 1 - pad)"];
"1000363" [label="(Call,in + aes_off)"];
"1000595" [label="(Call,len - (SHA256_DIGEST_LENGTH + 1))"];
"1000407" [label="(Call,len - plen - 1)"];
"1000356" [label="(Call,in != out)"];
"1000573" [label="(Call,SHA256_Update(&key->md, out, inp_len))"];
"1000563" [label="(Call,len < (iv + SHA256_DIGEST_LENGTH + 1))"];
"1000488" [label="(Call,ctx->iv)"];
"1000687" [label="(Call,len -= SHA256_DIGEST_LENGTH)"];
"1000412" [label="(Call,plen < len)"];
"1000127" [label="(MethodParameterIn,size_t len)"];
"1000534" [label="(Call,iv = AES_BLOCK_SIZE)"];
"1000590" [label="(Call,len - 1)"];
"1000359" [label="(Call,memcpy(out + aes_off, in + aes_off, plen - aes_off))"];
"1000384" [label="(Call,SHA256_Update(&key->md, out + plen, SHA256_DIGEST_LENGTH))"];
"1000370" [label="(Call,out + plen)"];
"1001663" [label="(Call,len - inp_len)"];
"1000429" [label="(Call,len - aes_off)"];
"1001739" [label="(Call,len - 1 - maxpad - SHA256_DIGEST_LENGTH)"];
"1000171" [label="(Identifier,AES_BLOCK_SIZE)"];
"1001735" [label="(Call,*p =\n                    out + len - 1 - maxpad - SHA256_DIGEST_LENGTH)"];
"1000580" [label="(Call,out += iv)"];
"1000417" [label="(Call,out[plen] = l)"];
"1000394" [label="(Call,out + plen)"];
"1001727" [label="(Call,out += inp_len)"];
"1000168" [label="(ControlStructure,if (len % AES_BLOCK_SIZE))"];
"1000583" [label="(Call,len -= iv)"];
"1001940" [label="(Identifier,out)"];
"1000423" [label="(Call,out + aes_off)"];
"1000190" [label="(Call,(plen + SHA256_DIGEST_LENGTH +\n                   AES_BLOCK_SIZE) & -AES_BLOCK_SIZE)"];
"1000170" [label="(Identifier,len)"];
"1001935" [label="(Call,SHA256_Update(&key->md, out, len))"];
"1000482" [label="(Identifier,out)"];
"1000193" [label="(Call,SHA256_DIGEST_LENGTH +\n                   AES_BLOCK_SIZE)"];
"1000449" [label="(Call,len - aes_off)"];
"1000727" [label="(Call,len -= j)"];
"1000717" [label="(Call,SHA256_Update(&key->md, out, j))"];
"1001936" [label="(Call,&key->md)"];
"1001737" [label="(Call,out + len - 1 - maxpad - SHA256_DIGEST_LENGTH)"];
"1000169" [label="(Call,len % AES_BLOCK_SIZE)"];
"1000360" [label="(Call,out + aes_off)"];
"1000700" [label="(Call,len - (256 + SHA256_CBLOCK))"];
"1001941" [label="(Identifier,len)"];
"1000176" [label="(Identifier,ctx)"];
"1000484" [label="(Call,&key->ks)"];
"1001889" [label="(Call,len - 1 - pad)"];
"1000586" [label="(Call,pad = out[len - 1])"];
"1001944" [label="(MethodReturn,static int)"];
"1000283" [label="(Call,in + iv + sha_off)"];
"1001909" [label="(Call,out[i] ^ pad)"];
"1001730" [label="(Call,len -= inp_len)"];
"1001622" [label="(Call,len += SHA256_DIGEST_LENGTH)"];
"1000268" [label="(Call,aesni_cbc_sha256_enc(in, out, blocks, &key->ks,\n                                       ctx->iv, &key->md, in + iv + sha_off))"];
"1000870" [label="(Call,c = out[j])"];
"1000442" [label="(Call,aesni_cbc_encrypt(in + aes_off, out + aes_off, len - aes_off,\n                              &key->ks, ctx->iv, 1))"];
"1000491" [label="(Literal,0)"];
"1000863" [label="(Call,j < len)"];
"1000422" [label="(Call,aesni_cbc_encrypt(out + aes_off, out + aes_off, len - aes_off,\n                              &key->ks, ctx->iv, 1))"];
"1000126" [label="(MethodParameterIn,const unsigned char *in)"];
"1000553" [label="(Call,out[i] ^ pmac->c[i])"];
"1000344" [label="(Call,in + sha_off)"];
"1000480" [label="(Call,aesni_cbc_encrypt(in, out, len, &key->ks, ctx->iv, 0))"];
"1001885" [label="(Call,out = out + len - 1 - pad)"];
"1000196" [label="(Call,-AES_BLOCK_SIZE)"];
"1001749" [label="(Call,out - p)"];
"1000173" [label="(Literal,0)"];
"1000191" [label="(Call,plen + SHA256_DIGEST_LENGTH +\n                   AES_BLOCK_SIZE)"];
"1000494" [label="(Identifier,plen)"];
"1000339" [label="(Call,SHA256_Update(&key->md, in + sha_off, plen - sha_off))"];
"1000389" [label="(Call,out + plen)"];
"1000351" [label="(Call,plen != len)"];
"1001935" -> "1001934"  [label="AST: "];
"1001935" -> "1001941"  [label="CFG: "];
"1001936" -> "1001935"  [label="AST: "];
"1001940" -> "1001935"  [label="AST: "];
"1001941" -> "1001935"  [label="AST: "];
"1001943" -> "1001935"  [label="CFG: "];
"1001935" -> "1001944"  [label="DDG: out"];
"1001935" -> "1001944"  [label="DDG: SHA256_Update(&key->md, out, len)"];
"1001935" -> "1001944"  [label="DDG: &key->md"];
"1001935" -> "1001944"  [label="DDG: len"];
"1000480" -> "1001935"  [label="DDG: out"];
"1000480" -> "1001935"  [label="DDG: len"];
"1000125" -> "1001935"  [label="DDG: out"];
"1000127" -> "1001935"  [label="DDG: len"];
"1000480" -> "1000461"  [label="AST: "];
"1000480" -> "1000491"  [label="CFG: "];
"1000481" -> "1000480"  [label="AST: "];
"1000482" -> "1000480"  [label="AST: "];
"1000483" -> "1000480"  [label="AST: "];
"1000484" -> "1000480"  [label="AST: "];
"1000488" -> "1000480"  [label="AST: "];
"1000491" -> "1000480"  [label="AST: "];
"1000494" -> "1000480"  [label="CFG: "];
"1000480" -> "1001944"  [label="DDG: ctx->iv"];
"1000480" -> "1001944"  [label="DDG: aesni_cbc_encrypt(in, out, len, &key->ks, ctx->iv, 0)"];
"1000480" -> "1001944"  [label="DDG: in"];
"1000480" -> "1001944"  [label="DDG: &key->ks"];
"1000480" -> "1001944"  [label="DDG: out"];
"1000126" -> "1000480"  [label="DDG: in"];
"1000125" -> "1000480"  [label="DDG: out"];
"1000169" -> "1000480"  [label="DDG: len"];
"1000127" -> "1000480"  [label="DDG: len"];
"1000480" -> "1000553"  [label="DDG: out"];
"1000480" -> "1000563"  [label="DDG: len"];
"1000480" -> "1000573"  [label="DDG: out"];
"1000126" -> "1000123"  [label="AST: "];
"1000126" -> "1001944"  [label="DDG: in"];
"1000126" -> "1000257"  [label="DDG: in"];
"1000126" -> "1000262"  [label="DDG: in"];
"1000126" -> "1000268"  [label="DDG: in"];
"1000126" -> "1000283"  [label="DDG: in"];
"1000126" -> "1000339"  [label="DDG: in"];
"1000126" -> "1000344"  [label="DDG: in"];
"1000126" -> "1000356"  [label="DDG: in"];
"1000126" -> "1000359"  [label="DDG: in"];
"1000126" -> "1000363"  [label="DDG: in"];
"1000126" -> "1000442"  [label="DDG: in"];
"1000126" -> "1000443"  [label="DDG: in"];
"1000125" -> "1000123"  [label="AST: "];
"1000125" -> "1001944"  [label="DDG: out"];
"1000125" -> "1000268"  [label="DDG: out"];
"1000125" -> "1000356"  [label="DDG: out"];
"1000125" -> "1000359"  [label="DDG: out"];
"1000125" -> "1000360"  [label="DDG: out"];
"1000125" -> "1000369"  [label="DDG: out"];
"1000125" -> "1000370"  [label="DDG: out"];
"1000125" -> "1000384"  [label="DDG: out"];
"1000125" -> "1000389"  [label="DDG: out"];
"1000125" -> "1000393"  [label="DDG: out"];
"1000125" -> "1000394"  [label="DDG: out"];
"1000125" -> "1000417"  [label="DDG: out"];
"1000125" -> "1000422"  [label="DDG: out"];
"1000125" -> "1000423"  [label="DDG: out"];
"1000125" -> "1000426"  [label="DDG: out"];
"1000125" -> "1000442"  [label="DDG: out"];
"1000125" -> "1000446"  [label="DDG: out"];
"1000125" -> "1000553"  [label="DDG: out"];
"1000125" -> "1000573"  [label="DDG: out"];
"1000125" -> "1000580"  [label="DDG: out"];
"1000125" -> "1000586"  [label="DDG: out"];
"1000125" -> "1000717"  [label="DDG: out"];
"1000125" -> "1000724"  [label="DDG: out"];
"1000125" -> "1000870"  [label="DDG: out"];
"1000125" -> "1001727"  [label="DDG: out"];
"1000125" -> "1001735"  [label="DDG: out"];
"1000125" -> "1001737"  [label="DDG: out"];
"1000125" -> "1001749"  [label="DDG: out"];
"1000125" -> "1001885"  [label="DDG: out"];
"1000125" -> "1001887"  [label="DDG: out"];
"1000125" -> "1001909"  [label="DDG: out"];
"1000169" -> "1000168"  [label="AST: "];
"1000169" -> "1000171"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000171" -> "1000169"  [label="AST: "];
"1000173" -> "1000169"  [label="CFG: "];
"1000176" -> "1000169"  [label="CFG: "];
"1000169" -> "1001944"  [label="DDG: len % AES_BLOCK_SIZE"];
"1000169" -> "1001944"  [label="DDG: AES_BLOCK_SIZE"];
"1000169" -> "1001944"  [label="DDG: len"];
"1000127" -> "1000169"  [label="DDG: len"];
"1000169" -> "1000183"  [label="DDG: len"];
"1000169" -> "1000188"  [label="DDG: len"];
"1000169" -> "1000190"  [label="DDG: AES_BLOCK_SIZE"];
"1000169" -> "1000191"  [label="DDG: AES_BLOCK_SIZE"];
"1000169" -> "1000193"  [label="DDG: AES_BLOCK_SIZE"];
"1000169" -> "1000196"  [label="DDG: AES_BLOCK_SIZE"];
"1000169" -> "1000351"  [label="DDG: len"];
"1000169" -> "1000534"  [label="DDG: AES_BLOCK_SIZE"];
"1000127" -> "1000123"  [label="AST: "];
"1000127" -> "1001944"  [label="DDG: len"];
"1000127" -> "1000183"  [label="DDG: len"];
"1000127" -> "1000188"  [label="DDG: len"];
"1000127" -> "1000351"  [label="DDG: len"];
"1000127" -> "1000407"  [label="DDG: len"];
"1000127" -> "1000412"  [label="DDG: len"];
"1000127" -> "1000429"  [label="DDG: len"];
"1000127" -> "1000449"  [label="DDG: len"];
"1000127" -> "1000563"  [label="DDG: len"];
"1000127" -> "1000583"  [label="DDG: len"];
"1000127" -> "1000590"  [label="DDG: len"];
"1000127" -> "1000595"  [label="DDG: len"];
"1000127" -> "1000634"  [label="DDG: len"];
"1000127" -> "1000646"  [label="DDG: len"];
"1000127" -> "1000687"  [label="DDG: len"];
"1000127" -> "1000691"  [label="DDG: len"];
"1000127" -> "1000700"  [label="DDG: len"];
"1000127" -> "1000727"  [label="DDG: len"];
"1000127" -> "1000863"  [label="DDG: len"];
"1000127" -> "1001622"  [label="DDG: len"];
"1000127" -> "1001663"  [label="DDG: len"];
"1000127" -> "1001730"  [label="DDG: len"];
"1000127" -> "1001739"  [label="DDG: len"];
"1000127" -> "1001889"  [label="DDG: len"];
}
