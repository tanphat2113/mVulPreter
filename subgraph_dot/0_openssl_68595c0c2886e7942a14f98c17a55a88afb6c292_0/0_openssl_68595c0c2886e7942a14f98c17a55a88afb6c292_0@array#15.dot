digraph "0_openssl_68595c0c2886e7942a14f98c17a55a88afb6c292_0@array" {
"1000234" [label="(Call,OPENSSL_ia32cap_P[0] & (1<<30))"];
"1000238" [label="(Call,1<<30)"];
"1000224" [label="(Call,(OPENSSL_ia32cap_P[1] & (1 << (43 - 32))) /* XOP? */\n             | (OPENSSL_ia32cap_P[0] & (1<<30)))"];
"1000223" [label="(Call,((OPENSSL_ia32cap_P[1] & (1 << (43 - 32))) /* XOP? */\n             | (OPENSSL_ia32cap_P[0] & (1<<30))) &&    /* \"Intel CPU\"? */\n            plen > (sha_off + iv) &&\n            (blocks = (plen - (sha_off + iv)) / SHA256_CBLOCK))"];
"1000213" [label="(Call,OPENSSL_ia32cap_P[1] & (1 << (60 - 32)) && /* AVX? */\n            ((OPENSSL_ia32cap_P[1] & (1 << (43 - 32))) /* XOP? */\n             | (OPENSSL_ia32cap_P[0] & (1<<30))) &&    /* \"Intel CPU\"? */\n            plen > (sha_off + iv) &&\n            (blocks = (plen - (sha_off + iv)) / SHA256_CBLOCK))"];
"1000212" [label="(ControlStructure,if (OPENSSL_ia32cap_P[1] & (1 << (60 - 32)) && /* AVX? */\n            ((OPENSSL_ia32cap_P[1] & (1 << (43 - 32))) /* XOP? */\n             | (OPENSSL_ia32cap_P[0] & (1<<30))) &&    /* \"Intel CPU\"? */\n            plen > (sha_off + iv) &&\n            (blocks = (plen - (sha_off + iv)) / SHA256_CBLOCK)))"];
"1000234" [label="(Call,OPENSSL_ia32cap_P[0] & (1<<30))"];
"1000243" [label="(Identifier,plen)"];
"1000224" [label="(Call,(OPENSSL_ia32cap_P[1] & (1 << (43 - 32))) /* XOP? */\n             | (OPENSSL_ia32cap_P[0] & (1<<30)))"];
"1000225" [label="(Call,OPENSSL_ia32cap_P[1] & (1 << (43 - 32)))"];
"1001944" [label="(MethodReturn,static int)"];
"1000235" [label="(Call,OPENSSL_ia32cap_P[0])"];
"1000240" [label="(Literal,30)"];
"1000239" [label="(Literal,1)"];
"1000241" [label="(Call,plen > (sha_off + iv) &&\n            (blocks = (plen - (sha_off + iv)) / SHA256_CBLOCK))"];
"1000214" [label="(Call,OPENSSL_ia32cap_P[1] & (1 << (60 - 32)))"];
"1000334" [label="(Identifier,sha_off)"];
"1000260" [label="(Identifier,key)"];
"1000213" [label="(Call,OPENSSL_ia32cap_P[1] & (1 << (60 - 32)) && /* AVX? */\n            ((OPENSSL_ia32cap_P[1] & (1 << (43 - 32))) /* XOP? */\n             | (OPENSSL_ia32cap_P[0] & (1<<30))) &&    /* \"Intel CPU\"? */\n            plen > (sha_off + iv) &&\n            (blocks = (plen - (sha_off + iv)) / SHA256_CBLOCK))"];
"1000223" [label="(Call,((OPENSSL_ia32cap_P[1] & (1 << (43 - 32))) /* XOP? */\n             | (OPENSSL_ia32cap_P[0] & (1<<30))) &&    /* \"Intel CPU\"? */\n            plen > (sha_off + iv) &&\n            (blocks = (plen - (sha_off + iv)) / SHA256_CBLOCK))"];
"1000238" [label="(Call,1<<30)"];
"1000234" -> "1000224"  [label="AST: "];
"1000234" -> "1000238"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000238" -> "1000234"  [label="AST: "];
"1000224" -> "1000234"  [label="CFG: "];
"1000234" -> "1001944"  [label="DDG: "];
"1000234" -> "1001944"  [label="DDG: "];
"1000234" -> "1000224"  [label="DDG: "];
"1000234" -> "1000224"  [label="DDG: "];
"1000238" -> "1000234"  [label="DDG: "];
"1000238" -> "1000234"  [label="DDG: "];
"1000238" -> "1000240"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="AST: "];
"1000224" -> "1000223"  [label="AST: "];
"1000225" -> "1000224"  [label="AST: "];
"1000243" -> "1000224"  [label="CFG: "];
"1000223" -> "1000224"  [label="CFG: "];
"1000224" -> "1001944"  [label="DDG: "];
"1000224" -> "1001944"  [label="DDG: "];
"1000224" -> "1000223"  [label="DDG: "];
"1000224" -> "1000223"  [label="DDG: "];
"1000225" -> "1000224"  [label="DDG: "];
"1000225" -> "1000224"  [label="DDG: "];
"1000223" -> "1000213"  [label="AST: "];
"1000223" -> "1000241"  [label="CFG: "];
"1000241" -> "1000223"  [label="AST: "];
"1000213" -> "1000223"  [label="CFG: "];
"1000223" -> "1001944"  [label="DDG: "];
"1000223" -> "1001944"  [label="DDG: "];
"1000223" -> "1000213"  [label="DDG: "];
"1000223" -> "1000213"  [label="DDG: "];
"1000241" -> "1000223"  [label="DDG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000213" -> "1000214"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000260" -> "1000213"  [label="CFG: "];
"1000334" -> "1000213"  [label="CFG: "];
"1000213" -> "1001944"  [label="DDG: "];
"1000213" -> "1001944"  [label="DDG: "];
"1000213" -> "1001944"  [label="DDG: "];
"1000214" -> "1000213"  [label="DDG: "];
"1000214" -> "1000213"  [label="DDG: "];
}
