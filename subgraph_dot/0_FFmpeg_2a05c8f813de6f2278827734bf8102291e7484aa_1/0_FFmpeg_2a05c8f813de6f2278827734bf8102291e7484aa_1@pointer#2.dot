digraph "0_FFmpeg_2a05c8f813de6f2278827734bf8102291e7484aa_1@pointer" {
"1000102" [label="(MethodParameterIn,const char *uri)"];
"1000139" [label="(Call,av_strdup(uri))"];
"1000135" [label="(Call,s->location = av_strdup(uri))"];
"1000142" [label="(Call,!s->location)"];
"1000237" [label="(Call,http_listen(h, uri, flags, options))"];
"1000236" [label="(Return,return http_listen(h, uri, flags, options);)"];
"1000150" [label="(Identifier,options)"];
"1000236" [label="(Return,return http_listen(h, uri, flags, options);)"];
"1000143" [label="(Call,s->location)"];
"1000186" [label="(Call,av_log(h, AV_LOG_WARNING,\n                   \"No trailing CRLF found in HTTP header.\n\"))"];
"1000141" [label="(ControlStructure,if (!s->location))"];
"1000142" [label="(Call,!s->location)"];
"1000105" [label="(Block,)"];
"1000136" [label="(Call,s->location)"];
"1000139" [label="(Call,av_strdup(uri))"];
"1000235" [label="(Block,)"];
"1000140" [label="(Identifier,uri)"];
"1000144" [label="(Identifier,s)"];
"1000241" [label="(Identifier,options)"];
"1000102" [label="(MethodParameterIn,const char *uri)"];
"1000103" [label="(MethodParameterIn,int flags)"];
"1000258" [label="(MethodReturn,static int)"];
"1000135" [label="(Call,s->location = av_strdup(uri))"];
"1000104" [label="(MethodParameterIn,AVDictionary **options)"];
"1000239" [label="(Identifier,uri)"];
"1000101" [label="(MethodParameterIn,URLContext *h)"];
"1000238" [label="(Identifier,h)"];
"1000237" [label="(Call,http_listen(h, uri, flags, options))"];
"1000240" [label="(Identifier,flags)"];
"1000148" [label="(Identifier,ENOMEM)"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000258"  [label="DDG: uri"];
"1000102" -> "1000139"  [label="DDG: uri"];
"1000102" -> "1000237"  [label="DDG: uri"];
"1000139" -> "1000135"  [label="AST: "];
"1000139" -> "1000140"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000135" -> "1000139"  [label="CFG: "];
"1000139" -> "1000258"  [label="DDG: uri"];
"1000139" -> "1000135"  [label="DDG: uri"];
"1000139" -> "1000237"  [label="DDG: uri"];
"1000135" -> "1000105"  [label="AST: "];
"1000136" -> "1000135"  [label="AST: "];
"1000144" -> "1000135"  [label="CFG: "];
"1000135" -> "1000258"  [label="DDG: av_strdup(uri)"];
"1000135" -> "1000142"  [label="DDG: s->location"];
"1000142" -> "1000141"  [label="AST: "];
"1000142" -> "1000143"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000148" -> "1000142"  [label="CFG: "];
"1000150" -> "1000142"  [label="CFG: "];
"1000142" -> "1000258"  [label="DDG: !s->location"];
"1000142" -> "1000258"  [label="DDG: s->location"];
"1000237" -> "1000236"  [label="AST: "];
"1000237" -> "1000241"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000239" -> "1000237"  [label="AST: "];
"1000240" -> "1000237"  [label="AST: "];
"1000241" -> "1000237"  [label="AST: "];
"1000236" -> "1000237"  [label="CFG: "];
"1000237" -> "1000258"  [label="DDG: http_listen(h, uri, flags, options)"];
"1000237" -> "1000258"  [label="DDG: uri"];
"1000237" -> "1000258"  [label="DDG: flags"];
"1000237" -> "1000258"  [label="DDG: h"];
"1000237" -> "1000258"  [label="DDG: options"];
"1000237" -> "1000236"  [label="DDG: http_listen(h, uri, flags, options)"];
"1000186" -> "1000237"  [label="DDG: h"];
"1000101" -> "1000237"  [label="DDG: h"];
"1000103" -> "1000237"  [label="DDG: flags"];
"1000104" -> "1000237"  [label="DDG: options"];
"1000236" -> "1000235"  [label="AST: "];
"1000258" -> "1000236"  [label="CFG: "];
"1000236" -> "1000258"  [label="DDG: <RET>"];
}
