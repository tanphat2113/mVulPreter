digraph "0_libgd_58b6dde319c301b0eae27d12e2a659e067d80558@pointer" {
"1000331" [label="(Call,gdFree(decompression_buffer))"];
"1000290" [label="(Call,decompression_buffer == NULL)"];
"1000280" [label="(Call,decompression_buffer = (int*) gdMalloc(image_block_size * sizeof(int)))"];
"1000282" [label="(Call,(int*) gdMalloc(image_block_size * sizeof(int)))"];
"1000284" [label="(Call,gdMalloc(image_block_size * sizeof(int)))"];
"1000285" [label="(Call,image_block_size * sizeof(int))"];
"1000207" [label="(Call,image_block_size * sizeof(int))"];
"1000177" [label="(Call,overflow2(image_block_size, sizeof(int)))"];
"1000117" [label="(Call,image_block_size = (tga->width * tga->height) * pixel_block_size)"];
"1000119" [label="(Call,(tga->width * tga->height) * pixel_block_size)"];
"1000120" [label="(Call,tga->width * tga->height)"];
"1000109" [label="(Call,pixel_block_size = (tga->bits / 8))"];
"1000111" [label="(Call,tga->bits / 8)"];
"1000212" [label="(Call,tga->bitmap == NULL)"];
"1000200" [label="(Call,tga->bitmap = (int *) gdMalloc(image_block_size * sizeof(int)))"];
"1000204" [label="(Call,(int *) gdMalloc(image_block_size * sizeof(int)))"];
"1000206" [label="(Call,gdMalloc(image_block_size * sizeof(int)))"];
"1000120" [label="(Call,tga->width * tga->height)"];
"1000204" [label="(Call,(int *) gdMalloc(image_block_size * sizeof(int)))"];
"1000109" [label="(Call,pixel_block_size = (tga->bits / 8))"];
"1000124" [label="(Call,tga->height)"];
"1000476" [label="(Call,gdFree( decompression_buffer ))"];
"1000389" [label="(Call,decompression_buffer[ buffer_caret ] & ~TGA_RLE_FLAG)"];
"1000307" [label="(Call,conversion_buffer == NULL)"];
"1000289" [label="(ControlStructure,if (decompression_buffer == NULL))"];
"1000452" [label="(Call,decompression_buffer[ buffer_caret ] + 1)"];
"1000176" [label="(ControlStructure,if(overflow2(image_block_size, sizeof(int))))"];
"1000121" [label="(Call,tga->width)"];
"1000151" [label="(Call,overflow2(tga->width, tga->height))"];
"1000211" [label="(ControlStructure,if (tga->bitmap == NULL))"];
"1000201" [label="(Call,tga->bitmap)"];
"1000430" [label="(Call,tga->bitmap + bitmap_caret)"];
"1000291" [label="(Identifier,decompression_buffer)"];
"1000435" [label="(Call,decompression_buffer + buffer_caret)"];
"1000450" [label="(Call,encoded_pixels = decompression_buffer[ buffer_caret ] + 1)"];
"1000219" [label="(Literal,1)"];
"1000483" [label="(Call,memcpy(tga->bitmap + bitmap_caret, decompression_buffer + buffer_caret, encoded_pixels * pixel_block_size * sizeof(int)))"];
"1000287" [label="(Call,sizeof(int))"];
"1000213" [label="(Call,tga->bitmap)"];
"1000184" [label="(Literal,1)"];
"1000208" [label="(Identifier,image_block_size)"];
"1000224" [label="(Block,)"];
"1000370" [label="(Call,gdFree( decompression_buffer ))"];
"1000127" [label="(Identifier,pixel_block_size)"];
"1000302" [label="(Call,image_block_size * sizeof(unsigned char))"];
"1000412" [label="(Call,gdFree( decompression_buffer ))"];
"1000332" [label="(Identifier,decompression_buffer)"];
"1000189" [label="(Identifier,tga)"];
"1000118" [label="(Identifier,image_block_size)"];
"1000177" [label="(Call,overflow2(image_block_size, sizeof(int)))"];
"1000178" [label="(Identifier,image_block_size)"];
"1000231" [label="(Call,image_block_size * sizeof(unsigned char))"];
"1000119" [label="(Call,(tga->width * tga->height) * pixel_block_size)"];
"1000212" [label="(Call,tga->bitmap == NULL)"];
"1000112" [label="(Call,tga->bits)"];
"1000296" [label="(Literal,1)"];
"1000282" [label="(Call,(int*) gdMalloc(image_block_size * sizeof(int)))"];
"1000292" [label="(Identifier,NULL)"];
"1000216" [label="(Identifier,NULL)"];
"1000284" [label="(Call,gdMalloc(image_block_size * sizeof(int)))"];
"1000107" [label="(Block,)"];
"1000335" [label="(Literal,1)"];
"1000313" [label="(Call,gdFree( decompression_buffer ))"];
"1000163" [label="(Call,overflow2(tga->width * tga->height, pixel_block_size))"];
"1000115" [label="(Literal,8)"];
"1000331" [label="(Call,gdFree(decompression_buffer))"];
"1000429" [label="(Call,memcpy(tga->bitmap + bitmap_caret, decompression_buffer + buffer_caret, pixel_block_size * sizeof(int)))"];
"1000286" [label="(Identifier,image_block_size)"];
"1000110" [label="(Identifier,pixel_block_size)"];
"1000379" [label="(Call,decompression_buffer[buffer_caret] & TGA_RLE_FLAG)"];
"1000484" [label="(Call,tga->bitmap + bitmap_caret)"];
"1000214" [label="(Identifier,tga)"];
"1000200" [label="(Call,tga->bitmap = (int *) gdMalloc(image_block_size * sizeof(int)))"];
"1000328" [label="(Block,)"];
"1000179" [label="(Call,sizeof(int))"];
"1000222" [label="(Identifier,tga)"];
"1000298" [label="(Identifier,conversion_buffer)"];
"1000111" [label="(Call,tga->bits / 8)"];
"1000209" [label="(Call,sizeof(int))"];
"1000206" [label="(Call,gdMalloc(image_block_size * sizeof(int)))"];
"1000236" [label="(Call,conversion_buffer == NULL)"];
"1000515" [label="(MethodReturn,int)"];
"1000280" [label="(Call,decompression_buffer = (int*) gdMalloc(image_block_size * sizeof(int)))"];
"1000281" [label="(Identifier,decompression_buffer)"];
"1000290" [label="(Call,decompression_buffer == NULL)"];
"1000285" [label="(Call,image_block_size * sizeof(int))"];
"1000117" [label="(Call,image_block_size = (tga->width * tga->height) * pixel_block_size)"];
"1000207" [label="(Call,image_block_size * sizeof(int))"];
"1000508" [label="(Call,gdFree( decompression_buffer ))"];
"1000489" [label="(Call,decompression_buffer + buffer_caret)"];
"1000130" [label="(Identifier,decompression_buffer)"];
"1000331" -> "1000328"  [label="AST: "];
"1000331" -> "1000332"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000335" -> "1000331"  [label="CFG: "];
"1000331" -> "1000515"  [label="DDG: gdFree(decompression_buffer)"];
"1000331" -> "1000515"  [label="DDG: decompression_buffer"];
"1000290" -> "1000331"  [label="DDG: decompression_buffer"];
"1000290" -> "1000289"  [label="AST: "];
"1000290" -> "1000292"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000292" -> "1000290"  [label="AST: "];
"1000296" -> "1000290"  [label="CFG: "];
"1000298" -> "1000290"  [label="CFG: "];
"1000290" -> "1000515"  [label="DDG: decompression_buffer"];
"1000290" -> "1000515"  [label="DDG: NULL"];
"1000290" -> "1000515"  [label="DDG: decompression_buffer == NULL"];
"1000280" -> "1000290"  [label="DDG: decompression_buffer"];
"1000212" -> "1000290"  [label="DDG: NULL"];
"1000290" -> "1000307"  [label="DDG: NULL"];
"1000290" -> "1000313"  [label="DDG: decompression_buffer"];
"1000290" -> "1000370"  [label="DDG: decompression_buffer"];
"1000290" -> "1000379"  [label="DDG: decompression_buffer"];
"1000290" -> "1000389"  [label="DDG: decompression_buffer"];
"1000290" -> "1000412"  [label="DDG: decompression_buffer"];
"1000290" -> "1000429"  [label="DDG: decompression_buffer"];
"1000290" -> "1000435"  [label="DDG: decompression_buffer"];
"1000290" -> "1000450"  [label="DDG: decompression_buffer"];
"1000290" -> "1000452"  [label="DDG: decompression_buffer"];
"1000290" -> "1000476"  [label="DDG: decompression_buffer"];
"1000290" -> "1000483"  [label="DDG: decompression_buffer"];
"1000290" -> "1000489"  [label="DDG: decompression_buffer"];
"1000290" -> "1000508"  [label="DDG: decompression_buffer"];
"1000280" -> "1000224"  [label="AST: "];
"1000280" -> "1000282"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000282" -> "1000280"  [label="AST: "];
"1000291" -> "1000280"  [label="CFG: "];
"1000280" -> "1000515"  [label="DDG: (int*) gdMalloc(image_block_size * sizeof(int))"];
"1000282" -> "1000280"  [label="DDG: gdMalloc(image_block_size * sizeof(int))"];
"1000282" -> "1000284"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000284" -> "1000282"  [label="AST: "];
"1000282" -> "1000515"  [label="DDG: gdMalloc(image_block_size * sizeof(int))"];
"1000284" -> "1000282"  [label="DDG: image_block_size * sizeof(int)"];
"1000284" -> "1000285"  [label="CFG: "];
"1000285" -> "1000284"  [label="AST: "];
"1000284" -> "1000515"  [label="DDG: image_block_size * sizeof(int)"];
"1000285" -> "1000284"  [label="DDG: image_block_size"];
"1000285" -> "1000287"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000285"  [label="AST: "];
"1000285" -> "1000515"  [label="DDG: image_block_size"];
"1000207" -> "1000285"  [label="DDG: image_block_size"];
"1000285" -> "1000302"  [label="DDG: image_block_size"];
"1000207" -> "1000206"  [label="AST: "];
"1000207" -> "1000209"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000209" -> "1000207"  [label="AST: "];
"1000206" -> "1000207"  [label="CFG: "];
"1000207" -> "1000515"  [label="DDG: image_block_size"];
"1000207" -> "1000206"  [label="DDG: image_block_size"];
"1000177" -> "1000207"  [label="DDG: image_block_size"];
"1000207" -> "1000231"  [label="DDG: image_block_size"];
"1000177" -> "1000176"  [label="AST: "];
"1000177" -> "1000179"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000179" -> "1000177"  [label="AST: "];
"1000184" -> "1000177"  [label="CFG: "];
"1000189" -> "1000177"  [label="CFG: "];
"1000177" -> "1000515"  [label="DDG: image_block_size"];
"1000177" -> "1000515"  [label="DDG: overflow2(image_block_size, sizeof(int))"];
"1000117" -> "1000177"  [label="DDG: image_block_size"];
"1000117" -> "1000107"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000130" -> "1000117"  [label="CFG: "];
"1000117" -> "1000515"  [label="DDG: image_block_size"];
"1000117" -> "1000515"  [label="DDG: (tga->width * tga->height) * pixel_block_size"];
"1000119" -> "1000117"  [label="DDG: tga->width * tga->height"];
"1000119" -> "1000117"  [label="DDG: pixel_block_size"];
"1000119" -> "1000127"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000127" -> "1000119"  [label="AST: "];
"1000119" -> "1000515"  [label="DDG: pixel_block_size"];
"1000119" -> "1000515"  [label="DDG: tga->width * tga->height"];
"1000120" -> "1000119"  [label="DDG: tga->width"];
"1000120" -> "1000119"  [label="DDG: tga->height"];
"1000109" -> "1000119"  [label="DDG: pixel_block_size"];
"1000119" -> "1000163"  [label="DDG: pixel_block_size"];
"1000120" -> "1000124"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000124" -> "1000120"  [label="AST: "];
"1000127" -> "1000120"  [label="CFG: "];
"1000120" -> "1000151"  [label="DDG: tga->width"];
"1000120" -> "1000151"  [label="DDG: tga->height"];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000118" -> "1000109"  [label="CFG: "];
"1000109" -> "1000515"  [label="DDG: tga->bits / 8"];
"1000111" -> "1000109"  [label="DDG: tga->bits"];
"1000111" -> "1000109"  [label="DDG: 8"];
"1000111" -> "1000115"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000115" -> "1000111"  [label="AST: "];
"1000111" -> "1000515"  [label="DDG: tga->bits"];
"1000212" -> "1000211"  [label="AST: "];
"1000212" -> "1000216"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000216" -> "1000212"  [label="AST: "];
"1000219" -> "1000212"  [label="CFG: "];
"1000222" -> "1000212"  [label="CFG: "];
"1000212" -> "1000515"  [label="DDG: NULL"];
"1000212" -> "1000515"  [label="DDG: tga->bitmap == NULL"];
"1000212" -> "1000515"  [label="DDG: tga->bitmap"];
"1000200" -> "1000212"  [label="DDG: tga->bitmap"];
"1000212" -> "1000236"  [label="DDG: NULL"];
"1000212" -> "1000429"  [label="DDG: tga->bitmap"];
"1000212" -> "1000430"  [label="DDG: tga->bitmap"];
"1000212" -> "1000483"  [label="DDG: tga->bitmap"];
"1000212" -> "1000484"  [label="DDG: tga->bitmap"];
"1000200" -> "1000107"  [label="AST: "];
"1000200" -> "1000204"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000204" -> "1000200"  [label="AST: "];
"1000214" -> "1000200"  [label="CFG: "];
"1000200" -> "1000515"  [label="DDG: (int *) gdMalloc(image_block_size * sizeof(int))"];
"1000204" -> "1000200"  [label="DDG: gdMalloc(image_block_size * sizeof(int))"];
"1000204" -> "1000206"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000206" -> "1000204"  [label="AST: "];
"1000204" -> "1000515"  [label="DDG: gdMalloc(image_block_size * sizeof(int))"];
"1000206" -> "1000204"  [label="DDG: image_block_size * sizeof(int)"];
"1000206" -> "1000515"  [label="DDG: image_block_size * sizeof(int)"];
}
