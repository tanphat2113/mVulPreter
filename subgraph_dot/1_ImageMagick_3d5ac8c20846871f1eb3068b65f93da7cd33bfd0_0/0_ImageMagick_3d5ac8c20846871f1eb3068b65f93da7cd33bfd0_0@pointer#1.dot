digraph "0_ImageMagick_3d5ac8c20846871f1eb3068b65f93da7cd33bfd0_0@pointer" {
"1000888" [label="(Call,image->rows == 1080)"];
"1000865" [label="(Call,image->rows-1)"];
"1000794" [label="(Call,(unsigned int) image->rows)"];
"1000206" [label="(Call,(size_t) (1 << (i+2)) > image->rows)"];
"1000207" [label="(Call,(size_t) (1 << (i+2)))"];
"1000209" [label="(Call,1 << (i+2))"];
"1000188" [label="(Call,i < 6)"];
"1000185" [label="(Call,i=1)"];
"1000191" [label="(Call,i++)"];
"1000887" [label="(Call,(image->rows == 1080) ||\n       (image->columns == 4096) || (image->rows == 2160))"];
"1000881" [label="(Call,(image->columns == 2048) || (image->rows == 1080) ||\n       (image->columns == 4096) || (image->rows == 2160))"];
"1000875" [label="(Call,(image->depth == 12) &&\n      ((image->columns == 2048) || (image->rows == 1080) ||\n       (image->columns == 4096) || (image->rows == 2160)))"];
"1000899" [label="(Call,image->rows == 2160)"];
"1000893" [label="(Call,(image->columns == 4096) || (image->rows == 2160))"];
"1000945" [label="(Call,(ssize_t) image->rows)"];
"1000943" [label="(Call,y < (ssize_t) image->rows)"];
"1000957" [label="(Call,GetVirtualPixels(image,0,y,image->columns,1,&image->exception))"];
"1000955" [label="(Call,p=GetVirtualPixels(image,0,y,image->columns,1,&image->exception))"];
"1000970" [label="(Call,p == (const PixelPacket *) NULL)"];
"1001079" [label="(Call,GetPixelLuma(image,p))"];
"1001077" [label="(Call,scale*GetPixelLuma(image,p))"];
"1001075" [label="(Call,(int) (scale*GetPixelLuma(image,p)))"];
"1001072" [label="(Call,*q=(int) (scale*GetPixelLuma(image,p)))"];
"1001153" [label="(Call,p++)"];
"1001157" [label="(Call,SetImageProgress(image,SaveImageTag,(MagickOffsetType) y,\n      image->rows))"];
"1001155" [label="(Call,status=SetImageProgress(image,SaveImageTag,(MagickOffsetType) y,\n      image->rows))"];
"1001167" [label="(Call,status == MagickFalse)"];
"1001237" [label="(Call,opj_stream_set_user_data(jp2_stream,image,NULL))"];
"1001242" [label="(Call,jp2_stream == (opj_stream_t *) NULL)"];
"1001252" [label="(Call,opj_start_compress(jp2_codec,jp2_image,jp2_stream))"];
"1001250" [label="(Call,jp2_status=opj_start_compress(jp2_codec,jp2_image,jp2_stream))"];
"1001257" [label="(Call,jp2_status == 0)"];
"1001266" [label="(Call,opj_encode(jp2_codec,jp2_stream))"];
"1001265" [label="(Call,opj_encode(jp2_codec,jp2_stream) == 0)"];
"1001264" [label="(Call,(opj_encode(jp2_codec,jp2_stream) == 0) ||\n      (opj_end_compress(jp2_codec,jp2_stream) == 0))"];
"1001271" [label="(Call,opj_end_compress(jp2_codec,jp2_stream))"];
"1001270" [label="(Call,opj_end_compress(jp2_codec,jp2_stream) == 0)"];
"1001276" [label="(Call,opj_stream_destroy(jp2_stream))"];
"1001285" [label="(Call,opj_stream_destroy(jp2_stream))"];
"1001278" [label="(Call,opj_destroy_codec(jp2_codec))"];
"1001287" [label="(Call,opj_destroy_codec(jp2_codec))"];
"1001280" [label="(Call,opj_image_destroy(jp2_image))"];
"1001289" [label="(Call,opj_image_destroy(jp2_image))"];
"1001244" [label="(Call,(opj_stream_t *) NULL)"];
"1001293" [label="(Call,CloseBlob(image))"];
"1001291" [label="(Call,(void) CloseBlob(image))"];
"1000982" [label="(Call,(ssize_t) image->columns)"];
"1000980" [label="(Call,x < (ssize_t) image->columns)"];
"1000987" [label="(Call,x++)"];
"1001053" [label="(Call,x/jp2_image->comps[i].dx)"];
"1001021" [label="(Call,q=jp2_image->comps[i].data+(y/jp2_image->comps[i].dy*\n          image->columns/jp2_image->comps[i].dx+x/jp2_image->comps[i].dx))"];
"1001023" [label="(Call,jp2_image->comps[i].data+(y/jp2_image->comps[i].dy*\n          image->columns/jp2_image->comps[i].dx+x/jp2_image->comps[i].dx))"];
"1001042" [label="(Call,image->columns/jp2_image->comps[i].dx)"];
"1001034" [label="(Call,jp2_image->comps[i].dy*\n          image->columns/jp2_image->comps[i].dx)"];
"1001032" [label="(Call,y/jp2_image->comps[i].dy*\n          image->columns/jp2_image->comps[i].dx)"];
"1001031" [label="(Call,y/jp2_image->comps[i].dy*\n          image->columns/jp2_image->comps[i].dx+x/jp2_image->comps[i].dx)"];
"1001160" [label="(Call,(MagickOffsetType) y)"];
"1000950" [label="(Call,y++)"];
"1001201" [label="(Call,opj_set_warning_handler(jp2_codec,JP2WarningHandler,&image->exception))"];
"1001208" [label="(Call,opj_set_error_handler(jp2_codec,JP2ErrorHandler,&image->exception))"];
"1001215" [label="(Call,opj_setup_encoder(jp2_codec,&parameters,jp2_image))"];
"1000984" [label="(Call,image->columns)"];
"1001034" [label="(Call,jp2_image->comps[i].dy*\n          image->columns/jp2_image->comps[i].dx)"];
"1000889" [label="(Call,image->rows)"];
"1001208" [label="(Call,opj_set_error_handler(jp2_codec,JP2ErrorHandler,&image->exception))"];
"1000896" [label="(Identifier,image)"];
"1000981" [label="(Identifier,x)"];
"1001272" [label="(Identifier,jp2_codec)"];
"1001263" [label="(ControlStructure,if ((opj_encode(jp2_codec,jp2_stream) == 0) ||\n      (opj_end_compress(jp2_codec,jp2_stream) == 0)))"];
"1000977" [label="(Call,x=0)"];
"1001170" [label="(ControlStructure,break;)"];
"1001216" [label="(Identifier,jp2_codec)"];
"1000989" [label="(Block,)"];
"1000876" [label="(Call,image->depth == 12)"];
"1001281" [label="(Identifier,jp2_image)"];
"1000796" [label="(Call,image->rows)"];
"1001215" [label="(Call,opj_setup_encoder(jp2_codec,&parameters,jp2_image))"];
"1001179" [label="(Call,jp2_codec=opj_create_compress(OPJ_CODEC_JPT))"];
"1001241" [label="(ControlStructure,if (jp2_stream == (opj_stream_t *) NULL))"];
"1000951" [label="(Identifier,y)"];
"1000894" [label="(Call,image->columns == 4096)"];
"1001267" [label="(Identifier,jp2_codec)"];
"1000976" [label="(ControlStructure,for (x=0; x < (ssize_t) image->columns; x++))"];
"1000943" [label="(Call,y < (ssize_t) image->rows)"];
"1001155" [label="(Call,status=SetImageProgress(image,SaveImageTag,(MagickOffsetType) y,\n      image->rows))"];
"1000910" [label="(Identifier,channels)"];
"1001053" [label="(Call,x/jp2_image->comps[i].dx)"];
"1000209" [label="(Call,1 << (i+2))"];
"1000893" [label="(Call,(image->columns == 4096) || (image->rows == 2160))"];
"1000947" [label="(Call,image->rows)"];
"1001160" [label="(Call,(MagickOffsetType) y)"];
"1001268" [label="(Identifier,jp2_stream)"];
"1001159" [label="(Identifier,SaveImageTag)"];
"1000185" [label="(Call,i=1)"];
"1000194" [label="(Call,((size_t) (1 << (i+2)) > image->columns) &&\n        ((size_t) (1 << (i+2)) > image->rows))"];
"1001248" [label="(Identifier,DelegateError)"];
"1000971" [label="(Identifier,p)"];
"1001246" [label="(Identifier,NULL)"];
"1001080" [label="(Identifier,image)"];
"1000904" [label="(Call,CinemaProfileCompliance(jp2_image,&parameters))"];
"1000190" [label="(Literal,6)"];
"1000218" [label="(Call,parameters.numresolution=i)"];
"1000970" [label="(Call,p == (const PixelPacket *) NULL)"];
"1001251" [label="(Identifier,jp2_status)"];
"1000961" [label="(Call,image->columns)"];
"1001073" [label="(Call,*q)"];
"1001201" [label="(Call,opj_set_warning_handler(jp2_codec,JP2WarningHandler,&image->exception))"];
"1001244" [label="(Call,(opj_stream_t *) NULL)"];
"1000866" [label="(Call,image->rows)"];
"1001287" [label="(Call,opj_destroy_codec(jp2_codec))"];
"1000874" [label="(ControlStructure,if ((image->depth == 12) &&\n      ((image->columns == 2048) || (image->rows == 1080) ||\n       (image->columns == 4096) || (image->rows == 2160))))"];
"1001202" [label="(Identifier,jp2_codec)"];
"1000661" [label="(Call,image->matte != MagickFalse)"];
"1001239" [label="(Identifier,image)"];
"1001294" [label="(Identifier,image)"];
"1000167" [label="(Call,OpenBlob(image_info,image,WriteBinaryBlobMode,&image->exception))"];
"1001077" [label="(Call,scale*GetPixelLuma(image,p))"];
"1000980" [label="(Call,x < (ssize_t) image->columns)"];
"1000987" [label="(Call,x++)"];
"1001237" [label="(Call,opj_stream_set_user_data(jp2_stream,image,NULL))"];
"1001166" [label="(ControlStructure,if (status == MagickFalse))"];
"1001169" [label="(Identifier,MagickFalse)"];
"1001035" [label="(Call,jp2_image->comps[i].dy)"];
"1001269" [label="(Literal,0)"];
"1001258" [label="(Identifier,jp2_status)"];
"1000794" [label="(Call,(unsigned int) image->rows)"];
"1001280" [label="(Call,opj_image_destroy(jp2_image))"];
"1000899" [label="(Call,image->rows == 2160)"];
"1000215" [label="(Identifier,image)"];
"1001197" [label="(Call,jp2_codec=opj_create_compress(OPJ_CODEC_JP2))"];
"1000111" [label="(MethodParameterIn,Image *image)"];
"1000944" [label="(Identifier,y)"];
"1000181" [label="(Call,opj_set_default_encoder_parameters(&parameters))"];
"1000191" [label="(Call,i++)"];
"1001001" [label="(Block,)"];
"1001167" [label="(Call,status == MagickFalse)"];
"1001079" [label="(Call,GetPixelLuma(image,p))"];
"1000112" [label="(Block,)"];
"1000959" [label="(Literal,0)"];
"1000905" [label="(Identifier,jp2_image)"];
"1001221" [label="(Identifier,jp2_stream)"];
"1001204" [label="(Call,&image->exception)"];
"1000192" [label="(Identifier,i)"];
"1001078" [label="(Identifier,scale)"];
"1001293" [label="(Call,CloseBlob(image))"];
"1001153" [label="(Call,p++)"];
"1000900" [label="(Call,image->rows)"];
"1000888" [label="(Call,image->rows == 1080)"];
"1000956" [label="(Identifier,p)"];
"1000603" [label="(Call,GetImageProperty(image,\"comment\"))"];
"1001033" [label="(Identifier,y)"];
"1000972" [label="(Call,(const PixelPacket *) NULL)"];
"1001274" [label="(Literal,0)"];
"1000210" [label="(Literal,1)"];
"1001285" [label="(Call,opj_stream_destroy(jp2_stream))"];
"1001271" [label="(Call,opj_end_compress(jp2_codec,jp2_stream))"];
"1001055" [label="(Call,jp2_image->comps[i].dx)"];
"1000865" [label="(Call,image->rows-1)"];
"1000957" [label="(Call,GetVirtualPixels(image,0,y,image->columns,1,&image->exception))"];
"1001042" [label="(Call,image->columns/jp2_image->comps[i].dx)"];
"1001163" [label="(Call,image->rows)"];
"1001023" [label="(Call,jp2_image->comps[i].data+(y/jp2_image->comps[i].dy*\n          image->columns/jp2_image->comps[i].dx+x/jp2_image->comps[i].dx))"];
"1001291" [label="(Call,(void) CloseBlob(image))"];
"1000214" [label="(Call,image->rows)"];
"1001063" [label="(Identifier,i)"];
"1001156" [label="(Identifier,status)"];
"1000960" [label="(Identifier,y)"];
"1000887" [label="(Call,(image->rows == 1080) ||\n       (image->columns == 4096) || (image->rows == 2160))"];
"1000657" [label="(Call,TransformImageColorspace(image,sRGBColorspace))"];
"1001278" [label="(Call,opj_destroy_codec(jp2_codec))"];
"1001265" [label="(Call,opj_encode(jp2_codec,jp2_stream) == 0)"];
"1001290" [label="(Identifier,jp2_image)"];
"1001209" [label="(Identifier,jp2_codec)"];
"1001217" [label="(Call,&parameters)"];
"1001072" [label="(Call,*q=(int) (scale*GetPixelLuma(image,p)))"];
"1001254" [label="(Identifier,jp2_image)"];
"1000189" [label="(Identifier,i)"];
"1001081" [label="(Identifier,p)"];
"1001256" [label="(ControlStructure,if (jp2_status == 0))"];
"1001259" [label="(Literal,0)"];
"1001071" [label="(Block,)"];
"1000198" [label="(Call,1 << (i+2))"];
"1000882" [label="(Call,image->columns == 2048)"];
"1000982" [label="(Call,(ssize_t) image->columns)"];
"1000871" [label="(Identifier,parameters)"];
"1001276" [label="(Call,opj_stream_destroy(jp2_stream))"];
"1001203" [label="(Identifier,JP2WarningHandler)"];
"1001154" [label="(Identifier,p)"];
"1001240" [label="(Identifier,NULL)"];
"1001032" [label="(Call,y/jp2_image->comps[i].dy*\n          image->columns/jp2_image->comps[i].dx)"];
"1001275" [label="(Block,)"];
"1001192" [label="(Call,jp2_codec=opj_create_compress(OPJ_CODEC_J2K))"];
"1000964" [label="(Literal,1)"];
"1001031" [label="(Call,y/jp2_image->comps[i].dy*\n          image->columns/jp2_image->comps[i].dx+x/jp2_image->comps[i].dx)"];
"1000806" [label="(Call,jp2_image == (opj_image_t *) NULL)"];
"1000940" [label="(Call,y=0)"];
"1001168" [label="(Identifier,status)"];
"1001296" [label="(Identifier,MagickTrue)"];
"1000945" [label="(Call,(ssize_t) image->rows)"];
"1001022" [label="(Identifier,q)"];
"1001283" [label="(Identifier,DelegateError)"];
"1001210" [label="(Identifier,JP2ErrorHandler)"];
"1000881" [label="(Call,(image->columns == 2048) || (image->rows == 1080) ||\n       (image->columns == 4096) || (image->rows == 2160))"];
"1001277" [label="(Identifier,jp2_stream)"];
"1001211" [label="(Call,&image->exception)"];
"1001219" [label="(Identifier,jp2_image)"];
"1000211" [label="(Call,i+2)"];
"1000206" [label="(Call,(size_t) (1 << (i+2)) > image->rows)"];
"1001238" [label="(Identifier,jp2_stream)"];
"1001242" [label="(Call,jp2_stream == (opj_stream_t *) NULL)"];
"1001054" [label="(Identifier,x)"];
"1001021" [label="(Call,q=jp2_image->comps[i].data+(y/jp2_image->comps[i].dy*\n          image->columns/jp2_image->comps[i].dx+x/jp2_image->comps[i].dx))"];
"1000892" [label="(Literal,1080)"];
"1000952" [label="(Block,)"];
"1000965" [label="(Call,&image->exception)"];
"1000186" [label="(Identifier,i)"];
"1000184" [label="(ControlStructure,for (i=1; i < 6; i++))"];
"1000958" [label="(Identifier,image)"];
"1001243" [label="(Identifier,jp2_stream)"];
"1000955" [label="(Call,p=GetVirtualPixels(image,0,y,image->columns,1,&image->exception))"];
"1001266" [label="(Call,opj_encode(jp2_codec,jp2_stream))"];
"1001082" [label="(ControlStructure,break;)"];
"1000978" [label="(Identifier,x)"];
"1000950" [label="(Call,y++)"];
"1001158" [label="(Identifier,image)"];
"1001257" [label="(Call,jp2_status == 0)"];
"1000875" [label="(Call,(image->depth == 12) &&\n      ((image->columns == 2048) || (image->rows == 1080) ||\n       (image->columns == 4096) || (image->rows == 2160)))"];
"1001175" [label="(Identifier,image_info)"];
"1001004" [label="(Call,scale=(double) ((1UL << jp2_image->comps[i].prec)-1)/QuantumRange)"];
"1001046" [label="(Call,jp2_image->comps[i].dx)"];
"1001234" [label="(Call,opj_stream_set_skip_function(jp2_stream,JP2SkipHandler))"];
"1000975" [label="(ControlStructure,break;)"];
"1001253" [label="(Identifier,jp2_codec)"];
"1001286" [label="(Identifier,jp2_stream)"];
"1000988" [label="(Identifier,x)"];
"1001043" [label="(Call,image->columns)"];
"1001024" [label="(Call,jp2_image->comps[i].data)"];
"1001270" [label="(Call,opj_end_compress(jp2_codec,jp2_stream) == 0)"];
"1000188" [label="(Call,i < 6)"];
"1001075" [label="(Call,(int) (scale*GetPixelLuma(image,p)))"];
"1000808" [label="(Call,(opj_image_t *) NULL)"];
"1001297" [label="(MethodReturn,static MagickBooleanType)"];
"1000187" [label="(Literal,1)"];
"1001250" [label="(Call,jp2_status=opj_start_compress(jp2_codec,jp2_image,jp2_stream))"];
"1000220" [label="(Identifier,parameters)"];
"1000200" [label="(Call,i+2)"];
"1001264" [label="(Call,(opj_encode(jp2_codec,jp2_stream) == 0) ||\n      (opj_end_compress(jp2_codec,jp2_stream) == 0))"];
"1000969" [label="(ControlStructure,if (p == (const PixelPacket *) NULL))"];
"1001255" [label="(Identifier,jp2_stream)"];
"1000207" [label="(Call,(size_t) (1 << (i+2)))"];
"1001289" [label="(Call,opj_image_destroy(jp2_image))"];
"1001162" [label="(Identifier,y)"];
"1000842" [label="(Call,image->columns-1)"];
"1000176" [label="(Call,status == MagickFalse)"];
"1000869" [label="(Literal,1)"];
"1000903" [label="(Literal,2160)"];
"1001252" [label="(Call,opj_start_compress(jp2_codec,jp2_image,jp2_stream))"];
"1001273" [label="(Identifier,jp2_stream)"];
"1001157" [label="(Call,SetImageProgress(image,SaveImageTag,(MagickOffsetType) y,\n      image->rows))"];
"1000788" [label="(Call,jp2_info[i].h=(unsigned int) image->rows)"];
"1000864" [label="(Call,(image->rows-1)*\n    parameters.subsampling_dx)"];
"1001261" [label="(Identifier,DelegateError)"];
"1000939" [label="(ControlStructure,for (y=0; y < (ssize_t) image->rows; y++))"];
"1001164" [label="(Identifier,image)"];
"1001279" [label="(Identifier,jp2_codec)"];
"1001288" [label="(Identifier,jp2_codec)"];
"1000992" [label="(Identifier,i)"];
"1000888" -> "1000887"  [label="AST: "];
"1000888" -> "1000892"  [label="CFG: "];
"1000889" -> "1000888"  [label="AST: "];
"1000892" -> "1000888"  [label="AST: "];
"1000896" -> "1000888"  [label="CFG: "];
"1000887" -> "1000888"  [label="CFG: "];
"1000888" -> "1000887"  [label="DDG: image->rows"];
"1000888" -> "1000887"  [label="DDG: 1080"];
"1000865" -> "1000888"  [label="DDG: image->rows"];
"1000888" -> "1000899"  [label="DDG: image->rows"];
"1000888" -> "1000945"  [label="DDG: image->rows"];
"1000865" -> "1000864"  [label="AST: "];
"1000865" -> "1000869"  [label="CFG: "];
"1000866" -> "1000865"  [label="AST: "];
"1000869" -> "1000865"  [label="AST: "];
"1000871" -> "1000865"  [label="CFG: "];
"1000865" -> "1000864"  [label="DDG: image->rows"];
"1000865" -> "1000864"  [label="DDG: 1"];
"1000794" -> "1000865"  [label="DDG: image->rows"];
"1000206" -> "1000865"  [label="DDG: image->rows"];
"1000865" -> "1000945"  [label="DDG: image->rows"];
"1000794" -> "1000788"  [label="AST: "];
"1000794" -> "1000796"  [label="CFG: "];
"1000795" -> "1000794"  [label="AST: "];
"1000796" -> "1000794"  [label="AST: "];
"1000788" -> "1000794"  [label="CFG: "];
"1000794" -> "1000788"  [label="DDG: image->rows"];
"1000206" -> "1000794"  [label="DDG: image->rows"];
"1000206" -> "1000194"  [label="AST: "];
"1000206" -> "1000214"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000214" -> "1000206"  [label="AST: "];
"1000194" -> "1000206"  [label="CFG: "];
"1000206" -> "1001297"  [label="DDG: (size_t) (1 << (i+2))"];
"1000206" -> "1000194"  [label="DDG: (size_t) (1 << (i+2))"];
"1000206" -> "1000194"  [label="DDG: image->rows"];
"1000207" -> "1000206"  [label="DDG: 1 << (i+2)"];
"1000207" -> "1000209"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000209" -> "1000207"  [label="AST: "];
"1000215" -> "1000207"  [label="CFG: "];
"1000207" -> "1001297"  [label="DDG: 1 << (i+2)"];
"1000209" -> "1000207"  [label="DDG: 1"];
"1000209" -> "1000207"  [label="DDG: i+2"];
"1000209" -> "1000211"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000211" -> "1000209"  [label="AST: "];
"1000209" -> "1001297"  [label="DDG: i+2"];
"1000188" -> "1000209"  [label="DDG: i"];
"1000188" -> "1000184"  [label="AST: "];
"1000188" -> "1000190"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000188"  [label="AST: "];
"1000197" -> "1000188"  [label="CFG: "];
"1000220" -> "1000188"  [label="CFG: "];
"1000188" -> "1001297"  [label="DDG: i < 6"];
"1000185" -> "1000188"  [label="DDG: i"];
"1000191" -> "1000188"  [label="DDG: i"];
"1000188" -> "1000191"  [label="DDG: i"];
"1000188" -> "1000198"  [label="DDG: i"];
"1000188" -> "1000200"  [label="DDG: i"];
"1000188" -> "1000211"  [label="DDG: i"];
"1000188" -> "1000218"  [label="DDG: i"];
"1000185" -> "1000184"  [label="AST: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="AST: "];
"1000189" -> "1000185"  [label="CFG: "];
"1000191" -> "1000184"  [label="AST: "];
"1000191" -> "1000192"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000189" -> "1000191"  [label="CFG: "];
"1000887" -> "1000881"  [label="AST: "];
"1000887" -> "1000893"  [label="CFG: "];
"1000893" -> "1000887"  [label="AST: "];
"1000881" -> "1000887"  [label="CFG: "];
"1000887" -> "1001297"  [label="DDG: (image->columns == 4096) || (image->rows == 2160)"];
"1000887" -> "1001297"  [label="DDG: image->rows == 1080"];
"1000887" -> "1000881"  [label="DDG: image->rows == 1080"];
"1000887" -> "1000881"  [label="DDG: (image->columns == 4096) || (image->rows == 2160)"];
"1000893" -> "1000887"  [label="DDG: image->columns == 4096"];
"1000893" -> "1000887"  [label="DDG: image->rows == 2160"];
"1000881" -> "1000875"  [label="AST: "];
"1000881" -> "1000882"  [label="CFG: "];
"1000882" -> "1000881"  [label="AST: "];
"1000875" -> "1000881"  [label="CFG: "];
"1000881" -> "1001297"  [label="DDG: (image->rows == 1080) ||\n       (image->columns == 4096) || (image->rows == 2160)"];
"1000881" -> "1001297"  [label="DDG: image->columns == 2048"];
"1000881" -> "1000875"  [label="DDG: image->columns == 2048"];
"1000881" -> "1000875"  [label="DDG: (image->rows == 1080) ||\n       (image->columns == 4096) || (image->rows == 2160)"];
"1000882" -> "1000881"  [label="DDG: image->columns"];
"1000882" -> "1000881"  [label="DDG: 2048"];
"1000875" -> "1000874"  [label="AST: "];
"1000875" -> "1000876"  [label="CFG: "];
"1000876" -> "1000875"  [label="AST: "];
"1000905" -> "1000875"  [label="CFG: "];
"1000910" -> "1000875"  [label="CFG: "];
"1000875" -> "1001297"  [label="DDG: (image->columns == 2048) || (image->rows == 1080) ||\n       (image->columns == 4096) || (image->rows == 2160)"];
"1000875" -> "1001297"  [label="DDG: image->depth == 12"];
"1000875" -> "1001297"  [label="DDG: (image->depth == 12) &&\n      ((image->columns == 2048) || (image->rows == 1080) ||\n       (image->columns == 4096) || (image->rows == 2160))"];
"1000876" -> "1000875"  [label="DDG: image->depth"];
"1000876" -> "1000875"  [label="DDG: 12"];
"1000899" -> "1000893"  [label="AST: "];
"1000899" -> "1000903"  [label="CFG: "];
"1000900" -> "1000899"  [label="AST: "];
"1000903" -> "1000899"  [label="AST: "];
"1000893" -> "1000899"  [label="CFG: "];
"1000899" -> "1000893"  [label="DDG: image->rows"];
"1000899" -> "1000893"  [label="DDG: 2160"];
"1000899" -> "1000945"  [label="DDG: image->rows"];
"1000893" -> "1000894"  [label="CFG: "];
"1000894" -> "1000893"  [label="AST: "];
"1000893" -> "1001297"  [label="DDG: image->rows == 2160"];
"1000893" -> "1001297"  [label="DDG: image->columns == 4096"];
"1000894" -> "1000893"  [label="DDG: image->columns"];
"1000894" -> "1000893"  [label="DDG: 4096"];
"1000945" -> "1000943"  [label="AST: "];
"1000945" -> "1000947"  [label="CFG: "];
"1000946" -> "1000945"  [label="AST: "];
"1000947" -> "1000945"  [label="AST: "];
"1000943" -> "1000945"  [label="CFG: "];
"1000945" -> "1001297"  [label="DDG: image->rows"];
"1000945" -> "1000943"  [label="DDG: image->rows"];
"1001157" -> "1000945"  [label="DDG: image->rows"];
"1000945" -> "1001157"  [label="DDG: image->rows"];
"1000943" -> "1000939"  [label="AST: "];
"1000944" -> "1000943"  [label="AST: "];
"1000956" -> "1000943"  [label="CFG: "];
"1001175" -> "1000943"  [label="CFG: "];
"1000943" -> "1001297"  [label="DDG: y < (ssize_t) image->rows"];
"1000943" -> "1001297"  [label="DDG: y"];
"1000943" -> "1001297"  [label="DDG: (ssize_t) image->rows"];
"1000940" -> "1000943"  [label="DDG: y"];
"1000950" -> "1000943"  [label="DDG: y"];
"1000943" -> "1000957"  [label="DDG: y"];
"1000957" -> "1000955"  [label="AST: "];
"1000957" -> "1000965"  [label="CFG: "];
"1000958" -> "1000957"  [label="AST: "];
"1000959" -> "1000957"  [label="AST: "];
"1000960" -> "1000957"  [label="AST: "];
"1000961" -> "1000957"  [label="AST: "];
"1000964" -> "1000957"  [label="AST: "];
"1000965" -> "1000957"  [label="AST: "];
"1000955" -> "1000957"  [label="CFG: "];
"1000957" -> "1001297"  [label="DDG: image->columns"];
"1000957" -> "1001297"  [label="DDG: y"];
"1000957" -> "1000955"  [label="DDG: 0"];
"1000957" -> "1000955"  [label="DDG: y"];
"1000957" -> "1000955"  [label="DDG: image"];
"1000957" -> "1000955"  [label="DDG: &image->exception"];
"1000957" -> "1000955"  [label="DDG: image->columns"];
"1000957" -> "1000955"  [label="DDG: 1"];
"1000603" -> "1000957"  [label="DDG: image"];
"1000657" -> "1000957"  [label="DDG: image"];
"1001157" -> "1000957"  [label="DDG: image"];
"1000111" -> "1000957"  [label="DDG: image"];
"1000982" -> "1000957"  [label="DDG: image->columns"];
"1000842" -> "1000957"  [label="DDG: image->columns"];
"1000882" -> "1000957"  [label="DDG: image->columns"];
"1000894" -> "1000957"  [label="DDG: image->columns"];
"1001042" -> "1000957"  [label="DDG: image->columns"];
"1000167" -> "1000957"  [label="DDG: &image->exception"];
"1000957" -> "1000982"  [label="DDG: image->columns"];
"1000957" -> "1001032"  [label="DDG: y"];
"1000957" -> "1001079"  [label="DDG: image"];
"1000957" -> "1001157"  [label="DDG: image"];
"1000957" -> "1001160"  [label="DDG: y"];
"1000957" -> "1001201"  [label="DDG: &image->exception"];
"1000957" -> "1001237"  [label="DDG: image"];
"1000955" -> "1000952"  [label="AST: "];
"1000956" -> "1000955"  [label="AST: "];
"1000971" -> "1000955"  [label="CFG: "];
"1000955" -> "1001297"  [label="DDG: GetVirtualPixels(image,0,y,image->columns,1,&image->exception)"];
"1000955" -> "1000970"  [label="DDG: p"];
"1000970" -> "1000969"  [label="AST: "];
"1000970" -> "1000972"  [label="CFG: "];
"1000971" -> "1000970"  [label="AST: "];
"1000972" -> "1000970"  [label="AST: "];
"1000975" -> "1000970"  [label="CFG: "];
"1000978" -> "1000970"  [label="CFG: "];
"1000970" -> "1001297"  [label="DDG: (const PixelPacket *) NULL"];
"1000970" -> "1001297"  [label="DDG: p"];
"1000970" -> "1001297"  [label="DDG: p == (const PixelPacket *) NULL"];
"1000972" -> "1000970"  [label="DDG: NULL"];
"1000970" -> "1001079"  [label="DDG: p"];
"1000970" -> "1001153"  [label="DDG: p"];
"1001079" -> "1001077"  [label="AST: "];
"1001079" -> "1001081"  [label="CFG: "];
"1001080" -> "1001079"  [label="AST: "];
"1001081" -> "1001079"  [label="AST: "];
"1001077" -> "1001079"  [label="CFG: "];
"1001079" -> "1001297"  [label="DDG: p"];
"1001079" -> "1001077"  [label="DDG: image"];
"1001079" -> "1001077"  [label="DDG: p"];
"1000111" -> "1001079"  [label="DDG: image"];
"1001153" -> "1001079"  [label="DDG: p"];
"1001079" -> "1001153"  [label="DDG: p"];
"1001079" -> "1001157"  [label="DDG: image"];
"1001079" -> "1001237"  [label="DDG: image"];
"1001077" -> "1001075"  [label="AST: "];
"1001078" -> "1001077"  [label="AST: "];
"1001075" -> "1001077"  [label="CFG: "];
"1001077" -> "1001297"  [label="DDG: scale"];
"1001077" -> "1001297"  [label="DDG: GetPixelLuma(image,p)"];
"1001077" -> "1001075"  [label="DDG: scale"];
"1001077" -> "1001075"  [label="DDG: GetPixelLuma(image,p)"];
"1001004" -> "1001077"  [label="DDG: scale"];
"1001075" -> "1001072"  [label="AST: "];
"1001076" -> "1001075"  [label="AST: "];
"1001072" -> "1001075"  [label="CFG: "];
"1001075" -> "1001297"  [label="DDG: scale*GetPixelLuma(image,p)"];
"1001075" -> "1001072"  [label="DDG: scale*GetPixelLuma(image,p)"];
"1001072" -> "1001071"  [label="AST: "];
"1001073" -> "1001072"  [label="AST: "];
"1001082" -> "1001072"  [label="CFG: "];
"1001072" -> "1001297"  [label="DDG: (int) (scale*GetPixelLuma(image,p))"];
"1001072" -> "1001297"  [label="DDG: *q"];
"1001153" -> "1000989"  [label="AST: "];
"1001153" -> "1001154"  [label="CFG: "];
"1001154" -> "1001153"  [label="AST: "];
"1000988" -> "1001153"  [label="CFG: "];
"1001153" -> "1001297"  [label="DDG: p"];
"1001157" -> "1001155"  [label="AST: "];
"1001157" -> "1001163"  [label="CFG: "];
"1001158" -> "1001157"  [label="AST: "];
"1001159" -> "1001157"  [label="AST: "];
"1001160" -> "1001157"  [label="AST: "];
"1001163" -> "1001157"  [label="AST: "];
"1001155" -> "1001157"  [label="CFG: "];
"1001157" -> "1001297"  [label="DDG: image->rows"];
"1001157" -> "1001297"  [label="DDG: (MagickOffsetType) y"];
"1001157" -> "1001297"  [label="DDG: SaveImageTag"];
"1001157" -> "1001155"  [label="DDG: image"];
"1001157" -> "1001155"  [label="DDG: SaveImageTag"];
"1001157" -> "1001155"  [label="DDG: (MagickOffsetType) y"];
"1001157" -> "1001155"  [label="DDG: image->rows"];
"1000111" -> "1001157"  [label="DDG: image"];
"1001160" -> "1001157"  [label="DDG: y"];
"1001157" -> "1001237"  [label="DDG: image"];
"1001155" -> "1000952"  [label="AST: "];
"1001156" -> "1001155"  [label="AST: "];
"1001168" -> "1001155"  [label="CFG: "];
"1001155" -> "1001297"  [label="DDG: SetImageProgress(image,SaveImageTag,(MagickOffsetType) y,\n      image->rows)"];
"1001155" -> "1001167"  [label="DDG: status"];
"1001167" -> "1001166"  [label="AST: "];
"1001167" -> "1001169"  [label="CFG: "];
"1001168" -> "1001167"  [label="AST: "];
"1001169" -> "1001167"  [label="AST: "];
"1001170" -> "1001167"  [label="CFG: "];
"1000951" -> "1001167"  [label="CFG: "];
"1001167" -> "1001297"  [label="DDG: status == MagickFalse"];
"1001167" -> "1001297"  [label="DDG: MagickFalse"];
"1001167" -> "1001297"  [label="DDG: status"];
"1000176" -> "1001167"  [label="DDG: MagickFalse"];
"1000661" -> "1001167"  [label="DDG: MagickFalse"];
"1001237" -> "1000112"  [label="AST: "];
"1001237" -> "1001240"  [label="CFG: "];
"1001238" -> "1001237"  [label="AST: "];
"1001239" -> "1001237"  [label="AST: "];
"1001240" -> "1001237"  [label="AST: "];
"1001243" -> "1001237"  [label="CFG: "];
"1001237" -> "1001297"  [label="DDG: opj_stream_set_user_data(jp2_stream,image,NULL)"];
"1001234" -> "1001237"  [label="DDG: jp2_stream"];
"1000603" -> "1001237"  [label="DDG: image"];
"1000657" -> "1001237"  [label="DDG: image"];
"1000111" -> "1001237"  [label="DDG: image"];
"1000808" -> "1001237"  [label="DDG: NULL"];
"1000972" -> "1001237"  [label="DDG: NULL"];
"1001237" -> "1001242"  [label="DDG: jp2_stream"];
"1001237" -> "1001244"  [label="DDG: NULL"];
"1001237" -> "1001293"  [label="DDG: image"];
"1001242" -> "1001241"  [label="AST: "];
"1001242" -> "1001244"  [label="CFG: "];
"1001243" -> "1001242"  [label="AST: "];
"1001244" -> "1001242"  [label="AST: "];
"1001248" -> "1001242"  [label="CFG: "];
"1001251" -> "1001242"  [label="CFG: "];
"1001242" -> "1001297"  [label="DDG: jp2_stream == (opj_stream_t *) NULL"];
"1001242" -> "1001297"  [label="DDG: (opj_stream_t *) NULL"];
"1001244" -> "1001242"  [label="DDG: NULL"];
"1001242" -> "1001252"  [label="DDG: jp2_stream"];
"1001252" -> "1001250"  [label="AST: "];
"1001252" -> "1001255"  [label="CFG: "];
"1001253" -> "1001252"  [label="AST: "];
"1001254" -> "1001252"  [label="AST: "];
"1001255" -> "1001252"  [label="AST: "];
"1001250" -> "1001252"  [label="CFG: "];
"1001252" -> "1001250"  [label="DDG: jp2_codec"];
"1001252" -> "1001250"  [label="DDG: jp2_image"];
"1001252" -> "1001250"  [label="DDG: jp2_stream"];
"1001215" -> "1001252"  [label="DDG: jp2_codec"];
"1001215" -> "1001252"  [label="DDG: jp2_image"];
"1001252" -> "1001266"  [label="DDG: jp2_codec"];
"1001252" -> "1001266"  [label="DDG: jp2_stream"];
"1001252" -> "1001280"  [label="DDG: jp2_image"];
"1001252" -> "1001289"  [label="DDG: jp2_image"];
"1001250" -> "1000112"  [label="AST: "];
"1001251" -> "1001250"  [label="AST: "];
"1001258" -> "1001250"  [label="CFG: "];
"1001250" -> "1001297"  [label="DDG: opj_start_compress(jp2_codec,jp2_image,jp2_stream)"];
"1001250" -> "1001257"  [label="DDG: jp2_status"];
"1001257" -> "1001256"  [label="AST: "];
"1001257" -> "1001259"  [label="CFG: "];
"1001258" -> "1001257"  [label="AST: "];
"1001259" -> "1001257"  [label="AST: "];
"1001261" -> "1001257"  [label="CFG: "];
"1001267" -> "1001257"  [label="CFG: "];
"1001257" -> "1001297"  [label="DDG: jp2_status"];
"1001257" -> "1001297"  [label="DDG: jp2_status == 0"];
"1001266" -> "1001265"  [label="AST: "];
"1001266" -> "1001268"  [label="CFG: "];
"1001267" -> "1001266"  [label="AST: "];
"1001268" -> "1001266"  [label="AST: "];
"1001269" -> "1001266"  [label="CFG: "];
"1001266" -> "1001265"  [label="DDG: jp2_codec"];
"1001266" -> "1001265"  [label="DDG: jp2_stream"];
"1001266" -> "1001271"  [label="DDG: jp2_codec"];
"1001266" -> "1001271"  [label="DDG: jp2_stream"];
"1001266" -> "1001276"  [label="DDG: jp2_stream"];
"1001266" -> "1001278"  [label="DDG: jp2_codec"];
"1001266" -> "1001285"  [label="DDG: jp2_stream"];
"1001266" -> "1001287"  [label="DDG: jp2_codec"];
"1001265" -> "1001264"  [label="AST: "];
"1001265" -> "1001269"  [label="CFG: "];
"1001269" -> "1001265"  [label="AST: "];
"1001272" -> "1001265"  [label="CFG: "];
"1001264" -> "1001265"  [label="CFG: "];
"1001265" -> "1001297"  [label="DDG: opj_encode(jp2_codec,jp2_stream)"];
"1001265" -> "1001264"  [label="DDG: opj_encode(jp2_codec,jp2_stream)"];
"1001265" -> "1001264"  [label="DDG: 0"];
"1001264" -> "1001263"  [label="AST: "];
"1001264" -> "1001270"  [label="CFG: "];
"1001270" -> "1001264"  [label="AST: "];
"1001277" -> "1001264"  [label="CFG: "];
"1001286" -> "1001264"  [label="CFG: "];
"1001264" -> "1001297"  [label="DDG: opj_encode(jp2_codec,jp2_stream) == 0"];
"1001264" -> "1001297"  [label="DDG: opj_end_compress(jp2_codec,jp2_stream) == 0"];
"1001264" -> "1001297"  [label="DDG: (opj_encode(jp2_codec,jp2_stream) == 0) ||\n      (opj_end_compress(jp2_codec,jp2_stream) == 0)"];
"1001270" -> "1001264"  [label="DDG: opj_end_compress(jp2_codec,jp2_stream)"];
"1001270" -> "1001264"  [label="DDG: 0"];
"1001271" -> "1001270"  [label="AST: "];
"1001271" -> "1001273"  [label="CFG: "];
"1001272" -> "1001271"  [label="AST: "];
"1001273" -> "1001271"  [label="AST: "];
"1001274" -> "1001271"  [label="CFG: "];
"1001271" -> "1001270"  [label="DDG: jp2_codec"];
"1001271" -> "1001270"  [label="DDG: jp2_stream"];
"1001271" -> "1001276"  [label="DDG: jp2_stream"];
"1001271" -> "1001278"  [label="DDG: jp2_codec"];
"1001271" -> "1001285"  [label="DDG: jp2_stream"];
"1001271" -> "1001287"  [label="DDG: jp2_codec"];
"1001270" -> "1001274"  [label="CFG: "];
"1001274" -> "1001270"  [label="AST: "];
"1001270" -> "1001297"  [label="DDG: opj_end_compress(jp2_codec,jp2_stream)"];
"1001276" -> "1001275"  [label="AST: "];
"1001276" -> "1001277"  [label="CFG: "];
"1001277" -> "1001276"  [label="AST: "];
"1001279" -> "1001276"  [label="CFG: "];
"1001276" -> "1001285"  [label="DDG: jp2_stream"];
"1001285" -> "1000112"  [label="AST: "];
"1001285" -> "1001286"  [label="CFG: "];
"1001286" -> "1001285"  [label="AST: "];
"1001288" -> "1001285"  [label="CFG: "];
"1001285" -> "1001297"  [label="DDG: jp2_stream"];
"1001285" -> "1001297"  [label="DDG: opj_stream_destroy(jp2_stream)"];
"1001278" -> "1001275"  [label="AST: "];
"1001278" -> "1001279"  [label="CFG: "];
"1001279" -> "1001278"  [label="AST: "];
"1001281" -> "1001278"  [label="CFG: "];
"1001278" -> "1001287"  [label="DDG: jp2_codec"];
"1001287" -> "1000112"  [label="AST: "];
"1001287" -> "1001288"  [label="CFG: "];
"1001288" -> "1001287"  [label="AST: "];
"1001290" -> "1001287"  [label="CFG: "];
"1001287" -> "1001297"  [label="DDG: jp2_codec"];
"1001287" -> "1001297"  [label="DDG: opj_destroy_codec(jp2_codec)"];
"1001280" -> "1001275"  [label="AST: "];
"1001280" -> "1001281"  [label="CFG: "];
"1001281" -> "1001280"  [label="AST: "];
"1001283" -> "1001280"  [label="CFG: "];
"1001280" -> "1001289"  [label="DDG: jp2_image"];
"1001289" -> "1000112"  [label="AST: "];
"1001289" -> "1001290"  [label="CFG: "];
"1001290" -> "1001289"  [label="AST: "];
"1001292" -> "1001289"  [label="CFG: "];
"1001289" -> "1001297"  [label="DDG: jp2_image"];
"1001289" -> "1001297"  [label="DDG: opj_image_destroy(jp2_image)"];
"1001244" -> "1001246"  [label="CFG: "];
"1001245" -> "1001244"  [label="AST: "];
"1001246" -> "1001244"  [label="AST: "];
"1001244" -> "1001297"  [label="DDG: NULL"];
"1001293" -> "1001291"  [label="AST: "];
"1001293" -> "1001294"  [label="CFG: "];
"1001294" -> "1001293"  [label="AST: "];
"1001291" -> "1001293"  [label="CFG: "];
"1001293" -> "1001297"  [label="DDG: image"];
"1001293" -> "1001291"  [label="DDG: image"];
"1000111" -> "1001293"  [label="DDG: image"];
"1001291" -> "1000112"  [label="AST: "];
"1001292" -> "1001291"  [label="AST: "];
"1001296" -> "1001291"  [label="CFG: "];
"1001291" -> "1001297"  [label="DDG: CloseBlob(image)"];
"1001291" -> "1001297"  [label="DDG: (void) CloseBlob(image)"];
"1000982" -> "1000980"  [label="AST: "];
"1000982" -> "1000984"  [label="CFG: "];
"1000983" -> "1000982"  [label="AST: "];
"1000984" -> "1000982"  [label="AST: "];
"1000980" -> "1000982"  [label="CFG: "];
"1000982" -> "1001297"  [label="DDG: image->columns"];
"1000982" -> "1000980"  [label="DDG: image->columns"];
"1001042" -> "1000982"  [label="DDG: image->columns"];
"1000982" -> "1001042"  [label="DDG: image->columns"];
"1000980" -> "1000976"  [label="AST: "];
"1000981" -> "1000980"  [label="AST: "];
"1000992" -> "1000980"  [label="CFG: "];
"1001156" -> "1000980"  [label="CFG: "];
"1000980" -> "1001297"  [label="DDG: x"];
"1000980" -> "1001297"  [label="DDG: (ssize_t) image->columns"];
"1000980" -> "1001297"  [label="DDG: x < (ssize_t) image->columns"];
"1000987" -> "1000980"  [label="DDG: x"];
"1000977" -> "1000980"  [label="DDG: x"];
"1000980" -> "1000987"  [label="DDG: x"];
"1000980" -> "1001053"  [label="DDG: x"];
"1000987" -> "1000976"  [label="AST: "];
"1000987" -> "1000988"  [label="CFG: "];
"1000988" -> "1000987"  [label="AST: "];
"1000981" -> "1000987"  [label="CFG: "];
"1001053" -> "1000987"  [label="DDG: x"];
"1001053" -> "1001031"  [label="AST: "];
"1001053" -> "1001055"  [label="CFG: "];
"1001054" -> "1001053"  [label="AST: "];
"1001055" -> "1001053"  [label="AST: "];
"1001031" -> "1001053"  [label="CFG: "];
"1001053" -> "1001297"  [label="DDG: jp2_image->comps[i].dx"];
"1001053" -> "1001297"  [label="DDG: x"];
"1001053" -> "1001021"  [label="DDG: x"];
"1001053" -> "1001021"  [label="DDG: jp2_image->comps[i].dx"];
"1001053" -> "1001023"  [label="DDG: x"];
"1001053" -> "1001023"  [label="DDG: jp2_image->comps[i].dx"];
"1001053" -> "1001042"  [label="DDG: jp2_image->comps[i].dx"];
"1001053" -> "1001031"  [label="DDG: x"];
"1001053" -> "1001031"  [label="DDG: jp2_image->comps[i].dx"];
"1001042" -> "1001053"  [label="DDG: jp2_image->comps[i].dx"];
"1001021" -> "1001001"  [label="AST: "];
"1001021" -> "1001023"  [label="CFG: "];
"1001022" -> "1001021"  [label="AST: "];
"1001023" -> "1001021"  [label="AST: "];
"1001063" -> "1001021"  [label="CFG: "];
"1001021" -> "1001297"  [label="DDG: jp2_image->comps[i].data+(y/jp2_image->comps[i].dy*\n          image->columns/jp2_image->comps[i].dx+x/jp2_image->comps[i].dx)"];
"1001021" -> "1001297"  [label="DDG: q"];
"1001032" -> "1001021"  [label="DDG: y"];
"1001032" -> "1001021"  [label="DDG: jp2_image->comps[i].dy*\n          image->columns/jp2_image->comps[i].dx"];
"1001023" -> "1001031"  [label="CFG: "];
"1001024" -> "1001023"  [label="AST: "];
"1001031" -> "1001023"  [label="AST: "];
"1001023" -> "1001297"  [label="DDG: jp2_image->comps[i].data"];
"1001023" -> "1001297"  [label="DDG: y/jp2_image->comps[i].dy*\n          image->columns/jp2_image->comps[i].dx+x/jp2_image->comps[i].dx"];
"1001032" -> "1001023"  [label="DDG: y"];
"1001032" -> "1001023"  [label="DDG: jp2_image->comps[i].dy*\n          image->columns/jp2_image->comps[i].dx"];
"1001042" -> "1001034"  [label="AST: "];
"1001042" -> "1001046"  [label="CFG: "];
"1001043" -> "1001042"  [label="AST: "];
"1001046" -> "1001042"  [label="AST: "];
"1001034" -> "1001042"  [label="CFG: "];
"1001042" -> "1001297"  [label="DDG: image->columns"];
"1001042" -> "1001034"  [label="DDG: image->columns"];
"1001042" -> "1001034"  [label="DDG: jp2_image->comps[i].dx"];
"1001034" -> "1001032"  [label="AST: "];
"1001035" -> "1001034"  [label="AST: "];
"1001032" -> "1001034"  [label="CFG: "];
"1001034" -> "1001297"  [label="DDG: image->columns/jp2_image->comps[i].dx"];
"1001034" -> "1001297"  [label="DDG: jp2_image->comps[i].dy"];
"1001034" -> "1001032"  [label="DDG: jp2_image->comps[i].dy"];
"1001034" -> "1001032"  [label="DDG: image->columns/jp2_image->comps[i].dx"];
"1001032" -> "1001031"  [label="AST: "];
"1001033" -> "1001032"  [label="AST: "];
"1001054" -> "1001032"  [label="CFG: "];
"1001032" -> "1001297"  [label="DDG: y"];
"1001032" -> "1001297"  [label="DDG: jp2_image->comps[i].dy*\n          image->columns/jp2_image->comps[i].dx"];
"1001032" -> "1001031"  [label="DDG: y"];
"1001032" -> "1001031"  [label="DDG: jp2_image->comps[i].dy*\n          image->columns/jp2_image->comps[i].dx"];
"1001032" -> "1001160"  [label="DDG: y"];
"1001031" -> "1001297"  [label="DDG: y/jp2_image->comps[i].dy*\n          image->columns/jp2_image->comps[i].dx"];
"1001031" -> "1001297"  [label="DDG: x/jp2_image->comps[i].dx"];
"1001160" -> "1001162"  [label="CFG: "];
"1001161" -> "1001160"  [label="AST: "];
"1001162" -> "1001160"  [label="AST: "];
"1001164" -> "1001160"  [label="CFG: "];
"1001160" -> "1001297"  [label="DDG: y"];
"1001160" -> "1000950"  [label="DDG: y"];
"1000950" -> "1000939"  [label="AST: "];
"1000950" -> "1000951"  [label="CFG: "];
"1000951" -> "1000950"  [label="AST: "];
"1000944" -> "1000950"  [label="CFG: "];
"1001201" -> "1000112"  [label="AST: "];
"1001201" -> "1001204"  [label="CFG: "];
"1001202" -> "1001201"  [label="AST: "];
"1001203" -> "1001201"  [label="AST: "];
"1001204" -> "1001201"  [label="AST: "];
"1001209" -> "1001201"  [label="CFG: "];
"1001201" -> "1001297"  [label="DDG: JP2WarningHandler"];
"1001201" -> "1001297"  [label="DDG: opj_set_warning_handler(jp2_codec,JP2WarningHandler,&image->exception)"];
"1001197" -> "1001201"  [label="DDG: jp2_codec"];
"1001179" -> "1001201"  [label="DDG: jp2_codec"];
"1001192" -> "1001201"  [label="DDG: jp2_codec"];
"1000167" -> "1001201"  [label="DDG: &image->exception"];
"1001201" -> "1001208"  [label="DDG: jp2_codec"];
"1001201" -> "1001208"  [label="DDG: &image->exception"];
"1001208" -> "1000112"  [label="AST: "];
"1001208" -> "1001211"  [label="CFG: "];
"1001209" -> "1001208"  [label="AST: "];
"1001210" -> "1001208"  [label="AST: "];
"1001211" -> "1001208"  [label="AST: "];
"1001216" -> "1001208"  [label="CFG: "];
"1001208" -> "1001297"  [label="DDG: opj_set_error_handler(jp2_codec,JP2ErrorHandler,&image->exception)"];
"1001208" -> "1001297"  [label="DDG: &image->exception"];
"1001208" -> "1001297"  [label="DDG: JP2ErrorHandler"];
"1001208" -> "1001215"  [label="DDG: jp2_codec"];
"1001215" -> "1000112"  [label="AST: "];
"1001215" -> "1001219"  [label="CFG: "];
"1001216" -> "1001215"  [label="AST: "];
"1001217" -> "1001215"  [label="AST: "];
"1001219" -> "1001215"  [label="AST: "];
"1001221" -> "1001215"  [label="CFG: "];
"1001215" -> "1001297"  [label="DDG: opj_setup_encoder(jp2_codec,&parameters,jp2_image)"];
"1001215" -> "1001297"  [label="DDG: &parameters"];
"1000181" -> "1001215"  [label="DDG: &parameters"];
"1000904" -> "1001215"  [label="DDG: &parameters"];
"1000904" -> "1001215"  [label="DDG: jp2_image"];
"1000806" -> "1001215"  [label="DDG: jp2_image"];
}
