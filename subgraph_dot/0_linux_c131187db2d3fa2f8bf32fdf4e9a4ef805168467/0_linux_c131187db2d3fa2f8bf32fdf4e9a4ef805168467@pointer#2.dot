digraph "0_linux_c131187db2d3fa2f8bf32fdf4e9a4ef805168467@pointer" {
"1000181" [label="(Call,env->insn_aux_data = new_data)"];
"1000133" [label="(Call,memcpy(new_data, old_data, sizeof(struct bpf_insn_aux_data) * off))"];
"1000128" [label="(Call,!new_data)"];
"1000120" [label="(Call,new_data = vzalloc(sizeof(struct bpf_insn_aux_data) * prog_len))"];
"1000122" [label="(Call,vzalloc(sizeof(struct bpf_insn_aux_data) * prog_len))"];
"1000123" [label="(Call,sizeof(struct bpf_insn_aux_data) * prog_len)"];
"1000102" [label="(MethodParameterIn,u32 prog_len)"];
"1000108" [label="(Call,*old_data = env->insn_aux_data)"];
"1000136" [label="(Call,sizeof(struct bpf_insn_aux_data) * off)"];
"1000103" [label="(MethodParameterIn,u32 off)"];
"1000154" [label="(Call,prog_len - off - cnt + 1)"];
"1000141" [label="(Call,new_data + off + cnt - 1)"];
"1000162" [label="(Call,i = off)"];
"1000142" [label="(Identifier,new_data)"];
"1000105" [label="(Block,)"];
"1000140" [label="(Call,memcpy(new_data + off + cnt - 1, old_data + off,\n \t       sizeof(struct bpf_insn_aux_data) * (prog_len - off - cnt + 1)))"];
"1000110" [label="(Call,env->insn_aux_data)"];
"1000103" [label="(MethodParameterIn,u32 off)"];
"1000108" [label="(Call,*old_data = env->insn_aux_data)"];
"1000156" [label="(Call,off - cnt + 1)"];
"1000123" [label="(Call,sizeof(struct bpf_insn_aux_data) * prog_len)"];
"1000186" [label="(Call,vfree(old_data))"];
"1000136" [label="(Call,sizeof(struct bpf_insn_aux_data) * off)"];
"1000135" [label="(Identifier,old_data)"];
"1000129" [label="(Identifier,new_data)"];
"1000185" [label="(Identifier,new_data)"];
"1000165" [label="(Call,i < off + cnt - 1)"];
"1000133" [label="(Call,memcpy(new_data, old_data, sizeof(struct bpf_insn_aux_data) * off))"];
"1000134" [label="(Identifier,new_data)"];
"1000122" [label="(Call,vzalloc(sizeof(struct bpf_insn_aux_data) * prog_len))"];
"1000187" [label="(Identifier,old_data)"];
"1000128" [label="(Call,!new_data)"];
"1000126" [label="(Identifier,prog_len)"];
"1000102" [label="(MethodParameterIn,u32 prog_len)"];
"1000132" [label="(Identifier,ENOMEM)"];
"1000116" [label="(Identifier,cnt)"];
"1000139" [label="(Identifier,off)"];
"1000120" [label="(Call,new_data = vzalloc(sizeof(struct bpf_insn_aux_data) * prog_len))"];
"1000167" [label="(Call,off + cnt - 1)"];
"1000137" [label="(Call,sizeof(struct bpf_insn_aux_data))"];
"1000127" [label="(ControlStructure,if (!new_data))"];
"1000148" [label="(Call,old_data + off)"];
"1000143" [label="(Call,off + cnt - 1)"];
"1000181" [label="(Call,env->insn_aux_data = new_data)"];
"1000121" [label="(Identifier,new_data)"];
"1000182" [label="(Call,env->insn_aux_data)"];
"1000109" [label="(Identifier,old_data)"];
"1000190" [label="(MethodReturn,static int)"];
"1000124" [label="(Call,sizeof(struct bpf_insn_aux_data))"];
"1000181" -> "1000105"  [label="AST: "];
"1000181" -> "1000185"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000185" -> "1000181"  [label="AST: "];
"1000187" -> "1000181"  [label="CFG: "];
"1000181" -> "1000190"  [label="DDG: env->insn_aux_data"];
"1000181" -> "1000190"  [label="DDG: new_data"];
"1000133" -> "1000181"  [label="DDG: new_data"];
"1000133" -> "1000105"  [label="AST: "];
"1000133" -> "1000136"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000136" -> "1000133"  [label="AST: "];
"1000142" -> "1000133"  [label="CFG: "];
"1000133" -> "1000190"  [label="DDG: memcpy(new_data, old_data, sizeof(struct bpf_insn_aux_data) * off)"];
"1000133" -> "1000190"  [label="DDG: sizeof(struct bpf_insn_aux_data) * off"];
"1000128" -> "1000133"  [label="DDG: new_data"];
"1000108" -> "1000133"  [label="DDG: old_data"];
"1000136" -> "1000133"  [label="DDG: off"];
"1000133" -> "1000140"  [label="DDG: new_data"];
"1000133" -> "1000140"  [label="DDG: old_data"];
"1000133" -> "1000141"  [label="DDG: new_data"];
"1000133" -> "1000148"  [label="DDG: old_data"];
"1000133" -> "1000186"  [label="DDG: old_data"];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000129"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000132" -> "1000128"  [label="CFG: "];
"1000134" -> "1000128"  [label="CFG: "];
"1000128" -> "1000190"  [label="DDG: new_data"];
"1000128" -> "1000190"  [label="DDG: !new_data"];
"1000120" -> "1000128"  [label="DDG: new_data"];
"1000120" -> "1000105"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000122" -> "1000120"  [label="AST: "];
"1000129" -> "1000120"  [label="CFG: "];
"1000120" -> "1000190"  [label="DDG: vzalloc(sizeof(struct bpf_insn_aux_data) * prog_len)"];
"1000122" -> "1000120"  [label="DDG: sizeof(struct bpf_insn_aux_data) * prog_len"];
"1000122" -> "1000123"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000122" -> "1000190"  [label="DDG: sizeof(struct bpf_insn_aux_data) * prog_len"];
"1000123" -> "1000122"  [label="DDG: prog_len"];
"1000123" -> "1000126"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000126" -> "1000123"  [label="AST: "];
"1000123" -> "1000190"  [label="DDG: prog_len"];
"1000102" -> "1000123"  [label="DDG: prog_len"];
"1000123" -> "1000154"  [label="DDG: prog_len"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000190"  [label="DDG: prog_len"];
"1000102" -> "1000154"  [label="DDG: prog_len"];
"1000108" -> "1000105"  [label="AST: "];
"1000108" -> "1000110"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000110" -> "1000108"  [label="AST: "];
"1000116" -> "1000108"  [label="CFG: "];
"1000108" -> "1000190"  [label="DDG: env->insn_aux_data"];
"1000108" -> "1000190"  [label="DDG: old_data"];
"1000136" -> "1000139"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000139" -> "1000136"  [label="AST: "];
"1000103" -> "1000136"  [label="DDG: off"];
"1000136" -> "1000140"  [label="DDG: off"];
"1000136" -> "1000141"  [label="DDG: off"];
"1000136" -> "1000143"  [label="DDG: off"];
"1000136" -> "1000148"  [label="DDG: off"];
"1000136" -> "1000156"  [label="DDG: off"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000190"  [label="DDG: off"];
"1000103" -> "1000140"  [label="DDG: off"];
"1000103" -> "1000141"  [label="DDG: off"];
"1000103" -> "1000143"  [label="DDG: off"];
"1000103" -> "1000148"  [label="DDG: off"];
"1000103" -> "1000156"  [label="DDG: off"];
"1000103" -> "1000162"  [label="DDG: off"];
"1000103" -> "1000165"  [label="DDG: off"];
"1000103" -> "1000167"  [label="DDG: off"];
}
