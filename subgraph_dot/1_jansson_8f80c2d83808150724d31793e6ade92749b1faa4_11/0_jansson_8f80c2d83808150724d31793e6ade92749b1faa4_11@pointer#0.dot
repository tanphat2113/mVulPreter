digraph "0_jansson_8f80c2d83808150724d31793e6ade92749b1faa4_11@pointer" {
"1000259" [label="(Call,json = json_loadf(stdin, 0, &error))"];
"1000261" [label="(Call,json_loadf(stdin, 0, &error))"];
"1000267" [label="(Call,!json)"];
"1000287" [label="(Call,json_dumpf(json, stdout, flags))"];
"1000291" [label="(Call,json_decref(json))"];
"1000288" [label="(Identifier,json)"];
"1000261" [label="(Call,json_loadf(stdin, 0, &error))"];
"1000289" [label="(Identifier,stdout)"];
"1000258" [label="(ControlStructure,else)"];
"1000151" [label="(Call,flags |= JSON_COMPACT)"];
"1000291" [label="(Call,json_decref(json))"];
"1000268" [label="(Identifier,json)"];
"1000287" [label="(Call,json_dumpf(json, stdout, flags))"];
"1000295" [label="(MethodReturn,int)"];
"1000294" [label="(Literal,0)"];
"1000112" [label="(Call,_fileno(stdout))"];
"1000157" [label="(Call,flags |= JSON_ENSURE_ASCII)"];
"1000292" [label="(Identifier,json)"];
"1000266" [label="(ControlStructure,if(!json))"];
"1000163" [label="(Call,flags |= JSON_PRESERVE_ORDER)"];
"1000262" [label="(Identifier,stdin)"];
"1000264" [label="(Call,&error)"];
"1000260" [label="(Identifier,json)"];
"1000267" [label="(Call,!json)"];
"1000106" [label="(Call,flags = 0)"];
"1000263" [label="(Literal,0)"];
"1000271" [label="(Identifier,stderr)"];
"1000259" [label="(Call,json = json_loadf(stdin, 0, &error))"];
"1000169" [label="(Call,flags |= JSON_SORT_KEYS)"];
"1000103" [label="(Block,)"];
"1000142" [label="(Call,flags |= JSON_INDENT(indent))"];
"1000290" [label="(Identifier,flags)"];
"1000248" [label="(Call,json = json_loads(strip(buffer), 0, &error))"];
"1000259" -> "1000258"  [label="AST: "];
"1000259" -> "1000261"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000259"  [label="AST: "];
"1000268" -> "1000259"  [label="CFG: "];
"1000259" -> "1000295"  [label="DDG: json_loadf(stdin, 0, &error)"];
"1000261" -> "1000259"  [label="DDG: stdin"];
"1000261" -> "1000259"  [label="DDG: 0"];
"1000261" -> "1000259"  [label="DDG: &error"];
"1000259" -> "1000267"  [label="DDG: json"];
"1000261" -> "1000264"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000263" -> "1000261"  [label="AST: "];
"1000264" -> "1000261"  [label="AST: "];
"1000261" -> "1000295"  [label="DDG: &error"];
"1000261" -> "1000295"  [label="DDG: stdin"];
"1000267" -> "1000266"  [label="AST: "];
"1000267" -> "1000268"  [label="CFG: "];
"1000268" -> "1000267"  [label="AST: "];
"1000271" -> "1000267"  [label="CFG: "];
"1000288" -> "1000267"  [label="CFG: "];
"1000267" -> "1000295"  [label="DDG: json"];
"1000267" -> "1000295"  [label="DDG: !json"];
"1000248" -> "1000267"  [label="DDG: json"];
"1000267" -> "1000287"  [label="DDG: json"];
"1000287" -> "1000103"  [label="AST: "];
"1000287" -> "1000290"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000287"  [label="AST: "];
"1000290" -> "1000287"  [label="AST: "];
"1000292" -> "1000287"  [label="CFG: "];
"1000287" -> "1000295"  [label="DDG: flags"];
"1000287" -> "1000295"  [label="DDG: json_dumpf(json, stdout, flags)"];
"1000287" -> "1000295"  [label="DDG: stdout"];
"1000112" -> "1000287"  [label="DDG: stdout"];
"1000163" -> "1000287"  [label="DDG: flags"];
"1000106" -> "1000287"  [label="DDG: flags"];
"1000151" -> "1000287"  [label="DDG: flags"];
"1000157" -> "1000287"  [label="DDG: flags"];
"1000142" -> "1000287"  [label="DDG: flags"];
"1000169" -> "1000287"  [label="DDG: flags"];
"1000287" -> "1000291"  [label="DDG: json"];
"1000291" -> "1000103"  [label="AST: "];
"1000291" -> "1000292"  [label="CFG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000294" -> "1000291"  [label="CFG: "];
"1000291" -> "1000295"  [label="DDG: json_decref(json)"];
"1000291" -> "1000295"  [label="DDG: json"];
}
