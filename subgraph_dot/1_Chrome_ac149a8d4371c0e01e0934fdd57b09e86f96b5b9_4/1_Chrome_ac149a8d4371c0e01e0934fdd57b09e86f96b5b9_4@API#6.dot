digraph "1_Chrome_ac149a8d4371c0e01e0934fdd57b09e86f96b5b9_4@API" {
"1000252" [label="(Call,read_size == 0)"];
"1000204" [label="(Call,read_size = expected_size)"];
"1000116" [label="(Call,expected_size = (DWORD)*size)"];
"1000118" [label="(Call,(DWORD)*size)"];
"1000281" [label="(Call,(size_t)read_size)"];
"1000280" [label="(Call,(size_t)read_size > expected_size)"];
"1000300" [label="(Call,(size_t)read_size)"];
"1000299" [label="(Call,MIN((size_t)read_size, *size))"];
"1000296" [label="(Call,*size = MIN((size_t)read_size, *size))"];
"1000310" [label="(Call,memcpy(data, buf+1, *size))"];
"1000319" [label="(Call,memcpy(data, buf, *size))"];
"1000324" [label="(Call,safe_free(buf))"];
"1000325" [label="(Identifier,buf)"];
"1000137" [label="(Call,*size == 0)"];
"1000266" [label="(Call,buf[0] != id)"];
"1000268" [label="(Identifier,buf)"];
"1000213" [label="(Call,expected_size+1)"];
"1000217" [label="(Call,expected_size+1)"];
"1000279" [label="(ControlStructure,if ((size_t)read_size > expected_size))"];
"1000303" [label="(Call,*size)"];
"1000315" [label="(Call,*size)"];
"1000117" [label="(Identifier,expected_size)"];
"1000304" [label="(Identifier,size)"];
"1000312" [label="(Call,buf+1)"];
"1000283" [label="(Identifier,read_size)"];
"1000252" [label="(Call,read_size == 0)"];
"1000204" [label="(Call,read_size = expected_size)"];
"1000116" [label="(Call,expected_size = (DWORD)*size)"];
"1000309" [label="(Block,)"];
"1000272" [label="(Call,usbi_warn(NULL, \"mismatched report ID (data is %02X, parameter is %02X)\", buf[0], id))"];
"1000311" [label="(Identifier,data)"];
"1000322" [label="(Call,*size)"];
"1000199" [label="(Call,tp->hid_expected_size = expected_size)"];
"1000120" [label="(Call,*size)"];
"1000297" [label="(Call,*size)"];
"1000111" [label="(Block,)"];
"1000296" [label="(Call,*size = MIN((size_t)read_size, *size))"];
"1000307" [label="(Identifier,id)"];
"1000209" [label="(Call,DeviceIoControl(hid_handle, ioctl_code, buf, expected_size+1,\n\t\tbuf, expected_size+1, &read_size, overlapped))"];
"1000281" [label="(Call,(size_t)read_size)"];
"1000124" [label="(Identifier,r)"];
"1000287" [label="(Identifier,r)"];
"1000318" [label="(Block,)"];
"1000310" [label="(Call,memcpy(data, buf+1, *size))"];
"1000320" [label="(Identifier,data)"];
"1000327" [label="(Identifier,r)"];
"1000302" [label="(Identifier,read_size)"];
"1000175" [label="(Call,calloc(expected_size+1, 1))"];
"1000194" [label="(Call,usbi_dbg(\"report ID: 0x%02X\", buf[0]))"];
"1000176" [label="(Call,expected_size+1)"];
"1000118" [label="(Call,(DWORD)*size)"];
"1000251" [label="(ControlStructure,if (read_size == 0))"];
"1000205" [label="(Identifier,read_size)"];
"1000328" [label="(MethodReturn,static int)"];
"1000264" [label="(Block,)"];
"1000253" [label="(Identifier,read_size)"];
"1000141" [label="(Call,*size > MAX_HID_REPORT_SIZE)"];
"1000280" [label="(Call,(size_t)read_size > expected_size)"];
"1000257" [label="(Identifier,NULL)"];
"1000210" [label="(Identifier,hid_handle)"];
"1000319" [label="(Call,memcpy(data, buf, *size))"];
"1000254" [label="(Literal,0)"];
"1000300" [label="(Call,(size_t)read_size)"];
"1000299" [label="(Call,MIN((size_t)read_size, *size))"];
"1000294" [label="(Identifier,r)"];
"1000321" [label="(Identifier,buf)"];
"1000324" [label="(Call,safe_free(buf))"];
"1000284" [label="(Identifier,expected_size)"];
"1000206" [label="(Identifier,expected_size)"];
"1000106" [label="(MethodParameterIn,void *data)"];
"1000252" -> "1000251"  [label="AST: "];
"1000252" -> "1000254"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000254" -> "1000252"  [label="AST: "];
"1000257" -> "1000252"  [label="CFG: "];
"1000268" -> "1000252"  [label="CFG: "];
"1000252" -> "1000328"  [label="DDG: read_size"];
"1000252" -> "1000328"  [label="DDG: read_size == 0"];
"1000204" -> "1000252"  [label="DDG: read_size"];
"1000252" -> "1000281"  [label="DDG: read_size"];
"1000204" -> "1000111"  [label="AST: "];
"1000204" -> "1000206"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000206" -> "1000204"  [label="AST: "];
"1000210" -> "1000204"  [label="CFG: "];
"1000204" -> "1000328"  [label="DDG: read_size"];
"1000116" -> "1000204"  [label="DDG: expected_size"];
"1000116" -> "1000111"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000124" -> "1000116"  [label="CFG: "];
"1000116" -> "1000328"  [label="DDG: expected_size"];
"1000116" -> "1000328"  [label="DDG: (DWORD)*size"];
"1000118" -> "1000116"  [label="DDG: *size"];
"1000116" -> "1000175"  [label="DDG: expected_size"];
"1000116" -> "1000176"  [label="DDG: expected_size"];
"1000116" -> "1000199"  [label="DDG: expected_size"];
"1000116" -> "1000209"  [label="DDG: expected_size"];
"1000116" -> "1000213"  [label="DDG: expected_size"];
"1000116" -> "1000217"  [label="DDG: expected_size"];
"1000116" -> "1000280"  [label="DDG: expected_size"];
"1000118" -> "1000120"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="AST: "];
"1000118" -> "1000137"  [label="DDG: *size"];
"1000281" -> "1000280"  [label="AST: "];
"1000281" -> "1000283"  [label="CFG: "];
"1000282" -> "1000281"  [label="AST: "];
"1000283" -> "1000281"  [label="AST: "];
"1000284" -> "1000281"  [label="CFG: "];
"1000281" -> "1000280"  [label="DDG: read_size"];
"1000281" -> "1000300"  [label="DDG: read_size"];
"1000280" -> "1000279"  [label="AST: "];
"1000280" -> "1000284"  [label="CFG: "];
"1000284" -> "1000280"  [label="AST: "];
"1000287" -> "1000280"  [label="CFG: "];
"1000294" -> "1000280"  [label="CFG: "];
"1000280" -> "1000328"  [label="DDG: expected_size"];
"1000280" -> "1000328"  [label="DDG: (size_t)read_size > expected_size"];
"1000300" -> "1000299"  [label="AST: "];
"1000300" -> "1000302"  [label="CFG: "];
"1000301" -> "1000300"  [label="AST: "];
"1000302" -> "1000300"  [label="AST: "];
"1000304" -> "1000300"  [label="CFG: "];
"1000300" -> "1000328"  [label="DDG: read_size"];
"1000300" -> "1000299"  [label="DDG: read_size"];
"1000299" -> "1000296"  [label="AST: "];
"1000299" -> "1000303"  [label="CFG: "];
"1000303" -> "1000299"  [label="AST: "];
"1000296" -> "1000299"  [label="CFG: "];
"1000299" -> "1000328"  [label="DDG: (size_t)read_size"];
"1000299" -> "1000296"  [label="DDG: (size_t)read_size"];
"1000299" -> "1000296"  [label="DDG: *size"];
"1000141" -> "1000299"  [label="DDG: *size"];
"1000137" -> "1000299"  [label="DDG: *size"];
"1000296" -> "1000264"  [label="AST: "];
"1000297" -> "1000296"  [label="AST: "];
"1000307" -> "1000296"  [label="CFG: "];
"1000296" -> "1000328"  [label="DDG: MIN((size_t)read_size, *size)"];
"1000296" -> "1000310"  [label="DDG: *size"];
"1000296" -> "1000319"  [label="DDG: *size"];
"1000310" -> "1000309"  [label="AST: "];
"1000310" -> "1000315"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000312" -> "1000310"  [label="AST: "];
"1000315" -> "1000310"  [label="AST: "];
"1000325" -> "1000310"  [label="CFG: "];
"1000310" -> "1000328"  [label="DDG: memcpy(data, buf+1, *size)"];
"1000310" -> "1000328"  [label="DDG: buf+1"];
"1000310" -> "1000328"  [label="DDG: *size"];
"1000310" -> "1000328"  [label="DDG: data"];
"1000106" -> "1000310"  [label="DDG: data"];
"1000272" -> "1000310"  [label="DDG: buf[0]"];
"1000209" -> "1000310"  [label="DDG: buf"];
"1000266" -> "1000310"  [label="DDG: buf[0]"];
"1000319" -> "1000318"  [label="AST: "];
"1000319" -> "1000322"  [label="CFG: "];
"1000320" -> "1000319"  [label="AST: "];
"1000321" -> "1000319"  [label="AST: "];
"1000322" -> "1000319"  [label="AST: "];
"1000325" -> "1000319"  [label="CFG: "];
"1000319" -> "1000328"  [label="DDG: memcpy(data, buf, *size)"];
"1000319" -> "1000328"  [label="DDG: *size"];
"1000319" -> "1000328"  [label="DDG: data"];
"1000106" -> "1000319"  [label="DDG: data"];
"1000272" -> "1000319"  [label="DDG: buf[0]"];
"1000209" -> "1000319"  [label="DDG: buf"];
"1000266" -> "1000319"  [label="DDG: buf[0]"];
"1000319" -> "1000324"  [label="DDG: buf"];
"1000324" -> "1000111"  [label="AST: "];
"1000324" -> "1000325"  [label="CFG: "];
"1000325" -> "1000324"  [label="AST: "];
"1000327" -> "1000324"  [label="CFG: "];
"1000324" -> "1000328"  [label="DDG: safe_free(buf)"];
"1000324" -> "1000328"  [label="DDG: buf"];
"1000272" -> "1000324"  [label="DDG: buf[0]"];
"1000209" -> "1000324"  [label="DDG: buf"];
"1000266" -> "1000324"  [label="DDG: buf[0]"];
"1000194" -> "1000324"  [label="DDG: buf[0]"];
}
