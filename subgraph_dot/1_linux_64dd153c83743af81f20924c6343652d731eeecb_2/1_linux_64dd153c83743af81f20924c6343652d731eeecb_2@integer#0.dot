digraph "1_linux_64dd153c83743af81f20924c6343652d731eeecb_2@integer" {
"1000154" [label="(Call,next = (offset + len - 1) >> sdp->sd_sb.sb_bsize_shift)"];
"1000156" [label="(Call,(offset + len - 1) >> sdp->sd_sb.sb_bsize_shift)"];
"1000104" [label="(MethodParameterIn,loff_t offset)"];
"1000159" [label="(Call,len - 1)"];
"1000105" [label="(MethodParameterIn,loff_t len)"];
"1000169" [label="(Call,(next + 1) << sdp->sd_sb.sb_bsize_shift)"];
"1000167" [label="(Call,next = (next + 1) << sdp->sd_sb.sb_bsize_shift)"];
"1000190" [label="(Call,next - offset)"];
"1000188" [label="(Call,len = next - offset)"];
"1000249" [label="(Call,gfs2_write_alloc_required(ip, offset, len))"];
"1000248" [label="(Call,!gfs2_write_alloc_required(ip, offset, len))"];
"1000255" [label="(Call,len > 0)"];
"1000260" [label="(Call,len < bytes)"];
"1000263" [label="(Call,bytes = len)"];
"1000287" [label="(Call,gfs2_write_calc_reserv(ip, bytes, &data_blocks, &ind_blocks))"];
"1000303" [label="(Call,gfs2_inplace_reserve(ip))"];
"1000301" [label="(Call,error = gfs2_inplace_reserve(ip))"];
"1000310" [label="(Call,error == -ENOSPC)"];
"1000309" [label="(Call,error == -ENOSPC && bytes > sdp->sd_sb.sb_bsize)"];
"1000444" [label="(Return,return error;)"];
"1000344" [label="(Call,calc_max_reserv(ip, len, &max_bytes, &data_blocks, &ind_blocks))"];
"1000372" [label="(Call,gfs2_rg_blocks(ip))"];
"1000360" [label="(Call,rblocks = RES_DINODE + ind_blocks + RES_STATFS + RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip))"];
"1000377" [label="(Call,rblocks += data_blocks ? data_blocks : 1)"];
"1000385" [label="(Call,gfs2_trans_begin(sdp, rblocks,\n\t\t\t\t\t PAGE_CACHE_SIZE/sdp->sd_sb.sb_bsize))"];
"1000383" [label="(Call,error = gfs2_trans_begin(sdp, rblocks,\n\t\t\t\t\t PAGE_CACHE_SIZE/sdp->sd_sb.sb_bsize))"];
"1000405" [label="(Call,gfs2_trans_end(sdp))"];
"1000362" [label="(Call,RES_DINODE + ind_blocks + RES_STATFS + RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip))"];
"1000364" [label="(Call,ind_blocks + RES_STATFS + RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip))"];
"1000366" [label="(Call,RES_STATFS + RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip))"];
"1000368" [label="(Call,RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip))"];
"1000370" [label="(Call,RES_RG_HDR + gfs2_rg_blocks(ip))"];
"1000375" [label="(Call,gfs2_is_jdata(ip))"];
"1000416" [label="(Call,gfs2_inplace_release(ip))"];
"1000418" [label="(Call,gfs2_quota_unlock(ip))"];
"1000420" [label="(Call,gfs2_alloc_put(ip))"];
"1000268" [label="(Call,gfs2_alloc_get(ip))"];
"1000266" [label="(Call,al = gfs2_alloc_get(ip))"];
"1000271" [label="(Call,!al)"];
"1000281" [label="(Call,gfs2_quota_lock_check(ip))"];
"1000279" [label="(Call,error = gfs2_quota_lock_check(ip))"];
"1000430" [label="(Call,gfs2_alloc_put(ip))"];
"1000424" [label="(Call,gfs2_inplace_release(ip))"];
"1000427" [label="(Call,gfs2_quota_unlock(ip))"];
"1000410" [label="(Call,len -= max_bytes)"];
"1000314" [label="(Call,bytes > sdp->sd_sb.sb_bsize)"];
"1000322" [label="(Call,bytes >>= 1)"];
"1000325" [label="(Call,bytes &= bsize_mask)"];
"1000329" [label="(Call,bytes == 0)"];
"1000332" [label="(Call,bytes = sdp->sd_sb.sb_bsize)"];
"1000388" [label="(Call,PAGE_CACHE_SIZE/sdp->sd_sb.sb_bsize)"];
"1000341" [label="(Call,max_bytes = bytes)"];
"1000400" [label="(Call,fallocate_chunk(inode, offset, max_bytes, mode))"];
"1000398" [label="(Call,error = fallocate_chunk(inode, offset, max_bytes, mode))"];
"1000413" [label="(Call,offset += max_bytes)"];
"1000170" [label="(Call,next + 1)"];
"1000254" [label="(ControlStructure,while (len > 0))"];
"1000269" [label="(Identifier,ip)"];
"1000355" [label="(Identifier,al)"];
"1000383" [label="(Call,error = gfs2_trans_begin(sdp, rblocks,\n\t\t\t\t\t PAGE_CACHE_SIZE/sdp->sd_sb.sb_bsize))"];
"1000321" [label="(Block,)"];
"1000170" [label="(Call,next + 1)"];
"1000332" [label="(Call,bytes = sdp->sd_sb.sb_bsize)"];
"1000284" [label="(Identifier,error)"];
"1000347" [label="(Call,&max_bytes)"];
"1000314" [label="(Call,bytes > sdp->sd_sb.sb_bsize)"];
"1000256" [label="(Identifier,len)"];
"1000322" [label="(Call,bytes >>= 1)"];
"1000118" [label="(Call,*sdp = GFS2_SB(inode))"];
"1000266" [label="(Call,al = gfs2_alloc_get(ip))"];
"1000432" [label="(JumpTarget,out_unlock:)"];
"1000249" [label="(Call,gfs2_write_alloc_required(ip, offset, len))"];
"1000262" [label="(Identifier,bytes)"];
"1000344" [label="(Call,calc_max_reserv(ip, len, &max_bytes, &data_blocks, &ind_blocks))"];
"1000404" [label="(Identifier,mode)"];
"1000331" [label="(Literal,0)"];
"1000171" [label="(Identifier,next)"];
"1000413" [label="(Call,offset += max_bytes)"];
"1000199" [label="(Call,sdp->sd_sb.sb_bsize / 2)"];
"1000212" [label="(Call,bytes &= bsize_mask)"];
"1000289" [label="(Identifier,bytes)"];
"1000188" [label="(Call,len = next - offset)"];
"1000410" [label="(Call,len -= max_bytes)"];
"1000123" [label="(Call,*ip = GFS2_I(inode))"];
"1000370" [label="(Call,RES_RG_HDR + gfs2_rg_blocks(ip))"];
"1000157" [label="(Call,offset + len - 1)"];
"1000161" [label="(Literal,1)"];
"1000132" [label="(Call,ind_blocks = 0)"];
"1000259" [label="(ControlStructure,if (len < bytes))"];
"1000309" [label="(Call,error == -ENOSPC && bytes > sdp->sd_sb.sb_bsize)"];
"1000422" [label="(ControlStructure,goto out_unlock;)"];
"1000333" [label="(Identifier,bytes)"];
"1000257" [label="(Literal,0)"];
"1000371" [label="(Identifier,RES_RG_HDR)"];
"1000424" [label="(Call,gfs2_inplace_release(ip))"];
"1000271" [label="(Call,!al)"];
"1000316" [label="(Call,sdp->sd_sb.sb_bsize)"];
"1000311" [label="(Identifier,error)"];
"1000343" [label="(Identifier,bytes)"];
"1000292" [label="(Call,&ind_blocks)"];
"1000219" [label="(Call,bytes = sdp->sd_sb.sb_bsize)"];
"1000445" [label="(Identifier,error)"];
"1000377" [label="(Call,rblocks += data_blocks ? data_blocks : 1)"];
"1000275" [label="(Identifier,error)"];
"1000328" [label="(ControlStructure,if (bytes == 0))"];
"1000323" [label="(Identifier,bytes)"];
"1000310" [label="(Call,error == -ENOSPC)"];
"1000280" [label="(Identifier,error)"];
"1000403" [label="(Identifier,max_bytes)"];
"1000179" [label="(Call,mode & ~FALLOC_FL_KEEP_SIZE)"];
"1000329" [label="(Call,bytes == 0)"];
"1000180" [label="(Identifier,mode)"];
"1000446" [label="(MethodReturn,static long)"];
"1000125" [label="(Call,GFS2_I(inode))"];
"1000303" [label="(Call,gfs2_inplace_reserve(ip))"];
"1000173" [label="(Call,sdp->sd_sb.sb_bsize_shift)"];
"1000325" [label="(Call,bytes &= bsize_mask)"];
"1000398" [label="(Call,error = fallocate_chunk(inode, offset, max_bytes, mode))"];
"1000419" [label="(Identifier,ip)"];
"1000287" [label="(Call,gfs2_write_calc_reserv(ip, bytes, &data_blocks, &ind_blocks))"];
"1000244" [label="(Call,unlikely(error))"];
"1000429" [label="(JumpTarget,out_alloc_put:)"];
"1000264" [label="(Identifier,bytes)"];
"1000190" [label="(Call,next - offset)"];
"1000334" [label="(Call,sdp->sd_sb.sb_bsize)"];
"1000261" [label="(Identifier,len)"];
"1000406" [label="(Identifier,sdp)"];
"1000162" [label="(Call,sdp->sd_sb.sb_bsize_shift)"];
"1000304" [label="(Identifier,ip)"];
"1000302" [label="(Identifier,error)"];
"1000308" [label="(ControlStructure,if (error == -ENOSPC && bytes > sdp->sd_sb.sb_bsize))"];
"1000216" [label="(Call,bytes == 0)"];
"1000430" [label="(Call,gfs2_alloc_put(ip))"];
"1000247" [label="(ControlStructure,if (!gfs2_write_alloc_required(ip, offset, len)))"];
"1000367" [label="(Identifier,RES_STATFS)"];
"1000175" [label="(Identifier,sdp)"];
"1000250" [label="(Identifier,ip)"];
"1000376" [label="(Identifier,ip)"];
"1000172" [label="(Literal,1)"];
"1000268" [label="(Call,gfs2_alloc_get(ip))"];
"1000191" [label="(Identifier,next)"];
"1000106" [label="(Block,)"];
"1000301" [label="(Call,error = gfs2_inplace_reserve(ip))"];
"1000389" [label="(Identifier,PAGE_CACHE_SIZE)"];
"1000260" [label="(Call,len < bytes)"];
"1000345" [label="(Identifier,ip)"];
"1000288" [label="(Identifier,ip)"];
"1000251" [label="(Identifier,offset)"];
"1000414" [label="(Identifier,offset)"];
"1000324" [label="(Literal,1)"];
"1000270" [label="(ControlStructure,if (!al))"];
"1000375" [label="(Call,gfs2_is_jdata(ip))"];
"1000192" [label="(Identifier,offset)"];
"1000363" [label="(Identifier,RES_DINODE)"];
"1000444" [label="(Return,return error;)"];
"1000385" [label="(Call,gfs2_trans_begin(sdp, rblocks,\n\t\t\t\t\t PAGE_CACHE_SIZE/sdp->sd_sb.sb_bsize))"];
"1000426" [label="(JumpTarget,out_qunlock:)"];
"1000364" [label="(Call,ind_blocks + RES_STATFS + RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip))"];
"1000154" [label="(Call,next = (offset + len - 1) >> sdp->sd_sb.sb_bsize_shift)"];
"1000418" [label="(Call,gfs2_quota_unlock(ip))"];
"1000103" [label="(MethodParameterIn,int mode)"];
"1000315" [label="(Identifier,bytes)"];
"1000400" [label="(Call,fallocate_chunk(inode, offset, max_bytes, mode))"];
"1000306" [label="(Identifier,error)"];
"1000362" [label="(Call,RES_DINODE + ind_blocks + RES_STATFS + RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip))"];
"1000366" [label="(Call,RES_STATFS + RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip))"];
"1000379" [label="(Call,data_blocks ? data_blocks : 1)"];
"1000330" [label="(Identifier,bytes)"];
"1000411" [label="(Identifier,len)"];
"1000326" [label="(Identifier,bytes)"];
"1000267" [label="(Identifier,al)"];
"1000368" [label="(Call,RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip))"];
"1000339" [label="(ControlStructure,goto retry;)"];
"1000167" [label="(Call,next = (next + 1) << sdp->sd_sb.sb_bsize_shift)"];
"1000351" [label="(Call,&ind_blocks)"];
"1000185" [label="(Call,offset &= bsize_mask)"];
"1000412" [label="(Identifier,max_bytes)"];
"1000265" [label="(Identifier,len)"];
"1000360" [label="(Call,rblocks = RES_DINODE + ind_blocks + RES_STATFS + RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip))"];
"1000417" [label="(Identifier,ip)"];
"1000155" [label="(Identifier,next)"];
"1000420" [label="(Call,gfs2_alloc_put(ip))"];
"1000341" [label="(Call,max_bytes = bytes)"];
"1000384" [label="(Identifier,error)"];
"1000431" [label="(Identifier,ip)"];
"1000189" [label="(Identifier,len)"];
"1000399" [label="(Identifier,error)"];
"1000168" [label="(Identifier,next)"];
"1000390" [label="(Call,sdp->sd_sb.sb_bsize)"];
"1000272" [label="(Identifier,al)"];
"1000258" [label="(Block,)"];
"1000290" [label="(Call,&data_blocks)"];
"1000349" [label="(Call,&data_blocks)"];
"1000346" [label="(Identifier,len)"];
"1000281" [label="(Call,gfs2_quota_lock_check(ip))"];
"1000428" [label="(Identifier,ip)"];
"1000401" [label="(Identifier,inode)"];
"1000373" [label="(Identifier,ip)"];
"1000169" [label="(Call,(next + 1) << sdp->sd_sb.sb_bsize_shift)"];
"1000296" [label="(Identifier,al)"];
"1000263" [label="(Call,bytes = len)"];
"1000388" [label="(Call,PAGE_CACHE_SIZE/sdp->sd_sb.sb_bsize)"];
"1000194" [label="(Identifier,bytes)"];
"1000274" [label="(Call,error = -ENOMEM)"];
"1000415" [label="(Identifier,max_bytes)"];
"1000327" [label="(Identifier,bsize_mask)"];
"1000160" [label="(Identifier,len)"];
"1000387" [label="(Identifier,rblocks)"];
"1000248" [label="(Call,!gfs2_write_alloc_required(ip, offset, len))"];
"1000365" [label="(Identifier,ind_blocks)"];
"1000252" [label="(Identifier,len)"];
"1000386" [label="(Identifier,sdp)"];
"1000361" [label="(Identifier,rblocks)"];
"1000279" [label="(Call,error = gfs2_quota_lock_check(ip))"];
"1000408" [label="(Identifier,error)"];
"1000427" [label="(Call,gfs2_quota_unlock(ip))"];
"1000425" [label="(Identifier,ip)"];
"1000342" [label="(Identifier,max_bytes)"];
"1000369" [label="(Identifier,RES_QUOTA)"];
"1000253" [label="(ControlStructure,goto out_unlock;)"];
"1000372" [label="(Call,gfs2_rg_blocks(ip))"];
"1000374" [label="(ControlStructure,if (gfs2_is_jdata(ip)))"];
"1000396" [label="(Identifier,error)"];
"1000312" [label="(Call,-ENOSPC)"];
"1000340" [label="(ControlStructure,goto out_qunlock;)"];
"1000416" [label="(Call,gfs2_inplace_release(ip))"];
"1000402" [label="(Identifier,offset)"];
"1000105" [label="(MethodParameterIn,loff_t len)"];
"1000282" [label="(Identifier,ip)"];
"1000104" [label="(MethodParameterIn,loff_t offset)"];
"1000156" [label="(Call,(offset + len - 1) >> sdp->sd_sb.sb_bsize_shift)"];
"1000378" [label="(Identifier,rblocks)"];
"1000421" [label="(Identifier,ip)"];
"1000405" [label="(Call,gfs2_trans_end(sdp))"];
"1000159" [label="(Call,len - 1)"];
"1000255" [label="(Call,len > 0)"];
"1000154" -> "1000106"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000156" -> "1000154"  [label="AST: "];
"1000168" -> "1000154"  [label="CFG: "];
"1000154" -> "1000446"  [label="DDG: (offset + len - 1) >> sdp->sd_sb.sb_bsize_shift"];
"1000156" -> "1000154"  [label="DDG: offset + len - 1"];
"1000156" -> "1000154"  [label="DDG: sdp->sd_sb.sb_bsize_shift"];
"1000154" -> "1000169"  [label="DDG: next"];
"1000154" -> "1000170"  [label="DDG: next"];
"1000156" -> "1000162"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000162" -> "1000156"  [label="AST: "];
"1000156" -> "1000446"  [label="DDG: offset + len - 1"];
"1000104" -> "1000156"  [label="DDG: offset"];
"1000159" -> "1000156"  [label="DDG: len"];
"1000159" -> "1000156"  [label="DDG: 1"];
"1000156" -> "1000169"  [label="DDG: sdp->sd_sb.sb_bsize_shift"];
"1000104" -> "1000101"  [label="AST: "];
"1000104" -> "1000446"  [label="DDG: offset"];
"1000104" -> "1000157"  [label="DDG: offset"];
"1000104" -> "1000185"  [label="DDG: offset"];
"1000104" -> "1000190"  [label="DDG: offset"];
"1000104" -> "1000249"  [label="DDG: offset"];
"1000104" -> "1000400"  [label="DDG: offset"];
"1000104" -> "1000413"  [label="DDG: offset"];
"1000159" -> "1000157"  [label="AST: "];
"1000159" -> "1000161"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000161" -> "1000159"  [label="AST: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000159" -> "1000446"  [label="DDG: len"];
"1000159" -> "1000157"  [label="DDG: len"];
"1000159" -> "1000157"  [label="DDG: 1"];
"1000105" -> "1000159"  [label="DDG: len"];
"1000105" -> "1000101"  [label="AST: "];
"1000105" -> "1000446"  [label="DDG: len"];
"1000105" -> "1000188"  [label="DDG: len"];
"1000105" -> "1000249"  [label="DDG: len"];
"1000105" -> "1000255"  [label="DDG: len"];
"1000105" -> "1000260"  [label="DDG: len"];
"1000105" -> "1000263"  [label="DDG: len"];
"1000105" -> "1000344"  [label="DDG: len"];
"1000105" -> "1000410"  [label="DDG: len"];
"1000169" -> "1000167"  [label="AST: "];
"1000169" -> "1000173"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000173" -> "1000169"  [label="AST: "];
"1000167" -> "1000169"  [label="CFG: "];
"1000169" -> "1000446"  [label="DDG: sdp->sd_sb.sb_bsize_shift"];
"1000169" -> "1000446"  [label="DDG: next + 1"];
"1000169" -> "1000167"  [label="DDG: next + 1"];
"1000169" -> "1000167"  [label="DDG: sdp->sd_sb.sb_bsize_shift"];
"1000167" -> "1000106"  [label="AST: "];
"1000168" -> "1000167"  [label="AST: "];
"1000180" -> "1000167"  [label="CFG: "];
"1000167" -> "1000446"  [label="DDG: next"];
"1000167" -> "1000446"  [label="DDG: (next + 1) << sdp->sd_sb.sb_bsize_shift"];
"1000167" -> "1000190"  [label="DDG: next"];
"1000190" -> "1000188"  [label="AST: "];
"1000190" -> "1000192"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000192" -> "1000190"  [label="AST: "];
"1000188" -> "1000190"  [label="CFG: "];
"1000190" -> "1000446"  [label="DDG: next"];
"1000190" -> "1000446"  [label="DDG: offset"];
"1000190" -> "1000188"  [label="DDG: next"];
"1000190" -> "1000188"  [label="DDG: offset"];
"1000185" -> "1000190"  [label="DDG: offset"];
"1000190" -> "1000249"  [label="DDG: offset"];
"1000188" -> "1000106"  [label="AST: "];
"1000189" -> "1000188"  [label="AST: "];
"1000194" -> "1000188"  [label="CFG: "];
"1000188" -> "1000446"  [label="DDG: next - offset"];
"1000188" -> "1000446"  [label="DDG: len"];
"1000188" -> "1000249"  [label="DDG: len"];
"1000249" -> "1000248"  [label="AST: "];
"1000249" -> "1000252"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000251" -> "1000249"  [label="AST: "];
"1000252" -> "1000249"  [label="AST: "];
"1000248" -> "1000249"  [label="CFG: "];
"1000249" -> "1000446"  [label="DDG: offset"];
"1000249" -> "1000446"  [label="DDG: len"];
"1000249" -> "1000446"  [label="DDG: ip"];
"1000249" -> "1000248"  [label="DDG: ip"];
"1000249" -> "1000248"  [label="DDG: offset"];
"1000249" -> "1000248"  [label="DDG: len"];
"1000123" -> "1000249"  [label="DDG: ip"];
"1000249" -> "1000255"  [label="DDG: len"];
"1000249" -> "1000268"  [label="DDG: ip"];
"1000249" -> "1000400"  [label="DDG: offset"];
"1000248" -> "1000247"  [label="AST: "];
"1000253" -> "1000248"  [label="CFG: "];
"1000256" -> "1000248"  [label="CFG: "];
"1000248" -> "1000446"  [label="DDG: !gfs2_write_alloc_required(ip, offset, len)"];
"1000248" -> "1000446"  [label="DDG: gfs2_write_alloc_required(ip, offset, len)"];
"1000255" -> "1000254"  [label="AST: "];
"1000255" -> "1000257"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000257" -> "1000255"  [label="AST: "];
"1000261" -> "1000255"  [label="CFG: "];
"1000422" -> "1000255"  [label="CFG: "];
"1000255" -> "1000446"  [label="DDG: len > 0"];
"1000255" -> "1000446"  [label="DDG: len"];
"1000410" -> "1000255"  [label="DDG: len"];
"1000255" -> "1000260"  [label="DDG: len"];
"1000260" -> "1000259"  [label="AST: "];
"1000260" -> "1000262"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000262" -> "1000260"  [label="AST: "];
"1000264" -> "1000260"  [label="CFG: "];
"1000267" -> "1000260"  [label="CFG: "];
"1000260" -> "1000446"  [label="DDG: len < bytes"];
"1000260" -> "1000446"  [label="DDG: bytes"];
"1000260" -> "1000446"  [label="DDG: len"];
"1000216" -> "1000260"  [label="DDG: bytes"];
"1000219" -> "1000260"  [label="DDG: bytes"];
"1000287" -> "1000260"  [label="DDG: bytes"];
"1000260" -> "1000263"  [label="DDG: len"];
"1000260" -> "1000287"  [label="DDG: bytes"];
"1000260" -> "1000344"  [label="DDG: len"];
"1000263" -> "1000259"  [label="AST: "];
"1000263" -> "1000265"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000263"  [label="AST: "];
"1000267" -> "1000263"  [label="CFG: "];
"1000263" -> "1000446"  [label="DDG: len"];
"1000263" -> "1000446"  [label="DDG: bytes"];
"1000263" -> "1000287"  [label="DDG: bytes"];
"1000287" -> "1000258"  [label="AST: "];
"1000287" -> "1000292"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000287"  [label="AST: "];
"1000290" -> "1000287"  [label="AST: "];
"1000292" -> "1000287"  [label="AST: "];
"1000296" -> "1000287"  [label="CFG: "];
"1000287" -> "1000446"  [label="DDG: &ind_blocks"];
"1000287" -> "1000446"  [label="DDG: &data_blocks"];
"1000287" -> "1000446"  [label="DDG: gfs2_write_calc_reserv(ip, bytes, &data_blocks, &ind_blocks)"];
"1000287" -> "1000446"  [label="DDG: bytes"];
"1000281" -> "1000287"  [label="DDG: ip"];
"1000303" -> "1000287"  [label="DDG: ip"];
"1000332" -> "1000287"  [label="DDG: bytes"];
"1000329" -> "1000287"  [label="DDG: bytes"];
"1000344" -> "1000287"  [label="DDG: &data_blocks"];
"1000344" -> "1000287"  [label="DDG: &ind_blocks"];
"1000287" -> "1000303"  [label="DDG: ip"];
"1000287" -> "1000314"  [label="DDG: bytes"];
"1000287" -> "1000322"  [label="DDG: bytes"];
"1000287" -> "1000341"  [label="DDG: bytes"];
"1000287" -> "1000344"  [label="DDG: &data_blocks"];
"1000287" -> "1000344"  [label="DDG: &ind_blocks"];
"1000303" -> "1000301"  [label="AST: "];
"1000303" -> "1000304"  [label="CFG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000301" -> "1000303"  [label="CFG: "];
"1000303" -> "1000301"  [label="DDG: ip"];
"1000303" -> "1000344"  [label="DDG: ip"];
"1000303" -> "1000427"  [label="DDG: ip"];
"1000301" -> "1000258"  [label="AST: "];
"1000302" -> "1000301"  [label="AST: "];
"1000306" -> "1000301"  [label="CFG: "];
"1000301" -> "1000446"  [label="DDG: gfs2_inplace_reserve(ip)"];
"1000301" -> "1000310"  [label="DDG: error"];
"1000310" -> "1000309"  [label="AST: "];
"1000310" -> "1000312"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000312" -> "1000310"  [label="AST: "];
"1000315" -> "1000310"  [label="CFG: "];
"1000309" -> "1000310"  [label="CFG: "];
"1000310" -> "1000446"  [label="DDG: -ENOSPC"];
"1000310" -> "1000446"  [label="DDG: error"];
"1000310" -> "1000309"  [label="DDG: error"];
"1000310" -> "1000309"  [label="DDG: -ENOSPC"];
"1000312" -> "1000310"  [label="DDG: ENOSPC"];
"1000310" -> "1000444"  [label="DDG: error"];
"1000309" -> "1000308"  [label="AST: "];
"1000309" -> "1000314"  [label="CFG: "];
"1000314" -> "1000309"  [label="AST: "];
"1000323" -> "1000309"  [label="CFG: "];
"1000340" -> "1000309"  [label="CFG: "];
"1000309" -> "1000446"  [label="DDG: error == -ENOSPC"];
"1000309" -> "1000446"  [label="DDG: error == -ENOSPC && bytes > sdp->sd_sb.sb_bsize"];
"1000309" -> "1000446"  [label="DDG: bytes > sdp->sd_sb.sb_bsize"];
"1000314" -> "1000309"  [label="DDG: bytes"];
"1000314" -> "1000309"  [label="DDG: sdp->sd_sb.sb_bsize"];
"1000444" -> "1000106"  [label="AST: "];
"1000444" -> "1000445"  [label="CFG: "];
"1000445" -> "1000444"  [label="AST: "];
"1000446" -> "1000444"  [label="CFG: "];
"1000444" -> "1000446"  [label="DDG: <RET>"];
"1000445" -> "1000444"  [label="DDG: error"];
"1000274" -> "1000444"  [label="DDG: error"];
"1000244" -> "1000444"  [label="DDG: error"];
"1000398" -> "1000444"  [label="DDG: error"];
"1000279" -> "1000444"  [label="DDG: error"];
"1000383" -> "1000444"  [label="DDG: error"];
"1000344" -> "1000258"  [label="AST: "];
"1000344" -> "1000351"  [label="CFG: "];
"1000345" -> "1000344"  [label="AST: "];
"1000346" -> "1000344"  [label="AST: "];
"1000347" -> "1000344"  [label="AST: "];
"1000349" -> "1000344"  [label="AST: "];
"1000351" -> "1000344"  [label="AST: "];
"1000355" -> "1000344"  [label="CFG: "];
"1000344" -> "1000446"  [label="DDG: &data_blocks"];
"1000344" -> "1000446"  [label="DDG: calc_max_reserv(ip, len, &max_bytes, &data_blocks, &ind_blocks)"];
"1000344" -> "1000446"  [label="DDG: &ind_blocks"];
"1000344" -> "1000446"  [label="DDG: &max_bytes"];
"1000344" -> "1000446"  [label="DDG: len"];
"1000344" -> "1000372"  [label="DDG: ip"];
"1000344" -> "1000410"  [label="DDG: len"];
"1000372" -> "1000370"  [label="AST: "];
"1000372" -> "1000373"  [label="CFG: "];
"1000373" -> "1000372"  [label="AST: "];
"1000370" -> "1000372"  [label="CFG: "];
"1000372" -> "1000360"  [label="DDG: ip"];
"1000372" -> "1000362"  [label="DDG: ip"];
"1000372" -> "1000364"  [label="DDG: ip"];
"1000372" -> "1000366"  [label="DDG: ip"];
"1000372" -> "1000368"  [label="DDG: ip"];
"1000372" -> "1000370"  [label="DDG: ip"];
"1000372" -> "1000375"  [label="DDG: ip"];
"1000360" -> "1000258"  [label="AST: "];
"1000360" -> "1000362"  [label="CFG: "];
"1000361" -> "1000360"  [label="AST: "];
"1000362" -> "1000360"  [label="AST: "];
"1000376" -> "1000360"  [label="CFG: "];
"1000360" -> "1000446"  [label="DDG: RES_DINODE + ind_blocks + RES_STATFS + RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip)"];
"1000132" -> "1000360"  [label="DDG: ind_blocks"];
"1000360" -> "1000377"  [label="DDG: rblocks"];
"1000360" -> "1000385"  [label="DDG: rblocks"];
"1000377" -> "1000374"  [label="AST: "];
"1000377" -> "1000379"  [label="CFG: "];
"1000378" -> "1000377"  [label="AST: "];
"1000379" -> "1000377"  [label="AST: "];
"1000384" -> "1000377"  [label="CFG: "];
"1000377" -> "1000446"  [label="DDG: data_blocks ? data_blocks : 1"];
"1000377" -> "1000385"  [label="DDG: rblocks"];
"1000385" -> "1000383"  [label="AST: "];
"1000385" -> "1000388"  [label="CFG: "];
"1000386" -> "1000385"  [label="AST: "];
"1000387" -> "1000385"  [label="AST: "];
"1000388" -> "1000385"  [label="AST: "];
"1000383" -> "1000385"  [label="CFG: "];
"1000385" -> "1000446"  [label="DDG: PAGE_CACHE_SIZE/sdp->sd_sb.sb_bsize"];
"1000385" -> "1000446"  [label="DDG: rblocks"];
"1000385" -> "1000446"  [label="DDG: sdp"];
"1000385" -> "1000383"  [label="DDG: sdp"];
"1000385" -> "1000383"  [label="DDG: rblocks"];
"1000385" -> "1000383"  [label="DDG: PAGE_CACHE_SIZE/sdp->sd_sb.sb_bsize"];
"1000405" -> "1000385"  [label="DDG: sdp"];
"1000118" -> "1000385"  [label="DDG: sdp"];
"1000388" -> "1000385"  [label="DDG: PAGE_CACHE_SIZE"];
"1000388" -> "1000385"  [label="DDG: sdp->sd_sb.sb_bsize"];
"1000385" -> "1000405"  [label="DDG: sdp"];
"1000383" -> "1000258"  [label="AST: "];
"1000384" -> "1000383"  [label="AST: "];
"1000396" -> "1000383"  [label="CFG: "];
"1000383" -> "1000446"  [label="DDG: error"];
"1000383" -> "1000446"  [label="DDG: gfs2_trans_begin(sdp, rblocks,\n\t\t\t\t\t PAGE_CACHE_SIZE/sdp->sd_sb.sb_bsize)"];
"1000405" -> "1000258"  [label="AST: "];
"1000405" -> "1000406"  [label="CFG: "];
"1000406" -> "1000405"  [label="AST: "];
"1000408" -> "1000405"  [label="CFG: "];
"1000405" -> "1000446"  [label="DDG: gfs2_trans_end(sdp)"];
"1000405" -> "1000446"  [label="DDG: sdp"];
"1000362" -> "1000364"  [label="CFG: "];
"1000363" -> "1000362"  [label="AST: "];
"1000364" -> "1000362"  [label="AST: "];
"1000362" -> "1000446"  [label="DDG: ind_blocks + RES_STATFS + RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip)"];
"1000362" -> "1000446"  [label="DDG: RES_DINODE"];
"1000132" -> "1000362"  [label="DDG: ind_blocks"];
"1000364" -> "1000366"  [label="CFG: "];
"1000365" -> "1000364"  [label="AST: "];
"1000366" -> "1000364"  [label="AST: "];
"1000364" -> "1000446"  [label="DDG: ind_blocks"];
"1000364" -> "1000446"  [label="DDG: RES_STATFS + RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip)"];
"1000132" -> "1000364"  [label="DDG: ind_blocks"];
"1000366" -> "1000368"  [label="CFG: "];
"1000367" -> "1000366"  [label="AST: "];
"1000368" -> "1000366"  [label="AST: "];
"1000366" -> "1000446"  [label="DDG: RES_QUOTA +\n\t\t\t  RES_RG_HDR + gfs2_rg_blocks(ip)"];
"1000366" -> "1000446"  [label="DDG: RES_STATFS"];
"1000368" -> "1000370"  [label="CFG: "];
"1000369" -> "1000368"  [label="AST: "];
"1000370" -> "1000368"  [label="AST: "];
"1000368" -> "1000446"  [label="DDG: RES_QUOTA"];
"1000368" -> "1000446"  [label="DDG: RES_RG_HDR + gfs2_rg_blocks(ip)"];
"1000371" -> "1000370"  [label="AST: "];
"1000370" -> "1000446"  [label="DDG: gfs2_rg_blocks(ip)"];
"1000370" -> "1000446"  [label="DDG: RES_RG_HDR"];
"1000375" -> "1000374"  [label="AST: "];
"1000375" -> "1000376"  [label="CFG: "];
"1000376" -> "1000375"  [label="AST: "];
"1000378" -> "1000375"  [label="CFG: "];
"1000384" -> "1000375"  [label="CFG: "];
"1000375" -> "1000446"  [label="DDG: gfs2_is_jdata(ip)"];
"1000375" -> "1000416"  [label="DDG: ip"];
"1000375" -> "1000424"  [label="DDG: ip"];
"1000416" -> "1000258"  [label="AST: "];
"1000416" -> "1000417"  [label="CFG: "];
"1000417" -> "1000416"  [label="AST: "];
"1000419" -> "1000416"  [label="CFG: "];
"1000416" -> "1000446"  [label="DDG: gfs2_inplace_release(ip)"];
"1000416" -> "1000418"  [label="DDG: ip"];
"1000418" -> "1000258"  [label="AST: "];
"1000418" -> "1000419"  [label="CFG: "];
"1000419" -> "1000418"  [label="AST: "];
"1000421" -> "1000418"  [label="CFG: "];
"1000418" -> "1000446"  [label="DDG: gfs2_quota_unlock(ip)"];
"1000418" -> "1000420"  [label="DDG: ip"];
"1000420" -> "1000258"  [label="AST: "];
"1000420" -> "1000421"  [label="CFG: "];
"1000421" -> "1000420"  [label="AST: "];
"1000256" -> "1000420"  [label="CFG: "];
"1000420" -> "1000446"  [label="DDG: gfs2_alloc_put(ip)"];
"1000420" -> "1000446"  [label="DDG: ip"];
"1000420" -> "1000268"  [label="DDG: ip"];
"1000268" -> "1000266"  [label="AST: "];
"1000268" -> "1000269"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000266" -> "1000268"  [label="CFG: "];
"1000268" -> "1000446"  [label="DDG: ip"];
"1000268" -> "1000266"  [label="DDG: ip"];
"1000268" -> "1000281"  [label="DDG: ip"];
"1000266" -> "1000258"  [label="AST: "];
"1000267" -> "1000266"  [label="AST: "];
"1000272" -> "1000266"  [label="CFG: "];
"1000266" -> "1000446"  [label="DDG: gfs2_alloc_get(ip)"];
"1000266" -> "1000271"  [label="DDG: al"];
"1000271" -> "1000270"  [label="AST: "];
"1000271" -> "1000272"  [label="CFG: "];
"1000272" -> "1000271"  [label="AST: "];
"1000275" -> "1000271"  [label="CFG: "];
"1000280" -> "1000271"  [label="CFG: "];
"1000271" -> "1000446"  [label="DDG: al"];
"1000271" -> "1000446"  [label="DDG: !al"];
"1000281" -> "1000279"  [label="AST: "];
"1000281" -> "1000282"  [label="CFG: "];
"1000282" -> "1000281"  [label="AST: "];
"1000279" -> "1000281"  [label="CFG: "];
"1000281" -> "1000279"  [label="DDG: ip"];
"1000281" -> "1000430"  [label="DDG: ip"];
"1000279" -> "1000258"  [label="AST: "];
"1000280" -> "1000279"  [label="AST: "];
"1000284" -> "1000279"  [label="CFG: "];
"1000279" -> "1000446"  [label="DDG: error"];
"1000279" -> "1000446"  [label="DDG: gfs2_quota_lock_check(ip)"];
"1000430" -> "1000106"  [label="AST: "];
"1000430" -> "1000431"  [label="CFG: "];
"1000431" -> "1000430"  [label="AST: "];
"1000432" -> "1000430"  [label="CFG: "];
"1000430" -> "1000446"  [label="DDG: ip"];
"1000430" -> "1000446"  [label="DDG: gfs2_alloc_put(ip)"];
"1000427" -> "1000430"  [label="DDG: ip"];
"1000424" -> "1000106"  [label="AST: "];
"1000424" -> "1000425"  [label="CFG: "];
"1000425" -> "1000424"  [label="AST: "];
"1000426" -> "1000424"  [label="CFG: "];
"1000424" -> "1000446"  [label="DDG: gfs2_inplace_release(ip)"];
"1000424" -> "1000427"  [label="DDG: ip"];
"1000427" -> "1000106"  [label="AST: "];
"1000427" -> "1000428"  [label="CFG: "];
"1000428" -> "1000427"  [label="AST: "];
"1000429" -> "1000427"  [label="CFG: "];
"1000427" -> "1000446"  [label="DDG: gfs2_quota_unlock(ip)"];
"1000410" -> "1000258"  [label="AST: "];
"1000410" -> "1000412"  [label="CFG: "];
"1000411" -> "1000410"  [label="AST: "];
"1000412" -> "1000410"  [label="AST: "];
"1000414" -> "1000410"  [label="CFG: "];
"1000400" -> "1000410"  [label="DDG: max_bytes"];
"1000314" -> "1000316"  [label="CFG: "];
"1000315" -> "1000314"  [label="AST: "];
"1000316" -> "1000314"  [label="AST: "];
"1000314" -> "1000446"  [label="DDG: bytes"];
"1000314" -> "1000446"  [label="DDG: sdp->sd_sb.sb_bsize"];
"1000199" -> "1000314"  [label="DDG: sdp->sd_sb.sb_bsize"];
"1000388" -> "1000314"  [label="DDG: sdp->sd_sb.sb_bsize"];
"1000314" -> "1000322"  [label="DDG: bytes"];
"1000314" -> "1000332"  [label="DDG: sdp->sd_sb.sb_bsize"];
"1000314" -> "1000388"  [label="DDG: sdp->sd_sb.sb_bsize"];
"1000322" -> "1000321"  [label="AST: "];
"1000322" -> "1000324"  [label="CFG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000324" -> "1000322"  [label="AST: "];
"1000326" -> "1000322"  [label="CFG: "];
"1000322" -> "1000446"  [label="DDG: bytes >>= 1"];
"1000322" -> "1000325"  [label="DDG: bytes"];
"1000325" -> "1000321"  [label="AST: "];
"1000325" -> "1000327"  [label="CFG: "];
"1000326" -> "1000325"  [label="AST: "];
"1000327" -> "1000325"  [label="AST: "];
"1000330" -> "1000325"  [label="CFG: "];
"1000325" -> "1000446"  [label="DDG: bytes &= bsize_mask"];
"1000325" -> "1000446"  [label="DDG: bsize_mask"];
"1000212" -> "1000325"  [label="DDG: bsize_mask"];
"1000325" -> "1000329"  [label="DDG: bytes"];
"1000329" -> "1000328"  [label="AST: "];
"1000329" -> "1000331"  [label="CFG: "];
"1000330" -> "1000329"  [label="AST: "];
"1000331" -> "1000329"  [label="AST: "];
"1000333" -> "1000329"  [label="CFG: "];
"1000339" -> "1000329"  [label="CFG: "];
"1000329" -> "1000446"  [label="DDG: bytes == 0"];
"1000332" -> "1000328"  [label="AST: "];
"1000332" -> "1000334"  [label="CFG: "];
"1000333" -> "1000332"  [label="AST: "];
"1000334" -> "1000332"  [label="AST: "];
"1000339" -> "1000332"  [label="CFG: "];
"1000332" -> "1000446"  [label="DDG: sdp->sd_sb.sb_bsize"];
"1000199" -> "1000332"  [label="DDG: sdp->sd_sb.sb_bsize"];
"1000388" -> "1000332"  [label="DDG: sdp->sd_sb.sb_bsize"];
"1000388" -> "1000390"  [label="CFG: "];
"1000389" -> "1000388"  [label="AST: "];
"1000390" -> "1000388"  [label="AST: "];
"1000388" -> "1000446"  [label="DDG: PAGE_CACHE_SIZE"];
"1000388" -> "1000446"  [label="DDG: sdp->sd_sb.sb_bsize"];
"1000199" -> "1000388"  [label="DDG: sdp->sd_sb.sb_bsize"];
"1000341" -> "1000258"  [label="AST: "];
"1000341" -> "1000343"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="AST: "];
"1000345" -> "1000341"  [label="CFG: "];
"1000341" -> "1000446"  [label="DDG: bytes"];
"1000341" -> "1000446"  [label="DDG: max_bytes"];
"1000341" -> "1000400"  [label="DDG: max_bytes"];
"1000400" -> "1000398"  [label="AST: "];
"1000400" -> "1000404"  [label="CFG: "];
"1000401" -> "1000400"  [label="AST: "];
"1000402" -> "1000400"  [label="AST: "];
"1000403" -> "1000400"  [label="AST: "];
"1000404" -> "1000400"  [label="AST: "];
"1000398" -> "1000400"  [label="CFG: "];
"1000400" -> "1000446"  [label="DDG: inode"];
"1000400" -> "1000446"  [label="DDG: mode"];
"1000400" -> "1000446"  [label="DDG: offset"];
"1000400" -> "1000446"  [label="DDG: max_bytes"];
"1000400" -> "1000398"  [label="DDG: inode"];
"1000400" -> "1000398"  [label="DDG: offset"];
"1000400" -> "1000398"  [label="DDG: max_bytes"];
"1000400" -> "1000398"  [label="DDG: mode"];
"1000125" -> "1000400"  [label="DDG: inode"];
"1000413" -> "1000400"  [label="DDG: offset"];
"1000179" -> "1000400"  [label="DDG: mode"];
"1000103" -> "1000400"  [label="DDG: mode"];
"1000400" -> "1000413"  [label="DDG: max_bytes"];
"1000400" -> "1000413"  [label="DDG: offset"];
"1000398" -> "1000258"  [label="AST: "];
"1000399" -> "1000398"  [label="AST: "];
"1000406" -> "1000398"  [label="CFG: "];
"1000398" -> "1000446"  [label="DDG: fallocate_chunk(inode, offset, max_bytes, mode)"];
"1000398" -> "1000446"  [label="DDG: error"];
"1000413" -> "1000258"  [label="AST: "];
"1000413" -> "1000415"  [label="CFG: "];
"1000414" -> "1000413"  [label="AST: "];
"1000415" -> "1000413"  [label="AST: "];
"1000417" -> "1000413"  [label="CFG: "];
"1000413" -> "1000446"  [label="DDG: offset"];
"1000413" -> "1000446"  [label="DDG: max_bytes"];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000175" -> "1000170"  [label="CFG: "];
}
