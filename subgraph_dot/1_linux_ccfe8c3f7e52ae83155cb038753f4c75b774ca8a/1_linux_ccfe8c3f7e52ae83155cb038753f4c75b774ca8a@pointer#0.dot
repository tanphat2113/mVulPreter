digraph "1_linux_ccfe8c3f7e52ae83155cb038753f4c75b774ca8a@pointer" {
"1000297" [label="(Call,sg_is_last(req->assoc))"];
"1000292" [label="(Call,(sg_is_last(req->src)) && (sg_is_last(req->assoc)))"];
"1000311" [label="(Call,scatterwalk_start(&assoc_sg_walk, req->assoc))"];
"1000324" [label="(Call,scatterwalk_map(&assoc_sg_walk))"];
"1000322" [label="(Call,assoc = scatterwalk_map(&assoc_sg_walk))"];
"1000402" [label="(Call,aesni_gcm_dec_tfm(aes_ctx, dst, src, tempCipherLen, iv,\n\t\tctx->hash_subkey, assoc, (unsigned long)req->assoclen,\n\t\tauthTag, auth_tag_len))"];
"1000422" [label="(Call,crypto_memneq(src + tempCipherLen, authTag, auth_tag_len))"];
"1000423" [label="(Call,src + tempCipherLen)"];
"1000444" [label="(Call,scatterwalk_unmap(dst))"];
"1000451" [label="(Call,scatterwalk_unmap(src))"];
"1000453" [label="(Call,scatterwalk_unmap(assoc))"];
"1000467" [label="(Call,scatterwalk_map_and_copy(dst, req->dst, 0, req->cryptlen, 1))"];
"1000477" [label="(Call,kfree(src))"];
"1000460" [label="(Call,scatterwalk_done(&assoc_sg_walk, 0, 0))"];
"1000389" [label="(Call,scatterwalk_map_and_copy(assoc, req->assoc, 0,\n \t\t\treq->assoclen, 0))"];
"1000412" [label="(Call,(unsigned long)req->assoclen)"];
"1000405" [label="(Identifier,src)"];
"1000238" [label="(Call,req->cryptlen - auth_tag_len)"];
"1000395" [label="(Call,req->assoclen)"];
"1000389" [label="(Call,scatterwalk_map_and_copy(assoc, req->assoc, 0,\n \t\t\treq->assoclen, 0))"];
"1000478" [label="(Identifier,src)"];
"1000422" [label="(Call,crypto_memneq(src + tempCipherLen, authTag, auth_tag_len))"];
"1000425" [label="(Identifier,tempCipherLen)"];
"1000430" [label="(Literal,0)"];
"1000332" [label="(Call,req->src != req->dst)"];
"1000444" [label="(Call,scatterwalk_unmap(dst))"];
"1000466" [label="(Block,)"];
"1000312" [label="(Call,&assoc_sg_walk)"];
"1000400" [label="(Identifier,dst)"];
"1000480" [label="(Identifier,retval)"];
"1000171" [label="(Call,*authTag = iv + 16)"];
"1000467" [label="(Call,scatterwalk_map_and_copy(dst, req->dst, 0, req->cryptlen, 1))"];
"1000327" [label="(Call,dst = src)"];
"1000292" [label="(Call,(sg_is_last(req->src)) && (sg_is_last(req->assoc)))"];
"1000472" [label="(Literal,0)"];
"1000421" [label="(Call,crypto_memneq(src + tempCipherLen, authTag, auth_tag_len) ?\n\t\t-EBADMSG : 0)"];
"1000468" [label="(Identifier,dst)"];
"1000324" [label="(Call,scatterwalk_map(&assoc_sg_walk))"];
"1000433" [label="(Block,)"];
"1000148" [label="(Call,*aes_ctx = &(ctx->aes_key_expanded))"];
"1000402" [label="(Call,aesni_gcm_dec_tfm(aes_ctx, dst, src, tempCipherLen, iv,\n\t\tctx->hash_subkey, assoc, (unsigned long)req->assoclen,\n\t\tauthTag, auth_tag_len))"];
"1000311" [label="(Call,scatterwalk_start(&assoc_sg_walk, req->assoc))"];
"1000194" [label="(Call,req->assoclen != 12)"];
"1000477" [label="(Call,kfree(src))"];
"1000451" [label="(Call,scatterwalk_unmap(src))"];
"1000463" [label="(Literal,0)"];
"1000406" [label="(Identifier,tempCipherLen)"];
"1000301" [label="(Block,)"];
"1000303" [label="(Identifier,one_entry_in_sg)"];
"1000404" [label="(Identifier,dst)"];
"1000340" [label="(Call,scatterwalk_start(&dst_sg_walk, req->dst))"];
"1000448" [label="(Identifier,dst_sg_walk)"];
"1000297" [label="(Call,sg_is_last(req->assoc))"];
"1000317" [label="(Call,src = scatterwalk_map(&src_sg_walk))"];
"1000322" [label="(Call,assoc = scatterwalk_map(&assoc_sg_walk))"];
"1000314" [label="(Call,req->assoc)"];
"1000469" [label="(Call,req->dst)"];
"1000370" [label="(Call,assoc = (src + req->cryptlen + auth_tag_len))"];
"1000461" [label="(Call,&assoc_sg_walk)"];
"1000418" [label="(Identifier,auth_tag_len)"];
"1000417" [label="(Identifier,authTag)"];
"1000412" [label="(Call,(unsigned long)req->assoclen)"];
"1000291" [label="(ControlStructure,if ((sg_is_last(req->src)) && (sg_is_last(req->assoc))))"];
"1000390" [label="(Identifier,assoc)"];
"1000354" [label="(Identifier,src)"];
"1000293" [label="(Call,sg_is_last(req->src))"];
"1000427" [label="(Identifier,auth_tag_len)"];
"1000328" [label="(Identifier,dst)"];
"1000464" [label="(Literal,0)"];
"1000457" [label="(Identifier,src_sg_walk)"];
"1000452" [label="(Identifier,src)"];
"1000453" [label="(Call,scatterwalk_unmap(assoc))"];
"1000481" [label="(MethodReturn,static int)"];
"1000398" [label="(Literal,0)"];
"1000443" [label="(Block,)"];
"1000391" [label="(Call,req->assoc)"];
"1000403" [label="(Identifier,aes_ctx)"];
"1000408" [label="(Call,ctx->hash_subkey)"];
"1000460" [label="(Call,scatterwalk_done(&assoc_sg_walk, 0, 0))"];
"1000414" [label="(Call,req->assoclen)"];
"1000189" [label="(Call,req->assoclen != 8)"];
"1000325" [label="(Call,&assoc_sg_walk)"];
"1000445" [label="(Identifier,dst)"];
"1000161" [label="(Call,*iv = (u8 *) PTR_ALIGN((u8 *)iv_and_authTag, AESNI_ALIGN))"];
"1000424" [label="(Identifier,src)"];
"1000298" [label="(Call,req->assoc)"];
"1000379" [label="(Call,scatterwalk_map_and_copy(src, req->src, 0, req->cryptlen, 0))"];
"1000399" [label="(Call,dst = src)"];
"1000429" [label="(Identifier,EBADMSG)"];
"1000454" [label="(Identifier,assoc)"];
"1000476" [label="(Literal,1)"];
"1000423" [label="(Call,src + tempCipherLen)"];
"1000426" [label="(Identifier,authTag)"];
"1000323" [label="(Identifier,assoc)"];
"1000234" [label="(Call,tempCipherLen = (unsigned long)(req->cryptlen - auth_tag_len))"];
"1000411" [label="(Identifier,assoc)"];
"1000473" [label="(Call,req->cryptlen)"];
"1000346" [label="(Call,dst = scatterwalk_map(&dst_sg_walk))"];
"1000394" [label="(Literal,0)"];
"1000318" [label="(Identifier,src)"];
"1000108" [label="(Block,)"];
"1000420" [label="(Identifier,retval)"];
"1000407" [label="(Identifier,iv)"];
"1000352" [label="(Block,)"];
"1000297" -> "1000292"  [label="AST: "];
"1000297" -> "1000298"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000292" -> "1000297"  [label="CFG: "];
"1000297" -> "1000481"  [label="DDG: req->assoc"];
"1000297" -> "1000292"  [label="DDG: req->assoc"];
"1000297" -> "1000311"  [label="DDG: req->assoc"];
"1000297" -> "1000389"  [label="DDG: req->assoc"];
"1000292" -> "1000291"  [label="AST: "];
"1000292" -> "1000293"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000303" -> "1000292"  [label="CFG: "];
"1000354" -> "1000292"  [label="CFG: "];
"1000292" -> "1000481"  [label="DDG: (sg_is_last(req->src)) && (sg_is_last(req->assoc))"];
"1000292" -> "1000481"  [label="DDG: sg_is_last(req->src)"];
"1000292" -> "1000481"  [label="DDG: sg_is_last(req->assoc)"];
"1000293" -> "1000292"  [label="DDG: req->src"];
"1000311" -> "1000301"  [label="AST: "];
"1000311" -> "1000314"  [label="CFG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000314" -> "1000311"  [label="AST: "];
"1000318" -> "1000311"  [label="CFG: "];
"1000311" -> "1000481"  [label="DDG: scatterwalk_start(&assoc_sg_walk, req->assoc)"];
"1000311" -> "1000481"  [label="DDG: req->assoc"];
"1000311" -> "1000324"  [label="DDG: &assoc_sg_walk"];
"1000324" -> "1000322"  [label="AST: "];
"1000324" -> "1000325"  [label="CFG: "];
"1000325" -> "1000324"  [label="AST: "];
"1000322" -> "1000324"  [label="CFG: "];
"1000324" -> "1000481"  [label="DDG: &assoc_sg_walk"];
"1000324" -> "1000322"  [label="DDG: &assoc_sg_walk"];
"1000324" -> "1000460"  [label="DDG: &assoc_sg_walk"];
"1000322" -> "1000301"  [label="AST: "];
"1000323" -> "1000322"  [label="AST: "];
"1000328" -> "1000322"  [label="CFG: "];
"1000322" -> "1000481"  [label="DDG: scatterwalk_map(&assoc_sg_walk)"];
"1000322" -> "1000402"  [label="DDG: assoc"];
"1000402" -> "1000108"  [label="AST: "];
"1000402" -> "1000418"  [label="CFG: "];
"1000403" -> "1000402"  [label="AST: "];
"1000404" -> "1000402"  [label="AST: "];
"1000405" -> "1000402"  [label="AST: "];
"1000406" -> "1000402"  [label="AST: "];
"1000407" -> "1000402"  [label="AST: "];
"1000408" -> "1000402"  [label="AST: "];
"1000411" -> "1000402"  [label="AST: "];
"1000412" -> "1000402"  [label="AST: "];
"1000417" -> "1000402"  [label="AST: "];
"1000418" -> "1000402"  [label="AST: "];
"1000420" -> "1000402"  [label="CFG: "];
"1000402" -> "1000481"  [label="DDG: assoc"];
"1000402" -> "1000481"  [label="DDG: (unsigned long)req->assoclen"];
"1000402" -> "1000481"  [label="DDG: dst"];
"1000402" -> "1000481"  [label="DDG: aesni_gcm_dec_tfm(aes_ctx, dst, src, tempCipherLen, iv,\n\t\tctx->hash_subkey, assoc, (unsigned long)req->assoclen,\n\t\tauthTag, auth_tag_len)"];
"1000402" -> "1000481"  [label="DDG: iv"];
"1000402" -> "1000481"  [label="DDG: ctx->hash_subkey"];
"1000402" -> "1000481"  [label="DDG: aes_ctx"];
"1000148" -> "1000402"  [label="DDG: aes_ctx"];
"1000327" -> "1000402"  [label="DDG: dst"];
"1000346" -> "1000402"  [label="DDG: dst"];
"1000399" -> "1000402"  [label="DDG: dst"];
"1000379" -> "1000402"  [label="DDG: src"];
"1000317" -> "1000402"  [label="DDG: src"];
"1000234" -> "1000402"  [label="DDG: tempCipherLen"];
"1000161" -> "1000402"  [label="DDG: iv"];
"1000389" -> "1000402"  [label="DDG: assoc"];
"1000412" -> "1000402"  [label="DDG: req->assoclen"];
"1000171" -> "1000402"  [label="DDG: authTag"];
"1000238" -> "1000402"  [label="DDG: auth_tag_len"];
"1000402" -> "1000422"  [label="DDG: src"];
"1000402" -> "1000422"  [label="DDG: tempCipherLen"];
"1000402" -> "1000422"  [label="DDG: authTag"];
"1000402" -> "1000422"  [label="DDG: auth_tag_len"];
"1000402" -> "1000423"  [label="DDG: src"];
"1000402" -> "1000423"  [label="DDG: tempCipherLen"];
"1000402" -> "1000444"  [label="DDG: dst"];
"1000402" -> "1000451"  [label="DDG: src"];
"1000402" -> "1000453"  [label="DDG: assoc"];
"1000402" -> "1000467"  [label="DDG: dst"];
"1000402" -> "1000477"  [label="DDG: src"];
"1000422" -> "1000421"  [label="AST: "];
"1000422" -> "1000427"  [label="CFG: "];
"1000423" -> "1000422"  [label="AST: "];
"1000426" -> "1000422"  [label="AST: "];
"1000427" -> "1000422"  [label="AST: "];
"1000429" -> "1000422"  [label="CFG: "];
"1000430" -> "1000422"  [label="CFG: "];
"1000422" -> "1000481"  [label="DDG: auth_tag_len"];
"1000422" -> "1000481"  [label="DDG: authTag"];
"1000422" -> "1000481"  [label="DDG: src + tempCipherLen"];
"1000423" -> "1000425"  [label="CFG: "];
"1000424" -> "1000423"  [label="AST: "];
"1000425" -> "1000423"  [label="AST: "];
"1000426" -> "1000423"  [label="CFG: "];
"1000423" -> "1000481"  [label="DDG: tempCipherLen"];
"1000444" -> "1000443"  [label="AST: "];
"1000444" -> "1000445"  [label="CFG: "];
"1000445" -> "1000444"  [label="AST: "];
"1000448" -> "1000444"  [label="CFG: "];
"1000444" -> "1000481"  [label="DDG: dst"];
"1000444" -> "1000481"  [label="DDG: scatterwalk_unmap(dst)"];
"1000451" -> "1000433"  [label="AST: "];
"1000451" -> "1000452"  [label="CFG: "];
"1000452" -> "1000451"  [label="AST: "];
"1000454" -> "1000451"  [label="CFG: "];
"1000451" -> "1000481"  [label="DDG: src"];
"1000451" -> "1000481"  [label="DDG: scatterwalk_unmap(src)"];
"1000453" -> "1000433"  [label="AST: "];
"1000453" -> "1000454"  [label="CFG: "];
"1000454" -> "1000453"  [label="AST: "];
"1000457" -> "1000453"  [label="CFG: "];
"1000453" -> "1000481"  [label="DDG: scatterwalk_unmap(assoc)"];
"1000453" -> "1000481"  [label="DDG: assoc"];
"1000467" -> "1000466"  [label="AST: "];
"1000467" -> "1000476"  [label="CFG: "];
"1000468" -> "1000467"  [label="AST: "];
"1000469" -> "1000467"  [label="AST: "];
"1000472" -> "1000467"  [label="AST: "];
"1000473" -> "1000467"  [label="AST: "];
"1000476" -> "1000467"  [label="AST: "];
"1000478" -> "1000467"  [label="CFG: "];
"1000467" -> "1000481"  [label="DDG: dst"];
"1000467" -> "1000481"  [label="DDG: scatterwalk_map_and_copy(dst, req->dst, 0, req->cryptlen, 1)"];
"1000467" -> "1000481"  [label="DDG: req->dst"];
"1000467" -> "1000481"  [label="DDG: req->cryptlen"];
"1000332" -> "1000467"  [label="DDG: req->dst"];
"1000340" -> "1000467"  [label="DDG: req->dst"];
"1000238" -> "1000467"  [label="DDG: req->cryptlen"];
"1000379" -> "1000467"  [label="DDG: req->cryptlen"];
"1000477" -> "1000466"  [label="AST: "];
"1000477" -> "1000478"  [label="CFG: "];
"1000478" -> "1000477"  [label="AST: "];
"1000480" -> "1000477"  [label="CFG: "];
"1000477" -> "1000481"  [label="DDG: kfree(src)"];
"1000477" -> "1000481"  [label="DDG: src"];
"1000460" -> "1000433"  [label="AST: "];
"1000460" -> "1000464"  [label="CFG: "];
"1000461" -> "1000460"  [label="AST: "];
"1000463" -> "1000460"  [label="AST: "];
"1000464" -> "1000460"  [label="AST: "];
"1000480" -> "1000460"  [label="CFG: "];
"1000460" -> "1000481"  [label="DDG: &assoc_sg_walk"];
"1000460" -> "1000481"  [label="DDG: scatterwalk_done(&assoc_sg_walk, 0, 0)"];
"1000389" -> "1000352"  [label="AST: "];
"1000389" -> "1000398"  [label="CFG: "];
"1000390" -> "1000389"  [label="AST: "];
"1000391" -> "1000389"  [label="AST: "];
"1000394" -> "1000389"  [label="AST: "];
"1000395" -> "1000389"  [label="AST: "];
"1000398" -> "1000389"  [label="AST: "];
"1000400" -> "1000389"  [label="CFG: "];
"1000389" -> "1000481"  [label="DDG: scatterwalk_map_and_copy(assoc, req->assoc, 0,\n \t\t\treq->assoclen, 0)"];
"1000389" -> "1000481"  [label="DDG: req->assoc"];
"1000370" -> "1000389"  [label="DDG: assoc"];
"1000189" -> "1000389"  [label="DDG: req->assoclen"];
"1000194" -> "1000389"  [label="DDG: req->assoclen"];
"1000389" -> "1000412"  [label="DDG: req->assoclen"];
"1000412" -> "1000414"  [label="CFG: "];
"1000413" -> "1000412"  [label="AST: "];
"1000414" -> "1000412"  [label="AST: "];
"1000417" -> "1000412"  [label="CFG: "];
"1000412" -> "1000481"  [label="DDG: req->assoclen"];
"1000189" -> "1000412"  [label="DDG: req->assoclen"];
"1000194" -> "1000412"  [label="DDG: req->assoclen"];
}
