digraph "0_openssl_1b0fe00e2704b5e20334a16d3c9099d1ba2ef1be_1@API" {
"1000135" [label="(Call,secure && CRYPTO_secure_allocated(drbg))"];
"1000103" [label="(MethodParameterIn,int secure)"];
"1000137" [label="(Call,CRYPTO_secure_allocated(drbg))"];
"1000122" [label="(Call,drbg == NULL)"];
"1000109" [label="(Call,*drbg = secure ? OPENSSL_secure_zalloc(sizeof(*drbg))\n                             : OPENSSL_zalloc(sizeof(*drbg)))"];
"1000131" [label="(Call,drbg->secure = secure && CRYPTO_secure_allocated(drbg))"];
"1000137" [label="(Call,CRYPTO_secure_allocated(drbg))"];
"1000136" [label="(Identifier,secure)"];
"1000123" [label="(Identifier,drbg)"];
"1000107" [label="(Block,)"];
"1000133" [label="(Identifier,drbg)"];
"1000245" [label="(MethodReturn,static RAND_DRBG *)"];
"1000132" [label="(Call,drbg->secure)"];
"1000127" [label="(Identifier,RAND_F_RAND_DRBG_NEW)"];
"1000111" [label="(Call,secure ? OPENSSL_secure_zalloc(sizeof(*drbg))\n                             : OPENSSL_zalloc(sizeof(*drbg)))"];
"1000124" [label="(Identifier,NULL)"];
"1000131" [label="(Call,drbg->secure = secure && CRYPTO_secure_allocated(drbg))"];
"1000103" [label="(MethodParameterIn,int secure)"];
"1000110" [label="(Identifier,drbg)"];
"1000208" [label="(Call,RAND_DRBG_set(drbg, type, flags))"];
"1000150" [label="(Call,parent == NULL)"];
"1000141" [label="(Identifier,drbg)"];
"1000135" [label="(Call,secure && CRYPTO_secure_allocated(drbg))"];
"1000121" [label="(ControlStructure,if (drbg == NULL))"];
"1000129" [label="(Return,return NULL;)"];
"1000122" [label="(Call,drbg == NULL)"];
"1000138" [label="(Identifier,drbg)"];
"1000109" [label="(Call,*drbg = secure ? OPENSSL_secure_zalloc(sizeof(*drbg))\n                             : OPENSSL_zalloc(sizeof(*drbg)))"];
"1000135" -> "1000131"  [label="AST: "];
"1000135" -> "1000136"  [label="CFG: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000131" -> "1000135"  [label="CFG: "];
"1000135" -> "1000245"  [label="DDG: secure"];
"1000135" -> "1000245"  [label="DDG: CRYPTO_secure_allocated(drbg)"];
"1000135" -> "1000131"  [label="DDG: secure"];
"1000135" -> "1000131"  [label="DDG: CRYPTO_secure_allocated(drbg)"];
"1000103" -> "1000135"  [label="DDG: secure"];
"1000137" -> "1000135"  [label="DDG: drbg"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000245"  [label="DDG: secure"];
"1000103" -> "1000109"  [label="DDG: secure"];
"1000103" -> "1000111"  [label="DDG: secure"];
"1000137" -> "1000138"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000122" -> "1000137"  [label="DDG: drbg"];
"1000137" -> "1000208"  [label="DDG: drbg"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000127" -> "1000122"  [label="CFG: "];
"1000133" -> "1000122"  [label="CFG: "];
"1000122" -> "1000245"  [label="DDG: drbg"];
"1000122" -> "1000245"  [label="DDG: drbg == NULL"];
"1000122" -> "1000245"  [label="DDG: NULL"];
"1000109" -> "1000122"  [label="DDG: drbg"];
"1000122" -> "1000129"  [label="DDG: NULL"];
"1000122" -> "1000150"  [label="DDG: NULL"];
"1000122" -> "1000208"  [label="DDG: drbg"];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000123" -> "1000109"  [label="CFG: "];
"1000109" -> "1000245"  [label="DDG: secure ? OPENSSL_secure_zalloc(sizeof(*drbg))\n                             : OPENSSL_zalloc(sizeof(*drbg))"];
"1000131" -> "1000107"  [label="AST: "];
"1000132" -> "1000131"  [label="AST: "];
"1000141" -> "1000131"  [label="CFG: "];
"1000131" -> "1000245"  [label="DDG: drbg->secure"];
"1000131" -> "1000245"  [label="DDG: secure && CRYPTO_secure_allocated(drbg)"];
}
