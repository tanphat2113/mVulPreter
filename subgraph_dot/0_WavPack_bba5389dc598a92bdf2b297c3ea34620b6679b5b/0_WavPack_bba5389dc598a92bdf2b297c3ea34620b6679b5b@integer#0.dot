digraph "0_WavPack_bba5389dc598a92bdf2b297c3ea34620b6679b5b@integer" {
"1000138" [label="(Call,bcount = wphdr->ckSize - sizeof (WavpackHeader) + 8)"];
"1000140" [label="(Call,wphdr->ckSize - sizeof (WavpackHeader) + 8)"];
"1000156" [label="(Call,bcount >= 2)"];
"1000175" [label="(Call,bcount -= 2)"];
"1000184" [label="(Call,bcount < 2)"];
"1000212" [label="(Call,bcount -= 2)"];
"1000216" [label="(Call,bcount < meta_bc)"];
"1000261" [label="(Call,meta_bc < 2)"];
"1000260" [label="(Call,meta_bc < 2 || meta_bc > 4)"];
"1000256" [label="(Call,(meta_id & ID_ODD_SIZE) || meta_bc < 2 || meta_bc > 4)"];
"1000264" [label="(Call,meta_bc > 4)"];
"1000282" [label="(Call,meta_bc == 4)"];
"1000353" [label="(Call,bcount -= meta_bc)"];
"1000356" [label="(Call,dp += meta_bc)"];
"1000163" [label="(Call,dp++)"];
"1000168" [label="(Call,dp++)"];
"1000192" [label="(Call,dp++)"];
"1000197" [label="(Call,dp++)"];
"1000242" [label="(Call,dp - 2 - buffer)"];
"1000240" [label="(Call,(int)(dp - 2 - buffer))"];
"1000239" [label="(Call,(int)(dp - 2 - buffer) >> 1)"];
"1000237" [label="(Call,wcount = (int)(dp - 2 - buffer) >> 1)"];
"1000270" [label="(Call,wcount--)"];
"1000295" [label="(Call,dp[1] != ((csum >> 8) & 0xff))"];
"1000294" [label="(Call,dp[1] != ((csum >> 8) & 0xff) || dp[2] != ((csum >> 16) & 0xff) || dp[3] != ((csum >> 24) & 0xff))"];
"1000287" [label="(Call,*dp != (csum & 0xff) || dp[1] != ((csum >> 8) & 0xff) || dp[2] != ((csum >> 16) & 0xff) || dp[3] != ((csum >> 24) & 0xff))"];
"1000333" [label="(Call,*dp != (csum & 0xff) || dp[1] != ((csum >> 8) & 0xff))"];
"1000340" [label="(Call,dp[1] != ((csum >> 8) & 0xff))"];
"1000305" [label="(Call,dp[2] != ((csum >> 16) & 0xff))"];
"1000304" [label="(Call,dp[2] != ((csum >> 16) & 0xff) || dp[3] != ((csum >> 24) & 0xff))"];
"1000314" [label="(Call,dp[3] != ((csum >> 24) & 0xff))"];
"1000361" [label="(Call,bcount == 0)"];
"1000360" [label="(Call,(bcount == 0) && (!verify_checksum || !(wphdr->flags & HAS_CHECKSUM) || checksum_passed))"];
"1000359" [label="(Return,return (bcount == 0) && (!verify_checksum || !(wphdr->flags & HAS_CHECKSUM) || checksum_passed);)"];
"1000283" [label="(Identifier,meta_bc)"];
"1000177" [label="(Literal,2)"];
"1000359" [label="(Return,return (bcount == 0) && (!verify_checksum || !(wphdr->flags & HAS_CHECKSUM) || checksum_passed);)"];
"1000264" [label="(Call,meta_bc > 4)"];
"1000257" [label="(Call,meta_id & ID_ODD_SIZE)"];
"1000357" [label="(Identifier,dp)"];
"1000250" [label="(Identifier,csum)"];
"1000183" [label="(ControlStructure,if (bcount < 2))"];
"1000364" [label="(Call,!verify_checksum || !(wphdr->flags & HAS_CHECKSUM) || checksum_passed)"];
"1000375" [label="(MethodReturn,int)"];
"1000213" [label="(Identifier,bcount)"];
"1000332" [label="(ControlStructure,if (*dp != (csum & 0xff) || dp[1] != ((csum >> 8) & 0xff)))"];
"1000139" [label="(Identifier,bcount)"];
"1000260" [label="(Call,meta_bc < 2 || meta_bc > 4)"];
"1000175" [label="(Call,bcount -= 2)"];
"1000362" [label="(Identifier,bcount)"];
"1000180" [label="(Identifier,meta_id)"];
"1000268" [label="(Identifier,FALSE)"];
"1000188" [label="(Identifier,FALSE)"];
"1000355" [label="(Identifier,meta_bc)"];
"1000316" [label="(Identifier,dp)"];
"1000270" [label="(Call,wcount--)"];
"1000185" [label="(Identifier,bcount)"];
"1000199" [label="(Call,meta_bc += ((uint32_t) c1 << 9) + ((uint32_t) c2 << 17))"];
"1000361" [label="(Call,bcount == 0)"];
"1000299" [label="(Call,(csum >> 8) & 0xff)"];
"1000265" [label="(Identifier,meta_bc)"];
"1000366" [label="(Identifier,verify_checksum)"];
"1000168" [label="(Call,dp++)"];
"1000324" [label="(Identifier,FALSE)"];
"1000286" [label="(ControlStructure,if (*dp != (csum & 0xff) || dp[1] != ((csum >> 8) & 0xff) || dp[2] != ((csum >> 16) & 0xff) || dp[3] != ((csum >> 24) & 0xff)))"];
"1000212" [label="(Call,bcount -= 2)"];
"1000333" [label="(Call,*dp != (csum & 0xff) || dp[1] != ((csum >> 8) & 0xff))"];
"1000159" [label="(Block,)"];
"1000191" [label="(Call,*dp++)"];
"1000140" [label="(Call,wphdr->ckSize - sizeof (WavpackHeader) + 8)"];
"1000261" [label="(Call,meta_bc < 2)"];
"1000198" [label="(Identifier,dp)"];
"1000162" [label="(Call,*dp++)"];
"1000217" [label="(Identifier,bcount)"];
"1000138" [label="(Call,bcount = wphdr->ckSize - sizeof (WavpackHeader) + 8)"];
"1000157" [label="(Identifier,bcount)"];
"1000341" [label="(Call,dp[1])"];
"1000144" [label="(Call,sizeof (WavpackHeader) + 8)"];
"1000229" [label="(Block,)"];
"1000306" [label="(Call,dp[2])"];
"1000284" [label="(Literal,4)"];
"1000242" [label="(Call,dp - 2 - buffer)"];
"1000352" [label="(Identifier,checksum_passed)"];
"1000282" [label="(Call,meta_bc == 4)"];
"1000148" [label="(Call,dp = (unsigned char *)(wphdr + 1))"];
"1000350" [label="(Identifier,FALSE)"];
"1000287" [label="(Call,*dp != (csum & 0xff) || dp[1] != ((csum >> 8) & 0xff) || dp[2] != ((csum >> 16) & 0xff) || dp[3] != ((csum >> 24) & 0xff))"];
"1000334" [label="(Call,*dp != (csum & 0xff))"];
"1000305" [label="(Call,dp[2] != ((csum >> 16) & 0xff))"];
"1000216" [label="(Call,bcount < meta_bc)"];
"1000169" [label="(Identifier,dp)"];
"1000263" [label="(Literal,2)"];
"1000190" [label="(Identifier,c1)"];
"1000161" [label="(Identifier,meta_id)"];
"1000141" [label="(Call,wphdr->ckSize)"];
"1000186" [label="(Literal,2)"];
"1000184" [label="(Call,bcount < 2)"];
"1000309" [label="(Call,(csum >> 16) & 0xff)"];
"1000155" [label="(ControlStructure,while (bcount >= 2))"];
"1000314" [label="(Call,dp[3] != ((csum >> 24) & 0xff))"];
"1000269" [label="(ControlStructure,while (wcount--))"];
"1000266" [label="(Literal,4)"];
"1000240" [label="(Call,(int)(dp - 2 - buffer))"];
"1000344" [label="(Call,(csum >> 8) & 0xff)"];
"1000315" [label="(Call,dp[3])"];
"1000197" [label="(Call,dp++)"];
"1000244" [label="(Call,2 - buffer)"];
"1000318" [label="(Call,(csum >> 24) & 0xff)"];
"1000176" [label="(Identifier,bcount)"];
"1000363" [label="(Literal,0)"];
"1000170" [label="(Call,meta_bc = c1 << 1)"];
"1000290" [label="(Identifier,dp)"];
"1000158" [label="(Literal,2)"];
"1000196" [label="(Call,*dp++)"];
"1000271" [label="(Identifier,wcount)"];
"1000149" [label="(Identifier,dp)"];
"1000163" [label="(Call,dp++)"];
"1000238" [label="(Identifier,wcount)"];
"1000223" [label="(Identifier,verify_checksum)"];
"1000304" [label="(Call,dp[2] != ((csum >> 16) & 0xff) || dp[3] != ((csum >> 24) & 0xff))"];
"1000193" [label="(Identifier,dp)"];
"1000262" [label="(Identifier,meta_bc)"];
"1000255" [label="(ControlStructure,if ((meta_id & ID_ODD_SIZE) || meta_bc < 2 || meta_bc > 4))"];
"1000294" [label="(Call,dp[1] != ((csum >> 8) & 0xff) || dp[2] != ((csum >> 16) & 0xff) || dp[3] != ((csum >> 24) & 0xff))"];
"1000288" [label="(Call,*dp != (csum & 0xff))"];
"1000192" [label="(Call,dp++)"];
"1000156" [label="(Call,bcount >= 2)"];
"1000239" [label="(Call,(int)(dp - 2 - buffer) >> 1)"];
"1000220" [label="(Identifier,FALSE)"];
"1000218" [label="(Identifier,meta_bc)"];
"1000295" [label="(Call,dp[1] != ((csum >> 8) & 0xff))"];
"1000296" [label="(Call,dp[1])"];
"1000247" [label="(Literal,1)"];
"1000354" [label="(Identifier,bcount)"];
"1000182" [label="(Block,)"];
"1000164" [label="(Identifier,dp)"];
"1000256" [label="(Call,(meta_id & ID_ODD_SIZE) || meta_bc < 2 || meta_bc > 4)"];
"1000214" [label="(Literal,2)"];
"1000281" [label="(ControlStructure,if (meta_bc == 4))"];
"1000328" [label="(Identifier,csum)"];
"1000103" [label="(Block,)"];
"1000273" [label="(Identifier,csum)"];
"1000356" [label="(Call,dp += meta_bc)"];
"1000358" [label="(Identifier,meta_bc)"];
"1000215" [label="(ControlStructure,if (bcount < meta_bc))"];
"1000237" [label="(Call,wcount = (int)(dp - 2 - buffer) >> 1)"];
"1000243" [label="(Identifier,dp)"];
"1000340" [label="(Call,dp[1] != ((csum >> 8) & 0xff))"];
"1000360" [label="(Call,(bcount == 0) && (!verify_checksum || !(wphdr->flags & HAS_CHECKSUM) || checksum_passed))"];
"1000353" [label="(Call,bcount -= meta_bc)"];
"1000307" [label="(Identifier,dp)"];
"1000167" [label="(Call,*dp++)"];
"1000138" -> "1000103"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000149" -> "1000138"  [label="CFG: "];
"1000138" -> "1000375"  [label="DDG: wphdr->ckSize - sizeof (WavpackHeader) + 8"];
"1000140" -> "1000138"  [label="DDG: wphdr->ckSize"];
"1000140" -> "1000138"  [label="DDG: sizeof (WavpackHeader) + 8"];
"1000138" -> "1000156"  [label="DDG: bcount"];
"1000140" -> "1000144"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000144" -> "1000140"  [label="AST: "];
"1000140" -> "1000375"  [label="DDG: wphdr->ckSize"];
"1000140" -> "1000375"  [label="DDG: sizeof (WavpackHeader) + 8"];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000158"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000158" -> "1000156"  [label="AST: "];
"1000161" -> "1000156"  [label="CFG: "];
"1000362" -> "1000156"  [label="CFG: "];
"1000156" -> "1000375"  [label="DDG: bcount >= 2"];
"1000353" -> "1000156"  [label="DDG: bcount"];
"1000156" -> "1000175"  [label="DDG: bcount"];
"1000156" -> "1000361"  [label="DDG: bcount"];
"1000175" -> "1000159"  [label="AST: "];
"1000175" -> "1000177"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000177" -> "1000175"  [label="AST: "];
"1000180" -> "1000175"  [label="CFG: "];
"1000175" -> "1000184"  [label="DDG: bcount"];
"1000175" -> "1000216"  [label="DDG: bcount"];
"1000184" -> "1000183"  [label="AST: "];
"1000184" -> "1000186"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000186" -> "1000184"  [label="AST: "];
"1000188" -> "1000184"  [label="CFG: "];
"1000190" -> "1000184"  [label="CFG: "];
"1000184" -> "1000375"  [label="DDG: bcount"];
"1000184" -> "1000375"  [label="DDG: bcount < 2"];
"1000184" -> "1000212"  [label="DDG: bcount"];
"1000212" -> "1000182"  [label="AST: "];
"1000212" -> "1000214"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000214" -> "1000212"  [label="AST: "];
"1000217" -> "1000212"  [label="CFG: "];
"1000212" -> "1000216"  [label="DDG: bcount"];
"1000216" -> "1000215"  [label="AST: "];
"1000216" -> "1000218"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000218" -> "1000216"  [label="AST: "];
"1000220" -> "1000216"  [label="CFG: "];
"1000223" -> "1000216"  [label="CFG: "];
"1000216" -> "1000375"  [label="DDG: bcount < meta_bc"];
"1000216" -> "1000375"  [label="DDG: bcount"];
"1000216" -> "1000375"  [label="DDG: meta_bc"];
"1000199" -> "1000216"  [label="DDG: meta_bc"];
"1000170" -> "1000216"  [label="DDG: meta_bc"];
"1000216" -> "1000261"  [label="DDG: meta_bc"];
"1000216" -> "1000282"  [label="DDG: meta_bc"];
"1000216" -> "1000353"  [label="DDG: meta_bc"];
"1000216" -> "1000353"  [label="DDG: bcount"];
"1000216" -> "1000356"  [label="DDG: meta_bc"];
"1000261" -> "1000260"  [label="AST: "];
"1000261" -> "1000263"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000263" -> "1000261"  [label="AST: "];
"1000265" -> "1000261"  [label="CFG: "];
"1000260" -> "1000261"  [label="CFG: "];
"1000261" -> "1000375"  [label="DDG: meta_bc"];
"1000261" -> "1000260"  [label="DDG: meta_bc"];
"1000261" -> "1000260"  [label="DDG: 2"];
"1000261" -> "1000264"  [label="DDG: meta_bc"];
"1000261" -> "1000282"  [label="DDG: meta_bc"];
"1000260" -> "1000256"  [label="AST: "];
"1000260" -> "1000264"  [label="CFG: "];
"1000264" -> "1000260"  [label="AST: "];
"1000256" -> "1000260"  [label="CFG: "];
"1000260" -> "1000375"  [label="DDG: meta_bc > 4"];
"1000260" -> "1000375"  [label="DDG: meta_bc < 2"];
"1000260" -> "1000256"  [label="DDG: meta_bc < 2"];
"1000260" -> "1000256"  [label="DDG: meta_bc > 4"];
"1000264" -> "1000260"  [label="DDG: meta_bc"];
"1000264" -> "1000260"  [label="DDG: 4"];
"1000256" -> "1000255"  [label="AST: "];
"1000256" -> "1000257"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000268" -> "1000256"  [label="CFG: "];
"1000271" -> "1000256"  [label="CFG: "];
"1000256" -> "1000375"  [label="DDG: meta_bc < 2 || meta_bc > 4"];
"1000256" -> "1000375"  [label="DDG: meta_id & ID_ODD_SIZE"];
"1000256" -> "1000375"  [label="DDG: (meta_id & ID_ODD_SIZE) || meta_bc < 2 || meta_bc > 4"];
"1000257" -> "1000256"  [label="DDG: meta_id"];
"1000257" -> "1000256"  [label="DDG: ID_ODD_SIZE"];
"1000264" -> "1000266"  [label="CFG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000266" -> "1000264"  [label="AST: "];
"1000264" -> "1000375"  [label="DDG: meta_bc"];
"1000264" -> "1000282"  [label="DDG: meta_bc"];
"1000282" -> "1000281"  [label="AST: "];
"1000282" -> "1000284"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000284" -> "1000282"  [label="AST: "];
"1000290" -> "1000282"  [label="CFG: "];
"1000328" -> "1000282"  [label="CFG: "];
"1000282" -> "1000375"  [label="DDG: meta_bc == 4"];
"1000282" -> "1000375"  [label="DDG: meta_bc"];
"1000282" -> "1000353"  [label="DDG: meta_bc"];
"1000282" -> "1000356"  [label="DDG: meta_bc"];
"1000353" -> "1000159"  [label="AST: "];
"1000353" -> "1000355"  [label="CFG: "];
"1000354" -> "1000353"  [label="AST: "];
"1000355" -> "1000353"  [label="AST: "];
"1000357" -> "1000353"  [label="CFG: "];
"1000356" -> "1000159"  [label="AST: "];
"1000356" -> "1000358"  [label="CFG: "];
"1000357" -> "1000356"  [label="AST: "];
"1000358" -> "1000356"  [label="AST: "];
"1000157" -> "1000356"  [label="CFG: "];
"1000356" -> "1000375"  [label="DDG: dp"];
"1000356" -> "1000375"  [label="DDG: meta_bc"];
"1000356" -> "1000163"  [label="DDG: dp"];
"1000314" -> "1000356"  [label="DDG: dp[3]"];
"1000168" -> "1000356"  [label="DDG: dp"];
"1000295" -> "1000356"  [label="DDG: dp[1]"];
"1000305" -> "1000356"  [label="DDG: dp[2]"];
"1000340" -> "1000356"  [label="DDG: dp[1]"];
"1000242" -> "1000356"  [label="DDG: dp"];
"1000197" -> "1000356"  [label="DDG: dp"];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000164"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000162" -> "1000163"  [label="CFG: "];
"1000314" -> "1000163"  [label="DDG: dp[3]"];
"1000295" -> "1000163"  [label="DDG: dp[1]"];
"1000340" -> "1000163"  [label="DDG: dp[1]"];
"1000148" -> "1000163"  [label="DDG: dp"];
"1000305" -> "1000163"  [label="DDG: dp[2]"];
"1000163" -> "1000168"  [label="DDG: dp"];
"1000168" -> "1000167"  [label="AST: "];
"1000168" -> "1000169"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000167" -> "1000168"  [label="CFG: "];
"1000168" -> "1000375"  [label="DDG: dp"];
"1000314" -> "1000168"  [label="DDG: dp[3]"];
"1000295" -> "1000168"  [label="DDG: dp[1]"];
"1000305" -> "1000168"  [label="DDG: dp[2]"];
"1000340" -> "1000168"  [label="DDG: dp[1]"];
"1000168" -> "1000192"  [label="DDG: dp"];
"1000168" -> "1000242"  [label="DDG: dp"];
"1000192" -> "1000191"  [label="AST: "];
"1000192" -> "1000193"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000191" -> "1000192"  [label="CFG: "];
"1000314" -> "1000192"  [label="DDG: dp[3]"];
"1000295" -> "1000192"  [label="DDG: dp[1]"];
"1000305" -> "1000192"  [label="DDG: dp[2]"];
"1000340" -> "1000192"  [label="DDG: dp[1]"];
"1000192" -> "1000197"  [label="DDG: dp"];
"1000197" -> "1000196"  [label="AST: "];
"1000197" -> "1000198"  [label="CFG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000196" -> "1000197"  [label="CFG: "];
"1000197" -> "1000375"  [label="DDG: dp"];
"1000314" -> "1000197"  [label="DDG: dp[3]"];
"1000295" -> "1000197"  [label="DDG: dp[1]"];
"1000305" -> "1000197"  [label="DDG: dp[2]"];
"1000340" -> "1000197"  [label="DDG: dp[1]"];
"1000197" -> "1000242"  [label="DDG: dp"];
"1000242" -> "1000240"  [label="AST: "];
"1000242" -> "1000244"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000244" -> "1000242"  [label="AST: "];
"1000240" -> "1000242"  [label="CFG: "];
"1000242" -> "1000375"  [label="DDG: 2 - buffer"];
"1000242" -> "1000375"  [label="DDG: dp"];
"1000242" -> "1000240"  [label="DDG: dp"];
"1000242" -> "1000240"  [label="DDG: 2 - buffer"];
"1000314" -> "1000242"  [label="DDG: dp[3]"];
"1000295" -> "1000242"  [label="DDG: dp[1]"];
"1000305" -> "1000242"  [label="DDG: dp[2]"];
"1000340" -> "1000242"  [label="DDG: dp[1]"];
"1000244" -> "1000242"  [label="DDG: 2"];
"1000244" -> "1000242"  [label="DDG: buffer"];
"1000242" -> "1000295"  [label="DDG: dp"];
"1000242" -> "1000305"  [label="DDG: dp"];
"1000242" -> "1000314"  [label="DDG: dp"];
"1000242" -> "1000340"  [label="DDG: dp"];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000240"  [label="AST: "];
"1000247" -> "1000240"  [label="CFG: "];
"1000240" -> "1000375"  [label="DDG: dp - 2 - buffer"];
"1000240" -> "1000239"  [label="DDG: dp - 2 - buffer"];
"1000239" -> "1000237"  [label="AST: "];
"1000239" -> "1000247"  [label="CFG: "];
"1000247" -> "1000239"  [label="AST: "];
"1000237" -> "1000239"  [label="CFG: "];
"1000239" -> "1000375"  [label="DDG: (int)(dp - 2 - buffer)"];
"1000239" -> "1000237"  [label="DDG: (int)(dp - 2 - buffer)"];
"1000239" -> "1000237"  [label="DDG: 1"];
"1000237" -> "1000229"  [label="AST: "];
"1000238" -> "1000237"  [label="AST: "];
"1000250" -> "1000237"  [label="CFG: "];
"1000237" -> "1000375"  [label="DDG: (int)(dp - 2 - buffer) >> 1"];
"1000237" -> "1000375"  [label="DDG: wcount"];
"1000237" -> "1000270"  [label="DDG: wcount"];
"1000270" -> "1000269"  [label="AST: "];
"1000270" -> "1000271"  [label="CFG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000273" -> "1000270"  [label="CFG: "];
"1000283" -> "1000270"  [label="CFG: "];
"1000270" -> "1000375"  [label="DDG: wcount"];
"1000295" -> "1000294"  [label="AST: "];
"1000295" -> "1000299"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000299" -> "1000295"  [label="AST: "];
"1000307" -> "1000295"  [label="CFG: "];
"1000294" -> "1000295"  [label="CFG: "];
"1000295" -> "1000375"  [label="DDG: dp[1]"];
"1000295" -> "1000375"  [label="DDG: (csum >> 8) & 0xff"];
"1000295" -> "1000294"  [label="DDG: dp[1]"];
"1000295" -> "1000294"  [label="DDG: (csum >> 8) & 0xff"];
"1000340" -> "1000295"  [label="DDG: dp[1]"];
"1000299" -> "1000295"  [label="DDG: csum >> 8"];
"1000299" -> "1000295"  [label="DDG: 0xff"];
"1000295" -> "1000340"  [label="DDG: dp[1]"];
"1000294" -> "1000287"  [label="AST: "];
"1000294" -> "1000304"  [label="CFG: "];
"1000304" -> "1000294"  [label="AST: "];
"1000287" -> "1000294"  [label="CFG: "];
"1000294" -> "1000375"  [label="DDG: dp[2] != ((csum >> 16) & 0xff) || dp[3] != ((csum >> 24) & 0xff)"];
"1000294" -> "1000375"  [label="DDG: dp[1] != ((csum >> 8) & 0xff)"];
"1000294" -> "1000287"  [label="DDG: dp[1] != ((csum >> 8) & 0xff)"];
"1000294" -> "1000287"  [label="DDG: dp[2] != ((csum >> 16) & 0xff) || dp[3] != ((csum >> 24) & 0xff)"];
"1000304" -> "1000294"  [label="DDG: dp[2] != ((csum >> 16) & 0xff)"];
"1000304" -> "1000294"  [label="DDG: dp[3] != ((csum >> 24) & 0xff)"];
"1000294" -> "1000333"  [label="DDG: dp[1] != ((csum >> 8) & 0xff)"];
"1000287" -> "1000286"  [label="AST: "];
"1000287" -> "1000288"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000324" -> "1000287"  [label="CFG: "];
"1000352" -> "1000287"  [label="CFG: "];
"1000287" -> "1000375"  [label="DDG: dp[1] != ((csum >> 8) & 0xff) || dp[2] != ((csum >> 16) & 0xff) || dp[3] != ((csum >> 24) & 0xff)"];
"1000287" -> "1000375"  [label="DDG: *dp != (csum & 0xff) || dp[1] != ((csum >> 8) & 0xff) || dp[2] != ((csum >> 16) & 0xff) || dp[3] != ((csum >> 24) & 0xff)"];
"1000287" -> "1000375"  [label="DDG: *dp != (csum & 0xff)"];
"1000288" -> "1000287"  [label="DDG: *dp"];
"1000288" -> "1000287"  [label="DDG: csum & 0xff"];
"1000333" -> "1000332"  [label="AST: "];
"1000333" -> "1000334"  [label="CFG: "];
"1000333" -> "1000340"  [label="CFG: "];
"1000334" -> "1000333"  [label="AST: "];
"1000340" -> "1000333"  [label="AST: "];
"1000350" -> "1000333"  [label="CFG: "];
"1000352" -> "1000333"  [label="CFG: "];
"1000333" -> "1000375"  [label="DDG: *dp != (csum & 0xff)"];
"1000333" -> "1000375"  [label="DDG: *dp != (csum & 0xff) || dp[1] != ((csum >> 8) & 0xff)"];
"1000333" -> "1000375"  [label="DDG: dp[1] != ((csum >> 8) & 0xff)"];
"1000334" -> "1000333"  [label="DDG: *dp"];
"1000334" -> "1000333"  [label="DDG: csum & 0xff"];
"1000340" -> "1000333"  [label="DDG: dp[1]"];
"1000340" -> "1000333"  [label="DDG: (csum >> 8) & 0xff"];
"1000340" -> "1000344"  [label="CFG: "];
"1000341" -> "1000340"  [label="AST: "];
"1000344" -> "1000340"  [label="AST: "];
"1000340" -> "1000375"  [label="DDG: (csum >> 8) & 0xff"];
"1000340" -> "1000375"  [label="DDG: dp[1]"];
"1000344" -> "1000340"  [label="DDG: csum >> 8"];
"1000344" -> "1000340"  [label="DDG: 0xff"];
"1000305" -> "1000304"  [label="AST: "];
"1000305" -> "1000309"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000309" -> "1000305"  [label="AST: "];
"1000316" -> "1000305"  [label="CFG: "];
"1000304" -> "1000305"  [label="CFG: "];
"1000305" -> "1000375"  [label="DDG: (csum >> 16) & 0xff"];
"1000305" -> "1000375"  [label="DDG: dp[2]"];
"1000305" -> "1000304"  [label="DDG: dp[2]"];
"1000305" -> "1000304"  [label="DDG: (csum >> 16) & 0xff"];
"1000309" -> "1000305"  [label="DDG: csum >> 16"];
"1000309" -> "1000305"  [label="DDG: 0xff"];
"1000304" -> "1000314"  [label="CFG: "];
"1000314" -> "1000304"  [label="AST: "];
"1000304" -> "1000375"  [label="DDG: dp[2] != ((csum >> 16) & 0xff)"];
"1000304" -> "1000375"  [label="DDG: dp[3] != ((csum >> 24) & 0xff)"];
"1000314" -> "1000304"  [label="DDG: dp[3]"];
"1000314" -> "1000304"  [label="DDG: (csum >> 24) & 0xff"];
"1000314" -> "1000318"  [label="CFG: "];
"1000315" -> "1000314"  [label="AST: "];
"1000318" -> "1000314"  [label="AST: "];
"1000314" -> "1000375"  [label="DDG: dp[3]"];
"1000314" -> "1000375"  [label="DDG: (csum >> 24) & 0xff"];
"1000318" -> "1000314"  [label="DDG: csum >> 24"];
"1000318" -> "1000314"  [label="DDG: 0xff"];
"1000361" -> "1000360"  [label="AST: "];
"1000361" -> "1000363"  [label="CFG: "];
"1000362" -> "1000361"  [label="AST: "];
"1000363" -> "1000361"  [label="AST: "];
"1000366" -> "1000361"  [label="CFG: "];
"1000360" -> "1000361"  [label="CFG: "];
"1000361" -> "1000375"  [label="DDG: bcount"];
"1000361" -> "1000360"  [label="DDG: bcount"];
"1000361" -> "1000360"  [label="DDG: 0"];
"1000360" -> "1000359"  [label="AST: "];
"1000360" -> "1000364"  [label="CFG: "];
"1000364" -> "1000360"  [label="AST: "];
"1000359" -> "1000360"  [label="CFG: "];
"1000360" -> "1000375"  [label="DDG: bcount == 0"];
"1000360" -> "1000375"  [label="DDG: !verify_checksum || !(wphdr->flags & HAS_CHECKSUM) || checksum_passed"];
"1000360" -> "1000375"  [label="DDG: (bcount == 0) && (!verify_checksum || !(wphdr->flags & HAS_CHECKSUM) || checksum_passed)"];
"1000360" -> "1000359"  [label="DDG: (bcount == 0) && (!verify_checksum || !(wphdr->flags & HAS_CHECKSUM) || checksum_passed)"];
"1000364" -> "1000360"  [label="DDG: !verify_checksum"];
"1000364" -> "1000360"  [label="DDG: !(wphdr->flags & HAS_CHECKSUM) || checksum_passed"];
"1000359" -> "1000103"  [label="AST: "];
"1000375" -> "1000359"  [label="CFG: "];
"1000359" -> "1000375"  [label="DDG: <RET>"];
}
