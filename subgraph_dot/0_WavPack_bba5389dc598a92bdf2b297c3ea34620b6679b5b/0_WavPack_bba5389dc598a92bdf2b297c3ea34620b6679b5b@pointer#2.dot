digraph "0_WavPack_bba5389dc598a92bdf2b297c3ea34620b6679b5b@pointer" {
"1000288" [label="(Call,*dp != (csum & 0xff))"];
"1000334" [label="(Call,*dp != (csum & 0xff))"];
"1000288" [label="(Call,*dp != (csum & 0xff))"];
"1000291" [label="(Call,csum & 0xff)"];
"1000272" [label="(Call,csum = (csum * 3) + *csptr++)"];
"1000275" [label="(Call,csum * 3)"];
"1000249" [label="(Call,csum = (uint32_t) -1)"];
"1000251" [label="(Call,(uint32_t) -1)"];
"1000253" [label="(Call,-1)"];
"1000337" [label="(Call,csum & 0xff)"];
"1000327" [label="(Call,csum ^= csum >> 16)"];
"1000329" [label="(Call,csum >> 16)"];
"1000287" [label="(Call,*dp != (csum & 0xff) || dp[1] != ((csum >> 8) & 0xff) || dp[2] != ((csum >> 16) & 0xff) || dp[3] != ((csum >> 24) & 0xff))"];
"1000333" [label="(Call,*dp != (csum & 0xff) || dp[1] != ((csum >> 8) & 0xff))"];
"1000258" [label="(Identifier,meta_id)"];
"1000294" [label="(Call,dp[1] != ((csum >> 8) & 0xff) || dp[2] != ((csum >> 16) & 0xff) || dp[3] != ((csum >> 24) & 0xff))"];
"1000288" [label="(Call,*dp != (csum & 0xff))"];
"1000330" [label="(Identifier,csum)"];
"1000338" [label="(Identifier,csum)"];
"1000336" [label="(Identifier,dp)"];
"1000289" [label="(Call,*dp)"];
"1000254" [label="(Literal,1)"];
"1000275" [label="(Call,csum * 3)"];
"1000280" [label="(Identifier,csptr)"];
"1000291" [label="(Call,csum & 0xff)"];
"1000329" [label="(Call,csum >> 16)"];
"1000277" [label="(Literal,3)"];
"1000324" [label="(Identifier,FALSE)"];
"1000342" [label="(Identifier,dp)"];
"1000286" [label="(ControlStructure,if (*dp != (csum & 0xff) || dp[1] != ((csum >> 8) & 0xff) || dp[2] != ((csum >> 16) & 0xff) || dp[3] != ((csum >> 24) & 0xff)))"];
"1000253" [label="(Call,-1)"];
"1000333" [label="(Call,*dp != (csum & 0xff) || dp[1] != ((csum >> 8) & 0xff))"];
"1000337" [label="(Call,csum & 0xff)"];
"1000335" [label="(Call,*dp)"];
"1000292" [label="(Identifier,csum)"];
"1000251" [label="(Call,(uint32_t) -1)"];
"1000269" [label="(ControlStructure,while (wcount--))"];
"1000250" [label="(Identifier,csum)"];
"1000272" [label="(Call,csum = (csum * 3) + *csptr++)"];
"1000327" [label="(Call,csum ^= csum >> 16)"];
"1000229" [label="(Block,)"];
"1000345" [label="(Call,csum >> 8)"];
"1000328" [label="(Identifier,csum)"];
"1000249" [label="(Call,csum = (uint32_t) -1)"];
"1000375" [label="(MethodReturn,int)"];
"1000273" [label="(Identifier,csum)"];
"1000332" [label="(ControlStructure,if (*dp != (csum & 0xff) || dp[1] != ((csum >> 8) & 0xff)))"];
"1000326" [label="(Block,)"];
"1000352" [label="(Identifier,checksum_passed)"];
"1000331" [label="(Literal,16)"];
"1000271" [label="(Identifier,wcount)"];
"1000297" [label="(Identifier,dp)"];
"1000300" [label="(Call,csum >> 8)"];
"1000287" [label="(Call,*dp != (csum & 0xff) || dp[1] != ((csum >> 8) & 0xff) || dp[2] != ((csum >> 16) & 0xff) || dp[3] != ((csum >> 24) & 0xff))"];
"1000293" [label="(Literal,0xff)"];
"1000340" [label="(Call,dp[1] != ((csum >> 8) & 0xff))"];
"1000350" [label="(Identifier,FALSE)"];
"1000334" [label="(Call,*dp != (csum & 0xff))"];
"1000339" [label="(Literal,0xff)"];
"1000276" [label="(Identifier,csum)"];
"1000274" [label="(Call,(csum * 3) + *csptr++)"];
"1000288" -> "1000287"  [label="AST: "];
"1000288" -> "1000291"  [label="CFG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000291" -> "1000288"  [label="AST: "];
"1000297" -> "1000288"  [label="CFG: "];
"1000287" -> "1000288"  [label="CFG: "];
"1000288" -> "1000375"  [label="DDG: csum & 0xff"];
"1000288" -> "1000375"  [label="DDG: *dp"];
"1000288" -> "1000287"  [label="DDG: *dp"];
"1000288" -> "1000287"  [label="DDG: csum & 0xff"];
"1000334" -> "1000288"  [label="DDG: *dp"];
"1000291" -> "1000288"  [label="DDG: csum"];
"1000291" -> "1000288"  [label="DDG: 0xff"];
"1000288" -> "1000334"  [label="DDG: *dp"];
"1000334" -> "1000333"  [label="AST: "];
"1000334" -> "1000337"  [label="CFG: "];
"1000335" -> "1000334"  [label="AST: "];
"1000337" -> "1000334"  [label="AST: "];
"1000342" -> "1000334"  [label="CFG: "];
"1000333" -> "1000334"  [label="CFG: "];
"1000334" -> "1000375"  [label="DDG: csum & 0xff"];
"1000334" -> "1000375"  [label="DDG: *dp"];
"1000334" -> "1000333"  [label="DDG: *dp"];
"1000334" -> "1000333"  [label="DDG: csum & 0xff"];
"1000337" -> "1000334"  [label="DDG: csum"];
"1000337" -> "1000334"  [label="DDG: 0xff"];
"1000291" -> "1000293"  [label="CFG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000293" -> "1000291"  [label="AST: "];
"1000291" -> "1000375"  [label="DDG: csum"];
"1000272" -> "1000291"  [label="DDG: csum"];
"1000249" -> "1000291"  [label="DDG: csum"];
"1000291" -> "1000300"  [label="DDG: csum"];
"1000272" -> "1000269"  [label="AST: "];
"1000272" -> "1000274"  [label="CFG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000274" -> "1000272"  [label="AST: "];
"1000271" -> "1000272"  [label="CFG: "];
"1000272" -> "1000375"  [label="DDG: (csum * 3) + *csptr++"];
"1000275" -> "1000272"  [label="DDG: csum"];
"1000275" -> "1000272"  [label="DDG: 3"];
"1000272" -> "1000275"  [label="DDG: csum"];
"1000272" -> "1000329"  [label="DDG: csum"];
"1000275" -> "1000274"  [label="AST: "];
"1000275" -> "1000277"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000277" -> "1000275"  [label="AST: "];
"1000280" -> "1000275"  [label="CFG: "];
"1000275" -> "1000274"  [label="DDG: csum"];
"1000275" -> "1000274"  [label="DDG: 3"];
"1000249" -> "1000275"  [label="DDG: csum"];
"1000249" -> "1000229"  [label="AST: "];
"1000249" -> "1000251"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000251" -> "1000249"  [label="AST: "];
"1000258" -> "1000249"  [label="CFG: "];
"1000249" -> "1000375"  [label="DDG: (uint32_t) -1"];
"1000249" -> "1000375"  [label="DDG: csum"];
"1000251" -> "1000249"  [label="DDG: -1"];
"1000249" -> "1000329"  [label="DDG: csum"];
"1000251" -> "1000253"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="AST: "];
"1000251" -> "1000375"  [label="DDG: -1"];
"1000253" -> "1000251"  [label="DDG: 1"];
"1000253" -> "1000254"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000337" -> "1000339"  [label="CFG: "];
"1000338" -> "1000337"  [label="AST: "];
"1000339" -> "1000337"  [label="AST: "];
"1000337" -> "1000375"  [label="DDG: csum"];
"1000327" -> "1000337"  [label="DDG: csum"];
"1000337" -> "1000345"  [label="DDG: csum"];
"1000327" -> "1000326"  [label="AST: "];
"1000327" -> "1000329"  [label="CFG: "];
"1000328" -> "1000327"  [label="AST: "];
"1000329" -> "1000327"  [label="AST: "];
"1000336" -> "1000327"  [label="CFG: "];
"1000327" -> "1000375"  [label="DDG: csum >> 16"];
"1000327" -> "1000375"  [label="DDG: csum ^= csum >> 16"];
"1000329" -> "1000327"  [label="DDG: csum"];
"1000329" -> "1000327"  [label="DDG: 16"];
"1000329" -> "1000331"  [label="CFG: "];
"1000330" -> "1000329"  [label="AST: "];
"1000331" -> "1000329"  [label="AST: "];
"1000287" -> "1000286"  [label="AST: "];
"1000287" -> "1000294"  [label="CFG: "];
"1000294" -> "1000287"  [label="AST: "];
"1000324" -> "1000287"  [label="CFG: "];
"1000352" -> "1000287"  [label="CFG: "];
"1000287" -> "1000375"  [label="DDG: dp[1] != ((csum >> 8) & 0xff) || dp[2] != ((csum >> 16) & 0xff) || dp[3] != ((csum >> 24) & 0xff)"];
"1000287" -> "1000375"  [label="DDG: *dp != (csum & 0xff) || dp[1] != ((csum >> 8) & 0xff) || dp[2] != ((csum >> 16) & 0xff) || dp[3] != ((csum >> 24) & 0xff)"];
"1000287" -> "1000375"  [label="DDG: *dp != (csum & 0xff)"];
"1000294" -> "1000287"  [label="DDG: dp[1] != ((csum >> 8) & 0xff)"];
"1000294" -> "1000287"  [label="DDG: dp[2] != ((csum >> 16) & 0xff) || dp[3] != ((csum >> 24) & 0xff)"];
"1000333" -> "1000332"  [label="AST: "];
"1000333" -> "1000340"  [label="CFG: "];
"1000340" -> "1000333"  [label="AST: "];
"1000350" -> "1000333"  [label="CFG: "];
"1000352" -> "1000333"  [label="CFG: "];
"1000333" -> "1000375"  [label="DDG: *dp != (csum & 0xff)"];
"1000333" -> "1000375"  [label="DDG: *dp != (csum & 0xff) || dp[1] != ((csum >> 8) & 0xff)"];
"1000333" -> "1000375"  [label="DDG: dp[1] != ((csum >> 8) & 0xff)"];
"1000340" -> "1000333"  [label="DDG: dp[1]"];
"1000340" -> "1000333"  [label="DDG: (csum >> 8) & 0xff"];
"1000294" -> "1000333"  [label="DDG: dp[1] != ((csum >> 8) & 0xff)"];
}
