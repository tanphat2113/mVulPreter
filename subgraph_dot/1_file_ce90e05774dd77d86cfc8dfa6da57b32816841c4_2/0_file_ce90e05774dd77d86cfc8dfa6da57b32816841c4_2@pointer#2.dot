digraph "0_file_ce90e05774dd77d86cfc8dfa6da57b32816841c4_2@pointer" {
"1000363" [label="(Call,file_printf(ms, \"Hurd\"))"];
"1000335" [label="(Call,file_printf(ms, \", for GNU/\"))"];
"1000287" [label="(Call,file_printf(ms, \", for SuSE %d.%d\", nbuf[doff], nbuf[doff + 1]))"];
"1000117" [label="(MethodParameterIn,struct magic_set *ms)"];
"1000362" [label="(Call,file_printf(ms, \"Hurd\") == -1)"];
"1000416" [label="(Call,file_printf(ms, \" %d.%d.%d\", elf_getu32(swap, desc[1]),\n \t\t    elf_getu32(swap, desc[2]), elf_getu32(swap, desc[3])))"];
"1000415" [label="(Call,file_printf(ms, \" %d.%d.%d\", elf_getu32(swap, desc[1]),\n \t\t    elf_getu32(swap, desc[2]), elf_getu32(swap, desc[3])) == -1)"];
"1000963" [label="(Call,file_printf(ms, \", %s-style\", os_style_names[os_style]))"];
"1000117" [label="(MethodParameterIn,struct magic_set *ms)"];
"1000680" [label="(Call,file_printf(ms, \", compiler model: %.*s\",\n\t\t\t    (int)descsz, (const char *)&nbuf[doff]))"];
"1000509" [label="(Call,file_printf(ms, \"%02x\", desc[i]))"];
"1000440" [label="(Identifier,flags)"];
"1000736" [label="(Call,do_note_freebsd_version(ms, swap, &nbuf[doff]))"];
"1000660" [label="(Call,file_printf(ms, \", compiled for: %.*s\", (int)descsz,\n\t\t\t    (const char *)&nbuf[doff]))"];
"1000603" [label="(Call,file_printf(ms, \"%s%s\", did++ ? \",\" : \"\",\n \t\t\t    pax[i]))"];
"1000205" [label="(Call,file_printf(ms, \", bad note description size 0x%lx\",\n\t\t(unsigned long)descsz))"];
"1000429" [label="(Call,elf_getu32(swap, desc[3]))"];
"1000286" [label="(Block,)"];
"1000396" [label="(Call,file_printf(ms, \"kNetBSD\"))"];
"1000288" [label="(Identifier,ms)"];
"1000364" [label="(Identifier,ms)"];
"1000374" [label="(Call,file_printf(ms, \"Solaris\"))"];
"1000369" [label="(Identifier,size)"];
"1000476" [label="(Call,file_printf(ms, \", BuildID[%s]=\", descsz == 16 ? \"md5/uuid\" :\n\t\t\"sha1\"))"];
"1000435" [label="(Literal,1)"];
"1000289" [label="(Literal,\", for SuSE %d.%d\")"];
"1000367" [label="(Literal,1)"];
"1000337" [label="(Literal,\", for GNU/\")"];
"1000301" [label="(Identifier,namesz)"];
"1000437" [label="(Identifier,size)"];
"1000385" [label="(Call,file_printf(ms, \"kFreeBSD\"))"];
"1001221" [label="(Call,file_printf(ms, \", from '%.*s'\",\n \t\t\t\t    (int)(cp - cname), cname))"];
"1001023" [label="(Call,file_printf(ms, \" (signal %u)\",\n \t\t\t    elf_getu32(swap, signo)))"];
"1000190" [label="(Call,file_printf(ms, \", bad note name size 0x%lx\",\n\t\t(unsigned long)namesz))"];
"1000989" [label="(Call,file_printf(ms, \", from '%.31s'\",\n \t\t\t    file_printable(sbuf, sizeof(sbuf),\n \t\t\t    (const char *)&nbuf[doff + 0x7c])))"];
"1000363" [label="(Call,file_printf(ms, \"Hurd\"))"];
"1000414" [label="(ControlStructure,if (file_printf(ms, \" %d.%d.%d\", elf_getu32(swap, desc[1]),\n \t\t    elf_getu32(swap, desc[2]), elf_getu32(swap, desc[3])) == -1))"];
"1000336" [label="(Identifier,ms)"];
"1000339" [label="(Literal,1)"];
"1000370" [label="(ControlStructure,break;)"];
"1000290" [label="(Call,nbuf[doff])"];
"1000775" [label="(Call,file_printf(ms, \", for OpenBSD\"))"];
"1000417" [label="(Identifier,ms)"];
"1000418" [label="(Literal,\" %d.%d.%d\")"];
"1000574" [label="(Call,file_printf(ms, \", PaX: \"))"];
"1000366" [label="(Call,-1)"];
"1000416" [label="(Call,file_printf(ms, \" %d.%d.%d\", elf_getu32(swap, desc[1]),\n \t\t    elf_getu32(swap, desc[2]), elf_getu32(swap, desc[3])))"];
"1000434" [label="(Call,-1)"];
"1000815" [label="(Call,file_printf(ms, \", for DragonFly\"))"];
"1000361" [label="(ControlStructure,if (file_printf(ms, \"Hurd\") == -1))"];
"1000424" [label="(Call,elf_getu32(swap, desc[2]))"];
"1000643" [label="(Call,do_note_netbsd_version(ms, swap, &nbuf[doff]))"];
"1000293" [label="(Call,nbuf[doff + 1])"];
"1000840" [label="(Call,file_printf(ms, \" %d.%d.%d\", desc / 100000,\n\t\t    desc / 10000 % 10, desc % 10000))"];
"1000419" [label="(Call,elf_getu32(swap, desc[1]))"];
"1000335" [label="(Call,file_printf(ms, \", for GNU/\"))"];
"1000287" [label="(Call,file_printf(ms, \", for SuSE %d.%d\", nbuf[doff], nbuf[doff + 1]))"];
"1000700" [label="(Call,file_printf(ms, \", note=%u\", xnh_type))"];
"1000407" [label="(Call,file_printf(ms, \"<unknown>\"))"];
"1000362" [label="(Call,file_printf(ms, \"Hurd\") == -1)"];
"1000365" [label="(Literal,\"Hurd\")"];
"1000415" [label="(Call,file_printf(ms, \" %d.%d.%d\", elf_getu32(swap, desc[1]),\n \t\t    elf_getu32(swap, desc[2]), elf_getu32(swap, desc[3])) == -1)"];
"1001244" [label="(MethodReturn,RET)"];
"1000352" [label="(Call,file_printf(ms, \"Linux\"))"];
"1000334" [label="(Call,file_printf(ms, \", for GNU/\") == -1)"];
"1000363" -> "1000362"  [label="AST: "];
"1000363" -> "1000365"  [label="CFG: "];
"1000364" -> "1000363"  [label="AST: "];
"1000365" -> "1000363"  [label="AST: "];
"1000367" -> "1000363"  [label="CFG: "];
"1000363" -> "1001244"  [label="DDG: "];
"1000363" -> "1000362"  [label="DDG: "];
"1000363" -> "1000362"  [label="DDG: "];
"1000335" -> "1000363"  [label="DDG: "];
"1000117" -> "1000363"  [label="DDG: "];
"1000363" -> "1000416"  [label="DDG: "];
"1000335" -> "1000334"  [label="AST: "];
"1000335" -> "1000337"  [label="CFG: "];
"1000336" -> "1000335"  [label="AST: "];
"1000337" -> "1000335"  [label="AST: "];
"1000339" -> "1000335"  [label="CFG: "];
"1000335" -> "1001244"  [label="DDG: "];
"1000335" -> "1000334"  [label="DDG: "];
"1000335" -> "1000334"  [label="DDG: "];
"1000287" -> "1000335"  [label="DDG: "];
"1000117" -> "1000335"  [label="DDG: "];
"1000335" -> "1000352"  [label="DDG: "];
"1000335" -> "1000374"  [label="DDG: "];
"1000335" -> "1000385"  [label="DDG: "];
"1000335" -> "1000396"  [label="DDG: "];
"1000335" -> "1000407"  [label="DDG: "];
"1000287" -> "1000286"  [label="AST: "];
"1000287" -> "1000293"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000287"  [label="AST: "];
"1000290" -> "1000287"  [label="AST: "];
"1000293" -> "1000287"  [label="AST: "];
"1000301" -> "1000287"  [label="CFG: "];
"1000287" -> "1001244"  [label="DDG: "];
"1000287" -> "1001244"  [label="DDG: "];
"1000287" -> "1001244"  [label="DDG: "];
"1000287" -> "1001244"  [label="DDG: "];
"1000117" -> "1000287"  [label="DDG: "];
"1000287" -> "1000476"  [label="DDG: "];
"1000287" -> "1000574"  [label="DDG: "];
"1000287" -> "1000603"  [label="DDG: "];
"1000287" -> "1000643"  [label="DDG: "];
"1000287" -> "1000660"  [label="DDG: "];
"1000287" -> "1000680"  [label="DDG: "];
"1000287" -> "1000700"  [label="DDG: "];
"1000287" -> "1000736"  [label="DDG: "];
"1000287" -> "1000775"  [label="DDG: "];
"1000287" -> "1000815"  [label="DDG: "];
"1000287" -> "1000963"  [label="DDG: "];
"1000287" -> "1000989"  [label="DDG: "];
"1000287" -> "1001221"  [label="DDG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1001244"  [label="DDG: "];
"1000117" -> "1000190"  [label="DDG: "];
"1000117" -> "1000205"  [label="DDG: "];
"1000117" -> "1000352"  [label="DDG: "];
"1000117" -> "1000374"  [label="DDG: "];
"1000117" -> "1000385"  [label="DDG: "];
"1000117" -> "1000396"  [label="DDG: "];
"1000117" -> "1000407"  [label="DDG: "];
"1000117" -> "1000416"  [label="DDG: "];
"1000117" -> "1000476"  [label="DDG: "];
"1000117" -> "1000509"  [label="DDG: "];
"1000117" -> "1000574"  [label="DDG: "];
"1000117" -> "1000603"  [label="DDG: "];
"1000117" -> "1000643"  [label="DDG: "];
"1000117" -> "1000660"  [label="DDG: "];
"1000117" -> "1000680"  [label="DDG: "];
"1000117" -> "1000700"  [label="DDG: "];
"1000117" -> "1000736"  [label="DDG: "];
"1000117" -> "1000775"  [label="DDG: "];
"1000117" -> "1000815"  [label="DDG: "];
"1000117" -> "1000840"  [label="DDG: "];
"1000117" -> "1000963"  [label="DDG: "];
"1000117" -> "1000989"  [label="DDG: "];
"1000117" -> "1001023"  [label="DDG: "];
"1000117" -> "1001221"  [label="DDG: "];
"1000362" -> "1000361"  [label="AST: "];
"1000362" -> "1000366"  [label="CFG: "];
"1000366" -> "1000362"  [label="AST: "];
"1000369" -> "1000362"  [label="CFG: "];
"1000370" -> "1000362"  [label="CFG: "];
"1000362" -> "1001244"  [label="DDG: "];
"1000362" -> "1001244"  [label="DDG: "];
"1000362" -> "1001244"  [label="DDG: "];
"1000366" -> "1000362"  [label="DDG: "];
"1000416" -> "1000415"  [label="AST: "];
"1000416" -> "1000429"  [label="CFG: "];
"1000417" -> "1000416"  [label="AST: "];
"1000418" -> "1000416"  [label="AST: "];
"1000419" -> "1000416"  [label="AST: "];
"1000424" -> "1000416"  [label="AST: "];
"1000429" -> "1000416"  [label="AST: "];
"1000435" -> "1000416"  [label="CFG: "];
"1000416" -> "1001244"  [label="DDG: "];
"1000416" -> "1001244"  [label="DDG: "];
"1000416" -> "1001244"  [label="DDG: "];
"1000416" -> "1001244"  [label="DDG: "];
"1000416" -> "1000415"  [label="DDG: "];
"1000416" -> "1000415"  [label="DDG: "];
"1000416" -> "1000415"  [label="DDG: "];
"1000416" -> "1000415"  [label="DDG: "];
"1000416" -> "1000415"  [label="DDG: "];
"1000396" -> "1000416"  [label="DDG: "];
"1000374" -> "1000416"  [label="DDG: "];
"1000385" -> "1000416"  [label="DDG: "];
"1000407" -> "1000416"  [label="DDG: "];
"1000352" -> "1000416"  [label="DDG: "];
"1000419" -> "1000416"  [label="DDG: "];
"1000419" -> "1000416"  [label="DDG: "];
"1000424" -> "1000416"  [label="DDG: "];
"1000424" -> "1000416"  [label="DDG: "];
"1000429" -> "1000416"  [label="DDG: "];
"1000429" -> "1000416"  [label="DDG: "];
"1000415" -> "1000414"  [label="AST: "];
"1000415" -> "1000434"  [label="CFG: "];
"1000434" -> "1000415"  [label="AST: "];
"1000437" -> "1000415"  [label="CFG: "];
"1000440" -> "1000415"  [label="CFG: "];
"1000415" -> "1001244"  [label="DDG: "];
"1000415" -> "1001244"  [label="DDG: "];
"1000415" -> "1001244"  [label="DDG: "];
"1000434" -> "1000415"  [label="DDG: "];
}
