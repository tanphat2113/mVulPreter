digraph "0_file_ce90e05774dd77d86cfc8dfa6da57b32816841c4_2@array" {
"1001212" [label="(Call,isspace(cp[-1]))"];
"1001209" [label="(Call,cp > cname)"];
"1001204" [label="(Call,cp++)"];
"1001195" [label="(Call,cp = cname)"];
"1001183" [label="(Call,cname = (unsigned char *)\n\t\t\t\t    &nbuf[doff + prpsoffsets(i)])"];
"1001185" [label="(Call,(unsigned char *)\n\t\t\t\t    &nbuf[doff + prpsoffsets(i)])"];
"1001217" [label="(Call,cp--)"];
"1001212" [label="(Call,isspace(cp[-1]))"];
"1001208" [label="(Call,cp > cname && isspace(cp[-1]))"];
"1001226" [label="(Call,cp - cname)"];
"1001224" [label="(Call,(int)(cp - cname))"];
"1001221" [label="(Call,file_printf(ms, \", from '%.*s'\",\n \t\t\t\t    (int)(cp - cname), cname))"];
"1001220" [label="(Call,file_printf(ms, \", from '%.*s'\",\n \t\t\t\t    (int)(cp - cname), cname) == -1)"];
"1000963" [label="(Call,file_printf(ms, \", %s-style\", os_style_names[os_style]))"];
"1000509" [label="(Call,file_printf(ms, \"%02x\", desc[i]))"];
"1000117" [label="(MethodParameterIn,struct magic_set *ms)"];
"1001208" [label="(Call,cp > cname && isspace(cp[-1]))"];
"1000603" [label="(Call,file_printf(ms, \"%s%s\", did++ ? \",\" : \"\",\n \t\t\t    pax[i]))"];
"1001204" [label="(Call,cp++)"];
"1001233" [label="(Identifier,size)"];
"1001207" [label="(ControlStructure,while (cp > cname && isspace(cp[-1])))"];
"1001230" [label="(Call,-1)"];
"1001213" [label="(Call,cp[-1])"];
"1000476" [label="(Call,file_printf(ms, \", BuildID[%s]=\", descsz == 16 ? \"md5/uuid\" :\n\t\t\"sha1\"))"];
"1001231" [label="(Literal,1)"];
"1001229" [label="(Identifier,cname)"];
"1001221" [label="(Call,file_printf(ms, \", from '%.*s'\",\n \t\t\t\t    (int)(cp - cname), cname))"];
"1001194" [label="(ControlStructure,for (cp = cname; *cp && isprint(*cp); cp++))"];
"1001217" [label="(Call,cp--)"];
"1001212" [label="(Call,isspace(cp[-1]))"];
"1001223" [label="(Literal,\", from '%.*s'\")"];
"1001195" [label="(Call,cp = cname)"];
"1001219" [label="(ControlStructure,if (file_printf(ms, \", from '%.*s'\",\n \t\t\t\t    (int)(cp - cname), cname) == -1))"];
"1001220" [label="(Call,file_printf(ms, \", from '%.*s'\",\n \t\t\t\t    (int)(cp - cname), cname) == -1)"];
"1001236" [label="(Identifier,flags)"];
"1001228" [label="(Identifier,cname)"];
"1001183" [label="(Call,cname = (unsigned char *)\n\t\t\t\t    &nbuf[doff + prpsoffsets(i)])"];
"1001063" [label="(Block,)"];
"1001205" [label="(Identifier,cp)"];
"1001222" [label="(Identifier,ms)"];
"1001210" [label="(Identifier,cp)"];
"1001187" [label="(Call,&nbuf[doff + prpsoffsets(i)])"];
"1001184" [label="(Identifier,cname)"];
"1000574" [label="(Call,file_printf(ms, \", PaX: \"))"];
"1001227" [label="(Identifier,cp)"];
"1001200" [label="(Identifier,cp)"];
"1001211" [label="(Identifier,cname)"];
"1001197" [label="(Identifier,cname)"];
"1001209" [label="(Call,cp > cname)"];
"1001196" [label="(Identifier,cp)"];
"1001218" [label="(Identifier,cp)"];
"1001224" [label="(Call,(int)(cp - cname))"];
"1001226" [label="(Call,cp - cname)"];
"1001214" [label="(Identifier,cp)"];
"1000287" [label="(Call,file_printf(ms, \", for SuSE %d.%d\", nbuf[doff], nbuf[doff + 1]))"];
"1001185" [label="(Call,(unsigned char *)\n\t\t\t\t    &nbuf[doff + prpsoffsets(i)])"];
"1001244" [label="(MethodReturn,RET)"];
"1001212" -> "1001208"  [label="AST: "];
"1001212" -> "1001213"  [label="CFG: "];
"1001213" -> "1001212"  [label="AST: "];
"1001208" -> "1001212"  [label="CFG: "];
"1001212" -> "1001244"  [label="DDG: "];
"1001212" -> "1001209"  [label="DDG: "];
"1001212" -> "1001208"  [label="DDG: "];
"1001209" -> "1001212"  [label="DDG: "];
"1001212" -> "1001217"  [label="DDG: "];
"1001212" -> "1001226"  [label="DDG: "];
"1001209" -> "1001208"  [label="AST: "];
"1001209" -> "1001211"  [label="CFG: "];
"1001210" -> "1001209"  [label="AST: "];
"1001211" -> "1001209"  [label="AST: "];
"1001214" -> "1001209"  [label="CFG: "];
"1001208" -> "1001209"  [label="CFG: "];
"1001209" -> "1001208"  [label="DDG: "];
"1001209" -> "1001208"  [label="DDG: "];
"1001204" -> "1001209"  [label="DDG: "];
"1001217" -> "1001209"  [label="DDG: "];
"1001195" -> "1001209"  [label="DDG: "];
"1001183" -> "1001209"  [label="DDG: "];
"1001209" -> "1001217"  [label="DDG: "];
"1001209" -> "1001226"  [label="DDG: "];
"1001209" -> "1001226"  [label="DDG: "];
"1001204" -> "1001194"  [label="AST: "];
"1001204" -> "1001205"  [label="CFG: "];
"1001205" -> "1001204"  [label="AST: "];
"1001200" -> "1001204"  [label="CFG: "];
"1001204" -> "1001244"  [label="DDG: "];
"1001195" -> "1001204"  [label="DDG: "];
"1001195" -> "1001194"  [label="AST: "];
"1001195" -> "1001197"  [label="CFG: "];
"1001196" -> "1001195"  [label="AST: "];
"1001197" -> "1001195"  [label="AST: "];
"1001200" -> "1001195"  [label="CFG: "];
"1001195" -> "1001244"  [label="DDG: "];
"1001195" -> "1001244"  [label="DDG: "];
"1001183" -> "1001195"  [label="DDG: "];
"1001183" -> "1001063"  [label="AST: "];
"1001183" -> "1001185"  [label="CFG: "];
"1001184" -> "1001183"  [label="AST: "];
"1001185" -> "1001183"  [label="AST: "];
"1001196" -> "1001183"  [label="CFG: "];
"1001183" -> "1001244"  [label="DDG: "];
"1001185" -> "1001183"  [label="DDG: "];
"1001185" -> "1001187"  [label="CFG: "];
"1001186" -> "1001185"  [label="AST: "];
"1001187" -> "1001185"  [label="AST: "];
"1001185" -> "1001244"  [label="DDG: "];
"1001217" -> "1001207"  [label="AST: "];
"1001217" -> "1001218"  [label="CFG: "];
"1001218" -> "1001217"  [label="AST: "];
"1001210" -> "1001217"  [label="CFG: "];
"1001208" -> "1001207"  [label="AST: "];
"1001218" -> "1001208"  [label="CFG: "];
"1001222" -> "1001208"  [label="CFG: "];
"1001208" -> "1001244"  [label="DDG: "];
"1001208" -> "1001244"  [label="DDG: "];
"1001208" -> "1001244"  [label="DDG: "];
"1001226" -> "1001224"  [label="AST: "];
"1001226" -> "1001228"  [label="CFG: "];
"1001227" -> "1001226"  [label="AST: "];
"1001228" -> "1001226"  [label="AST: "];
"1001224" -> "1001226"  [label="CFG: "];
"1001226" -> "1001244"  [label="DDG: "];
"1001226" -> "1001224"  [label="DDG: "];
"1001226" -> "1001224"  [label="DDG: "];
"1001226" -> "1001221"  [label="DDG: "];
"1001224" -> "1001221"  [label="AST: "];
"1001225" -> "1001224"  [label="AST: "];
"1001229" -> "1001224"  [label="CFG: "];
"1001224" -> "1001244"  [label="DDG: "];
"1001224" -> "1001221"  [label="DDG: "];
"1001221" -> "1001220"  [label="AST: "];
"1001221" -> "1001229"  [label="CFG: "];
"1001222" -> "1001221"  [label="AST: "];
"1001223" -> "1001221"  [label="AST: "];
"1001229" -> "1001221"  [label="AST: "];
"1001231" -> "1001221"  [label="CFG: "];
"1001221" -> "1001244"  [label="DDG: "];
"1001221" -> "1001244"  [label="DDG: "];
"1001221" -> "1001244"  [label="DDG: "];
"1001221" -> "1001220"  [label="DDG: "];
"1001221" -> "1001220"  [label="DDG: "];
"1001221" -> "1001220"  [label="DDG: "];
"1001221" -> "1001220"  [label="DDG: "];
"1000963" -> "1001221"  [label="DDG: "];
"1000287" -> "1001221"  [label="DDG: "];
"1000509" -> "1001221"  [label="DDG: "];
"1000574" -> "1001221"  [label="DDG: "];
"1000476" -> "1001221"  [label="DDG: "];
"1000603" -> "1001221"  [label="DDG: "];
"1000117" -> "1001221"  [label="DDG: "];
"1001220" -> "1001219"  [label="AST: "];
"1001220" -> "1001230"  [label="CFG: "];
"1001230" -> "1001220"  [label="AST: "];
"1001233" -> "1001220"  [label="CFG: "];
"1001236" -> "1001220"  [label="CFG: "];
"1001220" -> "1001244"  [label="DDG: "];
"1001220" -> "1001244"  [label="DDG: "];
"1001220" -> "1001244"  [label="DDG: "];
"1001230" -> "1001220"  [label="DDG: "];
}
