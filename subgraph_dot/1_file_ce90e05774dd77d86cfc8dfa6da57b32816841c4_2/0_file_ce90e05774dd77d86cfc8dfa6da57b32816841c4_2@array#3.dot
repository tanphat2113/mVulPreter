digraph "0_file_ce90e05774dd77d86cfc8dfa6da57b32816841c4_2@array" {
"1000996" [label="(Call,(const char *)&nbuf[doff + 0x7c])"];
"1000992" [label="(Call,file_printable(sbuf, sizeof(sbuf),\n \t\t\t    (const char *)&nbuf[doff + 0x7c]))"];
"1000989" [label="(Call,file_printf(ms, \", from '%.31s'\",\n \t\t\t    file_printable(sbuf, sizeof(sbuf),\n \t\t\t    (const char *)&nbuf[doff + 0x7c])))"];
"1000988" [label="(Call,file_printf(ms, \", from '%.31s'\",\n \t\t\t    file_printable(sbuf, sizeof(sbuf),\n \t\t\t    (const char *)&nbuf[doff + 0x7c])) == -1)"];
"1001023" [label="(Call,file_printf(ms, \" (signal %u)\",\n \t\t\t    elf_getu32(swap, signo)))"];
"1001022" [label="(Call,file_printf(ms, \" (signal %u)\",\n \t\t\t    elf_getu32(swap, signo)) == -1)"];
"1000963" [label="(Call,file_printf(ms, \", %s-style\", os_style_names[os_style]))"];
"1000509" [label="(Call,file_printf(ms, \"%02x\", desc[i]))"];
"1000117" [label="(MethodParameterIn,struct magic_set *ms)"];
"1001030" [label="(Literal,1)"];
"1000993" [label="(Identifier,sbuf)"];
"1000603" [label="(Call,file_printf(ms, \"%s%s\", did++ ? \",\" : \"\",\n \t\t\t    pax[i]))"];
"1001021" [label="(ControlStructure,if (file_printf(ms, \" (signal %u)\",\n \t\t\t    elf_getu32(swap, signo)) == -1))"];
"1000992" [label="(Call,file_printable(sbuf, sizeof(sbuf),\n \t\t\t    (const char *)&nbuf[doff + 0x7c]))"];
"1000988" [label="(Call,file_printf(ms, \", from '%.31s'\",\n \t\t\t    file_printable(sbuf, sizeof(sbuf),\n \t\t\t    (const char *)&nbuf[doff + 0x7c])) == -1)"];
"1000476" [label="(Call,file_printf(ms, \", BuildID[%s]=\", descsz == 16 ? \"md5/uuid\" :\n\t\t\"sha1\"))"];
"1001026" [label="(Call,elf_getu32(swap, signo))"];
"1001022" [label="(Call,file_printf(ms, \" (signal %u)\",\n \t\t\t    elf_getu32(swap, signo)) == -1)"];
"1001032" [label="(Identifier,size)"];
"1001023" [label="(Call,file_printf(ms, \" (signal %u)\",\n \t\t\t    elf_getu32(swap, signo)))"];
"1001025" [label="(Literal,\" (signal %u)\")"];
"1001024" [label="(Identifier,ms)"];
"1000989" [label="(Call,file_printf(ms, \", from '%.31s'\",\n \t\t\t    file_printable(sbuf, sizeof(sbuf),\n \t\t\t    (const char *)&nbuf[doff + 0x7c])))"];
"1001005" [label="(Literal,1)"];
"1000996" [label="(Call,(const char *)&nbuf[doff + 0x7c])"];
"1001035" [label="(Identifier,flags)"];
"1001029" [label="(Call,-1)"];
"1000574" [label="(Call,file_printf(ms, \", PaX: \"))"];
"1001004" [label="(Call,-1)"];
"1000990" [label="(Identifier,ms)"];
"1000987" [label="(ControlStructure,if (file_printf(ms, \", from '%.31s'\",\n \t\t\t    file_printable(sbuf, sizeof(sbuf),\n \t\t\t    (const char *)&nbuf[doff + 0x7c])) == -1))"];
"1001007" [label="(Identifier,size)"];
"1000287" [label="(Call,file_printf(ms, \", for SuSE %d.%d\", nbuf[doff], nbuf[doff + 1]))"];
"1000998" [label="(Call,&nbuf[doff + 0x7c])"];
"1000991" [label="(Literal,\", from '%.31s'\")"];
"1001244" [label="(MethodReturn,RET)"];
"1000994" [label="(Call,sizeof(sbuf))"];
"1000996" -> "1000992"  [label="AST: "];
"1000996" -> "1000998"  [label="CFG: "];
"1000997" -> "1000996"  [label="AST: "];
"1000998" -> "1000996"  [label="AST: "];
"1000992" -> "1000996"  [label="CFG: "];
"1000996" -> "1001244"  [label="DDG: "];
"1000996" -> "1000992"  [label="DDG: "];
"1000992" -> "1000989"  [label="AST: "];
"1000993" -> "1000992"  [label="AST: "];
"1000994" -> "1000992"  [label="AST: "];
"1000989" -> "1000992"  [label="CFG: "];
"1000992" -> "1001244"  [label="DDG: "];
"1000992" -> "1001244"  [label="DDG: "];
"1000992" -> "1000989"  [label="DDG: "];
"1000992" -> "1000989"  [label="DDG: "];
"1000989" -> "1000988"  [label="AST: "];
"1000990" -> "1000989"  [label="AST: "];
"1000991" -> "1000989"  [label="AST: "];
"1001005" -> "1000989"  [label="CFG: "];
"1000989" -> "1001244"  [label="DDG: "];
"1000989" -> "1001244"  [label="DDG: "];
"1000989" -> "1000988"  [label="DDG: "];
"1000989" -> "1000988"  [label="DDG: "];
"1000989" -> "1000988"  [label="DDG: "];
"1000963" -> "1000989"  [label="DDG: "];
"1000287" -> "1000989"  [label="DDG: "];
"1000509" -> "1000989"  [label="DDG: "];
"1000574" -> "1000989"  [label="DDG: "];
"1000476" -> "1000989"  [label="DDG: "];
"1000603" -> "1000989"  [label="DDG: "];
"1000117" -> "1000989"  [label="DDG: "];
"1000989" -> "1001023"  [label="DDG: "];
"1000988" -> "1000987"  [label="AST: "];
"1000988" -> "1001004"  [label="CFG: "];
"1001004" -> "1000988"  [label="AST: "];
"1001007" -> "1000988"  [label="CFG: "];
"1001009" -> "1000988"  [label="CFG: "];
"1000988" -> "1001244"  [label="DDG: "];
"1000988" -> "1001244"  [label="DDG: "];
"1000988" -> "1001244"  [label="DDG: "];
"1001004" -> "1000988"  [label="DDG: "];
"1001023" -> "1001022"  [label="AST: "];
"1001023" -> "1001026"  [label="CFG: "];
"1001024" -> "1001023"  [label="AST: "];
"1001025" -> "1001023"  [label="AST: "];
"1001026" -> "1001023"  [label="AST: "];
"1001030" -> "1001023"  [label="CFG: "];
"1001023" -> "1001244"  [label="DDG: "];
"1001023" -> "1001244"  [label="DDG: "];
"1001023" -> "1001022"  [label="DDG: "];
"1001023" -> "1001022"  [label="DDG: "];
"1001023" -> "1001022"  [label="DDG: "];
"1000117" -> "1001023"  [label="DDG: "];
"1001026" -> "1001023"  [label="DDG: "];
"1001026" -> "1001023"  [label="DDG: "];
"1001022" -> "1001021"  [label="AST: "];
"1001022" -> "1001029"  [label="CFG: "];
"1001029" -> "1001022"  [label="AST: "];
"1001032" -> "1001022"  [label="CFG: "];
"1001035" -> "1001022"  [label="CFG: "];
"1001022" -> "1001244"  [label="DDG: "];
"1001022" -> "1001244"  [label="DDG: "];
"1001022" -> "1001244"  [label="DDG: "];
"1001029" -> "1001022"  [label="DDG: "];
}
