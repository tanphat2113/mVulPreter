digraph "0_openssl_4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2_0@array" {
"1000603" [label="(Call,++s->rlayer.write_sequence[j--])"];
"1000449" [label="(Call,memcpy(aad, s->rlayer.write_sequence, 8))"];
"1000497" [label="(Call,mb_param.inp = aad)"];
"1000602" [label="(Call,(++s->rlayer.write_sequence[j--]) == 0)"];
"1000598" [label="(Call,j >= 0 && (++s->rlayer.write_sequence[j--]) == 0)"];
"1000388" [label="(Block,)"];
"1000598" [label="(Call,j >= 0 && (++s->rlayer.write_sequence[j--]) == 0)"];
"1000599" [label="(Call,j >= 0)"];
"1000597" [label="(ControlStructure,while (j >= 0 && (++s->rlayer.write_sequence[j--]) == 0))"];
"1000581" [label="(Call,s->rlayer.write_sequence[7] < mb_param.interleave)"];
"1000980" [label="(MethodReturn,int)"];
"1000604" [label="(Call,s->rlayer.write_sequence[j--])"];
"1000457" [label="(Call,aad[8] = type)"];
"1000615" [label="(Identifier,wb)"];
"1000501" [label="(Identifier,aad)"];
"1000498" [label="(Call,mb_param.inp)"];
"1000487" [label="(Call,aad[12] = 0)"];
"1000473" [label="(Call,aad[10] = (unsigned char)(s->version))"];
"1000497" [label="(Call,mb_param.inp = aad)"];
"1000482" [label="(Call,aad[11] = 0)"];
"1000456" [label="(Literal,8)"];
"1000450" [label="(Identifier,aad)"];
"1000504" [label="(Identifier,mb_param)"];
"1000612" [label="(Literal,0)"];
"1000462" [label="(Call,aad[9] = (unsigned char)(s->version >> 8))"];
"1000602" [label="(Call,(++s->rlayer.write_sequence[j--]) == 0)"];
"1000451" [label="(Call,s->rlayer.write_sequence)"];
"1000449" [label="(Call,memcpy(aad, s->rlayer.write_sequence, 8))"];
"1000459" [label="(Identifier,aad)"];
"1000603" [label="(Call,++s->rlayer.write_sequence[j--])"];
"1000603" -> "1000602"  [label="AST: "];
"1000603" -> "1000604"  [label="CFG: "];
"1000604" -> "1000603"  [label="AST: "];
"1000612" -> "1000603"  [label="CFG: "];
"1000603" -> "1000980"  [label="DDG: s->rlayer.write_sequence[j--]"];
"1000603" -> "1000449"  [label="DDG: s->rlayer.write_sequence[j--]"];
"1000603" -> "1000602"  [label="DDG: s->rlayer.write_sequence[j--]"];
"1000449" -> "1000388"  [label="AST: "];
"1000449" -> "1000456"  [label="CFG: "];
"1000450" -> "1000449"  [label="AST: "];
"1000451" -> "1000449"  [label="AST: "];
"1000456" -> "1000449"  [label="AST: "];
"1000459" -> "1000449"  [label="CFG: "];
"1000449" -> "1000980"  [label="DDG: memcpy(aad, s->rlayer.write_sequence, 8)"];
"1000449" -> "1000980"  [label="DDG: s->rlayer.write_sequence"];
"1000487" -> "1000449"  [label="DDG: aad[12]"];
"1000482" -> "1000449"  [label="DDG: aad[11]"];
"1000462" -> "1000449"  [label="DDG: aad[9]"];
"1000473" -> "1000449"  [label="DDG: aad[10]"];
"1000457" -> "1000449"  [label="DDG: aad[8]"];
"1000581" -> "1000449"  [label="DDG: s->rlayer.write_sequence[7]"];
"1000449" -> "1000497"  [label="DDG: aad"];
"1000497" -> "1000388"  [label="AST: "];
"1000497" -> "1000501"  [label="CFG: "];
"1000498" -> "1000497"  [label="AST: "];
"1000501" -> "1000497"  [label="AST: "];
"1000504" -> "1000497"  [label="CFG: "];
"1000497" -> "1000980"  [label="DDG: mb_param.inp"];
"1000497" -> "1000980"  [label="DDG: aad"];
"1000487" -> "1000497"  [label="DDG: aad[12]"];
"1000482" -> "1000497"  [label="DDG: aad[11]"];
"1000462" -> "1000497"  [label="DDG: aad[9]"];
"1000457" -> "1000497"  [label="DDG: aad[8]"];
"1000473" -> "1000497"  [label="DDG: aad[10]"];
"1000602" -> "1000598"  [label="AST: "];
"1000602" -> "1000612"  [label="CFG: "];
"1000612" -> "1000602"  [label="AST: "];
"1000598" -> "1000602"  [label="CFG: "];
"1000602" -> "1000598"  [label="DDG: 0"];
"1000598" -> "1000597"  [label="AST: "];
"1000598" -> "1000599"  [label="CFG: "];
"1000599" -> "1000598"  [label="AST: "];
"1000615" -> "1000598"  [label="CFG: "];
"1000598" -> "1000980"  [label="DDG: j >= 0"];
"1000598" -> "1000980"  [label="DDG: j >= 0 && (++s->rlayer.write_sequence[j--]) == 0"];
"1000598" -> "1000980"  [label="DDG: (++s->rlayer.write_sequence[j--]) == 0"];
"1000599" -> "1000598"  [label="DDG: j"];
"1000599" -> "1000598"  [label="DDG: 0"];
}
