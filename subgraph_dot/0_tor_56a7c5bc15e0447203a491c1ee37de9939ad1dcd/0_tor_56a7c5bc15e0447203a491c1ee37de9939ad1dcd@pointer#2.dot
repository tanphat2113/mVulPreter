digraph "0_tor_56a7c5bc15e0447203a491c1ee37de9939ad1dcd@pointer" {
"1000141" [label="(Call,relay_header_unpack(&rh, cell->payload))"];
"1000249" [label="(Call,connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint))"];
"1000248" [label="(Return,return connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint);)"];
"1000435" [label="(Call,(char*)(cell->payload + RELAY_HEADER_SIZE))"];
"1000434" [label="(Call,connection_write_to_buf((char*)(cell->payload + RELAY_HEADER_SIZE),\n                              rh.length, TO_CONN(conn)))"];
"1000437" [label="(Call,cell->payload + RELAY_HEADER_SIZE)"];
"1000464" [label="(Call,get_uint8(cell->payload+RELAY_HEADER_SIZE))"];
"1000456" [label="(Call,reason = rh.length > 0 ?\n        get_uint8(cell->payload+RELAY_HEADER_SIZE) : END_STREAM_REASON_MISC)"];
"1000478" [label="(Call,stream_end_reason_to_string(reason))"];
"1000475" [label="(Call,log_info(domain,\"end cell (%s) dropped, unknown stream.\",\n                 stream_end_reason_to_string(reason)))"];
"1000524" [label="(Call,reason | END_STREAM_REASON_FLAG_REMOTE)"];
"1000520" [label="(Call,conn->end_reason = reason | END_STREAM_REASON_FLAG_REMOTE)"];
"1000458" [label="(Call,rh.length > 0 ?\n        get_uint8(cell->payload+RELAY_HEADER_SIZE) : END_STREAM_REASON_MISC)"];
"1000465" [label="(Call,cell->payload+RELAY_HEADER_SIZE)"];
"1000666" [label="(Call,(const uint8_t*)cell->payload)"];
"1000659" [label="(Call,extended_cell_parse(&extended_cell, rh.command,\n                        (const uint8_t*)cell->payload+RELAY_HEADER_SIZE,\n                        rh.length))"];
"1000658" [label="(Call,extended_cell_parse(&extended_cell, rh.command,\n                        (const uint8_t*)cell->payload+RELAY_HEADER_SIZE,\n                        rh.length)<0)"];
"1000665" [label="(Call,(const uint8_t*)cell->payload+RELAY_HEADER_SIZE)"];
"1000763" [label="(Call,get_uint8(cell->payload + RELAY_HEADER_SIZE))"];
"1000761" [label="(Call,trunc_reason = get_uint8(cell->payload + RELAY_HEADER_SIZE))"];
"1000774" [label="(Call,channel_send_destroy(circ->n_circ_id, circ->n_chan,\n                             trunc_reason))"];
"1000764" [label="(Call,cell->payload + RELAY_HEADER_SIZE)"];
"1000823" [label="(Call,get_uint8(cell->payload + RELAY_HEADER_SIZE))"];
"1000819" [label="(Call,circuit_truncated(TO_ORIGIN_CIRCUIT(circ), layer_hint,\n                        get_uint8(cell->payload + RELAY_HEADER_SIZE)))"];
"1000824" [label="(Call,cell->payload + RELAY_HEADER_SIZE)"];
"1001039" [label="(Call,rend_process_relay_cell(circ, layer_hint,\n                              rh.command, rh.length,\n                              cell->payload+RELAY_HEADER_SIZE))"];
"1001048" [label="(Call,cell->payload+RELAY_HEADER_SIZE)"];
"1000761" [label="(Call,trunc_reason = get_uint8(cell->payload + RELAY_HEADER_SIZE))"];
"1000662" [label="(Call,rh.command)"];
"1000470" [label="(Identifier,END_STREAM_REASON_MISC)"];
"1000763" [label="(Call,get_uint8(cell->payload + RELAY_HEADER_SIZE))"];
"1001039" [label="(Call,rend_process_relay_cell(circ, layer_hint,\n                              rh.command, rh.length,\n                              cell->payload+RELAY_HEADER_SIZE))"];
"1000478" [label="(Call,stream_end_reason_to_string(reason))"];
"1000141" [label="(Call,relay_header_unpack(&rh, cell->payload))"];
"1000437" [label="(Call,cell->payload + RELAY_HEADER_SIZE)"];
"1000775" [label="(Call,circ->n_circ_id)"];
"1000466" [label="(Call,cell->payload)"];
"1000252" [label="(Identifier,cell)"];
"1000764" [label="(Call,cell->payload + RELAY_HEADER_SIZE)"];
"1000464" [label="(Call,get_uint8(cell->payload+RELAY_HEADER_SIZE))"];
"1000769" [label="(Call,circuit_clear_cell_queue(circ, circ->n_chan))"];
"1000774" [label="(Call,channel_send_destroy(circ->n_circ_id, circ->n_chan,\n                             trunc_reason))"];
"1000515" [label="(ControlStructure,if (!conn->end_reason))"];
"1000830" [label="(Literal,0)"];
"1000445" [label="(Call,TO_CONN(conn))"];
"1000686" [label="(Identifier,reason)"];
"1000144" [label="(Call,cell->payload)"];
"1000137" [label="(Call,tor_assert(cell))"];
"1000665" [label="(Call,(const uint8_t*)cell->payload+RELAY_HEADER_SIZE)"];
"1000441" [label="(Identifier,RELAY_HEADER_SIZE)"];
"1000819" [label="(Call,circuit_truncated(TO_ORIGIN_CIRCUIT(circ), layer_hint,\n                        get_uint8(cell->payload + RELAY_HEADER_SIZE)))"];
"1000473" [label="(Identifier,conn)"];
"1000820" [label="(Call,TO_ORIGIN_CIRCUIT(circ))"];
"1000520" [label="(Call,conn->end_reason = reason | END_STREAM_REASON_FLAG_REMOTE)"];
"1001064" [label="(MethodReturn,RET)"];
"1000824" [label="(Call,cell->payload + RELAY_HEADER_SIZE)"];
"1000476" [label="(Identifier,domain)"];
"1000457" [label="(Identifier,reason)"];
"1000438" [label="(Call,cell->payload)"];
"1000443" [label="(Identifier,rh)"];
"1000822" [label="(Identifier,layer_hint)"];
"1000465" [label="(Call,cell->payload+RELAY_HEADER_SIZE)"];
"1000469" [label="(Identifier,RELAY_HEADER_SIZE)"];
"1000675" [label="(Literal,0)"];
"1000435" [label="(Call,(char*)(cell->payload + RELAY_HEADER_SIZE))"];
"1000255" [label="(Identifier,layer_hint)"];
"1000770" [label="(Identifier,circ)"];
"1000119" [label="(Block,)"];
"1001048" [label="(Call,cell->payload+RELAY_HEADER_SIZE)"];
"1000434" [label="(Call,connection_write_to_buf((char*)(cell->payload + RELAY_HEADER_SIZE),\n                              rh.length, TO_CONN(conn)))"];
"1000248" [label="(Return,return connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint);)"];
"1001040" [label="(Identifier,circ)"];
"1000260" [label="(Block,)"];
"1000678" [label="(Identifier,LD_PROTOCOL)"];
"1000659" [label="(Call,extended_cell_parse(&extended_cell, rh.command,\n                        (const uint8_t*)cell->payload+RELAY_HEADER_SIZE,\n                        rh.length))"];
"1000477" [label="(Literal,\"end cell (%s) dropped, unknown stream.\")"];
"1000783" [label="(Identifier,circ)"];
"1000658" [label="(Call,extended_cell_parse(&extended_cell, rh.command,\n                        (const uint8_t*)cell->payload+RELAY_HEADER_SIZE,\n                        rh.length)<0)"];
"1000475" [label="(Call,log_info(domain,\"end cell (%s) dropped, unknown stream.\",\n                 stream_end_reason_to_string(reason)))"];
"1000765" [label="(Call,cell->payload)"];
"1000825" [label="(Call,cell->payload)"];
"1000810" [label="(Call,!layer_hint)"];
"1000526" [label="(Identifier,END_STREAM_REASON_FLAG_REMOTE)"];
"1001052" [label="(Identifier,RELAY_HEADER_SIZE)"];
"1000160" [label="(Call,rh.length > RELAY_PAYLOAD_SIZE)"];
"1000116" [label="(MethodParameterIn,circuit_t *circ)"];
"1001054" [label="(Literal,0)"];
"1001049" [label="(Call,cell->payload)"];
"1000479" [label="(Identifier,reason)"];
"1000249" [label="(Call,connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint))"];
"1000671" [label="(Identifier,RELAY_HEADER_SIZE)"];
"1001041" [label="(Identifier,layer_hint)"];
"1000673" [label="(Identifier,rh)"];
"1000768" [label="(Identifier,RELAY_HEADER_SIZE)"];
"1000149" [label="(Call,log_debug(domain, \"Now seen %d relay cells here (command %d, stream %d).\",\n            num_seen, rh.command, rh.stream_id))"];
"1001042" [label="(Call,rh.command)"];
"1000142" [label="(Call,&rh)"];
"1000456" [label="(Call,reason = rh.length > 0 ?\n        get_uint8(cell->payload+RELAY_HEADER_SIZE) : END_STREAM_REASON_MISC)"];
"1000474" [label="(Block,)"];
"1000828" [label="(Identifier,RELAY_HEADER_SIZE)"];
"1000668" [label="(Call,cell->payload)"];
"1000531" [label="(Identifier,conn)"];
"1000759" [label="(Block,)"];
"1001045" [label="(Call,rh.length)"];
"1000148" [label="(Identifier,num_seen)"];
"1000458" [label="(Call,rh.length > 0 ?\n        get_uint8(cell->payload+RELAY_HEADER_SIZE) : END_STREAM_REASON_MISC)"];
"1000762" [label="(Identifier,trunc_reason)"];
"1000442" [label="(Call,rh.length)"];
"1000139" [label="(Call,tor_assert(circ))"];
"1000481" [label="(Literal,0)"];
"1000525" [label="(Identifier,reason)"];
"1000250" [label="(Call,&rh)"];
"1000237" [label="(Call,rh.command == RELAY_COMMAND_DATA)"];
"1000118" [label="(MethodParameterIn,crypt_path_t *layer_hint)"];
"1000778" [label="(Call,circ->n_chan)"];
"1000672" [label="(Call,rh.length)"];
"1000521" [label="(Call,conn->end_reason)"];
"1000205" [label="(Call,conn && !connection_state_is_open(TO_CONN(conn)))"];
"1000666" [label="(Call,(const uint8_t*)cell->payload)"];
"1000253" [label="(Identifier,circ)"];
"1000117" [label="(MethodParameterIn,edge_connection_t *conn)"];
"1000524" [label="(Call,reason | END_STREAM_REASON_FLAG_REMOTE)"];
"1000660" [label="(Call,&extended_cell)"];
"1000254" [label="(Identifier,conn)"];
"1000247" [label="(Block,)"];
"1000823" [label="(Call,get_uint8(cell->payload + RELAY_HEADER_SIZE))"];
"1000115" [label="(MethodParameterIn,cell_t *cell)"];
"1000657" [label="(ControlStructure,if (extended_cell_parse(&extended_cell, rh.command,\n                        (const uint8_t*)cell->payload+RELAY_HEADER_SIZE,\n                        rh.length)<0))"];
"1000781" [label="(Identifier,trunc_reason)"];
"1000459" [label="(Call,rh.length > 0)"];
"1000449" [label="(Identifier,optimistic_data)"];
"1000141" -> "1000119"  [label="AST: "];
"1000141" -> "1000144"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000144" -> "1000141"  [label="AST: "];
"1000148" -> "1000141"  [label="CFG: "];
"1000141" -> "1001064"  [label="DDG: "];
"1000141" -> "1001064"  [label="DDG: "];
"1000141" -> "1001064"  [label="DDG: "];
"1000141" -> "1000249"  [label="DDG: "];
"1000141" -> "1000435"  [label="DDG: "];
"1000141" -> "1000437"  [label="DDG: "];
"1000141" -> "1000464"  [label="DDG: "];
"1000141" -> "1000465"  [label="DDG: "];
"1000141" -> "1000666"  [label="DDG: "];
"1000141" -> "1000763"  [label="DDG: "];
"1000141" -> "1000764"  [label="DDG: "];
"1000141" -> "1000823"  [label="DDG: "];
"1000141" -> "1000824"  [label="DDG: "];
"1000141" -> "1001039"  [label="DDG: "];
"1000141" -> "1001048"  [label="DDG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000249" -> "1000255"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000252" -> "1000249"  [label="AST: "];
"1000253" -> "1000249"  [label="AST: "];
"1000254" -> "1000249"  [label="AST: "];
"1000255" -> "1000249"  [label="AST: "];
"1000248" -> "1000249"  [label="CFG: "];
"1000249" -> "1001064"  [label="DDG: "];
"1000249" -> "1001064"  [label="DDG: "];
"1000249" -> "1001064"  [label="DDG: "];
"1000249" -> "1001064"  [label="DDG: "];
"1000249" -> "1001064"  [label="DDG: "];
"1000249" -> "1001064"  [label="DDG: "];
"1000249" -> "1000248"  [label="DDG: "];
"1000137" -> "1000249"  [label="DDG: "];
"1000115" -> "1000249"  [label="DDG: "];
"1000139" -> "1000249"  [label="DDG: "];
"1000116" -> "1000249"  [label="DDG: "];
"1000205" -> "1000249"  [label="DDG: "];
"1000117" -> "1000249"  [label="DDG: "];
"1000118" -> "1000249"  [label="DDG: "];
"1000248" -> "1000247"  [label="AST: "];
"1001064" -> "1000248"  [label="CFG: "];
"1000248" -> "1001064"  [label="DDG: "];
"1000435" -> "1000434"  [label="AST: "];
"1000435" -> "1000437"  [label="CFG: "];
"1000436" -> "1000435"  [label="AST: "];
"1000437" -> "1000435"  [label="AST: "];
"1000443" -> "1000435"  [label="CFG: "];
"1000435" -> "1001064"  [label="DDG: "];
"1000435" -> "1000434"  [label="DDG: "];
"1000434" -> "1000260"  [label="AST: "];
"1000434" -> "1000445"  [label="CFG: "];
"1000442" -> "1000434"  [label="AST: "];
"1000445" -> "1000434"  [label="AST: "];
"1000449" -> "1000434"  [label="CFG: "];
"1000434" -> "1001064"  [label="DDG: "];
"1000434" -> "1001064"  [label="DDG: "];
"1000434" -> "1001064"  [label="DDG: "];
"1000434" -> "1001064"  [label="DDG: "];
"1000160" -> "1000434"  [label="DDG: "];
"1000445" -> "1000434"  [label="DDG: "];
"1000437" -> "1000441"  [label="CFG: "];
"1000438" -> "1000437"  [label="AST: "];
"1000441" -> "1000437"  [label="AST: "];
"1000437" -> "1001064"  [label="DDG: "];
"1000437" -> "1001064"  [label="DDG: "];
"1000464" -> "1000458"  [label="AST: "];
"1000464" -> "1000465"  [label="CFG: "];
"1000465" -> "1000464"  [label="AST: "];
"1000458" -> "1000464"  [label="CFG: "];
"1000464" -> "1001064"  [label="DDG: "];
"1000464" -> "1000456"  [label="DDG: "];
"1000464" -> "1000458"  [label="DDG: "];
"1000456" -> "1000260"  [label="AST: "];
"1000456" -> "1000458"  [label="CFG: "];
"1000457" -> "1000456"  [label="AST: "];
"1000458" -> "1000456"  [label="AST: "];
"1000473" -> "1000456"  [label="CFG: "];
"1000456" -> "1001064"  [label="DDG: "];
"1000456" -> "1001064"  [label="DDG: "];
"1000456" -> "1000478"  [label="DDG: "];
"1000456" -> "1000524"  [label="DDG: "];
"1000478" -> "1000475"  [label="AST: "];
"1000478" -> "1000479"  [label="CFG: "];
"1000479" -> "1000478"  [label="AST: "];
"1000475" -> "1000478"  [label="CFG: "];
"1000478" -> "1001064"  [label="DDG: "];
"1000478" -> "1000475"  [label="DDG: "];
"1000475" -> "1000474"  [label="AST: "];
"1000476" -> "1000475"  [label="AST: "];
"1000477" -> "1000475"  [label="AST: "];
"1000481" -> "1000475"  [label="CFG: "];
"1000475" -> "1001064"  [label="DDG: "];
"1000475" -> "1001064"  [label="DDG: "];
"1000475" -> "1001064"  [label="DDG: "];
"1000149" -> "1000475"  [label="DDG: "];
"1000524" -> "1000520"  [label="AST: "];
"1000524" -> "1000526"  [label="CFG: "];
"1000525" -> "1000524"  [label="AST: "];
"1000526" -> "1000524"  [label="AST: "];
"1000520" -> "1000524"  [label="CFG: "];
"1000524" -> "1001064"  [label="DDG: "];
"1000524" -> "1001064"  [label="DDG: "];
"1000524" -> "1000520"  [label="DDG: "];
"1000524" -> "1000520"  [label="DDG: "];
"1000520" -> "1000515"  [label="AST: "];
"1000521" -> "1000520"  [label="AST: "];
"1000531" -> "1000520"  [label="CFG: "];
"1000520" -> "1001064"  [label="DDG: "];
"1000520" -> "1001064"  [label="DDG: "];
"1000458" -> "1000470"  [label="CFG: "];
"1000459" -> "1000458"  [label="AST: "];
"1000470" -> "1000458"  [label="AST: "];
"1000458" -> "1001064"  [label="DDG: "];
"1000458" -> "1001064"  [label="DDG: "];
"1000458" -> "1001064"  [label="DDG: "];
"1000465" -> "1000469"  [label="CFG: "];
"1000466" -> "1000465"  [label="AST: "];
"1000469" -> "1000465"  [label="AST: "];
"1000465" -> "1001064"  [label="DDG: "];
"1000465" -> "1001064"  [label="DDG: "];
"1000666" -> "1000665"  [label="AST: "];
"1000666" -> "1000668"  [label="CFG: "];
"1000667" -> "1000666"  [label="AST: "];
"1000668" -> "1000666"  [label="AST: "];
"1000671" -> "1000666"  [label="CFG: "];
"1000666" -> "1001064"  [label="DDG: "];
"1000666" -> "1000659"  [label="DDG: "];
"1000666" -> "1000665"  [label="DDG: "];
"1000659" -> "1000658"  [label="AST: "];
"1000659" -> "1000672"  [label="CFG: "];
"1000660" -> "1000659"  [label="AST: "];
"1000662" -> "1000659"  [label="AST: "];
"1000665" -> "1000659"  [label="AST: "];
"1000672" -> "1000659"  [label="AST: "];
"1000675" -> "1000659"  [label="CFG: "];
"1000659" -> "1001064"  [label="DDG: "];
"1000659" -> "1001064"  [label="DDG: "];
"1000659" -> "1001064"  [label="DDG: "];
"1000659" -> "1001064"  [label="DDG: "];
"1000659" -> "1000658"  [label="DDG: "];
"1000659" -> "1000658"  [label="DDG: "];
"1000659" -> "1000658"  [label="DDG: "];
"1000659" -> "1000658"  [label="DDG: "];
"1000237" -> "1000659"  [label="DDG: "];
"1000149" -> "1000659"  [label="DDG: "];
"1000160" -> "1000659"  [label="DDG: "];
"1000658" -> "1000657"  [label="AST: "];
"1000658" -> "1000675"  [label="CFG: "];
"1000675" -> "1000658"  [label="AST: "];
"1000678" -> "1000658"  [label="CFG: "];
"1000686" -> "1000658"  [label="CFG: "];
"1000658" -> "1001064"  [label="DDG: "];
"1000658" -> "1001064"  [label="DDG: "];
"1000665" -> "1000671"  [label="CFG: "];
"1000671" -> "1000665"  [label="AST: "];
"1000673" -> "1000665"  [label="CFG: "];
"1000665" -> "1001064"  [label="DDG: "];
"1000665" -> "1001064"  [label="DDG: "];
"1000763" -> "1000761"  [label="AST: "];
"1000763" -> "1000764"  [label="CFG: "];
"1000764" -> "1000763"  [label="AST: "];
"1000761" -> "1000763"  [label="CFG: "];
"1000763" -> "1001064"  [label="DDG: "];
"1000763" -> "1000761"  [label="DDG: "];
"1000761" -> "1000759"  [label="AST: "];
"1000762" -> "1000761"  [label="AST: "];
"1000770" -> "1000761"  [label="CFG: "];
"1000761" -> "1001064"  [label="DDG: "];
"1000761" -> "1000774"  [label="DDG: "];
"1000774" -> "1000759"  [label="AST: "];
"1000774" -> "1000781"  [label="CFG: "];
"1000775" -> "1000774"  [label="AST: "];
"1000778" -> "1000774"  [label="AST: "];
"1000781" -> "1000774"  [label="AST: "];
"1000783" -> "1000774"  [label="CFG: "];
"1000774" -> "1001064"  [label="DDG: "];
"1000774" -> "1001064"  [label="DDG: "];
"1000774" -> "1001064"  [label="DDG: "];
"1000774" -> "1001064"  [label="DDG: "];
"1000769" -> "1000774"  [label="DDG: "];
"1000764" -> "1000768"  [label="CFG: "];
"1000765" -> "1000764"  [label="AST: "];
"1000768" -> "1000764"  [label="AST: "];
"1000764" -> "1001064"  [label="DDG: "];
"1000764" -> "1001064"  [label="DDG: "];
"1000823" -> "1000819"  [label="AST: "];
"1000823" -> "1000824"  [label="CFG: "];
"1000824" -> "1000823"  [label="AST: "];
"1000819" -> "1000823"  [label="CFG: "];
"1000823" -> "1001064"  [label="DDG: "];
"1000823" -> "1000819"  [label="DDG: "];
"1000819" -> "1000260"  [label="AST: "];
"1000820" -> "1000819"  [label="AST: "];
"1000822" -> "1000819"  [label="AST: "];
"1000830" -> "1000819"  [label="CFG: "];
"1000819" -> "1001064"  [label="DDG: "];
"1000819" -> "1001064"  [label="DDG: "];
"1000819" -> "1001064"  [label="DDG: "];
"1000819" -> "1001064"  [label="DDG: "];
"1000820" -> "1000819"  [label="DDG: "];
"1000810" -> "1000819"  [label="DDG: "];
"1000118" -> "1000819"  [label="DDG: "];
"1000824" -> "1000828"  [label="CFG: "];
"1000825" -> "1000824"  [label="AST: "];
"1000828" -> "1000824"  [label="AST: "];
"1000824" -> "1001064"  [label="DDG: "];
"1000824" -> "1001064"  [label="DDG: "];
"1001039" -> "1000260"  [label="AST: "];
"1001039" -> "1001048"  [label="CFG: "];
"1001040" -> "1001039"  [label="AST: "];
"1001041" -> "1001039"  [label="AST: "];
"1001042" -> "1001039"  [label="AST: "];
"1001045" -> "1001039"  [label="AST: "];
"1001048" -> "1001039"  [label="AST: "];
"1001054" -> "1001039"  [label="CFG: "];
"1001039" -> "1001064"  [label="DDG: "];
"1001039" -> "1001064"  [label="DDG: "];
"1001039" -> "1001064"  [label="DDG: "];
"1001039" -> "1001064"  [label="DDG: "];
"1001039" -> "1001064"  [label="DDG: "];
"1001039" -> "1001064"  [label="DDG: "];
"1000139" -> "1001039"  [label="DDG: "];
"1000116" -> "1001039"  [label="DDG: "];
"1000118" -> "1001039"  [label="DDG: "];
"1000237" -> "1001039"  [label="DDG: "];
"1000149" -> "1001039"  [label="DDG: "];
"1000160" -> "1001039"  [label="DDG: "];
"1001048" -> "1001052"  [label="CFG: "];
"1001049" -> "1001048"  [label="AST: "];
"1001052" -> "1001048"  [label="AST: "];
"1001048" -> "1001064"  [label="DDG: "];
"1001048" -> "1001064"  [label="DDG: "];
}
