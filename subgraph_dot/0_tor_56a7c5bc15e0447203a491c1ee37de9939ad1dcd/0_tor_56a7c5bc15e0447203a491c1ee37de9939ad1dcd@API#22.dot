digraph "0_tor_56a7c5bc15e0447203a491c1ee37de9939ad1dcd@API" {
"1000139" [label="(Call,tor_assert(circ))"];
"1000116" [label="(MethodParameterIn,circuit_t *circ)"];
"1000249" [label="(Call,connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint))"];
"1000248" [label="(Return,return connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint);)"];
"1000292" [label="(Call,TO_ORIGIN_CIRCUIT(circ))"];
"1000338" [label="(Call,TO_OR_CIRCUIT(circ))"];
"1000346" [label="(Call,connection_exit_begin_conn(cell, circ))"];
"1000345" [label="(Return,return connection_exit_begin_conn(cell, circ);)"];
"1000399" [label="(Call,circuit_consider_sending_sendme(circ, layer_hint))"];
"1000637" [label="(Call,circuit_extend(cell, circ))"];
"1000636" [label="(Return,return circuit_extend(cell, circ);)"];
"1000688" [label="(Call,TO_ORIGIN_CIRCUIT(circ))"];
"1000687" [label="(Call,circuit_finish_handshake(TO_ORIGIN_CIRCUIT(circ),\n                                         &extended_cell.created_cell))"];
"1000684" [label="(Call,(reason = circuit_finish_handshake(TO_ORIGIN_CIRCUIT(circ),\n                                         &extended_cell.created_cell)) < 0)"];
"1000685" [label="(Call,reason = circuit_finish_handshake(TO_ORIGIN_CIRCUIT(circ),\n                                         &extended_cell.created_cell))"];
"1000699" [label="(Return,return reason;)"];
"1000706" [label="(Call,TO_ORIGIN_CIRCUIT(circ))"];
"1000705" [label="(Call,circuit_send_next_onion_skin(TO_ORIGIN_CIRCUIT(circ)))"];
"1000702" [label="(Call,(reason=circuit_send_next_onion_skin(TO_ORIGIN_CIRCUIT(circ)))<0)"];
"1000703" [label="(Call,reason=circuit_send_next_onion_skin(TO_ORIGIN_CIRCUIT(circ)))"];
"1000713" [label="(Return,return reason;)"];
"1000752" [label="(Call,circuit_set_state(circ, CIRCUIT_STATE_OPEN))"];
"1000769" [label="(Call,circuit_clear_cell_queue(circ, circ->n_chan))"];
"1000774" [label="(Call,channel_send_destroy(circ->n_circ_id, circ->n_chan,\n                             trunc_reason))"];
"1000782" [label="(Call,circuit_set_n_circid_chan(circ, 0, NULL))"];
"1000798" [label="(Call,relay_send_command_from_edge(0, circ, RELAY_COMMAND_TRUNCATED,\n                                     payload, sizeof(payload), NULL))"];
"1000820" [label="(Call,TO_ORIGIN_CIRCUIT(circ))"];
"1000819" [label="(Call,circuit_truncated(TO_ORIGIN_CIRCUIT(circ), layer_hint,\n                        get_uint8(cell->payload + RELAY_HEADER_SIZE)))"];
"1000884" [label="(Call,circuit_resume_edge_reading(circ, layer_hint))"];
"1000919" [label="(Call,circuit_resume_edge_reading(circ, layer_hint))"];
"1000948" [label="(Call,circuit_queue_streams_are_blocked(circ))"];
"1001010" [label="(Call,TO_OR_CIRCUIT(circ))"];
"1001008" [label="(Call,connection_exit_begin_resolve(cell, TO_OR_CIRCUIT(circ)))"];
"1001039" [label="(Call,rend_process_relay_cell(circ, layer_hint,\n                              rh.command, rh.length,\n                              cell->payload+RELAY_HEADER_SIZE))"];
"1000692" [label="(Identifier,extended_cell)"];
"1000761" [label="(Call,trunc_reason = get_uint8(cell->payload + RELAY_HEADER_SIZE))"];
"1000753" [label="(Identifier,circ)"];
"1001039" [label="(Call,rend_process_relay_cell(circ, layer_hint,\n                              rh.command, rh.length,\n                              cell->payload+RELAY_HEADER_SIZE))"];
"1000689" [label="(Identifier,circ)"];
"1000141" [label="(Call,relay_header_unpack(&rh, cell->payload))"];
"1001011" [label="(Identifier,circ)"];
"1000801" [label="(Identifier,RELAY_COMMAND_TRUNCATED)"];
"1000688" [label="(Call,TO_ORIGIN_CIRCUIT(circ))"];
"1000757" [label="(Identifier,circ)"];
"1000542" [label="(Block,)"];
"1000703" [label="(Call,reason=circuit_send_next_onion_skin(TO_ORIGIN_CIRCUIT(circ)))"];
"1000807" [label="(Literal,0)"];
"1001010" [label="(Call,TO_OR_CIRCUIT(circ))"];
"1000775" [label="(Call,circ->n_circ_id)"];
"1000252" [label="(Identifier,cell)"];
"1000346" [label="(Call,connection_exit_begin_conn(cell, circ))"];
"1000348" [label="(Identifier,circ)"];
"1000340" [label="(FieldIdentifier,p_chan)"];
"1000789" [label="(Block,)"];
"1000955" [label="(Identifier,conn)"];
"1000769" [label="(Call,circuit_clear_cell_queue(circ, circ->n_chan))"];
"1000399" [label="(Call,circuit_consider_sending_sendme(circ, layer_hint))"];
"1000774" [label="(Call,channel_send_destroy(circ->n_circ_id, circ->n_chan,\n                             trunc_reason))"];
"1000716" [label="(Literal,0)"];
"1000920" [label="(Identifier,circ)"];
"1000800" [label="(Identifier,circ)"];
"1000830" [label="(Literal,0)"];
"1000686" [label="(Identifier,reason)"];
"1000947" [label="(ControlStructure,if (circuit_queue_streams_are_blocked(circ)))"];
"1000137" [label="(Call,tor_assert(cell))"];
"1000704" [label="(Identifier,reason)"];
"1000952" [label="(Literal,0)"];
"1000819" [label="(Call,circuit_truncated(TO_ORIGIN_CIRCUIT(circ), layer_hint,\n                        get_uint8(cell->payload + RELAY_HEADER_SIZE)))"];
"1000143" [label="(Identifier,rh)"];
"1000820" [label="(Call,TO_ORIGIN_CIRCUIT(circ))"];
"1001064" [label="(MethodReturn,RET)"];
"1000337" [label="(Call,TO_OR_CIRCUIT(circ)->p_chan)"];
"1000713" [label="(Return,return reason;)"];
"1000822" [label="(Identifier,layer_hint)"];
"1000885" [label="(Identifier,circ)"];
"1000255" [label="(Identifier,layer_hint)"];
"1000770" [label="(Identifier,circ)"];
"1000754" [label="(Identifier,CIRCUIT_STATE_OPEN)"];
"1000119" [label="(Block,)"];
"1000706" [label="(Call,TO_ORIGIN_CIRCUIT(circ))"];
"1001048" [label="(Call,cell->payload+RELAY_HEADER_SIZE)"];
"1000776" [label="(Identifier,circ)"];
"1000690" [label="(Call,&extended_cell.created_cell)"];
"1000248" [label="(Return,return connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint);)"];
"1001040" [label="(Identifier,circ)"];
"1000260" [label="(Block,)"];
"1000771" [label="(Call,circ->n_chan)"];
"1000293" [label="(Identifier,circ)"];
"1000784" [label="(Literal,0)"];
"1000783" [label="(Identifier,circ)"];
"1000695" [label="(Block,)"];
"1000782" [label="(Call,circuit_set_n_circid_chan(circ, 0, NULL))"];
"1000707" [label="(Identifier,circ)"];
"1000752" [label="(Call,circuit_set_state(circ, CIRCUIT_STATE_OPEN))"];
"1001009" [label="(Identifier,cell)"];
"1000685" [label="(Call,reason = circuit_finish_handshake(TO_ORIGIN_CIRCUIT(circ),\n                                         &extended_cell.created_cell))"];
"1000683" [label="(ControlStructure,if ((reason = circuit_finish_handshake(TO_ORIGIN_CIRCUIT(circ),\n                                         &extended_cell.created_cell)) < 0))"];
"1000810" [label="(Call,!layer_hint)"];
"1000821" [label="(Identifier,circ)"];
"1000919" [label="(Call,circuit_resume_edge_reading(circ, layer_hint))"];
"1000884" [label="(Call,circuit_resume_edge_reading(circ, layer_hint))"];
"1000160" [label="(Call,rh.length > RELAY_PAYLOAD_SIZE)"];
"1000116" [label="(MethodParameterIn,circuit_t *circ)"];
"1001054" [label="(Literal,0)"];
"1000347" [label="(Identifier,cell)"];
"1000249" [label="(Call,connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint))"];
"1000802" [label="(Identifier,payload)"];
"1000345" [label="(Return,return connection_exit_begin_conn(cell, circ);)"];
"1001041" [label="(Identifier,layer_hint)"];
"1000921" [label="(Identifier,layer_hint)"];
"1000149" [label="(Call,log_debug(domain, \"Now seen %d relay cells here (command %d, stream %d).\",\n            num_seen, rh.command, rh.stream_id))"];
"1001042" [label="(Call,rh.command)"];
"1000401" [label="(Identifier,layer_hint)"];
"1000886" [label="(Identifier,layer_hint)"];
"1000759" [label="(Block,)"];
"1000702" [label="(Call,(reason=circuit_send_next_onion_skin(TO_ORIGIN_CIRCUIT(circ)))<0)"];
"1000714" [label="(Identifier,reason)"];
"1000709" [label="(Block,)"];
"1000639" [label="(Identifier,circ)"];
"1001045" [label="(Call,rh.length)"];
"1000701" [label="(ControlStructure,if ((reason=circuit_send_next_onion_skin(TO_ORIGIN_CIRCUIT(circ)))<0))"];
"1000856" [label="(Block,)"];
"1000787" [label="(Identifier,LD_EXIT)"];
"1001008" [label="(Call,connection_exit_begin_resolve(cell, TO_OR_CIRCUIT(circ)))"];
"1000404" [label="(Identifier,conn)"];
"1000697" [label="(Identifier,domain)"];
"1000923" [label="(Literal,0)"];
"1000139" [label="(Call,tor_assert(circ))"];
"1000294" [label="(FieldIdentifier,cpath)"];
"1000250" [label="(Call,&rh)"];
"1000888" [label="(Block,)"];
"1000711" [label="(Identifier,domain)"];
"1000237" [label="(Call,rh.command == RELAY_COMMAND_DATA)"];
"1000118" [label="(MethodParameterIn,crypt_path_t *layer_hint)"];
"1000805" [label="(Identifier,NULL)"];
"1000803" [label="(Call,sizeof(payload))"];
"1000778" [label="(Call,circ->n_chan)"];
"1000798" [label="(Call,relay_send_command_from_edge(0, circ, RELAY_COMMAND_TRUNCATED,\n                                     payload, sizeof(payload), NULL))"];
"1000636" [label="(Return,return circuit_extend(cell, circ);)"];
"1000694" [label="(Literal,0)"];
"1000948" [label="(Call,circuit_queue_streams_are_blocked(circ))"];
"1000140" [label="(Identifier,circ)"];
"1000205" [label="(Call,conn && !connection_state_is_open(TO_CONN(conn)))"];
"1000637" [label="(Call,circuit_extend(cell, circ))"];
"1000291" [label="(Call,TO_ORIGIN_CIRCUIT(circ)->cpath)"];
"1000700" [label="(Identifier,reason)"];
"1000687" [label="(Call,circuit_finish_handshake(TO_ORIGIN_CIRCUIT(circ),\n                                         &extended_cell.created_cell))"];
"1000253" [label="(Identifier,circ)"];
"1000117" [label="(MethodParameterIn,edge_connection_t *conn)"];
"1000791" [label="(Call,payload[0] = (char)END_CIRC_REASON_REQUESTED)"];
"1000799" [label="(Literal,0)"];
"1000339" [label="(Identifier,circ)"];
"1000785" [label="(Identifier,NULL)"];
"1000400" [label="(Identifier,circ)"];
"1000292" [label="(Call,TO_ORIGIN_CIRCUIT(circ))"];
"1000254" [label="(Identifier,conn)"];
"1000705" [label="(Call,circuit_send_next_onion_skin(TO_ORIGIN_CIRCUIT(circ)))"];
"1000247" [label="(Block,)"];
"1000823" [label="(Call,get_uint8(cell->payload + RELAY_HEADER_SIZE))"];
"1000115" [label="(MethodParameterIn,cell_t *cell)"];
"1000731" [label="(Block,)"];
"1000338" [label="(Call,TO_OR_CIRCUIT(circ))"];
"1000699" [label="(Return,return reason;)"];
"1000684" [label="(Call,(reason = circuit_finish_handshake(TO_ORIGIN_CIRCUIT(circ),\n                                         &extended_cell.created_cell)) < 0)"];
"1000781" [label="(Identifier,trunc_reason)"];
"1001013" [label="(Literal,0)"];
"1000949" [label="(Identifier,circ)"];
"1000638" [label="(Identifier,cell)"];
"1000708" [label="(Literal,0)"];
"1000139" -> "1000119"  [label="AST: "];
"1000139" -> "1000140"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000143" -> "1000139"  [label="CFG: "];
"1000139" -> "1001064"  [label="DDG: tor_assert(circ)"];
"1000139" -> "1001064"  [label="DDG: circ"];
"1000116" -> "1000139"  [label="DDG: circ"];
"1000139" -> "1000249"  [label="DDG: circ"];
"1000139" -> "1000292"  [label="DDG: circ"];
"1000139" -> "1000338"  [label="DDG: circ"];
"1000139" -> "1000346"  [label="DDG: circ"];
"1000139" -> "1000399"  [label="DDG: circ"];
"1000139" -> "1000637"  [label="DDG: circ"];
"1000139" -> "1000688"  [label="DDG: circ"];
"1000139" -> "1000752"  [label="DDG: circ"];
"1000139" -> "1000769"  [label="DDG: circ"];
"1000139" -> "1000798"  [label="DDG: circ"];
"1000139" -> "1000820"  [label="DDG: circ"];
"1000139" -> "1000884"  [label="DDG: circ"];
"1000139" -> "1000919"  [label="DDG: circ"];
"1000139" -> "1000948"  [label="DDG: circ"];
"1000139" -> "1001010"  [label="DDG: circ"];
"1000139" -> "1001039"  [label="DDG: circ"];
"1000116" -> "1000114"  [label="AST: "];
"1000116" -> "1001064"  [label="DDG: circ"];
"1000116" -> "1000249"  [label="DDG: circ"];
"1000116" -> "1000292"  [label="DDG: circ"];
"1000116" -> "1000338"  [label="DDG: circ"];
"1000116" -> "1000346"  [label="DDG: circ"];
"1000116" -> "1000399"  [label="DDG: circ"];
"1000116" -> "1000637"  [label="DDG: circ"];
"1000116" -> "1000688"  [label="DDG: circ"];
"1000116" -> "1000706"  [label="DDG: circ"];
"1000116" -> "1000752"  [label="DDG: circ"];
"1000116" -> "1000769"  [label="DDG: circ"];
"1000116" -> "1000782"  [label="DDG: circ"];
"1000116" -> "1000798"  [label="DDG: circ"];
"1000116" -> "1000820"  [label="DDG: circ"];
"1000116" -> "1000884"  [label="DDG: circ"];
"1000116" -> "1000919"  [label="DDG: circ"];
"1000116" -> "1000948"  [label="DDG: circ"];
"1000116" -> "1001010"  [label="DDG: circ"];
"1000116" -> "1001039"  [label="DDG: circ"];
"1000249" -> "1000248"  [label="AST: "];
"1000249" -> "1000255"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000252" -> "1000249"  [label="AST: "];
"1000253" -> "1000249"  [label="AST: "];
"1000254" -> "1000249"  [label="AST: "];
"1000255" -> "1000249"  [label="AST: "];
"1000248" -> "1000249"  [label="CFG: "];
"1000249" -> "1001064"  [label="DDG: circ"];
"1000249" -> "1001064"  [label="DDG: layer_hint"];
"1000249" -> "1001064"  [label="DDG: conn"];
"1000249" -> "1001064"  [label="DDG: cell"];
"1000249" -> "1001064"  [label="DDG: &rh"];
"1000249" -> "1001064"  [label="DDG: connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint)"];
"1000249" -> "1000248"  [label="DDG: connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint)"];
"1000141" -> "1000249"  [label="DDG: &rh"];
"1000137" -> "1000249"  [label="DDG: cell"];
"1000115" -> "1000249"  [label="DDG: cell"];
"1000205" -> "1000249"  [label="DDG: conn"];
"1000117" -> "1000249"  [label="DDG: conn"];
"1000118" -> "1000249"  [label="DDG: layer_hint"];
"1000248" -> "1000247"  [label="AST: "];
"1001064" -> "1000248"  [label="CFG: "];
"1000248" -> "1001064"  [label="DDG: <RET>"];
"1000292" -> "1000291"  [label="AST: "];
"1000292" -> "1000293"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000294" -> "1000292"  [label="CFG: "];
"1000292" -> "1001064"  [label="DDG: circ"];
"1000292" -> "1000338"  [label="DDG: circ"];
"1000292" -> "1000346"  [label="DDG: circ"];
"1000338" -> "1000337"  [label="AST: "];
"1000338" -> "1000339"  [label="CFG: "];
"1000339" -> "1000338"  [label="AST: "];
"1000340" -> "1000338"  [label="CFG: "];
"1000338" -> "1000346"  [label="DDG: circ"];
"1000346" -> "1000345"  [label="AST: "];
"1000346" -> "1000348"  [label="CFG: "];
"1000347" -> "1000346"  [label="AST: "];
"1000348" -> "1000346"  [label="AST: "];
"1000345" -> "1000346"  [label="CFG: "];
"1000346" -> "1001064"  [label="DDG: circ"];
"1000346" -> "1001064"  [label="DDG: cell"];
"1000346" -> "1001064"  [label="DDG: connection_exit_begin_conn(cell, circ)"];
"1000346" -> "1000345"  [label="DDG: connection_exit_begin_conn(cell, circ)"];
"1000137" -> "1000346"  [label="DDG: cell"];
"1000115" -> "1000346"  [label="DDG: cell"];
"1000345" -> "1000260"  [label="AST: "];
"1001064" -> "1000345"  [label="CFG: "];
"1000345" -> "1001064"  [label="DDG: <RET>"];
"1000399" -> "1000260"  [label="AST: "];
"1000399" -> "1000401"  [label="CFG: "];
"1000400" -> "1000399"  [label="AST: "];
"1000401" -> "1000399"  [label="AST: "];
"1000404" -> "1000399"  [label="CFG: "];
"1000399" -> "1001064"  [label="DDG: layer_hint"];
"1000399" -> "1001064"  [label="DDG: circ"];
"1000399" -> "1001064"  [label="DDG: circuit_consider_sending_sendme(circ, layer_hint)"];
"1000118" -> "1000399"  [label="DDG: layer_hint"];
"1000637" -> "1000636"  [label="AST: "];
"1000637" -> "1000639"  [label="CFG: "];
"1000638" -> "1000637"  [label="AST: "];
"1000639" -> "1000637"  [label="AST: "];
"1000636" -> "1000637"  [label="CFG: "];
"1000637" -> "1001064"  [label="DDG: cell"];
"1000637" -> "1001064"  [label="DDG: circ"];
"1000637" -> "1001064"  [label="DDG: circuit_extend(cell, circ)"];
"1000637" -> "1000636"  [label="DDG: circuit_extend(cell, circ)"];
"1000137" -> "1000637"  [label="DDG: cell"];
"1000115" -> "1000637"  [label="DDG: cell"];
"1000636" -> "1000542"  [label="AST: "];
"1001064" -> "1000636"  [label="CFG: "];
"1000636" -> "1001064"  [label="DDG: <RET>"];
"1000688" -> "1000687"  [label="AST: "];
"1000688" -> "1000689"  [label="CFG: "];
"1000689" -> "1000688"  [label="AST: "];
"1000692" -> "1000688"  [label="CFG: "];
"1000688" -> "1001064"  [label="DDG: circ"];
"1000688" -> "1000687"  [label="DDG: circ"];
"1000688" -> "1000706"  [label="DDG: circ"];
"1000687" -> "1000685"  [label="AST: "];
"1000687" -> "1000690"  [label="CFG: "];
"1000690" -> "1000687"  [label="AST: "];
"1000685" -> "1000687"  [label="CFG: "];
"1000687" -> "1001064"  [label="DDG: &extended_cell.created_cell"];
"1000687" -> "1001064"  [label="DDG: TO_ORIGIN_CIRCUIT(circ)"];
"1000687" -> "1000684"  [label="DDG: TO_ORIGIN_CIRCUIT(circ)"];
"1000687" -> "1000684"  [label="DDG: &extended_cell.created_cell"];
"1000687" -> "1000685"  [label="DDG: TO_ORIGIN_CIRCUIT(circ)"];
"1000687" -> "1000685"  [label="DDG: &extended_cell.created_cell"];
"1000684" -> "1000683"  [label="AST: "];
"1000684" -> "1000694"  [label="CFG: "];
"1000685" -> "1000684"  [label="AST: "];
"1000694" -> "1000684"  [label="AST: "];
"1000697" -> "1000684"  [label="CFG: "];
"1000704" -> "1000684"  [label="CFG: "];
"1000684" -> "1001064"  [label="DDG: (reason = circuit_finish_handshake(TO_ORIGIN_CIRCUIT(circ),\n                                         &extended_cell.created_cell)) < 0"];
"1000685" -> "1000684"  [label="DDG: reason"];
"1000686" -> "1000685"  [label="AST: "];
"1000694" -> "1000685"  [label="CFG: "];
"1000685" -> "1001064"  [label="DDG: circuit_finish_handshake(TO_ORIGIN_CIRCUIT(circ),\n                                         &extended_cell.created_cell)"];
"1000685" -> "1001064"  [label="DDG: reason"];
"1000685" -> "1000699"  [label="DDG: reason"];
"1000699" -> "1000695"  [label="AST: "];
"1000699" -> "1000700"  [label="CFG: "];
"1000700" -> "1000699"  [label="AST: "];
"1001064" -> "1000699"  [label="CFG: "];
"1000699" -> "1001064"  [label="DDG: <RET>"];
"1000700" -> "1000699"  [label="DDG: reason"];
"1000706" -> "1000705"  [label="AST: "];
"1000706" -> "1000707"  [label="CFG: "];
"1000707" -> "1000706"  [label="AST: "];
"1000705" -> "1000706"  [label="CFG: "];
"1000706" -> "1001064"  [label="DDG: circ"];
"1000706" -> "1000705"  [label="DDG: circ"];
"1000705" -> "1000703"  [label="AST: "];
"1000703" -> "1000705"  [label="CFG: "];
"1000705" -> "1001064"  [label="DDG: TO_ORIGIN_CIRCUIT(circ)"];
"1000705" -> "1000702"  [label="DDG: TO_ORIGIN_CIRCUIT(circ)"];
"1000705" -> "1000703"  [label="DDG: TO_ORIGIN_CIRCUIT(circ)"];
"1000702" -> "1000701"  [label="AST: "];
"1000702" -> "1000708"  [label="CFG: "];
"1000703" -> "1000702"  [label="AST: "];
"1000708" -> "1000702"  [label="AST: "];
"1000711" -> "1000702"  [label="CFG: "];
"1000716" -> "1000702"  [label="CFG: "];
"1000702" -> "1001064"  [label="DDG: (reason=circuit_send_next_onion_skin(TO_ORIGIN_CIRCUIT(circ)))<0"];
"1000703" -> "1000702"  [label="DDG: reason"];
"1000704" -> "1000703"  [label="AST: "];
"1000708" -> "1000703"  [label="CFG: "];
"1000703" -> "1001064"  [label="DDG: circuit_send_next_onion_skin(TO_ORIGIN_CIRCUIT(circ))"];
"1000703" -> "1001064"  [label="DDG: reason"];
"1000703" -> "1000713"  [label="DDG: reason"];
"1000713" -> "1000709"  [label="AST: "];
"1000713" -> "1000714"  [label="CFG: "];
"1000714" -> "1000713"  [label="AST: "];
"1001064" -> "1000713"  [label="CFG: "];
"1000713" -> "1001064"  [label="DDG: <RET>"];
"1000714" -> "1000713"  [label="DDG: reason"];
"1000752" -> "1000731"  [label="AST: "];
"1000752" -> "1000754"  [label="CFG: "];
"1000753" -> "1000752"  [label="AST: "];
"1000754" -> "1000752"  [label="AST: "];
"1000757" -> "1000752"  [label="CFG: "];
"1000752" -> "1001064"  [label="DDG: CIRCUIT_STATE_OPEN"];
"1000752" -> "1001064"  [label="DDG: circuit_set_state(circ, CIRCUIT_STATE_OPEN)"];
"1000752" -> "1000769"  [label="DDG: circ"];
"1000752" -> "1000798"  [label="DDG: circ"];
"1000769" -> "1000759"  [label="AST: "];
"1000769" -> "1000771"  [label="CFG: "];
"1000770" -> "1000769"  [label="AST: "];
"1000771" -> "1000769"  [label="AST: "];
"1000776" -> "1000769"  [label="CFG: "];
"1000769" -> "1001064"  [label="DDG: circuit_clear_cell_queue(circ, circ->n_chan)"];
"1000769" -> "1000774"  [label="DDG: circ->n_chan"];
"1000769" -> "1000782"  [label="DDG: circ"];
"1000774" -> "1000759"  [label="AST: "];
"1000774" -> "1000781"  [label="CFG: "];
"1000775" -> "1000774"  [label="AST: "];
"1000778" -> "1000774"  [label="AST: "];
"1000781" -> "1000774"  [label="AST: "];
"1000783" -> "1000774"  [label="CFG: "];
"1000774" -> "1001064"  [label="DDG: trunc_reason"];
"1000774" -> "1001064"  [label="DDG: channel_send_destroy(circ->n_circ_id, circ->n_chan,\n                             trunc_reason)"];
"1000774" -> "1001064"  [label="DDG: circ->n_chan"];
"1000774" -> "1001064"  [label="DDG: circ->n_circ_id"];
"1000761" -> "1000774"  [label="DDG: trunc_reason"];
"1000782" -> "1000759"  [label="AST: "];
"1000782" -> "1000785"  [label="CFG: "];
"1000783" -> "1000782"  [label="AST: "];
"1000784" -> "1000782"  [label="AST: "];
"1000785" -> "1000782"  [label="AST: "];
"1000787" -> "1000782"  [label="CFG: "];
"1000782" -> "1001064"  [label="DDG: circuit_set_n_circid_chan(circ, 0, NULL)"];
"1000782" -> "1000798"  [label="DDG: circ"];
"1000782" -> "1000798"  [label="DDG: NULL"];
"1000798" -> "1000789"  [label="AST: "];
"1000798" -> "1000805"  [label="CFG: "];
"1000799" -> "1000798"  [label="AST: "];
"1000800" -> "1000798"  [label="AST: "];
"1000801" -> "1000798"  [label="AST: "];
"1000802" -> "1000798"  [label="AST: "];
"1000803" -> "1000798"  [label="AST: "];
"1000805" -> "1000798"  [label="AST: "];
"1000807" -> "1000798"  [label="CFG: "];
"1000798" -> "1001064"  [label="DDG: NULL"];
"1000798" -> "1001064"  [label="DDG: payload"];
"1000798" -> "1001064"  [label="DDG: circ"];
"1000798" -> "1001064"  [label="DDG: relay_send_command_from_edge(0, circ, RELAY_COMMAND_TRUNCATED,\n                                     payload, sizeof(payload), NULL)"];
"1000798" -> "1001064"  [label="DDG: RELAY_COMMAND_TRUNCATED"];
"1000791" -> "1000798"  [label="DDG: payload[0]"];
"1000820" -> "1000819"  [label="AST: "];
"1000820" -> "1000821"  [label="CFG: "];
"1000821" -> "1000820"  [label="AST: "];
"1000822" -> "1000820"  [label="CFG: "];
"1000820" -> "1001064"  [label="DDG: circ"];
"1000820" -> "1000819"  [label="DDG: circ"];
"1000819" -> "1000260"  [label="AST: "];
"1000819" -> "1000823"  [label="CFG: "];
"1000822" -> "1000819"  [label="AST: "];
"1000823" -> "1000819"  [label="AST: "];
"1000830" -> "1000819"  [label="CFG: "];
"1000819" -> "1001064"  [label="DDG: TO_ORIGIN_CIRCUIT(circ)"];
"1000819" -> "1001064"  [label="DDG: get_uint8(cell->payload + RELAY_HEADER_SIZE)"];
"1000819" -> "1001064"  [label="DDG: circuit_truncated(TO_ORIGIN_CIRCUIT(circ), layer_hint,\n                        get_uint8(cell->payload + RELAY_HEADER_SIZE))"];
"1000819" -> "1001064"  [label="DDG: layer_hint"];
"1000810" -> "1000819"  [label="DDG: layer_hint"];
"1000118" -> "1000819"  [label="DDG: layer_hint"];
"1000823" -> "1000819"  [label="DDG: cell->payload + RELAY_HEADER_SIZE"];
"1000884" -> "1000856"  [label="AST: "];
"1000884" -> "1000886"  [label="CFG: "];
"1000885" -> "1000884"  [label="AST: "];
"1000886" -> "1000884"  [label="AST: "];
"1000923" -> "1000884"  [label="CFG: "];
"1000884" -> "1001064"  [label="DDG: circuit_resume_edge_reading(circ, layer_hint)"];
"1000884" -> "1001064"  [label="DDG: circ"];
"1000884" -> "1001064"  [label="DDG: layer_hint"];
"1000118" -> "1000884"  [label="DDG: layer_hint"];
"1000919" -> "1000888"  [label="AST: "];
"1000919" -> "1000921"  [label="CFG: "];
"1000920" -> "1000919"  [label="AST: "];
"1000921" -> "1000919"  [label="AST: "];
"1000923" -> "1000919"  [label="CFG: "];
"1000919" -> "1001064"  [label="DDG: circ"];
"1000919" -> "1001064"  [label="DDG: circuit_resume_edge_reading(circ, layer_hint)"];
"1000919" -> "1001064"  [label="DDG: layer_hint"];
"1000118" -> "1000919"  [label="DDG: layer_hint"];
"1000948" -> "1000947"  [label="AST: "];
"1000948" -> "1000949"  [label="CFG: "];
"1000949" -> "1000948"  [label="AST: "];
"1000952" -> "1000948"  [label="CFG: "];
"1000955" -> "1000948"  [label="CFG: "];
"1000948" -> "1001064"  [label="DDG: circuit_queue_streams_are_blocked(circ)"];
"1000948" -> "1001064"  [label="DDG: circ"];
"1001010" -> "1001008"  [label="AST: "];
"1001010" -> "1001011"  [label="CFG: "];
"1001011" -> "1001010"  [label="AST: "];
"1001008" -> "1001010"  [label="CFG: "];
"1001010" -> "1001064"  [label="DDG: circ"];
"1001010" -> "1001008"  [label="DDG: circ"];
"1001008" -> "1000260"  [label="AST: "];
"1001009" -> "1001008"  [label="AST: "];
"1001013" -> "1001008"  [label="CFG: "];
"1001008" -> "1001064"  [label="DDG: connection_exit_begin_resolve(cell, TO_OR_CIRCUIT(circ))"];
"1001008" -> "1001064"  [label="DDG: cell"];
"1001008" -> "1001064"  [label="DDG: TO_OR_CIRCUIT(circ)"];
"1000137" -> "1001008"  [label="DDG: cell"];
"1000115" -> "1001008"  [label="DDG: cell"];
"1001039" -> "1000260"  [label="AST: "];
"1001039" -> "1001048"  [label="CFG: "];
"1001040" -> "1001039"  [label="AST: "];
"1001041" -> "1001039"  [label="AST: "];
"1001042" -> "1001039"  [label="AST: "];
"1001045" -> "1001039"  [label="AST: "];
"1001048" -> "1001039"  [label="AST: "];
"1001054" -> "1001039"  [label="CFG: "];
"1001039" -> "1001064"  [label="DDG: layer_hint"];
"1001039" -> "1001064"  [label="DDG: circ"];
"1001039" -> "1001064"  [label="DDG: rh.length"];
"1001039" -> "1001064"  [label="DDG: cell->payload+RELAY_HEADER_SIZE"];
"1001039" -> "1001064"  [label="DDG: rh.command"];
"1001039" -> "1001064"  [label="DDG: rend_process_relay_cell(circ, layer_hint,\n                              rh.command, rh.length,\n                              cell->payload+RELAY_HEADER_SIZE)"];
"1000118" -> "1001039"  [label="DDG: layer_hint"];
"1000237" -> "1001039"  [label="DDG: rh.command"];
"1000149" -> "1001039"  [label="DDG: rh.command"];
"1000160" -> "1001039"  [label="DDG: rh.length"];
"1000141" -> "1001039"  [label="DDG: cell->payload"];
}
