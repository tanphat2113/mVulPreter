digraph "0_tor_56a7c5bc15e0447203a491c1ee37de9939ad1dcd@API" {
"1000249" [label="(Call,connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint))"];
"1000141" [label="(Call,relay_header_unpack(&rh, cell->payload))"];
"1000137" [label="(Call,tor_assert(cell))"];
"1000115" [label="(MethodParameterIn,cell_t *cell)"];
"1000139" [label="(Call,tor_assert(circ))"];
"1000116" [label="(MethodParameterIn,circuit_t *circ)"];
"1000205" [label="(Call,conn && !connection_state_is_open(TO_CONN(conn)))"];
"1000209" [label="(Call,TO_CONN(conn))"];
"1000117" [label="(MethodParameterIn,edge_connection_t *conn)"];
"1000207" [label="(Call,!connection_state_is_open(TO_CONN(conn)))"];
"1000208" [label="(Call,connection_state_is_open(TO_CONN(conn)))"];
"1000118" [label="(MethodParameterIn,crypt_path_t *layer_hint)"];
"1000248" [label="(Return,return connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint);)"];
"1000208" [label="(Call,connection_state_is_open(TO_CONN(conn)))"];
"1000116" [label="(MethodParameterIn,circuit_t *circ)"];
"1000820" [label="(Call,TO_ORIGIN_CIRCUIT(circ))"];
"1000210" [label="(Identifier,conn)"];
"1000363" [label="(Call,!layer_hint)"];
"1000388" [label="(Call,log_debug(domain,\"circ deliver_window now %d.\", layer_hint ?\n                layer_hint->deliver_window : circ->deliver_window))"];
"1001064" [label="(MethodReturn,RET)"];
"1000824" [label="(Call,cell->payload + RELAY_HEADER_SIZE)"];
"1000249" [label="(Call,connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint))"];
"1000126" [label="(Call,domain = layer_hint?LD_APP:LD_EXIT)"];
"1000354" [label="(Call,layer_hint && --layer_hint->deliver_window < 0)"];
"1000391" [label="(Call,layer_hint ?\n                layer_hint->deliver_window : circ->deliver_window)"];
"1000379" [label="(Call,connection_edge_end(conn, END_STREAM_REASON_TORPROTOCOL))"];
"1000118" [label="(MethodParameterIn,crypt_path_t *layer_hint)"];
"1000763" [label="(Call,get_uint8(cell->payload + RELAY_HEADER_SIZE))"];
"1001039" [label="(Call,rend_process_relay_cell(circ, layer_hint,\n                              rh.command, rh.length,\n                              cell->payload+RELAY_HEADER_SIZE))"];
"1000925" [label="(Call,!conn)"];
"1000141" [label="(Call,relay_header_unpack(&rh, cell->payload))"];
"1000138" [label="(Identifier,cell)"];
"1000267" [label="(Call,layer_hint &&\n          circ->purpose != CIRCUIT_PURPOSE_S_REND_JOINED)"];
"1000798" [label="(Call,relay_send_command_from_edge(0, circ, RELAY_COMMAND_TRUNCATED,\n                                     payload, sizeof(payload), NULL))"];
"1000688" [label="(Call,TO_ORIGIN_CIRCUIT(circ))"];
"1000142" [label="(Call,&rh)"];
"1000465" [label="(Call,cell->payload+RELAY_HEADER_SIZE)"];
"1000206" [label="(Identifier,conn)"];
"1000207" [label="(Call,!connection_state_is_open(TO_CONN(conn)))"];
"1000383" [label="(Call,TO_CONN(conn))"];
"1000437" [label="(Call,cell->payload + RELAY_HEADER_SIZE)"];
"1000948" [label="(Call,circuit_queue_streams_are_blocked(circ))"];
"1000288" [label="(Call,layer_hint != TO_ORIGIN_CIRCUIT(circ)->cpath->prev)"];
"1000255" [label="(Identifier,layer_hint)"];
"1000435" [label="(Call,(char*)(cell->payload + RELAY_HEADER_SIZE))"];
"1000403" [label="(Call,!conn)"];
"1001010" [label="(Call,TO_OR_CIRCUIT(circ))"];
"1000204" [label="(ControlStructure,if (conn && !connection_state_is_open(TO_CONN(conn))))"];
"1000258" [label="(Identifier,rh)"];
"1000119" [label="(Block,)"];
"1000252" [label="(Identifier,cell)"];
"1000205" [label="(Call,conn && !connection_state_is_open(TO_CONN(conn)))"];
"1000666" [label="(Call,(const uint8_t*)cell->payload)"];
"1001048" [label="(Call,cell->payload+RELAY_HEADER_SIZE)"];
"1000140" [label="(Identifier,circ)"];
"1000346" [label="(Call,connection_exit_begin_conn(cell, circ))"];
"1000637" [label="(Call,circuit_extend(cell, circ))"];
"1000706" [label="(Call,TO_ORIGIN_CIRCUIT(circ))"];
"1000954" [label="(Call,TO_CONN(conn))"];
"1000248" [label="(Return,return connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint);)"];
"1000643" [label="(Call,!layer_hint)"];
"1000958" [label="(Call,connection_edge_package_raw_inbuf(conn, 1, NULL))"];
"1000494" [label="(Call,EDGE_TO_ENTRY_CONN(conn))"];
"1000253" [label="(Identifier,circ)"];
"1000117" [label="(MethodParameterIn,edge_connection_t *conn)"];
"1000464" [label="(Call,get_uint8(cell->payload+RELAY_HEADER_SIZE))"];
"1000764" [label="(Call,cell->payload + RELAY_HEADER_SIZE)"];
"1000209" [label="(Call,TO_CONN(conn))"];
"1000472" [label="(Call,!conn)"];
"1000769" [label="(Call,circuit_clear_cell_queue(circ, circ->n_chan))"];
"1000451" [label="(Call,connection_edge_consider_sending_sendme(conn))"];
"1000148" [label="(Identifier,num_seen)"];
"1000292" [label="(Call,TO_ORIGIN_CIRCUIT(circ))"];
"1000254" [label="(Identifier,conn)"];
"1001008" [label="(Call,connection_exit_begin_resolve(cell, TO_OR_CIRCUIT(circ)))"];
"1000399" [label="(Call,circuit_consider_sending_sendme(circ, layer_hint))"];
"1000536" [label="(Call,TO_CONN(conn))"];
"1000247" [label="(Block,)"];
"1000884" [label="(Call,circuit_resume_edge_reading(circ, layer_hint))"];
"1000823" [label="(Call,get_uint8(cell->payload + RELAY_HEADER_SIZE))"];
"1000919" [label="(Call,circuit_resume_edge_reading(circ, layer_hint))"];
"1000782" [label="(Call,circuit_set_n_circid_chan(circ, 0, NULL))"];
"1000115" [label="(MethodParameterIn,cell_t *cell)"];
"1000445" [label="(Call,TO_CONN(conn))"];
"1000752" [label="(Call,circuit_set_state(circ, CIRCUIT_STATE_OPEN))"];
"1000144" [label="(Call,cell->payload)"];
"1000139" [label="(Call,tor_assert(circ))"];
"1000338" [label="(Call,TO_OR_CIRCUIT(circ))"];
"1000965" [label="(Call,TO_CONN(conn))"];
"1000137" [label="(Call,tor_assert(cell))"];
"1000217" [label="(Identifier,conn)"];
"1000810" [label="(Call,!layer_hint)"];
"1000128" [label="(Call,layer_hint?LD_APP:LD_EXIT)"];
"1000819" [label="(Call,circuit_truncated(TO_ORIGIN_CIRCUIT(circ), layer_hint,\n                        get_uint8(cell->payload + RELAY_HEADER_SIZE)))"];
"1000250" [label="(Call,&rh)"];
"1000143" [label="(Identifier,rh)"];
"1000249" -> "1000248"  [label="AST: "];
"1000249" -> "1000255"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000252" -> "1000249"  [label="AST: "];
"1000253" -> "1000249"  [label="AST: "];
"1000254" -> "1000249"  [label="AST: "];
"1000255" -> "1000249"  [label="AST: "];
"1000248" -> "1000249"  [label="CFG: "];
"1000249" -> "1001064"  [label="DDG: circ"];
"1000249" -> "1001064"  [label="DDG: layer_hint"];
"1000249" -> "1001064"  [label="DDG: conn"];
"1000249" -> "1001064"  [label="DDG: cell"];
"1000249" -> "1001064"  [label="DDG: &rh"];
"1000249" -> "1001064"  [label="DDG: connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint)"];
"1000249" -> "1000248"  [label="DDG: connection_edge_process_relay_cell_not_open(\n               &rh, cell, circ, conn, layer_hint)"];
"1000141" -> "1000249"  [label="DDG: &rh"];
"1000137" -> "1000249"  [label="DDG: cell"];
"1000115" -> "1000249"  [label="DDG: cell"];
"1000139" -> "1000249"  [label="DDG: circ"];
"1000116" -> "1000249"  [label="DDG: circ"];
"1000205" -> "1000249"  [label="DDG: conn"];
"1000117" -> "1000249"  [label="DDG: conn"];
"1000118" -> "1000249"  [label="DDG: layer_hint"];
"1000141" -> "1000119"  [label="AST: "];
"1000141" -> "1000144"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000144" -> "1000141"  [label="AST: "];
"1000148" -> "1000141"  [label="CFG: "];
"1000141" -> "1001064"  [label="DDG: &rh"];
"1000141" -> "1001064"  [label="DDG: relay_header_unpack(&rh, cell->payload)"];
"1000141" -> "1001064"  [label="DDG: cell->payload"];
"1000141" -> "1000435"  [label="DDG: cell->payload"];
"1000141" -> "1000437"  [label="DDG: cell->payload"];
"1000141" -> "1000464"  [label="DDG: cell->payload"];
"1000141" -> "1000465"  [label="DDG: cell->payload"];
"1000141" -> "1000666"  [label="DDG: cell->payload"];
"1000141" -> "1000763"  [label="DDG: cell->payload"];
"1000141" -> "1000764"  [label="DDG: cell->payload"];
"1000141" -> "1000823"  [label="DDG: cell->payload"];
"1000141" -> "1000824"  [label="DDG: cell->payload"];
"1000141" -> "1001039"  [label="DDG: cell->payload"];
"1000141" -> "1001048"  [label="DDG: cell->payload"];
"1000137" -> "1000119"  [label="AST: "];
"1000137" -> "1000138"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000140" -> "1000137"  [label="CFG: "];
"1000137" -> "1001064"  [label="DDG: cell"];
"1000137" -> "1001064"  [label="DDG: tor_assert(cell)"];
"1000115" -> "1000137"  [label="DDG: cell"];
"1000137" -> "1000346"  [label="DDG: cell"];
"1000137" -> "1000637"  [label="DDG: cell"];
"1000137" -> "1001008"  [label="DDG: cell"];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1001064"  [label="DDG: cell"];
"1000115" -> "1000346"  [label="DDG: cell"];
"1000115" -> "1000637"  [label="DDG: cell"];
"1000115" -> "1001008"  [label="DDG: cell"];
"1000139" -> "1000119"  [label="AST: "];
"1000139" -> "1000140"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000143" -> "1000139"  [label="CFG: "];
"1000139" -> "1001064"  [label="DDG: tor_assert(circ)"];
"1000139" -> "1001064"  [label="DDG: circ"];
"1000116" -> "1000139"  [label="DDG: circ"];
"1000139" -> "1000292"  [label="DDG: circ"];
"1000139" -> "1000338"  [label="DDG: circ"];
"1000139" -> "1000346"  [label="DDG: circ"];
"1000139" -> "1000399"  [label="DDG: circ"];
"1000139" -> "1000637"  [label="DDG: circ"];
"1000139" -> "1000688"  [label="DDG: circ"];
"1000139" -> "1000752"  [label="DDG: circ"];
"1000139" -> "1000769"  [label="DDG: circ"];
"1000139" -> "1000798"  [label="DDG: circ"];
"1000139" -> "1000820"  [label="DDG: circ"];
"1000139" -> "1000884"  [label="DDG: circ"];
"1000139" -> "1000919"  [label="DDG: circ"];
"1000139" -> "1000948"  [label="DDG: circ"];
"1000139" -> "1001010"  [label="DDG: circ"];
"1000139" -> "1001039"  [label="DDG: circ"];
"1000116" -> "1000114"  [label="AST: "];
"1000116" -> "1001064"  [label="DDG: circ"];
"1000116" -> "1000292"  [label="DDG: circ"];
"1000116" -> "1000338"  [label="DDG: circ"];
"1000116" -> "1000346"  [label="DDG: circ"];
"1000116" -> "1000399"  [label="DDG: circ"];
"1000116" -> "1000637"  [label="DDG: circ"];
"1000116" -> "1000688"  [label="DDG: circ"];
"1000116" -> "1000706"  [label="DDG: circ"];
"1000116" -> "1000752"  [label="DDG: circ"];
"1000116" -> "1000769"  [label="DDG: circ"];
"1000116" -> "1000782"  [label="DDG: circ"];
"1000116" -> "1000798"  [label="DDG: circ"];
"1000116" -> "1000820"  [label="DDG: circ"];
"1000116" -> "1000884"  [label="DDG: circ"];
"1000116" -> "1000919"  [label="DDG: circ"];
"1000116" -> "1000948"  [label="DDG: circ"];
"1000116" -> "1001010"  [label="DDG: circ"];
"1000116" -> "1001039"  [label="DDG: circ"];
"1000205" -> "1000204"  [label="AST: "];
"1000205" -> "1000206"  [label="CFG: "];
"1000205" -> "1000207"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000207" -> "1000205"  [label="AST: "];
"1000217" -> "1000205"  [label="CFG: "];
"1000258" -> "1000205"  [label="CFG: "];
"1000205" -> "1001064"  [label="DDG: conn"];
"1000205" -> "1001064"  [label="DDG: !connection_state_is_open(TO_CONN(conn))"];
"1000205" -> "1001064"  [label="DDG: conn && !connection_state_is_open(TO_CONN(conn))"];
"1000209" -> "1000205"  [label="DDG: conn"];
"1000117" -> "1000205"  [label="DDG: conn"];
"1000207" -> "1000205"  [label="DDG: connection_state_is_open(TO_CONN(conn))"];
"1000205" -> "1000379"  [label="DDG: conn"];
"1000205" -> "1000403"  [label="DDG: conn"];
"1000205" -> "1000472"  [label="DDG: conn"];
"1000205" -> "1000925"  [label="DDG: conn"];
"1000209" -> "1000208"  [label="AST: "];
"1000209" -> "1000210"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000208" -> "1000209"  [label="CFG: "];
"1000209" -> "1000208"  [label="DDG: conn"];
"1000117" -> "1000209"  [label="DDG: conn"];
"1000117" -> "1000114"  [label="AST: "];
"1000117" -> "1001064"  [label="DDG: conn"];
"1000117" -> "1000379"  [label="DDG: conn"];
"1000117" -> "1000383"  [label="DDG: conn"];
"1000117" -> "1000403"  [label="DDG: conn"];
"1000117" -> "1000445"  [label="DDG: conn"];
"1000117" -> "1000451"  [label="DDG: conn"];
"1000117" -> "1000472"  [label="DDG: conn"];
"1000117" -> "1000494"  [label="DDG: conn"];
"1000117" -> "1000536"  [label="DDG: conn"];
"1000117" -> "1000925"  [label="DDG: conn"];
"1000117" -> "1000954"  [label="DDG: conn"];
"1000117" -> "1000958"  [label="DDG: conn"];
"1000117" -> "1000965"  [label="DDG: conn"];
"1000207" -> "1000208"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000207" -> "1001064"  [label="DDG: connection_state_is_open(TO_CONN(conn))"];
"1000208" -> "1000207"  [label="DDG: TO_CONN(conn)"];
"1000208" -> "1001064"  [label="DDG: TO_CONN(conn)"];
"1000118" -> "1000114"  [label="AST: "];
"1000118" -> "1001064"  [label="DDG: layer_hint"];
"1000118" -> "1000126"  [label="DDG: layer_hint"];
"1000118" -> "1000128"  [label="DDG: layer_hint"];
"1000118" -> "1000267"  [label="DDG: layer_hint"];
"1000118" -> "1000288"  [label="DDG: layer_hint"];
"1000118" -> "1000354"  [label="DDG: layer_hint"];
"1000118" -> "1000363"  [label="DDG: layer_hint"];
"1000118" -> "1000388"  [label="DDG: layer_hint"];
"1000118" -> "1000391"  [label="DDG: layer_hint"];
"1000118" -> "1000399"  [label="DDG: layer_hint"];
"1000118" -> "1000643"  [label="DDG: layer_hint"];
"1000118" -> "1000810"  [label="DDG: layer_hint"];
"1000118" -> "1000819"  [label="DDG: layer_hint"];
"1000118" -> "1000884"  [label="DDG: layer_hint"];
"1000118" -> "1000919"  [label="DDG: layer_hint"];
"1000118" -> "1001039"  [label="DDG: layer_hint"];
"1000248" -> "1000247"  [label="AST: "];
"1001064" -> "1000248"  [label="CFG: "];
"1000248" -> "1001064"  [label="DDG: <RET>"];
}
