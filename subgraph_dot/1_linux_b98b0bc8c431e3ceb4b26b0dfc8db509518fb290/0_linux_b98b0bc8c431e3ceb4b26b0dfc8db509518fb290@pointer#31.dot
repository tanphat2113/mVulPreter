digraph "0_linux_b98b0bc8c431e3ceb4b26b0dfc8db509518fb290@pointer" {
"1000460" [label="(Call,sock_enable_timestamp(sk, SOCK_TIMESTAMP))"];
"1000457" [label="(Call,sock_set_flag(sk, SOCK_RCVTSTAMP))"];
"1000454" [label="(Call,sock_set_flag(sk, SOCK_RCVTSTAMPNS))"];
"1000159" [label="(Call,lock_sock(sk))"];
"1000115" [label="(Call,*sk = sock->sk)"];
"1000450" [label="(Call,sock_reset_flag(sk, SOCK_RCVTSTAMPNS))"];
"1000886" [label="(Call,release_sock(sk))"];
"1000465" [label="(Call,sock_reset_flag(sk, SOCK_RCVTSTAMP))"];
"1000731" [label="(Call,sock_valbool_flag(sk, SOCK_FILTER_LOCKED, valbool))"];
"1000458" [label="(Identifier,sk)"];
"1000214" [label="(Call,sock_valbool_flag(sk, SOCK_BROADCAST, valbool))"];
"1000452" [label="(Identifier,SOCK_RCVTSTAMPNS)"];
"1000176" [label="(Call,sock_valbool_flag(sk, SOCK_DBG, valbool))"];
"1000460" [label="(Call,sock_enable_timestamp(sk, SOCK_TIMESTAMP))"];
"1000160" [label="(Identifier,sk)"];
"1000162" [label="(Identifier,optname)"];
"1000339" [label="(Call,sock_net(sk))"];
"1000616" [label="(Call,sk_attach_filter(&fprog, sk))"];
"1000708" [label="(Call,sk_reuseport_attach_bpf(ufd, sk))"];
"1000450" [label="(Call,sock_reset_flag(sk, SOCK_RCVTSTAMPNS))"];
"1000804" [label="(Call,sock_valbool_flag(sk, SOCK_NOFCS, valbool))"];
"1000451" [label="(Identifier,sk)"];
"1000462" [label="(Identifier,SOCK_TIMESTAMP)"];
"1000208" [label="(Call,sock_valbool_flag(sk, SOCK_LOCALROUTE, valbool))"];
"1000306" [label="(Call,tcp_set_keepalive(sk, valbool))"];
"1000877" [label="(Call,dst_negative_advice(sk))"];
"1000446" [label="(ControlStructure,if (optname == SO_TIMESTAMP))"];
"1000810" [label="(Call,sock_valbool_flag(sk, SOCK_SELECT_ERR_QUEUE, valbool))"];
"1000552" [label="(Call,sock_disable_timestamp(sk,\n\t\t\t\t\t       (1UL << SOCK_TIMESTAMPING_RX_SOFTWARE)))"];
"1000780" [label="(Call,sock_valbool_flag(sk, SOCK_WIFI_STATUS, valbool))"];
"1000548" [label="(Call,sock_enable_timestamp(sk,\n\t\t\t\t\t      SOCK_TIMESTAMPING_RX_SOFTWARE))"];
"1000529" [label="(Call,tcp_sk(sk))"];
"1000125" [label="(Identifier,ret)"];
"1000159" [label="(Call,lock_sock(sk))"];
"1000242" [label="(Call,sk->sk_write_space(sk))"];
"1000461" [label="(Identifier,sk)"];
"1000115" [label="(Call,*sk = sock->sk)"];
"1000453" [label="(ControlStructure,else)"];
"1000721" [label="(Call,sock_flag(sk, SOCK_FILTER_LOCKED))"];
"1000889" [label="(Identifier,ret)"];
"1000132" [label="(Call,sock_setbindtodevice(sk, optval, optlen))"];
"1000457" [label="(Call,sock_set_flag(sk, SOCK_RCVTSTAMP))"];
"1000454" [label="(Call,sock_set_flag(sk, SOCK_RCVTSTAMPNS))"];
"1000384" [label="(Call,sock_reset_flag(sk, SOCK_LINGER))"];
"1000416" [label="(Call,sock_set_flag(sk, SOCK_LINGER))"];
"1000468" [label="(Call,sock_reset_flag(sk, SOCK_RCVTSTAMPNS))"];
"1000794" [label="(Call,sock->ops->set_peek_off(sk, val))"];
"1000116" [label="(Identifier,sk)"];
"1000647" [label="(Call,sk_attach_bpf(ufd, sk))"];
"1000113" [label="(Block,)"];
"1000445" [label="(Block,)"];
"1000471" [label="(ControlStructure,break;)"];
"1000455" [label="(Identifier,sk)"];
"1000315" [label="(Call,sock_valbool_flag(sk, SOCK_URGINLINE, valbool))"];
"1000890" [label="(MethodReturn,int)"];
"1000459" [label="(Identifier,SOCK_RCVTSTAMP)"];
"1000677" [label="(Call,sk_reuseport_attach_filter(&fprog, sk))"];
"1000887" [label="(Identifier,sk)"];
"1000715" [label="(Call,sk_detach_filter(sk))"];
"1000774" [label="(Call,sock_valbool_flag(sk, SOCK_RXQ_OVFL, valbool))"];
"1000886" [label="(Call,release_sock(sk))"];
"1000117" [label="(Call,sock->sk)"];
"1000758" [label="(Call,sock_net(sk))"];
"1000456" [label="(Identifier,SOCK_RCVTSTAMPNS)"];
"1000309" [label="(Call,sock_valbool_flag(sk, SOCK_KEEPOPEN, valbool))"];
"1000460" -> "1000445"  [label="AST: "];
"1000460" -> "1000462"  [label="CFG: "];
"1000461" -> "1000460"  [label="AST: "];
"1000462" -> "1000460"  [label="AST: "];
"1000471" -> "1000460"  [label="CFG: "];
"1000460" -> "1000890"  [label="DDG: sock_enable_timestamp(sk, SOCK_TIMESTAMP)"];
"1000460" -> "1000890"  [label="DDG: SOCK_TIMESTAMP"];
"1000457" -> "1000460"  [label="DDG: sk"];
"1000460" -> "1000886"  [label="DDG: sk"];
"1000457" -> "1000445"  [label="AST: "];
"1000457" -> "1000459"  [label="CFG: "];
"1000458" -> "1000457"  [label="AST: "];
"1000459" -> "1000457"  [label="AST: "];
"1000461" -> "1000457"  [label="CFG: "];
"1000457" -> "1000890"  [label="DDG: SOCK_RCVTSTAMP"];
"1000457" -> "1000890"  [label="DDG: sock_set_flag(sk, SOCK_RCVTSTAMP)"];
"1000454" -> "1000457"  [label="DDG: sk"];
"1000450" -> "1000457"  [label="DDG: sk"];
"1000454" -> "1000453"  [label="AST: "];
"1000454" -> "1000456"  [label="CFG: "];
"1000455" -> "1000454"  [label="AST: "];
"1000456" -> "1000454"  [label="AST: "];
"1000458" -> "1000454"  [label="CFG: "];
"1000454" -> "1000890"  [label="DDG: sock_set_flag(sk, SOCK_RCVTSTAMPNS)"];
"1000454" -> "1000890"  [label="DDG: SOCK_RCVTSTAMPNS"];
"1000159" -> "1000454"  [label="DDG: sk"];
"1000159" -> "1000113"  [label="AST: "];
"1000159" -> "1000160"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000162" -> "1000159"  [label="CFG: "];
"1000159" -> "1000890"  [label="DDG: lock_sock(sk)"];
"1000115" -> "1000159"  [label="DDG: sk"];
"1000159" -> "1000176"  [label="DDG: sk"];
"1000159" -> "1000208"  [label="DDG: sk"];
"1000159" -> "1000214"  [label="DDG: sk"];
"1000159" -> "1000242"  [label="DDG: sk"];
"1000159" -> "1000306"  [label="DDG: sk"];
"1000159" -> "1000309"  [label="DDG: sk"];
"1000159" -> "1000315"  [label="DDG: sk"];
"1000159" -> "1000339"  [label="DDG: sk"];
"1000159" -> "1000384"  [label="DDG: sk"];
"1000159" -> "1000416"  [label="DDG: sk"];
"1000159" -> "1000450"  [label="DDG: sk"];
"1000159" -> "1000465"  [label="DDG: sk"];
"1000159" -> "1000529"  [label="DDG: sk"];
"1000159" -> "1000548"  [label="DDG: sk"];
"1000159" -> "1000552"  [label="DDG: sk"];
"1000159" -> "1000616"  [label="DDG: sk"];
"1000159" -> "1000647"  [label="DDG: sk"];
"1000159" -> "1000677"  [label="DDG: sk"];
"1000159" -> "1000708"  [label="DDG: sk"];
"1000159" -> "1000715"  [label="DDG: sk"];
"1000159" -> "1000721"  [label="DDG: sk"];
"1000159" -> "1000758"  [label="DDG: sk"];
"1000159" -> "1000774"  [label="DDG: sk"];
"1000159" -> "1000780"  [label="DDG: sk"];
"1000159" -> "1000794"  [label="DDG: sk"];
"1000159" -> "1000804"  [label="DDG: sk"];
"1000159" -> "1000810"  [label="DDG: sk"];
"1000159" -> "1000877"  [label="DDG: sk"];
"1000159" -> "1000886"  [label="DDG: sk"];
"1000115" -> "1000113"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000125" -> "1000115"  [label="CFG: "];
"1000115" -> "1000890"  [label="DDG: sock->sk"];
"1000115" -> "1000890"  [label="DDG: sk"];
"1000115" -> "1000132"  [label="DDG: sk"];
"1000450" -> "1000446"  [label="AST: "];
"1000450" -> "1000452"  [label="CFG: "];
"1000451" -> "1000450"  [label="AST: "];
"1000452" -> "1000450"  [label="AST: "];
"1000458" -> "1000450"  [label="CFG: "];
"1000450" -> "1000890"  [label="DDG: sock_reset_flag(sk, SOCK_RCVTSTAMPNS)"];
"1000450" -> "1000890"  [label="DDG: SOCK_RCVTSTAMPNS"];
"1000886" -> "1000113"  [label="AST: "];
"1000886" -> "1000887"  [label="CFG: "];
"1000887" -> "1000886"  [label="AST: "];
"1000889" -> "1000886"  [label="CFG: "];
"1000886" -> "1000890"  [label="DDG: release_sock(sk)"];
"1000886" -> "1000890"  [label="DDG: sk"];
"1000877" -> "1000886"  [label="DDG: sk"];
"1000208" -> "1000886"  [label="DDG: sk"];
"1000780" -> "1000886"  [label="DDG: sk"];
"1000677" -> "1000886"  [label="DDG: sk"];
"1000315" -> "1000886"  [label="DDG: sk"];
"1000794" -> "1000886"  [label="DDG: sk"];
"1000758" -> "1000886"  [label="DDG: sk"];
"1000721" -> "1000886"  [label="DDG: sk"];
"1000731" -> "1000886"  [label="DDG: sk"];
"1000548" -> "1000886"  [label="DDG: sk"];
"1000309" -> "1000886"  [label="DDG: sk"];
"1000804" -> "1000886"  [label="DDG: sk"];
"1000552" -> "1000886"  [label="DDG: sk"];
"1000715" -> "1000886"  [label="DDG: sk"];
"1000708" -> "1000886"  [label="DDG: sk"];
"1000468" -> "1000886"  [label="DDG: sk"];
"1000810" -> "1000886"  [label="DDG: sk"];
"1000647" -> "1000886"  [label="DDG: sk"];
"1000339" -> "1000886"  [label="DDG: sk"];
"1000616" -> "1000886"  [label="DDG: sk"];
"1000416" -> "1000886"  [label="DDG: sk"];
"1000214" -> "1000886"  [label="DDG: sk"];
"1000176" -> "1000886"  [label="DDG: sk"];
"1000774" -> "1000886"  [label="DDG: sk"];
"1000242" -> "1000886"  [label="DDG: sk"];
"1000384" -> "1000886"  [label="DDG: sk"];
}
