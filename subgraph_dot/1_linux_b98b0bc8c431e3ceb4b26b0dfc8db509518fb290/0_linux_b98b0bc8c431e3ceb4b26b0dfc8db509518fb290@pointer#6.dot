digraph "0_linux_b98b0bc8c431e3ceb4b26b0dfc8db509518fb290@pointer" {
"1000571" [label="(Call,sock_set_timeout(&sk->sk_rcvtimeo, optval, optlen))"];
"1000147" [label="(Call,(int __user *)optval)"];
"1000111" [label="(MethodParameterIn,char __user *optval)"];
"1000137" [label="(Call,optlen < sizeof(int))"];
"1000112" [label="(MethodParameterIn,unsigned int optlen)"];
"1000569" [label="(Call,ret = sock_set_timeout(&sk->sk_rcvtimeo, optval, optlen))"];
"1000888" [label="(Return,return ret;)"];
"1000361" [label="(Call,ret = -EINVAL)"];
"1000137" [label="(Call,optlen < sizeof(int))"];
"1000570" [label="(Identifier,ret)"];
"1000124" [label="(Call,ret = 0)"];
"1000614" [label="(Call,ret = sk_attach_filter(&fprog, sk))"];
"1000622" [label="(Call,ret = -EINVAL)"];
"1000580" [label="(Call,ret = sock_set_timeout(&sk->sk_sndtimeo, optval, optlen))"];
"1000596" [label="(Call,optlen == sizeof(struct sock_fprog))"];
"1000149" [label="(Identifier,optval)"];
"1000171" [label="(Call,ret = -EACCES)"];
"1000591" [label="(Call,ret = -EINVAL)"];
"1000826" [label="(Call,ret = -EPERM)"];
"1000147" [label="(Call,(int __user *)optval)"];
"1000146" [label="(Identifier,val)"];
"1000577" [label="(Identifier,optlen)"];
"1000478" [label="(Call,ret = -EINVAL)"];
"1000638" [label="(Call,copy_from_user(&ufd, optval, sizeof(ufd)))"];
"1000202" [label="(Call,ret = -ENOPROTOOPT)"];
"1000572" [label="(Call,&sk->sk_rcvtimeo)"];
"1000652" [label="(Call,ret = -EINVAL)"];
"1000287" [label="(Call,ret = -EPERM)"];
"1000602" [label="(Call,ret = -EFAULT)"];
"1000699" [label="(Call,copy_from_user(&ufd, optval, sizeof(ufd)))"];
"1000519" [label="(Call,ret = -EINVAL)"];
"1000726" [label="(Call,ret = -EPERM)"];
"1000349" [label="(Call,ret = -EPERM)"];
"1000706" [label="(Call,ret = sk_reuseport_attach_bpf(ufd, sk))"];
"1000688" [label="(Call,optlen == sizeof(u32))"];
"1000627" [label="(Call,optlen == sizeof(u32))"];
"1000657" [label="(Call,optlen == sizeof(struct sock_fprog))"];
"1000607" [label="(Call,copy_from_user(&fprog, optval, sizeof(fprog)))"];
"1000633" [label="(Call,ret = -EFAULT)"];
"1000112" [label="(MethodParameterIn,unsigned int optlen)"];
"1000576" [label="(Identifier,optval)"];
"1000374" [label="(Call,ret = -EFAULT)"];
"1000356" [label="(Call,optlen < sizeof(ling))"];
"1000571" [label="(Call,sock_set_timeout(&sk->sk_rcvtimeo, optval, optlen))"];
"1000139" [label="(Call,sizeof(int))"];
"1000762" [label="(Call,ret = -EPERM)"];
"1000578" [label="(ControlStructure,break;)"];
"1000713" [label="(Call,ret = sk_detach_filter(sk))"];
"1000367" [label="(Call,copy_from_user(&ling, optval, sizeof(ling)))"];
"1000163" [label="(Block,)"];
"1000143" [label="(Identifier,EINVAL)"];
"1000136" [label="(ControlStructure,if (optlen < sizeof(int)))"];
"1000889" [label="(Identifier,ret)"];
"1000132" [label="(Call,sock_setbindtodevice(sk, optval, optlen))"];
"1000663" [label="(Call,ret = -EFAULT)"];
"1000888" [label="(Return,return ret;)"];
"1000645" [label="(Call,ret = sk_attach_bpf(ufd, sk))"];
"1000694" [label="(Call,ret = -EFAULT)"];
"1000138" [label="(Identifier,optlen)"];
"1000792" [label="(Call,ret = sock->ops->set_peek_off(sk, val))"];
"1000798" [label="(Call,ret = -EOPNOTSUPP)"];
"1000668" [label="(Call,copy_from_user(&fprog, optval, sizeof(fprog)))"];
"1000111" [label="(MethodParameterIn,char __user *optval)"];
"1000113" [label="(Block,)"];
"1000683" [label="(Call,ret = -EINVAL)"];
"1000145" [label="(Call,get_user(val, (int __user *)optval))"];
"1000890" [label="(MethodReturn,int)"];
"1000675" [label="(Call,ret = sk_reuseport_attach_filter(&fprog, sk))"];
"1000251" [label="(Call,ret = -EPERM)"];
"1000836" [label="(Call,ret = -EINVAL)"];
"1000582" [label="(Call,sock_set_timeout(&sk->sk_sndtimeo, optval, optlen))"];
"1000881" [label="(Call,ret = -ENOPROTOOPT)"];
"1000569" [label="(Call,ret = sock_set_timeout(&sk->sk_rcvtimeo, optval, optlen))"];
"1000571" -> "1000569"  [label="AST: "];
"1000571" -> "1000577"  [label="CFG: "];
"1000572" -> "1000571"  [label="AST: "];
"1000576" -> "1000571"  [label="AST: "];
"1000577" -> "1000571"  [label="AST: "];
"1000569" -> "1000571"  [label="CFG: "];
"1000571" -> "1000890"  [label="DDG: optlen"];
"1000571" -> "1000890"  [label="DDG: &sk->sk_rcvtimeo"];
"1000571" -> "1000890"  [label="DDG: optval"];
"1000571" -> "1000569"  [label="DDG: &sk->sk_rcvtimeo"];
"1000571" -> "1000569"  [label="DDG: optval"];
"1000571" -> "1000569"  [label="DDG: optlen"];
"1000147" -> "1000571"  [label="DDG: optval"];
"1000111" -> "1000571"  [label="DDG: optval"];
"1000137" -> "1000571"  [label="DDG: optlen"];
"1000112" -> "1000571"  [label="DDG: optlen"];
"1000147" -> "1000145"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000147" -> "1000890"  [label="DDG: optval"];
"1000147" -> "1000145"  [label="DDG: optval"];
"1000111" -> "1000147"  [label="DDG: optval"];
"1000147" -> "1000367"  [label="DDG: optval"];
"1000147" -> "1000582"  [label="DDG: optval"];
"1000147" -> "1000607"  [label="DDG: optval"];
"1000147" -> "1000638"  [label="DDG: optval"];
"1000147" -> "1000668"  [label="DDG: optval"];
"1000147" -> "1000699"  [label="DDG: optval"];
"1000111" -> "1000107"  [label="AST: "];
"1000111" -> "1000890"  [label="DDG: optval"];
"1000111" -> "1000132"  [label="DDG: optval"];
"1000111" -> "1000367"  [label="DDG: optval"];
"1000111" -> "1000582"  [label="DDG: optval"];
"1000111" -> "1000607"  [label="DDG: optval"];
"1000111" -> "1000638"  [label="DDG: optval"];
"1000111" -> "1000668"  [label="DDG: optval"];
"1000111" -> "1000699"  [label="DDG: optval"];
"1000137" -> "1000136"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000143" -> "1000137"  [label="CFG: "];
"1000146" -> "1000137"  [label="CFG: "];
"1000137" -> "1000890"  [label="DDG: optlen"];
"1000137" -> "1000890"  [label="DDG: optlen < sizeof(int)"];
"1000112" -> "1000137"  [label="DDG: optlen"];
"1000137" -> "1000356"  [label="DDG: optlen"];
"1000137" -> "1000582"  [label="DDG: optlen"];
"1000137" -> "1000596"  [label="DDG: optlen"];
"1000137" -> "1000627"  [label="DDG: optlen"];
"1000137" -> "1000657"  [label="DDG: optlen"];
"1000137" -> "1000688"  [label="DDG: optlen"];
"1000112" -> "1000107"  [label="AST: "];
"1000112" -> "1000890"  [label="DDG: optlen"];
"1000112" -> "1000132"  [label="DDG: optlen"];
"1000112" -> "1000356"  [label="DDG: optlen"];
"1000112" -> "1000582"  [label="DDG: optlen"];
"1000112" -> "1000596"  [label="DDG: optlen"];
"1000112" -> "1000627"  [label="DDG: optlen"];
"1000112" -> "1000657"  [label="DDG: optlen"];
"1000112" -> "1000688"  [label="DDG: optlen"];
"1000569" -> "1000163"  [label="AST: "];
"1000570" -> "1000569"  [label="AST: "];
"1000578" -> "1000569"  [label="CFG: "];
"1000569" -> "1000890"  [label="DDG: sock_set_timeout(&sk->sk_rcvtimeo, optval, optlen)"];
"1000569" -> "1000890"  [label="DDG: ret"];
"1000569" -> "1000888"  [label="DDG: ret"];
"1000888" -> "1000113"  [label="AST: "];
"1000888" -> "1000889"  [label="CFG: "];
"1000889" -> "1000888"  [label="AST: "];
"1000890" -> "1000888"  [label="CFG: "];
"1000888" -> "1000890"  [label="DDG: <RET>"];
"1000889" -> "1000888"  [label="DDG: ret"];
"1000713" -> "1000888"  [label="DDG: ret"];
"1000171" -> "1000888"  [label="DDG: ret"];
"1000519" -> "1000888"  [label="DDG: ret"];
"1000726" -> "1000888"  [label="DDG: ret"];
"1000633" -> "1000888"  [label="DDG: ret"];
"1000836" -> "1000888"  [label="DDG: ret"];
"1000124" -> "1000888"  [label="DDG: ret"];
"1000694" -> "1000888"  [label="DDG: ret"];
"1000622" -> "1000888"  [label="DDG: ret"];
"1000683" -> "1000888"  [label="DDG: ret"];
"1000374" -> "1000888"  [label="DDG: ret"];
"1000675" -> "1000888"  [label="DDG: ret"];
"1000826" -> "1000888"  [label="DDG: ret"];
"1000645" -> "1000888"  [label="DDG: ret"];
"1000792" -> "1000888"  [label="DDG: ret"];
"1000663" -> "1000888"  [label="DDG: ret"];
"1000251" -> "1000888"  [label="DDG: ret"];
"1000591" -> "1000888"  [label="DDG: ret"];
"1000478" -> "1000888"  [label="DDG: ret"];
"1000798" -> "1000888"  [label="DDG: ret"];
"1000202" -> "1000888"  [label="DDG: ret"];
"1000652" -> "1000888"  [label="DDG: ret"];
"1000614" -> "1000888"  [label="DDG: ret"];
"1000580" -> "1000888"  [label="DDG: ret"];
"1000349" -> "1000888"  [label="DDG: ret"];
"1000762" -> "1000888"  [label="DDG: ret"];
"1000881" -> "1000888"  [label="DDG: ret"];
"1000287" -> "1000888"  [label="DDG: ret"];
"1000361" -> "1000888"  [label="DDG: ret"];
"1000602" -> "1000888"  [label="DDG: ret"];
"1000706" -> "1000888"  [label="DDG: ret"];
}
