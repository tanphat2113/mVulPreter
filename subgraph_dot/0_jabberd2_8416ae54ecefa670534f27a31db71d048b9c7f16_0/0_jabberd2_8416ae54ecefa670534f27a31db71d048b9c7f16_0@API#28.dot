digraph "0_jabberd2_8416ae54ecefa670534f27a31db71d048b9c7f16_0@API" {
"1000197" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_INVALID_MECHANISM, NULL), 0))"];
"1000199" [label="(Call,_sx_sasl_failure(s, _sasl_err_INVALID_MECHANISM, NULL))"];
"1000181" [label="(Call,(ctx->cb)(sx_sasl_cb_CHECK_MECH, (void*)mech, NULL, s, ctx->cbarg))"];
"1000183" [label="(Call,(void*)mech)"];
"1000175" [label="(Call,gsasl_server_support_p(ctx->gsasl_ctx, mech))"];
"1000168" [label="(Call,_sx_debug(ZONE, \"auth request from client (mechanism=%s)\", mech))"];
"1000164" [label="(Call,mech != NULL)"];
"1000123" [label="(MethodParameterIn,const char *mech)"];
"1000120" [label="(MethodParameterIn,sx_t s)"];
"1000175" [label="(Call,gsasl_server_support_p(ctx->gsasl_ctx, mech))"];
"1000197" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_INVALID_MECHANISM, NULL), 0))"];
"1000188" [label="(Call,ctx->cbarg)"];
"1000174" [label="(Call,!gsasl_server_support_p(ctx->gsasl_ctx, mech))"];
"1000553" [label="(Call,_sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)))"];
"1000180" [label="(Call,(ctx->cb)(sx_sasl_cb_CHECK_MECH, (void*)mech, NULL, s, ctx->cbarg) != sx_sasl_ret_OK)"];
"1000187" [label="(Identifier,s)"];
"1000171" [label="(Identifier,mech)"];
"1000166" [label="(Identifier,NULL)"];
"1000120" [label="(MethodParameterIn,sx_t s)"];
"1000170" [label="(Literal,\"auth request from client (mechanism=%s)\")"];
"1000219" [label="(Call,_sx_debug(ZONE, \"gsasl_server_start failed, no sasl for this conn; (%d): %s\", ret, gsasl_strerror(ret)))"];
"1000163" [label="(ControlStructure,if(mech != NULL))"];
"1000428" [label="(Call,strcmp(mech, \"ANONYMOUS\"))"];
"1000735" [label="(Call,_sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)))"];
"1000427" [label="(Call,strcmp(mech, \"ANONYMOUS\") == 0)"];
"1000504" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)), 0))"];
"1000198" [label="(Identifier,s)"];
"1000183" [label="(Call,(void*)mech)"];
"1000506" [label="(Call,_sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)))"];
"1000192" [label="(Block,)"];
"1000626" [label="(Call,_sx_nad_write(s, _sx_sasl_success(s, buf, buflen), 0))"];
"1000201" [label="(Identifier,_sasl_err_INVALID_MECHANISM)"];
"1000181" [label="(Call,(ctx->cb)(sx_sasl_cb_CHECK_MECH, (void*)mech, NULL, s, ctx->cbarg))"];
"1000204" [label="(Return,return;)"];
"1000577" [label="(Call,buf != NULL)"];
"1000799" [label="(Call,_sx_sasl_failure(s, out, gsasl_strerror(ret)))"];
"1000200" [label="(Identifier,s)"];
"1000177" [label="(Identifier,ctx)"];
"1000569" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_MECH_TOO_WEAK, \"response send before auth request enabling mechanism\"), 0))"];
"1000186" [label="(Identifier,NULL)"];
"1000202" [label="(Identifier,NULL)"];
"1000203" [label="(Literal,0)"];
"1000673" [label="(Call,_sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)))"];
"1000797" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, out, gsasl_strerror(ret)), 0))"];
"1000409" [label="(Call,_sx_debug(ZONE, \"sasl context initialised for %d\", s->tag))"];
"1000718" [label="(Call,_sx_sasl_challenge(s, buf, buflen))"];
"1000571" [label="(Call,_sx_sasl_failure(s, _sasl_err_MECH_TOO_WEAK, \"response send before auth request enabling mechanism\"))"];
"1000169" [label="(Identifier,ZONE)"];
"1000433" [label="(Call,(ctx->cb)(sx_sasl_cb_GEN_AUTHZID, NULL, (void **)&out, s, ctx->cbarg))"];
"1000234" [label="(Call,(ctx->cb)(sx_sasl_cb_GET_REALM, NULL, (void **) &realm, s, ctx->cbarg))"];
"1000599" [label="(Call,buf != NULL)"];
"1000207" [label="(Call,gsasl_server_start(ctx->gsasl_ctx, mech, &sd))"];
"1000199" [label="(Call,_sx_sasl_failure(s, _sasl_err_INVALID_MECHANISM, NULL))"];
"1000628" [label="(Call,_sx_sasl_success(s, buf, buflen))"];
"1000671" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)), 0))"];
"1000167" [label="(Block,)"];
"1000551" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)), 0))"];
"1000733" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)), 0))"];
"1000191" [label="(Identifier,sx_sasl_ret_OK)"];
"1000227" [label="(Call,_sx_sasl_failure(s, _sasl_err_TEMPORARY_FAILURE, gsasl_strerror(ret)))"];
"1000805" [label="(MethodReturn,static void)"];
"1000176" [label="(Call,ctx->gsasl_ctx)"];
"1000168" [label="(Call,_sx_debug(ZONE, \"auth request from client (mechanism=%s)\", mech))"];
"1000193" [label="(Call,_sx_debug(ZONE, \"client requested mechanism (%s) that we didn't offer\", mech))"];
"1000165" [label="(Identifier,mech)"];
"1000123" [label="(MethodParameterIn,const char *mech)"];
"1000185" [label="(Identifier,mech)"];
"1000225" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_TEMPORARY_FAILURE, gsasl_strerror(ret)), 0))"];
"1000179" [label="(Identifier,mech)"];
"1000716" [label="(Call,_sx_nad_write(s, _sx_sasl_challenge(s, buf, buflen), 0))"];
"1000263" [label="(Call,sctx->s = s)"];
"1000164" [label="(Call,mech != NULL)"];
"1000182" [label="(Identifier,sx_sasl_cb_CHECK_MECH)"];
"1000532" [label="(Identifier,ret)"];
"1000197" -> "1000192"  [label="AST: "];
"1000197" -> "1000203"  [label="CFG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000199" -> "1000197"  [label="AST: "];
"1000203" -> "1000197"  [label="AST: "];
"1000204" -> "1000197"  [label="CFG: "];
"1000197" -> "1000805"  [label="DDG: "];
"1000197" -> "1000805"  [label="DDG: "];
"1000197" -> "1000805"  [label="DDG: "];
"1000199" -> "1000197"  [label="DDG: "];
"1000199" -> "1000197"  [label="DDG: "];
"1000199" -> "1000197"  [label="DDG: "];
"1000120" -> "1000197"  [label="DDG: "];
"1000199" -> "1000202"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000201" -> "1000199"  [label="AST: "];
"1000202" -> "1000199"  [label="AST: "];
"1000203" -> "1000199"  [label="CFG: "];
"1000199" -> "1000805"  [label="DDG: "];
"1000199" -> "1000805"  [label="DDG: "];
"1000181" -> "1000199"  [label="DDG: "];
"1000181" -> "1000199"  [label="DDG: "];
"1000120" -> "1000199"  [label="DDG: "];
"1000164" -> "1000199"  [label="DDG: "];
"1000181" -> "1000180"  [label="AST: "];
"1000181" -> "1000188"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000183" -> "1000181"  [label="AST: "];
"1000186" -> "1000181"  [label="AST: "];
"1000187" -> "1000181"  [label="AST: "];
"1000188" -> "1000181"  [label="AST: "];
"1000191" -> "1000181"  [label="CFG: "];
"1000181" -> "1000805"  [label="DDG: "];
"1000181" -> "1000805"  [label="DDG: "];
"1000181" -> "1000805"  [label="DDG: "];
"1000181" -> "1000805"  [label="DDG: "];
"1000181" -> "1000180"  [label="DDG: "];
"1000181" -> "1000180"  [label="DDG: "];
"1000181" -> "1000180"  [label="DDG: "];
"1000181" -> "1000180"  [label="DDG: "];
"1000181" -> "1000180"  [label="DDG: "];
"1000183" -> "1000181"  [label="DDG: "];
"1000164" -> "1000181"  [label="DDG: "];
"1000120" -> "1000181"  [label="DDG: "];
"1000181" -> "1000227"  [label="DDG: "];
"1000181" -> "1000234"  [label="DDG: "];
"1000181" -> "1000234"  [label="DDG: "];
"1000181" -> "1000234"  [label="DDG: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000185" -> "1000183"  [label="AST: "];
"1000186" -> "1000183"  [label="CFG: "];
"1000175" -> "1000183"  [label="DDG: "];
"1000123" -> "1000183"  [label="DDG: "];
"1000183" -> "1000193"  [label="DDG: "];
"1000183" -> "1000207"  [label="DDG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000175" -> "1000179"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000179" -> "1000175"  [label="AST: "];
"1000174" -> "1000175"  [label="CFG: "];
"1000175" -> "1000805"  [label="DDG: "];
"1000175" -> "1000174"  [label="DDG: "];
"1000175" -> "1000174"  [label="DDG: "];
"1000168" -> "1000175"  [label="DDG: "];
"1000123" -> "1000175"  [label="DDG: "];
"1000175" -> "1000193"  [label="DDG: "];
"1000175" -> "1000207"  [label="DDG: "];
"1000175" -> "1000207"  [label="DDG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000168" -> "1000171"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000171" -> "1000168"  [label="AST: "];
"1000177" -> "1000168"  [label="CFG: "];
"1000168" -> "1000805"  [label="DDG: "];
"1000164" -> "1000168"  [label="DDG: "];
"1000123" -> "1000168"  [label="DDG: "];
"1000168" -> "1000193"  [label="DDG: "];
"1000168" -> "1000219"  [label="DDG: "];
"1000168" -> "1000409"  [label="DDG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000164" -> "1000166"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000166" -> "1000164"  [label="AST: "];
"1000169" -> "1000164"  [label="CFG: "];
"1000532" -> "1000164"  [label="CFG: "];
"1000164" -> "1000805"  [label="DDG: "];
"1000164" -> "1000805"  [label="DDG: "];
"1000164" -> "1000805"  [label="DDG: "];
"1000123" -> "1000164"  [label="DDG: "];
"1000164" -> "1000234"  [label="DDG: "];
"1000164" -> "1000577"  [label="DDG: "];
"1000164" -> "1000599"  [label="DDG: "];
"1000123" -> "1000119"  [label="AST: "];
"1000123" -> "1000805"  [label="DDG: "];
"1000123" -> "1000193"  [label="DDG: "];
"1000123" -> "1000207"  [label="DDG: "];
"1000123" -> "1000427"  [label="DDG: "];
"1000123" -> "1000428"  [label="DDG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000120" -> "1000805"  [label="DDG: "];
"1000120" -> "1000225"  [label="DDG: "];
"1000120" -> "1000227"  [label="DDG: "];
"1000120" -> "1000234"  [label="DDG: "];
"1000120" -> "1000263"  [label="DDG: "];
"1000120" -> "1000433"  [label="DDG: "];
"1000120" -> "1000504"  [label="DDG: "];
"1000120" -> "1000506"  [label="DDG: "];
"1000120" -> "1000551"  [label="DDG: "];
"1000120" -> "1000553"  [label="DDG: "];
"1000120" -> "1000569"  [label="DDG: "];
"1000120" -> "1000571"  [label="DDG: "];
"1000120" -> "1000626"  [label="DDG: "];
"1000120" -> "1000628"  [label="DDG: "];
"1000120" -> "1000671"  [label="DDG: "];
"1000120" -> "1000673"  [label="DDG: "];
"1000120" -> "1000716"  [label="DDG: "];
"1000120" -> "1000718"  [label="DDG: "];
"1000120" -> "1000733"  [label="DDG: "];
"1000120" -> "1000735"  [label="DDG: "];
"1000120" -> "1000797"  [label="DDG: "];
"1000120" -> "1000799"  [label="DDG: "];
}
