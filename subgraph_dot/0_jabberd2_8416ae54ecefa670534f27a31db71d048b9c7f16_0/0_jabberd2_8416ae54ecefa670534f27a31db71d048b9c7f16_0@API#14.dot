digraph "0_jabberd2_8416ae54ecefa670534f27a31db71d048b9c7f16_0@API" {
"1000223" [label="(Call,gsasl_strerror(ret))"];
"1000215" [label="(Call,ret != GSASL_OK)"];
"1000205" [label="(Call,ret = gsasl_server_start(ctx->gsasl_ctx, mech, &sd))"];
"1000207" [label="(Call,gsasl_server_start(ctx->gsasl_ctx, mech, &sd))"];
"1000175" [label="(Call,gsasl_server_support_p(ctx->gsasl_ctx, mech))"];
"1000168" [label="(Call,_sx_debug(ZONE, \"auth request from client (mechanism=%s)\", mech))"];
"1000164" [label="(Call,mech != NULL)"];
"1000123" [label="(MethodParameterIn,const char *mech)"];
"1000183" [label="(Call,(void*)mech)"];
"1000219" [label="(Call,_sx_debug(ZONE, \"gsasl_server_start failed, no sasl for this conn; (%d): %s\", ret, gsasl_strerror(ret)))"];
"1000230" [label="(Call,gsasl_strerror(ret))"];
"1000227" [label="(Call,_sx_sasl_failure(s, _sasl_err_TEMPORARY_FAILURE, gsasl_strerror(ret)))"];
"1000225" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_TEMPORARY_FAILURE, gsasl_strerror(ret)), 0))"];
"1000175" [label="(Call,gsasl_server_support_p(ctx->gsasl_ctx, mech))"];
"1000217" [label="(Identifier,GSASL_OK)"];
"1000235" [label="(Identifier,sx_sasl_cb_GET_REALM)"];
"1000174" [label="(Call,!gsasl_server_support_p(ctx->gsasl_ctx, mech))"];
"1000226" [label="(Identifier,s)"];
"1000233" [label="(Return,return;)"];
"1000205" [label="(Call,ret = gsasl_server_start(ctx->gsasl_ctx, mech, &sd))"];
"1000605" [label="(Call,ret == GSASL_OK)"];
"1000211" [label="(Identifier,mech)"];
"1000166" [label="(Identifier,NULL)"];
"1000171" [label="(Identifier,mech)"];
"1000206" [label="(Identifier,ret)"];
"1000170" [label="(Literal,\"auth request from client (mechanism=%s)\")"];
"1000219" [label="(Call,_sx_debug(ZONE, \"gsasl_server_start failed, no sasl for this conn; (%d): %s\", ret, gsasl_strerror(ret)))"];
"1000428" [label="(Call,strcmp(mech, \"ANONYMOUS\"))"];
"1000163" [label="(ControlStructure,if(mech != NULL))"];
"1000120" [label="(MethodParameterIn,sx_t s)"];
"1000427" [label="(Call,strcmp(mech, \"ANONYMOUS\") == 0)"];
"1000183" [label="(Call,(void*)mech)"];
"1000214" [label="(ControlStructure,if(ret != GSASL_OK))"];
"1000181" [label="(Call,(ctx->cb)(sx_sasl_cb_CHECK_MECH, (void*)mech, NULL, s, ctx->cbarg))"];
"1000577" [label="(Call,buf != NULL)"];
"1000177" [label="(Identifier,ctx)"];
"1000232" [label="(Literal,0)"];
"1000186" [label="(Identifier,NULL)"];
"1000223" [label="(Call,gsasl_strerror(ret))"];
"1000215" [label="(Call,ret != GSASL_OK)"];
"1000218" [label="(Block,)"];
"1000230" [label="(Call,gsasl_strerror(ret))"];
"1000409" [label="(Call,_sx_debug(ZONE, \"sasl context initialised for %d\", s->tag))"];
"1000212" [label="(Call,&sd)"];
"1000220" [label="(Identifier,ZONE)"];
"1000208" [label="(Call,ctx->gsasl_ctx)"];
"1000169" [label="(Identifier,ZONE)"];
"1000234" [label="(Call,(ctx->cb)(sx_sasl_cb_GET_REALM, NULL, (void **) &realm, s, ctx->cbarg))"];
"1000229" [label="(Identifier,_sasl_err_TEMPORARY_FAILURE)"];
"1000599" [label="(Call,buf != NULL)"];
"1000207" [label="(Call,gsasl_server_start(ctx->gsasl_ctx, mech, &sd))"];
"1000199" [label="(Call,_sx_sasl_failure(s, _sasl_err_INVALID_MECHANISM, NULL))"];
"1000167" [label="(Block,)"];
"1000221" [label="(Literal,\"gsasl_server_start failed, no sasl for this conn; (%d): %s\")"];
"1000228" [label="(Identifier,s)"];
"1000222" [label="(Identifier,ret)"];
"1000224" [label="(Identifier,ret)"];
"1000805" [label="(MethodReturn,static void)"];
"1000176" [label="(Call,ctx->gsasl_ctx)"];
"1000168" [label="(Call,_sx_debug(ZONE, \"auth request from client (mechanism=%s)\", mech))"];
"1000227" [label="(Call,_sx_sasl_failure(s, _sasl_err_TEMPORARY_FAILURE, gsasl_strerror(ret)))"];
"1000494" [label="(Call,ret != GSASL_OK)"];
"1000193" [label="(Call,_sx_debug(ZONE, \"client requested mechanism (%s) that we didn't offer\", mech))"];
"1000231" [label="(Identifier,ret)"];
"1000165" [label="(Identifier,mech)"];
"1000123" [label="(MethodParameterIn,const char *mech)"];
"1000185" [label="(Identifier,mech)"];
"1000216" [label="(Identifier,ret)"];
"1000179" [label="(Identifier,mech)"];
"1000225" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_TEMPORARY_FAILURE, gsasl_strerror(ret)), 0))"];
"1000164" [label="(Call,mech != NULL)"];
"1000532" [label="(Identifier,ret)"];
"1000223" -> "1000219"  [label="AST: "];
"1000223" -> "1000224"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000219" -> "1000223"  [label="CFG: "];
"1000223" -> "1000219"  [label="DDG: "];
"1000215" -> "1000223"  [label="DDG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000215" -> "1000217"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000217" -> "1000215"  [label="AST: "];
"1000220" -> "1000215"  [label="CFG: "];
"1000235" -> "1000215"  [label="CFG: "];
"1000215" -> "1000805"  [label="DDG: "];
"1000215" -> "1000805"  [label="DDG: "];
"1000205" -> "1000215"  [label="DDG: "];
"1000215" -> "1000494"  [label="DDG: "];
"1000215" -> "1000605"  [label="DDG: "];
"1000205" -> "1000167"  [label="AST: "];
"1000205" -> "1000207"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000207" -> "1000205"  [label="AST: "];
"1000216" -> "1000205"  [label="CFG: "];
"1000205" -> "1000805"  [label="DDG: "];
"1000207" -> "1000205"  [label="DDG: "];
"1000207" -> "1000205"  [label="DDG: "];
"1000207" -> "1000205"  [label="DDG: "];
"1000207" -> "1000212"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000211" -> "1000207"  [label="AST: "];
"1000212" -> "1000207"  [label="AST: "];
"1000207" -> "1000805"  [label="DDG: "];
"1000207" -> "1000805"  [label="DDG: "];
"1000207" -> "1000805"  [label="DDG: "];
"1000175" -> "1000207"  [label="DDG: "];
"1000175" -> "1000207"  [label="DDG: "];
"1000183" -> "1000207"  [label="DDG: "];
"1000123" -> "1000207"  [label="DDG: "];
"1000207" -> "1000427"  [label="DDG: "];
"1000207" -> "1000428"  [label="DDG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000175" -> "1000179"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000179" -> "1000175"  [label="AST: "];
"1000174" -> "1000175"  [label="CFG: "];
"1000175" -> "1000805"  [label="DDG: "];
"1000175" -> "1000174"  [label="DDG: "];
"1000175" -> "1000174"  [label="DDG: "];
"1000168" -> "1000175"  [label="DDG: "];
"1000123" -> "1000175"  [label="DDG: "];
"1000175" -> "1000183"  [label="DDG: "];
"1000175" -> "1000193"  [label="DDG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000168" -> "1000171"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000171" -> "1000168"  [label="AST: "];
"1000177" -> "1000168"  [label="CFG: "];
"1000168" -> "1000805"  [label="DDG: "];
"1000164" -> "1000168"  [label="DDG: "];
"1000123" -> "1000168"  [label="DDG: "];
"1000168" -> "1000193"  [label="DDG: "];
"1000168" -> "1000219"  [label="DDG: "];
"1000168" -> "1000409"  [label="DDG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000164" -> "1000166"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000166" -> "1000164"  [label="AST: "];
"1000169" -> "1000164"  [label="CFG: "];
"1000532" -> "1000164"  [label="CFG: "];
"1000164" -> "1000805"  [label="DDG: "];
"1000164" -> "1000805"  [label="DDG: "];
"1000164" -> "1000805"  [label="DDG: "];
"1000123" -> "1000164"  [label="DDG: "];
"1000164" -> "1000181"  [label="DDG: "];
"1000164" -> "1000199"  [label="DDG: "];
"1000164" -> "1000234"  [label="DDG: "];
"1000164" -> "1000577"  [label="DDG: "];
"1000164" -> "1000599"  [label="DDG: "];
"1000123" -> "1000119"  [label="AST: "];
"1000123" -> "1000805"  [label="DDG: "];
"1000123" -> "1000183"  [label="DDG: "];
"1000123" -> "1000193"  [label="DDG: "];
"1000123" -> "1000427"  [label="DDG: "];
"1000123" -> "1000428"  [label="DDG: "];
"1000183" -> "1000181"  [label="AST: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000185" -> "1000183"  [label="AST: "];
"1000186" -> "1000183"  [label="CFG: "];
"1000183" -> "1000181"  [label="DDG: "];
"1000183" -> "1000193"  [label="DDG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000220" -> "1000219"  [label="AST: "];
"1000221" -> "1000219"  [label="AST: "];
"1000222" -> "1000219"  [label="AST: "];
"1000226" -> "1000219"  [label="CFG: "];
"1000219" -> "1000805"  [label="DDG: "];
"1000219" -> "1000805"  [label="DDG: "];
"1000219" -> "1000230"  [label="DDG: "];
"1000230" -> "1000227"  [label="AST: "];
"1000230" -> "1000231"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000227" -> "1000230"  [label="CFG: "];
"1000230" -> "1000805"  [label="DDG: "];
"1000230" -> "1000227"  [label="DDG: "];
"1000227" -> "1000225"  [label="AST: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000227"  [label="AST: "];
"1000232" -> "1000227"  [label="CFG: "];
"1000227" -> "1000805"  [label="DDG: "];
"1000227" -> "1000805"  [label="DDG: "];
"1000227" -> "1000225"  [label="DDG: "];
"1000227" -> "1000225"  [label="DDG: "];
"1000227" -> "1000225"  [label="DDG: "];
"1000181" -> "1000227"  [label="DDG: "];
"1000120" -> "1000227"  [label="DDG: "];
"1000225" -> "1000218"  [label="AST: "];
"1000225" -> "1000232"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000232" -> "1000225"  [label="AST: "];
"1000233" -> "1000225"  [label="CFG: "];
"1000225" -> "1000805"  [label="DDG: "];
"1000225" -> "1000805"  [label="DDG: "];
"1000225" -> "1000805"  [label="DDG: "];
"1000120" -> "1000225"  [label="DDG: "];
}
