digraph "0_Android_7558d03e6498e970b761aa44fff6b2c659202d95_1@pointer" {
"1000292" [label="(Call,*bufferHdr = (m_inp_mem_ptr + i))"];
"1000178" [label="(Call,DEBUG_PRINT_LOW(\"Successfully allocated m_inp_mem_ptr = %p\", m_inp_mem_ptr))"];
"1000170" [label="(Call,m_inp_mem_ptr == NULL)"];
"1000159" [label="(Call,m_inp_mem_ptr = (OMX_BUFFERHEADERTYPE*) \\n                        calloc( (sizeof(OMX_BUFFERHEADERTYPE)), m_sInPortDef.nBufferCountActual))"];
"1000161" [label="(Call,(OMX_BUFFERHEADERTYPE*) \\n                        calloc( (sizeof(OMX_BUFFERHEADERTYPE)), m_sInPortDef.nBufferCountActual))"];
"1000163" [label="(Call,calloc( (sizeof(OMX_BUFFERHEADERTYPE)), m_sInPortDef.nBufferCountActual))"];
"1000153" [label="(Call,!m_inp_mem_ptr)"];
"1000286" [label="(Call,i < m_sInPortDef.nBufferCountActual)"];
"1000279" [label="(Call,BITMASK_ABSENT(&m_inp_bm_count,i))"];
"1000270" [label="(Call,i< m_sInPortDef.nBufferCountActual)"];
"1000267" [label="(Call,i=0)"];
"1000275" [label="(Call,i++)"];
"1000223" [label="(Call,i< m_sInPortDef.nBufferCountActual)"];
"1000220" [label="(Call,i=0)"];
"1000228" [label="(Call,i++)"];
"1000204" [label="(Call,calloc(sizeof (struct venc_ion), m_sInPortDef.nBufferCountActual))"];
"1000185" [label="(Call,calloc(sizeof (struct pmem), m_sInPortDef.nBufferCountActual))"];
"1000554" [label="(Call,DEBUG_PRINT_LOW(\"use_inp:: bufhdr = %p, pBuffer = %p, m_pInput_pmem[i].buffer = %p\",\n (*bufferHdr), (*bufferHdr)->pBuffer, m_pInput_pmem[i].buffer))"];
"1000285" [label="(ControlStructure,if (i < m_sInPortDef.nBufferCountActual))"];
"1000284" [label="(ControlStructure,break;)"];
"1000202" [label="(Call,(struct venc_ion *) calloc(sizeof (struct venc_ion), m_sInPortDef.nBufferCountActual))"];
"1000291" [label="(Block,)"];
"1000182" [label="(Identifier,m_pInput_pmem)"];
"1000159" [label="(Call,m_inp_mem_ptr = (OMX_BUFFERHEADERTYPE*) \\n                        calloc( (sizeof(OMX_BUFFERHEADERTYPE)), m_sInPortDef.nBufferCountActual))"];
"1000170" [label="(Call,m_inp_mem_ptr == NULL)"];
"1000562" [label="(Call,m_pInput_pmem[i].buffer)"];
"1000166" [label="(Call,m_sInPortDef.nBufferCountActual)"];
"1000267" [label="(Call,i=0)"];
"1000414" [label="(Call,m_pInput_pmem[i].buffer = (OMX_U8 *)SECURE_BUFPTR)"];
"1000220" [label="(Call,i=0)"];
"1000572" [label="(Identifier,m_pInput_pmem)"];
"1000178" [label="(Call,DEBUG_PRINT_LOW(\"Successfully allocated m_inp_mem_ptr = %p\", m_inp_mem_ptr))"];
"1000288" [label="(Call,m_sInPortDef.nBufferCountActual)"];
"1000282" [label="(Identifier,i)"];
"1000223" [label="(Call,i< m_sInPortDef.nBufferCountActual)"];
"1000169" [label="(ControlStructure,if (m_inp_mem_ptr == NULL))"];
"1000153" [label="(Call,!m_inp_mem_ptr)"];
"1000276" [label="(Identifier,i)"];
"1000269" [label="(Literal,0)"];
"1000186" [label="(Call,sizeof (struct pmem))"];
"1000592" [label="(MethodReturn,OMX_ERRORTYPE)"];
"1000163" [label="(Call,calloc( (sizeof(OMX_BUFFERHEADERTYPE)), m_sInPortDef.nBufferCountActual))"];
"1000270" [label="(Call,i< m_sInPortDef.nBufferCountActual)"];
"1000224" [label="(Identifier,i)"];
"1000207" [label="(Call,m_sInPortDef.nBufferCountActual)"];
"1000281" [label="(Identifier,m_inp_bm_count)"];
"1000172" [label="(Identifier,NULL)"];
"1000275" [label="(Call,i++)"];
"1000225" [label="(Call,m_sInPortDef.nBufferCountActual)"];
"1000294" [label="(Identifier,bufferHdr)"];
"1000175" [label="(Literal,\"ERROR: calloc() Failed for m_inp_mem_ptr\")"];
"1000278" [label="(ControlStructure,if (BITMASK_ABSENT(&m_inp_bm_count,i)))"];
"1000554" [label="(Call,DEBUG_PRINT_LOW(\"use_inp:: bufhdr = %p, pBuffer = %p, m_pInput_pmem[i].buffer = %p\",\n (*bufferHdr), (*bufferHdr)->pBuffer, m_pInput_pmem[i].buffer))"];
"1000228" [label="(Call,i++)"];
"1000527" [label="(Call,m_pInput_pmem[i].buffer = (unsigned char *)buffer)"];
"1000179" [label="(Literal,\"Successfully allocated m_inp_mem_ptr = %p\")"];
"1000266" [label="(ControlStructure,for (i=0; i< m_sInPortDef.nBufferCountActual; i++))"];
"1000160" [label="(Identifier,m_inp_mem_ptr)"];
"1000292" [label="(Call,*bufferHdr = (m_inp_mem_ptr + i))"];
"1000164" [label="(Call,sizeof(OMX_BUFFERHEADERTYPE))"];
"1000271" [label="(Identifier,i)"];
"1000280" [label="(Call,&m_inp_bm_count)"];
"1000154" [label="(Identifier,m_inp_mem_ptr)"];
"1000219" [label="(ControlStructure,for (i=0; i< m_sInPortDef.nBufferCountActual; i++))"];
"1000222" [label="(Literal,0)"];
"1000302" [label="(Call,(*bufferHdr)->pBuffer           = (OMX_U8 *)buffer)"];
"1000161" [label="(Call,(OMX_BUFFERHEADERTYPE*) \\n                        calloc( (sizeof(OMX_BUFFERHEADERTYPE)), m_sInPortDef.nBufferCountActual))"];
"1000155" [label="(Block,)"];
"1000293" [label="(Call,*bufferHdr)"];
"1000152" [label="(ControlStructure,if (!m_inp_mem_ptr))"];
"1000279" [label="(Call,BITMASK_ABSENT(&m_inp_bm_count,i))"];
"1000157" [label="(Identifier,input_use_buffer)"];
"1000287" [label="(Identifier,i)"];
"1000453" [label="(Call,m_pInput_pmem[i].buffer == MAP_FAILED)"];
"1000300" [label="(Identifier,m_inp_bm_count)"];
"1000204" [label="(Call,calloc(sizeof (struct venc_ion), m_sInPortDef.nBufferCountActual))"];
"1000272" [label="(Call,m_sInPortDef.nBufferCountActual)"];
"1000188" [label="(Call,m_sInPortDef.nBufferCountActual)"];
"1000584" [label="(Call,DEBUG_PRINT_ERROR(\"ERROR: All buffers are already used, invalid use_buf call for \"\n \"index = %u\", i))"];
"1000555" [label="(Literal,\"use_inp:: bufhdr = %p, pBuffer = %p, m_pInput_pmem[i].buffer = %p\")"];
"1000192" [label="(Call,m_pInput_pmem == NULL)"];
"1000234" [label="(Identifier,m_pInput_pmem)"];
"1000558" [label="(Call,(*bufferHdr)->pBuffer)"];
"1000268" [label="(Identifier,i)"];
"1000221" [label="(Identifier,i)"];
"1000183" [label="(Call,(struct pmem *) calloc(sizeof (struct pmem), m_sInPortDef.nBufferCountActual))"];
"1000295" [label="(Call,m_inp_mem_ptr + i)"];
"1000180" [label="(Identifier,m_inp_mem_ptr)"];
"1000556" [label="(Call,*bufferHdr)"];
"1000205" [label="(Call,sizeof (struct venc_ion))"];
"1000585" [label="(Literal,\"ERROR: All buffers are already used, invalid use_buf call for \"\n \"index = %u\")"];
"1000229" [label="(Identifier,i)"];
"1000185" [label="(Call,calloc(sizeof (struct pmem), m_sInPortDef.nBufferCountActual))"];
"1000298" [label="(Call,BITMASK_SET(&m_inp_bm_count,i))"];
"1000286" [label="(Call,i < m_sInPortDef.nBufferCountActual)"];
"1000171" [label="(Identifier,m_inp_mem_ptr)"];
"1000292" -> "1000291"  [label="AST: "];
"1000292" -> "1000295"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000295" -> "1000292"  [label="AST: "];
"1000300" -> "1000292"  [label="CFG: "];
"1000292" -> "1000592"  [label="DDG: "];
"1000292" -> "1000592"  [label="DDG: "];
"1000178" -> "1000292"  [label="DDG: "];
"1000153" -> "1000292"  [label="DDG: "];
"1000286" -> "1000292"  [label="DDG: "];
"1000292" -> "1000554"  [label="DDG: "];
"1000178" -> "1000155"  [label="AST: "];
"1000178" -> "1000180"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000180" -> "1000178"  [label="AST: "];
"1000182" -> "1000178"  [label="CFG: "];
"1000178" -> "1000592"  [label="DDG: "];
"1000178" -> "1000592"  [label="DDG: "];
"1000170" -> "1000178"  [label="DDG: "];
"1000178" -> "1000295"  [label="DDG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000175" -> "1000170"  [label="CFG: "];
"1000179" -> "1000170"  [label="CFG: "];
"1000170" -> "1000592"  [label="DDG: "];
"1000170" -> "1000592"  [label="DDG: "];
"1000170" -> "1000592"  [label="DDG: "];
"1000159" -> "1000170"  [label="DDG: "];
"1000170" -> "1000192"  [label="DDG: "];
"1000159" -> "1000155"  [label="AST: "];
"1000159" -> "1000161"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000161" -> "1000159"  [label="AST: "];
"1000171" -> "1000159"  [label="CFG: "];
"1000159" -> "1000592"  [label="DDG: "];
"1000161" -> "1000159"  [label="DDG: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000161" -> "1000592"  [label="DDG: "];
"1000163" -> "1000161"  [label="DDG: "];
"1000163" -> "1000166"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000166" -> "1000163"  [label="AST: "];
"1000163" -> "1000592"  [label="DDG: "];
"1000163" -> "1000185"  [label="DDG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000153" -> "1000154"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000157" -> "1000153"  [label="CFG: "];
"1000268" -> "1000153"  [label="CFG: "];
"1000153" -> "1000592"  [label="DDG: "];
"1000153" -> "1000592"  [label="DDG: "];
"1000153" -> "1000295"  [label="DDG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000286" -> "1000288"  [label="CFG: "];
"1000287" -> "1000286"  [label="AST: "];
"1000288" -> "1000286"  [label="AST: "];
"1000294" -> "1000286"  [label="CFG: "];
"1000585" -> "1000286"  [label="CFG: "];
"1000286" -> "1000592"  [label="DDG: "];
"1000286" -> "1000592"  [label="DDG: "];
"1000279" -> "1000286"  [label="DDG: "];
"1000270" -> "1000286"  [label="DDG: "];
"1000270" -> "1000286"  [label="DDG: "];
"1000286" -> "1000295"  [label="DDG: "];
"1000286" -> "1000298"  [label="DDG: "];
"1000286" -> "1000584"  [label="DDG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000279" -> "1000282"  [label="CFG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000282" -> "1000279"  [label="AST: "];
"1000284" -> "1000279"  [label="CFG: "];
"1000276" -> "1000279"  [label="CFG: "];
"1000279" -> "1000592"  [label="DDG: "];
"1000279" -> "1000592"  [label="DDG: "];
"1000279" -> "1000275"  [label="DDG: "];
"1000270" -> "1000279"  [label="DDG: "];
"1000279" -> "1000298"  [label="DDG: "];
"1000270" -> "1000266"  [label="AST: "];
"1000270" -> "1000272"  [label="CFG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000272" -> "1000270"  [label="AST: "];
"1000281" -> "1000270"  [label="CFG: "];
"1000287" -> "1000270"  [label="CFG: "];
"1000270" -> "1000592"  [label="DDG: "];
"1000267" -> "1000270"  [label="DDG: "];
"1000275" -> "1000270"  [label="DDG: "];
"1000223" -> "1000270"  [label="DDG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000267" -> "1000269"  [label="CFG: "];
"1000268" -> "1000267"  [label="AST: "];
"1000269" -> "1000267"  [label="AST: "];
"1000271" -> "1000267"  [label="CFG: "];
"1000275" -> "1000266"  [label="AST: "];
"1000275" -> "1000276"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000271" -> "1000275"  [label="CFG: "];
"1000223" -> "1000219"  [label="AST: "];
"1000223" -> "1000225"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000225" -> "1000223"  [label="AST: "];
"1000234" -> "1000223"  [label="CFG: "];
"1000268" -> "1000223"  [label="CFG: "];
"1000220" -> "1000223"  [label="DDG: "];
"1000228" -> "1000223"  [label="DDG: "];
"1000204" -> "1000223"  [label="DDG: "];
"1000223" -> "1000228"  [label="DDG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000220" -> "1000222"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000222" -> "1000220"  [label="AST: "];
"1000224" -> "1000220"  [label="CFG: "];
"1000228" -> "1000219"  [label="AST: "];
"1000228" -> "1000229"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000224" -> "1000228"  [label="CFG: "];
"1000204" -> "1000202"  [label="AST: "];
"1000204" -> "1000207"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000207" -> "1000204"  [label="AST: "];
"1000202" -> "1000204"  [label="CFG: "];
"1000204" -> "1000592"  [label="DDG: "];
"1000204" -> "1000202"  [label="DDG: "];
"1000185" -> "1000204"  [label="DDG: "];
"1000185" -> "1000183"  [label="AST: "];
"1000185" -> "1000188"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000188" -> "1000185"  [label="AST: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000185" -> "1000592"  [label="DDG: "];
"1000185" -> "1000183"  [label="DDG: "];
"1000554" -> "1000291"  [label="AST: "];
"1000554" -> "1000562"  [label="CFG: "];
"1000555" -> "1000554"  [label="AST: "];
"1000556" -> "1000554"  [label="AST: "];
"1000558" -> "1000554"  [label="AST: "];
"1000562" -> "1000554"  [label="AST: "];
"1000572" -> "1000554"  [label="CFG: "];
"1000554" -> "1000592"  [label="DDG: "];
"1000554" -> "1000592"  [label="DDG: "];
"1000554" -> "1000592"  [label="DDG: "];
"1000554" -> "1000592"  [label="DDG: "];
"1000302" -> "1000554"  [label="DDG: "];
"1000527" -> "1000554"  [label="DDG: "];
"1000414" -> "1000554"  [label="DDG: "];
"1000453" -> "1000554"  [label="DDG: "];
}
