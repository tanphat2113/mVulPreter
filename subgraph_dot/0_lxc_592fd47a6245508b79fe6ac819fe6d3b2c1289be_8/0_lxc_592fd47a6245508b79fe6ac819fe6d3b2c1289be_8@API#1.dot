digraph "0_lxc_592fd47a6245508b79fe6ac819fe6d3b2c1289be_8@API" {
"1000109" [label="(Call,snprintf(path, sizeof(path), \"%s/%s\", rootfs, mntent->mnt_dir))"];
"1000103" [label="(MethodParameterIn,const char *rootfs)"];
"1000107" [label="(Call,ret = snprintf(path, sizeof(path), \"%s/%s\", rootfs, mntent->mnt_dir))"];
"1000119" [label="(Call,ret >= sizeof(path))"];
"1000130" [label="(Call,mount_entry_on_generic(mntent, path, rootfs))"];
"1000129" [label="(Return,return mount_entry_on_generic(mntent, path, rootfs);)"];
"1000119" [label="(Call,ret >= sizeof(path))"];
"1000110" [label="(Identifier,path)"];
"1000103" [label="(MethodParameterIn,const char *rootfs)"];
"1000108" [label="(Identifier,ret)"];
"1000115" [label="(Call,mntent->mnt_dir)"];
"1000118" [label="(ControlStructure,if (ret >= sizeof(path)))"];
"1000129" [label="(Return,return mount_entry_on_generic(mntent, path, rootfs);)"];
"1000113" [label="(Literal,\"%s/%s\")"];
"1000111" [label="(Call,sizeof(path))"];
"1000131" [label="(Identifier,mntent)"];
"1000133" [label="(Identifier,rootfs)"];
"1000107" [label="(Call,ret = snprintf(path, sizeof(path), \"%s/%s\", rootfs, mntent->mnt_dir))"];
"1000134" [label="(MethodReturn,static int)"];
"1000104" [label="(Block,)"];
"1000102" [label="(MethodParameterIn,struct mntent *mntent)"];
"1000125" [label="(Literal,\"path name too long\")"];
"1000132" [label="(Identifier,path)"];
"1000120" [label="(Identifier,ret)"];
"1000114" [label="(Identifier,rootfs)"];
"1000130" [label="(Call,mount_entry_on_generic(mntent, path, rootfs))"];
"1000121" [label="(Call,sizeof(path))"];
"1000109" [label="(Call,snprintf(path, sizeof(path), \"%s/%s\", rootfs, mntent->mnt_dir))"];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000115"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000113" -> "1000109"  [label="AST: "];
"1000114" -> "1000109"  [label="AST: "];
"1000115" -> "1000109"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000109" -> "1000134"  [label="DDG: "];
"1000109" -> "1000134"  [label="DDG: "];
"1000109" -> "1000107"  [label="DDG: "];
"1000109" -> "1000107"  [label="DDG: "];
"1000109" -> "1000107"  [label="DDG: "];
"1000109" -> "1000107"  [label="DDG: "];
"1000103" -> "1000109"  [label="DDG: "];
"1000109" -> "1000130"  [label="DDG: "];
"1000103" -> "1000101"  [label="AST: "];
"1000103" -> "1000134"  [label="DDG: "];
"1000103" -> "1000130"  [label="DDG: "];
"1000107" -> "1000104"  [label="AST: "];
"1000108" -> "1000107"  [label="AST: "];
"1000120" -> "1000107"  [label="CFG: "];
"1000107" -> "1000134"  [label="DDG: "];
"1000107" -> "1000119"  [label="DDG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000125" -> "1000119"  [label="CFG: "];
"1000131" -> "1000119"  [label="CFG: "];
"1000119" -> "1000134"  [label="DDG: "];
"1000119" -> "1000134"  [label="DDG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000133"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000133" -> "1000130"  [label="AST: "];
"1000129" -> "1000130"  [label="CFG: "];
"1000130" -> "1000134"  [label="DDG: "];
"1000130" -> "1000134"  [label="DDG: "];
"1000130" -> "1000134"  [label="DDG: "];
"1000130" -> "1000134"  [label="DDG: "];
"1000130" -> "1000129"  [label="DDG: "];
"1000102" -> "1000130"  [label="DDG: "];
"1000129" -> "1000104"  [label="AST: "];
"1000134" -> "1000129"  [label="CFG: "];
"1000129" -> "1000134"  [label="DDG: "];
}
