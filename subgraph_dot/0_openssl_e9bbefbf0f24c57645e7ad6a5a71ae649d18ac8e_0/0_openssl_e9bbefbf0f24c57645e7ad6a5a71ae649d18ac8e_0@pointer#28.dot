digraph "0_openssl_e9bbefbf0f24c57645e7ad6a5a71ae649d18ac8e_0@pointer" {
"1000676" [label="(Call,rr->off++)"];
"1001208" [label="(Call,rr->off != 0)"];
"1000676" [label="(Call,rr->off++)"];
"1000478" [label="(Call,rr->off += n)"];
"1001207" [label="(Call,(rr->off != 0) ||\n            (rr->data[0] != SSL3_MT_CCS))"];
"1001201" [label="(Call,(rr->length != 1) || (rr->off != 0) ||\n            (rr->data[0] != SSL3_MT_CCS))"];
"1000677" [label="(Call,rr->off)"];
"1001201" [label="(Call,(rr->length != 1) || (rr->off != 0) ||\n            (rr->data[0] != SSL3_MT_CCS))"];
"1000482" [label="(Identifier,n)"];
"1001212" [label="(Literal,0)"];
"1000486" [label="(Identifier,rr)"];
"1001216" [label="(Identifier,rr)"];
"1001222" [label="(Identifier,al)"];
"1001202" [label="(Call,rr->length != 1)"];
"1000478" [label="(Call,rr->off += n)"];
"1001209" [label="(Call,rr->off)"];
"1000458" [label="(Call,memcpy(buf, &(rr->data[rr->off]), n))"];
"1001233" [label="(Identifier,s)"];
"1000479" [label="(Call,rr->off)"];
"1000672" [label="(Call,rr->data[rr->off++])"];
"1001208" [label="(Call,rr->off != 0)"];
"1001200" [label="(ControlStructure,if ((rr->length != 1) || (rr->off != 0) ||\n            (rr->data[0] != SSL3_MT_CCS)))"];
"1000472" [label="(Block,)"];
"1001522" [label="(MethodReturn,int)"];
"1000676" [label="(Call,rr->off++)"];
"1001207" [label="(Call,(rr->off != 0) ||\n            (rr->data[0] != SSL3_MT_CCS))"];
"1001213" [label="(Call,rr->data[0] != SSL3_MT_CCS)"];
"1000676" -> "1000672"  [label="AST: "];
"1000676" -> "1000677"  [label="CFG: "];
"1000677" -> "1000676"  [label="AST: "];
"1000672" -> "1000676"  [label="CFG: "];
"1000676" -> "1001522"  [label="DDG: rr->off"];
"1000676" -> "1000478"  [label="DDG: rr->off"];
"1001208" -> "1000676"  [label="DDG: rr->off"];
"1000676" -> "1001208"  [label="DDG: rr->off"];
"1001208" -> "1001207"  [label="AST: "];
"1001208" -> "1001212"  [label="CFG: "];
"1001209" -> "1001208"  [label="AST: "];
"1001212" -> "1001208"  [label="AST: "];
"1001216" -> "1001208"  [label="CFG: "];
"1001207" -> "1001208"  [label="CFG: "];
"1001208" -> "1001522"  [label="DDG: rr->off"];
"1001208" -> "1000478"  [label="DDG: rr->off"];
"1001208" -> "1001207"  [label="DDG: rr->off"];
"1001208" -> "1001207"  [label="DDG: 0"];
"1000478" -> "1000472"  [label="AST: "];
"1000478" -> "1000482"  [label="CFG: "];
"1000479" -> "1000478"  [label="AST: "];
"1000482" -> "1000478"  [label="AST: "];
"1000486" -> "1000478"  [label="CFG: "];
"1000478" -> "1001522"  [label="DDG: rr->off"];
"1000478" -> "1001522"  [label="DDG: n"];
"1000458" -> "1000478"  [label="DDG: n"];
"1001207" -> "1001201"  [label="AST: "];
"1001207" -> "1001213"  [label="CFG: "];
"1001213" -> "1001207"  [label="AST: "];
"1001201" -> "1001207"  [label="CFG: "];
"1001207" -> "1001522"  [label="DDG: rr->data[0] != SSL3_MT_CCS"];
"1001207" -> "1001522"  [label="DDG: rr->off != 0"];
"1001207" -> "1001201"  [label="DDG: rr->off != 0"];
"1001207" -> "1001201"  [label="DDG: rr->data[0] != SSL3_MT_CCS"];
"1001213" -> "1001207"  [label="DDG: rr->data[0]"];
"1001213" -> "1001207"  [label="DDG: SSL3_MT_CCS"];
"1001201" -> "1001200"  [label="AST: "];
"1001201" -> "1001202"  [label="CFG: "];
"1001202" -> "1001201"  [label="AST: "];
"1001222" -> "1001201"  [label="CFG: "];
"1001233" -> "1001201"  [label="CFG: "];
"1001201" -> "1001522"  [label="DDG: rr->length != 1"];
"1001201" -> "1001522"  [label="DDG: (rr->off != 0) ||\n            (rr->data[0] != SSL3_MT_CCS)"];
"1001201" -> "1001522"  [label="DDG: (rr->length != 1) || (rr->off != 0) ||\n            (rr->data[0] != SSL3_MT_CCS)"];
"1001202" -> "1001201"  [label="DDG: rr->length"];
"1001202" -> "1001201"  [label="DDG: 1"];
}
