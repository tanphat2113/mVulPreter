digraph "0_openmpt_61fc6d3030a4d4283105cb5fb46b27b42fa5575e_1@array" {
"1002054" [label="(Call,ConvertLoopSlice(Samples[smp], Samples[nonLooped[smp - 1]], 0, Samples[smp].nLength, false))"];
"1002038" [label="(Call,ConvertLoopSequence(Samples[smp], loopInfo[smp - 1]))"];
"1002028" [label="(Call,SampleIO(\n\t\t\t\tSampleIO::_8bit,\n\t\t\t\tSampleIO::mono,\n\t\t\t\tSampleIO::littleEndian,\n\t\t\t\tSampleIO::signedPCM)\n\t\t\t\t.ReadSample(Samples[smp], file))"];
"1002054" [label="(Call,ConvertLoopSlice(Samples[smp], Samples[nonLooped[smp - 1]], 0, Samples[smp].nLength, false))"];
"1002100" [label="(Call,ConvertLoopSlice(Samples[smp], Samples[info.nonLooped], info.loopStart, info.loopLength, false))"];
"1002079" [label="(Call,ConvertLoopSlice(Samples[smp], Samples[info.looped], info.loopStart, info.loopLength, true))"];
"1001972" [label="(Call,SetupMODPanning(true))"];
"1000135" [label="(MethodParameterIn,FileReader &file)"];
"1002116" [label="(Return,return true;)"];
"1002049" [label="(Identifier,nonLooped)"];
"1002112" [label="(Call,info.loopLength)"];
"1002118" [label="(MethodReturn,bool)"];
"1002053" [label="(Block,)"];
"1002072" [label="(JumpTarget,info :)"];
"1002066" [label="(Call,Samples[smp].nLength)"];
"1002078" [label="(Block,)"];
"1002065" [label="(Literal,0)"];
"1001973" [label="(Identifier,true)"];
"1002104" [label="(Call,Samples[info.nonLooped])"];
"1002080" [label="(Call,Samples[smp])"];
"1002091" [label="(Call,info.loopLength)"];
"1002088" [label="(Call,info.loopStart)"];
"1002032" [label="(Identifier,file)"];
"1002094" [label="(Identifier,true)"];
"1002109" [label="(Call,info.loopStart)"];
"1000137" [label="(Block,)"];
"1002117" [label="(Identifier,true)"];
"1002058" [label="(Call,Samples[nonLooped[smp - 1]])"];
"1002039" [label="(Call,Samples[smp])"];
"1000135" [label="(MethodParameterIn,FileReader &file)"];
"1002054" [label="(Call,ConvertLoopSlice(Samples[smp], Samples[nonLooped[smp - 1]], 0, Samples[smp].nLength, false))"];
"1002100" [label="(Call,ConvertLoopSlice(Samples[smp], Samples[info.nonLooped], info.loopStart, info.loopLength, false))"];
"1002101" [label="(Call,Samples[smp])"];
"1002027" [label="(Block,)"];
"1002055" [label="(Call,Samples[smp])"];
"1002029" [label="(Call,Samples[smp])"];
"1002083" [label="(Call,Samples[info.looped])"];
"1001977" [label="(Identifier,fileHeader)"];
"1002097" [label="(Identifier,info)"];
"1002028" [label="(Call,SampleIO(\n\t\t\t\tSampleIO::_8bit,\n\t\t\t\tSampleIO::mono,\n\t\t\t\tSampleIO::littleEndian,\n\t\t\t\tSampleIO::signedPCM)\n\t\t\t\t.ReadSample(Samples[smp], file))"];
"1002116" [label="(Return,return true;)"];
"1002099" [label="(Block,)"];
"1001972" [label="(Call,SetupMODPanning(true))"];
"1002071" [label="(Identifier,false)"];
"1002115" [label="(Identifier,false)"];
"1002079" [label="(Call,ConvertLoopSlice(Samples[smp], Samples[info.looped], info.loopStart, info.loopLength, true))"];
"1002020" [label="(Identifier,smp)"];
"1002038" [label="(Call,ConvertLoopSequence(Samples[smp], loopInfo[smp - 1]))"];
"1002042" [label="(Call,loopInfo[smp - 1])"];
"1002035" [label="(Identifier,smp)"];
"1002054" -> "1002053"  [label="AST: "];
"1002054" -> "1002071"  [label="CFG: "];
"1002055" -> "1002054"  [label="AST: "];
"1002058" -> "1002054"  [label="AST: "];
"1002065" -> "1002054"  [label="AST: "];
"1002066" -> "1002054"  [label="AST: "];
"1002071" -> "1002054"  [label="AST: "];
"1002072" -> "1002054"  [label="CFG: "];
"1002054" -> "1002118"  [label="DDG: ConvertLoopSlice(Samples[smp], Samples[nonLooped[smp - 1]], 0, Samples[smp].nLength, false)"];
"1002054" -> "1002118"  [label="DDG: false"];
"1002054" -> "1002118"  [label="DDG: Samples[nonLooped[smp - 1]]"];
"1002054" -> "1002118"  [label="DDG: Samples[smp]"];
"1002054" -> "1002118"  [label="DDG: Samples[smp].nLength"];
"1002054" -> "1002028"  [label="DDG: Samples[smp]"];
"1002054" -> "1002028"  [label="DDG: Samples[smp].nLength"];
"1002054" -> "1002038"  [label="DDG: Samples[smp].nLength"];
"1002038" -> "1002054"  [label="DDG: Samples[smp]"];
"1002100" -> "1002054"  [label="DDG: false"];
"1002054" -> "1002079"  [label="DDG: Samples[smp]"];
"1002054" -> "1002079"  [label="DDG: Samples[smp].nLength"];
"1002054" -> "1002100"  [label="DDG: Samples[smp]"];
"1002054" -> "1002100"  [label="DDG: Samples[smp].nLength"];
"1002054" -> "1002100"  [label="DDG: false"];
"1002038" -> "1002027"  [label="AST: "];
"1002038" -> "1002042"  [label="CFG: "];
"1002039" -> "1002038"  [label="AST: "];
"1002042" -> "1002038"  [label="AST: "];
"1002049" -> "1002038"  [label="CFG: "];
"1002038" -> "1002118"  [label="DDG: ConvertLoopSequence(Samples[smp], loopInfo[smp - 1])"];
"1002038" -> "1002118"  [label="DDG: loopInfo[smp - 1]"];
"1002038" -> "1002118"  [label="DDG: Samples[smp]"];
"1002038" -> "1002028"  [label="DDG: Samples[smp]"];
"1002028" -> "1002038"  [label="DDG: Samples[smp]"];
"1002038" -> "1002079"  [label="DDG: Samples[smp]"];
"1002038" -> "1002100"  [label="DDG: Samples[smp]"];
"1002028" -> "1002027"  [label="AST: "];
"1002028" -> "1002032"  [label="CFG: "];
"1002029" -> "1002028"  [label="AST: "];
"1002032" -> "1002028"  [label="AST: "];
"1002035" -> "1002028"  [label="CFG: "];
"1002028" -> "1002118"  [label="DDG: file"];
"1002028" -> "1002118"  [label="DDG: Samples[smp]"];
"1002028" -> "1002118"  [label="DDG: SampleIO(\n\t\t\t\tSampleIO::_8bit,\n\t\t\t\tSampleIO::mono,\n\t\t\t\tSampleIO::littleEndian,\n\t\t\t\tSampleIO::signedPCM)\n\t\t\t\t.ReadSample(Samples[smp], file)"];
"1002079" -> "1002028"  [label="DDG: Samples[smp]"];
"1002100" -> "1002028"  [label="DDG: Samples[smp]"];
"1000135" -> "1002028"  [label="DDG: file"];
"1002100" -> "1002099"  [label="AST: "];
"1002100" -> "1002115"  [label="CFG: "];
"1002101" -> "1002100"  [label="AST: "];
"1002104" -> "1002100"  [label="AST: "];
"1002109" -> "1002100"  [label="AST: "];
"1002112" -> "1002100"  [label="AST: "];
"1002115" -> "1002100"  [label="AST: "];
"1002020" -> "1002100"  [label="CFG: "];
"1002100" -> "1002118"  [label="DDG: info.loopLength"];
"1002100" -> "1002118"  [label="DDG: ConvertLoopSlice(Samples[smp], Samples[info.nonLooped], info.loopStart, info.loopLength, false)"];
"1002100" -> "1002118"  [label="DDG: Samples[info.nonLooped]"];
"1002100" -> "1002118"  [label="DDG: info.loopStart"];
"1002100" -> "1002118"  [label="DDG: false"];
"1002100" -> "1002118"  [label="DDG: Samples[smp]"];
"1002100" -> "1002079"  [label="DDG: info.loopStart"];
"1002100" -> "1002079"  [label="DDG: info.loopLength"];
"1002079" -> "1002100"  [label="DDG: Samples[smp]"];
"1002079" -> "1002100"  [label="DDG: info.loopStart"];
"1002079" -> "1002100"  [label="DDG: info.loopLength"];
"1002079" -> "1002078"  [label="AST: "];
"1002079" -> "1002094"  [label="CFG: "];
"1002080" -> "1002079"  [label="AST: "];
"1002083" -> "1002079"  [label="AST: "];
"1002088" -> "1002079"  [label="AST: "];
"1002091" -> "1002079"  [label="AST: "];
"1002094" -> "1002079"  [label="AST: "];
"1002097" -> "1002079"  [label="CFG: "];
"1002079" -> "1002118"  [label="DDG: info.loopLength"];
"1002079" -> "1002118"  [label="DDG: Samples[info.looped]"];
"1002079" -> "1002118"  [label="DDG: info.loopStart"];
"1002079" -> "1002118"  [label="DDG: ConvertLoopSlice(Samples[smp], Samples[info.looped], info.loopStart, info.loopLength, true)"];
"1002079" -> "1002118"  [label="DDG: Samples[smp]"];
"1002079" -> "1002118"  [label="DDG: true"];
"1001972" -> "1002079"  [label="DDG: true"];
"1002079" -> "1002116"  [label="DDG: true"];
"1001972" -> "1000137"  [label="AST: "];
"1001972" -> "1001973"  [label="CFG: "];
"1001973" -> "1001972"  [label="AST: "];
"1001977" -> "1001972"  [label="CFG: "];
"1001972" -> "1002118"  [label="DDG: SetupMODPanning(true)"];
"1001972" -> "1002118"  [label="DDG: true"];
"1001972" -> "1002116"  [label="DDG: true"];
"1000135" -> "1000134"  [label="AST: "];
"1000135" -> "1002118"  [label="DDG: file"];
"1002116" -> "1000137"  [label="AST: "];
"1002116" -> "1002117"  [label="CFG: "];
"1002117" -> "1002116"  [label="AST: "];
"1002118" -> "1002116"  [label="CFG: "];
"1002116" -> "1002118"  [label="DDG: <RET>"];
"1002117" -> "1002116"  [label="DDG: true"];
}
