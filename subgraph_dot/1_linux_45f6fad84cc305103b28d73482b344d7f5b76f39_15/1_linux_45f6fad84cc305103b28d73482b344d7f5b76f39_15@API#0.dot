digraph "1_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_15@API" {
"1000162" [label="(Call,memset(&fl6, 0, sizeof(fl6)))"];
"1000508" [label="(Call,fl6_update_dst(&fl6, np->opt, &final))"];
"1000506" [label="(Call,final_p = fl6_update_dst(&fl6, np->opt, &final))"];
"1000523" [label="(Call,ip6_dst_lookup_flow(sk, &fl6, final_p))"];
"1000521" [label="(Call,dst = ip6_dst_lookup_flow(sk, &fl6, final_p))"];
"1000529" [label="(Call,IS_ERR(dst))"];
"1000534" [label="(Call,PTR_ERR(dst))"];
"1000532" [label="(Call,err = PTR_ERR(dst))"];
"1000714" [label="(Return,return err;)"];
"1000569" [label="(Call,__ip6_dst_store(sk, dst, NULL, NULL))"];
"1000595" [label="(Call,tcp_fetch_timewait_stamp(sk, dst))"];
"1000642" [label="(Call,tcp_set_state(sk, TCP_SYN_SENT))"];
"1000647" [label="(Call,inet6_hash_connect(&tcp_death_row, sk))"];
"1000645" [label="(Call,err = inet6_hash_connect(&tcp_death_row, sk))"];
"1000654" [label="(Call,sk_set_txhash(sk))"];
"1000690" [label="(Call,tcp_connect(sk))"];
"1000688" [label="(Call,err = tcp_connect(sk))"];
"1000698" [label="(Call,tcp_set_state(sk, TCP_CLOSE))"];
"1000701" [label="(Call,__sk_dst_reset(sk))"];
"1000518" [label="(Call,flowi6_to_flowi(&fl6))"];
"1000516" [label="(Call,security_sk_classify_flow(sk, flowi6_to_flowi(&fl6)))"];
"1000642" [label="(Call,tcp_set_state(sk, TCP_SYN_SENT))"];
"1000571" [label="(Identifier,dst)"];
"1000691" [label="(Identifier,sk)"];
"1000170" [label="(Identifier,np)"];
"1000534" [label="(Call,PTR_ERR(dst))"];
"1000597" [label="(Identifier,dst)"];
"1000715" [label="(Identifier,err)"];
"1000530" [label="(Identifier,dst)"];
"1000688" [label="(Call,err = tcp_connect(sk))"];
"1000574" [label="(ControlStructure,if (tcp_death_row.sysctl_tw_recycle &&\n\t    !tp->rx_opt.ts_recent_stamp &&\n\t    ipv6_addr_equal(&fl6.daddr, &sk->sk_v6_daddr)))"];
"1000650" [label="(Identifier,sk)"];
"1000698" [label="(Call,tcp_set_state(sk, TCP_CLOSE))"];
"1000572" [label="(Identifier,NULL)"];
"1000532" [label="(Call,err = PTR_ERR(dst))"];
"1000648" [label="(Call,&tcp_death_row)"];
"1000693" [label="(Identifier,err)"];
"1000644" [label="(Identifier,TCP_SYN_SENT)"];
"1000524" [label="(Identifier,sk)"];
"1000109" [label="(Block,)"];
"1000519" [label="(Call,&fl6)"];
"1000535" [label="(Identifier,dst)"];
"1000508" [label="(Call,fl6_update_dst(&fl6, np->opt, &final))"];
"1000655" [label="(Identifier,sk)"];
"1000397" [label="(Call,err = tcp_v4_connect(sk, (struct sockaddr *)&sin, sizeof(sin)))"];
"1000646" [label="(Identifier,err)"];
"1000600" [label="(Identifier,icsk)"];
"1000506" [label="(Call,final_p = fl6_update_dst(&fl6, np->opt, &final))"];
"1000702" [label="(Identifier,sk)"];
"1000536" [label="(ControlStructure,goto failure;)"];
"1000701" [label="(Call,__sk_dst_reset(sk))"];
"1000196" [label="(Call,fl6_sock_lookup(sk, fl6.flowlabel))"];
"1000700" [label="(Identifier,TCP_CLOSE)"];
"1000134" [label="(Call,tcp_sk(sk))"];
"1000162" [label="(Call,memset(&fl6, 0, sizeof(fl6)))"];
"1000166" [label="(Call,sizeof(fl6))"];
"1000522" [label="(Identifier,dst)"];
"1000529" [label="(Call,IS_ERR(dst))"];
"1000643" [label="(Identifier,sk)"];
"1000569" [label="(Call,__ip6_dst_store(sk, dst, NULL, NULL))"];
"1000511" [label="(Call,np->opt)"];
"1000595" [label="(Call,tcp_fetch_timewait_stamp(sk, dst))"];
"1000539" [label="(Identifier,saddr)"];
"1000596" [label="(Identifier,sk)"];
"1000528" [label="(ControlStructure,if (IS_ERR(dst)))"];
"1000577" [label="(Identifier,tcp_death_row)"];
"1000165" [label="(Literal,0)"];
"1000517" [label="(Identifier,sk)"];
"1000516" [label="(Call,security_sk_classify_flow(sk, flowi6_to_flowi(&fl6)))"];
"1000570" [label="(Identifier,sk)"];
"1000652" [label="(Identifier,err)"];
"1000163" [label="(Call,&fl6)"];
"1000507" [label="(Identifier,final_p)"];
"1000689" [label="(Identifier,err)"];
"1000660" [label="(Identifier,tp)"];
"1000699" [label="(Identifier,sk)"];
"1000527" [label="(Identifier,final_p)"];
"1000106" [label="(MethodParameterIn,struct sock *sk)"];
"1000533" [label="(Identifier,err)"];
"1000714" [label="(Return,return err;)"];
"1000525" [label="(Call,&fl6)"];
"1000645" [label="(Call,err = inet6_hash_connect(&tcp_death_row, sk))"];
"1000523" [label="(Call,ip6_dst_lookup_flow(sk, &fl6, final_p))"];
"1000514" [label="(Call,&final)"];
"1000703" [label="(JumpTarget,failure:)"];
"1000647" [label="(Call,inet6_hash_connect(&tcp_death_row, sk))"];
"1000521" [label="(Call,dst = ip6_dst_lookup_flow(sk, &fl6, final_p))"];
"1000509" [label="(Call,&fl6)"];
"1000654" [label="(Call,sk_set_txhash(sk))"];
"1000518" [label="(Call,flowi6_to_flowi(&fl6))"];
"1000690" [label="(Call,tcp_connect(sk))"];
"1000573" [label="(Identifier,NULL)"];
"1000716" [label="(MethodReturn,static int)"];
"1000531" [label="(Block,)"];
"1000162" -> "1000109"  [label="AST: "];
"1000162" -> "1000166"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000165" -> "1000162"  [label="AST: "];
"1000166" -> "1000162"  [label="AST: "];
"1000170" -> "1000162"  [label="CFG: "];
"1000162" -> "1000716"  [label="DDG: &fl6"];
"1000162" -> "1000716"  [label="DDG: memset(&fl6, 0, sizeof(fl6))"];
"1000162" -> "1000508"  [label="DDG: &fl6"];
"1000508" -> "1000506"  [label="AST: "];
"1000508" -> "1000514"  [label="CFG: "];
"1000509" -> "1000508"  [label="AST: "];
"1000511" -> "1000508"  [label="AST: "];
"1000514" -> "1000508"  [label="AST: "];
"1000506" -> "1000508"  [label="CFG: "];
"1000508" -> "1000716"  [label="DDG: &final"];
"1000508" -> "1000716"  [label="DDG: np->opt"];
"1000508" -> "1000506"  [label="DDG: &fl6"];
"1000508" -> "1000506"  [label="DDG: np->opt"];
"1000508" -> "1000506"  [label="DDG: &final"];
"1000508" -> "1000518"  [label="DDG: &fl6"];
"1000506" -> "1000109"  [label="AST: "];
"1000507" -> "1000506"  [label="AST: "];
"1000517" -> "1000506"  [label="CFG: "];
"1000506" -> "1000716"  [label="DDG: fl6_update_dst(&fl6, np->opt, &final)"];
"1000506" -> "1000523"  [label="DDG: final_p"];
"1000523" -> "1000521"  [label="AST: "];
"1000523" -> "1000527"  [label="CFG: "];
"1000524" -> "1000523"  [label="AST: "];
"1000525" -> "1000523"  [label="AST: "];
"1000527" -> "1000523"  [label="AST: "];
"1000521" -> "1000523"  [label="CFG: "];
"1000523" -> "1000716"  [label="DDG: &fl6"];
"1000523" -> "1000716"  [label="DDG: sk"];
"1000523" -> "1000716"  [label="DDG: final_p"];
"1000523" -> "1000521"  [label="DDG: sk"];
"1000523" -> "1000521"  [label="DDG: &fl6"];
"1000523" -> "1000521"  [label="DDG: final_p"];
"1000516" -> "1000523"  [label="DDG: sk"];
"1000106" -> "1000523"  [label="DDG: sk"];
"1000518" -> "1000523"  [label="DDG: &fl6"];
"1000523" -> "1000569"  [label="DDG: sk"];
"1000521" -> "1000109"  [label="AST: "];
"1000522" -> "1000521"  [label="AST: "];
"1000530" -> "1000521"  [label="CFG: "];
"1000521" -> "1000716"  [label="DDG: ip6_dst_lookup_flow(sk, &fl6, final_p)"];
"1000521" -> "1000529"  [label="DDG: dst"];
"1000529" -> "1000528"  [label="AST: "];
"1000529" -> "1000530"  [label="CFG: "];
"1000530" -> "1000529"  [label="AST: "];
"1000533" -> "1000529"  [label="CFG: "];
"1000539" -> "1000529"  [label="CFG: "];
"1000529" -> "1000716"  [label="DDG: IS_ERR(dst)"];
"1000529" -> "1000534"  [label="DDG: dst"];
"1000529" -> "1000569"  [label="DDG: dst"];
"1000534" -> "1000532"  [label="AST: "];
"1000534" -> "1000535"  [label="CFG: "];
"1000535" -> "1000534"  [label="AST: "];
"1000532" -> "1000534"  [label="CFG: "];
"1000534" -> "1000716"  [label="DDG: dst"];
"1000534" -> "1000532"  [label="DDG: dst"];
"1000532" -> "1000531"  [label="AST: "];
"1000533" -> "1000532"  [label="AST: "];
"1000536" -> "1000532"  [label="CFG: "];
"1000532" -> "1000716"  [label="DDG: err"];
"1000532" -> "1000716"  [label="DDG: PTR_ERR(dst)"];
"1000532" -> "1000714"  [label="DDG: err"];
"1000714" -> "1000109"  [label="AST: "];
"1000714" -> "1000715"  [label="CFG: "];
"1000715" -> "1000714"  [label="AST: "];
"1000716" -> "1000714"  [label="CFG: "];
"1000714" -> "1000716"  [label="DDG: <RET>"];
"1000715" -> "1000714"  [label="DDG: err"];
"1000397" -> "1000714"  [label="DDG: err"];
"1000645" -> "1000714"  [label="DDG: err"];
"1000688" -> "1000714"  [label="DDG: err"];
"1000569" -> "1000109"  [label="AST: "];
"1000569" -> "1000573"  [label="CFG: "];
"1000570" -> "1000569"  [label="AST: "];
"1000571" -> "1000569"  [label="AST: "];
"1000572" -> "1000569"  [label="AST: "];
"1000573" -> "1000569"  [label="AST: "];
"1000577" -> "1000569"  [label="CFG: "];
"1000569" -> "1000716"  [label="DDG: dst"];
"1000569" -> "1000716"  [label="DDG: __ip6_dst_store(sk, dst, NULL, NULL)"];
"1000569" -> "1000716"  [label="DDG: NULL"];
"1000106" -> "1000569"  [label="DDG: sk"];
"1000569" -> "1000595"  [label="DDG: sk"];
"1000569" -> "1000595"  [label="DDG: dst"];
"1000569" -> "1000642"  [label="DDG: sk"];
"1000595" -> "1000574"  [label="AST: "];
"1000595" -> "1000597"  [label="CFG: "];
"1000596" -> "1000595"  [label="AST: "];
"1000597" -> "1000595"  [label="AST: "];
"1000600" -> "1000595"  [label="CFG: "];
"1000595" -> "1000716"  [label="DDG: tcp_fetch_timewait_stamp(sk, dst)"];
"1000595" -> "1000716"  [label="DDG: dst"];
"1000106" -> "1000595"  [label="DDG: sk"];
"1000595" -> "1000642"  [label="DDG: sk"];
"1000642" -> "1000109"  [label="AST: "];
"1000642" -> "1000644"  [label="CFG: "];
"1000643" -> "1000642"  [label="AST: "];
"1000644" -> "1000642"  [label="AST: "];
"1000646" -> "1000642"  [label="CFG: "];
"1000642" -> "1000716"  [label="DDG: TCP_SYN_SENT"];
"1000642" -> "1000716"  [label="DDG: tcp_set_state(sk, TCP_SYN_SENT)"];
"1000106" -> "1000642"  [label="DDG: sk"];
"1000642" -> "1000647"  [label="DDG: sk"];
"1000647" -> "1000645"  [label="AST: "];
"1000647" -> "1000650"  [label="CFG: "];
"1000648" -> "1000647"  [label="AST: "];
"1000650" -> "1000647"  [label="AST: "];
"1000645" -> "1000647"  [label="CFG: "];
"1000647" -> "1000716"  [label="DDG: &tcp_death_row"];
"1000647" -> "1000645"  [label="DDG: &tcp_death_row"];
"1000647" -> "1000645"  [label="DDG: sk"];
"1000106" -> "1000647"  [label="DDG: sk"];
"1000647" -> "1000654"  [label="DDG: sk"];
"1000647" -> "1000698"  [label="DDG: sk"];
"1000645" -> "1000109"  [label="AST: "];
"1000646" -> "1000645"  [label="AST: "];
"1000652" -> "1000645"  [label="CFG: "];
"1000645" -> "1000716"  [label="DDG: err"];
"1000645" -> "1000716"  [label="DDG: inet6_hash_connect(&tcp_death_row, sk)"];
"1000654" -> "1000109"  [label="AST: "];
"1000654" -> "1000655"  [label="CFG: "];
"1000655" -> "1000654"  [label="AST: "];
"1000660" -> "1000654"  [label="CFG: "];
"1000654" -> "1000716"  [label="DDG: sk_set_txhash(sk)"];
"1000106" -> "1000654"  [label="DDG: sk"];
"1000654" -> "1000690"  [label="DDG: sk"];
"1000690" -> "1000688"  [label="AST: "];
"1000690" -> "1000691"  [label="CFG: "];
"1000691" -> "1000690"  [label="AST: "];
"1000688" -> "1000690"  [label="CFG: "];
"1000690" -> "1000716"  [label="DDG: sk"];
"1000690" -> "1000688"  [label="DDG: sk"];
"1000106" -> "1000690"  [label="DDG: sk"];
"1000690" -> "1000698"  [label="DDG: sk"];
"1000688" -> "1000109"  [label="AST: "];
"1000689" -> "1000688"  [label="AST: "];
"1000693" -> "1000688"  [label="CFG: "];
"1000688" -> "1000716"  [label="DDG: err"];
"1000688" -> "1000716"  [label="DDG: tcp_connect(sk)"];
"1000698" -> "1000109"  [label="AST: "];
"1000698" -> "1000700"  [label="CFG: "];
"1000699" -> "1000698"  [label="AST: "];
"1000700" -> "1000698"  [label="AST: "];
"1000702" -> "1000698"  [label="CFG: "];
"1000698" -> "1000716"  [label="DDG: TCP_CLOSE"];
"1000698" -> "1000716"  [label="DDG: tcp_set_state(sk, TCP_CLOSE)"];
"1000106" -> "1000698"  [label="DDG: sk"];
"1000698" -> "1000701"  [label="DDG: sk"];
"1000701" -> "1000109"  [label="AST: "];
"1000701" -> "1000702"  [label="CFG: "];
"1000702" -> "1000701"  [label="AST: "];
"1000703" -> "1000701"  [label="CFG: "];
"1000701" -> "1000716"  [label="DDG: __sk_dst_reset(sk)"];
"1000701" -> "1000716"  [label="DDG: sk"];
"1000106" -> "1000701"  [label="DDG: sk"];
"1000518" -> "1000516"  [label="AST: "];
"1000518" -> "1000519"  [label="CFG: "];
"1000519" -> "1000518"  [label="AST: "];
"1000516" -> "1000518"  [label="CFG: "];
"1000518" -> "1000516"  [label="DDG: &fl6"];
"1000516" -> "1000109"  [label="AST: "];
"1000517" -> "1000516"  [label="AST: "];
"1000522" -> "1000516"  [label="CFG: "];
"1000516" -> "1000716"  [label="DDG: flowi6_to_flowi(&fl6)"];
"1000516" -> "1000716"  [label="DDG: security_sk_classify_flow(sk, flowi6_to_flowi(&fl6))"];
"1000196" -> "1000516"  [label="DDG: sk"];
"1000134" -> "1000516"  [label="DDG: sk"];
"1000106" -> "1000516"  [label="DDG: sk"];
}
