digraph "0_haproxy_b4d05093bc89f71377230228007e69a1434c1a0c_0@pointer" {
"1000549" [label="(Call,http_resync_states(s))"];
"1000134" [label="(MethodParameterIn,struct session *s)"];
"1000574" [label="(Call,http_capture_bad_message(&s->fe->invalid_req, s, msg, old_state, s->be))"];
"1000835" [label="(Call,http_error_message(s, HTTP_ERR_400))"];
"1000831" [label="(Call,stream_int_retnclose(req->prod, http_error_message(s, HTTP_ERR_400)))"];
"1000920" [label="(Call,http_error_message(s, HTTP_ERR_502))"];
"1000916" [label="(Call,stream_int_retnclose(req->prod, http_error_message(s, HTTP_ERR_502)))"];
"1000556" [label="(Identifier,msg)"];
"1000433" [label="(Call,http_capture_bad_message(&s->fe->invalid_req, s, msg, HTTP_MSG_CHUNK_CRLF, s->be))"];
"1000496" [label="(Call,old_state = msg->msg_state)"];
"1000837" [label="(Identifier,HTTP_ERR_400)"];
"1000479" [label="(Call,http_capture_bad_message(&s->fe->invalid_req, s, msg, HTTP_MSG_TRAILERS, s->be))"];
"1000471" [label="(Call,session_inc_http_err_ctr(s))"];
"1000835" [label="(Call,http_error_message(s, HTTP_ERR_400))"];
"1000583" [label="(Identifier,old_state)"];
"1000197" [label="(Call,http_resync_states(s))"];
"1000587" [label="(ControlStructure,goto return_bad_req;)"];
"1000425" [label="(Call,session_inc_http_err_ctr(s))"];
"1000917" [label="(Call,req->prod)"];
"1000925" [label="(Identifier,req)"];
"1000836" [label="(Identifier,s)"];
"1000840" [label="(Identifier,req)"];
"1000379" [label="(Call,session_inc_http_err_ctr(s))"];
"1000387" [label="(Call,http_capture_bad_message(&s->fe->invalid_req, s, msg, HTTP_MSG_CHUNK_SIZE, s->be))"];
"1001006" [label="(MethodReturn,int)"];
"1000582" [label="(Identifier,msg)"];
"1000916" [label="(Call,stream_int_retnclose(req->prod, http_error_message(s, HTTP_ERR_502)))"];
"1000910" [label="(Block,)"];
"1000548" [label="(ControlStructure,if (http_resync_states(s)))"];
"1000831" [label="(Call,stream_int_retnclose(req->prod, http_error_message(s, HTTP_ERR_400)))"];
"1000568" [label="(ControlStructure,if (msg->err_pos >= 0))"];
"1000575" [label="(Call,&s->fe->invalid_req)"];
"1000581" [label="(Identifier,s)"];
"1000825" [label="(Block,)"];
"1000366" [label="(Call,http_parse_chunk_size(msg))"];
"1000550" [label="(Identifier,s)"];
"1000921" [label="(Identifier,s)"];
"1000922" [label="(Identifier,HTTP_ERR_502)"];
"1000594" [label="(Identifier,s)"];
"1000458" [label="(Call,http_forward_trailers(msg))"];
"1000134" [label="(MethodParameterIn,struct session *s)"];
"1000832" [label="(Call,req->prod)"];
"1000574" [label="(Call,http_capture_bad_message(&s->fe->invalid_req, s, msg, old_state, s->be))"];
"1000584" [label="(Call,s->be)"];
"1000920" [label="(Call,http_error_message(s, HTTP_ERR_502))"];
"1000549" [label="(Call,http_resync_states(s))"];
"1000412" [label="(Call,http_skip_chunk_crlf(msg))"];
"1000146" [label="(Call,*msg = &s->txn.req)"];
"1000549" -> "1000548"  [label="AST: "];
"1000549" -> "1000550"  [label="CFG: "];
"1000550" -> "1000549"  [label="AST: "];
"1000556" -> "1000549"  [label="CFG: "];
"1000594" -> "1000549"  [label="CFG: "];
"1000549" -> "1001006"  [label="DDG: s"];
"1000549" -> "1001006"  [label="DDG: http_resync_states(s)"];
"1000134" -> "1000549"  [label="DDG: s"];
"1000549" -> "1000574"  [label="DDG: s"];
"1000549" -> "1000835"  [label="DDG: s"];
"1000549" -> "1000920"  [label="DDG: s"];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1001006"  [label="DDG: s"];
"1000134" -> "1000197"  [label="DDG: s"];
"1000134" -> "1000379"  [label="DDG: s"];
"1000134" -> "1000387"  [label="DDG: s"];
"1000134" -> "1000425"  [label="DDG: s"];
"1000134" -> "1000433"  [label="DDG: s"];
"1000134" -> "1000471"  [label="DDG: s"];
"1000134" -> "1000479"  [label="DDG: s"];
"1000134" -> "1000574"  [label="DDG: s"];
"1000134" -> "1000835"  [label="DDG: s"];
"1000134" -> "1000920"  [label="DDG: s"];
"1000574" -> "1000568"  [label="AST: "];
"1000574" -> "1000584"  [label="CFG: "];
"1000575" -> "1000574"  [label="AST: "];
"1000581" -> "1000574"  [label="AST: "];
"1000582" -> "1000574"  [label="AST: "];
"1000583" -> "1000574"  [label="AST: "];
"1000584" -> "1000574"  [label="AST: "];
"1000587" -> "1000574"  [label="CFG: "];
"1000574" -> "1001006"  [label="DDG: &s->fe->invalid_req"];
"1000574" -> "1001006"  [label="DDG: old_state"];
"1000574" -> "1001006"  [label="DDG: s->be"];
"1000574" -> "1001006"  [label="DDG: http_capture_bad_message(&s->fe->invalid_req, s, msg, old_state, s->be)"];
"1000574" -> "1001006"  [label="DDG: msg"];
"1000574" -> "1001006"  [label="DDG: s"];
"1000458" -> "1000574"  [label="DDG: msg"];
"1000412" -> "1000574"  [label="DDG: msg"];
"1000366" -> "1000574"  [label="DDG: msg"];
"1000146" -> "1000574"  [label="DDG: msg"];
"1000496" -> "1000574"  [label="DDG: old_state"];
"1000574" -> "1000835"  [label="DDG: s"];
"1000835" -> "1000831"  [label="AST: "];
"1000835" -> "1000837"  [label="CFG: "];
"1000836" -> "1000835"  [label="AST: "];
"1000837" -> "1000835"  [label="AST: "];
"1000831" -> "1000835"  [label="CFG: "];
"1000835" -> "1001006"  [label="DDG: s"];
"1000835" -> "1001006"  [label="DDG: HTTP_ERR_400"];
"1000835" -> "1000831"  [label="DDG: s"];
"1000835" -> "1000831"  [label="DDG: HTTP_ERR_400"];
"1000479" -> "1000835"  [label="DDG: s"];
"1000387" -> "1000835"  [label="DDG: s"];
"1000471" -> "1000835"  [label="DDG: s"];
"1000433" -> "1000835"  [label="DDG: s"];
"1000379" -> "1000835"  [label="DDG: s"];
"1000425" -> "1000835"  [label="DDG: s"];
"1000831" -> "1000825"  [label="AST: "];
"1000832" -> "1000831"  [label="AST: "];
"1000840" -> "1000831"  [label="CFG: "];
"1000831" -> "1001006"  [label="DDG: http_error_message(s, HTTP_ERR_400)"];
"1000831" -> "1001006"  [label="DDG: req->prod"];
"1000831" -> "1001006"  [label="DDG: stream_int_retnclose(req->prod, http_error_message(s, HTTP_ERR_400))"];
"1000920" -> "1000916"  [label="AST: "];
"1000920" -> "1000922"  [label="CFG: "];
"1000921" -> "1000920"  [label="AST: "];
"1000922" -> "1000920"  [label="AST: "];
"1000916" -> "1000920"  [label="CFG: "];
"1000920" -> "1001006"  [label="DDG: s"];
"1000920" -> "1001006"  [label="DDG: HTTP_ERR_502"];
"1000920" -> "1000916"  [label="DDG: s"];
"1000920" -> "1000916"  [label="DDG: HTTP_ERR_502"];
"1000916" -> "1000910"  [label="AST: "];
"1000917" -> "1000916"  [label="AST: "];
"1000925" -> "1000916"  [label="CFG: "];
"1000916" -> "1001006"  [label="DDG: http_error_message(s, HTTP_ERR_502)"];
"1000916" -> "1001006"  [label="DDG: stream_int_retnclose(req->prod, http_error_message(s, HTTP_ERR_502))"];
"1000916" -> "1001006"  [label="DDG: req->prod"];
}
