digraph "0_Chrome_133bc5c262b2555af223263452e9875a95db9eb7@API" {
"1000276" [label="(Call,ThreadSafeMatch(tag_name, SVGNames::svgTag))"];
"1000267" [label="(Call,& tag_name = token.Data())"];
"1000118" [label="(Call,ThreadSafeMatch(tag_name, SVGNames::svgTag))"];
"1000114" [label="(Call,& tag_name = token.Data())"];
"1000272" [label="(Call,namespace_stack_.back() == SVG &&\n          ThreadSafeMatch(tag_name, SVGNames::svgTag))"];
"1000271" [label="(Call,(namespace_stack_.back() == SVG &&\n          ThreadSafeMatch(tag_name, SVGNames::svgTag)) ||\n         (namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)) ||\n        IsHTMLIntegrationPointForEndTag(token) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token)))"];
"1000284" [label="(Call,ThreadSafeMatch(tag_name, MathMLNames::mathTag))"];
"1000280" [label="(Call,namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag))"];
"1000279" [label="(Call,(namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)) ||\n        IsHTMLIntegrationPointForEndTag(token) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token)))"];
"1000302" [label="(Call,ThreadSafeMatch(tag_name, scriptTag))"];
"1000315" [label="(Call,ThreadSafeMatch(tag_name, selectTag))"];
"1000323" [label="(Call,ThreadSafeMatch(tag_name, styleTag))"];
"1000281" [label="(Call,namespace_stack_.back() == kMathML)"];
"1000273" [label="(Call,namespace_stack_.back() == SVG)"];
"1000282" [label="(Call,namespace_stack_.back())"];
"1000112" [label="(Block,)"];
"1000269" [label="(Call,token.Data())"];
"1000116" [label="(Call,token.Data())"];
"1000301" [label="(ControlStructure,if (ThreadSafeMatch(tag_name, scriptTag)))"];
"1000323" [label="(Call,ThreadSafeMatch(tag_name, styleTag))"];
"1000303" [label="(Identifier,tag_name)"];
"1000335" [label="(MethodReturn,HTMLTreeBuilderSimulator::SimulatedToken)"];
"1000114" [label="(Call,& tag_name = token.Data())"];
"1000286" [label="(Identifier,MathMLNames::mathTag)"];
"1000124" [label="(Call,ThreadSafeMatch(tag_name, MathMLNames::mathTag))"];
"1000320" [label="(Identifier,in_select_insertion_mode_)"];
"1000125" [label="(Identifier,tag_name)"];
"1000272" [label="(Call,namespace_stack_.back() == SVG &&\n          ThreadSafeMatch(tag_name, SVGNames::svgTag))"];
"1000285" [label="(Identifier,tag_name)"];
"1000316" [label="(Identifier,tag_name)"];
"1000324" [label="(Identifier,tag_name)"];
"1000289" [label="(Identifier,token)"];
"1000315" [label="(Call,ThreadSafeMatch(tag_name, selectTag))"];
"1000327" [label="(Identifier,simulated_token)"];
"1000302" [label="(Call,ThreadSafeMatch(tag_name, scriptTag))"];
"1000322" [label="(ControlStructure,if (ThreadSafeMatch(tag_name, styleTag)))"];
"1000300" [label="(Call,namespace_stack_.pop_back())"];
"1000117" [label="(ControlStructure,if (ThreadSafeMatch(tag_name, SVGNames::svgTag)))"];
"1000274" [label="(Call,namespace_stack_.back())"];
"1000119" [label="(Identifier,tag_name)"];
"1000115" [label="(Identifier,tag_name)"];
"1000270" [label="(ControlStructure,if ((namespace_stack_.back() == SVG &&\n          ThreadSafeMatch(tag_name, SVGNames::svgTag)) ||\n         (namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)) ||\n        IsHTMLIntegrationPointForEndTag(token) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token))))"];
"1000166" [label="(Call,ThreadSafeMatch(tag_name, scriptTag))"];
"1000276" [label="(Call,ThreadSafeMatch(tag_name, SVGNames::svgTag))"];
"1000330" [label="(Call,InForeignContent())"];
"1000118" [label="(Call,ThreadSafeMatch(tag_name, SVGNames::svgTag))"];
"1000202" [label="(Call,ThreadSafeMatch(tag_name, styleTag))"];
"1000287" [label="(Call,IsHTMLIntegrationPointForEndTag(token) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token)))"];
"1000271" [label="(Call,(namespace_stack_.back() == SVG &&\n          ThreadSafeMatch(tag_name, SVGNames::svgTag)) ||\n         (namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)) ||\n        IsHTMLIntegrationPointForEndTag(token) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token)))"];
"1000236" [label="(Call,ThreadSafeMatch(tag_name, selectTag))"];
"1000308" [label="(Call,InForeignContent())"];
"1000278" [label="(Identifier,SVGNames::svgTag)"];
"1000120" [label="(Identifier,SVGNames::svgTag)"];
"1000267" [label="(Call,& tag_name = token.Data())"];
"1000325" [label="(Identifier,styleTag)"];
"1000122" [label="(Identifier,SVG)"];
"1000279" [label="(Call,(namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)) ||\n        IsHTMLIntegrationPointForEndTag(token) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token)))"];
"1000268" [label="(Identifier,tag_name)"];
"1000280" [label="(Call,namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag))"];
"1000265" [label="(Block,)"];
"1000317" [label="(Identifier,selectTag)"];
"1000284" [label="(Call,ThreadSafeMatch(tag_name, MathMLNames::mathTag))"];
"1000304" [label="(Identifier,scriptTag)"];
"1000314" [label="(ControlStructure,if (ThreadSafeMatch(tag_name, selectTag)))"];
"1000277" [label="(Identifier,tag_name)"];
"1000276" -> "1000272"  [label="AST: "];
"1000276" -> "1000278"  [label="CFG: "];
"1000277" -> "1000276"  [label="AST: "];
"1000278" -> "1000276"  [label="AST: "];
"1000272" -> "1000276"  [label="CFG: "];
"1000276" -> "1000335"  [label="DDG: SVGNames::svgTag"];
"1000276" -> "1000272"  [label="DDG: tag_name"];
"1000276" -> "1000272"  [label="DDG: SVGNames::svgTag"];
"1000267" -> "1000276"  [label="DDG: tag_name"];
"1000118" -> "1000276"  [label="DDG: SVGNames::svgTag"];
"1000276" -> "1000284"  [label="DDG: tag_name"];
"1000276" -> "1000302"  [label="DDG: tag_name"];
"1000267" -> "1000265"  [label="AST: "];
"1000267" -> "1000269"  [label="CFG: "];
"1000268" -> "1000267"  [label="AST: "];
"1000269" -> "1000267"  [label="AST: "];
"1000274" -> "1000267"  [label="CFG: "];
"1000267" -> "1000335"  [label="DDG: token.Data()"];
"1000267" -> "1000284"  [label="DDG: tag_name"];
"1000267" -> "1000302"  [label="DDG: tag_name"];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="AST: "];
"1000122" -> "1000118"  [label="CFG: "];
"1000125" -> "1000118"  [label="CFG: "];
"1000118" -> "1000335"  [label="DDG: ThreadSafeMatch(tag_name, SVGNames::svgTag)"];
"1000118" -> "1000335"  [label="DDG: SVGNames::svgTag"];
"1000114" -> "1000118"  [label="DDG: tag_name"];
"1000118" -> "1000124"  [label="DDG: tag_name"];
"1000118" -> "1000272"  [label="DDG: ThreadSafeMatch(tag_name, SVGNames::svgTag)"];
"1000114" -> "1000112"  [label="AST: "];
"1000114" -> "1000116"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000119" -> "1000114"  [label="CFG: "];
"1000114" -> "1000335"  [label="DDG: token.Data()"];
"1000272" -> "1000271"  [label="AST: "];
"1000272" -> "1000273"  [label="CFG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000282" -> "1000272"  [label="CFG: "];
"1000271" -> "1000272"  [label="CFG: "];
"1000272" -> "1000335"  [label="DDG: ThreadSafeMatch(tag_name, SVGNames::svgTag)"];
"1000272" -> "1000335"  [label="DDG: namespace_stack_.back() == SVG"];
"1000272" -> "1000271"  [label="DDG: namespace_stack_.back() == SVG"];
"1000272" -> "1000271"  [label="DDG: ThreadSafeMatch(tag_name, SVGNames::svgTag)"];
"1000273" -> "1000272"  [label="DDG: namespace_stack_.back()"];
"1000273" -> "1000272"  [label="DDG: SVG"];
"1000271" -> "1000270"  [label="AST: "];
"1000271" -> "1000279"  [label="CFG: "];
"1000279" -> "1000271"  [label="AST: "];
"1000300" -> "1000271"  [label="CFG: "];
"1000303" -> "1000271"  [label="CFG: "];
"1000271" -> "1000335"  [label="DDG: namespace_stack_.back() == SVG &&\n          ThreadSafeMatch(tag_name, SVGNames::svgTag)"];
"1000271" -> "1000335"  [label="DDG: (namespace_stack_.back() == SVG &&\n          ThreadSafeMatch(tag_name, SVGNames::svgTag)) ||\n         (namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)) ||\n        IsHTMLIntegrationPointForEndTag(token) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token))"];
"1000271" -> "1000335"  [label="DDG: (namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)) ||\n        IsHTMLIntegrationPointForEndTag(token) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token))"];
"1000279" -> "1000271"  [label="DDG: namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)"];
"1000279" -> "1000271"  [label="DDG: IsHTMLIntegrationPointForEndTag(token) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token))"];
"1000284" -> "1000280"  [label="AST: "];
"1000284" -> "1000286"  [label="CFG: "];
"1000285" -> "1000284"  [label="AST: "];
"1000286" -> "1000284"  [label="AST: "];
"1000280" -> "1000284"  [label="CFG: "];
"1000284" -> "1000335"  [label="DDG: MathMLNames::mathTag"];
"1000284" -> "1000280"  [label="DDG: tag_name"];
"1000284" -> "1000280"  [label="DDG: MathMLNames::mathTag"];
"1000124" -> "1000284"  [label="DDG: MathMLNames::mathTag"];
"1000284" -> "1000302"  [label="DDG: tag_name"];
"1000280" -> "1000279"  [label="AST: "];
"1000280" -> "1000281"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000289" -> "1000280"  [label="CFG: "];
"1000279" -> "1000280"  [label="CFG: "];
"1000280" -> "1000335"  [label="DDG: ThreadSafeMatch(tag_name, MathMLNames::mathTag)"];
"1000280" -> "1000335"  [label="DDG: namespace_stack_.back() == kMathML"];
"1000280" -> "1000279"  [label="DDG: namespace_stack_.back() == kMathML"];
"1000280" -> "1000279"  [label="DDG: ThreadSafeMatch(tag_name, MathMLNames::mathTag)"];
"1000281" -> "1000280"  [label="DDG: namespace_stack_.back()"];
"1000281" -> "1000280"  [label="DDG: kMathML"];
"1000124" -> "1000280"  [label="DDG: ThreadSafeMatch(tag_name, MathMLNames::mathTag)"];
"1000279" -> "1000287"  [label="CFG: "];
"1000287" -> "1000279"  [label="AST: "];
"1000279" -> "1000335"  [label="DDG: namespace_stack_.back() == kMathML &&\n          ThreadSafeMatch(tag_name, MathMLNames::mathTag)"];
"1000279" -> "1000335"  [label="DDG: IsHTMLIntegrationPointForEndTag(token) ||\n         (namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token))"];
"1000287" -> "1000279"  [label="DDG: IsHTMLIntegrationPointForEndTag(token)"];
"1000287" -> "1000279"  [label="DDG: namespace_stack_.Contains(kMathML) &&\n          namespace_stack_.back() == HTML && TokenExitsMath(token)"];
"1000302" -> "1000301"  [label="AST: "];
"1000302" -> "1000304"  [label="CFG: "];
"1000303" -> "1000302"  [label="AST: "];
"1000304" -> "1000302"  [label="AST: "];
"1000308" -> "1000302"  [label="CFG: "];
"1000316" -> "1000302"  [label="CFG: "];
"1000302" -> "1000335"  [label="DDG: scriptTag"];
"1000302" -> "1000335"  [label="DDG: tag_name"];
"1000302" -> "1000335"  [label="DDG: ThreadSafeMatch(tag_name, scriptTag)"];
"1000166" -> "1000302"  [label="DDG: scriptTag"];
"1000302" -> "1000315"  [label="DDG: tag_name"];
"1000315" -> "1000314"  [label="AST: "];
"1000315" -> "1000317"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000317" -> "1000315"  [label="AST: "];
"1000320" -> "1000315"  [label="CFG: "];
"1000324" -> "1000315"  [label="CFG: "];
"1000315" -> "1000335"  [label="DDG: ThreadSafeMatch(tag_name, selectTag)"];
"1000315" -> "1000335"  [label="DDG: selectTag"];
"1000236" -> "1000315"  [label="DDG: selectTag"];
"1000315" -> "1000323"  [label="DDG: tag_name"];
"1000323" -> "1000322"  [label="AST: "];
"1000323" -> "1000325"  [label="CFG: "];
"1000324" -> "1000323"  [label="AST: "];
"1000325" -> "1000323"  [label="AST: "];
"1000327" -> "1000323"  [label="CFG: "];
"1000330" -> "1000323"  [label="CFG: "];
"1000323" -> "1000335"  [label="DDG: tag_name"];
"1000323" -> "1000335"  [label="DDG: styleTag"];
"1000323" -> "1000335"  [label="DDG: ThreadSafeMatch(tag_name, styleTag)"];
"1000202" -> "1000323"  [label="DDG: styleTag"];
}
