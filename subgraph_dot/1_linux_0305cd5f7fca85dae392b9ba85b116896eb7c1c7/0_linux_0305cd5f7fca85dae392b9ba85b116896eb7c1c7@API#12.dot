digraph "0_linux_0305cd5f7fca85dae392b9ba85b116896eb7c1c7@API" {
"1000944" [label="(Call,updates * 2)"];
"1000926" [label="(Call,updates = trans->delayed_ref_updates)"];
"1000843" [label="(Call,trans->delayed_ref_updates = 0)"];
"1000755" [label="(Call,trans->delayed_ref_updates * 2)"];
"1000941" [label="(Call,btrfs_run_delayed_refs(trans, root, updates * 2))"];
"1000939" [label="(Call,ret = btrfs_run_delayed_refs(trans, root, updates * 2))"];
"1000948" [label="(Call,ret && !err)"];
"1000952" [label="(Call,err = ret)"];
"1000955" [label="(Return,return err;)"];
"1000857" [label="(Call,ret && !err)"];
"1000168" [label="(Call,err = 0)"];
"1000926" [label="(Call,updates = trans->delayed_ref_updates)"];
"1000942" [label="(Identifier,trans)"];
"1000843" [label="(Call,trans->delayed_ref_updates = 0)"];
"1000943" [label="(Identifier,root)"];
"1000333" [label="(Call,err = ret)"];
"1000812" [label="(Call,btrfs_del_items(trans, root, path,\n\t\t\t\t\t\tpending_del_slot,\n\t\t\t\t\t\tpending_del_nr))"];
"1000941" [label="(Call,btrfs_run_delayed_refs(trans, root, updates * 2))"];
"1000924" [label="(Block,)"];
"1000932" [label="(Identifier,updates)"];
"1000721" [label="(Call,root == root->fs_info->tree_root)"];
"1000835" [label="(Call,updates = trans->delayed_ref_updates)"];
"1000956" [label="(Identifier,err)"];
"1000867" [label="(Call,err = -EAGAIN)"];
"1000847" [label="(Literal,0)"];
"1000928" [label="(Call,trans->delayed_ref_updates)"];
"1000940" [label="(Identifier,ret)"];
"1000113" [label="(MethodParameterIn,struct btrfs_trans_handle *trans)"];
"1000950" [label="(Call,!err)"];
"1000307" [label="(Call,err = -EAGAIN)"];
"1000955" [label="(Return,return err;)"];
"1000750" [label="(Call,btrfs_should_throttle_delayed_refs(trans, root))"];
"1000939" [label="(Call,ret = btrfs_run_delayed_refs(trans, root, updates * 2))"];
"1000945" [label="(Identifier,updates)"];
"1000895" [label="(Call,btrfs_abort_transaction(trans, root, ret))"];
"1000954" [label="(Identifier,ret)"];
"1000946" [label="(Literal,2)"];
"1000944" [label="(Call,updates * 2)"];
"1000849" [label="(Identifier,ret)"];
"1000957" [label="(MethodReturn,int)"];
"1000952" [label="(Call,err = ret)"];
"1000756" [label="(Call,trans->delayed_ref_updates)"];
"1000861" [label="(Call,err = ret)"];
"1000760" [label="(Literal,0)"];
"1000118" [label="(Block,)"];
"1000948" [label="(Call,ret && !err)"];
"1000755" [label="(Call,trans->delayed_ref_updates * 2)"];
"1000319" [label="(Call,btrfs_search_slot(trans, root, &key, path, -1, 1))"];
"1000887" [label="(Call,btrfs_del_items(trans, root, path, pending_del_slot,\n\t\t\t\t      pending_del_nr))"];
"1000927" [label="(Identifier,updates)"];
"1000844" [label="(Call,trans->delayed_ref_updates)"];
"1000639" [label="(Call,btrfs_truncate_item(root, path, size, 1))"];
"1000303" [label="(Call,btrfs_should_end_transaction(trans, root))"];
"1000114" [label="(MethodParameterIn,struct btrfs_root *root)"];
"1000821" [label="(Call,btrfs_abort_transaction(trans,\n\t\t\t\t\t\t\t\troot, ret))"];
"1000933" [label="(Block,)"];
"1000759" [label="(Literal,2)"];
"1000850" [label="(Call,btrfs_run_delayed_refs(trans, root, updates * 2))"];
"1000774" [label="(Call,btrfs_should_throttle_delayed_refs(trans,\n\t\t\t\t\t\t\t\t       root))"];
"1000949" [label="(Identifier,ret)"];
"1000842" [label="(Block,)"];
"1000947" [label="(ControlStructure,if (ret && !err))"];
"1000859" [label="(Call,!err)"];
"1000953" [label="(Identifier,err)"];
"1000753" [label="(Call,btrfs_async_run_delayed_refs(root,\n\t\t\t\t\ttrans->delayed_ref_updates * 2, 0))"];
"1000944" -> "1000941"  [label="AST: "];
"1000944" -> "1000946"  [label="CFG: "];
"1000945" -> "1000944"  [label="AST: "];
"1000946" -> "1000944"  [label="AST: "];
"1000941" -> "1000944"  [label="CFG: "];
"1000944" -> "1000957"  [label="DDG: updates"];
"1000944" -> "1000941"  [label="DDG: updates"];
"1000944" -> "1000941"  [label="DDG: 2"];
"1000926" -> "1000944"  [label="DDG: updates"];
"1000926" -> "1000924"  [label="AST: "];
"1000926" -> "1000928"  [label="CFG: "];
"1000927" -> "1000926"  [label="AST: "];
"1000928" -> "1000926"  [label="AST: "];
"1000932" -> "1000926"  [label="CFG: "];
"1000926" -> "1000957"  [label="DDG: updates"];
"1000926" -> "1000957"  [label="DDG: trans->delayed_ref_updates"];
"1000843" -> "1000926"  [label="DDG: trans->delayed_ref_updates"];
"1000755" -> "1000926"  [label="DDG: trans->delayed_ref_updates"];
"1000843" -> "1000842"  [label="AST: "];
"1000843" -> "1000847"  [label="CFG: "];
"1000844" -> "1000843"  [label="AST: "];
"1000847" -> "1000843"  [label="AST: "];
"1000849" -> "1000843"  [label="CFG: "];
"1000843" -> "1000957"  [label="DDG: trans->delayed_ref_updates"];
"1000843" -> "1000755"  [label="DDG: trans->delayed_ref_updates"];
"1000843" -> "1000835"  [label="DDG: trans->delayed_ref_updates"];
"1000755" -> "1000753"  [label="AST: "];
"1000755" -> "1000759"  [label="CFG: "];
"1000756" -> "1000755"  [label="AST: "];
"1000759" -> "1000755"  [label="AST: "];
"1000760" -> "1000755"  [label="CFG: "];
"1000755" -> "1000957"  [label="DDG: trans->delayed_ref_updates"];
"1000755" -> "1000753"  [label="DDG: trans->delayed_ref_updates"];
"1000755" -> "1000753"  [label="DDG: 2"];
"1000755" -> "1000835"  [label="DDG: trans->delayed_ref_updates"];
"1000941" -> "1000939"  [label="AST: "];
"1000942" -> "1000941"  [label="AST: "];
"1000943" -> "1000941"  [label="AST: "];
"1000939" -> "1000941"  [label="CFG: "];
"1000941" -> "1000957"  [label="DDG: trans"];
"1000941" -> "1000957"  [label="DDG: root"];
"1000941" -> "1000957"  [label="DDG: updates * 2"];
"1000941" -> "1000939"  [label="DDG: trans"];
"1000941" -> "1000939"  [label="DDG: root"];
"1000941" -> "1000939"  [label="DDG: updates * 2"];
"1000850" -> "1000941"  [label="DDG: trans"];
"1000850" -> "1000941"  [label="DDG: root"];
"1000750" -> "1000941"  [label="DDG: trans"];
"1000750" -> "1000941"  [label="DDG: root"];
"1000303" -> "1000941"  [label="DDG: trans"];
"1000303" -> "1000941"  [label="DDG: root"];
"1000812" -> "1000941"  [label="DDG: trans"];
"1000812" -> "1000941"  [label="DDG: root"];
"1000821" -> "1000941"  [label="DDG: trans"];
"1000821" -> "1000941"  [label="DDG: root"];
"1000895" -> "1000941"  [label="DDG: trans"];
"1000895" -> "1000941"  [label="DDG: root"];
"1000319" -> "1000941"  [label="DDG: trans"];
"1000319" -> "1000941"  [label="DDG: root"];
"1000774" -> "1000941"  [label="DDG: trans"];
"1000774" -> "1000941"  [label="DDG: root"];
"1000887" -> "1000941"  [label="DDG: trans"];
"1000887" -> "1000941"  [label="DDG: root"];
"1000113" -> "1000941"  [label="DDG: trans"];
"1000753" -> "1000941"  [label="DDG: root"];
"1000639" -> "1000941"  [label="DDG: root"];
"1000721" -> "1000941"  [label="DDG: root"];
"1000114" -> "1000941"  [label="DDG: root"];
"1000939" -> "1000933"  [label="AST: "];
"1000940" -> "1000939"  [label="AST: "];
"1000949" -> "1000939"  [label="CFG: "];
"1000939" -> "1000957"  [label="DDG: btrfs_run_delayed_refs(trans, root, updates * 2)"];
"1000939" -> "1000948"  [label="DDG: ret"];
"1000948" -> "1000947"  [label="AST: "];
"1000948" -> "1000949"  [label="CFG: "];
"1000948" -> "1000950"  [label="CFG: "];
"1000949" -> "1000948"  [label="AST: "];
"1000950" -> "1000948"  [label="AST: "];
"1000953" -> "1000948"  [label="CFG: "];
"1000956" -> "1000948"  [label="CFG: "];
"1000948" -> "1000957"  [label="DDG: !err"];
"1000948" -> "1000957"  [label="DDG: ret && !err"];
"1000948" -> "1000957"  [label="DDG: ret"];
"1000857" -> "1000948"  [label="DDG: !err"];
"1000950" -> "1000948"  [label="DDG: err"];
"1000948" -> "1000952"  [label="DDG: ret"];
"1000952" -> "1000947"  [label="AST: "];
"1000952" -> "1000954"  [label="CFG: "];
"1000953" -> "1000952"  [label="AST: "];
"1000954" -> "1000952"  [label="AST: "];
"1000956" -> "1000952"  [label="CFG: "];
"1000952" -> "1000957"  [label="DDG: err"];
"1000952" -> "1000957"  [label="DDG: ret"];
"1000952" -> "1000955"  [label="DDG: err"];
"1000955" -> "1000118"  [label="AST: "];
"1000955" -> "1000956"  [label="CFG: "];
"1000956" -> "1000955"  [label="AST: "];
"1000957" -> "1000955"  [label="CFG: "];
"1000955" -> "1000957"  [label="DDG: <RET>"];
"1000956" -> "1000955"  [label="DDG: err"];
"1000333" -> "1000955"  [label="DDG: err"];
"1000168" -> "1000955"  [label="DDG: err"];
"1000859" -> "1000955"  [label="DDG: err"];
"1000950" -> "1000955"  [label="DDG: err"];
"1000867" -> "1000955"  [label="DDG: err"];
"1000307" -> "1000955"  [label="DDG: err"];
"1000861" -> "1000955"  [label="DDG: err"];
}
