digraph "0_htcondor_5e5571d1a431eb3c61977b6dd6ec90186ef79867_4@API" {
"1001738" [label="(Call,assert( syscall_sock->code(rval) ))"];
"1001739" [label="(Call,syscall_sock->code(rval))"];
"1001730" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1000224" [label="(Call,dprintf(D_SYSCALLS,\n\t\t\"Got request for syscall %s (%d)\n\",\n\t\tshadow_syscall_name(condor_sysnum), condor_sysnum))"];
"1000158" [label="(Call,dprintf(D_SYSCALLS, \"About to decode condor_sysnum\n\"))"];
"1000227" [label="(Call,shadow_syscall_name(condor_sysnum))"];
"1000163" [label="(Call,syscall_sock->code(condor_sysnum))"];
"1001721" [label="(Call,rval = -1)"];
"1001723" [label="(Call,-1)"];
"1001709" [label="(Call,rval = pseudo_get_job_attr( attrname , expr))"];
"1001711" [label="(Call,pseudo_get_job_attr( attrname , expr))"];
"1001706" [label="(Call,thisRemoteResource->allowRemoteReadAttributeAccess(attrname))"];
"1001695" [label="(Call,syscall_sock->code(attrname))"];
"1001691" [label="(Call,*  attrname = 0)"];
"1001734" [label="(Call,(int)terrno)"];
"1001725" [label="(Call,terrno = (condor_errno_t)EACCES)"];
"1001727" [label="(Call,(condor_errno_t)EACCES)"];
"1001714" [label="(Call,terrno = (condor_errno_t)errno)"];
"1001716" [label="(Call,(condor_errno_t)errno)"];
"1001699" [label="(Call,errno = (condor_errno_t)0)"];
"1001701" [label="(Call,(condor_errno_t)0)"];
"1000637" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001470" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1000227" [label="(Call,shadow_syscall_name(condor_sysnum))"];
"1001339" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001700" [label="(Identifier,errno)"];
"1001691" [label="(Call,*  attrname = 0)"];
"1001699" [label="(Call,errno = (condor_errno_t)0)"];
"1000793" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1001721" [label="(Call,rval = -1)"];
"1001692" [label="(Identifier,attrname)"];
"1000161" [label="(Call,rval = syscall_sock->code(condor_sysnum))"];
"1000374" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001723" [label="(Call,-1)"];
"1000107" [label="(Block,)"];
"1001736" [label="(Identifier,terrno)"];
"1002289" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001682" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d\n\", rval ))"];
"1001696" [label="(Identifier,attrname)"];
"1001742" [label="(Call,rval < 0)"];
"1001623" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1001738" [label="(Call,assert( syscall_sock->code(rval) ))"];
"1001731" [label="(Identifier,D_SYSCALLS)"];
"1000589" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1002463" [label="(Call,dprintf(D_ALWAYS, \"ERROR: unknown syscall %d received\n\", condor_sysnum ))"];
"1001715" [label="(Identifier,terrno)"];
"1000441" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001747" [label="(Call,syscall_sock->code(terrno))"];
"1001725" [label="(Call,terrno = (condor_errno_t)EACCES)"];
"1001141" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001732" [label="(Literal,\"\trval = %d, errno = %d\n\")"];
"1000225" [label="(Identifier,D_SYSCALLS)"];
"1001739" [label="(Call,syscall_sock->code(rval))"];
"1000162" [label="(Identifier,rval)"];
"1000160" [label="(Literal,\"About to decode condor_sysnum\n\")"];
"1001726" [label="(Identifier,terrno)"];
"1000164" [label="(Identifier,condor_sysnum)"];
"1001718" [label="(Identifier,errno)"];
"1001701" [label="(Call,(condor_errno_t)0)"];
"1001055" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1002373" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001730" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1000677" [label="(Call,dprintf( D_SYSCALLS, \"  flags = %d\n\", flags ))"];
"1002472" [label="(MethodReturn,RET)"];
"1001710" [label="(Identifier,rval)"];
"1001737" [label="(Call,syscall_sock->encode())"];
"1001727" [label="(Call,(condor_errno_t)EACCES)"];
"1001708" [label="(Block,)"];
"1001380" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001729" [label="(Identifier,EACCES)"];
"1000853" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1001724" [label="(Literal,1)"];
"1001885" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1000226" [label="(Literal,\"Got request for syscall %s (%d)\n\")"];
"1001711" [label="(Call,pseudo_get_job_attr( attrname , expr))"];
"1001225" [label="(Call,dprintf( D_SYSCALLS, \"  from = %s\n\", from ))"];
"1000159" [label="(Identifier,D_SYSCALLS)"];
"1000955" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1001758" [label="(Call,(char *)attrname)"];
"1001714" [label="(Call,terrno = (condor_errno_t)errno)"];
"1001694" [label="(Call,assert( syscall_sock->code(attrname) ))"];
"1000530" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000319" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001743" [label="(Identifier,rval)"];
"1000231" [label="(Identifier,condor_sysnum)"];
"1001734" [label="(Call,(int)terrno)"];
"1002018" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1000158" [label="(Call,dprintf(D_SYSCALLS, \"About to decode condor_sysnum\n\"))"];
"1001707" [label="(Identifier,attrname)"];
"1001705" [label="(ControlStructure,if ( thisRemoteResource->allowRemoteReadAttributeAccess(attrname) ))"];
"1001695" [label="(Call,syscall_sock->code(attrname))"];
"1001542" [label="(Call,dprintf( D_SYSCALLS, \"  fs = %d\n\", fd ))"];
"1000228" [label="(Identifier,condor_sysnum)"];
"1001713" [label="(Identifier,expr)"];
"1000261" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000229" [label="(Identifier,condor_sysnum)"];
"1000163" [label="(Call,syscall_sock->code(condor_sysnum))"];
"1001689" [label="(Block,)"];
"1001706" [label="(Call,thisRemoteResource->allowRemoteReadAttributeAccess(attrname))"];
"1001709" [label="(Call,rval = pseudo_get_job_attr( attrname , expr))"];
"1001814" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1001712" [label="(Identifier,attrname)"];
"1000224" [label="(Call,dprintf(D_SYSCALLS,\n\t\t\"Got request for syscall %s (%d)\n\",\n\t\tshadow_syscall_name(condor_sysnum), condor_sysnum))"];
"1001961" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1002112" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001733" [label="(Identifier,rval)"];
"1001703" [label="(Literal,0)"];
"1001722" [label="(Identifier,rval)"];
"1001740" [label="(Identifier,rval)"];
"1001693" [label="(Literal,0)"];
"1001720" [label="(Block,)"];
"1001716" [label="(Call,(condor_errno_t)errno)"];
"1002215" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001738" -> "1001689"  [label="AST: "];
"1001738" -> "1001739"  [label="CFG: "];
"1001739" -> "1001738"  [label="AST: "];
"1001743" -> "1001738"  [label="CFG: "];
"1001738" -> "1002472"  [label="DDG: "];
"1001738" -> "1002472"  [label="DDG: "];
"1001739" -> "1001738"  [label="DDG: "];
"1001739" -> "1001740"  [label="CFG: "];
"1001740" -> "1001739"  [label="AST: "];
"1001730" -> "1001739"  [label="DDG: "];
"1001739" -> "1001742"  [label="DDG: "];
"1001730" -> "1001689"  [label="AST: "];
"1001730" -> "1001734"  [label="CFG: "];
"1001731" -> "1001730"  [label="AST: "];
"1001732" -> "1001730"  [label="AST: "];
"1001733" -> "1001730"  [label="AST: "];
"1001734" -> "1001730"  [label="AST: "];
"1001737" -> "1001730"  [label="CFG: "];
"1001730" -> "1002472"  [label="DDG: "];
"1001730" -> "1002472"  [label="DDG: "];
"1001730" -> "1002472"  [label="DDG: "];
"1000224" -> "1001730"  [label="DDG: "];
"1001721" -> "1001730"  [label="DDG: "];
"1001709" -> "1001730"  [label="DDG: "];
"1001734" -> "1001730"  [label="DDG: "];
"1000224" -> "1000107"  [label="AST: "];
"1000224" -> "1000229"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000227" -> "1000224"  [label="AST: "];
"1000229" -> "1000224"  [label="AST: "];
"1000231" -> "1000224"  [label="CFG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000158" -> "1000224"  [label="DDG: "];
"1000227" -> "1000224"  [label="DDG: "];
"1000224" -> "1000261"  [label="DDG: "];
"1000224" -> "1000319"  [label="DDG: "];
"1000224" -> "1000374"  [label="DDG: "];
"1000224" -> "1000441"  [label="DDG: "];
"1000224" -> "1000530"  [label="DDG: "];
"1000224" -> "1000589"  [label="DDG: "];
"1000224" -> "1000637"  [label="DDG: "];
"1000224" -> "1000677"  [label="DDG: "];
"1000224" -> "1000793"  [label="DDG: "];
"1000224" -> "1000853"  [label="DDG: "];
"1000224" -> "1000955"  [label="DDG: "];
"1000224" -> "1001055"  [label="DDG: "];
"1000224" -> "1001141"  [label="DDG: "];
"1000224" -> "1001225"  [label="DDG: "];
"1000224" -> "1001339"  [label="DDG: "];
"1000224" -> "1001380"  [label="DDG: "];
"1000224" -> "1001470"  [label="DDG: "];
"1000224" -> "1001542"  [label="DDG: "];
"1000224" -> "1001623"  [label="DDG: "];
"1000224" -> "1001682"  [label="DDG: "];
"1000224" -> "1001814"  [label="DDG: "];
"1000224" -> "1001885"  [label="DDG: "];
"1000224" -> "1001961"  [label="DDG: "];
"1000224" -> "1002018"  [label="DDG: "];
"1000224" -> "1002112"  [label="DDG: "];
"1000224" -> "1002215"  [label="DDG: "];
"1000224" -> "1002289"  [label="DDG: "];
"1000224" -> "1002373"  [label="DDG: "];
"1000224" -> "1002463"  [label="DDG: "];
"1000158" -> "1000107"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000162" -> "1000158"  [label="CFG: "];
"1000158" -> "1002472"  [label="DDG: "];
"1000158" -> "1002472"  [label="DDG: "];
"1000227" -> "1000228"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000227"  [label="CFG: "];
"1000163" -> "1000227"  [label="DDG: "];
"1000163" -> "1000161"  [label="AST: "];
"1000163" -> "1000164"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000163" -> "1002472"  [label="DDG: "];
"1000163" -> "1000161"  [label="DDG: "];
"1001721" -> "1001720"  [label="AST: "];
"1001721" -> "1001723"  [label="CFG: "];
"1001722" -> "1001721"  [label="AST: "];
"1001723" -> "1001721"  [label="AST: "];
"1001726" -> "1001721"  [label="CFG: "];
"1001721" -> "1002472"  [label="DDG: "];
"1001723" -> "1001721"  [label="DDG: "];
"1001723" -> "1001724"  [label="CFG: "];
"1001724" -> "1001723"  [label="AST: "];
"1001709" -> "1001708"  [label="AST: "];
"1001709" -> "1001711"  [label="CFG: "];
"1001710" -> "1001709"  [label="AST: "];
"1001711" -> "1001709"  [label="AST: "];
"1001715" -> "1001709"  [label="CFG: "];
"1001709" -> "1002472"  [label="DDG: "];
"1001711" -> "1001709"  [label="DDG: "];
"1001711" -> "1001709"  [label="DDG: "];
"1001711" -> "1001713"  [label="CFG: "];
"1001712" -> "1001711"  [label="AST: "];
"1001713" -> "1001711"  [label="AST: "];
"1001711" -> "1002472"  [label="DDG: "];
"1001706" -> "1001711"  [label="DDG: "];
"1001711" -> "1001758"  [label="DDG: "];
"1001706" -> "1001705"  [label="AST: "];
"1001706" -> "1001707"  [label="CFG: "];
"1001707" -> "1001706"  [label="AST: "];
"1001710" -> "1001706"  [label="CFG: "];
"1001722" -> "1001706"  [label="CFG: "];
"1001706" -> "1002472"  [label="DDG: "];
"1001695" -> "1001706"  [label="DDG: "];
"1001706" -> "1001758"  [label="DDG: "];
"1001695" -> "1001694"  [label="AST: "];
"1001695" -> "1001696"  [label="CFG: "];
"1001696" -> "1001695"  [label="AST: "];
"1001694" -> "1001695"  [label="CFG: "];
"1001695" -> "1001694"  [label="DDG: "];
"1001691" -> "1001695"  [label="DDG: "];
"1001691" -> "1001689"  [label="AST: "];
"1001691" -> "1001693"  [label="CFG: "];
"1001692" -> "1001691"  [label="AST: "];
"1001693" -> "1001691"  [label="AST: "];
"1001696" -> "1001691"  [label="CFG: "];
"1001734" -> "1001736"  [label="CFG: "];
"1001735" -> "1001734"  [label="AST: "];
"1001736" -> "1001734"  [label="AST: "];
"1001734" -> "1002472"  [label="DDG: "];
"1001725" -> "1001734"  [label="DDG: "];
"1001714" -> "1001734"  [label="DDG: "];
"1001734" -> "1001747"  [label="DDG: "];
"1001725" -> "1001720"  [label="AST: "];
"1001725" -> "1001727"  [label="CFG: "];
"1001726" -> "1001725"  [label="AST: "];
"1001727" -> "1001725"  [label="AST: "];
"1001731" -> "1001725"  [label="CFG: "];
"1001725" -> "1002472"  [label="DDG: "];
"1001727" -> "1001725"  [label="DDG: "];
"1001727" -> "1001729"  [label="CFG: "];
"1001728" -> "1001727"  [label="AST: "];
"1001729" -> "1001727"  [label="AST: "];
"1001727" -> "1002472"  [label="DDG: "];
"1001714" -> "1001708"  [label="AST: "];
"1001714" -> "1001716"  [label="CFG: "];
"1001715" -> "1001714"  [label="AST: "];
"1001716" -> "1001714"  [label="AST: "];
"1001731" -> "1001714"  [label="CFG: "];
"1001714" -> "1002472"  [label="DDG: "];
"1001716" -> "1001714"  [label="DDG: "];
"1001716" -> "1001718"  [label="CFG: "];
"1001717" -> "1001716"  [label="AST: "];
"1001718" -> "1001716"  [label="AST: "];
"1001716" -> "1002472"  [label="DDG: "];
"1001699" -> "1001716"  [label="DDG: "];
"1001699" -> "1001689"  [label="AST: "];
"1001699" -> "1001701"  [label="CFG: "];
"1001700" -> "1001699"  [label="AST: "];
"1001701" -> "1001699"  [label="AST: "];
"1001707" -> "1001699"  [label="CFG: "];
"1001699" -> "1002472"  [label="DDG: "];
"1001699" -> "1002472"  [label="DDG: "];
"1001701" -> "1001699"  [label="DDG: "];
"1001701" -> "1001703"  [label="CFG: "];
"1001702" -> "1001701"  [label="AST: "];
"1001703" -> "1001701"  [label="AST: "];
}
