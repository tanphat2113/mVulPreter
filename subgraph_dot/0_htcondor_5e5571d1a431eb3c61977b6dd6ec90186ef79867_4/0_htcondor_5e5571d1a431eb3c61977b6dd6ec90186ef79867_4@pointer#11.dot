digraph "0_htcondor_5e5571d1a431eb3c61977b6dd6ec90186ef79867_4@pointer" {
"1001470" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1000224" [label="(Call,dprintf(D_SYSCALLS,\n\t\t\"Got request for syscall %s (%d)\n\",\n\t\tshadow_syscall_name(condor_sysnum), condor_sysnum))"];
"1000158" [label="(Call,dprintf(D_SYSCALLS, \"About to decode condor_sysnum\n\"))"];
"1000227" [label="(Call,shadow_syscall_name(condor_sysnum))"];
"1000163" [label="(Call,syscall_sock->code(condor_sysnum))"];
"1001466" [label="(Call,syscall_sock->code(path))"];
"1001461" [label="(Call,path = NULL)"];
"1001480" [label="(Call,write_access(path))"];
"1001488" [label="(Call,rmdir( path))"];
"1001486" [label="(Call,rval = rmdir( path))"];
"1001504" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001512" [label="(Call,syscall_sock->code(rval))"];
"1001510" [label="(Call,result = ( syscall_sock->code(rval) ))"];
"1001514" [label="(Call,ASSERT( result ))"];
"1001517" [label="(Call,rval < 0)"];
"1001523" [label="(Call,syscall_sock->code( terrno ))"];
"1001521" [label="(Call,result = ( syscall_sock->code( terrno ) ))"];
"1001525" [label="(Call,ASSERT( result ))"];
"1000637" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001470" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001484" [label="(Identifier,errno)"];
"1000227" [label="(Call,shadow_syscall_name(condor_sysnum))"];
"1001510" [label="(Call,result = ( syscall_sock->code(rval) ))"];
"1001473" [label="(Identifier,path)"];
"1001520" [label="(Block,)"];
"1001482" [label="(Block,)"];
"1001339" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000793" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1000161" [label="(Call,rval = syscall_sock->code(condor_sysnum))"];
"1000374" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000107" [label="(Block,)"];
"1001479" [label="(ControlStructure,if ( write_access(path) ))"];
"1001528" [label="(Identifier,result)"];
"1001475" [label="(Identifier,result)"];
"1002289" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001487" [label="(Identifier,rval)"];
"1001682" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d\n\", rval ))"];
"1001472" [label="(Literal,\"  path = %s\n\")"];
"1001515" [label="(Identifier,result)"];
"1001623" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1001519" [label="(Literal,0)"];
"1001506" [label="(Literal,\"\trval = %d, errno = %d\n\")"];
"1000589" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1002463" [label="(Call,dprintf(D_ALWAYS, \"ERROR: unknown syscall %d received\n\", condor_sysnum ))"];
"1000441" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001525" [label="(Call,ASSERT( result ))"];
"1001141" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1000225" [label="(Identifier,D_SYSCALLS)"];
"1001507" [label="(Identifier,rval)"];
"1000162" [label="(Identifier,rval)"];
"1001463" [label="(Identifier,NULL)"];
"1001465" [label="(Identifier,result)"];
"1001509" [label="(Call,syscall_sock->encode())"];
"1001521" [label="(Call,result = ( syscall_sock->code( terrno ) ))"];
"1001526" [label="(Identifier,result)"];
"1001460" [label="(Block,)"];
"1001489" [label="(Identifier,path)"];
"1000160" [label="(Literal,\"About to decode condor_sysnum\n\")"];
"1000164" [label="(Identifier,condor_sysnum)"];
"1001500" [label="(Identifier,terrno)"];
"1001055" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1002373" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001730" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1000677" [label="(Call,dprintf( D_SYSCALLS, \"  flags = %d\n\", flags ))"];
"1002472" [label="(MethodReturn,RET)"];
"1001512" [label="(Call,syscall_sock->code(rval))"];
"1001511" [label="(Identifier,result)"];
"1001380" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001504" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000853" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1001514" [label="(Call,ASSERT( result ))"];
"1001885" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1000226" [label="(Literal,\"Got request for syscall %s (%d)\n\")"];
"1001523" [label="(Call,syscall_sock->code( terrno ))"];
"1001466" [label="(Call,syscall_sock->code(path))"];
"1001225" [label="(Call,dprintf( D_SYSCALLS, \"  from = %s\n\", from ))"];
"1000159" [label="(Identifier,D_SYSCALLS)"];
"1000955" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1001480" [label="(Call,write_access(path))"];
"1001481" [label="(Identifier,path)"];
"1001499" [label="(Call,terrno = (condor_errno_t)errno)"];
"1000530" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001462" [label="(Identifier,path)"];
"1001518" [label="(Identifier,rval)"];
"1001488" [label="(Call,rmdir( path))"];
"1001513" [label="(Identifier,rval)"];
"1001493" [label="(Identifier,rval)"];
"1000319" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000231" [label="(Identifier,condor_sysnum)"];
"1002018" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1000158" [label="(Call,dprintf(D_SYSCALLS, \"About to decode condor_sysnum\n\"))"];
"1001508" [label="(Identifier,terrno)"];
"1001486" [label="(Call,rval = rmdir( path))"];
"1001461" [label="(Call,path = NULL)"];
"1001542" [label="(Call,dprintf( D_SYSCALLS, \"  fs = %d\n\", fd ))"];
"1000228" [label="(Identifier,condor_sysnum)"];
"1000261" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000229" [label="(Identifier,condor_sysnum)"];
"1000163" [label="(Call,syscall_sock->code(condor_sysnum))"];
"1001471" [label="(Identifier,D_SYSCALLS)"];
"1001814" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1000224" [label="(Call,dprintf(D_SYSCALLS,\n\t\t\"Got request for syscall %s (%d)\n\",\n\t\tshadow_syscall_name(condor_sysnum), condor_sysnum))"];
"1001961" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1001505" [label="(Identifier,D_SYSCALLS)"];
"1001492" [label="(Call,rval = -1)"];
"1002112" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001517" [label="(Call,rval < 0)"];
"1001464" [label="(Call,result = ( syscall_sock->code(path) ))"];
"1001467" [label="(Identifier,path)"];
"1001516" [label="(ControlStructure,if( rval < 0 ))"];
"1001524" [label="(Identifier,terrno)"];
"1001522" [label="(Identifier,result)"];
"1002215" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001470" -> "1001460"  [label="AST: "];
"1001470" -> "1001473"  [label="CFG: "];
"1001471" -> "1001470"  [label="AST: "];
"1001472" -> "1001470"  [label="AST: "];
"1001473" -> "1001470"  [label="AST: "];
"1001475" -> "1001470"  [label="CFG: "];
"1001470" -> "1002472"  [label="DDG: "];
"1000224" -> "1001470"  [label="DDG: "];
"1001466" -> "1001470"  [label="DDG: "];
"1001470" -> "1001480"  [label="DDG: "];
"1001470" -> "1001504"  [label="DDG: "];
"1000224" -> "1000107"  [label="AST: "];
"1000224" -> "1000229"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000227" -> "1000224"  [label="AST: "];
"1000229" -> "1000224"  [label="AST: "];
"1000231" -> "1000224"  [label="CFG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000158" -> "1000224"  [label="DDG: "];
"1000227" -> "1000224"  [label="DDG: "];
"1000224" -> "1000261"  [label="DDG: "];
"1000224" -> "1000319"  [label="DDG: "];
"1000224" -> "1000374"  [label="DDG: "];
"1000224" -> "1000441"  [label="DDG: "];
"1000224" -> "1000530"  [label="DDG: "];
"1000224" -> "1000589"  [label="DDG: "];
"1000224" -> "1000637"  [label="DDG: "];
"1000224" -> "1000677"  [label="DDG: "];
"1000224" -> "1000793"  [label="DDG: "];
"1000224" -> "1000853"  [label="DDG: "];
"1000224" -> "1000955"  [label="DDG: "];
"1000224" -> "1001055"  [label="DDG: "];
"1000224" -> "1001141"  [label="DDG: "];
"1000224" -> "1001225"  [label="DDG: "];
"1000224" -> "1001339"  [label="DDG: "];
"1000224" -> "1001380"  [label="DDG: "];
"1000224" -> "1001542"  [label="DDG: "];
"1000224" -> "1001623"  [label="DDG: "];
"1000224" -> "1001682"  [label="DDG: "];
"1000224" -> "1001730"  [label="DDG: "];
"1000224" -> "1001814"  [label="DDG: "];
"1000224" -> "1001885"  [label="DDG: "];
"1000224" -> "1001961"  [label="DDG: "];
"1000224" -> "1002018"  [label="DDG: "];
"1000224" -> "1002112"  [label="DDG: "];
"1000224" -> "1002215"  [label="DDG: "];
"1000224" -> "1002289"  [label="DDG: "];
"1000224" -> "1002373"  [label="DDG: "];
"1000224" -> "1002463"  [label="DDG: "];
"1000158" -> "1000107"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000162" -> "1000158"  [label="CFG: "];
"1000158" -> "1002472"  [label="DDG: "];
"1000158" -> "1002472"  [label="DDG: "];
"1000227" -> "1000228"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000227"  [label="CFG: "];
"1000163" -> "1000227"  [label="DDG: "];
"1000163" -> "1000161"  [label="AST: "];
"1000163" -> "1000164"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000163" -> "1002472"  [label="DDG: "];
"1000163" -> "1000161"  [label="DDG: "];
"1001466" -> "1001464"  [label="AST: "];
"1001466" -> "1001467"  [label="CFG: "];
"1001467" -> "1001466"  [label="AST: "];
"1001464" -> "1001466"  [label="CFG: "];
"1001466" -> "1001464"  [label="DDG: "];
"1001461" -> "1001466"  [label="DDG: "];
"1001461" -> "1001460"  [label="AST: "];
"1001461" -> "1001463"  [label="CFG: "];
"1001462" -> "1001461"  [label="AST: "];
"1001463" -> "1001461"  [label="AST: "];
"1001465" -> "1001461"  [label="CFG: "];
"1001461" -> "1002472"  [label="DDG: "];
"1001480" -> "1001479"  [label="AST: "];
"1001480" -> "1001481"  [label="CFG: "];
"1001481" -> "1001480"  [label="AST: "];
"1001484" -> "1001480"  [label="CFG: "];
"1001493" -> "1001480"  [label="CFG: "];
"1001480" -> "1002472"  [label="DDG: "];
"1001480" -> "1002472"  [label="DDG: "];
"1001480" -> "1001488"  [label="DDG: "];
"1001488" -> "1001486"  [label="AST: "];
"1001488" -> "1001489"  [label="CFG: "];
"1001489" -> "1001488"  [label="AST: "];
"1001486" -> "1001488"  [label="CFG: "];
"1001488" -> "1002472"  [label="DDG: "];
"1001488" -> "1001486"  [label="DDG: "];
"1001486" -> "1001482"  [label="AST: "];
"1001487" -> "1001486"  [label="AST: "];
"1001500" -> "1001486"  [label="CFG: "];
"1001486" -> "1002472"  [label="DDG: "];
"1001486" -> "1001504"  [label="DDG: "];
"1001504" -> "1001460"  [label="AST: "];
"1001504" -> "1001508"  [label="CFG: "];
"1001505" -> "1001504"  [label="AST: "];
"1001506" -> "1001504"  [label="AST: "];
"1001507" -> "1001504"  [label="AST: "];
"1001508" -> "1001504"  [label="AST: "];
"1001509" -> "1001504"  [label="CFG: "];
"1001504" -> "1002472"  [label="DDG: "];
"1001504" -> "1002472"  [label="DDG: "];
"1001504" -> "1002472"  [label="DDG: "];
"1001492" -> "1001504"  [label="DDG: "];
"1001499" -> "1001504"  [label="DDG: "];
"1001504" -> "1001512"  [label="DDG: "];
"1001504" -> "1001523"  [label="DDG: "];
"1001512" -> "1001510"  [label="AST: "];
"1001512" -> "1001513"  [label="CFG: "];
"1001513" -> "1001512"  [label="AST: "];
"1001510" -> "1001512"  [label="CFG: "];
"1001512" -> "1001510"  [label="DDG: "];
"1001512" -> "1001517"  [label="DDG: "];
"1001510" -> "1001460"  [label="AST: "];
"1001511" -> "1001510"  [label="AST: "];
"1001515" -> "1001510"  [label="CFG: "];
"1001510" -> "1002472"  [label="DDG: "];
"1001510" -> "1001514"  [label="DDG: "];
"1001514" -> "1001460"  [label="AST: "];
"1001514" -> "1001515"  [label="CFG: "];
"1001515" -> "1001514"  [label="AST: "];
"1001518" -> "1001514"  [label="CFG: "];
"1001517" -> "1001516"  [label="AST: "];
"1001517" -> "1001519"  [label="CFG: "];
"1001518" -> "1001517"  [label="AST: "];
"1001519" -> "1001517"  [label="AST: "];
"1001522" -> "1001517"  [label="CFG: "];
"1001528" -> "1001517"  [label="CFG: "];
"1001517" -> "1002472"  [label="DDG: "];
"1001517" -> "1002472"  [label="DDG: "];
"1001523" -> "1001521"  [label="AST: "];
"1001523" -> "1001524"  [label="CFG: "];
"1001524" -> "1001523"  [label="AST: "];
"1001521" -> "1001523"  [label="CFG: "];
"1001523" -> "1002472"  [label="DDG: "];
"1001523" -> "1001521"  [label="DDG: "];
"1001521" -> "1001520"  [label="AST: "];
"1001522" -> "1001521"  [label="AST: "];
"1001526" -> "1001521"  [label="CFG: "];
"1001521" -> "1002472"  [label="DDG: "];
"1001521" -> "1001525"  [label="DDG: "];
"1001525" -> "1001520"  [label="AST: "];
"1001525" -> "1001526"  [label="CFG: "];
"1001526" -> "1001525"  [label="AST: "];
"1001528" -> "1001525"  [label="CFG: "];
}
