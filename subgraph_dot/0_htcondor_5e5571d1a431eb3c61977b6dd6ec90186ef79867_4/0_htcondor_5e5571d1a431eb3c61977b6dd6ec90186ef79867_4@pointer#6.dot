digraph "0_htcondor_5e5571d1a431eb3c61977b6dd6ec90186ef79867_4@pointer" {
"1002271" [label="(Call,(char*)path)"];
"1002239" [label="(Call,access(path, flags))"];
"1002215" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1000224" [label="(Call,dprintf(D_SYSCALLS,\n\t\t\"Got request for syscall %s (%d)\n\",\n\t\tshadow_syscall_name(condor_sysnum), condor_sysnum))"];
"1000158" [label="(Call,dprintf(D_SYSCALLS, \"About to decode condor_sysnum\n\"))"];
"1000227" [label="(Call,shadow_syscall_name(condor_sysnum))"];
"1000163" [label="(Call,syscall_sock->code(condor_sysnum))"];
"1002211" [label="(Call,syscall_sock->code(path))"];
"1000146" [label="(Call,*path = NULL)"];
"1002225" [label="(Call,dprintf( D_SYSCALLS, \"  flags = %d\n\", flags ))"];
"1002221" [label="(Call,syscall_sock->code(flags))"];
"1002205" [label="(Call,flags = -1)"];
"1002207" [label="(Call,-1)"];
"1002270" [label="(Call,free( (char*)path ))"];
"1000637" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1002108" [label="(Call,syscall_sock->code(path))"];
"1001470" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1002226" [label="(Identifier,D_SYSCALLS)"];
"1002219" [label="(Call,result = ( syscall_sock->code(flags) ))"];
"1002369" [label="(Call,syscall_sock->code(path))"];
"1001542" [label="(Call,dprintf( D_SYSCALLS, \"  fs = %d\n\", fd ))"];
"1002220" [label="(Identifier,result)"];
"1002273" [label="(Identifier,path)"];
"1000228" [label="(Identifier,condor_sysnum)"];
"1000227" [label="(Call,shadow_syscall_name(condor_sysnum))"];
"1001380" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1000148" [label="(Identifier,NULL)"];
"1002230" [label="(Identifier,result)"];
"1002211" [label="(Call,syscall_sock->code(path))"];
"1002270" [label="(Call,free( (char*)path ))"];
"1002373" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1002209" [label="(Call,result = ( syscall_sock->code(path) ))"];
"1000261" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000589" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1002241" [label="(Identifier,flags)"];
"1002227" [label="(Literal,\"  flags = %d\n\")"];
"1002463" [label="(Call,dprintf(D_ALWAYS, \"ERROR: unknown syscall %d received\n\", condor_sysnum ))"];
"1000229" [label="(Identifier,condor_sysnum)"];
"1000163" [label="(Call,syscall_sock->code(condor_sysnum))"];
"1000441" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001339" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1002216" [label="(Identifier,D_SYSCALLS)"];
"1002206" [label="(Identifier,flags)"];
"1000853" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1002217" [label="(Literal,\"  path = %s\n\")"];
"1001814" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1001885" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1000224" [label="(Call,dprintf(D_SYSCALLS,\n\t\t\"Got request for syscall %s (%d)\n\",\n\t\tshadow_syscall_name(condor_sysnum), condor_sysnum))"];
"1000226" [label="(Literal,\"Got request for syscall %s (%d)\n\")"];
"1002228" [label="(Identifier,flags)"];
"1002208" [label="(Literal,1)"];
"1001961" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1002285" [label="(Call,syscall_sock->code(path))"];
"1001141" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1002225" [label="(Call,dprintf( D_SYSCALLS, \"  flags = %d\n\", flags ))"];
"1000225" [label="(Identifier,D_SYSCALLS)"];
"1000793" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1001225" [label="(Call,dprintf( D_SYSCALLS, \"  from = %s\n\", from ))"];
"1000159" [label="(Identifier,D_SYSCALLS)"];
"1000955" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1002212" [label="(Identifier,path)"];
"1002112" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1000162" [label="(Identifier,rval)"];
"1002207" [label="(Call,-1)"];
"1002237" [label="(Call,rval = access(path, flags))"];
"1000161" [label="(Call,rval = syscall_sock->code(condor_sysnum))"];
"1000151" [label="(Identifier,buffer)"];
"1000374" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000107" [label="(Block,)"];
"1000160" [label="(Literal,\"About to decode condor_sysnum\n\")"];
"1002205" [label="(Call,flags = -1)"];
"1000530" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000164" [label="(Identifier,condor_sysnum)"];
"1002222" [label="(Identifier,flags)"];
"1002275" [label="(Identifier,result)"];
"1002271" [label="(Call,(char*)path)"];
"1000677" [label="(Call,dprintf( D_SYSCALLS, \"  flags = %d\n\", flags ))"];
"1000319" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000146" [label="(Call,*path = NULL)"];
"1000231" [label="(Identifier,condor_sysnum)"];
"1002247" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1002210" [label="(Identifier,result)"];
"1002203" [label="(Block,)"];
"1002018" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1002240" [label="(Identifier,path)"];
"1000158" [label="(Call,dprintf(D_SYSCALLS, \"About to decode condor_sysnum\n\"))"];
"1001055" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1002215" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1002289" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1000147" [label="(Identifier,path)"];
"1001682" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d\n\", rval ))"];
"1002221" [label="(Call,syscall_sock->code(flags))"];
"1001730" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1002218" [label="(Identifier,path)"];
"1002239" [label="(Call,access(path, flags))"];
"1002472" [label="(MethodReturn,RET)"];
"1001623" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1002271" -> "1002270"  [label="AST: "];
"1002271" -> "1002273"  [label="CFG: "];
"1002272" -> "1002271"  [label="AST: "];
"1002273" -> "1002271"  [label="AST: "];
"1002270" -> "1002271"  [label="CFG: "];
"1002271" -> "1002472"  [label="DDG: "];
"1002271" -> "1002270"  [label="DDG: "];
"1002239" -> "1002271"  [label="DDG: "];
"1002239" -> "1002237"  [label="AST: "];
"1002239" -> "1002241"  [label="CFG: "];
"1002240" -> "1002239"  [label="AST: "];
"1002241" -> "1002239"  [label="AST: "];
"1002237" -> "1002239"  [label="CFG: "];
"1002239" -> "1002472"  [label="DDG: "];
"1002239" -> "1002237"  [label="DDG: "];
"1002239" -> "1002237"  [label="DDG: "];
"1002215" -> "1002239"  [label="DDG: "];
"1002225" -> "1002239"  [label="DDG: "];
"1002215" -> "1002203"  [label="AST: "];
"1002215" -> "1002218"  [label="CFG: "];
"1002216" -> "1002215"  [label="AST: "];
"1002217" -> "1002215"  [label="AST: "];
"1002218" -> "1002215"  [label="AST: "];
"1002220" -> "1002215"  [label="CFG: "];
"1002215" -> "1002472"  [label="DDG: "];
"1000224" -> "1002215"  [label="DDG: "];
"1002211" -> "1002215"  [label="DDG: "];
"1002215" -> "1002225"  [label="DDG: "];
"1000224" -> "1000107"  [label="AST: "];
"1000224" -> "1000229"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000227" -> "1000224"  [label="AST: "];
"1000229" -> "1000224"  [label="AST: "];
"1000231" -> "1000224"  [label="CFG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000158" -> "1000224"  [label="DDG: "];
"1000227" -> "1000224"  [label="DDG: "];
"1000224" -> "1000261"  [label="DDG: "];
"1000224" -> "1000319"  [label="DDG: "];
"1000224" -> "1000374"  [label="DDG: "];
"1000224" -> "1000441"  [label="DDG: "];
"1000224" -> "1000530"  [label="DDG: "];
"1000224" -> "1000589"  [label="DDG: "];
"1000224" -> "1000637"  [label="DDG: "];
"1000224" -> "1000677"  [label="DDG: "];
"1000224" -> "1000793"  [label="DDG: "];
"1000224" -> "1000853"  [label="DDG: "];
"1000224" -> "1000955"  [label="DDG: "];
"1000224" -> "1001055"  [label="DDG: "];
"1000224" -> "1001141"  [label="DDG: "];
"1000224" -> "1001225"  [label="DDG: "];
"1000224" -> "1001339"  [label="DDG: "];
"1000224" -> "1001380"  [label="DDG: "];
"1000224" -> "1001470"  [label="DDG: "];
"1000224" -> "1001542"  [label="DDG: "];
"1000224" -> "1001623"  [label="DDG: "];
"1000224" -> "1001682"  [label="DDG: "];
"1000224" -> "1001730"  [label="DDG: "];
"1000224" -> "1001814"  [label="DDG: "];
"1000224" -> "1001885"  [label="DDG: "];
"1000224" -> "1001961"  [label="DDG: "];
"1000224" -> "1002018"  [label="DDG: "];
"1000224" -> "1002112"  [label="DDG: "];
"1000224" -> "1002289"  [label="DDG: "];
"1000224" -> "1002373"  [label="DDG: "];
"1000224" -> "1002463"  [label="DDG: "];
"1000158" -> "1000107"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000162" -> "1000158"  [label="CFG: "];
"1000158" -> "1002472"  [label="DDG: "];
"1000158" -> "1002472"  [label="DDG: "];
"1000227" -> "1000228"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000227"  [label="CFG: "];
"1000163" -> "1000227"  [label="DDG: "];
"1000163" -> "1000161"  [label="AST: "];
"1000163" -> "1000164"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000163" -> "1002472"  [label="DDG: "];
"1000163" -> "1000161"  [label="DDG: "];
"1002211" -> "1002209"  [label="AST: "];
"1002211" -> "1002212"  [label="CFG: "];
"1002212" -> "1002211"  [label="AST: "];
"1002209" -> "1002211"  [label="CFG: "];
"1002211" -> "1002209"  [label="DDG: "];
"1000146" -> "1002211"  [label="DDG: "];
"1000146" -> "1000107"  [label="AST: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000151" -> "1000146"  [label="CFG: "];
"1000146" -> "1002472"  [label="DDG: "];
"1000146" -> "1002108"  [label="DDG: "];
"1000146" -> "1002285"  [label="DDG: "];
"1000146" -> "1002369"  [label="DDG: "];
"1002225" -> "1002203"  [label="AST: "];
"1002225" -> "1002228"  [label="CFG: "];
"1002226" -> "1002225"  [label="AST: "];
"1002227" -> "1002225"  [label="AST: "];
"1002228" -> "1002225"  [label="AST: "];
"1002230" -> "1002225"  [label="CFG: "];
"1002225" -> "1002472"  [label="DDG: "];
"1002221" -> "1002225"  [label="DDG: "];
"1002225" -> "1002247"  [label="DDG: "];
"1002221" -> "1002219"  [label="AST: "];
"1002221" -> "1002222"  [label="CFG: "];
"1002222" -> "1002221"  [label="AST: "];
"1002219" -> "1002221"  [label="CFG: "];
"1002221" -> "1002219"  [label="DDG: "];
"1002205" -> "1002221"  [label="DDG: "];
"1002205" -> "1002203"  [label="AST: "];
"1002205" -> "1002207"  [label="CFG: "];
"1002206" -> "1002205"  [label="AST: "];
"1002207" -> "1002205"  [label="AST: "];
"1002210" -> "1002205"  [label="CFG: "];
"1002205" -> "1002472"  [label="DDG: "];
"1002207" -> "1002205"  [label="DDG: "];
"1002207" -> "1002208"  [label="CFG: "];
"1002208" -> "1002207"  [label="AST: "];
"1002270" -> "1002203"  [label="AST: "];
"1002275" -> "1002270"  [label="CFG: "];
"1002270" -> "1002472"  [label="DDG: "];
}
