digraph "0_htcondor_5e5571d1a431eb3c61977b6dd6ec90186ef79867_4@API" {
"1002191" [label="(Call,free( (char*)path ))"];
"1002192" [label="(Call,(char*)path)"];
"1002127" [label="(Call,stat(path, &stat_buf))"];
"1002112" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1000224" [label="(Call,dprintf(D_SYSCALLS,\n\t\t\"Got request for syscall %s (%d)\n\",\n\t\tshadow_syscall_name(condor_sysnum), condor_sysnum))"];
"1000158" [label="(Call,dprintf(D_SYSCALLS, \"About to decode condor_sysnum\n\"))"];
"1000227" [label="(Call,shadow_syscall_name(condor_sysnum))"];
"1000163" [label="(Call,syscall_sock->code(condor_sysnum))"];
"1002108" [label="(Call,syscall_sock->code(path))"];
"1000146" [label="(Call,*path = NULL)"];
"1002108" [label="(Call,syscall_sock->code(path))"];
"1000637" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001470" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1002109" [label="(Identifier,path)"];
"1002369" [label="(Call,syscall_sock->code(path))"];
"1001542" [label="(Call,dprintf( D_SYSCALLS, \"  fs = %d\n\", fd ))"];
"1000228" [label="(Identifier,condor_sysnum)"];
"1000148" [label="(Identifier,NULL)"];
"1000227" [label="(Call,shadow_syscall_name(condor_sysnum))"];
"1001380" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1002115" [label="(Identifier,path)"];
"1002373" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1002211" [label="(Call,syscall_sock->code(path))"];
"1000261" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000589" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1002125" [label="(Call,rval = stat(path, &stat_buf))"];
"1002463" [label="(Call,dprintf(D_ALWAYS, \"ERROR: unknown syscall %d received\n\", condor_sysnum ))"];
"1000229" [label="(Identifier,condor_sysnum)"];
"1000163" [label="(Call,syscall_sock->code(condor_sysnum))"];
"1002127" [label="(Call,stat(path, &stat_buf))"];
"1000441" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001339" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000853" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1001814" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1002113" [label="(Identifier,D_SYSCALLS)"];
"1002128" [label="(Identifier,path)"];
"1000224" [label="(Call,dprintf(D_SYSCALLS,\n\t\t\"Got request for syscall %s (%d)\n\",\n\t\tshadow_syscall_name(condor_sysnum), condor_sysnum))"];
"1000226" [label="(Literal,\"Got request for syscall %s (%d)\n\")"];
"1001885" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1002196" [label="(Identifier,result)"];
"1001961" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1002105" [label="(Block,)"];
"1001141" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1002285" [label="(Call,syscall_sock->code(path))"];
"1002194" [label="(Identifier,path)"];
"1000225" [label="(Identifier,D_SYSCALLS)"];
"1000793" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1001225" [label="(Call,dprintf( D_SYSCALLS, \"  from = %s\n\", from ))"];
"1000159" [label="(Identifier,D_SYSCALLS)"];
"1000955" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1002114" [label="(Literal,\"  path = %s\n\")"];
"1002112" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1000162" [label="(Identifier,rval)"];
"1000161" [label="(Call,rval = syscall_sock->code(condor_sysnum))"];
"1000151" [label="(Identifier,buffer)"];
"1000374" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1002159" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1002191" [label="(Call,free( (char*)path ))"];
"1000107" [label="(Block,)"];
"1000160" [label="(Literal,\"About to decode condor_sysnum\n\")"];
"1000530" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000164" [label="(Identifier,condor_sysnum)"];
"1002144" [label="(Call,stat_string(line, &stat_buf))"];
"1002129" [label="(Call,&stat_buf)"];
"1000146" [label="(Call,*path = NULL)"];
"1002192" [label="(Call,(char*)path)"];
"1000319" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000231" [label="(Identifier,condor_sysnum)"];
"1002117" [label="(Identifier,result)"];
"1002018" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1000158" [label="(Call,dprintf(D_SYSCALLS, \"About to decode condor_sysnum\n\"))"];
"1001055" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1002215" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1002289" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1000147" [label="(Identifier,path)"];
"1001682" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d\n\", rval ))"];
"1001730" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1002106" [label="(Call,result = ( syscall_sock->code(path) ))"];
"1000677" [label="(Call,dprintf( D_SYSCALLS, \"  flags = %d\n\", flags ))"];
"1002472" [label="(MethodReturn,RET)"];
"1001623" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1002191" -> "1002105"  [label="AST: "];
"1002191" -> "1002192"  [label="CFG: "];
"1002192" -> "1002191"  [label="AST: "];
"1002196" -> "1002191"  [label="CFG: "];
"1002191" -> "1002472"  [label="DDG: "];
"1002192" -> "1002191"  [label="DDG: "];
"1002192" -> "1002194"  [label="CFG: "];
"1002193" -> "1002192"  [label="AST: "];
"1002194" -> "1002192"  [label="AST: "];
"1002192" -> "1002472"  [label="DDG: "];
"1002127" -> "1002192"  [label="DDG: "];
"1002127" -> "1002125"  [label="AST: "];
"1002127" -> "1002129"  [label="CFG: "];
"1002128" -> "1002127"  [label="AST: "];
"1002129" -> "1002127"  [label="AST: "];
"1002125" -> "1002127"  [label="CFG: "];
"1002127" -> "1002472"  [label="DDG: "];
"1002127" -> "1002125"  [label="DDG: "];
"1002127" -> "1002125"  [label="DDG: "];
"1002112" -> "1002127"  [label="DDG: "];
"1002127" -> "1002144"  [label="DDG: "];
"1002112" -> "1002105"  [label="AST: "];
"1002112" -> "1002115"  [label="CFG: "];
"1002113" -> "1002112"  [label="AST: "];
"1002114" -> "1002112"  [label="AST: "];
"1002115" -> "1002112"  [label="AST: "];
"1002117" -> "1002112"  [label="CFG: "];
"1002112" -> "1002472"  [label="DDG: "];
"1000224" -> "1002112"  [label="DDG: "];
"1002108" -> "1002112"  [label="DDG: "];
"1002112" -> "1002159"  [label="DDG: "];
"1000224" -> "1000107"  [label="AST: "];
"1000224" -> "1000229"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000227" -> "1000224"  [label="AST: "];
"1000229" -> "1000224"  [label="AST: "];
"1000231" -> "1000224"  [label="CFG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000158" -> "1000224"  [label="DDG: "];
"1000227" -> "1000224"  [label="DDG: "];
"1000224" -> "1000261"  [label="DDG: "];
"1000224" -> "1000319"  [label="DDG: "];
"1000224" -> "1000374"  [label="DDG: "];
"1000224" -> "1000441"  [label="DDG: "];
"1000224" -> "1000530"  [label="DDG: "];
"1000224" -> "1000589"  [label="DDG: "];
"1000224" -> "1000637"  [label="DDG: "];
"1000224" -> "1000677"  [label="DDG: "];
"1000224" -> "1000793"  [label="DDG: "];
"1000224" -> "1000853"  [label="DDG: "];
"1000224" -> "1000955"  [label="DDG: "];
"1000224" -> "1001055"  [label="DDG: "];
"1000224" -> "1001141"  [label="DDG: "];
"1000224" -> "1001225"  [label="DDG: "];
"1000224" -> "1001339"  [label="DDG: "];
"1000224" -> "1001380"  [label="DDG: "];
"1000224" -> "1001470"  [label="DDG: "];
"1000224" -> "1001542"  [label="DDG: "];
"1000224" -> "1001623"  [label="DDG: "];
"1000224" -> "1001682"  [label="DDG: "];
"1000224" -> "1001730"  [label="DDG: "];
"1000224" -> "1001814"  [label="DDG: "];
"1000224" -> "1001885"  [label="DDG: "];
"1000224" -> "1001961"  [label="DDG: "];
"1000224" -> "1002018"  [label="DDG: "];
"1000224" -> "1002215"  [label="DDG: "];
"1000224" -> "1002289"  [label="DDG: "];
"1000224" -> "1002373"  [label="DDG: "];
"1000224" -> "1002463"  [label="DDG: "];
"1000158" -> "1000107"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000162" -> "1000158"  [label="CFG: "];
"1000158" -> "1002472"  [label="DDG: "];
"1000158" -> "1002472"  [label="DDG: "];
"1000227" -> "1000228"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000227"  [label="CFG: "];
"1000163" -> "1000227"  [label="DDG: "];
"1000163" -> "1000161"  [label="AST: "];
"1000163" -> "1000164"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000163" -> "1002472"  [label="DDG: "];
"1000163" -> "1000161"  [label="DDG: "];
"1002108" -> "1002106"  [label="AST: "];
"1002108" -> "1002109"  [label="CFG: "];
"1002109" -> "1002108"  [label="AST: "];
"1002106" -> "1002108"  [label="CFG: "];
"1002108" -> "1002106"  [label="DDG: "];
"1000146" -> "1002108"  [label="DDG: "];
"1000146" -> "1000107"  [label="AST: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000151" -> "1000146"  [label="CFG: "];
"1000146" -> "1002472"  [label="DDG: "];
"1000146" -> "1002211"  [label="DDG: "];
"1000146" -> "1002285"  [label="DDG: "];
"1000146" -> "1002369"  [label="DDG: "];
}
