digraph "0_htcondor_5e5571d1a431eb3c61977b6dd6ec90186ef79867_4@API" {
"1001300" [label="(Call,free( (char *)from ))"];
"1001301" [label="(Call,(char *)from)"];
"1001246" [label="(Call,write_access(from))"];
"1001225" [label="(Call,dprintf( D_SYSCALLS, \"  from = %s\n\", from ))"];
"1000224" [label="(Call,dprintf(D_SYSCALLS,\n\t\t\"Got request for syscall %s (%d)\n\",\n\t\tshadow_syscall_name(condor_sysnum), condor_sysnum))"];
"1000158" [label="(Call,dprintf(D_SYSCALLS, \"About to decode condor_sysnum\n\"))"];
"1000227" [label="(Call,shadow_syscall_name(condor_sysnum))"];
"1000163" [label="(Call,syscall_sock->code(condor_sysnum))"];
"1001221" [label="(Call,syscall_sock->code(from))"];
"1001216" [label="(Call,from = NULL)"];
"1001256" [label="(Call,rename( from , to))"];
"1001235" [label="(Call,dprintf( D_SYSCALLS, \"  to = %s\n\", to ))"];
"1001231" [label="(Call,syscall_sock->code(to))"];
"1001213" [label="(Call,to = NULL)"];
"1001248" [label="(Call,write_access(to))"];
"1000637" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001470" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001217" [label="(Identifier,from)"];
"1000227" [label="(Call,shadow_syscall_name(condor_sysnum))"];
"1001236" [label="(Identifier,D_SYSCALLS)"];
"1001303" [label="(Identifier,from)"];
"1001339" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001215" [label="(Identifier,NULL)"];
"1001300" [label="(Call,free( (char *)from ))"];
"1001227" [label="(Literal,\"  from = %s\n\")"];
"1000793" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1001231" [label="(Call,syscall_sock->code(to))"];
"1000161" [label="(Call,rval = syscall_sock->code(condor_sysnum))"];
"1001238" [label="(Identifier,to)"];
"1000374" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001246" [label="(Call,write_access(from))"];
"1001216" [label="(Call,from = NULL)"];
"1000107" [label="(Block,)"];
"1001247" [label="(Identifier,from)"];
"1001254" [label="(Call,rval = rename( from , to))"];
"1001221" [label="(Call,syscall_sock->code(from))"];
"1002289" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001682" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d\n\", rval ))"];
"1001220" [label="(Identifier,result)"];
"1001623" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1001305" [label="(Identifier,result)"];
"1000589" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1002463" [label="(Call,dprintf(D_ALWAYS, \"ERROR: unknown syscall %d received\n\", condor_sysnum ))"];
"1000441" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001141" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1000225" [label="(Identifier,D_SYSCALLS)"];
"1000162" [label="(Identifier,rval)"];
"1000160" [label="(Literal,\"About to decode condor_sysnum\n\")"];
"1000164" [label="(Identifier,condor_sysnum)"];
"1001228" [label="(Identifier,from)"];
"1001301" [label="(Call,(char *)from)"];
"1001055" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1002373" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001730" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1000677" [label="(Call,dprintf( D_SYSCALLS, \"  flags = %d\n\", flags ))"];
"1002472" [label="(MethodReturn,RET)"];
"1001219" [label="(Call,result = ( syscall_sock->code(from) ))"];
"1001222" [label="(Identifier,from)"];
"1001248" [label="(Call,write_access(to))"];
"1001380" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001229" [label="(Call,result = ( syscall_sock->code(to) ))"];
"1000853" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1001885" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1000226" [label="(Literal,\"Got request for syscall %s (%d)\n\")"];
"1001256" [label="(Call,rename( from , to))"];
"1001225" [label="(Call,dprintf( D_SYSCALLS, \"  from = %s\n\", from ))"];
"1000159" [label="(Identifier,D_SYSCALLS)"];
"1000955" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1001245" [label="(Call,write_access(from) && write_access(to))"];
"1000530" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001235" [label="(Call,dprintf( D_SYSCALLS, \"  to = %s\n\", to ))"];
"1000319" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000231" [label="(Identifier,condor_sysnum)"];
"1002018" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1001249" [label="(Identifier,to)"];
"1000158" [label="(Call,dprintf(D_SYSCALLS, \"About to decode condor_sysnum\n\"))"];
"1001257" [label="(Identifier,from)"];
"1001542" [label="(Call,dprintf( D_SYSCALLS, \"  fs = %d\n\", fd ))"];
"1000228" [label="(Identifier,condor_sysnum)"];
"1001214" [label="(Identifier,to)"];
"1000261" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000229" [label="(Identifier,condor_sysnum)"];
"1000163" [label="(Call,syscall_sock->code(condor_sysnum))"];
"1001232" [label="(Identifier,to)"];
"1001258" [label="(Identifier,to)"];
"1001814" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1001213" [label="(Call,to = NULL)"];
"1000224" [label="(Call,dprintf(D_SYSCALLS,\n\t\t\"Got request for syscall %s (%d)\n\",\n\t\tshadow_syscall_name(condor_sysnum), condor_sysnum))"];
"1001230" [label="(Identifier,result)"];
"1001961" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1002112" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001237" [label="(Literal,\"  to = %s\n\")"];
"1001273" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001226" [label="(Identifier,D_SYSCALLS)"];
"1001218" [label="(Identifier,NULL)"];
"1001240" [label="(Identifier,result)"];
"1001297" [label="(Call,(char *)to)"];
"1002215" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001210" [label="(Block,)"];
"1001300" -> "1001210"  [label="AST: "];
"1001300" -> "1001301"  [label="CFG: "];
"1001301" -> "1001300"  [label="AST: "];
"1001305" -> "1001300"  [label="CFG: "];
"1001300" -> "1002472"  [label="DDG: "];
"1001301" -> "1001300"  [label="DDG: "];
"1001301" -> "1001303"  [label="CFG: "];
"1001302" -> "1001301"  [label="AST: "];
"1001303" -> "1001301"  [label="AST: "];
"1001301" -> "1002472"  [label="DDG: "];
"1001246" -> "1001301"  [label="DDG: "];
"1001256" -> "1001301"  [label="DDG: "];
"1001246" -> "1001245"  [label="AST: "];
"1001246" -> "1001247"  [label="CFG: "];
"1001247" -> "1001246"  [label="AST: "];
"1001249" -> "1001246"  [label="CFG: "];
"1001245" -> "1001246"  [label="CFG: "];
"1001246" -> "1001245"  [label="DDG: "];
"1001225" -> "1001246"  [label="DDG: "];
"1001246" -> "1001256"  [label="DDG: "];
"1001225" -> "1001210"  [label="AST: "];
"1001225" -> "1001228"  [label="CFG: "];
"1001226" -> "1001225"  [label="AST: "];
"1001227" -> "1001225"  [label="AST: "];
"1001228" -> "1001225"  [label="AST: "];
"1001230" -> "1001225"  [label="CFG: "];
"1001225" -> "1002472"  [label="DDG: "];
"1000224" -> "1001225"  [label="DDG: "];
"1001221" -> "1001225"  [label="DDG: "];
"1001225" -> "1001235"  [label="DDG: "];
"1000224" -> "1000107"  [label="AST: "];
"1000224" -> "1000229"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000227" -> "1000224"  [label="AST: "];
"1000229" -> "1000224"  [label="AST: "];
"1000231" -> "1000224"  [label="CFG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000158" -> "1000224"  [label="DDG: "];
"1000227" -> "1000224"  [label="DDG: "];
"1000224" -> "1000261"  [label="DDG: "];
"1000224" -> "1000319"  [label="DDG: "];
"1000224" -> "1000374"  [label="DDG: "];
"1000224" -> "1000441"  [label="DDG: "];
"1000224" -> "1000530"  [label="DDG: "];
"1000224" -> "1000589"  [label="DDG: "];
"1000224" -> "1000637"  [label="DDG: "];
"1000224" -> "1000677"  [label="DDG: "];
"1000224" -> "1000793"  [label="DDG: "];
"1000224" -> "1000853"  [label="DDG: "];
"1000224" -> "1000955"  [label="DDG: "];
"1000224" -> "1001055"  [label="DDG: "];
"1000224" -> "1001141"  [label="DDG: "];
"1000224" -> "1001339"  [label="DDG: "];
"1000224" -> "1001380"  [label="DDG: "];
"1000224" -> "1001470"  [label="DDG: "];
"1000224" -> "1001542"  [label="DDG: "];
"1000224" -> "1001623"  [label="DDG: "];
"1000224" -> "1001682"  [label="DDG: "];
"1000224" -> "1001730"  [label="DDG: "];
"1000224" -> "1001814"  [label="DDG: "];
"1000224" -> "1001885"  [label="DDG: "];
"1000224" -> "1001961"  [label="DDG: "];
"1000224" -> "1002018"  [label="DDG: "];
"1000224" -> "1002112"  [label="DDG: "];
"1000224" -> "1002215"  [label="DDG: "];
"1000224" -> "1002289"  [label="DDG: "];
"1000224" -> "1002373"  [label="DDG: "];
"1000224" -> "1002463"  [label="DDG: "];
"1000158" -> "1000107"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000162" -> "1000158"  [label="CFG: "];
"1000158" -> "1002472"  [label="DDG: "];
"1000158" -> "1002472"  [label="DDG: "];
"1000227" -> "1000228"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000227"  [label="CFG: "];
"1000163" -> "1000227"  [label="DDG: "];
"1000163" -> "1000161"  [label="AST: "];
"1000163" -> "1000164"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000163" -> "1002472"  [label="DDG: "];
"1000163" -> "1000161"  [label="DDG: "];
"1001221" -> "1001219"  [label="AST: "];
"1001221" -> "1001222"  [label="CFG: "];
"1001222" -> "1001221"  [label="AST: "];
"1001219" -> "1001221"  [label="CFG: "];
"1001221" -> "1001219"  [label="DDG: "];
"1001216" -> "1001221"  [label="DDG: "];
"1001216" -> "1001210"  [label="AST: "];
"1001216" -> "1001218"  [label="CFG: "];
"1001217" -> "1001216"  [label="AST: "];
"1001218" -> "1001216"  [label="AST: "];
"1001220" -> "1001216"  [label="CFG: "];
"1001216" -> "1002472"  [label="DDG: "];
"1001256" -> "1001254"  [label="AST: "];
"1001256" -> "1001258"  [label="CFG: "];
"1001257" -> "1001256"  [label="AST: "];
"1001258" -> "1001256"  [label="AST: "];
"1001254" -> "1001256"  [label="CFG: "];
"1001256" -> "1001254"  [label="DDG: "];
"1001256" -> "1001254"  [label="DDG: "];
"1001235" -> "1001256"  [label="DDG: "];
"1001248" -> "1001256"  [label="DDG: "];
"1001256" -> "1001297"  [label="DDG: "];
"1001235" -> "1001210"  [label="AST: "];
"1001235" -> "1001238"  [label="CFG: "];
"1001236" -> "1001235"  [label="AST: "];
"1001237" -> "1001235"  [label="AST: "];
"1001238" -> "1001235"  [label="AST: "];
"1001240" -> "1001235"  [label="CFG: "];
"1001235" -> "1002472"  [label="DDG: "];
"1001231" -> "1001235"  [label="DDG: "];
"1001235" -> "1001248"  [label="DDG: "];
"1001235" -> "1001273"  [label="DDG: "];
"1001235" -> "1001297"  [label="DDG: "];
"1001231" -> "1001229"  [label="AST: "];
"1001231" -> "1001232"  [label="CFG: "];
"1001232" -> "1001231"  [label="AST: "];
"1001229" -> "1001231"  [label="CFG: "];
"1001231" -> "1001229"  [label="DDG: "];
"1001213" -> "1001231"  [label="DDG: "];
"1001213" -> "1001210"  [label="AST: "];
"1001213" -> "1001215"  [label="CFG: "];
"1001214" -> "1001213"  [label="AST: "];
"1001215" -> "1001213"  [label="AST: "];
"1001217" -> "1001213"  [label="CFG: "];
"1001248" -> "1001245"  [label="AST: "];
"1001248" -> "1001249"  [label="CFG: "];
"1001249" -> "1001248"  [label="AST: "];
"1001245" -> "1001248"  [label="CFG: "];
"1001248" -> "1001245"  [label="DDG: "];
"1001248" -> "1001297"  [label="DDG: "];
}
