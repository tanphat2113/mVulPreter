digraph "0_htcondor_5e5571d1a431eb3c61977b6dd6ec90186ef79867_4@API" {
"1000733" [label="(Call,safe_open_wrapper_follow( path , flags , lastarg))"];
"1000723" [label="(Call,write_access(path))"];
"1000698" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1000687" [label="(Call,dprintf( D_SYSCALLS, \"  lastarg = %d\n\", lastarg ))"];
"1000677" [label="(Call,dprintf( D_SYSCALLS, \"  flags = %d\n\", flags ))"];
"1000224" [label="(Call,dprintf(D_SYSCALLS,\n\t\t\"Got request for syscall %s (%d)\n\",\n\t\tshadow_syscall_name(condor_sysnum), condor_sysnum))"];
"1000158" [label="(Call,dprintf(D_SYSCALLS, \"About to decode condor_sysnum\n\"))"];
"1000227" [label="(Call,shadow_syscall_name(condor_sysnum))"];
"1000163" [label="(Call,syscall_sock->code(condor_sysnum))"];
"1000673" [label="(Call,syscall_sock->code(flags))"];
"1000683" [label="(Call,syscall_sock->code(lastarg))"];
"1000696" [label="(Call,syscall_sock->code(path))"];
"1000691" [label="(Call,path = NULL)"];
"1000717" [label="(Call,read_access(path))"];
"1000711" [label="(Call,flags & O_RDONLY)"];
"1000731" [label="(Call,rval = safe_open_wrapper_follow( path , flags , lastarg))"];
"1000751" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000759" [label="(Call,syscall_sock->code(rval))"];
"1000757" [label="(Call,result = ( syscall_sock->code(rval) ))"];
"1000761" [label="(Call,ASSERT( result ))"];
"1000764" [label="(Call,rval < 0)"];
"1000770" [label="(Call,syscall_sock->code( terrno ))"];
"1000768" [label="(Call,result = ( syscall_sock->code( terrno ) ))"];
"1000772" [label="(Call,ASSERT( result ))"];
"1000775" [label="(Call,(char *)path)"];
"1000774" [label="(Call,free( (char *)path ))"];
"1000637" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001470" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1000739" [label="(Call,rval = -1)"];
"1000730" [label="(Block,)"];
"1000227" [label="(Call,shadow_syscall_name(condor_sysnum))"];
"1000765" [label="(Identifier,rval)"];
"1000668" [label="(Block,)"];
"1000673" [label="(Call,syscall_sock->code(flags))"];
"1000701" [label="(Identifier,path)"];
"1001339" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000767" [label="(Block,)"];
"1000736" [label="(Identifier,lastarg)"];
"1000779" [label="(Identifier,result)"];
"1000679" [label="(Literal,\"  flags = %d\n\")"];
"1000793" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1000687" [label="(Call,dprintf( D_SYSCALLS, \"  lastarg = %d\n\", lastarg ))"];
"1000770" [label="(Call,syscall_sock->code( terrno ))"];
"1000161" [label="(Call,rval = syscall_sock->code(condor_sysnum))"];
"1000374" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000107" [label="(Block,)"];
"1000690" [label="(Identifier,lastarg)"];
"1000718" [label="(Identifier,path)"];
"1002289" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001682" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d\n\", rval ))"];
"1001623" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1000723" [label="(Call,write_access(path))"];
"1000733" [label="(Call,safe_open_wrapper_follow( path , flags , lastarg))"];
"1000731" [label="(Call,rval = safe_open_wrapper_follow( path , flags , lastarg))"];
"1000751" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000735" [label="(Identifier,flags)"];
"1000773" [label="(Identifier,result)"];
"1000589" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000758" [label="(Identifier,result)"];
"1000689" [label="(Literal,\"  lastarg = %d\n\")"];
"1002463" [label="(Call,dprintf(D_ALWAYS, \"ERROR: unknown syscall %d received\n\", condor_sysnum ))"];
"1000732" [label="(Identifier,rval)"];
"1000441" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000747" [label="(Identifier,terrno)"];
"1000682" [label="(Identifier,result)"];
"1000681" [label="(Call,result = ( syscall_sock->code(lastarg) ))"];
"1000717" [label="(Call,read_access(path))"];
"1000761" [label="(Call,ASSERT( result ))"];
"1000768" [label="(Call,result = ( syscall_sock->code( terrno ) ))"];
"1000691" [label="(Call,path = NULL)"];
"1000711" [label="(Call,flags & O_RDONLY)"];
"1001141" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1000775" [label="(Call,(char *)path)"];
"1000225" [label="(Identifier,D_SYSCALLS)"];
"1000162" [label="(Identifier,rval)"];
"1000699" [label="(Identifier,D_SYSCALLS)"];
"1000680" [label="(Identifier,flags)"];
"1000754" [label="(Identifier,rval)"];
"1000697" [label="(Identifier,path)"];
"1000160" [label="(Literal,\"About to decode condor_sysnum\n\")"];
"1000700" [label="(Literal,\"  path = %s\n\")"];
"1000164" [label="(Identifier,condor_sysnum)"];
"1000756" [label="(Call,syscall_sock->encode())"];
"1000696" [label="(Call,syscall_sock->code(path))"];
"1000755" [label="(Identifier,terrno)"];
"1000692" [label="(Identifier,path)"];
"1000695" [label="(Identifier,result)"];
"1001055" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1000710" [label="(ControlStructure,if ( flags & O_RDONLY ))"];
"1000774" [label="(Call,free( (char *)path ))"];
"1002373" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1000694" [label="(Call,result = ( syscall_sock->code(path) ))"];
"1001730" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1000677" [label="(Call,dprintf( D_SYSCALLS, \"  flags = %d\n\", flags ))"];
"1000688" [label="(Identifier,D_SYSCALLS)"];
"1002472" [label="(MethodReturn,RET)"];
"1000753" [label="(Literal,\"\trval = %d, errno = %d\n\")"];
"1000693" [label="(Identifier,NULL)"];
"1000763" [label="(ControlStructure,if( rval < 0 ))"];
"1001380" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1000678" [label="(Identifier,D_SYSCALLS)"];
"1000721" [label="(Call,access_ok = write_access(path))"];
"1000853" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1001885" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1000226" [label="(Literal,\"Got request for syscall %s (%d)\n\")"];
"1000746" [label="(Call,terrno = (condor_errno_t)errno)"];
"1001225" [label="(Call,dprintf( D_SYSCALLS, \"  from = %s\n\", from ))"];
"1000159" [label="(Identifier,D_SYSCALLS)"];
"1000955" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1000712" [label="(Identifier,flags)"];
"1000674" [label="(Identifier,flags)"];
"1000530" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000752" [label="(Identifier,D_SYSCALLS)"];
"1000716" [label="(Identifier,access_ok)"];
"1000777" [label="(Identifier,path)"];
"1000319" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000231" [label="(Identifier,condor_sysnum)"];
"1002018" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1000715" [label="(Call,access_ok = read_access(path))"];
"1000703" [label="(Identifier,result)"];
"1000158" [label="(Call,dprintf(D_SYSCALLS, \"About to decode condor_sysnum\n\"))"];
"1000683" [label="(Call,syscall_sock->code(lastarg))"];
"1000769" [label="(Identifier,result)"];
"1000713" [label="(Identifier,O_RDONLY)"];
"1001542" [label="(Call,dprintf( D_SYSCALLS, \"  fs = %d\n\", fd ))"];
"1000228" [label="(Identifier,condor_sysnum)"];
"1000671" [label="(Call,result = ( syscall_sock->code(flags) ))"];
"1000698" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1000261" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000772" [label="(Call,ASSERT( result ))"];
"1000229" [label="(Identifier,condor_sysnum)"];
"1000163" [label="(Call,syscall_sock->code(condor_sysnum))"];
"1000764" [label="(Call,rval < 0)"];
"1001814" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1000224" [label="(Call,dprintf(D_SYSCALLS,\n\t\t\"Got request for syscall %s (%d)\n\",\n\t\tshadow_syscall_name(condor_sysnum), condor_sysnum))"];
"1001961" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1000757" [label="(Call,result = ( syscall_sock->code(rval) ))"];
"1002112" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1000684" [label="(Identifier,lastarg)"];
"1000734" [label="(Identifier,path)"];
"1000724" [label="(Identifier,path)"];
"1000760" [label="(Identifier,rval)"];
"1000766" [label="(Literal,0)"];
"1000759" [label="(Call,syscall_sock->code(rval))"];
"1002215" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1000722" [label="(Identifier,access_ok)"];
"1000762" [label="(Identifier,result)"];
"1000771" [label="(Identifier,terrno)"];
"1000733" -> "1000731"  [label="AST: "];
"1000733" -> "1000736"  [label="CFG: "];
"1000734" -> "1000733"  [label="AST: "];
"1000735" -> "1000733"  [label="AST: "];
"1000736" -> "1000733"  [label="AST: "];
"1000731" -> "1000733"  [label="CFG: "];
"1000733" -> "1002472"  [label="DDG: "];
"1000733" -> "1002472"  [label="DDG: "];
"1000733" -> "1000731"  [label="DDG: "];
"1000733" -> "1000731"  [label="DDG: "];
"1000733" -> "1000731"  [label="DDG: "];
"1000723" -> "1000733"  [label="DDG: "];
"1000717" -> "1000733"  [label="DDG: "];
"1000711" -> "1000733"  [label="DDG: "];
"1000687" -> "1000733"  [label="DDG: "];
"1000733" -> "1000775"  [label="DDG: "];
"1000723" -> "1000721"  [label="AST: "];
"1000723" -> "1000724"  [label="CFG: "];
"1000724" -> "1000723"  [label="AST: "];
"1000721" -> "1000723"  [label="CFG: "];
"1000723" -> "1000721"  [label="DDG: "];
"1000698" -> "1000723"  [label="DDG: "];
"1000723" -> "1000775"  [label="DDG: "];
"1000698" -> "1000668"  [label="AST: "];
"1000698" -> "1000701"  [label="CFG: "];
"1000699" -> "1000698"  [label="AST: "];
"1000700" -> "1000698"  [label="AST: "];
"1000701" -> "1000698"  [label="AST: "];
"1000703" -> "1000698"  [label="CFG: "];
"1000698" -> "1002472"  [label="DDG: "];
"1000687" -> "1000698"  [label="DDG: "];
"1000696" -> "1000698"  [label="DDG: "];
"1000698" -> "1000717"  [label="DDG: "];
"1000698" -> "1000751"  [label="DDG: "];
"1000687" -> "1000668"  [label="AST: "];
"1000687" -> "1000690"  [label="CFG: "];
"1000688" -> "1000687"  [label="AST: "];
"1000689" -> "1000687"  [label="AST: "];
"1000690" -> "1000687"  [label="AST: "];
"1000692" -> "1000687"  [label="CFG: "];
"1000687" -> "1002472"  [label="DDG: "];
"1000687" -> "1002472"  [label="DDG: "];
"1000677" -> "1000687"  [label="DDG: "];
"1000683" -> "1000687"  [label="DDG: "];
"1000677" -> "1000668"  [label="AST: "];
"1000677" -> "1000680"  [label="CFG: "];
"1000678" -> "1000677"  [label="AST: "];
"1000679" -> "1000677"  [label="AST: "];
"1000680" -> "1000677"  [label="AST: "];
"1000682" -> "1000677"  [label="CFG: "];
"1000677" -> "1002472"  [label="DDG: "];
"1000224" -> "1000677"  [label="DDG: "];
"1000673" -> "1000677"  [label="DDG: "];
"1000677" -> "1000711"  [label="DDG: "];
"1000224" -> "1000107"  [label="AST: "];
"1000224" -> "1000229"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000227" -> "1000224"  [label="AST: "];
"1000229" -> "1000224"  [label="AST: "];
"1000231" -> "1000224"  [label="CFG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000158" -> "1000224"  [label="DDG: "];
"1000227" -> "1000224"  [label="DDG: "];
"1000224" -> "1000261"  [label="DDG: "];
"1000224" -> "1000319"  [label="DDG: "];
"1000224" -> "1000374"  [label="DDG: "];
"1000224" -> "1000441"  [label="DDG: "];
"1000224" -> "1000530"  [label="DDG: "];
"1000224" -> "1000589"  [label="DDG: "];
"1000224" -> "1000637"  [label="DDG: "];
"1000224" -> "1000793"  [label="DDG: "];
"1000224" -> "1000853"  [label="DDG: "];
"1000224" -> "1000955"  [label="DDG: "];
"1000224" -> "1001055"  [label="DDG: "];
"1000224" -> "1001141"  [label="DDG: "];
"1000224" -> "1001225"  [label="DDG: "];
"1000224" -> "1001339"  [label="DDG: "];
"1000224" -> "1001380"  [label="DDG: "];
"1000224" -> "1001470"  [label="DDG: "];
"1000224" -> "1001542"  [label="DDG: "];
"1000224" -> "1001623"  [label="DDG: "];
"1000224" -> "1001682"  [label="DDG: "];
"1000224" -> "1001730"  [label="DDG: "];
"1000224" -> "1001814"  [label="DDG: "];
"1000224" -> "1001885"  [label="DDG: "];
"1000224" -> "1001961"  [label="DDG: "];
"1000224" -> "1002018"  [label="DDG: "];
"1000224" -> "1002112"  [label="DDG: "];
"1000224" -> "1002215"  [label="DDG: "];
"1000224" -> "1002289"  [label="DDG: "];
"1000224" -> "1002373"  [label="DDG: "];
"1000224" -> "1002463"  [label="DDG: "];
"1000158" -> "1000107"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000162" -> "1000158"  [label="CFG: "];
"1000158" -> "1002472"  [label="DDG: "];
"1000158" -> "1002472"  [label="DDG: "];
"1000227" -> "1000228"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000227"  [label="CFG: "];
"1000163" -> "1000227"  [label="DDG: "];
"1000163" -> "1000161"  [label="AST: "];
"1000163" -> "1000164"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000163" -> "1002472"  [label="DDG: "];
"1000163" -> "1000161"  [label="DDG: "];
"1000673" -> "1000671"  [label="AST: "];
"1000673" -> "1000674"  [label="CFG: "];
"1000674" -> "1000673"  [label="AST: "];
"1000671" -> "1000673"  [label="CFG: "];
"1000673" -> "1000671"  [label="DDG: "];
"1000683" -> "1000681"  [label="AST: "];
"1000683" -> "1000684"  [label="CFG: "];
"1000684" -> "1000683"  [label="AST: "];
"1000681" -> "1000683"  [label="CFG: "];
"1000683" -> "1000681"  [label="DDG: "];
"1000696" -> "1000694"  [label="AST: "];
"1000696" -> "1000697"  [label="CFG: "];
"1000697" -> "1000696"  [label="AST: "];
"1000694" -> "1000696"  [label="CFG: "];
"1000696" -> "1000694"  [label="DDG: "];
"1000691" -> "1000696"  [label="DDG: "];
"1000691" -> "1000668"  [label="AST: "];
"1000691" -> "1000693"  [label="CFG: "];
"1000692" -> "1000691"  [label="AST: "];
"1000693" -> "1000691"  [label="AST: "];
"1000695" -> "1000691"  [label="CFG: "];
"1000691" -> "1002472"  [label="DDG: "];
"1000717" -> "1000715"  [label="AST: "];
"1000717" -> "1000718"  [label="CFG: "];
"1000718" -> "1000717"  [label="AST: "];
"1000715" -> "1000717"  [label="CFG: "];
"1000717" -> "1000715"  [label="DDG: "];
"1000717" -> "1000775"  [label="DDG: "];
"1000711" -> "1000710"  [label="AST: "];
"1000711" -> "1000713"  [label="CFG: "];
"1000712" -> "1000711"  [label="AST: "];
"1000713" -> "1000711"  [label="AST: "];
"1000716" -> "1000711"  [label="CFG: "];
"1000722" -> "1000711"  [label="CFG: "];
"1000711" -> "1002472"  [label="DDG: "];
"1000711" -> "1002472"  [label="DDG: "];
"1000711" -> "1002472"  [label="DDG: "];
"1000731" -> "1000730"  [label="AST: "];
"1000732" -> "1000731"  [label="AST: "];
"1000747" -> "1000731"  [label="CFG: "];
"1000731" -> "1002472"  [label="DDG: "];
"1000731" -> "1000751"  [label="DDG: "];
"1000751" -> "1000668"  [label="AST: "];
"1000751" -> "1000755"  [label="CFG: "];
"1000752" -> "1000751"  [label="AST: "];
"1000753" -> "1000751"  [label="AST: "];
"1000754" -> "1000751"  [label="AST: "];
"1000755" -> "1000751"  [label="AST: "];
"1000756" -> "1000751"  [label="CFG: "];
"1000751" -> "1002472"  [label="DDG: "];
"1000751" -> "1002472"  [label="DDG: "];
"1000751" -> "1002472"  [label="DDG: "];
"1000739" -> "1000751"  [label="DDG: "];
"1000746" -> "1000751"  [label="DDG: "];
"1000751" -> "1000759"  [label="DDG: "];
"1000751" -> "1000770"  [label="DDG: "];
"1000759" -> "1000757"  [label="AST: "];
"1000759" -> "1000760"  [label="CFG: "];
"1000760" -> "1000759"  [label="AST: "];
"1000757" -> "1000759"  [label="CFG: "];
"1000759" -> "1000757"  [label="DDG: "];
"1000759" -> "1000764"  [label="DDG: "];
"1000757" -> "1000668"  [label="AST: "];
"1000758" -> "1000757"  [label="AST: "];
"1000762" -> "1000757"  [label="CFG: "];
"1000757" -> "1002472"  [label="DDG: "];
"1000757" -> "1000761"  [label="DDG: "];
"1000761" -> "1000668"  [label="AST: "];
"1000761" -> "1000762"  [label="CFG: "];
"1000762" -> "1000761"  [label="AST: "];
"1000765" -> "1000761"  [label="CFG: "];
"1000764" -> "1000763"  [label="AST: "];
"1000764" -> "1000766"  [label="CFG: "];
"1000765" -> "1000764"  [label="AST: "];
"1000766" -> "1000764"  [label="AST: "];
"1000769" -> "1000764"  [label="CFG: "];
"1000776" -> "1000764"  [label="CFG: "];
"1000764" -> "1002472"  [label="DDG: "];
"1000764" -> "1002472"  [label="DDG: "];
"1000770" -> "1000768"  [label="AST: "];
"1000770" -> "1000771"  [label="CFG: "];
"1000771" -> "1000770"  [label="AST: "];
"1000768" -> "1000770"  [label="CFG: "];
"1000770" -> "1002472"  [label="DDG: "];
"1000770" -> "1000768"  [label="DDG: "];
"1000768" -> "1000767"  [label="AST: "];
"1000769" -> "1000768"  [label="AST: "];
"1000773" -> "1000768"  [label="CFG: "];
"1000768" -> "1002472"  [label="DDG: "];
"1000768" -> "1000772"  [label="DDG: "];
"1000772" -> "1000767"  [label="AST: "];
"1000772" -> "1000773"  [label="CFG: "];
"1000773" -> "1000772"  [label="AST: "];
"1000776" -> "1000772"  [label="CFG: "];
"1000775" -> "1000774"  [label="AST: "];
"1000775" -> "1000777"  [label="CFG: "];
"1000776" -> "1000775"  [label="AST: "];
"1000777" -> "1000775"  [label="AST: "];
"1000774" -> "1000775"  [label="CFG: "];
"1000775" -> "1002472"  [label="DDG: "];
"1000775" -> "1000774"  [label="DDG: "];
"1000774" -> "1000668"  [label="AST: "];
"1000779" -> "1000774"  [label="CFG: "];
"1000774" -> "1002472"  [label="DDG: "];
}
