digraph "0_htcondor_5e5571d1a431eb3c61977b6dd6ec90186ef79867_4@API" {
"1001893" [label="(Call,assert( syscall_sock->code(rval) ))"];
"1001894" [label="(Call,syscall_sock->code(rval))"];
"1001885" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1000224" [label="(Call,dprintf(D_SYSCALLS,\n\t\t\"Got request for syscall %s (%d)\n\",\n\t\tshadow_syscall_name(condor_sysnum), condor_sysnum))"];
"1000158" [label="(Call,dprintf(D_SYSCALLS, \"About to decode condor_sysnum\n\"))"];
"1000227" [label="(Call,shadow_syscall_name(condor_sysnum))"];
"1000163" [label="(Call,syscall_sock->code(condor_sysnum))"];
"1001876" [label="(Call,rval = -1)"];
"1001878" [label="(Call,-1)"];
"1001865" [label="(Call,rval = pseudo_constrain( expr))"];
"1001867" [label="(Call,pseudo_constrain( expr))"];
"1001852" [label="(Call,syscall_sock->code(expr))"];
"1001848" [label="(Call,*  expr = 0)"];
"1001889" [label="(Call,(int)terrno)"];
"1001869" [label="(Call,terrno = (condor_errno_t)errno)"];
"1001871" [label="(Call,(condor_errno_t)errno)"];
"1001856" [label="(Call,errno = (condor_errno_t)0)"];
"1001858" [label="(Call,(condor_errno_t)0)"];
"1001880" [label="(Call,terrno = (condor_errno_t)EACCES)"];
"1001882" [label="(Call,(condor_errno_t)EACCES)"];
"1000637" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001470" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001866" [label="(Identifier,rval)"];
"1000227" [label="(Call,shadow_syscall_name(condor_sysnum))"];
"1001853" [label="(Identifier,expr)"];
"1001339" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001902" [label="(Call,syscall_sock->code(terrno))"];
"1001891" [label="(Identifier,terrno)"];
"1000793" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1001886" [label="(Identifier,D_SYSCALLS)"];
"1000161" [label="(Call,rval = syscall_sock->code(condor_sysnum))"];
"1001893" [label="(Call,assert( syscall_sock->code(rval) ))"];
"1000374" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000107" [label="(Block,)"];
"1001851" [label="(Call,assert( syscall_sock->code(expr) ))"];
"1001865" [label="(Call,rval = pseudo_constrain( expr))"];
"1001878" [label="(Call,-1)"];
"1002289" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001682" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d\n\", rval ))"];
"1001873" [label="(Identifier,errno)"];
"1001623" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1001871" [label="(Call,(condor_errno_t)errno)"];
"1000589" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001881" [label="(Identifier,terrno)"];
"1001857" [label="(Identifier,errno)"];
"1001876" [label="(Call,rval = -1)"];
"1002463" [label="(Call,dprintf(D_ALWAYS, \"ERROR: unknown syscall %d received\n\", condor_sysnum ))"];
"1000441" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001863" [label="(Identifier,ATTR_REQUIREMENTS)"];
"1001141" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1000225" [label="(Identifier,D_SYSCALLS)"];
"1001870" [label="(Identifier,terrno)"];
"1000162" [label="(Identifier,rval)"];
"1001895" [label="(Identifier,rval)"];
"1001864" [label="(Block,)"];
"1000160" [label="(Literal,\"About to decode condor_sysnum\n\")"];
"1000164" [label="(Identifier,condor_sysnum)"];
"1001887" [label="(Literal,\"\trval = %d, errno = %d\n\")"];
"1001889" [label="(Call,(int)terrno)"];
"1001879" [label="(Literal,1)"];
"1001852" [label="(Call,syscall_sock->code(expr))"];
"1001884" [label="(Identifier,EACCES)"];
"1001055" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1002373" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001730" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1000677" [label="(Call,dprintf( D_SYSCALLS, \"  flags = %d\n\", flags ))"];
"1001868" [label="(Identifier,expr)"];
"1002472" [label="(MethodReturn,RET)"];
"1001860" [label="(Literal,0)"];
"1001380" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001858" [label="(Call,(condor_errno_t)0)"];
"1001848" [label="(Call,*  expr = 0)"];
"1000853" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1001885" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1000226" [label="(Literal,\"Got request for syscall %s (%d)\n\")"];
"1001225" [label="(Call,dprintf( D_SYSCALLS, \"  from = %s\n\", from ))"];
"1000159" [label="(Identifier,D_SYSCALLS)"];
"1000955" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1001898" [label="(Identifier,rval)"];
"1001892" [label="(Call,syscall_sock->encode())"];
"1000530" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001875" [label="(Block,)"];
"1001882" [label="(Call,(condor_errno_t)EACCES)"];
"1001869" [label="(Call,terrno = (condor_errno_t)errno)"];
"1001905" [label="(Call,(char *)expr)"];
"1000319" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000231" [label="(Identifier,condor_sysnum)"];
"1002018" [label="(Call,dprintf( D_SYSCALLS, \"  fd = %d\n\", fd ))"];
"1000158" [label="(Call,dprintf(D_SYSCALLS, \"About to decode condor_sysnum\n\"))"];
"1001542" [label="(Call,dprintf( D_SYSCALLS, \"  fs = %d\n\", fd ))"];
"1000228" [label="(Identifier,condor_sysnum)"];
"1000261" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1001849" [label="(Identifier,expr)"];
"1000229" [label="(Identifier,condor_sysnum)"];
"1001888" [label="(Identifier,rval)"];
"1000163" [label="(Call,syscall_sock->code(condor_sysnum))"];
"1001814" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1001877" [label="(Identifier,rval)"];
"1000224" [label="(Call,dprintf(D_SYSCALLS,\n\t\t\"Got request for syscall %s (%d)\n\",\n\t\tshadow_syscall_name(condor_sysnum), condor_sysnum))"];
"1001897" [label="(Call,rval < 0)"];
"1001961" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, (int)terrno ))"];
"1001846" [label="(Block,)"];
"1001894" [label="(Call,syscall_sock->code(rval))"];
"1002112" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001867" [label="(Call,pseudo_constrain( expr))"];
"1001856" [label="(Call,errno = (condor_errno_t)0)"];
"1001850" [label="(Literal,0)"];
"1002215" [label="(Call,dprintf( D_SYSCALLS, \"  path = %s\n\", path ))"];
"1001880" [label="(Call,terrno = (condor_errno_t)EACCES)"];
"1001893" -> "1001846"  [label="AST: "];
"1001893" -> "1001894"  [label="CFG: "];
"1001894" -> "1001893"  [label="AST: "];
"1001898" -> "1001893"  [label="CFG: "];
"1001893" -> "1002472"  [label="DDG: "];
"1001893" -> "1002472"  [label="DDG: "];
"1001894" -> "1001893"  [label="DDG: "];
"1001894" -> "1001895"  [label="CFG: "];
"1001895" -> "1001894"  [label="AST: "];
"1001885" -> "1001894"  [label="DDG: "];
"1001894" -> "1001897"  [label="DDG: "];
"1001885" -> "1001846"  [label="AST: "];
"1001885" -> "1001889"  [label="CFG: "];
"1001886" -> "1001885"  [label="AST: "];
"1001887" -> "1001885"  [label="AST: "];
"1001888" -> "1001885"  [label="AST: "];
"1001889" -> "1001885"  [label="AST: "];
"1001892" -> "1001885"  [label="CFG: "];
"1001885" -> "1002472"  [label="DDG: "];
"1001885" -> "1002472"  [label="DDG: "];
"1001885" -> "1002472"  [label="DDG: "];
"1000224" -> "1001885"  [label="DDG: "];
"1001876" -> "1001885"  [label="DDG: "];
"1001865" -> "1001885"  [label="DDG: "];
"1001889" -> "1001885"  [label="DDG: "];
"1000224" -> "1000107"  [label="AST: "];
"1000224" -> "1000229"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000227" -> "1000224"  [label="AST: "];
"1000229" -> "1000224"  [label="AST: "];
"1000231" -> "1000224"  [label="CFG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000224" -> "1002472"  [label="DDG: "];
"1000158" -> "1000224"  [label="DDG: "];
"1000227" -> "1000224"  [label="DDG: "];
"1000224" -> "1000261"  [label="DDG: "];
"1000224" -> "1000319"  [label="DDG: "];
"1000224" -> "1000374"  [label="DDG: "];
"1000224" -> "1000441"  [label="DDG: "];
"1000224" -> "1000530"  [label="DDG: "];
"1000224" -> "1000589"  [label="DDG: "];
"1000224" -> "1000637"  [label="DDG: "];
"1000224" -> "1000677"  [label="DDG: "];
"1000224" -> "1000793"  [label="DDG: "];
"1000224" -> "1000853"  [label="DDG: "];
"1000224" -> "1000955"  [label="DDG: "];
"1000224" -> "1001055"  [label="DDG: "];
"1000224" -> "1001141"  [label="DDG: "];
"1000224" -> "1001225"  [label="DDG: "];
"1000224" -> "1001339"  [label="DDG: "];
"1000224" -> "1001380"  [label="DDG: "];
"1000224" -> "1001470"  [label="DDG: "];
"1000224" -> "1001542"  [label="DDG: "];
"1000224" -> "1001623"  [label="DDG: "];
"1000224" -> "1001682"  [label="DDG: "];
"1000224" -> "1001730"  [label="DDG: "];
"1000224" -> "1001814"  [label="DDG: "];
"1000224" -> "1001961"  [label="DDG: "];
"1000224" -> "1002018"  [label="DDG: "];
"1000224" -> "1002112"  [label="DDG: "];
"1000224" -> "1002215"  [label="DDG: "];
"1000224" -> "1002289"  [label="DDG: "];
"1000224" -> "1002373"  [label="DDG: "];
"1000224" -> "1002463"  [label="DDG: "];
"1000158" -> "1000107"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000162" -> "1000158"  [label="CFG: "];
"1000158" -> "1002472"  [label="DDG: "];
"1000158" -> "1002472"  [label="DDG: "];
"1000227" -> "1000228"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000227"  [label="CFG: "];
"1000163" -> "1000227"  [label="DDG: "];
"1000163" -> "1000161"  [label="AST: "];
"1000163" -> "1000164"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000163" -> "1002472"  [label="DDG: "];
"1000163" -> "1000161"  [label="DDG: "];
"1001876" -> "1001875"  [label="AST: "];
"1001876" -> "1001878"  [label="CFG: "];
"1001877" -> "1001876"  [label="AST: "];
"1001878" -> "1001876"  [label="AST: "];
"1001881" -> "1001876"  [label="CFG: "];
"1001876" -> "1002472"  [label="DDG: "];
"1001878" -> "1001876"  [label="DDG: "];
"1001878" -> "1001879"  [label="CFG: "];
"1001879" -> "1001878"  [label="AST: "];
"1001865" -> "1001864"  [label="AST: "];
"1001865" -> "1001867"  [label="CFG: "];
"1001866" -> "1001865"  [label="AST: "];
"1001867" -> "1001865"  [label="AST: "];
"1001870" -> "1001865"  [label="CFG: "];
"1001865" -> "1002472"  [label="DDG: "];
"1001867" -> "1001865"  [label="DDG: "];
"1001867" -> "1001868"  [label="CFG: "];
"1001868" -> "1001867"  [label="AST: "];
"1001852" -> "1001867"  [label="DDG: "];
"1001867" -> "1001905"  [label="DDG: "];
"1001852" -> "1001851"  [label="AST: "];
"1001852" -> "1001853"  [label="CFG: "];
"1001853" -> "1001852"  [label="AST: "];
"1001851" -> "1001852"  [label="CFG: "];
"1001852" -> "1001851"  [label="DDG: "];
"1001848" -> "1001852"  [label="DDG: "];
"1001852" -> "1001905"  [label="DDG: "];
"1001848" -> "1001846"  [label="AST: "];
"1001848" -> "1001850"  [label="CFG: "];
"1001849" -> "1001848"  [label="AST: "];
"1001850" -> "1001848"  [label="AST: "];
"1001853" -> "1001848"  [label="CFG: "];
"1001889" -> "1001891"  [label="CFG: "];
"1001890" -> "1001889"  [label="AST: "];
"1001891" -> "1001889"  [label="AST: "];
"1001889" -> "1002472"  [label="DDG: "];
"1001869" -> "1001889"  [label="DDG: "];
"1001880" -> "1001889"  [label="DDG: "];
"1001889" -> "1001902"  [label="DDG: "];
"1001869" -> "1001864"  [label="AST: "];
"1001869" -> "1001871"  [label="CFG: "];
"1001870" -> "1001869"  [label="AST: "];
"1001871" -> "1001869"  [label="AST: "];
"1001886" -> "1001869"  [label="CFG: "];
"1001869" -> "1002472"  [label="DDG: "];
"1001871" -> "1001869"  [label="DDG: "];
"1001871" -> "1001873"  [label="CFG: "];
"1001872" -> "1001871"  [label="AST: "];
"1001873" -> "1001871"  [label="AST: "];
"1001871" -> "1002472"  [label="DDG: "];
"1001856" -> "1001871"  [label="DDG: "];
"1001856" -> "1001846"  [label="AST: "];
"1001856" -> "1001858"  [label="CFG: "];
"1001857" -> "1001856"  [label="AST: "];
"1001858" -> "1001856"  [label="AST: "];
"1001863" -> "1001856"  [label="CFG: "];
"1001856" -> "1002472"  [label="DDG: "];
"1001856" -> "1002472"  [label="DDG: "];
"1001858" -> "1001856"  [label="DDG: "];
"1001858" -> "1001860"  [label="CFG: "];
"1001859" -> "1001858"  [label="AST: "];
"1001860" -> "1001858"  [label="AST: "];
"1001880" -> "1001875"  [label="AST: "];
"1001880" -> "1001882"  [label="CFG: "];
"1001881" -> "1001880"  [label="AST: "];
"1001882" -> "1001880"  [label="AST: "];
"1001886" -> "1001880"  [label="CFG: "];
"1001880" -> "1002472"  [label="DDG: "];
"1001882" -> "1001880"  [label="DDG: "];
"1001882" -> "1001884"  [label="CFG: "];
"1001883" -> "1001882"  [label="AST: "];
"1001884" -> "1001882"  [label="AST: "];
"1001882" -> "1002472"  [label="DDG: "];
}
