digraph "0_htcondor_5e5571d1a431eb3c61977b6dd6ec90186ef79867_4@pointer" {
"1000421" [label="(Call,*ad = NULL)"];
"1000434" [label="(Call,pseudo_get_user_info(ad))"];
"1000432" [label="(Call,rval = pseudo_get_user_info(ad))"];
"1000441" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000449" [label="(Call,syscall_sock->code(rval))"];
"1000447" [label="(Call,result = ( syscall_sock->code(rval) ))"];
"1000451" [label="(Call,ASSERT( result ))"];
"1000454" [label="(Call,rval < 0)"];
"1000460" [label="(Call,syscall_sock->code( terrno ))"];
"1000458" [label="(Call,result = ( syscall_sock->code( terrno ) ))"];
"1000462" [label="(Call,ASSERT( result ))"];
"1000434" [label="(Call,pseudo_get_user_info(ad))"];
"1000457" [label="(Block,)"];
"1000459" [label="(Identifier,result)"];
"1000458" [label="(Call,result = ( syscall_sock->code( terrno ) ))"];
"1000447" [label="(Call,result = ( syscall_sock->code(rval) ))"];
"1000448" [label="(Identifier,result)"];
"1000467" [label="(Identifier,result)"];
"1000443" [label="(Literal,\"\trval = %d, errno = %d\n\")"];
"1000450" [label="(Identifier,rval)"];
"1000451" [label="(Call,ASSERT( result ))"];
"1000441" [label="(Call,dprintf( D_SYSCALLS, \"\trval = %d, errno = %d\n\", rval, terrno ))"];
"1000446" [label="(Call,syscall_sock->encode())"];
"1000422" [label="(Identifier,ad)"];
"1000432" [label="(Call,rval = pseudo_get_user_info(ad))"];
"1000224" [label="(Call,dprintf(D_SYSCALLS,\n\t\t\"Got request for syscall %s (%d)\n\",\n\t\tshadow_syscall_name(condor_sysnum), condor_sysnum))"];
"1000461" [label="(Identifier,terrno)"];
"1000453" [label="(ControlStructure,if( rval < 0 ))"];
"1000463" [label="(Identifier,result)"];
"1000419" [label="(Block,)"];
"1000433" [label="(Identifier,rval)"];
"1000437" [label="(Identifier,terrno)"];
"1000454" [label="(Call,rval < 0)"];
"1000444" [label="(Identifier,rval)"];
"1000452" [label="(Identifier,result)"];
"1000435" [label="(Identifier,ad)"];
"1000442" [label="(Identifier,D_SYSCALLS)"];
"1000425" [label="(Identifier,result)"];
"1000449" [label="(Call,syscall_sock->code(rval))"];
"1000462" [label="(Call,ASSERT( result ))"];
"1000436" [label="(Call,terrno = (condor_errno_t)errno)"];
"1000455" [label="(Identifier,rval)"];
"1000460" [label="(Call,syscall_sock->code( terrno ))"];
"1000456" [label="(Literal,0)"];
"1000445" [label="(Identifier,terrno)"];
"1000474" [label="(Identifier,result)"];
"1000423" [label="(Identifier,NULL)"];
"1000421" [label="(Call,*ad = NULL)"];
"1002472" [label="(MethodReturn,RET)"];
"1000421" -> "1000419"  [label="AST: "];
"1000421" -> "1000423"  [label="CFG: "];
"1000422" -> "1000421"  [label="AST: "];
"1000423" -> "1000421"  [label="AST: "];
"1000425" -> "1000421"  [label="CFG: "];
"1000421" -> "1002472"  [label="DDG: "];
"1000421" -> "1000434"  [label="DDG: "];
"1000434" -> "1000432"  [label="AST: "];
"1000434" -> "1000435"  [label="CFG: "];
"1000435" -> "1000434"  [label="AST: "];
"1000432" -> "1000434"  [label="CFG: "];
"1000434" -> "1002472"  [label="DDG: "];
"1000434" -> "1000432"  [label="DDG: "];
"1000432" -> "1000419"  [label="AST: "];
"1000433" -> "1000432"  [label="AST: "];
"1000437" -> "1000432"  [label="CFG: "];
"1000432" -> "1002472"  [label="DDG: "];
"1000432" -> "1000441"  [label="DDG: "];
"1000441" -> "1000419"  [label="AST: "];
"1000441" -> "1000445"  [label="CFG: "];
"1000442" -> "1000441"  [label="AST: "];
"1000443" -> "1000441"  [label="AST: "];
"1000444" -> "1000441"  [label="AST: "];
"1000445" -> "1000441"  [label="AST: "];
"1000446" -> "1000441"  [label="CFG: "];
"1000441" -> "1002472"  [label="DDG: "];
"1000441" -> "1002472"  [label="DDG: "];
"1000441" -> "1002472"  [label="DDG: "];
"1000224" -> "1000441"  [label="DDG: "];
"1000436" -> "1000441"  [label="DDG: "];
"1000441" -> "1000449"  [label="DDG: "];
"1000441" -> "1000460"  [label="DDG: "];
"1000449" -> "1000447"  [label="AST: "];
"1000449" -> "1000450"  [label="CFG: "];
"1000450" -> "1000449"  [label="AST: "];
"1000447" -> "1000449"  [label="CFG: "];
"1000449" -> "1000447"  [label="DDG: "];
"1000449" -> "1000454"  [label="DDG: "];
"1000447" -> "1000419"  [label="AST: "];
"1000448" -> "1000447"  [label="AST: "];
"1000452" -> "1000447"  [label="CFG: "];
"1000447" -> "1002472"  [label="DDG: "];
"1000447" -> "1000451"  [label="DDG: "];
"1000451" -> "1000419"  [label="AST: "];
"1000451" -> "1000452"  [label="CFG: "];
"1000452" -> "1000451"  [label="AST: "];
"1000455" -> "1000451"  [label="CFG: "];
"1000454" -> "1000453"  [label="AST: "];
"1000454" -> "1000456"  [label="CFG: "];
"1000455" -> "1000454"  [label="AST: "];
"1000456" -> "1000454"  [label="AST: "];
"1000459" -> "1000454"  [label="CFG: "];
"1000467" -> "1000454"  [label="CFG: "];
"1000454" -> "1002472"  [label="DDG: "];
"1000454" -> "1002472"  [label="DDG: "];
"1000460" -> "1000458"  [label="AST: "];
"1000460" -> "1000461"  [label="CFG: "];
"1000461" -> "1000460"  [label="AST: "];
"1000458" -> "1000460"  [label="CFG: "];
"1000460" -> "1002472"  [label="DDG: "];
"1000460" -> "1000458"  [label="DDG: "];
"1000458" -> "1000457"  [label="AST: "];
"1000459" -> "1000458"  [label="AST: "];
"1000463" -> "1000458"  [label="CFG: "];
"1000458" -> "1002472"  [label="DDG: "];
"1000458" -> "1000462"  [label="DDG: "];
"1000462" -> "1000457"  [label="AST: "];
"1000462" -> "1000463"  [label="CFG: "];
"1000463" -> "1000462"  [label="AST: "];
"1000474" -> "1000462"  [label="CFG: "];
}
