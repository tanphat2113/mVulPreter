digraph "0_linux_232cd35d0804cc241eb887bb8d4d9b3b9881c64a@API" {
"1000345" [label="(Call,mtu - headersize +\n\t\t\t\t sizeof(struct ipv6hdr))"];
"1000309" [label="(Call,mtu - headersize +\n\t\t\t\tsizeof(struct ipv6hdr))"];
"1000287" [label="(Call,mtu - headersize)"];
"1000242" [label="(Call,mtu - fragheaderlen)"];
"1000207" [label="(Call,mtu = cork->fragsize)"];
"1000223" [label="(Call,fragheaderlen = sizeof(struct ipv6hdr) + rt->rt6i_nfheader_len +\n\t\t\t(opt ? opt->opt_nflen : 0))"];
"1000198" [label="(Call,rt->dst.header_len - rt->rt6i_nfheader_len)"];
"1000250" [label="(Call,headersize = sizeof(struct ipv6hdr) +\n\t\t     (opt ? opt->opt_flen + opt->opt_nflen : 0) +\n\t\t     (dst_allfrag(&rt->dst) ?\n\t\t      sizeof(struct frag_hdr) : 0) +\n\t\t     rt->rt6i_nfheader_len)"];
"1000336" [label="(Call,maxnonfragsize - headersize)"];
"1000326" [label="(Call,maxnonfragsize = mtu)"];
"1000319" [label="(Call,maxnonfragsize = sizeof(struct ipv6hdr) + IPV6_MAXPLEN)"];
"1000341" [label="(Call,ipv6_local_error(sk, EMSGSIZE, fl6,\n\t\t\t\t mtu - headersize +\n\t\t\t\t sizeof(struct ipv6hdr)))"];
"1000352" [label="(Call,-EMSGSIZE)"];
"1000351" [label="(Return,return -EMSGSIZE;)"];
"1000337" [label="(Identifier,maxnonfragsize)"];
"1000327" [label="(Identifier,maxnonfragsize)"];
"1000336" [label="(Call,maxnonfragsize - headersize)"];
"1000281" [label="(Call,cork->length + length > mtu - headersize)"];
"1000244" [label="(Identifier,fragheaderlen)"];
"1000246" [label="(Call,fragheaderlen -\n\t\t     sizeof(struct frag_hdr))"];
"1000321" [label="(Call,sizeof(struct ipv6hdr) + IPV6_MAXPLEN)"];
"1000228" [label="(Call,rt->rt6i_nfheader_len +\n\t\t\t(opt ? opt->opt_nflen : 0))"];
"1000320" [label="(Identifier,maxnonfragsize)"];
"1000344" [label="(Identifier,fl6)"];
"1000330" [label="(Call,cork->length + length > maxnonfragsize - headersize)"];
"1000353" [label="(Identifier,EMSGSIZE)"];
"1000316" [label="(ControlStructure,if (ip6_sk_ignore_df(sk)))"];
"1000242" [label="(Call,mtu - fragheaderlen)"];
"1000115" [label="(MethodParameterIn,struct flowi6 *fl6)"];
"1000251" [label="(Identifier,headersize)"];
"1000319" [label="(Call,maxnonfragsize = sizeof(struct ipv6hdr) + IPV6_MAXPLEN)"];
"1000325" [label="(ControlStructure,else)"];
"1000346" [label="(Identifier,mtu)"];
"1000284" [label="(Identifier,cork)"];
"1000266" [label="(Call,(dst_allfrag(&rt->dst) ?\n\t\t      sizeof(struct frag_hdr) : 0) +\n\t\t     rt->rt6i_nfheader_len)"];
"1000223" [label="(Call,fragheaderlen = sizeof(struct ipv6hdr) + rt->rt6i_nfheader_len +\n\t\t\t(opt ? opt->opt_nflen : 0))"];
"1000317" [label="(Call,ip6_sk_ignore_df(sk))"];
"1001103" [label="(MethodReturn,static int)"];
"1000239" [label="(Identifier,maxfraglen)"];
"1000351" [label="(Return,return -EMSGSIZE;)"];
"1000311" [label="(Call,headersize +\n\t\t\t\tsizeof(struct ipv6hdr))"];
"1000347" [label="(Call,headersize +\n\t\t\t\t sizeof(struct ipv6hdr))"];
"1000209" [label="(Call,cork->fragsize)"];
"1000310" [label="(Identifier,mtu)"];
"1000198" [label="(Call,rt->dst.header_len - rt->rt6i_nfheader_len)"];
"1000252" [label="(Call,sizeof(struct ipv6hdr) +\n\t\t     (opt ? opt->opt_flen + opt->opt_nflen : 0) +\n\t\t     (dst_allfrag(&rt->dst) ?\n\t\t      sizeof(struct frag_hdr) : 0) +\n\t\t     rt->rt6i_nfheader_len)"];
"1000309" [label="(Call,mtu - headersize +\n\t\t\t\tsizeof(struct ipv6hdr))"];
"1000287" [label="(Call,mtu - headersize)"];
"1000339" [label="(Block,)"];
"1000371" [label="(Call,mtu - headersize)"];
"1000342" [label="(Identifier,sk)"];
"1000364" [label="(Call,headersize == sizeof(struct ipv6hdr))"];
"1000326" [label="(Call,maxnonfragsize = mtu)"];
"1000207" [label="(Call,mtu = cork->fragsize)"];
"1000196" [label="(Call,dst_exthdrlen = rt->dst.header_len - rt->rt6i_nfheader_len)"];
"1000345" [label="(Call,mtu - headersize +\n\t\t\t\t sizeof(struct ipv6hdr))"];
"1000341" [label="(Call,ipv6_local_error(sk, EMSGSIZE, fl6,\n\t\t\t\t mtu - headersize +\n\t\t\t\t sizeof(struct ipv6hdr)))"];
"1000225" [label="(Call,sizeof(struct ipv6hdr) + rt->rt6i_nfheader_len +\n\t\t\t(opt ? opt->opt_nflen : 0))"];
"1000199" [label="(Call,rt->dst.header_len)"];
"1000241" [label="(Call,(mtu - fragheaderlen) & ~7)"];
"1000437" [label="(Call,(length + fragheaderlen) > mtu)"];
"1000306" [label="(Call,ipv6_local_rxpmtu(sk, fl6, mtu - headersize +\n\t\t\t\tsizeof(struct ipv6hdr)))"];
"1000212" [label="(Call,orig_mtu = mtu)"];
"1000333" [label="(Identifier,cork)"];
"1000204" [label="(Call,rt->rt6i_nfheader_len)"];
"1000127" [label="(Block,)"];
"1000328" [label="(Identifier,mtu)"];
"1000114" [label="(MethodParameterIn,struct sock *sk)"];
"1000288" [label="(Identifier,mtu)"];
"1000289" [label="(Identifier,headersize)"];
"1000224" [label="(Identifier,fragheaderlen)"];
"1000255" [label="(Call,(opt ? opt->opt_flen + opt->opt_nflen : 0) +\n\t\t     (dst_allfrag(&rt->dst) ?\n\t\t      sizeof(struct frag_hdr) : 0) +\n\t\t     rt->rt6i_nfheader_len)"];
"1000352" [label="(Call,-EMSGSIZE)"];
"1000250" [label="(Call,headersize = sizeof(struct ipv6hdr) +\n\t\t     (opt ? opt->opt_flen + opt->opt_nflen : 0) +\n\t\t     (dst_allfrag(&rt->dst) ?\n\t\t      sizeof(struct frag_hdr) : 0) +\n\t\t     rt->rt6i_nfheader_len)"];
"1000245" [label="(Identifier,~7)"];
"1000243" [label="(Identifier,mtu)"];
"1000338" [label="(Identifier,headersize)"];
"1000208" [label="(Identifier,mtu)"];
"1000343" [label="(Identifier,EMSGSIZE)"];
"1000213" [label="(Identifier,orig_mtu)"];
"1000345" -> "1000341"  [label="AST: "];
"1000345" -> "1000347"  [label="CFG: "];
"1000346" -> "1000345"  [label="AST: "];
"1000347" -> "1000345"  [label="AST: "];
"1000341" -> "1000345"  [label="CFG: "];
"1000345" -> "1001103"  [label="DDG: headersize +\n\t\t\t\t sizeof(struct ipv6hdr)"];
"1000345" -> "1001103"  [label="DDG: mtu"];
"1000345" -> "1000341"  [label="DDG: mtu"];
"1000345" -> "1000341"  [label="DDG: headersize +\n\t\t\t\t sizeof(struct ipv6hdr)"];
"1000309" -> "1000345"  [label="DDG: mtu"];
"1000287" -> "1000345"  [label="DDG: mtu"];
"1000287" -> "1000345"  [label="DDG: headersize"];
"1000336" -> "1000345"  [label="DDG: headersize"];
"1000309" -> "1000306"  [label="AST: "];
"1000309" -> "1000311"  [label="CFG: "];
"1000310" -> "1000309"  [label="AST: "];
"1000311" -> "1000309"  [label="AST: "];
"1000306" -> "1000309"  [label="CFG: "];
"1000309" -> "1001103"  [label="DDG: headersize +\n\t\t\t\tsizeof(struct ipv6hdr)"];
"1000309" -> "1000306"  [label="DDG: mtu"];
"1000309" -> "1000306"  [label="DDG: headersize +\n\t\t\t\tsizeof(struct ipv6hdr)"];
"1000287" -> "1000309"  [label="DDG: mtu"];
"1000287" -> "1000309"  [label="DDG: headersize"];
"1000287" -> "1000281"  [label="AST: "];
"1000287" -> "1000289"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000287"  [label="AST: "];
"1000281" -> "1000287"  [label="CFG: "];
"1000287" -> "1000281"  [label="DDG: mtu"];
"1000287" -> "1000281"  [label="DDG: headersize"];
"1000242" -> "1000287"  [label="DDG: mtu"];
"1000250" -> "1000287"  [label="DDG: headersize"];
"1000287" -> "1000311"  [label="DDG: headersize"];
"1000287" -> "1000326"  [label="DDG: mtu"];
"1000287" -> "1000336"  [label="DDG: headersize"];
"1000287" -> "1000347"  [label="DDG: headersize"];
"1000287" -> "1000371"  [label="DDG: mtu"];
"1000287" -> "1000437"  [label="DDG: mtu"];
"1000242" -> "1000241"  [label="AST: "];
"1000242" -> "1000244"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000244" -> "1000242"  [label="AST: "];
"1000245" -> "1000242"  [label="CFG: "];
"1000242" -> "1000241"  [label="DDG: mtu"];
"1000242" -> "1000241"  [label="DDG: fragheaderlen"];
"1000207" -> "1000242"  [label="DDG: mtu"];
"1000223" -> "1000242"  [label="DDG: fragheaderlen"];
"1000242" -> "1000246"  [label="DDG: fragheaderlen"];
"1000207" -> "1000127"  [label="AST: "];
"1000207" -> "1000209"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000209" -> "1000207"  [label="AST: "];
"1000213" -> "1000207"  [label="CFG: "];
"1000207" -> "1001103"  [label="DDG: cork->fragsize"];
"1000207" -> "1000212"  [label="DDG: mtu"];
"1000223" -> "1000127"  [label="AST: "];
"1000223" -> "1000225"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000225" -> "1000223"  [label="AST: "];
"1000239" -> "1000223"  [label="CFG: "];
"1000223" -> "1001103"  [label="DDG: sizeof(struct ipv6hdr) + rt->rt6i_nfheader_len +\n\t\t\t(opt ? opt->opt_nflen : 0)"];
"1000198" -> "1000223"  [label="DDG: rt->rt6i_nfheader_len"];
"1000198" -> "1000196"  [label="AST: "];
"1000198" -> "1000204"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000204" -> "1000198"  [label="AST: "];
"1000196" -> "1000198"  [label="CFG: "];
"1000198" -> "1001103"  [label="DDG: rt->dst.header_len"];
"1000198" -> "1000196"  [label="DDG: rt->dst.header_len"];
"1000198" -> "1000196"  [label="DDG: rt->rt6i_nfheader_len"];
"1000198" -> "1000225"  [label="DDG: rt->rt6i_nfheader_len"];
"1000198" -> "1000228"  [label="DDG: rt->rt6i_nfheader_len"];
"1000198" -> "1000250"  [label="DDG: rt->rt6i_nfheader_len"];
"1000198" -> "1000252"  [label="DDG: rt->rt6i_nfheader_len"];
"1000198" -> "1000255"  [label="DDG: rt->rt6i_nfheader_len"];
"1000198" -> "1000266"  [label="DDG: rt->rt6i_nfheader_len"];
"1000250" -> "1000127"  [label="AST: "];
"1000250" -> "1000252"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000252" -> "1000250"  [label="AST: "];
"1000284" -> "1000250"  [label="CFG: "];
"1000250" -> "1001103"  [label="DDG: sizeof(struct ipv6hdr) +\n\t\t     (opt ? opt->opt_flen + opt->opt_nflen : 0) +\n\t\t     (dst_allfrag(&rt->dst) ?\n\t\t      sizeof(struct frag_hdr) : 0) +\n\t\t     rt->rt6i_nfheader_len"];
"1000336" -> "1000330"  [label="AST: "];
"1000336" -> "1000338"  [label="CFG: "];
"1000337" -> "1000336"  [label="AST: "];
"1000338" -> "1000336"  [label="AST: "];
"1000330" -> "1000336"  [label="CFG: "];
"1000336" -> "1001103"  [label="DDG: headersize"];
"1000336" -> "1001103"  [label="DDG: maxnonfragsize"];
"1000336" -> "1000330"  [label="DDG: maxnonfragsize"];
"1000336" -> "1000330"  [label="DDG: headersize"];
"1000326" -> "1000336"  [label="DDG: maxnonfragsize"];
"1000319" -> "1000336"  [label="DDG: maxnonfragsize"];
"1000336" -> "1000347"  [label="DDG: headersize"];
"1000336" -> "1000364"  [label="DDG: headersize"];
"1000326" -> "1000325"  [label="AST: "];
"1000326" -> "1000328"  [label="CFG: "];
"1000327" -> "1000326"  [label="AST: "];
"1000328" -> "1000326"  [label="AST: "];
"1000333" -> "1000326"  [label="CFG: "];
"1000319" -> "1000316"  [label="AST: "];
"1000319" -> "1000321"  [label="CFG: "];
"1000320" -> "1000319"  [label="AST: "];
"1000321" -> "1000319"  [label="AST: "];
"1000333" -> "1000319"  [label="CFG: "];
"1000319" -> "1001103"  [label="DDG: sizeof(struct ipv6hdr) + IPV6_MAXPLEN"];
"1000341" -> "1000339"  [label="AST: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="AST: "];
"1000344" -> "1000341"  [label="AST: "];
"1000353" -> "1000341"  [label="CFG: "];
"1000341" -> "1001103"  [label="DDG: fl6"];
"1000341" -> "1001103"  [label="DDG: sk"];
"1000341" -> "1001103"  [label="DDG: mtu - headersize +\n\t\t\t\t sizeof(struct ipv6hdr)"];
"1000341" -> "1001103"  [label="DDG: ipv6_local_error(sk, EMSGSIZE, fl6,\n\t\t\t\t mtu - headersize +\n\t\t\t\t sizeof(struct ipv6hdr))"];
"1000317" -> "1000341"  [label="DDG: sk"];
"1000306" -> "1000341"  [label="DDG: sk"];
"1000306" -> "1000341"  [label="DDG: fl6"];
"1000114" -> "1000341"  [label="DDG: sk"];
"1000115" -> "1000341"  [label="DDG: fl6"];
"1000341" -> "1000352"  [label="DDG: EMSGSIZE"];
"1000352" -> "1000351"  [label="AST: "];
"1000352" -> "1000353"  [label="CFG: "];
"1000353" -> "1000352"  [label="AST: "];
"1000351" -> "1000352"  [label="CFG: "];
"1000352" -> "1001103"  [label="DDG: EMSGSIZE"];
"1000352" -> "1001103"  [label="DDG: -EMSGSIZE"];
"1000352" -> "1000351"  [label="DDG: -EMSGSIZE"];
"1000351" -> "1000339"  [label="AST: "];
"1001103" -> "1000351"  [label="CFG: "];
"1000351" -> "1001103"  [label="DDG: <RET>"];
}
