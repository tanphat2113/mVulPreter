digraph "0_linux_232cd35d0804cc241eb887bb8d4d9b3b9881c64a@pointer" {
"1000447" [label="(Call,sk->sk_protocol == IPPROTO_UDP)"];
"1000295" [label="(Call,sk->sk_protocol == IPPROTO_UDP)"];
"1000300" [label="(Call,sk->sk_protocol == IPPROTO_RAW)"];
"1000358" [label="(Call,sk->sk_protocol == IPPROTO_UDP)"];
"1000446" [label="(Call,(sk->sk_protocol == IPPROTO_UDP) &&\n\t    (rt->dst.dev->features & NETIF_F_UFO) && !dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk))"];
"1000435" [label="(Call,(((length + fragheaderlen) > mtu) ||\n\t     (skb && skb_is_gso(skb))) &&\n\t    (sk->sk_protocol == IPPROTO_UDP) &&\n\t    (rt->dst.dev->features & NETIF_F_UFO) && !dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk))"];
"1000365" [label="(Identifier,headersize)"];
"1000296" [label="(Call,sk->sk_protocol)"];
"1000294" [label="(Call,sk->sk_protocol == IPPROTO_UDP ||\n\t     sk->sk_protocol == IPPROTO_RAW)"];
"1000457" [label="(Identifier,rt)"];
"1000452" [label="(Call,(rt->dst.dev->features & NETIF_F_UFO) && !dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk))"];
"1000436" [label="(Call,((length + fragheaderlen) > mtu) ||\n\t     (skb && skb_is_gso(skb)))"];
"1000300" [label="(Call,sk->sk_protocol == IPPROTO_RAW)"];
"1000359" [label="(Call,sk->sk_protocol)"];
"1000301" [label="(Call,sk->sk_protocol)"];
"1000447" [label="(Call,sk->sk_protocol == IPPROTO_UDP)"];
"1001103" [label="(MethodReturn,static int)"];
"1000357" [label="(Call,sk->sk_protocol == IPPROTO_UDP &&\n\t    headersize == sizeof(struct ipv6hdr) &&\n\t    length <= mtu - headersize &&\n\t    !(flags & MSG_MORE) &&\n\t    rt->dst.dev->features & (NETIF_F_IPV6_CSUM | NETIF_F_HW_CSUM))"];
"1000448" [label="(Call,sk->sk_protocol)"];
"1000304" [label="(Identifier,IPPROTO_RAW)"];
"1000295" [label="(Call,sk->sk_protocol == IPPROTO_UDP)"];
"1000446" [label="(Call,(sk->sk_protocol == IPPROTO_UDP) &&\n\t    (rt->dst.dev->features & NETIF_F_UFO) && !dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk))"];
"1000451" [label="(Identifier,IPPROTO_UDP)"];
"1000501" [label="(Identifier,skb)"];
"1000434" [label="(ControlStructure,if ((((length + fragheaderlen) > mtu) ||\n\t     (skb && skb_is_gso(skb))) &&\n\t    (sk->sk_protocol == IPPROTO_UDP) &&\n\t    (rt->dst.dev->features & NETIF_F_UFO) && !dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk)))"];
"1000302" [label="(Identifier,sk)"];
"1000299" [label="(Identifier,IPPROTO_UDP)"];
"1000435" [label="(Call,(((length + fragheaderlen) > mtu) ||\n\t     (skb && skb_is_gso(skb))) &&\n\t    (sk->sk_protocol == IPPROTO_UDP) &&\n\t    (rt->dst.dev->features & NETIF_F_UFO) && !dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk))"];
"1000362" [label="(Identifier,IPPROTO_UDP)"];
"1000358" [label="(Call,sk->sk_protocol == IPPROTO_UDP)"];
"1000480" [label="(Identifier,err)"];
"1000447" -> "1000446"  [label="AST: "];
"1000447" -> "1000451"  [label="CFG: "];
"1000448" -> "1000447"  [label="AST: "];
"1000451" -> "1000447"  [label="AST: "];
"1000457" -> "1000447"  [label="CFG: "];
"1000446" -> "1000447"  [label="CFG: "];
"1000447" -> "1001103"  [label="DDG: IPPROTO_UDP"];
"1000447" -> "1001103"  [label="DDG: sk->sk_protocol"];
"1000447" -> "1000446"  [label="DDG: sk->sk_protocol"];
"1000447" -> "1000446"  [label="DDG: IPPROTO_UDP"];
"1000295" -> "1000447"  [label="DDG: sk->sk_protocol"];
"1000295" -> "1000447"  [label="DDG: IPPROTO_UDP"];
"1000300" -> "1000447"  [label="DDG: sk->sk_protocol"];
"1000358" -> "1000447"  [label="DDG: sk->sk_protocol"];
"1000358" -> "1000447"  [label="DDG: IPPROTO_UDP"];
"1000295" -> "1000294"  [label="AST: "];
"1000295" -> "1000299"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000299" -> "1000295"  [label="AST: "];
"1000302" -> "1000295"  [label="CFG: "];
"1000294" -> "1000295"  [label="CFG: "];
"1000295" -> "1001103"  [label="DDG: sk->sk_protocol"];
"1000295" -> "1001103"  [label="DDG: IPPROTO_UDP"];
"1000295" -> "1000294"  [label="DDG: sk->sk_protocol"];
"1000295" -> "1000294"  [label="DDG: IPPROTO_UDP"];
"1000295" -> "1000300"  [label="DDG: sk->sk_protocol"];
"1000295" -> "1000358"  [label="DDG: sk->sk_protocol"];
"1000295" -> "1000358"  [label="DDG: IPPROTO_UDP"];
"1000300" -> "1000294"  [label="AST: "];
"1000300" -> "1000304"  [label="CFG: "];
"1000301" -> "1000300"  [label="AST: "];
"1000304" -> "1000300"  [label="AST: "];
"1000294" -> "1000300"  [label="CFG: "];
"1000300" -> "1001103"  [label="DDG: IPPROTO_RAW"];
"1000300" -> "1001103"  [label="DDG: sk->sk_protocol"];
"1000300" -> "1000294"  [label="DDG: sk->sk_protocol"];
"1000300" -> "1000294"  [label="DDG: IPPROTO_RAW"];
"1000300" -> "1000358"  [label="DDG: sk->sk_protocol"];
"1000358" -> "1000357"  [label="AST: "];
"1000358" -> "1000362"  [label="CFG: "];
"1000359" -> "1000358"  [label="AST: "];
"1000362" -> "1000358"  [label="AST: "];
"1000365" -> "1000358"  [label="CFG: "];
"1000357" -> "1000358"  [label="CFG: "];
"1000358" -> "1001103"  [label="DDG: IPPROTO_UDP"];
"1000358" -> "1001103"  [label="DDG: sk->sk_protocol"];
"1000358" -> "1000357"  [label="DDG: sk->sk_protocol"];
"1000358" -> "1000357"  [label="DDG: IPPROTO_UDP"];
"1000446" -> "1000435"  [label="AST: "];
"1000446" -> "1000452"  [label="CFG: "];
"1000452" -> "1000446"  [label="AST: "];
"1000435" -> "1000446"  [label="CFG: "];
"1000446" -> "1001103"  [label="DDG: sk->sk_protocol == IPPROTO_UDP"];
"1000446" -> "1001103"  [label="DDG: (rt->dst.dev->features & NETIF_F_UFO) && !dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk)"];
"1000446" -> "1000435"  [label="DDG: sk->sk_protocol == IPPROTO_UDP"];
"1000446" -> "1000435"  [label="DDG: (rt->dst.dev->features & NETIF_F_UFO) && !dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk)"];
"1000452" -> "1000446"  [label="DDG: rt->dst.dev->features & NETIF_F_UFO"];
"1000452" -> "1000446"  [label="DDG: !dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk)"];
"1000435" -> "1000434"  [label="AST: "];
"1000435" -> "1000436"  [label="CFG: "];
"1000436" -> "1000435"  [label="AST: "];
"1000480" -> "1000435"  [label="CFG: "];
"1000501" -> "1000435"  [label="CFG: "];
"1000435" -> "1001103"  [label="DDG: ((length + fragheaderlen) > mtu) ||\n\t     (skb && skb_is_gso(skb))"];
"1000435" -> "1001103"  [label="DDG: (sk->sk_protocol == IPPROTO_UDP) &&\n\t    (rt->dst.dev->features & NETIF_F_UFO) && !dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk)"];
"1000435" -> "1001103"  [label="DDG: (((length + fragheaderlen) > mtu) ||\n\t     (skb && skb_is_gso(skb))) &&\n\t    (sk->sk_protocol == IPPROTO_UDP) &&\n\t    (rt->dst.dev->features & NETIF_F_UFO) && !dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk)"];
"1000436" -> "1000435"  [label="DDG: (length + fragheaderlen) > mtu"];
"1000436" -> "1000435"  [label="DDG: skb && skb_is_gso(skb)"];
}
