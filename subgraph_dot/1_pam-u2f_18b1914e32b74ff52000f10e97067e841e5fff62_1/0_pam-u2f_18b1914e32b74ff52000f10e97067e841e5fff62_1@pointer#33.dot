digraph "0_pam-u2f_18b1914e32b74ff52000f10e97067e841e5fff62_1@pointer" {
"1000174" [label="(Call,D(debug_file, \"Cannot stat file: %s (%s)\", authfile, strerror(errno)))"];
"1000107" [label="(MethodParameterIn,FILE *debug_file)"];
"1000146" [label="(Call,open(authfile, O_RDONLY, 0))"];
"1000103" [label="(MethodParameterIn,const char *authfile)"];
"1000178" [label="(Call,strerror(errno))"];
"1000462" [label="(Call,D(debug_file, \"Found more than %d devices, ignoring the remaining ones\",\n               MAX_DEVS))"];
"1000178" [label="(Call,strerror(errno))"];
"1000174" [label="(Call,D(debug_file, \"Cannot stat file: %s (%s)\", authfile, strerror(errno)))"];
"1000286" [label="(Call,D(debug_file, \"fdopen: %s\", strerror(errno)))"];
"1000231" [label="(Call,D(debug_file, \"Unable to retrieve credentials for uid %u, (%s)\", st.st_uid,\n       strerror(errno)))"];
"1000146" [label="(Call,open(authfile, O_RDONLY, 0))"];
"1000175" [label="(Identifier,debug_file)"];
"1000557" [label="(Call,D(debug_file, \"Length of key number %d is %zu\", i + 1, devices[i].key_len))"];
"1000204" [label="(Call,D(debug_file, \"File %s is empty\", authfile))"];
"1000512" [label="(Call,D(debug_file, \"Unable to retrieve publicKey number %d\", i + 1))"];
"1000144" [label="(Call,fd = open(authfile, O_RDONLY, 0))"];
"1000177" [label="(Identifier,authfile)"];
"1000176" [label="(Literal,\"Cannot stat file: %s (%s)\")"];
"1000180" [label="(ControlStructure,goto err;)"];
"1000722" [label="(MethodReturn,int)"];
"1000521" [label="(Call,D(debug_file, \"publicKey for device number %d: %s\", i + 1, s_token))"];
"1000469" [label="(Call,D(debug_file, \"KeyHandle for device number %d: %s\", i + 1, s_token))"];
"1000372" [label="(Call,D(debug_file, \"Matched user: %s\", s_user))"];
"1000494" [label="(Call,D(debug_file, \"Unable to allocate memory for keyHandle number %d\", i))"];
"1000157" [label="(Call,D(debug_file, \"Cannot open file: %s (%s)\", authfile, strerror(errno)))"];
"1000172" [label="(ControlStructure,if (verbose))"];
"1000538" [label="(Call,D(debug_file, \"Length of key number %d not even\", i + 1))"];
"1000270" [label="(Call,D(debug_file, \"The owner of the authentication file is not root\"))"];
"1000147" [label="(Identifier,authfile)"];
"1000629" [label="(Call,D(debug_file, \"Invalid hex number in key\"))"];
"1000148" [label="(Identifier,O_RDONLY)"];
"1000149" [label="(Literal,0)"];
"1000264" [label="(Call,D(debug_file, \"The owner of the authentication file is neither %s nor root\",\n         username))"];
"1000107" [label="(MethodParameterIn,FILE *debug_file)"];
"1000593" [label="(Call,D(debug_file, \"Unable to allocate memory for publicKey number %d\", i))"];
"1000190" [label="(Call,D(debug_file, \"%s is not a regular file\", authfile))"];
"1000648" [label="(Call,D(debug_file, \"Found %d device(s) for user %s\", *n_devs, username))"];
"1000179" [label="(Identifier,errno)"];
"1000307" [label="(Call,D(debug_file, \"Unable to allocate memory\"))"];
"1000350" [label="(Call,D(debug_file, \"Authorization line: %s\", buf))"];
"1000103" [label="(MethodParameterIn,const char *authfile)"];
"1000174" -> "1000172"  [label="AST: "];
"1000174" -> "1000178"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000176" -> "1000174"  [label="AST: "];
"1000177" -> "1000174"  [label="AST: "];
"1000178" -> "1000174"  [label="AST: "];
"1000180" -> "1000174"  [label="CFG: "];
"1000174" -> "1000722"  [label="DDG: "];
"1000174" -> "1000722"  [label="DDG: "];
"1000174" -> "1000722"  [label="DDG: "];
"1000174" -> "1000722"  [label="DDG: "];
"1000107" -> "1000174"  [label="DDG: "];
"1000146" -> "1000174"  [label="DDG: "];
"1000103" -> "1000174"  [label="DDG: "];
"1000178" -> "1000174"  [label="DDG: "];
"1000107" -> "1000102"  [label="AST: "];
"1000107" -> "1000722"  [label="DDG: "];
"1000107" -> "1000157"  [label="DDG: "];
"1000107" -> "1000190"  [label="DDG: "];
"1000107" -> "1000204"  [label="DDG: "];
"1000107" -> "1000231"  [label="DDG: "];
"1000107" -> "1000264"  [label="DDG: "];
"1000107" -> "1000270"  [label="DDG: "];
"1000107" -> "1000286"  [label="DDG: "];
"1000107" -> "1000307"  [label="DDG: "];
"1000107" -> "1000350"  [label="DDG: "];
"1000107" -> "1000372"  [label="DDG: "];
"1000107" -> "1000462"  [label="DDG: "];
"1000107" -> "1000469"  [label="DDG: "];
"1000107" -> "1000494"  [label="DDG: "];
"1000107" -> "1000512"  [label="DDG: "];
"1000107" -> "1000521"  [label="DDG: "];
"1000107" -> "1000538"  [label="DDG: "];
"1000107" -> "1000557"  [label="DDG: "];
"1000107" -> "1000593"  [label="DDG: "];
"1000107" -> "1000629"  [label="DDG: "];
"1000107" -> "1000648"  [label="DDG: "];
"1000146" -> "1000144"  [label="AST: "];
"1000146" -> "1000149"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000149" -> "1000146"  [label="AST: "];
"1000144" -> "1000146"  [label="CFG: "];
"1000146" -> "1000722"  [label="DDG: "];
"1000146" -> "1000722"  [label="DDG: "];
"1000146" -> "1000144"  [label="DDG: "];
"1000146" -> "1000144"  [label="DDG: "];
"1000146" -> "1000144"  [label="DDG: "];
"1000103" -> "1000146"  [label="DDG: "];
"1000146" -> "1000157"  [label="DDG: "];
"1000146" -> "1000190"  [label="DDG: "];
"1000146" -> "1000204"  [label="DDG: "];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000722"  [label="DDG: "];
"1000103" -> "1000157"  [label="DDG: "];
"1000103" -> "1000190"  [label="DDG: "];
"1000103" -> "1000204"  [label="DDG: "];
"1000178" -> "1000179"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000178" -> "1000722"  [label="DDG: "];
}
