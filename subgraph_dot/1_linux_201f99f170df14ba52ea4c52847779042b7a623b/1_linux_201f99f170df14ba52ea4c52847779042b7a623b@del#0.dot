digraph "1_linux_201f99f170df14ba52ea4c52847779042b7a623b@del" {
"1000110" [label="(Call,copy_from_user(buf, buffer, count))"];
"1000102" [label="(MethodParameterIn,const char __user *buffer)"];
"1000103" [label="(MethodParameterIn,size_t count)"];
"1000119" [label="(Call,simple_strtol(buf, &end, 0))"];
"1000117" [label="(Call,tmp = simple_strtol(buf, &end, 0))"];
"1000137" [label="(Call,uml_exitcode = tmp)"];
"1000140" [label="(Return,return count;)"];
"1000118" [label="(Identifier,tmp)"];
"1000123" [label="(Literal,0)"];
"1000116" [label="(Identifier,EFAULT)"];
"1000137" [label="(Call,uml_exitcode = tmp)"];
"1000113" [label="(Identifier,count)"];
"1000105" [label="(Block,)"];
"1000110" [label="(Call,copy_from_user(buf, buffer, count))"];
"1000138" [label="(Identifier,uml_exitcode)"];
"1000112" [label="(Identifier,buffer)"];
"1000139" [label="(Identifier,tmp)"];
"1000140" [label="(Return,return count;)"];
"1000128" [label="(Identifier,end)"];
"1000121" [label="(Call,&end)"];
"1000141" [label="(Identifier,count)"];
"1000111" [label="(Identifier,buf)"];
"1000142" [label="(MethodReturn,static ssize_t)"];
"1000119" [label="(Call,simple_strtol(buf, &end, 0))"];
"1000109" [label="(ControlStructure,if (copy_from_user(buf, buffer, count)))"];
"1000120" [label="(Identifier,buf)"];
"1000117" [label="(Call,tmp = simple_strtol(buf, &end, 0))"];
"1000103" [label="(MethodParameterIn,size_t count)"];
"1000102" [label="(MethodParameterIn,const char __user *buffer)"];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000113"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000112" -> "1000110"  [label="AST: "];
"1000113" -> "1000110"  [label="AST: "];
"1000116" -> "1000110"  [label="CFG: "];
"1000118" -> "1000110"  [label="CFG: "];
"1000110" -> "1000142"  [label="DDG: buffer"];
"1000110" -> "1000142"  [label="DDG: count"];
"1000110" -> "1000142"  [label="DDG: copy_from_user(buf, buffer, count)"];
"1000110" -> "1000142"  [label="DDG: buf"];
"1000102" -> "1000110"  [label="DDG: buffer"];
"1000103" -> "1000110"  [label="DDG: count"];
"1000110" -> "1000119"  [label="DDG: buf"];
"1000110" -> "1000140"  [label="DDG: count"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000142"  [label="DDG: buffer"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000142"  [label="DDG: count"];
"1000103" -> "1000140"  [label="DDG: count"];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000123"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000123" -> "1000119"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000119" -> "1000142"  [label="DDG: &end"];
"1000119" -> "1000142"  [label="DDG: buf"];
"1000119" -> "1000117"  [label="DDG: buf"];
"1000119" -> "1000117"  [label="DDG: &end"];
"1000119" -> "1000117"  [label="DDG: 0"];
"1000117" -> "1000105"  [label="AST: "];
"1000118" -> "1000117"  [label="AST: "];
"1000128" -> "1000117"  [label="CFG: "];
"1000117" -> "1000142"  [label="DDG: tmp"];
"1000117" -> "1000142"  [label="DDG: simple_strtol(buf, &end, 0)"];
"1000117" -> "1000137"  [label="DDG: tmp"];
"1000137" -> "1000105"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000141" -> "1000137"  [label="CFG: "];
"1000137" -> "1000142"  [label="DDG: uml_exitcode"];
"1000137" -> "1000142"  [label="DDG: tmp"];
"1000140" -> "1000105"  [label="AST: "];
"1000140" -> "1000141"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000142" -> "1000140"  [label="CFG: "];
"1000140" -> "1000142"  [label="DDG: <RET>"];
"1000141" -> "1000140"  [label="DDG: count"];
}
