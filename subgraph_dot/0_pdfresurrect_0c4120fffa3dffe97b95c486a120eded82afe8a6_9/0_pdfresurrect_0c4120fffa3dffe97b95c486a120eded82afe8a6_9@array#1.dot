digraph "0_pdfresurrect_0c4120fffa3dffe97b95c486a120eded82afe8a6_9@array" {
"1000194" [label="(Call,n_versions && pdf->xrefs[0].is_linear)"];
"1000188" [label="(Call,n_versions = pdf->n_xrefs)"];
"1000203" [label="(Call,--n_versions)"];
"1000226" [label="(Call,--n_versions)"];
"1000235" [label="(Call,!n_versions)"];
"1000234" [label="(Call,!n_versions && pdf->xrefs[0].is_linear)"];
"1000229" [label="(Call,!pdf->n_xrefs || (!n_versions && pdf->xrefs[0].is_linear))"];
"1000371" [label="(Call,fprintf(out,\n                \"---------- %s ----------\n\"\n                \"Versions: %d\n\", \n                pdf->name,\n                n_versions))"];
"1000440" [label="(Call,fprintf(out,\n                        \"Version %d -- %d objects\n\",\n                        pdf->xrefs[i].version, \n                        n_entries))"];
"1000431" [label="(Call,pdf->xrefs[i].version && n_entries)"];
"1000452" [label="(Call,fprintf(out, \"%s: %d\n\", pdf->name, n_versions))"];
"1000227" [label="(Identifier,n_versions)"];
"1000204" [label="(Identifier,n_versions)"];
"1000190" [label="(Call,pdf->n_xrefs)"];
"1000194" [label="(Call,n_versions && pdf->xrefs[0].is_linear)"];
"1000452" [label="(Call,fprintf(out, \"%s: %d\n\", pdf->name, n_versions))"];
"1000440" [label="(Call,fprintf(out,\n                        \"Version %d -- %d objects\n\",\n                        pdf->xrefs[i].version, \n                        n_entries))"];
"1000226" [label="(Call,--n_versions)"];
"1000455" [label="(Call,pdf->name)"];
"1000443" [label="(Call,pdf->xrefs[i].version)"];
"1000372" [label="(Identifier,out)"];
"1000454" [label="(Literal,\"%s: %d\n\")"];
"1000195" [label="(Identifier,n_versions)"];
"1000203" [label="(Call,--n_versions)"];
"1000458" [label="(Identifier,n_versions)"];
"1000381" [label="(Identifier,pdf)"];
"1000354" [label="(Block,)"];
"1000182" [label="(Call,out = (dst) ? dst : stdout)"];
"1000230" [label="(Call,!pdf->n_xrefs)"];
"1000439" [label="(Identifier,n_entries)"];
"1000292" [label="(Call,fprintf(out,\n                    \"%s: --%c-- Version %d -- Object %d (%s)\",\n                    pdf->name,\n                    pdf_get_object_status(pdf, i, j),\n                    pdf->xrefs[i].version,\n                    pdf->xrefs[i].entries[j].obj_id,\n                    get_type(fp, pdf->xrefs[i].entries[j].obj_id,\n                             &pdf->xrefs[i])))"];
"1000377" [label="(Identifier,n_versions)"];
"1000453" [label="(Identifier,out)"];
"1000441" [label="(Identifier,out)"];
"1000240" [label="(Identifier,pdf)"];
"1000234" [label="(Call,!n_versions && pdf->xrefs[0].is_linear)"];
"1000442" [label="(Literal,\"Version %d -- %d objects\n\")"];
"1000341" [label="(Call,fprintf(out, \" Page(%d)\n\", page))"];
"1000229" [label="(Call,!pdf->n_xrefs || (!n_versions && pdf->xrefs[0].is_linear))"];
"1000248" [label="(Identifier,n_entries)"];
"1000236" [label="(Identifier,n_versions)"];
"1000374" [label="(Call,pdf->name)"];
"1000117" [label="(Block,)"];
"1000244" [label="(Call,n_versions = 1)"];
"1000189" [label="(Identifier,n_versions)"];
"1000466" [label="(MethodReturn,void)"];
"1000431" [label="(Call,pdf->xrefs[i].version && n_entries)"];
"1000432" [label="(Call,pdf->xrefs[i].version)"];
"1000235" [label="(Call,!n_versions)"];
"1000245" [label="(Identifier,n_versions)"];
"1000373" [label="(Literal,\"---------- %s ----------\n\"\n                \"Versions: %d\n\")"];
"1000215" [label="(Identifier,i)"];
"1000237" [label="(Call,pdf->xrefs[0].is_linear)"];
"1000371" [label="(Call,fprintf(out,\n                \"---------- %s ----------\n\"\n                \"Versions: %d\n\", \n                pdf->name,\n                n_versions))"];
"1000196" [label="(Call,pdf->xrefs[0].is_linear)"];
"1000346" [label="(Call,fprintf(out, \"\n\"))"];
"1000362" [label="(Call,fprintf(out,\n               \"%s: This PDF contains potential cross reference streams.\n\"\n               \"%s: An object summary is not available.\n\",\n               pdf->name,\n               pdf->name))"];
"1000228" [label="(ControlStructure,if (!pdf->n_xrefs || (!n_versions && pdf->xrefs[0].is_linear)))"];
"1000450" [label="(Identifier,n_entries)"];
"1000430" [label="(ControlStructure,if (pdf->xrefs[i].version && n_entries))"];
"1000421" [label="(Call,n_entries += pdf->xrefs[0].n_entries)"];
"1000188" [label="(Call,n_versions = pdf->n_xrefs)"];
"1000216" [label="(ControlStructure,if (pdf->xrefs[i].end == 0))"];
"1000393" [label="(Identifier,i)"];
"1000404" [label="(Call,n_entries = pdf->xrefs[i].n_entries)"];
"1000451" [label="(ControlStructure,else)"];
"1000193" [label="(ControlStructure,if (n_versions && pdf->xrefs[0].is_linear))"];
"1000207" [label="(Identifier,i)"];
"1000460" [label="(Identifier,dst)"];
"1000194" -> "1000193"  [label="AST: "];
"1000194" -> "1000195"  [label="CFG: "];
"1000194" -> "1000196"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000196" -> "1000194"  [label="AST: "];
"1000204" -> "1000194"  [label="CFG: "];
"1000207" -> "1000194"  [label="CFG: "];
"1000194" -> "1000466"  [label="DDG: "];
"1000194" -> "1000466"  [label="DDG: "];
"1000188" -> "1000194"  [label="DDG: "];
"1000194" -> "1000203"  [label="DDG: "];
"1000194" -> "1000226"  [label="DDG: "];
"1000194" -> "1000235"  [label="DDG: "];
"1000194" -> "1000234"  [label="DDG: "];
"1000194" -> "1000371"  [label="DDG: "];
"1000194" -> "1000452"  [label="DDG: "];
"1000188" -> "1000117"  [label="AST: "];
"1000188" -> "1000190"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000188"  [label="AST: "];
"1000195" -> "1000188"  [label="CFG: "];
"1000203" -> "1000193"  [label="AST: "];
"1000203" -> "1000204"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000207" -> "1000203"  [label="CFG: "];
"1000203" -> "1000226"  [label="DDG: "];
"1000203" -> "1000235"  [label="DDG: "];
"1000203" -> "1000371"  [label="DDG: "];
"1000203" -> "1000452"  [label="DDG: "];
"1000226" -> "1000216"  [label="AST: "];
"1000226" -> "1000227"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000215" -> "1000226"  [label="CFG: "];
"1000226" -> "1000235"  [label="DDG: "];
"1000226" -> "1000371"  [label="DDG: "];
"1000226" -> "1000452"  [label="DDG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000235" -> "1000236"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000240" -> "1000235"  [label="CFG: "];
"1000234" -> "1000235"  [label="CFG: "];
"1000235" -> "1000234"  [label="DDG: "];
"1000235" -> "1000371"  [label="DDG: "];
"1000235" -> "1000452"  [label="DDG: "];
"1000234" -> "1000229"  [label="AST: "];
"1000234" -> "1000237"  [label="CFG: "];
"1000237" -> "1000234"  [label="AST: "];
"1000229" -> "1000234"  [label="CFG: "];
"1000234" -> "1000466"  [label="DDG: "];
"1000234" -> "1000466"  [label="DDG: "];
"1000234" -> "1000229"  [label="DDG: "];
"1000234" -> "1000229"  [label="DDG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000229" -> "1000230"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000245" -> "1000229"  [label="CFG: "];
"1000248" -> "1000229"  [label="CFG: "];
"1000229" -> "1000466"  [label="DDG: "];
"1000229" -> "1000466"  [label="DDG: "];
"1000229" -> "1000466"  [label="DDG: "];
"1000230" -> "1000229"  [label="DDG: "];
"1000371" -> "1000354"  [label="AST: "];
"1000371" -> "1000377"  [label="CFG: "];
"1000372" -> "1000371"  [label="AST: "];
"1000373" -> "1000371"  [label="AST: "];
"1000374" -> "1000371"  [label="AST: "];
"1000377" -> "1000371"  [label="AST: "];
"1000381" -> "1000371"  [label="CFG: "];
"1000371" -> "1000466"  [label="DDG: "];
"1000371" -> "1000466"  [label="DDG: "];
"1000371" -> "1000466"  [label="DDG: "];
"1000371" -> "1000466"  [label="DDG: "];
"1000346" -> "1000371"  [label="DDG: "];
"1000341" -> "1000371"  [label="DDG: "];
"1000182" -> "1000371"  [label="DDG: "];
"1000362" -> "1000371"  [label="DDG: "];
"1000362" -> "1000371"  [label="DDG: "];
"1000292" -> "1000371"  [label="DDG: "];
"1000244" -> "1000371"  [label="DDG: "];
"1000371" -> "1000440"  [label="DDG: "];
"1000440" -> "1000430"  [label="AST: "];
"1000440" -> "1000450"  [label="CFG: "];
"1000441" -> "1000440"  [label="AST: "];
"1000442" -> "1000440"  [label="AST: "];
"1000443" -> "1000440"  [label="AST: "];
"1000450" -> "1000440"  [label="AST: "];
"1000393" -> "1000440"  [label="CFG: "];
"1000440" -> "1000466"  [label="DDG: "];
"1000440" -> "1000466"  [label="DDG: "];
"1000440" -> "1000466"  [label="DDG: "];
"1000440" -> "1000466"  [label="DDG: "];
"1000440" -> "1000431"  [label="DDG: "];
"1000431" -> "1000440"  [label="DDG: "];
"1000431" -> "1000440"  [label="DDG: "];
"1000431" -> "1000430"  [label="AST: "];
"1000431" -> "1000432"  [label="CFG: "];
"1000431" -> "1000439"  [label="CFG: "];
"1000432" -> "1000431"  [label="AST: "];
"1000439" -> "1000431"  [label="AST: "];
"1000441" -> "1000431"  [label="CFG: "];
"1000393" -> "1000431"  [label="CFG: "];
"1000431" -> "1000466"  [label="DDG: "];
"1000431" -> "1000466"  [label="DDG: "];
"1000431" -> "1000466"  [label="DDG: "];
"1000292" -> "1000431"  [label="DDG: "];
"1000404" -> "1000431"  [label="DDG: "];
"1000421" -> "1000431"  [label="DDG: "];
"1000452" -> "1000451"  [label="AST: "];
"1000452" -> "1000458"  [label="CFG: "];
"1000453" -> "1000452"  [label="AST: "];
"1000454" -> "1000452"  [label="AST: "];
"1000455" -> "1000452"  [label="AST: "];
"1000458" -> "1000452"  [label="AST: "];
"1000460" -> "1000452"  [label="CFG: "];
"1000452" -> "1000466"  [label="DDG: "];
"1000452" -> "1000466"  [label="DDG: "];
"1000452" -> "1000466"  [label="DDG: "];
"1000452" -> "1000466"  [label="DDG: "];
"1000346" -> "1000452"  [label="DDG: "];
"1000341" -> "1000452"  [label="DDG: "];
"1000182" -> "1000452"  [label="DDG: "];
"1000292" -> "1000452"  [label="DDG: "];
"1000244" -> "1000452"  [label="DDG: "];
}
