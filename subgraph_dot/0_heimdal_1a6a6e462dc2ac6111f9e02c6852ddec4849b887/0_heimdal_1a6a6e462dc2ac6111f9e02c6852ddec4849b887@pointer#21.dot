digraph "0_heimdal_1a6a6e462dc2ac6111f9e02c6852ddec4849b887@pointer" {
"1000210" [label="(Call,f = b->kdc_options)"];
"1000962" [label="(Call,f.renew || f.validate || f.proxy || f.forwarded || f.enc_tkt_in_skey\n       || (_kdc_is_anon_request(b) && !config->allow_anonymous))"];
"1000966" [label="(Call,f.validate || f.proxy || f.forwarded || f.enc_tkt_in_skey\n       || (_kdc_is_anon_request(b) && !config->allow_anonymous))"];
"1000970" [label="(Call,f.proxy || f.forwarded || f.enc_tkt_in_skey\n       || (_kdc_is_anon_request(b) && !config->allow_anonymous))"];
"1000974" [label="(Call,f.forwarded || f.enc_tkt_in_skey\n       || (_kdc_is_anon_request(b) && !config->allow_anonymous))"];
"1000978" [label="(Call,f.enc_tkt_in_skey\n       || (_kdc_is_anon_request(b) && !config->allow_anonymous))"];
"1001170" [label="(Call,r->et.flags.forwardable = f.forwardable)"];
"1002036" [label="(Call,r->ek.flags = r->et.flags)"];
"1001214" [label="(Call,r->et.flags.proxiable = f.proxiable)"];
"1001258" [label="(Call,r->et.flags.may_postdate = f.allow_postdate)"];
"1001344" [label="(Call,f.postdated && req->req_body.from)"];
"1001469" [label="(Call,f.renewable_ok && r->et.endtime < *b->till)"];
"1001526" [label="(Call,f.renewable && b->rtime)"];
"1000967" [label="(Call,f.validate)"];
"1000982" [label="(Call,_kdc_is_anon_request(b) && !config->allow_anonymous)"];
"1001484" [label="(Call,f.renewable = 1)"];
"1001490" [label="(Call,b->rtime == NULL)"];
"1001357" [label="(Identifier,r)"];
"1001468" [label="(ControlStructure,if(f.renewable_ok && r->et.endtime < *b->till))"];
"1001396" [label="(Identifier,b)"];
"1000211" [label="(Identifier,f)"];
"1001200" [label="(Identifier,r)"];
"1000963" [label="(Call,f.renew)"];
"1000971" [label="(Call,f.proxy)"];
"1001194" [label="(ControlStructure,if(r->client->entry.flags.proxiable && r->server->entry.flags.proxiable))"];
"1001258" [label="(Call,r->et.flags.may_postdate = f.allow_postdate)"];
"1000970" [label="(Call,f.proxy || f.forwarded || f.enc_tkt_in_skey\n       || (_kdc_is_anon_request(b) && !config->allow_anonymous))"];
"1001348" [label="(Call,req->req_body.from)"];
"1000732" [label="(Call,r->et.flags.pre_authent = 1)"];
"1000961" [label="(ControlStructure,if(f.renew || f.validate || f.proxy || f.forwarded || f.enc_tkt_in_skey\n       || (_kdc_is_anon_request(b) && !config->allow_anonymous)))"];
"1000975" [label="(Call,f.forwarded)"];
"1002036" [label="(Call,r->ek.flags = r->et.flags)"];
"1001618" [label="(Call,r->et.flags.renewable = 1)"];
"1001528" [label="(Identifier,f)"];
"1001535" [label="(Identifier,t)"];
"1002042" [label="(Call,r->et.flags)"];
"1001285" [label="(Identifier,context)"];
"1000979" [label="(Call,f.enc_tkt_in_skey)"];
"1001375" [label="(Call,r->et.flags.invalid = 1)"];
"1001266" [label="(Call,f.allow_postdate)"];
"1001384" [label="(Call,r->et.flags.postdated = 1)"];
"1001527" [label="(Call,f.renewable)"];
"1001486" [label="(Identifier,f)"];
"1000991" [label="(Identifier,ret)"];
"1001629" [label="(Identifier,b)"];
"1000131" [label="(Block,)"];
"1001496" [label="(Call,ALLOC(b->rtime))"];
"1001222" [label="(Call,f.proxiable)"];
"1001170" [label="(Call,r->et.flags.forwardable = f.forwardable)"];
"1001469" [label="(Call,f.renewable_ok && r->et.endtime < *b->till)"];
"1000212" [label="(Call,b->kdc_options)"];
"1001178" [label="(Call,f.forwardable)"];
"1001238" [label="(ControlStructure,if(r->client->entry.flags.postdate && r->server->entry.flags.postdate))"];
"1001343" [label="(ControlStructure,if(f.postdated && req->req_body.from))"];
"1000966" [label="(Call,f.validate || f.proxy || f.forwarded || f.enc_tkt_in_skey\n       || (_kdc_is_anon_request(b) && !config->allow_anonymous))"];
"1001630" [label="(Call,r->et.flags.anonymous = 1)"];
"1000210" [label="(Call,f = b->kdc_options)"];
"1001345" [label="(Call,f.postdated)"];
"1000962" [label="(Call,f.renew || f.validate || f.proxy || f.forwarded || f.enc_tkt_in_skey\n       || (_kdc_is_anon_request(b) && !config->allow_anonymous))"];
"1001171" [label="(Call,r->et.flags.forwardable)"];
"1001244" [label="(Identifier,r)"];
"1000978" [label="(Call,f.enc_tkt_in_skey\n       || (_kdc_is_anon_request(b) && !config->allow_anonymous))"];
"1000217" [label="(Identifier,f)"];
"1001215" [label="(Call,r->et.flags.proxiable)"];
"1001530" [label="(Call,b->rtime)"];
"1000999" [label="(Identifier,rep)"];
"1001470" [label="(Call,f.renewable_ok)"];
"1000974" [label="(Call,f.forwarded || f.enc_tkt_in_skey\n       || (_kdc_is_anon_request(b) && !config->allow_anonymous))"];
"1001141" [label="(Call,r->et.flags.initial = 1)"];
"1002037" [label="(Call,r->ek.flags)"];
"1002050" [label="(Identifier,r)"];
"1001259" [label="(Call,r->et.flags.may_postdate)"];
"1001526" [label="(Call,f.renewable && b->rtime)"];
"1001473" [label="(Call,r->et.endtime < *b->till)"];
"1001525" [label="(ControlStructure,if(f.renewable && b->rtime))"];
"1002698" [label="(MethodReturn,RET)"];
"1001344" [label="(Call,f.postdated && req->req_body.from)"];
"1001214" [label="(Call,r->et.flags.proxiable = f.proxiable)"];
"1001150" [label="(ControlStructure,if(r->client->entry.flags.forwardable && r->server->entry.flags.forwardable))"];
"1000210" -> "1000131"  [label="AST: "];
"1000210" -> "1000212"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="AST: "];
"1000217" -> "1000210"  [label="CFG: "];
"1000210" -> "1002698"  [label="DDG: b->kdc_options"];
"1000210" -> "1002698"  [label="DDG: f"];
"1000210" -> "1000962"  [label="DDG: f"];
"1000210" -> "1000966"  [label="DDG: f"];
"1000210" -> "1000970"  [label="DDG: f"];
"1000210" -> "1000974"  [label="DDG: f"];
"1000210" -> "1000978"  [label="DDG: f"];
"1000210" -> "1001170"  [label="DDG: f"];
"1000210" -> "1001214"  [label="DDG: f"];
"1000210" -> "1001258"  [label="DDG: f"];
"1000210" -> "1001344"  [label="DDG: f"];
"1000210" -> "1001469"  [label="DDG: f"];
"1000210" -> "1001526"  [label="DDG: f"];
"1000962" -> "1000961"  [label="AST: "];
"1000962" -> "1000963"  [label="CFG: "];
"1000962" -> "1000966"  [label="CFG: "];
"1000963" -> "1000962"  [label="AST: "];
"1000966" -> "1000962"  [label="AST: "];
"1000991" -> "1000962"  [label="CFG: "];
"1000999" -> "1000962"  [label="CFG: "];
"1000962" -> "1002698"  [label="DDG: f.renew || f.validate || f.proxy || f.forwarded || f.enc_tkt_in_skey\n       || (_kdc_is_anon_request(b) && !config->allow_anonymous)"];
"1000962" -> "1002698"  [label="DDG: f.validate || f.proxy || f.forwarded || f.enc_tkt_in_skey\n       || (_kdc_is_anon_request(b) && !config->allow_anonymous)"];
"1000962" -> "1002698"  [label="DDG: f.renew"];
"1000966" -> "1000962"  [label="DDG: f.validate"];
"1000966" -> "1000962"  [label="DDG: f.proxy || f.forwarded || f.enc_tkt_in_skey\n       || (_kdc_is_anon_request(b) && !config->allow_anonymous)"];
"1000966" -> "1000967"  [label="CFG: "];
"1000966" -> "1000970"  [label="CFG: "];
"1000967" -> "1000966"  [label="AST: "];
"1000970" -> "1000966"  [label="AST: "];
"1000966" -> "1002698"  [label="DDG: f.validate"];
"1000966" -> "1002698"  [label="DDG: f.proxy || f.forwarded || f.enc_tkt_in_skey\n       || (_kdc_is_anon_request(b) && !config->allow_anonymous)"];
"1000970" -> "1000966"  [label="DDG: f.proxy"];
"1000970" -> "1000966"  [label="DDG: f.forwarded || f.enc_tkt_in_skey\n       || (_kdc_is_anon_request(b) && !config->allow_anonymous)"];
"1000970" -> "1000971"  [label="CFG: "];
"1000970" -> "1000974"  [label="CFG: "];
"1000971" -> "1000970"  [label="AST: "];
"1000974" -> "1000970"  [label="AST: "];
"1000970" -> "1002698"  [label="DDG: f.forwarded || f.enc_tkt_in_skey\n       || (_kdc_is_anon_request(b) && !config->allow_anonymous)"];
"1000970" -> "1002698"  [label="DDG: f.proxy"];
"1000974" -> "1000970"  [label="DDG: f.forwarded"];
"1000974" -> "1000970"  [label="DDG: f.enc_tkt_in_skey\n       || (_kdc_is_anon_request(b) && !config->allow_anonymous)"];
"1000974" -> "1000975"  [label="CFG: "];
"1000974" -> "1000978"  [label="CFG: "];
"1000975" -> "1000974"  [label="AST: "];
"1000978" -> "1000974"  [label="AST: "];
"1000974" -> "1002698"  [label="DDG: f.forwarded"];
"1000974" -> "1002698"  [label="DDG: f.enc_tkt_in_skey\n       || (_kdc_is_anon_request(b) && !config->allow_anonymous)"];
"1000978" -> "1000974"  [label="DDG: f.enc_tkt_in_skey"];
"1000978" -> "1000974"  [label="DDG: _kdc_is_anon_request(b) && !config->allow_anonymous"];
"1000978" -> "1000979"  [label="CFG: "];
"1000978" -> "1000982"  [label="CFG: "];
"1000979" -> "1000978"  [label="AST: "];
"1000982" -> "1000978"  [label="AST: "];
"1000978" -> "1002698"  [label="DDG: _kdc_is_anon_request(b) && !config->allow_anonymous"];
"1000978" -> "1002698"  [label="DDG: f.enc_tkt_in_skey"];
"1000982" -> "1000978"  [label="DDG: _kdc_is_anon_request(b)"];
"1000982" -> "1000978"  [label="DDG: !config->allow_anonymous"];
"1001170" -> "1001150"  [label="AST: "];
"1001170" -> "1001178"  [label="CFG: "];
"1001171" -> "1001170"  [label="AST: "];
"1001178" -> "1001170"  [label="AST: "];
"1001200" -> "1001170"  [label="CFG: "];
"1001170" -> "1002698"  [label="DDG: f.forwardable"];
"1001170" -> "1002698"  [label="DDG: r->et.flags.forwardable"];
"1001170" -> "1002036"  [label="DDG: r->et.flags.forwardable"];
"1002036" -> "1000131"  [label="AST: "];
"1002036" -> "1002042"  [label="CFG: "];
"1002037" -> "1002036"  [label="AST: "];
"1002042" -> "1002036"  [label="AST: "];
"1002050" -> "1002036"  [label="CFG: "];
"1002036" -> "1002698"  [label="DDG: r->et.flags"];
"1002036" -> "1002698"  [label="DDG: r->ek.flags"];
"1001630" -> "1002036"  [label="DDG: r->et.flags.anonymous"];
"1001214" -> "1002036"  [label="DDG: r->et.flags.proxiable"];
"1001384" -> "1002036"  [label="DDG: r->et.flags.postdated"];
"1001618" -> "1002036"  [label="DDG: r->et.flags.renewable"];
"1001141" -> "1002036"  [label="DDG: r->et.flags.initial"];
"1001258" -> "1002036"  [label="DDG: r->et.flags.may_postdate"];
"1001375" -> "1002036"  [label="DDG: r->et.flags.invalid"];
"1000732" -> "1002036"  [label="DDG: r->et.flags.pre_authent"];
"1001214" -> "1001194"  [label="AST: "];
"1001214" -> "1001222"  [label="CFG: "];
"1001215" -> "1001214"  [label="AST: "];
"1001222" -> "1001214"  [label="AST: "];
"1001244" -> "1001214"  [label="CFG: "];
"1001214" -> "1002698"  [label="DDG: r->et.flags.proxiable"];
"1001214" -> "1002698"  [label="DDG: f.proxiable"];
"1001258" -> "1001238"  [label="AST: "];
"1001258" -> "1001266"  [label="CFG: "];
"1001259" -> "1001258"  [label="AST: "];
"1001266" -> "1001258"  [label="AST: "];
"1001285" -> "1001258"  [label="CFG: "];
"1001258" -> "1002698"  [label="DDG: f.allow_postdate"];
"1001258" -> "1002698"  [label="DDG: r->et.flags.may_postdate"];
"1001344" -> "1001343"  [label="AST: "];
"1001344" -> "1001345"  [label="CFG: "];
"1001344" -> "1001348"  [label="CFG: "];
"1001345" -> "1001344"  [label="AST: "];
"1001348" -> "1001344"  [label="AST: "];
"1001357" -> "1001344"  [label="CFG: "];
"1001396" -> "1001344"  [label="CFG: "];
"1001344" -> "1002698"  [label="DDG: req->req_body.from"];
"1001344" -> "1002698"  [label="DDG: f.postdated && req->req_body.from"];
"1001344" -> "1002698"  [label="DDG: f.postdated"];
"1001469" -> "1001468"  [label="AST: "];
"1001469" -> "1001470"  [label="CFG: "];
"1001469" -> "1001473"  [label="CFG: "];
"1001470" -> "1001469"  [label="AST: "];
"1001473" -> "1001469"  [label="AST: "];
"1001486" -> "1001469"  [label="CFG: "];
"1001528" -> "1001469"  [label="CFG: "];
"1001469" -> "1002698"  [label="DDG: r->et.endtime < *b->till"];
"1001469" -> "1002698"  [label="DDG: f.renewable_ok && r->et.endtime < *b->till"];
"1001469" -> "1002698"  [label="DDG: f.renewable_ok"];
"1001473" -> "1001469"  [label="DDG: r->et.endtime"];
"1001473" -> "1001469"  [label="DDG: *b->till"];
"1001526" -> "1001525"  [label="AST: "];
"1001526" -> "1001527"  [label="CFG: "];
"1001526" -> "1001530"  [label="CFG: "];
"1001527" -> "1001526"  [label="AST: "];
"1001530" -> "1001526"  [label="AST: "];
"1001535" -> "1001526"  [label="CFG: "];
"1001629" -> "1001526"  [label="CFG: "];
"1001526" -> "1002698"  [label="DDG: b->rtime"];
"1001526" -> "1002698"  [label="DDG: f.renewable && b->rtime"];
"1001526" -> "1002698"  [label="DDG: f.renewable"];
"1001484" -> "1001526"  [label="DDG: f.renewable"];
"1001496" -> "1001526"  [label="DDG: b->rtime"];
"1001490" -> "1001526"  [label="DDG: b->rtime"];
}
