digraph "0_Android_9d4853418ab2f754c2b63e091c29c5529b8b86ca_57@pointer" {
"1000346" [label="(Call,that->alpha = scale)"];
"1000216" [label="(Call,sample_scale(that->bluef, scale))"];
"1000186" [label="(Call,sample_scale(that->greenf, scale))"];
"1000134" [label="(Call,sample_scale(that->redf, scale))"];
"1000113" [label="(Call,scale = (1U<<that->sample_depth)-1)"];
"1000115" [label="(Call,(1U<<that->sample_depth)-1)"];
"1000116" [label="(Call,1U<<that->sample_depth)"];
"1000371" [label="(Call,that->alpha >>= that->sample_depth - that->alpha_sBIT)"];
"1000285" [label="(Call,that->bluef = that->greenf = that->redf)"];
"1000182" [label="(Call,that->green = sample_scale(that->greenf, scale))"];
"1000382" [label="(MethodReturn,RET)"];
"1000224" [label="(Call,that->blue_sBIT < that->sample_depth)"];
"1000128" [label="(Call,(display)\n\n /* At the end recalculate the digitized red green and blue values according\n    * to the current sample_depth of the pixel.\n    *\n    * The sample value is simply scaled to the maximum, checking for over\n    * and underflow (which can both happen for some image transforms,\n    * including simple size scaling, though libpng doesn't do that at present.\n\n     */\n    that->red = sample_scale(that->redf, scale))"];
"1000220" [label="(Identifier,scale)"];
"1000345" [label="(Block,)"];
"1000186" [label="(Call,sample_scale(that->greenf, scale))"];
"1000212" [label="(Call,that->blue = sample_scale(that->bluef, scale))"];
"1000371" [label="(Call,that->alpha >>= that->sample_depth - that->alpha_sBIT)"];
"1000194" [label="(Call,that->green_sBIT < that->sample_depth)"];
"1000372" [label="(Call,that->alpha)"];
"1000205" [label="(Call,that->sample_depth - that->green_sBIT)"];
"1000111" [label="(Block,)"];
"1000117" [label="(Literal,1U)"];
"1000113" [label="(Call,scale = (1U<<that->sample_depth)-1)"];
"1000190" [label="(Identifier,scale)"];
"1000353" [label="(Identifier,that)"];
"1000142" [label="(Call,that->red_sBIT < that->sample_depth)"];
"1000118" [label="(Call,that->sample_depth)"];
"1000138" [label="(Identifier,scale)"];
"1000135" [label="(Call,that->redf)"];
"1000216" [label="(Call,sample_scale(that->bluef, scale))"];
"1000346" [label="(Call,that->alpha = scale)"];
"1000289" [label="(Call,that->greenf = that->redf)"];
"1000320" [label="(Call,that->alpha = sample_scale(that->alphaf, scale))"];
"1000124" [label="(Identifier,sig_bits)"];
"1000375" [label="(Call,that->sample_depth - that->alpha_sBIT)"];
"1000217" [label="(Call,that->bluef)"];
"1000153" [label="(Call,that->sample_depth - that->red_sBIT)"];
"1000187" [label="(Call,that->greenf)"];
"1000235" [label="(Call,that->sample_depth - that->blue_sBIT)"];
"1000347" [label="(Call,that->alpha)"];
"1000116" [label="(Call,1U<<that->sample_depth)"];
"1000350" [label="(Identifier,scale)"];
"1000115" [label="(Call,(1U<<that->sample_depth)-1)"];
"1000134" [label="(Call,sample_scale(that->redf, scale))"];
"1000114" [label="(Identifier,scale)"];
"1000361" [label="(ControlStructure,if (sig_bits && that->alpha_sBIT < that->sample_depth))"];
"1000121" [label="(Literal,1)"];
"1000324" [label="(Call,sample_scale(that->alphaf, scale))"];
"1000364" [label="(Call,that->alpha_sBIT < that->sample_depth)"];
"1000346" -> "1000345"  [label="AST: "];
"1000346" -> "1000350"  [label="CFG: "];
"1000347" -> "1000346"  [label="AST: "];
"1000350" -> "1000346"  [label="AST: "];
"1000353" -> "1000346"  [label="CFG: "];
"1000346" -> "1000382"  [label="DDG: that->alpha"];
"1000346" -> "1000382"  [label="DDG: scale"];
"1000216" -> "1000346"  [label="DDG: scale"];
"1000134" -> "1000346"  [label="DDG: scale"];
"1000346" -> "1000371"  [label="DDG: that->alpha"];
"1000216" -> "1000212"  [label="AST: "];
"1000216" -> "1000220"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000220" -> "1000216"  [label="AST: "];
"1000212" -> "1000216"  [label="CFG: "];
"1000216" -> "1000382"  [label="DDG: that->bluef"];
"1000216" -> "1000212"  [label="DDG: that->bluef"];
"1000216" -> "1000212"  [label="DDG: scale"];
"1000186" -> "1000216"  [label="DDG: scale"];
"1000216" -> "1000324"  [label="DDG: scale"];
"1000186" -> "1000182"  [label="AST: "];
"1000186" -> "1000190"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000190" -> "1000186"  [label="AST: "];
"1000182" -> "1000186"  [label="CFG: "];
"1000186" -> "1000382"  [label="DDG: that->greenf"];
"1000186" -> "1000182"  [label="DDG: that->greenf"];
"1000186" -> "1000182"  [label="DDG: scale"];
"1000134" -> "1000186"  [label="DDG: scale"];
"1000134" -> "1000128"  [label="AST: "];
"1000134" -> "1000138"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000138" -> "1000134"  [label="AST: "];
"1000128" -> "1000134"  [label="CFG: "];
"1000134" -> "1000382"  [label="DDG: that->redf"];
"1000134" -> "1000128"  [label="DDG: that->redf"];
"1000134" -> "1000128"  [label="DDG: scale"];
"1000113" -> "1000134"  [label="DDG: scale"];
"1000134" -> "1000285"  [label="DDG: that->redf"];
"1000134" -> "1000289"  [label="DDG: that->redf"];
"1000134" -> "1000324"  [label="DDG: scale"];
"1000113" -> "1000111"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000124" -> "1000113"  [label="CFG: "];
"1000113" -> "1000382"  [label="DDG: (1U<<that->sample_depth)-1"];
"1000115" -> "1000113"  [label="DDG: 1U<<that->sample_depth"];
"1000115" -> "1000113"  [label="DDG: 1"];
"1000115" -> "1000121"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000121" -> "1000115"  [label="AST: "];
"1000115" -> "1000382"  [label="DDG: 1U<<that->sample_depth"];
"1000116" -> "1000115"  [label="DDG: 1U"];
"1000116" -> "1000115"  [label="DDG: that->sample_depth"];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000121" -> "1000116"  [label="CFG: "];
"1000116" -> "1000382"  [label="DDG: that->sample_depth"];
"1000116" -> "1000142"  [label="DDG: that->sample_depth"];
"1000116" -> "1000153"  [label="DDG: that->sample_depth"];
"1000116" -> "1000194"  [label="DDG: that->sample_depth"];
"1000116" -> "1000205"  [label="DDG: that->sample_depth"];
"1000116" -> "1000224"  [label="DDG: that->sample_depth"];
"1000116" -> "1000235"  [label="DDG: that->sample_depth"];
"1000116" -> "1000364"  [label="DDG: that->sample_depth"];
"1000116" -> "1000375"  [label="DDG: that->sample_depth"];
"1000371" -> "1000361"  [label="AST: "];
"1000371" -> "1000375"  [label="CFG: "];
"1000372" -> "1000371"  [label="AST: "];
"1000375" -> "1000371"  [label="AST: "];
"1000382" -> "1000371"  [label="CFG: "];
"1000371" -> "1000382"  [label="DDG: that->sample_depth - that->alpha_sBIT"];
"1000371" -> "1000382"  [label="DDG: that->alpha"];
"1000371" -> "1000382"  [label="DDG: that->alpha >>= that->sample_depth - that->alpha_sBIT"];
"1000320" -> "1000371"  [label="DDG: that->alpha"];
"1000375" -> "1000371"  [label="DDG: that->sample_depth"];
"1000375" -> "1000371"  [label="DDG: that->alpha_sBIT"];
}
