digraph "0_linux_c131187db2d3fa2f8bf32fdf4e9a4ef805168467_1@pointer" {
"1000452" [label="(Call,verbose(env, \"same insn cannot be used with different pointers\n\"))"];
"1000395" [label="(Call,check_mem_access(env, insn_idx, insn->src_reg, insn->off,\n\t\t\t\t\t       BPF_SIZE(insn->code), BPF_READ,\n\t\t\t\t\t       insn->dst_reg))"];
"1000374" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP_NO_MARK))"];
"1000362" [label="(Call,check_reg_arg(env, insn->src_reg, SRC_OP))"];
"1000350" [label="(Call,check_alu_op(env, insn))"];
"1000336" [label="(Call,cur_regs(env))"];
"1000325" [label="(Call,ext_analyzer_insn_hook(env, insn_idx, prev_insn_idx))"];
"1000297" [label="(Call,print_verifier_state(env, state))"];
"1000292" [label="(Call,verbose(env, \"\nfrom %d to %d:\",\n\t\t\t\t\tprev_insn_idx, insn_idx))"];
"1000287" [label="(Call,verbose(env, \"%d:\", insn_idx))"];
"1000315" [label="(Call,print_bpf_insn(verbose, env, insn,\n\t\t\t\t       env->allow_ptr_leaks))"];
"1000311" [label="(Call,verbose(env, \"%d: \", insn_idx))"];
"1000404" [label="(Call,BPF_SIZE(insn->code))"];
"1000290" [label="(Identifier,insn_idx)"];
"1000379" [label="(Identifier,DST_OP_NO_MARK)"];
"1000360" [label="(Call,err = check_reg_arg(env, insn->src_reg, SRC_OP))"];
"1000311" [label="(Call,verbose(env, \"%d: \", insn_idx))"];
"1000327" [label="(Identifier,insn_idx)"];
"1000376" [label="(Call,insn->dst_reg)"];
"1000837" [label="(Call,check_cond_jmp_op(env, insn, &insn_idx))"];
"1000326" [label="(Identifier,env)"];
"1000398" [label="(Call,insn->src_reg)"];
"1000317" [label="(Identifier,env)"];
"1000372" [label="(Call,err = check_reg_arg(env, insn->dst_reg, DST_OP_NO_MARK))"];
"1000348" [label="(Call,err = check_alu_op(env, insn))"];
"1000278" [label="(Block,)"];
"1000393" [label="(Call,err = check_mem_access(env, insn_idx, insn->src_reg, insn->off,\n\t\t\t\t\t       BPF_SIZE(insn->code), BPF_READ,\n\t\t\t\t\t       insn->dst_reg))"];
"1000334" [label="(Call,regs = cur_regs(env))"];
"1000287" [label="(Call,verbose(env, \"%d:\", insn_idx))"];
"1000350" [label="(Call,check_alu_op(env, insn))"];
"1000352" [label="(Identifier,insn)"];
"1000463" [label="(Call,BPF_MODE(insn->code))"];
"1000315" [label="(Call,print_bpf_insn(verbose, env, insn,\n\t\t\t\t       env->allow_ptr_leaks))"];
"1000319" [label="(Call,env->allow_ptr_leaks)"];
"1000296" [label="(Identifier,insn_idx)"];
"1000408" [label="(Identifier,BPF_READ)"];
"1000295" [label="(Identifier,prev_insn_idx)"];
"1000364" [label="(Call,insn->src_reg)"];
"1000880" [label="(Call,check_ld_imm(env, insn))"];
"1000318" [label="(Identifier,insn)"];
"1000288" [label="(Identifier,env)"];
"1000451" [label="(Block,)"];
"1000374" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP_NO_MARK))"];
"1000299" [label="(Identifier,state)"];
"1000457" [label="(Identifier,EINVAL)"];
"1000325" [label="(Call,ext_analyzer_insn_hook(env, insn_idx, prev_insn_idx))"];
"1000297" [label="(Call,print_verifier_state(env, state))"];
"1000293" [label="(Identifier,env)"];
"1000294" [label="(Literal,\"\nfrom %d to %d:\")"];
"1000921" [label="(MethodReturn,static int)"];
"1000292" [label="(Call,verbose(env, \"\nfrom %d to %d:\",\n\t\t\t\t\tprev_insn_idx, insn_idx))"];
"1000312" [label="(Identifier,env)"];
"1000395" [label="(Call,check_mem_access(env, insn_idx, insn->src_reg, insn->off,\n\t\t\t\t\t       BPF_SIZE(insn->code), BPF_READ,\n\t\t\t\t\t       insn->dst_reg))"];
"1000401" [label="(Call,insn->off)"];
"1000289" [label="(Literal,\"%d:\")"];
"1000314" [label="(Identifier,insn_idx)"];
"1000405" [label="(Call,insn->code)"];
"1000396" [label="(Identifier,env)"];
"1000454" [label="(Literal,\"same insn cannot be used with different pointers\n\")"];
"1000362" [label="(Call,check_reg_arg(env, insn->src_reg, SRC_OP))"];
"1000517" [label="(Call,check_mem_access(env, insn_idx, insn->dst_reg, insn->off,\n\t\t\t\t\t       BPF_SIZE(insn->code), BPF_WRITE,\n\t\t\t\t\t       insn->src_reg))"];
"1000452" [label="(Call,verbose(env, \"same insn cannot be used with different pointers\n\"))"];
"1000375" [label="(Identifier,env)"];
"1000363" [label="(Identifier,env)"];
"1000865" [label="(Call,check_ld_abs(env, insn))"];
"1000328" [label="(Identifier,prev_insn_idx)"];
"1000324" [label="(Identifier,err)"];
"1000367" [label="(Identifier,SRC_OP)"];
"1000351" [label="(Identifier,env)"];
"1000301" [label="(Identifier,do_print_state)"];
"1000298" [label="(Identifier,env)"];
"1000397" [label="(Identifier,insn_idx)"];
"1000496" [label="(Call,check_reg_arg(env, insn->dst_reg, SRC_OP))"];
"1000453" [label="(Identifier,env)"];
"1000337" [label="(Identifier,env)"];
"1000471" [label="(Call,check_xadd(env, insn_idx, insn))"];
"1000323" [label="(Call,err = ext_analyzer_insn_hook(env, insn_idx, prev_insn_idx))"];
"1000291" [label="(ControlStructure,else)"];
"1000279" [label="(ControlStructure,if (env->log.level > 1))"];
"1000484" [label="(Call,check_reg_arg(env, insn->src_reg, SRC_OP))"];
"1000310" [label="(Block,)"];
"1000313" [label="(Literal,\"%d: \")"];
"1000316" [label="(Identifier,verbose)"];
"1000409" [label="(Call,insn->dst_reg)"];
"1000336" [label="(Call,cur_regs(env))"];
"1000404" [label="(Call,BPF_SIZE(insn->code))"];
"1000452" -> "1000451"  [label="AST: "];
"1000452" -> "1000454"  [label="CFG: "];
"1000453" -> "1000452"  [label="AST: "];
"1000454" -> "1000452"  [label="AST: "];
"1000457" -> "1000452"  [label="CFG: "];
"1000452" -> "1000921"  [label="DDG: "];
"1000452" -> "1000921"  [label="DDG: "];
"1000395" -> "1000452"  [label="DDG: "];
"1000395" -> "1000393"  [label="AST: "];
"1000395" -> "1000409"  [label="CFG: "];
"1000396" -> "1000395"  [label="AST: "];
"1000397" -> "1000395"  [label="AST: "];
"1000398" -> "1000395"  [label="AST: "];
"1000401" -> "1000395"  [label="AST: "];
"1000404" -> "1000395"  [label="AST: "];
"1000408" -> "1000395"  [label="AST: "];
"1000409" -> "1000395"  [label="AST: "];
"1000393" -> "1000395"  [label="CFG: "];
"1000395" -> "1000921"  [label="DDG: "];
"1000395" -> "1000921"  [label="DDG: "];
"1000395" -> "1000921"  [label="DDG: "];
"1000395" -> "1000921"  [label="DDG: "];
"1000395" -> "1000921"  [label="DDG: "];
"1000395" -> "1000921"  [label="DDG: "];
"1000395" -> "1000921"  [label="DDG: "];
"1000395" -> "1000393"  [label="DDG: "];
"1000395" -> "1000393"  [label="DDG: "];
"1000395" -> "1000393"  [label="DDG: "];
"1000395" -> "1000393"  [label="DDG: "];
"1000395" -> "1000393"  [label="DDG: "];
"1000395" -> "1000393"  [label="DDG: "];
"1000395" -> "1000393"  [label="DDG: "];
"1000374" -> "1000395"  [label="DDG: "];
"1000374" -> "1000395"  [label="DDG: "];
"1000325" -> "1000395"  [label="DDG: "];
"1000362" -> "1000395"  [label="DDG: "];
"1000404" -> "1000395"  [label="DDG: "];
"1000395" -> "1000471"  [label="DDG: "];
"1000395" -> "1000471"  [label="DDG: "];
"1000395" -> "1000484"  [label="DDG: "];
"1000395" -> "1000484"  [label="DDG: "];
"1000395" -> "1000496"  [label="DDG: "];
"1000395" -> "1000517"  [label="DDG: "];
"1000395" -> "1000517"  [label="DDG: "];
"1000374" -> "1000372"  [label="AST: "];
"1000374" -> "1000379"  [label="CFG: "];
"1000375" -> "1000374"  [label="AST: "];
"1000376" -> "1000374"  [label="AST: "];
"1000379" -> "1000374"  [label="AST: "];
"1000372" -> "1000374"  [label="CFG: "];
"1000374" -> "1000921"  [label="DDG: "];
"1000374" -> "1000921"  [label="DDG: "];
"1000374" -> "1000921"  [label="DDG: "];
"1000374" -> "1000372"  [label="DDG: "];
"1000374" -> "1000372"  [label="DDG: "];
"1000374" -> "1000372"  [label="DDG: "];
"1000362" -> "1000374"  [label="DDG: "];
"1000362" -> "1000360"  [label="AST: "];
"1000362" -> "1000367"  [label="CFG: "];
"1000363" -> "1000362"  [label="AST: "];
"1000364" -> "1000362"  [label="AST: "];
"1000367" -> "1000362"  [label="AST: "];
"1000360" -> "1000362"  [label="CFG: "];
"1000362" -> "1000921"  [label="DDG: "];
"1000362" -> "1000921"  [label="DDG: "];
"1000362" -> "1000921"  [label="DDG: "];
"1000362" -> "1000360"  [label="DDG: "];
"1000362" -> "1000360"  [label="DDG: "];
"1000362" -> "1000360"  [label="DDG: "];
"1000350" -> "1000362"  [label="DDG: "];
"1000362" -> "1000484"  [label="DDG: "];
"1000350" -> "1000348"  [label="AST: "];
"1000350" -> "1000352"  [label="CFG: "];
"1000351" -> "1000350"  [label="AST: "];
"1000352" -> "1000350"  [label="AST: "];
"1000348" -> "1000350"  [label="CFG: "];
"1000350" -> "1000921"  [label="DDG: "];
"1000350" -> "1000921"  [label="DDG: "];
"1000350" -> "1000348"  [label="DDG: "];
"1000350" -> "1000348"  [label="DDG: "];
"1000336" -> "1000350"  [label="DDG: "];
"1000315" -> "1000350"  [label="DDG: "];
"1000350" -> "1000471"  [label="DDG: "];
"1000350" -> "1000837"  [label="DDG: "];
"1000350" -> "1000865"  [label="DDG: "];
"1000350" -> "1000880"  [label="DDG: "];
"1000336" -> "1000334"  [label="AST: "];
"1000336" -> "1000337"  [label="CFG: "];
"1000337" -> "1000336"  [label="AST: "];
"1000334" -> "1000336"  [label="CFG: "];
"1000336" -> "1000334"  [label="DDG: "];
"1000325" -> "1000336"  [label="DDG: "];
"1000325" -> "1000323"  [label="AST: "];
"1000325" -> "1000328"  [label="CFG: "];
"1000326" -> "1000325"  [label="AST: "];
"1000327" -> "1000325"  [label="AST: "];
"1000328" -> "1000325"  [label="AST: "];
"1000323" -> "1000325"  [label="CFG: "];
"1000325" -> "1000921"  [label="DDG: "];
"1000325" -> "1000921"  [label="DDG: "];
"1000325" -> "1000921"  [label="DDG: "];
"1000325" -> "1000323"  [label="DDG: "];
"1000325" -> "1000323"  [label="DDG: "];
"1000325" -> "1000323"  [label="DDG: "];
"1000297" -> "1000325"  [label="DDG: "];
"1000315" -> "1000325"  [label="DDG: "];
"1000287" -> "1000325"  [label="DDG: "];
"1000292" -> "1000325"  [label="DDG: "];
"1000292" -> "1000325"  [label="DDG: "];
"1000311" -> "1000325"  [label="DDG: "];
"1000297" -> "1000278"  [label="AST: "];
"1000297" -> "1000299"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000299" -> "1000297"  [label="AST: "];
"1000301" -> "1000297"  [label="CFG: "];
"1000297" -> "1000921"  [label="DDG: "];
"1000297" -> "1000921"  [label="DDG: "];
"1000292" -> "1000297"  [label="DDG: "];
"1000287" -> "1000297"  [label="DDG: "];
"1000297" -> "1000311"  [label="DDG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000292" -> "1000296"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000294" -> "1000292"  [label="AST: "];
"1000295" -> "1000292"  [label="AST: "];
"1000296" -> "1000292"  [label="AST: "];
"1000298" -> "1000292"  [label="CFG: "];
"1000292" -> "1000921"  [label="DDG: "];
"1000292" -> "1000311"  [label="DDG: "];
"1000287" -> "1000279"  [label="AST: "];
"1000287" -> "1000290"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000287"  [label="AST: "];
"1000290" -> "1000287"  [label="AST: "];
"1000298" -> "1000287"  [label="CFG: "];
"1000287" -> "1000921"  [label="DDG: "];
"1000287" -> "1000311"  [label="DDG: "];
"1000315" -> "1000310"  [label="AST: "];
"1000315" -> "1000319"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000317" -> "1000315"  [label="AST: "];
"1000318" -> "1000315"  [label="AST: "];
"1000319" -> "1000315"  [label="AST: "];
"1000324" -> "1000315"  [label="CFG: "];
"1000315" -> "1000921"  [label="DDG: "];
"1000315" -> "1000921"  [label="DDG: "];
"1000315" -> "1000921"  [label="DDG: "];
"1000315" -> "1000921"  [label="DDG: "];
"1000311" -> "1000315"  [label="DDG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000311" -> "1000314"  [label="CFG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000313" -> "1000311"  [label="AST: "];
"1000314" -> "1000311"  [label="AST: "];
"1000316" -> "1000311"  [label="CFG: "];
"1000311" -> "1000921"  [label="DDG: "];
"1000404" -> "1000405"  [label="CFG: "];
"1000405" -> "1000404"  [label="AST: "];
"1000408" -> "1000404"  [label="CFG: "];
"1000404" -> "1000921"  [label="DDG: "];
"1000404" -> "1000463"  [label="DDG: "];
}
