digraph "0_openssl_34628967f1e65dc8f34e000f0f5518e21afbfc7b@API" {
"1000509" [label="(Call,ret=dtls1_write_bytes(s,type,&s->init_buf->data[s->init_off],\n\t\t\tlen))"];
"1000511" [label="(Call,dtls1_write_bytes(s,type,&s->init_buf->data[s->init_off],\n\t\t\tlen))"];
"1000391" [label="(Call,SSL_get_wbio(s))"];
"1000279" [label="(Call,SSL_get_wbio(s))"];
"1000269" [label="(Call,SSL_get_wbio(s))"];
"1000260" [label="(Call,SSL_get_wbio(s))"];
"1000245" [label="(Call,SSL_get_wbio(s))"];
"1000181" [label="(Call,SSL_get_wbio(s))"];
"1000170" [label="(Call,SSL_get_options(s))"];
"1000215" [label="(Call,SSL_get_wbio(s))"];
"1000652" [label="(Call,ssl3_finish_mac(s, p, xlen))"];
"1000636" [label="(Call,p  -= DTLS1_HM_HEADER_LENGTH)"];
"1000399" [label="(Call,curr_mtu <= DTLS1_HM_HEADER_LENGTH)"];
"1000381" [label="(Call,curr_mtu = s->d1->mtu - BIO_wpending(SSL_get_wbio(s)) - \n\t\t\tDTLS1_RT_HEADER_LENGTH - mac_size - blocksize)"];
"1000383" [label="(Call,s->d1->mtu - BIO_wpending(SSL_get_wbio(s)) - \n\t\t\tDTLS1_RT_HEADER_LENGTH - mac_size - blocksize)"];
"1000539" [label="(Call,s->d1->mtu = BIO_ctrl(SSL_get_wbio(s),\n\t\t\t\t\tBIO_CTRL_DGRAM_QUERY_MTU, 0, NULL))"];
"1000545" [label="(Call,BIO_ctrl(SSL_get_wbio(s),\n\t\t\t\t\tBIO_CTRL_DGRAM_QUERY_MTU, 0, NULL))"];
"1000546" [label="(Call,SSL_get_wbio(s))"];
"1000533" [label="(Call,SSL_get_wbio(s))"];
"1000180" [label="(Call,BIO_ctrl(SSL_get_wbio(s), BIO_CTRL_DGRAM_QUERY_MTU, 0, NULL))"];
"1000532" [label="(Call,BIO_ctrl(SSL_get_wbio(s),\n\t\t\t\tBIO_CTRL_DGRAM_MTU_EXCEEDED, 0, NULL))"];
"1000214" [label="(Call,BIO_ctrl(SSL_get_wbio(s), BIO_CTRL_DGRAM_SET_MTU, \n\t\t\t\ts->d1->mtu, NULL))"];
"1000202" [label="(Call,s->d1->mtu = dtls1_guess_mtu(s->d1->mtu))"];
"1000208" [label="(Call,dtls1_guess_mtu(s->d1->mtu))"];
"1000195" [label="(Call,s->d1->mtu = 0)"];
"1000299" [label="(Call,s->d1->mtu >= dtls1_min_mtu())"];
"1000289" [label="(Call,s->d1->mtu - (DTLS1_HM_HEADER_LENGTH + DTLS1_RT_HEADER_LENGTH))"];
"1000187" [label="(Call,s->d1->mtu < dtls1_min_mtu())"];
"1000174" [label="(Call,s->d1->mtu = \n\t\t\tBIO_ctrl(SSL_get_wbio(s), BIO_CTRL_DGRAM_QUERY_MTU, 0, NULL))"];
"1000161" [label="(Call,s->d1->mtu < dtls1_min_mtu())"];
"1000416" [label="(Call,s->d1->mtu - DTLS1_RT_HEADER_LENGTH -\n\t\t\t\tmac_size - blocksize)"];
"1000422" [label="(Call,DTLS1_RT_HEADER_LENGTH -\n\t\t\t\tmac_size - blocksize)"];
"1000393" [label="(Call,DTLS1_RT_HEADER_LENGTH - mac_size - blocksize)"];
"1000395" [label="(Call,mac_size - blocksize)"];
"1000343" [label="(Call,mac_size = 0)"];
"1000424" [label="(Call,mac_size - blocksize)"];
"1000336" [label="(Call,mac_size = EVP_MD_CTX_size(s->write_hash))"];
"1000338" [label="(Call,EVP_MD_CTX_size(s->write_hash))"];
"1000359" [label="(Call,blocksize = 2 * EVP_CIPHER_block_size(s->enc_write_ctx->cipher))"];
"1000361" [label="(Call,2 * EVP_CIPHER_block_size(s->enc_write_ctx->cipher))"];
"1000363" [label="(Call,EVP_CIPHER_block_size(s->enc_write_ctx->cipher))"];
"1000352" [label="(Call,EVP_CIPHER_mode( s->enc_write_ctx->cipher))"];
"1000370" [label="(Call,blocksize = 0)"];
"1000389" [label="(Call,BIO_wpending(SSL_get_wbio(s)) - \n\t\t\tDTLS1_RT_HEADER_LENGTH - mac_size - blocksize)"];
"1000390" [label="(Call,BIO_wpending(SSL_get_wbio(s)))"];
"1000506" [label="(Call,len >= DTLS1_HM_HEADER_LENGTH)"];
"1000488" [label="(Call,len - DTLS1_HM_HEADER_LENGTH)"];
"1000476" [label="(Call,len = curr_mtu)"];
"1000471" [label="(Call,s->init_num > curr_mtu)"];
"1000465" [label="(Call,s->init_num += DTLS1_HM_HEADER_LENGTH)"];
"1000455" [label="(Call,s->init_off > DTLS1_HM_HEADER_LENGTH)"];
"1000448" [label="(Call,s->init_off != 0)"];
"1000308" [label="(Call,s->init_off == 0)"];
"1000460" [label="(Call,s->init_off -= DTLS1_HM_HEADER_LENGTH)"];
"1000703" [label="(Call,s->init_off+=ret)"];
"1000657" [label="(Call,ret == s->init_num)"];
"1000649" [label="(Call,ret - DTLS1_HM_HEADER_LENGTH)"];
"1000560" [label="(Call,(unsigned int)ret)"];
"1000526" [label="(Call,ret < 0)"];
"1000509" [label="(Call,ret=dtls1_write_bytes(s,type,&s->init_buf->data[s->init_off],\n\t\t\tlen))"];
"1000428" [label="(Call,s->init_num > curr_mtu)"];
"1000708" [label="(Call,s->init_num-=ret)"];
"1000317" [label="(Call,s->init_num == \n\t\t\t(int)s->d1->w_msg_hdr.msg_len + DTLS1_HM_HEADER_LENGTH)"];
"1000322" [label="(Call,(int)s->d1->w_msg_hdr.msg_len)"];
"1000414" [label="(Call,curr_mtu = s->d1->mtu - DTLS1_RT_HEADER_LENGTH -\n\t\t\t\tmac_size - blocksize)"];
"1000480" [label="(Call,len = s->init_num)"];
"1000433" [label="(Call,len = curr_mtu)"];
"1000437" [label="(Call,len = s->init_num)"];
"1000631" [label="(Call,l2n3(msg_hdr->msg_len,p))"];
"1000618" [label="(Call,l2n3(msg_hdr->msg_len,p))"];
"1000613" [label="(Call,p++)"];
"1000576" [label="(Call,*p = (unsigned char *)&s->init_buf->data[s->init_off])"];
"1000578" [label="(Call,(unsigned char *)&s->init_buf->data[s->init_off])"];
"1000628" [label="(Call,l2n3(0,p))"];
"1000623" [label="(Call,s2n (msg_hdr->seq,p))"];
"1000644" [label="(Call,p  += DTLS1_HM_HEADER_LENGTH)"];
"1000639" [label="(Call,xlen = ret)"];
"1000647" [label="(Call,xlen = ret - DTLS1_HM_HEADER_LENGTH)"];
"1000406" [label="(Call,SSL_get_wbio(s))"];
"1000491" [label="(Call,dtls1_write_message_header(s, (unsigned char *)&s->init_buf->data[s->init_off]))"];
"1000485" [label="(Call,dtls1_fix_message_header(s, frag_off, \n\t\t\t\tlen - DTLS1_HM_HEADER_LENGTH))"];
"1000713" [label="(Call,frag_off += (ret -= DTLS1_HM_HEADER_LENGTH))"];
"1000602" [label="(Call,frag_off == 0)"];
"1000373" [label="(Call,frag_off = 0)"];
"1000715" [label="(Call,ret -= DTLS1_HM_HEADER_LENGTH)"];
"1000493" [label="(Call,(unsigned char *)&s->init_buf->data[s->init_off])"];
"1000443" [label="(Call,type == SSL3_RT_HANDSHAKE)"];
"1000565" [label="(Call,type == SSL3_RT_HANDSHAKE)"];
"1000313" [label="(Call,type == SSL3_RT_HANDSHAKE)"];
"1000558" [label="(Call,len == (unsigned int)ret)"];
"1000557" [label="(Call,OPENSSL_assert(len == (unsigned int)ret))"];
"1000564" [label="(Call,type == SSL3_RT_HANDSHAKE && ! s->d1->retransmitting)"];
"1000667" [label="(Call,s->msg_callback(1, s->version, type, s->init_buf->data, \n\t\t\t\t\t\t(size_t)(s->init_off + s->init_num), s, \n\t\t\t\t\t\ts->msg_callback_arg))"];
"1000531" [label="(Call,BIO_ctrl(SSL_get_wbio(s),\n\t\t\t\tBIO_CTRL_DGRAM_MTU_EXCEEDED, 0, NULL) > 0)"];
"1000601" [label="(Call,frag_off == 0 && s->version != DTLS1_BAD_VER)"];
"1000505" [label="(Call,OPENSSL_assert(len >= DTLS1_HM_HEADER_LENGTH))"];
"1000678" [label="(Call,(size_t)(s->init_off + s->init_num))"];
"1000680" [label="(Call,s->init_off + s->init_num)"];
"1000454" [label="(Call,OPENSSL_assert(s->init_off > DTLS1_HM_HEADER_LENGTH))"];
"1000405" [label="(Call,BIO_flush(SSL_get_wbio(s)))"];
"1000403" [label="(Call,ret = BIO_flush(SSL_get_wbio(s)))"];
"1000409" [label="(Call,ret <= 0)"];
"1000412" [label="(Return,return ret;)"];
"1000533" [label="(Call,SSL_get_wbio(s))"];
"1000183" [label="(Identifier,BIO_CTRL_DGRAM_QUERY_MTU)"];
"1000172" [label="(Identifier,SSL_OP_NO_QUERY_MTU)"];
"1000174" [label="(Call,s->d1->mtu = \n\t\t\tBIO_ctrl(SSL_get_wbio(s), BIO_CTRL_DGRAM_QUERY_MTU, 0, NULL))"];
"1000414" [label="(Call,curr_mtu = s->d1->mtu - DTLS1_RT_HEADER_LENGTH -\n\t\t\t\tmac_size - blocksize)"];
"1000317" [label="(Call,s->init_num == \n\t\t\t(int)s->d1->w_msg_hdr.msg_len + DTLS1_HM_HEADER_LENGTH)"];
"1000629" [label="(Literal,0)"];
"1000187" [label="(Call,s->d1->mtu < dtls1_min_mtu())"];
"1000645" [label="(Identifier,p)"];
"1000693" [label="(Identifier,s)"];
"1000309" [label="(Call,s->init_off)"];
"1000339" [label="(Call,s->write_hash)"];
"1000194" [label="(Block,)"];
"1000175" [label="(Call,s->d1->mtu)"];
"1000546" [label="(Call,SSL_get_wbio(s))"];
"1000369" [label="(ControlStructure,else)"];
"1000568" [label="(Call,! s->d1->retransmitting)"];
"1000681" [label="(Call,s->init_off)"];
"1000649" [label="(Call,ret - DTLS1_HM_HEADER_LENGTH)"];
"1000705" [label="(Identifier,s)"];
"1000322" [label="(Call,(int)s->d1->w_msg_hdr.msg_len)"];
"1000246" [label="(Identifier,s)"];
"1000307" [label="(Call,s->init_off == 0  && type == SSL3_RT_HANDSHAKE)"];
"1000539" [label="(Call,s->d1->mtu = BIO_ctrl(SSL_get_wbio(s),\n\t\t\t\t\tBIO_CTRL_DGRAM_QUERY_MTU, 0, NULL))"];
"1000290" [label="(Call,s->d1->mtu)"];
"1000269" [label="(Call,SSL_get_wbio(s))"];
"1000346" [label="(ControlStructure,if (s->enc_write_ctx && \n\t\t(EVP_CIPHER_mode( s->enc_write_ctx->cipher) & EVP_CIPH_CBC_MODE)))"];
"1000560" [label="(Call,(unsigned int)ret)"];
"1000641" [label="(Identifier,ret)"];
"1000361" [label="(Call,2 * EVP_CIPHER_block_size(s->enc_write_ctx->cipher))"];
"1000381" [label="(Call,curr_mtu = s->d1->mtu - BIO_wpending(SSL_get_wbio(s)) - \n\t\t\tDTLS1_RT_HEADER_LENGTH - mac_size - blocksize)"];
"1000506" [label="(Call,len >= DTLS1_HM_HEADER_LENGTH)"];
"1000404" [label="(Identifier,ret)"];
"1000495" [label="(Call,&s->init_buf->data[s->init_off])"];
"1000448" [label="(Call,s->init_off != 0)"];
"1000433" [label="(Call,len = curr_mtu)"];
"1000488" [label="(Call,len - DTLS1_HM_HEADER_LENGTH)"];
"1000406" [label="(Call,SSL_get_wbio(s))"];
"1000563" [label="(ControlStructure,if (type == SSL3_RT_HANDSHAKE && ! s->d1->retransmitting))"];
"1000436" [label="(ControlStructure,else)"];
"1000603" [label="(Identifier,frag_off)"];
"1000216" [label="(Identifier,s)"];
"1000549" [label="(Literal,0)"];
"1000353" [label="(Call,s->enc_write_ctx->cipher)"];
"1000709" [label="(Call,s->init_num)"];
"1000415" [label="(Identifier,curr_mtu)"];
"1000287" [label="(Call,mtu = s->d1->mtu - (DTLS1_HM_HEADER_LENGTH + DTLS1_RT_HEADER_LENGTH))"];
"1000259" [label="(Call,BIO_flush(SSL_get_wbio(s)))"];
"1000651" [label="(Identifier,DTLS1_HM_HEADER_LENGTH)"];
"1000413" [label="(Identifier,ret)"];
"1000208" [label="(Call,dtls1_guess_mtu(s->d1->mtu))"];
"1000202" [label="(Call,s->d1->mtu = dtls1_guess_mtu(s->d1->mtu))"];
"1000489" [label="(Identifier,len)"];
"1000556" [label="(Block,)"];
"1000530" [label="(ControlStructure,if ( BIO_ctrl(SSL_get_wbio(s),\n\t\t\t\tBIO_CTRL_DGRAM_MTU_EXCEEDED, 0, NULL) > 0 ))"];
"1000652" [label="(Call,ssl3_finish_mac(s, p, xlen))"];
"1000444" [label="(Identifier,type)"];
"1000371" [label="(Identifier,blocksize)"];
"1000462" [label="(Identifier,s)"];
"1000443" [label="(Call,type == SSL3_RT_HANDSHAKE)"];
"1000224" [label="(Call,mtu = s->d1->mtu)"];
"1000161" [label="(Call,s->d1->mtu < dtls1_min_mtu())"];
"1000186" [label="(ControlStructure,if (s->d1->mtu < dtls1_min_mtu()))"];
"1000217" [label="(Identifier,BIO_CTRL_DGRAM_SET_MTU)"];
"1000352" [label="(Call,EVP_CIPHER_mode( s->enc_write_ctx->cipher))"];
"1000511" [label="(Call,dtls1_write_bytes(s,type,&s->init_buf->data[s->init_off],\n\t\t\tlen))"];
"1000714" [label="(Identifier,frag_off)"];
"1000359" [label="(Call,blocksize = 2 * EVP_CIPHER_block_size(s->enc_write_ctx->cipher))"];
"1000343" [label="(Call,mac_size = 0)"];
"1000653" [label="(Identifier,s)"];
"1000576" [label="(Call,*p = (unsigned char *)&s->init_buf->data[s->init_off])"];
"1000196" [label="(Call,s->d1->mtu)"];
"1000655" [label="(Identifier,xlen)"];
"1000625" [label="(Identifier,msg_hdr)"];
"1000391" [label="(Call,SSL_get_wbio(s))"];
"1000467" [label="(Identifier,s)"];
"1000566" [label="(Identifier,type)"];
"1000336" [label="(Call,mac_size = EVP_MD_CTX_size(s->write_hash))"];
"1000430" [label="(Identifier,s)"];
"1000360" [label="(Identifier,blocksize)"];
"1000707" [label="(Identifier,ret)"];
"1000434" [label="(Identifier,len)"];
"1000602" [label="(Call,frag_off == 0)"];
"1000442" [label="(ControlStructure,if ( type == SSL3_RT_HANDSHAKE))"];
"1000313" [label="(Call,type == SSL3_RT_HANDSHAKE)"];
"1000392" [label="(Identifier,s)"];
"1000295" [label="(Call,DTLS1_HM_HEADER_LENGTH + DTLS1_RT_HEADER_LENGTH)"];
"1000424" [label="(Call,mac_size - blocksize)"];
"1000397" [label="(Identifier,blocksize)"];
"1000465" [label="(Call,s->init_num += DTLS1_HM_HEADER_LENGTH)"];
"1000456" [label="(Call,s->init_off)"];
"1000464" [label="(Identifier,DTLS1_HM_HEADER_LENGTH)"];
"1000710" [label="(Identifier,s)"];
"1000408" [label="(ControlStructure,if ( ret <= 0))"];
"1000280" [label="(Identifier,s)"];
"1000636" [label="(Call,p  -= DTLS1_HM_HEADER_LENGTH)"];
"1000416" [label="(Call,s->d1->mtu - DTLS1_RT_HEADER_LENGTH -\n\t\t\t\tmac_size - blocksize)"];
"1000512" [label="(Identifier,s)"];
"1000400" [label="(Identifier,curr_mtu)"];
"1000190" [label="(Identifier,s)"];
"1000526" [label="(Call,ret < 0)"];
"1000384" [label="(Call,s->d1->mtu)"];
"1000632" [label="(Call,msg_hdr->msg_len)"];
"1000571" [label="(Identifier,s)"];
"1000562" [label="(Identifier,ret)"];
"1000410" [label="(Identifier,ret)"];
"1000508" [label="(Identifier,DTLS1_HM_HEADER_LENGTH)"];
"1000477" [label="(Identifier,len)"];
"1000628" [label="(Call,l2n3(0,p))"];
"1000427" [label="(ControlStructure,if ( s->init_num > curr_mtu))"];
"1000614" [label="(Identifier,p)"];
"1000657" [label="(Call,ret == s->init_num)"];
"1000491" [label="(Call,dtls1_write_message_header(s, (unsigned char *)&s->init_buf->data[s->init_off]))"];
"1000472" [label="(Call,s->init_num)"];
"1000279" [label="(Call,SSL_get_wbio(s))"];
"1000678" [label="(Call,(size_t)(s->init_off + s->init_num))"];
"1000478" [label="(Identifier,curr_mtu)"];
"1000452" [label="(Literal,0)"];
"1000380" [label="(Block,)"];
"1000278" [label="(Call,BIO_flush(SSL_get_wbio(s)))"];
"1000493" [label="(Call,(unsigned char *)&s->init_buf->data[s->init_off])"];
"1000171" [label="(Identifier,s)"];
"1000536" [label="(Literal,0)"];
"1000162" [label="(Call,s->d1->mtu)"];
"1000363" [label="(Call,EVP_CIPHER_block_size(s->enc_write_ctx->cipher))"];
"1000485" [label="(Call,dtls1_fix_message_header(s, frag_off, \n\t\t\t\tlen - DTLS1_HM_HEADER_LENGTH))"];
"1000557" [label="(Call,OPENSSL_assert(len == (unsigned int)ret))"];
"1000446" [label="(Block,)"];
"1000547" [label="(Identifier,s)"];
"1000650" [label="(Identifier,ret)"];
"1000223" [label="(Identifier,NULL)"];
"1000375" [label="(Literal,0)"];
"1000646" [label="(Identifier,DTLS1_HM_HEADER_LENGTH)"];
"1000624" [label="(Call,msg_hdr->seq)"];
"1000390" [label="(Call,BIO_wpending(SSL_get_wbio(s)))"];
"1000396" [label="(Identifier,mac_size)"];
"1000351" [label="(Call,EVP_CIPHER_mode( s->enc_write_ctx->cipher) & EVP_CIPH_CBC_MODE)"];
"1000665" [label="(Identifier,s)"];
"1000393" [label="(Call,DTLS1_RT_HEADER_LENGTH - mac_size - blocksize)"];
"1000469" [label="(Identifier,DTLS1_HM_HEADER_LENGTH)"];
"1000455" [label="(Call,s->init_off > DTLS1_HM_HEADER_LENGTH)"];
"1000460" [label="(Call,s->init_off -= DTLS1_HM_HEADER_LENGTH)"];
"1000612" [label="(Call,*p++)"];
"1000545" [label="(Call,BIO_ctrl(SSL_get_wbio(s),\n\t\t\t\t\tBIO_CTRL_DGRAM_QUERY_MTU, 0, NULL))"];
"1000475" [label="(Identifier,curr_mtu)"];
"1000613" [label="(Call,p++)"];
"1000470" [label="(ControlStructure,if ( s->init_num > curr_mtu))"];
"1000622" [label="(Identifier,p)"];
"1000716" [label="(Identifier,ret)"];
"1000654" [label="(Identifier,p)"];
"1000344" [label="(Identifier,mac_size)"];
"1000487" [label="(Identifier,frag_off)"];
"1000374" [label="(Identifier,frag_off)"];
"1000457" [label="(Identifier,s)"];
"1000402" [label="(Block,)"];
"1000479" [label="(ControlStructure,else)"];
"1000559" [label="(Identifier,len)"];
"1000215" [label="(Call,SSL_get_wbio(s))"];
"1000480" [label="(Call,len = s->init_num)"];
"1000623" [label="(Call,s2n (msg_hdr->seq,p))"];
"1000445" [label="(Identifier,SSL3_RT_HANDSHAKE)"];
"1000672" [label="(Identifier,type)"];
"1000577" [label="(Identifier,p)"];
"1000315" [label="(Identifier,SSL3_RT_HANDSHAKE)"];
"1000218" [label="(Call,s->d1->mtu)"];
"1000394" [label="(Identifier,DTLS1_RT_HEADER_LENGTH)"];
"1000169" [label="(Call,SSL_get_options(s) & SSL_OP_NO_QUERY_MTU)"];
"1000185" [label="(Identifier,NULL)"];
"1000600" [label="(ControlStructure,if (frag_off == 0 && s->version != DTLS1_BAD_VER))"];
"1000466" [label="(Call,s->init_num)"];
"1000338" [label="(Call,EVP_MD_CTX_size(s->write_hash))"];
"1000658" [label="(Identifier,ret)"];
"1000708" [label="(Call,s->init_num-=ret)"];
"1000548" [label="(Identifier,BIO_CTRL_DGRAM_QUERY_MTU)"];
"1000435" [label="(Identifier,curr_mtu)"];
"1000630" [label="(Identifier,p)"];
"1000604" [label="(Literal,0)"];
"1000638" [label="(Identifier,DTLS1_HM_HEADER_LENGTH)"];
"1000610" [label="(Block,)"];
"1000289" [label="(Call,s->d1->mtu - (DTLS1_HM_HEADER_LENGTH + DTLS1_RT_HEADER_LENGTH))"];
"1000373" [label="(Call,frag_off = 0)"];
"1000425" [label="(Identifier,mac_size)"];
"1000426" [label="(Identifier,blocksize)"];
"1000668" [label="(Literal,1)"];
"1000205" [label="(Identifier,s)"];
"1000637" [label="(Identifier,p)"];
"1000193" [label="(Call,dtls1_min_mtu())"];
"1000639" [label="(Call,xlen = ret)"];
"1000574" [label="(Block,)"];
"1000640" [label="(Identifier,xlen)"];
"1000332" [label="(ControlStructure,if (s->write_hash))"];
"1000540" [label="(Call,s->d1->mtu)"];
"1000532" [label="(Call,BIO_ctrl(SSL_get_wbio(s),\n\t\t\t\tBIO_CTRL_DGRAM_MTU_EXCEEDED, 0, NULL))"];
"1000537" [label="(Identifier,NULL)"];
"1000449" [label="(Call,s->init_off)"];
"1000312" [label="(Literal,0)"];
"1000182" [label="(Identifier,s)"];
"1000507" [label="(Identifier,len)"];
"1000318" [label="(Call,s->init_num)"];
"1000669" [label="(Call,s->version)"];
"1000564" [label="(Call,type == SSL3_RT_HANDSHAKE && ! s->d1->retransmitting)"];
"1000514" [label="(Call,&s->init_buf->data[s->init_off])"];
"1000619" [label="(Call,msg_hdr->msg_len)"];
"1000195" [label="(Call,s->d1->mtu = 0)"];
"1000505" [label="(Call,OPENSSL_assert(len >= DTLS1_HM_HEADER_LENGTH))"];
"1000429" [label="(Call,s->init_num)"];
"1000720" [label="(MethodReturn,RET)"];
"1000378" [label="(Identifier,s)"];
"1000712" [label="(Identifier,ret)"];
"1000428" [label="(Call,s->init_num > curr_mtu)"];
"1000476" [label="(Call,len = curr_mtu)"];
"1000316" [label="(Call,OPENSSL_assert(s->init_num == \n\t\t\t(int)s->d1->w_msg_hdr.msg_len + DTLS1_HM_HEADER_LENGTH))"];
"1000482" [label="(Call,s->init_num)"];
"1000684" [label="(Call,s->init_num)"];
"1000405" [label="(Call,BIO_flush(SSL_get_wbio(s)))"];
"1000201" [label="(Literal,0)"];
"1000648" [label="(Identifier,xlen)"];
"1000580" [label="(Call,&s->init_buf->data[s->init_off])"];
"1000704" [label="(Call,s->init_off)"];
"1000659" [label="(Call,s->init_num)"];
"1000633" [label="(Identifier,msg_hdr)"];
"1000245" [label="(Call,SSL_get_wbio(s))"];
"1000403" [label="(Call,ret = BIO_flush(SSL_get_wbio(s)))"];
"1000607" [label="(Identifier,s)"];
"1000673" [label="(Call,s->init_buf->data)"];
"1000631" [label="(Call,l2n3(msg_hdr->msg_len,p))"];
"1000538" [label="(Literal,0)"];
"1000308" [label="(Call,s->init_off == 0)"];
"1000170" [label="(Call,SSL_get_options(s))"];
"1000299" [label="(Call,s->d1->mtu >= dtls1_min_mtu())"];
"1000667" [label="(Call,s->msg_callback(1, s->version, type, s->init_buf->data, \n\t\t\t\t\t\t(size_t)(s->init_off + s->init_num), s, \n\t\t\t\t\t\ts->msg_callback_arg))"];
"1000601" [label="(Call,frag_off == 0 && s->version != DTLS1_BAD_VER)"];
"1000331" [label="(Identifier,DTLS1_HM_HEADER_LENGTH)"];
"1000450" [label="(Identifier,s)"];
"1000644" [label="(Call,p  += DTLS1_HM_HEADER_LENGTH)"];
"1000627" [label="(Identifier,p)"];
"1000535" [label="(Identifier,BIO_CTRL_DGRAM_MTU_EXCEEDED)"];
"1000439" [label="(Call,s->init_num)"];
"1000270" [label="(Identifier,s)"];
"1000717" [label="(Identifier,DTLS1_HM_HEADER_LENGTH)"];
"1000688" [label="(Call,s->msg_callback_arg)"];
"1000481" [label="(Identifier,len)"];
"1000225" [label="(Identifier,mtu)"];
"1000112" [label="(Block,)"];
"1000492" [label="(Identifier,s)"];
"1000349" [label="(Identifier,s)"];
"1000298" [label="(Call,OPENSSL_assert(s->d1->mtu >= dtls1_min_mtu()))"];
"1000592" [label="(Identifier,msg_hdr)"];
"1000198" [label="(Identifier,s)"];
"1000209" [label="(Call,s->d1->mtu)"];
"1000525" [label="(ControlStructure,if (ret < 0))"];
"1000382" [label="(Identifier,curr_mtu)"];
"1000558" [label="(Call,len == (unsigned int)ret)"];
"1000605" [label="(Call,s->version != DTLS1_BAD_VER)"];
"1000713" [label="(Call,frag_off += (ret -= DTLS1_HM_HEADER_LENGTH))"];
"1000401" [label="(Identifier,DTLS1_HM_HEADER_LENGTH)"];
"1000554" [label="(Literal,1)"];
"1000324" [label="(Call,s->d1->w_msg_hdr.msg_len)"];
"1000527" [label="(Identifier,ret)"];
"1000422" [label="(Call,DTLS1_RT_HEADER_LENGTH -\n\t\t\t\tmac_size - blocksize)"];
"1000398" [label="(ControlStructure,if ( curr_mtu <= DTLS1_HM_HEADER_LENGTH))"];
"1000412" [label="(Return,return ret;)"];
"1000364" [label="(Call,s->enc_write_ctx->cipher)"];
"1000565" [label="(Call,type == SSL3_RT_HANDSHAKE)"];
"1000417" [label="(Call,s->d1->mtu)"];
"1000372" [label="(Literal,0)"];
"1000578" [label="(Call,(unsigned char *)&s->init_buf->data[s->init_off])"];
"1000437" [label="(Call,len = s->init_num)"];
"1000531" [label="(Call,BIO_ctrl(SSL_get_wbio(s),\n\t\t\t\tBIO_CTRL_DGRAM_MTU_EXCEEDED, 0, NULL) > 0)"];
"1000471" [label="(Call,s->init_num > curr_mtu)"];
"1000407" [label="(Identifier,s)"];
"1000663" [label="(ControlStructure,if (s->msg_callback))"];
"1000447" [label="(ControlStructure,if ( s->init_off != 0))"];
"1000383" [label="(Call,s->d1->mtu - BIO_wpending(SSL_get_wbio(s)) - \n\t\t\tDTLS1_RT_HEADER_LENGTH - mac_size - blocksize)"];
"1000370" [label="(Call,blocksize = 0)"];
"1000411" [label="(Literal,0)"];
"1000181" [label="(Call,SSL_get_wbio(s))"];
"1000680" [label="(Call,s->init_off + s->init_num)"];
"1000214" [label="(Call,BIO_ctrl(SSL_get_wbio(s), BIO_CTRL_DGRAM_SET_MTU, \n\t\t\t\ts->d1->mtu, NULL))"];
"1000261" [label="(Identifier,s)"];
"1000656" [label="(ControlStructure,if (ret == s->init_num))"];
"1000188" [label="(Call,s->d1->mtu)"];
"1000509" [label="(Call,ret=dtls1_write_bytes(s,type,&s->init_buf->data[s->init_off],\n\t\t\tlen))"];
"1000454" [label="(Call,OPENSSL_assert(s->init_off > DTLS1_HM_HEADER_LENGTH))"];
"1000314" [label="(Identifier,type)"];
"1000715" [label="(Call,ret -= DTLS1_HM_HEADER_LENGTH)"];
"1000513" [label="(Identifier,type)"];
"1000438" [label="(Identifier,len)"];
"1000567" [label="(Identifier,SSL3_RT_HANDSHAKE)"];
"1000542" [label="(Identifier,s)"];
"1000687" [label="(Identifier,s)"];
"1000703" [label="(Call,s->init_off+=ret)"];
"1000635" [label="(Identifier,p)"];
"1000432" [label="(Identifier,curr_mtu)"];
"1000459" [label="(Identifier,DTLS1_HM_HEADER_LENGTH)"];
"1000550" [label="(Identifier,NULL)"];
"1000362" [label="(Literal,2)"];
"1000399" [label="(Call,curr_mtu <= DTLS1_HM_HEADER_LENGTH)"];
"1000486" [label="(Identifier,s)"];
"1000337" [label="(Identifier,mac_size)"];
"1000453" [label="(Block,)"];
"1000647" [label="(Call,xlen = ret - DTLS1_HM_HEADER_LENGTH)"];
"1000244" [label="(Call,BIO_wpending(SSL_get_wbio(s)))"];
"1000524" [label="(Identifier,len)"];
"1000268" [label="(Call,BIO_wpending(SSL_get_wbio(s)))"];
"1000173" [label="(Block,)"];
"1000490" [label="(Identifier,DTLS1_HM_HEADER_LENGTH)"];
"1000358" [label="(Identifier,EVP_CIPH_CBC_MODE)"];
"1000643" [label="(Block,)"];
"1000409" [label="(Call,ret <= 0)"];
"1000260" [label="(Call,SSL_get_wbio(s))"];
"1000305" [label="(Call,dtls1_min_mtu())"];
"1000300" [label="(Call,s->d1->mtu)"];
"1000180" [label="(Call,BIO_ctrl(SSL_get_wbio(s), BIO_CTRL_DGRAM_QUERY_MTU, 0, NULL))"];
"1000345" [label="(Literal,0)"];
"1000534" [label="(Identifier,s)"];
"1000423" [label="(Identifier,DTLS1_RT_HEADER_LENGTH)"];
"1000321" [label="(Call,(int)s->d1->w_msg_hdr.msg_len + DTLS1_HM_HEADER_LENGTH)"];
"1000618" [label="(Call,l2n3(msg_hdr->msg_len,p))"];
"1000510" [label="(Identifier,ret)"];
"1000389" [label="(Call,BIO_wpending(SSL_get_wbio(s)) - \n\t\t\tDTLS1_RT_HEADER_LENGTH - mac_size - blocksize)"];
"1000473" [label="(Identifier,s)"];
"1000461" [label="(Call,s->init_off)"];
"1000203" [label="(Call,s->d1->mtu)"];
"1000528" [label="(Literal,0)"];
"1000160" [label="(Call,s->d1->mtu < dtls1_min_mtu() && !(SSL_get_options(s) & SSL_OP_NO_QUERY_MTU))"];
"1000342" [label="(ControlStructure,else)"];
"1000167" [label="(Call,dtls1_min_mtu())"];
"1000395" [label="(Call,mac_size - blocksize)"];
"1000184" [label="(Literal,0)"];
"1000509" -> "1000380"  [label="AST: "];
"1000509" -> "1000511"  [label="CFG: "];
"1000510" -> "1000509"  [label="AST: "];
"1000511" -> "1000509"  [label="AST: "];
"1000527" -> "1000509"  [label="CFG: "];
"1000509" -> "1000720"  [label="DDG: dtls1_write_bytes(s,type,&s->init_buf->data[s->init_off],\n\t\t\tlen)"];
"1000511" -> "1000509"  [label="DDG: s"];
"1000511" -> "1000509"  [label="DDG: type"];
"1000511" -> "1000509"  [label="DDG: &s->init_buf->data[s->init_off]"];
"1000511" -> "1000509"  [label="DDG: len"];
"1000509" -> "1000526"  [label="DDG: ret"];
"1000511" -> "1000524"  [label="CFG: "];
"1000512" -> "1000511"  [label="AST: "];
"1000513" -> "1000511"  [label="AST: "];
"1000514" -> "1000511"  [label="AST: "];
"1000524" -> "1000511"  [label="AST: "];
"1000511" -> "1000720"  [label="DDG: len"];
"1000511" -> "1000720"  [label="DDG: type"];
"1000511" -> "1000720"  [label="DDG: &s->init_buf->data[s->init_off]"];
"1000511" -> "1000720"  [label="DDG: s"];
"1000511" -> "1000391"  [label="DDG: s"];
"1000511" -> "1000443"  [label="DDG: type"];
"1000511" -> "1000493"  [label="DDG: &s->init_buf->data[s->init_off]"];
"1000391" -> "1000511"  [label="DDG: s"];
"1000406" -> "1000511"  [label="DDG: s"];
"1000491" -> "1000511"  [label="DDG: s"];
"1000443" -> "1000511"  [label="DDG: type"];
"1000578" -> "1000511"  [label="DDG: &s->init_buf->data[s->init_off]"];
"1000493" -> "1000511"  [label="DDG: &s->init_buf->data[s->init_off]"];
"1000506" -> "1000511"  [label="DDG: len"];
"1000433" -> "1000511"  [label="DDG: len"];
"1000437" -> "1000511"  [label="DDG: len"];
"1000511" -> "1000533"  [label="DDG: s"];
"1000511" -> "1000558"  [label="DDG: len"];
"1000511" -> "1000565"  [label="DDG: type"];
"1000511" -> "1000578"  [label="DDG: &s->init_buf->data[s->init_off]"];
"1000511" -> "1000652"  [label="DDG: s"];
"1000511" -> "1000667"  [label="DDG: s"];
"1000391" -> "1000390"  [label="AST: "];
"1000391" -> "1000392"  [label="CFG: "];
"1000392" -> "1000391"  [label="AST: "];
"1000390" -> "1000391"  [label="CFG: "];
"1000391" -> "1000390"  [label="DDG: s"];
"1000279" -> "1000391"  [label="DDG: s"];
"1000652" -> "1000391"  [label="DDG: s"];
"1000546" -> "1000391"  [label="DDG: s"];
"1000269" -> "1000391"  [label="DDG: s"];
"1000391" -> "1000406"  [label="DDG: s"];
"1000391" -> "1000485"  [label="DDG: s"];
"1000279" -> "1000278"  [label="AST: "];
"1000279" -> "1000280"  [label="CFG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000278" -> "1000279"  [label="CFG: "];
"1000279" -> "1000720"  [label="DDG: s"];
"1000279" -> "1000278"  [label="DDG: s"];
"1000269" -> "1000279"  [label="DDG: s"];
"1000269" -> "1000268"  [label="AST: "];
"1000269" -> "1000270"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000268" -> "1000269"  [label="CFG: "];
"1000269" -> "1000720"  [label="DDG: s"];
"1000269" -> "1000268"  [label="DDG: s"];
"1000260" -> "1000269"  [label="DDG: s"];
"1000245" -> "1000269"  [label="DDG: s"];
"1000260" -> "1000259"  [label="AST: "];
"1000260" -> "1000261"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000259" -> "1000260"  [label="CFG: "];
"1000260" -> "1000720"  [label="DDG: s"];
"1000260" -> "1000259"  [label="DDG: s"];
"1000245" -> "1000260"  [label="DDG: s"];
"1000245" -> "1000244"  [label="AST: "];
"1000245" -> "1000246"  [label="CFG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000244" -> "1000245"  [label="CFG: "];
"1000245" -> "1000244"  [label="DDG: s"];
"1000181" -> "1000245"  [label="DDG: s"];
"1000215" -> "1000245"  [label="DDG: s"];
"1000170" -> "1000245"  [label="DDG: s"];
"1000181" -> "1000180"  [label="AST: "];
"1000181" -> "1000182"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000183" -> "1000181"  [label="CFG: "];
"1000181" -> "1000180"  [label="DDG: s"];
"1000170" -> "1000181"  [label="DDG: s"];
"1000181" -> "1000215"  [label="DDG: s"];
"1000170" -> "1000169"  [label="AST: "];
"1000170" -> "1000171"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="CFG: "];
"1000170" -> "1000169"  [label="DDG: s"];
"1000215" -> "1000214"  [label="AST: "];
"1000215" -> "1000216"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000217" -> "1000215"  [label="CFG: "];
"1000215" -> "1000214"  [label="DDG: s"];
"1000652" -> "1000574"  [label="AST: "];
"1000652" -> "1000655"  [label="CFG: "];
"1000653" -> "1000652"  [label="AST: "];
"1000654" -> "1000652"  [label="AST: "];
"1000655" -> "1000652"  [label="AST: "];
"1000658" -> "1000652"  [label="CFG: "];
"1000652" -> "1000720"  [label="DDG: xlen"];
"1000652" -> "1000720"  [label="DDG: ssl3_finish_mac(s, p, xlen)"];
"1000652" -> "1000720"  [label="DDG: s"];
"1000652" -> "1000720"  [label="DDG: p"];
"1000636" -> "1000652"  [label="DDG: p"];
"1000644" -> "1000652"  [label="DDG: p"];
"1000639" -> "1000652"  [label="DDG: xlen"];
"1000647" -> "1000652"  [label="DDG: xlen"];
"1000652" -> "1000667"  [label="DDG: s"];
"1000636" -> "1000610"  [label="AST: "];
"1000636" -> "1000638"  [label="CFG: "];
"1000637" -> "1000636"  [label="AST: "];
"1000638" -> "1000636"  [label="AST: "];
"1000640" -> "1000636"  [label="CFG: "];
"1000636" -> "1000720"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000399" -> "1000636"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000506" -> "1000636"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000631" -> "1000636"  [label="DDG: p"];
"1000399" -> "1000398"  [label="AST: "];
"1000399" -> "1000401"  [label="CFG: "];
"1000400" -> "1000399"  [label="AST: "];
"1000401" -> "1000399"  [label="AST: "];
"1000404" -> "1000399"  [label="CFG: "];
"1000430" -> "1000399"  [label="CFG: "];
"1000399" -> "1000720"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000399" -> "1000720"  [label="DDG: curr_mtu"];
"1000399" -> "1000720"  [label="DDG: curr_mtu <= DTLS1_HM_HEADER_LENGTH"];
"1000381" -> "1000399"  [label="DDG: curr_mtu"];
"1000506" -> "1000399"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000649" -> "1000399"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000399" -> "1000428"  [label="DDG: curr_mtu"];
"1000399" -> "1000455"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000399" -> "1000488"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000399" -> "1000644"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000399" -> "1000649"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000399" -> "1000713"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000399" -> "1000715"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000381" -> "1000380"  [label="AST: "];
"1000381" -> "1000383"  [label="CFG: "];
"1000382" -> "1000381"  [label="AST: "];
"1000383" -> "1000381"  [label="AST: "];
"1000400" -> "1000381"  [label="CFG: "];
"1000381" -> "1000720"  [label="DDG: s->d1->mtu - BIO_wpending(SSL_get_wbio(s)) - \n\t\t\tDTLS1_RT_HEADER_LENGTH - mac_size - blocksize"];
"1000383" -> "1000381"  [label="DDG: s->d1->mtu"];
"1000383" -> "1000381"  [label="DDG: BIO_wpending(SSL_get_wbio(s)) - \n\t\t\tDTLS1_RT_HEADER_LENGTH - mac_size - blocksize"];
"1000383" -> "1000389"  [label="CFG: "];
"1000384" -> "1000383"  [label="AST: "];
"1000389" -> "1000383"  [label="AST: "];
"1000383" -> "1000720"  [label="DDG: BIO_wpending(SSL_get_wbio(s)) - \n\t\t\tDTLS1_RT_HEADER_LENGTH - mac_size - blocksize"];
"1000383" -> "1000720"  [label="DDG: s->d1->mtu"];
"1000539" -> "1000383"  [label="DDG: s->d1->mtu"];
"1000299" -> "1000383"  [label="DDG: s->d1->mtu"];
"1000416" -> "1000383"  [label="DDG: s->d1->mtu"];
"1000389" -> "1000383"  [label="DDG: BIO_wpending(SSL_get_wbio(s))"];
"1000389" -> "1000383"  [label="DDG: DTLS1_RT_HEADER_LENGTH - mac_size - blocksize"];
"1000383" -> "1000416"  [label="DDG: s->d1->mtu"];
"1000539" -> "1000530"  [label="AST: "];
"1000539" -> "1000545"  [label="CFG: "];
"1000540" -> "1000539"  [label="AST: "];
"1000545" -> "1000539"  [label="AST: "];
"1000378" -> "1000539"  [label="CFG: "];
"1000539" -> "1000720"  [label="DDG: s->d1->mtu"];
"1000539" -> "1000720"  [label="DDG: BIO_ctrl(SSL_get_wbio(s),\n\t\t\t\t\tBIO_CTRL_DGRAM_QUERY_MTU, 0, NULL)"];
"1000545" -> "1000539"  [label="DDG: SSL_get_wbio(s)"];
"1000545" -> "1000539"  [label="DDG: BIO_CTRL_DGRAM_QUERY_MTU"];
"1000545" -> "1000539"  [label="DDG: 0"];
"1000545" -> "1000539"  [label="DDG: NULL"];
"1000545" -> "1000550"  [label="CFG: "];
"1000546" -> "1000545"  [label="AST: "];
"1000548" -> "1000545"  [label="AST: "];
"1000549" -> "1000545"  [label="AST: "];
"1000550" -> "1000545"  [label="AST: "];
"1000545" -> "1000720"  [label="DDG: NULL"];
"1000545" -> "1000720"  [label="DDG: BIO_CTRL_DGRAM_QUERY_MTU"];
"1000545" -> "1000720"  [label="DDG: SSL_get_wbio(s)"];
"1000545" -> "1000532"  [label="DDG: NULL"];
"1000546" -> "1000545"  [label="DDG: s"];
"1000180" -> "1000545"  [label="DDG: BIO_CTRL_DGRAM_QUERY_MTU"];
"1000532" -> "1000545"  [label="DDG: NULL"];
"1000546" -> "1000547"  [label="CFG: "];
"1000547" -> "1000546"  [label="AST: "];
"1000548" -> "1000546"  [label="CFG: "];
"1000546" -> "1000720"  [label="DDG: s"];
"1000533" -> "1000546"  [label="DDG: s"];
"1000533" -> "1000532"  [label="AST: "];
"1000533" -> "1000534"  [label="CFG: "];
"1000534" -> "1000533"  [label="AST: "];
"1000535" -> "1000533"  [label="CFG: "];
"1000533" -> "1000720"  [label="DDG: s"];
"1000533" -> "1000532"  [label="DDG: s"];
"1000180" -> "1000174"  [label="AST: "];
"1000180" -> "1000185"  [label="CFG: "];
"1000183" -> "1000180"  [label="AST: "];
"1000184" -> "1000180"  [label="AST: "];
"1000185" -> "1000180"  [label="AST: "];
"1000174" -> "1000180"  [label="CFG: "];
"1000180" -> "1000720"  [label="DDG: NULL"];
"1000180" -> "1000720"  [label="DDG: BIO_CTRL_DGRAM_QUERY_MTU"];
"1000180" -> "1000174"  [label="DDG: SSL_get_wbio(s)"];
"1000180" -> "1000174"  [label="DDG: BIO_CTRL_DGRAM_QUERY_MTU"];
"1000180" -> "1000174"  [label="DDG: 0"];
"1000180" -> "1000174"  [label="DDG: NULL"];
"1000180" -> "1000214"  [label="DDG: NULL"];
"1000180" -> "1000532"  [label="DDG: NULL"];
"1000532" -> "1000531"  [label="AST: "];
"1000532" -> "1000537"  [label="CFG: "];
"1000535" -> "1000532"  [label="AST: "];
"1000536" -> "1000532"  [label="AST: "];
"1000537" -> "1000532"  [label="AST: "];
"1000538" -> "1000532"  [label="CFG: "];
"1000532" -> "1000720"  [label="DDG: SSL_get_wbio(s)"];
"1000532" -> "1000720"  [label="DDG: BIO_CTRL_DGRAM_MTU_EXCEEDED"];
"1000532" -> "1000720"  [label="DDG: NULL"];
"1000532" -> "1000531"  [label="DDG: SSL_get_wbio(s)"];
"1000532" -> "1000531"  [label="DDG: BIO_CTRL_DGRAM_MTU_EXCEEDED"];
"1000532" -> "1000531"  [label="DDG: 0"];
"1000532" -> "1000531"  [label="DDG: NULL"];
"1000214" -> "1000532"  [label="DDG: NULL"];
"1000214" -> "1000194"  [label="AST: "];
"1000214" -> "1000223"  [label="CFG: "];
"1000217" -> "1000214"  [label="AST: "];
"1000218" -> "1000214"  [label="AST: "];
"1000223" -> "1000214"  [label="AST: "];
"1000225" -> "1000214"  [label="CFG: "];
"1000214" -> "1000720"  [label="DDG: NULL"];
"1000214" -> "1000720"  [label="DDG: BIO_CTRL_DGRAM_SET_MTU"];
"1000214" -> "1000720"  [label="DDG: BIO_ctrl(SSL_get_wbio(s), BIO_CTRL_DGRAM_SET_MTU, \n\t\t\t\ts->d1->mtu, NULL)"];
"1000202" -> "1000214"  [label="DDG: s->d1->mtu"];
"1000214" -> "1000224"  [label="DDG: s->d1->mtu"];
"1000214" -> "1000289"  [label="DDG: s->d1->mtu"];
"1000214" -> "1000299"  [label="DDG: s->d1->mtu"];
"1000202" -> "1000194"  [label="AST: "];
"1000202" -> "1000208"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000208" -> "1000202"  [label="AST: "];
"1000216" -> "1000202"  [label="CFG: "];
"1000202" -> "1000720"  [label="DDG: dtls1_guess_mtu(s->d1->mtu)"];
"1000208" -> "1000202"  [label="DDG: s->d1->mtu"];
"1000208" -> "1000209"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000195" -> "1000208"  [label="DDG: s->d1->mtu"];
"1000195" -> "1000194"  [label="AST: "];
"1000195" -> "1000201"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000201" -> "1000195"  [label="AST: "];
"1000205" -> "1000195"  [label="CFG: "];
"1000299" -> "1000298"  [label="AST: "];
"1000299" -> "1000305"  [label="CFG: "];
"1000300" -> "1000299"  [label="AST: "];
"1000305" -> "1000299"  [label="AST: "];
"1000298" -> "1000299"  [label="CFG: "];
"1000299" -> "1000720"  [label="DDG: dtls1_min_mtu()"];
"1000299" -> "1000720"  [label="DDG: s->d1->mtu"];
"1000299" -> "1000298"  [label="DDG: s->d1->mtu"];
"1000299" -> "1000298"  [label="DDG: dtls1_min_mtu()"];
"1000289" -> "1000299"  [label="DDG: s->d1->mtu"];
"1000187" -> "1000299"  [label="DDG: s->d1->mtu"];
"1000161" -> "1000299"  [label="DDG: s->d1->mtu"];
"1000289" -> "1000287"  [label="AST: "];
"1000289" -> "1000295"  [label="CFG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000295" -> "1000289"  [label="AST: "];
"1000287" -> "1000289"  [label="CFG: "];
"1000289" -> "1000720"  [label="DDG: DTLS1_HM_HEADER_LENGTH + DTLS1_RT_HEADER_LENGTH"];
"1000289" -> "1000287"  [label="DDG: s->d1->mtu"];
"1000289" -> "1000287"  [label="DDG: DTLS1_HM_HEADER_LENGTH + DTLS1_RT_HEADER_LENGTH"];
"1000187" -> "1000289"  [label="DDG: s->d1->mtu"];
"1000161" -> "1000289"  [label="DDG: s->d1->mtu"];
"1000187" -> "1000186"  [label="AST: "];
"1000187" -> "1000193"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000193" -> "1000187"  [label="AST: "];
"1000198" -> "1000187"  [label="CFG: "];
"1000225" -> "1000187"  [label="CFG: "];
"1000187" -> "1000720"  [label="DDG: s->d1->mtu < dtls1_min_mtu()"];
"1000187" -> "1000720"  [label="DDG: dtls1_min_mtu()"];
"1000174" -> "1000187"  [label="DDG: s->d1->mtu"];
"1000187" -> "1000224"  [label="DDG: s->d1->mtu"];
"1000174" -> "1000173"  [label="AST: "];
"1000175" -> "1000174"  [label="AST: "];
"1000190" -> "1000174"  [label="CFG: "];
"1000174" -> "1000720"  [label="DDG: BIO_ctrl(SSL_get_wbio(s), BIO_CTRL_DGRAM_QUERY_MTU, 0, NULL)"];
"1000161" -> "1000160"  [label="AST: "];
"1000161" -> "1000167"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000167" -> "1000161"  [label="AST: "];
"1000171" -> "1000161"  [label="CFG: "];
"1000160" -> "1000161"  [label="CFG: "];
"1000161" -> "1000720"  [label="DDG: dtls1_min_mtu()"];
"1000161" -> "1000160"  [label="DDG: s->d1->mtu"];
"1000161" -> "1000160"  [label="DDG: dtls1_min_mtu()"];
"1000161" -> "1000224"  [label="DDG: s->d1->mtu"];
"1000416" -> "1000414"  [label="AST: "];
"1000416" -> "1000422"  [label="CFG: "];
"1000417" -> "1000416"  [label="AST: "];
"1000422" -> "1000416"  [label="AST: "];
"1000414" -> "1000416"  [label="CFG: "];
"1000416" -> "1000720"  [label="DDG: DTLS1_RT_HEADER_LENGTH -\n\t\t\t\tmac_size - blocksize"];
"1000416" -> "1000720"  [label="DDG: s->d1->mtu"];
"1000416" -> "1000414"  [label="DDG: s->d1->mtu"];
"1000416" -> "1000414"  [label="DDG: DTLS1_RT_HEADER_LENGTH -\n\t\t\t\tmac_size - blocksize"];
"1000422" -> "1000416"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000422" -> "1000416"  [label="DDG: mac_size - blocksize"];
"1000422" -> "1000424"  [label="CFG: "];
"1000423" -> "1000422"  [label="AST: "];
"1000424" -> "1000422"  [label="AST: "];
"1000422" -> "1000720"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000422" -> "1000720"  [label="DDG: mac_size - blocksize"];
"1000422" -> "1000393"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000393" -> "1000422"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000424" -> "1000422"  [label="DDG: mac_size"];
"1000424" -> "1000422"  [label="DDG: blocksize"];
"1000393" -> "1000389"  [label="AST: "];
"1000393" -> "1000395"  [label="CFG: "];
"1000394" -> "1000393"  [label="AST: "];
"1000395" -> "1000393"  [label="AST: "];
"1000389" -> "1000393"  [label="CFG: "];
"1000393" -> "1000720"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000393" -> "1000720"  [label="DDG: mac_size - blocksize"];
"1000393" -> "1000389"  [label="DDG: DTLS1_RT_HEADER_LENGTH"];
"1000393" -> "1000389"  [label="DDG: mac_size - blocksize"];
"1000395" -> "1000393"  [label="DDG: mac_size"];
"1000395" -> "1000393"  [label="DDG: blocksize"];
"1000395" -> "1000397"  [label="CFG: "];
"1000396" -> "1000395"  [label="AST: "];
"1000397" -> "1000395"  [label="AST: "];
"1000395" -> "1000720"  [label="DDG: mac_size"];
"1000395" -> "1000720"  [label="DDG: blocksize"];
"1000343" -> "1000395"  [label="DDG: mac_size"];
"1000424" -> "1000395"  [label="DDG: mac_size"];
"1000424" -> "1000395"  [label="DDG: blocksize"];
"1000336" -> "1000395"  [label="DDG: mac_size"];
"1000359" -> "1000395"  [label="DDG: blocksize"];
"1000370" -> "1000395"  [label="DDG: blocksize"];
"1000395" -> "1000424"  [label="DDG: mac_size"];
"1000395" -> "1000424"  [label="DDG: blocksize"];
"1000343" -> "1000342"  [label="AST: "];
"1000343" -> "1000345"  [label="CFG: "];
"1000344" -> "1000343"  [label="AST: "];
"1000345" -> "1000343"  [label="AST: "];
"1000349" -> "1000343"  [label="CFG: "];
"1000343" -> "1000720"  [label="DDG: mac_size"];
"1000424" -> "1000426"  [label="CFG: "];
"1000425" -> "1000424"  [label="AST: "];
"1000426" -> "1000424"  [label="AST: "];
"1000424" -> "1000720"  [label="DDG: blocksize"];
"1000424" -> "1000720"  [label="DDG: mac_size"];
"1000336" -> "1000332"  [label="AST: "];
"1000336" -> "1000338"  [label="CFG: "];
"1000337" -> "1000336"  [label="AST: "];
"1000338" -> "1000336"  [label="AST: "];
"1000349" -> "1000336"  [label="CFG: "];
"1000336" -> "1000720"  [label="DDG: EVP_MD_CTX_size(s->write_hash)"];
"1000336" -> "1000720"  [label="DDG: mac_size"];
"1000338" -> "1000336"  [label="DDG: s->write_hash"];
"1000338" -> "1000339"  [label="CFG: "];
"1000339" -> "1000338"  [label="AST: "];
"1000338" -> "1000720"  [label="DDG: s->write_hash"];
"1000359" -> "1000346"  [label="AST: "];
"1000359" -> "1000361"  [label="CFG: "];
"1000360" -> "1000359"  [label="AST: "];
"1000361" -> "1000359"  [label="AST: "];
"1000374" -> "1000359"  [label="CFG: "];
"1000359" -> "1000720"  [label="DDG: 2 * EVP_CIPHER_block_size(s->enc_write_ctx->cipher)"];
"1000359" -> "1000720"  [label="DDG: blocksize"];
"1000361" -> "1000359"  [label="DDG: 2"];
"1000361" -> "1000359"  [label="DDG: EVP_CIPHER_block_size(s->enc_write_ctx->cipher)"];
"1000361" -> "1000363"  [label="CFG: "];
"1000362" -> "1000361"  [label="AST: "];
"1000363" -> "1000361"  [label="AST: "];
"1000361" -> "1000720"  [label="DDG: EVP_CIPHER_block_size(s->enc_write_ctx->cipher)"];
"1000363" -> "1000361"  [label="DDG: s->enc_write_ctx->cipher"];
"1000363" -> "1000364"  [label="CFG: "];
"1000364" -> "1000363"  [label="AST: "];
"1000363" -> "1000720"  [label="DDG: s->enc_write_ctx->cipher"];
"1000352" -> "1000363"  [label="DDG: s->enc_write_ctx->cipher"];
"1000352" -> "1000351"  [label="AST: "];
"1000352" -> "1000353"  [label="CFG: "];
"1000353" -> "1000352"  [label="AST: "];
"1000358" -> "1000352"  [label="CFG: "];
"1000352" -> "1000720"  [label="DDG: s->enc_write_ctx->cipher"];
"1000352" -> "1000351"  [label="DDG: s->enc_write_ctx->cipher"];
"1000370" -> "1000369"  [label="AST: "];
"1000370" -> "1000372"  [label="CFG: "];
"1000371" -> "1000370"  [label="AST: "];
"1000372" -> "1000370"  [label="AST: "];
"1000374" -> "1000370"  [label="CFG: "];
"1000370" -> "1000720"  [label="DDG: blocksize"];
"1000390" -> "1000389"  [label="AST: "];
"1000389" -> "1000720"  [label="DDG: DTLS1_RT_HEADER_LENGTH - mac_size - blocksize"];
"1000389" -> "1000720"  [label="DDG: BIO_wpending(SSL_get_wbio(s))"];
"1000390" -> "1000389"  [label="DDG: SSL_get_wbio(s)"];
"1000394" -> "1000390"  [label="CFG: "];
"1000390" -> "1000720"  [label="DDG: SSL_get_wbio(s)"];
"1000506" -> "1000505"  [label="AST: "];
"1000506" -> "1000508"  [label="CFG: "];
"1000507" -> "1000506"  [label="AST: "];
"1000508" -> "1000506"  [label="AST: "];
"1000505" -> "1000506"  [label="CFG: "];
"1000506" -> "1000720"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000506" -> "1000505"  [label="DDG: len"];
"1000506" -> "1000505"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000488" -> "1000506"  [label="DDG: len"];
"1000488" -> "1000506"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000506" -> "1000644"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000506" -> "1000649"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000506" -> "1000713"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000506" -> "1000715"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000488" -> "1000485"  [label="AST: "];
"1000488" -> "1000490"  [label="CFG: "];
"1000489" -> "1000488"  [label="AST: "];
"1000490" -> "1000488"  [label="AST: "];
"1000485" -> "1000488"  [label="CFG: "];
"1000488" -> "1000485"  [label="DDG: len"];
"1000488" -> "1000485"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000476" -> "1000488"  [label="DDG: len"];
"1000480" -> "1000488"  [label="DDG: len"];
"1000433" -> "1000488"  [label="DDG: len"];
"1000437" -> "1000488"  [label="DDG: len"];
"1000455" -> "1000488"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000476" -> "1000470"  [label="AST: "];
"1000476" -> "1000478"  [label="CFG: "];
"1000477" -> "1000476"  [label="AST: "];
"1000478" -> "1000476"  [label="AST: "];
"1000486" -> "1000476"  [label="CFG: "];
"1000476" -> "1000720"  [label="DDG: curr_mtu"];
"1000471" -> "1000476"  [label="DDG: curr_mtu"];
"1000471" -> "1000470"  [label="AST: "];
"1000471" -> "1000475"  [label="CFG: "];
"1000472" -> "1000471"  [label="AST: "];
"1000475" -> "1000471"  [label="AST: "];
"1000477" -> "1000471"  [label="CFG: "];
"1000481" -> "1000471"  [label="CFG: "];
"1000471" -> "1000720"  [label="DDG: s->init_num"];
"1000471" -> "1000720"  [label="DDG: curr_mtu"];
"1000471" -> "1000720"  [label="DDG: s->init_num > curr_mtu"];
"1000471" -> "1000428"  [label="DDG: s->init_num"];
"1000465" -> "1000471"  [label="DDG: s->init_num"];
"1000428" -> "1000471"  [label="DDG: curr_mtu"];
"1000471" -> "1000480"  [label="DDG: s->init_num"];
"1000471" -> "1000657"  [label="DDG: s->init_num"];
"1000465" -> "1000453"  [label="AST: "];
"1000465" -> "1000469"  [label="CFG: "];
"1000466" -> "1000465"  [label="AST: "];
"1000469" -> "1000465"  [label="AST: "];
"1000473" -> "1000465"  [label="CFG: "];
"1000455" -> "1000465"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000428" -> "1000465"  [label="DDG: s->init_num"];
"1000455" -> "1000454"  [label="AST: "];
"1000455" -> "1000459"  [label="CFG: "];
"1000456" -> "1000455"  [label="AST: "];
"1000459" -> "1000455"  [label="AST: "];
"1000454" -> "1000455"  [label="CFG: "];
"1000455" -> "1000454"  [label="DDG: s->init_off"];
"1000455" -> "1000454"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000448" -> "1000455"  [label="DDG: s->init_off"];
"1000455" -> "1000460"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000455" -> "1000460"  [label="DDG: s->init_off"];
"1000448" -> "1000447"  [label="AST: "];
"1000448" -> "1000452"  [label="CFG: "];
"1000449" -> "1000448"  [label="AST: "];
"1000452" -> "1000448"  [label="AST: "];
"1000457" -> "1000448"  [label="CFG: "];
"1000486" -> "1000448"  [label="CFG: "];
"1000448" -> "1000720"  [label="DDG: s->init_off"];
"1000448" -> "1000720"  [label="DDG: s->init_off != 0"];
"1000308" -> "1000448"  [label="DDG: s->init_off"];
"1000460" -> "1000448"  [label="DDG: s->init_off"];
"1000703" -> "1000448"  [label="DDG: s->init_off"];
"1000448" -> "1000678"  [label="DDG: s->init_off"];
"1000448" -> "1000680"  [label="DDG: s->init_off"];
"1000448" -> "1000703"  [label="DDG: s->init_off"];
"1000308" -> "1000307"  [label="AST: "];
"1000308" -> "1000312"  [label="CFG: "];
"1000309" -> "1000308"  [label="AST: "];
"1000312" -> "1000308"  [label="AST: "];
"1000314" -> "1000308"  [label="CFG: "];
"1000307" -> "1000308"  [label="CFG: "];
"1000308" -> "1000720"  [label="DDG: s->init_off"];
"1000308" -> "1000307"  [label="DDG: s->init_off"];
"1000308" -> "1000307"  [label="DDG: 0"];
"1000308" -> "1000678"  [label="DDG: s->init_off"];
"1000308" -> "1000680"  [label="DDG: s->init_off"];
"1000308" -> "1000703"  [label="DDG: s->init_off"];
"1000460" -> "1000453"  [label="AST: "];
"1000460" -> "1000464"  [label="CFG: "];
"1000461" -> "1000460"  [label="AST: "];
"1000464" -> "1000460"  [label="AST: "];
"1000467" -> "1000460"  [label="CFG: "];
"1000460" -> "1000720"  [label="DDG: s->init_off"];
"1000460" -> "1000678"  [label="DDG: s->init_off"];
"1000460" -> "1000680"  [label="DDG: s->init_off"];
"1000460" -> "1000703"  [label="DDG: s->init_off"];
"1000703" -> "1000556"  [label="AST: "];
"1000703" -> "1000707"  [label="CFG: "];
"1000704" -> "1000703"  [label="AST: "];
"1000707" -> "1000703"  [label="AST: "];
"1000710" -> "1000703"  [label="CFG: "];
"1000703" -> "1000720"  [label="DDG: s->init_off"];
"1000703" -> "1000678"  [label="DDG: s->init_off"];
"1000703" -> "1000680"  [label="DDG: s->init_off"];
"1000657" -> "1000703"  [label="DDG: ret"];
"1000657" -> "1000656"  [label="AST: "];
"1000657" -> "1000659"  [label="CFG: "];
"1000658" -> "1000657"  [label="AST: "];
"1000659" -> "1000657"  [label="AST: "];
"1000665" -> "1000657"  [label="CFG: "];
"1000705" -> "1000657"  [label="CFG: "];
"1000657" -> "1000720"  [label="DDG: ret"];
"1000657" -> "1000720"  [label="DDG: ret == s->init_num"];
"1000649" -> "1000657"  [label="DDG: ret"];
"1000560" -> "1000657"  [label="DDG: ret"];
"1000428" -> "1000657"  [label="DDG: s->init_num"];
"1000657" -> "1000678"  [label="DDG: s->init_num"];
"1000657" -> "1000680"  [label="DDG: s->init_num"];
"1000657" -> "1000708"  [label="DDG: ret"];
"1000657" -> "1000708"  [label="DDG: s->init_num"];
"1000657" -> "1000715"  [label="DDG: ret"];
"1000649" -> "1000647"  [label="AST: "];
"1000649" -> "1000651"  [label="CFG: "];
"1000650" -> "1000649"  [label="AST: "];
"1000651" -> "1000649"  [label="AST: "];
"1000647" -> "1000649"  [label="CFG: "];
"1000649" -> "1000720"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000649" -> "1000647"  [label="DDG: ret"];
"1000649" -> "1000647"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000560" -> "1000649"  [label="DDG: ret"];
"1000649" -> "1000713"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000649" -> "1000715"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000560" -> "1000558"  [label="AST: "];
"1000560" -> "1000562"  [label="CFG: "];
"1000561" -> "1000560"  [label="AST: "];
"1000562" -> "1000560"  [label="AST: "];
"1000558" -> "1000560"  [label="CFG: "];
"1000560" -> "1000558"  [label="DDG: ret"];
"1000526" -> "1000560"  [label="DDG: ret"];
"1000560" -> "1000639"  [label="DDG: ret"];
"1000526" -> "1000525"  [label="AST: "];
"1000526" -> "1000528"  [label="CFG: "];
"1000527" -> "1000526"  [label="AST: "];
"1000528" -> "1000526"  [label="AST: "];
"1000534" -> "1000526"  [label="CFG: "];
"1000559" -> "1000526"  [label="CFG: "];
"1000526" -> "1000720"  [label="DDG: ret < 0"];
"1000526" -> "1000720"  [label="DDG: ret"];
"1000428" -> "1000427"  [label="AST: "];
"1000428" -> "1000432"  [label="CFG: "];
"1000429" -> "1000428"  [label="AST: "];
"1000432" -> "1000428"  [label="AST: "];
"1000434" -> "1000428"  [label="CFG: "];
"1000438" -> "1000428"  [label="CFG: "];
"1000428" -> "1000720"  [label="DDG: s->init_num > curr_mtu"];
"1000428" -> "1000720"  [label="DDG: curr_mtu"];
"1000428" -> "1000720"  [label="DDG: s->init_num"];
"1000708" -> "1000428"  [label="DDG: s->init_num"];
"1000317" -> "1000428"  [label="DDG: s->init_num"];
"1000414" -> "1000428"  [label="DDG: curr_mtu"];
"1000428" -> "1000433"  [label="DDG: curr_mtu"];
"1000428" -> "1000437"  [label="DDG: s->init_num"];
"1000708" -> "1000556"  [label="AST: "];
"1000708" -> "1000712"  [label="CFG: "];
"1000709" -> "1000708"  [label="AST: "];
"1000712" -> "1000708"  [label="AST: "];
"1000714" -> "1000708"  [label="CFG: "];
"1000708" -> "1000720"  [label="DDG: s->init_num"];
"1000317" -> "1000316"  [label="AST: "];
"1000317" -> "1000321"  [label="CFG: "];
"1000318" -> "1000317"  [label="AST: "];
"1000321" -> "1000317"  [label="AST: "];
"1000316" -> "1000317"  [label="CFG: "];
"1000317" -> "1000720"  [label="DDG: s->init_num"];
"1000317" -> "1000720"  [label="DDG: (int)s->d1->w_msg_hdr.msg_len + DTLS1_HM_HEADER_LENGTH"];
"1000317" -> "1000316"  [label="DDG: s->init_num"];
"1000317" -> "1000316"  [label="DDG: (int)s->d1->w_msg_hdr.msg_len + DTLS1_HM_HEADER_LENGTH"];
"1000322" -> "1000317"  [label="DDG: s->d1->w_msg_hdr.msg_len"];
"1000322" -> "1000321"  [label="AST: "];
"1000322" -> "1000324"  [label="CFG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000324" -> "1000322"  [label="AST: "];
"1000331" -> "1000322"  [label="CFG: "];
"1000322" -> "1000720"  [label="DDG: s->d1->w_msg_hdr.msg_len"];
"1000322" -> "1000321"  [label="DDG: s->d1->w_msg_hdr.msg_len"];
"1000414" -> "1000402"  [label="AST: "];
"1000415" -> "1000414"  [label="AST: "];
"1000430" -> "1000414"  [label="CFG: "];
"1000414" -> "1000720"  [label="DDG: s->d1->mtu - DTLS1_RT_HEADER_LENGTH -\n\t\t\t\tmac_size - blocksize"];
"1000480" -> "1000479"  [label="AST: "];
"1000480" -> "1000482"  [label="CFG: "];
"1000481" -> "1000480"  [label="AST: "];
"1000482" -> "1000480"  [label="AST: "];
"1000486" -> "1000480"  [label="CFG: "];
"1000480" -> "1000720"  [label="DDG: s->init_num"];
"1000433" -> "1000427"  [label="AST: "];
"1000433" -> "1000435"  [label="CFG: "];
"1000434" -> "1000433"  [label="AST: "];
"1000435" -> "1000433"  [label="AST: "];
"1000444" -> "1000433"  [label="CFG: "];
"1000433" -> "1000720"  [label="DDG: curr_mtu"];
"1000437" -> "1000436"  [label="AST: "];
"1000437" -> "1000439"  [label="CFG: "];
"1000438" -> "1000437"  [label="AST: "];
"1000439" -> "1000437"  [label="AST: "];
"1000444" -> "1000437"  [label="CFG: "];
"1000437" -> "1000720"  [label="DDG: s->init_num"];
"1000631" -> "1000610"  [label="AST: "];
"1000631" -> "1000635"  [label="CFG: "];
"1000632" -> "1000631"  [label="AST: "];
"1000635" -> "1000631"  [label="AST: "];
"1000637" -> "1000631"  [label="CFG: "];
"1000631" -> "1000720"  [label="DDG: msg_hdr->msg_len"];
"1000631" -> "1000720"  [label="DDG: l2n3(msg_hdr->msg_len,p)"];
"1000631" -> "1000618"  [label="DDG: msg_hdr->msg_len"];
"1000618" -> "1000631"  [label="DDG: msg_hdr->msg_len"];
"1000628" -> "1000631"  [label="DDG: p"];
"1000618" -> "1000610"  [label="AST: "];
"1000618" -> "1000622"  [label="CFG: "];
"1000619" -> "1000618"  [label="AST: "];
"1000622" -> "1000618"  [label="AST: "];
"1000625" -> "1000618"  [label="CFG: "];
"1000613" -> "1000618"  [label="DDG: p"];
"1000618" -> "1000623"  [label="DDG: p"];
"1000613" -> "1000612"  [label="AST: "];
"1000613" -> "1000614"  [label="CFG: "];
"1000614" -> "1000613"  [label="AST: "];
"1000612" -> "1000613"  [label="CFG: "];
"1000576" -> "1000613"  [label="DDG: p"];
"1000576" -> "1000574"  [label="AST: "];
"1000576" -> "1000578"  [label="CFG: "];
"1000577" -> "1000576"  [label="AST: "];
"1000578" -> "1000576"  [label="AST: "];
"1000592" -> "1000576"  [label="CFG: "];
"1000576" -> "1000720"  [label="DDG: (unsigned char *)&s->init_buf->data[s->init_off]"];
"1000578" -> "1000576"  [label="DDG: &s->init_buf->data[s->init_off]"];
"1000576" -> "1000644"  [label="DDG: p"];
"1000578" -> "1000580"  [label="CFG: "];
"1000579" -> "1000578"  [label="AST: "];
"1000580" -> "1000578"  [label="AST: "];
"1000578" -> "1000720"  [label="DDG: &s->init_buf->data[s->init_off]"];
"1000578" -> "1000493"  [label="DDG: &s->init_buf->data[s->init_off]"];
"1000628" -> "1000610"  [label="AST: "];
"1000628" -> "1000630"  [label="CFG: "];
"1000629" -> "1000628"  [label="AST: "];
"1000630" -> "1000628"  [label="AST: "];
"1000633" -> "1000628"  [label="CFG: "];
"1000628" -> "1000720"  [label="DDG: l2n3(0,p)"];
"1000623" -> "1000628"  [label="DDG: p"];
"1000623" -> "1000610"  [label="AST: "];
"1000623" -> "1000627"  [label="CFG: "];
"1000624" -> "1000623"  [label="AST: "];
"1000627" -> "1000623"  [label="AST: "];
"1000629" -> "1000623"  [label="CFG: "];
"1000623" -> "1000720"  [label="DDG: s2n (msg_hdr->seq,p)"];
"1000623" -> "1000720"  [label="DDG: msg_hdr->seq"];
"1000644" -> "1000643"  [label="AST: "];
"1000644" -> "1000646"  [label="CFG: "];
"1000645" -> "1000644"  [label="AST: "];
"1000646" -> "1000644"  [label="AST: "];
"1000648" -> "1000644"  [label="CFG: "];
"1000639" -> "1000610"  [label="AST: "];
"1000639" -> "1000641"  [label="CFG: "];
"1000640" -> "1000639"  [label="AST: "];
"1000641" -> "1000639"  [label="AST: "];
"1000653" -> "1000639"  [label="CFG: "];
"1000647" -> "1000643"  [label="AST: "];
"1000648" -> "1000647"  [label="AST: "];
"1000653" -> "1000647"  [label="CFG: "];
"1000647" -> "1000720"  [label="DDG: ret - DTLS1_HM_HEADER_LENGTH"];
"1000406" -> "1000405"  [label="AST: "];
"1000406" -> "1000407"  [label="CFG: "];
"1000407" -> "1000406"  [label="AST: "];
"1000405" -> "1000406"  [label="CFG: "];
"1000406" -> "1000720"  [label="DDG: s"];
"1000406" -> "1000405"  [label="DDG: s"];
"1000406" -> "1000485"  [label="DDG: s"];
"1000491" -> "1000446"  [label="AST: "];
"1000491" -> "1000493"  [label="CFG: "];
"1000492" -> "1000491"  [label="AST: "];
"1000493" -> "1000491"  [label="AST: "];
"1000507" -> "1000491"  [label="CFG: "];
"1000491" -> "1000720"  [label="DDG: (unsigned char *)&s->init_buf->data[s->init_off]"];
"1000491" -> "1000720"  [label="DDG: dtls1_write_message_header(s, (unsigned char *)&s->init_buf->data[s->init_off])"];
"1000485" -> "1000491"  [label="DDG: s"];
"1000493" -> "1000491"  [label="DDG: &s->init_buf->data[s->init_off]"];
"1000485" -> "1000446"  [label="AST: "];
"1000486" -> "1000485"  [label="AST: "];
"1000487" -> "1000485"  [label="AST: "];
"1000492" -> "1000485"  [label="CFG: "];
"1000485" -> "1000720"  [label="DDG: len - DTLS1_HM_HEADER_LENGTH"];
"1000485" -> "1000720"  [label="DDG: frag_off"];
"1000485" -> "1000720"  [label="DDG: dtls1_fix_message_header(s, frag_off, \n\t\t\t\tlen - DTLS1_HM_HEADER_LENGTH)"];
"1000713" -> "1000485"  [label="DDG: frag_off"];
"1000373" -> "1000485"  [label="DDG: frag_off"];
"1000485" -> "1000602"  [label="DDG: frag_off"];
"1000485" -> "1000713"  [label="DDG: frag_off"];
"1000713" -> "1000556"  [label="AST: "];
"1000713" -> "1000715"  [label="CFG: "];
"1000714" -> "1000713"  [label="AST: "];
"1000715" -> "1000713"  [label="AST: "];
"1000378" -> "1000713"  [label="CFG: "];
"1000713" -> "1000720"  [label="DDG: frag_off"];
"1000713" -> "1000602"  [label="DDG: frag_off"];
"1000602" -> "1000713"  [label="DDG: frag_off"];
"1000373" -> "1000713"  [label="DDG: frag_off"];
"1000715" -> "1000713"  [label="DDG: ret"];
"1000602" -> "1000601"  [label="AST: "];
"1000602" -> "1000604"  [label="CFG: "];
"1000603" -> "1000602"  [label="AST: "];
"1000604" -> "1000602"  [label="AST: "];
"1000607" -> "1000602"  [label="CFG: "];
"1000601" -> "1000602"  [label="CFG: "];
"1000602" -> "1000720"  [label="DDG: frag_off"];
"1000602" -> "1000601"  [label="DDG: frag_off"];
"1000602" -> "1000601"  [label="DDG: 0"];
"1000373" -> "1000602"  [label="DDG: frag_off"];
"1000373" -> "1000112"  [label="AST: "];
"1000373" -> "1000375"  [label="CFG: "];
"1000374" -> "1000373"  [label="AST: "];
"1000375" -> "1000373"  [label="AST: "];
"1000378" -> "1000373"  [label="CFG: "];
"1000373" -> "1000720"  [label="DDG: frag_off"];
"1000715" -> "1000717"  [label="CFG: "];
"1000716" -> "1000715"  [label="AST: "];
"1000717" -> "1000715"  [label="AST: "];
"1000715" -> "1000720"  [label="DDG: ret"];
"1000715" -> "1000720"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000493" -> "1000495"  [label="CFG: "];
"1000494" -> "1000493"  [label="AST: "];
"1000495" -> "1000493"  [label="AST: "];
"1000443" -> "1000442"  [label="AST: "];
"1000443" -> "1000445"  [label="CFG: "];
"1000444" -> "1000443"  [label="AST: "];
"1000445" -> "1000443"  [label="AST: "];
"1000450" -> "1000443"  [label="CFG: "];
"1000510" -> "1000443"  [label="CFG: "];
"1000443" -> "1000720"  [label="DDG: type == SSL3_RT_HANDSHAKE"];
"1000443" -> "1000720"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000565" -> "1000443"  [label="DDG: type"];
"1000565" -> "1000443"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000313" -> "1000443"  [label="DDG: type"];
"1000313" -> "1000443"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000443" -> "1000565"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000565" -> "1000564"  [label="AST: "];
"1000565" -> "1000567"  [label="CFG: "];
"1000566" -> "1000565"  [label="AST: "];
"1000567" -> "1000565"  [label="AST: "];
"1000571" -> "1000565"  [label="CFG: "];
"1000564" -> "1000565"  [label="CFG: "];
"1000565" -> "1000720"  [label="DDG: type"];
"1000565" -> "1000720"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000565" -> "1000564"  [label="DDG: type"];
"1000565" -> "1000564"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000565" -> "1000667"  [label="DDG: type"];
"1000313" -> "1000307"  [label="AST: "];
"1000313" -> "1000315"  [label="CFG: "];
"1000314" -> "1000313"  [label="AST: "];
"1000315" -> "1000313"  [label="AST: "];
"1000307" -> "1000313"  [label="CFG: "];
"1000313" -> "1000720"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000313" -> "1000720"  [label="DDG: type"];
"1000313" -> "1000307"  [label="DDG: type"];
"1000313" -> "1000307"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000558" -> "1000557"  [label="AST: "];
"1000559" -> "1000558"  [label="AST: "];
"1000557" -> "1000558"  [label="CFG: "];
"1000558" -> "1000720"  [label="DDG: (unsigned int)ret"];
"1000558" -> "1000720"  [label="DDG: len"];
"1000558" -> "1000557"  [label="DDG: len"];
"1000558" -> "1000557"  [label="DDG: (unsigned int)ret"];
"1000557" -> "1000556"  [label="AST: "];
"1000566" -> "1000557"  [label="CFG: "];
"1000557" -> "1000720"  [label="DDG: OPENSSL_assert(len == (unsigned int)ret)"];
"1000557" -> "1000720"  [label="DDG: len == (unsigned int)ret"];
"1000564" -> "1000563"  [label="AST: "];
"1000564" -> "1000568"  [label="CFG: "];
"1000568" -> "1000564"  [label="AST: "];
"1000577" -> "1000564"  [label="CFG: "];
"1000658" -> "1000564"  [label="CFG: "];
"1000564" -> "1000720"  [label="DDG: ! s->d1->retransmitting"];
"1000564" -> "1000720"  [label="DDG: type == SSL3_RT_HANDSHAKE"];
"1000564" -> "1000720"  [label="DDG: type == SSL3_RT_HANDSHAKE && ! s->d1->retransmitting"];
"1000568" -> "1000564"  [label="DDG: s->d1->retransmitting"];
"1000667" -> "1000663"  [label="AST: "];
"1000667" -> "1000688"  [label="CFG: "];
"1000668" -> "1000667"  [label="AST: "];
"1000669" -> "1000667"  [label="AST: "];
"1000672" -> "1000667"  [label="AST: "];
"1000673" -> "1000667"  [label="AST: "];
"1000678" -> "1000667"  [label="AST: "];
"1000687" -> "1000667"  [label="AST: "];
"1000688" -> "1000667"  [label="AST: "];
"1000693" -> "1000667"  [label="CFG: "];
"1000667" -> "1000720"  [label="DDG: (size_t)(s->init_off + s->init_num)"];
"1000667" -> "1000720"  [label="DDG: type"];
"1000667" -> "1000720"  [label="DDG: s"];
"1000667" -> "1000720"  [label="DDG: s->msg_callback_arg"];
"1000667" -> "1000720"  [label="DDG: s->version"];
"1000667" -> "1000720"  [label="DDG: s->init_buf->data"];
"1000667" -> "1000720"  [label="DDG: s->msg_callback(1, s->version, type, s->init_buf->data, \n\t\t\t\t\t\t(size_t)(s->init_off + s->init_num), s, \n\t\t\t\t\t\ts->msg_callback_arg)"];
"1000605" -> "1000667"  [label="DDG: s->version"];
"1000678" -> "1000667"  [label="DDG: s->init_off + s->init_num"];
"1000531" -> "1000530"  [label="AST: "];
"1000531" -> "1000538"  [label="CFG: "];
"1000538" -> "1000531"  [label="AST: "];
"1000542" -> "1000531"  [label="CFG: "];
"1000554" -> "1000531"  [label="CFG: "];
"1000531" -> "1000720"  [label="DDG: BIO_ctrl(SSL_get_wbio(s),\n\t\t\t\tBIO_CTRL_DGRAM_MTU_EXCEEDED, 0, NULL) > 0"];
"1000531" -> "1000720"  [label="DDG: BIO_ctrl(SSL_get_wbio(s),\n\t\t\t\tBIO_CTRL_DGRAM_MTU_EXCEEDED, 0, NULL)"];
"1000601" -> "1000600"  [label="AST: "];
"1000601" -> "1000605"  [label="CFG: "];
"1000605" -> "1000601"  [label="AST: "];
"1000614" -> "1000601"  [label="CFG: "];
"1000645" -> "1000601"  [label="CFG: "];
"1000601" -> "1000720"  [label="DDG: frag_off == 0"];
"1000601" -> "1000720"  [label="DDG: s->version != DTLS1_BAD_VER"];
"1000601" -> "1000720"  [label="DDG: frag_off == 0 && s->version != DTLS1_BAD_VER"];
"1000605" -> "1000601"  [label="DDG: s->version"];
"1000605" -> "1000601"  [label="DDG: DTLS1_BAD_VER"];
"1000505" -> "1000446"  [label="AST: "];
"1000510" -> "1000505"  [label="CFG: "];
"1000505" -> "1000720"  [label="DDG: len >= DTLS1_HM_HEADER_LENGTH"];
"1000505" -> "1000720"  [label="DDG: OPENSSL_assert(len >= DTLS1_HM_HEADER_LENGTH)"];
"1000678" -> "1000680"  [label="CFG: "];
"1000679" -> "1000678"  [label="AST: "];
"1000680" -> "1000678"  [label="AST: "];
"1000687" -> "1000678"  [label="CFG: "];
"1000678" -> "1000720"  [label="DDG: s->init_off + s->init_num"];
"1000680" -> "1000684"  [label="CFG: "];
"1000681" -> "1000680"  [label="AST: "];
"1000684" -> "1000680"  [label="AST: "];
"1000454" -> "1000453"  [label="AST: "];
"1000462" -> "1000454"  [label="CFG: "];
"1000454" -> "1000720"  [label="DDG: s->init_off > DTLS1_HM_HEADER_LENGTH"];
"1000454" -> "1000720"  [label="DDG: OPENSSL_assert(s->init_off > DTLS1_HM_HEADER_LENGTH)"];
"1000405" -> "1000403"  [label="AST: "];
"1000403" -> "1000405"  [label="CFG: "];
"1000405" -> "1000720"  [label="DDG: SSL_get_wbio(s)"];
"1000405" -> "1000403"  [label="DDG: SSL_get_wbio(s)"];
"1000403" -> "1000402"  [label="AST: "];
"1000404" -> "1000403"  [label="AST: "];
"1000410" -> "1000403"  [label="CFG: "];
"1000403" -> "1000720"  [label="DDG: BIO_flush(SSL_get_wbio(s))"];
"1000403" -> "1000409"  [label="DDG: ret"];
"1000409" -> "1000408"  [label="AST: "];
"1000409" -> "1000411"  [label="CFG: "];
"1000410" -> "1000409"  [label="AST: "];
"1000411" -> "1000409"  [label="AST: "];
"1000413" -> "1000409"  [label="CFG: "];
"1000415" -> "1000409"  [label="CFG: "];
"1000409" -> "1000720"  [label="DDG: ret <= 0"];
"1000409" -> "1000720"  [label="DDG: ret"];
"1000409" -> "1000412"  [label="DDG: ret"];
"1000412" -> "1000408"  [label="AST: "];
"1000412" -> "1000413"  [label="CFG: "];
"1000413" -> "1000412"  [label="AST: "];
"1000720" -> "1000412"  [label="CFG: "];
"1000412" -> "1000720"  [label="DDG: <RET>"];
"1000413" -> "1000412"  [label="DDG: ret"];
}
