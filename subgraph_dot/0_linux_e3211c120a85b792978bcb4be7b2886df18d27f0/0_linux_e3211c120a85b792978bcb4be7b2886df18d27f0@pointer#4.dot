digraph "0_linux_e3211c120a85b792978bcb4be7b2886df18d27f0@pointer" {
"1000144" [label="(Call,make_kuid(ns->parent, id))"];
"1000127" [label="(Call,id = new_map->extent[0].lower_first)"];
"1000142" [label="(Call,uid = make_kuid(ns->parent, id))"];
"1000150" [label="(Call,uid_eq(uid, file->f_cred->fsuid))"];
"1000191" [label="(Call,ns_capable(ns->parent, cap_setid))"];
"1000190" [label="(Call,ns_capable(ns->parent, cap_setid) &&\n\t    file_ns_capable(file, ns->parent, cap_setid))"];
"1000196" [label="(Call,file_ns_capable(file, ns->parent, cap_setid))"];
"1000205" [label="(Identifier,false)"];
"1000168" [label="(Call,make_kgid(ns->parent, id))"];
"1000128" [label="(Identifier,id)"];
"1000142" [label="(Call,uid = make_kuid(ns->parent, id))"];
"1000201" [label="(Identifier,cap_setid)"];
"1000189" [label="(ControlStructure,if (ns_capable(ns->parent, cap_setid) &&\n\t    file_ns_capable(file, ns->parent, cap_setid)))"];
"1000148" [label="(Identifier,id)"];
"1000195" [label="(Identifier,cap_setid)"];
"1000138" [label="(Identifier,cap_setid)"];
"1000190" [label="(Call,ns_capable(ns->parent, cap_setid) &&\n\t    file_ns_capable(file, ns->parent, cap_setid))"];
"1000185" [label="(Call,cap_valid(cap_setid))"];
"1000149" [label="(ControlStructure,if (uid_eq(uid, file->f_cred->fsuid)))"];
"1000203" [label="(Identifier,true)"];
"1000196" [label="(Call,file_ns_capable(file, ns->parent, cap_setid))"];
"1000206" [label="(MethodReturn,static bool)"];
"1000152" [label="(Call,file->f_cred->fsuid)"];
"1000192" [label="(Call,ns->parent)"];
"1000140" [label="(Block,)"];
"1000145" [label="(Call,ns->parent)"];
"1000151" [label="(Identifier,uid)"];
"1000125" [label="(Block,)"];
"1000186" [label="(Identifier,cap_setid)"];
"1000104" [label="(MethodParameterIn,const struct file *file)"];
"1000144" [label="(Call,make_kuid(ns->parent, id))"];
"1000143" [label="(Identifier,uid)"];
"1000150" [label="(Call,uid_eq(uid, file->f_cred->fsuid))"];
"1000127" [label="(Call,id = new_map->extent[0].lower_first)"];
"1000198" [label="(Call,ns->parent)"];
"1000106" [label="(MethodParameterIn,int cap_setid)"];
"1000158" [label="(Identifier,true)"];
"1000191" [label="(Call,ns_capable(ns->parent, cap_setid))"];
"1000129" [label="(Call,new_map->extent[0].lower_first)"];
"1000197" [label="(Identifier,file)"];
"1000144" -> "1000142"  [label="AST: "];
"1000144" -> "1000148"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000148" -> "1000144"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000144" -> "1000206"  [label="DDG: ns->parent"];
"1000144" -> "1000206"  [label="DDG: id"];
"1000144" -> "1000142"  [label="DDG: ns->parent"];
"1000144" -> "1000142"  [label="DDG: id"];
"1000127" -> "1000144"  [label="DDG: id"];
"1000144" -> "1000191"  [label="DDG: ns->parent"];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000138" -> "1000127"  [label="CFG: "];
"1000127" -> "1000206"  [label="DDG: new_map->extent[0].lower_first"];
"1000127" -> "1000206"  [label="DDG: id"];
"1000127" -> "1000168"  [label="DDG: id"];
"1000142" -> "1000140"  [label="AST: "];
"1000143" -> "1000142"  [label="AST: "];
"1000151" -> "1000142"  [label="CFG: "];
"1000142" -> "1000206"  [label="DDG: make_kuid(ns->parent, id)"];
"1000142" -> "1000150"  [label="DDG: uid"];
"1000150" -> "1000149"  [label="AST: "];
"1000150" -> "1000152"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="AST: "];
"1000158" -> "1000150"  [label="CFG: "];
"1000186" -> "1000150"  [label="CFG: "];
"1000150" -> "1000206"  [label="DDG: uid_eq(uid, file->f_cred->fsuid)"];
"1000150" -> "1000206"  [label="DDG: uid"];
"1000150" -> "1000206"  [label="DDG: file->f_cred->fsuid"];
"1000191" -> "1000190"  [label="AST: "];
"1000191" -> "1000195"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000195" -> "1000191"  [label="AST: "];
"1000197" -> "1000191"  [label="CFG: "];
"1000190" -> "1000191"  [label="CFG: "];
"1000191" -> "1000206"  [label="DDG: cap_setid"];
"1000191" -> "1000206"  [label="DDG: ns->parent"];
"1000191" -> "1000190"  [label="DDG: ns->parent"];
"1000191" -> "1000190"  [label="DDG: cap_setid"];
"1000168" -> "1000191"  [label="DDG: ns->parent"];
"1000185" -> "1000191"  [label="DDG: cap_setid"];
"1000106" -> "1000191"  [label="DDG: cap_setid"];
"1000191" -> "1000196"  [label="DDG: ns->parent"];
"1000191" -> "1000196"  [label="DDG: cap_setid"];
"1000190" -> "1000189"  [label="AST: "];
"1000190" -> "1000196"  [label="CFG: "];
"1000196" -> "1000190"  [label="AST: "];
"1000203" -> "1000190"  [label="CFG: "];
"1000205" -> "1000190"  [label="CFG: "];
"1000190" -> "1000206"  [label="DDG: ns_capable(ns->parent, cap_setid)"];
"1000190" -> "1000206"  [label="DDG: ns_capable(ns->parent, cap_setid) &&\n\t    file_ns_capable(file, ns->parent, cap_setid)"];
"1000190" -> "1000206"  [label="DDG: file_ns_capable(file, ns->parent, cap_setid)"];
"1000196" -> "1000190"  [label="DDG: file"];
"1000196" -> "1000190"  [label="DDG: ns->parent"];
"1000196" -> "1000190"  [label="DDG: cap_setid"];
"1000196" -> "1000201"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000198" -> "1000196"  [label="AST: "];
"1000201" -> "1000196"  [label="AST: "];
"1000196" -> "1000206"  [label="DDG: cap_setid"];
"1000196" -> "1000206"  [label="DDG: file"];
"1000196" -> "1000206"  [label="DDG: ns->parent"];
"1000104" -> "1000196"  [label="DDG: file"];
"1000106" -> "1000196"  [label="DDG: cap_setid"];
}
