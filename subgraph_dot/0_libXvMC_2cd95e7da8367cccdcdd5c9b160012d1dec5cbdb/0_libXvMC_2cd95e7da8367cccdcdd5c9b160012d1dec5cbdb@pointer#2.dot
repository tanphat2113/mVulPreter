digraph "0_libXvMC_2cd95e7da8367cccdcdd5c9b160012d1dec5cbdb@pointer" {
"1000145" [label="(Call,LockDisplay (dpy))"];
"1000141" [label="(Call,XvMCCheckExtension (dpy, info, BadImplementation))"];
"1000115" [label="(Call,xvmc_find_display(dpy))"];
"1000103" [label="(MethodParameterIn,Display *dpy)"];
"1000113" [label="(Call,*info = xvmc_find_display(dpy))"];
"1000249" [label="(Call,_XReply (dpy, (xReply *) &rep, 0, xFalse))"];
"1000248" [label="(Call,!_XReply (dpy, (xReply *) &rep, 0, xFalse))"];
"1000258" [label="(Call,UnlockDisplay (dpy))"];
"1000360" [label="(Call,_XRead(dpy, tmpBuf, realSize))"];
"1000364" [label="(Call,strncpy(*name,tmpBuf,rep.nameLen))"];
"1000376" [label="(Call,rep.nameLen == 0)"];
"1000382" [label="(Call,rep.nameLen - 1)"];
"1000375" [label="(Call,rep.nameLen == 0 ? 0 : rep.nameLen - 1)"];
"1000388" [label="(Call,strncpy(*busID,tmpBuf+rep.nameLen,rep.busIDLen))"];
"1000404" [label="(Call,rep.busIDLen == 0)"];
"1000410" [label="(Call,rep.busIDLen - 1)"];
"1000403" [label="(Call,rep.busIDLen == 0 ? 0 : rep.busIDLen - 1)"];
"1000391" [label="(Call,tmpBuf+rep.nameLen)"];
"1000416" [label="(Call,XFree(tmpBuf))"];
"1000447" [label="(Call,UnlockDisplay (dpy))"];
"1000436" [label="(Call,_XEatDataWords(dpy, rep.length))"];
"1000441" [label="(Call,UnlockDisplay (dpy))"];
"1000249" [label="(Call,_XReply (dpy, (xReply *) &rep, 0, xFalse))"];
"1000116" [label="(Identifier,dpy)"];
"1000393" [label="(Call,rep.nameLen)"];
"1000384" [label="(Identifier,rep)"];
"1000392" [label="(Identifier,tmpBuf)"];
"1000482" [label="(Call,(rep.length > 0) ? Success : BadImplementation)"];
"1000250" [label="(Identifier,dpy)"];
"1000257" [label="(Block,)"];
"1000303" [label="(Call,rep.nameLen + rep.busIDLen > rep.nameLen)"];
"1000448" [label="(Identifier,dpy)"];
"1000360" [label="(Call,_XRead(dpy, tmpBuf, realSize))"];
"1000490" [label="(MethodReturn,Status)"];
"1000125" [label="(Identifier,here)"];
"1000291" [label="(Call,*tmpBuf = NULL)"];
"1000437" [label="(Identifier,dpy)"];
"1000143" [label="(Identifier,info)"];
"1000377" [label="(Call,rep.nameLen)"];
"1000391" [label="(Call,tmpBuf+rep.nameLen)"];
"1000396" [label="(Call,rep.busIDLen)"];
"1000410" [label="(Call,rep.busIDLen - 1)"];
"1000419" [label="(Block,)"];
"1000366" [label="(Identifier,name)"];
"1000344" [label="(Call,*busID = Xmalloc(rep.busIDLen))"];
"1000438" [label="(Call,rep.length)"];
"1000436" [label="(Call,_XEatDataWords(dpy, rep.length))"];
"1000380" [label="(Literal,0)"];
"1000449" [label="(Call,SyncHandle ())"];
"1000361" [label="(Identifier,dpy)"];
"1000374" [label="(Identifier,name)"];
"1000382" [label="(Call,rep.nameLen - 1)"];
"1000340" [label="(Call,Xmalloc(rep.nameLen))"];
"1000142" [label="(Identifier,dpy)"];
"1000376" [label="(Call,rep.nameLen == 0)"];
"1000148" [label="(Identifier,GetDRInfo)"];
"1000367" [label="(Identifier,tmpBuf)"];
"1000364" [label="(Call,strncpy(*name,tmpBuf,rep.nameLen))"];
"1000412" [label="(Identifier,rep)"];
"1000417" [label="(Identifier,tmpBuf)"];
"1000363" [label="(Identifier,realSize)"];
"1000323" [label="(Call,realSize >= (rep.nameLen + rep.busIDLen))"];
"1000260" [label="(Call,SyncHandle ())"];
"1000381" [label="(Literal,0)"];
"1000411" [label="(Call,rep.busIDLen)"];
"1000359" [label="(Block,)"];
"1000141" [label="(Call,XvMCCheckExtension (dpy, info, BadImplementation))"];
"1000375" [label="(Call,rep.nameLen == 0 ? 0 : rep.nameLen - 1)"];
"1000287" [label="(Call,realSize = 0)"];
"1000259" [label="(Identifier,dpy)"];
"1000333" [label="(Call,tmpBuf = Xmalloc(realSize))"];
"1000251" [label="(Call,(xReply *) &rep)"];
"1000403" [label="(Call,rep.busIDLen == 0 ? 0 : rep.busIDLen - 1)"];
"1000103" [label="(MethodParameterIn,Display *dpy)"];
"1000352" [label="(Call,*name && *busID && tmpBuf)"];
"1000111" [label="(Block,)"];
"1000115" [label="(Call,xvmc_find_display(dpy))"];
"1000317" [label="(Call,rep.length << 2)"];
"1000247" [label="(ControlStructure,if (!_XReply (dpy, (xReply *) &rep, 0, xFalse)))"];
"1000256" [label="(Identifier,xFalse)"];
"1000296" [label="(Call,rep.length < (INT_MAX >> 2))"];
"1000443" [label="(Call,SyncHandle ())"];
"1000409" [label="(Literal,0)"];
"1000144" [label="(Identifier,BadImplementation)"];
"1000137" [label="(Call,*busID = NULL)"];
"1000388" [label="(Call,strncpy(*busID,tmpBuf+rep.nameLen,rep.busIDLen))"];
"1000248" [label="(Call,!_XReply (dpy, (xReply *) &rep, 0, xFalse))"];
"1000397" [label="(Identifier,rep)"];
"1000146" [label="(Identifier,dpy)"];
"1000386" [label="(Literal,1)"];
"1000365" [label="(Call,*name)"];
"1000416" [label="(Call,XFree(tmpBuf))"];
"1000447" [label="(Call,UnlockDisplay (dpy))"];
"1000402" [label="(Identifier,busID)"];
"1000383" [label="(Call,rep.nameLen)"];
"1000258" [label="(Call,UnlockDisplay (dpy))"];
"1000389" [label="(Call,*busID)"];
"1000372" [label="(Call,(*name)[rep.nameLen == 0 ? 0 : rep.nameLen - 1])"];
"1000404" [label="(Call,rep.busIDLen == 0)"];
"1000113" [label="(Call,*info = xvmc_find_display(dpy))"];
"1000114" [label="(Identifier,info)"];
"1000347" [label="(Call,Xmalloc(rep.busIDLen))"];
"1000335" [label="(Call,Xmalloc(realSize))"];
"1000408" [label="(Literal,0)"];
"1000145" [label="(Call,LockDisplay (dpy))"];
"1000355" [label="(Call,*busID && tmpBuf)"];
"1000400" [label="(Call,(*busID)[rep.busIDLen == 0 ? 0 : rep.busIDLen - 1])"];
"1000442" [label="(Identifier,dpy)"];
"1000414" [label="(Literal,1)"];
"1000362" [label="(Identifier,tmpBuf)"];
"1000441" [label="(Call,UnlockDisplay (dpy))"];
"1000368" [label="(Call,rep.nameLen)"];
"1000255" [label="(Literal,0)"];
"1000405" [label="(Call,rep.busIDLen)"];
"1000145" -> "1000111"  [label="AST: "];
"1000145" -> "1000146"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000148" -> "1000145"  [label="CFG: "];
"1000145" -> "1000490"  [label="DDG: LockDisplay (dpy)"];
"1000141" -> "1000145"  [label="DDG: dpy"];
"1000103" -> "1000145"  [label="DDG: dpy"];
"1000145" -> "1000249"  [label="DDG: dpy"];
"1000141" -> "1000111"  [label="AST: "];
"1000141" -> "1000144"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000144" -> "1000141"  [label="AST: "];
"1000146" -> "1000141"  [label="CFG: "];
"1000141" -> "1000490"  [label="DDG: XvMCCheckExtension (dpy, info, BadImplementation)"];
"1000141" -> "1000490"  [label="DDG: BadImplementation"];
"1000141" -> "1000490"  [label="DDG: info"];
"1000115" -> "1000141"  [label="DDG: dpy"];
"1000103" -> "1000141"  [label="DDG: dpy"];
"1000113" -> "1000141"  [label="DDG: info"];
"1000141" -> "1000482"  [label="DDG: BadImplementation"];
"1000115" -> "1000113"  [label="AST: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000115" -> "1000113"  [label="DDG: dpy"];
"1000103" -> "1000115"  [label="DDG: dpy"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000490"  [label="DDG: dpy"];
"1000103" -> "1000249"  [label="DDG: dpy"];
"1000103" -> "1000258"  [label="DDG: dpy"];
"1000103" -> "1000360"  [label="DDG: dpy"];
"1000103" -> "1000436"  [label="DDG: dpy"];
"1000103" -> "1000441"  [label="DDG: dpy"];
"1000103" -> "1000447"  [label="DDG: dpy"];
"1000113" -> "1000111"  [label="AST: "];
"1000114" -> "1000113"  [label="AST: "];
"1000125" -> "1000113"  [label="CFG: "];
"1000113" -> "1000490"  [label="DDG: xvmc_find_display(dpy)"];
"1000249" -> "1000248"  [label="AST: "];
"1000249" -> "1000256"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000251" -> "1000249"  [label="AST: "];
"1000255" -> "1000249"  [label="AST: "];
"1000256" -> "1000249"  [label="AST: "];
"1000248" -> "1000249"  [label="CFG: "];
"1000249" -> "1000490"  [label="DDG: (xReply *) &rep"];
"1000249" -> "1000490"  [label="DDG: xFalse"];
"1000249" -> "1000248"  [label="DDG: dpy"];
"1000249" -> "1000248"  [label="DDG: (xReply *) &rep"];
"1000249" -> "1000248"  [label="DDG: 0"];
"1000249" -> "1000248"  [label="DDG: xFalse"];
"1000251" -> "1000249"  [label="DDG: &rep"];
"1000249" -> "1000258"  [label="DDG: dpy"];
"1000249" -> "1000360"  [label="DDG: dpy"];
"1000249" -> "1000436"  [label="DDG: dpy"];
"1000249" -> "1000447"  [label="DDG: dpy"];
"1000248" -> "1000247"  [label="AST: "];
"1000259" -> "1000248"  [label="CFG: "];
"1000277" -> "1000248"  [label="CFG: "];
"1000248" -> "1000490"  [label="DDG: !_XReply (dpy, (xReply *) &rep, 0, xFalse)"];
"1000248" -> "1000490"  [label="DDG: _XReply (dpy, (xReply *) &rep, 0, xFalse)"];
"1000258" -> "1000257"  [label="AST: "];
"1000258" -> "1000259"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000260" -> "1000258"  [label="CFG: "];
"1000258" -> "1000490"  [label="DDG: dpy"];
"1000258" -> "1000490"  [label="DDG: UnlockDisplay (dpy)"];
"1000360" -> "1000359"  [label="AST: "];
"1000360" -> "1000363"  [label="CFG: "];
"1000361" -> "1000360"  [label="AST: "];
"1000362" -> "1000360"  [label="AST: "];
"1000363" -> "1000360"  [label="AST: "];
"1000366" -> "1000360"  [label="CFG: "];
"1000360" -> "1000490"  [label="DDG: _XRead(dpy, tmpBuf, realSize)"];
"1000360" -> "1000490"  [label="DDG: realSize"];
"1000333" -> "1000360"  [label="DDG: tmpBuf"];
"1000291" -> "1000360"  [label="DDG: tmpBuf"];
"1000355" -> "1000360"  [label="DDG: tmpBuf"];
"1000335" -> "1000360"  [label="DDG: realSize"];
"1000323" -> "1000360"  [label="DDG: realSize"];
"1000287" -> "1000360"  [label="DDG: realSize"];
"1000360" -> "1000364"  [label="DDG: tmpBuf"];
"1000360" -> "1000447"  [label="DDG: dpy"];
"1000364" -> "1000359"  [label="AST: "];
"1000364" -> "1000368"  [label="CFG: "];
"1000365" -> "1000364"  [label="AST: "];
"1000367" -> "1000364"  [label="AST: "];
"1000368" -> "1000364"  [label="AST: "];
"1000374" -> "1000364"  [label="CFG: "];
"1000364" -> "1000490"  [label="DDG: *name"];
"1000364" -> "1000490"  [label="DDG: strncpy(*name,tmpBuf,rep.nameLen)"];
"1000352" -> "1000364"  [label="DDG: *name"];
"1000303" -> "1000364"  [label="DDG: rep.nameLen"];
"1000340" -> "1000364"  [label="DDG: rep.nameLen"];
"1000364" -> "1000376"  [label="DDG: rep.nameLen"];
"1000364" -> "1000388"  [label="DDG: tmpBuf"];
"1000364" -> "1000391"  [label="DDG: tmpBuf"];
"1000364" -> "1000416"  [label="DDG: tmpBuf"];
"1000376" -> "1000375"  [label="AST: "];
"1000376" -> "1000380"  [label="CFG: "];
"1000377" -> "1000376"  [label="AST: "];
"1000380" -> "1000376"  [label="AST: "];
"1000381" -> "1000376"  [label="CFG: "];
"1000384" -> "1000376"  [label="CFG: "];
"1000376" -> "1000382"  [label="DDG: rep.nameLen"];
"1000376" -> "1000388"  [label="DDG: rep.nameLen"];
"1000376" -> "1000391"  [label="DDG: rep.nameLen"];
"1000382" -> "1000375"  [label="AST: "];
"1000382" -> "1000386"  [label="CFG: "];
"1000383" -> "1000382"  [label="AST: "];
"1000386" -> "1000382"  [label="AST: "];
"1000375" -> "1000382"  [label="CFG: "];
"1000382" -> "1000375"  [label="DDG: rep.nameLen"];
"1000382" -> "1000375"  [label="DDG: 1"];
"1000382" -> "1000388"  [label="DDG: rep.nameLen"];
"1000382" -> "1000391"  [label="DDG: rep.nameLen"];
"1000375" -> "1000372"  [label="AST: "];
"1000375" -> "1000381"  [label="CFG: "];
"1000381" -> "1000375"  [label="AST: "];
"1000372" -> "1000375"  [label="CFG: "];
"1000375" -> "1000490"  [label="DDG: rep.nameLen == 0"];
"1000375" -> "1000490"  [label="DDG: rep.nameLen - 1"];
"1000388" -> "1000359"  [label="AST: "];
"1000388" -> "1000396"  [label="CFG: "];
"1000389" -> "1000388"  [label="AST: "];
"1000391" -> "1000388"  [label="AST: "];
"1000396" -> "1000388"  [label="AST: "];
"1000402" -> "1000388"  [label="CFG: "];
"1000388" -> "1000490"  [label="DDG: *busID"];
"1000388" -> "1000490"  [label="DDG: strncpy(*busID,tmpBuf+rep.nameLen,rep.busIDLen)"];
"1000388" -> "1000490"  [label="DDG: tmpBuf+rep.nameLen"];
"1000355" -> "1000388"  [label="DDG: *busID"];
"1000137" -> "1000388"  [label="DDG: *busID"];
"1000344" -> "1000388"  [label="DDG: *busID"];
"1000347" -> "1000388"  [label="DDG: rep.busIDLen"];
"1000388" -> "1000404"  [label="DDG: rep.busIDLen"];
"1000404" -> "1000403"  [label="AST: "];
"1000404" -> "1000408"  [label="CFG: "];
"1000405" -> "1000404"  [label="AST: "];
"1000408" -> "1000404"  [label="AST: "];
"1000409" -> "1000404"  [label="CFG: "];
"1000412" -> "1000404"  [label="CFG: "];
"1000404" -> "1000490"  [label="DDG: rep.busIDLen"];
"1000404" -> "1000410"  [label="DDG: rep.busIDLen"];
"1000410" -> "1000403"  [label="AST: "];
"1000410" -> "1000414"  [label="CFG: "];
"1000411" -> "1000410"  [label="AST: "];
"1000414" -> "1000410"  [label="AST: "];
"1000403" -> "1000410"  [label="CFG: "];
"1000410" -> "1000490"  [label="DDG: rep.busIDLen"];
"1000410" -> "1000403"  [label="DDG: rep.busIDLen"];
"1000410" -> "1000403"  [label="DDG: 1"];
"1000403" -> "1000400"  [label="AST: "];
"1000403" -> "1000409"  [label="CFG: "];
"1000409" -> "1000403"  [label="AST: "];
"1000400" -> "1000403"  [label="CFG: "];
"1000403" -> "1000490"  [label="DDG: rep.busIDLen == 0"];
"1000403" -> "1000490"  [label="DDG: rep.busIDLen - 1"];
"1000391" -> "1000393"  [label="CFG: "];
"1000392" -> "1000391"  [label="AST: "];
"1000393" -> "1000391"  [label="AST: "];
"1000397" -> "1000391"  [label="CFG: "];
"1000391" -> "1000490"  [label="DDG: rep.nameLen"];
"1000416" -> "1000359"  [label="AST: "];
"1000416" -> "1000417"  [label="CFG: "];
"1000417" -> "1000416"  [label="AST: "];
"1000448" -> "1000416"  [label="CFG: "];
"1000416" -> "1000490"  [label="DDG: XFree(tmpBuf)"];
"1000416" -> "1000490"  [label="DDG: tmpBuf"];
"1000447" -> "1000111"  [label="AST: "];
"1000447" -> "1000448"  [label="CFG: "];
"1000448" -> "1000447"  [label="AST: "];
"1000449" -> "1000447"  [label="CFG: "];
"1000447" -> "1000490"  [label="DDG: UnlockDisplay (dpy)"];
"1000447" -> "1000490"  [label="DDG: dpy"];
"1000436" -> "1000419"  [label="AST: "];
"1000436" -> "1000438"  [label="CFG: "];
"1000437" -> "1000436"  [label="AST: "];
"1000438" -> "1000436"  [label="AST: "];
"1000442" -> "1000436"  [label="CFG: "];
"1000436" -> "1000490"  [label="DDG: _XEatDataWords(dpy, rep.length)"];
"1000436" -> "1000490"  [label="DDG: rep.length"];
"1000317" -> "1000436"  [label="DDG: rep.length"];
"1000296" -> "1000436"  [label="DDG: rep.length"];
"1000436" -> "1000441"  [label="DDG: dpy"];
"1000441" -> "1000419"  [label="AST: "];
"1000441" -> "1000442"  [label="CFG: "];
"1000442" -> "1000441"  [label="AST: "];
"1000443" -> "1000441"  [label="CFG: "];
"1000441" -> "1000490"  [label="DDG: dpy"];
"1000441" -> "1000490"  [label="DDG: UnlockDisplay (dpy)"];
}
