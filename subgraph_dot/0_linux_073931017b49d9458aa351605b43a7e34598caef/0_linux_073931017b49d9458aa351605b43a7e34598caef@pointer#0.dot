digraph "0_linux_073931017b49d9458aa351605b43a7e34598caef@pointer" {
"1000163" [label="(Call,IS_ERR(acl))"];
"1000155" [label="(Call,acl = posix_acl_from_xattr(&init_user_ns, value, size))"];
"1000157" [label="(Call,posix_acl_from_xattr(&init_user_ns, value, size))"];
"1000109" [label="(MethodParameterIn,const void *value)"];
"1000110" [label="(MethodParameterIn,size_t size)"];
"1000166" [label="(Call,PTR_ERR(acl))"];
"1000165" [label="(Return,return PTR_ERR(acl);)"];
"1000174" [label="(Call,posix_acl_valid(inode->i_sb->s_user_ns, acl))"];
"1000172" [label="(Call,retval = posix_acl_valid(inode->i_sb->s_user_ns, acl))"];
"1000272" [label="(Return,return retval;)"];
"1000212" [label="(Call,!acl)"];
"1000263" [label="(Call,set_cached_acl(inode, handler->flags, acl))"];
"1000270" [label="(Call,posix_acl_release(acl))"];
"1000154" [label="(Block,)"];
"1000268" [label="(Identifier,acl)"];
"1000260" [label="(ControlStructure,if (!retval))"];
"1000269" [label="(JumpTarget,err_out:)"];
"1000274" [label="(MethodReturn,static int)"];
"1000185" [label="(Call,acl = NULL)"];
"1000261" [label="(Call,!retval)"];
"1000110" [label="(MethodParameterIn,size_t size)"];
"1000175" [label="(Call,inode->i_sb->s_user_ns)"];
"1000112" [label="(Block,)"];
"1000182" [label="(Identifier,retval)"];
"1000163" [label="(Call,IS_ERR(acl))"];
"1000109" [label="(MethodParameterIn,const void *value)"];
"1000155" [label="(Call,acl = posix_acl_from_xattr(&init_user_ns, value, size))"];
"1000216" [label="(Identifier,value)"];
"1000211" [label="(ControlStructure,if (!acl))"];
"1000271" [label="(Identifier,acl)"];
"1000174" [label="(Call,posix_acl_valid(inode->i_sb->s_user_ns, acl))"];
"1000218" [label="(Call,size = 0)"];
"1000170" [label="(Identifier,acl)"];
"1000166" [label="(Call,PTR_ERR(acl))"];
"1000270" [label="(Call,posix_acl_release(acl))"];
"1000171" [label="(Block,)"];
"1000239" [label="(Call,retval = acl ? -EINVAL : 0)"];
"1000162" [label="(ControlStructure,if (IS_ERR(acl)))"];
"1000252" [label="(Call,v9fs_xattr_set(dentry, handler->name, value, size, flags))"];
"1000265" [label="(Call,handler->flags)"];
"1000200" [label="(Call,posix_acl_update_mode(inode, &iattr.ia_mode, &acl))"];
"1000180" [label="(Identifier,acl)"];
"1000213" [label="(Identifier,acl)"];
"1000161" [label="(Identifier,size)"];
"1000272" [label="(Return,return retval;)"];
"1000107" [label="(MethodParameterIn,struct inode *inode)"];
"1000160" [label="(Identifier,value)"];
"1000164" [label="(Identifier,acl)"];
"1000173" [label="(Identifier,retval)"];
"1000264" [label="(Identifier,inode)"];
"1000212" [label="(Call,!acl)"];
"1000165" [label="(Return,return PTR_ERR(acl);)"];
"1000215" [label="(Call,value = NULL)"];
"1000198" [label="(Call,retval = posix_acl_update_mode(inode, &iattr.ia_mode, &acl))"];
"1000156" [label="(Identifier,acl)"];
"1000273" [label="(Identifier,retval)"];
"1000263" [label="(Call,set_cached_acl(inode, handler->flags, acl))"];
"1000158" [label="(Call,&init_user_ns)"];
"1000223" [label="(Identifier,iattr)"];
"1000147" [label="(Call,inode_owner_or_capable(inode))"];
"1000129" [label="(Call,v9fs_xattr_set(dentry, handler->name, value, size,\n\t\t\t\t      flags))"];
"1000167" [label="(Identifier,acl)"];
"1000157" [label="(Call,posix_acl_from_xattr(&init_user_ns, value, size))"];
"1000172" [label="(Call,retval = posix_acl_valid(inode->i_sb->s_user_ns, acl))"];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000164"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000167" -> "1000163"  [label="CFG: "];
"1000170" -> "1000163"  [label="CFG: "];
"1000163" -> "1000274"  [label="DDG: IS_ERR(acl)"];
"1000155" -> "1000163"  [label="DDG: acl"];
"1000163" -> "1000166"  [label="DDG: acl"];
"1000163" -> "1000174"  [label="DDG: acl"];
"1000163" -> "1000212"  [label="DDG: acl"];
"1000163" -> "1000263"  [label="DDG: acl"];
"1000163" -> "1000270"  [label="DDG: acl"];
"1000155" -> "1000154"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000157" -> "1000155"  [label="AST: "];
"1000164" -> "1000155"  [label="CFG: "];
"1000155" -> "1000274"  [label="DDG: posix_acl_from_xattr(&init_user_ns, value, size)"];
"1000157" -> "1000155"  [label="DDG: &init_user_ns"];
"1000157" -> "1000155"  [label="DDG: value"];
"1000157" -> "1000155"  [label="DDG: size"];
"1000157" -> "1000161"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000160" -> "1000157"  [label="AST: "];
"1000161" -> "1000157"  [label="AST: "];
"1000157" -> "1000274"  [label="DDG: value"];
"1000157" -> "1000274"  [label="DDG: &init_user_ns"];
"1000157" -> "1000274"  [label="DDG: size"];
"1000109" -> "1000157"  [label="DDG: value"];
"1000110" -> "1000157"  [label="DDG: size"];
"1000157" -> "1000252"  [label="DDG: value"];
"1000157" -> "1000252"  [label="DDG: size"];
"1000109" -> "1000104"  [label="AST: "];
"1000109" -> "1000274"  [label="DDG: value"];
"1000109" -> "1000129"  [label="DDG: value"];
"1000109" -> "1000215"  [label="DDG: value"];
"1000109" -> "1000252"  [label="DDG: value"];
"1000110" -> "1000104"  [label="AST: "];
"1000110" -> "1000274"  [label="DDG: size"];
"1000110" -> "1000129"  [label="DDG: size"];
"1000110" -> "1000218"  [label="DDG: size"];
"1000110" -> "1000252"  [label="DDG: size"];
"1000166" -> "1000165"  [label="AST: "];
"1000166" -> "1000167"  [label="CFG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000165" -> "1000166"  [label="CFG: "];
"1000166" -> "1000274"  [label="DDG: PTR_ERR(acl)"];
"1000166" -> "1000274"  [label="DDG: acl"];
"1000166" -> "1000165"  [label="DDG: PTR_ERR(acl)"];
"1000165" -> "1000162"  [label="AST: "];
"1000274" -> "1000165"  [label="CFG: "];
"1000165" -> "1000274"  [label="DDG: <RET>"];
"1000174" -> "1000172"  [label="AST: "];
"1000174" -> "1000180"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000180" -> "1000174"  [label="AST: "];
"1000172" -> "1000174"  [label="CFG: "];
"1000174" -> "1000274"  [label="DDG: inode->i_sb->s_user_ns"];
"1000174" -> "1000172"  [label="DDG: inode->i_sb->s_user_ns"];
"1000174" -> "1000172"  [label="DDG: acl"];
"1000174" -> "1000212"  [label="DDG: acl"];
"1000174" -> "1000263"  [label="DDG: acl"];
"1000174" -> "1000270"  [label="DDG: acl"];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000172"  [label="AST: "];
"1000182" -> "1000172"  [label="CFG: "];
"1000172" -> "1000274"  [label="DDG: retval"];
"1000172" -> "1000274"  [label="DDG: posix_acl_valid(inode->i_sb->s_user_ns, acl)"];
"1000172" -> "1000272"  [label="DDG: retval"];
"1000272" -> "1000112"  [label="AST: "];
"1000272" -> "1000273"  [label="CFG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000274" -> "1000272"  [label="CFG: "];
"1000272" -> "1000274"  [label="DDG: <RET>"];
"1000273" -> "1000272"  [label="DDG: retval"];
"1000239" -> "1000272"  [label="DDG: retval"];
"1000261" -> "1000272"  [label="DDG: retval"];
"1000198" -> "1000272"  [label="DDG: retval"];
"1000212" -> "1000211"  [label="AST: "];
"1000212" -> "1000213"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000216" -> "1000212"  [label="CFG: "];
"1000223" -> "1000212"  [label="CFG: "];
"1000212" -> "1000274"  [label="DDG: !acl"];
"1000185" -> "1000212"  [label="DDG: acl"];
"1000212" -> "1000263"  [label="DDG: acl"];
"1000212" -> "1000270"  [label="DDG: acl"];
"1000263" -> "1000260"  [label="AST: "];
"1000263" -> "1000268"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000263"  [label="AST: "];
"1000268" -> "1000263"  [label="AST: "];
"1000269" -> "1000263"  [label="CFG: "];
"1000263" -> "1000274"  [label="DDG: handler->flags"];
"1000263" -> "1000274"  [label="DDG: set_cached_acl(inode, handler->flags, acl)"];
"1000263" -> "1000274"  [label="DDG: inode"];
"1000200" -> "1000263"  [label="DDG: inode"];
"1000147" -> "1000263"  [label="DDG: inode"];
"1000107" -> "1000263"  [label="DDG: inode"];
"1000185" -> "1000263"  [label="DDG: acl"];
"1000263" -> "1000270"  [label="DDG: acl"];
"1000270" -> "1000112"  [label="AST: "];
"1000270" -> "1000271"  [label="CFG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000273" -> "1000270"  [label="CFG: "];
"1000270" -> "1000274"  [label="DDG: posix_acl_release(acl)"];
"1000270" -> "1000274"  [label="DDG: acl"];
"1000185" -> "1000270"  [label="DDG: acl"];
}
