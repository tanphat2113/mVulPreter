digraph "0_linux_073931017b49d9458aa351605b43a7e34598caef@pointer" {
"1000185" [label="(Call,acl = NULL)"];
"1000212" [label="(Call,!acl)"];
"1000263" [label="(Call,set_cached_acl(inode, handler->flags, acl))"];
"1000270" [label="(Call,posix_acl_release(acl))"];
"1000268" [label="(Identifier,acl)"];
"1000260" [label="(ControlStructure,if (!retval))"];
"1000269" [label="(JumpTarget,err_out:)"];
"1000190" [label="(Identifier,handler)"];
"1000274" [label="(MethodReturn,static int)"];
"1000185" [label="(Call,acl = NULL)"];
"1000112" [label="(Block,)"];
"1000163" [label="(Call,IS_ERR(acl))"];
"1000216" [label="(Identifier,value)"];
"1000211" [label="(ControlStructure,if (!acl))"];
"1000271" [label="(Identifier,acl)"];
"1000174" [label="(Call,posix_acl_valid(inode->i_sb->s_user_ns, acl))"];
"1000270" [label="(Call,posix_acl_release(acl))"];
"1000265" [label="(Call,handler->flags)"];
"1000187" [label="(Identifier,NULL)"];
"1000200" [label="(Call,posix_acl_update_mode(inode, &iattr.ia_mode, &acl))"];
"1000213" [label="(Identifier,acl)"];
"1000186" [label="(Identifier,acl)"];
"1000107" [label="(MethodParameterIn,struct inode *inode)"];
"1000264" [label="(Identifier,inode)"];
"1000212" [label="(Call,!acl)"];
"1000273" [label="(Identifier,retval)"];
"1000263" [label="(Call,set_cached_acl(inode, handler->flags, acl))"];
"1000184" [label="(ControlStructure,else)"];
"1000223" [label="(Identifier,iattr)"];
"1000147" [label="(Call,inode_owner_or_capable(inode))"];
"1000185" -> "1000184"  [label="AST: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="AST: "];
"1000190" -> "1000185"  [label="CFG: "];
"1000185" -> "1000274"  [label="DDG: NULL"];
"1000185" -> "1000212"  [label="DDG: acl"];
"1000185" -> "1000263"  [label="DDG: acl"];
"1000185" -> "1000270"  [label="DDG: acl"];
"1000212" -> "1000211"  [label="AST: "];
"1000212" -> "1000213"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000216" -> "1000212"  [label="CFG: "];
"1000223" -> "1000212"  [label="CFG: "];
"1000212" -> "1000274"  [label="DDG: !acl"];
"1000174" -> "1000212"  [label="DDG: acl"];
"1000163" -> "1000212"  [label="DDG: acl"];
"1000212" -> "1000263"  [label="DDG: acl"];
"1000212" -> "1000270"  [label="DDG: acl"];
"1000263" -> "1000260"  [label="AST: "];
"1000263" -> "1000268"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000263"  [label="AST: "];
"1000268" -> "1000263"  [label="AST: "];
"1000269" -> "1000263"  [label="CFG: "];
"1000263" -> "1000274"  [label="DDG: handler->flags"];
"1000263" -> "1000274"  [label="DDG: set_cached_acl(inode, handler->flags, acl)"];
"1000263" -> "1000274"  [label="DDG: inode"];
"1000200" -> "1000263"  [label="DDG: inode"];
"1000147" -> "1000263"  [label="DDG: inode"];
"1000107" -> "1000263"  [label="DDG: inode"];
"1000174" -> "1000263"  [label="DDG: acl"];
"1000163" -> "1000263"  [label="DDG: acl"];
"1000263" -> "1000270"  [label="DDG: acl"];
"1000270" -> "1000112"  [label="AST: "];
"1000270" -> "1000271"  [label="CFG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000273" -> "1000270"  [label="CFG: "];
"1000270" -> "1000274"  [label="DDG: posix_acl_release(acl)"];
"1000270" -> "1000274"  [label="DDG: acl"];
"1000174" -> "1000270"  [label="DDG: acl"];
"1000163" -> "1000270"  [label="DDG: acl"];
}
