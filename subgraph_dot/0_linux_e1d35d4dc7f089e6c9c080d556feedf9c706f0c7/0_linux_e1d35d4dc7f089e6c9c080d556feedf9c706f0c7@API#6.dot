digraph "0_linux_e1d35d4dc7f089e6c9c080d556feedf9c706f0c7@API" {
"1000310" [label="(Call,i_size_read(d_inode(path.dentry)))"];
"1000311" [label="(Call,d_inode(path.dentry))"];
"1000294" [label="(Call,path = shp->shm_file->f_path)"];
"1000308" [label="(Call,size = i_size_read(d_inode(path.dentry)))"];
"1000446" [label="(Call,addr + size < addr)"];
"1000453" [label="(Call,find_vma_intersection(current->mm, addr, addr + size))"];
"1000464" [label="(Call,do_mmap_pgoff(file, addr, size, prot, flags, 0, &populate, NULL))"];
"1000462" [label="(Call,addr = do_mmap_pgoff(file, addr, size, prot, flags, 0, &populate, NULL))"];
"1000474" [label="(Call,*raddr = addr)"];
"1000482" [label="(Call,IS_ERR_VALUE(addr))"];
"1000486" [label="(Call,(long)addr)"];
"1000484" [label="(Call,err = (long)addr)"];
"1000537" [label="(Return,return err;)"];
"1000499" [label="(Call,mm_populate(addr, populate))"];
"1000503" [label="(Call,fput(file))"];
"1000458" [label="(Call,addr + size)"];
"1000447" [label="(Call,addr + size)"];
"1000294" [label="(Call,path = shp->shm_file->f_path)"];
"1000465" [label="(Identifier,file)"];
"1000464" [label="(Call,do_mmap_pgoff(file, addr, size, prot, flags, 0, &populate, NULL))"];
"1000452" [label="(ControlStructure,if (find_vma_intersection(current->mm, addr, addr + size)))"];
"1000455" [label="(Identifier,current)"];
"1000477" [label="(Identifier,addr)"];
"1000488" [label="(Identifier,addr)"];
"1000461" [label="(ControlStructure,goto invalid;)"];
"1000321" [label="(Call,err = -ENOMEM)"];
"1000476" [label="(Identifier,raddr)"];
"1000499" [label="(Call,mm_populate(addr, populate))"];
"1000544" [label="(MethodReturn,long)"];
"1000454" [label="(Call,current->mm)"];
"1000469" [label="(Identifier,flags)"];
"1000463" [label="(Identifier,addr)"];
"1000123" [label="(Call,populate = 0)"];
"1000309" [label="(Identifier,size)"];
"1000295" [label="(Identifier,path)"];
"1000296" [label="(Call,shp->shm_file->f_path)"];
"1000458" [label="(Call,addr + size)"];
"1000484" [label="(Call,err = (long)addr)"];
"1000447" [label="(Call,addr + size)"];
"1000503" [label="(Call,fput(file))"];
"1000537" [label="(Return,return err;)"];
"1000453" [label="(Call,find_vma_intersection(current->mm, addr, addr + size))"];
"1000505" [label="(JumpTarget,out_nattch:)"];
"1000489" [label="(JumpTarget,invalid:)"];
"1000441" [label="(Call,err = -EINVAL)"];
"1000485" [label="(Identifier,err)"];
"1000311" [label="(Call,d_inode(path.dentry))"];
"1000460" [label="(Identifier,size)"];
"1000475" [label="(Call,*raddr)"];
"1000457" [label="(Identifier,addr)"];
"1000410" [label="(Call,err = security_mmap_file(file, prot, flags))"];
"1000500" [label="(Identifier,addr)"];
"1000468" [label="(Identifier,prot)"];
"1000501" [label="(Identifier,populate)"];
"1000428" [label="(Call,err = -EINTR)"];
"1000318" [label="(Identifier,shp)"];
"1000466" [label="(Identifier,addr)"];
"1000478" [label="(Call,err = 0)"];
"1000473" [label="(Identifier,NULL)"];
"1000446" [label="(Call,addr + size < addr)"];
"1000483" [label="(Identifier,addr)"];
"1000482" [label="(Call,IS_ERR_VALUE(addr))"];
"1000497" [label="(ControlStructure,if (populate))"];
"1000479" [label="(Identifier,err)"];
"1000502" [label="(JumpTarget,out_fput:)"];
"1000312" [label="(Call,path.dentry)"];
"1000450" [label="(Identifier,addr)"];
"1000538" [label="(Identifier,err)"];
"1000109" [label="(Block,)"];
"1000303" [label="(Identifier,path)"];
"1000445" [label="(ControlStructure,if (addr + size < addr))"];
"1000412" [label="(Call,security_mmap_file(file, prot, flags))"];
"1000504" [label="(Identifier,file)"];
"1000434" [label="(Call,addr && !(shmflg & SHM_REMAP))"];
"1000467" [label="(Identifier,size)"];
"1000308" [label="(Call,size = i_size_read(d_inode(path.dentry)))"];
"1000470" [label="(Literal,0)"];
"1000355" [label="(Call,err = PTR_ERR(file))"];
"1000448" [label="(Identifier,addr)"];
"1000474" [label="(Call,*raddr = addr)"];
"1000462" [label="(Call,addr = do_mmap_pgoff(file, addr, size, prot, flags, 0, &populate, NULL))"];
"1000451" [label="(ControlStructure,goto invalid;)"];
"1000471" [label="(Call,&populate)"];
"1000481" [label="(ControlStructure,if (IS_ERR_VALUE(addr)))"];
"1000486" [label="(Call,(long)addr)"];
"1000449" [label="(Identifier,size)"];
"1000459" [label="(Identifier,addr)"];
"1000310" [label="(Call,i_size_read(d_inode(path.dentry)))"];
"1000310" -> "1000308"  [label="AST: "];
"1000310" -> "1000311"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000308" -> "1000310"  [label="CFG: "];
"1000310" -> "1000544"  [label="DDG: d_inode(path.dentry)"];
"1000310" -> "1000308"  [label="DDG: d_inode(path.dentry)"];
"1000311" -> "1000310"  [label="DDG: path.dentry"];
"1000311" -> "1000312"  [label="CFG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000311" -> "1000544"  [label="DDG: path.dentry"];
"1000294" -> "1000311"  [label="DDG: path"];
"1000294" -> "1000109"  [label="AST: "];
"1000294" -> "1000296"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000296" -> "1000294"  [label="AST: "];
"1000303" -> "1000294"  [label="CFG: "];
"1000294" -> "1000544"  [label="DDG: shp->shm_file->f_path"];
"1000294" -> "1000544"  [label="DDG: path"];
"1000308" -> "1000109"  [label="AST: "];
"1000309" -> "1000308"  [label="AST: "];
"1000318" -> "1000308"  [label="CFG: "];
"1000308" -> "1000544"  [label="DDG: i_size_read(d_inode(path.dentry))"];
"1000308" -> "1000544"  [label="DDG: size"];
"1000308" -> "1000446"  [label="DDG: size"];
"1000308" -> "1000447"  [label="DDG: size"];
"1000308" -> "1000453"  [label="DDG: size"];
"1000308" -> "1000458"  [label="DDG: size"];
"1000308" -> "1000464"  [label="DDG: size"];
"1000446" -> "1000445"  [label="AST: "];
"1000446" -> "1000450"  [label="CFG: "];
"1000447" -> "1000446"  [label="AST: "];
"1000450" -> "1000446"  [label="AST: "];
"1000451" -> "1000446"  [label="CFG: "];
"1000455" -> "1000446"  [label="CFG: "];
"1000446" -> "1000544"  [label="DDG: addr"];
"1000446" -> "1000544"  [label="DDG: addr + size < addr"];
"1000446" -> "1000544"  [label="DDG: addr + size"];
"1000434" -> "1000446"  [label="DDG: addr"];
"1000446" -> "1000453"  [label="DDG: addr"];
"1000446" -> "1000458"  [label="DDG: addr"];
"1000446" -> "1000499"  [label="DDG: addr"];
"1000453" -> "1000452"  [label="AST: "];
"1000453" -> "1000458"  [label="CFG: "];
"1000454" -> "1000453"  [label="AST: "];
"1000457" -> "1000453"  [label="AST: "];
"1000458" -> "1000453"  [label="AST: "];
"1000461" -> "1000453"  [label="CFG: "];
"1000463" -> "1000453"  [label="CFG: "];
"1000453" -> "1000544"  [label="DDG: addr"];
"1000453" -> "1000544"  [label="DDG: find_vma_intersection(current->mm, addr, addr + size)"];
"1000453" -> "1000544"  [label="DDG: addr + size"];
"1000453" -> "1000544"  [label="DDG: current->mm"];
"1000453" -> "1000464"  [label="DDG: addr"];
"1000453" -> "1000499"  [label="DDG: addr"];
"1000464" -> "1000462"  [label="AST: "];
"1000464" -> "1000473"  [label="CFG: "];
"1000465" -> "1000464"  [label="AST: "];
"1000466" -> "1000464"  [label="AST: "];
"1000467" -> "1000464"  [label="AST: "];
"1000468" -> "1000464"  [label="AST: "];
"1000469" -> "1000464"  [label="AST: "];
"1000470" -> "1000464"  [label="AST: "];
"1000471" -> "1000464"  [label="AST: "];
"1000473" -> "1000464"  [label="AST: "];
"1000462" -> "1000464"  [label="CFG: "];
"1000464" -> "1000544"  [label="DDG: prot"];
"1000464" -> "1000544"  [label="DDG: size"];
"1000464" -> "1000544"  [label="DDG: flags"];
"1000464" -> "1000544"  [label="DDG: NULL"];
"1000464" -> "1000544"  [label="DDG: &populate"];
"1000464" -> "1000462"  [label="DDG: &populate"];
"1000464" -> "1000462"  [label="DDG: prot"];
"1000464" -> "1000462"  [label="DDG: flags"];
"1000464" -> "1000462"  [label="DDG: NULL"];
"1000464" -> "1000462"  [label="DDG: 0"];
"1000464" -> "1000462"  [label="DDG: file"];
"1000464" -> "1000462"  [label="DDG: addr"];
"1000464" -> "1000462"  [label="DDG: size"];
"1000412" -> "1000464"  [label="DDG: file"];
"1000412" -> "1000464"  [label="DDG: prot"];
"1000412" -> "1000464"  [label="DDG: flags"];
"1000434" -> "1000464"  [label="DDG: addr"];
"1000464" -> "1000503"  [label="DDG: file"];
"1000462" -> "1000109"  [label="AST: "];
"1000463" -> "1000462"  [label="AST: "];
"1000476" -> "1000462"  [label="CFG: "];
"1000462" -> "1000544"  [label="DDG: do_mmap_pgoff(file, addr, size, prot, flags, 0, &populate, NULL)"];
"1000462" -> "1000474"  [label="DDG: addr"];
"1000462" -> "1000482"  [label="DDG: addr"];
"1000474" -> "1000109"  [label="AST: "];
"1000474" -> "1000477"  [label="CFG: "];
"1000475" -> "1000474"  [label="AST: "];
"1000477" -> "1000474"  [label="AST: "];
"1000479" -> "1000474"  [label="CFG: "];
"1000474" -> "1000544"  [label="DDG: *raddr"];
"1000482" -> "1000481"  [label="AST: "];
"1000482" -> "1000483"  [label="CFG: "];
"1000483" -> "1000482"  [label="AST: "];
"1000485" -> "1000482"  [label="CFG: "];
"1000489" -> "1000482"  [label="CFG: "];
"1000482" -> "1000544"  [label="DDG: addr"];
"1000482" -> "1000544"  [label="DDG: IS_ERR_VALUE(addr)"];
"1000482" -> "1000486"  [label="DDG: addr"];
"1000482" -> "1000499"  [label="DDG: addr"];
"1000486" -> "1000484"  [label="AST: "];
"1000486" -> "1000488"  [label="CFG: "];
"1000487" -> "1000486"  [label="AST: "];
"1000488" -> "1000486"  [label="AST: "];
"1000484" -> "1000486"  [label="CFG: "];
"1000486" -> "1000544"  [label="DDG: addr"];
"1000486" -> "1000484"  [label="DDG: addr"];
"1000486" -> "1000499"  [label="DDG: addr"];
"1000484" -> "1000481"  [label="AST: "];
"1000485" -> "1000484"  [label="AST: "];
"1000489" -> "1000484"  [label="CFG: "];
"1000484" -> "1000544"  [label="DDG: (long)addr"];
"1000484" -> "1000544"  [label="DDG: err"];
"1000484" -> "1000537"  [label="DDG: err"];
"1000537" -> "1000109"  [label="AST: "];
"1000537" -> "1000538"  [label="CFG: "];
"1000538" -> "1000537"  [label="AST: "];
"1000544" -> "1000537"  [label="CFG: "];
"1000537" -> "1000544"  [label="DDG: <RET>"];
"1000538" -> "1000537"  [label="DDG: err"];
"1000410" -> "1000537"  [label="DDG: err"];
"1000478" -> "1000537"  [label="DDG: err"];
"1000321" -> "1000537"  [label="DDG: err"];
"1000428" -> "1000537"  [label="DDG: err"];
"1000355" -> "1000537"  [label="DDG: err"];
"1000441" -> "1000537"  [label="DDG: err"];
"1000499" -> "1000497"  [label="AST: "];
"1000499" -> "1000501"  [label="CFG: "];
"1000500" -> "1000499"  [label="AST: "];
"1000501" -> "1000499"  [label="AST: "];
"1000502" -> "1000499"  [label="CFG: "];
"1000499" -> "1000544"  [label="DDG: mm_populate(addr, populate)"];
"1000499" -> "1000544"  [label="DDG: addr"];
"1000499" -> "1000544"  [label="DDG: populate"];
"1000123" -> "1000499"  [label="DDG: populate"];
"1000503" -> "1000109"  [label="AST: "];
"1000503" -> "1000504"  [label="CFG: "];
"1000504" -> "1000503"  [label="AST: "];
"1000505" -> "1000503"  [label="CFG: "];
"1000503" -> "1000544"  [label="DDG: fput(file)"];
"1000503" -> "1000544"  [label="DDG: file"];
"1000412" -> "1000503"  [label="DDG: file"];
"1000458" -> "1000460"  [label="CFG: "];
"1000459" -> "1000458"  [label="AST: "];
"1000460" -> "1000458"  [label="AST: "];
"1000458" -> "1000544"  [label="DDG: size"];
"1000447" -> "1000449"  [label="CFG: "];
"1000448" -> "1000447"  [label="AST: "];
"1000449" -> "1000447"  [label="AST: "];
"1000450" -> "1000447"  [label="CFG: "];
"1000447" -> "1000544"  [label="DDG: size"];
"1000434" -> "1000447"  [label="DDG: addr"];
}
