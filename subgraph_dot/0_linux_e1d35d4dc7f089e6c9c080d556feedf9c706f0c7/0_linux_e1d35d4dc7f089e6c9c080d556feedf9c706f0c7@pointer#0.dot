digraph "0_linux_e1d35d4dc7f089e6c9c080d556feedf9c706f0c7@pointer" {
"1000464" [label="(Call,do_mmap_pgoff(file, addr, size, prot, flags, 0, &populate, NULL))"];
"1000412" [label="(Call,security_mmap_file(file, prot, flags))"];
"1000360" [label="(Call,IS_ERR(file))"];
"1000357" [label="(Call,PTR_ERR(file))"];
"1000340" [label="(Call,file = alloc_file(&path, f_mode,\n\t\t\t  is_file_hugepages(shp->shm_file) ?\n\t\t\t\t&shm_file_operations_huge :\n\t\t\t\t&shm_file_operations))"];
"1000342" [label="(Call,alloc_file(&path, f_mode,\n\t\t\t  is_file_hugepages(shp->shm_file) ?\n\t\t\t\t&shm_file_operations_huge :\n\t\t\t\t&shm_file_operations))"];
"1000301" [label="(Call,path_get(&path))"];
"1000211" [label="(Call,f_mode = FMODE_READ | FMODE_WRITE)"];
"1000213" [label="(Call,FMODE_READ | FMODE_WRITE)"];
"1000196" [label="(Call,f_mode = FMODE_READ)"];
"1000190" [label="(Call,prot = PROT_READ)"];
"1000221" [label="(Call,prot |= PROT_EXEC)"];
"1000201" [label="(Call,prot = PROT_READ | PROT_WRITE)"];
"1000203" [label="(Call,PROT_READ | PROT_WRITE)"];
"1000170" [label="(Call,flags = MAP_SHARED | MAP_FIXED)"];
"1000172" [label="(Call,MAP_SHARED | MAP_FIXED)"];
"1000182" [label="(Call,flags = MAP_SHARED)"];
"1000453" [label="(Call,find_vma_intersection(current->mm, addr, addr + size))"];
"1000446" [label="(Call,addr + size < addr)"];
"1000434" [label="(Call,addr && !(shmflg & SHM_REMAP))"];
"1000158" [label="(Call,addr &= ~(shmlba - 1))"];
"1000144" [label="(Call,addr & (shmlba - 1))"];
"1000137" [label="(Call,addr = (ulong)shmaddr)"];
"1000139" [label="(Call,(ulong)shmaddr)"];
"1000105" [label="(MethodParameterIn,char __user *shmaddr)"];
"1000146" [label="(Call,shmlba - 1)"];
"1000108" [label="(MethodParameterIn,unsigned long shmlba)"];
"1000155" [label="(Call,addr >= shmlba)"];
"1000160" [label="(Call,~(shmlba - 1))"];
"1000161" [label="(Call,shmlba - 1)"];
"1000166" [label="(Call,addr & ~PAGE_MASK)"];
"1000436" [label="(Call,!(shmflg & SHM_REMAP))"];
"1000437" [label="(Call,shmflg & SHM_REMAP)"];
"1000264" [label="(Call,security_shm_shmat(shp, shmaddr, shmflg))"];
"1000241" [label="(Call,IS_ERR(shp))"];
"1000235" [label="(Call,shp = shm_obtain_object_check(ns, shmid))"];
"1000237" [label="(Call,shm_obtain_object_check(ns, shmid))"];
"1000227" [label="(Call,ns = current->nsproxy->ipc_ns)"];
"1000131" [label="(Call,shmid < 0)"];
"1000104" [label="(MethodParameterIn,int shmid)"];
"1000217" [label="(Call,shmflg & SHM_EXEC)"];
"1000186" [label="(Call,shmflg & SHM_RDONLY)"];
"1000178" [label="(Call,shmflg & SHM_REMAP)"];
"1000106" [label="(MethodParameterIn,int shmflg)"];
"1000152" [label="(Call,shmflg & SHM_RND)"];
"1000308" [label="(Call,size = i_size_read(d_inode(path.dentry)))"];
"1000310" [label="(Call,i_size_read(d_inode(path.dentry)))"];
"1000311" [label="(Call,d_inode(path.dentry))"];
"1000294" [label="(Call,path = shp->shm_file->f_path)"];
"1000462" [label="(Call,addr = do_mmap_pgoff(file, addr, size, prot, flags, 0, &populate, NULL))"];
"1000474" [label="(Call,*raddr = addr)"];
"1000482" [label="(Call,IS_ERR_VALUE(addr))"];
"1000486" [label="(Call,(long)addr)"];
"1000484" [label="(Call,err = (long)addr)"];
"1000537" [label="(Return,return err;)"];
"1000499" [label="(Call,mm_populate(addr, populate))"];
"1000503" [label="(Call,fput(file))"];
"1000227" [label="(Call,ns = current->nsproxy->ipc_ns)"];
"1000204" [label="(Identifier,PROT_READ)"];
"1000133" [label="(Literal,0)"];
"1000465" [label="(Identifier,file)"];
"1000177" [label="(ControlStructure,if ((shmflg & SHM_REMAP)))"];
"1000241" [label="(Call,IS_ERR(shp))"];
"1000438" [label="(Identifier,shmflg)"];
"1000359" [label="(ControlStructure,if (IS_ERR(file)))"];
"1000137" [label="(Call,addr = (ulong)shmaddr)"];
"1000544" [label="(MethodReturn,long)"];
"1000134" [label="(ControlStructure,goto out;)"];
"1000463" [label="(Identifier,addr)"];
"1000203" [label="(Call,PROT_READ | PROT_WRITE)"];
"1000264" [label="(Call,security_shm_shmat(shp, shmaddr, shmflg))"];
"1000458" [label="(Call,addr + size)"];
"1000166" [label="(Call,addr & ~PAGE_MASK)"];
"1000484" [label="(Call,err = (long)addr)"];
"1000503" [label="(Call,fput(file))"];
"1000357" [label="(Call,PTR_ERR(file))"];
"1000187" [label="(Identifier,shmflg)"];
"1000250" [label="(Identifier,err)"];
"1000442" [label="(Identifier,err)"];
"1000183" [label="(Identifier,flags)"];
"1000364" [label="(Identifier,sfd)"];
"1000201" [label="(Call,prot = PROT_READ | PROT_WRITE)"];
"1000302" [label="(Call,&path)"];
"1000428" [label="(Call,err = -EINTR)"];
"1000213" [label="(Call,FMODE_READ | FMODE_WRITE)"];
"1000301" [label="(Call,path_get(&path))"];
"1000473" [label="(Identifier,NULL)"];
"1000139" [label="(Call,(ulong)shmaddr)"];
"1000371" [label="(Identifier,file)"];
"1000497" [label="(ControlStructure,if (populate))"];
"1000180" [label="(Identifier,SHM_REMAP)"];
"1000312" [label="(Call,path.dentry)"];
"1000450" [label="(Identifier,addr)"];
"1000109" [label="(Block,)"];
"1000132" [label="(Identifier,shmid)"];
"1000434" [label="(Call,addr && !(shmflg & SHM_REMAP))"];
"1000225" [label="(Identifier,acc_mode)"];
"1000308" [label="(Call,size = i_size_read(d_inode(path.dentry)))"];
"1000470" [label="(Literal,0)"];
"1000355" [label="(Call,err = PTR_ERR(file))"];
"1000172" [label="(Call,MAP_SHARED | MAP_FIXED)"];
"1000246" [label="(Call,PTR_ERR(shp))"];
"1000179" [label="(Identifier,shmflg)"];
"1000188" [label="(Identifier,SHM_RDONLY)"];
"1000181" [label="(ControlStructure,goto out;)"];
"1000222" [label="(Identifier,prot)"];
"1000131" [label="(Call,shmid < 0)"];
"1000486" [label="(Call,(long)addr)"];
"1000185" [label="(ControlStructure,if (shmflg & SHM_RDONLY))"];
"1000165" [label="(ControlStructure,if (addr & ~PAGE_MASK))"];
"1000361" [label="(Identifier,file)"];
"1000173" [label="(Identifier,MAP_SHARED)"];
"1000194" [label="(Identifier,acc_mode)"];
"1000336" [label="(Call,path_put(&path))"];
"1000265" [label="(Identifier,shp)"];
"1000168" [label="(Identifier,~PAGE_MASK)"];
"1000123" [label="(Call,populate = 0)"];
"1000152" [label="(Call,shmflg & SHM_RND)"];
"1000212" [label="(Identifier,f_mode)"];
"1000433" [label="(ControlStructure,if (addr && !(shmflg & SHM_REMAP)))"];
"1000159" [label="(Identifier,addr)"];
"1000198" [label="(Identifier,FMODE_READ)"];
"1000191" [label="(Identifier,prot)"];
"1000105" [label="(MethodParameterIn,char __user *shmaddr)"];
"1000162" [label="(Identifier,shmlba)"];
"1000439" [label="(Identifier,SHM_REMAP)"];
"1000537" [label="(Return,return err;)"];
"1000505" [label="(JumpTarget,out_nattch:)"];
"1000217" [label="(Call,shmflg & SHM_EXEC)"];
"1000485" [label="(Identifier,err)"];
"1000138" [label="(Identifier,addr)"];
"1000157" [label="(Identifier,shmlba)"];
"1000415" [label="(Identifier,flags)"];
"1000341" [label="(Identifier,file)"];
"1000410" [label="(Call,err = security_mmap_file(file, prot, flags))"];
"1000144" [label="(Call,addr & (shmlba - 1))"];
"1000229" [label="(Call,current->nsproxy->ipc_ns)"];
"1000345" [label="(Identifier,f_mode)"];
"1000500" [label="(Identifier,addr)"];
"1000189" [label="(Block,)"];
"1000235" [label="(Call,shp = shm_obtain_object_check(ns, shmid))"];
"1000306" [label="(Identifier,shp)"];
"1000446" [label="(Call,addr + size < addr)"];
"1000242" [label="(Identifier,shp)"];
"1000245" [label="(Identifier,err)"];
"1000437" [label="(Call,shmflg & SHM_REMAP)"];
"1000148" [label="(Literal,1)"];
"1000228" [label="(Identifier,ns)"];
"1000153" [label="(Identifier,shmflg)"];
"1000303" [label="(Identifier,path)"];
"1000412" [label="(Call,security_mmap_file(file, prot, flags))"];
"1000154" [label="(Identifier,SHM_RND)"];
"1000216" [label="(ControlStructure,if (shmflg & SHM_EXEC))"];
"1000474" [label="(Call,*raddr = addr)"];
"1000451" [label="(ControlStructure,goto invalid;)"];
"1000104" [label="(MethodParameterIn,int shmid)"];
"1000151" [label="(Call,(shmflg & SHM_RND) && addr >= shmlba)"];
"1000169" [label="(ControlStructure,goto out;)"];
"1000143" [label="(ControlStructure,if (addr & (shmlba - 1)))"];
"1000190" [label="(Call,prot = PROT_READ)"];
"1000161" [label="(Call,shmlba - 1)"];
"1000452" [label="(ControlStructure,if (find_vma_intersection(current->mm, addr, addr + size)))"];
"1000267" [label="(Identifier,shmflg)"];
"1000455" [label="(Identifier,current)"];
"1000254" [label="(Call,ipcperms(ns, &shp->shm_perm, acc_mode))"];
"1000488" [label="(Identifier,addr)"];
"1000461" [label="(ControlStructure,goto invalid;)"];
"1000476" [label="(Identifier,raddr)"];
"1000499" [label="(Call,mm_populate(addr, populate))"];
"1000141" [label="(Identifier,shmaddr)"];
"1000200" [label="(Block,)"];
"1000186" [label="(Call,shmflg & SHM_RDONLY)"];
"1000184" [label="(Identifier,MAP_SHARED)"];
"1000309" [label="(Identifier,size)"];
"1000435" [label="(Identifier,addr)"];
"1000343" [label="(Call,&path)"];
"1000342" [label="(Call,alloc_file(&path, f_mode,\n\t\t\t  is_file_hugepages(shp->shm_file) ?\n\t\t\t\t&shm_file_operations_huge :\n\t\t\t\t&shm_file_operations))"];
"1000155" [label="(Call,addr >= shmlba)"];
"1000447" [label="(Call,addr + size)"];
"1000142" [label="(Block,)"];
"1000266" [label="(Identifier,shmaddr)"];
"1000211" [label="(Call,f_mode = FMODE_READ | FMODE_WRITE)"];
"1000240" [label="(ControlStructure,if (IS_ERR(shp)))"];
"1000234" [label="(Call,rcu_read_lock())"];
"1000489" [label="(JumpTarget,invalid:)"];
"1000441" [label="(Call,err = -EINVAL)"];
"1000108" [label="(MethodParameterIn,unsigned long shmlba)"];
"1000197" [label="(Identifier,f_mode)"];
"1000475" [label="(Call,*raddr)"];
"1000468" [label="(Identifier,prot)"];
"1000318" [label="(Identifier,shp)"];
"1000176" [label="(Block,)"];
"1000478" [label="(Call,err = 0)"];
"1000170" [label="(Call,flags = MAP_SHARED | MAP_FIXED)"];
"1000146" [label="(Call,shmlba - 1)"];
"1000483" [label="(Identifier,addr)"];
"1000346" [label="(Call,is_file_hugepages(shp->shm_file) ?\n\t\t\t\t&shm_file_operations_huge :\n\t\t\t\t&shm_file_operations)"];
"1000196" [label="(Call,f_mode = FMODE_READ)"];
"1000158" [label="(Call,addr &= ~(shmlba - 1))"];
"1000502" [label="(JumpTarget,out_fput:)"];
"1000479" [label="(Identifier,err)"];
"1000163" [label="(Literal,1)"];
"1000238" [label="(Identifier,ns)"];
"1000538" [label="(Identifier,err)"];
"1000223" [label="(Identifier,PROT_EXEC)"];
"1000445" [label="(ControlStructure,if (addr + size < addr))"];
"1000365" [label="(Call,path_put(&path))"];
"1000467" [label="(Identifier,size)"];
"1000147" [label="(Identifier,shmlba)"];
"1000471" [label="(Call,&populate)"];
"1000207" [label="(Identifier,acc_mode)"];
"1000262" [label="(Call,err = security_shm_shmat(shp, shmaddr, shmflg))"];
"1000414" [label="(Identifier,prot)"];
"1000294" [label="(Call,path = shp->shm_file->f_path)"];
"1000464" [label="(Call,do_mmap_pgoff(file, addr, size, prot, flags, 0, &populate, NULL))"];
"1000192" [label="(Identifier,PROT_READ)"];
"1000156" [label="(Identifier,addr)"];
"1000239" [label="(Identifier,shmid)"];
"1000477" [label="(Identifier,addr)"];
"1000321" [label="(Call,err = -ENOMEM)"];
"1000220" [label="(Block,)"];
"1000150" [label="(ControlStructure,if ((shmflg & SHM_RND) && addr >= shmlba))"];
"1000469" [label="(Identifier,flags)"];
"1000218" [label="(Identifier,shmflg)"];
"1000454" [label="(Call,current->mm)"];
"1000436" [label="(Call,!(shmflg & SHM_REMAP))"];
"1000295" [label="(Identifier,path)"];
"1000296" [label="(Call,shp->shm_file->f_path)"];
"1000182" [label="(Call,flags = MAP_SHARED)"];
"1000174" [label="(Identifier,MAP_FIXED)"];
"1000514" [label="(Call,shm_lock(ns, shmid))"];
"1000453" [label="(Call,find_vma_intersection(current->mm, addr, addr + size))"];
"1000219" [label="(Identifier,SHM_EXEC)"];
"1000145" [label="(Identifier,addr)"];
"1000171" [label="(Identifier,flags)"];
"1000214" [label="(Identifier,FMODE_READ)"];
"1000311" [label="(Call,d_inode(path.dentry))"];
"1000457" [label="(Identifier,addr)"];
"1000178" [label="(Call,shmflg & SHM_REMAP)"];
"1000130" [label="(ControlStructure,if (shmid < 0))"];
"1000205" [label="(Identifier,PROT_WRITE)"];
"1000236" [label="(Identifier,shp)"];
"1000501" [label="(Identifier,populate)"];
"1000466" [label="(Identifier,addr)"];
"1000413" [label="(Identifier,file)"];
"1000106" [label="(MethodParameterIn,int shmflg)"];
"1000356" [label="(Identifier,err)"];
"1000358" [label="(Identifier,file)"];
"1000221" [label="(Call,prot |= PROT_EXEC)"];
"1000215" [label="(Identifier,FMODE_WRITE)"];
"1000237" [label="(Call,shm_obtain_object_check(ns, shmid))"];
"1000482" [label="(Call,IS_ERR_VALUE(addr))"];
"1000340" [label="(Call,file = alloc_file(&path, f_mode,\n\t\t\t  is_file_hugepages(shp->shm_file) ?\n\t\t\t\t&shm_file_operations_huge :\n\t\t\t\t&shm_file_operations))"];
"1000504" [label="(Identifier,file)"];
"1000360" [label="(Call,IS_ERR(file))"];
"1000160" [label="(Call,~(shmlba - 1))"];
"1000462" [label="(Call,addr = do_mmap_pgoff(file, addr, size, prot, flags, 0, &populate, NULL))"];
"1000202" [label="(Identifier,prot)"];
"1000481" [label="(ControlStructure,if (IS_ERR_VALUE(addr)))"];
"1000167" [label="(Identifier,addr)"];
"1000310" [label="(Call,i_size_read(d_inode(path.dentry)))"];
"1000136" [label="(ControlStructure,if ((addr = (ulong)shmaddr)))"];
"1000464" -> "1000462"  [label="AST: "];
"1000464" -> "1000473"  [label="CFG: "];
"1000465" -> "1000464"  [label="AST: "];
"1000466" -> "1000464"  [label="AST: "];
"1000467" -> "1000464"  [label="AST: "];
"1000468" -> "1000464"  [label="AST: "];
"1000469" -> "1000464"  [label="AST: "];
"1000470" -> "1000464"  [label="AST: "];
"1000471" -> "1000464"  [label="AST: "];
"1000473" -> "1000464"  [label="AST: "];
"1000462" -> "1000464"  [label="CFG: "];
"1000464" -> "1000544"  [label="DDG: prot"];
"1000464" -> "1000544"  [label="DDG: size"];
"1000464" -> "1000544"  [label="DDG: flags"];
"1000464" -> "1000544"  [label="DDG: NULL"];
"1000464" -> "1000544"  [label="DDG: &populate"];
"1000464" -> "1000462"  [label="DDG: &populate"];
"1000464" -> "1000462"  [label="DDG: prot"];
"1000464" -> "1000462"  [label="DDG: flags"];
"1000464" -> "1000462"  [label="DDG: NULL"];
"1000464" -> "1000462"  [label="DDG: 0"];
"1000464" -> "1000462"  [label="DDG: file"];
"1000464" -> "1000462"  [label="DDG: addr"];
"1000464" -> "1000462"  [label="DDG: size"];
"1000412" -> "1000464"  [label="DDG: file"];
"1000412" -> "1000464"  [label="DDG: prot"];
"1000412" -> "1000464"  [label="DDG: flags"];
"1000453" -> "1000464"  [label="DDG: addr"];
"1000434" -> "1000464"  [label="DDG: addr"];
"1000308" -> "1000464"  [label="DDG: size"];
"1000464" -> "1000503"  [label="DDG: file"];
"1000412" -> "1000410"  [label="AST: "];
"1000412" -> "1000415"  [label="CFG: "];
"1000413" -> "1000412"  [label="AST: "];
"1000414" -> "1000412"  [label="AST: "];
"1000415" -> "1000412"  [label="AST: "];
"1000410" -> "1000412"  [label="CFG: "];
"1000412" -> "1000544"  [label="DDG: prot"];
"1000412" -> "1000544"  [label="DDG: flags"];
"1000412" -> "1000410"  [label="DDG: file"];
"1000412" -> "1000410"  [label="DDG: prot"];
"1000412" -> "1000410"  [label="DDG: flags"];
"1000360" -> "1000412"  [label="DDG: file"];
"1000190" -> "1000412"  [label="DDG: prot"];
"1000221" -> "1000412"  [label="DDG: prot"];
"1000201" -> "1000412"  [label="DDG: prot"];
"1000170" -> "1000412"  [label="DDG: flags"];
"1000182" -> "1000412"  [label="DDG: flags"];
"1000412" -> "1000503"  [label="DDG: file"];
"1000360" -> "1000359"  [label="AST: "];
"1000360" -> "1000361"  [label="CFG: "];
"1000361" -> "1000360"  [label="AST: "];
"1000364" -> "1000360"  [label="CFG: "];
"1000371" -> "1000360"  [label="CFG: "];
"1000360" -> "1000544"  [label="DDG: file"];
"1000360" -> "1000544"  [label="DDG: IS_ERR(file)"];
"1000357" -> "1000360"  [label="DDG: file"];
"1000357" -> "1000355"  [label="AST: "];
"1000357" -> "1000358"  [label="CFG: "];
"1000358" -> "1000357"  [label="AST: "];
"1000355" -> "1000357"  [label="CFG: "];
"1000357" -> "1000355"  [label="DDG: file"];
"1000340" -> "1000357"  [label="DDG: file"];
"1000340" -> "1000109"  [label="AST: "];
"1000340" -> "1000342"  [label="CFG: "];
"1000341" -> "1000340"  [label="AST: "];
"1000342" -> "1000340"  [label="AST: "];
"1000356" -> "1000340"  [label="CFG: "];
"1000340" -> "1000544"  [label="DDG: alloc_file(&path, f_mode,\n\t\t\t  is_file_hugepages(shp->shm_file) ?\n\t\t\t\t&shm_file_operations_huge :\n\t\t\t\t&shm_file_operations)"];
"1000342" -> "1000340"  [label="DDG: &path"];
"1000342" -> "1000340"  [label="DDG: f_mode"];
"1000342" -> "1000340"  [label="DDG: is_file_hugepages(shp->shm_file) ?\n\t\t\t\t&shm_file_operations_huge :\n\t\t\t\t&shm_file_operations"];
"1000342" -> "1000346"  [label="CFG: "];
"1000343" -> "1000342"  [label="AST: "];
"1000345" -> "1000342"  [label="AST: "];
"1000346" -> "1000342"  [label="AST: "];
"1000342" -> "1000544"  [label="DDG: &path"];
"1000342" -> "1000544"  [label="DDG: is_file_hugepages(shp->shm_file) ?\n\t\t\t\t&shm_file_operations_huge :\n\t\t\t\t&shm_file_operations"];
"1000342" -> "1000544"  [label="DDG: f_mode"];
"1000301" -> "1000342"  [label="DDG: &path"];
"1000211" -> "1000342"  [label="DDG: f_mode"];
"1000196" -> "1000342"  [label="DDG: f_mode"];
"1000342" -> "1000365"  [label="DDG: &path"];
"1000301" -> "1000109"  [label="AST: "];
"1000301" -> "1000302"  [label="CFG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000306" -> "1000301"  [label="CFG: "];
"1000301" -> "1000544"  [label="DDG: path_get(&path)"];
"1000301" -> "1000336"  [label="DDG: &path"];
"1000211" -> "1000200"  [label="AST: "];
"1000211" -> "1000213"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000213" -> "1000211"  [label="AST: "];
"1000218" -> "1000211"  [label="CFG: "];
"1000211" -> "1000544"  [label="DDG: f_mode"];
"1000211" -> "1000544"  [label="DDG: FMODE_READ | FMODE_WRITE"];
"1000213" -> "1000211"  [label="DDG: FMODE_READ"];
"1000213" -> "1000211"  [label="DDG: FMODE_WRITE"];
"1000213" -> "1000215"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000215" -> "1000213"  [label="AST: "];
"1000213" -> "1000544"  [label="DDG: FMODE_READ"];
"1000213" -> "1000544"  [label="DDG: FMODE_WRITE"];
"1000196" -> "1000189"  [label="AST: "];
"1000196" -> "1000198"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000198" -> "1000196"  [label="AST: "];
"1000218" -> "1000196"  [label="CFG: "];
"1000196" -> "1000544"  [label="DDG: f_mode"];
"1000196" -> "1000544"  [label="DDG: FMODE_READ"];
"1000190" -> "1000189"  [label="AST: "];
"1000190" -> "1000192"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000192" -> "1000190"  [label="AST: "];
"1000194" -> "1000190"  [label="CFG: "];
"1000190" -> "1000544"  [label="DDG: prot"];
"1000190" -> "1000544"  [label="DDG: PROT_READ"];
"1000190" -> "1000221"  [label="DDG: prot"];
"1000221" -> "1000220"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000225" -> "1000221"  [label="CFG: "];
"1000221" -> "1000544"  [label="DDG: prot |= PROT_EXEC"];
"1000221" -> "1000544"  [label="DDG: PROT_EXEC"];
"1000221" -> "1000544"  [label="DDG: prot"];
"1000201" -> "1000221"  [label="DDG: prot"];
"1000201" -> "1000200"  [label="AST: "];
"1000201" -> "1000203"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000203" -> "1000201"  [label="AST: "];
"1000207" -> "1000201"  [label="CFG: "];
"1000201" -> "1000544"  [label="DDG: PROT_READ | PROT_WRITE"];
"1000201" -> "1000544"  [label="DDG: prot"];
"1000203" -> "1000201"  [label="DDG: PROT_READ"];
"1000203" -> "1000201"  [label="DDG: PROT_WRITE"];
"1000203" -> "1000205"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000203"  [label="AST: "];
"1000203" -> "1000544"  [label="DDG: PROT_WRITE"];
"1000203" -> "1000544"  [label="DDG: PROT_READ"];
"1000170" -> "1000142"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000187" -> "1000170"  [label="CFG: "];
"1000170" -> "1000544"  [label="DDG: MAP_SHARED | MAP_FIXED"];
"1000170" -> "1000544"  [label="DDG: flags"];
"1000172" -> "1000170"  [label="DDG: MAP_SHARED"];
"1000172" -> "1000170"  [label="DDG: MAP_FIXED"];
"1000172" -> "1000174"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000174" -> "1000172"  [label="AST: "];
"1000172" -> "1000544"  [label="DDG: MAP_SHARED"];
"1000172" -> "1000544"  [label="DDG: MAP_FIXED"];
"1000182" -> "1000176"  [label="AST: "];
"1000182" -> "1000184"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000184" -> "1000182"  [label="AST: "];
"1000187" -> "1000182"  [label="CFG: "];
"1000182" -> "1000544"  [label="DDG: MAP_SHARED"];
"1000182" -> "1000544"  [label="DDG: flags"];
"1000453" -> "1000452"  [label="AST: "];
"1000453" -> "1000458"  [label="CFG: "];
"1000454" -> "1000453"  [label="AST: "];
"1000457" -> "1000453"  [label="AST: "];
"1000458" -> "1000453"  [label="AST: "];
"1000461" -> "1000453"  [label="CFG: "];
"1000463" -> "1000453"  [label="CFG: "];
"1000453" -> "1000544"  [label="DDG: addr"];
"1000453" -> "1000544"  [label="DDG: find_vma_intersection(current->mm, addr, addr + size)"];
"1000453" -> "1000544"  [label="DDG: addr + size"];
"1000453" -> "1000544"  [label="DDG: current->mm"];
"1000446" -> "1000453"  [label="DDG: addr"];
"1000308" -> "1000453"  [label="DDG: size"];
"1000453" -> "1000499"  [label="DDG: addr"];
"1000446" -> "1000445"  [label="AST: "];
"1000446" -> "1000450"  [label="CFG: "];
"1000447" -> "1000446"  [label="AST: "];
"1000450" -> "1000446"  [label="AST: "];
"1000451" -> "1000446"  [label="CFG: "];
"1000455" -> "1000446"  [label="CFG: "];
"1000446" -> "1000544"  [label="DDG: addr"];
"1000446" -> "1000544"  [label="DDG: addr + size < addr"];
"1000446" -> "1000544"  [label="DDG: addr + size"];
"1000434" -> "1000446"  [label="DDG: addr"];
"1000308" -> "1000446"  [label="DDG: size"];
"1000446" -> "1000458"  [label="DDG: addr"];
"1000446" -> "1000499"  [label="DDG: addr"];
"1000434" -> "1000433"  [label="AST: "];
"1000434" -> "1000435"  [label="CFG: "];
"1000434" -> "1000436"  [label="CFG: "];
"1000435" -> "1000434"  [label="AST: "];
"1000436" -> "1000434"  [label="AST: "];
"1000442" -> "1000434"  [label="CFG: "];
"1000463" -> "1000434"  [label="CFG: "];
"1000434" -> "1000544"  [label="DDG: !(shmflg & SHM_REMAP)"];
"1000434" -> "1000544"  [label="DDG: addr && !(shmflg & SHM_REMAP)"];
"1000158" -> "1000434"  [label="DDG: addr"];
"1000166" -> "1000434"  [label="DDG: addr"];
"1000144" -> "1000434"  [label="DDG: addr"];
"1000137" -> "1000434"  [label="DDG: addr"];
"1000436" -> "1000434"  [label="DDG: shmflg & SHM_REMAP"];
"1000434" -> "1000447"  [label="DDG: addr"];
"1000158" -> "1000150"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000171" -> "1000158"  [label="CFG: "];
"1000158" -> "1000544"  [label="DDG: addr"];
"1000158" -> "1000544"  [label="DDG: ~(shmlba - 1)"];
"1000158" -> "1000544"  [label="DDG: addr &= ~(shmlba - 1)"];
"1000144" -> "1000158"  [label="DDG: addr"];
"1000155" -> "1000158"  [label="DDG: addr"];
"1000160" -> "1000158"  [label="DDG: shmlba - 1"];
"1000144" -> "1000143"  [label="AST: "];
"1000144" -> "1000146"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000146" -> "1000144"  [label="AST: "];
"1000153" -> "1000144"  [label="CFG: "];
"1000171" -> "1000144"  [label="CFG: "];
"1000144" -> "1000544"  [label="DDG: addr & (shmlba - 1)"];
"1000144" -> "1000544"  [label="DDG: addr"];
"1000144" -> "1000544"  [label="DDG: shmlba - 1"];
"1000137" -> "1000144"  [label="DDG: addr"];
"1000146" -> "1000144"  [label="DDG: shmlba"];
"1000146" -> "1000144"  [label="DDG: 1"];
"1000144" -> "1000155"  [label="DDG: addr"];
"1000144" -> "1000166"  [label="DDG: addr"];
"1000137" -> "1000136"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000145" -> "1000137"  [label="CFG: "];
"1000179" -> "1000137"  [label="CFG: "];
"1000137" -> "1000544"  [label="DDG: (ulong)shmaddr"];
"1000137" -> "1000544"  [label="DDG: addr"];
"1000139" -> "1000137"  [label="DDG: shmaddr"];
"1000139" -> "1000141"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="AST: "];
"1000139" -> "1000544"  [label="DDG: shmaddr"];
"1000105" -> "1000139"  [label="DDG: shmaddr"];
"1000139" -> "1000264"  [label="DDG: shmaddr"];
"1000105" -> "1000103"  [label="AST: "];
"1000105" -> "1000544"  [label="DDG: shmaddr"];
"1000105" -> "1000264"  [label="DDG: shmaddr"];
"1000146" -> "1000148"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000146" -> "1000544"  [label="DDG: shmlba"];
"1000108" -> "1000146"  [label="DDG: shmlba"];
"1000146" -> "1000155"  [label="DDG: shmlba"];
"1000146" -> "1000161"  [label="DDG: shmlba"];
"1000108" -> "1000103"  [label="AST: "];
"1000108" -> "1000544"  [label="DDG: shmlba"];
"1000108" -> "1000155"  [label="DDG: shmlba"];
"1000108" -> "1000161"  [label="DDG: shmlba"];
"1000155" -> "1000151"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000157" -> "1000155"  [label="AST: "];
"1000151" -> "1000155"  [label="CFG: "];
"1000155" -> "1000544"  [label="DDG: shmlba"];
"1000155" -> "1000151"  [label="DDG: addr"];
"1000155" -> "1000151"  [label="DDG: shmlba"];
"1000155" -> "1000161"  [label="DDG: shmlba"];
"1000155" -> "1000166"  [label="DDG: addr"];
"1000160" -> "1000161"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000160" -> "1000544"  [label="DDG: shmlba - 1"];
"1000161" -> "1000160"  [label="DDG: shmlba"];
"1000161" -> "1000160"  [label="DDG: 1"];
"1000161" -> "1000163"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000161" -> "1000544"  [label="DDG: shmlba"];
"1000166" -> "1000165"  [label="AST: "];
"1000166" -> "1000168"  [label="CFG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000168" -> "1000166"  [label="AST: "];
"1000169" -> "1000166"  [label="CFG: "];
"1000171" -> "1000166"  [label="CFG: "];
"1000166" -> "1000544"  [label="DDG: ~PAGE_MASK"];
"1000166" -> "1000544"  [label="DDG: addr & ~PAGE_MASK"];
"1000166" -> "1000544"  [label="DDG: addr"];
"1000436" -> "1000437"  [label="CFG: "];
"1000437" -> "1000436"  [label="AST: "];
"1000436" -> "1000544"  [label="DDG: shmflg & SHM_REMAP"];
"1000437" -> "1000436"  [label="DDG: shmflg"];
"1000437" -> "1000436"  [label="DDG: SHM_REMAP"];
"1000437" -> "1000439"  [label="CFG: "];
"1000438" -> "1000437"  [label="AST: "];
"1000439" -> "1000437"  [label="AST: "];
"1000437" -> "1000544"  [label="DDG: shmflg"];
"1000437" -> "1000544"  [label="DDG: SHM_REMAP"];
"1000264" -> "1000437"  [label="DDG: shmflg"];
"1000106" -> "1000437"  [label="DDG: shmflg"];
"1000178" -> "1000437"  [label="DDG: SHM_REMAP"];
"1000264" -> "1000262"  [label="AST: "];
"1000264" -> "1000267"  [label="CFG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000266" -> "1000264"  [label="AST: "];
"1000267" -> "1000264"  [label="AST: "];
"1000262" -> "1000264"  [label="CFG: "];
"1000264" -> "1000544"  [label="DDG: shp"];
"1000264" -> "1000544"  [label="DDG: shmflg"];
"1000264" -> "1000544"  [label="DDG: shmaddr"];
"1000264" -> "1000262"  [label="DDG: shp"];
"1000264" -> "1000262"  [label="DDG: shmaddr"];
"1000264" -> "1000262"  [label="DDG: shmflg"];
"1000241" -> "1000264"  [label="DDG: shp"];
"1000217" -> "1000264"  [label="DDG: shmflg"];
"1000106" -> "1000264"  [label="DDG: shmflg"];
"1000241" -> "1000240"  [label="AST: "];
"1000241" -> "1000242"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000245" -> "1000241"  [label="CFG: "];
"1000250" -> "1000241"  [label="CFG: "];
"1000241" -> "1000544"  [label="DDG: shp"];
"1000241" -> "1000544"  [label="DDG: IS_ERR(shp)"];
"1000235" -> "1000241"  [label="DDG: shp"];
"1000241" -> "1000246"  [label="DDG: shp"];
"1000235" -> "1000109"  [label="AST: "];
"1000235" -> "1000237"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="AST: "];
"1000242" -> "1000235"  [label="CFG: "];
"1000235" -> "1000544"  [label="DDG: shm_obtain_object_check(ns, shmid)"];
"1000237" -> "1000235"  [label="DDG: ns"];
"1000237" -> "1000235"  [label="DDG: shmid"];
"1000237" -> "1000239"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000239" -> "1000237"  [label="AST: "];
"1000237" -> "1000544"  [label="DDG: shmid"];
"1000237" -> "1000544"  [label="DDG: ns"];
"1000227" -> "1000237"  [label="DDG: ns"];
"1000131" -> "1000237"  [label="DDG: shmid"];
"1000104" -> "1000237"  [label="DDG: shmid"];
"1000237" -> "1000254"  [label="DDG: ns"];
"1000237" -> "1000514"  [label="DDG: shmid"];
"1000227" -> "1000109"  [label="AST: "];
"1000227" -> "1000229"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000227"  [label="AST: "];
"1000234" -> "1000227"  [label="CFG: "];
"1000227" -> "1000544"  [label="DDG: current->nsproxy->ipc_ns"];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000133"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="AST: "];
"1000134" -> "1000131"  [label="CFG: "];
"1000138" -> "1000131"  [label="CFG: "];
"1000131" -> "1000544"  [label="DDG: shmid"];
"1000131" -> "1000544"  [label="DDG: shmid < 0"];
"1000104" -> "1000131"  [label="DDG: shmid"];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000544"  [label="DDG: shmid"];
"1000104" -> "1000514"  [label="DDG: shmid"];
"1000217" -> "1000216"  [label="AST: "];
"1000217" -> "1000219"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000219" -> "1000217"  [label="AST: "];
"1000222" -> "1000217"  [label="CFG: "];
"1000228" -> "1000217"  [label="CFG: "];
"1000217" -> "1000544"  [label="DDG: SHM_EXEC"];
"1000217" -> "1000544"  [label="DDG: shmflg & SHM_EXEC"];
"1000217" -> "1000544"  [label="DDG: shmflg"];
"1000186" -> "1000217"  [label="DDG: shmflg"];
"1000106" -> "1000217"  [label="DDG: shmflg"];
"1000186" -> "1000185"  [label="AST: "];
"1000186" -> "1000188"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000188" -> "1000186"  [label="AST: "];
"1000191" -> "1000186"  [label="CFG: "];
"1000202" -> "1000186"  [label="CFG: "];
"1000186" -> "1000544"  [label="DDG: SHM_RDONLY"];
"1000186" -> "1000544"  [label="DDG: shmflg & SHM_RDONLY"];
"1000178" -> "1000186"  [label="DDG: shmflg"];
"1000152" -> "1000186"  [label="DDG: shmflg"];
"1000106" -> "1000186"  [label="DDG: shmflg"];
"1000178" -> "1000177"  [label="AST: "];
"1000178" -> "1000180"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000180" -> "1000178"  [label="AST: "];
"1000181" -> "1000178"  [label="CFG: "];
"1000183" -> "1000178"  [label="CFG: "];
"1000178" -> "1000544"  [label="DDG: shmflg & SHM_REMAP"];
"1000178" -> "1000544"  [label="DDG: shmflg"];
"1000178" -> "1000544"  [label="DDG: SHM_REMAP"];
"1000106" -> "1000178"  [label="DDG: shmflg"];
"1000106" -> "1000103"  [label="AST: "];
"1000106" -> "1000544"  [label="DDG: shmflg"];
"1000106" -> "1000152"  [label="DDG: shmflg"];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000154"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000156" -> "1000152"  [label="CFG: "];
"1000151" -> "1000152"  [label="CFG: "];
"1000152" -> "1000544"  [label="DDG: shmflg"];
"1000152" -> "1000544"  [label="DDG: SHM_RND"];
"1000152" -> "1000151"  [label="DDG: shmflg"];
"1000152" -> "1000151"  [label="DDG: SHM_RND"];
"1000308" -> "1000109"  [label="AST: "];
"1000308" -> "1000310"  [label="CFG: "];
"1000309" -> "1000308"  [label="AST: "];
"1000310" -> "1000308"  [label="AST: "];
"1000318" -> "1000308"  [label="CFG: "];
"1000308" -> "1000544"  [label="DDG: i_size_read(d_inode(path.dentry))"];
"1000308" -> "1000544"  [label="DDG: size"];
"1000310" -> "1000308"  [label="DDG: d_inode(path.dentry)"];
"1000308" -> "1000447"  [label="DDG: size"];
"1000308" -> "1000458"  [label="DDG: size"];
"1000310" -> "1000311"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000310" -> "1000544"  [label="DDG: d_inode(path.dentry)"];
"1000311" -> "1000310"  [label="DDG: path.dentry"];
"1000311" -> "1000312"  [label="CFG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000311" -> "1000544"  [label="DDG: path.dentry"];
"1000294" -> "1000311"  [label="DDG: path"];
"1000294" -> "1000109"  [label="AST: "];
"1000294" -> "1000296"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000296" -> "1000294"  [label="AST: "];
"1000303" -> "1000294"  [label="CFG: "];
"1000294" -> "1000544"  [label="DDG: shp->shm_file->f_path"];
"1000294" -> "1000544"  [label="DDG: path"];
"1000462" -> "1000109"  [label="AST: "];
"1000463" -> "1000462"  [label="AST: "];
"1000476" -> "1000462"  [label="CFG: "];
"1000462" -> "1000544"  [label="DDG: do_mmap_pgoff(file, addr, size, prot, flags, 0, &populate, NULL)"];
"1000462" -> "1000474"  [label="DDG: addr"];
"1000462" -> "1000482"  [label="DDG: addr"];
"1000474" -> "1000109"  [label="AST: "];
"1000474" -> "1000477"  [label="CFG: "];
"1000475" -> "1000474"  [label="AST: "];
"1000477" -> "1000474"  [label="AST: "];
"1000479" -> "1000474"  [label="CFG: "];
"1000474" -> "1000544"  [label="DDG: *raddr"];
"1000482" -> "1000481"  [label="AST: "];
"1000482" -> "1000483"  [label="CFG: "];
"1000483" -> "1000482"  [label="AST: "];
"1000485" -> "1000482"  [label="CFG: "];
"1000489" -> "1000482"  [label="CFG: "];
"1000482" -> "1000544"  [label="DDG: addr"];
"1000482" -> "1000544"  [label="DDG: IS_ERR_VALUE(addr)"];
"1000482" -> "1000486"  [label="DDG: addr"];
"1000482" -> "1000499"  [label="DDG: addr"];
"1000486" -> "1000484"  [label="AST: "];
"1000486" -> "1000488"  [label="CFG: "];
"1000487" -> "1000486"  [label="AST: "];
"1000488" -> "1000486"  [label="AST: "];
"1000484" -> "1000486"  [label="CFG: "];
"1000486" -> "1000544"  [label="DDG: addr"];
"1000486" -> "1000484"  [label="DDG: addr"];
"1000486" -> "1000499"  [label="DDG: addr"];
"1000484" -> "1000481"  [label="AST: "];
"1000485" -> "1000484"  [label="AST: "];
"1000489" -> "1000484"  [label="CFG: "];
"1000484" -> "1000544"  [label="DDG: (long)addr"];
"1000484" -> "1000544"  [label="DDG: err"];
"1000484" -> "1000537"  [label="DDG: err"];
"1000537" -> "1000109"  [label="AST: "];
"1000537" -> "1000538"  [label="CFG: "];
"1000538" -> "1000537"  [label="AST: "];
"1000544" -> "1000537"  [label="CFG: "];
"1000537" -> "1000544"  [label="DDG: <RET>"];
"1000538" -> "1000537"  [label="DDG: err"];
"1000410" -> "1000537"  [label="DDG: err"];
"1000478" -> "1000537"  [label="DDG: err"];
"1000321" -> "1000537"  [label="DDG: err"];
"1000428" -> "1000537"  [label="DDG: err"];
"1000355" -> "1000537"  [label="DDG: err"];
"1000441" -> "1000537"  [label="DDG: err"];
"1000499" -> "1000497"  [label="AST: "];
"1000499" -> "1000501"  [label="CFG: "];
"1000500" -> "1000499"  [label="AST: "];
"1000501" -> "1000499"  [label="AST: "];
"1000502" -> "1000499"  [label="CFG: "];
"1000499" -> "1000544"  [label="DDG: mm_populate(addr, populate)"];
"1000499" -> "1000544"  [label="DDG: addr"];
"1000499" -> "1000544"  [label="DDG: populate"];
"1000123" -> "1000499"  [label="DDG: populate"];
"1000503" -> "1000109"  [label="AST: "];
"1000503" -> "1000504"  [label="CFG: "];
"1000504" -> "1000503"  [label="AST: "];
"1000505" -> "1000503"  [label="CFG: "];
"1000503" -> "1000544"  [label="DDG: fput(file)"];
"1000503" -> "1000544"  [label="DDG: file"];
}
