digraph "0_linux_82981930125abfd39d7c8378a9cfdf5e1be2002b_0@API" {
"1000585" [label="(Call,copy_from_user(&fprog, optval, sizeof(fprog)))"];
"1000147" [label="(Call,(int __user *)optval)"];
"1000111" [label="(MethodParameterIn,char __user *optval)"];
"1000594" [label="(Call,sk_attach_filter(&fprog, sk))"];
"1000592" [label="(Call,ret = sk_attach_filter(&fprog, sk))"];
"1000680" [label="(Return,return ret;)"];
"1000678" [label="(Call,release_sock(sk))"];
"1000673" [label="(Call,ret = -ENOPROTOOPT)"];
"1000558" [label="(Call,ret = sock_set_timeout(&sk->sk_sndtimeo, optval, optlen))"];
"1000578" [label="(Block,)"];
"1000569" [label="(Call,ret = -EINVAL)"];
"1000667" [label="(Call,sock_valbool_flag(sk, SOCK_NOFCS, valbool))"];
"1000201" [label="(Call,sock_valbool_flag(sk, SOCK_LOCALROUTE, valbool))"];
"1000471" [label="(Call,sock_reset_flag(sk, SOCK_RCVTSTAMPNS))"];
"1000661" [label="(Call,ret = -EOPNOTSUPP)"];
"1000598" [label="(ControlStructure,break;)"];
"1000681" [label="(Identifier,ret)"];
"1000682" [label="(MethodReturn,int)"];
"1000113" [label="(Block,)"];
"1000145" [label="(Call,get_user(val, (int __user *)optval))"];
"1000585" [label="(Call,copy_from_user(&fprog, optval, sizeof(fprog)))"];
"1000657" [label="(Call,sock->ops->set_peek_off(sk, val))"];
"1000245" [label="(Call,sk->sk_write_space(sk))"];
"1000645" [label="(Call,sock_valbool_flag(sk, SOCK_WIFI_STATUS, valbool))"];
"1000316" [label="(Call,sock_valbool_flag(sk, SOCK_KEEPOPEN, valbool))"];
"1000322" [label="(Call,sock_valbool_flag(sk, SOCK_URGINLINE, valbool))"];
"1000132" [label="(Call,sock_bindtodevice(sk, optval, optlen))"];
"1000586" [label="(Call,&fprog)"];
"1000680" [label="(Return,return ret;)"];
"1000111" [label="(MethodParameterIn,char __user *optval)"];
"1000600" [label="(Call,ret = sk_detach_filter(sk))"];
"1000124" [label="(Call,ret = 0)"];
"1000595" [label="(Call,&fprog)"];
"1000678" [label="(Call,release_sock(sk))"];
"1000547" [label="(Call,ret = sock_set_timeout(&sk->sk_rcvtimeo, optval, optlen))"];
"1000195" [label="(Call,ret = -ENOPROTOOPT)"];
"1000602" [label="(Call,sk_detach_filter(sk))"];
"1000159" [label="(Call,lock_sock(sk))"];
"1000207" [label="(Call,sock_valbool_flag(sk, SOCK_BROADCAST, valbool))"];
"1000147" [label="(Call,(int __user *)optval)"];
"1000592" [label="(Call,ret = sk_attach_filter(&fprog, sk))"];
"1000589" [label="(Call,sizeof(fprog))"];
"1000580" [label="(Call,ret = -EFAULT)"];
"1000639" [label="(Call,sock_valbool_flag(sk, SOCK_RXQ_OVFL, valbool))"];
"1000679" [label="(Identifier,sk)"];
"1000463" [label="(Call,sock_enable_timestamp(sk, SOCK_TIMESTAMP))"];
"1000176" [label="(Call,sock_valbool_flag(sk, SOCK_DBG, valbool))"];
"1000377" [label="(Call,ret = -EFAULT)"];
"1000584" [label="(ControlStructure,if (copy_from_user(&fprog, optval, sizeof(fprog))))"];
"1000481" [label="(Call,ret = -EINVAL)"];
"1000560" [label="(Call,sock_set_timeout(&sk->sk_sndtimeo, optval, optlen))"];
"1000364" [label="(Call,ret = -EINVAL)"];
"1000593" [label="(Identifier,ret)"];
"1000419" [label="(Call,sock_set_flag(sk, SOCK_LINGER))"];
"1000588" [label="(Identifier,optval)"];
"1000627" [label="(Call,ret = -EPERM)"];
"1000171" [label="(Call,ret = -EACCES)"];
"1000370" [label="(Call,copy_from_user(&ling, optval, sizeof(ling)))"];
"1000594" [label="(Call,sk_attach_filter(&fprog, sk))"];
"1000549" [label="(Call,sock_set_timeout(&sk->sk_rcvtimeo, optval, optlen))"];
"1000149" [label="(Identifier,optval)"];
"1000352" [label="(Call,ret = -EPERM)"];
"1000529" [label="(Call,sock_valbool_flag(sk, SOCK_TIMESTAMPING_RAW_HARDWARE,\n\t\t\t\t  val & SOF_TIMESTAMPING_RAW_HARDWARE))"];
"1000254" [label="(Call,ret = -EPERM)"];
"1000597" [label="(Identifier,sk)"];
"1000300" [label="(Call,ret = -EPERM)"];
"1000591" [label="(ControlStructure,break;)"];
"1000387" [label="(Call,sock_reset_flag(sk, SOCK_LINGER))"];
"1000585" -> "1000584"  [label="AST: "];
"1000585" -> "1000589"  [label="CFG: "];
"1000586" -> "1000585"  [label="AST: "];
"1000588" -> "1000585"  [label="AST: "];
"1000589" -> "1000585"  [label="AST: "];
"1000591" -> "1000585"  [label="CFG: "];
"1000593" -> "1000585"  [label="CFG: "];
"1000585" -> "1000682"  [label="DDG: optval"];
"1000585" -> "1000682"  [label="DDG: &fprog"];
"1000585" -> "1000682"  [label="DDG: copy_from_user(&fprog, optval, sizeof(fprog))"];
"1000147" -> "1000585"  [label="DDG: optval"];
"1000111" -> "1000585"  [label="DDG: optval"];
"1000585" -> "1000594"  [label="DDG: &fprog"];
"1000147" -> "1000145"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000147" -> "1000682"  [label="DDG: optval"];
"1000147" -> "1000145"  [label="DDG: optval"];
"1000111" -> "1000147"  [label="DDG: optval"];
"1000147" -> "1000370"  [label="DDG: optval"];
"1000147" -> "1000549"  [label="DDG: optval"];
"1000147" -> "1000560"  [label="DDG: optval"];
"1000111" -> "1000107"  [label="AST: "];
"1000111" -> "1000682"  [label="DDG: optval"];
"1000111" -> "1000132"  [label="DDG: optval"];
"1000111" -> "1000370"  [label="DDG: optval"];
"1000111" -> "1000549"  [label="DDG: optval"];
"1000111" -> "1000560"  [label="DDG: optval"];
"1000594" -> "1000592"  [label="AST: "];
"1000594" -> "1000597"  [label="CFG: "];
"1000595" -> "1000594"  [label="AST: "];
"1000597" -> "1000594"  [label="AST: "];
"1000592" -> "1000594"  [label="CFG: "];
"1000594" -> "1000682"  [label="DDG: &fprog"];
"1000594" -> "1000592"  [label="DDG: &fprog"];
"1000594" -> "1000592"  [label="DDG: sk"];
"1000159" -> "1000594"  [label="DDG: sk"];
"1000594" -> "1000678"  [label="DDG: sk"];
"1000592" -> "1000578"  [label="AST: "];
"1000593" -> "1000592"  [label="AST: "];
"1000598" -> "1000592"  [label="CFG: "];
"1000592" -> "1000682"  [label="DDG: sk_attach_filter(&fprog, sk)"];
"1000592" -> "1000682"  [label="DDG: ret"];
"1000592" -> "1000680"  [label="DDG: ret"];
"1000680" -> "1000113"  [label="AST: "];
"1000680" -> "1000681"  [label="CFG: "];
"1000681" -> "1000680"  [label="AST: "];
"1000682" -> "1000680"  [label="CFG: "];
"1000680" -> "1000682"  [label="DDG: <RET>"];
"1000681" -> "1000680"  [label="DDG: ret"];
"1000364" -> "1000680"  [label="DDG: ret"];
"1000547" -> "1000680"  [label="DDG: ret"];
"1000171" -> "1000680"  [label="DDG: ret"];
"1000124" -> "1000680"  [label="DDG: ret"];
"1000254" -> "1000680"  [label="DDG: ret"];
"1000661" -> "1000680"  [label="DDG: ret"];
"1000352" -> "1000680"  [label="DDG: ret"];
"1000627" -> "1000680"  [label="DDG: ret"];
"1000300" -> "1000680"  [label="DDG: ret"];
"1000673" -> "1000680"  [label="DDG: ret"];
"1000558" -> "1000680"  [label="DDG: ret"];
"1000580" -> "1000680"  [label="DDG: ret"];
"1000195" -> "1000680"  [label="DDG: ret"];
"1000600" -> "1000680"  [label="DDG: ret"];
"1000481" -> "1000680"  [label="DDG: ret"];
"1000569" -> "1000680"  [label="DDG: ret"];
"1000377" -> "1000680"  [label="DDG: ret"];
"1000678" -> "1000113"  [label="AST: "];
"1000678" -> "1000679"  [label="CFG: "];
"1000679" -> "1000678"  [label="AST: "];
"1000681" -> "1000678"  [label="CFG: "];
"1000678" -> "1000682"  [label="DDG: release_sock(sk)"];
"1000678" -> "1000682"  [label="DDG: sk"];
"1000645" -> "1000678"  [label="DDG: sk"];
"1000639" -> "1000678"  [label="DDG: sk"];
"1000159" -> "1000678"  [label="DDG: sk"];
"1000419" -> "1000678"  [label="DDG: sk"];
"1000387" -> "1000678"  [label="DDG: sk"];
"1000207" -> "1000678"  [label="DDG: sk"];
"1000529" -> "1000678"  [label="DDG: sk"];
"1000657" -> "1000678"  [label="DDG: sk"];
"1000463" -> "1000678"  [label="DDG: sk"];
"1000245" -> "1000678"  [label="DDG: sk"];
"1000471" -> "1000678"  [label="DDG: sk"];
"1000667" -> "1000678"  [label="DDG: sk"];
"1000176" -> "1000678"  [label="DDG: sk"];
"1000602" -> "1000678"  [label="DDG: sk"];
"1000322" -> "1000678"  [label="DDG: sk"];
"1000201" -> "1000678"  [label="DDG: sk"];
"1000316" -> "1000678"  [label="DDG: sk"];
}
