digraph "0_altlinux_843807a3a90f52e7538be756616510730a24739a@API" {
"1000258" [label="(Call,fgets(buf, sizeof(buf), fp) != NULL)"];
"1000259" [label="(Call,fgets(buf, sizeof(buf), fp))"];
"1000115" [label="(Call,*fp = NULL)"];
"1000290" [label="(Call,tmp != NULL)"];
"1000282" [label="(Call,tmp = memchr(buf, '\n', sizeof(buf)))"];
"1000284" [label="(Call,memchr(buf, '\n', sizeof(buf)))"];
"1000274" [label="(Call,tmp != NULL)"];
"1000266" [label="(Call,tmp = memchr(buf, '\r', sizeof(buf)))"];
"1000268" [label="(Call,memchr(buf, '\r', sizeof(buf)))"];
"1000258" [label="(Call,fgets(buf, sizeof(buf), fp) != NULL)"];
"1000134" [label="(Call,pwd == NULL)"];
"1000128" [label="(Call,pwd = pam_modutil_getpwnam(pamh, this_user))"];
"1000130" [label="(Call,pam_modutil_getpwnam(pamh, this_user))"];
"1000106" [label="(MethodParameterIn,pam_handle_t *pamh)"];
"1000108" [label="(MethodParameterIn,const char *this_user)"];
"1000300" [label="(Call,fnmatch(buf, other_user, 0))"];
"1000139" [label="(Identifier,pamh)"];
"1000138" [label="(Call,pam_syslog(pamh, LOG_ERR,\n\t\t\t   \"error determining home directory for '%s'\",\n\t\t\t   this_user))"];
"1000263" [label="(Identifier,fp)"];
"1000292" [label="(Identifier,NULL)"];
"1000168" [label="(Call,pam_syslog(pamh, LOG_ERR,\n                           \"name of user's home directory is too long\"))"];
"1000276" [label="(Identifier,NULL)"];
"1000136" [label="(Identifier,NULL)"];
"1000271" [label="(Call,sizeof(buf))"];
"1000270" [label="(Literal,'\r')"];
"1000260" [label="(Identifier,buf)"];
"1000116" [label="(Identifier,fp)"];
"1000296" [label="(Identifier,tmp)"];
"1000108" [label="(MethodParameterIn,const char *this_user)"];
"1000282" [label="(Call,tmp = memchr(buf, '\n', sizeof(buf)))"];
"1000133" [label="(ControlStructure,if (pwd == NULL))"];
"1000273" [label="(ControlStructure,if (tmp != NULL))"];
"1000131" [label="(Identifier,pamh)"];
"1000216" [label="(Call,pam_modutil_regain_priv(pamh, &privs))"];
"1000274" [label="(Call,tmp != NULL)"];
"1000130" [label="(Call,pam_modutil_getpwnam(pamh, this_user))"];
"1000360" [label="(Call,pam_syslog(pamh, LOG_DEBUG,\n\t\t\t\t\t\t   \"%s does not exist, failing\",\n\t\t\t\t\t\t   path))"];
"1000128" [label="(Call,pwd = pam_modutil_getpwnam(pamh, this_user))"];
"1000265" [label="(Block,)"];
"1000269" [label="(Identifier,buf)"];
"1000268" [label="(Call,memchr(buf, '\r', sizeof(buf)))"];
"1000264" [label="(Identifier,NULL)"];
"1000275" [label="(Identifier,tmp)"];
"1000132" [label="(Identifier,this_user)"];
"1000309" [label="(Call,pam_syslog(pamh, LOG_DEBUG,\n\t\t\t\t\t\t   \"%s %s allowed by %s\",\n\t\t\t\t\t\t   other_user, sense, path))"];
"1000316" [label="(Call,fclose(fp))"];
"1000287" [label="(Call,sizeof(buf))"];
"1000261" [label="(Call,sizeof(buf))"];
"1000258" [label="(Call,fgets(buf, sizeof(buf), fp) != NULL)"];
"1000289" [label="(ControlStructure,if (tmp != NULL))"];
"1000371" [label="(Call,pam_syslog(pamh, LOG_DEBUG,\n\t\t\t\t\t   \"error opening %s: %m\", path))"];
"1000129" [label="(Identifier,pwd)"];
"1000350" [label="(Call,pam_syslog(pamh, LOG_DEBUG,\n\t\t\t\t\t\t   \"%s does not exist, ignoring\",\n\t\t\t\t\t\t   path))"];
"1000283" [label="(Identifier,tmp)"];
"1000321" [label="(Identifier,debug)"];
"1000259" [label="(Call,fgets(buf, sizeof(buf), fp))"];
"1000115" [label="(Call,*fp = NULL)"];
"1000286" [label="(Literal,'\n')"];
"1000290" [label="(Call,tmp != NULL)"];
"1000146" [label="(Identifier,i)"];
"1000329" [label="(Call,fclose(fp))"];
"1000323" [label="(Call,pam_syslog(pamh, LOG_DEBUG, \"%s not listed in %s\",\n\t\t\t\t   other_user, path))"];
"1000284" [label="(Call,memchr(buf, '\n', sizeof(buf)))"];
"1000134" [label="(Call,pwd == NULL)"];
"1000112" [label="(Block,)"];
"1000291" [label="(Identifier,tmp)"];
"1000378" [label="(MethodReturn,RET)"];
"1000280" [label="(Identifier,tmp)"];
"1000267" [label="(Identifier,tmp)"];
"1000135" [label="(Identifier,pwd)"];
"1000121" [label="(Identifier,fd)"];
"1000117" [label="(Identifier,NULL)"];
"1000106" [label="(MethodParameterIn,pam_handle_t *pamh)"];
"1000301" [label="(Identifier,buf)"];
"1000285" [label="(Identifier,buf)"];
"1000257" [label="(ControlStructure,while (fgets(buf, sizeof(buf), fp) != NULL))"];
"1000175" [label="(Call,pam_modutil_drop_priv(pamh, &privs, pwd))"];
"1000266" [label="(Call,tmp = memchr(buf, '\r', sizeof(buf)))"];
"1000258" -> "1000257"  [label="AST: "];
"1000258" -> "1000264"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000264" -> "1000258"  [label="AST: "];
"1000267" -> "1000258"  [label="CFG: "];
"1000321" -> "1000258"  [label="CFG: "];
"1000258" -> "1000378"  [label="DDG: fgets(buf, sizeof(buf), fp)"];
"1000258" -> "1000378"  [label="DDG: NULL"];
"1000258" -> "1000378"  [label="DDG: fgets(buf, sizeof(buf), fp) != NULL"];
"1000259" -> "1000258"  [label="DDG: buf"];
"1000259" -> "1000258"  [label="DDG: fp"];
"1000290" -> "1000258"  [label="DDG: NULL"];
"1000134" -> "1000258"  [label="DDG: NULL"];
"1000258" -> "1000274"  [label="DDG: NULL"];
"1000259" -> "1000263"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000259"  [label="AST: "];
"1000263" -> "1000259"  [label="AST: "];
"1000264" -> "1000259"  [label="CFG: "];
"1000259" -> "1000378"  [label="DDG: buf"];
"1000115" -> "1000259"  [label="DDG: fp"];
"1000259" -> "1000316"  [label="DDG: fp"];
"1000259" -> "1000329"  [label="DDG: fp"];
"1000115" -> "1000112"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000121" -> "1000115"  [label="CFG: "];
"1000115" -> "1000378"  [label="DDG: fp"];
"1000290" -> "1000289"  [label="AST: "];
"1000290" -> "1000292"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000292" -> "1000290"  [label="AST: "];
"1000296" -> "1000290"  [label="CFG: "];
"1000301" -> "1000290"  [label="CFG: "];
"1000290" -> "1000378"  [label="DDG: tmp"];
"1000290" -> "1000378"  [label="DDG: NULL"];
"1000290" -> "1000378"  [label="DDG: tmp != NULL"];
"1000282" -> "1000290"  [label="DDG: tmp"];
"1000274" -> "1000290"  [label="DDG: NULL"];
"1000282" -> "1000265"  [label="AST: "];
"1000282" -> "1000284"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000284" -> "1000282"  [label="AST: "];
"1000291" -> "1000282"  [label="CFG: "];
"1000282" -> "1000378"  [label="DDG: memchr(buf, '\n', sizeof(buf))"];
"1000284" -> "1000282"  [label="DDG: buf"];
"1000284" -> "1000282"  [label="DDG: '\n'"];
"1000284" -> "1000287"  [label="CFG: "];
"1000285" -> "1000284"  [label="AST: "];
"1000286" -> "1000284"  [label="AST: "];
"1000287" -> "1000284"  [label="AST: "];
"1000284" -> "1000300"  [label="DDG: buf"];
"1000274" -> "1000273"  [label="AST: "];
"1000274" -> "1000276"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000276" -> "1000274"  [label="AST: "];
"1000280" -> "1000274"  [label="CFG: "];
"1000283" -> "1000274"  [label="CFG: "];
"1000266" -> "1000274"  [label="DDG: tmp"];
"1000266" -> "1000265"  [label="AST: "];
"1000266" -> "1000268"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="AST: "];
"1000275" -> "1000266"  [label="CFG: "];
"1000266" -> "1000378"  [label="DDG: memchr(buf, '\r', sizeof(buf))"];
"1000268" -> "1000266"  [label="DDG: buf"];
"1000268" -> "1000266"  [label="DDG: '\r'"];
"1000268" -> "1000271"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000270" -> "1000268"  [label="AST: "];
"1000271" -> "1000268"  [label="AST: "];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000139" -> "1000134"  [label="CFG: "];
"1000146" -> "1000134"  [label="CFG: "];
"1000134" -> "1000378"  [label="DDG: pwd == NULL"];
"1000134" -> "1000378"  [label="DDG: pwd"];
"1000134" -> "1000378"  [label="DDG: NULL"];
"1000128" -> "1000134"  [label="DDG: pwd"];
"1000134" -> "1000175"  [label="DDG: pwd"];
"1000128" -> "1000112"  [label="AST: "];
"1000128" -> "1000130"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000128"  [label="AST: "];
"1000135" -> "1000128"  [label="CFG: "];
"1000128" -> "1000378"  [label="DDG: pam_modutil_getpwnam(pamh, this_user)"];
"1000130" -> "1000128"  [label="DDG: pamh"];
"1000130" -> "1000128"  [label="DDG: this_user"];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000130" -> "1000378"  [label="DDG: this_user"];
"1000106" -> "1000130"  [label="DDG: pamh"];
"1000108" -> "1000130"  [label="DDG: this_user"];
"1000130" -> "1000138"  [label="DDG: pamh"];
"1000130" -> "1000138"  [label="DDG: this_user"];
"1000130" -> "1000168"  [label="DDG: pamh"];
"1000130" -> "1000175"  [label="DDG: pamh"];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000378"  [label="DDG: pamh"];
"1000106" -> "1000138"  [label="DDG: pamh"];
"1000106" -> "1000168"  [label="DDG: pamh"];
"1000106" -> "1000175"  [label="DDG: pamh"];
"1000106" -> "1000216"  [label="DDG: pamh"];
"1000106" -> "1000309"  [label="DDG: pamh"];
"1000106" -> "1000323"  [label="DDG: pamh"];
"1000106" -> "1000350"  [label="DDG: pamh"];
"1000106" -> "1000360"  [label="DDG: pamh"];
"1000106" -> "1000371"  [label="DDG: pamh"];
"1000108" -> "1000105"  [label="AST: "];
"1000108" -> "1000378"  [label="DDG: this_user"];
"1000108" -> "1000138"  [label="DDG: this_user"];
}
