digraph "0_altlinux_843807a3a90f52e7538be756616510730a24739a@API" {
"1000138" [label="(Call,pam_syslog(pamh, LOG_ERR,\n\t\t\t   \"error determining home directory for '%s'\",\n\t\t\t   this_user))"];
"1000130" [label="(Call,pam_modutil_getpwnam(pamh, this_user))"];
"1000106" [label="(MethodParameterIn,pam_handle_t *pamh)"];
"1000108" [label="(MethodParameterIn,const char *this_user)"];
"1000141" [label="(Literal,\"error determining home directory for '%s'\")"];
"1000139" [label="(Identifier,pamh)"];
"1000138" [label="(Call,pam_syslog(pamh, LOG_ERR,\n\t\t\t   \"error determining home directory for '%s'\",\n\t\t\t   this_user))"];
"1000168" [label="(Call,pam_syslog(pamh, LOG_ERR,\n                           \"name of user's home directory is too long\"))"];
"1000137" [label="(Block,)"];
"1000108" [label="(MethodParameterIn,const char *this_user)"];
"1000216" [label="(Call,pam_modutil_regain_priv(pamh, &privs))"];
"1000131" [label="(Identifier,pamh)"];
"1000130" [label="(Call,pam_modutil_getpwnam(pamh, this_user))"];
"1000360" [label="(Call,pam_syslog(pamh, LOG_DEBUG,\n\t\t\t\t\t\t   \"%s does not exist, failing\",\n\t\t\t\t\t\t   path))"];
"1000128" [label="(Call,pwd = pam_modutil_getpwnam(pamh, this_user))"];
"1000132" [label="(Identifier,this_user)"];
"1000309" [label="(Call,pam_syslog(pamh, LOG_DEBUG,\n\t\t\t\t\t\t   \"%s %s allowed by %s\",\n\t\t\t\t\t\t   other_user, sense, path))"];
"1000142" [label="(Identifier,this_user)"];
"1000371" [label="(Call,pam_syslog(pamh, LOG_DEBUG,\n\t\t\t\t\t   \"error opening %s: %m\", path))"];
"1000350" [label="(Call,pam_syslog(pamh, LOG_DEBUG,\n\t\t\t\t\t\t   \"%s does not exist, ignoring\",\n\t\t\t\t\t\t   path))"];
"1000144" [label="(Identifier,PAM_SESSION_ERR)"];
"1000323" [label="(Call,pam_syslog(pamh, LOG_DEBUG, \"%s not listed in %s\",\n\t\t\t\t   other_user, path))"];
"1000378" [label="(MethodReturn,RET)"];
"1000106" [label="(MethodParameterIn,pam_handle_t *pamh)"];
"1000140" [label="(Identifier,LOG_ERR)"];
"1000175" [label="(Call,pam_modutil_drop_priv(pamh, &privs, pwd))"];
"1000138" -> "1000137"  [label="AST: "];
"1000138" -> "1000142"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000141" -> "1000138"  [label="AST: "];
"1000142" -> "1000138"  [label="AST: "];
"1000144" -> "1000138"  [label="CFG: "];
"1000138" -> "1000378"  [label="DDG: "];
"1000138" -> "1000378"  [label="DDG: "];
"1000138" -> "1000378"  [label="DDG: "];
"1000138" -> "1000378"  [label="DDG: "];
"1000130" -> "1000138"  [label="DDG: "];
"1000130" -> "1000138"  [label="DDG: "];
"1000106" -> "1000138"  [label="DDG: "];
"1000108" -> "1000138"  [label="DDG: "];
"1000130" -> "1000128"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000128" -> "1000130"  [label="CFG: "];
"1000130" -> "1000378"  [label="DDG: "];
"1000130" -> "1000128"  [label="DDG: "];
"1000130" -> "1000128"  [label="DDG: "];
"1000106" -> "1000130"  [label="DDG: "];
"1000108" -> "1000130"  [label="DDG: "];
"1000130" -> "1000168"  [label="DDG: "];
"1000130" -> "1000175"  [label="DDG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000378"  [label="DDG: "];
"1000106" -> "1000168"  [label="DDG: "];
"1000106" -> "1000175"  [label="DDG: "];
"1000106" -> "1000216"  [label="DDG: "];
"1000106" -> "1000309"  [label="DDG: "];
"1000106" -> "1000323"  [label="DDG: "];
"1000106" -> "1000350"  [label="DDG: "];
"1000106" -> "1000360"  [label="DDG: "];
"1000106" -> "1000371"  [label="DDG: "];
"1000108" -> "1000105"  [label="AST: "];
"1000108" -> "1000378"  [label="DDG: "];
}
