digraph "0_poppler_58e04a08afee39370283c494ee2e4e392fd3b684@pointer" {
"1000573" [label="(Call,gfree(refSegs))"];
"1000211" [label="(Call,refSegs = (Guint *)gmallocn(nRefSegs, sizeof(Guint)))"];
"1000213" [label="(Call,(Guint *)gmallocn(nRefSegs, sizeof(Guint)))"];
"1000215" [label="(Call,gmallocn(nRefSegs, sizeof(Guint)))"];
"1000145" [label="(Call,nRefSegs == 7)"];
"1000139" [label="(Call,nRefSegs = refFlags >> 5)"];
"1000141" [label="(Call,refFlags >> 5)"];
"1000184" [label="(Call,nRefSegs = refFlags & 0x1fffffff)"];
"1000186" [label="(Call,refFlags & 0x1fffffff)"];
"1000169" [label="(Call,refFlags = (refFlags << 24) | (c1 << 16) | (c2 << 8) | c3)"];
"1000171" [label="(Call,(refFlags << 24) | (c1 << 16) | (c2 << 8) | c3)"];
"1000172" [label="(Call,refFlags << 24)"];
"1000175" [label="(Call,(c1 << 16) | (c2 << 8) | c3)"];
"1000176" [label="(Call,c1 << 16)"];
"1000152" [label="(Call,c1 = curStr->getChar())"];
"1000179" [label="(Call,(c2 << 8) | c3)"];
"1000180" [label="(Call,c2 << 8)"];
"1000158" [label="(Call,c2 = curStr->getChar())"];
"1000163" [label="(Call,c3 = curStr->getChar())"];
"1000351" [label="(Call,readSymbolDictSeg(segNum, segLength, refSegs, nRefSegs))"];
"1000458" [label="(Call,readGenericRefinementRegionSeg(segNum, gTrue, gTrue, segLength,\n\t\t\t\t     refSegs, nRefSegs))"];
"1000580" [label="(MethodReturn,void)"];
"1000141" [label="(Call,refFlags >> 5)"];
"1000171" [label="(Call,(refFlags << 24) | (c1 << 16) | (c2 << 8) | c3)"];
"1000176" [label="(Call,c1 << 16)"];
"1000151" [label="(Call,(c1 = curStr->getChar()) == EOF)"];
"1000211" [label="(Call,refSegs = (Guint *)gmallocn(nRefSegs, sizeof(Guint)))"];
"1000147" [label="(Literal,7)"];
"1000253" [label="(Call,i < nRefSegs)"];
"1000146" [label="(Identifier,nRefSegs)"];
"1000153" [label="(Identifier,c1)"];
"1000160" [label="(Call,curStr->getChar())"];
"1000162" [label="(Call,(c3 = curStr->getChar()) == EOF)"];
"1000213" [label="(Call,(Guint *)gmallocn(nRefSegs, sizeof(Guint)))"];
"1000449" [label="(Call,readGenericRefinementRegionSeg(segNum, gTrue, gFalse, segLength,\n\t\t\t\t     refSegs, nRefSegs))"];
"1000574" [label="(Identifier,refSegs)"];
"1000401" [label="(Call,readHalftoneRegionSeg(segNum, gTrue, gFalse, segLength,\n\t\t\t    refSegs, nRefSegs))"];
"1000184" [label="(Call,nRefSegs = refFlags & 0x1fffffff)"];
"1000165" [label="(Call,curStr->getChar())"];
"1000164" [label="(Identifier,c3)"];
"1000440" [label="(Call,readGenericRefinementRegionSeg(segNum, gFalse, gFalse, segLength,\n\t\t\t\t     refSegs, nRefSegs))"];
"1000101" [label="(Block,)"];
"1000152" [label="(Call,c1 = curStr->getChar())"];
"1000274" [label="(Call,i < nRefSegs)"];
"1000180" [label="(Call,c2 << 8)"];
"1000175" [label="(Call,(c1 << 16) | (c2 << 8) | c3)"];
"1000177" [label="(Identifier,c1)"];
"1000195" [label="(Call,(nRefSegs + 9) >> 3)"];
"1000119" [label="(Block,)"];
"1000178" [label="(Literal,16)"];
"1000212" [label="(Identifier,refSegs)"];
"1000392" [label="(Call,readHalftoneRegionSeg(segNum, gFalse, gFalse, segLength,\n\t\t\t    refSegs, nRefSegs))"];
"1000157" [label="(Call,(c2 = curStr->getChar()) == EOF)"];
"1000410" [label="(Call,readHalftoneRegionSeg(segNum, gTrue, gTrue, segLength,\n\t\t\t    refSegs, nRefSegs))"];
"1000139" [label="(Call,nRefSegs = refFlags >> 5)"];
"1000216" [label="(Identifier,nRefSegs)"];
"1000182" [label="(Literal,8)"];
"1000228" [label="(Call,i < nRefSegs)"];
"1000159" [label="(Identifier,c2)"];
"1000170" [label="(Identifier,refFlags)"];
"1000163" [label="(Call,c3 = curStr->getChar())"];
"1000186" [label="(Call,refFlags & 0x1fffffff)"];
"1000161" [label="(Identifier,EOF)"];
"1000143" [label="(Literal,5)"];
"1000360" [label="(Call,readTextRegionSeg(segNum, gFalse, gFalse, segLength, refSegs, nRefSegs))"];
"1000174" [label="(Literal,24)"];
"1000575" [label="(JumpTarget,eofError1:)"];
"1000185" [label="(Identifier,nRefSegs)"];
"1000565" [label="(Call,gfree(refSegs))"];
"1000191" [label="(Identifier,i)"];
"1000166" [label="(Identifier,EOF)"];
"1000188" [label="(Literal,0x1fffffff)"];
"1000378" [label="(Call,readTextRegionSeg(segNum, gTrue, gTrue, segLength, refSegs, nRefSegs))"];
"1000221" [label="(Identifier,segNum)"];
"1000187" [label="(Identifier,refFlags)"];
"1000148" [label="(Block,)"];
"1000173" [label="(Identifier,refFlags)"];
"1000155" [label="(Identifier,EOF)"];
"1000183" [label="(Identifier,c3)"];
"1000158" [label="(Call,c2 = curStr->getChar())"];
"1000179" [label="(Call,(c2 << 8) | c3)"];
"1000145" [label="(Call,nRefSegs == 7)"];
"1000140" [label="(Identifier,nRefSegs)"];
"1000172" [label="(Call,refFlags << 24)"];
"1000169" [label="(Call,refFlags = (refFlags << 24) | (c1 << 16) | (c2 << 8) | c3)"];
"1000215" [label="(Call,gmallocn(nRefSegs, sizeof(Guint)))"];
"1000142" [label="(Identifier,refFlags)"];
"1000154" [label="(Call,curStr->getChar())"];
"1000369" [label="(Call,readTextRegionSeg(segNum, gTrue, gFalse, segLength, refSegs, nRefSegs))"];
"1000573" [label="(Call,gfree(refSegs))"];
"1000196" [label="(Call,nRefSegs + 9)"];
"1000181" [label="(Identifier,c2)"];
"1000217" [label="(Call,sizeof(Guint))"];
"1000569" [label="(Call,gfree(refSegs))"];
"1000144" [label="(ControlStructure,if (nRefSegs == 7))"];
"1000573" -> "1000101"  [label="AST: "];
"1000573" -> "1000574"  [label="CFG: "];
"1000574" -> "1000573"  [label="AST: "];
"1000575" -> "1000573"  [label="CFG: "];
"1000573" -> "1000580"  [label="DDG: refSegs"];
"1000573" -> "1000580"  [label="DDG: gfree(refSegs)"];
"1000211" -> "1000573"  [label="DDG: refSegs"];
"1000211" -> "1000119"  [label="AST: "];
"1000211" -> "1000213"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000213" -> "1000211"  [label="AST: "];
"1000221" -> "1000211"  [label="CFG: "];
"1000211" -> "1000580"  [label="DDG: refSegs"];
"1000211" -> "1000580"  [label="DDG: (Guint *)gmallocn(nRefSegs, sizeof(Guint))"];
"1000213" -> "1000211"  [label="DDG: gmallocn(nRefSegs, sizeof(Guint))"];
"1000211" -> "1000351"  [label="DDG: refSegs"];
"1000211" -> "1000360"  [label="DDG: refSegs"];
"1000211" -> "1000369"  [label="DDG: refSegs"];
"1000211" -> "1000378"  [label="DDG: refSegs"];
"1000211" -> "1000392"  [label="DDG: refSegs"];
"1000211" -> "1000401"  [label="DDG: refSegs"];
"1000211" -> "1000410"  [label="DDG: refSegs"];
"1000211" -> "1000440"  [label="DDG: refSegs"];
"1000211" -> "1000449"  [label="DDG: refSegs"];
"1000211" -> "1000458"  [label="DDG: refSegs"];
"1000211" -> "1000565"  [label="DDG: refSegs"];
"1000211" -> "1000569"  [label="DDG: refSegs"];
"1000213" -> "1000215"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000215" -> "1000213"  [label="AST: "];
"1000213" -> "1000580"  [label="DDG: gmallocn(nRefSegs, sizeof(Guint))"];
"1000215" -> "1000213"  [label="DDG: nRefSegs"];
"1000215" -> "1000217"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000217" -> "1000215"  [label="AST: "];
"1000145" -> "1000215"  [label="DDG: nRefSegs"];
"1000184" -> "1000215"  [label="DDG: nRefSegs"];
"1000215" -> "1000228"  [label="DDG: nRefSegs"];
"1000215" -> "1000253"  [label="DDG: nRefSegs"];
"1000215" -> "1000274"  [label="DDG: nRefSegs"];
"1000145" -> "1000144"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000153" -> "1000145"  [label="CFG: "];
"1000212" -> "1000145"  [label="CFG: "];
"1000145" -> "1000580"  [label="DDG: nRefSegs == 7"];
"1000145" -> "1000580"  [label="DDG: nRefSegs"];
"1000139" -> "1000145"  [label="DDG: nRefSegs"];
"1000139" -> "1000119"  [label="AST: "];
"1000139" -> "1000141"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="AST: "];
"1000146" -> "1000139"  [label="CFG: "];
"1000139" -> "1000580"  [label="DDG: refFlags >> 5"];
"1000141" -> "1000139"  [label="DDG: refFlags"];
"1000141" -> "1000139"  [label="DDG: 5"];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000141" -> "1000580"  [label="DDG: refFlags"];
"1000141" -> "1000172"  [label="DDG: refFlags"];
"1000184" -> "1000148"  [label="AST: "];
"1000184" -> "1000186"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000186" -> "1000184"  [label="AST: "];
"1000191" -> "1000184"  [label="CFG: "];
"1000184" -> "1000580"  [label="DDG: refFlags & 0x1fffffff"];
"1000186" -> "1000184"  [label="DDG: refFlags"];
"1000186" -> "1000184"  [label="DDG: 0x1fffffff"];
"1000184" -> "1000195"  [label="DDG: nRefSegs"];
"1000184" -> "1000196"  [label="DDG: nRefSegs"];
"1000186" -> "1000188"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000188" -> "1000186"  [label="AST: "];
"1000186" -> "1000580"  [label="DDG: refFlags"];
"1000169" -> "1000186"  [label="DDG: refFlags"];
"1000169" -> "1000148"  [label="AST: "];
"1000169" -> "1000171"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000171" -> "1000169"  [label="AST: "];
"1000185" -> "1000169"  [label="CFG: "];
"1000169" -> "1000580"  [label="DDG: (refFlags << 24) | (c1 << 16) | (c2 << 8) | c3"];
"1000171" -> "1000169"  [label="DDG: refFlags << 24"];
"1000171" -> "1000169"  [label="DDG: (c1 << 16) | (c2 << 8) | c3"];
"1000171" -> "1000175"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000175" -> "1000171"  [label="AST: "];
"1000171" -> "1000580"  [label="DDG: refFlags << 24"];
"1000171" -> "1000580"  [label="DDG: (c1 << 16) | (c2 << 8) | c3"];
"1000172" -> "1000171"  [label="DDG: refFlags"];
"1000172" -> "1000171"  [label="DDG: 24"];
"1000175" -> "1000171"  [label="DDG: c1 << 16"];
"1000175" -> "1000171"  [label="DDG: (c2 << 8) | c3"];
"1000172" -> "1000174"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000174" -> "1000172"  [label="AST: "];
"1000177" -> "1000172"  [label="CFG: "];
"1000175" -> "1000179"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000179" -> "1000175"  [label="AST: "];
"1000175" -> "1000580"  [label="DDG: (c2 << 8) | c3"];
"1000175" -> "1000580"  [label="DDG: c1 << 16"];
"1000176" -> "1000175"  [label="DDG: c1"];
"1000176" -> "1000175"  [label="DDG: 16"];
"1000179" -> "1000175"  [label="DDG: c2 << 8"];
"1000179" -> "1000175"  [label="DDG: c3"];
"1000176" -> "1000178"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000178" -> "1000176"  [label="AST: "];
"1000181" -> "1000176"  [label="CFG: "];
"1000176" -> "1000580"  [label="DDG: c1"];
"1000152" -> "1000176"  [label="DDG: c1"];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000154"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000155" -> "1000152"  [label="CFG: "];
"1000152" -> "1000580"  [label="DDG: c1"];
"1000152" -> "1000580"  [label="DDG: curStr->getChar()"];
"1000152" -> "1000151"  [label="DDG: c1"];
"1000179" -> "1000183"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000183" -> "1000179"  [label="AST: "];
"1000179" -> "1000580"  [label="DDG: c2 << 8"];
"1000179" -> "1000580"  [label="DDG: c3"];
"1000180" -> "1000179"  [label="DDG: c2"];
"1000180" -> "1000179"  [label="DDG: 8"];
"1000163" -> "1000179"  [label="DDG: c3"];
"1000180" -> "1000182"  [label="CFG: "];
"1000181" -> "1000180"  [label="AST: "];
"1000182" -> "1000180"  [label="AST: "];
"1000183" -> "1000180"  [label="CFG: "];
"1000180" -> "1000580"  [label="DDG: c2"];
"1000158" -> "1000180"  [label="DDG: c2"];
"1000158" -> "1000157"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000161" -> "1000158"  [label="CFG: "];
"1000158" -> "1000580"  [label="DDG: c2"];
"1000158" -> "1000580"  [label="DDG: curStr->getChar()"];
"1000158" -> "1000157"  [label="DDG: c2"];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000165"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000165" -> "1000163"  [label="AST: "];
"1000166" -> "1000163"  [label="CFG: "];
"1000163" -> "1000580"  [label="DDG: c3"];
"1000163" -> "1000580"  [label="DDG: curStr->getChar()"];
"1000163" -> "1000162"  [label="DDG: c3"];
}
