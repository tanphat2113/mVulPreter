digraph "0_poppler_58e04a08afee39370283c494ee2e4e392fd3b684@API" {
"1000419" [label="(Call,readGenericRegionSeg(segNum, gFalse, gFalse, segLength))"];
"1000220" [label="(Call,segNum <= 256)"];
"1000245" [label="(Call,segNum <= 65536)"];
"1000512" [label="(Call,segLength != 0xffffffff)"];
"1000521" [label="(Call,segLength - curStr->getPos())"];
"1000517" [label="(Call,segExtraBytes = segDataPos + segLength - curStr->getPos())"];
"1000525" [label="(Call,segExtraBytes > 0)"];
"1000535" [label="(Call,segExtraBytes > 1)"];
"1000529" [label="(Call,error(errSyntaxError, curStr->getPos(), \"{0:lld} extraneous byte{1:s} after segment\",\n \t      segExtraBytes, (segExtraBytes > 1) ? \"s\" : \"\"))"];
"1000543" [label="(Call,i = segExtraBytes)"];
"1000546" [label="(Call,i > 0)"];
"1000549" [label="(Call,i--)"];
"1000557" [label="(Call,segExtraBytes < 0)"];
"1000519" [label="(Call,segDataPos + segLength - curStr->getPos())"];
"1000347" [label="(Block,)"];
"1000539" [label="(Literal,\"\")"];
"1000422" [label="(Identifier,gFalse)"];
"1000351" [label="(Call,readSymbolDictSeg(segNum, segLength, refSegs, nRefSegs))"];
"1000554" [label="(Identifier,trash)"];
"1000458" [label="(Call,readGenericRefinementRegionSeg(segNum, gTrue, gTrue, segLength,\n\t\t\t\t     refSegs, nRefSegs))"];
"1000419" [label="(Call,readGenericRegionSeg(segNum, gFalse, gFalse, segLength))"];
"1000580" [label="(MethodReturn,void)"];
"1000421" [label="(Identifier,gFalse)"];
"1000433" [label="(Call,readGenericRegionSeg(segNum, gTrue, gTrue, segLength))"];
"1000467" [label="(Call,readPageInfoSeg(segLength))"];
"1000536" [label="(Identifier,segExtraBytes)"];
"1000219" [label="(ControlStructure,if (segNum <= 256))"];
"1000387" [label="(Call,readPatternDictSeg(segNum, segLength))"];
"1000401" [label="(Call,readHalftoneRegionSeg(segNum, gTrue, gFalse, segLength,\n\t\t\t    refSegs, nRefSegs))"];
"1000449" [label="(Call,readGenericRefinementRegionSeg(segNum, gTrue, gFalse, segLength,\n\t\t\t\t     refSegs, nRefSegs))"];
"1000519" [label="(Call,segDataPos + segLength - curStr->getPos())"];
"1000317" [label="(Call,segDataPos = curStr->getPos())"];
"1000518" [label="(Identifier,segExtraBytes)"];
"1000525" [label="(Call,segExtraBytes > 0)"];
"1000550" [label="(Identifier,i)"];
"1000440" [label="(Call,readGenericRefinementRegionSeg(segNum, gFalse, gFalse, segLength,\n\t\t\t\t     refSegs, nRefSegs))"];
"1000559" [label="(Literal,0)"];
"1000543" [label="(Call,i = segExtraBytes)"];
"1000513" [label="(Identifier,segLength)"];
"1000532" [label="(Literal,\"{0:lld} extraneous byte{1:s} after segment\")"];
"1000479" [label="(Call,readCodeTableSeg(segNum, segLength))"];
"1000392" [label="(Call,readHalftoneRegionSeg(segNum, gFalse, gFalse, segLength,\n\t\t\t    refSegs, nRefSegs))"];
"1000537" [label="(Literal,1)"];
"1000541" [label="(ControlStructure,for (Goffset i = segExtraBytes; i > 0; i--))"];
"1000410" [label="(Call,readHalftoneRegionSeg(segNum, gTrue, gTrue, segLength,\n\t\t\t    refSegs, nRefSegs))"];
"1000548" [label="(Literal,0)"];
"1000512" [label="(Call,segLength != 0xffffffff)"];
"1000529" [label="(Call,error(errSyntaxError, curStr->getPos(), \"{0:lld} extraneous byte{1:s} after segment\",\n \t      segExtraBytes, (segExtraBytes > 1) ? \"s\" : \"\"))"];
"1000566" [label="(Identifier,refSegs)"];
"1000544" [label="(Identifier,i)"];
"1000272" [label="(Identifier,i)"];
"1000535" [label="(Call,segExtraBytes > 1)"];
"1000557" [label="(Call,segExtraBytes < 0)"];
"1000528" [label="(Block,)"];
"1000424" [label="(ControlStructure,break;)"];
"1000531" [label="(Call,curStr->getPos())"];
"1000245" [label="(Call,segNum <= 65536)"];
"1000360" [label="(Call,readTextRegionSeg(segNum, gFalse, gFalse, segLength, refSegs, nRefSegs))"];
"1000533" [label="(Identifier,segExtraBytes)"];
"1000521" [label="(Call,segLength - curStr->getPos())"];
"1000523" [label="(Call,curStr->getPos())"];
"1000526" [label="(Identifier,segExtraBytes)"];
"1000534" [label="(Call,(segExtraBytes > 1) ? \"s\" : \"\")"];
"1000496" [label="(Call,i < segLength)"];
"1000520" [label="(Identifier,segDataPos)"];
"1000546" [label="(Call,i > 0)"];
"1000378" [label="(Call,readTextRegionSeg(segNum, gTrue, gTrue, segLength, refSegs, nRefSegs))"];
"1000221" [label="(Identifier,segNum)"];
"1000484" [label="(Call,readExtensionSeg(segLength))"];
"1000247" [label="(Literal,65536)"];
"1000522" [label="(Identifier,segLength)"];
"1000547" [label="(Identifier,i)"];
"1000562" [label="(Identifier,errSyntaxError)"];
"1000549" [label="(Call,i--)"];
"1000426" [label="(Call,readGenericRegionSeg(segNum, gTrue, gFalse, segLength))"];
"1000222" [label="(Literal,256)"];
"1000220" [label="(Call,segNum <= 256)"];
"1000511" [label="(ControlStructure,if (segLength != 0xffffffff))"];
"1000524" [label="(ControlStructure,if (segExtraBytes > 0))"];
"1000517" [label="(Call,segExtraBytes = segDataPos + segLength - curStr->getPos())"];
"1000226" [label="(Identifier,i)"];
"1000545" [label="(Identifier,segExtraBytes)"];
"1000538" [label="(Literal,\"s\")"];
"1000246" [label="(Identifier,segNum)"];
"1000471" [label="(Call,readEndOfStripeSeg(segLength))"];
"1000475" [label="(Call,readProfilesSeg(segLength))"];
"1000527" [label="(Literal,0)"];
"1000420" [label="(Identifier,segNum)"];
"1000530" [label="(Identifier,errSyntaxError)"];
"1000556" [label="(ControlStructure,if (segExtraBytes < 0))"];
"1000515" [label="(Block,)"];
"1000369" [label="(Call,readTextRegionSeg(segNum, gTrue, gFalse, segLength, refSegs, nRefSegs))"];
"1000244" [label="(ControlStructure,if (segNum <= 65536))"];
"1000558" [label="(Identifier,segExtraBytes)"];
"1000251" [label="(Identifier,i)"];
"1000514" [label="(Literal,0xffffffff)"];
"1000423" [label="(Identifier,segLength)"];
"1000488" [label="(Call,error(errSyntaxError, curStr->getPos(), \"Unknown segment type in JBIG2 stream\"))"];
"1000419" -> "1000347"  [label="AST: "];
"1000419" -> "1000423"  [label="CFG: "];
"1000420" -> "1000419"  [label="AST: "];
"1000421" -> "1000419"  [label="AST: "];
"1000422" -> "1000419"  [label="AST: "];
"1000423" -> "1000419"  [label="AST: "];
"1000424" -> "1000419"  [label="CFG: "];
"1000419" -> "1000580"  [label="DDG: segNum"];
"1000419" -> "1000580"  [label="DDG: segLength"];
"1000419" -> "1000580"  [label="DDG: gFalse"];
"1000419" -> "1000580"  [label="DDG: readGenericRegionSeg(segNum, gFalse, gFalse, segLength)"];
"1000220" -> "1000419"  [label="DDG: segNum"];
"1000245" -> "1000419"  [label="DDG: segNum"];
"1000419" -> "1000512"  [label="DDG: segLength"];
"1000220" -> "1000219"  [label="AST: "];
"1000220" -> "1000222"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000222" -> "1000220"  [label="AST: "];
"1000226" -> "1000220"  [label="CFG: "];
"1000246" -> "1000220"  [label="CFG: "];
"1000220" -> "1000580"  [label="DDG: segNum"];
"1000220" -> "1000580"  [label="DDG: segNum <= 256"];
"1000220" -> "1000245"  [label="DDG: segNum"];
"1000220" -> "1000351"  [label="DDG: segNum"];
"1000220" -> "1000360"  [label="DDG: segNum"];
"1000220" -> "1000369"  [label="DDG: segNum"];
"1000220" -> "1000378"  [label="DDG: segNum"];
"1000220" -> "1000387"  [label="DDG: segNum"];
"1000220" -> "1000392"  [label="DDG: segNum"];
"1000220" -> "1000401"  [label="DDG: segNum"];
"1000220" -> "1000410"  [label="DDG: segNum"];
"1000220" -> "1000426"  [label="DDG: segNum"];
"1000220" -> "1000433"  [label="DDG: segNum"];
"1000220" -> "1000440"  [label="DDG: segNum"];
"1000220" -> "1000449"  [label="DDG: segNum"];
"1000220" -> "1000458"  [label="DDG: segNum"];
"1000220" -> "1000479"  [label="DDG: segNum"];
"1000245" -> "1000244"  [label="AST: "];
"1000245" -> "1000247"  [label="CFG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000247" -> "1000245"  [label="AST: "];
"1000251" -> "1000245"  [label="CFG: "];
"1000272" -> "1000245"  [label="CFG: "];
"1000245" -> "1000580"  [label="DDG: segNum <= 65536"];
"1000245" -> "1000580"  [label="DDG: segNum"];
"1000245" -> "1000351"  [label="DDG: segNum"];
"1000245" -> "1000360"  [label="DDG: segNum"];
"1000245" -> "1000369"  [label="DDG: segNum"];
"1000245" -> "1000378"  [label="DDG: segNum"];
"1000245" -> "1000387"  [label="DDG: segNum"];
"1000245" -> "1000392"  [label="DDG: segNum"];
"1000245" -> "1000401"  [label="DDG: segNum"];
"1000245" -> "1000410"  [label="DDG: segNum"];
"1000245" -> "1000426"  [label="DDG: segNum"];
"1000245" -> "1000433"  [label="DDG: segNum"];
"1000245" -> "1000440"  [label="DDG: segNum"];
"1000245" -> "1000449"  [label="DDG: segNum"];
"1000245" -> "1000458"  [label="DDG: segNum"];
"1000245" -> "1000479"  [label="DDG: segNum"];
"1000512" -> "1000511"  [label="AST: "];
"1000512" -> "1000514"  [label="CFG: "];
"1000513" -> "1000512"  [label="AST: "];
"1000514" -> "1000512"  [label="AST: "];
"1000518" -> "1000512"  [label="CFG: "];
"1000566" -> "1000512"  [label="CFG: "];
"1000392" -> "1000512"  [label="DDG: segLength"];
"1000401" -> "1000512"  [label="DDG: segLength"];
"1000360" -> "1000512"  [label="DDG: segLength"];
"1000467" -> "1000512"  [label="DDG: segLength"];
"1000351" -> "1000512"  [label="DDG: segLength"];
"1000369" -> "1000512"  [label="DDG: segLength"];
"1000449" -> "1000512"  [label="DDG: segLength"];
"1000378" -> "1000512"  [label="DDG: segLength"];
"1000458" -> "1000512"  [label="DDG: segLength"];
"1000479" -> "1000512"  [label="DDG: segLength"];
"1000426" -> "1000512"  [label="DDG: segLength"];
"1000433" -> "1000512"  [label="DDG: segLength"];
"1000387" -> "1000512"  [label="DDG: segLength"];
"1000496" -> "1000512"  [label="DDG: segLength"];
"1000471" -> "1000512"  [label="DDG: segLength"];
"1000410" -> "1000512"  [label="DDG: segLength"];
"1000475" -> "1000512"  [label="DDG: segLength"];
"1000484" -> "1000512"  [label="DDG: segLength"];
"1000440" -> "1000512"  [label="DDG: segLength"];
"1000512" -> "1000521"  [label="DDG: segLength"];
"1000521" -> "1000519"  [label="AST: "];
"1000521" -> "1000523"  [label="CFG: "];
"1000522" -> "1000521"  [label="AST: "];
"1000523" -> "1000521"  [label="AST: "];
"1000519" -> "1000521"  [label="CFG: "];
"1000521" -> "1000517"  [label="DDG: segLength"];
"1000521" -> "1000517"  [label="DDG: curStr->getPos()"];
"1000521" -> "1000519"  [label="DDG: segLength"];
"1000521" -> "1000519"  [label="DDG: curStr->getPos()"];
"1000517" -> "1000515"  [label="AST: "];
"1000517" -> "1000519"  [label="CFG: "];
"1000518" -> "1000517"  [label="AST: "];
"1000519" -> "1000517"  [label="AST: "];
"1000526" -> "1000517"  [label="CFG: "];
"1000317" -> "1000517"  [label="DDG: segDataPos"];
"1000517" -> "1000525"  [label="DDG: segExtraBytes"];
"1000525" -> "1000524"  [label="AST: "];
"1000525" -> "1000527"  [label="CFG: "];
"1000526" -> "1000525"  [label="AST: "];
"1000527" -> "1000525"  [label="AST: "];
"1000530" -> "1000525"  [label="CFG: "];
"1000558" -> "1000525"  [label="CFG: "];
"1000525" -> "1000535"  [label="DDG: segExtraBytes"];
"1000525" -> "1000557"  [label="DDG: segExtraBytes"];
"1000535" -> "1000534"  [label="AST: "];
"1000535" -> "1000537"  [label="CFG: "];
"1000536" -> "1000535"  [label="AST: "];
"1000537" -> "1000535"  [label="AST: "];
"1000538" -> "1000535"  [label="CFG: "];
"1000539" -> "1000535"  [label="CFG: "];
"1000535" -> "1000529"  [label="DDG: segExtraBytes"];
"1000529" -> "1000528"  [label="AST: "];
"1000529" -> "1000534"  [label="CFG: "];
"1000530" -> "1000529"  [label="AST: "];
"1000531" -> "1000529"  [label="AST: "];
"1000532" -> "1000529"  [label="AST: "];
"1000533" -> "1000529"  [label="AST: "];
"1000534" -> "1000529"  [label="AST: "];
"1000544" -> "1000529"  [label="CFG: "];
"1000488" -> "1000529"  [label="DDG: errSyntaxError"];
"1000529" -> "1000543"  [label="DDG: segExtraBytes"];
"1000543" -> "1000541"  [label="AST: "];
"1000543" -> "1000545"  [label="CFG: "];
"1000544" -> "1000543"  [label="AST: "];
"1000545" -> "1000543"  [label="AST: "];
"1000547" -> "1000543"  [label="CFG: "];
"1000543" -> "1000546"  [label="DDG: i"];
"1000546" -> "1000541"  [label="AST: "];
"1000546" -> "1000548"  [label="CFG: "];
"1000547" -> "1000546"  [label="AST: "];
"1000548" -> "1000546"  [label="AST: "];
"1000554" -> "1000546"  [label="CFG: "];
"1000566" -> "1000546"  [label="CFG: "];
"1000549" -> "1000546"  [label="DDG: i"];
"1000546" -> "1000549"  [label="DDG: i"];
"1000549" -> "1000541"  [label="AST: "];
"1000549" -> "1000550"  [label="CFG: "];
"1000550" -> "1000549"  [label="AST: "];
"1000547" -> "1000549"  [label="CFG: "];
"1000557" -> "1000556"  [label="AST: "];
"1000557" -> "1000559"  [label="CFG: "];
"1000558" -> "1000557"  [label="AST: "];
"1000559" -> "1000557"  [label="AST: "];
"1000562" -> "1000557"  [label="CFG: "];
"1000566" -> "1000557"  [label="CFG: "];
"1000520" -> "1000519"  [label="AST: "];
"1000317" -> "1000519"  [label="DDG: segDataPos"];
}
