digraph "1_lxc_592fd47a6245508b79fe6ac819fe6d3b2c1289be_5@pointer" {
"1000123" [label="(Call,INFO(\"failed to mount '%s' on '%s' (optional): %s\", fsname,\n \t\t\t     target, strerror(errno)))"];
"1000111" [label="(Call,mount(fsname, target, fstype, mountflags & ~MS_REMOUNT, data))"];
"1000102" [label="(MethodParameterIn,const char *fsname)"];
"1000103" [label="(MethodParameterIn,const char *target)"];
"1000104" [label="(MethodParameterIn,const char *fstype)"];
"1000115" [label="(Call,mountflags & ~MS_REMOUNT)"];
"1000105" [label="(MethodParameterIn,unsigned long mountflags)"];
"1000106" [label="(MethodParameterIn,const char *data)"];
"1000127" [label="(Call,strerror(errno))"];
"1000218" [label="(Call,DEBUG(\"(at remount) flags for %s was %lu, required extra flags are %lu\", fsname, sb.f_flag, required_flags))"];
"1000142" [label="(Call,mountflags & MS_REMOUNT)"];
"1000253" [label="(Call,mountflags | MS_REMOUNT)"];
"1000118" [label="(Identifier,data)"];
"1000130" [label="(Literal,0)"];
"1000149" [label="(Call,DEBUG(\"remounting %s on %s to respect bind or remount options\",\n\t\t      fsname ? fsname : \"(none)\", target ? target : \"(none)\"))"];
"1000111" [label="(Call,mount(fsname, target, fstype, mountflags & ~MS_REMOUNT, data))"];
"1000113" [label="(Identifier,target)"];
"1000271" [label="(Call,SYSERROR(\"failed to mount '%s' on '%s'\",\n\t\t\t\t\t fsname, target))"];
"1000114" [label="(Identifier,fstype)"];
"1000245" [label="(Call,mountflags |= required_flags)"];
"1000286" [label="(MethodReturn,static int)"];
"1000106" [label="(MethodParameterIn,const char *data)"];
"1000172" [label="(Call,statvfs(fsname, &sb))"];
"1000105" [label="(MethodParameterIn,unsigned long mountflags)"];
"1000125" [label="(Identifier,fsname)"];
"1000143" [label="(Identifier,mountflags)"];
"1000103" [label="(MethodParameterIn,const char *target)"];
"1000122" [label="(Block,)"];
"1000115" [label="(Call,mountflags & ~MS_REMOUNT)"];
"1000155" [label="(Call,target ? target : \"(none)\")"];
"1000104" [label="(MethodParameterIn,const char *fstype)"];
"1000102" [label="(MethodParameterIn,const char *fsname)"];
"1000241" [label="(Call,DEBUG(\"mountflags already was %lu, skipping remount\",\n\t\t\t\t\t\tmountflags))"];
"1000126" [label="(Identifier,target)"];
"1000117" [label="(Identifier,~MS_REMOUNT)"];
"1000110" [label="(ControlStructure,if (mount(fsname, target, fstype, mountflags & ~MS_REMOUNT, data)))"];
"1000124" [label="(Literal,\"failed to mount '%s' on '%s' (optional): %s\")"];
"1000123" [label="(Call,INFO(\"failed to mount '%s' on '%s' (optional): %s\", fsname,\n \t\t\t     target, strerror(errno)))"];
"1000128" [label="(Identifier,errno)"];
"1000116" [label="(Identifier,mountflags)"];
"1000133" [label="(Call,SYSERROR(\"failed to mount '%s' on '%s'\", fsname, target))"];
"1000227" [label="(Call,mountflags & MS_REMOUNT)"];
"1000127" [label="(Call,strerror(errno))"];
"1000261" [label="(Call,INFO(\"failed to mount '%s' on '%s' (optional): %s\",\n \t\t\t\t\t fsname, target, strerror(errno)))"];
"1000164" [label="(Call,mountflags & MS_RDONLY)"];
"1000112" [label="(Identifier,fsname)"];
"1000121" [label="(Identifier,optional)"];
"1000279" [label="(Call,DEBUG(\"mounted '%s' on '%s', type '%s'\", fsname, target, fstype))"];
"1000249" [label="(Call,mount(fsname, target, fstype,\n\t\t\t  mountflags | MS_REMOUNT, data))"];
"1000145" [label="(Call,mountflags & MS_BIND)"];
"1000151" [label="(Call,fsname ? fsname : \"(none)\")"];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000127"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000126" -> "1000123"  [label="AST: "];
"1000127" -> "1000123"  [label="AST: "];
"1000130" -> "1000123"  [label="CFG: "];
"1000123" -> "1000286"  [label="DDG: "];
"1000123" -> "1000286"  [label="DDG: "];
"1000123" -> "1000286"  [label="DDG: "];
"1000123" -> "1000286"  [label="DDG: "];
"1000111" -> "1000123"  [label="DDG: "];
"1000111" -> "1000123"  [label="DDG: "];
"1000102" -> "1000123"  [label="DDG: "];
"1000103" -> "1000123"  [label="DDG: "];
"1000127" -> "1000123"  [label="DDG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000118"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000113" -> "1000111"  [label="AST: "];
"1000114" -> "1000111"  [label="AST: "];
"1000115" -> "1000111"  [label="AST: "];
"1000118" -> "1000111"  [label="AST: "];
"1000121" -> "1000111"  [label="CFG: "];
"1000143" -> "1000111"  [label="CFG: "];
"1000111" -> "1000286"  [label="DDG: "];
"1000111" -> "1000286"  [label="DDG: "];
"1000111" -> "1000286"  [label="DDG: "];
"1000111" -> "1000286"  [label="DDG: "];
"1000102" -> "1000111"  [label="DDG: "];
"1000103" -> "1000111"  [label="DDG: "];
"1000104" -> "1000111"  [label="DDG: "];
"1000115" -> "1000111"  [label="DDG: "];
"1000115" -> "1000111"  [label="DDG: "];
"1000106" -> "1000111"  [label="DDG: "];
"1000111" -> "1000133"  [label="DDG: "];
"1000111" -> "1000133"  [label="DDG: "];
"1000111" -> "1000149"  [label="DDG: "];
"1000111" -> "1000149"  [label="DDG: "];
"1000111" -> "1000151"  [label="DDG: "];
"1000111" -> "1000155"  [label="DDG: "];
"1000111" -> "1000172"  [label="DDG: "];
"1000111" -> "1000249"  [label="DDG: "];
"1000111" -> "1000249"  [label="DDG: "];
"1000111" -> "1000249"  [label="DDG: "];
"1000111" -> "1000279"  [label="DDG: "];
"1000111" -> "1000279"  [label="DDG: "];
"1000111" -> "1000279"  [label="DDG: "];
"1000102" -> "1000101"  [label="AST: "];
"1000102" -> "1000286"  [label="DDG: "];
"1000102" -> "1000133"  [label="DDG: "];
"1000102" -> "1000149"  [label="DDG: "];
"1000102" -> "1000151"  [label="DDG: "];
"1000102" -> "1000172"  [label="DDG: "];
"1000102" -> "1000218"  [label="DDG: "];
"1000102" -> "1000249"  [label="DDG: "];
"1000102" -> "1000261"  [label="DDG: "];
"1000102" -> "1000271"  [label="DDG: "];
"1000102" -> "1000279"  [label="DDG: "];
"1000103" -> "1000101"  [label="AST: "];
"1000103" -> "1000286"  [label="DDG: "];
"1000103" -> "1000133"  [label="DDG: "];
"1000103" -> "1000149"  [label="DDG: "];
"1000103" -> "1000155"  [label="DDG: "];
"1000103" -> "1000249"  [label="DDG: "];
"1000103" -> "1000261"  [label="DDG: "];
"1000103" -> "1000271"  [label="DDG: "];
"1000103" -> "1000279"  [label="DDG: "];
"1000104" -> "1000101"  [label="AST: "];
"1000104" -> "1000286"  [label="DDG: "];
"1000104" -> "1000249"  [label="DDG: "];
"1000104" -> "1000279"  [label="DDG: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000118" -> "1000115"  [label="CFG: "];
"1000115" -> "1000286"  [label="DDG: "];
"1000115" -> "1000286"  [label="DDG: "];
"1000105" -> "1000115"  [label="DDG: "];
"1000115" -> "1000142"  [label="DDG: "];
"1000105" -> "1000101"  [label="AST: "];
"1000105" -> "1000286"  [label="DDG: "];
"1000105" -> "1000142"  [label="DDG: "];
"1000105" -> "1000145"  [label="DDG: "];
"1000105" -> "1000164"  [label="DDG: "];
"1000105" -> "1000227"  [label="DDG: "];
"1000105" -> "1000241"  [label="DDG: "];
"1000105" -> "1000245"  [label="DDG: "];
"1000105" -> "1000253"  [label="DDG: "];
"1000106" -> "1000101"  [label="AST: "];
"1000106" -> "1000286"  [label="DDG: "];
"1000106" -> "1000249"  [label="DDG: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000127" -> "1000286"  [label="DDG: "];
}
