digraph "0_savannah_8fcf61523644df42e1905c81bed26838e0b04f91@pointer" {
"1001041" [label="(Call,only_matching || *match_color)"];
"1001027" [label="(Call,only_matching && matching)"];
"1000979" [label="(Call,!only_matching)"];
"1000985" [label="(Call,matching = (sep == SEP_CHAR_SELECTED) ^ !!out_invert)"];
"1000987" [label="(Call,(sep == SEP_CHAR_SELECTED) ^ !!out_invert)"];
"1000988" [label="(Call,sep == SEP_CHAR_SELECTED)"];
"1000981" [label="(Call,print_line_head (beg, lim, sep))"];
"1000991" [label="(Call,!!out_invert)"];
"1000992" [label="(Call,!out_invert)"];
"1001032" [label="(Call,*line_color || *match_color)"];
"1001039" [label="(Call,matching && (only_matching || *match_color))"];
"1001054" [label="(Call,!only_matching)"];
"1001053" [label="(Call,!only_matching && *line_color)"];
"1001066" [label="(Call,!only_matching)"];
"1001065" [label="(Call,!only_matching && lim > beg)"];
"1001054" [label="(Call,!only_matching)"];
"1001119" [label="(Call,lim - lastout)"];
"1000981" [label="(Call,print_line_head (beg, lim, sep))"];
"1000993" [label="(Identifier,out_invert)"];
"1001174" [label="(Call,prpending (beg))"];
"1001040" [label="(Identifier,matching)"];
"1001038" [label="(ControlStructure,if (matching && (only_matching || *match_color)))"];
"1001052" [label="(ControlStructure,if (!only_matching && *line_color))"];
"1001056" [label="(Call,*line_color)"];
"1000980" [label="(Identifier,only_matching)"];
"1001028" [label="(Identifier,only_matching)"];
"1001281" [label="(Call,prline (p, nl, SEP_CHAR_SELECTED))"];
"1001074" [label="(Call,lim - beg)"];
"1001069" [label="(Identifier,lim)"];
"1001072" [label="(Identifier,beg)"];
"1001027" [label="(Call,only_matching && matching)"];
"1001064" [label="(ControlStructure,if (!only_matching && lim > beg))"];
"1001408" [label="(MethodReturn,RET)"];
"1000987" [label="(Call,(sep == SEP_CHAR_SELECTED) ^ !!out_invert)"];
"1001065" [label="(Call,!only_matching && lim > beg)"];
"1000989" [label="(Identifier,sep)"];
"1001033" [label="(Call,*line_color)"];
"1000991" [label="(Call,!!out_invert)"];
"1000992" [label="(Call,!out_invert)"];
"1001066" [label="(Call,!only_matching)"];
"1001057" [label="(Identifier,line_color)"];
"1001090" [label="(Call,lastout = lim)"];
"1001109" [label="(Call,lastout < lim)"];
"1001055" [label="(Identifier,only_matching)"];
"1001026" [label="(Call,(only_matching && matching)\n      || (color_option  && (*line_color || *match_color)))"];
"1001029" [label="(Identifier,matching)"];
"1000986" [label="(Identifier,matching)"];
"1000984" [label="(Identifier,sep)"];
"1000982" [label="(Identifier,beg)"];
"1001080" [label="(Identifier,stdout)"];
"1001032" [label="(Call,*line_color || *match_color)"];
"1001068" [label="(Call,lim > beg)"];
"1001042" [label="(Identifier,only_matching)"];
"1000978" [label="(ControlStructure,if (!only_matching))"];
"1001004" [label="(Call,out_invert && (color_option < 0))"];
"1001144" [label="(Call,!out_invert)"];
"1001030" [label="(Call,color_option  && (*line_color || *match_color))"];
"1001031" [label="(Identifier,color_option)"];
"1001053" [label="(Call,!only_matching && *line_color)"];
"1000983" [label="(Identifier,lim)"];
"1000974" [label="(Block,)"];
"1001041" [label="(Call,only_matching || *match_color)"];
"1000995" [label="(Identifier,color_option)"];
"1001060" [label="(Call,print_line_tail (beg, lim, line_color))"];
"1001228" [label="(Call,p < beg)"];
"1001035" [label="(Call,*match_color)"];
"1001046" [label="(Identifier,beg)"];
"1001303" [label="(Call,prline (beg, lim, SEP_CHAR_SELECTED))"];
"1001258" [label="(Call,p < lim)"];
"1001067" [label="(Identifier,only_matching)"];
"1000985" [label="(Call,matching = (sep == SEP_CHAR_SELECTED) ^ !!out_invert)"];
"1000988" [label="(Call,sep == SEP_CHAR_SELECTED)"];
"1000979" [label="(Call,!only_matching)"];
"1001043" [label="(Call,*match_color)"];
"1001047" [label="(Call,print_line_middle (beg, lim, line_color, match_color))"];
"1001001" [label="(Call,sep == SEP_CHAR_SELECTED)"];
"1001039" [label="(Call,matching && (only_matching || *match_color))"];
"1000990" [label="(Identifier,SEP_CHAR_SELECTED)"];
"1001059" [label="(Identifier,beg)"];
"1001041" -> "1001039"  [label="AST: "];
"1001041" -> "1001042"  [label="CFG: "];
"1001041" -> "1001043"  [label="CFG: "];
"1001042" -> "1001041"  [label="AST: "];
"1001043" -> "1001041"  [label="AST: "];
"1001039" -> "1001041"  [label="CFG: "];
"1001041" -> "1001408"  [label="DDG: *match_color"];
"1001041" -> "1001039"  [label="DDG: only_matching"];
"1001041" -> "1001039"  [label="DDG: *match_color"];
"1001027" -> "1001041"  [label="DDG: only_matching"];
"1001032" -> "1001041"  [label="DDG: *match_color"];
"1001041" -> "1001054"  [label="DDG: only_matching"];
"1001027" -> "1001026"  [label="AST: "];
"1001027" -> "1001028"  [label="CFG: "];
"1001027" -> "1001029"  [label="CFG: "];
"1001028" -> "1001027"  [label="AST: "];
"1001029" -> "1001027"  [label="AST: "];
"1001031" -> "1001027"  [label="CFG: "];
"1001026" -> "1001027"  [label="CFG: "];
"1001027" -> "1001408"  [label="DDG: matching"];
"1001027" -> "1001026"  [label="DDG: only_matching"];
"1001027" -> "1001026"  [label="DDG: matching"];
"1000979" -> "1001027"  [label="DDG: only_matching"];
"1000985" -> "1001027"  [label="DDG: matching"];
"1001027" -> "1001039"  [label="DDG: matching"];
"1001027" -> "1001054"  [label="DDG: only_matching"];
"1001027" -> "1001066"  [label="DDG: only_matching"];
"1000979" -> "1000978"  [label="AST: "];
"1000979" -> "1000980"  [label="CFG: "];
"1000980" -> "1000979"  [label="AST: "];
"1000982" -> "1000979"  [label="CFG: "];
"1000986" -> "1000979"  [label="CFG: "];
"1000985" -> "1000974"  [label="AST: "];
"1000985" -> "1000987"  [label="CFG: "];
"1000986" -> "1000985"  [label="AST: "];
"1000987" -> "1000985"  [label="AST: "];
"1000995" -> "1000985"  [label="CFG: "];
"1000985" -> "1001408"  [label="DDG: (sep == SEP_CHAR_SELECTED) ^ !!out_invert"];
"1000987" -> "1000985"  [label="DDG: sep == SEP_CHAR_SELECTED"];
"1000987" -> "1000985"  [label="DDG: !!out_invert"];
"1000987" -> "1000991"  [label="CFG: "];
"1000988" -> "1000987"  [label="AST: "];
"1000991" -> "1000987"  [label="AST: "];
"1000987" -> "1001408"  [label="DDG: sep == SEP_CHAR_SELECTED"];
"1000987" -> "1001408"  [label="DDG: !!out_invert"];
"1000988" -> "1000987"  [label="DDG: sep"];
"1000988" -> "1000987"  [label="DDG: SEP_CHAR_SELECTED"];
"1000991" -> "1000987"  [label="DDG: !out_invert"];
"1000988" -> "1000990"  [label="CFG: "];
"1000989" -> "1000988"  [label="AST: "];
"1000990" -> "1000988"  [label="AST: "];
"1000993" -> "1000988"  [label="CFG: "];
"1000988" -> "1001408"  [label="DDG: sep"];
"1000988" -> "1001408"  [label="DDG: SEP_CHAR_SELECTED"];
"1000981" -> "1000988"  [label="DDG: sep"];
"1000988" -> "1001001"  [label="DDG: sep"];
"1000988" -> "1001001"  [label="DDG: SEP_CHAR_SELECTED"];
"1000988" -> "1001281"  [label="DDG: SEP_CHAR_SELECTED"];
"1000988" -> "1001303"  [label="DDG: SEP_CHAR_SELECTED"];
"1000981" -> "1000978"  [label="AST: "];
"1000981" -> "1000984"  [label="CFG: "];
"1000982" -> "1000981"  [label="AST: "];
"1000983" -> "1000981"  [label="AST: "];
"1000984" -> "1000981"  [label="AST: "];
"1000986" -> "1000981"  [label="CFG: "];
"1000981" -> "1001408"  [label="DDG: print_line_head (beg, lim, sep)"];
"1000981" -> "1001047"  [label="DDG: beg"];
"1000981" -> "1001047"  [label="DDG: lim"];
"1000981" -> "1001060"  [label="DDG: beg"];
"1000981" -> "1001060"  [label="DDG: lim"];
"1000981" -> "1001068"  [label="DDG: lim"];
"1000981" -> "1001068"  [label="DDG: beg"];
"1000981" -> "1001074"  [label="DDG: lim"];
"1000981" -> "1001074"  [label="DDG: beg"];
"1000981" -> "1001090"  [label="DDG: lim"];
"1000981" -> "1001109"  [label="DDG: lim"];
"1000981" -> "1001119"  [label="DDG: lim"];
"1000981" -> "1001174"  [label="DDG: beg"];
"1000981" -> "1001228"  [label="DDG: beg"];
"1000981" -> "1001258"  [label="DDG: lim"];
"1000981" -> "1001303"  [label="DDG: lim"];
"1000991" -> "1000992"  [label="CFG: "];
"1000992" -> "1000991"  [label="AST: "];
"1000991" -> "1001408"  [label="DDG: !out_invert"];
"1000992" -> "1000991"  [label="DDG: out_invert"];
"1000992" -> "1000993"  [label="CFG: "];
"1000993" -> "1000992"  [label="AST: "];
"1000992" -> "1001408"  [label="DDG: out_invert"];
"1000992" -> "1001004"  [label="DDG: out_invert"];
"1000992" -> "1001144"  [label="DDG: out_invert"];
"1001032" -> "1001030"  [label="AST: "];
"1001032" -> "1001033"  [label="CFG: "];
"1001032" -> "1001035"  [label="CFG: "];
"1001033" -> "1001032"  [label="AST: "];
"1001035" -> "1001032"  [label="AST: "];
"1001030" -> "1001032"  [label="CFG: "];
"1001032" -> "1001408"  [label="DDG: *match_color"];
"1001032" -> "1001408"  [label="DDG: *line_color"];
"1001032" -> "1001030"  [label="DDG: *line_color"];
"1001032" -> "1001030"  [label="DDG: *match_color"];
"1001032" -> "1001053"  [label="DDG: *line_color"];
"1001039" -> "1001038"  [label="AST: "];
"1001039" -> "1001040"  [label="CFG: "];
"1001040" -> "1001039"  [label="AST: "];
"1001046" -> "1001039"  [label="CFG: "];
"1001055" -> "1001039"  [label="CFG: "];
"1001039" -> "1001408"  [label="DDG: only_matching || *match_color"];
"1001039" -> "1001408"  [label="DDG: matching"];
"1001039" -> "1001408"  [label="DDG: matching && (only_matching || *match_color)"];
"1001054" -> "1001053"  [label="AST: "];
"1001054" -> "1001055"  [label="CFG: "];
"1001055" -> "1001054"  [label="AST: "];
"1001057" -> "1001054"  [label="CFG: "];
"1001053" -> "1001054"  [label="CFG: "];
"1001054" -> "1001053"  [label="DDG: only_matching"];
"1001054" -> "1001066"  [label="DDG: only_matching"];
"1001053" -> "1001052"  [label="AST: "];
"1001053" -> "1001056"  [label="CFG: "];
"1001056" -> "1001053"  [label="AST: "];
"1001059" -> "1001053"  [label="CFG: "];
"1001067" -> "1001053"  [label="CFG: "];
"1001053" -> "1001408"  [label="DDG: *line_color"];
"1001053" -> "1001408"  [label="DDG: !only_matching && *line_color"];
"1001066" -> "1001065"  [label="AST: "];
"1001066" -> "1001067"  [label="CFG: "];
"1001067" -> "1001066"  [label="AST: "];
"1001069" -> "1001066"  [label="CFG: "];
"1001065" -> "1001066"  [label="CFG: "];
"1001066" -> "1001408"  [label="DDG: only_matching"];
"1001066" -> "1001065"  [label="DDG: only_matching"];
"1001065" -> "1001064"  [label="AST: "];
"1001065" -> "1001068"  [label="CFG: "];
"1001068" -> "1001065"  [label="AST: "];
"1001072" -> "1001065"  [label="CFG: "];
"1001080" -> "1001065"  [label="CFG: "];
"1001065" -> "1001408"  [label="DDG: !only_matching"];
"1001065" -> "1001408"  [label="DDG: !only_matching && lim > beg"];
"1001065" -> "1001408"  [label="DDG: lim > beg"];
"1001068" -> "1001065"  [label="DDG: lim"];
"1001068" -> "1001065"  [label="DDG: beg"];
}
