digraph "0_yara_992480c30f75943e9cd6245bb2015c7737f9b661_0@integer" {
"1000133" [label="(Call,match_offset = match_data - callback_args->data)"];
"1000135" [label="(Call,match_data - callback_args->data)"];
"1000102" [label="(MethodParameterIn,uint8_t* match_data)"];
"1000146" [label="(Call,match_offset + match_length <= callback_args->data_size)"];
"1000145" [label="(Call,assert(match_offset + match_length <= callback_args->data_size))"];
"1000184" [label="(Call,match_offset + match_length + 1 < callback_args->data_size)"];
"1000183" [label="(Call,match_offset + match_length + 1 < callback_args->data_size &&\n          *(match_data + match_length + 1) == 0 &&\n          isalnum(*(match_data + match_length)))"];
"1000225" [label="(Call,match_offset + match_length < callback_args->data_size)"];
"1000224" [label="(Call,match_offset + match_length < callback_args->data_size &&\n          isalnum(*(match_data + match_length)))"];
"1000147" [label="(Call,match_offset + match_length)"];
"1000165" [label="(Call,match_offset >= 2)"];
"1000164" [label="(Call,match_offset >= 2 &&\n          *(match_data - 1) == 0 &&\n          isalnum(*(match_data - 2)))"];
"1000185" [label="(Call,match_offset + match_length + 1)"];
"1000245" [label="(Call,_yr_scan_verify_chained_string_match(\n        string,\n        callback_args->context,\n        match_data,\n        callback_args->data_base,\n        match_offset,\n        match_length))"];
"1000243" [label="(Call,result = _yr_scan_verify_chained_string_match(\n        string,\n        callback_args->context,\n        match_data,\n        callback_args->data_base,\n        match_offset,\n        match_length))"];
"1000361" [label="(Return,return result;)"];
"1000330" [label="(Call,new_match->offset = match_offset)"];
"1000213" [label="(Call,match_offset >= 1)"];
"1000212" [label="(Call,match_offset >= 1 &&\n          isalnum(*(match_data - 1)))"];
"1000226" [label="(Call,match_offset + match_length)"];
"1000222" [label="(Identifier,ERROR_SUCCESS)"];
"1000240" [label="(Call,STRING_IS_CHAIN_PART(string))"];
"1000183" [label="(Call,match_offset + match_length + 1 < callback_args->data_size &&\n          *(match_data + match_length + 1) == 0 &&\n          isalnum(*(match_data + match_length)))"];
"1000219" [label="(Identifier,match_data)"];
"1000186" [label="(Identifier,match_offset)"];
"1000235" [label="(Identifier,match_data)"];
"1000302" [label="(Call,yr_arena_write_data(\n        callback_args->context->matches_arena,\n        match_data,\n        new_match->data_length,\n        (void**) &new_match->data))"];
"1000208" [label="(Identifier,ERROR_SUCCESS)"];
"1000133" [label="(Call,match_offset = match_data - callback_args->data)"];
"1000134" [label="(Identifier,match_offset)"];
"1000166" [label="(Identifier,match_offset)"];
"1000140" [label="(Call,match_length += callback_args->forward_matches)"];
"1000363" [label="(MethodReturn,int)"];
"1000227" [label="(Identifier,match_offset)"];
"1000172" [label="(Identifier,match_data)"];
"1000211" [label="(ControlStructure,if (match_offset >= 1 &&\n          isalnum(*(match_data - 1))))"];
"1000230" [label="(Identifier,callback_args)"];
"1000250" [label="(Identifier,match_data)"];
"1000232" [label="(Call,isalnum(*(match_data + match_length)))"];
"1000241" [label="(Identifier,string)"];
"1000331" [label="(Call,new_match->offset)"];
"1000151" [label="(Identifier,callback_args)"];
"1000255" [label="(Identifier,match_length)"];
"1000246" [label="(Identifier,string)"];
"1000181" [label="(Identifier,ERROR_SUCCESS)"];
"1000223" [label="(ControlStructure,if (match_offset + match_length < callback_args->data_size &&\n          isalnum(*(match_data + match_length))))"];
"1000322" [label="(Block,)"];
"1000185" [label="(Call,match_offset + match_length + 1)"];
"1000137" [label="(Call,callback_args->data)"];
"1000135" [label="(Call,match_data - callback_args->data)"];
"1000204" [label="(Call,match_data + match_length)"];
"1000165" [label="(Call,match_offset >= 2)"];
"1000215" [label="(Literal,1)"];
"1000171" [label="(Call,match_data - 1)"];
"1000164" [label="(Call,match_offset >= 2 &&\n          *(match_data - 1) == 0 &&\n          isalnum(*(match_data - 2)))"];
"1000361" [label="(Return,return result;)"];
"1000163" [label="(ControlStructure,if (match_offset >= 2 &&\n          *(match_data - 1) == 0 &&\n          isalnum(*(match_data - 2))))"];
"1000243" [label="(Call,result = _yr_scan_verify_chained_string_match(\n        string,\n        callback_args->context,\n        match_data,\n        callback_args->data_base,\n        match_offset,\n        match_length))"];
"1000147" [label="(Call,match_offset + match_length)"];
"1000177" [label="(Call,match_data - 2)"];
"1000216" [label="(Call,isalnum(*(match_data - 1)))"];
"1000149" [label="(Identifier,match_length)"];
"1000242" [label="(Block,)"];
"1000244" [label="(Identifier,result)"];
"1000168" [label="(Call,*(match_data - 1) == 0 &&\n          isalnum(*(match_data - 2)))"];
"1000238" [label="(Identifier,ERROR_SUCCESS)"];
"1000190" [label="(Call,callback_args->data_size)"];
"1000254" [label="(Identifier,match_offset)"];
"1000193" [label="(Call,*(match_data + match_length + 1) == 0 &&\n          isalnum(*(match_data + match_length)))"];
"1000251" [label="(Call,callback_args->data_base)"];
"1000226" [label="(Call,match_offset + match_length)"];
"1000330" [label="(Call,new_match->offset = match_offset)"];
"1000150" [label="(Call,callback_args->data_size)"];
"1000319" [label="(Call,result == ERROR_SUCCESS)"];
"1000167" [label="(Literal,2)"];
"1000145" [label="(Call,assert(match_offset + match_length <= callback_args->data_size))"];
"1000245" [label="(Call,_yr_scan_verify_chained_string_match(\n        string,\n        callback_args->context,\n        match_data,\n        callback_args->data_base,\n        match_offset,\n        match_length))"];
"1000103" [label="(MethodParameterIn,int32_t match_length)"];
"1000197" [label="(Identifier,match_data)"];
"1000234" [label="(Call,match_data + match_length)"];
"1000337" [label="(Identifier,new_match)"];
"1000334" [label="(Identifier,match_offset)"];
"1000136" [label="(Identifier,match_data)"];
"1000155" [label="(Identifier,callback_args)"];
"1000187" [label="(Call,match_length + 1)"];
"1000148" [label="(Identifier,match_offset)"];
"1000212" [label="(Call,match_offset >= 1 &&\n          isalnum(*(match_data - 1)))"];
"1000184" [label="(Call,match_offset + match_length + 1 < callback_args->data_size)"];
"1000218" [label="(Call,match_data - 1)"];
"1000214" [label="(Identifier,match_offset)"];
"1000229" [label="(Call,callback_args->data_size)"];
"1000228" [label="(Identifier,match_length)"];
"1000102" [label="(MethodParameterIn,uint8_t* match_data)"];
"1000196" [label="(Call,match_data + match_length + 1)"];
"1000225" [label="(Call,match_offset + match_length < callback_args->data_size)"];
"1000141" [label="(Identifier,match_length)"];
"1000247" [label="(Call,callback_args->context)"];
"1000362" [label="(Identifier,result)"];
"1000182" [label="(ControlStructure,if (match_offset + match_length + 1 < callback_args->data_size &&\n          *(match_data + match_length + 1) == 0 &&\n          isalnum(*(match_data + match_length))))"];
"1000106" [label="(Block,)"];
"1000224" [label="(Call,match_offset + match_length < callback_args->data_size &&\n          isalnum(*(match_data + match_length)))"];
"1000191" [label="(Identifier,callback_args)"];
"1000146" [label="(Call,match_offset + match_length <= callback_args->data_size)"];
"1000213" [label="(Call,match_offset >= 1)"];
"1000133" -> "1000106"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000141" -> "1000133"  [label="CFG: "];
"1000133" -> "1000363"  [label="DDG: match_data - callback_args->data"];
"1000135" -> "1000133"  [label="DDG: match_data"];
"1000135" -> "1000133"  [label="DDG: callback_args->data"];
"1000133" -> "1000146"  [label="DDG: match_offset"];
"1000133" -> "1000147"  [label="DDG: match_offset"];
"1000133" -> "1000165"  [label="DDG: match_offset"];
"1000133" -> "1000213"  [label="DDG: match_offset"];
"1000133" -> "1000245"  [label="DDG: match_offset"];
"1000133" -> "1000330"  [label="DDG: match_offset"];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000135" -> "1000363"  [label="DDG: match_data"];
"1000135" -> "1000363"  [label="DDG: callback_args->data"];
"1000102" -> "1000135"  [label="DDG: match_data"];
"1000135" -> "1000171"  [label="DDG: match_data"];
"1000135" -> "1000196"  [label="DDG: match_data"];
"1000135" -> "1000204"  [label="DDG: match_data"];
"1000135" -> "1000218"  [label="DDG: match_data"];
"1000135" -> "1000234"  [label="DDG: match_data"];
"1000135" -> "1000245"  [label="DDG: match_data"];
"1000135" -> "1000302"  [label="DDG: match_data"];
"1000102" -> "1000101"  [label="AST: "];
"1000102" -> "1000363"  [label="DDG: match_data"];
"1000102" -> "1000171"  [label="DDG: match_data"];
"1000102" -> "1000177"  [label="DDG: match_data"];
"1000102" -> "1000196"  [label="DDG: match_data"];
"1000102" -> "1000204"  [label="DDG: match_data"];
"1000102" -> "1000218"  [label="DDG: match_data"];
"1000102" -> "1000234"  [label="DDG: match_data"];
"1000102" -> "1000245"  [label="DDG: match_data"];
"1000102" -> "1000302"  [label="DDG: match_data"];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000150"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000150" -> "1000146"  [label="AST: "];
"1000145" -> "1000146"  [label="CFG: "];
"1000146" -> "1000363"  [label="DDG: callback_args->data_size"];
"1000146" -> "1000363"  [label="DDG: match_offset + match_length"];
"1000146" -> "1000145"  [label="DDG: match_offset + match_length"];
"1000146" -> "1000145"  [label="DDG: callback_args->data_size"];
"1000140" -> "1000146"  [label="DDG: match_length"];
"1000103" -> "1000146"  [label="DDG: match_length"];
"1000146" -> "1000184"  [label="DDG: callback_args->data_size"];
"1000146" -> "1000225"  [label="DDG: callback_args->data_size"];
"1000145" -> "1000106"  [label="AST: "];
"1000155" -> "1000145"  [label="CFG: "];
"1000145" -> "1000363"  [label="DDG: assert(match_offset + match_length <= callback_args->data_size)"];
"1000145" -> "1000363"  [label="DDG: match_offset + match_length <= callback_args->data_size"];
"1000184" -> "1000183"  [label="AST: "];
"1000184" -> "1000190"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000190" -> "1000184"  [label="AST: "];
"1000197" -> "1000184"  [label="CFG: "];
"1000183" -> "1000184"  [label="CFG: "];
"1000184" -> "1000363"  [label="DDG: match_offset + match_length + 1"];
"1000184" -> "1000363"  [label="DDG: callback_args->data_size"];
"1000184" -> "1000183"  [label="DDG: match_offset + match_length + 1"];
"1000184" -> "1000183"  [label="DDG: callback_args->data_size"];
"1000165" -> "1000184"  [label="DDG: match_offset"];
"1000103" -> "1000184"  [label="DDG: match_length"];
"1000140" -> "1000184"  [label="DDG: match_length"];
"1000183" -> "1000182"  [label="AST: "];
"1000183" -> "1000193"  [label="CFG: "];
"1000193" -> "1000183"  [label="AST: "];
"1000208" -> "1000183"  [label="CFG: "];
"1000241" -> "1000183"  [label="CFG: "];
"1000183" -> "1000363"  [label="DDG: match_offset + match_length + 1 < callback_args->data_size"];
"1000183" -> "1000363"  [label="DDG: *(match_data + match_length + 1) == 0 &&\n          isalnum(*(match_data + match_length))"];
"1000183" -> "1000363"  [label="DDG: match_offset + match_length + 1 < callback_args->data_size &&\n          *(match_data + match_length + 1) == 0 &&\n          isalnum(*(match_data + match_length))"];
"1000193" -> "1000183"  [label="DDG: *(match_data + match_length + 1) == 0"];
"1000193" -> "1000183"  [label="DDG: isalnum(*(match_data + match_length))"];
"1000225" -> "1000224"  [label="AST: "];
"1000225" -> "1000229"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000229" -> "1000225"  [label="AST: "];
"1000235" -> "1000225"  [label="CFG: "];
"1000224" -> "1000225"  [label="CFG: "];
"1000225" -> "1000363"  [label="DDG: match_offset + match_length"];
"1000225" -> "1000363"  [label="DDG: callback_args->data_size"];
"1000225" -> "1000224"  [label="DDG: match_offset + match_length"];
"1000225" -> "1000224"  [label="DDG: callback_args->data_size"];
"1000213" -> "1000225"  [label="DDG: match_offset"];
"1000103" -> "1000225"  [label="DDG: match_length"];
"1000140" -> "1000225"  [label="DDG: match_length"];
"1000224" -> "1000223"  [label="AST: "];
"1000224" -> "1000232"  [label="CFG: "];
"1000232" -> "1000224"  [label="AST: "];
"1000238" -> "1000224"  [label="CFG: "];
"1000241" -> "1000224"  [label="CFG: "];
"1000224" -> "1000363"  [label="DDG: match_offset + match_length < callback_args->data_size"];
"1000224" -> "1000363"  [label="DDG: isalnum(*(match_data + match_length))"];
"1000224" -> "1000363"  [label="DDG: match_offset + match_length < callback_args->data_size &&\n          isalnum(*(match_data + match_length))"];
"1000232" -> "1000224"  [label="DDG: *(match_data + match_length)"];
"1000147" -> "1000149"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000151" -> "1000147"  [label="CFG: "];
"1000147" -> "1000363"  [label="DDG: match_length"];
"1000147" -> "1000363"  [label="DDG: match_offset"];
"1000140" -> "1000147"  [label="DDG: match_length"];
"1000103" -> "1000147"  [label="DDG: match_length"];
"1000165" -> "1000164"  [label="AST: "];
"1000165" -> "1000167"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000167" -> "1000165"  [label="AST: "];
"1000172" -> "1000165"  [label="CFG: "];
"1000164" -> "1000165"  [label="CFG: "];
"1000165" -> "1000363"  [label="DDG: match_offset"];
"1000165" -> "1000164"  [label="DDG: match_offset"];
"1000165" -> "1000164"  [label="DDG: 2"];
"1000165" -> "1000185"  [label="DDG: match_offset"];
"1000165" -> "1000245"  [label="DDG: match_offset"];
"1000165" -> "1000330"  [label="DDG: match_offset"];
"1000164" -> "1000163"  [label="AST: "];
"1000164" -> "1000168"  [label="CFG: "];
"1000168" -> "1000164"  [label="AST: "];
"1000181" -> "1000164"  [label="CFG: "];
"1000186" -> "1000164"  [label="CFG: "];
"1000164" -> "1000363"  [label="DDG: match_offset >= 2 &&\n          *(match_data - 1) == 0 &&\n          isalnum(*(match_data - 2))"];
"1000164" -> "1000363"  [label="DDG: *(match_data - 1) == 0 &&\n          isalnum(*(match_data - 2))"];
"1000164" -> "1000363"  [label="DDG: match_offset >= 2"];
"1000168" -> "1000164"  [label="DDG: *(match_data - 1) == 0"];
"1000168" -> "1000164"  [label="DDG: isalnum(*(match_data - 2))"];
"1000185" -> "1000187"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="AST: "];
"1000191" -> "1000185"  [label="CFG: "];
"1000185" -> "1000363"  [label="DDG: match_offset"];
"1000185" -> "1000363"  [label="DDG: match_length + 1"];
"1000103" -> "1000185"  [label="DDG: match_length"];
"1000140" -> "1000185"  [label="DDG: match_length"];
"1000245" -> "1000243"  [label="AST: "];
"1000245" -> "1000255"  [label="CFG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000247" -> "1000245"  [label="AST: "];
"1000250" -> "1000245"  [label="AST: "];
"1000251" -> "1000245"  [label="AST: "];
"1000254" -> "1000245"  [label="AST: "];
"1000255" -> "1000245"  [label="AST: "];
"1000243" -> "1000245"  [label="CFG: "];
"1000245" -> "1000363"  [label="DDG: callback_args->data_base"];
"1000245" -> "1000363"  [label="DDG: match_length"];
"1000245" -> "1000363"  [label="DDG: match_offset"];
"1000245" -> "1000363"  [label="DDG: match_data"];
"1000245" -> "1000363"  [label="DDG: string"];
"1000245" -> "1000363"  [label="DDG: callback_args->context"];
"1000245" -> "1000243"  [label="DDG: callback_args->context"];
"1000245" -> "1000243"  [label="DDG: match_length"];
"1000245" -> "1000243"  [label="DDG: callback_args->data_base"];
"1000245" -> "1000243"  [label="DDG: string"];
"1000245" -> "1000243"  [label="DDG: match_offset"];
"1000245" -> "1000243"  [label="DDG: match_data"];
"1000240" -> "1000245"  [label="DDG: string"];
"1000177" -> "1000245"  [label="DDG: match_data"];
"1000171" -> "1000245"  [label="DDG: match_data"];
"1000218" -> "1000245"  [label="DDG: match_data"];
"1000213" -> "1000245"  [label="DDG: match_offset"];
"1000103" -> "1000245"  [label="DDG: match_length"];
"1000140" -> "1000245"  [label="DDG: match_length"];
"1000243" -> "1000242"  [label="AST: "];
"1000244" -> "1000243"  [label="AST: "];
"1000362" -> "1000243"  [label="CFG: "];
"1000243" -> "1000363"  [label="DDG: result"];
"1000243" -> "1000363"  [label="DDG: _yr_scan_verify_chained_string_match(\n        string,\n        callback_args->context,\n        match_data,\n        callback_args->data_base,\n        match_offset,\n        match_length)"];
"1000243" -> "1000361"  [label="DDG: result"];
"1000361" -> "1000106"  [label="AST: "];
"1000361" -> "1000362"  [label="CFG: "];
"1000362" -> "1000361"  [label="AST: "];
"1000363" -> "1000361"  [label="CFG: "];
"1000361" -> "1000363"  [label="DDG: <RET>"];
"1000362" -> "1000361"  [label="DDG: result"];
"1000319" -> "1000361"  [label="DDG: result"];
"1000330" -> "1000322"  [label="AST: "];
"1000330" -> "1000334"  [label="CFG: "];
"1000331" -> "1000330"  [label="AST: "];
"1000334" -> "1000330"  [label="AST: "];
"1000337" -> "1000330"  [label="CFG: "];
"1000330" -> "1000363"  [label="DDG: match_offset"];
"1000330" -> "1000363"  [label="DDG: new_match->offset"];
"1000213" -> "1000330"  [label="DDG: match_offset"];
"1000213" -> "1000212"  [label="AST: "];
"1000213" -> "1000215"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000215" -> "1000213"  [label="AST: "];
"1000219" -> "1000213"  [label="CFG: "];
"1000212" -> "1000213"  [label="CFG: "];
"1000213" -> "1000363"  [label="DDG: match_offset"];
"1000213" -> "1000212"  [label="DDG: match_offset"];
"1000213" -> "1000212"  [label="DDG: 1"];
"1000213" -> "1000226"  [label="DDG: match_offset"];
"1000212" -> "1000211"  [label="AST: "];
"1000212" -> "1000216"  [label="CFG: "];
"1000216" -> "1000212"  [label="AST: "];
"1000222" -> "1000212"  [label="CFG: "];
"1000227" -> "1000212"  [label="CFG: "];
"1000212" -> "1000363"  [label="DDG: isalnum(*(match_data - 1))"];
"1000212" -> "1000363"  [label="DDG: match_offset >= 1 &&\n          isalnum(*(match_data - 1))"];
"1000212" -> "1000363"  [label="DDG: match_offset >= 1"];
"1000216" -> "1000212"  [label="DDG: *(match_data - 1)"];
"1000226" -> "1000228"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000228" -> "1000226"  [label="AST: "];
"1000230" -> "1000226"  [label="CFG: "];
"1000226" -> "1000363"  [label="DDG: match_offset"];
"1000226" -> "1000363"  [label="DDG: match_length"];
"1000103" -> "1000226"  [label="DDG: match_length"];
"1000140" -> "1000226"  [label="DDG: match_length"];
}
