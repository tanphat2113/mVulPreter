digraph "0_qemu_6a83f8b5bec6f59e56cc49bd49e4c3f8f805d56f_0@pointer" {
"1000556" [label="(Call,report_unsupported_feature(bs, errp, feature_table,\n                                   s->incompatible_features &\n                                   ~QCOW2_INCOMPAT_MASK))"];
"1000547" [label="(Call,qcow2_read_extensions(bs, header.header_length, ext_end,\n                              &feature_table, NULL))"];
"1000122" [label="(MethodParameterIn,BlockDriverState *bs)"];
"1000391" [label="(Call,be32_to_cpus(&header.header_length))"];
"1000440" [label="(Call,header.header_length - sizeof(header))"];
"1000429" [label="(Call,header.header_length > sizeof(header))"];
"1000412" [label="(Call,header.header_length > s->cluster_size)"];
"1000364" [label="(Call,header.header_length            = 72)"];
"1000397" [label="(Call,header.header_length < 104)"];
"1000317" [label="(Call,s->cluster_size = 1 << s->cluster_bits)"];
"1000321" [label="(Call,1 << s->cluster_bits)"];
"1000310" [label="(Call,s->cluster_bits = header.cluster_bits)"];
"1000293" [label="(Call,header.cluster_bits > MAX_CLUSTER_BITS)"];
"1000199" [label="(Call,be32_to_cpus(&header.cluster_bits))"];
"1000288" [label="(Call,header.cluster_bits < MIN_CLUSTER_BITS)"];
"1000508" [label="(Call,ext_end = 1 << header.cluster_bits)"];
"1000510" [label="(Call,1 << header.cluster_bits)"];
"1000501" [label="(Call,ext_end = header.backing_file_offset)"];
"1000184" [label="(Call,be64_to_cpus(&header.backing_file_offset))"];
"1000480" [label="(Call,header.backing_file_offset > s->cluster_size)"];
"1000125" [label="(MethodParameterIn,Error **errp)"];
"1000544" [label="(Call,*feature_table = NULL)"];
"1000560" [label="(Call,s->incompatible_features &\n                                   ~QCOW2_INCOMPAT_MASK)"];
"1000537" [label="(Call,s->incompatible_features & ~QCOW2_INCOMPAT_MASK)"];
"1000515" [label="(Call,s->incompatible_features    = header.incompatible_features)"];
"1000371" [label="(Call,be64_to_cpus(&header.incompatible_features))"];
"1000344" [label="(Call,header.incompatible_features    = 0)"];
"1000569" [label="(Call,g_free(feature_table))"];
"1001438" [label="(Call,cleanup_unknown_header_ext(bs))"];
"1001440" [label="(Call,qcow2_free_snapshots(bs))"];
"1001442" [label="(Call,qcow2_refcount_close(bs))"];
"1001458" [label="(Call,qcow2_cache_destroy(bs, s->l2_table_cache))"];
"1001468" [label="(Call,qcow2_cache_destroy(bs, s->refcount_block_cache))"];
"1000501" [label="(Call,ext_end = header.backing_file_offset)"];
"1001112" [label="(Call,error_setg_errno(errp, -ret, \"Could not read backing file name\"))"];
"1000546" [label="(Identifier,NULL)"];
"1000371" [label="(Call,be64_to_cpus(&header.incompatible_features))"];
"1000604" [label="(Call,report_unsupported(bs, errp, \"%d bit reference counts\",\n                           1 << header.refcount_order))"];
"1000392" [label="(Call,&header.header_length)"];
"1000946" [label="(Call,error_setg_errno(errp, -ret, \"Could not read L1 table\"))"];
"1000538" [label="(Call,s->incompatible_features)"];
"1000482" [label="(Identifier,header)"];
"1000484" [label="(Call,s->cluster_size)"];
"1000498" [label="(Identifier,header)"];
"1000199" [label="(Call,be32_to_cpus(&header.cluster_bits))"];
"1000777" [label="(Call,error_setg(errp, \"Too many snapshots\"))"];
"1001148" [label="(Call,error_setg_errno(errp, -ret, \"Could not read snapshots\"))"];
"1000542" [label="(Block,)"];
"1000297" [label="(Identifier,MAX_CLUSTER_BITS)"];
"1001438" [label="(Call,cleanup_unknown_header_ext(bs))"];
"1000192" [label="(Identifier,header)"];
"1000125" [label="(MethodParameterIn,Error **errp)"];
"1001458" [label="(Call,qcow2_cache_destroy(bs, s->l2_table_cache))"];
"1000292" [label="(Identifier,MIN_CLUSTER_BITS)"];
"1000473" [label="(Call,error_setg_errno(errp, -ret, \"Could not read unknown qcow2 header \"\n                             \"fields\"))"];
"1001459" [label="(Identifier,bs)"];
"1001026" [label="(Call,error_setg_errno(errp, -ret, \"Could not initialize refcount handling\"))"];
"1000345" [label="(Call,header.incompatible_features)"];
"1000391" [label="(Call,be32_to_cpus(&header.header_length))"];
"1001443" [label="(Identifier,bs)"];
"1000440" [label="(Call,header.header_length - sizeof(header))"];
"1000396" [label="(ControlStructure,if (header.header_length < 104))"];
"1000398" [label="(Call,header.header_length)"];
"1001440" [label="(Call,qcow2_free_snapshots(bs))"];
"1000537" [label="(Call,s->incompatible_features & ~QCOW2_INCOMPAT_MASK)"];
"1000344" [label="(Call,header.incompatible_features    = 0)"];
"1000892" [label="(Call,error_setg(errp, \"Invalid L1 table offset\"))"];
"1001053" [label="(Call,error_propagate(errp, local_err))"];
"1001483" [label="(MethodReturn,static int)"];
"1001467" [label="(Block,)"];
"1000512" [label="(Call,header.cluster_bits)"];
"1000438" [label="(Identifier,s)"];
"1000508" [label="(Call,ext_end = 1 << header.cluster_bits)"];
"1000479" [label="(ControlStructure,if (header.backing_file_offset > s->cluster_size))"];
"1000436" [label="(Call,s->unknown_header_fields_size = header.header_length - sizeof(header))"];
"1000982" [label="(Call,qcow2_cache_create(bs, REFCOUNT_CACHE_SIZE))"];
"1000549" [label="(Call,header.header_length)"];
"1000515" [label="(Call,s->incompatible_features    = header.incompatible_features)"];
"1000293" [label="(Call,header.cluster_bits > MAX_CLUSTER_BITS)"];
"1000570" [label="(Identifier,feature_table)"];
"1000185" [label="(Call,&header.backing_file_offset)"];
"1000430" [label="(Call,header.header_length)"];
"1000867" [label="(Call,error_setg(errp, \"L1 table is too small\"))"];
"1000559" [label="(Identifier,feature_table)"];
"1000288" [label="(Call,header.cluster_bits < MIN_CLUSTER_BITS)"];
"1000294" [label="(Call,header.cluster_bits)"];
"1000328" [label="(Identifier,s)"];
"1000978" [label="(Call,s->refcount_block_cache = qcow2_cache_create(bs, REFCOUNT_CACHE_SIZE))"];
"1001457" [label="(Block,)"];
"1000555" [label="(Identifier,NULL)"];
"1000541" [label="(Identifier,~QCOW2_INCOMPAT_MASK)"];
"1000536" [label="(ControlStructure,if (s->incompatible_features & ~QCOW2_INCOMPAT_MASK))"];
"1001086" [label="(Call,error_setg(errp, \"Backing file name too long\"))"];
"1001441" [label="(Identifier,bs)"];
"1001019" [label="(Call,qcow2_refcount_init(bs))"];
"1000299" [label="(Call,error_setg(errp, \"Unsupported cluster size: 2^%i\", header.cluster_bits))"];
"1000364" [label="(Call,header.header_length            = 72)"];
"1001475" [label="(Identifier,s)"];
"1000318" [label="(Call,s->cluster_size)"];
"1000569" [label="(Call,g_free(feature_table))"];
"1000412" [label="(Call,header.header_length > s->cluster_size)"];
"1000971" [label="(Call,s->l2_table_cache = qcow2_cache_create(bs, L2_CACHE_SIZE))"];
"1000510" [label="(Call,1 << header.cluster_bits)"];
"1000323" [label="(Call,s->cluster_bits)"];
"1000503" [label="(Call,header.backing_file_offset)"];
"1000184" [label="(Call,be64_to_cpus(&header.backing_file_offset))"];
"1000411" [label="(ControlStructure,if (header.header_length > s->cluster_size))"];
"1000399" [label="(Identifier,header)"];
"1000343" [label="(Block,)"];
"1000575" [label="(Identifier,s)"];
"1000287" [label="(Call,header.cluster_bits < MIN_CLUSTER_BITS ||\n        header.cluster_bits > MAX_CLUSTER_BITS)"];
"1000126" [label="(Block,)"];
"1000557" [label="(Identifier,bs)"];
"1000488" [label="(Call,error_setg(errp, \"Invalid backing file offset\"))"];
"1000566" [label="(Identifier,ret)"];
"1000207" [label="(Identifier,header)"];
"1000332" [label="(Call,s->cluster_bits - 9)"];
"1001078" [label="(Call,s->cluster_size - header.backing_file_offset)"];
"1001460" [label="(Call,s->l2_table_cache)"];
"1000267" [label="(Call,report_unsupported(bs, errp, \"QCOW version %d\", header.version))"];
"1000421" [label="(Identifier,errp)"];
"1000989" [label="(Call,g_malloc(s->cluster_size))"];
"1000975" [label="(Call,qcow2_cache_create(bs, L2_CACHE_SIZE))"];
"1001468" [label="(Call,qcow2_cache_destroy(bs, s->refcount_block_cache))"];
"1001442" [label="(Call,qcow2_refcount_close(bs))"];
"1000507" [label="(Block,)"];
"1000403" [label="(Call,error_setg(errp, \"qcow2 header too short\"))"];
"1001426" [label="(Call,qcow2_check_refcounts(bs, &result, 0))"];
"1000401" [label="(Literal,104)"];
"1000589" [label="(Call,error_setg(errp, \"qcow2: Image is corrupt; cannot be opened \"\n                       \"read/write\"))"];
"1000295" [label="(Identifier,header)"];
"1000370" [label="(Block,)"];
"1001359" [label="(Call,error_setg(errp, \"Unsupported value '%s' for qcow2 option \"\n                   \"'overlap-check'. Allowed are either of the following: \"\n                   \"none, constant, cached, all\", opt_overlap_check))"];
"1000311" [label="(Call,s->cluster_bits)"];
"1000845" [label="(Call,error_setg(errp, \"Image is too big\"))"];
"1000413" [label="(Call,header.header_length)"];
"1000481" [label="(Call,header.backing_file_offset)"];
"1000317" [label="(Call,s->cluster_size = 1 << s->cluster_bits)"];
"1000122" [label="(MethodParameterIn,BlockDriverState *bs)"];
"1001043" [label="(Call,qcow2_read_extensions(bs, header.header_length, ext_end, NULL,\n        &local_err))"];
"1000741" [label="(Call,error_setg(errp, \"Reference count table too large\"))"];
"1000558" [label="(Identifier,errp)"];
"1000168" [label="(Call,error_setg_errno(errp, -ret, \"Could not read qcow2 header\"))"];
"1000480" [label="(Call,header.backing_file_offset > s->cluster_size)"];
"1000553" [label="(Call,&feature_table)"];
"1000200" [label="(Call,&header.cluster_bits)"];
"1000314" [label="(Call,header.cluster_bits)"];
"1000545" [label="(Identifier,feature_table)"];
"1000348" [label="(Literal,0)"];
"1000322" [label="(Literal,1)"];
"1000564" [label="(Identifier,~QCOW2_INCOMPAT_MASK)"];
"1001439" [label="(Identifier,bs)"];
"1001141" [label="(Call,qcow2_read_snapshots(bs))"];
"1000547" [label="(Call,qcow2_read_extensions(bs, header.header_length, ext_end,\n                              &feature_table, NULL))"];
"1000310" [label="(Call,s->cluster_bits = header.cluster_bits)"];
"1000519" [label="(Call,header.incompatible_features)"];
"1000429" [label="(Call,header.header_length > sizeof(header))"];
"1000560" [label="(Call,s->incompatible_features &\n                                   ~QCOW2_INCOMPAT_MASK)"];
"1001470" [label="(Call,s->refcount_block_cache)"];
"1001218" [label="(Call,qcow2_check(bs, &result, BDRV_FIX_ERRORS))"];
"1000431" [label="(Identifier,header)"];
"1000509" [label="(Identifier,ext_end)"];
"1000351" [label="(Identifier,header)"];
"1000524" [label="(Identifier,s)"];
"1000766" [label="(Call,error_setg(errp, \"Invalid reference count table offset\"))"];
"1000877" [label="(Call,validate_table_offset(bs, header.l1_table_offset,\n                                header.l1_size, sizeof(uint64_t)))"];
"1000246" [label="(Call,error_setg(errp, \"Image is not in qcow2 format\"))"];
"1001183" [label="(Call,error_setg_errno(errp, -ret, \"Could not update qcow2 header\"))"];
"1001096" [label="(Call,bdrv_pread(bs->file, header.backing_file_offset,\n                         bs->backing_file, len))"];
"1000397" [label="(Call,header.header_length < 104)"];
"1000433" [label="(Call,sizeof(header))"];
"1000365" [label="(Call,header.header_length)"];
"1000813" [label="(Call,error_setg(errp, \"Active L1 table too large\"))"];
"1000552" [label="(Identifier,ext_end)"];
"1000416" [label="(Call,s->cluster_size)"];
"1000500" [label="(Block,)"];
"1001228" [label="(Call,error_setg_errno(errp, -ret, \"Could not repair dirty image\"))"];
"1001448" [label="(Call,s->l1_table = NULL)"];
"1000751" [label="(Call,validate_table_offset(bs, s->refcount_table_offset,\n                                s->refcount_table_size, sizeof(uint64_t)))"];
"1000517" [label="(Identifier,s)"];
"1001251" [label="(Call,error_propagate(errp, local_err))"];
"1000444" [label="(Call,sizeof(header))"];
"1001414" [label="(Call,error_setg(errp, \"Lazy refcounts require a qcow2 image with at least \"\n                   \"qemu 1.1 compatibility level\"))"];
"1000516" [label="(Call,s->incompatible_features)"];
"1000489" [label="(Identifier,errp)"];
"1000556" [label="(Call,report_unsupported_feature(bs, errp, feature_table,\n                                   s->incompatible_features &\n                                   ~QCOW2_INCOMPAT_MASK))"];
"1000802" [label="(Call,error_setg(errp, \"Invalid snapshot table offset\"))"];
"1000511" [label="(Literal,1)"];
"1000502" [label="(Identifier,ext_end)"];
"1000571" [label="(ControlStructure,goto fail;)"];
"1001176" [label="(Call,qcow2_update_header(bs))"];
"1001446" [label="(Identifier,s)"];
"1000787" [label="(Call,validate_table_offset(bs, header.snapshots_offset,\n                                header.nb_snapshots,\n                                sizeof(QCowSnapshotHeader)))"];
"1001465" [label="(Identifier,s)"];
"1000289" [label="(Call,header.cluster_bits)"];
"1000372" [label="(Call,&header.incompatible_features)"];
"1001469" [label="(Identifier,bs)"];
"1000404" [label="(Identifier,errp)"];
"1000632" [label="(Call,error_setg(errp, \"Unsupported encryption method: %i\",\n                   header.crypt_method))"];
"1000428" [label="(ControlStructure,if (header.header_length > sizeof(header)))"];
"1000544" [label="(Call,*feature_table = NULL)"];
"1000548" [label="(Identifier,bs)"];
"1000573" [label="(Call,s->incompatible_features & QCOW2_INCOMPAT_CORRUPT)"];
"1001062" [label="(Call,header.backing_file_offset != 0)"];
"1000379" [label="(Identifier,header)"];
"1000414" [label="(Identifier,header)"];
"1000321" [label="(Call,1 << s->cluster_bits)"];
"1000319" [label="(Identifier,s)"];
"1000997" [label="(Call,qemu_blockalign(bs, QCOW_MAX_CRYPT_CLUSTERS * s->cluster_size\n                                  + 512))"];
"1000561" [label="(Call,s->incompatible_features)"];
"1000420" [label="(Call,error_setg(errp, \"qcow2 header exceeds cluster size\"))"];
"1000441" [label="(Call,header.header_length)"];
"1000368" [label="(Literal,72)"];
"1000556" -> "1000542"  [label="AST: "];
"1000556" -> "1000560"  [label="CFG: "];
"1000557" -> "1000556"  [label="AST: "];
"1000558" -> "1000556"  [label="AST: "];
"1000559" -> "1000556"  [label="AST: "];
"1000560" -> "1000556"  [label="AST: "];
"1000566" -> "1000556"  [label="CFG: "];
"1000556" -> "1001483"  [label="DDG: s->incompatible_features &\n                                   ~QCOW2_INCOMPAT_MASK"];
"1000556" -> "1001483"  [label="DDG: report_unsupported_feature(bs, errp, feature_table,\n                                   s->incompatible_features &\n                                   ~QCOW2_INCOMPAT_MASK)"];
"1000556" -> "1001483"  [label="DDG: errp"];
"1000547" -> "1000556"  [label="DDG: bs"];
"1000122" -> "1000556"  [label="DDG: bs"];
"1000125" -> "1000556"  [label="DDG: errp"];
"1000544" -> "1000556"  [label="DDG: feature_table"];
"1000560" -> "1000556"  [label="DDG: s->incompatible_features"];
"1000560" -> "1000556"  [label="DDG: ~QCOW2_INCOMPAT_MASK"];
"1000556" -> "1000569"  [label="DDG: feature_table"];
"1000556" -> "1001438"  [label="DDG: bs"];
"1000547" -> "1000542"  [label="AST: "];
"1000547" -> "1000555"  [label="CFG: "];
"1000548" -> "1000547"  [label="AST: "];
"1000549" -> "1000547"  [label="AST: "];
"1000552" -> "1000547"  [label="AST: "];
"1000553" -> "1000547"  [label="AST: "];
"1000555" -> "1000547"  [label="AST: "];
"1000557" -> "1000547"  [label="CFG: "];
"1000547" -> "1001483"  [label="DDG: &feature_table"];
"1000547" -> "1001483"  [label="DDG: qcow2_read_extensions(bs, header.header_length, ext_end,\n                              &feature_table, NULL)"];
"1000547" -> "1001483"  [label="DDG: header.header_length"];
"1000547" -> "1001483"  [label="DDG: ext_end"];
"1000122" -> "1000547"  [label="DDG: bs"];
"1000391" -> "1000547"  [label="DDG: &header.header_length"];
"1000440" -> "1000547"  [label="DDG: header.header_length"];
"1000429" -> "1000547"  [label="DDG: header.header_length"];
"1000508" -> "1000547"  [label="DDG: ext_end"];
"1000501" -> "1000547"  [label="DDG: ext_end"];
"1000547" -> "1001448"  [label="DDG: NULL"];
"1000122" -> "1000121"  [label="AST: "];
"1000122" -> "1001483"  [label="DDG: bs"];
"1000122" -> "1000267"  [label="DDG: bs"];
"1000122" -> "1000604"  [label="DDG: bs"];
"1000122" -> "1000751"  [label="DDG: bs"];
"1000122" -> "1000787"  [label="DDG: bs"];
"1000122" -> "1000877"  [label="DDG: bs"];
"1000122" -> "1000975"  [label="DDG: bs"];
"1000122" -> "1000982"  [label="DDG: bs"];
"1000122" -> "1000997"  [label="DDG: bs"];
"1000122" -> "1001019"  [label="DDG: bs"];
"1000122" -> "1001043"  [label="DDG: bs"];
"1000122" -> "1001141"  [label="DDG: bs"];
"1000122" -> "1001176"  [label="DDG: bs"];
"1000122" -> "1001218"  [label="DDG: bs"];
"1000122" -> "1001426"  [label="DDG: bs"];
"1000122" -> "1001438"  [label="DDG: bs"];
"1000122" -> "1001440"  [label="DDG: bs"];
"1000122" -> "1001442"  [label="DDG: bs"];
"1000122" -> "1001458"  [label="DDG: bs"];
"1000122" -> "1001468"  [label="DDG: bs"];
"1000391" -> "1000370"  [label="AST: "];
"1000391" -> "1000392"  [label="CFG: "];
"1000392" -> "1000391"  [label="AST: "];
"1000399" -> "1000391"  [label="CFG: "];
"1000391" -> "1001483"  [label="DDG: &header.header_length"];
"1000391" -> "1001483"  [label="DDG: be32_to_cpus(&header.header_length)"];
"1000391" -> "1000397"  [label="DDG: &header.header_length"];
"1000391" -> "1000412"  [label="DDG: &header.header_length"];
"1000391" -> "1000429"  [label="DDG: &header.header_length"];
"1000391" -> "1000440"  [label="DDG: &header.header_length"];
"1000391" -> "1001043"  [label="DDG: &header.header_length"];
"1000440" -> "1000436"  [label="AST: "];
"1000440" -> "1000444"  [label="CFG: "];
"1000441" -> "1000440"  [label="AST: "];
"1000444" -> "1000440"  [label="AST: "];
"1000436" -> "1000440"  [label="CFG: "];
"1000440" -> "1001483"  [label="DDG: header.header_length"];
"1000440" -> "1000436"  [label="DDG: header.header_length"];
"1000429" -> "1000440"  [label="DDG: header.header_length"];
"1000440" -> "1001043"  [label="DDG: header.header_length"];
"1000429" -> "1000428"  [label="AST: "];
"1000429" -> "1000433"  [label="CFG: "];
"1000430" -> "1000429"  [label="AST: "];
"1000433" -> "1000429"  [label="AST: "];
"1000438" -> "1000429"  [label="CFG: "];
"1000482" -> "1000429"  [label="CFG: "];
"1000429" -> "1001483"  [label="DDG: header.header_length"];
"1000429" -> "1001483"  [label="DDG: header.header_length > sizeof(header)"];
"1000412" -> "1000429"  [label="DDG: header.header_length"];
"1000429" -> "1001043"  [label="DDG: header.header_length"];
"1000412" -> "1000411"  [label="AST: "];
"1000412" -> "1000416"  [label="CFG: "];
"1000413" -> "1000412"  [label="AST: "];
"1000416" -> "1000412"  [label="AST: "];
"1000421" -> "1000412"  [label="CFG: "];
"1000431" -> "1000412"  [label="CFG: "];
"1000412" -> "1001483"  [label="DDG: header.header_length > s->cluster_size"];
"1000412" -> "1001483"  [label="DDG: header.header_length"];
"1000412" -> "1001483"  [label="DDG: s->cluster_size"];
"1000364" -> "1000412"  [label="DDG: header.header_length"];
"1000397" -> "1000412"  [label="DDG: header.header_length"];
"1000317" -> "1000412"  [label="DDG: s->cluster_size"];
"1000412" -> "1000480"  [label="DDG: s->cluster_size"];
"1000364" -> "1000343"  [label="AST: "];
"1000364" -> "1000368"  [label="CFG: "];
"1000365" -> "1000364"  [label="AST: "];
"1000368" -> "1000364"  [label="AST: "];
"1000414" -> "1000364"  [label="CFG: "];
"1000397" -> "1000396"  [label="AST: "];
"1000397" -> "1000401"  [label="CFG: "];
"1000398" -> "1000397"  [label="AST: "];
"1000401" -> "1000397"  [label="AST: "];
"1000404" -> "1000397"  [label="CFG: "];
"1000414" -> "1000397"  [label="CFG: "];
"1000397" -> "1001483"  [label="DDG: header.header_length < 104"];
"1000397" -> "1001483"  [label="DDG: header.header_length"];
"1000317" -> "1000126"  [label="AST: "];
"1000317" -> "1000321"  [label="CFG: "];
"1000318" -> "1000317"  [label="AST: "];
"1000321" -> "1000317"  [label="AST: "];
"1000328" -> "1000317"  [label="CFG: "];
"1000317" -> "1001483"  [label="DDG: s->cluster_size"];
"1000317" -> "1001483"  [label="DDG: 1 << s->cluster_bits"];
"1000321" -> "1000317"  [label="DDG: 1"];
"1000321" -> "1000317"  [label="DDG: s->cluster_bits"];
"1000321" -> "1000323"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000323" -> "1000321"  [label="AST: "];
"1000310" -> "1000321"  [label="DDG: s->cluster_bits"];
"1000321" -> "1000332"  [label="DDG: s->cluster_bits"];
"1000310" -> "1000126"  [label="AST: "];
"1000310" -> "1000314"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000314" -> "1000310"  [label="AST: "];
"1000319" -> "1000310"  [label="CFG: "];
"1000310" -> "1001483"  [label="DDG: header.cluster_bits"];
"1000293" -> "1000310"  [label="DDG: header.cluster_bits"];
"1000199" -> "1000310"  [label="DDG: &header.cluster_bits"];
"1000288" -> "1000310"  [label="DDG: header.cluster_bits"];
"1000293" -> "1000287"  [label="AST: "];
"1000293" -> "1000297"  [label="CFG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000297" -> "1000293"  [label="AST: "];
"1000287" -> "1000293"  [label="CFG: "];
"1000293" -> "1001483"  [label="DDG: MAX_CLUSTER_BITS"];
"1000293" -> "1000287"  [label="DDG: header.cluster_bits"];
"1000293" -> "1000287"  [label="DDG: MAX_CLUSTER_BITS"];
"1000199" -> "1000293"  [label="DDG: &header.cluster_bits"];
"1000288" -> "1000293"  [label="DDG: header.cluster_bits"];
"1000293" -> "1000299"  [label="DDG: header.cluster_bits"];
"1000293" -> "1000510"  [label="DDG: header.cluster_bits"];
"1000199" -> "1000126"  [label="AST: "];
"1000199" -> "1000200"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000207" -> "1000199"  [label="CFG: "];
"1000199" -> "1001483"  [label="DDG: &header.cluster_bits"];
"1000199" -> "1001483"  [label="DDG: be32_to_cpus(&header.cluster_bits)"];
"1000199" -> "1000288"  [label="DDG: &header.cluster_bits"];
"1000199" -> "1000299"  [label="DDG: &header.cluster_bits"];
"1000199" -> "1000510"  [label="DDG: &header.cluster_bits"];
"1000288" -> "1000287"  [label="AST: "];
"1000288" -> "1000292"  [label="CFG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000292" -> "1000288"  [label="AST: "];
"1000295" -> "1000288"  [label="CFG: "];
"1000287" -> "1000288"  [label="CFG: "];
"1000288" -> "1001483"  [label="DDG: MIN_CLUSTER_BITS"];
"1000288" -> "1000287"  [label="DDG: header.cluster_bits"];
"1000288" -> "1000287"  [label="DDG: MIN_CLUSTER_BITS"];
"1000288" -> "1000299"  [label="DDG: header.cluster_bits"];
"1000288" -> "1000510"  [label="DDG: header.cluster_bits"];
"1000508" -> "1000507"  [label="AST: "];
"1000508" -> "1000510"  [label="CFG: "];
"1000509" -> "1000508"  [label="AST: "];
"1000510" -> "1000508"  [label="AST: "];
"1000517" -> "1000508"  [label="CFG: "];
"1000508" -> "1001483"  [label="DDG: ext_end"];
"1000508" -> "1001483"  [label="DDG: 1 << header.cluster_bits"];
"1000510" -> "1000508"  [label="DDG: 1"];
"1000510" -> "1000508"  [label="DDG: header.cluster_bits"];
"1000508" -> "1001043"  [label="DDG: ext_end"];
"1000510" -> "1000512"  [label="CFG: "];
"1000511" -> "1000510"  [label="AST: "];
"1000512" -> "1000510"  [label="AST: "];
"1000510" -> "1001483"  [label="DDG: header.cluster_bits"];
"1000501" -> "1000500"  [label="AST: "];
"1000501" -> "1000503"  [label="CFG: "];
"1000502" -> "1000501"  [label="AST: "];
"1000503" -> "1000501"  [label="AST: "];
"1000517" -> "1000501"  [label="CFG: "];
"1000501" -> "1001483"  [label="DDG: header.backing_file_offset"];
"1000501" -> "1001483"  [label="DDG: ext_end"];
"1000184" -> "1000501"  [label="DDG: &header.backing_file_offset"];
"1000480" -> "1000501"  [label="DDG: header.backing_file_offset"];
"1000501" -> "1001043"  [label="DDG: ext_end"];
"1000184" -> "1000126"  [label="AST: "];
"1000184" -> "1000185"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000192" -> "1000184"  [label="CFG: "];
"1000184" -> "1001483"  [label="DDG: &header.backing_file_offset"];
"1000184" -> "1001483"  [label="DDG: be64_to_cpus(&header.backing_file_offset)"];
"1000184" -> "1000480"  [label="DDG: &header.backing_file_offset"];
"1000184" -> "1001062"  [label="DDG: &header.backing_file_offset"];
"1000184" -> "1001078"  [label="DDG: &header.backing_file_offset"];
"1000184" -> "1001096"  [label="DDG: &header.backing_file_offset"];
"1000480" -> "1000479"  [label="AST: "];
"1000480" -> "1000484"  [label="CFG: "];
"1000481" -> "1000480"  [label="AST: "];
"1000484" -> "1000480"  [label="AST: "];
"1000489" -> "1000480"  [label="CFG: "];
"1000498" -> "1000480"  [label="CFG: "];
"1000480" -> "1001483"  [label="DDG: header.backing_file_offset > s->cluster_size"];
"1000480" -> "1001483"  [label="DDG: header.backing_file_offset"];
"1000480" -> "1001483"  [label="DDG: s->cluster_size"];
"1000480" -> "1000989"  [label="DDG: s->cluster_size"];
"1000480" -> "1001062"  [label="DDG: header.backing_file_offset"];
"1000125" -> "1000121"  [label="AST: "];
"1000125" -> "1001483"  [label="DDG: errp"];
"1000125" -> "1000168"  [label="DDG: errp"];
"1000125" -> "1000246"  [label="DDG: errp"];
"1000125" -> "1000267"  [label="DDG: errp"];
"1000125" -> "1000299"  [label="DDG: errp"];
"1000125" -> "1000403"  [label="DDG: errp"];
"1000125" -> "1000420"  [label="DDG: errp"];
"1000125" -> "1000473"  [label="DDG: errp"];
"1000125" -> "1000488"  [label="DDG: errp"];
"1000125" -> "1000589"  [label="DDG: errp"];
"1000125" -> "1000604"  [label="DDG: errp"];
"1000125" -> "1000632"  [label="DDG: errp"];
"1000125" -> "1000741"  [label="DDG: errp"];
"1000125" -> "1000766"  [label="DDG: errp"];
"1000125" -> "1000777"  [label="DDG: errp"];
"1000125" -> "1000802"  [label="DDG: errp"];
"1000125" -> "1000813"  [label="DDG: errp"];
"1000125" -> "1000845"  [label="DDG: errp"];
"1000125" -> "1000867"  [label="DDG: errp"];
"1000125" -> "1000892"  [label="DDG: errp"];
"1000125" -> "1000946"  [label="DDG: errp"];
"1000125" -> "1001026"  [label="DDG: errp"];
"1000125" -> "1001053"  [label="DDG: errp"];
"1000125" -> "1001086"  [label="DDG: errp"];
"1000125" -> "1001112"  [label="DDG: errp"];
"1000125" -> "1001148"  [label="DDG: errp"];
"1000125" -> "1001183"  [label="DDG: errp"];
"1000125" -> "1001228"  [label="DDG: errp"];
"1000125" -> "1001251"  [label="DDG: errp"];
"1000125" -> "1001359"  [label="DDG: errp"];
"1000125" -> "1001414"  [label="DDG: errp"];
"1000544" -> "1000542"  [label="AST: "];
"1000544" -> "1000546"  [label="CFG: "];
"1000545" -> "1000544"  [label="AST: "];
"1000546" -> "1000544"  [label="AST: "];
"1000548" -> "1000544"  [label="CFG: "];
"1000560" -> "1000564"  [label="CFG: "];
"1000561" -> "1000560"  [label="AST: "];
"1000564" -> "1000560"  [label="AST: "];
"1000560" -> "1001483"  [label="DDG: ~QCOW2_INCOMPAT_MASK"];
"1000560" -> "1001483"  [label="DDG: s->incompatible_features"];
"1000537" -> "1000560"  [label="DDG: s->incompatible_features"];
"1000537" -> "1000560"  [label="DDG: ~QCOW2_INCOMPAT_MASK"];
"1000537" -> "1000536"  [label="AST: "];
"1000537" -> "1000541"  [label="CFG: "];
"1000538" -> "1000537"  [label="AST: "];
"1000541" -> "1000537"  [label="AST: "];
"1000545" -> "1000537"  [label="CFG: "];
"1000575" -> "1000537"  [label="CFG: "];
"1000537" -> "1001483"  [label="DDG: s->incompatible_features & ~QCOW2_INCOMPAT_MASK"];
"1000537" -> "1001483"  [label="DDG: ~QCOW2_INCOMPAT_MASK"];
"1000515" -> "1000537"  [label="DDG: s->incompatible_features"];
"1000537" -> "1000573"  [label="DDG: s->incompatible_features"];
"1000515" -> "1000126"  [label="AST: "];
"1000515" -> "1000519"  [label="CFG: "];
"1000516" -> "1000515"  [label="AST: "];
"1000519" -> "1000515"  [label="AST: "];
"1000524" -> "1000515"  [label="CFG: "];
"1000515" -> "1001483"  [label="DDG: header.incompatible_features"];
"1000371" -> "1000515"  [label="DDG: &header.incompatible_features"];
"1000344" -> "1000515"  [label="DDG: header.incompatible_features"];
"1000371" -> "1000370"  [label="AST: "];
"1000371" -> "1000372"  [label="CFG: "];
"1000372" -> "1000371"  [label="AST: "];
"1000379" -> "1000371"  [label="CFG: "];
"1000371" -> "1001483"  [label="DDG: &header.incompatible_features"];
"1000371" -> "1001483"  [label="DDG: be64_to_cpus(&header.incompatible_features)"];
"1000344" -> "1000343"  [label="AST: "];
"1000344" -> "1000348"  [label="CFG: "];
"1000345" -> "1000344"  [label="AST: "];
"1000348" -> "1000344"  [label="AST: "];
"1000351" -> "1000344"  [label="CFG: "];
"1000344" -> "1001483"  [label="DDG: header.incompatible_features"];
"1000569" -> "1000542"  [label="AST: "];
"1000569" -> "1000570"  [label="CFG: "];
"1000570" -> "1000569"  [label="AST: "];
"1000571" -> "1000569"  [label="CFG: "];
"1000569" -> "1001483"  [label="DDG: g_free(feature_table)"];
"1000569" -> "1001483"  [label="DDG: feature_table"];
"1001438" -> "1000126"  [label="AST: "];
"1001438" -> "1001439"  [label="CFG: "];
"1001439" -> "1001438"  [label="AST: "];
"1001441" -> "1001438"  [label="CFG: "];
"1001438" -> "1001483"  [label="DDG: cleanup_unknown_header_ext(bs)"];
"1000877" -> "1001438"  [label="DDG: bs"];
"1001043" -> "1001438"  [label="DDG: bs"];
"1000267" -> "1001438"  [label="DDG: bs"];
"1001141" -> "1001438"  [label="DDG: bs"];
"1001019" -> "1001438"  [label="DDG: bs"];
"1001218" -> "1001438"  [label="DDG: bs"];
"1000604" -> "1001438"  [label="DDG: bs"];
"1000751" -> "1001438"  [label="DDG: bs"];
"1001176" -> "1001438"  [label="DDG: bs"];
"1000787" -> "1001438"  [label="DDG: bs"];
"1001438" -> "1001440"  [label="DDG: bs"];
"1001440" -> "1000126"  [label="AST: "];
"1001440" -> "1001441"  [label="CFG: "];
"1001441" -> "1001440"  [label="AST: "];
"1001443" -> "1001440"  [label="CFG: "];
"1001440" -> "1001483"  [label="DDG: qcow2_free_snapshots(bs)"];
"1001440" -> "1001442"  [label="DDG: bs"];
"1001442" -> "1000126"  [label="AST: "];
"1001442" -> "1001443"  [label="CFG: "];
"1001443" -> "1001442"  [label="AST: "];
"1001446" -> "1001442"  [label="CFG: "];
"1001442" -> "1001483"  [label="DDG: qcow2_refcount_close(bs)"];
"1001442" -> "1001483"  [label="DDG: bs"];
"1001442" -> "1001458"  [label="DDG: bs"];
"1001442" -> "1001468"  [label="DDG: bs"];
"1001458" -> "1001457"  [label="AST: "];
"1001458" -> "1001460"  [label="CFG: "];
"1001459" -> "1001458"  [label="AST: "];
"1001460" -> "1001458"  [label="AST: "];
"1001465" -> "1001458"  [label="CFG: "];
"1001458" -> "1001483"  [label="DDG: s->l2_table_cache"];
"1001458" -> "1001483"  [label="DDG: bs"];
"1001458" -> "1001483"  [label="DDG: qcow2_cache_destroy(bs, s->l2_table_cache)"];
"1000971" -> "1001458"  [label="DDG: s->l2_table_cache"];
"1001458" -> "1001468"  [label="DDG: bs"];
"1001468" -> "1001467"  [label="AST: "];
"1001468" -> "1001470"  [label="CFG: "];
"1001469" -> "1001468"  [label="AST: "];
"1001470" -> "1001468"  [label="AST: "];
"1001475" -> "1001468"  [label="CFG: "];
"1001468" -> "1001483"  [label="DDG: bs"];
"1001468" -> "1001483"  [label="DDG: qcow2_cache_destroy(bs, s->refcount_block_cache)"];
"1001468" -> "1001483"  [label="DDG: s->refcount_block_cache"];
"1000978" -> "1001468"  [label="DDG: s->refcount_block_cache"];
}
