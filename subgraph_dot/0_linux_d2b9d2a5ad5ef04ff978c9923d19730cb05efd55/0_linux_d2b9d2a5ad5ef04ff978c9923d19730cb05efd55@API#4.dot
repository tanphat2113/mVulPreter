digraph "0_linux_d2b9d2a5ad5ef04ff978c9923d19730cb05efd55@API" {
"1000193" [label="(Call,__copy_from_user(&current->thread.vr_state, &sr->mc_vregs,\n\t\t\t\t     sizeof(sr->mc_vregs)))"];
"1000192" [label="(Call,__copy_from_user(&current->thread.vr_state, &sr->mc_vregs,\n\t\t\t\t     sizeof(sr->mc_vregs)) ||\n\t\t    __copy_from_user(&current->thread.transact_vr,\n\t\t\t\t     &tm_sr->mc_vregs,\n\t\t\t\t     sizeof(sr->mc_vregs)))"];
"1000265" [label="(Call,(u32 __user *)&sr->mc_vregs[32])"];
"1000259" [label="(Call,__get_user(current->thread.vrsave,\n\t\t       (u32 __user *)&sr->mc_vregs[32]))"];
"1000258" [label="(Call,__get_user(current->thread.vrsave,\n\t\t       (u32 __user *)&sr->mc_vregs[32]) ||\n\t    __get_user(current->thread.transact_vrsave,\n\t\t       (u32 __user *)&tm_sr->mc_vregs[32]))"];
"1000292" [label="(Call,mtspr(SPRN_VRSAVE, current->thread.vrsave))"];
"1000405" [label="(Call,__copy_from_user(current->thread.evr, &sr->mc_vregs,\n\t\t\t\t     ELF_NEVRREG * sizeof(u32)))"];
"1000447" [label="(Call,(u32 __user *)&sr->mc_vregs)"];
"1000440" [label="(Call,__get_user(current->thread.spefscr, (u32 __user *)&sr->mc_vregs\n\t\t       + ELF_NEVRREG))"];
"1000446" [label="(Call,(u32 __user *)&sr->mc_vregs\n\t\t       + ELF_NEVRREG)"];
"1000224" [label="(Literal,1)"];
"1000204" [label="(Call,sizeof(sr->mc_vregs))"];
"1000258" [label="(Call,__get_user(current->thread.vrsave,\n\t\t       (u32 __user *)&sr->mc_vregs[32]) ||\n\t    __get_user(current->thread.transact_vrsave,\n\t\t       (u32 __user *)&tm_sr->mc_vregs[32]))"];
"1000294" [label="(Call,current->thread.vrsave)"];
"1000288" [label="(Literal,1)"];
"1000194" [label="(Call,&current->thread.vr_state)"];
"1000267" [label="(Call,&sr->mc_vregs[32])"];
"1000440" [label="(Call,__get_user(current->thread.spefscr, (u32 __user *)&sr->mc_vregs\n\t\t       + ELF_NEVRREG))"];
"1000192" [label="(Call,__copy_from_user(&current->thread.vr_state, &sr->mc_vregs,\n\t\t\t\t     sizeof(sr->mc_vregs)) ||\n\t\t    __copy_from_user(&current->thread.transact_vr,\n\t\t\t\t     &tm_sr->mc_vregs,\n\t\t\t\t     sizeof(sr->mc_vregs)))"];
"1000289" [label="(ControlStructure,if (cpu_has_feature(CPU_FTR_ALTIVEC)))"];
"1000455" [label="(Literal,1)"];
"1000265" [label="(Call,(u32 __user *)&sr->mc_vregs[32])"];
"1000443" [label="(Identifier,current)"];
"1000291" [label="(Identifier,CPU_FTR_ALTIVEC)"];
"1000420" [label="(Literal,1)"];
"1000200" [label="(Call,&sr->mc_vregs)"];
"1000411" [label="(Call,&sr->mc_vregs)"];
"1000435" [label="(Call,ELF_NEVRREG * sizeof(u32))"];
"1000406" [label="(Call,current->thread.evr)"];
"1000458" [label="(Identifier,msr_hi)"];
"1000212" [label="(Identifier,current)"];
"1000257" [label="(ControlStructure,if (__get_user(current->thread.vrsave,\n\t\t       (u32 __user *)&sr->mc_vregs[32]) ||\n\t    __get_user(current->thread.transact_vrsave,\n\t\t       (u32 __user *)&tm_sr->mc_vregs[32])))"];
"1000447" [label="(Call,(u32 __user *)&sr->mc_vregs)"];
"1000191" [label="(ControlStructure,if (__copy_from_user(&current->thread.vr_state, &sr->mc_vregs,\n\t\t\t\t     sizeof(sr->mc_vregs)) ||\n\t\t    __copy_from_user(&current->thread.transact_vr,\n\t\t\t\t     &tm_sr->mc_vregs,\n\t\t\t\t     sizeof(sr->mc_vregs))))"];
"1000292" [label="(Call,mtspr(SPRN_VRSAVE, current->thread.vrsave))"];
"1000439" [label="(ControlStructure,if (__get_user(current->thread.spefscr, (u32 __user *)&sr->mc_vregs\n\t\t       + ELF_NEVRREG)))"];
"1000453" [label="(Identifier,ELF_NEVRREG)"];
"1000441" [label="(Call,current->thread.spefscr)"];
"1000415" [label="(Call,ELF_NEVRREG * sizeof(u32))"];
"1000259" [label="(Call,__get_user(current->thread.vrsave,\n\t\t       (u32 __user *)&sr->mc_vregs[32]))"];
"1000301" [label="(Identifier,regs)"];
"1000405" [label="(Call,__copy_from_user(current->thread.evr, &sr->mc_vregs,\n\t\t\t\t     ELF_NEVRREG * sizeof(u32)))"];
"1000273" [label="(Call,__get_user(current->thread.transact_vrsave,\n\t\t       (u32 __user *)&tm_sr->mc_vregs[32]))"];
"1000260" [label="(Call,current->thread.vrsave)"];
"1000446" [label="(Call,(u32 __user *)&sr->mc_vregs\n\t\t       + ELF_NEVRREG)"];
"1000293" [label="(Identifier,SPRN_VRSAVE)"];
"1000208" [label="(Call,__copy_from_user(&current->thread.transact_vr,\n\t\t\t\t     &tm_sr->mc_vregs,\n\t\t\t\t     sizeof(sr->mc_vregs)))"];
"1000404" [label="(ControlStructure,if (__copy_from_user(current->thread.evr, &sr->mc_vregs,\n\t\t\t\t     ELF_NEVRREG * sizeof(u32))))"];
"1000193" [label="(Call,__copy_from_user(&current->thread.vr_state, &sr->mc_vregs,\n\t\t\t\t     sizeof(sr->mc_vregs)))"];
"1000449" [label="(Call,&sr->mc_vregs)"];
"1000540" [label="(MethodReturn,static long)"];
"1000276" [label="(Identifier,current)"];
"1000262" [label="(Identifier,current)"];
"1000193" -> "1000192"  [label="AST: "];
"1000193" -> "1000204"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000200" -> "1000193"  [label="AST: "];
"1000204" -> "1000193"  [label="AST: "];
"1000212" -> "1000193"  [label="CFG: "];
"1000192" -> "1000193"  [label="CFG: "];
"1000193" -> "1000540"  [label="DDG: &current->thread.vr_state"];
"1000193" -> "1000540"  [label="DDG: &sr->mc_vregs"];
"1000193" -> "1000192"  [label="DDG: &current->thread.vr_state"];
"1000193" -> "1000192"  [label="DDG: &sr->mc_vregs"];
"1000193" -> "1000265"  [label="DDG: &sr->mc_vregs"];
"1000193" -> "1000405"  [label="DDG: &sr->mc_vregs"];
"1000193" -> "1000447"  [label="DDG: &sr->mc_vregs"];
"1000192" -> "1000191"  [label="AST: "];
"1000192" -> "1000208"  [label="CFG: "];
"1000208" -> "1000192"  [label="AST: "];
"1000224" -> "1000192"  [label="CFG: "];
"1000262" -> "1000192"  [label="CFG: "];
"1000192" -> "1000540"  [label="DDG: __copy_from_user(&current->thread.transact_vr,\n\t\t\t\t     &tm_sr->mc_vregs,\n\t\t\t\t     sizeof(sr->mc_vregs))"];
"1000192" -> "1000540"  [label="DDG: __copy_from_user(&current->thread.vr_state, &sr->mc_vregs,\n\t\t\t\t     sizeof(sr->mc_vregs))"];
"1000192" -> "1000540"  [label="DDG: __copy_from_user(&current->thread.vr_state, &sr->mc_vregs,\n\t\t\t\t     sizeof(sr->mc_vregs)) ||\n\t\t    __copy_from_user(&current->thread.transact_vr,\n\t\t\t\t     &tm_sr->mc_vregs,\n\t\t\t\t     sizeof(sr->mc_vregs))"];
"1000208" -> "1000192"  [label="DDG: &current->thread.transact_vr"];
"1000208" -> "1000192"  [label="DDG: &tm_sr->mc_vregs"];
"1000265" -> "1000259"  [label="AST: "];
"1000265" -> "1000267"  [label="CFG: "];
"1000266" -> "1000265"  [label="AST: "];
"1000267" -> "1000265"  [label="AST: "];
"1000259" -> "1000265"  [label="CFG: "];
"1000265" -> "1000540"  [label="DDG: &sr->mc_vregs[32]"];
"1000265" -> "1000259"  [label="DDG: &sr->mc_vregs[32]"];
"1000265" -> "1000405"  [label="DDG: &sr->mc_vregs[32]"];
"1000265" -> "1000447"  [label="DDG: &sr->mc_vregs[32]"];
"1000259" -> "1000258"  [label="AST: "];
"1000260" -> "1000259"  [label="AST: "];
"1000276" -> "1000259"  [label="CFG: "];
"1000258" -> "1000259"  [label="CFG: "];
"1000259" -> "1000540"  [label="DDG: current->thread.vrsave"];
"1000259" -> "1000540"  [label="DDG: (u32 __user *)&sr->mc_vregs[32]"];
"1000259" -> "1000258"  [label="DDG: current->thread.vrsave"];
"1000259" -> "1000258"  [label="DDG: (u32 __user *)&sr->mc_vregs[32]"];
"1000259" -> "1000292"  [label="DDG: current->thread.vrsave"];
"1000258" -> "1000257"  [label="AST: "];
"1000258" -> "1000273"  [label="CFG: "];
"1000273" -> "1000258"  [label="AST: "];
"1000288" -> "1000258"  [label="CFG: "];
"1000291" -> "1000258"  [label="CFG: "];
"1000258" -> "1000540"  [label="DDG: __get_user(current->thread.vrsave,\n\t\t       (u32 __user *)&sr->mc_vregs[32])"];
"1000258" -> "1000540"  [label="DDG: __get_user(current->thread.vrsave,\n\t\t       (u32 __user *)&sr->mc_vregs[32]) ||\n\t    __get_user(current->thread.transact_vrsave,\n\t\t       (u32 __user *)&tm_sr->mc_vregs[32])"];
"1000258" -> "1000540"  [label="DDG: __get_user(current->thread.transact_vrsave,\n\t\t       (u32 __user *)&tm_sr->mc_vregs[32])"];
"1000273" -> "1000258"  [label="DDG: current->thread.transact_vrsave"];
"1000273" -> "1000258"  [label="DDG: (u32 __user *)&tm_sr->mc_vregs[32]"];
"1000292" -> "1000289"  [label="AST: "];
"1000292" -> "1000294"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000294" -> "1000292"  [label="AST: "];
"1000301" -> "1000292"  [label="CFG: "];
"1000292" -> "1000540"  [label="DDG: mtspr(SPRN_VRSAVE, current->thread.vrsave)"];
"1000292" -> "1000540"  [label="DDG: current->thread.vrsave"];
"1000292" -> "1000540"  [label="DDG: SPRN_VRSAVE"];
"1000405" -> "1000404"  [label="AST: "];
"1000405" -> "1000415"  [label="CFG: "];
"1000406" -> "1000405"  [label="AST: "];
"1000411" -> "1000405"  [label="AST: "];
"1000415" -> "1000405"  [label="AST: "];
"1000420" -> "1000405"  [label="CFG: "];
"1000443" -> "1000405"  [label="CFG: "];
"1000405" -> "1000540"  [label="DDG: __copy_from_user(current->thread.evr, &sr->mc_vregs,\n\t\t\t\t     ELF_NEVRREG * sizeof(u32))"];
"1000405" -> "1000540"  [label="DDG: &sr->mc_vregs"];
"1000405" -> "1000540"  [label="DDG: ELF_NEVRREG * sizeof(u32)"];
"1000405" -> "1000540"  [label="DDG: current->thread.evr"];
"1000415" -> "1000405"  [label="DDG: ELF_NEVRREG"];
"1000405" -> "1000447"  [label="DDG: &sr->mc_vregs"];
"1000447" -> "1000446"  [label="AST: "];
"1000447" -> "1000449"  [label="CFG: "];
"1000448" -> "1000447"  [label="AST: "];
"1000449" -> "1000447"  [label="AST: "];
"1000453" -> "1000447"  [label="CFG: "];
"1000447" -> "1000540"  [label="DDG: &sr->mc_vregs"];
"1000447" -> "1000440"  [label="DDG: &sr->mc_vregs"];
"1000447" -> "1000446"  [label="DDG: &sr->mc_vregs"];
"1000440" -> "1000439"  [label="AST: "];
"1000440" -> "1000446"  [label="CFG: "];
"1000441" -> "1000440"  [label="AST: "];
"1000446" -> "1000440"  [label="AST: "];
"1000455" -> "1000440"  [label="CFG: "];
"1000458" -> "1000440"  [label="CFG: "];
"1000440" -> "1000540"  [label="DDG: __get_user(current->thread.spefscr, (u32 __user *)&sr->mc_vregs\n\t\t       + ELF_NEVRREG)"];
"1000440" -> "1000540"  [label="DDG: (u32 __user *)&sr->mc_vregs\n\t\t       + ELF_NEVRREG"];
"1000440" -> "1000540"  [label="DDG: current->thread.spefscr"];
"1000435" -> "1000440"  [label="DDG: ELF_NEVRREG"];
"1000415" -> "1000440"  [label="DDG: ELF_NEVRREG"];
"1000446" -> "1000453"  [label="CFG: "];
"1000453" -> "1000446"  [label="AST: "];
"1000446" -> "1000540"  [label="DDG: (u32 __user *)&sr->mc_vregs"];
"1000446" -> "1000540"  [label="DDG: ELF_NEVRREG"];
"1000435" -> "1000446"  [label="DDG: ELF_NEVRREG"];
"1000415" -> "1000446"  [label="DDG: ELF_NEVRREG"];
}
