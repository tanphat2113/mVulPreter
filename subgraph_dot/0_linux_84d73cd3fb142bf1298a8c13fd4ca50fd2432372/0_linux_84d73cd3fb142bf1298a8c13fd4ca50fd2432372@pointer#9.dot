digraph "0_linux_84d73cd3fb142bf1298a8c13fd4ca50fd2432372@pointer" {
"1000283" [label="(Call,dev->netdev_ops->ndo_get_vf_config && dev->dev.parent\n\t    && (ext_filter_mask & RTEXT_FILTER_VF))"];
"1000289" [label="(Call,dev->dev.parent\n\t    && (ext_filter_mask & RTEXT_FILTER_VF))"];
"1000262" [label="(Call,dev->dev.parent && (ext_filter_mask & RTEXT_FILTER_VF) &&\n\t    nla_put_u32(skb, IFLA_NUM_VF, dev_num_vf(dev->dev.parent)))"];
"1000275" [label="(Call,dev_num_vf(dev->dev.parent))"];
"1000268" [label="(Call,(ext_filter_mask & RTEXT_FILTER_VF) &&\n\t    nla_put_u32(skb, IFLA_NUM_VF, dev_num_vf(dev->dev.parent)))"];
"1000269" [label="(Call,ext_filter_mask & RTEXT_FILTER_VF)"];
"1000272" [label="(Call,nla_put_u32(skb, IFLA_NUM_VF, dev_num_vf(dev->dev.parent)))"];
"1000247" [label="(Call,nla_reserve(skb, IFLA_STATS64,\n\t\t\tsizeof(struct rtnl_link_stats64)))"];
"1000225" [label="(Call,nla_reserve(skb, IFLA_STATS,\n\t\t\tsizeof(struct rtnl_link_stats)))"];
"1000189" [label="(Call,nla_put(skb, IFLA_MAP, sizeof(map), &map))"];
"1000213" [label="(Call,nla_put(skb, IFLA_BROADCAST, dev->addr_len, dev->broadcast))"];
"1000204" [label="(Call,nla_put(skb, IFLA_ADDRESS, dev->addr_len, dev->dev_addr))"];
"1000295" [label="(Call,ext_filter_mask & RTEXT_FILTER_VF)"];
"1000249" [label="(Identifier,IFLA_STATS64)"];
"1000226" [label="(Identifier,skb)"];
"1000268" [label="(Call,(ext_filter_mask & RTEXT_FILTER_VF) &&\n\t    nla_put_u32(skb, IFLA_NUM_VF, dev_num_vf(dev->dev.parent)))"];
"1000189" [label="(Call,nla_put(skb, IFLA_MAP, sizeof(map), &map))"];
"1000206" [label="(Identifier,IFLA_ADDRESS)"];
"1000274" [label="(Identifier,IFLA_NUM_VF)"];
"1000283" [label="(Call,dev->netdev_ops->ndo_get_vf_config && dev->dev.parent\n\t    && (ext_filter_mask & RTEXT_FILTER_VF))"];
"1000247" [label="(Call,nla_reserve(skb, IFLA_STATS64,\n\t\t\tsizeof(struct rtnl_link_stats64)))"];
"1000219" [label="(Call,dev->broadcast)"];
"1000204" [label="(Call,nla_put(skb, IFLA_ADDRESS, dev->addr_len, dev->dev_addr))"];
"1000199" [label="(Identifier,dev)"];
"1000223" [label="(Call,attr = nla_reserve(skb, IFLA_STATS,\n\t\t\tsizeof(struct rtnl_link_stats)))"];
"1000469" [label="(Identifier,skb)"];
"1000295" [label="(Call,ext_filter_mask & RTEXT_FILTER_VF)"];
"1000286" [label="(Identifier,dev)"];
"1000297" [label="(Identifier,RTEXT_FILTER_VF)"];
"1000194" [label="(Call,&map)"];
"1000196" [label="(ControlStructure,goto nla_put_failure;)"];
"1000225" [label="(Call,nla_reserve(skb, IFLA_STATS,\n\t\t\tsizeof(struct rtnl_link_stats)))"];
"1000275" [label="(Call,dev_num_vf(dev->dev.parent))"];
"1000270" [label="(Identifier,ext_filter_mask)"];
"1000205" [label="(Identifier,skb)"];
"1000284" [label="(Call,dev->netdev_ops->ndo_get_vf_config)"];
"1000213" [label="(Call,nla_put(skb, IFLA_BROADCAST, dev->addr_len, dev->broadcast))"];
"1000207" [label="(Call,dev->addr_len)"];
"1000276" [label="(Call,dev->dev.parent)"];
"1000191" [label="(Identifier,IFLA_MAP)"];
"1000304" [label="(Identifier,num_vfs)"];
"1000190" [label="(Identifier,skb)"];
"1000262" [label="(Call,dev->dev.parent && (ext_filter_mask & RTEXT_FILTER_VF) &&\n\t    nla_put_u32(skb, IFLA_NUM_VF, dev_num_vf(dev->dev.parent)))"];
"1000281" [label="(ControlStructure,goto nla_put_failure;)"];
"1000263" [label="(Call,dev->dev.parent)"];
"1000272" [label="(Call,nla_put_u32(skb, IFLA_NUM_VF, dev_num_vf(dev->dev.parent)))"];
"1000540" [label="(Call,nlmsg_cancel(skb, nlh))"];
"1000269" [label="(Call,ext_filter_mask & RTEXT_FILTER_VF)"];
"1000227" [label="(Identifier,IFLA_STATS)"];
"1000216" [label="(Call,dev->addr_len)"];
"1000282" [label="(ControlStructure,if (dev->netdev_ops->ndo_get_vf_config && dev->dev.parent\n\t    && (ext_filter_mask & RTEXT_FILTER_VF)))"];
"1000546" [label="(MethodReturn,static int)"];
"1000192" [label="(Call,sizeof(map))"];
"1000210" [label="(Call,dev->dev_addr)"];
"1000313" [label="(Call,nla_nest_start(skb, IFLA_VFINFO_LIST))"];
"1000273" [label="(Identifier,skb)"];
"1000228" [label="(Call,sizeof(struct rtnl_link_stats))"];
"1000289" [label="(Call,dev->dev.parent\n\t    && (ext_filter_mask & RTEXT_FILTER_VF))"];
"1000214" [label="(Identifier,skb)"];
"1000261" [label="(ControlStructure,if (dev->dev.parent && (ext_filter_mask & RTEXT_FILTER_VF) &&\n\t    nla_put_u32(skb, IFLA_NUM_VF, dev_num_vf(dev->dev.parent))))"];
"1000271" [label="(Identifier,RTEXT_FILTER_VF)"];
"1000245" [label="(Call,attr = nla_reserve(skb, IFLA_STATS64,\n\t\t\tsizeof(struct rtnl_link_stats64)))"];
"1000203" [label="(Call,nla_put(skb, IFLA_ADDRESS, dev->addr_len, dev->dev_addr) ||\n\t\t    nla_put(skb, IFLA_BROADCAST, dev->addr_len, dev->broadcast))"];
"1000296" [label="(Identifier,ext_filter_mask)"];
"1000250" [label="(Call,sizeof(struct rtnl_link_stats64))"];
"1000248" [label="(Identifier,skb)"];
"1000468" [label="(Call,rtnl_port_fill(skb, dev))"];
"1000215" [label="(Identifier,IFLA_BROADCAST)"];
"1000305" [label="(Call,dev_num_vf(dev->dev.parent))"];
"1000188" [label="(ControlStructure,if (nla_put(skb, IFLA_MAP, sizeof(map), &map)))"];
"1000290" [label="(Call,dev->dev.parent)"];
"1000283" -> "1000282"  [label="AST: "];
"1000283" -> "1000284"  [label="CFG: "];
"1000283" -> "1000289"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000289" -> "1000283"  [label="AST: "];
"1000304" -> "1000283"  [label="CFG: "];
"1000469" -> "1000283"  [label="CFG: "];
"1000283" -> "1000546"  [label="DDG: dev->netdev_ops->ndo_get_vf_config"];
"1000283" -> "1000546"  [label="DDG: dev->dev.parent\n\t    && (ext_filter_mask & RTEXT_FILTER_VF)"];
"1000283" -> "1000546"  [label="DDG: dev->netdev_ops->ndo_get_vf_config && dev->dev.parent\n\t    && (ext_filter_mask & RTEXT_FILTER_VF)"];
"1000289" -> "1000283"  [label="DDG: dev->dev.parent"];
"1000289" -> "1000283"  [label="DDG: ext_filter_mask & RTEXT_FILTER_VF"];
"1000289" -> "1000290"  [label="CFG: "];
"1000289" -> "1000295"  [label="CFG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000295" -> "1000289"  [label="AST: "];
"1000289" -> "1000546"  [label="DDG: dev->dev.parent"];
"1000289" -> "1000546"  [label="DDG: ext_filter_mask & RTEXT_FILTER_VF"];
"1000262" -> "1000289"  [label="DDG: dev->dev.parent"];
"1000268" -> "1000289"  [label="DDG: ext_filter_mask & RTEXT_FILTER_VF"];
"1000295" -> "1000289"  [label="DDG: ext_filter_mask"];
"1000295" -> "1000289"  [label="DDG: RTEXT_FILTER_VF"];
"1000289" -> "1000305"  [label="DDG: dev->dev.parent"];
"1000262" -> "1000261"  [label="AST: "];
"1000262" -> "1000263"  [label="CFG: "];
"1000262" -> "1000268"  [label="CFG: "];
"1000263" -> "1000262"  [label="AST: "];
"1000268" -> "1000262"  [label="AST: "];
"1000281" -> "1000262"  [label="CFG: "];
"1000286" -> "1000262"  [label="CFG: "];
"1000262" -> "1000546"  [label="DDG: (ext_filter_mask & RTEXT_FILTER_VF) &&\n\t    nla_put_u32(skb, IFLA_NUM_VF, dev_num_vf(dev->dev.parent))"];
"1000262" -> "1000546"  [label="DDG: dev->dev.parent"];
"1000262" -> "1000546"  [label="DDG: dev->dev.parent && (ext_filter_mask & RTEXT_FILTER_VF) &&\n\t    nla_put_u32(skb, IFLA_NUM_VF, dev_num_vf(dev->dev.parent))"];
"1000275" -> "1000262"  [label="DDG: dev->dev.parent"];
"1000268" -> "1000262"  [label="DDG: ext_filter_mask & RTEXT_FILTER_VF"];
"1000268" -> "1000262"  [label="DDG: nla_put_u32(skb, IFLA_NUM_VF, dev_num_vf(dev->dev.parent))"];
"1000262" -> "1000305"  [label="DDG: dev->dev.parent"];
"1000275" -> "1000272"  [label="AST: "];
"1000275" -> "1000276"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000272" -> "1000275"  [label="CFG: "];
"1000275" -> "1000272"  [label="DDG: dev->dev.parent"];
"1000268" -> "1000269"  [label="CFG: "];
"1000268" -> "1000272"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000272" -> "1000268"  [label="AST: "];
"1000268" -> "1000546"  [label="DDG: ext_filter_mask & RTEXT_FILTER_VF"];
"1000268" -> "1000546"  [label="DDG: nla_put_u32(skb, IFLA_NUM_VF, dev_num_vf(dev->dev.parent))"];
"1000269" -> "1000268"  [label="DDG: ext_filter_mask"];
"1000269" -> "1000268"  [label="DDG: RTEXT_FILTER_VF"];
"1000272" -> "1000268"  [label="DDG: skb"];
"1000272" -> "1000268"  [label="DDG: IFLA_NUM_VF"];
"1000272" -> "1000268"  [label="DDG: dev_num_vf(dev->dev.parent)"];
"1000269" -> "1000271"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000271" -> "1000269"  [label="AST: "];
"1000273" -> "1000269"  [label="CFG: "];
"1000269" -> "1000546"  [label="DDG: ext_filter_mask"];
"1000269" -> "1000546"  [label="DDG: RTEXT_FILTER_VF"];
"1000269" -> "1000295"  [label="DDG: ext_filter_mask"];
"1000269" -> "1000295"  [label="DDG: RTEXT_FILTER_VF"];
"1000273" -> "1000272"  [label="AST: "];
"1000274" -> "1000272"  [label="AST: "];
"1000272" -> "1000546"  [label="DDG: dev_num_vf(dev->dev.parent)"];
"1000272" -> "1000546"  [label="DDG: IFLA_NUM_VF"];
"1000247" -> "1000272"  [label="DDG: skb"];
"1000272" -> "1000313"  [label="DDG: skb"];
"1000272" -> "1000468"  [label="DDG: skb"];
"1000272" -> "1000540"  [label="DDG: skb"];
"1000247" -> "1000245"  [label="AST: "];
"1000247" -> "1000250"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000249" -> "1000247"  [label="AST: "];
"1000250" -> "1000247"  [label="AST: "];
"1000245" -> "1000247"  [label="CFG: "];
"1000247" -> "1000546"  [label="DDG: IFLA_STATS64"];
"1000247" -> "1000245"  [label="DDG: skb"];
"1000247" -> "1000245"  [label="DDG: IFLA_STATS64"];
"1000225" -> "1000247"  [label="DDG: skb"];
"1000247" -> "1000313"  [label="DDG: skb"];
"1000247" -> "1000468"  [label="DDG: skb"];
"1000247" -> "1000540"  [label="DDG: skb"];
"1000225" -> "1000223"  [label="AST: "];
"1000225" -> "1000228"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000227" -> "1000225"  [label="AST: "];
"1000228" -> "1000225"  [label="AST: "];
"1000223" -> "1000225"  [label="CFG: "];
"1000225" -> "1000546"  [label="DDG: IFLA_STATS"];
"1000225" -> "1000223"  [label="DDG: skb"];
"1000225" -> "1000223"  [label="DDG: IFLA_STATS"];
"1000189" -> "1000225"  [label="DDG: skb"];
"1000213" -> "1000225"  [label="DDG: skb"];
"1000204" -> "1000225"  [label="DDG: skb"];
"1000225" -> "1000540"  [label="DDG: skb"];
"1000189" -> "1000188"  [label="AST: "];
"1000189" -> "1000194"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000191" -> "1000189"  [label="AST: "];
"1000192" -> "1000189"  [label="AST: "];
"1000194" -> "1000189"  [label="AST: "];
"1000196" -> "1000189"  [label="CFG: "];
"1000199" -> "1000189"  [label="CFG: "];
"1000189" -> "1000546"  [label="DDG: &map"];
"1000189" -> "1000546"  [label="DDG: nla_put(skb, IFLA_MAP, sizeof(map), &map)"];
"1000189" -> "1000546"  [label="DDG: IFLA_MAP"];
"1000189" -> "1000204"  [label="DDG: skb"];
"1000189" -> "1000540"  [label="DDG: skb"];
"1000213" -> "1000203"  [label="AST: "];
"1000213" -> "1000219"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000215" -> "1000213"  [label="AST: "];
"1000216" -> "1000213"  [label="AST: "];
"1000219" -> "1000213"  [label="AST: "];
"1000203" -> "1000213"  [label="CFG: "];
"1000213" -> "1000546"  [label="DDG: dev->addr_len"];
"1000213" -> "1000546"  [label="DDG: dev->broadcast"];
"1000213" -> "1000546"  [label="DDG: IFLA_BROADCAST"];
"1000213" -> "1000203"  [label="DDG: skb"];
"1000213" -> "1000203"  [label="DDG: IFLA_BROADCAST"];
"1000213" -> "1000203"  [label="DDG: dev->addr_len"];
"1000213" -> "1000203"  [label="DDG: dev->broadcast"];
"1000204" -> "1000213"  [label="DDG: skb"];
"1000204" -> "1000213"  [label="DDG: dev->addr_len"];
"1000213" -> "1000540"  [label="DDG: skb"];
"1000204" -> "1000203"  [label="AST: "];
"1000204" -> "1000210"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000206" -> "1000204"  [label="AST: "];
"1000207" -> "1000204"  [label="AST: "];
"1000210" -> "1000204"  [label="AST: "];
"1000214" -> "1000204"  [label="CFG: "];
"1000203" -> "1000204"  [label="CFG: "];
"1000204" -> "1000546"  [label="DDG: dev->dev_addr"];
"1000204" -> "1000546"  [label="DDG: IFLA_ADDRESS"];
"1000204" -> "1000546"  [label="DDG: dev->addr_len"];
"1000204" -> "1000203"  [label="DDG: skb"];
"1000204" -> "1000203"  [label="DDG: IFLA_ADDRESS"];
"1000204" -> "1000203"  [label="DDG: dev->addr_len"];
"1000204" -> "1000203"  [label="DDG: dev->dev_addr"];
"1000204" -> "1000540"  [label="DDG: skb"];
"1000295" -> "1000297"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000297" -> "1000295"  [label="AST: "];
"1000295" -> "1000546"  [label="DDG: ext_filter_mask"];
"1000295" -> "1000546"  [label="DDG: RTEXT_FILTER_VF"];
}
