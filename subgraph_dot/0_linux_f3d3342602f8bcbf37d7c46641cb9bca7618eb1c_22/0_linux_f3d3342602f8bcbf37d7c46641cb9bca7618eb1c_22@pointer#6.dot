digraph "0_linux_f3d3342602f8bcbf37d7c46641cb9bca7618eb1c_22@pointer" {
"1000104" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000261" [label="(Call,netlink_cmsg_recv_pktinfo(msg, skb))"];
"1000290" [label="(Call,NETLINK_CREDS(skb))"];
"1000301" [label="(Call,skb_free_datagram(sk, skb))"];
"1000323" [label="(Call,netlink_dump(sk))"];
"1000321" [label="(Call,ret = netlink_dump(sk))"];
"1000328" [label="(Call,sk->sk_err = ret)"];
"1000333" [label="(Call,sk->sk_error_report(sk))"];
"1000343" [label="(Call,netlink_rcv_wake(sk))"];
"1000335" [label="(Call,scm_recv(sock, msg, siocb->scm, flags))"];
"1000327" [label="(Block,)"];
"1000337" [label="(Identifier,msg)"];
"1000334" [label="(Identifier,sk)"];
"1000336" [label="(Identifier,sock)"];
"1000320" [label="(Block,)"];
"1000321" [label="(Call,ret = netlink_dump(sk))"];
"1000344" [label="(Identifier,sk)"];
"1000323" [label="(Call,netlink_dump(sk))"];
"1000103" [label="(MethodParameterIn,struct socket *sock)"];
"1000265" [label="(Call,NULL == siocb->scm)"];
"1000261" [label="(Call,netlink_cmsg_recv_pktinfo(msg, skb))"];
"1000332" [label="(Identifier,ret)"];
"1000346" [label="(MethodReturn,static int)"];
"1000176" [label="(Call,skb_shinfo(skb))"];
"1000266" [label="(Identifier,NULL)"];
"1000301" [label="(Call,skb_free_datagram(sk, skb))"];
"1000106" [label="(MethodParameterIn,int flags)"];
"1000165" [label="(Call,skb_shinfo(skb))"];
"1000290" [label="(Call,NETLINK_CREDS(skb))"];
"1000107" [label="(Block,)"];
"1000342" [label="(JumpTarget,out:)"];
"1000104" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000326" [label="(Identifier,ret)"];
"1000324" [label="(Identifier,sk)"];
"1000345" [label="(Identifier,copied)"];
"1000303" [label="(Identifier,skb)"];
"1000263" [label="(Identifier,skb)"];
"1000333" [label="(Call,sk->sk_error_report(sk))"];
"1000329" [label="(Call,sk->sk_err)"];
"1000341" [label="(Identifier,flags)"];
"1000328" [label="(Call,sk->sk_err = ret)"];
"1000307" [label="(Identifier,nlk)"];
"1000148" [label="(Call,skb_recv_datagram(sk, flags, noblock, &err))"];
"1000289" [label="(Call,*NETLINK_CREDS(skb))"];
"1000322" [label="(Identifier,ret)"];
"1000255" [label="(ControlStructure,if (nlk->flags & NETLINK_RECV_PKTINFO))"];
"1000277" [label="(Call,siocb->scm = &scm)"];
"1000245" [label="(Call,NETLINK_CB(skb))"];
"1000343" [label="(Call,netlink_rcv_wake(sk))"];
"1000335" [label="(Call,scm_recv(sock, msg, siocb->scm, flags))"];
"1000302" [label="(Identifier,sk)"];
"1000338" [label="(Call,siocb->scm)"];
"1000291" [label="(Identifier,skb)"];
"1000262" [label="(Identifier,msg)"];
"1000293" [label="(Call,flags & MSG_TRUNC)"];
"1000104" -> "1000101"  [label="AST: "];
"1000104" -> "1000346"  [label="DDG: msg"];
"1000104" -> "1000261"  [label="DDG: msg"];
"1000104" -> "1000335"  [label="DDG: msg"];
"1000261" -> "1000255"  [label="AST: "];
"1000261" -> "1000263"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000263" -> "1000261"  [label="AST: "];
"1000266" -> "1000261"  [label="CFG: "];
"1000261" -> "1000346"  [label="DDG: netlink_cmsg_recv_pktinfo(msg, skb)"];
"1000165" -> "1000261"  [label="DDG: skb"];
"1000176" -> "1000261"  [label="DDG: skb"];
"1000245" -> "1000261"  [label="DDG: skb"];
"1000261" -> "1000290"  [label="DDG: skb"];
"1000261" -> "1000335"  [label="DDG: msg"];
"1000290" -> "1000289"  [label="AST: "];
"1000290" -> "1000291"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000289" -> "1000290"  [label="CFG: "];
"1000165" -> "1000290"  [label="DDG: skb"];
"1000176" -> "1000290"  [label="DDG: skb"];
"1000245" -> "1000290"  [label="DDG: skb"];
"1000290" -> "1000301"  [label="DDG: skb"];
"1000301" -> "1000107"  [label="AST: "];
"1000301" -> "1000303"  [label="CFG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000303" -> "1000301"  [label="AST: "];
"1000307" -> "1000301"  [label="CFG: "];
"1000301" -> "1000346"  [label="DDG: skb"];
"1000301" -> "1000346"  [label="DDG: skb_free_datagram(sk, skb)"];
"1000148" -> "1000301"  [label="DDG: sk"];
"1000301" -> "1000323"  [label="DDG: sk"];
"1000301" -> "1000343"  [label="DDG: sk"];
"1000323" -> "1000321"  [label="AST: "];
"1000323" -> "1000324"  [label="CFG: "];
"1000324" -> "1000323"  [label="AST: "];
"1000321" -> "1000323"  [label="CFG: "];
"1000323" -> "1000321"  [label="DDG: sk"];
"1000323" -> "1000333"  [label="DDG: sk"];
"1000323" -> "1000343"  [label="DDG: sk"];
"1000321" -> "1000320"  [label="AST: "];
"1000322" -> "1000321"  [label="AST: "];
"1000326" -> "1000321"  [label="CFG: "];
"1000321" -> "1000346"  [label="DDG: ret"];
"1000321" -> "1000346"  [label="DDG: netlink_dump(sk)"];
"1000321" -> "1000328"  [label="DDG: ret"];
"1000328" -> "1000327"  [label="AST: "];
"1000328" -> "1000332"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000332" -> "1000328"  [label="AST: "];
"1000334" -> "1000328"  [label="CFG: "];
"1000328" -> "1000346"  [label="DDG: ret"];
"1000328" -> "1000346"  [label="DDG: sk->sk_err"];
"1000333" -> "1000327"  [label="AST: "];
"1000333" -> "1000334"  [label="CFG: "];
"1000334" -> "1000333"  [label="AST: "];
"1000336" -> "1000333"  [label="CFG: "];
"1000333" -> "1000346"  [label="DDG: sk->sk_error_report(sk)"];
"1000333" -> "1000343"  [label="DDG: sk"];
"1000343" -> "1000107"  [label="AST: "];
"1000343" -> "1000344"  [label="CFG: "];
"1000344" -> "1000343"  [label="AST: "];
"1000345" -> "1000343"  [label="CFG: "];
"1000343" -> "1000346"  [label="DDG: sk"];
"1000343" -> "1000346"  [label="DDG: netlink_rcv_wake(sk)"];
"1000148" -> "1000343"  [label="DDG: sk"];
"1000335" -> "1000107"  [label="AST: "];
"1000335" -> "1000341"  [label="CFG: "];
"1000336" -> "1000335"  [label="AST: "];
"1000337" -> "1000335"  [label="AST: "];
"1000338" -> "1000335"  [label="AST: "];
"1000341" -> "1000335"  [label="AST: "];
"1000342" -> "1000335"  [label="CFG: "];
"1000335" -> "1000346"  [label="DDG: sock"];
"1000335" -> "1000346"  [label="DDG: siocb->scm"];
"1000335" -> "1000346"  [label="DDG: flags"];
"1000335" -> "1000346"  [label="DDG: msg"];
"1000335" -> "1000346"  [label="DDG: scm_recv(sock, msg, siocb->scm, flags)"];
"1000103" -> "1000335"  [label="DDG: sock"];
"1000265" -> "1000335"  [label="DDG: siocb->scm"];
"1000277" -> "1000335"  [label="DDG: siocb->scm"];
"1000293" -> "1000335"  [label="DDG: flags"];
"1000106" -> "1000335"  [label="DDG: flags"];
}
