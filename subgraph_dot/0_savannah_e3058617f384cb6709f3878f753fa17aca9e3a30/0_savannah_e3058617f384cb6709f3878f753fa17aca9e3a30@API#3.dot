digraph "0_savannah_e3058617f384cb6709f3878f753fa17aca9e3a30@API" {
"1000459" [label="(Call,pos_lf > ft_memchr( cur,\n                                             '\r',\n                                             (size_t)( limit - cur ) ))"];
"1000457" [label="(Call,!pos_lf)"];
"1000443" [label="(Call,pos_lf  = ft_memchr( cur, '\n', (size_t)( limit - cur ) ))"];
"1000445" [label="(Call,ft_memchr( cur, '\n', (size_t)( limit - cur ) ))"];
"1000450" [label="(Call,limit - cur)"];
"1000448" [label="(Call,(size_t)( limit - cur ))"];
"1000461" [label="(Call,ft_memchr( cur,\n                                             '\r',\n                                             (size_t)( limit - cur ) ))"];
"1000466" [label="(Call,limit - cur)"];
"1000464" [label="(Call,(size_t)( limit - cur ))"];
"1000456" [label="(Call,!pos_lf                                       ||\n                         pos_lf > ft_memchr( cur,\n                                             '\r',\n                                             (size_t)( limit - cur ) ))"];
"1000455" [label="(Call,FT_BOOL( !pos_lf                                       ||\n                         pos_lf > ft_memchr( cur,\n                                             '\r',\n                                             (size_t)( limit - cur ) ) ))"];
"1000453" [label="(Call,test_cr = FT_BOOL( !pos_lf                                       ||\n                         pos_lf > ft_memchr( cur,\n                                             '\r',\n                                             (size_t)( limit - cur ) ) ))"];
"1000485" [label="(Call,test_cr && *cur == '\r')"];
"1000484" [label="(Call,(test_cr && *cur == '\r' ) ||\n                *cur == '\n')"];
"1000479" [label="(Call,*cur == '\t'               ||\n                (test_cr && *cur == '\r' ) ||\n                *cur == '\n')"];
"1000474" [label="(Call,*cur == ' '                ||\n                *cur == '\t'               ||\n                (test_cr && *cur == '\r' ) ||\n                *cur == '\n')"];
"1000470" [label="(Call,cur < limit                    &&\n              ( *cur == ' '                ||\n                *cur == '\t'               ||\n                (test_cr && *cur == '\r' ) ||\n                *cur == '\n'               ))"];
"1000484" [label="(Call,(test_cr && *cur == '\r' ) ||\n                *cur == '\n')"];
"1000272" [label="(Block,)"];
"1000457" [label="(Call,!pos_lf)"];
"1000445" [label="(Call,ft_memchr( cur, '\n', (size_t)( limit - cur ) ))"];
"1000468" [label="(Identifier,cur)"];
"1000452" [label="(Identifier,cur)"];
"1000443" [label="(Call,pos_lf  = ft_memchr( cur, '\n', (size_t)( limit - cur ) ))"];
"1000462" [label="(Identifier,cur)"];
"1000466" [label="(Call,limit - cur)"];
"1000472" [label="(Identifier,cur)"];
"1000456" [label="(Call,!pos_lf                                       ||\n                         pos_lf > ft_memchr( cur,\n                                             '\r',\n                                             (size_t)( limit - cur ) ))"];
"1000447" [label="(Literal,'\n')"];
"1000491" [label="(Call,*cur == '\n')"];
"1000464" [label="(Call,(size_t)( limit - cur ))"];
"1000467" [label="(Identifier,limit)"];
"1000493" [label="(Identifier,cur)"];
"1000469" [label="(ControlStructure,while ( cur < limit                    &&\n              ( *cur == ' '                ||\n                *cur == '\t'               ||\n                (test_cr && *cur == '\r' ) ||\n                *cur == '\n'               ) ))"];
"1000471" [label="(Call,cur < limit)"];
"1000496" [label="(Identifier,cur)"];
"1000458" [label="(Identifier,pos_lf)"];
"1000475" [label="(Call,*cur == ' ')"];
"1000485" [label="(Call,test_cr && *cur == '\r')"];
"1000486" [label="(Identifier,test_cr)"];
"1000470" [label="(Call,cur < limit                    &&\n              ( *cur == ' '                ||\n                *cur == '\t'               ||\n                (test_cr && *cur == '\r' ) ||\n                *cur == '\n'               ))"];
"1000450" [label="(Call,limit - cur)"];
"1000448" [label="(Call,(size_t)( limit - cur ))"];
"1000479" [label="(Call,*cur == '\t'               ||\n                (test_cr && *cur == '\r' ) ||\n                *cur == '\n')"];
"1000463" [label="(Literal,'\r')"];
"1000461" [label="(Call,ft_memchr( cur,\n                                             '\r',\n                                             (size_t)( limit - cur ) ))"];
"1000453" [label="(Call,test_cr = FT_BOOL( !pos_lf                                       ||\n                         pos_lf > ft_memchr( cur,\n                                             '\r',\n                                             (size_t)( limit - cur ) ) ))"];
"1000487" [label="(Call,*cur == '\r')"];
"1000474" [label="(Call,*cur == ' '                ||\n                *cur == '\t'               ||\n                (test_cr && *cur == '\r' ) ||\n                *cur == '\n')"];
"1000727" [label="(MethodReturn,RET)"];
"1000460" [label="(Identifier,pos_lf)"];
"1000444" [label="(Identifier,pos_lf)"];
"1000459" [label="(Call,pos_lf > ft_memchr( cur,\n                                             '\r',\n                                             (size_t)( limit - cur ) ))"];
"1000454" [label="(Identifier,test_cr)"];
"1000451" [label="(Identifier,limit)"];
"1000455" [label="(Call,FT_BOOL( !pos_lf                                       ||\n                         pos_lf > ft_memchr( cur,\n                                             '\r',\n                                             (size_t)( limit - cur ) ) ))"];
"1000499" [label="(Identifier,cur)"];
"1000446" [label="(Identifier,cur)"];
"1000480" [label="(Call,*cur == '\t')"];
"1000459" -> "1000456"  [label="AST: "];
"1000459" -> "1000461"  [label="CFG: "];
"1000460" -> "1000459"  [label="AST: "];
"1000461" -> "1000459"  [label="AST: "];
"1000456" -> "1000459"  [label="CFG: "];
"1000459" -> "1000727"  [label="DDG: ft_memchr( cur,\n                                             '\r',\n                                             (size_t)( limit - cur ) )"];
"1000459" -> "1000727"  [label="DDG: pos_lf"];
"1000459" -> "1000456"  [label="DDG: pos_lf"];
"1000459" -> "1000456"  [label="DDG: ft_memchr( cur,\n                                             '\r',\n                                             (size_t)( limit - cur ) )"];
"1000457" -> "1000459"  [label="DDG: pos_lf"];
"1000461" -> "1000459"  [label="DDG: cur"];
"1000461" -> "1000459"  [label="DDG: '\r'"];
"1000461" -> "1000459"  [label="DDG: (size_t)( limit - cur )"];
"1000457" -> "1000456"  [label="AST: "];
"1000457" -> "1000458"  [label="CFG: "];
"1000458" -> "1000457"  [label="AST: "];
"1000460" -> "1000457"  [label="CFG: "];
"1000456" -> "1000457"  [label="CFG: "];
"1000457" -> "1000727"  [label="DDG: pos_lf"];
"1000457" -> "1000456"  [label="DDG: pos_lf"];
"1000443" -> "1000457"  [label="DDG: pos_lf"];
"1000443" -> "1000272"  [label="AST: "];
"1000443" -> "1000445"  [label="CFG: "];
"1000444" -> "1000443"  [label="AST: "];
"1000445" -> "1000443"  [label="AST: "];
"1000454" -> "1000443"  [label="CFG: "];
"1000443" -> "1000727"  [label="DDG: ft_memchr( cur, '\n', (size_t)( limit - cur ) )"];
"1000445" -> "1000443"  [label="DDG: cur"];
"1000445" -> "1000443"  [label="DDG: '\n'"];
"1000445" -> "1000443"  [label="DDG: (size_t)( limit - cur )"];
"1000445" -> "1000448"  [label="CFG: "];
"1000446" -> "1000445"  [label="AST: "];
"1000447" -> "1000445"  [label="AST: "];
"1000448" -> "1000445"  [label="AST: "];
"1000445" -> "1000727"  [label="DDG: (size_t)( limit - cur )"];
"1000450" -> "1000445"  [label="DDG: cur"];
"1000448" -> "1000445"  [label="DDG: limit - cur"];
"1000445" -> "1000466"  [label="DDG: cur"];
"1000445" -> "1000471"  [label="DDG: cur"];
"1000450" -> "1000448"  [label="AST: "];
"1000450" -> "1000452"  [label="CFG: "];
"1000451" -> "1000450"  [label="AST: "];
"1000452" -> "1000450"  [label="AST: "];
"1000448" -> "1000450"  [label="CFG: "];
"1000450" -> "1000448"  [label="DDG: limit"];
"1000450" -> "1000448"  [label="DDG: cur"];
"1000450" -> "1000466"  [label="DDG: limit"];
"1000450" -> "1000471"  [label="DDG: limit"];
"1000449" -> "1000448"  [label="AST: "];
"1000448" -> "1000727"  [label="DDG: limit - cur"];
"1000461" -> "1000464"  [label="CFG: "];
"1000462" -> "1000461"  [label="AST: "];
"1000463" -> "1000461"  [label="AST: "];
"1000464" -> "1000461"  [label="AST: "];
"1000461" -> "1000727"  [label="DDG: (size_t)( limit - cur )"];
"1000466" -> "1000461"  [label="DDG: cur"];
"1000464" -> "1000461"  [label="DDG: limit - cur"];
"1000461" -> "1000471"  [label="DDG: cur"];
"1000466" -> "1000464"  [label="AST: "];
"1000466" -> "1000468"  [label="CFG: "];
"1000467" -> "1000466"  [label="AST: "];
"1000468" -> "1000466"  [label="AST: "];
"1000464" -> "1000466"  [label="CFG: "];
"1000466" -> "1000464"  [label="DDG: limit"];
"1000466" -> "1000464"  [label="DDG: cur"];
"1000466" -> "1000471"  [label="DDG: limit"];
"1000465" -> "1000464"  [label="AST: "];
"1000464" -> "1000727"  [label="DDG: limit - cur"];
"1000456" -> "1000455"  [label="AST: "];
"1000455" -> "1000456"  [label="CFG: "];
"1000456" -> "1000727"  [label="DDG: pos_lf > ft_memchr( cur,\n                                             '\r',\n                                             (size_t)( limit - cur ) )"];
"1000456" -> "1000727"  [label="DDG: !pos_lf"];
"1000456" -> "1000455"  [label="DDG: !pos_lf"];
"1000456" -> "1000455"  [label="DDG: pos_lf > ft_memchr( cur,\n                                             '\r',\n                                             (size_t)( limit - cur ) )"];
"1000455" -> "1000453"  [label="AST: "];
"1000453" -> "1000455"  [label="CFG: "];
"1000455" -> "1000727"  [label="DDG: !pos_lf                                       ||\n                         pos_lf > ft_memchr( cur,\n                                             '\r',\n                                             (size_t)( limit - cur ) )"];
"1000455" -> "1000453"  [label="DDG: !pos_lf                                       ||\n                         pos_lf > ft_memchr( cur,\n                                             '\r',\n                                             (size_t)( limit - cur ) )"];
"1000453" -> "1000272"  [label="AST: "];
"1000454" -> "1000453"  [label="AST: "];
"1000472" -> "1000453"  [label="CFG: "];
"1000453" -> "1000727"  [label="DDG: FT_BOOL( !pos_lf                                       ||\n                         pos_lf > ft_memchr( cur,\n                                             '\r',\n                                             (size_t)( limit - cur ) ) )"];
"1000453" -> "1000727"  [label="DDG: test_cr"];
"1000453" -> "1000485"  [label="DDG: test_cr"];
"1000485" -> "1000484"  [label="AST: "];
"1000485" -> "1000486"  [label="CFG: "];
"1000485" -> "1000487"  [label="CFG: "];
"1000486" -> "1000485"  [label="AST: "];
"1000487" -> "1000485"  [label="AST: "];
"1000493" -> "1000485"  [label="CFG: "];
"1000484" -> "1000485"  [label="CFG: "];
"1000485" -> "1000727"  [label="DDG: test_cr"];
"1000485" -> "1000727"  [label="DDG: *cur == '\r'"];
"1000485" -> "1000484"  [label="DDG: test_cr"];
"1000485" -> "1000484"  [label="DDG: *cur == '\r'"];
"1000487" -> "1000485"  [label="DDG: *cur"];
"1000487" -> "1000485"  [label="DDG: '\r'"];
"1000484" -> "1000479"  [label="AST: "];
"1000484" -> "1000491"  [label="CFG: "];
"1000491" -> "1000484"  [label="AST: "];
"1000479" -> "1000484"  [label="CFG: "];
"1000484" -> "1000727"  [label="DDG: *cur == '\n'"];
"1000484" -> "1000727"  [label="DDG: test_cr && *cur == '\r'"];
"1000484" -> "1000479"  [label="DDG: test_cr && *cur == '\r'"];
"1000484" -> "1000479"  [label="DDG: *cur == '\n'"];
"1000491" -> "1000484"  [label="DDG: *cur"];
"1000491" -> "1000484"  [label="DDG: '\n'"];
"1000479" -> "1000474"  [label="AST: "];
"1000479" -> "1000480"  [label="CFG: "];
"1000480" -> "1000479"  [label="AST: "];
"1000474" -> "1000479"  [label="CFG: "];
"1000479" -> "1000727"  [label="DDG: *cur == '\t'"];
"1000479" -> "1000727"  [label="DDG: (test_cr && *cur == '\r' ) ||\n                *cur == '\n'"];
"1000479" -> "1000474"  [label="DDG: *cur == '\t'"];
"1000479" -> "1000474"  [label="DDG: (test_cr && *cur == '\r' ) ||\n                *cur == '\n'"];
"1000480" -> "1000479"  [label="DDG: *cur"];
"1000480" -> "1000479"  [label="DDG: '\t'"];
"1000474" -> "1000470"  [label="AST: "];
"1000474" -> "1000475"  [label="CFG: "];
"1000475" -> "1000474"  [label="AST: "];
"1000470" -> "1000474"  [label="CFG: "];
"1000474" -> "1000727"  [label="DDG: *cur == '\t'               ||\n                (test_cr && *cur == '\r' ) ||\n                *cur == '\n'"];
"1000474" -> "1000727"  [label="DDG: *cur == ' '"];
"1000474" -> "1000470"  [label="DDG: *cur == ' '"];
"1000474" -> "1000470"  [label="DDG: *cur == '\t'               ||\n                (test_cr && *cur == '\r' ) ||\n                *cur == '\n'"];
"1000475" -> "1000474"  [label="DDG: *cur"];
"1000475" -> "1000474"  [label="DDG: ' '"];
"1000470" -> "1000469"  [label="AST: "];
"1000470" -> "1000471"  [label="CFG: "];
"1000471" -> "1000470"  [label="AST: "];
"1000496" -> "1000470"  [label="CFG: "];
"1000499" -> "1000470"  [label="CFG: "];
"1000470" -> "1000727"  [label="DDG: *cur == ' '                ||\n                *cur == '\t'               ||\n                (test_cr && *cur == '\r' ) ||\n                *cur == '\n'"];
"1000470" -> "1000727"  [label="DDG: cur < limit"];
"1000470" -> "1000727"  [label="DDG: cur < limit                    &&\n              ( *cur == ' '                ||\n                *cur == '\t'               ||\n                (test_cr && *cur == '\r' ) ||\n                *cur == '\n'               )"];
"1000471" -> "1000470"  [label="DDG: cur"];
"1000471" -> "1000470"  [label="DDG: limit"];
}
