digraph "0_savannah_e3058617f384cb6709f3878f753fa17aca9e3a30@API" {
"1000640" [label="(Call,psaux->t1_decrypt( parser->private_dict, parser->private_len, 55665U ))"];
"1000626" [label="(Call,parser->private_dict[len] = '\0')"];
"1000634" [label="(Call,FT_MEM_MOVE( parser->private_dict, cur, size ))"];
"1000528" [label="(Call,FT_ALLOC( parser->private_dict, size + 1 ))"];
"1000509" [label="(Call,size = parser->base_len - (FT_ULong)( cur - parser->base_dict ))"];
"1000511" [label="(Call,parser->base_len - (FT_ULong)( cur - parser->base_dict ))"];
"1000515" [label="(Call,(FT_ULong)( cur - parser->base_dict ))"];
"1000517" [label="(Call,cur - parser->base_dict)"];
"1000498" [label="(Call,cur >= limit)"];
"1000471" [label="(Call,cur < limit)"];
"1000495" [label="(Call,++cur)"];
"1000445" [label="(Call,ft_memchr( cur, '\n', (size_t)( limit - cur ) ))"];
"1000450" [label="(Call,limit - cur)"];
"1000448" [label="(Call,(size_t)( limit - cur ))"];
"1000461" [label="(Call,ft_memchr( cur,\n                                             '\r',\n                                             (size_t)( limit - cur ) ))"];
"1000466" [label="(Call,limit - cur)"];
"1000464" [label="(Call,(size_t)( limit - cur ))"];
"1000548" [label="(Call,parser->private_dict = parser->base_dict)"];
"1000578" [label="(Call,ft_isxdigit( cur[0] ))"];
"1000487" [label="(Call,*cur == '\r')"];
"1000480" [label="(Call,*cur == '\t')"];
"1000475" [label="(Call,*cur == ' ')"];
"1000491" [label="(Call,*cur == '\n')"];
"1000588" [label="(Call,ft_isxdigit( cur[2] ))"];
"1000583" [label="(Call,ft_isxdigit( cur[1] ))"];
"1000592" [label="(Call,ft_isxdigit( cur[3] ))"];
"1000607" [label="(Call,psaux->ps_parser_funcs->to_bytes( &parser->root,\n                                                parser->private_dict,\n                                                parser->private_len,\n                                                &len,\n                                                0 ))"];
"1000555" [label="(Call,parser->private_len  = size)"];
"1000536" [label="(Call,parser->private_len = size)"];
"1000221" [label="(Call,FT_ALLOC( parser->private_dict, parser->private_len ))"];
"1000204" [label="(Call,parser->private_len == 0)"];
"1000171" [label="(Call,parser->private_len = 0)"];
"1000194" [label="(Call,parser->private_len += size)"];
"1000200" [label="(Call,FT_STREAM_SKIP( size ))"];
"1000621" [label="(Call,parser->private_len = len)"];
"1000266" [label="(Call,parser->private_len += size)"];
"1000256" [label="(Call,FT_STREAM_READ( parser->private_dict + parser->private_len,\n                             size ))"];
"1000229" [label="(Call,parser->private_len = 0)"];
"1000649" [label="(Call,parser->private_len < 4)"];
"1000708" [label="(Call,parser->root.limit  = parser->root.cursor + parser->private_len)"];
"1000714" [label="(Call,parser->root.cursor + parser->private_len)"];
"1000690" [label="(Call,parser->root.base   = parser->private_dict)"];
"1000699" [label="(Call,parser->root.cursor = parser->private_dict)"];
"1000641" [label="(Call,parser->private_dict)"];
"1000500" [label="(Identifier,limit)"];
"1000484" [label="(Call,(test_cr && *cur == '\r' ) ||\n                *cur == '\n')"];
"1000175" [label="(Literal,0)"];
"1000195" [label="(Call,parser->private_len)"];
"1000640" [label="(Call,psaux->t1_decrypt( parser->private_dict, parser->private_len, 55665U ))"];
"1000272" [label="(Block,)"];
"1000607" [label="(Call,psaux->ps_parser_funcs->to_bytes( &parser->root,\n                                                parser->private_dict,\n                                                parser->private_len,\n                                                &len,\n                                                0 ))"];
"1000468" [label="(Identifier,cur)"];
"1000452" [label="(Identifier,cur)"];
"1000705" [label="(Call,parser->private_dict)"];
"1000235" [label="(Block,)"];
"1000549" [label="(Call,parser->private_dict)"];
"1000708" [label="(Call,parser->root.limit  = parser->root.cursor + parser->private_len)"];
"1000462" [label="(Identifier,cur)"];
"1000267" [label="(Call,parser->private_len)"];
"1000472" [label="(Identifier,cur)"];
"1000266" [label="(Call,parser->private_len += size)"];
"1000572" [label="(Call,cur + 3 < limit)"];
"1000497" [label="(ControlStructure,if ( cur >= limit ))"];
"1000447" [label="(Literal,'\n')"];
"1000177" [label="(Block,)"];
"1000478" [label="(Literal,' ')"];
"1000257" [label="(Call,parser->private_dict + parser->private_len)"];
"1000471" [label="(Call,cur < limit)"];
"1000198" [label="(Identifier,size)"];
"1000638" [label="(Identifier,cur)"];
"1000486" [label="(Identifier,test_cr)"];
"1000720" [label="(Call,parser->private_len)"];
"1000644" [label="(Call,parser->private_len)"];
"1000620" [label="(Literal,0)"];
"1000605" [label="(Call,(void)psaux->ps_parser_funcs->to_bytes( &parser->root,\n                                                parser->private_dict,\n                                                parser->private_len,\n                                                &len,\n                                                0 ))"];
"1000690" [label="(Call,parser->root.base   = parser->private_dict)"];
"1000488" [label="(Call,*cur)"];
"1000696" [label="(Call,parser->private_dict)"];
"1000615" [label="(Call,parser->private_len)"];
"1000700" [label="(Call,parser->root.cursor)"];
"1000519" [label="(Call,parser->base_dict)"];
"1000477" [label="(Identifier,cur)"];
"1000515" [label="(Call,(FT_ULong)( cur - parser->base_dict ))"];
"1000194" [label="(Call,parser->private_len += size)"];
"1000579" [label="(Call,cur[0])"];
"1000578" [label="(Call,ft_isxdigit( cur[0] ))"];
"1000141" [label="(Block,)"];
"1000555" [label="(Call,parser->private_len  = size)"];
"1000510" [label="(Identifier,size)"];
"1000699" [label="(Call,parser->root.cursor = parser->private_dict)"];
"1000445" [label="(Call,ft_memchr( cur, '\n', (size_t)( limit - cur ) ))"];
"1000669" [label="(Call,parser->private_dict[1] = ' ')"];
"1000265" [label="(ControlStructure,goto Fail;)"];
"1000203" [label="(ControlStructure,if ( parser->private_len == 0 ))"];
"1000538" [label="(Identifier,parser)"];
"1000627" [label="(Call,parser->private_dict[len])"];
"1000491" [label="(Call,*cur == '\n')"];
"1000650" [label="(Call,parser->private_len)"];
"1000233" [label="(Literal,0)"];
"1000512" [label="(Call,parser->base_len)"];
"1000469" [label="(ControlStructure,while ( cur < limit                    &&\n              ( *cur == ' '                ||\n                *cur == '\t'               ||\n                (test_cr && *cur == '\r' ) ||\n                *cur == '\n'               ) ))"];
"1000222" [label="(Call,parser->private_dict)"];
"1000475" [label="(Call,*cur == ' ')"];
"1000229" [label="(Call,parser->private_len = 0)"];
"1000608" [label="(Call,&parser->root)"];
"1000711" [label="(Identifier,parser)"];
"1000557" [label="(Identifier,parser)"];
"1000683" [label="(Call,parser->private_dict[3] = ' ')"];
"1000220" [label="(Identifier,start_pos)"];
"1000532" [label="(Call,size + 1)"];
"1000470" [label="(Call,cur < limit                    &&\n              ( *cur == ' '                ||\n                *cur == '\t'               ||\n                (test_cr && *cur == '\r' ) ||\n                *cur == '\n'               ))"];
"1000473" [label="(Identifier,limit)"];
"1000639" [label="(Identifier,size)"];
"1000450" [label="(Call,limit - cur)"];
"1000542" [label="(Block,)"];
"1000582" [label="(Call,ft_isxdigit( cur[1] ) &&\n           ft_isxdigit( cur[2] ) && ft_isxdigit( cur[3] ))"];
"1000199" [label="(ControlStructure,if ( FT_STREAM_SKIP( size ) ))"];
"1000633" [label="(ControlStructure,else)"];
"1000463" [label="(Literal,'\r')"];
"1000662" [label="(Call,parser->private_dict[0] = ' ')"];
"1000204" [label="(Call,parser->private_len == 0)"];
"1000593" [label="(Call,cur[3])"];
"1000474" [label="(Call,*cur == ' '                ||\n                *cur == '\t'               ||\n                (test_cr && *cur == '\r' ) ||\n                *cur == '\n')"];
"1000171" [label="(Call,parser->private_len = 0)"];
"1000727" [label="(MethodReturn,RET)"];
"1000536" [label="(Call,parser->private_len = size)"];
"1000256" [label="(Call,FT_STREAM_READ( parser->private_dict + parser->private_len,\n                             size ))"];
"1000612" [label="(Call,parser->private_dict)"];
"1000255" [label="(ControlStructure,if ( FT_STREAM_READ( parser->private_dict + parser->private_len,\n                             size ) ))"];
"1000459" [label="(Call,pos_lf > ft_memchr( cur,\n                                             '\r',\n                                             (size_t)( limit - cur ) ))"];
"1000499" [label="(Identifier,cur)"];
"1000503" [label="(Literal,\"T1_Get_Private_Dict:\"\n                   \" `eexec' not properly terminated\n\")"];
"1000723" [label="(JumpTarget,Fail:)"];
"1000584" [label="(Call,cur[1])"];
"1000635" [label="(Call,parser->private_dict)"];
"1000483" [label="(Literal,'\t')"];
"1000656" [label="(Literal,\"T1_Get_Private_Dict:\"\n                 \" invalid private dictionary section\n\")"];
"1000205" [label="(Call,parser->private_len)"];
"1000237" [label="(Identifier,error)"];
"1000268" [label="(Identifier,parser)"];
"1000583" [label="(Call,ft_isxdigit( cur[1] ))"];
"1000588" [label="(Call,ft_isxdigit( cur[2] ))"];
"1000443" [label="(Call,pos_lf  = ft_memchr( cur, '\n', (size_t)( limit - cur ) ))"];
"1000537" [label="(Call,parser->private_len)"];
"1000634" [label="(Call,FT_MEM_MOVE( parser->private_dict, cur, size ))"];
"1000621" [label="(Call,parser->private_len = len)"];
"1000559" [label="(Identifier,size)"];
"1000466" [label="(Call,limit - cur)"];
"1000270" [label="(Identifier,size)"];
"1000552" [label="(Call,parser->base_dict)"];
"1000598" [label="(Call,parser->root.cursor = cur)"];
"1000464" [label="(Call,(size_t)( limit - cur ))"];
"1000691" [label="(Call,parser->root.base)"];
"1000496" [label="(Identifier,cur)"];
"1000577" [label="(Call,ft_isxdigit( cur[0] ) && ft_isxdigit( cur[1] ) &&\n           ft_isxdigit( cur[2] ) && ft_isxdigit( cur[3] ))"];
"1000165" [label="(Block,)"];
"1000511" [label="(Call,parser->base_len - (FT_ULong)( cur - parser->base_dict ))"];
"1000715" [label="(Call,parser->root.cursor)"];
"1000495" [label="(Call,++cur)"];
"1000626" [label="(Call,parser->private_dict[len] = '\0')"];
"1000498" [label="(Call,cur >= limit)"];
"1000494" [label="(Literal,'\n')"];
"1000211" [label="(Literal,\"T1_Get_Private_Dict:\"\n                   \" invalid private dictionary section\n\")"];
"1000202" [label="(ControlStructure,goto Fail;)"];
"1000648" [label="(ControlStructure,if ( parser->private_len < 4 ))"];
"1000665" [label="(Identifier,parser)"];
"1000492" [label="(Call,*cur)"];
"1000479" [label="(Call,*cur == '\t'               ||\n                (test_cr && *cur == '\r' ) ||\n                *cur == '\n')"];
"1000642" [label="(Identifier,parser)"];
"1000225" [label="(Call,parser->private_len)"];
"1000509" [label="(Call,size = parser->base_len - (FT_ULong)( cur - parser->base_dict ))"];
"1000585" [label="(Identifier,cur)"];
"1000562" [label="(Identifier,parser)"];
"1000653" [label="(Literal,4)"];
"1000548" [label="(Call,parser->private_dict = parser->base_dict)"];
"1000487" [label="(Call,*cur == '\r')"];
"1000587" [label="(Call,ft_isxdigit( cur[2] ) && ft_isxdigit( cur[3] ))"];
"1000451" [label="(Identifier,limit)"];
"1000476" [label="(Call,*cur)"];
"1000490" [label="(Literal,'\r')"];
"1000594" [label="(Identifier,cur)"];
"1000529" [label="(Call,parser->private_dict)"];
"1000590" [label="(Identifier,cur)"];
"1000556" [label="(Call,parser->private_len)"];
"1000446" [label="(Identifier,cur)"];
"1000480" [label="(Call,*cur == '\t')"];
"1000526" [label="(Block,)"];
"1000618" [label="(Call,&len)"];
"1000200" [label="(Call,FT_STREAM_SKIP( size ))"];
"1000528" [label="(Call,FT_ALLOC( parser->private_dict, size + 1 ))"];
"1000622" [label="(Call,parser->private_len)"];
"1000527" [label="(ControlStructure,if ( FT_ALLOC( parser->private_dict, size + 1 ) ))"];
"1000467" [label="(Identifier,limit)"];
"1000596" [label="(Block,)"];
"1000517" [label="(Call,cur - parser->base_dict)"];
"1000647" [label="(Literal,55665U)"];
"1000632" [label="(Literal,'\0')"];
"1000651" [label="(Identifier,parser)"];
"1000221" [label="(Call,FT_ALLOC( parser->private_dict, parser->private_len ))"];
"1000485" [label="(Call,test_cr && *cur == '\r')"];
"1000230" [label="(Call,parser->private_len)"];
"1000573" [label="(Call,cur + 3)"];
"1000629" [label="(Identifier,parser)"];
"1000589" [label="(Call,cur[2])"];
"1000574" [label="(Identifier,cur)"];
"1000448" [label="(Call,(size_t)( limit - cur ))"];
"1000201" [label="(Identifier,size)"];
"1000540" [label="(Identifier,size)"];
"1000524" [label="(Identifier,parser)"];
"1000461" [label="(Call,ft_memchr( cur,\n                                             '\r',\n                                             (size_t)( limit - cur ) ))"];
"1000535" [label="(ControlStructure,goto Fail;)"];
"1000482" [label="(Identifier,cur)"];
"1000592" [label="(Call,ft_isxdigit( cur[3] ))"];
"1000264" [label="(Identifier,size)"];
"1000676" [label="(Call,parser->private_dict[2] = ' ')"];
"1000208" [label="(Literal,0)"];
"1000218" [label="(Call,FT_STREAM_SEEK( start_pos )                           ||\n           FT_ALLOC( parser->private_dict, parser->private_len ))"];
"1000625" [label="(Identifier,len)"];
"1000714" [label="(Call,parser->root.cursor + parser->private_len)"];
"1000709" [label="(Call,parser->root.limit)"];
"1000702" [label="(Identifier,parser)"];
"1000179" [label="(Identifier,error)"];
"1000481" [label="(Call,*cur)"];
"1000649" [label="(Call,parser->private_len < 4)"];
"1000172" [label="(Call,parser->private_len)"];
"1000518" [label="(Identifier,cur)"];
"1000640" -> "1000141"  [label="AST: "];
"1000640" -> "1000647"  [label="CFG: "];
"1000641" -> "1000640"  [label="AST: "];
"1000644" -> "1000640"  [label="AST: "];
"1000647" -> "1000640"  [label="AST: "];
"1000651" -> "1000640"  [label="CFG: "];
"1000640" -> "1000727"  [label="DDG: parser->private_dict"];
"1000640" -> "1000727"  [label="DDG: psaux->t1_decrypt( parser->private_dict, parser->private_len, 55665U )"];
"1000626" -> "1000640"  [label="DDG: parser->private_dict[len]"];
"1000634" -> "1000640"  [label="DDG: parser->private_dict"];
"1000607" -> "1000640"  [label="DDG: parser->private_dict"];
"1000221" -> "1000640"  [label="DDG: parser->private_dict"];
"1000621" -> "1000640"  [label="DDG: parser->private_len"];
"1000266" -> "1000640"  [label="DDG: parser->private_len"];
"1000555" -> "1000640"  [label="DDG: parser->private_len"];
"1000229" -> "1000640"  [label="DDG: parser->private_len"];
"1000536" -> "1000640"  [label="DDG: parser->private_len"];
"1000640" -> "1000649"  [label="DDG: parser->private_len"];
"1000640" -> "1000690"  [label="DDG: parser->private_dict"];
"1000640" -> "1000699"  [label="DDG: parser->private_dict"];
"1000626" -> "1000596"  [label="AST: "];
"1000626" -> "1000632"  [label="CFG: "];
"1000627" -> "1000626"  [label="AST: "];
"1000632" -> "1000626"  [label="AST: "];
"1000642" -> "1000626"  [label="CFG: "];
"1000626" -> "1000727"  [label="DDG: parser->private_dict[len]"];
"1000626" -> "1000690"  [label="DDG: parser->private_dict[len]"];
"1000626" -> "1000699"  [label="DDG: parser->private_dict[len]"];
"1000634" -> "1000633"  [label="AST: "];
"1000634" -> "1000639"  [label="CFG: "];
"1000635" -> "1000634"  [label="AST: "];
"1000638" -> "1000634"  [label="AST: "];
"1000639" -> "1000634"  [label="AST: "];
"1000642" -> "1000634"  [label="CFG: "];
"1000634" -> "1000727"  [label="DDG: cur"];
"1000634" -> "1000727"  [label="DDG: size"];
"1000634" -> "1000727"  [label="DDG: FT_MEM_MOVE( parser->private_dict, cur, size )"];
"1000528" -> "1000634"  [label="DDG: parser->private_dict"];
"1000548" -> "1000634"  [label="DDG: parser->private_dict"];
"1000578" -> "1000634"  [label="DDG: cur[0]"];
"1000588" -> "1000634"  [label="DDG: cur[2]"];
"1000583" -> "1000634"  [label="DDG: cur[1]"];
"1000592" -> "1000634"  [label="DDG: cur[3]"];
"1000517" -> "1000634"  [label="DDG: cur"];
"1000509" -> "1000634"  [label="DDG: size"];
"1000528" -> "1000527"  [label="AST: "];
"1000528" -> "1000532"  [label="CFG: "];
"1000529" -> "1000528"  [label="AST: "];
"1000532" -> "1000528"  [label="AST: "];
"1000535" -> "1000528"  [label="CFG: "];
"1000538" -> "1000528"  [label="CFG: "];
"1000528" -> "1000727"  [label="DDG: FT_ALLOC( parser->private_dict, size + 1 )"];
"1000528" -> "1000727"  [label="DDG: parser->private_dict"];
"1000528" -> "1000727"  [label="DDG: size + 1"];
"1000509" -> "1000528"  [label="DDG: size"];
"1000528" -> "1000607"  [label="DDG: parser->private_dict"];
"1000509" -> "1000272"  [label="AST: "];
"1000509" -> "1000511"  [label="CFG: "];
"1000510" -> "1000509"  [label="AST: "];
"1000511" -> "1000509"  [label="AST: "];
"1000524" -> "1000509"  [label="CFG: "];
"1000509" -> "1000727"  [label="DDG: parser->base_len - (FT_ULong)( cur - parser->base_dict )"];
"1000511" -> "1000509"  [label="DDG: parser->base_len"];
"1000511" -> "1000509"  [label="DDG: (FT_ULong)( cur - parser->base_dict )"];
"1000509" -> "1000532"  [label="DDG: size"];
"1000509" -> "1000536"  [label="DDG: size"];
"1000509" -> "1000555"  [label="DDG: size"];
"1000511" -> "1000515"  [label="CFG: "];
"1000512" -> "1000511"  [label="AST: "];
"1000515" -> "1000511"  [label="AST: "];
"1000511" -> "1000727"  [label="DDG: (FT_ULong)( cur - parser->base_dict )"];
"1000511" -> "1000727"  [label="DDG: parser->base_len"];
"1000515" -> "1000511"  [label="DDG: cur - parser->base_dict"];
"1000515" -> "1000517"  [label="CFG: "];
"1000516" -> "1000515"  [label="AST: "];
"1000517" -> "1000515"  [label="AST: "];
"1000515" -> "1000727"  [label="DDG: cur - parser->base_dict"];
"1000517" -> "1000515"  [label="DDG: cur"];
"1000517" -> "1000515"  [label="DDG: parser->base_dict"];
"1000517" -> "1000519"  [label="CFG: "];
"1000518" -> "1000517"  [label="AST: "];
"1000519" -> "1000517"  [label="AST: "];
"1000517" -> "1000727"  [label="DDG: parser->base_dict"];
"1000517" -> "1000727"  [label="DDG: cur"];
"1000498" -> "1000517"  [label="DDG: cur"];
"1000517" -> "1000548"  [label="DDG: parser->base_dict"];
"1000517" -> "1000572"  [label="DDG: cur"];
"1000517" -> "1000573"  [label="DDG: cur"];
"1000517" -> "1000578"  [label="DDG: cur"];
"1000517" -> "1000583"  [label="DDG: cur"];
"1000517" -> "1000588"  [label="DDG: cur"];
"1000517" -> "1000592"  [label="DDG: cur"];
"1000517" -> "1000598"  [label="DDG: cur"];
"1000498" -> "1000497"  [label="AST: "];
"1000498" -> "1000500"  [label="CFG: "];
"1000499" -> "1000498"  [label="AST: "];
"1000500" -> "1000498"  [label="AST: "];
"1000503" -> "1000498"  [label="CFG: "];
"1000510" -> "1000498"  [label="CFG: "];
"1000498" -> "1000727"  [label="DDG: cur >= limit"];
"1000498" -> "1000727"  [label="DDG: cur"];
"1000498" -> "1000727"  [label="DDG: limit"];
"1000471" -> "1000498"  [label="DDG: cur"];
"1000471" -> "1000498"  [label="DDG: limit"];
"1000498" -> "1000572"  [label="DDG: limit"];
"1000471" -> "1000470"  [label="AST: "];
"1000471" -> "1000473"  [label="CFG: "];
"1000472" -> "1000471"  [label="AST: "];
"1000473" -> "1000471"  [label="AST: "];
"1000477" -> "1000471"  [label="CFG: "];
"1000470" -> "1000471"  [label="CFG: "];
"1000471" -> "1000470"  [label="DDG: cur"];
"1000471" -> "1000470"  [label="DDG: limit"];
"1000495" -> "1000471"  [label="DDG: cur"];
"1000445" -> "1000471"  [label="DDG: cur"];
"1000461" -> "1000471"  [label="DDG: cur"];
"1000466" -> "1000471"  [label="DDG: limit"];
"1000450" -> "1000471"  [label="DDG: limit"];
"1000471" -> "1000495"  [label="DDG: cur"];
"1000495" -> "1000469"  [label="AST: "];
"1000495" -> "1000496"  [label="CFG: "];
"1000496" -> "1000495"  [label="AST: "];
"1000472" -> "1000495"  [label="CFG: "];
"1000445" -> "1000443"  [label="AST: "];
"1000445" -> "1000448"  [label="CFG: "];
"1000446" -> "1000445"  [label="AST: "];
"1000447" -> "1000445"  [label="AST: "];
"1000448" -> "1000445"  [label="AST: "];
"1000443" -> "1000445"  [label="CFG: "];
"1000445" -> "1000727"  [label="DDG: (size_t)( limit - cur )"];
"1000445" -> "1000443"  [label="DDG: cur"];
"1000445" -> "1000443"  [label="DDG: '\n'"];
"1000445" -> "1000443"  [label="DDG: (size_t)( limit - cur )"];
"1000450" -> "1000445"  [label="DDG: cur"];
"1000448" -> "1000445"  [label="DDG: limit - cur"];
"1000445" -> "1000466"  [label="DDG: cur"];
"1000450" -> "1000448"  [label="AST: "];
"1000450" -> "1000452"  [label="CFG: "];
"1000451" -> "1000450"  [label="AST: "];
"1000452" -> "1000450"  [label="AST: "];
"1000448" -> "1000450"  [label="CFG: "];
"1000450" -> "1000448"  [label="DDG: limit"];
"1000450" -> "1000448"  [label="DDG: cur"];
"1000450" -> "1000466"  [label="DDG: limit"];
"1000449" -> "1000448"  [label="AST: "];
"1000448" -> "1000727"  [label="DDG: limit - cur"];
"1000461" -> "1000459"  [label="AST: "];
"1000461" -> "1000464"  [label="CFG: "];
"1000462" -> "1000461"  [label="AST: "];
"1000463" -> "1000461"  [label="AST: "];
"1000464" -> "1000461"  [label="AST: "];
"1000459" -> "1000461"  [label="CFG: "];
"1000461" -> "1000727"  [label="DDG: (size_t)( limit - cur )"];
"1000461" -> "1000459"  [label="DDG: cur"];
"1000461" -> "1000459"  [label="DDG: '\r'"];
"1000461" -> "1000459"  [label="DDG: (size_t)( limit - cur )"];
"1000466" -> "1000461"  [label="DDG: cur"];
"1000464" -> "1000461"  [label="DDG: limit - cur"];
"1000466" -> "1000464"  [label="AST: "];
"1000466" -> "1000468"  [label="CFG: "];
"1000467" -> "1000466"  [label="AST: "];
"1000468" -> "1000466"  [label="AST: "];
"1000464" -> "1000466"  [label="CFG: "];
"1000466" -> "1000464"  [label="DDG: limit"];
"1000466" -> "1000464"  [label="DDG: cur"];
"1000465" -> "1000464"  [label="AST: "];
"1000464" -> "1000727"  [label="DDG: limit - cur"];
"1000548" -> "1000542"  [label="AST: "];
"1000548" -> "1000552"  [label="CFG: "];
"1000549" -> "1000548"  [label="AST: "];
"1000552" -> "1000548"  [label="AST: "];
"1000557" -> "1000548"  [label="CFG: "];
"1000548" -> "1000607"  [label="DDG: parser->private_dict"];
"1000578" -> "1000577"  [label="AST: "];
"1000578" -> "1000579"  [label="CFG: "];
"1000579" -> "1000578"  [label="AST: "];
"1000585" -> "1000578"  [label="CFG: "];
"1000577" -> "1000578"  [label="CFG: "];
"1000578" -> "1000727"  [label="DDG: cur[0]"];
"1000578" -> "1000577"  [label="DDG: cur[0]"];
"1000487" -> "1000578"  [label="DDG: *cur"];
"1000475" -> "1000578"  [label="DDG: *cur"];
"1000491" -> "1000578"  [label="DDG: *cur"];
"1000480" -> "1000578"  [label="DDG: *cur"];
"1000578" -> "1000598"  [label="DDG: cur[0]"];
"1000487" -> "1000485"  [label="AST: "];
"1000487" -> "1000490"  [label="CFG: "];
"1000488" -> "1000487"  [label="AST: "];
"1000490" -> "1000487"  [label="AST: "];
"1000485" -> "1000487"  [label="CFG: "];
"1000487" -> "1000727"  [label="DDG: *cur"];
"1000487" -> "1000475"  [label="DDG: *cur"];
"1000487" -> "1000485"  [label="DDG: *cur"];
"1000487" -> "1000485"  [label="DDG: '\r'"];
"1000480" -> "1000487"  [label="DDG: *cur"];
"1000487" -> "1000491"  [label="DDG: *cur"];
"1000480" -> "1000479"  [label="AST: "];
"1000480" -> "1000483"  [label="CFG: "];
"1000481" -> "1000480"  [label="AST: "];
"1000483" -> "1000480"  [label="AST: "];
"1000486" -> "1000480"  [label="CFG: "];
"1000479" -> "1000480"  [label="CFG: "];
"1000480" -> "1000727"  [label="DDG: *cur"];
"1000480" -> "1000475"  [label="DDG: *cur"];
"1000480" -> "1000479"  [label="DDG: *cur"];
"1000480" -> "1000479"  [label="DDG: '\t'"];
"1000475" -> "1000480"  [label="DDG: *cur"];
"1000480" -> "1000491"  [label="DDG: *cur"];
"1000475" -> "1000474"  [label="AST: "];
"1000475" -> "1000478"  [label="CFG: "];
"1000476" -> "1000475"  [label="AST: "];
"1000478" -> "1000475"  [label="AST: "];
"1000482" -> "1000475"  [label="CFG: "];
"1000474" -> "1000475"  [label="CFG: "];
"1000475" -> "1000727"  [label="DDG: *cur"];
"1000475" -> "1000474"  [label="DDG: *cur"];
"1000475" -> "1000474"  [label="DDG: ' '"];
"1000491" -> "1000475"  [label="DDG: *cur"];
"1000491" -> "1000484"  [label="AST: "];
"1000491" -> "1000494"  [label="CFG: "];
"1000492" -> "1000491"  [label="AST: "];
"1000494" -> "1000491"  [label="AST: "];
"1000484" -> "1000491"  [label="CFG: "];
"1000491" -> "1000727"  [label="DDG: *cur"];
"1000491" -> "1000484"  [label="DDG: *cur"];
"1000491" -> "1000484"  [label="DDG: '\n'"];
"1000588" -> "1000587"  [label="AST: "];
"1000588" -> "1000589"  [label="CFG: "];
"1000589" -> "1000588"  [label="AST: "];
"1000594" -> "1000588"  [label="CFG: "];
"1000587" -> "1000588"  [label="CFG: "];
"1000588" -> "1000727"  [label="DDG: cur[2]"];
"1000588" -> "1000587"  [label="DDG: cur[2]"];
"1000588" -> "1000598"  [label="DDG: cur[2]"];
"1000583" -> "1000582"  [label="AST: "];
"1000583" -> "1000584"  [label="CFG: "];
"1000584" -> "1000583"  [label="AST: "];
"1000590" -> "1000583"  [label="CFG: "];
"1000582" -> "1000583"  [label="CFG: "];
"1000583" -> "1000727"  [label="DDG: cur[1]"];
"1000583" -> "1000582"  [label="DDG: cur[1]"];
"1000583" -> "1000598"  [label="DDG: cur[1]"];
"1000592" -> "1000587"  [label="AST: "];
"1000592" -> "1000593"  [label="CFG: "];
"1000593" -> "1000592"  [label="AST: "];
"1000587" -> "1000592"  [label="CFG: "];
"1000592" -> "1000727"  [label="DDG: cur[3]"];
"1000592" -> "1000587"  [label="DDG: cur[3]"];
"1000592" -> "1000598"  [label="DDG: cur[3]"];
"1000607" -> "1000605"  [label="AST: "];
"1000607" -> "1000620"  [label="CFG: "];
"1000608" -> "1000607"  [label="AST: "];
"1000612" -> "1000607"  [label="AST: "];
"1000615" -> "1000607"  [label="AST: "];
"1000618" -> "1000607"  [label="AST: "];
"1000620" -> "1000607"  [label="AST: "];
"1000605" -> "1000607"  [label="CFG: "];
"1000607" -> "1000727"  [label="DDG: &len"];
"1000607" -> "1000727"  [label="DDG: &parser->root"];
"1000607" -> "1000605"  [label="DDG: &parser->root"];
"1000607" -> "1000605"  [label="DDG: &len"];
"1000607" -> "1000605"  [label="DDG: 0"];
"1000607" -> "1000605"  [label="DDG: parser->private_dict"];
"1000607" -> "1000605"  [label="DDG: parser->private_len"];
"1000555" -> "1000607"  [label="DDG: parser->private_len"];
"1000536" -> "1000607"  [label="DDG: parser->private_len"];
"1000555" -> "1000542"  [label="AST: "];
"1000555" -> "1000559"  [label="CFG: "];
"1000556" -> "1000555"  [label="AST: "];
"1000559" -> "1000555"  [label="AST: "];
"1000562" -> "1000555"  [label="CFG: "];
"1000555" -> "1000727"  [label="DDG: size"];
"1000536" -> "1000526"  [label="AST: "];
"1000536" -> "1000540"  [label="CFG: "];
"1000537" -> "1000536"  [label="AST: "];
"1000540" -> "1000536"  [label="AST: "];
"1000574" -> "1000536"  [label="CFG: "];
"1000536" -> "1000727"  [label="DDG: size"];
"1000221" -> "1000218"  [label="AST: "];
"1000221" -> "1000225"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000225" -> "1000221"  [label="AST: "];
"1000218" -> "1000221"  [label="CFG: "];
"1000221" -> "1000727"  [label="DDG: parser->private_len"];
"1000221" -> "1000727"  [label="DDG: parser->private_dict"];
"1000221" -> "1000218"  [label="DDG: parser->private_dict"];
"1000221" -> "1000218"  [label="DDG: parser->private_len"];
"1000204" -> "1000221"  [label="DDG: parser->private_len"];
"1000221" -> "1000256"  [label="DDG: parser->private_dict"];
"1000221" -> "1000257"  [label="DDG: parser->private_dict"];
"1000204" -> "1000203"  [label="AST: "];
"1000204" -> "1000208"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000208" -> "1000204"  [label="AST: "];
"1000211" -> "1000204"  [label="CFG: "];
"1000220" -> "1000204"  [label="CFG: "];
"1000204" -> "1000727"  [label="DDG: parser->private_len"];
"1000204" -> "1000727"  [label="DDG: parser->private_len == 0"];
"1000171" -> "1000204"  [label="DDG: parser->private_len"];
"1000194" -> "1000204"  [label="DDG: parser->private_len"];
"1000171" -> "1000165"  [label="AST: "];
"1000171" -> "1000175"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000175" -> "1000171"  [label="AST: "];
"1000179" -> "1000171"  [label="CFG: "];
"1000171" -> "1000727"  [label="DDG: parser->private_len"];
"1000171" -> "1000194"  [label="DDG: parser->private_len"];
"1000194" -> "1000177"  [label="AST: "];
"1000194" -> "1000198"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000198" -> "1000194"  [label="AST: "];
"1000201" -> "1000194"  [label="CFG: "];
"1000194" -> "1000727"  [label="DDG: parser->private_len"];
"1000200" -> "1000194"  [label="DDG: size"];
"1000200" -> "1000199"  [label="AST: "];
"1000200" -> "1000201"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000179" -> "1000200"  [label="CFG: "];
"1000202" -> "1000200"  [label="CFG: "];
"1000200" -> "1000727"  [label="DDG: size"];
"1000200" -> "1000727"  [label="DDG: FT_STREAM_SKIP( size )"];
"1000200" -> "1000256"  [label="DDG: size"];
"1000621" -> "1000596"  [label="AST: "];
"1000621" -> "1000625"  [label="CFG: "];
"1000622" -> "1000621"  [label="AST: "];
"1000625" -> "1000621"  [label="AST: "];
"1000629" -> "1000621"  [label="CFG: "];
"1000621" -> "1000727"  [label="DDG: len"];
"1000266" -> "1000235"  [label="AST: "];
"1000266" -> "1000270"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000270" -> "1000266"  [label="AST: "];
"1000237" -> "1000266"  [label="CFG: "];
"1000266" -> "1000727"  [label="DDG: size"];
"1000266" -> "1000256"  [label="DDG: parser->private_len"];
"1000266" -> "1000257"  [label="DDG: parser->private_len"];
"1000256" -> "1000266"  [label="DDG: size"];
"1000229" -> "1000266"  [label="DDG: parser->private_len"];
"1000256" -> "1000255"  [label="AST: "];
"1000256" -> "1000264"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000264" -> "1000256"  [label="AST: "];
"1000265" -> "1000256"  [label="CFG: "];
"1000268" -> "1000256"  [label="CFG: "];
"1000256" -> "1000727"  [label="DDG: size"];
"1000256" -> "1000727"  [label="DDG: parser->private_dict + parser->private_len"];
"1000256" -> "1000727"  [label="DDG: FT_STREAM_READ( parser->private_dict + parser->private_len,\n                             size )"];
"1000229" -> "1000256"  [label="DDG: parser->private_len"];
"1000229" -> "1000165"  [label="AST: "];
"1000229" -> "1000233"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000233" -> "1000229"  [label="AST: "];
"1000237" -> "1000229"  [label="CFG: "];
"1000229" -> "1000257"  [label="DDG: parser->private_len"];
"1000649" -> "1000648"  [label="AST: "];
"1000649" -> "1000653"  [label="CFG: "];
"1000650" -> "1000649"  [label="AST: "];
"1000653" -> "1000649"  [label="AST: "];
"1000656" -> "1000649"  [label="CFG: "];
"1000665" -> "1000649"  [label="CFG: "];
"1000649" -> "1000727"  [label="DDG: parser->private_len"];
"1000649" -> "1000727"  [label="DDG: parser->private_len < 4"];
"1000649" -> "1000708"  [label="DDG: parser->private_len"];
"1000649" -> "1000714"  [label="DDG: parser->private_len"];
"1000708" -> "1000141"  [label="AST: "];
"1000708" -> "1000714"  [label="CFG: "];
"1000709" -> "1000708"  [label="AST: "];
"1000714" -> "1000708"  [label="AST: "];
"1000723" -> "1000708"  [label="CFG: "];
"1000708" -> "1000727"  [label="DDG: parser->root.cursor + parser->private_len"];
"1000708" -> "1000727"  [label="DDG: parser->root.limit"];
"1000699" -> "1000708"  [label="DDG: parser->root.cursor"];
"1000714" -> "1000720"  [label="CFG: "];
"1000715" -> "1000714"  [label="AST: "];
"1000720" -> "1000714"  [label="AST: "];
"1000714" -> "1000727"  [label="DDG: parser->root.cursor"];
"1000714" -> "1000727"  [label="DDG: parser->private_len"];
"1000699" -> "1000714"  [label="DDG: parser->root.cursor"];
"1000690" -> "1000141"  [label="AST: "];
"1000690" -> "1000696"  [label="CFG: "];
"1000691" -> "1000690"  [label="AST: "];
"1000696" -> "1000690"  [label="AST: "];
"1000702" -> "1000690"  [label="CFG: "];
"1000690" -> "1000727"  [label="DDG: parser->root.base"];
"1000676" -> "1000690"  [label="DDG: parser->private_dict[2]"];
"1000669" -> "1000690"  [label="DDG: parser->private_dict[1]"];
"1000683" -> "1000690"  [label="DDG: parser->private_dict[3]"];
"1000662" -> "1000690"  [label="DDG: parser->private_dict[0]"];
"1000699" -> "1000141"  [label="AST: "];
"1000699" -> "1000705"  [label="CFG: "];
"1000700" -> "1000699"  [label="AST: "];
"1000705" -> "1000699"  [label="AST: "];
"1000711" -> "1000699"  [label="CFG: "];
"1000699" -> "1000727"  [label="DDG: parser->private_dict"];
"1000676" -> "1000699"  [label="DDG: parser->private_dict[2]"];
"1000669" -> "1000699"  [label="DDG: parser->private_dict[1]"];
"1000683" -> "1000699"  [label="DDG: parser->private_dict[3]"];
"1000662" -> "1000699"  [label="DDG: parser->private_dict[0]"];
}
