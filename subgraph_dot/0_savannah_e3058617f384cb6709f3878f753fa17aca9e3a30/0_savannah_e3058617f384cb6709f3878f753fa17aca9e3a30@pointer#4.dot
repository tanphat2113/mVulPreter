digraph "0_savannah_e3058617f384cb6709f3878f753fa17aca9e3a30@pointer" {
"1000304" [label="(Call,cur + 9)"];
"1000311" [label="(Call,cur[1] == 'e')"];
"1000337" [label="(Call,cur >= limit)"];
"1000317" [label="(Call,cur[2] == 'x')"];
"1000431" [label="(Call,cur >= limit)"];
"1000328" [label="(Call,cur[4] == 'c')"];
"1000323" [label="(Call,cur[3] == 'e')"];
"1000274" [label="(Call,*    cur   = parser->base_dict)"];
"1000387" [label="(Call,*cur == 'e')"];
"1000418" [label="(Call,cur   = limit)"];
"1000381" [label="(Call,cur < limit)"];
"1000411" [label="(Call,cur = parser->root.cursor)"];
"1000348" [label="(Call,parser->root.cursor = parser->base_dict)"];
"1000366" [label="(Call,cur   = parser->root.cursor)"];
"1000373" [label="(Call,limit = parser->root.limit)"];
"1000357" [label="(Call,parser->root.limit  = cur + 10)"];
"1000421" [label="(Call,limit = parser->base_dict + parser->base_len)"];
"1000334" [label="(Call,cur++)"];
"1000303" [label="(Call,cur + 9 < limit)"];
"1000280" [label="(Call,*    limit = cur + parser->base_len)"];
"1000337" [label="(Call,cur >= limit)"];
"1000327" [label="(Literal,'e')"];
"1000334" [label="(Call,cur++)"];
"1000381" [label="(Call,cur < limit)"];
"1000336" [label="(ControlStructure,if ( cur >= limit ))"];
"1000281" [label="(Identifier,limit)"];
"1000321" [label="(Literal,'x')"];
"1000384" [label="(Block,)"];
"1000354" [label="(Call,parser->base_dict)"];
"1000294" [label="(Identifier,c)"];
"1000272" [label="(Block,)"];
"1000373" [label="(Call,limit = parser->root.limit)"];
"1000282" [label="(Call,cur + parser->base_len)"];
"1000363" [label="(Call,cur + 10)"];
"1000323" [label="(Call,cur[3] == 'e')"];
"1000315" [label="(Literal,'e')"];
"1000330" [label="(Identifier,cur)"];
"1000348" [label="(Call,parser->root.cursor = parser->base_dict)"];
"1000316" [label="(Call,cur[2] == 'x' &&\n               cur[3] == 'e' &&\n               cur[4] == 'c')"];
"1000412" [label="(Identifier,cur)"];
"1000387" [label="(Call,*cur == 'e')"];
"1000436" [label="(Literal,\"T1_Get_Private_Dict:\"\n                   \" premature end in private dictionary\n\")"];
"1000386" [label="(Call,*cur == 'e' && ft_strncmp( (char*)cur, \"eexec\", 5 ) == 0)"];
"1000319" [label="(Identifier,cur)"];
"1000325" [label="(Identifier,cur)"];
"1000312" [label="(Call,cur[1])"];
"1000332" [label="(Literal,'c')"];
"1000375" [label="(Call,parser->root.limit)"];
"1000374" [label="(Identifier,limit)"];
"1000422" [label="(Identifier,limit)"];
"1000358" [label="(Call,parser->root.limit)"];
"1000317" [label="(Call,cur[2] == 'x')"];
"1000421" [label="(Call,limit = parser->base_dict + parser->base_len)"];
"1000411" [label="(Call,cur = parser->root.cursor)"];
"1000311" [label="(Call,cur[1] == 'e')"];
"1000349" [label="(Call,parser->root.cursor)"];
"1000383" [label="(Identifier,limit)"];
"1000357" [label="(Call,parser->root.limit  = cur + 10)"];
"1000275" [label="(Identifier,cur)"];
"1000310" [label="(Call,cur[1] == 'e' &&\n               cur[2] == 'x' &&\n               cur[3] == 'e' &&\n               cur[4] == 'c')"];
"1000280" [label="(Call,*    limit = cur + parser->base_len)"];
"1000382" [label="(Identifier,cur)"];
"1000290" [label="(JumpTarget,Again:)"];
"1000274" [label="(Call,*    cur   = parser->base_dict)"];
"1000442" [label="(ControlStructure,goto Again;)"];
"1000366" [label="(Call,cur   = parser->root.cursor)"];
"1000413" [label="(Call,parser->root.cursor)"];
"1000339" [label="(Identifier,limit)"];
"1000342" [label="(Literal,\"T1_Get_Private_Dict:\"\n                     \" could not find `eexec' keyword\n\")"];
"1000276" [label="(Call,parser->base_dict)"];
"1000431" [label="(Call,cur >= limit)"];
"1000305" [label="(Identifier,cur)"];
"1000367" [label="(Identifier,cur)"];
"1000423" [label="(Call,parser->base_dict + parser->base_len)"];
"1000324" [label="(Call,cur[3])"];
"1000292" [label="(Block,)"];
"1000433" [label="(Identifier,limit)"];
"1000303" [label="(Call,cur + 9 < limit)"];
"1000304" [label="(Call,cur + 9)"];
"1000329" [label="(Call,cur[4])"];
"1000306" [label="(Literal,9)"];
"1000318" [label="(Call,cur[2])"];
"1000420" [label="(Identifier,limit)"];
"1000328" [label="(Call,cur[4] == 'c')"];
"1000307" [label="(Identifier,limit)"];
"1000393" [label="(Call,(char*)cur)"];
"1000430" [label="(ControlStructure,if ( cur >= limit ))"];
"1000360" [label="(Identifier,parser)"];
"1000390" [label="(Literal,'e')"];
"1000419" [label="(Identifier,cur)"];
"1000322" [label="(Call,cur[3] == 'e' &&\n               cur[4] == 'c')"];
"1000727" [label="(MethodReturn,RET)"];
"1000388" [label="(Call,*cur)"];
"1000380" [label="(ControlStructure,while ( cur < limit ))"];
"1000389" [label="(Identifier,cur)"];
"1000432" [label="(Identifier,cur)"];
"1000338" [label="(Identifier,cur)"];
"1000335" [label="(Identifier,cur)"];
"1000299" [label="(Call,c == 'e' && cur + 9 < limit)"];
"1000418" [label="(Call,cur   = limit)"];
"1000368" [label="(Call,parser->root.cursor)"];
"1000293" [label="(Call,c = cur[0])"];
"1000304" -> "1000303"  [label="AST: "];
"1000304" -> "1000306"  [label="CFG: "];
"1000305" -> "1000304"  [label="AST: "];
"1000306" -> "1000304"  [label="AST: "];
"1000307" -> "1000304"  [label="CFG: "];
"1000311" -> "1000304"  [label="DDG: cur[1]"];
"1000317" -> "1000304"  [label="DDG: cur[2]"];
"1000337" -> "1000304"  [label="DDG: cur"];
"1000431" -> "1000304"  [label="DDG: cur"];
"1000328" -> "1000304"  [label="DDG: cur[4]"];
"1000323" -> "1000304"  [label="DDG: cur[3]"];
"1000274" -> "1000304"  [label="DDG: cur"];
"1000387" -> "1000304"  [label="DDG: *cur"];
"1000311" -> "1000310"  [label="AST: "];
"1000311" -> "1000315"  [label="CFG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000315" -> "1000311"  [label="AST: "];
"1000319" -> "1000311"  [label="CFG: "];
"1000310" -> "1000311"  [label="CFG: "];
"1000311" -> "1000727"  [label="DDG: cur[1]"];
"1000311" -> "1000303"  [label="DDG: cur[1]"];
"1000311" -> "1000310"  [label="DDG: cur[1]"];
"1000311" -> "1000310"  [label="DDG: 'e'"];
"1000337" -> "1000311"  [label="DDG: cur"];
"1000431" -> "1000311"  [label="DDG: cur"];
"1000317" -> "1000311"  [label="DDG: cur[2]"];
"1000328" -> "1000311"  [label="DDG: cur[4]"];
"1000323" -> "1000311"  [label="DDG: cur[3]"];
"1000274" -> "1000311"  [label="DDG: cur"];
"1000387" -> "1000311"  [label="DDG: *cur"];
"1000311" -> "1000317"  [label="DDG: cur[1]"];
"1000311" -> "1000323"  [label="DDG: cur[1]"];
"1000311" -> "1000328"  [label="DDG: cur[1]"];
"1000311" -> "1000334"  [label="DDG: cur[1]"];
"1000311" -> "1000337"  [label="DDG: cur[1]"];
"1000311" -> "1000357"  [label="DDG: cur[1]"];
"1000311" -> "1000363"  [label="DDG: cur[1]"];
"1000311" -> "1000381"  [label="DDG: cur[1]"];
"1000311" -> "1000393"  [label="DDG: cur[1]"];
"1000311" -> "1000431"  [label="DDG: cur[1]"];
"1000337" -> "1000336"  [label="AST: "];
"1000337" -> "1000339"  [label="CFG: "];
"1000338" -> "1000337"  [label="AST: "];
"1000339" -> "1000337"  [label="AST: "];
"1000294" -> "1000337"  [label="CFG: "];
"1000342" -> "1000337"  [label="CFG: "];
"1000337" -> "1000727"  [label="DDG: limit"];
"1000337" -> "1000727"  [label="DDG: cur"];
"1000337" -> "1000727"  [label="DDG: cur >= limit"];
"1000337" -> "1000293"  [label="DDG: cur"];
"1000337" -> "1000303"  [label="DDG: cur"];
"1000337" -> "1000303"  [label="DDG: limit"];
"1000337" -> "1000317"  [label="DDG: cur"];
"1000337" -> "1000323"  [label="DDG: cur"];
"1000337" -> "1000328"  [label="DDG: cur"];
"1000337" -> "1000334"  [label="DDG: cur"];
"1000317" -> "1000337"  [label="DDG: cur[2]"];
"1000328" -> "1000337"  [label="DDG: cur[4]"];
"1000334" -> "1000337"  [label="DDG: cur"];
"1000323" -> "1000337"  [label="DDG: cur[3]"];
"1000387" -> "1000337"  [label="DDG: *cur"];
"1000431" -> "1000337"  [label="DDG: cur"];
"1000431" -> "1000337"  [label="DDG: limit"];
"1000274" -> "1000337"  [label="DDG: cur"];
"1000303" -> "1000337"  [label="DDG: limit"];
"1000280" -> "1000337"  [label="DDG: limit"];
"1000337" -> "1000357"  [label="DDG: cur"];
"1000337" -> "1000363"  [label="DDG: cur"];
"1000337" -> "1000381"  [label="DDG: cur"];
"1000337" -> "1000387"  [label="DDG: cur"];
"1000337" -> "1000393"  [label="DDG: cur"];
"1000337" -> "1000431"  [label="DDG: cur"];
"1000317" -> "1000316"  [label="AST: "];
"1000317" -> "1000321"  [label="CFG: "];
"1000318" -> "1000317"  [label="AST: "];
"1000321" -> "1000317"  [label="AST: "];
"1000325" -> "1000317"  [label="CFG: "];
"1000316" -> "1000317"  [label="CFG: "];
"1000317" -> "1000727"  [label="DDG: cur[2]"];
"1000317" -> "1000303"  [label="DDG: cur[2]"];
"1000317" -> "1000316"  [label="DDG: cur[2]"];
"1000317" -> "1000316"  [label="DDG: 'x'"];
"1000431" -> "1000317"  [label="DDG: cur"];
"1000328" -> "1000317"  [label="DDG: cur[4]"];
"1000323" -> "1000317"  [label="DDG: cur[3]"];
"1000274" -> "1000317"  [label="DDG: cur"];
"1000387" -> "1000317"  [label="DDG: *cur"];
"1000317" -> "1000323"  [label="DDG: cur[2]"];
"1000317" -> "1000328"  [label="DDG: cur[2]"];
"1000317" -> "1000334"  [label="DDG: cur[2]"];
"1000317" -> "1000357"  [label="DDG: cur[2]"];
"1000317" -> "1000363"  [label="DDG: cur[2]"];
"1000317" -> "1000381"  [label="DDG: cur[2]"];
"1000317" -> "1000393"  [label="DDG: cur[2]"];
"1000317" -> "1000431"  [label="DDG: cur[2]"];
"1000431" -> "1000430"  [label="AST: "];
"1000431" -> "1000433"  [label="CFG: "];
"1000432" -> "1000431"  [label="AST: "];
"1000433" -> "1000431"  [label="AST: "];
"1000436" -> "1000431"  [label="CFG: "];
"1000442" -> "1000431"  [label="CFG: "];
"1000431" -> "1000727"  [label="DDG: cur"];
"1000431" -> "1000727"  [label="DDG: cur >= limit"];
"1000431" -> "1000727"  [label="DDG: limit"];
"1000431" -> "1000293"  [label="DDG: cur"];
"1000431" -> "1000303"  [label="DDG: cur"];
"1000431" -> "1000303"  [label="DDG: limit"];
"1000431" -> "1000323"  [label="DDG: cur"];
"1000431" -> "1000328"  [label="DDG: cur"];
"1000431" -> "1000334"  [label="DDG: cur"];
"1000431" -> "1000357"  [label="DDG: cur"];
"1000431" -> "1000363"  [label="DDG: cur"];
"1000431" -> "1000381"  [label="DDG: cur"];
"1000431" -> "1000387"  [label="DDG: cur"];
"1000431" -> "1000393"  [label="DDG: cur"];
"1000328" -> "1000431"  [label="DDG: cur[4]"];
"1000418" -> "1000431"  [label="DDG: cur"];
"1000323" -> "1000431"  [label="DDG: cur[3]"];
"1000387" -> "1000431"  [label="DDG: *cur"];
"1000274" -> "1000431"  [label="DDG: cur"];
"1000421" -> "1000431"  [label="DDG: limit"];
"1000328" -> "1000322"  [label="AST: "];
"1000328" -> "1000332"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000332" -> "1000328"  [label="AST: "];
"1000322" -> "1000328"  [label="CFG: "];
"1000328" -> "1000727"  [label="DDG: cur[4]"];
"1000328" -> "1000303"  [label="DDG: cur[4]"];
"1000328" -> "1000323"  [label="DDG: cur[4]"];
"1000328" -> "1000322"  [label="DDG: cur[4]"];
"1000328" -> "1000322"  [label="DDG: 'c'"];
"1000323" -> "1000328"  [label="DDG: cur[3]"];
"1000274" -> "1000328"  [label="DDG: cur"];
"1000387" -> "1000328"  [label="DDG: *cur"];
"1000328" -> "1000334"  [label="DDG: cur[4]"];
"1000328" -> "1000357"  [label="DDG: cur[4]"];
"1000328" -> "1000363"  [label="DDG: cur[4]"];
"1000328" -> "1000381"  [label="DDG: cur[4]"];
"1000328" -> "1000393"  [label="DDG: cur[4]"];
"1000323" -> "1000322"  [label="AST: "];
"1000323" -> "1000327"  [label="CFG: "];
"1000324" -> "1000323"  [label="AST: "];
"1000327" -> "1000323"  [label="AST: "];
"1000330" -> "1000323"  [label="CFG: "];
"1000322" -> "1000323"  [label="CFG: "];
"1000323" -> "1000727"  [label="DDG: cur[3]"];
"1000323" -> "1000303"  [label="DDG: cur[3]"];
"1000323" -> "1000322"  [label="DDG: cur[3]"];
"1000323" -> "1000322"  [label="DDG: 'e'"];
"1000274" -> "1000323"  [label="DDG: cur"];
"1000387" -> "1000323"  [label="DDG: *cur"];
"1000323" -> "1000334"  [label="DDG: cur[3]"];
"1000323" -> "1000357"  [label="DDG: cur[3]"];
"1000323" -> "1000363"  [label="DDG: cur[3]"];
"1000323" -> "1000381"  [label="DDG: cur[3]"];
"1000323" -> "1000393"  [label="DDG: cur[3]"];
"1000274" -> "1000272"  [label="AST: "];
"1000274" -> "1000276"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000276" -> "1000274"  [label="AST: "];
"1000281" -> "1000274"  [label="CFG: "];
"1000274" -> "1000727"  [label="DDG: parser->base_dict"];
"1000274" -> "1000280"  [label="DDG: cur"];
"1000274" -> "1000282"  [label="DDG: cur"];
"1000274" -> "1000293"  [label="DDG: cur"];
"1000274" -> "1000303"  [label="DDG: cur"];
"1000274" -> "1000334"  [label="DDG: cur"];
"1000274" -> "1000357"  [label="DDG: cur"];
"1000274" -> "1000363"  [label="DDG: cur"];
"1000274" -> "1000381"  [label="DDG: cur"];
"1000274" -> "1000387"  [label="DDG: cur"];
"1000274" -> "1000393"  [label="DDG: cur"];
"1000387" -> "1000386"  [label="AST: "];
"1000387" -> "1000390"  [label="CFG: "];
"1000388" -> "1000387"  [label="AST: "];
"1000390" -> "1000387"  [label="AST: "];
"1000394" -> "1000387"  [label="CFG: "];
"1000386" -> "1000387"  [label="CFG: "];
"1000387" -> "1000727"  [label="DDG: *cur"];
"1000387" -> "1000293"  [label="DDG: *cur"];
"1000387" -> "1000303"  [label="DDG: *cur"];
"1000387" -> "1000334"  [label="DDG: *cur"];
"1000387" -> "1000357"  [label="DDG: *cur"];
"1000387" -> "1000363"  [label="DDG: *cur"];
"1000387" -> "1000381"  [label="DDG: *cur"];
"1000387" -> "1000386"  [label="DDG: *cur"];
"1000387" -> "1000386"  [label="DDG: 'e'"];
"1000387" -> "1000393"  [label="DDG: *cur"];
"1000418" -> "1000272"  [label="AST: "];
"1000418" -> "1000420"  [label="CFG: "];
"1000419" -> "1000418"  [label="AST: "];
"1000420" -> "1000418"  [label="AST: "];
"1000422" -> "1000418"  [label="CFG: "];
"1000381" -> "1000418"  [label="DDG: limit"];
"1000381" -> "1000380"  [label="AST: "];
"1000381" -> "1000383"  [label="CFG: "];
"1000382" -> "1000381"  [label="AST: "];
"1000383" -> "1000381"  [label="AST: "];
"1000389" -> "1000381"  [label="CFG: "];
"1000419" -> "1000381"  [label="CFG: "];
"1000381" -> "1000727"  [label="DDG: cur < limit"];
"1000411" -> "1000381"  [label="DDG: cur"];
"1000366" -> "1000381"  [label="DDG: cur"];
"1000373" -> "1000381"  [label="DDG: limit"];
"1000381" -> "1000393"  [label="DDG: cur"];
"1000411" -> "1000384"  [label="AST: "];
"1000411" -> "1000413"  [label="CFG: "];
"1000412" -> "1000411"  [label="AST: "];
"1000413" -> "1000411"  [label="AST: "];
"1000382" -> "1000411"  [label="CFG: "];
"1000411" -> "1000727"  [label="DDG: parser->root.cursor"];
"1000348" -> "1000411"  [label="DDG: parser->root.cursor"];
"1000348" -> "1000272"  [label="AST: "];
"1000348" -> "1000354"  [label="CFG: "];
"1000349" -> "1000348"  [label="AST: "];
"1000354" -> "1000348"  [label="AST: "];
"1000360" -> "1000348"  [label="CFG: "];
"1000348" -> "1000366"  [label="DDG: parser->root.cursor"];
"1000366" -> "1000272"  [label="AST: "];
"1000366" -> "1000368"  [label="CFG: "];
"1000367" -> "1000366"  [label="AST: "];
"1000368" -> "1000366"  [label="AST: "];
"1000374" -> "1000366"  [label="CFG: "];
"1000366" -> "1000727"  [label="DDG: parser->root.cursor"];
"1000373" -> "1000272"  [label="AST: "];
"1000373" -> "1000375"  [label="CFG: "];
"1000374" -> "1000373"  [label="AST: "];
"1000375" -> "1000373"  [label="AST: "];
"1000382" -> "1000373"  [label="CFG: "];
"1000373" -> "1000727"  [label="DDG: parser->root.limit"];
"1000357" -> "1000373"  [label="DDG: parser->root.limit"];
"1000357" -> "1000272"  [label="AST: "];
"1000357" -> "1000363"  [label="CFG: "];
"1000358" -> "1000357"  [label="AST: "];
"1000363" -> "1000357"  [label="AST: "];
"1000367" -> "1000357"  [label="CFG: "];
"1000357" -> "1000727"  [label="DDG: cur + 10"];
"1000421" -> "1000272"  [label="AST: "];
"1000421" -> "1000423"  [label="CFG: "];
"1000422" -> "1000421"  [label="AST: "];
"1000423" -> "1000421"  [label="AST: "];
"1000432" -> "1000421"  [label="CFG: "];
"1000421" -> "1000727"  [label="DDG: parser->base_dict + parser->base_len"];
"1000334" -> "1000292"  [label="AST: "];
"1000334" -> "1000335"  [label="CFG: "];
"1000335" -> "1000334"  [label="AST: "];
"1000338" -> "1000334"  [label="CFG: "];
"1000303" -> "1000299"  [label="AST: "];
"1000303" -> "1000307"  [label="CFG: "];
"1000307" -> "1000303"  [label="AST: "];
"1000299" -> "1000303"  [label="CFG: "];
"1000303" -> "1000727"  [label="DDG: cur + 9"];
"1000303" -> "1000299"  [label="DDG: cur + 9"];
"1000303" -> "1000299"  [label="DDG: limit"];
"1000280" -> "1000303"  [label="DDG: limit"];
"1000280" -> "1000272"  [label="AST: "];
"1000280" -> "1000282"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000282" -> "1000280"  [label="AST: "];
"1000290" -> "1000280"  [label="CFG: "];
"1000280" -> "1000727"  [label="DDG: cur + parser->base_len"];
}
