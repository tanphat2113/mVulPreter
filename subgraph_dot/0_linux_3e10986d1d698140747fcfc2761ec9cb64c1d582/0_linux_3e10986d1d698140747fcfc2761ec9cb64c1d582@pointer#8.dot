digraph "0_linux_3e10986d1d698140747fcfc2761ec9cb64c1d582@pointer" {
"1000535" [label="(Call,sock_set_timeout(&sk->sk_rcvtimeo, optval, optlen))"];
"1000147" [label="(Call,(int __user *)optval)"];
"1000111" [label="(MethodParameterIn,char __user *optval)"];
"1000137" [label="(Call,optlen < sizeof(int))"];
"1000112" [label="(MethodParameterIn,unsigned int optlen)"];
"1000533" [label="(Call,ret = sock_set_timeout(&sk->sk_rcvtimeo, optval, optlen))"];
"1000666" [label="(Return,return ret;)"];
"1000350" [label="(Call,ret = -EINVAL)"];
"1000149" [label="(Identifier,optval)"];
"1000139" [label="(Call,sizeof(int))"];
"1000534" [label="(Identifier,ret)"];
"1000111" [label="(MethodParameterIn,char __user *optval)"];
"1000113" [label="(Block,)"];
"1000586" [label="(Call,ret = sk_detach_filter(sk))"];
"1000668" [label="(MethodReturn,int)"];
"1000163" [label="(Block,)"];
"1000546" [label="(Call,sock_set_timeout(&sk->sk_sndtimeo, optval, optlen))"];
"1000244" [label="(Call,ret = -EPERM)"];
"1000345" [label="(Call,optlen < sizeof(ling))"];
"1000613" [label="(Call,ret = -EPERM)"];
"1000356" [label="(Call,copy_from_user(&ling, optval, sizeof(ling)))"];
"1000533" [label="(Call,ret = sock_set_timeout(&sk->sk_rcvtimeo, optval, optlen))"];
"1000132" [label="(Call,sock_bindtodevice(sk, optval, optlen))"];
"1000467" [label="(Call,ret = -EINVAL)"];
"1000544" [label="(Call,ret = sock_set_timeout(&sk->sk_sndtimeo, optval, optlen))"];
"1000578" [label="(Call,ret = sk_attach_filter(&fprog, sk))"];
"1000363" [label="(Call,ret = -EFAULT)"];
"1000143" [label="(Identifier,EINVAL)"];
"1000171" [label="(Call,ret = -EACCES)"];
"1000566" [label="(Call,ret = -EFAULT)"];
"1000540" [label="(Identifier,optval)"];
"1000541" [label="(Identifier,optlen)"];
"1000147" [label="(Call,(int __user *)optval)"];
"1000536" [label="(Call,&sk->sk_rcvtimeo)"];
"1000280" [label="(Call,ret = -EPERM)"];
"1000542" [label="(ControlStructure,break;)"];
"1000571" [label="(Call,copy_from_user(&fprog, optval, sizeof(fprog)))"];
"1000124" [label="(Call,ret = 0)"];
"1000136" [label="(ControlStructure,if (optlen < sizeof(int)))"];
"1000555" [label="(Call,ret = -EINVAL)"];
"1000659" [label="(Call,ret = -ENOPROTOOPT)"];
"1000560" [label="(Call,optlen == sizeof(struct sock_fprog))"];
"1000647" [label="(Call,ret = -EOPNOTSUPP)"];
"1000138" [label="(Identifier,optlen)"];
"1000667" [label="(Identifier,ret)"];
"1000535" [label="(Call,sock_set_timeout(&sk->sk_rcvtimeo, optval, optlen))"];
"1000112" [label="(MethodParameterIn,unsigned int optlen)"];
"1000338" [label="(Call,ret = -EPERM)"];
"1000137" [label="(Call,optlen < sizeof(int))"];
"1000666" [label="(Return,return ret;)"];
"1000146" [label="(Identifier,val)"];
"1000195" [label="(Call,ret = -ENOPROTOOPT)"];
"1000145" [label="(Call,get_user(val, (int __user *)optval))"];
"1000535" -> "1000533"  [label="AST: "];
"1000535" -> "1000541"  [label="CFG: "];
"1000536" -> "1000535"  [label="AST: "];
"1000540" -> "1000535"  [label="AST: "];
"1000541" -> "1000535"  [label="AST: "];
"1000533" -> "1000535"  [label="CFG: "];
"1000535" -> "1000668"  [label="DDG: optval"];
"1000535" -> "1000668"  [label="DDG: &sk->sk_rcvtimeo"];
"1000535" -> "1000668"  [label="DDG: optlen"];
"1000535" -> "1000533"  [label="DDG: &sk->sk_rcvtimeo"];
"1000535" -> "1000533"  [label="DDG: optval"];
"1000535" -> "1000533"  [label="DDG: optlen"];
"1000147" -> "1000535"  [label="DDG: optval"];
"1000111" -> "1000535"  [label="DDG: optval"];
"1000137" -> "1000535"  [label="DDG: optlen"];
"1000112" -> "1000535"  [label="DDG: optlen"];
"1000147" -> "1000145"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000147" -> "1000668"  [label="DDG: optval"];
"1000147" -> "1000145"  [label="DDG: optval"];
"1000111" -> "1000147"  [label="DDG: optval"];
"1000147" -> "1000356"  [label="DDG: optval"];
"1000147" -> "1000546"  [label="DDG: optval"];
"1000147" -> "1000571"  [label="DDG: optval"];
"1000111" -> "1000107"  [label="AST: "];
"1000111" -> "1000668"  [label="DDG: optval"];
"1000111" -> "1000132"  [label="DDG: optval"];
"1000111" -> "1000356"  [label="DDG: optval"];
"1000111" -> "1000546"  [label="DDG: optval"];
"1000111" -> "1000571"  [label="DDG: optval"];
"1000137" -> "1000136"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000143" -> "1000137"  [label="CFG: "];
"1000146" -> "1000137"  [label="CFG: "];
"1000137" -> "1000668"  [label="DDG: optlen"];
"1000137" -> "1000668"  [label="DDG: optlen < sizeof(int)"];
"1000112" -> "1000137"  [label="DDG: optlen"];
"1000137" -> "1000345"  [label="DDG: optlen"];
"1000137" -> "1000546"  [label="DDG: optlen"];
"1000137" -> "1000560"  [label="DDG: optlen"];
"1000112" -> "1000107"  [label="AST: "];
"1000112" -> "1000668"  [label="DDG: optlen"];
"1000112" -> "1000132"  [label="DDG: optlen"];
"1000112" -> "1000345"  [label="DDG: optlen"];
"1000112" -> "1000546"  [label="DDG: optlen"];
"1000112" -> "1000560"  [label="DDG: optlen"];
"1000533" -> "1000163"  [label="AST: "];
"1000534" -> "1000533"  [label="AST: "];
"1000542" -> "1000533"  [label="CFG: "];
"1000533" -> "1000668"  [label="DDG: ret"];
"1000533" -> "1000668"  [label="DDG: sock_set_timeout(&sk->sk_rcvtimeo, optval, optlen)"];
"1000533" -> "1000666"  [label="DDG: ret"];
"1000666" -> "1000113"  [label="AST: "];
"1000666" -> "1000667"  [label="CFG: "];
"1000667" -> "1000666"  [label="AST: "];
"1000668" -> "1000666"  [label="CFG: "];
"1000666" -> "1000668"  [label="DDG: <RET>"];
"1000667" -> "1000666"  [label="DDG: ret"];
"1000338" -> "1000666"  [label="DDG: ret"];
"1000171" -> "1000666"  [label="DDG: ret"];
"1000124" -> "1000666"  [label="DDG: ret"];
"1000350" -> "1000666"  [label="DDG: ret"];
"1000659" -> "1000666"  [label="DDG: ret"];
"1000363" -> "1000666"  [label="DDG: ret"];
"1000467" -> "1000666"  [label="DDG: ret"];
"1000586" -> "1000666"  [label="DDG: ret"];
"1000566" -> "1000666"  [label="DDG: ret"];
"1000244" -> "1000666"  [label="DDG: ret"];
"1000195" -> "1000666"  [label="DDG: ret"];
"1000613" -> "1000666"  [label="DDG: ret"];
"1000578" -> "1000666"  [label="DDG: ret"];
"1000647" -> "1000666"  [label="DDG: ret"];
"1000555" -> "1000666"  [label="DDG: ret"];
"1000544" -> "1000666"  [label="DDG: ret"];
"1000280" -> "1000666"  [label="DDG: ret"];
}
