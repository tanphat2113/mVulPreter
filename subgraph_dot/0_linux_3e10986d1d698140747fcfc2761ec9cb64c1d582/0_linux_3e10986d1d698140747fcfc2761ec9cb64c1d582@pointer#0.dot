digraph "0_linux_3e10986d1d698140747fcfc2761ec9cb64c1d582@pointer" {
"1000115" [label="(Call,*sk = sock->sk)"];
"1000132" [label="(Call,sock_bindtodevice(sk, optval, optlen))"];
"1000131" [label="(Return,return sock_bindtodevice(sk, optval, optlen);)"];
"1000159" [label="(Call,lock_sock(sk))"];
"1000176" [label="(Call,sock_valbool_flag(sk, SOCK_DBG, valbool))"];
"1000664" [label="(Call,release_sock(sk))"];
"1000201" [label="(Call,sock_valbool_flag(sk, SOCK_LOCALROUTE, valbool))"];
"1000207" [label="(Call,sock_valbool_flag(sk, SOCK_BROADCAST, valbool))"];
"1000235" [label="(Call,sk->sk_write_space(sk))"];
"1000299" [label="(Call,tcp_set_keepalive(sk, valbool))"];
"1000302" [label="(Call,sock_valbool_flag(sk, SOCK_KEEPOPEN, valbool))"];
"1000308" [label="(Call,sock_valbool_flag(sk, SOCK_URGINLINE, valbool))"];
"1000373" [label="(Call,sock_reset_flag(sk, SOCK_LINGER))"];
"1000405" [label="(Call,sock_set_flag(sk, SOCK_LINGER))"];
"1000439" [label="(Call,sock_reset_flag(sk, SOCK_RCVTSTAMPNS))"];
"1000446" [label="(Call,sock_set_flag(sk, SOCK_RCVTSTAMP))"];
"1000449" [label="(Call,sock_enable_timestamp(sk, SOCK_TIMESTAMP))"];
"1000443" [label="(Call,sock_set_flag(sk, SOCK_RCVTSTAMPNS))"];
"1000454" [label="(Call,sock_reset_flag(sk, SOCK_RCVTSTAMP))"];
"1000457" [label="(Call,sock_reset_flag(sk, SOCK_RCVTSTAMPNS))"];
"1000472" [label="(Call,sock_valbool_flag(sk, SOCK_TIMESTAMPING_TX_HARDWARE,\n\t\t\t\t  val & SOF_TIMESTAMPING_TX_HARDWARE))"];
"1000478" [label="(Call,sock_valbool_flag(sk, SOCK_TIMESTAMPING_TX_SOFTWARE,\n\t\t\t\t  val & SOF_TIMESTAMPING_TX_SOFTWARE))"];
"1000484" [label="(Call,sock_valbool_flag(sk, SOCK_TIMESTAMPING_RX_HARDWARE,\n\t\t\t\t  val & SOF_TIMESTAMPING_RX_HARDWARE))"];
"1000494" [label="(Call,sock_enable_timestamp(sk,\n\t\t\t\t\t      SOCK_TIMESTAMPING_RX_SOFTWARE))"];
"1000503" [label="(Call,sock_valbool_flag(sk, SOCK_TIMESTAMPING_SOFTWARE,\n\t\t\t\t  val & SOF_TIMESTAMPING_SOFTWARE))"];
"1000509" [label="(Call,sock_valbool_flag(sk, SOCK_TIMESTAMPING_SYS_HARDWARE,\n\t\t\t\t  val & SOF_TIMESTAMPING_SYS_HARDWARE))"];
"1000515" [label="(Call,sock_valbool_flag(sk, SOCK_TIMESTAMPING_RAW_HARDWARE,\n\t\t\t\t  val & SOF_TIMESTAMPING_RAW_HARDWARE))"];
"1000498" [label="(Call,sock_disable_timestamp(sk,\n\t\t\t\t\t       (1UL << SOCK_TIMESTAMPING_RX_SOFTWARE)))"];
"1000580" [label="(Call,sk_attach_filter(&fprog, sk))"];
"1000578" [label="(Call,ret = sk_attach_filter(&fprog, sk))"];
"1000666" [label="(Return,return ret;)"];
"1000588" [label="(Call,sk_detach_filter(sk))"];
"1000586" [label="(Call,ret = sk_detach_filter(sk))"];
"1000625" [label="(Call,sock_valbool_flag(sk, SOCK_RXQ_OVFL, valbool))"];
"1000631" [label="(Call,sock_valbool_flag(sk, SOCK_WIFI_STATUS, valbool))"];
"1000643" [label="(Call,sock->ops->set_peek_off(sk, val))"];
"1000653" [label="(Call,sock_valbool_flag(sk, SOCK_NOFCS, valbool))"];
"1000441" [label="(Identifier,SOCK_RCVTSTAMPNS)"];
"1000584" [label="(ControlStructure,break;)"];
"1000457" [label="(Call,sock_reset_flag(sk, SOCK_RCVTSTAMPNS))"];
"1000487" [label="(Call,val & SOF_TIMESTAMPING_RX_HARDWARE)"];
"1000481" [label="(Call,val & SOF_TIMESTAMPING_TX_SOFTWARE)"];
"1000586" [label="(Call,ret = sk_detach_filter(sk))"];
"1000211" [label="(ControlStructure,break;)"];
"1000484" [label="(Call,sock_valbool_flag(sk, SOCK_TIMESTAMPING_RX_HARDWARE,\n\t\t\t\t  val & SOF_TIMESTAMPING_RX_HARDWARE))"];
"1000454" [label="(Call,sock_reset_flag(sk, SOCK_RCVTSTAMP))"];
"1000581" [label="(Call,&fprog)"];
"1000631" [label="(Call,sock_valbool_flag(sk, SOCK_WIFI_STATUS, valbool))"];
"1000202" [label="(Identifier,sk)"];
"1000160" [label="(Identifier,sk)"];
"1000208" [label="(Identifier,sk)"];
"1000533" [label="(Call,ret = sock_set_timeout(&sk->sk_rcvtimeo, optval, optlen))"];
"1000132" [label="(Call,sock_bindtodevice(sk, optval, optlen))"];
"1000578" [label="(Call,ret = sk_attach_filter(&fprog, sk))"];
"1000201" [label="(Call,sock_valbool_flag(sk, SOCK_LOCALROUTE, valbool))"];
"1000435" [label="(ControlStructure,if (optname == SO_TIMESTAMP))"];
"1000210" [label="(Identifier,valbool)"];
"1000134" [label="(Identifier,optval)"];
"1000453" [label="(Block,)"];
"1000448" [label="(Identifier,SOCK_RCVTSTAMP)"];
"1000588" [label="(Call,sk_detach_filter(sk))"];
"1000645" [label="(Identifier,val)"];
"1000627" [label="(Identifier,SOCK_RXQ_OVFL)"];
"1000302" [label="(Call,sock_valbool_flag(sk, SOCK_KEEPOPEN, valbool))"];
"1000124" [label="(Call,ret = 0)"];
"1000497" [label="(ControlStructure,else)"];
"1000209" [label="(Identifier,SOCK_BROADCAST)"];
"1000485" [label="(Identifier,sk)"];
"1000458" [label="(Identifier,sk)"];
"1000659" [label="(Call,ret = -ENOPROTOOPT)"];
"1000444" [label="(Identifier,sk)"];
"1000177" [label="(Identifier,sk)"];
"1000656" [label="(Identifier,valbool)"];
"1000664" [label="(Call,release_sock(sk))"];
"1000667" [label="(Identifier,ret)"];
"1000112" [label="(MethodParameterIn,unsigned int optlen)"];
"1000338" [label="(Call,ret = -EPERM)"];
"1000179" [label="(Identifier,valbool)"];
"1000657" [label="(ControlStructure,break;)"];
"1000643" [label="(Call,sock->ops->set_peek_off(sk, val))"];
"1000195" [label="(Call,ret = -ENOPROTOOPT)"];
"1000590" [label="(ControlStructure,break;)"];
"1000635" [label="(ControlStructure,break;)"];
"1000460" [label="(ControlStructure,break;)"];
"1000306" [label="(ControlStructure,break;)"];
"1000633" [label="(Identifier,SOCK_WIFI_STATUS)"];
"1000500" [label="(Call,1UL << SOCK_TIMESTAMPING_RX_SOFTWARE)"];
"1000311" [label="(Identifier,valbool)"];
"1000374" [label="(Identifier,sk)"];
"1000235" [label="(Call,sk->sk_write_space(sk))"];
"1000368" [label="(ControlStructure,if (!ling.l_onoff))"];
"1000451" [label="(Identifier,SOCK_TIMESTAMP)"];
"1000518" [label="(Call,val & SOF_TIMESTAMPING_RAW_HARDWARE)"];
"1000467" [label="(Call,ret = -EINVAL)"];
"1000125" [label="(Identifier,ret)"];
"1000515" [label="(Call,sock_valbool_flag(sk, SOCK_TIMESTAMPING_RAW_HARDWARE,\n\t\t\t\t  val & SOF_TIMESTAMPING_RAW_HARDWARE))"];
"1000544" [label="(Call,ret = sock_set_timeout(&sk->sk_sndtimeo, optval, optlen))"];
"1000637" [label="(ControlStructure,if (sock->ops->set_peek_off))"];
"1000312" [label="(ControlStructure,break;)"];
"1000480" [label="(Identifier,SOCK_TIMESTAMPING_TX_SOFTWARE)"];
"1000115" [label="(Call,*sk = sock->sk)"];
"1000589" [label="(Identifier,sk)"];
"1000450" [label="(Identifier,sk)"];
"1000280" [label="(Call,ret = -EPERM)"];
"1000176" [label="(Call,sock_valbool_flag(sk, SOCK_DBG, valbool))"];
"1000301" [label="(Identifier,valbool)"];
"1000287" [label="(ControlStructure,if (sk->sk_protocol == IPPROTO_TCP &&\n\t\t    sk->sk_type == SOCK_STREAM))"];
"1000499" [label="(Identifier,sk)"];
"1000571" [label="(Call,copy_from_user(&fprog, optval, sizeof(fprog)))"];
"1000486" [label="(Identifier,SOCK_TIMESTAMPING_RX_HARDWARE)"];
"1000299" [label="(Call,tcp_set_keepalive(sk, valbool))"];
"1000116" [label="(Identifier,sk)"];
"1000133" [label="(Identifier,sk)"];
"1000472" [label="(Call,sock_valbool_flag(sk, SOCK_TIMESTAMPING_TX_HARDWARE,\n\t\t\t\t  val & SOF_TIMESTAMPING_TX_HARDWARE))"];
"1000626" [label="(Identifier,sk)"];
"1000205" [label="(ControlStructure,break;)"];
"1000305" [label="(Identifier,valbool)"];
"1000665" [label="(Identifier,sk)"];
"1000445" [label="(Identifier,SOCK_RCVTSTAMPNS)"];
"1000439" [label="(Call,sock_reset_flag(sk, SOCK_RCVTSTAMPNS))"];
"1000350" [label="(Call,ret = -EINVAL)"];
"1000111" [label="(MethodParameterIn,char __user *optval)"];
"1000113" [label="(Block,)"];
"1000440" [label="(Identifier,sk)"];
"1000310" [label="(Identifier,SOCK_URGINLINE)"];
"1000473" [label="(Identifier,sk)"];
"1000494" [label="(Call,sock_enable_timestamp(sk,\n\t\t\t\t\t      SOCK_TIMESTAMPING_RX_SOFTWARE))"];
"1000512" [label="(Call,val & SOF_TIMESTAMPING_SYS_HARDWARE)"];
"1000300" [label="(Identifier,sk)"];
"1000580" [label="(Call,sk_attach_filter(&fprog, sk))"];
"1000244" [label="(Call,ret = -EPERM)"];
"1000159" [label="(Call,lock_sock(sk))"];
"1000162" [label="(Identifier,optname)"];
"1000629" [label="(ControlStructure,break;)"];
"1000363" [label="(Call,ret = -EFAULT)"];
"1000504" [label="(Identifier,sk)"];
"1000434" [label="(Block,)"];
"1000171" [label="(Call,ret = -EACCES)"];
"1000303" [label="(Identifier,sk)"];
"1000237" [label="(ControlStructure,break;)"];
"1000446" [label="(Call,sock_set_flag(sk, SOCK_RCVTSTAMP))"];
"1000503" [label="(Call,sock_valbool_flag(sk, SOCK_TIMESTAMPING_SOFTWARE,\n\t\t\t\t  val & SOF_TIMESTAMPING_SOFTWARE))"];
"1000117" [label="(Call,sock->sk)"];
"1000517" [label="(Identifier,SOCK_TIMESTAMPING_RAW_HARDWARE)"];
"1000308" [label="(Call,sock_valbool_flag(sk, SOCK_URGINLINE, valbool))"];
"1000456" [label="(Identifier,SOCK_RCVTSTAMP)"];
"1000475" [label="(Call,val & SOF_TIMESTAMPING_TX_HARDWARE)"];
"1000373" [label="(Call,sock_reset_flag(sk, SOCK_LINGER))"];
"1000474" [label="(Identifier,SOCK_TIMESTAMPING_TX_HARDWARE)"];
"1000506" [label="(Call,val & SOF_TIMESTAMPING_SOFTWARE)"];
"1000628" [label="(Identifier,valbool)"];
"1000492" [label="(Identifier,val)"];
"1000127" [label="(ControlStructure,if (optname == SO_BINDTODEVICE))"];
"1000204" [label="(Identifier,valbool)"];
"1000654" [label="(Identifier,sk)"];
"1000377" [label="(Block,)"];
"1000644" [label="(Identifier,sk)"];
"1000153" [label="(Call,valbool = val ? 1 : 0)"];
"1000459" [label="(Identifier,SOCK_RCVTSTAMPNS)"];
"1000651" [label="(ControlStructure,break;)"];
"1000505" [label="(Identifier,SOCK_TIMESTAMPING_SOFTWARE)"];
"1000443" [label="(Call,sock_set_flag(sk, SOCK_RCVTSTAMPNS))"];
"1000406" [label="(Identifier,sk)"];
"1000175" [label="(ControlStructure,else)"];
"1000498" [label="(Call,sock_disable_timestamp(sk,\n\t\t\t\t\t       (1UL << SOCK_TIMESTAMPING_RX_SOFTWARE)))"];
"1000478" [label="(Call,sock_valbool_flag(sk, SOCK_TIMESTAMPING_TX_SOFTWARE,\n\t\t\t\t  val & SOF_TIMESTAMPING_TX_SOFTWARE))"];
"1000668" [label="(MethodReturn,int)"];
"1000207" [label="(Call,sock_valbool_flag(sk, SOCK_BROADCAST, valbool))"];
"1000510" [label="(Identifier,sk)"];
"1000163" [label="(Block,)"];
"1000495" [label="(Identifier,sk)"];
"1000516" [label="(Identifier,sk)"];
"1000447" [label="(Identifier,sk)"];
"1000455" [label="(Identifier,sk)"];
"1000634" [label="(Identifier,valbool)"];
"1000509" [label="(Call,sock_valbool_flag(sk, SOCK_TIMESTAMPING_SYS_HARDWARE,\n\t\t\t\t  val & SOF_TIMESTAMPING_SYS_HARDWARE))"];
"1000408" [label="(ControlStructure,break;)"];
"1000479" [label="(Identifier,sk)"];
"1000203" [label="(Identifier,SOCK_LOCALROUTE)"];
"1000613" [label="(Call,ret = -EPERM)"];
"1000511" [label="(Identifier,SOCK_TIMESTAMPING_SYS_HARDWARE)"];
"1000180" [label="(ControlStructure,break;)"];
"1000566" [label="(Call,ret = -EFAULT)"];
"1000653" [label="(Call,sock_valbool_flag(sk, SOCK_NOFCS, valbool))"];
"1000583" [label="(Identifier,sk)"];
"1000564" [label="(Block,)"];
"1000521" [label="(ControlStructure,break;)"];
"1000442" [label="(ControlStructure,else)"];
"1000496" [label="(Identifier,SOCK_TIMESTAMPING_RX_SOFTWARE)"];
"1000655" [label="(Identifier,SOCK_NOFCS)"];
"1000236" [label="(Identifier,sk)"];
"1000135" [label="(Identifier,optlen)"];
"1000407" [label="(Identifier,SOCK_LINGER)"];
"1000579" [label="(Identifier,ret)"];
"1000587" [label="(Identifier,ret)"];
"1000555" [label="(Call,ret = -EINVAL)"];
"1000632" [label="(Identifier,sk)"];
"1000490" [label="(ControlStructure,if (val & SOF_TIMESTAMPING_RX_SOFTWARE))"];
"1000304" [label="(Identifier,SOCK_KEEPOPEN)"];
"1000647" [label="(Call,ret = -EOPNOTSUPP)"];
"1000178" [label="(Identifier,SOCK_DBG)"];
"1000375" [label="(Identifier,SOCK_LINGER)"];
"1000405" [label="(Call,sock_set_flag(sk, SOCK_LINGER))"];
"1000449" [label="(Call,sock_enable_timestamp(sk, SOCK_TIMESTAMP))"];
"1000625" [label="(Call,sock_valbool_flag(sk, SOCK_RXQ_OVFL, valbool))"];
"1000131" [label="(Return,return sock_bindtodevice(sk, optval, optlen);)"];
"1000666" [label="(Return,return ret;)"];
"1000309" [label="(Identifier,sk)"];
"1000115" -> "1000113"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000125" -> "1000115"  [label="CFG: "];
"1000115" -> "1000668"  [label="DDG: sock->sk"];
"1000115" -> "1000668"  [label="DDG: sk"];
"1000115" -> "1000132"  [label="DDG: sk"];
"1000115" -> "1000159"  [label="DDG: sk"];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000135"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="AST: "];
"1000135" -> "1000132"  [label="AST: "];
"1000131" -> "1000132"  [label="CFG: "];
"1000132" -> "1000668"  [label="DDG: sock_bindtodevice(sk, optval, optlen)"];
"1000132" -> "1000668"  [label="DDG: optval"];
"1000132" -> "1000668"  [label="DDG: sk"];
"1000132" -> "1000668"  [label="DDG: optlen"];
"1000132" -> "1000131"  [label="DDG: sock_bindtodevice(sk, optval, optlen)"];
"1000111" -> "1000132"  [label="DDG: optval"];
"1000112" -> "1000132"  [label="DDG: optlen"];
"1000131" -> "1000127"  [label="AST: "];
"1000668" -> "1000131"  [label="CFG: "];
"1000131" -> "1000668"  [label="DDG: <RET>"];
"1000159" -> "1000113"  [label="AST: "];
"1000159" -> "1000160"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000162" -> "1000159"  [label="CFG: "];
"1000159" -> "1000668"  [label="DDG: lock_sock(sk)"];
"1000159" -> "1000176"  [label="DDG: sk"];
"1000159" -> "1000201"  [label="DDG: sk"];
"1000159" -> "1000207"  [label="DDG: sk"];
"1000159" -> "1000235"  [label="DDG: sk"];
"1000159" -> "1000299"  [label="DDG: sk"];
"1000159" -> "1000302"  [label="DDG: sk"];
"1000159" -> "1000308"  [label="DDG: sk"];
"1000159" -> "1000373"  [label="DDG: sk"];
"1000159" -> "1000405"  [label="DDG: sk"];
"1000159" -> "1000439"  [label="DDG: sk"];
"1000159" -> "1000443"  [label="DDG: sk"];
"1000159" -> "1000454"  [label="DDG: sk"];
"1000159" -> "1000472"  [label="DDG: sk"];
"1000159" -> "1000580"  [label="DDG: sk"];
"1000159" -> "1000588"  [label="DDG: sk"];
"1000159" -> "1000625"  [label="DDG: sk"];
"1000159" -> "1000631"  [label="DDG: sk"];
"1000159" -> "1000643"  [label="DDG: sk"];
"1000159" -> "1000653"  [label="DDG: sk"];
"1000159" -> "1000664"  [label="DDG: sk"];
"1000176" -> "1000175"  [label="AST: "];
"1000176" -> "1000179"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000178" -> "1000176"  [label="AST: "];
"1000179" -> "1000176"  [label="AST: "];
"1000180" -> "1000176"  [label="CFG: "];
"1000176" -> "1000668"  [label="DDG: SOCK_DBG"];
"1000176" -> "1000668"  [label="DDG: valbool"];
"1000176" -> "1000668"  [label="DDG: sock_valbool_flag(sk, SOCK_DBG, valbool)"];
"1000153" -> "1000176"  [label="DDG: valbool"];
"1000176" -> "1000664"  [label="DDG: sk"];
"1000664" -> "1000113"  [label="AST: "];
"1000664" -> "1000665"  [label="CFG: "];
"1000665" -> "1000664"  [label="AST: "];
"1000667" -> "1000664"  [label="CFG: "];
"1000664" -> "1000668"  [label="DDG: release_sock(sk)"];
"1000664" -> "1000668"  [label="DDG: sk"];
"1000308" -> "1000664"  [label="DDG: sk"];
"1000588" -> "1000664"  [label="DDG: sk"];
"1000643" -> "1000664"  [label="DDG: sk"];
"1000449" -> "1000664"  [label="DDG: sk"];
"1000515" -> "1000664"  [label="DDG: sk"];
"1000207" -> "1000664"  [label="DDG: sk"];
"1000653" -> "1000664"  [label="DDG: sk"];
"1000373" -> "1000664"  [label="DDG: sk"];
"1000201" -> "1000664"  [label="DDG: sk"];
"1000625" -> "1000664"  [label="DDG: sk"];
"1000235" -> "1000664"  [label="DDG: sk"];
"1000631" -> "1000664"  [label="DDG: sk"];
"1000302" -> "1000664"  [label="DDG: sk"];
"1000580" -> "1000664"  [label="DDG: sk"];
"1000405" -> "1000664"  [label="DDG: sk"];
"1000457" -> "1000664"  [label="DDG: sk"];
"1000201" -> "1000163"  [label="AST: "];
"1000201" -> "1000204"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000203" -> "1000201"  [label="AST: "];
"1000204" -> "1000201"  [label="AST: "];
"1000205" -> "1000201"  [label="CFG: "];
"1000201" -> "1000668"  [label="DDG: sock_valbool_flag(sk, SOCK_LOCALROUTE, valbool)"];
"1000201" -> "1000668"  [label="DDG: SOCK_LOCALROUTE"];
"1000201" -> "1000668"  [label="DDG: valbool"];
"1000153" -> "1000201"  [label="DDG: valbool"];
"1000207" -> "1000163"  [label="AST: "];
"1000207" -> "1000210"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000209" -> "1000207"  [label="AST: "];
"1000210" -> "1000207"  [label="AST: "];
"1000211" -> "1000207"  [label="CFG: "];
"1000207" -> "1000668"  [label="DDG: SOCK_BROADCAST"];
"1000207" -> "1000668"  [label="DDG: valbool"];
"1000207" -> "1000668"  [label="DDG: sock_valbool_flag(sk, SOCK_BROADCAST, valbool)"];
"1000153" -> "1000207"  [label="DDG: valbool"];
"1000235" -> "1000163"  [label="AST: "];
"1000235" -> "1000236"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="CFG: "];
"1000235" -> "1000668"  [label="DDG: sk->sk_write_space(sk)"];
"1000299" -> "1000287"  [label="AST: "];
"1000299" -> "1000301"  [label="CFG: "];
"1000300" -> "1000299"  [label="AST: "];
"1000301" -> "1000299"  [label="AST: "];
"1000303" -> "1000299"  [label="CFG: "];
"1000299" -> "1000668"  [label="DDG: tcp_set_keepalive(sk, valbool)"];
"1000153" -> "1000299"  [label="DDG: valbool"];
"1000299" -> "1000302"  [label="DDG: sk"];
"1000299" -> "1000302"  [label="DDG: valbool"];
"1000302" -> "1000163"  [label="AST: "];
"1000302" -> "1000305"  [label="CFG: "];
"1000303" -> "1000302"  [label="AST: "];
"1000304" -> "1000302"  [label="AST: "];
"1000305" -> "1000302"  [label="AST: "];
"1000306" -> "1000302"  [label="CFG: "];
"1000302" -> "1000668"  [label="DDG: SOCK_KEEPOPEN"];
"1000302" -> "1000668"  [label="DDG: valbool"];
"1000302" -> "1000668"  [label="DDG: sock_valbool_flag(sk, SOCK_KEEPOPEN, valbool)"];
"1000153" -> "1000302"  [label="DDG: valbool"];
"1000308" -> "1000163"  [label="AST: "];
"1000308" -> "1000311"  [label="CFG: "];
"1000309" -> "1000308"  [label="AST: "];
"1000310" -> "1000308"  [label="AST: "];
"1000311" -> "1000308"  [label="AST: "];
"1000312" -> "1000308"  [label="CFG: "];
"1000308" -> "1000668"  [label="DDG: SOCK_URGINLINE"];
"1000308" -> "1000668"  [label="DDG: valbool"];
"1000308" -> "1000668"  [label="DDG: sock_valbool_flag(sk, SOCK_URGINLINE, valbool)"];
"1000153" -> "1000308"  [label="DDG: valbool"];
"1000373" -> "1000368"  [label="AST: "];
"1000373" -> "1000375"  [label="CFG: "];
"1000374" -> "1000373"  [label="AST: "];
"1000375" -> "1000373"  [label="AST: "];
"1000408" -> "1000373"  [label="CFG: "];
"1000373" -> "1000668"  [label="DDG: SOCK_LINGER"];
"1000373" -> "1000668"  [label="DDG: sock_reset_flag(sk, SOCK_LINGER)"];
"1000405" -> "1000377"  [label="AST: "];
"1000405" -> "1000407"  [label="CFG: "];
"1000406" -> "1000405"  [label="AST: "];
"1000407" -> "1000405"  [label="AST: "];
"1000408" -> "1000405"  [label="CFG: "];
"1000405" -> "1000668"  [label="DDG: sock_set_flag(sk, SOCK_LINGER)"];
"1000405" -> "1000668"  [label="DDG: SOCK_LINGER"];
"1000439" -> "1000435"  [label="AST: "];
"1000439" -> "1000441"  [label="CFG: "];
"1000440" -> "1000439"  [label="AST: "];
"1000441" -> "1000439"  [label="AST: "];
"1000447" -> "1000439"  [label="CFG: "];
"1000439" -> "1000668"  [label="DDG: SOCK_RCVTSTAMPNS"];
"1000439" -> "1000668"  [label="DDG: sock_reset_flag(sk, SOCK_RCVTSTAMPNS)"];
"1000439" -> "1000446"  [label="DDG: sk"];
"1000446" -> "1000434"  [label="AST: "];
"1000446" -> "1000448"  [label="CFG: "];
"1000447" -> "1000446"  [label="AST: "];
"1000448" -> "1000446"  [label="AST: "];
"1000450" -> "1000446"  [label="CFG: "];
"1000446" -> "1000668"  [label="DDG: sock_set_flag(sk, SOCK_RCVTSTAMP)"];
"1000446" -> "1000668"  [label="DDG: SOCK_RCVTSTAMP"];
"1000443" -> "1000446"  [label="DDG: sk"];
"1000446" -> "1000449"  [label="DDG: sk"];
"1000449" -> "1000434"  [label="AST: "];
"1000449" -> "1000451"  [label="CFG: "];
"1000450" -> "1000449"  [label="AST: "];
"1000451" -> "1000449"  [label="AST: "];
"1000460" -> "1000449"  [label="CFG: "];
"1000449" -> "1000668"  [label="DDG: sock_enable_timestamp(sk, SOCK_TIMESTAMP)"];
"1000449" -> "1000668"  [label="DDG: SOCK_TIMESTAMP"];
"1000443" -> "1000442"  [label="AST: "];
"1000443" -> "1000445"  [label="CFG: "];
"1000444" -> "1000443"  [label="AST: "];
"1000445" -> "1000443"  [label="AST: "];
"1000447" -> "1000443"  [label="CFG: "];
"1000443" -> "1000668"  [label="DDG: sock_set_flag(sk, SOCK_RCVTSTAMPNS)"];
"1000443" -> "1000668"  [label="DDG: SOCK_RCVTSTAMPNS"];
"1000454" -> "1000453"  [label="AST: "];
"1000454" -> "1000456"  [label="CFG: "];
"1000455" -> "1000454"  [label="AST: "];
"1000456" -> "1000454"  [label="AST: "];
"1000458" -> "1000454"  [label="CFG: "];
"1000454" -> "1000668"  [label="DDG: sock_reset_flag(sk, SOCK_RCVTSTAMP)"];
"1000454" -> "1000668"  [label="DDG: SOCK_RCVTSTAMP"];
"1000454" -> "1000457"  [label="DDG: sk"];
"1000457" -> "1000453"  [label="AST: "];
"1000457" -> "1000459"  [label="CFG: "];
"1000458" -> "1000457"  [label="AST: "];
"1000459" -> "1000457"  [label="AST: "];
"1000460" -> "1000457"  [label="CFG: "];
"1000457" -> "1000668"  [label="DDG: SOCK_RCVTSTAMPNS"];
"1000457" -> "1000668"  [label="DDG: sock_reset_flag(sk, SOCK_RCVTSTAMPNS)"];
"1000472" -> "1000163"  [label="AST: "];
"1000472" -> "1000475"  [label="CFG: "];
"1000473" -> "1000472"  [label="AST: "];
"1000474" -> "1000472"  [label="AST: "];
"1000475" -> "1000472"  [label="AST: "];
"1000479" -> "1000472"  [label="CFG: "];
"1000472" -> "1000668"  [label="DDG: sock_valbool_flag(sk, SOCK_TIMESTAMPING_TX_HARDWARE,\n\t\t\t\t  val & SOF_TIMESTAMPING_TX_HARDWARE)"];
"1000472" -> "1000668"  [label="DDG: SOCK_TIMESTAMPING_TX_HARDWARE"];
"1000472" -> "1000668"  [label="DDG: val & SOF_TIMESTAMPING_TX_HARDWARE"];
"1000475" -> "1000472"  [label="DDG: val"];
"1000475" -> "1000472"  [label="DDG: SOF_TIMESTAMPING_TX_HARDWARE"];
"1000472" -> "1000478"  [label="DDG: sk"];
"1000478" -> "1000163"  [label="AST: "];
"1000478" -> "1000481"  [label="CFG: "];
"1000479" -> "1000478"  [label="AST: "];
"1000480" -> "1000478"  [label="AST: "];
"1000481" -> "1000478"  [label="AST: "];
"1000485" -> "1000478"  [label="CFG: "];
"1000478" -> "1000668"  [label="DDG: SOCK_TIMESTAMPING_TX_SOFTWARE"];
"1000478" -> "1000668"  [label="DDG: val & SOF_TIMESTAMPING_TX_SOFTWARE"];
"1000478" -> "1000668"  [label="DDG: sock_valbool_flag(sk, SOCK_TIMESTAMPING_TX_SOFTWARE,\n\t\t\t\t  val & SOF_TIMESTAMPING_TX_SOFTWARE)"];
"1000481" -> "1000478"  [label="DDG: val"];
"1000481" -> "1000478"  [label="DDG: SOF_TIMESTAMPING_TX_SOFTWARE"];
"1000478" -> "1000484"  [label="DDG: sk"];
"1000484" -> "1000163"  [label="AST: "];
"1000484" -> "1000487"  [label="CFG: "];
"1000485" -> "1000484"  [label="AST: "];
"1000486" -> "1000484"  [label="AST: "];
"1000487" -> "1000484"  [label="AST: "];
"1000492" -> "1000484"  [label="CFG: "];
"1000484" -> "1000668"  [label="DDG: SOCK_TIMESTAMPING_RX_HARDWARE"];
"1000484" -> "1000668"  [label="DDG: val & SOF_TIMESTAMPING_RX_HARDWARE"];
"1000484" -> "1000668"  [label="DDG: sock_valbool_flag(sk, SOCK_TIMESTAMPING_RX_HARDWARE,\n\t\t\t\t  val & SOF_TIMESTAMPING_RX_HARDWARE)"];
"1000487" -> "1000484"  [label="DDG: val"];
"1000487" -> "1000484"  [label="DDG: SOF_TIMESTAMPING_RX_HARDWARE"];
"1000484" -> "1000494"  [label="DDG: sk"];
"1000484" -> "1000498"  [label="DDG: sk"];
"1000494" -> "1000490"  [label="AST: "];
"1000494" -> "1000496"  [label="CFG: "];
"1000495" -> "1000494"  [label="AST: "];
"1000496" -> "1000494"  [label="AST: "];
"1000504" -> "1000494"  [label="CFG: "];
"1000494" -> "1000668"  [label="DDG: sock_enable_timestamp(sk,\n\t\t\t\t\t      SOCK_TIMESTAMPING_RX_SOFTWARE)"];
"1000494" -> "1000668"  [label="DDG: SOCK_TIMESTAMPING_RX_SOFTWARE"];
"1000494" -> "1000503"  [label="DDG: sk"];
"1000503" -> "1000163"  [label="AST: "];
"1000503" -> "1000506"  [label="CFG: "];
"1000504" -> "1000503"  [label="AST: "];
"1000505" -> "1000503"  [label="AST: "];
"1000506" -> "1000503"  [label="AST: "];
"1000510" -> "1000503"  [label="CFG: "];
"1000503" -> "1000668"  [label="DDG: val & SOF_TIMESTAMPING_SOFTWARE"];
"1000503" -> "1000668"  [label="DDG: sock_valbool_flag(sk, SOCK_TIMESTAMPING_SOFTWARE,\n\t\t\t\t  val & SOF_TIMESTAMPING_SOFTWARE)"];
"1000503" -> "1000668"  [label="DDG: SOCK_TIMESTAMPING_SOFTWARE"];
"1000498" -> "1000503"  [label="DDG: sk"];
"1000506" -> "1000503"  [label="DDG: val"];
"1000506" -> "1000503"  [label="DDG: SOF_TIMESTAMPING_SOFTWARE"];
"1000503" -> "1000509"  [label="DDG: sk"];
"1000509" -> "1000163"  [label="AST: "];
"1000509" -> "1000512"  [label="CFG: "];
"1000510" -> "1000509"  [label="AST: "];
"1000511" -> "1000509"  [label="AST: "];
"1000512" -> "1000509"  [label="AST: "];
"1000516" -> "1000509"  [label="CFG: "];
"1000509" -> "1000668"  [label="DDG: sock_valbool_flag(sk, SOCK_TIMESTAMPING_SYS_HARDWARE,\n\t\t\t\t  val & SOF_TIMESTAMPING_SYS_HARDWARE)"];
"1000509" -> "1000668"  [label="DDG: SOCK_TIMESTAMPING_SYS_HARDWARE"];
"1000509" -> "1000668"  [label="DDG: val & SOF_TIMESTAMPING_SYS_HARDWARE"];
"1000512" -> "1000509"  [label="DDG: val"];
"1000512" -> "1000509"  [label="DDG: SOF_TIMESTAMPING_SYS_HARDWARE"];
"1000509" -> "1000515"  [label="DDG: sk"];
"1000515" -> "1000163"  [label="AST: "];
"1000515" -> "1000518"  [label="CFG: "];
"1000516" -> "1000515"  [label="AST: "];
"1000517" -> "1000515"  [label="AST: "];
"1000518" -> "1000515"  [label="AST: "];
"1000521" -> "1000515"  [label="CFG: "];
"1000515" -> "1000668"  [label="DDG: val & SOF_TIMESTAMPING_RAW_HARDWARE"];
"1000515" -> "1000668"  [label="DDG: sock_valbool_flag(sk, SOCK_TIMESTAMPING_RAW_HARDWARE,\n\t\t\t\t  val & SOF_TIMESTAMPING_RAW_HARDWARE)"];
"1000515" -> "1000668"  [label="DDG: SOCK_TIMESTAMPING_RAW_HARDWARE"];
"1000518" -> "1000515"  [label="DDG: val"];
"1000518" -> "1000515"  [label="DDG: SOF_TIMESTAMPING_RAW_HARDWARE"];
"1000498" -> "1000497"  [label="AST: "];
"1000498" -> "1000500"  [label="CFG: "];
"1000499" -> "1000498"  [label="AST: "];
"1000500" -> "1000498"  [label="AST: "];
"1000504" -> "1000498"  [label="CFG: "];
"1000498" -> "1000668"  [label="DDG: sock_disable_timestamp(sk,\n\t\t\t\t\t       (1UL << SOCK_TIMESTAMPING_RX_SOFTWARE))"];
"1000498" -> "1000668"  [label="DDG: 1UL << SOCK_TIMESTAMPING_RX_SOFTWARE"];
"1000500" -> "1000498"  [label="DDG: 1UL"];
"1000500" -> "1000498"  [label="DDG: SOCK_TIMESTAMPING_RX_SOFTWARE"];
"1000580" -> "1000578"  [label="AST: "];
"1000580" -> "1000583"  [label="CFG: "];
"1000581" -> "1000580"  [label="AST: "];
"1000583" -> "1000580"  [label="AST: "];
"1000578" -> "1000580"  [label="CFG: "];
"1000580" -> "1000668"  [label="DDG: &fprog"];
"1000580" -> "1000578"  [label="DDG: &fprog"];
"1000580" -> "1000578"  [label="DDG: sk"];
"1000571" -> "1000580"  [label="DDG: &fprog"];
"1000578" -> "1000564"  [label="AST: "];
"1000579" -> "1000578"  [label="AST: "];
"1000584" -> "1000578"  [label="CFG: "];
"1000578" -> "1000668"  [label="DDG: ret"];
"1000578" -> "1000668"  [label="DDG: sk_attach_filter(&fprog, sk)"];
"1000578" -> "1000666"  [label="DDG: ret"];
"1000666" -> "1000113"  [label="AST: "];
"1000666" -> "1000667"  [label="CFG: "];
"1000667" -> "1000666"  [label="AST: "];
"1000668" -> "1000666"  [label="CFG: "];
"1000666" -> "1000668"  [label="DDG: <RET>"];
"1000667" -> "1000666"  [label="DDG: ret"];
"1000338" -> "1000666"  [label="DDG: ret"];
"1000171" -> "1000666"  [label="DDG: ret"];
"1000124" -> "1000666"  [label="DDG: ret"];
"1000350" -> "1000666"  [label="DDG: ret"];
"1000659" -> "1000666"  [label="DDG: ret"];
"1000363" -> "1000666"  [label="DDG: ret"];
"1000467" -> "1000666"  [label="DDG: ret"];
"1000586" -> "1000666"  [label="DDG: ret"];
"1000566" -> "1000666"  [label="DDG: ret"];
"1000533" -> "1000666"  [label="DDG: ret"];
"1000244" -> "1000666"  [label="DDG: ret"];
"1000195" -> "1000666"  [label="DDG: ret"];
"1000613" -> "1000666"  [label="DDG: ret"];
"1000647" -> "1000666"  [label="DDG: ret"];
"1000555" -> "1000666"  [label="DDG: ret"];
"1000544" -> "1000666"  [label="DDG: ret"];
"1000280" -> "1000666"  [label="DDG: ret"];
"1000588" -> "1000586"  [label="AST: "];
"1000588" -> "1000589"  [label="CFG: "];
"1000589" -> "1000588"  [label="AST: "];
"1000586" -> "1000588"  [label="CFG: "];
"1000588" -> "1000586"  [label="DDG: sk"];
"1000586" -> "1000163"  [label="AST: "];
"1000587" -> "1000586"  [label="AST: "];
"1000590" -> "1000586"  [label="CFG: "];
"1000586" -> "1000668"  [label="DDG: sk_detach_filter(sk)"];
"1000586" -> "1000668"  [label="DDG: ret"];
"1000625" -> "1000163"  [label="AST: "];
"1000625" -> "1000628"  [label="CFG: "];
"1000626" -> "1000625"  [label="AST: "];
"1000627" -> "1000625"  [label="AST: "];
"1000628" -> "1000625"  [label="AST: "];
"1000629" -> "1000625"  [label="CFG: "];
"1000625" -> "1000668"  [label="DDG: SOCK_RXQ_OVFL"];
"1000625" -> "1000668"  [label="DDG: valbool"];
"1000625" -> "1000668"  [label="DDG: sock_valbool_flag(sk, SOCK_RXQ_OVFL, valbool)"];
"1000153" -> "1000625"  [label="DDG: valbool"];
"1000631" -> "1000163"  [label="AST: "];
"1000631" -> "1000634"  [label="CFG: "];
"1000632" -> "1000631"  [label="AST: "];
"1000633" -> "1000631"  [label="AST: "];
"1000634" -> "1000631"  [label="AST: "];
"1000635" -> "1000631"  [label="CFG: "];
"1000631" -> "1000668"  [label="DDG: SOCK_WIFI_STATUS"];
"1000631" -> "1000668"  [label="DDG: sock_valbool_flag(sk, SOCK_WIFI_STATUS, valbool)"];
"1000631" -> "1000668"  [label="DDG: valbool"];
"1000153" -> "1000631"  [label="DDG: valbool"];
"1000643" -> "1000637"  [label="AST: "];
"1000643" -> "1000645"  [label="CFG: "];
"1000644" -> "1000643"  [label="AST: "];
"1000645" -> "1000643"  [label="AST: "];
"1000651" -> "1000643"  [label="CFG: "];
"1000643" -> "1000668"  [label="DDG: sock->ops->set_peek_off(sk, val)"];
"1000643" -> "1000668"  [label="DDG: val"];
"1000653" -> "1000163"  [label="AST: "];
"1000653" -> "1000656"  [label="CFG: "];
"1000654" -> "1000653"  [label="AST: "];
"1000655" -> "1000653"  [label="AST: "];
"1000656" -> "1000653"  [label="AST: "];
"1000657" -> "1000653"  [label="CFG: "];
"1000653" -> "1000668"  [label="DDG: valbool"];
"1000653" -> "1000668"  [label="DDG: SOCK_NOFCS"];
"1000653" -> "1000668"  [label="DDG: sock_valbool_flag(sk, SOCK_NOFCS, valbool)"];
"1000153" -> "1000653"  [label="DDG: valbool"];
}
