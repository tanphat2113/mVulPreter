digraph "0_libx11_b469da1430cdcee06e31c6251b83aede072a1ff0_1@API" {
"1000162" [label="(Call,rep.nExtensions * sizeof (char *))"];
"1000161" [label="(Call,Xmalloc (rep.nExtensions * sizeof (char *)))"];
"1000159" [label="(Call,list = Xmalloc (rep.nExtensions * sizeof (char *)))"];
"1000198" [label="(Call,!list)"];
"1000197" [label="(Call,(!list) || (!ch))"];
"1000203" [label="(Call,Xfree(list))"];
"1000238" [label="(Call,i < rep.nExtensions)"];
"1000243" [label="(Call,i++)"];
"1000162" [label="(Call,rep.nExtensions * sizeof (char *))"];
"1000200" [label="(Call,!ch)"];
"1000159" [label="(Call,list = Xmalloc (rep.nExtensions * sizeof (char *)))"];
"1000198" [label="(Call,!list)"];
"1000163" [label="(Call,rep.nExtensions)"];
"1000235" [label="(Call,i = 0)"];
"1000161" [label="(Call,Xmalloc (rep.nExtensions * sizeof (char *)))"];
"1000158" [label="(Block,)"];
"1000249" [label="(Identifier,ch)"];
"1000243" [label="(Call,i++)"];
"1000201" [label="(Identifier,ch)"];
"1000240" [label="(Call,rep.nExtensions)"];
"1000239" [label="(Identifier,i)"];
"1000166" [label="(Call,sizeof (char *))"];
"1000244" [label="(Identifier,i)"];
"1000196" [label="(ControlStructure,if ((!list) || (!ch)))"];
"1000220" [label="(Identifier,dpy)"];
"1000202" [label="(Block,)"];
"1000238" [label="(Call,i < rep.nExtensions)"];
"1000160" [label="(Identifier,list)"];
"1000197" [label="(Call,(!list) || (!ch))"];
"1000199" [label="(Identifier,list)"];
"1000293" [label="(MethodReturn,char **)"];
"1000172" [label="(Identifier,rep)"];
"1000203" [label="(Call,Xfree(list))"];
"1000206" [label="(Identifier,ch)"];
"1000204" [label="(Identifier,list)"];
"1000234" [label="(ControlStructure,for (i = 0; i < rep.nExtensions; i++))"];
"1000162" -> "1000161"  [label="AST: "];
"1000162" -> "1000166"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000166" -> "1000162"  [label="AST: "];
"1000161" -> "1000162"  [label="CFG: "];
"1000162" -> "1000293"  [label="DDG: rep.nExtensions"];
"1000162" -> "1000161"  [label="DDG: rep.nExtensions"];
"1000162" -> "1000238"  [label="DDG: rep.nExtensions"];
"1000161" -> "1000159"  [label="AST: "];
"1000159" -> "1000161"  [label="CFG: "];
"1000161" -> "1000293"  [label="DDG: rep.nExtensions * sizeof (char *)"];
"1000161" -> "1000159"  [label="DDG: rep.nExtensions * sizeof (char *)"];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000159"  [label="AST: "];
"1000172" -> "1000159"  [label="CFG: "];
"1000159" -> "1000293"  [label="DDG: Xmalloc (rep.nExtensions * sizeof (char *))"];
"1000159" -> "1000198"  [label="DDG: list"];
"1000198" -> "1000197"  [label="AST: "];
"1000198" -> "1000199"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000201" -> "1000198"  [label="CFG: "];
"1000197" -> "1000198"  [label="CFG: "];
"1000198" -> "1000293"  [label="DDG: list"];
"1000198" -> "1000197"  [label="DDG: list"];
"1000198" -> "1000203"  [label="DDG: list"];
"1000197" -> "1000196"  [label="AST: "];
"1000197" -> "1000200"  [label="CFG: "];
"1000200" -> "1000197"  [label="AST: "];
"1000204" -> "1000197"  [label="CFG: "];
"1000220" -> "1000197"  [label="CFG: "];
"1000197" -> "1000293"  [label="DDG: !ch"];
"1000197" -> "1000293"  [label="DDG: (!list) || (!ch)"];
"1000197" -> "1000293"  [label="DDG: !list"];
"1000200" -> "1000197"  [label="DDG: ch"];
"1000203" -> "1000202"  [label="AST: "];
"1000203" -> "1000204"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000206" -> "1000203"  [label="CFG: "];
"1000203" -> "1000293"  [label="DDG: Xfree(list)"];
"1000203" -> "1000293"  [label="DDG: list"];
"1000238" -> "1000234"  [label="AST: "];
"1000238" -> "1000240"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="AST: "];
"1000249" -> "1000238"  [label="CFG: "];
"1000293" -> "1000238"  [label="CFG: "];
"1000238" -> "1000293"  [label="DDG: i"];
"1000238" -> "1000293"  [label="DDG: rep.nExtensions"];
"1000238" -> "1000293"  [label="DDG: i < rep.nExtensions"];
"1000235" -> "1000238"  [label="DDG: i"];
"1000243" -> "1000238"  [label="DDG: i"];
"1000238" -> "1000243"  [label="DDG: i"];
"1000243" -> "1000234"  [label="AST: "];
"1000243" -> "1000244"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000239" -> "1000243"  [label="CFG: "];
}
