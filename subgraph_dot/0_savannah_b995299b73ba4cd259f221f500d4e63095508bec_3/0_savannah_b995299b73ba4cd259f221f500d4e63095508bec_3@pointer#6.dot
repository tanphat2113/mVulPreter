digraph "0_savannah_b995299b73ba4cd259f221f500d4e63095508bec_3@pointer" {
"1000200" [label="(Call,format = status.encoding != FT_ENCODING_NONE\n             ? \"at %g points, first char code = 0x%x\"\n             : \"at %g points, first glyph index = %d\")"];
"1000210" [label="(Call,snprintf( status.header_buffer, 256, format,\n              status.ptsize / 64.0, status.Num ))"];
"1000234" [label="(Call,strlen( status.header_buffer ))"];
"1000232" [label="(Call,size = strlen( status.header_buffer ))"];
"1000238" [label="(Call,p    = status.header_buffer + size)"];
"1000282" [label="(Call,strcpy( p, format ))"];
"1000286" [label="(Call,FT_Get_Glyph_Name( face, gindex,\n                                p + format_len, size - format_len ))"];
"1000289" [label="(Call,p + format_len)"];
"1000240" [label="(Call,status.header_buffer + size)"];
"1000247" [label="(Call,256 - size)"];
"1000245" [label="(Call,size = 256 - size)"];
"1000258" [label="(Call,size >= format_len + 2)"];
"1000292" [label="(Call,size - format_len)"];
"1000299" [label="(Call,status.header = status.header_buffer)"];
"1000306" [label="(Call,grWriteCellString( display->bitmap, 0, HEADER_HEIGHT,\n                       status.header_buffer, display->fore_color ))"];
"1000335" [label="(Call,sprintf( status.header_buffer,\n               \"%s0x%02X%s%s0x%02X%s%s0x%02X%s%s0x%02X%s%s0x%02X%s\",\n               fwi == 0 ? \"[\" : \" \", fw[0], fwi == 0 ? \"]\" : \" \",\n               fwi == 1 ? \"[\" : \" \", fw[1], fwi == 1 ? \"]\" : \" \",\n               fwi == 2 ? \"[\" : \" \", fw[2], fwi == 2 ? \"]\" : \" \",\n               fwi == 3 ? \"[\" : \" \", fw[3], fwi == 3 ? \"]\" : \" \",\n               fwi == 4 ? \"[\" : \" \", fw[4], fwi == 4 ? \"]\" : \" \" ))"];
"1000415" [label="(Call,grWriteCellString( display->bitmap, 0, 2 * HEADER_HEIGHT,\n                         status.header_buffer, display->fore_color ))"];
"1000420" [label="(Call,2 * HEADER_HEIGHT)"];
"1000264" [label="(Call,gindex = status.Num)"];
"1000277" [label="(Call,FTDemo_Get_Index( handle, status.Num ))"];
"1000275" [label="(Call,gindex = FTDemo_Get_Index( handle, status.Num ))"];
"1000249" [label="(Identifier,size)"];
"1000265" [label="(Identifier,gindex)"];
"1000391" [label="(Call,fw[3])"];
"1000308" [label="(Identifier,display)"];
"1000235" [label="(Call,status.header_buffer)"];
"1000340" [label="(Call,fwi == 0 ? \"[\" : \" \")"];
"1000288" [label="(Identifier,gindex)"];
"1000286" [label="(Call,FT_Get_Glyph_Name( face, gindex,\n                                p + format_len, size - format_len ))"];
"1000293" [label="(Identifier,size)"];
"1000376" [label="(Call,fw[2])"];
"1000415" [label="(Call,grWriteCellString( display->bitmap, 0, 2 * HEADER_HEIGHT,\n                         status.header_buffer, display->fore_color ))"];
"1000336" [label="(Call,status.header_buffer)"];
"1000330" [label="(Call,*fw  = status.filter_weights)"];
"1000188" [label="(Call,grWriteCellString( display->bitmap, 0, 0,\n                       status.header, display->fore_color ))"];
"1000290" [label="(Identifier,p)"];
"1000433" [label="(MethodReturn,RET)"];
"1000285" [label="(ControlStructure,if ( FT_Get_Glyph_Name( face, gindex,\n                                p + format_len, size - format_len ) ))"];
"1000361" [label="(Call,fw[1])"];
"1000226" [label="(Identifier,face)"];
"1000307" [label="(Call,display->bitmap)"];
"1000277" [label="(Call,FTDemo_Get_Index( handle, status.Num ))"];
"1000102" [label="(Block,)"];
"1000421" [label="(Literal,2)"];
"1000232" [label="(Call,size = strlen( status.header_buffer ))"];
"1000297" [label="(Identifier,p)"];
"1000266" [label="(Call,status.Num)"];
"1000275" [label="(Call,gindex = FTDemo_Get_Index( handle, status.Num ))"];
"1000212" [label="(Identifier,status)"];
"1000253" [label="(Call,format_len = strlen( format ))"];
"1000311" [label="(Identifier,HEADER_HEIGHT)"];
"1000255" [label="(Call,strlen( format ))"];
"1000422" [label="(Identifier,HEADER_HEIGHT)"];
"1000346" [label="(Call,fw[0])"];
"1000322" [label="(Block,)"];
"1000370" [label="(Call,fwi == 2 ? \"[\" : \" \")"];
"1000227" [label="(Block,)"];
"1000200" [label="(Call,format = status.encoding != FT_ENCODING_NONE\n             ? \"at %g points, first char code = 0x%x\"\n             : \"at %g points, first glyph index = %d\")"];
"1000216" [label="(Call,status.ptsize / 64.0)"];
"1000349" [label="(Call,fwi == 0 ? \"]\" : \" \")"];
"1000246" [label="(Identifier,size)"];
"1000238" [label="(Call,p    = status.header_buffer + size)"];
"1000259" [label="(Identifier,size)"];
"1000201" [label="(Identifier,format)"];
"1000234" [label="(Call,strlen( status.header_buffer ))"];
"1000292" [label="(Call,size - format_len)"];
"1000417" [label="(Identifier,display)"];
"1000385" [label="(Call,fwi == 3 ? \"[\" : \" \")"];
"1000312" [label="(Call,status.header_buffer)"];
"1000279" [label="(Call,status.Num)"];
"1000355" [label="(Call,fwi == 1 ? \"[\" : \" \")"];
"1000244" [label="(Identifier,size)"];
"1000221" [label="(Call,status.Num)"];
"1000299" [label="(Call,status.header = status.header_buffer)"];
"1000315" [label="(Call,display->fore_color)"];
"1000264" [label="(Call,gindex = status.Num)"];
"1000426" [label="(Call,display->fore_color)"];
"1000240" [label="(Call,status.header_buffer + size)"];
"1000141" [label="(Call,sprintf( status.header_buffer, \"%.50s %.50s (file `%.100s')\",\n                  face->family_name, face->style_name, basename ))"];
"1000379" [label="(Call,fwi == 2 ? \"]\" : \" \")"];
"1000431" [label="(Identifier,display)"];
"1000300" [label="(Call,status.header)"];
"1000276" [label="(Identifier,gindex)"];
"1000320" [label="(Identifier,status)"];
"1000257" [label="(ControlStructure,if ( size >= format_len + 2 ))"];
"1000419" [label="(Literal,0)"];
"1000211" [label="(Call,status.header_buffer)"];
"1000406" [label="(Call,fw[4])"];
"1000263" [label="(Block,)"];
"1000241" [label="(Call,status.header_buffer)"];
"1000272" [label="(Identifier,status)"];
"1000294" [label="(Identifier,format_len)"];
"1000400" [label="(Call,fwi == 4 ? \"[\" : \" \")"];
"1000335" [label="(Call,sprintf( status.header_buffer,\n               \"%s0x%02X%s%s0x%02X%s%s0x%02X%s%s0x%02X%s%s0x%02X%s\",\n               fwi == 0 ? \"[\" : \" \", fw[0], fwi == 0 ? \"]\" : \" \",\n               fwi == 1 ? \"[\" : \" \", fw[1], fwi == 1 ? \"]\" : \" \",\n               fwi == 2 ? \"[\" : \" \", fw[2], fwi == 2 ? \"]\" : \" \",\n               fwi == 3 ? \"[\" : \" \", fw[3], fwi == 3 ? \"]\" : \" \",\n               fwi == 4 ? \"[\" : \" \", fw[4], fwi == 4 ? \"]\" : \" \" ))"];
"1000239" [label="(Identifier,p)"];
"1000310" [label="(Literal,0)"];
"1000210" [label="(Call,snprintf( status.header_buffer, 256, format,\n              status.ptsize / 64.0, status.Num ))"];
"1000214" [label="(Literal,256)"];
"1000364" [label="(Call,fwi == 1 ? \"]\" : \" \")"];
"1000233" [label="(Identifier,size)"];
"1000423" [label="(Call,status.header_buffer)"];
"1000155" [label="(Call,sprintf( status.header_buffer, \"Invalid pixel size (file `%.100s')\",\n                  basename ))"];
"1000202" [label="(Call,status.encoding != FT_ENCODING_NONE\n             ? \"at %g points, first char code = 0x%x\"\n             : \"at %g points, first glyph index = %d\")"];
"1000171" [label="(Call,sprintf( status.header_buffer, \"File `%.100s': error 0x%04x\",\n                  basename, (FT_UShort)error_code ))"];
"1000248" [label="(Literal,256)"];
"1000420" [label="(Call,2 * HEADER_HEIGHT)"];
"1000247" [label="(Call,256 - size)"];
"1000283" [label="(Identifier,p)"];
"1000394" [label="(Call,fwi == 3 ? \"]\" : \" \")"];
"1000291" [label="(Identifier,format_len)"];
"1000163" [label="(Call,sprintf( status.header_buffer, \"Invalid ppem value (file `%.100s')\",\n                  basename ))"];
"1000303" [label="(Call,status.header_buffer)"];
"1000278" [label="(Identifier,handle)"];
"1000251" [label="(Identifier,format)"];
"1000225" [label="(Call,FT_HAS_GLYPH_NAMES( face ))"];
"1000284" [label="(Identifier,format)"];
"1000258" [label="(Call,size >= format_len + 2)"];
"1000424" [label="(Identifier,status)"];
"1000260" [label="(Call,format_len + 2)"];
"1000301" [label="(Identifier,status)"];
"1000306" [label="(Call,grWriteCellString( display->bitmap, 0, HEADER_HEIGHT,\n                       status.header_buffer, display->fore_color ))"];
"1000269" [label="(ControlStructure,if ( status.encoding != FT_ENCODING_NONE ))"];
"1000282" [label="(Call,strcpy( p, format ))"];
"1000287" [label="(Identifier,face)"];
"1000339" [label="(Literal,\"%s0x%02X%s%s0x%02X%s%s0x%02X%s%s0x%02X%s%s0x%02X%s\")"];
"1000289" [label="(Call,p + format_len)"];
"1000245" [label="(Call,size = 256 - size)"];
"1000416" [label="(Call,display->bitmap)"];
"1000409" [label="(Call,fwi == 4 ? \"]\" : \" \")"];
"1000215" [label="(Identifier,format)"];
"1000200" -> "1000102"  [label="AST: "];
"1000200" -> "1000202"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000202" -> "1000200"  [label="AST: "];
"1000212" -> "1000200"  [label="CFG: "];
"1000200" -> "1000433"  [label="DDG: "];
"1000200" -> "1000210"  [label="DDG: "];
"1000210" -> "1000102"  [label="AST: "];
"1000210" -> "1000221"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000214" -> "1000210"  [label="AST: "];
"1000215" -> "1000210"  [label="AST: "];
"1000216" -> "1000210"  [label="AST: "];
"1000221" -> "1000210"  [label="AST: "];
"1000226" -> "1000210"  [label="CFG: "];
"1000210" -> "1000433"  [label="DDG: "];
"1000210" -> "1000433"  [label="DDG: "];
"1000210" -> "1000433"  [label="DDG: "];
"1000210" -> "1000433"  [label="DDG: "];
"1000163" -> "1000210"  [label="DDG: "];
"1000155" -> "1000210"  [label="DDG: "];
"1000171" -> "1000210"  [label="DDG: "];
"1000141" -> "1000210"  [label="DDG: "];
"1000216" -> "1000210"  [label="DDG: "];
"1000216" -> "1000210"  [label="DDG: "];
"1000210" -> "1000234"  [label="DDG: "];
"1000210" -> "1000264"  [label="DDG: "];
"1000210" -> "1000277"  [label="DDG: "];
"1000210" -> "1000299"  [label="DDG: "];
"1000210" -> "1000306"  [label="DDG: "];
"1000234" -> "1000232"  [label="AST: "];
"1000234" -> "1000235"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000232" -> "1000234"  [label="CFG: "];
"1000234" -> "1000232"  [label="DDG: "];
"1000234" -> "1000238"  [label="DDG: "];
"1000234" -> "1000240"  [label="DDG: "];
"1000234" -> "1000299"  [label="DDG: "];
"1000234" -> "1000306"  [label="DDG: "];
"1000232" -> "1000227"  [label="AST: "];
"1000233" -> "1000232"  [label="AST: "];
"1000239" -> "1000232"  [label="CFG: "];
"1000232" -> "1000433"  [label="DDG: "];
"1000232" -> "1000238"  [label="DDG: "];
"1000232" -> "1000240"  [label="DDG: "];
"1000232" -> "1000247"  [label="DDG: "];
"1000238" -> "1000227"  [label="AST: "];
"1000238" -> "1000240"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="AST: "];
"1000246" -> "1000238"  [label="CFG: "];
"1000238" -> "1000433"  [label="DDG: "];
"1000238" -> "1000433"  [label="DDG: "];
"1000238" -> "1000282"  [label="DDG: "];
"1000282" -> "1000263"  [label="AST: "];
"1000282" -> "1000284"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000284" -> "1000282"  [label="AST: "];
"1000287" -> "1000282"  [label="CFG: "];
"1000282" -> "1000433"  [label="DDG: "];
"1000282" -> "1000433"  [label="DDG: "];
"1000255" -> "1000282"  [label="DDG: "];
"1000282" -> "1000286"  [label="DDG: "];
"1000282" -> "1000289"  [label="DDG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000286" -> "1000292"  [label="CFG: "];
"1000287" -> "1000286"  [label="AST: "];
"1000288" -> "1000286"  [label="AST: "];
"1000289" -> "1000286"  [label="AST: "];
"1000292" -> "1000286"  [label="AST: "];
"1000297" -> "1000286"  [label="CFG: "];
"1000301" -> "1000286"  [label="CFG: "];
"1000286" -> "1000433"  [label="DDG: "];
"1000286" -> "1000433"  [label="DDG: "];
"1000286" -> "1000433"  [label="DDG: "];
"1000286" -> "1000433"  [label="DDG: "];
"1000286" -> "1000433"  [label="DDG: "];
"1000225" -> "1000286"  [label="DDG: "];
"1000264" -> "1000286"  [label="DDG: "];
"1000275" -> "1000286"  [label="DDG: "];
"1000253" -> "1000286"  [label="DDG: "];
"1000292" -> "1000286"  [label="DDG: "];
"1000292" -> "1000286"  [label="DDG: "];
"1000289" -> "1000291"  [label="CFG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000291" -> "1000289"  [label="AST: "];
"1000293" -> "1000289"  [label="CFG: "];
"1000289" -> "1000433"  [label="DDG: "];
"1000253" -> "1000289"  [label="DDG: "];
"1000240" -> "1000244"  [label="CFG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000244" -> "1000240"  [label="AST: "];
"1000247" -> "1000245"  [label="AST: "];
"1000247" -> "1000249"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000249" -> "1000247"  [label="AST: "];
"1000245" -> "1000247"  [label="CFG: "];
"1000247" -> "1000245"  [label="DDG: "];
"1000247" -> "1000245"  [label="DDG: "];
"1000245" -> "1000227"  [label="AST: "];
"1000246" -> "1000245"  [label="AST: "];
"1000251" -> "1000245"  [label="CFG: "];
"1000245" -> "1000433"  [label="DDG: "];
"1000245" -> "1000258"  [label="DDG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000258" -> "1000260"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000260" -> "1000258"  [label="AST: "];
"1000265" -> "1000258"  [label="CFG: "];
"1000301" -> "1000258"  [label="CFG: "];
"1000258" -> "1000433"  [label="DDG: "];
"1000258" -> "1000433"  [label="DDG: "];
"1000258" -> "1000433"  [label="DDG: "];
"1000253" -> "1000258"  [label="DDG: "];
"1000258" -> "1000292"  [label="DDG: "];
"1000292" -> "1000294"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000294" -> "1000292"  [label="AST: "];
"1000292" -> "1000433"  [label="DDG: "];
"1000292" -> "1000433"  [label="DDG: "];
"1000253" -> "1000292"  [label="DDG: "];
"1000299" -> "1000102"  [label="AST: "];
"1000299" -> "1000303"  [label="CFG: "];
"1000300" -> "1000299"  [label="AST: "];
"1000303" -> "1000299"  [label="AST: "];
"1000308" -> "1000299"  [label="CFG: "];
"1000299" -> "1000433"  [label="DDG: "];
"1000306" -> "1000102"  [label="AST: "];
"1000306" -> "1000315"  [label="CFG: "];
"1000307" -> "1000306"  [label="AST: "];
"1000310" -> "1000306"  [label="AST: "];
"1000311" -> "1000306"  [label="AST: "];
"1000312" -> "1000306"  [label="AST: "];
"1000315" -> "1000306"  [label="AST: "];
"1000320" -> "1000306"  [label="CFG: "];
"1000306" -> "1000433"  [label="DDG: "];
"1000306" -> "1000433"  [label="DDG: "];
"1000306" -> "1000433"  [label="DDG: "];
"1000306" -> "1000433"  [label="DDG: "];
"1000306" -> "1000433"  [label="DDG: "];
"1000188" -> "1000306"  [label="DDG: "];
"1000188" -> "1000306"  [label="DDG: "];
"1000306" -> "1000335"  [label="DDG: "];
"1000306" -> "1000415"  [label="DDG: "];
"1000306" -> "1000415"  [label="DDG: "];
"1000306" -> "1000420"  [label="DDG: "];
"1000335" -> "1000322"  [label="AST: "];
"1000335" -> "1000409"  [label="CFG: "];
"1000336" -> "1000335"  [label="AST: "];
"1000339" -> "1000335"  [label="AST: "];
"1000340" -> "1000335"  [label="AST: "];
"1000346" -> "1000335"  [label="AST: "];
"1000349" -> "1000335"  [label="AST: "];
"1000355" -> "1000335"  [label="AST: "];
"1000361" -> "1000335"  [label="AST: "];
"1000364" -> "1000335"  [label="AST: "];
"1000370" -> "1000335"  [label="AST: "];
"1000376" -> "1000335"  [label="AST: "];
"1000379" -> "1000335"  [label="AST: "];
"1000385" -> "1000335"  [label="AST: "];
"1000391" -> "1000335"  [label="AST: "];
"1000394" -> "1000335"  [label="AST: "];
"1000400" -> "1000335"  [label="AST: "];
"1000406" -> "1000335"  [label="AST: "];
"1000409" -> "1000335"  [label="AST: "];
"1000417" -> "1000335"  [label="CFG: "];
"1000335" -> "1000433"  [label="DDG: "];
"1000335" -> "1000433"  [label="DDG: "];
"1000335" -> "1000433"  [label="DDG: "];
"1000335" -> "1000433"  [label="DDG: "];
"1000335" -> "1000433"  [label="DDG: "];
"1000335" -> "1000433"  [label="DDG: "];
"1000335" -> "1000433"  [label="DDG: "];
"1000335" -> "1000433"  [label="DDG: "];
"1000335" -> "1000433"  [label="DDG: "];
"1000335" -> "1000433"  [label="DDG: "];
"1000335" -> "1000433"  [label="DDG: "];
"1000335" -> "1000433"  [label="DDG: "];
"1000335" -> "1000433"  [label="DDG: "];
"1000335" -> "1000433"  [label="DDG: "];
"1000335" -> "1000433"  [label="DDG: "];
"1000335" -> "1000433"  [label="DDG: "];
"1000330" -> "1000335"  [label="DDG: "];
"1000335" -> "1000415"  [label="DDG: "];
"1000415" -> "1000322"  [label="AST: "];
"1000415" -> "1000426"  [label="CFG: "];
"1000416" -> "1000415"  [label="AST: "];
"1000419" -> "1000415"  [label="AST: "];
"1000420" -> "1000415"  [label="AST: "];
"1000423" -> "1000415"  [label="AST: "];
"1000426" -> "1000415"  [label="AST: "];
"1000431" -> "1000415"  [label="CFG: "];
"1000415" -> "1000433"  [label="DDG: "];
"1000415" -> "1000433"  [label="DDG: "];
"1000415" -> "1000433"  [label="DDG: "];
"1000415" -> "1000433"  [label="DDG: "];
"1000415" -> "1000433"  [label="DDG: "];
"1000420" -> "1000415"  [label="DDG: "];
"1000420" -> "1000415"  [label="DDG: "];
"1000420" -> "1000422"  [label="CFG: "];
"1000421" -> "1000420"  [label="AST: "];
"1000422" -> "1000420"  [label="AST: "];
"1000424" -> "1000420"  [label="CFG: "];
"1000420" -> "1000433"  [label="DDG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000264" -> "1000266"  [label="CFG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000266" -> "1000264"  [label="AST: "];
"1000272" -> "1000264"  [label="CFG: "];
"1000264" -> "1000433"  [label="DDG: "];
"1000277" -> "1000275"  [label="AST: "];
"1000277" -> "1000279"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000277"  [label="AST: "];
"1000275" -> "1000277"  [label="CFG: "];
"1000277" -> "1000433"  [label="DDG: "];
"1000277" -> "1000433"  [label="DDG: "];
"1000277" -> "1000275"  [label="DDG: "];
"1000277" -> "1000275"  [label="DDG: "];
"1000275" -> "1000269"  [label="AST: "];
"1000276" -> "1000275"  [label="AST: "];
"1000283" -> "1000275"  [label="CFG: "];
"1000275" -> "1000433"  [label="DDG: "];
}
