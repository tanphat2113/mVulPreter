digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_14@API" {
"1000445" [label="(Call,fl6_update_dst(&fl6, rcu_dereference(np->opt), &final))"];
"1000425" [label="(Call,memset(&fl6, 0, sizeof(fl6)))"];
"1000448" [label="(Call,rcu_dereference(np->opt))"];
"1000443" [label="(Call,final_p = fl6_update_dst(&fl6, rcu_dereference(np->opt), &final))"];
"1000497" [label="(Call,ip6_dst_lookup_flow(sk, &fl6, final_p))"];
"1000495" [label="(Call,dst = ip6_dst_lookup_flow(sk, &fl6, final_p))"];
"1000503" [label="(Call,IS_ERR(dst))"];
"1000506" [label="(Call,dst_metric(dst, RTAX_WINDOW))"];
"1000528" [label="(Call,dst_metric(dst, RTAX_INITRWND))"];
"1000509" [label="(Call,tcp_select_initial_window(tcp_full_space(sk), req->mss,\n\t\t\t\t  &req->rsk_rcv_wnd, &req->rsk_window_clamp,\n\t\t\t\t  ireq->wscale_ok, &rcv_wscale,\n\t\t\t\t  dst_metric(dst, RTAX_INITRWND)))"];
"1000540" [label="(Call,cookie_ecn_ok(&tcp_opt, sock_net(sk), dst))"];
"1000536" [label="(Call,ireq->ecn_ok = cookie_ecn_ok(&tcp_opt, sock_net(sk), dst))"];
"1000548" [label="(Call,tcp_get_cookie_sock(sk, skb, req, dst))"];
"1000546" [label="(Call,ret = tcp_get_cookie_sock(sk, skb, req, dst))"];
"1000554" [label="(Return,return ret;)"];
"1000510" [label="(Call,tcp_full_space(sk))"];
"1000543" [label="(Call,sock_net(sk))"];
"1000492" [label="(Call,flowi6_to_flowi(&fl6))"];
"1000490" [label="(Call,security_req_classify_flow(req, flowi6_to_flowi(&fl6)))"];
"1000557" [label="(Call,reqsk_free(req))"];
"1000497" [label="(Call,ip6_dst_lookup_flow(sk, &fl6, final_p))"];
"1000135" [label="(Call,*ret = sk)"];
"1000507" [label="(Identifier,dst)"];
"1000543" [label="(Call,sock_net(sk))"];
"1000226" [label="(Call,security_inet_conn_request(sk, skb, req))"];
"1000198" [label="(Call,ret = NULL)"];
"1000104" [label="(MethodParameterIn,struct sock *sk)"];
"1000491" [label="(Identifier,req)"];
"1000501" [label="(Identifier,final_p)"];
"1000492" [label="(Call,flowi6_to_flowi(&fl6))"];
"1000373" [label="(Call,ireq->wscale_ok\t\t= tcp_opt.wscale_ok)"];
"1000351" [label="(Call,inet_request_mark(sk, skb))"];
"1000546" [label="(Call,ret = tcp_get_cookie_sock(sk, skb, req, dst))"];
"1000528" [label="(Call,dst_metric(dst, RTAX_INITRWND))"];
"1000433" [label="(Identifier,fl6)"];
"1000554" [label="(Return,return ret;)"];
"1000448" [label="(Call,rcu_dereference(np->opt))"];
"1000425" [label="(Call,memset(&fl6, 0, sizeof(fl6)))"];
"1000498" [label="(Identifier,sk)"];
"1000496" [label="(Identifier,dst)"];
"1000194" [label="(Call,cookie_timestamp_decode(&tcp_opt))"];
"1000552" [label="(Identifier,dst)"];
"1000499" [label="(Call,&fl6)"];
"1000490" [label="(Call,security_req_classify_flow(req, flowi6_to_flowi(&fl6)))"];
"1000493" [label="(Call,&fl6)"];
"1000506" [label="(Call,dst_metric(dst, RTAX_WINDOW))"];
"1000558" [label="(Identifier,req)"];
"1000555" [label="(Identifier,ret)"];
"1000444" [label="(Identifier,final_p)"];
"1000529" [label="(Identifier,dst)"];
"1000541" [label="(Call,&tcp_opt)"];
"1000536" [label="(Call,ireq->ecn_ok = cookie_ecn_ok(&tcp_opt, sock_net(sk), dst))"];
"1000445" [label="(Call,fl6_update_dst(&fl6, rcu_dereference(np->opt), &final))"];
"1000553" [label="(JumpTarget,out:)"];
"1000456" [label="(Identifier,fl6)"];
"1000545" [label="(Identifier,dst)"];
"1000550" [label="(Identifier,skb)"];
"1000511" [label="(Identifier,sk)"];
"1000502" [label="(ControlStructure,if (IS_ERR(dst)))"];
"1000443" [label="(Call,final_p = fl6_update_dst(&fl6, rcu_dereference(np->opt), &final))"];
"1000504" [label="(Identifier,dst)"];
"1000530" [label="(Identifier,RTAX_INITRWND)"];
"1000547" [label="(Identifier,ret)"];
"1000510" [label="(Call,tcp_full_space(sk))"];
"1000523" [label="(Call,ireq->wscale_ok)"];
"1000426" [label="(Call,&fl6)"];
"1000519" [label="(Call,&req->rsk_window_clamp)"];
"1000503" [label="(Call,IS_ERR(dst))"];
"1000429" [label="(Call,sizeof(fl6))"];
"1000533" [label="(Identifier,ireq)"];
"1000537" [label="(Call,ireq->ecn_ok)"];
"1000428" [label="(Literal,0)"];
"1000487" [label="(Call,inet_sk(sk))"];
"1000560" [label="(Identifier,NULL)"];
"1000544" [label="(Identifier,sk)"];
"1000548" [label="(Call,tcp_get_cookie_sock(sk, skb, req, dst))"];
"1000452" [label="(Call,&final)"];
"1000453" [label="(Identifier,final)"];
"1000512" [label="(Call,req->mss)"];
"1000526" [label="(Call,&rcv_wscale)"];
"1000551" [label="(Identifier,req)"];
"1000508" [label="(Identifier,RTAX_WINDOW)"];
"1000561" [label="(MethodReturn,struct sock *)"];
"1000505" [label="(ControlStructure,goto out_free;)"];
"1000105" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000557" [label="(Call,reqsk_free(req))"];
"1000446" [label="(Call,&fl6)"];
"1000495" [label="(Call,dst = ip6_dst_lookup_flow(sk, &fl6, final_p))"];
"1000106" [label="(Block,)"];
"1000540" [label="(Call,cookie_ecn_ok(&tcp_opt, sock_net(sk), dst))"];
"1000509" [label="(Call,tcp_select_initial_window(tcp_full_space(sk), req->mss,\n\t\t\t\t  &req->rsk_rcv_wnd, &req->rsk_window_clamp,\n\t\t\t\t  ireq->wscale_ok, &rcv_wscale,\n\t\t\t\t  dst_metric(dst, RTAX_INITRWND)))"];
"1000421" [label="(Block,)"];
"1000449" [label="(Call,np->opt)"];
"1000515" [label="(Call,&req->rsk_rcv_wnd)"];
"1000549" [label="(Identifier,sk)"];
"1000513" [label="(Identifier,req)"];
"1000231" [label="(Call,req->mss = mss)"];
"1000445" -> "1000443"  [label="AST: "];
"1000445" -> "1000452"  [label="CFG: "];
"1000446" -> "1000445"  [label="AST: "];
"1000448" -> "1000445"  [label="AST: "];
"1000452" -> "1000445"  [label="AST: "];
"1000443" -> "1000445"  [label="CFG: "];
"1000445" -> "1000561"  [label="DDG: &final"];
"1000445" -> "1000561"  [label="DDG: rcu_dereference(np->opt)"];
"1000445" -> "1000443"  [label="DDG: &fl6"];
"1000445" -> "1000443"  [label="DDG: rcu_dereference(np->opt)"];
"1000445" -> "1000443"  [label="DDG: &final"];
"1000425" -> "1000445"  [label="DDG: &fl6"];
"1000448" -> "1000445"  [label="DDG: np->opt"];
"1000445" -> "1000492"  [label="DDG: &fl6"];
"1000425" -> "1000421"  [label="AST: "];
"1000425" -> "1000429"  [label="CFG: "];
"1000426" -> "1000425"  [label="AST: "];
"1000428" -> "1000425"  [label="AST: "];
"1000429" -> "1000425"  [label="AST: "];
"1000433" -> "1000425"  [label="CFG: "];
"1000425" -> "1000561"  [label="DDG: memset(&fl6, 0, sizeof(fl6))"];
"1000448" -> "1000449"  [label="CFG: "];
"1000449" -> "1000448"  [label="AST: "];
"1000453" -> "1000448"  [label="CFG: "];
"1000448" -> "1000561"  [label="DDG: np->opt"];
"1000443" -> "1000421"  [label="AST: "];
"1000444" -> "1000443"  [label="AST: "];
"1000456" -> "1000443"  [label="CFG: "];
"1000443" -> "1000561"  [label="DDG: fl6_update_dst(&fl6, rcu_dereference(np->opt), &final)"];
"1000443" -> "1000497"  [label="DDG: final_p"];
"1000497" -> "1000495"  [label="AST: "];
"1000497" -> "1000501"  [label="CFG: "];
"1000498" -> "1000497"  [label="AST: "];
"1000499" -> "1000497"  [label="AST: "];
"1000501" -> "1000497"  [label="AST: "];
"1000495" -> "1000497"  [label="CFG: "];
"1000497" -> "1000561"  [label="DDG: sk"];
"1000497" -> "1000561"  [label="DDG: &fl6"];
"1000497" -> "1000561"  [label="DDG: final_p"];
"1000497" -> "1000495"  [label="DDG: sk"];
"1000497" -> "1000495"  [label="DDG: &fl6"];
"1000497" -> "1000495"  [label="DDG: final_p"];
"1000487" -> "1000497"  [label="DDG: sk"];
"1000104" -> "1000497"  [label="DDG: sk"];
"1000492" -> "1000497"  [label="DDG: &fl6"];
"1000497" -> "1000510"  [label="DDG: sk"];
"1000495" -> "1000421"  [label="AST: "];
"1000496" -> "1000495"  [label="AST: "];
"1000504" -> "1000495"  [label="CFG: "];
"1000495" -> "1000561"  [label="DDG: ip6_dst_lookup_flow(sk, &fl6, final_p)"];
"1000495" -> "1000503"  [label="DDG: dst"];
"1000503" -> "1000502"  [label="AST: "];
"1000503" -> "1000504"  [label="CFG: "];
"1000504" -> "1000503"  [label="AST: "];
"1000505" -> "1000503"  [label="CFG: "];
"1000507" -> "1000503"  [label="CFG: "];
"1000503" -> "1000561"  [label="DDG: IS_ERR(dst)"];
"1000503" -> "1000561"  [label="DDG: dst"];
"1000503" -> "1000506"  [label="DDG: dst"];
"1000506" -> "1000106"  [label="AST: "];
"1000506" -> "1000508"  [label="CFG: "];
"1000507" -> "1000506"  [label="AST: "];
"1000508" -> "1000506"  [label="AST: "];
"1000511" -> "1000506"  [label="CFG: "];
"1000506" -> "1000561"  [label="DDG: dst_metric(dst, RTAX_WINDOW)"];
"1000506" -> "1000561"  [label="DDG: RTAX_WINDOW"];
"1000506" -> "1000528"  [label="DDG: dst"];
"1000528" -> "1000509"  [label="AST: "];
"1000528" -> "1000530"  [label="CFG: "];
"1000529" -> "1000528"  [label="AST: "];
"1000530" -> "1000528"  [label="AST: "];
"1000509" -> "1000528"  [label="CFG: "];
"1000528" -> "1000561"  [label="DDG: RTAX_INITRWND"];
"1000528" -> "1000509"  [label="DDG: dst"];
"1000528" -> "1000509"  [label="DDG: RTAX_INITRWND"];
"1000528" -> "1000540"  [label="DDG: dst"];
"1000509" -> "1000106"  [label="AST: "];
"1000510" -> "1000509"  [label="AST: "];
"1000512" -> "1000509"  [label="AST: "];
"1000515" -> "1000509"  [label="AST: "];
"1000519" -> "1000509"  [label="AST: "];
"1000523" -> "1000509"  [label="AST: "];
"1000526" -> "1000509"  [label="AST: "];
"1000533" -> "1000509"  [label="CFG: "];
"1000509" -> "1000561"  [label="DDG: tcp_select_initial_window(tcp_full_space(sk), req->mss,\n\t\t\t\t  &req->rsk_rcv_wnd, &req->rsk_window_clamp,\n\t\t\t\t  ireq->wscale_ok, &rcv_wscale,\n\t\t\t\t  dst_metric(dst, RTAX_INITRWND))"];
"1000509" -> "1000561"  [label="DDG: dst_metric(dst, RTAX_INITRWND)"];
"1000509" -> "1000561"  [label="DDG: &req->rsk_window_clamp"];
"1000509" -> "1000561"  [label="DDG: &req->rsk_rcv_wnd"];
"1000509" -> "1000561"  [label="DDG: &rcv_wscale"];
"1000509" -> "1000561"  [label="DDG: ireq->wscale_ok"];
"1000509" -> "1000561"  [label="DDG: req->mss"];
"1000509" -> "1000561"  [label="DDG: tcp_full_space(sk)"];
"1000510" -> "1000509"  [label="DDG: sk"];
"1000231" -> "1000509"  [label="DDG: req->mss"];
"1000373" -> "1000509"  [label="DDG: ireq->wscale_ok"];
"1000540" -> "1000536"  [label="AST: "];
"1000540" -> "1000545"  [label="CFG: "];
"1000541" -> "1000540"  [label="AST: "];
"1000543" -> "1000540"  [label="AST: "];
"1000545" -> "1000540"  [label="AST: "];
"1000536" -> "1000540"  [label="CFG: "];
"1000540" -> "1000561"  [label="DDG: sock_net(sk)"];
"1000540" -> "1000561"  [label="DDG: &tcp_opt"];
"1000540" -> "1000536"  [label="DDG: &tcp_opt"];
"1000540" -> "1000536"  [label="DDG: sock_net(sk)"];
"1000540" -> "1000536"  [label="DDG: dst"];
"1000194" -> "1000540"  [label="DDG: &tcp_opt"];
"1000543" -> "1000540"  [label="DDG: sk"];
"1000540" -> "1000548"  [label="DDG: dst"];
"1000536" -> "1000106"  [label="AST: "];
"1000537" -> "1000536"  [label="AST: "];
"1000547" -> "1000536"  [label="CFG: "];
"1000536" -> "1000561"  [label="DDG: cookie_ecn_ok(&tcp_opt, sock_net(sk), dst)"];
"1000536" -> "1000561"  [label="DDG: ireq->ecn_ok"];
"1000548" -> "1000546"  [label="AST: "];
"1000548" -> "1000552"  [label="CFG: "];
"1000549" -> "1000548"  [label="AST: "];
"1000550" -> "1000548"  [label="AST: "];
"1000551" -> "1000548"  [label="AST: "];
"1000552" -> "1000548"  [label="AST: "];
"1000546" -> "1000548"  [label="CFG: "];
"1000548" -> "1000561"  [label="DDG: skb"];
"1000548" -> "1000561"  [label="DDG: req"];
"1000548" -> "1000561"  [label="DDG: sk"];
"1000548" -> "1000561"  [label="DDG: dst"];
"1000548" -> "1000546"  [label="DDG: sk"];
"1000548" -> "1000546"  [label="DDG: skb"];
"1000548" -> "1000546"  [label="DDG: req"];
"1000548" -> "1000546"  [label="DDG: dst"];
"1000543" -> "1000548"  [label="DDG: sk"];
"1000104" -> "1000548"  [label="DDG: sk"];
"1000351" -> "1000548"  [label="DDG: skb"];
"1000105" -> "1000548"  [label="DDG: skb"];
"1000490" -> "1000548"  [label="DDG: req"];
"1000546" -> "1000106"  [label="AST: "];
"1000547" -> "1000546"  [label="AST: "];
"1000553" -> "1000546"  [label="CFG: "];
"1000546" -> "1000561"  [label="DDG: tcp_get_cookie_sock(sk, skb, req, dst)"];
"1000546" -> "1000561"  [label="DDG: ret"];
"1000546" -> "1000554"  [label="DDG: ret"];
"1000554" -> "1000106"  [label="AST: "];
"1000554" -> "1000555"  [label="CFG: "];
"1000555" -> "1000554"  [label="AST: "];
"1000561" -> "1000554"  [label="CFG: "];
"1000554" -> "1000561"  [label="DDG: <RET>"];
"1000555" -> "1000554"  [label="DDG: ret"];
"1000198" -> "1000554"  [label="DDG: ret"];
"1000135" -> "1000554"  [label="DDG: ret"];
"1000510" -> "1000511"  [label="CFG: "];
"1000511" -> "1000510"  [label="AST: "];
"1000513" -> "1000510"  [label="CFG: "];
"1000104" -> "1000510"  [label="DDG: sk"];
"1000510" -> "1000543"  [label="DDG: sk"];
"1000543" -> "1000544"  [label="CFG: "];
"1000544" -> "1000543"  [label="AST: "];
"1000545" -> "1000543"  [label="CFG: "];
"1000104" -> "1000543"  [label="DDG: sk"];
"1000492" -> "1000490"  [label="AST: "];
"1000492" -> "1000493"  [label="CFG: "];
"1000493" -> "1000492"  [label="AST: "];
"1000490" -> "1000492"  [label="CFG: "];
"1000492" -> "1000490"  [label="DDG: &fl6"];
"1000490" -> "1000421"  [label="AST: "];
"1000491" -> "1000490"  [label="AST: "];
"1000496" -> "1000490"  [label="CFG: "];
"1000490" -> "1000561"  [label="DDG: security_req_classify_flow(req, flowi6_to_flowi(&fl6))"];
"1000490" -> "1000561"  [label="DDG: flowi6_to_flowi(&fl6)"];
"1000226" -> "1000490"  [label="DDG: req"];
"1000490" -> "1000557"  [label="DDG: req"];
"1000557" -> "1000106"  [label="AST: "];
"1000557" -> "1000558"  [label="CFG: "];
"1000558" -> "1000557"  [label="AST: "];
"1000560" -> "1000557"  [label="CFG: "];
"1000557" -> "1000561"  [label="DDG: reqsk_free(req)"];
"1000557" -> "1000561"  [label="DDG: req"];
"1000226" -> "1000557"  [label="DDG: req"];
}
