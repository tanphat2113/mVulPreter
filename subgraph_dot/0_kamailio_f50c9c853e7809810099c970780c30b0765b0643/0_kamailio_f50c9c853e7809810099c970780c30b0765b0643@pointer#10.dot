digraph "0_kamailio_f50c9c853e7809810099c970780c30b0765b0643@pointer" {
"1000254" [label="(Call,(unsigned short int)msg->len)"];
"1000253" [label="(Call,htons((unsigned short int)msg->len))"];
"1000251" [label="(Call,h=htons((unsigned short int)msg->len))"];
"1000728" [label="(Call,len < j + msg->len + 1)"];
"1000730" [label="(Call,j + msg->len + 1)"];
"1000732" [label="(Call,msg->len + 1)"];
"1000743" [label="(Call,memcpy(&payload[j],msg->buf,msg->len))"];
"1000754" [label="(Call,LM_DBG(\"msglen = %d,msg starts at %d\n\",msg->len,j))"];
"1000762" [label="(Call,htons(j))"];
"1000760" [label="(Call,j=htons(j))"];
"1000733" [label="(Call,msg->len)"];
"1000119" [label="(MethodParameterIn,int len)"];
"1000262" [label="(Identifier,payload)"];
"1000739" [label="(Literal,\"not enough space to encode sip message\n\")"];
"1000120" [label="(Block,)"];
"1000256" [label="(Call,msg->len)"];
"1000782" [label="(MethodReturn,int)"];
"1000732" [label="(Call,msg->len + 1)"];
"1000756" [label="(Call,msg->len)"];
"1000754" [label="(Call,LM_DBG(\"msglen = %d,msg starts at %d\n\",msg->len,j))"];
"1000731" [label="(Identifier,j)"];
"1000727" [label="(ControlStructure,if(len < j + msg->len + 1))"];
"1000761" [label="(Identifier,j)"];
"1000736" [label="(Literal,1)"];
"1000253" [label="(Call,htons((unsigned short int)msg->len))"];
"1000254" [label="(Call,(unsigned short int)msg->len)"];
"1000760" [label="(Call,j=htons(j))"];
"1000759" [label="(Identifier,j)"];
"1000729" [label="(Identifier,len)"];
"1000763" [label="(Identifier,j)"];
"1000762" [label="(Call,htons(j))"];
"1000748" [label="(Call,msg->buf)"];
"1000751" [label="(Call,msg->len)"];
"1000429" [label="(Call,ms->u.request.version.s-msg->buf)"];
"1000730" [label="(Call,j + msg->len + 1)"];
"1000156" [label="(Call,memset(payload,0,len))"];
"1000723" [label="(Call,j=ntohs(j))"];
"1000746" [label="(Identifier,payload)"];
"1000512" [label="(Call,encode_uri2(msg->buf,\n\t\t  ms->u.request.method.s-msg->buf+ms->len,\n\t\t  ms->u.request.uri,&miuri,\n\t\t  (unsigned char*)&payload[REQUEST_URI_IDX+1]))"];
"1000728" [label="(Call,len < j + msg->len + 1)"];
"1000743" [label="(Call,memcpy(&payload[j],msg->buf,msg->len))"];
"1000744" [label="(Call,&payload[j])"];
"1000442" [label="(Call,ms->u.reply.version.s-msg->buf)"];
"1000755" [label="(Literal,\"msglen = %d,msg starts at %d\n\")"];
"1000767" [label="(Identifier,payload)"];
"1000251" [label="(Call,h=htons((unsigned short int)msg->len))"];
"1000252" [label="(Identifier,h)"];
"1000254" -> "1000253"  [label="AST: "];
"1000254" -> "1000256"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000256" -> "1000254"  [label="AST: "];
"1000253" -> "1000254"  [label="CFG: "];
"1000254" -> "1000782"  [label="DDG: "];
"1000254" -> "1000253"  [label="DDG: "];
"1000254" -> "1000728"  [label="DDG: "];
"1000254" -> "1000730"  [label="DDG: "];
"1000254" -> "1000732"  [label="DDG: "];
"1000254" -> "1000743"  [label="DDG: "];
"1000253" -> "1000251"  [label="AST: "];
"1000251" -> "1000253"  [label="CFG: "];
"1000253" -> "1000782"  [label="DDG: "];
"1000253" -> "1000251"  [label="DDG: "];
"1000251" -> "1000120"  [label="AST: "];
"1000252" -> "1000251"  [label="AST: "];
"1000262" -> "1000251"  [label="CFG: "];
"1000251" -> "1000782"  [label="DDG: "];
"1000251" -> "1000782"  [label="DDG: "];
"1000728" -> "1000727"  [label="AST: "];
"1000728" -> "1000730"  [label="CFG: "];
"1000729" -> "1000728"  [label="AST: "];
"1000730" -> "1000728"  [label="AST: "];
"1000739" -> "1000728"  [label="CFG: "];
"1000746" -> "1000728"  [label="CFG: "];
"1000728" -> "1000782"  [label="DDG: "];
"1000728" -> "1000782"  [label="DDG: "];
"1000728" -> "1000782"  [label="DDG: "];
"1000156" -> "1000728"  [label="DDG: "];
"1000119" -> "1000728"  [label="DDG: "];
"1000723" -> "1000728"  [label="DDG: "];
"1000730" -> "1000732"  [label="CFG: "];
"1000731" -> "1000730"  [label="AST: "];
"1000732" -> "1000730"  [label="AST: "];
"1000730" -> "1000782"  [label="DDG: "];
"1000730" -> "1000782"  [label="DDG: "];
"1000723" -> "1000730"  [label="DDG: "];
"1000732" -> "1000736"  [label="CFG: "];
"1000733" -> "1000732"  [label="AST: "];
"1000736" -> "1000732"  [label="AST: "];
"1000732" -> "1000782"  [label="DDG: "];
"1000743" -> "1000120"  [label="AST: "];
"1000743" -> "1000751"  [label="CFG: "];
"1000744" -> "1000743"  [label="AST: "];
"1000748" -> "1000743"  [label="AST: "];
"1000751" -> "1000743"  [label="AST: "];
"1000755" -> "1000743"  [label="CFG: "];
"1000743" -> "1000782"  [label="DDG: "];
"1000743" -> "1000782"  [label="DDG: "];
"1000743" -> "1000782"  [label="DDG: "];
"1000512" -> "1000743"  [label="DDG: "];
"1000442" -> "1000743"  [label="DDG: "];
"1000429" -> "1000743"  [label="DDG: "];
"1000743" -> "1000754"  [label="DDG: "];
"1000754" -> "1000120"  [label="AST: "];
"1000754" -> "1000759"  [label="CFG: "];
"1000755" -> "1000754"  [label="AST: "];
"1000756" -> "1000754"  [label="AST: "];
"1000759" -> "1000754"  [label="AST: "];
"1000761" -> "1000754"  [label="CFG: "];
"1000754" -> "1000782"  [label="DDG: "];
"1000754" -> "1000782"  [label="DDG: "];
"1000723" -> "1000754"  [label="DDG: "];
"1000754" -> "1000762"  [label="DDG: "];
"1000762" -> "1000760"  [label="AST: "];
"1000762" -> "1000763"  [label="CFG: "];
"1000763" -> "1000762"  [label="AST: "];
"1000760" -> "1000762"  [label="CFG: "];
"1000762" -> "1000760"  [label="DDG: "];
"1000760" -> "1000120"  [label="AST: "];
"1000761" -> "1000760"  [label="AST: "];
"1000767" -> "1000760"  [label="CFG: "];
"1000760" -> "1000782"  [label="DDG: "];
"1000760" -> "1000782"  [label="DDG: "];
}
