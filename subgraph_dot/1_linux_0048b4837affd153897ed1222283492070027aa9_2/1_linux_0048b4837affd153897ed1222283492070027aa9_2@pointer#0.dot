digraph "1_linux_0048b4837affd153897ed1222283492070027aa9_2@pointer" {
"1000149" [label="(Call,bit < bm->depth)"];
"1000139" [label="(Call,bit = find_first_bit(&bm->word, bm->depth))"];
"1000141" [label="(Call,find_first_bit(&bm->word, bm->depth))"];
"1000156" [label="(Call,find_next_bit(&bm->word, bm->depth, bit + 1))"];
"1000149" [label="(Call,bit < bm->depth)"];
"1000154" [label="(Call,bit = find_next_bit(&bm->word, bm->depth, bit + 1))"];
"1000164" [label="(Call,bit + 1)"];
"1000170" [label="(Call,blk_mq_tag_to_rq(tags, off + bit))"];
"1000168" [label="(Call,rq = blk_mq_tag_to_rq(tags, off + bit))"];
"1000175" [label="(Call,fn(rq, data, reserved))"];
"1000172" [label="(Call,off + bit)"];
"1000157" [label="(Call,&bm->word)"];
"1000180" [label="(Identifier,off)"];
"1000170" [label="(Call,blk_mq_tag_to_rq(tags, off + bit))"];
"1000151" [label="(Call,bm->depth)"];
"1000155" [label="(Identifier,bit)"];
"1000174" [label="(Identifier,bit)"];
"1000178" [label="(Identifier,reserved)"];
"1000138" [label="(ControlStructure,for (bit = find_first_bit(&bm->word, bm->depth);\n \t\t     bit < bm->depth;\n \t\t     bit = find_next_bit(&bm->word, bm->depth, bit + 1)))"];
"1000186" [label="(MethodReturn,static void)"];
"1000142" [label="(Call,&bm->word)"];
"1000101" [label="(MethodParameterIn,struct blk_mq_tags *tags)"];
"1000105" [label="(MethodParameterIn,void *data)"];
"1000169" [label="(Identifier,rq)"];
"1000166" [label="(Literal,1)"];
"1000176" [label="(Identifier,rq)"];
"1000140" [label="(Identifier,bit)"];
"1000149" [label="(Call,bit < bm->depth)"];
"1000172" [label="(Call,off + bit)"];
"1000165" [label="(Identifier,bit)"];
"1000141" [label="(Call,find_first_bit(&bm->word, bm->depth))"];
"1000164" [label="(Call,bit + 1)"];
"1000171" [label="(Identifier,tags)"];
"1000161" [label="(Call,bm->depth)"];
"1000173" [label="(Identifier,off)"];
"1000150" [label="(Identifier,bit)"];
"1000139" [label="(Call,bit = find_first_bit(&bm->word, bm->depth))"];
"1000106" [label="(MethodParameterIn,bool reserved)"];
"1000156" [label="(Call,find_next_bit(&bm->word, bm->depth, bit + 1))"];
"1000167" [label="(Block,)"];
"1000179" [label="(Call,off += (1 << bt->bits_per_word))"];
"1000177" [label="(Identifier,data)"];
"1000103" [label="(MethodParameterIn,unsigned int off)"];
"1000175" [label="(Call,fn(rq, data, reserved))"];
"1000146" [label="(Call,bm->depth)"];
"1000154" [label="(Call,bit = find_next_bit(&bm->word, bm->depth, bit + 1))"];
"1000168" [label="(Call,rq = blk_mq_tag_to_rq(tags, off + bit))"];
"1000149" -> "1000138"  [label="AST: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000169" -> "1000149"  [label="CFG: "];
"1000180" -> "1000149"  [label="CFG: "];
"1000149" -> "1000186"  [label="DDG: bm->depth"];
"1000149" -> "1000186"  [label="DDG: bit < bm->depth"];
"1000149" -> "1000186"  [label="DDG: bit"];
"1000149" -> "1000141"  [label="DDG: bm->depth"];
"1000139" -> "1000149"  [label="DDG: bit"];
"1000154" -> "1000149"  [label="DDG: bit"];
"1000141" -> "1000149"  [label="DDG: bm->depth"];
"1000156" -> "1000149"  [label="DDG: bm->depth"];
"1000149" -> "1000156"  [label="DDG: bm->depth"];
"1000149" -> "1000156"  [label="DDG: bit"];
"1000149" -> "1000164"  [label="DDG: bit"];
"1000149" -> "1000170"  [label="DDG: bit"];
"1000149" -> "1000172"  [label="DDG: bit"];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000141"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="AST: "];
"1000150" -> "1000139"  [label="CFG: "];
"1000139" -> "1000186"  [label="DDG: find_first_bit(&bm->word, bm->depth)"];
"1000141" -> "1000139"  [label="DDG: &bm->word"];
"1000141" -> "1000139"  [label="DDG: bm->depth"];
"1000141" -> "1000146"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000146" -> "1000141"  [label="AST: "];
"1000141" -> "1000186"  [label="DDG: &bm->word"];
"1000156" -> "1000141"  [label="DDG: &bm->word"];
"1000141" -> "1000156"  [label="DDG: &bm->word"];
"1000156" -> "1000154"  [label="AST: "];
"1000156" -> "1000164"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000161" -> "1000156"  [label="AST: "];
"1000164" -> "1000156"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000156" -> "1000186"  [label="DDG: &bm->word"];
"1000156" -> "1000186"  [label="DDG: bit + 1"];
"1000156" -> "1000154"  [label="DDG: &bm->word"];
"1000156" -> "1000154"  [label="DDG: bm->depth"];
"1000156" -> "1000154"  [label="DDG: bit + 1"];
"1000154" -> "1000138"  [label="AST: "];
"1000155" -> "1000154"  [label="AST: "];
"1000150" -> "1000154"  [label="CFG: "];
"1000154" -> "1000186"  [label="DDG: find_next_bit(&bm->word, bm->depth, bit + 1)"];
"1000164" -> "1000166"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000166" -> "1000164"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000170" -> "1000186"  [label="DDG: off + bit"];
"1000170" -> "1000186"  [label="DDG: tags"];
"1000170" -> "1000168"  [label="DDG: tags"];
"1000170" -> "1000168"  [label="DDG: off + bit"];
"1000101" -> "1000170"  [label="DDG: tags"];
"1000179" -> "1000170"  [label="DDG: off"];
"1000103" -> "1000170"  [label="DDG: off"];
"1000168" -> "1000167"  [label="AST: "];
"1000169" -> "1000168"  [label="AST: "];
"1000176" -> "1000168"  [label="CFG: "];
"1000168" -> "1000186"  [label="DDG: blk_mq_tag_to_rq(tags, off + bit)"];
"1000168" -> "1000175"  [label="DDG: rq"];
"1000175" -> "1000167"  [label="AST: "];
"1000175" -> "1000178"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000177" -> "1000175"  [label="AST: "];
"1000178" -> "1000175"  [label="AST: "];
"1000155" -> "1000175"  [label="CFG: "];
"1000175" -> "1000186"  [label="DDG: reserved"];
"1000175" -> "1000186"  [label="DDG: rq"];
"1000175" -> "1000186"  [label="DDG: data"];
"1000175" -> "1000186"  [label="DDG: fn(rq, data, reserved)"];
"1000105" -> "1000175"  [label="DDG: data"];
"1000106" -> "1000175"  [label="DDG: reserved"];
"1000172" -> "1000174"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000174" -> "1000172"  [label="AST: "];
"1000179" -> "1000172"  [label="DDG: off"];
"1000103" -> "1000172"  [label="DDG: off"];
}
