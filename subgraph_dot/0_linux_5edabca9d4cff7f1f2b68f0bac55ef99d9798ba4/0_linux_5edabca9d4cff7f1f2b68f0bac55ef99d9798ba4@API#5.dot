digraph "0_linux_5edabca9d4cff7f1f2b68f0bac55ef99d9798ba4@API" {
"1000326" [label="(Call,queued = dccp_rcv_respond_partopen_state_process(sk, skb,\n\t\t\t\t\t\t\t\t dh, len))"];
"1000328" [label="(Call,dccp_rcv_respond_partopen_state_process(sk, skb,\n\t\t\t\t\t\t\t\t dh, len))"];
"1000247" [label="(Call,dccp_parse_options(sk, NULL, skb))"];
"1000198" [label="(Call,dccp_check_seqno(sk, skb))"];
"1000119" [label="(Call,dccp_sk(sk))"];
"1000111" [label="(MethodParameterIn,struct sock *sk)"];
"1000124" [label="(Call,DCCP_SKB_CB(skb))"];
"1000112" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000322" [label="(Call,dccp_deliver_input_to_ccids(sk, skb))"];
"1000319" [label="(Call,dccp_handle_ackvec_processing(sk, skb))"];
"1000113" [label="(MethodParameterIn,struct dccp_hdr *dh)"];
"1000114" [label="(MethodParameterIn,unsigned int len)"];
"1000375" [label="(Call,!queued)"];
"1000200" [label="(Identifier,skb)"];
"1000329" [label="(Identifier,sk)"];
"1000113" [label="(MethodParameterIn,struct dccp_hdr *dh)"];
"1000332" [label="(Identifier,len)"];
"1000322" [label="(Call,dccp_deliver_input_to_ccids(sk, skb))"];
"1000327" [label="(Identifier,queued)"];
"1000124" [label="(Call,DCCP_SKB_CB(skb))"];
"1000256" [label="(Identifier,dh)"];
"1000198" [label="(Call,dccp_check_seqno(sk, skb))"];
"1000119" [label="(Call,dccp_sk(sk))"];
"1000133" [label="(Call,queued = 0)"];
"1000383" [label="(MethodReturn,int)"];
"1000319" [label="(Call,dccp_handle_ackvec_processing(sk, skb))"];
"1000246" [label="(ControlStructure,if (dccp_parse_options(sk, NULL, skb)))"];
"1000158" [label="(Call,consume_skb(skb))"];
"1000331" [label="(Identifier,dh)"];
"1000330" [label="(Identifier,skb)"];
"1000249" [label="(Identifier,NULL)"];
"1000120" [label="(Identifier,sk)"];
"1000375" [label="(Call,!queued)"];
"1000367" [label="(Call,dccp_send_sync(sk, dcb->dccpd_seq, DCCP_PKT_SYNCACK))"];
"1000239" [label="(Call,dccp_send_sync(sk, dcb->dccpd_seq, DCCP_PKT_SYNC))"];
"1000111" [label="(MethodParameterIn,struct sock *sk)"];
"1000192" [label="(Call,sk->sk_state != DCCP_REQUESTING && dccp_check_seqno(sk, skb))"];
"1000378" [label="(JumpTarget,discard:)"];
"1000326" [label="(Call,queued = dccp_rcv_respond_partopen_state_process(sk, skb,\n\t\t\t\t\t\t\t\t dh, len))"];
"1000247" [label="(Call,dccp_parse_options(sk, NULL, skb))"];
"1000117" [label="(Call,*dp = dccp_sk(sk))"];
"1000289" [label="(Call,dccp_rcv_close(sk, skb))"];
"1000353" [label="(Call,sk_wake_async(sk, SOCK_WAKE_IO, POLL_OUT))"];
"1000325" [label="(JumpTarget,case DCCP_RESPOND:)"];
"1000333" [label="(ControlStructure,break;)"];
"1000379" [label="(Call,__kfree_skb(skb))"];
"1000324" [label="(Identifier,skb)"];
"1000260" [label="(Call,dccp_rcv_reset(sk, skb))"];
"1000250" [label="(Identifier,skb)"];
"1000122" [label="(Call,*dcb = DCCP_SKB_CB(skb))"];
"1000125" [label="(Identifier,skb)"];
"1000320" [label="(Identifier,sk)"];
"1000248" [label="(Identifier,sk)"];
"1000199" [label="(Identifier,sk)"];
"1000376" [label="(Identifier,queued)"];
"1000114" [label="(MethodParameterIn,unsigned int len)"];
"1000351" [label="(Call,sk->sk_state_change(sk))"];
"1000112" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000274" [label="(Call,dccp_rcv_closereq(sk, skb))"];
"1000382" [label="(Literal,0)"];
"1000299" [label="(Block,)"];
"1000328" [label="(Call,dccp_rcv_respond_partopen_state_process(sk, skb,\n\t\t\t\t\t\t\t\t dh, len))"];
"1000252" [label="(Literal,1)"];
"1000314" [label="(Call,__kfree_skb(skb))"];
"1000323" [label="(Identifier,sk)"];
"1000321" [label="(Identifier,skb)"];
"1000374" [label="(ControlStructure,if (!queued))"];
"1000152" [label="(Call,inet_csk(sk)->icsk_af_ops->conn_request(sk,\n \t\t\t\t\t\t\t\t    skb))"];
"1000303" [label="(Call,dccp_rcv_request_sent_state_process(sk, skb, dh, len))"];
"1000326" -> "1000299"  [label="AST: "];
"1000326" -> "1000328"  [label="CFG: "];
"1000327" -> "1000326"  [label="AST: "];
"1000328" -> "1000326"  [label="AST: "];
"1000333" -> "1000326"  [label="CFG: "];
"1000326" -> "1000383"  [label="DDG: dccp_rcv_respond_partopen_state_process(sk, skb,\n\t\t\t\t\t\t\t\t dh, len)"];
"1000326" -> "1000383"  [label="DDG: queued"];
"1000328" -> "1000326"  [label="DDG: sk"];
"1000328" -> "1000326"  [label="DDG: skb"];
"1000328" -> "1000326"  [label="DDG: dh"];
"1000328" -> "1000326"  [label="DDG: len"];
"1000326" -> "1000375"  [label="DDG: queued"];
"1000328" -> "1000332"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000330" -> "1000328"  [label="AST: "];
"1000331" -> "1000328"  [label="AST: "];
"1000332" -> "1000328"  [label="AST: "];
"1000328" -> "1000383"  [label="DDG: dh"];
"1000328" -> "1000383"  [label="DDG: len"];
"1000328" -> "1000383"  [label="DDG: sk"];
"1000328" -> "1000383"  [label="DDG: skb"];
"1000247" -> "1000328"  [label="DDG: sk"];
"1000247" -> "1000328"  [label="DDG: skb"];
"1000322" -> "1000328"  [label="DDG: sk"];
"1000322" -> "1000328"  [label="DDG: skb"];
"1000111" -> "1000328"  [label="DDG: sk"];
"1000112" -> "1000328"  [label="DDG: skb"];
"1000113" -> "1000328"  [label="DDG: dh"];
"1000114" -> "1000328"  [label="DDG: len"];
"1000328" -> "1000351"  [label="DDG: sk"];
"1000328" -> "1000367"  [label="DDG: sk"];
"1000328" -> "1000379"  [label="DDG: skb"];
"1000247" -> "1000246"  [label="AST: "];
"1000247" -> "1000250"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000249" -> "1000247"  [label="AST: "];
"1000250" -> "1000247"  [label="AST: "];
"1000252" -> "1000247"  [label="CFG: "];
"1000256" -> "1000247"  [label="CFG: "];
"1000247" -> "1000383"  [label="DDG: sk"];
"1000247" -> "1000383"  [label="DDG: skb"];
"1000247" -> "1000383"  [label="DDG: dccp_parse_options(sk, NULL, skb)"];
"1000247" -> "1000383"  [label="DDG: NULL"];
"1000198" -> "1000247"  [label="DDG: sk"];
"1000198" -> "1000247"  [label="DDG: skb"];
"1000119" -> "1000247"  [label="DDG: sk"];
"1000111" -> "1000247"  [label="DDG: sk"];
"1000124" -> "1000247"  [label="DDG: skb"];
"1000112" -> "1000247"  [label="DDG: skb"];
"1000247" -> "1000260"  [label="DDG: sk"];
"1000247" -> "1000260"  [label="DDG: skb"];
"1000247" -> "1000274"  [label="DDG: sk"];
"1000247" -> "1000274"  [label="DDG: skb"];
"1000247" -> "1000289"  [label="DDG: sk"];
"1000247" -> "1000289"  [label="DDG: skb"];
"1000247" -> "1000303"  [label="DDG: sk"];
"1000247" -> "1000303"  [label="DDG: skb"];
"1000247" -> "1000319"  [label="DDG: sk"];
"1000247" -> "1000319"  [label="DDG: skb"];
"1000247" -> "1000351"  [label="DDG: sk"];
"1000247" -> "1000367"  [label="DDG: sk"];
"1000247" -> "1000379"  [label="DDG: skb"];
"1000198" -> "1000192"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000192" -> "1000198"  [label="CFG: "];
"1000198" -> "1000383"  [label="DDG: sk"];
"1000198" -> "1000192"  [label="DDG: sk"];
"1000198" -> "1000192"  [label="DDG: skb"];
"1000119" -> "1000198"  [label="DDG: sk"];
"1000111" -> "1000198"  [label="DDG: sk"];
"1000124" -> "1000198"  [label="DDG: skb"];
"1000112" -> "1000198"  [label="DDG: skb"];
"1000198" -> "1000239"  [label="DDG: sk"];
"1000198" -> "1000379"  [label="DDG: skb"];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000119" -> "1000383"  [label="DDG: sk"];
"1000119" -> "1000117"  [label="DDG: sk"];
"1000111" -> "1000119"  [label="DDG: sk"];
"1000119" -> "1000152"  [label="DDG: sk"];
"1000119" -> "1000239"  [label="DDG: sk"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000383"  [label="DDG: sk"];
"1000111" -> "1000152"  [label="DDG: sk"];
"1000111" -> "1000239"  [label="DDG: sk"];
"1000111" -> "1000260"  [label="DDG: sk"];
"1000111" -> "1000274"  [label="DDG: sk"];
"1000111" -> "1000289"  [label="DDG: sk"];
"1000111" -> "1000303"  [label="DDG: sk"];
"1000111" -> "1000319"  [label="DDG: sk"];
"1000111" -> "1000322"  [label="DDG: sk"];
"1000111" -> "1000351"  [label="DDG: sk"];
"1000111" -> "1000353"  [label="DDG: sk"];
"1000111" -> "1000367"  [label="DDG: sk"];
"1000124" -> "1000122"  [label="AST: "];
"1000124" -> "1000125"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000124" -> "1000383"  [label="DDG: skb"];
"1000124" -> "1000122"  [label="DDG: skb"];
"1000112" -> "1000124"  [label="DDG: skb"];
"1000124" -> "1000152"  [label="DDG: skb"];
"1000124" -> "1000379"  [label="DDG: skb"];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000383"  [label="DDG: skb"];
"1000112" -> "1000152"  [label="DDG: skb"];
"1000112" -> "1000158"  [label="DDG: skb"];
"1000112" -> "1000260"  [label="DDG: skb"];
"1000112" -> "1000274"  [label="DDG: skb"];
"1000112" -> "1000289"  [label="DDG: skb"];
"1000112" -> "1000303"  [label="DDG: skb"];
"1000112" -> "1000314"  [label="DDG: skb"];
"1000112" -> "1000319"  [label="DDG: skb"];
"1000112" -> "1000322"  [label="DDG: skb"];
"1000112" -> "1000379"  [label="DDG: skb"];
"1000322" -> "1000299"  [label="AST: "];
"1000322" -> "1000324"  [label="CFG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000324" -> "1000322"  [label="AST: "];
"1000325" -> "1000322"  [label="CFG: "];
"1000322" -> "1000383"  [label="DDG: dccp_deliver_input_to_ccids(sk, skb)"];
"1000319" -> "1000322"  [label="DDG: sk"];
"1000319" -> "1000322"  [label="DDG: skb"];
"1000319" -> "1000299"  [label="AST: "];
"1000319" -> "1000321"  [label="CFG: "];
"1000320" -> "1000319"  [label="AST: "];
"1000321" -> "1000319"  [label="AST: "];
"1000323" -> "1000319"  [label="CFG: "];
"1000319" -> "1000383"  [label="DDG: dccp_handle_ackvec_processing(sk, skb)"];
"1000113" -> "1000110"  [label="AST: "];
"1000113" -> "1000383"  [label="DDG: dh"];
"1000113" -> "1000303"  [label="DDG: dh"];
"1000114" -> "1000110"  [label="AST: "];
"1000114" -> "1000383"  [label="DDG: len"];
"1000114" -> "1000303"  [label="DDG: len"];
"1000375" -> "1000374"  [label="AST: "];
"1000375" -> "1000376"  [label="CFG: "];
"1000376" -> "1000375"  [label="AST: "];
"1000378" -> "1000375"  [label="CFG: "];
"1000382" -> "1000375"  [label="CFG: "];
"1000375" -> "1000383"  [label="DDG: queued"];
"1000375" -> "1000383"  [label="DDG: !queued"];
"1000133" -> "1000375"  [label="DDG: queued"];
}
