digraph "0_openssl_392fa7a952e97d82eac6958c81ed1e256e6b8ca5@pointer" {
"1000554" [label="(Call,s->version=TLS1_1_VERSION)"];
"1000689" [label="(Call,s->version <= TLS_MAX_VERSION)"];
"1000688" [label="(Call,OPENSSL_assert(s->version <= TLS_MAX_VERSION))"];
"1000696" [label="(Call,s->version < TLS1_2_VERSION)"];
"1000695" [label="(Call,s->version < TLS1_2_VERSION && tls1_suiteb(s))"];
"1000711" [label="(Call,s->version < TLS1_VERSION)"];
"1000709" [label="(Call,FIPS_mode() && (s->version < TLS1_VERSION))"];
"1000723" [label="(Call,ssl_security(s, SSL_SECOP_VERSION, 0, s->version, NULL))"];
"1000722" [label="(Call,!ssl_security(s, SSL_SECOP_VERSION, 0, s->version, NULL))"];
"1000800" [label="(Call,ssl23_read_bytes(s,n+2))"];
"1000798" [label="(Call,j=ssl23_read_bytes(s,n+2))"];
"1000806" [label="(Call,j <= 0)"];
"1000809" [label="(Return,return(j);)"];
"1000811" [label="(Call,ssl3_finish_mac(s, s->packet+2, s->packet_length-2))"];
"1000827" [label="(Call,s->msg_callback(0, SSL2_VERSION, 0, s->packet+2, s->packet_length-2, s, s->msg_callback_arg))"];
"1001117" [label="(Call,ssl_init_wbio_buffer(s,1))"];
"1001116" [label="(Call,!ssl_init_wbio_buffer(s,1))"];
"1001148" [label="(Call,ssl3_setup_read_buffer(s))"];
"1001147" [label="(Call,!ssl3_setup_read_buffer(s))"];
"1001261" [label="(Call,SSL_accept(s))"];
"1001260" [label="(Return,return(SSL_accept(s));)"];
"1001100" [label="(Call,ssl23_get_server_method(s->version))"];
"1001096" [label="(Call,s->method = ssl23_get_server_method(s->version))"];
"1001105" [label="(Call,s->method == NULL)"];
"1001137" [label="(Call,s->s3->rbuf.buf == NULL)"];
"1001151" [label="(Call,s->packet= &(s->s3->rbuf.buf[0]))"];
"1001165" [label="(Call,memcpy(s->packet,buf,n))"];
"1001171" [label="(Call,s->s3->rbuf.left=n)"];
"1001255" [label="(Call,buf != buf_space)"];
"1001258" [label="(Call,OPENSSL_free(buf))"];
"1001265" [label="(Call,buf != buf_space)"];
"1001268" [label="(Call,OPENSSL_free(buf))"];
"1001115" [label="(ControlStructure,if (!ssl_init_wbio_buffer(s,1)))"];
"1000693" [label="(Identifier,TLS_MAX_VERSION)"];
"1000841" [label="(Identifier,s)"];
"1001262" [label="(Identifier,s)"];
"1000809" [label="(Return,return(j);)"];
"1000790" [label="(Call,n < 9)"];
"1001145" [label="(Identifier,NULL)"];
"1001175" [label="(Identifier,s)"];
"1001170" [label="(Identifier,n)"];
"1000805" [label="(ControlStructure,if (j <= 0))"];
"1001138" [label="(Call,s->s3->rbuf.buf)"];
"1001100" [label="(Call,ssl23_get_server_method(s->version))"];
"1001169" [label="(Identifier,buf)"];
"1001101" [label="(Call,s->version)"];
"1000812" [label="(Identifier,s)"];
"1000695" [label="(Call,s->version < TLS1_2_VERSION && tls1_suiteb(s))"];
"1001155" [label="(Call,&(s->s3->rbuf.buf[0]))"];
"1001267" [label="(Identifier,buf_space)"];
"1000696" [label="(Call,s->version < TLS1_2_VERSION)"];
"1001171" [label="(Call,s->s3->rbuf.left=n)"];
"1000727" [label="(Call,s->version)"];
"1001107" [label="(Identifier,s)"];
"1000356" [label="(Call,s->version=TLS1_VERSION)"];
"1001257" [label="(Identifier,buf_space)"];
"1001184" [label="(Identifier,s)"];
"1000726" [label="(Literal,0)"];
"1001151" [label="(Call,s->packet= &(s->s3->rbuf.buf[0]))"];
"1000606" [label="(Call,s->version=SSL3_VERSION)"];
"1001118" [label="(Identifier,s)"];
"1001117" [label="(Call,ssl_init_wbio_buffer(s,1))"];
"1000829" [label="(Identifier,SSL2_VERSION)"];
"1000831" [label="(Call,s->packet+2)"];
"1000688" [label="(Call,OPENSSL_assert(s->version <= TLS_MAX_VERSION))"];
"1001150" [label="(ControlStructure,goto err;)"];
"1000802" [label="(Call,n+2)"];
"1001097" [label="(Call,s->method)"];
"1000730" [label="(Identifier,NULL)"];
"1000148" [label="(MethodParameterIn,SSL *s)"];
"1001136" [label="(ControlStructure,if (s->s3->rbuf.buf == NULL))"];
"1000846" [label="(Identifier,p)"];
"1000553" [label="(Block,)"];
"1001256" [label="(Identifier,buf)"];
"1001258" [label="(Call,OPENSSL_free(buf))"];
"1000215" [label="(Call,memcpy(buf,p,n))"];
"1000801" [label="(Identifier,s)"];
"1000560" [label="(Identifier,type)"];
"1001165" [label="(Call,memcpy(s->packet,buf,n))"];
"1000690" [label="(Call,s->version)"];
"1001260" [label="(Return,return(SSL_accept(s));)"];
"1001268" [label="(Call,OPENSSL_free(buf))"];
"1001269" [label="(Identifier,buf)"];
"1001272" [label="(Literal,1)"];
"1001137" [label="(Call,s->s3->rbuf.buf == NULL)"];
"1000689" [label="(Call,s->version <= TLS_MAX_VERSION)"];
"1000406" [label="(Call,s->version=SSL3_VERSION)"];
"1000149" [label="(Block,)"];
"1000742" [label="(Block,)"];
"1000823" [label="(ControlStructure,if (s->msg_callback))"];
"1000698" [label="(Identifier,s)"];
"1001264" [label="(ControlStructure,if (buf != buf_space))"];
"1000588" [label="(Call,s->version=SSL3_VERSION)"];
"1001266" [label="(Identifier,buf)"];
"1001096" [label="(Call,s->method = ssl23_get_server_method(s->version))"];
"1000722" [label="(Call,!ssl_security(s, SSL_SECOP_VERSION, 0, s->version, NULL))"];
"1000810" [label="(Identifier,j)"];
"1001120" [label="(ControlStructure,goto err;)"];
"1001179" [label="(Identifier,n)"];
"1000836" [label="(Call,s->packet_length-2)"];
"1001116" [label="(Call,!ssl_init_wbio_buffer(s,1))"];
"1000375" [label="(Call,s->version=SSL3_VERSION)"];
"1001119" [label="(Literal,1)"];
"1000531" [label="(Call,s->version=TLS1_2_VERSION)"];
"1001152" [label="(Call,s->packet)"];
"1001254" [label="(ControlStructure,if (buf != buf_space))"];
"1000808" [label="(Literal,0)"];
"1001259" [label="(Identifier,buf)"];
"1001105" [label="(Call,s->method == NULL)"];
"1001104" [label="(ControlStructure,if (s->method == NULL))"];
"1001149" [label="(Identifier,s)"];
"1000167" [label="(Call,n=0)"];
"1000694" [label="(ControlStructure,if (s->version < TLS1_2_VERSION && tls1_suiteb(s)))"];
"1001265" [label="(Call,buf != buf_space)"];
"1000623" [label="(Call,s->version=TLS1_VERSION)"];
"1001148" [label="(Call,ssl3_setup_read_buffer(s))"];
"1001273" [label="(MethodReturn,int)"];
"1000733" [label="(Identifier,SSL_F_SSL23_GET_CLIENT_HELLO)"];
"1000715" [label="(Identifier,TLS1_VERSION)"];
"1000700" [label="(Identifier,TLS1_2_VERSION)"];
"1000724" [label="(Identifier,s)"];
"1000571" [label="(Call,s->version=TLS1_VERSION)"];
"1000800" [label="(Call,ssl23_read_bytes(s,n+2))"];
"1000152" [label="(Call,*buf= &(buf_space[0]))"];
"1000723" [label="(Call,ssl_security(s, SSL_SECOP_VERSION, 0, s->version, NULL))"];
"1001255" [label="(Call,buf != buf_space)"];
"1001153" [label="(Identifier,s)"];
"1001112" [label="(Identifier,SSL_F_SSL23_GET_CLIENT_HELLO)"];
"1000807" [label="(Identifier,j)"];
"1001106" [label="(Call,s->method)"];
"1001172" [label="(Call,s->s3->rbuf.left)"];
"1000709" [label="(Call,FIPS_mode() && (s->version < TLS1_VERSION))"];
"1000739" [label="(Identifier,s)"];
"1000199" [label="(Call,ssl23_read_bytes(s, sizeof buf_space))"];
"1000818" [label="(Call,s->packet_length-2)"];
"1000701" [label="(Call,tls1_suiteb(s))"];
"1000811" [label="(Call,ssl3_finish_mac(s, s->packet+2, s->packet_length-2))"];
"1000710" [label="(Call,FIPS_mode())"];
"1000697" [label="(Call,s->version)"];
"1000721" [label="(ControlStructure,if (!ssl_security(s, SSL_SECOP_VERSION, 0, s->version, NULL)))"];
"1001261" [label="(Call,SSL_accept(s))"];
"1000827" [label="(Call,s->msg_callback(0, SSL2_VERSION, 0, s->packet+2, s->packet_length-2, s, s->msg_callback_arg))"];
"1000558" [label="(Identifier,TLS1_1_VERSION)"];
"1000828" [label="(Literal,0)"];
"1001166" [label="(Call,s->packet)"];
"1000806" [label="(Call,j <= 0)"];
"1000718" [label="(Identifier,SSL_F_SSL23_GET_CLIENT_HELLO)"];
"1001147" [label="(Call,!ssl3_setup_read_buffer(s))"];
"1000712" [label="(Call,s->version)"];
"1001125" [label="(Block,)"];
"1000702" [label="(Identifier,s)"];
"1000312" [label="(Call,s->version=TLS1_2_VERSION)"];
"1000798" [label="(Call,j=ssl23_read_bytes(s,n+2))"];
"1000555" [label="(Call,s->version)"];
"1000708" [label="(ControlStructure,if (FIPS_mode() && (s->version < TLS1_VERSION)))"];
"1000813" [label="(Call,s->packet+2)"];
"1001146" [label="(ControlStructure,if (!ssl3_setup_read_buffer(s)))"];
"1000825" [label="(Identifier,s)"];
"1000711" [label="(Call,s->version < TLS1_VERSION)"];
"1001109" [label="(Identifier,NULL)"];
"1000830" [label="(Literal,0)"];
"1001123" [label="(Identifier,type)"];
"1000799" [label="(Identifier,j)"];
"1001095" [label="(Block,)"];
"1000842" [label="(Call,s->msg_callback_arg)"];
"1000554" [label="(Call,s->version=TLS1_1_VERSION)"];
"1000705" [label="(Identifier,SSL_F_SSL23_GET_CLIENT_HELLO)"];
"1000337" [label="(Call,s->version=TLS1_1_VERSION)"];
"1001167" [label="(Identifier,s)"];
"1000725" [label="(Identifier,SSL_SECOP_VERSION)"];
"1000554" -> "1000553"  [label="AST: "];
"1000554" -> "1000558"  [label="CFG: "];
"1000555" -> "1000554"  [label="AST: "];
"1000558" -> "1000554"  [label="AST: "];
"1000560" -> "1000554"  [label="CFG: "];
"1000554" -> "1001273"  [label="DDG: TLS1_1_VERSION"];
"1000554" -> "1000689"  [label="DDG: s->version"];
"1000689" -> "1000688"  [label="AST: "];
"1000689" -> "1000693"  [label="CFG: "];
"1000690" -> "1000689"  [label="AST: "];
"1000693" -> "1000689"  [label="AST: "];
"1000688" -> "1000689"  [label="CFG: "];
"1000689" -> "1001273"  [label="DDG: TLS_MAX_VERSION"];
"1000689" -> "1000688"  [label="DDG: s->version"];
"1000689" -> "1000688"  [label="DDG: TLS_MAX_VERSION"];
"1000606" -> "1000689"  [label="DDG: s->version"];
"1000375" -> "1000689"  [label="DDG: s->version"];
"1000588" -> "1000689"  [label="DDG: s->version"];
"1000356" -> "1000689"  [label="DDG: s->version"];
"1000312" -> "1000689"  [label="DDG: s->version"];
"1000406" -> "1000689"  [label="DDG: s->version"];
"1000623" -> "1000689"  [label="DDG: s->version"];
"1000337" -> "1000689"  [label="DDG: s->version"];
"1000571" -> "1000689"  [label="DDG: s->version"];
"1000531" -> "1000689"  [label="DDG: s->version"];
"1000689" -> "1000696"  [label="DDG: s->version"];
"1000688" -> "1000149"  [label="AST: "];
"1000698" -> "1000688"  [label="CFG: "];
"1000688" -> "1001273"  [label="DDG: s->version <= TLS_MAX_VERSION"];
"1000688" -> "1001273"  [label="DDG: OPENSSL_assert(s->version <= TLS_MAX_VERSION)"];
"1000696" -> "1000695"  [label="AST: "];
"1000696" -> "1000700"  [label="CFG: "];
"1000697" -> "1000696"  [label="AST: "];
"1000700" -> "1000696"  [label="AST: "];
"1000702" -> "1000696"  [label="CFG: "];
"1000695" -> "1000696"  [label="CFG: "];
"1000696" -> "1001273"  [label="DDG: TLS1_2_VERSION"];
"1000696" -> "1001273"  [label="DDG: s->version"];
"1000696" -> "1000695"  [label="DDG: s->version"];
"1000696" -> "1000695"  [label="DDG: TLS1_2_VERSION"];
"1000696" -> "1000711"  [label="DDG: s->version"];
"1000696" -> "1000723"  [label="DDG: s->version"];
"1000695" -> "1000694"  [label="AST: "];
"1000695" -> "1000701"  [label="CFG: "];
"1000701" -> "1000695"  [label="AST: "];
"1000705" -> "1000695"  [label="CFG: "];
"1000710" -> "1000695"  [label="CFG: "];
"1000695" -> "1001273"  [label="DDG: s->version < TLS1_2_VERSION && tls1_suiteb(s)"];
"1000695" -> "1001273"  [label="DDG: s->version < TLS1_2_VERSION"];
"1000695" -> "1001273"  [label="DDG: tls1_suiteb(s)"];
"1000701" -> "1000695"  [label="DDG: s"];
"1000711" -> "1000709"  [label="AST: "];
"1000711" -> "1000715"  [label="CFG: "];
"1000712" -> "1000711"  [label="AST: "];
"1000715" -> "1000711"  [label="AST: "];
"1000709" -> "1000711"  [label="CFG: "];
"1000711" -> "1001273"  [label="DDG: TLS1_VERSION"];
"1000711" -> "1001273"  [label="DDG: s->version"];
"1000711" -> "1000709"  [label="DDG: s->version"];
"1000711" -> "1000709"  [label="DDG: TLS1_VERSION"];
"1000711" -> "1000723"  [label="DDG: s->version"];
"1000709" -> "1000708"  [label="AST: "];
"1000709" -> "1000710"  [label="CFG: "];
"1000710" -> "1000709"  [label="AST: "];
"1000718" -> "1000709"  [label="CFG: "];
"1000724" -> "1000709"  [label="CFG: "];
"1000709" -> "1001273"  [label="DDG: FIPS_mode() && (s->version < TLS1_VERSION)"];
"1000709" -> "1001273"  [label="DDG: s->version < TLS1_VERSION"];
"1000709" -> "1001273"  [label="DDG: FIPS_mode()"];
"1000723" -> "1000722"  [label="AST: "];
"1000723" -> "1000730"  [label="CFG: "];
"1000724" -> "1000723"  [label="AST: "];
"1000725" -> "1000723"  [label="AST: "];
"1000726" -> "1000723"  [label="AST: "];
"1000727" -> "1000723"  [label="AST: "];
"1000730" -> "1000723"  [label="AST: "];
"1000722" -> "1000723"  [label="CFG: "];
"1000723" -> "1001273"  [label="DDG: s"];
"1000723" -> "1001273"  [label="DDG: NULL"];
"1000723" -> "1001273"  [label="DDG: s->version"];
"1000723" -> "1001273"  [label="DDG: SSL_SECOP_VERSION"];
"1000723" -> "1000722"  [label="DDG: s"];
"1000723" -> "1000722"  [label="DDG: NULL"];
"1000723" -> "1000722"  [label="DDG: 0"];
"1000723" -> "1000722"  [label="DDG: SSL_SECOP_VERSION"];
"1000723" -> "1000722"  [label="DDG: s->version"];
"1000199" -> "1000723"  [label="DDG: s"];
"1000701" -> "1000723"  [label="DDG: s"];
"1000148" -> "1000723"  [label="DDG: s"];
"1000723" -> "1000800"  [label="DDG: s"];
"1000723" -> "1001100"  [label="DDG: s->version"];
"1000723" -> "1001105"  [label="DDG: NULL"];
"1000723" -> "1001117"  [label="DDG: s"];
"1000723" -> "1001261"  [label="DDG: s"];
"1000722" -> "1000721"  [label="AST: "];
"1000733" -> "1000722"  [label="CFG: "];
"1000739" -> "1000722"  [label="CFG: "];
"1000722" -> "1001273"  [label="DDG: !ssl_security(s, SSL_SECOP_VERSION, 0, s->version, NULL)"];
"1000722" -> "1001273"  [label="DDG: ssl_security(s, SSL_SECOP_VERSION, 0, s->version, NULL)"];
"1000800" -> "1000798"  [label="AST: "];
"1000800" -> "1000802"  [label="CFG: "];
"1000801" -> "1000800"  [label="AST: "];
"1000802" -> "1000800"  [label="AST: "];
"1000798" -> "1000800"  [label="CFG: "];
"1000800" -> "1001273"  [label="DDG: n+2"];
"1000800" -> "1001273"  [label="DDG: s"];
"1000800" -> "1000798"  [label="DDG: s"];
"1000800" -> "1000798"  [label="DDG: n+2"];
"1000148" -> "1000800"  [label="DDG: s"];
"1000790" -> "1000800"  [label="DDG: n"];
"1000800" -> "1000811"  [label="DDG: s"];
"1000798" -> "1000742"  [label="AST: "];
"1000799" -> "1000798"  [label="AST: "];
"1000807" -> "1000798"  [label="CFG: "];
"1000798" -> "1001273"  [label="DDG: ssl23_read_bytes(s,n+2)"];
"1000798" -> "1000806"  [label="DDG: j"];
"1000806" -> "1000805"  [label="AST: "];
"1000806" -> "1000808"  [label="CFG: "];
"1000807" -> "1000806"  [label="AST: "];
"1000808" -> "1000806"  [label="AST: "];
"1000810" -> "1000806"  [label="CFG: "];
"1000812" -> "1000806"  [label="CFG: "];
"1000806" -> "1001273"  [label="DDG: j"];
"1000806" -> "1001273"  [label="DDG: j <= 0"];
"1000806" -> "1000809"  [label="DDG: j"];
"1000809" -> "1000805"  [label="AST: "];
"1000809" -> "1000810"  [label="CFG: "];
"1000810" -> "1000809"  [label="AST: "];
"1001273" -> "1000809"  [label="CFG: "];
"1000809" -> "1001273"  [label="DDG: <RET>"];
"1000810" -> "1000809"  [label="DDG: j"];
"1000811" -> "1000742"  [label="AST: "];
"1000811" -> "1000818"  [label="CFG: "];
"1000812" -> "1000811"  [label="AST: "];
"1000813" -> "1000811"  [label="AST: "];
"1000818" -> "1000811"  [label="AST: "];
"1000825" -> "1000811"  [label="CFG: "];
"1000811" -> "1001273"  [label="DDG: s->packet_length-2"];
"1000811" -> "1001273"  [label="DDG: s->packet+2"];
"1000811" -> "1001273"  [label="DDG: ssl3_finish_mac(s, s->packet+2, s->packet_length-2)"];
"1000811" -> "1001273"  [label="DDG: s"];
"1000148" -> "1000811"  [label="DDG: s"];
"1000818" -> "1000811"  [label="DDG: s->packet_length"];
"1000818" -> "1000811"  [label="DDG: 2"];
"1000811" -> "1000827"  [label="DDG: s"];
"1000811" -> "1001117"  [label="DDG: s"];
"1000811" -> "1001261"  [label="DDG: s"];
"1000827" -> "1000823"  [label="AST: "];
"1000827" -> "1000842"  [label="CFG: "];
"1000828" -> "1000827"  [label="AST: "];
"1000829" -> "1000827"  [label="AST: "];
"1000830" -> "1000827"  [label="AST: "];
"1000831" -> "1000827"  [label="AST: "];
"1000836" -> "1000827"  [label="AST: "];
"1000841" -> "1000827"  [label="AST: "];
"1000842" -> "1000827"  [label="AST: "];
"1000846" -> "1000827"  [label="CFG: "];
"1000827" -> "1001273"  [label="DDG: SSL2_VERSION"];
"1000827" -> "1001273"  [label="DDG: s->msg_callback(0, SSL2_VERSION, 0, s->packet+2, s->packet_length-2, s, s->msg_callback_arg)"];
"1000827" -> "1001273"  [label="DDG: s->packet_length-2"];
"1000827" -> "1001273"  [label="DDG: s->msg_callback_arg"];
"1000827" -> "1001273"  [label="DDG: s"];
"1000827" -> "1001273"  [label="DDG: s->packet+2"];
"1000836" -> "1000827"  [label="DDG: s->packet_length"];
"1000836" -> "1000827"  [label="DDG: 2"];
"1000148" -> "1000827"  [label="DDG: s"];
"1000827" -> "1001117"  [label="DDG: s"];
"1000827" -> "1001261"  [label="DDG: s"];
"1001117" -> "1001116"  [label="AST: "];
"1001117" -> "1001119"  [label="CFG: "];
"1001118" -> "1001117"  [label="AST: "];
"1001119" -> "1001117"  [label="AST: "];
"1001116" -> "1001117"  [label="CFG: "];
"1001117" -> "1001273"  [label="DDG: s"];
"1001117" -> "1001116"  [label="DDG: s"];
"1001117" -> "1001116"  [label="DDG: 1"];
"1000148" -> "1001117"  [label="DDG: s"];
"1001117" -> "1001148"  [label="DDG: s"];
"1001117" -> "1001261"  [label="DDG: s"];
"1001116" -> "1001115"  [label="AST: "];
"1001120" -> "1001116"  [label="CFG: "];
"1001123" -> "1001116"  [label="CFG: "];
"1001116" -> "1001273"  [label="DDG: !ssl_init_wbio_buffer(s,1)"];
"1001116" -> "1001273"  [label="DDG: ssl_init_wbio_buffer(s,1)"];
"1001148" -> "1001147"  [label="AST: "];
"1001148" -> "1001149"  [label="CFG: "];
"1001149" -> "1001148"  [label="AST: "];
"1001147" -> "1001148"  [label="CFG: "];
"1001148" -> "1001273"  [label="DDG: s"];
"1001148" -> "1001147"  [label="DDG: s"];
"1000148" -> "1001148"  [label="DDG: s"];
"1001148" -> "1001261"  [label="DDG: s"];
"1001147" -> "1001146"  [label="AST: "];
"1001150" -> "1001147"  [label="CFG: "];
"1001153" -> "1001147"  [label="CFG: "];
"1001147" -> "1001273"  [label="DDG: ssl3_setup_read_buffer(s)"];
"1001147" -> "1001273"  [label="DDG: !ssl3_setup_read_buffer(s)"];
"1001261" -> "1001260"  [label="AST: "];
"1001261" -> "1001262"  [label="CFG: "];
"1001262" -> "1001261"  [label="AST: "];
"1001260" -> "1001261"  [label="CFG: "];
"1001261" -> "1001273"  [label="DDG: s"];
"1001261" -> "1001273"  [label="DDG: SSL_accept(s)"];
"1001261" -> "1001260"  [label="DDG: SSL_accept(s)"];
"1000148" -> "1001261"  [label="DDG: s"];
"1001260" -> "1000149"  [label="AST: "];
"1001273" -> "1001260"  [label="CFG: "];
"1001260" -> "1001273"  [label="DDG: <RET>"];
"1001100" -> "1001096"  [label="AST: "];
"1001100" -> "1001101"  [label="CFG: "];
"1001101" -> "1001100"  [label="AST: "];
"1001096" -> "1001100"  [label="CFG: "];
"1001100" -> "1001273"  [label="DDG: s->version"];
"1001100" -> "1001096"  [label="DDG: s->version"];
"1001096" -> "1001095"  [label="AST: "];
"1001097" -> "1001096"  [label="AST: "];
"1001107" -> "1001096"  [label="CFG: "];
"1001096" -> "1001273"  [label="DDG: ssl23_get_server_method(s->version)"];
"1001096" -> "1001105"  [label="DDG: s->method"];
"1001105" -> "1001104"  [label="AST: "];
"1001105" -> "1001109"  [label="CFG: "];
"1001106" -> "1001105"  [label="AST: "];
"1001109" -> "1001105"  [label="AST: "];
"1001112" -> "1001105"  [label="CFG: "];
"1001118" -> "1001105"  [label="CFG: "];
"1001105" -> "1001273"  [label="DDG: s->method == NULL"];
"1001105" -> "1001273"  [label="DDG: NULL"];
"1001105" -> "1001273"  [label="DDG: s->method"];
"1001105" -> "1001137"  [label="DDG: NULL"];
"1001137" -> "1001136"  [label="AST: "];
"1001137" -> "1001145"  [label="CFG: "];
"1001138" -> "1001137"  [label="AST: "];
"1001145" -> "1001137"  [label="AST: "];
"1001149" -> "1001137"  [label="CFG: "];
"1001153" -> "1001137"  [label="CFG: "];
"1001137" -> "1001273"  [label="DDG: s->s3->rbuf.buf == NULL"];
"1001137" -> "1001273"  [label="DDG: s->s3->rbuf.buf"];
"1001137" -> "1001273"  [label="DDG: NULL"];
"1001137" -> "1001151"  [label="DDG: s->s3->rbuf.buf"];
"1001151" -> "1001125"  [label="AST: "];
"1001151" -> "1001155"  [label="CFG: "];
"1001152" -> "1001151"  [label="AST: "];
"1001155" -> "1001151"  [label="AST: "];
"1001167" -> "1001151"  [label="CFG: "];
"1001151" -> "1001273"  [label="DDG: &(s->s3->rbuf.buf[0])"];
"1001151" -> "1001165"  [label="DDG: s->packet"];
"1001165" -> "1001125"  [label="AST: "];
"1001165" -> "1001170"  [label="CFG: "];
"1001166" -> "1001165"  [label="AST: "];
"1001169" -> "1001165"  [label="AST: "];
"1001170" -> "1001165"  [label="AST: "];
"1001175" -> "1001165"  [label="CFG: "];
"1001165" -> "1001273"  [label="DDG: s->packet"];
"1001165" -> "1001273"  [label="DDG: memcpy(s->packet,buf,n)"];
"1000215" -> "1001165"  [label="DDG: buf"];
"1000215" -> "1001165"  [label="DDG: n"];
"1000152" -> "1001165"  [label="DDG: buf"];
"1000167" -> "1001165"  [label="DDG: n"];
"1000790" -> "1001165"  [label="DDG: n"];
"1001165" -> "1001171"  [label="DDG: n"];
"1001165" -> "1001255"  [label="DDG: buf"];
"1001165" -> "1001265"  [label="DDG: buf"];
"1001171" -> "1001125"  [label="AST: "];
"1001171" -> "1001179"  [label="CFG: "];
"1001172" -> "1001171"  [label="AST: "];
"1001179" -> "1001171"  [label="AST: "];
"1001184" -> "1001171"  [label="CFG: "];
"1001171" -> "1001273"  [label="DDG: s->s3->rbuf.left"];
"1001171" -> "1001273"  [label="DDG: n"];
"1001255" -> "1001254"  [label="AST: "];
"1001255" -> "1001257"  [label="CFG: "];
"1001256" -> "1001255"  [label="AST: "];
"1001257" -> "1001255"  [label="AST: "];
"1001259" -> "1001255"  [label="CFG: "];
"1001262" -> "1001255"  [label="CFG: "];
"1001255" -> "1001273"  [label="DDG: buf_space"];
"1001255" -> "1001273"  [label="DDG: buf != buf_space"];
"1001255" -> "1001273"  [label="DDG: buf"];
"1000215" -> "1001255"  [label="DDG: buf"];
"1000152" -> "1001255"  [label="DDG: buf"];
"1001255" -> "1001258"  [label="DDG: buf"];
"1001258" -> "1001254"  [label="AST: "];
"1001258" -> "1001259"  [label="CFG: "];
"1001259" -> "1001258"  [label="AST: "];
"1001262" -> "1001258"  [label="CFG: "];
"1001258" -> "1001273"  [label="DDG: OPENSSL_free(buf)"];
"1001258" -> "1001273"  [label="DDG: buf"];
"1001265" -> "1001264"  [label="AST: "];
"1001265" -> "1001267"  [label="CFG: "];
"1001266" -> "1001265"  [label="AST: "];
"1001267" -> "1001265"  [label="AST: "];
"1001269" -> "1001265"  [label="CFG: "];
"1001272" -> "1001265"  [label="CFG: "];
"1001265" -> "1001273"  [label="DDG: buf != buf_space"];
"1001265" -> "1001273"  [label="DDG: buf"];
"1001265" -> "1001273"  [label="DDG: buf_space"];
"1000215" -> "1001265"  [label="DDG: buf"];
"1000152" -> "1001265"  [label="DDG: buf"];
"1001265" -> "1001268"  [label="DDG: buf"];
"1001268" -> "1001264"  [label="AST: "];
"1001268" -> "1001269"  [label="CFG: "];
"1001269" -> "1001268"  [label="AST: "];
"1001272" -> "1001268"  [label="CFG: "];
"1001268" -> "1001273"  [label="DDG: OPENSSL_free(buf)"];
"1001268" -> "1001273"  [label="DDG: buf"];
}
