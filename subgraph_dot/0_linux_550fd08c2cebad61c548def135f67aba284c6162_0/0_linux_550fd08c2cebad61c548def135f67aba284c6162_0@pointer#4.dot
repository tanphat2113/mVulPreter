digraph "0_linux_550fd08c2cebad61c548def135f67aba284c6162_0@pointer" {
"1001066" [label="(Call,addr.sa_family = slave_dev->type)"];
"1000343" [label="(Call,bond_dev->type != slave_dev->type)"];
"1000321" [label="(Call,slave_dev->type != ARPHRD_ETHER)"];
"1000283" [label="(Call,pr_debug(\"%s: change device type from %d to %d\n\",\n\t\t\t\t bond_dev->name,\n\t\t\t\t bond_dev->type, slave_dev->type))"];
"1000177" [label="(Call,pr_warning(\"%s: Warning: no link monitoring support for %s\n\",\n\t\t\t   bond_dev->name, slave_dev->name))"];
"1000229" [label="(Call,pr_warning(\"%s: Warning: enslaved VLAN challenged slave %s. Adding VLANs will be blocked as long as %s is part of bond %s\n\",\n\t\t\t\t   bond_dev->name, slave_dev->name,\n\t\t\t\t   slave_dev->name, bond_dev->name))"];
"1000204" [label="(Call,pr_debug(\"%s: NETIF_F_VLAN_CHALLENGED\n\", slave_dev->name))"];
"1000275" [label="(Call,bond_dev->type != slave_dev->type)"];
"1000205" [label="(Literal,\"%s: NETIF_F_VLAN_CHALLENGED\n\")"];
"1000178" [label="(Literal,\"%s: Warning: no link monitoring support for %s\n\")"];
"1000203" [label="(Block,)"];
"1000182" [label="(Call,slave_dev->name)"];
"1000276" [label="(Call,bond_dev->type)"];
"1000285" [label="(Call,bond_dev->name)"];
"1000979" [label="(Call,pr_info(\"Error, %s: master_dev is using netpoll, \"\n\t\t\t\t \"but new slave device does not support netpoll.\n\",\n\t\t\t\t bond_dev->name))"];
"1001015" [label="(Call,pr_info(\"%s: enslaving %s as a%s interface with a%s link.\n\",\n\t\tbond_dev->name, slave_dev->name,\n\t\tbond_is_active_slave(new_slave) ? \"n active\" : \" backup\",\n\t\tnew_slave->link != BOND_LINK_DOWN ? \"n up\" : \" down\"))"];
"1000351" [label="(Call,pr_err(\"%s ether type (%d) is different from other slaves (%d), can not enslave it.\n\",\n\t\t       slave_dev->name,\n\t\t       slave_dev->type, bond_dev->type))"];
"1000320" [label="(ControlStructure,if (slave_dev->type != ARPHRD_ETHER))"];
"1000231" [label="(Call,bond_dev->name)"];
"1000403" [label="(Call,pr_err(\"%s: Error: The slave device specified does not support setting the MAC address, but fail_over_mac is not set to active.\n\",\n\t\t\t       bond_dev->name))"];
"1000204" [label="(Call,pr_debug(\"%s: NETIF_F_VLAN_CHALLENGED\n\", slave_dev->name))"];
"1000228" [label="(Block,)"];
"1000234" [label="(Call,slave_dev->name)"];
"1001070" [label="(Call,slave_dev->type)"];
"1001091" [label="(MethodReturn,int)"];
"1000343" [label="(Call,bond_dev->type != slave_dev->type)"];
"1000213" [label="(Call,pr_err(\"%s: Error: cannot enslave VLAN challenged slave %s on VLAN enabled bond %s\n\",\n\t\t\t       bond_dev->name, slave_dev->name, bond_dev->name))"];
"1000237" [label="(Call,slave_dev->name)"];
"1000282" [label="(Block,)"];
"1000325" [label="(Identifier,ARPHRD_ETHER)"];
"1000211" [label="(Identifier,bond)"];
"1000347" [label="(Call,slave_dev->type)"];
"1000321" [label="(Call,slave_dev->type != ARPHRD_ETHER)"];
"1000370" [label="(Identifier,slave_ops)"];
"1000284" [label="(Literal,\"%s: change device type from %d to %d\n\")"];
"1000177" [label="(Call,pr_warning(\"%s: Warning: no link monitoring support for %s\n\",\n\t\t\t   bond_dev->name, slave_dev->name))"];
"1000711" [label="(Call,pr_warning(\"%s: Warning: MII and ETHTOOL support not available for interface %s, and arp_interval/arp_ip_target module parameters not specified, thus bonding will not detect link failures! see bonding.txt for details.\n\",\n\t\t\t       bond_dev->name, slave_dev->name))"];
"1000188" [label="(Identifier,slave_dev)"];
"1000805" [label="(Call,pr_warning(\"%s: Warning: failed to get speed and duplex from %s, assumed to be 100Mb/sec and Full.\n\",\n\t\t\t   bond_dev->name, new_slave->dev->name))"];
"1000176" [label="(Block,)"];
"1001057" [label="(Block,)"];
"1000240" [label="(Call,bond_dev->name)"];
"1000279" [label="(Call,slave_dev->type)"];
"1000253" [label="(Identifier,slave_dev)"];
"1000291" [label="(Call,slave_dev->type)"];
"1001074" [label="(Identifier,slave_dev)"];
"1001067" [label="(Call,addr.sa_family)"];
"1000352" [label="(Literal,\"%s ether type (%d) is different from other slaves (%d), can not enslave it.\n\")"];
"1000245" [label="(Call,pr_debug(\"%s: ! NETIF_F_VLAN_CHALLENGED\n\", slave_dev->name))"];
"1000322" [label="(Call,slave_dev->type)"];
"1000283" [label="(Call,pr_debug(\"%s: change device type from %d to %d\n\",\n\t\t\t\t bond_dev->name,\n\t\t\t\t bond_dev->type, slave_dev->type))"];
"1000295" [label="(Identifier,res)"];
"1000230" [label="(Literal,\"%s: Warning: enslaved VLAN challenged slave %s. Adding VLANs will be blocked as long as %s is part of bond %s\n\")"];
"1000327" [label="(Identifier,bond_dev)"];
"1000257" [label="(Call,pr_err(\"%s is up. This may be due to an out of date ifenslave.\n\",\n\t\t       slave_dev->name))"];
"1000344" [label="(Call,bond_dev->type)"];
"1001066" [label="(Call,addr.sa_family = slave_dev->type)"];
"1000543" [label="(Call,pr_debug(\"Opening slave %s failed\n\", slave_dev->name))"];
"1000342" [label="(ControlStructure,if (bond_dev->type != slave_dev->type))"];
"1000229" [label="(Call,pr_warning(\"%s: Warning: enslaved VLAN challenged slave %s. Adding VLANs will be blocked as long as %s is part of bond %s\n\",\n\t\t\t\t   bond_dev->name, slave_dev->name,\n\t\t\t\t   slave_dev->name, bond_dev->name))"];
"1000179" [label="(Call,bond_dev->name)"];
"1000726" [label="(Call,pr_warning(\"%s: Warning: can't get link status from interface %s; the network driver associated with this interface does not support MII or ETHTOOL link status reporting, thus miimon has no effect on this interface.\n\",\n\t\t\t\t   bond_dev->name, slave_dev->name))"];
"1000206" [label="(Call,slave_dev->name)"];
"1000332" [label="(Identifier,bond_dev)"];
"1000306" [label="(Call,pr_err(\"%s: refused to change device type\n\",\n\t\t\t\t       bond_dev->name))"];
"1000381" [label="(Call,pr_warning(\"%s: Warning: The first slave device specified does not support setting the MAC address. Setting fail_over_mac to active.\",\n\t\t\t\t   bond_dev->name))"];
"1000275" [label="(Call,bond_dev->type != slave_dev->type)"];
"1000274" [label="(ControlStructure,if (bond_dev->type != slave_dev->type))"];
"1000288" [label="(Call,bond_dev->type)"];
"1000504" [label="(Call,addr.sa_family = slave_dev->type)"];
"1001066" -> "1001057"  [label="AST: "];
"1001066" -> "1001070"  [label="CFG: "];
"1001067" -> "1001066"  [label="AST: "];
"1001070" -> "1001066"  [label="AST: "];
"1001074" -> "1001066"  [label="CFG: "];
"1001066" -> "1001091"  [label="DDG: "];
"1001066" -> "1001091"  [label="DDG: "];
"1000343" -> "1001066"  [label="DDG: "];
"1000321" -> "1001066"  [label="DDG: "];
"1000275" -> "1001066"  [label="DDG: "];
"1000343" -> "1000342"  [label="AST: "];
"1000343" -> "1000347"  [label="CFG: "];
"1000344" -> "1000343"  [label="AST: "];
"1000347" -> "1000343"  [label="AST: "];
"1000352" -> "1000343"  [label="CFG: "];
"1000370" -> "1000343"  [label="CFG: "];
"1000343" -> "1001091"  [label="DDG: "];
"1000343" -> "1001091"  [label="DDG: "];
"1000343" -> "1001091"  [label="DDG: "];
"1000343" -> "1000351"  [label="DDG: "];
"1000343" -> "1000351"  [label="DDG: "];
"1000343" -> "1000504"  [label="DDG: "];
"1000321" -> "1000320"  [label="AST: "];
"1000321" -> "1000325"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000325" -> "1000321"  [label="AST: "];
"1000327" -> "1000321"  [label="CFG: "];
"1000332" -> "1000321"  [label="CFG: "];
"1000321" -> "1001091"  [label="DDG: "];
"1000321" -> "1001091"  [label="DDG: "];
"1000321" -> "1001091"  [label="DDG: "];
"1000283" -> "1000321"  [label="DDG: "];
"1000321" -> "1000504"  [label="DDG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000283" -> "1000291"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000285" -> "1000283"  [label="AST: "];
"1000288" -> "1000283"  [label="AST: "];
"1000291" -> "1000283"  [label="AST: "];
"1000295" -> "1000283"  [label="CFG: "];
"1000283" -> "1001091"  [label="DDG: "];
"1000283" -> "1001091"  [label="DDG: "];
"1000283" -> "1001091"  [label="DDG: "];
"1000283" -> "1001091"  [label="DDG: "];
"1000177" -> "1000283"  [label="DDG: "];
"1000229" -> "1000283"  [label="DDG: "];
"1000275" -> "1000283"  [label="DDG: "];
"1000275" -> "1000283"  [label="DDG: "];
"1000283" -> "1000306"  [label="DDG: "];
"1000283" -> "1000381"  [label="DDG: "];
"1000283" -> "1000403"  [label="DDG: "];
"1000283" -> "1000711"  [label="DDG: "];
"1000283" -> "1000726"  [label="DDG: "];
"1000283" -> "1000805"  [label="DDG: "];
"1000283" -> "1000979"  [label="DDG: "];
"1000283" -> "1001015"  [label="DDG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000177" -> "1000182"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000179" -> "1000177"  [label="AST: "];
"1000182" -> "1000177"  [label="AST: "];
"1000188" -> "1000177"  [label="CFG: "];
"1000177" -> "1001091"  [label="DDG: "];
"1000177" -> "1001091"  [label="DDG: "];
"1000177" -> "1001091"  [label="DDG: "];
"1000177" -> "1000204"  [label="DDG: "];
"1000177" -> "1000213"  [label="DDG: "];
"1000177" -> "1000229"  [label="DDG: "];
"1000177" -> "1000245"  [label="DDG: "];
"1000177" -> "1000381"  [label="DDG: "];
"1000177" -> "1000403"  [label="DDG: "];
"1000177" -> "1000711"  [label="DDG: "];
"1000177" -> "1000726"  [label="DDG: "];
"1000177" -> "1000805"  [label="DDG: "];
"1000177" -> "1000979"  [label="DDG: "];
"1000177" -> "1001015"  [label="DDG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000229" -> "1000240"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000231" -> "1000229"  [label="AST: "];
"1000234" -> "1000229"  [label="AST: "];
"1000237" -> "1000229"  [label="AST: "];
"1000240" -> "1000229"  [label="AST: "];
"1000253" -> "1000229"  [label="CFG: "];
"1000229" -> "1001091"  [label="DDG: "];
"1000229" -> "1001091"  [label="DDG: "];
"1000229" -> "1001091"  [label="DDG: "];
"1000204" -> "1000229"  [label="DDG: "];
"1000229" -> "1000257"  [label="DDG: "];
"1000229" -> "1000351"  [label="DDG: "];
"1000229" -> "1000381"  [label="DDG: "];
"1000229" -> "1000403"  [label="DDG: "];
"1000229" -> "1000543"  [label="DDG: "];
"1000229" -> "1000711"  [label="DDG: "];
"1000229" -> "1000711"  [label="DDG: "];
"1000229" -> "1000726"  [label="DDG: "];
"1000229" -> "1000726"  [label="DDG: "];
"1000229" -> "1000805"  [label="DDG: "];
"1000229" -> "1000979"  [label="DDG: "];
"1000229" -> "1001015"  [label="DDG: "];
"1000229" -> "1001015"  [label="DDG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000204" -> "1000206"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000206" -> "1000204"  [label="AST: "];
"1000211" -> "1000204"  [label="CFG: "];
"1000204" -> "1001091"  [label="DDG: "];
"1000204" -> "1000213"  [label="DDG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000275" -> "1000279"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000279" -> "1000275"  [label="AST: "];
"1000284" -> "1000275"  [label="CFG: "];
"1000370" -> "1000275"  [label="CFG: "];
"1000275" -> "1001091"  [label="DDG: "];
"1000275" -> "1001091"  [label="DDG: "];
"1000275" -> "1001091"  [label="DDG: "];
"1000275" -> "1000504"  [label="DDG: "];
}
