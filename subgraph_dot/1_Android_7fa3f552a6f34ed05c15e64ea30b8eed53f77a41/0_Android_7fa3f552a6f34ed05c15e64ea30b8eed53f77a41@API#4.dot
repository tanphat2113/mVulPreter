digraph "0_Android_7fa3f552a6f34ed05c15e64ea30b8eed53f77a41@API" {
"1000118" [label="(Call,mDataSource->readAt(\n                data_offset, header, sizeof(header)))"];
"1000101" [label="(MethodParameterIn,off64_t data_offset)"];
"1000117" [label="(Call,mDataSource->readAt(\n                data_offset, header, sizeof(header)) < (ssize_t)sizeof(header))"];
"1000210" [label="(Call,mDataSource->readAt(data_offset + 8, mSyncSamples,\n             (size_t)allocSize))"];
"1000209" [label="(Call,mDataSource->readAt(data_offset + 8, mSyncSamples,\n             (size_t)allocSize) != (ssize_t)allocSize)"];
"1000222" [label="(Call,delete mSyncSamples)"];
"1000241" [label="(Call,mSyncSamples[i] == 0)"];
"1000255" [label="(Call,ntohl(mSyncSamples[i]))"];
"1000254" [label="(Call,ntohl(mSyncSamples[i]) - 1)"];
"1000250" [label="(Call,mSyncSamples[i] = ntohl(mSyncSamples[i]) - 1)"];
"1000211" [label="(Call,data_offset + 8)"];
"1000260" [label="(Call,mSyncSampleOffset = data_offset)"];
"1000242" [label="(Call,mSyncSamples[i])"];
"1000198" [label="(Call,!mSyncSamples)"];
"1000250" [label="(Call,mSyncSamples[i] = ntohl(mSyncSamples[i]) - 1)"];
"1000221" [label="(Block,)"];
"1000232" [label="(Identifier,i)"];
"1000223" [label="(Identifier,mSyncSamples)"];
"1000252" [label="(Identifier,mSyncSamples)"];
"1000256" [label="(Call,mSyncSamples[i])"];
"1000212" [label="(Identifier,data_offset)"];
"1000215" [label="(Call,(size_t)allocSize)"];
"1000222" [label="(Call,delete mSyncSamples)"];
"1000225" [label="(Identifier,mSyncSamples)"];
"1000117" [label="(Call,mDataSource->readAt(\n                data_offset, header, sizeof(header)) < (ssize_t)sizeof(header))"];
"1000248" [label="(Literal,\"b/32423862, unexpected zero value in stss\")"];
"1000213" [label="(Literal,8)"];
"1000210" [label="(Call,mDataSource->readAt(data_offset + 8, mSyncSamples,\n             (size_t)allocSize))"];
"1000251" [label="(Call,mSyncSamples[i])"];
"1000120" [label="(Identifier,header)"];
"1000119" [label="(Identifier,data_offset)"];
"1000118" [label="(Call,mDataSource->readAt(\n                data_offset, header, sizeof(header)))"];
"1000101" [label="(MethodParameterIn,off64_t data_offset)"];
"1000214" [label="(Identifier,mSyncSamples)"];
"1000264" [label="(Identifier,mNumSyncSamples)"];
"1000211" [label="(Call,data_offset + 8)"];
"1000129" [label="(Identifier,ERROR_IO)"];
"1000245" [label="(Literal,0)"];
"1000133" [label="(Identifier,header)"];
"1000240" [label="(ControlStructure,if (mSyncSamples[i] == 0))"];
"1000255" [label="(Call,ntohl(mSyncSamples[i]))"];
"1000103" [label="(Block,)"];
"1000116" [label="(ControlStructure,if (mDataSource->readAt(\n                data_offset, header, sizeof(header)) < (ssize_t)sizeof(header)))"];
"1000241" [label="(Call,mSyncSamples[i] == 0)"];
"1000238" [label="(Identifier,i)"];
"1000268" [label="(MethodReturn,status_t)"];
"1000260" [label="(Call,mSyncSampleOffset = data_offset)"];
"1000261" [label="(Identifier,mSyncSampleOffset)"];
"1000218" [label="(Call,(ssize_t)allocSize)"];
"1000209" [label="(Call,mDataSource->readAt(data_offset + 8, mSyncSamples,\n             (size_t)allocSize) != (ssize_t)allocSize)"];
"1000259" [label="(Literal,1)"];
"1000208" [label="(ControlStructure,if (mDataSource->readAt(data_offset + 8, mSyncSamples,\n             (size_t)allocSize) != (ssize_t)allocSize))"];
"1000262" [label="(Identifier,data_offset)"];
"1000121" [label="(Call,sizeof(header))"];
"1000239" [label="(Block,)"];
"1000123" [label="(Call,(ssize_t)sizeof(header))"];
"1000254" [label="(Call,ntohl(mSyncSamples[i]) - 1)"];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000121"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="AST: "];
"1000121" -> "1000118"  [label="AST: "];
"1000124" -> "1000118"  [label="CFG: "];
"1000118" -> "1000268"  [label="DDG: data_offset"];
"1000118" -> "1000117"  [label="DDG: data_offset"];
"1000118" -> "1000117"  [label="DDG: header"];
"1000101" -> "1000118"  [label="DDG: data_offset"];
"1000118" -> "1000210"  [label="DDG: data_offset"];
"1000118" -> "1000211"  [label="DDG: data_offset"];
"1000118" -> "1000260"  [label="DDG: data_offset"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000268"  [label="DDG: data_offset"];
"1000101" -> "1000210"  [label="DDG: data_offset"];
"1000101" -> "1000211"  [label="DDG: data_offset"];
"1000101" -> "1000260"  [label="DDG: data_offset"];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1000123"  [label="CFG: "];
"1000123" -> "1000117"  [label="AST: "];
"1000129" -> "1000117"  [label="CFG: "];
"1000133" -> "1000117"  [label="CFG: "];
"1000117" -> "1000268"  [label="DDG: mDataSource->readAt(\n                data_offset, header, sizeof(header)) < (ssize_t)sizeof(header)"];
"1000117" -> "1000268"  [label="DDG: (ssize_t)sizeof(header)"];
"1000117" -> "1000268"  [label="DDG: mDataSource->readAt(\n                data_offset, header, sizeof(header))"];
"1000210" -> "1000209"  [label="AST: "];
"1000210" -> "1000215"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000214" -> "1000210"  [label="AST: "];
"1000215" -> "1000210"  [label="AST: "];
"1000219" -> "1000210"  [label="CFG: "];
"1000210" -> "1000268"  [label="DDG: mSyncSamples"];
"1000210" -> "1000268"  [label="DDG: data_offset + 8"];
"1000210" -> "1000268"  [label="DDG: (size_t)allocSize"];
"1000210" -> "1000209"  [label="DDG: data_offset + 8"];
"1000210" -> "1000209"  [label="DDG: mSyncSamples"];
"1000210" -> "1000209"  [label="DDG: (size_t)allocSize"];
"1000198" -> "1000210"  [label="DDG: mSyncSamples"];
"1000215" -> "1000210"  [label="DDG: allocSize"];
"1000210" -> "1000222"  [label="DDG: mSyncSamples"];
"1000210" -> "1000241"  [label="DDG: mSyncSamples"];
"1000210" -> "1000255"  [label="DDG: mSyncSamples"];
"1000209" -> "1000208"  [label="AST: "];
"1000209" -> "1000218"  [label="CFG: "];
"1000218" -> "1000209"  [label="AST: "];
"1000223" -> "1000209"  [label="CFG: "];
"1000232" -> "1000209"  [label="CFG: "];
"1000209" -> "1000268"  [label="DDG: mDataSource->readAt(data_offset + 8, mSyncSamples,\n             (size_t)allocSize) != (ssize_t)allocSize"];
"1000209" -> "1000268"  [label="DDG: mDataSource->readAt(data_offset + 8, mSyncSamples,\n             (size_t)allocSize)"];
"1000209" -> "1000268"  [label="DDG: (ssize_t)allocSize"];
"1000218" -> "1000209"  [label="DDG: allocSize"];
"1000222" -> "1000221"  [label="AST: "];
"1000222" -> "1000223"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000225" -> "1000222"  [label="CFG: "];
"1000222" -> "1000268"  [label="DDG: delete mSyncSamples"];
"1000241" -> "1000240"  [label="AST: "];
"1000241" -> "1000245"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000245" -> "1000241"  [label="AST: "];
"1000248" -> "1000241"  [label="CFG: "];
"1000252" -> "1000241"  [label="CFG: "];
"1000241" -> "1000268"  [label="DDG: mSyncSamples[i]"];
"1000241" -> "1000268"  [label="DDG: mSyncSamples[i] == 0"];
"1000250" -> "1000241"  [label="DDG: mSyncSamples[i]"];
"1000241" -> "1000255"  [label="DDG: mSyncSamples[i]"];
"1000255" -> "1000254"  [label="AST: "];
"1000255" -> "1000256"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000259" -> "1000255"  [label="CFG: "];
"1000255" -> "1000254"  [label="DDG: mSyncSamples[i]"];
"1000254" -> "1000250"  [label="AST: "];
"1000254" -> "1000259"  [label="CFG: "];
"1000259" -> "1000254"  [label="AST: "];
"1000250" -> "1000254"  [label="CFG: "];
"1000254" -> "1000268"  [label="DDG: ntohl(mSyncSamples[i])"];
"1000254" -> "1000250"  [label="DDG: ntohl(mSyncSamples[i])"];
"1000254" -> "1000250"  [label="DDG: 1"];
"1000250" -> "1000239"  [label="AST: "];
"1000251" -> "1000250"  [label="AST: "];
"1000238" -> "1000250"  [label="CFG: "];
"1000250" -> "1000268"  [label="DDG: mSyncSamples[i]"];
"1000250" -> "1000268"  [label="DDG: ntohl(mSyncSamples[i]) - 1"];
"1000211" -> "1000213"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000213" -> "1000211"  [label="AST: "];
"1000214" -> "1000211"  [label="CFG: "];
"1000211" -> "1000268"  [label="DDG: data_offset"];
"1000260" -> "1000103"  [label="AST: "];
"1000260" -> "1000262"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000262" -> "1000260"  [label="AST: "];
"1000264" -> "1000260"  [label="CFG: "];
"1000260" -> "1000268"  [label="DDG: data_offset"];
"1000260" -> "1000268"  [label="DDG: mSyncSampleOffset"];
}
