digraph "0_Android_7fa3f552a6f34ed05c15e64ea30b8eed53f77a41@array" {
"1000241" [label="(Call,mSyncSamples[i] == 0)"];
"1000250" [label="(Call,mSyncSamples[i] = ntohl(mSyncSamples[i]) - 1)"];
"1000254" [label="(Call,ntohl(mSyncSamples[i]) - 1)"];
"1000255" [label="(Call,ntohl(mSyncSamples[i]))"];
"1000210" [label="(Call,mDataSource->readAt(data_offset + 8, mSyncSamples,\n             (size_t)allocSize))"];
"1000118" [label="(Call,mDataSource->readAt(\n                data_offset, header, sizeof(header)))"];
"1000101" [label="(MethodParameterIn,off64_t data_offset)"];
"1000198" [label="(Call,!mSyncSamples)"];
"1000215" [label="(Call,(size_t)allocSize)"];
"1000163" [label="(Call,allocSize > kMaxTotalSize)"];
"1000154" [label="(Call,allocSize = (uint64_t)numSyncSamples * sizeof(uint32_t))"];
"1000156" [label="(Call,(uint64_t)numSyncSamples * sizeof(uint32_t))"];
"1000157" [label="(Call,(uint64_t)numSyncSamples)"];
"1000147" [label="(Call,numSyncSamples < 2)"];
"1000139" [label="(Call,numSyncSamples = U32_AT(&header[4]))"];
"1000141" [label="(Call,U32_AT(&header[4]))"];
"1000241" [label="(Call,mSyncSamples[i] == 0)"];
"1000197" [label="(ControlStructure,if (!mSyncSamples))"];
"1000139" [label="(Call,numSyncSamples = U32_AT(&header[4]))"];
"1000242" [label="(Call,mSyncSamples[i])"];
"1000175" [label="(Call,mTotalSize > kMaxTotalSize)"];
"1000250" [label="(Call,mSyncSamples[i] = ntohl(mSyncSamples[i]) - 1)"];
"1000198" [label="(Call,!mSyncSamples)"];
"1000252" [label="(Identifier,mSyncSamples)"];
"1000256" [label="(Call,mSyncSamples[i])"];
"1000212" [label="(Identifier,data_offset)"];
"1000215" [label="(Call,(size_t)allocSize)"];
"1000222" [label="(Call,delete mSyncSamples)"];
"1000155" [label="(Identifier,allocSize)"];
"1000157" [label="(Call,(uint64_t)numSyncSamples)"];
"1000248" [label="(Literal,\"b/32423862, unexpected zero value in stss\")"];
"1000117" [label="(Call,mDataSource->readAt(\n                data_offset, header, sizeof(header)) < (ssize_t)sizeof(header))"];
"1000171" [label="(Call,mTotalSize += allocSize)"];
"1000141" [label="(Call,U32_AT(&header[4]))"];
"1000210" [label="(Call,mDataSource->readAt(data_offset + 8, mSyncSamples,\n             (size_t)allocSize))"];
"1000165" [label="(Identifier,kMaxTotalSize)"];
"1000140" [label="(Identifier,numSyncSamples)"];
"1000251" [label="(Call,mSyncSamples[i])"];
"1000120" [label="(Identifier,header)"];
"1000156" [label="(Call,(uint64_t)numSyncSamples * sizeof(uint32_t))"];
"1000164" [label="(Identifier,allocSize)"];
"1000101" [label="(MethodParameterIn,off64_t data_offset)"];
"1000118" [label="(Call,mDataSource->readAt(\n                data_offset, header, sizeof(header)))"];
"1000119" [label="(Identifier,data_offset)"];
"1000161" [label="(Identifier,uint32_t)"];
"1000214" [label="(Identifier,mSyncSamples)"];
"1000160" [label="(Call,sizeof(uint32_t))"];
"1000147" [label="(Call,numSyncSamples < 2)"];
"1000203" [label="(Call,(unsigned long long)numSyncSamples)"];
"1000148" [label="(Identifier,numSyncSamples)"];
"1000211" [label="(Call,data_offset + 8)"];
"1000245" [label="(Literal,0)"];
"1000217" [label="(Identifier,allocSize)"];
"1000146" [label="(ControlStructure,if (numSyncSamples < 2))"];
"1000240" [label="(ControlStructure,if (mSyncSamples[i] == 0))"];
"1000159" [label="(Identifier,numSyncSamples)"];
"1000142" [label="(Call,&header[4])"];
"1000162" [label="(ControlStructure,if (allocSize > kMaxTotalSize))"];
"1000255" [label="(Call,ntohl(mSyncSamples[i]))"];
"1000168" [label="(Literal,\"Sync sample table size too large.\")"];
"1000103" [label="(Block,)"];
"1000163" [label="(Call,allocSize > kMaxTotalSize)"];
"1000202" [label="(Literal,\"Cannot allocate sync sample table with %llu entries.\")"];
"1000149" [label="(Literal,2)"];
"1000241" [label="(Call,mSyncSamples[i] == 0)"];
"1000238" [label="(Identifier,i)"];
"1000154" [label="(Call,allocSize = (uint64_t)numSyncSamples * sizeof(uint32_t))"];
"1000268" [label="(MethodReturn,status_t)"];
"1000152" [label="(Literal,\"Table of sync samples is empty or has only a single entry!\")"];
"1000260" [label="(Call,mSyncSampleOffset = data_offset)"];
"1000218" [label="(Call,(ssize_t)allocSize)"];
"1000209" [label="(Call,mDataSource->readAt(data_offset + 8, mSyncSamples,\n             (size_t)allocSize) != (ssize_t)allocSize)"];
"1000234" [label="(Call,i < numSyncSamples)"];
"1000259" [label="(Literal,1)"];
"1000172" [label="(Identifier,mTotalSize)"];
"1000199" [label="(Identifier,mSyncSamples)"];
"1000121" [label="(Call,sizeof(header))"];
"1000239" [label="(Block,)"];
"1000181" [label="(Call,(unsigned long long)allocSize)"];
"1000254" [label="(Call,ntohl(mSyncSamples[i]) - 1)"];
"1000241" -> "1000240"  [label="AST: "];
"1000241" -> "1000245"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000245" -> "1000241"  [label="AST: "];
"1000248" -> "1000241"  [label="CFG: "];
"1000252" -> "1000241"  [label="CFG: "];
"1000241" -> "1000268"  [label="DDG: mSyncSamples[i]"];
"1000241" -> "1000268"  [label="DDG: mSyncSamples[i] == 0"];
"1000250" -> "1000241"  [label="DDG: mSyncSamples[i]"];
"1000210" -> "1000241"  [label="DDG: mSyncSamples"];
"1000241" -> "1000255"  [label="DDG: mSyncSamples[i]"];
"1000250" -> "1000239"  [label="AST: "];
"1000250" -> "1000254"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000254" -> "1000250"  [label="AST: "];
"1000238" -> "1000250"  [label="CFG: "];
"1000250" -> "1000268"  [label="DDG: mSyncSamples[i]"];
"1000250" -> "1000268"  [label="DDG: ntohl(mSyncSamples[i]) - 1"];
"1000254" -> "1000250"  [label="DDG: ntohl(mSyncSamples[i])"];
"1000254" -> "1000250"  [label="DDG: 1"];
"1000254" -> "1000259"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000259" -> "1000254"  [label="AST: "];
"1000254" -> "1000268"  [label="DDG: ntohl(mSyncSamples[i])"];
"1000255" -> "1000254"  [label="DDG: mSyncSamples[i]"];
"1000255" -> "1000256"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000259" -> "1000255"  [label="CFG: "];
"1000210" -> "1000255"  [label="DDG: mSyncSamples"];
"1000210" -> "1000209"  [label="AST: "];
"1000210" -> "1000215"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000214" -> "1000210"  [label="AST: "];
"1000215" -> "1000210"  [label="AST: "];
"1000219" -> "1000210"  [label="CFG: "];
"1000210" -> "1000268"  [label="DDG: mSyncSamples"];
"1000210" -> "1000268"  [label="DDG: data_offset + 8"];
"1000210" -> "1000268"  [label="DDG: (size_t)allocSize"];
"1000210" -> "1000209"  [label="DDG: data_offset + 8"];
"1000210" -> "1000209"  [label="DDG: mSyncSamples"];
"1000210" -> "1000209"  [label="DDG: (size_t)allocSize"];
"1000118" -> "1000210"  [label="DDG: data_offset"];
"1000101" -> "1000210"  [label="DDG: data_offset"];
"1000198" -> "1000210"  [label="DDG: mSyncSamples"];
"1000215" -> "1000210"  [label="DDG: allocSize"];
"1000210" -> "1000222"  [label="DDG: mSyncSamples"];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000121"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="AST: "];
"1000121" -> "1000118"  [label="AST: "];
"1000124" -> "1000118"  [label="CFG: "];
"1000118" -> "1000268"  [label="DDG: data_offset"];
"1000118" -> "1000117"  [label="DDG: data_offset"];
"1000118" -> "1000117"  [label="DDG: header"];
"1000101" -> "1000118"  [label="DDG: data_offset"];
"1000118" -> "1000211"  [label="DDG: data_offset"];
"1000118" -> "1000260"  [label="DDG: data_offset"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000268"  [label="DDG: data_offset"];
"1000101" -> "1000211"  [label="DDG: data_offset"];
"1000101" -> "1000260"  [label="DDG: data_offset"];
"1000198" -> "1000197"  [label="AST: "];
"1000198" -> "1000199"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000202" -> "1000198"  [label="CFG: "];
"1000212" -> "1000198"  [label="CFG: "];
"1000198" -> "1000268"  [label="DDG: mSyncSamples"];
"1000198" -> "1000268"  [label="DDG: !mSyncSamples"];
"1000215" -> "1000217"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000217" -> "1000215"  [label="AST: "];
"1000163" -> "1000215"  [label="DDG: allocSize"];
"1000215" -> "1000218"  [label="DDG: allocSize"];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000165"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000165" -> "1000163"  [label="AST: "];
"1000168" -> "1000163"  [label="CFG: "];
"1000172" -> "1000163"  [label="CFG: "];
"1000163" -> "1000268"  [label="DDG: allocSize"];
"1000163" -> "1000268"  [label="DDG: allocSize > kMaxTotalSize"];
"1000163" -> "1000268"  [label="DDG: kMaxTotalSize"];
"1000154" -> "1000163"  [label="DDG: allocSize"];
"1000163" -> "1000171"  [label="DDG: allocSize"];
"1000163" -> "1000175"  [label="DDG: kMaxTotalSize"];
"1000163" -> "1000181"  [label="DDG: allocSize"];
"1000154" -> "1000103"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000156" -> "1000154"  [label="AST: "];
"1000164" -> "1000154"  [label="CFG: "];
"1000154" -> "1000268"  [label="DDG: (uint64_t)numSyncSamples * sizeof(uint32_t)"];
"1000156" -> "1000154"  [label="DDG: (uint64_t)numSyncSamples"];
"1000156" -> "1000160"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000160" -> "1000156"  [label="AST: "];
"1000156" -> "1000268"  [label="DDG: (uint64_t)numSyncSamples"];
"1000157" -> "1000156"  [label="DDG: numSyncSamples"];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000161" -> "1000157"  [label="CFG: "];
"1000157" -> "1000268"  [label="DDG: numSyncSamples"];
"1000147" -> "1000157"  [label="DDG: numSyncSamples"];
"1000157" -> "1000203"  [label="DDG: numSyncSamples"];
"1000157" -> "1000234"  [label="DDG: numSyncSamples"];
"1000147" -> "1000146"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000152" -> "1000147"  [label="CFG: "];
"1000155" -> "1000147"  [label="CFG: "];
"1000147" -> "1000268"  [label="DDG: numSyncSamples < 2"];
"1000139" -> "1000147"  [label="DDG: numSyncSamples"];
"1000139" -> "1000103"  [label="AST: "];
"1000139" -> "1000141"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="AST: "];
"1000148" -> "1000139"  [label="CFG: "];
"1000139" -> "1000268"  [label="DDG: U32_AT(&header[4])"];
"1000141" -> "1000139"  [label="DDG: &header[4]"];
"1000141" -> "1000142"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000141" -> "1000268"  [label="DDG: &header[4]"];
}
