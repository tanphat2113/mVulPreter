digraph "0_linux_f3d3342602f8bcbf37d7c46641cb9bca7618eb1c_26@pointer" {
"1000170" [label="(Call,skb = skb_recv_datagram(sk, flags, flags & MSG_DONTWAIT, &err))"];
"1000172" [label="(Call,skb_recv_datagram(sk, flags, flags & MSG_DONTWAIT, &err))"];
"1000149" [label="(Call,pkt_sk(sk))"];
"1000116" [label="(Call,*sk = sock->sk)"];
"1000175" [label="(Call,flags & MSG_DONTWAIT)"];
"1000157" [label="(Call,flags & MSG_ERRQUEUE)"];
"1000133" [label="(Call,flags & ~(MSG_PEEK|MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE))"];
"1000113" [label="(MethodParameterIn,int flags)"];
"1000135" [label="(Call,~(MSG_PEEK|MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE))"];
"1000136" [label="(Call,MSG_PEEK|MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE)"];
"1000138" [label="(Call,MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE)"];
"1000140" [label="(Call,MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE)"];
"1000142" [label="(Call,MSG_CMSG_COMPAT|MSG_ERRQUEUE)"];
"1000181" [label="(Call,skb == NULL)"];
"1000211" [label="(Call,skb_is_gso(skb))"];
"1000217" [label="(Call,skb_shinfo(skb))"];
"1000215" [label="(Call,*sinfo = skb_shinfo(skb))"];
"1000223" [label="(Call,skb_headlen(skb))"];
"1000219" [label="(Call,vnet_hdr.hdr_len = skb_headlen(skb))"];
"1000310" [label="(Call,skb_checksum_start_offset(skb))"];
"1000306" [label="(Call,vnet_hdr.csum_start = skb_checksum_start_offset(skb))"];
"1000368" [label="(Call,skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000366" [label="(Call,err = skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000525" [label="(Return,return err;)"];
"1000378" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000408" [label="(Call,PACKET_SKB_CB(skb))"];
"1000418" [label="(Call,PACKET_SKB_CB(skb))"];
"1000452" [label="(Call,PACKET_SKB_CB(skb))"];
"1000471" [label="(Call,skb_network_offset(skb))"];
"1000467" [label="(Call,aux.tp_net = skb_network_offset(skb))"];
"1000474" [label="(Call,vlan_tx_tag_present(skb))"];
"1000481" [label="(Call,vlan_tx_tag_get(skb))"];
"1000477" [label="(Call,aux.tp_vlan_tci = vlan_tx_tag_get(skb))"];
"1000521" [label="(Call,skb_free_datagram(sk, skb))"];
"1000426" [label="(Call,pkt_sk(sk))"];
"1000500" [label="(Call,put_cmsg(msg, SOL_PACKET, PACKET_AUXDATA, sizeof(aux), &aux))"];
"1000508" [label="(Call,err = vnet_hdr_len + ((flags&MSG_TRUNC) ? skb->len : copied))"];
"1000510" [label="(Call,vnet_hdr_len + ((flags&MSG_TRUNC) ? skb->len : copied))"];
"1000512" [label="(Call,(flags&MSG_TRUNC) ? skb->len : copied)"];
"1000481" [label="(Call,vlan_tx_tag_get(skb))"];
"1000503" [label="(Identifier,PACKET_AUXDATA)"];
"1000369" [label="(Identifier,skb)"];
"1000451" [label="(Call,PACKET_SKB_CB(skb)->origlen)"];
"1000513" [label="(Call,flags&MSG_TRUNC)"];
"1000371" [label="(Call,msg->msg_iov)"];
"1000125" [label="(Call,vnet_hdr_len = 0)"];
"1000219" [label="(Call,vnet_hdr.hdr_len = skb_headlen(skb))"];
"1000143" [label="(Identifier,MSG_CMSG_COMPAT)"];
"1000420" [label="(FieldIdentifier,sa)"];
"1000492" [label="(Identifier,aux)"];
"1000524" [label="(JumpTarget,out:)"];
"1000354" [label="(Call,copied > len)"];
"1000187" [label="(Call,pkt_sk(sk))"];
"1000417" [label="(Call,PACKET_SKB_CB(skb)->sa)"];
"1000135" [label="(Call,~(MSG_PEEK|MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE))"];
"1000478" [label="(Call,aux.tp_vlan_tci)"];
"1000510" [label="(Call,vnet_hdr_len + ((flags&MSG_TRUNC) ? skb->len : copied))"];
"1000220" [label="(Call,vnet_hdr.hdr_len)"];
"1000111" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000176" [label="(Identifier,flags)"];
"1000314" [label="(Identifier,vnet_hdr)"];
"1000140" [label="(Call,MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE)"];
"1000506" [label="(Call,&aux)"];
"1000512" [label="(Call,(flags&MSG_TRUNC) ? skb->len : copied)"];
"1000114" [label="(Block,)"];
"1000473" [label="(ControlStructure,if (vlan_tx_tag_present(skb)))"];
"1000113" [label="(MethodParameterIn,int flags)"];
"1000516" [label="(Call,skb->len)"];
"1000145" [label="(ControlStructure,goto out;)"];
"1000307" [label="(Call,vnet_hdr.csum_start)"];
"1000300" [label="(Block,)"];
"1000453" [label="(Identifier,skb)"];
"1000419" [label="(Identifier,skb)"];
"1000511" [label="(Identifier,vnet_hdr_len)"];
"1000427" [label="(Identifier,sk)"];
"1000182" [label="(Identifier,skb)"];
"1000384" [label="(Identifier,msg)"];
"1000224" [label="(Identifier,skb)"];
"1000156" [label="(ControlStructure,if (flags & MSG_ERRQUEUE))"];
"1000410" [label="(FieldIdentifier,sa)"];
"1000180" [label="(ControlStructure,if (skb == NULL))"];
"1000334" [label="(Call,memcpy_toiovec(msg->msg_iov, (void *)&vnet_hdr,\n\t\t\t\t     vnet_hdr_len))"];
"1000212" [label="(Identifier,skb)"];
"1000144" [label="(Identifier,MSG_ERRQUEUE)"];
"1000311" [label="(Identifier,skb)"];
"1000218" [label="(Identifier,skb)"];
"1000194" [label="(Call,err = -EINVAL)"];
"1000215" [label="(Call,*sinfo = skb_shinfo(skb))"];
"1000179" [label="(Identifier,err)"];
"1000137" [label="(Identifier,MSG_PEEK)"];
"1000159" [label="(Identifier,MSG_ERRQUEUE)"];
"1000162" [label="(Identifier,err)"];
"1000471" [label="(Call,skb_network_offset(skb))"];
"1000525" [label="(Return,return err;)"];
"1000485" [label="(Identifier,aux)"];
"1000344" [label="(Call,err < 0)"];
"1000175" [label="(Call,flags & MSG_DONTWAIT)"];
"1000408" [label="(Call,PACKET_SKB_CB(skb))"];
"1000409" [label="(Identifier,skb)"];
"1000381" [label="(Identifier,skb)"];
"1000151" [label="(FieldIdentifier,ifindex)"];
"1000177" [label="(Identifier,MSG_DONTWAIT)"];
"1000217" [label="(Call,skb_shinfo(skb))"];
"1000521" [label="(Call,skb_free_datagram(sk, skb))"];
"1000132" [label="(ControlStructure,if (flags & ~(MSG_PEEK|MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE)))"];
"1000527" [label="(MethodReturn,static int)"];
"1000425" [label="(Call,pkt_sk(sk)->auxdata)"];
"1000366" [label="(Call,err = skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000370" [label="(Literal,0)"];
"1000171" [label="(Identifier,skb)"];
"1000157" [label="(Call,flags & MSG_ERRQUEUE)"];
"1000426" [label="(Call,pkt_sk(sk))"];
"1000523" [label="(Identifier,skb)"];
"1000150" [label="(Identifier,sk)"];
"1000476" [label="(Block,)"];
"1000227" [label="(Identifier,vnet_hdr)"];
"1000429" [label="(Block,)"];
"1000306" [label="(Call,vnet_hdr.csum_start = skb_checksum_start_offset(skb))"];
"1000134" [label="(Identifier,flags)"];
"1000502" [label="(Identifier,SOL_PACKET)"];
"1000368" [label="(Call,skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000520" [label="(JumpTarget,out_free:)"];
"1000174" [label="(Identifier,flags)"];
"1000310" [label="(Call,skb_checksum_start_offset(skb))"];
"1000522" [label="(Identifier,sk)"];
"1000141" [label="(Identifier,MSG_TRUNC)"];
"1000452" [label="(Call,PACKET_SKB_CB(skb))"];
"1000188" [label="(Identifier,sk)"];
"1000454" [label="(FieldIdentifier,origlen)"];
"1000184" [label="(ControlStructure,goto out;)"];
"1000378" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000148" [label="(Call,pkt_sk(sk)->ifindex)"];
"1000501" [label="(Identifier,msg)"];
"1000173" [label="(Identifier,sk)"];
"1000361" [label="(Call,msg->msg_flags |= MSG_TRUNC)"];
"1000467" [label="(Call,aux.tp_net = skb_network_offset(skb))"];
"1000223" [label="(Call,skb_headlen(skb))"];
"1000428" [label="(FieldIdentifier,auxdata)"];
"1000158" [label="(Identifier,flags)"];
"1000210" [label="(ControlStructure,if (skb_is_gso(skb)))"];
"1000139" [label="(Identifier,MSG_DONTWAIT)"];
"1000118" [label="(Call,sock->sk)"];
"1000508" [label="(Call,err = vnet_hdr_len + ((flags&MSG_TRUNC) ? skb->len : copied))"];
"1000468" [label="(Call,aux.tp_net)"];
"1000211" [label="(Call,skb_is_gso(skb))"];
"1000367" [label="(Identifier,err)"];
"1000418" [label="(Call,PACKET_SKB_CB(skb))"];
"1000475" [label="(Identifier,skb)"];
"1000161" [label="(Call,err = sock_recv_errqueue(sk, msg, len,\n\t\t\t\t\t SOL_PACKET, PACKET_TX_TIMESTAMP))"];
"1000374" [label="(Identifier,copied)"];
"1000472" [label="(Identifier,skb)"];
"1000178" [label="(Call,&err)"];
"1000376" [label="(Identifier,err)"];
"1000216" [label="(Identifier,sinfo)"];
"1000519" [label="(Identifier,copied)"];
"1000136" [label="(Call,MSG_PEEK|MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE)"];
"1000163" [label="(Call,sock_recv_errqueue(sk, msg, len,\n\t\t\t\t\t SOL_PACKET, PACKET_TX_TIMESTAMP))"];
"1000116" [label="(Call,*sk = sock->sk)"];
"1000128" [label="(Call,err = -EINVAL)"];
"1000291" [label="(Identifier,vnet_hdr)"];
"1000474" [label="(Call,vlan_tx_tag_present(skb))"];
"1000170" [label="(Call,skb = skb_recv_datagram(sk, flags, flags & MSG_DONTWAIT, &err))"];
"1000133" [label="(Call,flags & ~(MSG_PEEK|MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE))"];
"1000221" [label="(Identifier,vnet_hdr)"];
"1000379" [label="(Identifier,msg)"];
"1000126" [label="(Identifier,vnet_hdr_len)"];
"1000142" [label="(Call,MSG_CMSG_COMPAT|MSG_ERRQUEUE)"];
"1000500" [label="(Call,put_cmsg(msg, SOL_PACKET, PACKET_AUXDATA, sizeof(aux), &aux))"];
"1000117" [label="(Identifier,sk)"];
"1000358" [label="(Call,copied = len)"];
"1000183" [label="(Identifier,NULL)"];
"1000380" [label="(Identifier,sk)"];
"1000509" [label="(Identifier,err)"];
"1000407" [label="(Call,PACKET_SKB_CB(skb)->sa)"];
"1000213" [label="(Block,)"];
"1000181" [label="(Call,skb == NULL)"];
"1000482" [label="(Identifier,skb)"];
"1000504" [label="(Call,sizeof(aux))"];
"1000138" [label="(Call,MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE)"];
"1000149" [label="(Call,pkt_sk(sk))"];
"1000479" [label="(Identifier,aux)"];
"1000477" [label="(Call,aux.tp_vlan_tci = vlan_tx_tag_get(skb))"];
"1000526" [label="(Identifier,err)"];
"1000172" [label="(Call,skb_recv_datagram(sk, flags, flags & MSG_DONTWAIT, &err))"];
"1000170" -> "1000114"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000182" -> "1000170"  [label="CFG: "];
"1000170" -> "1000527"  [label="DDG: skb_recv_datagram(sk, flags, flags & MSG_DONTWAIT, &err)"];
"1000172" -> "1000170"  [label="DDG: sk"];
"1000172" -> "1000170"  [label="DDG: flags"];
"1000172" -> "1000170"  [label="DDG: flags & MSG_DONTWAIT"];
"1000172" -> "1000170"  [label="DDG: &err"];
"1000170" -> "1000181"  [label="DDG: skb"];
"1000172" -> "1000178"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000174" -> "1000172"  [label="AST: "];
"1000175" -> "1000172"  [label="AST: "];
"1000178" -> "1000172"  [label="AST: "];
"1000172" -> "1000527"  [label="DDG: &err"];
"1000172" -> "1000527"  [label="DDG: sk"];
"1000172" -> "1000527"  [label="DDG: flags"];
"1000172" -> "1000527"  [label="DDG: flags & MSG_DONTWAIT"];
"1000149" -> "1000172"  [label="DDG: sk"];
"1000175" -> "1000172"  [label="DDG: flags"];
"1000175" -> "1000172"  [label="DDG: MSG_DONTWAIT"];
"1000113" -> "1000172"  [label="DDG: flags"];
"1000172" -> "1000187"  [label="DDG: sk"];
"1000172" -> "1000513"  [label="DDG: flags"];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="CFG: "];
"1000149" -> "1000527"  [label="DDG: sk"];
"1000116" -> "1000149"  [label="DDG: sk"];
"1000149" -> "1000163"  [label="DDG: sk"];
"1000116" -> "1000114"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000126" -> "1000116"  [label="CFG: "];
"1000116" -> "1000527"  [label="DDG: sk"];
"1000116" -> "1000527"  [label="DDG: sock->sk"];
"1000175" -> "1000177"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000177" -> "1000175"  [label="AST: "];
"1000179" -> "1000175"  [label="CFG: "];
"1000175" -> "1000527"  [label="DDG: MSG_DONTWAIT"];
"1000157" -> "1000175"  [label="DDG: flags"];
"1000113" -> "1000175"  [label="DDG: flags"];
"1000138" -> "1000175"  [label="DDG: MSG_DONTWAIT"];
"1000157" -> "1000156"  [label="AST: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000162" -> "1000157"  [label="CFG: "];
"1000171" -> "1000157"  [label="CFG: "];
"1000157" -> "1000527"  [label="DDG: MSG_ERRQUEUE"];
"1000157" -> "1000527"  [label="DDG: flags & MSG_ERRQUEUE"];
"1000157" -> "1000527"  [label="DDG: flags"];
"1000133" -> "1000157"  [label="DDG: flags"];
"1000113" -> "1000157"  [label="DDG: flags"];
"1000142" -> "1000157"  [label="DDG: MSG_ERRQUEUE"];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000145" -> "1000133"  [label="CFG: "];
"1000150" -> "1000133"  [label="CFG: "];
"1000133" -> "1000527"  [label="DDG: flags"];
"1000133" -> "1000527"  [label="DDG: flags & ~(MSG_PEEK|MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE)"];
"1000133" -> "1000527"  [label="DDG: ~(MSG_PEEK|MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE)"];
"1000113" -> "1000133"  [label="DDG: flags"];
"1000135" -> "1000133"  [label="DDG: MSG_PEEK|MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE"];
"1000113" -> "1000108"  [label="AST: "];
"1000113" -> "1000527"  [label="DDG: flags"];
"1000113" -> "1000513"  [label="DDG: flags"];
"1000135" -> "1000136"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000135" -> "1000527"  [label="DDG: MSG_PEEK|MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE"];
"1000136" -> "1000135"  [label="DDG: MSG_PEEK"];
"1000136" -> "1000135"  [label="DDG: MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE"];
"1000136" -> "1000138"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000136" -> "1000527"  [label="DDG: MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE"];
"1000136" -> "1000527"  [label="DDG: MSG_PEEK"];
"1000138" -> "1000136"  [label="DDG: MSG_DONTWAIT"];
"1000138" -> "1000136"  [label="DDG: MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE"];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000138" -> "1000527"  [label="DDG: MSG_DONTWAIT"];
"1000138" -> "1000527"  [label="DDG: MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE"];
"1000140" -> "1000138"  [label="DDG: MSG_TRUNC"];
"1000140" -> "1000138"  [label="DDG: MSG_CMSG_COMPAT|MSG_ERRQUEUE"];
"1000140" -> "1000142"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000142" -> "1000140"  [label="AST: "];
"1000140" -> "1000527"  [label="DDG: MSG_CMSG_COMPAT|MSG_ERRQUEUE"];
"1000140" -> "1000527"  [label="DDG: MSG_TRUNC"];
"1000142" -> "1000140"  [label="DDG: MSG_CMSG_COMPAT"];
"1000142" -> "1000140"  [label="DDG: MSG_ERRQUEUE"];
"1000140" -> "1000361"  [label="DDG: MSG_TRUNC"];
"1000140" -> "1000513"  [label="DDG: MSG_TRUNC"];
"1000142" -> "1000144"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000142" -> "1000527"  [label="DDG: MSG_ERRQUEUE"];
"1000142" -> "1000527"  [label="DDG: MSG_CMSG_COMPAT"];
"1000181" -> "1000180"  [label="AST: "];
"1000181" -> "1000183"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000183" -> "1000181"  [label="AST: "];
"1000184" -> "1000181"  [label="CFG: "];
"1000188" -> "1000181"  [label="CFG: "];
"1000181" -> "1000527"  [label="DDG: skb"];
"1000181" -> "1000527"  [label="DDG: skb == NULL"];
"1000181" -> "1000527"  [label="DDG: NULL"];
"1000181" -> "1000211"  [label="DDG: skb"];
"1000181" -> "1000368"  [label="DDG: skb"];
"1000181" -> "1000521"  [label="DDG: skb"];
"1000211" -> "1000210"  [label="AST: "];
"1000211" -> "1000212"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000216" -> "1000211"  [label="CFG: "];
"1000291" -> "1000211"  [label="CFG: "];
"1000211" -> "1000527"  [label="DDG: skb_is_gso(skb)"];
"1000211" -> "1000217"  [label="DDG: skb"];
"1000211" -> "1000310"  [label="DDG: skb"];
"1000211" -> "1000368"  [label="DDG: skb"];
"1000211" -> "1000521"  [label="DDG: skb"];
"1000217" -> "1000215"  [label="AST: "];
"1000217" -> "1000218"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000215" -> "1000217"  [label="CFG: "];
"1000217" -> "1000215"  [label="DDG: skb"];
"1000217" -> "1000223"  [label="DDG: skb"];
"1000215" -> "1000213"  [label="AST: "];
"1000216" -> "1000215"  [label="AST: "];
"1000221" -> "1000215"  [label="CFG: "];
"1000215" -> "1000527"  [label="DDG: sinfo"];
"1000215" -> "1000527"  [label="DDG: skb_shinfo(skb)"];
"1000223" -> "1000219"  [label="AST: "];
"1000223" -> "1000224"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000219" -> "1000223"  [label="CFG: "];
"1000223" -> "1000219"  [label="DDG: skb"];
"1000223" -> "1000310"  [label="DDG: skb"];
"1000223" -> "1000368"  [label="DDG: skb"];
"1000223" -> "1000521"  [label="DDG: skb"];
"1000219" -> "1000213"  [label="AST: "];
"1000220" -> "1000219"  [label="AST: "];
"1000227" -> "1000219"  [label="CFG: "];
"1000219" -> "1000527"  [label="DDG: skb_headlen(skb)"];
"1000219" -> "1000527"  [label="DDG: vnet_hdr.hdr_len"];
"1000310" -> "1000306"  [label="AST: "];
"1000310" -> "1000311"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000306" -> "1000310"  [label="CFG: "];
"1000310" -> "1000306"  [label="DDG: skb"];
"1000310" -> "1000368"  [label="DDG: skb"];
"1000310" -> "1000521"  [label="DDG: skb"];
"1000306" -> "1000300"  [label="AST: "];
"1000307" -> "1000306"  [label="AST: "];
"1000314" -> "1000306"  [label="CFG: "];
"1000306" -> "1000527"  [label="DDG: skb_checksum_start_offset(skb)"];
"1000306" -> "1000527"  [label="DDG: vnet_hdr.csum_start"];
"1000368" -> "1000366"  [label="AST: "];
"1000368" -> "1000374"  [label="CFG: "];
"1000369" -> "1000368"  [label="AST: "];
"1000370" -> "1000368"  [label="AST: "];
"1000371" -> "1000368"  [label="AST: "];
"1000374" -> "1000368"  [label="AST: "];
"1000366" -> "1000368"  [label="CFG: "];
"1000368" -> "1000527"  [label="DDG: copied"];
"1000368" -> "1000527"  [label="DDG: msg->msg_iov"];
"1000368" -> "1000366"  [label="DDG: skb"];
"1000368" -> "1000366"  [label="DDG: 0"];
"1000368" -> "1000366"  [label="DDG: msg->msg_iov"];
"1000368" -> "1000366"  [label="DDG: copied"];
"1000334" -> "1000368"  [label="DDG: msg->msg_iov"];
"1000354" -> "1000368"  [label="DDG: copied"];
"1000358" -> "1000368"  [label="DDG: copied"];
"1000368" -> "1000378"  [label="DDG: skb"];
"1000368" -> "1000508"  [label="DDG: copied"];
"1000368" -> "1000510"  [label="DDG: copied"];
"1000368" -> "1000512"  [label="DDG: copied"];
"1000368" -> "1000521"  [label="DDG: skb"];
"1000366" -> "1000114"  [label="AST: "];
"1000367" -> "1000366"  [label="AST: "];
"1000376" -> "1000366"  [label="CFG: "];
"1000366" -> "1000527"  [label="DDG: skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied)"];
"1000366" -> "1000527"  [label="DDG: err"];
"1000366" -> "1000525"  [label="DDG: err"];
"1000525" -> "1000114"  [label="AST: "];
"1000525" -> "1000526"  [label="CFG: "];
"1000526" -> "1000525"  [label="AST: "];
"1000527" -> "1000525"  [label="CFG: "];
"1000525" -> "1000527"  [label="DDG: <RET>"];
"1000526" -> "1000525"  [label="DDG: err"];
"1000508" -> "1000525"  [label="DDG: err"];
"1000194" -> "1000525"  [label="DDG: err"];
"1000128" -> "1000525"  [label="DDG: err"];
"1000344" -> "1000525"  [label="DDG: err"];
"1000161" -> "1000525"  [label="DDG: err"];
"1000378" -> "1000114"  [label="AST: "];
"1000378" -> "1000381"  [label="CFG: "];
"1000379" -> "1000378"  [label="AST: "];
"1000380" -> "1000378"  [label="AST: "];
"1000381" -> "1000378"  [label="AST: "];
"1000384" -> "1000378"  [label="CFG: "];
"1000378" -> "1000527"  [label="DDG: msg"];
"1000378" -> "1000527"  [label="DDG: sock_recv_ts_and_drops(msg, sk, skb)"];
"1000111" -> "1000378"  [label="DDG: msg"];
"1000187" -> "1000378"  [label="DDG: sk"];
"1000378" -> "1000408"  [label="DDG: skb"];
"1000378" -> "1000418"  [label="DDG: skb"];
"1000378" -> "1000426"  [label="DDG: sk"];
"1000378" -> "1000452"  [label="DDG: skb"];
"1000378" -> "1000500"  [label="DDG: msg"];
"1000378" -> "1000521"  [label="DDG: skb"];
"1000408" -> "1000407"  [label="AST: "];
"1000408" -> "1000409"  [label="CFG: "];
"1000409" -> "1000408"  [label="AST: "];
"1000410" -> "1000408"  [label="CFG: "];
"1000408" -> "1000418"  [label="DDG: skb"];
"1000418" -> "1000417"  [label="AST: "];
"1000418" -> "1000419"  [label="CFG: "];
"1000419" -> "1000418"  [label="AST: "];
"1000420" -> "1000418"  [label="CFG: "];
"1000418" -> "1000452"  [label="DDG: skb"];
"1000418" -> "1000521"  [label="DDG: skb"];
"1000452" -> "1000451"  [label="AST: "];
"1000452" -> "1000453"  [label="CFG: "];
"1000453" -> "1000452"  [label="AST: "];
"1000454" -> "1000452"  [label="CFG: "];
"1000452" -> "1000471"  [label="DDG: skb"];
"1000471" -> "1000467"  [label="AST: "];
"1000471" -> "1000472"  [label="CFG: "];
"1000472" -> "1000471"  [label="AST: "];
"1000467" -> "1000471"  [label="CFG: "];
"1000471" -> "1000467"  [label="DDG: skb"];
"1000471" -> "1000474"  [label="DDG: skb"];
"1000467" -> "1000429"  [label="AST: "];
"1000468" -> "1000467"  [label="AST: "];
"1000475" -> "1000467"  [label="CFG: "];
"1000467" -> "1000527"  [label="DDG: aux.tp_net"];
"1000467" -> "1000527"  [label="DDG: skb_network_offset(skb)"];
"1000474" -> "1000473"  [label="AST: "];
"1000474" -> "1000475"  [label="CFG: "];
"1000475" -> "1000474"  [label="AST: "];
"1000479" -> "1000474"  [label="CFG: "];
"1000492" -> "1000474"  [label="CFG: "];
"1000474" -> "1000527"  [label="DDG: vlan_tx_tag_present(skb)"];
"1000474" -> "1000481"  [label="DDG: skb"];
"1000474" -> "1000521"  [label="DDG: skb"];
"1000481" -> "1000477"  [label="AST: "];
"1000481" -> "1000482"  [label="CFG: "];
"1000482" -> "1000481"  [label="AST: "];
"1000477" -> "1000481"  [label="CFG: "];
"1000481" -> "1000477"  [label="DDG: skb"];
"1000481" -> "1000521"  [label="DDG: skb"];
"1000477" -> "1000476"  [label="AST: "];
"1000478" -> "1000477"  [label="AST: "];
"1000485" -> "1000477"  [label="CFG: "];
"1000477" -> "1000527"  [label="DDG: vlan_tx_tag_get(skb)"];
"1000477" -> "1000527"  [label="DDG: aux.tp_vlan_tci"];
"1000521" -> "1000114"  [label="AST: "];
"1000521" -> "1000523"  [label="CFG: "];
"1000522" -> "1000521"  [label="AST: "];
"1000523" -> "1000521"  [label="AST: "];
"1000524" -> "1000521"  [label="CFG: "];
"1000521" -> "1000527"  [label="DDG: sk"];
"1000521" -> "1000527"  [label="DDG: skb_free_datagram(sk, skb)"];
"1000521" -> "1000527"  [label="DDG: skb"];
"1000187" -> "1000521"  [label="DDG: sk"];
"1000426" -> "1000521"  [label="DDG: sk"];
"1000426" -> "1000425"  [label="AST: "];
"1000426" -> "1000427"  [label="CFG: "];
"1000427" -> "1000426"  [label="AST: "];
"1000428" -> "1000426"  [label="CFG: "];
"1000500" -> "1000429"  [label="AST: "];
"1000500" -> "1000506"  [label="CFG: "];
"1000501" -> "1000500"  [label="AST: "];
"1000502" -> "1000500"  [label="AST: "];
"1000503" -> "1000500"  [label="AST: "];
"1000504" -> "1000500"  [label="AST: "];
"1000506" -> "1000500"  [label="AST: "];
"1000509" -> "1000500"  [label="CFG: "];
"1000500" -> "1000527"  [label="DDG: &aux"];
"1000500" -> "1000527"  [label="DDG: PACKET_AUXDATA"];
"1000500" -> "1000527"  [label="DDG: SOL_PACKET"];
"1000500" -> "1000527"  [label="DDG: put_cmsg(msg, SOL_PACKET, PACKET_AUXDATA, sizeof(aux), &aux)"];
"1000500" -> "1000527"  [label="DDG: msg"];
"1000111" -> "1000500"  [label="DDG: msg"];
"1000508" -> "1000114"  [label="AST: "];
"1000508" -> "1000510"  [label="CFG: "];
"1000509" -> "1000508"  [label="AST: "];
"1000510" -> "1000508"  [label="AST: "];
"1000520" -> "1000508"  [label="CFG: "];
"1000508" -> "1000527"  [label="DDG: err"];
"1000508" -> "1000527"  [label="DDG: vnet_hdr_len + ((flags&MSG_TRUNC) ? skb->len : copied)"];
"1000125" -> "1000508"  [label="DDG: vnet_hdr_len"];
"1000334" -> "1000508"  [label="DDG: vnet_hdr_len"];
"1000510" -> "1000512"  [label="CFG: "];
"1000511" -> "1000510"  [label="AST: "];
"1000512" -> "1000510"  [label="AST: "];
"1000510" -> "1000527"  [label="DDG: vnet_hdr_len"];
"1000510" -> "1000527"  [label="DDG: (flags&MSG_TRUNC) ? skb->len : copied"];
"1000125" -> "1000510"  [label="DDG: vnet_hdr_len"];
"1000334" -> "1000510"  [label="DDG: vnet_hdr_len"];
"1000512" -> "1000516"  [label="CFG: "];
"1000512" -> "1000519"  [label="CFG: "];
"1000513" -> "1000512"  [label="AST: "];
"1000516" -> "1000512"  [label="AST: "];
"1000519" -> "1000512"  [label="AST: "];
"1000512" -> "1000527"  [label="DDG: flags&MSG_TRUNC"];
"1000512" -> "1000527"  [label="DDG: copied"];
"1000512" -> "1000527"  [label="DDG: skb->len"];
}
