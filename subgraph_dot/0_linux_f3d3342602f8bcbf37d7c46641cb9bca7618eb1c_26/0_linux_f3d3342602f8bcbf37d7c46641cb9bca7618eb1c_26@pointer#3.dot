digraph "0_linux_f3d3342602f8bcbf37d7c46641cb9bca7618eb1c_26@pointer" {
"1000348" [label="(Call,copied = skb->len)"];
"1000354" [label="(Call,copied > len)"];
"1000358" [label="(Call,copied = len)"];
"1000368" [label="(Call,skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000366" [label="(Call,err = skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000525" [label="(Return,return err;)"];
"1000378" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000408" [label="(Call,PACKET_SKB_CB(skb))"];
"1000418" [label="(Call,PACKET_SKB_CB(skb))"];
"1000452" [label="(Call,PACKET_SKB_CB(skb))"];
"1000471" [label="(Call,skb_network_offset(skb))"];
"1000467" [label="(Call,aux.tp_net = skb_network_offset(skb))"];
"1000474" [label="(Call,vlan_tx_tag_present(skb))"];
"1000481" [label="(Call,vlan_tx_tag_get(skb))"];
"1000477" [label="(Call,aux.tp_vlan_tci = vlan_tx_tag_get(skb))"];
"1000521" [label="(Call,skb_free_datagram(sk, skb))"];
"1000426" [label="(Call,pkt_sk(sk))"];
"1000500" [label="(Call,put_cmsg(msg, SOL_PACKET, PACKET_AUXDATA, sizeof(aux), &aux))"];
"1000508" [label="(Call,err = vnet_hdr_len + ((flags&MSG_TRUNC) ? skb->len : copied))"];
"1000510" [label="(Call,vnet_hdr_len + ((flags&MSG_TRUNC) ? skb->len : copied))"];
"1000512" [label="(Call,(flags&MSG_TRUNC) ? skb->len : copied)"];
"1000481" [label="(Call,vlan_tx_tag_get(skb))"];
"1000503" [label="(Identifier,PACKET_AUXDATA)"];
"1000369" [label="(Identifier,skb)"];
"1000451" [label="(Call,PACKET_SKB_CB(skb)->origlen)"];
"1000371" [label="(Call,msg->msg_iov)"];
"1000513" [label="(Call,flags&MSG_TRUNC)"];
"1000353" [label="(ControlStructure,if (copied > len))"];
"1000125" [label="(Call,vnet_hdr_len = 0)"];
"1000420" [label="(FieldIdentifier,sa)"];
"1000350" [label="(Call,skb->len)"];
"1000492" [label="(Identifier,aux)"];
"1000524" [label="(JumpTarget,out:)"];
"1000354" [label="(Call,copied > len)"];
"1000187" [label="(Call,pkt_sk(sk))"];
"1000417" [label="(Call,PACKET_SKB_CB(skb)->sa)"];
"1000478" [label="(Call,aux.tp_vlan_tci)"];
"1000510" [label="(Call,vnet_hdr_len + ((flags&MSG_TRUNC) ? skb->len : copied))"];
"1000111" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000349" [label="(Identifier,copied)"];
"1000506" [label="(Call,&aux)"];
"1000512" [label="(Call,(flags&MSG_TRUNC) ? skb->len : copied)"];
"1000114" [label="(Block,)"];
"1000473" [label="(ControlStructure,if (vlan_tx_tag_present(skb)))"];
"1000516" [label="(Call,skb->len)"];
"1000453" [label="(Identifier,skb)"];
"1000419" [label="(Identifier,skb)"];
"1000511" [label="(Identifier,vnet_hdr_len)"];
"1000427" [label="(Identifier,sk)"];
"1000384" [label="(Identifier,msg)"];
"1000410" [label="(FieldIdentifier,sa)"];
"1000334" [label="(Call,memcpy_toiovec(msg->msg_iov, (void *)&vnet_hdr,\n\t\t\t\t     vnet_hdr_len))"];
"1000194" [label="(Call,err = -EINVAL)"];
"1000471" [label="(Call,skb_network_offset(skb))"];
"1000525" [label="(Return,return err;)"];
"1000485" [label="(Identifier,aux)"];
"1000344" [label="(Call,err < 0)"];
"1000408" [label="(Call,PACKET_SKB_CB(skb))"];
"1000409" [label="(Identifier,skb)"];
"1000381" [label="(Identifier,skb)"];
"1000521" [label="(Call,skb_free_datagram(sk, skb))"];
"1000527" [label="(MethodReturn,static int)"];
"1000425" [label="(Call,pkt_sk(sk)->auxdata)"];
"1000366" [label="(Call,err = skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000370" [label="(Literal,0)"];
"1000426" [label="(Call,pkt_sk(sk))"];
"1000523" [label="(Identifier,skb)"];
"1000476" [label="(Block,)"];
"1000429" [label="(Block,)"];
"1000348" [label="(Call,copied = skb->len)"];
"1000502" [label="(Identifier,SOL_PACKET)"];
"1000368" [label="(Call,skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000520" [label="(JumpTarget,out_free:)"];
"1000310" [label="(Call,skb_checksum_start_offset(skb))"];
"1000522" [label="(Identifier,sk)"];
"1000359" [label="(Identifier,copied)"];
"1000452" [label="(Call,PACKET_SKB_CB(skb))"];
"1000454" [label="(FieldIdentifier,origlen)"];
"1000360" [label="(Identifier,len)"];
"1000378" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000501" [label="(Identifier,msg)"];
"1000467" [label="(Call,aux.tp_net = skb_network_offset(skb))"];
"1000223" [label="(Call,skb_headlen(skb))"];
"1000428" [label="(FieldIdentifier,auxdata)"];
"1000508" [label="(Call,err = vnet_hdr_len + ((flags&MSG_TRUNC) ? skb->len : copied))"];
"1000357" [label="(Block,)"];
"1000468" [label="(Call,aux.tp_net)"];
"1000367" [label="(Identifier,err)"];
"1000211" [label="(Call,skb_is_gso(skb))"];
"1000418" [label="(Call,PACKET_SKB_CB(skb))"];
"1000363" [label="(Identifier,msg)"];
"1000112" [label="(MethodParameterIn,size_t len)"];
"1000475" [label="(Identifier,skb)"];
"1000161" [label="(Call,err = sock_recv_errqueue(sk, msg, len,\n\t\t\t\t\t SOL_PACKET, PACKET_TX_TIMESTAMP))"];
"1000374" [label="(Identifier,copied)"];
"1000472" [label="(Identifier,skb)"];
"1000376" [label="(Identifier,err)"];
"1000519" [label="(Identifier,copied)"];
"1000207" [label="(Call,len -= vnet_hdr_len)"];
"1000128" [label="(Call,err = -EINVAL)"];
"1000474" [label="(Call,vlan_tx_tag_present(skb))"];
"1000379" [label="(Identifier,msg)"];
"1000500" [label="(Call,put_cmsg(msg, SOL_PACKET, PACKET_AUXDATA, sizeof(aux), &aux))"];
"1000358" [label="(Call,copied = len)"];
"1000355" [label="(Identifier,copied)"];
"1000380" [label="(Identifier,sk)"];
"1000509" [label="(Identifier,err)"];
"1000407" [label="(Call,PACKET_SKB_CB(skb)->sa)"];
"1000181" [label="(Call,skb == NULL)"];
"1000482" [label="(Identifier,skb)"];
"1000504" [label="(Call,sizeof(aux))"];
"1000479" [label="(Identifier,aux)"];
"1000477" [label="(Call,aux.tp_vlan_tci = vlan_tx_tag_get(skb))"];
"1000526" [label="(Identifier,err)"];
"1000356" [label="(Identifier,len)"];
"1000348" -> "1000114"  [label="AST: "];
"1000348" -> "1000350"  [label="CFG: "];
"1000349" -> "1000348"  [label="AST: "];
"1000350" -> "1000348"  [label="AST: "];
"1000355" -> "1000348"  [label="CFG: "];
"1000348" -> "1000527"  [label="DDG: skb->len"];
"1000348" -> "1000354"  [label="DDG: copied"];
"1000354" -> "1000353"  [label="AST: "];
"1000354" -> "1000356"  [label="CFG: "];
"1000355" -> "1000354"  [label="AST: "];
"1000356" -> "1000354"  [label="AST: "];
"1000359" -> "1000354"  [label="CFG: "];
"1000367" -> "1000354"  [label="CFG: "];
"1000354" -> "1000527"  [label="DDG: len"];
"1000354" -> "1000527"  [label="DDG: copied > len"];
"1000207" -> "1000354"  [label="DDG: len"];
"1000112" -> "1000354"  [label="DDG: len"];
"1000354" -> "1000358"  [label="DDG: len"];
"1000354" -> "1000368"  [label="DDG: copied"];
"1000358" -> "1000357"  [label="AST: "];
"1000358" -> "1000360"  [label="CFG: "];
"1000359" -> "1000358"  [label="AST: "];
"1000360" -> "1000358"  [label="AST: "];
"1000363" -> "1000358"  [label="CFG: "];
"1000358" -> "1000527"  [label="DDG: len"];
"1000112" -> "1000358"  [label="DDG: len"];
"1000358" -> "1000368"  [label="DDG: copied"];
"1000368" -> "1000366"  [label="AST: "];
"1000368" -> "1000374"  [label="CFG: "];
"1000369" -> "1000368"  [label="AST: "];
"1000370" -> "1000368"  [label="AST: "];
"1000371" -> "1000368"  [label="AST: "];
"1000374" -> "1000368"  [label="AST: "];
"1000366" -> "1000368"  [label="CFG: "];
"1000368" -> "1000527"  [label="DDG: copied"];
"1000368" -> "1000527"  [label="DDG: msg->msg_iov"];
"1000368" -> "1000366"  [label="DDG: skb"];
"1000368" -> "1000366"  [label="DDG: 0"];
"1000368" -> "1000366"  [label="DDG: msg->msg_iov"];
"1000368" -> "1000366"  [label="DDG: copied"];
"1000181" -> "1000368"  [label="DDG: skb"];
"1000310" -> "1000368"  [label="DDG: skb"];
"1000211" -> "1000368"  [label="DDG: skb"];
"1000223" -> "1000368"  [label="DDG: skb"];
"1000334" -> "1000368"  [label="DDG: msg->msg_iov"];
"1000368" -> "1000378"  [label="DDG: skb"];
"1000368" -> "1000508"  [label="DDG: copied"];
"1000368" -> "1000510"  [label="DDG: copied"];
"1000368" -> "1000512"  [label="DDG: copied"];
"1000368" -> "1000521"  [label="DDG: skb"];
"1000366" -> "1000114"  [label="AST: "];
"1000367" -> "1000366"  [label="AST: "];
"1000376" -> "1000366"  [label="CFG: "];
"1000366" -> "1000527"  [label="DDG: skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied)"];
"1000366" -> "1000527"  [label="DDG: err"];
"1000366" -> "1000525"  [label="DDG: err"];
"1000525" -> "1000114"  [label="AST: "];
"1000525" -> "1000526"  [label="CFG: "];
"1000526" -> "1000525"  [label="AST: "];
"1000527" -> "1000525"  [label="CFG: "];
"1000525" -> "1000527"  [label="DDG: <RET>"];
"1000526" -> "1000525"  [label="DDG: err"];
"1000508" -> "1000525"  [label="DDG: err"];
"1000194" -> "1000525"  [label="DDG: err"];
"1000128" -> "1000525"  [label="DDG: err"];
"1000344" -> "1000525"  [label="DDG: err"];
"1000161" -> "1000525"  [label="DDG: err"];
"1000378" -> "1000114"  [label="AST: "];
"1000378" -> "1000381"  [label="CFG: "];
"1000379" -> "1000378"  [label="AST: "];
"1000380" -> "1000378"  [label="AST: "];
"1000381" -> "1000378"  [label="AST: "];
"1000384" -> "1000378"  [label="CFG: "];
"1000378" -> "1000527"  [label="DDG: msg"];
"1000378" -> "1000527"  [label="DDG: sock_recv_ts_and_drops(msg, sk, skb)"];
"1000111" -> "1000378"  [label="DDG: msg"];
"1000187" -> "1000378"  [label="DDG: sk"];
"1000378" -> "1000408"  [label="DDG: skb"];
"1000378" -> "1000418"  [label="DDG: skb"];
"1000378" -> "1000426"  [label="DDG: sk"];
"1000378" -> "1000452"  [label="DDG: skb"];
"1000378" -> "1000500"  [label="DDG: msg"];
"1000378" -> "1000521"  [label="DDG: skb"];
"1000408" -> "1000407"  [label="AST: "];
"1000408" -> "1000409"  [label="CFG: "];
"1000409" -> "1000408"  [label="AST: "];
"1000410" -> "1000408"  [label="CFG: "];
"1000408" -> "1000418"  [label="DDG: skb"];
"1000418" -> "1000417"  [label="AST: "];
"1000418" -> "1000419"  [label="CFG: "];
"1000419" -> "1000418"  [label="AST: "];
"1000420" -> "1000418"  [label="CFG: "];
"1000418" -> "1000452"  [label="DDG: skb"];
"1000418" -> "1000521"  [label="DDG: skb"];
"1000452" -> "1000451"  [label="AST: "];
"1000452" -> "1000453"  [label="CFG: "];
"1000453" -> "1000452"  [label="AST: "];
"1000454" -> "1000452"  [label="CFG: "];
"1000452" -> "1000471"  [label="DDG: skb"];
"1000471" -> "1000467"  [label="AST: "];
"1000471" -> "1000472"  [label="CFG: "];
"1000472" -> "1000471"  [label="AST: "];
"1000467" -> "1000471"  [label="CFG: "];
"1000471" -> "1000467"  [label="DDG: skb"];
"1000471" -> "1000474"  [label="DDG: skb"];
"1000467" -> "1000429"  [label="AST: "];
"1000468" -> "1000467"  [label="AST: "];
"1000475" -> "1000467"  [label="CFG: "];
"1000467" -> "1000527"  [label="DDG: aux.tp_net"];
"1000467" -> "1000527"  [label="DDG: skb_network_offset(skb)"];
"1000474" -> "1000473"  [label="AST: "];
"1000474" -> "1000475"  [label="CFG: "];
"1000475" -> "1000474"  [label="AST: "];
"1000479" -> "1000474"  [label="CFG: "];
"1000492" -> "1000474"  [label="CFG: "];
"1000474" -> "1000527"  [label="DDG: vlan_tx_tag_present(skb)"];
"1000474" -> "1000481"  [label="DDG: skb"];
"1000474" -> "1000521"  [label="DDG: skb"];
"1000481" -> "1000477"  [label="AST: "];
"1000481" -> "1000482"  [label="CFG: "];
"1000482" -> "1000481"  [label="AST: "];
"1000477" -> "1000481"  [label="CFG: "];
"1000481" -> "1000477"  [label="DDG: skb"];
"1000481" -> "1000521"  [label="DDG: skb"];
"1000477" -> "1000476"  [label="AST: "];
"1000478" -> "1000477"  [label="AST: "];
"1000485" -> "1000477"  [label="CFG: "];
"1000477" -> "1000527"  [label="DDG: vlan_tx_tag_get(skb)"];
"1000477" -> "1000527"  [label="DDG: aux.tp_vlan_tci"];
"1000521" -> "1000114"  [label="AST: "];
"1000521" -> "1000523"  [label="CFG: "];
"1000522" -> "1000521"  [label="AST: "];
"1000523" -> "1000521"  [label="AST: "];
"1000524" -> "1000521"  [label="CFG: "];
"1000521" -> "1000527"  [label="DDG: sk"];
"1000521" -> "1000527"  [label="DDG: skb_free_datagram(sk, skb)"];
"1000521" -> "1000527"  [label="DDG: skb"];
"1000187" -> "1000521"  [label="DDG: sk"];
"1000426" -> "1000521"  [label="DDG: sk"];
"1000310" -> "1000521"  [label="DDG: skb"];
"1000211" -> "1000521"  [label="DDG: skb"];
"1000181" -> "1000521"  [label="DDG: skb"];
"1000223" -> "1000521"  [label="DDG: skb"];
"1000426" -> "1000425"  [label="AST: "];
"1000426" -> "1000427"  [label="CFG: "];
"1000427" -> "1000426"  [label="AST: "];
"1000428" -> "1000426"  [label="CFG: "];
"1000500" -> "1000429"  [label="AST: "];
"1000500" -> "1000506"  [label="CFG: "];
"1000501" -> "1000500"  [label="AST: "];
"1000502" -> "1000500"  [label="AST: "];
"1000503" -> "1000500"  [label="AST: "];
"1000504" -> "1000500"  [label="AST: "];
"1000506" -> "1000500"  [label="AST: "];
"1000509" -> "1000500"  [label="CFG: "];
"1000500" -> "1000527"  [label="DDG: &aux"];
"1000500" -> "1000527"  [label="DDG: PACKET_AUXDATA"];
"1000500" -> "1000527"  [label="DDG: SOL_PACKET"];
"1000500" -> "1000527"  [label="DDG: put_cmsg(msg, SOL_PACKET, PACKET_AUXDATA, sizeof(aux), &aux)"];
"1000500" -> "1000527"  [label="DDG: msg"];
"1000111" -> "1000500"  [label="DDG: msg"];
"1000508" -> "1000114"  [label="AST: "];
"1000508" -> "1000510"  [label="CFG: "];
"1000509" -> "1000508"  [label="AST: "];
"1000510" -> "1000508"  [label="AST: "];
"1000520" -> "1000508"  [label="CFG: "];
"1000508" -> "1000527"  [label="DDG: err"];
"1000508" -> "1000527"  [label="DDG: vnet_hdr_len + ((flags&MSG_TRUNC) ? skb->len : copied)"];
"1000125" -> "1000508"  [label="DDG: vnet_hdr_len"];
"1000334" -> "1000508"  [label="DDG: vnet_hdr_len"];
"1000510" -> "1000512"  [label="CFG: "];
"1000511" -> "1000510"  [label="AST: "];
"1000512" -> "1000510"  [label="AST: "];
"1000510" -> "1000527"  [label="DDG: vnet_hdr_len"];
"1000510" -> "1000527"  [label="DDG: (flags&MSG_TRUNC) ? skb->len : copied"];
"1000125" -> "1000510"  [label="DDG: vnet_hdr_len"];
"1000334" -> "1000510"  [label="DDG: vnet_hdr_len"];
"1000512" -> "1000516"  [label="CFG: "];
"1000512" -> "1000519"  [label="CFG: "];
"1000513" -> "1000512"  [label="AST: "];
"1000516" -> "1000512"  [label="AST: "];
"1000519" -> "1000512"  [label="AST: "];
"1000512" -> "1000527"  [label="DDG: flags&MSG_TRUNC"];
"1000512" -> "1000527"  [label="DDG: copied"];
"1000512" -> "1000527"  [label="DDG: skb->len"];
}
