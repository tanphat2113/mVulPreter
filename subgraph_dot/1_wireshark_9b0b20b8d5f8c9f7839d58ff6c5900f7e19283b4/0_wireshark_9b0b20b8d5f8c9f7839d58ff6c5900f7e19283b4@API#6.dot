digraph "0_wireshark_9b0b20b8d5f8c9f7839d58ff6c5900f7e19283b4@API" {
"1000714" [label="(Call,memcmp(sa->wpa.nonce, data + offset_fte + 52, AIRPDCAP_WPA_NONCE_LEN))"];
"1000562" [label="(Call,data[offset] == 55)"];
"1000551" [label="(Call,data[offset] == 48)"];
"1000584" [label="(Call,data[offset] == 101)"];
"1000573" [label="(Call,data[offset] == 56)"];
"1000148" [label="(MethodParameterIn,const guint8 *data)"];
"1000568" [label="(Call,offset_fte = offset)"];
"1000544" [label="(Call,offset < (tot_len - 2))"];
"1000608" [label="(Call,offset += data[offset + 1] + 2)"];
"1000540" [label="(Call,offset+=5)"];
"1000521" [label="(Call,offset++)"];
"1000498" [label="(Call,offset+=10)"];
"1000174" [label="(Call,offset = mac_header_len)"];
"1000149" [label="(MethodParameterIn,const guint mac_header_len)"];
"1000546" [label="(Call,tot_len - 2)"];
"1000594" [label="(Call,tot_len < offset + data[offset + 1] + 2)"];
"1000150" [label="(MethodParameterIn,const guint tot_len)"];
"1000623" [label="(Call,offset_fte == 0)"];
"1000483" [label="(Call,offset_fte = 0)"];
"1000713" [label="(Call,memcmp(sa->wpa.nonce, data + offset_fte + 52, AIRPDCAP_WPA_NONCE_LEN) == 0)"];
"1000204" [label="(Call,data[offset+1]!=3)"];
"1000573" [label="(Call,data[offset] == 56)"];
"1000544" [label="(Call,offset < (tot_len - 2))"];
"1000722" [label="(Call,offset_fte + 52)"];
"1000623" [label="(Call,offset_fte == 0)"];
"1000458" [label="(Call,tot_len-offset+1)"];
"1000484" [label="(Identifier,offset_fte)"];
"1000552" [label="(Call,data[offset])"];
"1000335" [label="(Call,AIRPDCAP_EAP_MIC(data[offset]))"];
"1000567" [label="(Block,)"];
"1000547" [label="(Identifier,tot_len)"];
"1000609" [label="(Identifier,offset)"];
"1000498" [label="(Call,offset+=10)"];
"1000302" [label="(Call,mac_header_len + GROUP_KEY_PAYLOAD_LEN_MIN > tot_len)"];
"1000548" [label="(Literal,2)"];
"1000553" [label="(Identifier,data)"];
"1000473" [label="(Block,)"];
"1000175" [label="(Identifier,offset)"];
"1000624" [label="(Identifier,offset_fte)"];
"1000180" [label="(Call,memcmp(data+offset, dot1x_header, 8))"];
"1000188" [label="(Call,memcmp(data+offset, bt_dot1x_header, 8))"];
"1000246" [label="(Call,(const EAPOL_RSN_KEY *) (data+offset))"];
"1000181" [label="(Call,data+offset)"];
"1000594" [label="(Call,tot_len < offset + data[offset + 1] + 2)"];
"1000628" [label="(Identifier,offset_timeout)"];
"1000570" [label="(Identifier,offset)"];
"1000596" [label="(Call,offset + data[offset + 1] + 2)"];
"1000526" [label="(Call,data+offset)"];
"1000734" [label="(Identifier,tmp_sa)"];
"1000564" [label="(Identifier,data)"];
"1000541" [label="(Identifier,offset)"];
"1000524" [label="(Identifier,status)"];
"1000542" [label="(Literal,5)"];
"1000568" [label="(Call,offset_fte = offset)"];
"1000152" [label="(Block,)"];
"1000625" [label="(Literal,0)"];
"1000726" [label="(Literal,0)"];
"1000755" [label="(Call,AirPDcapTDLSDeriveKey(sa, data, offset_rsne, offset_fte, offset_timeout, offset_link, action))"];
"1000595" [label="(Identifier,tot_len)"];
"1000485" [label="(Literal,0)"];
"1000550" [label="(ControlStructure,if (data[offset] == 48))"];
"1000341" [label="(Call,AIRPDCAP_EAP_SEC(data[offset]))"];
"1000588" [label="(Literal,101)"];
"1000500" [label="(Literal,10)"];
"1000715" [label="(Call,sa->wpa.nonce)"];
"1000577" [label="(Literal,56)"];
"1000189" [label="(Call,data+offset)"];
"1000555" [label="(Literal,48)"];
"1000579" [label="(Call,offset_timeout = offset)"];
"1000326" [label="(Call,AIRPDCAP_EAP_ACK(data[offset+1]))"];
"1000148" [label="(MethodParameterIn,const guint8 *data)"];
"1000228" [label="(Call,tot_len-offset-4)"];
"1000303" [label="(Call,mac_header_len + GROUP_KEY_PAYLOAD_LEN_MIN)"];
"1000543" [label="(ControlStructure,while(offset < (tot_len - 2)))"];
"1000713" [label="(Call,memcmp(sa->wpa.nonce, data + offset_fte + 52, AIRPDCAP_WPA_NONCE_LEN) == 0)"];
"1000561" [label="(ControlStructure,if (data[offset] == 55))"];
"1000779" [label="(MethodReturn,static INT)"];
"1000549" [label="(Block,)"];
"1000586" [label="(Identifier,data)"];
"1000540" [label="(Call,offset+=5)"];
"1000613" [label="(Call,offset + 1)"];
"1000488" [label="(Identifier,offset_link)"];
"1000585" [label="(Call,data[offset])"];
"1000499" [label="(Identifier,offset)"];
"1000200" [label="(Call,offset+=8)"];
"1000525" [label="(Call,pntoh16(data+offset))"];
"1000558" [label="(Identifier,offset_rsne)"];
"1000583" [label="(ControlStructure,if (data[offset] == 101))"];
"1000569" [label="(Identifier,offset_fte)"];
"1000557" [label="(Call,offset_rsne = offset)"];
"1000521" [label="(Call,offset++)"];
"1000292" [label="(Call,AirPDcapRsna4WHandshake(ctx, data, sa, offset, tot_len))"];
"1000377" [label="(Call,(const AIRPDCAP_MAC_FRAME_ADDR4 *)(data))"];
"1000620" [label="(Identifier,offset_rsne)"];
"1000248" [label="(Call,data+offset)"];
"1000176" [label="(Identifier,mac_header_len)"];
"1000546" [label="(Call,tot_len - 2)"];
"1000522" [label="(Identifier,offset)"];
"1000483" [label="(Call,offset_fte = 0)"];
"1000502" [label="(Identifier,action)"];
"1000607" [label="(Identifier,AIRPDCAP_RET_NO_VALID_HANDSHAKE)"];
"1000149" [label="(MethodParameterIn,const guint mac_header_len)"];
"1000545" [label="(Identifier,offset)"];
"1000574" [label="(Call,data[offset])"];
"1000467" [label="(Call,data+offset)"];
"1000572" [label="(ControlStructure,if (data[offset] == 56))"];
"1000725" [label="(Identifier,AIRPDCAP_WPA_NONCE_LEN)"];
"1000562" [label="(Call,data[offset] == 55)"];
"1000563" [label="(Call,data[offset])"];
"1000590" [label="(Call,offset_link = offset)"];
"1000591" [label="(Identifier,offset_link)"];
"1000580" [label="(Identifier,offset_timeout)"];
"1000610" [label="(Call,data[offset + 1] + 2)"];
"1000575" [label="(Identifier,data)"];
"1000598" [label="(Call,data[offset + 1] + 2)"];
"1000220" [label="(Call,pntoh16(data+offset+2))"];
"1000584" [label="(Call,data[offset] == 101)"];
"1000150" [label="(MethodParameterIn,const guint tot_len)"];
"1000608" [label="(Call,offset += data[offset + 1] + 2)"];
"1000714" [label="(Call,memcmp(sa->wpa.nonce, data + offset_fte + 52, AIRPDCAP_WPA_NONCE_LEN))"];
"1000712" [label="(ControlStructure,if (memcmp(sa->wpa.nonce, data + offset_fte + 52, AIRPDCAP_WPA_NONCE_LEN) == 0))"];
"1000182" [label="(Identifier,data)"];
"1000174" [label="(Call,offset = mac_header_len)"];
"1000622" [label="(Call,offset_fte == 0 ||\n            offset_timeout == 0 || offset_link == 0)"];
"1000601" [label="(Call,offset + 1)"];
"1000566" [label="(Literal,55)"];
"1000501" [label="(Call,action = data[offset])"];
"1000466" [label="(Call,memcmp(data+offset, tdls_header, 10))"];
"1000593" [label="(ControlStructure,if (tot_len < offset + data[offset + 1] + 2))"];
"1000221" [label="(Call,data+offset+2)"];
"1000551" [label="(Call,data[offset] == 48)"];
"1000720" [label="(Call,data + offset_fte + 52)"];
"1000317" [label="(Call,AIRPDCAP_EAP_KEY(data[offset+1]))"];
"1000729" [label="(Identifier,AIRPDCAP_RET_SUCCESS_HANDSHAKE)"];
"1000714" -> "1000713"  [label="AST: "];
"1000714" -> "1000725"  [label="CFG: "];
"1000715" -> "1000714"  [label="AST: "];
"1000720" -> "1000714"  [label="AST: "];
"1000725" -> "1000714"  [label="AST: "];
"1000726" -> "1000714"  [label="CFG: "];
"1000714" -> "1000779"  [label="DDG: sa->wpa.nonce"];
"1000714" -> "1000779"  [label="DDG: data + offset_fte + 52"];
"1000714" -> "1000779"  [label="DDG: AIRPDCAP_WPA_NONCE_LEN"];
"1000714" -> "1000713"  [label="DDG: sa->wpa.nonce"];
"1000714" -> "1000713"  [label="DDG: data + offset_fte + 52"];
"1000714" -> "1000713"  [label="DDG: AIRPDCAP_WPA_NONCE_LEN"];
"1000562" -> "1000714"  [label="DDG: data[offset]"];
"1000551" -> "1000714"  [label="DDG: data[offset]"];
"1000584" -> "1000714"  [label="DDG: data[offset]"];
"1000573" -> "1000714"  [label="DDG: data[offset]"];
"1000148" -> "1000714"  [label="DDG: data"];
"1000568" -> "1000714"  [label="DDG: offset_fte"];
"1000623" -> "1000714"  [label="DDG: offset_fte"];
"1000483" -> "1000714"  [label="DDG: offset_fte"];
"1000562" -> "1000561"  [label="AST: "];
"1000562" -> "1000566"  [label="CFG: "];
"1000563" -> "1000562"  [label="AST: "];
"1000566" -> "1000562"  [label="AST: "];
"1000569" -> "1000562"  [label="CFG: "];
"1000575" -> "1000562"  [label="CFG: "];
"1000562" -> "1000779"  [label="DDG: data[offset]"];
"1000562" -> "1000779"  [label="DDG: data[offset] == 55"];
"1000562" -> "1000551"  [label="DDG: data[offset]"];
"1000551" -> "1000562"  [label="DDG: data[offset]"];
"1000148" -> "1000562"  [label="DDG: data"];
"1000562" -> "1000573"  [label="DDG: data[offset]"];
"1000562" -> "1000720"  [label="DDG: data[offset]"];
"1000562" -> "1000755"  [label="DDG: data[offset]"];
"1000551" -> "1000550"  [label="AST: "];
"1000551" -> "1000555"  [label="CFG: "];
"1000552" -> "1000551"  [label="AST: "];
"1000555" -> "1000551"  [label="AST: "];
"1000558" -> "1000551"  [label="CFG: "];
"1000564" -> "1000551"  [label="CFG: "];
"1000551" -> "1000779"  [label="DDG: data[offset] == 48"];
"1000551" -> "1000779"  [label="DDG: data[offset]"];
"1000584" -> "1000551"  [label="DDG: data[offset]"];
"1000573" -> "1000551"  [label="DDG: data[offset]"];
"1000148" -> "1000551"  [label="DDG: data"];
"1000551" -> "1000720"  [label="DDG: data[offset]"];
"1000551" -> "1000755"  [label="DDG: data[offset]"];
"1000584" -> "1000583"  [label="AST: "];
"1000584" -> "1000588"  [label="CFG: "];
"1000585" -> "1000584"  [label="AST: "];
"1000588" -> "1000584"  [label="AST: "];
"1000591" -> "1000584"  [label="CFG: "];
"1000595" -> "1000584"  [label="CFG: "];
"1000584" -> "1000779"  [label="DDG: data[offset] == 101"];
"1000584" -> "1000779"  [label="DDG: data[offset]"];
"1000573" -> "1000584"  [label="DDG: data[offset]"];
"1000148" -> "1000584"  [label="DDG: data"];
"1000584" -> "1000720"  [label="DDG: data[offset]"];
"1000584" -> "1000755"  [label="DDG: data[offset]"];
"1000573" -> "1000572"  [label="AST: "];
"1000573" -> "1000577"  [label="CFG: "];
"1000574" -> "1000573"  [label="AST: "];
"1000577" -> "1000573"  [label="AST: "];
"1000580" -> "1000573"  [label="CFG: "];
"1000586" -> "1000573"  [label="CFG: "];
"1000573" -> "1000779"  [label="DDG: data[offset]"];
"1000573" -> "1000779"  [label="DDG: data[offset] == 56"];
"1000148" -> "1000573"  [label="DDG: data"];
"1000573" -> "1000720"  [label="DDG: data[offset]"];
"1000573" -> "1000755"  [label="DDG: data[offset]"];
"1000148" -> "1000146"  [label="AST: "];
"1000148" -> "1000779"  [label="DDG: data"];
"1000148" -> "1000180"  [label="DDG: data"];
"1000148" -> "1000181"  [label="DDG: data"];
"1000148" -> "1000188"  [label="DDG: data"];
"1000148" -> "1000189"  [label="DDG: data"];
"1000148" -> "1000204"  [label="DDG: data"];
"1000148" -> "1000220"  [label="DDG: data"];
"1000148" -> "1000221"  [label="DDG: data"];
"1000148" -> "1000246"  [label="DDG: data"];
"1000148" -> "1000248"  [label="DDG: data"];
"1000148" -> "1000292"  [label="DDG: data"];
"1000148" -> "1000317"  [label="DDG: data"];
"1000148" -> "1000326"  [label="DDG: data"];
"1000148" -> "1000335"  [label="DDG: data"];
"1000148" -> "1000341"  [label="DDG: data"];
"1000148" -> "1000377"  [label="DDG: data"];
"1000148" -> "1000466"  [label="DDG: data"];
"1000148" -> "1000467"  [label="DDG: data"];
"1000148" -> "1000501"  [label="DDG: data"];
"1000148" -> "1000525"  [label="DDG: data"];
"1000148" -> "1000526"  [label="DDG: data"];
"1000148" -> "1000594"  [label="DDG: data"];
"1000148" -> "1000596"  [label="DDG: data"];
"1000148" -> "1000598"  [label="DDG: data"];
"1000148" -> "1000608"  [label="DDG: data"];
"1000148" -> "1000610"  [label="DDG: data"];
"1000148" -> "1000720"  [label="DDG: data"];
"1000148" -> "1000755"  [label="DDG: data"];
"1000568" -> "1000567"  [label="AST: "];
"1000568" -> "1000570"  [label="CFG: "];
"1000569" -> "1000568"  [label="AST: "];
"1000570" -> "1000568"  [label="AST: "];
"1000595" -> "1000568"  [label="CFG: "];
"1000568" -> "1000779"  [label="DDG: offset_fte"];
"1000544" -> "1000568"  [label="DDG: offset"];
"1000568" -> "1000623"  [label="DDG: offset_fte"];
"1000568" -> "1000720"  [label="DDG: offset_fte"];
"1000568" -> "1000722"  [label="DDG: offset_fte"];
"1000568" -> "1000755"  [label="DDG: offset_fte"];
"1000544" -> "1000543"  [label="AST: "];
"1000544" -> "1000546"  [label="CFG: "];
"1000545" -> "1000544"  [label="AST: "];
"1000546" -> "1000544"  [label="AST: "];
"1000553" -> "1000544"  [label="CFG: "];
"1000620" -> "1000544"  [label="CFG: "];
"1000544" -> "1000779"  [label="DDG: tot_len - 2"];
"1000544" -> "1000779"  [label="DDG: offset"];
"1000544" -> "1000779"  [label="DDG: offset < (tot_len - 2)"];
"1000608" -> "1000544"  [label="DDG: offset"];
"1000540" -> "1000544"  [label="DDG: offset"];
"1000546" -> "1000544"  [label="DDG: tot_len"];
"1000546" -> "1000544"  [label="DDG: 2"];
"1000544" -> "1000557"  [label="DDG: offset"];
"1000544" -> "1000579"  [label="DDG: offset"];
"1000544" -> "1000590"  [label="DDG: offset"];
"1000544" -> "1000594"  [label="DDG: offset"];
"1000544" -> "1000596"  [label="DDG: offset"];
"1000544" -> "1000601"  [label="DDG: offset"];
"1000544" -> "1000608"  [label="DDG: offset"];
"1000544" -> "1000613"  [label="DDG: offset"];
"1000608" -> "1000549"  [label="AST: "];
"1000608" -> "1000610"  [label="CFG: "];
"1000609" -> "1000608"  [label="AST: "];
"1000610" -> "1000608"  [label="AST: "];
"1000545" -> "1000608"  [label="CFG: "];
"1000608" -> "1000779"  [label="DDG: data[offset + 1] + 2"];
"1000540" -> "1000473"  [label="AST: "];
"1000540" -> "1000542"  [label="CFG: "];
"1000541" -> "1000540"  [label="AST: "];
"1000542" -> "1000540"  [label="AST: "];
"1000545" -> "1000540"  [label="CFG: "];
"1000521" -> "1000540"  [label="DDG: offset"];
"1000521" -> "1000473"  [label="AST: "];
"1000521" -> "1000522"  [label="CFG: "];
"1000522" -> "1000521"  [label="AST: "];
"1000524" -> "1000521"  [label="CFG: "];
"1000498" -> "1000521"  [label="DDG: offset"];
"1000521" -> "1000525"  [label="DDG: offset"];
"1000521" -> "1000526"  [label="DDG: offset"];
"1000498" -> "1000473"  [label="AST: "];
"1000498" -> "1000500"  [label="CFG: "];
"1000499" -> "1000498"  [label="AST: "];
"1000500" -> "1000498"  [label="AST: "];
"1000502" -> "1000498"  [label="CFG: "];
"1000498" -> "1000779"  [label="DDG: offset"];
"1000174" -> "1000498"  [label="DDG: offset"];
"1000174" -> "1000152"  [label="AST: "];
"1000174" -> "1000176"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000176" -> "1000174"  [label="AST: "];
"1000182" -> "1000174"  [label="CFG: "];
"1000174" -> "1000779"  [label="DDG: mac_header_len"];
"1000149" -> "1000174"  [label="DDG: mac_header_len"];
"1000174" -> "1000180"  [label="DDG: offset"];
"1000174" -> "1000181"  [label="DDG: offset"];
"1000174" -> "1000188"  [label="DDG: offset"];
"1000174" -> "1000189"  [label="DDG: offset"];
"1000174" -> "1000200"  [label="DDG: offset"];
"1000174" -> "1000466"  [label="DDG: offset"];
"1000174" -> "1000467"  [label="DDG: offset"];
"1000149" -> "1000146"  [label="AST: "];
"1000149" -> "1000779"  [label="DDG: mac_header_len"];
"1000149" -> "1000302"  [label="DDG: mac_header_len"];
"1000149" -> "1000303"  [label="DDG: mac_header_len"];
"1000546" -> "1000548"  [label="CFG: "];
"1000547" -> "1000546"  [label="AST: "];
"1000548" -> "1000546"  [label="AST: "];
"1000546" -> "1000779"  [label="DDG: tot_len"];
"1000594" -> "1000546"  [label="DDG: tot_len"];
"1000150" -> "1000546"  [label="DDG: tot_len"];
"1000546" -> "1000594"  [label="DDG: tot_len"];
"1000594" -> "1000593"  [label="AST: "];
"1000594" -> "1000596"  [label="CFG: "];
"1000595" -> "1000594"  [label="AST: "];
"1000596" -> "1000594"  [label="AST: "];
"1000607" -> "1000594"  [label="CFG: "];
"1000609" -> "1000594"  [label="CFG: "];
"1000594" -> "1000779"  [label="DDG: tot_len"];
"1000594" -> "1000779"  [label="DDG: offset + data[offset + 1] + 2"];
"1000594" -> "1000779"  [label="DDG: tot_len < offset + data[offset + 1] + 2"];
"1000150" -> "1000594"  [label="DDG: tot_len"];
"1000150" -> "1000146"  [label="AST: "];
"1000150" -> "1000779"  [label="DDG: tot_len"];
"1000150" -> "1000228"  [label="DDG: tot_len"];
"1000150" -> "1000292"  [label="DDG: tot_len"];
"1000150" -> "1000302"  [label="DDG: tot_len"];
"1000150" -> "1000458"  [label="DDG: tot_len"];
"1000623" -> "1000622"  [label="AST: "];
"1000623" -> "1000625"  [label="CFG: "];
"1000624" -> "1000623"  [label="AST: "];
"1000625" -> "1000623"  [label="AST: "];
"1000628" -> "1000623"  [label="CFG: "];
"1000622" -> "1000623"  [label="CFG: "];
"1000623" -> "1000779"  [label="DDG: offset_fte"];
"1000623" -> "1000622"  [label="DDG: offset_fte"];
"1000623" -> "1000622"  [label="DDG: 0"];
"1000483" -> "1000623"  [label="DDG: offset_fte"];
"1000623" -> "1000720"  [label="DDG: offset_fte"];
"1000623" -> "1000722"  [label="DDG: offset_fte"];
"1000623" -> "1000755"  [label="DDG: offset_fte"];
"1000483" -> "1000473"  [label="AST: "];
"1000483" -> "1000485"  [label="CFG: "];
"1000484" -> "1000483"  [label="AST: "];
"1000485" -> "1000483"  [label="AST: "];
"1000488" -> "1000483"  [label="CFG: "];
"1000483" -> "1000779"  [label="DDG: offset_fte"];
"1000483" -> "1000720"  [label="DDG: offset_fte"];
"1000483" -> "1000722"  [label="DDG: offset_fte"];
"1000483" -> "1000755"  [label="DDG: offset_fte"];
"1000713" -> "1000712"  [label="AST: "];
"1000713" -> "1000726"  [label="CFG: "];
"1000726" -> "1000713"  [label="AST: "];
"1000729" -> "1000713"  [label="CFG: "];
"1000734" -> "1000713"  [label="CFG: "];
"1000713" -> "1000779"  [label="DDG: memcmp(sa->wpa.nonce, data + offset_fte + 52, AIRPDCAP_WPA_NONCE_LEN)"];
"1000713" -> "1000779"  [label="DDG: memcmp(sa->wpa.nonce, data + offset_fte + 52, AIRPDCAP_WPA_NONCE_LEN) == 0"];
}
