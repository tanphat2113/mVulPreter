digraph "0_Android_6fe85f7e15203e48df2cc3e8e1c4bc6ad49dc968@array" {
"1002090" [label="(Call,mLastTrack->meta->setData(\n                    kKeyESDS, kTypeESDS, &buffer[4], chunk_data_size - 4))"];
"1002097" [label="(Call,chunk_data_size - 4)"];
"1002073" [label="(Call,mDataSource->readAt(\n                        data_offset, buffer, chunk_data_size) < chunk_data_size)"];
"1002074" [label="(Call,mDataSource->readAt(\n                        data_offset, buffer, chunk_data_size))"];
"1002063" [label="(Call,chunk_data_size > (off64_t)sizeof(buffer))"];
"1002055" [label="(Call,chunk_data_size < 4)"];
"1002120" [label="(Call,updateAudioTrackInfoFromESDS_MPEG4Audio(\n &buffer[4], chunk_data_size - 4))"];
"1002118" [label="(Call,err = updateAudioTrackInfoFromESDS_MPEG4Audio(\n &buffer[4], chunk_data_size - 4))"];
"1002129" [label="(Call,err != OK)"];
"1002133" [label="(Return,return err;)"];
"1002925" [label="(Return,return OK;)"];
"1002073" [label="(Call,mDataSource->readAt(\n                        data_offset, buffer, chunk_data_size) < chunk_data_size)"];
"1002085" [label="(Identifier,buffer)"];
"1001772" [label="(Call,err != OK)"];
"1002057" [label="(Literal,4)"];
"1002330" [label="(Call,err != OK)"];
"1001791" [label="(Call,err != OK)"];
"1002075" [label="(Identifier,data_offset)"];
"1001610" [label="(Call,err != OK)"];
"1002121" [label="(Call,&buffer[4])"];
"1002084" [label="(Call,U32_AT(buffer))"];
"1002078" [label="(Identifier,chunk_data_size)"];
"1002125" [label="(Call,chunk_data_size - 4)"];
"1002103" [label="(Call,mPath.size())"];
"1002081" [label="(Identifier,ERROR_IO)"];
"1002099" [label="(Literal,4)"];
"1000565" [label="(Call,err != OK)"];
"1002056" [label="(Identifier,chunk_data_size)"];
"1002090" [label="(Call,mLastTrack->meta->setData(\n                    kKeyESDS, kTypeESDS, &buffer[4], chunk_data_size - 4))"];
"1002119" [label="(Identifier,err)"];
"1000394" [label="(Call,cachedSource->setCachedRange(*offset, chunk_size) == OK)"];
"1002927" [label="(MethodReturn,status_t)"];
"1002065" [label="(Call,(off64_t)sizeof(buffer))"];
"1002128" [label="(ControlStructure,if (err != OK))"];
"1002097" [label="(Call,chunk_data_size - 4)"];
"1002118" [label="(Call,err = updateAudioTrackInfoFromESDS_MPEG4Audio(\n &buffer[4], chunk_data_size - 4))"];
"1002071" [label="(Identifier,ERROR_BUFFER_TOO_SMALL)"];
"1002130" [label="(Identifier,err)"];
"1002875" [label="(Call,err != OK)"];
"1000493" [label="(Call,err != OK)"];
"1002064" [label="(Identifier,chunk_data_size)"];
"1002116" [label="(Block,)"];
"1002055" [label="(Call,chunk_data_size < 4)"];
"1002120" [label="(Call,updateAudioTrackInfoFromESDS_MPEG4Audio(\n &buffer[4], chunk_data_size - 4))"];
"1001992" [label="(Call,err != OK)"];
"1002133" [label="(Return,return err;)"];
"1002091" [label="(Identifier,kKeyESDS)"];
"1002135" [label="(ControlStructure,break;)"];
"1002062" [label="(ControlStructure,if (chunk_data_size > (off64_t)sizeof(buffer)))"];
"1001954" [label="(Call,err != OK)"];
"1002054" [label="(ControlStructure,if (chunk_data_size < 4))"];
"1002060" [label="(Identifier,ERROR_MALFORMED)"];
"1002129" [label="(Call,err != OK)"];
"1002049" [label="(Block,)"];
"1001824" [label="(Call,err != OK)"];
"1001475" [label="(Call,err != OK)"];
"1002074" [label="(Call,mDataSource->readAt(\n                        data_offset, buffer, chunk_data_size))"];
"1002134" [label="(Identifier,err)"];
"1000988" [label="(Call,(err = parseTrackHeader(data_offset, chunk_data_size)) != OK)"];
"1002077" [label="(Identifier,chunk_data_size)"];
"1001973" [label="(Call,err != OK)"];
"1002076" [label="(Identifier,buffer)"];
"1000106" [label="(Block,)"];
"1002926" [label="(Identifier,OK)"];
"1002063" [label="(Call,chunk_data_size > (off64_t)sizeof(buffer))"];
"1002093" [label="(Call,&buffer[4])"];
"1002098" [label="(Identifier,chunk_data_size)"];
"1002092" [label="(Identifier,kTypeESDS)"];
"1002131" [label="(Identifier,OK)"];
"1002925" [label="(Return,return OK;)"];
"1002132" [label="(Block,)"];
"1002295" [label="(Call,err != OK)"];
"1000191" [label="(Call,mDataSource->getSize(&sourceSize) == OK)"];
"1002072" [label="(ControlStructure,if (mDataSource->readAt(\n                        data_offset, buffer, chunk_data_size) < chunk_data_size))"];
"1001744" [label="(Call,err != OK)"];
"1002090" -> "1002049"  [label="AST: "];
"1002090" -> "1002097"  [label="CFG: "];
"1002091" -> "1002090"  [label="AST: "];
"1002092" -> "1002090"  [label="AST: "];
"1002093" -> "1002090"  [label="AST: "];
"1002097" -> "1002090"  [label="AST: "];
"1002103" -> "1002090"  [label="CFG: "];
"1002090" -> "1002927"  [label="DDG: chunk_data_size - 4"];
"1002090" -> "1002927"  [label="DDG: kKeyESDS"];
"1002090" -> "1002927"  [label="DDG: mLastTrack->meta->setData(\n                    kKeyESDS, kTypeESDS, &buffer[4], chunk_data_size - 4)"];
"1002090" -> "1002927"  [label="DDG: kTypeESDS"];
"1002090" -> "1002927"  [label="DDG: &buffer[4]"];
"1002097" -> "1002090"  [label="DDG: chunk_data_size"];
"1002097" -> "1002090"  [label="DDG: 4"];
"1002090" -> "1002120"  [label="DDG: &buffer[4]"];
"1002097" -> "1002099"  [label="CFG: "];
"1002098" -> "1002097"  [label="AST: "];
"1002099" -> "1002097"  [label="AST: "];
"1002097" -> "1002927"  [label="DDG: chunk_data_size"];
"1002073" -> "1002097"  [label="DDG: chunk_data_size"];
"1002097" -> "1002125"  [label="DDG: chunk_data_size"];
"1002073" -> "1002072"  [label="AST: "];
"1002073" -> "1002078"  [label="CFG: "];
"1002074" -> "1002073"  [label="AST: "];
"1002078" -> "1002073"  [label="AST: "];
"1002081" -> "1002073"  [label="CFG: "];
"1002085" -> "1002073"  [label="CFG: "];
"1002073" -> "1002927"  [label="DDG: mDataSource->readAt(\n                        data_offset, buffer, chunk_data_size) < chunk_data_size"];
"1002073" -> "1002927"  [label="DDG: chunk_data_size"];
"1002073" -> "1002927"  [label="DDG: mDataSource->readAt(\n                        data_offset, buffer, chunk_data_size)"];
"1002074" -> "1002073"  [label="DDG: data_offset"];
"1002074" -> "1002073"  [label="DDG: buffer"];
"1002074" -> "1002073"  [label="DDG: chunk_data_size"];
"1002074" -> "1002077"  [label="CFG: "];
"1002075" -> "1002074"  [label="AST: "];
"1002076" -> "1002074"  [label="AST: "];
"1002077" -> "1002074"  [label="AST: "];
"1002078" -> "1002074"  [label="CFG: "];
"1002074" -> "1002927"  [label="DDG: data_offset"];
"1002074" -> "1002927"  [label="DDG: buffer"];
"1002063" -> "1002074"  [label="DDG: chunk_data_size"];
"1002074" -> "1002084"  [label="DDG: buffer"];
"1002063" -> "1002062"  [label="AST: "];
"1002063" -> "1002065"  [label="CFG: "];
"1002064" -> "1002063"  [label="AST: "];
"1002065" -> "1002063"  [label="AST: "];
"1002071" -> "1002063"  [label="CFG: "];
"1002075" -> "1002063"  [label="CFG: "];
"1002063" -> "1002927"  [label="DDG: (off64_t)sizeof(buffer)"];
"1002063" -> "1002927"  [label="DDG: chunk_data_size > (off64_t)sizeof(buffer)"];
"1002063" -> "1002927"  [label="DDG: chunk_data_size"];
"1002055" -> "1002063"  [label="DDG: chunk_data_size"];
"1002055" -> "1002054"  [label="AST: "];
"1002055" -> "1002057"  [label="CFG: "];
"1002056" -> "1002055"  [label="AST: "];
"1002057" -> "1002055"  [label="AST: "];
"1002060" -> "1002055"  [label="CFG: "];
"1002064" -> "1002055"  [label="CFG: "];
"1002055" -> "1002927"  [label="DDG: chunk_data_size < 4"];
"1002055" -> "1002927"  [label="DDG: chunk_data_size"];
"1002120" -> "1002118"  [label="AST: "];
"1002120" -> "1002125"  [label="CFG: "];
"1002121" -> "1002120"  [label="AST: "];
"1002125" -> "1002120"  [label="AST: "];
"1002118" -> "1002120"  [label="CFG: "];
"1002120" -> "1002927"  [label="DDG: &buffer[4]"];
"1002120" -> "1002927"  [label="DDG: chunk_data_size - 4"];
"1002120" -> "1002118"  [label="DDG: &buffer[4]"];
"1002120" -> "1002118"  [label="DDG: chunk_data_size - 4"];
"1002125" -> "1002120"  [label="DDG: chunk_data_size"];
"1002125" -> "1002120"  [label="DDG: 4"];
"1002118" -> "1002116"  [label="AST: "];
"1002119" -> "1002118"  [label="AST: "];
"1002130" -> "1002118"  [label="CFG: "];
"1002118" -> "1002927"  [label="DDG: updateAudioTrackInfoFromESDS_MPEG4Audio(\n &buffer[4], chunk_data_size - 4)"];
"1002118" -> "1002129"  [label="DDG: err"];
"1002129" -> "1002128"  [label="AST: "];
"1002129" -> "1002131"  [label="CFG: "];
"1002130" -> "1002129"  [label="AST: "];
"1002131" -> "1002129"  [label="AST: "];
"1002134" -> "1002129"  [label="CFG: "];
"1002135" -> "1002129"  [label="CFG: "];
"1002129" -> "1002927"  [label="DDG: OK"];
"1002129" -> "1002927"  [label="DDG: err"];
"1002129" -> "1002927"  [label="DDG: err != OK"];
"1002129" -> "1002133"  [label="DDG: err"];
"1002129" -> "1002925"  [label="DDG: OK"];
"1002133" -> "1002132"  [label="AST: "];
"1002133" -> "1002134"  [label="CFG: "];
"1002134" -> "1002133"  [label="AST: "];
"1002927" -> "1002133"  [label="CFG: "];
"1002133" -> "1002927"  [label="DDG: <RET>"];
"1002134" -> "1002133"  [label="DDG: err"];
"1002925" -> "1000106"  [label="AST: "];
"1002925" -> "1002926"  [label="CFG: "];
"1002926" -> "1002925"  [label="AST: "];
"1002927" -> "1002925"  [label="CFG: "];
"1002925" -> "1002927"  [label="DDG: <RET>"];
"1002926" -> "1002925"  [label="DDG: OK"];
"1002295" -> "1002925"  [label="DDG: OK"];
"1000191" -> "1002925"  [label="DDG: OK"];
"1001744" -> "1002925"  [label="DDG: OK"];
"1000493" -> "1002925"  [label="DDG: OK"];
"1000565" -> "1002925"  [label="DDG: OK"];
"1001772" -> "1002925"  [label="DDG: OK"];
"1001791" -> "1002925"  [label="DDG: OK"];
"1000394" -> "1002925"  [label="DDG: OK"];
"1001973" -> "1002925"  [label="DDG: OK"];
"1002875" -> "1002925"  [label="DDG: OK"];
"1001475" -> "1002925"  [label="DDG: OK"];
"1001610" -> "1002925"  [label="DDG: OK"];
"1001992" -> "1002925"  [label="DDG: OK"];
"1001954" -> "1002925"  [label="DDG: OK"];
"1000988" -> "1002925"  [label="DDG: OK"];
"1001824" -> "1002925"  [label="DDG: OK"];
"1002330" -> "1002925"  [label="DDG: OK"];
}
