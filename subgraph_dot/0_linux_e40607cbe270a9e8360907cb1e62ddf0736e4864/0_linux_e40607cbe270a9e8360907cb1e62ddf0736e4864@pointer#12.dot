digraph "0_linux_e40607cbe270a9e8360907cb1e62ddf0736e4864@pointer" {
"1000523" [label="(Call,asoc->peer.peer_random = kmemdup(param.p,\n\t\t\t\t\t    ntohs(param.p->length), gfp))"];
"1000529" [label="(Call,kmemdup(param.p,\n\t\t\t\t\t    ntohs(param.p->length), gfp))"];
"1000117" [label="(MethodParameterIn,union sctp_params param)"];
"1000533" [label="(Call,ntohs(param.p->length))"];
"1000119" [label="(MethodParameterIn,gfp_t gfp)"];
"1000541" [label="(Call,!asoc->peer.peer_random)"];
"1000529" [label="(Call,kmemdup(param.p,\n\t\t\t\t\t    ntohs(param.p->length), gfp))"];
"1000541" [label="(Call,!asoc->peer.peer_random)"];
"1000523" [label="(Call,asoc->peer.peer_random = kmemdup(param.p,\n\t\t\t\t\t    ntohs(param.p->length), gfp))"];
"1000645" [label="(MethodReturn,static int)"];
"1000524" [label="(Call,asoc->peer.peer_random)"];
"1000589" [label="(Call,sctp_auth_asoc_set_default_hmac(asoc, param.hmac_algo))"];
"1000544" [label="(Identifier,asoc)"];
"1000542" [label="(Call,asoc->peer.peer_random)"];
"1000608" [label="(Call,kmemdup(param.p,\n\t\t\t\t\t    ntohs(param.p->length), gfp))"];
"1000212" [label="(Call,sctp_assoc_add_peer(asoc, &addr, gfp, SCTP_UNCONFIRMED))"];
"1000119" [label="(MethodParameterIn,gfp_t gfp)"];
"1000552" [label="(ControlStructure,break;)"];
"1000439" [label="(Call,addr_param = param.v + sizeof(sctp_addip_param_t))"];
"1000534" [label="(Call,param.p->length)"];
"1000187" [label="(Call,af->from_addr_param(&addr, param.addr, htons(asoc->peer.port), 0))"];
"1000441" [label="(Call,param.v + sizeof(sctp_addip_param_t))"];
"1000566" [label="(Call,kmemdup(param.p,\n\t\t\t\t\t    ntohs(param.p->length), gfp))"];
"1000117" [label="(MethodParameterIn,union sctp_params param)"];
"1000530" [label="(Call,param.p)"];
"1000539" [label="(Identifier,gfp)"];
"1000154" [label="(Block,)"];
"1000495" [label="(Call,sctp_process_ext_param(asoc, param))"];
"1000549" [label="(Identifier,retval)"];
"1000540" [label="(ControlStructure,if (!asoc->peer.peer_random))"];
"1000533" [label="(Call,ntohs(param.p->length))"];
"1000523" -> "1000154"  [label="AST: "];
"1000523" -> "1000529"  [label="CFG: "];
"1000524" -> "1000523"  [label="AST: "];
"1000529" -> "1000523"  [label="AST: "];
"1000544" -> "1000523"  [label="CFG: "];
"1000523" -> "1000645"  [label="DDG: kmemdup(param.p,\n\t\t\t\t\t    ntohs(param.p->length), gfp)"];
"1000529" -> "1000523"  [label="DDG: param.p"];
"1000529" -> "1000523"  [label="DDG: ntohs(param.p->length)"];
"1000529" -> "1000523"  [label="DDG: gfp"];
"1000523" -> "1000541"  [label="DDG: asoc->peer.peer_random"];
"1000529" -> "1000539"  [label="CFG: "];
"1000530" -> "1000529"  [label="AST: "];
"1000533" -> "1000529"  [label="AST: "];
"1000539" -> "1000529"  [label="AST: "];
"1000529" -> "1000645"  [label="DDG: ntohs(param.p->length)"];
"1000529" -> "1000645"  [label="DDG: param.p"];
"1000529" -> "1000645"  [label="DDG: gfp"];
"1000117" -> "1000529"  [label="DDG: param"];
"1000533" -> "1000529"  [label="DDG: param.p->length"];
"1000119" -> "1000529"  [label="DDG: gfp"];
"1000117" -> "1000115"  [label="AST: "];
"1000117" -> "1000645"  [label="DDG: param"];
"1000117" -> "1000187"  [label="DDG: param"];
"1000117" -> "1000439"  [label="DDG: param"];
"1000117" -> "1000441"  [label="DDG: param"];
"1000117" -> "1000495"  [label="DDG: param"];
"1000117" -> "1000566"  [label="DDG: param"];
"1000117" -> "1000589"  [label="DDG: param"];
"1000117" -> "1000608"  [label="DDG: param"];
"1000533" -> "1000534"  [label="CFG: "];
"1000534" -> "1000533"  [label="AST: "];
"1000539" -> "1000533"  [label="CFG: "];
"1000533" -> "1000645"  [label="DDG: param.p->length"];
"1000119" -> "1000115"  [label="AST: "];
"1000119" -> "1000645"  [label="DDG: gfp"];
"1000119" -> "1000212"  [label="DDG: gfp"];
"1000119" -> "1000566"  [label="DDG: gfp"];
"1000119" -> "1000608"  [label="DDG: gfp"];
"1000541" -> "1000540"  [label="AST: "];
"1000541" -> "1000542"  [label="CFG: "];
"1000542" -> "1000541"  [label="AST: "];
"1000549" -> "1000541"  [label="CFG: "];
"1000552" -> "1000541"  [label="CFG: "];
"1000541" -> "1000645"  [label="DDG: asoc->peer.peer_random"];
"1000541" -> "1000645"  [label="DDG: !asoc->peer.peer_random"];
}
