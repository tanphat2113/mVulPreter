digraph "0_krb5_db64ca25d661a47b996b4e2645998b5d7f0eb52c@pointer" {
"1000151" [label="(Call,*server_key = NULL)"];
"1001210" [label="(Call,(char *)server_key)"];
"1001206" [label="(Call,secret.data = (char *)server_key)"];
"1001370" [label="(Call,free(server_key))"];
"1001257" [label="(Call,pkinit_octetstring2key(context, enctype, server_key,\n                                            server_key_len, encrypting_key))"];
"1001255" [label="(Call,retval = pkinit_octetstring2key(context, enctype, server_key,\n                                            server_key_len, encrypting_key))"];
"1001268" [label="(Call,error_message(retval))"];
"1001266" [label="(Call,pkiDebug(\"pkinit_octetstring2key failed: %s\n\",\n                         error_message(retval)))"];
"1001413" [label="(Return,return retval;)"];
"1001345" [label="(Call,pkinit_fini_kdc_req_context(context, reqctx))"];
"1001358" [label="(Call,krb5_free_data(context, encoded_dhkey_info))"];
"1001365" [label="(Call,krb5_free_data(context, encoded_key_pack))"];
"1001262" [label="(Identifier,encrypting_key)"];
"1001145" [label="(Call,retval = k5int_encode_krb5_pa_pk_as_rep_draft9(rep9, &out_data))"];
"1000839" [label="(Call,retval = k5int_encode_krb5_reply_key_pack(key_pack,\n                                                      &encoded_key_pack))"];
"1001371" [label="(Identifier,server_key)"];
"1001215" [label="(Identifier,secret)"];
"1000942" [label="(Call,retval = k5int_encode_krb5_reply_key_pack_draft9(key_pack9,\n                                                                 &encoded_key_pack))"];
"1000768" [label="(Call,retval = ENOMEM)"];
"1001270" [label="(ControlStructure,goto cleanup;)"];
"1000594" [label="(Call,retval = cms_signeddata_create(context, plgctx->cryptoctx,\n                                           reqctx->cryptoctx, plgctx->idctx, CMS_SIGN_SERVER, 1,\n                                           (unsigned char *)encoded_dhkey_info->data,\n                                           encoded_dhkey_info->length,\n                                           &rep->u.dh_Info.dhSignedData.data,\n                                           &rep->u.dh_Info.dhSignedData.length))"];
"1000151" [label="(Call,*server_key = NULL)"];
"1000122" [label="(Block,)"];
"1000348" [label="(Call,retval = ENOMEM)"];
"1001267" [label="(Literal,\"pkinit_octetstring2key failed: %s\n\")"];
"1000696" [label="(Call,retval = krb5_c_make_random_key(context, enctype, encrypting_key))"];
"1000250" [label="(Call,pkinit_find_realm_context(context, moddata, request->server))"];
"1001350" [label="(Identifier,scratch)"];
"1001257" [label="(Call,pkinit_octetstring2key(context, enctype, server_key,\n                                            server_key_len, encrypting_key))"];
"1001345" [label="(Call,pkinit_fini_kdc_req_context(context, reqctx))"];
"1001210" [label="(Call,(char *)server_key)"];
"1001367" [label="(Identifier,encoded_key_pack)"];
"1001366" [label="(Identifier,context)"];
"1001218" [label="(Call,retval = pkinit_alg_agility_kdf(context, &secret,\n                                            rep->u.dh_Info.kdfID,\n                                            request->client, request->server,\n                                            enctype,\n                                            (krb5_octet_data *)req_pkt,\n                                            (krb5_octet_data *)out_data,\n                                            encrypting_key))"];
"1001347" [label="(Identifier,reqctx)"];
"1000646" [label="(Call,retval = cms_signeddata_create(context, plgctx->cryptoctx,\n                                           reqctx->cryptoctx, plgctx->idctx, CMS_SIGN_DRAFT9, 1,\n                                           (unsigned char *)encoded_dhkey_info->data,\n                                           encoded_dhkey_info->length,\n                                           &rep9->u.dhSignedData.data,\n                                           &rep9->u.dhSignedData.length))"];
"1000368" [label="(Call,retval = ENOMEM)"];
"1001207" [label="(Call,secret.data)"];
"1001362" [label="(Call,encoded_key_pack != NULL)"];
"1001365" [label="(Call,krb5_free_data(context, encoded_key_pack))"];
"1000116" [label="(MethodParameterIn,krb5_keyblock * encrypting_key)"];
"1001136" [label="(Call,retval = k5int_encode_krb5_pa_pk_as_rep(rep, &out_data))"];
"1001205" [label="(Block,)"];
"1000864" [label="(Call,retval = cms_envelopeddata_create(context, plgctx->cryptoctx,\n                                              reqctx->cryptoctx, plgctx->idctx, padata->pa_type, 1,\n                                              (unsigned char *)encoded_key_pack->data,\n                                              encoded_key_pack->length,\n                                              &rep->u.encKeyPack.data, &rep->u.encKeyPack.length))"];
"1001256" [label="(Identifier,retval)"];
"1001258" [label="(Identifier,context)"];
"1001220" [label="(Call,pkinit_alg_agility_kdf(context, &secret,\n                                            rep->u.dh_Info.kdfID,\n                                            request->client, request->server,\n                                            enctype,\n                                            (krb5_octet_data *)req_pkt,\n                                            (krb5_octet_data *)out_data,\n                                            encrypting_key))"];
"1000489" [label="(Call,server_process_dh(context, plgctx->cryptoctx,\n                                   reqctx->cryptoctx, plgctx->idctx, subjectPublicKey,\n                                   subjectPublicKey_len, &dh_pubkey, &dh_pubkey_len,\n                                   &server_key, &server_key_len))"];
"1001260" [label="(Identifier,server_key)"];
"1001268" [label="(Call,error_message(retval))"];
"1001269" [label="(Identifier,retval)"];
"1001206" [label="(Call,secret.data = (char *)server_key)"];
"1000153" [label="(Identifier,NULL)"];
"1000920" [label="(Call,retval = ENOMEM)"];
"1000698" [label="(Call,krb5_c_make_random_key(context, enctype, encrypting_key))"];
"1001264" [label="(Identifier,retval)"];
"1000185" [label="(Call,enctype = -1)"];
"1001266" [label="(Call,pkiDebug(\"pkinit_octetstring2key failed: %s\n\",\n                         error_message(retval)))"];
"1000379" [label="(Call,retval = KRB5KDC_ERR_PREAUTH_FAILED)"];
"1000111" [label="(MethodParameterIn,krb5_context context)"];
"1000866" [label="(Call,cms_envelopeddata_create(context, plgctx->cryptoctx,\n                                              reqctx->cryptoctx, plgctx->idctx, padata->pa_type, 1,\n                                              (unsigned char *)encoded_key_pack->data,\n                                              encoded_key_pack->length,\n                                              &rep->u.encKeyPack.data, &rep->u.encKeyPack.length))"];
"1000832" [label="(Call,krb5_copy_keyblock_contents(context, encrypting_key,\n                                        &key_pack->replyKey))"];
"1001359" [label="(Identifier,context)"];
"1001212" [label="(Identifier,server_key)"];
"1000317" [label="(Call,pkiDebug(\"KDC picked etype = %d\n\", enctype))"];
"1000772" [label="(Call,retval = krb5_c_make_checksum(context, 0,\n                                          encrypting_key, KRB5_KEYUSAGE_TGS_REQ_AUTH_CKSUM,\n                                          req_pkt, &key_pack->asChecksum))"];
"1001254" [label="(Block,)"];
"1001259" [label="(Identifier,enctype)"];
"1001105" [label="(Call,pkinit_pick_kdf_alg(context, reqctx->rcv_auth_pack->supportedKDFs,\n                                         &(rep->u.dh_Info.kdfID)))"];
"1000159" [label="(Call,server_key_len = 0)"];
"1001103" [label="(Call,retval = pkinit_pick_kdf_alg(context, reqctx->rcv_auth_pack->supportedKDFs,\n                                         &(rep->u.dh_Info.kdfID)))"];
"1001265" [label="(Block,)"];
"1001358" [label="(Call,krb5_free_data(context, encoded_dhkey_info))"];
"1000935" [label="(Call,krb5_copy_keyblock_contents(context, encrypting_key,\n                                            &key_pack9->replyKey))"];
"1000648" [label="(Call,cms_signeddata_create(context, plgctx->cryptoctx,\n                                           reqctx->cryptoctx, plgctx->idctx, CMS_SIGN_DRAFT9, 1,\n                                           (unsigned char *)encoded_dhkey_info->data,\n                                           encoded_dhkey_info->length,\n                                           &rep9->u.dhSignedData.data,\n                                           &rep9->u.dhSignedData.length))"];
"1001355" [label="(Call,encoded_dhkey_info != NULL)"];
"1000152" [label="(Identifier,server_key)"];
"1000328" [label="(Call,retval = KRB5KDC_ERR_ETYPE_NOSUPP)"];
"1001255" [label="(Call,retval = pkinit_octetstring2key(context, enctype, server_key,\n                                            server_key_len, encrypting_key))"];
"1000156" [label="(Identifier,subjectPublicKey_len)"];
"1001363" [label="(Identifier,encoded_key_pack)"];
"1001006" [label="(Call,error_message(retval))"];
"1001414" [label="(Identifier,retval)"];
"1000959" [label="(Call,retval = cms_envelopeddata_create(context, plgctx->cryptoctx,\n                                              reqctx->cryptoctx, plgctx->idctx, padata->pa_type, 1,\n                                              (unsigned char *)encoded_key_pack->data,\n                                              encoded_key_pack->length,\n                                              &rep9->u.encKeyPack.data, &rep9->u.encKeyPack.length))"];
"1001261" [label="(Identifier,server_key_len)"];
"1001346" [label="(Identifier,context)"];
"1000487" [label="(Call,retval = server_process_dh(context, plgctx->cryptoctx,\n                                   reqctx->cryptoctx, plgctx->idctx, subjectPublicKey,\n                                   subjectPublicKey_len, &dh_pubkey, &dh_pubkey_len,\n                                   &server_key, &server_key_len))"];
"1001354" [label="(ControlStructure,if (encoded_dhkey_info != NULL))"];
"1001361" [label="(ControlStructure,if (encoded_key_pack != NULL))"];
"1000267" [label="(Call,reqctx = (pkinit_kdc_req_context)modreq)"];
"1000961" [label="(Call,cms_envelopeddata_create(context, plgctx->cryptoctx,\n                                              reqctx->cryptoctx, plgctx->idctx, padata->pa_type, 1,\n                                              (unsigned char *)encoded_key_pack->data,\n                                              encoded_key_pack->length,\n                                              &rep9->u.encKeyPack.data, &rep9->u.encKeyPack.length))"];
"1000563" [label="(Call,retval = k5int_encode_krb5_kdc_dh_key_info(&dhkey_info,\n                                                   &encoded_dhkey_info))"];
"1001125" [label="(Call,error_message(retval))"];
"1001370" [label="(Call,free(server_key))"];
"1000312" [label="(Call,krb5_c_valid_enctype(enctype))"];
"1001250" [label="(Call,error_message(retval))"];
"1001415" [label="(MethodReturn,RET)"];
"1001283" [label="(Call,retval = ENOMEM)"];
"1001360" [label="(Identifier,encoded_dhkey_info)"];
"1001413" [label="(Return,return retval;)"];
"1000596" [label="(Call,cms_signeddata_create(context, plgctx->cryptoctx,\n                                           reqctx->cryptoctx, plgctx->idctx, CMS_SIGN_SERVER, 1,\n                                           (unsigned char *)encoded_dhkey_info->data,\n                                           encoded_dhkey_info->length,\n                                           &rep->u.dh_Info.dhSignedData.data,\n                                           &rep->u.dh_Info.dhSignedData.length))"];
"1000774" [label="(Call,krb5_c_make_checksum(context, 0,\n                                          encrypting_key, KRB5_KEYUSAGE_TGS_REQ_AUTH_CKSUM,\n                                          req_pkt, &key_pack->asChecksum))"];
"1001369" [label="(Identifier,dh_pubkey)"];
"1000151" -> "1000122"  [label="AST: "];
"1000151" -> "1000153"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000153" -> "1000151"  [label="AST: "];
"1000156" -> "1000151"  [label="CFG: "];
"1000151" -> "1001415"  [label="DDG: "];
"1000151" -> "1001210"  [label="DDG: "];
"1000151" -> "1001257"  [label="DDG: "];
"1000151" -> "1001370"  [label="DDG: "];
"1001210" -> "1001206"  [label="AST: "];
"1001210" -> "1001212"  [label="CFG: "];
"1001211" -> "1001210"  [label="AST: "];
"1001212" -> "1001210"  [label="AST: "];
"1001206" -> "1001210"  [label="CFG: "];
"1001210" -> "1001206"  [label="DDG: "];
"1001210" -> "1001370"  [label="DDG: "];
"1001206" -> "1001205"  [label="AST: "];
"1001207" -> "1001206"  [label="AST: "];
"1001215" -> "1001206"  [label="CFG: "];
"1001206" -> "1001415"  [label="DDG: "];
"1001206" -> "1001415"  [label="DDG: "];
"1001370" -> "1000122"  [label="AST: "];
"1001370" -> "1001371"  [label="CFG: "];
"1001371" -> "1001370"  [label="AST: "];
"1001374" -> "1001370"  [label="CFG: "];
"1001370" -> "1001415"  [label="DDG: "];
"1001257" -> "1001370"  [label="DDG: "];
"1001257" -> "1001255"  [label="AST: "];
"1001257" -> "1001262"  [label="CFG: "];
"1001258" -> "1001257"  [label="AST: "];
"1001259" -> "1001257"  [label="AST: "];
"1001260" -> "1001257"  [label="AST: "];
"1001261" -> "1001257"  [label="AST: "];
"1001262" -> "1001257"  [label="AST: "];
"1001255" -> "1001257"  [label="CFG: "];
"1001257" -> "1001415"  [label="DDG: "];
"1001257" -> "1001415"  [label="DDG: "];
"1001257" -> "1001415"  [label="DDG: "];
"1001257" -> "1001255"  [label="DDG: "];
"1001257" -> "1001255"  [label="DDG: "];
"1001257" -> "1001255"  [label="DDG: "];
"1001257" -> "1001255"  [label="DDG: "];
"1001257" -> "1001255"  [label="DDG: "];
"1000866" -> "1001257"  [label="DDG: "];
"1000250" -> "1001257"  [label="DDG: "];
"1000596" -> "1001257"  [label="DDG: "];
"1000698" -> "1001257"  [label="DDG: "];
"1000698" -> "1001257"  [label="DDG: "];
"1000698" -> "1001257"  [label="DDG: "];
"1000961" -> "1001257"  [label="DDG: "];
"1000648" -> "1001257"  [label="DDG: "];
"1000489" -> "1001257"  [label="DDG: "];
"1000832" -> "1001257"  [label="DDG: "];
"1000832" -> "1001257"  [label="DDG: "];
"1001105" -> "1001257"  [label="DDG: "];
"1000111" -> "1001257"  [label="DDG: "];
"1000185" -> "1001257"  [label="DDG: "];
"1000312" -> "1001257"  [label="DDG: "];
"1000317" -> "1001257"  [label="DDG: "];
"1000159" -> "1001257"  [label="DDG: "];
"1000935" -> "1001257"  [label="DDG: "];
"1000116" -> "1001257"  [label="DDG: "];
"1001257" -> "1001345"  [label="DDG: "];
"1001255" -> "1001254"  [label="AST: "];
"1001256" -> "1001255"  [label="AST: "];
"1001264" -> "1001255"  [label="CFG: "];
"1001255" -> "1001415"  [label="DDG: "];
"1001255" -> "1001415"  [label="DDG: "];
"1001255" -> "1001268"  [label="DDG: "];
"1001255" -> "1001413"  [label="DDG: "];
"1001268" -> "1001266"  [label="AST: "];
"1001268" -> "1001269"  [label="CFG: "];
"1001269" -> "1001268"  [label="AST: "];
"1001266" -> "1001268"  [label="CFG: "];
"1001268" -> "1001415"  [label="DDG: "];
"1001268" -> "1001266"  [label="DDG: "];
"1001268" -> "1001413"  [label="DDG: "];
"1001266" -> "1001265"  [label="AST: "];
"1001267" -> "1001266"  [label="AST: "];
"1001270" -> "1001266"  [label="CFG: "];
"1001266" -> "1001415"  [label="DDG: "];
"1001266" -> "1001415"  [label="DDG: "];
"1001413" -> "1000122"  [label="AST: "];
"1001413" -> "1001414"  [label="CFG: "];
"1001414" -> "1001413"  [label="AST: "];
"1001415" -> "1001413"  [label="CFG: "];
"1001413" -> "1001415"  [label="DDG: "];
"1001414" -> "1001413"  [label="DDG: "];
"1000368" -> "1001413"  [label="DDG: "];
"1000772" -> "1001413"  [label="DDG: "];
"1000594" -> "1001413"  [label="DDG: "];
"1001136" -> "1001413"  [label="DDG: "];
"1001103" -> "1001413"  [label="DDG: "];
"1000379" -> "1001413"  [label="DDG: "];
"1000942" -> "1001413"  [label="DDG: "];
"1000328" -> "1001413"  [label="DDG: "];
"1001218" -> "1001413"  [label="DDG: "];
"1000959" -> "1001413"  [label="DDG: "];
"1001283" -> "1001413"  [label="DDG: "];
"1000839" -> "1001413"  [label="DDG: "];
"1001250" -> "1001413"  [label="DDG: "];
"1000348" -> "1001413"  [label="DDG: "];
"1000696" -> "1001413"  [label="DDG: "];
"1000864" -> "1001413"  [label="DDG: "];
"1000487" -> "1001413"  [label="DDG: "];
"1000920" -> "1001413"  [label="DDG: "];
"1000646" -> "1001413"  [label="DDG: "];
"1001006" -> "1001413"  [label="DDG: "];
"1001145" -> "1001413"  [label="DDG: "];
"1000768" -> "1001413"  [label="DDG: "];
"1001125" -> "1001413"  [label="DDG: "];
"1000563" -> "1001413"  [label="DDG: "];
"1001345" -> "1000122"  [label="AST: "];
"1001345" -> "1001347"  [label="CFG: "];
"1001346" -> "1001345"  [label="AST: "];
"1001347" -> "1001345"  [label="AST: "];
"1001350" -> "1001345"  [label="CFG: "];
"1001345" -> "1001415"  [label="DDG: "];
"1001345" -> "1001415"  [label="DDG: "];
"1001345" -> "1001415"  [label="DDG: "];
"1001220" -> "1001345"  [label="DDG: "];
"1000866" -> "1001345"  [label="DDG: "];
"1000250" -> "1001345"  [label="DDG: "];
"1000935" -> "1001345"  [label="DDG: "];
"1000596" -> "1001345"  [label="DDG: "];
"1000698" -> "1001345"  [label="DDG: "];
"1000961" -> "1001345"  [label="DDG: "];
"1000648" -> "1001345"  [label="DDG: "];
"1000489" -> "1001345"  [label="DDG: "];
"1000774" -> "1001345"  [label="DDG: "];
"1000832" -> "1001345"  [label="DDG: "];
"1001105" -> "1001345"  [label="DDG: "];
"1000111" -> "1001345"  [label="DDG: "];
"1000267" -> "1001345"  [label="DDG: "];
"1001345" -> "1001358"  [label="DDG: "];
"1001345" -> "1001365"  [label="DDG: "];
"1001358" -> "1001354"  [label="AST: "];
"1001358" -> "1001360"  [label="CFG: "];
"1001359" -> "1001358"  [label="AST: "];
"1001360" -> "1001358"  [label="AST: "];
"1001363" -> "1001358"  [label="CFG: "];
"1001358" -> "1001415"  [label="DDG: "];
"1001358" -> "1001415"  [label="DDG: "];
"1001358" -> "1001415"  [label="DDG: "];
"1000111" -> "1001358"  [label="DDG: "];
"1001355" -> "1001358"  [label="DDG: "];
"1001358" -> "1001365"  [label="DDG: "];
"1001365" -> "1001361"  [label="AST: "];
"1001365" -> "1001367"  [label="CFG: "];
"1001366" -> "1001365"  [label="AST: "];
"1001367" -> "1001365"  [label="AST: "];
"1001369" -> "1001365"  [label="CFG: "];
"1001365" -> "1001415"  [label="DDG: "];
"1001365" -> "1001415"  [label="DDG: "];
"1001365" -> "1001415"  [label="DDG: "];
"1000111" -> "1001365"  [label="DDG: "];
"1001362" -> "1001365"  [label="DDG: "];
}
