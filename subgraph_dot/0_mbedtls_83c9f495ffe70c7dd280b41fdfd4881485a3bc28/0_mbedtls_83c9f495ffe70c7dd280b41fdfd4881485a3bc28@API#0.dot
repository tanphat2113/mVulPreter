digraph "0_mbedtls_83c9f495ffe70c7dd280b41fdfd4881485a3bc28@API" {
"1000273" [label="(Call,mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,\n                                        MBEDTLS_SSL_ALERT_MSG_UNKNOWN_PSK_IDENTITY ))"];
"1000222" [label="(Call,ssl->conf->f_psk( ssl->conf->p_psk, ssl, *p, n ))"];
"1000103" [label="(MethodParameterIn,mbedtls_ssl_context *ssl)"];
"1000184" [label="(Call,*p += 2)"];
"1000173" [label="(Call,( (*p)[0] << 8 ) | (*p)[1])"];
"1000174" [label="(Call,(*p)[0] << 8)"];
"1000160" [label="(Call,end - *p)"];
"1000105" [label="(MethodParameterIn,const unsigned char *end)"];
"1000201" [label="(Call,end - *p)"];
"1000194" [label="(Call,n > 65535)"];
"1000190" [label="(Call,n < 1)"];
"1000171" [label="(Call,n = ( (*p)[0] << 8 ) | (*p)[1])"];
"1000197" [label="(Call,n > (size_t) ( end - *p ))"];
"1000199" [label="(Call,(size_t) ( end - *p ))"];
"1000285" [label="(MethodReturn,static int)"];
"1000201" [label="(Call,end - *p)"];
"1000273" [label="(Call,mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,\n                                        MBEDTLS_SSL_ALERT_MSG_UNKNOWN_PSK_IDENTITY ))"];
"1000185" [label="(Call,*p)"];
"1000179" [label="(Literal,8)"];
"1000164" [label="(Literal,2)"];
"1000279" [label="(Call,*p += n)"];
"1000105" [label="(MethodParameterIn,const unsigned char *end)"];
"1000184" [label="(Call,*p += 2)"];
"1000171" [label="(Call,n = ( (*p)[0] << 8 ) | (*p)[1])"];
"1000228" [label="(Identifier,ssl)"];
"1000197" [label="(Call,n > (size_t) ( end - *p ))"];
"1000232" [label="(Literal,0)"];
"1000222" [label="(Call,ssl->conf->f_psk( ssl->conf->p_psk, ssl, *p, n ))"];
"1000223" [label="(Call,ssl->conf->p_psk)"];
"1000191" [label="(Identifier,n)"];
"1000159" [label="(Call,end - *p < 2)"];
"1000267" [label="(Call,MBEDTLS_SSL_DEBUG_BUF( 3, \"Unknown PSK identity\", *p, n ))"];
"1000180" [label="(Call,(*p)[1])"];
"1000186" [label="(Identifier,p)"];
"1000190" [label="(Call,n < 1)"];
"1000274" [label="(Identifier,ssl)"];
"1000187" [label="(Literal,2)"];
"1000106" [label="(Block,)"];
"1000199" [label="(Call,(size_t) ( end - *p ))"];
"1000202" [label="(Identifier,end)"];
"1000248" [label="(Call,mbedtls_ssl_safer_memcmp( ssl->conf->psk_identity, *p, n ))"];
"1000275" [label="(Identifier,MBEDTLS_SSL_ALERT_LEVEL_FATAL)"];
"1000172" [label="(Identifier,n)"];
"1000162" [label="(Call,*p)"];
"1000229" [label="(Call,*p)"];
"1000221" [label="(Call,ssl->conf->f_psk( ssl->conf->p_psk, ssl, *p, n ) != 0)"];
"1000182" [label="(Identifier,p)"];
"1000203" [label="(Call,*p)"];
"1000193" [label="(Call,n > 65535 || n > (size_t) ( end - *p ))"];
"1000266" [label="(Block,)"];
"1000278" [label="(Identifier,MBEDTLS_ERR_SSL_UNKNOWN_IDENTITY)"];
"1000174" [label="(Call,(*p)[0] << 8)"];
"1000240" [label="(Call,n != ssl->conf->psk_identity_len)"];
"1000196" [label="(Literal,65535)"];
"1000192" [label="(Literal,1)"];
"1000173" [label="(Call,( (*p)[0] << 8 ) | (*p)[1])"];
"1000103" [label="(MethodParameterIn,mbedtls_ssl_context *ssl)"];
"1000195" [label="(Identifier,n)"];
"1000175" [label="(Call,(*p)[0])"];
"1000189" [label="(Call,n < 1 || n > 65535 || n > (size_t) ( end - *p ))"];
"1000194" [label="(Call,n > 65535)"];
"1000198" [label="(Identifier,n)"];
"1000231" [label="(Identifier,n)"];
"1000161" [label="(Identifier,end)"];
"1000160" [label="(Call,end - *p)"];
"1000276" [label="(Identifier,MBEDTLS_SSL_ALERT_MSG_UNKNOWN_PSK_IDENTITY)"];
"1000273" -> "1000266"  [label="AST: "];
"1000273" -> "1000276"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000275" -> "1000273"  [label="AST: "];
"1000276" -> "1000273"  [label="AST: "];
"1000278" -> "1000273"  [label="CFG: "];
"1000273" -> "1000285"  [label="DDG: MBEDTLS_SSL_ALERT_MSG_UNKNOWN_PSK_IDENTITY"];
"1000273" -> "1000285"  [label="DDG: MBEDTLS_SSL_ALERT_LEVEL_FATAL"];
"1000273" -> "1000285"  [label="DDG: ssl"];
"1000273" -> "1000285"  [label="DDG: mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,\n                                        MBEDTLS_SSL_ALERT_MSG_UNKNOWN_PSK_IDENTITY )"];
"1000222" -> "1000273"  [label="DDG: ssl"];
"1000103" -> "1000273"  [label="DDG: ssl"];
"1000222" -> "1000221"  [label="AST: "];
"1000222" -> "1000231"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000228" -> "1000222"  [label="AST: "];
"1000229" -> "1000222"  [label="AST: "];
"1000231" -> "1000222"  [label="AST: "];
"1000232" -> "1000222"  [label="CFG: "];
"1000222" -> "1000285"  [label="DDG: ssl->conf->p_psk"];
"1000222" -> "1000285"  [label="DDG: ssl"];
"1000222" -> "1000221"  [label="DDG: ssl->conf->p_psk"];
"1000222" -> "1000221"  [label="DDG: ssl"];
"1000222" -> "1000221"  [label="DDG: *p"];
"1000222" -> "1000221"  [label="DDG: n"];
"1000103" -> "1000222"  [label="DDG: ssl"];
"1000184" -> "1000222"  [label="DDG: *p"];
"1000174" -> "1000222"  [label="DDG: (*p)[0]"];
"1000201" -> "1000222"  [label="DDG: *p"];
"1000173" -> "1000222"  [label="DDG: (*p)[1]"];
"1000194" -> "1000222"  [label="DDG: n"];
"1000190" -> "1000222"  [label="DDG: n"];
"1000197" -> "1000222"  [label="DDG: n"];
"1000222" -> "1000267"  [label="DDG: *p"];
"1000222" -> "1000267"  [label="DDG: n"];
"1000222" -> "1000279"  [label="DDG: n"];
"1000222" -> "1000279"  [label="DDG: *p"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000285"  [label="DDG: ssl"];
"1000184" -> "1000106"  [label="AST: "];
"1000184" -> "1000187"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000187" -> "1000184"  [label="AST: "];
"1000191" -> "1000184"  [label="CFG: "];
"1000184" -> "1000285"  [label="DDG: *p"];
"1000173" -> "1000184"  [label="DDG: (*p)[1]"];
"1000160" -> "1000184"  [label="DDG: *p"];
"1000174" -> "1000184"  [label="DDG: (*p)[0]"];
"1000184" -> "1000201"  [label="DDG: *p"];
"1000184" -> "1000248"  [label="DDG: *p"];
"1000184" -> "1000267"  [label="DDG: *p"];
"1000184" -> "1000279"  [label="DDG: *p"];
"1000173" -> "1000171"  [label="AST: "];
"1000173" -> "1000180"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000180" -> "1000173"  [label="AST: "];
"1000171" -> "1000173"  [label="CFG: "];
"1000173" -> "1000285"  [label="DDG: (*p)[1]"];
"1000173" -> "1000285"  [label="DDG: (*p)[0] << 8"];
"1000173" -> "1000171"  [label="DDG: (*p)[0] << 8"];
"1000173" -> "1000171"  [label="DDG: (*p)[1]"];
"1000174" -> "1000173"  [label="DDG: (*p)[0]"];
"1000174" -> "1000173"  [label="DDG: 8"];
"1000173" -> "1000201"  [label="DDG: (*p)[1]"];
"1000173" -> "1000248"  [label="DDG: (*p)[1]"];
"1000173" -> "1000267"  [label="DDG: (*p)[1]"];
"1000173" -> "1000279"  [label="DDG: (*p)[1]"];
"1000174" -> "1000179"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000179" -> "1000174"  [label="AST: "];
"1000182" -> "1000174"  [label="CFG: "];
"1000174" -> "1000285"  [label="DDG: (*p)[0]"];
"1000174" -> "1000201"  [label="DDG: (*p)[0]"];
"1000174" -> "1000248"  [label="DDG: (*p)[0]"];
"1000174" -> "1000267"  [label="DDG: (*p)[0]"];
"1000174" -> "1000279"  [label="DDG: (*p)[0]"];
"1000160" -> "1000159"  [label="AST: "];
"1000160" -> "1000162"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000162" -> "1000160"  [label="AST: "];
"1000164" -> "1000160"  [label="CFG: "];
"1000160" -> "1000285"  [label="DDG: *p"];
"1000160" -> "1000285"  [label="DDG: end"];
"1000160" -> "1000159"  [label="DDG: end"];
"1000160" -> "1000159"  [label="DDG: *p"];
"1000105" -> "1000160"  [label="DDG: end"];
"1000160" -> "1000201"  [label="DDG: end"];
"1000105" -> "1000102"  [label="AST: "];
"1000105" -> "1000285"  [label="DDG: end"];
"1000105" -> "1000201"  [label="DDG: end"];
"1000201" -> "1000199"  [label="AST: "];
"1000201" -> "1000203"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000203" -> "1000201"  [label="AST: "];
"1000199" -> "1000201"  [label="CFG: "];
"1000201" -> "1000285"  [label="DDG: *p"];
"1000201" -> "1000285"  [label="DDG: end"];
"1000201" -> "1000199"  [label="DDG: end"];
"1000201" -> "1000199"  [label="DDG: *p"];
"1000201" -> "1000248"  [label="DDG: *p"];
"1000201" -> "1000267"  [label="DDG: *p"];
"1000201" -> "1000279"  [label="DDG: *p"];
"1000194" -> "1000193"  [label="AST: "];
"1000194" -> "1000196"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000196" -> "1000194"  [label="AST: "];
"1000198" -> "1000194"  [label="CFG: "];
"1000193" -> "1000194"  [label="CFG: "];
"1000194" -> "1000285"  [label="DDG: n"];
"1000194" -> "1000193"  [label="DDG: n"];
"1000194" -> "1000193"  [label="DDG: 65535"];
"1000190" -> "1000194"  [label="DDG: n"];
"1000194" -> "1000197"  [label="DDG: n"];
"1000194" -> "1000240"  [label="DDG: n"];
"1000190" -> "1000189"  [label="AST: "];
"1000190" -> "1000192"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000192" -> "1000190"  [label="AST: "];
"1000195" -> "1000190"  [label="CFG: "];
"1000189" -> "1000190"  [label="CFG: "];
"1000190" -> "1000285"  [label="DDG: n"];
"1000190" -> "1000189"  [label="DDG: n"];
"1000190" -> "1000189"  [label="DDG: 1"];
"1000171" -> "1000190"  [label="DDG: n"];
"1000190" -> "1000240"  [label="DDG: n"];
"1000171" -> "1000106"  [label="AST: "];
"1000172" -> "1000171"  [label="AST: "];
"1000186" -> "1000171"  [label="CFG: "];
"1000171" -> "1000285"  [label="DDG: ( (*p)[0] << 8 ) | (*p)[1]"];
"1000197" -> "1000193"  [label="AST: "];
"1000197" -> "1000199"  [label="CFG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000199" -> "1000197"  [label="AST: "];
"1000193" -> "1000197"  [label="CFG: "];
"1000197" -> "1000285"  [label="DDG: (size_t) ( end - *p )"];
"1000197" -> "1000285"  [label="DDG: n"];
"1000197" -> "1000193"  [label="DDG: n"];
"1000197" -> "1000193"  [label="DDG: (size_t) ( end - *p )"];
"1000199" -> "1000197"  [label="DDG: end - *p"];
"1000197" -> "1000240"  [label="DDG: n"];
"1000200" -> "1000199"  [label="AST: "];
"1000199" -> "1000285"  [label="DDG: end - *p"];
}
