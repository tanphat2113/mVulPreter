digraph "0_Android_295c883fe3105b19bcd0f9e07d54c6b589fc5bff@pointer" {
"1000199" [label="(Call,*name = data.readCString())"];
"1000214" [label="(Call,allocateNode(name, observer, &node))"];
"1000212" [label="(Call,err = allocateNode(name, observer, &node))"];
"1000219" [label="(Call,reply->writeInt32(err))"];
"1000222" [label="(Call,err == OK)"];
"1000217" [label="(Call,&node)"];
"1000224" [label="(Identifier,OK)"];
"1000193" [label="(Block,)"];
"1000203" [label="(Call,observer =\n                interface_cast<IOMXObserver>(data.readStrongBinder()))"];
"1000213" [label="(Identifier,err)"];
"1000201" [label="(Call,data.readCString())"];
"1000200" [label="(Identifier,name)"];
"1000212" [label="(Call,err = allocateNode(name, observer, &node))"];
"1000223" [label="(Identifier,err)"];
"1000220" [label="(Identifier,err)"];
"1000231" [label="(Identifier,NO_ERROR)"];
"1000214" [label="(Call,allocateNode(name, observer, &node))"];
"1000221" [label="(ControlStructure,if (err == OK))"];
"1000219" [label="(Call,reply->writeInt32(err))"];
"1000199" [label="(Call,*name = data.readCString())"];
"1000215" [label="(Identifier,name)"];
"1000204" [label="(Identifier,observer)"];
"1000222" [label="(Call,err == OK)"];
"1000216" [label="(Identifier,observer)"];
"1001343" [label="(MethodReturn,status_t)"];
"1000199" -> "1000193"  [label="AST: "];
"1000199" -> "1000201"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000201" -> "1000199"  [label="AST: "];
"1000204" -> "1000199"  [label="CFG: "];
"1000199" -> "1001343"  [label="DDG: data.readCString()"];
"1000199" -> "1000214"  [label="DDG: name"];
"1000214" -> "1000212"  [label="AST: "];
"1000214" -> "1000217"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000216" -> "1000214"  [label="AST: "];
"1000217" -> "1000214"  [label="AST: "];
"1000212" -> "1000214"  [label="CFG: "];
"1000214" -> "1001343"  [label="DDG: observer"];
"1000214" -> "1001343"  [label="DDG: &node"];
"1000214" -> "1001343"  [label="DDG: name"];
"1000214" -> "1000212"  [label="DDG: name"];
"1000214" -> "1000212"  [label="DDG: observer"];
"1000214" -> "1000212"  [label="DDG: &node"];
"1000203" -> "1000214"  [label="DDG: observer"];
"1000212" -> "1000193"  [label="AST: "];
"1000213" -> "1000212"  [label="AST: "];
"1000220" -> "1000212"  [label="CFG: "];
"1000212" -> "1001343"  [label="DDG: allocateNode(name, observer, &node)"];
"1000212" -> "1000219"  [label="DDG: err"];
"1000219" -> "1000193"  [label="AST: "];
"1000219" -> "1000220"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000223" -> "1000219"  [label="CFG: "];
"1000219" -> "1001343"  [label="DDG: reply->writeInt32(err)"];
"1000219" -> "1000222"  [label="DDG: err"];
"1000222" -> "1000221"  [label="AST: "];
"1000222" -> "1000224"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000224" -> "1000222"  [label="AST: "];
"1000228" -> "1000222"  [label="CFG: "];
"1000231" -> "1000222"  [label="CFG: "];
"1000222" -> "1001343"  [label="DDG: err"];
"1000222" -> "1001343"  [label="DDG: err == OK"];
"1000222" -> "1001343"  [label="DDG: OK"];
}
