digraph "0_Android_295c883fe3105b19bcd0f9e07d54c6b589fc5bff@API" {
"1001268" [label="(Call,range_offset = data.readInt32())"];
"1001290" [label="(Call,emptyBuffer(\n                    node, buffer, range_offset, range_length, flags, timestamp, fenceFd))"];
"1001289" [label="(Call,reply->writeInt32(emptyBuffer(\n                    node, buffer, range_offset, range_length, flags, timestamp, fenceFd)))"];
"1001276" [label="(Call,flags = data.readInt32())"];
"1001299" [label="(Identifier,NO_ERROR)"];
"1001289" [label="(Call,reply->writeInt32(emptyBuffer(\n                    node, buffer, range_offset, range_length, flags, timestamp, fenceFd)))"];
"1001290" [label="(Call,emptyBuffer(\n                    node, buffer, range_offset, range_length, flags, timestamp, fenceFd))"];
"1001291" [label="(Identifier,node)"];
"1001292" [label="(Identifier,buffer)"];
"1000113" [label="(MethodParameterIn,uint32_t flags)"];
"1001293" [label="(Identifier,range_offset)"];
"1001295" [label="(Identifier,flags)"];
"1001250" [label="(Block,)"];
"1001297" [label="(Identifier,fenceFd)"];
"1001268" [label="(Call,range_offset = data.readInt32())"];
"1001272" [label="(Call,range_length = data.readInt32())"];
"1001273" [label="(Identifier,range_length)"];
"1001294" [label="(Identifier,range_length)"];
"1001262" [label="(Call,buffer = (buffer_id)data.readInt32())"];
"1001280" [label="(Call,timestamp = data.readInt64())"];
"1001256" [label="(Call,node = (node_id)data.readInt32())"];
"1001269" [label="(Identifier,range_offset)"];
"1001296" [label="(Identifier,timestamp)"];
"1001270" [label="(Call,data.readInt32())"];
"1001343" [label="(MethodReturn,status_t)"];
"1001268" -> "1001250"  [label="AST: "];
"1001268" -> "1001270"  [label="CFG: "];
"1001269" -> "1001268"  [label="AST: "];
"1001270" -> "1001268"  [label="AST: "];
"1001273" -> "1001268"  [label="CFG: "];
"1001268" -> "1001290"  [label="DDG: range_offset"];
"1001290" -> "1001289"  [label="AST: "];
"1001290" -> "1001297"  [label="CFG: "];
"1001291" -> "1001290"  [label="AST: "];
"1001292" -> "1001290"  [label="AST: "];
"1001293" -> "1001290"  [label="AST: "];
"1001294" -> "1001290"  [label="AST: "];
"1001295" -> "1001290"  [label="AST: "];
"1001296" -> "1001290"  [label="AST: "];
"1001297" -> "1001290"  [label="AST: "];
"1001289" -> "1001290"  [label="CFG: "];
"1001290" -> "1001343"  [label="DDG: flags"];
"1001290" -> "1001343"  [label="DDG: timestamp"];
"1001290" -> "1001343"  [label="DDG: range_length"];
"1001290" -> "1001343"  [label="DDG: range_offset"];
"1001290" -> "1001343"  [label="DDG: buffer"];
"1001290" -> "1001343"  [label="DDG: fenceFd"];
"1001290" -> "1001343"  [label="DDG: node"];
"1001290" -> "1001289"  [label="DDG: range_length"];
"1001290" -> "1001289"  [label="DDG: buffer"];
"1001290" -> "1001289"  [label="DDG: fenceFd"];
"1001290" -> "1001289"  [label="DDG: timestamp"];
"1001290" -> "1001289"  [label="DDG: node"];
"1001290" -> "1001289"  [label="DDG: flags"];
"1001290" -> "1001289"  [label="DDG: range_offset"];
"1001256" -> "1001290"  [label="DDG: node"];
"1001262" -> "1001290"  [label="DDG: buffer"];
"1001272" -> "1001290"  [label="DDG: range_length"];
"1001276" -> "1001290"  [label="DDG: flags"];
"1000113" -> "1001290"  [label="DDG: flags"];
"1001280" -> "1001290"  [label="DDG: timestamp"];
"1001289" -> "1001250"  [label="AST: "];
"1001299" -> "1001289"  [label="CFG: "];
"1001289" -> "1001343"  [label="DDG: emptyBuffer(\n                    node, buffer, range_offset, range_length, flags, timestamp, fenceFd)"];
"1001289" -> "1001343"  [label="DDG: reply->writeInt32(emptyBuffer(\n                    node, buffer, range_offset, range_length, flags, timestamp, fenceFd))"];
}
