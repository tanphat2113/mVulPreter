digraph "0_openssl_103b171d8fc282ef435f8de9afbf7782e312961f_3@API" {
"1000383" [label="(Call,dtls1_read_failed(s, ret))"];
"1000374" [label="(Call,dtls1_get_record(s))"];
"1000355" [label="(Call,dtls1_handle_timeout(s))"];
"1001220" [label="(Call,SSL_in_init(s))"];
"1001204" [label="(Call,dtls1_retransmit_message(s,\n\t\t\t\t\t\t\t\t\t\t dtls1_get_queue_priority(frag->msg_header.seq, 0),\n\t\t\t\t\t\t\t\t\t\t frag_off, &found))"];
"1001067" [label="(Call,s->msg_callback(0, s->version, SSL3_RT_ALERT, \n\t\t\t\ts->d1->alert_fragment, 2, s, s->msg_callback_arg))"];
"1000916" [label="(Call,s->msg_callback(0, s->version, SSL3_RT_HANDSHAKE, \n\t\t\t\ts->d1->handshake_fragment, 4, s, s->msg_callback_arg))"];
"1001598" [label="(Call,s->version == TLS1_VERSION)"];
"1001414" [label="(Call,s->version == DTLS1_BAD_VER)"];
"1001323" [label="(Call,s->version == DTLS1_BAD_VER)"];
"1001368" [label="(Call,s->msg_callback(0, s->version, SSL3_RT_CHANGE_CIPHER_SPEC, \n\t\t\t\trr->data, 1, s, s->msg_callback_arg))"];
"1001305" [label="(Call,rr->type == SSL3_RT_CHANGE_CIPHER_SPEC)"];
"1000672" [label="(Call,rr->type == SSL3_RT_ALERT)"];
"1000641" [label="(Call,rr->type == SSL3_RT_HANDSHAKE)"];
"1000473" [label="(Call,type == rr->type)"];
"1000216" [label="(Call,have_handshake_fragment(s, type, buf, len, peek))"];
"1000185" [label="(Call,ssl3_setup_buffers(s))"];
"1000157" [label="(MethodParameterIn,SSL *s)"];
"1000192" [label="(Call,type && (type != SSL3_RT_APPLICATION_DATA) && \n\t\t(type != SSL3_RT_HANDSHAKE))"];
"1000198" [label="(Call,type != SSL3_RT_HANDSHAKE)"];
"1000195" [label="(Call,type != SSL3_RT_APPLICATION_DATA)"];
"1000158" [label="(MethodParameterIn,int type)"];
"1000194" [label="(Call,(type != SSL3_RT_APPLICATION_DATA) && \n\t\t(type != SSL3_RT_HANDSHAKE))"];
"1000203" [label="(Call,type != SSL3_RT_APPLICATION_DATA)"];
"1000159" [label="(MethodParameterIn,unsigned char *buf)"];
"1000160" [label="(MethodParameterIn,int len)"];
"1000201" [label="(Call,peek && (type != SSL3_RT_APPLICATION_DATA))"];
"1000161" [label="(MethodParameterIn,int peek)"];
"1000401" [label="(Call,rr->type != SSL3_RT_HANDSHAKE)"];
"1000420" [label="(Call,rr->type != SSL3_RT_HANDSHAKE)"];
"1000732" [label="(Call,rr->type != SSL3_RT_CHANGE_CIPHER_SPEC)"];
"1000703" [label="(Call,rr->type == TLS1_RT_HEARTBEAT)"];
"1001316" [label="(Call,dtls1_get_ccs_header(rr->data, &ccs_hdr))"];
"1001447" [label="(Call,dtls1_get_message_header(rr->data, &msg_hdr))"];
"1001344" [label="(Call,rr->data[0] != SSL3_MT_CCS)"];
"1000886" [label="(Call,s->d1->handshake_fragment[2] != 0)"];
"1000895" [label="(Call,s->d1->handshake_fragment[3] != 0)"];
"1000844" [label="(Call,s->d1->handshake_fragment[0] == SSL3_MT_HELLO_REQUEST)"];
"1000876" [label="(Call,s->d1->handshake_fragment[1] != 0)"];
"1001122" [label="(Call,cb(s, SSL_CB_READ_ALERT, j))"];
"1001115" [label="(Call,j = (alert_level << 8) | alert_descr)"];
"1001117" [label="(Call,(alert_level << 8) | alert_descr)"];
"1001118" [label="(Call,alert_level << 8)"];
"1001037" [label="(Call,alert_level = s->d1->alert_fragment[0])"];
"1001047" [label="(Call,alert_descr = s->d1->alert_fragment[1])"];
"1001206" [label="(Call,dtls1_get_queue_priority(frag->msg_header.seq, 0))"];
"1001201" [label="(Call,n2l3(p, frag_off))"];
"1001198" [label="(Call,n2s(p, seq))"];
"1001188" [label="(Call,*p = &(s->d1->alert_fragment[2]))"];
"1000971" [label="(Call,s->handshake_func(s))"];
"1000966" [label="(Call,ssl3_renegotiate_check(s))"];
"1000963" [label="(Call,ssl3_renegotiate(s))"];
"1000934" [label="(Call,SSL_is_init_finished(s))"];
"1000235" [label="(Call,SSL_get_rbio(s))"];
"1000231" [label="(Call,SSL_in_init(s))"];
"1000383" [label="(Call,dtls1_read_failed(s, ret))"];
"1000377" [label="(Call,ret <= 0)"];
"1000372" [label="(Call,ret=dtls1_get_record(s))"];
"1001535" [label="(Call,s->handshake_func(s))"];
"1000428" [label="(Call,dtls1_buffer_record(s, &(s->d1->buffered_app_data), rr->seq_num))"];
"1001223" [label="(Call,ssl3_send_alert(s,SSL3_AL_WARNING,\n\t\t\t\t\t\tDTLS1_AD_MISSING_HANDSHAKE_MESSAGE))"];
"1001181" [label="(Call,alert_descr == DTLS1_AD_MISSING_HANDSHAKE_MESSAGE)"];
"1001139" [label="(Call,alert_descr == SSL_AD_CLOSE_NOTIFY)"];
"1000259" [label="(Call,s->handshake_func(s))"];
"1001426" [label="(Call,SSL_get_wbio(s))"];
"1001410" [label="(Call,dtls1_reset_seq_numbers(s, SSL3_CC_READ))"];
"1001407" [label="(Call,ssl3_do_change_cipher_spec(s))"];
"1001485" [label="(Call,dtls1_retransmit_buffered_messages(s))"];
"1001479" [label="(Call,dtls1_check_timeout_num(s))"];
"1000344" [label="(Call,dtls1_copy_record(s, item))"];
"1000333" [label="(Call,SSL_get_rbio(s))"];
"1000321" [label="(Call,SSL_get_rbio(s))"];
"1000306" [label="(Call,item = pqueue_pop(s->d1->buffered_app_data.q))"];
"1000308" [label="(Call,pqueue_pop(s->d1->buffered_app_data.q))"];
"1000320" [label="(Call,BIO_dgram_is_sctp(SSL_get_rbio(s)))"];
"1000332" [label="(Call,BIO_ctrl(SSL_get_rbio(s), BIO_CTRL_DGRAM_SCTP_SET_RCVINFO, sizeof(rdata->recordinfo), &rdata->recordinfo))"];
"1000351" [label="(Call,pitem_free(item))"];
"1000354" [label="(Call,dtls1_handle_timeout(s) > 0)"];
"1000381" [label="(Call,ret = dtls1_read_failed(s, ret))"];
"1000387" [label="(Call,ret <= 0)"];
"1000390" [label="(Return,return(ret);)"];
"1000427" [label="(Call,dtls1_buffer_record(s, &(s->d1->buffered_app_data), rr->seq_num)<0)"];
"1000481" [label="(Call,SSL_in_init(s))"];
"1000480" [label="(Call,SSL_in_init(s) && (type == SSL3_RT_APPLICATION_DATA) &&\n\t\t\t(s->enc_read_ctx == NULL))"];
"1000570" [label="(Call,SSL_get_rbio(s))"];
"1000569" [label="(Call,BIO_dgram_is_sctp(SSL_get_rbio(s)))"];
"1000568" [label="(Call,BIO_dgram_is_sctp(SSL_get_rbio(s)) &&\n\t\t\t    rr->type == SSL3_RT_APPLICATION_DATA &&\n\t\t\t    (s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK))"];
"1000596" [label="(Call,SSL_get_rbio(s))"];
"1000595" [label="(Call,BIO_clear_retry_flags(SSL_get_rbio(s)))"];
"1000599" [label="(Call,SSL_get_rbio(s))"];
"1000598" [label="(Call,BIO_set_retry_read(SSL_get_rbio(s)))"];
"1000604" [label="(Call,SSL_get_rbio(s))"];
"1000603" [label="(Call,BIO_dgram_is_sctp(SSL_get_rbio(s)))"];
"1000602" [label="(Call,BIO_dgram_is_sctp(SSL_get_rbio(s)) &&\n\t\t\t    s->d1->shutdown_received && !BIO_dgram_sctp_msg_waiting(SSL_get_rbio(s)))"];
"1000614" [label="(Call,SSL_get_rbio(s))"];
"1000613" [label="(Call,BIO_dgram_sctp_msg_waiting(SSL_get_rbio(s)))"];
"1000612" [label="(Call,!BIO_dgram_sctp_msg_waiting(SSL_get_rbio(s)))"];
"1000606" [label="(Call,s->d1->shutdown_received && !BIO_dgram_sctp_msg_waiting(SSL_get_rbio(s)))"];
"1001699" [label="(Call,ssl3_send_alert(s,SSL3_AL_FATAL,al))"];
"1000709" [label="(Call,dtls1_process_heartbeat(s))"];
"1000722" [label="(Call,SSL_get_rbio(s))"];
"1000721" [label="(Call,BIO_clear_retry_flags(SSL_get_rbio(s)))"];
"1000725" [label="(Call,SSL_get_rbio(s))"];
"1000724" [label="(Call,BIO_set_retry_read(SSL_get_rbio(s)))"];
"1000755" [label="(Call,SSL_get_rbio(s))"];
"1000753" [label="(Call,bio=SSL_get_rbio(s))"];
"1000762" [label="(Call,BIO_clear_retry_flags(bio))"];
"1000764" [label="(Call,BIO_set_retry_read(bio))"];
"1000395" [label="(Call,s->d1->listen && rr->type != SSL3_RT_HANDSHAKE)"];
"1000414" [label="(Call,s->s3->change_cipher_spec /* set when we receive ChangeCipherSpec,\n\t                               * reset by ssl3_get_finished */\n\t\t&& (rr->type != SSL3_RT_HANDSHAKE))"];
"1000484" [label="(Call,type == SSL3_RT_APPLICATION_DATA)"];
"1000483" [label="(Call,(type == SSL3_RT_APPLICATION_DATA) &&\n\t\t\t(s->enc_read_ctx == NULL))"];
"1000573" [label="(Call,rr->type == SSL3_RT_APPLICATION_DATA)"];
"1000572" [label="(Call,rr->type == SSL3_RT_APPLICATION_DATA &&\n\t\t\t    (s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK))"];
"1000739" [label="(Call,rr->type == SSL3_RT_APPLICATION_DATA)"];
"1000525" [label="(Call,memcpy(buf,&(rr->data[rr->off]),n))"];
"1000540" [label="(Call,rr->length-=n)"];
"1000551" [label="(Call,rr->length == 0)"];
"1000545" [label="(Call,rr->off+=n)"];
"1000624" [label="(Return,return(n);)"];
"1000686" [label="(Call,dest = s->d1->alert_fragment)"];
"1001146" [label="(Call,SSL_get_rbio(s))"];
"1001145" [label="(Call,BIO_dgram_is_sctp(SSL_get_rbio(s)))"];
"1001144" [label="(Call,BIO_dgram_is_sctp(SSL_get_rbio(s)) &&\n\t\t\t\t\tBIO_dgram_sctp_msg_waiting(SSL_get_rbio(s)))"];
"1001149" [label="(Call,SSL_get_rbio(s))"];
"1001148" [label="(Call,BIO_dgram_sctp_msg_waiting(SSL_get_rbio(s)))"];
"1001165" [label="(Call,SSL_get_rbio(s))"];
"1001164" [label="(Call,BIO_clear_retry_flags(SSL_get_rbio(s)))"];
"1001168" [label="(Call,SSL_get_rbio(s))"];
"1001167" [label="(Call,BIO_set_retry_read(SSL_get_rbio(s)))"];
"1001217" [label="(Call,! found  && SSL_in_init(s))"];
"1001406" [label="(Call,!ssl3_do_change_cipher_spec(s))"];
"1001425" [label="(Call,BIO_ctrl(SSL_get_wbio(s), BIO_CTRL_DGRAM_SCTP_AUTH_CCS_RCVD, 1, NULL))"];
"1000487" [label="(Call,s->enc_read_ctx == NULL)"];
"1000633" [label="(Call,*dest = NULL)"];
"1000637" [label="(Call,*dest_len = NULL)"];
"1000854" [label="(Call,s->session != NULL)"];
"1000853" [label="(Call,(s->session != NULL) && (s->session->cipher != NULL))"];
"1000843" [label="(Call,(s->d1->handshake_fragment[0] == SSL3_MT_HELLO_REQUEST) &&\n\t\t(s->session != NULL) && (s->session->cipher != NULL))"];
"1000835" [label="(Call,(s->d1->handshake_fragment_len >= DTLS1_HM_HEADER_LENGTH) &&\n\t\t(s->d1->handshake_fragment[0] == SSL3_MT_HELLO_REQUEST) &&\n\t\t(s->session != NULL) && (s->session->cipher != NULL))"];
"1000830" [label="(Call,(!s->server) &&\n\t\t(s->d1->handshake_fragment_len >= DTLS1_HM_HEADER_LENGTH) &&\n\t\t(s->d1->handshake_fragment[0] == SSL3_MT_HELLO_REQUEST) &&\n\t\t(s->session != NULL) && (s->session->cipher != NULL))"];
"1000859" [label="(Call,s->session->cipher != NULL)"];
"1001084" [label="(Call,s->info_callback != NULL)"];
"1001089" [label="(Call,cb=s->info_callback)"];
"1001111" [label="(Call,cb != NULL)"];
"1001096" [label="(Call,s->ctx->info_callback != NULL)"];
"1001103" [label="(Call,cb=s->ctx->info_callback)"];
"1001266" [label="(Call,SSL_CTX_remove_session(s->ctx,s->session))"];
"1000933" [label="(Call,SSL_is_init_finished(s) &&\n\t\t\t!(s->s3->flags & SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS) &&\n\t\t\t!s->s3->renegotiate)"];
"1000969" [label="(Call,i=s->handshake_func(s))"];
"1000974" [label="(Call,i < 0)"];
"1000977" [label="(Return,return(i);)"];
"1000980" [label="(Call,i == 0)"];
"1001017" [label="(Call,SSL_get_rbio(s))"];
"1001015" [label="(Call,bio=SSL_get_rbio(s))"];
"1001019" [label="(Call,BIO_clear_retry_flags(bio))"];
"1001021" [label="(Call,BIO_set_retry_read(bio))"];
"1001478" [label="(Call,dtls1_check_timeout_num(s) < 0)"];
"1001533" [label="(Call,i=s->handshake_func(s))"];
"1001538" [label="(Call,i < 0)"];
"1001541" [label="(Return,return(i);)"];
"1001544" [label="(Call,i == 0)"];
"1001581" [label="(Call,SSL_get_rbio(s))"];
"1001579" [label="(Call,bio=SSL_get_rbio(s))"];
"1001583" [label="(Call,BIO_clear_retry_flags(bio))"];
"1001585" [label="(Call,BIO_set_retry_read(bio))"];
"1001116" [label="(Identifier,j)"];
"1000597" [label="(Identifier,s)"];
"1001155" [label="(Identifier,s)"];
"1001080" [label="(Call,s->msg_callback_arg)"];
"1000967" [label="(Identifier,s)"];
"1000768" [label="(Literal,1)"];
"1001183" [label="(Identifier,DTLS1_AD_MISSING_HANDSHAKE_MESSAGE)"];
"1000386" [label="(ControlStructure,if (ret <= 0))"];
"1001246" [label="(Call,SSLerr(SSL_F_DTLS1_READ_BYTES, SSL_AD_REASON_OFFSET + alert_descr))"];
"1000731" [label="(ControlStructure,if (rr->type != SSL3_RT_CHANGE_CIPHER_SPEC))"];
"1000335" [label="(Identifier,BIO_CTRL_DGRAM_SCTP_SET_RCVINFO)"];
"1000754" [label="(Identifier,bio)"];
"1000604" [label="(Call,SSL_get_rbio(s))"];
"1001445" [label="(Block,)"];
"1001374" [label="(Call,rr->data)"];
"1000442" [label="(Identifier,SSL_F_DTLS1_READ_BYTES)"];
"1000854" [label="(Call,s->session != NULL)"];
"1001069" [label="(Call,s->version)"];
"1001079" [label="(Identifier,s)"];
"1000472" [label="(ControlStructure,if (type == rr->type))"];
"1000739" [label="(Call,rr->type == SSL3_RT_APPLICATION_DATA)"];
"1000375" [label="(Identifier,s)"];
"1000405" [label="(Identifier,SSL3_RT_HANDSHAKE)"];
"1001147" [label="(Identifier,s)"];
"1001377" [label="(Literal,1)"];
"1000736" [label="(Identifier,SSL3_RT_CHANGE_CIPHER_SPEC)"];
"1000456" [label="(Identifier,s)"];
"1001088" [label="(Identifier,NULL)"];
"1001203" [label="(Identifier,frag_off)"];
"1001415" [label="(Call,s->version)"];
"1000973" [label="(ControlStructure,if (i < 0))"];
"1000972" [label="(Identifier,s)"];
"1000426" [label="(ControlStructure,if(dtls1_buffer_record(s, &(s->d1->buffered_app_data), rr->seq_num)<0))"];
"1000743" [label="(Identifier,SSL3_RT_APPLICATION_DATA)"];
"1001102" [label="(Identifier,NULL)"];
"1000982" [label="(Literal,0)"];
"1000732" [label="(Call,rr->type != SSL3_RT_CHANGE_CIPHER_SPEC)"];
"1000526" [label="(Identifier,buf)"];
"1001602" [label="(Identifier,TLS1_VERSION)"];
"1000592" [label="(Identifier,s)"];
"1001121" [label="(Identifier,alert_descr)"];
"1001201" [label="(Call,n2l3(p, frag_off))"];
"1000625" [label="(Identifier,n)"];
"1000429" [label="(Identifier,s)"];
"1000975" [label="(Identifier,i)"];
"1001248" [label="(Call,SSL_AD_REASON_OFFSET + alert_descr)"];
"1001486" [label="(Identifier,s)"];
"1001181" [label="(Call,alert_descr == DTLS1_AD_MISSING_HANDSHAKE_MESSAGE)"];
"1000485" [label="(Identifier,type)"];
"1001111" [label="(Call,cb != NULL)"];
"1001538" [label="(Call,i < 0)"];
"1000345" [label="(Identifier,s)"];
"1000259" [label="(Call,s->handshake_func(s))"];
"1001707" [label="(MethodReturn,int)"];
"1001536" [label="(Identifier,s)"];
"1000577" [label="(Identifier,SSL3_RT_APPLICATION_DATA)"];
"1001204" [label="(Call,dtls1_retransmit_message(s,\n\t\t\t\t\t\t\t\t\t\t dtls1_get_queue_priority(frag->msg_header.seq, 0),\n\t\t\t\t\t\t\t\t\t\t frag_off, &found))"];
"1000964" [label="(Identifier,s)"];
"1000387" [label="(Call,ret <= 0)"];
"1000306" [label="(Call,item = pqueue_pop(s->d1->buffered_app_data.q))"];
"1000326" [label="(Identifier,rdata)"];
"1000843" [label="(Call,(s->d1->handshake_fragment[0] == SSL3_MT_HELLO_REQUEST) &&\n\t\t(s->session != NULL) && (s->session->cipher != NULL))"];
"1000886" [label="(Call,s->d1->handshake_fragment[2] != 0)"];
"1000635" [label="(Identifier,NULL)"];
"1000396" [label="(Call,s->d1->listen)"];
"1001037" [label="(Call,alert_level = s->d1->alert_fragment[0])"];
"1000334" [label="(Identifier,s)"];
"1000977" [label="(Return,return(i);)"];
"1000549" [label="(Identifier,n)"];
"1001124" [label="(Identifier,SSL_CB_READ_ALERT)"];
"1001223" [label="(Call,ssl3_send_alert(s,SSL3_AL_WARNING,\n\t\t\t\t\t\tDTLS1_AD_MISSING_HANDSHAKE_MESSAGE))"];
"1000705" [label="(Identifier,rr)"];
"1000928" [label="(Identifier,s)"];
"1001413" [label="(ControlStructure,if (s->version == DTLS1_BAD_VER))"];
"1001164" [label="(Call,BIO_clear_retry_flags(SSL_get_rbio(s)))"];
"1001317" [label="(Call,rr->data)"];
"1001284" [label="(ControlStructure,goto start;)"];
"1000488" [label="(Call,s->enc_read_ctx)"];
"1000709" [label="(Call,dtls1_process_heartbeat(s))"];
"1001322" [label="(ControlStructure,if (s->version == DTLS1_BAD_VER))"];
"1001584" [label="(Identifier,bio)"];
"1001580" [label="(Identifier,bio)"];
"1001175" [label="(Identifier,s)"];
"1001431" [label="(ControlStructure,goto start;)"];
"1000860" [label="(Call,s->session->cipher)"];
"1000934" [label="(Call,SSL_is_init_finished(s))"];
"1001141" [label="(Identifier,SSL_AD_CLOSE_NOTIFY)"];
"1000979" [label="(ControlStructure,if (i == 0))"];
"1001364" [label="(ControlStructure,if (s->msg_callback))"];
"1000377" [label="(Call,ret <= 0)"];
"1000765" [label="(Identifier,bio)"];
"1000344" [label="(Call,dtls1_copy_record(s, item))"];
"1001329" [label="(Identifier,ccs_hdr_len)"];
"1000234" [label="(Call,BIO_dgram_is_sctp(SSL_get_rbio(s)))"];
"1000687" [label="(Identifier,dest)"];
"1001345" [label="(Call,rr->data[0])"];
"1001448" [label="(Call,rr->data)"];
"1000170" [label="(Call,(*cb)(const SSL *ssl,int type2,int val)=NULL)"];
"1001026" [label="(ControlStructure,goto start;)"];
"1000494" [label="(Identifier,al)"];
"1001478" [label="(Call,dtls1_check_timeout_num(s) < 0)"];
"1000158" [label="(MethodParameterIn,int type)"];
"1000196" [label="(Identifier,type)"];
"1000346" [label="(Identifier,item)"];
"1000502" [label="(Identifier,len)"];
"1000607" [label="(Call,s->d1->shutdown_received)"];
"1001139" [label="(Call,alert_descr == SSL_AD_CLOSE_NOTIFY)"];
"1000538" [label="(Identifier,peek)"];
"1000853" [label="(Call,(s->session != NULL) && (s->session->cipher != NULL))"];
"1000394" [label="(ControlStructure,if (s->d1->listen && rr->type != SSL3_RT_HANDSHAKE))"];
"1001078" [label="(Literal,2)"];
"1000193" [label="(Identifier,type)"];
"1001309" [label="(Identifier,SSL3_RT_CHANGE_CIPHER_SPEC)"];
"1001543" [label="(ControlStructure,if (i == 0))"];
"1000414" [label="(Call,s->s3->change_cipher_spec /* set when we receive ChangeCipherSpec,\n\t                               * reset by ssl3_get_finished */\n\t\t&& (rr->type != SSL3_RT_HANDSHAKE))"];
"1001150" [label="(Identifier,s)"];
"1000378" [label="(Identifier,ret)"];
"1001700" [label="(Identifier,s)"];
"1000599" [label="(Call,SSL_get_rbio(s))"];
"1000598" [label="(Call,BIO_set_retry_read(SSL_get_rbio(s)))"];
"1001089" [label="(Call,cb=s->info_callback)"];
"1001479" [label="(Call,dtls1_check_timeout_num(s))"];
"1000321" [label="(Call,SSL_get_rbio(s))"];
"1001224" [label="(Identifier,s)"];
"1001127" [label="(Call,alert_level == 1)"];
"1000218" [label="(Identifier,type)"];
"1001143" [label="(ControlStructure,if (BIO_dgram_is_sctp(SSL_get_rbio(s)) &&\n\t\t\t\t\tBIO_dgram_sctp_msg_waiting(SSL_get_rbio(s))))"];
"1000648" [label="(Identifier,dest_maxlen)"];
"1000354" [label="(Call,dtls1_handle_timeout(s) > 0)"];
"1000980" [label="(Call,i == 0)"];
"1000174" [label="(Call,s->s3->rbuf.buf == NULL)"];
"1001207" [label="(Call,frag->msg_header.seq)"];
"1001699" [label="(Call,ssl3_send_alert(s,SSL3_AL_FATAL,al))"];
"1000686" [label="(Call,dest = s->d1->alert_fragment)"];
"1000981" [label="(Identifier,i)"];
"1000707" [label="(Identifier,TLS1_RT_HEARTBEAT)"];
"1001059" [label="(Identifier,s)"];
"1000205" [label="(Identifier,SSL3_RT_APPLICATION_DATA)"];
"1000236" [label="(Identifier,s)"];
"1000501" [label="(Call,len <= 0)"];
"1000674" [label="(Identifier,rr)"];
"1001409" [label="(ControlStructure,goto err;)"];
"1001324" [label="(Call,s->version)"];
"1001427" [label="(Identifier,s)"];
"1000749" [label="(Identifier,s)"];
"1001182" [label="(Identifier,alert_descr)"];
"1000702" [label="(ControlStructure,if (rr->type == TLS1_RT_HEARTBEAT))"];
"1000965" [label="(ControlStructure,if (ssl3_renegotiate_check(s)))"];
"1001373" [label="(Identifier,SSL3_RT_CHANGE_CIPHER_SPEC)"];
"1000317" [label="(Identifier,item)"];
"1000353" [label="(ControlStructure,if (dtls1_handle_timeout(s) > 0))"];
"1001035" [label="(Block,)"];
"1001368" [label="(Call,s->msg_callback(0, s->version, SSL3_RT_CHANGE_CIPHER_SPEC, \n\t\t\t\trr->data, 1, s, s->msg_callback_arg))"];
"1001222" [label="(Block,)"];
"1001225" [label="(Identifier,SSL3_AL_WARNING)"];
"1001267" [label="(Call,s->ctx)"];
"1000491" [label="(Identifier,NULL)"];
"1001103" [label="(Call,cb=s->ctx->info_callback)"];
"1001305" [label="(Call,rr->type == SSL3_RT_CHANGE_CIPHER_SPEC)"];
"1000420" [label="(Call,rr->type != SSL3_RT_HANDSHAKE)"];
"1001581" [label="(Call,SSL_get_rbio(s))"];
"1000642" [label="(Call,rr->type)"];
"1001406" [label="(Call,!ssl3_do_change_cipher_spec(s))"];
"1000484" [label="(Call,type == SSL3_RT_APPLICATION_DATA)"];
"1000963" [label="(Call,ssl3_renegotiate(s))"];
"1000552" [label="(Call,rr->length)"];
"1000257" [label="(Call,i=s->handshake_func(s))"];
"1001110" [label="(ControlStructure,if (cb != NULL))"];
"1000357" [label="(Literal,0)"];
"1000567" [label="(ControlStructure,if (BIO_dgram_is_sctp(SSL_get_rbio(s)) &&\n\t\t\t    rr->type == SSL3_RT_APPLICATION_DATA &&\n\t\t\t    (s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK)))"];
"1001144" [label="(Call,BIO_dgram_is_sctp(SSL_get_rbio(s)) &&\n\t\t\t\t\tBIO_dgram_sctp_msg_waiting(SSL_get_rbio(s)))"];
"1000704" [label="(Call,rr->type)"];
"1001599" [label="(Call,s->version)"];
"1001112" [label="(Identifier,cb)"];
"1000473" [label="(Call,type == rr->type)"];
"1000624" [label="(Return,return(n);)"];
"1001226" [label="(Identifier,DTLS1_AD_MISSING_HANDSHAKE_MESSAGE)"];
"1000612" [label="(Call,!BIO_dgram_sctp_msg_waiting(SSL_get_rbio(s)))"];
"1000322" [label="(Identifier,s)"];
"1001140" [label="(Identifier,alert_descr)"];
"1001323" [label="(Call,s->version == DTLS1_BAD_VER)"];
"1000570" [label="(Call,SSL_get_rbio(s))"];
"1001422" [label="(Identifier,s)"];
"1000520" [label="(Call,n = (unsigned int)len)"];
"1001266" [label="(Call,SSL_CTX_remove_session(s->ctx,s->session))"];
"1000734" [label="(Identifier,rr)"];
"1001131" [label="(Call,s->s3->warn_alert = alert_descr)"];
"1000194" [label="(Call,(type != SSL3_RT_APPLICATION_DATA) && \n\t\t(type != SSL3_RT_HANDSHAKE))"];
"1000541" [label="(Call,rr->length)"];
"1000740" [label="(Call,rr->type)"];
"1001019" [label="(Call,BIO_clear_retry_flags(bio))"];
"1001325" [label="(Identifier,s)"];
"1001537" [label="(ControlStructure,if (i < 0))"];
"1001021" [label="(Call,BIO_set_retry_read(bio))"];
"1000191" [label="(Call,(type && (type != SSL3_RT_APPLICATION_DATA) && \n\t\t(type != SSL3_RT_HANDSHAKE)) ||\n\t    (peek && (type != SSL3_RT_APPLICATION_DATA)))"];
"1000537" [label="(Call,!peek)"];
"1000162" [label="(Block,)"];
"1000157" [label="(MethodParameterIn,SSL *s)"];
"1000415" [label="(Call,s->s3->change_cipher_spec)"];
"1000550" [label="(ControlStructure,if (rr->length == 0))"];
"1000384" [label="(Identifier,s)"];
"1001200" [label="(Identifier,seq)"];
"1000235" [label="(Call,SSL_get_rbio(s))"];
"1000741" [label="(Identifier,rr)"];
"1001169" [label="(Identifier,s)"];
"1000352" [label="(Identifier,item)"];
"1000733" [label="(Call,rr->type)"];
"1000831" [label="(Call,!s->server)"];
"1001085" [label="(Call,s->info_callback)"];
"1001582" [label="(Identifier,s)"];
"1001189" [label="(Identifier,p)"];
"1000232" [label="(Identifier,s)"];
"1001047" [label="(Call,alert_descr = s->d1->alert_fragment[1])"];
"1001072" [label="(Identifier,SSL3_RT_ALERT)"];
"1000713" [label="(Identifier,rr)"];
"1000427" [label="(Call,dtls1_buffer_record(s, &(s->d1->buffered_app_data), rr->seq_num)<0)"];
"1001534" [label="(Identifier,i)"];
"1001306" [label="(Call,rr->type)"];
"1000634" [label="(Identifier,dest)"];
"1000655" [label="(Call,dest = s->d1->handshake_fragment)"];
"1001184" [label="(Block,)"];
"1000613" [label="(Call,BIO_dgram_sctp_msg_waiting(SSL_get_rbio(s)))"];
"1000535" [label="(Identifier,n)"];
"1000856" [label="(Identifier,s)"];
"1001216" [label="(ControlStructure,if ( ! found  && SSL_in_init(s)))"];
"1001425" [label="(Call,BIO_ctrl(SSL_get_wbio(s), BIO_CTRL_DGRAM_SCTP_AUTH_CCS_RCVD, 1, NULL))"];
"1000641" [label="(Call,rr->type == SSL3_RT_HANDSHAKE)"];
"1000184" [label="(Call,!ssl3_setup_buffers(s))"];
"1000966" [label="(Call,ssl3_renegotiate_check(s))"];
"1000383" [label="(Call,dtls1_read_failed(s, ret))"];
"1000195" [label="(Call,type != SSL3_RT_APPLICATION_DATA)"];
"1001477" [label="(ControlStructure,if (dtls1_check_timeout_num(s) < 0))"];
"1000569" [label="(Call,BIO_dgram_is_sctp(SSL_get_rbio(s)))"];
"1000489" [label="(Identifier,s)"];
"1001572" [label="(Block,)"];
"1000318" [label="(Block,)"];
"1000363" [label="(Identifier,rr)"];
"1000936" [label="(Call,!(s->s3->flags & SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS) &&\n\t\t\t!s->s3->renegotiate)"];
"1000762" [label="(Call,BIO_clear_retry_flags(bio))"];
"1000614" [label="(Call,SSL_get_rbio(s))"];
"1000546" [label="(Call,rr->off)"];
"1000351" [label="(Call,pitem_free(item))"];
"1001277" [label="(Call,al=SSL_AD_ILLEGAL_PARAMETER)"];
"1001099" [label="(Identifier,s)"];
"1000917" [label="(Literal,0)"];
"1001086" [label="(Identifier,s)"];
"1000401" [label="(Call,rr->type != SSL3_RT_HANDSHAKE)"];
"1001542" [label="(Identifier,i)"];
"1000725" [label="(Call,SSL_get_rbio(s))"];
"1001022" [label="(Identifier,bio)"];
"1001610" [label="(Call,al=SSL_AD_UNEXPECTED_MESSAGE)"];
"1000759" [label="(Identifier,s)"];
"1001535" [label="(Call,s->handshake_func(s))"];
"1000192" [label="(Call,type && (type != SSL3_RT_APPLICATION_DATA) && \n\t\t(type != SSL3_RT_HANDSHAKE))"];
"1000575" [label="(Identifier,rr)"];
"1000932" [label="(ControlStructure,if (SSL_is_init_finished(s) &&\n\t\t\t!(s->s3->flags & SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS) &&\n\t\t\t!s->s3->renegotiate))"];
"1000589" [label="(Block,)"];
"1001205" [label="(Identifier,s)"];
"1001691" [label="(Call,al=SSL_AD_UNEXPECTED_MESSAGE)"];
"1000389" [label="(Literal,0)"];
"1000724" [label="(Call,BIO_set_retry_read(SSL_get_rbio(s)))"];
"1001117" [label="(Call,(alert_level << 8) | alert_descr)"];
"1000390" [label="(Return,return(ret);)"];
"1000581" [label="(Identifier,s)"];
"1000508" [label="(Call,(unsigned int)len)"];
"1001386" [label="(Identifier,s)"];
"1000402" [label="(Call,rr->type)"];
"1000559" [label="(Identifier,s)"];
"1001038" [label="(Identifier,alert_level)"];
"1000845" [label="(Call,s->d1->handshake_fragment[0])"];
"1000413" [label="(ControlStructure,if (s->s3->change_cipher_spec /* set when we receive ChangeCipherSpec,\n\t                               * reset by ssl3_get_finished */\n\t\t&& (rr->type != SSL3_RT_HANDSHAKE)))"];
"1001411" [label="(Identifier,s)"];
"1000855" [label="(Call,s->session)"];
"1000763" [label="(Identifier,bio)"];
"1000551" [label="(Call,rr->length == 0)"];
"1001316" [label="(Call,dtls1_get_ccs_header(rr->data, &ccs_hdr))"];
"1001583" [label="(Call,BIO_clear_retry_flags(bio))"];
"1001558" [label="(Identifier,s)"];
"1001426" [label="(Call,SSL_get_wbio(s))"];
"1000340" [label="(Call,&rdata->recordinfo)"];
"1000504" [label="(Return,return(len);)"];
"1000398" [label="(Identifier,s)"];
"1000307" [label="(Identifier,item)"];
"1001049" [label="(Call,s->d1->alert_fragment[1])"];
"1001335" [label="(Identifier,rr)"];
"1000481" [label="(Call,SSL_in_init(s))"];
"1000637" [label="(Call,*dest_len = NULL)"];
"1001489" [label="(Identifier,rr)"];
"1000527" [label="(Call,&(rr->data[rr->off]))"];
"1001105" [label="(Call,s->ctx->info_callback)"];
"1000388" [label="(Identifier,ret)"];
"1000870" [label="(Identifier,s)"];
"1000226" [label="(Call,!s->in_handshake && SSL_in_init(s))"];
"1000645" [label="(Identifier,SSL3_RT_HANDSHAKE)"];
"1001239" [label="(Call,s->s3->fatal_alert = alert_descr)"];
"1000573" [label="(Call,rr->type == SSL3_RT_APPLICATION_DATA)"];
"1000544" [label="(Identifier,n)"];
"1000507" [label="(Call,(unsigned int)len > rr->length)"];
"1001451" [label="(Call,&msg_hdr)"];
"1000970" [label="(Identifier,i)"];
"1000630" [label="(Identifier,dest_maxlen)"];
"1001703" [label="(JumpTarget,err:)"];
"1001123" [label="(Identifier,s)"];
"1001180" [label="(ControlStructure,if (alert_descr == DTLS1_AD_MISSING_HANDSHAKE_MESSAGE))"];
"1000738" [label="(ControlStructure,if (rr->type == SSL3_RT_APPLICATION_DATA))"];
"1000547" [label="(Identifier,rr)"];
"1001149" [label="(Call,SSL_get_rbio(s))"];
"1000875" [label="(Call,(s->d1->handshake_fragment[1] != 0) ||\n\t\t\t(s->d1->handshake_fragment[2] != 0) ||\n\t\t\t(s->d1->handshake_fragment[3] != 0))"];
"1000428" [label="(Call,dtls1_buffer_record(s, &(s->d1->buffered_app_data), rr->seq_num))"];
"1001407" [label="(Call,ssl3_do_change_cipher_spec(s))"];
"1000927" [label="(Literal,4)"];
"1000994" [label="(Identifier,s)"];
"1000332" [label="(Call,BIO_ctrl(SSL_get_rbio(s), BIO_CTRL_DGRAM_SCTP_SET_RCVINFO, sizeof(rdata->recordinfo), &rdata->recordinfo))"];
"1001104" [label="(Identifier,cb)"];
"1000260" [label="(Identifier,s)"];
"1000553" [label="(Identifier,rr)"];
"1000978" [label="(Identifier,i)"];
"1001484" [label="(Literal,1)"];
"1000918" [label="(Call,s->version)"];
"1000371" [label="(Block,)"];
"1000876" [label="(Call,s->d1->handshake_fragment[1] != 0)"];
"1001549" [label="(Identifier,SSL_F_DTLS1_READ_BYTES)"];
"1001148" [label="(Call,BIO_dgram_sctp_msg_waiting(SSL_get_rbio(s)))"];
"1001430" [label="(Identifier,NULL)"];
"1000308" [label="(Call,pqueue_pop(s->d1->buffered_app_data.q))"];
"1001416" [label="(Identifier,s)"];
"1000935" [label="(Identifier,s)"];
"1000199" [label="(Identifier,type)"];
"1000679" [label="(Identifier,dest_maxlen)"];
"1000596" [label="(Call,SSL_get_rbio(s))"];
"1000336" [label="(Call,sizeof(rdata->recordinfo))"];
"1001378" [label="(Identifier,s)"];
"1000769" [label="(Call,al=SSL_AD_UNEXPECTED_MESSAGE)"];
"1000770" [label="(Identifier,al)"];
"1001097" [label="(Call,s->ctx->info_callback)"];
"1000480" [label="(Call,SSL_in_init(s) && (type == SSL3_RT_APPLICATION_DATA) &&\n\t\t\t(s->enc_read_ctx == NULL))"];
"1000568" [label="(Call,BIO_dgram_is_sctp(SSL_get_rbio(s)) &&\n\t\t\t    rr->type == SSL3_RT_APPLICATION_DATA &&\n\t\t\t    (s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK))"];
"1000859" [label="(Call,s->session->cipher != NULL)"];
"1000424" [label="(Identifier,SSL3_RT_HANDSHAKE)"];
"1000884" [label="(Literal,0)"];
"1001119" [label="(Identifier,alert_level)"];
"1000333" [label="(Call,SSL_get_rbio(s))"];
"1001338" [label="(Call,(rr->off != 0) || (rr->data[0] != SSL3_MT_CCS))"];
"1000726" [label="(Identifier,s)"];
"1000198" [label="(Call,type != SSL3_RT_HANDSHAKE)"];
"1000755" [label="(Call,SSL_get_rbio(s))"];
"1000595" [label="(Call,BIO_clear_retry_flags(SSL_get_rbio(s)))"];
"1001585" [label="(Call,BIO_set_retry_read(bio))"];
"1001418" [label="(Identifier,DTLS1_BAD_VER)"];
"1000672" [label="(Call,rr->type == SSL3_RT_ALERT)"];
"1000376" [label="(ControlStructure,if (ret <= 0))"];
"1000382" [label="(Identifier,ret)"];
"1001168" [label="(Call,SSL_get_rbio(s))"];
"1001540" [label="(Literal,0)"];
"1001414" [label="(Call,s->version == DTLS1_BAD_VER)"];
"1001190" [label="(Call,&(s->d1->alert_fragment[2]))"];
"1001398" [label="(Call,s->s3->change_cipher_spec=1)"];
"1000916" [label="(Call,s->msg_callback(0, s->version, SSL3_RT_HANDSHAKE, \n\t\t\t\ts->d1->handshake_fragment, 4, s, s->msg_callback_arg))"];
"1001304" [label="(ControlStructure,if (rr->type == SSL3_RT_CHANGE_CIPHER_SPEC))"];
"1000474" [label="(Identifier,type)"];
"1001476" [label="(Block,)"];
"1000393" [label="(ControlStructure,goto start;)"];
"1000643" [label="(Identifier,rr)"];
"1000971" [label="(Call,s->handshake_func(s))"];
"1000903" [label="(Literal,0)"];
"1000379" [label="(Literal,0)"];
"1000835" [label="(Call,(s->d1->handshake_fragment_len >= DTLS1_HM_HEADER_LENGTH) &&\n\t\t(s->d1->handshake_fragment[0] == SSL3_MT_HELLO_REQUEST) &&\n\t\t(s->session != NULL) && (s->session->cipher != NULL))"];
"1000161" [label="(MethodParameterIn,int peek)"];
"1001166" [label="(Identifier,s)"];
"1000186" [label="(Identifier,s)"];
"1001447" [label="(Call,dtls1_get_message_header(rr->data, &msg_hdr))"];
"1001083" [label="(ControlStructure,if (s->info_callback != NULL))"];
"1000525" [label="(Call,memcpy(buf,&(rr->data[rr->off]),n))"];
"1000877" [label="(Call,s->d1->handshake_fragment[1])"];
"1001327" [label="(Identifier,DTLS1_BAD_VER)"];
"1001025" [label="(Literal,1)"];
"1001172" [label="(Literal,1)"];
"1001232" [label="(Block,)"];
"1001428" [label="(Identifier,BIO_CTRL_DGRAM_SCTP_AUTH_CCS_RCVD)"];
"1001199" [label="(Identifier,p)"];
"1001091" [label="(Call,s->info_callback)"];
"1000606" [label="(Call,s->d1->shutdown_received && !BIO_dgram_sctp_msg_waiting(SSL_get_rbio(s)))"];
"1000844" [label="(Call,s->d1->handshake_fragment[0] == SSL3_MT_HELLO_REQUEST)"];
"1001597" [label="(ControlStructure,if (s->version == TLS1_VERSION))"];
"1000475" [label="(Call,rr->type)"];
"1000197" [label="(Identifier,SSL3_RT_APPLICATION_DATA)"];
"1001405" [label="(ControlStructure,if (!ssl3_do_change_cipher_spec(s)))"];
"1000478" [label="(Block,)"];
"1001220" [label="(Call,SSL_in_init(s))"];
"1001611" [label="(Identifier,al)"];
"1000817" [label="(Call,rr->off++)"];
"1001219" [label="(Identifier,found)"];
"1000349" [label="(Identifier,item)"];
"1000479" [label="(ControlStructure,if (SSL_in_init(s) && (type == SSL3_RT_APPLICATION_DATA) &&\n\t\t\t(s->enc_read_ctx == NULL)))"];
"1000304" [label="(Block,)"];
"1001115" [label="(Call,j = (alert_level << 8) | alert_descr)"];
"1000545" [label="(Call,rr->off+=n)"];
"1001270" [label="(Call,s->session)"];
"1000602" [label="(Call,BIO_dgram_is_sctp(SSL_get_rbio(s)) &&\n\t\t\t    s->d1->shutdown_received && !BIO_dgram_sctp_msg_waiting(SSL_get_rbio(s)))"];
"1000320" [label="(Call,BIO_dgram_is_sctp(SSL_get_rbio(s)))"];
"1001090" [label="(Identifier,cb)"];
"1001412" [label="(Identifier,SSL3_CC_READ)"];
"1000753" [label="(Call,bio=SSL_get_rbio(s))"];
"1001145" [label="(Call,BIO_dgram_is_sctp(SSL_get_rbio(s)))"];
"1000372" [label="(Call,ret=dtls1_get_record(s))"];
"1001122" [label="(Call,cb(s, SSL_CB_READ_ALERT, j))"];
"1000220" [label="(Identifier,len)"];
"1001188" [label="(Call,*p = &(s->d1->alert_fragment[2]))"];
"1000941" [label="(Identifier,s)"];
"1001598" [label="(Call,s->version == TLS1_VERSION)"];
"1000929" [label="(Call,s->msg_callback_arg)"];
"1000640" [label="(ControlStructure,if (rr->type == SSL3_RT_HANDSHAKE))"];
"1000852" [label="(Identifier,SSL3_MT_HELLO_REQUEST)"];
"1000933" [label="(Call,SSL_is_init_finished(s) &&\n\t\t\t!(s->s3->flags & SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS) &&\n\t\t\t!s->s3->renegotiate)"];
"1001213" [label="(Identifier,frag_off)"];
"1000214" [label="(Call,ret = have_handshake_fragment(s, type, buf, len, peek))"];
"1001018" [label="(Identifier,s)"];
"1001251" [label="(Call,BIO_snprintf(tmp,sizeof tmp,\"%d\",alert_descr))"];
"1000487" [label="(Call,s->enc_read_ctx == NULL)"];
"1001481" [label="(Literal,0)"];
"1001095" [label="(ControlStructure,if (s->ctx->info_callback != NULL))"];
"1000358" [label="(ControlStructure,goto start;)"];
"1000221" [label="(Identifier,peek)"];
"1001589" [label="(Literal,1)"];
"1001437" [label="(Identifier,s)"];
"1000894" [label="(Literal,0)"];
"1000430" [label="(Call,&(s->d1->buffered_app_data))"];
"1001020" [label="(Identifier,bio)"];
"1001379" [label="(Call,s->msg_callback_arg)"];
"1000673" [label="(Call,rr->type)"];
"1000160" [label="(MethodParameterIn,int len)"];
"1000202" [label="(Identifier,peek)"];
"1001314" [label="(Identifier,ccs_hdr_len)"];
"1000895" [label="(Call,s->d1->handshake_fragment[3] != 0)"];
"1000778" [label="(Identifier,dest_maxlen)"];
"1001084" [label="(Call,s->info_callback != NULL)"];
"1000204" [label="(Identifier,type)"];
"1000890" [label="(Identifier,s)"];
"1000385" [label="(Identifier,ret)"];
"1000694" [label="(Identifier,dest_len)"];
"1001017" [label="(Call,SSL_get_rbio(s))"];
"1001620" [label="(Call,al=SSL_AD_UNEXPECTED_MESSAGE)"];
"1001165" [label="(Call,SSL_get_rbio(s))"];
"1000858" [label="(Identifier,NULL)"];
"1000722" [label="(Call,SSL_get_rbio(s))"];
"1000600" [label="(Identifier,s)"];
"1000744" [label="(Block,)"];
"1001031" [label="(Identifier,s)"];
"1001202" [label="(Identifier,p)"];
"1000203" [label="(Call,type != SSL3_RT_APPLICATION_DATA)"];
"1001146" [label="(Call,SSL_get_rbio(s))"];
"1000417" [label="(Identifier,s)"];
"1000609" [label="(Identifier,s)"];
"1001370" [label="(Call,s->version)"];
"1000615" [label="(Identifier,s)"];
"1000201" [label="(Call,peek && (type != SSL3_RT_APPLICATION_DATA))"];
"1000710" [label="(Identifier,s)"];
"1001701" [label="(Identifier,SSL3_AL_FATAL)"];
"1000974" [label="(Call,i < 0)"];
"1001008" [label="(Block,)"];
"1000676" [label="(Identifier,SSL3_RT_ALERT)"];
"1001456" [label="(Identifier,rr)"];
"1001274" [label="(Literal,0)"];
"1001073" [label="(Call,s->d1->alert_fragment)"];
"1001429" [label="(Literal,1)"];
"1001214" [label="(Call,&found)"];
"1000836" [label="(Call,s->d1->handshake_fragment_len >= DTLS1_HM_HEADER_LENGTH)"];
"1000355" [label="(Call,dtls1_handle_timeout(s))"];
"1000486" [label="(Identifier,SSL3_RT_APPLICATION_DATA)"];
"1001221" [label="(Identifier,s)"];
"1000185" [label="(Call,ssl3_setup_buffers(s))"];
"1001485" [label="(Call,dtls1_retransmit_buffered_messages(s))"];
"1001212" [label="(Literal,0)"];
"1000969" [label="(Call,i=s->handshake_func(s))"];
"1001533" [label="(Call,i=s->handshake_func(s))"];
"1000756" [label="(Identifier,s)"];
"1001606" [label="(Identifier,rr)"];
"1001015" [label="(Call,bio=SSL_get_rbio(s))"];
"1000671" [label="(ControlStructure,if (rr->type == SSL3_RT_ALERT))"];
"1000885" [label="(Call,(s->d1->handshake_fragment[2] != 0) ||\n\t\t\t(s->d1->handshake_fragment[3] != 0))"];
"1000912" [label="(ControlStructure,if (s->msg_callback))"];
"1000829" [label="(ControlStructure,if ((!s->server) &&\n\t\t(s->d1->handshake_fragment_len >= DTLS1_HM_HEADER_LENGTH) &&\n\t\t(s->d1->handshake_fragment[0] == SSL3_MT_HELLO_REQUEST) &&\n\t\t(s->session != NULL) && (s->session->cipher != NULL)))"];
"1000381" [label="(Call,ret = dtls1_read_failed(s, ret))"];
"1001344" [label="(Call,rr->data[0] != SSL3_MT_CCS)"];
"1001206" [label="(Call,dtls1_get_queue_priority(frag->msg_header.seq, 0))"];
"1000159" [label="(MethodParameterIn,unsigned char *buf)"];
"1000439" [label="(Literal,0)"];
"1000677" [label="(Block,)"];
"1000922" [label="(Call,s->d1->handshake_fragment)"];
"1000217" [label="(Identifier,s)"];
"1000899" [label="(Identifier,s)"];
"1001125" [label="(Identifier,j)"];
"1001217" [label="(Call,! found  && SSL_in_init(s))"];
"1000571" [label="(Identifier,s)"];
"1000555" [label="(Literal,0)"];
"1000764" [label="(Call,BIO_set_retry_read(bio))"];
"1000721" [label="(Call,BIO_clear_retry_flags(SSL_get_rbio(s)))"];
"1000323" [label="(Block,)"];
"1001113" [label="(Identifier,NULL)"];
"1001120" [label="(Literal,8)"];
"1001410" [label="(Call,dtls1_reset_seq_numbers(s, SSL3_CC_READ))"];
"1001218" [label="(Call,! found)"];
"1001544" [label="(Call,i == 0)"];
"1000216" [label="(Call,have_handshake_fragment(s, type, buf, len, peek))"];
"1001138" [label="(ControlStructure,if (alert_descr == SSL_AD_CLOSE_NOTIFY))"];
"1001339" [label="(Call,rr->off != 0)"];
"1000865" [label="(Identifier,NULL)"];
"1000540" [label="(Call,rr->length-=n)"];
"1001039" [label="(Call,s->d1->alert_fragment[0])"];
"1000493" [label="(Call,al=SSL_AD_UNEXPECTED_MESSAGE)"];
"1000985" [label="(Identifier,SSL_F_DTLS1_READ_BYTES)"];
"1001480" [label="(Identifier,s)"];
"1001063" [label="(ControlStructure,if (s->msg_callback))"];
"1000951" [label="(Block,)"];
"1000409" [label="(Identifier,rr)"];
"1001151" [label="(Block,)"];
"1000626" [label="(Block,)"];
"1001545" [label="(Identifier,i)"];
"1001541" [label="(Return,return(i);)"];
"1000968" [label="(Block,)"];
"1000200" [label="(Identifier,SSL3_RT_HANDSHAKE)"];
"1000887" [label="(Call,s->d1->handshake_fragment[2])"];
"1000309" [label="(Call,s->d1->buffered_app_data.q)"];
"1001114" [label="(Block,)"];
"1000380" [label="(Block,)"];
"1000638" [label="(Identifier,dest_len)"];
"1001702" [label="(Identifier,al)"];
"1000374" [label="(Call,dtls1_get_record(s))"];
"1000830" [label="(Call,(!s->server) &&\n\t\t(s->d1->handshake_fragment_len >= DTLS1_HM_HEADER_LENGTH) &&\n\t\t(s->d1->handshake_fragment[0] == SSL3_MT_HELLO_REQUEST) &&\n\t\t(s->session != NULL) && (s->session->cipher != NULL))"];
"1001167" [label="(Call,BIO_set_retry_read(SSL_get_rbio(s)))"];
"1001369" [label="(Literal,0)"];
"1001408" [label="(Identifier,s)"];
"1000619" [label="(Identifier,s)"];
"1001067" [label="(Call,s->msg_callback(0, s->version, SSL3_RT_ALERT, \n\t\t\t\ts->d1->alert_fragment, 2, s, s->msg_callback_arg))"];
"1000639" [label="(Identifier,NULL)"];
"1000522" [label="(Call,(unsigned int)len)"];
"1001096" [label="(Call,s->ctx->info_callback != NULL)"];
"1000483" [label="(Call,(type == SSL3_RT_APPLICATION_DATA) &&\n\t\t\t(s->enc_read_ctx == NULL))"];
"1000976" [label="(Literal,0)"];
"1000539" [label="(Block,)"];
"1001128" [label="(Identifier,alert_level)"];
"1000633" [label="(Call,*dest = NULL)"];
"1000574" [label="(Call,rr->type)"];
"1000572" [label="(Call,rr->type == SSL3_RT_APPLICATION_DATA &&\n\t\t\t    (s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK))"];
"1000449" [label="(Identifier,rr)"];
"1000896" [label="(Call,s->d1->handshake_fragment[3])"];
"1001579" [label="(Call,bio=SSL_get_rbio(s))"];
"1000391" [label="(Identifier,ret)"];
"1000603" [label="(Call,BIO_dgram_is_sctp(SSL_get_rbio(s)))"];
"1000605" [label="(Identifier,s)"];
"1000921" [label="(Identifier,SSL3_RT_HANDSHAKE)"];
"1000703" [label="(Call,rr->type == TLS1_RT_HEARTBEAT)"];
"1001320" [label="(Call,&ccs_hdr)"];
"1001546" [label="(Literal,0)"];
"1000436" [label="(Call,rr->seq_num)"];
"1001350" [label="(Identifier,SSL3_MT_CCS)"];
"1000708" [label="(Block,)"];
"1000723" [label="(Identifier,s)"];
"1000862" [label="(Identifier,s)"];
"1001068" [label="(Literal,0)"];
"1000578" [label="(Call,s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1000514" [label="(Call,n = rr->length)"];
"1000219" [label="(Identifier,buf)"];
"1001048" [label="(Identifier,alert_descr)"];
"1000395" [label="(Call,s->d1->listen && rr->type != SSL3_RT_HANDSHAKE)"];
"1001586" [label="(Identifier,bio)"];
"1001198" [label="(Call,n2s(p, seq))"];
"1001310" [label="(Block,)"];
"1000601" [label="(ControlStructure,if (BIO_dgram_is_sctp(SSL_get_rbio(s)) &&\n\t\t\t    s->d1->shutdown_received && !BIO_dgram_sctp_msg_waiting(SSL_get_rbio(s))))"];
"1000955" [label="(Identifier,s)"];
"1000356" [label="(Identifier,s)"];
"1000231" [label="(Call,SSL_in_init(s))"];
"1000373" [label="(Identifier,ret)"];
"1000237" [label="(Call,(s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK) &&\n\t     s->s3->in_read_app_data != 2)"];
"1000319" [label="(ControlStructure,if (BIO_dgram_is_sctp(SSL_get_rbio(s))))"];
"1000482" [label="(Identifier,s)"];
"1001118" [label="(Call,alert_level << 8)"];
"1001539" [label="(Identifier,i)"];
"1000421" [label="(Call,rr->type)"];
"1000688" [label="(Call,s->d1->alert_fragment)"];
"1001016" [label="(Identifier,bio)"];
"1000729" [label="(Literal,1)"];
"1000383" -> "1000381"  [label="AST: "];
"1000383" -> "1000385"  [label="CFG: "];
"1000384" -> "1000383"  [label="AST: "];
"1000385" -> "1000383"  [label="AST: "];
"1000381" -> "1000383"  [label="CFG: "];
"1000383" -> "1001707"  [label="DDG: s"];
"1000383" -> "1000321"  [label="DDG: s"];
"1000383" -> "1000355"  [label="DDG: s"];
"1000383" -> "1000381"  [label="DDG: s"];
"1000383" -> "1000381"  [label="DDG: ret"];
"1000374" -> "1000383"  [label="DDG: s"];
"1000157" -> "1000383"  [label="DDG: s"];
"1000377" -> "1000383"  [label="DDG: ret"];
"1000374" -> "1000372"  [label="AST: "];
"1000374" -> "1000375"  [label="CFG: "];
"1000375" -> "1000374"  [label="AST: "];
"1000372" -> "1000374"  [label="CFG: "];
"1000374" -> "1001707"  [label="DDG: s"];
"1000374" -> "1000321"  [label="DDG: s"];
"1000374" -> "1000355"  [label="DDG: s"];
"1000374" -> "1000372"  [label="DDG: s"];
"1000355" -> "1000374"  [label="DDG: s"];
"1000157" -> "1000374"  [label="DDG: s"];
"1000374" -> "1000428"  [label="DDG: s"];
"1000374" -> "1000481"  [label="DDG: s"];
"1000374" -> "1000709"  [label="DDG: s"];
"1000374" -> "1000755"  [label="DDG: s"];
"1000374" -> "1000916"  [label="DDG: s"];
"1000374" -> "1000934"  [label="DDG: s"];
"1000374" -> "1001067"  [label="DDG: s"];
"1000374" -> "1001122"  [label="DDG: s"];
"1000374" -> "1001146"  [label="DDG: s"];
"1000374" -> "1001204"  [label="DDG: s"];
"1000374" -> "1001368"  [label="DDG: s"];
"1000374" -> "1001407"  [label="DDG: s"];
"1000374" -> "1001479"  [label="DDG: s"];
"1000374" -> "1001535"  [label="DDG: s"];
"1000374" -> "1001699"  [label="DDG: s"];
"1000355" -> "1000354"  [label="AST: "];
"1000355" -> "1000356"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000357" -> "1000355"  [label="CFG: "];
"1000355" -> "1001707"  [label="DDG: s"];
"1000355" -> "1000321"  [label="DDG: s"];
"1000355" -> "1000354"  [label="DDG: s"];
"1001220" -> "1000355"  [label="DDG: s"];
"1000971" -> "1000355"  [label="DDG: s"];
"1000934" -> "1000355"  [label="DDG: s"];
"1001204" -> "1000355"  [label="DDG: s"];
"1000235" -> "1000355"  [label="DDG: s"];
"1000216" -> "1000355"  [label="DDG: s"];
"1000966" -> "1000355"  [label="DDG: s"];
"1001535" -> "1000355"  [label="DDG: s"];
"1000231" -> "1000355"  [label="DDG: s"];
"1001067" -> "1000355"  [label="DDG: s"];
"1000428" -> "1000355"  [label="DDG: s"];
"1001223" -> "1000355"  [label="DDG: s"];
"1000259" -> "1000355"  [label="DDG: s"];
"1001122" -> "1000355"  [label="DDG: s"];
"1001426" -> "1000355"  [label="DDG: s"];
"1001485" -> "1000355"  [label="DDG: s"];
"1000344" -> "1000355"  [label="DDG: s"];
"1001368" -> "1000355"  [label="DDG: s"];
"1000157" -> "1000355"  [label="DDG: s"];
"1000355" -> "1000428"  [label="DDG: s"];
"1000355" -> "1000481"  [label="DDG: s"];
"1000355" -> "1000709"  [label="DDG: s"];
"1000355" -> "1000755"  [label="DDG: s"];
"1000355" -> "1000916"  [label="DDG: s"];
"1000355" -> "1000934"  [label="DDG: s"];
"1000355" -> "1001067"  [label="DDG: s"];
"1000355" -> "1001122"  [label="DDG: s"];
"1000355" -> "1001146"  [label="DDG: s"];
"1000355" -> "1001204"  [label="DDG: s"];
"1000355" -> "1001368"  [label="DDG: s"];
"1000355" -> "1001407"  [label="DDG: s"];
"1000355" -> "1001479"  [label="DDG: s"];
"1000355" -> "1001535"  [label="DDG: s"];
"1000355" -> "1001699"  [label="DDG: s"];
"1001220" -> "1001217"  [label="AST: "];
"1001220" -> "1001221"  [label="CFG: "];
"1001221" -> "1001220"  [label="AST: "];
"1001217" -> "1001220"  [label="CFG: "];
"1001220" -> "1000321"  [label="DDG: s"];
"1001220" -> "1001217"  [label="DDG: s"];
"1001204" -> "1001220"  [label="DDG: s"];
"1000157" -> "1001220"  [label="DDG: s"];
"1001220" -> "1001223"  [label="DDG: s"];
"1001204" -> "1001184"  [label="AST: "];
"1001204" -> "1001214"  [label="CFG: "];
"1001205" -> "1001204"  [label="AST: "];
"1001206" -> "1001204"  [label="AST: "];
"1001213" -> "1001204"  [label="AST: "];
"1001214" -> "1001204"  [label="AST: "];
"1001219" -> "1001204"  [label="CFG: "];
"1001204" -> "1001707"  [label="DDG: frag_off"];
"1001204" -> "1001707"  [label="DDG: dtls1_get_queue_priority(frag->msg_header.seq, 0)"];
"1001204" -> "1001707"  [label="DDG: dtls1_retransmit_message(s,\n\t\t\t\t\t\t\t\t\t\t dtls1_get_queue_priority(frag->msg_header.seq, 0),\n\t\t\t\t\t\t\t\t\t\t frag_off, &found)"];
"1001204" -> "1001707"  [label="DDG: &found"];
"1001204" -> "1000321"  [label="DDG: s"];
"1001204" -> "1001201"  [label="DDG: frag_off"];
"1001067" -> "1001204"  [label="DDG: s"];
"1001122" -> "1001204"  [label="DDG: s"];
"1000157" -> "1001204"  [label="DDG: s"];
"1001206" -> "1001204"  [label="DDG: frag->msg_header.seq"];
"1001206" -> "1001204"  [label="DDG: 0"];
"1001201" -> "1001204"  [label="DDG: frag_off"];
"1001204" -> "1001223"  [label="DDG: s"];
"1001067" -> "1001063"  [label="AST: "];
"1001067" -> "1001080"  [label="CFG: "];
"1001068" -> "1001067"  [label="AST: "];
"1001069" -> "1001067"  [label="AST: "];
"1001072" -> "1001067"  [label="AST: "];
"1001073" -> "1001067"  [label="AST: "];
"1001078" -> "1001067"  [label="AST: "];
"1001079" -> "1001067"  [label="AST: "];
"1001080" -> "1001067"  [label="AST: "];
"1001086" -> "1001067"  [label="CFG: "];
"1001067" -> "1001707"  [label="DDG: s->msg_callback_arg"];
"1001067" -> "1001707"  [label="DDG: s->d1->alert_fragment"];
"1001067" -> "1001707"  [label="DDG: SSL3_RT_ALERT"];
"1001067" -> "1001707"  [label="DDG: s->version"];
"1001067" -> "1001707"  [label="DDG: s->msg_callback(0, s->version, SSL3_RT_ALERT, \n\t\t\t\ts->d1->alert_fragment, 2, s, s->msg_callback_arg)"];
"1001067" -> "1001707"  [label="DDG: s"];
"1001067" -> "1000321"  [label="DDG: s"];
"1001067" -> "1000672"  [label="DDG: SSL3_RT_ALERT"];
"1001067" -> "1000686"  [label="DDG: s->d1->alert_fragment"];
"1001067" -> "1000916"  [label="DDG: s->version"];
"1001067" -> "1000916"  [label="DDG: s->msg_callback_arg"];
"1000916" -> "1001067"  [label="DDG: s->version"];
"1000916" -> "1001067"  [label="DDG: s->msg_callback_arg"];
"1001598" -> "1001067"  [label="DDG: s->version"];
"1001414" -> "1001067"  [label="DDG: s->version"];
"1001323" -> "1001067"  [label="DDG: s->version"];
"1001368" -> "1001067"  [label="DDG: s->version"];
"1001368" -> "1001067"  [label="DDG: s->msg_callback_arg"];
"1000672" -> "1001067"  [label="DDG: SSL3_RT_ALERT"];
"1000157" -> "1001067"  [label="DDG: s"];
"1001067" -> "1001122"  [label="DDG: s"];
"1001067" -> "1001146"  [label="DDG: s"];
"1001067" -> "1001188"  [label="DDG: s->d1->alert_fragment"];
"1001067" -> "1001323"  [label="DDG: s->version"];
"1001067" -> "1001368"  [label="DDG: s->msg_callback_arg"];
"1001067" -> "1001598"  [label="DDG: s->version"];
"1001067" -> "1001699"  [label="DDG: s"];
"1000916" -> "1000912"  [label="AST: "];
"1000916" -> "1000929"  [label="CFG: "];
"1000917" -> "1000916"  [label="AST: "];
"1000918" -> "1000916"  [label="AST: "];
"1000921" -> "1000916"  [label="AST: "];
"1000922" -> "1000916"  [label="AST: "];
"1000927" -> "1000916"  [label="AST: "];
"1000928" -> "1000916"  [label="AST: "];
"1000929" -> "1000916"  [label="AST: "];
"1000935" -> "1000916"  [label="CFG: "];
"1000916" -> "1001707"  [label="DDG: s->version"];
"1000916" -> "1001707"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000916" -> "1001707"  [label="DDG: s->msg_callback(0, s->version, SSL3_RT_HANDSHAKE, \n\t\t\t\ts->d1->handshake_fragment, 4, s, s->msg_callback_arg)"];
"1000916" -> "1001707"  [label="DDG: s->msg_callback_arg"];
"1000916" -> "1001707"  [label="DDG: s->d1->handshake_fragment"];
"1000916" -> "1000401"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000916" -> "1000420"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000916" -> "1000641"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1001598" -> "1000916"  [label="DDG: s->version"];
"1001414" -> "1000916"  [label="DDG: s->version"];
"1001323" -> "1000916"  [label="DDG: s->version"];
"1001368" -> "1000916"  [label="DDG: s->version"];
"1001368" -> "1000916"  [label="DDG: s->msg_callback_arg"];
"1000641" -> "1000916"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000886" -> "1000916"  [label="DDG: s->d1->handshake_fragment[2]"];
"1000895" -> "1000916"  [label="DDG: s->d1->handshake_fragment[3]"];
"1000844" -> "1000916"  [label="DDG: s->d1->handshake_fragment[0]"];
"1000876" -> "1000916"  [label="DDG: s->d1->handshake_fragment[1]"];
"1000157" -> "1000916"  [label="DDG: s"];
"1000916" -> "1000934"  [label="DDG: s"];
"1000916" -> "1001323"  [label="DDG: s->version"];
"1000916" -> "1001368"  [label="DDG: s->msg_callback_arg"];
"1000916" -> "1001598"  [label="DDG: s->version"];
"1001598" -> "1001597"  [label="AST: "];
"1001598" -> "1001602"  [label="CFG: "];
"1001599" -> "1001598"  [label="AST: "];
"1001602" -> "1001598"  [label="AST: "];
"1001606" -> "1001598"  [label="CFG: "];
"1001611" -> "1001598"  [label="CFG: "];
"1001598" -> "1001707"  [label="DDG: TLS1_VERSION"];
"1001598" -> "1001707"  [label="DDG: s->version"];
"1001598" -> "1001707"  [label="DDG: s->version == TLS1_VERSION"];
"1001598" -> "1001323"  [label="DDG: s->version"];
"1001414" -> "1001598"  [label="DDG: s->version"];
"1001323" -> "1001598"  [label="DDG: s->version"];
"1001368" -> "1001598"  [label="DDG: s->version"];
"1001414" -> "1001413"  [label="AST: "];
"1001414" -> "1001418"  [label="CFG: "];
"1001415" -> "1001414"  [label="AST: "];
"1001418" -> "1001414"  [label="AST: "];
"1001422" -> "1001414"  [label="CFG: "];
"1001427" -> "1001414"  [label="CFG: "];
"1001414" -> "1001707"  [label="DDG: s->version"];
"1001414" -> "1001707"  [label="DDG: DTLS1_BAD_VER"];
"1001414" -> "1001707"  [label="DDG: s->version == DTLS1_BAD_VER"];
"1001414" -> "1001323"  [label="DDG: s->version"];
"1001414" -> "1001323"  [label="DDG: DTLS1_BAD_VER"];
"1001323" -> "1001414"  [label="DDG: s->version"];
"1001323" -> "1001414"  [label="DDG: DTLS1_BAD_VER"];
"1001368" -> "1001414"  [label="DDG: s->version"];
"1001323" -> "1001322"  [label="AST: "];
"1001323" -> "1001327"  [label="CFG: "];
"1001324" -> "1001323"  [label="AST: "];
"1001327" -> "1001323"  [label="AST: "];
"1001329" -> "1001323"  [label="CFG: "];
"1001335" -> "1001323"  [label="CFG: "];
"1001323" -> "1001707"  [label="DDG: s->version"];
"1001323" -> "1001707"  [label="DDG: s->version == DTLS1_BAD_VER"];
"1001323" -> "1001707"  [label="DDG: DTLS1_BAD_VER"];
"1001368" -> "1001323"  [label="DDG: s->version"];
"1001323" -> "1001368"  [label="DDG: s->version"];
"1001368" -> "1001364"  [label="AST: "];
"1001368" -> "1001379"  [label="CFG: "];
"1001369" -> "1001368"  [label="AST: "];
"1001370" -> "1001368"  [label="AST: "];
"1001373" -> "1001368"  [label="AST: "];
"1001374" -> "1001368"  [label="AST: "];
"1001377" -> "1001368"  [label="AST: "];
"1001378" -> "1001368"  [label="AST: "];
"1001379" -> "1001368"  [label="AST: "];
"1001386" -> "1001368"  [label="CFG: "];
"1001368" -> "1001707"  [label="DDG: SSL3_RT_CHANGE_CIPHER_SPEC"];
"1001368" -> "1001707"  [label="DDG: rr->data"];
"1001368" -> "1001707"  [label="DDG: s->version"];
"1001368" -> "1001707"  [label="DDG: s->msg_callback(0, s->version, SSL3_RT_CHANGE_CIPHER_SPEC, \n\t\t\t\trr->data, 1, s, s->msg_callback_arg)"];
"1001368" -> "1001707"  [label="DDG: s->msg_callback_arg"];
"1001368" -> "1000321"  [label="DDG: s"];
"1001368" -> "1000525"  [label="DDG: rr->data"];
"1001368" -> "1000732"  [label="DDG: SSL3_RT_CHANGE_CIPHER_SPEC"];
"1001368" -> "1001305"  [label="DDG: SSL3_RT_CHANGE_CIPHER_SPEC"];
"1001368" -> "1001316"  [label="DDG: rr->data"];
"1001305" -> "1001368"  [label="DDG: SSL3_RT_CHANGE_CIPHER_SPEC"];
"1001316" -> "1001368"  [label="DDG: rr->data"];
"1001344" -> "1001368"  [label="DDG: rr->data[0]"];
"1000157" -> "1001368"  [label="DDG: s"];
"1001368" -> "1001407"  [label="DDG: s"];
"1001368" -> "1001447"  [label="DDG: rr->data"];
"1001305" -> "1001304"  [label="AST: "];
"1001305" -> "1001309"  [label="CFG: "];
"1001306" -> "1001305"  [label="AST: "];
"1001309" -> "1001305"  [label="AST: "];
"1001314" -> "1001305"  [label="CFG: "];
"1001437" -> "1001305"  [label="CFG: "];
"1001305" -> "1001707"  [label="DDG: SSL3_RT_CHANGE_CIPHER_SPEC"];
"1001305" -> "1001707"  [label="DDG: rr->type == SSL3_RT_CHANGE_CIPHER_SPEC"];
"1001305" -> "1001707"  [label="DDG: rr->type"];
"1001305" -> "1000401"  [label="DDG: rr->type"];
"1001305" -> "1000420"  [label="DDG: rr->type"];
"1001305" -> "1000473"  [label="DDG: rr->type"];
"1001305" -> "1000732"  [label="DDG: SSL3_RT_CHANGE_CIPHER_SPEC"];
"1000672" -> "1001305"  [label="DDG: rr->type"];
"1000641" -> "1001305"  [label="DDG: rr->type"];
"1000732" -> "1001305"  [label="DDG: rr->type"];
"1000732" -> "1001305"  [label="DDG: SSL3_RT_CHANGE_CIPHER_SPEC"];
"1000672" -> "1000671"  [label="AST: "];
"1000672" -> "1000676"  [label="CFG: "];
"1000673" -> "1000672"  [label="AST: "];
"1000676" -> "1000672"  [label="AST: "];
"1000679" -> "1000672"  [label="CFG: "];
"1000705" -> "1000672"  [label="CFG: "];
"1000672" -> "1001707"  [label="DDG: SSL3_RT_ALERT"];
"1000672" -> "1001707"  [label="DDG: rr->type == SSL3_RT_ALERT"];
"1000672" -> "1001707"  [label="DDG: rr->type"];
"1000672" -> "1000401"  [label="DDG: rr->type"];
"1000672" -> "1000420"  [label="DDG: rr->type"];
"1000672" -> "1000473"  [label="DDG: rr->type"];
"1000641" -> "1000672"  [label="DDG: rr->type"];
"1000672" -> "1000703"  [label="DDG: rr->type"];
"1000641" -> "1000640"  [label="AST: "];
"1000641" -> "1000645"  [label="CFG: "];
"1000642" -> "1000641"  [label="AST: "];
"1000645" -> "1000641"  [label="AST: "];
"1000648" -> "1000641"  [label="CFG: "];
"1000674" -> "1000641"  [label="CFG: "];
"1000641" -> "1001707"  [label="DDG: rr->type == SSL3_RT_HANDSHAKE"];
"1000641" -> "1001707"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000641" -> "1001707"  [label="DDG: rr->type"];
"1000641" -> "1000401"  [label="DDG: rr->type"];
"1000641" -> "1000401"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000641" -> "1000420"  [label="DDG: rr->type"];
"1000641" -> "1000420"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000641" -> "1000473"  [label="DDG: rr->type"];
"1000473" -> "1000641"  [label="DDG: rr->type"];
"1000401" -> "1000641"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000198" -> "1000641"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000420" -> "1000641"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000473" -> "1000472"  [label="AST: "];
"1000473" -> "1000475"  [label="CFG: "];
"1000474" -> "1000473"  [label="AST: "];
"1000475" -> "1000473"  [label="AST: "];
"1000482" -> "1000473"  [label="CFG: "];
"1000630" -> "1000473"  [label="CFG: "];
"1000473" -> "1001707"  [label="DDG: type"];
"1000473" -> "1001707"  [label="DDG: rr->type"];
"1000473" -> "1001707"  [label="DDG: type == rr->type"];
"1000216" -> "1000473"  [label="DDG: type"];
"1000158" -> "1000473"  [label="DDG: type"];
"1000401" -> "1000473"  [label="DDG: rr->type"];
"1000420" -> "1000473"  [label="DDG: rr->type"];
"1000732" -> "1000473"  [label="DDG: rr->type"];
"1000473" -> "1000484"  [label="DDG: type"];
"1000473" -> "1000573"  [label="DDG: rr->type"];
"1000216" -> "1000214"  [label="AST: "];
"1000216" -> "1000221"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000218" -> "1000216"  [label="AST: "];
"1000219" -> "1000216"  [label="AST: "];
"1000220" -> "1000216"  [label="AST: "];
"1000221" -> "1000216"  [label="AST: "];
"1000214" -> "1000216"  [label="CFG: "];
"1000216" -> "1001707"  [label="DDG: peek"];
"1000216" -> "1001707"  [label="DDG: buf"];
"1000216" -> "1001707"  [label="DDG: s"];
"1000216" -> "1001707"  [label="DDG: type"];
"1000216" -> "1001707"  [label="DDG: len"];
"1000216" -> "1000214"  [label="DDG: type"];
"1000216" -> "1000214"  [label="DDG: s"];
"1000216" -> "1000214"  [label="DDG: buf"];
"1000216" -> "1000214"  [label="DDG: peek"];
"1000216" -> "1000214"  [label="DDG: len"];
"1000185" -> "1000216"  [label="DDG: s"];
"1000157" -> "1000216"  [label="DDG: s"];
"1000192" -> "1000216"  [label="DDG: type"];
"1000203" -> "1000216"  [label="DDG: type"];
"1000158" -> "1000216"  [label="DDG: type"];
"1000159" -> "1000216"  [label="DDG: buf"];
"1000160" -> "1000216"  [label="DDG: len"];
"1000201" -> "1000216"  [label="DDG: peek"];
"1000161" -> "1000216"  [label="DDG: peek"];
"1000216" -> "1000231"  [label="DDG: s"];
"1000216" -> "1000235"  [label="DDG: s"];
"1000216" -> "1000259"  [label="DDG: s"];
"1000216" -> "1000321"  [label="DDG: s"];
"1000216" -> "1000501"  [label="DDG: len"];
"1000216" -> "1000525"  [label="DDG: buf"];
"1000216" -> "1000537"  [label="DDG: peek"];
"1000185" -> "1000184"  [label="AST: "];
"1000185" -> "1000186"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000184" -> "1000185"  [label="CFG: "];
"1000185" -> "1001707"  [label="DDG: s"];
"1000185" -> "1000184"  [label="DDG: s"];
"1000157" -> "1000185"  [label="DDG: s"];
"1000157" -> "1000156"  [label="AST: "];
"1000157" -> "1001707"  [label="DDG: s"];
"1000157" -> "1000231"  [label="DDG: s"];
"1000157" -> "1000235"  [label="DDG: s"];
"1000157" -> "1000259"  [label="DDG: s"];
"1000157" -> "1000321"  [label="DDG: s"];
"1000157" -> "1000333"  [label="DDG: s"];
"1000157" -> "1000344"  [label="DDG: s"];
"1000157" -> "1000428"  [label="DDG: s"];
"1000157" -> "1000481"  [label="DDG: s"];
"1000157" -> "1000570"  [label="DDG: s"];
"1000157" -> "1000596"  [label="DDG: s"];
"1000157" -> "1000599"  [label="DDG: s"];
"1000157" -> "1000604"  [label="DDG: s"];
"1000157" -> "1000614"  [label="DDG: s"];
"1000157" -> "1000709"  [label="DDG: s"];
"1000157" -> "1000722"  [label="DDG: s"];
"1000157" -> "1000725"  [label="DDG: s"];
"1000157" -> "1000755"  [label="DDG: s"];
"1000157" -> "1000934"  [label="DDG: s"];
"1000157" -> "1000963"  [label="DDG: s"];
"1000157" -> "1000966"  [label="DDG: s"];
"1000157" -> "1000971"  [label="DDG: s"];
"1000157" -> "1001017"  [label="DDG: s"];
"1000157" -> "1001122"  [label="DDG: s"];
"1000157" -> "1001146"  [label="DDG: s"];
"1000157" -> "1001149"  [label="DDG: s"];
"1000157" -> "1001165"  [label="DDG: s"];
"1000157" -> "1001168"  [label="DDG: s"];
"1000157" -> "1001223"  [label="DDG: s"];
"1000157" -> "1001407"  [label="DDG: s"];
"1000157" -> "1001410"  [label="DDG: s"];
"1000157" -> "1001426"  [label="DDG: s"];
"1000157" -> "1001479"  [label="DDG: s"];
"1000157" -> "1001485"  [label="DDG: s"];
"1000157" -> "1001535"  [label="DDG: s"];
"1000157" -> "1001581"  [label="DDG: s"];
"1000157" -> "1001699"  [label="DDG: s"];
"1000192" -> "1000191"  [label="AST: "];
"1000192" -> "1000193"  [label="CFG: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000194" -> "1000192"  [label="AST: "];
"1000202" -> "1000192"  [label="CFG: "];
"1000191" -> "1000192"  [label="CFG: "];
"1000192" -> "1001707"  [label="DDG: (type != SSL3_RT_APPLICATION_DATA) && \n\t\t(type != SSL3_RT_HANDSHAKE)"];
"1000192" -> "1001707"  [label="DDG: type"];
"1000192" -> "1000191"  [label="DDG: type"];
"1000192" -> "1000191"  [label="DDG: (type != SSL3_RT_APPLICATION_DATA) && \n\t\t(type != SSL3_RT_HANDSHAKE)"];
"1000198" -> "1000192"  [label="DDG: type"];
"1000195" -> "1000192"  [label="DDG: type"];
"1000158" -> "1000192"  [label="DDG: type"];
"1000194" -> "1000192"  [label="DDG: type != SSL3_RT_APPLICATION_DATA"];
"1000194" -> "1000192"  [label="DDG: type != SSL3_RT_HANDSHAKE"];
"1000192" -> "1000203"  [label="DDG: type"];
"1000198" -> "1000194"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000194" -> "1000198"  [label="CFG: "];
"1000198" -> "1001707"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000198" -> "1000194"  [label="DDG: type"];
"1000198" -> "1000194"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000195" -> "1000198"  [label="DDG: type"];
"1000158" -> "1000198"  [label="DDG: type"];
"1000198" -> "1000401"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000198" -> "1000420"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000195" -> "1000194"  [label="AST: "];
"1000195" -> "1000197"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000197" -> "1000195"  [label="AST: "];
"1000199" -> "1000195"  [label="CFG: "];
"1000194" -> "1000195"  [label="CFG: "];
"1000195" -> "1001707"  [label="DDG: SSL3_RT_APPLICATION_DATA"];
"1000195" -> "1000194"  [label="DDG: type"];
"1000195" -> "1000194"  [label="DDG: SSL3_RT_APPLICATION_DATA"];
"1000158" -> "1000195"  [label="DDG: type"];
"1000195" -> "1000203"  [label="DDG: SSL3_RT_APPLICATION_DATA"];
"1000195" -> "1000484"  [label="DDG: SSL3_RT_APPLICATION_DATA"];
"1000195" -> "1000573"  [label="DDG: SSL3_RT_APPLICATION_DATA"];
"1000195" -> "1000739"  [label="DDG: SSL3_RT_APPLICATION_DATA"];
"1000158" -> "1000156"  [label="AST: "];
"1000158" -> "1001707"  [label="DDG: type"];
"1000158" -> "1000203"  [label="DDG: type"];
"1000158" -> "1000484"  [label="DDG: type"];
"1000194" -> "1001707"  [label="DDG: type != SSL3_RT_APPLICATION_DATA"];
"1000194" -> "1001707"  [label="DDG: type != SSL3_RT_HANDSHAKE"];
"1000194" -> "1000201"  [label="DDG: type != SSL3_RT_APPLICATION_DATA"];
"1000203" -> "1000201"  [label="AST: "];
"1000203" -> "1000205"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000203"  [label="AST: "];
"1000201" -> "1000203"  [label="CFG: "];
"1000203" -> "1001707"  [label="DDG: SSL3_RT_APPLICATION_DATA"];
"1000203" -> "1001707"  [label="DDG: type"];
"1000203" -> "1000201"  [label="DDG: type"];
"1000203" -> "1000201"  [label="DDG: SSL3_RT_APPLICATION_DATA"];
"1000203" -> "1000484"  [label="DDG: SSL3_RT_APPLICATION_DATA"];
"1000203" -> "1000573"  [label="DDG: SSL3_RT_APPLICATION_DATA"];
"1000203" -> "1000739"  [label="DDG: SSL3_RT_APPLICATION_DATA"];
"1000159" -> "1000156"  [label="AST: "];
"1000159" -> "1001707"  [label="DDG: buf"];
"1000159" -> "1000525"  [label="DDG: buf"];
"1000160" -> "1000156"  [label="AST: "];
"1000160" -> "1001707"  [label="DDG: len"];
"1000160" -> "1000501"  [label="DDG: len"];
"1000160" -> "1000504"  [label="DDG: len"];
"1000160" -> "1000508"  [label="DDG: len"];
"1000160" -> "1000522"  [label="DDG: len"];
"1000201" -> "1000191"  [label="AST: "];
"1000201" -> "1000202"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000191" -> "1000201"  [label="CFG: "];
"1000201" -> "1001707"  [label="DDG: type != SSL3_RT_APPLICATION_DATA"];
"1000201" -> "1001707"  [label="DDG: peek"];
"1000201" -> "1000191"  [label="DDG: peek"];
"1000201" -> "1000191"  [label="DDG: type != SSL3_RT_APPLICATION_DATA"];
"1000161" -> "1000201"  [label="DDG: peek"];
"1000161" -> "1000156"  [label="AST: "];
"1000161" -> "1001707"  [label="DDG: peek"];
"1000161" -> "1000537"  [label="DDG: peek"];
"1000401" -> "1000395"  [label="AST: "];
"1000401" -> "1000405"  [label="CFG: "];
"1000402" -> "1000401"  [label="AST: "];
"1000405" -> "1000401"  [label="AST: "];
"1000395" -> "1000401"  [label="CFG: "];
"1000401" -> "1001707"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000401" -> "1001707"  [label="DDG: rr->type"];
"1000401" -> "1000395"  [label="DDG: rr->type"];
"1000401" -> "1000395"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000420" -> "1000401"  [label="DDG: rr->type"];
"1000420" -> "1000401"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000732" -> "1000401"  [label="DDG: rr->type"];
"1000401" -> "1000420"  [label="DDG: rr->type"];
"1000401" -> "1000420"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000420" -> "1000414"  [label="AST: "];
"1000420" -> "1000424"  [label="CFG: "];
"1000421" -> "1000420"  [label="AST: "];
"1000424" -> "1000420"  [label="AST: "];
"1000414" -> "1000420"  [label="CFG: "];
"1000420" -> "1001707"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000420" -> "1001707"  [label="DDG: rr->type"];
"1000420" -> "1000414"  [label="DDG: rr->type"];
"1000420" -> "1000414"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000732" -> "1000420"  [label="DDG: rr->type"];
"1000732" -> "1000731"  [label="AST: "];
"1000732" -> "1000736"  [label="CFG: "];
"1000733" -> "1000732"  [label="AST: "];
"1000736" -> "1000732"  [label="AST: "];
"1000741" -> "1000732"  [label="CFG: "];
"1000778" -> "1000732"  [label="CFG: "];
"1000732" -> "1001707"  [label="DDG: SSL3_RT_CHANGE_CIPHER_SPEC"];
"1000732" -> "1001707"  [label="DDG: rr->type != SSL3_RT_CHANGE_CIPHER_SPEC"];
"1000732" -> "1001707"  [label="DDG: rr->type"];
"1000703" -> "1000732"  [label="DDG: rr->type"];
"1000732" -> "1000739"  [label="DDG: rr->type"];
"1000703" -> "1000702"  [label="AST: "];
"1000703" -> "1000707"  [label="CFG: "];
"1000704" -> "1000703"  [label="AST: "];
"1000707" -> "1000703"  [label="AST: "];
"1000710" -> "1000703"  [label="CFG: "];
"1000734" -> "1000703"  [label="CFG: "];
"1000703" -> "1001707"  [label="DDG: rr->type == TLS1_RT_HEARTBEAT"];
"1000703" -> "1001707"  [label="DDG: TLS1_RT_HEARTBEAT"];
"1000703" -> "1001707"  [label="DDG: rr->type"];
"1001316" -> "1001310"  [label="AST: "];
"1001316" -> "1001320"  [label="CFG: "];
"1001317" -> "1001316"  [label="AST: "];
"1001320" -> "1001316"  [label="AST: "];
"1001325" -> "1001316"  [label="CFG: "];
"1001316" -> "1001707"  [label="DDG: &ccs_hdr"];
"1001316" -> "1001707"  [label="DDG: dtls1_get_ccs_header(rr->data, &ccs_hdr)"];
"1001316" -> "1001707"  [label="DDG: rr->data"];
"1001316" -> "1000525"  [label="DDG: rr->data"];
"1001447" -> "1001316"  [label="DDG: rr->data"];
"1001344" -> "1001316"  [label="DDG: rr->data[0]"];
"1001316" -> "1001447"  [label="DDG: rr->data"];
"1001447" -> "1001445"  [label="AST: "];
"1001447" -> "1001451"  [label="CFG: "];
"1001448" -> "1001447"  [label="AST: "];
"1001451" -> "1001447"  [label="AST: "];
"1001456" -> "1001447"  [label="CFG: "];
"1001447" -> "1001707"  [label="DDG: &msg_hdr"];
"1001447" -> "1001707"  [label="DDG: rr->data"];
"1001447" -> "1001707"  [label="DDG: dtls1_get_message_header(rr->data, &msg_hdr)"];
"1001447" -> "1000525"  [label="DDG: rr->data"];
"1001344" -> "1001447"  [label="DDG: rr->data[0]"];
"1001344" -> "1001338"  [label="AST: "];
"1001344" -> "1001350"  [label="CFG: "];
"1001345" -> "1001344"  [label="AST: "];
"1001350" -> "1001344"  [label="AST: "];
"1001338" -> "1001344"  [label="CFG: "];
"1001344" -> "1001707"  [label="DDG: SSL3_MT_CCS"];
"1001344" -> "1001707"  [label="DDG: rr->data[0]"];
"1001344" -> "1001338"  [label="DDG: rr->data[0]"];
"1001344" -> "1001338"  [label="DDG: SSL3_MT_CCS"];
"1000886" -> "1000885"  [label="AST: "];
"1000886" -> "1000894"  [label="CFG: "];
"1000887" -> "1000886"  [label="AST: "];
"1000894" -> "1000886"  [label="AST: "];
"1000899" -> "1000886"  [label="CFG: "];
"1000885" -> "1000886"  [label="CFG: "];
"1000886" -> "1001707"  [label="DDG: s->d1->handshake_fragment[2]"];
"1000886" -> "1000655"  [label="DDG: s->d1->handshake_fragment[2]"];
"1000886" -> "1000885"  [label="DDG: s->d1->handshake_fragment[2]"];
"1000886" -> "1000885"  [label="DDG: 0"];
"1000895" -> "1000885"  [label="AST: "];
"1000895" -> "1000903"  [label="CFG: "];
"1000896" -> "1000895"  [label="AST: "];
"1000903" -> "1000895"  [label="AST: "];
"1000885" -> "1000895"  [label="CFG: "];
"1000895" -> "1001707"  [label="DDG: s->d1->handshake_fragment[3]"];
"1000895" -> "1000655"  [label="DDG: s->d1->handshake_fragment[3]"];
"1000895" -> "1000885"  [label="DDG: s->d1->handshake_fragment[3]"];
"1000895" -> "1000885"  [label="DDG: 0"];
"1000844" -> "1000843"  [label="AST: "];
"1000844" -> "1000852"  [label="CFG: "];
"1000845" -> "1000844"  [label="AST: "];
"1000852" -> "1000844"  [label="AST: "];
"1000856" -> "1000844"  [label="CFG: "];
"1000843" -> "1000844"  [label="CFG: "];
"1000844" -> "1001707"  [label="DDG: SSL3_MT_HELLO_REQUEST"];
"1000844" -> "1001707"  [label="DDG: s->d1->handshake_fragment[0]"];
"1000844" -> "1000655"  [label="DDG: s->d1->handshake_fragment[0]"];
"1000844" -> "1000843"  [label="DDG: s->d1->handshake_fragment[0]"];
"1000844" -> "1000843"  [label="DDG: SSL3_MT_HELLO_REQUEST"];
"1000876" -> "1000875"  [label="AST: "];
"1000876" -> "1000884"  [label="CFG: "];
"1000877" -> "1000876"  [label="AST: "];
"1000884" -> "1000876"  [label="AST: "];
"1000890" -> "1000876"  [label="CFG: "];
"1000875" -> "1000876"  [label="CFG: "];
"1000876" -> "1001707"  [label="DDG: s->d1->handshake_fragment[1]"];
"1000876" -> "1000655"  [label="DDG: s->d1->handshake_fragment[1]"];
"1000876" -> "1000875"  [label="DDG: s->d1->handshake_fragment[1]"];
"1000876" -> "1000875"  [label="DDG: 0"];
"1001122" -> "1001114"  [label="AST: "];
"1001122" -> "1001125"  [label="CFG: "];
"1001123" -> "1001122"  [label="AST: "];
"1001124" -> "1001122"  [label="AST: "];
"1001125" -> "1001122"  [label="AST: "];
"1001128" -> "1001122"  [label="CFG: "];
"1001122" -> "1001707"  [label="DDG: SSL_CB_READ_ALERT"];
"1001122" -> "1001707"  [label="DDG: s"];
"1001122" -> "1001707"  [label="DDG: cb(s, SSL_CB_READ_ALERT, j)"];
"1001122" -> "1001707"  [label="DDG: j"];
"1001122" -> "1000321"  [label="DDG: s"];
"1001115" -> "1001122"  [label="DDG: j"];
"1001122" -> "1001146"  [label="DDG: s"];
"1001122" -> "1001699"  [label="DDG: s"];
"1001115" -> "1001114"  [label="AST: "];
"1001115" -> "1001117"  [label="CFG: "];
"1001116" -> "1001115"  [label="AST: "];
"1001117" -> "1001115"  [label="AST: "];
"1001123" -> "1001115"  [label="CFG: "];
"1001115" -> "1001707"  [label="DDG: (alert_level << 8) | alert_descr"];
"1001117" -> "1001115"  [label="DDG: alert_level << 8"];
"1001117" -> "1001115"  [label="DDG: alert_descr"];
"1001117" -> "1001121"  [label="CFG: "];
"1001118" -> "1001117"  [label="AST: "];
"1001121" -> "1001117"  [label="AST: "];
"1001117" -> "1001707"  [label="DDG: alert_descr"];
"1001117" -> "1001707"  [label="DDG: alert_level << 8"];
"1001118" -> "1001117"  [label="DDG: alert_level"];
"1001118" -> "1001117"  [label="DDG: 8"];
"1001047" -> "1001117"  [label="DDG: alert_descr"];
"1001117" -> "1001131"  [label="DDG: alert_descr"];
"1001117" -> "1001139"  [label="DDG: alert_descr"];
"1001117" -> "1001239"  [label="DDG: alert_descr"];
"1001117" -> "1001246"  [label="DDG: alert_descr"];
"1001117" -> "1001248"  [label="DDG: alert_descr"];
"1001117" -> "1001251"  [label="DDG: alert_descr"];
"1001118" -> "1001120"  [label="CFG: "];
"1001119" -> "1001118"  [label="AST: "];
"1001120" -> "1001118"  [label="AST: "];
"1001121" -> "1001118"  [label="CFG: "];
"1001037" -> "1001118"  [label="DDG: alert_level"];
"1001118" -> "1001127"  [label="DDG: alert_level"];
"1001037" -> "1001035"  [label="AST: "];
"1001037" -> "1001039"  [label="CFG: "];
"1001038" -> "1001037"  [label="AST: "];
"1001039" -> "1001037"  [label="AST: "];
"1001048" -> "1001037"  [label="CFG: "];
"1001037" -> "1001707"  [label="DDG: s->d1->alert_fragment[0]"];
"1001037" -> "1001127"  [label="DDG: alert_level"];
"1001047" -> "1001035"  [label="AST: "];
"1001047" -> "1001049"  [label="CFG: "];
"1001048" -> "1001047"  [label="AST: "];
"1001049" -> "1001047"  [label="AST: "];
"1001059" -> "1001047"  [label="CFG: "];
"1001047" -> "1001707"  [label="DDG: s->d1->alert_fragment[1]"];
"1001047" -> "1001707"  [label="DDG: alert_descr"];
"1001047" -> "1001131"  [label="DDG: alert_descr"];
"1001047" -> "1001139"  [label="DDG: alert_descr"];
"1001047" -> "1001239"  [label="DDG: alert_descr"];
"1001047" -> "1001246"  [label="DDG: alert_descr"];
"1001047" -> "1001248"  [label="DDG: alert_descr"];
"1001047" -> "1001251"  [label="DDG: alert_descr"];
"1001206" -> "1001212"  [label="CFG: "];
"1001207" -> "1001206"  [label="AST: "];
"1001212" -> "1001206"  [label="AST: "];
"1001213" -> "1001206"  [label="CFG: "];
"1001206" -> "1001707"  [label="DDG: frag->msg_header.seq"];
"1001201" -> "1001184"  [label="AST: "];
"1001201" -> "1001203"  [label="CFG: "];
"1001202" -> "1001201"  [label="AST: "];
"1001203" -> "1001201"  [label="AST: "];
"1001205" -> "1001201"  [label="CFG: "];
"1001201" -> "1001707"  [label="DDG: p"];
"1001201" -> "1001707"  [label="DDG: n2l3(p, frag_off)"];
"1001198" -> "1001201"  [label="DDG: p"];
"1001198" -> "1001184"  [label="AST: "];
"1001198" -> "1001200"  [label="CFG: "];
"1001199" -> "1001198"  [label="AST: "];
"1001200" -> "1001198"  [label="AST: "];
"1001202" -> "1001198"  [label="CFG: "];
"1001198" -> "1001707"  [label="DDG: n2s(p, seq)"];
"1001198" -> "1001707"  [label="DDG: seq"];
"1001188" -> "1001198"  [label="DDG: p"];
"1001188" -> "1001184"  [label="AST: "];
"1001188" -> "1001190"  [label="CFG: "];
"1001189" -> "1001188"  [label="AST: "];
"1001190" -> "1001188"  [label="AST: "];
"1001199" -> "1001188"  [label="CFG: "];
"1001188" -> "1001707"  [label="DDG: &(s->d1->alert_fragment[2])"];
"1000971" -> "1000969"  [label="AST: "];
"1000971" -> "1000972"  [label="CFG: "];
"1000972" -> "1000971"  [label="AST: "];
"1000969" -> "1000971"  [label="CFG: "];
"1000971" -> "1001707"  [label="DDG: s"];
"1000971" -> "1000321"  [label="DDG: s"];
"1000971" -> "1000969"  [label="DDG: s"];
"1000966" -> "1000971"  [label="DDG: s"];
"1000971" -> "1001017"  [label="DDG: s"];
"1000966" -> "1000965"  [label="AST: "];
"1000966" -> "1000967"  [label="CFG: "];
"1000967" -> "1000966"  [label="AST: "];
"1000970" -> "1000966"  [label="CFG: "];
"1001026" -> "1000966"  [label="CFG: "];
"1000966" -> "1001707"  [label="DDG: ssl3_renegotiate_check(s)"];
"1000966" -> "1000321"  [label="DDG: s"];
"1000963" -> "1000966"  [label="DDG: s"];
"1000963" -> "1000951"  [label="AST: "];
"1000963" -> "1000964"  [label="CFG: "];
"1000964" -> "1000963"  [label="AST: "];
"1000967" -> "1000963"  [label="CFG: "];
"1000963" -> "1001707"  [label="DDG: ssl3_renegotiate(s)"];
"1000934" -> "1000963"  [label="DDG: s"];
"1000934" -> "1000933"  [label="AST: "];
"1000934" -> "1000935"  [label="CFG: "];
"1000935" -> "1000934"  [label="AST: "];
"1000941" -> "1000934"  [label="CFG: "];
"1000933" -> "1000934"  [label="CFG: "];
"1000934" -> "1000321"  [label="DDG: s"];
"1000934" -> "1000933"  [label="DDG: s"];
"1000235" -> "1000234"  [label="AST: "];
"1000235" -> "1000236"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000234" -> "1000235"  [label="CFG: "];
"1000235" -> "1000234"  [label="DDG: s"];
"1000231" -> "1000235"  [label="DDG: s"];
"1000235" -> "1000259"  [label="DDG: s"];
"1000235" -> "1000321"  [label="DDG: s"];
"1000231" -> "1000226"  [label="AST: "];
"1000231" -> "1000232"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000226" -> "1000231"  [label="CFG: "];
"1000231" -> "1000226"  [label="DDG: s"];
"1000231" -> "1000259"  [label="DDG: s"];
"1000231" -> "1000321"  [label="DDG: s"];
"1000377" -> "1000376"  [label="AST: "];
"1000377" -> "1000379"  [label="CFG: "];
"1000378" -> "1000377"  [label="AST: "];
"1000379" -> "1000377"  [label="AST: "];
"1000382" -> "1000377"  [label="CFG: "];
"1000398" -> "1000377"  [label="CFG: "];
"1000377" -> "1001707"  [label="DDG: ret <= 0"];
"1000377" -> "1001707"  [label="DDG: ret"];
"1000372" -> "1000377"  [label="DDG: ret"];
"1000372" -> "1000371"  [label="AST: "];
"1000373" -> "1000372"  [label="AST: "];
"1000378" -> "1000372"  [label="CFG: "];
"1000372" -> "1001707"  [label="DDG: dtls1_get_record(s)"];
"1001535" -> "1001533"  [label="AST: "];
"1001535" -> "1001536"  [label="CFG: "];
"1001536" -> "1001535"  [label="AST: "];
"1001533" -> "1001535"  [label="CFG: "];
"1001535" -> "1001707"  [label="DDG: s"];
"1001535" -> "1000321"  [label="DDG: s"];
"1001535" -> "1001533"  [label="DDG: s"];
"1001535" -> "1001581"  [label="DDG: s"];
"1000428" -> "1000427"  [label="AST: "];
"1000428" -> "1000436"  [label="CFG: "];
"1000429" -> "1000428"  [label="AST: "];
"1000430" -> "1000428"  [label="AST: "];
"1000436" -> "1000428"  [label="AST: "];
"1000439" -> "1000428"  [label="CFG: "];
"1000428" -> "1001707"  [label="DDG: rr->seq_num"];
"1000428" -> "1001707"  [label="DDG: &(s->d1->buffered_app_data)"];
"1000428" -> "1001707"  [label="DDG: s"];
"1000428" -> "1000321"  [label="DDG: s"];
"1000428" -> "1000427"  [label="DDG: s"];
"1000428" -> "1000427"  [label="DDG: &(s->d1->buffered_app_data)"];
"1000428" -> "1000427"  [label="DDG: rr->seq_num"];
"1001223" -> "1001222"  [label="AST: "];
"1001223" -> "1001226"  [label="CFG: "];
"1001224" -> "1001223"  [label="AST: "];
"1001225" -> "1001223"  [label="AST: "];
"1001226" -> "1001223"  [label="AST: "];
"1001284" -> "1001223"  [label="CFG: "];
"1001223" -> "1001707"  [label="DDG: ssl3_send_alert(s,SSL3_AL_WARNING,\n\t\t\t\t\t\tDTLS1_AD_MISSING_HANDSHAKE_MESSAGE)"];
"1001223" -> "1001707"  [label="DDG: SSL3_AL_WARNING"];
"1001223" -> "1001707"  [label="DDG: DTLS1_AD_MISSING_HANDSHAKE_MESSAGE"];
"1001223" -> "1000321"  [label="DDG: s"];
"1001223" -> "1001181"  [label="DDG: DTLS1_AD_MISSING_HANDSHAKE_MESSAGE"];
"1001181" -> "1001223"  [label="DDG: DTLS1_AD_MISSING_HANDSHAKE_MESSAGE"];
"1001181" -> "1001180"  [label="AST: "];
"1001181" -> "1001183"  [label="CFG: "];
"1001182" -> "1001181"  [label="AST: "];
"1001183" -> "1001181"  [label="AST: "];
"1001189" -> "1001181"  [label="CFG: "];
"1001284" -> "1001181"  [label="CFG: "];
"1001181" -> "1001707"  [label="DDG: alert_descr"];
"1001181" -> "1001707"  [label="DDG: alert_descr == DTLS1_AD_MISSING_HANDSHAKE_MESSAGE"];
"1001181" -> "1001707"  [label="DDG: DTLS1_AD_MISSING_HANDSHAKE_MESSAGE"];
"1001139" -> "1001181"  [label="DDG: alert_descr"];
"1001139" -> "1001138"  [label="AST: "];
"1001139" -> "1001141"  [label="CFG: "];
"1001140" -> "1001139"  [label="AST: "];
"1001141" -> "1001139"  [label="AST: "];
"1001147" -> "1001139"  [label="CFG: "];
"1001182" -> "1001139"  [label="CFG: "];
"1001139" -> "1001707"  [label="DDG: alert_descr"];
"1001139" -> "1001707"  [label="DDG: alert_descr == SSL_AD_CLOSE_NOTIFY"];
"1001139" -> "1001707"  [label="DDG: SSL_AD_CLOSE_NOTIFY"];
"1000259" -> "1000257"  [label="AST: "];
"1000259" -> "1000260"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000257" -> "1000259"  [label="CFG: "];
"1000259" -> "1001707"  [label="DDG: s"];
"1000259" -> "1000257"  [label="DDG: s"];
"1000259" -> "1000321"  [label="DDG: s"];
"1001426" -> "1001425"  [label="AST: "];
"1001426" -> "1001427"  [label="CFG: "];
"1001427" -> "1001426"  [label="AST: "];
"1001428" -> "1001426"  [label="CFG: "];
"1001426" -> "1000321"  [label="DDG: s"];
"1001426" -> "1001425"  [label="DDG: s"];
"1001410" -> "1001426"  [label="DDG: s"];
"1001410" -> "1001310"  [label="AST: "];
"1001410" -> "1001412"  [label="CFG: "];
"1001411" -> "1001410"  [label="AST: "];
"1001412" -> "1001410"  [label="AST: "];
"1001416" -> "1001410"  [label="CFG: "];
"1001410" -> "1001707"  [label="DDG: dtls1_reset_seq_numbers(s, SSL3_CC_READ)"];
"1001410" -> "1001707"  [label="DDG: SSL3_CC_READ"];
"1001407" -> "1001410"  [label="DDG: s"];
"1001407" -> "1001406"  [label="AST: "];
"1001407" -> "1001408"  [label="CFG: "];
"1001408" -> "1001407"  [label="AST: "];
"1001406" -> "1001407"  [label="CFG: "];
"1001407" -> "1001707"  [label="DDG: s"];
"1001407" -> "1001406"  [label="DDG: s"];
"1001485" -> "1001476"  [label="AST: "];
"1001485" -> "1001486"  [label="CFG: "];
"1001486" -> "1001485"  [label="AST: "];
"1001489" -> "1001485"  [label="CFG: "];
"1001485" -> "1001707"  [label="DDG: dtls1_retransmit_buffered_messages(s)"];
"1001485" -> "1000321"  [label="DDG: s"];
"1001479" -> "1001485"  [label="DDG: s"];
"1001479" -> "1001478"  [label="AST: "];
"1001479" -> "1001480"  [label="CFG: "];
"1001480" -> "1001479"  [label="AST: "];
"1001481" -> "1001479"  [label="CFG: "];
"1001479" -> "1001707"  [label="DDG: s"];
"1001479" -> "1001478"  [label="DDG: s"];
"1000344" -> "1000318"  [label="AST: "];
"1000344" -> "1000346"  [label="CFG: "];
"1000345" -> "1000344"  [label="AST: "];
"1000346" -> "1000344"  [label="AST: "];
"1000349" -> "1000344"  [label="CFG: "];
"1000344" -> "1001707"  [label="DDG: dtls1_copy_record(s, item)"];
"1000333" -> "1000344"  [label="DDG: s"];
"1000321" -> "1000344"  [label="DDG: s"];
"1000306" -> "1000344"  [label="DDG: item"];
"1000344" -> "1000351"  [label="DDG: item"];
"1000333" -> "1000332"  [label="AST: "];
"1000333" -> "1000334"  [label="CFG: "];
"1000334" -> "1000333"  [label="AST: "];
"1000335" -> "1000333"  [label="CFG: "];
"1000333" -> "1000332"  [label="DDG: s"];
"1000321" -> "1000333"  [label="DDG: s"];
"1000321" -> "1000320"  [label="AST: "];
"1000321" -> "1000322"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000320" -> "1000321"  [label="CFG: "];
"1000321" -> "1000320"  [label="DDG: s"];
"1000306" -> "1000304"  [label="AST: "];
"1000306" -> "1000308"  [label="CFG: "];
"1000307" -> "1000306"  [label="AST: "];
"1000308" -> "1000306"  [label="AST: "];
"1000317" -> "1000306"  [label="CFG: "];
"1000306" -> "1001707"  [label="DDG: item"];
"1000306" -> "1001707"  [label="DDG: pqueue_pop(s->d1->buffered_app_data.q)"];
"1000308" -> "1000306"  [label="DDG: s->d1->buffered_app_data.q"];
"1000308" -> "1000309"  [label="CFG: "];
"1000309" -> "1000308"  [label="AST: "];
"1000308" -> "1001707"  [label="DDG: s->d1->buffered_app_data.q"];
"1000320" -> "1000319"  [label="AST: "];
"1000326" -> "1000320"  [label="CFG: "];
"1000345" -> "1000320"  [label="CFG: "];
"1000320" -> "1001707"  [label="DDG: SSL_get_rbio(s)"];
"1000320" -> "1001707"  [label="DDG: BIO_dgram_is_sctp(SSL_get_rbio(s))"];
"1000332" -> "1000323"  [label="AST: "];
"1000332" -> "1000340"  [label="CFG: "];
"1000335" -> "1000332"  [label="AST: "];
"1000336" -> "1000332"  [label="AST: "];
"1000340" -> "1000332"  [label="AST: "];
"1000345" -> "1000332"  [label="CFG: "];
"1000332" -> "1001707"  [label="DDG: SSL_get_rbio(s)"];
"1000332" -> "1001707"  [label="DDG: BIO_ctrl(SSL_get_rbio(s), BIO_CTRL_DGRAM_SCTP_SET_RCVINFO, sizeof(rdata->recordinfo), &rdata->recordinfo)"];
"1000332" -> "1001707"  [label="DDG: &rdata->recordinfo"];
"1000332" -> "1001707"  [label="DDG: BIO_CTRL_DGRAM_SCTP_SET_RCVINFO"];
"1000351" -> "1000318"  [label="AST: "];
"1000351" -> "1000352"  [label="CFG: "];
"1000352" -> "1000351"  [label="AST: "];
"1000356" -> "1000351"  [label="CFG: "];
"1000351" -> "1001707"  [label="DDG: pitem_free(item)"];
"1000351" -> "1001707"  [label="DDG: item"];
"1000354" -> "1000353"  [label="AST: "];
"1000354" -> "1000357"  [label="CFG: "];
"1000357" -> "1000354"  [label="AST: "];
"1000358" -> "1000354"  [label="CFG: "];
"1000363" -> "1000354"  [label="CFG: "];
"1000354" -> "1001707"  [label="DDG: dtls1_handle_timeout(s) > 0"];
"1000354" -> "1001707"  [label="DDG: dtls1_handle_timeout(s)"];
"1000381" -> "1000380"  [label="AST: "];
"1000382" -> "1000381"  [label="AST: "];
"1000388" -> "1000381"  [label="CFG: "];
"1000381" -> "1001707"  [label="DDG: dtls1_read_failed(s, ret)"];
"1000381" -> "1000387"  [label="DDG: ret"];
"1000387" -> "1000386"  [label="AST: "];
"1000387" -> "1000389"  [label="CFG: "];
"1000388" -> "1000387"  [label="AST: "];
"1000389" -> "1000387"  [label="AST: "];
"1000391" -> "1000387"  [label="CFG: "];
"1000393" -> "1000387"  [label="CFG: "];
"1000387" -> "1001707"  [label="DDG: ret"];
"1000387" -> "1001707"  [label="DDG: ret <= 0"];
"1000387" -> "1000390"  [label="DDG: ret"];
"1000390" -> "1000386"  [label="AST: "];
"1000390" -> "1000391"  [label="CFG: "];
"1000391" -> "1000390"  [label="AST: "];
"1001707" -> "1000390"  [label="CFG: "];
"1000390" -> "1001707"  [label="DDG: <RET>"];
"1000391" -> "1000390"  [label="DDG: ret"];
"1000427" -> "1000426"  [label="AST: "];
"1000427" -> "1000439"  [label="CFG: "];
"1000439" -> "1000427"  [label="AST: "];
"1000442" -> "1000427"  [label="CFG: "];
"1000449" -> "1000427"  [label="CFG: "];
"1000427" -> "1001707"  [label="DDG: dtls1_buffer_record(s, &(s->d1->buffered_app_data), rr->seq_num)"];
"1000427" -> "1001707"  [label="DDG: dtls1_buffer_record(s, &(s->d1->buffered_app_data), rr->seq_num)<0"];
"1000481" -> "1000480"  [label="AST: "];
"1000481" -> "1000482"  [label="CFG: "];
"1000482" -> "1000481"  [label="AST: "];
"1000485" -> "1000481"  [label="CFG: "];
"1000480" -> "1000481"  [label="CFG: "];
"1000481" -> "1001707"  [label="DDG: s"];
"1000481" -> "1000480"  [label="DDG: s"];
"1000481" -> "1000570"  [label="DDG: s"];
"1000481" -> "1001699"  [label="DDG: s"];
"1000480" -> "1000479"  [label="AST: "];
"1000480" -> "1000483"  [label="CFG: "];
"1000483" -> "1000480"  [label="AST: "];
"1000494" -> "1000480"  [label="CFG: "];
"1000502" -> "1000480"  [label="CFG: "];
"1000480" -> "1001707"  [label="DDG: (type == SSL3_RT_APPLICATION_DATA) &&\n\t\t\t(s->enc_read_ctx == NULL)"];
"1000480" -> "1001707"  [label="DDG: SSL_in_init(s) && (type == SSL3_RT_APPLICATION_DATA) &&\n\t\t\t(s->enc_read_ctx == NULL)"];
"1000480" -> "1001707"  [label="DDG: SSL_in_init(s)"];
"1000483" -> "1000480"  [label="DDG: type == SSL3_RT_APPLICATION_DATA"];
"1000483" -> "1000480"  [label="DDG: s->enc_read_ctx == NULL"];
"1000570" -> "1000569"  [label="AST: "];
"1000570" -> "1000571"  [label="CFG: "];
"1000571" -> "1000570"  [label="AST: "];
"1000569" -> "1000570"  [label="CFG: "];
"1000570" -> "1000569"  [label="DDG: s"];
"1000570" -> "1000596"  [label="DDG: s"];
"1000570" -> "1000604"  [label="DDG: s"];
"1000569" -> "1000568"  [label="AST: "];
"1000575" -> "1000569"  [label="CFG: "];
"1000568" -> "1000569"  [label="CFG: "];
"1000569" -> "1000568"  [label="DDG: SSL_get_rbio(s)"];
"1000568" -> "1000567"  [label="AST: "];
"1000568" -> "1000572"  [label="CFG: "];
"1000572" -> "1000568"  [label="AST: "];
"1000592" -> "1000568"  [label="CFG: "];
"1000605" -> "1000568"  [label="CFG: "];
"1000568" -> "1001707"  [label="DDG: BIO_dgram_is_sctp(SSL_get_rbio(s)) &&\n\t\t\t    rr->type == SSL3_RT_APPLICATION_DATA &&\n\t\t\t    (s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1000568" -> "1001707"  [label="DDG: rr->type == SSL3_RT_APPLICATION_DATA &&\n\t\t\t    (s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1000572" -> "1000568"  [label="DDG: rr->type == SSL3_RT_APPLICATION_DATA"];
"1000572" -> "1000568"  [label="DDG: s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK"];
"1000596" -> "1000595"  [label="AST: "];
"1000596" -> "1000597"  [label="CFG: "];
"1000597" -> "1000596"  [label="AST: "];
"1000595" -> "1000596"  [label="CFG: "];
"1000596" -> "1000595"  [label="DDG: s"];
"1000596" -> "1000599"  [label="DDG: s"];
"1000595" -> "1000589"  [label="AST: "];
"1000600" -> "1000595"  [label="CFG: "];
"1000595" -> "1001707"  [label="DDG: BIO_clear_retry_flags(SSL_get_rbio(s))"];
"1000599" -> "1000598"  [label="AST: "];
"1000599" -> "1000600"  [label="CFG: "];
"1000600" -> "1000599"  [label="AST: "];
"1000598" -> "1000599"  [label="CFG: "];
"1000599" -> "1000598"  [label="DDG: s"];
"1000599" -> "1000604"  [label="DDG: s"];
"1000598" -> "1000589"  [label="AST: "];
"1000605" -> "1000598"  [label="CFG: "];
"1000598" -> "1001707"  [label="DDG: BIO_set_retry_read(SSL_get_rbio(s))"];
"1000604" -> "1000603"  [label="AST: "];
"1000604" -> "1000605"  [label="CFG: "];
"1000605" -> "1000604"  [label="AST: "];
"1000603" -> "1000604"  [label="CFG: "];
"1000604" -> "1001707"  [label="DDG: s"];
"1000604" -> "1000603"  [label="DDG: s"];
"1000604" -> "1000614"  [label="DDG: s"];
"1000603" -> "1000602"  [label="AST: "];
"1000609" -> "1000603"  [label="CFG: "];
"1000602" -> "1000603"  [label="CFG: "];
"1000603" -> "1001707"  [label="DDG: SSL_get_rbio(s)"];
"1000603" -> "1000602"  [label="DDG: SSL_get_rbio(s)"];
"1000602" -> "1000601"  [label="AST: "];
"1000602" -> "1000606"  [label="CFG: "];
"1000606" -> "1000602"  [label="AST: "];
"1000619" -> "1000602"  [label="CFG: "];
"1000625" -> "1000602"  [label="CFG: "];
"1000602" -> "1001707"  [label="DDG: BIO_dgram_is_sctp(SSL_get_rbio(s)) &&\n\t\t\t    s->d1->shutdown_received && !BIO_dgram_sctp_msg_waiting(SSL_get_rbio(s))"];
"1000602" -> "1001707"  [label="DDG: BIO_dgram_is_sctp(SSL_get_rbio(s))"];
"1000602" -> "1001707"  [label="DDG: s->d1->shutdown_received && !BIO_dgram_sctp_msg_waiting(SSL_get_rbio(s))"];
"1000606" -> "1000602"  [label="DDG: s->d1->shutdown_received"];
"1000606" -> "1000602"  [label="DDG: !BIO_dgram_sctp_msg_waiting(SSL_get_rbio(s))"];
"1000614" -> "1000613"  [label="AST: "];
"1000614" -> "1000615"  [label="CFG: "];
"1000615" -> "1000614"  [label="AST: "];
"1000613" -> "1000614"  [label="CFG: "];
"1000614" -> "1001707"  [label="DDG: s"];
"1000614" -> "1000613"  [label="DDG: s"];
"1000613" -> "1000612"  [label="AST: "];
"1000612" -> "1000613"  [label="CFG: "];
"1000613" -> "1001707"  [label="DDG: SSL_get_rbio(s)"];
"1000613" -> "1000612"  [label="DDG: SSL_get_rbio(s)"];
"1000612" -> "1000606"  [label="AST: "];
"1000606" -> "1000612"  [label="CFG: "];
"1000612" -> "1001707"  [label="DDG: BIO_dgram_sctp_msg_waiting(SSL_get_rbio(s))"];
"1000612" -> "1000606"  [label="DDG: BIO_dgram_sctp_msg_waiting(SSL_get_rbio(s))"];
"1000606" -> "1000607"  [label="CFG: "];
"1000607" -> "1000606"  [label="AST: "];
"1000606" -> "1001707"  [label="DDG: s->d1->shutdown_received"];
"1000606" -> "1001707"  [label="DDG: !BIO_dgram_sctp_msg_waiting(SSL_get_rbio(s))"];
"1001699" -> "1000162"  [label="AST: "];
"1001699" -> "1001702"  [label="CFG: "];
"1001700" -> "1001699"  [label="AST: "];
"1001701" -> "1001699"  [label="AST: "];
"1001702" -> "1001699"  [label="AST: "];
"1001703" -> "1001699"  [label="CFG: "];
"1001699" -> "1001707"  [label="DDG: ssl3_send_alert(s,SSL3_AL_FATAL,al)"];
"1001699" -> "1001707"  [label="DDG: s"];
"1001699" -> "1001707"  [label="DDG: al"];
"1001699" -> "1001707"  [label="DDG: SSL3_AL_FATAL"];
"1001277" -> "1001699"  [label="DDG: al"];
"1001620" -> "1001699"  [label="DDG: al"];
"1000493" -> "1001699"  [label="DDG: al"];
"1001610" -> "1001699"  [label="DDG: al"];
"1000769" -> "1001699"  [label="DDG: al"];
"1001691" -> "1001699"  [label="DDG: al"];
"1000709" -> "1000708"  [label="AST: "];
"1000709" -> "1000710"  [label="CFG: "];
"1000710" -> "1000709"  [label="AST: "];
"1000713" -> "1000709"  [label="CFG: "];
"1000709" -> "1001707"  [label="DDG: dtls1_process_heartbeat(s)"];
"1000709" -> "1000722"  [label="DDG: s"];
"1000722" -> "1000721"  [label="AST: "];
"1000722" -> "1000723"  [label="CFG: "];
"1000723" -> "1000722"  [label="AST: "];
"1000721" -> "1000722"  [label="CFG: "];
"1000722" -> "1000721"  [label="DDG: s"];
"1000722" -> "1000725"  [label="DDG: s"];
"1000721" -> "1000708"  [label="AST: "];
"1000726" -> "1000721"  [label="CFG: "];
"1000721" -> "1001707"  [label="DDG: BIO_clear_retry_flags(SSL_get_rbio(s))"];
"1000725" -> "1000724"  [label="AST: "];
"1000725" -> "1000726"  [label="CFG: "];
"1000726" -> "1000725"  [label="AST: "];
"1000724" -> "1000725"  [label="CFG: "];
"1000725" -> "1001707"  [label="DDG: s"];
"1000725" -> "1000724"  [label="DDG: s"];
"1000724" -> "1000708"  [label="AST: "];
"1000729" -> "1000724"  [label="CFG: "];
"1000724" -> "1001707"  [label="DDG: BIO_set_retry_read(SSL_get_rbio(s))"];
"1000724" -> "1001707"  [label="DDG: SSL_get_rbio(s)"];
"1000755" -> "1000753"  [label="AST: "];
"1000755" -> "1000756"  [label="CFG: "];
"1000756" -> "1000755"  [label="AST: "];
"1000753" -> "1000755"  [label="CFG: "];
"1000755" -> "1001707"  [label="DDG: s"];
"1000755" -> "1000753"  [label="DDG: s"];
"1000753" -> "1000744"  [label="AST: "];
"1000754" -> "1000753"  [label="AST: "];
"1000759" -> "1000753"  [label="CFG: "];
"1000753" -> "1001707"  [label="DDG: SSL_get_rbio(s)"];
"1000753" -> "1000762"  [label="DDG: bio"];
"1000762" -> "1000744"  [label="AST: "];
"1000762" -> "1000763"  [label="CFG: "];
"1000763" -> "1000762"  [label="AST: "];
"1000765" -> "1000762"  [label="CFG: "];
"1000762" -> "1001707"  [label="DDG: BIO_clear_retry_flags(bio)"];
"1000762" -> "1000764"  [label="DDG: bio"];
"1000764" -> "1000744"  [label="AST: "];
"1000764" -> "1000765"  [label="CFG: "];
"1000765" -> "1000764"  [label="AST: "];
"1000768" -> "1000764"  [label="CFG: "];
"1000764" -> "1001707"  [label="DDG: BIO_set_retry_read(bio)"];
"1000764" -> "1001707"  [label="DDG: bio"];
"1000395" -> "1000394"  [label="AST: "];
"1000395" -> "1000396"  [label="CFG: "];
"1000396" -> "1000395"  [label="AST: "];
"1000409" -> "1000395"  [label="CFG: "];
"1000417" -> "1000395"  [label="CFG: "];
"1000395" -> "1001707"  [label="DDG: s->d1->listen"];
"1000395" -> "1001707"  [label="DDG: rr->type != SSL3_RT_HANDSHAKE"];
"1000395" -> "1001707"  [label="DDG: s->d1->listen && rr->type != SSL3_RT_HANDSHAKE"];
"1000414" -> "1000395"  [label="DDG: rr->type != SSL3_RT_HANDSHAKE"];
"1000395" -> "1000414"  [label="DDG: rr->type != SSL3_RT_HANDSHAKE"];
"1000414" -> "1000413"  [label="AST: "];
"1000414" -> "1000415"  [label="CFG: "];
"1000415" -> "1000414"  [label="AST: "];
"1000429" -> "1000414"  [label="CFG: "];
"1000456" -> "1000414"  [label="CFG: "];
"1000414" -> "1001707"  [label="DDG: rr->type != SSL3_RT_HANDSHAKE"];
"1000414" -> "1001707"  [label="DDG: s->s3->change_cipher_spec /* set when we receive ChangeCipherSpec,\n\t                               * reset by ssl3_get_finished */\n\t\t&& (rr->type != SSL3_RT_HANDSHAKE)"];
"1000414" -> "1001707"  [label="DDG: s->s3->change_cipher_spec"];
"1001398" -> "1000414"  [label="DDG: s->s3->change_cipher_spec"];
"1000484" -> "1000483"  [label="AST: "];
"1000484" -> "1000486"  [label="CFG: "];
"1000485" -> "1000484"  [label="AST: "];
"1000486" -> "1000484"  [label="AST: "];
"1000489" -> "1000484"  [label="CFG: "];
"1000483" -> "1000484"  [label="CFG: "];
"1000484" -> "1001707"  [label="DDG: SSL3_RT_APPLICATION_DATA"];
"1000484" -> "1001707"  [label="DDG: type"];
"1000484" -> "1000483"  [label="DDG: type"];
"1000484" -> "1000483"  [label="DDG: SSL3_RT_APPLICATION_DATA"];
"1000484" -> "1000573"  [label="DDG: SSL3_RT_APPLICATION_DATA"];
"1000483" -> "1000487"  [label="CFG: "];
"1000487" -> "1000483"  [label="AST: "];
"1000483" -> "1001707"  [label="DDG: s->enc_read_ctx == NULL"];
"1000483" -> "1001707"  [label="DDG: type == SSL3_RT_APPLICATION_DATA"];
"1000487" -> "1000483"  [label="DDG: s->enc_read_ctx"];
"1000487" -> "1000483"  [label="DDG: NULL"];
"1000573" -> "1000572"  [label="AST: "];
"1000573" -> "1000577"  [label="CFG: "];
"1000574" -> "1000573"  [label="AST: "];
"1000577" -> "1000573"  [label="AST: "];
"1000581" -> "1000573"  [label="CFG: "];
"1000572" -> "1000573"  [label="CFG: "];
"1000573" -> "1001707"  [label="DDG: SSL3_RT_APPLICATION_DATA"];
"1000573" -> "1001707"  [label="DDG: rr->type"];
"1000573" -> "1000572"  [label="DDG: rr->type"];
"1000573" -> "1000572"  [label="DDG: SSL3_RT_APPLICATION_DATA"];
"1000572" -> "1000578"  [label="CFG: "];
"1000578" -> "1000572"  [label="AST: "];
"1000572" -> "1001707"  [label="DDG: s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK"];
"1000572" -> "1001707"  [label="DDG: rr->type == SSL3_RT_APPLICATION_DATA"];
"1000578" -> "1000572"  [label="DDG: s->state == DTLS1_SCTP_ST_SR_READ_SOCK"];
"1000578" -> "1000572"  [label="DDG: s->state == DTLS1_SCTP_ST_CR_READ_SOCK"];
"1000237" -> "1000572"  [label="DDG: s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK"];
"1000739" -> "1000738"  [label="AST: "];
"1000739" -> "1000743"  [label="CFG: "];
"1000740" -> "1000739"  [label="AST: "];
"1000743" -> "1000739"  [label="AST: "];
"1000749" -> "1000739"  [label="CFG: "];
"1000770" -> "1000739"  [label="CFG: "];
"1000739" -> "1001707"  [label="DDG: rr->type == SSL3_RT_APPLICATION_DATA"];
"1000739" -> "1001707"  [label="DDG: rr->type"];
"1000739" -> "1001707"  [label="DDG: SSL3_RT_APPLICATION_DATA"];
"1000525" -> "1000478"  [label="AST: "];
"1000525" -> "1000535"  [label="CFG: "];
"1000526" -> "1000525"  [label="AST: "];
"1000527" -> "1000525"  [label="AST: "];
"1000535" -> "1000525"  [label="AST: "];
"1000538" -> "1000525"  [label="CFG: "];
"1000525" -> "1001707"  [label="DDG: memcpy(buf,&(rr->data[rr->off]),n)"];
"1000525" -> "1001707"  [label="DDG: buf"];
"1000525" -> "1001707"  [label="DDG: &(rr->data[rr->off])"];
"1000525" -> "1001707"  [label="DDG: n"];
"1000514" -> "1000525"  [label="DDG: n"];
"1000520" -> "1000525"  [label="DDG: n"];
"1000525" -> "1000540"  [label="DDG: n"];
"1000525" -> "1000545"  [label="DDG: n"];
"1000525" -> "1000624"  [label="DDG: n"];
"1000540" -> "1000539"  [label="AST: "];
"1000540" -> "1000544"  [label="CFG: "];
"1000541" -> "1000540"  [label="AST: "];
"1000544" -> "1000540"  [label="AST: "];
"1000547" -> "1000540"  [label="CFG: "];
"1000507" -> "1000540"  [label="DDG: rr->length"];
"1000540" -> "1000551"  [label="DDG: rr->length"];
"1000551" -> "1000550"  [label="AST: "];
"1000551" -> "1000555"  [label="CFG: "];
"1000552" -> "1000551"  [label="AST: "];
"1000555" -> "1000551"  [label="AST: "];
"1000559" -> "1000551"  [label="CFG: "];
"1000571" -> "1000551"  [label="CFG: "];
"1000551" -> "1001707"  [label="DDG: rr->length == 0"];
"1000551" -> "1001707"  [label="DDG: rr->length"];
"1000545" -> "1000539"  [label="AST: "];
"1000545" -> "1000549"  [label="CFG: "];
"1000546" -> "1000545"  [label="AST: "];
"1000549" -> "1000545"  [label="AST: "];
"1000553" -> "1000545"  [label="CFG: "];
"1000545" -> "1001707"  [label="DDG: rr->off"];
"1000545" -> "1001707"  [label="DDG: n"];
"1000817" -> "1000545"  [label="DDG: rr->off"];
"1001339" -> "1000545"  [label="DDG: rr->off"];
"1000624" -> "1000478"  [label="AST: "];
"1000624" -> "1000625"  [label="CFG: "];
"1000625" -> "1000624"  [label="AST: "];
"1001707" -> "1000624"  [label="CFG: "];
"1000624" -> "1001707"  [label="DDG: <RET>"];
"1000625" -> "1000624"  [label="DDG: n"];
"1000686" -> "1000677"  [label="AST: "];
"1000686" -> "1000688"  [label="CFG: "];
"1000687" -> "1000686"  [label="AST: "];
"1000688" -> "1000686"  [label="AST: "];
"1000694" -> "1000686"  [label="CFG: "];
"1000686" -> "1001707"  [label="DDG: dest"];
"1000686" -> "1001707"  [label="DDG: s->d1->alert_fragment"];
"1001146" -> "1001145"  [label="AST: "];
"1001146" -> "1001147"  [label="CFG: "];
"1001147" -> "1001146"  [label="AST: "];
"1001145" -> "1001146"  [label="CFG: "];
"1001146" -> "1001707"  [label="DDG: s"];
"1001146" -> "1001145"  [label="DDG: s"];
"1001146" -> "1001149"  [label="DDG: s"];
"1001146" -> "1001165"  [label="DDG: s"];
"1001145" -> "1001144"  [label="AST: "];
"1001150" -> "1001145"  [label="CFG: "];
"1001144" -> "1001145"  [label="CFG: "];
"1001145" -> "1001707"  [label="DDG: SSL_get_rbio(s)"];
"1001145" -> "1001144"  [label="DDG: SSL_get_rbio(s)"];
"1001144" -> "1001143"  [label="AST: "];
"1001144" -> "1001148"  [label="CFG: "];
"1001148" -> "1001144"  [label="AST: "];
"1001155" -> "1001144"  [label="CFG: "];
"1001175" -> "1001144"  [label="CFG: "];
"1001144" -> "1001707"  [label="DDG: BIO_dgram_sctp_msg_waiting(SSL_get_rbio(s))"];
"1001144" -> "1001707"  [label="DDG: BIO_dgram_is_sctp(SSL_get_rbio(s))"];
"1001144" -> "1001707"  [label="DDG: BIO_dgram_is_sctp(SSL_get_rbio(s)) &&\n\t\t\t\t\tBIO_dgram_sctp_msg_waiting(SSL_get_rbio(s))"];
"1001148" -> "1001144"  [label="DDG: SSL_get_rbio(s)"];
"1001149" -> "1001148"  [label="AST: "];
"1001149" -> "1001150"  [label="CFG: "];
"1001150" -> "1001149"  [label="AST: "];
"1001148" -> "1001149"  [label="CFG: "];
"1001149" -> "1001707"  [label="DDG: s"];
"1001149" -> "1001148"  [label="DDG: s"];
"1001149" -> "1001165"  [label="DDG: s"];
"1001148" -> "1001707"  [label="DDG: SSL_get_rbio(s)"];
"1001165" -> "1001164"  [label="AST: "];
"1001165" -> "1001166"  [label="CFG: "];
"1001166" -> "1001165"  [label="AST: "];
"1001164" -> "1001165"  [label="CFG: "];
"1001165" -> "1001164"  [label="DDG: s"];
"1001165" -> "1001168"  [label="DDG: s"];
"1001164" -> "1001151"  [label="AST: "];
"1001169" -> "1001164"  [label="CFG: "];
"1001164" -> "1001707"  [label="DDG: BIO_clear_retry_flags(SSL_get_rbio(s))"];
"1001168" -> "1001167"  [label="AST: "];
"1001168" -> "1001169"  [label="CFG: "];
"1001169" -> "1001168"  [label="AST: "];
"1001167" -> "1001168"  [label="CFG: "];
"1001168" -> "1001707"  [label="DDG: s"];
"1001168" -> "1001167"  [label="DDG: s"];
"1001167" -> "1001151"  [label="AST: "];
"1001172" -> "1001167"  [label="CFG: "];
"1001167" -> "1001707"  [label="DDG: BIO_set_retry_read(SSL_get_rbio(s))"];
"1001167" -> "1001707"  [label="DDG: SSL_get_rbio(s)"];
"1001217" -> "1001216"  [label="AST: "];
"1001217" -> "1001218"  [label="CFG: "];
"1001218" -> "1001217"  [label="AST: "];
"1001224" -> "1001217"  [label="CFG: "];
"1001284" -> "1001217"  [label="CFG: "];
"1001217" -> "1001707"  [label="DDG: ! found"];
"1001217" -> "1001707"  [label="DDG: SSL_in_init(s)"];
"1001217" -> "1001707"  [label="DDG: ! found  && SSL_in_init(s)"];
"1001218" -> "1001217"  [label="DDG: found"];
"1000226" -> "1001217"  [label="DDG: SSL_in_init(s)"];
"1001406" -> "1001405"  [label="AST: "];
"1001409" -> "1001406"  [label="CFG: "];
"1001411" -> "1001406"  [label="CFG: "];
"1001406" -> "1001707"  [label="DDG: !ssl3_do_change_cipher_spec(s)"];
"1001406" -> "1001707"  [label="DDG: ssl3_do_change_cipher_spec(s)"];
"1001425" -> "1001310"  [label="AST: "];
"1001425" -> "1001430"  [label="CFG: "];
"1001428" -> "1001425"  [label="AST: "];
"1001429" -> "1001425"  [label="AST: "];
"1001430" -> "1001425"  [label="AST: "];
"1001431" -> "1001425"  [label="CFG: "];
"1001425" -> "1001707"  [label="DDG: BIO_ctrl(SSL_get_wbio(s), BIO_CTRL_DGRAM_SCTP_AUTH_CCS_RCVD, 1, NULL)"];
"1001425" -> "1001707"  [label="DDG: BIO_CTRL_DGRAM_SCTP_AUTH_CCS_RCVD"];
"1001425" -> "1001707"  [label="DDG: SSL_get_wbio(s)"];
"1001425" -> "1001707"  [label="DDG: NULL"];
"1001425" -> "1000487"  [label="DDG: NULL"];
"1001425" -> "1000633"  [label="DDG: NULL"];
"1001425" -> "1000637"  [label="DDG: NULL"];
"1001425" -> "1000854"  [label="DDG: NULL"];
"1001425" -> "1001084"  [label="DDG: NULL"];
"1000854" -> "1001425"  [label="DDG: NULL"];
"1000859" -> "1001425"  [label="DDG: NULL"];
"1001111" -> "1001425"  [label="DDG: NULL"];
"1000174" -> "1001425"  [label="DDG: NULL"];
"1000487" -> "1000491"  [label="CFG: "];
"1000488" -> "1000487"  [label="AST: "];
"1000491" -> "1000487"  [label="AST: "];
"1000487" -> "1001707"  [label="DDG: s->enc_read_ctx"];
"1000487" -> "1001707"  [label="DDG: NULL"];
"1001111" -> "1000487"  [label="DDG: NULL"];
"1000174" -> "1000487"  [label="DDG: NULL"];
"1000854" -> "1000487"  [label="DDG: NULL"];
"1000859" -> "1000487"  [label="DDG: NULL"];
"1000633" -> "1000626"  [label="AST: "];
"1000633" -> "1000635"  [label="CFG: "];
"1000634" -> "1000633"  [label="AST: "];
"1000635" -> "1000633"  [label="AST: "];
"1000638" -> "1000633"  [label="CFG: "];
"1000633" -> "1001707"  [label="DDG: dest"];
"1001111" -> "1000633"  [label="DDG: NULL"];
"1000174" -> "1000633"  [label="DDG: NULL"];
"1000854" -> "1000633"  [label="DDG: NULL"];
"1000859" -> "1000633"  [label="DDG: NULL"];
"1000637" -> "1000626"  [label="AST: "];
"1000637" -> "1000639"  [label="CFG: "];
"1000638" -> "1000637"  [label="AST: "];
"1000639" -> "1000637"  [label="AST: "];
"1000643" -> "1000637"  [label="CFG: "];
"1000637" -> "1001707"  [label="DDG: dest_len"];
"1000637" -> "1001707"  [label="DDG: NULL"];
"1001111" -> "1000637"  [label="DDG: NULL"];
"1000174" -> "1000637"  [label="DDG: NULL"];
"1000854" -> "1000637"  [label="DDG: NULL"];
"1000859" -> "1000637"  [label="DDG: NULL"];
"1000854" -> "1000853"  [label="AST: "];
"1000854" -> "1000858"  [label="CFG: "];
"1000855" -> "1000854"  [label="AST: "];
"1000858" -> "1000854"  [label="AST: "];
"1000862" -> "1000854"  [label="CFG: "];
"1000853" -> "1000854"  [label="CFG: "];
"1000854" -> "1001707"  [label="DDG: NULL"];
"1000854" -> "1001707"  [label="DDG: s->session"];
"1000854" -> "1000853"  [label="DDG: s->session"];
"1000854" -> "1000853"  [label="DDG: NULL"];
"1001111" -> "1000854"  [label="DDG: NULL"];
"1000174" -> "1000854"  [label="DDG: NULL"];
"1000859" -> "1000854"  [label="DDG: NULL"];
"1000854" -> "1000859"  [label="DDG: NULL"];
"1000854" -> "1001084"  [label="DDG: NULL"];
"1000854" -> "1001266"  [label="DDG: s->session"];
"1000853" -> "1000843"  [label="AST: "];
"1000853" -> "1000859"  [label="CFG: "];
"1000859" -> "1000853"  [label="AST: "];
"1000843" -> "1000853"  [label="CFG: "];
"1000853" -> "1001707"  [label="DDG: s->session->cipher != NULL"];
"1000853" -> "1001707"  [label="DDG: s->session != NULL"];
"1000853" -> "1000843"  [label="DDG: s->session != NULL"];
"1000853" -> "1000843"  [label="DDG: s->session->cipher != NULL"];
"1000859" -> "1000853"  [label="DDG: s->session->cipher"];
"1000859" -> "1000853"  [label="DDG: NULL"];
"1000843" -> "1000835"  [label="AST: "];
"1000835" -> "1000843"  [label="CFG: "];
"1000843" -> "1001707"  [label="DDG: s->d1->handshake_fragment[0] == SSL3_MT_HELLO_REQUEST"];
"1000843" -> "1001707"  [label="DDG: (s->session != NULL) && (s->session->cipher != NULL)"];
"1000843" -> "1000835"  [label="DDG: s->d1->handshake_fragment[0] == SSL3_MT_HELLO_REQUEST"];
"1000843" -> "1000835"  [label="DDG: (s->session != NULL) && (s->session->cipher != NULL)"];
"1000835" -> "1000830"  [label="AST: "];
"1000835" -> "1000836"  [label="CFG: "];
"1000836" -> "1000835"  [label="AST: "];
"1000830" -> "1000835"  [label="CFG: "];
"1000835" -> "1001707"  [label="DDG: (s->d1->handshake_fragment[0] == SSL3_MT_HELLO_REQUEST) &&\n\t\t(s->session != NULL) && (s->session->cipher != NULL)"];
"1000835" -> "1001707"  [label="DDG: s->d1->handshake_fragment_len >= DTLS1_HM_HEADER_LENGTH"];
"1000835" -> "1000830"  [label="DDG: s->d1->handshake_fragment_len >= DTLS1_HM_HEADER_LENGTH"];
"1000835" -> "1000830"  [label="DDG: (s->d1->handshake_fragment[0] == SSL3_MT_HELLO_REQUEST) &&\n\t\t(s->session != NULL) && (s->session->cipher != NULL)"];
"1000836" -> "1000835"  [label="DDG: s->d1->handshake_fragment_len"];
"1000836" -> "1000835"  [label="DDG: DTLS1_HM_HEADER_LENGTH"];
"1000830" -> "1000829"  [label="AST: "];
"1000830" -> "1000831"  [label="CFG: "];
"1000831" -> "1000830"  [label="AST: "];
"1000870" -> "1000830"  [label="CFG: "];
"1001031" -> "1000830"  [label="CFG: "];
"1000830" -> "1001707"  [label="DDG: (!s->server) &&\n\t\t(s->d1->handshake_fragment_len >= DTLS1_HM_HEADER_LENGTH) &&\n\t\t(s->d1->handshake_fragment[0] == SSL3_MT_HELLO_REQUEST) &&\n\t\t(s->session != NULL) && (s->session->cipher != NULL)"];
"1000830" -> "1001707"  [label="DDG: (s->d1->handshake_fragment_len >= DTLS1_HM_HEADER_LENGTH) &&\n\t\t(s->d1->handshake_fragment[0] == SSL3_MT_HELLO_REQUEST) &&\n\t\t(s->session != NULL) && (s->session->cipher != NULL)"];
"1000830" -> "1001707"  [label="DDG: !s->server"];
"1000831" -> "1000830"  [label="DDG: s->server"];
"1000859" -> "1000865"  [label="CFG: "];
"1000860" -> "1000859"  [label="AST: "];
"1000865" -> "1000859"  [label="AST: "];
"1000859" -> "1001707"  [label="DDG: NULL"];
"1000859" -> "1001707"  [label="DDG: s->session->cipher"];
"1000859" -> "1001084"  [label="DDG: NULL"];
"1001084" -> "1001083"  [label="AST: "];
"1001084" -> "1001088"  [label="CFG: "];
"1001085" -> "1001084"  [label="AST: "];
"1001088" -> "1001084"  [label="AST: "];
"1001090" -> "1001084"  [label="CFG: "];
"1001099" -> "1001084"  [label="CFG: "];
"1001084" -> "1001707"  [label="DDG: s->info_callback"];
"1001084" -> "1001707"  [label="DDG: s->info_callback != NULL"];
"1001111" -> "1001084"  [label="DDG: NULL"];
"1000174" -> "1001084"  [label="DDG: NULL"];
"1001084" -> "1001089"  [label="DDG: s->info_callback"];
"1001084" -> "1001096"  [label="DDG: NULL"];
"1001084" -> "1001111"  [label="DDG: NULL"];
"1001089" -> "1001083"  [label="AST: "];
"1001089" -> "1001091"  [label="CFG: "];
"1001090" -> "1001089"  [label="AST: "];
"1001091" -> "1001089"  [label="AST: "];
"1001112" -> "1001089"  [label="CFG: "];
"1001089" -> "1001707"  [label="DDG: s->info_callback"];
"1001089" -> "1001111"  [label="DDG: cb"];
"1001111" -> "1001110"  [label="AST: "];
"1001111" -> "1001113"  [label="CFG: "];
"1001112" -> "1001111"  [label="AST: "];
"1001113" -> "1001111"  [label="AST: "];
"1001116" -> "1001111"  [label="CFG: "];
"1001128" -> "1001111"  [label="CFG: "];
"1001111" -> "1001707"  [label="DDG: NULL"];
"1001111" -> "1001707"  [label="DDG: cb != NULL"];
"1001111" -> "1001707"  [label="DDG: cb"];
"1001103" -> "1001111"  [label="DDG: cb"];
"1000170" -> "1001111"  [label="DDG: cb"];
"1001096" -> "1001111"  [label="DDG: NULL"];
"1001096" -> "1001095"  [label="AST: "];
"1001096" -> "1001102"  [label="CFG: "];
"1001097" -> "1001096"  [label="AST: "];
"1001102" -> "1001096"  [label="AST: "];
"1001104" -> "1001096"  [label="CFG: "];
"1001112" -> "1001096"  [label="CFG: "];
"1001096" -> "1001707"  [label="DDG: s->ctx->info_callback"];
"1001096" -> "1001707"  [label="DDG: s->ctx->info_callback != NULL"];
"1001096" -> "1001103"  [label="DDG: s->ctx->info_callback"];
"1001103" -> "1001095"  [label="AST: "];
"1001103" -> "1001105"  [label="CFG: "];
"1001104" -> "1001103"  [label="AST: "];
"1001105" -> "1001103"  [label="AST: "];
"1001112" -> "1001103"  [label="CFG: "];
"1001103" -> "1001707"  [label="DDG: s->ctx->info_callback"];
"1001266" -> "1001232"  [label="AST: "];
"1001266" -> "1001270"  [label="CFG: "];
"1001267" -> "1001266"  [label="AST: "];
"1001270" -> "1001266"  [label="AST: "];
"1001274" -> "1001266"  [label="CFG: "];
"1001266" -> "1001707"  [label="DDG: SSL_CTX_remove_session(s->ctx,s->session)"];
"1001266" -> "1001707"  [label="DDG: s->ctx"];
"1001266" -> "1001707"  [label="DDG: s->session"];
"1000933" -> "1000932"  [label="AST: "];
"1000933" -> "1000936"  [label="CFG: "];
"1000936" -> "1000933"  [label="AST: "];
"1000955" -> "1000933"  [label="CFG: "];
"1001026" -> "1000933"  [label="CFG: "];
"1000933" -> "1001707"  [label="DDG: !(s->s3->flags & SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS) &&\n\t\t\t!s->s3->renegotiate"];
"1000933" -> "1001707"  [label="DDG: SSL_is_init_finished(s)"];
"1000933" -> "1001707"  [label="DDG: SSL_is_init_finished(s) &&\n\t\t\t!(s->s3->flags & SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS) &&\n\t\t\t!s->s3->renegotiate"];
"1000936" -> "1000933"  [label="DDG: !(s->s3->flags & SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS)"];
"1000936" -> "1000933"  [label="DDG: !s->s3->renegotiate"];
"1000969" -> "1000968"  [label="AST: "];
"1000970" -> "1000969"  [label="AST: "];
"1000975" -> "1000969"  [label="CFG: "];
"1000969" -> "1001707"  [label="DDG: s->handshake_func(s)"];
"1000969" -> "1000974"  [label="DDG: i"];
"1000974" -> "1000973"  [label="AST: "];
"1000974" -> "1000976"  [label="CFG: "];
"1000975" -> "1000974"  [label="AST: "];
"1000976" -> "1000974"  [label="AST: "];
"1000978" -> "1000974"  [label="CFG: "];
"1000981" -> "1000974"  [label="CFG: "];
"1000974" -> "1001707"  [label="DDG: i < 0"];
"1000974" -> "1001707"  [label="DDG: i"];
"1000974" -> "1000977"  [label="DDG: i"];
"1000974" -> "1000980"  [label="DDG: i"];
"1000977" -> "1000973"  [label="AST: "];
"1000977" -> "1000978"  [label="CFG: "];
"1000978" -> "1000977"  [label="AST: "];
"1001707" -> "1000977"  [label="CFG: "];
"1000977" -> "1001707"  [label="DDG: <RET>"];
"1000978" -> "1000977"  [label="DDG: i"];
"1000980" -> "1000979"  [label="AST: "];
"1000980" -> "1000982"  [label="CFG: "];
"1000981" -> "1000980"  [label="AST: "];
"1000982" -> "1000980"  [label="AST: "];
"1000985" -> "1000980"  [label="CFG: "];
"1000994" -> "1000980"  [label="CFG: "];
"1000980" -> "1001707"  [label="DDG: i"];
"1000980" -> "1001707"  [label="DDG: i == 0"];
"1001017" -> "1001015"  [label="AST: "];
"1001017" -> "1001018"  [label="CFG: "];
"1001018" -> "1001017"  [label="AST: "];
"1001015" -> "1001017"  [label="CFG: "];
"1001017" -> "1001707"  [label="DDG: s"];
"1001017" -> "1001015"  [label="DDG: s"];
"1001015" -> "1001008"  [label="AST: "];
"1001016" -> "1001015"  [label="AST: "];
"1001020" -> "1001015"  [label="CFG: "];
"1001015" -> "1001707"  [label="DDG: SSL_get_rbio(s)"];
"1001015" -> "1001019"  [label="DDG: bio"];
"1001019" -> "1001008"  [label="AST: "];
"1001019" -> "1001020"  [label="CFG: "];
"1001020" -> "1001019"  [label="AST: "];
"1001022" -> "1001019"  [label="CFG: "];
"1001019" -> "1001707"  [label="DDG: BIO_clear_retry_flags(bio)"];
"1001019" -> "1001021"  [label="DDG: bio"];
"1001021" -> "1001008"  [label="AST: "];
"1001021" -> "1001022"  [label="CFG: "];
"1001022" -> "1001021"  [label="AST: "];
"1001025" -> "1001021"  [label="CFG: "];
"1001021" -> "1001707"  [label="DDG: BIO_set_retry_read(bio)"];
"1001021" -> "1001707"  [label="DDG: bio"];
"1001478" -> "1001477"  [label="AST: "];
"1001478" -> "1001481"  [label="CFG: "];
"1001481" -> "1001478"  [label="AST: "];
"1001484" -> "1001478"  [label="CFG: "];
"1001486" -> "1001478"  [label="CFG: "];
"1001478" -> "1001707"  [label="DDG: dtls1_check_timeout_num(s)"];
"1001478" -> "1001707"  [label="DDG: dtls1_check_timeout_num(s) < 0"];
"1001533" -> "1001445"  [label="AST: "];
"1001534" -> "1001533"  [label="AST: "];
"1001539" -> "1001533"  [label="CFG: "];
"1001533" -> "1001707"  [label="DDG: s->handshake_func(s)"];
"1001533" -> "1001538"  [label="DDG: i"];
"1001538" -> "1001537"  [label="AST: "];
"1001538" -> "1001540"  [label="CFG: "];
"1001539" -> "1001538"  [label="AST: "];
"1001540" -> "1001538"  [label="AST: "];
"1001542" -> "1001538"  [label="CFG: "];
"1001545" -> "1001538"  [label="CFG: "];
"1001538" -> "1001707"  [label="DDG: i < 0"];
"1001538" -> "1001707"  [label="DDG: i"];
"1001538" -> "1001541"  [label="DDG: i"];
"1001538" -> "1001544"  [label="DDG: i"];
"1001541" -> "1001537"  [label="AST: "];
"1001541" -> "1001542"  [label="CFG: "];
"1001542" -> "1001541"  [label="AST: "];
"1001707" -> "1001541"  [label="CFG: "];
"1001541" -> "1001707"  [label="DDG: <RET>"];
"1001542" -> "1001541"  [label="DDG: i"];
"1001544" -> "1001543"  [label="AST: "];
"1001544" -> "1001546"  [label="CFG: "];
"1001545" -> "1001544"  [label="AST: "];
"1001546" -> "1001544"  [label="AST: "];
"1001549" -> "1001544"  [label="CFG: "];
"1001558" -> "1001544"  [label="CFG: "];
"1001544" -> "1001707"  [label="DDG: i == 0"];
"1001544" -> "1001707"  [label="DDG: i"];
"1001581" -> "1001579"  [label="AST: "];
"1001581" -> "1001582"  [label="CFG: "];
"1001582" -> "1001581"  [label="AST: "];
"1001579" -> "1001581"  [label="CFG: "];
"1001581" -> "1001707"  [label="DDG: s"];
"1001581" -> "1001579"  [label="DDG: s"];
"1001579" -> "1001572"  [label="AST: "];
"1001580" -> "1001579"  [label="AST: "];
"1001584" -> "1001579"  [label="CFG: "];
"1001579" -> "1001707"  [label="DDG: SSL_get_rbio(s)"];
"1001579" -> "1001583"  [label="DDG: bio"];
"1001583" -> "1001572"  [label="AST: "];
"1001583" -> "1001584"  [label="CFG: "];
"1001584" -> "1001583"  [label="AST: "];
"1001586" -> "1001583"  [label="CFG: "];
"1001583" -> "1001707"  [label="DDG: BIO_clear_retry_flags(bio)"];
"1001583" -> "1001585"  [label="DDG: bio"];
"1001585" -> "1001572"  [label="AST: "];
"1001585" -> "1001586"  [label="CFG: "];
"1001586" -> "1001585"  [label="AST: "];
"1001589" -> "1001585"  [label="CFG: "];
"1001585" -> "1001707"  [label="DDG: BIO_set_retry_read(bio)"];
"1001585" -> "1001707"  [label="DDG: bio"];
}
