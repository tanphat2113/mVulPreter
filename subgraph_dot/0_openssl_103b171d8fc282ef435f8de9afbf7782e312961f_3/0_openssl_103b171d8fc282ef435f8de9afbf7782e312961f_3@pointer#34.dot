digraph "0_openssl_103b171d8fc282ef435f8de9afbf7782e312961f_3@pointer" {
"1000584" [label="(Call,s->state == DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1000579" [label="(Call,s->state == DTLS1_SCTP_ST_SR_READ_SOCK)"];
"1000294" [label="(Call,s->state == SSL_ST_OK)"];
"1001496" [label="(Call,s->state&SSL_ST_MASK)"];
"1001511" [label="(Call,s->state=SSL_ST_BEFORE|(s->server)\n\t\t\t\t?SSL_ST_ACCEPT\n\t\t\t\t:SSL_ST_CONNECT)"];
"1000239" [label="(Call,s->state == DTLS1_SCTP_ST_SR_READ_SOCK)"];
"1000244" [label="(Call,s->state == DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1001495" [label="(Call,(s->state&SSL_ST_MASK) == SSL_ST_OK)"];
"1000578" [label="(Call,s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1000572" [label="(Call,rr->type == SSL3_RT_APPLICATION_DATA &&\n\t\t\t    (s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK))"];
"1000568" [label="(Call,BIO_dgram_is_sctp(SSL_get_rbio(s)) &&\n\t\t\t    rr->type == SSL3_RT_APPLICATION_DATA &&\n\t\t\t    (s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK))"];
"1000605" [label="(Identifier,s)"];
"1000294" [label="(Call,s->state == SSL_ST_OK)"];
"1000580" [label="(Call,s->state)"];
"1000239" [label="(Call,s->state == DTLS1_SCTP_ST_SR_READ_SOCK)"];
"1001494" [label="(Call,((s->state&SSL_ST_MASK) == SSL_ST_OK) &&\n\t\t\t!(s->s3->flags & SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS))"];
"1000585" [label="(Call,s->state)"];
"1001511" [label="(Call,s->state=SSL_ST_BEFORE|(s->server)\n\t\t\t\t?SSL_ST_ACCEPT\n\t\t\t\t:SSL_ST_CONNECT)"];
"1001500" [label="(Identifier,SSL_ST_MASK)"];
"1000584" [label="(Call,s->state == DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1000592" [label="(Identifier,s)"];
"1000573" [label="(Call,rr->type == SSL3_RT_APPLICATION_DATA)"];
"1000568" [label="(Call,BIO_dgram_is_sctp(SSL_get_rbio(s)) &&\n\t\t\t    rr->type == SSL3_RT_APPLICATION_DATA &&\n\t\t\t    (s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK))"];
"1000295" [label="(Call,s->state)"];
"1000583" [label="(Identifier,DTLS1_SCTP_ST_SR_READ_SOCK)"];
"1001525" [label="(Identifier,s)"];
"1000569" [label="(Call,BIO_dgram_is_sctp(SSL_get_rbio(s)))"];
"1000578" [label="(Call,s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1001515" [label="(Call,SSL_ST_BEFORE|(s->server)\n\t\t\t\t?SSL_ST_ACCEPT\n\t\t\t\t:SSL_ST_CONNECT)"];
"1000567" [label="(ControlStructure,if (BIO_dgram_is_sctp(SSL_get_rbio(s)) &&\n\t\t\t    rr->type == SSL3_RT_APPLICATION_DATA &&\n\t\t\t    (s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK)))"];
"1000240" [label="(Call,s->state)"];
"1001510" [label="(Block,)"];
"1001512" [label="(Call,s->state)"];
"1000588" [label="(Identifier,DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1000248" [label="(Identifier,DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1001707" [label="(MethodReturn,int)"];
"1000244" [label="(Call,s->state == DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1001506" [label="(Identifier,s)"];
"1000301" [label="(Identifier,rr)"];
"1000579" [label="(Call,s->state == DTLS1_SCTP_ST_SR_READ_SOCK)"];
"1001495" [label="(Call,(s->state&SSL_ST_MASK) == SSL_ST_OK)"];
"1001501" [label="(Identifier,SSL_ST_OK)"];
"1000245" [label="(Call,s->state)"];
"1000237" [label="(Call,(s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK) &&\n\t     s->s3->in_read_app_data != 2)"];
"1000298" [label="(Identifier,SSL_ST_OK)"];
"1000238" [label="(Call,s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1001496" [label="(Call,s->state&SSL_ST_MASK)"];
"1000293" [label="(Call,s->state == SSL_ST_OK && rr->length == 0)"];
"1000243" [label="(Identifier,DTLS1_SCTP_ST_SR_READ_SOCK)"];
"1001645" [label="(Call,s->state & SSL_ST_CONNECT)"];
"1000572" [label="(Call,rr->type == SSL3_RT_APPLICATION_DATA &&\n\t\t\t    (s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK))"];
"1000246" [label="(Identifier,s)"];
"1000586" [label="(Identifier,s)"];
"1001497" [label="(Call,s->state)"];
"1000584" -> "1000578"  [label="AST: "];
"1000584" -> "1000588"  [label="CFG: "];
"1000585" -> "1000584"  [label="AST: "];
"1000588" -> "1000584"  [label="AST: "];
"1000578" -> "1000584"  [label="CFG: "];
"1000584" -> "1001707"  [label="DDG: DTLS1_SCTP_ST_CR_READ_SOCK"];
"1000584" -> "1001707"  [label="DDG: s->state"];
"1000584" -> "1000578"  [label="DDG: s->state"];
"1000584" -> "1000578"  [label="DDG: DTLS1_SCTP_ST_CR_READ_SOCK"];
"1000579" -> "1000584"  [label="DDG: s->state"];
"1000244" -> "1000584"  [label="DDG: DTLS1_SCTP_ST_CR_READ_SOCK"];
"1000579" -> "1000578"  [label="AST: "];
"1000579" -> "1000583"  [label="CFG: "];
"1000580" -> "1000579"  [label="AST: "];
"1000583" -> "1000579"  [label="AST: "];
"1000586" -> "1000579"  [label="CFG: "];
"1000578" -> "1000579"  [label="CFG: "];
"1000579" -> "1001707"  [label="DDG: s->state"];
"1000579" -> "1001707"  [label="DDG: DTLS1_SCTP_ST_SR_READ_SOCK"];
"1000579" -> "1000578"  [label="DDG: s->state"];
"1000579" -> "1000578"  [label="DDG: DTLS1_SCTP_ST_SR_READ_SOCK"];
"1000294" -> "1000579"  [label="DDG: s->state"];
"1000239" -> "1000579"  [label="DDG: DTLS1_SCTP_ST_SR_READ_SOCK"];
"1000294" -> "1000293"  [label="AST: "];
"1000294" -> "1000298"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000298" -> "1000294"  [label="AST: "];
"1000301" -> "1000294"  [label="CFG: "];
"1000293" -> "1000294"  [label="CFG: "];
"1000294" -> "1001707"  [label="DDG: SSL_ST_OK"];
"1000294" -> "1001707"  [label="DDG: s->state"];
"1000294" -> "1000293"  [label="DDG: s->state"];
"1000294" -> "1000293"  [label="DDG: SSL_ST_OK"];
"1001496" -> "1000294"  [label="DDG: s->state"];
"1001511" -> "1000294"  [label="DDG: s->state"];
"1000239" -> "1000294"  [label="DDG: s->state"];
"1000244" -> "1000294"  [label="DDG: s->state"];
"1001495" -> "1000294"  [label="DDG: SSL_ST_OK"];
"1000294" -> "1001496"  [label="DDG: s->state"];
"1000294" -> "1001495"  [label="DDG: SSL_ST_OK"];
"1000294" -> "1001645"  [label="DDG: s->state"];
"1001496" -> "1001495"  [label="AST: "];
"1001496" -> "1001500"  [label="CFG: "];
"1001497" -> "1001496"  [label="AST: "];
"1001500" -> "1001496"  [label="AST: "];
"1001501" -> "1001496"  [label="CFG: "];
"1001496" -> "1001707"  [label="DDG: s->state"];
"1001496" -> "1001707"  [label="DDG: SSL_ST_MASK"];
"1001496" -> "1001495"  [label="DDG: s->state"];
"1001496" -> "1001495"  [label="DDG: SSL_ST_MASK"];
"1001511" -> "1001510"  [label="AST: "];
"1001511" -> "1001515"  [label="CFG: "];
"1001512" -> "1001511"  [label="AST: "];
"1001515" -> "1001511"  [label="AST: "];
"1001525" -> "1001511"  [label="CFG: "];
"1001511" -> "1001707"  [label="DDG: s->state"];
"1001511" -> "1001707"  [label="DDG: SSL_ST_BEFORE|(s->server)\n\t\t\t\t?SSL_ST_ACCEPT\n\t\t\t\t:SSL_ST_CONNECT"];
"1000239" -> "1000238"  [label="AST: "];
"1000239" -> "1000243"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000243" -> "1000239"  [label="AST: "];
"1000246" -> "1000239"  [label="CFG: "];
"1000238" -> "1000239"  [label="CFG: "];
"1000239" -> "1001707"  [label="DDG: s->state"];
"1000239" -> "1001707"  [label="DDG: DTLS1_SCTP_ST_SR_READ_SOCK"];
"1000239" -> "1000238"  [label="DDG: s->state"];
"1000239" -> "1000238"  [label="DDG: DTLS1_SCTP_ST_SR_READ_SOCK"];
"1000239" -> "1000244"  [label="DDG: s->state"];
"1000244" -> "1000238"  [label="AST: "];
"1000244" -> "1000248"  [label="CFG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000248" -> "1000244"  [label="AST: "];
"1000238" -> "1000244"  [label="CFG: "];
"1000244" -> "1001707"  [label="DDG: DTLS1_SCTP_ST_CR_READ_SOCK"];
"1000244" -> "1001707"  [label="DDG: s->state"];
"1000244" -> "1000238"  [label="DDG: s->state"];
"1000244" -> "1000238"  [label="DDG: DTLS1_SCTP_ST_CR_READ_SOCK"];
"1001495" -> "1001494"  [label="AST: "];
"1001495" -> "1001501"  [label="CFG: "];
"1001501" -> "1001495"  [label="AST: "];
"1001506" -> "1001495"  [label="CFG: "];
"1001494" -> "1001495"  [label="CFG: "];
"1001495" -> "1001707"  [label="DDG: s->state&SSL_ST_MASK"];
"1001495" -> "1001707"  [label="DDG: SSL_ST_OK"];
"1001495" -> "1001494"  [label="DDG: s->state&SSL_ST_MASK"];
"1001495" -> "1001494"  [label="DDG: SSL_ST_OK"];
"1000578" -> "1000572"  [label="AST: "];
"1000572" -> "1000578"  [label="CFG: "];
"1000578" -> "1001707"  [label="DDG: s->state == DTLS1_SCTP_ST_SR_READ_SOCK"];
"1000578" -> "1001707"  [label="DDG: s->state == DTLS1_SCTP_ST_CR_READ_SOCK"];
"1000578" -> "1000572"  [label="DDG: s->state == DTLS1_SCTP_ST_SR_READ_SOCK"];
"1000578" -> "1000572"  [label="DDG: s->state == DTLS1_SCTP_ST_CR_READ_SOCK"];
"1000238" -> "1000578"  [label="DDG: s->state == DTLS1_SCTP_ST_CR_READ_SOCK"];
"1000572" -> "1000568"  [label="AST: "];
"1000572" -> "1000573"  [label="CFG: "];
"1000573" -> "1000572"  [label="AST: "];
"1000568" -> "1000572"  [label="CFG: "];
"1000572" -> "1001707"  [label="DDG: s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK"];
"1000572" -> "1001707"  [label="DDG: rr->type == SSL3_RT_APPLICATION_DATA"];
"1000572" -> "1000568"  [label="DDG: rr->type == SSL3_RT_APPLICATION_DATA"];
"1000572" -> "1000568"  [label="DDG: s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK"];
"1000573" -> "1000572"  [label="DDG: rr->type"];
"1000573" -> "1000572"  [label="DDG: SSL3_RT_APPLICATION_DATA"];
"1000237" -> "1000572"  [label="DDG: s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK"];
"1000568" -> "1000567"  [label="AST: "];
"1000568" -> "1000569"  [label="CFG: "];
"1000569" -> "1000568"  [label="AST: "];
"1000592" -> "1000568"  [label="CFG: "];
"1000605" -> "1000568"  [label="CFG: "];
"1000568" -> "1001707"  [label="DDG: BIO_dgram_is_sctp(SSL_get_rbio(s)) &&\n\t\t\t    rr->type == SSL3_RT_APPLICATION_DATA &&\n\t\t\t    (s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1000568" -> "1001707"  [label="DDG: rr->type == SSL3_RT_APPLICATION_DATA &&\n\t\t\t    (s->state == DTLS1_SCTP_ST_SR_READ_SOCK || s->state == DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1000569" -> "1000568"  [label="DDG: SSL_get_rbio(s)"];
}
