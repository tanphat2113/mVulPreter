digraph "0_ImageMagick6_61135001a625364e29bdce83832f043eebde7b5a_0@pointer" {
"1000116" [label="(MethodParameterIn,ExceptionInfo *exception)"];
"1000445" [label="(Call,GetVirtualPixels(image,0,offset,image->columns,1,exception))"];
"1000443" [label="(Call,p=GetVirtualPixels(image,0,offset,image->columns,1,exception))"];
"1000455" [label="(Call,p == (const Quantum *) NULL)"];
"1000470" [label="(Call,GetPixelIndex(image,p))"];
"1000468" [label="(Call,(short) GetPixelIndex(image,p))"];
"1000466" [label="(Call,waiting_code=(short) GetPixelIndex(image,p))"];
"1000515" [label="(Call,(ssize_t) (((size_t) index << (MaxGIFBits-8))+waiting_code))"];
"1000513" [label="(Call,k=(ssize_t) (((size_t) index << (MaxGIFBits-8))+waiting_code))"];
"1000527" [label="(Call,k >= MaxHashTable)"];
"1000530" [label="(Call,k-=MaxHashTable)"];
"1000568" [label="(Call,k != 0)"];
"1000573" [label="(Call,MaxHashTable-k)"];
"1000571" [label="(Call,displacement=MaxHashTable-k)"];
"1000578" [label="(Call,k-=displacement)"];
"1000582" [label="(Call,k < 0)"];
"1000585" [label="(Call,k+=MaxHashTable)"];
"1000657" [label="(Call,k < MaxHashTable)"];
"1000660" [label="(Call,k++)"];
"1000517" [label="(Call,((size_t) index << (MaxGIFBits-8))+waiting_code)"];
"1000548" [label="(Call,hash_prefix[k] == waiting_code)"];
"1000547" [label="(Call,(hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index))"];
"1000596" [label="(Call,(hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index))"];
"1000597" [label="(Call,hash_prefix[k] == waiting_code)"];
"1000624" [label="(Call,GIFOutputCode(waiting_code))"];
"1000639" [label="(Call,hash_prefix[k]=waiting_code)"];
"1000833" [label="(Call,RelinquishMagickMemory(hash_prefix))"];
"1000831" [label="(Call,(short *) RelinquishMagickMemory(hash_prefix))"];
"1000829" [label="(Call,hash_prefix=(short *) RelinquishMagickMemory(hash_prefix))"];
"1000765" [label="(Call,GIFOutputCode(waiting_code))"];
"1000473" [label="(Call,p+=GetPixelChannels(image))"];
"1000505" [label="(Call,GetPixelIndex(image,p))"];
"1000503" [label="(Call,(size_t) GetPixelIndex(image,p))"];
"1000502" [label="(Call,(size_t) GetPixelIndex(image,p) & 0xff)"];
"1000500" [label="(Call,(Quantum) ((size_t) GetPixelIndex(image,p) & 0xff))"];
"1000498" [label="(Call,index=(Quantum) ((size_t) GetPixelIndex(image,p) & 0xff))"];
"1000519" [label="(Call,(size_t) index)"];
"1000518" [label="(Call,(size_t) index << (MaxGIFBits-8))"];
"1000557" [label="(Call,(unsigned char) index)"];
"1000553" [label="(Call,hash_suffix[k] == (unsigned char) index)"];
"1000602" [label="(Call,hash_suffix[k] == (unsigned char) index)"];
"1000827" [label="(Call,RelinquishMagickMemory(hash_suffix))"];
"1000825" [label="(Call,(unsigned char *) RelinquishMagickMemory(hash_suffix))"];
"1000823" [label="(Call,hash_suffix=(unsigned char *) RelinquishMagickMemory(hash_suffix))"];
"1000606" [label="(Call,(unsigned char) index)"];
"1000648" [label="(Call,(unsigned char) index)"];
"1000644" [label="(Call,hash_suffix[k]=(unsigned char) index)"];
"1000683" [label="(Call,(short) index)"];
"1000681" [label="(Call,waiting_code=(short) index)"];
"1000509" [label="(Call,p+=GetPixelChannels(image))"];
"1000511" [label="(Call,GetPixelChannels(image))"];
"1000791" [label="(Call,WriteBlobByte(image,(unsigned char) length))"];
"1000789" [label="(Call,(void) WriteBlobByte(image,(unsigned char) length))"];
"1000798" [label="(Call,WriteBlob(image,length,packet))"];
"1000796" [label="(Call,(void) WriteBlob(image,length,packet))"];
"1000812" [label="(Call,WriteBlobByte(image,(unsigned char) length))"];
"1000810" [label="(Call,(void) WriteBlobByte(image,(unsigned char) length))"];
"1000819" [label="(Call,WriteBlob(image,length,packet))"];
"1000817" [label="(Call,(void) WriteBlob(image,length,packet))"];
"1000845" [label="(Call,RelinquishMagickMemory(packet))"];
"1000843" [label="(Call,(unsigned char *) RelinquishMagickMemory(packet))"];
"1000841" [label="(Call,packet=(unsigned char *) RelinquishMagickMemory(packet))"];
"1000475" [label="(Call,GetPixelChannels(image))"];
"1000490" [label="(Call,(ssize_t) image->columns)"];
"1000488" [label="(Call,x < (ssize_t) image->columns)"];
"1000495" [label="(Call,x++)"];
"1000692" [label="(Call,offset++)"];
"1000701" [label="(Call,offset+=8)"];
"1000705" [label="(Call,offset >= (ssize_t) image->rows)"];
"1000721" [label="(Call,offset+=8)"];
"1000725" [label="(Call,offset >= (ssize_t) image->rows)"];
"1000741" [label="(Call,offset+=4)"];
"1000745" [label="(Call,offset >= (ssize_t) image->rows)"];
"1000761" [label="(Call,offset+=2)"];
"1000465" [label="(Block,)"];
"1000624" [label="(Call,GIFOutputCode(waiting_code))"];
"1000668" [label="(Identifier,free_code)"];
"1000500" [label="(Call,(Quantum) ((size_t) GetPixelIndex(image,p) & 0xff))"];
"1000810" [label="(Call,(void) WriteBlobByte(image,(unsigned char) length))"];
"1000449" [label="(Call,image->columns)"];
"1000640" [label="(Call,hash_prefix[k])"];
"1000706" [label="(Identifier,offset)"];
"1000363" [label="(Call,memset(hash_prefix,0,MaxHashTable*sizeof(*hash_prefix)))"];
"1000468" [label="(Call,(short) GetPixelIndex(image,p))"];
"1000452" [label="(Literal,1)"];
"1000705" [label="(Call,offset >= (ssize_t) image->rows)"];
"1000570" [label="(Literal,0)"];
"1000791" [label="(Call,WriteBlobByte(image,(unsigned char) length))"];
"1000549" [label="(Call,hash_prefix[k])"];
"1000692" [label="(Call,offset++)"];
"1000472" [label="(Identifier,p)"];
"1000845" [label="(Call,RelinquishMagickMemory(packet))"];
"1000456" [label="(Identifier,p)"];
"1000572" [label="(Identifier,displacement)"];
"1000447" [label="(Literal,0)"];
"1000497" [label="(Block,)"];
"1000591" [label="(Identifier,hash_code)"];
"1000800" [label="(Identifier,length)"];
"1000812" [label="(Call,WriteBlobByte(image,(unsigned char) length))"];
"1000813" [label="(Identifier,image)"];
"1000478" [label="(Call,x=(ssize_t) (y == 0 ? 1 : 0))"];
"1000726" [label="(Identifier,offset)"];
"1000754" [label="(Identifier,pass)"];
"1000571" [label="(Call,displacement=MaxHashTable-k)"];
"1000658" [label="(Identifier,k)"];
"1000471" [label="(Identifier,image)"];
"1000439" [label="(Identifier,y)"];
"1000513" [label="(Call,k=(ssize_t) (((size_t) index << (MaxGIFBits-8))+waiting_code))"];
"1000546" [label="(ControlStructure,if ((hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index)))"];
"1000846" [label="(Identifier,packet)"];
"1000646" [label="(Identifier,hash_suffix)"];
"1000831" [label="(Call,(short *) RelinquishMagickMemory(hash_prefix))"];
"1000824" [label="(Identifier,hash_suffix)"];
"1000720" [label="(Block,)"];
"1000746" [label="(Identifier,offset)"];
"1000644" [label="(Call,hash_suffix[k]=(unsigned char) index)"];
"1000567" [label="(ControlStructure,if (k != 0))"];
"1000809" [label="(Block,)"];
"1000586" [label="(Identifier,k)"];
"1000610" [label="(Call,waiting_code=hash_code[k])"];
"1000828" [label="(Identifier,hash_suffix)"];
"1000821" [label="(Identifier,length)"];
"1000114" [label="(MethodParameterIn,Image *image)"];
"1000488" [label="(Call,x < (ssize_t) image->columns)"];
"1000789" [label="(Call,(void) WriteBlobByte(image,(unsigned char) length))"];
"1000722" [label="(Identifier,offset)"];
"1000700" [label="(Block,)"];
"1000455" [label="(Call,p == (const Quantum *) NULL)"];
"1000519" [label="(Call,(size_t) index)"];
"1000477" [label="(ControlStructure,for (x=(ssize_t) (y == 0 ? 1 : 0); x < (ssize_t) image->columns; x++))"];
"1000515" [label="(Call,(ssize_t) (((size_t) index << (MaxGIFBits-8))+waiting_code))"];
"1000502" [label="(Call,(size_t) GetPixelIndex(image,p) & 0xff)"];
"1000833" [label="(Call,RelinquishMagickMemory(hash_prefix))"];
"1000825" [label="(Call,(unsigned char *) RelinquishMagickMemory(hash_suffix))"];
"1000579" [label="(Identifier,k)"];
"1000762" [label="(Identifier,offset)"];
"1000581" [label="(ControlStructure,if (k < 0))"];
"1000424" [label="(Call,waiting_code=0)"];
"1000514" [label="(Identifier,k)"];
"1000760" [label="(Block,)"];
"1000578" [label="(Call,k-=displacement)"];
"1000661" [label="(Identifier,k)"];
"1000602" [label="(Call,hash_suffix[k] == (unsigned char) index)"];
"1000848" [label="(Identifier,MagickTrue)"];
"1000555" [label="(Identifier,hash_suffix)"];
"1000445" [label="(Call,GetVirtualPixels(image,0,offset,image->columns,1,exception))"];
"1000510" [label="(Identifier,p)"];
"1000744" [label="(ControlStructure,if (offset >= (ssize_t) image->rows))"];
"1000820" [label="(Identifier,image)"];
"1000650" [label="(Identifier,index)"];
"1000512" [label="(Identifier,image)"];
"1000801" [label="(Identifier,packet)"];
"1000774" [label="(Call,packet[length++]=(unsigned char) (datum & 0xff))"];
"1000657" [label="(Call,k < MaxHashTable)"];
"1000222" [label="(Call,image != (Image *) NULL)"];
"1000745" [label="(Call,offset >= (ssize_t) image->rows)"];
"1000475" [label="(Call,GetPixelChannels(image))"];
"1000685" [label="(Identifier,index)"];
"1000764" [label="(ControlStructure,break;)"];
"1000608" [label="(Identifier,index)"];
"1000557" [label="(Call,(unsigned char) index)"];
"1000683" [label="(Call,(short) index)"];
"1000798" [label="(Call,WriteBlob(image,length,packet))"];
"1000376" [label="(Call,MaxHashTable*sizeof(*hash_suffix))"];
"1000470" [label="(Call,GetPixelIndex(image,p))"];
"1000532" [label="(Identifier,MaxHashTable)"];
"1000721" [label="(Call,offset+=8)"];
"1000473" [label="(Call,p+=GetPixelChannels(image))"];
"1000575" [label="(Identifier,k)"];
"1000639" [label="(Call,hash_prefix[k]=waiting_code)"];
"1000768" [label="(Identifier,end_of_information_code)"];
"1000489" [label="(Identifier,x)"];
"1000582" [label="(Call,k < 0)"];
"1000827" [label="(Call,RelinquishMagickMemory(hash_suffix))"];
"1000463" [label="(Identifier,y)"];
"1000116" [label="(MethodParameterIn,ExceptionInfo *exception)"];
"1000724" [label="(ControlStructure,if (offset >= (ssize_t) image->rows))"];
"1000725" [label="(Call,offset >= (ssize_t) image->rows)"];
"1000823" [label="(Call,hash_suffix=(unsigned char *) RelinquishMagickMemory(hash_suffix))"];
"1000792" [label="(Identifier,image)"];
"1000474" [label="(Identifier,p)"];
"1000727" [label="(Call,(ssize_t) image->rows)"];
"1000460" [label="(ControlStructure,break;)"];
"1000536" [label="(Call,displacement=1)"];
"1000507" [label="(Identifier,p)"];
"1000735" [label="(Call,offset=2)"];
"1000499" [label="(Identifier,index)"];
"1000740" [label="(Block,)"];
"1000682" [label="(Identifier,waiting_code)"];
"1000503" [label="(Call,(size_t) GetPixelIndex(image,p))"];
"1000569" [label="(Identifier,k)"];
"1000584" [label="(Literal,0)"];
"1000834" [label="(Identifier,hash_prefix)"];
"1000723" [label="(Literal,8)"];
"1000654" [label="(Call,k=0)"];
"1000373" [label="(Call,memset(hash_suffix,0,MaxHashTable*sizeof(*hash_suffix)))"];
"1000117" [label="(Block,)"];
"1000457" [label="(Call,(const Quantum *) NULL)"];
"1000554" [label="(Call,hash_suffix[k])"];
"1000583" [label="(Identifier,k)"];
"1000553" [label="(Call,hash_suffix[k] == (unsigned char) index)"];
"1000443" [label="(Call,p=GetVirtualPixels(image,0,offset,image->columns,1,exception))"];
"1000703" [label="(Literal,8)"];
"1000843" [label="(Call,(unsigned char *) RelinquishMagickMemory(packet))"];
"1000829" [label="(Call,hash_prefix=(short *) RelinquishMagickMemory(hash_prefix))"];
"1000704" [label="(ControlStructure,if (offset >= (ssize_t) image->rows))"];
"1000660" [label="(Call,k++)"];
"1000466" [label="(Call,waiting_code=(short) GetPixelIndex(image,p))"];
"1000559" [label="(Identifier,index)"];
"1000793" [label="(Call,(unsigned char) length)"];
"1000552" [label="(Identifier,waiting_code)"];
"1000598" [label="(Call,hash_prefix[k])"];
"1000630" [label="(Block,)"];
"1000742" [label="(Identifier,offset)"];
"1000741" [label="(Call,offset+=4)"];
"1000577" [label="(Block,)"];
"1000645" [label="(Call,hash_suffix[k])"];
"1000496" [label="(Identifier,x)"];
"1000522" [label="(Call,MaxGIFBits-8)"];
"1000715" [label="(Call,offset=4)"];
"1000511" [label="(Call,GetPixelChannels(image))"];
"1000530" [label="(Call,k-=MaxHashTable)"];
"1000601" [label="(Identifier,waiting_code)"];
"1000580" [label="(Identifier,displacement)"];
"1000498" [label="(Call,index=(Quantum) ((size_t) GetPixelIndex(image,p) & 0xff))"];
"1000819" [label="(Call,WriteBlob(image,length,packet))"];
"1000648" [label="(Call,(unsigned char) index)"];
"1000495" [label="(Call,x++)"];
"1000492" [label="(Call,image->columns)"];
"1000718" [label="(ControlStructure,break;)"];
"1000547" [label="(Call,(hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index))"];
"1000659" [label="(Identifier,MaxHashTable)"];
"1000479" [label="(Identifier,x)"];
"1000758" [label="(ControlStructure,break;)"];
"1000766" [label="(Identifier,waiting_code)"];
"1000604" [label="(Identifier,hash_suffix)"];
"1000509" [label="(Call,p+=GetPixelChannels(image))"];
"1000585" [label="(Call,k+=MaxHashTable)"];
"1000562" [label="(Identifier,waiting_code)"];
"1000849" [label="(MethodReturn,static MagickBooleanType)"];
"1000653" [label="(ControlStructure,for (k=0; k < MaxHashTable; k++))"];
"1000548" [label="(Call,hash_prefix[k] == waiting_code)"];
"1000587" [label="(Identifier,MaxHashTable)"];
"1000664" [label="(Identifier,hash_code)"];
"1000611" [label="(Identifier,waiting_code)"];
"1000796" [label="(Call,(void) WriteBlob(image,length,packet))"];
"1000701" [label="(Call,offset+=8)"];
"1000454" [label="(ControlStructure,if (p == (const Quantum *) NULL))"];
"1000506" [label="(Identifier,image)"];
"1000693" [label="(Identifier,offset)"];
"1000476" [label="(Identifier,image)"];
"1000490" [label="(Call,(ssize_t) image->columns)"];
"1000603" [label="(Call,hash_suffix[k])"];
"1000529" [label="(Identifier,MaxHashTable)"];
"1000446" [label="(Identifier,image)"];
"1000595" [label="(ControlStructure,if ((hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index)))"];
"1000841" [label="(Call,packet=(unsigned char *) RelinquishMagickMemory(packet))"];
"1000144" [label="(Call,packet[length++]=(unsigned char) (datum & 0xff))"];
"1000531" [label="(Identifier,k)"];
"1000681" [label="(Call,waiting_code=(short) index)"];
"1000526" [label="(ControlStructure,if (k >= MaxHashTable))"];
"1000738" [label="(ControlStructure,break;)"];
"1000534" [label="(Identifier,next_pixel)"];
"1000528" [label="(Identifier,k)"];
"1000508" [label="(Literal,0xff)"];
"1000817" [label="(Call,(void) WriteBlob(image,length,packet))"];
"1000440" [label="(Block,)"];
"1000527" [label="(Call,k >= MaxHashTable)"];
"1000467" [label="(Identifier,waiting_code)"];
"1000596" [label="(Call,(hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index))"];
"1000525" [label="(Identifier,waiting_code)"];
"1000628" [label="(Identifier,free_code)"];
"1000517" [label="(Call,((size_t) index << (MaxGIFBits-8))+waiting_code)"];
"1000803" [label="(Identifier,length)"];
"1000755" [label="(Call,offset=1)"];
"1000606" [label="(Call,(unsigned char) index)"];
"1000597" [label="(Call,hash_prefix[k] == waiting_code)"];
"1000573" [label="(Call,MaxHashTable-k)"];
"1000734" [label="(Identifier,pass)"];
"1000747" [label="(Call,(ssize_t) image->rows)"];
"1000689" [label="(Identifier,image_info)"];
"1000523" [label="(Identifier,MaxGIFBits)"];
"1000574" [label="(Identifier,MaxHashTable)"];
"1000448" [label="(Identifier,offset)"];
"1000788" [label="(Block,)"];
"1000643" [label="(Identifier,waiting_code)"];
"1000814" [label="(Call,(unsigned char) length)"];
"1000763" [label="(Literal,2)"];
"1000743" [label="(Literal,4)"];
"1000561" [label="(Call,waiting_code=hash_code[k])"];
"1000521" [label="(Identifier,index)"];
"1000707" [label="(Call,(ssize_t) image->rows)"];
"1000453" [label="(Identifier,exception)"];
"1000842" [label="(Identifier,packet)"];
"1000799" [label="(Identifier,image)"];
"1000505" [label="(Call,GetPixelIndex(image,p))"];
"1000444" [label="(Identifier,p)"];
"1000686" [label="(ControlStructure,if (image_info->interlace == NoInterlace))"];
"1000343" [label="(Call,memset(packet,0,256*sizeof(*packet)))"];
"1000761" [label="(Call,offset+=2)"];
"1000625" [label="(Identifier,waiting_code)"];
"1000830" [label="(Identifier,hash_prefix)"];
"1000822" [label="(Identifier,packet)"];
"1000836" [label="(Identifier,hash_code)"];
"1000568" [label="(Call,k != 0)"];
"1000702" [label="(Identifier,offset)"];
"1000765" [label="(Call,GIFOutputCode(waiting_code))"];
"1000418" [label="(Call,offset=0)"];
"1000714" [label="(Identifier,pass)"];
"1000518" [label="(Call,(size_t) index << (MaxGIFBits-8))"];
"1000116" -> "1000112"  [label="AST: "];
"1000116" -> "1000849"  [label="DDG: exception"];
"1000116" -> "1000445"  [label="DDG: exception"];
"1000445" -> "1000443"  [label="AST: "];
"1000445" -> "1000453"  [label="CFG: "];
"1000446" -> "1000445"  [label="AST: "];
"1000447" -> "1000445"  [label="AST: "];
"1000448" -> "1000445"  [label="AST: "];
"1000449" -> "1000445"  [label="AST: "];
"1000452" -> "1000445"  [label="AST: "];
"1000453" -> "1000445"  [label="AST: "];
"1000443" -> "1000445"  [label="CFG: "];
"1000445" -> "1000849"  [label="DDG: image"];
"1000445" -> "1000849"  [label="DDG: image->columns"];
"1000445" -> "1000849"  [label="DDG: exception"];
"1000445" -> "1000849"  [label="DDG: offset"];
"1000445" -> "1000443"  [label="DDG: 1"];
"1000445" -> "1000443"  [label="DDG: image"];
"1000445" -> "1000443"  [label="DDG: image->columns"];
"1000445" -> "1000443"  [label="DDG: exception"];
"1000445" -> "1000443"  [label="DDG: offset"];
"1000445" -> "1000443"  [label="DDG: 0"];
"1000222" -> "1000445"  [label="DDG: image"];
"1000475" -> "1000445"  [label="DDG: image"];
"1000511" -> "1000445"  [label="DDG: image"];
"1000114" -> "1000445"  [label="DDG: image"];
"1000692" -> "1000445"  [label="DDG: offset"];
"1000715" -> "1000445"  [label="DDG: offset"];
"1000761" -> "1000445"  [label="DDG: offset"];
"1000745" -> "1000445"  [label="DDG: offset"];
"1000705" -> "1000445"  [label="DDG: offset"];
"1000725" -> "1000445"  [label="DDG: offset"];
"1000755" -> "1000445"  [label="DDG: offset"];
"1000735" -> "1000445"  [label="DDG: offset"];
"1000418" -> "1000445"  [label="DDG: offset"];
"1000490" -> "1000445"  [label="DDG: image->columns"];
"1000445" -> "1000470"  [label="DDG: image"];
"1000445" -> "1000490"  [label="DDG: image->columns"];
"1000445" -> "1000505"  [label="DDG: image"];
"1000445" -> "1000692"  [label="DDG: offset"];
"1000445" -> "1000701"  [label="DDG: offset"];
"1000445" -> "1000721"  [label="DDG: offset"];
"1000445" -> "1000741"  [label="DDG: offset"];
"1000445" -> "1000761"  [label="DDG: offset"];
"1000445" -> "1000791"  [label="DDG: image"];
"1000445" -> "1000812"  [label="DDG: image"];
"1000443" -> "1000440"  [label="AST: "];
"1000444" -> "1000443"  [label="AST: "];
"1000456" -> "1000443"  [label="CFG: "];
"1000443" -> "1000849"  [label="DDG: GetVirtualPixels(image,0,offset,image->columns,1,exception)"];
"1000443" -> "1000455"  [label="DDG: p"];
"1000455" -> "1000454"  [label="AST: "];
"1000455" -> "1000457"  [label="CFG: "];
"1000456" -> "1000455"  [label="AST: "];
"1000457" -> "1000455"  [label="AST: "];
"1000460" -> "1000455"  [label="CFG: "];
"1000463" -> "1000455"  [label="CFG: "];
"1000455" -> "1000849"  [label="DDG: p == (const Quantum *) NULL"];
"1000455" -> "1000849"  [label="DDG: (const Quantum *) NULL"];
"1000455" -> "1000849"  [label="DDG: p"];
"1000457" -> "1000455"  [label="DDG: NULL"];
"1000455" -> "1000470"  [label="DDG: p"];
"1000455" -> "1000505"  [label="DDG: p"];
"1000470" -> "1000468"  [label="AST: "];
"1000470" -> "1000472"  [label="CFG: "];
"1000471" -> "1000470"  [label="AST: "];
"1000472" -> "1000470"  [label="AST: "];
"1000468" -> "1000470"  [label="CFG: "];
"1000470" -> "1000468"  [label="DDG: image"];
"1000470" -> "1000468"  [label="DDG: p"];
"1000114" -> "1000470"  [label="DDG: image"];
"1000470" -> "1000473"  [label="DDG: p"];
"1000470" -> "1000475"  [label="DDG: image"];
"1000468" -> "1000466"  [label="AST: "];
"1000469" -> "1000468"  [label="AST: "];
"1000466" -> "1000468"  [label="CFG: "];
"1000468" -> "1000849"  [label="DDG: GetPixelIndex(image,p)"];
"1000468" -> "1000466"  [label="DDG: GetPixelIndex(image,p)"];
"1000466" -> "1000465"  [label="AST: "];
"1000467" -> "1000466"  [label="AST: "];
"1000474" -> "1000466"  [label="CFG: "];
"1000466" -> "1000849"  [label="DDG: (short) GetPixelIndex(image,p)"];
"1000466" -> "1000515"  [label="DDG: waiting_code"];
"1000466" -> "1000517"  [label="DDG: waiting_code"];
"1000466" -> "1000548"  [label="DDG: waiting_code"];
"1000466" -> "1000624"  [label="DDG: waiting_code"];
"1000466" -> "1000765"  [label="DDG: waiting_code"];
"1000515" -> "1000513"  [label="AST: "];
"1000515" -> "1000517"  [label="CFG: "];
"1000516" -> "1000515"  [label="AST: "];
"1000517" -> "1000515"  [label="AST: "];
"1000513" -> "1000515"  [label="CFG: "];
"1000515" -> "1000849"  [label="DDG: ((size_t) index << (MaxGIFBits-8))+waiting_code"];
"1000515" -> "1000513"  [label="DDG: ((size_t) index << (MaxGIFBits-8))+waiting_code"];
"1000518" -> "1000515"  [label="DDG: (size_t) index"];
"1000518" -> "1000515"  [label="DDG: MaxGIFBits-8"];
"1000681" -> "1000515"  [label="DDG: waiting_code"];
"1000561" -> "1000515"  [label="DDG: waiting_code"];
"1000610" -> "1000515"  [label="DDG: waiting_code"];
"1000424" -> "1000515"  [label="DDG: waiting_code"];
"1000548" -> "1000515"  [label="DDG: waiting_code"];
"1000597" -> "1000515"  [label="DDG: waiting_code"];
"1000513" -> "1000497"  [label="AST: "];
"1000514" -> "1000513"  [label="AST: "];
"1000528" -> "1000513"  [label="CFG: "];
"1000513" -> "1000849"  [label="DDG: (ssize_t) (((size_t) index << (MaxGIFBits-8))+waiting_code)"];
"1000513" -> "1000527"  [label="DDG: k"];
"1000527" -> "1000526"  [label="AST: "];
"1000527" -> "1000529"  [label="CFG: "];
"1000528" -> "1000527"  [label="AST: "];
"1000529" -> "1000527"  [label="AST: "];
"1000531" -> "1000527"  [label="CFG: "];
"1000534" -> "1000527"  [label="CFG: "];
"1000527" -> "1000849"  [label="DDG: k"];
"1000527" -> "1000849"  [label="DDG: MaxHashTable"];
"1000527" -> "1000849"  [label="DDG: k >= MaxHashTable"];
"1000376" -> "1000527"  [label="DDG: MaxHashTable"];
"1000573" -> "1000527"  [label="DDG: MaxHashTable"];
"1000657" -> "1000527"  [label="DDG: MaxHashTable"];
"1000527" -> "1000530"  [label="DDG: MaxHashTable"];
"1000527" -> "1000530"  [label="DDG: k"];
"1000527" -> "1000568"  [label="DDG: k"];
"1000527" -> "1000573"  [label="DDG: MaxHashTable"];
"1000527" -> "1000585"  [label="DDG: MaxHashTable"];
"1000527" -> "1000657"  [label="DDG: MaxHashTable"];
"1000530" -> "1000526"  [label="AST: "];
"1000530" -> "1000532"  [label="CFG: "];
"1000531" -> "1000530"  [label="AST: "];
"1000532" -> "1000530"  [label="AST: "];
"1000534" -> "1000530"  [label="CFG: "];
"1000530" -> "1000849"  [label="DDG: k"];
"1000530" -> "1000849"  [label="DDG: MaxHashTable"];
"1000530" -> "1000568"  [label="DDG: k"];
"1000568" -> "1000567"  [label="AST: "];
"1000568" -> "1000570"  [label="CFG: "];
"1000569" -> "1000568"  [label="AST: "];
"1000570" -> "1000568"  [label="AST: "];
"1000572" -> "1000568"  [label="CFG: "];
"1000579" -> "1000568"  [label="CFG: "];
"1000568" -> "1000849"  [label="DDG: k != 0"];
"1000568" -> "1000573"  [label="DDG: k"];
"1000568" -> "1000578"  [label="DDG: k"];
"1000573" -> "1000571"  [label="AST: "];
"1000573" -> "1000575"  [label="CFG: "];
"1000574" -> "1000573"  [label="AST: "];
"1000575" -> "1000573"  [label="AST: "];
"1000571" -> "1000573"  [label="CFG: "];
"1000573" -> "1000849"  [label="DDG: MaxHashTable"];
"1000573" -> "1000571"  [label="DDG: MaxHashTable"];
"1000573" -> "1000571"  [label="DDG: k"];
"1000573" -> "1000578"  [label="DDG: k"];
"1000573" -> "1000585"  [label="DDG: MaxHashTable"];
"1000573" -> "1000657"  [label="DDG: MaxHashTable"];
"1000571" -> "1000567"  [label="AST: "];
"1000572" -> "1000571"  [label="AST: "];
"1000579" -> "1000571"  [label="CFG: "];
"1000571" -> "1000849"  [label="DDG: MaxHashTable-k"];
"1000571" -> "1000578"  [label="DDG: displacement"];
"1000578" -> "1000577"  [label="AST: "];
"1000578" -> "1000580"  [label="CFG: "];
"1000579" -> "1000578"  [label="AST: "];
"1000580" -> "1000578"  [label="AST: "];
"1000583" -> "1000578"  [label="CFG: "];
"1000578" -> "1000849"  [label="DDG: displacement"];
"1000536" -> "1000578"  [label="DDG: displacement"];
"1000582" -> "1000578"  [label="DDG: k"];
"1000585" -> "1000578"  [label="DDG: k"];
"1000578" -> "1000582"  [label="DDG: k"];
"1000582" -> "1000581"  [label="AST: "];
"1000582" -> "1000584"  [label="CFG: "];
"1000583" -> "1000582"  [label="AST: "];
"1000584" -> "1000582"  [label="AST: "];
"1000586" -> "1000582"  [label="CFG: "];
"1000591" -> "1000582"  [label="CFG: "];
"1000582" -> "1000849"  [label="DDG: k"];
"1000582" -> "1000849"  [label="DDG: k < 0"];
"1000582" -> "1000585"  [label="DDG: k"];
"1000585" -> "1000581"  [label="AST: "];
"1000585" -> "1000587"  [label="CFG: "];
"1000586" -> "1000585"  [label="AST: "];
"1000587" -> "1000585"  [label="AST: "];
"1000591" -> "1000585"  [label="CFG: "];
"1000585" -> "1000849"  [label="DDG: k"];
"1000585" -> "1000849"  [label="DDG: MaxHashTable"];
"1000657" -> "1000653"  [label="AST: "];
"1000657" -> "1000659"  [label="CFG: "];
"1000658" -> "1000657"  [label="AST: "];
"1000659" -> "1000657"  [label="AST: "];
"1000664" -> "1000657"  [label="CFG: "];
"1000668" -> "1000657"  [label="CFG: "];
"1000657" -> "1000849"  [label="DDG: k"];
"1000657" -> "1000849"  [label="DDG: MaxHashTable"];
"1000657" -> "1000849"  [label="DDG: k < MaxHashTable"];
"1000654" -> "1000657"  [label="DDG: k"];
"1000660" -> "1000657"  [label="DDG: k"];
"1000657" -> "1000660"  [label="DDG: k"];
"1000660" -> "1000653"  [label="AST: "];
"1000660" -> "1000661"  [label="CFG: "];
"1000661" -> "1000660"  [label="AST: "];
"1000658" -> "1000660"  [label="CFG: "];
"1000517" -> "1000525"  [label="CFG: "];
"1000518" -> "1000517"  [label="AST: "];
"1000525" -> "1000517"  [label="AST: "];
"1000517" -> "1000849"  [label="DDG: (size_t) index << (MaxGIFBits-8)"];
"1000518" -> "1000517"  [label="DDG: (size_t) index"];
"1000518" -> "1000517"  [label="DDG: MaxGIFBits-8"];
"1000681" -> "1000517"  [label="DDG: waiting_code"];
"1000561" -> "1000517"  [label="DDG: waiting_code"];
"1000610" -> "1000517"  [label="DDG: waiting_code"];
"1000424" -> "1000517"  [label="DDG: waiting_code"];
"1000548" -> "1000517"  [label="DDG: waiting_code"];
"1000597" -> "1000517"  [label="DDG: waiting_code"];
"1000548" -> "1000547"  [label="AST: "];
"1000548" -> "1000552"  [label="CFG: "];
"1000549" -> "1000548"  [label="AST: "];
"1000552" -> "1000548"  [label="AST: "];
"1000555" -> "1000548"  [label="CFG: "];
"1000547" -> "1000548"  [label="CFG: "];
"1000548" -> "1000849"  [label="DDG: hash_prefix[k]"];
"1000548" -> "1000547"  [label="DDG: hash_prefix[k]"];
"1000548" -> "1000547"  [label="DDG: waiting_code"];
"1000639" -> "1000548"  [label="DDG: hash_prefix[k]"];
"1000597" -> "1000548"  [label="DDG: hash_prefix[k]"];
"1000597" -> "1000548"  [label="DDG: waiting_code"];
"1000363" -> "1000548"  [label="DDG: hash_prefix"];
"1000681" -> "1000548"  [label="DDG: waiting_code"];
"1000561" -> "1000548"  [label="DDG: waiting_code"];
"1000610" -> "1000548"  [label="DDG: waiting_code"];
"1000424" -> "1000548"  [label="DDG: waiting_code"];
"1000548" -> "1000597"  [label="DDG: hash_prefix[k]"];
"1000548" -> "1000597"  [label="DDG: waiting_code"];
"1000548" -> "1000624"  [label="DDG: waiting_code"];
"1000548" -> "1000765"  [label="DDG: waiting_code"];
"1000548" -> "1000833"  [label="DDG: hash_prefix[k]"];
"1000547" -> "1000546"  [label="AST: "];
"1000547" -> "1000553"  [label="CFG: "];
"1000553" -> "1000547"  [label="AST: "];
"1000562" -> "1000547"  [label="CFG: "];
"1000569" -> "1000547"  [label="CFG: "];
"1000547" -> "1000849"  [label="DDG: hash_prefix[k] == waiting_code"];
"1000547" -> "1000849"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000547" -> "1000849"  [label="DDG: (hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index)"];
"1000596" -> "1000547"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000553" -> "1000547"  [label="DDG: hash_suffix[k]"];
"1000553" -> "1000547"  [label="DDG: (unsigned char) index"];
"1000547" -> "1000596"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000596" -> "1000595"  [label="AST: "];
"1000596" -> "1000597"  [label="CFG: "];
"1000596" -> "1000602"  [label="CFG: "];
"1000597" -> "1000596"  [label="AST: "];
"1000602" -> "1000596"  [label="AST: "];
"1000579" -> "1000596"  [label="CFG: "];
"1000611" -> "1000596"  [label="CFG: "];
"1000596" -> "1000849"  [label="DDG: hash_prefix[k] == waiting_code"];
"1000596" -> "1000849"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000596" -> "1000849"  [label="DDG: (hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index)"];
"1000597" -> "1000596"  [label="DDG: hash_prefix[k]"];
"1000597" -> "1000596"  [label="DDG: waiting_code"];
"1000602" -> "1000596"  [label="DDG: hash_suffix[k]"];
"1000602" -> "1000596"  [label="DDG: (unsigned char) index"];
"1000597" -> "1000601"  [label="CFG: "];
"1000598" -> "1000597"  [label="AST: "];
"1000601" -> "1000597"  [label="AST: "];
"1000604" -> "1000597"  [label="CFG: "];
"1000597" -> "1000849"  [label="DDG: hash_prefix[k]"];
"1000363" -> "1000597"  [label="DDG: hash_prefix"];
"1000597" -> "1000624"  [label="DDG: waiting_code"];
"1000597" -> "1000765"  [label="DDG: waiting_code"];
"1000597" -> "1000833"  [label="DDG: hash_prefix[k]"];
"1000624" -> "1000497"  [label="AST: "];
"1000624" -> "1000625"  [label="CFG: "];
"1000625" -> "1000624"  [label="AST: "];
"1000628" -> "1000624"  [label="CFG: "];
"1000610" -> "1000624"  [label="DDG: waiting_code"];
"1000681" -> "1000624"  [label="DDG: waiting_code"];
"1000561" -> "1000624"  [label="DDG: waiting_code"];
"1000424" -> "1000624"  [label="DDG: waiting_code"];
"1000624" -> "1000639"  [label="DDG: waiting_code"];
"1000639" -> "1000630"  [label="AST: "];
"1000639" -> "1000643"  [label="CFG: "];
"1000640" -> "1000639"  [label="AST: "];
"1000643" -> "1000639"  [label="AST: "];
"1000646" -> "1000639"  [label="CFG: "];
"1000639" -> "1000849"  [label="DDG: hash_prefix[k]"];
"1000639" -> "1000833"  [label="DDG: hash_prefix[k]"];
"1000833" -> "1000831"  [label="AST: "];
"1000833" -> "1000834"  [label="CFG: "];
"1000834" -> "1000833"  [label="AST: "];
"1000831" -> "1000833"  [label="CFG: "];
"1000833" -> "1000831"  [label="DDG: hash_prefix"];
"1000363" -> "1000833"  [label="DDG: hash_prefix"];
"1000831" -> "1000829"  [label="AST: "];
"1000832" -> "1000831"  [label="AST: "];
"1000829" -> "1000831"  [label="CFG: "];
"1000831" -> "1000849"  [label="DDG: RelinquishMagickMemory(hash_prefix)"];
"1000831" -> "1000829"  [label="DDG: RelinquishMagickMemory(hash_prefix)"];
"1000829" -> "1000117"  [label="AST: "];
"1000830" -> "1000829"  [label="AST: "];
"1000836" -> "1000829"  [label="CFG: "];
"1000829" -> "1000849"  [label="DDG: hash_prefix"];
"1000829" -> "1000849"  [label="DDG: (short *) RelinquishMagickMemory(hash_prefix)"];
"1000765" -> "1000117"  [label="AST: "];
"1000765" -> "1000766"  [label="CFG: "];
"1000766" -> "1000765"  [label="AST: "];
"1000768" -> "1000765"  [label="CFG: "];
"1000765" -> "1000849"  [label="DDG: waiting_code"];
"1000765" -> "1000849"  [label="DDG: GIFOutputCode(waiting_code)"];
"1000681" -> "1000765"  [label="DDG: waiting_code"];
"1000561" -> "1000765"  [label="DDG: waiting_code"];
"1000610" -> "1000765"  [label="DDG: waiting_code"];
"1000424" -> "1000765"  [label="DDG: waiting_code"];
"1000473" -> "1000465"  [label="AST: "];
"1000473" -> "1000475"  [label="CFG: "];
"1000474" -> "1000473"  [label="AST: "];
"1000475" -> "1000473"  [label="AST: "];
"1000479" -> "1000473"  [label="CFG: "];
"1000473" -> "1000849"  [label="DDG: p"];
"1000473" -> "1000849"  [label="DDG: GetPixelChannels(image)"];
"1000475" -> "1000473"  [label="DDG: image"];
"1000473" -> "1000505"  [label="DDG: p"];
"1000505" -> "1000503"  [label="AST: "];
"1000505" -> "1000507"  [label="CFG: "];
"1000506" -> "1000505"  [label="AST: "];
"1000507" -> "1000505"  [label="AST: "];
"1000503" -> "1000505"  [label="CFG: "];
"1000505" -> "1000503"  [label="DDG: image"];
"1000505" -> "1000503"  [label="DDG: p"];
"1000475" -> "1000505"  [label="DDG: image"];
"1000511" -> "1000505"  [label="DDG: image"];
"1000114" -> "1000505"  [label="DDG: image"];
"1000509" -> "1000505"  [label="DDG: p"];
"1000505" -> "1000509"  [label="DDG: p"];
"1000505" -> "1000511"  [label="DDG: image"];
"1000503" -> "1000502"  [label="AST: "];
"1000504" -> "1000503"  [label="AST: "];
"1000508" -> "1000503"  [label="CFG: "];
"1000503" -> "1000849"  [label="DDG: GetPixelIndex(image,p)"];
"1000503" -> "1000502"  [label="DDG: GetPixelIndex(image,p)"];
"1000502" -> "1000500"  [label="AST: "];
"1000502" -> "1000508"  [label="CFG: "];
"1000508" -> "1000502"  [label="AST: "];
"1000500" -> "1000502"  [label="CFG: "];
"1000502" -> "1000849"  [label="DDG: (size_t) GetPixelIndex(image,p)"];
"1000502" -> "1000500"  [label="DDG: (size_t) GetPixelIndex(image,p)"];
"1000502" -> "1000500"  [label="DDG: 0xff"];
"1000500" -> "1000498"  [label="AST: "];
"1000501" -> "1000500"  [label="AST: "];
"1000498" -> "1000500"  [label="CFG: "];
"1000500" -> "1000849"  [label="DDG: (size_t) GetPixelIndex(image,p) & 0xff"];
"1000500" -> "1000498"  [label="DDG: (size_t) GetPixelIndex(image,p) & 0xff"];
"1000498" -> "1000497"  [label="AST: "];
"1000499" -> "1000498"  [label="AST: "];
"1000510" -> "1000498"  [label="CFG: "];
"1000498" -> "1000849"  [label="DDG: (Quantum) ((size_t) GetPixelIndex(image,p) & 0xff)"];
"1000498" -> "1000519"  [label="DDG: index"];
"1000519" -> "1000518"  [label="AST: "];
"1000519" -> "1000521"  [label="CFG: "];
"1000520" -> "1000519"  [label="AST: "];
"1000521" -> "1000519"  [label="AST: "];
"1000523" -> "1000519"  [label="CFG: "];
"1000519" -> "1000849"  [label="DDG: index"];
"1000519" -> "1000518"  [label="DDG: index"];
"1000519" -> "1000557"  [label="DDG: index"];
"1000519" -> "1000606"  [label="DDG: index"];
"1000519" -> "1000648"  [label="DDG: index"];
"1000519" -> "1000683"  [label="DDG: index"];
"1000518" -> "1000522"  [label="CFG: "];
"1000522" -> "1000518"  [label="AST: "];
"1000525" -> "1000518"  [label="CFG: "];
"1000518" -> "1000849"  [label="DDG: MaxGIFBits-8"];
"1000518" -> "1000849"  [label="DDG: (size_t) index"];
"1000522" -> "1000518"  [label="DDG: MaxGIFBits"];
"1000522" -> "1000518"  [label="DDG: 8"];
"1000557" -> "1000553"  [label="AST: "];
"1000557" -> "1000559"  [label="CFG: "];
"1000558" -> "1000557"  [label="AST: "];
"1000559" -> "1000557"  [label="AST: "];
"1000553" -> "1000557"  [label="CFG: "];
"1000557" -> "1000849"  [label="DDG: index"];
"1000557" -> "1000553"  [label="DDG: index"];
"1000557" -> "1000606"  [label="DDG: index"];
"1000557" -> "1000648"  [label="DDG: index"];
"1000557" -> "1000683"  [label="DDG: index"];
"1000554" -> "1000553"  [label="AST: "];
"1000553" -> "1000849"  [label="DDG: hash_suffix[k]"];
"1000553" -> "1000849"  [label="DDG: (unsigned char) index"];
"1000373" -> "1000553"  [label="DDG: hash_suffix"];
"1000644" -> "1000553"  [label="DDG: hash_suffix[k]"];
"1000602" -> "1000553"  [label="DDG: hash_suffix[k]"];
"1000553" -> "1000602"  [label="DDG: hash_suffix[k]"];
"1000553" -> "1000827"  [label="DDG: hash_suffix[k]"];
"1000602" -> "1000606"  [label="CFG: "];
"1000603" -> "1000602"  [label="AST: "];
"1000606" -> "1000602"  [label="AST: "];
"1000602" -> "1000849"  [label="DDG: hash_suffix[k]"];
"1000602" -> "1000849"  [label="DDG: (unsigned char) index"];
"1000373" -> "1000602"  [label="DDG: hash_suffix"];
"1000644" -> "1000602"  [label="DDG: hash_suffix[k]"];
"1000606" -> "1000602"  [label="DDG: index"];
"1000602" -> "1000827"  [label="DDG: hash_suffix[k]"];
"1000827" -> "1000825"  [label="AST: "];
"1000827" -> "1000828"  [label="CFG: "];
"1000828" -> "1000827"  [label="AST: "];
"1000825" -> "1000827"  [label="CFG: "];
"1000827" -> "1000825"  [label="DDG: hash_suffix"];
"1000373" -> "1000827"  [label="DDG: hash_suffix"];
"1000644" -> "1000827"  [label="DDG: hash_suffix[k]"];
"1000825" -> "1000823"  [label="AST: "];
"1000826" -> "1000825"  [label="AST: "];
"1000823" -> "1000825"  [label="CFG: "];
"1000825" -> "1000849"  [label="DDG: RelinquishMagickMemory(hash_suffix)"];
"1000825" -> "1000823"  [label="DDG: RelinquishMagickMemory(hash_suffix)"];
"1000823" -> "1000117"  [label="AST: "];
"1000824" -> "1000823"  [label="AST: "];
"1000830" -> "1000823"  [label="CFG: "];
"1000823" -> "1000849"  [label="DDG: hash_suffix"];
"1000823" -> "1000849"  [label="DDG: (unsigned char *) RelinquishMagickMemory(hash_suffix)"];
"1000606" -> "1000608"  [label="CFG: "];
"1000607" -> "1000606"  [label="AST: "];
"1000608" -> "1000606"  [label="AST: "];
"1000606" -> "1000849"  [label="DDG: index"];
"1000606" -> "1000648"  [label="DDG: index"];
"1000606" -> "1000683"  [label="DDG: index"];
"1000648" -> "1000644"  [label="AST: "];
"1000648" -> "1000650"  [label="CFG: "];
"1000649" -> "1000648"  [label="AST: "];
"1000650" -> "1000648"  [label="AST: "];
"1000644" -> "1000648"  [label="CFG: "];
"1000648" -> "1000644"  [label="DDG: index"];
"1000648" -> "1000683"  [label="DDG: index"];
"1000644" -> "1000630"  [label="AST: "];
"1000645" -> "1000644"  [label="AST: "];
"1000682" -> "1000644"  [label="CFG: "];
"1000644" -> "1000849"  [label="DDG: (unsigned char) index"];
"1000644" -> "1000849"  [label="DDG: hash_suffix[k]"];
"1000683" -> "1000681"  [label="AST: "];
"1000683" -> "1000685"  [label="CFG: "];
"1000684" -> "1000683"  [label="AST: "];
"1000685" -> "1000683"  [label="AST: "];
"1000681" -> "1000683"  [label="CFG: "];
"1000683" -> "1000849"  [label="DDG: index"];
"1000683" -> "1000681"  [label="DDG: index"];
"1000681" -> "1000497"  [label="AST: "];
"1000682" -> "1000681"  [label="AST: "];
"1000496" -> "1000681"  [label="CFG: "];
"1000681" -> "1000849"  [label="DDG: (short) index"];
"1000509" -> "1000497"  [label="AST: "];
"1000509" -> "1000511"  [label="CFG: "];
"1000510" -> "1000509"  [label="AST: "];
"1000511" -> "1000509"  [label="AST: "];
"1000514" -> "1000509"  [label="CFG: "];
"1000509" -> "1000849"  [label="DDG: GetPixelChannels(image)"];
"1000509" -> "1000849"  [label="DDG: p"];
"1000511" -> "1000509"  [label="DDG: image"];
"1000511" -> "1000512"  [label="CFG: "];
"1000512" -> "1000511"  [label="AST: "];
"1000511" -> "1000849"  [label="DDG: image"];
"1000114" -> "1000511"  [label="DDG: image"];
"1000511" -> "1000791"  [label="DDG: image"];
"1000511" -> "1000812"  [label="DDG: image"];
"1000791" -> "1000789"  [label="AST: "];
"1000791" -> "1000793"  [label="CFG: "];
"1000792" -> "1000791"  [label="AST: "];
"1000793" -> "1000791"  [label="AST: "];
"1000789" -> "1000791"  [label="CFG: "];
"1000791" -> "1000849"  [label="DDG: (unsigned char) length"];
"1000791" -> "1000789"  [label="DDG: image"];
"1000791" -> "1000789"  [label="DDG: (unsigned char) length"];
"1000222" -> "1000791"  [label="DDG: image"];
"1000475" -> "1000791"  [label="DDG: image"];
"1000114" -> "1000791"  [label="DDG: image"];
"1000793" -> "1000791"  [label="DDG: length"];
"1000791" -> "1000798"  [label="DDG: image"];
"1000789" -> "1000788"  [label="AST: "];
"1000790" -> "1000789"  [label="AST: "];
"1000797" -> "1000789"  [label="CFG: "];
"1000789" -> "1000849"  [label="DDG: WriteBlobByte(image,(unsigned char) length)"];
"1000789" -> "1000849"  [label="DDG: (void) WriteBlobByte(image,(unsigned char) length)"];
"1000798" -> "1000796"  [label="AST: "];
"1000798" -> "1000801"  [label="CFG: "];
"1000799" -> "1000798"  [label="AST: "];
"1000800" -> "1000798"  [label="AST: "];
"1000801" -> "1000798"  [label="AST: "];
"1000796" -> "1000798"  [label="CFG: "];
"1000798" -> "1000849"  [label="DDG: image"];
"1000798" -> "1000796"  [label="DDG: image"];
"1000798" -> "1000796"  [label="DDG: length"];
"1000798" -> "1000796"  [label="DDG: packet"];
"1000114" -> "1000798"  [label="DDG: image"];
"1000793" -> "1000798"  [label="DDG: length"];
"1000343" -> "1000798"  [label="DDG: packet"];
"1000774" -> "1000798"  [label="DDG: packet[length++]"];
"1000798" -> "1000812"  [label="DDG: image"];
"1000798" -> "1000819"  [label="DDG: packet"];
"1000798" -> "1000845"  [label="DDG: packet"];
"1000796" -> "1000788"  [label="AST: "];
"1000797" -> "1000796"  [label="AST: "];
"1000803" -> "1000796"  [label="CFG: "];
"1000796" -> "1000849"  [label="DDG: (void) WriteBlob(image,length,packet)"];
"1000796" -> "1000849"  [label="DDG: WriteBlob(image,length,packet)"];
"1000812" -> "1000810"  [label="AST: "];
"1000812" -> "1000814"  [label="CFG: "];
"1000813" -> "1000812"  [label="AST: "];
"1000814" -> "1000812"  [label="AST: "];
"1000810" -> "1000812"  [label="CFG: "];
"1000812" -> "1000849"  [label="DDG: (unsigned char) length"];
"1000812" -> "1000810"  [label="DDG: image"];
"1000812" -> "1000810"  [label="DDG: (unsigned char) length"];
"1000222" -> "1000812"  [label="DDG: image"];
"1000475" -> "1000812"  [label="DDG: image"];
"1000114" -> "1000812"  [label="DDG: image"];
"1000814" -> "1000812"  [label="DDG: length"];
"1000812" -> "1000819"  [label="DDG: image"];
"1000810" -> "1000809"  [label="AST: "];
"1000811" -> "1000810"  [label="AST: "];
"1000818" -> "1000810"  [label="CFG: "];
"1000810" -> "1000849"  [label="DDG: (void) WriteBlobByte(image,(unsigned char) length)"];
"1000810" -> "1000849"  [label="DDG: WriteBlobByte(image,(unsigned char) length)"];
"1000819" -> "1000817"  [label="AST: "];
"1000819" -> "1000822"  [label="CFG: "];
"1000820" -> "1000819"  [label="AST: "];
"1000821" -> "1000819"  [label="AST: "];
"1000822" -> "1000819"  [label="AST: "];
"1000817" -> "1000819"  [label="CFG: "];
"1000819" -> "1000849"  [label="DDG: image"];
"1000819" -> "1000849"  [label="DDG: length"];
"1000819" -> "1000817"  [label="DDG: image"];
"1000819" -> "1000817"  [label="DDG: length"];
"1000819" -> "1000817"  [label="DDG: packet"];
"1000114" -> "1000819"  [label="DDG: image"];
"1000814" -> "1000819"  [label="DDG: length"];
"1000343" -> "1000819"  [label="DDG: packet"];
"1000144" -> "1000819"  [label="DDG: packet[length++]"];
"1000774" -> "1000819"  [label="DDG: packet[length++]"];
"1000819" -> "1000845"  [label="DDG: packet"];
"1000817" -> "1000809"  [label="AST: "];
"1000818" -> "1000817"  [label="AST: "];
"1000824" -> "1000817"  [label="CFG: "];
"1000817" -> "1000849"  [label="DDG: (void) WriteBlob(image,length,packet)"];
"1000817" -> "1000849"  [label="DDG: WriteBlob(image,length,packet)"];
"1000845" -> "1000843"  [label="AST: "];
"1000845" -> "1000846"  [label="CFG: "];
"1000846" -> "1000845"  [label="AST: "];
"1000843" -> "1000845"  [label="CFG: "];
"1000845" -> "1000843"  [label="DDG: packet"];
"1000343" -> "1000845"  [label="DDG: packet"];
"1000144" -> "1000845"  [label="DDG: packet[length++]"];
"1000774" -> "1000845"  [label="DDG: packet[length++]"];
"1000843" -> "1000841"  [label="AST: "];
"1000844" -> "1000843"  [label="AST: "];
"1000841" -> "1000843"  [label="CFG: "];
"1000843" -> "1000849"  [label="DDG: RelinquishMagickMemory(packet)"];
"1000843" -> "1000841"  [label="DDG: RelinquishMagickMemory(packet)"];
"1000841" -> "1000117"  [label="AST: "];
"1000842" -> "1000841"  [label="AST: "];
"1000848" -> "1000841"  [label="CFG: "];
"1000841" -> "1000849"  [label="DDG: (unsigned char *) RelinquishMagickMemory(packet)"];
"1000841" -> "1000849"  [label="DDG: packet"];
"1000475" -> "1000476"  [label="CFG: "];
"1000476" -> "1000475"  [label="AST: "];
"1000475" -> "1000849"  [label="DDG: image"];
"1000114" -> "1000475"  [label="DDG: image"];
"1000490" -> "1000488"  [label="AST: "];
"1000490" -> "1000492"  [label="CFG: "];
"1000491" -> "1000490"  [label="AST: "];
"1000492" -> "1000490"  [label="AST: "];
"1000488" -> "1000490"  [label="CFG: "];
"1000490" -> "1000849"  [label="DDG: image->columns"];
"1000490" -> "1000488"  [label="DDG: image->columns"];
"1000488" -> "1000477"  [label="AST: "];
"1000489" -> "1000488"  [label="AST: "];
"1000499" -> "1000488"  [label="CFG: "];
"1000689" -> "1000488"  [label="CFG: "];
"1000488" -> "1000849"  [label="DDG: x"];
"1000488" -> "1000849"  [label="DDG: x < (ssize_t) image->columns"];
"1000488" -> "1000849"  [label="DDG: (ssize_t) image->columns"];
"1000495" -> "1000488"  [label="DDG: x"];
"1000478" -> "1000488"  [label="DDG: x"];
"1000488" -> "1000495"  [label="DDG: x"];
"1000495" -> "1000477"  [label="AST: "];
"1000495" -> "1000496"  [label="CFG: "];
"1000496" -> "1000495"  [label="AST: "];
"1000489" -> "1000495"  [label="CFG: "];
"1000692" -> "1000686"  [label="AST: "];
"1000692" -> "1000693"  [label="CFG: "];
"1000693" -> "1000692"  [label="AST: "];
"1000439" -> "1000692"  [label="CFG: "];
"1000692" -> "1000849"  [label="DDG: offset"];
"1000701" -> "1000700"  [label="AST: "];
"1000701" -> "1000703"  [label="CFG: "];
"1000702" -> "1000701"  [label="AST: "];
"1000703" -> "1000701"  [label="AST: "];
"1000706" -> "1000701"  [label="CFG: "];
"1000701" -> "1000705"  [label="DDG: offset"];
"1000705" -> "1000704"  [label="AST: "];
"1000705" -> "1000707"  [label="CFG: "];
"1000706" -> "1000705"  [label="AST: "];
"1000707" -> "1000705"  [label="AST: "];
"1000714" -> "1000705"  [label="CFG: "];
"1000718" -> "1000705"  [label="CFG: "];
"1000705" -> "1000849"  [label="DDG: offset"];
"1000705" -> "1000849"  [label="DDG: offset >= (ssize_t) image->rows"];
"1000705" -> "1000849"  [label="DDG: (ssize_t) image->rows"];
"1000707" -> "1000705"  [label="DDG: image->rows"];
"1000721" -> "1000720"  [label="AST: "];
"1000721" -> "1000723"  [label="CFG: "];
"1000722" -> "1000721"  [label="AST: "];
"1000723" -> "1000721"  [label="AST: "];
"1000726" -> "1000721"  [label="CFG: "];
"1000721" -> "1000725"  [label="DDG: offset"];
"1000725" -> "1000724"  [label="AST: "];
"1000725" -> "1000727"  [label="CFG: "];
"1000726" -> "1000725"  [label="AST: "];
"1000727" -> "1000725"  [label="AST: "];
"1000734" -> "1000725"  [label="CFG: "];
"1000738" -> "1000725"  [label="CFG: "];
"1000725" -> "1000849"  [label="DDG: (ssize_t) image->rows"];
"1000725" -> "1000849"  [label="DDG: offset >= (ssize_t) image->rows"];
"1000725" -> "1000849"  [label="DDG: offset"];
"1000727" -> "1000725"  [label="DDG: image->rows"];
"1000741" -> "1000740"  [label="AST: "];
"1000741" -> "1000743"  [label="CFG: "];
"1000742" -> "1000741"  [label="AST: "];
"1000743" -> "1000741"  [label="AST: "];
"1000746" -> "1000741"  [label="CFG: "];
"1000741" -> "1000745"  [label="DDG: offset"];
"1000745" -> "1000744"  [label="AST: "];
"1000745" -> "1000747"  [label="CFG: "];
"1000746" -> "1000745"  [label="AST: "];
"1000747" -> "1000745"  [label="AST: "];
"1000754" -> "1000745"  [label="CFG: "];
"1000758" -> "1000745"  [label="CFG: "];
"1000745" -> "1000849"  [label="DDG: (ssize_t) image->rows"];
"1000745" -> "1000849"  [label="DDG: offset >= (ssize_t) image->rows"];
"1000745" -> "1000849"  [label="DDG: offset"];
"1000747" -> "1000745"  [label="DDG: image->rows"];
"1000761" -> "1000760"  [label="AST: "];
"1000761" -> "1000763"  [label="CFG: "];
"1000762" -> "1000761"  [label="AST: "];
"1000763" -> "1000761"  [label="AST: "];
"1000764" -> "1000761"  [label="CFG: "];
"1000761" -> "1000849"  [label="DDG: offset"];
}
