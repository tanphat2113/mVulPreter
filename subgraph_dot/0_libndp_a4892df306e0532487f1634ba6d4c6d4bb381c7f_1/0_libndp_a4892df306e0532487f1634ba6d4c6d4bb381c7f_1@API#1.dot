digraph "0_libndp_a4892df306e0532487f1634ba6d4c6d4bb381c7f_1@API" {
"1000120" [label="(Call,err = myrecvfrom6(ndp->sock, msg->buf, &len, 0,\n\t\t\t  &msg->addrto, &msg->ifindex, &msg->hoplimit))"];
"1000122" [label="(Call,myrecvfrom6(ndp->sock, msg->buf, &len, 0,\n\t\t\t  &msg->addrto, &msg->ifindex, &msg->hoplimit))"];
"1000259" [label="(Return,return err;)"];
"1000129" [label="(Call,&len)"];
"1000178" [label="(Call,err = 0)"];
"1000195" [label="(Call,err = 0)"];
"1000251" [label="(Call,err = ndp_call_handlers(ndp, msg))"];
"1000131" [label="(Literal,0)"];
"1000136" [label="(Call,&msg->ifindex)"];
"1000261" [label="(MethodReturn,static int)"];
"1000230" [label="(Call,err = 0)"];
"1000166" [label="(Call,msg->hoplimit != 255)"];
"1000126" [label="(Call,msg->buf)"];
"1000212" [label="(Call,err = 0)"];
"1000123" [label="(Call,ndp->sock)"];
"1000260" [label="(Identifier,err)"];
"1000121" [label="(Identifier,err)"];
"1000247" [label="(Call,err = 0)"];
"1000120" [label="(Call,err = myrecvfrom6(ndp->sock, msg->buf, &len, 0,\n\t\t\t  &msg->addrto, &msg->ifindex, &msg->hoplimit))"];
"1000140" [label="(Call,&msg->hoplimit)"];
"1000102" [label="(Block,)"];
"1000154" [label="(Call,str_in6_addr(&msg->addrto))"];
"1000122" [label="(Call,myrecvfrom6(ndp->sock, msg->buf, &len, 0,\n\t\t\t  &msg->addrto, &msg->ifindex, &msg->hoplimit))"];
"1000259" [label="(Return,return err;)"];
"1000151" [label="(Call,dbg(ndp, \"rcvd from: %s, ifindex: %u, hoplimit: %d\",\n\t\t str_in6_addr(&msg->addrto), msg->ifindex, msg->hoplimit))"];
"1000172" [label="(Call,warn(ndp, \"ignoring packet with bad hop limit (%d)\", msg->hoplimit))"];
"1000132" [label="(Call,&msg->addrto)"];
"1000145" [label="(Identifier,err)"];
"1000120" -> "1000102"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000122" -> "1000120"  [label="AST: "];
"1000145" -> "1000120"  [label="CFG: "];
"1000120" -> "1000261"  [label="DDG: err"];
"1000120" -> "1000261"  [label="DDG: myrecvfrom6(ndp->sock, msg->buf, &len, 0,\n\t\t\t  &msg->addrto, &msg->ifindex, &msg->hoplimit)"];
"1000122" -> "1000120"  [label="DDG: msg->buf"];
"1000122" -> "1000120"  [label="DDG: &msg->ifindex"];
"1000122" -> "1000120"  [label="DDG: &msg->addrto"];
"1000122" -> "1000120"  [label="DDG: &msg->hoplimit"];
"1000122" -> "1000120"  [label="DDG: ndp->sock"];
"1000122" -> "1000120"  [label="DDG: 0"];
"1000122" -> "1000120"  [label="DDG: &len"];
"1000120" -> "1000259"  [label="DDG: err"];
"1000122" -> "1000140"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000126" -> "1000122"  [label="AST: "];
"1000129" -> "1000122"  [label="AST: "];
"1000131" -> "1000122"  [label="AST: "];
"1000132" -> "1000122"  [label="AST: "];
"1000136" -> "1000122"  [label="AST: "];
"1000140" -> "1000122"  [label="AST: "];
"1000122" -> "1000261"  [label="DDG: msg->buf"];
"1000122" -> "1000261"  [label="DDG: ndp->sock"];
"1000122" -> "1000261"  [label="DDG: &msg->addrto"];
"1000122" -> "1000261"  [label="DDG: &msg->hoplimit"];
"1000122" -> "1000261"  [label="DDG: &len"];
"1000122" -> "1000261"  [label="DDG: &msg->ifindex"];
"1000122" -> "1000154"  [label="DDG: &msg->addrto"];
"1000122" -> "1000151"  [label="DDG: &msg->ifindex"];
"1000122" -> "1000151"  [label="DDG: &msg->hoplimit"];
"1000122" -> "1000166"  [label="DDG: &msg->hoplimit"];
"1000122" -> "1000172"  [label="DDG: &msg->hoplimit"];
"1000259" -> "1000102"  [label="AST: "];
"1000259" -> "1000260"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000259"  [label="CFG: "];
"1000259" -> "1000261"  [label="DDG: <RET>"];
"1000260" -> "1000259"  [label="DDG: err"];
"1000247" -> "1000259"  [label="DDG: err"];
"1000178" -> "1000259"  [label="DDG: err"];
"1000251" -> "1000259"  [label="DDG: err"];
"1000230" -> "1000259"  [label="DDG: err"];
"1000212" -> "1000259"  [label="DDG: err"];
"1000195" -> "1000259"  [label="DDG: err"];
}
