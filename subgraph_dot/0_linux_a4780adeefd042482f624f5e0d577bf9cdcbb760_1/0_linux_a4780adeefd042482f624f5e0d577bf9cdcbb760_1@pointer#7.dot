digraph "0_linux_a4780adeefd042482f624f5e0d577bf9cdcbb760_1@pointer" {
"1000126" [label="(Call,bad_syscall(no, regs))"];
"1000119" [label="(Call,no >> 16)"];
"1000109" [label="(MethodParameterIn,int no)"];
"1000110" [label="(MethodParameterIn,struct pt_regs *regs)"];
"1000125" [label="(Return,return bad_syscall(no, regs);)"];
"1000117" [label="(ControlStructure,if ((no >> 16) != (__ARM_NR_BASE>> 16)))"];
"1000121" [label="(Literal,16)"];
"1000443" [label="(Call,instruction_pointer(regs))"];
"1000125" [label="(Return,return bad_syscall(no, regs);)"];
"1000446" [label="(Call,thumb_mode(regs))"];
"1000130" [label="(Call,no & 0xffff)"];
"1000413" [label="(Call,__show_regs(regs))"];
"1000155" [label="(Call,arm_notify_die(\"branch through zero\", regs, &info, 0, 0))"];
"1000127" [label="(Identifier,no)"];
"1000450" [label="(Call,arm_notify_die(\"Oops - bad syscall(2)\", regs, &info, no, 0))"];
"1000406" [label="(Call,dump_instr(\"\", regs))"];
"1000126" [label="(Call,bad_syscall(no, regs))"];
"1000385" [label="(Call,no & 0xffff)"];
"1000128" [label="(Identifier,regs)"];
"1000419" [label="(Call,processor_mode(regs))"];
"1000118" [label="(Call,(no >> 16) != (__ARM_NR_BASE>> 16))"];
"1000119" [label="(Call,no >> 16)"];
"1000459" [label="(MethodReturn,asmlinkage int)"];
"1000120" [label="(Identifier,no)"];
"1000398" [label="(Call,printk(\"[%d] %s: arm syscall %d\n\",\n\t\t       task_pid_nr(current), current->comm, no))"];
"1000109" [label="(MethodParameterIn,int no)"];
"1000410" [label="(Call,user_mode(regs))"];
"1000123" [label="(Identifier,__ARM_NR_BASE)"];
"1000110" [label="(MethodParameterIn,struct pt_regs *regs)"];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000128" -> "1000126"  [label="AST: "];
"1000125" -> "1000126"  [label="CFG: "];
"1000126" -> "1000459"  [label="DDG: bad_syscall(no, regs)"];
"1000126" -> "1000459"  [label="DDG: no"];
"1000126" -> "1000459"  [label="DDG: regs"];
"1000126" -> "1000125"  [label="DDG: bad_syscall(no, regs)"];
"1000119" -> "1000126"  [label="DDG: no"];
"1000109" -> "1000126"  [label="DDG: no"];
"1000110" -> "1000126"  [label="DDG: regs"];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000123" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="DDG: no"];
"1000119" -> "1000118"  [label="DDG: 16"];
"1000109" -> "1000119"  [label="DDG: no"];
"1000119" -> "1000130"  [label="DDG: no"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000459"  [label="DDG: no"];
"1000109" -> "1000130"  [label="DDG: no"];
"1000109" -> "1000385"  [label="DDG: no"];
"1000109" -> "1000398"  [label="DDG: no"];
"1000109" -> "1000450"  [label="DDG: no"];
"1000110" -> "1000108"  [label="AST: "];
"1000110" -> "1000459"  [label="DDG: regs"];
"1000110" -> "1000155"  [label="DDG: regs"];
"1000110" -> "1000406"  [label="DDG: regs"];
"1000110" -> "1000410"  [label="DDG: regs"];
"1000110" -> "1000413"  [label="DDG: regs"];
"1000110" -> "1000419"  [label="DDG: regs"];
"1000110" -> "1000443"  [label="DDG: regs"];
"1000110" -> "1000446"  [label="DDG: regs"];
"1000110" -> "1000450"  [label="DDG: regs"];
"1000125" -> "1000117"  [label="AST: "];
"1000459" -> "1000125"  [label="CFG: "];
"1000125" -> "1000459"  [label="DDG: <RET>"];
}
