digraph "0_linux_2d45a02d0166caf2627fe91897c6ffc3b19514c4_2@pointer" {
"1000243" [label="(Call,event->asoc == assoc)"];
"1000117" [label="(MethodParameterIn,struct sctp_association *assoc)"];
"1000315" [label="(Call,event->asoc == assoc)"];
"1000356" [label="(Call,sctp_assoc_migrate(assoc, newsk))"];
"1000361" [label="(Call,sctp_state(assoc, CLOSED))"];
"1000360" [label="(Call,sctp_state(assoc, CLOSED) && sctp_style(newsk, TCP))"];
"1000364" [label="(Call,sctp_style(newsk, TCP))"];
"1000377" [label="(Call,release_sock(newsk))"];
"1000361" [label="(Call,sctp_state(assoc, CLOSED))"];
"1000316" [label="(Call,event->asoc)"];
"1000250" [label="(Identifier,skb)"];
"1000365" [label="(Identifier,newsk)"];
"1000362" [label="(Identifier,assoc)"];
"1000353" [label="(Call,lock_sock_nested(newsk, SINGLE_DEPTH_NESTING))"];
"1000364" [label="(Call,sctp_style(newsk, TCP))"];
"1000243" [label="(Call,event->asoc == assoc)"];
"1000119" [label="(Block,)"];
"1000374" [label="(Identifier,newsk)"];
"1000356" [label="(Call,sctp_assoc_migrate(assoc, newsk))"];
"1000242" [label="(ControlStructure,if (event->asoc == assoc))"];
"1000358" [label="(Identifier,newsk)"];
"1000336" [label="(Identifier,assoc)"];
"1000360" [label="(Call,sctp_state(assoc, CLOSED) && sctp_style(newsk, TCP))"];
"1000377" [label="(Call,release_sock(newsk))"];
"1000363" [label="(Identifier,CLOSED)"];
"1000359" [label="(ControlStructure,if (sctp_state(assoc, CLOSED) && sctp_style(newsk, TCP)))"];
"1000379" [label="(MethodReturn,static void)"];
"1000378" [label="(Identifier,newsk)"];
"1000247" [label="(Identifier,assoc)"];
"1000267" [label="(Identifier,newsp)"];
"1000116" [label="(MethodParameterIn,struct sock *newsk)"];
"1000319" [label="(Identifier,assoc)"];
"1000357" [label="(Identifier,assoc)"];
"1000322" [label="(Identifier,skb)"];
"1000315" [label="(Call,event->asoc == assoc)"];
"1000314" [label="(ControlStructure,if (event->asoc == assoc))"];
"1000366" [label="(Identifier,TCP)"];
"1000369" [label="(Identifier,newsk)"];
"1000244" [label="(Call,event->asoc)"];
"1000117" [label="(MethodParameterIn,struct sctp_association *assoc)"];
"1000243" -> "1000242"  [label="AST: "];
"1000243" -> "1000247"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000247" -> "1000243"  [label="AST: "];
"1000250" -> "1000243"  [label="CFG: "];
"1000267" -> "1000243"  [label="CFG: "];
"1000243" -> "1000379"  [label="DDG: event->asoc"];
"1000243" -> "1000379"  [label="DDG: event->asoc == assoc"];
"1000117" -> "1000243"  [label="DDG: assoc"];
"1000243" -> "1000315"  [label="DDG: event->asoc"];
"1000243" -> "1000315"  [label="DDG: assoc"];
"1000243" -> "1000356"  [label="DDG: assoc"];
"1000117" -> "1000114"  [label="AST: "];
"1000117" -> "1000379"  [label="DDG: assoc"];
"1000117" -> "1000315"  [label="DDG: assoc"];
"1000117" -> "1000356"  [label="DDG: assoc"];
"1000117" -> "1000361"  [label="DDG: assoc"];
"1000315" -> "1000314"  [label="AST: "];
"1000315" -> "1000319"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000319" -> "1000315"  [label="AST: "];
"1000322" -> "1000315"  [label="CFG: "];
"1000336" -> "1000315"  [label="CFG: "];
"1000315" -> "1000379"  [label="DDG: event->asoc == assoc"];
"1000315" -> "1000379"  [label="DDG: event->asoc"];
"1000315" -> "1000356"  [label="DDG: assoc"];
"1000356" -> "1000119"  [label="AST: "];
"1000356" -> "1000358"  [label="CFG: "];
"1000357" -> "1000356"  [label="AST: "];
"1000358" -> "1000356"  [label="AST: "];
"1000362" -> "1000356"  [label="CFG: "];
"1000356" -> "1000379"  [label="DDG: sctp_assoc_migrate(assoc, newsk)"];
"1000353" -> "1000356"  [label="DDG: newsk"];
"1000116" -> "1000356"  [label="DDG: newsk"];
"1000356" -> "1000361"  [label="DDG: assoc"];
"1000356" -> "1000364"  [label="DDG: newsk"];
"1000356" -> "1000377"  [label="DDG: newsk"];
"1000361" -> "1000360"  [label="AST: "];
"1000361" -> "1000363"  [label="CFG: "];
"1000362" -> "1000361"  [label="AST: "];
"1000363" -> "1000361"  [label="AST: "];
"1000365" -> "1000361"  [label="CFG: "];
"1000360" -> "1000361"  [label="CFG: "];
"1000361" -> "1000379"  [label="DDG: assoc"];
"1000361" -> "1000379"  [label="DDG: CLOSED"];
"1000361" -> "1000360"  [label="DDG: assoc"];
"1000361" -> "1000360"  [label="DDG: CLOSED"];
"1000360" -> "1000359"  [label="AST: "];
"1000360" -> "1000364"  [label="CFG: "];
"1000364" -> "1000360"  [label="AST: "];
"1000369" -> "1000360"  [label="CFG: "];
"1000374" -> "1000360"  [label="CFG: "];
"1000360" -> "1000379"  [label="DDG: sctp_state(assoc, CLOSED)"];
"1000360" -> "1000379"  [label="DDG: sctp_style(newsk, TCP)"];
"1000360" -> "1000379"  [label="DDG: sctp_state(assoc, CLOSED) && sctp_style(newsk, TCP)"];
"1000364" -> "1000360"  [label="DDG: newsk"];
"1000364" -> "1000360"  [label="DDG: TCP"];
"1000364" -> "1000366"  [label="CFG: "];
"1000365" -> "1000364"  [label="AST: "];
"1000366" -> "1000364"  [label="AST: "];
"1000364" -> "1000379"  [label="DDG: TCP"];
"1000116" -> "1000364"  [label="DDG: newsk"];
"1000364" -> "1000377"  [label="DDG: newsk"];
"1000377" -> "1000119"  [label="AST: "];
"1000377" -> "1000378"  [label="CFG: "];
"1000378" -> "1000377"  [label="AST: "];
"1000379" -> "1000377"  [label="CFG: "];
"1000377" -> "1000379"  [label="DDG: release_sock(newsk)"];
"1000377" -> "1000379"  [label="DDG: newsk"];
"1000116" -> "1000377"  [label="DDG: newsk"];
}
