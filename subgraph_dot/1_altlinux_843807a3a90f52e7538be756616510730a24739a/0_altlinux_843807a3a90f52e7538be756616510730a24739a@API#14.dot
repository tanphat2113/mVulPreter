digraph "0_altlinux_843807a3a90f52e7538be756616510730a24739a@API" {
"1000269" [label="(Call,memchr(buf, '\n', sizeof(buf)))"];
"1000267" [label="(Call,tmp = memchr(buf, '\n', sizeof(buf)))"];
"1000275" [label="(Call,tmp != NULL)"];
"1000243" [label="(Call,fgets(buf, sizeof(buf), fp) != NULL)"];
"1000259" [label="(Call,tmp != NULL)"];
"1000285" [label="(Call,fnmatch(buf, other_user, 0))"];
"1000284" [label="(Call,fnmatch(buf, other_user, 0) == 0)"];
"1000294" [label="(Call,pam_syslog(pamh, LOG_DEBUG,\n\t\t\t\t\t\t   \"%s %s allowed by %s\",\n\t\t\t\t\t\t   other_user, sense, path))"];
"1000308" [label="(Call,pam_syslog(pamh, LOG_DEBUG, \"%s not listed in %s\",\n\t\t\t\t   other_user, path))"];
"1000268" [label="(Identifier,tmp)"];
"1000270" [label="(Identifier,buf)"];
"1000249" [label="(Identifier,NULL)"];
"1000309" [label="(Identifier,pamh)"];
"1000283" [label="(ControlStructure,if (fnmatch(buf, other_user, 0) == 0))"];
"1000146" [label="(Call,snprintf(path, sizeof(path), \"%s/.xauth/%s\", pwd->pw_dir, sense))"];
"1000242" [label="(ControlStructure,while (fgets(buf, sizeof(buf), fp) != NULL))"];
"1000300" [label="(Identifier,path)"];
"1000302" [label="(Identifier,fp)"];
"1000311" [label="(Literal,\"%s not listed in %s\")"];
"1000286" [label="(Identifier,buf)"];
"1000277" [label="(Identifier,NULL)"];
"1000285" [label="(Call,fnmatch(buf, other_user, 0))"];
"1000265" [label="(Identifier,tmp)"];
"1000287" [label="(Identifier,other_user)"];
"1000258" [label="(ControlStructure,if (tmp != NULL))"];
"1000315" [label="(Identifier,fp)"];
"1000244" [label="(Call,fgets(buf, sizeof(buf), fp))"];
"1000284" [label="(Call,fnmatch(buf, other_user, 0) == 0)"];
"1000296" [label="(Identifier,LOG_DEBUG)"];
"1000295" [label="(Identifier,pamh)"];
"1000306" [label="(Identifier,debug)"];
"1000245" [label="(Identifier,buf)"];
"1000271" [label="(Literal,'\n')"];
"1000269" [label="(Call,memchr(buf, '\n', sizeof(buf)))"];
"1000250" [label="(Block,)"];
"1000204" [label="(Call,open(path, O_RDONLY | O_NOCTTY))"];
"1000275" [label="(Call,tmp != NULL)"];
"1000288" [label="(Literal,0)"];
"1000261" [label="(Identifier,NULL)"];
"1000299" [label="(Identifier,sense)"];
"1000243" [label="(Call,fgets(buf, sizeof(buf), fp) != NULL)"];
"1000297" [label="(Literal,\"%s %s allowed by %s\")"];
"1000294" [label="(Call,pam_syslog(pamh, LOG_DEBUG,\n\t\t\t\t\t\t   \"%s %s allowed by %s\",\n\t\t\t\t\t\t   other_user, sense, path))"];
"1000293" [label="(Block,)"];
"1000181" [label="(Call,stat(path, &st))"];
"1000292" [label="(Identifier,debug)"];
"1000312" [label="(Identifier,other_user)"];
"1000281" [label="(Identifier,tmp)"];
"1000252" [label="(Identifier,tmp)"];
"1000289" [label="(Literal,0)"];
"1000276" [label="(Identifier,tmp)"];
"1000259" [label="(Call,tmp != NULL)"];
"1000109" [label="(MethodParameterIn,const char *other_user)"];
"1000308" [label="(Call,pam_syslog(pamh, LOG_DEBUG, \"%s not listed in %s\",\n\t\t\t\t   other_user, path))"];
"1000363" [label="(MethodReturn,RET)"];
"1000307" [label="(Block,)"];
"1000106" [label="(MethodParameterIn,pam_handle_t *pamh)"];
"1000267" [label="(Call,tmp = memchr(buf, '\n', sizeof(buf)))"];
"1000274" [label="(ControlStructure,if (tmp != NULL))"];
"1000298" [label="(Identifier,other_user)"];
"1000251" [label="(Call,tmp = memchr(buf, '\r', sizeof(buf)))"];
"1000272" [label="(Call,sizeof(buf))"];
"1000260" [label="(Identifier,tmp)"];
"1000107" [label="(MethodParameterIn,const char *sense)"];
"1000129" [label="(Call,pam_modutil_getpwnam(pamh, this_user))"];
"1000133" [label="(Call,pwd == NULL)"];
"1000313" [label="(Identifier,path)"];
"1000310" [label="(Identifier,LOG_DEBUG)"];
"1000269" -> "1000267"  [label="AST: "];
"1000269" -> "1000272"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000271" -> "1000269"  [label="AST: "];
"1000272" -> "1000269"  [label="AST: "];
"1000267" -> "1000269"  [label="CFG: "];
"1000269" -> "1000267"  [label="DDG: "];
"1000269" -> "1000267"  [label="DDG: "];
"1000269" -> "1000285"  [label="DDG: "];
"1000267" -> "1000250"  [label="AST: "];
"1000268" -> "1000267"  [label="AST: "];
"1000276" -> "1000267"  [label="CFG: "];
"1000267" -> "1000363"  [label="DDG: "];
"1000267" -> "1000275"  [label="DDG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000275" -> "1000277"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000277" -> "1000275"  [label="AST: "];
"1000281" -> "1000275"  [label="CFG: "];
"1000286" -> "1000275"  [label="CFG: "];
"1000275" -> "1000363"  [label="DDG: "];
"1000275" -> "1000363"  [label="DDG: "];
"1000275" -> "1000363"  [label="DDG: "];
"1000275" -> "1000243"  [label="DDG: "];
"1000259" -> "1000275"  [label="DDG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000243" -> "1000249"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000249" -> "1000243"  [label="AST: "];
"1000252" -> "1000243"  [label="CFG: "];
"1000306" -> "1000243"  [label="CFG: "];
"1000243" -> "1000363"  [label="DDG: "];
"1000243" -> "1000363"  [label="DDG: "];
"1000243" -> "1000363"  [label="DDG: "];
"1000244" -> "1000243"  [label="DDG: "];
"1000244" -> "1000243"  [label="DDG: "];
"1000133" -> "1000243"  [label="DDG: "];
"1000243" -> "1000259"  [label="DDG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000259" -> "1000261"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000259"  [label="AST: "];
"1000265" -> "1000259"  [label="CFG: "];
"1000268" -> "1000259"  [label="CFG: "];
"1000251" -> "1000259"  [label="DDG: "];
"1000285" -> "1000284"  [label="AST: "];
"1000285" -> "1000288"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000285"  [label="AST: "];
"1000288" -> "1000285"  [label="AST: "];
"1000289" -> "1000285"  [label="CFG: "];
"1000285" -> "1000363"  [label="DDG: "];
"1000285" -> "1000363"  [label="DDG: "];
"1000285" -> "1000284"  [label="DDG: "];
"1000285" -> "1000284"  [label="DDG: "];
"1000285" -> "1000284"  [label="DDG: "];
"1000109" -> "1000285"  [label="DDG: "];
"1000285" -> "1000294"  [label="DDG: "];
"1000285" -> "1000308"  [label="DDG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000284" -> "1000289"  [label="CFG: "];
"1000289" -> "1000284"  [label="AST: "];
"1000245" -> "1000284"  [label="CFG: "];
"1000292" -> "1000284"  [label="CFG: "];
"1000284" -> "1000363"  [label="DDG: "];
"1000284" -> "1000363"  [label="DDG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000294" -> "1000300"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000296" -> "1000294"  [label="AST: "];
"1000297" -> "1000294"  [label="AST: "];
"1000298" -> "1000294"  [label="AST: "];
"1000299" -> "1000294"  [label="AST: "];
"1000300" -> "1000294"  [label="AST: "];
"1000302" -> "1000294"  [label="CFG: "];
"1000294" -> "1000363"  [label="DDG: "];
"1000294" -> "1000363"  [label="DDG: "];
"1000294" -> "1000363"  [label="DDG: "];
"1000294" -> "1000363"  [label="DDG: "];
"1000294" -> "1000363"  [label="DDG: "];
"1000294" -> "1000363"  [label="DDG: "];
"1000129" -> "1000294"  [label="DDG: "];
"1000106" -> "1000294"  [label="DDG: "];
"1000109" -> "1000294"  [label="DDG: "];
"1000146" -> "1000294"  [label="DDG: "];
"1000107" -> "1000294"  [label="DDG: "];
"1000181" -> "1000294"  [label="DDG: "];
"1000204" -> "1000294"  [label="DDG: "];
"1000308" -> "1000307"  [label="AST: "];
"1000308" -> "1000313"  [label="CFG: "];
"1000309" -> "1000308"  [label="AST: "];
"1000310" -> "1000308"  [label="AST: "];
"1000311" -> "1000308"  [label="AST: "];
"1000312" -> "1000308"  [label="AST: "];
"1000313" -> "1000308"  [label="AST: "];
"1000315" -> "1000308"  [label="CFG: "];
"1000308" -> "1000363"  [label="DDG: "];
"1000308" -> "1000363"  [label="DDG: "];
"1000308" -> "1000363"  [label="DDG: "];
"1000308" -> "1000363"  [label="DDG: "];
"1000308" -> "1000363"  [label="DDG: "];
"1000129" -> "1000308"  [label="DDG: "];
"1000106" -> "1000308"  [label="DDG: "];
"1000109" -> "1000308"  [label="DDG: "];
"1000181" -> "1000308"  [label="DDG: "];
"1000204" -> "1000308"  [label="DDG: "];
}
