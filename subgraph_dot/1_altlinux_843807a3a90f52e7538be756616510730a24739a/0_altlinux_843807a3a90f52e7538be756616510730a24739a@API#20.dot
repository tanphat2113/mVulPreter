digraph "0_altlinux_843807a3a90f52e7538be756616510730a24739a@API" {
"1000243" [label="(Call,fgets(buf, sizeof(buf), fp) != NULL)"];
"1000244" [label="(Call,fgets(buf, sizeof(buf), fp))"];
"1000115" [label="(Call,*fp = NULL)"];
"1000133" [label="(Call,pwd == NULL)"];
"1000127" [label="(Call,pwd = pam_modutil_getpwnam(pamh, this_user))"];
"1000129" [label="(Call,pam_modutil_getpwnam(pamh, this_user))"];
"1000106" [label="(MethodParameterIn,pam_handle_t *pamh)"];
"1000108" [label="(MethodParameterIn,const char *this_user)"];
"1000275" [label="(Call,tmp != NULL)"];
"1000267" [label="(Call,tmp = memchr(buf, '\n', sizeof(buf)))"];
"1000269" [label="(Call,memchr(buf, '\n', sizeof(buf)))"];
"1000259" [label="(Call,tmp != NULL)"];
"1000251" [label="(Call,tmp = memchr(buf, '\r', sizeof(buf)))"];
"1000253" [label="(Call,memchr(buf, '\r', sizeof(buf)))"];
"1000243" [label="(Call,fgets(buf, sizeof(buf), fp) != NULL)"];
"1000268" [label="(Identifier,tmp)"];
"1000270" [label="(Identifier,buf)"];
"1000249" [label="(Identifier,NULL)"];
"1000130" [label="(Identifier,pamh)"];
"1000256" [label="(Call,sizeof(buf))"];
"1000242" [label="(ControlStructure,while (fgets(buf, sizeof(buf), fp) != NULL))"];
"1000145" [label="(Identifier,i)"];
"1000131" [label="(Identifier,this_user)"];
"1000286" [label="(Identifier,buf)"];
"1000277" [label="(Identifier,NULL)"];
"1000115" [label="(Call,*fp = NULL)"];
"1000335" [label="(Call,pam_syslog(pamh, LOG_DEBUG,\n\t\t\t\t\t\t   \"%s does not exist, ignoring\",\n\t\t\t\t\t\t   path))"];
"1000285" [label="(Call,fnmatch(buf, other_user, 0))"];
"1000265" [label="(Identifier,tmp)"];
"1000137" [label="(Call,pam_syslog(pamh, LOG_ERR,\n\t\t\t   \"error determining home directory for '%s'\",\n\t\t\t   this_user))"];
"1000258" [label="(ControlStructure,if (tmp != NULL))"];
"1000356" [label="(Call,pam_syslog(pamh, LOG_DEBUG,\n\t\t\t\t\t   \"error opening %s: %m\", path))"];
"1000244" [label="(Call,fgets(buf, sizeof(buf), fp))"];
"1000306" [label="(Identifier,debug)"];
"1000248" [label="(Identifier,fp)"];
"1000245" [label="(Identifier,buf)"];
"1000250" [label="(Block,)"];
"1000269" [label="(Call,memchr(buf, '\n', sizeof(buf)))"];
"1000271" [label="(Literal,'\n')"];
"1000275" [label="(Call,tmp != NULL)"];
"1000261" [label="(Identifier,NULL)"];
"1000116" [label="(Identifier,fp)"];
"1000243" [label="(Call,fgets(buf, sizeof(buf), fp) != NULL)"];
"1000134" [label="(Identifier,pwd)"];
"1000294" [label="(Call,pam_syslog(pamh, LOG_DEBUG,\n\t\t\t\t\t\t   \"%s %s allowed by %s\",\n\t\t\t\t\t\t   other_user, sense, path))"];
"1000127" [label="(Call,pwd = pam_modutil_getpwnam(pamh, this_user))"];
"1000253" [label="(Call,memchr(buf, '\r', sizeof(buf)))"];
"1000167" [label="(Call,pam_syslog(pamh, LOG_ERR,\n                           \"name of user's home directory is too long\"))"];
"1000281" [label="(Identifier,tmp)"];
"1000138" [label="(Identifier,pamh)"];
"1000132" [label="(ControlStructure,if (pwd == NULL))"];
"1000252" [label="(Identifier,tmp)"];
"1000117" [label="(Identifier,NULL)"];
"1000135" [label="(Identifier,NULL)"];
"1000108" [label="(MethodParameterIn,const char *this_user)"];
"1000314" [label="(Call,fclose(fp))"];
"1000255" [label="(Literal,'\r')"];
"1000276" [label="(Identifier,tmp)"];
"1000259" [label="(Call,tmp != NULL)"];
"1000128" [label="(Identifier,pwd)"];
"1000308" [label="(Call,pam_syslog(pamh, LOG_DEBUG, \"%s not listed in %s\",\n\t\t\t\t   other_user, path))"];
"1000254" [label="(Identifier,buf)"];
"1000363" [label="(MethodReturn,RET)"];
"1000112" [label="(Block,)"];
"1000106" [label="(MethodParameterIn,pam_handle_t *pamh)"];
"1000267" [label="(Call,tmp = memchr(buf, '\n', sizeof(buf)))"];
"1000301" [label="(Call,fclose(fp))"];
"1000274" [label="(ControlStructure,if (tmp != NULL))"];
"1000246" [label="(Call,sizeof(buf))"];
"1000251" [label="(Call,tmp = memchr(buf, '\r', sizeof(buf)))"];
"1000272" [label="(Call,sizeof(buf))"];
"1000260" [label="(Identifier,tmp)"];
"1000129" [label="(Call,pam_modutil_getpwnam(pamh, this_user))"];
"1000133" [label="(Call,pwd == NULL)"];
"1000121" [label="(Identifier,fd)"];
"1000345" [label="(Call,pam_syslog(pamh, LOG_DEBUG,\n\t\t\t\t\t\t   \"%s does not exist, failing\",\n\t\t\t\t\t\t   path))"];
"1000243" -> "1000242"  [label="AST: "];
"1000243" -> "1000249"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000249" -> "1000243"  [label="AST: "];
"1000252" -> "1000243"  [label="CFG: "];
"1000306" -> "1000243"  [label="CFG: "];
"1000243" -> "1000363"  [label="DDG: fgets(buf, sizeof(buf), fp)"];
"1000243" -> "1000363"  [label="DDG: fgets(buf, sizeof(buf), fp) != NULL"];
"1000243" -> "1000363"  [label="DDG: NULL"];
"1000244" -> "1000243"  [label="DDG: buf"];
"1000244" -> "1000243"  [label="DDG: fp"];
"1000133" -> "1000243"  [label="DDG: NULL"];
"1000275" -> "1000243"  [label="DDG: NULL"];
"1000243" -> "1000259"  [label="DDG: NULL"];
"1000244" -> "1000248"  [label="CFG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000246" -> "1000244"  [label="AST: "];
"1000248" -> "1000244"  [label="AST: "];
"1000249" -> "1000244"  [label="CFG: "];
"1000244" -> "1000363"  [label="DDG: buf"];
"1000115" -> "1000244"  [label="DDG: fp"];
"1000244" -> "1000301"  [label="DDG: fp"];
"1000244" -> "1000314"  [label="DDG: fp"];
"1000115" -> "1000112"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000121" -> "1000115"  [label="CFG: "];
"1000115" -> "1000363"  [label="DDG: fp"];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000138" -> "1000133"  [label="CFG: "];
"1000145" -> "1000133"  [label="CFG: "];
"1000133" -> "1000363"  [label="DDG: pwd"];
"1000133" -> "1000363"  [label="DDG: pwd == NULL"];
"1000133" -> "1000363"  [label="DDG: NULL"];
"1000127" -> "1000133"  [label="DDG: pwd"];
"1000127" -> "1000112"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000134" -> "1000127"  [label="CFG: "];
"1000127" -> "1000363"  [label="DDG: pam_modutil_getpwnam(pamh, this_user)"];
"1000129" -> "1000127"  [label="DDG: pamh"];
"1000129" -> "1000127"  [label="DDG: this_user"];
"1000129" -> "1000131"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000129"  [label="AST: "];
"1000129" -> "1000363"  [label="DDG: pamh"];
"1000129" -> "1000363"  [label="DDG: this_user"];
"1000106" -> "1000129"  [label="DDG: pamh"];
"1000108" -> "1000129"  [label="DDG: this_user"];
"1000129" -> "1000137"  [label="DDG: pamh"];
"1000129" -> "1000137"  [label="DDG: this_user"];
"1000129" -> "1000167"  [label="DDG: pamh"];
"1000129" -> "1000294"  [label="DDG: pamh"];
"1000129" -> "1000308"  [label="DDG: pamh"];
"1000129" -> "1000335"  [label="DDG: pamh"];
"1000129" -> "1000345"  [label="DDG: pamh"];
"1000129" -> "1000356"  [label="DDG: pamh"];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000363"  [label="DDG: pamh"];
"1000106" -> "1000137"  [label="DDG: pamh"];
"1000106" -> "1000167"  [label="DDG: pamh"];
"1000106" -> "1000294"  [label="DDG: pamh"];
"1000106" -> "1000308"  [label="DDG: pamh"];
"1000106" -> "1000335"  [label="DDG: pamh"];
"1000106" -> "1000345"  [label="DDG: pamh"];
"1000106" -> "1000356"  [label="DDG: pamh"];
"1000108" -> "1000105"  [label="AST: "];
"1000108" -> "1000363"  [label="DDG: this_user"];
"1000108" -> "1000137"  [label="DDG: this_user"];
"1000275" -> "1000274"  [label="AST: "];
"1000275" -> "1000277"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000277" -> "1000275"  [label="AST: "];
"1000281" -> "1000275"  [label="CFG: "];
"1000286" -> "1000275"  [label="CFG: "];
"1000275" -> "1000363"  [label="DDG: tmp != NULL"];
"1000275" -> "1000363"  [label="DDG: tmp"];
"1000275" -> "1000363"  [label="DDG: NULL"];
"1000267" -> "1000275"  [label="DDG: tmp"];
"1000259" -> "1000275"  [label="DDG: NULL"];
"1000267" -> "1000250"  [label="AST: "];
"1000267" -> "1000269"  [label="CFG: "];
"1000268" -> "1000267"  [label="AST: "];
"1000269" -> "1000267"  [label="AST: "];
"1000276" -> "1000267"  [label="CFG: "];
"1000267" -> "1000363"  [label="DDG: memchr(buf, '\n', sizeof(buf))"];
"1000269" -> "1000267"  [label="DDG: buf"];
"1000269" -> "1000267"  [label="DDG: '\n'"];
"1000269" -> "1000272"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000271" -> "1000269"  [label="AST: "];
"1000272" -> "1000269"  [label="AST: "];
"1000269" -> "1000285"  [label="DDG: buf"];
"1000259" -> "1000258"  [label="AST: "];
"1000259" -> "1000261"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000259"  [label="AST: "];
"1000265" -> "1000259"  [label="CFG: "];
"1000268" -> "1000259"  [label="CFG: "];
"1000251" -> "1000259"  [label="DDG: tmp"];
"1000251" -> "1000250"  [label="AST: "];
"1000251" -> "1000253"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="AST: "];
"1000260" -> "1000251"  [label="CFG: "];
"1000251" -> "1000363"  [label="DDG: memchr(buf, '\r', sizeof(buf))"];
"1000253" -> "1000251"  [label="DDG: buf"];
"1000253" -> "1000251"  [label="DDG: '\r'"];
"1000253" -> "1000256"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000255" -> "1000253"  [label="AST: "];
"1000256" -> "1000253"  [label="AST: "];
}
