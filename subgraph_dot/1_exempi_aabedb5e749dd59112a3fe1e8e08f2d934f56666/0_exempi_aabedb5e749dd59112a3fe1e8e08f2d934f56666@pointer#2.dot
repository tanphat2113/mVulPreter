digraph "0_exempi_aabedb5e749dd59112a3fe1e8e08f2d934f56666@pointer" {
"1000422" [label="(Call,XIO::WriteUns32_LE(file, this->tag))"];
"1000414" [label="(Call,* file = handler->parent->ioRef)"];
"1000427" [label="(Call,XIO::WriteUns32_LE(file, (XMP_Uns32) this->size))"];
"1000434" [label="(Call,XIO::WriteUns32_LE(file, kChunk_WEBP))"];
"1000487" [label="(Call,XIO::WriteUns32_LE(file, (XMP_Uns32) this->size))"];
"1000423" [label="(Identifier,file)"];
"1000416" [label="(Call,handler->parent->ioRef)"];
"1000428" [label="(Identifier,file)"];
"1000442" [label="(Identifier,i)"];
"1000412" [label="(Block,)"];
"1000489" [label="(Call,(XMP_Uns32) this->size)"];
"1000488" [label="(Identifier,file)"];
"1000414" [label="(Call,* file = handler->parent->ioRef)"];
"1000435" [label="(Identifier,file)"];
"1000436" [label="(Identifier,kChunk_WEBP)"];
"1000427" [label="(Call,XIO::WriteUns32_LE(file, (XMP_Uns32) this->size))"];
"1000495" [label="(Identifier,lastOffset)"];
"1000422" [label="(Call,XIO::WriteUns32_LE(file, this->tag))"];
"1000429" [label="(Call,(XMP_Uns32) this->size)"];
"1000434" [label="(Call,XIO::WriteUns32_LE(file, kChunk_WEBP))"];
"1000421" [label="(Call,file->Rewind())"];
"1000537" [label="(MethodReturn,RET)"];
"1000424" [label="(Call,this->tag)"];
"1000487" [label="(Call,XIO::WriteUns32_LE(file, (XMP_Uns32) this->size))"];
"1000415" [label="(Identifier,file)"];
"1000422" -> "1000412"  [label="AST: "];
"1000422" -> "1000424"  [label="CFG: "];
"1000423" -> "1000422"  [label="AST: "];
"1000424" -> "1000422"  [label="AST: "];
"1000428" -> "1000422"  [label="CFG: "];
"1000422" -> "1000537"  [label="DDG: XIO::WriteUns32_LE(file, this->tag)"];
"1000422" -> "1000537"  [label="DDG: this->tag"];
"1000414" -> "1000422"  [label="DDG: file"];
"1000422" -> "1000427"  [label="DDG: file"];
"1000414" -> "1000412"  [label="AST: "];
"1000414" -> "1000416"  [label="CFG: "];
"1000415" -> "1000414"  [label="AST: "];
"1000416" -> "1000414"  [label="AST: "];
"1000421" -> "1000414"  [label="CFG: "];
"1000414" -> "1000537"  [label="DDG: handler->parent->ioRef"];
"1000427" -> "1000412"  [label="AST: "];
"1000427" -> "1000429"  [label="CFG: "];
"1000428" -> "1000427"  [label="AST: "];
"1000429" -> "1000427"  [label="AST: "];
"1000435" -> "1000427"  [label="CFG: "];
"1000429" -> "1000427"  [label="DDG: this->size"];
"1000427" -> "1000434"  [label="DDG: file"];
"1000434" -> "1000412"  [label="AST: "];
"1000434" -> "1000436"  [label="CFG: "];
"1000435" -> "1000434"  [label="AST: "];
"1000436" -> "1000434"  [label="AST: "];
"1000442" -> "1000434"  [label="CFG: "];
"1000434" -> "1000537"  [label="DDG: kChunk_WEBP"];
"1000434" -> "1000537"  [label="DDG: XIO::WriteUns32_LE(file, kChunk_WEBP)"];
"1000434" -> "1000487"  [label="DDG: file"];
"1000487" -> "1000412"  [label="AST: "];
"1000487" -> "1000489"  [label="CFG: "];
"1000488" -> "1000487"  [label="AST: "];
"1000489" -> "1000487"  [label="AST: "];
"1000495" -> "1000487"  [label="CFG: "];
"1000487" -> "1000537"  [label="DDG: (XMP_Uns32) this->size"];
"1000487" -> "1000537"  [label="DDG: file"];
"1000487" -> "1000537"  [label="DDG: XIO::WriteUns32_LE(file, (XMP_Uns32) this->size)"];
"1000489" -> "1000487"  [label="DDG: this->size"];
}
