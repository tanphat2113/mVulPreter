digraph "0_linux_f3d3342602f8bcbf37d7c46641cb9bca7618eb1c_4@API" {
"1000171" [label="(Call,skb_recv_datagram(sk, flags, flags & MSG_DONTWAIT, &error))"];
"1000109" [label="(Call,*sk = sock->sk)"];
"1000174" [label="(Call,flags & MSG_DONTWAIT)"];
"1000132" [label="(Call,flags & ~(MSG_DONTWAIT | MSG_PEEK))"];
"1000106" [label="(MethodParameterIn,int flags)"];
"1000134" [label="(Call,~(MSG_DONTWAIT | MSG_PEEK))"];
"1000135" [label="(Call,MSG_DONTWAIT | MSG_PEEK)"];
"1000169" [label="(Call,skb = skb_recv_datagram(sk, flags, flags & MSG_DONTWAIT, &error))"];
"1000180" [label="(Call,!skb)"];
"1000204" [label="(Call,skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000202" [label="(Call,error = skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000213" [label="(Return,return error;)"];
"1000215" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000240" [label="(Call,skb_free_datagram(sk, skb))"];
"1000243" [label="(Return,return copied;)"];
"1000221" [label="(Call,flags & MSG_PEEK)"];
"1000220" [label="(Call,!(flags & MSG_PEEK))"];
"1000226" [label="(Literal,\"%d -= %d\n\")"];
"1000181" [label="(Identifier,skb)"];
"1000240" [label="(Call,skb_free_datagram(sk, skb))"];
"1000140" [label="(Identifier,EOPNOTSUPP)"];
"1000131" [label="(ControlStructure,if (flags & ~(MSG_DONTWAIT | MSG_PEEK)))"];
"1000214" [label="(Identifier,error)"];
"1000172" [label="(Identifier,sk)"];
"1000185" [label="(Identifier,copied)"];
"1000221" [label="(Call,flags & MSG_PEEK)"];
"1000217" [label="(Identifier,sk)"];
"1000169" [label="(Call,skb = skb_recv_datagram(sk, flags, flags & MSG_DONTWAIT, &error))"];
"1000220" [label="(Call,!(flags & MSG_PEEK))"];
"1000206" [label="(Literal,0)"];
"1000204" [label="(Call,skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000119" [label="(Identifier,error)"];
"1000104" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000109" [label="(Call,*sk = sock->sk)"];
"1000194" [label="(Call,copied = size)"];
"1000190" [label="(Call,copied > size)"];
"1000173" [label="(Identifier,flags)"];
"1000134" [label="(Call,~(MSG_DONTWAIT | MSG_PEEK))"];
"1000135" [label="(Call,MSG_DONTWAIT | MSG_PEEK)"];
"1000132" [label="(Call,flags & ~(MSG_DONTWAIT | MSG_PEEK))"];
"1000136" [label="(Identifier,MSG_DONTWAIT)"];
"1000176" [label="(Identifier,MSG_DONTWAIT)"];
"1000174" [label="(Call,flags & MSG_DONTWAIT)"];
"1000170" [label="(Identifier,skb)"];
"1000203" [label="(Identifier,error)"];
"1000205" [label="(Identifier,skb)"];
"1000180" [label="(Call,!skb)"];
"1000137" [label="(Identifier,MSG_PEEK)"];
"1000241" [label="(Identifier,sk)"];
"1000216" [label="(Identifier,msg)"];
"1000223" [label="(Identifier,MSG_PEEK)"];
"1000175" [label="(Identifier,flags)"];
"1000202" [label="(Call,error = skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000207" [label="(Call,msg->msg_iov)"];
"1000244" [label="(Identifier,copied)"];
"1000177" [label="(Call,&error)"];
"1000179" [label="(ControlStructure,if (!skb))"];
"1000212" [label="(Identifier,error)"];
"1000178" [label="(Identifier,error)"];
"1000243" [label="(Return,return copied;)"];
"1000211" [label="(ControlStructure,if (error))"];
"1000222" [label="(Identifier,flags)"];
"1000242" [label="(Identifier,skb)"];
"1000142" [label="(Identifier,vcc)"];
"1000183" [label="(Identifier,error)"];
"1000213" [label="(Return,return error;)"];
"1000107" [label="(Block,)"];
"1000133" [label="(Identifier,flags)"];
"1000219" [label="(ControlStructure,if (!(flags & MSG_PEEK)))"];
"1000171" [label="(Call,skb_recv_datagram(sk, flags, flags & MSG_DONTWAIT, &error))"];
"1000111" [label="(Call,sock->sk)"];
"1000110" [label="(Identifier,sk)"];
"1000218" [label="(Identifier,skb)"];
"1000106" [label="(MethodParameterIn,int flags)"];
"1000210" [label="(Identifier,copied)"];
"1000215" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000245" [label="(MethodReturn,int)"];
"1000171" -> "1000169"  [label="AST: "];
"1000171" -> "1000177"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="AST: "];
"1000174" -> "1000171"  [label="AST: "];
"1000177" -> "1000171"  [label="AST: "];
"1000169" -> "1000171"  [label="CFG: "];
"1000171" -> "1000245"  [label="DDG: sk"];
"1000171" -> "1000245"  [label="DDG: flags"];
"1000171" -> "1000245"  [label="DDG: &error"];
"1000171" -> "1000245"  [label="DDG: flags & MSG_DONTWAIT"];
"1000171" -> "1000169"  [label="DDG: sk"];
"1000171" -> "1000169"  [label="DDG: flags"];
"1000171" -> "1000169"  [label="DDG: flags & MSG_DONTWAIT"];
"1000171" -> "1000169"  [label="DDG: &error"];
"1000109" -> "1000171"  [label="DDG: sk"];
"1000174" -> "1000171"  [label="DDG: flags"];
"1000174" -> "1000171"  [label="DDG: MSG_DONTWAIT"];
"1000106" -> "1000171"  [label="DDG: flags"];
"1000171" -> "1000215"  [label="DDG: sk"];
"1000171" -> "1000221"  [label="DDG: flags"];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000119" -> "1000109"  [label="CFG: "];
"1000109" -> "1000245"  [label="DDG: sk"];
"1000109" -> "1000245"  [label="DDG: sock->sk"];
"1000174" -> "1000176"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000176" -> "1000174"  [label="AST: "];
"1000178" -> "1000174"  [label="CFG: "];
"1000174" -> "1000245"  [label="DDG: MSG_DONTWAIT"];
"1000132" -> "1000174"  [label="DDG: flags"];
"1000106" -> "1000174"  [label="DDG: flags"];
"1000135" -> "1000174"  [label="DDG: MSG_DONTWAIT"];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000134"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="AST: "];
"1000140" -> "1000132"  [label="CFG: "];
"1000142" -> "1000132"  [label="CFG: "];
"1000132" -> "1000245"  [label="DDG: flags & ~(MSG_DONTWAIT | MSG_PEEK)"];
"1000132" -> "1000245"  [label="DDG: ~(MSG_DONTWAIT | MSG_PEEK)"];
"1000132" -> "1000245"  [label="DDG: flags"];
"1000106" -> "1000132"  [label="DDG: flags"];
"1000134" -> "1000132"  [label="DDG: MSG_DONTWAIT | MSG_PEEK"];
"1000106" -> "1000101"  [label="AST: "];
"1000106" -> "1000245"  [label="DDG: flags"];
"1000106" -> "1000221"  [label="DDG: flags"];
"1000134" -> "1000135"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000134" -> "1000245"  [label="DDG: MSG_DONTWAIT | MSG_PEEK"];
"1000135" -> "1000134"  [label="DDG: MSG_DONTWAIT"];
"1000135" -> "1000134"  [label="DDG: MSG_PEEK"];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000135" -> "1000245"  [label="DDG: MSG_DONTWAIT"];
"1000135" -> "1000245"  [label="DDG: MSG_PEEK"];
"1000135" -> "1000221"  [label="DDG: MSG_PEEK"];
"1000169" -> "1000107"  [label="AST: "];
"1000170" -> "1000169"  [label="AST: "];
"1000181" -> "1000169"  [label="CFG: "];
"1000169" -> "1000245"  [label="DDG: skb_recv_datagram(sk, flags, flags & MSG_DONTWAIT, &error)"];
"1000169" -> "1000180"  [label="DDG: skb"];
"1000180" -> "1000179"  [label="AST: "];
"1000180" -> "1000181"  [label="CFG: "];
"1000181" -> "1000180"  [label="AST: "];
"1000183" -> "1000180"  [label="CFG: "];
"1000185" -> "1000180"  [label="CFG: "];
"1000180" -> "1000245"  [label="DDG: skb"];
"1000180" -> "1000245"  [label="DDG: !skb"];
"1000180" -> "1000204"  [label="DDG: skb"];
"1000204" -> "1000202"  [label="AST: "];
"1000204" -> "1000210"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000206" -> "1000204"  [label="AST: "];
"1000207" -> "1000204"  [label="AST: "];
"1000210" -> "1000204"  [label="AST: "];
"1000202" -> "1000204"  [label="CFG: "];
"1000204" -> "1000245"  [label="DDG: copied"];
"1000204" -> "1000245"  [label="DDG: msg->msg_iov"];
"1000204" -> "1000245"  [label="DDG: skb"];
"1000204" -> "1000202"  [label="DDG: skb"];
"1000204" -> "1000202"  [label="DDG: 0"];
"1000204" -> "1000202"  [label="DDG: msg->msg_iov"];
"1000204" -> "1000202"  [label="DDG: copied"];
"1000194" -> "1000204"  [label="DDG: copied"];
"1000190" -> "1000204"  [label="DDG: copied"];
"1000204" -> "1000215"  [label="DDG: skb"];
"1000204" -> "1000243"  [label="DDG: copied"];
"1000202" -> "1000107"  [label="AST: "];
"1000203" -> "1000202"  [label="AST: "];
"1000212" -> "1000202"  [label="CFG: "];
"1000202" -> "1000245"  [label="DDG: error"];
"1000202" -> "1000245"  [label="DDG: skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied)"];
"1000202" -> "1000213"  [label="DDG: error"];
"1000213" -> "1000211"  [label="AST: "];
"1000213" -> "1000214"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000245" -> "1000213"  [label="CFG: "];
"1000213" -> "1000245"  [label="DDG: <RET>"];
"1000214" -> "1000213"  [label="DDG: error"];
"1000215" -> "1000107"  [label="AST: "];
"1000215" -> "1000218"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000217" -> "1000215"  [label="AST: "];
"1000218" -> "1000215"  [label="AST: "];
"1000222" -> "1000215"  [label="CFG: "];
"1000215" -> "1000245"  [label="DDG: msg"];
"1000215" -> "1000245"  [label="DDG: sock_recv_ts_and_drops(msg, sk, skb)"];
"1000104" -> "1000215"  [label="DDG: msg"];
"1000215" -> "1000240"  [label="DDG: sk"];
"1000215" -> "1000240"  [label="DDG: skb"];
"1000240" -> "1000107"  [label="AST: "];
"1000240" -> "1000242"  [label="CFG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000242" -> "1000240"  [label="AST: "];
"1000244" -> "1000240"  [label="CFG: "];
"1000240" -> "1000245"  [label="DDG: skb_free_datagram(sk, skb)"];
"1000240" -> "1000245"  [label="DDG: skb"];
"1000240" -> "1000245"  [label="DDG: sk"];
"1000243" -> "1000107"  [label="AST: "];
"1000243" -> "1000244"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000245" -> "1000243"  [label="CFG: "];
"1000243" -> "1000245"  [label="DDG: <RET>"];
"1000244" -> "1000243"  [label="DDG: copied"];
"1000221" -> "1000220"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000220" -> "1000221"  [label="CFG: "];
"1000221" -> "1000245"  [label="DDG: MSG_PEEK"];
"1000221" -> "1000245"  [label="DDG: flags"];
"1000221" -> "1000220"  [label="DDG: flags"];
"1000221" -> "1000220"  [label="DDG: MSG_PEEK"];
"1000220" -> "1000219"  [label="AST: "];
"1000226" -> "1000220"  [label="CFG: "];
"1000241" -> "1000220"  [label="CFG: "];
"1000220" -> "1000245"  [label="DDG: flags & MSG_PEEK"];
"1000220" -> "1000245"  [label="DDG: !(flags & MSG_PEEK)"];
}
