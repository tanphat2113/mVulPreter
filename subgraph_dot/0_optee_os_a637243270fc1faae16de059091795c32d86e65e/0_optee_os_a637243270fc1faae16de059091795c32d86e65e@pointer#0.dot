digraph "0_optee_os_a637243270fc1faae16de059091795c32d86e65e@pointer" {
"1000615" [label="(Call,tee_cryp_hkdf(hash_id, ikm, ik->key_size, salt, salt_len,\n\t\t\t\t    info, info_len, (uint8_t *)(sk + 1),\n\t\t\t\t    okm_len))"];
"1000562" [label="(Call,hash_id = TEE_ALG_GET_DIGEST_HASH(cs->algo))"];
"1000564" [label="(Call,TEE_ALG_GET_DIGEST_HASH(cs->algo))"];
"1000550" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo))"];
"1000364" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo))"];
"1000243" [label="(Call,cs->algo == TEE_ALG_DH_DERIVE_SHARED_SECRET)"];
"1000575" [label="(Call,*ikm = (const uint8_t *)(ik + 1))"];
"1000577" [label="(Call,(const uint8_t *)(ik + 1))"];
"1000569" [label="(Call,*ik = ko->attr)"];
"1000625" [label="(Call,(uint8_t *)(sk + 1))"];
"1000221" [label="(Call,sk = so->attr)"];
"1000603" [label="(Call,okm_len > ik->alloc_size)"];
"1000613" [label="(Call,res = tee_cryp_hkdf(hash_id, ikm, ik->key_size, salt, salt_len,\n\t\t\t\t    info, info_len, (uint8_t *)(sk + 1),\n\t\t\t\t    okm_len))"];
"1000632" [label="(Call,res == TEE_SUCCESS)"];
"1000857" [label="(Return,return res;)"];
"1000636" [label="(Call,sk->key_size = okm_len)"];
"1000363" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo) == TEE_MAIN_ALGO_ECDH)"];
"1000632" [label="(Call,res == TEE_SUCCESS)"];
"1000354" [label="(Call,res = TEE_ERROR_OUT_OF_MEMORY)"];
"1000502" [label="(Call,(uint8_t *)(sk + 1))"];
"1000569" [label="(Call,*ik = ko->attr)"];
"1000222" [label="(Identifier,sk)"];
"1000604" [label="(Identifier,okm_len)"];
"1000633" [label="(Identifier,res)"];
"1000613" [label="(Call,res = tee_cryp_hkdf(hash_id, ikm, ik->key_size, salt, salt_len,\n\t\t\t\t    info, info_len, (uint8_t *)(sk + 1),\n\t\t\t\t    okm_len))"];
"1000395" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000830" [label="(Call,res == TEE_SUCCESS)"];
"1000563" [label="(Identifier,hash_id)"];
"1000635" [label="(Block,)"];
"1000441" [label="(Call,res != TEE_SUCCESS)"];
"1000857" [label="(Return,return res;)"];
"1000797" [label="(Call,res != TEE_SUCCESS)"];
"1000577" [label="(Call,(const uint8_t *)(ik + 1))"];
"1000623" [label="(Identifier,info)"];
"1000598" [label="(Call,res != TEE_SUCCESS)"];
"1000554" [label="(Identifier,TEE_MAIN_ALGO_HKDF)"];
"1000617" [label="(Identifier,ikm)"];
"1000858" [label="(Identifier,res)"];
"1000324" [label="(Call,res == TEE_SUCCESS)"];
"1000265" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000255" [label="(Identifier,param_count)"];
"1000551" [label="(Call,cs->algo)"];
"1000204" [label="(Call,res != TEE_SUCCESS)"];
"1000336" [label="(Call,(uint8_t *)(sk + 1))"];
"1000622" [label="(Identifier,salt_len)"];
"1000550" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo))"];
"1000640" [label="(Identifier,okm_len)"];
"1000722" [label="(Call,(uint8_t *)(sk + 1))"];
"1000808" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000618" [label="(Call,ik->key_size)"];
"1000610" [label="(Identifier,res)"];
"1000609" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000575" [label="(Call,*ikm = (const uint8_t *)(ik + 1))"];
"1000655" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo))"];
"1000825" [label="(Call,sk + 1)"];
"1000630" [label="(Identifier,okm_len)"];
"1000368" [label="(Identifier,TEE_MAIN_ALGO_ECDH)"];
"1000627" [label="(Call,sk + 1)"];
"1000859" [label="(MethodReturn,TEE_Result)"];
"1000615" [label="(Call,tee_cryp_hkdf(hash_id, ikm, ik->key_size, salt, salt_len,\n\t\t\t\t    info, info_len, (uint8_t *)(sk + 1),\n\t\t\t\t    okm_len))"];
"1000625" [label="(Call,(uint8_t *)(sk + 1))"];
"1000576" [label="(Identifier,ikm)"];
"1000602" [label="(ControlStructure,if (okm_len > ik->alloc_size))"];
"1000244" [label="(Call,cs->algo)"];
"1000190" [label="(Call,res != TEE_SUCCESS)"];
"1000579" [label="(Call,ik + 1)"];
"1000631" [label="(ControlStructure,if (res == TEE_SUCCESS))"];
"1000555" [label="(Block,)"];
"1000504" [label="(Call,sk + 1)"];
"1000644" [label="(Identifier,so)"];
"1000221" [label="(Call,sk = so->attr)"];
"1000616" [label="(Identifier,hash_id)"];
"1000724" [label="(Call,sk + 1)"];
"1000238" [label="(Call,res = TEE_ERROR_NOT_SUPPORTED)"];
"1000697" [label="(Call,res != TEE_SUCCESS)"];
"1000605" [label="(Call,ik->alloc_size)"];
"1000570" [label="(Identifier,ik)"];
"1000614" [label="(Identifier,res)"];
"1000113" [label="(Block,)"];
"1000242" [label="(ControlStructure,if (cs->algo == TEE_ALG_DH_DERIVE_SHARED_SECRET))"];
"1000621" [label="(Identifier,salt)"];
"1000854" [label="(JumpTarget,out:)"];
"1000223" [label="(Call,so->attr)"];
"1000227" [label="(Identifier,type_props)"];
"1000636" [label="(Call,sk->key_size = okm_len)"];
"1000549" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo) == TEE_MAIN_ALGO_HKDF)"];
"1000583" [label="(Identifier,res)"];
"1000603" [label="(Call,okm_len > ik->alloc_size)"];
"1000364" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo))"];
"1000562" [label="(Call,hash_id = TEE_ALG_GET_DIGEST_HASH(cs->algo))"];
"1000851" [label="(Call,res = TEE_ERROR_NOT_SUPPORTED)"];
"1000637" [label="(Call,sk->key_size)"];
"1000524" [label="(Call,res == TEE_SUCCESS)"];
"1000243" [label="(Call,cs->algo == TEE_ALG_DH_DERIVE_SHARED_SECRET)"];
"1000624" [label="(Identifier,info_len)"];
"1000366" [label="(Identifier,cs)"];
"1000564" [label="(Call,TEE_ALG_GET_DIGEST_HASH(cs->algo))"];
"1000365" [label="(Call,cs->algo)"];
"1000247" [label="(Identifier,TEE_ALG_DH_DERIVE_SHARED_SECRET)"];
"1000634" [label="(Identifier,TEE_SUCCESS)"];
"1000823" [label="(Call,(uint8_t *)(sk + 1))"];
"1000729" [label="(Call,res == TEE_SUCCESS)"];
"1000565" [label="(Call,cs->algo)"];
"1000338" [label="(Call,sk + 1)"];
"1000430" [label="(Call,res = TEE_ERROR_NOT_IMPLEMENTED)"];
"1000217" [label="(Call,res != TEE_SUCCESS)"];
"1000571" [label="(Call,ko->attr)"];
"1000638" [label="(Identifier,sk)"];
"1000708" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000615" -> "1000613"  [label="AST: "];
"1000615" -> "1000630"  [label="CFG: "];
"1000616" -> "1000615"  [label="AST: "];
"1000617" -> "1000615"  [label="AST: "];
"1000618" -> "1000615"  [label="AST: "];
"1000621" -> "1000615"  [label="AST: "];
"1000622" -> "1000615"  [label="AST: "];
"1000623" -> "1000615"  [label="AST: "];
"1000624" -> "1000615"  [label="AST: "];
"1000625" -> "1000615"  [label="AST: "];
"1000630" -> "1000615"  [label="AST: "];
"1000613" -> "1000615"  [label="CFG: "];
"1000615" -> "1000859"  [label="DDG: okm_len"];
"1000615" -> "1000859"  [label="DDG: salt_len"];
"1000615" -> "1000859"  [label="DDG: info"];
"1000615" -> "1000859"  [label="DDG: ik->key_size"];
"1000615" -> "1000859"  [label="DDG: ikm"];
"1000615" -> "1000859"  [label="DDG: salt"];
"1000615" -> "1000859"  [label="DDG: hash_id"];
"1000615" -> "1000859"  [label="DDG: info_len"];
"1000615" -> "1000859"  [label="DDG: (uint8_t *)(sk + 1)"];
"1000615" -> "1000613"  [label="DDG: info"];
"1000615" -> "1000613"  [label="DDG: okm_len"];
"1000615" -> "1000613"  [label="DDG: ik->key_size"];
"1000615" -> "1000613"  [label="DDG: salt"];
"1000615" -> "1000613"  [label="DDG: salt_len"];
"1000615" -> "1000613"  [label="DDG: hash_id"];
"1000615" -> "1000613"  [label="DDG: (uint8_t *)(sk + 1)"];
"1000615" -> "1000613"  [label="DDG: ikm"];
"1000615" -> "1000613"  [label="DDG: info_len"];
"1000562" -> "1000615"  [label="DDG: hash_id"];
"1000575" -> "1000615"  [label="DDG: ikm"];
"1000625" -> "1000615"  [label="DDG: sk + 1"];
"1000603" -> "1000615"  [label="DDG: okm_len"];
"1000615" -> "1000636"  [label="DDG: okm_len"];
"1000562" -> "1000555"  [label="AST: "];
"1000562" -> "1000564"  [label="CFG: "];
"1000563" -> "1000562"  [label="AST: "];
"1000564" -> "1000562"  [label="AST: "];
"1000570" -> "1000562"  [label="CFG: "];
"1000562" -> "1000859"  [label="DDG: hash_id"];
"1000562" -> "1000859"  [label="DDG: TEE_ALG_GET_DIGEST_HASH(cs->algo)"];
"1000564" -> "1000562"  [label="DDG: cs->algo"];
"1000564" -> "1000565"  [label="CFG: "];
"1000565" -> "1000564"  [label="AST: "];
"1000564" -> "1000859"  [label="DDG: cs->algo"];
"1000550" -> "1000564"  [label="DDG: cs->algo"];
"1000550" -> "1000549"  [label="AST: "];
"1000550" -> "1000551"  [label="CFG: "];
"1000551" -> "1000550"  [label="AST: "];
"1000554" -> "1000550"  [label="CFG: "];
"1000550" -> "1000549"  [label="DDG: cs->algo"];
"1000364" -> "1000550"  [label="DDG: cs->algo"];
"1000550" -> "1000655"  [label="DDG: cs->algo"];
"1000364" -> "1000363"  [label="AST: "];
"1000364" -> "1000365"  [label="CFG: "];
"1000365" -> "1000364"  [label="AST: "];
"1000368" -> "1000364"  [label="CFG: "];
"1000364" -> "1000859"  [label="DDG: cs->algo"];
"1000364" -> "1000363"  [label="DDG: cs->algo"];
"1000243" -> "1000364"  [label="DDG: cs->algo"];
"1000243" -> "1000242"  [label="AST: "];
"1000243" -> "1000247"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000247" -> "1000243"  [label="AST: "];
"1000255" -> "1000243"  [label="CFG: "];
"1000366" -> "1000243"  [label="CFG: "];
"1000243" -> "1000859"  [label="DDG: cs->algo"];
"1000243" -> "1000859"  [label="DDG: cs->algo == TEE_ALG_DH_DERIVE_SHARED_SECRET"];
"1000243" -> "1000859"  [label="DDG: TEE_ALG_DH_DERIVE_SHARED_SECRET"];
"1000575" -> "1000555"  [label="AST: "];
"1000575" -> "1000577"  [label="CFG: "];
"1000576" -> "1000575"  [label="AST: "];
"1000577" -> "1000575"  [label="AST: "];
"1000583" -> "1000575"  [label="CFG: "];
"1000575" -> "1000859"  [label="DDG: (const uint8_t *)(ik + 1)"];
"1000575" -> "1000859"  [label="DDG: ikm"];
"1000577" -> "1000575"  [label="DDG: ik + 1"];
"1000577" -> "1000579"  [label="CFG: "];
"1000578" -> "1000577"  [label="AST: "];
"1000579" -> "1000577"  [label="AST: "];
"1000577" -> "1000859"  [label="DDG: ik + 1"];
"1000569" -> "1000577"  [label="DDG: ik"];
"1000569" -> "1000555"  [label="AST: "];
"1000569" -> "1000571"  [label="CFG: "];
"1000570" -> "1000569"  [label="AST: "];
"1000571" -> "1000569"  [label="AST: "];
"1000576" -> "1000569"  [label="CFG: "];
"1000569" -> "1000859"  [label="DDG: ko->attr"];
"1000569" -> "1000579"  [label="DDG: ik"];
"1000625" -> "1000627"  [label="CFG: "];
"1000626" -> "1000625"  [label="AST: "];
"1000627" -> "1000625"  [label="AST: "];
"1000630" -> "1000625"  [label="CFG: "];
"1000625" -> "1000859"  [label="DDG: sk + 1"];
"1000221" -> "1000625"  [label="DDG: sk"];
"1000221" -> "1000113"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000227" -> "1000221"  [label="CFG: "];
"1000221" -> "1000859"  [label="DDG: so->attr"];
"1000221" -> "1000859"  [label="DDG: sk"];
"1000221" -> "1000336"  [label="DDG: sk"];
"1000221" -> "1000338"  [label="DDG: sk"];
"1000221" -> "1000502"  [label="DDG: sk"];
"1000221" -> "1000504"  [label="DDG: sk"];
"1000221" -> "1000627"  [label="DDG: sk"];
"1000221" -> "1000722"  [label="DDG: sk"];
"1000221" -> "1000724"  [label="DDG: sk"];
"1000221" -> "1000823"  [label="DDG: sk"];
"1000221" -> "1000825"  [label="DDG: sk"];
"1000603" -> "1000602"  [label="AST: "];
"1000603" -> "1000605"  [label="CFG: "];
"1000604" -> "1000603"  [label="AST: "];
"1000605" -> "1000603"  [label="AST: "];
"1000610" -> "1000603"  [label="CFG: "];
"1000614" -> "1000603"  [label="CFG: "];
"1000603" -> "1000859"  [label="DDG: okm_len"];
"1000603" -> "1000859"  [label="DDG: ik->alloc_size"];
"1000603" -> "1000859"  [label="DDG: okm_len > ik->alloc_size"];
"1000613" -> "1000555"  [label="AST: "];
"1000614" -> "1000613"  [label="AST: "];
"1000633" -> "1000613"  [label="CFG: "];
"1000613" -> "1000859"  [label="DDG: tee_cryp_hkdf(hash_id, ikm, ik->key_size, salt, salt_len,\n\t\t\t\t    info, info_len, (uint8_t *)(sk + 1),\n\t\t\t\t    okm_len)"];
"1000613" -> "1000632"  [label="DDG: res"];
"1000632" -> "1000631"  [label="AST: "];
"1000632" -> "1000634"  [label="CFG: "];
"1000633" -> "1000632"  [label="AST: "];
"1000634" -> "1000632"  [label="AST: "];
"1000638" -> "1000632"  [label="CFG: "];
"1000854" -> "1000632"  [label="CFG: "];
"1000632" -> "1000859"  [label="DDG: res == TEE_SUCCESS"];
"1000632" -> "1000859"  [label="DDG: res"];
"1000632" -> "1000859"  [label="DDG: TEE_SUCCESS"];
"1000598" -> "1000632"  [label="DDG: TEE_SUCCESS"];
"1000632" -> "1000857"  [label="DDG: res"];
"1000857" -> "1000113"  [label="AST: "];
"1000857" -> "1000858"  [label="CFG: "];
"1000858" -> "1000857"  [label="AST: "];
"1000859" -> "1000857"  [label="CFG: "];
"1000857" -> "1000859"  [label="DDG: <RET>"];
"1000858" -> "1000857"  [label="DDG: res"];
"1000395" -> "1000857"  [label="DDG: res"];
"1000708" -> "1000857"  [label="DDG: res"];
"1000729" -> "1000857"  [label="DDG: res"];
"1000598" -> "1000857"  [label="DDG: res"];
"1000238" -> "1000857"  [label="DDG: res"];
"1000609" -> "1000857"  [label="DDG: res"];
"1000265" -> "1000857"  [label="DDG: res"];
"1000430" -> "1000857"  [label="DDG: res"];
"1000354" -> "1000857"  [label="DDG: res"];
"1000830" -> "1000857"  [label="DDG: res"];
"1000441" -> "1000857"  [label="DDG: res"];
"1000524" -> "1000857"  [label="DDG: res"];
"1000851" -> "1000857"  [label="DDG: res"];
"1000190" -> "1000857"  [label="DDG: res"];
"1000217" -> "1000857"  [label="DDG: res"];
"1000808" -> "1000857"  [label="DDG: res"];
"1000797" -> "1000857"  [label="DDG: res"];
"1000324" -> "1000857"  [label="DDG: res"];
"1000204" -> "1000857"  [label="DDG: res"];
"1000697" -> "1000857"  [label="DDG: res"];
"1000636" -> "1000635"  [label="AST: "];
"1000636" -> "1000640"  [label="CFG: "];
"1000637" -> "1000636"  [label="AST: "];
"1000640" -> "1000636"  [label="AST: "];
"1000644" -> "1000636"  [label="CFG: "];
"1000636" -> "1000859"  [label="DDG: okm_len"];
"1000636" -> "1000859"  [label="DDG: sk->key_size"];
}
