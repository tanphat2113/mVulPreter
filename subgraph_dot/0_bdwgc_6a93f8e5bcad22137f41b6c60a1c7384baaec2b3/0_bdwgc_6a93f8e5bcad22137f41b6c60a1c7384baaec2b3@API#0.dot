digraph "0_bdwgc_6a93f8e5bcad22137f41b6c60a1c7384baaec2b3@API" {
"1000176" [label="(Call,GC_malloc_uncollectable(n*lb))"];
"1000177" [label="(Call,n*lb)"];
"1000114" [label="(Call,n > GC_SIZE_MAX / lb)"];
"1000108" [label="(MethodParameterIn,size_t n)"];
"1000116" [label="(Call,GC_SIZE_MAX / lb)"];
"1000109" [label="(MethodParameterIn,size_t lb)"];
"1000112" [label="(Call,lb && n > GC_SIZE_MAX / lb)"];
"1000175" [label="(Return,return GC_malloc_uncollectable(n*lb);)"];
"1000120" [label="(Identifier,NULL)"];
"1000109" [label="(MethodParameterIn,size_t lb)"];
"1000124" [label="(Identifier,lib_bounds_set)"];
"1000176" [label="(Call,GC_malloc_uncollectable(n*lb))"];
"1000184" [label="(Call,n*lb)"];
"1000175" [label="(Return,return GC_malloc_uncollectable(n*lb);)"];
"1000177" [label="(Call,n*lb)"];
"1000118" [label="(Identifier,lb)"];
"1000178" [label="(Identifier,n)"];
"1000112" [label="(Call,lb && n > GC_SIZE_MAX / lb)"];
"1000114" [label="(Call,n > GC_SIZE_MAX / lb)"];
"1000143" [label="(ControlStructure,if (((word)caller >= (word)GC_libpthread_start\n               && (word)caller < (word)GC_libpthread_end)\n              || ((word)caller >= (word)GC_libld_start\n                  && (word)caller < (word)GC_libld_end)))"];
"1000115" [label="(Identifier,n)"];
"1000187" [label="(MethodReturn,void *)"];
"1000116" [label="(Call,GC_SIZE_MAX / lb)"];
"1000179" [label="(Identifier,lb)"];
"1000111" [label="(ControlStructure,if (lb && n > GC_SIZE_MAX / lb))"];
"1000113" [label="(Identifier,lb)"];
"1000108" [label="(MethodParameterIn,size_t n)"];
"1000117" [label="(Identifier,GC_SIZE_MAX)"];
"1000176" -> "1000175"  [label="AST: "];
"1000176" -> "1000177"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000175" -> "1000176"  [label="CFG: "];
"1000176" -> "1000187"  [label="DDG: GC_malloc_uncollectable(n*lb)"];
"1000176" -> "1000187"  [label="DDG: n*lb"];
"1000176" -> "1000175"  [label="DDG: GC_malloc_uncollectable(n*lb)"];
"1000177" -> "1000176"  [label="DDG: n"];
"1000177" -> "1000176"  [label="DDG: lb"];
"1000177" -> "1000179"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000179" -> "1000177"  [label="AST: "];
"1000177" -> "1000187"  [label="DDG: lb"];
"1000177" -> "1000187"  [label="DDG: n"];
"1000114" -> "1000177"  [label="DDG: n"];
"1000108" -> "1000177"  [label="DDG: n"];
"1000112" -> "1000177"  [label="DDG: lb"];
"1000109" -> "1000177"  [label="DDG: lb"];
"1000114" -> "1000112"  [label="AST: "];
"1000114" -> "1000116"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000114" -> "1000187"  [label="DDG: n"];
"1000114" -> "1000187"  [label="DDG: GC_SIZE_MAX / lb"];
"1000114" -> "1000112"  [label="DDG: n"];
"1000114" -> "1000112"  [label="DDG: GC_SIZE_MAX / lb"];
"1000108" -> "1000114"  [label="DDG: n"];
"1000116" -> "1000114"  [label="DDG: GC_SIZE_MAX"];
"1000116" -> "1000114"  [label="DDG: lb"];
"1000114" -> "1000184"  [label="DDG: n"];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000187"  [label="DDG: n"];
"1000108" -> "1000184"  [label="DDG: n"];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000116" -> "1000187"  [label="DDG: GC_SIZE_MAX"];
"1000116" -> "1000112"  [label="DDG: lb"];
"1000109" -> "1000116"  [label="DDG: lb"];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000187"  [label="DDG: lb"];
"1000109" -> "1000112"  [label="DDG: lb"];
"1000109" -> "1000184"  [label="DDG: lb"];
"1000112" -> "1000111"  [label="AST: "];
"1000112" -> "1000113"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000120" -> "1000112"  [label="CFG: "];
"1000124" -> "1000112"  [label="CFG: "];
"1000112" -> "1000187"  [label="DDG: lb && n > GC_SIZE_MAX / lb"];
"1000112" -> "1000187"  [label="DDG: n > GC_SIZE_MAX / lb"];
"1000112" -> "1000187"  [label="DDG: lb"];
"1000112" -> "1000184"  [label="DDG: lb"];
"1000175" -> "1000143"  [label="AST: "];
"1000187" -> "1000175"  [label="CFG: "];
"1000175" -> "1000187"  [label="DDG: <RET>"];
}
