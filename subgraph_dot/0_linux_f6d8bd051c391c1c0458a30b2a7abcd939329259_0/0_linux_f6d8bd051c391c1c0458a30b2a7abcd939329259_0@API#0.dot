digraph "0_linux_f6d8bd051c391c1c0458a30b2a7abcd939329259_0@API" {
"1000126" [label="(Call,newsk = dccp_create_openreq_child(sk, req, skb))"];
"1000128" [label="(Call,dccp_create_openreq_child(sk, req, skb))"];
"1000121" [label="(Call,inet_csk_route_req(sk, req))"];
"1000110" [label="(Call,sk_acceptq_is_full(sk))"];
"1000101" [label="(MethodParameterIn,struct sock *sk)"];
"1000103" [label="(MethodParameterIn,struct request_sock *req)"];
"1000102" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000133" [label="(Call,newsk == NULL)"];
"1000137" [label="(Call,sk_setup_caps(newsk, dst))"];
"1000142" [label="(Call,inet_sk(newsk))"];
"1000140" [label="(Call,newinet\t\t   = inet_sk(newsk))"];
"1000200" [label="(Call,dccp_sync_mss(newsk, dst_mtu(dst)))"];
"1000206" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000205" [label="(Call,__inet_inherit_port(sk, newsk) < 0)"];
"1000211" [label="(Call,sock_put(newsk))"];
"1000214" [label="(Call,__inet_hash_nolisten(newsk, NULL))"];
"1000217" [label="(Return,return newsk;)"];
"1000229" [label="(Call,sock_net(sk))"];
"1000228" [label="(Call,NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENDROPS))"];
"1000202" [label="(Call,dst_mtu(dst))"];
"1000176" [label="(Call,ireq->opt\t   = NULL)"];
"1000232" [label="(Return,return NULL;)"];
"1000214" [label="(Call,__inet_hash_nolisten(newsk, NULL))"];
"1000218" [label="(Identifier,newsk)"];
"1000142" [label="(Call,inet_sk(newsk))"];
"1000217" [label="(Return,return newsk;)"];
"1000118" [label="(Call,(dst = inet_csk_route_req(sk, req)) == NULL)"];
"1000183" [label="(Identifier,newinet)"];
"1000213" [label="(ControlStructure,goto exit;)"];
"1000130" [label="(Identifier,req)"];
"1000129" [label="(Identifier,sk)"];
"1000232" [label="(Return,return NULL;)"];
"1000111" [label="(Identifier,sk)"];
"1000139" [label="(Identifier,dst)"];
"1000119" [label="(Call,dst = inet_csk_route_req(sk, req))"];
"1000200" [label="(Call,dccp_sync_mss(newsk, dst_mtu(dst)))"];
"1000211" [label="(Call,sock_put(newsk))"];
"1000207" [label="(Identifier,sk)"];
"1000202" [label="(Call,dst_mtu(dst))"];
"1000216" [label="(Identifier,NULL)"];
"1000208" [label="(Identifier,newsk)"];
"1000212" [label="(Identifier,newsk)"];
"1000203" [label="(Identifier,dst)"];
"1000105" [label="(Block,)"];
"1000132" [label="(ControlStructure,if (newsk == NULL))"];
"1000230" [label="(Identifier,sk)"];
"1000201" [label="(Identifier,newsk)"];
"1000103" [label="(MethodParameterIn,struct request_sock *req)"];
"1000143" [label="(Identifier,newsk)"];
"1000210" [label="(Block,)"];
"1000134" [label="(Identifier,newsk)"];
"1000122" [label="(Identifier,sk)"];
"1000115" [label="(Call,dst == NULL)"];
"1000180" [label="(Identifier,NULL)"];
"1000140" [label="(Call,newinet\t\t   = inet_sk(newsk))"];
"1000104" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000102" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000206" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000126" [label="(Call,newsk = dccp_create_openreq_child(sk, req, skb))"];
"1000185" [label="(Call,inet_iif(skb))"];
"1000141" [label="(Identifier,newinet)"];
"1000176" [label="(Call,ireq->opt\t   = NULL)"];
"1000110" [label="(Call,sk_acceptq_is_full(sk))"];
"1000215" [label="(Identifier,newsk)"];
"1000135" [label="(Identifier,NULL)"];
"1000123" [label="(Identifier,req)"];
"1000128" [label="(Call,dccp_create_openreq_child(sk, req, skb))"];
"1000136" [label="(ControlStructure,goto exit_nonewsk;)"];
"1000209" [label="(Literal,0)"];
"1000233" [label="(Identifier,NULL)"];
"1000116" [label="(Identifier,dst)"];
"1000133" [label="(Call,newsk == NULL)"];
"1000228" [label="(Call,NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENDROPS))"];
"1000192" [label="(Call,ip_hdr(skb))"];
"1000109" [label="(ControlStructure,if (sk_acceptq_is_full(sk)))"];
"1000177" [label="(Call,ireq->opt)"];
"1000231" [label="(Identifier,LINUX_MIB_LISTENDROPS)"];
"1000138" [label="(Identifier,newsk)"];
"1000127" [label="(Identifier,newsk)"];
"1000205" [label="(Call,__inet_inherit_port(sk, newsk) < 0)"];
"1000204" [label="(ControlStructure,if (__inet_inherit_port(sk, newsk) < 0))"];
"1000131" [label="(Identifier,skb)"];
"1000112" [label="(ControlStructure,goto exit_overflow;)"];
"1000234" [label="(MethodReturn,struct sock *)"];
"1000121" [label="(Call,inet_csk_route_req(sk, req))"];
"1000137" [label="(Call,sk_setup_caps(newsk, dst))"];
"1000146" [label="(Call,inet_rsk(req))"];
"1000101" [label="(MethodParameterIn,struct sock *sk)"];
"1000221" [label="(Call,sock_net(sk))"];
"1000145" [label="(Identifier,ireq)"];
"1000229" [label="(Call,sock_net(sk))"];
"1000126" -> "1000105"  [label="AST: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000128" -> "1000126"  [label="AST: "];
"1000134" -> "1000126"  [label="CFG: "];
"1000126" -> "1000234"  [label="DDG: dccp_create_openreq_child(sk, req, skb)"];
"1000128" -> "1000126"  [label="DDG: sk"];
"1000128" -> "1000126"  [label="DDG: req"];
"1000128" -> "1000126"  [label="DDG: skb"];
"1000126" -> "1000133"  [label="DDG: newsk"];
"1000128" -> "1000131"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000128"  [label="AST: "];
"1000131" -> "1000128"  [label="AST: "];
"1000128" -> "1000234"  [label="DDG: req"];
"1000128" -> "1000234"  [label="DDG: skb"];
"1000121" -> "1000128"  [label="DDG: sk"];
"1000121" -> "1000128"  [label="DDG: req"];
"1000110" -> "1000128"  [label="DDG: sk"];
"1000101" -> "1000128"  [label="DDG: sk"];
"1000103" -> "1000128"  [label="DDG: req"];
"1000102" -> "1000128"  [label="DDG: skb"];
"1000128" -> "1000146"  [label="DDG: req"];
"1000128" -> "1000185"  [label="DDG: skb"];
"1000128" -> "1000206"  [label="DDG: sk"];
"1000128" -> "1000229"  [label="DDG: sk"];
"1000121" -> "1000119"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000121" -> "1000234"  [label="DDG: req"];
"1000121" -> "1000118"  [label="DDG: sk"];
"1000121" -> "1000118"  [label="DDG: req"];
"1000121" -> "1000119"  [label="DDG: sk"];
"1000121" -> "1000119"  [label="DDG: req"];
"1000110" -> "1000121"  [label="DDG: sk"];
"1000101" -> "1000121"  [label="DDG: sk"];
"1000103" -> "1000121"  [label="DDG: req"];
"1000121" -> "1000229"  [label="DDG: sk"];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000111"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000112" -> "1000110"  [label="CFG: "];
"1000116" -> "1000110"  [label="CFG: "];
"1000110" -> "1000234"  [label="DDG: sk_acceptq_is_full(sk)"];
"1000101" -> "1000110"  [label="DDG: sk"];
"1000110" -> "1000221"  [label="DDG: sk"];
"1000110" -> "1000229"  [label="DDG: sk"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000234"  [label="DDG: sk"];
"1000101" -> "1000206"  [label="DDG: sk"];
"1000101" -> "1000221"  [label="DDG: sk"];
"1000101" -> "1000229"  [label="DDG: sk"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000234"  [label="DDG: req"];
"1000103" -> "1000146"  [label="DDG: req"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000234"  [label="DDG: skb"];
"1000102" -> "1000185"  [label="DDG: skb"];
"1000102" -> "1000192"  [label="DDG: skb"];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000136" -> "1000133"  [label="CFG: "];
"1000138" -> "1000133"  [label="CFG: "];
"1000133" -> "1000234"  [label="DDG: newsk"];
"1000133" -> "1000234"  [label="DDG: newsk == NULL"];
"1000133" -> "1000234"  [label="DDG: NULL"];
"1000115" -> "1000133"  [label="DDG: NULL"];
"1000118" -> "1000133"  [label="DDG: NULL"];
"1000133" -> "1000137"  [label="DDG: newsk"];
"1000133" -> "1000176"  [label="DDG: NULL"];
"1000133" -> "1000214"  [label="DDG: NULL"];
"1000133" -> "1000232"  [label="DDG: NULL"];
"1000137" -> "1000105"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000141" -> "1000137"  [label="CFG: "];
"1000137" -> "1000234"  [label="DDG: sk_setup_caps(newsk, dst)"];
"1000119" -> "1000137"  [label="DDG: dst"];
"1000115" -> "1000137"  [label="DDG: dst"];
"1000104" -> "1000137"  [label="DDG: dst"];
"1000137" -> "1000142"  [label="DDG: newsk"];
"1000137" -> "1000202"  [label="DDG: dst"];
"1000142" -> "1000140"  [label="AST: "];
"1000142" -> "1000143"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000142" -> "1000140"  [label="DDG: newsk"];
"1000142" -> "1000200"  [label="DDG: newsk"];
"1000140" -> "1000105"  [label="AST: "];
"1000141" -> "1000140"  [label="AST: "];
"1000145" -> "1000140"  [label="CFG: "];
"1000140" -> "1000234"  [label="DDG: inet_sk(newsk)"];
"1000140" -> "1000234"  [label="DDG: newinet"];
"1000200" -> "1000105"  [label="AST: "];
"1000200" -> "1000202"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000202" -> "1000200"  [label="AST: "];
"1000207" -> "1000200"  [label="CFG: "];
"1000200" -> "1000234"  [label="DDG: dccp_sync_mss(newsk, dst_mtu(dst))"];
"1000200" -> "1000234"  [label="DDG: dst_mtu(dst)"];
"1000202" -> "1000200"  [label="DDG: dst"];
"1000200" -> "1000206"  [label="DDG: newsk"];
"1000206" -> "1000205"  [label="AST: "];
"1000206" -> "1000208"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000206"  [label="AST: "];
"1000209" -> "1000206"  [label="CFG: "];
"1000206" -> "1000234"  [label="DDG: sk"];
"1000206" -> "1000205"  [label="DDG: sk"];
"1000206" -> "1000205"  [label="DDG: newsk"];
"1000206" -> "1000211"  [label="DDG: newsk"];
"1000206" -> "1000214"  [label="DDG: newsk"];
"1000206" -> "1000229"  [label="DDG: sk"];
"1000205" -> "1000204"  [label="AST: "];
"1000205" -> "1000209"  [label="CFG: "];
"1000209" -> "1000205"  [label="AST: "];
"1000212" -> "1000205"  [label="CFG: "];
"1000215" -> "1000205"  [label="CFG: "];
"1000205" -> "1000234"  [label="DDG: __inet_inherit_port(sk, newsk)"];
"1000205" -> "1000234"  [label="DDG: __inet_inherit_port(sk, newsk) < 0"];
"1000211" -> "1000210"  [label="AST: "];
"1000211" -> "1000212"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000213" -> "1000211"  [label="CFG: "];
"1000211" -> "1000234"  [label="DDG: newsk"];
"1000211" -> "1000234"  [label="DDG: sock_put(newsk)"];
"1000214" -> "1000105"  [label="AST: "];
"1000214" -> "1000216"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000216" -> "1000214"  [label="AST: "];
"1000218" -> "1000214"  [label="CFG: "];
"1000214" -> "1000234"  [label="DDG: NULL"];
"1000214" -> "1000234"  [label="DDG: __inet_hash_nolisten(newsk, NULL)"];
"1000214" -> "1000234"  [label="DDG: newsk"];
"1000214" -> "1000217"  [label="DDG: newsk"];
"1000217" -> "1000105"  [label="AST: "];
"1000217" -> "1000218"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000234" -> "1000217"  [label="CFG: "];
"1000217" -> "1000234"  [label="DDG: <RET>"];
"1000218" -> "1000217"  [label="DDG: newsk"];
"1000229" -> "1000228"  [label="AST: "];
"1000229" -> "1000230"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000231" -> "1000229"  [label="CFG: "];
"1000229" -> "1000234"  [label="DDG: sk"];
"1000229" -> "1000228"  [label="DDG: sk"];
"1000221" -> "1000229"  [label="DDG: sk"];
"1000228" -> "1000105"  [label="AST: "];
"1000228" -> "1000231"  [label="CFG: "];
"1000231" -> "1000228"  [label="AST: "];
"1000233" -> "1000228"  [label="CFG: "];
"1000228" -> "1000234"  [label="DDG: NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENDROPS)"];
"1000228" -> "1000234"  [label="DDG: sock_net(sk)"];
"1000228" -> "1000234"  [label="DDG: LINUX_MIB_LISTENDROPS"];
"1000202" -> "1000203"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000202" -> "1000234"  [label="DDG: dst"];
"1000104" -> "1000202"  [label="DDG: dst"];
"1000176" -> "1000105"  [label="AST: "];
"1000176" -> "1000180"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000180" -> "1000176"  [label="AST: "];
"1000183" -> "1000176"  [label="CFG: "];
"1000176" -> "1000234"  [label="DDG: NULL"];
"1000176" -> "1000234"  [label="DDG: ireq->opt"];
"1000232" -> "1000105"  [label="AST: "];
"1000232" -> "1000233"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000234" -> "1000232"  [label="CFG: "];
"1000232" -> "1000234"  [label="DDG: <RET>"];
"1000233" -> "1000232"  [label="DDG: NULL"];
"1000115" -> "1000232"  [label="DDG: NULL"];
"1000118" -> "1000232"  [label="DDG: NULL"];
}
