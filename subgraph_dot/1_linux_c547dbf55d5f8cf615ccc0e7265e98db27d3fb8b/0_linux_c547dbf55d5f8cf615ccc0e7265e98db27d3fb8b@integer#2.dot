digraph "0_linux_c547dbf55d5f8cf615ccc0e7265e98db27d3fb8b@integer" {
"1000189" [label="(Call,skb_shinfo(skb)->gso_size = (mtu - fragheaderlen -\n\t\t\t\t\t     sizeof(struct frag_hdr)) & ~7)"];
"1000194" [label="(Call,(mtu - fragheaderlen -\n\t\t\t\t\t     sizeof(struct frag_hdr)) & ~7)"];
"1000195" [label="(Call,mtu - fragheaderlen -\n\t\t\t\t\t     sizeof(struct frag_hdr))"];
"1000114" [label="(MethodParameterIn,int mtu)"];
"1000197" [label="(Call,fragheaderlen -\n\t\t\t\t\t     sizeof(struct frag_hdr))"];
"1000112" [label="(MethodParameterIn,int fragheaderlen)"];
"1000157" [label="(Call,skb_put(skb,fragheaderlen + transhdrlen))"];
"1000190" [label="(Call,skb_shinfo(skb)->gso_size)"];
"1000112" [label="(MethodParameterIn,int fragheaderlen)"];
"1000136" [label="(Call,hh_len + fragheaderlen + transhdrlen + 20)"];
"1000114" [label="(MethodParameterIn,int mtu)"];
"1000205" [label="(Identifier,skb)"];
"1000159" [label="(Call,fragheaderlen + transhdrlen)"];
"1000199" [label="(Call,sizeof(struct frag_hdr))"];
"1000138" [label="(Call,fragheaderlen + transhdrlen + 20)"];
"1000194" [label="(Call,(mtu - fragheaderlen -\n\t\t\t\t\t     sizeof(struct frag_hdr)) & ~7)"];
"1000235" [label="(MethodReturn,static inline int)"];
"1000196" [label="(Identifier,mtu)"];
"1000134" [label="(Call,sock_alloc_send_skb(sk,\n \t\t\thh_len + fragheaderlen + transhdrlen + 20,\n \t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000189" [label="(Call,skb_shinfo(skb)->gso_size = (mtu - fragheaderlen -\n\t\t\t\t\t     sizeof(struct frag_hdr)) & ~7)"];
"1000195" [label="(Call,mtu - fragheaderlen -\n\t\t\t\t\t     sizeof(struct frag_hdr))"];
"1000164" [label="(Call,skb->transport_header = skb->network_header + fragheaderlen)"];
"1000201" [label="(Identifier,~7)"];
"1000198" [label="(Identifier,fragheaderlen)"];
"1000130" [label="(Block,)"];
"1000197" [label="(Call,fragheaderlen -\n\t\t\t\t\t     sizeof(struct frag_hdr))"];
"1000168" [label="(Call,skb->network_header + fragheaderlen)"];
"1000189" -> "1000130"  [label="AST: "];
"1000189" -> "1000194"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000194" -> "1000189"  [label="AST: "];
"1000205" -> "1000189"  [label="CFG: "];
"1000189" -> "1000235"  [label="DDG: (mtu - fragheaderlen -\n\t\t\t\t\t     sizeof(struct frag_hdr)) & ~7"];
"1000189" -> "1000235"  [label="DDG: skb_shinfo(skb)->gso_size"];
"1000194" -> "1000189"  [label="DDG: mtu - fragheaderlen -\n\t\t\t\t\t     sizeof(struct frag_hdr)"];
"1000194" -> "1000189"  [label="DDG: ~7"];
"1000194" -> "1000201"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000201" -> "1000194"  [label="AST: "];
"1000194" -> "1000235"  [label="DDG: ~7"];
"1000194" -> "1000235"  [label="DDG: mtu - fragheaderlen -\n\t\t\t\t\t     sizeof(struct frag_hdr)"];
"1000195" -> "1000194"  [label="DDG: mtu"];
"1000195" -> "1000194"  [label="DDG: fragheaderlen -\n\t\t\t\t\t     sizeof(struct frag_hdr)"];
"1000195" -> "1000197"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000197" -> "1000195"  [label="AST: "];
"1000201" -> "1000195"  [label="CFG: "];
"1000195" -> "1000235"  [label="DDG: fragheaderlen -\n\t\t\t\t\t     sizeof(struct frag_hdr)"];
"1000195" -> "1000235"  [label="DDG: mtu"];
"1000114" -> "1000195"  [label="DDG: mtu"];
"1000197" -> "1000195"  [label="DDG: fragheaderlen"];
"1000114" -> "1000106"  [label="AST: "];
"1000114" -> "1000235"  [label="DDG: mtu"];
"1000197" -> "1000199"  [label="CFG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000199" -> "1000197"  [label="AST: "];
"1000197" -> "1000235"  [label="DDG: fragheaderlen"];
"1000112" -> "1000197"  [label="DDG: fragheaderlen"];
"1000112" -> "1000106"  [label="AST: "];
"1000112" -> "1000235"  [label="DDG: fragheaderlen"];
"1000112" -> "1000134"  [label="DDG: fragheaderlen"];
"1000112" -> "1000136"  [label="DDG: fragheaderlen"];
"1000112" -> "1000138"  [label="DDG: fragheaderlen"];
"1000112" -> "1000157"  [label="DDG: fragheaderlen"];
"1000112" -> "1000159"  [label="DDG: fragheaderlen"];
"1000112" -> "1000164"  [label="DDG: fragheaderlen"];
"1000112" -> "1000168"  [label="DDG: fragheaderlen"];
}
