digraph "0_linux_b22f5126a24b3b2f15448c3f2a254fc10cbc2b92_1@pointer" {
"1000181" [label="(Call,old_state = ct->proto.dccp.state)"];
"1000205" [label="(Call,old_state == CT_DCCP_TIMEWAIT)"];
"1000204" [label="(Call,old_state == CT_DCCP_TIMEWAIT &&\n\t\t    role == CT_DCCP_ROLE_SERVER)"];
"1000436" [label="(Call,new_state != old_state)"];
"1000238" [label="(Call,old_state == CT_DCCP_REQUEST)"];
"1000255" [label="(Call,old_state == CT_DCCP_RESPOND)"];
"1000254" [label="(Call,old_state == CT_DCCP_RESPOND &&\n\t\t    type == DCCP_PKT_ACK &&\n\t\t    dccp_ack_seq(dh) == ct->proto.dccp.handshake_seq)"];
"1000206" [label="(Identifier,old_state)"];
"1000111" [label="(Block,)"];
"1000437" [label="(Identifier,new_state)"];
"1000443" [label="(Identifier,ct)"];
"1000204" [label="(Call,old_state == CT_DCCP_TIMEWAIT &&\n\t\t    role == CT_DCCP_ROLE_SERVER)"];
"1000182" [label="(Identifier,old_state)"];
"1000235" [label="(ControlStructure,break;)"];
"1000237" [label="(ControlStructure,if (old_state == CT_DCCP_REQUEST))"];
"1000435" [label="(ControlStructure,if (new_state != old_state))"];
"1000278" [label="(ControlStructure,break;)"];
"1000251" [label="(ControlStructure,break;)"];
"1000451" [label="(MethodReturn,static int)"];
"1000205" [label="(Call,old_state == CT_DCCP_TIMEWAIT)"];
"1000240" [label="(Identifier,CT_DCCP_REQUEST)"];
"1000256" [label="(Identifier,old_state)"];
"1000253" [label="(ControlStructure,if (old_state == CT_DCCP_RESPOND &&\n\t\t    type == DCCP_PKT_ACK &&\n\t\t    dccp_ack_seq(dh) == ct->proto.dccp.handshake_seq))"];
"1000207" [label="(Identifier,CT_DCCP_TIMEWAIT)"];
"1000440" [label="(Identifier,IPCT_PROTOINFO)"];
"1000258" [label="(Call,type == DCCP_PKT_ACK &&\n\t\t    dccp_ack_seq(dh) == ct->proto.dccp.handshake_seq)"];
"1000255" [label="(Call,old_state == CT_DCCP_RESPOND)"];
"1000191" [label="(Identifier,new_state)"];
"1000190" [label="(Call,new_state = dccp_state_table[role][type][old_state])"];
"1000254" [label="(Call,old_state == CT_DCCP_RESPOND &&\n\t\t    type == DCCP_PKT_ACK &&\n\t\t    dccp_ack_seq(dh) == ct->proto.dccp.handshake_seq)"];
"1000260" [label="(Identifier,type)"];
"1000208" [label="(Call,role == CT_DCCP_ROLE_SERVER)"];
"1000257" [label="(Identifier,CT_DCCP_RESPOND)"];
"1000238" [label="(Call,old_state == CT_DCCP_REQUEST)"];
"1000339" [label="(Call,new_state = CT_DCCP_RESPOND)"];
"1000239" [label="(Identifier,old_state)"];
"1000217" [label="(Identifier,ct)"];
"1000183" [label="(Call,ct->proto.dccp.state)"];
"1000273" [label="(Identifier,IPS_ASSURED_BIT)"];
"1000181" [label="(Call,old_state = ct->proto.dccp.state)"];
"1000203" [label="(ControlStructure,if (old_state == CT_DCCP_TIMEWAIT &&\n\t\t    role == CT_DCCP_ROLE_SERVER))"];
"1000245" [label="(Identifier,ct)"];
"1000209" [label="(Identifier,role)"];
"1000436" [label="(Call,new_state != old_state)"];
"1000438" [label="(Identifier,old_state)"];
"1000181" -> "1000111"  [label="AST: "];
"1000181" -> "1000183"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000183" -> "1000181"  [label="AST: "];
"1000191" -> "1000181"  [label="CFG: "];
"1000181" -> "1000451"  [label="DDG: old_state"];
"1000181" -> "1000451"  [label="DDG: ct->proto.dccp.state"];
"1000181" -> "1000205"  [label="DDG: old_state"];
"1000181" -> "1000238"  [label="DDG: old_state"];
"1000181" -> "1000255"  [label="DDG: old_state"];
"1000181" -> "1000436"  [label="DDG: old_state"];
"1000205" -> "1000204"  [label="AST: "];
"1000205" -> "1000207"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000207" -> "1000205"  [label="AST: "];
"1000209" -> "1000205"  [label="CFG: "];
"1000204" -> "1000205"  [label="CFG: "];
"1000205" -> "1000451"  [label="DDG: CT_DCCP_TIMEWAIT"];
"1000205" -> "1000204"  [label="DDG: old_state"];
"1000205" -> "1000204"  [label="DDG: CT_DCCP_TIMEWAIT"];
"1000205" -> "1000436"  [label="DDG: old_state"];
"1000204" -> "1000203"  [label="AST: "];
"1000204" -> "1000208"  [label="CFG: "];
"1000208" -> "1000204"  [label="AST: "];
"1000217" -> "1000204"  [label="CFG: "];
"1000235" -> "1000204"  [label="CFG: "];
"1000204" -> "1000451"  [label="DDG: role == CT_DCCP_ROLE_SERVER"];
"1000204" -> "1000451"  [label="DDG: old_state == CT_DCCP_TIMEWAIT"];
"1000204" -> "1000451"  [label="DDG: old_state == CT_DCCP_TIMEWAIT &&\n\t\t    role == CT_DCCP_ROLE_SERVER"];
"1000208" -> "1000204"  [label="DDG: role"];
"1000208" -> "1000204"  [label="DDG: CT_DCCP_ROLE_SERVER"];
"1000436" -> "1000435"  [label="AST: "];
"1000436" -> "1000438"  [label="CFG: "];
"1000437" -> "1000436"  [label="AST: "];
"1000438" -> "1000436"  [label="AST: "];
"1000440" -> "1000436"  [label="CFG: "];
"1000443" -> "1000436"  [label="CFG: "];
"1000436" -> "1000451"  [label="DDG: new_state != old_state"];
"1000436" -> "1000451"  [label="DDG: new_state"];
"1000436" -> "1000451"  [label="DDG: old_state"];
"1000190" -> "1000436"  [label="DDG: new_state"];
"1000339" -> "1000436"  [label="DDG: new_state"];
"1000238" -> "1000436"  [label="DDG: old_state"];
"1000255" -> "1000436"  [label="DDG: old_state"];
"1000238" -> "1000237"  [label="AST: "];
"1000238" -> "1000240"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="AST: "];
"1000245" -> "1000238"  [label="CFG: "];
"1000251" -> "1000238"  [label="CFG: "];
"1000238" -> "1000451"  [label="DDG: CT_DCCP_REQUEST"];
"1000238" -> "1000451"  [label="DDG: old_state == CT_DCCP_REQUEST"];
"1000255" -> "1000254"  [label="AST: "];
"1000255" -> "1000257"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000257" -> "1000255"  [label="AST: "];
"1000260" -> "1000255"  [label="CFG: "];
"1000254" -> "1000255"  [label="CFG: "];
"1000255" -> "1000451"  [label="DDG: CT_DCCP_RESPOND"];
"1000255" -> "1000254"  [label="DDG: old_state"];
"1000255" -> "1000254"  [label="DDG: CT_DCCP_RESPOND"];
"1000254" -> "1000253"  [label="AST: "];
"1000254" -> "1000258"  [label="CFG: "];
"1000258" -> "1000254"  [label="AST: "];
"1000273" -> "1000254"  [label="CFG: "];
"1000278" -> "1000254"  [label="CFG: "];
"1000254" -> "1000451"  [label="DDG: old_state == CT_DCCP_RESPOND"];
"1000254" -> "1000451"  [label="DDG: old_state == CT_DCCP_RESPOND &&\n\t\t    type == DCCP_PKT_ACK &&\n\t\t    dccp_ack_seq(dh) == ct->proto.dccp.handshake_seq"];
"1000254" -> "1000451"  [label="DDG: type == DCCP_PKT_ACK &&\n\t\t    dccp_ack_seq(dh) == ct->proto.dccp.handshake_seq"];
"1000258" -> "1000254"  [label="DDG: type == DCCP_PKT_ACK"];
"1000258" -> "1000254"  [label="DDG: dccp_ack_seq(dh) == ct->proto.dccp.handshake_seq"];
}
