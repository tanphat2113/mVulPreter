digraph "0_linux_232cd35d0804cc241eb887bb8d4d9b3b9881c64a@pointer" {
"1000464" [label="(Call,dst_xfrm(&rt->dst))"];
"1000268" [label="(Call,dst_allfrag(&rt->dst))"];
"1000463" [label="(Call,!dst_xfrm(&rt->dst))"];
"1000462" [label="(Call,!dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk))"];
"1000452" [label="(Call,(rt->dst.dev->features & NETIF_F_UFO) && !dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk))"];
"1000446" [label="(Call,(sk->sk_protocol == IPPROTO_UDP) &&\n\t    (rt->dst.dev->features & NETIF_F_UFO) && !dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk))"];
"1000435" [label="(Call,(((length + fragheaderlen) > mtu) ||\n\t     (skb && skb_is_gso(skb))) &&\n\t    (sk->sk_protocol == IPPROTO_UDP) &&\n\t    (rt->dst.dev->features & NETIF_F_UFO) && !dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk))"];
"1000465" [label="(Call,&rt->dst)"];
"1001100" [label="(MethodReturn,static int)"];
"1000464" [label="(Call,dst_xfrm(&rt->dst))"];
"1000267" [label="(Call,dst_allfrag(&rt->dst) ?\n\t\t      sizeof(struct frag_hdr) : 0)"];
"1000452" [label="(Call,(rt->dst.dev->features & NETIF_F_UFO) && !dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk))"];
"1000275" [label="(Literal,0)"];
"1000469" [label="(Call,(sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk))"];
"1000436" [label="(Call,((length + fragheaderlen) > mtu) ||\n\t     (skb && skb_is_gso(skb)))"];
"1000480" [label="(Identifier,err)"];
"1000463" [label="(Call,!dst_xfrm(&rt->dst))"];
"1000435" [label="(Call,(((length + fragheaderlen) > mtu) ||\n\t     (skb && skb_is_gso(skb))) &&\n\t    (sk->sk_protocol == IPPROTO_UDP) &&\n\t    (rt->dst.dev->features & NETIF_F_UFO) && !dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk))"];
"1000447" [label="(Call,sk->sk_protocol == IPPROTO_UDP)"];
"1000453" [label="(Call,rt->dst.dev->features & NETIF_F_UFO)"];
"1000269" [label="(Call,&rt->dst)"];
"1000472" [label="(Identifier,sk)"];
"1000501" [label="(Identifier,skb)"];
"1000446" [label="(Call,(sk->sk_protocol == IPPROTO_UDP) &&\n\t    (rt->dst.dev->features & NETIF_F_UFO) && !dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk))"];
"1000268" [label="(Call,dst_allfrag(&rt->dst))"];
"1000434" [label="(ControlStructure,if ((((length + fragheaderlen) > mtu) ||\n\t     (skb && skb_is_gso(skb))) &&\n\t    (sk->sk_protocol == IPPROTO_UDP) &&\n\t    (rt->dst.dev->features & NETIF_F_UFO) && !dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk)))"];
"1000462" [label="(Call,!dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk))"];
"1000464" -> "1000463"  [label="AST: "];
"1000464" -> "1000465"  [label="CFG: "];
"1000465" -> "1000464"  [label="AST: "];
"1000463" -> "1000464"  [label="CFG: "];
"1000464" -> "1001100"  [label="DDG: &rt->dst"];
"1000464" -> "1000463"  [label="DDG: &rt->dst"];
"1000268" -> "1000464"  [label="DDG: &rt->dst"];
"1000268" -> "1000267"  [label="AST: "];
"1000268" -> "1000269"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000274" -> "1000268"  [label="CFG: "];
"1000275" -> "1000268"  [label="CFG: "];
"1000268" -> "1001100"  [label="DDG: &rt->dst"];
"1000463" -> "1000462"  [label="AST: "];
"1000472" -> "1000463"  [label="CFG: "];
"1000462" -> "1000463"  [label="CFG: "];
"1000463" -> "1001100"  [label="DDG: dst_xfrm(&rt->dst)"];
"1000463" -> "1000462"  [label="DDG: dst_xfrm(&rt->dst)"];
"1000462" -> "1000452"  [label="AST: "];
"1000462" -> "1000469"  [label="CFG: "];
"1000469" -> "1000462"  [label="AST: "];
"1000452" -> "1000462"  [label="CFG: "];
"1000462" -> "1001100"  [label="DDG: !dst_xfrm(&rt->dst)"];
"1000462" -> "1001100"  [label="DDG: (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk)"];
"1000462" -> "1000452"  [label="DDG: !dst_xfrm(&rt->dst)"];
"1000462" -> "1000452"  [label="DDG: (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk)"];
"1000469" -> "1000462"  [label="DDG: sk->sk_type == SOCK_DGRAM"];
"1000469" -> "1000462"  [label="DDG: !udp_get_no_check6_tx(sk)"];
"1000452" -> "1000446"  [label="AST: "];
"1000452" -> "1000453"  [label="CFG: "];
"1000453" -> "1000452"  [label="AST: "];
"1000446" -> "1000452"  [label="CFG: "];
"1000452" -> "1001100"  [label="DDG: rt->dst.dev->features & NETIF_F_UFO"];
"1000452" -> "1001100"  [label="DDG: !dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk)"];
"1000452" -> "1000446"  [label="DDG: rt->dst.dev->features & NETIF_F_UFO"];
"1000452" -> "1000446"  [label="DDG: !dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk)"];
"1000453" -> "1000452"  [label="DDG: rt->dst.dev->features"];
"1000453" -> "1000452"  [label="DDG: NETIF_F_UFO"];
"1000446" -> "1000435"  [label="AST: "];
"1000446" -> "1000447"  [label="CFG: "];
"1000447" -> "1000446"  [label="AST: "];
"1000435" -> "1000446"  [label="CFG: "];
"1000446" -> "1001100"  [label="DDG: (rt->dst.dev->features & NETIF_F_UFO) && !dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk)"];
"1000446" -> "1001100"  [label="DDG: sk->sk_protocol == IPPROTO_UDP"];
"1000446" -> "1000435"  [label="DDG: sk->sk_protocol == IPPROTO_UDP"];
"1000446" -> "1000435"  [label="DDG: (rt->dst.dev->features & NETIF_F_UFO) && !dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk)"];
"1000447" -> "1000446"  [label="DDG: sk->sk_protocol"];
"1000447" -> "1000446"  [label="DDG: IPPROTO_UDP"];
"1000435" -> "1000434"  [label="AST: "];
"1000435" -> "1000436"  [label="CFG: "];
"1000436" -> "1000435"  [label="AST: "];
"1000480" -> "1000435"  [label="CFG: "];
"1000501" -> "1000435"  [label="CFG: "];
"1000435" -> "1001100"  [label="DDG: ((length + fragheaderlen) > mtu) ||\n\t     (skb && skb_is_gso(skb))"];
"1000435" -> "1001100"  [label="DDG: (sk->sk_protocol == IPPROTO_UDP) &&\n\t    (rt->dst.dev->features & NETIF_F_UFO) && !dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk)"];
"1000435" -> "1001100"  [label="DDG: (((length + fragheaderlen) > mtu) ||\n\t     (skb && skb_is_gso(skb))) &&\n\t    (sk->sk_protocol == IPPROTO_UDP) &&\n\t    (rt->dst.dev->features & NETIF_F_UFO) && !dst_xfrm(&rt->dst) &&\n\t    (sk->sk_type == SOCK_DGRAM) && !udp_get_no_check6_tx(sk)"];
"1000436" -> "1000435"  [label="DDG: (length + fragheaderlen) > mtu"];
"1000436" -> "1000435"  [label="DDG: skb && skb_is_gso(skb)"];
}
