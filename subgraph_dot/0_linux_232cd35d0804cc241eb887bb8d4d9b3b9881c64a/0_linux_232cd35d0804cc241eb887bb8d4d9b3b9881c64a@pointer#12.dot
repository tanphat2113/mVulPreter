digraph "0_linux_232cd35d0804cc241eb887bb8d4d9b3b9881c64a@pointer" {
"1000120" [label="(MethodParameterIn,int getfrag(void *from, char *to, int offset,\n\t\t\t\t\t int len, int odd, struct sk_buff *skb))"];
"1000481" [label="(Call,ip6_ufo_append_data(sk, queue, getfrag, from, length,\n\t\t\t\t\t  hh_len, fragheaderlen, exthdrlen,\n\t\t\t\t\t  transhdrlen, mtu, flags, fl6))"];
"1000479" [label="(Call,err = ip6_ufo_append_data(sk, queue, getfrag, from, length,\n\t\t\t\t\t  hh_len, fragheaderlen, exthdrlen,\n\t\t\t\t\t  transhdrlen, mtu, flags, fl6))"];
"1001098" [label="(Return,return err;)"];
"1001086" [label="(Call,cork->length -= length)"];
"1001092" [label="(Call,sock_net(sk))"];
"1001091" [label="(Call,IP6_INC_STATS(sock_net(sk), rt->rt6i_idev, IPSTATS_MIB_OUTDISCARDS))"];
"1000493" [label="(Identifier,fl6)"];
"1000116" [label="(MethodParameterIn,struct sk_buff_head *queue)"];
"1001100" [label="(MethodReturn,static int)"];
"1000124" [label="(MethodParameterIn,unsigned int flags)"];
"1001092" [label="(Call,sock_net(sk))"];
"1000951" [label="(Call,err = -ENOMEM)"];
"1001087" [label="(Call,cork->length)"];
"1001094" [label="(Call,rt->rt6i_idev)"];
"1001081" [label="(Call,err = -EFAULT)"];
"1000488" [label="(Identifier,fragheaderlen)"];
"1000114" [label="(MethodParameterIn,struct sock *sk)"];
"1000491" [label="(Identifier,mtu)"];
"1000476" [label="(Call,udp_get_no_check6_tx(sk))"];
"1000858" [label="(Call,err = -EFAULT)"];
"1001097" [label="(Identifier,IPSTATS_MIB_OUTDISCARDS)"];
"1000480" [label="(Identifier,err)"];
"1000123" [label="(MethodParameterIn,int transhdrlen)"];
"1000492" [label="(Identifier,flags)"];
"1000406" [label="(Call,sock_tx_timestamp(sk, sockc->tsflags, &tx_flags))"];
"1000897" [label="(Call,copy > length)"];
"1000115" [label="(MethodParameterIn,struct flowi6 *fl6)"];
"1000513" [label="(Call,cork->length <= mtu)"];
"1000484" [label="(Identifier,getfrag)"];
"1000182" [label="(Call,skb_peek_tail(queue))"];
"1000726" [label="(Call,sock_wmalloc(sk,\n\t\t\t\t\t\t\t   alloclen + hh_len, 1,\n\t\t\t\t\t\t\t   sk->sk_allocation))"];
"1000429" [label="(Call,cork->length += length)"];
"1000120" [label="(MethodParameterIn,int getfrag(void *from, char *to, int offset,\n\t\t\t\t\t int len, int odd, struct sk_buff *skb))"];
"1001091" [label="(Call,IP6_INC_STATS(sock_net(sk), rt->rt6i_idev, IPSTATS_MIB_OUTDISCARDS))"];
"1000489" [label="(Identifier,exthdrlen)"];
"1000369" [label="(Call,length <= mtu - headersize)"];
"1000485" [label="(Identifier,from)"];
"1000138" [label="(Call,exthdrlen = 0)"];
"1000127" [label="(Block,)"];
"1000687" [label="(Call,err = -EINVAL)"];
"1000739" [label="(Call,err = -ENOBUFS)"];
"1000487" [label="(Identifier,hh_len)"];
"1000376" [label="(Call,flags & MSG_MORE)"];
"1000478" [label="(Block,)"];
"1001098" [label="(Return,return err;)"];
"1000937" [label="(Call,err = -EFAULT)"];
"1000593" [label="(Call,cork->length <= mtu)"];
"1001095" [label="(Identifier,rt)"];
"1000121" [label="(MethodParameterIn,void *from)"];
"1000490" [label="(Identifier,transhdrlen)"];
"1000483" [label="(Identifier,queue)"];
"1000215" [label="(Call,hh_len = LL_RESERVED_SPACE(rt->dst.dev))"];
"1000437" [label="(Call,(length + fragheaderlen) > mtu)"];
"1000482" [label="(Identifier,sk)"];
"1000479" [label="(Call,err = ip6_ufo_append_data(sk, queue, getfrag, from, length,\n\t\t\t\t\t  hh_len, fragheaderlen, exthdrlen,\n\t\t\t\t\t  transhdrlen, mtu, flags, fl6))"];
"1000530" [label="(Call,copy < length)"];
"1001099" [label="(Identifier,err)"];
"1001086" [label="(Call,cork->length -= length)"];
"1000122" [label="(MethodParameterIn,int length)"];
"1000317" [label="(Call,ip6_sk_ignore_df(sk))"];
"1000495" [label="(Identifier,err)"];
"1000188" [label="(Call,exthdrlen = opt ? opt->opt_flen : 0)"];
"1000355" [label="(Call,transhdrlen && sk->sk_protocol == IPPROTO_UDP &&\n\t    headersize == sizeof(struct ipv6hdr) &&\n\t    length <= mtu - headersize &&\n\t    !(flags & MSG_MORE) &&\n\t    rt->dst.dev->features & (NETIF_F_IPV6_CSUM | NETIF_F_HW_CSUM))"];
"1000973" [label="(Call,err = -EMSGSIZE)"];
"1000246" [label="(Call,fragheaderlen -\n\t\t     sizeof(struct frag_hdr))"];
"1000957" [label="(Call,sk_page_frag_refill(sk, pfrag))"];
"1000486" [label="(Identifier,length)"];
"1000481" [label="(Call,ip6_ufo_append_data(sk, queue, getfrag, from, length,\n\t\t\t\t\t  hh_len, fragheaderlen, exthdrlen,\n\t\t\t\t\t  transhdrlen, mtu, flags, fl6))"];
"1001093" [label="(Identifier,sk)"];
"1000697" [label="(Call,sock_alloc_send_skb(sk,\n \t\t\t\t\t\talloclen + hh_len,\n\t\t\t\t\t\t(flags & MSG_DONTWAIT), &err))"];
"1001090" [label="(Identifier,length)"];
"1000120" -> "1000113"  [label="AST: "];
"1000120" -> "1001100"  [label="DDG: getfrag"];
"1000120" -> "1000481"  [label="DDG: getfrag"];
"1000481" -> "1000479"  [label="AST: "];
"1000481" -> "1000493"  [label="CFG: "];
"1000482" -> "1000481"  [label="AST: "];
"1000483" -> "1000481"  [label="AST: "];
"1000484" -> "1000481"  [label="AST: "];
"1000485" -> "1000481"  [label="AST: "];
"1000486" -> "1000481"  [label="AST: "];
"1000487" -> "1000481"  [label="AST: "];
"1000488" -> "1000481"  [label="AST: "];
"1000489" -> "1000481"  [label="AST: "];
"1000490" -> "1000481"  [label="AST: "];
"1000491" -> "1000481"  [label="AST: "];
"1000492" -> "1000481"  [label="AST: "];
"1000493" -> "1000481"  [label="AST: "];
"1000479" -> "1000481"  [label="CFG: "];
"1000481" -> "1001100"  [label="DDG: length"];
"1000481" -> "1001100"  [label="DDG: exthdrlen"];
"1000481" -> "1001100"  [label="DDG: fragheaderlen"];
"1000481" -> "1001100"  [label="DDG: queue"];
"1000481" -> "1001100"  [label="DDG: fl6"];
"1000481" -> "1001100"  [label="DDG: mtu"];
"1000481" -> "1001100"  [label="DDG: transhdrlen"];
"1000481" -> "1001100"  [label="DDG: flags"];
"1000481" -> "1001100"  [label="DDG: hh_len"];
"1000481" -> "1001100"  [label="DDG: from"];
"1000481" -> "1001100"  [label="DDG: getfrag"];
"1000481" -> "1001100"  [label="DDG: sk"];
"1000481" -> "1000479"  [label="DDG: exthdrlen"];
"1000481" -> "1000479"  [label="DDG: fragheaderlen"];
"1000481" -> "1000479"  [label="DDG: flags"];
"1000481" -> "1000479"  [label="DDG: queue"];
"1000481" -> "1000479"  [label="DDG: hh_len"];
"1000481" -> "1000479"  [label="DDG: getfrag"];
"1000481" -> "1000479"  [label="DDG: fl6"];
"1000481" -> "1000479"  [label="DDG: sk"];
"1000481" -> "1000479"  [label="DDG: transhdrlen"];
"1000481" -> "1000479"  [label="DDG: from"];
"1000481" -> "1000479"  [label="DDG: length"];
"1000481" -> "1000479"  [label="DDG: mtu"];
"1000317" -> "1000481"  [label="DDG: sk"];
"1000406" -> "1000481"  [label="DDG: sk"];
"1000476" -> "1000481"  [label="DDG: sk"];
"1000114" -> "1000481"  [label="DDG: sk"];
"1000182" -> "1000481"  [label="DDG: queue"];
"1000116" -> "1000481"  [label="DDG: queue"];
"1000121" -> "1000481"  [label="DDG: from"];
"1000122" -> "1000481"  [label="DDG: length"];
"1000369" -> "1000481"  [label="DDG: length"];
"1000215" -> "1000481"  [label="DDG: hh_len"];
"1000246" -> "1000481"  [label="DDG: fragheaderlen"];
"1000188" -> "1000481"  [label="DDG: exthdrlen"];
"1000138" -> "1000481"  [label="DDG: exthdrlen"];
"1000355" -> "1000481"  [label="DDG: transhdrlen"];
"1000123" -> "1000481"  [label="DDG: transhdrlen"];
"1000437" -> "1000481"  [label="DDG: mtu"];
"1000376" -> "1000481"  [label="DDG: flags"];
"1000124" -> "1000481"  [label="DDG: flags"];
"1000115" -> "1000481"  [label="DDG: fl6"];
"1000481" -> "1001086"  [label="DDG: length"];
"1000481" -> "1001092"  [label="DDG: sk"];
"1000479" -> "1000478"  [label="AST: "];
"1000480" -> "1000479"  [label="AST: "];
"1000495" -> "1000479"  [label="CFG: "];
"1000479" -> "1001100"  [label="DDG: err"];
"1000479" -> "1001100"  [label="DDG: ip6_ufo_append_data(sk, queue, getfrag, from, length,\n\t\t\t\t\t  hh_len, fragheaderlen, exthdrlen,\n\t\t\t\t\t  transhdrlen, mtu, flags, fl6)"];
"1000479" -> "1001098"  [label="DDG: err"];
"1001098" -> "1000127"  [label="AST: "];
"1001098" -> "1001099"  [label="CFG: "];
"1001099" -> "1001098"  [label="AST: "];
"1001100" -> "1001098"  [label="CFG: "];
"1001098" -> "1001100"  [label="DDG: <RET>"];
"1001099" -> "1001098"  [label="DDG: err"];
"1000937" -> "1001098"  [label="DDG: err"];
"1000973" -> "1001098"  [label="DDG: err"];
"1000858" -> "1001098"  [label="DDG: err"];
"1000951" -> "1001098"  [label="DDG: err"];
"1000739" -> "1001098"  [label="DDG: err"];
"1000687" -> "1001098"  [label="DDG: err"];
"1001081" -> "1001098"  [label="DDG: err"];
"1001086" -> "1000127"  [label="AST: "];
"1001086" -> "1001090"  [label="CFG: "];
"1001087" -> "1001086"  [label="AST: "];
"1001090" -> "1001086"  [label="AST: "];
"1001093" -> "1001086"  [label="CFG: "];
"1001086" -> "1001100"  [label="DDG: cork->length"];
"1001086" -> "1001100"  [label="DDG: length"];
"1000897" -> "1001086"  [label="DDG: length"];
"1000122" -> "1001086"  [label="DDG: length"];
"1000530" -> "1001086"  [label="DDG: length"];
"1000369" -> "1001086"  [label="DDG: length"];
"1000513" -> "1001086"  [label="DDG: cork->length"];
"1000593" -> "1001086"  [label="DDG: cork->length"];
"1000429" -> "1001086"  [label="DDG: cork->length"];
"1001092" -> "1001091"  [label="AST: "];
"1001092" -> "1001093"  [label="CFG: "];
"1001093" -> "1001092"  [label="AST: "];
"1001095" -> "1001092"  [label="CFG: "];
"1001092" -> "1001100"  [label="DDG: sk"];
"1001092" -> "1001091"  [label="DDG: sk"];
"1000317" -> "1001092"  [label="DDG: sk"];
"1000406" -> "1001092"  [label="DDG: sk"];
"1000957" -> "1001092"  [label="DDG: sk"];
"1000476" -> "1001092"  [label="DDG: sk"];
"1000697" -> "1001092"  [label="DDG: sk"];
"1000726" -> "1001092"  [label="DDG: sk"];
"1000114" -> "1001092"  [label="DDG: sk"];
"1001091" -> "1000127"  [label="AST: "];
"1001091" -> "1001097"  [label="CFG: "];
"1001094" -> "1001091"  [label="AST: "];
"1001097" -> "1001091"  [label="AST: "];
"1001099" -> "1001091"  [label="CFG: "];
"1001091" -> "1001100"  [label="DDG: IPSTATS_MIB_OUTDISCARDS"];
"1001091" -> "1001100"  [label="DDG: IP6_INC_STATS(sock_net(sk), rt->rt6i_idev, IPSTATS_MIB_OUTDISCARDS)"];
"1001091" -> "1001100"  [label="DDG: rt->rt6i_idev"];
"1001091" -> "1001100"  [label="DDG: sock_net(sk)"];
}
