digraph "0_Chrome_7f3d85b096f66870a15b37c2f40b219b2e292693_15@array" {
"1000242" [label="(Call,pal_ptr->red = buf[0])"];
"1000238" [label="(Call,png_crc_read(png_ptr, buf, 3))"];
"1000124" [label="(Call,png_error(png_ptr, \"Missing IHDR before PLTE\"))"];
"1000106" [label="(MethodParameterIn,png_structp png_ptr)"];
"1000210" [label="(Call,png_error(png_ptr, \"Invalid palette chunk\"))"];
"1000149" [label="(Call,png_error(png_ptr, \"Duplicate PLTE chunk\"))"];
"1000375" [label="(MethodReturn,RET)"];
"1000240" [label="(Identifier,buf)"];
"1000241" [label="(Literal,3)"];
"1000239" [label="(Identifier,png_ptr)"];
"1000151" [label="(Literal,\"Duplicate PLTE chunk\")"];
"1000209" [label="(Block,)"];
"1000212" [label="(Literal,\"Invalid palette chunk\")"];
"1000126" [label="(Literal,\"Missing IHDR before PLTE\")"];
"1000314" [label="(Call,png_set_PLTE(png_ptr, info_ptr, palette, num))"];
"1000346" [label="(Call,png_warning(png_ptr, \"Truncating incorrect tRNS chunk length\"))"];
"1000124" [label="(Call,png_error(png_ptr, \"Missing IHDR before PLTE\"))"];
"1000138" [label="(Call,png_crc_finish(png_ptr, length))"];
"1000125" [label="(Identifier,png_ptr)"];
"1000246" [label="(Call,buf[0])"];
"1000214" [label="(Identifier,num)"];
"1000251" [label="(Identifier,pal_ptr)"];
"1000298" [label="(Call,png_chunk_warning(png_ptr, \"CRC error\"))"];
"1000249" [label="(Call,pal_ptr->green = buf[1])"];
"1000270" [label="(Call,png_crc_finish(png_ptr, 0))"];
"1000117" [label="(ControlStructure,if (!(png_ptr->mode & PNG_HAVE_IHDR)))"];
"1000154" [label="(Identifier,png_ptr)"];
"1000135" [label="(Call,png_warning(png_ptr, \"Invalid PLTE after IDAT\"))"];
"1000204" [label="(Call,png_crc_finish(png_ptr, length))"];
"1000210" [label="(Call,png_error(png_ptr, \"Invalid palette chunk\"))"];
"1000236" [label="(Block,)"];
"1000165" [label="(Call,png_warning(png_ptr,\n        \"Ignoring PLTE chunk in grayscale PNG\"))"];
"1000311" [label="(Call,png_chunk_warning(png_ptr, \"CRC error\"))"];
"1000275" [label="(Call,png_crc_error(png_ptr))"];
"1000211" [label="(Identifier,png_ptr)"];
"1000256" [label="(Call,pal_ptr->blue = buf[2])"];
"1000143" [label="(ControlStructure,if (png_ptr->mode & PNG_HAVE_PLTE))"];
"1000242" [label="(Call,pal_ptr->red = buf[0])"];
"1000150" [label="(Identifier,png_ptr)"];
"1000106" [label="(MethodParameterIn,png_structp png_ptr)"];
"1000243" [label="(Call,pal_ptr->red)"];
"1000365" [label="(Call,png_warning(png_ptr, \"Truncating incorrect info tRNS chunk length\"))"];
"1000201" [label="(Call,png_warning(png_ptr, \"Invalid palette chunk\"))"];
"1000179" [label="(Call,png_crc_finish(png_ptr, length))"];
"1000149" [label="(Call,png_error(png_ptr, \"Duplicate PLTE chunk\"))"];
"1000293" [label="(Call,png_chunk_error(png_ptr, \"CRC error\"))"];
"1000244" [label="(Identifier,pal_ptr)"];
"1000168" [label="(Call,png_crc_finish(png_ptr, length))"];
"1000238" [label="(Call,png_crc_read(png_ptr, buf, 3))"];
"1000242" -> "1000236"  [label="AST: "];
"1000242" -> "1000246"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000246" -> "1000242"  [label="AST: "];
"1000251" -> "1000242"  [label="CFG: "];
"1000242" -> "1000375"  [label="DDG: "];
"1000242" -> "1000375"  [label="DDG: "];
"1000238" -> "1000242"  [label="DDG: "];
"1000238" -> "1000236"  [label="AST: "];
"1000238" -> "1000241"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="AST: "];
"1000241" -> "1000238"  [label="AST: "];
"1000244" -> "1000238"  [label="CFG: "];
"1000238" -> "1000375"  [label="DDG: "];
"1000238" -> "1000375"  [label="DDG: "];
"1000124" -> "1000238"  [label="DDG: "];
"1000210" -> "1000238"  [label="DDG: "];
"1000149" -> "1000238"  [label="DDG: "];
"1000106" -> "1000238"  [label="DDG: "];
"1000238" -> "1000249"  [label="DDG: "];
"1000238" -> "1000256"  [label="DDG: "];
"1000238" -> "1000270"  [label="DDG: "];
"1000238" -> "1000275"  [label="DDG: "];
"1000124" -> "1000117"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000154" -> "1000124"  [label="CFG: "];
"1000124" -> "1000375"  [label="DDG: "];
"1000106" -> "1000124"  [label="DDG: "];
"1000124" -> "1000165"  [label="DDG: "];
"1000124" -> "1000179"  [label="DDG: "];
"1000124" -> "1000201"  [label="DDG: "];
"1000124" -> "1000210"  [label="DDG: "];
"1000124" -> "1000270"  [label="DDG: "];
"1000124" -> "1000275"  [label="DDG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000375"  [label="DDG: "];
"1000106" -> "1000135"  [label="DDG: "];
"1000106" -> "1000138"  [label="DDG: "];
"1000106" -> "1000149"  [label="DDG: "];
"1000106" -> "1000165"  [label="DDG: "];
"1000106" -> "1000168"  [label="DDG: "];
"1000106" -> "1000179"  [label="DDG: "];
"1000106" -> "1000201"  [label="DDG: "];
"1000106" -> "1000204"  [label="DDG: "];
"1000106" -> "1000210"  [label="DDG: "];
"1000106" -> "1000270"  [label="DDG: "];
"1000106" -> "1000275"  [label="DDG: "];
"1000106" -> "1000293"  [label="DDG: "];
"1000106" -> "1000298"  [label="DDG: "];
"1000106" -> "1000311"  [label="DDG: "];
"1000106" -> "1000314"  [label="DDG: "];
"1000106" -> "1000346"  [label="DDG: "];
"1000106" -> "1000365"  [label="DDG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000210" -> "1000212"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="AST: "];
"1000214" -> "1000210"  [label="CFG: "];
"1000210" -> "1000375"  [label="DDG: "];
"1000149" -> "1000210"  [label="DDG: "];
"1000210" -> "1000270"  [label="DDG: "];
"1000210" -> "1000275"  [label="DDG: "];
"1000149" -> "1000143"  [label="AST: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000154" -> "1000149"  [label="CFG: "];
"1000149" -> "1000375"  [label="DDG: "];
"1000149" -> "1000165"  [label="DDG: "];
"1000149" -> "1000179"  [label="DDG: "];
"1000149" -> "1000201"  [label="DDG: "];
"1000149" -> "1000270"  [label="DDG: "];
"1000149" -> "1000275"  [label="DDG: "];
}
