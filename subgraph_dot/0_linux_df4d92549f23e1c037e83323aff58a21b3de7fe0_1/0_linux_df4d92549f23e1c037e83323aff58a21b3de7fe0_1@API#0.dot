digraph "0_linux_df4d92549f23e1c037e83323aff58a21b3de7fe0_1@API" {
"1000341" [label="(Call,memcpy(metrics, dst_metrics_ptr(&rt->dst), sizeof(metrics)))"];
"1000343" [label="(Call,dst_metrics_ptr(&rt->dst))"];
"1000367" [label="(Call,rtnetlink_put_metrics(skb, metrics))"];
"1000366" [label="(Call,rtnetlink_put_metrics(skb, metrics) < 0)"];
"1000377" [label="(Call,nla_put_u32(skb, RTA_MARK, fl4->flowi4_mark))"];
"1000373" [label="(Call,fl4->flowi4_mark &&\n\t    nla_put_u32(skb, RTA_MARK, fl4->flowi4_mark))"];
"1000410" [label="(Call,ipmr_get_route(net, skb,\n\t\t\t\t\t\t fl4->saddr, fl4->daddr,\n\t\t\t\t\t\t r, nowait))"];
"1000408" [label="(Call,err = ipmr_get_route(net, skb,\n\t\t\t\t\t\t fl4->saddr, fl4->daddr,\n\t\t\t\t\t\t r, nowait))"];
"1000422" [label="(Call,err <= 0)"];
"1000431" [label="(Call,err == 0)"];
"1000440" [label="(Call,err == -EMSGSIZE)"];
"1000445" [label="(Call,error = err)"];
"1000461" [label="(Call,rtnl_put_cacheinfo(skb, &rt->dst, 0, expires, error))"];
"1000460" [label="(Call,rtnl_put_cacheinfo(skb, &rt->dst, 0, expires, error) < 0)"];
"1000473" [label="(Call,nlmsg_end(skb, nlh))"];
"1000472" [label="(Return,return nlmsg_end(skb, nlh);)"];
"1000477" [label="(Call,nlmsg_cancel(skb, nlh))"];
"1000427" [label="(Call,!nowait)"];
"1000450" [label="(Call,nla_put_u32(skb, RTA_IIF, skb->dev->ifindex))"];
"1000449" [label="(ControlStructure,if (nla_put_u32(skb, RTA_IIF, skb->dev->ifindex)))"];
"1000143" [label="(Call,r = nlmsg_data(nlh))"];
"1000175" [label="(Call,nla_put_u32(skb, RTA_TABLE, RT_TABLE_MAIN))"];
"1000416" [label="(Call,fl4->daddr)"];
"1000441" [label="(Identifier,err)"];
"1000419" [label="(Identifier,r)"];
"1000413" [label="(Call,fl4->saddr)"];
"1000246" [label="(Call,nla_put_be32(skb, RTA_SRC, src))"];
"1000276" [label="(Call,nla_put_u32(skb, RTA_FLOW, rt->dst.tclassid))"];
"1000431" [label="(Call,err == 0)"];
"1000368" [label="(Identifier,skb)"];
"1000374" [label="(Call,fl4->flowi4_mark)"];
"1000483" [label="(MethodReturn,static int)"];
"1000458" [label="(ControlStructure,goto nla_put_failure;)"];
"1000427" [label="(Call,!nowait)"];
"1000473" [label="(Call,nlmsg_end(skb, nlh))"];
"1000372" [label="(ControlStructure,if (fl4->flowi4_mark &&\n\t    nla_put_u32(skb, RTA_MARK, fl4->flowi4_mark)))"];
"1000370" [label="(Literal,0)"];
"1000421" [label="(ControlStructure,if (err <= 0))"];
"1000453" [label="(Call,skb->dev->ifindex)"];
"1000403" [label="(Call,IPV4_DEVCONF_ALL(net, MC_FORWARDING))"];
"1000343" [label="(Call,dst_metrics_ptr(&rt->dst))"];
"1000424" [label="(Literal,0)"];
"1000351" [label="(Call,rt->rt_pmtu && expires)"];
"1000462" [label="(Identifier,skb)"];
"1000482" [label="(Identifier,EMSGSIZE)"];
"1000410" [label="(Call,ipmr_get_route(net, skb,\n\t\t\t\t\t\t fl4->saddr, fl4->daddr,\n\t\t\t\t\t\t r, nowait))"];
"1000442" [label="(Call,-EMSGSIZE)"];
"1000412" [label="(Identifier,skb)"];
"1000444" [label="(ControlStructure,goto nla_put_failure;)"];
"1000379" [label="(Identifier,RTA_MARK)"];
"1000309" [label="(Call,nla_put_be32(skb, RTA_GATEWAY, rt->rt_gateway))"];
"1000420" [label="(Identifier,nowait)"];
"1000430" [label="(ControlStructure,if (err == 0))"];
"1000471" [label="(ControlStructure,goto nla_put_failure;)"];
"1000258" [label="(Call,nla_put_u32(skb, RTA_OIF, rt->dst.dev->ifindex))"];
"1000111" [label="(Block,)"];
"1000463" [label="(Call,&rt->dst)"];
"1000461" [label="(Call,rtnl_put_cacheinfo(skb, &rt->dst, 0, expires, error))"];
"1000385" [label="(Identifier,error)"];
"1000373" [label="(Call,fl4->flowi4_mark &&\n\t    nla_put_u32(skb, RTA_MARK, fl4->flowi4_mark))"];
"1000101" [label="(MethodParameterIn,struct net *net)"];
"1000145" [label="(Call,nlmsg_data(nlh))"];
"1000432" [label="(Identifier,err)"];
"1000423" [label="(Identifier,err)"];
"1000446" [label="(Identifier,error)"];
"1000232" [label="(Call,nla_put_be32(skb, RTA_DST, dst))"];
"1000452" [label="(Identifier,RTA_IIF)"];
"1000460" [label="(Call,rtnl_put_cacheinfo(skb, &rt->dst, 0, expires, error) < 0)"];
"1000109" [label="(MethodParameterIn,int nowait)"];
"1000365" [label="(ControlStructure,if (rtnetlink_put_metrics(skb, metrics) < 0))"];
"1000475" [label="(Identifier,nlh)"];
"1000406" [label="(Block,)"];
"1000384" [label="(Call,error = rt->dst.error)"];
"1000371" [label="(ControlStructure,goto nla_put_failure;)"];
"1000375" [label="(Identifier,fl4)"];
"1000479" [label="(Identifier,nlh)"];
"1000342" [label="(Identifier,metrics)"];
"1000469" [label="(Identifier,error)"];
"1000426" [label="(ControlStructure,if (!nowait))"];
"1000380" [label="(Call,fl4->flowi4_mark)"];
"1000377" [label="(Call,nla_put_u32(skb, RTA_MARK, fl4->flowi4_mark))"];
"1000378" [label="(Identifier,skb)"];
"1000474" [label="(Identifier,skb)"];
"1000411" [label="(Identifier,net)"];
"1000468" [label="(Identifier,expires)"];
"1000436" [label="(ControlStructure,goto nla_put_failure;)"];
"1000433" [label="(Literal,0)"];
"1000438" [label="(Block,)"];
"1000349" [label="(Identifier,metrics)"];
"1000344" [label="(Call,&rt->dst)"];
"1000472" [label="(Return,return nlmsg_end(skb, nlh);)"];
"1000451" [label="(Identifier,skb)"];
"1000467" [label="(Literal,0)"];
"1000445" [label="(Call,error = err)"];
"1000341" [label="(Call,memcpy(metrics, dst_metrics_ptr(&rt->dst), sizeof(metrics)))"];
"1000356" [label="(Call,metrics[RTAX_MTU - 1] = rt->rt_pmtu)"];
"1000383" [label="(ControlStructure,goto nla_put_failure;)"];
"1000408" [label="(Call,err = ipmr_get_route(net, skb,\n\t\t\t\t\t\t fl4->saddr, fl4->daddr,\n\t\t\t\t\t\t r, nowait))"];
"1000450" [label="(Call,nla_put_u32(skb, RTA_IIF, skb->dev->ifindex))"];
"1000105" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000409" [label="(Identifier,err)"];
"1000353" [label="(Identifier,rt)"];
"1000367" [label="(Call,rtnetlink_put_metrics(skb, metrics))"];
"1000478" [label="(Identifier,skb)"];
"1000428" [label="(Identifier,nowait)"];
"1000440" [label="(Call,err == -EMSGSIZE)"];
"1000447" [label="(Identifier,err)"];
"1000477" [label="(Call,nlmsg_cancel(skb, nlh))"];
"1000369" [label="(Identifier,metrics)"];
"1000470" [label="(Literal,0)"];
"1000435" [label="(Literal,0)"];
"1000297" [label="(Call,nla_put_be32(skb, RTA_PREFSRC, fl4->saddr))"];
"1000348" [label="(Call,sizeof(metrics))"];
"1000290" [label="(Call,fl4->saddr != src)"];
"1000422" [label="(Call,err <= 0)"];
"1000439" [label="(ControlStructure,if (err == -EMSGSIZE))"];
"1000459" [label="(ControlStructure,if (rtnl_put_cacheinfo(skb, &rt->dst, 0, expires, error) < 0))"];
"1000366" [label="(Call,rtnetlink_put_metrics(skb, metrics) < 0)"];
"1000341" -> "1000111"  [label="AST: "];
"1000341" -> "1000348"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="AST: "];
"1000348" -> "1000341"  [label="AST: "];
"1000353" -> "1000341"  [label="CFG: "];
"1000341" -> "1000483"  [label="DDG: dst_metrics_ptr(&rt->dst)"];
"1000341" -> "1000483"  [label="DDG: memcpy(metrics, dst_metrics_ptr(&rt->dst), sizeof(metrics))"];
"1000343" -> "1000341"  [label="DDG: &rt->dst"];
"1000341" -> "1000367"  [label="DDG: metrics"];
"1000343" -> "1000344"  [label="CFG: "];
"1000344" -> "1000343"  [label="AST: "];
"1000349" -> "1000343"  [label="CFG: "];
"1000343" -> "1000483"  [label="DDG: &rt->dst"];
"1000343" -> "1000461"  [label="DDG: &rt->dst"];
"1000367" -> "1000366"  [label="AST: "];
"1000367" -> "1000369"  [label="CFG: "];
"1000368" -> "1000367"  [label="AST: "];
"1000369" -> "1000367"  [label="AST: "];
"1000370" -> "1000367"  [label="CFG: "];
"1000367" -> "1000483"  [label="DDG: metrics"];
"1000367" -> "1000366"  [label="DDG: skb"];
"1000367" -> "1000366"  [label="DDG: metrics"];
"1000297" -> "1000367"  [label="DDG: skb"];
"1000232" -> "1000367"  [label="DDG: skb"];
"1000276" -> "1000367"  [label="DDG: skb"];
"1000246" -> "1000367"  [label="DDG: skb"];
"1000258" -> "1000367"  [label="DDG: skb"];
"1000309" -> "1000367"  [label="DDG: skb"];
"1000105" -> "1000367"  [label="DDG: skb"];
"1000356" -> "1000367"  [label="DDG: metrics[RTAX_MTU - 1]"];
"1000367" -> "1000377"  [label="DDG: skb"];
"1000367" -> "1000410"  [label="DDG: skb"];
"1000367" -> "1000450"  [label="DDG: skb"];
"1000367" -> "1000461"  [label="DDG: skb"];
"1000367" -> "1000477"  [label="DDG: skb"];
"1000366" -> "1000365"  [label="AST: "];
"1000366" -> "1000370"  [label="CFG: "];
"1000370" -> "1000366"  [label="AST: "];
"1000371" -> "1000366"  [label="CFG: "];
"1000375" -> "1000366"  [label="CFG: "];
"1000366" -> "1000483"  [label="DDG: rtnetlink_put_metrics(skb, metrics)"];
"1000366" -> "1000483"  [label="DDG: rtnetlink_put_metrics(skb, metrics) < 0"];
"1000377" -> "1000373"  [label="AST: "];
"1000377" -> "1000380"  [label="CFG: "];
"1000378" -> "1000377"  [label="AST: "];
"1000379" -> "1000377"  [label="AST: "];
"1000380" -> "1000377"  [label="AST: "];
"1000373" -> "1000377"  [label="CFG: "];
"1000377" -> "1000483"  [label="DDG: RTA_MARK"];
"1000377" -> "1000373"  [label="DDG: fl4->flowi4_mark"];
"1000377" -> "1000373"  [label="DDG: skb"];
"1000377" -> "1000373"  [label="DDG: RTA_MARK"];
"1000105" -> "1000377"  [label="DDG: skb"];
"1000377" -> "1000410"  [label="DDG: skb"];
"1000377" -> "1000450"  [label="DDG: skb"];
"1000377" -> "1000461"  [label="DDG: skb"];
"1000377" -> "1000477"  [label="DDG: skb"];
"1000373" -> "1000372"  [label="AST: "];
"1000373" -> "1000374"  [label="CFG: "];
"1000374" -> "1000373"  [label="AST: "];
"1000383" -> "1000373"  [label="CFG: "];
"1000385" -> "1000373"  [label="CFG: "];
"1000373" -> "1000483"  [label="DDG: nla_put_u32(skb, RTA_MARK, fl4->flowi4_mark)"];
"1000373" -> "1000483"  [label="DDG: fl4->flowi4_mark &&\n\t    nla_put_u32(skb, RTA_MARK, fl4->flowi4_mark)"];
"1000373" -> "1000483"  [label="DDG: fl4->flowi4_mark"];
"1000410" -> "1000408"  [label="AST: "];
"1000410" -> "1000420"  [label="CFG: "];
"1000411" -> "1000410"  [label="AST: "];
"1000412" -> "1000410"  [label="AST: "];
"1000413" -> "1000410"  [label="AST: "];
"1000416" -> "1000410"  [label="AST: "];
"1000419" -> "1000410"  [label="AST: "];
"1000420" -> "1000410"  [label="AST: "];
"1000408" -> "1000410"  [label="CFG: "];
"1000410" -> "1000483"  [label="DDG: r"];
"1000410" -> "1000483"  [label="DDG: net"];
"1000410" -> "1000483"  [label="DDG: skb"];
"1000410" -> "1000483"  [label="DDG: nowait"];
"1000410" -> "1000483"  [label="DDG: fl4->saddr"];
"1000410" -> "1000483"  [label="DDG: fl4->daddr"];
"1000410" -> "1000408"  [label="DDG: fl4->daddr"];
"1000410" -> "1000408"  [label="DDG: r"];
"1000410" -> "1000408"  [label="DDG: nowait"];
"1000410" -> "1000408"  [label="DDG: fl4->saddr"];
"1000410" -> "1000408"  [label="DDG: skb"];
"1000410" -> "1000408"  [label="DDG: net"];
"1000403" -> "1000410"  [label="DDG: net"];
"1000101" -> "1000410"  [label="DDG: net"];
"1000105" -> "1000410"  [label="DDG: skb"];
"1000290" -> "1000410"  [label="DDG: fl4->saddr"];
"1000297" -> "1000410"  [label="DDG: fl4->saddr"];
"1000143" -> "1000410"  [label="DDG: r"];
"1000109" -> "1000410"  [label="DDG: nowait"];
"1000410" -> "1000427"  [label="DDG: nowait"];
"1000410" -> "1000461"  [label="DDG: skb"];
"1000410" -> "1000477"  [label="DDG: skb"];
"1000408" -> "1000406"  [label="AST: "];
"1000409" -> "1000408"  [label="AST: "];
"1000423" -> "1000408"  [label="CFG: "];
"1000408" -> "1000483"  [label="DDG: ipmr_get_route(net, skb,\n\t\t\t\t\t\t fl4->saddr, fl4->daddr,\n\t\t\t\t\t\t r, nowait)"];
"1000408" -> "1000422"  [label="DDG: err"];
"1000422" -> "1000421"  [label="AST: "];
"1000422" -> "1000424"  [label="CFG: "];
"1000423" -> "1000422"  [label="AST: "];
"1000424" -> "1000422"  [label="AST: "];
"1000428" -> "1000422"  [label="CFG: "];
"1000462" -> "1000422"  [label="CFG: "];
"1000422" -> "1000483"  [label="DDG: err"];
"1000422" -> "1000483"  [label="DDG: err <= 0"];
"1000422" -> "1000431"  [label="DDG: err"];
"1000422" -> "1000440"  [label="DDG: err"];
"1000431" -> "1000430"  [label="AST: "];
"1000431" -> "1000433"  [label="CFG: "];
"1000432" -> "1000431"  [label="AST: "];
"1000433" -> "1000431"  [label="AST: "];
"1000435" -> "1000431"  [label="CFG: "];
"1000436" -> "1000431"  [label="CFG: "];
"1000431" -> "1000483"  [label="DDG: err"];
"1000431" -> "1000483"  [label="DDG: err == 0"];
"1000440" -> "1000439"  [label="AST: "];
"1000440" -> "1000442"  [label="CFG: "];
"1000441" -> "1000440"  [label="AST: "];
"1000442" -> "1000440"  [label="AST: "];
"1000444" -> "1000440"  [label="CFG: "];
"1000446" -> "1000440"  [label="CFG: "];
"1000440" -> "1000483"  [label="DDG: -EMSGSIZE"];
"1000440" -> "1000483"  [label="DDG: err == -EMSGSIZE"];
"1000440" -> "1000483"  [label="DDG: err"];
"1000442" -> "1000440"  [label="DDG: EMSGSIZE"];
"1000440" -> "1000445"  [label="DDG: err"];
"1000445" -> "1000438"  [label="AST: "];
"1000445" -> "1000447"  [label="CFG: "];
"1000446" -> "1000445"  [label="AST: "];
"1000447" -> "1000445"  [label="AST: "];
"1000462" -> "1000445"  [label="CFG: "];
"1000445" -> "1000483"  [label="DDG: err"];
"1000445" -> "1000461"  [label="DDG: error"];
"1000461" -> "1000460"  [label="AST: "];
"1000461" -> "1000469"  [label="CFG: "];
"1000462" -> "1000461"  [label="AST: "];
"1000463" -> "1000461"  [label="AST: "];
"1000467" -> "1000461"  [label="AST: "];
"1000468" -> "1000461"  [label="AST: "];
"1000469" -> "1000461"  [label="AST: "];
"1000470" -> "1000461"  [label="CFG: "];
"1000461" -> "1000483"  [label="DDG: expires"];
"1000461" -> "1000483"  [label="DDG: &rt->dst"];
"1000461" -> "1000483"  [label="DDG: error"];
"1000461" -> "1000460"  [label="DDG: expires"];
"1000461" -> "1000460"  [label="DDG: error"];
"1000461" -> "1000460"  [label="DDG: skb"];
"1000461" -> "1000460"  [label="DDG: &rt->dst"];
"1000461" -> "1000460"  [label="DDG: 0"];
"1000450" -> "1000461"  [label="DDG: skb"];
"1000105" -> "1000461"  [label="DDG: skb"];
"1000351" -> "1000461"  [label="DDG: expires"];
"1000384" -> "1000461"  [label="DDG: error"];
"1000461" -> "1000473"  [label="DDG: skb"];
"1000461" -> "1000477"  [label="DDG: skb"];
"1000460" -> "1000459"  [label="AST: "];
"1000460" -> "1000470"  [label="CFG: "];
"1000470" -> "1000460"  [label="AST: "];
"1000471" -> "1000460"  [label="CFG: "];
"1000474" -> "1000460"  [label="CFG: "];
"1000460" -> "1000483"  [label="DDG: rtnl_put_cacheinfo(skb, &rt->dst, 0, expires, error)"];
"1000460" -> "1000483"  [label="DDG: rtnl_put_cacheinfo(skb, &rt->dst, 0, expires, error) < 0"];
"1000473" -> "1000472"  [label="AST: "];
"1000473" -> "1000475"  [label="CFG: "];
"1000474" -> "1000473"  [label="AST: "];
"1000475" -> "1000473"  [label="AST: "];
"1000472" -> "1000473"  [label="CFG: "];
"1000473" -> "1000483"  [label="DDG: skb"];
"1000473" -> "1000483"  [label="DDG: nlh"];
"1000473" -> "1000483"  [label="DDG: nlmsg_end(skb, nlh)"];
"1000473" -> "1000472"  [label="DDG: nlmsg_end(skb, nlh)"];
"1000105" -> "1000473"  [label="DDG: skb"];
"1000145" -> "1000473"  [label="DDG: nlh"];
"1000472" -> "1000111"  [label="AST: "];
"1000483" -> "1000472"  [label="CFG: "];
"1000472" -> "1000483"  [label="DDG: <RET>"];
"1000477" -> "1000111"  [label="AST: "];
"1000477" -> "1000479"  [label="CFG: "];
"1000478" -> "1000477"  [label="AST: "];
"1000479" -> "1000477"  [label="AST: "];
"1000482" -> "1000477"  [label="CFG: "];
"1000477" -> "1000483"  [label="DDG: nlh"];
"1000477" -> "1000483"  [label="DDG: nlmsg_cancel(skb, nlh)"];
"1000477" -> "1000483"  [label="DDG: skb"];
"1000297" -> "1000477"  [label="DDG: skb"];
"1000232" -> "1000477"  [label="DDG: skb"];
"1000175" -> "1000477"  [label="DDG: skb"];
"1000450" -> "1000477"  [label="DDG: skb"];
"1000246" -> "1000477"  [label="DDG: skb"];
"1000258" -> "1000477"  [label="DDG: skb"];
"1000309" -> "1000477"  [label="DDG: skb"];
"1000276" -> "1000477"  [label="DDG: skb"];
"1000105" -> "1000477"  [label="DDG: skb"];
"1000145" -> "1000477"  [label="DDG: nlh"];
"1000427" -> "1000426"  [label="AST: "];
"1000427" -> "1000428"  [label="CFG: "];
"1000428" -> "1000427"  [label="AST: "];
"1000432" -> "1000427"  [label="CFG: "];
"1000441" -> "1000427"  [label="CFG: "];
"1000427" -> "1000483"  [label="DDG: nowait"];
"1000427" -> "1000483"  [label="DDG: !nowait"];
"1000109" -> "1000427"  [label="DDG: nowait"];
"1000450" -> "1000449"  [label="AST: "];
"1000450" -> "1000453"  [label="CFG: "];
"1000451" -> "1000450"  [label="AST: "];
"1000452" -> "1000450"  [label="AST: "];
"1000453" -> "1000450"  [label="AST: "];
"1000458" -> "1000450"  [label="CFG: "];
"1000462" -> "1000450"  [label="CFG: "];
"1000450" -> "1000483"  [label="DDG: nla_put_u32(skb, RTA_IIF, skb->dev->ifindex)"];
"1000450" -> "1000483"  [label="DDG: RTA_IIF"];
"1000450" -> "1000483"  [label="DDG: skb->dev->ifindex"];
"1000105" -> "1000450"  [label="DDG: skb"];
}
