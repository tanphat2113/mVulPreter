digraph "0_linux_78c9c4dfbf8c04883941445a195276bb4bb92c76_0@pointer" {
"1000108" [label="(Call,timr = lock_timer(timer_id, &flags))"];
"1000110" [label="(Call,lock_timer(timer_id, &flags))"];
"1000115" [label="(Call,!timr)"];
"1000122" [label="(Call,timer_overrun_to_int(timr, 0))"];
"1000120" [label="(Call,overrun = timer_overrun_to_int(timr, 0))"];
"1000128" [label="(Return,return overrun;)"];
"1000125" [label="(Call,unlock_timer(timr, flags))"];
"1000125" [label="(Call,unlock_timer(timr, flags))"];
"1000104" [label="(Block,)"];
"1000122" [label="(Call,timer_overrun_to_int(timr, 0))"];
"1000123" [label="(Identifier,timr)"];
"1000127" [label="(Identifier,flags)"];
"1000112" [label="(Call,&flags)"];
"1000114" [label="(ControlStructure,if (!timr))"];
"1000129" [label="(Identifier,overrun)"];
"1000109" [label="(Identifier,timr)"];
"1000110" [label="(Call,lock_timer(timer_id, &flags))"];
"1000119" [label="(Identifier,EINVAL)"];
"1000124" [label="(Literal,0)"];
"1000126" [label="(Identifier,timr)"];
"1000120" [label="(Call,overrun = timer_overrun_to_int(timr, 0))"];
"1000130" [label="(MethodReturn,RET)"];
"1000108" [label="(Call,timr = lock_timer(timer_id, &flags))"];
"1000121" [label="(Identifier,overrun)"];
"1000115" [label="(Call,!timr)"];
"1000116" [label="(Identifier,timr)"];
"1000128" [label="(Return,return overrun;)"];
"1000111" [label="(Identifier,timer_id)"];
"1000108" -> "1000104"  [label="AST: "];
"1000108" -> "1000110"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000110" -> "1000108"  [label="AST: "];
"1000116" -> "1000108"  [label="CFG: "];
"1000108" -> "1000130"  [label="DDG: lock_timer(timer_id, &flags)"];
"1000110" -> "1000108"  [label="DDG: timer_id"];
"1000110" -> "1000108"  [label="DDG: &flags"];
"1000108" -> "1000115"  [label="DDG: timr"];
"1000110" -> "1000112"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000112" -> "1000110"  [label="AST: "];
"1000110" -> "1000130"  [label="DDG: &flags"];
"1000110" -> "1000130"  [label="DDG: timer_id"];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000119" -> "1000115"  [label="CFG: "];
"1000121" -> "1000115"  [label="CFG: "];
"1000115" -> "1000130"  [label="DDG: !timr"];
"1000115" -> "1000130"  [label="DDG: timr"];
"1000115" -> "1000122"  [label="DDG: timr"];
"1000122" -> "1000120"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000122" -> "1000120"  [label="DDG: timr"];
"1000122" -> "1000120"  [label="DDG: 0"];
"1000122" -> "1000125"  [label="DDG: timr"];
"1000120" -> "1000104"  [label="AST: "];
"1000121" -> "1000120"  [label="AST: "];
"1000126" -> "1000120"  [label="CFG: "];
"1000120" -> "1000130"  [label="DDG: timer_overrun_to_int(timr, 0)"];
"1000120" -> "1000130"  [label="DDG: overrun"];
"1000120" -> "1000128"  [label="DDG: overrun"];
"1000128" -> "1000104"  [label="AST: "];
"1000128" -> "1000129"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000128"  [label="CFG: "];
"1000128" -> "1000130"  [label="DDG: <RET>"];
"1000129" -> "1000128"  [label="DDG: overrun"];
"1000125" -> "1000104"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000129" -> "1000125"  [label="CFG: "];
"1000125" -> "1000130"  [label="DDG: timr"];
"1000125" -> "1000130"  [label="DDG: unlock_timer(timr, flags)"];
"1000125" -> "1000130"  [label="DDG: flags"];
}
