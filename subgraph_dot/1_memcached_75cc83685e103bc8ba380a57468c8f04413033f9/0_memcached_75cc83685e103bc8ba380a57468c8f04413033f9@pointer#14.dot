digraph "0_memcached_75cc83685e103bc8ba380a57468c8f04413033f9@pointer" {
"1000186" [label="(Call,c->protocol == binary_prot)"];
"1000181" [label="(Call,prot_text(c->protocol))"];
"1000163" [label="(Call,c->protocol = ascii_prot)"];
"1000156" [label="(Call,c->protocol = binary_prot)"];
"1000132" [label="(Call,c->protocol == negotiating_prot)"];
"1000136" [label="(Identifier,negotiating_prot)"];
"1000155" [label="(Block,)"];
"1000186" [label="(Call,c->protocol == binary_prot)"];
"1000167" [label="(Identifier,ascii_prot)"];
"1000475" [label="(Identifier,c)"];
"1000190" [label="(Identifier,binary_prot)"];
"1000157" [label="(Call,c->protocol)"];
"1000164" [label="(Call,c->protocol)"];
"1000175" [label="(Call,fprintf(stderr, \"%d: Client using the %s protocol\n\", c->sfd,\n                    prot_text(c->protocol)))"];
"1000133" [label="(Call,c->protocol)"];
"1000162" [label="(Block,)"];
"1000185" [label="(ControlStructure,if (c->protocol == binary_prot))"];
"1000131" [label="(Call,c->protocol == negotiating_prot || c->transport == udp_transport)"];
"1000187" [label="(Call,c->protocol)"];
"1000132" [label="(Call,c->protocol == negotiating_prot)"];
"1000160" [label="(Identifier,binary_prot)"];
"1000139" [label="(Identifier,c)"];
"1000163" [label="(Call,c->protocol = ascii_prot)"];
"1000195" [label="(Identifier,c)"];
"1000182" [label="(Call,c->protocol)"];
"1000181" [label="(Call,prot_text(c->protocol))"];
"1000156" [label="(Call,c->protocol = binary_prot)"];
"1000565" [label="(MethodReturn,static int)"];
"1000171" [label="(Identifier,settings)"];
"1000186" -> "1000185"  [label="AST: "];
"1000186" -> "1000190"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000190" -> "1000186"  [label="AST: "];
"1000195" -> "1000186"  [label="CFG: "];
"1000475" -> "1000186"  [label="CFG: "];
"1000186" -> "1000565"  [label="DDG: c->protocol == binary_prot"];
"1000186" -> "1000565"  [label="DDG: c->protocol"];
"1000186" -> "1000565"  [label="DDG: binary_prot"];
"1000181" -> "1000186"  [label="DDG: c->protocol"];
"1000163" -> "1000186"  [label="DDG: c->protocol"];
"1000156" -> "1000186"  [label="DDG: c->protocol"];
"1000132" -> "1000186"  [label="DDG: c->protocol"];
"1000181" -> "1000175"  [label="AST: "];
"1000181" -> "1000182"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000175" -> "1000181"  [label="CFG: "];
"1000181" -> "1000175"  [label="DDG: c->protocol"];
"1000163" -> "1000181"  [label="DDG: c->protocol"];
"1000156" -> "1000181"  [label="DDG: c->protocol"];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000167"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000167" -> "1000163"  [label="AST: "];
"1000171" -> "1000163"  [label="CFG: "];
"1000163" -> "1000565"  [label="DDG: ascii_prot"];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000160"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000160" -> "1000156"  [label="AST: "];
"1000171" -> "1000156"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000136"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000136" -> "1000132"  [label="AST: "];
"1000139" -> "1000132"  [label="CFG: "];
"1000131" -> "1000132"  [label="CFG: "];
"1000132" -> "1000565"  [label="DDG: negotiating_prot"];
"1000132" -> "1000131"  [label="DDG: c->protocol"];
"1000132" -> "1000131"  [label="DDG: negotiating_prot"];
}
