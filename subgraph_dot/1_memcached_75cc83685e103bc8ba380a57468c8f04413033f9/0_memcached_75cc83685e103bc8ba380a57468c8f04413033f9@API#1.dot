digraph "0_memcached_75cc83685e103bc8ba380a57468c8f04413033f9@API" {
"1000241" [label="(Call,fprintf(stderr, \"%d: Realign input buffer\n\", c->sfd))"];
"1000175" [label="(Call,fprintf(stderr, \"%d: Client using the %s protocol\n\", c->sfd,\n                    prot_text(c->protocol)))"];
"1000181" [label="(Call,prot_text(c->protocol))"];
"1000163" [label="(Call,c->protocol = ascii_prot)"];
"1000156" [label="(Call,c->protocol = binary_prot)"];
"1000263" [label="(Call,fprintf(stderr, \"<%d Read binary protocol data:\", c->sfd))"];
"1000289" [label="(Call,fprintf(stderr, \"\n<%d   \", c->sfd))"];
"1000295" [label="(Call,fprintf(stderr, \" 0x%02x\", req->bytes[ii]))"];
"1000303" [label="(Call,fprintf(stderr, \"\n\"))"];
"1000370" [label="(Call,fprintf(stderr, \"Invalid magic:  %x\n\",\n                            c->binary_header.request.magic))"];
"1000155" [label="(Block,)"];
"1000174" [label="(Block,)"];
"1000372" [label="(Literal,\"Invalid magic:  %x\n\")"];
"1000186" [label="(Call,c->protocol == binary_prot)"];
"1000292" [label="(Call,c->sfd)"];
"1000296" [label="(Identifier,stderr)"];
"1000176" [label="(Identifier,stderr)"];
"1000264" [label="(Identifier,stderr)"];
"1000167" [label="(Identifier,ascii_prot)"];
"1000178" [label="(Call,c->sfd)"];
"1000298" [label="(Call,req->bytes[ii])"];
"1000291" [label="(Literal,\"\n<%d   \")"];
"1000355" [label="(Call,c->binary_header.request.magic != PROTOCOL_BINARY_REQ)"];
"1000157" [label="(Call,c->protocol)"];
"1000369" [label="(Block,)"];
"1000240" [label="(Block,)"];
"1000373" [label="(Call,c->binary_header.request.magic)"];
"1000164" [label="(Call,c->protocol)"];
"1000175" [label="(Call,fprintf(stderr, \"%d: Client using the %s protocol\n\", c->sfd,\n                    prot_text(c->protocol)))"];
"1000162" [label="(Block,)"];
"1000297" [label="(Literal,\" 0x%02x\")"];
"1000244" [label="(Call,c->sfd)"];
"1000243" [label="(Literal,\"%d: Realign input buffer\n\")"];
"1000305" [label="(Literal,\"\n\")"];
"1000280" [label="(Identifier,ii)"];
"1000242" [label="(Identifier,stderr)"];
"1000160" [label="(Identifier,binary_prot)"];
"1000265" [label="(Literal,\"<%d Read binary protocol data:\")"];
"1000263" [label="(Call,fprintf(stderr, \"<%d Read binary protocol data:\", c->sfd))"];
"1000241" [label="(Call,fprintf(stderr, \"%d: Realign input buffer\n\", c->sfd))"];
"1000163" [label="(Call,c->protocol = ascii_prot)"];
"1000290" [label="(Identifier,stderr)"];
"1000288" [label="(Block,)"];
"1000177" [label="(Literal,\"%d: Client using the %s protocol\n\")"];
"1000308" [label="(Identifier,c)"];
"1000249" [label="(Identifier,req)"];
"1000304" [label="(Identifier,stderr)"];
"1000188" [label="(Identifier,c)"];
"1000182" [label="(Call,c->protocol)"];
"1000261" [label="(Block,)"];
"1000271" [label="(Identifier,ii)"];
"1000289" [label="(Call,fprintf(stderr, \"\n<%d   \", c->sfd))"];
"1000303" [label="(Call,fprintf(stderr, \"\n\"))"];
"1000371" [label="(Identifier,stderr)"];
"1000381" [label="(Identifier,c)"];
"1000181" [label="(Call,prot_text(c->protocol))"];
"1000156" [label="(Call,c->protocol = binary_prot)"];
"1000266" [label="(Call,c->sfd)"];
"1000565" [label="(MethodReturn,static int)"];
"1000171" [label="(Identifier,settings)"];
"1000295" [label="(Call,fprintf(stderr, \" 0x%02x\", req->bytes[ii]))"];
"1000370" [label="(Call,fprintf(stderr, \"Invalid magic:  %x\n\",\n                            c->binary_header.request.magic))"];
"1000281" [label="(Block,)"];
"1000241" -> "1000240"  [label="AST: "];
"1000241" -> "1000244"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="AST: "];
"1000244" -> "1000241"  [label="AST: "];
"1000249" -> "1000241"  [label="CFG: "];
"1000241" -> "1000565"  [label="DDG: "];
"1000241" -> "1000565"  [label="DDG: "];
"1000241" -> "1000565"  [label="DDG: "];
"1000175" -> "1000241"  [label="DDG: "];
"1000175" -> "1000241"  [label="DDG: "];
"1000241" -> "1000263"  [label="DDG: "];
"1000241" -> "1000263"  [label="DDG: "];
"1000241" -> "1000370"  [label="DDG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000175" -> "1000181"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000177" -> "1000175"  [label="AST: "];
"1000178" -> "1000175"  [label="AST: "];
"1000181" -> "1000175"  [label="AST: "];
"1000188" -> "1000175"  [label="CFG: "];
"1000175" -> "1000565"  [label="DDG: "];
"1000175" -> "1000565"  [label="DDG: "];
"1000175" -> "1000565"  [label="DDG: "];
"1000175" -> "1000565"  [label="DDG: "];
"1000181" -> "1000175"  [label="DDG: "];
"1000175" -> "1000263"  [label="DDG: "];
"1000175" -> "1000263"  [label="DDG: "];
"1000175" -> "1000370"  [label="DDG: "];
"1000181" -> "1000182"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000163" -> "1000181"  [label="DDG: "];
"1000156" -> "1000181"  [label="DDG: "];
"1000181" -> "1000186"  [label="DDG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000163" -> "1000167"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000167" -> "1000163"  [label="AST: "];
"1000171" -> "1000163"  [label="CFG: "];
"1000163" -> "1000565"  [label="DDG: "];
"1000163" -> "1000186"  [label="DDG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000160"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000160" -> "1000156"  [label="AST: "];
"1000171" -> "1000156"  [label="CFG: "];
"1000156" -> "1000186"  [label="DDG: "];
"1000263" -> "1000261"  [label="AST: "];
"1000263" -> "1000266"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000263"  [label="AST: "];
"1000266" -> "1000263"  [label="AST: "];
"1000271" -> "1000263"  [label="CFG: "];
"1000263" -> "1000565"  [label="DDG: "];
"1000263" -> "1000565"  [label="DDG: "];
"1000263" -> "1000289"  [label="DDG: "];
"1000263" -> "1000289"  [label="DDG: "];
"1000263" -> "1000295"  [label="DDG: "];
"1000263" -> "1000303"  [label="DDG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000289" -> "1000292"  [label="CFG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000291" -> "1000289"  [label="AST: "];
"1000292" -> "1000289"  [label="AST: "];
"1000296" -> "1000289"  [label="CFG: "];
"1000289" -> "1000565"  [label="DDG: "];
"1000289" -> "1000565"  [label="DDG: "];
"1000295" -> "1000289"  [label="DDG: "];
"1000289" -> "1000295"  [label="DDG: "];
"1000295" -> "1000281"  [label="AST: "];
"1000295" -> "1000298"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000297" -> "1000295"  [label="AST: "];
"1000298" -> "1000295"  [label="AST: "];
"1000280" -> "1000295"  [label="CFG: "];
"1000295" -> "1000565"  [label="DDG: "];
"1000295" -> "1000565"  [label="DDG: "];
"1000295" -> "1000303"  [label="DDG: "];
"1000303" -> "1000261"  [label="AST: "];
"1000303" -> "1000305"  [label="CFG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000305" -> "1000303"  [label="AST: "];
"1000308" -> "1000303"  [label="CFG: "];
"1000303" -> "1000565"  [label="DDG: "];
"1000303" -> "1000565"  [label="DDG: "];
"1000303" -> "1000370"  [label="DDG: "];
"1000370" -> "1000369"  [label="AST: "];
"1000370" -> "1000373"  [label="CFG: "];
"1000371" -> "1000370"  [label="AST: "];
"1000372" -> "1000370"  [label="AST: "];
"1000373" -> "1000370"  [label="AST: "];
"1000381" -> "1000370"  [label="CFG: "];
"1000370" -> "1000565"  [label="DDG: "];
"1000370" -> "1000565"  [label="DDG: "];
"1000370" -> "1000565"  [label="DDG: "];
"1000355" -> "1000370"  [label="DDG: "];
}
