digraph "0_linux_3cf521f7dc87c031617fd47e4b7aa2593c2f3daf@API" {
"1000233" [label="(Call,copy_to_user((void __user *) optval, &val, len))"];
"1000234" [label="(Call,(void __user *) optval)"];
"1000106" [label="(MethodParameterIn,char __user *optval)"];
"1000217" [label="(Call,pppol2tp_session_getsockopt(sk, session, optname, &val))"];
"1000163" [label="(Call,pppol2tp_sock_to_session(sk))"];
"1000110" [label="(Call,*sk = sock->sk)"];
"1000172" [label="(Call,l2tp_session_priv(session))"];
"1000166" [label="(Call,session == NULL)"];
"1000161" [label="(Call,session = pppol2tp_sock_to_session(sk))"];
"1000151" [label="(Call,sk->sk_user_data == NULL)"];
"1000105" [label="(MethodParameterIn,int optname)"];
"1000204" [label="(Call,pppol2tp_tunnel_getsockopt(sk, tunnel, optname, &val))"];
"1000198" [label="(Call,tunnel == NULL)"];
"1000191" [label="(Call,tunnel = l2tp_sock_to_tunnel(ps->tunnel_sock))"];
"1000193" [label="(Call,l2tp_sock_to_tunnel(ps->tunnel_sock))"];
"1000228" [label="(Call,put_user(len, optlen))"];
"1000140" [label="(Call,len < 0)"];
"1000133" [label="(Call,get_user(len, optlen))"];
"1000107" [label="(MethodParameterIn,int __user *optlen)"];
"1000150" [label="(ControlStructure,if (sk->sk_user_data == NULL))"];
"1000204" [label="(Call,pppol2tp_tunnel_getsockopt(sk, tunnel, optname, &val))"];
"1000234" [label="(Call,(void __user *) optval)"];
"1000238" [label="(Identifier,val)"];
"1000227" [label="(ControlStructure,if (put_user(len, optlen)))"];
"1000250" [label="(MethodReturn,static int)"];
"1000171" [label="(Identifier,ps)"];
"1000141" [label="(Identifier,len)"];
"1000151" [label="(Call,sk->sk_user_data == NULL)"];
"1000126" [label="(Call,udp_prot.getsockopt(sk, level, optname, optval, optlen))"];
"1000162" [label="(Identifier,session)"];
"1000201" [label="(ControlStructure,goto end_put_sess;)"];
"1000167" [label="(Identifier,session)"];
"1000202" [label="(Call,err = pppol2tp_tunnel_getsockopt(sk, tunnel, optname, &val))"];
"1000193" [label="(Call,l2tp_sock_to_tunnel(ps->tunnel_sock))"];
"1000147" [label="(Identifier,err)"];
"1000219" [label="(Identifier,session)"];
"1000198" [label="(Call,tunnel == NULL)"];
"1000156" [label="(ControlStructure,goto end;)"];
"1000208" [label="(Call,&val)"];
"1000165" [label="(ControlStructure,if (session == NULL))"];
"1000164" [label="(Identifier,sk)"];
"1000197" [label="(ControlStructure,if (tunnel == NULL))"];
"1000233" [label="(Call,copy_to_user((void __user *) optval, &val, len))"];
"1000152" [label="(Call,sk->sk_user_data)"];
"1000229" [label="(Identifier,len)"];
"1000232" [label="(ControlStructure,if (copy_to_user((void __user *) optval, &val, len)))"];
"1000192" [label="(Identifier,tunnel)"];
"1000231" [label="(ControlStructure,goto end_put_sess;)"];
"1000112" [label="(Call,sock->sk)"];
"1000194" [label="(Call,ps->tunnel_sock)"];
"1000218" [label="(Identifier,sk)"];
"1000210" [label="(Call,sock_put(ps->tunnel_sock))"];
"1000139" [label="(ControlStructure,if (len < 0))"];
"1000105" [label="(MethodParameterIn,int optname)"];
"1000228" [label="(Call,put_user(len, optlen))"];
"1000242" [label="(Identifier,err)"];
"1000163" [label="(Call,pppol2tp_sock_to_session(sk))"];
"1000161" [label="(Call,session = pppol2tp_sock_to_session(sk))"];
"1000170" [label="(Call,ps = l2tp_session_priv(session))"];
"1000186" [label="(Block,)"];
"1000140" [label="(Call,len < 0)"];
"1000107" [label="(MethodParameterIn,int __user *optlen)"];
"1000245" [label="(Call,sock_put(sk))"];
"1000191" [label="(Call,tunnel = l2tp_sock_to_tunnel(ps->tunnel_sock))"];
"1000132" [label="(ControlStructure,if (get_user(len, optlen)))"];
"1000166" [label="(Call,session == NULL)"];
"1000221" [label="(Call,&val)"];
"1000145" [label="(Identifier,EINVAL)"];
"1000200" [label="(Identifier,NULL)"];
"1000106" [label="(MethodParameterIn,char __user *optval)"];
"1000123" [label="(Identifier,level)"];
"1000173" [label="(Identifier,session)"];
"1000155" [label="(Identifier,NULL)"];
"1000220" [label="(Identifier,optname)"];
"1000158" [label="(Identifier,err)"];
"1000199" [label="(Identifier,tunnel)"];
"1000133" [label="(Call,get_user(len, optlen))"];
"1000138" [label="(Identifier,EFAULT)"];
"1000111" [label="(Identifier,sk)"];
"1000237" [label="(Call,&val)"];
"1000134" [label="(Identifier,len)"];
"1000240" [label="(ControlStructure,goto end_put_sess;)"];
"1000169" [label="(ControlStructure,goto end;)"];
"1000172" [label="(Call,l2tp_session_priv(session))"];
"1000108" [label="(Block,)"];
"1000236" [label="(Identifier,optval)"];
"1000215" [label="(Call,err = pppol2tp_session_getsockopt(sk, session, optname, &val))"];
"1000206" [label="(Identifier,tunnel)"];
"1000230" [label="(Identifier,optlen)"];
"1000205" [label="(Identifier,sk)"];
"1000239" [label="(Identifier,len)"];
"1000203" [label="(Identifier,err)"];
"1000142" [label="(Literal,0)"];
"1000168" [label="(Identifier,NULL)"];
"1000207" [label="(Identifier,optname)"];
"1000217" [label="(Call,pppol2tp_session_getsockopt(sk, session, optname, &val))"];
"1000135" [label="(Identifier,optlen)"];
"1000110" [label="(Call,*sk = sock->sk)"];
"1000233" -> "1000232"  [label="AST: "];
"1000233" -> "1000239"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000237" -> "1000233"  [label="AST: "];
"1000239" -> "1000233"  [label="AST: "];
"1000240" -> "1000233"  [label="CFG: "];
"1000242" -> "1000233"  [label="CFG: "];
"1000233" -> "1000250"  [label="DDG: &val"];
"1000233" -> "1000250"  [label="DDG: len"];
"1000233" -> "1000250"  [label="DDG: copy_to_user((void __user *) optval, &val, len)"];
"1000233" -> "1000250"  [label="DDG: (void __user *) optval"];
"1000234" -> "1000233"  [label="DDG: optval"];
"1000217" -> "1000233"  [label="DDG: &val"];
"1000204" -> "1000233"  [label="DDG: &val"];
"1000228" -> "1000233"  [label="DDG: len"];
"1000234" -> "1000236"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000236" -> "1000234"  [label="AST: "];
"1000238" -> "1000234"  [label="CFG: "];
"1000234" -> "1000250"  [label="DDG: optval"];
"1000106" -> "1000234"  [label="DDG: optval"];
"1000106" -> "1000102"  [label="AST: "];
"1000106" -> "1000250"  [label="DDG: optval"];
"1000106" -> "1000126"  [label="DDG: optval"];
"1000217" -> "1000215"  [label="AST: "];
"1000217" -> "1000221"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000219" -> "1000217"  [label="AST: "];
"1000220" -> "1000217"  [label="AST: "];
"1000221" -> "1000217"  [label="AST: "];
"1000215" -> "1000217"  [label="CFG: "];
"1000217" -> "1000250"  [label="DDG: &val"];
"1000217" -> "1000250"  [label="DDG: session"];
"1000217" -> "1000250"  [label="DDG: optname"];
"1000217" -> "1000215"  [label="DDG: sk"];
"1000217" -> "1000215"  [label="DDG: session"];
"1000217" -> "1000215"  [label="DDG: optname"];
"1000217" -> "1000215"  [label="DDG: &val"];
"1000163" -> "1000217"  [label="DDG: sk"];
"1000172" -> "1000217"  [label="DDG: session"];
"1000105" -> "1000217"  [label="DDG: optname"];
"1000217" -> "1000245"  [label="DDG: sk"];
"1000163" -> "1000161"  [label="AST: "];
"1000163" -> "1000164"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000163" -> "1000250"  [label="DDG: sk"];
"1000163" -> "1000161"  [label="DDG: sk"];
"1000110" -> "1000163"  [label="DDG: sk"];
"1000163" -> "1000204"  [label="DDG: sk"];
"1000163" -> "1000245"  [label="DDG: sk"];
"1000110" -> "1000108"  [label="AST: "];
"1000110" -> "1000112"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000112" -> "1000110"  [label="AST: "];
"1000123" -> "1000110"  [label="CFG: "];
"1000110" -> "1000250"  [label="DDG: sock->sk"];
"1000110" -> "1000250"  [label="DDG: sk"];
"1000110" -> "1000126"  [label="DDG: sk"];
"1000172" -> "1000170"  [label="AST: "];
"1000172" -> "1000173"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000172" -> "1000250"  [label="DDG: session"];
"1000172" -> "1000170"  [label="DDG: session"];
"1000166" -> "1000172"  [label="DDG: session"];
"1000166" -> "1000165"  [label="AST: "];
"1000166" -> "1000168"  [label="CFG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000168" -> "1000166"  [label="AST: "];
"1000169" -> "1000166"  [label="CFG: "];
"1000171" -> "1000166"  [label="CFG: "];
"1000166" -> "1000250"  [label="DDG: NULL"];
"1000166" -> "1000250"  [label="DDG: session == NULL"];
"1000166" -> "1000250"  [label="DDG: session"];
"1000161" -> "1000166"  [label="DDG: session"];
"1000151" -> "1000166"  [label="DDG: NULL"];
"1000166" -> "1000198"  [label="DDG: NULL"];
"1000161" -> "1000108"  [label="AST: "];
"1000162" -> "1000161"  [label="AST: "];
"1000167" -> "1000161"  [label="CFG: "];
"1000161" -> "1000250"  [label="DDG: pppol2tp_sock_to_session(sk)"];
"1000151" -> "1000150"  [label="AST: "];
"1000151" -> "1000155"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000155" -> "1000151"  [label="AST: "];
"1000156" -> "1000151"  [label="CFG: "];
"1000158" -> "1000151"  [label="CFG: "];
"1000151" -> "1000250"  [label="DDG: sk->sk_user_data == NULL"];
"1000151" -> "1000250"  [label="DDG: sk->sk_user_data"];
"1000151" -> "1000250"  [label="DDG: NULL"];
"1000105" -> "1000102"  [label="AST: "];
"1000105" -> "1000250"  [label="DDG: optname"];
"1000105" -> "1000126"  [label="DDG: optname"];
"1000105" -> "1000204"  [label="DDG: optname"];
"1000204" -> "1000202"  [label="AST: "];
"1000204" -> "1000208"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000206" -> "1000204"  [label="AST: "];
"1000207" -> "1000204"  [label="AST: "];
"1000208" -> "1000204"  [label="AST: "];
"1000202" -> "1000204"  [label="CFG: "];
"1000204" -> "1000250"  [label="DDG: tunnel"];
"1000204" -> "1000250"  [label="DDG: &val"];
"1000204" -> "1000250"  [label="DDG: optname"];
"1000204" -> "1000202"  [label="DDG: sk"];
"1000204" -> "1000202"  [label="DDG: tunnel"];
"1000204" -> "1000202"  [label="DDG: optname"];
"1000204" -> "1000202"  [label="DDG: &val"];
"1000198" -> "1000204"  [label="DDG: tunnel"];
"1000204" -> "1000245"  [label="DDG: sk"];
"1000198" -> "1000197"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000201" -> "1000198"  [label="CFG: "];
"1000203" -> "1000198"  [label="CFG: "];
"1000198" -> "1000250"  [label="DDG: tunnel"];
"1000198" -> "1000250"  [label="DDG: NULL"];
"1000198" -> "1000250"  [label="DDG: tunnel == NULL"];
"1000191" -> "1000198"  [label="DDG: tunnel"];
"1000191" -> "1000186"  [label="AST: "];
"1000191" -> "1000193"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000193" -> "1000191"  [label="AST: "];
"1000199" -> "1000191"  [label="CFG: "];
"1000191" -> "1000250"  [label="DDG: l2tp_sock_to_tunnel(ps->tunnel_sock)"];
"1000193" -> "1000191"  [label="DDG: ps->tunnel_sock"];
"1000193" -> "1000194"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000193" -> "1000250"  [label="DDG: ps->tunnel_sock"];
"1000193" -> "1000210"  [label="DDG: ps->tunnel_sock"];
"1000228" -> "1000227"  [label="AST: "];
"1000228" -> "1000230"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000230" -> "1000228"  [label="AST: "];
"1000231" -> "1000228"  [label="CFG: "];
"1000235" -> "1000228"  [label="CFG: "];
"1000228" -> "1000250"  [label="DDG: put_user(len, optlen)"];
"1000228" -> "1000250"  [label="DDG: len"];
"1000228" -> "1000250"  [label="DDG: optlen"];
"1000140" -> "1000228"  [label="DDG: len"];
"1000133" -> "1000228"  [label="DDG: optlen"];
"1000107" -> "1000228"  [label="DDG: optlen"];
"1000140" -> "1000139"  [label="AST: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000142" -> "1000140"  [label="AST: "];
"1000145" -> "1000140"  [label="CFG: "];
"1000147" -> "1000140"  [label="CFG: "];
"1000140" -> "1000250"  [label="DDG: len"];
"1000140" -> "1000250"  [label="DDG: len < 0"];
"1000133" -> "1000140"  [label="DDG: len"];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000138" -> "1000133"  [label="CFG: "];
"1000141" -> "1000133"  [label="CFG: "];
"1000133" -> "1000250"  [label="DDG: len"];
"1000133" -> "1000250"  [label="DDG: get_user(len, optlen)"];
"1000133" -> "1000250"  [label="DDG: optlen"];
"1000107" -> "1000133"  [label="DDG: optlen"];
"1000107" -> "1000102"  [label="AST: "];
"1000107" -> "1000250"  [label="DDG: optlen"];
"1000107" -> "1000126"  [label="DDG: optlen"];
}
