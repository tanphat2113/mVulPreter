digraph "0_linux_f6d8bd051c391c1c0458a30b2a7abcd939329259_23@pointer" {
"1000132" [label="(Call,ipc.addr = rt->rt_src)"];
"1000130" [label="(Call,daddr = ipc.addr = rt->rt_src)"];
"1000185" [label="(Call,flowi4_init_output(&fl4, arg->bound_dev_if, 0,\n\t\t\t\t   RT_TOS(ip_hdr(skb)->tos),\n\t\t\t\t   RT_SCOPE_UNIVERSE, sk->sk_protocol,\n\t\t\t\t   ip_reply_arg_flowi_flags(arg),\n\t\t\t\t   daddr, rt->rt_spec_dst,\n\t\t\t\t   tcp_hdr(skb)->source, tcp_hdr(skb)->dest))"];
"1000217" [label="(Call,flowi4_to_flowi(&fl4))"];
"1000215" [label="(Call,security_skb_classify_flow(skb, flowi4_to_flowi(&fl4)))"];
"1000238" [label="(Call,ip_hdr(skb))"];
"1000253" [label="(Call,ip_hdr(skb))"];
"1000222" [label="(Call,ip_route_output_key(sock_net(sk), &fl4))"];
"1000220" [label="(Call,rt = ip_route_output_key(sock_net(sk), &fl4))"];
"1000228" [label="(Call,IS_ERR(rt))"];
"1000322" [label="(Call,ip_rt_put(rt))"];
"1000256" [label="(Call,sk->sk_bound_dev_if = arg->bound_dev_if)"];
"1000106" [label="(Block,)"];
"1000217" [label="(Call,flowi4_to_flowi(&fl4))"];
"1000174" [label="(Call,daddr = replyopts.opt.opt.faddr)"];
"1000212" [label="(Call,tcp_hdr(skb))"];
"1000237" [label="(Call,ip_hdr(skb)->tos)"];
"1000260" [label="(Call,arg->bound_dev_if)"];
"1000222" [label="(Call,ip_route_output_key(sock_net(sk), &fl4))"];
"1000130" [label="(Call,daddr = ipc.addr = rt->rt_src)"];
"1000141" [label="(Identifier,ipc)"];
"1000188" [label="(Call,arg->bound_dev_if)"];
"1000257" [label="(Call,sk->sk_bound_dev_if)"];
"1000191" [label="(Literal,0)"];
"1000186" [label="(Call,&fl4)"];
"1000221" [label="(Identifier,rt)"];
"1000103" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000255" [label="(FieldIdentifier,protocol)"];
"1000220" [label="(Call,rt = ip_route_output_key(sock_net(sk), &fl4))"];
"1000131" [label="(Identifier,daddr)"];
"1000211" [label="(Call,tcp_hdr(skb)->dest)"];
"1000238" [label="(Call,ip_hdr(skb))"];
"1000132" [label="(Call,ipc.addr = rt->rt_src)"];
"1000183" [label="(Block,)"];
"1000198" [label="(Call,sk->sk_protocol)"];
"1000252" [label="(Call,ip_hdr(skb)->protocol)"];
"1000197" [label="(Identifier,RT_SCOPE_UNIVERSE)"];
"1000253" [label="(Call,ip_hdr(skb))"];
"1000256" [label="(Call,sk->sk_bound_dev_if = arg->bound_dev_if)"];
"1000225" [label="(Call,&fl4)"];
"1000240" [label="(FieldIdentifier,tos)"];
"1000185" [label="(Call,flowi4_init_output(&fl4, arg->bound_dev_if, 0,\n\t\t\t\t   RT_TOS(ip_hdr(skb)->tos),\n\t\t\t\t   RT_SCOPE_UNIVERSE, sk->sk_protocol,\n\t\t\t\t   ip_reply_arg_flowi_flags(arg),\n\t\t\t\t   daddr, rt->rt_spec_dst,\n\t\t\t\t   tcp_hdr(skb)->source, tcp_hdr(skb)->dest))"];
"1000323" [label="(Identifier,rt)"];
"1000192" [label="(Call,RT_TOS(ip_hdr(skb)->tos))"];
"1000322" [label="(Call,ip_rt_put(rt))"];
"1000232" [label="(Identifier,sk)"];
"1000204" [label="(Call,rt->rt_spec_dst)"];
"1000230" [label="(Return,return;)"];
"1000207" [label="(Call,tcp_hdr(skb)->source)"];
"1000133" [label="(Call,ipc.addr)"];
"1000324" [label="(MethodReturn,void)"];
"1000254" [label="(Identifier,skb)"];
"1000201" [label="(Call,ip_reply_arg_flowi_flags(arg))"];
"1000228" [label="(Call,IS_ERR(rt))"];
"1000136" [label="(Call,rt->rt_src)"];
"1000203" [label="(Identifier,daddr)"];
"1000218" [label="(Call,&fl4)"];
"1000216" [label="(Identifier,skb)"];
"1000264" [label="(Identifier,sk)"];
"1000223" [label="(Call,sock_net(sk))"];
"1000215" [label="(Call,security_skb_classify_flow(skb, flowi4_to_flowi(&fl4)))"];
"1000227" [label="(ControlStructure,if (IS_ERR(rt)))"];
"1000239" [label="(Identifier,skb)"];
"1000229" [label="(Identifier,rt)"];
"1000132" -> "1000130"  [label="AST: "];
"1000132" -> "1000136"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000136" -> "1000132"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000132" -> "1000324"  [label="DDG: ipc.addr"];
"1000132" -> "1000324"  [label="DDG: rt->rt_src"];
"1000132" -> "1000130"  [label="DDG: ipc.addr"];
"1000130" -> "1000106"  [label="AST: "];
"1000131" -> "1000130"  [label="AST: "];
"1000141" -> "1000130"  [label="CFG: "];
"1000130" -> "1000185"  [label="DDG: daddr"];
"1000185" -> "1000183"  [label="AST: "];
"1000185" -> "1000211"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000188" -> "1000185"  [label="AST: "];
"1000191" -> "1000185"  [label="AST: "];
"1000192" -> "1000185"  [label="AST: "];
"1000197" -> "1000185"  [label="AST: "];
"1000198" -> "1000185"  [label="AST: "];
"1000201" -> "1000185"  [label="AST: "];
"1000203" -> "1000185"  [label="AST: "];
"1000204" -> "1000185"  [label="AST: "];
"1000207" -> "1000185"  [label="AST: "];
"1000211" -> "1000185"  [label="AST: "];
"1000216" -> "1000185"  [label="CFG: "];
"1000185" -> "1000324"  [label="DDG: flowi4_init_output(&fl4, arg->bound_dev_if, 0,\n\t\t\t\t   RT_TOS(ip_hdr(skb)->tos),\n\t\t\t\t   RT_SCOPE_UNIVERSE, sk->sk_protocol,\n\t\t\t\t   ip_reply_arg_flowi_flags(arg),\n\t\t\t\t   daddr, rt->rt_spec_dst,\n\t\t\t\t   tcp_hdr(skb)->source, tcp_hdr(skb)->dest)"];
"1000185" -> "1000324"  [label="DDG: arg->bound_dev_if"];
"1000185" -> "1000324"  [label="DDG: ip_reply_arg_flowi_flags(arg)"];
"1000185" -> "1000324"  [label="DDG: daddr"];
"1000185" -> "1000324"  [label="DDG: tcp_hdr(skb)->source"];
"1000185" -> "1000324"  [label="DDG: RT_SCOPE_UNIVERSE"];
"1000185" -> "1000324"  [label="DDG: tcp_hdr(skb)->dest"];
"1000185" -> "1000324"  [label="DDG: RT_TOS(ip_hdr(skb)->tos)"];
"1000185" -> "1000324"  [label="DDG: rt->rt_spec_dst"];
"1000185" -> "1000324"  [label="DDG: sk->sk_protocol"];
"1000192" -> "1000185"  [label="DDG: ip_hdr(skb)->tos"];
"1000201" -> "1000185"  [label="DDG: arg"];
"1000174" -> "1000185"  [label="DDG: daddr"];
"1000185" -> "1000217"  [label="DDG: &fl4"];
"1000185" -> "1000256"  [label="DDG: arg->bound_dev_if"];
"1000217" -> "1000215"  [label="AST: "];
"1000217" -> "1000218"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000215" -> "1000217"  [label="CFG: "];
"1000217" -> "1000215"  [label="DDG: &fl4"];
"1000217" -> "1000222"  [label="DDG: &fl4"];
"1000215" -> "1000183"  [label="AST: "];
"1000216" -> "1000215"  [label="AST: "];
"1000221" -> "1000215"  [label="CFG: "];
"1000215" -> "1000324"  [label="DDG: skb"];
"1000215" -> "1000324"  [label="DDG: flowi4_to_flowi(&fl4)"];
"1000215" -> "1000324"  [label="DDG: security_skb_classify_flow(skb, flowi4_to_flowi(&fl4))"];
"1000212" -> "1000215"  [label="DDG: skb"];
"1000103" -> "1000215"  [label="DDG: skb"];
"1000215" -> "1000238"  [label="DDG: skb"];
"1000238" -> "1000237"  [label="AST: "];
"1000238" -> "1000239"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="CFG: "];
"1000103" -> "1000238"  [label="DDG: skb"];
"1000238" -> "1000253"  [label="DDG: skb"];
"1000253" -> "1000252"  [label="AST: "];
"1000253" -> "1000254"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000255" -> "1000253"  [label="CFG: "];
"1000103" -> "1000253"  [label="DDG: skb"];
"1000222" -> "1000220"  [label="AST: "];
"1000222" -> "1000225"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000225" -> "1000222"  [label="AST: "];
"1000220" -> "1000222"  [label="CFG: "];
"1000222" -> "1000324"  [label="DDG: &fl4"];
"1000222" -> "1000324"  [label="DDG: sock_net(sk)"];
"1000222" -> "1000220"  [label="DDG: sock_net(sk)"];
"1000222" -> "1000220"  [label="DDG: &fl4"];
"1000223" -> "1000222"  [label="DDG: sk"];
"1000220" -> "1000183"  [label="AST: "];
"1000221" -> "1000220"  [label="AST: "];
"1000229" -> "1000220"  [label="CFG: "];
"1000220" -> "1000324"  [label="DDG: ip_route_output_key(sock_net(sk), &fl4)"];
"1000220" -> "1000228"  [label="DDG: rt"];
"1000228" -> "1000227"  [label="AST: "];
"1000228" -> "1000229"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000230" -> "1000228"  [label="CFG: "];
"1000232" -> "1000228"  [label="CFG: "];
"1000228" -> "1000324"  [label="DDG: IS_ERR(rt)"];
"1000228" -> "1000324"  [label="DDG: rt"];
"1000228" -> "1000322"  [label="DDG: rt"];
"1000322" -> "1000106"  [label="AST: "];
"1000322" -> "1000323"  [label="CFG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000324" -> "1000322"  [label="CFG: "];
"1000322" -> "1000324"  [label="DDG: ip_rt_put(rt)"];
"1000322" -> "1000324"  [label="DDG: rt"];
"1000256" -> "1000106"  [label="AST: "];
"1000256" -> "1000260"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000260" -> "1000256"  [label="AST: "];
"1000264" -> "1000256"  [label="CFG: "];
"1000256" -> "1000324"  [label="DDG: arg->bound_dev_if"];
"1000256" -> "1000324"  [label="DDG: sk->sk_bound_dev_if"];
}
