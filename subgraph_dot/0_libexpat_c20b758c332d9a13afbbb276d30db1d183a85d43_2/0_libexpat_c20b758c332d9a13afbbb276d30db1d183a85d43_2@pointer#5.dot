digraph "0_libexpat_c20b758c332d9a13afbbb276d30db1d183a85d43_2@pointer" {
"1000295" [label="(Call,entity->open = XML_FALSE)"];
"1000248" [label="(Call,doContent(parser, parser->m_tagLevel, parser->m_internalEncoding,\n                       textStart, textEnd, &next, XML_FALSE))"];
"1000135" [label="(Call,MALLOC(parser, sizeof(OPEN_INTERNAL_ENTITY)))"];
"1000103" [label="(MethodParameterIn,XML_Parser parser)"];
"1000193" [label="(Call,textStart = (char *)entity->textPtr)"];
"1000195" [label="(Call,(char *)entity->textPtr)"];
"1000200" [label="(Call,textEnd = (char *)(entity->textPtr + entity->textLen))"];
"1000202" [label="(Call,(char *)(entity->textPtr + entity->textLen))"];
"1000232" [label="(Call,doProlog(parser, parser->m_internalEncoding, textStart, textEnd,\n                      tok, next, &next, XML_FALSE, XML_FALSE))"];
"1000222" [label="(Call,XmlPrologTok(parser->m_internalEncoding, textStart, textEnd, &next))"];
"1000220" [label="(Call,tok\n         = XmlPrologTok(parser->m_internalEncoding, textStart, textEnd, &next))"];
"1000211" [label="(Call,next = textStart)"];
"1000285" [label="(Call,next - textStart)"];
"1000249" [label="(Identifier,parser)"];
"1000226" [label="(Identifier,textStart)"];
"1000268" [label="(Call,textEnd != next)"];
"1000220" [label="(Call,tok\n         = XmlPrologTok(parser->m_internalEncoding, textStart, textEnd, &next))"];
"1000244" [label="(Identifier,XML_FALSE)"];
"1000106" [label="(Block,)"];
"1000302" [label="(Identifier,parser)"];
"1000204" [label="(Call,entity->textPtr + entity->textLen)"];
"1000243" [label="(Identifier,XML_FALSE)"];
"1000223" [label="(Call,parser->m_internalEncoding)"];
"1000299" [label="(Identifier,XML_FALSE)"];
"1000232" [label="(Call,doProlog(parser, parser->m_internalEncoding, textStart, textEnd,\n                      tok, next, &next, XML_FALSE, XML_FALSE))"];
"1000197" [label="(Call,entity->textPtr)"];
"1000237" [label="(Identifier,textStart)"];
"1000136" [label="(Identifier,parser)"];
"1000221" [label="(Identifier,tok)"];
"1000295" [label="(Call,entity->open = XML_FALSE)"];
"1000194" [label="(Identifier,textStart)"];
"1000212" [label="(Identifier,next)"];
"1000253" [label="(Call,parser->m_internalEncoding)"];
"1000256" [label="(Identifier,textStart)"];
"1000133" [label="(Call,(OPEN_INTERNAL_ENTITY *)MALLOC(parser, sizeof(OPEN_INTERNAL_ENTITY)))"];
"1000258" [label="(Call,&next)"];
"1000240" [label="(Identifier,next)"];
"1000213" [label="(Identifier,textStart)"];
"1000193" [label="(Call,textStart = (char *)entity->textPtr)"];
"1000135" [label="(Call,MALLOC(parser, sizeof(OPEN_INTERNAL_ENTITY)))"];
"1000230" [label="(Call,result = doProlog(parser, parser->m_internalEncoding, textStart, textEnd,\n                      tok, next, &next, XML_FALSE, XML_FALSE))"];
"1000260" [label="(Identifier,XML_FALSE)"];
"1000137" [label="(Call,sizeof(OPEN_INTERNAL_ENTITY))"];
"1000257" [label="(Identifier,textEnd)"];
"1000211" [label="(Call,next = textStart)"];
"1000241" [label="(Call,&next)"];
"1000227" [label="(Identifier,textEnd)"];
"1000200" [label="(Call,textEnd = (char *)(entity->textPtr + entity->textLen))"];
"1000216" [label="(Identifier,entity)"];
"1000294" [label="(Block,)"];
"1000246" [label="(Call,result = doContent(parser, parser->m_tagLevel, parser->m_internalEncoding,\n                       textStart, textEnd, &next, XML_FALSE))"];
"1000238" [label="(Identifier,textEnd)"];
"1000222" [label="(Call,XmlPrologTok(parser->m_internalEncoding, textStart, textEnd, &next))"];
"1000239" [label="(Identifier,tok)"];
"1000231" [label="(Identifier,result)"];
"1000195" [label="(Call,(char *)entity->textPtr)"];
"1000228" [label="(Call,&next)"];
"1000218" [label="(Block,)"];
"1000201" [label="(Identifier,textEnd)"];
"1000321" [label="(MethodReturn,RET)"];
"1000233" [label="(Identifier,parser)"];
"1000234" [label="(Call,parser->m_internalEncoding)"];
"1000296" [label="(Call,entity->open)"];
"1000250" [label="(Call,parser->m_tagLevel)"];
"1000202" [label="(Call,(char *)(entity->textPtr + entity->textLen))"];
"1000103" [label="(MethodParameterIn,XML_Parser parser)"];
"1000248" [label="(Call,doContent(parser, parser->m_tagLevel, parser->m_internalEncoding,\n                       textStart, textEnd, &next, XML_FALSE))"];
"1000295" -> "1000294"  [label="AST: "];
"1000295" -> "1000299"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000299" -> "1000295"  [label="AST: "];
"1000302" -> "1000295"  [label="CFG: "];
"1000295" -> "1000321"  [label="DDG: entity->open"];
"1000295" -> "1000321"  [label="DDG: XML_FALSE"];
"1000248" -> "1000295"  [label="DDG: XML_FALSE"];
"1000232" -> "1000295"  [label="DDG: XML_FALSE"];
"1000248" -> "1000246"  [label="AST: "];
"1000248" -> "1000260"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="AST: "];
"1000253" -> "1000248"  [label="AST: "];
"1000256" -> "1000248"  [label="AST: "];
"1000257" -> "1000248"  [label="AST: "];
"1000258" -> "1000248"  [label="AST: "];
"1000260" -> "1000248"  [label="AST: "];
"1000246" -> "1000248"  [label="CFG: "];
"1000248" -> "1000321"  [label="DDG: XML_FALSE"];
"1000248" -> "1000321"  [label="DDG: parser->m_internalEncoding"];
"1000248" -> "1000321"  [label="DDG: &next"];
"1000248" -> "1000321"  [label="DDG: textEnd"];
"1000248" -> "1000321"  [label="DDG: parser->m_tagLevel"];
"1000248" -> "1000321"  [label="DDG: textStart"];
"1000248" -> "1000321"  [label="DDG: parser"];
"1000248" -> "1000246"  [label="DDG: parser->m_internalEncoding"];
"1000248" -> "1000246"  [label="DDG: parser->m_tagLevel"];
"1000248" -> "1000246"  [label="DDG: parser"];
"1000248" -> "1000246"  [label="DDG: textStart"];
"1000248" -> "1000246"  [label="DDG: XML_FALSE"];
"1000248" -> "1000246"  [label="DDG: &next"];
"1000248" -> "1000246"  [label="DDG: textEnd"];
"1000135" -> "1000248"  [label="DDG: parser"];
"1000103" -> "1000248"  [label="DDG: parser"];
"1000193" -> "1000248"  [label="DDG: textStart"];
"1000200" -> "1000248"  [label="DDG: textEnd"];
"1000248" -> "1000268"  [label="DDG: textEnd"];
"1000248" -> "1000285"  [label="DDG: textStart"];
"1000135" -> "1000133"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000135" -> "1000321"  [label="DDG: parser"];
"1000135" -> "1000133"  [label="DDG: parser"];
"1000103" -> "1000135"  [label="DDG: parser"];
"1000135" -> "1000232"  [label="DDG: parser"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000321"  [label="DDG: parser"];
"1000103" -> "1000232"  [label="DDG: parser"];
"1000193" -> "1000106"  [label="AST: "];
"1000193" -> "1000195"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000195" -> "1000193"  [label="AST: "];
"1000201" -> "1000193"  [label="CFG: "];
"1000193" -> "1000321"  [label="DDG: (char *)entity->textPtr"];
"1000195" -> "1000193"  [label="DDG: entity->textPtr"];
"1000193" -> "1000211"  [label="DDG: textStart"];
"1000193" -> "1000222"  [label="DDG: textStart"];
"1000195" -> "1000197"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000197" -> "1000195"  [label="AST: "];
"1000195" -> "1000202"  [label="DDG: entity->textPtr"];
"1000195" -> "1000204"  [label="DDG: entity->textPtr"];
"1000200" -> "1000106"  [label="AST: "];
"1000200" -> "1000202"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000202" -> "1000200"  [label="AST: "];
"1000212" -> "1000200"  [label="CFG: "];
"1000200" -> "1000321"  [label="DDG: (char *)(entity->textPtr + entity->textLen)"];
"1000202" -> "1000200"  [label="DDG: entity->textPtr + entity->textLen"];
"1000200" -> "1000222"  [label="DDG: textEnd"];
"1000202" -> "1000204"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000202" -> "1000321"  [label="DDG: entity->textPtr + entity->textLen"];
"1000232" -> "1000230"  [label="AST: "];
"1000232" -> "1000244"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000234" -> "1000232"  [label="AST: "];
"1000237" -> "1000232"  [label="AST: "];
"1000238" -> "1000232"  [label="AST: "];
"1000239" -> "1000232"  [label="AST: "];
"1000240" -> "1000232"  [label="AST: "];
"1000241" -> "1000232"  [label="AST: "];
"1000243" -> "1000232"  [label="AST: "];
"1000244" -> "1000232"  [label="AST: "];
"1000230" -> "1000232"  [label="CFG: "];
"1000232" -> "1000321"  [label="DDG: textStart"];
"1000232" -> "1000321"  [label="DDG: tok"];
"1000232" -> "1000321"  [label="DDG: parser"];
"1000232" -> "1000321"  [label="DDG: next"];
"1000232" -> "1000321"  [label="DDG: textEnd"];
"1000232" -> "1000321"  [label="DDG: parser->m_internalEncoding"];
"1000232" -> "1000321"  [label="DDG: XML_FALSE"];
"1000232" -> "1000321"  [label="DDG: &next"];
"1000232" -> "1000230"  [label="DDG: parser"];
"1000232" -> "1000230"  [label="DDG: parser->m_internalEncoding"];
"1000232" -> "1000230"  [label="DDG: XML_FALSE"];
"1000232" -> "1000230"  [label="DDG: textEnd"];
"1000232" -> "1000230"  [label="DDG: &next"];
"1000232" -> "1000230"  [label="DDG: tok"];
"1000232" -> "1000230"  [label="DDG: next"];
"1000232" -> "1000230"  [label="DDG: textStart"];
"1000222" -> "1000232"  [label="DDG: parser->m_internalEncoding"];
"1000222" -> "1000232"  [label="DDG: textStart"];
"1000222" -> "1000232"  [label="DDG: textEnd"];
"1000222" -> "1000232"  [label="DDG: &next"];
"1000220" -> "1000232"  [label="DDG: tok"];
"1000211" -> "1000232"  [label="DDG: next"];
"1000232" -> "1000268"  [label="DDG: textEnd"];
"1000232" -> "1000268"  [label="DDG: next"];
"1000232" -> "1000285"  [label="DDG: textStart"];
"1000222" -> "1000220"  [label="AST: "];
"1000222" -> "1000228"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000226" -> "1000222"  [label="AST: "];
"1000227" -> "1000222"  [label="AST: "];
"1000228" -> "1000222"  [label="AST: "];
"1000220" -> "1000222"  [label="CFG: "];
"1000222" -> "1000220"  [label="DDG: parser->m_internalEncoding"];
"1000222" -> "1000220"  [label="DDG: textStart"];
"1000222" -> "1000220"  [label="DDG: textEnd"];
"1000222" -> "1000220"  [label="DDG: &next"];
"1000220" -> "1000218"  [label="AST: "];
"1000221" -> "1000220"  [label="AST: "];
"1000231" -> "1000220"  [label="CFG: "];
"1000220" -> "1000321"  [label="DDG: XmlPrologTok(parser->m_internalEncoding, textStart, textEnd, &next)"];
"1000211" -> "1000106"  [label="AST: "];
"1000211" -> "1000213"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000213" -> "1000211"  [label="AST: "];
"1000216" -> "1000211"  [label="CFG: "];
"1000211" -> "1000321"  [label="DDG: next"];
"1000211" -> "1000268"  [label="DDG: next"];
}
