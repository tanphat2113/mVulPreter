digraph "0_libtiff_391e77fcd217e78b2c51342ac3ddb7100ecacdd2@API" {
"1000224" [label="(Call,sp->stream.avail_out != nsamples * sizeof(uint16))"];
"1000211" [label="(Call,sp->stream.avail_out = (uInt) (nsamples * sizeof(uint16)))"];
"1000217" [label="(Call,(uInt) (nsamples * sizeof(uint16)))"];
"1000219" [label="(Call,nsamples * sizeof(uint16))"];
"1000150" [label="(Call,nsamples = occ / sizeof(uint16))"];
"1000152" [label="(Call,occ / sizeof(uint16))"];
"1000111" [label="(MethodParameterIn,tmsize_t occ)"];
"1000159" [label="(Call,nsamples = occ)"];
"1000140" [label="(Call,nsamples = occ / sizeof(float))"];
"1000142" [label="(Call,occ / sizeof(float))"];
"1000230" [label="(Call,nsamples * sizeof(uint16))"];
"1000244" [label="(Call,sp->stream.avail_out > sp->tbuf_size)"];
"1000343" [label="(Call,sp->stream.avail_out > 0)"];
"1000351" [label="(Call,sp->stream.avail_out != 0)"];
"1000370" [label="(Call,(TIFF_UINT64_T) sp->stream.avail_out)"];
"1000359" [label="(Call,TIFFErrorExt(tif->tif_clientdata, module,\n\t\t    \"Not enough data at scanline %lu (short \" TIFF_UINT64_FORMAT \" bytes)\",\n\t\t    (unsigned long) tif->tif_row, (TIFF_UINT64_T) sp->stream.avail_out))"];
"1000225" [label="(Call,sp->stream.avail_out)"];
"1000227" [label="(Identifier,sp)"];
"1000111" [label="(MethodParameterIn,tmsize_t occ)"];
"1000161" [label="(Identifier,occ)"];
"1000359" [label="(Call,TIFFErrorExt(tif->tif_clientdata, module,\n\t\t    \"Not enough data at scanline %lu (short \" TIFF_UINT64_FORMAT \" bytes)\",\n\t\t    (unsigned long) tif->tif_row, (TIFF_UINT64_T) sp->stream.avail_out))"];
"1000138" [label="(Block,)"];
"1000159" [label="(Call,nsamples = occ)"];
"1000160" [label="(Identifier,nsamples)"];
"1000217" [label="(Call,(uInt) (nsamples * sizeof(uint16)))"];
"1000284" [label="(Call,TIFFErrorExt(tif->tif_clientdata, module,\n\t\t\t    \"Decoding error at scanline %lu, %s\",\n\t\t\t    (unsigned long) tif->tif_row, sp->stream.msg ? sp->stream.msg : \"(null)\"))"];
"1000343" [label="(Call,sp->stream.avail_out > 0)"];
"1000153" [label="(Identifier,occ)"];
"1000232" [label="(Call,sizeof(uint16))"];
"1000244" [label="(Call,sp->stream.avail_out > sp->tbuf_size)"];
"1000141" [label="(Identifier,nsamples)"];
"1000262" [label="(ControlStructure,do)"];
"1000357" [label="(Literal,0)"];
"1000394" [label="(Call,nsamples % llen)"];
"1000354" [label="(Identifier,sp)"];
"1000219" [label="(Call,nsamples * sizeof(uint16))"];
"1000223" [label="(ControlStructure,if (sp->stream.avail_out != nsamples * sizeof(uint16)))"];
"1000245" [label="(Call,sp->stream.avail_out)"];
"1000156" [label="(ControlStructure,break;)"];
"1000361" [label="(Identifier,tif)"];
"1000372" [label="(Call,sp->stream.avail_out)"];
"1000146" [label="(ControlStructure,break;)"];
"1000351" [label="(Call,sp->stream.avail_out != 0)"];
"1000365" [label="(Call,(unsigned long) tif->tif_row)"];
"1000150" [label="(Call,nsamples = occ / sizeof(uint16))"];
"1000144" [label="(Call,sizeof(float))"];
"1000224" [label="(Call,sp->stream.avail_out != nsamples * sizeof(uint16))"];
"1000220" [label="(Identifier,nsamples)"];
"1000390" [label="(Call,TIFFSwabArrayOfShort(up, nsamples))"];
"1000250" [label="(Call,sp->tbuf_size)"];
"1000152" [label="(Call,occ / sizeof(uint16))"];
"1000154" [label="(Call,sizeof(uint16))"];
"1000350" [label="(ControlStructure,if (sp->stream.avail_out != 0))"];
"1000221" [label="(Call,sizeof(uint16))"];
"1000151" [label="(Identifier,nsamples)"];
"1000370" [label="(Call,(TIFF_UINT64_T) sp->stream.avail_out)"];
"1000363" [label="(Identifier,module)"];
"1000344" [label="(Call,sp->stream.avail_out)"];
"1000162" [label="(ControlStructure,break;)"];
"1000211" [label="(Call,sp->stream.avail_out = (uInt) (nsamples * sizeof(uint16)))"];
"1000113" [label="(Block,)"];
"1000231" [label="(Identifier,nsamples)"];
"1000256" [label="(Identifier,tif)"];
"1000142" [label="(Call,occ / sizeof(float))"];
"1000140" [label="(Call,nsamples = occ / sizeof(float))"];
"1000237" [label="(Identifier,tif)"];
"1000378" [label="(Literal,0)"];
"1000115" [label="(Call,module[] = \"PixarLogDecode\")"];
"1000143" [label="(Identifier,occ)"];
"1000266" [label="(Identifier,state)"];
"1000352" [label="(Call,sp->stream.avail_out)"];
"1000360" [label="(Call,tif->tif_clientdata)"];
"1000566" [label="(MethodReturn,RET)"];
"1000349" [label="(Literal,0)"];
"1000380" [label="(Identifier,up)"];
"1000230" [label="(Call,nsamples * sizeof(uint16))"];
"1000243" [label="(ControlStructure,if (sp->stream.avail_out > sp->tbuf_size))"];
"1000247" [label="(Identifier,sp)"];
"1000364" [label="(Literal,\"Not enough data at scanline %lu (short \" TIFF_UINT64_FORMAT \" bytes)\")"];
"1000358" [label="(Block,)"];
"1000212" [label="(Call,sp->stream.avail_out)"];
"1000224" -> "1000223"  [label="AST: "];
"1000224" -> "1000230"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000230" -> "1000224"  [label="AST: "];
"1000237" -> "1000224"  [label="CFG: "];
"1000247" -> "1000224"  [label="CFG: "];
"1000224" -> "1000566"  [label="DDG: "];
"1000224" -> "1000566"  [label="DDG: "];
"1000224" -> "1000566"  [label="DDG: "];
"1000211" -> "1000224"  [label="DDG: "];
"1000230" -> "1000224"  [label="DDG: "];
"1000224" -> "1000244"  [label="DDG: "];
"1000211" -> "1000113"  [label="AST: "];
"1000211" -> "1000217"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000217" -> "1000211"  [label="AST: "];
"1000227" -> "1000211"  [label="CFG: "];
"1000211" -> "1000566"  [label="DDG: "];
"1000217" -> "1000211"  [label="DDG: "];
"1000217" -> "1000219"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000219" -> "1000217"  [label="AST: "];
"1000219" -> "1000217"  [label="DDG: "];
"1000219" -> "1000221"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000221" -> "1000219"  [label="AST: "];
"1000150" -> "1000219"  [label="DDG: "];
"1000159" -> "1000219"  [label="DDG: "];
"1000140" -> "1000219"  [label="DDG: "];
"1000219" -> "1000230"  [label="DDG: "];
"1000150" -> "1000138"  [label="AST: "];
"1000150" -> "1000152"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="AST: "];
"1000156" -> "1000150"  [label="CFG: "];
"1000150" -> "1000566"  [label="DDG: "];
"1000152" -> "1000150"  [label="DDG: "];
"1000152" -> "1000154"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000152" -> "1000566"  [label="DDG: "];
"1000111" -> "1000152"  [label="DDG: "];
"1000111" -> "1000108"  [label="AST: "];
"1000111" -> "1000566"  [label="DDG: "];
"1000111" -> "1000142"  [label="DDG: "];
"1000111" -> "1000159"  [label="DDG: "];
"1000159" -> "1000138"  [label="AST: "];
"1000159" -> "1000161"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000161" -> "1000159"  [label="AST: "];
"1000162" -> "1000159"  [label="CFG: "];
"1000159" -> "1000566"  [label="DDG: "];
"1000140" -> "1000138"  [label="AST: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000142" -> "1000140"  [label="AST: "];
"1000146" -> "1000140"  [label="CFG: "];
"1000140" -> "1000566"  [label="DDG: "];
"1000142" -> "1000140"  [label="DDG: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000142" -> "1000566"  [label="DDG: "];
"1000230" -> "1000232"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000232" -> "1000230"  [label="AST: "];
"1000230" -> "1000566"  [label="DDG: "];
"1000230" -> "1000390"  [label="DDG: "];
"1000230" -> "1000394"  [label="DDG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000244" -> "1000250"  [label="CFG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000250" -> "1000244"  [label="AST: "];
"1000256" -> "1000244"  [label="CFG: "];
"1000266" -> "1000244"  [label="CFG: "];
"1000244" -> "1000566"  [label="DDG: "];
"1000244" -> "1000566"  [label="DDG: "];
"1000244" -> "1000566"  [label="DDG: "];
"1000244" -> "1000343"  [label="DDG: "];
"1000244" -> "1000351"  [label="DDG: "];
"1000343" -> "1000262"  [label="AST: "];
"1000343" -> "1000349"  [label="CFG: "];
"1000344" -> "1000343"  [label="AST: "];
"1000349" -> "1000343"  [label="AST: "];
"1000266" -> "1000343"  [label="CFG: "];
"1000354" -> "1000343"  [label="CFG: "];
"1000343" -> "1000566"  [label="DDG: "];
"1000343" -> "1000566"  [label="DDG: "];
"1000343" -> "1000351"  [label="DDG: "];
"1000351" -> "1000350"  [label="AST: "];
"1000351" -> "1000357"  [label="CFG: "];
"1000352" -> "1000351"  [label="AST: "];
"1000357" -> "1000351"  [label="AST: "];
"1000361" -> "1000351"  [label="CFG: "];
"1000380" -> "1000351"  [label="CFG: "];
"1000351" -> "1000566"  [label="DDG: "];
"1000351" -> "1000566"  [label="DDG: "];
"1000351" -> "1000370"  [label="DDG: "];
"1000370" -> "1000359"  [label="AST: "];
"1000370" -> "1000372"  [label="CFG: "];
"1000371" -> "1000370"  [label="AST: "];
"1000372" -> "1000370"  [label="AST: "];
"1000359" -> "1000370"  [label="CFG: "];
"1000370" -> "1000566"  [label="DDG: "];
"1000370" -> "1000359"  [label="DDG: "];
"1000359" -> "1000358"  [label="AST: "];
"1000360" -> "1000359"  [label="AST: "];
"1000363" -> "1000359"  [label="AST: "];
"1000364" -> "1000359"  [label="AST: "];
"1000365" -> "1000359"  [label="AST: "];
"1000378" -> "1000359"  [label="CFG: "];
"1000359" -> "1000566"  [label="DDG: "];
"1000359" -> "1000566"  [label="DDG: "];
"1000359" -> "1000566"  [label="DDG: "];
"1000359" -> "1000566"  [label="DDG: "];
"1000359" -> "1000566"  [label="DDG: "];
"1000284" -> "1000359"  [label="DDG: "];
"1000284" -> "1000359"  [label="DDG: "];
"1000115" -> "1000359"  [label="DDG: "];
"1000365" -> "1000359"  [label="DDG: "];
}
