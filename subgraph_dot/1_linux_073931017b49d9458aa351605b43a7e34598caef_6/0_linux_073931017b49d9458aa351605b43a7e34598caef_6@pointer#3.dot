digraph "0_linux_073931017b49d9458aa351605b43a7e34598caef_6@pointer" {
"1000134" [label="(Call,posix_acl_equiv_mode(acl, &inode->i_mode))"];
"1000102" [label="(MethodParameterIn,struct posix_acl *acl)"];
"1000132" [label="(Call,err = posix_acl_equiv_mode(acl, &inode->i_mode))"];
"1000141" [label="(Call,err < 0)"];
"1000144" [label="(Return,return err;)"];
"1000202" [label="(Call,posix_acl_to_xattr(&init_user_ns, acl, value, size))"];
"1000200" [label="(Call,err = posix_acl_to_xattr(&init_user_ns, acl, value, size))"];
"1000210" [label="(Call,err < 0)"];
"1000209" [label="(Call,unlikely(err < 0))"];
"1000228" [label="(Call,!err)"];
"1000234" [label="(Return,return err;)"];
"1000216" [label="(Call,__hfsplus_setxattr(inode, xattr_name, value, size, 0))"];
"1000214" [label="(Call,err = __hfsplus_setxattr(inode, xattr_name, value, size, 0))"];
"1000224" [label="(Call,(hfsplus_attr_entry *)value)"];
"1000223" [label="(Call,hfsplus_destroy_attr_entry((hfsplus_attr_entry *)value))"];
"1000230" [label="(Call,set_cached_acl(inode, type, acl))"];
"1000227" [label="(ControlStructure,if (!err))"];
"1000161" [label="(Call,acl ? -EACCES : 0)"];
"1000210" [label="(Call,err < 0)"];
"1000104" [label="(Block,)"];
"1000217" [label="(Identifier,inode)"];
"1000229" [label="(Identifier,err)"];
"1000232" [label="(Identifier,type)"];
"1000203" [label="(Call,&init_user_ns)"];
"1000141" [label="(Call,err < 0)"];
"1000195" [label="(Call,!value)"];
"1000234" [label="(Return,return err;)"];
"1000202" [label="(Call,posix_acl_to_xattr(&init_user_ns, acl, value, size))"];
"1000201" [label="(Identifier,err)"];
"1000182" [label="(Call,size > HFSPLUS_MAX_INLINE_DATA_SIZE)"];
"1000216" [label="(Call,__hfsplus_setxattr(inode, xattr_name, value, size, 0))"];
"1000219" [label="(Identifier,value)"];
"1000173" [label="(Block,)"];
"1000218" [label="(Identifier,xattr_name)"];
"1000223" [label="(Call,hfsplus_destroy_attr_entry((hfsplus_attr_entry *)value))"];
"1000236" [label="(MethodReturn,int)"];
"1000136" [label="(Call,&inode->i_mode)"];
"1000144" [label="(Return,return err;)"];
"1000228" [label="(Call,!err)"];
"1000224" [label="(Call,(hfsplus_attr_entry *)value)"];
"1000145" [label="(Identifier,err)"];
"1000220" [label="(Identifier,size)"];
"1000112" [label="(Call,*value = NULL)"];
"1000200" [label="(Call,err = posix_acl_to_xattr(&init_user_ns, acl, value, size))"];
"1000214" [label="(Call,err = __hfsplus_setxattr(inode, xattr_name, value, size, 0))"];
"1000209" [label="(Call,unlikely(err < 0))"];
"1000207" [label="(Identifier,size)"];
"1000205" [label="(Identifier,acl)"];
"1000221" [label="(Literal,0)"];
"1000151" [label="(Call,xattr_name = XATTR_NAME_POSIX_ACL_DEFAULT)"];
"1000103" [label="(MethodParameterIn,int type)"];
"1000126" [label="(Call,xattr_name = XATTR_NAME_POSIX_ACL_ACCESS)"];
"1000235" [label="(Identifier,err)"];
"1000211" [label="(Identifier,err)"];
"1000147" [label="(Identifier,err)"];
"1000231" [label="(Identifier,inode)"];
"1000142" [label="(Identifier,err)"];
"1000226" [label="(Identifier,value)"];
"1000108" [label="(Call,size = 0)"];
"1000140" [label="(ControlStructure,if (err < 0))"];
"1000233" [label="(Identifier,acl)"];
"1000134" [label="(Call,posix_acl_equiv_mode(acl, &inode->i_mode))"];
"1000206" [label="(Identifier,value)"];
"1000132" [label="(Call,err = posix_acl_equiv_mode(acl, &inode->i_mode))"];
"1000143" [label="(Literal,0)"];
"1000135" [label="(Identifier,acl)"];
"1000208" [label="(ControlStructure,if (unlikely(err < 0)))"];
"1000133" [label="(Identifier,err)"];
"1000102" [label="(MethodParameterIn,struct posix_acl *acl)"];
"1000230" [label="(Call,set_cached_acl(inode, type, acl))"];
"1000215" [label="(Identifier,err)"];
"1000101" [label="(MethodParameterIn,struct inode *inode)"];
"1000213" [label="(ControlStructure,goto end_set_acl;)"];
"1000222" [label="(JumpTarget,end_set_acl:)"];
"1000131" [label="(Block,)"];
"1000212" [label="(Literal,0)"];
"1000134" -> "1000132"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000132" -> "1000134"  [label="CFG: "];
"1000134" -> "1000236"  [label="DDG: acl"];
"1000134" -> "1000236"  [label="DDG: &inode->i_mode"];
"1000134" -> "1000132"  [label="DDG: acl"];
"1000134" -> "1000132"  [label="DDG: &inode->i_mode"];
"1000102" -> "1000134"  [label="DDG: acl"];
"1000134" -> "1000202"  [label="DDG: acl"];
"1000134" -> "1000230"  [label="DDG: acl"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000236"  [label="DDG: acl"];
"1000102" -> "1000161"  [label="DDG: acl"];
"1000102" -> "1000202"  [label="DDG: acl"];
"1000102" -> "1000230"  [label="DDG: acl"];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000132"  [label="AST: "];
"1000142" -> "1000132"  [label="CFG: "];
"1000132" -> "1000236"  [label="DDG: posix_acl_equiv_mode(acl, &inode->i_mode)"];
"1000132" -> "1000141"  [label="DDG: err"];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000145" -> "1000141"  [label="CFG: "];
"1000147" -> "1000141"  [label="CFG: "];
"1000141" -> "1000236"  [label="DDG: err"];
"1000141" -> "1000236"  [label="DDG: err < 0"];
"1000141" -> "1000144"  [label="DDG: err"];
"1000144" -> "1000140"  [label="AST: "];
"1000144" -> "1000145"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000236" -> "1000144"  [label="CFG: "];
"1000144" -> "1000236"  [label="DDG: <RET>"];
"1000145" -> "1000144"  [label="DDG: err"];
"1000202" -> "1000200"  [label="AST: "];
"1000202" -> "1000207"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000205" -> "1000202"  [label="AST: "];
"1000206" -> "1000202"  [label="AST: "];
"1000207" -> "1000202"  [label="AST: "];
"1000200" -> "1000202"  [label="CFG: "];
"1000202" -> "1000236"  [label="DDG: &init_user_ns"];
"1000202" -> "1000236"  [label="DDG: size"];
"1000202" -> "1000236"  [label="DDG: acl"];
"1000202" -> "1000200"  [label="DDG: &init_user_ns"];
"1000202" -> "1000200"  [label="DDG: acl"];
"1000202" -> "1000200"  [label="DDG: value"];
"1000202" -> "1000200"  [label="DDG: size"];
"1000195" -> "1000202"  [label="DDG: value"];
"1000182" -> "1000202"  [label="DDG: size"];
"1000202" -> "1000216"  [label="DDG: value"];
"1000202" -> "1000216"  [label="DDG: size"];
"1000202" -> "1000224"  [label="DDG: value"];
"1000202" -> "1000230"  [label="DDG: acl"];
"1000200" -> "1000173"  [label="AST: "];
"1000201" -> "1000200"  [label="AST: "];
"1000211" -> "1000200"  [label="CFG: "];
"1000200" -> "1000236"  [label="DDG: posix_acl_to_xattr(&init_user_ns, acl, value, size)"];
"1000200" -> "1000210"  [label="DDG: err"];
"1000210" -> "1000209"  [label="AST: "];
"1000210" -> "1000212"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="AST: "];
"1000209" -> "1000210"  [label="CFG: "];
"1000210" -> "1000209"  [label="DDG: err"];
"1000210" -> "1000209"  [label="DDG: 0"];
"1000210" -> "1000228"  [label="DDG: err"];
"1000209" -> "1000208"  [label="AST: "];
"1000213" -> "1000209"  [label="CFG: "];
"1000215" -> "1000209"  [label="CFG: "];
"1000209" -> "1000236"  [label="DDG: unlikely(err < 0)"];
"1000209" -> "1000236"  [label="DDG: err < 0"];
"1000228" -> "1000227"  [label="AST: "];
"1000228" -> "1000229"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000231" -> "1000228"  [label="CFG: "];
"1000235" -> "1000228"  [label="CFG: "];
"1000228" -> "1000236"  [label="DDG: !err"];
"1000228" -> "1000236"  [label="DDG: err"];
"1000214" -> "1000228"  [label="DDG: err"];
"1000228" -> "1000234"  [label="DDG: err"];
"1000234" -> "1000104"  [label="AST: "];
"1000234" -> "1000235"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000236" -> "1000234"  [label="CFG: "];
"1000234" -> "1000236"  [label="DDG: <RET>"];
"1000235" -> "1000234"  [label="DDG: err"];
"1000216" -> "1000214"  [label="AST: "];
"1000216" -> "1000221"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000218" -> "1000216"  [label="AST: "];
"1000219" -> "1000216"  [label="AST: "];
"1000220" -> "1000216"  [label="AST: "];
"1000221" -> "1000216"  [label="AST: "];
"1000214" -> "1000216"  [label="CFG: "];
"1000216" -> "1000236"  [label="DDG: inode"];
"1000216" -> "1000236"  [label="DDG: xattr_name"];
"1000216" -> "1000236"  [label="DDG: size"];
"1000216" -> "1000214"  [label="DDG: xattr_name"];
"1000216" -> "1000214"  [label="DDG: inode"];
"1000216" -> "1000214"  [label="DDG: value"];
"1000216" -> "1000214"  [label="DDG: 0"];
"1000216" -> "1000214"  [label="DDG: size"];
"1000101" -> "1000216"  [label="DDG: inode"];
"1000151" -> "1000216"  [label="DDG: xattr_name"];
"1000126" -> "1000216"  [label="DDG: xattr_name"];
"1000112" -> "1000216"  [label="DDG: value"];
"1000108" -> "1000216"  [label="DDG: size"];
"1000216" -> "1000224"  [label="DDG: value"];
"1000216" -> "1000230"  [label="DDG: inode"];
"1000214" -> "1000104"  [label="AST: "];
"1000215" -> "1000214"  [label="AST: "];
"1000222" -> "1000214"  [label="CFG: "];
"1000214" -> "1000236"  [label="DDG: __hfsplus_setxattr(inode, xattr_name, value, size, 0)"];
"1000224" -> "1000223"  [label="AST: "];
"1000224" -> "1000226"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000223" -> "1000224"  [label="CFG: "];
"1000224" -> "1000236"  [label="DDG: value"];
"1000224" -> "1000223"  [label="DDG: value"];
"1000223" -> "1000104"  [label="AST: "];
"1000229" -> "1000223"  [label="CFG: "];
"1000223" -> "1000236"  [label="DDG: hfsplus_destroy_attr_entry((hfsplus_attr_entry *)value)"];
"1000223" -> "1000236"  [label="DDG: (hfsplus_attr_entry *)value"];
"1000230" -> "1000227"  [label="AST: "];
"1000230" -> "1000233"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000232" -> "1000230"  [label="AST: "];
"1000233" -> "1000230"  [label="AST: "];
"1000235" -> "1000230"  [label="CFG: "];
"1000230" -> "1000236"  [label="DDG: acl"];
"1000230" -> "1000236"  [label="DDG: inode"];
"1000230" -> "1000236"  [label="DDG: type"];
"1000230" -> "1000236"  [label="DDG: set_cached_acl(inode, type, acl)"];
"1000101" -> "1000230"  [label="DDG: inode"];
"1000103" -> "1000230"  [label="DDG: type"];
}
