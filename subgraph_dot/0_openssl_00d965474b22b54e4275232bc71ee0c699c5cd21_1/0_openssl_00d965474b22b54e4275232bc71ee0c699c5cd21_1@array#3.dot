digraph "0_openssl_00d965474b22b54e4275232bc71ee0c699c5cd21_1@array" {
"1000450" [label="(Call,actx->key.counter[2] = actx->nonce[1] ^ CHACHA_U8TOU32(aad))"];
"1000458" [label="(Call,actx->nonce[1] ^ CHACHA_U8TOU32(aad))"];
"1000464" [label="(Call,CHACHA_U8TOU32(aad))"];
"1000376" [label="(Call,aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8)"];
"1000369" [label="(Call,*aad = ptr)"];
"1000108" [label="(MethodParameterIn,void *ptr)"];
"1000375" [label="(Call,aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |\n                   aad[EVP_AEAD_TLS1_AAD_LEN - 1])"];
"1000409" [label="(Call,aad = temp)"];
"1000403" [label="(Call,memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2))"];
"1000406" [label="(Call,EVP_AEAD_TLS1_AAD_LEN - 2)"];
"1000385" [label="(Call,EVP_AEAD_TLS1_AAD_LEN - 1)"];
"1000379" [label="(Call,EVP_AEAD_TLS1_AAD_LEN - 2)"];
"1000361" [label="(Call,arg != EVP_AEAD_TLS1_AAD_LEN)"];
"1000107" [label="(MethodParameterIn,int arg)"];
"1000365" [label="(Literal,0)"];
"1000465" [label="(Identifier,aad)"];
"1000369" [label="(Call,*aad = ptr)"];
"1000384" [label="(Identifier,aad)"];
"1000404" [label="(Identifier,temp)"];
"1000381" [label="(Literal,2)"];
"1000373" [label="(Call,len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |\n                   aad[EVP_AEAD_TLS1_AAD_LEN - 1])"];
"1000409" [label="(Call,aad = temp)"];
"1000363" [label="(Identifier,EVP_AEAD_TLS1_AAD_LEN)"];
"1000108" [label="(MethodParameterIn,void *ptr)"];
"1000408" [label="(Literal,2)"];
"1000387" [label="(Literal,1)"];
"1000227" [label="(Call,arg > CHACHA_CTR_SIZE)"];
"1000405" [label="(Identifier,aad)"];
"1000375" [label="(Call,aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |\n                   aad[EVP_AEAD_TLS1_AAD_LEN - 1])"];
"1000261" [label="(Call,(unsigned char *)ptr)"];
"1000386" [label="(Identifier,EVP_AEAD_TLS1_AAD_LEN)"];
"1000312" [label="(Call,arg > POLY1305_BLOCK_SIZE)"];
"1000300" [label="(Call,(unsigned char *)ptr)"];
"1000374" [label="(Identifier,len)"];
"1000464" [label="(Call,CHACHA_U8TOU32(aad))"];
"1000411" [label="(Identifier,temp)"];
"1000351" [label="(Call,memcpy(ptr, actx->tag, arg))"];
"1000370" [label="(Identifier,aad)"];
"1000232" [label="(Call,actx->nonce_len = arg)"];
"1000383" [label="(Call,aad[EVP_AEAD_TLS1_AAD_LEN - 1])"];
"1000385" [label="(Call,EVP_AEAD_TLS1_AAD_LEN - 1)"];
"1000377" [label="(Call,aad[EVP_AEAD_TLS1_AAD_LEN - 2])"];
"1000458" [label="(Call,actx->nonce[1] ^ CHACHA_U8TOU32(aad))"];
"1000280" [label="(Call,(unsigned char *)ptr)"];
"1000382" [label="(Literal,8)"];
"1000406" [label="(Call,EVP_AEAD_TLS1_AAD_LEN - 2)"];
"1000415" [label="(Call,EVP_AEAD_TLS1_AAD_LEN - 2)"];
"1000107" [label="(MethodParameterIn,int arg)"];
"1000309" [label="(Call,arg <= 0)"];
"1000366" [label="(Block,)"];
"1000407" [label="(Identifier,EVP_AEAD_TLS1_AAD_LEN)"];
"1000376" [label="(Call,aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8)"];
"1000371" [label="(Identifier,ptr)"];
"1000470" [label="(Identifier,actx)"];
"1000450" [label="(Call,actx->key.counter[2] = actx->nonce[1] ^ CHACHA_U8TOU32(aad))"];
"1000193" [label="(Call,(EVP_CIPHER_CTX *)ptr)"];
"1000379" [label="(Call,EVP_AEAD_TLS1_AAD_LEN - 2)"];
"1000414" [label="(Identifier,temp)"];
"1000489" [label="(Call,chacha20_poly1305_cipher(ctx, NULL, aad, EVP_AEAD_TLS1_AAD_LEN))"];
"1000342" [label="(Call,arg > POLY1305_BLOCK_SIZE)"];
"1000241" [label="(Call,arg != 12)"];
"1000318" [label="(Call,ptr != NULL)"];
"1000360" [label="(ControlStructure,if (arg != EVP_AEAD_TLS1_AAD_LEN))"];
"1000328" [label="(Call,actx->tag_len = arg)"];
"1000393" [label="(Block,)"];
"1000224" [label="(Call,arg <= 0)"];
"1000403" [label="(Call,memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2))"];
"1000322" [label="(Call,memcpy(actx->tag, ptr, arg))"];
"1000410" [label="(Identifier,aad)"];
"1000380" [label="(Identifier,EVP_AEAD_TLS1_AAD_LEN)"];
"1000451" [label="(Call,actx->key.counter[2])"];
"1000459" [label="(Call,actx->nonce[1])"];
"1000338" [label="(Call,arg <= 0)"];
"1000361" [label="(Call,arg != EVP_AEAD_TLS1_AAD_LEN)"];
"1000503" [label="(MethodReturn,static int)"];
"1000481" [label="(Call,aad+4)"];
"1000362" [label="(Identifier,arg)"];
"1000480" [label="(Call,CHACHA_U8TOU32(aad+4))"];
"1000450" -> "1000366"  [label="AST: "];
"1000450" -> "1000458"  [label="CFG: "];
"1000451" -> "1000450"  [label="AST: "];
"1000458" -> "1000450"  [label="AST: "];
"1000470" -> "1000450"  [label="CFG: "];
"1000450" -> "1000503"  [label="DDG: actx->nonce[1] ^ CHACHA_U8TOU32(aad)"];
"1000450" -> "1000503"  [label="DDG: actx->key.counter[2]"];
"1000458" -> "1000450"  [label="DDG: actx->nonce[1]"];
"1000458" -> "1000450"  [label="DDG: CHACHA_U8TOU32(aad)"];
"1000458" -> "1000464"  [label="CFG: "];
"1000459" -> "1000458"  [label="AST: "];
"1000464" -> "1000458"  [label="AST: "];
"1000458" -> "1000503"  [label="DDG: actx->nonce[1]"];
"1000458" -> "1000503"  [label="DDG: CHACHA_U8TOU32(aad)"];
"1000464" -> "1000458"  [label="DDG: aad"];
"1000464" -> "1000465"  [label="CFG: "];
"1000465" -> "1000464"  [label="AST: "];
"1000376" -> "1000464"  [label="DDG: aad[EVP_AEAD_TLS1_AAD_LEN - 2]"];
"1000375" -> "1000464"  [label="DDG: aad[EVP_AEAD_TLS1_AAD_LEN - 1]"];
"1000369" -> "1000464"  [label="DDG: aad"];
"1000409" -> "1000464"  [label="DDG: aad"];
"1000464" -> "1000480"  [label="DDG: aad"];
"1000464" -> "1000481"  [label="DDG: aad"];
"1000464" -> "1000489"  [label="DDG: aad"];
"1000376" -> "1000375"  [label="AST: "];
"1000376" -> "1000382"  [label="CFG: "];
"1000377" -> "1000376"  [label="AST: "];
"1000382" -> "1000376"  [label="AST: "];
"1000384" -> "1000376"  [label="CFG: "];
"1000376" -> "1000503"  [label="DDG: aad[EVP_AEAD_TLS1_AAD_LEN - 2]"];
"1000376" -> "1000375"  [label="DDG: aad[EVP_AEAD_TLS1_AAD_LEN - 2]"];
"1000376" -> "1000375"  [label="DDG: 8"];
"1000369" -> "1000376"  [label="DDG: aad"];
"1000376" -> "1000403"  [label="DDG: aad[EVP_AEAD_TLS1_AAD_LEN - 2]"];
"1000376" -> "1000480"  [label="DDG: aad[EVP_AEAD_TLS1_AAD_LEN - 2]"];
"1000376" -> "1000481"  [label="DDG: aad[EVP_AEAD_TLS1_AAD_LEN - 2]"];
"1000376" -> "1000489"  [label="DDG: aad[EVP_AEAD_TLS1_AAD_LEN - 2]"];
"1000369" -> "1000366"  [label="AST: "];
"1000369" -> "1000371"  [label="CFG: "];
"1000370" -> "1000369"  [label="AST: "];
"1000371" -> "1000369"  [label="AST: "];
"1000374" -> "1000369"  [label="CFG: "];
"1000369" -> "1000503"  [label="DDG: aad"];
"1000369" -> "1000503"  [label="DDG: ptr"];
"1000108" -> "1000369"  [label="DDG: ptr"];
"1000369" -> "1000375"  [label="DDG: aad"];
"1000369" -> "1000403"  [label="DDG: aad"];
"1000108" -> "1000104"  [label="AST: "];
"1000108" -> "1000503"  [label="DDG: ptr"];
"1000108" -> "1000193"  [label="DDG: ptr"];
"1000108" -> "1000261"  [label="DDG: ptr"];
"1000108" -> "1000280"  [label="DDG: ptr"];
"1000108" -> "1000300"  [label="DDG: ptr"];
"1000108" -> "1000318"  [label="DDG: ptr"];
"1000108" -> "1000322"  [label="DDG: ptr"];
"1000108" -> "1000351"  [label="DDG: ptr"];
"1000375" -> "1000373"  [label="AST: "];
"1000375" -> "1000383"  [label="CFG: "];
"1000383" -> "1000375"  [label="AST: "];
"1000373" -> "1000375"  [label="CFG: "];
"1000375" -> "1000503"  [label="DDG: aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8"];
"1000375" -> "1000503"  [label="DDG: aad[EVP_AEAD_TLS1_AAD_LEN - 1]"];
"1000375" -> "1000373"  [label="DDG: aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8"];
"1000375" -> "1000373"  [label="DDG: aad[EVP_AEAD_TLS1_AAD_LEN - 1]"];
"1000375" -> "1000403"  [label="DDG: aad[EVP_AEAD_TLS1_AAD_LEN - 1]"];
"1000375" -> "1000480"  [label="DDG: aad[EVP_AEAD_TLS1_AAD_LEN - 1]"];
"1000375" -> "1000481"  [label="DDG: aad[EVP_AEAD_TLS1_AAD_LEN - 1]"];
"1000375" -> "1000489"  [label="DDG: aad[EVP_AEAD_TLS1_AAD_LEN - 1]"];
"1000409" -> "1000393"  [label="AST: "];
"1000409" -> "1000411"  [label="CFG: "];
"1000410" -> "1000409"  [label="AST: "];
"1000411" -> "1000409"  [label="AST: "];
"1000414" -> "1000409"  [label="CFG: "];
"1000409" -> "1000503"  [label="DDG: temp"];
"1000403" -> "1000409"  [label="DDG: temp"];
"1000403" -> "1000393"  [label="AST: "];
"1000403" -> "1000406"  [label="CFG: "];
"1000404" -> "1000403"  [label="AST: "];
"1000405" -> "1000403"  [label="AST: "];
"1000406" -> "1000403"  [label="AST: "];
"1000410" -> "1000403"  [label="CFG: "];
"1000403" -> "1000503"  [label="DDG: memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2)"];
"1000406" -> "1000403"  [label="DDG: EVP_AEAD_TLS1_AAD_LEN"];
"1000406" -> "1000403"  [label="DDG: 2"];
"1000406" -> "1000408"  [label="CFG: "];
"1000407" -> "1000406"  [label="AST: "];
"1000408" -> "1000406"  [label="AST: "];
"1000385" -> "1000406"  [label="DDG: EVP_AEAD_TLS1_AAD_LEN"];
"1000406" -> "1000415"  [label="DDG: EVP_AEAD_TLS1_AAD_LEN"];
"1000385" -> "1000383"  [label="AST: "];
"1000385" -> "1000387"  [label="CFG: "];
"1000386" -> "1000385"  [label="AST: "];
"1000387" -> "1000385"  [label="AST: "];
"1000383" -> "1000385"  [label="CFG: "];
"1000385" -> "1000503"  [label="DDG: EVP_AEAD_TLS1_AAD_LEN"];
"1000379" -> "1000385"  [label="DDG: EVP_AEAD_TLS1_AAD_LEN"];
"1000385" -> "1000489"  [label="DDG: EVP_AEAD_TLS1_AAD_LEN"];
"1000379" -> "1000377"  [label="AST: "];
"1000379" -> "1000381"  [label="CFG: "];
"1000380" -> "1000379"  [label="AST: "];
"1000381" -> "1000379"  [label="AST: "];
"1000377" -> "1000379"  [label="CFG: "];
"1000361" -> "1000379"  [label="DDG: EVP_AEAD_TLS1_AAD_LEN"];
"1000361" -> "1000360"  [label="AST: "];
"1000361" -> "1000363"  [label="CFG: "];
"1000362" -> "1000361"  [label="AST: "];
"1000363" -> "1000361"  [label="AST: "];
"1000365" -> "1000361"  [label="CFG: "];
"1000370" -> "1000361"  [label="CFG: "];
"1000361" -> "1000503"  [label="DDG: arg != EVP_AEAD_TLS1_AAD_LEN"];
"1000361" -> "1000503"  [label="DDG: arg"];
"1000361" -> "1000503"  [label="DDG: EVP_AEAD_TLS1_AAD_LEN"];
"1000107" -> "1000361"  [label="DDG: arg"];
"1000107" -> "1000104"  [label="AST: "];
"1000107" -> "1000503"  [label="DDG: arg"];
"1000107" -> "1000224"  [label="DDG: arg"];
"1000107" -> "1000227"  [label="DDG: arg"];
"1000107" -> "1000232"  [label="DDG: arg"];
"1000107" -> "1000241"  [label="DDG: arg"];
"1000107" -> "1000309"  [label="DDG: arg"];
"1000107" -> "1000312"  [label="DDG: arg"];
"1000107" -> "1000322"  [label="DDG: arg"];
"1000107" -> "1000328"  [label="DDG: arg"];
"1000107" -> "1000338"  [label="DDG: arg"];
"1000107" -> "1000342"  [label="DDG: arg"];
"1000107" -> "1000351"  [label="DDG: arg"];
}
