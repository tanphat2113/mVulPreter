digraph "0_VeraCrypt_f30f9339c9a0b9bbcc6f5ad38804af39db1f479e@pointer" {
"1002261" [label="(Call,TCDeviceIoControl (g->deviceName,\n\t\t\t\t\t\t\t\t\tIOCTL_STORAGE_READ_CAPACITY,\n\t\t\t\t\t\t\t\t\tNULL, 0, &storage, sizeof (STORAGE_READ_CAPACITY)))"];
"1002254" [label="(Call,Dump (\"Calling IOCTL_STORAGE_READ_CAPACITY on %ls\n\", g->deviceName))"];
"1002192" [label="(Call,TCDeviceIoControl (g->deviceName,\n\t\t\t\t\t\t\tIOCTL_DISK_GET_DRIVE_GEOMETRY,\n\t\t\t\t\t\t\tNULL, 0, &dg, sizeof (dg)))"];
"1002185" [label="(Call,Dump (\"Failed. Calling IOCTL_DISK_GET_DRIVE_GEOMETRY on %ls\n\", g->deviceName))"];
"1002139" [label="(Call,TCDeviceIoControl (g->deviceName,\n\t\t\t\t\t\tIOCTL_DISK_GET_DRIVE_GEOMETRY_EX,\n\t\t\t\t\t\tNULL, 0, buffer, 256))"];
"1002132" [label="(Call,Dump (\"Calling IOCTL_DISK_GET_DRIVE_GEOMETRY_EX on %ls\n\", g->deviceName))"];
"1002124" [label="(Call,EnsureNullTerminatedString (g->deviceName, sizeof (g->deviceName)))"];
"1002117" [label="(Call,buffer = TCalloc (256))"];
"1002119" [label="(Call,TCalloc (256))"];
"1002259" [label="(Call,lStatus = TCDeviceIoControl (g->deviceName,\n\t\t\t\t\t\t\t\t\tIOCTL_STORAGE_READ_CAPACITY,\n\t\t\t\t\t\t\t\t\tNULL, 0, &storage, sizeof (STORAGE_READ_CAPACITY)))"];
"1002274" [label="(Call,NT_SUCCESS(lStatus))"];
"1002273" [label="(Call,NT_SUCCESS(lStatus)\n\t\t\t\t\t\t\t\t\t&& (storage.Size == sizeof (STORAGE_READ_CAPACITY)))"];
"1002147" [label="(Literal,256)"];
"1002123" [label="(Block,)"];
"1002243" [label="(Block,)"];
"1002256" [label="(Call,g->deviceName)"];
"1002132" [label="(Call,Dump (\"Calling IOCTL_DISK_GET_DRIVE_GEOMETRY_EX on %ls\n\", g->deviceName))"];
"1002265" [label="(Identifier,IOCTL_STORAGE_READ_CAPACITY)"];
"1002143" [label="(Identifier,IOCTL_DISK_GET_DRIVE_GEOMETRY_EX)"];
"1002266" [label="(Identifier,NULL)"];
"1002198" [label="(Literal,0)"];
"1002262" [label="(Call,g->deviceName)"];
"1002267" [label="(Literal,0)"];
"1002138" [label="(Identifier,ntStatus)"];
"1002278" [label="(Identifier,storage)"];
"1002190" [label="(Call,ntStatus = TCDeviceIoControl (g->deviceName,\n\t\t\t\t\t\t\tIOCTL_DISK_GET_DRIVE_GEOMETRY,\n\t\t\t\t\t\t\tNULL, 0, &dg, sizeof (dg)))"];
"1002145" [label="(Literal,0)"];
"1002270" [label="(Call,sizeof (STORAGE_READ_CAPACITY))"];
"1002139" [label="(Call,TCDeviceIoControl (g->deviceName,\n\t\t\t\t\t\tIOCTL_DISK_GET_DRIVE_GEOMETRY_EX,\n\t\t\t\t\t\tNULL, 0, buffer, 256))"];
"1002140" [label="(Call,g->deviceName)"];
"1002117" [label="(Call,buffer = TCalloc (256))"];
"1002294" [label="(Call,TCfree (buffer))"];
"1002128" [label="(Call,sizeof (g->deviceName))"];
"1002274" [label="(Call,NT_SUCCESS(lStatus))"];
"1002275" [label="(Identifier,lStatus)"];
"1002286" [label="(Identifier,g)"];
"1002185" [label="(Call,Dump (\"Failed. Calling IOCTL_DISK_GET_DRIVE_GEOMETRY on %ls\n\", g->deviceName))"];
"1002276" [label="(Call,storage.Size == sizeof (STORAGE_READ_CAPACITY))"];
"1002196" [label="(Identifier,IOCTL_DISK_GET_DRIVE_GEOMETRY)"];
"1002114" [label="(Block,)"];
"1002273" [label="(Call,NT_SUCCESS(lStatus)\n\t\t\t\t\t\t\t\t\t&& (storage.Size == sizeof (STORAGE_READ_CAPACITY)))"];
"1002120" [label="(Literal,256)"];
"1002155" [label="(Call,(PDISK_GEOMETRY_EX) buffer)"];
"1002259" [label="(Call,lStatus = TCDeviceIoControl (g->deviceName,\n\t\t\t\t\t\t\t\t\tIOCTL_STORAGE_READ_CAPACITY,\n\t\t\t\t\t\t\t\t\tNULL, 0, &storage, sizeof (STORAGE_READ_CAPACITY)))"];
"1002122" [label="(Identifier,buffer)"];
"1002146" [label="(Identifier,buffer)"];
"1002199" [label="(Call,&dg)"];
"1002186" [label="(Literal,\"Failed. Calling IOCTL_DISK_GET_DRIVE_GEOMETRY on %ls\n\")"];
"1002133" [label="(Literal,\"Calling IOCTL_DISK_GET_DRIVE_GEOMETRY_EX on %ls\n\")"];
"1002124" [label="(Call,EnsureNullTerminatedString (g->deviceName, sizeof (g->deviceName)))"];
"1002255" [label="(Literal,\"Calling IOCTL_STORAGE_READ_CAPACITY on %ls\n\")"];
"1002119" [label="(Call,TCalloc (256))"];
"1002125" [label="(Call,g->deviceName)"];
"1002118" [label="(Identifier,buffer)"];
"1002197" [label="(Identifier,NULL)"];
"1002181" [label="(Block,)"];
"1002193" [label="(Call,g->deviceName)"];
"1002268" [label="(Call,&storage)"];
"1002187" [label="(Call,g->deviceName)"];
"1002261" [label="(Call,TCDeviceIoControl (g->deviceName,\n\t\t\t\t\t\t\t\t\tIOCTL_STORAGE_READ_CAPACITY,\n\t\t\t\t\t\t\t\t\tNULL, 0, &storage, sizeof (STORAGE_READ_CAPACITY)))"];
"1002207" [label="(Call,memcpy (&g->diskGeometry, &dg, sizeof (DISK_GEOMETRY)))"];
"1002144" [label="(Identifier,NULL)"];
"1002134" [label="(Call,g->deviceName)"];
"1003200" [label="(MethodReturn,NTSTATUS)"];
"1002201" [label="(Call,sizeof (dg))"];
"1002254" [label="(Call,Dump (\"Calling IOCTL_STORAGE_READ_CAPACITY on %ls\n\", g->deviceName))"];
"1002260" [label="(Identifier,lStatus)"];
"1002295" [label="(Identifier,buffer)"];
"1002191" [label="(Identifier,ntStatus)"];
"1002272" [label="(ControlStructure,if (\tNT_SUCCESS(lStatus)\n\t\t\t\t\t\t\t\t\t&& (storage.Size == sizeof (STORAGE_READ_CAPACITY))\n\t\t\t\t\t\t\t\t\t))"];
"1002137" [label="(Call,ntStatus = TCDeviceIoControl (g->deviceName,\n\t\t\t\t\t\tIOCTL_DISK_GET_DRIVE_GEOMETRY_EX,\n\t\t\t\t\t\tNULL, 0, buffer, 256))"];
"1002192" [label="(Call,TCDeviceIoControl (g->deviceName,\n\t\t\t\t\t\t\tIOCTL_DISK_GET_DRIVE_GEOMETRY,\n\t\t\t\t\t\t\tNULL, 0, &dg, sizeof (dg)))"];
"1002261" -> "1002259"  [label="AST: "];
"1002261" -> "1002270"  [label="CFG: "];
"1002262" -> "1002261"  [label="AST: "];
"1002265" -> "1002261"  [label="AST: "];
"1002266" -> "1002261"  [label="AST: "];
"1002267" -> "1002261"  [label="AST: "];
"1002268" -> "1002261"  [label="AST: "];
"1002270" -> "1002261"  [label="AST: "];
"1002259" -> "1002261"  [label="CFG: "];
"1002261" -> "1003200"  [label="DDG: "];
"1002261" -> "1003200"  [label="DDG: "];
"1002261" -> "1003200"  [label="DDG: "];
"1002261" -> "1003200"  [label="DDG: "];
"1002261" -> "1002259"  [label="DDG: "];
"1002261" -> "1002259"  [label="DDG: "];
"1002261" -> "1002259"  [label="DDG: "];
"1002261" -> "1002259"  [label="DDG: "];
"1002261" -> "1002259"  [label="DDG: "];
"1002254" -> "1002261"  [label="DDG: "];
"1002192" -> "1002261"  [label="DDG: "];
"1002254" -> "1002243"  [label="AST: "];
"1002254" -> "1002256"  [label="CFG: "];
"1002255" -> "1002254"  [label="AST: "];
"1002256" -> "1002254"  [label="AST: "];
"1002260" -> "1002254"  [label="CFG: "];
"1002254" -> "1003200"  [label="DDG: "];
"1002192" -> "1002254"  [label="DDG: "];
"1002192" -> "1002190"  [label="AST: "];
"1002192" -> "1002201"  [label="CFG: "];
"1002193" -> "1002192"  [label="AST: "];
"1002196" -> "1002192"  [label="AST: "];
"1002197" -> "1002192"  [label="AST: "];
"1002198" -> "1002192"  [label="AST: "];
"1002199" -> "1002192"  [label="AST: "];
"1002201" -> "1002192"  [label="AST: "];
"1002190" -> "1002192"  [label="CFG: "];
"1002192" -> "1003200"  [label="DDG: "];
"1002192" -> "1003200"  [label="DDG: "];
"1002192" -> "1003200"  [label="DDG: "];
"1002192" -> "1003200"  [label="DDG: "];
"1002192" -> "1002190"  [label="DDG: "];
"1002192" -> "1002190"  [label="DDG: "];
"1002192" -> "1002190"  [label="DDG: "];
"1002192" -> "1002190"  [label="DDG: "];
"1002192" -> "1002190"  [label="DDG: "];
"1002185" -> "1002192"  [label="DDG: "];
"1002139" -> "1002192"  [label="DDG: "];
"1002192" -> "1002207"  [label="DDG: "];
"1002185" -> "1002181"  [label="AST: "];
"1002185" -> "1002187"  [label="CFG: "];
"1002186" -> "1002185"  [label="AST: "];
"1002187" -> "1002185"  [label="AST: "];
"1002191" -> "1002185"  [label="CFG: "];
"1002185" -> "1003200"  [label="DDG: "];
"1002139" -> "1002185"  [label="DDG: "];
"1002139" -> "1002137"  [label="AST: "];
"1002139" -> "1002147"  [label="CFG: "];
"1002140" -> "1002139"  [label="AST: "];
"1002143" -> "1002139"  [label="AST: "];
"1002144" -> "1002139"  [label="AST: "];
"1002145" -> "1002139"  [label="AST: "];
"1002146" -> "1002139"  [label="AST: "];
"1002147" -> "1002139"  [label="AST: "];
"1002137" -> "1002139"  [label="CFG: "];
"1002139" -> "1003200"  [label="DDG: "];
"1002139" -> "1003200"  [label="DDG: "];
"1002139" -> "1003200"  [label="DDG: "];
"1002139" -> "1002137"  [label="DDG: "];
"1002139" -> "1002137"  [label="DDG: "];
"1002139" -> "1002137"  [label="DDG: "];
"1002139" -> "1002137"  [label="DDG: "];
"1002139" -> "1002137"  [label="DDG: "];
"1002139" -> "1002137"  [label="DDG: "];
"1002132" -> "1002139"  [label="DDG: "];
"1002117" -> "1002139"  [label="DDG: "];
"1002139" -> "1002155"  [label="DDG: "];
"1002139" -> "1002294"  [label="DDG: "];
"1002132" -> "1002123"  [label="AST: "];
"1002132" -> "1002134"  [label="CFG: "];
"1002133" -> "1002132"  [label="AST: "];
"1002134" -> "1002132"  [label="AST: "];
"1002138" -> "1002132"  [label="CFG: "];
"1002132" -> "1003200"  [label="DDG: "];
"1002124" -> "1002132"  [label="DDG: "];
"1002124" -> "1002123"  [label="AST: "];
"1002124" -> "1002128"  [label="CFG: "];
"1002125" -> "1002124"  [label="AST: "];
"1002128" -> "1002124"  [label="AST: "];
"1002133" -> "1002124"  [label="CFG: "];
"1002124" -> "1003200"  [label="DDG: "];
"1002117" -> "1002114"  [label="AST: "];
"1002117" -> "1002119"  [label="CFG: "];
"1002118" -> "1002117"  [label="AST: "];
"1002119" -> "1002117"  [label="AST: "];
"1002122" -> "1002117"  [label="CFG: "];
"1002117" -> "1003200"  [label="DDG: "];
"1002117" -> "1003200"  [label="DDG: "];
"1002119" -> "1002117"  [label="DDG: "];
"1002119" -> "1002120"  [label="CFG: "];
"1002120" -> "1002119"  [label="AST: "];
"1002259" -> "1002243"  [label="AST: "];
"1002260" -> "1002259"  [label="AST: "];
"1002275" -> "1002259"  [label="CFG: "];
"1002259" -> "1003200"  [label="DDG: "];
"1002259" -> "1002274"  [label="DDG: "];
"1002274" -> "1002273"  [label="AST: "];
"1002274" -> "1002275"  [label="CFG: "];
"1002275" -> "1002274"  [label="AST: "];
"1002278" -> "1002274"  [label="CFG: "];
"1002273" -> "1002274"  [label="CFG: "];
"1002274" -> "1003200"  [label="DDG: "];
"1002274" -> "1002273"  [label="DDG: "];
"1002273" -> "1002272"  [label="AST: "];
"1002273" -> "1002276"  [label="CFG: "];
"1002276" -> "1002273"  [label="AST: "];
"1002286" -> "1002273"  [label="CFG: "];
"1002295" -> "1002273"  [label="CFG: "];
"1002273" -> "1003200"  [label="DDG: "];
"1002273" -> "1003200"  [label="DDG: "];
"1002273" -> "1003200"  [label="DDG: "];
"1002276" -> "1002273"  [label="DDG: "];
}
