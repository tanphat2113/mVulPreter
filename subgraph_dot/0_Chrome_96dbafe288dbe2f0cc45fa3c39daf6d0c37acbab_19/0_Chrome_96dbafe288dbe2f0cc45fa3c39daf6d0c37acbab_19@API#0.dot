digraph "0_Chrome_96dbafe288dbe2f0cc45fa3c39daf6d0c37acbab_19@API" {
"1000253" [label="(Call,max = sizeof(numarray)/sizeof(numarray[0]))"];
"1000264" [label="(Call,xsltNumberFormatGetMultipleLevel(ctxt,\n\t\t\t\t\t\t      node,\n \t\t\t\t\t\t      data->countPat,\n \t\t\t\t\t\t      data->fromPat,\n \t\t\t\t\t\t      numarray,\n\t\t\t\t\t\t      max))"];
"1000262" [label="(Call,amount = xsltNumberFormatGetMultipleLevel(ctxt,\n\t\t\t\t\t\t      node,\n \t\t\t\t\t\t      data->countPat,\n \t\t\t\t\t\t      data->fromPat,\n \t\t\t\t\t\t      numarray,\n\t\t\t\t\t\t      max))"];
"1000276" [label="(Call,amount > 0)"];
"1000280" [label="(Call,xsltNumberFormatInsertNumbers(data,\n \t\t\t\t\t      numarray,\n\t\t\t\t\t      amount,\n\t\t\t\t\t      &tokens,\n\t\t\t\t\t      output))"];
"1000328" [label="(Call,xmlBufferContent(output))"];
"1000323" [label="(Call,xsltCopyTextString(ctxt, ctxt->insert, xmlBufferContent(output), 0))"];
"1000331" [label="(Call,xmlBufferFree(output))"];
"1000263" [label="(Identifier,amount)"];
"1000264" [label="(Call,xsltNumberFormatGetMultipleLevel(ctxt,\n\t\t\t\t\t\t      node,\n \t\t\t\t\t\t      data->countPat,\n \t\t\t\t\t\t      data->fromPat,\n \t\t\t\t\t\t      numarray,\n\t\t\t\t\t\t      max))"];
"1000165" [label="(Call,output == NULL)"];
"1000281" [label="(Identifier,data)"];
"1000104" [label="(MethodParameterIn,xsltTransformContextPtr ctxt)"];
"1000283" [label="(Identifier,amount)"];
"1000278" [label="(Literal,0)"];
"1000105" [label="(MethodParameterIn,xsltNumberDataPtr data)"];
"1000329" [label="(Identifier,output)"];
"1000332" [label="(Identifier,output)"];
"1000286" [label="(Identifier,output)"];
"1000191" [label="(Call,xsltNumberFormatInsertNumbers(data,\n\t\t\t\t\t  &number,\n\t\t\t\t\t  1,\n\t\t\t\t\t  &tokens,\n\t\t\t\t\t  output))"];
"1000262" [label="(Call,amount = xsltNumberFormatGetMultipleLevel(ctxt,\n\t\t\t\t\t\t      node,\n \t\t\t\t\t\t      data->countPat,\n \t\t\t\t\t\t      data->fromPat,\n \t\t\t\t\t\t      numarray,\n\t\t\t\t\t\t      max))"];
"1000280" [label="(Call,xsltNumberFormatInsertNumbers(data,\n \t\t\t\t\t      numarray,\n\t\t\t\t\t      amount,\n\t\t\t\t\t      &tokens,\n\t\t\t\t\t      output))"];
"1000255" [label="(Call,sizeof(numarray)/sizeof(numarray[0]))"];
"1000331" [label="(Call,xmlBufferFree(output))"];
"1000330" [label="(Literal,0)"];
"1000254" [label="(Identifier,max)"];
"1000265" [label="(Identifier,ctxt)"];
"1000155" [label="(Call,xsltNumberFormatTokenize(format, &tokens))"];
"1000270" [label="(Call,data->fromPat)"];
"1000253" [label="(Call,max = sizeof(numarray)/sizeof(numarray[0]))"];
"1000123" [label="(Call,xsltNumberFormatTokenize(data->format, &tokens))"];
"1000233" [label="(Call,xsltNumberFormatInsertNumbers(data,\n \t\t\t\t\t      &number,\n\t\t\t\t\t      1,\n\t\t\t\t\t      &tokens,\n\t\t\t\t\t      output))"];
"1000106" [label="(MethodParameterIn,xmlNodePtr node)"];
"1000282" [label="(Identifier,numarray)"];
"1000276" [label="(Call,amount > 0)"];
"1000325" [label="(Call,ctxt->insert)"];
"1000315" [label="(Call,xsltNumberFormatInsertNumbers(data,\n \t\t\t\t\t      &number,\n\t\t\t\t\t      1,\n\t\t\t\t\t      &tokens,\n\t\t\t\t\t      output))"];
"1000324" [label="(Identifier,ctxt)"];
"1000333" [label="(JumpTarget,XSLT_NUMBER_FORMAT_END:)"];
"1000250" [label="(Block,)"];
"1000273" [label="(Identifier,numarray)"];
"1000284" [label="(Call,&tokens)"];
"1000384" [label="(MethodReturn,RET)"];
"1000267" [label="(Call,data->countPat)"];
"1000275" [label="(ControlStructure,if (amount > 0))"];
"1000274" [label="(Identifier,max)"];
"1000277" [label="(Identifier,amount)"];
"1000216" [label="(Call,xsltNumberFormatGetMultipleLevel(ctxt,\n\t\t\t\t\t\t      node,\n \t\t\t\t\t\t      data->countPat,\n \t\t\t\t\t\t      data->fromPat,\n \t\t\t\t\t\t      &number,\n\t\t\t\t\t\t      1))"];
"1000323" [label="(Call,xsltCopyTextString(ctxt, ctxt->insert, xmlBufferContent(output), 0))"];
"1000328" [label="(Call,xmlBufferContent(output))"];
"1000299" [label="(Call,xsltNumberFormatGetAnyLevel(ctxt,\n \t\t\t\t\t\t node,\n \t\t\t\t\t\t data->countPat,\n \t\t\t\t\t\t data->fromPat,\n\t\t\t\t\t\t &number))"];
"1000141" [label="(Call,xsltEvalAttrValueTemplate(ctxt, data->node,\n \t\t\t\t\t     (const xmlChar *) \"format\",\n \t\t\t\t\t     XSLT_NAMESPACE))"];
"1000107" [label="(Block,)"];
"1000279" [label="(Block,)"];
"1000266" [label="(Identifier,node)"];
"1000253" -> "1000250"  [label="AST: "];
"1000253" -> "1000255"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000255" -> "1000253"  [label="AST: "];
"1000263" -> "1000253"  [label="CFG: "];
"1000253" -> "1000384"  [label="DDG: sizeof(numarray)/sizeof(numarray[0])"];
"1000253" -> "1000264"  [label="DDG: max"];
"1000264" -> "1000262"  [label="AST: "];
"1000264" -> "1000274"  [label="CFG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000266" -> "1000264"  [label="AST: "];
"1000267" -> "1000264"  [label="AST: "];
"1000270" -> "1000264"  [label="AST: "];
"1000273" -> "1000264"  [label="AST: "];
"1000274" -> "1000264"  [label="AST: "];
"1000262" -> "1000264"  [label="CFG: "];
"1000264" -> "1000384"  [label="DDG: data->countPat"];
"1000264" -> "1000384"  [label="DDG: max"];
"1000264" -> "1000384"  [label="DDG: node"];
"1000264" -> "1000384"  [label="DDG: numarray"];
"1000264" -> "1000384"  [label="DDG: data->fromPat"];
"1000264" -> "1000262"  [label="DDG: numarray"];
"1000264" -> "1000262"  [label="DDG: data->countPat"];
"1000264" -> "1000262"  [label="DDG: node"];
"1000264" -> "1000262"  [label="DDG: ctxt"];
"1000264" -> "1000262"  [label="DDG: data->fromPat"];
"1000264" -> "1000262"  [label="DDG: max"];
"1000141" -> "1000264"  [label="DDG: ctxt"];
"1000104" -> "1000264"  [label="DDG: ctxt"];
"1000106" -> "1000264"  [label="DDG: node"];
"1000264" -> "1000280"  [label="DDG: numarray"];
"1000264" -> "1000323"  [label="DDG: ctxt"];
"1000262" -> "1000250"  [label="AST: "];
"1000263" -> "1000262"  [label="AST: "];
"1000277" -> "1000262"  [label="CFG: "];
"1000262" -> "1000384"  [label="DDG: xsltNumberFormatGetMultipleLevel(ctxt,\n\t\t\t\t\t\t      node,\n \t\t\t\t\t\t      data->countPat,\n \t\t\t\t\t\t      data->fromPat,\n \t\t\t\t\t\t      numarray,\n\t\t\t\t\t\t      max)"];
"1000262" -> "1000276"  [label="DDG: amount"];
"1000276" -> "1000275"  [label="AST: "];
"1000276" -> "1000278"  [label="CFG: "];
"1000277" -> "1000276"  [label="AST: "];
"1000278" -> "1000276"  [label="AST: "];
"1000281" -> "1000276"  [label="CFG: "];
"1000324" -> "1000276"  [label="CFG: "];
"1000276" -> "1000384"  [label="DDG: amount > 0"];
"1000276" -> "1000384"  [label="DDG: amount"];
"1000276" -> "1000280"  [label="DDG: amount"];
"1000280" -> "1000279"  [label="AST: "];
"1000280" -> "1000286"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000282" -> "1000280"  [label="AST: "];
"1000283" -> "1000280"  [label="AST: "];
"1000284" -> "1000280"  [label="AST: "];
"1000286" -> "1000280"  [label="AST: "];
"1000324" -> "1000280"  [label="CFG: "];
"1000280" -> "1000384"  [label="DDG: numarray"];
"1000280" -> "1000384"  [label="DDG: &tokens"];
"1000280" -> "1000384"  [label="DDG: xsltNumberFormatInsertNumbers(data,\n \t\t\t\t\t      numarray,\n\t\t\t\t\t      amount,\n\t\t\t\t\t      &tokens,\n\t\t\t\t\t      output)"];
"1000280" -> "1000384"  [label="DDG: data"];
"1000280" -> "1000384"  [label="DDG: amount"];
"1000105" -> "1000280"  [label="DDG: data"];
"1000155" -> "1000280"  [label="DDG: &tokens"];
"1000123" -> "1000280"  [label="DDG: &tokens"];
"1000165" -> "1000280"  [label="DDG: output"];
"1000280" -> "1000328"  [label="DDG: output"];
"1000328" -> "1000323"  [label="AST: "];
"1000328" -> "1000329"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000330" -> "1000328"  [label="CFG: "];
"1000328" -> "1000323"  [label="DDG: output"];
"1000233" -> "1000328"  [label="DDG: output"];
"1000165" -> "1000328"  [label="DDG: output"];
"1000315" -> "1000328"  [label="DDG: output"];
"1000191" -> "1000328"  [label="DDG: output"];
"1000328" -> "1000331"  [label="DDG: output"];
"1000323" -> "1000107"  [label="AST: "];
"1000323" -> "1000330"  [label="CFG: "];
"1000324" -> "1000323"  [label="AST: "];
"1000325" -> "1000323"  [label="AST: "];
"1000330" -> "1000323"  [label="AST: "];
"1000332" -> "1000323"  [label="CFG: "];
"1000323" -> "1000384"  [label="DDG: xmlBufferContent(output)"];
"1000323" -> "1000384"  [label="DDG: ctxt"];
"1000323" -> "1000384"  [label="DDG: ctxt->insert"];
"1000323" -> "1000384"  [label="DDG: xsltCopyTextString(ctxt, ctxt->insert, xmlBufferContent(output), 0)"];
"1000141" -> "1000323"  [label="DDG: ctxt"];
"1000216" -> "1000323"  [label="DDG: ctxt"];
"1000299" -> "1000323"  [label="DDG: ctxt"];
"1000104" -> "1000323"  [label="DDG: ctxt"];
"1000331" -> "1000107"  [label="AST: "];
"1000331" -> "1000332"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000333" -> "1000331"  [label="CFG: "];
"1000331" -> "1000384"  [label="DDG: xmlBufferFree(output)"];
"1000331" -> "1000384"  [label="DDG: output"];
}
