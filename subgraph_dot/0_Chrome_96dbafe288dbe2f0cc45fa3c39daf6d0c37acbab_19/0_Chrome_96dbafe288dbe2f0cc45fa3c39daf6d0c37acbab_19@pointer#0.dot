digraph "0_Chrome_96dbafe288dbe2f0cc45fa3c39daf6d0c37acbab_19@pointer" {
"1000155" [label="(Call,xsltNumberFormatTokenize(format, &tokens))"];
"1000151" [label="(Call,format == NULL)"];
"1000139" [label="(Call,format = xsltEvalAttrValueTemplate(ctxt, data->node,\n \t\t\t\t\t     (const xmlChar *) \"format\",\n \t\t\t\t\t     XSLT_NAMESPACE))"];
"1000141" [label="(Call,xsltEvalAttrValueTemplate(ctxt, data->node,\n \t\t\t\t\t     (const xmlChar *) \"format\",\n \t\t\t\t\t     XSLT_NAMESPACE))"];
"1000104" [label="(MethodParameterIn,xsltTransformContextPtr ctxt)"];
"1000146" [label="(Call,(const xmlChar *) \"format\")"];
"1000117" [label="(Call,data->format != NULL)"];
"1000159" [label="(Call,xmlFree(format))"];
"1000191" [label="(Call,xsltNumberFormatInsertNumbers(data,\n\t\t\t\t\t  &number,\n\t\t\t\t\t  1,\n\t\t\t\t\t  &tokens,\n\t\t\t\t\t  output))"];
"1000328" [label="(Call,xmlBufferContent(output))"];
"1000323" [label="(Call,xsltCopyTextString(ctxt, ctxt->insert, xmlBufferContent(output), 0))"];
"1000331" [label="(Call,xmlBufferFree(output))"];
"1000233" [label="(Call,xsltNumberFormatInsertNumbers(data,\n \t\t\t\t\t      &number,\n\t\t\t\t\t      1,\n\t\t\t\t\t      &tokens,\n\t\t\t\t\t      output))"];
"1000280" [label="(Call,xsltNumberFormatInsertNumbers(data,\n \t\t\t\t\t      numarray,\n\t\t\t\t\t      amount,\n\t\t\t\t\t      &tokens,\n\t\t\t\t\t      output))"];
"1000315" [label="(Call,xsltNumberFormatInsertNumbers(data,\n \t\t\t\t\t      &number,\n\t\t\t\t\t      1,\n\t\t\t\t\t      &tokens,\n\t\t\t\t\t      output))"];
"1000150" [label="(ControlStructure,if (format == NULL))"];
"1000165" [label="(Call,output == NULL)"];
"1000264" [label="(Call,xsltNumberFormatGetMultipleLevel(ctxt,\n\t\t\t\t\t\t      node,\n \t\t\t\t\t\t      data->countPat,\n \t\t\t\t\t\t      data->fromPat,\n \t\t\t\t\t\t      numarray,\n\t\t\t\t\t\t      max))"];
"1000162" [label="(Identifier,output)"];
"1000281" [label="(Identifier,data)"];
"1000104" [label="(MethodParameterIn,xsltTransformContextPtr ctxt)"];
"1000105" [label="(MethodParameterIn,xsltNumberDataPtr data)"];
"1000329" [label="(Identifier,output)"];
"1000283" [label="(Identifier,amount)"];
"1000116" [label="(ControlStructure,if (data->format != NULL))"];
"1000332" [label="(Identifier,output)"];
"1000317" [label="(Call,&number)"];
"1000153" [label="(Identifier,NULL)"];
"1000135" [label="(Identifier,data)"];
"1000159" [label="(Call,xmlFree(format))"];
"1000176" [label="(Call,xsltNumberFormatGetValue(ctxt->xpathCtxt,\n\t\t\t\t\t  node,\n\t\t\t\t\t  data->value,\n\t\t\t\t\t  &number))"];
"1000232" [label="(Block,)"];
"1000286" [label="(Identifier,output)"];
"1000322" [label="(Identifier,output)"];
"1000143" [label="(Call,data->node)"];
"1000198" [label="(Identifier,output)"];
"1000235" [label="(Call,&number)"];
"1000191" [label="(Call,xsltNumberFormatInsertNumbers(data,\n\t\t\t\t\t  &number,\n\t\t\t\t\t  1,\n\t\t\t\t\t  &tokens,\n\t\t\t\t\t  output))"];
"1000319" [label="(Literal,1)"];
"1000154" [label="(Return,return;)"];
"1000280" [label="(Call,xsltNumberFormatInsertNumbers(data,\n \t\t\t\t\t      numarray,\n\t\t\t\t\t      amount,\n\t\t\t\t\t      &tokens,\n\t\t\t\t\t      output))"];
"1000331" [label="(Call,xmlBufferFree(output))"];
"1000330" [label="(Literal,0)"];
"1000155" [label="(Call,xsltNumberFormatTokenize(format, &tokens))"];
"1000240" [label="(Identifier,output)"];
"1000123" [label="(Call,xsltNumberFormatTokenize(data->format, &tokens))"];
"1000148" [label="(Literal,\"format\")"];
"1000121" [label="(Identifier,NULL)"];
"1000233" [label="(Call,xsltNumberFormatInsertNumbers(data,\n \t\t\t\t\t      &number,\n\t\t\t\t\t      1,\n\t\t\t\t\t      &tokens,\n\t\t\t\t\t      output))"];
"1000151" [label="(Call,format == NULL)"];
"1000192" [label="(Identifier,data)"];
"1000196" [label="(Call,&tokens)"];
"1000237" [label="(Literal,1)"];
"1000117" [label="(Call,data->format != NULL)"];
"1000139" [label="(Call,format = xsltEvalAttrValueTemplate(ctxt, data->node,\n \t\t\t\t\t     (const xmlChar *) \"format\",\n \t\t\t\t\t     XSLT_NAMESPACE))"];
"1000146" [label="(Call,(const xmlChar *) \"format\")"];
"1000282" [label="(Identifier,numarray)"];
"1000157" [label="(Call,&tokens)"];
"1000276" [label="(Call,amount > 0)"];
"1000190" [label="(Block,)"];
"1000325" [label="(Call,ctxt->insert)"];
"1000315" [label="(Call,xsltNumberFormatInsertNumbers(data,\n \t\t\t\t\t      &number,\n\t\t\t\t\t      1,\n\t\t\t\t\t      &tokens,\n\t\t\t\t\t      output))"];
"1000324" [label="(Identifier,ctxt)"];
"1000333" [label="(JumpTarget,XSLT_NUMBER_FORMAT_END:)"];
"1000238" [label="(Call,&tokens)"];
"1000140" [label="(Identifier,format)"];
"1000160" [label="(Identifier,format)"];
"1000142" [label="(Identifier,ctxt)"];
"1000125" [label="(Identifier,data)"];
"1000320" [label="(Call,&tokens)"];
"1000316" [label="(Identifier,data)"];
"1000149" [label="(Identifier,XSLT_NAMESPACE)"];
"1000193" [label="(Call,&number)"];
"1000284" [label="(Call,&tokens)"];
"1000384" [label="(MethodReturn,RET)"];
"1000195" [label="(Literal,1)"];
"1000156" [label="(Identifier,format)"];
"1000216" [label="(Call,xsltNumberFormatGetMultipleLevel(ctxt,\n\t\t\t\t\t\t      node,\n \t\t\t\t\t\t      data->countPat,\n \t\t\t\t\t\t      data->fromPat,\n \t\t\t\t\t\t      &number,\n\t\t\t\t\t\t      1))"];
"1000299" [label="(Call,xsltNumberFormatGetAnyLevel(ctxt,\n \t\t\t\t\t\t node,\n \t\t\t\t\t\t data->countPat,\n \t\t\t\t\t\t data->fromPat,\n\t\t\t\t\t\t &number))"];
"1000323" [label="(Call,xsltCopyTextString(ctxt, ctxt->insert, xmlBufferContent(output), 0))"];
"1000328" [label="(Call,xmlBufferContent(output))"];
"1000314" [label="(Block,)"];
"1000141" [label="(Call,xsltEvalAttrValueTemplate(ctxt, data->node,\n \t\t\t\t\t     (const xmlChar *) \"format\",\n \t\t\t\t\t     XSLT_NAMESPACE))"];
"1000130" [label="(Block,)"];
"1000118" [label="(Call,data->format)"];
"1000152" [label="(Identifier,format)"];
"1000107" [label="(Block,)"];
"1000279" [label="(Block,)"];
"1000234" [label="(Identifier,data)"];
"1000155" -> "1000130"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000157" -> "1000155"  [label="AST: "];
"1000160" -> "1000155"  [label="CFG: "];
"1000155" -> "1000384"  [label="DDG: "];
"1000155" -> "1000384"  [label="DDG: "];
"1000151" -> "1000155"  [label="DDG: "];
"1000155" -> "1000159"  [label="DDG: "];
"1000155" -> "1000191"  [label="DDG: "];
"1000155" -> "1000233"  [label="DDG: "];
"1000155" -> "1000280"  [label="DDG: "];
"1000155" -> "1000315"  [label="DDG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000151" -> "1000153"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000153" -> "1000151"  [label="AST: "];
"1000154" -> "1000151"  [label="CFG: "];
"1000156" -> "1000151"  [label="CFG: "];
"1000151" -> "1000384"  [label="DDG: "];
"1000151" -> "1000384"  [label="DDG: "];
"1000151" -> "1000384"  [label="DDG: "];
"1000139" -> "1000151"  [label="DDG: "];
"1000117" -> "1000151"  [label="DDG: "];
"1000151" -> "1000165"  [label="DDG: "];
"1000139" -> "1000130"  [label="AST: "];
"1000139" -> "1000141"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="AST: "];
"1000152" -> "1000139"  [label="CFG: "];
"1000139" -> "1000384"  [label="DDG: "];
"1000141" -> "1000139"  [label="DDG: "];
"1000141" -> "1000139"  [label="DDG: "];
"1000141" -> "1000139"  [label="DDG: "];
"1000141" -> "1000139"  [label="DDG: "];
"1000141" -> "1000149"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000146" -> "1000141"  [label="AST: "];
"1000149" -> "1000141"  [label="AST: "];
"1000141" -> "1000384"  [label="DDG: "];
"1000141" -> "1000384"  [label="DDG: "];
"1000141" -> "1000384"  [label="DDG: "];
"1000141" -> "1000384"  [label="DDG: "];
"1000104" -> "1000141"  [label="DDG: "];
"1000146" -> "1000141"  [label="DDG: "];
"1000141" -> "1000216"  [label="DDG: "];
"1000141" -> "1000264"  [label="DDG: "];
"1000141" -> "1000299"  [label="DDG: "];
"1000141" -> "1000323"  [label="DDG: "];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000384"  [label="DDG: "];
"1000104" -> "1000216"  [label="DDG: "];
"1000104" -> "1000264"  [label="DDG: "];
"1000104" -> "1000299"  [label="DDG: "];
"1000104" -> "1000323"  [label="DDG: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000149" -> "1000146"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1000121"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000121" -> "1000117"  [label="AST: "];
"1000125" -> "1000117"  [label="CFG: "];
"1000135" -> "1000117"  [label="CFG: "];
"1000117" -> "1000384"  [label="DDG: "];
"1000117" -> "1000384"  [label="DDG: "];
"1000117" -> "1000384"  [label="DDG: "];
"1000117" -> "1000123"  [label="DDG: "];
"1000117" -> "1000165"  [label="DDG: "];
"1000159" -> "1000130"  [label="AST: "];
"1000159" -> "1000160"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000162" -> "1000159"  [label="CFG: "];
"1000159" -> "1000384"  [label="DDG: "];
"1000159" -> "1000384"  [label="DDG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000191" -> "1000198"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000193" -> "1000191"  [label="AST: "];
"1000195" -> "1000191"  [label="AST: "];
"1000196" -> "1000191"  [label="AST: "];
"1000198" -> "1000191"  [label="AST: "];
"1000324" -> "1000191"  [label="CFG: "];
"1000191" -> "1000384"  [label="DDG: "];
"1000191" -> "1000384"  [label="DDG: "];
"1000191" -> "1000384"  [label="DDG: "];
"1000191" -> "1000384"  [label="DDG: "];
"1000105" -> "1000191"  [label="DDG: "];
"1000176" -> "1000191"  [label="DDG: "];
"1000123" -> "1000191"  [label="DDG: "];
"1000165" -> "1000191"  [label="DDG: "];
"1000191" -> "1000328"  [label="DDG: "];
"1000328" -> "1000323"  [label="AST: "];
"1000328" -> "1000329"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000330" -> "1000328"  [label="CFG: "];
"1000328" -> "1000323"  [label="DDG: "];
"1000280" -> "1000328"  [label="DDG: "];
"1000233" -> "1000328"  [label="DDG: "];
"1000165" -> "1000328"  [label="DDG: "];
"1000315" -> "1000328"  [label="DDG: "];
"1000328" -> "1000331"  [label="DDG: "];
"1000323" -> "1000107"  [label="AST: "];
"1000323" -> "1000330"  [label="CFG: "];
"1000324" -> "1000323"  [label="AST: "];
"1000325" -> "1000323"  [label="AST: "];
"1000330" -> "1000323"  [label="AST: "];
"1000332" -> "1000323"  [label="CFG: "];
"1000323" -> "1000384"  [label="DDG: "];
"1000323" -> "1000384"  [label="DDG: "];
"1000323" -> "1000384"  [label="DDG: "];
"1000323" -> "1000384"  [label="DDG: "];
"1000216" -> "1000323"  [label="DDG: "];
"1000264" -> "1000323"  [label="DDG: "];
"1000299" -> "1000323"  [label="DDG: "];
"1000331" -> "1000107"  [label="AST: "];
"1000331" -> "1000332"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000333" -> "1000331"  [label="CFG: "];
"1000331" -> "1000384"  [label="DDG: "];
"1000331" -> "1000384"  [label="DDG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000233" -> "1000240"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000235" -> "1000233"  [label="AST: "];
"1000237" -> "1000233"  [label="AST: "];
"1000238" -> "1000233"  [label="AST: "];
"1000240" -> "1000233"  [label="AST: "];
"1000324" -> "1000233"  [label="CFG: "];
"1000233" -> "1000384"  [label="DDG: "];
"1000233" -> "1000384"  [label="DDG: "];
"1000233" -> "1000384"  [label="DDG: "];
"1000233" -> "1000384"  [label="DDG: "];
"1000105" -> "1000233"  [label="DDG: "];
"1000216" -> "1000233"  [label="DDG: "];
"1000123" -> "1000233"  [label="DDG: "];
"1000165" -> "1000233"  [label="DDG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000280" -> "1000286"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000282" -> "1000280"  [label="AST: "];
"1000283" -> "1000280"  [label="AST: "];
"1000284" -> "1000280"  [label="AST: "];
"1000286" -> "1000280"  [label="AST: "];
"1000324" -> "1000280"  [label="CFG: "];
"1000280" -> "1000384"  [label="DDG: "];
"1000280" -> "1000384"  [label="DDG: "];
"1000280" -> "1000384"  [label="DDG: "];
"1000280" -> "1000384"  [label="DDG: "];
"1000280" -> "1000384"  [label="DDG: "];
"1000105" -> "1000280"  [label="DDG: "];
"1000264" -> "1000280"  [label="DDG: "];
"1000276" -> "1000280"  [label="DDG: "];
"1000123" -> "1000280"  [label="DDG: "];
"1000165" -> "1000280"  [label="DDG: "];
"1000315" -> "1000314"  [label="AST: "];
"1000315" -> "1000322"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000317" -> "1000315"  [label="AST: "];
"1000319" -> "1000315"  [label="AST: "];
"1000320" -> "1000315"  [label="AST: "];
"1000322" -> "1000315"  [label="AST: "];
"1000324" -> "1000315"  [label="CFG: "];
"1000315" -> "1000384"  [label="DDG: "];
"1000315" -> "1000384"  [label="DDG: "];
"1000315" -> "1000384"  [label="DDG: "];
"1000315" -> "1000384"  [label="DDG: "];
"1000105" -> "1000315"  [label="DDG: "];
"1000299" -> "1000315"  [label="DDG: "];
"1000123" -> "1000315"  [label="DDG: "];
"1000165" -> "1000315"  [label="DDG: "];
}
