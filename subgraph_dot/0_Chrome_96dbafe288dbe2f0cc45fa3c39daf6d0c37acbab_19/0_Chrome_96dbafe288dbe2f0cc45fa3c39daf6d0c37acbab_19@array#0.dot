digraph "0_Chrome_96dbafe288dbe2f0cc45fa3c39daf6d0c37acbab_19@array" {
"1000367" [label="(Call,tokens.tokens[i].separator != NULL)"];
"1000376" [label="(Call,xmlFree(tokens.tokens[i].separator))"];
"1000367" [label="(Call,tokens.tokens[i].separator != NULL)"];
"1000345" [label="(Call,tokens.end != NULL)"];
"1000335" [label="(Call,tokens.start != NULL)"];
"1000165" [label="(Call,output == NULL)"];
"1000161" [label="(Call,output = xmlBufferCreate())"];
"1000117" [label="(Call,data->format != NULL)"];
"1000151" [label="(Call,format == NULL)"];
"1000139" [label="(Call,format = xsltEvalAttrValueTemplate(ctxt, data->node,\n \t\t\t\t\t     (const xmlChar *) \"format\",\n \t\t\t\t\t     XSLT_NAMESPACE))"];
"1000141" [label="(Call,xsltEvalAttrValueTemplate(ctxt, data->node,\n \t\t\t\t\t     (const xmlChar *) \"format\",\n \t\t\t\t\t     XSLT_NAMESPACE))"];
"1000104" [label="(MethodParameterIn,xsltTransformContextPtr ctxt)"];
"1000146" [label="(Call,(const xmlChar *) \"format\")"];
"1000150" [label="(ControlStructure,if (format == NULL))"];
"1000380" [label="(Identifier,tokens)"];
"1000165" [label="(Call,output == NULL)"];
"1000162" [label="(Identifier,output)"];
"1000264" [label="(Call,xsltNumberFormatGetMultipleLevel(ctxt,\n\t\t\t\t\t\t      node,\n \t\t\t\t\t\t      data->countPat,\n \t\t\t\t\t\t      data->fromPat,\n \t\t\t\t\t\t      numarray,\n\t\t\t\t\t\t      max))"];
"1000368" [label="(Call,tokens.tokens[i].separator)"];
"1000104" [label="(MethodParameterIn,xsltTransformContextPtr ctxt)"];
"1000116" [label="(ControlStructure,if (data->format != NULL))"];
"1000153" [label="(Identifier,NULL)"];
"1000171" [label="(Identifier,data)"];
"1000135" [label="(Identifier,data)"];
"1000377" [label="(Call,tokens.tokens[i].separator)"];
"1000339" [label="(Identifier,NULL)"];
"1000342" [label="(Identifier,tokens)"];
"1000344" [label="(ControlStructure,if (tokens.end != NULL))"];
"1000340" [label="(Call,xmlFree(tokens.start))"];
"1000143" [label="(Call,data->node)"];
"1000163" [label="(Call,xmlBufferCreate())"];
"1000167" [label="(Identifier,NULL)"];
"1000161" [label="(Call,output = xmlBufferCreate())"];
"1000164" [label="(ControlStructure,if (output == NULL))"];
"1000191" [label="(Call,xsltNumberFormatInsertNumbers(data,\n\t\t\t\t\t  &number,\n\t\t\t\t\t  1,\n\t\t\t\t\t  &tokens,\n\t\t\t\t\t  output))"];
"1000280" [label="(Call,xsltNumberFormatInsertNumbers(data,\n \t\t\t\t\t      numarray,\n\t\t\t\t\t      amount,\n\t\t\t\t\t      &tokens,\n\t\t\t\t\t      output))"];
"1000154" [label="(Return,return;)"];
"1000155" [label="(Call,xsltNumberFormatTokenize(format, &tokens))"];
"1000123" [label="(Call,xsltNumberFormatTokenize(data->format, &tokens))"];
"1000375" [label="(Identifier,NULL)"];
"1000367" [label="(Call,tokens.tokens[i].separator != NULL)"];
"1000166" [label="(Identifier,output)"];
"1000148" [label="(Literal,\"format\")"];
"1000121" [label="(Identifier,NULL)"];
"1000350" [label="(Call,xmlFree(tokens.end))"];
"1000151" [label="(Call,format == NULL)"];
"1000233" [label="(Call,xsltNumberFormatInsertNumbers(data,\n \t\t\t\t\t      &number,\n\t\t\t\t\t      1,\n\t\t\t\t\t      &tokens,\n\t\t\t\t\t      output))"];
"1000336" [label="(Call,tokens.start)"];
"1000356" [label="(Identifier,i)"];
"1000168" [label="(ControlStructure,goto XSLT_NUMBER_FORMAT_END;)"];
"1000117" [label="(Call,data->format != NULL)"];
"1000139" [label="(Call,format = xsltEvalAttrValueTemplate(ctxt, data->node,\n \t\t\t\t\t     (const xmlChar *) \"format\",\n \t\t\t\t\t     XSLT_NAMESPACE))"];
"1000146" [label="(Call,(const xmlChar *) \"format\")"];
"1000346" [label="(Call,tokens.end)"];
"1000315" [label="(Call,xsltNumberFormatInsertNumbers(data,\n \t\t\t\t\t      &number,\n\t\t\t\t\t      1,\n\t\t\t\t\t      &tokens,\n\t\t\t\t\t      output))"];
"1000349" [label="(Identifier,NULL)"];
"1000140" [label="(Identifier,format)"];
"1000142" [label="(Identifier,ctxt)"];
"1000125" [label="(Identifier,data)"];
"1000376" [label="(Call,xmlFree(tokens.tokens[i].separator))"];
"1000149" [label="(Identifier,XSLT_NAMESPACE)"];
"1000364" [label="(Identifier,i)"];
"1000352" [label="(Identifier,tokens)"];
"1000384" [label="(MethodReturn,RET)"];
"1000334" [label="(ControlStructure,if (tokens.start != NULL))"];
"1000345" [label="(Call,tokens.end != NULL)"];
"1000335" [label="(Call,tokens.start != NULL)"];
"1000156" [label="(Identifier,format)"];
"1000216" [label="(Call,xsltNumberFormatGetMultipleLevel(ctxt,\n\t\t\t\t\t\t      node,\n \t\t\t\t\t\t      data->countPat,\n \t\t\t\t\t\t      data->fromPat,\n \t\t\t\t\t\t      &number,\n\t\t\t\t\t\t      1))"];
"1000299" [label="(Call,xsltNumberFormatGetAnyLevel(ctxt,\n \t\t\t\t\t\t node,\n \t\t\t\t\t\t data->countPat,\n \t\t\t\t\t\t data->fromPat,\n\t\t\t\t\t\t &number))"];
"1000328" [label="(Call,xmlBufferContent(output))"];
"1000347" [label="(Identifier,tokens)"];
"1000323" [label="(Call,xsltCopyTextString(ctxt, ctxt->insert, xmlBufferContent(output), 0))"];
"1000366" [label="(ControlStructure,if (tokens.tokens[i].separator != NULL))"];
"1000118" [label="(Call,data->format)"];
"1000130" [label="(Block,)"];
"1000141" [label="(Call,xsltEvalAttrValueTemplate(ctxt, data->node,\n \t\t\t\t\t     (const xmlChar *) \"format\",\n \t\t\t\t\t     XSLT_NAMESPACE))"];
"1000152" [label="(Identifier,format)"];
"1000107" [label="(Block,)"];
"1000367" -> "1000366"  [label="AST: "];
"1000367" -> "1000375"  [label="CFG: "];
"1000368" -> "1000367"  [label="AST: "];
"1000375" -> "1000367"  [label="AST: "];
"1000380" -> "1000367"  [label="CFG: "];
"1000364" -> "1000367"  [label="CFG: "];
"1000367" -> "1000384"  [label="DDG: "];
"1000367" -> "1000384"  [label="DDG: "];
"1000367" -> "1000384"  [label="DDG: "];
"1000376" -> "1000367"  [label="DDG: "];
"1000345" -> "1000367"  [label="DDG: "];
"1000367" -> "1000376"  [label="DDG: "];
"1000376" -> "1000366"  [label="AST: "];
"1000376" -> "1000377"  [label="CFG: "];
"1000377" -> "1000376"  [label="AST: "];
"1000364" -> "1000376"  [label="CFG: "];
"1000376" -> "1000384"  [label="DDG: "];
"1000376" -> "1000384"  [label="DDG: "];
"1000345" -> "1000344"  [label="AST: "];
"1000345" -> "1000349"  [label="CFG: "];
"1000346" -> "1000345"  [label="AST: "];
"1000349" -> "1000345"  [label="AST: "];
"1000352" -> "1000345"  [label="CFG: "];
"1000356" -> "1000345"  [label="CFG: "];
"1000345" -> "1000384"  [label="DDG: "];
"1000345" -> "1000384"  [label="DDG: "];
"1000345" -> "1000384"  [label="DDG: "];
"1000335" -> "1000345"  [label="DDG: "];
"1000345" -> "1000350"  [label="DDG: "];
"1000335" -> "1000334"  [label="AST: "];
"1000335" -> "1000339"  [label="CFG: "];
"1000336" -> "1000335"  [label="AST: "];
"1000339" -> "1000335"  [label="AST: "];
"1000342" -> "1000335"  [label="CFG: "];
"1000347" -> "1000335"  [label="CFG: "];
"1000335" -> "1000384"  [label="DDG: "];
"1000335" -> "1000384"  [label="DDG: "];
"1000165" -> "1000335"  [label="DDG: "];
"1000335" -> "1000340"  [label="DDG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000165" -> "1000167"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000167" -> "1000165"  [label="AST: "];
"1000168" -> "1000165"  [label="CFG: "];
"1000171" -> "1000165"  [label="CFG: "];
"1000165" -> "1000384"  [label="DDG: "];
"1000165" -> "1000384"  [label="DDG: "];
"1000161" -> "1000165"  [label="DDG: "];
"1000117" -> "1000165"  [label="DDG: "];
"1000151" -> "1000165"  [label="DDG: "];
"1000165" -> "1000191"  [label="DDG: "];
"1000165" -> "1000233"  [label="DDG: "];
"1000165" -> "1000280"  [label="DDG: "];
"1000165" -> "1000315"  [label="DDG: "];
"1000165" -> "1000328"  [label="DDG: "];
"1000161" -> "1000107"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000166" -> "1000161"  [label="CFG: "];
"1000161" -> "1000384"  [label="DDG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1000121"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000121" -> "1000117"  [label="AST: "];
"1000125" -> "1000117"  [label="CFG: "];
"1000135" -> "1000117"  [label="CFG: "];
"1000117" -> "1000384"  [label="DDG: "];
"1000117" -> "1000384"  [label="DDG: "];
"1000117" -> "1000384"  [label="DDG: "];
"1000117" -> "1000123"  [label="DDG: "];
"1000117" -> "1000151"  [label="DDG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000151" -> "1000153"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000153" -> "1000151"  [label="AST: "];
"1000154" -> "1000151"  [label="CFG: "];
"1000156" -> "1000151"  [label="CFG: "];
"1000151" -> "1000384"  [label="DDG: "];
"1000151" -> "1000384"  [label="DDG: "];
"1000151" -> "1000384"  [label="DDG: "];
"1000139" -> "1000151"  [label="DDG: "];
"1000151" -> "1000155"  [label="DDG: "];
"1000139" -> "1000130"  [label="AST: "];
"1000139" -> "1000141"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="AST: "];
"1000152" -> "1000139"  [label="CFG: "];
"1000139" -> "1000384"  [label="DDG: "];
"1000141" -> "1000139"  [label="DDG: "];
"1000141" -> "1000139"  [label="DDG: "];
"1000141" -> "1000139"  [label="DDG: "];
"1000141" -> "1000139"  [label="DDG: "];
"1000141" -> "1000149"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000146" -> "1000141"  [label="AST: "];
"1000149" -> "1000141"  [label="AST: "];
"1000141" -> "1000384"  [label="DDG: "];
"1000141" -> "1000384"  [label="DDG: "];
"1000141" -> "1000384"  [label="DDG: "];
"1000141" -> "1000384"  [label="DDG: "];
"1000104" -> "1000141"  [label="DDG: "];
"1000146" -> "1000141"  [label="DDG: "];
"1000141" -> "1000216"  [label="DDG: "];
"1000141" -> "1000264"  [label="DDG: "];
"1000141" -> "1000299"  [label="DDG: "];
"1000141" -> "1000323"  [label="DDG: "];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000384"  [label="DDG: "];
"1000104" -> "1000216"  [label="DDG: "];
"1000104" -> "1000264"  [label="DDG: "];
"1000104" -> "1000299"  [label="DDG: "];
"1000104" -> "1000323"  [label="DDG: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000149" -> "1000146"  [label="CFG: "];
}
