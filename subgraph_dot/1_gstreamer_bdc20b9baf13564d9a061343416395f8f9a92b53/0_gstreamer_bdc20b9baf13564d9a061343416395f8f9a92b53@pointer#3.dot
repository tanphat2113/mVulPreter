digraph "0_gstreamer_bdc20b9baf13564d9a061343416395f8f9a92b53@pointer" {
"1000243" [label="(Call,stream->n_samples = n_samples)"];
"1000239" [label="(Call,GST_DEBUG_OBJECT (qtdemux, \"stsz sample_size 0, allocating n_samples %d\",\n        n_samples))"];
"1000118" [label="(MethodParameterIn,GstQTDemux * qtdemux)"];
"1000233" [label="(Call,n_samples = QT_UINT32 (stsz_data + 16))"];
"1000235" [label="(Call,QT_UINT32 (stsz_data + 16))"];
"1000168" [label="(Call,stsz_data = (const guint8 *) stsz->data)"];
"1000170" [label="(Call,(const guint8 *) stsz->data)"];
"1000973" [label="(Call,j < stream->n_samples)"];
"1000972" [label="(Call,(j < stream->n_samples) && (i < n_entries))"];
"1001014" [label="(Call,j++)"];
"1000240" [label="(Identifier,qtdemux)"];
"1000974" [label="(Identifier,j)"];
"1000979" [label="(Identifier,i)"];
"1000969" [label="(Call,j = 0)"];
"1000693" [label="(Call,GST_DEBUG_OBJECT (qtdemux, \"allocating n_samples %d\", n_samples))"];
"1000249" [label="(Identifier,samples)"];
"1000245" [label="(Identifier,stream)"];
"1000243" [label="(Call,stream->n_samples = n_samples)"];
"1000688" [label="(Call,stream->n_samples = n_samples)"];
"1000294" [label="(Call,GST_LOG_OBJECT (qtdemux, \"sample %d has size %d\", i, samples[i].size))"];
"1000250" [label="(Call,g_new0 (QtDemuxSample, n_samples))"];
"1001035" [label="(Call,GST_ELEMENT_ERROR (qtdemux, STREAM, DECODE,\n        (_(\"This file is corrupt and cannot be played.\")), (NULL)))"];
"1000279" [label="(Call,stsz_data + i * 4 + 20)"];
"1001030" [label="(JumpTarget,done:)"];
"1000176" [label="(Identifier,stco)"];
"1001015" [label="(Identifier,j)"];
"1000232" [label="(Block,)"];
"1000978" [label="(Call,i < n_entries)"];
"1000169" [label="(Identifier,stsz_data)"];
"1000973" [label="(Call,j < stream->n_samples)"];
"1000247" [label="(Identifier,n_samples)"];
"1001044" [label="(MethodReturn,RET)"];
"1000891" [label="(Call,GST_DEBUG_OBJECT (qtdemux, \"sample %d: timestamp %\" GST_TIME_FORMAT\n            \", size %u\", j, GST_TIME_ARGS (timestamp), samples[j].size))"];
"1000170" [label="(Call,(const guint8 *) stsz->data)"];
"1000236" [label="(Call,stsz_data + 16)"];
"1000168" [label="(Call,stsz_data = (const guint8 *) stsz->data)"];
"1000242" [label="(Identifier,n_samples)"];
"1000713" [label="(Call,GST_DEBUG_OBJECT (qtdemux, \"n_samples_per_chunk %d\", n_samples_per_chunk))"];
"1000788" [label="(Call,GST_LOG_OBJECT (qtdemux,\n          \"entry %d has first_chunk %d, last_chunk %d, samples_per_chunk %d\", i,\n          first_chunk, last_chunk, samples_per_chunk))"];
"1000239" [label="(Call,GST_DEBUG_OBJECT (qtdemux, \"stsz sample_size 0, allocating n_samples %d\",\n        n_samples))"];
"1000121" [label="(Block,)"];
"1000278" [label="(Call,QT_UINT32 (stsz_data + i * 4 + 20))"];
"1001014" [label="(Call,j++)"];
"1000172" [label="(Call,stsz->data)"];
"1001011" [label="(Block,)"];
"1000241" [label="(Literal,\"stsz sample_size 0, allocating n_samples %d\")"];
"1000233" [label="(Call,n_samples = QT_UINT32 (stsz_data + 16))"];
"1000964" [label="(ControlStructure,for (i = 0, j = 0; (j < stream->n_samples) && (i < n_entries); i++))"];
"1000220" [label="(Call,QT_UINT32 (stsz_data + 12))"];
"1000663" [label="(Call,GST_DEBUG_OBJECT (qtdemux,\n        \"stsz sample_size %d != 0, treating chunks as samples\", sample_size))"];
"1000985" [label="(Identifier,count)"];
"1000221" [label="(Call,stsz_data + 12)"];
"1000244" [label="(Call,stream->n_samples)"];
"1000235" [label="(Call,QT_UINT32 (stsz_data + 16))"];
"1000972" [label="(Call,(j < stream->n_samples) && (i < n_entries))"];
"1000434" [label="(Call,GST_LOG_OBJECT (qtdemux, \"Creating entry %d with offset %lld\",\n              index, chunk_offset))"];
"1000118" [label="(MethodParameterIn,GstQTDemux * qtdemux)"];
"1001009" [label="(Identifier,k)"];
"1000975" [label="(Call,stream->n_samples)"];
"1000234" [label="(Identifier,n_samples)"];
"1000243" -> "1000232"  [label="AST: "];
"1000243" -> "1000247"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000247" -> "1000243"  [label="AST: "];
"1000249" -> "1000243"  [label="CFG: "];
"1000243" -> "1001044"  [label="DDG: "];
"1000239" -> "1000243"  [label="DDG: "];
"1000243" -> "1000973"  [label="DDG: "];
"1000239" -> "1000232"  [label="AST: "];
"1000239" -> "1000242"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="AST: "];
"1000242" -> "1000239"  [label="AST: "];
"1000245" -> "1000239"  [label="CFG: "];
"1000239" -> "1001044"  [label="DDG: "];
"1000239" -> "1001044"  [label="DDG: "];
"1000118" -> "1000239"  [label="DDG: "];
"1000233" -> "1000239"  [label="DDG: "];
"1000239" -> "1000250"  [label="DDG: "];
"1000239" -> "1000294"  [label="DDG: "];
"1000239" -> "1000434"  [label="DDG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1001044"  [label="DDG: "];
"1000118" -> "1000294"  [label="DDG: "];
"1000118" -> "1000434"  [label="DDG: "];
"1000118" -> "1000663"  [label="DDG: "];
"1000118" -> "1000693"  [label="DDG: "];
"1000118" -> "1000713"  [label="DDG: "];
"1000118" -> "1000788"  [label="DDG: "];
"1000118" -> "1000891"  [label="DDG: "];
"1000118" -> "1001035"  [label="DDG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000233" -> "1000235"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000235" -> "1000233"  [label="AST: "];
"1000240" -> "1000233"  [label="CFG: "];
"1000233" -> "1001044"  [label="DDG: "];
"1000235" -> "1000233"  [label="DDG: "];
"1000235" -> "1000236"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000235" -> "1001044"  [label="DDG: "];
"1000168" -> "1000235"  [label="DDG: "];
"1000168" -> "1000121"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000176" -> "1000168"  [label="CFG: "];
"1000168" -> "1001044"  [label="DDG: "];
"1000168" -> "1001044"  [label="DDG: "];
"1000170" -> "1000168"  [label="DDG: "];
"1000168" -> "1000220"  [label="DDG: "];
"1000168" -> "1000221"  [label="DDG: "];
"1000168" -> "1000236"  [label="DDG: "];
"1000168" -> "1000278"  [label="DDG: "];
"1000168" -> "1000279"  [label="DDG: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000170" -> "1001044"  [label="DDG: "];
"1000973" -> "1000972"  [label="AST: "];
"1000973" -> "1000975"  [label="CFG: "];
"1000974" -> "1000973"  [label="AST: "];
"1000975" -> "1000973"  [label="AST: "];
"1000979" -> "1000973"  [label="CFG: "];
"1000972" -> "1000973"  [label="CFG: "];
"1000973" -> "1001044"  [label="DDG: "];
"1000973" -> "1001044"  [label="DDG: "];
"1000973" -> "1000972"  [label="DDG: "];
"1000973" -> "1000972"  [label="DDG: "];
"1001014" -> "1000973"  [label="DDG: "];
"1000969" -> "1000973"  [label="DDG: "];
"1000688" -> "1000973"  [label="DDG: "];
"1000973" -> "1001014"  [label="DDG: "];
"1000972" -> "1000964"  [label="AST: "];
"1000972" -> "1000978"  [label="CFG: "];
"1000978" -> "1000972"  [label="AST: "];
"1000985" -> "1000972"  [label="CFG: "];
"1001030" -> "1000972"  [label="CFG: "];
"1000972" -> "1001044"  [label="DDG: "];
"1000972" -> "1001044"  [label="DDG: "];
"1000972" -> "1001044"  [label="DDG: "];
"1000978" -> "1000972"  [label="DDG: "];
"1000978" -> "1000972"  [label="DDG: "];
"1001014" -> "1001011"  [label="AST: "];
"1001014" -> "1001015"  [label="CFG: "];
"1001015" -> "1001014"  [label="AST: "];
"1001009" -> "1001014"  [label="CFG: "];
}
