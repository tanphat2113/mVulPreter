digraph "0_libav_58b2e0f0f2fc96c1158e04f8aba95cbe6157a1a3@array" {
"1000208" [label="(Call,s->vector_width = s->avctx->extradata[10])"];
"1000247" [label="(Call,s->vector_width != 4)"];
"1000246" [label="(Call,(s->vector_width != 4) ||\n        ((s->vector_height != 2) && (s->vector_height != 4)))"];
"1000273" [label="(Call,s->vector_width  - 1)"];
"1000269" [label="(Call,s->width  & (s->vector_width  - 1))"];
"1000268" [label="(Call,s->width  & (s->vector_width  - 1) ||\n        s->height & (s->vector_height - 1))"];
"1000312" [label="(Call,s->width / s->vector_width)"];
"1000311" [label="(Call,(s->width / s->vector_width) *\n        (s->height / s->vector_height) * 2)"];
"1000307" [label="(Call,s->decode_buffer_size = (s->width / s->vector_width) *\n        (s->height / s->vector_height) * 2)"];
"1000332" [label="(Call,av_malloc(s->decode_buffer_size))"];
"1000328" [label="(Call,s->decode_buffer = av_malloc(s->decode_buffer_size))"];
"1000337" [label="(Call,!s->decode_buffer)"];
"1000440" [label="(Call,av_freep(&s->decode_buffer))"];
"1000268" [label="(Call,s->width  & (s->vector_width  - 1) ||\n        s->height & (s->vector_height - 1))"];
"1000447" [label="(Identifier,ENOMEM)"];
"1000269" [label="(Call,s->width  & (s->vector_width  - 1))"];
"1000336" [label="(ControlStructure,if (!s->decode_buffer))"];
"1000448" [label="(MethodReturn,static av_cold int)"];
"1000246" [label="(Call,(s->vector_width != 4) ||\n        ((s->vector_height != 2) && (s->vector_height != 4)))"];
"1000333" [label="(Call,s->decode_buffer_size)"];
"1000274" [label="(Call,s->vector_width)"];
"1000280" [label="(Identifier,s)"];
"1000316" [label="(Call,s->vector_width)"];
"1000245" [label="(ControlStructure,if ((s->vector_width != 4) ||\n        ((s->vector_height != 2) && (s->vector_height != 4))))"];
"1000440" [label="(Call,av_freep(&s->decode_buffer))"];
"1000208" [label="(Call,s->vector_width = s->avctx->extradata[10])"];
"1000278" [label="(Call,s->height & (s->vector_height - 1))"];
"1000109" [label="(Block,)"];
"1000330" [label="(Identifier,s)"];
"1000441" [label="(Call,&s->decode_buffer)"];
"1000296" [label="(Identifier,s)"];
"1000345" [label="(Identifier,s)"];
"1000328" [label="(Call,s->decode_buffer = av_malloc(s->decode_buffer_size))"];
"1000271" [label="(Identifier,s)"];
"1000322" [label="(Identifier,s)"];
"1000307" [label="(Call,s->decode_buffer_size = (s->width / s->vector_width) *\n        (s->height / s->vector_height) * 2)"];
"1000311" [label="(Call,(s->width / s->vector_width) *\n        (s->height / s->vector_height) * 2)"];
"1000270" [label="(Call,s->width)"];
"1000277" [label="(Literal,1)"];
"1000209" [label="(Call,s->vector_width)"];
"1000252" [label="(Call,(s->vector_height != 2) && (s->vector_height != 4))"];
"1000313" [label="(Call,s->width)"];
"1000308" [label="(Call,s->decode_buffer_size)"];
"1000267" [label="(ControlStructure,if (s->width  & (s->vector_width  - 1) ||\n        s->height & (s->vector_height - 1)))"];
"1000186" [label="(Call,av_image_check_size(s->width, s->height, 0, avctx))"];
"1000337" [label="(Call,!s->decode_buffer)"];
"1000248" [label="(Call,s->vector_width)"];
"1000289" [label="(Identifier,avctx)"];
"1000329" [label="(Call,s->decode_buffer)"];
"1000212" [label="(Call,s->avctx->extradata[10])"];
"1000221" [label="(Identifier,s)"];
"1000341" [label="(ControlStructure,goto fail;)"];
"1000319" [label="(Call,(s->height / s->vector_height) * 2)"];
"1000332" [label="(Call,av_malloc(s->decode_buffer_size))"];
"1000255" [label="(Identifier,s)"];
"1000273" [label="(Call,s->vector_width  - 1)"];
"1000247" [label="(Call,s->vector_width != 4)"];
"1000266" [label="(Literal,1)"];
"1000338" [label="(Call,s->decode_buffer)"];
"1000251" [label="(Literal,4)"];
"1000312" [label="(Call,s->width / s->vector_width)"];
"1000339" [label="(Identifier,s)"];
"1000208" -> "1000109"  [label="AST: "];
"1000208" -> "1000212"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000212" -> "1000208"  [label="AST: "];
"1000221" -> "1000208"  [label="CFG: "];
"1000208" -> "1000448"  [label="DDG: s->avctx->extradata[10]"];
"1000208" -> "1000247"  [label="DDG: s->vector_width"];
"1000247" -> "1000246"  [label="AST: "];
"1000247" -> "1000251"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000251" -> "1000247"  [label="AST: "];
"1000255" -> "1000247"  [label="CFG: "];
"1000246" -> "1000247"  [label="CFG: "];
"1000247" -> "1000448"  [label="DDG: s->vector_width"];
"1000247" -> "1000246"  [label="DDG: s->vector_width"];
"1000247" -> "1000246"  [label="DDG: 4"];
"1000247" -> "1000273"  [label="DDG: s->vector_width"];
"1000246" -> "1000245"  [label="AST: "];
"1000246" -> "1000252"  [label="CFG: "];
"1000252" -> "1000246"  [label="AST: "];
"1000266" -> "1000246"  [label="CFG: "];
"1000271" -> "1000246"  [label="CFG: "];
"1000246" -> "1000448"  [label="DDG: s->vector_width != 4"];
"1000246" -> "1000448"  [label="DDG: (s->vector_height != 2) && (s->vector_height != 4)"];
"1000246" -> "1000448"  [label="DDG: (s->vector_width != 4) ||\n        ((s->vector_height != 2) && (s->vector_height != 4))"];
"1000252" -> "1000246"  [label="DDG: s->vector_height != 2"];
"1000252" -> "1000246"  [label="DDG: s->vector_height != 4"];
"1000273" -> "1000269"  [label="AST: "];
"1000273" -> "1000277"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000277" -> "1000273"  [label="AST: "];
"1000269" -> "1000273"  [label="CFG: "];
"1000273" -> "1000448"  [label="DDG: s->vector_width"];
"1000273" -> "1000269"  [label="DDG: s->vector_width"];
"1000273" -> "1000269"  [label="DDG: 1"];
"1000273" -> "1000312"  [label="DDG: s->vector_width"];
"1000269" -> "1000268"  [label="AST: "];
"1000270" -> "1000269"  [label="AST: "];
"1000280" -> "1000269"  [label="CFG: "];
"1000268" -> "1000269"  [label="CFG: "];
"1000269" -> "1000448"  [label="DDG: s->vector_width  - 1"];
"1000269" -> "1000448"  [label="DDG: s->width"];
"1000269" -> "1000268"  [label="DDG: s->width"];
"1000269" -> "1000268"  [label="DDG: s->vector_width  - 1"];
"1000186" -> "1000269"  [label="DDG: s->width"];
"1000269" -> "1000312"  [label="DDG: s->width"];
"1000268" -> "1000267"  [label="AST: "];
"1000268" -> "1000278"  [label="CFG: "];
"1000278" -> "1000268"  [label="AST: "];
"1000289" -> "1000268"  [label="CFG: "];
"1000296" -> "1000268"  [label="CFG: "];
"1000268" -> "1000448"  [label="DDG: s->width  & (s->vector_width  - 1)"];
"1000268" -> "1000448"  [label="DDG: s->width  & (s->vector_width  - 1) ||\n        s->height & (s->vector_height - 1)"];
"1000268" -> "1000448"  [label="DDG: s->height & (s->vector_height - 1)"];
"1000278" -> "1000268"  [label="DDG: s->height"];
"1000278" -> "1000268"  [label="DDG: s->vector_height - 1"];
"1000312" -> "1000311"  [label="AST: "];
"1000312" -> "1000316"  [label="CFG: "];
"1000313" -> "1000312"  [label="AST: "];
"1000316" -> "1000312"  [label="AST: "];
"1000322" -> "1000312"  [label="CFG: "];
"1000312" -> "1000448"  [label="DDG: s->vector_width"];
"1000312" -> "1000448"  [label="DDG: s->width"];
"1000312" -> "1000311"  [label="DDG: s->width"];
"1000312" -> "1000311"  [label="DDG: s->vector_width"];
"1000311" -> "1000307"  [label="AST: "];
"1000311" -> "1000319"  [label="CFG: "];
"1000319" -> "1000311"  [label="AST: "];
"1000307" -> "1000311"  [label="CFG: "];
"1000311" -> "1000448"  [label="DDG: s->width / s->vector_width"];
"1000311" -> "1000448"  [label="DDG: (s->height / s->vector_height) * 2"];
"1000311" -> "1000307"  [label="DDG: s->width / s->vector_width"];
"1000311" -> "1000307"  [label="DDG: (s->height / s->vector_height) * 2"];
"1000319" -> "1000311"  [label="DDG: s->height / s->vector_height"];
"1000319" -> "1000311"  [label="DDG: 2"];
"1000307" -> "1000109"  [label="AST: "];
"1000308" -> "1000307"  [label="AST: "];
"1000330" -> "1000307"  [label="CFG: "];
"1000307" -> "1000448"  [label="DDG: (s->width / s->vector_width) *\n        (s->height / s->vector_height) * 2"];
"1000307" -> "1000332"  [label="DDG: s->decode_buffer_size"];
"1000332" -> "1000328"  [label="AST: "];
"1000332" -> "1000333"  [label="CFG: "];
"1000333" -> "1000332"  [label="AST: "];
"1000328" -> "1000332"  [label="CFG: "];
"1000332" -> "1000448"  [label="DDG: s->decode_buffer_size"];
"1000332" -> "1000328"  [label="DDG: s->decode_buffer_size"];
"1000328" -> "1000109"  [label="AST: "];
"1000329" -> "1000328"  [label="AST: "];
"1000339" -> "1000328"  [label="CFG: "];
"1000328" -> "1000448"  [label="DDG: av_malloc(s->decode_buffer_size)"];
"1000328" -> "1000337"  [label="DDG: s->decode_buffer"];
"1000337" -> "1000336"  [label="AST: "];
"1000337" -> "1000338"  [label="CFG: "];
"1000338" -> "1000337"  [label="AST: "];
"1000341" -> "1000337"  [label="CFG: "];
"1000345" -> "1000337"  [label="CFG: "];
"1000337" -> "1000448"  [label="DDG: s->decode_buffer"];
"1000337" -> "1000448"  [label="DDG: !s->decode_buffer"];
"1000337" -> "1000440"  [label="DDG: s->decode_buffer"];
"1000440" -> "1000109"  [label="AST: "];
"1000440" -> "1000441"  [label="CFG: "];
"1000441" -> "1000440"  [label="AST: "];
"1000447" -> "1000440"  [label="CFG: "];
"1000440" -> "1000448"  [label="DDG: av_freep(&s->decode_buffer)"];
"1000440" -> "1000448"  [label="DDG: &s->decode_buffer"];
}
