digraph "0_openssl_59302b600e8d5b77ef144e447bb046fd7ab72686@pointer" {
"1000112" [label="(MethodParameterIn,EVP_PKEY *pkey)"];
"1000512" [label="(Call,pkcs7_decrypt_rinfo(&ek, &eklen, ri, pkey))"];
"1000511" [label="(Call,pkcs7_decrypt_rinfo(&ek, &eklen, ri, pkey) < 0)"];
"1000526" [label="(Call,pkcs7_decrypt_rinfo(&ek, &eklen, ri, pkey))"];
"1000525" [label="(Call,pkcs7_decrypt_rinfo(&ek, &eklen, ri, pkey) < 0)"];
"1000481" [label="(Call,ri == NULL)"];
"1000512" [label="(Call,pkcs7_decrypt_rinfo(&ek, &eklen, ri, pkey))"];
"1000526" [label="(Call,pkcs7_decrypt_rinfo(&ek, &eklen, ri, pkey))"];
"1000513" [label="(Call,&ek)"];
"1000531" [label="(Identifier,ri)"];
"1000517" [label="(Identifier,ri)"];
"1000518" [label="(Identifier,pkey)"];
"1000505" [label="(Call,ri = sk_PKCS7_RECIP_INFO_value(rsk, i))"];
"1000527" [label="(Call,&ek)"];
"1000529" [label="(Call,&eklen)"];
"1000165" [label="(Call,*ri = NULL)"];
"1000520" [label="(ControlStructure,goto err;)"];
"1000535" [label="(Call,ERR_clear_error())"];
"1000511" [label="(Call,pkcs7_decrypt_rinfo(&ek, &eklen, ri, pkey) < 0)"];
"1000112" [label="(MethodParameterIn,EVP_PKEY *pkey)"];
"1000532" [label="(Identifier,pkey)"];
"1000515" [label="(Call,&eklen)"];
"1000725" [label="(MethodReturn,BIO *)"];
"1000525" [label="(Call,pkcs7_decrypt_rinfo(&ek, &eklen, ri, pkey) < 0)"];
"1000533" [label="(Literal,0)"];
"1000510" [label="(ControlStructure,if (pkcs7_decrypt_rinfo(&ek, &eklen, ri, pkey) < 0))"];
"1000524" [label="(ControlStructure,if (pkcs7_decrypt_rinfo(&ek, &eklen, ri, pkey) < 0))"];
"1000534" [label="(ControlStructure,goto err;)"];
"1000521" [label="(Call,ERR_clear_error())"];
"1000519" [label="(Literal,0)"];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000725"  [label="DDG: pkey"];
"1000112" -> "1000512"  [label="DDG: pkey"];
"1000112" -> "1000526"  [label="DDG: pkey"];
"1000512" -> "1000511"  [label="AST: "];
"1000512" -> "1000518"  [label="CFG: "];
"1000513" -> "1000512"  [label="AST: "];
"1000515" -> "1000512"  [label="AST: "];
"1000517" -> "1000512"  [label="AST: "];
"1000518" -> "1000512"  [label="AST: "];
"1000519" -> "1000512"  [label="CFG: "];
"1000512" -> "1000725"  [label="DDG: &ek"];
"1000512" -> "1000725"  [label="DDG: pkey"];
"1000512" -> "1000725"  [label="DDG: &eklen"];
"1000512" -> "1000725"  [label="DDG: ri"];
"1000512" -> "1000511"  [label="DDG: &ek"];
"1000512" -> "1000511"  [label="DDG: &eklen"];
"1000512" -> "1000511"  [label="DDG: ri"];
"1000512" -> "1000511"  [label="DDG: pkey"];
"1000505" -> "1000512"  [label="DDG: ri"];
"1000511" -> "1000510"  [label="AST: "];
"1000511" -> "1000519"  [label="CFG: "];
"1000519" -> "1000511"  [label="AST: "];
"1000520" -> "1000511"  [label="CFG: "];
"1000521" -> "1000511"  [label="CFG: "];
"1000511" -> "1000725"  [label="DDG: pkcs7_decrypt_rinfo(&ek, &eklen, ri, pkey) < 0"];
"1000511" -> "1000725"  [label="DDG: pkcs7_decrypt_rinfo(&ek, &eklen, ri, pkey)"];
"1000526" -> "1000525"  [label="AST: "];
"1000526" -> "1000532"  [label="CFG: "];
"1000527" -> "1000526"  [label="AST: "];
"1000529" -> "1000526"  [label="AST: "];
"1000531" -> "1000526"  [label="AST: "];
"1000532" -> "1000526"  [label="AST: "];
"1000533" -> "1000526"  [label="CFG: "];
"1000526" -> "1000725"  [label="DDG: ri"];
"1000526" -> "1000725"  [label="DDG: &eklen"];
"1000526" -> "1000725"  [label="DDG: &ek"];
"1000526" -> "1000725"  [label="DDG: pkey"];
"1000526" -> "1000525"  [label="DDG: &ek"];
"1000526" -> "1000525"  [label="DDG: &eklen"];
"1000526" -> "1000525"  [label="DDG: ri"];
"1000526" -> "1000525"  [label="DDG: pkey"];
"1000165" -> "1000526"  [label="DDG: ri"];
"1000481" -> "1000526"  [label="DDG: ri"];
"1000525" -> "1000524"  [label="AST: "];
"1000525" -> "1000533"  [label="CFG: "];
"1000533" -> "1000525"  [label="AST: "];
"1000534" -> "1000525"  [label="CFG: "];
"1000535" -> "1000525"  [label="CFG: "];
"1000525" -> "1000725"  [label="DDG: pkcs7_decrypt_rinfo(&ek, &eklen, ri, pkey) < 0"];
"1000525" -> "1000725"  [label="DDG: pkcs7_decrypt_rinfo(&ek, &eklen, ri, pkey)"];
}
