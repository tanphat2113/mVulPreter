digraph "0_mindrot_28652bca29046f62c7045e933e6b931de1d16737_0@pointer" {
"1000408" [label="(Call,sshbuf_dump(state->input, stderr))"];
"1000372" [label="(Call,sshbuf_ptr(state->input))"];
"1000334" [label="(Call,sshbuf_len(state->input))"];
"1000405" [label="(Call,fprintf(stderr, \"input: \n\"))"];
"1000413" [label="(Call,fprintf(stderr, \"incoming_packet: \n\"))"];
"1000416" [label="(Call,sshbuf_dump(state->incoming_packet, stderr))"];
"1000373" [label="(Call,state->input)"];
"1000415" [label="(Literal,\"incoming_packet: \n\")"];
"1000414" [label="(Identifier,stderr)"];
"1000437" [label="(Call,sshbuf_consume(state->input, block_size))"];
"1000386" [label="(Call,sshbuf_ptr(state->incoming_packet))"];
"1000407" [label="(Literal,\"input: \n\")"];
"1000408" [label="(Call,sshbuf_dump(state->input, stderr))"];
"1000404" [label="(Block,)"];
"1000338" [label="(Identifier,block_size)"];
"1000418" [label="(Identifier,state)"];
"1000335" [label="(Call,state->input)"];
"1000362" [label="(Call,cipher_crypt(state->receive_context,\n\t\t    state->p_send.seqnr, cp, sshbuf_ptr(state->input),\n\t\t    block_size, 0, 0))"];
"1000372" [label="(Call,sshbuf_ptr(state->input))"];
"1000413" [label="(Call,fprintf(stderr, \"incoming_packet: \n\"))"];
"1000334" [label="(Call,sshbuf_len(state->input))"];
"1000406" [label="(Identifier,stderr)"];
"1001000" [label="(MethodReturn,RET)"];
"1000416" [label="(Call,sshbuf_dump(state->incoming_packet, stderr))"];
"1000412" [label="(Identifier,stderr)"];
"1000417" [label="(Call,state->incoming_packet)"];
"1000420" [label="(Identifier,stderr)"];
"1000410" [label="(Identifier,state)"];
"1000409" [label="(Call,state->input)"];
"1000422" [label="(Literal,\"Bad packet length %u.\")"];
"1000405" [label="(Call,fprintf(stderr, \"input: \n\"))"];
"1000333" [label="(Call,sshbuf_len(state->input) < block_size)"];
"1000376" [label="(Identifier,block_size)"];
"1000408" -> "1000404"  [label="AST: "];
"1000408" -> "1000412"  [label="CFG: "];
"1000409" -> "1000408"  [label="AST: "];
"1000412" -> "1000408"  [label="AST: "];
"1000414" -> "1000408"  [label="CFG: "];
"1000408" -> "1001000"  [label="DDG: "];
"1000408" -> "1001000"  [label="DDG: "];
"1000372" -> "1000408"  [label="DDG: "];
"1000405" -> "1000408"  [label="DDG: "];
"1000408" -> "1000413"  [label="DDG: "];
"1000372" -> "1000362"  [label="AST: "];
"1000372" -> "1000373"  [label="CFG: "];
"1000373" -> "1000372"  [label="AST: "];
"1000376" -> "1000372"  [label="CFG: "];
"1000372" -> "1001000"  [label="DDG: "];
"1000372" -> "1000362"  [label="DDG: "];
"1000334" -> "1000372"  [label="DDG: "];
"1000372" -> "1000437"  [label="DDG: "];
"1000334" -> "1000333"  [label="AST: "];
"1000334" -> "1000335"  [label="CFG: "];
"1000335" -> "1000334"  [label="AST: "];
"1000338" -> "1000334"  [label="CFG: "];
"1000334" -> "1001000"  [label="DDG: "];
"1000334" -> "1000333"  [label="DDG: "];
"1000405" -> "1000404"  [label="AST: "];
"1000405" -> "1000407"  [label="CFG: "];
"1000406" -> "1000405"  [label="AST: "];
"1000407" -> "1000405"  [label="AST: "];
"1000410" -> "1000405"  [label="CFG: "];
"1000405" -> "1001000"  [label="DDG: "];
"1000413" -> "1000404"  [label="AST: "];
"1000413" -> "1000415"  [label="CFG: "];
"1000414" -> "1000413"  [label="AST: "];
"1000415" -> "1000413"  [label="AST: "];
"1000418" -> "1000413"  [label="CFG: "];
"1000413" -> "1001000"  [label="DDG: "];
"1000413" -> "1000416"  [label="DDG: "];
"1000416" -> "1000404"  [label="AST: "];
"1000416" -> "1000420"  [label="CFG: "];
"1000417" -> "1000416"  [label="AST: "];
"1000420" -> "1000416"  [label="AST: "];
"1000422" -> "1000416"  [label="CFG: "];
"1000416" -> "1001000"  [label="DDG: "];
"1000416" -> "1001000"  [label="DDG: "];
"1000416" -> "1001000"  [label="DDG: "];
"1000386" -> "1000416"  [label="DDG: "];
}
