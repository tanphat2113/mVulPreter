digraph "0_linux_f3d3342602f8bcbf37d7c46641cb9bca7618eb1c_24@pointer" {
"1000316" [label="(Call,sk->sk_type == SOCK_RAW)"];
"1000311" [label="(Call,sk->sk_type == SOCK_DGRAM)"];
"1000305" [label="(Call,sk->sk_type == SOCK_STREAM)"];
"1000231" [label="(Call,sk->sk_type == SOCK_DGRAM)"];
"1000310" [label="(Call,sk->sk_type == SOCK_DGRAM ||\n\t\t    sk->sk_type == SOCK_RAW)"];
"1000304" [label="(Call,sk->sk_type == SOCK_STREAM ||\n\t\t    sk->sk_type == SOCK_DGRAM ||\n\t\t    sk->sk_type == SOCK_RAW)"];
"1000342" [label="(Call,sk->sk_type == SOCK_SEQPACKET)"];
"1000341" [label="(Call,sk->sk_type == SOCK_SEQPACKET && (flags & MSG_TRUNC))"];
"1000315" [label="(Identifier,SOCK_DGRAM)"];
"1000346" [label="(Identifier,SOCK_SEQPACKET)"];
"1000354" [label="(Identifier,copied)"];
"1000235" [label="(Identifier,SOCK_DGRAM)"];
"1000306" [label="(Call,sk->sk_type)"];
"1000309" [label="(Identifier,SOCK_STREAM)"];
"1000305" [label="(Call,sk->sk_type == SOCK_STREAM)"];
"1000347" [label="(Call,flags & MSG_TRUNC)"];
"1000343" [label="(Call,sk->sk_type)"];
"1000237" [label="(Identifier,msg)"];
"1000304" [label="(Call,sk->sk_type == SOCK_STREAM ||\n\t\t    sk->sk_type == SOCK_DGRAM ||\n\t\t    sk->sk_type == SOCK_RAW)"];
"1000230" [label="(Call,sk->sk_type == SOCK_DGRAM && msg->msg_name)"];
"1000318" [label="(Identifier,sk)"];
"1000232" [label="(Call,sk->sk_type)"];
"1000342" [label="(Call,sk->sk_type == SOCK_SEQPACKET)"];
"1000348" [label="(Identifier,flags)"];
"1000313" [label="(Identifier,sk)"];
"1000303" [label="(ControlStructure,if (sk->sk_type == SOCK_STREAM ||\n\t\t    sk->sk_type == SOCK_DGRAM ||\n\t\t    sk->sk_type == SOCK_RAW))"];
"1000311" [label="(Call,sk->sk_type == SOCK_DGRAM)"];
"1000341" [label="(Call,sk->sk_type == SOCK_SEQPACKET && (flags & MSG_TRUNC))"];
"1000351" [label="(Identifier,copied)"];
"1000310" [label="(Call,sk->sk_type == SOCK_DGRAM ||\n\t\t    sk->sk_type == SOCK_RAW)"];
"1000320" [label="(Identifier,SOCK_RAW)"];
"1000323" [label="(Identifier,skb)"];
"1000338" [label="(Identifier,skb)"];
"1000231" [label="(Call,sk->sk_type == SOCK_DGRAM)"];
"1000316" [label="(Call,sk->sk_type == SOCK_RAW)"];
"1000340" [label="(ControlStructure,if (sk->sk_type == SOCK_SEQPACKET && (flags & MSG_TRUNC)))"];
"1000317" [label="(Call,sk->sk_type)"];
"1000355" [label="(MethodReturn,static int)"];
"1000312" [label="(Call,sk->sk_type)"];
"1000316" -> "1000310"  [label="AST: "];
"1000316" -> "1000320"  [label="CFG: "];
"1000317" -> "1000316"  [label="AST: "];
"1000320" -> "1000316"  [label="AST: "];
"1000310" -> "1000316"  [label="CFG: "];
"1000316" -> "1000355"  [label="DDG: SOCK_RAW"];
"1000316" -> "1000310"  [label="DDG: sk->sk_type"];
"1000316" -> "1000310"  [label="DDG: SOCK_RAW"];
"1000311" -> "1000316"  [label="DDG: sk->sk_type"];
"1000316" -> "1000342"  [label="DDG: sk->sk_type"];
"1000311" -> "1000310"  [label="AST: "];
"1000311" -> "1000315"  [label="CFG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000315" -> "1000311"  [label="AST: "];
"1000318" -> "1000311"  [label="CFG: "];
"1000310" -> "1000311"  [label="CFG: "];
"1000311" -> "1000355"  [label="DDG: SOCK_DGRAM"];
"1000311" -> "1000310"  [label="DDG: sk->sk_type"];
"1000311" -> "1000310"  [label="DDG: SOCK_DGRAM"];
"1000305" -> "1000311"  [label="DDG: sk->sk_type"];
"1000231" -> "1000311"  [label="DDG: SOCK_DGRAM"];
"1000311" -> "1000342"  [label="DDG: sk->sk_type"];
"1000305" -> "1000304"  [label="AST: "];
"1000305" -> "1000309"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000309" -> "1000305"  [label="AST: "];
"1000313" -> "1000305"  [label="CFG: "];
"1000304" -> "1000305"  [label="CFG: "];
"1000305" -> "1000355"  [label="DDG: SOCK_STREAM"];
"1000305" -> "1000304"  [label="DDG: sk->sk_type"];
"1000305" -> "1000304"  [label="DDG: SOCK_STREAM"];
"1000231" -> "1000305"  [label="DDG: sk->sk_type"];
"1000305" -> "1000342"  [label="DDG: sk->sk_type"];
"1000231" -> "1000230"  [label="AST: "];
"1000231" -> "1000235"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000235" -> "1000231"  [label="AST: "];
"1000237" -> "1000231"  [label="CFG: "];
"1000230" -> "1000231"  [label="CFG: "];
"1000231" -> "1000355"  [label="DDG: SOCK_DGRAM"];
"1000231" -> "1000230"  [label="DDG: sk->sk_type"];
"1000231" -> "1000230"  [label="DDG: SOCK_DGRAM"];
"1000231" -> "1000342"  [label="DDG: sk->sk_type"];
"1000310" -> "1000304"  [label="AST: "];
"1000304" -> "1000310"  [label="CFG: "];
"1000310" -> "1000355"  [label="DDG: sk->sk_type == SOCK_RAW"];
"1000310" -> "1000355"  [label="DDG: sk->sk_type == SOCK_DGRAM"];
"1000310" -> "1000304"  [label="DDG: sk->sk_type == SOCK_DGRAM"];
"1000310" -> "1000304"  [label="DDG: sk->sk_type == SOCK_RAW"];
"1000304" -> "1000303"  [label="AST: "];
"1000323" -> "1000304"  [label="CFG: "];
"1000338" -> "1000304"  [label="CFG: "];
"1000304" -> "1000355"  [label="DDG: sk->sk_type == SOCK_DGRAM ||\n\t\t    sk->sk_type == SOCK_RAW"];
"1000304" -> "1000355"  [label="DDG: sk->sk_type == SOCK_STREAM ||\n\t\t    sk->sk_type == SOCK_DGRAM ||\n\t\t    sk->sk_type == SOCK_RAW"];
"1000304" -> "1000355"  [label="DDG: sk->sk_type == SOCK_STREAM"];
"1000342" -> "1000341"  [label="AST: "];
"1000342" -> "1000346"  [label="CFG: "];
"1000343" -> "1000342"  [label="AST: "];
"1000346" -> "1000342"  [label="AST: "];
"1000348" -> "1000342"  [label="CFG: "];
"1000341" -> "1000342"  [label="CFG: "];
"1000342" -> "1000355"  [label="DDG: sk->sk_type"];
"1000342" -> "1000355"  [label="DDG: SOCK_SEQPACKET"];
"1000342" -> "1000341"  [label="DDG: sk->sk_type"];
"1000342" -> "1000341"  [label="DDG: SOCK_SEQPACKET"];
"1000341" -> "1000340"  [label="AST: "];
"1000341" -> "1000347"  [label="CFG: "];
"1000347" -> "1000341"  [label="AST: "];
"1000351" -> "1000341"  [label="CFG: "];
"1000354" -> "1000341"  [label="CFG: "];
"1000341" -> "1000355"  [label="DDG: flags & MSG_TRUNC"];
"1000341" -> "1000355"  [label="DDG: sk->sk_type == SOCK_SEQPACKET"];
"1000341" -> "1000355"  [label="DDG: sk->sk_type == SOCK_SEQPACKET && (flags & MSG_TRUNC)"];
"1000347" -> "1000341"  [label="DDG: flags"];
"1000347" -> "1000341"  [label="DDG: MSG_TRUNC"];
}
