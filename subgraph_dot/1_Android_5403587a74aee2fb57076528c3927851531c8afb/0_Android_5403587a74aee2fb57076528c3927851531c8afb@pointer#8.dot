digraph "0_Android_5403587a74aee2fb57076528c3927851531c8afb@pointer" {
"1000515" [label="(Call,parseNALSize(src))"];
"1000505" [label="(Call,*src =\n (const uint8_t *)mBuffer->data() + mBuffer->range_offset())"];
"1000508" [label="(Call,(const uint8_t *)mBuffer->data())"];
"1000513" [label="(Call,nal_size = parseNALSize(src))"];
"1000520" [label="(Call,SIZE_MAX - nal_size)"];
"1000518" [label="(Call,mNALLengthSize > SIZE_MAX - nal_size)"];
"1000528" [label="(Call,mBuffer->range_length() - mNALLengthSize)"];
"1000527" [label="(Call,mBuffer->range_length() - mNALLengthSize < nal_size)"];
"1000549" [label="(Call,clone->set_range(mBuffer->range_offset() + mNALLengthSize, nal_size))"];
"1000558" [label="(Call,mBuffer->set_range(\n                mBuffer->range_offset() + mNALLengthSize + nal_size,\n                mBuffer->range_length() - mNALLengthSize - nal_size))"];
"1000559" [label="(Call,mBuffer->range_offset() + mNALLengthSize + nal_size)"];
"1000561" [label="(Call,mNALLengthSize + nal_size)"];
"1000566" [label="(Call,mNALLengthSize - nal_size)"];
"1000564" [label="(Call,mBuffer->range_length() - mNALLengthSize - nal_size)"];
"1000550" [label="(Call,mBuffer->range_offset() + mNALLengthSize)"];
"1000530" [label="(Identifier,mNALLengthSize)"];
"1000529" [label="(Call,mBuffer->range_length())"];
"1000534" [label="(Literal,\"incomplete NAL unit.\")"];
"1000562" [label="(Identifier,mNALLengthSize)"];
"1000552" [label="(Identifier,mNALLengthSize)"];
"1000520" [label="(Call,SIZE_MAX - nal_size)"];
"1000526" [label="(ControlStructure,if (mBuffer->range_length() - mNALLengthSize < nal_size))"];
"1000510" [label="(Call,mBuffer->data())"];
"1000516" [label="(Identifier,src)"];
"1000519" [label="(Identifier,mNALLengthSize)"];
"1000559" [label="(Call,mBuffer->range_offset() + mNALLengthSize + nal_size)"];
"1000563" [label="(Identifier,nal_size)"];
"1000531" [label="(Identifier,nal_size)"];
"1000558" [label="(Call,mBuffer->set_range(\n                mBuffer->range_offset() + mNALLengthSize + nal_size,\n                mBuffer->range_length() - mNALLengthSize - nal_size))"];
"1000518" [label="(Call,mNALLengthSize > SIZE_MAX - nal_size)"];
"1000550" [label="(Call,mBuffer->range_offset() + mNALLengthSize)"];
"1000515" [label="(Call,parseNALSize(src))"];
"1000511" [label="(Call,mBuffer->range_offset())"];
"1000527" [label="(Call,mBuffer->range_length() - mNALLengthSize < nal_size)"];
"1000556" [label="(Identifier,mBuffer)"];
"1000514" [label="(Identifier,nal_size)"];
"1000566" [label="(Call,mNALLengthSize - nal_size)"];
"1000568" [label="(Identifier,nal_size)"];
"1000522" [label="(Identifier,nal_size)"];
"1000565" [label="(Call,mBuffer->range_length())"];
"1000564" [label="(Call,mBuffer->range_length() - mNALLengthSize - nal_size)"];
"1000525" [label="(Literal,\"b/24441553, b/24445122\")"];
"1000521" [label="(Identifier,SIZE_MAX)"];
"1000517" [label="(ControlStructure,if (mNALLengthSize > SIZE_MAX - nal_size))"];
"1000528" [label="(Call,mBuffer->range_length() - mNALLengthSize)"];
"1000571" [label="(Call,mBuffer->range_length())"];
"1000560" [label="(Call,mBuffer->range_offset())"];
"1000549" [label="(Call,clone->set_range(mBuffer->range_offset() + mNALLengthSize, nal_size))"];
"1000507" [label="(Call,(const uint8_t *)mBuffer->data() + mBuffer->range_offset())"];
"1000506" [label="(Identifier,src)"];
"1000551" [label="(Call,mBuffer->range_offset())"];
"1000513" [label="(Call,nal_size = parseNALSize(src))"];
"1000501" [label="(Call,mBuffer->range_length() >= mNALLengthSize)"];
"1000561" [label="(Call,mNALLengthSize + nal_size)"];
"1000508" [label="(Call,(const uint8_t *)mBuffer->data())"];
"1000409" [label="(Block,)"];
"1000553" [label="(Identifier,nal_size)"];
"1000567" [label="(Identifier,mNALLengthSize)"];
"1000912" [label="(MethodReturn,status_t)"];
"1000505" [label="(Call,*src =\n (const uint8_t *)mBuffer->data() + mBuffer->range_offset())"];
"1000543" [label="(Identifier,clone)"];
"1000515" -> "1000513"  [label="AST: "];
"1000515" -> "1000516"  [label="CFG: "];
"1000516" -> "1000515"  [label="AST: "];
"1000513" -> "1000515"  [label="CFG: "];
"1000515" -> "1000912"  [label="DDG: src"];
"1000515" -> "1000513"  [label="DDG: src"];
"1000505" -> "1000515"  [label="DDG: src"];
"1000505" -> "1000409"  [label="AST: "];
"1000505" -> "1000507"  [label="CFG: "];
"1000506" -> "1000505"  [label="AST: "];
"1000507" -> "1000505"  [label="AST: "];
"1000514" -> "1000505"  [label="CFG: "];
"1000505" -> "1000912"  [label="DDG: (const uint8_t *)mBuffer->data() + mBuffer->range_offset()"];
"1000508" -> "1000505"  [label="DDG: mBuffer->data()"];
"1000508" -> "1000507"  [label="AST: "];
"1000508" -> "1000510"  [label="CFG: "];
"1000509" -> "1000508"  [label="AST: "];
"1000510" -> "1000508"  [label="AST: "];
"1000511" -> "1000508"  [label="CFG: "];
"1000508" -> "1000912"  [label="DDG: mBuffer->data()"];
"1000508" -> "1000507"  [label="DDG: mBuffer->data()"];
"1000513" -> "1000409"  [label="AST: "];
"1000514" -> "1000513"  [label="AST: "];
"1000519" -> "1000513"  [label="CFG: "];
"1000513" -> "1000912"  [label="DDG: parseNALSize(src)"];
"1000513" -> "1000520"  [label="DDG: nal_size"];
"1000520" -> "1000518"  [label="AST: "];
"1000520" -> "1000522"  [label="CFG: "];
"1000521" -> "1000520"  [label="AST: "];
"1000522" -> "1000520"  [label="AST: "];
"1000518" -> "1000520"  [label="CFG: "];
"1000520" -> "1000912"  [label="DDG: SIZE_MAX"];
"1000520" -> "1000518"  [label="DDG: SIZE_MAX"];
"1000520" -> "1000518"  [label="DDG: nal_size"];
"1000520" -> "1000527"  [label="DDG: nal_size"];
"1000518" -> "1000517"  [label="AST: "];
"1000519" -> "1000518"  [label="AST: "];
"1000525" -> "1000518"  [label="CFG: "];
"1000529" -> "1000518"  [label="CFG: "];
"1000518" -> "1000912"  [label="DDG: SIZE_MAX - nal_size"];
"1000518" -> "1000912"  [label="DDG: mNALLengthSize > SIZE_MAX - nal_size"];
"1000501" -> "1000518"  [label="DDG: mNALLengthSize"];
"1000518" -> "1000528"  [label="DDG: mNALLengthSize"];
"1000528" -> "1000527"  [label="AST: "];
"1000528" -> "1000530"  [label="CFG: "];
"1000529" -> "1000528"  [label="AST: "];
"1000530" -> "1000528"  [label="AST: "];
"1000531" -> "1000528"  [label="CFG: "];
"1000528" -> "1000912"  [label="DDG: mNALLengthSize"];
"1000528" -> "1000912"  [label="DDG: mBuffer->range_length()"];
"1000528" -> "1000527"  [label="DDG: mBuffer->range_length()"];
"1000528" -> "1000527"  [label="DDG: mNALLengthSize"];
"1000528" -> "1000549"  [label="DDG: mNALLengthSize"];
"1000528" -> "1000550"  [label="DDG: mNALLengthSize"];
"1000528" -> "1000558"  [label="DDG: mNALLengthSize"];
"1000528" -> "1000559"  [label="DDG: mNALLengthSize"];
"1000528" -> "1000561"  [label="DDG: mNALLengthSize"];
"1000528" -> "1000566"  [label="DDG: mNALLengthSize"];
"1000527" -> "1000526"  [label="AST: "];
"1000527" -> "1000531"  [label="CFG: "];
"1000531" -> "1000527"  [label="AST: "];
"1000534" -> "1000527"  [label="CFG: "];
"1000543" -> "1000527"  [label="CFG: "];
"1000527" -> "1000912"  [label="DDG: mBuffer->range_length() - mNALLengthSize"];
"1000527" -> "1000912"  [label="DDG: nal_size"];
"1000527" -> "1000912"  [label="DDG: mBuffer->range_length() - mNALLengthSize < nal_size"];
"1000527" -> "1000549"  [label="DDG: nal_size"];
"1000549" -> "1000409"  [label="AST: "];
"1000549" -> "1000553"  [label="CFG: "];
"1000550" -> "1000549"  [label="AST: "];
"1000553" -> "1000549"  [label="AST: "];
"1000556" -> "1000549"  [label="CFG: "];
"1000549" -> "1000912"  [label="DDG: mBuffer->range_offset() + mNALLengthSize"];
"1000549" -> "1000912"  [label="DDG: clone->set_range(mBuffer->range_offset() + mNALLengthSize, nal_size)"];
"1000549" -> "1000558"  [label="DDG: nal_size"];
"1000549" -> "1000559"  [label="DDG: nal_size"];
"1000549" -> "1000561"  [label="DDG: nal_size"];
"1000549" -> "1000566"  [label="DDG: nal_size"];
"1000558" -> "1000409"  [label="AST: "];
"1000558" -> "1000564"  [label="CFG: "];
"1000559" -> "1000558"  [label="AST: "];
"1000564" -> "1000558"  [label="AST: "];
"1000571" -> "1000558"  [label="CFG: "];
"1000558" -> "1000912"  [label="DDG: mBuffer->set_range(\n                mBuffer->range_offset() + mNALLengthSize + nal_size,\n                mBuffer->range_length() - mNALLengthSize - nal_size)"];
"1000558" -> "1000912"  [label="DDG: mBuffer->range_offset() + mNALLengthSize + nal_size"];
"1000558" -> "1000912"  [label="DDG: mBuffer->range_length() - mNALLengthSize - nal_size"];
"1000564" -> "1000558"  [label="DDG: mBuffer->range_length()"];
"1000564" -> "1000558"  [label="DDG: mNALLengthSize - nal_size"];
"1000559" -> "1000561"  [label="CFG: "];
"1000560" -> "1000559"  [label="AST: "];
"1000561" -> "1000559"  [label="AST: "];
"1000565" -> "1000559"  [label="CFG: "];
"1000559" -> "1000912"  [label="DDG: mBuffer->range_offset()"];
"1000559" -> "1000912"  [label="DDG: mNALLengthSize + nal_size"];
"1000561" -> "1000563"  [label="CFG: "];
"1000562" -> "1000561"  [label="AST: "];
"1000563" -> "1000561"  [label="AST: "];
"1000566" -> "1000564"  [label="AST: "];
"1000566" -> "1000568"  [label="CFG: "];
"1000567" -> "1000566"  [label="AST: "];
"1000568" -> "1000566"  [label="AST: "];
"1000564" -> "1000566"  [label="CFG: "];
"1000566" -> "1000912"  [label="DDG: nal_size"];
"1000566" -> "1000912"  [label="DDG: mNALLengthSize"];
"1000566" -> "1000564"  [label="DDG: mNALLengthSize"];
"1000566" -> "1000564"  [label="DDG: nal_size"];
"1000565" -> "1000564"  [label="AST: "];
"1000564" -> "1000912"  [label="DDG: mNALLengthSize - nal_size"];
"1000550" -> "1000552"  [label="CFG: "];
"1000551" -> "1000550"  [label="AST: "];
"1000552" -> "1000550"  [label="AST: "];
"1000553" -> "1000550"  [label="CFG: "];
}
