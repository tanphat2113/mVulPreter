digraph "0_savannah_f290f48a621867084884bfff87f8093c15195e6a@array" {
"1001971" [label="(Call,st[i].st_size == 0)"];
"1001967" [label="(Call,i == NONE || st[i].st_size == 0)"];
"1001955" [label="(Call,maybe_reverse (p_name[i == NONE ? i0 : i], i == NONE,\n\t\t\t\t  i == NONE || st[i].st_size == 0))"];
"1001954" [label="(Call,maybe_reverse (p_name[i == NONE ? i0 : i], i == NONE,\n\t\t\t\t  i == NONE || st[i].st_size == 0)\n\t\t&& i == NONE)"];
"1001940" [label="(Call,(i == NONE || (st[i].st_mode & S_IFMT) == file_type)\n\t\t&& maybe_reverse (p_name[i == NONE ? i0 : i], i == NONE,\n\t\t\t\t  i == NONE || st[i].st_size == 0)\n\t\t&& i == NONE)"];
"1001936" [label="(Call,i0 != NONE\n\t\t&& (i == NONE || (st[i].st_mode & S_IFMT) == file_type)\n\t\t&& maybe_reverse (p_name[i == NONE ? i0 : i], i == NONE,\n\t\t\t\t  i == NONE || st[i].st_size == 0)\n\t\t&& i == NONE)"];
"1002063" [label="(Call,best_name (p_name, distance_from_minimum))"];
"1002061" [label="(Call,i = best_name (p_name, distance_from_minimum))"];
"1002077" [label="(Call,i == OLD)"];
"1002076" [label="(Call,i == OLD || i == NEW)"];
"1002075" [label="(Call,(i == OLD || i == NEW) &&\n\t      p_name[reverse] && p_name[! reverse] &&\n\t      name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse]))"];
"1002074" [label="(Call,! ((i == OLD || i == NEW) &&\n\t      p_name[reverse] && p_name[! reverse] &&\n\t      name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse])))"];
"1002071" [label="(Call,! inname\n \t&& ! ((i == OLD || i == NEW) &&\n\t      p_name[reverse] && p_name[! reverse] &&\n\t      name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse])))"];
"1002067" [label="(Call,(pch_rename () || pch_copy ())\n \t&& ! inname\n \t&& ! ((i == OLD || i == NEW) &&\n\t      p_name[reverse] && p_name[! reverse] &&\n\t      name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse])))"];
"1002080" [label="(Call,i == NEW)"];
"1002110" [label="(Call,i == NONE)"];
"1002083" [label="(Call,p_name[reverse] && p_name[! reverse] &&\n\t      name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse]))"];
"1002087" [label="(Call,p_name[! reverse] &&\n\t      name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse]))"];
"1002093" [label="(Call,name_is_valid (p_name[reverse]))"];
"1002092" [label="(Call,name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse]))"];
"1002097" [label="(Call,name_is_valid (p_name[! reverse]))"];
"1002152" [label="(Call,xstrdup (p_name[i]))"];
"1002150" [label="(Call,inname = xstrdup (p_name[i]))"];
"1002166" [label="(Call,instat = st[i])"];
"1001982" [label="(Identifier,i)"];
"1000187" [label="(Call,p_name[i] = 0)"];
"1002153" [label="(Call,p_name[i])"];
"1002110" [label="(Call,i == NONE)"];
"1001971" [label="(Call,st[i].st_size == 0)"];
"1002166" [label="(Call,instat = st[i])"];
"1001585" [label="(Call,! p_name[INDEX])"];
"1002111" [label="(Identifier,i)"];
"1002080" [label="(Call,i == NEW)"];
"1002099" [label="(Identifier,p_name)"];
"1002079" [label="(Identifier,OLD)"];
"1001721" [label="(Call,i <= INDEX)"];
"1002064" [label="(Identifier,p_name)"];
"1002084" [label="(Call,p_name[reverse])"];
"1001395" [label="(Call,p_name[OLD] || ! p_timestamp[OLD].tv_sec)"];
"1001986" [label="(Call,i == NONE)"];
"1002063" [label="(Call,best_name (p_name, distance_from_minimum))"];
"1001956" [label="(Call,p_name[i == NONE ? i0 : i])"];
"1002167" [label="(Identifier,instat)"];
"1001978" [label="(Call,i == NONE)"];
"1001771" [label="(Call,stat_file (p_name[i], &st[i]))"];
"1002083" [label="(Call,p_name[reverse] && p_name[! reverse] &&\n\t      name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse]))"];
"1002092" [label="(Call,name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse]))"];
"1002152" [label="(Call,xstrdup (p_name[i]))"];
"1001733" [label="(Call,i0 != NONE)"];
"1002088" [label="(Call,p_name[! reverse])"];
"1002062" [label="(Identifier,i)"];
"1001405" [label="(Call,p_name[NEW] || ! p_timestamp[NEW].tv_sec)"];
"1000834" [label="(Call,i <= NEW)"];
"1001977" [label="(Literal,0)"];
"1001802" [label="(Call,name_is_valid (p_name[i]))"];
"1001935" [label="(ControlStructure,if (i0 != NONE\n\t\t&& (i == NONE || (st[i].st_mode & S_IFMT) == file_type)\n\t\t&& maybe_reverse (p_name[i == NONE ? i0 : i], i == NONE,\n\t\t\t\t  i == NONE || st[i].st_size == 0)\n\t\t&& i == NONE))"];
"1001936" [label="(Call,i0 != NONE\n\t\t&& (i == NONE || (st[i].st_mode & S_IFMT) == file_type)\n\t\t&& maybe_reverse (p_name[i == NONE ? i0 : i], i == NONE,\n\t\t\t\t  i == NONE || st[i].st_size == 0)\n\t\t&& i == NONE)"];
"1002078" [label="(Identifier,i)"];
"1001946" [label="(Call,st[i].st_mode & S_IFMT)"];
"1001696" [label="(Call,(p_name[OLD] || p_name[NEW]) && p_name[INDEX])"];
"1002173" [label="(MethodReturn,RET)"];
"1001940" [label="(Call,(i == NONE || (st[i].st_mode & S_IFMT) == file_type)\n\t\t&& maybe_reverse (p_name[i == NONE ? i0 : i], i == NONE,\n\t\t\t\t  i == NONE || st[i].st_size == 0)\n\t\t&& i == NONE)"];
"1001979" [label="(Identifier,i)"];
"1002052" [label="(Call,distance_from_minimum[i] = newdirs[i] - newdirs_min)"];
"1000813" [label="(Call,p_name[NEW] = parse_name (u, strippath, &u))"];
"1001964" [label="(Call,i == NONE)"];
"1002151" [label="(Identifier,inname)"];
"1002075" [label="(Call,(i == OLD || i == NEW) &&\n\t      p_name[reverse] && p_name[! reverse] &&\n\t      name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse]))"];
"1000844" [label="(Call,p_name[i] = 0)"];
"1001697" [label="(Call,p_name[OLD] || p_name[NEW])"];
"1002072" [label="(Call,! inname)"];
"1001941" [label="(Call,i == NONE || (st[i].st_mode & S_IFMT) == file_type)"];
"1000777" [label="(Call,i <= NEW)"];
"1001416" [label="(Call,! p_name[INDEX])"];
"1001992" [label="(Block,)"];
"1002067" [label="(Call,(pch_rename () || pch_copy ())\n \t&& ! inname\n \t&& ! ((i == OLD || i == NEW) &&\n\t      p_name[reverse] && p_name[! reverse] &&\n\t      name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse])))"];
"1002061" [label="(Call,i = best_name (p_name, distance_from_minimum))"];
"1002066" [label="(ControlStructure,if ((pch_rename () || pch_copy ())\n \t&& ! inname\n \t&& ! ((i == OLD || i == NEW) &&\n\t      p_name[reverse] && p_name[! reverse] &&\n\t      name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse]))))"];
"1002115" [label="(Identifier,inname)"];
"1001876" [label="(Call,version_controller\n\t\t\t        (p_name[i], readonly, (struct stat *) 0,\n\t\t\t\t &getbuf, &diffbuf))"];
"1002157" [label="(Identifier,inerrno)"];
"1001758" [label="(Call,st[i] = st[i0])"];
"1002172" [label="(Identifier,retval)"];
"1000795" [label="(Call,p_name[OLD] = parse_name (s + 11, strippath, &u))"];
"1001681" [label="(Call,i = NONE)"];
"1001816" [label="(Call,best_name (p_name, stat_errno))"];
"1001899" [label="(Call,version_get (p_name[i], cs, false, readonly,\n\t\t\t\t\t       getbuf, &st[i]))"];
"1002074" [label="(Call,! ((i == OLD || i == NEW) &&\n\t      p_name[reverse] && p_name[! reverse] &&\n\t      name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse])))"];
"1001955" [label="(Call,maybe_reverse (p_name[i == NONE ? i0 : i], i == NONE,\n\t\t\t\t  i == NONE || st[i].st_size == 0))"];
"1002112" [label="(Identifier,NONE)"];
"1002077" [label="(Call,i == OLD)"];
"1002094" [label="(Call,p_name[reverse])"];
"1002085" [label="(Identifier,p_name)"];
"1002109" [label="(ControlStructure,if (i == NONE))"];
"1001987" [label="(Identifier,i)"];
"1001972" [label="(Call,st[i].st_size)"];
"1002093" [label="(Call,name_is_valid (p_name[reverse]))"];
"1000787" [label="(Call,p_name[i] = 0)"];
"1002071" [label="(Call,! inname\n \t&& ! ((i == OLD || i == NEW) &&\n\t      p_name[reverse] && p_name[! reverse] &&\n\t      name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse])))"];
"1001281" [label="(Call,p_name[NEW] = t)"];
"1002150" [label="(Call,inname = xstrdup (p_name[i]))"];
"1002097" [label="(Call,name_is_valid (p_name[! reverse]))"];
"1002149" [label="(Block,)"];
"1001968" [label="(Call,i == NONE)"];
"1002069" [label="(Call,pch_rename ())"];
"1002168" [label="(Call,st[i])"];
"1002065" [label="(Identifier,distance_from_minimum)"];
"1002023" [label="(Call,prefix_components (p_name[i], true))"];
"1001712" [label="(Call,p_name[INDEX] = 0)"];
"1002068" [label="(Call,pch_rename () || pch_copy ())"];
"1002082" [label="(Identifier,NEW)"];
"1002076" [label="(Call,i == OLD || i == NEW)"];
"1001967" [label="(Call,i == NONE || st[i].st_size == 0)"];
"1002081" [label="(Identifier,i)"];
"1001954" [label="(Call,maybe_reverse (p_name[i == NONE ? i0 : i], i == NONE,\n\t\t\t\t  i == NONE || st[i].st_size == 0)\n\t\t&& i == NONE)"];
"1001564" [label="(Call,p_name[OLD] || ! p_timestamp[OLD].tv_sec)"];
"1000260" [label="(Call,i <= NEW)"];
"1002087" [label="(Call,p_name[! reverse] &&\n\t      name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse]))"];
"1001574" [label="(Call,p_name[NEW] || ! p_timestamp[NEW].tv_sec)"];
"1002098" [label="(Call,p_name[! reverse])"];
"1001937" [label="(Call,i0 != NONE)"];
"1002104" [label="(Literal,\"Cannot %s file without two valid file names\n\")"];
"1001971" -> "1001967"  [label="AST: "];
"1001971" -> "1001977"  [label="CFG: "];
"1001972" -> "1001971"  [label="AST: "];
"1001977" -> "1001971"  [label="AST: "];
"1001967" -> "1001971"  [label="CFG: "];
"1001971" -> "1002173"  [label="DDG: st[i].st_size"];
"1001971" -> "1001967"  [label="DDG: st[i].st_size"];
"1001971" -> "1001967"  [label="DDG: 0"];
"1001971" -> "1002166"  [label="DDG: st[i].st_size"];
"1001967" -> "1001955"  [label="AST: "];
"1001967" -> "1001968"  [label="CFG: "];
"1001968" -> "1001967"  [label="AST: "];
"1001955" -> "1001967"  [label="CFG: "];
"1001967" -> "1002173"  [label="DDG: st[i].st_size == 0"];
"1001967" -> "1001955"  [label="DDG: i == NONE"];
"1001967" -> "1001955"  [label="DDG: st[i].st_size == 0"];
"1001968" -> "1001967"  [label="DDG: i"];
"1001968" -> "1001967"  [label="DDG: NONE"];
"1001955" -> "1001954"  [label="AST: "];
"1001956" -> "1001955"  [label="AST: "];
"1001964" -> "1001955"  [label="AST: "];
"1001979" -> "1001955"  [label="CFG: "];
"1001954" -> "1001955"  [label="CFG: "];
"1001955" -> "1002173"  [label="DDG: i == NONE || st[i].st_size == 0"];
"1001955" -> "1002173"  [label="DDG: p_name[i == NONE ? i0 : i]"];
"1001955" -> "1001954"  [label="DDG: p_name[i == NONE ? i0 : i]"];
"1001955" -> "1001954"  [label="DDG: i == NONE"];
"1001955" -> "1001954"  [label="DDG: i == NONE || st[i].st_size == 0"];
"1001816" -> "1001955"  [label="DDG: p_name"];
"1001964" -> "1001955"  [label="DDG: i"];
"1001964" -> "1001955"  [label="DDG: NONE"];
"1001955" -> "1002063"  [label="DDG: p_name[i == NONE ? i0 : i]"];
"1001954" -> "1001940"  [label="AST: "];
"1001954" -> "1001978"  [label="CFG: "];
"1001978" -> "1001954"  [label="AST: "];
"1001940" -> "1001954"  [label="CFG: "];
"1001954" -> "1002173"  [label="DDG: maybe_reverse (p_name[i == NONE ? i0 : i], i == NONE,\n\t\t\t\t  i == NONE || st[i].st_size == 0)"];
"1001954" -> "1001940"  [label="DDG: maybe_reverse (p_name[i == NONE ? i0 : i], i == NONE,\n\t\t\t\t  i == NONE || st[i].st_size == 0)"];
"1001954" -> "1001940"  [label="DDG: i == NONE"];
"1001978" -> "1001954"  [label="DDG: i"];
"1001978" -> "1001954"  [label="DDG: NONE"];
"1001940" -> "1001936"  [label="AST: "];
"1001940" -> "1001941"  [label="CFG: "];
"1001941" -> "1001940"  [label="AST: "];
"1001936" -> "1001940"  [label="CFG: "];
"1001940" -> "1002173"  [label="DDG: maybe_reverse (p_name[i == NONE ? i0 : i], i == NONE,\n\t\t\t\t  i == NONE || st[i].st_size == 0)\n\t\t&& i == NONE"];
"1001940" -> "1002173"  [label="DDG: i == NONE || (st[i].st_mode & S_IFMT) == file_type"];
"1001940" -> "1001936"  [label="DDG: i == NONE || (st[i].st_mode & S_IFMT) == file_type"];
"1001940" -> "1001936"  [label="DDG: maybe_reverse (p_name[i == NONE ? i0 : i], i == NONE,\n\t\t\t\t  i == NONE || st[i].st_size == 0)\n\t\t&& i == NONE"];
"1001941" -> "1001940"  [label="DDG: i == NONE"];
"1001941" -> "1001940"  [label="DDG: (st[i].st_mode & S_IFMT) == file_type"];
"1001936" -> "1001935"  [label="AST: "];
"1001936" -> "1001937"  [label="CFG: "];
"1001937" -> "1001936"  [label="AST: "];
"1001982" -> "1001936"  [label="CFG: "];
"1001987" -> "1001936"  [label="CFG: "];
"1001936" -> "1002173"  [label="DDG: i0 != NONE"];
"1001936" -> "1002173"  [label="DDG: (i == NONE || (st[i].st_mode & S_IFMT) == file_type)\n\t\t&& maybe_reverse (p_name[i == NONE ? i0 : i], i == NONE,\n\t\t\t\t  i == NONE || st[i].st_size == 0)\n\t\t&& i == NONE"];
"1001936" -> "1002173"  [label="DDG: i0 != NONE\n\t\t&& (i == NONE || (st[i].st_mode & S_IFMT) == file_type)\n\t\t&& maybe_reverse (p_name[i == NONE ? i0 : i], i == NONE,\n\t\t\t\t  i == NONE || st[i].st_size == 0)\n\t\t&& i == NONE"];
"1001937" -> "1001936"  [label="DDG: i0"];
"1001937" -> "1001936"  [label="DDG: NONE"];
"1002063" -> "1002061"  [label="AST: "];
"1002063" -> "1002065"  [label="CFG: "];
"1002064" -> "1002063"  [label="AST: "];
"1002065" -> "1002063"  [label="AST: "];
"1002061" -> "1002063"  [label="CFG: "];
"1002063" -> "1002173"  [label="DDG: distance_from_minimum"];
"1002063" -> "1002173"  [label="DDG: p_name"];
"1002063" -> "1002061"  [label="DDG: p_name"];
"1002063" -> "1002061"  [label="DDG: distance_from_minimum"];
"1000187" -> "1002063"  [label="DDG: p_name[i]"];
"1001876" -> "1002063"  [label="DDG: p_name[i]"];
"1000787" -> "1002063"  [label="DDG: p_name[i]"];
"1001712" -> "1002063"  [label="DDG: p_name[INDEX]"];
"1000813" -> "1002063"  [label="DDG: p_name[NEW]"];
"1001771" -> "1002063"  [label="DDG: p_name[i]"];
"1001405" -> "1002063"  [label="DDG: p_name[NEW]"];
"1001574" -> "1002063"  [label="DDG: p_name[NEW]"];
"1000795" -> "1002063"  [label="DDG: p_name[OLD]"];
"1001416" -> "1002063"  [label="DDG: p_name[INDEX]"];
"1001564" -> "1002063"  [label="DDG: p_name[OLD]"];
"1001802" -> "1002063"  [label="DDG: p_name[i]"];
"1001281" -> "1002063"  [label="DDG: p_name[NEW]"];
"1001697" -> "1002063"  [label="DDG: p_name[OLD]"];
"1001697" -> "1002063"  [label="DDG: p_name[NEW]"];
"1001696" -> "1002063"  [label="DDG: p_name[INDEX]"];
"1001899" -> "1002063"  [label="DDG: p_name[i]"];
"1001585" -> "1002063"  [label="DDG: p_name[INDEX]"];
"1000844" -> "1002063"  [label="DDG: p_name[i]"];
"1002023" -> "1002063"  [label="DDG: p_name[i]"];
"1001816" -> "1002063"  [label="DDG: p_name"];
"1001395" -> "1002063"  [label="DDG: p_name[OLD]"];
"1002052" -> "1002063"  [label="DDG: distance_from_minimum[i]"];
"1002063" -> "1002083"  [label="DDG: p_name"];
"1002063" -> "1002087"  [label="DDG: p_name"];
"1002063" -> "1002093"  [label="DDG: p_name"];
"1002063" -> "1002097"  [label="DDG: p_name"];
"1002063" -> "1002152"  [label="DDG: p_name"];
"1002061" -> "1001992"  [label="AST: "];
"1002062" -> "1002061"  [label="AST: "];
"1002069" -> "1002061"  [label="CFG: "];
"1002061" -> "1002173"  [label="DDG: best_name (p_name, distance_from_minimum)"];
"1002061" -> "1002077"  [label="DDG: i"];
"1002061" -> "1002110"  [label="DDG: i"];
"1002077" -> "1002076"  [label="AST: "];
"1002077" -> "1002079"  [label="CFG: "];
"1002078" -> "1002077"  [label="AST: "];
"1002079" -> "1002077"  [label="AST: "];
"1002081" -> "1002077"  [label="CFG: "];
"1002076" -> "1002077"  [label="CFG: "];
"1002077" -> "1002173"  [label="DDG: OLD"];
"1002077" -> "1002076"  [label="DDG: i"];
"1002077" -> "1002076"  [label="DDG: OLD"];
"1001681" -> "1002077"  [label="DDG: i"];
"1001986" -> "1002077"  [label="DDG: i"];
"1001721" -> "1002077"  [label="DDG: i"];
"1002077" -> "1002080"  [label="DDG: i"];
"1002077" -> "1002110"  [label="DDG: i"];
"1002076" -> "1002075"  [label="AST: "];
"1002076" -> "1002080"  [label="CFG: "];
"1002080" -> "1002076"  [label="AST: "];
"1002085" -> "1002076"  [label="CFG: "];
"1002075" -> "1002076"  [label="CFG: "];
"1002076" -> "1002173"  [label="DDG: i == NEW"];
"1002076" -> "1002173"  [label="DDG: i == OLD"];
"1002076" -> "1002075"  [label="DDG: i == OLD"];
"1002076" -> "1002075"  [label="DDG: i == NEW"];
"1002080" -> "1002076"  [label="DDG: i"];
"1002080" -> "1002076"  [label="DDG: NEW"];
"1002075" -> "1002074"  [label="AST: "];
"1002075" -> "1002083"  [label="CFG: "];
"1002083" -> "1002075"  [label="AST: "];
"1002074" -> "1002075"  [label="CFG: "];
"1002075" -> "1002173"  [label="DDG: p_name[reverse] && p_name[! reverse] &&\n\t      name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse])"];
"1002075" -> "1002173"  [label="DDG: i == OLD || i == NEW"];
"1002075" -> "1002074"  [label="DDG: i == OLD || i == NEW"];
"1002075" -> "1002074"  [label="DDG: p_name[reverse] && p_name[! reverse] &&\n\t      name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse])"];
"1002083" -> "1002075"  [label="DDG: p_name[reverse]"];
"1002083" -> "1002075"  [label="DDG: p_name[! reverse] &&\n\t      name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse])"];
"1002074" -> "1002071"  [label="AST: "];
"1002071" -> "1002074"  [label="CFG: "];
"1002074" -> "1002173"  [label="DDG: (i == OLD || i == NEW) &&\n\t      p_name[reverse] && p_name[! reverse] &&\n\t      name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse])"];
"1002074" -> "1002071"  [label="DDG: (i == OLD || i == NEW) &&\n\t      p_name[reverse] && p_name[! reverse] &&\n\t      name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse])"];
"1002071" -> "1002067"  [label="AST: "];
"1002071" -> "1002072"  [label="CFG: "];
"1002072" -> "1002071"  [label="AST: "];
"1002067" -> "1002071"  [label="CFG: "];
"1002071" -> "1002173"  [label="DDG: ! inname"];
"1002071" -> "1002173"  [label="DDG: ! ((i == OLD || i == NEW) &&\n\t      p_name[reverse] && p_name[! reverse] &&\n\t      name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse]))"];
"1002071" -> "1002067"  [label="DDG: ! inname"];
"1002071" -> "1002067"  [label="DDG: ! ((i == OLD || i == NEW) &&\n\t      p_name[reverse] && p_name[! reverse] &&\n\t      name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse]))"];
"1002072" -> "1002071"  [label="DDG: inname"];
"1002067" -> "1002066"  [label="AST: "];
"1002067" -> "1002068"  [label="CFG: "];
"1002068" -> "1002067"  [label="AST: "];
"1002104" -> "1002067"  [label="CFG: "];
"1002111" -> "1002067"  [label="CFG: "];
"1002067" -> "1002173"  [label="DDG: ! inname\n \t&& ! ((i == OLD || i == NEW) &&\n\t      p_name[reverse] && p_name[! reverse] &&\n\t      name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse]))"];
"1002067" -> "1002173"  [label="DDG: (pch_rename () || pch_copy ())\n \t&& ! inname\n \t&& ! ((i == OLD || i == NEW) &&\n\t      p_name[reverse] && p_name[! reverse] &&\n\t      name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse]))"];
"1002067" -> "1002173"  [label="DDG: pch_rename () || pch_copy ()"];
"1002068" -> "1002067"  [label="DDG: pch_rename ()"];
"1002068" -> "1002067"  [label="DDG: pch_copy ()"];
"1002080" -> "1002082"  [label="CFG: "];
"1002081" -> "1002080"  [label="AST: "];
"1002082" -> "1002080"  [label="AST: "];
"1002080" -> "1002173"  [label="DDG: NEW"];
"1000260" -> "1002080"  [label="DDG: NEW"];
"1000834" -> "1002080"  [label="DDG: NEW"];
"1000777" -> "1002080"  [label="DDG: NEW"];
"1002080" -> "1002110"  [label="DDG: i"];
"1002110" -> "1002109"  [label="AST: "];
"1002110" -> "1002112"  [label="CFG: "];
"1002111" -> "1002110"  [label="AST: "];
"1002112" -> "1002110"  [label="AST: "];
"1002115" -> "1002110"  [label="CFG: "];
"1002151" -> "1002110"  [label="CFG: "];
"1002110" -> "1002173"  [label="DDG: NONE"];
"1002110" -> "1002173"  [label="DDG: i"];
"1002110" -> "1002173"  [label="DDG: i == NONE"];
"1001681" -> "1002110"  [label="DDG: i"];
"1001986" -> "1002110"  [label="DDG: i"];
"1001986" -> "1002110"  [label="DDG: NONE"];
"1001721" -> "1002110"  [label="DDG: i"];
"1001733" -> "1002110"  [label="DDG: NONE"];
"1002083" -> "1002084"  [label="CFG: "];
"1002083" -> "1002087"  [label="CFG: "];
"1002084" -> "1002083"  [label="AST: "];
"1002087" -> "1002083"  [label="AST: "];
"1002083" -> "1002173"  [label="DDG: p_name[reverse]"];
"1002083" -> "1002173"  [label="DDG: p_name[! reverse] &&\n\t      name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse])"];
"1002093" -> "1002083"  [label="DDG: p_name[reverse]"];
"1001816" -> "1002083"  [label="DDG: p_name"];
"1002087" -> "1002083"  [label="DDG: p_name[! reverse]"];
"1002087" -> "1002083"  [label="DDG: name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse])"];
"1002087" -> "1002088"  [label="CFG: "];
"1002087" -> "1002092"  [label="CFG: "];
"1002088" -> "1002087"  [label="AST: "];
"1002092" -> "1002087"  [label="AST: "];
"1002087" -> "1002173"  [label="DDG: name_is_valid (p_name[reverse]) &&\n \t      name_is_valid (p_name[! reverse])"];
"1002087" -> "1002173"  [label="DDG: p_name[! reverse]"];
"1002097" -> "1002087"  [label="DDG: p_name[! reverse]"];
"1001816" -> "1002087"  [label="DDG: p_name"];
"1002092" -> "1002087"  [label="DDG: name_is_valid (p_name[reverse])"];
"1002092" -> "1002087"  [label="DDG: name_is_valid (p_name[! reverse])"];
"1002093" -> "1002092"  [label="AST: "];
"1002093" -> "1002094"  [label="CFG: "];
"1002094" -> "1002093"  [label="AST: "];
"1002099" -> "1002093"  [label="CFG: "];
"1002092" -> "1002093"  [label="CFG: "];
"1002093" -> "1002092"  [label="DDG: p_name[reverse]"];
"1001816" -> "1002093"  [label="DDG: p_name"];
"1002092" -> "1002097"  [label="CFG: "];
"1002097" -> "1002092"  [label="AST: "];
"1002092" -> "1002173"  [label="DDG: name_is_valid (p_name[! reverse])"];
"1002092" -> "1002173"  [label="DDG: name_is_valid (p_name[reverse])"];
"1002097" -> "1002092"  [label="DDG: p_name[! reverse]"];
"1002097" -> "1002098"  [label="CFG: "];
"1002098" -> "1002097"  [label="AST: "];
"1001816" -> "1002097"  [label="DDG: p_name"];
"1002152" -> "1002150"  [label="AST: "];
"1002152" -> "1002153"  [label="CFG: "];
"1002153" -> "1002152"  [label="AST: "];
"1002150" -> "1002152"  [label="CFG: "];
"1002152" -> "1002173"  [label="DDG: p_name[i]"];
"1002152" -> "1002150"  [label="DDG: p_name[i]"];
"1000187" -> "1002152"  [label="DDG: p_name[i]"];
"1001876" -> "1002152"  [label="DDG: p_name[i]"];
"1000787" -> "1002152"  [label="DDG: p_name[i]"];
"1001771" -> "1002152"  [label="DDG: p_name[i]"];
"1002023" -> "1002152"  [label="DDG: p_name[i]"];
"1001816" -> "1002152"  [label="DDG: p_name"];
"1001802" -> "1002152"  [label="DDG: p_name[i]"];
"1001899" -> "1002152"  [label="DDG: p_name[i]"];
"1000844" -> "1002152"  [label="DDG: p_name[i]"];
"1002150" -> "1002149"  [label="AST: "];
"1002151" -> "1002150"  [label="AST: "];
"1002157" -> "1002150"  [label="CFG: "];
"1002150" -> "1002173"  [label="DDG: xstrdup (p_name[i])"];
"1002150" -> "1002173"  [label="DDG: inname"];
"1002166" -> "1002149"  [label="AST: "];
"1002166" -> "1002168"  [label="CFG: "];
"1002167" -> "1002166"  [label="AST: "];
"1002168" -> "1002166"  [label="AST: "];
"1002172" -> "1002166"  [label="CFG: "];
"1002166" -> "1002173"  [label="DDG: instat"];
"1002166" -> "1002173"  [label="DDG: st[i]"];
"1001758" -> "1002166"  [label="DDG: st[i]"];
"1001946" -> "1002166"  [label="DDG: st[i].st_mode"];
}
