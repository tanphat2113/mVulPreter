digraph "0_krb5_83ed75feba32e46f736fcce0d96a0445f29b96c2_4@pointer" {
"1000210" [label="(Call,kadm5int_acl_impose_restrictions(handle->context,\n                                            &arg->rec, &arg->mask, rp))"];
"1000196" [label="(Call,kadm5int_acl_check(handle->context, rqst2name(rqstp), ACL_ADD,\n                               arg->rec.principal, &rp))"];
"1000172" [label="(Call,krb5_unparse_name(handle->context, arg->rec.principal, &prime_arg))"];
"1000200" [label="(Call,rqst2name(rqstp))"];
"1000192" [label="(Call,CHANGEPW_SERVICE(rqstp))"];
"1000157" [label="(Call,setup_gss_names(rqstp, &client_name, &service_name))"];
"1000130" [label="(Call,new_server_handle(arg->api_version, rqstp, &handle))"];
"1000102" [label="(MethodParameterIn,struct svc_req *rqstp)"];
"1000194" [label="(Call,!kadm5int_acl_check(handle->context, rqst2name(rqstp), ACL_ADD,\n                               arg->rec.principal, &rp)\n        || kadm5int_acl_impose_restrictions(handle->context,\n                                            &arg->rec, &arg->mask, rp))"];
"1000191" [label="(Call,CHANGEPW_SERVICE(rqstp)\n        || !kadm5int_acl_check(handle->context, rqst2name(rqstp), ACL_ADD,\n                               arg->rec.principal, &rp)\n        || kadm5int_acl_impose_restrictions(handle->context,\n                                            &arg->rec, &arg->mask, rp))"];
"1000243" [label="(Call,kadm5_create_principal_3((void *)handle,\n                                            &arg->rec, arg->mask,\n                                            arg->n_ks_tuple,\n                                            arg->ks_tuple,\n                                            arg->passwd))"];
"1000239" [label="(Call,ret.code = kadm5_create_principal_3((void *)handle,\n                                            &arg->rec, arg->mask,\n                                            arg->n_ks_tuple,\n                                            arg->ks_tuple,\n                                            arg->passwd))"];
"1000264" [label="(Call,ret.code != 0)"];
"1000271" [label="(Call,krb5_get_error_message(handle->context, ret.code))"];
"1000269" [label="(Call,errmsg = krb5_get_error_message(handle->context, ret.code))"];
"1000278" [label="(Call,log_done(\"kadm5_create_principal\", prime_arg, errmsg,\n                 &client_name, &service_name, rqstp))"];
"1000288" [label="(Call,errmsg != NULL)"];
"1000291" [label="(Call,krb5_free_error_message(handle->context, errmsg))"];
"1000296" [label="(Call,free(prime_arg))"];
"1000299" [label="(Call,gss_release_buffer(&minor_stat, &client_name))"];
"1000304" [label="(Call,gss_release_buffer(&minor_stat, &service_name))"];
"1000288" [label="(Call,errmsg != NULL)"];
"1000200" [label="(Call,rqst2name(rqstp))"];
"1000171" [label="(ControlStructure,if (krb5_unparse_name(handle->context, arg->rec.principal, &prime_arg)))"];
"1000226" [label="(Identifier,ret)"];
"1000241" [label="(Identifier,ret)"];
"1000191" [label="(Call,CHANGEPW_SERVICE(rqstp)\n        || !kadm5int_acl_check(handle->context, rqst2name(rqstp), ACL_ADD,\n                               arg->rec.principal, &rp)\n        || kadm5int_acl_impose_restrictions(handle->context,\n                                            &arg->rec, &arg->mask, rp))"];
"1000161" [label="(Call,&service_name)"];
"1000103" [label="(Block,)"];
"1000134" [label="(Identifier,rqstp)"];
"1000257" [label="(Call,arg->ks_tuple)"];
"1000243" [label="(Call,kadm5_create_principal_3((void *)handle,\n                                            &arg->rec, arg->mask,\n                                            arg->n_ks_tuple,\n                                            arg->ks_tuple,\n                                            arg->passwd))"];
"1000290" [label="(Identifier,NULL)"];
"1000298" [label="(JumpTarget,exit_func:)"];
"1000265" [label="(Call,ret.code)"];
"1000270" [label="(Identifier,errmsg)"];
"1000269" [label="(Call,errmsg = krb5_get_error_message(handle->context, ret.code))"];
"1000307" [label="(Call,&service_name)"];
"1000247" [label="(Call,&arg->rec)"];
"1000282" [label="(Call,&client_name)"];
"1000157" [label="(Call,setup_gss_names(rqstp, &client_name, &service_name))"];
"1000292" [label="(Call,handle->context)"];
"1000173" [label="(Call,handle->context)"];
"1000284" [label="(Call,&service_name)"];
"1000302" [label="(Call,&client_name)"];
"1000195" [label="(Call,!kadm5int_acl_check(handle->context, rqst2name(rqstp), ACL_ADD,\n                               arg->rec.principal, &rp))"];
"1000156" [label="(Call,setup_gss_names(rqstp, &client_name, &service_name) < 0)"];
"1000299" [label="(Call,gss_release_buffer(&minor_stat, &client_name))"];
"1000130" [label="(Call,new_server_handle(arg->api_version, rqstp, &handle))"];
"1000279" [label="(Literal,\"kadm5_create_principal\")"];
"1000222" [label="(Identifier,rp)"];
"1000181" [label="(Call,&prime_arg)"];
"1000201" [label="(Identifier,rqstp)"];
"1000291" [label="(Call,krb5_free_error_message(handle->context, errmsg))"];
"1000192" [label="(Call,CHANGEPW_SERVICE(rqstp))"];
"1000244" [label="(Call,(void *)handle)"];
"1000190" [label="(ControlStructure,if (CHANGEPW_SERVICE(rqstp)\n        || !kadm5int_acl_check(handle->context, rqst2name(rqstp), ACL_ADD,\n                               arg->rec.principal, &rp)\n        || kadm5int_acl_impose_restrictions(handle->context,\n                                            &arg->rec, &arg->mask, rp)))"];
"1000202" [label="(Identifier,ACL_ADD)"];
"1000295" [label="(Identifier,errmsg)"];
"1000218" [label="(Call,&arg->mask)"];
"1000210" [label="(Call,kadm5int_acl_impose_restrictions(handle->context,\n                                            &arg->rec, &arg->mask, rp))"];
"1000102" [label="(MethodParameterIn,struct svc_req *rqstp)"];
"1000172" [label="(Call,krb5_unparse_name(handle->context, arg->rec.principal, &prime_arg))"];
"1000304" [label="(Call,gss_release_buffer(&minor_stat, &service_name))"];
"1000266" [label="(Identifier,ret)"];
"1000211" [label="(Call,handle->context)"];
"1000263" [label="(ControlStructure,if( ret.code != 0 ))"];
"1000264" [label="(Call,ret.code != 0)"];
"1000281" [label="(Identifier,errmsg)"];
"1000278" [label="(Call,log_done(\"kadm5_create_principal\", prime_arg, errmsg,\n                 &client_name, &service_name, rqstp))"];
"1000126" [label="(Call,ret.code = new_server_handle(arg->api_version, rqstp, &handle))"];
"1000286" [label="(Identifier,rqstp)"];
"1000159" [label="(Call,&client_name)"];
"1000198" [label="(Identifier,handle)"];
"1000214" [label="(Call,&arg->rec)"];
"1000239" [label="(Call,ret.code = kadm5_create_principal_3((void *)handle,\n                                            &arg->rec, arg->mask,\n                                            arg->n_ks_tuple,\n                                            arg->ks_tuple,\n                                            arg->passwd))"];
"1000186" [label="(Identifier,ret)"];
"1000305" [label="(Call,&minor_stat)"];
"1000131" [label="(Call,arg->api_version)"];
"1000296" [label="(Call,free(prime_arg))"];
"1000260" [label="(Call,arg->passwd)"];
"1000197" [label="(Call,handle->context)"];
"1000297" [label="(Identifier,prime_arg)"];
"1000194" [label="(Call,!kadm5int_acl_check(handle->context, rqst2name(rqstp), ACL_ADD,\n                               arg->rec.principal, &rp)\n        || kadm5int_acl_impose_restrictions(handle->context,\n                                            &arg->rec, &arg->mask, rp))"];
"1000271" [label="(Call,krb5_get_error_message(handle->context, ret.code))"];
"1000135" [label="(Call,&handle)"];
"1000176" [label="(Call,arg->rec.principal)"];
"1000229" [label="(Call,log_unauth(\"kadm5_create_principal\", prime_arg,\n                   &client_name, &service_name, rqstp))"];
"1000163" [label="(Literal,0)"];
"1000280" [label="(Identifier,prime_arg)"];
"1000158" [label="(Identifier,rqstp)"];
"1000254" [label="(Call,arg->n_ks_tuple)"];
"1000240" [label="(Call,ret.code)"];
"1000306" [label="(Identifier,minor_stat)"];
"1000287" [label="(ControlStructure,if (errmsg != NULL))"];
"1000196" [label="(Call,kadm5int_acl_check(handle->context, rqst2name(rqstp), ACL_ADD,\n                               arg->rec.principal, &rp))"];
"1000272" [label="(Call,handle->context)"];
"1000289" [label="(Identifier,errmsg)"];
"1000238" [label="(Block,)"];
"1000300" [label="(Call,&minor_stat)"];
"1000193" [label="(Identifier,rqstp)"];
"1000293" [label="(Identifier,handle)"];
"1000208" [label="(Call,&rp)"];
"1000268" [label="(Literal,0)"];
"1000275" [label="(Call,ret.code)"];
"1000203" [label="(Call,arg->rec.principal)"];
"1000251" [label="(Call,arg->mask)"];
"1000314" [label="(MethodReturn,RET)"];
"1000310" [label="(Identifier,handle)"];
"1000118" [label="(Call,*errmsg = NULL)"];
"1000210" -> "1000194"  [label="AST: "];
"1000210" -> "1000222"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000214" -> "1000210"  [label="AST: "];
"1000218" -> "1000210"  [label="AST: "];
"1000222" -> "1000210"  [label="AST: "];
"1000194" -> "1000210"  [label="CFG: "];
"1000210" -> "1000314"  [label="DDG: "];
"1000210" -> "1000314"  [label="DDG: "];
"1000210" -> "1000314"  [label="DDG: "];
"1000210" -> "1000314"  [label="DDG: "];
"1000210" -> "1000194"  [label="DDG: "];
"1000210" -> "1000194"  [label="DDG: "];
"1000210" -> "1000194"  [label="DDG: "];
"1000210" -> "1000194"  [label="DDG: "];
"1000196" -> "1000210"  [label="DDG: "];
"1000210" -> "1000243"  [label="DDG: "];
"1000210" -> "1000243"  [label="DDG: "];
"1000210" -> "1000271"  [label="DDG: "];
"1000210" -> "1000291"  [label="DDG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000196" -> "1000208"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000200" -> "1000196"  [label="AST: "];
"1000202" -> "1000196"  [label="AST: "];
"1000203" -> "1000196"  [label="AST: "];
"1000208" -> "1000196"  [label="AST: "];
"1000195" -> "1000196"  [label="CFG: "];
"1000196" -> "1000314"  [label="DDG: "];
"1000196" -> "1000314"  [label="DDG: "];
"1000196" -> "1000314"  [label="DDG: "];
"1000196" -> "1000314"  [label="DDG: "];
"1000196" -> "1000314"  [label="DDG: "];
"1000196" -> "1000195"  [label="DDG: "];
"1000196" -> "1000195"  [label="DDG: "];
"1000196" -> "1000195"  [label="DDG: "];
"1000196" -> "1000195"  [label="DDG: "];
"1000196" -> "1000195"  [label="DDG: "];
"1000172" -> "1000196"  [label="DDG: "];
"1000172" -> "1000196"  [label="DDG: "];
"1000200" -> "1000196"  [label="DDG: "];
"1000196" -> "1000271"  [label="DDG: "];
"1000196" -> "1000291"  [label="DDG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000172" -> "1000181"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000176" -> "1000172"  [label="AST: "];
"1000181" -> "1000172"  [label="AST: "];
"1000186" -> "1000172"  [label="CFG: "];
"1000193" -> "1000172"  [label="CFG: "];
"1000172" -> "1000314"  [label="DDG: "];
"1000172" -> "1000314"  [label="DDG: "];
"1000172" -> "1000314"  [label="DDG: "];
"1000172" -> "1000314"  [label="DDG: "];
"1000172" -> "1000271"  [label="DDG: "];
"1000172" -> "1000291"  [label="DDG: "];
"1000200" -> "1000201"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000202" -> "1000200"  [label="CFG: "];
"1000192" -> "1000200"  [label="DDG: "];
"1000102" -> "1000200"  [label="DDG: "];
"1000200" -> "1000229"  [label="DDG: "];
"1000200" -> "1000278"  [label="DDG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000192" -> "1000193"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000198" -> "1000192"  [label="CFG: "];
"1000191" -> "1000192"  [label="CFG: "];
"1000192" -> "1000191"  [label="DDG: "];
"1000157" -> "1000192"  [label="DDG: "];
"1000102" -> "1000192"  [label="DDG: "];
"1000192" -> "1000229"  [label="DDG: "];
"1000192" -> "1000278"  [label="DDG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000157" -> "1000161"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000161" -> "1000157"  [label="AST: "];
"1000163" -> "1000157"  [label="CFG: "];
"1000157" -> "1000314"  [label="DDG: "];
"1000157" -> "1000156"  [label="DDG: "];
"1000157" -> "1000156"  [label="DDG: "];
"1000157" -> "1000156"  [label="DDG: "];
"1000130" -> "1000157"  [label="DDG: "];
"1000102" -> "1000157"  [label="DDG: "];
"1000157" -> "1000229"  [label="DDG: "];
"1000157" -> "1000229"  [label="DDG: "];
"1000157" -> "1000278"  [label="DDG: "];
"1000157" -> "1000278"  [label="DDG: "];
"1000157" -> "1000299"  [label="DDG: "];
"1000157" -> "1000304"  [label="DDG: "];
"1000130" -> "1000126"  [label="AST: "];
"1000130" -> "1000135"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000134" -> "1000130"  [label="AST: "];
"1000135" -> "1000130"  [label="AST: "];
"1000126" -> "1000130"  [label="CFG: "];
"1000130" -> "1000314"  [label="DDG: "];
"1000130" -> "1000314"  [label="DDG: "];
"1000130" -> "1000314"  [label="DDG: "];
"1000130" -> "1000126"  [label="DDG: "];
"1000130" -> "1000126"  [label="DDG: "];
"1000130" -> "1000126"  [label="DDG: "];
"1000102" -> "1000130"  [label="DDG: "];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000314"  [label="DDG: "];
"1000102" -> "1000229"  [label="DDG: "];
"1000102" -> "1000278"  [label="DDG: "];
"1000194" -> "1000191"  [label="AST: "];
"1000194" -> "1000195"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000191" -> "1000194"  [label="CFG: "];
"1000194" -> "1000314"  [label="DDG: "];
"1000194" -> "1000314"  [label="DDG: "];
"1000194" -> "1000191"  [label="DDG: "];
"1000194" -> "1000191"  [label="DDG: "];
"1000195" -> "1000194"  [label="DDG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000226" -> "1000191"  [label="CFG: "];
"1000241" -> "1000191"  [label="CFG: "];
"1000191" -> "1000314"  [label="DDG: "];
"1000191" -> "1000314"  [label="DDG: "];
"1000191" -> "1000314"  [label="DDG: "];
"1000243" -> "1000239"  [label="AST: "];
"1000243" -> "1000260"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000247" -> "1000243"  [label="AST: "];
"1000251" -> "1000243"  [label="AST: "];
"1000254" -> "1000243"  [label="AST: "];
"1000257" -> "1000243"  [label="AST: "];
"1000260" -> "1000243"  [label="AST: "];
"1000239" -> "1000243"  [label="CFG: "];
"1000243" -> "1000314"  [label="DDG: "];
"1000243" -> "1000314"  [label="DDG: "];
"1000243" -> "1000314"  [label="DDG: "];
"1000243" -> "1000314"  [label="DDG: "];
"1000243" -> "1000314"  [label="DDG: "];
"1000243" -> "1000314"  [label="DDG: "];
"1000243" -> "1000239"  [label="DDG: "];
"1000243" -> "1000239"  [label="DDG: "];
"1000243" -> "1000239"  [label="DDG: "];
"1000243" -> "1000239"  [label="DDG: "];
"1000243" -> "1000239"  [label="DDG: "];
"1000243" -> "1000239"  [label="DDG: "];
"1000244" -> "1000243"  [label="DDG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000239"  [label="AST: "];
"1000266" -> "1000239"  [label="CFG: "];
"1000239" -> "1000314"  [label="DDG: "];
"1000239" -> "1000264"  [label="DDG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000264" -> "1000268"  [label="CFG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000268" -> "1000264"  [label="AST: "];
"1000270" -> "1000264"  [label="CFG: "];
"1000279" -> "1000264"  [label="CFG: "];
"1000264" -> "1000314"  [label="DDG: "];
"1000264" -> "1000314"  [label="DDG: "];
"1000264" -> "1000271"  [label="DDG: "];
"1000271" -> "1000269"  [label="AST: "];
"1000271" -> "1000275"  [label="CFG: "];
"1000272" -> "1000271"  [label="AST: "];
"1000275" -> "1000271"  [label="AST: "];
"1000269" -> "1000271"  [label="CFG: "];
"1000271" -> "1000314"  [label="DDG: "];
"1000271" -> "1000314"  [label="DDG: "];
"1000271" -> "1000269"  [label="DDG: "];
"1000271" -> "1000269"  [label="DDG: "];
"1000271" -> "1000291"  [label="DDG: "];
"1000269" -> "1000263"  [label="AST: "];
"1000270" -> "1000269"  [label="AST: "];
"1000279" -> "1000269"  [label="CFG: "];
"1000269" -> "1000314"  [label="DDG: "];
"1000269" -> "1000278"  [label="DDG: "];
"1000278" -> "1000238"  [label="AST: "];
"1000278" -> "1000286"  [label="CFG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000280" -> "1000278"  [label="AST: "];
"1000281" -> "1000278"  [label="AST: "];
"1000282" -> "1000278"  [label="AST: "];
"1000284" -> "1000278"  [label="AST: "];
"1000286" -> "1000278"  [label="AST: "];
"1000289" -> "1000278"  [label="CFG: "];
"1000278" -> "1000314"  [label="DDG: "];
"1000278" -> "1000314"  [label="DDG: "];
"1000118" -> "1000278"  [label="DDG: "];
"1000278" -> "1000288"  [label="DDG: "];
"1000278" -> "1000296"  [label="DDG: "];
"1000278" -> "1000299"  [label="DDG: "];
"1000278" -> "1000304"  [label="DDG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000288" -> "1000290"  [label="CFG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000290" -> "1000288"  [label="AST: "];
"1000293" -> "1000288"  [label="CFG: "];
"1000297" -> "1000288"  [label="CFG: "];
"1000288" -> "1000314"  [label="DDG: "];
"1000288" -> "1000314"  [label="DDG: "];
"1000288" -> "1000314"  [label="DDG: "];
"1000288" -> "1000291"  [label="DDG: "];
"1000291" -> "1000287"  [label="AST: "];
"1000291" -> "1000295"  [label="CFG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000295" -> "1000291"  [label="AST: "];
"1000297" -> "1000291"  [label="CFG: "];
"1000291" -> "1000314"  [label="DDG: "];
"1000291" -> "1000314"  [label="DDG: "];
"1000291" -> "1000314"  [label="DDG: "];
"1000296" -> "1000103"  [label="AST: "];
"1000296" -> "1000297"  [label="CFG: "];
"1000297" -> "1000296"  [label="AST: "];
"1000298" -> "1000296"  [label="CFG: "];
"1000296" -> "1000314"  [label="DDG: "];
"1000229" -> "1000296"  [label="DDG: "];
"1000299" -> "1000103"  [label="AST: "];
"1000299" -> "1000302"  [label="CFG: "];
"1000300" -> "1000299"  [label="AST: "];
"1000302" -> "1000299"  [label="AST: "];
"1000306" -> "1000299"  [label="CFG: "];
"1000299" -> "1000314"  [label="DDG: "];
"1000299" -> "1000314"  [label="DDG: "];
"1000229" -> "1000299"  [label="DDG: "];
"1000299" -> "1000304"  [label="DDG: "];
"1000304" -> "1000103"  [label="AST: "];
"1000304" -> "1000307"  [label="CFG: "];
"1000305" -> "1000304"  [label="AST: "];
"1000307" -> "1000304"  [label="AST: "];
"1000310" -> "1000304"  [label="CFG: "];
"1000304" -> "1000314"  [label="DDG: "];
"1000304" -> "1000314"  [label="DDG: "];
"1000304" -> "1000314"  [label="DDG: "];
"1000229" -> "1000304"  [label="DDG: "];
}
