digraph "0_linux_54d83fc74aa9ec72794373cb47432c5f7fb1a309_5@pointer" {
"1000104" [label="(MethodParameterIn,const struct ipt_entry *e)"];
"1000148" [label="(Call,s == e)"];
"1000157" [label="(Call,unconditional(s))"];
"1000156" [label="(Call,unconditional(s) &&\n \t\t    strcmp(t->target.u.kernel.target->name,\n \t\t\t   XT_STANDARD_TARGET) == 0 &&\n\t\t   t->verdict < 0)"];
"1000104" [label="(MethodParameterIn,const struct ipt_entry *e)"];
"1000200" [label="(Identifier,rulenum)"];
"1000156" [label="(Call,unconditional(s) &&\n \t\t    strcmp(t->target.u.kernel.target->name,\n \t\t\t   XT_STANDARD_TARGET) == 0 &&\n\t\t   t->verdict < 0)"];
"1000103" [label="(MethodParameterIn,const struct ipt_entry *s)"];
"1000149" [label="(Identifier,s)"];
"1000154" [label="(Identifier,rulenum)"];
"1000148" [label="(Call,s == e)"];
"1000150" [label="(Identifier,e)"];
"1000157" [label="(Call,unconditional(s))"];
"1000159" [label="(Call,strcmp(t->target.u.kernel.target->name,\n \t\t\t   XT_STANDARD_TARGET) == 0 &&\n\t\t   t->verdict < 0)"];
"1000155" [label="(ControlStructure,if (unconditional(s) &&\n \t\t    strcmp(t->target.u.kernel.target->name,\n \t\t\t   XT_STANDARD_TARGET) == 0 &&\n\t\t   t->verdict < 0))"];
"1000196" [label="(Literal,1)"];
"1000167" [label="(Identifier,t)"];
"1000203" [label="(MethodReturn,RET)"];
"1000183" [label="(Identifier,comment)"];
"1000158" [label="(Identifier,s)"];
"1000147" [label="(ControlStructure,if (s == e))"];
"1000115" [label="(Call,ipt_get_target_c(s))"];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1000203"  [label="DDG: e"];
"1000104" -> "1000148"  [label="DDG: e"];
"1000148" -> "1000147"  [label="AST: "];
"1000148" -> "1000150"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000150" -> "1000148"  [label="AST: "];
"1000154" -> "1000148"  [label="CFG: "];
"1000200" -> "1000148"  [label="CFG: "];
"1000148" -> "1000203"  [label="DDG: e"];
"1000148" -> "1000203"  [label="DDG: s"];
"1000148" -> "1000203"  [label="DDG: s == e"];
"1000115" -> "1000148"  [label="DDG: s"];
"1000103" -> "1000148"  [label="DDG: s"];
"1000148" -> "1000157"  [label="DDG: s"];
"1000157" -> "1000156"  [label="AST: "];
"1000157" -> "1000158"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000167" -> "1000157"  [label="CFG: "];
"1000156" -> "1000157"  [label="CFG: "];
"1000157" -> "1000203"  [label="DDG: s"];
"1000157" -> "1000156"  [label="DDG: s"];
"1000103" -> "1000157"  [label="DDG: s"];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000159"  [label="CFG: "];
"1000159" -> "1000156"  [label="AST: "];
"1000183" -> "1000156"  [label="CFG: "];
"1000196" -> "1000156"  [label="CFG: "];
"1000156" -> "1000203"  [label="DDG: unconditional(s)"];
"1000156" -> "1000203"  [label="DDG: unconditional(s) &&\n \t\t    strcmp(t->target.u.kernel.target->name,\n \t\t\t   XT_STANDARD_TARGET) == 0 &&\n\t\t   t->verdict < 0"];
"1000156" -> "1000203"  [label="DDG: strcmp(t->target.u.kernel.target->name,\n \t\t\t   XT_STANDARD_TARGET) == 0 &&\n\t\t   t->verdict < 0"];
"1000159" -> "1000156"  [label="DDG: strcmp(t->target.u.kernel.target->name,\n \t\t\t   XT_STANDARD_TARGET) == 0"];
"1000159" -> "1000156"  [label="DDG: t->verdict < 0"];
}
