digraph "0_charybdis_818a3fda944b26d4814132cee14cfda4ea4aa824@API" {
"1000337" [label="(Call,sendto_one(saslserv_p, \":%s ENCAP %s SASL %s %s S %s\",\n\t\t\t\t\t\tme.id, saslserv_p->servptr->name, source_p->id, saslserv_p->id,\n\t\t\t\t\t\tparv[1]))"];
"1000277" [label="(Call,sendto_one(saslserv_p, \":%s ENCAP %s SASL %s %s H %s %s\",\n\t\t\t\t\tme.id, saslserv_p->servptr->name, source_p->id, saslserv_p->id,\n\t\t\t\t\tsource_p->host, source_p->sockhost))"];
"1000167" [label="(Call,saslserv_p == NULL)"];
"1000159" [label="(Call,saslserv_p = find_named_client(ConfigFileEntry.sasl_service))"];
"1000161" [label="(Call,find_named_client(ConfigFileEntry.sasl_service))"];
"1000171" [label="(Call,IsService(saslserv_p))"];
"1000252" [label="(Call,add_to_id_hash(source_p->id, source_p))"];
"1000247" [label="(Call,strcpy(source_p->id, generate_uid()))"];
"1000118" [label="(Call,IsCapable(source_p, CLICAP_SASL))"];
"1000104" [label="(MethodParameterIn,struct Client *source_p)"];
"1000106" [label="(MethodParameterIn,const char *parv[])"];
"1000216" [label="(Call,strlen(parv[1]))"];
"1000146" [label="(Call,strchr(parv[1], ' '))"];
"1000357" [label="(Call,rb_strlcpy(source_p->localClient->sasl_agent, saslserv_p->id, IDLEN))"];
"1000147" [label="(Call,parv[1])"];
"1000391" [label="(Identifier,source_p)"];
"1000339" [label="(Literal,\":%s ENCAP %s SASL %s %s S %s\")"];
"1000169" [label="(Identifier,NULL)"];
"1000246" [label="(Block,)"];
"1000174" [label="(Call,sendto_one(source_p, form_str(ERR_SASLABORTED), me.name, EmptyString(source_p->name) ? \"*\" : source_p->name))"];
"1000248" [label="(Call,source_p->id)"];
"1000368" [label="(Call,sendto_one(agent_p, \":%s ENCAP %s SASL %s %s C %s\",\n\t\t\t\tme.id, agent_p->servptr->name, source_p->id, agent_p->id,\n\t\t\t\tparv[1]))"];
"1000120" [label="(Identifier,CLICAP_SASL)"];
"1000283" [label="(Call,saslserv_p->servptr->name)"];
"1000167" [label="(Call,saslserv_p == NULL)"];
"1000348" [label="(Call,source_p->id)"];
"1000351" [label="(Call,saslserv_p->id)"];
"1000313" [label="(Call,sendto_one(saslserv_p, \":%s ENCAP %s SASL %s %s S %s %s\",\n\t\t\t\t\t\tme.id, saslserv_p->servptr->name, source_p->id, saslserv_p->id,\n\t\t\t\t\t\tparv[1], source_p->certfp))"];
"1000396" [label="(MethodReturn,RET)"];
"1000216" [label="(Call,strlen(parv[1]))"];
"1000278" [label="(Identifier,saslserv_p)"];
"1000291" [label="(Call,saslserv_p->id)"];
"1000358" [label="(Call,source_p->localClient->sasl_agent)"];
"1000252" [label="(Call,add_to_id_hash(source_p->id, source_p))"];
"1000354" [label="(Call,parv[1])"];
"1000161" [label="(Call,find_named_client(ConfigFileEntry.sasl_service))"];
"1000159" [label="(Call,saslserv_p = find_named_client(ConfigFileEntry.sasl_service))"];
"1000162" [label="(Call,ConfigFileEntry.sasl_service)"];
"1000297" [label="(Call,source_p->sockhost)"];
"1000277" [label="(Call,sendto_one(saslserv_p, \":%s ENCAP %s SASL %s %s H %s %s\",\n\t\t\t\t\tme.id, saslserv_p->servptr->name, source_p->id, saslserv_p->id,\n\t\t\t\t\tsource_p->host, source_p->sockhost))"];
"1000305" [label="(Identifier,parv)"];
"1000172" [label="(Identifier,saslserv_p)"];
"1000215" [label="(Call,strlen(parv[1]) > 400)"];
"1000280" [label="(Call,me.id)"];
"1000340" [label="(Call,me.id)"];
"1000251" [label="(Call,generate_uid())"];
"1000222" [label="(Call,sendto_one(source_p, form_str(ERR_SASLTOOLONG), me.name, EmptyString(source_p->name) ? \"*\" : source_p->name))"];
"1000360" [label="(Identifier,source_p)"];
"1000166" [label="(Call,saslserv_p == NULL || !IsService(saslserv_p))"];
"1000160" [label="(Identifier,saslserv_p)"];
"1000279" [label="(Literal,\":%s ENCAP %s SASL %s %s H %s %s\")"];
"1000338" [label="(Identifier,saslserv_p)"];
"1000106" [label="(MethodParameterIn,const char *parv[])"];
"1000150" [label="(Literal,' ')"];
"1000256" [label="(Identifier,source_p)"];
"1000366" [label="(Identifier,IDLEN)"];
"1000363" [label="(Call,saslserv_p->id)"];
"1000294" [label="(Call,source_p->host)"];
"1000139" [label="(Call,*parv[1] == ':' || strchr(parv[1], ' '))"];
"1000337" [label="(Call,sendto_one(saslserv_p, \":%s ENCAP %s SASL %s %s S %s\",\n\t\t\t\t\t\tme.id, saslserv_p->servptr->name, source_p->id, saslserv_p->id,\n\t\t\t\t\t\tparv[1]))"];
"1000357" [label="(Call,rb_strlcpy(source_p->localClient->sasl_agent, saslserv_p->id, IDLEN))"];
"1000273" [label="(Call,agent_p == NULL)"];
"1000336" [label="(ControlStructure,else)"];
"1000146" [label="(Call,strchr(parv[1], ' '))"];
"1000288" [label="(Call,source_p->id)"];
"1000170" [label="(Call,!IsService(saslserv_p))"];
"1000254" [label="(Identifier,source_p)"];
"1000119" [label="(Identifier,source_p)"];
"1000107" [label="(Block,)"];
"1000220" [label="(Literal,400)"];
"1000253" [label="(Call,source_p->id)"];
"1000217" [label="(Call,parv[1])"];
"1000117" [label="(Call,!IsCapable(source_p, CLICAP_SASL))"];
"1000168" [label="(Identifier,saslserv_p)"];
"1000104" [label="(MethodParameterIn,struct Client *source_p)"];
"1000261" [label="(Identifier,source_p)"];
"1000303" [label="(Call,strcmp(parv[1], \"EXTERNAL\"))"];
"1000276" [label="(Block,)"];
"1000247" [label="(Call,strcpy(source_p->id, generate_uid()))"];
"1000266" [label="(Call,find_id(source_p->localClient->sasl_agent))"];
"1000302" [label="(Call,!strcmp(parv[1], \"EXTERNAL\"))"];
"1000171" [label="(Call,IsService(saslserv_p))"];
"1000118" [label="(Call,IsCapable(source_p, CLICAP_SASL))"];
"1000343" [label="(Call,saslserv_p->servptr->name)"];
"1000337" -> "1000336"  [label="AST: "];
"1000337" -> "1000354"  [label="CFG: "];
"1000338" -> "1000337"  [label="AST: "];
"1000339" -> "1000337"  [label="AST: "];
"1000340" -> "1000337"  [label="AST: "];
"1000343" -> "1000337"  [label="AST: "];
"1000348" -> "1000337"  [label="AST: "];
"1000351" -> "1000337"  [label="AST: "];
"1000354" -> "1000337"  [label="AST: "];
"1000360" -> "1000337"  [label="CFG: "];
"1000337" -> "1000396"  [label="DDG: "];
"1000337" -> "1000396"  [label="DDG: "];
"1000337" -> "1000396"  [label="DDG: "];
"1000337" -> "1000396"  [label="DDG: "];
"1000337" -> "1000396"  [label="DDG: "];
"1000337" -> "1000396"  [label="DDG: "];
"1000277" -> "1000337"  [label="DDG: "];
"1000277" -> "1000337"  [label="DDG: "];
"1000277" -> "1000337"  [label="DDG: "];
"1000277" -> "1000337"  [label="DDG: "];
"1000277" -> "1000337"  [label="DDG: "];
"1000106" -> "1000337"  [label="DDG: "];
"1000216" -> "1000337"  [label="DDG: "];
"1000337" -> "1000357"  [label="DDG: "];
"1000277" -> "1000276"  [label="AST: "];
"1000277" -> "1000297"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000277"  [label="AST: "];
"1000280" -> "1000277"  [label="AST: "];
"1000283" -> "1000277"  [label="AST: "];
"1000288" -> "1000277"  [label="AST: "];
"1000291" -> "1000277"  [label="AST: "];
"1000294" -> "1000277"  [label="AST: "];
"1000297" -> "1000277"  [label="AST: "];
"1000305" -> "1000277"  [label="CFG: "];
"1000277" -> "1000396"  [label="DDG: "];
"1000277" -> "1000396"  [label="DDG: "];
"1000277" -> "1000396"  [label="DDG: "];
"1000167" -> "1000277"  [label="DDG: "];
"1000171" -> "1000277"  [label="DDG: "];
"1000252" -> "1000277"  [label="DDG: "];
"1000277" -> "1000313"  [label="DDG: "];
"1000277" -> "1000313"  [label="DDG: "];
"1000277" -> "1000313"  [label="DDG: "];
"1000277" -> "1000313"  [label="DDG: "];
"1000277" -> "1000313"  [label="DDG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000167" -> "1000169"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000169" -> "1000167"  [label="AST: "];
"1000172" -> "1000167"  [label="CFG: "];
"1000166" -> "1000167"  [label="CFG: "];
"1000167" -> "1000396"  [label="DDG: "];
"1000167" -> "1000396"  [label="DDG: "];
"1000167" -> "1000166"  [label="DDG: "];
"1000167" -> "1000166"  [label="DDG: "];
"1000159" -> "1000167"  [label="DDG: "];
"1000167" -> "1000171"  [label="DDG: "];
"1000167" -> "1000273"  [label="DDG: "];
"1000159" -> "1000107"  [label="AST: "];
"1000159" -> "1000161"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000161" -> "1000159"  [label="AST: "];
"1000168" -> "1000159"  [label="CFG: "];
"1000159" -> "1000396"  [label="DDG: "];
"1000161" -> "1000159"  [label="DDG: "];
"1000161" -> "1000162"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000161" -> "1000396"  [label="DDG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000171" -> "1000172"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000170" -> "1000171"  [label="CFG: "];
"1000171" -> "1000396"  [label="DDG: "];
"1000171" -> "1000170"  [label="DDG: "];
"1000252" -> "1000246"  [label="AST: "];
"1000252" -> "1000256"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000256" -> "1000252"  [label="AST: "];
"1000261" -> "1000252"  [label="CFG: "];
"1000252" -> "1000396"  [label="DDG: "];
"1000252" -> "1000396"  [label="DDG: "];
"1000247" -> "1000252"  [label="DDG: "];
"1000118" -> "1000252"  [label="DDG: "];
"1000104" -> "1000252"  [label="DDG: "];
"1000252" -> "1000368"  [label="DDG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000247" -> "1000251"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000251" -> "1000247"  [label="AST: "];
"1000254" -> "1000247"  [label="CFG: "];
"1000247" -> "1000396"  [label="DDG: "];
"1000247" -> "1000396"  [label="DDG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="AST: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000118" -> "1000396"  [label="DDG: "];
"1000118" -> "1000396"  [label="DDG: "];
"1000118" -> "1000117"  [label="DDG: "];
"1000118" -> "1000117"  [label="DDG: "];
"1000104" -> "1000118"  [label="DDG: "];
"1000118" -> "1000174"  [label="DDG: "];
"1000118" -> "1000222"  [label="DDG: "];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1000396"  [label="DDG: "];
"1000104" -> "1000174"  [label="DDG: "];
"1000104" -> "1000222"  [label="DDG: "];
"1000106" -> "1000102"  [label="AST: "];
"1000106" -> "1000396"  [label="DDG: "];
"1000106" -> "1000146"  [label="DDG: "];
"1000106" -> "1000216"  [label="DDG: "];
"1000106" -> "1000302"  [label="DDG: "];
"1000106" -> "1000303"  [label="DDG: "];
"1000106" -> "1000313"  [label="DDG: "];
"1000106" -> "1000368"  [label="DDG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000216" -> "1000217"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000220" -> "1000216"  [label="CFG: "];
"1000216" -> "1000396"  [label="DDG: "];
"1000216" -> "1000215"  [label="DDG: "];
"1000146" -> "1000216"  [label="DDG: "];
"1000216" -> "1000302"  [label="DDG: "];
"1000216" -> "1000303"  [label="DDG: "];
"1000216" -> "1000313"  [label="DDG: "];
"1000216" -> "1000368"  [label="DDG: "];
"1000146" -> "1000139"  [label="AST: "];
"1000146" -> "1000150"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000150" -> "1000146"  [label="AST: "];
"1000139" -> "1000146"  [label="CFG: "];
"1000146" -> "1000396"  [label="DDG: "];
"1000146" -> "1000139"  [label="DDG: "];
"1000146" -> "1000139"  [label="DDG: "];
"1000357" -> "1000276"  [label="AST: "];
"1000357" -> "1000366"  [label="CFG: "];
"1000358" -> "1000357"  [label="AST: "];
"1000363" -> "1000357"  [label="AST: "];
"1000366" -> "1000357"  [label="AST: "];
"1000391" -> "1000357"  [label="CFG: "];
"1000357" -> "1000396"  [label="DDG: "];
"1000357" -> "1000396"  [label="DDG: "];
"1000357" -> "1000396"  [label="DDG: "];
"1000357" -> "1000396"  [label="DDG: "];
"1000266" -> "1000357"  [label="DDG: "];
"1000313" -> "1000357"  [label="DDG: "];
}
