digraph "1_Chrome_350f7d4b2c76950c8e7271284de84a9756b796e1_4@del" {
"1000108" [label="(Call,DCHECK(clock_))"];
"1000106" [label="(Call,DCHECK(delegate_))"];
"1000104" [label="(Call,DCHECK_CALLED_ON_VALID_THREAD(thread_checker_))"];
"1000121" [label="(Call,certificate_ = p2p_transport_config.certificates[0])"];
"1000128" [label="(Call,packet_transport_->SetReceiveDelegate(this))"];
"1000110" [label="(Call,DCHECK(packet_transport_))"];
"1000102" [label="(MethodParameterIn,clock)"];
"1000112" [label="(Call,DCHECK_GT(p2p_transport_config.certificates.size(), 0u))"];
"1000120" [label="(Call,InitializeCryptoStream())"];
"1000105" [label="(Identifier,thread_checker_)"];
"1000103" [label="(Block,)"];
"1000104" [label="(Call,DCHECK_CALLED_ON_VALID_THREAD(thread_checker_))"];
"1000113" [label="(Call,p2p_transport_config.certificates.size())"];
"1000129" [label="(Identifier,this)"];
"1000111" [label="(Identifier,packet_transport_)"];
"1000110" [label="(Call,DCHECK(packet_transport_))"];
"1000116" [label="(Call,p2p_transport_config.can_respond_to_crypto_handshake)"];
"1000117" [label="(Identifier,p2p_transport_config)"];
"1000107" [label="(Identifier,delegate_)"];
"1000106" [label="(Call,DCHECK(delegate_))"];
"1000108" [label="(Call,DCHECK(clock_))"];
"1000119" [label="(Block,)"];
"1000122" [label="(Identifier,certificate_)"];
"1000121" [label="(Call,certificate_ = p2p_transport_config.certificates[0])"];
"1000120" [label="(Call,InitializeCryptoStream())"];
"1000102" [label="(MethodParameterIn,clock)"];
"1000114" [label="(Literal,0u)"];
"1000123" [label="(Call,p2p_transport_config.certificates[0])"];
"1000128" [label="(Call,packet_transport_->SetReceiveDelegate(this))"];
"1000109" [label="(Identifier,clock_)"];
"1000112" [label="(Call,DCHECK_GT(p2p_transport_config.certificates.size(), 0u))"];
"1000130" [label="(MethodReturn,RET)"];
"1000108" -> "1000103"  [label="AST: "];
"1000108" -> "1000109"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000111" -> "1000108"  [label="CFG: "];
"1000108" -> "1000130"  [label="DDG: DCHECK(clock_)"];
"1000108" -> "1000130"  [label="DDG: clock_"];
"1000106" -> "1000103"  [label="AST: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000109" -> "1000106"  [label="CFG: "];
"1000106" -> "1000130"  [label="DDG: delegate_"];
"1000106" -> "1000130"  [label="DDG: DCHECK(delegate_)"];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000105"  [label="CFG: "];
"1000105" -> "1000104"  [label="AST: "];
"1000107" -> "1000104"  [label="CFG: "];
"1000104" -> "1000130"  [label="DDG: DCHECK_CALLED_ON_VALID_THREAD(thread_checker_)"];
"1000104" -> "1000130"  [label="DDG: thread_checker_"];
"1000121" -> "1000103"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000129" -> "1000121"  [label="CFG: "];
"1000121" -> "1000130"  [label="DDG: p2p_transport_config.certificates[0]"];
"1000121" -> "1000130"  [label="DDG: certificate_"];
"1000128" -> "1000103"  [label="AST: "];
"1000128" -> "1000129"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000128"  [label="CFG: "];
"1000128" -> "1000130"  [label="DDG: this"];
"1000128" -> "1000130"  [label="DDG: packet_transport_->SetReceiveDelegate(this)"];
"1000110" -> "1000103"  [label="AST: "];
"1000110" -> "1000111"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000113" -> "1000110"  [label="CFG: "];
"1000110" -> "1000130"  [label="DDG: packet_transport_"];
"1000110" -> "1000130"  [label="DDG: DCHECK(packet_transport_)"];
"1000102" -> "1000101"  [label="AST: "];
"1000102" -> "1000130"  [label="DDG: <anonymous>"];
"1000112" -> "1000103"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000117" -> "1000112"  [label="CFG: "];
"1000112" -> "1000130"  [label="DDG: DCHECK_GT(p2p_transport_config.certificates.size(), 0u)"];
"1000112" -> "1000130"  [label="DDG: p2p_transport_config.certificates.size()"];
"1000120" -> "1000119"  [label="AST: "];
"1000120" -> "1000116"  [label="CFG: "];
"1000122" -> "1000120"  [label="CFG: "];
"1000120" -> "1000130"  [label="DDG: InitializeCryptoStream()"];
}
