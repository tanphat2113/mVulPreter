digraph "0_linux_beb39db59d14990e401e235faf66a6b9b31240b0_0@API" {
"1000186" [label="(Call,ulen = skb->len - sizeof(struct udphdr))"];
"1000188" [label="(Call,skb->len - sizeof(struct udphdr))"];
"1000198" [label="(Call,copied > ulen)"];
"1000201" [label="(Call,copied = ulen)"];
"1000224" [label="(Call,copied < ulen)"];
"1000223" [label="(Call,copied < ulen || UDP_SKB_CB(skb)->partial_cov)"];
"1000241" [label="(Call,skb_copy_datagram_msg(skb, sizeof(struct udphdr),\n\t\t\t\t\t    msg, copied))"];
"1000239" [label="(Call,err = skb_copy_datagram_msg(skb, sizeof(struct udphdr),\n\t\t\t\t\t    msg, copied))"];
"1000263" [label="(Call,unlikely(err))"];
"1000427" [label="(Return,return err;)"];
"1000266" [label="(Call,trace_kfree_skb(skb, udpv6_recvmsg))"];
"1000423" [label="(Call,skb_free_datagram_locked(sk, skb))"];
"1000309" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000328" [label="(Call,udp_hdr(skb))"];
"1000341" [label="(Call,ip_hdr(skb))"];
"1000386" [label="(Call,ip6_datagram_recv_common_ctl(sk, msg, skb))"];
"1000397" [label="(Call,ip_cmsg_recv(msg, skb))"];
"1000408" [label="(Call,ip6_datagram_recv_specific_ctl(sk, msg, skb))"];
"1000360" [label="(Call,ipv6_hdr(skb))"];
"1000372" [label="(Call,inet6_iif(skb))"];
"1000367" [label="(Call,ipv6_iface_scope_id(&sin6->sin6_addr,\n\t\t\t\t\t\t    inet6_iif(skb)))"];
"1000363" [label="(Call,sin6->sin6_scope_id =\n\t\t\t\tipv6_iface_scope_id(&sin6->sin6_addr,\n\t\t\t\t\t\t    inet6_iif(skb)))"];
"1000412" [label="(Call,err = copied)"];
"1000419" [label="(Call,err = ulen)"];
"1000206" [label="(Call,copied < ulen)"];
"1000393" [label="(ControlStructure,if (inet->cmsg_flags))"];
"1000257" [label="(Call,err == -EINVAL)"];
"1000398" [label="(Identifier,msg)"];
"1000343" [label="(FieldIdentifier,saddr)"];
"1000397" [label="(Call,ip_cmsg_recv(msg, skb))"];
"1000194" [label="(Call,copied = len)"];
"1000409" [label="(Identifier,sk)"];
"1000198" [label="(Call,copied > ulen)"];
"1000419" [label="(Call,err = ulen)"];
"1000362" [label="(FieldIdentifier,saddr)"];
"1000265" [label="(Block,)"];
"1000373" [label="(Identifier,skb)"];
"1000387" [label="(Identifier,sk)"];
"1000428" [label="(Identifier,err)"];
"1000340" [label="(Call,ip_hdr(skb)->saddr)"];
"1000263" [label="(Call,unlikely(err))"];
"1000299" [label="(Call,sock_net(sk))"];
"1000420" [label="(Identifier,err)"];
"1000237" [label="(Call,skb_csum_unnecessary(skb))"];
"1000206" [label="(Call,copied < ulen)"];
"1000424" [label="(Identifier,sk)"];
"1000266" [label="(Call,trace_kfree_skb(skb, udpv6_recvmsg))"];
"1000380" [label="(ControlStructure,if (np->rxopt.all))"];
"1000227" [label="(Call,UDP_SKB_CB(skb)->partial_cov)"];
"1000238" [label="(Identifier,skb)"];
"1000311" [label="(Identifier,sk)"];
"1000388" [label="(Identifier,msg)"];
"1000426" [label="(JumpTarget,out:)"];
"1000239" [label="(Call,err = skb_copy_datagram_msg(skb, sizeof(struct udphdr),\n\t\t\t\t\t    msg, copied))"];
"1000417" [label="(Identifier,flags)"];
"1000202" [label="(Identifier,copied)"];
"1000251" [label="(Call,skb_copy_and_csum_datagram_msg(skb, sizeof(struct udphdr), msg))"];
"1000315" [label="(Identifier,msg)"];
"1000328" [label="(Call,udp_hdr(skb))"];
"1000367" [label="(Call,ipv6_iface_scope_id(&sin6->sin6_addr,\n\t\t\t\t\t\t    inet6_iif(skb)))"];
"1000354" [label="(Block,)"];
"1000414" [label="(Identifier,copied)"];
"1000376" [label="(Identifier,addr_len)"];
"1000427" [label="(Return,return err;)"];
"1000224" [label="(Call,copied < ulen)"];
"1000267" [label="(Identifier,skb)"];
"1000422" [label="(JumpTarget,out_free:)"];
"1000207" [label="(Identifier,copied)"];
"1000402" [label="(ControlStructure,if (np->rxopt.all))"];
"1000421" [label="(Identifier,ulen)"];
"1000188" [label="(Call,skb->len - sizeof(struct udphdr))"];
"1000415" [label="(ControlStructure,if (flags & MSG_TRUNC))"];
"1000423" [label="(Call,skb_free_datagram_locked(sk, skb))"];
"1000199" [label="(Identifier,copied)"];
"1000192" [label="(Call,sizeof(struct udphdr))"];
"1000226" [label="(Identifier,ulen)"];
"1000264" [label="(Identifier,err)"];
"1000408" [label="(Call,ip6_datagram_recv_specific_ctl(sk, msg, skb))"];
"1000242" [label="(Identifier,skb)"];
"1000425" [label="(Identifier,skb)"];
"1000329" [label="(Identifier,skb)"];
"1000208" [label="(Identifier,ulen)"];
"1000215" [label="(Identifier,is_udp4)"];
"1000243" [label="(Call,sizeof(struct udphdr))"];
"1000305" [label="(Call,sock_net(sk))"];
"1000327" [label="(Call,udp_hdr(skb)->source)"];
"1000364" [label="(Call,sin6->sin6_scope_id)"];
"1000246" [label="(Identifier,copied)"];
"1000225" [label="(Identifier,copied)"];
"1000195" [label="(Identifier,copied)"];
"1000234" [label="(Identifier,skb)"];
"1000342" [label="(Identifier,skb)"];
"1000223" [label="(Call,copied < ulen || UDP_SKB_CB(skb)->partial_cov)"];
"1000361" [label="(Identifier,skb)"];
"1000412" [label="(Call,err = copied)"];
"1000310" [label="(Identifier,msg)"];
"1000355" [label="(Call,sin6->sin6_addr = ipv6_hdr(skb)->saddr)"];
"1000189" [label="(Call,skb->len)"];
"1000399" [label="(Identifier,skb)"];
"1000312" [label="(Identifier,skb)"];
"1000241" [label="(Call,skb_copy_datagram_msg(skb, sizeof(struct udphdr),\n\t\t\t\t\t    msg, copied))"];
"1000205" [label="(ControlStructure,if (copied < ulen))"];
"1000410" [label="(Identifier,msg)"];
"1000240" [label="(Identifier,err)"];
"1000330" [label="(FieldIdentifier,source)"];
"1000281" [label="(Call,sock_net(sk))"];
"1000110" [label="(Block,)"];
"1000187" [label="(Identifier,ulen)"];
"1000309" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000211" [label="(Identifier,msg)"];
"1000368" [label="(Call,&sin6->sin6_addr)"];
"1000341" [label="(Call,ip_hdr(skb))"];
"1000360" [label="(Call,ipv6_hdr(skb))"];
"1000391" [label="(Identifier,is_udp4)"];
"1000294" [label="(Identifier,peeked)"];
"1000268" [label="(Identifier,udpv6_recvmsg)"];
"1000186" [label="(Call,ulen = skb->len - sizeof(struct udphdr))"];
"1000105" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000197" [label="(ControlStructure,if (copied > ulen))"];
"1000359" [label="(Call,ipv6_hdr(skb)->saddr)"];
"1000104" [label="(MethodParameterIn,struct sock *sk)"];
"1000229" [label="(Identifier,skb)"];
"1000203" [label="(Identifier,ulen)"];
"1000262" [label="(ControlStructure,if (unlikely(err)))"];
"1000413" [label="(Identifier,err)"];
"1000201" [label="(Call,copied = ulen)"];
"1000245" [label="(Identifier,msg)"];
"1000236" [label="(ControlStructure,if (skb_csum_unnecessary(skb)))"];
"1000372" [label="(Call,inet6_iif(skb))"];
"1000271" [label="(Identifier,peeked)"];
"1000287" [label="(Call,sock_net(sk))"];
"1000200" [label="(Identifier,ulen)"];
"1000363" [label="(Call,sin6->sin6_scope_id =\n\t\t\t\tipv6_iface_scope_id(&sin6->sin6_addr,\n\t\t\t\t\t\t    inet6_iif(skb)))"];
"1000389" [label="(Identifier,skb)"];
"1000411" [label="(Identifier,skb)"];
"1000386" [label="(Call,ip6_datagram_recv_common_ctl(sk, msg, skb))"];
"1000480" [label="(MethodReturn,int)"];
"1000168" [label="(Call,__skb_recv_datagram(sk, flags | (noblock ? MSG_DONTWAIT : 0),\n\t\t\t\t  &peeked, &off, &err))"];
"1000222" [label="(ControlStructure,if (copied < ulen || UDP_SKB_CB(skb)->partial_cov))"];
"1000186" -> "1000110"  [label="AST: "];
"1000186" -> "1000188"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000188" -> "1000186"  [label="AST: "];
"1000195" -> "1000186"  [label="CFG: "];
"1000186" -> "1000480"  [label="DDG: skb->len - sizeof(struct udphdr)"];
"1000188" -> "1000186"  [label="DDG: skb->len"];
"1000186" -> "1000198"  [label="DDG: ulen"];
"1000188" -> "1000192"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000192" -> "1000188"  [label="AST: "];
"1000188" -> "1000480"  [label="DDG: skb->len"];
"1000198" -> "1000197"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000202" -> "1000198"  [label="CFG: "];
"1000207" -> "1000198"  [label="CFG: "];
"1000198" -> "1000480"  [label="DDG: copied > ulen"];
"1000194" -> "1000198"  [label="DDG: copied"];
"1000198" -> "1000201"  [label="DDG: ulen"];
"1000198" -> "1000206"  [label="DDG: copied"];
"1000198" -> "1000206"  [label="DDG: ulen"];
"1000198" -> "1000224"  [label="DDG: ulen"];
"1000201" -> "1000197"  [label="AST: "];
"1000201" -> "1000203"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000203" -> "1000201"  [label="AST: "];
"1000215" -> "1000201"  [label="CFG: "];
"1000201" -> "1000224"  [label="DDG: copied"];
"1000224" -> "1000223"  [label="AST: "];
"1000224" -> "1000226"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000229" -> "1000224"  [label="CFG: "];
"1000223" -> "1000224"  [label="CFG: "];
"1000224" -> "1000480"  [label="DDG: copied"];
"1000224" -> "1000480"  [label="DDG: ulen"];
"1000224" -> "1000223"  [label="DDG: copied"];
"1000224" -> "1000223"  [label="DDG: ulen"];
"1000206" -> "1000224"  [label="DDG: copied"];
"1000206" -> "1000224"  [label="DDG: ulen"];
"1000224" -> "1000241"  [label="DDG: copied"];
"1000224" -> "1000412"  [label="DDG: copied"];
"1000224" -> "1000419"  [label="DDG: ulen"];
"1000223" -> "1000222"  [label="AST: "];
"1000223" -> "1000227"  [label="CFG: "];
"1000227" -> "1000223"  [label="AST: "];
"1000234" -> "1000223"  [label="CFG: "];
"1000238" -> "1000223"  [label="CFG: "];
"1000223" -> "1000480"  [label="DDG: UDP_SKB_CB(skb)->partial_cov"];
"1000223" -> "1000480"  [label="DDG: copied < ulen || UDP_SKB_CB(skb)->partial_cov"];
"1000223" -> "1000480"  [label="DDG: copied < ulen"];
"1000241" -> "1000239"  [label="AST: "];
"1000241" -> "1000246"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="AST: "];
"1000245" -> "1000241"  [label="AST: "];
"1000246" -> "1000241"  [label="AST: "];
"1000239" -> "1000241"  [label="CFG: "];
"1000241" -> "1000480"  [label="DDG: msg"];
"1000241" -> "1000480"  [label="DDG: copied"];
"1000241" -> "1000239"  [label="DDG: skb"];
"1000241" -> "1000239"  [label="DDG: msg"];
"1000241" -> "1000239"  [label="DDG: copied"];
"1000237" -> "1000241"  [label="DDG: skb"];
"1000251" -> "1000241"  [label="DDG: msg"];
"1000105" -> "1000241"  [label="DDG: msg"];
"1000241" -> "1000266"  [label="DDG: skb"];
"1000241" -> "1000309"  [label="DDG: msg"];
"1000241" -> "1000309"  [label="DDG: skb"];
"1000241" -> "1000412"  [label="DDG: copied"];
"1000239" -> "1000236"  [label="AST: "];
"1000240" -> "1000239"  [label="AST: "];
"1000264" -> "1000239"  [label="CFG: "];
"1000239" -> "1000480"  [label="DDG: skb_copy_datagram_msg(skb, sizeof(struct udphdr),\n\t\t\t\t\t    msg, copied)"];
"1000239" -> "1000263"  [label="DDG: err"];
"1000263" -> "1000262"  [label="AST: "];
"1000263" -> "1000264"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000267" -> "1000263"  [label="CFG: "];
"1000294" -> "1000263"  [label="CFG: "];
"1000263" -> "1000480"  [label="DDG: err"];
"1000263" -> "1000480"  [label="DDG: unlikely(err)"];
"1000257" -> "1000263"  [label="DDG: err"];
"1000263" -> "1000427"  [label="DDG: err"];
"1000427" -> "1000110"  [label="AST: "];
"1000427" -> "1000428"  [label="CFG: "];
"1000428" -> "1000427"  [label="AST: "];
"1000480" -> "1000427"  [label="CFG: "];
"1000427" -> "1000480"  [label="DDG: <RET>"];
"1000428" -> "1000427"  [label="DDG: err"];
"1000419" -> "1000427"  [label="DDG: err"];
"1000257" -> "1000427"  [label="DDG: err"];
"1000412" -> "1000427"  [label="DDG: err"];
"1000266" -> "1000265"  [label="AST: "];
"1000266" -> "1000268"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="AST: "];
"1000271" -> "1000266"  [label="CFG: "];
"1000266" -> "1000480"  [label="DDG: udpv6_recvmsg"];
"1000266" -> "1000480"  [label="DDG: trace_kfree_skb(skb, udpv6_recvmsg)"];
"1000251" -> "1000266"  [label="DDG: skb"];
"1000266" -> "1000423"  [label="DDG: skb"];
"1000423" -> "1000110"  [label="AST: "];
"1000423" -> "1000425"  [label="CFG: "];
"1000424" -> "1000423"  [label="AST: "];
"1000425" -> "1000423"  [label="AST: "];
"1000426" -> "1000423"  [label="CFG: "];
"1000423" -> "1000480"  [label="DDG: skb_free_datagram_locked(sk, skb)"];
"1000423" -> "1000480"  [label="DDG: skb"];
"1000423" -> "1000480"  [label="DDG: sk"];
"1000281" -> "1000423"  [label="DDG: sk"];
"1000168" -> "1000423"  [label="DDG: sk"];
"1000408" -> "1000423"  [label="DDG: sk"];
"1000408" -> "1000423"  [label="DDG: skb"];
"1000309" -> "1000423"  [label="DDG: sk"];
"1000309" -> "1000423"  [label="DDG: skb"];
"1000386" -> "1000423"  [label="DDG: sk"];
"1000386" -> "1000423"  [label="DDG: skb"];
"1000287" -> "1000423"  [label="DDG: sk"];
"1000104" -> "1000423"  [label="DDG: sk"];
"1000372" -> "1000423"  [label="DDG: skb"];
"1000341" -> "1000423"  [label="DDG: skb"];
"1000397" -> "1000423"  [label="DDG: skb"];
"1000309" -> "1000110"  [label="AST: "];
"1000309" -> "1000312"  [label="CFG: "];
"1000310" -> "1000309"  [label="AST: "];
"1000311" -> "1000309"  [label="AST: "];
"1000312" -> "1000309"  [label="AST: "];
"1000315" -> "1000309"  [label="CFG: "];
"1000309" -> "1000480"  [label="DDG: msg"];
"1000309" -> "1000480"  [label="DDG: sock_recv_ts_and_drops(msg, sk, skb)"];
"1000251" -> "1000309"  [label="DDG: msg"];
"1000251" -> "1000309"  [label="DDG: skb"];
"1000105" -> "1000309"  [label="DDG: msg"];
"1000168" -> "1000309"  [label="DDG: sk"];
"1000305" -> "1000309"  [label="DDG: sk"];
"1000299" -> "1000309"  [label="DDG: sk"];
"1000104" -> "1000309"  [label="DDG: sk"];
"1000309" -> "1000328"  [label="DDG: skb"];
"1000309" -> "1000386"  [label="DDG: sk"];
"1000309" -> "1000386"  [label="DDG: msg"];
"1000309" -> "1000386"  [label="DDG: skb"];
"1000309" -> "1000397"  [label="DDG: msg"];
"1000309" -> "1000397"  [label="DDG: skb"];
"1000309" -> "1000408"  [label="DDG: sk"];
"1000309" -> "1000408"  [label="DDG: msg"];
"1000309" -> "1000408"  [label="DDG: skb"];
"1000328" -> "1000327"  [label="AST: "];
"1000328" -> "1000329"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000330" -> "1000328"  [label="CFG: "];
"1000328" -> "1000341"  [label="DDG: skb"];
"1000328" -> "1000360"  [label="DDG: skb"];
"1000341" -> "1000340"  [label="AST: "];
"1000341" -> "1000342"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="CFG: "];
"1000341" -> "1000386"  [label="DDG: skb"];
"1000341" -> "1000397"  [label="DDG: skb"];
"1000341" -> "1000408"  [label="DDG: skb"];
"1000386" -> "1000380"  [label="AST: "];
"1000386" -> "1000389"  [label="CFG: "];
"1000387" -> "1000386"  [label="AST: "];
"1000388" -> "1000386"  [label="AST: "];
"1000389" -> "1000386"  [label="AST: "];
"1000391" -> "1000386"  [label="CFG: "];
"1000386" -> "1000480"  [label="DDG: msg"];
"1000386" -> "1000480"  [label="DDG: ip6_datagram_recv_common_ctl(sk, msg, skb)"];
"1000104" -> "1000386"  [label="DDG: sk"];
"1000105" -> "1000386"  [label="DDG: msg"];
"1000372" -> "1000386"  [label="DDG: skb"];
"1000386" -> "1000397"  [label="DDG: msg"];
"1000386" -> "1000397"  [label="DDG: skb"];
"1000386" -> "1000408"  [label="DDG: sk"];
"1000386" -> "1000408"  [label="DDG: msg"];
"1000386" -> "1000408"  [label="DDG: skb"];
"1000397" -> "1000393"  [label="AST: "];
"1000397" -> "1000399"  [label="CFG: "];
"1000398" -> "1000397"  [label="AST: "];
"1000399" -> "1000397"  [label="AST: "];
"1000413" -> "1000397"  [label="CFG: "];
"1000397" -> "1000480"  [label="DDG: ip_cmsg_recv(msg, skb)"];
"1000397" -> "1000480"  [label="DDG: msg"];
"1000105" -> "1000397"  [label="DDG: msg"];
"1000372" -> "1000397"  [label="DDG: skb"];
"1000408" -> "1000402"  [label="AST: "];
"1000408" -> "1000411"  [label="CFG: "];
"1000409" -> "1000408"  [label="AST: "];
"1000410" -> "1000408"  [label="AST: "];
"1000411" -> "1000408"  [label="AST: "];
"1000413" -> "1000408"  [label="CFG: "];
"1000408" -> "1000480"  [label="DDG: ip6_datagram_recv_specific_ctl(sk, msg, skb)"];
"1000408" -> "1000480"  [label="DDG: msg"];
"1000104" -> "1000408"  [label="DDG: sk"];
"1000105" -> "1000408"  [label="DDG: msg"];
"1000372" -> "1000408"  [label="DDG: skb"];
"1000360" -> "1000359"  [label="AST: "];
"1000360" -> "1000361"  [label="CFG: "];
"1000361" -> "1000360"  [label="AST: "];
"1000362" -> "1000360"  [label="CFG: "];
"1000360" -> "1000372"  [label="DDG: skb"];
"1000372" -> "1000367"  [label="AST: "];
"1000372" -> "1000373"  [label="CFG: "];
"1000373" -> "1000372"  [label="AST: "];
"1000367" -> "1000372"  [label="CFG: "];
"1000372" -> "1000367"  [label="DDG: skb"];
"1000367" -> "1000363"  [label="AST: "];
"1000368" -> "1000367"  [label="AST: "];
"1000363" -> "1000367"  [label="CFG: "];
"1000367" -> "1000480"  [label="DDG: &sin6->sin6_addr"];
"1000367" -> "1000480"  [label="DDG: inet6_iif(skb)"];
"1000367" -> "1000363"  [label="DDG: &sin6->sin6_addr"];
"1000367" -> "1000363"  [label="DDG: inet6_iif(skb)"];
"1000355" -> "1000367"  [label="DDG: sin6->sin6_addr"];
"1000363" -> "1000354"  [label="AST: "];
"1000364" -> "1000363"  [label="AST: "];
"1000376" -> "1000363"  [label="CFG: "];
"1000363" -> "1000480"  [label="DDG: sin6->sin6_scope_id"];
"1000363" -> "1000480"  [label="DDG: ipv6_iface_scope_id(&sin6->sin6_addr,\n\t\t\t\t\t\t    inet6_iif(skb))"];
"1000412" -> "1000110"  [label="AST: "];
"1000412" -> "1000414"  [label="CFG: "];
"1000413" -> "1000412"  [label="AST: "];
"1000414" -> "1000412"  [label="AST: "];
"1000417" -> "1000412"  [label="CFG: "];
"1000412" -> "1000480"  [label="DDG: copied"];
"1000412" -> "1000480"  [label="DDG: err"];
"1000419" -> "1000415"  [label="AST: "];
"1000419" -> "1000421"  [label="CFG: "];
"1000420" -> "1000419"  [label="AST: "];
"1000421" -> "1000419"  [label="AST: "];
"1000422" -> "1000419"  [label="CFG: "];
"1000419" -> "1000480"  [label="DDG: err"];
"1000419" -> "1000480"  [label="DDG: ulen"];
"1000206" -> "1000205"  [label="AST: "];
"1000206" -> "1000208"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000206"  [label="AST: "];
"1000211" -> "1000206"  [label="CFG: "];
"1000215" -> "1000206"  [label="CFG: "];
}
