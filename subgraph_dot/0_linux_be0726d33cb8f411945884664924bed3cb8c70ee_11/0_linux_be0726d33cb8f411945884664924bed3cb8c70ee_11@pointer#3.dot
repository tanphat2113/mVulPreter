digraph "0_linux_be0726d33cb8f411945884664924bed3cb8c70ee_11@pointer" {
"1000166" [label="(Call,unlock_buffer(new_bh))"];
"1000155" [label="(Call,ea_bdebug(new_bh, \"reusing block\"))"];
"1000146" [label="(Call,new_bh == old_bh)"];
"1000137" [label="(Call,new_bh = ext2_xattr_cache_find(inode, header))"];
"1000139" [label="(Call,ext2_xattr_cache_find(inode, header))"];
"1000112" [label="(MethodParameterIn,struct inode *inode)"];
"1000114" [label="(MethodParameterIn,struct ext2_xattr_header *header)"];
"1000113" [label="(MethodParameterIn,struct buffer_head *old_bh)"];
"1000416" [label="(Call,brelse(new_bh))"];
"1000384" [label="(Call,get_bh(old_bh))"];
"1000336" [label="(Call,mark_inode_dirty(inode))"];
"1000157" [label="(Literal,\"reusing block\")"];
"1000154" [label="(Block,)"];
"1000344" [label="(Call,old_bh != new_bh)"];
"1000195" [label="(Call,new_bh = old_bh)"];
"1000141" [label="(Identifier,header)"];
"1000272" [label="(Call,IS_SYNC(inode))"];
"1000373" [label="(Call,ea_bdebug(old_bh, \"freeing\"))"];
"1000138" [label="(Identifier,new_bh)"];
"1000283" [label="(Call,buffer_req(new_bh))"];
"1000140" [label="(Identifier,inode)"];
"1000323" [label="(Call,new_bh && new_bh != old_bh)"];
"1000353" [label="(Call,HDR(old_bh))"];
"1000168" [label="(ControlStructure,goto cleanup;)"];
"1000156" [label="(Identifier,new_bh)"];
"1000348" [label="(Call,lock_buffer(old_bh))"];
"1000115" [label="(Block,)"];
"1000417" [label="(Identifier,new_bh)"];
"1000155" [label="(Call,ea_bdebug(new_bh, \"reusing block\"))"];
"1000405" [label="(Call,ea_bdebug(old_bh, \"refcount now=%d\",\n\t\t\t\tle32_to_cpu(HDR(old_bh)->h_refcount)))"];
"1000136" [label="(Block,)"];
"1000386" [label="(Call,bforget(old_bh))"];
"1000325" [label="(Call,new_bh != old_bh)"];
"1000332" [label="(Call,mark_inode_dirty(inode))"];
"1000150" [label="(Call,ea_bdebug(new_bh, \"keeping this block\"))"];
"1000151" [label="(Identifier,new_bh)"];
"1000113" [label="(MethodParameterIn,struct buffer_head *old_bh)"];
"1000192" [label="(Call,HDR(old_bh))"];
"1000239" [label="(Call,ext2_free_blocks(inode, block, 1))"];
"1000147" [label="(Identifier,new_bh)"];
"1000160" [label="(Call,dquot_alloc_block(inode, 1))"];
"1000311" [label="(Call,sync_inode_metadata(inode, 1))"];
"1000165" [label="(Block,)"];
"1000112" [label="(MethodParameterIn,struct inode *inode)"];
"1000382" [label="(Call,mark_inode_dirty(inode))"];
"1000252" [label="(Call,memcpy(new_bh->b_data, header, new_bh->b_size))"];
"1000211" [label="(Call,EXT2_I(inode))"];
"1000401" [label="(Call,mark_inode_dirty(inode))"];
"1000145" [label="(ControlStructure,if (new_bh == old_bh))"];
"1000413" [label="(Call,unlock_buffer(old_bh))"];
"1000342" [label="(Call,old_bh && old_bh != new_bh)"];
"1000376" [label="(Call,ext2_free_blocks(inode, old_bh->b_blocknr, 1))"];
"1000364" [label="(Call,HDR(old_bh))"];
"1000398" [label="(Call,dquot_free_block_nodirty(inode, 1))"];
"1000225" [label="(Call,ea_idebug(inode, \"creating block %d\", block))"];
"1000329" [label="(Call,dquot_free_block_nodirty(inode, 1))"];
"1000306" [label="(Call,IS_SYNC(inode))"];
"1000139" [label="(Call,ext2_xattr_cache_find(inode, header))"];
"1000167" [label="(Identifier,new_bh)"];
"1000137" [label="(Call,new_bh = ext2_xattr_cache_find(inode, header))"];
"1000420" [label="(MethodReturn,RET)"];
"1000236" [label="(Call,!new_bh)"];
"1000393" [label="(Call,HDR(old_bh))"];
"1000217" [label="(Call,ext2_new_block(inode, goal, &error))"];
"1000148" [label="(Identifier,old_bh)"];
"1000114" [label="(MethodParameterIn,struct ext2_xattr_header *header)"];
"1000419" [label="(Identifier,error)"];
"1000286" [label="(Call,buffer_uptodate(new_bh))"];
"1000403" [label="(Call,mark_buffer_dirty(old_bh))"];
"1000146" [label="(Call,new_bh == old_bh)"];
"1000410" [label="(Call,HDR(old_bh))"];
"1000188" [label="(Call,old_bh && header == HDR(old_bh))"];
"1000166" [label="(Call,unlock_buffer(new_bh))"];
"1000159" [label="(Identifier,error)"];
"1000143" [label="(Identifier,new_bh)"];
"1000243" [label="(Call,mark_inode_dirty(inode))"];
"1000416" [label="(Call,brelse(new_bh))"];
"1000291" [label="(Call,EXT2_I(inode))"];
"1000190" [label="(Call,header == HDR(old_bh))"];
"1000172" [label="(Call,HDR(new_bh))"];
"1000166" -> "1000165"  [label="AST: "];
"1000166" -> "1000167"  [label="CFG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000168" -> "1000166"  [label="CFG: "];
"1000166" -> "1000420"  [label="DDG: "];
"1000155" -> "1000166"  [label="DDG: "];
"1000166" -> "1000416"  [label="DDG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000157" -> "1000155"  [label="AST: "];
"1000159" -> "1000155"  [label="CFG: "];
"1000155" -> "1000420"  [label="DDG: "];
"1000146" -> "1000155"  [label="DDG: "];
"1000155" -> "1000172"  [label="DDG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000151" -> "1000146"  [label="CFG: "];
"1000156" -> "1000146"  [label="CFG: "];
"1000146" -> "1000420"  [label="DDG: "];
"1000146" -> "1000420"  [label="DDG: "];
"1000137" -> "1000146"  [label="DDG: "];
"1000113" -> "1000146"  [label="DDG: "];
"1000146" -> "1000150"  [label="DDG: "];
"1000146" -> "1000325"  [label="DDG: "];
"1000146" -> "1000342"  [label="DDG: "];
"1000146" -> "1000344"  [label="DDG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000143" -> "1000137"  [label="CFG: "];
"1000137" -> "1000420"  [label="DDG: "];
"1000139" -> "1000137"  [label="DDG: "];
"1000139" -> "1000137"  [label="DDG: "];
"1000137" -> "1000416"  [label="DDG: "];
"1000139" -> "1000141"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="AST: "];
"1000139" -> "1000420"  [label="DDG: "];
"1000112" -> "1000139"  [label="DDG: "];
"1000114" -> "1000139"  [label="DDG: "];
"1000139" -> "1000160"  [label="DDG: "];
"1000139" -> "1000190"  [label="DDG: "];
"1000139" -> "1000211"  [label="DDG: "];
"1000139" -> "1000252"  [label="DDG: "];
"1000139" -> "1000272"  [label="DDG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000112" -> "1000420"  [label="DDG: "];
"1000112" -> "1000160"  [label="DDG: "];
"1000112" -> "1000211"  [label="DDG: "];
"1000112" -> "1000217"  [label="DDG: "];
"1000112" -> "1000225"  [label="DDG: "];
"1000112" -> "1000239"  [label="DDG: "];
"1000112" -> "1000243"  [label="DDG: "];
"1000112" -> "1000272"  [label="DDG: "];
"1000112" -> "1000291"  [label="DDG: "];
"1000112" -> "1000306"  [label="DDG: "];
"1000112" -> "1000311"  [label="DDG: "];
"1000112" -> "1000329"  [label="DDG: "];
"1000112" -> "1000332"  [label="DDG: "];
"1000112" -> "1000336"  [label="DDG: "];
"1000112" -> "1000376"  [label="DDG: "];
"1000112" -> "1000382"  [label="DDG: "];
"1000112" -> "1000398"  [label="DDG: "];
"1000112" -> "1000401"  [label="DDG: "];
"1000114" -> "1000111"  [label="AST: "];
"1000114" -> "1000420"  [label="DDG: "];
"1000114" -> "1000190"  [label="DDG: "];
"1000114" -> "1000252"  [label="DDG: "];
"1000113" -> "1000111"  [label="AST: "];
"1000113" -> "1000420"  [label="DDG: "];
"1000113" -> "1000188"  [label="DDG: "];
"1000113" -> "1000192"  [label="DDG: "];
"1000113" -> "1000195"  [label="DDG: "];
"1000113" -> "1000325"  [label="DDG: "];
"1000113" -> "1000342"  [label="DDG: "];
"1000113" -> "1000344"  [label="DDG: "];
"1000113" -> "1000348"  [label="DDG: "];
"1000113" -> "1000353"  [label="DDG: "];
"1000113" -> "1000364"  [label="DDG: "];
"1000113" -> "1000373"  [label="DDG: "];
"1000113" -> "1000384"  [label="DDG: "];
"1000113" -> "1000386"  [label="DDG: "];
"1000113" -> "1000393"  [label="DDG: "];
"1000113" -> "1000403"  [label="DDG: "];
"1000113" -> "1000405"  [label="DDG: "];
"1000113" -> "1000410"  [label="DDG: "];
"1000113" -> "1000413"  [label="DDG: "];
"1000416" -> "1000115"  [label="AST: "];
"1000416" -> "1000417"  [label="CFG: "];
"1000417" -> "1000416"  [label="AST: "];
"1000419" -> "1000416"  [label="CFG: "];
"1000416" -> "1000420"  [label="DDG: "];
"1000416" -> "1000420"  [label="DDG: "];
"1000236" -> "1000416"  [label="DDG: "];
"1000283" -> "1000416"  [label="DDG: "];
"1000286" -> "1000416"  [label="DDG: "];
"1000323" -> "1000416"  [label="DDG: "];
"1000344" -> "1000416"  [label="DDG: "];
}
