digraph "0_libplist_7391a506352c009fe044dead7baad9e22dd279ee@API" {
"1000182" [label="(Call,sizeof(char) * (filestats.st_size + 1))"];
"1000166" [label="(Call,filestats.st_size < 8)"];
"1000181" [label="(Call,malloc(sizeof(char) * (filestats.st_size + 1)))"];
"1000179" [label="(Call,(char *) malloc(sizeof(char) * (filestats.st_size + 1)))"];
"1000177" [label="(Call,plist_entire = (char *) malloc(sizeof(char) * (filestats.st_size + 1)))"];
"1000192" [label="(Call,fread(plist_entire, sizeof(char), filestats.st_size, iplist))"];
"1000190" [label="(Call,read_size = fread(plist_entire, sizeof(char), filestats.st_size, iplist))"];
"1000210" [label="(Call,plist_from_bin(plist_entire, read_size, &root_node))"];
"1000236" [label="(Call,free(plist_entire))"];
"1000223" [label="(Call,plist_from_xml(plist_entire, read_size, &root_node))"];
"1000200" [label="(Call,fclose(iplist))"];
"1000204" [label="(Call,memcmp(plist_entire, \"bplist00\", 8))"];
"1000203" [label="(Call,memcmp(plist_entire, \"bplist00\", 8) == 0)"];
"1000182" [label="(Call,sizeof(char) * (filestats.st_size + 1))"];
"1000166" [label="(Call,filestats.st_size < 8)"];
"1000196" [label="(Call,filestats.st_size)"];
"1000224" [label="(Identifier,plist_entire)"];
"1000191" [label="(Identifier,read_size)"];
"1000177" [label="(Call,plist_entire = (char *) malloc(sizeof(char) * (filestats.st_size + 1)))"];
"1000223" [label="(Call,plist_from_xml(plist_entire, read_size, &root_node))"];
"1000194" [label="(Call,sizeof(char))"];
"1000167" [label="(Call,filestats.st_size)"];
"1000212" [label="(Identifier,read_size)"];
"1000222" [label="(Block,)"];
"1000205" [label="(Identifier,plist_entire)"];
"1000225" [label="(Identifier,read_size)"];
"1000206" [label="(Literal,\"bplist00\")"];
"1000204" [label="(Call,memcmp(plist_entire, \"bplist00\", 8))"];
"1000213" [label="(Call,&root_node)"];
"1000210" [label="(Call,plist_from_bin(plist_entire, read_size, &root_node))"];
"1000165" [label="(ControlStructure,if (filestats.st_size < 8))"];
"1000190" [label="(Call,read_size = fread(plist_entire, sizeof(char), filestats.st_size, iplist))"];
"1000216" [label="(Identifier,root_node)"];
"1000203" [label="(Call,memcmp(plist_entire, \"bplist00\", 8) == 0)"];
"1000200" [label="(Call,fclose(iplist))"];
"1000211" [label="(Identifier,plist_entire)"];
"1000183" [label="(Call,sizeof(char))"];
"1000237" [label="(Identifier,plist_entire)"];
"1000178" [label="(Identifier,plist_entire)"];
"1000229" [label="(Identifier,root_node)"];
"1000207" [label="(Literal,8)"];
"1000103" [label="(Block,)"];
"1000202" [label="(ControlStructure,if (memcmp(plist_entire, \"bplist00\", 8) == 0))"];
"1000201" [label="(Identifier,iplist)"];
"1000179" [label="(Call,(char *) malloc(sizeof(char) * (filestats.st_size + 1)))"];
"1000226" [label="(Call,&root_node)"];
"1000288" [label="(MethodReturn,int)"];
"1000192" [label="(Call,fread(plist_entire, sizeof(char), filestats.st_size, iplist))"];
"1000170" [label="(Literal,8)"];
"1000152" [label="(Call,!iplist)"];
"1000173" [label="(Literal,\"ERROR: Input file is too small to contain valid plist data.\n\")"];
"1000209" [label="(Block,)"];
"1000185" [label="(Call,filestats.st_size + 1)"];
"1000199" [label="(Identifier,iplist)"];
"1000193" [label="(Identifier,plist_entire)"];
"1000236" [label="(Call,free(plist_entire))"];
"1000208" [label="(Literal,0)"];
"1000239" [label="(Identifier,plist_out)"];
"1000181" [label="(Call,malloc(sizeof(char) * (filestats.st_size + 1)))"];
"1000182" -> "1000181"  [label="AST: "];
"1000182" -> "1000185"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000185" -> "1000182"  [label="AST: "];
"1000181" -> "1000182"  [label="CFG: "];
"1000182" -> "1000288"  [label="DDG: "];
"1000182" -> "1000181"  [label="DDG: "];
"1000166" -> "1000182"  [label="DDG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000166" -> "1000170"  [label="CFG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000170" -> "1000166"  [label="AST: "];
"1000173" -> "1000166"  [label="CFG: "];
"1000178" -> "1000166"  [label="CFG: "];
"1000166" -> "1000288"  [label="DDG: "];
"1000166" -> "1000288"  [label="DDG: "];
"1000166" -> "1000185"  [label="DDG: "];
"1000166" -> "1000192"  [label="DDG: "];
"1000181" -> "1000179"  [label="AST: "];
"1000179" -> "1000181"  [label="CFG: "];
"1000181" -> "1000288"  [label="DDG: "];
"1000181" -> "1000179"  [label="DDG: "];
"1000179" -> "1000177"  [label="AST: "];
"1000180" -> "1000179"  [label="AST: "];
"1000177" -> "1000179"  [label="CFG: "];
"1000179" -> "1000288"  [label="DDG: "];
"1000179" -> "1000177"  [label="DDG: "];
"1000177" -> "1000103"  [label="AST: "];
"1000178" -> "1000177"  [label="AST: "];
"1000191" -> "1000177"  [label="CFG: "];
"1000177" -> "1000288"  [label="DDG: "];
"1000177" -> "1000192"  [label="DDG: "];
"1000192" -> "1000190"  [label="AST: "];
"1000192" -> "1000199"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000194" -> "1000192"  [label="AST: "];
"1000196" -> "1000192"  [label="AST: "];
"1000199" -> "1000192"  [label="AST: "];
"1000190" -> "1000192"  [label="CFG: "];
"1000192" -> "1000288"  [label="DDG: "];
"1000192" -> "1000190"  [label="DDG: "];
"1000192" -> "1000190"  [label="DDG: "];
"1000192" -> "1000190"  [label="DDG: "];
"1000152" -> "1000192"  [label="DDG: "];
"1000192" -> "1000200"  [label="DDG: "];
"1000192" -> "1000204"  [label="DDG: "];
"1000190" -> "1000103"  [label="AST: "];
"1000191" -> "1000190"  [label="AST: "];
"1000201" -> "1000190"  [label="CFG: "];
"1000190" -> "1000288"  [label="DDG: "];
"1000190" -> "1000210"  [label="DDG: "];
"1000190" -> "1000223"  [label="DDG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000210" -> "1000213"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="AST: "];
"1000213" -> "1000210"  [label="AST: "];
"1000216" -> "1000210"  [label="CFG: "];
"1000210" -> "1000288"  [label="DDG: "];
"1000210" -> "1000288"  [label="DDG: "];
"1000210" -> "1000288"  [label="DDG: "];
"1000204" -> "1000210"  [label="DDG: "];
"1000210" -> "1000236"  [label="DDG: "];
"1000236" -> "1000103"  [label="AST: "];
"1000236" -> "1000237"  [label="CFG: "];
"1000237" -> "1000236"  [label="AST: "];
"1000239" -> "1000236"  [label="CFG: "];
"1000236" -> "1000288"  [label="DDG: "];
"1000223" -> "1000236"  [label="DDG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000223" -> "1000226"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000225" -> "1000223"  [label="AST: "];
"1000226" -> "1000223"  [label="AST: "];
"1000229" -> "1000223"  [label="CFG: "];
"1000223" -> "1000288"  [label="DDG: "];
"1000223" -> "1000288"  [label="DDG: "];
"1000223" -> "1000288"  [label="DDG: "];
"1000204" -> "1000223"  [label="DDG: "];
"1000200" -> "1000103"  [label="AST: "];
"1000200" -> "1000201"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000205" -> "1000200"  [label="CFG: "];
"1000200" -> "1000288"  [label="DDG: "];
"1000200" -> "1000288"  [label="DDG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000204" -> "1000207"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000206" -> "1000204"  [label="AST: "];
"1000207" -> "1000204"  [label="AST: "];
"1000208" -> "1000204"  [label="CFG: "];
"1000204" -> "1000203"  [label="DDG: "];
"1000204" -> "1000203"  [label="DDG: "];
"1000204" -> "1000203"  [label="DDG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000203" -> "1000208"  [label="CFG: "];
"1000208" -> "1000203"  [label="AST: "];
"1000211" -> "1000203"  [label="CFG: "];
"1000224" -> "1000203"  [label="CFG: "];
"1000203" -> "1000288"  [label="DDG: "];
"1000203" -> "1000288"  [label="DDG: "];
}
