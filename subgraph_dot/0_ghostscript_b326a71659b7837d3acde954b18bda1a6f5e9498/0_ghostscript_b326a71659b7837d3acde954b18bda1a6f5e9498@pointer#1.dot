digraph "0_ghostscript_b326a71659b7837d3acde954b18bda1a6f5e9498@pointer" {
"1000148" [label="(Call,cs_num_components(pcs))"];
"1000125" [label="(Call,*  pcs = gs_currentcolorspace(igs))"];
"1000127" [label="(Call,gs_currentcolorspace(igs))"];
"1000145" [label="(Call,(n_comps = cs_num_components(pcs)) < 0)"];
"1000146" [label="(Call,n_comps = cs_num_components(pcs))"];
"1000154" [label="(Call,-n_comps)"];
"1000152" [label="(Call,n_comps = -n_comps)"];
"1000201" [label="(Call,n_comps - 1)"];
"1000194" [label="(Call,n_numeric_comps = ( pattern_instance_uses_base_space(cc.pattern)\n                      ? n_comps - 1\n                      : 0 ))"];
"1000222" [label="(Call,float_params(op - num_offset, n_numeric_comps, cc.paint.values))"];
"1000220" [label="(Call,code = float_params(op - num_offset, n_numeric_comps, cc.paint.values))"];
"1000233" [label="(Call,code < 0)"];
"1000236" [label="(Return,return code;)"];
"1000238" [label="(Call,memset(cc.paint.values + n_numeric_comps, 0,\n            sizeof(cc.paint.values) - sizeof(*cc.paint.values)*n_numeric_comps))"];
"1000239" [label="(Call,cc.paint.values + n_numeric_comps)"];
"1000254" [label="(Call,sizeof(*cc.paint.values)*n_numeric_comps)"];
"1000247" [label="(Call,sizeof(cc.paint.values) - sizeof(*cc.paint.values)*n_numeric_comps)"];
"1000290" [label="(Call,space->validatecomponents(i_ctx_p,\n                                         &istate->colorspace[0].array,\n                                         cc.paint.values, n_numeric_comps))"];
"1000288" [label="(Call,code = space->validatecomponents(i_ctx_p,\n                                         &istate->colorspace[0].array,\n                                         cc.paint.values, n_numeric_comps))"];
"1000307" [label="(Call,code < 0)"];
"1000310" [label="(Return,return code;)"];
"1000323" [label="(Call,n_comps > n_numeric_comps)"];
"1000337" [label="(Call,validate_spaces(i_ctx_p, &istate->colorspace[0].array, &depth))"];
"1000335" [label="(Call,code = validate_spaces(i_ctx_p, &istate->colorspace[0].array, &depth))"];
"1000350" [label="(Call,code < 0)"];
"1000353" [label="(Return,return code;)"];
"1000386" [label="(Call,*ep = istate->colorspace[0].array)"];
"1000196" [label="(Call,pattern_instance_uses_base_space(cc.pattern)\n                      ? n_comps - 1\n                      : 0)"];
"1000217" [label="(Call,n_numeric_comps = n_comps)"];
"1000155" [label="(Identifier,n_comps)"];
"1000310" [label="(Return,return code;)"];
"1000336" [label="(Identifier,code)"];
"1000386" [label="(Call,*ep = istate->colorspace[0].array)"];
"1000235" [label="(Literal,0)"];
"1000311" [label="(Identifier,code)"];
"1000146" [label="(Call,n_comps = cs_num_components(pcs))"];
"1000234" [label="(Identifier,code)"];
"1000216" [label="(ControlStructure,else)"];
"1000237" [label="(Identifier,code)"];
"1000196" [label="(Call,pattern_instance_uses_base_space(cc.pattern)\n                      ? n_comps - 1\n                      : 0)"];
"1000226" [label="(Identifier,n_numeric_comps)"];
"1000305" [label="(Identifier,n_numeric_comps)"];
"1000232" [label="(ControlStructure,if (code < 0))"];
"1000197" [label="(Call,pattern_instance_uses_base_space(cc.pattern))"];
"1000389" [label="(Call,istate->colorspace[0].array)"];
"1000118" [label="(Block,)"];
"1000291" [label="(Identifier,i_ctx_p)"];
"1000227" [label="(Call,cc.paint.values)"];
"1000322" [label="(ControlStructure,if (n_comps > n_numeric_comps))"];
"1000158" [label="(Identifier,op)"];
"1000220" [label="(Call,code = float_params(op - num_offset, n_numeric_comps, cc.paint.values))"];
"1000236" [label="(Return,return code;)"];
"1000262" [label="(Identifier,n_numeric_comps)"];
"1000218" [label="(Identifier,n_numeric_comps)"];
"1000151" [label="(Block,)"];
"1000255" [label="(Call,sizeof(*cc.paint.values))"];
"1000247" [label="(Call,sizeof(cc.paint.values) - sizeof(*cc.paint.values)*n_numeric_comps)"];
"1000323" [label="(Call,n_comps > n_numeric_comps)"];
"1000125" [label="(Call,*  pcs = gs_currentcolorspace(igs))"];
"1000239" [label="(Call,cc.paint.values + n_numeric_comps)"];
"1000264" [label="(Identifier,code)"];
"1000353" [label="(Return,return code;)"];
"1000179" [label="(Block,)"];
"1000206" [label="(Call,n_numeric_comps = 0)"];
"1000350" [label="(Call,code < 0)"];
"1000288" [label="(Call,code = space->validatecomponents(i_ctx_p,\n                                         &istate->colorspace[0].array,\n                                         cc.paint.values, n_numeric_comps))"];
"1000397" [label="(Identifier,setcolor_cont)"];
"1000203" [label="(Literal,1)"];
"1000356" [label="(Literal,5)"];
"1000337" [label="(Call,validate_spaces(i_ctx_p, &istate->colorspace[0].array, &depth))"];
"1000347" [label="(Call,&depth)"];
"1000339" [label="(Call,&istate->colorspace[0].array)"];
"1000349" [label="(ControlStructure,if (code < 0))"];
"1000153" [label="(Identifier,n_comps)"];
"1000127" [label="(Call,gs_currentcolorspace(igs))"];
"1000335" [label="(Call,code = validate_spaces(i_ctx_p, &istate->colorspace[0].array, &depth))"];
"1000308" [label="(Identifier,code)"];
"1000152" [label="(Call,n_comps = -n_comps)"];
"1000147" [label="(Identifier,n_comps)"];
"1000148" [label="(Call,cs_num_components(pcs))"];
"1000242" [label="(Identifier,cc)"];
"1000307" [label="(Call,code < 0)"];
"1000223" [label="(Call,op - num_offset)"];
"1000128" [label="(Identifier,igs)"];
"1000150" [label="(Literal,0)"];
"1000117" [label="(MethodParameterIn,i_ctx_t * i_ctx_p)"];
"1000214" [label="(Identifier,num_offset)"];
"1000287" [label="(Block,)"];
"1000330" [label="(Identifier,istate)"];
"1000195" [label="(Identifier,n_numeric_comps)"];
"1000351" [label="(Identifier,code)"];
"1000254" [label="(Call,sizeof(*cc.paint.values)*n_numeric_comps)"];
"1000219" [label="(Identifier,n_comps)"];
"1000325" [label="(Identifier,n_numeric_comps)"];
"1000315" [label="(Identifier,code)"];
"1000240" [label="(Call,cc.paint.values)"];
"1000316" [label="(Call,gs_setcolor(igs, &cc))"];
"1000233" [label="(Call,code < 0)"];
"1000246" [label="(Literal,0)"];
"1000245" [label="(Identifier,n_numeric_comps)"];
"1000248" [label="(Call,sizeof(cc.paint.values))"];
"1000134" [label="(Identifier,num_offset)"];
"1000221" [label="(Identifier,code)"];
"1000217" [label="(Call,n_numeric_comps = n_comps)"];
"1000202" [label="(Identifier,n_comps)"];
"1000300" [label="(Call,cc.paint.values)"];
"1000194" [label="(Call,n_numeric_comps = ( pattern_instance_uses_base_space(cc.pattern)\n                      ? n_comps - 1\n                      : 0 ))"];
"1000400" [label="(MethodReturn,RET)"];
"1000289" [label="(Identifier,code)"];
"1000354" [label="(Identifier,code)"];
"1000309" [label="(Literal,0)"];
"1000204" [label="(Literal,0)"];
"1000144" [label="(ControlStructure,if ((n_comps = cs_num_components(pcs)) < 0))"];
"1000387" [label="(Call,*ep)"];
"1000290" [label="(Call,space->validatecomponents(i_ctx_p,\n                                         &istate->colorspace[0].array,\n                                         cc.paint.values, n_numeric_comps))"];
"1000201" [label="(Call,n_comps - 1)"];
"1000338" [label="(Identifier,i_ctx_p)"];
"1000210" [label="(Call,n_numeric_comps = 0)"];
"1000238" [label="(Call,memset(cc.paint.values + n_numeric_comps, 0,\n            sizeof(cc.paint.values) - sizeof(*cc.paint.values)*n_numeric_comps))"];
"1000222" [label="(Call,float_params(op - num_offset, n_numeric_comps, cc.paint.values))"];
"1000352" [label="(Literal,0)"];
"1000154" [label="(Call,-n_comps)"];
"1000149" [label="(Identifier,pcs)"];
"1000292" [label="(Call,&istate->colorspace[0].array)"];
"1000324" [label="(Identifier,n_comps)"];
"1000306" [label="(ControlStructure,if (code < 0))"];
"1000265" [label="(Call,get_space_object(i_ctx_p, &istate->colorspace[0].array, &space))"];
"1000126" [label="(Identifier,pcs)"];
"1000145" [label="(Call,(n_comps = cs_num_components(pcs)) < 0)"];
"1000148" -> "1000146"  [label="AST: "];
"1000148" -> "1000149"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000148" -> "1000400"  [label="DDG: pcs"];
"1000148" -> "1000145"  [label="DDG: pcs"];
"1000148" -> "1000146"  [label="DDG: pcs"];
"1000125" -> "1000148"  [label="DDG: pcs"];
"1000125" -> "1000118"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000134" -> "1000125"  [label="CFG: "];
"1000125" -> "1000400"  [label="DDG: gs_currentcolorspace(igs)"];
"1000127" -> "1000125"  [label="DDG: igs"];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000127" -> "1000400"  [label="DDG: igs"];
"1000127" -> "1000316"  [label="DDG: igs"];
"1000145" -> "1000144"  [label="AST: "];
"1000145" -> "1000150"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000150" -> "1000145"  [label="AST: "];
"1000153" -> "1000145"  [label="CFG: "];
"1000218" -> "1000145"  [label="CFG: "];
"1000145" -> "1000400"  [label="DDG: (n_comps = cs_num_components(pcs)) < 0"];
"1000146" -> "1000145"  [label="DDG: n_comps"];
"1000147" -> "1000146"  [label="AST: "];
"1000150" -> "1000146"  [label="CFG: "];
"1000146" -> "1000400"  [label="DDG: cs_num_components(pcs)"];
"1000146" -> "1000154"  [label="DDG: n_comps"];
"1000146" -> "1000217"  [label="DDG: n_comps"];
"1000146" -> "1000323"  [label="DDG: n_comps"];
"1000154" -> "1000152"  [label="AST: "];
"1000154" -> "1000155"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000152" -> "1000154"  [label="CFG: "];
"1000154" -> "1000152"  [label="DDG: n_comps"];
"1000152" -> "1000151"  [label="AST: "];
"1000153" -> "1000152"  [label="AST: "];
"1000158" -> "1000152"  [label="CFG: "];
"1000152" -> "1000400"  [label="DDG: n_comps"];
"1000152" -> "1000400"  [label="DDG: -n_comps"];
"1000152" -> "1000201"  [label="DDG: n_comps"];
"1000152" -> "1000323"  [label="DDG: n_comps"];
"1000201" -> "1000196"  [label="AST: "];
"1000201" -> "1000203"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000203" -> "1000201"  [label="AST: "];
"1000196" -> "1000201"  [label="CFG: "];
"1000201" -> "1000400"  [label="DDG: n_comps"];
"1000201" -> "1000194"  [label="DDG: n_comps"];
"1000201" -> "1000194"  [label="DDG: 1"];
"1000201" -> "1000196"  [label="DDG: n_comps"];
"1000201" -> "1000196"  [label="DDG: 1"];
"1000201" -> "1000323"  [label="DDG: n_comps"];
"1000194" -> "1000179"  [label="AST: "];
"1000194" -> "1000196"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000196" -> "1000194"  [label="AST: "];
"1000214" -> "1000194"  [label="CFG: "];
"1000194" -> "1000400"  [label="DDG: pattern_instance_uses_base_space(cc.pattern)\n                      ? n_comps - 1\n                      : 0"];
"1000194" -> "1000222"  [label="DDG: n_numeric_comps"];
"1000222" -> "1000220"  [label="AST: "];
"1000222" -> "1000227"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000226" -> "1000222"  [label="AST: "];
"1000227" -> "1000222"  [label="AST: "];
"1000220" -> "1000222"  [label="CFG: "];
"1000222" -> "1000400"  [label="DDG: cc.paint.values"];
"1000222" -> "1000400"  [label="DDG: op - num_offset"];
"1000222" -> "1000400"  [label="DDG: n_numeric_comps"];
"1000222" -> "1000220"  [label="DDG: op - num_offset"];
"1000222" -> "1000220"  [label="DDG: n_numeric_comps"];
"1000222" -> "1000220"  [label="DDG: cc.paint.values"];
"1000223" -> "1000222"  [label="DDG: op"];
"1000223" -> "1000222"  [label="DDG: num_offset"];
"1000217" -> "1000222"  [label="DDG: n_numeric_comps"];
"1000206" -> "1000222"  [label="DDG: n_numeric_comps"];
"1000210" -> "1000222"  [label="DDG: n_numeric_comps"];
"1000222" -> "1000238"  [label="DDG: cc.paint.values"];
"1000222" -> "1000238"  [label="DDG: n_numeric_comps"];
"1000222" -> "1000239"  [label="DDG: cc.paint.values"];
"1000222" -> "1000239"  [label="DDG: n_numeric_comps"];
"1000222" -> "1000254"  [label="DDG: n_numeric_comps"];
"1000220" -> "1000118"  [label="AST: "];
"1000221" -> "1000220"  [label="AST: "];
"1000234" -> "1000220"  [label="CFG: "];
"1000220" -> "1000400"  [label="DDG: float_params(op - num_offset, n_numeric_comps, cc.paint.values)"];
"1000220" -> "1000233"  [label="DDG: code"];
"1000233" -> "1000232"  [label="AST: "];
"1000233" -> "1000235"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000235" -> "1000233"  [label="AST: "];
"1000237" -> "1000233"  [label="CFG: "];
"1000242" -> "1000233"  [label="CFG: "];
"1000233" -> "1000400"  [label="DDG: code < 0"];
"1000233" -> "1000400"  [label="DDG: code"];
"1000233" -> "1000236"  [label="DDG: code"];
"1000236" -> "1000232"  [label="AST: "];
"1000236" -> "1000237"  [label="CFG: "];
"1000237" -> "1000236"  [label="AST: "];
"1000400" -> "1000236"  [label="CFG: "];
"1000236" -> "1000400"  [label="DDG: <RET>"];
"1000237" -> "1000236"  [label="DDG: code"];
"1000238" -> "1000118"  [label="AST: "];
"1000238" -> "1000247"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000246" -> "1000238"  [label="AST: "];
"1000247" -> "1000238"  [label="AST: "];
"1000264" -> "1000238"  [label="CFG: "];
"1000238" -> "1000400"  [label="DDG: cc.paint.values + n_numeric_comps"];
"1000238" -> "1000400"  [label="DDG: memset(cc.paint.values + n_numeric_comps, 0,\n            sizeof(cc.paint.values) - sizeof(*cc.paint.values)*n_numeric_comps)"];
"1000238" -> "1000400"  [label="DDG: sizeof(cc.paint.values) - sizeof(*cc.paint.values)*n_numeric_comps"];
"1000247" -> "1000238"  [label="DDG: sizeof(*cc.paint.values)*n_numeric_comps"];
"1000239" -> "1000245"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000245" -> "1000239"  [label="AST: "];
"1000246" -> "1000239"  [label="CFG: "];
"1000254" -> "1000247"  [label="AST: "];
"1000254" -> "1000262"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000262" -> "1000254"  [label="AST: "];
"1000247" -> "1000254"  [label="CFG: "];
"1000254" -> "1000400"  [label="DDG: n_numeric_comps"];
"1000254" -> "1000247"  [label="DDG: n_numeric_comps"];
"1000254" -> "1000290"  [label="DDG: n_numeric_comps"];
"1000254" -> "1000323"  [label="DDG: n_numeric_comps"];
"1000248" -> "1000247"  [label="AST: "];
"1000247" -> "1000400"  [label="DDG: sizeof(*cc.paint.values)*n_numeric_comps"];
"1000290" -> "1000288"  [label="AST: "];
"1000290" -> "1000305"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000292" -> "1000290"  [label="AST: "];
"1000300" -> "1000290"  [label="AST: "];
"1000305" -> "1000290"  [label="AST: "];
"1000288" -> "1000290"  [label="CFG: "];
"1000290" -> "1000400"  [label="DDG: i_ctx_p"];
"1000290" -> "1000400"  [label="DDG: &istate->colorspace[0].array"];
"1000290" -> "1000400"  [label="DDG: n_numeric_comps"];
"1000290" -> "1000400"  [label="DDG: cc.paint.values"];
"1000290" -> "1000288"  [label="DDG: i_ctx_p"];
"1000290" -> "1000288"  [label="DDG: &istate->colorspace[0].array"];
"1000290" -> "1000288"  [label="DDG: cc.paint.values"];
"1000290" -> "1000288"  [label="DDG: n_numeric_comps"];
"1000265" -> "1000290"  [label="DDG: i_ctx_p"];
"1000265" -> "1000290"  [label="DDG: &istate->colorspace[0].array"];
"1000117" -> "1000290"  [label="DDG: i_ctx_p"];
"1000290" -> "1000323"  [label="DDG: n_numeric_comps"];
"1000290" -> "1000337"  [label="DDG: i_ctx_p"];
"1000290" -> "1000337"  [label="DDG: &istate->colorspace[0].array"];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000288"  [label="AST: "];
"1000308" -> "1000288"  [label="CFG: "];
"1000288" -> "1000400"  [label="DDG: space->validatecomponents(i_ctx_p,\n                                         &istate->colorspace[0].array,\n                                         cc.paint.values, n_numeric_comps)"];
"1000288" -> "1000307"  [label="DDG: code"];
"1000307" -> "1000306"  [label="AST: "];
"1000307" -> "1000309"  [label="CFG: "];
"1000308" -> "1000307"  [label="AST: "];
"1000309" -> "1000307"  [label="AST: "];
"1000311" -> "1000307"  [label="CFG: "];
"1000315" -> "1000307"  [label="CFG: "];
"1000307" -> "1000400"  [label="DDG: code < 0"];
"1000307" -> "1000400"  [label="DDG: code"];
"1000307" -> "1000310"  [label="DDG: code"];
"1000310" -> "1000306"  [label="AST: "];
"1000310" -> "1000311"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000400" -> "1000310"  [label="CFG: "];
"1000310" -> "1000400"  [label="DDG: <RET>"];
"1000311" -> "1000310"  [label="DDG: code"];
"1000323" -> "1000322"  [label="AST: "];
"1000323" -> "1000325"  [label="CFG: "];
"1000324" -> "1000323"  [label="AST: "];
"1000325" -> "1000323"  [label="AST: "];
"1000330" -> "1000323"  [label="CFG: "];
"1000336" -> "1000323"  [label="CFG: "];
"1000323" -> "1000400"  [label="DDG: n_comps"];
"1000323" -> "1000400"  [label="DDG: n_numeric_comps"];
"1000323" -> "1000400"  [label="DDG: n_comps > n_numeric_comps"];
"1000337" -> "1000335"  [label="AST: "];
"1000337" -> "1000347"  [label="CFG: "];
"1000338" -> "1000337"  [label="AST: "];
"1000339" -> "1000337"  [label="AST: "];
"1000347" -> "1000337"  [label="AST: "];
"1000335" -> "1000337"  [label="CFG: "];
"1000337" -> "1000400"  [label="DDG: &istate->colorspace[0].array"];
"1000337" -> "1000400"  [label="DDG: &depth"];
"1000337" -> "1000400"  [label="DDG: i_ctx_p"];
"1000337" -> "1000335"  [label="DDG: i_ctx_p"];
"1000337" -> "1000335"  [label="DDG: &istate->colorspace[0].array"];
"1000337" -> "1000335"  [label="DDG: &depth"];
"1000265" -> "1000337"  [label="DDG: i_ctx_p"];
"1000265" -> "1000337"  [label="DDG: &istate->colorspace[0].array"];
"1000117" -> "1000337"  [label="DDG: i_ctx_p"];
"1000337" -> "1000386"  [label="DDG: &istate->colorspace[0].array"];
"1000335" -> "1000118"  [label="AST: "];
"1000336" -> "1000335"  [label="AST: "];
"1000351" -> "1000335"  [label="CFG: "];
"1000335" -> "1000400"  [label="DDG: validate_spaces(i_ctx_p, &istate->colorspace[0].array, &depth)"];
"1000335" -> "1000350"  [label="DDG: code"];
"1000350" -> "1000349"  [label="AST: "];
"1000350" -> "1000352"  [label="CFG: "];
"1000351" -> "1000350"  [label="AST: "];
"1000352" -> "1000350"  [label="AST: "];
"1000354" -> "1000350"  [label="CFG: "];
"1000356" -> "1000350"  [label="CFG: "];
"1000350" -> "1000400"  [label="DDG: code"];
"1000350" -> "1000400"  [label="DDG: code < 0"];
"1000350" -> "1000353"  [label="DDG: code"];
"1000353" -> "1000349"  [label="AST: "];
"1000353" -> "1000354"  [label="CFG: "];
"1000354" -> "1000353"  [label="AST: "];
"1000400" -> "1000353"  [label="CFG: "];
"1000353" -> "1000400"  [label="DDG: <RET>"];
"1000354" -> "1000353"  [label="DDG: code"];
"1000386" -> "1000118"  [label="AST: "];
"1000386" -> "1000389"  [label="CFG: "];
"1000387" -> "1000386"  [label="AST: "];
"1000389" -> "1000386"  [label="AST: "];
"1000397" -> "1000386"  [label="CFG: "];
"1000386" -> "1000400"  [label="DDG: istate->colorspace[0].array"];
"1000386" -> "1000400"  [label="DDG: *ep"];
"1000196" -> "1000204"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000204" -> "1000196"  [label="AST: "];
"1000196" -> "1000400"  [label="DDG: n_comps - 1"];
"1000196" -> "1000400"  [label="DDG: pattern_instance_uses_base_space(cc.pattern)"];
"1000217" -> "1000216"  [label="AST: "];
"1000217" -> "1000219"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000219" -> "1000217"  [label="AST: "];
"1000221" -> "1000217"  [label="CFG: "];
"1000217" -> "1000400"  [label="DDG: n_comps"];
}
