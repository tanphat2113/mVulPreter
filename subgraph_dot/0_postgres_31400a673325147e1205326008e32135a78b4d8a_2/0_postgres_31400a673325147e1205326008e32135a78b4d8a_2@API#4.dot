digraph "0_postgres_31400a673325147e1205326008e32135a78b4d8a_2@API" {
"1000161" [label="(Call,pcount * sizeof(Pairs))"];
"1000149" [label="(Call,errmsg(\"number of pairs (%d) exceeds the maximum allowed (%d)\",\n\t\t\t\t\t pcount, (int) (MaxAllocSize / sizeof(Pairs))))"];
"1000138" [label="(Call,pcount > MaxAllocSize / sizeof(Pairs))"];
"1000135" [label="(Call,pcount < 0)"];
"1000121" [label="(Call,pcount == 0)"];
"1000115" [label="(Call,pcount = pq_getmsgint(buf, 4))"];
"1000117" [label="(Call,pq_getmsgint(buf, 4))"];
"1000109" [label="(Call,buf = (StringInfo) PG_GETARG_POINTER(0))"];
"1000111" [label="(Call,(StringInfo) PG_GETARG_POINTER(0))"];
"1000113" [label="(Call,PG_GETARG_POINTER(0))"];
"1000140" [label="(Call,MaxAllocSize / sizeof(Pairs))"];
"1000152" [label="(Call,(int) (MaxAllocSize / sizeof(Pairs)))"];
"1000154" [label="(Call,MaxAllocSize / sizeof(Pairs))"];
"1000160" [label="(Call,palloc(pcount * sizeof(Pairs)))"];
"1000158" [label="(Call,pairs = palloc(pcount * sizeof(Pairs)))"];
"1000280" [label="(Call,hstoreUniquePairs(pairs, pcount, &buflen))"];
"1000278" [label="(Call,pcount = hstoreUniquePairs(pairs, pcount, &buflen))"];
"1000287" [label="(Call,hstorePairs(pairs, pcount, buflen))"];
"1000285" [label="(Call,out = hstorePairs(pairs, pcount, buflen))"];
"1000291" [label="(Call,PG_RETURN_POINTER(out))"];
"1000169" [label="(Call,i < pcount)"];
"1000172" [label="(Call,++i)"];
"1000281" [label="(Identifier,pairs)"];
"1000154" [label="(Call,MaxAllocSize / sizeof(Pairs))"];
"1000141" [label="(Identifier,MaxAllocSize)"];
"1000162" [label="(Identifier,pcount)"];
"1000117" [label="(Call,pq_getmsgint(buf, 4))"];
"1000138" [label="(Call,pcount > MaxAllocSize / sizeof(Pairs))"];
"1000119" [label="(Literal,4)"];
"1000142" [label="(Call,sizeof(Pairs))"];
"1000140" [label="(Call,MaxAllocSize / sizeof(Pairs))"];
"1000283" [label="(Call,&buflen)"];
"1000282" [label="(Identifier,pcount)"];
"1000110" [label="(Identifier,buf)"];
"1000156" [label="(Call,sizeof(Pairs))"];
"1000115" [label="(Call,pcount = pq_getmsgint(buf, 4))"];
"1000123" [label="(Literal,0)"];
"1000163" [label="(Call,sizeof(Pairs))"];
"1000118" [label="(Identifier,buf)"];
"1000155" [label="(Identifier,MaxAllocSize)"];
"1000136" [label="(Identifier,pcount)"];
"1000173" [label="(Identifier,i)"];
"1000170" [label="(Identifier,i)"];
"1000161" [label="(Call,pcount * sizeof(Pairs))"];
"1000135" [label="(Call,pcount < 0)"];
"1000177" [label="(Identifier,rawlen)"];
"1000150" [label="(Literal,\"number of pairs (%d) exceeds the maximum allowed (%d)\")"];
"1000151" [label="(Identifier,pcount)"];
"1000113" [label="(Call,PG_GETARG_POINTER(0))"];
"1000160" [label="(Call,palloc(pcount * sizeof(Pairs)))"];
"1000169" [label="(Call,i < pcount)"];
"1000111" [label="(Call,(StringInfo) PG_GETARG_POINTER(0))"];
"1000280" [label="(Call,hstoreUniquePairs(pairs, pcount, &buflen))"];
"1000290" [label="(Identifier,buflen)"];
"1000165" [label="(ControlStructure,for (i = 0; i < pcount; ++i))"];
"1000134" [label="(Call,pcount < 0 || pcount > MaxAllocSize / sizeof(Pairs))"];
"1000287" [label="(Call,hstorePairs(pairs, pcount, buflen))"];
"1000149" [label="(Call,errmsg(\"number of pairs (%d) exceeds the maximum allowed (%d)\",\n\t\t\t\t\t pcount, (int) (MaxAllocSize / sizeof(Pairs))))"];
"1000122" [label="(Identifier,pcount)"];
"1000152" [label="(Call,(int) (MaxAllocSize / sizeof(Pairs)))"];
"1000292" [label="(Identifier,out)"];
"1000126" [label="(Identifier,out)"];
"1000102" [label="(Block,)"];
"1000178" [label="(Call,pq_getmsgint(buf, 4))"];
"1000158" [label="(Call,pairs = palloc(pcount * sizeof(Pairs)))"];
"1000116" [label="(Identifier,pcount)"];
"1000139" [label="(Identifier,pcount)"];
"1000120" [label="(ControlStructure,if (pcount == 0))"];
"1000167" [label="(Identifier,i)"];
"1000137" [label="(Literal,0)"];
"1000285" [label="(Call,out = hstorePairs(pairs, pcount, buflen))"];
"1000114" [label="(Literal,0)"];
"1000288" [label="(Identifier,pairs)"];
"1000286" [label="(Identifier,out)"];
"1000289" [label="(Identifier,pcount)"];
"1000146" [label="(Block,)"];
"1000278" [label="(Call,pcount = hstoreUniquePairs(pairs, pcount, &buflen))"];
"1000171" [label="(Identifier,pcount)"];
"1000159" [label="(Identifier,pairs)"];
"1000279" [label="(Identifier,pcount)"];
"1000166" [label="(Call,i = 0)"];
"1000121" [label="(Call,pcount == 0)"];
"1000291" [label="(Call,PG_RETURN_POINTER(out))"];
"1000109" [label="(Call,buf = (StringInfo) PG_GETARG_POINTER(0))"];
"1000172" [label="(Call,++i)"];
"1000293" [label="(MethodReturn,RET)"];
"1000144" [label="(Call,ereport(ERROR,\n\t\t\t\t(errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED),\n\t\t\t  errmsg(\"number of pairs (%d) exceeds the maximum allowed (%d)\",\n\t\t\t\t\t pcount, (int) (MaxAllocSize / sizeof(Pairs))))))"];
"1000161" -> "1000160"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000160" -> "1000161"  [label="CFG: "];
"1000161" -> "1000160"  [label="DDG: "];
"1000149" -> "1000161"  [label="DDG: "];
"1000138" -> "1000161"  [label="DDG: "];
"1000135" -> "1000161"  [label="DDG: "];
"1000161" -> "1000169"  [label="DDG: "];
"1000149" -> "1000146"  [label="AST: "];
"1000149" -> "1000152"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000152" -> "1000149"  [label="AST: "];
"1000144" -> "1000149"  [label="CFG: "];
"1000149" -> "1000293"  [label="DDG: "];
"1000149" -> "1000293"  [label="DDG: "];
"1000138" -> "1000149"  [label="DDG: "];
"1000135" -> "1000149"  [label="DDG: "];
"1000152" -> "1000149"  [label="DDG: "];
"1000138" -> "1000134"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000134" -> "1000138"  [label="CFG: "];
"1000138" -> "1000293"  [label="DDG: "];
"1000138" -> "1000134"  [label="DDG: "];
"1000138" -> "1000134"  [label="DDG: "];
"1000135" -> "1000138"  [label="DDG: "];
"1000140" -> "1000138"  [label="DDG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000139" -> "1000135"  [label="CFG: "];
"1000134" -> "1000135"  [label="CFG: "];
"1000135" -> "1000134"  [label="DDG: "];
"1000135" -> "1000134"  [label="DDG: "];
"1000121" -> "1000135"  [label="DDG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000126" -> "1000121"  [label="CFG: "];
"1000136" -> "1000121"  [label="CFG: "];
"1000121" -> "1000293"  [label="DDG: "];
"1000115" -> "1000121"  [label="DDG: "];
"1000115" -> "1000102"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000122" -> "1000115"  [label="CFG: "];
"1000115" -> "1000293"  [label="DDG: "];
"1000117" -> "1000115"  [label="DDG: "];
"1000117" -> "1000115"  [label="DDG: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000117" -> "1000293"  [label="DDG: "];
"1000109" -> "1000117"  [label="DDG: "];
"1000117" -> "1000178"  [label="DDG: "];
"1000109" -> "1000102"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000116" -> "1000109"  [label="CFG: "];
"1000109" -> "1000293"  [label="DDG: "];
"1000111" -> "1000109"  [label="DDG: "];
"1000111" -> "1000113"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000113" -> "1000111"  [label="AST: "];
"1000111" -> "1000293"  [label="DDG: "];
"1000113" -> "1000111"  [label="DDG: "];
"1000113" -> "1000114"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000142" -> "1000140"  [label="AST: "];
"1000140" -> "1000293"  [label="DDG: "];
"1000140" -> "1000154"  [label="DDG: "];
"1000152" -> "1000154"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000152" -> "1000293"  [label="DDG: "];
"1000154" -> "1000152"  [label="DDG: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000156" -> "1000154"  [label="AST: "];
"1000154" -> "1000293"  [label="DDG: "];
"1000160" -> "1000158"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000160" -> "1000293"  [label="DDG: "];
"1000160" -> "1000158"  [label="DDG: "];
"1000158" -> "1000102"  [label="AST: "];
"1000159" -> "1000158"  [label="AST: "];
"1000167" -> "1000158"  [label="CFG: "];
"1000158" -> "1000293"  [label="DDG: "];
"1000158" -> "1000280"  [label="DDG: "];
"1000280" -> "1000278"  [label="AST: "];
"1000280" -> "1000283"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000282" -> "1000280"  [label="AST: "];
"1000283" -> "1000280"  [label="AST: "];
"1000278" -> "1000280"  [label="CFG: "];
"1000280" -> "1000293"  [label="DDG: "];
"1000280" -> "1000278"  [label="DDG: "];
"1000280" -> "1000278"  [label="DDG: "];
"1000280" -> "1000278"  [label="DDG: "];
"1000169" -> "1000280"  [label="DDG: "];
"1000280" -> "1000287"  [label="DDG: "];
"1000278" -> "1000102"  [label="AST: "];
"1000279" -> "1000278"  [label="AST: "];
"1000286" -> "1000278"  [label="CFG: "];
"1000278" -> "1000293"  [label="DDG: "];
"1000278" -> "1000287"  [label="DDG: "];
"1000287" -> "1000285"  [label="AST: "];
"1000287" -> "1000290"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000287"  [label="AST: "];
"1000290" -> "1000287"  [label="AST: "];
"1000285" -> "1000287"  [label="CFG: "];
"1000287" -> "1000293"  [label="DDG: "];
"1000287" -> "1000293"  [label="DDG: "];
"1000287" -> "1000293"  [label="DDG: "];
"1000287" -> "1000285"  [label="DDG: "];
"1000287" -> "1000285"  [label="DDG: "];
"1000287" -> "1000285"  [label="DDG: "];
"1000285" -> "1000102"  [label="AST: "];
"1000286" -> "1000285"  [label="AST: "];
"1000292" -> "1000285"  [label="CFG: "];
"1000285" -> "1000293"  [label="DDG: "];
"1000285" -> "1000291"  [label="DDG: "];
"1000291" -> "1000102"  [label="AST: "];
"1000291" -> "1000292"  [label="CFG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000293" -> "1000291"  [label="CFG: "];
"1000291" -> "1000293"  [label="DDG: "];
"1000291" -> "1000293"  [label="DDG: "];
"1000169" -> "1000165"  [label="AST: "];
"1000169" -> "1000171"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000171" -> "1000169"  [label="AST: "];
"1000177" -> "1000169"  [label="CFG: "];
"1000279" -> "1000169"  [label="CFG: "];
"1000169" -> "1000293"  [label="DDG: "];
"1000169" -> "1000293"  [label="DDG: "];
"1000166" -> "1000169"  [label="DDG: "];
"1000172" -> "1000169"  [label="DDG: "];
"1000169" -> "1000172"  [label="DDG: "];
"1000172" -> "1000165"  [label="AST: "];
"1000172" -> "1000173"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
}
