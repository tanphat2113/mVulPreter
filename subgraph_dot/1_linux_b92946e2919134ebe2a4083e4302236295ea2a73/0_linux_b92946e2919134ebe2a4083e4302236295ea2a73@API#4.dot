digraph "0_linux_b92946e2919134ebe2a4083e4302236295ea2a73@API" {
"1000250" [label="(Call,copylen = GOODCOPY_LEN)"];
"1000259" [label="(Call,macvtap_alloc_skb(&q->sk, NET_IP_ALIGN, copylen,\n\t\t\t\tvnet_hdr.hdr_len, noblock, &err))"];
"1000257" [label="(Call,skb = macvtap_alloc_skb(&q->sk, NET_IP_ALIGN, copylen,\n\t\t\t\tvnet_hdr.hdr_len, noblock, &err))"];
"1000273" [label="(Call,!skb)"];
"1000280" [label="(Call,zerocopy_sg_from_iovec(skb, iv, vnet_hdr_len, count))"];
"1000278" [label="(Call,err = zerocopy_sg_from_iovec(skb, iv, vnet_hdr_len, count))"];
"1000381" [label="(Return,return err;)"];
"1000297" [label="(Call,skb_set_network_header(skb, ETH_HLEN))"];
"1000300" [label="(Call,skb_reset_mac_header(skb))"];
"1000307" [label="(Call,eth_hdr(skb))"];
"1000315" [label="(Call,macvtap_skb_from_vnet_hdr(skb, &vnet_hdr))"];
"1000313" [label="(Call,err = macvtap_skb_from_vnet_hdr(skb, &vnet_hdr))"];
"1000334" [label="(Call,skb_shinfo(skb))"];
"1000342" [label="(Call,skb_shinfo(skb))"];
"1000348" [label="(Call,macvlan_start_xmit(skb, vlan->dev))"];
"1000354" [label="(Call,kfree_skb(skb))"];
"1000360" [label="(Call,kfree_skb(skb))"];
"1000288" [label="(Call,skb_copy_datagram_from_iovec(skb, 0, iv, vnet_hdr_len,\n\t\t\t\t\t\t   len))"];
"1000286" [label="(Call,err = skb_copy_datagram_from_iovec(skb, 0, iv, vnet_hdr_len,\n\t\t\t\t\t\t   len))"];
"1000353" [label="(ControlStructure,else)"];
"1000219" [label="(Call,len < ETH_HLEN)"];
"1000202" [label="(Call,err = -EINVAL)"];
"1000350" [label="(Call,vlan->dev)"];
"1000278" [label="(Call,err = zerocopy_sg_from_iovec(skb, iv, vnet_hdr_len, count))"];
"1000336" [label="(FieldIdentifier,destructor_arg)"];
"1000354" [label="(Call,kfree_skb(skb))"];
"1000281" [label="(Identifier,skb)"];
"1000315" [label="(Call,macvtap_skb_from_vnet_hdr(skb, &vnet_hdr))"];
"1000270" [label="(Call,&err)"];
"1000265" [label="(Identifier,copylen)"];
"1000155" [label="(Call,memcpy_fromiovecend((void *)&vnet_hdr, iv, 0,\n\t\t\t\t\t   sizeof(vnet_hdr)))"];
"1000314" [label="(Identifier,err)"];
"1000308" [label="(Identifier,skb)"];
"1000335" [label="(Identifier,skb)"];
"1000349" [label="(Identifier,skb)"];
"1000279" [label="(Identifier,err)"];
"1000146" [label="(Call,len < vnet_hdr_len)"];
"1000292" [label="(Identifier,vnet_hdr_len)"];
"1000342" [label="(Call,skb_shinfo(skb))"];
"1000312" [label="(Block,)"];
"1000252" [label="(Identifier,GOODCOPY_LEN)"];
"1000341" [label="(Call,skb_shinfo(skb)->tx_flags)"];
"1000307" [label="(Call,eth_hdr(skb))"];
"1000300" [label="(Call,skb_reset_mac_header(skb))"];
"1000346" [label="(ControlStructure,if (vlan))"];
"1000383" [label="(MethodReturn,static ssize_t)"];
"1000258" [label="(Identifier,skb)"];
"1000272" [label="(ControlStructure,if (!skb))"];
"1000156" [label="(Call,(void *)&vnet_hdr)"];
"1000334" [label="(Call,skb_shinfo(skb))"];
"1000316" [label="(Identifier,skb)"];
"1000165" [label="(Call,err < 0)"];
"1000260" [label="(Call,&q->sk)"];
"1000297" [label="(Call,skb_set_network_header(skb, ETH_HLEN))"];
"1000285" [label="(ControlStructure,else)"];
"1000121" [label="(Call,vnet_hdr_len = 0)"];
"1000289" [label="(Identifier,skb)"];
"1000283" [label="(Identifier,vnet_hdr_len)"];
"1000344" [label="(FieldIdentifier,tx_flags)"];
"1000257" [label="(Call,skb = macvtap_alloc_skb(&q->sk, NET_IP_ALIGN, copylen,\n\t\t\t\tvnet_hdr.hdr_len, noblock, &err))"];
"1000295" [label="(Identifier,err)"];
"1000381" [label="(Return,return err;)"];
"1000107" [label="(MethodParameterIn,size_t count)"];
"1000248" [label="(Call,!copylen)"];
"1000343" [label="(Identifier,skb)"];
"1000288" [label="(Call,skb_copy_datagram_from_iovec(skb, 0, iv, vnet_hdr_len,\n\t\t\t\t\t\t   len))"];
"1000105" [label="(MethodParameterIn,const struct iovec *iv)"];
"1000320" [label="(Identifier,err)"];
"1000274" [label="(Identifier,skb)"];
"1000277" [label="(Identifier,zerocopy)"];
"1000251" [label="(Identifier,copylen)"];
"1000304" [label="(Identifier,skb)"];
"1000230" [label="(Call,sock_flag(&q->sk, SOCK_ZEROCOPY))"];
"1000276" [label="(ControlStructure,if (zerocopy))"];
"1000313" [label="(Call,err = macvtap_skb_from_vnet_hdr(skb, &vnet_hdr))"];
"1000306" [label="(Call,eth_hdr(skb)->h_proto)"];
"1000348" [label="(Call,macvlan_start_xmit(skb, vlan->dev))"];
"1000290" [label="(Literal,0)"];
"1000250" [label="(Call,copylen = GOODCOPY_LEN)"];
"1000293" [label="(Identifier,len)"];
"1000141" [label="(Call,err = -EINVAL)"];
"1000247" [label="(ControlStructure,if (!copylen))"];
"1000360" [label="(Call,kfree_skb(skb))"];
"1000361" [label="(Identifier,skb)"];
"1000269" [label="(Identifier,noblock)"];
"1000333" [label="(Call,skb_shinfo(skb)->destructor_arg)"];
"1000109" [label="(Block,)"];
"1000309" [label="(FieldIdentifier,h_proto)"];
"1000286" [label="(Call,err = skb_copy_datagram_from_iovec(skb, 0, iv, vnet_hdr_len,\n\t\t\t\t\t\t   len))"];
"1000118" [label="(Call,vnet_hdr = { 0 })"];
"1000284" [label="(Identifier,count)"];
"1000298" [label="(Identifier,skb)"];
"1000207" [label="(Call,vnet_hdr.hdr_len > len)"];
"1000299" [label="(Identifier,ETH_HLEN)"];
"1000108" [label="(MethodParameterIn,int noblock)"];
"1000266" [label="(Call,vnet_hdr.hdr_len)"];
"1000273" [label="(Call,!skb)"];
"1000275" [label="(ControlStructure,goto err;)"];
"1000280" [label="(Call,zerocopy_sg_from_iovec(skb, iv, vnet_hdr_len, count))"];
"1000317" [label="(Call,&vnet_hdr)"];
"1000291" [label="(Identifier,iv)"];
"1000382" [label="(Identifier,err)"];
"1000301" [label="(Identifier,skb)"];
"1000254" [label="(Call,copylen = len)"];
"1000362" [label="(JumpTarget,err:)"];
"1000355" [label="(Identifier,skb)"];
"1000287" [label="(Identifier,err)"];
"1000213" [label="(Call,err = -EINVAL)"];
"1000282" [label="(Identifier,iv)"];
"1000264" [label="(Identifier,NET_IP_ALIGN)"];
"1000259" [label="(Call,macvtap_alloc_skb(&q->sk, NET_IP_ALIGN, copylen,\n\t\t\t\tvnet_hdr.hdr_len, noblock, &err))"];
"1000356" [label="(Call,rcu_read_unlock_bh())"];
"1000250" -> "1000247"  [label="AST: "];
"1000250" -> "1000252"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000252" -> "1000250"  [label="AST: "];
"1000258" -> "1000250"  [label="CFG: "];
"1000250" -> "1000383"  [label="DDG: GOODCOPY_LEN"];
"1000250" -> "1000259"  [label="DDG: copylen"];
"1000259" -> "1000257"  [label="AST: "];
"1000259" -> "1000270"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000264" -> "1000259"  [label="AST: "];
"1000265" -> "1000259"  [label="AST: "];
"1000266" -> "1000259"  [label="AST: "];
"1000269" -> "1000259"  [label="AST: "];
"1000270" -> "1000259"  [label="AST: "];
"1000257" -> "1000259"  [label="CFG: "];
"1000259" -> "1000383"  [label="DDG: &q->sk"];
"1000259" -> "1000383"  [label="DDG: copylen"];
"1000259" -> "1000383"  [label="DDG: noblock"];
"1000259" -> "1000383"  [label="DDG: NET_IP_ALIGN"];
"1000259" -> "1000383"  [label="DDG: vnet_hdr.hdr_len"];
"1000259" -> "1000383"  [label="DDG: &err"];
"1000259" -> "1000257"  [label="DDG: NET_IP_ALIGN"];
"1000259" -> "1000257"  [label="DDG: vnet_hdr.hdr_len"];
"1000259" -> "1000257"  [label="DDG: copylen"];
"1000259" -> "1000257"  [label="DDG: &q->sk"];
"1000259" -> "1000257"  [label="DDG: &err"];
"1000259" -> "1000257"  [label="DDG: noblock"];
"1000230" -> "1000259"  [label="DDG: &q->sk"];
"1000254" -> "1000259"  [label="DDG: copylen"];
"1000248" -> "1000259"  [label="DDG: copylen"];
"1000207" -> "1000259"  [label="DDG: vnet_hdr.hdr_len"];
"1000118" -> "1000259"  [label="DDG: vnet_hdr"];
"1000108" -> "1000259"  [label="DDG: noblock"];
"1000257" -> "1000109"  [label="AST: "];
"1000258" -> "1000257"  [label="AST: "];
"1000274" -> "1000257"  [label="CFG: "];
"1000257" -> "1000383"  [label="DDG: macvtap_alloc_skb(&q->sk, NET_IP_ALIGN, copylen,\n\t\t\t\tvnet_hdr.hdr_len, noblock, &err)"];
"1000257" -> "1000273"  [label="DDG: skb"];
"1000273" -> "1000272"  [label="AST: "];
"1000273" -> "1000274"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000275" -> "1000273"  [label="CFG: "];
"1000277" -> "1000273"  [label="CFG: "];
"1000273" -> "1000383"  [label="DDG: skb"];
"1000273" -> "1000383"  [label="DDG: !skb"];
"1000273" -> "1000280"  [label="DDG: skb"];
"1000273" -> "1000288"  [label="DDG: skb"];
"1000280" -> "1000278"  [label="AST: "];
"1000280" -> "1000284"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000282" -> "1000280"  [label="AST: "];
"1000283" -> "1000280"  [label="AST: "];
"1000284" -> "1000280"  [label="AST: "];
"1000278" -> "1000280"  [label="CFG: "];
"1000280" -> "1000383"  [label="DDG: iv"];
"1000280" -> "1000383"  [label="DDG: count"];
"1000280" -> "1000383"  [label="DDG: vnet_hdr_len"];
"1000280" -> "1000278"  [label="DDG: skb"];
"1000280" -> "1000278"  [label="DDG: iv"];
"1000280" -> "1000278"  [label="DDG: vnet_hdr_len"];
"1000280" -> "1000278"  [label="DDG: count"];
"1000155" -> "1000280"  [label="DDG: iv"];
"1000105" -> "1000280"  [label="DDG: iv"];
"1000121" -> "1000280"  [label="DDG: vnet_hdr_len"];
"1000146" -> "1000280"  [label="DDG: vnet_hdr_len"];
"1000107" -> "1000280"  [label="DDG: count"];
"1000280" -> "1000297"  [label="DDG: skb"];
"1000280" -> "1000360"  [label="DDG: skb"];
"1000278" -> "1000276"  [label="AST: "];
"1000279" -> "1000278"  [label="AST: "];
"1000295" -> "1000278"  [label="CFG: "];
"1000278" -> "1000383"  [label="DDG: zerocopy_sg_from_iovec(skb, iv, vnet_hdr_len, count)"];
"1000278" -> "1000383"  [label="DDG: err"];
"1000278" -> "1000381"  [label="DDG: err"];
"1000381" -> "1000109"  [label="AST: "];
"1000381" -> "1000382"  [label="CFG: "];
"1000382" -> "1000381"  [label="AST: "];
"1000383" -> "1000381"  [label="CFG: "];
"1000381" -> "1000383"  [label="DDG: <RET>"];
"1000382" -> "1000381"  [label="DDG: err"];
"1000141" -> "1000381"  [label="DDG: err"];
"1000286" -> "1000381"  [label="DDG: err"];
"1000213" -> "1000381"  [label="DDG: err"];
"1000165" -> "1000381"  [label="DDG: err"];
"1000202" -> "1000381"  [label="DDG: err"];
"1000313" -> "1000381"  [label="DDG: err"];
"1000297" -> "1000109"  [label="AST: "];
"1000297" -> "1000299"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000299" -> "1000297"  [label="AST: "];
"1000301" -> "1000297"  [label="CFG: "];
"1000297" -> "1000383"  [label="DDG: skb_set_network_header(skb, ETH_HLEN)"];
"1000297" -> "1000383"  [label="DDG: ETH_HLEN"];
"1000288" -> "1000297"  [label="DDG: skb"];
"1000219" -> "1000297"  [label="DDG: ETH_HLEN"];
"1000297" -> "1000300"  [label="DDG: skb"];
"1000300" -> "1000109"  [label="AST: "];
"1000300" -> "1000301"  [label="CFG: "];
"1000301" -> "1000300"  [label="AST: "];
"1000304" -> "1000300"  [label="CFG: "];
"1000300" -> "1000383"  [label="DDG: skb_reset_mac_header(skb)"];
"1000300" -> "1000307"  [label="DDG: skb"];
"1000307" -> "1000306"  [label="AST: "];
"1000307" -> "1000308"  [label="CFG: "];
"1000308" -> "1000307"  [label="AST: "];
"1000309" -> "1000307"  [label="CFG: "];
"1000307" -> "1000315"  [label="DDG: skb"];
"1000307" -> "1000334"  [label="DDG: skb"];
"1000307" -> "1000348"  [label="DDG: skb"];
"1000307" -> "1000354"  [label="DDG: skb"];
"1000315" -> "1000313"  [label="AST: "];
"1000315" -> "1000317"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000317" -> "1000315"  [label="AST: "];
"1000313" -> "1000315"  [label="CFG: "];
"1000315" -> "1000383"  [label="DDG: &vnet_hdr"];
"1000315" -> "1000313"  [label="DDG: skb"];
"1000315" -> "1000313"  [label="DDG: &vnet_hdr"];
"1000156" -> "1000315"  [label="DDG: &vnet_hdr"];
"1000315" -> "1000334"  [label="DDG: skb"];
"1000315" -> "1000348"  [label="DDG: skb"];
"1000315" -> "1000354"  [label="DDG: skb"];
"1000315" -> "1000360"  [label="DDG: skb"];
"1000313" -> "1000312"  [label="AST: "];
"1000314" -> "1000313"  [label="AST: "];
"1000320" -> "1000313"  [label="CFG: "];
"1000313" -> "1000383"  [label="DDG: macvtap_skb_from_vnet_hdr(skb, &vnet_hdr)"];
"1000313" -> "1000383"  [label="DDG: err"];
"1000334" -> "1000333"  [label="AST: "];
"1000334" -> "1000335"  [label="CFG: "];
"1000335" -> "1000334"  [label="AST: "];
"1000336" -> "1000334"  [label="CFG: "];
"1000334" -> "1000342"  [label="DDG: skb"];
"1000342" -> "1000341"  [label="AST: "];
"1000342" -> "1000343"  [label="CFG: "];
"1000343" -> "1000342"  [label="AST: "];
"1000344" -> "1000342"  [label="CFG: "];
"1000342" -> "1000348"  [label="DDG: skb"];
"1000342" -> "1000354"  [label="DDG: skb"];
"1000348" -> "1000346"  [label="AST: "];
"1000348" -> "1000350"  [label="CFG: "];
"1000349" -> "1000348"  [label="AST: "];
"1000350" -> "1000348"  [label="AST: "];
"1000356" -> "1000348"  [label="CFG: "];
"1000348" -> "1000383"  [label="DDG: skb"];
"1000348" -> "1000383"  [label="DDG: macvlan_start_xmit(skb, vlan->dev)"];
"1000348" -> "1000383"  [label="DDG: vlan->dev"];
"1000354" -> "1000353"  [label="AST: "];
"1000354" -> "1000355"  [label="CFG: "];
"1000355" -> "1000354"  [label="AST: "];
"1000356" -> "1000354"  [label="CFG: "];
"1000354" -> "1000383"  [label="DDG: kfree_skb(skb)"];
"1000354" -> "1000383"  [label="DDG: skb"];
"1000360" -> "1000109"  [label="AST: "];
"1000360" -> "1000361"  [label="CFG: "];
"1000361" -> "1000360"  [label="AST: "];
"1000362" -> "1000360"  [label="CFG: "];
"1000360" -> "1000383"  [label="DDG: skb"];
"1000360" -> "1000383"  [label="DDG: kfree_skb(skb)"];
"1000288" -> "1000360"  [label="DDG: skb"];
"1000288" -> "1000286"  [label="AST: "];
"1000288" -> "1000293"  [label="CFG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000290" -> "1000288"  [label="AST: "];
"1000291" -> "1000288"  [label="AST: "];
"1000292" -> "1000288"  [label="AST: "];
"1000293" -> "1000288"  [label="AST: "];
"1000286" -> "1000288"  [label="CFG: "];
"1000288" -> "1000383"  [label="DDG: iv"];
"1000288" -> "1000383"  [label="DDG: vnet_hdr_len"];
"1000288" -> "1000383"  [label="DDG: len"];
"1000288" -> "1000286"  [label="DDG: 0"];
"1000288" -> "1000286"  [label="DDG: skb"];
"1000288" -> "1000286"  [label="DDG: iv"];
"1000288" -> "1000286"  [label="DDG: vnet_hdr_len"];
"1000288" -> "1000286"  [label="DDG: len"];
"1000155" -> "1000288"  [label="DDG: iv"];
"1000105" -> "1000288"  [label="DDG: iv"];
"1000121" -> "1000288"  [label="DDG: vnet_hdr_len"];
"1000146" -> "1000288"  [label="DDG: vnet_hdr_len"];
"1000219" -> "1000288"  [label="DDG: len"];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000286"  [label="AST: "];
"1000295" -> "1000286"  [label="CFG: "];
"1000286" -> "1000383"  [label="DDG: err"];
"1000286" -> "1000383"  [label="DDG: skb_copy_datagram_from_iovec(skb, 0, iv, vnet_hdr_len,\n\t\t\t\t\t\t   len)"];
}
