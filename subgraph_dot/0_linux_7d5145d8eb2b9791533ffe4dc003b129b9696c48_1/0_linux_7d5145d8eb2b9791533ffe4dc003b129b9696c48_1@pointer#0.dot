digraph "0_linux_7d5145d8eb2b9791533ffe4dc003b129b9696c48_1@pointer" {
"1000109" [label="(MethodParameterIn,struct xen_netbk *netbk)"];
"1000149" [label="(Call,xen_netbk_idx_release(netbk, pending_idx, XEN_NETIF_RSP_ERROR))"];
"1000155" [label="(Call,frag_get_pending_idx(&shinfo->frags[0]) == pending_idx)"];
"1000153" [label="(Call,start = (frag_get_pending_idx(&shinfo->frags[0]) == pending_idx))"];
"1000165" [label="(Call,i = start)"];
"1000168" [label="(Call,i < nr_frags)"];
"1000171" [label="(Call,i++)"];
"1000227" [label="(Call,j < i)"];
"1000230" [label="(Call,j++)"];
"1000224" [label="(Call,j = start)"];
"1000199" [label="(Call,xen_netbk_idx_release(netbk, pending_idx, XEN_NETIF_RSP_OKAY))"];
"1000204" [label="(Call,xen_netbk_idx_release(netbk, pending_idx, XEN_NETIF_RSP_ERROR))"];
"1000219" [label="(Call,xen_netbk_idx_release(netbk, pending_idx, XEN_NETIF_RSP_OKAY))"];
"1000242" [label="(Call,xen_netbk_idx_release(netbk, pending_idx, XEN_NETIF_RSP_OKAY))"];
"1000199" [label="(Call,xen_netbk_idx_release(netbk, pending_idx, XEN_NETIF_RSP_OKAY))"];
"1000219" [label="(Call,xen_netbk_idx_release(netbk, pending_idx, XEN_NETIF_RSP_OKAY))"];
"1000149" [label="(Call,xen_netbk_idx_release(netbk, pending_idx, XEN_NETIF_RSP_ERROR))"];
"1000170" [label="(Identifier,nr_frags)"];
"1000211" [label="(Call,pending_idx = *((u16 *)skb->data))"];
"1000232" [label="(Block,)"];
"1000200" [label="(Identifier,netbk)"];
"1000119" [label="(Call,pending_idx = *((u16 *)skb->data))"];
"1000251" [label="(Identifier,gopp)"];
"1000243" [label="(Identifier,netbk)"];
"1000165" [label="(Call,i = start)"];
"1000207" [label="(Identifier,XEN_NETIF_RSP_ERROR)"];
"1000163" [label="(Identifier,pending_idx)"];
"1000202" [label="(Identifier,XEN_NETIF_RSP_OKAY)"];
"1000169" [label="(Identifier,i)"];
"1000245" [label="(Identifier,XEN_NETIF_RSP_OKAY)"];
"1000244" [label="(Identifier,pending_idx)"];
"1000172" [label="(Identifier,i)"];
"1000203" [label="(ControlStructure,continue;)"];
"1000156" [label="(Call,frag_get_pending_idx(&shinfo->frags[0]))"];
"1000224" [label="(Call,j = start)"];
"1000167" [label="(Identifier,start)"];
"1000230" [label="(Call,j++)"];
"1000201" [label="(Identifier,pending_idx)"];
"1000171" [label="(Call,i++)"];
"1000155" [label="(Call,frag_get_pending_idx(&shinfo->frags[0]) == pending_idx)"];
"1000173" [label="(Block,)"];
"1000247" [label="(Identifier,err)"];
"1000206" [label="(Identifier,pending_idx)"];
"1000220" [label="(Identifier,netbk)"];
"1000226" [label="(Identifier,start)"];
"1000176" [label="(Call,pending_idx = frag_get_pending_idx(&shinfo->frags[i]))"];
"1000150" [label="(Identifier,netbk)"];
"1000242" [label="(Call,xen_netbk_idx_release(netbk, pending_idx, XEN_NETIF_RSP_OKAY))"];
"1000168" [label="(Call,i < nr_frags)"];
"1000166" [label="(Identifier,i)"];
"1000222" [label="(Identifier,XEN_NETIF_RSP_OKAY)"];
"1000233" [label="(Call,pending_idx = frag_get_pending_idx(&shinfo->frags[j]))"];
"1000209" [label="(Identifier,err)"];
"1000133" [label="(Call,nr_frags = shinfo->nr_frags)"];
"1000228" [label="(Identifier,j)"];
"1000227" [label="(Call,j < i)"];
"1000196" [label="(ControlStructure,if (unlikely(err)))"];
"1000223" [label="(ControlStructure,for (j = start; j < i; j++))"];
"1000109" [label="(MethodParameterIn,struct xen_netbk *netbk)"];
"1000152" [label="(Identifier,XEN_NETIF_RSP_ERROR)"];
"1000177" [label="(Identifier,pending_idx)"];
"1000231" [label="(Identifier,j)"];
"1000225" [label="(Identifier,j)"];
"1000204" [label="(Call,xen_netbk_idx_release(netbk, pending_idx, XEN_NETIF_RSP_ERROR))"];
"1000164" [label="(ControlStructure,for (i = start; i < nr_frags; i++))"];
"1000154" [label="(Identifier,start)"];
"1000257" [label="(MethodReturn,static int)"];
"1000112" [label="(Block,)"];
"1000205" [label="(Identifier,netbk)"];
"1000234" [label="(Identifier,pending_idx)"];
"1000146" [label="(ControlStructure,if (unlikely(err)))"];
"1000153" [label="(Call,start = (frag_get_pending_idx(&shinfo->frags[0]) == pending_idx))"];
"1000221" [label="(Identifier,pending_idx)"];
"1000151" [label="(Identifier,pending_idx)"];
"1000229" [label="(Identifier,i)"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000257"  [label="DDG: netbk"];
"1000109" -> "1000149"  [label="DDG: netbk"];
"1000109" -> "1000199"  [label="DDG: netbk"];
"1000109" -> "1000204"  [label="DDG: netbk"];
"1000109" -> "1000219"  [label="DDG: netbk"];
"1000109" -> "1000242"  [label="DDG: netbk"];
"1000149" -> "1000146"  [label="AST: "];
"1000149" -> "1000152"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000152" -> "1000149"  [label="AST: "];
"1000154" -> "1000149"  [label="CFG: "];
"1000149" -> "1000257"  [label="DDG: XEN_NETIF_RSP_ERROR"];
"1000149" -> "1000257"  [label="DDG: xen_netbk_idx_release(netbk, pending_idx, XEN_NETIF_RSP_ERROR)"];
"1000149" -> "1000257"  [label="DDG: netbk"];
"1000119" -> "1000149"  [label="DDG: pending_idx"];
"1000149" -> "1000155"  [label="DDG: pending_idx"];
"1000149" -> "1000199"  [label="DDG: netbk"];
"1000149" -> "1000204"  [label="DDG: netbk"];
"1000149" -> "1000204"  [label="DDG: XEN_NETIF_RSP_ERROR"];
"1000155" -> "1000153"  [label="AST: "];
"1000155" -> "1000163"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000163" -> "1000155"  [label="AST: "];
"1000153" -> "1000155"  [label="CFG: "];
"1000155" -> "1000257"  [label="DDG: frag_get_pending_idx(&shinfo->frags[0])"];
"1000155" -> "1000257"  [label="DDG: pending_idx"];
"1000155" -> "1000153"  [label="DDG: frag_get_pending_idx(&shinfo->frags[0])"];
"1000155" -> "1000153"  [label="DDG: pending_idx"];
"1000156" -> "1000155"  [label="DDG: &shinfo->frags[0]"];
"1000119" -> "1000155"  [label="DDG: pending_idx"];
"1000153" -> "1000112"  [label="AST: "];
"1000154" -> "1000153"  [label="AST: "];
"1000166" -> "1000153"  [label="CFG: "];
"1000153" -> "1000257"  [label="DDG: frag_get_pending_idx(&shinfo->frags[0]) == pending_idx"];
"1000153" -> "1000165"  [label="DDG: start"];
"1000153" -> "1000224"  [label="DDG: start"];
"1000165" -> "1000164"  [label="AST: "];
"1000165" -> "1000167"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000167" -> "1000165"  [label="AST: "];
"1000169" -> "1000165"  [label="CFG: "];
"1000165" -> "1000257"  [label="DDG: start"];
"1000165" -> "1000168"  [label="DDG: i"];
"1000168" -> "1000164"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000177" -> "1000168"  [label="CFG: "];
"1000251" -> "1000168"  [label="CFG: "];
"1000168" -> "1000257"  [label="DDG: i < nr_frags"];
"1000168" -> "1000257"  [label="DDG: i"];
"1000168" -> "1000257"  [label="DDG: nr_frags"];
"1000171" -> "1000168"  [label="DDG: i"];
"1000133" -> "1000168"  [label="DDG: nr_frags"];
"1000168" -> "1000171"  [label="DDG: i"];
"1000168" -> "1000227"  [label="DDG: i"];
"1000171" -> "1000164"  [label="AST: "];
"1000171" -> "1000172"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000169" -> "1000171"  [label="CFG: "];
"1000227" -> "1000171"  [label="DDG: i"];
"1000227" -> "1000223"  [label="AST: "];
"1000227" -> "1000229"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000227"  [label="AST: "];
"1000234" -> "1000227"  [label="CFG: "];
"1000247" -> "1000227"  [label="CFG: "];
"1000227" -> "1000257"  [label="DDG: j < i"];
"1000227" -> "1000257"  [label="DDG: j"];
"1000224" -> "1000227"  [label="DDG: j"];
"1000230" -> "1000227"  [label="DDG: j"];
"1000227" -> "1000230"  [label="DDG: j"];
"1000230" -> "1000223"  [label="AST: "];
"1000230" -> "1000231"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000228" -> "1000230"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000224" -> "1000226"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000228" -> "1000224"  [label="CFG: "];
"1000224" -> "1000257"  [label="DDG: start"];
"1000199" -> "1000196"  [label="AST: "];
"1000199" -> "1000202"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000201" -> "1000199"  [label="AST: "];
"1000202" -> "1000199"  [label="AST: "];
"1000203" -> "1000199"  [label="CFG: "];
"1000199" -> "1000257"  [label="DDG: pending_idx"];
"1000199" -> "1000257"  [label="DDG: netbk"];
"1000199" -> "1000257"  [label="DDG: xen_netbk_idx_release(netbk, pending_idx, XEN_NETIF_RSP_OKAY)"];
"1000199" -> "1000257"  [label="DDG: XEN_NETIF_RSP_OKAY"];
"1000219" -> "1000199"  [label="DDG: netbk"];
"1000219" -> "1000199"  [label="DDG: XEN_NETIF_RSP_OKAY"];
"1000204" -> "1000199"  [label="DDG: netbk"];
"1000242" -> "1000199"  [label="DDG: netbk"];
"1000242" -> "1000199"  [label="DDG: XEN_NETIF_RSP_OKAY"];
"1000176" -> "1000199"  [label="DDG: pending_idx"];
"1000199" -> "1000204"  [label="DDG: netbk"];
"1000199" -> "1000219"  [label="DDG: XEN_NETIF_RSP_OKAY"];
"1000204" -> "1000173"  [label="AST: "];
"1000204" -> "1000207"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000206" -> "1000204"  [label="AST: "];
"1000207" -> "1000204"  [label="AST: "];
"1000209" -> "1000204"  [label="CFG: "];
"1000204" -> "1000257"  [label="DDG: pending_idx"];
"1000204" -> "1000257"  [label="DDG: XEN_NETIF_RSP_ERROR"];
"1000204" -> "1000257"  [label="DDG: netbk"];
"1000204" -> "1000257"  [label="DDG: xen_netbk_idx_release(netbk, pending_idx, XEN_NETIF_RSP_ERROR)"];
"1000219" -> "1000204"  [label="DDG: netbk"];
"1000242" -> "1000204"  [label="DDG: netbk"];
"1000176" -> "1000204"  [label="DDG: pending_idx"];
"1000204" -> "1000219"  [label="DDG: netbk"];
"1000219" -> "1000173"  [label="AST: "];
"1000219" -> "1000222"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000221" -> "1000219"  [label="AST: "];
"1000222" -> "1000219"  [label="AST: "];
"1000225" -> "1000219"  [label="CFG: "];
"1000219" -> "1000257"  [label="DDG: pending_idx"];
"1000219" -> "1000257"  [label="DDG: xen_netbk_idx_release(netbk, pending_idx, XEN_NETIF_RSP_OKAY)"];
"1000219" -> "1000257"  [label="DDG: XEN_NETIF_RSP_OKAY"];
"1000219" -> "1000257"  [label="DDG: netbk"];
"1000211" -> "1000219"  [label="DDG: pending_idx"];
"1000242" -> "1000219"  [label="DDG: XEN_NETIF_RSP_OKAY"];
"1000219" -> "1000242"  [label="DDG: netbk"];
"1000219" -> "1000242"  [label="DDG: XEN_NETIF_RSP_OKAY"];
"1000242" -> "1000232"  [label="AST: "];
"1000242" -> "1000245"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000244" -> "1000242"  [label="AST: "];
"1000245" -> "1000242"  [label="AST: "];
"1000231" -> "1000242"  [label="CFG: "];
"1000242" -> "1000257"  [label="DDG: xen_netbk_idx_release(netbk, pending_idx, XEN_NETIF_RSP_OKAY)"];
"1000242" -> "1000257"  [label="DDG: pending_idx"];
"1000242" -> "1000257"  [label="DDG: XEN_NETIF_RSP_OKAY"];
"1000242" -> "1000257"  [label="DDG: netbk"];
"1000233" -> "1000242"  [label="DDG: pending_idx"];
}
