digraph "0_linux_bceaa90240b6019ed73b49965eac7d167610be69_1@pointer" {
"1000145" [label="(Call,ip_recv_error(sk, msg, len))"];
"1000113" [label="(Call,inet_sk(sk))"];
"1000103" [label="(MethodParameterIn,struct sock *sk)"];
"1000104" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000105" [label="(MethodParameterIn,size_t len)"];
"1000143" [label="(Call,err = ip_recv_error(sk, msg, len))"];
"1000258" [label="(Return,return err;)"];
"1000177" [label="(Call,copied = len)"];
"1000146" [label="(Identifier,sk)"];
"1000113" [label="(Call,inet_sk(sk))"];
"1000114" [label="(Identifier,sk)"];
"1000145" [label="(Call,ip_recv_error(sk, msg, len))"];
"1000180" [label="(Call,err = skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000152" [label="(Call,skb_recv_datagram(sk, flags, noblock, &err))"];
"1000148" [label="(Identifier,len)"];
"1000111" [label="(Call,*inet = inet_sk(sk))"];
"1000144" [label="(Identifier,err)"];
"1000256" [label="(ControlStructure,if (err))"];
"1000192" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000147" [label="(Identifier,msg)"];
"1000252" [label="(Call,skb_free_datagram(sk, skb))"];
"1000262" [label="(MethodReturn,static int)"];
"1000103" [label="(MethodParameterIn,struct sock *sk)"];
"1000149" [label="(ControlStructure,goto out;)"];
"1000143" [label="(Call,err = ip_recv_error(sk, msg, len))"];
"1000142" [label="(Block,)"];
"1000105" [label="(MethodParameterIn,size_t len)"];
"1000104" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000259" [label="(Identifier,err)"];
"1000168" [label="(Call,len < copied)"];
"1000120" [label="(Call,err = -EOPNOTSUPP)"];
"1000258" [label="(Return,return err;)"];
"1000239" [label="(Call,ip_cmsg_recv(msg, skb))"];
"1000145" -> "1000143"  [label="AST: "];
"1000145" -> "1000148"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000148" -> "1000145"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000145" -> "1000262"  [label="DDG: len"];
"1000145" -> "1000262"  [label="DDG: sk"];
"1000145" -> "1000262"  [label="DDG: msg"];
"1000145" -> "1000143"  [label="DDG: sk"];
"1000145" -> "1000143"  [label="DDG: msg"];
"1000145" -> "1000143"  [label="DDG: len"];
"1000113" -> "1000145"  [label="DDG: sk"];
"1000103" -> "1000145"  [label="DDG: sk"];
"1000104" -> "1000145"  [label="DDG: msg"];
"1000105" -> "1000145"  [label="DDG: len"];
"1000113" -> "1000111"  [label="AST: "];
"1000113" -> "1000114"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000111" -> "1000113"  [label="CFG: "];
"1000113" -> "1000262"  [label="DDG: sk"];
"1000113" -> "1000111"  [label="DDG: sk"];
"1000103" -> "1000113"  [label="DDG: sk"];
"1000113" -> "1000152"  [label="DDG: sk"];
"1000103" -> "1000101"  [label="AST: "];
"1000103" -> "1000262"  [label="DDG: sk"];
"1000103" -> "1000152"  [label="DDG: sk"];
"1000103" -> "1000192"  [label="DDG: sk"];
"1000103" -> "1000252"  [label="DDG: sk"];
"1000104" -> "1000101"  [label="AST: "];
"1000104" -> "1000262"  [label="DDG: msg"];
"1000104" -> "1000192"  [label="DDG: msg"];
"1000104" -> "1000239"  [label="DDG: msg"];
"1000105" -> "1000101"  [label="AST: "];
"1000105" -> "1000262"  [label="DDG: len"];
"1000105" -> "1000168"  [label="DDG: len"];
"1000105" -> "1000177"  [label="DDG: len"];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000143"  [label="AST: "];
"1000149" -> "1000143"  [label="CFG: "];
"1000143" -> "1000262"  [label="DDG: err"];
"1000143" -> "1000262"  [label="DDG: ip_recv_error(sk, msg, len)"];
"1000143" -> "1000258"  [label="DDG: err"];
"1000258" -> "1000256"  [label="AST: "];
"1000258" -> "1000259"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000262" -> "1000258"  [label="CFG: "];
"1000258" -> "1000262"  [label="DDG: <RET>"];
"1000259" -> "1000258"  [label="DDG: err"];
"1000180" -> "1000258"  [label="DDG: err"];
"1000120" -> "1000258"  [label="DDG: err"];
}
