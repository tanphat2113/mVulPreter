digraph "0_linux_bceaa90240b6019ed73b49965eac7d167610be69_1@API" {
"1000180" [label="(Call,err = skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000182" [label="(Call,skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000159" [label="(Call,!skb)"];
"1000150" [label="(Call,skb = skb_recv_datagram(sk, flags, noblock, &err))"];
"1000152" [label="(Call,skb_recv_datagram(sk, flags, noblock, &err))"];
"1000113" [label="(Call,inet_sk(sk))"];
"1000103" [label="(MethodParameterIn,struct sock *sk)"];
"1000139" [label="(Call,flags & MSG_ERRQUEUE)"];
"1000134" [label="(Call,flags & MSG_OOB)"];
"1000107" [label="(MethodParameterIn,int flags)"];
"1000106" [label="(MethodParameterIn,int noblock)"];
"1000177" [label="(Call,copied = len)"];
"1000168" [label="(Call,len < copied)"];
"1000105" [label="(MethodParameterIn,size_t len)"];
"1000162" [label="(Call,copied = skb->len)"];
"1000258" [label="(Return,return err;)"];
"1000106" [label="(MethodParameterIn,int noblock)"];
"1000140" [label="(Identifier,flags)"];
"1000177" [label="(Call,copied = len)"];
"1000260" [label="(Return,return copied;)"];
"1000243" [label="(Call,flags & MSG_TRUNC)"];
"1000164" [label="(Call,skb->len)"];
"1000139" [label="(Call,flags & MSG_ERRQUEUE)"];
"1000183" [label="(Identifier,skb)"];
"1000169" [label="(Identifier,len)"];
"1000113" [label="(Call,inet_sk(sk))"];
"1000174" [label="(Identifier,msg)"];
"1000114" [label="(Identifier,sk)"];
"1000179" [label="(Identifier,len)"];
"1000145" [label="(Call,ip_recv_error(sk, msg, len))"];
"1000170" [label="(Identifier,copied)"];
"1000180" [label="(Call,err = skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000152" [label="(Call,skb_recv_datagram(sk, flags, noblock, &err))"];
"1000144" [label="(Identifier,err)"];
"1000111" [label="(Call,*inet = inet_sk(sk))"];
"1000256" [label="(ControlStructure,if (err))"];
"1000192" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000160" [label="(Identifier,skb)"];
"1000107" [label="(MethodParameterIn,int flags)"];
"1000252" [label="(Call,skb_free_datagram(sk, skb))"];
"1000158" [label="(ControlStructure,if (!skb))"];
"1000262" [label="(MethodReturn,static int)"];
"1000133" [label="(ControlStructure,if (flags & MSG_OOB))"];
"1000154" [label="(Identifier,flags)"];
"1000103" [label="(MethodParameterIn,struct sock *sk)"];
"1000151" [label="(Identifier,skb)"];
"1000109" [label="(Block,)"];
"1000181" [label="(Identifier,err)"];
"1000150" [label="(Call,skb = skb_recv_datagram(sk, flags, noblock, &err))"];
"1000136" [label="(Identifier,MSG_OOB)"];
"1000171" [label="(Block,)"];
"1000178" [label="(Identifier,copied)"];
"1000190" [label="(Identifier,err)"];
"1000138" [label="(ControlStructure,if (flags & MSG_ERRQUEUE))"];
"1000137" [label="(ControlStructure,goto out;)"];
"1000167" [label="(ControlStructure,if (len < copied))"];
"1000162" [label="(Call,copied = skb->len)"];
"1000153" [label="(Identifier,sk)"];
"1000143" [label="(Call,err = ip_recv_error(sk, msg, len))"];
"1000185" [label="(Call,msg->msg_iov)"];
"1000188" [label="(Identifier,copied)"];
"1000155" [label="(Identifier,noblock)"];
"1000105" [label="(MethodParameterIn,size_t len)"];
"1000135" [label="(Identifier,flags)"];
"1000161" [label="(ControlStructure,goto out;)"];
"1000134" [label="(Call,flags & MSG_OOB)"];
"1000156" [label="(Call,&err)"];
"1000259" [label="(Identifier,err)"];
"1000184" [label="(Literal,0)"];
"1000159" [label="(Call,!skb)"];
"1000168" [label="(Call,len < copied)"];
"1000141" [label="(Identifier,MSG_ERRQUEUE)"];
"1000182" [label="(Call,skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000120" [label="(Call,err = -EOPNOTSUPP)"];
"1000258" [label="(Return,return err;)"];
"1000163" [label="(Identifier,copied)"];
"1000180" -> "1000109"  [label="AST: "];
"1000180" -> "1000182"  [label="CFG: "];
"1000181" -> "1000180"  [label="AST: "];
"1000182" -> "1000180"  [label="AST: "];
"1000190" -> "1000180"  [label="CFG: "];
"1000180" -> "1000262"  [label="DDG: err"];
"1000180" -> "1000262"  [label="DDG: skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied)"];
"1000182" -> "1000180"  [label="DDG: skb"];
"1000182" -> "1000180"  [label="DDG: 0"];
"1000182" -> "1000180"  [label="DDG: msg->msg_iov"];
"1000182" -> "1000180"  [label="DDG: copied"];
"1000180" -> "1000258"  [label="DDG: err"];
"1000182" -> "1000188"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000184" -> "1000182"  [label="AST: "];
"1000185" -> "1000182"  [label="AST: "];
"1000188" -> "1000182"  [label="AST: "];
"1000182" -> "1000262"  [label="DDG: msg->msg_iov"];
"1000182" -> "1000262"  [label="DDG: copied"];
"1000159" -> "1000182"  [label="DDG: skb"];
"1000177" -> "1000182"  [label="DDG: copied"];
"1000168" -> "1000182"  [label="DDG: copied"];
"1000182" -> "1000192"  [label="DDG: skb"];
"1000182" -> "1000252"  [label="DDG: skb"];
"1000182" -> "1000260"  [label="DDG: copied"];
"1000159" -> "1000158"  [label="AST: "];
"1000159" -> "1000160"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000161" -> "1000159"  [label="CFG: "];
"1000163" -> "1000159"  [label="CFG: "];
"1000159" -> "1000262"  [label="DDG: !skb"];
"1000159" -> "1000262"  [label="DDG: skb"];
"1000150" -> "1000159"  [label="DDG: skb"];
"1000150" -> "1000109"  [label="AST: "];
"1000150" -> "1000152"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="AST: "];
"1000160" -> "1000150"  [label="CFG: "];
"1000150" -> "1000262"  [label="DDG: skb_recv_datagram(sk, flags, noblock, &err)"];
"1000152" -> "1000150"  [label="DDG: sk"];
"1000152" -> "1000150"  [label="DDG: flags"];
"1000152" -> "1000150"  [label="DDG: noblock"];
"1000152" -> "1000150"  [label="DDG: &err"];
"1000152" -> "1000156"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000155" -> "1000152"  [label="AST: "];
"1000156" -> "1000152"  [label="AST: "];
"1000152" -> "1000262"  [label="DDG: flags"];
"1000152" -> "1000262"  [label="DDG: &err"];
"1000152" -> "1000262"  [label="DDG: noblock"];
"1000152" -> "1000262"  [label="DDG: sk"];
"1000113" -> "1000152"  [label="DDG: sk"];
"1000103" -> "1000152"  [label="DDG: sk"];
"1000139" -> "1000152"  [label="DDG: flags"];
"1000107" -> "1000152"  [label="DDG: flags"];
"1000106" -> "1000152"  [label="DDG: noblock"];
"1000152" -> "1000192"  [label="DDG: sk"];
"1000152" -> "1000243"  [label="DDG: flags"];
"1000152" -> "1000252"  [label="DDG: sk"];
"1000113" -> "1000111"  [label="AST: "];
"1000113" -> "1000114"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000111" -> "1000113"  [label="CFG: "];
"1000113" -> "1000262"  [label="DDG: sk"];
"1000113" -> "1000111"  [label="DDG: sk"];
"1000103" -> "1000113"  [label="DDG: sk"];
"1000113" -> "1000145"  [label="DDG: sk"];
"1000103" -> "1000101"  [label="AST: "];
"1000103" -> "1000262"  [label="DDG: sk"];
"1000103" -> "1000145"  [label="DDG: sk"];
"1000103" -> "1000192"  [label="DDG: sk"];
"1000103" -> "1000252"  [label="DDG: sk"];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000141"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="AST: "];
"1000144" -> "1000139"  [label="CFG: "];
"1000151" -> "1000139"  [label="CFG: "];
"1000139" -> "1000262"  [label="DDG: MSG_ERRQUEUE"];
"1000139" -> "1000262"  [label="DDG: flags & MSG_ERRQUEUE"];
"1000139" -> "1000262"  [label="DDG: flags"];
"1000134" -> "1000139"  [label="DDG: flags"];
"1000107" -> "1000139"  [label="DDG: flags"];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000137" -> "1000134"  [label="CFG: "];
"1000140" -> "1000134"  [label="CFG: "];
"1000134" -> "1000262"  [label="DDG: flags & MSG_OOB"];
"1000134" -> "1000262"  [label="DDG: flags"];
"1000134" -> "1000262"  [label="DDG: MSG_OOB"];
"1000107" -> "1000134"  [label="DDG: flags"];
"1000107" -> "1000101"  [label="AST: "];
"1000107" -> "1000262"  [label="DDG: flags"];
"1000107" -> "1000243"  [label="DDG: flags"];
"1000106" -> "1000101"  [label="AST: "];
"1000106" -> "1000262"  [label="DDG: noblock"];
"1000177" -> "1000171"  [label="AST: "];
"1000177" -> "1000179"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000179" -> "1000177"  [label="AST: "];
"1000181" -> "1000177"  [label="CFG: "];
"1000177" -> "1000262"  [label="DDG: len"];
"1000168" -> "1000177"  [label="DDG: len"];
"1000105" -> "1000177"  [label="DDG: len"];
"1000168" -> "1000167"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000174" -> "1000168"  [label="CFG: "];
"1000181" -> "1000168"  [label="CFG: "];
"1000168" -> "1000262"  [label="DDG: len < copied"];
"1000168" -> "1000262"  [label="DDG: len"];
"1000105" -> "1000168"  [label="DDG: len"];
"1000162" -> "1000168"  [label="DDG: copied"];
"1000105" -> "1000101"  [label="AST: "];
"1000105" -> "1000262"  [label="DDG: len"];
"1000105" -> "1000145"  [label="DDG: len"];
"1000162" -> "1000109"  [label="AST: "];
"1000162" -> "1000164"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000164" -> "1000162"  [label="AST: "];
"1000169" -> "1000162"  [label="CFG: "];
"1000162" -> "1000262"  [label="DDG: skb->len"];
"1000258" -> "1000256"  [label="AST: "];
"1000258" -> "1000259"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000262" -> "1000258"  [label="CFG: "];
"1000258" -> "1000262"  [label="DDG: <RET>"];
"1000259" -> "1000258"  [label="DDG: err"];
"1000143" -> "1000258"  [label="DDG: err"];
"1000120" -> "1000258"  [label="DDG: err"];
}
