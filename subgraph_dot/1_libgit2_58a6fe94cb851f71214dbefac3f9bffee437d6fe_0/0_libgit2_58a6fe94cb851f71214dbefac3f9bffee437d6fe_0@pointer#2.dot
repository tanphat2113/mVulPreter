digraph "0_libgit2_58a6fe94cb851f71214dbefac3f9bffee437d6fe_0@pointer" {
"1000432" [label="(Call,index_entry_dup(out, index, &entry))"];
"1000103" [label="(MethodParameterIn,git_index_entry **out)"];
"1000104" [label="(MethodParameterIn,git_index *index)"];
"1000431" [label="(Call,index_entry_dup(out, index, &entry) < 0)"];
"1000444" [label="(Identifier,tmp_path)"];
"1000432" [label="(Call,index_entry_dup(out, index, &entry))"];
"1000433" [label="(Identifier,out)"];
"1000437" [label="(Literal,0)"];
"1000431" [label="(Call,index_entry_dup(out, index, &entry) < 0)"];
"1000447" [label="(MethodReturn,static size_t)"];
"1000104" [label="(MethodParameterIn,git_index *index)"];
"1000103" [label="(MethodParameterIn,git_index_entry **out)"];
"1000440" [label="(Identifier,tmp_path)"];
"1000434" [label="(Identifier,index)"];
"1000430" [label="(ControlStructure,if (index_entry_dup(out, index, &entry) < 0))"];
"1000435" [label="(Call,&entry)"];
"1000432" -> "1000431"  [label="AST: "];
"1000432" -> "1000435"  [label="CFG: "];
"1000433" -> "1000432"  [label="AST: "];
"1000434" -> "1000432"  [label="AST: "];
"1000435" -> "1000432"  [label="AST: "];
"1000437" -> "1000432"  [label="CFG: "];
"1000432" -> "1000447"  [label="DDG: index"];
"1000432" -> "1000447"  [label="DDG: out"];
"1000432" -> "1000447"  [label="DDG: &entry"];
"1000432" -> "1000431"  [label="DDG: out"];
"1000432" -> "1000431"  [label="DDG: index"];
"1000432" -> "1000431"  [label="DDG: &entry"];
"1000103" -> "1000432"  [label="DDG: out"];
"1000104" -> "1000432"  [label="DDG: index"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000447"  [label="DDG: out"];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1000447"  [label="DDG: index"];
"1000431" -> "1000430"  [label="AST: "];
"1000431" -> "1000437"  [label="CFG: "];
"1000437" -> "1000431"  [label="AST: "];
"1000440" -> "1000431"  [label="CFG: "];
"1000444" -> "1000431"  [label="CFG: "];
"1000431" -> "1000447"  [label="DDG: index_entry_dup(out, index, &entry)"];
"1000431" -> "1000447"  [label="DDG: index_entry_dup(out, index, &entry) < 0"];
}
