digraph "0_OpenSC_8fe377e93b4b56060e5bbfb6f3142ceaeca744fa_10@array" {
"1000242" [label="(Call,rbuf[ii/2] >> ((ii & 0x01) ? 0 : 4))"];
"1000241" [label="(Call,(rbuf[ii/2] >> ((ii & 0x01) ? 0 : 4)) & 0x0F)"];
"1000237" [label="(Call,iin->country += (rbuf[ii/2] >> ((ii & 0x01) ? 0 : 4)) & 0x0F)"];
"1000232" [label="(Call,iin->country *= 10)"];
"1000444" [label="(Call,sc_log(ctx, \"serial number '%s'; mii %i; country %i; issuer_id %li\", txt, iin->mii, iin->country, iin->issuer_id))"];
"1000429" [label="(Call,sprintf(txt + ii*2, \"%02X\", *(card->serialnr.value + ii)))"];
"1000430" [label="(Call,txt + ii*2)"];
"1000470" [label="(Call,LOG_FUNC_RETURN(ctx, SC_SUCCESS))"];
"1000280" [label="(Call,rbuf[ii/2] >> (ii & 0x01 ? 0 : 4))"];
"1000279" [label="(Call,(rbuf[ii/2] >> (ii & 0x01 ? 0 : 4)) & 0x0F)"];
"1000275" [label="(Call,iin->issuer_id += (rbuf[ii/2] >> (ii & 0x01 ? 0 : 4)) & 0x0F)"];
"1000270" [label="(Call,iin->issuer_id *= 10)"];
"1000217" [label="(Call,iin->country = 0)"];
"1000429" [label="(Call,sprintf(txt + ii*2, \"%02X\", *(card->serialnr.value + ii)))"];
"1000432" [label="(Call,ii*2)"];
"1000471" [label="(Identifier,ctx)"];
"1000430" [label="(Call,txt + ii*2)"];
"1000445" [label="(Identifier,ctx)"];
"1000276" [label="(Call,iin->issuer_id)"];
"1000238" [label="(Call,iin->country)"];
"1000473" [label="(MethodReturn,RET)"];
"1000390" [label="(Call,*(card->serialnr.value + ii) = rbuf[ii + offs + 2])"];
"1000233" [label="(Call,iin->country)"];
"1000447" [label="(Identifier,txt)"];
"1000280" [label="(Call,rbuf[ii/2] >> (ii & 0x01 ? 0 : 4))"];
"1000281" [label="(Call,rbuf[ii/2])"];
"1000414" [label="(Block,)"];
"1000274" [label="(Literal,10)"];
"1000206" [label="(Call,iin->mii = (rbuf[2] >> 4) & 0x0F)"];
"1000237" [label="(Call,iin->country += (rbuf[ii/2] >> ((ii & 0x01) ? 0 : 4)) & 0x0F)"];
"1000428" [label="(Identifier,ii)"];
"1000435" [label="(Literal,\"%02X\")"];
"1000126" [label="(Call,LOG_FUNC_CALLED(ctx))"];
"1000277" [label="(Identifier,iin)"];
"1000431" [label="(Identifier,txt)"];
"1000454" [label="(Call,iin->issuer_id)"];
"1000192" [label="(Call,LOG_TEST_RET(ctx, rv, \"Get 'serial number' data failed\"))"];
"1000470" [label="(Call,LOG_FUNC_RETURN(ctx, SC_SUCCESS))"];
"1000248" [label="(Call,(ii & 0x01) ? 0 : 4)"];
"1000448" [label="(Call,iin->mii)"];
"1000232" [label="(Call,iin->country *= 10)"];
"1000202" [label="(Call,LOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"serial number parse error\"))"];
"1000243" [label="(Call,rbuf[ii/2])"];
"1000254" [label="(Literal,0x0F)"];
"1000241" [label="(Call,(rbuf[ii/2] >> ((ii & 0x01) ? 0 : 4)) & 0x0F)"];
"1000279" [label="(Call,(rbuf[ii/2] >> (ii & 0x01 ? 0 : 4)) & 0x0F)"];
"1000457" [label="(Literal,0)"];
"1000242" [label="(Call,rbuf[ii/2] >> ((ii & 0x01) ? 0 : 4))"];
"1000255" [label="(Call,iin->issuer_id = 0)"];
"1000230" [label="(Identifier,ii)"];
"1000446" [label="(Literal,\"serial number '%s'; mii %i; country %i; issuer_id %li\")"];
"1000271" [label="(Call,iin->issuer_id)"];
"1000444" [label="(Call,sc_log(ctx, \"serial number '%s'; mii %i; country %i; issuer_id %li\", txt, iin->mii, iin->country, iin->issuer_id))"];
"1000336" [label="(Call,*(card->serialnr.value + ii) = ((rbuf[ii + offs + 1] & 0x0F) << 4)\n \t\t\t\t+ ((rbuf[ii + offs + 2] & 0xF0) >> 4))"];
"1000105" [label="(Block,)"];
"1000286" [label="(Call,ii & 0x01 ? 0 : 4)"];
"1000292" [label="(Literal,0x0F)"];
"1000416" [label="(ControlStructure,for (ii=0;ii<card->serialnr.len;ii++))"];
"1000268" [label="(Identifier,ii)"];
"1000231" [label="(Block,)"];
"1000275" [label="(Call,iin->issuer_id += (rbuf[ii/2] >> (ii & 0x01 ? 0 : 4)) & 0x0F)"];
"1000472" [label="(Identifier,SC_SUCCESS)"];
"1000236" [label="(Literal,10)"];
"1000436" [label="(Call,*(card->serialnr.value + ii))"];
"1000451" [label="(Call,iin->country)"];
"1000270" [label="(Call,iin->issuer_id *= 10)"];
"1000269" [label="(Block,)"];
"1000239" [label="(Identifier,iin)"];
"1000242" -> "1000241"  [label="AST: "];
"1000242" -> "1000248"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000248" -> "1000242"  [label="AST: "];
"1000254" -> "1000242"  [label="CFG: "];
"1000242" -> "1000473"  [label="DDG: "];
"1000242" -> "1000473"  [label="DDG: "];
"1000242" -> "1000241"  [label="DDG: "];
"1000242" -> "1000241"  [label="DDG: "];
"1000242" -> "1000280"  [label="DDG: "];
"1000241" -> "1000237"  [label="AST: "];
"1000241" -> "1000254"  [label="CFG: "];
"1000254" -> "1000241"  [label="AST: "];
"1000237" -> "1000241"  [label="CFG: "];
"1000241" -> "1000473"  [label="DDG: "];
"1000241" -> "1000237"  [label="DDG: "];
"1000241" -> "1000237"  [label="DDG: "];
"1000237" -> "1000231"  [label="AST: "];
"1000238" -> "1000237"  [label="AST: "];
"1000230" -> "1000237"  [label="CFG: "];
"1000237" -> "1000473"  [label="DDG: "];
"1000237" -> "1000232"  [label="DDG: "];
"1000232" -> "1000237"  [label="DDG: "];
"1000237" -> "1000444"  [label="DDG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000232" -> "1000236"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000236" -> "1000232"  [label="AST: "];
"1000239" -> "1000232"  [label="CFG: "];
"1000217" -> "1000232"  [label="DDG: "];
"1000444" -> "1000414"  [label="AST: "];
"1000444" -> "1000454"  [label="CFG: "];
"1000445" -> "1000444"  [label="AST: "];
"1000446" -> "1000444"  [label="AST: "];
"1000447" -> "1000444"  [label="AST: "];
"1000448" -> "1000444"  [label="AST: "];
"1000451" -> "1000444"  [label="AST: "];
"1000454" -> "1000444"  [label="AST: "];
"1000457" -> "1000444"  [label="CFG: "];
"1000444" -> "1000473"  [label="DDG: "];
"1000444" -> "1000473"  [label="DDG: "];
"1000444" -> "1000473"  [label="DDG: "];
"1000444" -> "1000473"  [label="DDG: "];
"1000444" -> "1000473"  [label="DDG: "];
"1000444" -> "1000429"  [label="DDG: "];
"1000444" -> "1000430"  [label="DDG: "];
"1000202" -> "1000444"  [label="DDG: "];
"1000192" -> "1000444"  [label="DDG: "];
"1000206" -> "1000444"  [label="DDG: "];
"1000217" -> "1000444"  [label="DDG: "];
"1000275" -> "1000444"  [label="DDG: "];
"1000255" -> "1000444"  [label="DDG: "];
"1000444" -> "1000470"  [label="DDG: "];
"1000429" -> "1000416"  [label="AST: "];
"1000429" -> "1000436"  [label="CFG: "];
"1000430" -> "1000429"  [label="AST: "];
"1000435" -> "1000429"  [label="AST: "];
"1000436" -> "1000429"  [label="AST: "];
"1000428" -> "1000429"  [label="CFG: "];
"1000429" -> "1000473"  [label="DDG: "];
"1000429" -> "1000473"  [label="DDG: "];
"1000429" -> "1000473"  [label="DDG: "];
"1000432" -> "1000429"  [label="DDG: "];
"1000432" -> "1000429"  [label="DDG: "];
"1000390" -> "1000429"  [label="DDG: "];
"1000336" -> "1000429"  [label="DDG: "];
"1000430" -> "1000432"  [label="CFG: "];
"1000431" -> "1000430"  [label="AST: "];
"1000432" -> "1000430"  [label="AST: "];
"1000435" -> "1000430"  [label="CFG: "];
"1000430" -> "1000473"  [label="DDG: "];
"1000432" -> "1000430"  [label="DDG: "];
"1000432" -> "1000430"  [label="DDG: "];
"1000470" -> "1000105"  [label="AST: "];
"1000470" -> "1000472"  [label="CFG: "];
"1000471" -> "1000470"  [label="AST: "];
"1000472" -> "1000470"  [label="AST: "];
"1000473" -> "1000470"  [label="CFG: "];
"1000470" -> "1000473"  [label="DDG: "];
"1000470" -> "1000473"  [label="DDG: "];
"1000470" -> "1000473"  [label="DDG: "];
"1000126" -> "1000470"  [label="DDG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000280" -> "1000286"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000286" -> "1000280"  [label="AST: "];
"1000292" -> "1000280"  [label="CFG: "];
"1000280" -> "1000473"  [label="DDG: "];
"1000280" -> "1000473"  [label="DDG: "];
"1000280" -> "1000279"  [label="DDG: "];
"1000280" -> "1000279"  [label="DDG: "];
"1000279" -> "1000275"  [label="AST: "];
"1000279" -> "1000292"  [label="CFG: "];
"1000292" -> "1000279"  [label="AST: "];
"1000275" -> "1000279"  [label="CFG: "];
"1000279" -> "1000473"  [label="DDG: "];
"1000279" -> "1000275"  [label="DDG: "];
"1000279" -> "1000275"  [label="DDG: "];
"1000275" -> "1000269"  [label="AST: "];
"1000276" -> "1000275"  [label="AST: "];
"1000268" -> "1000275"  [label="CFG: "];
"1000275" -> "1000473"  [label="DDG: "];
"1000275" -> "1000270"  [label="DDG: "];
"1000270" -> "1000275"  [label="DDG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000270" -> "1000274"  [label="CFG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000274" -> "1000270"  [label="AST: "];
"1000277" -> "1000270"  [label="CFG: "];
"1000255" -> "1000270"  [label="DDG: "];
}
