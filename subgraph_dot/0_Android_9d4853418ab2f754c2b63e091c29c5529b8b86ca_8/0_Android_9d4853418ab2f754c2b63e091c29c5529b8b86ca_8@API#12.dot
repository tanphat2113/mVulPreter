digraph "0_Android_9d4853418ab2f754c2b63e091c29c5529b8b86ca_8@API" {
"1000518" [label="(Call,fprintf(stderr,\n          \"%s [-display xdpy] [-gamma exp] [-bgcolor bg | -bgpat pat]\n\"\n          \"        %*s [-usleep dur | -timing] [-pause]\n\",\n          PROGNAME, (int)strlen(PROGNAME), \" \"))"];
"1000515" [label="(Call,fprintf(stderr, \"\n\"\n          \"Usage:   \"))"];
"1000508" [label="(Call,fprintf(stderr, \"\n%s %s:  %s\n\n\", PROGNAME, VERSION, appname))"];
"1000524" [label="(Call,strlen(PROGNAME))"];
"1000522" [label="(Call,(int)strlen(PROGNAME))"];
"1000527" [label="(Call,fprintf(stderr,\n           \"    xdpy\tname of the target X display (e.g., ``hostname:0'')\n\"\n           \"    exp \ttransfer-function exponent (``gamma'') of the display\n\"\n           \"\t\t  system in floating-point format (e.g., ``%.1f''); equal\n\"\n          \"\t\t  to the product of the lookup-table exponent (varies)\n\",\n          default_display_exponent))"];
"1000531" [label="(Call,fprintf(stderr,\n           \"\t\t  and the CRT exponent (usually 2.2); must be positive\n\"\n           \"    bg  \tdesired background color in 7-character hex RGB format\n\"\n           \"\t\t  (e.g., ``#ff7700'' for orange:  same as HTML colors);\n\"\n           \"\t\t  used with transparent images; overrides -bgpat\n\"\n           \"    pat \tdesired background pattern number (0-%d); used with\n\"\n          \"\t\t  transparent images; overrides -bgcolor\n\",\n          num_bgpat-1))"];
"1000537" [label="(Call,fprintf(stderr,\n           \"    -loop\tloops through background images after initial display\n\"\n           \"\t\t  is complete (depends on -bgpat)\n\"\n          \"    sec \tseconds to display each background image (default = 2)\n\"))"];
"1000540" [label="(Call,fprintf(stderr,\n           \"    dur \tduration in microseconds to wait after displaying each\n\"\n           \"\t\t  row (for demo purposes)\n\"\n           \"    -timing\tenables delay for every block read, to simulate modem\n\"\n           \"\t\t  download of image (~36 Kbps)\n\"\n           \"    -pause\tpauses after displaying each pass until mouse clicked\n\"\n           \"\nPress Q, Esc or mouse button 1 (within image window, after image\n\"\n          \"is displayed) to quit.\n\"))"];
"1000528" [label="(Identifier,stderr)"];
"1000539" [label="(Literal,\"    -loop\tloops through background images after initial display\n\"\n           \"\t\t  is complete (depends on -bgpat)\n\"\n          \"    sec \tseconds to display each background image (default = 2)\n\")"];
"1000538" [label="(Identifier,stderr)"];
"1000537" [label="(Call,fprintf(stderr,\n           \"    -loop\tloops through background images after initial display\n\"\n           \"\t\t  is complete (depends on -bgpat)\n\"\n          \"    sec \tseconds to display each background image (default = 2)\n\"))"];
"1000517" [label="(Literal,\"\n\"\n          \"Usage:   \")"];
"1000533" [label="(Literal,\"\t\t  and the CRT exponent (usually 2.2); must be positive\n\"\n           \"    bg  \tdesired background color in 7-character hex RGB format\n\"\n           \"\t\t  (e.g., ``#ff7700'' for orange:  same as HTML colors);\n\"\n           \"\t\t  used with transparent images; overrides -bgpat\n\"\n           \"    pat \tdesired background pattern number (0-%d); used with\n\"\n          \"\t\t  transparent images; overrides -bgcolor\n\")"];
"1000534" [label="(Call,num_bgpat-1)"];
"1000514" [label="(Call,readpng2_version_info())"];
"1000519" [label="(Identifier,stderr)"];
"1000510" [label="(Literal,\"\n%s %s:  %s\n\n\")"];
"1000516" [label="(Identifier,stderr)"];
"1000532" [label="(Identifier,stderr)"];
"1000529" [label="(Literal,\"    xdpy\tname of the target X display (e.g., ``hostname:0'')\n\"\n           \"    exp \ttransfer-function exponent (``gamma'') of the display\n\"\n           \"\t\t  system in floating-point format (e.g., ``%.1f''); equal\n\"\n          \"\t\t  to the product of the lookup-table exponent (varies)\n\")"];
"1000513" [label="(Identifier,appname)"];
"1001099" [label="(MethodReturn,int)"];
"1000522" [label="(Call,(int)strlen(PROGNAME))"];
"1000207" [label="(Call,default_display_exponent = LUT_exponent * CRT_exponent)"];
"1000540" [label="(Call,fprintf(stderr,\n           \"    dur \tduration in microseconds to wait after displaying each\n\"\n           \"\t\t  row (for demo purposes)\n\"\n           \"    -timing\tenables delay for every block read, to simulate modem\n\"\n           \"\t\t  download of image (~36 Kbps)\n\"\n           \"    -pause\tpauses after displaying each pass until mouse clicked\n\"\n           \"\nPress Q, Esc or mouse button 1 (within image window, after image\n\"\n          \"is displayed) to quit.\n\"))"];
"1000544" [label="(Literal,1)"];
"1000512" [label="(Identifier,VERSION)"];
"1000530" [label="(Identifier,default_display_exponent)"];
"1000507" [label="(Block,)"];
"1000525" [label="(Identifier,PROGNAME)"];
"1000541" [label="(Identifier,stderr)"];
"1000511" [label="(Identifier,PROGNAME)"];
"1000508" [label="(Call,fprintf(stderr, \"\n%s %s:  %s\n\n\", PROGNAME, VERSION, appname))"];
"1000518" [label="(Call,fprintf(stderr,\n          \"%s [-display xdpy] [-gamma exp] [-bgcolor bg | -bgpat pat]\n\"\n          \"        %*s [-usleep dur | -timing] [-pause]\n\",\n          PROGNAME, (int)strlen(PROGNAME), \" \"))"];
"1000527" [label="(Call,fprintf(stderr,\n           \"    xdpy\tname of the target X display (e.g., ``hostname:0'')\n\"\n           \"    exp \ttransfer-function exponent (``gamma'') of the display\n\"\n           \"\t\t  system in floating-point format (e.g., ``%.1f''); equal\n\"\n          \"\t\t  to the product of the lookup-table exponent (varies)\n\",\n          default_display_exponent))"];
"1000509" [label="(Identifier,stderr)"];
"1000531" [label="(Call,fprintf(stderr,\n           \"\t\t  and the CRT exponent (usually 2.2); must be positive\n\"\n           \"    bg  \tdesired background color in 7-character hex RGB format\n\"\n           \"\t\t  (e.g., ``#ff7700'' for orange:  same as HTML colors);\n\"\n           \"\t\t  used with transparent images; overrides -bgpat\n\"\n           \"    pat \tdesired background pattern number (0-%d); used with\n\"\n          \"\t\t  transparent images; overrides -bgcolor\n\",\n          num_bgpat-1))"];
"1000520" [label="(Literal,\"%s [-display xdpy] [-gamma exp] [-bgcolor bg | -bgpat pat]\n\"\n          \"        %*s [-usleep dur | -timing] [-pause]\n\")"];
"1000542" [label="(Literal,\"    dur \tduration in microseconds to wait after displaying each\n\"\n           \"\t\t  row (for demo purposes)\n\"\n           \"    -timing\tenables delay for every block read, to simulate modem\n\"\n           \"\t\t  download of image (~36 Kbps)\n\"\n           \"    -pause\tpauses after displaying each pass until mouse clicked\n\"\n           \"\nPress Q, Esc or mouse button 1 (within image window, after image\n\"\n          \"is displayed) to quit.\n\")"];
"1000526" [label="(Literal,\" \")"];
"1000524" [label="(Call,strlen(PROGNAME))"];
"1000624" [label="(Call,strlen(appname))"];
"1000521" [label="(Identifier,PROGNAME)"];
"1000515" [label="(Call,fprintf(stderr, \"\n\"\n          \"Usage:   \"))"];
"1000518" -> "1000507"  [label="AST: "];
"1000518" -> "1000526"  [label="CFG: "];
"1000519" -> "1000518"  [label="AST: "];
"1000520" -> "1000518"  [label="AST: "];
"1000521" -> "1000518"  [label="AST: "];
"1000522" -> "1000518"  [label="AST: "];
"1000526" -> "1000518"  [label="AST: "];
"1000528" -> "1000518"  [label="CFG: "];
"1000518" -> "1001099"  [label="DDG: "];
"1000518" -> "1001099"  [label="DDG: "];
"1000518" -> "1001099"  [label="DDG: "];
"1000515" -> "1000518"  [label="DDG: "];
"1000524" -> "1000518"  [label="DDG: "];
"1000522" -> "1000518"  [label="DDG: "];
"1000518" -> "1000527"  [label="DDG: "];
"1000515" -> "1000507"  [label="AST: "];
"1000515" -> "1000517"  [label="CFG: "];
"1000516" -> "1000515"  [label="AST: "];
"1000517" -> "1000515"  [label="AST: "];
"1000519" -> "1000515"  [label="CFG: "];
"1000515" -> "1001099"  [label="DDG: "];
"1000508" -> "1000515"  [label="DDG: "];
"1000508" -> "1000507"  [label="AST: "];
"1000508" -> "1000513"  [label="CFG: "];
"1000509" -> "1000508"  [label="AST: "];
"1000510" -> "1000508"  [label="AST: "];
"1000511" -> "1000508"  [label="AST: "];
"1000512" -> "1000508"  [label="AST: "];
"1000513" -> "1000508"  [label="AST: "];
"1000514" -> "1000508"  [label="CFG: "];
"1000508" -> "1001099"  [label="DDG: "];
"1000508" -> "1001099"  [label="DDG: "];
"1000508" -> "1000524"  [label="DDG: "];
"1000508" -> "1000624"  [label="DDG: "];
"1000524" -> "1000522"  [label="AST: "];
"1000524" -> "1000525"  [label="CFG: "];
"1000525" -> "1000524"  [label="AST: "];
"1000522" -> "1000524"  [label="CFG: "];
"1000524" -> "1000522"  [label="DDG: "];
"1000523" -> "1000522"  [label="AST: "];
"1000526" -> "1000522"  [label="CFG: "];
"1000522" -> "1001099"  [label="DDG: "];
"1000527" -> "1000507"  [label="AST: "];
"1000527" -> "1000530"  [label="CFG: "];
"1000528" -> "1000527"  [label="AST: "];
"1000529" -> "1000527"  [label="AST: "];
"1000530" -> "1000527"  [label="AST: "];
"1000532" -> "1000527"  [label="CFG: "];
"1000527" -> "1001099"  [label="DDG: "];
"1000527" -> "1001099"  [label="DDG: "];
"1000207" -> "1000527"  [label="DDG: "];
"1000527" -> "1000531"  [label="DDG: "];
"1000531" -> "1000507"  [label="AST: "];
"1000531" -> "1000534"  [label="CFG: "];
"1000532" -> "1000531"  [label="AST: "];
"1000533" -> "1000531"  [label="AST: "];
"1000534" -> "1000531"  [label="AST: "];
"1000538" -> "1000531"  [label="CFG: "];
"1000531" -> "1001099"  [label="DDG: "];
"1000531" -> "1001099"  [label="DDG: "];
"1000534" -> "1000531"  [label="DDG: "];
"1000534" -> "1000531"  [label="DDG: "];
"1000531" -> "1000537"  [label="DDG: "];
"1000537" -> "1000507"  [label="AST: "];
"1000537" -> "1000539"  [label="CFG: "];
"1000538" -> "1000537"  [label="AST: "];
"1000539" -> "1000537"  [label="AST: "];
"1000541" -> "1000537"  [label="CFG: "];
"1000537" -> "1001099"  [label="DDG: "];
"1000537" -> "1000540"  [label="DDG: "];
"1000540" -> "1000507"  [label="AST: "];
"1000540" -> "1000542"  [label="CFG: "];
"1000541" -> "1000540"  [label="AST: "];
"1000542" -> "1000540"  [label="AST: "];
"1000544" -> "1000540"  [label="CFG: "];
"1000540" -> "1001099"  [label="DDG: "];
"1000540" -> "1001099"  [label="DDG: "];
}
