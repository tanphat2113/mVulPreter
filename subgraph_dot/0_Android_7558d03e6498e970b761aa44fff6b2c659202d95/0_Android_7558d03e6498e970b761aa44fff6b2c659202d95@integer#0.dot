digraph "0_Android_7558d03e6498e970b761aa44fff6b2c659202d95@integer" {
"1000293" [label="(Call,*bufferHdr = (m_inp_mem_ptr + i))"];
"1000179" [label="(Call,DEBUG_PRINT_LOW(\"Successfully allocated m_inp_mem_ptr = %p\", m_inp_mem_ptr))"];
"1000171" [label="(Call,m_inp_mem_ptr == NULL)"];
"1000160" [label="(Call,m_inp_mem_ptr = (OMX_BUFFERHEADERTYPE*) \\n                        calloc( (sizeof(OMX_BUFFERHEADERTYPE)), m_sInPortDef.nBufferCountActual))"];
"1000162" [label="(Call,(OMX_BUFFERHEADERTYPE*) \\n                        calloc( (sizeof(OMX_BUFFERHEADERTYPE)), m_sInPortDef.nBufferCountActual))"];
"1000164" [label="(Call,calloc( (sizeof(OMX_BUFFERHEADERTYPE)), m_sInPortDef.nBufferCountActual))"];
"1000155" [label="(Call,(unsigned int)m_sInPortDef.nBufferCountActual)"];
"1000144" [label="(Call,!m_inp_mem_ptr)"];
"1000287" [label="(Call,i < m_sInPortDef.nBufferCountActual)"];
"1000271" [label="(Call,i< m_sInPortDef.nBufferCountActual)"];
"1000268" [label="(Call,i=0)"];
"1000276" [label="(Call,i++)"];
"1000280" [label="(Call,BITMASK_ABSENT(&m_inp_bm_count,i))"];
"1000224" [label="(Call,i< m_sInPortDef.nBufferCountActual)"];
"1000221" [label="(Call,i=0)"];
"1000229" [label="(Call,i++)"];
"1000205" [label="(Call,calloc(sizeof (struct venc_ion), m_sInPortDef.nBufferCountActual))"];
"1000186" [label="(Call,calloc(sizeof (struct pmem), m_sInPortDef.nBufferCountActual))"];
"1000193" [label="(Call,m_pInput_pmem == NULL)"];
"1000269" [label="(Identifier,i)"];
"1000183" [label="(Identifier,m_pInput_pmem)"];
"1000267" [label="(ControlStructure,for (i=0; i< m_sInPortDef.nBufferCountActual; i++))"];
"1000170" [label="(ControlStructure,if (m_inp_mem_ptr == NULL))"];
"1000271" [label="(Call,i< m_sInPortDef.nBufferCountActual)"];
"1000161" [label="(Identifier,m_inp_mem_ptr)"];
"1000189" [label="(Call,m_sInPortDef.nBufferCountActual)"];
"1000165" [label="(Call,sizeof(OMX_BUFFERHEADERTYPE))"];
"1000293" [label="(Call,*bufferHdr = (m_inp_mem_ptr + i))"];
"1000295" [label="(Identifier,bufferHdr)"];
"1000559" [label="(Call,DEBUG_PRINT_ERROR(\"ERROR: All i/p buffers are allocated, invalid allocate buf call\"\n \"for index [%d]\", i))"];
"1000286" [label="(ControlStructure,if (i < m_sInPortDef.nBufferCountActual))"];
"1000160" [label="(Call,m_inp_mem_ptr = (OMX_BUFFERHEADERTYPE*) \\n                        calloc( (sizeof(OMX_BUFFERHEADERTYPE)), m_sInPortDef.nBufferCountActual))"];
"1000294" [label="(Call,*bufferHdr)"];
"1000282" [label="(Identifier,m_inp_bm_count)"];
"1000268" [label="(Call,i=0)"];
"1000208" [label="(Call,m_sInPortDef.nBufferCountActual)"];
"1000235" [label="(Identifier,m_pInput_pmem)"];
"1000172" [label="(Identifier,m_inp_mem_ptr)"];
"1000162" [label="(Call,(OMX_BUFFERHEADERTYPE*) \\n                        calloc( (sizeof(OMX_BUFFERHEADERTYPE)), m_sInPortDef.nBufferCountActual))"];
"1000203" [label="(Call,(struct venc_ion *) calloc(sizeof (struct venc_ion), m_sInPortDef.nBufferCountActual))"];
"1000283" [label="(Identifier,i)"];
"1000167" [label="(Call,m_sInPortDef.nBufferCountActual)"];
"1000288" [label="(Identifier,i)"];
"1000224" [label="(Call,i< m_sInPortDef.nBufferCountActual)"];
"1000273" [label="(Call,m_sInPortDef.nBufferCountActual)"];
"1000157" [label="(Call,m_sInPortDef.nBufferCountActual)"];
"1000180" [label="(Literal,\"Successfully allocated m_inp_mem_ptr = %p\")"];
"1000143" [label="(ControlStructure,if (!m_inp_mem_ptr))"];
"1000171" [label="(Call,m_inp_mem_ptr == NULL)"];
"1000281" [label="(Call,&m_inp_bm_count)"];
"1000276" [label="(Call,i++)"];
"1000296" [label="(Call,m_inp_mem_ptr + i)"];
"1000173" [label="(Identifier,NULL)"];
"1000144" [label="(Call,!m_inp_mem_ptr)"];
"1000155" [label="(Call,(unsigned int)m_sInPortDef.nBufferCountActual)"];
"1000289" [label="(Call,m_sInPortDef.nBufferCountActual)"];
"1000270" [label="(Literal,0)"];
"1000206" [label="(Call,sizeof (struct venc_ion))"];
"1000220" [label="(ControlStructure,for (i=0; i< m_sInPortDef.nBufferCountActual; i++))"];
"1000292" [label="(Block,)"];
"1000186" [label="(Call,calloc(sizeof (struct pmem), m_sInPortDef.nBufferCountActual))"];
"1000147" [label="(Call,DEBUG_PRINT_HIGH(\"%s: size = %u, actual cnt %u\", __FUNCTION__,\n (unsigned int)m_sInPortDef.nBufferSize, (unsigned int)m_sInPortDef.nBufferCountActual))"];
"1000280" [label="(Call,BITMASK_ABSENT(&m_inp_bm_count,i))"];
"1000176" [label="(Literal,\"ERROR: calloc() Failed for m_inp_mem_ptr\")"];
"1000226" [label="(Call,m_sInPortDef.nBufferCountActual)"];
"1000230" [label="(Identifier,i)"];
"1000287" [label="(Call,i < m_sInPortDef.nBufferCountActual)"];
"1000181" [label="(Identifier,m_inp_mem_ptr)"];
"1000302" [label="(Identifier,bufferHdr)"];
"1000222" [label="(Identifier,i)"];
"1000277" [label="(Identifier,i)"];
"1000560" [label="(Literal,\"ERROR: All i/p buffers are allocated, invalid allocate buf call\"\n \"for index [%d]\")"];
"1000187" [label="(Call,sizeof (struct pmem))"];
"1000184" [label="(Call,(struct pmem *) calloc(sizeof (struct pmem), m_sInPortDef.nBufferCountActual))"];
"1000272" [label="(Identifier,i)"];
"1000223" [label="(Literal,0)"];
"1000225" [label="(Identifier,i)"];
"1000285" [label="(ControlStructure,break;)"];
"1000164" [label="(Call,calloc( (sizeof(OMX_BUFFERHEADERTYPE)), m_sInPortDef.nBufferCountActual))"];
"1000205" [label="(Call,calloc(sizeof (struct venc_ion), m_sInPortDef.nBufferCountActual))"];
"1000535" [label="(Call,BITMASK_SET(&m_inp_bm_count,i))"];
"1000179" [label="(Call,DEBUG_PRINT_LOW(\"Successfully allocated m_inp_mem_ptr = %p\", m_inp_mem_ptr))"];
"1000146" [label="(Block,)"];
"1000148" [label="(Literal,\"%s: size = %u, actual cnt %u\")"];
"1000279" [label="(ControlStructure,if (BITMASK_ABSENT(&m_inp_bm_count,i)))"];
"1000221" [label="(Call,i=0)"];
"1000567" [label="(MethodReturn,OMX_ERRORTYPE)"];
"1000145" [label="(Identifier,m_inp_mem_ptr)"];
"1000229" [label="(Call,i++)"];
"1000293" -> "1000292"  [label="AST: "];
"1000293" -> "1000296"  [label="CFG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000296" -> "1000293"  [label="AST: "];
"1000302" -> "1000293"  [label="CFG: "];
"1000293" -> "1000567"  [label="DDG: "];
"1000293" -> "1000567"  [label="DDG: "];
"1000179" -> "1000293"  [label="DDG: "];
"1000144" -> "1000293"  [label="DDG: "];
"1000287" -> "1000293"  [label="DDG: "];
"1000179" -> "1000146"  [label="AST: "];
"1000179" -> "1000181"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000181" -> "1000179"  [label="AST: "];
"1000183" -> "1000179"  [label="CFG: "];
"1000179" -> "1000567"  [label="DDG: "];
"1000179" -> "1000567"  [label="DDG: "];
"1000171" -> "1000179"  [label="DDG: "];
"1000179" -> "1000296"  [label="DDG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000171" -> "1000173"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="AST: "];
"1000176" -> "1000171"  [label="CFG: "];
"1000180" -> "1000171"  [label="CFG: "];
"1000171" -> "1000567"  [label="DDG: "];
"1000171" -> "1000567"  [label="DDG: "];
"1000171" -> "1000567"  [label="DDG: "];
"1000160" -> "1000171"  [label="DDG: "];
"1000171" -> "1000193"  [label="DDG: "];
"1000160" -> "1000146"  [label="AST: "];
"1000160" -> "1000162"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000162" -> "1000160"  [label="AST: "];
"1000172" -> "1000160"  [label="CFG: "];
"1000160" -> "1000567"  [label="DDG: "];
"1000162" -> "1000160"  [label="DDG: "];
"1000162" -> "1000164"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000164" -> "1000162"  [label="AST: "];
"1000162" -> "1000567"  [label="DDG: "];
"1000164" -> "1000162"  [label="DDG: "];
"1000164" -> "1000167"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000167" -> "1000164"  [label="AST: "];
"1000164" -> "1000567"  [label="DDG: "];
"1000155" -> "1000164"  [label="DDG: "];
"1000164" -> "1000186"  [label="DDG: "];
"1000155" -> "1000147"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000157" -> "1000155"  [label="AST: "];
"1000147" -> "1000155"  [label="CFG: "];
"1000155" -> "1000147"  [label="DDG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000144" -> "1000145"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000148" -> "1000144"  [label="CFG: "];
"1000269" -> "1000144"  [label="CFG: "];
"1000144" -> "1000567"  [label="DDG: "];
"1000144" -> "1000567"  [label="DDG: "];
"1000144" -> "1000296"  [label="DDG: "];
"1000287" -> "1000286"  [label="AST: "];
"1000287" -> "1000289"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000287"  [label="AST: "];
"1000295" -> "1000287"  [label="CFG: "];
"1000560" -> "1000287"  [label="CFG: "];
"1000287" -> "1000567"  [label="DDG: "];
"1000287" -> "1000567"  [label="DDG: "];
"1000271" -> "1000287"  [label="DDG: "];
"1000271" -> "1000287"  [label="DDG: "];
"1000280" -> "1000287"  [label="DDG: "];
"1000287" -> "1000296"  [label="DDG: "];
"1000287" -> "1000535"  [label="DDG: "];
"1000287" -> "1000559"  [label="DDG: "];
"1000271" -> "1000267"  [label="AST: "];
"1000271" -> "1000273"  [label="CFG: "];
"1000272" -> "1000271"  [label="AST: "];
"1000273" -> "1000271"  [label="AST: "];
"1000282" -> "1000271"  [label="CFG: "];
"1000288" -> "1000271"  [label="CFG: "];
"1000271" -> "1000567"  [label="DDG: "];
"1000268" -> "1000271"  [label="DDG: "];
"1000276" -> "1000271"  [label="DDG: "];
"1000224" -> "1000271"  [label="DDG: "];
"1000271" -> "1000280"  [label="DDG: "];
"1000268" -> "1000267"  [label="AST: "];
"1000268" -> "1000270"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000270" -> "1000268"  [label="AST: "];
"1000272" -> "1000268"  [label="CFG: "];
"1000276" -> "1000267"  [label="AST: "];
"1000276" -> "1000277"  [label="CFG: "];
"1000277" -> "1000276"  [label="AST: "];
"1000272" -> "1000276"  [label="CFG: "];
"1000280" -> "1000276"  [label="DDG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000280" -> "1000283"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000283" -> "1000280"  [label="AST: "];
"1000285" -> "1000280"  [label="CFG: "];
"1000277" -> "1000280"  [label="CFG: "];
"1000280" -> "1000567"  [label="DDG: "];
"1000280" -> "1000567"  [label="DDG: "];
"1000280" -> "1000535"  [label="DDG: "];
"1000224" -> "1000220"  [label="AST: "];
"1000224" -> "1000226"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000235" -> "1000224"  [label="CFG: "];
"1000269" -> "1000224"  [label="CFG: "];
"1000221" -> "1000224"  [label="DDG: "];
"1000229" -> "1000224"  [label="DDG: "];
"1000205" -> "1000224"  [label="DDG: "];
"1000224" -> "1000229"  [label="DDG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000225" -> "1000221"  [label="CFG: "];
"1000229" -> "1000220"  [label="AST: "];
"1000229" -> "1000230"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000225" -> "1000229"  [label="CFG: "];
"1000205" -> "1000203"  [label="AST: "];
"1000205" -> "1000208"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000208" -> "1000205"  [label="AST: "];
"1000203" -> "1000205"  [label="CFG: "];
"1000205" -> "1000567"  [label="DDG: "];
"1000205" -> "1000203"  [label="DDG: "];
"1000186" -> "1000205"  [label="DDG: "];
"1000186" -> "1000184"  [label="AST: "];
"1000186" -> "1000189"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000189" -> "1000186"  [label="AST: "];
"1000184" -> "1000186"  [label="CFG: "];
"1000186" -> "1000567"  [label="DDG: "];
"1000186" -> "1000184"  [label="DDG: "];
}
