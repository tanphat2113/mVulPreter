digraph "0_ImageMagick6_19651f3db63fa1511ed83a348c4c82fa553f8d01@pointer" {
"1000114" [label="(MethodParameterIn,Image *image)"];
"1000160" [label="(Call,WriteBlobByte(image,(unsigned char) length))"];
"1000158" [label="(Call,(void) WriteBlobByte(image,(unsigned char) length))"];
"1000167" [label="(Call,WriteBlob(image,length,packet))"];
"1000165" [label="(Call,(void) WriteBlob(image,length,packet))"];
"1000221" [label="(Call,image != (Image *) NULL)"];
"1000220" [label="(Call,assert(image != (Image *) NULL))"];
"1000445" [label="(Call,GetVirtualPixels(image,0,offset,image->columns,1,&image->exception))"];
"1000443" [label="(Call,p=GetVirtualPixels(image,0,offset,image->columns,1,&image->exception))"];
"1000458" [label="(Call,p == (const PixelPacket *) NULL)"];
"1000479" [label="(Call,p++)"];
"1000520" [label="(Call,p++)"];
"1000466" [label="(Call,GetVirtualIndexQueue(image))"];
"1000464" [label="(Call,indexes=GetVirtualIndexQueue(image))"];
"1000515" [label="(Call,GetPixelIndex(indexes+x))"];
"1000513" [label="(Call,(size_t) GetPixelIndex(indexes+x))"];
"1000512" [label="(Call,(size_t) GetPixelIndex(indexes+x) & 0xff)"];
"1000510" [label="(Call,(IndexPacket) ((size_t) GetPixelIndex(indexes+x) & 0xff))"];
"1000508" [label="(Call,index=(IndexPacket) ((size_t) GetPixelIndex(indexes+x) & 0xff))"];
"1000528" [label="(Call,(size_t) index)"];
"1000527" [label="(Call,(size_t) index << (MaxGIFBits-8))"];
"1000524" [label="(Call,(ssize_t) (((size_t) index << (MaxGIFBits-8))+waiting_code))"];
"1000522" [label="(Call,k=(ssize_t) (((size_t) index << (MaxGIFBits-8))+waiting_code))"];
"1000536" [label="(Call,k >= MaxHashTable)"];
"1000539" [label="(Call,k-=MaxHashTable)"];
"1000543" [label="(Call,k < 0)"];
"1000576" [label="(Call,k != 0)"];
"1000581" [label="(Call,MaxHashTable-k)"];
"1000579" [label="(Call,displacement=MaxHashTable-k)"];
"1000586" [label="(Call,k-=displacement)"];
"1000590" [label="(Call,k < 0)"];
"1000593" [label="(Call,k+=MaxHashTable)"];
"1000665" [label="(Call,k < MaxHashTable)"];
"1000668" [label="(Call,k++)"];
"1000526" [label="(Call,((size_t) index << (MaxGIFBits-8))+waiting_code)"];
"1000565" [label="(Call,(unsigned char) index)"];
"1000561" [label="(Call,hash_suffix[k] == (unsigned char) index)"];
"1000555" [label="(Call,(hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index))"];
"1000604" [label="(Call,(hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index))"];
"1000610" [label="(Call,hash_suffix[k] == (unsigned char) index)"];
"1000835" [label="(Call,RelinquishMagickMemory(hash_suffix))"];
"1000833" [label="(Call,(unsigned char *) RelinquishMagickMemory(hash_suffix))"];
"1000831" [label="(Call,hash_suffix=(unsigned char *) RelinquishMagickMemory(hash_suffix))"];
"1000614" [label="(Call,(unsigned char) index)"];
"1000656" [label="(Call,(unsigned char) index)"];
"1000652" [label="(Call,hash_suffix[k]=(unsigned char) index)"];
"1000691" [label="(Call,(short) index)"];
"1000689" [label="(Call,waiting_code=(short) index)"];
"1000556" [label="(Call,hash_prefix[k] == waiting_code)"];
"1000605" [label="(Call,hash_prefix[k] == waiting_code)"];
"1000632" [label="(Call,GIFOutputCode(waiting_code))"];
"1000647" [label="(Call,hash_prefix[k]=waiting_code)"];
"1000841" [label="(Call,RelinquishMagickMemory(hash_prefix))"];
"1000839" [label="(Call,(short *) RelinquishMagickMemory(hash_prefix))"];
"1000837" [label="(Call,hash_prefix=(short *) RelinquishMagickMemory(hash_prefix))"];
"1000773" [label="(Call,GIFOutputCode(waiting_code))"];
"1000516" [label="(Call,indexes+x)"];
"1000799" [label="(Call,WriteBlobByte(image,(unsigned char) length))"];
"1000797" [label="(Call,(void) WriteBlobByte(image,(unsigned char) length))"];
"1000806" [label="(Call,WriteBlob(image,length,packet))"];
"1000804" [label="(Call,(void) WriteBlob(image,length,packet))"];
"1000820" [label="(Call,WriteBlobByte(image,(unsigned char) length))"];
"1000818" [label="(Call,(void) WriteBlobByte(image,(unsigned char) length))"];
"1000827" [label="(Call,WriteBlob(image,length,packet))"];
"1000825" [label="(Call,(void) WriteBlob(image,length,packet))"];
"1000853" [label="(Call,RelinquishMagickMemory(packet))"];
"1000851" [label="(Call,(unsigned char *) RelinquishMagickMemory(packet))"];
"1000849" [label="(Call,packet=(unsigned char *) RelinquishMagickMemory(packet))"];
"1000494" [label="(Call,(ssize_t) image->columns)"];
"1000492" [label="(Call,x < (ssize_t) image->columns)"];
"1000499" [label="(Call,x++)"];
"1000700" [label="(Call,offset++)"];
"1000709" [label="(Call,offset+=8)"];
"1000713" [label="(Call,offset >= (ssize_t) image->rows)"];
"1000729" [label="(Call,offset+=8)"];
"1000733" [label="(Call,offset >= (ssize_t) image->rows)"];
"1000749" [label="(Call,offset+=4)"];
"1000753" [label="(Call,offset >= (ssize_t) image->rows)"];
"1000769" [label="(Call,offset+=2)"];
"1000227" [label="(Identifier,one)"];
"1000576" [label="(Call,k != 0)"];
"1000465" [label="(Identifier,indexes)"];
"1000748" [label="(Block,)"];
"1000827" [label="(Call,WriteBlob(image,length,packet))"];
"1000694" [label="(ControlStructure,if (image_info->interlace == NoInterlace))"];
"1000438" [label="(Identifier,y)"];
"1000443" [label="(Call,p=GetVirtualPixels(image,0,offset,image->columns,1,&image->exception))"];
"1000523" [label="(Identifier,k)"];
"1000668" [label="(Call,k++)"];
"1000651" [label="(Identifier,waiting_code)"];
"1000544" [label="(Identifier,k)"];
"1000722" [label="(Identifier,pass)"];
"1000463" [label="(ControlStructure,break;)"];
"1000536" [label="(Call,k >= MaxHashTable)"];
"1000492" [label="(Call,x < (ssize_t) image->columns)"];
"1000768" [label="(Block,)"];
"1000458" [label="(Call,p == (const PixelPacket *) NULL)"];
"1000693" [label="(Identifier,index)"];
"1000806" [label="(Call,WriteBlob(image,length,packet))"];
"1000731" [label="(Literal,8)"];
"1000503" [label="(Identifier,next_pixel)"];
"1000754" [label="(Identifier,offset)"];
"1000567" [label="(Identifier,index)"];
"1000604" [label="(Call,(hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index))"];
"1000417" [label="(Call,offset=0)"];
"1000804" [label="(Call,(void) WriteBlob(image,length,packet))"];
"1000841" [label="(Call,RelinquishMagickMemory(hash_prefix))"];
"1000854" [label="(Identifier,packet)"];
"1000609" [label="(Identifier,waiting_code)"];
"1000510" [label="(Call,(IndexPacket) ((size_t) GetPixelIndex(indexes+x) & 0xff))"];
"1000689" [label="(Call,waiting_code=(short) index)"];
"1000690" [label="(Identifier,waiting_code)"];
"1000472" [label="(Block,)"];
"1000710" [label="(Identifier,offset)"];
"1000375" [label="(Call,MaxHashTable*sizeof(*hash_suffix))"];
"1000782" [label="(Call,packet[length++]=(unsigned char) (datum & 0xff))"];
"1000676" [label="(Identifier,free_code)"];
"1000473" [label="(Call,waiting_code=(short) (*indexes))"];
"1000849" [label="(Call,packet=(unsigned char *) RelinquishMagickMemory(packet))"];
"1000519" [label="(Literal,0xff)"];
"1000362" [label="(Call,memset(hash_prefix,0,MaxHashTable*sizeof(*hash_prefix)))"];
"1000691" [label="(Call,(short) index)"];
"1000836" [label="(Identifier,hash_suffix)"];
"1000612" [label="(Identifier,hash_suffix)"];
"1000470" [label="(Identifier,y)"];
"1000172" [label="(Identifier,length)"];
"1000818" [label="(Call,(void) WriteBlobByte(image,(unsigned char) length))"];
"1000752" [label="(ControlStructure,if (offset >= (ssize_t) image->rows))"];
"1000222" [label="(Identifier,image)"];
"1000743" [label="(Call,offset=2)"];
"1000594" [label="(Identifier,k)"];
"1000751" [label="(Literal,4)"];
"1000423" [label="(Call,waiting_code=0)"];
"1000662" [label="(Call,k=0)"];
"1000700" [label="(Call,offset++)"];
"1000460" [label="(Call,(const PixelPacket *) NULL)"];
"1000799" [label="(Call,WriteBlobByte(image,(unsigned char) length))"];
"1000165" [label="(Call,(void) WriteBlob(image,length,packet))"];
"1000116" [label="(Block,)"];
"1000520" [label="(Call,p++)"];
"1000570" [label="(Identifier,waiting_code)"];
"1000526" [label="(Call,((size_t) index << (MaxGIFBits-8))+waiting_code)"];
"1000857" [label="(MethodReturn,static MagickBooleanType)"];
"1000560" [label="(Identifier,waiting_code)"];
"1000496" [label="(Call,image->columns)"];
"1000734" [label="(Identifier,offset)"];
"1000541" [label="(Identifier,MaxHashTable)"];
"1000669" [label="(Identifier,k)"];
"1000732" [label="(ControlStructure,if (offset >= (ssize_t) image->rows))"];
"1000769" [label="(Call,offset+=2)"];
"1000770" [label="(Identifier,offset)"];
"1000592" [label="(Literal,0)"];
"1000524" [label="(Call,(ssize_t) (((size_t) index << (MaxGIFBits-8))+waiting_code))"];
"1000168" [label="(Identifier,image)"];
"1000517" [label="(Identifier,indexes)"];
"1000542" [label="(ControlStructure,if (k < 0))"];
"1000480" [label="(Identifier,p)"];
"1000850" [label="(Identifier,packet)"];
"1000832" [label="(Identifier,hash_suffix)"];
"1000811" [label="(Identifier,length)"];
"1000513" [label="(Call,(size_t) GetPixelIndex(indexes+x))"];
"1000565" [label="(Call,(unsigned char) index)"];
"1000632" [label="(Call,GIFOutputCode(waiting_code))"];
"1000829" [label="(Identifier,length)"];
"1000726" [label="(ControlStructure,break;)"];
"1000439" [label="(Block,)"];
"1000537" [label="(Identifier,k)"];
"1000162" [label="(Call,(unsigned char) length)"];
"1000505" [label="(Call,displacement=1)"];
"1000595" [label="(Identifier,MaxHashTable)"];
"1000755" [label="(Call,(ssize_t) image->rows)"];
"1000157" [label="(Block,)"];
"1000550" [label="(Identifier,hash_code)"];
"1000554" [label="(ControlStructure,if ((hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index)))"];
"1000588" [label="(Identifier,displacement)"];
"1000500" [label="(Identifier,x)"];
"1000715" [label="(Call,(ssize_t) image->rows)"];
"1000577" [label="(Identifier,k)"];
"1000672" [label="(Identifier,hash_code)"];
"1000555" [label="(Call,(hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index))"];
"1000821" [label="(Identifier,image)"];
"1000579" [label="(Call,displacement=MaxHashTable-k)"];
"1000831" [label="(Call,hash_suffix=(unsigned char *) RelinquishMagickMemory(hash_suffix))"];
"1000446" [label="(Identifier,image)"];
"1000733" [label="(Call,offset >= (ssize_t) image->rows)"];
"1000774" [label="(Identifier,waiting_code)"];
"1000742" [label="(Identifier,pass)"];
"1000530" [label="(Identifier,index)"];
"1000656" [label="(Call,(unsigned char) index)"];
"1000713" [label="(Call,offset >= (ssize_t) image->rows)"];
"1000543" [label="(Call,k < 0)"];
"1000561" [label="(Call,hash_suffix[k] == (unsigned char) index)"];
"1000448" [label="(Identifier,offset)"];
"1000444" [label="(Identifier,p)"];
"1000586" [label="(Call,k-=displacement)"];
"1000582" [label="(Identifier,MaxHashTable)"];
"1000540" [label="(Identifier,k)"];
"1000459" [label="(Identifier,p)"];
"1000169" [label="(Identifier,length)"];
"1000493" [label="(Identifier,x)"];
"1000835" [label="(Call,RelinquishMagickMemory(hash_suffix))"];
"1000143" [label="(Call,packet[length++]=(unsigned char) (datum & 0xff))"];
"1000161" [label="(Identifier,image)"];
"1000452" [label="(Literal,1)"];
"1000532" [label="(Identifier,MaxGIFBits)"];
"1000114" [label="(MethodParameterIn,Image *image)"];
"1000636" [label="(Identifier,free_code)"];
"1000709" [label="(Call,offset+=8)"];
"1000535" [label="(ControlStructure,if (k >= MaxHashTable))"];
"1000585" [label="(Block,)"];
"1000856" [label="(Identifier,MagickTrue)"];
"1000499" [label="(Call,x++)"];
"1000750" [label="(Identifier,offset)"];
"1000342" [label="(Call,memset(packet,0,256*sizeof(*packet)))"];
"1000711" [label="(Literal,8)"];
"1000583" [label="(Identifier,k)"];
"1000809" [label="(Identifier,packet)"];
"1000730" [label="(Identifier,offset)"];
"1000728" [label="(Block,)"];
"1000569" [label="(Call,waiting_code=hash_code[k])"];
"1000638" [label="(Block,)"];
"1000557" [label="(Call,hash_prefix[k])"];
"1000447" [label="(Literal,0)"];
"1000521" [label="(Identifier,p)"];
"1000534" [label="(Identifier,waiting_code)"];
"1000647" [label="(Call,hash_prefix[k]=waiting_code)"];
"1000796" [label="(Block,)"];
"1000746" [label="(ControlStructure,break;)"];
"1000606" [label="(Call,hash_prefix[k])"];
"1000531" [label="(Call,MaxGIFBits-8)"];
"1000844" [label="(Identifier,hash_code)"];
"1000771" [label="(Literal,2)"];
"1000797" [label="(Call,(void) WriteBlobByte(image,(unsigned char) length))"];
"1000773" [label="(Call,GIFOutputCode(waiting_code))"];
"1000587" [label="(Identifier,k)"];
"1000666" [label="(Identifier,k)"];
"1000830" [label="(Identifier,packet)"];
"1000837" [label="(Call,hash_prefix=(short *) RelinquishMagickMemory(hash_prefix))"];
"1000762" [label="(Identifier,pass)"];
"1000658" [label="(Identifier,index)"];
"1000614" [label="(Call,(unsigned char) index)"];
"1000170" [label="(Identifier,packet)"];
"1000808" [label="(Identifier,length)"];
"1000546" [label="(ControlStructure,continue;)"];
"1000619" [label="(Identifier,waiting_code)"];
"1000494" [label="(Call,(ssize_t) image->columns)"];
"1000516" [label="(Call,indexes+x)"];
"1000522" [label="(Call,k=(ssize_t) (((size_t) index << (MaxGIFBits-8))+waiting_code))"];
"1000483" [label="(Identifier,x)"];
"1000667" [label="(Identifier,MaxHashTable)"];
"1000158" [label="(Call,(void) WriteBlobByte(image,(unsigned char) length))"];
"1000654" [label="(Identifier,hash_suffix)"];
"1000518" [label="(Identifier,x)"];
"1000817" [label="(Block,)"];
"1000479" [label="(Call,p++)"];
"1000822" [label="(Call,(unsigned char) length)"];
"1000538" [label="(Identifier,MaxHashTable)"];
"1000539" [label="(Call,k-=MaxHashTable)"];
"1000223" [label="(Call,(Image *) NULL)"];
"1000445" [label="(Call,GetVirtualPixels(image,0,offset,image->columns,1,&image->exception))"];
"1000545" [label="(Literal,0)"];
"1000661" [label="(ControlStructure,for (k=0; k < MaxHashTable; k++))"];
"1000665" [label="(Call,k < MaxHashTable)"];
"1000633" [label="(Identifier,waiting_code)"];
"1000853" [label="(Call,RelinquishMagickMemory(packet))"];
"1000467" [label="(Identifier,image)"];
"1000833" [label="(Call,(unsigned char *) RelinquishMagickMemory(hash_suffix))"];
"1000562" [label="(Call,hash_suffix[k])"];
"1000563" [label="(Identifier,hash_suffix)"];
"1000842" [label="(Identifier,hash_prefix)"];
"1000449" [label="(Call,image->columns)"];
"1000591" [label="(Identifier,k)"];
"1000590" [label="(Call,k < 0)"];
"1000512" [label="(Call,(size_t) GetPixelIndex(indexes+x) & 0xff)"];
"1000766" [label="(ControlStructure,break;)"];
"1000603" [label="(ControlStructure,if ((hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index)))"];
"1000605" [label="(Call,hash_prefix[k] == waiting_code)"];
"1000753" [label="(Call,offset >= (ssize_t) image->rows)"];
"1000464" [label="(Call,indexes=GetVirtualIndexQueue(image))"];
"1000580" [label="(Identifier,displacement)"];
"1000610" [label="(Call,hash_suffix[k] == (unsigned char) index)"];
"1000653" [label="(Call,hash_suffix[k])"];
"1000575" [label="(ControlStructure,if (k != 0))"];
"1000599" [label="(Identifier,hash_code)"];
"1000801" [label="(Call,(unsigned char) length)"];
"1000372" [label="(Call,memset(hash_suffix,0,MaxHashTable*sizeof(*hash_suffix)))"];
"1000589" [label="(ControlStructure,if (k < 0))"];
"1000220" [label="(Call,assert(image != (Image *) NULL))"];
"1000800" [label="(Identifier,image)"];
"1000509" [label="(Identifier,index)"];
"1000581" [label="(Call,MaxHashTable-k)"];
"1000714" [label="(Identifier,offset)"];
"1000648" [label="(Call,hash_prefix[k])"];
"1000807" [label="(Identifier,image)"];
"1000825" [label="(Call,(void) WriteBlob(image,length,packet))"];
"1000723" [label="(Call,offset=4)"];
"1000708" [label="(Block,)"];
"1000851" [label="(Call,(unsigned char *) RelinquishMagickMemory(packet))"];
"1000712" [label="(ControlStructure,if (offset >= (ssize_t) image->rows))"];
"1000578" [label="(Literal,0)"];
"1000776" [label="(Identifier,end_of_information_code)"];
"1000508" [label="(Call,index=(IndexPacket) ((size_t) GetPixelIndex(indexes+x) & 0xff))"];
"1000453" [label="(Call,&image->exception)"];
"1000839" [label="(Call,(short *) RelinquishMagickMemory(hash_prefix))"];
"1000618" [label="(Call,waiting_code=hash_code[k])"];
"1000457" [label="(ControlStructure,if (p == (const PixelPacket *) NULL))"];
"1000735" [label="(Call,(ssize_t) image->rows)"];
"1000501" [label="(Block,)"];
"1000466" [label="(Call,GetVirtualIndexQueue(image))"];
"1000515" [label="(Call,GetPixelIndex(indexes+x))"];
"1000611" [label="(Call,hash_suffix[k])"];
"1000593" [label="(Call,k+=MaxHashTable)"];
"1000528" [label="(Call,(size_t) index)"];
"1000616" [label="(Identifier,index)"];
"1000749" [label="(Call,offset+=4)"];
"1000221" [label="(Call,image != (Image *) NULL)"];
"1000772" [label="(ControlStructure,break;)"];
"1000763" [label="(Call,offset=1)"];
"1000482" [label="(Call,x=(ssize_t) (y == 0 ? 1 : 0))"];
"1000556" [label="(Call,hash_prefix[k] == waiting_code)"];
"1000820" [label="(Call,WriteBlobByte(image,(unsigned char) length))"];
"1000701" [label="(Identifier,offset)"];
"1000828" [label="(Identifier,image)"];
"1000838" [label="(Identifier,hash_prefix)"];
"1000160" [label="(Call,WriteBlobByte(image,(unsigned char) length))"];
"1000481" [label="(ControlStructure,for (x=(ssize_t) (y == 0 ? 1 : 0); x < (ssize_t) image->columns; x++))"];
"1000167" [label="(Call,WriteBlob(image,length,packet))"];
"1000697" [label="(Identifier,image_info)"];
"1000652" [label="(Call,hash_suffix[k]=(unsigned char) index)"];
"1000527" [label="(Call,(size_t) index << (MaxGIFBits-8))"];
"1000729" [label="(Call,offset+=8)"];
"1000114" -> "1000112"  [label="AST: "];
"1000114" -> "1000857"  [label="DDG: image"];
"1000114" -> "1000160"  [label="DDG: image"];
"1000114" -> "1000167"  [label="DDG: image"];
"1000114" -> "1000221"  [label="DDG: image"];
"1000114" -> "1000445"  [label="DDG: image"];
"1000114" -> "1000466"  [label="DDG: image"];
"1000114" -> "1000799"  [label="DDG: image"];
"1000114" -> "1000806"  [label="DDG: image"];
"1000114" -> "1000820"  [label="DDG: image"];
"1000114" -> "1000827"  [label="DDG: image"];
"1000160" -> "1000158"  [label="AST: "];
"1000160" -> "1000162"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000162" -> "1000160"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000160" -> "1000857"  [label="DDG: (unsigned char) length"];
"1000160" -> "1000158"  [label="DDG: image"];
"1000160" -> "1000158"  [label="DDG: (unsigned char) length"];
"1000167" -> "1000160"  [label="DDG: image"];
"1000162" -> "1000160"  [label="DDG: length"];
"1000160" -> "1000167"  [label="DDG: image"];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000158"  [label="AST: "];
"1000166" -> "1000158"  [label="CFG: "];
"1000158" -> "1000857"  [label="DDG: WriteBlobByte(image,(unsigned char) length)"];
"1000158" -> "1000857"  [label="DDG: (void) WriteBlobByte(image,(unsigned char) length)"];
"1000167" -> "1000165"  [label="AST: "];
"1000167" -> "1000170"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000169" -> "1000167"  [label="AST: "];
"1000170" -> "1000167"  [label="AST: "];
"1000165" -> "1000167"  [label="CFG: "];
"1000167" -> "1000165"  [label="DDG: image"];
"1000167" -> "1000165"  [label="DDG: length"];
"1000167" -> "1000165"  [label="DDG: packet"];
"1000162" -> "1000167"  [label="DDG: length"];
"1000143" -> "1000167"  [label="DDG: packet[length++]"];
"1000167" -> "1000221"  [label="DDG: image"];
"1000165" -> "1000157"  [label="AST: "];
"1000166" -> "1000165"  [label="AST: "];
"1000172" -> "1000165"  [label="CFG: "];
"1000165" -> "1000857"  [label="DDG: WriteBlob(image,length,packet)"];
"1000165" -> "1000857"  [label="DDG: (void) WriteBlob(image,length,packet)"];
"1000221" -> "1000220"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000220" -> "1000221"  [label="CFG: "];
"1000221" -> "1000857"  [label="DDG: (Image *) NULL"];
"1000221" -> "1000857"  [label="DDG: image"];
"1000221" -> "1000220"  [label="DDG: image"];
"1000221" -> "1000220"  [label="DDG: (Image *) NULL"];
"1000223" -> "1000221"  [label="DDG: NULL"];
"1000221" -> "1000445"  [label="DDG: image"];
"1000221" -> "1000799"  [label="DDG: image"];
"1000221" -> "1000820"  [label="DDG: image"];
"1000220" -> "1000116"  [label="AST: "];
"1000227" -> "1000220"  [label="CFG: "];
"1000220" -> "1000857"  [label="DDG: image != (Image *) NULL"];
"1000220" -> "1000857"  [label="DDG: assert(image != (Image *) NULL)"];
"1000445" -> "1000443"  [label="AST: "];
"1000445" -> "1000453"  [label="CFG: "];
"1000446" -> "1000445"  [label="AST: "];
"1000447" -> "1000445"  [label="AST: "];
"1000448" -> "1000445"  [label="AST: "];
"1000449" -> "1000445"  [label="AST: "];
"1000452" -> "1000445"  [label="AST: "];
"1000453" -> "1000445"  [label="AST: "];
"1000443" -> "1000445"  [label="CFG: "];
"1000445" -> "1000857"  [label="DDG: image"];
"1000445" -> "1000857"  [label="DDG: image->columns"];
"1000445" -> "1000857"  [label="DDG: &image->exception"];
"1000445" -> "1000857"  [label="DDG: offset"];
"1000445" -> "1000443"  [label="DDG: 1"];
"1000445" -> "1000443"  [label="DDG: image"];
"1000445" -> "1000443"  [label="DDG: image->columns"];
"1000445" -> "1000443"  [label="DDG: &image->exception"];
"1000445" -> "1000443"  [label="DDG: offset"];
"1000445" -> "1000443"  [label="DDG: 0"];
"1000466" -> "1000445"  [label="DDG: image"];
"1000713" -> "1000445"  [label="DDG: offset"];
"1000753" -> "1000445"  [label="DDG: offset"];
"1000723" -> "1000445"  [label="DDG: offset"];
"1000733" -> "1000445"  [label="DDG: offset"];
"1000743" -> "1000445"  [label="DDG: offset"];
"1000700" -> "1000445"  [label="DDG: offset"];
"1000769" -> "1000445"  [label="DDG: offset"];
"1000417" -> "1000445"  [label="DDG: offset"];
"1000763" -> "1000445"  [label="DDG: offset"];
"1000494" -> "1000445"  [label="DDG: image->columns"];
"1000445" -> "1000466"  [label="DDG: image"];
"1000445" -> "1000494"  [label="DDG: image->columns"];
"1000445" -> "1000700"  [label="DDG: offset"];
"1000445" -> "1000709"  [label="DDG: offset"];
"1000445" -> "1000729"  [label="DDG: offset"];
"1000445" -> "1000749"  [label="DDG: offset"];
"1000445" -> "1000769"  [label="DDG: offset"];
"1000445" -> "1000799"  [label="DDG: image"];
"1000445" -> "1000820"  [label="DDG: image"];
"1000443" -> "1000439"  [label="AST: "];
"1000444" -> "1000443"  [label="AST: "];
"1000459" -> "1000443"  [label="CFG: "];
"1000443" -> "1000857"  [label="DDG: GetVirtualPixels(image,0,offset,image->columns,1,&image->exception)"];
"1000443" -> "1000458"  [label="DDG: p"];
"1000458" -> "1000457"  [label="AST: "];
"1000458" -> "1000460"  [label="CFG: "];
"1000459" -> "1000458"  [label="AST: "];
"1000460" -> "1000458"  [label="AST: "];
"1000463" -> "1000458"  [label="CFG: "];
"1000465" -> "1000458"  [label="CFG: "];
"1000458" -> "1000857"  [label="DDG: (const PixelPacket *) NULL"];
"1000458" -> "1000857"  [label="DDG: p"];
"1000458" -> "1000857"  [label="DDG: p == (const PixelPacket *) NULL"];
"1000460" -> "1000458"  [label="DDG: NULL"];
"1000458" -> "1000479"  [label="DDG: p"];
"1000458" -> "1000520"  [label="DDG: p"];
"1000479" -> "1000472"  [label="AST: "];
"1000479" -> "1000480"  [label="CFG: "];
"1000480" -> "1000479"  [label="AST: "];
"1000483" -> "1000479"  [label="CFG: "];
"1000479" -> "1000857"  [label="DDG: p"];
"1000479" -> "1000520"  [label="DDG: p"];
"1000520" -> "1000501"  [label="AST: "];
"1000520" -> "1000521"  [label="CFG: "];
"1000521" -> "1000520"  [label="AST: "];
"1000523" -> "1000520"  [label="CFG: "];
"1000520" -> "1000857"  [label="DDG: p"];
"1000466" -> "1000464"  [label="AST: "];
"1000466" -> "1000467"  [label="CFG: "];
"1000467" -> "1000466"  [label="AST: "];
"1000464" -> "1000466"  [label="CFG: "];
"1000466" -> "1000857"  [label="DDG: image"];
"1000466" -> "1000464"  [label="DDG: image"];
"1000466" -> "1000799"  [label="DDG: image"];
"1000466" -> "1000820"  [label="DDG: image"];
"1000464" -> "1000439"  [label="AST: "];
"1000465" -> "1000464"  [label="AST: "];
"1000470" -> "1000464"  [label="CFG: "];
"1000464" -> "1000857"  [label="DDG: indexes"];
"1000464" -> "1000857"  [label="DDG: GetVirtualIndexQueue(image)"];
"1000464" -> "1000515"  [label="DDG: indexes"];
"1000464" -> "1000516"  [label="DDG: indexes"];
"1000515" -> "1000513"  [label="AST: "];
"1000515" -> "1000516"  [label="CFG: "];
"1000516" -> "1000515"  [label="AST: "];
"1000513" -> "1000515"  [label="CFG: "];
"1000515" -> "1000857"  [label="DDG: indexes+x"];
"1000515" -> "1000513"  [label="DDG: indexes+x"];
"1000492" -> "1000515"  [label="DDG: x"];
"1000513" -> "1000512"  [label="AST: "];
"1000514" -> "1000513"  [label="AST: "];
"1000519" -> "1000513"  [label="CFG: "];
"1000513" -> "1000857"  [label="DDG: GetPixelIndex(indexes+x)"];
"1000513" -> "1000512"  [label="DDG: GetPixelIndex(indexes+x)"];
"1000512" -> "1000510"  [label="AST: "];
"1000512" -> "1000519"  [label="CFG: "];
"1000519" -> "1000512"  [label="AST: "];
"1000510" -> "1000512"  [label="CFG: "];
"1000512" -> "1000857"  [label="DDG: (size_t) GetPixelIndex(indexes+x)"];
"1000512" -> "1000510"  [label="DDG: (size_t) GetPixelIndex(indexes+x)"];
"1000512" -> "1000510"  [label="DDG: 0xff"];
"1000510" -> "1000508"  [label="AST: "];
"1000511" -> "1000510"  [label="AST: "];
"1000508" -> "1000510"  [label="CFG: "];
"1000510" -> "1000857"  [label="DDG: (size_t) GetPixelIndex(indexes+x) & 0xff"];
"1000510" -> "1000508"  [label="DDG: (size_t) GetPixelIndex(indexes+x) & 0xff"];
"1000508" -> "1000501"  [label="AST: "];
"1000509" -> "1000508"  [label="AST: "];
"1000521" -> "1000508"  [label="CFG: "];
"1000508" -> "1000857"  [label="DDG: (IndexPacket) ((size_t) GetPixelIndex(indexes+x) & 0xff)"];
"1000508" -> "1000528"  [label="DDG: index"];
"1000528" -> "1000527"  [label="AST: "];
"1000528" -> "1000530"  [label="CFG: "];
"1000529" -> "1000528"  [label="AST: "];
"1000530" -> "1000528"  [label="AST: "];
"1000532" -> "1000528"  [label="CFG: "];
"1000528" -> "1000857"  [label="DDG: index"];
"1000528" -> "1000527"  [label="DDG: index"];
"1000528" -> "1000565"  [label="DDG: index"];
"1000528" -> "1000614"  [label="DDG: index"];
"1000528" -> "1000656"  [label="DDG: index"];
"1000528" -> "1000691"  [label="DDG: index"];
"1000527" -> "1000526"  [label="AST: "];
"1000527" -> "1000531"  [label="CFG: "];
"1000531" -> "1000527"  [label="AST: "];
"1000534" -> "1000527"  [label="CFG: "];
"1000527" -> "1000857"  [label="DDG: (size_t) index"];
"1000527" -> "1000857"  [label="DDG: MaxGIFBits-8"];
"1000527" -> "1000524"  [label="DDG: (size_t) index"];
"1000527" -> "1000524"  [label="DDG: MaxGIFBits-8"];
"1000527" -> "1000526"  [label="DDG: (size_t) index"];
"1000527" -> "1000526"  [label="DDG: MaxGIFBits-8"];
"1000531" -> "1000527"  [label="DDG: MaxGIFBits"];
"1000531" -> "1000527"  [label="DDG: 8"];
"1000524" -> "1000522"  [label="AST: "];
"1000524" -> "1000526"  [label="CFG: "];
"1000525" -> "1000524"  [label="AST: "];
"1000526" -> "1000524"  [label="AST: "];
"1000522" -> "1000524"  [label="CFG: "];
"1000524" -> "1000857"  [label="DDG: ((size_t) index << (MaxGIFBits-8))+waiting_code"];
"1000524" -> "1000522"  [label="DDG: ((size_t) index << (MaxGIFBits-8))+waiting_code"];
"1000556" -> "1000524"  [label="DDG: waiting_code"];
"1000689" -> "1000524"  [label="DDG: waiting_code"];
"1000473" -> "1000524"  [label="DDG: waiting_code"];
"1000423" -> "1000524"  [label="DDG: waiting_code"];
"1000569" -> "1000524"  [label="DDG: waiting_code"];
"1000618" -> "1000524"  [label="DDG: waiting_code"];
"1000605" -> "1000524"  [label="DDG: waiting_code"];
"1000522" -> "1000501"  [label="AST: "];
"1000523" -> "1000522"  [label="AST: "];
"1000537" -> "1000522"  [label="CFG: "];
"1000522" -> "1000857"  [label="DDG: (ssize_t) (((size_t) index << (MaxGIFBits-8))+waiting_code)"];
"1000522" -> "1000536"  [label="DDG: k"];
"1000536" -> "1000535"  [label="AST: "];
"1000536" -> "1000538"  [label="CFG: "];
"1000537" -> "1000536"  [label="AST: "];
"1000538" -> "1000536"  [label="AST: "];
"1000540" -> "1000536"  [label="CFG: "];
"1000544" -> "1000536"  [label="CFG: "];
"1000536" -> "1000857"  [label="DDG: k >= MaxHashTable"];
"1000536" -> "1000857"  [label="DDG: MaxHashTable"];
"1000375" -> "1000536"  [label="DDG: MaxHashTable"];
"1000581" -> "1000536"  [label="DDG: MaxHashTable"];
"1000665" -> "1000536"  [label="DDG: MaxHashTable"];
"1000536" -> "1000539"  [label="DDG: MaxHashTable"];
"1000536" -> "1000539"  [label="DDG: k"];
"1000536" -> "1000543"  [label="DDG: k"];
"1000536" -> "1000581"  [label="DDG: MaxHashTable"];
"1000536" -> "1000593"  [label="DDG: MaxHashTable"];
"1000536" -> "1000665"  [label="DDG: MaxHashTable"];
"1000539" -> "1000535"  [label="AST: "];
"1000539" -> "1000541"  [label="CFG: "];
"1000540" -> "1000539"  [label="AST: "];
"1000541" -> "1000539"  [label="AST: "];
"1000544" -> "1000539"  [label="CFG: "];
"1000539" -> "1000857"  [label="DDG: MaxHashTable"];
"1000539" -> "1000543"  [label="DDG: k"];
"1000543" -> "1000542"  [label="AST: "];
"1000543" -> "1000545"  [label="CFG: "];
"1000544" -> "1000543"  [label="AST: "];
"1000545" -> "1000543"  [label="AST: "];
"1000546" -> "1000543"  [label="CFG: "];
"1000550" -> "1000543"  [label="CFG: "];
"1000543" -> "1000857"  [label="DDG: k < 0"];
"1000543" -> "1000857"  [label="DDG: k"];
"1000543" -> "1000576"  [label="DDG: k"];
"1000576" -> "1000575"  [label="AST: "];
"1000576" -> "1000578"  [label="CFG: "];
"1000577" -> "1000576"  [label="AST: "];
"1000578" -> "1000576"  [label="AST: "];
"1000580" -> "1000576"  [label="CFG: "];
"1000587" -> "1000576"  [label="CFG: "];
"1000576" -> "1000857"  [label="DDG: k != 0"];
"1000576" -> "1000581"  [label="DDG: k"];
"1000576" -> "1000586"  [label="DDG: k"];
"1000581" -> "1000579"  [label="AST: "];
"1000581" -> "1000583"  [label="CFG: "];
"1000582" -> "1000581"  [label="AST: "];
"1000583" -> "1000581"  [label="AST: "];
"1000579" -> "1000581"  [label="CFG: "];
"1000581" -> "1000857"  [label="DDG: MaxHashTable"];
"1000581" -> "1000579"  [label="DDG: MaxHashTable"];
"1000581" -> "1000579"  [label="DDG: k"];
"1000581" -> "1000586"  [label="DDG: k"];
"1000581" -> "1000593"  [label="DDG: MaxHashTable"];
"1000581" -> "1000665"  [label="DDG: MaxHashTable"];
"1000579" -> "1000575"  [label="AST: "];
"1000580" -> "1000579"  [label="AST: "];
"1000587" -> "1000579"  [label="CFG: "];
"1000579" -> "1000857"  [label="DDG: MaxHashTable-k"];
"1000579" -> "1000586"  [label="DDG: displacement"];
"1000586" -> "1000585"  [label="AST: "];
"1000586" -> "1000588"  [label="CFG: "];
"1000587" -> "1000586"  [label="AST: "];
"1000588" -> "1000586"  [label="AST: "];
"1000591" -> "1000586"  [label="CFG: "];
"1000586" -> "1000857"  [label="DDG: displacement"];
"1000505" -> "1000586"  [label="DDG: displacement"];
"1000590" -> "1000586"  [label="DDG: k"];
"1000593" -> "1000586"  [label="DDG: k"];
"1000586" -> "1000590"  [label="DDG: k"];
"1000590" -> "1000589"  [label="AST: "];
"1000590" -> "1000592"  [label="CFG: "];
"1000591" -> "1000590"  [label="AST: "];
"1000592" -> "1000590"  [label="AST: "];
"1000594" -> "1000590"  [label="CFG: "];
"1000599" -> "1000590"  [label="CFG: "];
"1000590" -> "1000857"  [label="DDG: k < 0"];
"1000590" -> "1000857"  [label="DDG: k"];
"1000590" -> "1000593"  [label="DDG: k"];
"1000593" -> "1000589"  [label="AST: "];
"1000593" -> "1000595"  [label="CFG: "];
"1000594" -> "1000593"  [label="AST: "];
"1000595" -> "1000593"  [label="AST: "];
"1000599" -> "1000593"  [label="CFG: "];
"1000593" -> "1000857"  [label="DDG: MaxHashTable"];
"1000593" -> "1000857"  [label="DDG: k"];
"1000665" -> "1000661"  [label="AST: "];
"1000665" -> "1000667"  [label="CFG: "];
"1000666" -> "1000665"  [label="AST: "];
"1000667" -> "1000665"  [label="AST: "];
"1000672" -> "1000665"  [label="CFG: "];
"1000676" -> "1000665"  [label="CFG: "];
"1000665" -> "1000857"  [label="DDG: k"];
"1000665" -> "1000857"  [label="DDG: k < MaxHashTable"];
"1000665" -> "1000857"  [label="DDG: MaxHashTable"];
"1000662" -> "1000665"  [label="DDG: k"];
"1000668" -> "1000665"  [label="DDG: k"];
"1000665" -> "1000668"  [label="DDG: k"];
"1000668" -> "1000661"  [label="AST: "];
"1000668" -> "1000669"  [label="CFG: "];
"1000669" -> "1000668"  [label="AST: "];
"1000666" -> "1000668"  [label="CFG: "];
"1000526" -> "1000534"  [label="CFG: "];
"1000534" -> "1000526"  [label="AST: "];
"1000526" -> "1000857"  [label="DDG: (size_t) index << (MaxGIFBits-8)"];
"1000556" -> "1000526"  [label="DDG: waiting_code"];
"1000689" -> "1000526"  [label="DDG: waiting_code"];
"1000473" -> "1000526"  [label="DDG: waiting_code"];
"1000423" -> "1000526"  [label="DDG: waiting_code"];
"1000569" -> "1000526"  [label="DDG: waiting_code"];
"1000618" -> "1000526"  [label="DDG: waiting_code"];
"1000605" -> "1000526"  [label="DDG: waiting_code"];
"1000565" -> "1000561"  [label="AST: "];
"1000565" -> "1000567"  [label="CFG: "];
"1000566" -> "1000565"  [label="AST: "];
"1000567" -> "1000565"  [label="AST: "];
"1000561" -> "1000565"  [label="CFG: "];
"1000565" -> "1000857"  [label="DDG: index"];
"1000565" -> "1000561"  [label="DDG: index"];
"1000565" -> "1000614"  [label="DDG: index"];
"1000565" -> "1000656"  [label="DDG: index"];
"1000565" -> "1000691"  [label="DDG: index"];
"1000561" -> "1000555"  [label="AST: "];
"1000562" -> "1000561"  [label="AST: "];
"1000555" -> "1000561"  [label="CFG: "];
"1000561" -> "1000857"  [label="DDG: hash_suffix[k]"];
"1000561" -> "1000857"  [label="DDG: (unsigned char) index"];
"1000561" -> "1000555"  [label="DDG: hash_suffix[k]"];
"1000561" -> "1000555"  [label="DDG: (unsigned char) index"];
"1000610" -> "1000561"  [label="DDG: hash_suffix[k]"];
"1000652" -> "1000561"  [label="DDG: hash_suffix[k]"];
"1000372" -> "1000561"  [label="DDG: hash_suffix"];
"1000561" -> "1000610"  [label="DDG: hash_suffix[k]"];
"1000561" -> "1000835"  [label="DDG: hash_suffix[k]"];
"1000555" -> "1000554"  [label="AST: "];
"1000555" -> "1000556"  [label="CFG: "];
"1000556" -> "1000555"  [label="AST: "];
"1000570" -> "1000555"  [label="CFG: "];
"1000577" -> "1000555"  [label="CFG: "];
"1000555" -> "1000857"  [label="DDG: (hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index)"];
"1000555" -> "1000857"  [label="DDG: hash_prefix[k] == waiting_code"];
"1000555" -> "1000857"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000556" -> "1000555"  [label="DDG: hash_prefix[k]"];
"1000556" -> "1000555"  [label="DDG: waiting_code"];
"1000604" -> "1000555"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000555" -> "1000604"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000604" -> "1000603"  [label="AST: "];
"1000604" -> "1000605"  [label="CFG: "];
"1000604" -> "1000610"  [label="CFG: "];
"1000605" -> "1000604"  [label="AST: "];
"1000610" -> "1000604"  [label="AST: "];
"1000587" -> "1000604"  [label="CFG: "];
"1000619" -> "1000604"  [label="CFG: "];
"1000604" -> "1000857"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000604" -> "1000857"  [label="DDG: (hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index)"];
"1000604" -> "1000857"  [label="DDG: hash_prefix[k] == waiting_code"];
"1000605" -> "1000604"  [label="DDG: hash_prefix[k]"];
"1000605" -> "1000604"  [label="DDG: waiting_code"];
"1000610" -> "1000604"  [label="DDG: hash_suffix[k]"];
"1000610" -> "1000604"  [label="DDG: (unsigned char) index"];
"1000610" -> "1000614"  [label="CFG: "];
"1000611" -> "1000610"  [label="AST: "];
"1000614" -> "1000610"  [label="AST: "];
"1000610" -> "1000857"  [label="DDG: (unsigned char) index"];
"1000610" -> "1000857"  [label="DDG: hash_suffix[k]"];
"1000652" -> "1000610"  [label="DDG: hash_suffix[k]"];
"1000372" -> "1000610"  [label="DDG: hash_suffix"];
"1000614" -> "1000610"  [label="DDG: index"];
"1000610" -> "1000835"  [label="DDG: hash_suffix[k]"];
"1000835" -> "1000833"  [label="AST: "];
"1000835" -> "1000836"  [label="CFG: "];
"1000836" -> "1000835"  [label="AST: "];
"1000833" -> "1000835"  [label="CFG: "];
"1000835" -> "1000833"  [label="DDG: hash_suffix"];
"1000652" -> "1000835"  [label="DDG: hash_suffix[k]"];
"1000372" -> "1000835"  [label="DDG: hash_suffix"];
"1000833" -> "1000831"  [label="AST: "];
"1000834" -> "1000833"  [label="AST: "];
"1000831" -> "1000833"  [label="CFG: "];
"1000833" -> "1000857"  [label="DDG: RelinquishMagickMemory(hash_suffix)"];
"1000833" -> "1000831"  [label="DDG: RelinquishMagickMemory(hash_suffix)"];
"1000831" -> "1000116"  [label="AST: "];
"1000832" -> "1000831"  [label="AST: "];
"1000838" -> "1000831"  [label="CFG: "];
"1000831" -> "1000857"  [label="DDG: hash_suffix"];
"1000831" -> "1000857"  [label="DDG: (unsigned char *) RelinquishMagickMemory(hash_suffix)"];
"1000614" -> "1000616"  [label="CFG: "];
"1000615" -> "1000614"  [label="AST: "];
"1000616" -> "1000614"  [label="AST: "];
"1000614" -> "1000857"  [label="DDG: index"];
"1000614" -> "1000656"  [label="DDG: index"];
"1000614" -> "1000691"  [label="DDG: index"];
"1000656" -> "1000652"  [label="AST: "];
"1000656" -> "1000658"  [label="CFG: "];
"1000657" -> "1000656"  [label="AST: "];
"1000658" -> "1000656"  [label="AST: "];
"1000652" -> "1000656"  [label="CFG: "];
"1000656" -> "1000652"  [label="DDG: index"];
"1000656" -> "1000691"  [label="DDG: index"];
"1000652" -> "1000638"  [label="AST: "];
"1000653" -> "1000652"  [label="AST: "];
"1000690" -> "1000652"  [label="CFG: "];
"1000652" -> "1000857"  [label="DDG: (unsigned char) index"];
"1000652" -> "1000857"  [label="DDG: hash_suffix[k]"];
"1000691" -> "1000689"  [label="AST: "];
"1000691" -> "1000693"  [label="CFG: "];
"1000692" -> "1000691"  [label="AST: "];
"1000693" -> "1000691"  [label="AST: "];
"1000689" -> "1000691"  [label="CFG: "];
"1000691" -> "1000857"  [label="DDG: index"];
"1000691" -> "1000689"  [label="DDG: index"];
"1000689" -> "1000501"  [label="AST: "];
"1000690" -> "1000689"  [label="AST: "];
"1000500" -> "1000689"  [label="CFG: "];
"1000689" -> "1000857"  [label="DDG: (short) index"];
"1000689" -> "1000556"  [label="DDG: waiting_code"];
"1000689" -> "1000632"  [label="DDG: waiting_code"];
"1000689" -> "1000773"  [label="DDG: waiting_code"];
"1000556" -> "1000560"  [label="CFG: "];
"1000557" -> "1000556"  [label="AST: "];
"1000560" -> "1000556"  [label="AST: "];
"1000563" -> "1000556"  [label="CFG: "];
"1000556" -> "1000857"  [label="DDG: hash_prefix[k]"];
"1000647" -> "1000556"  [label="DDG: hash_prefix[k]"];
"1000605" -> "1000556"  [label="DDG: hash_prefix[k]"];
"1000605" -> "1000556"  [label="DDG: waiting_code"];
"1000362" -> "1000556"  [label="DDG: hash_prefix"];
"1000473" -> "1000556"  [label="DDG: waiting_code"];
"1000423" -> "1000556"  [label="DDG: waiting_code"];
"1000569" -> "1000556"  [label="DDG: waiting_code"];
"1000618" -> "1000556"  [label="DDG: waiting_code"];
"1000556" -> "1000605"  [label="DDG: hash_prefix[k]"];
"1000556" -> "1000605"  [label="DDG: waiting_code"];
"1000556" -> "1000632"  [label="DDG: waiting_code"];
"1000556" -> "1000773"  [label="DDG: waiting_code"];
"1000556" -> "1000841"  [label="DDG: hash_prefix[k]"];
"1000605" -> "1000609"  [label="CFG: "];
"1000606" -> "1000605"  [label="AST: "];
"1000609" -> "1000605"  [label="AST: "];
"1000612" -> "1000605"  [label="CFG: "];
"1000605" -> "1000857"  [label="DDG: hash_prefix[k]"];
"1000362" -> "1000605"  [label="DDG: hash_prefix"];
"1000605" -> "1000632"  [label="DDG: waiting_code"];
"1000605" -> "1000773"  [label="DDG: waiting_code"];
"1000605" -> "1000841"  [label="DDG: hash_prefix[k]"];
"1000632" -> "1000501"  [label="AST: "];
"1000632" -> "1000633"  [label="CFG: "];
"1000633" -> "1000632"  [label="AST: "];
"1000636" -> "1000632"  [label="CFG: "];
"1000618" -> "1000632"  [label="DDG: waiting_code"];
"1000473" -> "1000632"  [label="DDG: waiting_code"];
"1000423" -> "1000632"  [label="DDG: waiting_code"];
"1000569" -> "1000632"  [label="DDG: waiting_code"];
"1000632" -> "1000647"  [label="DDG: waiting_code"];
"1000647" -> "1000638"  [label="AST: "];
"1000647" -> "1000651"  [label="CFG: "];
"1000648" -> "1000647"  [label="AST: "];
"1000651" -> "1000647"  [label="AST: "];
"1000654" -> "1000647"  [label="CFG: "];
"1000647" -> "1000857"  [label="DDG: hash_prefix[k]"];
"1000647" -> "1000841"  [label="DDG: hash_prefix[k]"];
"1000841" -> "1000839"  [label="AST: "];
"1000841" -> "1000842"  [label="CFG: "];
"1000842" -> "1000841"  [label="AST: "];
"1000839" -> "1000841"  [label="CFG: "];
"1000841" -> "1000839"  [label="DDG: hash_prefix"];
"1000362" -> "1000841"  [label="DDG: hash_prefix"];
"1000839" -> "1000837"  [label="AST: "];
"1000840" -> "1000839"  [label="AST: "];
"1000837" -> "1000839"  [label="CFG: "];
"1000839" -> "1000857"  [label="DDG: RelinquishMagickMemory(hash_prefix)"];
"1000839" -> "1000837"  [label="DDG: RelinquishMagickMemory(hash_prefix)"];
"1000837" -> "1000116"  [label="AST: "];
"1000838" -> "1000837"  [label="AST: "];
"1000844" -> "1000837"  [label="CFG: "];
"1000837" -> "1000857"  [label="DDG: hash_prefix"];
"1000837" -> "1000857"  [label="DDG: (short *) RelinquishMagickMemory(hash_prefix)"];
"1000773" -> "1000116"  [label="AST: "];
"1000773" -> "1000774"  [label="CFG: "];
"1000774" -> "1000773"  [label="AST: "];
"1000776" -> "1000773"  [label="CFG: "];
"1000773" -> "1000857"  [label="DDG: GIFOutputCode(waiting_code)"];
"1000773" -> "1000857"  [label="DDG: waiting_code"];
"1000473" -> "1000773"  [label="DDG: waiting_code"];
"1000423" -> "1000773"  [label="DDG: waiting_code"];
"1000569" -> "1000773"  [label="DDG: waiting_code"];
"1000618" -> "1000773"  [label="DDG: waiting_code"];
"1000516" -> "1000518"  [label="CFG: "];
"1000517" -> "1000516"  [label="AST: "];
"1000518" -> "1000516"  [label="AST: "];
"1000516" -> "1000857"  [label="DDG: x"];
"1000516" -> "1000857"  [label="DDG: indexes"];
"1000492" -> "1000516"  [label="DDG: x"];
"1000799" -> "1000797"  [label="AST: "];
"1000799" -> "1000801"  [label="CFG: "];
"1000800" -> "1000799"  [label="AST: "];
"1000801" -> "1000799"  [label="AST: "];
"1000797" -> "1000799"  [label="CFG: "];
"1000799" -> "1000857"  [label="DDG: (unsigned char) length"];
"1000799" -> "1000797"  [label="DDG: image"];
"1000799" -> "1000797"  [label="DDG: (unsigned char) length"];
"1000801" -> "1000799"  [label="DDG: length"];
"1000799" -> "1000806"  [label="DDG: image"];
"1000797" -> "1000796"  [label="AST: "];
"1000798" -> "1000797"  [label="AST: "];
"1000805" -> "1000797"  [label="CFG: "];
"1000797" -> "1000857"  [label="DDG: WriteBlobByte(image,(unsigned char) length)"];
"1000797" -> "1000857"  [label="DDG: (void) WriteBlobByte(image,(unsigned char) length)"];
"1000806" -> "1000804"  [label="AST: "];
"1000806" -> "1000809"  [label="CFG: "];
"1000807" -> "1000806"  [label="AST: "];
"1000808" -> "1000806"  [label="AST: "];
"1000809" -> "1000806"  [label="AST: "];
"1000804" -> "1000806"  [label="CFG: "];
"1000806" -> "1000857"  [label="DDG: image"];
"1000806" -> "1000804"  [label="DDG: image"];
"1000806" -> "1000804"  [label="DDG: length"];
"1000806" -> "1000804"  [label="DDG: packet"];
"1000801" -> "1000806"  [label="DDG: length"];
"1000342" -> "1000806"  [label="DDG: packet"];
"1000782" -> "1000806"  [label="DDG: packet[length++]"];
"1000806" -> "1000820"  [label="DDG: image"];
"1000806" -> "1000827"  [label="DDG: packet"];
"1000806" -> "1000853"  [label="DDG: packet"];
"1000804" -> "1000796"  [label="AST: "];
"1000805" -> "1000804"  [label="AST: "];
"1000811" -> "1000804"  [label="CFG: "];
"1000804" -> "1000857"  [label="DDG: WriteBlob(image,length,packet)"];
"1000804" -> "1000857"  [label="DDG: (void) WriteBlob(image,length,packet)"];
"1000820" -> "1000818"  [label="AST: "];
"1000820" -> "1000822"  [label="CFG: "];
"1000821" -> "1000820"  [label="AST: "];
"1000822" -> "1000820"  [label="AST: "];
"1000818" -> "1000820"  [label="CFG: "];
"1000820" -> "1000857"  [label="DDG: (unsigned char) length"];
"1000820" -> "1000818"  [label="DDG: image"];
"1000820" -> "1000818"  [label="DDG: (unsigned char) length"];
"1000822" -> "1000820"  [label="DDG: length"];
"1000820" -> "1000827"  [label="DDG: image"];
"1000818" -> "1000817"  [label="AST: "];
"1000819" -> "1000818"  [label="AST: "];
"1000826" -> "1000818"  [label="CFG: "];
"1000818" -> "1000857"  [label="DDG: (void) WriteBlobByte(image,(unsigned char) length)"];
"1000818" -> "1000857"  [label="DDG: WriteBlobByte(image,(unsigned char) length)"];
"1000827" -> "1000825"  [label="AST: "];
"1000827" -> "1000830"  [label="CFG: "];
"1000828" -> "1000827"  [label="AST: "];
"1000829" -> "1000827"  [label="AST: "];
"1000830" -> "1000827"  [label="AST: "];
"1000825" -> "1000827"  [label="CFG: "];
"1000827" -> "1000857"  [label="DDG: length"];
"1000827" -> "1000857"  [label="DDG: image"];
"1000827" -> "1000825"  [label="DDG: image"];
"1000827" -> "1000825"  [label="DDG: length"];
"1000827" -> "1000825"  [label="DDG: packet"];
"1000822" -> "1000827"  [label="DDG: length"];
"1000342" -> "1000827"  [label="DDG: packet"];
"1000782" -> "1000827"  [label="DDG: packet[length++]"];
"1000143" -> "1000827"  [label="DDG: packet[length++]"];
"1000827" -> "1000853"  [label="DDG: packet"];
"1000825" -> "1000817"  [label="AST: "];
"1000826" -> "1000825"  [label="AST: "];
"1000832" -> "1000825"  [label="CFG: "];
"1000825" -> "1000857"  [label="DDG: WriteBlob(image,length,packet)"];
"1000825" -> "1000857"  [label="DDG: (void) WriteBlob(image,length,packet)"];
"1000853" -> "1000851"  [label="AST: "];
"1000853" -> "1000854"  [label="CFG: "];
"1000854" -> "1000853"  [label="AST: "];
"1000851" -> "1000853"  [label="CFG: "];
"1000853" -> "1000851"  [label="DDG: packet"];
"1000342" -> "1000853"  [label="DDG: packet"];
"1000782" -> "1000853"  [label="DDG: packet[length++]"];
"1000143" -> "1000853"  [label="DDG: packet[length++]"];
"1000851" -> "1000849"  [label="AST: "];
"1000852" -> "1000851"  [label="AST: "];
"1000849" -> "1000851"  [label="CFG: "];
"1000851" -> "1000857"  [label="DDG: RelinquishMagickMemory(packet)"];
"1000851" -> "1000849"  [label="DDG: RelinquishMagickMemory(packet)"];
"1000849" -> "1000116"  [label="AST: "];
"1000850" -> "1000849"  [label="AST: "];
"1000856" -> "1000849"  [label="CFG: "];
"1000849" -> "1000857"  [label="DDG: (unsigned char *) RelinquishMagickMemory(packet)"];
"1000849" -> "1000857"  [label="DDG: packet"];
"1000494" -> "1000492"  [label="AST: "];
"1000494" -> "1000496"  [label="CFG: "];
"1000495" -> "1000494"  [label="AST: "];
"1000496" -> "1000494"  [label="AST: "];
"1000492" -> "1000494"  [label="CFG: "];
"1000494" -> "1000857"  [label="DDG: image->columns"];
"1000494" -> "1000492"  [label="DDG: image->columns"];
"1000492" -> "1000481"  [label="AST: "];
"1000493" -> "1000492"  [label="AST: "];
"1000503" -> "1000492"  [label="CFG: "];
"1000697" -> "1000492"  [label="CFG: "];
"1000492" -> "1000857"  [label="DDG: (ssize_t) image->columns"];
"1000492" -> "1000857"  [label="DDG: x"];
"1000492" -> "1000857"  [label="DDG: x < (ssize_t) image->columns"];
"1000482" -> "1000492"  [label="DDG: x"];
"1000499" -> "1000492"  [label="DDG: x"];
"1000492" -> "1000499"  [label="DDG: x"];
"1000499" -> "1000481"  [label="AST: "];
"1000499" -> "1000500"  [label="CFG: "];
"1000500" -> "1000499"  [label="AST: "];
"1000493" -> "1000499"  [label="CFG: "];
"1000700" -> "1000694"  [label="AST: "];
"1000700" -> "1000701"  [label="CFG: "];
"1000701" -> "1000700"  [label="AST: "];
"1000438" -> "1000700"  [label="CFG: "];
"1000700" -> "1000857"  [label="DDG: offset"];
"1000709" -> "1000708"  [label="AST: "];
"1000709" -> "1000711"  [label="CFG: "];
"1000710" -> "1000709"  [label="AST: "];
"1000711" -> "1000709"  [label="AST: "];
"1000714" -> "1000709"  [label="CFG: "];
"1000709" -> "1000713"  [label="DDG: offset"];
"1000713" -> "1000712"  [label="AST: "];
"1000713" -> "1000715"  [label="CFG: "];
"1000714" -> "1000713"  [label="AST: "];
"1000715" -> "1000713"  [label="AST: "];
"1000722" -> "1000713"  [label="CFG: "];
"1000726" -> "1000713"  [label="CFG: "];
"1000713" -> "1000857"  [label="DDG: offset"];
"1000713" -> "1000857"  [label="DDG: (ssize_t) image->rows"];
"1000713" -> "1000857"  [label="DDG: offset >= (ssize_t) image->rows"];
"1000715" -> "1000713"  [label="DDG: image->rows"];
"1000729" -> "1000728"  [label="AST: "];
"1000729" -> "1000731"  [label="CFG: "];
"1000730" -> "1000729"  [label="AST: "];
"1000731" -> "1000729"  [label="AST: "];
"1000734" -> "1000729"  [label="CFG: "];
"1000729" -> "1000733"  [label="DDG: offset"];
"1000733" -> "1000732"  [label="AST: "];
"1000733" -> "1000735"  [label="CFG: "];
"1000734" -> "1000733"  [label="AST: "];
"1000735" -> "1000733"  [label="AST: "];
"1000742" -> "1000733"  [label="CFG: "];
"1000746" -> "1000733"  [label="CFG: "];
"1000733" -> "1000857"  [label="DDG: (ssize_t) image->rows"];
"1000733" -> "1000857"  [label="DDG: offset"];
"1000733" -> "1000857"  [label="DDG: offset >= (ssize_t) image->rows"];
"1000735" -> "1000733"  [label="DDG: image->rows"];
"1000749" -> "1000748"  [label="AST: "];
"1000749" -> "1000751"  [label="CFG: "];
"1000750" -> "1000749"  [label="AST: "];
"1000751" -> "1000749"  [label="AST: "];
"1000754" -> "1000749"  [label="CFG: "];
"1000749" -> "1000753"  [label="DDG: offset"];
"1000753" -> "1000752"  [label="AST: "];
"1000753" -> "1000755"  [label="CFG: "];
"1000754" -> "1000753"  [label="AST: "];
"1000755" -> "1000753"  [label="AST: "];
"1000762" -> "1000753"  [label="CFG: "];
"1000766" -> "1000753"  [label="CFG: "];
"1000753" -> "1000857"  [label="DDG: offset"];
"1000753" -> "1000857"  [label="DDG: offset >= (ssize_t) image->rows"];
"1000753" -> "1000857"  [label="DDG: (ssize_t) image->rows"];
"1000755" -> "1000753"  [label="DDG: image->rows"];
"1000769" -> "1000768"  [label="AST: "];
"1000769" -> "1000771"  [label="CFG: "];
"1000770" -> "1000769"  [label="AST: "];
"1000771" -> "1000769"  [label="AST: "];
"1000772" -> "1000769"  [label="CFG: "];
"1000769" -> "1000857"  [label="DDG: offset"];
}
