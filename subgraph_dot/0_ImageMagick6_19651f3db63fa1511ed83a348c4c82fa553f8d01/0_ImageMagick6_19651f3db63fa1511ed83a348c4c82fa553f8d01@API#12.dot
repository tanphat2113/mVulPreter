digraph "0_ImageMagick6_19651f3db63fa1511ed83a348c4c82fa553f8d01@API" {
"1000375" [label="(Call,MaxHashTable*sizeof(*hash_suffix))"];
"1000365" [label="(Call,MaxHashTable*sizeof(*hash_prefix))"];
"1000355" [label="(Call,MaxHashTable*sizeof(*hash_code))"];
"1000260" [label="(Call,AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix)))"];
"1000251" [label="(Call,AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix)))"];
"1000242" [label="(Call,AcquireQuantumMemory(MaxHashTable,sizeof(*hash_code)))"];
"1000372" [label="(Call,memset(hash_suffix,0,MaxHashTable*sizeof(*hash_suffix)))"];
"1000370" [label="(Call,(void) memset(hash_suffix,0,MaxHashTable*sizeof(*hash_suffix)))"];
"1000561" [label="(Call,hash_suffix[k] == (unsigned char) index)"];
"1000555" [label="(Call,(hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index))"];
"1000604" [label="(Call,(hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index))"];
"1000610" [label="(Call,hash_suffix[k] == (unsigned char) index)"];
"1000835" [label="(Call,RelinquishMagickMemory(hash_suffix))"];
"1000833" [label="(Call,(unsigned char *) RelinquishMagickMemory(hash_suffix))"];
"1000831" [label="(Call,hash_suffix=(unsigned char *) RelinquishMagickMemory(hash_suffix))"];
"1000536" [label="(Call,k >= MaxHashTable)"];
"1000539" [label="(Call,k-=MaxHashTable)"];
"1000543" [label="(Call,k < 0)"];
"1000576" [label="(Call,k != 0)"];
"1000581" [label="(Call,MaxHashTable-k)"];
"1000579" [label="(Call,displacement=MaxHashTable-k)"];
"1000586" [label="(Call,k-=displacement)"];
"1000590" [label="(Call,k < 0)"];
"1000593" [label="(Call,k+=MaxHashTable)"];
"1000665" [label="(Call,k < MaxHashTable)"];
"1000668" [label="(Call,k++)"];
"1000576" [label="(Call,k != 0)"];
"1000668" [label="(Call,k++)"];
"1000544" [label="(Identifier,k)"];
"1000252" [label="(Identifier,MaxHashTable)"];
"1000367" [label="(Call,sizeof(*hash_prefix))"];
"1000536" [label="(Call,k >= MaxHashTable)"];
"1000357" [label="(Call,sizeof(*hash_code))"];
"1000604" [label="(Call,(hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index))"];
"1000375" [label="(Call,MaxHashTable*sizeof(*hash_suffix))"];
"1000676" [label="(Identifier,free_code)"];
"1000260" [label="(Call,AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix)))"];
"1000362" [label="(Call,memset(hash_prefix,0,MaxHashTable*sizeof(*hash_prefix)))"];
"1000836" [label="(Identifier,hash_suffix)"];
"1000355" [label="(Call,MaxHashTable*sizeof(*hash_code))"];
"1000594" [label="(Identifier,k)"];
"1000662" [label="(Call,k=0)"];
"1000570" [label="(Identifier,waiting_code)"];
"1000116" [label="(Block,)"];
"1000258" [label="(Call,(unsigned char *) AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix)))"];
"1000857" [label="(MethodReturn,static MagickBooleanType)"];
"1000541" [label="(Identifier,MaxHashTable)"];
"1000669" [label="(Identifier,k)"];
"1000366" [label="(Identifier,MaxHashTable)"];
"1000592" [label="(Literal,0)"];
"1000542" [label="(ControlStructure,if (k < 0))"];
"1000832" [label="(Identifier,hash_suffix)"];
"1000253" [label="(Call,sizeof(*hash_prefix))"];
"1000565" [label="(Call,(unsigned char) index)"];
"1000381" [label="(Identifier,number_bits)"];
"1000261" [label="(Identifier,MaxHashTable)"];
"1000537" [label="(Identifier,k)"];
"1000505" [label="(Call,displacement=1)"];
"1000595" [label="(Identifier,MaxHashTable)"];
"1000554" [label="(ControlStructure,if ((hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index)))"];
"1000550" [label="(Identifier,hash_code)"];
"1000588" [label="(Identifier,displacement)"];
"1000577" [label="(Identifier,k)"];
"1000672" [label="(Identifier,hash_code)"];
"1000376" [label="(Identifier,MaxHashTable)"];
"1000555" [label="(Call,(hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index))"];
"1000579" [label="(Call,displacement=MaxHashTable-k)"];
"1000831" [label="(Call,hash_suffix=(unsigned char *) RelinquishMagickMemory(hash_suffix))"];
"1000352" [label="(Call,memset(hash_code,0,MaxHashTable*sizeof(*hash_code)))"];
"1000242" [label="(Call,AcquireQuantumMemory(MaxHashTable,sizeof(*hash_code)))"];
"1000284" [label="(Call,hash_suffix == (unsigned char *) NULL)"];
"1000543" [label="(Call,k < 0)"];
"1000561" [label="(Call,hash_suffix[k] == (unsigned char) index)"];
"1000586" [label="(Call,k-=displacement)"];
"1000582" [label="(Identifier,MaxHashTable)"];
"1000540" [label="(Identifier,k)"];
"1000835" [label="(Call,RelinquishMagickMemory(hash_suffix))"];
"1000535" [label="(ControlStructure,if (k >= MaxHashTable))"];
"1000585" [label="(Block,)"];
"1000583" [label="(Identifier,k)"];
"1000377" [label="(Call,sizeof(*hash_suffix))"];
"1000240" [label="(Call,(short *) AcquireQuantumMemory(MaxHashTable,sizeof(*hash_code)))"];
"1000587" [label="(Identifier,k)"];
"1000374" [label="(Literal,0)"];
"1000666" [label="(Identifier,k)"];
"1000244" [label="(Call,sizeof(*hash_code))"];
"1000614" [label="(Call,(unsigned char) index)"];
"1000546" [label="(ControlStructure,continue;)"];
"1000619" [label="(Identifier,waiting_code)"];
"1000522" [label="(Call,k=(ssize_t) (((size_t) index << (MaxGIFBits-8))+waiting_code))"];
"1000667" [label="(Identifier,MaxHashTable)"];
"1000538" [label="(Identifier,MaxHashTable)"];
"1000539" [label="(Call,k-=MaxHashTable)"];
"1000661" [label="(ControlStructure,for (k=0; k < MaxHashTable; k++))"];
"1000545" [label="(Literal,0)"];
"1000365" [label="(Call,MaxHashTable*sizeof(*hash_prefix))"];
"1000665" [label="(Call,k < MaxHashTable)"];
"1000833" [label="(Call,(unsigned char *) RelinquishMagickMemory(hash_suffix))"];
"1000562" [label="(Call,hash_suffix[k])"];
"1000591" [label="(Identifier,k)"];
"1000590" [label="(Call,k < 0)"];
"1000262" [label="(Call,sizeof(*hash_suffix))"];
"1000603" [label="(ControlStructure,if ((hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index)))"];
"1000605" [label="(Call,hash_prefix[k] == waiting_code)"];
"1000580" [label="(Identifier,displacement)"];
"1000610" [label="(Call,hash_suffix[k] == (unsigned char) index)"];
"1000575" [label="(ControlStructure,if (k != 0))"];
"1000599" [label="(Identifier,hash_code)"];
"1000372" [label="(Call,memset(hash_suffix,0,MaxHashTable*sizeof(*hash_suffix)))"];
"1000589" [label="(ControlStructure,if (k < 0))"];
"1000581" [label="(Call,MaxHashTable-k)"];
"1000578" [label="(Literal,0)"];
"1000251" [label="(Call,AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix)))"];
"1000256" [label="(Call,hash_suffix=(unsigned char *) AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix)))"];
"1000249" [label="(Call,(short *) AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix)))"];
"1000611" [label="(Call,hash_suffix[k])"];
"1000370" [label="(Call,(void) memset(hash_suffix,0,MaxHashTable*sizeof(*hash_suffix)))"];
"1000593" [label="(Call,k+=MaxHashTable)"];
"1000356" [label="(Identifier,MaxHashTable)"];
"1000373" [label="(Identifier,hash_suffix)"];
"1000556" [label="(Call,hash_prefix[k] == waiting_code)"];
"1000243" [label="(Identifier,MaxHashTable)"];
"1000838" [label="(Identifier,hash_prefix)"];
"1000652" [label="(Call,hash_suffix[k]=(unsigned char) index)"];
"1000375" -> "1000372"  [label="AST: "];
"1000375" -> "1000377"  [label="CFG: "];
"1000376" -> "1000375"  [label="AST: "];
"1000377" -> "1000375"  [label="AST: "];
"1000372" -> "1000375"  [label="CFG: "];
"1000375" -> "1000857"  [label="DDG: MaxHashTable"];
"1000375" -> "1000372"  [label="DDG: MaxHashTable"];
"1000365" -> "1000375"  [label="DDG: MaxHashTable"];
"1000375" -> "1000536"  [label="DDG: MaxHashTable"];
"1000365" -> "1000362"  [label="AST: "];
"1000365" -> "1000367"  [label="CFG: "];
"1000366" -> "1000365"  [label="AST: "];
"1000367" -> "1000365"  [label="AST: "];
"1000362" -> "1000365"  [label="CFG: "];
"1000365" -> "1000362"  [label="DDG: MaxHashTable"];
"1000355" -> "1000365"  [label="DDG: MaxHashTable"];
"1000355" -> "1000352"  [label="AST: "];
"1000355" -> "1000357"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000357" -> "1000355"  [label="AST: "];
"1000352" -> "1000355"  [label="CFG: "];
"1000355" -> "1000352"  [label="DDG: MaxHashTable"];
"1000260" -> "1000355"  [label="DDG: MaxHashTable"];
"1000260" -> "1000258"  [label="AST: "];
"1000260" -> "1000262"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000262" -> "1000260"  [label="AST: "];
"1000258" -> "1000260"  [label="CFG: "];
"1000260" -> "1000857"  [label="DDG: MaxHashTable"];
"1000260" -> "1000258"  [label="DDG: MaxHashTable"];
"1000251" -> "1000260"  [label="DDG: MaxHashTable"];
"1000251" -> "1000249"  [label="AST: "];
"1000251" -> "1000253"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="AST: "];
"1000249" -> "1000251"  [label="CFG: "];
"1000251" -> "1000249"  [label="DDG: MaxHashTable"];
"1000242" -> "1000251"  [label="DDG: MaxHashTable"];
"1000242" -> "1000240"  [label="AST: "];
"1000242" -> "1000244"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000244" -> "1000242"  [label="AST: "];
"1000240" -> "1000242"  [label="CFG: "];
"1000242" -> "1000240"  [label="DDG: MaxHashTable"];
"1000372" -> "1000370"  [label="AST: "];
"1000373" -> "1000372"  [label="AST: "];
"1000374" -> "1000372"  [label="AST: "];
"1000370" -> "1000372"  [label="CFG: "];
"1000372" -> "1000857"  [label="DDG: MaxHashTable*sizeof(*hash_suffix)"];
"1000372" -> "1000370"  [label="DDG: hash_suffix"];
"1000372" -> "1000370"  [label="DDG: 0"];
"1000372" -> "1000370"  [label="DDG: MaxHashTable*sizeof(*hash_suffix)"];
"1000284" -> "1000372"  [label="DDG: hash_suffix"];
"1000256" -> "1000372"  [label="DDG: hash_suffix"];
"1000372" -> "1000561"  [label="DDG: hash_suffix"];
"1000372" -> "1000610"  [label="DDG: hash_suffix"];
"1000372" -> "1000835"  [label="DDG: hash_suffix"];
"1000370" -> "1000116"  [label="AST: "];
"1000371" -> "1000370"  [label="AST: "];
"1000381" -> "1000370"  [label="CFG: "];
"1000370" -> "1000857"  [label="DDG: (void) memset(hash_suffix,0,MaxHashTable*sizeof(*hash_suffix))"];
"1000370" -> "1000857"  [label="DDG: memset(hash_suffix,0,MaxHashTable*sizeof(*hash_suffix))"];
"1000561" -> "1000555"  [label="AST: "];
"1000561" -> "1000565"  [label="CFG: "];
"1000562" -> "1000561"  [label="AST: "];
"1000565" -> "1000561"  [label="AST: "];
"1000555" -> "1000561"  [label="CFG: "];
"1000561" -> "1000857"  [label="DDG: hash_suffix[k]"];
"1000561" -> "1000857"  [label="DDG: (unsigned char) index"];
"1000561" -> "1000555"  [label="DDG: hash_suffix[k]"];
"1000561" -> "1000555"  [label="DDG: (unsigned char) index"];
"1000610" -> "1000561"  [label="DDG: hash_suffix[k]"];
"1000652" -> "1000561"  [label="DDG: hash_suffix[k]"];
"1000565" -> "1000561"  [label="DDG: index"];
"1000561" -> "1000610"  [label="DDG: hash_suffix[k]"];
"1000561" -> "1000835"  [label="DDG: hash_suffix[k]"];
"1000555" -> "1000554"  [label="AST: "];
"1000555" -> "1000556"  [label="CFG: "];
"1000556" -> "1000555"  [label="AST: "];
"1000570" -> "1000555"  [label="CFG: "];
"1000577" -> "1000555"  [label="CFG: "];
"1000555" -> "1000857"  [label="DDG: (hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index)"];
"1000555" -> "1000857"  [label="DDG: hash_prefix[k] == waiting_code"];
"1000555" -> "1000857"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000556" -> "1000555"  [label="DDG: hash_prefix[k]"];
"1000556" -> "1000555"  [label="DDG: waiting_code"];
"1000604" -> "1000555"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000555" -> "1000604"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000604" -> "1000603"  [label="AST: "];
"1000604" -> "1000605"  [label="CFG: "];
"1000604" -> "1000610"  [label="CFG: "];
"1000605" -> "1000604"  [label="AST: "];
"1000610" -> "1000604"  [label="AST: "];
"1000587" -> "1000604"  [label="CFG: "];
"1000619" -> "1000604"  [label="CFG: "];
"1000604" -> "1000857"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000604" -> "1000857"  [label="DDG: (hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index)"];
"1000604" -> "1000857"  [label="DDG: hash_prefix[k] == waiting_code"];
"1000605" -> "1000604"  [label="DDG: hash_prefix[k]"];
"1000605" -> "1000604"  [label="DDG: waiting_code"];
"1000610" -> "1000604"  [label="DDG: hash_suffix[k]"];
"1000610" -> "1000604"  [label="DDG: (unsigned char) index"];
"1000610" -> "1000614"  [label="CFG: "];
"1000611" -> "1000610"  [label="AST: "];
"1000614" -> "1000610"  [label="AST: "];
"1000610" -> "1000857"  [label="DDG: (unsigned char) index"];
"1000610" -> "1000857"  [label="DDG: hash_suffix[k]"];
"1000652" -> "1000610"  [label="DDG: hash_suffix[k]"];
"1000614" -> "1000610"  [label="DDG: index"];
"1000610" -> "1000835"  [label="DDG: hash_suffix[k]"];
"1000835" -> "1000833"  [label="AST: "];
"1000835" -> "1000836"  [label="CFG: "];
"1000836" -> "1000835"  [label="AST: "];
"1000833" -> "1000835"  [label="CFG: "];
"1000835" -> "1000833"  [label="DDG: hash_suffix"];
"1000652" -> "1000835"  [label="DDG: hash_suffix[k]"];
"1000833" -> "1000831"  [label="AST: "];
"1000834" -> "1000833"  [label="AST: "];
"1000831" -> "1000833"  [label="CFG: "];
"1000833" -> "1000857"  [label="DDG: RelinquishMagickMemory(hash_suffix)"];
"1000833" -> "1000831"  [label="DDG: RelinquishMagickMemory(hash_suffix)"];
"1000831" -> "1000116"  [label="AST: "];
"1000832" -> "1000831"  [label="AST: "];
"1000838" -> "1000831"  [label="CFG: "];
"1000831" -> "1000857"  [label="DDG: hash_suffix"];
"1000831" -> "1000857"  [label="DDG: (unsigned char *) RelinquishMagickMemory(hash_suffix)"];
"1000536" -> "1000535"  [label="AST: "];
"1000536" -> "1000538"  [label="CFG: "];
"1000537" -> "1000536"  [label="AST: "];
"1000538" -> "1000536"  [label="AST: "];
"1000540" -> "1000536"  [label="CFG: "];
"1000544" -> "1000536"  [label="CFG: "];
"1000536" -> "1000857"  [label="DDG: k >= MaxHashTable"];
"1000536" -> "1000857"  [label="DDG: MaxHashTable"];
"1000522" -> "1000536"  [label="DDG: k"];
"1000581" -> "1000536"  [label="DDG: MaxHashTable"];
"1000665" -> "1000536"  [label="DDG: MaxHashTable"];
"1000536" -> "1000539"  [label="DDG: MaxHashTable"];
"1000536" -> "1000539"  [label="DDG: k"];
"1000536" -> "1000543"  [label="DDG: k"];
"1000536" -> "1000581"  [label="DDG: MaxHashTable"];
"1000536" -> "1000593"  [label="DDG: MaxHashTable"];
"1000536" -> "1000665"  [label="DDG: MaxHashTable"];
"1000539" -> "1000535"  [label="AST: "];
"1000539" -> "1000541"  [label="CFG: "];
"1000540" -> "1000539"  [label="AST: "];
"1000541" -> "1000539"  [label="AST: "];
"1000544" -> "1000539"  [label="CFG: "];
"1000539" -> "1000857"  [label="DDG: MaxHashTable"];
"1000539" -> "1000543"  [label="DDG: k"];
"1000543" -> "1000542"  [label="AST: "];
"1000543" -> "1000545"  [label="CFG: "];
"1000544" -> "1000543"  [label="AST: "];
"1000545" -> "1000543"  [label="AST: "];
"1000546" -> "1000543"  [label="CFG: "];
"1000550" -> "1000543"  [label="CFG: "];
"1000543" -> "1000857"  [label="DDG: k < 0"];
"1000543" -> "1000857"  [label="DDG: k"];
"1000543" -> "1000576"  [label="DDG: k"];
"1000576" -> "1000575"  [label="AST: "];
"1000576" -> "1000578"  [label="CFG: "];
"1000577" -> "1000576"  [label="AST: "];
"1000578" -> "1000576"  [label="AST: "];
"1000580" -> "1000576"  [label="CFG: "];
"1000587" -> "1000576"  [label="CFG: "];
"1000576" -> "1000857"  [label="DDG: k != 0"];
"1000576" -> "1000581"  [label="DDG: k"];
"1000576" -> "1000586"  [label="DDG: k"];
"1000581" -> "1000579"  [label="AST: "];
"1000581" -> "1000583"  [label="CFG: "];
"1000582" -> "1000581"  [label="AST: "];
"1000583" -> "1000581"  [label="AST: "];
"1000579" -> "1000581"  [label="CFG: "];
"1000581" -> "1000857"  [label="DDG: MaxHashTable"];
"1000581" -> "1000579"  [label="DDG: MaxHashTable"];
"1000581" -> "1000579"  [label="DDG: k"];
"1000581" -> "1000586"  [label="DDG: k"];
"1000581" -> "1000593"  [label="DDG: MaxHashTable"];
"1000581" -> "1000665"  [label="DDG: MaxHashTable"];
"1000579" -> "1000575"  [label="AST: "];
"1000580" -> "1000579"  [label="AST: "];
"1000587" -> "1000579"  [label="CFG: "];
"1000579" -> "1000857"  [label="DDG: MaxHashTable-k"];
"1000579" -> "1000586"  [label="DDG: displacement"];
"1000586" -> "1000585"  [label="AST: "];
"1000586" -> "1000588"  [label="CFG: "];
"1000587" -> "1000586"  [label="AST: "];
"1000588" -> "1000586"  [label="AST: "];
"1000591" -> "1000586"  [label="CFG: "];
"1000586" -> "1000857"  [label="DDG: displacement"];
"1000505" -> "1000586"  [label="DDG: displacement"];
"1000590" -> "1000586"  [label="DDG: k"];
"1000593" -> "1000586"  [label="DDG: k"];
"1000586" -> "1000590"  [label="DDG: k"];
"1000590" -> "1000589"  [label="AST: "];
"1000590" -> "1000592"  [label="CFG: "];
"1000591" -> "1000590"  [label="AST: "];
"1000592" -> "1000590"  [label="AST: "];
"1000594" -> "1000590"  [label="CFG: "];
"1000599" -> "1000590"  [label="CFG: "];
"1000590" -> "1000857"  [label="DDG: k < 0"];
"1000590" -> "1000857"  [label="DDG: k"];
"1000590" -> "1000593"  [label="DDG: k"];
"1000593" -> "1000589"  [label="AST: "];
"1000593" -> "1000595"  [label="CFG: "];
"1000594" -> "1000593"  [label="AST: "];
"1000595" -> "1000593"  [label="AST: "];
"1000599" -> "1000593"  [label="CFG: "];
"1000593" -> "1000857"  [label="DDG: MaxHashTable"];
"1000593" -> "1000857"  [label="DDG: k"];
"1000665" -> "1000661"  [label="AST: "];
"1000665" -> "1000667"  [label="CFG: "];
"1000666" -> "1000665"  [label="AST: "];
"1000667" -> "1000665"  [label="AST: "];
"1000672" -> "1000665"  [label="CFG: "];
"1000676" -> "1000665"  [label="CFG: "];
"1000665" -> "1000857"  [label="DDG: k"];
"1000665" -> "1000857"  [label="DDG: k < MaxHashTable"];
"1000665" -> "1000857"  [label="DDG: MaxHashTable"];
"1000662" -> "1000665"  [label="DDG: k"];
"1000668" -> "1000665"  [label="DDG: k"];
"1000665" -> "1000668"  [label="DDG: k"];
"1000668" -> "1000661"  [label="AST: "];
"1000668" -> "1000669"  [label="CFG: "];
"1000669" -> "1000668"  [label="AST: "];
"1000666" -> "1000668"  [label="CFG: "];
}
