digraph "0_ImageMagick6_19651f3db63fa1511ed83a348c4c82fa553f8d01@API" {
"1000362" [label="(Call,memset(hash_prefix,0,MaxHashTable*sizeof(*hash_prefix)))"];
"1000247" [label="(Call,hash_prefix=(short *) AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix)))"];
"1000249" [label="(Call,(short *) AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix)))"];
"1000251" [label="(Call,AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix)))"];
"1000242" [label="(Call,AcquireQuantumMemory(MaxHashTable,sizeof(*hash_code)))"];
"1000279" [label="(Call,hash_prefix == (short *) NULL)"];
"1000281" [label="(Call,(short *) NULL)"];
"1000275" [label="(Call,(short *) NULL)"];
"1000269" [label="(Call,(unsigned char *) NULL)"];
"1000223" [label="(Call,(Image *) NULL)"];
"1000365" [label="(Call,MaxHashTable*sizeof(*hash_prefix))"];
"1000355" [label="(Call,MaxHashTable*sizeof(*hash_code))"];
"1000260" [label="(Call,AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix)))"];
"1000360" [label="(Call,(void) memset(hash_prefix,0,MaxHashTable*sizeof(*hash_prefix)))"];
"1000556" [label="(Call,hash_prefix[k] == waiting_code)"];
"1000524" [label="(Call,(ssize_t) (((size_t) index << (MaxGIFBits-8))+waiting_code))"];
"1000522" [label="(Call,k=(ssize_t) (((size_t) index << (MaxGIFBits-8))+waiting_code))"];
"1000536" [label="(Call,k >= MaxHashTable)"];
"1000539" [label="(Call,k-=MaxHashTable)"];
"1000543" [label="(Call,k < 0)"];
"1000576" [label="(Call,k != 0)"];
"1000581" [label="(Call,MaxHashTable-k)"];
"1000579" [label="(Call,displacement=MaxHashTable-k)"];
"1000586" [label="(Call,k-=displacement)"];
"1000590" [label="(Call,k < 0)"];
"1000593" [label="(Call,k+=MaxHashTable)"];
"1000665" [label="(Call,k < MaxHashTable)"];
"1000668" [label="(Call,k++)"];
"1000526" [label="(Call,((size_t) index << (MaxGIFBits-8))+waiting_code)"];
"1000555" [label="(Call,(hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index))"];
"1000604" [label="(Call,(hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index))"];
"1000605" [label="(Call,hash_prefix[k] == waiting_code)"];
"1000632" [label="(Call,GIFOutputCode(waiting_code))"];
"1000647" [label="(Call,hash_prefix[k]=waiting_code)"];
"1000841" [label="(Call,RelinquishMagickMemory(hash_prefix))"];
"1000839" [label="(Call,(short *) RelinquishMagickMemory(hash_prefix))"];
"1000837" [label="(Call,hash_prefix=(short *) RelinquishMagickMemory(hash_prefix))"];
"1000773" [label="(Call,GIFOutputCode(waiting_code))"];
"1000283" [label="(Identifier,NULL)"];
"1000576" [label="(Call,k != 0)"];
"1000275" [label="(Call,(short *) NULL)"];
"1000279" [label="(Call,hash_prefix == (short *) NULL)"];
"1000523" [label="(Identifier,k)"];
"1000668" [label="(Call,k++)"];
"1000651" [label="(Identifier,waiting_code)"];
"1000277" [label="(Identifier,NULL)"];
"1000544" [label="(Identifier,k)"];
"1000252" [label="(Identifier,MaxHashTable)"];
"1000367" [label="(Call,sizeof(*hash_prefix))"];
"1000536" [label="(Call,k >= MaxHashTable)"];
"1000257" [label="(Identifier,hash_suffix)"];
"1000357" [label="(Call,sizeof(*hash_code))"];
"1000604" [label="(Call,(hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index))"];
"1000841" [label="(Call,RelinquishMagickMemory(hash_prefix))"];
"1000609" [label="(Identifier,waiting_code)"];
"1000689" [label="(Call,waiting_code=(short) index)"];
"1000364" [label="(Literal,0)"];
"1000375" [label="(Call,MaxHashTable*sizeof(*hash_suffix))"];
"1000676" [label="(Identifier,free_code)"];
"1000260" [label="(Call,AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix)))"];
"1000473" [label="(Call,waiting_code=(short) (*indexes))"];
"1000362" [label="(Call,memset(hash_prefix,0,MaxHashTable*sizeof(*hash_prefix)))"];
"1000225" [label="(Identifier,NULL)"];
"1000612" [label="(Identifier,hash_suffix)"];
"1000355" [label="(Call,MaxHashTable*sizeof(*hash_code))"];
"1000594" [label="(Identifier,k)"];
"1000423" [label="(Call,waiting_code=0)"];
"1000662" [label="(Call,k=0)"];
"1000460" [label="(Call,(const PixelPacket *) NULL)"];
"1000560" [label="(Identifier,waiting_code)"];
"1000570" [label="(Identifier,waiting_code)"];
"1000116" [label="(Block,)"];
"1000258" [label="(Call,(unsigned char *) AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix)))"];
"1000526" [label="(Call,((size_t) index << (MaxGIFBits-8))+waiting_code)"];
"1000857" [label="(MethodReturn,static MagickBooleanType)"];
"1000541" [label="(Identifier,MaxHashTable)"];
"1000669" [label="(Identifier,k)"];
"1000366" [label="(Identifier,MaxHashTable)"];
"1000592" [label="(Literal,0)"];
"1000524" [label="(Call,(ssize_t) (((size_t) index << (MaxGIFBits-8))+waiting_code))"];
"1000542" [label="(ControlStructure,if (k < 0))"];
"1000286" [label="(Call,(unsigned char *) NULL)"];
"1000253" [label="(Call,sizeof(*hash_prefix))"];
"1000632" [label="(Call,GIFOutputCode(waiting_code))"];
"1000261" [label="(Identifier,MaxHashTable)"];
"1000537" [label="(Identifier,k)"];
"1000505" [label="(Call,displacement=1)"];
"1000595" [label="(Identifier,MaxHashTable)"];
"1000550" [label="(Identifier,hash_code)"];
"1000554" [label="(ControlStructure,if ((hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index)))"];
"1000588" [label="(Identifier,displacement)"];
"1000577" [label="(Identifier,k)"];
"1000672" [label="(Identifier,hash_code)"];
"1000555" [label="(Call,(hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index))"];
"1000579" [label="(Call,displacement=MaxHashTable-k)"];
"1000352" [label="(Call,memset(hash_code,0,MaxHashTable*sizeof(*hash_code)))"];
"1000242" [label="(Call,AcquireQuantumMemory(MaxHashTable,sizeof(*hash_code)))"];
"1000774" [label="(Identifier,waiting_code)"];
"1000543" [label="(Call,k < 0)"];
"1000561" [label="(Call,hash_suffix[k] == (unsigned char) index)"];
"1000586" [label="(Call,k-=displacement)"];
"1000582" [label="(Identifier,MaxHashTable)"];
"1000540" [label="(Identifier,k)"];
"1000267" [label="(Call,packet == (unsigned char *) NULL)"];
"1000636" [label="(Identifier,free_code)"];
"1000535" [label="(ControlStructure,if (k >= MaxHashTable))"];
"1000285" [label="(Identifier,hash_suffix)"];
"1000585" [label="(Block,)"];
"1000583" [label="(Identifier,k)"];
"1000569" [label="(Call,waiting_code=hash_code[k])"];
"1000638" [label="(Block,)"];
"1000557" [label="(Call,hash_prefix[k])"];
"1000534" [label="(Identifier,waiting_code)"];
"1000647" [label="(Call,hash_prefix[k]=waiting_code)"];
"1000269" [label="(Call,(unsigned char *) NULL)"];
"1000315" [label="(Call,hash_prefix != (short *) NULL)"];
"1000240" [label="(Call,(short *) AcquireQuantumMemory(MaxHashTable,sizeof(*hash_code)))"];
"1000606" [label="(Call,hash_prefix[k])"];
"1000844" [label="(Identifier,hash_code)"];
"1000773" [label="(Call,GIFOutputCode(waiting_code))"];
"1000248" [label="(Identifier,hash_prefix)"];
"1000587" [label="(Identifier,k)"];
"1000666" [label="(Identifier,k)"];
"1000363" [label="(Identifier,hash_prefix)"];
"1000244" [label="(Call,sizeof(*hash_code))"];
"1000837" [label="(Call,hash_prefix=(short *) RelinquishMagickMemory(hash_prefix))"];
"1000546" [label="(ControlStructure,continue;)"];
"1000619" [label="(Identifier,waiting_code)"];
"1000522" [label="(Call,k=(ssize_t) (((size_t) index << (MaxGIFBits-8))+waiting_code))"];
"1000667" [label="(Identifier,MaxHashTable)"];
"1000654" [label="(Identifier,hash_suffix)"];
"1000271" [label="(Identifier,NULL)"];
"1000538" [label="(Identifier,MaxHashTable)"];
"1000293" [label="(Call,(unsigned char *) NULL)"];
"1000223" [label="(Call,(Image *) NULL)"];
"1000539" [label="(Call,k-=MaxHashTable)"];
"1000545" [label="(Literal,0)"];
"1000661" [label="(ControlStructure,for (k=0; k < MaxHashTable; k++))"];
"1000365" [label="(Call,MaxHashTable*sizeof(*hash_prefix))"];
"1000665" [label="(Call,k < MaxHashTable)"];
"1000633" [label="(Identifier,waiting_code)"];
"1000563" [label="(Identifier,hash_suffix)"];
"1000842" [label="(Identifier,hash_prefix)"];
"1000591" [label="(Identifier,k)"];
"1000590" [label="(Call,k < 0)"];
"1000262" [label="(Call,sizeof(*hash_suffix))"];
"1000603" [label="(ControlStructure,if ((hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index)))"];
"1000605" [label="(Call,hash_prefix[k] == waiting_code)"];
"1000580" [label="(Identifier,displacement)"];
"1000610" [label="(Call,hash_suffix[k] == (unsigned char) index)"];
"1000575" [label="(ControlStructure,if (k != 0))"];
"1000280" [label="(Identifier,hash_prefix)"];
"1000599" [label="(Identifier,hash_code)"];
"1000589" [label="(ControlStructure,if (k < 0))"];
"1000581" [label="(Call,MaxHashTable-k)"];
"1000648" [label="(Call,hash_prefix[k])"];
"1000247" [label="(Call,hash_prefix=(short *) AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix)))"];
"1000578" [label="(Literal,0)"];
"1000776" [label="(Identifier,end_of_information_code)"];
"1000251" [label="(Call,AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix)))"];
"1000839" [label="(Call,(short *) RelinquishMagickMemory(hash_prefix))"];
"1000618" [label="(Call,waiting_code=hash_code[k])"];
"1000281" [label="(Call,(short *) NULL)"];
"1000501" [label="(Block,)"];
"1000249" [label="(Call,(short *) AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix)))"];
"1000593" [label="(Call,k+=MaxHashTable)"];
"1000273" [label="(Call,hash_code == (short *) NULL)"];
"1000356" [label="(Identifier,MaxHashTable)"];
"1000221" [label="(Call,image != (Image *) NULL)"];
"1000556" [label="(Call,hash_prefix[k] == waiting_code)"];
"1000243" [label="(Identifier,MaxHashTable)"];
"1000360" [label="(Call,(void) memset(hash_prefix,0,MaxHashTable*sizeof(*hash_prefix)))"];
"1000838" [label="(Identifier,hash_prefix)"];
"1000278" [label="(Call,(hash_prefix == (short *) NULL) ||\n      (hash_suffix == (unsigned char *) NULL))"];
"1000527" [label="(Call,(size_t) index << (MaxGIFBits-8))"];
"1000362" -> "1000360"  [label="AST: "];
"1000362" -> "1000365"  [label="CFG: "];
"1000363" -> "1000362"  [label="AST: "];
"1000364" -> "1000362"  [label="AST: "];
"1000365" -> "1000362"  [label="AST: "];
"1000360" -> "1000362"  [label="CFG: "];
"1000362" -> "1000857"  [label="DDG: MaxHashTable*sizeof(*hash_prefix)"];
"1000362" -> "1000360"  [label="DDG: hash_prefix"];
"1000362" -> "1000360"  [label="DDG: 0"];
"1000362" -> "1000360"  [label="DDG: MaxHashTable*sizeof(*hash_prefix)"];
"1000247" -> "1000362"  [label="DDG: hash_prefix"];
"1000279" -> "1000362"  [label="DDG: hash_prefix"];
"1000365" -> "1000362"  [label="DDG: MaxHashTable"];
"1000362" -> "1000556"  [label="DDG: hash_prefix"];
"1000362" -> "1000605"  [label="DDG: hash_prefix"];
"1000362" -> "1000841"  [label="DDG: hash_prefix"];
"1000247" -> "1000116"  [label="AST: "];
"1000247" -> "1000249"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000249" -> "1000247"  [label="AST: "];
"1000257" -> "1000247"  [label="CFG: "];
"1000247" -> "1000857"  [label="DDG: (short *) AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix))"];
"1000249" -> "1000247"  [label="DDG: AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix))"];
"1000247" -> "1000279"  [label="DDG: hash_prefix"];
"1000247" -> "1000315"  [label="DDG: hash_prefix"];
"1000249" -> "1000251"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000251" -> "1000249"  [label="AST: "];
"1000249" -> "1000857"  [label="DDG: AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix))"];
"1000251" -> "1000249"  [label="DDG: MaxHashTable"];
"1000251" -> "1000253"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="AST: "];
"1000242" -> "1000251"  [label="DDG: MaxHashTable"];
"1000251" -> "1000260"  [label="DDG: MaxHashTable"];
"1000242" -> "1000240"  [label="AST: "];
"1000242" -> "1000244"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000244" -> "1000242"  [label="AST: "];
"1000240" -> "1000242"  [label="CFG: "];
"1000242" -> "1000240"  [label="DDG: MaxHashTable"];
"1000279" -> "1000278"  [label="AST: "];
"1000279" -> "1000281"  [label="CFG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000281" -> "1000279"  [label="AST: "];
"1000285" -> "1000279"  [label="CFG: "];
"1000278" -> "1000279"  [label="CFG: "];
"1000279" -> "1000857"  [label="DDG: (short *) NULL"];
"1000279" -> "1000278"  [label="DDG: hash_prefix"];
"1000279" -> "1000278"  [label="DDG: (short *) NULL"];
"1000281" -> "1000279"  [label="DDG: NULL"];
"1000279" -> "1000315"  [label="DDG: hash_prefix"];
"1000281" -> "1000283"  [label="CFG: "];
"1000282" -> "1000281"  [label="AST: "];
"1000283" -> "1000281"  [label="AST: "];
"1000281" -> "1000857"  [label="DDG: NULL"];
"1000275" -> "1000281"  [label="DDG: NULL"];
"1000281" -> "1000286"  [label="DDG: NULL"];
"1000281" -> "1000293"  [label="DDG: NULL"];
"1000281" -> "1000460"  [label="DDG: NULL"];
"1000275" -> "1000273"  [label="AST: "];
"1000275" -> "1000277"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000277" -> "1000275"  [label="AST: "];
"1000273" -> "1000275"  [label="CFG: "];
"1000275" -> "1000857"  [label="DDG: NULL"];
"1000275" -> "1000273"  [label="DDG: NULL"];
"1000269" -> "1000275"  [label="DDG: NULL"];
"1000275" -> "1000293"  [label="DDG: NULL"];
"1000275" -> "1000460"  [label="DDG: NULL"];
"1000269" -> "1000267"  [label="AST: "];
"1000269" -> "1000271"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000271" -> "1000269"  [label="AST: "];
"1000267" -> "1000269"  [label="CFG: "];
"1000269" -> "1000857"  [label="DDG: NULL"];
"1000269" -> "1000267"  [label="DDG: NULL"];
"1000223" -> "1000269"  [label="DDG: NULL"];
"1000269" -> "1000293"  [label="DDG: NULL"];
"1000269" -> "1000460"  [label="DDG: NULL"];
"1000223" -> "1000221"  [label="AST: "];
"1000223" -> "1000225"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000225" -> "1000223"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000223" -> "1000221"  [label="DDG: NULL"];
"1000365" -> "1000367"  [label="CFG: "];
"1000366" -> "1000365"  [label="AST: "];
"1000367" -> "1000365"  [label="AST: "];
"1000355" -> "1000365"  [label="DDG: MaxHashTable"];
"1000365" -> "1000375"  [label="DDG: MaxHashTable"];
"1000355" -> "1000352"  [label="AST: "];
"1000355" -> "1000357"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000357" -> "1000355"  [label="AST: "];
"1000352" -> "1000355"  [label="CFG: "];
"1000355" -> "1000352"  [label="DDG: MaxHashTable"];
"1000260" -> "1000355"  [label="DDG: MaxHashTable"];
"1000260" -> "1000258"  [label="AST: "];
"1000260" -> "1000262"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000262" -> "1000260"  [label="AST: "];
"1000258" -> "1000260"  [label="CFG: "];
"1000260" -> "1000857"  [label="DDG: MaxHashTable"];
"1000260" -> "1000258"  [label="DDG: MaxHashTable"];
"1000360" -> "1000116"  [label="AST: "];
"1000361" -> "1000360"  [label="AST: "];
"1000371" -> "1000360"  [label="CFG: "];
"1000360" -> "1000857"  [label="DDG: (void) memset(hash_prefix,0,MaxHashTable*sizeof(*hash_prefix))"];
"1000360" -> "1000857"  [label="DDG: memset(hash_prefix,0,MaxHashTable*sizeof(*hash_prefix))"];
"1000556" -> "1000555"  [label="AST: "];
"1000556" -> "1000560"  [label="CFG: "];
"1000557" -> "1000556"  [label="AST: "];
"1000560" -> "1000556"  [label="AST: "];
"1000563" -> "1000556"  [label="CFG: "];
"1000555" -> "1000556"  [label="CFG: "];
"1000556" -> "1000857"  [label="DDG: hash_prefix[k]"];
"1000556" -> "1000524"  [label="DDG: waiting_code"];
"1000556" -> "1000526"  [label="DDG: waiting_code"];
"1000556" -> "1000555"  [label="DDG: hash_prefix[k]"];
"1000556" -> "1000555"  [label="DDG: waiting_code"];
"1000647" -> "1000556"  [label="DDG: hash_prefix[k]"];
"1000605" -> "1000556"  [label="DDG: hash_prefix[k]"];
"1000605" -> "1000556"  [label="DDG: waiting_code"];
"1000689" -> "1000556"  [label="DDG: waiting_code"];
"1000473" -> "1000556"  [label="DDG: waiting_code"];
"1000423" -> "1000556"  [label="DDG: waiting_code"];
"1000569" -> "1000556"  [label="DDG: waiting_code"];
"1000618" -> "1000556"  [label="DDG: waiting_code"];
"1000556" -> "1000605"  [label="DDG: hash_prefix[k]"];
"1000556" -> "1000605"  [label="DDG: waiting_code"];
"1000556" -> "1000632"  [label="DDG: waiting_code"];
"1000556" -> "1000773"  [label="DDG: waiting_code"];
"1000556" -> "1000841"  [label="DDG: hash_prefix[k]"];
"1000524" -> "1000522"  [label="AST: "];
"1000524" -> "1000526"  [label="CFG: "];
"1000525" -> "1000524"  [label="AST: "];
"1000526" -> "1000524"  [label="AST: "];
"1000522" -> "1000524"  [label="CFG: "];
"1000524" -> "1000857"  [label="DDG: ((size_t) index << (MaxGIFBits-8))+waiting_code"];
"1000524" -> "1000522"  [label="DDG: ((size_t) index << (MaxGIFBits-8))+waiting_code"];
"1000527" -> "1000524"  [label="DDG: (size_t) index"];
"1000527" -> "1000524"  [label="DDG: MaxGIFBits-8"];
"1000689" -> "1000524"  [label="DDG: waiting_code"];
"1000473" -> "1000524"  [label="DDG: waiting_code"];
"1000423" -> "1000524"  [label="DDG: waiting_code"];
"1000569" -> "1000524"  [label="DDG: waiting_code"];
"1000618" -> "1000524"  [label="DDG: waiting_code"];
"1000605" -> "1000524"  [label="DDG: waiting_code"];
"1000522" -> "1000501"  [label="AST: "];
"1000523" -> "1000522"  [label="AST: "];
"1000537" -> "1000522"  [label="CFG: "];
"1000522" -> "1000857"  [label="DDG: (ssize_t) (((size_t) index << (MaxGIFBits-8))+waiting_code)"];
"1000522" -> "1000536"  [label="DDG: k"];
"1000536" -> "1000535"  [label="AST: "];
"1000536" -> "1000538"  [label="CFG: "];
"1000537" -> "1000536"  [label="AST: "];
"1000538" -> "1000536"  [label="AST: "];
"1000540" -> "1000536"  [label="CFG: "];
"1000544" -> "1000536"  [label="CFG: "];
"1000536" -> "1000857"  [label="DDG: k >= MaxHashTable"];
"1000536" -> "1000857"  [label="DDG: MaxHashTable"];
"1000375" -> "1000536"  [label="DDG: MaxHashTable"];
"1000581" -> "1000536"  [label="DDG: MaxHashTable"];
"1000665" -> "1000536"  [label="DDG: MaxHashTable"];
"1000536" -> "1000539"  [label="DDG: MaxHashTable"];
"1000536" -> "1000539"  [label="DDG: k"];
"1000536" -> "1000543"  [label="DDG: k"];
"1000536" -> "1000581"  [label="DDG: MaxHashTable"];
"1000536" -> "1000593"  [label="DDG: MaxHashTable"];
"1000536" -> "1000665"  [label="DDG: MaxHashTable"];
"1000539" -> "1000535"  [label="AST: "];
"1000539" -> "1000541"  [label="CFG: "];
"1000540" -> "1000539"  [label="AST: "];
"1000541" -> "1000539"  [label="AST: "];
"1000544" -> "1000539"  [label="CFG: "];
"1000539" -> "1000857"  [label="DDG: MaxHashTable"];
"1000539" -> "1000543"  [label="DDG: k"];
"1000543" -> "1000542"  [label="AST: "];
"1000543" -> "1000545"  [label="CFG: "];
"1000544" -> "1000543"  [label="AST: "];
"1000545" -> "1000543"  [label="AST: "];
"1000546" -> "1000543"  [label="CFG: "];
"1000550" -> "1000543"  [label="CFG: "];
"1000543" -> "1000857"  [label="DDG: k < 0"];
"1000543" -> "1000857"  [label="DDG: k"];
"1000543" -> "1000576"  [label="DDG: k"];
"1000576" -> "1000575"  [label="AST: "];
"1000576" -> "1000578"  [label="CFG: "];
"1000577" -> "1000576"  [label="AST: "];
"1000578" -> "1000576"  [label="AST: "];
"1000580" -> "1000576"  [label="CFG: "];
"1000587" -> "1000576"  [label="CFG: "];
"1000576" -> "1000857"  [label="DDG: k != 0"];
"1000576" -> "1000581"  [label="DDG: k"];
"1000576" -> "1000586"  [label="DDG: k"];
"1000581" -> "1000579"  [label="AST: "];
"1000581" -> "1000583"  [label="CFG: "];
"1000582" -> "1000581"  [label="AST: "];
"1000583" -> "1000581"  [label="AST: "];
"1000579" -> "1000581"  [label="CFG: "];
"1000581" -> "1000857"  [label="DDG: MaxHashTable"];
"1000581" -> "1000579"  [label="DDG: MaxHashTable"];
"1000581" -> "1000579"  [label="DDG: k"];
"1000581" -> "1000586"  [label="DDG: k"];
"1000581" -> "1000593"  [label="DDG: MaxHashTable"];
"1000581" -> "1000665"  [label="DDG: MaxHashTable"];
"1000579" -> "1000575"  [label="AST: "];
"1000580" -> "1000579"  [label="AST: "];
"1000587" -> "1000579"  [label="CFG: "];
"1000579" -> "1000857"  [label="DDG: MaxHashTable-k"];
"1000579" -> "1000586"  [label="DDG: displacement"];
"1000586" -> "1000585"  [label="AST: "];
"1000586" -> "1000588"  [label="CFG: "];
"1000587" -> "1000586"  [label="AST: "];
"1000588" -> "1000586"  [label="AST: "];
"1000591" -> "1000586"  [label="CFG: "];
"1000586" -> "1000857"  [label="DDG: displacement"];
"1000505" -> "1000586"  [label="DDG: displacement"];
"1000590" -> "1000586"  [label="DDG: k"];
"1000593" -> "1000586"  [label="DDG: k"];
"1000586" -> "1000590"  [label="DDG: k"];
"1000590" -> "1000589"  [label="AST: "];
"1000590" -> "1000592"  [label="CFG: "];
"1000591" -> "1000590"  [label="AST: "];
"1000592" -> "1000590"  [label="AST: "];
"1000594" -> "1000590"  [label="CFG: "];
"1000599" -> "1000590"  [label="CFG: "];
"1000590" -> "1000857"  [label="DDG: k < 0"];
"1000590" -> "1000857"  [label="DDG: k"];
"1000590" -> "1000593"  [label="DDG: k"];
"1000593" -> "1000589"  [label="AST: "];
"1000593" -> "1000595"  [label="CFG: "];
"1000594" -> "1000593"  [label="AST: "];
"1000595" -> "1000593"  [label="AST: "];
"1000599" -> "1000593"  [label="CFG: "];
"1000593" -> "1000857"  [label="DDG: MaxHashTable"];
"1000593" -> "1000857"  [label="DDG: k"];
"1000665" -> "1000661"  [label="AST: "];
"1000665" -> "1000667"  [label="CFG: "];
"1000666" -> "1000665"  [label="AST: "];
"1000667" -> "1000665"  [label="AST: "];
"1000672" -> "1000665"  [label="CFG: "];
"1000676" -> "1000665"  [label="CFG: "];
"1000665" -> "1000857"  [label="DDG: k"];
"1000665" -> "1000857"  [label="DDG: k < MaxHashTable"];
"1000665" -> "1000857"  [label="DDG: MaxHashTable"];
"1000662" -> "1000665"  [label="DDG: k"];
"1000668" -> "1000665"  [label="DDG: k"];
"1000665" -> "1000668"  [label="DDG: k"];
"1000668" -> "1000661"  [label="AST: "];
"1000668" -> "1000669"  [label="CFG: "];
"1000669" -> "1000668"  [label="AST: "];
"1000666" -> "1000668"  [label="CFG: "];
"1000526" -> "1000534"  [label="CFG: "];
"1000527" -> "1000526"  [label="AST: "];
"1000534" -> "1000526"  [label="AST: "];
"1000526" -> "1000857"  [label="DDG: (size_t) index << (MaxGIFBits-8)"];
"1000527" -> "1000526"  [label="DDG: (size_t) index"];
"1000527" -> "1000526"  [label="DDG: MaxGIFBits-8"];
"1000689" -> "1000526"  [label="DDG: waiting_code"];
"1000473" -> "1000526"  [label="DDG: waiting_code"];
"1000423" -> "1000526"  [label="DDG: waiting_code"];
"1000569" -> "1000526"  [label="DDG: waiting_code"];
"1000618" -> "1000526"  [label="DDG: waiting_code"];
"1000605" -> "1000526"  [label="DDG: waiting_code"];
"1000555" -> "1000554"  [label="AST: "];
"1000555" -> "1000561"  [label="CFG: "];
"1000561" -> "1000555"  [label="AST: "];
"1000570" -> "1000555"  [label="CFG: "];
"1000577" -> "1000555"  [label="CFG: "];
"1000555" -> "1000857"  [label="DDG: (hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index)"];
"1000555" -> "1000857"  [label="DDG: hash_prefix[k] == waiting_code"];
"1000555" -> "1000857"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000604" -> "1000555"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000561" -> "1000555"  [label="DDG: hash_suffix[k]"];
"1000561" -> "1000555"  [label="DDG: (unsigned char) index"];
"1000555" -> "1000604"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000604" -> "1000603"  [label="AST: "];
"1000604" -> "1000605"  [label="CFG: "];
"1000604" -> "1000610"  [label="CFG: "];
"1000605" -> "1000604"  [label="AST: "];
"1000610" -> "1000604"  [label="AST: "];
"1000587" -> "1000604"  [label="CFG: "];
"1000619" -> "1000604"  [label="CFG: "];
"1000604" -> "1000857"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000604" -> "1000857"  [label="DDG: (hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index)"];
"1000604" -> "1000857"  [label="DDG: hash_prefix[k] == waiting_code"];
"1000605" -> "1000604"  [label="DDG: hash_prefix[k]"];
"1000605" -> "1000604"  [label="DDG: waiting_code"];
"1000610" -> "1000604"  [label="DDG: hash_suffix[k]"];
"1000610" -> "1000604"  [label="DDG: (unsigned char) index"];
"1000605" -> "1000609"  [label="CFG: "];
"1000606" -> "1000605"  [label="AST: "];
"1000609" -> "1000605"  [label="AST: "];
"1000612" -> "1000605"  [label="CFG: "];
"1000605" -> "1000857"  [label="DDG: hash_prefix[k]"];
"1000605" -> "1000632"  [label="DDG: waiting_code"];
"1000605" -> "1000773"  [label="DDG: waiting_code"];
"1000605" -> "1000841"  [label="DDG: hash_prefix[k]"];
"1000632" -> "1000501"  [label="AST: "];
"1000632" -> "1000633"  [label="CFG: "];
"1000633" -> "1000632"  [label="AST: "];
"1000636" -> "1000632"  [label="CFG: "];
"1000618" -> "1000632"  [label="DDG: waiting_code"];
"1000689" -> "1000632"  [label="DDG: waiting_code"];
"1000473" -> "1000632"  [label="DDG: waiting_code"];
"1000423" -> "1000632"  [label="DDG: waiting_code"];
"1000569" -> "1000632"  [label="DDG: waiting_code"];
"1000632" -> "1000647"  [label="DDG: waiting_code"];
"1000647" -> "1000638"  [label="AST: "];
"1000647" -> "1000651"  [label="CFG: "];
"1000648" -> "1000647"  [label="AST: "];
"1000651" -> "1000647"  [label="AST: "];
"1000654" -> "1000647"  [label="CFG: "];
"1000647" -> "1000857"  [label="DDG: hash_prefix[k]"];
"1000647" -> "1000841"  [label="DDG: hash_prefix[k]"];
"1000841" -> "1000839"  [label="AST: "];
"1000841" -> "1000842"  [label="CFG: "];
"1000842" -> "1000841"  [label="AST: "];
"1000839" -> "1000841"  [label="CFG: "];
"1000841" -> "1000839"  [label="DDG: hash_prefix"];
"1000839" -> "1000837"  [label="AST: "];
"1000840" -> "1000839"  [label="AST: "];
"1000837" -> "1000839"  [label="CFG: "];
"1000839" -> "1000857"  [label="DDG: RelinquishMagickMemory(hash_prefix)"];
"1000839" -> "1000837"  [label="DDG: RelinquishMagickMemory(hash_prefix)"];
"1000837" -> "1000116"  [label="AST: "];
"1000838" -> "1000837"  [label="AST: "];
"1000844" -> "1000837"  [label="CFG: "];
"1000837" -> "1000857"  [label="DDG: hash_prefix"];
"1000837" -> "1000857"  [label="DDG: (short *) RelinquishMagickMemory(hash_prefix)"];
"1000773" -> "1000116"  [label="AST: "];
"1000773" -> "1000774"  [label="CFG: "];
"1000774" -> "1000773"  [label="AST: "];
"1000776" -> "1000773"  [label="CFG: "];
"1000773" -> "1000857"  [label="DDG: GIFOutputCode(waiting_code)"];
"1000773" -> "1000857"  [label="DDG: waiting_code"];
"1000689" -> "1000773"  [label="DDG: waiting_code"];
"1000473" -> "1000773"  [label="DDG: waiting_code"];
"1000423" -> "1000773"  [label="DDG: waiting_code"];
"1000569" -> "1000773"  [label="DDG: waiting_code"];
"1000618" -> "1000773"  [label="DDG: waiting_code"];
}
