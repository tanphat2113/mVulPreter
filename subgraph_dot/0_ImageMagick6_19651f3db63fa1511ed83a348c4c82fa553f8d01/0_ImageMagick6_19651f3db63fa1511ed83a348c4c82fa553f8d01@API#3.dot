digraph "0_ImageMagick6_19651f3db63fa1511ed83a348c4c82fa553f8d01@API" {
"1000372" [label="(Call,memset(hash_suffix,0,MaxHashTable*sizeof(*hash_suffix)))"];
"1000284" [label="(Call,hash_suffix == (unsigned char *) NULL)"];
"1000256" [label="(Call,hash_suffix=(unsigned char *) AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix)))"];
"1000258" [label="(Call,(unsigned char *) AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix)))"];
"1000260" [label="(Call,AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix)))"];
"1000251" [label="(Call,AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix)))"];
"1000242" [label="(Call,AcquireQuantumMemory(MaxHashTable,sizeof(*hash_code)))"];
"1000286" [label="(Call,(unsigned char *) NULL)"];
"1000281" [label="(Call,(short *) NULL)"];
"1000275" [label="(Call,(short *) NULL)"];
"1000269" [label="(Call,(unsigned char *) NULL)"];
"1000223" [label="(Call,(Image *) NULL)"];
"1000375" [label="(Call,MaxHashTable*sizeof(*hash_suffix))"];
"1000365" [label="(Call,MaxHashTable*sizeof(*hash_prefix))"];
"1000355" [label="(Call,MaxHashTable*sizeof(*hash_code))"];
"1000370" [label="(Call,(void) memset(hash_suffix,0,MaxHashTable*sizeof(*hash_suffix)))"];
"1000561" [label="(Call,hash_suffix[k] == (unsigned char) index)"];
"1000555" [label="(Call,(hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index))"];
"1000604" [label="(Call,(hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index))"];
"1000610" [label="(Call,hash_suffix[k] == (unsigned char) index)"];
"1000835" [label="(Call,RelinquishMagickMemory(hash_suffix))"];
"1000833" [label="(Call,(unsigned char *) RelinquishMagickMemory(hash_suffix))"];
"1000831" [label="(Call,hash_suffix=(unsigned char *) RelinquishMagickMemory(hash_suffix))"];
"1000283" [label="(Identifier,NULL)"];
"1000275" [label="(Call,(short *) NULL)"];
"1000279" [label="(Call,hash_prefix == (short *) NULL)"];
"1000277" [label="(Identifier,NULL)"];
"1000252" [label="(Identifier,MaxHashTable)"];
"1000367" [label="(Call,sizeof(*hash_prefix))"];
"1000536" [label="(Call,k >= MaxHashTable)"];
"1000257" [label="(Identifier,hash_suffix)"];
"1000357" [label="(Call,sizeof(*hash_code))"];
"1000604" [label="(Call,(hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index))"];
"1000375" [label="(Call,MaxHashTable*sizeof(*hash_suffix))"];
"1000260" [label="(Call,AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix)))"];
"1000362" [label="(Call,memset(hash_prefix,0,MaxHashTable*sizeof(*hash_prefix)))"];
"1000268" [label="(Identifier,packet)"];
"1000225" [label="(Identifier,NULL)"];
"1000836" [label="(Identifier,hash_suffix)"];
"1000355" [label="(Call,MaxHashTable*sizeof(*hash_code))"];
"1000460" [label="(Call,(const PixelPacket *) NULL)"];
"1000570" [label="(Identifier,waiting_code)"];
"1000116" [label="(Block,)"];
"1000258" [label="(Call,(unsigned char *) AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix)))"];
"1000857" [label="(MethodReturn,static MagickBooleanType)"];
"1000366" [label="(Identifier,MaxHashTable)"];
"1000286" [label="(Call,(unsigned char *) NULL)"];
"1000832" [label="(Identifier,hash_suffix)"];
"1000253" [label="(Call,sizeof(*hash_prefix))"];
"1000565" [label="(Call,(unsigned char) index)"];
"1000381" [label="(Identifier,number_bits)"];
"1000261" [label="(Identifier,MaxHashTable)"];
"1000327" [label="(Call,hash_suffix != (unsigned char *) NULL)"];
"1000554" [label="(ControlStructure,if ((hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index)))"];
"1000577" [label="(Identifier,k)"];
"1000376" [label="(Identifier,MaxHashTable)"];
"1000555" [label="(Call,(hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index))"];
"1000831" [label="(Call,hash_suffix=(unsigned char *) RelinquishMagickMemory(hash_suffix))"];
"1000284" [label="(Call,hash_suffix == (unsigned char *) NULL)"];
"1000242" [label="(Call,AcquireQuantumMemory(MaxHashTable,sizeof(*hash_code)))"];
"1000352" [label="(Call,memset(hash_code,0,MaxHashTable*sizeof(*hash_code)))"];
"1000561" [label="(Call,hash_suffix[k] == (unsigned char) index)"];
"1000835" [label="(Call,RelinquishMagickMemory(hash_suffix))"];
"1000267" [label="(Call,packet == (unsigned char *) NULL)"];
"1000285" [label="(Identifier,hash_suffix)"];
"1000377" [label="(Call,sizeof(*hash_suffix))"];
"1000269" [label="(Call,(unsigned char *) NULL)"];
"1000240" [label="(Call,(short *) AcquireQuantumMemory(MaxHashTable,sizeof(*hash_code)))"];
"1000587" [label="(Identifier,k)"];
"1000374" [label="(Literal,0)"];
"1000244" [label="(Call,sizeof(*hash_code))"];
"1000614" [label="(Call,(unsigned char) index)"];
"1000619" [label="(Identifier,waiting_code)"];
"1000271" [label="(Identifier,NULL)"];
"1000293" [label="(Call,(unsigned char *) NULL)"];
"1000223" [label="(Call,(Image *) NULL)"];
"1000365" [label="(Call,MaxHashTable*sizeof(*hash_prefix))"];
"1000833" [label="(Call,(unsigned char *) RelinquishMagickMemory(hash_suffix))"];
"1000562" [label="(Call,hash_suffix[k])"];
"1000262" [label="(Call,sizeof(*hash_suffix))"];
"1000603" [label="(ControlStructure,if ((hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index)))"];
"1000605" [label="(Call,hash_prefix[k] == waiting_code)"];
"1000288" [label="(Identifier,NULL)"];
"1000610" [label="(Call,hash_suffix[k] == (unsigned char) index)"];
"1000372" [label="(Call,memset(hash_suffix,0,MaxHashTable*sizeof(*hash_suffix)))"];
"1000251" [label="(Call,AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix)))"];
"1000256" [label="(Call,hash_suffix=(unsigned char *) AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix)))"];
"1000281" [label="(Call,(short *) NULL)"];
"1000249" [label="(Call,(short *) AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix)))"];
"1000611" [label="(Call,hash_suffix[k])"];
"1000370" [label="(Call,(void) memset(hash_suffix,0,MaxHashTable*sizeof(*hash_suffix)))"];
"1000273" [label="(Call,hash_code == (short *) NULL)"];
"1000356" [label="(Identifier,MaxHashTable)"];
"1000221" [label="(Call,image != (Image *) NULL)"];
"1000373" [label="(Identifier,hash_suffix)"];
"1000556" [label="(Call,hash_prefix[k] == waiting_code)"];
"1000243" [label="(Identifier,MaxHashTable)"];
"1000838" [label="(Identifier,hash_prefix)"];
"1000278" [label="(Call,(hash_prefix == (short *) NULL) ||\n      (hash_suffix == (unsigned char *) NULL))"];
"1000652" [label="(Call,hash_suffix[k]=(unsigned char) index)"];
"1000372" -> "1000370"  [label="AST: "];
"1000372" -> "1000375"  [label="CFG: "];
"1000373" -> "1000372"  [label="AST: "];
"1000374" -> "1000372"  [label="AST: "];
"1000375" -> "1000372"  [label="AST: "];
"1000370" -> "1000372"  [label="CFG: "];
"1000372" -> "1000857"  [label="DDG: MaxHashTable*sizeof(*hash_suffix)"];
"1000372" -> "1000370"  [label="DDG: hash_suffix"];
"1000372" -> "1000370"  [label="DDG: 0"];
"1000372" -> "1000370"  [label="DDG: MaxHashTable*sizeof(*hash_suffix)"];
"1000284" -> "1000372"  [label="DDG: hash_suffix"];
"1000256" -> "1000372"  [label="DDG: hash_suffix"];
"1000375" -> "1000372"  [label="DDG: MaxHashTable"];
"1000372" -> "1000561"  [label="DDG: hash_suffix"];
"1000372" -> "1000610"  [label="DDG: hash_suffix"];
"1000372" -> "1000835"  [label="DDG: hash_suffix"];
"1000284" -> "1000278"  [label="AST: "];
"1000284" -> "1000286"  [label="CFG: "];
"1000285" -> "1000284"  [label="AST: "];
"1000286" -> "1000284"  [label="AST: "];
"1000278" -> "1000284"  [label="CFG: "];
"1000284" -> "1000857"  [label="DDG: (unsigned char *) NULL"];
"1000284" -> "1000278"  [label="DDG: hash_suffix"];
"1000284" -> "1000278"  [label="DDG: (unsigned char *) NULL"];
"1000256" -> "1000284"  [label="DDG: hash_suffix"];
"1000286" -> "1000284"  [label="DDG: NULL"];
"1000284" -> "1000327"  [label="DDG: hash_suffix"];
"1000256" -> "1000116"  [label="AST: "];
"1000256" -> "1000258"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000258" -> "1000256"  [label="AST: "];
"1000268" -> "1000256"  [label="CFG: "];
"1000256" -> "1000857"  [label="DDG: (unsigned char *) AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix))"];
"1000258" -> "1000256"  [label="DDG: AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix))"];
"1000256" -> "1000327"  [label="DDG: hash_suffix"];
"1000258" -> "1000260"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000260" -> "1000258"  [label="AST: "];
"1000258" -> "1000857"  [label="DDG: AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix))"];
"1000260" -> "1000258"  [label="DDG: MaxHashTable"];
"1000260" -> "1000262"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000262" -> "1000260"  [label="AST: "];
"1000260" -> "1000857"  [label="DDG: MaxHashTable"];
"1000251" -> "1000260"  [label="DDG: MaxHashTable"];
"1000260" -> "1000355"  [label="DDG: MaxHashTable"];
"1000251" -> "1000249"  [label="AST: "];
"1000251" -> "1000253"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="AST: "];
"1000249" -> "1000251"  [label="CFG: "];
"1000251" -> "1000249"  [label="DDG: MaxHashTable"];
"1000242" -> "1000251"  [label="DDG: MaxHashTable"];
"1000242" -> "1000240"  [label="AST: "];
"1000242" -> "1000244"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000244" -> "1000242"  [label="AST: "];
"1000240" -> "1000242"  [label="CFG: "];
"1000242" -> "1000240"  [label="DDG: MaxHashTable"];
"1000286" -> "1000288"  [label="CFG: "];
"1000287" -> "1000286"  [label="AST: "];
"1000288" -> "1000286"  [label="AST: "];
"1000286" -> "1000857"  [label="DDG: NULL"];
"1000281" -> "1000286"  [label="DDG: NULL"];
"1000286" -> "1000293"  [label="DDG: NULL"];
"1000286" -> "1000460"  [label="DDG: NULL"];
"1000281" -> "1000279"  [label="AST: "];
"1000281" -> "1000283"  [label="CFG: "];
"1000282" -> "1000281"  [label="AST: "];
"1000283" -> "1000281"  [label="AST: "];
"1000279" -> "1000281"  [label="CFG: "];
"1000281" -> "1000857"  [label="DDG: NULL"];
"1000281" -> "1000279"  [label="DDG: NULL"];
"1000275" -> "1000281"  [label="DDG: NULL"];
"1000281" -> "1000293"  [label="DDG: NULL"];
"1000281" -> "1000460"  [label="DDG: NULL"];
"1000275" -> "1000273"  [label="AST: "];
"1000275" -> "1000277"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000277" -> "1000275"  [label="AST: "];
"1000273" -> "1000275"  [label="CFG: "];
"1000275" -> "1000857"  [label="DDG: NULL"];
"1000275" -> "1000273"  [label="DDG: NULL"];
"1000269" -> "1000275"  [label="DDG: NULL"];
"1000275" -> "1000293"  [label="DDG: NULL"];
"1000275" -> "1000460"  [label="DDG: NULL"];
"1000269" -> "1000267"  [label="AST: "];
"1000269" -> "1000271"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000271" -> "1000269"  [label="AST: "];
"1000267" -> "1000269"  [label="CFG: "];
"1000269" -> "1000857"  [label="DDG: NULL"];
"1000269" -> "1000267"  [label="DDG: NULL"];
"1000223" -> "1000269"  [label="DDG: NULL"];
"1000269" -> "1000293"  [label="DDG: NULL"];
"1000269" -> "1000460"  [label="DDG: NULL"];
"1000223" -> "1000221"  [label="AST: "];
"1000223" -> "1000225"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000225" -> "1000223"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000223" -> "1000221"  [label="DDG: NULL"];
"1000375" -> "1000377"  [label="CFG: "];
"1000376" -> "1000375"  [label="AST: "];
"1000377" -> "1000375"  [label="AST: "];
"1000375" -> "1000857"  [label="DDG: MaxHashTable"];
"1000365" -> "1000375"  [label="DDG: MaxHashTable"];
"1000375" -> "1000536"  [label="DDG: MaxHashTable"];
"1000365" -> "1000362"  [label="AST: "];
"1000365" -> "1000367"  [label="CFG: "];
"1000366" -> "1000365"  [label="AST: "];
"1000367" -> "1000365"  [label="AST: "];
"1000362" -> "1000365"  [label="CFG: "];
"1000365" -> "1000362"  [label="DDG: MaxHashTable"];
"1000355" -> "1000365"  [label="DDG: MaxHashTable"];
"1000355" -> "1000352"  [label="AST: "];
"1000355" -> "1000357"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000357" -> "1000355"  [label="AST: "];
"1000352" -> "1000355"  [label="CFG: "];
"1000355" -> "1000352"  [label="DDG: MaxHashTable"];
"1000370" -> "1000116"  [label="AST: "];
"1000371" -> "1000370"  [label="AST: "];
"1000381" -> "1000370"  [label="CFG: "];
"1000370" -> "1000857"  [label="DDG: (void) memset(hash_suffix,0,MaxHashTable*sizeof(*hash_suffix))"];
"1000370" -> "1000857"  [label="DDG: memset(hash_suffix,0,MaxHashTable*sizeof(*hash_suffix))"];
"1000561" -> "1000555"  [label="AST: "];
"1000561" -> "1000565"  [label="CFG: "];
"1000562" -> "1000561"  [label="AST: "];
"1000565" -> "1000561"  [label="AST: "];
"1000555" -> "1000561"  [label="CFG: "];
"1000561" -> "1000857"  [label="DDG: hash_suffix[k]"];
"1000561" -> "1000857"  [label="DDG: (unsigned char) index"];
"1000561" -> "1000555"  [label="DDG: hash_suffix[k]"];
"1000561" -> "1000555"  [label="DDG: (unsigned char) index"];
"1000610" -> "1000561"  [label="DDG: hash_suffix[k]"];
"1000652" -> "1000561"  [label="DDG: hash_suffix[k]"];
"1000565" -> "1000561"  [label="DDG: index"];
"1000561" -> "1000610"  [label="DDG: hash_suffix[k]"];
"1000561" -> "1000835"  [label="DDG: hash_suffix[k]"];
"1000555" -> "1000554"  [label="AST: "];
"1000555" -> "1000556"  [label="CFG: "];
"1000556" -> "1000555"  [label="AST: "];
"1000570" -> "1000555"  [label="CFG: "];
"1000577" -> "1000555"  [label="CFG: "];
"1000555" -> "1000857"  [label="DDG: (hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index)"];
"1000555" -> "1000857"  [label="DDG: hash_prefix[k] == waiting_code"];
"1000555" -> "1000857"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000556" -> "1000555"  [label="DDG: hash_prefix[k]"];
"1000556" -> "1000555"  [label="DDG: waiting_code"];
"1000604" -> "1000555"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000555" -> "1000604"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000604" -> "1000603"  [label="AST: "];
"1000604" -> "1000605"  [label="CFG: "];
"1000604" -> "1000610"  [label="CFG: "];
"1000605" -> "1000604"  [label="AST: "];
"1000610" -> "1000604"  [label="AST: "];
"1000587" -> "1000604"  [label="CFG: "];
"1000619" -> "1000604"  [label="CFG: "];
"1000604" -> "1000857"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000604" -> "1000857"  [label="DDG: (hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index)"];
"1000604" -> "1000857"  [label="DDG: hash_prefix[k] == waiting_code"];
"1000605" -> "1000604"  [label="DDG: hash_prefix[k]"];
"1000605" -> "1000604"  [label="DDG: waiting_code"];
"1000610" -> "1000604"  [label="DDG: hash_suffix[k]"];
"1000610" -> "1000604"  [label="DDG: (unsigned char) index"];
"1000610" -> "1000614"  [label="CFG: "];
"1000611" -> "1000610"  [label="AST: "];
"1000614" -> "1000610"  [label="AST: "];
"1000610" -> "1000857"  [label="DDG: (unsigned char) index"];
"1000610" -> "1000857"  [label="DDG: hash_suffix[k]"];
"1000652" -> "1000610"  [label="DDG: hash_suffix[k]"];
"1000614" -> "1000610"  [label="DDG: index"];
"1000610" -> "1000835"  [label="DDG: hash_suffix[k]"];
"1000835" -> "1000833"  [label="AST: "];
"1000835" -> "1000836"  [label="CFG: "];
"1000836" -> "1000835"  [label="AST: "];
"1000833" -> "1000835"  [label="CFG: "];
"1000835" -> "1000833"  [label="DDG: hash_suffix"];
"1000652" -> "1000835"  [label="DDG: hash_suffix[k]"];
"1000833" -> "1000831"  [label="AST: "];
"1000834" -> "1000833"  [label="AST: "];
"1000831" -> "1000833"  [label="CFG: "];
"1000833" -> "1000857"  [label="DDG: RelinquishMagickMemory(hash_suffix)"];
"1000833" -> "1000831"  [label="DDG: RelinquishMagickMemory(hash_suffix)"];
"1000831" -> "1000116"  [label="AST: "];
"1000832" -> "1000831"  [label="AST: "];
"1000838" -> "1000831"  [label="CFG: "];
"1000831" -> "1000857"  [label="DDG: hash_suffix"];
"1000831" -> "1000857"  [label="DDG: (unsigned char *) RelinquishMagickMemory(hash_suffix)"];
}
