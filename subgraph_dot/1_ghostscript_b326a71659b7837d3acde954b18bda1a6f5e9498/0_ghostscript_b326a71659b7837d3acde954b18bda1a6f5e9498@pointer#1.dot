digraph "0_ghostscript_b326a71659b7837d3acde954b18bda1a6f5e9498@pointer" {
"1000165" [label="(Call,dict_find_string(op, \"Implementation\", &pImpl))"];
"1000157" [label="(Call,r_has_type(op, t_dictionary))"];
"1000120" [label="(Call,op = osp)"];
"1000163" [label="(Call,code = dict_find_string(op, \"Implementation\", &pImpl))"];
"1000171" [label="(Call,code != 0)"];
"1000218" [label="(Call,op - num_offset)"];
"1000217" [label="(Call,float_params(op - num_offset, n_numeric_comps, cc.paint.values))"];
"1000215" [label="(Call,code = float_params(op - num_offset, n_numeric_comps, cc.paint.values))"];
"1000228" [label="(Call,code < 0)"];
"1000231" [label="(Return,return code;)"];
"1000233" [label="(Call,memset(cc.paint.values + n_numeric_comps, 0,\n            sizeof(cc.paint.values) - sizeof(*cc.paint.values)*n_numeric_comps))"];
"1000234" [label="(Call,cc.paint.values + n_numeric_comps)"];
"1000249" [label="(Call,sizeof(*cc.paint.values)*n_numeric_comps)"];
"1000242" [label="(Call,sizeof(cc.paint.values) - sizeof(*cc.paint.values)*n_numeric_comps)"];
"1000285" [label="(Call,space->validatecomponents(i_ctx_p,\n                                         &istate->colorspace[0].array,\n                                         cc.paint.values, n_numeric_comps))"];
"1000283" [label="(Call,code = space->validatecomponents(i_ctx_p,\n                                         &istate->colorspace[0].array,\n                                         cc.paint.values, n_numeric_comps))"];
"1000302" [label="(Call,code < 0)"];
"1000305" [label="(Return,return code;)"];
"1000318" [label="(Call,n_comps > n_numeric_comps)"];
"1000332" [label="(Call,validate_spaces(i_ctx_p, &istate->colorspace[0].array, &depth))"];
"1000330" [label="(Call,code = validate_spaces(i_ctx_p, &istate->colorspace[0].array, &depth))"];
"1000345" [label="(Call,code < 0)"];
"1000348" [label="(Return,return code;)"];
"1000381" [label="(Call,*ep = istate->colorspace[0].array)"];
"1000227" [label="(ControlStructure,if (code < 0))"];
"1000133" [label="(Call,num_offset = 0)"];
"1000283" [label="(Call,code = space->validatecomponents(i_ctx_p,\n                                         &istate->colorspace[0].array,\n                                         cc.paint.values, n_numeric_comps))"];
"1000241" [label="(Literal,0)"];
"1000118" [label="(Block,)"];
"1000166" [label="(Identifier,op)"];
"1000257" [label="(Identifier,n_numeric_comps)"];
"1000250" [label="(Call,sizeof(*cc.paint.values))"];
"1000201" [label="(Call,n_numeric_comps = 0)"];
"1000302" [label="(Call,code < 0)"];
"1000233" [label="(Call,memset(cc.paint.values + n_numeric_comps, 0,\n            sizeof(cc.paint.values) - sizeof(*cc.paint.values)*n_numeric_comps))"];
"1000301" [label="(ControlStructure,if (code < 0))"];
"1000332" [label="(Call,validate_spaces(i_ctx_p, &istate->colorspace[0].array, &depth))"];
"1000260" [label="(Call,get_space_object(i_ctx_p, &istate->colorspace[0].array, &space))"];
"1000325" [label="(Identifier,istate)"];
"1000172" [label="(Identifier,code)"];
"1000222" [label="(Call,cc.paint.values)"];
"1000165" [label="(Call,dict_find_string(op, \"Implementation\", &pImpl))"];
"1000173" [label="(Literal,0)"];
"1000330" [label="(Call,code = validate_spaces(i_ctx_p, &istate->colorspace[0].array, &depth))"];
"1000168" [label="(Call,&pImpl)"];
"1000286" [label="(Identifier,i_ctx_p)"];
"1000152" [label="(Call,n_comps = -n_comps)"];
"1000212" [label="(Call,n_numeric_comps = n_comps)"];
"1000333" [label="(Identifier,i_ctx_p)"];
"1000381" [label="(Call,*ep = istate->colorspace[0].array)"];
"1000230" [label="(Literal,0)"];
"1000159" [label="(Identifier,t_dictionary)"];
"1000120" [label="(Call,op = osp)"];
"1000217" [label="(Call,float_params(op - num_offset, n_numeric_comps, cc.paint.values))"];
"1000157" [label="(Call,r_has_type(op, t_dictionary))"];
"1000392" [label="(Identifier,setcolor_cont)"];
"1000229" [label="(Identifier,code)"];
"1000345" [label="(Call,code < 0)"];
"1000259" [label="(Identifier,code)"];
"1000117" [label="(MethodParameterIn,i_ctx_t * i_ctx_p)"];
"1000189" [label="(Call,n_numeric_comps = ( pattern_instance_uses_base_space(cc.pattern)\n                      ? n_comps - 1\n                      : 0 ))"];
"1000382" [label="(Call,*ep)"];
"1000384" [label="(Call,istate->colorspace[0].array)"];
"1000235" [label="(Call,cc.paint.values)"];
"1000306" [label="(Identifier,code)"];
"1000284" [label="(Identifier,code)"];
"1000242" [label="(Call,sizeof(cc.paint.values) - sizeof(*cc.paint.values)*n_numeric_comps)"];
"1000282" [label="(Block,)"];
"1000228" [label="(Call,code < 0)"];
"1000300" [label="(Identifier,n_numeric_comps)"];
"1000287" [label="(Call,&istate->colorspace[0].array)"];
"1000303" [label="(Identifier,code)"];
"1000232" [label="(Identifier,code)"];
"1000334" [label="(Call,&istate->colorspace[0].array)"];
"1000305" [label="(Return,return code;)"];
"1000216" [label="(Identifier,code)"];
"1000285" [label="(Call,space->validatecomponents(i_ctx_p,\n                                         &istate->colorspace[0].array,\n                                         cc.paint.values, n_numeric_comps))"];
"1000342" [label="(Call,&depth)"];
"1000240" [label="(Identifier,n_numeric_comps)"];
"1000344" [label="(ControlStructure,if (code < 0))"];
"1000234" [label="(Call,cc.paint.values + n_numeric_comps)"];
"1000126" [label="(Identifier,pcs)"];
"1000318" [label="(Call,n_comps > n_numeric_comps)"];
"1000176" [label="(Identifier,code)"];
"1000170" [label="(ControlStructure,if (code != 0))"];
"1000146" [label="(Call,n_comps = cs_num_components(pcs))"];
"1000121" [label="(Identifier,op)"];
"1000351" [label="(Literal,5)"];
"1000158" [label="(Identifier,op)"];
"1000196" [label="(Call,n_comps - 1)"];
"1000346" [label="(Identifier,code)"];
"1000349" [label="(Identifier,code)"];
"1000163" [label="(Call,code = dict_find_string(op, \"Implementation\", &pImpl))"];
"1000304" [label="(Literal,0)"];
"1000122" [label="(Identifier,osp)"];
"1000320" [label="(Identifier,n_numeric_comps)"];
"1000347" [label="(Literal,0)"];
"1000156" [label="(ControlStructure,if (r_has_type(op, t_dictionary)))"];
"1000348" [label="(Return,return code;)"];
"1000220" [label="(Identifier,num_offset)"];
"1000218" [label="(Call,op - num_offset)"];
"1000295" [label="(Call,cc.paint.values)"];
"1000164" [label="(Identifier,code)"];
"1000219" [label="(Identifier,op)"];
"1000171" [label="(Call,code != 0)"];
"1000395" [label="(MethodReturn,RET)"];
"1000205" [label="(Call,n_numeric_comps = 0)"];
"1000249" [label="(Call,sizeof(*cc.paint.values)*n_numeric_comps)"];
"1000221" [label="(Identifier,n_numeric_comps)"];
"1000231" [label="(Return,return code;)"];
"1000215" [label="(Call,code = float_params(op - num_offset, n_numeric_comps, cc.paint.values))"];
"1000237" [label="(Identifier,cc)"];
"1000206" [label="(Identifier,n_numeric_comps)"];
"1000319" [label="(Identifier,n_comps)"];
"1000331" [label="(Identifier,code)"];
"1000243" [label="(Call,sizeof(cc.paint.values))"];
"1000317" [label="(ControlStructure,if (n_comps > n_numeric_comps))"];
"1000208" [label="(Call,num_offset = 1)"];
"1000160" [label="(Block,)"];
"1000202" [label="(Identifier,n_numeric_comps)"];
"1000167" [label="(Literal,\"Implementation\")"];
"1000310" [label="(Identifier,code)"];
"1000165" -> "1000163"  [label="AST: "];
"1000165" -> "1000168"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000167" -> "1000165"  [label="AST: "];
"1000168" -> "1000165"  [label="AST: "];
"1000163" -> "1000165"  [label="CFG: "];
"1000165" -> "1000395"  [label="DDG: "];
"1000165" -> "1000395"  [label="DDG: "];
"1000165" -> "1000163"  [label="DDG: "];
"1000165" -> "1000163"  [label="DDG: "];
"1000165" -> "1000163"  [label="DDG: "];
"1000157" -> "1000165"  [label="DDG: "];
"1000165" -> "1000218"  [label="DDG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000164" -> "1000157"  [label="CFG: "];
"1000206" -> "1000157"  [label="CFG: "];
"1000157" -> "1000395"  [label="DDG: "];
"1000157" -> "1000395"  [label="DDG: "];
"1000120" -> "1000157"  [label="DDG: "];
"1000157" -> "1000218"  [label="DDG: "];
"1000120" -> "1000118"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000122" -> "1000120"  [label="AST: "];
"1000126" -> "1000120"  [label="CFG: "];
"1000120" -> "1000395"  [label="DDG: "];
"1000120" -> "1000218"  [label="DDG: "];
"1000163" -> "1000160"  [label="AST: "];
"1000164" -> "1000163"  [label="AST: "];
"1000172" -> "1000163"  [label="CFG: "];
"1000163" -> "1000395"  [label="DDG: "];
"1000163" -> "1000171"  [label="DDG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000171" -> "1000173"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="AST: "];
"1000176" -> "1000171"  [label="CFG: "];
"1000202" -> "1000171"  [label="CFG: "];
"1000171" -> "1000395"  [label="DDG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000218" -> "1000220"  [label="CFG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000220" -> "1000218"  [label="AST: "];
"1000221" -> "1000218"  [label="CFG: "];
"1000218" -> "1000395"  [label="DDG: "];
"1000218" -> "1000395"  [label="DDG: "];
"1000218" -> "1000217"  [label="DDG: "];
"1000218" -> "1000217"  [label="DDG: "];
"1000208" -> "1000218"  [label="DDG: "];
"1000133" -> "1000218"  [label="DDG: "];
"1000217" -> "1000215"  [label="AST: "];
"1000217" -> "1000222"  [label="CFG: "];
"1000221" -> "1000217"  [label="AST: "];
"1000222" -> "1000217"  [label="AST: "];
"1000215" -> "1000217"  [label="CFG: "];
"1000217" -> "1000395"  [label="DDG: "];
"1000217" -> "1000395"  [label="DDG: "];
"1000217" -> "1000395"  [label="DDG: "];
"1000217" -> "1000215"  [label="DDG: "];
"1000217" -> "1000215"  [label="DDG: "];
"1000217" -> "1000215"  [label="DDG: "];
"1000189" -> "1000217"  [label="DDG: "];
"1000205" -> "1000217"  [label="DDG: "];
"1000212" -> "1000217"  [label="DDG: "];
"1000201" -> "1000217"  [label="DDG: "];
"1000217" -> "1000233"  [label="DDG: "];
"1000217" -> "1000233"  [label="DDG: "];
"1000217" -> "1000234"  [label="DDG: "];
"1000217" -> "1000234"  [label="DDG: "];
"1000217" -> "1000249"  [label="DDG: "];
"1000215" -> "1000118"  [label="AST: "];
"1000216" -> "1000215"  [label="AST: "];
"1000229" -> "1000215"  [label="CFG: "];
"1000215" -> "1000395"  [label="DDG: "];
"1000215" -> "1000228"  [label="DDG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000228" -> "1000230"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000230" -> "1000228"  [label="AST: "];
"1000232" -> "1000228"  [label="CFG: "];
"1000237" -> "1000228"  [label="CFG: "];
"1000228" -> "1000395"  [label="DDG: "];
"1000228" -> "1000395"  [label="DDG: "];
"1000228" -> "1000231"  [label="DDG: "];
"1000231" -> "1000227"  [label="AST: "];
"1000231" -> "1000232"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000395" -> "1000231"  [label="CFG: "];
"1000231" -> "1000395"  [label="DDG: "];
"1000232" -> "1000231"  [label="DDG: "];
"1000233" -> "1000118"  [label="AST: "];
"1000233" -> "1000242"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000241" -> "1000233"  [label="AST: "];
"1000242" -> "1000233"  [label="AST: "];
"1000259" -> "1000233"  [label="CFG: "];
"1000233" -> "1000395"  [label="DDG: "];
"1000233" -> "1000395"  [label="DDG: "];
"1000233" -> "1000395"  [label="DDG: "];
"1000242" -> "1000233"  [label="DDG: "];
"1000234" -> "1000240"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000240" -> "1000234"  [label="AST: "];
"1000241" -> "1000234"  [label="CFG: "];
"1000249" -> "1000242"  [label="AST: "];
"1000249" -> "1000257"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000257" -> "1000249"  [label="AST: "];
"1000242" -> "1000249"  [label="CFG: "];
"1000249" -> "1000395"  [label="DDG: "];
"1000249" -> "1000242"  [label="DDG: "];
"1000249" -> "1000285"  [label="DDG: "];
"1000249" -> "1000318"  [label="DDG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000242" -> "1000395"  [label="DDG: "];
"1000285" -> "1000283"  [label="AST: "];
"1000285" -> "1000300"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000285"  [label="AST: "];
"1000295" -> "1000285"  [label="AST: "];
"1000300" -> "1000285"  [label="AST: "];
"1000283" -> "1000285"  [label="CFG: "];
"1000285" -> "1000395"  [label="DDG: "];
"1000285" -> "1000395"  [label="DDG: "];
"1000285" -> "1000395"  [label="DDG: "];
"1000285" -> "1000395"  [label="DDG: "];
"1000285" -> "1000283"  [label="DDG: "];
"1000285" -> "1000283"  [label="DDG: "];
"1000285" -> "1000283"  [label="DDG: "];
"1000285" -> "1000283"  [label="DDG: "];
"1000260" -> "1000285"  [label="DDG: "];
"1000260" -> "1000285"  [label="DDG: "];
"1000117" -> "1000285"  [label="DDG: "];
"1000285" -> "1000318"  [label="DDG: "];
"1000285" -> "1000332"  [label="DDG: "];
"1000285" -> "1000332"  [label="DDG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000284" -> "1000283"  [label="AST: "];
"1000303" -> "1000283"  [label="CFG: "];
"1000283" -> "1000395"  [label="DDG: "];
"1000283" -> "1000302"  [label="DDG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000302" -> "1000304"  [label="CFG: "];
"1000303" -> "1000302"  [label="AST: "];
"1000304" -> "1000302"  [label="AST: "];
"1000306" -> "1000302"  [label="CFG: "];
"1000310" -> "1000302"  [label="CFG: "];
"1000302" -> "1000395"  [label="DDG: "];
"1000302" -> "1000395"  [label="DDG: "];
"1000302" -> "1000305"  [label="DDG: "];
"1000305" -> "1000301"  [label="AST: "];
"1000305" -> "1000306"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000395" -> "1000305"  [label="CFG: "];
"1000305" -> "1000395"  [label="DDG: "];
"1000306" -> "1000305"  [label="DDG: "];
"1000318" -> "1000317"  [label="AST: "];
"1000318" -> "1000320"  [label="CFG: "];
"1000319" -> "1000318"  [label="AST: "];
"1000320" -> "1000318"  [label="AST: "];
"1000325" -> "1000318"  [label="CFG: "];
"1000331" -> "1000318"  [label="CFG: "];
"1000318" -> "1000395"  [label="DDG: "];
"1000318" -> "1000395"  [label="DDG: "];
"1000318" -> "1000395"  [label="DDG: "];
"1000152" -> "1000318"  [label="DDG: "];
"1000196" -> "1000318"  [label="DDG: "];
"1000146" -> "1000318"  [label="DDG: "];
"1000332" -> "1000330"  [label="AST: "];
"1000332" -> "1000342"  [label="CFG: "];
"1000333" -> "1000332"  [label="AST: "];
"1000334" -> "1000332"  [label="AST: "];
"1000342" -> "1000332"  [label="AST: "];
"1000330" -> "1000332"  [label="CFG: "];
"1000332" -> "1000395"  [label="DDG: "];
"1000332" -> "1000395"  [label="DDG: "];
"1000332" -> "1000395"  [label="DDG: "];
"1000332" -> "1000330"  [label="DDG: "];
"1000332" -> "1000330"  [label="DDG: "];
"1000332" -> "1000330"  [label="DDG: "];
"1000260" -> "1000332"  [label="DDG: "];
"1000260" -> "1000332"  [label="DDG: "];
"1000117" -> "1000332"  [label="DDG: "];
"1000332" -> "1000381"  [label="DDG: "];
"1000330" -> "1000118"  [label="AST: "];
"1000331" -> "1000330"  [label="AST: "];
"1000346" -> "1000330"  [label="CFG: "];
"1000330" -> "1000395"  [label="DDG: "];
"1000330" -> "1000345"  [label="DDG: "];
"1000345" -> "1000344"  [label="AST: "];
"1000345" -> "1000347"  [label="CFG: "];
"1000346" -> "1000345"  [label="AST: "];
"1000347" -> "1000345"  [label="AST: "];
"1000349" -> "1000345"  [label="CFG: "];
"1000351" -> "1000345"  [label="CFG: "];
"1000345" -> "1000395"  [label="DDG: "];
"1000345" -> "1000395"  [label="DDG: "];
"1000345" -> "1000348"  [label="DDG: "];
"1000348" -> "1000344"  [label="AST: "];
"1000348" -> "1000349"  [label="CFG: "];
"1000349" -> "1000348"  [label="AST: "];
"1000395" -> "1000348"  [label="CFG: "];
"1000348" -> "1000395"  [label="DDG: "];
"1000349" -> "1000348"  [label="DDG: "];
"1000381" -> "1000118"  [label="AST: "];
"1000381" -> "1000384"  [label="CFG: "];
"1000382" -> "1000381"  [label="AST: "];
"1000384" -> "1000381"  [label="AST: "];
"1000392" -> "1000381"  [label="CFG: "];
"1000381" -> "1000395"  [label="DDG: "];
"1000381" -> "1000395"  [label="DDG: "];
}
