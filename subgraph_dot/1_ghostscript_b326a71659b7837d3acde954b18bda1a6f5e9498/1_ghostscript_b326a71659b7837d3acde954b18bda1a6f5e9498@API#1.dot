digraph "1_ghostscript_b326a71659b7837d3acde954b18bda1a6f5e9498@API" {
"1000242" [label="(Call,sizeof(cc.paint.values) - sizeof(*cc.paint.values)*n_numeric_comps)"];
"1000249" [label="(Call,sizeof(*cc.paint.values)*n_numeric_comps)"];
"1000217" [label="(Call,float_params(op - num_offset, n_numeric_comps, cc.paint.values))"];
"1000218" [label="(Call,op - num_offset)"];
"1000165" [label="(Call,dict_find_string(op, \"Implementation\", &pImpl))"];
"1000157" [label="(Call,r_has_type(op, t_dictionary))"];
"1000120" [label="(Call,op = osp)"];
"1000208" [label="(Call,num_offset = 1)"];
"1000133" [label="(Call,num_offset = 0)"];
"1000189" [label="(Call,n_numeric_comps = ( pattern_instance_uses_base_space(cc.pattern)\n                      ? n_comps - 1\n                      : 0 ))"];
"1000196" [label="(Call,n_comps - 1)"];
"1000152" [label="(Call,n_comps = -n_comps)"];
"1000154" [label="(Call,-n_comps)"];
"1000146" [label="(Call,n_comps = cs_num_components(pcs))"];
"1000148" [label="(Call,cs_num_components(pcs))"];
"1000125" [label="(Call,*  pcs = gs_currentcolorspace(igs))"];
"1000127" [label="(Call,gs_currentcolorspace(igs))"];
"1000205" [label="(Call,n_numeric_comps = 0)"];
"1000212" [label="(Call,n_numeric_comps = n_comps)"];
"1000201" [label="(Call,n_numeric_comps = 0)"];
"1000233" [label="(Call,memset(cc.paint.values + n_numeric_comps, 0,\n            sizeof(cc.paint.values) - sizeof(*cc.paint.values)*n_numeric_comps))"];
"1000209" [label="(Identifier,num_offset)"];
"1000133" [label="(Call,num_offset = 0)"];
"1000204" [label="(ControlStructure,else)"];
"1000190" [label="(Identifier,n_numeric_comps)"];
"1000241" [label="(Literal,0)"];
"1000156" [label="(ControlStructure,if (r_has_type(op, t_dictionary)))"];
"1000128" [label="(Identifier,igs)"];
"1000285" [label="(Call,space->validatecomponents(i_ctx_p,\n                                         &istate->colorspace[0].array,\n                                         cc.paint.values, n_numeric_comps))"];
"1000220" [label="(Identifier,num_offset)"];
"1000168" [label="(Call,&pImpl)"];
"1000150" [label="(Literal,0)"];
"1000141" [label="(Identifier,cc)"];
"1000218" [label="(Call,op - num_offset)"];
"1000200" [label="(ControlStructure,else)"];
"1000134" [label="(Identifier,num_offset)"];
"1000118" [label="(Block,)"];
"1000210" [label="(Literal,1)"];
"1000203" [label="(Literal,0)"];
"1000152" [label="(Call,n_comps = -n_comps)"];
"1000166" [label="(Identifier,op)"];
"1000155" [label="(Identifier,n_comps)"];
"1000125" [label="(Call,*  pcs = gs_currentcolorspace(igs))"];
"1000212" [label="(Call,n_numeric_comps = n_comps)"];
"1000164" [label="(Identifier,code)"];
"1000174" [label="(Block,)"];
"1000257" [label="(Identifier,n_numeric_comps)"];
"1000159" [label="(Identifier,t_dictionary)"];
"1000191" [label="(Call,pattern_instance_uses_base_space(cc.pattern)\n                      ? n_comps - 1\n                      : 0)"];
"1000120" [label="(Call,op = osp)"];
"1000198" [label="(Literal,1)"];
"1000219" [label="(Identifier,op)"];
"1000250" [label="(Call,sizeof(*cc.paint.values))"];
"1000145" [label="(Call,(n_comps = cs_num_components(pcs)) < 0)"];
"1000217" [label="(Call,float_params(op - num_offset, n_numeric_comps, cc.paint.values))"];
"1000234" [label="(Call,cc.paint.values + n_numeric_comps)"];
"1000311" [label="(Call,gs_setcolor(igs, &cc))"];
"1000395" [label="(MethodReturn,RET)"];
"1000157" [label="(Call,r_has_type(op, t_dictionary))"];
"1000197" [label="(Identifier,n_comps)"];
"1000126" [label="(Identifier,pcs)"];
"1000127" [label="(Call,gs_currentcolorspace(igs))"];
"1000211" [label="(ControlStructure,else)"];
"1000205" [label="(Call,n_numeric_comps = 0)"];
"1000214" [label="(Identifier,n_comps)"];
"1000259" [label="(Identifier,code)"];
"1000201" [label="(Call,n_numeric_comps = 0)"];
"1000318" [label="(Call,n_comps > n_numeric_comps)"];
"1000249" [label="(Call,sizeof(*cc.paint.values)*n_numeric_comps)"];
"1000189" [label="(Call,n_numeric_comps = ( pattern_instance_uses_base_space(cc.pattern)\n                      ? n_comps - 1\n                      : 0 ))"];
"1000213" [label="(Identifier,n_numeric_comps)"];
"1000233" [label="(Call,memset(cc.paint.values + n_numeric_comps, 0,\n            sizeof(cc.paint.values) - sizeof(*cc.paint.values)*n_numeric_comps))"];
"1000135" [label="(Literal,0)"];
"1000146" [label="(Call,n_comps = cs_num_components(pcs))"];
"1000121" [label="(Identifier,op)"];
"1000221" [label="(Identifier,n_numeric_comps)"];
"1000242" [label="(Call,sizeof(cc.paint.values) - sizeof(*cc.paint.values)*n_numeric_comps)"];
"1000215" [label="(Call,code = float_params(op - num_offset, n_numeric_comps, cc.paint.values))"];
"1000158" [label="(Identifier,op)"];
"1000206" [label="(Identifier,n_numeric_comps)"];
"1000196" [label="(Call,n_comps - 1)"];
"1000148" [label="(Call,cs_num_components(pcs))"];
"1000163" [label="(Call,code = dict_find_string(op, \"Implementation\", &pImpl))"];
"1000153" [label="(Identifier,n_comps)"];
"1000149" [label="(Identifier,pcs)"];
"1000243" [label="(Call,sizeof(cc.paint.values))"];
"1000154" [label="(Call,-n_comps)"];
"1000122" [label="(Identifier,osp)"];
"1000208" [label="(Call,num_offset = 1)"];
"1000216" [label="(Identifier,code)"];
"1000147" [label="(Identifier,n_comps)"];
"1000202" [label="(Identifier,n_numeric_comps)"];
"1000222" [label="(Call,cc.paint.values)"];
"1000167" [label="(Literal,\"Implementation\")"];
"1000151" [label="(Block,)"];
"1000207" [label="(Literal,0)"];
"1000165" [label="(Call,dict_find_string(op, \"Implementation\", &pImpl))"];
"1000242" -> "1000233"  [label="AST: "];
"1000242" -> "1000249"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000249" -> "1000242"  [label="AST: "];
"1000233" -> "1000242"  [label="CFG: "];
"1000242" -> "1000395"  [label="DDG: "];
"1000242" -> "1000233"  [label="DDG: "];
"1000249" -> "1000242"  [label="DDG: "];
"1000249" -> "1000257"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000257" -> "1000249"  [label="AST: "];
"1000249" -> "1000395"  [label="DDG: "];
"1000217" -> "1000249"  [label="DDG: "];
"1000249" -> "1000285"  [label="DDG: "];
"1000249" -> "1000318"  [label="DDG: "];
"1000217" -> "1000215"  [label="AST: "];
"1000217" -> "1000222"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000221" -> "1000217"  [label="AST: "];
"1000222" -> "1000217"  [label="AST: "];
"1000215" -> "1000217"  [label="CFG: "];
"1000217" -> "1000395"  [label="DDG: "];
"1000217" -> "1000395"  [label="DDG: "];
"1000217" -> "1000395"  [label="DDG: "];
"1000217" -> "1000215"  [label="DDG: "];
"1000217" -> "1000215"  [label="DDG: "];
"1000217" -> "1000215"  [label="DDG: "];
"1000218" -> "1000217"  [label="DDG: "];
"1000218" -> "1000217"  [label="DDG: "];
"1000189" -> "1000217"  [label="DDG: "];
"1000205" -> "1000217"  [label="DDG: "];
"1000212" -> "1000217"  [label="DDG: "];
"1000201" -> "1000217"  [label="DDG: "];
"1000217" -> "1000233"  [label="DDG: "];
"1000217" -> "1000233"  [label="DDG: "];
"1000217" -> "1000234"  [label="DDG: "];
"1000217" -> "1000234"  [label="DDG: "];
"1000218" -> "1000220"  [label="CFG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000220" -> "1000218"  [label="AST: "];
"1000221" -> "1000218"  [label="CFG: "];
"1000218" -> "1000395"  [label="DDG: "];
"1000218" -> "1000395"  [label="DDG: "];
"1000165" -> "1000218"  [label="DDG: "];
"1000157" -> "1000218"  [label="DDG: "];
"1000120" -> "1000218"  [label="DDG: "];
"1000208" -> "1000218"  [label="DDG: "];
"1000133" -> "1000218"  [label="DDG: "];
"1000165" -> "1000163"  [label="AST: "];
"1000165" -> "1000168"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000167" -> "1000165"  [label="AST: "];
"1000168" -> "1000165"  [label="AST: "];
"1000163" -> "1000165"  [label="CFG: "];
"1000165" -> "1000395"  [label="DDG: "];
"1000165" -> "1000395"  [label="DDG: "];
"1000165" -> "1000163"  [label="DDG: "];
"1000165" -> "1000163"  [label="DDG: "];
"1000165" -> "1000163"  [label="DDG: "];
"1000157" -> "1000165"  [label="DDG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000164" -> "1000157"  [label="CFG: "];
"1000206" -> "1000157"  [label="CFG: "];
"1000157" -> "1000395"  [label="DDG: "];
"1000157" -> "1000395"  [label="DDG: "];
"1000120" -> "1000157"  [label="DDG: "];
"1000120" -> "1000118"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000122" -> "1000120"  [label="AST: "];
"1000126" -> "1000120"  [label="CFG: "];
"1000120" -> "1000395"  [label="DDG: "];
"1000208" -> "1000151"  [label="AST: "];
"1000208" -> "1000210"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000210" -> "1000208"  [label="AST: "];
"1000216" -> "1000208"  [label="CFG: "];
"1000133" -> "1000118"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000141" -> "1000133"  [label="CFG: "];
"1000133" -> "1000395"  [label="DDG: "];
"1000189" -> "1000174"  [label="AST: "];
"1000189" -> "1000191"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000191" -> "1000189"  [label="AST: "];
"1000209" -> "1000189"  [label="CFG: "];
"1000189" -> "1000395"  [label="DDG: "];
"1000196" -> "1000189"  [label="DDG: "];
"1000196" -> "1000189"  [label="DDG: "];
"1000196" -> "1000191"  [label="AST: "];
"1000196" -> "1000198"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000198" -> "1000196"  [label="AST: "];
"1000191" -> "1000196"  [label="CFG: "];
"1000196" -> "1000395"  [label="DDG: "];
"1000196" -> "1000191"  [label="DDG: "];
"1000196" -> "1000191"  [label="DDG: "];
"1000152" -> "1000196"  [label="DDG: "];
"1000196" -> "1000318"  [label="DDG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000154"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000158" -> "1000152"  [label="CFG: "];
"1000152" -> "1000395"  [label="DDG: "];
"1000152" -> "1000395"  [label="DDG: "];
"1000154" -> "1000152"  [label="DDG: "];
"1000152" -> "1000318"  [label="DDG: "];
"1000154" -> "1000155"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000146" -> "1000154"  [label="DDG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000150" -> "1000146"  [label="CFG: "];
"1000146" -> "1000395"  [label="DDG: "];
"1000146" -> "1000145"  [label="DDG: "];
"1000148" -> "1000146"  [label="DDG: "];
"1000146" -> "1000212"  [label="DDG: "];
"1000146" -> "1000318"  [label="DDG: "];
"1000148" -> "1000149"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000148" -> "1000395"  [label="DDG: "];
"1000148" -> "1000145"  [label="DDG: "];
"1000125" -> "1000148"  [label="DDG: "];
"1000125" -> "1000118"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000134" -> "1000125"  [label="CFG: "];
"1000125" -> "1000395"  [label="DDG: "];
"1000127" -> "1000125"  [label="DDG: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000127" -> "1000395"  [label="DDG: "];
"1000127" -> "1000311"  [label="DDG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000205" -> "1000207"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000207" -> "1000205"  [label="AST: "];
"1000209" -> "1000205"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000212" -> "1000214"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000214" -> "1000212"  [label="AST: "];
"1000216" -> "1000212"  [label="CFG: "];
"1000212" -> "1000395"  [label="DDG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000201" -> "1000203"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000203" -> "1000201"  [label="AST: "];
"1000209" -> "1000201"  [label="CFG: "];
"1000233" -> "1000118"  [label="AST: "];
"1000234" -> "1000233"  [label="AST: "];
"1000241" -> "1000233"  [label="AST: "];
"1000259" -> "1000233"  [label="CFG: "];
"1000233" -> "1000395"  [label="DDG: "];
"1000233" -> "1000395"  [label="DDG: "];
"1000233" -> "1000395"  [label="DDG: "];
}
