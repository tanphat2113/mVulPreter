digraph "0_src_142cfc82b932bc211218fbd7bdda8c7ce83f19df_1@API" {
"1000195" [label="(Call,snprintf(content_range, sizeof(content_range),\n \t\t    \"bytes */%lld\", st->st_size))"];
"1000182" [label="(Call,parse_ranges(clt, range_str, st->st_size))"];
"1000112" [label="(MethodParameterIn,struct client *clt)"];
"1000115" [label="(MethodParameterIn,char *range_str)"];
"1000193" [label="(Call,(void)snprintf(content_range, sizeof(content_range),\n \t\t    \"bytes */%lld\", st->st_size))"];
"1000203" [label="(Call,errstr = content_range)"];
"1000540" [label="(Call,errstr == NULL)"];
"1000547" [label="(Call,server_abort_http(clt, code, errstr))"];
"1000197" [label="(Call,sizeof(content_range))"];
"1000182" [label="(Call,parse_ranges(clt, range_str, st->st_size))"];
"1000196" [label="(Identifier,content_range)"];
"1000243" [label="(Call,snprintf(content_range, sizeof(content_range),\n \t\t    \"bytes %lld-%lld/%lld\", range->start, range->end,\n \t\t    st->st_size))"];
"1000258" [label="(Call,kv_add(&resp->http_headers, \"Content-Range\",\n \t\t    content_range) == NULL)"];
"1000540" [label="(Call,errstr == NULL)"];
"1000180" [label="(Call,nranges = parse_ranges(clt, range_str, st->st_size))"];
"1000205" [label="(Identifier,content_range)"];
"1000206" [label="(ControlStructure,goto abort;)"];
"1000553" [label="(Literal,1)"];
"1000204" [label="(Identifier,errstr)"];
"1000189" [label="(Block,)"];
"1000466" [label="(Call,clt->clt_srvbev == NULL)"];
"1000184" [label="(Identifier,range_str)"];
"1000190" [label="(Call,code = 416)"];
"1000457" [label="(Call,bufferevent_new(clt->clt_fd, server_read_httprange,\n\t    server_write, server_file_error, clt))"];
"1000542" [label="(Identifier,NULL)"];
"1000203" [label="(Call,errstr = content_range)"];
"1000548" [label="(Identifier,clt)"];
"1000200" [label="(Call,st->st_size)"];
"1000320" [label="(Call,snprintf(NULL, 0,\n\t\t\t    \"\r\n--%llu\r\n\"\n\t\t\t    \"Content-Type: %s/%s\r\n\"\n \t\t\t    \"Content-Range: bytes %lld-%lld/%lld\r\n\r\n\",\n\t\t\t    clt->clt_boundary,\n\t\t\t    media->media_type, media->media_subtype,\n\t\t\t    range->start, range->end, st->st_size))"];
"1000409" [label="(Call,server_response_http(clt, 206, media, content_length,\n \t    MINIMUM(time(NULL), st->st_mtim.tv_sec)))"];
"1000183" [label="(Identifier,clt)"];
"1000554" [label="(MethodReturn,RET)"];
"1000539" [label="(ControlStructure,if (errstr == NULL))"];
"1000472" [label="(Call,errstr = \"failed to allocate file buffer event\")"];
"1000544" [label="(Identifier,errstr)"];
"1000541" [label="(Identifier,errstr)"];
"1000112" [label="(MethodParameterIn,struct client *clt)"];
"1000549" [label="(Identifier,code)"];
"1000163" [label="(Call,*errstr = NULL)"];
"1000116" [label="(Block,)"];
"1000195" [label="(Call,snprintf(content_range, sizeof(content_range),\n \t\t    \"bytes */%lld\", st->st_size))"];
"1000115" [label="(MethodParameterIn,char *range_str)"];
"1000179" [label="(Call,(nranges = parse_ranges(clt, range_str, st->st_size)) < 1)"];
"1000547" [label="(Call,server_abort_http(clt, code, errstr))"];
"1000510" [label="(Call,server_reset_http(clt))"];
"1000550" [label="(Identifier,errstr)"];
"1000173" [label="(Call,server_file_request(env, clt, path, st))"];
"1000361" [label="(Call,snprintf(NULL, 0, \"\r\n--%llu--\r\n\",\n\t\t    clt->clt_boundary))"];
"1000150" [label="(Call,code = 500)"];
"1000543" [label="(Call,errstr = strerror(errno))"];
"1000185" [label="(Call,st->st_size)"];
"1000199" [label="(Literal,\"bytes */%lld\")"];
"1000193" [label="(Call,(void)snprintf(content_range, sizeof(content_range),\n \t\t    \"bytes */%lld\", st->st_size))"];
"1000195" -> "1000193"  [label="AST: "];
"1000195" -> "1000200"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000197" -> "1000195"  [label="AST: "];
"1000199" -> "1000195"  [label="AST: "];
"1000200" -> "1000195"  [label="AST: "];
"1000193" -> "1000195"  [label="CFG: "];
"1000195" -> "1000554"  [label="DDG: "];
"1000195" -> "1000193"  [label="DDG: "];
"1000195" -> "1000193"  [label="DDG: "];
"1000195" -> "1000193"  [label="DDG: "];
"1000182" -> "1000195"  [label="DDG: "];
"1000195" -> "1000203"  [label="DDG: "];
"1000182" -> "1000180"  [label="AST: "];
"1000182" -> "1000185"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000184" -> "1000182"  [label="AST: "];
"1000185" -> "1000182"  [label="AST: "];
"1000180" -> "1000182"  [label="CFG: "];
"1000182" -> "1000554"  [label="DDG: "];
"1000182" -> "1000554"  [label="DDG: "];
"1000182" -> "1000179"  [label="DDG: "];
"1000182" -> "1000179"  [label="DDG: "];
"1000182" -> "1000179"  [label="DDG: "];
"1000182" -> "1000180"  [label="DDG: "];
"1000182" -> "1000180"  [label="DDG: "];
"1000182" -> "1000180"  [label="DDG: "];
"1000112" -> "1000182"  [label="DDG: "];
"1000115" -> "1000182"  [label="DDG: "];
"1000182" -> "1000243"  [label="DDG: "];
"1000182" -> "1000320"  [label="DDG: "];
"1000182" -> "1000409"  [label="DDG: "];
"1000182" -> "1000547"  [label="DDG: "];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000554"  [label="DDG: "];
"1000112" -> "1000173"  [label="DDG: "];
"1000112" -> "1000409"  [label="DDG: "];
"1000112" -> "1000457"  [label="DDG: "];
"1000112" -> "1000510"  [label="DDG: "];
"1000112" -> "1000547"  [label="DDG: "];
"1000115" -> "1000110"  [label="AST: "];
"1000115" -> "1000554"  [label="DDG: "];
"1000193" -> "1000189"  [label="AST: "];
"1000194" -> "1000193"  [label="AST: "];
"1000204" -> "1000193"  [label="CFG: "];
"1000193" -> "1000554"  [label="DDG: "];
"1000193" -> "1000554"  [label="DDG: "];
"1000203" -> "1000189"  [label="AST: "];
"1000203" -> "1000205"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000203"  [label="AST: "];
"1000206" -> "1000203"  [label="CFG: "];
"1000203" -> "1000554"  [label="DDG: "];
"1000203" -> "1000540"  [label="DDG: "];
"1000540" -> "1000539"  [label="AST: "];
"1000540" -> "1000542"  [label="CFG: "];
"1000541" -> "1000540"  [label="AST: "];
"1000542" -> "1000540"  [label="AST: "];
"1000544" -> "1000540"  [label="CFG: "];
"1000548" -> "1000540"  [label="CFG: "];
"1000540" -> "1000554"  [label="DDG: "];
"1000540" -> "1000554"  [label="DDG: "];
"1000163" -> "1000540"  [label="DDG: "];
"1000472" -> "1000540"  [label="DDG: "];
"1000361" -> "1000540"  [label="DDG: "];
"1000320" -> "1000540"  [label="DDG: "];
"1000258" -> "1000540"  [label="DDG: "];
"1000466" -> "1000540"  [label="DDG: "];
"1000540" -> "1000547"  [label="DDG: "];
"1000547" -> "1000116"  [label="AST: "];
"1000547" -> "1000550"  [label="CFG: "];
"1000548" -> "1000547"  [label="AST: "];
"1000549" -> "1000547"  [label="AST: "];
"1000550" -> "1000547"  [label="AST: "];
"1000553" -> "1000547"  [label="CFG: "];
"1000547" -> "1000554"  [label="DDG: "];
"1000547" -> "1000554"  [label="DDG: "];
"1000547" -> "1000554"  [label="DDG: "];
"1000547" -> "1000554"  [label="DDG: "];
"1000457" -> "1000547"  [label="DDG: "];
"1000150" -> "1000547"  [label="DDG: "];
"1000190" -> "1000547"  [label="DDG: "];
"1000543" -> "1000547"  [label="DDG: "];
}
