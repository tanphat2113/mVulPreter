digraph "0_linux_4ab25786c87eb20857bbb715c3ae34ec8fd6a214_1@array" {
"1000135" [label="(Call,rdesc[84] == 0x8c)"];
"1000104" [label="(MethodParameterIn,__u8 *rdesc)"];
"1000134" [label="(Call,rdesc[84] == 0x8c && rdesc[85] == 0x02)"];
"1000128" [label="(Call,rdesc[83] == 0x26 &&\n \t\t\trdesc[84] == 0x8c && rdesc[85] == 0x02)"];
"1000123" [label="(Call,*rsize >= 90 && rdesc[83] == 0x26 &&\n \t\t\trdesc[84] == 0x8c && rdesc[85] == 0x02)"];
"1000117" [label="(Call,(drv_data->quirks & LG_RDESC) && *rsize >= 90 && rdesc[83] == 0x26 &&\n \t\t\trdesc[84] == 0x8c && rdesc[85] == 0x02)"];
"1000409" [label="(Return,return rdesc;)"];
"1000153" [label="(Call,rdesc[89] = 0x4d)"];
"1000186" [label="(Call,rdesc[33] == 0x06)"];
"1000379" [label="(Call,rdesc[48] == 0x09)"];
"1000206" [label="(Call,rdesc[33] = rdesc[50] = 0x02)"];
"1000210" [label="(Call,rdesc[50] = 0x02)"];
"1000117" [label="(Call,(drv_data->quirks & LG_RDESC) && *rsize >= 90 && rdesc[83] == 0x26 &&\n \t\t\trdesc[84] == 0x8c && rdesc[85] == 0x02)"];
"1000118" [label="(Call,drv_data->quirks & LG_RDESC)"];
"1000307" [label="(Call,rdesc = momo2_rdesc_fixed)"];
"1000116" [label="(ControlStructure,if ((drv_data->quirks & LG_RDESC) && *rsize >= 90 && rdesc[83] == 0x26 &&\n \t\t\trdesc[84] == 0x8c && rdesc[85] == 0x02))"];
"1000129" [label="(Call,rdesc[83] == 0x26)"];
"1000140" [label="(Call,rdesc[85] == 0x02)"];
"1000139" [label="(Literal,0x8c)"];
"1000288" [label="(Call,rdesc = momo_rdesc_fixed)"];
"1000374" [label="(Call,rdesc[47] == 0x05)"];
"1000393" [label="(Call,rdesc[42] = 0x09)"];
"1000124" [label="(Call,*rsize >= 90)"];
"1000345" [label="(Call,rdesc = dfp_rdesc_fixed)"];
"1000398" [label="(Call,rdesc[47] = 0x95)"];
"1000104" [label="(MethodParameterIn,__u8 *rdesc)"];
"1000410" [label="(Identifier,rdesc)"];
"1000197" [label="(Call,rdesc[50] == 0x06)"];
"1000403" [label="(Call,rdesc[48] = 0x0B)"];
"1000149" [label="(Call,rdesc[84] = rdesc[89] = 0x4d)"];
"1000411" [label="(MethodReturn,static __u8 *)"];
"1000128" [label="(Call,rdesc[83] == 0x26 &&\n \t\t\trdesc[84] == 0x8c && rdesc[85] == 0x02)"];
"1000142" [label="(Identifier,rdesc)"];
"1000135" [label="(Call,rdesc[84] == 0x8c)"];
"1000136" [label="(Call,rdesc[84])"];
"1000409" [label="(Return,return rdesc;)"];
"1000123" [label="(Call,*rsize >= 90 && rdesc[83] == 0x26 &&\n \t\t\trdesc[84] == 0x8c && rdesc[85] == 0x02)"];
"1000326" [label="(Call,rdesc = fv_rdesc_fixed)"];
"1000134" [label="(Call,rdesc[84] == 0x8c && rdesc[85] == 0x02)"];
"1000368" [label="(Call,rdesc[42] == 0x0B)"];
"1000171" [label="(Identifier,drv_data)"];
"1000106" [label="(Block,)"];
"1000388" [label="(Call,rdesc[41] = 0x05)"];
"1000180" [label="(Call,rdesc[32] == 0x81)"];
"1000158" [label="(Call,rdesc[85] = rdesc[90] = 0x10)"];
"1000162" [label="(Call,rdesc[90] = 0x10)"];
"1000269" [label="(Call,rdesc = df_rdesc_fixed)"];
"1000192" [label="(Call,rdesc[49] == 0x81)"];
"1000147" [label="(Identifier,hdev)"];
"1000362" [label="(Call,rdesc[41] == 0x95)"];
"1000135" -> "1000134"  [label="AST: "];
"1000135" -> "1000139"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000139" -> "1000135"  [label="AST: "];
"1000142" -> "1000135"  [label="CFG: "];
"1000134" -> "1000135"  [label="CFG: "];
"1000135" -> "1000411"  [label="DDG: rdesc[84]"];
"1000135" -> "1000134"  [label="DDG: rdesc[84]"];
"1000135" -> "1000134"  [label="DDG: 0x8c"];
"1000104" -> "1000135"  [label="DDG: rdesc"];
"1000135" -> "1000409"  [label="DDG: rdesc[84]"];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1000411"  [label="DDG: rdesc"];
"1000104" -> "1000129"  [label="DDG: rdesc"];
"1000104" -> "1000140"  [label="DDG: rdesc"];
"1000104" -> "1000149"  [label="DDG: rdesc"];
"1000104" -> "1000153"  [label="DDG: rdesc"];
"1000104" -> "1000158"  [label="DDG: rdesc"];
"1000104" -> "1000162"  [label="DDG: rdesc"];
"1000104" -> "1000180"  [label="DDG: rdesc"];
"1000104" -> "1000186"  [label="DDG: rdesc"];
"1000104" -> "1000192"  [label="DDG: rdesc"];
"1000104" -> "1000197"  [label="DDG: rdesc"];
"1000104" -> "1000206"  [label="DDG: rdesc"];
"1000104" -> "1000210"  [label="DDG: rdesc"];
"1000104" -> "1000269"  [label="DDG: rdesc"];
"1000104" -> "1000288"  [label="DDG: rdesc"];
"1000104" -> "1000307"  [label="DDG: rdesc"];
"1000104" -> "1000326"  [label="DDG: rdesc"];
"1000104" -> "1000345"  [label="DDG: rdesc"];
"1000104" -> "1000362"  [label="DDG: rdesc"];
"1000104" -> "1000368"  [label="DDG: rdesc"];
"1000104" -> "1000374"  [label="DDG: rdesc"];
"1000104" -> "1000379"  [label="DDG: rdesc"];
"1000104" -> "1000388"  [label="DDG: rdesc"];
"1000104" -> "1000393"  [label="DDG: rdesc"];
"1000104" -> "1000398"  [label="DDG: rdesc"];
"1000104" -> "1000403"  [label="DDG: rdesc"];
"1000104" -> "1000409"  [label="DDG: rdesc"];
"1000134" -> "1000128"  [label="AST: "];
"1000134" -> "1000140"  [label="CFG: "];
"1000140" -> "1000134"  [label="AST: "];
"1000128" -> "1000134"  [label="CFG: "];
"1000134" -> "1000411"  [label="DDG: rdesc[85] == 0x02"];
"1000134" -> "1000411"  [label="DDG: rdesc[84] == 0x8c"];
"1000134" -> "1000128"  [label="DDG: rdesc[84] == 0x8c"];
"1000134" -> "1000128"  [label="DDG: rdesc[85] == 0x02"];
"1000140" -> "1000134"  [label="DDG: rdesc[85]"];
"1000140" -> "1000134"  [label="DDG: 0x02"];
"1000128" -> "1000123"  [label="AST: "];
"1000128" -> "1000129"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000123" -> "1000128"  [label="CFG: "];
"1000128" -> "1000411"  [label="DDG: rdesc[83] == 0x26"];
"1000128" -> "1000411"  [label="DDG: rdesc[84] == 0x8c && rdesc[85] == 0x02"];
"1000128" -> "1000123"  [label="DDG: rdesc[83] == 0x26"];
"1000128" -> "1000123"  [label="DDG: rdesc[84] == 0x8c && rdesc[85] == 0x02"];
"1000129" -> "1000128"  [label="DDG: rdesc[83]"];
"1000129" -> "1000128"  [label="DDG: 0x26"];
"1000123" -> "1000117"  [label="AST: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000117" -> "1000123"  [label="CFG: "];
"1000123" -> "1000411"  [label="DDG: rdesc[83] == 0x26 &&\n \t\t\trdesc[84] == 0x8c && rdesc[85] == 0x02"];
"1000123" -> "1000411"  [label="DDG: *rsize >= 90"];
"1000123" -> "1000117"  [label="DDG: *rsize >= 90"];
"1000123" -> "1000117"  [label="DDG: rdesc[83] == 0x26 &&\n \t\t\trdesc[84] == 0x8c && rdesc[85] == 0x02"];
"1000124" -> "1000123"  [label="DDG: *rsize"];
"1000124" -> "1000123"  [label="DDG: 90"];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000147" -> "1000117"  [label="CFG: "];
"1000171" -> "1000117"  [label="CFG: "];
"1000117" -> "1000411"  [label="DDG: (drv_data->quirks & LG_RDESC) && *rsize >= 90 && rdesc[83] == 0x26 &&\n \t\t\trdesc[84] == 0x8c && rdesc[85] == 0x02"];
"1000117" -> "1000411"  [label="DDG: *rsize >= 90 && rdesc[83] == 0x26 &&\n \t\t\trdesc[84] == 0x8c && rdesc[85] == 0x02"];
"1000117" -> "1000411"  [label="DDG: drv_data->quirks & LG_RDESC"];
"1000118" -> "1000117"  [label="DDG: drv_data->quirks"];
"1000118" -> "1000117"  [label="DDG: LG_RDESC"];
"1000409" -> "1000106"  [label="AST: "];
"1000409" -> "1000410"  [label="CFG: "];
"1000410" -> "1000409"  [label="AST: "];
"1000411" -> "1000409"  [label="CFG: "];
"1000409" -> "1000411"  [label="DDG: <RET>"];
"1000410" -> "1000409"  [label="DDG: rdesc"];
"1000129" -> "1000409"  [label="DDG: rdesc[83]"];
"1000186" -> "1000409"  [label="DDG: rdesc[33]"];
"1000388" -> "1000409"  [label="DDG: rdesc[41]"];
"1000403" -> "1000409"  [label="DDG: rdesc[48]"];
"1000140" -> "1000409"  [label="DDG: rdesc[85]"];
"1000180" -> "1000409"  [label="DDG: rdesc[32]"];
"1000206" -> "1000409"  [label="DDG: rdesc[33]"];
"1000153" -> "1000409"  [label="DDG: rdesc[89]"];
"1000398" -> "1000409"  [label="DDG: rdesc[47]"];
"1000158" -> "1000409"  [label="DDG: rdesc[85]"];
"1000368" -> "1000409"  [label="DDG: rdesc[42]"];
"1000393" -> "1000409"  [label="DDG: rdesc[42]"];
"1000374" -> "1000409"  [label="DDG: rdesc[47]"];
"1000379" -> "1000409"  [label="DDG: rdesc[48]"];
"1000288" -> "1000409"  [label="DDG: rdesc"];
"1000192" -> "1000409"  [label="DDG: rdesc[49]"];
"1000210" -> "1000409"  [label="DDG: rdesc[50]"];
"1000269" -> "1000409"  [label="DDG: rdesc"];
"1000149" -> "1000409"  [label="DDG: rdesc[84]"];
"1000345" -> "1000409"  [label="DDG: rdesc"];
"1000326" -> "1000409"  [label="DDG: rdesc"];
"1000162" -> "1000409"  [label="DDG: rdesc[90]"];
"1000307" -> "1000409"  [label="DDG: rdesc"];
"1000362" -> "1000409"  [label="DDG: rdesc[41]"];
"1000197" -> "1000409"  [label="DDG: rdesc[50]"];
}
