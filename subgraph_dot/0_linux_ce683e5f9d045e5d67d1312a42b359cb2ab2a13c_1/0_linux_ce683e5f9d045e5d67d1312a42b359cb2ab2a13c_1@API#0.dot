digraph "0_linux_ce683e5f9d045e5d67d1312a42b359cb2ab2a13c_1@API" {
"1000132" [label="(Call,e->next_offset < sizeof(struct compat_ipt_entry) +\n\t\t\t     sizeof(struct compat_xt_entry_target))"];
"1000142" [label="(Call,duprintf(\"checking: element %p size %u\n\",\n\t\t\t e, e->next_offset))"];
"1000163" [label="(Call,xt_compat_check_entry_offsets(e, e->elems,\n \t\t\t\t\t    e->target_offset, e->next_offset))"];
"1000161" [label="(Call,ret = xt_compat_check_entry_offsets(e, e->elems,\n \t\t\t\t\t    e->target_offset, e->next_offset))"];
"1000176" [label="(Return,return ret;)"];
"1000188" [label="(Call,(void *)e)"];
"1000187" [label="(Call,(void *)e - (void *)base)"];
"1000185" [label="(Call,entry_offset = (void *)e - (void *)base)"];
"1000275" [label="(Call,xt_compat_add_offset(AF_INET, entry_offset, off))"];
"1000273" [label="(Call,ret = xt_compat_add_offset(AF_INET, entry_offset, off))"];
"1000376" [label="(Return,return ret;)"];
"1000218" [label="(Call,compat_ipt_get_target(e))"];
"1000216" [label="(Call,t = compat_ipt_get_target(e))"];
"1000295" [label="(Call,(unsigned char *)e)"];
"1000294" [label="(Call,(unsigned char *)e - base)"];
"1000293" [label="(Call,(unsigned char *)e - base == hook_entries[h])"];
"1000302" [label="(Call,newinfo->hook_entry[h] = hook_entries[h])"];
"1000313" [label="(Call,(unsigned char *)e - base)"];
"1000312" [label="(Call,(unsigned char *)e - base == underflows[h])"];
"1000321" [label="(Call,newinfo->underflow[h] = underflows[h])"];
"1000314" [label="(Call,(unsigned char *)e)"];
"1000133" [label="(Call,e->next_offset)"];
"1000143" [label="(Literal,\"checking: element %p size %u\n\")"];
"1000190" [label="(Identifier,e)"];
"1000161" [label="(Call,ret = xt_compat_check_entry_offsets(e, e->elems,\n \t\t\t\t\t    e->target_offset, e->next_offset))"];
"1000294" [label="(Call,(unsigned char *)e - base)"];
"1000177" [label="(Identifier,ret)"];
"1000299" [label="(Call,hook_entries[h])"];
"1000378" [label="(MethodReturn,RET)"];
"1000156" [label="(Identifier,e)"];
"1000275" [label="(Call,xt_compat_add_offset(AF_INET, entry_offset, off))"];
"1000280" [label="(Identifier,ret)"];
"1000265" [label="(Call,off += xt_compat_target_offset(target))"];
"1000321" [label="(Call,newinfo->underflow[h] = underflows[h])"];
"1000168" [label="(Call,e->target_offset)"];
"1000150" [label="(Identifier,EINVAL)"];
"1000141" [label="(Block,)"];
"1000277" [label="(Identifier,entry_offset)"];
"1000218" [label="(Call,compat_ipt_get_target(e))"];
"1000313" [label="(Call,(unsigned char *)e - base)"];
"1000186" [label="(Identifier,entry_offset)"];
"1000324" [label="(Identifier,newinfo)"];
"1000210" [label="(Call,ret != 0)"];
"1000195" [label="(Identifier,j)"];
"1000295" [label="(Call,(unsigned char *)e)"];
"1000314" [label="(Call,(unsigned char *)e)"];
"1000164" [label="(Identifier,e)"];
"1000174" [label="(ControlStructure,if (ret))"];
"1000191" [label="(Call,(void *)base)"];
"1000142" [label="(Call,duprintf(\"checking: element %p size %u\n\",\n\t\t\t e, e->next_offset))"];
"1000377" [label="(Identifier,ret)"];
"1000251" [label="(Call,ret = PTR_ERR(target))"];
"1000162" [label="(Identifier,ret)"];
"1000187" [label="(Call,(void *)e - (void *)base)"];
"1000219" [label="(Identifier,e)"];
"1000145" [label="(Call,e->next_offset)"];
"1000171" [label="(Call,e->next_offset)"];
"1000217" [label="(Identifier,t)"];
"1000292" [label="(ControlStructure,if ((unsigned char *)e - base == hook_entries[h]))"];
"1000311" [label="(ControlStructure,if ((unsigned char *)e - base == underflows[h]))"];
"1000327" [label="(Call,underflows[h])"];
"1000144" [label="(Identifier,e)"];
"1000302" [label="(Call,newinfo->hook_entry[h] = hook_entries[h])"];
"1000318" [label="(Call,underflows[h])"];
"1000176" [label="(Return,return ret;)"];
"1000376" [label="(Return,return ret;)"];
"1000273" [label="(Call,ret = xt_compat_add_offset(AF_INET, entry_offset, off))"];
"1000290" [label="(Identifier,h)"];
"1000111" [label="(Block,)"];
"1000221" [label="(Identifier,target)"];
"1000175" [label="(Identifier,ret)"];
"1000319" [label="(Identifier,underflows)"];
"1000298" [label="(Identifier,base)"];
"1000163" [label="(Call,xt_compat_check_entry_offsets(e, e->elems,\n \t\t\t\t\t    e->target_offset, e->next_offset))"];
"1000297" [label="(Identifier,e)"];
"1000312" [label="(Call,(unsigned char *)e - base == underflows[h])"];
"1000300" [label="(Identifier,hook_entries)"];
"1000293" [label="(Call,(unsigned char *)e - base == hook_entries[h])"];
"1000132" [label="(Call,e->next_offset < sizeof(struct compat_ipt_entry) +\n\t\t\t     sizeof(struct compat_xt_entry_target))"];
"1000303" [label="(Call,newinfo->hook_entry[h])"];
"1000317" [label="(Identifier,base)"];
"1000308" [label="(Call,hook_entries[h])"];
"1000188" [label="(Call,(void *)e)"];
"1000216" [label="(Call,t = compat_ipt_get_target(e))"];
"1000278" [label="(Identifier,off)"];
"1000305" [label="(Identifier,newinfo)"];
"1000322" [label="(Call,newinfo->underflow[h])"];
"1000131" [label="(ControlStructure,if (e->next_offset < sizeof(struct compat_ipt_entry) +\n\t\t\t     sizeof(struct compat_xt_entry_target)))"];
"1000316" [label="(Identifier,e)"];
"1000185" [label="(Call,entry_offset = (void *)e - (void *)base)"];
"1000276" [label="(Identifier,AF_INET)"];
"1000274" [label="(Identifier,ret)"];
"1000165" [label="(Call,e->elems)"];
"1000136" [label="(Call,sizeof(struct compat_ipt_entry) +\n\t\t\t     sizeof(struct compat_xt_entry_target))"];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000136"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000136" -> "1000132"  [label="AST: "];
"1000143" -> "1000132"  [label="CFG: "];
"1000156" -> "1000132"  [label="CFG: "];
"1000132" -> "1000378"  [label="DDG: "];
"1000132" -> "1000378"  [label="DDG: "];
"1000132" -> "1000378"  [label="DDG: "];
"1000132" -> "1000142"  [label="DDG: "];
"1000132" -> "1000163"  [label="DDG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000142" -> "1000145"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000145" -> "1000142"  [label="AST: "];
"1000150" -> "1000142"  [label="CFG: "];
"1000142" -> "1000378"  [label="DDG: "];
"1000142" -> "1000378"  [label="DDG: "];
"1000142" -> "1000378"  [label="DDG: "];
"1000163" -> "1000161"  [label="AST: "];
"1000163" -> "1000171"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000165" -> "1000163"  [label="AST: "];
"1000168" -> "1000163"  [label="AST: "];
"1000171" -> "1000163"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000163" -> "1000378"  [label="DDG: "];
"1000163" -> "1000378"  [label="DDG: "];
"1000163" -> "1000378"  [label="DDG: "];
"1000163" -> "1000378"  [label="DDG: "];
"1000163" -> "1000161"  [label="DDG: "];
"1000163" -> "1000161"  [label="DDG: "];
"1000163" -> "1000161"  [label="DDG: "];
"1000163" -> "1000161"  [label="DDG: "];
"1000163" -> "1000188"  [label="DDG: "];
"1000161" -> "1000111"  [label="AST: "];
"1000162" -> "1000161"  [label="AST: "];
"1000175" -> "1000161"  [label="CFG: "];
"1000161" -> "1000378"  [label="DDG: "];
"1000161" -> "1000378"  [label="DDG: "];
"1000161" -> "1000176"  [label="DDG: "];
"1000176" -> "1000174"  [label="AST: "];
"1000176" -> "1000177"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000378" -> "1000176"  [label="CFG: "];
"1000176" -> "1000378"  [label="DDG: "];
"1000177" -> "1000176"  [label="DDG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000188" -> "1000190"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000188"  [label="AST: "];
"1000192" -> "1000188"  [label="CFG: "];
"1000188" -> "1000378"  [label="DDG: "];
"1000188" -> "1000187"  [label="DDG: "];
"1000188" -> "1000218"  [label="DDG: "];
"1000187" -> "1000185"  [label="AST: "];
"1000187" -> "1000191"  [label="CFG: "];
"1000191" -> "1000187"  [label="AST: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000187" -> "1000378"  [label="DDG: "];
"1000187" -> "1000378"  [label="DDG: "];
"1000187" -> "1000185"  [label="DDG: "];
"1000187" -> "1000185"  [label="DDG: "];
"1000191" -> "1000187"  [label="DDG: "];
"1000185" -> "1000111"  [label="AST: "];
"1000186" -> "1000185"  [label="AST: "];
"1000195" -> "1000185"  [label="CFG: "];
"1000185" -> "1000378"  [label="DDG: "];
"1000185" -> "1000378"  [label="DDG: "];
"1000185" -> "1000275"  [label="DDG: "];
"1000275" -> "1000273"  [label="AST: "];
"1000275" -> "1000278"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000277" -> "1000275"  [label="AST: "];
"1000278" -> "1000275"  [label="AST: "];
"1000273" -> "1000275"  [label="CFG: "];
"1000275" -> "1000378"  [label="DDG: "];
"1000275" -> "1000378"  [label="DDG: "];
"1000275" -> "1000378"  [label="DDG: "];
"1000275" -> "1000273"  [label="DDG: "];
"1000275" -> "1000273"  [label="DDG: "];
"1000275" -> "1000273"  [label="DDG: "];
"1000265" -> "1000275"  [label="DDG: "];
"1000273" -> "1000111"  [label="AST: "];
"1000274" -> "1000273"  [label="AST: "];
"1000280" -> "1000273"  [label="CFG: "];
"1000273" -> "1000378"  [label="DDG: "];
"1000273" -> "1000378"  [label="DDG: "];
"1000273" -> "1000376"  [label="DDG: "];
"1000376" -> "1000111"  [label="AST: "];
"1000376" -> "1000377"  [label="CFG: "];
"1000377" -> "1000376"  [label="AST: "];
"1000378" -> "1000376"  [label="CFG: "];
"1000376" -> "1000378"  [label="DDG: "];
"1000377" -> "1000376"  [label="DDG: "];
"1000251" -> "1000376"  [label="DDG: "];
"1000210" -> "1000376"  [label="DDG: "];
"1000218" -> "1000216"  [label="AST: "];
"1000218" -> "1000219"  [label="CFG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000216" -> "1000218"  [label="CFG: "];
"1000218" -> "1000378"  [label="DDG: "];
"1000218" -> "1000216"  [label="DDG: "];
"1000218" -> "1000295"  [label="DDG: "];
"1000216" -> "1000111"  [label="AST: "];
"1000217" -> "1000216"  [label="AST: "];
"1000221" -> "1000216"  [label="CFG: "];
"1000216" -> "1000378"  [label="DDG: "];
"1000216" -> "1000378"  [label="DDG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000295" -> "1000297"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000297" -> "1000295"  [label="AST: "];
"1000298" -> "1000295"  [label="CFG: "];
"1000295" -> "1000294"  [label="DDG: "];
"1000314" -> "1000295"  [label="DDG: "];
"1000295" -> "1000314"  [label="DDG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000294" -> "1000298"  [label="CFG: "];
"1000298" -> "1000294"  [label="AST: "];
"1000300" -> "1000294"  [label="CFG: "];
"1000294" -> "1000293"  [label="DDG: "];
"1000294" -> "1000293"  [label="DDG: "];
"1000191" -> "1000294"  [label="DDG: "];
"1000313" -> "1000294"  [label="DDG: "];
"1000294" -> "1000313"  [label="DDG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000293" -> "1000299"  [label="CFG: "];
"1000299" -> "1000293"  [label="AST: "];
"1000305" -> "1000293"  [label="CFG: "];
"1000315" -> "1000293"  [label="CFG: "];
"1000293" -> "1000378"  [label="DDG: "];
"1000293" -> "1000378"  [label="DDG: "];
"1000293" -> "1000302"  [label="DDG: "];
"1000302" -> "1000292"  [label="AST: "];
"1000302" -> "1000308"  [label="CFG: "];
"1000303" -> "1000302"  [label="AST: "];
"1000308" -> "1000302"  [label="AST: "];
"1000315" -> "1000302"  [label="CFG: "];
"1000302" -> "1000378"  [label="DDG: "];
"1000302" -> "1000378"  [label="DDG: "];
"1000313" -> "1000312"  [label="AST: "];
"1000313" -> "1000317"  [label="CFG: "];
"1000314" -> "1000313"  [label="AST: "];
"1000317" -> "1000313"  [label="AST: "];
"1000319" -> "1000313"  [label="CFG: "];
"1000313" -> "1000378"  [label="DDG: "];
"1000313" -> "1000378"  [label="DDG: "];
"1000313" -> "1000312"  [label="DDG: "];
"1000313" -> "1000312"  [label="DDG: "];
"1000314" -> "1000313"  [label="DDG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000312" -> "1000318"  [label="CFG: "];
"1000318" -> "1000312"  [label="AST: "];
"1000324" -> "1000312"  [label="CFG: "];
"1000290" -> "1000312"  [label="CFG: "];
"1000312" -> "1000378"  [label="DDG: "];
"1000312" -> "1000378"  [label="DDG: "];
"1000312" -> "1000378"  [label="DDG: "];
"1000312" -> "1000321"  [label="DDG: "];
"1000321" -> "1000311"  [label="AST: "];
"1000321" -> "1000327"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000327" -> "1000321"  [label="AST: "];
"1000290" -> "1000321"  [label="CFG: "];
"1000321" -> "1000378"  [label="DDG: "];
"1000321" -> "1000378"  [label="DDG: "];
"1000314" -> "1000316"  [label="CFG: "];
"1000315" -> "1000314"  [label="AST: "];
"1000316" -> "1000314"  [label="AST: "];
"1000317" -> "1000314"  [label="CFG: "];
"1000314" -> "1000378"  [label="DDG: "];
}
