digraph "0_savannah_b995299b73ba4cd259f221f500d4e63095508bec_0@pointer" {
"1000202" [label="(Call,format = \"at %g points, first glyph index = %d\")"];
"1000205" [label="(Call,snprintf( status.header_buffer, 256, format, status.ptsize/64., status.Num ))"];
"1000229" [label="(Call,strlen( status.header_buffer ))"];
"1000227" [label="(Call,size = strlen( status.header_buffer ))"];
"1000233" [label="(Call,p    = status.header_buffer + size)"];
"1000264" [label="(Call,strcpy( p, format ))"];
"1000268" [label="(Call,FT_Get_Glyph_Name( face, gindex, p + format_len, size - format_len ))"];
"1000271" [label="(Call,p + format_len)"];
"1000235" [label="(Call,status.header_buffer + size)"];
"1000242" [label="(Call,256 - size)"];
"1000240" [label="(Call,size = 256 - size)"];
"1000253" [label="(Call,size >= format_len + 2)"];
"1000274" [label="(Call,size - format_len)"];
"1000285" [label="(Call,(const char *)status.header_buffer)"];
"1000281" [label="(Call,status.header = (const char *)status.header_buffer)"];
"1000290" [label="(Call,grWriteCellString( display->bitmap, 0, HEADER_HEIGHT,\n                       status.header_buffer, display->fore_color ))"];
"1000259" [label="(Call,gindex = status.Num)"];
"1000267" [label="(ControlStructure,if ( FT_Get_Glyph_Name( face, gindex, p + format_len, size - format_len ) ))"];
"1000203" [label="(Identifier,format)"];
"1000275" [label="(Identifier,size)"];
"1000246" [label="(Identifier,format)"];
"1000248" [label="(Call,format_len = strlen( format ))"];
"1000270" [label="(Identifier,gindex)"];
"1000283" [label="(Identifier,status)"];
"1000264" [label="(Call,strcpy( p, format ))"];
"1000292" [label="(Identifier,display)"];
"1000296" [label="(Call,status.header_buffer)"];
"1000205" [label="(Call,snprintf( status.header_buffer, 256, format, status.ptsize/64., status.Num ))"];
"1000190" [label="(Call,grWriteCellString( display->bitmap, 0, 0, status.header,\n                       display->fore_color ))"];
"1000258" [label="(Block,)"];
"1000239" [label="(Identifier,size)"];
"1000210" [label="(Identifier,format)"];
"1000206" [label="(Call,status.header_buffer)"];
"1000216" [label="(Call,status.Num)"];
"1000255" [label="(Call,format_len + 2)"];
"1000233" [label="(Call,p    = status.header_buffer + size)"];
"1000291" [label="(Call,display->bitmap)"];
"1000202" [label="(Call,format = \"at %g points, first glyph index = %d\")"];
"1000252" [label="(ControlStructure,if ( size >= format_len + 2 ))"];
"1000207" [label="(Identifier,status)"];
"1000240" [label="(Call,size = 256 - size)"];
"1000204" [label="(Literal,\"at %g points, first glyph index = %d\")"];
"1000250" [label="(Call,strlen( format ))"];
"1000235" [label="(Call,status.header_buffer + size)"];
"1000260" [label="(Identifier,gindex)"];
"1000185" [label="(Call,(const char *)status.header_buffer)"];
"1000244" [label="(Identifier,size)"];
"1000243" [label="(Literal,256)"];
"1000287" [label="(Call,status.header_buffer)"];
"1000285" [label="(Call,(const char *)status.header_buffer)"];
"1000229" [label="(Call,strlen( status.header_buffer ))"];
"1000102" [label="(Block,)"];
"1000222" [label="(Block,)"];
"1000242" [label="(Call,256 - size)"];
"1000221" [label="(Identifier,face)"];
"1000279" [label="(Identifier,p)"];
"1000282" [label="(Call,status.header)"];
"1000265" [label="(Identifier,p)"];
"1000241" [label="(Identifier,size)"];
"1000227" [label="(Call,size = strlen( status.header_buffer ))"];
"1000274" [label="(Call,size - format_len)"];
"1000273" [label="(Identifier,format_len)"];
"1000294" [label="(Literal,0)"];
"1000290" [label="(Call,grWriteCellString( display->bitmap, 0, HEADER_HEIGHT,\n                       status.header_buffer, display->fore_color ))"];
"1000228" [label="(Identifier,size)"];
"1000230" [label="(Call,status.header_buffer)"];
"1000254" [label="(Identifier,size)"];
"1000220" [label="(Call,FT_HAS_GLYPH_NAMES( face ))"];
"1000234" [label="(Identifier,p)"];
"1000253" [label="(Call,size >= format_len + 2)"];
"1000304" [label="(Identifier,display)"];
"1000271" [label="(Call,p + format_len)"];
"1000211" [label="(Call,status.ptsize/64.)"];
"1000306" [label="(MethodReturn,RET)"];
"1000209" [label="(Literal,256)"];
"1000272" [label="(Identifier,p)"];
"1000261" [label="(Call,status.Num)"];
"1000259" [label="(Call,gindex = status.Num)"];
"1000266" [label="(Identifier,format)"];
"1000269" [label="(Identifier,face)"];
"1000276" [label="(Identifier,format_len)"];
"1000268" [label="(Call,FT_Get_Glyph_Name( face, gindex, p + format_len, size - format_len ))"];
"1000299" [label="(Call,display->fore_color)"];
"1000295" [label="(Identifier,HEADER_HEIGHT)"];
"1000236" [label="(Call,status.header_buffer)"];
"1000281" [label="(Call,status.header = (const char *)status.header_buffer)"];
"1000202" -> "1000102"  [label="AST: "];
"1000202" -> "1000204"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000207" -> "1000202"  [label="CFG: "];
"1000202" -> "1000205"  [label="DDG: format"];
"1000205" -> "1000102"  [label="AST: "];
"1000205" -> "1000216"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000209" -> "1000205"  [label="AST: "];
"1000210" -> "1000205"  [label="AST: "];
"1000211" -> "1000205"  [label="AST: "];
"1000216" -> "1000205"  [label="AST: "];
"1000221" -> "1000205"  [label="CFG: "];
"1000205" -> "1000306"  [label="DDG: format"];
"1000205" -> "1000306"  [label="DDG: status.Num"];
"1000205" -> "1000306"  [label="DDG: status.ptsize/64."];
"1000205" -> "1000306"  [label="DDG: snprintf( status.header_buffer, 256, format, status.ptsize/64., status.Num )"];
"1000185" -> "1000205"  [label="DDG: status.header_buffer"];
"1000211" -> "1000205"  [label="DDG: status.ptsize"];
"1000211" -> "1000205"  [label="DDG: 64."];
"1000205" -> "1000229"  [label="DDG: status.header_buffer"];
"1000205" -> "1000259"  [label="DDG: status.Num"];
"1000205" -> "1000285"  [label="DDG: status.header_buffer"];
"1000229" -> "1000227"  [label="AST: "];
"1000229" -> "1000230"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000227" -> "1000229"  [label="CFG: "];
"1000229" -> "1000227"  [label="DDG: status.header_buffer"];
"1000229" -> "1000233"  [label="DDG: status.header_buffer"];
"1000229" -> "1000235"  [label="DDG: status.header_buffer"];
"1000229" -> "1000285"  [label="DDG: status.header_buffer"];
"1000227" -> "1000222"  [label="AST: "];
"1000228" -> "1000227"  [label="AST: "];
"1000234" -> "1000227"  [label="CFG: "];
"1000227" -> "1000306"  [label="DDG: strlen( status.header_buffer )"];
"1000227" -> "1000233"  [label="DDG: size"];
"1000227" -> "1000235"  [label="DDG: size"];
"1000227" -> "1000242"  [label="DDG: size"];
"1000233" -> "1000222"  [label="AST: "];
"1000233" -> "1000235"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000235" -> "1000233"  [label="AST: "];
"1000241" -> "1000233"  [label="CFG: "];
"1000233" -> "1000306"  [label="DDG: status.header_buffer + size"];
"1000233" -> "1000306"  [label="DDG: p"];
"1000233" -> "1000264"  [label="DDG: p"];
"1000264" -> "1000258"  [label="AST: "];
"1000264" -> "1000266"  [label="CFG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000266" -> "1000264"  [label="AST: "];
"1000269" -> "1000264"  [label="CFG: "];
"1000264" -> "1000306"  [label="DDG: format"];
"1000264" -> "1000306"  [label="DDG: strcpy( p, format )"];
"1000250" -> "1000264"  [label="DDG: format"];
"1000264" -> "1000268"  [label="DDG: p"];
"1000264" -> "1000271"  [label="DDG: p"];
"1000268" -> "1000267"  [label="AST: "];
"1000268" -> "1000274"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000270" -> "1000268"  [label="AST: "];
"1000271" -> "1000268"  [label="AST: "];
"1000274" -> "1000268"  [label="AST: "];
"1000279" -> "1000268"  [label="CFG: "];
"1000283" -> "1000268"  [label="CFG: "];
"1000268" -> "1000306"  [label="DDG: p + format_len"];
"1000268" -> "1000306"  [label="DDG: face"];
"1000268" -> "1000306"  [label="DDG: FT_Get_Glyph_Name( face, gindex, p + format_len, size - format_len )"];
"1000268" -> "1000306"  [label="DDG: size - format_len"];
"1000268" -> "1000306"  [label="DDG: gindex"];
"1000220" -> "1000268"  [label="DDG: face"];
"1000259" -> "1000268"  [label="DDG: gindex"];
"1000248" -> "1000268"  [label="DDG: format_len"];
"1000274" -> "1000268"  [label="DDG: size"];
"1000274" -> "1000268"  [label="DDG: format_len"];
"1000271" -> "1000273"  [label="CFG: "];
"1000272" -> "1000271"  [label="AST: "];
"1000273" -> "1000271"  [label="AST: "];
"1000275" -> "1000271"  [label="CFG: "];
"1000271" -> "1000306"  [label="DDG: p"];
"1000248" -> "1000271"  [label="DDG: format_len"];
"1000235" -> "1000239"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000239" -> "1000235"  [label="AST: "];
"1000242" -> "1000240"  [label="AST: "];
"1000242" -> "1000244"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000244" -> "1000242"  [label="AST: "];
"1000240" -> "1000242"  [label="CFG: "];
"1000242" -> "1000240"  [label="DDG: 256"];
"1000242" -> "1000240"  [label="DDG: size"];
"1000240" -> "1000222"  [label="AST: "];
"1000241" -> "1000240"  [label="AST: "];
"1000246" -> "1000240"  [label="CFG: "];
"1000240" -> "1000306"  [label="DDG: 256 - size"];
"1000240" -> "1000253"  [label="DDG: size"];
"1000253" -> "1000252"  [label="AST: "];
"1000253" -> "1000255"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000255" -> "1000253"  [label="AST: "];
"1000260" -> "1000253"  [label="CFG: "];
"1000283" -> "1000253"  [label="CFG: "];
"1000253" -> "1000306"  [label="DDG: size >= format_len + 2"];
"1000253" -> "1000306"  [label="DDG: format_len + 2"];
"1000253" -> "1000306"  [label="DDG: size"];
"1000248" -> "1000253"  [label="DDG: format_len"];
"1000253" -> "1000274"  [label="DDG: size"];
"1000274" -> "1000276"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000276" -> "1000274"  [label="AST: "];
"1000274" -> "1000306"  [label="DDG: size"];
"1000274" -> "1000306"  [label="DDG: format_len"];
"1000248" -> "1000274"  [label="DDG: format_len"];
"1000285" -> "1000281"  [label="AST: "];
"1000285" -> "1000287"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000285"  [label="AST: "];
"1000281" -> "1000285"  [label="CFG: "];
"1000285" -> "1000281"  [label="DDG: status.header_buffer"];
"1000285" -> "1000290"  [label="DDG: status.header_buffer"];
"1000281" -> "1000102"  [label="AST: "];
"1000282" -> "1000281"  [label="AST: "];
"1000292" -> "1000281"  [label="CFG: "];
"1000281" -> "1000306"  [label="DDG: (const char *)status.header_buffer"];
"1000281" -> "1000306"  [label="DDG: status.header"];
"1000290" -> "1000102"  [label="AST: "];
"1000290" -> "1000299"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000294" -> "1000290"  [label="AST: "];
"1000295" -> "1000290"  [label="AST: "];
"1000296" -> "1000290"  [label="AST: "];
"1000299" -> "1000290"  [label="AST: "];
"1000304" -> "1000290"  [label="CFG: "];
"1000290" -> "1000306"  [label="DDG: display->fore_color"];
"1000290" -> "1000306"  [label="DDG: HEADER_HEIGHT"];
"1000290" -> "1000306"  [label="DDG: display->bitmap"];
"1000290" -> "1000306"  [label="DDG: grWriteCellString( display->bitmap, 0, HEADER_HEIGHT,\n                       status.header_buffer, display->fore_color )"];
"1000290" -> "1000306"  [label="DDG: status.header_buffer"];
"1000190" -> "1000290"  [label="DDG: display->bitmap"];
"1000190" -> "1000290"  [label="DDG: display->fore_color"];
"1000259" -> "1000258"  [label="AST: "];
"1000259" -> "1000261"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000259"  [label="AST: "];
"1000265" -> "1000259"  [label="CFG: "];
"1000259" -> "1000306"  [label="DDG: status.Num"];
}
