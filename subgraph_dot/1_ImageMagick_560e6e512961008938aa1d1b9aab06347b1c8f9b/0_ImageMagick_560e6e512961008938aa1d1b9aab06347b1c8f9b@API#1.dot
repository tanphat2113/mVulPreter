digraph "0_ImageMagick_560e6e512961008938aa1d1b9aab06347b1c8f9b@API" {
"1000127" [label="(Call,assert(image_info != (const ImageInfo *) NULL))"];
"1000128" [label="(Call,image_info != (const ImageInfo *) NULL)"];
"1000109" [label="(MethodParameterIn,const ImageInfo *image_info)"];
"1000130" [label="(Call,(const ImageInfo *) NULL)"];
"1000127" [label="(Call,assert(image_info != (const ImageInfo *) NULL))"];
"1000130" [label="(Call,(const ImageInfo *) NULL)"];
"1000111" [label="(Block,)"];
"1001350" [label="(MethodReturn,static MagickBooleanType)"];
"1000132" [label="(Identifier,NULL)"];
"1000168" [label="(Call,OpenBlob(image_info,image,WriteBinaryBlobMode,&image->exception))"];
"1000142" [label="(Call,(Image *) NULL)"];
"1000129" [label="(Identifier,image_info)"];
"1000128" [label="(Call,image_info != (const ImageInfo *) NULL)"];
"1000109" [label="(MethodParameterIn,const ImageInfo *image_info)"];
"1000136" [label="(Identifier,image_info)"];
"1000127" -> "1000111"  [label="AST: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000136" -> "1000127"  [label="CFG: "];
"1000127" -> "1001350"  [label="DDG: assert(image_info != (const ImageInfo *) NULL)"];
"1000127" -> "1001350"  [label="DDG: image_info != (const ImageInfo *) NULL"];
"1000128" -> "1000127"  [label="DDG: image_info"];
"1000128" -> "1000127"  [label="DDG: (const ImageInfo *) NULL"];
"1000128" -> "1000130"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000128"  [label="AST: "];
"1000128" -> "1001350"  [label="DDG: (const ImageInfo *) NULL"];
"1000109" -> "1000128"  [label="DDG: image_info"];
"1000130" -> "1000128"  [label="DDG: NULL"];
"1000128" -> "1000168"  [label="DDG: image_info"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1001350"  [label="DDG: image_info"];
"1000109" -> "1000168"  [label="DDG: image_info"];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000130" -> "1000142"  [label="DDG: NULL"];
}
