digraph "0_nautilus_1630f53481f445ada0a455e9979236d31a8d3bb0_1@API" {
"1000266" [label="(Call,g_free (new_contents))"];
"1000205" [label="(Call,g_file_replace_contents (file,\n                                      new_contents,\n                                      new_length,\n                                      NULL,\n                                      FALSE, 0,\n                                      NULL, cancellable, &error))"];
"1000121" [label="(Call,g_file_load_contents (file,\n                               cancellable,\n                               &contents, &length,\n                               NULL, &error))"];
"1000103" [label="(MethodParameterIn,GFile        *file)"];
"1000102" [label="(MethodParameterIn,GCancellable *cancellable)"];
"1000193" [label="(Call,strcpy (new_contents, TRUSTED_SHEBANG))"];
"1000189" [label="(Call,new_contents = g_malloc (new_length))"];
"1000191" [label="(Call,g_malloc (new_length))"];
"1000183" [label="(Call,new_length = length + strlen (TRUSTED_SHEBANG))"];
"1000187" [label="(Call,strlen (TRUSTED_SHEBANG))"];
"1000266" [label="(Call,g_free (new_contents))"];
"1000267" [label="(Identifier,new_contents)"];
"1000226" [label="(Call,run_error (common,\n                                      g_strdup (_(\"Unable to mark launcher trusted (executable)\")),\n                                      error->message,\n                                      NULL,\n                                      FALSE,\n                                      CANCEL, RETRY,\n                                      NULL))"];
"1000123" [label="(Identifier,cancellable)"];
"1000183" [label="(Call,new_length = length + strlen (TRUSTED_SHEBANG))"];
"1000213" [label="(Identifier,cancellable)"];
"1000269" [label="(Identifier,contents)"];
"1000103" [label="(MethodParameterIn,GFile        *file)"];
"1000137" [label="(Call,run_error (common,\n                                  g_strdup (_(\"Unable to mark launcher trusted (executable)\")),\n                                  error->message,\n                                  NULL,\n                                  FALSE,\n                                  CANCEL, RETRY,\n                                  NULL))"];
"1000219" [label="(Call,g_free (new_contents))"];
"1000102" [label="(MethodParameterIn,GCancellable *cancellable)"];
"1000189" [label="(Call,new_contents = g_malloc (new_length))"];
"1000120" [label="(Call,!g_file_load_contents (file,\n                               cancellable,\n                               &contents, &length,\n                               NULL, &error))"];
"1000191" [label="(Call,g_malloc (new_length))"];
"1000214" [label="(Call,&error)"];
"1000210" [label="(Identifier,FALSE)"];
"1000198" [label="(Identifier,new_contents)"];
"1000194" [label="(Identifier,new_contents)"];
"1000190" [label="(Identifier,new_contents)"];
"1000121" [label="(Call,g_file_load_contents (file,\n                               cancellable,\n                               &contents, &length,\n                               NULL, &error))"];
"1000195" [label="(Identifier,TRUSTED_SHEBANG)"];
"1000188" [label="(Identifier,TRUSTED_SHEBANG)"];
"1000128" [label="(Identifier,NULL)"];
"1000206" [label="(Identifier,file)"];
"1000126" [label="(Call,&length)"];
"1000345" [label="(Call,g_file_set_attribute_uint32 (file, G_FILE_ATTRIBUTE_UNIX_MODE,\n                                          new_perms, G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS,\n                                          common->cancellable, &error))"];
"1000187" [label="(Call,strlen (TRUSTED_SHEBANG))"];
"1000196" [label="(Call,memcpy (new_contents + strlen (TRUSTED_SHEBANG),\n                contents, length))"];
"1000209" [label="(Identifier,NULL)"];
"1000212" [label="(Identifier,NULL)"];
"1000271" [label="(Call,info == NULL)"];
"1000185" [label="(Call,length + strlen (TRUSTED_SHEBANG))"];
"1000122" [label="(Identifier,file)"];
"1000192" [label="(Identifier,new_length)"];
"1000363" [label="(Call,run_error (common,\n                                      g_strdup (_(\"Unable to mark launcher trusted (executable)\")),\n                                      error->message,\n                                      NULL,\n                                      FALSE,\n                                      CANCEL, RETRY,\n                                      NULL))"];
"1000406" [label="(MethodReturn,RET)"];
"1000211" [label="(Literal,0)"];
"1000205" [label="(Call,g_file_replace_contents (file,\n                                      new_contents,\n                                      new_length,\n                                      NULL,\n                                      FALSE, 0,\n                                      NULL, cancellable, &error))"];
"1000208" [label="(Identifier,new_length)"];
"1000207" [label="(Identifier,new_contents)"];
"1000204" [label="(Call,!g_file_replace_contents (file,\n                                      new_contents,\n                                      new_length,\n                                      NULL,\n                                      FALSE, 0,\n                                      NULL, cancellable, &error))"];
"1000182" [label="(Block,)"];
"1000193" [label="(Call,strcpy (new_contents, TRUSTED_SHEBANG))"];
"1000280" [label="(Call,run_error (common,\n                                  g_strdup (_(\"Unable to mark launcher trusted (executable)\")),\n                                  error->message,\n                                  NULL,\n                                  FALSE,\n                                  CANCEL, RETRY,\n                                  NULL))"];
"1000129" [label="(Call,&error)"];
"1000197" [label="(Call,new_contents + strlen (TRUSTED_SHEBANG))"];
"1000199" [label="(Call,strlen (TRUSTED_SHEBANG))"];
"1000124" [label="(Call,&contents)"];
"1000184" [label="(Identifier,new_length)"];
"1000266" -> "1000182"  [label="AST: "];
"1000266" -> "1000267"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000269" -> "1000266"  [label="CFG: "];
"1000266" -> "1000406"  [label="DDG: new_contents"];
"1000266" -> "1000406"  [label="DDG: g_free (new_contents)"];
"1000205" -> "1000266"  [label="DDG: new_contents"];
"1000205" -> "1000204"  [label="AST: "];
"1000205" -> "1000214"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000207" -> "1000205"  [label="AST: "];
"1000208" -> "1000205"  [label="AST: "];
"1000209" -> "1000205"  [label="AST: "];
"1000210" -> "1000205"  [label="AST: "];
"1000211" -> "1000205"  [label="AST: "];
"1000212" -> "1000205"  [label="AST: "];
"1000213" -> "1000205"  [label="AST: "];
"1000214" -> "1000205"  [label="AST: "];
"1000204" -> "1000205"  [label="CFG: "];
"1000205" -> "1000406"  [label="DDG: NULL"];
"1000205" -> "1000406"  [label="DDG: FALSE"];
"1000205" -> "1000406"  [label="DDG: &error"];
"1000205" -> "1000406"  [label="DDG: file"];
"1000205" -> "1000406"  [label="DDG: new_length"];
"1000205" -> "1000406"  [label="DDG: cancellable"];
"1000205" -> "1000204"  [label="DDG: file"];
"1000205" -> "1000204"  [label="DDG: new_length"];
"1000205" -> "1000204"  [label="DDG: cancellable"];
"1000205" -> "1000204"  [label="DDG: NULL"];
"1000205" -> "1000204"  [label="DDG: &error"];
"1000205" -> "1000204"  [label="DDG: 0"];
"1000205" -> "1000204"  [label="DDG: new_contents"];
"1000205" -> "1000204"  [label="DDG: FALSE"];
"1000121" -> "1000205"  [label="DDG: file"];
"1000121" -> "1000205"  [label="DDG: NULL"];
"1000121" -> "1000205"  [label="DDG: cancellable"];
"1000121" -> "1000205"  [label="DDG: &error"];
"1000103" -> "1000205"  [label="DDG: file"];
"1000193" -> "1000205"  [label="DDG: new_contents"];
"1000191" -> "1000205"  [label="DDG: new_length"];
"1000102" -> "1000205"  [label="DDG: cancellable"];
"1000205" -> "1000219"  [label="DDG: new_contents"];
"1000205" -> "1000226"  [label="DDG: NULL"];
"1000205" -> "1000226"  [label="DDG: FALSE"];
"1000205" -> "1000271"  [label="DDG: NULL"];
"1000205" -> "1000280"  [label="DDG: FALSE"];
"1000205" -> "1000345"  [label="DDG: file"];
"1000205" -> "1000345"  [label="DDG: &error"];
"1000205" -> "1000363"  [label="DDG: FALSE"];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000129"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000124" -> "1000121"  [label="AST: "];
"1000126" -> "1000121"  [label="AST: "];
"1000128" -> "1000121"  [label="AST: "];
"1000129" -> "1000121"  [label="AST: "];
"1000120" -> "1000121"  [label="CFG: "];
"1000121" -> "1000406"  [label="DDG: &length"];
"1000121" -> "1000406"  [label="DDG: cancellable"];
"1000121" -> "1000406"  [label="DDG: &error"];
"1000121" -> "1000406"  [label="DDG: file"];
"1000121" -> "1000406"  [label="DDG: NULL"];
"1000121" -> "1000406"  [label="DDG: &contents"];
"1000121" -> "1000120"  [label="DDG: &length"];
"1000121" -> "1000120"  [label="DDG: file"];
"1000121" -> "1000120"  [label="DDG: &contents"];
"1000121" -> "1000120"  [label="DDG: &error"];
"1000121" -> "1000120"  [label="DDG: NULL"];
"1000121" -> "1000120"  [label="DDG: cancellable"];
"1000103" -> "1000121"  [label="DDG: file"];
"1000102" -> "1000121"  [label="DDG: cancellable"];
"1000121" -> "1000137"  [label="DDG: NULL"];
"1000121" -> "1000271"  [label="DDG: NULL"];
"1000121" -> "1000345"  [label="DDG: file"];
"1000121" -> "1000345"  [label="DDG: &error"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000406"  [label="DDG: file"];
"1000103" -> "1000345"  [label="DDG: file"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000406"  [label="DDG: cancellable"];
"1000193" -> "1000182"  [label="AST: "];
"1000193" -> "1000195"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000195" -> "1000193"  [label="AST: "];
"1000198" -> "1000193"  [label="CFG: "];
"1000193" -> "1000406"  [label="DDG: strcpy (new_contents, TRUSTED_SHEBANG)"];
"1000189" -> "1000193"  [label="DDG: new_contents"];
"1000187" -> "1000193"  [label="DDG: TRUSTED_SHEBANG"];
"1000193" -> "1000196"  [label="DDG: new_contents"];
"1000193" -> "1000197"  [label="DDG: new_contents"];
"1000193" -> "1000199"  [label="DDG: TRUSTED_SHEBANG"];
"1000189" -> "1000182"  [label="AST: "];
"1000189" -> "1000191"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000191" -> "1000189"  [label="AST: "];
"1000194" -> "1000189"  [label="CFG: "];
"1000189" -> "1000406"  [label="DDG: g_malloc (new_length)"];
"1000191" -> "1000189"  [label="DDG: new_length"];
"1000191" -> "1000192"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000183" -> "1000191"  [label="DDG: new_length"];
"1000183" -> "1000182"  [label="AST: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000185" -> "1000183"  [label="AST: "];
"1000190" -> "1000183"  [label="CFG: "];
"1000183" -> "1000406"  [label="DDG: length + strlen (TRUSTED_SHEBANG)"];
"1000187" -> "1000183"  [label="DDG: TRUSTED_SHEBANG"];
"1000187" -> "1000185"  [label="AST: "];
"1000187" -> "1000188"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000187" -> "1000185"  [label="DDG: TRUSTED_SHEBANG"];
}
