digraph "0_FFmpeg_3819db745da2ac7fb3faacb116788c32f4753f34@pointer" {
"1000229" [label="(Call,av_log(s->avctx, AV_LOG_ERROR, \"MOV chunk size != encoded chunk size; using MOV chunk size\n\"))"];
"1000198" [label="(Call,av_log(s->avctx, AV_LOG_ERROR, \"First chunk byte is 0x%02x instead of 0xe1\n\",\n            s->buf[stream_ptr]))"];
"1000191" [label="(Call,s->buf[stream_ptr] != 0xe1)"];
"1000698" [label="(Call,av_log(s->avctx, AV_LOG_ERROR, \"Unknown opcode %d in rpza chunk.\"\n                 \" Skip remaining %d bytes of chunk data.\n\", opcode,\n                 chunk_size - stream_ptr))"];
"1000324" [label="(Block,)"];
"1000705" [label="(Call,chunk_size - stream_ptr)"];
"1000699" [label="(Call,s->avctx)"];
"1000204" [label="(Call,s->buf[stream_ptr])"];
"1000199" [label="(Call,s->avctx)"];
"1000223" [label="(ControlStructure,if (chunk_size != s->size))"];
"1000197" [label="(Literal,0xe1)"];
"1000236" [label="(Identifier,chunk_size)"];
"1000230" [label="(Call,s->avctx)"];
"1000191" [label="(Call,s->buf[stream_ptr] != 0xe1)"];
"1000708" [label="(Return,return;)"];
"1000190" [label="(ControlStructure,if (s->buf[stream_ptr] != 0xe1))"];
"1000200" [label="(Identifier,s)"];
"1000704" [label="(Identifier,opcode)"];
"1000198" [label="(Call,av_log(s->avctx, AV_LOG_ERROR, \"First chunk byte is 0x%02x instead of 0xe1\n\",\n            s->buf[stream_ptr]))"];
"1000703" [label="(Literal,\"Unknown opcode %d in rpza chunk.\"\n                 \" Skip remaining %d bytes of chunk data.\n\")"];
"1000192" [label="(Call,s->buf[stream_ptr])"];
"1000698" [label="(Call,av_log(s->avctx, AV_LOG_ERROR, \"Unknown opcode %d in rpza chunk.\"\n                 \" Skip remaining %d bytes of chunk data.\n\", opcode,\n                 chunk_size - stream_ptr))"];
"1000210" [label="(Identifier,chunk_size)"];
"1000321" [label="(Call,opcode & 0xe0)"];
"1000203" [label="(Literal,\"First chunk byte is 0x%02x instead of 0xe1\n\")"];
"1000234" [label="(Literal,\"MOV chunk size != encoded chunk size; using MOV chunk size\n\")"];
"1000233" [label="(Identifier,AV_LOG_ERROR)"];
"1000202" [label="(Identifier,AV_LOG_ERROR)"];
"1000702" [label="(Identifier,AV_LOG_ERROR)"];
"1000709" [label="(MethodReturn,static void)"];
"1000229" [label="(Call,av_log(s->avctx, AV_LOG_ERROR, \"MOV chunk size != encoded chunk size; using MOV chunk size\n\"))"];
"1000305" [label="(Call,s->buf[stream_ptr] & 0x80)"];
"1000229" -> "1000223"  [label="AST: "];
"1000229" -> "1000234"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000233" -> "1000229"  [label="AST: "];
"1000234" -> "1000229"  [label="AST: "];
"1000236" -> "1000229"  [label="CFG: "];
"1000229" -> "1000709"  [label="DDG: "];
"1000229" -> "1000709"  [label="DDG: "];
"1000229" -> "1000709"  [label="DDG: "];
"1000198" -> "1000229"  [label="DDG: "];
"1000198" -> "1000229"  [label="DDG: "];
"1000229" -> "1000698"  [label="DDG: "];
"1000229" -> "1000698"  [label="DDG: "];
"1000198" -> "1000190"  [label="AST: "];
"1000198" -> "1000204"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000202" -> "1000198"  [label="AST: "];
"1000203" -> "1000198"  [label="AST: "];
"1000204" -> "1000198"  [label="AST: "];
"1000210" -> "1000198"  [label="CFG: "];
"1000198" -> "1000709"  [label="DDG: "];
"1000198" -> "1000709"  [label="DDG: "];
"1000198" -> "1000709"  [label="DDG: "];
"1000198" -> "1000709"  [label="DDG: "];
"1000191" -> "1000198"  [label="DDG: "];
"1000198" -> "1000305"  [label="DDG: "];
"1000198" -> "1000698"  [label="DDG: "];
"1000198" -> "1000698"  [label="DDG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000191" -> "1000197"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000197" -> "1000191"  [label="AST: "];
"1000200" -> "1000191"  [label="CFG: "];
"1000210" -> "1000191"  [label="CFG: "];
"1000191" -> "1000709"  [label="DDG: "];
"1000191" -> "1000709"  [label="DDG: "];
"1000191" -> "1000305"  [label="DDG: "];
"1000698" -> "1000324"  [label="AST: "];
"1000698" -> "1000705"  [label="CFG: "];
"1000699" -> "1000698"  [label="AST: "];
"1000702" -> "1000698"  [label="AST: "];
"1000703" -> "1000698"  [label="AST: "];
"1000704" -> "1000698"  [label="AST: "];
"1000705" -> "1000698"  [label="AST: "];
"1000708" -> "1000698"  [label="CFG: "];
"1000698" -> "1000709"  [label="DDG: "];
"1000698" -> "1000709"  [label="DDG: "];
"1000698" -> "1000709"  [label="DDG: "];
"1000698" -> "1000709"  [label="DDG: "];
"1000698" -> "1000709"  [label="DDG: "];
"1000321" -> "1000698"  [label="DDG: "];
"1000705" -> "1000698"  [label="DDG: "];
"1000705" -> "1000698"  [label="DDG: "];
}
