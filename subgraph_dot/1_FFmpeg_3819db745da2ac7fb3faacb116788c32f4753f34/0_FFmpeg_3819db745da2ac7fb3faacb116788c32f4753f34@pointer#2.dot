digraph "0_FFmpeg_3819db745da2ac7fb3faacb116788c32f4753f34@pointer" {
"1000305" [label="(Call,s->buf[stream_ptr] & 0x80)"];
"1000191" [label="(Call,s->buf[stream_ptr] != 0xe1)"];
"1000198" [label="(Call,av_log(s->avctx, AV_LOG_ERROR, \"First chunk byte is 0x%02x instead of 0xe1\n\",\n            s->buf[stream_ptr]))"];
"1000304" [label="(Call,(s->buf[stream_ptr] & 0x80) != 0)"];
"1000312" [label="(Literal,0)"];
"1000204" [label="(Call,s->buf[stream_ptr])"];
"1000199" [label="(Call,s->avctx)"];
"1000315" [label="(Identifier,opcode)"];
"1000303" [label="(ControlStructure,if ((s->buf[stream_ptr] & 0x80) != 0))"];
"1000197" [label="(Literal,0xe1)"];
"1000311" [label="(Literal,0x80)"];
"1000191" [label="(Call,s->buf[stream_ptr] != 0xe1)"];
"1000304" [label="(Call,(s->buf[stream_ptr] & 0x80) != 0)"];
"1000190" [label="(ControlStructure,if (s->buf[stream_ptr] != 0xe1))"];
"1000322" [label="(Identifier,opcode)"];
"1000306" [label="(Call,s->buf[stream_ptr])"];
"1000200" [label="(Identifier,s)"];
"1000198" [label="(Call,av_log(s->avctx, AV_LOG_ERROR, \"First chunk byte is 0x%02x instead of 0xe1\n\",\n            s->buf[stream_ptr]))"];
"1000192" [label="(Call,s->buf[stream_ptr])"];
"1000698" [label="(Call,av_log(s->avctx, AV_LOG_ERROR, \"Unknown opcode %d in rpza chunk.\"\n                 \" Skip remaining %d bytes of chunk data.\n\", opcode,\n                 chunk_size - stream_ptr))"];
"1000210" [label="(Identifier,chunk_size)"];
"1000203" [label="(Literal,\"First chunk byte is 0x%02x instead of 0xe1\n\")"];
"1000202" [label="(Identifier,AV_LOG_ERROR)"];
"1000709" [label="(MethodReturn,static void)"];
"1000229" [label="(Call,av_log(s->avctx, AV_LOG_ERROR, \"MOV chunk size != encoded chunk size; using MOV chunk size\n\"))"];
"1000305" [label="(Call,s->buf[stream_ptr] & 0x80)"];
"1000305" -> "1000304"  [label="AST: "];
"1000305" -> "1000311"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000311" -> "1000305"  [label="AST: "];
"1000312" -> "1000305"  [label="CFG: "];
"1000305" -> "1000709"  [label="DDG: "];
"1000305" -> "1000304"  [label="DDG: "];
"1000305" -> "1000304"  [label="DDG: "];
"1000191" -> "1000305"  [label="DDG: "];
"1000198" -> "1000305"  [label="DDG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000191" -> "1000197"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000197" -> "1000191"  [label="AST: "];
"1000200" -> "1000191"  [label="CFG: "];
"1000210" -> "1000191"  [label="CFG: "];
"1000191" -> "1000709"  [label="DDG: "];
"1000191" -> "1000709"  [label="DDG: "];
"1000191" -> "1000198"  [label="DDG: "];
"1000198" -> "1000190"  [label="AST: "];
"1000198" -> "1000204"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000202" -> "1000198"  [label="AST: "];
"1000203" -> "1000198"  [label="AST: "];
"1000204" -> "1000198"  [label="AST: "];
"1000210" -> "1000198"  [label="CFG: "];
"1000198" -> "1000709"  [label="DDG: "];
"1000198" -> "1000709"  [label="DDG: "];
"1000198" -> "1000709"  [label="DDG: "];
"1000198" -> "1000709"  [label="DDG: "];
"1000198" -> "1000229"  [label="DDG: "];
"1000198" -> "1000229"  [label="DDG: "];
"1000198" -> "1000698"  [label="DDG: "];
"1000198" -> "1000698"  [label="DDG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000304" -> "1000312"  [label="CFG: "];
"1000312" -> "1000304"  [label="AST: "];
"1000315" -> "1000304"  [label="CFG: "];
"1000322" -> "1000304"  [label="CFG: "];
"1000304" -> "1000709"  [label="DDG: "];
"1000304" -> "1000709"  [label="DDG: "];
}
