digraph "0_optee_os_a637243270fc1faae16de059091795c32d86e65e@pointer" {
"1000792" [label="(Call,derived_key_len > ss->alloc_size)"];
"1000804" [label="(Call,tee_cryp_pbkdf2(hash_id, password, ss->key_size, salt,\n\t\t\t\t      salt_len, iteration_count,\n\t\t\t\t      (uint8_t *)(sk + 1), derived_key_len))"];
"1000802" [label="(Call,res = tee_cryp_pbkdf2(hash_id, password, ss->key_size, salt,\n\t\t\t\t      salt_len, iteration_count,\n\t\t\t\t      (uint8_t *)(sk + 1), derived_key_len))"];
"1000820" [label="(Call,res == TEE_SUCCESS)"];
"1000847" [label="(Return,return res;)"];
"1000824" [label="(Call,sk->key_size = derived_key_len)"];
"1000819" [label="(ControlStructure,if (res == TEE_SUCCESS))"];
"1000812" [label="(Identifier,iteration_count)"];
"1000792" [label="(Call,derived_key_len > ss->alloc_size)"];
"1000747" [label="(Block,)"];
"1000719" [label="(Call,res == TEE_SUCCESS)"];
"1000806" [label="(Identifier,password)"];
"1000687" [label="(Call,res != TEE_SUCCESS)"];
"1000385" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000824" [label="(Call,sk->key_size = derived_key_len)"];
"1000113" [label="(Block,)"];
"1000825" [label="(Call,sk->key_size)"];
"1000753" [label="(Call,hash_id = TEE_ALG_GET_DIGEST_HASH(cs->algo))"];
"1000847" [label="(Return,return res;)"];
"1000821" [label="(Identifier,res)"];
"1000841" [label="(Call,res = TEE_ERROR_NOT_SUPPORTED)"];
"1000622" [label="(Call,res == TEE_SUCCESS)"];
"1000787" [label="(Call,res != TEE_SUCCESS)"];
"1000344" [label="(Call,res = TEE_ERROR_OUT_OF_MEMORY)"];
"1000207" [label="(Call,res != TEE_SUCCESS)"];
"1000793" [label="(Identifier,derived_key_len)"];
"1000820" [label="(Call,res == TEE_SUCCESS)"];
"1000255" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000194" [label="(Call,res != TEE_SUCCESS)"];
"1000849" [label="(MethodReturn,TEE_Result)"];
"1000828" [label="(Identifier,derived_key_len)"];
"1000810" [label="(Identifier,salt)"];
"1000826" [label="(Identifier,sk)"];
"1000848" [label="(Identifier,res)"];
"1000228" [label="(Call,res = TEE_ERROR_NOT_SUPPORTED)"];
"1000804" [label="(Call,tee_cryp_pbkdf2(hash_id, password, ss->key_size, salt,\n\t\t\t\t      salt_len, iteration_count,\n\t\t\t\t      (uint8_t *)(sk + 1), derived_key_len))"];
"1000588" [label="(Call,res != TEE_SUCCESS)"];
"1000514" [label="(Call,res == TEE_SUCCESS)"];
"1000766" [label="(Call,*password = (const uint8_t *)(ss + 1))"];
"1000805" [label="(Identifier,hash_id)"];
"1000832" [label="(Identifier,so)"];
"1000813" [label="(Call,(uint8_t *)(sk + 1))"];
"1000822" [label="(Identifier,TEE_SUCCESS)"];
"1000314" [label="(Call,res == TEE_SUCCESS)"];
"1000794" [label="(Call,ss->alloc_size)"];
"1000799" [label="(Identifier,res)"];
"1000431" [label="(Call,res != TEE_SUCCESS)"];
"1000791" [label="(ControlStructure,if (derived_key_len > ss->alloc_size))"];
"1000420" [label="(Call,res = TEE_ERROR_NOT_IMPLEMENTED)"];
"1000698" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000802" [label="(Call,res = tee_cryp_pbkdf2(hash_id, password, ss->key_size, salt,\n\t\t\t\t      salt_len, iteration_count,\n\t\t\t\t      (uint8_t *)(sk + 1), derived_key_len))"];
"1000599" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000180" [label="(Call,res != TEE_SUCCESS)"];
"1000811" [label="(Identifier,salt_len)"];
"1000803" [label="(Identifier,res)"];
"1000807" [label="(Call,ss->key_size)"];
"1000844" [label="(JumpTarget,out:)"];
"1000823" [label="(Block,)"];
"1000798" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000818" [label="(Identifier,derived_key_len)"];
"1000792" -> "1000791"  [label="AST: "];
"1000792" -> "1000794"  [label="CFG: "];
"1000793" -> "1000792"  [label="AST: "];
"1000794" -> "1000792"  [label="AST: "];
"1000799" -> "1000792"  [label="CFG: "];
"1000803" -> "1000792"  [label="CFG: "];
"1000792" -> "1000849"  [label="DDG: derived_key_len > ss->alloc_size"];
"1000792" -> "1000849"  [label="DDG: derived_key_len"];
"1000792" -> "1000849"  [label="DDG: ss->alloc_size"];
"1000792" -> "1000804"  [label="DDG: derived_key_len"];
"1000804" -> "1000802"  [label="AST: "];
"1000804" -> "1000818"  [label="CFG: "];
"1000805" -> "1000804"  [label="AST: "];
"1000806" -> "1000804"  [label="AST: "];
"1000807" -> "1000804"  [label="AST: "];
"1000810" -> "1000804"  [label="AST: "];
"1000811" -> "1000804"  [label="AST: "];
"1000812" -> "1000804"  [label="AST: "];
"1000813" -> "1000804"  [label="AST: "];
"1000818" -> "1000804"  [label="AST: "];
"1000802" -> "1000804"  [label="CFG: "];
"1000804" -> "1000849"  [label="DDG: salt"];
"1000804" -> "1000849"  [label="DDG: hash_id"];
"1000804" -> "1000849"  [label="DDG: ss->key_size"];
"1000804" -> "1000849"  [label="DDG: derived_key_len"];
"1000804" -> "1000849"  [label="DDG: password"];
"1000804" -> "1000849"  [label="DDG: (uint8_t *)(sk + 1)"];
"1000804" -> "1000849"  [label="DDG: salt_len"];
"1000804" -> "1000849"  [label="DDG: iteration_count"];
"1000804" -> "1000802"  [label="DDG: salt_len"];
"1000804" -> "1000802"  [label="DDG: iteration_count"];
"1000804" -> "1000802"  [label="DDG: derived_key_len"];
"1000804" -> "1000802"  [label="DDG: hash_id"];
"1000804" -> "1000802"  [label="DDG: password"];
"1000804" -> "1000802"  [label="DDG: (uint8_t *)(sk + 1)"];
"1000804" -> "1000802"  [label="DDG: ss->key_size"];
"1000804" -> "1000802"  [label="DDG: salt"];
"1000753" -> "1000804"  [label="DDG: hash_id"];
"1000766" -> "1000804"  [label="DDG: password"];
"1000813" -> "1000804"  [label="DDG: sk + 1"];
"1000804" -> "1000824"  [label="DDG: derived_key_len"];
"1000802" -> "1000747"  [label="AST: "];
"1000803" -> "1000802"  [label="AST: "];
"1000821" -> "1000802"  [label="CFG: "];
"1000802" -> "1000849"  [label="DDG: tee_cryp_pbkdf2(hash_id, password, ss->key_size, salt,\n\t\t\t\t      salt_len, iteration_count,\n\t\t\t\t      (uint8_t *)(sk + 1), derived_key_len)"];
"1000802" -> "1000820"  [label="DDG: res"];
"1000820" -> "1000819"  [label="AST: "];
"1000820" -> "1000822"  [label="CFG: "];
"1000821" -> "1000820"  [label="AST: "];
"1000822" -> "1000820"  [label="AST: "];
"1000826" -> "1000820"  [label="CFG: "];
"1000844" -> "1000820"  [label="CFG: "];
"1000820" -> "1000849"  [label="DDG: res == TEE_SUCCESS"];
"1000820" -> "1000849"  [label="DDG: TEE_SUCCESS"];
"1000820" -> "1000849"  [label="DDG: res"];
"1000787" -> "1000820"  [label="DDG: TEE_SUCCESS"];
"1000820" -> "1000847"  [label="DDG: res"];
"1000847" -> "1000113"  [label="AST: "];
"1000847" -> "1000848"  [label="CFG: "];
"1000848" -> "1000847"  [label="AST: "];
"1000849" -> "1000847"  [label="CFG: "];
"1000847" -> "1000849"  [label="DDG: <RET>"];
"1000848" -> "1000847"  [label="DDG: res"];
"1000798" -> "1000847"  [label="DDG: res"];
"1000207" -> "1000847"  [label="DDG: res"];
"1000431" -> "1000847"  [label="DDG: res"];
"1000719" -> "1000847"  [label="DDG: res"];
"1000841" -> "1000847"  [label="DDG: res"];
"1000687" -> "1000847"  [label="DDG: res"];
"1000420" -> "1000847"  [label="DDG: res"];
"1000385" -> "1000847"  [label="DDG: res"];
"1000255" -> "1000847"  [label="DDG: res"];
"1000344" -> "1000847"  [label="DDG: res"];
"1000588" -> "1000847"  [label="DDG: res"];
"1000622" -> "1000847"  [label="DDG: res"];
"1000787" -> "1000847"  [label="DDG: res"];
"1000314" -> "1000847"  [label="DDG: res"];
"1000194" -> "1000847"  [label="DDG: res"];
"1000599" -> "1000847"  [label="DDG: res"];
"1000228" -> "1000847"  [label="DDG: res"];
"1000698" -> "1000847"  [label="DDG: res"];
"1000180" -> "1000847"  [label="DDG: res"];
"1000514" -> "1000847"  [label="DDG: res"];
"1000824" -> "1000823"  [label="AST: "];
"1000824" -> "1000828"  [label="CFG: "];
"1000825" -> "1000824"  [label="AST: "];
"1000828" -> "1000824"  [label="AST: "];
"1000832" -> "1000824"  [label="CFG: "];
"1000824" -> "1000849"  [label="DDG: derived_key_len"];
"1000824" -> "1000849"  [label="DDG: sk->key_size"];
}
