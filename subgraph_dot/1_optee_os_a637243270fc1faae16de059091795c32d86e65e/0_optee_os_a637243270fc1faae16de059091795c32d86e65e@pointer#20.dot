digraph "0_optee_os_a637243270fc1faae16de059091795c32d86e65e@pointer" {
"1000668" [label="(Call,*shared_secret = (const uint8_t *)(ss + 1))"];
"1000670" [label="(Call,(const uint8_t *)(ss + 1))"];
"1000662" [label="(Call,*ss = ko->attr)"];
"1000704" [label="(Call,tee_cryp_concat_kdf(hash_id, shared_secret, ss->key_size,\n\t\t\t\t\t  info, info_len, (uint8_t *)(sk + 1),\n\t\t\t\t\t  derived_key_len))"];
"1000702" [label="(Call,res = tee_cryp_concat_kdf(hash_id, shared_secret, ss->key_size,\n\t\t\t\t\t  info, info_len, (uint8_t *)(sk + 1),\n\t\t\t\t\t  derived_key_len))"];
"1000719" [label="(Call,res == TEE_SUCCESS)"];
"1000847" [label="(Return,return res;)"];
"1000723" [label="(Call,sk->key_size = derived_key_len)"];
"1000664" [label="(Call,ko->attr)"];
"1000720" [label="(Identifier,res)"];
"1000687" [label="(Call,res != TEE_SUCCESS)"];
"1000711" [label="(Identifier,info_len)"];
"1000385" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000113" [label="(Block,)"];
"1000676" [label="(Identifier,res)"];
"1000702" [label="(Call,res = tee_cryp_concat_kdf(hash_id, shared_secret, ss->key_size,\n\t\t\t\t\t  info, info_len, (uint8_t *)(sk + 1),\n\t\t\t\t\t  derived_key_len))"];
"1000847" [label="(Return,return res;)"];
"1000722" [label="(Block,)"];
"1000841" [label="(Call,res = TEE_ERROR_NOT_SUPPORTED)"];
"1000703" [label="(Identifier,res)"];
"1000655" [label="(Call,hash_id = TEE_ALG_GET_DIGEST_HASH(cs->algo))"];
"1000622" [label="(Call,res == TEE_SUCCESS)"];
"1000787" [label="(Call,res != TEE_SUCCESS)"];
"1000344" [label="(Call,res = TEE_ERROR_OUT_OF_MEMORY)"];
"1000207" [label="(Call,res != TEE_SUCCESS)"];
"1000255" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000820" [label="(Call,res == TEE_SUCCESS)"];
"1000194" [label="(Call,res != TEE_SUCCESS)"];
"1000710" [label="(Identifier,info)"];
"1000849" [label="(MethodReturn,TEE_Result)"];
"1000725" [label="(Identifier,sk)"];
"1000668" [label="(Call,*shared_secret = (const uint8_t *)(ss + 1))"];
"1000848" [label="(Identifier,res)"];
"1000723" [label="(Call,sk->key_size = derived_key_len)"];
"1000706" [label="(Identifier,shared_secret)"];
"1000712" [label="(Call,(uint8_t *)(sk + 1))"];
"1000721" [label="(Identifier,TEE_SUCCESS)"];
"1000588" [label="(Call,res != TEE_SUCCESS)"];
"1000228" [label="(Call,res = TEE_ERROR_NOT_SUPPORTED)"];
"1000514" [label="(Call,res == TEE_SUCCESS)"];
"1000704" [label="(Call,tee_cryp_concat_kdf(hash_id, shared_secret, ss->key_size,\n\t\t\t\t\t  info, info_len, (uint8_t *)(sk + 1),\n\t\t\t\t\t  derived_key_len))"];
"1000717" [label="(Identifier,derived_key_len)"];
"1000727" [label="(Identifier,derived_key_len)"];
"1000670" [label="(Call,(const uint8_t *)(ss + 1))"];
"1000707" [label="(Call,ss->key_size)"];
"1000314" [label="(Call,res == TEE_SUCCESS)"];
"1000663" [label="(Identifier,ss)"];
"1000431" [label="(Call,res != TEE_SUCCESS)"];
"1000662" [label="(Call,*ss = ko->attr)"];
"1000669" [label="(Identifier,shared_secret)"];
"1000705" [label="(Identifier,hash_id)"];
"1000672" [label="(Call,ss + 1)"];
"1000420" [label="(Call,res = TEE_ERROR_NOT_IMPLEMENTED)"];
"1000698" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000724" [label="(Call,sk->key_size)"];
"1000692" [label="(Call,derived_key_len > ss->alloc_size)"];
"1000599" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000180" [label="(Call,res != TEE_SUCCESS)"];
"1000718" [label="(ControlStructure,if (res == TEE_SUCCESS))"];
"1000731" [label="(Identifier,so)"];
"1000844" [label="(JumpTarget,out:)"];
"1000798" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000719" [label="(Call,res == TEE_SUCCESS)"];
"1000650" [label="(Block,)"];
"1000668" -> "1000650"  [label="AST: "];
"1000668" -> "1000670"  [label="CFG: "];
"1000669" -> "1000668"  [label="AST: "];
"1000670" -> "1000668"  [label="AST: "];
"1000676" -> "1000668"  [label="CFG: "];
"1000668" -> "1000849"  [label="DDG: (const uint8_t *)(ss + 1)"];
"1000668" -> "1000849"  [label="DDG: shared_secret"];
"1000670" -> "1000668"  [label="DDG: ss + 1"];
"1000668" -> "1000704"  [label="DDG: shared_secret"];
"1000670" -> "1000672"  [label="CFG: "];
"1000671" -> "1000670"  [label="AST: "];
"1000672" -> "1000670"  [label="AST: "];
"1000670" -> "1000849"  [label="DDG: ss + 1"];
"1000662" -> "1000670"  [label="DDG: ss"];
"1000662" -> "1000650"  [label="AST: "];
"1000662" -> "1000664"  [label="CFG: "];
"1000663" -> "1000662"  [label="AST: "];
"1000664" -> "1000662"  [label="AST: "];
"1000669" -> "1000662"  [label="CFG: "];
"1000662" -> "1000849"  [label="DDG: ko->attr"];
"1000662" -> "1000672"  [label="DDG: ss"];
"1000704" -> "1000702"  [label="AST: "];
"1000704" -> "1000717"  [label="CFG: "];
"1000705" -> "1000704"  [label="AST: "];
"1000706" -> "1000704"  [label="AST: "];
"1000707" -> "1000704"  [label="AST: "];
"1000710" -> "1000704"  [label="AST: "];
"1000711" -> "1000704"  [label="AST: "];
"1000712" -> "1000704"  [label="AST: "];
"1000717" -> "1000704"  [label="AST: "];
"1000702" -> "1000704"  [label="CFG: "];
"1000704" -> "1000849"  [label="DDG: info_len"];
"1000704" -> "1000849"  [label="DDG: (uint8_t *)(sk + 1)"];
"1000704" -> "1000849"  [label="DDG: derived_key_len"];
"1000704" -> "1000849"  [label="DDG: info"];
"1000704" -> "1000849"  [label="DDG: shared_secret"];
"1000704" -> "1000849"  [label="DDG: hash_id"];
"1000704" -> "1000849"  [label="DDG: ss->key_size"];
"1000704" -> "1000702"  [label="DDG: info_len"];
"1000704" -> "1000702"  [label="DDG: ss->key_size"];
"1000704" -> "1000702"  [label="DDG: derived_key_len"];
"1000704" -> "1000702"  [label="DDG: shared_secret"];
"1000704" -> "1000702"  [label="DDG: info"];
"1000704" -> "1000702"  [label="DDG: (uint8_t *)(sk + 1)"];
"1000704" -> "1000702"  [label="DDG: hash_id"];
"1000655" -> "1000704"  [label="DDG: hash_id"];
"1000712" -> "1000704"  [label="DDG: sk + 1"];
"1000692" -> "1000704"  [label="DDG: derived_key_len"];
"1000704" -> "1000723"  [label="DDG: derived_key_len"];
"1000702" -> "1000650"  [label="AST: "];
"1000703" -> "1000702"  [label="AST: "];
"1000720" -> "1000702"  [label="CFG: "];
"1000702" -> "1000849"  [label="DDG: tee_cryp_concat_kdf(hash_id, shared_secret, ss->key_size,\n\t\t\t\t\t  info, info_len, (uint8_t *)(sk + 1),\n\t\t\t\t\t  derived_key_len)"];
"1000702" -> "1000719"  [label="DDG: res"];
"1000719" -> "1000718"  [label="AST: "];
"1000719" -> "1000721"  [label="CFG: "];
"1000720" -> "1000719"  [label="AST: "];
"1000721" -> "1000719"  [label="AST: "];
"1000725" -> "1000719"  [label="CFG: "];
"1000844" -> "1000719"  [label="CFG: "];
"1000719" -> "1000849"  [label="DDG: TEE_SUCCESS"];
"1000719" -> "1000849"  [label="DDG: res"];
"1000719" -> "1000849"  [label="DDG: res == TEE_SUCCESS"];
"1000687" -> "1000719"  [label="DDG: TEE_SUCCESS"];
"1000719" -> "1000847"  [label="DDG: res"];
"1000847" -> "1000113"  [label="AST: "];
"1000847" -> "1000848"  [label="CFG: "];
"1000848" -> "1000847"  [label="AST: "];
"1000849" -> "1000847"  [label="CFG: "];
"1000847" -> "1000849"  [label="DDG: <RET>"];
"1000848" -> "1000847"  [label="DDG: res"];
"1000798" -> "1000847"  [label="DDG: res"];
"1000207" -> "1000847"  [label="DDG: res"];
"1000431" -> "1000847"  [label="DDG: res"];
"1000841" -> "1000847"  [label="DDG: res"];
"1000687" -> "1000847"  [label="DDG: res"];
"1000420" -> "1000847"  [label="DDG: res"];
"1000385" -> "1000847"  [label="DDG: res"];
"1000255" -> "1000847"  [label="DDG: res"];
"1000344" -> "1000847"  [label="DDG: res"];
"1000820" -> "1000847"  [label="DDG: res"];
"1000588" -> "1000847"  [label="DDG: res"];
"1000622" -> "1000847"  [label="DDG: res"];
"1000787" -> "1000847"  [label="DDG: res"];
"1000314" -> "1000847"  [label="DDG: res"];
"1000194" -> "1000847"  [label="DDG: res"];
"1000599" -> "1000847"  [label="DDG: res"];
"1000228" -> "1000847"  [label="DDG: res"];
"1000698" -> "1000847"  [label="DDG: res"];
"1000180" -> "1000847"  [label="DDG: res"];
"1000514" -> "1000847"  [label="DDG: res"];
"1000723" -> "1000722"  [label="AST: "];
"1000723" -> "1000727"  [label="CFG: "];
"1000724" -> "1000723"  [label="AST: "];
"1000727" -> "1000723"  [label="AST: "];
"1000731" -> "1000723"  [label="CFG: "];
"1000723" -> "1000849"  [label="DDG: sk->key_size"];
"1000723" -> "1000849"  [label="DDG: derived_key_len"];
}
