digraph "0_optee_os_a637243270fc1faae16de059091795c32d86e65e@pointer" {
"1000233" [label="(Call,cs->algo == TEE_ALG_DH_DERIVE_SHARED_SECRET)"];
"1000354" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo))"];
"1000353" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo) == TEE_MAIN_ALGO_ECDH)"];
"1000540" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo))"];
"1000539" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo) == TEE_MAIN_ALGO_HKDF)"];
"1000554" [label="(Call,TEE_ALG_GET_DIGEST_HASH(cs->algo))"];
"1000552" [label="(Call,hash_id = TEE_ALG_GET_DIGEST_HASH(cs->algo))"];
"1000605" [label="(Call,tee_cryp_hkdf(hash_id, ikm, ik->key_size, salt, salt_len,\n\t\t\t\t    info, info_len, (uint8_t *)(sk + 1),\n\t\t\t\t    okm_len))"];
"1000603" [label="(Call,res = tee_cryp_hkdf(hash_id, ikm, ik->key_size, salt, salt_len,\n\t\t\t\t    info, info_len, (uint8_t *)(sk + 1),\n\t\t\t\t    okm_len))"];
"1000622" [label="(Call,res == TEE_SUCCESS)"];
"1000847" [label="(Return,return res;)"];
"1000626" [label="(Call,sk->key_size = okm_len)"];
"1000645" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo))"];
"1000644" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo) == TEE_MAIN_ALGO_CONCAT_KDF)"];
"1000657" [label="(Call,TEE_ALG_GET_DIGEST_HASH(cs->algo))"];
"1000655" [label="(Call,hash_id = TEE_ALG_GET_DIGEST_HASH(cs->algo))"];
"1000704" [label="(Call,tee_cryp_concat_kdf(hash_id, shared_secret, ss->key_size,\n\t\t\t\t\t  info, info_len, (uint8_t *)(sk + 1),\n\t\t\t\t\t  derived_key_len))"];
"1000702" [label="(Call,res = tee_cryp_concat_kdf(hash_id, shared_secret, ss->key_size,\n\t\t\t\t\t  info, info_len, (uint8_t *)(sk + 1),\n\t\t\t\t\t  derived_key_len))"];
"1000719" [label="(Call,res == TEE_SUCCESS)"];
"1000723" [label="(Call,sk->key_size = derived_key_len)"];
"1000742" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo))"];
"1000741" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo) == TEE_MAIN_ALGO_PBKDF2)"];
"1000755" [label="(Call,TEE_ALG_GET_DIGEST_HASH(cs->algo))"];
"1000753" [label="(Call,hash_id = TEE_ALG_GET_DIGEST_HASH(cs->algo))"];
"1000804" [label="(Call,tee_cryp_pbkdf2(hash_id, password, ss->key_size, salt,\n\t\t\t\t      salt_len, iteration_count,\n\t\t\t\t      (uint8_t *)(sk + 1), derived_key_len))"];
"1000802" [label="(Call,res = tee_cryp_pbkdf2(hash_id, password, ss->key_size, salt,\n\t\t\t\t      salt_len, iteration_count,\n\t\t\t\t      (uint8_t *)(sk + 1), derived_key_len))"];
"1000820" [label="(Call,res == TEE_SUCCESS)"];
"1000824" [label="(Call,sk->key_size = derived_key_len)"];
"1000746" [label="(Identifier,TEE_MAIN_ALGO_PBKDF2)"];
"1000812" [label="(Identifier,iteration_count)"];
"1000792" [label="(Call,derived_key_len > ss->alloc_size)"];
"1000747" [label="(Block,)"];
"1000711" [label="(Identifier,info_len)"];
"1000113" [label="(Block,)"];
"1000825" [label="(Call,sk->key_size)"];
"1000847" [label="(Return,return res;)"];
"1000722" [label="(Block,)"];
"1000644" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo) == TEE_MAIN_ALGO_CONCAT_KDF)"];
"1000655" [label="(Call,hash_id = TEE_ALG_GET_DIGEST_HASH(cs->algo))"];
"1000754" [label="(Identifier,hash_id)"];
"1000194" [label="(Call,res != TEE_SUCCESS)"];
"1000828" [label="(Identifier,derived_key_len)"];
"1000725" [label="(Identifier,sk)"];
"1000554" [label="(Call,TEE_ALG_GET_DIGEST_HASH(cs->algo))"];
"1000723" [label="(Call,sk->key_size = derived_key_len)"];
"1000540" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo))"];
"1000514" [label="(Call,res == TEE_SUCCESS)"];
"1000832" [label="(Identifier,so)"];
"1000717" [label="(Identifier,derived_key_len)"];
"1000657" [label="(Call,TEE_ALG_GET_DIGEST_HASH(cs->algo))"];
"1000611" [label="(Identifier,salt)"];
"1000645" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo))"];
"1000623" [label="(Identifier,res)"];
"1000234" [label="(Call,cs->algo)"];
"1000605" [label="(Call,tee_cryp_hkdf(hash_id, ikm, ik->key_size, salt, salt_len,\n\t\t\t\t    info, info_len, (uint8_t *)(sk + 1),\n\t\t\t\t    okm_len))"];
"1000744" [label="(Identifier,cs)"];
"1000724" [label="(Call,sk->key_size)"];
"1000692" [label="(Call,derived_key_len > ss->alloc_size)"];
"1000565" [label="(Call,*ikm = (const uint8_t *)(ik + 1))"];
"1000649" [label="(Identifier,TEE_MAIN_ALGO_CONCAT_KDF)"];
"1000613" [label="(Identifier,info)"];
"1000818" [label="(Identifier,derived_key_len)"];
"1000823" [label="(Block,)"];
"1000621" [label="(ControlStructure,if (res == TEE_SUCCESS))"];
"1000650" [label="(Block,)"];
"1000720" [label="(Identifier,res)"];
"1000687" [label="(Call,res != TEE_SUCCESS)"];
"1000607" [label="(Identifier,ikm)"];
"1000821" [label="(Identifier,res)"];
"1000232" [label="(ControlStructure,if (cs->algo == TEE_ALG_DH_DERIVE_SHARED_SECRET))"];
"1000627" [label="(Call,sk->key_size)"];
"1000656" [label="(Identifier,hash_id)"];
"1000849" [label="(MethodReturn,TEE_Result)"];
"1000233" [label="(Call,cs->algo == TEE_ALG_DH_DERIVE_SHARED_SECRET)"];
"1000742" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo))"];
"1000810" [label="(Identifier,salt)"];
"1000588" [label="(Call,res != TEE_SUCCESS)"];
"1000712" [label="(Call,(uint8_t *)(sk + 1))"];
"1000766" [label="(Call,*password = (const uint8_t *)(ss + 1))"];
"1000727" [label="(Identifier,derived_key_len)"];
"1000707" [label="(Call,ss->key_size)"];
"1000741" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo) == TEE_MAIN_ALGO_PBKDF2)"];
"1000314" [label="(Call,res == TEE_SUCCESS)"];
"1000663" [label="(Identifier,ss)"];
"1000624" [label="(Identifier,TEE_SUCCESS)"];
"1000420" [label="(Call,res = TEE_ERROR_NOT_IMPLEMENTED)"];
"1000698" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000802" [label="(Call,res = tee_cryp_pbkdf2(hash_id, password, ss->key_size, salt,\n\t\t\t\t      salt_len, iteration_count,\n\t\t\t\t      (uint8_t *)(sk + 1), derived_key_len))"];
"1000731" [label="(Identifier,so)"];
"1000718" [label="(ControlStructure,if (res == TEE_SUCCESS))"];
"1000844" [label="(JumpTarget,out:)"];
"1000647" [label="(Identifier,cs)"];
"1000755" [label="(Call,TEE_ALG_GET_DIGEST_HASH(cs->algo))"];
"1000806" [label="(Identifier,password)"];
"1000824" [label="(Call,sk->key_size = derived_key_len)"];
"1000625" [label="(Block,)"];
"1000552" [label="(Call,hash_id = TEE_ALG_GET_DIGEST_HASH(cs->algo))"];
"1000628" [label="(Identifier,sk)"];
"1000593" [label="(Call,okm_len > ik->alloc_size)"];
"1000626" [label="(Call,sk->key_size = okm_len)"];
"1000841" [label="(Call,res = TEE_ERROR_NOT_SUPPORTED)"];
"1000604" [label="(Identifier,res)"];
"1000608" [label="(Call,ik->key_size)"];
"1000740" [label="(ControlStructure,if (TEE_ALG_GET_MAIN_ALG(cs->algo) == TEE_MAIN_ALGO_PBKDF2))"];
"1000787" [label="(Call,res != TEE_SUCCESS)"];
"1000344" [label="(Call,res = TEE_ERROR_OUT_OF_MEMORY)"];
"1000207" [label="(Call,res != TEE_SUCCESS)"];
"1000352" [label="(ControlStructure,if (TEE_ALG_GET_MAIN_ALG(cs->algo) == TEE_MAIN_ALGO_ECDH))"];
"1000842" [label="(Identifier,res)"];
"1000668" [label="(Call,*shared_secret = (const uint8_t *)(ss + 1))"];
"1000848" [label="(Identifier,res)"];
"1000804" [label="(Call,tee_cryp_pbkdf2(hash_id, password, ss->key_size, salt,\n\t\t\t\t      salt_len, iteration_count,\n\t\t\t\t      (uint8_t *)(sk + 1), derived_key_len))"];
"1000646" [label="(Call,cs->algo)"];
"1000356" [label="(Identifier,cs)"];
"1000805" [label="(Identifier,hash_id)"];
"1000743" [label="(Call,cs->algo)"];
"1000553" [label="(Identifier,hash_id)"];
"1000615" [label="(Call,(uint8_t *)(sk + 1))"];
"1000555" [label="(Call,cs->algo)"];
"1000367" [label="(Identifier,param_count)"];
"1000643" [label="(ControlStructure,if (TEE_ALG_GET_MAIN_ALG(cs->algo) == TEE_MAIN_ALGO_CONCAT_KDF))"];
"1000599" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000358" [label="(Identifier,TEE_MAIN_ALGO_ECDH)"];
"1000807" [label="(Call,ss->key_size)"];
"1000658" [label="(Call,cs->algo)"];
"1000612" [label="(Identifier,salt_len)"];
"1000634" [label="(Identifier,so)"];
"1000819" [label="(ControlStructure,if (res == TEE_SUCCESS))"];
"1000385" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000545" [label="(Block,)"];
"1000620" [label="(Identifier,okm_len)"];
"1000753" [label="(Call,hash_id = TEE_ALG_GET_DIGEST_HASH(cs->algo))"];
"1000702" [label="(Call,res = tee_cryp_concat_kdf(hash_id, shared_secret, ss->key_size,\n\t\t\t\t\t  info, info_len, (uint8_t *)(sk + 1),\n\t\t\t\t\t  derived_key_len))"];
"1000606" [label="(Identifier,hash_id)"];
"1000761" [label="(Identifier,ss)"];
"1000703" [label="(Identifier,res)"];
"1000560" [label="(Identifier,ik)"];
"1000622" [label="(Call,res == TEE_SUCCESS)"];
"1000255" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000820" [label="(Call,res == TEE_SUCCESS)"];
"1000710" [label="(Identifier,info)"];
"1000542" [label="(Identifier,cs)"];
"1000228" [label="(Call,res = TEE_ERROR_NOT_SUPPORTED)"];
"1000826" [label="(Identifier,sk)"];
"1000706" [label="(Identifier,shared_secret)"];
"1000721" [label="(Identifier,TEE_SUCCESS)"];
"1000704" [label="(Call,tee_cryp_concat_kdf(hash_id, shared_secret, ss->key_size,\n\t\t\t\t\t  info, info_len, (uint8_t *)(sk + 1),\n\t\t\t\t\t  derived_key_len))"];
"1000354" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo))"];
"1000614" [label="(Identifier,info_len)"];
"1000813" [label="(Call,(uint8_t *)(sk + 1))"];
"1000822" [label="(Identifier,TEE_SUCCESS)"];
"1000544" [label="(Identifier,TEE_MAIN_ALGO_HKDF)"];
"1000237" [label="(Identifier,TEE_ALG_DH_DERIVE_SHARED_SECRET)"];
"1000355" [label="(Call,cs->algo)"];
"1000431" [label="(Call,res != TEE_SUCCESS)"];
"1000705" [label="(Identifier,hash_id)"];
"1000539" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo) == TEE_MAIN_ALGO_HKDF)"];
"1000245" [label="(Identifier,param_count)"];
"1000538" [label="(ControlStructure,if (TEE_ALG_GET_MAIN_ALG(cs->algo) == TEE_MAIN_ALGO_HKDF))"];
"1000180" [label="(Call,res != TEE_SUCCESS)"];
"1000811" [label="(Identifier,salt_len)"];
"1000353" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo) == TEE_MAIN_ALGO_ECDH)"];
"1000803" [label="(Identifier,res)"];
"1000756" [label="(Call,cs->algo)"];
"1000630" [label="(Identifier,okm_len)"];
"1000541" [label="(Call,cs->algo)"];
"1000798" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000719" [label="(Call,res == TEE_SUCCESS)"];
"1000603" [label="(Call,res = tee_cryp_hkdf(hash_id, ikm, ik->key_size, salt, salt_len,\n\t\t\t\t    info, info_len, (uint8_t *)(sk + 1),\n\t\t\t\t    okm_len))"];
"1000233" -> "1000232"  [label="AST: "];
"1000233" -> "1000237"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000237" -> "1000233"  [label="AST: "];
"1000245" -> "1000233"  [label="CFG: "];
"1000356" -> "1000233"  [label="CFG: "];
"1000233" -> "1000849"  [label="DDG: TEE_ALG_DH_DERIVE_SHARED_SECRET"];
"1000233" -> "1000849"  [label="DDG: cs->algo == TEE_ALG_DH_DERIVE_SHARED_SECRET"];
"1000233" -> "1000849"  [label="DDG: cs->algo"];
"1000233" -> "1000354"  [label="DDG: cs->algo"];
"1000354" -> "1000353"  [label="AST: "];
"1000354" -> "1000355"  [label="CFG: "];
"1000355" -> "1000354"  [label="AST: "];
"1000358" -> "1000354"  [label="CFG: "];
"1000354" -> "1000849"  [label="DDG: cs->algo"];
"1000354" -> "1000353"  [label="DDG: cs->algo"];
"1000354" -> "1000540"  [label="DDG: cs->algo"];
"1000353" -> "1000352"  [label="AST: "];
"1000353" -> "1000358"  [label="CFG: "];
"1000358" -> "1000353"  [label="AST: "];
"1000367" -> "1000353"  [label="CFG: "];
"1000542" -> "1000353"  [label="CFG: "];
"1000353" -> "1000849"  [label="DDG: TEE_ALG_GET_MAIN_ALG(cs->algo) == TEE_MAIN_ALGO_ECDH"];
"1000353" -> "1000849"  [label="DDG: TEE_MAIN_ALGO_ECDH"];
"1000353" -> "1000849"  [label="DDG: TEE_ALG_GET_MAIN_ALG(cs->algo)"];
"1000540" -> "1000539"  [label="AST: "];
"1000540" -> "1000541"  [label="CFG: "];
"1000541" -> "1000540"  [label="AST: "];
"1000544" -> "1000540"  [label="CFG: "];
"1000540" -> "1000539"  [label="DDG: cs->algo"];
"1000540" -> "1000554"  [label="DDG: cs->algo"];
"1000540" -> "1000645"  [label="DDG: cs->algo"];
"1000539" -> "1000538"  [label="AST: "];
"1000539" -> "1000544"  [label="CFG: "];
"1000544" -> "1000539"  [label="AST: "];
"1000553" -> "1000539"  [label="CFG: "];
"1000647" -> "1000539"  [label="CFG: "];
"1000539" -> "1000849"  [label="DDG: TEE_ALG_GET_MAIN_ALG(cs->algo)"];
"1000539" -> "1000849"  [label="DDG: TEE_ALG_GET_MAIN_ALG(cs->algo) == TEE_MAIN_ALGO_HKDF"];
"1000539" -> "1000849"  [label="DDG: TEE_MAIN_ALGO_HKDF"];
"1000554" -> "1000552"  [label="AST: "];
"1000554" -> "1000555"  [label="CFG: "];
"1000555" -> "1000554"  [label="AST: "];
"1000552" -> "1000554"  [label="CFG: "];
"1000554" -> "1000849"  [label="DDG: cs->algo"];
"1000554" -> "1000552"  [label="DDG: cs->algo"];
"1000552" -> "1000545"  [label="AST: "];
"1000553" -> "1000552"  [label="AST: "];
"1000560" -> "1000552"  [label="CFG: "];
"1000552" -> "1000849"  [label="DDG: hash_id"];
"1000552" -> "1000849"  [label="DDG: TEE_ALG_GET_DIGEST_HASH(cs->algo)"];
"1000552" -> "1000605"  [label="DDG: hash_id"];
"1000605" -> "1000603"  [label="AST: "];
"1000605" -> "1000620"  [label="CFG: "];
"1000606" -> "1000605"  [label="AST: "];
"1000607" -> "1000605"  [label="AST: "];
"1000608" -> "1000605"  [label="AST: "];
"1000611" -> "1000605"  [label="AST: "];
"1000612" -> "1000605"  [label="AST: "];
"1000613" -> "1000605"  [label="AST: "];
"1000614" -> "1000605"  [label="AST: "];
"1000615" -> "1000605"  [label="AST: "];
"1000620" -> "1000605"  [label="AST: "];
"1000603" -> "1000605"  [label="CFG: "];
"1000605" -> "1000849"  [label="DDG: info_len"];
"1000605" -> "1000849"  [label="DDG: ikm"];
"1000605" -> "1000849"  [label="DDG: info"];
"1000605" -> "1000849"  [label="DDG: ik->key_size"];
"1000605" -> "1000849"  [label="DDG: salt"];
"1000605" -> "1000849"  [label="DDG: (uint8_t *)(sk + 1)"];
"1000605" -> "1000849"  [label="DDG: hash_id"];
"1000605" -> "1000849"  [label="DDG: salt_len"];
"1000605" -> "1000849"  [label="DDG: okm_len"];
"1000605" -> "1000603"  [label="DDG: salt"];
"1000605" -> "1000603"  [label="DDG: okm_len"];
"1000605" -> "1000603"  [label="DDG: info"];
"1000605" -> "1000603"  [label="DDG: ikm"];
"1000605" -> "1000603"  [label="DDG: salt_len"];
"1000605" -> "1000603"  [label="DDG: (uint8_t *)(sk + 1)"];
"1000605" -> "1000603"  [label="DDG: info_len"];
"1000605" -> "1000603"  [label="DDG: ik->key_size"];
"1000605" -> "1000603"  [label="DDG: hash_id"];
"1000565" -> "1000605"  [label="DDG: ikm"];
"1000615" -> "1000605"  [label="DDG: sk + 1"];
"1000593" -> "1000605"  [label="DDG: okm_len"];
"1000605" -> "1000626"  [label="DDG: okm_len"];
"1000603" -> "1000545"  [label="AST: "];
"1000604" -> "1000603"  [label="AST: "];
"1000623" -> "1000603"  [label="CFG: "];
"1000603" -> "1000849"  [label="DDG: tee_cryp_hkdf(hash_id, ikm, ik->key_size, salt, salt_len,\n\t\t\t\t    info, info_len, (uint8_t *)(sk + 1),\n\t\t\t\t    okm_len)"];
"1000603" -> "1000622"  [label="DDG: res"];
"1000622" -> "1000621"  [label="AST: "];
"1000622" -> "1000624"  [label="CFG: "];
"1000623" -> "1000622"  [label="AST: "];
"1000624" -> "1000622"  [label="AST: "];
"1000628" -> "1000622"  [label="CFG: "];
"1000844" -> "1000622"  [label="CFG: "];
"1000622" -> "1000849"  [label="DDG: res == TEE_SUCCESS"];
"1000622" -> "1000849"  [label="DDG: res"];
"1000622" -> "1000849"  [label="DDG: TEE_SUCCESS"];
"1000588" -> "1000622"  [label="DDG: TEE_SUCCESS"];
"1000622" -> "1000847"  [label="DDG: res"];
"1000847" -> "1000113"  [label="AST: "];
"1000847" -> "1000848"  [label="CFG: "];
"1000848" -> "1000847"  [label="AST: "];
"1000849" -> "1000847"  [label="CFG: "];
"1000847" -> "1000849"  [label="DDG: <RET>"];
"1000848" -> "1000847"  [label="DDG: res"];
"1000798" -> "1000847"  [label="DDG: res"];
"1000207" -> "1000847"  [label="DDG: res"];
"1000431" -> "1000847"  [label="DDG: res"];
"1000719" -> "1000847"  [label="DDG: res"];
"1000841" -> "1000847"  [label="DDG: res"];
"1000687" -> "1000847"  [label="DDG: res"];
"1000420" -> "1000847"  [label="DDG: res"];
"1000385" -> "1000847"  [label="DDG: res"];
"1000255" -> "1000847"  [label="DDG: res"];
"1000344" -> "1000847"  [label="DDG: res"];
"1000820" -> "1000847"  [label="DDG: res"];
"1000588" -> "1000847"  [label="DDG: res"];
"1000787" -> "1000847"  [label="DDG: res"];
"1000314" -> "1000847"  [label="DDG: res"];
"1000194" -> "1000847"  [label="DDG: res"];
"1000599" -> "1000847"  [label="DDG: res"];
"1000228" -> "1000847"  [label="DDG: res"];
"1000698" -> "1000847"  [label="DDG: res"];
"1000180" -> "1000847"  [label="DDG: res"];
"1000514" -> "1000847"  [label="DDG: res"];
"1000626" -> "1000625"  [label="AST: "];
"1000626" -> "1000630"  [label="CFG: "];
"1000627" -> "1000626"  [label="AST: "];
"1000630" -> "1000626"  [label="AST: "];
"1000634" -> "1000626"  [label="CFG: "];
"1000626" -> "1000849"  [label="DDG: okm_len"];
"1000626" -> "1000849"  [label="DDG: sk->key_size"];
"1000645" -> "1000644"  [label="AST: "];
"1000645" -> "1000646"  [label="CFG: "];
"1000646" -> "1000645"  [label="AST: "];
"1000649" -> "1000645"  [label="CFG: "];
"1000645" -> "1000644"  [label="DDG: cs->algo"];
"1000645" -> "1000657"  [label="DDG: cs->algo"];
"1000645" -> "1000742"  [label="DDG: cs->algo"];
"1000644" -> "1000643"  [label="AST: "];
"1000644" -> "1000649"  [label="CFG: "];
"1000649" -> "1000644"  [label="AST: "];
"1000656" -> "1000644"  [label="CFG: "];
"1000744" -> "1000644"  [label="CFG: "];
"1000644" -> "1000849"  [label="DDG: TEE_ALG_GET_MAIN_ALG(cs->algo) == TEE_MAIN_ALGO_CONCAT_KDF"];
"1000644" -> "1000849"  [label="DDG: TEE_MAIN_ALGO_CONCAT_KDF"];
"1000644" -> "1000849"  [label="DDG: TEE_ALG_GET_MAIN_ALG(cs->algo)"];
"1000657" -> "1000655"  [label="AST: "];
"1000657" -> "1000658"  [label="CFG: "];
"1000658" -> "1000657"  [label="AST: "];
"1000655" -> "1000657"  [label="CFG: "];
"1000657" -> "1000849"  [label="DDG: cs->algo"];
"1000657" -> "1000655"  [label="DDG: cs->algo"];
"1000655" -> "1000650"  [label="AST: "];
"1000656" -> "1000655"  [label="AST: "];
"1000663" -> "1000655"  [label="CFG: "];
"1000655" -> "1000849"  [label="DDG: hash_id"];
"1000655" -> "1000849"  [label="DDG: TEE_ALG_GET_DIGEST_HASH(cs->algo)"];
"1000655" -> "1000704"  [label="DDG: hash_id"];
"1000704" -> "1000702"  [label="AST: "];
"1000704" -> "1000717"  [label="CFG: "];
"1000705" -> "1000704"  [label="AST: "];
"1000706" -> "1000704"  [label="AST: "];
"1000707" -> "1000704"  [label="AST: "];
"1000710" -> "1000704"  [label="AST: "];
"1000711" -> "1000704"  [label="AST: "];
"1000712" -> "1000704"  [label="AST: "];
"1000717" -> "1000704"  [label="AST: "];
"1000702" -> "1000704"  [label="CFG: "];
"1000704" -> "1000849"  [label="DDG: info_len"];
"1000704" -> "1000849"  [label="DDG: (uint8_t *)(sk + 1)"];
"1000704" -> "1000849"  [label="DDG: derived_key_len"];
"1000704" -> "1000849"  [label="DDG: info"];
"1000704" -> "1000849"  [label="DDG: shared_secret"];
"1000704" -> "1000849"  [label="DDG: hash_id"];
"1000704" -> "1000849"  [label="DDG: ss->key_size"];
"1000704" -> "1000702"  [label="DDG: info_len"];
"1000704" -> "1000702"  [label="DDG: ss->key_size"];
"1000704" -> "1000702"  [label="DDG: derived_key_len"];
"1000704" -> "1000702"  [label="DDG: shared_secret"];
"1000704" -> "1000702"  [label="DDG: info"];
"1000704" -> "1000702"  [label="DDG: (uint8_t *)(sk + 1)"];
"1000704" -> "1000702"  [label="DDG: hash_id"];
"1000668" -> "1000704"  [label="DDG: shared_secret"];
"1000712" -> "1000704"  [label="DDG: sk + 1"];
"1000692" -> "1000704"  [label="DDG: derived_key_len"];
"1000704" -> "1000723"  [label="DDG: derived_key_len"];
"1000702" -> "1000650"  [label="AST: "];
"1000703" -> "1000702"  [label="AST: "];
"1000720" -> "1000702"  [label="CFG: "];
"1000702" -> "1000849"  [label="DDG: tee_cryp_concat_kdf(hash_id, shared_secret, ss->key_size,\n\t\t\t\t\t  info, info_len, (uint8_t *)(sk + 1),\n\t\t\t\t\t  derived_key_len)"];
"1000702" -> "1000719"  [label="DDG: res"];
"1000719" -> "1000718"  [label="AST: "];
"1000719" -> "1000721"  [label="CFG: "];
"1000720" -> "1000719"  [label="AST: "];
"1000721" -> "1000719"  [label="AST: "];
"1000725" -> "1000719"  [label="CFG: "];
"1000844" -> "1000719"  [label="CFG: "];
"1000719" -> "1000849"  [label="DDG: TEE_SUCCESS"];
"1000719" -> "1000849"  [label="DDG: res"];
"1000719" -> "1000849"  [label="DDG: res == TEE_SUCCESS"];
"1000687" -> "1000719"  [label="DDG: TEE_SUCCESS"];
"1000723" -> "1000722"  [label="AST: "];
"1000723" -> "1000727"  [label="CFG: "];
"1000724" -> "1000723"  [label="AST: "];
"1000727" -> "1000723"  [label="AST: "];
"1000731" -> "1000723"  [label="CFG: "];
"1000723" -> "1000849"  [label="DDG: sk->key_size"];
"1000723" -> "1000849"  [label="DDG: derived_key_len"];
"1000742" -> "1000741"  [label="AST: "];
"1000742" -> "1000743"  [label="CFG: "];
"1000743" -> "1000742"  [label="AST: "];
"1000746" -> "1000742"  [label="CFG: "];
"1000742" -> "1000849"  [label="DDG: cs->algo"];
"1000742" -> "1000741"  [label="DDG: cs->algo"];
"1000742" -> "1000755"  [label="DDG: cs->algo"];
"1000741" -> "1000740"  [label="AST: "];
"1000741" -> "1000746"  [label="CFG: "];
"1000746" -> "1000741"  [label="AST: "];
"1000754" -> "1000741"  [label="CFG: "];
"1000842" -> "1000741"  [label="CFG: "];
"1000741" -> "1000849"  [label="DDG: TEE_ALG_GET_MAIN_ALG(cs->algo)"];
"1000741" -> "1000849"  [label="DDG: TEE_MAIN_ALGO_PBKDF2"];
"1000741" -> "1000849"  [label="DDG: TEE_ALG_GET_MAIN_ALG(cs->algo) == TEE_MAIN_ALGO_PBKDF2"];
"1000755" -> "1000753"  [label="AST: "];
"1000755" -> "1000756"  [label="CFG: "];
"1000756" -> "1000755"  [label="AST: "];
"1000753" -> "1000755"  [label="CFG: "];
"1000755" -> "1000849"  [label="DDG: cs->algo"];
"1000755" -> "1000753"  [label="DDG: cs->algo"];
"1000753" -> "1000747"  [label="AST: "];
"1000754" -> "1000753"  [label="AST: "];
"1000761" -> "1000753"  [label="CFG: "];
"1000753" -> "1000849"  [label="DDG: hash_id"];
"1000753" -> "1000849"  [label="DDG: TEE_ALG_GET_DIGEST_HASH(cs->algo)"];
"1000753" -> "1000804"  [label="DDG: hash_id"];
"1000804" -> "1000802"  [label="AST: "];
"1000804" -> "1000818"  [label="CFG: "];
"1000805" -> "1000804"  [label="AST: "];
"1000806" -> "1000804"  [label="AST: "];
"1000807" -> "1000804"  [label="AST: "];
"1000810" -> "1000804"  [label="AST: "];
"1000811" -> "1000804"  [label="AST: "];
"1000812" -> "1000804"  [label="AST: "];
"1000813" -> "1000804"  [label="AST: "];
"1000818" -> "1000804"  [label="AST: "];
"1000802" -> "1000804"  [label="CFG: "];
"1000804" -> "1000849"  [label="DDG: salt"];
"1000804" -> "1000849"  [label="DDG: hash_id"];
"1000804" -> "1000849"  [label="DDG: ss->key_size"];
"1000804" -> "1000849"  [label="DDG: derived_key_len"];
"1000804" -> "1000849"  [label="DDG: password"];
"1000804" -> "1000849"  [label="DDG: (uint8_t *)(sk + 1)"];
"1000804" -> "1000849"  [label="DDG: salt_len"];
"1000804" -> "1000849"  [label="DDG: iteration_count"];
"1000804" -> "1000802"  [label="DDG: salt_len"];
"1000804" -> "1000802"  [label="DDG: iteration_count"];
"1000804" -> "1000802"  [label="DDG: derived_key_len"];
"1000804" -> "1000802"  [label="DDG: hash_id"];
"1000804" -> "1000802"  [label="DDG: password"];
"1000804" -> "1000802"  [label="DDG: (uint8_t *)(sk + 1)"];
"1000804" -> "1000802"  [label="DDG: ss->key_size"];
"1000804" -> "1000802"  [label="DDG: salt"];
"1000766" -> "1000804"  [label="DDG: password"];
"1000813" -> "1000804"  [label="DDG: sk + 1"];
"1000792" -> "1000804"  [label="DDG: derived_key_len"];
"1000804" -> "1000824"  [label="DDG: derived_key_len"];
"1000802" -> "1000747"  [label="AST: "];
"1000803" -> "1000802"  [label="AST: "];
"1000821" -> "1000802"  [label="CFG: "];
"1000802" -> "1000849"  [label="DDG: tee_cryp_pbkdf2(hash_id, password, ss->key_size, salt,\n\t\t\t\t      salt_len, iteration_count,\n\t\t\t\t      (uint8_t *)(sk + 1), derived_key_len)"];
"1000802" -> "1000820"  [label="DDG: res"];
"1000820" -> "1000819"  [label="AST: "];
"1000820" -> "1000822"  [label="CFG: "];
"1000821" -> "1000820"  [label="AST: "];
"1000822" -> "1000820"  [label="AST: "];
"1000826" -> "1000820"  [label="CFG: "];
"1000844" -> "1000820"  [label="CFG: "];
"1000820" -> "1000849"  [label="DDG: res == TEE_SUCCESS"];
"1000820" -> "1000849"  [label="DDG: TEE_SUCCESS"];
"1000820" -> "1000849"  [label="DDG: res"];
"1000787" -> "1000820"  [label="DDG: TEE_SUCCESS"];
"1000824" -> "1000823"  [label="AST: "];
"1000824" -> "1000828"  [label="CFG: "];
"1000825" -> "1000824"  [label="AST: "];
"1000828" -> "1000824"  [label="AST: "];
"1000832" -> "1000824"  [label="CFG: "];
"1000824" -> "1000849"  [label="DDG: derived_key_len"];
"1000824" -> "1000849"  [label="DDG: sk->key_size"];
}
