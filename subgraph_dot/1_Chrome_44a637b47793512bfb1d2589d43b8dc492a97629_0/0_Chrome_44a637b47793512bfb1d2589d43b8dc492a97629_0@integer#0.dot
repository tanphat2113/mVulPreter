digraph "0_Chrome_44a637b47793512bfb1d2589d43b8dc492a97629_0@integer" {
"1000218" [label="(Call,buf = (xmlChar *) xmlMallocAtomic(size * sizeof(xmlChar)))"];
"1000220" [label="(Call,(xmlChar *) xmlMallocAtomic(size * sizeof(xmlChar)))"];
"1000222" [label="(Call,xmlMallocAtomic(size * sizeof(xmlChar)))"];
"1000223" [label="(Call,size * sizeof(xmlChar))"];
"1000117" [label="(Call,size = XML_PARSER_BUFFER_SIZE)"];
"1000228" [label="(Call,buf == NULL)"];
"1000232" [label="(Call,xmlErrMemory(ctxt, NULL))"];
"1000287" [label="(Call,xmlRealloc(buf, size * sizeof(xmlChar)))"];
"1000285" [label="(Call,(xmlChar *) xmlRealloc(buf, size * sizeof(xmlChar)))"];
"1000283" [label="(Call,tmp = (xmlChar *) xmlRealloc(buf, size * sizeof(xmlChar)))"];
"1000294" [label="(Call,tmp == NULL)"];
"1000298" [label="(Call,xmlErrMemory(ctxt, NULL))"];
"1000309" [label="(Call,buf = tmp)"];
"1000323" [label="(Call,COPY_BUF(l,buf,len,cur))"];
"1000273" [label="(Call,len + 5 >= size)"];
"1000280" [label="(Call,size *= 2)"];
"1000289" [label="(Call,size * sizeof(xmlChar))"];
"1000274" [label="(Call,len + 5)"];
"1000328" [label="(Call,NEXTL(l))"];
"1000332" [label="(Call,CUR_CHAR(l))"];
"1000330" [label="(Call,cur = CUR_CHAR(l))"];
"1000335" [label="(Call,cur == 0)"];
"1000261" [label="(Call,IS_CHAR(cur))"];
"1000260" [label="(Call,IS_CHAR(cur) && /* checked */\n\t\t   ((cur != '?') || (NXT(1) != '>')))"];
"1000264" [label="(Call,cur != '?')"];
"1000263" [label="(Call,(cur != '?') || (NXT(1) != '>'))"];
"1000351" [label="(Call,cur != '?')"];
"1000343" [label="(Call,CUR_CHAR(l))"];
"1000341" [label="(Call,cur = CUR_CHAR(l))"];
"1000400" [label="(Call,xmlParseCatalogPI(ctxt, buf))"];
"1000420" [label="(Call,ctxt->sax->processingInstruction(ctxt->userData,\n\t\t                                     target, buf))"];
"1000426" [label="(Call,xmlFree(buf))"];
"1000413" [label="(Call,ctxt->sax->processingInstruction != NULL)"];
"1000408" [label="(Call,(!ctxt->disableSAX) &&\n\t\t    (ctxt->sax->processingInstruction != NULL))"];
"1000404" [label="(Call,(ctxt->sax) && (!ctxt->disableSAX) &&\n\t\t    (ctxt->sax->processingInstruction != NULL))"];
"1000301" [label="(Call,xmlFree(buf))"];
"1000287" [label="(Call,xmlRealloc(buf, size * sizeof(xmlChar)))"];
"1000333" [label="(Identifier,l)"];
"1000227" [label="(ControlStructure,if (buf == NULL))"];
"1000351" [label="(Call,cur != '?')"];
"1000369" [label="(Call,xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,\n\t    \"PI declaration doesn't start and stop in the same entity\n\"))"];
"1000294" [label="(Call,tmp == NULL)"];
"1000345" [label="(Call,buf[len] = 0)"];
"1000293" [label="(ControlStructure,if (tmp == NULL))"];
"1000328" [label="(Call,NEXTL(l))"];
"1000422" [label="(Identifier,ctxt)"];
"1000218" [label="(Call,buf = (xmlChar *) xmlMallocAtomic(size * sizeof(xmlChar)))"];
"1000413" [label="(Call,ctxt->sax->processingInstruction != NULL)"];
"1000259" [label="(ControlStructure,while (IS_CHAR(cur) && /* checked */\n\t\t   ((cur != '?') || (NXT(1) != '>'))))"];
"1000284" [label="(Identifier,tmp)"];
"1000219" [label="(Identifier,buf)"];
"1000334" [label="(ControlStructure,if (cur == 0))"];
"1000404" [label="(Call,(ctxt->sax) && (!ctxt->disableSAX) &&\n\t\t    (ctxt->sax->processingInstruction != NULL))"];
"1000276" [label="(Literal,5)"];
"1000281" [label="(Identifier,size)"];
"1000272" [label="(ControlStructure,if (len + 5 >= size))"];
"1000295" [label="(Identifier,tmp)"];
"1000425" [label="(Identifier,buf)"];
"1000305" [label="(Identifier,ctxt)"];
"1000107" [label="(Block,)"];
"1000290" [label="(Identifier,size)"];
"1000329" [label="(Identifier,l)"];
"1000392" [label="(ControlStructure,if ((allow == XML_CATA_ALLOW_DOCUMENT) ||\n\t\t\t(allow == XML_CATA_ALLOW_ALL)))"];
"1000291" [label="(Call,sizeof(xmlChar))"];
"1000384" [label="(Call,xmlStrEqual(target, XML_CATALOG_PI))"];
"1000420" [label="(Call,ctxt->sax->processingInstruction(ctxt->userData,\n\t\t                                     target, buf))"];
"1000273" [label="(Call,len + 5 >= size)"];
"1000350" [label="(ControlStructure,if (cur != '?'))"];
"1000300" [label="(Identifier,NULL)"];
"1000336" [label="(Identifier,cur)"];
"1000401" [label="(Identifier,ctxt)"];
"1000296" [label="(Identifier,NULL)"];
"1000342" [label="(Identifier,cur)"];
"1000113" [label="(Call,len = 0)"];
"1000225" [label="(Call,sizeof(xmlChar))"];
"1000323" [label="(Call,COPY_BUF(l,buf,len,cur))"];
"1000353" [label="(Literal,'?')"];
"1000162" [label="(Call,target != NULL)"];
"1000299" [label="(Identifier,ctxt)"];
"1000267" [label="(Call,NXT(1) != '>')"];
"1000285" [label="(Call,(xmlChar *) xmlRealloc(buf, size * sizeof(xmlChar)))"];
"1000288" [label="(Identifier,buf)"];
"1000337" [label="(Literal,0)"];
"1000326" [label="(Identifier,len)"];
"1000352" [label="(Identifier,cur)"];
"1000232" [label="(Call,xmlErrMemory(ctxt, NULL))"];
"1000222" [label="(Call,xmlMallocAtomic(size * sizeof(xmlChar)))"];
"1000165" [label="(Block,)"];
"1000341" [label="(Call,cur = CUR_CHAR(l))"];
"1000255" [label="(Call,cur = CUR_CHAR(l))"];
"1000400" [label="(Call,xmlParseCatalogPI(ctxt, buf))"];
"1000344" [label="(Identifier,l)"];
"1000339" [label="(Identifier,SHRINK)"];
"1000274" [label="(Call,len + 5)"];
"1000280" [label="(Call,size *= 2)"];
"1000414" [label="(Call,ctxt->sax->processingInstruction)"];
"1000234" [label="(Identifier,NULL)"];
"1000119" [label="(Identifier,XML_PARSER_BUFFER_SIZE)"];
"1000249" [label="(Call,xmlFatalErrMsgStr(ctxt, XML_ERR_SPACE_REQUIRED,\n\t\t\t  \"ParsePI: PI %s space expected\n\", target))"];
"1000330" [label="(Call,cur = CUR_CHAR(l))"];
"1000402" [label="(Identifier,buf)"];
"1000325" [label="(Identifier,buf)"];
"1000301" [label="(Call,xmlFree(buf))"];
"1000298" [label="(Call,xmlErrMemory(ctxt, NULL))"];
"1000327" [label="(Identifier,cur)"];
"1000233" [label="(Identifier,ctxt)"];
"1000237" [label="(Identifier,ctxt)"];
"1000159" [label="(Call,xmlParsePITarget(ctxt))"];
"1000277" [label="(Identifier,size)"];
"1000257" [label="(Call,CUR_CHAR(l))"];
"1000427" [label="(Identifier,buf)"];
"1000265" [label="(Identifier,cur)"];
"1000408" [label="(Call,(!ctxt->disableSAX) &&\n\t\t    (ctxt->sax->processingInstruction != NULL))"];
"1000262" [label="(Identifier,cur)"];
"1000335" [label="(Call,cur == 0)"];
"1000439" [label="(MethodReturn,RET)"];
"1000424" [label="(Identifier,target)"];
"1000436" [label="(Identifier,ctxt)"];
"1000356" [label="(Identifier,ctxt)"];
"1000118" [label="(Identifier,size)"];
"1000231" [label="(Block,)"];
"1000343" [label="(Call,CUR_CHAR(l))"];
"1000230" [label="(Identifier,NULL)"];
"1000338" [label="(Block,)"];
"1000347" [label="(Identifier,buf)"];
"1000297" [label="(Block,)"];
"1000126" [label="(Identifier,count)"];
"1000421" [label="(Call,ctxt->userData)"];
"1000331" [label="(Identifier,cur)"];
"1000403" [label="(ControlStructure,if ((ctxt->sax) && (!ctxt->disableSAX) &&\n\t\t    (ctxt->sax->processingInstruction != NULL)))"];
"1000282" [label="(Literal,2)"];
"1000220" [label="(Call,(xmlChar *) xmlMallocAtomic(size * sizeof(xmlChar)))"];
"1000260" [label="(Call,IS_CHAR(cur) && /* checked */\n\t\t   ((cur != '?') || (NXT(1) != '>')))"];
"1000269" [label="(Literal,1)"];
"1000228" [label="(Call,buf == NULL)"];
"1000309" [label="(Call,buf = tmp)"];
"1000261" [label="(Call,IS_CHAR(cur))"];
"1000117" [label="(Call,size = XML_PARSER_BUFFER_SIZE)"];
"1000229" [label="(Identifier,buf)"];
"1000278" [label="(Block,)"];
"1000275" [label="(Identifier,len)"];
"1000426" [label="(Call,xmlFree(buf))"];
"1000302" [label="(Identifier,buf)"];
"1000409" [label="(Call,!ctxt->disableSAX)"];
"1000224" [label="(Identifier,size)"];
"1000271" [label="(Block,)"];
"1000364" [label="(Identifier,input)"];
"1000311" [label="(Identifier,tmp)"];
"1000419" [label="(Identifier,NULL)"];
"1000406" [label="(Identifier,ctxt)"];
"1000313" [label="(Identifier,count)"];
"1000405" [label="(Call,ctxt->sax)"];
"1000324" [label="(Identifier,l)"];
"1000242" [label="(Identifier,cur)"];
"1000289" [label="(Call,size * sizeof(xmlChar))"];
"1000264" [label="(Call,cur != '?')"];
"1000310" [label="(Identifier,buf)"];
"1000332" [label="(Call,CUR_CHAR(l))"];
"1000106" [label="(MethodParameterIn,xmlParserCtxtPtr ctxt)"];
"1000283" [label="(Call,tmp = (xmlChar *) xmlRealloc(buf, size * sizeof(xmlChar)))"];
"1000266" [label="(Literal,'?')"];
"1000263" [label="(Call,(cur != '?') || (NXT(1) != '>'))"];
"1000223" [label="(Call,size * sizeof(xmlChar))"];
"1000218" -> "1000165"  [label="AST: "];
"1000218" -> "1000220"  [label="CFG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000220" -> "1000218"  [label="AST: "];
"1000229" -> "1000218"  [label="CFG: "];
"1000218" -> "1000439"  [label="DDG: (xmlChar *) xmlMallocAtomic(size * sizeof(xmlChar))"];
"1000220" -> "1000218"  [label="DDG: xmlMallocAtomic(size * sizeof(xmlChar))"];
"1000218" -> "1000228"  [label="DDG: buf"];
"1000220" -> "1000222"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000222" -> "1000220"  [label="AST: "];
"1000220" -> "1000439"  [label="DDG: xmlMallocAtomic(size * sizeof(xmlChar))"];
"1000222" -> "1000220"  [label="DDG: size * sizeof(xmlChar)"];
"1000222" -> "1000223"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000222" -> "1000439"  [label="DDG: size * sizeof(xmlChar)"];
"1000223" -> "1000222"  [label="DDG: size"];
"1000223" -> "1000225"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000225" -> "1000223"  [label="AST: "];
"1000223" -> "1000439"  [label="DDG: size"];
"1000117" -> "1000223"  [label="DDG: size"];
"1000223" -> "1000273"  [label="DDG: size"];
"1000117" -> "1000107"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000126" -> "1000117"  [label="CFG: "];
"1000117" -> "1000439"  [label="DDG: size"];
"1000117" -> "1000439"  [label="DDG: XML_PARSER_BUFFER_SIZE"];
"1000228" -> "1000227"  [label="AST: "];
"1000228" -> "1000230"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000230" -> "1000228"  [label="AST: "];
"1000233" -> "1000228"  [label="CFG: "];
"1000242" -> "1000228"  [label="CFG: "];
"1000228" -> "1000439"  [label="DDG: buf == NULL"];
"1000228" -> "1000439"  [label="DDG: buf"];
"1000228" -> "1000439"  [label="DDG: NULL"];
"1000162" -> "1000228"  [label="DDG: NULL"];
"1000228" -> "1000232"  [label="DDG: NULL"];
"1000228" -> "1000287"  [label="DDG: buf"];
"1000228" -> "1000294"  [label="DDG: NULL"];
"1000228" -> "1000323"  [label="DDG: buf"];
"1000228" -> "1000400"  [label="DDG: buf"];
"1000228" -> "1000413"  [label="DDG: NULL"];
"1000228" -> "1000420"  [label="DDG: buf"];
"1000228" -> "1000426"  [label="DDG: buf"];
"1000232" -> "1000231"  [label="AST: "];
"1000232" -> "1000234"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000234" -> "1000232"  [label="AST: "];
"1000237" -> "1000232"  [label="CFG: "];
"1000232" -> "1000439"  [label="DDG: ctxt"];
"1000232" -> "1000439"  [label="DDG: xmlErrMemory(ctxt, NULL)"];
"1000232" -> "1000439"  [label="DDG: NULL"];
"1000159" -> "1000232"  [label="DDG: ctxt"];
"1000106" -> "1000232"  [label="DDG: ctxt"];
"1000287" -> "1000285"  [label="AST: "];
"1000287" -> "1000289"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000287"  [label="AST: "];
"1000285" -> "1000287"  [label="CFG: "];
"1000287" -> "1000439"  [label="DDG: size * sizeof(xmlChar)"];
"1000287" -> "1000285"  [label="DDG: buf"];
"1000287" -> "1000285"  [label="DDG: size * sizeof(xmlChar)"];
"1000323" -> "1000287"  [label="DDG: buf"];
"1000289" -> "1000287"  [label="DDG: size"];
"1000287" -> "1000301"  [label="DDG: buf"];
"1000285" -> "1000283"  [label="AST: "];
"1000286" -> "1000285"  [label="AST: "];
"1000283" -> "1000285"  [label="CFG: "];
"1000285" -> "1000439"  [label="DDG: xmlRealloc(buf, size * sizeof(xmlChar))"];
"1000285" -> "1000283"  [label="DDG: xmlRealloc(buf, size * sizeof(xmlChar))"];
"1000283" -> "1000278"  [label="AST: "];
"1000284" -> "1000283"  [label="AST: "];
"1000295" -> "1000283"  [label="CFG: "];
"1000283" -> "1000439"  [label="DDG: (xmlChar *) xmlRealloc(buf, size * sizeof(xmlChar))"];
"1000283" -> "1000294"  [label="DDG: tmp"];
"1000294" -> "1000293"  [label="AST: "];
"1000294" -> "1000296"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000296" -> "1000294"  [label="AST: "];
"1000299" -> "1000294"  [label="CFG: "];
"1000310" -> "1000294"  [label="CFG: "];
"1000294" -> "1000439"  [label="DDG: tmp == NULL"];
"1000294" -> "1000439"  [label="DDG: NULL"];
"1000294" -> "1000439"  [label="DDG: tmp"];
"1000294" -> "1000298"  [label="DDG: NULL"];
"1000294" -> "1000309"  [label="DDG: tmp"];
"1000294" -> "1000413"  [label="DDG: NULL"];
"1000298" -> "1000297"  [label="AST: "];
"1000298" -> "1000300"  [label="CFG: "];
"1000299" -> "1000298"  [label="AST: "];
"1000300" -> "1000298"  [label="AST: "];
"1000302" -> "1000298"  [label="CFG: "];
"1000298" -> "1000439"  [label="DDG: xmlErrMemory(ctxt, NULL)"];
"1000298" -> "1000439"  [label="DDG: ctxt"];
"1000298" -> "1000439"  [label="DDG: NULL"];
"1000159" -> "1000298"  [label="DDG: ctxt"];
"1000249" -> "1000298"  [label="DDG: ctxt"];
"1000106" -> "1000298"  [label="DDG: ctxt"];
"1000309" -> "1000278"  [label="AST: "];
"1000309" -> "1000311"  [label="CFG: "];
"1000310" -> "1000309"  [label="AST: "];
"1000311" -> "1000309"  [label="AST: "];
"1000313" -> "1000309"  [label="CFG: "];
"1000309" -> "1000439"  [label="DDG: tmp"];
"1000309" -> "1000323"  [label="DDG: buf"];
"1000323" -> "1000271"  [label="AST: "];
"1000323" -> "1000327"  [label="CFG: "];
"1000324" -> "1000323"  [label="AST: "];
"1000325" -> "1000323"  [label="AST: "];
"1000326" -> "1000323"  [label="AST: "];
"1000327" -> "1000323"  [label="AST: "];
"1000329" -> "1000323"  [label="CFG: "];
"1000323" -> "1000439"  [label="DDG: len"];
"1000323" -> "1000439"  [label="DDG: COPY_BUF(l,buf,len,cur)"];
"1000323" -> "1000273"  [label="DDG: len"];
"1000323" -> "1000274"  [label="DDG: len"];
"1000257" -> "1000323"  [label="DDG: l"];
"1000332" -> "1000323"  [label="DDG: l"];
"1000343" -> "1000323"  [label="DDG: l"];
"1000113" -> "1000323"  [label="DDG: len"];
"1000264" -> "1000323"  [label="DDG: cur"];
"1000261" -> "1000323"  [label="DDG: cur"];
"1000323" -> "1000328"  [label="DDG: l"];
"1000323" -> "1000400"  [label="DDG: buf"];
"1000323" -> "1000420"  [label="DDG: buf"];
"1000323" -> "1000426"  [label="DDG: buf"];
"1000273" -> "1000272"  [label="AST: "];
"1000273" -> "1000277"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000277" -> "1000273"  [label="AST: "];
"1000281" -> "1000273"  [label="CFG: "];
"1000313" -> "1000273"  [label="CFG: "];
"1000273" -> "1000439"  [label="DDG: len + 5"];
"1000273" -> "1000439"  [label="DDG: len + 5 >= size"];
"1000273" -> "1000439"  [label="DDG: size"];
"1000113" -> "1000273"  [label="DDG: len"];
"1000289" -> "1000273"  [label="DDG: size"];
"1000273" -> "1000280"  [label="DDG: size"];
"1000280" -> "1000278"  [label="AST: "];
"1000280" -> "1000282"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000282" -> "1000280"  [label="AST: "];
"1000284" -> "1000280"  [label="CFG: "];
"1000280" -> "1000289"  [label="DDG: size"];
"1000289" -> "1000291"  [label="CFG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000291" -> "1000289"  [label="AST: "];
"1000289" -> "1000439"  [label="DDG: size"];
"1000274" -> "1000276"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000276" -> "1000274"  [label="AST: "];
"1000277" -> "1000274"  [label="CFG: "];
"1000274" -> "1000439"  [label="DDG: len"];
"1000113" -> "1000274"  [label="DDG: len"];
"1000328" -> "1000271"  [label="AST: "];
"1000328" -> "1000329"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000331" -> "1000328"  [label="CFG: "];
"1000328" -> "1000439"  [label="DDG: NEXTL(l)"];
"1000328" -> "1000332"  [label="DDG: l"];
"1000332" -> "1000330"  [label="AST: "];
"1000332" -> "1000333"  [label="CFG: "];
"1000333" -> "1000332"  [label="AST: "];
"1000330" -> "1000332"  [label="CFG: "];
"1000332" -> "1000439"  [label="DDG: l"];
"1000332" -> "1000330"  [label="DDG: l"];
"1000332" -> "1000343"  [label="DDG: l"];
"1000330" -> "1000271"  [label="AST: "];
"1000331" -> "1000330"  [label="AST: "];
"1000336" -> "1000330"  [label="CFG: "];
"1000330" -> "1000439"  [label="DDG: CUR_CHAR(l)"];
"1000330" -> "1000335"  [label="DDG: cur"];
"1000335" -> "1000334"  [label="AST: "];
"1000335" -> "1000337"  [label="CFG: "];
"1000336" -> "1000335"  [label="AST: "];
"1000337" -> "1000335"  [label="AST: "];
"1000262" -> "1000335"  [label="CFG: "];
"1000339" -> "1000335"  [label="CFG: "];
"1000335" -> "1000439"  [label="DDG: cur == 0"];
"1000335" -> "1000261"  [label="DDG: cur"];
"1000261" -> "1000260"  [label="AST: "];
"1000261" -> "1000262"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000265" -> "1000261"  [label="CFG: "];
"1000260" -> "1000261"  [label="CFG: "];
"1000261" -> "1000439"  [label="DDG: cur"];
"1000261" -> "1000260"  [label="DDG: cur"];
"1000341" -> "1000261"  [label="DDG: cur"];
"1000255" -> "1000261"  [label="DDG: cur"];
"1000261" -> "1000264"  [label="DDG: cur"];
"1000261" -> "1000351"  [label="DDG: cur"];
"1000260" -> "1000259"  [label="AST: "];
"1000260" -> "1000263"  [label="CFG: "];
"1000263" -> "1000260"  [label="AST: "];
"1000275" -> "1000260"  [label="CFG: "];
"1000347" -> "1000260"  [label="CFG: "];
"1000260" -> "1000439"  [label="DDG: IS_CHAR(cur) && /* checked */\n\t\t   ((cur != '?') || (NXT(1) != '>'))"];
"1000260" -> "1000439"  [label="DDG: (cur != '?') || (NXT(1) != '>')"];
"1000260" -> "1000439"  [label="DDG: IS_CHAR(cur)"];
"1000263" -> "1000260"  [label="DDG: cur != '?'"];
"1000263" -> "1000260"  [label="DDG: NXT(1) != '>'"];
"1000264" -> "1000263"  [label="AST: "];
"1000264" -> "1000266"  [label="CFG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000266" -> "1000264"  [label="AST: "];
"1000269" -> "1000264"  [label="CFG: "];
"1000263" -> "1000264"  [label="CFG: "];
"1000264" -> "1000439"  [label="DDG: cur"];
"1000264" -> "1000263"  [label="DDG: cur"];
"1000264" -> "1000263"  [label="DDG: '?'"];
"1000264" -> "1000351"  [label="DDG: cur"];
"1000263" -> "1000267"  [label="CFG: "];
"1000267" -> "1000263"  [label="AST: "];
"1000263" -> "1000439"  [label="DDG: NXT(1) != '>'"];
"1000263" -> "1000439"  [label="DDG: cur != '?'"];
"1000267" -> "1000263"  [label="DDG: NXT(1)"];
"1000267" -> "1000263"  [label="DDG: '>'"];
"1000351" -> "1000350"  [label="AST: "];
"1000351" -> "1000353"  [label="CFG: "];
"1000352" -> "1000351"  [label="AST: "];
"1000353" -> "1000351"  [label="AST: "];
"1000356" -> "1000351"  [label="CFG: "];
"1000364" -> "1000351"  [label="CFG: "];
"1000351" -> "1000439"  [label="DDG: cur != '?'"];
"1000351" -> "1000439"  [label="DDG: cur"];
"1000343" -> "1000341"  [label="AST: "];
"1000343" -> "1000344"  [label="CFG: "];
"1000344" -> "1000343"  [label="AST: "];
"1000341" -> "1000343"  [label="CFG: "];
"1000343" -> "1000439"  [label="DDG: l"];
"1000343" -> "1000341"  [label="DDG: l"];
"1000341" -> "1000338"  [label="AST: "];
"1000342" -> "1000341"  [label="AST: "];
"1000262" -> "1000341"  [label="CFG: "];
"1000341" -> "1000439"  [label="DDG: CUR_CHAR(l)"];
"1000400" -> "1000392"  [label="AST: "];
"1000400" -> "1000402"  [label="CFG: "];
"1000401" -> "1000400"  [label="AST: "];
"1000402" -> "1000400"  [label="AST: "];
"1000406" -> "1000400"  [label="CFG: "];
"1000400" -> "1000439"  [label="DDG: ctxt"];
"1000400" -> "1000439"  [label="DDG: xmlParseCatalogPI(ctxt, buf)"];
"1000369" -> "1000400"  [label="DDG: ctxt"];
"1000159" -> "1000400"  [label="DDG: ctxt"];
"1000249" -> "1000400"  [label="DDG: ctxt"];
"1000106" -> "1000400"  [label="DDG: ctxt"];
"1000345" -> "1000400"  [label="DDG: buf[len]"];
"1000400" -> "1000420"  [label="DDG: buf"];
"1000400" -> "1000426"  [label="DDG: buf"];
"1000420" -> "1000403"  [label="AST: "];
"1000420" -> "1000425"  [label="CFG: "];
"1000421" -> "1000420"  [label="AST: "];
"1000424" -> "1000420"  [label="AST: "];
"1000425" -> "1000420"  [label="AST: "];
"1000427" -> "1000420"  [label="CFG: "];
"1000420" -> "1000439"  [label="DDG: ctxt->sax->processingInstruction(ctxt->userData,\n\t\t                                     target, buf)"];
"1000420" -> "1000439"  [label="DDG: target"];
"1000420" -> "1000439"  [label="DDG: ctxt->userData"];
"1000249" -> "1000420"  [label="DDG: target"];
"1000162" -> "1000420"  [label="DDG: target"];
"1000384" -> "1000420"  [label="DDG: target"];
"1000345" -> "1000420"  [label="DDG: buf[len]"];
"1000420" -> "1000426"  [label="DDG: buf"];
"1000426" -> "1000165"  [label="AST: "];
"1000426" -> "1000427"  [label="CFG: "];
"1000427" -> "1000426"  [label="AST: "];
"1000436" -> "1000426"  [label="CFG: "];
"1000426" -> "1000439"  [label="DDG: buf"];
"1000426" -> "1000439"  [label="DDG: xmlFree(buf)"];
"1000345" -> "1000426"  [label="DDG: buf[len]"];
"1000413" -> "1000408"  [label="AST: "];
"1000413" -> "1000419"  [label="CFG: "];
"1000414" -> "1000413"  [label="AST: "];
"1000419" -> "1000413"  [label="AST: "];
"1000408" -> "1000413"  [label="CFG: "];
"1000413" -> "1000439"  [label="DDG: ctxt->sax->processingInstruction"];
"1000413" -> "1000439"  [label="DDG: NULL"];
"1000413" -> "1000408"  [label="DDG: ctxt->sax->processingInstruction"];
"1000413" -> "1000408"  [label="DDG: NULL"];
"1000408" -> "1000404"  [label="AST: "];
"1000408" -> "1000409"  [label="CFG: "];
"1000409" -> "1000408"  [label="AST: "];
"1000404" -> "1000408"  [label="CFG: "];
"1000408" -> "1000439"  [label="DDG: !ctxt->disableSAX"];
"1000408" -> "1000439"  [label="DDG: ctxt->sax->processingInstruction != NULL"];
"1000408" -> "1000404"  [label="DDG: !ctxt->disableSAX"];
"1000408" -> "1000404"  [label="DDG: ctxt->sax->processingInstruction != NULL"];
"1000409" -> "1000408"  [label="DDG: ctxt->disableSAX"];
"1000404" -> "1000403"  [label="AST: "];
"1000404" -> "1000405"  [label="CFG: "];
"1000405" -> "1000404"  [label="AST: "];
"1000422" -> "1000404"  [label="CFG: "];
"1000427" -> "1000404"  [label="CFG: "];
"1000404" -> "1000439"  [label="DDG: ctxt->sax"];
"1000404" -> "1000439"  [label="DDG: (ctxt->sax) && (!ctxt->disableSAX) &&\n\t\t    (ctxt->sax->processingInstruction != NULL)"];
"1000404" -> "1000439"  [label="DDG: (!ctxt->disableSAX) &&\n\t\t    (ctxt->sax->processingInstruction != NULL)"];
"1000301" -> "1000297"  [label="AST: "];
"1000301" -> "1000302"  [label="CFG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000305" -> "1000301"  [label="CFG: "];
"1000301" -> "1000439"  [label="DDG: xmlFree(buf)"];
"1000301" -> "1000439"  [label="DDG: buf"];
}
