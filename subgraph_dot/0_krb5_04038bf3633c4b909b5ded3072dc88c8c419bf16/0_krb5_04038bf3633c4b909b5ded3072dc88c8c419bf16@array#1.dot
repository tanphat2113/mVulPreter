digraph "0_krb5_04038bf3633c4b909b5ded3072dc88c8c419bf16@array" {
"1000377" [label="(Call,ret[num_versions] = NULL)"];
"1000248" [label="(Call,ret == NULL)"];
"1000237" [label="(Call,ret = (struct berval **) calloc (num_versions + 1, sizeof (struct berval *)))"];
"1000239" [label="(Call,(struct berval **) calloc (num_versions + 1, sizeof (struct berval *)))"];
"1000241" [label="(Call,calloc (num_versions + 1, sizeof (struct berval *)))"];
"1000235" [label="(Call,num_versions++)"];
"1000115" [label="(Call,num_versions = 1)"];
"1000145" [label="(Call,key_data == NULL)"];
"1000135" [label="(Call,key_data = k5calloc(n_key_data, sizeof(*key_data), &err))"];
"1000137" [label="(Call,k5calloc(n_key_data, sizeof(*key_data), &err))"];
"1000130" [label="(Call,n_key_data < 0)"];
"1000106" [label="(MethodParameterIn,int n_key_data)"];
"1000310" [label="(Call,ret[j] == NULL)"];
"1000300" [label="(Call,ret[j] = k5alloc(sizeof(struct berval), &err))"];
"1000304" [label="(Call,k5alloc(sizeof(struct berval), &err))"];
"1000391" [label="(Call,ret != NULL)"];
"1000399" [label="(Call,ret[i] != NULL)"];
"1000406" [label="(Call,free (ret[i]))"];
"1000410" [label="(Call,free (ret))"];
"1000412" [label="(Call,ret = NULL)"];
"1000415" [label="(Return,return ret;)"];
"1000108" [label="(Block,)"];
"1000249" [label="(Identifier,ret)"];
"1000365" [label="(Call,n_key_data - 1)"];
"1000382" [label="(JumpTarget,cleanup:)"];
"1000391" [label="(Call,ret != NULL)"];
"1000117" [label="(Literal,1)"];
"1000235" [label="(Call,num_versions++)"];
"1000304" [label="(Call,k5alloc(sizeof(struct berval), &err))"];
"1000137" [label="(Call,k5calloc(n_key_data, sizeof(*key_data), &err))"];
"1000131" [label="(Identifier,n_key_data)"];
"1000383" [label="(Call,free(key_data))"];
"1000377" [label="(Call,ret[num_versions] = NULL)"];
"1000161" [label="(Call,i < n_key_data)"];
"1000415" [label="(Return,return ret;)"];
"1000403" [label="(Identifier,NULL)"];
"1000134" [label="(Identifier,NULL)"];
"1000139" [label="(Call,sizeof(*key_data))"];
"1000309" [label="(ControlStructure,if (ret[j] == NULL))"];
"1000314" [label="(Identifier,NULL)"];
"1000116" [label="(Identifier,num_versions)"];
"1000307" [label="(Call,&err)"];
"1000405" [label="(Identifier,i)"];
"1000136" [label="(Identifier,key_data)"];
"1000144" [label="(ControlStructure,if (key_data == NULL))"];
"1000253" [label="(Identifier,err)"];
"1000236" [label="(Identifier,num_versions)"];
"1000311" [label="(Call,ret[j])"];
"1000413" [label="(Identifier,ret)"];
"1000147" [label="(Identifier,NULL)"];
"1000150" [label="(Identifier,key_data)"];
"1000216" [label="(Call,n_key_data - 1)"];
"1000238" [label="(Identifier,ret)"];
"1000259" [label="(Identifier,i)"];
"1000201" [label="(Call,key_data[i].key_data_contents[1] = NULL)"];
"1000393" [label="(Identifier,NULL)"];
"1000132" [label="(Literal,0)"];
"1000417" [label="(MethodReturn,RET)"];
"1000130" [label="(Call,n_key_data < 0)"];
"1000142" [label="(Call,&err)"];
"1000312" [label="(Identifier,ret)"];
"1000395" [label="(ControlStructure,for (i = 0; ret[i] != NULL; i++))"];
"1000106" [label="(MethodParameterIn,int n_key_data)"];
"1000392" [label="(Identifier,ret)"];
"1000221" [label="(ControlStructure,if (key_data[i].key_data_kvno != key_data[i + 1].key_data_kvno))"];
"1000315" [label="(ControlStructure,goto cleanup;)"];
"1000237" [label="(Call,ret = (struct berval **) calloc (num_versions + 1, sizeof (struct berval *)))"];
"1000299" [label="(Block,)"];
"1000115" [label="(Call,num_versions = 1)"];
"1000110" [label="(Call,**ret = NULL)"];
"1000276" [label="(Call,i < n_key_data)"];
"1000300" [label="(Call,ret[j] = k5alloc(sizeof(struct berval), &err))"];
"1000407" [label="(Call,ret[i])"];
"1000129" [label="(ControlStructure,if (n_key_data < 0))"];
"1000411" [label="(Identifier,ret)"];
"1000408" [label="(Identifier,ret)"];
"1000406" [label="(Call,free (ret[i]))"];
"1000241" [label="(Call,calloc (num_versions + 1, sizeof (struct berval *)))"];
"1000400" [label="(Call,ret[i])"];
"1000239" [label="(Call,(struct berval **) calloc (num_versions + 1, sizeof (struct berval *)))"];
"1000310" [label="(Call,ret[j] == NULL)"];
"1000317" [label="(Identifier,err)"];
"1000397" [label="(Identifier,i)"];
"1000248" [label="(Call,ret == NULL)"];
"1000146" [label="(Identifier,key_data)"];
"1000399" [label="(Call,ret[i] != NULL)"];
"1000305" [label="(Call,sizeof(struct berval))"];
"1000247" [label="(ControlStructure,if (ret == NULL))"];
"1000220" [label="(Identifier,i)"];
"1000138" [label="(Identifier,n_key_data)"];
"1000394" [label="(Block,)"];
"1000410" [label="(Call,free (ret))"];
"1000145" [label="(Call,key_data == NULL)"];
"1000242" [label="(Call,num_versions + 1)"];
"1000135" [label="(Call,key_data = k5calloc(n_key_data, sizeof(*key_data), &err))"];
"1000123" [label="(Identifier,err)"];
"1000152" [label="(Call,n_key_data * sizeof(*key_data))"];
"1000301" [label="(Call,ret[j])"];
"1000390" [label="(ControlStructure,if (ret != NULL))"];
"1000149" [label="(Call,memcpy(key_data, key_data_in, n_key_data * sizeof(*key_data)))"];
"1000287" [label="(Call,n_key_data - 1)"];
"1000378" [label="(Call,ret[num_versions])"];
"1000414" [label="(Identifier,NULL)"];
"1000381" [label="(Identifier,NULL)"];
"1000245" [label="(Call,sizeof (struct berval *))"];
"1000250" [label="(Identifier,NULL)"];
"1000148" [label="(ControlStructure,goto cleanup;)"];
"1000416" [label="(Identifier,ret)"];
"1000412" [label="(Call,ret = NULL)"];
"1000377" -> "1000108"  [label="AST: "];
"1000377" -> "1000381"  [label="CFG: "];
"1000378" -> "1000377"  [label="AST: "];
"1000381" -> "1000377"  [label="AST: "];
"1000382" -> "1000377"  [label="CFG: "];
"1000377" -> "1000417"  [label="DDG: ret[num_versions]"];
"1000377" -> "1000417"  [label="DDG: NULL"];
"1000248" -> "1000377"  [label="DDG: NULL"];
"1000310" -> "1000377"  [label="DDG: NULL"];
"1000377" -> "1000391"  [label="DDG: ret[num_versions]"];
"1000377" -> "1000410"  [label="DDG: ret[num_versions]"];
"1000377" -> "1000415"  [label="DDG: ret[num_versions]"];
"1000248" -> "1000247"  [label="AST: "];
"1000248" -> "1000250"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="AST: "];
"1000253" -> "1000248"  [label="CFG: "];
"1000259" -> "1000248"  [label="CFG: "];
"1000248" -> "1000417"  [label="DDG: ret == NULL"];
"1000248" -> "1000417"  [label="DDG: NULL"];
"1000248" -> "1000417"  [label="DDG: ret"];
"1000237" -> "1000248"  [label="DDG: ret"];
"1000145" -> "1000248"  [label="DDG: NULL"];
"1000248" -> "1000310"  [label="DDG: ret"];
"1000248" -> "1000310"  [label="DDG: NULL"];
"1000248" -> "1000391"  [label="DDG: ret"];
"1000248" -> "1000391"  [label="DDG: NULL"];
"1000248" -> "1000415"  [label="DDG: ret"];
"1000237" -> "1000108"  [label="AST: "];
"1000237" -> "1000239"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000239" -> "1000237"  [label="AST: "];
"1000249" -> "1000237"  [label="CFG: "];
"1000237" -> "1000417"  [label="DDG: (struct berval **) calloc (num_versions + 1, sizeof (struct berval *))"];
"1000239" -> "1000237"  [label="DDG: calloc (num_versions + 1, sizeof (struct berval *))"];
"1000239" -> "1000241"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="AST: "];
"1000239" -> "1000417"  [label="DDG: calloc (num_versions + 1, sizeof (struct berval *))"];
"1000241" -> "1000239"  [label="DDG: num_versions + 1"];
"1000241" -> "1000245"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000245" -> "1000241"  [label="AST: "];
"1000241" -> "1000417"  [label="DDG: num_versions + 1"];
"1000235" -> "1000241"  [label="DDG: num_versions"];
"1000115" -> "1000241"  [label="DDG: num_versions"];
"1000235" -> "1000221"  [label="AST: "];
"1000235" -> "1000236"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000220" -> "1000235"  [label="CFG: "];
"1000115" -> "1000235"  [label="DDG: num_versions"];
"1000235" -> "1000242"  [label="DDG: num_versions"];
"1000115" -> "1000108"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000123" -> "1000115"  [label="CFG: "];
"1000115" -> "1000417"  [label="DDG: num_versions"];
"1000115" -> "1000242"  [label="DDG: num_versions"];
"1000145" -> "1000144"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000148" -> "1000145"  [label="CFG: "];
"1000150" -> "1000145"  [label="CFG: "];
"1000145" -> "1000417"  [label="DDG: key_data == NULL"];
"1000145" -> "1000417"  [label="DDG: NULL"];
"1000135" -> "1000145"  [label="DDG: key_data"];
"1000145" -> "1000149"  [label="DDG: key_data"];
"1000145" -> "1000201"  [label="DDG: NULL"];
"1000145" -> "1000383"  [label="DDG: key_data"];
"1000145" -> "1000391"  [label="DDG: NULL"];
"1000135" -> "1000108"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000146" -> "1000135"  [label="CFG: "];
"1000135" -> "1000417"  [label="DDG: k5calloc(n_key_data, sizeof(*key_data), &err)"];
"1000137" -> "1000135"  [label="DDG: n_key_data"];
"1000137" -> "1000135"  [label="DDG: &err"];
"1000137" -> "1000142"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000142" -> "1000137"  [label="AST: "];
"1000137" -> "1000417"  [label="DDG: &err"];
"1000137" -> "1000417"  [label="DDG: n_key_data"];
"1000130" -> "1000137"  [label="DDG: n_key_data"];
"1000106" -> "1000137"  [label="DDG: n_key_data"];
"1000137" -> "1000152"  [label="DDG: n_key_data"];
"1000137" -> "1000304"  [label="DDG: &err"];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000134" -> "1000130"  [label="CFG: "];
"1000136" -> "1000130"  [label="CFG: "];
"1000130" -> "1000417"  [label="DDG: n_key_data < 0"];
"1000130" -> "1000417"  [label="DDG: n_key_data"];
"1000106" -> "1000130"  [label="DDG: n_key_data"];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000417"  [label="DDG: n_key_data"];
"1000106" -> "1000152"  [label="DDG: n_key_data"];
"1000106" -> "1000161"  [label="DDG: n_key_data"];
"1000106" -> "1000216"  [label="DDG: n_key_data"];
"1000106" -> "1000276"  [label="DDG: n_key_data"];
"1000106" -> "1000287"  [label="DDG: n_key_data"];
"1000106" -> "1000365"  [label="DDG: n_key_data"];
"1000310" -> "1000309"  [label="AST: "];
"1000310" -> "1000314"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000314" -> "1000310"  [label="AST: "];
"1000315" -> "1000310"  [label="CFG: "];
"1000317" -> "1000310"  [label="CFG: "];
"1000310" -> "1000417"  [label="DDG: ret[j] == NULL"];
"1000310" -> "1000417"  [label="DDG: ret[j]"];
"1000310" -> "1000417"  [label="DDG: NULL"];
"1000300" -> "1000310"  [label="DDG: ret[j]"];
"1000310" -> "1000391"  [label="DDG: ret[j]"];
"1000310" -> "1000391"  [label="DDG: NULL"];
"1000310" -> "1000410"  [label="DDG: ret[j]"];
"1000310" -> "1000415"  [label="DDG: ret[j]"];
"1000300" -> "1000299"  [label="AST: "];
"1000300" -> "1000304"  [label="CFG: "];
"1000301" -> "1000300"  [label="AST: "];
"1000304" -> "1000300"  [label="AST: "];
"1000312" -> "1000300"  [label="CFG: "];
"1000300" -> "1000417"  [label="DDG: k5alloc(sizeof(struct berval), &err)"];
"1000304" -> "1000300"  [label="DDG: &err"];
"1000304" -> "1000307"  [label="CFG: "];
"1000305" -> "1000304"  [label="AST: "];
"1000307" -> "1000304"  [label="AST: "];
"1000304" -> "1000417"  [label="DDG: &err"];
"1000391" -> "1000390"  [label="AST: "];
"1000391" -> "1000393"  [label="CFG: "];
"1000392" -> "1000391"  [label="AST: "];
"1000393" -> "1000391"  [label="AST: "];
"1000397" -> "1000391"  [label="CFG: "];
"1000416" -> "1000391"  [label="CFG: "];
"1000391" -> "1000417"  [label="DDG: ret"];
"1000391" -> "1000417"  [label="DDG: NULL"];
"1000391" -> "1000417"  [label="DDG: ret != NULL"];
"1000110" -> "1000391"  [label="DDG: ret"];
"1000391" -> "1000399"  [label="DDG: ret"];
"1000391" -> "1000399"  [label="DDG: NULL"];
"1000391" -> "1000406"  [label="DDG: ret"];
"1000391" -> "1000410"  [label="DDG: ret"];
"1000391" -> "1000415"  [label="DDG: ret"];
"1000399" -> "1000395"  [label="AST: "];
"1000399" -> "1000403"  [label="CFG: "];
"1000400" -> "1000399"  [label="AST: "];
"1000403" -> "1000399"  [label="AST: "];
"1000408" -> "1000399"  [label="CFG: "];
"1000411" -> "1000399"  [label="CFG: "];
"1000399" -> "1000417"  [label="DDG: ret[i]"];
"1000399" -> "1000417"  [label="DDG: ret[i] != NULL"];
"1000406" -> "1000399"  [label="DDG: ret[i]"];
"1000399" -> "1000406"  [label="DDG: ret[i]"];
"1000399" -> "1000410"  [label="DDG: ret[i]"];
"1000399" -> "1000412"  [label="DDG: NULL"];
"1000399" -> "1000415"  [label="DDG: ret[i]"];
"1000406" -> "1000395"  [label="AST: "];
"1000406" -> "1000407"  [label="CFG: "];
"1000407" -> "1000406"  [label="AST: "];
"1000405" -> "1000406"  [label="CFG: "];
"1000410" -> "1000394"  [label="AST: "];
"1000410" -> "1000411"  [label="CFG: "];
"1000411" -> "1000410"  [label="AST: "];
"1000413" -> "1000410"  [label="CFG: "];
"1000412" -> "1000394"  [label="AST: "];
"1000412" -> "1000414"  [label="CFG: "];
"1000413" -> "1000412"  [label="AST: "];
"1000414" -> "1000412"  [label="AST: "];
"1000416" -> "1000412"  [label="CFG: "];
"1000412" -> "1000417"  [label="DDG: NULL"];
"1000412" -> "1000417"  [label="DDG: ret"];
"1000412" -> "1000415"  [label="DDG: ret"];
"1000415" -> "1000108"  [label="AST: "];
"1000415" -> "1000416"  [label="CFG: "];
"1000416" -> "1000415"  [label="AST: "];
"1000417" -> "1000415"  [label="CFG: "];
"1000415" -> "1000417"  [label="DDG: <RET>"];
"1000416" -> "1000415"  [label="DDG: ret"];
"1000110" -> "1000415"  [label="DDG: ret"];
}
