digraph "0_krb5_04038bf3633c4b909b5ded3072dc88c8c419bf16@API" {
"1000149" [label="(Call,memcpy(key_data, key_data_in, n_key_data * sizeof(*key_data)))"];
"1000145" [label="(Call,key_data == NULL)"];
"1000135" [label="(Call,key_data = k5calloc(n_key_data, sizeof(*key_data), &err))"];
"1000137" [label="(Call,k5calloc(n_key_data, sizeof(*key_data), &err))"];
"1000130" [label="(Call,n_key_data < 0)"];
"1000106" [label="(MethodParameterIn,int n_key_data)"];
"1000105" [label="(MethodParameterIn,krb5_key_data *key_data_in)"];
"1000152" [label="(Call,n_key_data * sizeof(*key_data))"];
"1000318" [label="(Call,asn1_encode_sequence_of_keys(key_data + last,\n                                               (krb5_int16)i - last + 1,\n                                               mkvno, &code))"];
"1000316" [label="(Call,err = asn1_encode_sequence_of_keys(key_data + last,\n                                               (krb5_int16)i - last + 1,\n                                               mkvno, &code))"];
"1000386" [label="(Call,err != 0)"];
"1000319" [label="(Call,key_data + last)"];
"1000383" [label="(Call,free(key_data))"];
"1000108" [label="(Block,)"];
"1000365" [label="(Call,n_key_data - 1)"];
"1000130" [label="(Call,n_key_data < 0)"];
"1000385" [label="(ControlStructure,if (err != 0))"];
"1000142" [label="(Call,&err)"];
"1000391" [label="(Call,ret != NULL)"];
"1000138" [label="(Identifier,n_key_data)"];
"1000106" [label="(MethodParameterIn,int n_key_data)"];
"1000145" [label="(Call,key_data == NULL)"];
"1000392" [label="(Identifier,ret)"];
"1000151" [label="(Identifier,key_data_in)"];
"1000299" [label="(Block,)"];
"1000136" [label="(Identifier,key_data)"];
"1000333" [label="(Identifier,err)"];
"1000144" [label="(ControlStructure,if (key_data == NULL))"];
"1000319" [label="(Call,key_data + last)"];
"1000135" [label="(Call,key_data = k5calloc(n_key_data, sizeof(*key_data), &err))"];
"1000276" [label="(Call,i < n_key_data)"];
"1000387" [label="(Identifier,err)"];
"1000304" [label="(Call,k5alloc(sizeof(struct berval), &err))"];
"1000129" [label="(ControlStructure,if (n_key_data < 0))"];
"1000147" [label="(Identifier,NULL)"];
"1000137" [label="(Call,k5calloc(n_key_data, sizeof(*key_data), &err))"];
"1000322" [label="(Call,(krb5_int16)i - last + 1)"];
"1000262" [label="(Call,last = 0)"];
"1000150" [label="(Identifier,key_data)"];
"1000152" [label="(Call,n_key_data * sizeof(*key_data))"];
"1000318" [label="(Call,asn1_encode_sequence_of_keys(key_data + last,\n                                               (krb5_int16)i - last + 1,\n                                               mkvno, &code))"];
"1000131" [label="(Identifier,n_key_data)"];
"1000388" [label="(Literal,0)"];
"1000320" [label="(Identifier,key_data)"];
"1000383" [label="(Call,free(key_data))"];
"1000216" [label="(Call,n_key_data - 1)"];
"1000159" [label="(Identifier,i)"];
"1000149" [label="(Call,memcpy(key_data, key_data_in, n_key_data * sizeof(*key_data)))"];
"1000287" [label="(Call,n_key_data - 1)"];
"1000161" [label="(Call,i < n_key_data)"];
"1000317" [label="(Identifier,err)"];
"1000107" [label="(MethodParameterIn,krb5_kvno mkvno)"];
"1000201" [label="(Call,key_data[i].key_data_contents[1] = NULL)"];
"1000321" [label="(Identifier,last)"];
"1000134" [label="(Identifier,NULL)"];
"1000252" [label="(Call,err = ENOMEM)"];
"1000330" [label="(Call,&code)"];
"1000384" [label="(Identifier,key_data)"];
"1000316" [label="(Call,err = asn1_encode_sequence_of_keys(key_data + last,\n                                               (krb5_int16)i - last + 1,\n                                               mkvno, &code))"];
"1000148" [label="(ControlStructure,goto cleanup;)"];
"1000139" [label="(Call,sizeof(*key_data))"];
"1000329" [label="(Identifier,mkvno)"];
"1000154" [label="(Call,sizeof(*key_data))"];
"1000248" [label="(Call,ret == NULL)"];
"1000357" [label="(Call,last = i + 1)"];
"1000416" [label="(Identifier,ret)"];
"1000386" [label="(Call,err != 0)"];
"1000122" [label="(Call,err = 0)"];
"1000146" [label="(Identifier,key_data)"];
"1000132" [label="(Literal,0)"];
"1000153" [label="(Identifier,n_key_data)"];
"1000105" [label="(MethodParameterIn,krb5_key_data *key_data_in)"];
"1000417" [label="(MethodReturn,RET)"];
"1000149" -> "1000108"  [label="AST: "];
"1000149" -> "1000152"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000152" -> "1000149"  [label="AST: "];
"1000159" -> "1000149"  [label="CFG: "];
"1000149" -> "1000417"  [label="DDG: key_data_in"];
"1000149" -> "1000417"  [label="DDG: n_key_data * sizeof(*key_data)"];
"1000149" -> "1000417"  [label="DDG: memcpy(key_data, key_data_in, n_key_data * sizeof(*key_data))"];
"1000145" -> "1000149"  [label="DDG: key_data"];
"1000105" -> "1000149"  [label="DDG: key_data_in"];
"1000152" -> "1000149"  [label="DDG: n_key_data"];
"1000149" -> "1000318"  [label="DDG: key_data"];
"1000149" -> "1000319"  [label="DDG: key_data"];
"1000149" -> "1000383"  [label="DDG: key_data"];
"1000145" -> "1000144"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000148" -> "1000145"  [label="CFG: "];
"1000150" -> "1000145"  [label="CFG: "];
"1000145" -> "1000417"  [label="DDG: key_data == NULL"];
"1000145" -> "1000417"  [label="DDG: NULL"];
"1000135" -> "1000145"  [label="DDG: key_data"];
"1000145" -> "1000201"  [label="DDG: NULL"];
"1000145" -> "1000248"  [label="DDG: NULL"];
"1000145" -> "1000383"  [label="DDG: key_data"];
"1000145" -> "1000391"  [label="DDG: NULL"];
"1000135" -> "1000108"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000146" -> "1000135"  [label="CFG: "];
"1000135" -> "1000417"  [label="DDG: k5calloc(n_key_data, sizeof(*key_data), &err)"];
"1000137" -> "1000135"  [label="DDG: n_key_data"];
"1000137" -> "1000135"  [label="DDG: &err"];
"1000137" -> "1000142"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000142" -> "1000137"  [label="AST: "];
"1000137" -> "1000417"  [label="DDG: &err"];
"1000137" -> "1000417"  [label="DDG: n_key_data"];
"1000130" -> "1000137"  [label="DDG: n_key_data"];
"1000106" -> "1000137"  [label="DDG: n_key_data"];
"1000137" -> "1000152"  [label="DDG: n_key_data"];
"1000137" -> "1000304"  [label="DDG: &err"];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000134" -> "1000130"  [label="CFG: "];
"1000136" -> "1000130"  [label="CFG: "];
"1000130" -> "1000417"  [label="DDG: n_key_data < 0"];
"1000130" -> "1000417"  [label="DDG: n_key_data"];
"1000106" -> "1000130"  [label="DDG: n_key_data"];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000417"  [label="DDG: n_key_data"];
"1000106" -> "1000152"  [label="DDG: n_key_data"];
"1000106" -> "1000161"  [label="DDG: n_key_data"];
"1000106" -> "1000216"  [label="DDG: n_key_data"];
"1000106" -> "1000276"  [label="DDG: n_key_data"];
"1000106" -> "1000287"  [label="DDG: n_key_data"];
"1000106" -> "1000365"  [label="DDG: n_key_data"];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000417"  [label="DDG: key_data_in"];
"1000152" -> "1000154"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000152" -> "1000161"  [label="DDG: n_key_data"];
"1000318" -> "1000316"  [label="AST: "];
"1000318" -> "1000330"  [label="CFG: "];
"1000319" -> "1000318"  [label="AST: "];
"1000322" -> "1000318"  [label="AST: "];
"1000329" -> "1000318"  [label="AST: "];
"1000330" -> "1000318"  [label="AST: "];
"1000316" -> "1000318"  [label="CFG: "];
"1000318" -> "1000417"  [label="DDG: key_data + last"];
"1000318" -> "1000417"  [label="DDG: mkvno"];
"1000318" -> "1000417"  [label="DDG: &code"];
"1000318" -> "1000417"  [label="DDG: (krb5_int16)i - last + 1"];
"1000318" -> "1000316"  [label="DDG: key_data + last"];
"1000318" -> "1000316"  [label="DDG: (krb5_int16)i - last + 1"];
"1000318" -> "1000316"  [label="DDG: mkvno"];
"1000318" -> "1000316"  [label="DDG: &code"];
"1000262" -> "1000318"  [label="DDG: last"];
"1000357" -> "1000318"  [label="DDG: last"];
"1000322" -> "1000318"  [label="DDG: (krb5_int16)i"];
"1000322" -> "1000318"  [label="DDG: last + 1"];
"1000107" -> "1000318"  [label="DDG: mkvno"];
"1000316" -> "1000299"  [label="AST: "];
"1000317" -> "1000316"  [label="AST: "];
"1000333" -> "1000316"  [label="CFG: "];
"1000316" -> "1000417"  [label="DDG: asn1_encode_sequence_of_keys(key_data + last,\n                                               (krb5_int16)i - last + 1,\n                                               mkvno, &code)"];
"1000316" -> "1000386"  [label="DDG: err"];
"1000386" -> "1000385"  [label="AST: "];
"1000386" -> "1000388"  [label="CFG: "];
"1000387" -> "1000386"  [label="AST: "];
"1000388" -> "1000386"  [label="AST: "];
"1000392" -> "1000386"  [label="CFG: "];
"1000416" -> "1000386"  [label="CFG: "];
"1000386" -> "1000417"  [label="DDG: err"];
"1000386" -> "1000417"  [label="DDG: err != 0"];
"1000252" -> "1000386"  [label="DDG: err"];
"1000122" -> "1000386"  [label="DDG: err"];
"1000319" -> "1000321"  [label="CFG: "];
"1000320" -> "1000319"  [label="AST: "];
"1000321" -> "1000319"  [label="AST: "];
"1000324" -> "1000319"  [label="CFG: "];
"1000262" -> "1000319"  [label="DDG: last"];
"1000357" -> "1000319"  [label="DDG: last"];
"1000383" -> "1000108"  [label="AST: "];
"1000383" -> "1000384"  [label="CFG: "];
"1000384" -> "1000383"  [label="AST: "];
"1000387" -> "1000383"  [label="CFG: "];
"1000383" -> "1000417"  [label="DDG: key_data"];
}
