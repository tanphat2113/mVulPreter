digraph "0_krb5_04038bf3633c4b909b5ded3072dc88c8c419bf16@API" {
"1000137" [label="(Call,k5calloc(n_key_data, sizeof(*key_data), &err))"];
"1000130" [label="(Call,n_key_data < 0)"];
"1000106" [label="(MethodParameterIn,int n_key_data)"];
"1000135" [label="(Call,key_data = k5calloc(n_key_data, sizeof(*key_data), &err))"];
"1000145" [label="(Call,key_data == NULL)"];
"1000149" [label="(Call,memcpy(key_data, key_data_in, n_key_data * sizeof(*key_data)))"];
"1000318" [label="(Call,asn1_encode_sequence_of_keys(key_data + last,\n                                               (krb5_int16)i - last + 1,\n                                               mkvno, &code))"];
"1000316" [label="(Call,err = asn1_encode_sequence_of_keys(key_data + last,\n                                               (krb5_int16)i - last + 1,\n                                               mkvno, &code))"];
"1000386" [label="(Call,err != 0)"];
"1000319" [label="(Call,key_data + last)"];
"1000383" [label="(Call,free(key_data))"];
"1000201" [label="(Call,key_data[i].key_data_contents[1] = NULL)"];
"1000248" [label="(Call,ret == NULL)"];
"1000310" [label="(Call,ret[j] == NULL)"];
"1000377" [label="(Call,ret[num_versions] = NULL)"];
"1000391" [label="(Call,ret != NULL)"];
"1000399" [label="(Call,ret[i] != NULL)"];
"1000406" [label="(Call,free (ret[i]))"];
"1000410" [label="(Call,free (ret))"];
"1000412" [label="(Call,ret = NULL)"];
"1000415" [label="(Return,return ret;)"];
"1000152" [label="(Call,n_key_data * sizeof(*key_data))"];
"1000161" [label="(Call,i < n_key_data)"];
"1000164" [label="(Call,i++)"];
"1000216" [label="(Call,n_key_data - 1)"];
"1000214" [label="(Call,i < n_key_data - 1)"];
"1000219" [label="(Call,i++)"];
"1000231" [label="(Call,i + 1)"];
"1000276" [label="(Call,i < n_key_data)"];
"1000285" [label="(Call,i == n_key_data - 1)"];
"1000279" [label="(Call,i++)"];
"1000284" [label="(Call,i == n_key_data - 1 || key_data[i + 1].key_data_kvno != currkvno)"];
"1000294" [label="(Call,i + 1)"];
"1000323" [label="(Call,(krb5_int16)i)"];
"1000322" [label="(Call,(krb5_int16)i - last + 1)"];
"1000357" [label="(Call,last = i + 1)"];
"1000326" [label="(Call,last + 1)"];
"1000359" [label="(Call,i + 1)"];
"1000363" [label="(Call,i < n_key_data - 1)"];
"1000373" [label="(Call,i + 1)"];
"1000287" [label="(Call,n_key_data - 1)"];
"1000365" [label="(Call,n_key_data - 1)"];
"1000304" [label="(Call,k5alloc(sizeof(struct berval), &err))"];
"1000300" [label="(Call,ret[j] = k5alloc(sizeof(struct berval), &err))"];
"1000108" [label="(Block,)"];
"1000249" [label="(Identifier,ret)"];
"1000365" [label="(Call,n_key_data - 1)"];
"1000326" [label="(Call,last + 1)"];
"1000382" [label="(JumpTarget,cleanup:)"];
"1000391" [label="(Call,ret != NULL)"];
"1000288" [label="(Identifier,n_key_data)"];
"1000371" [label="(Call,key_data[i + 1])"];
"1000295" [label="(Identifier,i)"];
"1000286" [label="(Identifier,i)"];
"1000375" [label="(Literal,1)"];
"1000293" [label="(Identifier,key_data)"];
"1000362" [label="(ControlStructure,if (i < n_key_data - 1))"];
"1000363" [label="(Call,i < n_key_data - 1)"];
"1000304" [label="(Call,k5alloc(sizeof(struct berval), &err))"];
"1000137" [label="(Call,k5calloc(n_key_data, sizeof(*key_data), &err))"];
"1000131" [label="(Identifier,n_key_data)"];
"1000383" [label="(Call,free(key_data))"];
"1000377" [label="(Call,ret[num_versions] = NULL)"];
"1000175" [label="(Block,)"];
"1000161" [label="(Call,i < n_key_data)"];
"1000158" [label="(Call,i = 0)"];
"1000415" [label="(Return,return ret;)"];
"1000218" [label="(Literal,1)"];
"1000360" [label="(Identifier,i)"];
"1000403" [label="(Identifier,NULL)"];
"1000134" [label="(Identifier,NULL)"];
"1000330" [label="(Call,&code)"];
"1000139" [label="(Call,sizeof(*key_data))"];
"1000122" [label="(Call,err = 0)"];
"1000154" [label="(Call,sizeof(*key_data))"];
"1000162" [label="(Identifier,i)"];
"1000309" [label="(ControlStructure,if (ret[j] == NULL))"];
"1000314" [label="(Identifier,NULL)"];
"1000153" [label="(Identifier,n_key_data)"];
"1000290" [label="(Call,key_data[i + 1].key_data_kvno != currkvno)"];
"1000285" [label="(Call,i == n_key_data - 1)"];
"1000361" [label="(Literal,1)"];
"1000307" [label="(Call,&err)"];
"1000277" [label="(Identifier,i)"];
"1000302" [label="(Identifier,ret)"];
"1000405" [label="(Identifier,i)"];
"1000359" [label="(Call,i + 1)"];
"1000232" [label="(Identifier,i)"];
"1000136" [label="(Identifier,key_data)"];
"1000144" [label="(ControlStructure,if (key_data == NULL))"];
"1000212" [label="(Identifier,i)"];
"1000253" [label="(Identifier,err)"];
"1000311" [label="(Call,ret[j])"];
"1000413" [label="(Identifier,ret)"];
"1000256" [label="(ControlStructure,for (i = 0, last = 0, j = 0, currkvno = key_data[0].key_data_kvno; i < n_key_data; i++))"];
"1000319" [label="(Call,key_data + last)"];
"1000323" [label="(Call,(krb5_int16)i)"];
"1000147" [label="(Identifier,NULL)"];
"1000322" [label="(Call,(krb5_int16)i - last + 1)"];
"1000150" [label="(Identifier,key_data)"];
"1000216" [label="(Call,n_key_data - 1)"];
"1000159" [label="(Identifier,i)"];
"1000366" [label="(Identifier,n_key_data)"];
"1000165" [label="(Identifier,i)"];
"1000238" [label="(Identifier,ret)"];
"1000231" [label="(Call,i + 1)"];
"1000259" [label="(Identifier,i)"];
"1000217" [label="(Identifier,n_key_data)"];
"1000280" [label="(Identifier,i)"];
"1000201" [label="(Call,key_data[i].key_data_contents[1] = NULL)"];
"1000209" [label="(Identifier,NULL)"];
"1000329" [label="(Identifier,mkvno)"];
"1000357" [label="(Call,last = i + 1)"];
"1000393" [label="(Identifier,NULL)"];
"1000164" [label="(Call,i++)"];
"1000386" [label="(Call,err != 0)"];
"1000373" [label="(Call,i + 1)"];
"1000132" [label="(Literal,0)"];
"1000105" [label="(MethodParameterIn,krb5_key_data *key_data_in)"];
"1000292" [label="(Call,key_data[i + 1])"];
"1000417" [label="(MethodReturn,RET)"];
"1000130" [label="(Call,n_key_data < 0)"];
"1000385" [label="(ControlStructure,if (err != 0))"];
"1000142" [label="(Call,&err)"];
"1000312" [label="(Identifier,ret)"];
"1000395" [label="(ControlStructure,for (i = 0; ret[i] != NULL; i++))"];
"1000279" [label="(Call,i++)"];
"1000106" [label="(MethodParameterIn,int n_key_data)"];
"1000392" [label="(Identifier,ret)"];
"1000151" [label="(Identifier,key_data_in)"];
"1000299" [label="(Block,)"];
"1000237" [label="(Call,ret = (struct berval **) calloc (num_versions + 1, sizeof (struct berval *)))"];
"1000315" [label="(ControlStructure,goto cleanup;)"];
"1000110" [label="(Call,**ret = NULL)"];
"1000325" [label="(Identifier,i)"];
"1000276" [label="(Call,i < n_key_data)"];
"1000379" [label="(Identifier,ret)"];
"1000300" [label="(Call,ret[j] = k5alloc(sizeof(struct berval), &err))"];
"1000387" [label="(Identifier,err)"];
"1000129" [label="(ControlStructure,if (n_key_data < 0))"];
"1000407" [label="(Call,ret[i])"];
"1000411" [label="(Identifier,ret)"];
"1000328" [label="(Literal,1)"];
"1000408" [label="(Identifier,ret)"];
"1000320" [label="(Identifier,key_data)"];
"1000211" [label="(Call,i = 0)"];
"1000406" [label="(Call,free (ret[i]))"];
"1000294" [label="(Call,i + 1)"];
"1000400" [label="(Call,ret[i])"];
"1000310" [label="(Call,ret[j] == NULL)"];
"1000210" [label="(ControlStructure,for (i = 0; i < n_key_data - 1; i++))"];
"1000317" [label="(Identifier,err)"];
"1000107" [label="(MethodParameterIn,krb5_kvno mkvno)"];
"1000214" [label="(Call,i < n_key_data - 1)"];
"1000364" [label="(Identifier,i)"];
"1000252" [label="(Call,err = ENOMEM)"];
"1000233" [label="(Literal,1)"];
"1000296" [label="(Literal,1)"];
"1000397" [label="(Identifier,i)"];
"1000316" [label="(Call,err = asn1_encode_sequence_of_keys(key_data + last,\n                                               (krb5_int16)i - last + 1,\n                                               mkvno, &code))"];
"1000202" [label="(Call,key_data[i].key_data_contents[1])"];
"1000171" [label="(Identifier,key_data)"];
"1000248" [label="(Call,ret == NULL)"];
"1000146" [label="(Identifier,key_data)"];
"1000399" [label="(Call,ret[i] != NULL)"];
"1000305" [label="(Call,sizeof(struct berval))"];
"1000327" [label="(Identifier,last)"];
"1000247" [label="(ControlStructure,if (ret == NULL))"];
"1000283" [label="(ControlStructure,if (i == n_key_data - 1 || key_data[i + 1].key_data_kvno != currkvno))"];
"1000138" [label="(Identifier,n_key_data)"];
"1000394" [label="(Block,)"];
"1000219" [label="(Call,i++)"];
"1000220" [label="(Identifier,i)"];
"1000410" [label="(Call,free (ret))"];
"1000145" [label="(Call,key_data == NULL)"];
"1000163" [label="(Identifier,n_key_data)"];
"1000157" [label="(ControlStructure,for (i = 0; i < n_key_data; i++))"];
"1000278" [label="(Identifier,n_key_data)"];
"1000333" [label="(Identifier,err)"];
"1000225" [label="(Identifier,key_data)"];
"1000369" [label="(Identifier,currkvno)"];
"1000284" [label="(Call,i == n_key_data - 1 || key_data[i + 1].key_data_kvno != currkvno)"];
"1000258" [label="(Call,i = 0)"];
"1000135" [label="(Call,key_data = k5calloc(n_key_data, sizeof(*key_data), &err))"];
"1000262" [label="(Call,last = 0)"];
"1000388" [label="(Literal,0)"];
"1000152" [label="(Call,n_key_data * sizeof(*key_data))"];
"1000318" [label="(Call,asn1_encode_sequence_of_keys(key_data + last,\n                                               (krb5_int16)i - last + 1,\n                                               mkvno, &code))"];
"1000301" [label="(Call,ret[j])"];
"1000390" [label="(ControlStructure,if (ret != NULL))"];
"1000367" [label="(Literal,1)"];
"1000287" [label="(Call,n_key_data - 1)"];
"1000149" [label="(Call,memcpy(key_data, key_data_in, n_key_data * sizeof(*key_data)))"];
"1000378" [label="(Call,ret[num_versions])"];
"1000358" [label="(Identifier,last)"];
"1000289" [label="(Literal,1)"];
"1000414" [label="(Identifier,NULL)"];
"1000381" [label="(Identifier,NULL)"];
"1000321" [label="(Identifier,last)"];
"1000384" [label="(Identifier,key_data)"];
"1000250" [label="(Identifier,NULL)"];
"1000148" [label="(ControlStructure,goto cleanup;)"];
"1000416" [label="(Identifier,ret)"];
"1000412" [label="(Call,ret = NULL)"];
"1000215" [label="(Identifier,i)"];
"1000229" [label="(Call,key_data[i + 1])"];
"1000374" [label="(Identifier,i)"];
"1000137" -> "1000135"  [label="AST: "];
"1000137" -> "1000142"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000142" -> "1000137"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000137" -> "1000417"  [label="DDG: &err"];
"1000137" -> "1000417"  [label="DDG: n_key_data"];
"1000137" -> "1000135"  [label="DDG: n_key_data"];
"1000137" -> "1000135"  [label="DDG: &err"];
"1000130" -> "1000137"  [label="DDG: n_key_data"];
"1000106" -> "1000137"  [label="DDG: n_key_data"];
"1000137" -> "1000152"  [label="DDG: n_key_data"];
"1000137" -> "1000304"  [label="DDG: &err"];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000134" -> "1000130"  [label="CFG: "];
"1000136" -> "1000130"  [label="CFG: "];
"1000130" -> "1000417"  [label="DDG: n_key_data < 0"];
"1000130" -> "1000417"  [label="DDG: n_key_data"];
"1000106" -> "1000130"  [label="DDG: n_key_data"];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000417"  [label="DDG: n_key_data"];
"1000106" -> "1000152"  [label="DDG: n_key_data"];
"1000106" -> "1000161"  [label="DDG: n_key_data"];
"1000106" -> "1000216"  [label="DDG: n_key_data"];
"1000106" -> "1000276"  [label="DDG: n_key_data"];
"1000106" -> "1000287"  [label="DDG: n_key_data"];
"1000106" -> "1000365"  [label="DDG: n_key_data"];
"1000135" -> "1000108"  [label="AST: "];
"1000136" -> "1000135"  [label="AST: "];
"1000146" -> "1000135"  [label="CFG: "];
"1000135" -> "1000417"  [label="DDG: k5calloc(n_key_data, sizeof(*key_data), &err)"];
"1000135" -> "1000145"  [label="DDG: key_data"];
"1000145" -> "1000144"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000148" -> "1000145"  [label="CFG: "];
"1000150" -> "1000145"  [label="CFG: "];
"1000145" -> "1000417"  [label="DDG: key_data == NULL"];
"1000145" -> "1000417"  [label="DDG: NULL"];
"1000145" -> "1000149"  [label="DDG: key_data"];
"1000145" -> "1000201"  [label="DDG: NULL"];
"1000145" -> "1000248"  [label="DDG: NULL"];
"1000145" -> "1000383"  [label="DDG: key_data"];
"1000145" -> "1000391"  [label="DDG: NULL"];
"1000149" -> "1000108"  [label="AST: "];
"1000149" -> "1000152"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000152" -> "1000149"  [label="AST: "];
"1000159" -> "1000149"  [label="CFG: "];
"1000149" -> "1000417"  [label="DDG: key_data_in"];
"1000149" -> "1000417"  [label="DDG: n_key_data * sizeof(*key_data)"];
"1000149" -> "1000417"  [label="DDG: memcpy(key_data, key_data_in, n_key_data * sizeof(*key_data))"];
"1000105" -> "1000149"  [label="DDG: key_data_in"];
"1000152" -> "1000149"  [label="DDG: n_key_data"];
"1000149" -> "1000318"  [label="DDG: key_data"];
"1000149" -> "1000319"  [label="DDG: key_data"];
"1000149" -> "1000383"  [label="DDG: key_data"];
"1000318" -> "1000316"  [label="AST: "];
"1000318" -> "1000330"  [label="CFG: "];
"1000319" -> "1000318"  [label="AST: "];
"1000322" -> "1000318"  [label="AST: "];
"1000329" -> "1000318"  [label="AST: "];
"1000330" -> "1000318"  [label="AST: "];
"1000316" -> "1000318"  [label="CFG: "];
"1000318" -> "1000417"  [label="DDG: key_data + last"];
"1000318" -> "1000417"  [label="DDG: mkvno"];
"1000318" -> "1000417"  [label="DDG: &code"];
"1000318" -> "1000417"  [label="DDG: (krb5_int16)i - last + 1"];
"1000318" -> "1000316"  [label="DDG: key_data + last"];
"1000318" -> "1000316"  [label="DDG: (krb5_int16)i - last + 1"];
"1000318" -> "1000316"  [label="DDG: mkvno"];
"1000318" -> "1000316"  [label="DDG: &code"];
"1000262" -> "1000318"  [label="DDG: last"];
"1000357" -> "1000318"  [label="DDG: last"];
"1000322" -> "1000318"  [label="DDG: (krb5_int16)i"];
"1000322" -> "1000318"  [label="DDG: last + 1"];
"1000107" -> "1000318"  [label="DDG: mkvno"];
"1000316" -> "1000299"  [label="AST: "];
"1000317" -> "1000316"  [label="AST: "];
"1000333" -> "1000316"  [label="CFG: "];
"1000316" -> "1000417"  [label="DDG: asn1_encode_sequence_of_keys(key_data + last,\n                                               (krb5_int16)i - last + 1,\n                                               mkvno, &code)"];
"1000316" -> "1000386"  [label="DDG: err"];
"1000386" -> "1000385"  [label="AST: "];
"1000386" -> "1000388"  [label="CFG: "];
"1000387" -> "1000386"  [label="AST: "];
"1000388" -> "1000386"  [label="AST: "];
"1000392" -> "1000386"  [label="CFG: "];
"1000416" -> "1000386"  [label="CFG: "];
"1000386" -> "1000417"  [label="DDG: err"];
"1000386" -> "1000417"  [label="DDG: err != 0"];
"1000252" -> "1000386"  [label="DDG: err"];
"1000122" -> "1000386"  [label="DDG: err"];
"1000319" -> "1000321"  [label="CFG: "];
"1000320" -> "1000319"  [label="AST: "];
"1000321" -> "1000319"  [label="AST: "];
"1000324" -> "1000319"  [label="CFG: "];
"1000262" -> "1000319"  [label="DDG: last"];
"1000357" -> "1000319"  [label="DDG: last"];
"1000383" -> "1000108"  [label="AST: "];
"1000383" -> "1000384"  [label="CFG: "];
"1000384" -> "1000383"  [label="AST: "];
"1000387" -> "1000383"  [label="CFG: "];
"1000383" -> "1000417"  [label="DDG: key_data"];
"1000201" -> "1000175"  [label="AST: "];
"1000201" -> "1000209"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000209" -> "1000201"  [label="AST: "];
"1000165" -> "1000201"  [label="CFG: "];
"1000201" -> "1000417"  [label="DDG: key_data[i].key_data_contents[1]"];
"1000248" -> "1000247"  [label="AST: "];
"1000248" -> "1000250"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="AST: "];
"1000253" -> "1000248"  [label="CFG: "];
"1000259" -> "1000248"  [label="CFG: "];
"1000248" -> "1000417"  [label="DDG: ret == NULL"];
"1000248" -> "1000417"  [label="DDG: NULL"];
"1000248" -> "1000417"  [label="DDG: ret"];
"1000237" -> "1000248"  [label="DDG: ret"];
"1000248" -> "1000310"  [label="DDG: ret"];
"1000248" -> "1000310"  [label="DDG: NULL"];
"1000248" -> "1000377"  [label="DDG: NULL"];
"1000248" -> "1000391"  [label="DDG: ret"];
"1000248" -> "1000391"  [label="DDG: NULL"];
"1000248" -> "1000415"  [label="DDG: ret"];
"1000310" -> "1000309"  [label="AST: "];
"1000310" -> "1000314"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000314" -> "1000310"  [label="AST: "];
"1000315" -> "1000310"  [label="CFG: "];
"1000317" -> "1000310"  [label="CFG: "];
"1000310" -> "1000417"  [label="DDG: ret[j] == NULL"];
"1000310" -> "1000417"  [label="DDG: ret[j]"];
"1000310" -> "1000417"  [label="DDG: NULL"];
"1000300" -> "1000310"  [label="DDG: ret[j]"];
"1000310" -> "1000377"  [label="DDG: NULL"];
"1000310" -> "1000391"  [label="DDG: ret[j]"];
"1000310" -> "1000391"  [label="DDG: NULL"];
"1000310" -> "1000410"  [label="DDG: ret[j]"];
"1000310" -> "1000415"  [label="DDG: ret[j]"];
"1000377" -> "1000108"  [label="AST: "];
"1000377" -> "1000381"  [label="CFG: "];
"1000378" -> "1000377"  [label="AST: "];
"1000381" -> "1000377"  [label="AST: "];
"1000382" -> "1000377"  [label="CFG: "];
"1000377" -> "1000417"  [label="DDG: ret[num_versions]"];
"1000377" -> "1000417"  [label="DDG: NULL"];
"1000377" -> "1000391"  [label="DDG: ret[num_versions]"];
"1000377" -> "1000410"  [label="DDG: ret[num_versions]"];
"1000377" -> "1000415"  [label="DDG: ret[num_versions]"];
"1000391" -> "1000390"  [label="AST: "];
"1000391" -> "1000393"  [label="CFG: "];
"1000392" -> "1000391"  [label="AST: "];
"1000393" -> "1000391"  [label="AST: "];
"1000397" -> "1000391"  [label="CFG: "];
"1000416" -> "1000391"  [label="CFG: "];
"1000391" -> "1000417"  [label="DDG: ret"];
"1000391" -> "1000417"  [label="DDG: NULL"];
"1000391" -> "1000417"  [label="DDG: ret != NULL"];
"1000110" -> "1000391"  [label="DDG: ret"];
"1000391" -> "1000399"  [label="DDG: ret"];
"1000391" -> "1000399"  [label="DDG: NULL"];
"1000391" -> "1000406"  [label="DDG: ret"];
"1000391" -> "1000410"  [label="DDG: ret"];
"1000391" -> "1000415"  [label="DDG: ret"];
"1000399" -> "1000395"  [label="AST: "];
"1000399" -> "1000403"  [label="CFG: "];
"1000400" -> "1000399"  [label="AST: "];
"1000403" -> "1000399"  [label="AST: "];
"1000408" -> "1000399"  [label="CFG: "];
"1000411" -> "1000399"  [label="CFG: "];
"1000399" -> "1000417"  [label="DDG: ret[i]"];
"1000399" -> "1000417"  [label="DDG: ret[i] != NULL"];
"1000406" -> "1000399"  [label="DDG: ret[i]"];
"1000399" -> "1000406"  [label="DDG: ret[i]"];
"1000399" -> "1000410"  [label="DDG: ret[i]"];
"1000399" -> "1000412"  [label="DDG: NULL"];
"1000399" -> "1000415"  [label="DDG: ret[i]"];
"1000406" -> "1000395"  [label="AST: "];
"1000406" -> "1000407"  [label="CFG: "];
"1000407" -> "1000406"  [label="AST: "];
"1000405" -> "1000406"  [label="CFG: "];
"1000410" -> "1000394"  [label="AST: "];
"1000410" -> "1000411"  [label="CFG: "];
"1000411" -> "1000410"  [label="AST: "];
"1000413" -> "1000410"  [label="CFG: "];
"1000412" -> "1000394"  [label="AST: "];
"1000412" -> "1000414"  [label="CFG: "];
"1000413" -> "1000412"  [label="AST: "];
"1000414" -> "1000412"  [label="AST: "];
"1000416" -> "1000412"  [label="CFG: "];
"1000412" -> "1000417"  [label="DDG: NULL"];
"1000412" -> "1000417"  [label="DDG: ret"];
"1000412" -> "1000415"  [label="DDG: ret"];
"1000415" -> "1000108"  [label="AST: "];
"1000415" -> "1000416"  [label="CFG: "];
"1000416" -> "1000415"  [label="AST: "];
"1000417" -> "1000415"  [label="CFG: "];
"1000415" -> "1000417"  [label="DDG: <RET>"];
"1000416" -> "1000415"  [label="DDG: ret"];
"1000110" -> "1000415"  [label="DDG: ret"];
"1000152" -> "1000154"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000152" -> "1000161"  [label="DDG: n_key_data"];
"1000161" -> "1000157"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000171" -> "1000161"  [label="CFG: "];
"1000212" -> "1000161"  [label="CFG: "];
"1000161" -> "1000417"  [label="DDG: i < n_key_data"];
"1000158" -> "1000161"  [label="DDG: i"];
"1000164" -> "1000161"  [label="DDG: i"];
"1000161" -> "1000164"  [label="DDG: i"];
"1000161" -> "1000216"  [label="DDG: n_key_data"];
"1000164" -> "1000157"  [label="AST: "];
"1000164" -> "1000165"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000162" -> "1000164"  [label="CFG: "];
"1000216" -> "1000214"  [label="AST: "];
"1000216" -> "1000218"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000218" -> "1000216"  [label="AST: "];
"1000214" -> "1000216"  [label="CFG: "];
"1000216" -> "1000417"  [label="DDG: n_key_data"];
"1000216" -> "1000214"  [label="DDG: n_key_data"];
"1000216" -> "1000214"  [label="DDG: 1"];
"1000216" -> "1000276"  [label="DDG: n_key_data"];
"1000214" -> "1000210"  [label="AST: "];
"1000215" -> "1000214"  [label="AST: "];
"1000225" -> "1000214"  [label="CFG: "];
"1000238" -> "1000214"  [label="CFG: "];
"1000214" -> "1000417"  [label="DDG: n_key_data - 1"];
"1000214" -> "1000417"  [label="DDG: i < n_key_data - 1"];
"1000214" -> "1000417"  [label="DDG: i"];
"1000211" -> "1000214"  [label="DDG: i"];
"1000219" -> "1000214"  [label="DDG: i"];
"1000214" -> "1000219"  [label="DDG: i"];
"1000214" -> "1000231"  [label="DDG: i"];
"1000219" -> "1000210"  [label="AST: "];
"1000219" -> "1000220"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000215" -> "1000219"  [label="CFG: "];
"1000231" -> "1000229"  [label="AST: "];
"1000231" -> "1000233"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000233" -> "1000231"  [label="AST: "];
"1000229" -> "1000231"  [label="CFG: "];
"1000276" -> "1000256"  [label="AST: "];
"1000276" -> "1000278"  [label="CFG: "];
"1000277" -> "1000276"  [label="AST: "];
"1000278" -> "1000276"  [label="AST: "];
"1000286" -> "1000276"  [label="CFG: "];
"1000379" -> "1000276"  [label="CFG: "];
"1000276" -> "1000417"  [label="DDG: n_key_data"];
"1000276" -> "1000417"  [label="DDG: i < n_key_data"];
"1000276" -> "1000417"  [label="DDG: i"];
"1000258" -> "1000276"  [label="DDG: i"];
"1000279" -> "1000276"  [label="DDG: i"];
"1000365" -> "1000276"  [label="DDG: n_key_data"];
"1000287" -> "1000276"  [label="DDG: n_key_data"];
"1000276" -> "1000285"  [label="DDG: i"];
"1000276" -> "1000287"  [label="DDG: n_key_data"];
"1000285" -> "1000284"  [label="AST: "];
"1000285" -> "1000287"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000285"  [label="AST: "];
"1000293" -> "1000285"  [label="CFG: "];
"1000284" -> "1000285"  [label="CFG: "];
"1000285" -> "1000417"  [label="DDG: i"];
"1000285" -> "1000417"  [label="DDG: n_key_data - 1"];
"1000285" -> "1000279"  [label="DDG: i"];
"1000285" -> "1000284"  [label="DDG: i"];
"1000285" -> "1000284"  [label="DDG: n_key_data - 1"];
"1000287" -> "1000285"  [label="DDG: n_key_data"];
"1000287" -> "1000285"  [label="DDG: 1"];
"1000285" -> "1000294"  [label="DDG: i"];
"1000285" -> "1000323"  [label="DDG: i"];
"1000279" -> "1000256"  [label="AST: "];
"1000279" -> "1000280"  [label="CFG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000277" -> "1000279"  [label="CFG: "];
"1000363" -> "1000279"  [label="DDG: i"];
"1000284" -> "1000283"  [label="AST: "];
"1000284" -> "1000290"  [label="CFG: "];
"1000290" -> "1000284"  [label="AST: "];
"1000302" -> "1000284"  [label="CFG: "];
"1000280" -> "1000284"  [label="CFG: "];
"1000284" -> "1000417"  [label="DDG: i == n_key_data - 1"];
"1000284" -> "1000417"  [label="DDG: i == n_key_data - 1 || key_data[i + 1].key_data_kvno != currkvno"];
"1000284" -> "1000417"  [label="DDG: key_data[i + 1].key_data_kvno != currkvno"];
"1000290" -> "1000284"  [label="DDG: key_data[i + 1].key_data_kvno"];
"1000290" -> "1000284"  [label="DDG: currkvno"];
"1000294" -> "1000292"  [label="AST: "];
"1000294" -> "1000296"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000296" -> "1000294"  [label="AST: "];
"1000292" -> "1000294"  [label="CFG: "];
"1000294" -> "1000417"  [label="DDG: i"];
"1000323" -> "1000322"  [label="AST: "];
"1000323" -> "1000325"  [label="CFG: "];
"1000324" -> "1000323"  [label="AST: "];
"1000325" -> "1000323"  [label="AST: "];
"1000327" -> "1000323"  [label="CFG: "];
"1000323" -> "1000417"  [label="DDG: i"];
"1000323" -> "1000322"  [label="DDG: i"];
"1000323" -> "1000357"  [label="DDG: i"];
"1000323" -> "1000359"  [label="DDG: i"];
"1000323" -> "1000363"  [label="DDG: i"];
"1000322" -> "1000326"  [label="CFG: "];
"1000326" -> "1000322"  [label="AST: "];
"1000329" -> "1000322"  [label="CFG: "];
"1000322" -> "1000417"  [label="DDG: last + 1"];
"1000322" -> "1000417"  [label="DDG: (krb5_int16)i"];
"1000262" -> "1000322"  [label="DDG: last"];
"1000357" -> "1000322"  [label="DDG: last"];
"1000357" -> "1000299"  [label="AST: "];
"1000357" -> "1000359"  [label="CFG: "];
"1000358" -> "1000357"  [label="AST: "];
"1000359" -> "1000357"  [label="AST: "];
"1000364" -> "1000357"  [label="CFG: "];
"1000357" -> "1000417"  [label="DDG: last"];
"1000357" -> "1000417"  [label="DDG: i + 1"];
"1000357" -> "1000326"  [label="DDG: last"];
"1000326" -> "1000328"  [label="CFG: "];
"1000327" -> "1000326"  [label="AST: "];
"1000328" -> "1000326"  [label="AST: "];
"1000326" -> "1000417"  [label="DDG: last"];
"1000262" -> "1000326"  [label="DDG: last"];
"1000359" -> "1000361"  [label="CFG: "];
"1000360" -> "1000359"  [label="AST: "];
"1000361" -> "1000359"  [label="AST: "];
"1000363" -> "1000362"  [label="AST: "];
"1000363" -> "1000365"  [label="CFG: "];
"1000364" -> "1000363"  [label="AST: "];
"1000365" -> "1000363"  [label="AST: "];
"1000369" -> "1000363"  [label="CFG: "];
"1000280" -> "1000363"  [label="CFG: "];
"1000363" -> "1000417"  [label="DDG: n_key_data - 1"];
"1000363" -> "1000417"  [label="DDG: i < n_key_data - 1"];
"1000365" -> "1000363"  [label="DDG: n_key_data"];
"1000365" -> "1000363"  [label="DDG: 1"];
"1000363" -> "1000373"  [label="DDG: i"];
"1000373" -> "1000371"  [label="AST: "];
"1000373" -> "1000375"  [label="CFG: "];
"1000374" -> "1000373"  [label="AST: "];
"1000375" -> "1000373"  [label="AST: "];
"1000371" -> "1000373"  [label="CFG: "];
"1000287" -> "1000289"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000287"  [label="AST: "];
"1000287" -> "1000417"  [label="DDG: n_key_data"];
"1000287" -> "1000365"  [label="DDG: n_key_data"];
"1000365" -> "1000367"  [label="CFG: "];
"1000366" -> "1000365"  [label="AST: "];
"1000367" -> "1000365"  [label="AST: "];
"1000304" -> "1000300"  [label="AST: "];
"1000304" -> "1000307"  [label="CFG: "];
"1000305" -> "1000304"  [label="AST: "];
"1000307" -> "1000304"  [label="AST: "];
"1000300" -> "1000304"  [label="CFG: "];
"1000304" -> "1000417"  [label="DDG: &err"];
"1000304" -> "1000300"  [label="DDG: &err"];
"1000300" -> "1000299"  [label="AST: "];
"1000301" -> "1000300"  [label="AST: "];
"1000312" -> "1000300"  [label="CFG: "];
"1000300" -> "1000417"  [label="DDG: k5alloc(sizeof(struct berval), &err)"];
}
