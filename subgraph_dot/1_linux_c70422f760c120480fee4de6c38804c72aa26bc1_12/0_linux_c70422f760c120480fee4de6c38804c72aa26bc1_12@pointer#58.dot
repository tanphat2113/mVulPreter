digraph "0_linux_c70422f760c120480fee4de6c38804c72aa26bc1_12@pointer" {
"1000353" [label="(Call,security_inode_getsecctx(d_inode(dentry),\n\t\t\t\t\t\t&context, &contextlen))"];
"1000354" [label="(Call,d_inode(dentry))"];
"1000288" [label="(Call,fh_compose(tempfh, exp, dentry, NULL))"];
"1000283" [label="(Call,fh_init(tempfh, NFS4_FHSIZE))"];
"1000280" [label="(Call,!tempfh)"];
"1000270" [label="(Call,tempfh = kmalloc(sizeof(struct svc_fh), GFP_KERNEL))"];
"1000272" [label="(Call,kmalloc(sizeof(struct svc_fh), GFP_KERNEL))"];
"1000105" [label="(MethodParameterIn,struct svc_export *exp)"];
"1000106" [label="(MethodParameterIn,struct dentry *dentry)"];
"1000306" [label="(Call,nfsd4_get_nfs4_acl(rqstp, dentry, &acl))"];
"1000186" [label="(Call,SVC_NET(rqstp))"];
"1000108" [label="(MethodParameterIn,struct svc_rqst *rqstp)"];
"1000351" [label="(Call,err = security_inode_getsecctx(d_inode(dentry),\n\t\t\t\t\t\t&context, &contextlen))"];
"1000367" [label="(Call,err == 0)"];
"1000365" [label="(Call,contextsupport = (err == 0))"];
"1000440" [label="(Call,!contextsupport)"];
"1000376" [label="(Call,err == -EOPNOTSUPP)"];
"1001926" [label="(Call,nfserrno(err))"];
"1001924" [label="(Call,status = nfserrno(err))"];
"1001921" [label="(Return,return status;)"];
"1000441" [label="(Identifier,contextsupport)"];
"1000219" [label="(Call,err = vfs_getattr(&path, &stat, STATX_BASIC_STATS, AT_STATX_SYNC_AS_STAT))"];
"1001801" [label="(Call,status = nfsd4_encode_layout_types(xdr, exp->ex_layout_types))"];
"1001204" [label="(Call,status = nfsd4_encode_fs_locations(xdr, rqstp, exp))"];
"1000105" [label="(MethodParameterIn,struct svc_export *exp)"];
"1000615" [label="(Call,d_inode(dentry))"];
"1000358" [label="(Call,&contextlen)"];
"1000611" [label="(Call,encode_change(p, &stat, d_inode(dentry), exp))"];
"1001779" [label="(Call,get_parent_attributes(exp, &parent_stat))"];
"1000296" [label="(Call,fhp = tempfh)"];
"1000289" [label="(Identifier,tempfh)"];
"1000270" [label="(Call,tempfh = kmalloc(sizeof(struct svc_fh), GFP_KERNEL))"];
"1001435" [label="(Call,nfsd4_encode_group(xdr, rqstp, stat.gid))"];
"1000378" [label="(Call,-EOPNOTSUPP)"];
"1000284" [label="(Identifier,tempfh)"];
"1000332" [label="(Call,err != 0)"];
"1000272" [label="(Call,kmalloc(sizeof(struct svc_fh), GFP_KERNEL))"];
"1000444" [label="(Identifier,supp)"];
"1000285" [label="(Identifier,NFS4_FHSIZE)"];
"1000361" [label="(Call,err = -EOPNOTSUPP)"];
"1000250" [label="(Call,err = vfs_statfs(&path, &statfs))"];
"1001924" [label="(Call,status = nfserrno(err))"];
"1001433" [label="(Call,status = nfsd4_encode_group(xdr, rqstp, stat.gid))"];
"1000290" [label="(Identifier,exp)"];
"1000357" [label="(Identifier,context)"];
"1000306" [label="(Call,nfsd4_get_nfs4_acl(rqstp, dentry, &acl))"];
"1000369" [label="(Literal,0)"];
"1000291" [label="(Identifier,dentry)"];
"1000269" [label="(Block,)"];
"1001898" [label="(Call,status = nfs_ok)"];
"1000381" [label="(Identifier,bmval2)"];
"1000864" [label="(Call,acl == NULL)"];
"1000387" [label="(Call,status = nfsd4_encode_bitmap(xdr, bmval0, bmval1, bmval2))"];
"1000368" [label="(Identifier,err)"];
"1000345" [label="(ControlStructure,if (exp->ex_flags & NFSEXP_SECURITY_LABEL))"];
"1000283" [label="(Call,fh_init(tempfh, NFS4_FHSIZE))"];
"1000288" [label="(Call,fh_compose(tempfh, exp, dentry, NULL))"];
"1000366" [label="(Identifier,contextsupport)"];
"1000276" [label="(Call,status = nfserr_jukebox)"];
"1000450" [label="(Identifier,supp)"];
"1000280" [label="(Call,!tempfh)"];
"1000186" [label="(Call,SVC_NET(rqstp))"];
"1000352" [label="(Identifier,err)"];
"1000110" [label="(Block,)"];
"1000287" [label="(Identifier,status)"];
"1000354" [label="(Call,d_inode(dentry))"];
"1000376" [label="(Call,err == -EOPNOTSUPP)"];
"1000275" [label="(Identifier,GFP_KERNEL)"];
"1001816" [label="(Call,status = nfsd4_encode_layout_types(xdr, exp->ex_layout_types))"];
"1000351" [label="(Call,err = security_inode_getsecctx(d_inode(dentry),\n\t\t\t\t\t\t&context, &contextlen))"];
"1000205" [label="(Call,status = fattr_handle_absent_fs(&bmval0, &bmval1, &bmval2, &rdattr_err))"];
"1001344" [label="(Call,svc_max_payload(rqstp))"];
"1000108" [label="(MethodParameterIn,struct svc_rqst *rqstp)"];
"1000439" [label="(ControlStructure,if (!contextsupport))"];
"1000353" [label="(Call,security_inode_getsecctx(d_inode(dentry),\n\t\t\t\t\t\t&context, &contextlen))"];
"1000367" [label="(Call,err == 0)"];
"1000385" [label="(Identifier,err)"];
"1001853" [label="(Call,status = nfsd4_encode_bitmap(xdr, NFSD_SUPPATTR_EXCLCREAT_WORD0,\n\t\t\t\t\t\t  NFSD_SUPPATTR_EXCLCREAT_WORD1,\n\t\t\t\t\t\t  NFSD_SUPPATTR_EXCLCREAT_WORD2))"];
"1000271" [label="(Identifier,tempfh)"];
"1000440" [label="(Call,!contextsupport)"];
"1000282" [label="(ControlStructure,goto out;)"];
"1000286" [label="(Call,status = fh_compose(tempfh, exp, dentry, NULL))"];
"1001930" [label="(Call,status = nfserr_resource)"];
"1001767" [label="(Call,dentry == exp->ex_path.mnt->mnt_root)"];
"1000307" [label="(Identifier,rqstp)"];
"1000550" [label="(Call,status = nfserr_serverfault)"];
"1000273" [label="(Call,sizeof(struct svc_fh))"];
"1000281" [label="(Identifier,tempfh)"];
"1000326" [label="(Call,status = nfserr_attrnotsupp)"];
"1000292" [label="(Identifier,NULL)"];
"1001921" [label="(Return,return status;)"];
"1000308" [label="(Identifier,dentry)"];
"1000355" [label="(Identifier,dentry)"];
"1001928" [label="(ControlStructure,goto out;)"];
"1000956" [label="(Call,status = nfsd4_encode_aclname(xdr, rqstp, ace))"];
"1000187" [label="(Identifier,rqstp)"];
"1000344" [label="(Block,)"];
"1000372" [label="(Identifier,bmval2)"];
"1000164" [label="(Call,contextsupport = false)"];
"1001926" [label="(Call,nfserrno(err))"];
"1000377" [label="(Identifier,err)"];
"1001777" [label="(Call,err = get_parent_attributes(exp, &parent_stat))"];
"1001927" [label="(Identifier,err)"];
"1001206" [label="(Call,nfsd4_encode_fs_locations(xdr, rqstp, exp))"];
"1001322" [label="(Call,svc_max_payload(rqstp))"];
"1000106" [label="(MethodParameterIn,struct dentry *dentry)"];
"1000356" [label="(Call,&context)"];
"1001912" [label="(Call,fh_put(tempfh))"];
"1001419" [label="(Call,nfsd4_encode_user(xdr, rqstp, stat.uid))"];
"1001922" [label="(Identifier,status)"];
"1000185" [label="(Call,net_generic(SVC_NET(rqstp), nfsd_net_id))"];
"1001868" [label="(Call,status = nfsd4_encode_security_label(xdr, rqstp, context,\n\t\t\t\t\t\t\t\tcontextlen))"];
"1001417" [label="(Call,status = nfsd4_encode_user(xdr, rqstp, stat.uid))"];
"1000304" [label="(Call,err = nfsd4_get_nfs4_acl(rqstp, dentry, &acl))"];
"1000188" [label="(Identifier,nfsd_net_id)"];
"1001934" [label="(MethodReturn,RET)"];
"1000365" [label="(Call,contextsupport = (err == 0))"];
"1001925" [label="(Identifier,status)"];
"1000375" [label="(ControlStructure,if (err == -EOPNOTSUPP))"];
"1000958" [label="(Call,nfsd4_encode_aclname(xdr, rqstp, ace))"];
"1000279" [label="(ControlStructure,if (!tempfh))"];
"1001870" [label="(Call,nfsd4_encode_security_label(xdr, rqstp, context,\n\t\t\t\t\t\t\t\tcontextlen))"];
"1000277" [label="(Identifier,status)"];
"1000309" [label="(Call,&acl)"];
"1000353" -> "1000351"  [label="AST: "];
"1000353" -> "1000358"  [label="CFG: "];
"1000354" -> "1000353"  [label="AST: "];
"1000356" -> "1000353"  [label="AST: "];
"1000358" -> "1000353"  [label="AST: "];
"1000351" -> "1000353"  [label="CFG: "];
"1000353" -> "1001934"  [label="DDG: &context"];
"1000353" -> "1001934"  [label="DDG: &contextlen"];
"1000353" -> "1001934"  [label="DDG: d_inode(dentry)"];
"1000353" -> "1000351"  [label="DDG: d_inode(dentry)"];
"1000353" -> "1000351"  [label="DDG: &context"];
"1000353" -> "1000351"  [label="DDG: &contextlen"];
"1000354" -> "1000353"  [label="DDG: dentry"];
"1000354" -> "1000355"  [label="CFG: "];
"1000355" -> "1000354"  [label="AST: "];
"1000357" -> "1000354"  [label="CFG: "];
"1000354" -> "1001934"  [label="DDG: dentry"];
"1000288" -> "1000354"  [label="DDG: dentry"];
"1000306" -> "1000354"  [label="DDG: dentry"];
"1000106" -> "1000354"  [label="DDG: dentry"];
"1000354" -> "1000615"  [label="DDG: dentry"];
"1000354" -> "1001767"  [label="DDG: dentry"];
"1000288" -> "1000286"  [label="AST: "];
"1000288" -> "1000292"  [label="CFG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000290" -> "1000288"  [label="AST: "];
"1000291" -> "1000288"  [label="AST: "];
"1000292" -> "1000288"  [label="AST: "];
"1000286" -> "1000288"  [label="CFG: "];
"1000288" -> "1001934"  [label="DDG: dentry"];
"1000288" -> "1001934"  [label="DDG: NULL"];
"1000288" -> "1001934"  [label="DDG: exp"];
"1000288" -> "1001934"  [label="DDG: tempfh"];
"1000288" -> "1000286"  [label="DDG: tempfh"];
"1000288" -> "1000286"  [label="DDG: exp"];
"1000288" -> "1000286"  [label="DDG: dentry"];
"1000288" -> "1000286"  [label="DDG: NULL"];
"1000283" -> "1000288"  [label="DDG: tempfh"];
"1000105" -> "1000288"  [label="DDG: exp"];
"1000106" -> "1000288"  [label="DDG: dentry"];
"1000288" -> "1000296"  [label="DDG: tempfh"];
"1000288" -> "1000306"  [label="DDG: dentry"];
"1000288" -> "1000615"  [label="DDG: dentry"];
"1000288" -> "1000611"  [label="DDG: exp"];
"1000288" -> "1000864"  [label="DDG: NULL"];
"1000288" -> "1001206"  [label="DDG: exp"];
"1000288" -> "1001767"  [label="DDG: dentry"];
"1000288" -> "1001779"  [label="DDG: exp"];
"1000288" -> "1001912"  [label="DDG: tempfh"];
"1000283" -> "1000269"  [label="AST: "];
"1000283" -> "1000285"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000285" -> "1000283"  [label="AST: "];
"1000287" -> "1000283"  [label="CFG: "];
"1000283" -> "1001934"  [label="DDG: NFS4_FHSIZE"];
"1000283" -> "1001934"  [label="DDG: fh_init(tempfh, NFS4_FHSIZE)"];
"1000280" -> "1000283"  [label="DDG: tempfh"];
"1000280" -> "1000279"  [label="AST: "];
"1000280" -> "1000281"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000282" -> "1000280"  [label="CFG: "];
"1000284" -> "1000280"  [label="CFG: "];
"1000280" -> "1001934"  [label="DDG: !tempfh"];
"1000280" -> "1001934"  [label="DDG: tempfh"];
"1000270" -> "1000280"  [label="DDG: tempfh"];
"1000280" -> "1001912"  [label="DDG: tempfh"];
"1000270" -> "1000269"  [label="AST: "];
"1000270" -> "1000272"  [label="CFG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000272" -> "1000270"  [label="AST: "];
"1000277" -> "1000270"  [label="CFG: "];
"1000270" -> "1001934"  [label="DDG: kmalloc(sizeof(struct svc_fh), GFP_KERNEL)"];
"1000272" -> "1000270"  [label="DDG: GFP_KERNEL"];
"1000272" -> "1000275"  [label="CFG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000275" -> "1000272"  [label="AST: "];
"1000272" -> "1001934"  [label="DDG: GFP_KERNEL"];
"1000105" -> "1000102"  [label="AST: "];
"1000105" -> "1001934"  [label="DDG: exp"];
"1000105" -> "1000611"  [label="DDG: exp"];
"1000105" -> "1001206"  [label="DDG: exp"];
"1000105" -> "1001779"  [label="DDG: exp"];
"1000106" -> "1000102"  [label="AST: "];
"1000106" -> "1001934"  [label="DDG: dentry"];
"1000106" -> "1000306"  [label="DDG: dentry"];
"1000106" -> "1000615"  [label="DDG: dentry"];
"1000106" -> "1001767"  [label="DDG: dentry"];
"1000306" -> "1000304"  [label="AST: "];
"1000306" -> "1000309"  [label="CFG: "];
"1000307" -> "1000306"  [label="AST: "];
"1000308" -> "1000306"  [label="AST: "];
"1000309" -> "1000306"  [label="AST: "];
"1000304" -> "1000306"  [label="CFG: "];
"1000306" -> "1001934"  [label="DDG: &acl"];
"1000306" -> "1001934"  [label="DDG: rqstp"];
"1000306" -> "1001934"  [label="DDG: dentry"];
"1000306" -> "1000304"  [label="DDG: rqstp"];
"1000306" -> "1000304"  [label="DDG: dentry"];
"1000306" -> "1000304"  [label="DDG: &acl"];
"1000186" -> "1000306"  [label="DDG: rqstp"];
"1000108" -> "1000306"  [label="DDG: rqstp"];
"1000306" -> "1000615"  [label="DDG: dentry"];
"1000306" -> "1000958"  [label="DDG: rqstp"];
"1000306" -> "1001206"  [label="DDG: rqstp"];
"1000306" -> "1001322"  [label="DDG: rqstp"];
"1000306" -> "1001344"  [label="DDG: rqstp"];
"1000306" -> "1001419"  [label="DDG: rqstp"];
"1000306" -> "1001435"  [label="DDG: rqstp"];
"1000306" -> "1001767"  [label="DDG: dentry"];
"1000306" -> "1001870"  [label="DDG: rqstp"];
"1000186" -> "1000185"  [label="AST: "];
"1000186" -> "1000187"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000188" -> "1000186"  [label="CFG: "];
"1000186" -> "1001934"  [label="DDG: rqstp"];
"1000186" -> "1000185"  [label="DDG: rqstp"];
"1000108" -> "1000186"  [label="DDG: rqstp"];
"1000186" -> "1000958"  [label="DDG: rqstp"];
"1000186" -> "1001206"  [label="DDG: rqstp"];
"1000186" -> "1001322"  [label="DDG: rqstp"];
"1000186" -> "1001344"  [label="DDG: rqstp"];
"1000186" -> "1001419"  [label="DDG: rqstp"];
"1000186" -> "1001435"  [label="DDG: rqstp"];
"1000186" -> "1001870"  [label="DDG: rqstp"];
"1000108" -> "1000102"  [label="AST: "];
"1000108" -> "1001934"  [label="DDG: rqstp"];
"1000108" -> "1000958"  [label="DDG: rqstp"];
"1000108" -> "1001206"  [label="DDG: rqstp"];
"1000108" -> "1001322"  [label="DDG: rqstp"];
"1000108" -> "1001344"  [label="DDG: rqstp"];
"1000108" -> "1001419"  [label="DDG: rqstp"];
"1000108" -> "1001435"  [label="DDG: rqstp"];
"1000108" -> "1001870"  [label="DDG: rqstp"];
"1000351" -> "1000345"  [label="AST: "];
"1000352" -> "1000351"  [label="AST: "];
"1000366" -> "1000351"  [label="CFG: "];
"1000351" -> "1001934"  [label="DDG: security_inode_getsecctx(d_inode(dentry),\n\t\t\t\t\t\t&context, &contextlen)"];
"1000351" -> "1000367"  [label="DDG: err"];
"1000367" -> "1000365"  [label="AST: "];
"1000367" -> "1000369"  [label="CFG: "];
"1000368" -> "1000367"  [label="AST: "];
"1000369" -> "1000367"  [label="AST: "];
"1000365" -> "1000367"  [label="CFG: "];
"1000367" -> "1001934"  [label="DDG: err"];
"1000367" -> "1000365"  [label="DDG: err"];
"1000367" -> "1000365"  [label="DDG: 0"];
"1000361" -> "1000367"  [label="DDG: err"];
"1000367" -> "1000376"  [label="DDG: err"];
"1000365" -> "1000344"  [label="AST: "];
"1000366" -> "1000365"  [label="AST: "];
"1000372" -> "1000365"  [label="CFG: "];
"1000365" -> "1001934"  [label="DDG: err == 0"];
"1000365" -> "1001934"  [label="DDG: contextsupport"];
"1000365" -> "1000440"  [label="DDG: contextsupport"];
"1000440" -> "1000439"  [label="AST: "];
"1000440" -> "1000441"  [label="CFG: "];
"1000441" -> "1000440"  [label="AST: "];
"1000444" -> "1000440"  [label="CFG: "];
"1000450" -> "1000440"  [label="CFG: "];
"1000440" -> "1001934"  [label="DDG: !contextsupport"];
"1000440" -> "1001934"  [label="DDG: contextsupport"];
"1000164" -> "1000440"  [label="DDG: contextsupport"];
"1000376" -> "1000375"  [label="AST: "];
"1000376" -> "1000378"  [label="CFG: "];
"1000377" -> "1000376"  [label="AST: "];
"1000378" -> "1000376"  [label="AST: "];
"1000381" -> "1000376"  [label="CFG: "];
"1000385" -> "1000376"  [label="CFG: "];
"1000376" -> "1001934"  [label="DDG: err == -EOPNOTSUPP"];
"1000376" -> "1001934"  [label="DDG: err"];
"1000376" -> "1001934"  [label="DDG: -EOPNOTSUPP"];
"1000378" -> "1000376"  [label="DDG: EOPNOTSUPP"];
"1000376" -> "1001926"  [label="DDG: err"];
"1001926" -> "1001924"  [label="AST: "];
"1001926" -> "1001927"  [label="CFG: "];
"1001927" -> "1001926"  [label="AST: "];
"1001924" -> "1001926"  [label="CFG: "];
"1001926" -> "1001934"  [label="DDG: err"];
"1001926" -> "1001924"  [label="DDG: err"];
"1001777" -> "1001926"  [label="DDG: err"];
"1000219" -> "1001926"  [label="DDG: err"];
"1000250" -> "1001926"  [label="DDG: err"];
"1000332" -> "1001926"  [label="DDG: err"];
"1001924" -> "1000110"  [label="AST: "];
"1001925" -> "1001924"  [label="AST: "];
"1001928" -> "1001924"  [label="CFG: "];
"1001924" -> "1001934"  [label="DDG: nfserrno(err)"];
"1001924" -> "1001934"  [label="DDG: status"];
"1001924" -> "1001921"  [label="DDG: status"];
"1001921" -> "1000110"  [label="AST: "];
"1001921" -> "1001922"  [label="CFG: "];
"1001922" -> "1001921"  [label="AST: "];
"1001934" -> "1001921"  [label="CFG: "];
"1001921" -> "1001934"  [label="DDG: <RET>"];
"1001922" -> "1001921"  [label="DDG: status"];
"1001204" -> "1001921"  [label="DDG: status"];
"1000286" -> "1001921"  [label="DDG: status"];
"1001417" -> "1001921"  [label="DDG: status"];
"1000205" -> "1001921"  [label="DDG: status"];
"1000956" -> "1001921"  [label="DDG: status"];
"1000387" -> "1001921"  [label="DDG: status"];
"1001898" -> "1001921"  [label="DDG: status"];
"1001853" -> "1001921"  [label="DDG: status"];
"1000276" -> "1001921"  [label="DDG: status"];
"1001930" -> "1001921"  [label="DDG: status"];
"1001433" -> "1001921"  [label="DDG: status"];
"1001816" -> "1001921"  [label="DDG: status"];
"1001801" -> "1001921"  [label="DDG: status"];
"1000550" -> "1001921"  [label="DDG: status"];
"1001868" -> "1001921"  [label="DDG: status"];
"1000326" -> "1001921"  [label="DDG: status"];
}
