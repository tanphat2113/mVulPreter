digraph "0_linux_9de7922bc709eee2f609cd01d98aaedc4cf5ea74_2@pointer" {
"1000144" [label="(Call,sctp_sf_pdiscard(net, ep, asoc, type, arg, commands))"];
"1000108" [label="(MethodParameterIn,struct net *net)"];
"1000109" [label="(MethodParameterIn,const struct sctp_endpoint *ep)"];
"1000135" [label="(Call,sctp_vtag_verify(asconf_ack, asoc))"];
"1000116" [label="(Call,*asconf_ack = arg)"];
"1000112" [label="(MethodParameterIn,void *arg)"];
"1000110" [label="(MethodParameterIn,const struct sctp_association *asoc)"];
"1000111" [label="(MethodParameterIn,const sctp_subtype_t type)"];
"1000139" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_REPORT_BAD_TAG,\n\t\t\t\tSCTP_NULL()))"];
"1000113" [label="(MethodParameterIn,sctp_cmd_seq_t *commands)"];
"1000143" [label="(Return,return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);)"];
"1000334" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_SEND_NEXT_ASCONF,\n\t\t\t\t\tSCTP_NULL()))"];
"1000354" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_REPLY,\n\t\t\t\t\tSCTP_CHUNK(abort)))"];
"1000321" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_TIMER_STOP,\n\t\t\t\tSCTP_TO(SCTP_EVENT_TIMEOUT_T4_RTO)))"];
"1000141" [label="(Identifier,SCTP_CMD_REPORT_BAD_TAG)"];
"1000294" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_SET_SK_ERR,\n\t\t\t\tSCTP_ERROR(ECONNABORTED)))"];
"1000373" [label="(Call,SCTP_INC_STATS(net, SCTP_MIB_ABORTEDS))"];
"1000117" [label="(Identifier,asconf_ack)"];
"1000138" [label="(Block,)"];
"1000142" [label="(Call,SCTP_NULL())"];
"1000268" [label="(Call,sctp_make_abort(asoc, asconf_ack,\n\t\t\t\t\tsizeof(sctp_errhdr_t)))"];
"1000140" [label="(Identifier,commands)"];
"1000363" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_SET_SK_ERR,\n\t\t\t\tSCTP_ERROR(ECONNABORTED)))"];
"1000110" [label="(MethodParameterIn,const struct sctp_association *asoc)"];
"1000108" [label="(MethodParameterIn,struct net *net)"];
"1000173" [label="(Call,sctp_chunk_length_valid(asconf_ack, sizeof(sctp_addip_chunk_t)))"];
"1000118" [label="(Identifier,arg)"];
"1000136" [label="(Identifier,asconf_ack)"];
"1000359" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_DISCARD_PACKET, SCTP_NULL()))"];
"1000135" [label="(Call,sctp_vtag_verify(asconf_ack, asoc))"];
"1000150" [label="(Identifier,commands)"];
"1000113" [label="(MethodParameterIn,sctp_cmd_seq_t *commands)"];
"1000164" [label="(Call,sctp_sf_discard_chunk(net, ep, asoc, type, arg, commands))"];
"1000147" [label="(Identifier,asoc)"];
"1000111" [label="(MethodParameterIn,const sctp_subtype_t type)"];
"1000383" [label="(MethodReturn,sctp_disposition_t)"];
"1000112" [label="(MethodParameterIn,void *arg)"];
"1000280" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_REPLY,\n\t\t\t\t\tSCTP_CHUNK(abort)))"];
"1000290" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_DISCARD_PACKET, SCTP_NULL()))"];
"1000134" [label="(Call,!sctp_vtag_verify(asconf_ack, asoc))"];
"1000202" [label="(Call,sctp_verify_asconf(asoc,\n\t    (sctp_paramhdr_t *)addip_hdr->params,\n\t    (void *)asconf_ack->chunk_end,\n\t    &err_param))"];
"1000145" [label="(Identifier,net)"];
"1000149" [label="(Identifier,arg)"];
"1000376" [label="(Call,SCTP_DEC_STATS(net, SCTP_MIB_CURRESTAB))"];
"1000342" [label="(Call,sctp_make_abort(asoc, asconf_ack,\n\t\t\t\t\tsizeof(sctp_errhdr_t)))"];
"1000178" [label="(Call,sctp_sf_violation_chunklen(net, ep, asoc, type, arg,\n\t\t\t\t\t\t  commands))"];
"1000304" [label="(Call,SCTP_INC_STATS(net, SCTP_MIB_ABORTEDS))"];
"1000329" [label="(Call,(struct sctp_association *)asoc)"];
"1000116" [label="(Call,*asconf_ack = arg)"];
"1000139" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_REPORT_BAD_TAG,\n\t\t\t\tSCTP_NULL()))"];
"1000137" [label="(Identifier,asoc)"];
"1000307" [label="(Call,SCTP_DEC_STATS(net, SCTP_MIB_CURRESTAB))"];
"1000217" [label="(Call,sctp_sf_violation_paramlen(net, ep, asoc, type, arg,\n \t\t\t   (void *)err_param, commands))"];
"1000285" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_TIMER_STOP,\n\t\t\t\tSCTP_TO(SCTP_EVENT_TIMEOUT_T4_RTO)))"];
"1000148" [label="(Identifier,type)"];
"1000114" [label="(Block,)"];
"1000146" [label="(Identifier,ep)"];
"1000143" [label="(Return,return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);)"];
"1000121" [label="(Identifier,last_asconf)"];
"1000299" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_ASSOC_FAILED,\n\t\t\t\tSCTP_PERR(SCTP_ERROR_ASCONF_ACK)))"];
"1000109" [label="(MethodParameterIn,const struct sctp_endpoint *ep)"];
"1000368" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_ASSOC_FAILED,\n\t\t\t\tSCTP_PERR(SCTP_ERROR_ASCONF_ACK)))"];
"1000144" [label="(Call,sctp_sf_pdiscard(net, ep, asoc, type, arg, commands))"];
"1000144" -> "1000143"  [label="AST: "];
"1000144" -> "1000150"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000146" -> "1000144"  [label="AST: "];
"1000147" -> "1000144"  [label="AST: "];
"1000148" -> "1000144"  [label="AST: "];
"1000149" -> "1000144"  [label="AST: "];
"1000150" -> "1000144"  [label="AST: "];
"1000143" -> "1000144"  [label="CFG: "];
"1000144" -> "1000383"  [label="DDG: sctp_sf_pdiscard(net, ep, asoc, type, arg, commands)"];
"1000144" -> "1000383"  [label="DDG: arg"];
"1000144" -> "1000383"  [label="DDG: type"];
"1000144" -> "1000383"  [label="DDG: net"];
"1000144" -> "1000383"  [label="DDG: commands"];
"1000144" -> "1000383"  [label="DDG: ep"];
"1000144" -> "1000383"  [label="DDG: asoc"];
"1000144" -> "1000143"  [label="DDG: sctp_sf_pdiscard(net, ep, asoc, type, arg, commands)"];
"1000108" -> "1000144"  [label="DDG: net"];
"1000109" -> "1000144"  [label="DDG: ep"];
"1000135" -> "1000144"  [label="DDG: asoc"];
"1000110" -> "1000144"  [label="DDG: asoc"];
"1000111" -> "1000144"  [label="DDG: type"];
"1000112" -> "1000144"  [label="DDG: arg"];
"1000139" -> "1000144"  [label="DDG: commands"];
"1000113" -> "1000144"  [label="DDG: commands"];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000383"  [label="DDG: net"];
"1000108" -> "1000164"  [label="DDG: net"];
"1000108" -> "1000178"  [label="DDG: net"];
"1000108" -> "1000217"  [label="DDG: net"];
"1000108" -> "1000304"  [label="DDG: net"];
"1000108" -> "1000307"  [label="DDG: net"];
"1000108" -> "1000373"  [label="DDG: net"];
"1000108" -> "1000376"  [label="DDG: net"];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000383"  [label="DDG: ep"];
"1000109" -> "1000164"  [label="DDG: ep"];
"1000109" -> "1000178"  [label="DDG: ep"];
"1000109" -> "1000217"  [label="DDG: ep"];
"1000135" -> "1000134"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000134" -> "1000135"  [label="CFG: "];
"1000135" -> "1000383"  [label="DDG: asconf_ack"];
"1000135" -> "1000134"  [label="DDG: asconf_ack"];
"1000135" -> "1000134"  [label="DDG: asoc"];
"1000116" -> "1000135"  [label="DDG: asconf_ack"];
"1000110" -> "1000135"  [label="DDG: asoc"];
"1000135" -> "1000164"  [label="DDG: asoc"];
"1000135" -> "1000173"  [label="DDG: asconf_ack"];
"1000135" -> "1000178"  [label="DDG: asoc"];
"1000135" -> "1000202"  [label="DDG: asoc"];
"1000116" -> "1000114"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000121" -> "1000116"  [label="CFG: "];
"1000116" -> "1000383"  [label="DDG: arg"];
"1000112" -> "1000116"  [label="DDG: arg"];
"1000112" -> "1000107"  [label="AST: "];
"1000112" -> "1000383"  [label="DDG: arg"];
"1000112" -> "1000164"  [label="DDG: arg"];
"1000112" -> "1000178"  [label="DDG: arg"];
"1000112" -> "1000217"  [label="DDG: arg"];
"1000110" -> "1000107"  [label="AST: "];
"1000110" -> "1000383"  [label="DDG: asoc"];
"1000110" -> "1000164"  [label="DDG: asoc"];
"1000110" -> "1000178"  [label="DDG: asoc"];
"1000110" -> "1000202"  [label="DDG: asoc"];
"1000110" -> "1000217"  [label="DDG: asoc"];
"1000110" -> "1000268"  [label="DDG: asoc"];
"1000110" -> "1000329"  [label="DDG: asoc"];
"1000110" -> "1000342"  [label="DDG: asoc"];
"1000111" -> "1000107"  [label="AST: "];
"1000111" -> "1000383"  [label="DDG: type"];
"1000111" -> "1000164"  [label="DDG: type"];
"1000111" -> "1000178"  [label="DDG: type"];
"1000111" -> "1000217"  [label="DDG: type"];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000142"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="AST: "];
"1000142" -> "1000139"  [label="AST: "];
"1000145" -> "1000139"  [label="CFG: "];
"1000139" -> "1000383"  [label="DDG: SCTP_NULL()"];
"1000139" -> "1000383"  [label="DDG: SCTP_CMD_REPORT_BAD_TAG"];
"1000139" -> "1000383"  [label="DDG: sctp_add_cmd_sf(commands, SCTP_CMD_REPORT_BAD_TAG,\n\t\t\t\tSCTP_NULL())"];
"1000113" -> "1000139"  [label="DDG: commands"];
"1000113" -> "1000107"  [label="AST: "];
"1000113" -> "1000383"  [label="DDG: commands"];
"1000113" -> "1000164"  [label="DDG: commands"];
"1000113" -> "1000178"  [label="DDG: commands"];
"1000113" -> "1000217"  [label="DDG: commands"];
"1000113" -> "1000280"  [label="DDG: commands"];
"1000113" -> "1000285"  [label="DDG: commands"];
"1000113" -> "1000290"  [label="DDG: commands"];
"1000113" -> "1000294"  [label="DDG: commands"];
"1000113" -> "1000299"  [label="DDG: commands"];
"1000113" -> "1000321"  [label="DDG: commands"];
"1000113" -> "1000334"  [label="DDG: commands"];
"1000113" -> "1000354"  [label="DDG: commands"];
"1000113" -> "1000359"  [label="DDG: commands"];
"1000113" -> "1000363"  [label="DDG: commands"];
"1000113" -> "1000368"  [label="DDG: commands"];
"1000143" -> "1000138"  [label="AST: "];
"1000383" -> "1000143"  [label="CFG: "];
"1000143" -> "1000383"  [label="DDG: <RET>"];
}
