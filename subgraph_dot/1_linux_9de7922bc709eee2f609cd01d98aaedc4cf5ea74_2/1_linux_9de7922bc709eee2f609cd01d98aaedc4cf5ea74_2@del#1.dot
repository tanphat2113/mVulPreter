digraph "1_linux_9de7922bc709eee2f609cd01d98aaedc4cf5ea74_2@del" {
"1000204" [label="(Call,(sctp_paramhdr_t *)addip_hdr->params)"];
"1000202" [label="(Call,sctp_verify_asconf(asoc,\n\t    (sctp_paramhdr_t *)addip_hdr->params,\n\t    (void *)asconf_ack->chunk_end,\n\t    &err_param))"];
"1000201" [label="(Call,!sctp_verify_asconf(asoc,\n\t    (sctp_paramhdr_t *)addip_hdr->params,\n\t    (void *)asconf_ack->chunk_end,\n\t    &err_param))"];
"1000217" [label="(Call,sctp_sf_violation_paramlen(net, ep, asoc, type, arg,\n \t\t\t   (void *)err_param, commands))"];
"1000216" [label="(Return,return sctp_sf_violation_paramlen(net, ep, asoc, type, arg,\n \t\t\t   (void *)err_param, commands);)"];
"1000268" [label="(Call,sctp_make_abort(asoc, asconf_ack,\n\t\t\t\t\tsizeof(sctp_errhdr_t)))"];
"1000266" [label="(Call,abort = sctp_make_abort(asoc, asconf_ack,\n\t\t\t\t\tsizeof(sctp_errhdr_t)))"];
"1000276" [label="(Call,sctp_init_cause(abort, SCTP_ERROR_ASCONF_ACK, 0))"];
"1000283" [label="(Call,SCTP_CHUNK(abort))"];
"1000280" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_REPLY,\n\t\t\t\t\tSCTP_CHUNK(abort)))"];
"1000285" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_TIMER_STOP,\n\t\t\t\tSCTP_TO(SCTP_EVENT_TIMEOUT_T4_RTO)))"];
"1000290" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_DISCARD_PACKET, SCTP_NULL()))"];
"1000294" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_SET_SK_ERR,\n\t\t\t\tSCTP_ERROR(ECONNABORTED)))"];
"1000299" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_ASSOC_FAILED,\n\t\t\t\tSCTP_PERR(SCTP_ERROR_ASCONF_ACK)))"];
"1000302" [label="(Call,SCTP_PERR(SCTP_ERROR_ASCONF_ACK))"];
"1000329" [label="(Call,(struct sctp_association *)asoc)"];
"1000328" [label="(Call,sctp_process_asconf_ack((struct sctp_association *)asoc,\n\t\t\t\t\t     asconf_ack))"];
"1000327" [label="(Call,!sctp_process_asconf_ack((struct sctp_association *)asoc,\n\t\t\t\t\t     asconf_ack))"];
"1000342" [label="(Call,sctp_make_abort(asoc, asconf_ack,\n\t\t\t\t\tsizeof(sctp_errhdr_t)))"];
"1000340" [label="(Call,abort = sctp_make_abort(asoc, asconf_ack,\n\t\t\t\t\tsizeof(sctp_errhdr_t)))"];
"1000350" [label="(Call,sctp_init_cause(abort, SCTP_ERROR_RSRC_LOW, 0))"];
"1000357" [label="(Call,SCTP_CHUNK(abort))"];
"1000354" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_REPLY,\n\t\t\t\t\tSCTP_CHUNK(abort)))"];
"1000359" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_DISCARD_PACKET, SCTP_NULL()))"];
"1000363" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_SET_SK_ERR,\n\t\t\t\tSCTP_ERROR(ECONNABORTED)))"];
"1000368" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_ASSOC_FAILED,\n\t\t\t\tSCTP_PERR(SCTP_ERROR_ASCONF_ACK)))"];
"1000296" [label="(Identifier,SCTP_CMD_SET_SK_ERR)"];
"1000288" [label="(Call,SCTP_TO(SCTP_EVENT_TIMEOUT_T4_RTO))"];
"1000204" [label="(Call,(sctp_paramhdr_t *)addip_hdr->params)"];
"1000200" [label="(ControlStructure,if (!sctp_verify_asconf(asoc,\n\t    (sctp_paramhdr_t *)addip_hdr->params,\n\t    (void *)asconf_ack->chunk_end,\n\t    &err_param)))"];
"1000275" [label="(Block,)"];
"1000365" [label="(Identifier,SCTP_CMD_SET_SK_ERR)"];
"1000109" [label="(MethodParameterIn,const struct sctp_endpoint *ep)"];
"1000135" [label="(Call,sctp_vtag_verify(asconf_ack, asoc))"];
"1000341" [label="(Identifier,abort)"];
"1000320" [label="(Block,)"];
"1000359" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_DISCARD_PACKET, SCTP_NULL()))"];
"1000110" [label="(MethodParameterIn,const struct sctp_association *asoc)"];
"1000281" [label="(Identifier,commands)"];
"1000364" [label="(Identifier,commands)"];
"1000348" [label="(Identifier,abort)"];
"1000266" [label="(Call,abort = sctp_make_abort(asoc, asconf_ack,\n\t\t\t\t\tsizeof(sctp_errhdr_t)))"];
"1000202" [label="(Call,sctp_verify_asconf(asoc,\n\t    (sctp_paramhdr_t *)addip_hdr->params,\n\t    (void *)asconf_ack->chunk_end,\n\t    &err_param))"];
"1000201" [label="(Call,!sctp_verify_asconf(asoc,\n\t    (sctp_paramhdr_t *)addip_hdr->params,\n\t    (void *)asconf_ack->chunk_end,\n\t    &err_param))"];
"1000368" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_ASSOC_FAILED,\n\t\t\t\tSCTP_PERR(SCTP_ERROR_ASCONF_ACK)))"];
"1000291" [label="(Identifier,commands)"];
"1000351" [label="(Identifier,abort)"];
"1000340" [label="(Call,abort = sctp_make_abort(asoc, asconf_ack,\n\t\t\t\t\tsizeof(sctp_errhdr_t)))"];
"1000355" [label="(Identifier,commands)"];
"1000302" [label="(Call,SCTP_PERR(SCTP_ERROR_ASCONF_ACK))"];
"1000220" [label="(Identifier,asoc)"];
"1000363" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_SET_SK_ERR,\n\t\t\t\tSCTP_ERROR(ECONNABORTED)))"];
"1000111" [label="(MethodParameterIn,const sctp_subtype_t type)"];
"1000356" [label="(Identifier,SCTP_CMD_REPLY)"];
"1000293" [label="(Call,SCTP_NULL())"];
"1000290" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_DISCARD_PACKET, SCTP_NULL()))"];
"1000112" [label="(MethodParameterIn,void *arg)"];
"1000349" [label="(Block,)"];
"1000294" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_SET_SK_ERR,\n\t\t\t\tSCTP_ERROR(ECONNABORTED)))"];
"1000331" [label="(Identifier,asoc)"];
"1000283" [label="(Call,SCTP_CHUNK(abort))"];
"1000113" [label="(MethodParameterIn,sctp_cmd_seq_t *commands)"];
"1000297" [label="(Call,SCTP_ERROR(ECONNABORTED))"];
"1000366" [label="(Call,SCTP_ERROR(ECONNABORTED))"];
"1000286" [label="(Identifier,commands)"];
"1000329" [label="(Call,(struct sctp_association *)asoc)"];
"1000335" [label="(Identifier,commands)"];
"1000173" [label="(Call,sctp_chunk_length_valid(asconf_ack, sizeof(sctp_addip_chunk_t)))"];
"1000108" [label="(MethodParameterIn,struct net *net)"];
"1000374" [label="(Identifier,net)"];
"1000226" [label="(Identifier,commands)"];
"1000360" [label="(Identifier,commands)"];
"1000221" [label="(Identifier,type)"];
"1000228" [label="(Identifier,last_asconf)"];
"1000295" [label="(Identifier,commands)"];
"1000361" [label="(Identifier,SCTP_CMD_DISCARD_PACKET)"];
"1000285" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_TIMER_STOP,\n\t\t\t\tSCTP_TO(SCTP_EVENT_TIMEOUT_T4_RTO)))"];
"1000370" [label="(Identifier,SCTP_CMD_ASSOC_FAILED)"];
"1000280" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_REPLY,\n\t\t\t\t\tSCTP_CHUNK(abort)))"];
"1000362" [label="(Call,SCTP_NULL())"];
"1000371" [label="(Call,SCTP_PERR(SCTP_ERROR_ASCONF_ACK))"];
"1000209" [label="(Call,(void *)asconf_ack->chunk_end)"];
"1000282" [label="(Identifier,SCTP_CMD_REPLY)"];
"1000383" [label="(MethodReturn,sctp_disposition_t)"];
"1000216" [label="(Return,return sctp_sf_violation_paramlen(net, ep, asoc, type, arg,\n \t\t\t   (void *)err_param, commands);)"];
"1000332" [label="(Identifier,asconf_ack)"];
"1000342" [label="(Call,sctp_make_abort(asoc, asconf_ack,\n\t\t\t\t\tsizeof(sctp_errhdr_t)))"];
"1000265" [label="(Block,)"];
"1000327" [label="(Call,!sctp_process_asconf_ack((struct sctp_association *)asoc,\n\t\t\t\t\t     asconf_ack))"];
"1000269" [label="(Identifier,asoc)"];
"1000218" [label="(Identifier,net)"];
"1000358" [label="(Identifier,abort)"];
"1000219" [label="(Identifier,ep)"];
"1000300" [label="(Identifier,commands)"];
"1000344" [label="(Identifier,asconf_ack)"];
"1000353" [label="(Literal,0)"];
"1000303" [label="(Identifier,SCTP_ERROR_ASCONF_ACK)"];
"1000267" [label="(Identifier,abort)"];
"1000299" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_ASSOC_FAILED,\n\t\t\t\tSCTP_PERR(SCTP_ERROR_ASCONF_ACK)))"];
"1000203" [label="(Identifier,asoc)"];
"1000276" [label="(Call,sctp_init_cause(abort, SCTP_ERROR_ASCONF_ACK, 0))"];
"1000369" [label="(Identifier,commands)"];
"1000214" [label="(Call,&err_param)"];
"1000284" [label="(Identifier,abort)"];
"1000350" [label="(Call,sctp_init_cause(abort, SCTP_ERROR_RSRC_LOW, 0))"];
"1000354" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_REPLY,\n\t\t\t\t\tSCTP_CHUNK(abort)))"];
"1000217" [label="(Call,sctp_sf_violation_paramlen(net, ep, asoc, type, arg,\n \t\t\t   (void *)err_param, commands))"];
"1000268" [label="(Call,sctp_make_abort(asoc, asconf_ack,\n\t\t\t\t\tsizeof(sctp_errhdr_t)))"];
"1000321" [label="(Call,sctp_add_cmd_sf(commands, SCTP_CMD_TIMER_STOP,\n\t\t\t\tSCTP_TO(SCTP_EVENT_TIMEOUT_T4_RTO)))"];
"1000305" [label="(Identifier,net)"];
"1000222" [label="(Identifier,arg)"];
"1000270" [label="(Identifier,asconf_ack)"];
"1000279" [label="(Literal,0)"];
"1000357" [label="(Call,SCTP_CHUNK(abort))"];
"1000343" [label="(Identifier,asoc)"];
"1000287" [label="(Identifier,SCTP_CMD_TIMER_STOP)"];
"1000223" [label="(Call,(void *)err_param)"];
"1000274" [label="(Identifier,abort)"];
"1000328" [label="(Call,sctp_process_asconf_ack((struct sctp_association *)asoc,\n\t\t\t\t\t     asconf_ack))"];
"1000326" [label="(ControlStructure,if (!sctp_process_asconf_ack((struct sctp_association *)asoc,\n\t\t\t\t\t     asconf_ack)))"];
"1000352" [label="(Identifier,SCTP_ERROR_RSRC_LOW)"];
"1000277" [label="(Identifier,abort)"];
"1000278" [label="(Identifier,SCTP_ERROR_ASCONF_ACK)"];
"1000301" [label="(Identifier,SCTP_CMD_ASSOC_FAILED)"];
"1000345" [label="(Call,sizeof(sctp_errhdr_t))"];
"1000292" [label="(Identifier,SCTP_CMD_DISCARD_PACKET)"];
"1000206" [label="(Call,addip_hdr->params)"];
"1000271" [label="(Call,sizeof(sctp_errhdr_t))"];
"1000204" -> "1000202"  [label="AST: "];
"1000204" -> "1000206"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000206" -> "1000204"  [label="AST: "];
"1000210" -> "1000204"  [label="CFG: "];
"1000204" -> "1000383"  [label="DDG: addip_hdr->params"];
"1000204" -> "1000202"  [label="DDG: addip_hdr->params"];
"1000202" -> "1000201"  [label="AST: "];
"1000202" -> "1000214"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000209" -> "1000202"  [label="AST: "];
"1000214" -> "1000202"  [label="AST: "];
"1000201" -> "1000202"  [label="CFG: "];
"1000202" -> "1000383"  [label="DDG: (void *)asconf_ack->chunk_end"];
"1000202" -> "1000383"  [label="DDG: &err_param"];
"1000202" -> "1000383"  [label="DDG: asoc"];
"1000202" -> "1000383"  [label="DDG: (sctp_paramhdr_t *)addip_hdr->params"];
"1000202" -> "1000201"  [label="DDG: asoc"];
"1000202" -> "1000201"  [label="DDG: (sctp_paramhdr_t *)addip_hdr->params"];
"1000202" -> "1000201"  [label="DDG: (void *)asconf_ack->chunk_end"];
"1000202" -> "1000201"  [label="DDG: &err_param"];
"1000135" -> "1000202"  [label="DDG: asoc"];
"1000110" -> "1000202"  [label="DDG: asoc"];
"1000209" -> "1000202"  [label="DDG: asconf_ack->chunk_end"];
"1000202" -> "1000217"  [label="DDG: asoc"];
"1000202" -> "1000268"  [label="DDG: asoc"];
"1000202" -> "1000329"  [label="DDG: asoc"];
"1000201" -> "1000200"  [label="AST: "];
"1000218" -> "1000201"  [label="CFG: "];
"1000228" -> "1000201"  [label="CFG: "];
"1000201" -> "1000383"  [label="DDG: !sctp_verify_asconf(asoc,\n\t    (sctp_paramhdr_t *)addip_hdr->params,\n\t    (void *)asconf_ack->chunk_end,\n\t    &err_param)"];
"1000201" -> "1000383"  [label="DDG: sctp_verify_asconf(asoc,\n\t    (sctp_paramhdr_t *)addip_hdr->params,\n\t    (void *)asconf_ack->chunk_end,\n\t    &err_param)"];
"1000217" -> "1000216"  [label="AST: "];
"1000217" -> "1000226"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000219" -> "1000217"  [label="AST: "];
"1000220" -> "1000217"  [label="AST: "];
"1000221" -> "1000217"  [label="AST: "];
"1000222" -> "1000217"  [label="AST: "];
"1000223" -> "1000217"  [label="AST: "];
"1000226" -> "1000217"  [label="AST: "];
"1000216" -> "1000217"  [label="CFG: "];
"1000217" -> "1000383"  [label="DDG: type"];
"1000217" -> "1000383"  [label="DDG: (void *)err_param"];
"1000217" -> "1000383"  [label="DDG: commands"];
"1000217" -> "1000383"  [label="DDG: ep"];
"1000217" -> "1000383"  [label="DDG: sctp_sf_violation_paramlen(net, ep, asoc, type, arg,\n \t\t\t   (void *)err_param, commands)"];
"1000217" -> "1000383"  [label="DDG: net"];
"1000217" -> "1000383"  [label="DDG: arg"];
"1000217" -> "1000383"  [label="DDG: asoc"];
"1000217" -> "1000216"  [label="DDG: sctp_sf_violation_paramlen(net, ep, asoc, type, arg,\n \t\t\t   (void *)err_param, commands)"];
"1000108" -> "1000217"  [label="DDG: net"];
"1000109" -> "1000217"  [label="DDG: ep"];
"1000110" -> "1000217"  [label="DDG: asoc"];
"1000111" -> "1000217"  [label="DDG: type"];
"1000112" -> "1000217"  [label="DDG: arg"];
"1000223" -> "1000217"  [label="DDG: err_param"];
"1000113" -> "1000217"  [label="DDG: commands"];
"1000216" -> "1000200"  [label="AST: "];
"1000383" -> "1000216"  [label="CFG: "];
"1000216" -> "1000383"  [label="DDG: <RET>"];
"1000268" -> "1000266"  [label="AST: "];
"1000268" -> "1000271"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000270" -> "1000268"  [label="AST: "];
"1000271" -> "1000268"  [label="AST: "];
"1000266" -> "1000268"  [label="CFG: "];
"1000268" -> "1000383"  [label="DDG: asoc"];
"1000268" -> "1000383"  [label="DDG: asconf_ack"];
"1000268" -> "1000266"  [label="DDG: asoc"];
"1000268" -> "1000266"  [label="DDG: asconf_ack"];
"1000110" -> "1000268"  [label="DDG: asoc"];
"1000173" -> "1000268"  [label="DDG: asconf_ack"];
"1000266" -> "1000265"  [label="AST: "];
"1000267" -> "1000266"  [label="AST: "];
"1000274" -> "1000266"  [label="CFG: "];
"1000266" -> "1000383"  [label="DDG: abort"];
"1000266" -> "1000383"  [label="DDG: sctp_make_abort(asoc, asconf_ack,\n\t\t\t\t\tsizeof(sctp_errhdr_t))"];
"1000266" -> "1000276"  [label="DDG: abort"];
"1000276" -> "1000275"  [label="AST: "];
"1000276" -> "1000279"  [label="CFG: "];
"1000277" -> "1000276"  [label="AST: "];
"1000278" -> "1000276"  [label="AST: "];
"1000279" -> "1000276"  [label="AST: "];
"1000281" -> "1000276"  [label="CFG: "];
"1000276" -> "1000383"  [label="DDG: sctp_init_cause(abort, SCTP_ERROR_ASCONF_ACK, 0)"];
"1000276" -> "1000283"  [label="DDG: abort"];
"1000276" -> "1000302"  [label="DDG: SCTP_ERROR_ASCONF_ACK"];
"1000283" -> "1000280"  [label="AST: "];
"1000283" -> "1000284"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000280" -> "1000283"  [label="CFG: "];
"1000283" -> "1000383"  [label="DDG: abort"];
"1000283" -> "1000280"  [label="DDG: abort"];
"1000280" -> "1000275"  [label="AST: "];
"1000281" -> "1000280"  [label="AST: "];
"1000282" -> "1000280"  [label="AST: "];
"1000286" -> "1000280"  [label="CFG: "];
"1000280" -> "1000383"  [label="DDG: SCTP_CMD_REPLY"];
"1000280" -> "1000383"  [label="DDG: sctp_add_cmd_sf(commands, SCTP_CMD_REPLY,\n\t\t\t\t\tSCTP_CHUNK(abort))"];
"1000280" -> "1000383"  [label="DDG: SCTP_CHUNK(abort)"];
"1000113" -> "1000280"  [label="DDG: commands"];
"1000280" -> "1000285"  [label="DDG: commands"];
"1000285" -> "1000265"  [label="AST: "];
"1000285" -> "1000288"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000285"  [label="AST: "];
"1000288" -> "1000285"  [label="AST: "];
"1000291" -> "1000285"  [label="CFG: "];
"1000285" -> "1000383"  [label="DDG: sctp_add_cmd_sf(commands, SCTP_CMD_TIMER_STOP,\n\t\t\t\tSCTP_TO(SCTP_EVENT_TIMEOUT_T4_RTO))"];
"1000285" -> "1000383"  [label="DDG: SCTP_CMD_TIMER_STOP"];
"1000285" -> "1000383"  [label="DDG: SCTP_TO(SCTP_EVENT_TIMEOUT_T4_RTO)"];
"1000113" -> "1000285"  [label="DDG: commands"];
"1000288" -> "1000285"  [label="DDG: SCTP_EVENT_TIMEOUT_T4_RTO"];
"1000285" -> "1000290"  [label="DDG: commands"];
"1000290" -> "1000265"  [label="AST: "];
"1000290" -> "1000293"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000292" -> "1000290"  [label="AST: "];
"1000293" -> "1000290"  [label="AST: "];
"1000295" -> "1000290"  [label="CFG: "];
"1000290" -> "1000383"  [label="DDG: SCTP_CMD_DISCARD_PACKET"];
"1000290" -> "1000383"  [label="DDG: sctp_add_cmd_sf(commands, SCTP_CMD_DISCARD_PACKET, SCTP_NULL())"];
"1000290" -> "1000383"  [label="DDG: SCTP_NULL()"];
"1000113" -> "1000290"  [label="DDG: commands"];
"1000290" -> "1000294"  [label="DDG: commands"];
"1000294" -> "1000265"  [label="AST: "];
"1000294" -> "1000297"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000296" -> "1000294"  [label="AST: "];
"1000297" -> "1000294"  [label="AST: "];
"1000300" -> "1000294"  [label="CFG: "];
"1000294" -> "1000383"  [label="DDG: sctp_add_cmd_sf(commands, SCTP_CMD_SET_SK_ERR,\n\t\t\t\tSCTP_ERROR(ECONNABORTED))"];
"1000294" -> "1000383"  [label="DDG: SCTP_CMD_SET_SK_ERR"];
"1000294" -> "1000383"  [label="DDG: SCTP_ERROR(ECONNABORTED)"];
"1000113" -> "1000294"  [label="DDG: commands"];
"1000297" -> "1000294"  [label="DDG: ECONNABORTED"];
"1000294" -> "1000299"  [label="DDG: commands"];
"1000299" -> "1000265"  [label="AST: "];
"1000299" -> "1000302"  [label="CFG: "];
"1000300" -> "1000299"  [label="AST: "];
"1000301" -> "1000299"  [label="AST: "];
"1000302" -> "1000299"  [label="AST: "];
"1000305" -> "1000299"  [label="CFG: "];
"1000299" -> "1000383"  [label="DDG: sctp_add_cmd_sf(commands, SCTP_CMD_ASSOC_FAILED,\n\t\t\t\tSCTP_PERR(SCTP_ERROR_ASCONF_ACK))"];
"1000299" -> "1000383"  [label="DDG: SCTP_CMD_ASSOC_FAILED"];
"1000299" -> "1000383"  [label="DDG: SCTP_PERR(SCTP_ERROR_ASCONF_ACK)"];
"1000299" -> "1000383"  [label="DDG: commands"];
"1000113" -> "1000299"  [label="DDG: commands"];
"1000302" -> "1000299"  [label="DDG: SCTP_ERROR_ASCONF_ACK"];
"1000302" -> "1000303"  [label="CFG: "];
"1000303" -> "1000302"  [label="AST: "];
"1000302" -> "1000383"  [label="DDG: SCTP_ERROR_ASCONF_ACK"];
"1000329" -> "1000328"  [label="AST: "];
"1000329" -> "1000331"  [label="CFG: "];
"1000330" -> "1000329"  [label="AST: "];
"1000331" -> "1000329"  [label="AST: "];
"1000332" -> "1000329"  [label="CFG: "];
"1000329" -> "1000383"  [label="DDG: asoc"];
"1000329" -> "1000328"  [label="DDG: asoc"];
"1000110" -> "1000329"  [label="DDG: asoc"];
"1000329" -> "1000342"  [label="DDG: asoc"];
"1000328" -> "1000327"  [label="AST: "];
"1000328" -> "1000332"  [label="CFG: "];
"1000332" -> "1000328"  [label="AST: "];
"1000327" -> "1000328"  [label="CFG: "];
"1000328" -> "1000383"  [label="DDG: asconf_ack"];
"1000328" -> "1000383"  [label="DDG: (struct sctp_association *)asoc"];
"1000328" -> "1000327"  [label="DDG: (struct sctp_association *)asoc"];
"1000328" -> "1000327"  [label="DDG: asconf_ack"];
"1000173" -> "1000328"  [label="DDG: asconf_ack"];
"1000328" -> "1000342"  [label="DDG: asconf_ack"];
"1000327" -> "1000326"  [label="AST: "];
"1000335" -> "1000327"  [label="CFG: "];
"1000341" -> "1000327"  [label="CFG: "];
"1000327" -> "1000383"  [label="DDG: sctp_process_asconf_ack((struct sctp_association *)asoc,\n\t\t\t\t\t     asconf_ack)"];
"1000327" -> "1000383"  [label="DDG: !sctp_process_asconf_ack((struct sctp_association *)asoc,\n\t\t\t\t\t     asconf_ack)"];
"1000342" -> "1000340"  [label="AST: "];
"1000342" -> "1000345"  [label="CFG: "];
"1000343" -> "1000342"  [label="AST: "];
"1000344" -> "1000342"  [label="AST: "];
"1000345" -> "1000342"  [label="AST: "];
"1000340" -> "1000342"  [label="CFG: "];
"1000342" -> "1000383"  [label="DDG: asconf_ack"];
"1000342" -> "1000383"  [label="DDG: asoc"];
"1000342" -> "1000340"  [label="DDG: asoc"];
"1000342" -> "1000340"  [label="DDG: asconf_ack"];
"1000110" -> "1000342"  [label="DDG: asoc"];
"1000340" -> "1000320"  [label="AST: "];
"1000341" -> "1000340"  [label="AST: "];
"1000348" -> "1000340"  [label="CFG: "];
"1000340" -> "1000383"  [label="DDG: sctp_make_abort(asoc, asconf_ack,\n\t\t\t\t\tsizeof(sctp_errhdr_t))"];
"1000340" -> "1000383"  [label="DDG: abort"];
"1000340" -> "1000350"  [label="DDG: abort"];
"1000350" -> "1000349"  [label="AST: "];
"1000350" -> "1000353"  [label="CFG: "];
"1000351" -> "1000350"  [label="AST: "];
"1000352" -> "1000350"  [label="AST: "];
"1000353" -> "1000350"  [label="AST: "];
"1000355" -> "1000350"  [label="CFG: "];
"1000350" -> "1000383"  [label="DDG: sctp_init_cause(abort, SCTP_ERROR_RSRC_LOW, 0)"];
"1000350" -> "1000383"  [label="DDG: SCTP_ERROR_RSRC_LOW"];
"1000350" -> "1000357"  [label="DDG: abort"];
"1000357" -> "1000354"  [label="AST: "];
"1000357" -> "1000358"  [label="CFG: "];
"1000358" -> "1000357"  [label="AST: "];
"1000354" -> "1000357"  [label="CFG: "];
"1000357" -> "1000383"  [label="DDG: abort"];
"1000357" -> "1000354"  [label="DDG: abort"];
"1000354" -> "1000349"  [label="AST: "];
"1000355" -> "1000354"  [label="AST: "];
"1000356" -> "1000354"  [label="AST: "];
"1000360" -> "1000354"  [label="CFG: "];
"1000354" -> "1000383"  [label="DDG: SCTP_CMD_REPLY"];
"1000354" -> "1000383"  [label="DDG: SCTP_CHUNK(abort)"];
"1000354" -> "1000383"  [label="DDG: sctp_add_cmd_sf(commands, SCTP_CMD_REPLY,\n\t\t\t\t\tSCTP_CHUNK(abort))"];
"1000321" -> "1000354"  [label="DDG: commands"];
"1000113" -> "1000354"  [label="DDG: commands"];
"1000354" -> "1000359"  [label="DDG: commands"];
"1000359" -> "1000320"  [label="AST: "];
"1000359" -> "1000362"  [label="CFG: "];
"1000360" -> "1000359"  [label="AST: "];
"1000361" -> "1000359"  [label="AST: "];
"1000362" -> "1000359"  [label="AST: "];
"1000364" -> "1000359"  [label="CFG: "];
"1000359" -> "1000383"  [label="DDG: SCTP_CMD_DISCARD_PACKET"];
"1000359" -> "1000383"  [label="DDG: SCTP_NULL()"];
"1000359" -> "1000383"  [label="DDG: sctp_add_cmd_sf(commands, SCTP_CMD_DISCARD_PACKET, SCTP_NULL())"];
"1000321" -> "1000359"  [label="DDG: commands"];
"1000113" -> "1000359"  [label="DDG: commands"];
"1000359" -> "1000363"  [label="DDG: commands"];
"1000363" -> "1000320"  [label="AST: "];
"1000363" -> "1000366"  [label="CFG: "];
"1000364" -> "1000363"  [label="AST: "];
"1000365" -> "1000363"  [label="AST: "];
"1000366" -> "1000363"  [label="AST: "];
"1000369" -> "1000363"  [label="CFG: "];
"1000363" -> "1000383"  [label="DDG: SCTP_CMD_SET_SK_ERR"];
"1000363" -> "1000383"  [label="DDG: SCTP_ERROR(ECONNABORTED)"];
"1000363" -> "1000383"  [label="DDG: sctp_add_cmd_sf(commands, SCTP_CMD_SET_SK_ERR,\n\t\t\t\tSCTP_ERROR(ECONNABORTED))"];
"1000113" -> "1000363"  [label="DDG: commands"];
"1000366" -> "1000363"  [label="DDG: ECONNABORTED"];
"1000363" -> "1000368"  [label="DDG: commands"];
"1000368" -> "1000320"  [label="AST: "];
"1000368" -> "1000371"  [label="CFG: "];
"1000369" -> "1000368"  [label="AST: "];
"1000370" -> "1000368"  [label="AST: "];
"1000371" -> "1000368"  [label="AST: "];
"1000374" -> "1000368"  [label="CFG: "];
"1000368" -> "1000383"  [label="DDG: commands"];
"1000368" -> "1000383"  [label="DDG: SCTP_CMD_ASSOC_FAILED"];
"1000368" -> "1000383"  [label="DDG: sctp_add_cmd_sf(commands, SCTP_CMD_ASSOC_FAILED,\n\t\t\t\tSCTP_PERR(SCTP_ERROR_ASCONF_ACK))"];
"1000368" -> "1000383"  [label="DDG: SCTP_PERR(SCTP_ERROR_ASCONF_ACK)"];
"1000113" -> "1000368"  [label="DDG: commands"];
"1000371" -> "1000368"  [label="DDG: SCTP_ERROR_ASCONF_ACK"];
}
