digraph "0_oniguruma_0f7f61ed1b7b697e283e37bd2d731d0bd57adb55@API" {
"1000196" [label="(Call,onig_free(*reg))"];
"1000184" [label="(Call,onig_compile(*reg, cpat, cpat_end, einfo))"];
"1000162" [label="(Call,onig_reg_init(*reg, ci->option, ci->case_fold_flag, ci->target_enc,\n                    ci->syntax))"];
"1000152" [label="(Call,IS_NULL(*reg))"];
"1000143" [label="(Call,*reg = (regex_t* )xmalloc(sizeof(regex_t)))"];
"1000146" [label="(Call,(regex_t* )xmalloc(sizeof(regex_t)))"];
"1000121" [label="(Call,ci->pattern_enc != ci->target_enc)"];
"1000133" [label="(Call,cpat     = (UChar* )pattern)"];
"1000135" [label="(Call,(UChar* )pattern)"];
"1000102" [label="(MethodParameterIn,const UChar* pattern)"];
"1000138" [label="(Call,cpat_end = (UChar* )pattern_end)"];
"1000140" [label="(Call,(UChar* )pattern_end)"];
"1000103" [label="(MethodParameterIn,const UChar* pattern_end)"];
"1000111" [label="(Call,IS_NOT_NULL(einfo))"];
"1000105" [label="(MethodParameterIn,OnigErrorInfo* einfo)"];
"1000121" [label="(Call,ci->pattern_enc != ci->target_enc)"];
"1000160" [label="(Call,r = onig_reg_init(*reg, ci->option, ci->case_fold_flag, ci->target_enc,\n                    ci->syntax))"];
"1000138" [label="(Call,cpat_end = (UChar* )pattern_end)"];
"1000153" [label="(Call,*reg)"];
"1000110" [label="(ControlStructure,if (IS_NOT_NULL(einfo)))"];
"1000185" [label="(Call,*reg)"];
"1000157" [label="(Identifier,r)"];
"1000151" [label="(ControlStructure,if (IS_NULL(*reg)))"];
"1000187" [label="(Identifier,cpat)"];
"1000148" [label="(Call,xmalloc(sizeof(regex_t)))"];
"1000145" [label="(Identifier,reg)"];
"1000201" [label="(Identifier,reg)"];
"1000106" [label="(Block,)"];
"1000130" [label="(Identifier,ONIGERR_NOT_SUPPORTED_ENCODING_COMBINATION)"];
"1000132" [label="(Block,)"];
"1000105" [label="(MethodParameterIn,OnigErrorInfo* einfo)"];
"1000168" [label="(Call,ci->case_fold_flag)"];
"1000146" [label="(Call,(regex_t* )xmalloc(sizeof(regex_t)))"];
"1000140" [label="(Call,(UChar* )pattern_end)"];
"1000196" [label="(Call,onig_free(*reg))"];
"1000162" [label="(Call,onig_reg_init(*reg, ci->option, ci->case_fold_flag, ci->target_enc,\n                    ci->syntax))"];
"1000171" [label="(Call,ci->target_enc)"];
"1000103" [label="(MethodParameterIn,const UChar* pattern_end)"];
"1000115" [label="(Identifier,einfo)"];
"1000194" [label="(Block,)"];
"1000122" [label="(Call,ci->pattern_enc)"];
"1000161" [label="(Identifier,r)"];
"1000137" [label="(Identifier,pattern)"];
"1000135" [label="(Call,(UChar* )pattern)"];
"1000112" [label="(Identifier,einfo)"];
"1000205" [label="(Call,cpat != pattern)"];
"1000111" [label="(Call,IS_NOT_NULL(einfo))"];
"1000102" [label="(MethodParameterIn,const UChar* pattern)"];
"1000174" [label="(Call,ci->syntax)"];
"1000212" [label="(MethodReturn,RET)"];
"1000133" [label="(Call,cpat     = (UChar* )pattern)"];
"1000188" [label="(Identifier,cpat_end)"];
"1000197" [label="(Call,*reg)"];
"1000144" [label="(Call,*reg)"];
"1000184" [label="(Call,onig_compile(*reg, cpat, cpat_end, einfo))"];
"1000120" [label="(ControlStructure,if (ci->pattern_enc != ci->target_enc))"];
"1000139" [label="(Identifier,cpat_end)"];
"1000142" [label="(Identifier,pattern_end)"];
"1000163" [label="(Call,*reg)"];
"1000154" [label="(Identifier,reg)"];
"1000182" [label="(Call,r = onig_compile(*reg, cpat, cpat_end, einfo))"];
"1000123" [label="(Identifier,ci)"];
"1000152" [label="(Call,IS_NULL(*reg))"];
"1000165" [label="(Call,ci->option)"];
"1000189" [label="(Identifier,einfo)"];
"1000143" [label="(Call,*reg = (regex_t* )xmalloc(sizeof(regex_t)))"];
"1000125" [label="(Call,ci->target_enc)"];
"1000134" [label="(Identifier,cpat)"];
"1000196" -> "1000194"  [label="AST: "];
"1000196" -> "1000197"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000201" -> "1000196"  [label="CFG: "];
"1000196" -> "1000212"  [label="DDG: onig_free(*reg)"];
"1000184" -> "1000196"  [label="DDG: *reg"];
"1000162" -> "1000196"  [label="DDG: *reg"];
"1000184" -> "1000182"  [label="AST: "];
"1000184" -> "1000189"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000187" -> "1000184"  [label="AST: "];
"1000188" -> "1000184"  [label="AST: "];
"1000189" -> "1000184"  [label="AST: "];
"1000182" -> "1000184"  [label="CFG: "];
"1000184" -> "1000212"  [label="DDG: *reg"];
"1000184" -> "1000212"  [label="DDG: cpat_end"];
"1000184" -> "1000212"  [label="DDG: einfo"];
"1000184" -> "1000182"  [label="DDG: *reg"];
"1000184" -> "1000182"  [label="DDG: cpat"];
"1000184" -> "1000182"  [label="DDG: cpat_end"];
"1000184" -> "1000182"  [label="DDG: einfo"];
"1000162" -> "1000184"  [label="DDG: *reg"];
"1000133" -> "1000184"  [label="DDG: cpat"];
"1000138" -> "1000184"  [label="DDG: cpat_end"];
"1000111" -> "1000184"  [label="DDG: einfo"];
"1000105" -> "1000184"  [label="DDG: einfo"];
"1000184" -> "1000205"  [label="DDG: cpat"];
"1000162" -> "1000160"  [label="AST: "];
"1000162" -> "1000174"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000165" -> "1000162"  [label="AST: "];
"1000168" -> "1000162"  [label="AST: "];
"1000171" -> "1000162"  [label="AST: "];
"1000174" -> "1000162"  [label="AST: "];
"1000160" -> "1000162"  [label="CFG: "];
"1000162" -> "1000212"  [label="DDG: ci->case_fold_flag"];
"1000162" -> "1000212"  [label="DDG: ci->syntax"];
"1000162" -> "1000212"  [label="DDG: ci->target_enc"];
"1000162" -> "1000212"  [label="DDG: ci->option"];
"1000162" -> "1000160"  [label="DDG: ci->case_fold_flag"];
"1000162" -> "1000160"  [label="DDG: *reg"];
"1000162" -> "1000160"  [label="DDG: ci->syntax"];
"1000162" -> "1000160"  [label="DDG: ci->option"];
"1000162" -> "1000160"  [label="DDG: ci->target_enc"];
"1000152" -> "1000162"  [label="DDG: *reg"];
"1000121" -> "1000162"  [label="DDG: ci->target_enc"];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000153"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000157" -> "1000152"  [label="CFG: "];
"1000161" -> "1000152"  [label="CFG: "];
"1000152" -> "1000212"  [label="DDG: IS_NULL(*reg)"];
"1000152" -> "1000212"  [label="DDG: *reg"];
"1000143" -> "1000152"  [label="DDG: *reg"];
"1000143" -> "1000106"  [label="AST: "];
"1000143" -> "1000146"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000146" -> "1000143"  [label="AST: "];
"1000154" -> "1000143"  [label="CFG: "];
"1000143" -> "1000212"  [label="DDG: (regex_t* )xmalloc(sizeof(regex_t))"];
"1000146" -> "1000143"  [label="DDG: xmalloc(sizeof(regex_t))"];
"1000146" -> "1000148"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000146" -> "1000212"  [label="DDG: xmalloc(sizeof(regex_t))"];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000125"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000125" -> "1000121"  [label="AST: "];
"1000130" -> "1000121"  [label="CFG: "];
"1000134" -> "1000121"  [label="CFG: "];
"1000121" -> "1000212"  [label="DDG: ci->target_enc"];
"1000121" -> "1000212"  [label="DDG: ci->pattern_enc != ci->target_enc"];
"1000121" -> "1000212"  [label="DDG: ci->pattern_enc"];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000139" -> "1000133"  [label="CFG: "];
"1000133" -> "1000212"  [label="DDG: (UChar* )pattern"];
"1000135" -> "1000133"  [label="DDG: pattern"];
"1000133" -> "1000205"  [label="DDG: cpat"];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000102" -> "1000135"  [label="DDG: pattern"];
"1000135" -> "1000205"  [label="DDG: pattern"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000212"  [label="DDG: pattern"];
"1000102" -> "1000205"  [label="DDG: pattern"];
"1000138" -> "1000132"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000145" -> "1000138"  [label="CFG: "];
"1000138" -> "1000212"  [label="DDG: cpat_end"];
"1000138" -> "1000212"  [label="DDG: (UChar* )pattern_end"];
"1000140" -> "1000138"  [label="DDG: pattern_end"];
"1000140" -> "1000142"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000142" -> "1000140"  [label="AST: "];
"1000140" -> "1000212"  [label="DDG: pattern_end"];
"1000103" -> "1000140"  [label="DDG: pattern_end"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000212"  [label="DDG: pattern_end"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000112"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000115" -> "1000111"  [label="CFG: "];
"1000123" -> "1000111"  [label="CFG: "];
"1000111" -> "1000212"  [label="DDG: einfo"];
"1000111" -> "1000212"  [label="DDG: IS_NOT_NULL(einfo)"];
"1000105" -> "1000111"  [label="DDG: einfo"];
"1000105" -> "1000100"  [label="AST: "];
"1000105" -> "1000212"  [label="DDG: einfo"];
}
