digraph "0_oniguruma_0f7f61ed1b7b697e283e37bd2d731d0bd57adb55@pointer" {
"1000162" [label="(Call,onig_reg_init(*reg, ci->option, ci->case_fold_flag, ci->target_enc,\n                    ci->syntax))"];
"1000152" [label="(Call,IS_NULL(*reg))"];
"1000143" [label="(Call,*reg = (regex_t* )xmalloc(sizeof(regex_t)))"];
"1000146" [label="(Call,(regex_t* )xmalloc(sizeof(regex_t)))"];
"1000121" [label="(Call,ci->pattern_enc != ci->target_enc)"];
"1000160" [label="(Call,r = onig_reg_init(*reg, ci->option, ci->case_fold_flag, ci->target_enc,\n                    ci->syntax))"];
"1000178" [label="(Call,r != 0)"];
"1000210" [label="(Return,return r;)"];
"1000184" [label="(Call,onig_compile(*reg, cpat, cpat_end, einfo))"];
"1000182" [label="(Call,r = onig_compile(*reg, cpat, cpat_end, einfo))"];
"1000191" [label="(Call,r != 0)"];
"1000196" [label="(Call,onig_free(*reg))"];
"1000205" [label="(Call,cpat != pattern)"];
"1000208" [label="(Call,xfree(cpat))"];
"1000121" [label="(Call,ci->pattern_enc != ci->target_enc)"];
"1000160" [label="(Call,r = onig_reg_init(*reg, ci->option, ci->case_fold_flag, ci->target_enc,\n                    ci->syntax))"];
"1000138" [label="(Call,cpat_end = (UChar* )pattern_end)"];
"1000193" [label="(Literal,0)"];
"1000195" [label="(JumpTarget,err:)"];
"1000206" [label="(Identifier,cpat)"];
"1000204" [label="(ControlStructure,if (cpat != pattern))"];
"1000208" [label="(Call,xfree(cpat))"];
"1000153" [label="(Call,*reg)"];
"1000185" [label="(Call,*reg)"];
"1000157" [label="(Identifier,r)"];
"1000151" [label="(ControlStructure,if (IS_NULL(*reg)))"];
"1000211" [label="(Identifier,r)"];
"1000187" [label="(Identifier,cpat)"];
"1000179" [label="(Identifier,r)"];
"1000148" [label="(Call,xmalloc(sizeof(regex_t)))"];
"1000183" [label="(Identifier,r)"];
"1000178" [label="(Call,r != 0)"];
"1000201" [label="(Identifier,reg)"];
"1000106" [label="(Block,)"];
"1000130" [label="(Identifier,ONIGERR_NOT_SUPPORTED_ENCODING_COMBINATION)"];
"1000177" [label="(ControlStructure,if (r != 0))"];
"1000146" [label="(Call,(regex_t* )xmalloc(sizeof(regex_t)))"];
"1000168" [label="(Call,ci->case_fold_flag)"];
"1000180" [label="(Literal,0)"];
"1000105" [label="(MethodParameterIn,OnigErrorInfo* einfo)"];
"1000162" [label="(Call,onig_reg_init(*reg, ci->option, ci->case_fold_flag, ci->target_enc,\n                    ci->syntax))"];
"1000171" [label="(Call,ci->target_enc)"];
"1000196" [label="(Call,onig_free(*reg))"];
"1000122" [label="(Call,ci->pattern_enc)"];
"1000194" [label="(Block,)"];
"1000161" [label="(Identifier,r)"];
"1000135" [label="(Call,(UChar* )pattern)"];
"1000205" [label="(Call,cpat != pattern)"];
"1000156" [label="(Call,r = ONIGERR_MEMORY)"];
"1000111" [label="(Call,IS_NOT_NULL(einfo))"];
"1000209" [label="(Identifier,cpat)"];
"1000102" [label="(MethodParameterIn,const UChar* pattern)"];
"1000174" [label="(Call,ci->syntax)"];
"1000212" [label="(MethodReturn,RET)"];
"1000133" [label="(Call,cpat     = (UChar* )pattern)"];
"1000188" [label="(Identifier,cpat_end)"];
"1000181" [label="(ControlStructure,goto err;)"];
"1000197" [label="(Call,*reg)"];
"1000210" [label="(Return,return r;)"];
"1000144" [label="(Call,*reg)"];
"1000184" [label="(Call,onig_compile(*reg, cpat, cpat_end, einfo))"];
"1000120" [label="(ControlStructure,if (ci->pattern_enc != ci->target_enc))"];
"1000163" [label="(Call,*reg)"];
"1000154" [label="(Identifier,reg)"];
"1000182" [label="(Call,r = onig_compile(*reg, cpat, cpat_end, einfo))"];
"1000203" [label="(JumpTarget,err2:)"];
"1000152" [label="(Call,IS_NULL(*reg))"];
"1000165" [label="(Call,ci->option)"];
"1000143" [label="(Call,*reg = (regex_t* )xmalloc(sizeof(regex_t)))"];
"1000125" [label="(Call,ci->target_enc)"];
"1000191" [label="(Call,r != 0)"];
"1000189" [label="(Identifier,einfo)"];
"1000190" [label="(ControlStructure,if (r != 0))"];
"1000192" [label="(Identifier,r)"];
"1000207" [label="(Identifier,pattern)"];
"1000134" [label="(Identifier,cpat)"];
"1000162" -> "1000160"  [label="AST: "];
"1000162" -> "1000174"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000165" -> "1000162"  [label="AST: "];
"1000168" -> "1000162"  [label="AST: "];
"1000171" -> "1000162"  [label="AST: "];
"1000174" -> "1000162"  [label="AST: "];
"1000160" -> "1000162"  [label="CFG: "];
"1000162" -> "1000212"  [label="DDG: ci->case_fold_flag"];
"1000162" -> "1000212"  [label="DDG: ci->syntax"];
"1000162" -> "1000212"  [label="DDG: ci->target_enc"];
"1000162" -> "1000212"  [label="DDG: ci->option"];
"1000162" -> "1000160"  [label="DDG: ci->case_fold_flag"];
"1000162" -> "1000160"  [label="DDG: *reg"];
"1000162" -> "1000160"  [label="DDG: ci->syntax"];
"1000162" -> "1000160"  [label="DDG: ci->option"];
"1000162" -> "1000160"  [label="DDG: ci->target_enc"];
"1000152" -> "1000162"  [label="DDG: *reg"];
"1000121" -> "1000162"  [label="DDG: ci->target_enc"];
"1000162" -> "1000184"  [label="DDG: *reg"];
"1000162" -> "1000196"  [label="DDG: *reg"];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000153"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000157" -> "1000152"  [label="CFG: "];
"1000161" -> "1000152"  [label="CFG: "];
"1000152" -> "1000212"  [label="DDG: IS_NULL(*reg)"];
"1000152" -> "1000212"  [label="DDG: *reg"];
"1000143" -> "1000152"  [label="DDG: *reg"];
"1000143" -> "1000106"  [label="AST: "];
"1000143" -> "1000146"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000146" -> "1000143"  [label="AST: "];
"1000154" -> "1000143"  [label="CFG: "];
"1000143" -> "1000212"  [label="DDG: (regex_t* )xmalloc(sizeof(regex_t))"];
"1000146" -> "1000143"  [label="DDG: xmalloc(sizeof(regex_t))"];
"1000146" -> "1000148"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000146" -> "1000212"  [label="DDG: xmalloc(sizeof(regex_t))"];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1000125"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000125" -> "1000121"  [label="AST: "];
"1000130" -> "1000121"  [label="CFG: "];
"1000134" -> "1000121"  [label="CFG: "];
"1000121" -> "1000212"  [label="DDG: ci->target_enc"];
"1000121" -> "1000212"  [label="DDG: ci->pattern_enc != ci->target_enc"];
"1000121" -> "1000212"  [label="DDG: ci->pattern_enc"];
"1000160" -> "1000106"  [label="AST: "];
"1000161" -> "1000160"  [label="AST: "];
"1000179" -> "1000160"  [label="CFG: "];
"1000160" -> "1000212"  [label="DDG: onig_reg_init(*reg, ci->option, ci->case_fold_flag, ci->target_enc,\n                    ci->syntax)"];
"1000160" -> "1000178"  [label="DDG: r"];
"1000178" -> "1000177"  [label="AST: "];
"1000178" -> "1000180"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000180" -> "1000178"  [label="AST: "];
"1000181" -> "1000178"  [label="CFG: "];
"1000183" -> "1000178"  [label="CFG: "];
"1000178" -> "1000212"  [label="DDG: r != 0"];
"1000178" -> "1000212"  [label="DDG: r"];
"1000178" -> "1000210"  [label="DDG: r"];
"1000210" -> "1000106"  [label="AST: "];
"1000210" -> "1000211"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="CFG: "];
"1000210" -> "1000212"  [label="DDG: <RET>"];
"1000211" -> "1000210"  [label="DDG: r"];
"1000156" -> "1000210"  [label="DDG: r"];
"1000191" -> "1000210"  [label="DDG: r"];
"1000184" -> "1000182"  [label="AST: "];
"1000184" -> "1000189"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000187" -> "1000184"  [label="AST: "];
"1000188" -> "1000184"  [label="AST: "];
"1000189" -> "1000184"  [label="AST: "];
"1000182" -> "1000184"  [label="CFG: "];
"1000184" -> "1000212"  [label="DDG: *reg"];
"1000184" -> "1000212"  [label="DDG: cpat_end"];
"1000184" -> "1000212"  [label="DDG: einfo"];
"1000184" -> "1000182"  [label="DDG: *reg"];
"1000184" -> "1000182"  [label="DDG: cpat"];
"1000184" -> "1000182"  [label="DDG: cpat_end"];
"1000184" -> "1000182"  [label="DDG: einfo"];
"1000133" -> "1000184"  [label="DDG: cpat"];
"1000138" -> "1000184"  [label="DDG: cpat_end"];
"1000111" -> "1000184"  [label="DDG: einfo"];
"1000105" -> "1000184"  [label="DDG: einfo"];
"1000184" -> "1000196"  [label="DDG: *reg"];
"1000184" -> "1000205"  [label="DDG: cpat"];
"1000182" -> "1000106"  [label="AST: "];
"1000183" -> "1000182"  [label="AST: "];
"1000192" -> "1000182"  [label="CFG: "];
"1000182" -> "1000212"  [label="DDG: onig_compile(*reg, cpat, cpat_end, einfo)"];
"1000182" -> "1000191"  [label="DDG: r"];
"1000191" -> "1000190"  [label="AST: "];
"1000191" -> "1000193"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000193" -> "1000191"  [label="AST: "];
"1000195" -> "1000191"  [label="CFG: "];
"1000203" -> "1000191"  [label="CFG: "];
"1000191" -> "1000212"  [label="DDG: r != 0"];
"1000191" -> "1000212"  [label="DDG: r"];
"1000196" -> "1000194"  [label="AST: "];
"1000196" -> "1000197"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000201" -> "1000196"  [label="CFG: "];
"1000196" -> "1000212"  [label="DDG: onig_free(*reg)"];
"1000205" -> "1000204"  [label="AST: "];
"1000205" -> "1000207"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000207" -> "1000205"  [label="AST: "];
"1000209" -> "1000205"  [label="CFG: "];
"1000211" -> "1000205"  [label="CFG: "];
"1000205" -> "1000212"  [label="DDG: cpat"];
"1000205" -> "1000212"  [label="DDG: pattern"];
"1000205" -> "1000212"  [label="DDG: cpat != pattern"];
"1000133" -> "1000205"  [label="DDG: cpat"];
"1000135" -> "1000205"  [label="DDG: pattern"];
"1000102" -> "1000205"  [label="DDG: pattern"];
"1000205" -> "1000208"  [label="DDG: cpat"];
"1000208" -> "1000204"  [label="AST: "];
"1000208" -> "1000209"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000211" -> "1000208"  [label="CFG: "];
"1000208" -> "1000212"  [label="DDG: cpat"];
"1000208" -> "1000212"  [label="DDG: xfree(cpat)"];
}
