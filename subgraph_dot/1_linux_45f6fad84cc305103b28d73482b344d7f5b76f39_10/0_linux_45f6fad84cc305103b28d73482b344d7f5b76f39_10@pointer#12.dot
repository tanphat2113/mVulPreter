digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_10@pointer" {
"1000206" [label="(Call,lock_sock(sk))"];
"1000113" [label="(Call,inet6_sk(sk))"];
"1000103" [label="(MethodParameterIn,struct sock *sk)"];
"1000210" [label="(Call,ip6_mc_msfget(sk, &gsf,\n\t\t\t(struct group_filter __user *)optval, optlen))"];
"1000208" [label="(Call,err = ip6_mc_msfget(sk, &gsf,\n\t\t\t(struct group_filter __user *)optval, optlen))"];
"1000220" [label="(Return,return err;)"];
"1000218" [label="(Call,release_sock(sk))"];
"1000817" [label="(Call,sock_net(sk))"];
"1000583" [label="(Call,lock_sock(sk))"];
"1000114" [label="(Identifier,sk)"];
"1000757" [label="(Call,inet_sk(sk))"];
"1000186" [label="(Call,copy_from_user(&gsf, optval, GROUP_FILTER_SIZE(0)))"];
"1000221" [label="(Identifier,err)"];
"1000217" [label="(Identifier,optlen)"];
"1000214" [label="(Call,(struct group_filter __user *)optval)"];
"1000113" [label="(Call,inet6_sk(sk))"];
"1000219" [label="(Identifier,sk)"];
"1000107" [label="(MethodParameterIn,int __user *optlen)"];
"1000174" [label="(Block,)"];
"1000127" [label="(Call,get_user(len, optlen))"];
"1000111" [label="(Call,*np = inet6_sk(sk))"];
"1000212" [label="(Call,&gsf)"];
"1000209" [label="(Identifier,err)"];
"1000595" [label="(Call,release_sock(sk))"];
"1000220" [label="(Return,return err;)"];
"1000799" [label="(Call,__sk_dst_get(sk))"];
"1000103" [label="(MethodParameterIn,struct sock *sk)"];
"1000207" [label="(Identifier,sk)"];
"1000716" [label="(Call,__sk_dst_get(sk))"];
"1001032" [label="(MethodReturn,static int)"];
"1000489" [label="(Call,__sk_dst_get(sk))"];
"1000259" [label="(Call,ip6_datagram_recv_ctl(sk, &msg, skb))"];
"1000208" [label="(Call,err = ip6_mc_msfget(sk, &gsf,\n\t\t\t(struct group_filter __user *)optval, optlen))"];
"1000264" [label="(Call,release_sock(sk))"];
"1000121" [label="(Call,ip6_mroute_getsockopt(sk, optname, optval, optlen))"];
"1000218" [label="(Call,release_sock(sk))"];
"1000250" [label="(Call,lock_sock(sk))"];
"1000210" [label="(Call,ip6_mc_msfget(sk, &gsf,\n\t\t\t(struct group_filter __user *)optval, optlen))"];
"1000211" [label="(Identifier,sk)"];
"1000587" [label="(Call,ipv6_getsockopt_sticky(sk, np->opt,\n\t\t\t\t\t     optname, optval, len))"];
"1000918" [label="(Call,ipv6_flowlabel_opt_get(sk, &freq, flags))"];
"1000206" [label="(Call,lock_sock(sk))"];
"1000206" -> "1000174"  [label="AST: "];
"1000206" -> "1000207"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000209" -> "1000206"  [label="CFG: "];
"1000206" -> "1001032"  [label="DDG: lock_sock(sk)"];
"1000113" -> "1000206"  [label="DDG: sk"];
"1000103" -> "1000206"  [label="DDG: sk"];
"1000206" -> "1000210"  [label="DDG: sk"];
"1000113" -> "1000111"  [label="AST: "];
"1000113" -> "1000114"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000111" -> "1000113"  [label="CFG: "];
"1000113" -> "1001032"  [label="DDG: sk"];
"1000113" -> "1000111"  [label="DDG: sk"];
"1000103" -> "1000113"  [label="DDG: sk"];
"1000113" -> "1000121"  [label="DDG: sk"];
"1000113" -> "1000250"  [label="DDG: sk"];
"1000113" -> "1000489"  [label="DDG: sk"];
"1000113" -> "1000583"  [label="DDG: sk"];
"1000113" -> "1000716"  [label="DDG: sk"];
"1000113" -> "1000757"  [label="DDG: sk"];
"1000113" -> "1000799"  [label="DDG: sk"];
"1000113" -> "1000817"  [label="DDG: sk"];
"1000113" -> "1000918"  [label="DDG: sk"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1001032"  [label="DDG: sk"];
"1000103" -> "1000121"  [label="DDG: sk"];
"1000103" -> "1000210"  [label="DDG: sk"];
"1000103" -> "1000218"  [label="DDG: sk"];
"1000103" -> "1000250"  [label="DDG: sk"];
"1000103" -> "1000259"  [label="DDG: sk"];
"1000103" -> "1000264"  [label="DDG: sk"];
"1000103" -> "1000489"  [label="DDG: sk"];
"1000103" -> "1000583"  [label="DDG: sk"];
"1000103" -> "1000587"  [label="DDG: sk"];
"1000103" -> "1000595"  [label="DDG: sk"];
"1000103" -> "1000716"  [label="DDG: sk"];
"1000103" -> "1000757"  [label="DDG: sk"];
"1000103" -> "1000799"  [label="DDG: sk"];
"1000103" -> "1000817"  [label="DDG: sk"];
"1000103" -> "1000918"  [label="DDG: sk"];
"1000210" -> "1000208"  [label="AST: "];
"1000210" -> "1000217"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="AST: "];
"1000214" -> "1000210"  [label="AST: "];
"1000217" -> "1000210"  [label="AST: "];
"1000208" -> "1000210"  [label="CFG: "];
"1000210" -> "1001032"  [label="DDG: optlen"];
"1000210" -> "1001032"  [label="DDG: (struct group_filter __user *)optval"];
"1000210" -> "1001032"  [label="DDG: &gsf"];
"1000210" -> "1000208"  [label="DDG: sk"];
"1000210" -> "1000208"  [label="DDG: &gsf"];
"1000210" -> "1000208"  [label="DDG: (struct group_filter __user *)optval"];
"1000210" -> "1000208"  [label="DDG: optlen"];
"1000186" -> "1000210"  [label="DDG: &gsf"];
"1000214" -> "1000210"  [label="DDG: optval"];
"1000127" -> "1000210"  [label="DDG: optlen"];
"1000107" -> "1000210"  [label="DDG: optlen"];
"1000210" -> "1000218"  [label="DDG: sk"];
"1000208" -> "1000174"  [label="AST: "];
"1000209" -> "1000208"  [label="AST: "];
"1000219" -> "1000208"  [label="CFG: "];
"1000208" -> "1001032"  [label="DDG: err"];
"1000208" -> "1001032"  [label="DDG: ip6_mc_msfget(sk, &gsf,\n\t\t\t(struct group_filter __user *)optval, optlen)"];
"1000208" -> "1000220"  [label="DDG: err"];
"1000220" -> "1000174"  [label="AST: "];
"1000220" -> "1000221"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1001032" -> "1000220"  [label="CFG: "];
"1000220" -> "1001032"  [label="DDG: <RET>"];
"1000221" -> "1000220"  [label="DDG: err"];
"1000218" -> "1000174"  [label="AST: "];
"1000218" -> "1000219"  [label="CFG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000221" -> "1000218"  [label="CFG: "];
"1000218" -> "1001032"  [label="DDG: sk"];
"1000218" -> "1001032"  [label="DDG: release_sock(sk)"];
}
