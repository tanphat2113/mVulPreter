digraph "0_radare2_f85bc674b2a2256a364fe796351bc1971e106005@pointer" {
"1000339" [label="(Call,is_true (value))"];
"1000324" [label="(Call,value && is_bool (value))"];
"1000317" [label="(Call,r_config_node_new (name, value))"];
"1000126" [label="(Call,r_config_node_get (cfg, name))"];
"1000117" [label="(Call,!cfg)"];
"1000102" [label="(MethodParameterIn,RConfig *cfg)"];
"1000119" [label="(Call,STRNULL (name))"];
"1000103" [label="(MethodParameterIn,const char *name)"];
"1000104" [label="(MethodParameterIn,const char *value)"];
"1000326" [label="(Call,is_bool (value))"];
"1000325" [label="(Identifier,value)"];
"1000317" [label="(Call,r_config_node_new (name, value))"];
"1000338" [label="(Call,is_true (value)? 1: 0)"];
"1000187" [label="(Call,is_true (value))"];
"1000339" [label="(Call,is_true (value))"];
"1000212" [label="(Call,node->value = value)"];
"1000126" [label="(Call,r_config_node_get (cfg, name))"];
"1000324" [label="(Call,value && is_bool (value))"];
"1000422" [label="(MethodReturn,R_API RConfigNode*)"];
"1000200" [label="(Call,*value = strdup (r_str_bool (b)))"];
"1000319" [label="(Identifier,value)"];
"1000327" [label="(Identifier,value)"];
"1000118" [label="(Identifier,cfg)"];
"1000326" [label="(Call,is_bool (value))"];
"1000318" [label="(Identifier,name)"];
"1000340" [label="(Identifier,value)"];
"1000104" [label="(MethodParameterIn,const char *value)"];
"1000102" [label="(MethodParameterIn,RConfig *cfg)"];
"1000241" [label="(Call,node->value == value)"];
"1000287" [label="(Call,r_num_math (cfg->num, value))"];
"1000116" [label="(Call,!cfg || STRNULL (name))"];
"1000371" [label="(Call,eprintf (\"r_config_set: variable '%s' not found\n\", name))"];
"1000120" [label="(Identifier,name)"];
"1000103" [label="(MethodParameterIn,const char *name)"];
"1000268" [label="(Call,strchr (value, '/'))"];
"1000276" [label="(Call,r_num_get (cfg->num, value))"];
"1000331" [label="(Identifier,node)"];
"1000117" [label="(Call,!cfg)"];
"1000323" [label="(ControlStructure,if (value && is_bool (value)))"];
"1000139" [label="(Call,eprintf (\"(error: '%s' config key is read only)\n\", name))"];
"1000345" [label="(Identifier,cfg)"];
"1000258" [label="(Call,strdup (value))"];
"1000119" [label="(Call,STRNULL (name))"];
"1000220" [label="(Call,!value)"];
"1000127" [label="(Identifier,cfg)"];
"1000341" [label="(Literal,1)"];
"1000128" [label="(Identifier,name)"];
"1000342" [label="(Literal,0)"];
"1000124" [label="(Call,node = r_config_node_get (cfg, name))"];
"1000315" [label="(Call,node = r_config_node_new (name, value))"];
"1000339" -> "1000338"  [label="AST: "];
"1000339" -> "1000340"  [label="CFG: "];
"1000340" -> "1000339"  [label="AST: "];
"1000341" -> "1000339"  [label="CFG: "];
"1000342" -> "1000339"  [label="CFG: "];
"1000339" -> "1000422"  [label="DDG: value"];
"1000324" -> "1000339"  [label="DDG: value"];
"1000104" -> "1000339"  [label="DDG: value"];
"1000324" -> "1000323"  [label="AST: "];
"1000324" -> "1000325"  [label="CFG: "];
"1000324" -> "1000326"  [label="CFG: "];
"1000325" -> "1000324"  [label="AST: "];
"1000326" -> "1000324"  [label="AST: "];
"1000331" -> "1000324"  [label="CFG: "];
"1000345" -> "1000324"  [label="CFG: "];
"1000324" -> "1000422"  [label="DDG: is_bool (value)"];
"1000324" -> "1000422"  [label="DDG: value && is_bool (value)"];
"1000324" -> "1000422"  [label="DDG: value"];
"1000317" -> "1000324"  [label="DDG: value"];
"1000326" -> "1000324"  [label="DDG: value"];
"1000104" -> "1000324"  [label="DDG: value"];
"1000317" -> "1000315"  [label="AST: "];
"1000317" -> "1000319"  [label="CFG: "];
"1000318" -> "1000317"  [label="AST: "];
"1000319" -> "1000317"  [label="AST: "];
"1000315" -> "1000317"  [label="CFG: "];
"1000317" -> "1000422"  [label="DDG: name"];
"1000317" -> "1000422"  [label="DDG: value"];
"1000317" -> "1000315"  [label="DDG: name"];
"1000317" -> "1000315"  [label="DDG: value"];
"1000126" -> "1000317"  [label="DDG: name"];
"1000103" -> "1000317"  [label="DDG: name"];
"1000104" -> "1000317"  [label="DDG: value"];
"1000317" -> "1000326"  [label="DDG: value"];
"1000126" -> "1000124"  [label="AST: "];
"1000126" -> "1000128"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000128" -> "1000126"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000126" -> "1000422"  [label="DDG: cfg"];
"1000126" -> "1000422"  [label="DDG: name"];
"1000126" -> "1000124"  [label="DDG: cfg"];
"1000126" -> "1000124"  [label="DDG: name"];
"1000117" -> "1000126"  [label="DDG: cfg"];
"1000102" -> "1000126"  [label="DDG: cfg"];
"1000119" -> "1000126"  [label="DDG: name"];
"1000103" -> "1000126"  [label="DDG: name"];
"1000126" -> "1000139"  [label="DDG: name"];
"1000126" -> "1000371"  [label="DDG: name"];
"1000117" -> "1000116"  [label="AST: "];
"1000117" -> "1000118"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000120" -> "1000117"  [label="CFG: "];
"1000116" -> "1000117"  [label="CFG: "];
"1000117" -> "1000422"  [label="DDG: cfg"];
"1000117" -> "1000116"  [label="DDG: cfg"];
"1000102" -> "1000117"  [label="DDG: cfg"];
"1000102" -> "1000101"  [label="AST: "];
"1000102" -> "1000422"  [label="DDG: cfg"];
"1000119" -> "1000116"  [label="AST: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000116" -> "1000119"  [label="CFG: "];
"1000119" -> "1000422"  [label="DDG: name"];
"1000119" -> "1000116"  [label="DDG: name"];
"1000103" -> "1000119"  [label="DDG: name"];
"1000103" -> "1000101"  [label="AST: "];
"1000103" -> "1000422"  [label="DDG: name"];
"1000103" -> "1000139"  [label="DDG: name"];
"1000103" -> "1000371"  [label="DDG: name"];
"1000104" -> "1000101"  [label="AST: "];
"1000104" -> "1000422"  [label="DDG: value"];
"1000104" -> "1000187"  [label="DDG: value"];
"1000104" -> "1000200"  [label="DDG: value"];
"1000104" -> "1000212"  [label="DDG: value"];
"1000104" -> "1000220"  [label="DDG: value"];
"1000104" -> "1000241"  [label="DDG: value"];
"1000104" -> "1000258"  [label="DDG: value"];
"1000104" -> "1000268"  [label="DDG: value"];
"1000104" -> "1000276"  [label="DDG: value"];
"1000104" -> "1000287"  [label="DDG: value"];
"1000104" -> "1000326"  [label="DDG: value"];
"1000326" -> "1000327"  [label="CFG: "];
"1000327" -> "1000326"  [label="AST: "];
}
