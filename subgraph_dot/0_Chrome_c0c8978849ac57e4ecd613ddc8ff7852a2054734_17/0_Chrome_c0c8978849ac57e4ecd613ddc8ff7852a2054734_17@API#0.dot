digraph "0_Chrome_c0c8978849ac57e4ecd613ddc8ff7852a2054734_17@API" {
"1000127" [label="(Call,std::move(sensor_fusion_algorithm))"];
"1000117" [label="(Call,sensor_fusion_algorithm =\n        std::make_unique<OrientationEulerAnglesFusionAlgorithmUsingQuaternion>(\n            false /* absolute */))"];
"1000119" [label="(Call,std::make_unique<OrientationEulerAnglesFusionAlgorithmUsingQuaternion>(\n            false /* absolute */))"];
"1000121" [label="(Call,OrientationEulerAnglesFusionAlgorithmUsingQuaternion>(\n            false /* absolute */))"];
"1000124" [label="(Call,PlatformSensorFusion::Create(reading_buffer, this,\n                                  std::move(sensor_fusion_algorithm), callback))"];
"1000124" [label="(Call,PlatformSensorFusion::Create(reading_buffer, this,\n                                  std::move(sensor_fusion_algorithm), callback))"];
"1000117" [label="(Call,sensor_fusion_algorithm =\n        std::make_unique<OrientationEulerAnglesFusionAlgorithmUsingQuaternion>(\n            false /* absolute */))"];
"1000115" [label="(Block,)"];
"1000125" [label="(Identifier,reading_buffer)"];
"1000122" [label="(Identifier,OrientationEulerAnglesFusionAlgorithmUsingQuaternion)"];
"1000119" [label="(Call,std::make_unique<OrientationEulerAnglesFusionAlgorithmUsingQuaternion>(\n            false /* absolute */))"];
"1000103" [label="(MethodParameterIn,SensorReadingSharedBuffer* reading_buffer)"];
"1000128" [label="(Identifier,sensor_fusion_algorithm)"];
"1000121" [label="(Call,OrientationEulerAnglesFusionAlgorithmUsingQuaternion>(\n            false /* absolute */))"];
"1000120" [label="(Identifier,std::make_unique)"];
"1000127" [label="(Call,std::move(sensor_fusion_algorithm))"];
"1000126" [label="(Identifier,this)"];
"1000104" [label="(MethodParameterIn,const CreateSensorCallback& callback)"];
"1000129" [label="(Identifier,callback)"];
"1000134" [label="(MethodReturn,void)"];
"1000118" [label="(Identifier,sensor_fusion_algorithm)"];
"1000123" [label="(Identifier,false)"];
"1000127" -> "1000124"  [label="AST: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="CFG: "];
"1000127" -> "1000134"  [label="DDG: sensor_fusion_algorithm"];
"1000127" -> "1000124"  [label="DDG: sensor_fusion_algorithm"];
"1000117" -> "1000127"  [label="DDG: sensor_fusion_algorithm"];
"1000117" -> "1000115"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000125" -> "1000117"  [label="CFG: "];
"1000117" -> "1000134"  [label="DDG: std::make_unique<OrientationEulerAnglesFusionAlgorithmUsingQuaternion>(\n            false /* absolute */)"];
"1000119" -> "1000117"  [label="DDG: std::make_unique"];
"1000119" -> "1000117"  [label="DDG: OrientationEulerAnglesFusionAlgorithmUsingQuaternion>(\n            false /* absolute */)"];
"1000119" -> "1000121"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000119" -> "1000134"  [label="DDG: OrientationEulerAnglesFusionAlgorithmUsingQuaternion>(\n            false /* absolute */)"];
"1000119" -> "1000134"  [label="DDG: std::make_unique"];
"1000121" -> "1000119"  [label="DDG: OrientationEulerAnglesFusionAlgorithmUsingQuaternion"];
"1000121" -> "1000119"  [label="DDG: false"];
"1000121" -> "1000123"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000123" -> "1000121"  [label="AST: "];
"1000121" -> "1000134"  [label="DDG: OrientationEulerAnglesFusionAlgorithmUsingQuaternion"];
"1000121" -> "1000134"  [label="DDG: false"];
"1000124" -> "1000115"  [label="AST: "];
"1000124" -> "1000129"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000129" -> "1000124"  [label="AST: "];
"1000134" -> "1000124"  [label="CFG: "];
"1000124" -> "1000134"  [label="DDG: this"];
"1000124" -> "1000134"  [label="DDG: reading_buffer"];
"1000124" -> "1000134"  [label="DDG: std::move(sensor_fusion_algorithm)"];
"1000124" -> "1000134"  [label="DDG: PlatformSensorFusion::Create(reading_buffer, this,\n                                  std::move(sensor_fusion_algorithm), callback)"];
"1000124" -> "1000134"  [label="DDG: callback"];
"1000103" -> "1000124"  [label="DDG: reading_buffer"];
"1000104" -> "1000124"  [label="DDG: callback"];
}
